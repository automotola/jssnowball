QUnit.config.hidepassed = true;
var Stem = snowballFactory.newStemmer('french').stem;
test("a -> a", function() {deepEqual( Stem("a"), "a");});
test("à -> à", function() {deepEqual( Stem("à"), "à");});
test("abailard -> abailard", function() {deepEqual( Stem("abailard"), "abailard");});
test("abaissait -> abaiss", function() {deepEqual( Stem("abaissait"), "abaiss");});
test("abaissant -> abaiss", function() {deepEqual( Stem("abaissant"), "abaiss");});
test("abaisse -> abaiss", function() {deepEqual( Stem("abaisse"), "abaiss");});
test("abaissé -> abaiss", function() {deepEqual( Stem("abaissé"), "abaiss");});
test("abaissement -> abaissement", function() {deepEqual( Stem("abaissement"), "abaissement");});
test("abaissent -> abaissent", function() {deepEqual( Stem("abaissent"), "abaissent");});
test("abaisser -> abaiss", function() {deepEqual( Stem("abaisser"), "abaiss");});
test("abaisserai -> abaiss", function() {deepEqual( Stem("abaisserai"), "abaiss");});
test("abandon -> abandon", function() {deepEqual( Stem("abandon"), "abandon");});
test("abandonna -> abandon", function() {deepEqual( Stem("abandonna"), "abandon");});
test("abandonnait -> abandon", function() {deepEqual( Stem("abandonnait"), "abandon");});
test("abandonnant -> abandon", function() {deepEqual( Stem("abandonnant"), "abandon");});
test("abandonne -> abandon", function() {deepEqual( Stem("abandonne"), "abandon");});
test("abandonné -> abandon", function() {deepEqual( Stem("abandonné"), "abandon");});
test("abandonnée -> abandon", function() {deepEqual( Stem("abandonnée"), "abandon");});
test("abandonner -> abandon", function() {deepEqual( Stem("abandonner"), "abandon");});
test("abandonnera -> abandon", function() {deepEqual( Stem("abandonnera"), "abandon");});
test("abandonnerait -> abandon", function() {deepEqual( Stem("abandonnerait"), "abandon");});
test("abandonnés -> abandon", function() {deepEqual( Stem("abandonnés"), "abandon");});
test("abandonnez -> abandon", function() {deepEqual( Stem("abandonnez"), "abandon");});
test("abasourdi -> abasourd", function() {deepEqual( Stem("abasourdi"), "abasourd");});
test("abat -> abat", function() {deepEqual( Stem("abat"), "abat");});
test("abattant -> abatt", function() {deepEqual( Stem("abattant"), "abatt");});
test("abattement -> abatt", function() {deepEqual( Stem("abattement"), "abatt");});
test("abattit -> abatt", function() {deepEqual( Stem("abattit"), "abatt");});
test("abattre -> abattr", function() {deepEqual( Stem("abattre"), "abattr");});
test("abbaye -> abbay", function() {deepEqual( Stem("abbaye"), "abbay");});
test("abbé -> abbé", function() {deepEqual( Stem("abbé"), "abbé");});
test("abbés -> abbé", function() {deepEqual( Stem("abbés"), "abbé");});
test("abbesse -> abbess", function() {deepEqual( Stem("abbesse"), "abbess");});
test("abeille -> abeil", function() {deepEqual( Stem("abeille"), "abeil");});
test("abhorrait -> abhorr", function() {deepEqual( Stem("abhorrait"), "abhorr");});
test("abhorre -> abhorr", function() {deepEqual( Stem("abhorre"), "abhorr");});
test("abhorré -> abhorr", function() {deepEqual( Stem("abhorré"), "abhorr");});
test("abîmait -> abîm", function() {deepEqual( Stem("abîmait"), "abîm");});
test("abîme -> abîm", function() {deepEqual( Stem("abîme"), "abîm");});
test("abîmé -> abîm", function() {deepEqual( Stem("abîmé"), "abîm");});
test("abîmée -> abîm", function() {deepEqual( Stem("abîmée"), "abîm");});
test("abject -> abject", function() {deepEqual( Stem("abject"), "abject");});
test("abjurant -> abjur", function() {deepEqual( Stem("abjurant"), "abjur");});
test("ablutions -> ablut", function() {deepEqual( Stem("ablutions"), "ablut");});
test("abnégation -> abneg", function() {deepEqual( Stem("abnégation"), "abneg");});
test("aboiements -> aboi", function() {deepEqual( Stem("aboiements"), "aboi");});
test("aboiera -> aboi", function() {deepEqual( Stem("aboiera"), "aboi");});
test("abolir -> abol", function() {deepEqual( Stem("abolir"), "abol");});
test("abominable -> abomin", function() {deepEqual( Stem("abominable"), "abomin");});
test("abominablement -> abomin", function() {deepEqual( Stem("abominablement"), "abomin");});
test("abominables -> abomin", function() {deepEqual( Stem("abominables"), "abomin");});
test("abomination -> abomin", function() {deepEqual( Stem("abomination"), "abomin");});
test("abondaient -> abond", function() {deepEqual( Stem("abondaient"), "abond");});
test("abondamment -> abond", function() {deepEqual( Stem("abondamment"), "abond");});
test("abondance -> abond", function() {deepEqual( Stem("abondance"), "abond");});
test("abondant -> abond", function() {deepEqual( Stem("abondant"), "abond");});
test("abondante -> abond", function() {deepEqual( Stem("abondante"), "abond");});
test("abonde -> abond", function() {deepEqual( Stem("abonde"), "abond");});
test("abonné -> abon", function() {deepEqual( Stem("abonné"), "abon");});
test("abonnement -> abon", function() {deepEqual( Stem("abonnement"), "abon");});
test("abord -> abord", function() {deepEqual( Stem("abord"), "abord");});
test("aborda -> abord", function() {deepEqual( Stem("aborda"), "abord");});
test("abordaient -> abord", function() {deepEqual( Stem("abordaient"), "abord");});
test("abordait -> abord", function() {deepEqual( Stem("abordait"), "abord");});
test("abordant -> abord", function() {deepEqual( Stem("abordant"), "abord");});
test("abordée -> abord", function() {deepEqual( Stem("abordée"), "abord");});
test("aborder -> abord", function() {deepEqual( Stem("aborder"), "abord");});
test("abordèrent -> abord", function() {deepEqual( Stem("abordèrent"), "abord");});
test("abordés -> abord", function() {deepEqual( Stem("abordés"), "abord");});
test("abords -> abord", function() {deepEqual( Stem("abords"), "abord");});
test("aboutit -> about", function() {deepEqual( Stem("aboutit"), "about");});
test("aboyaient -> aboi", function() {deepEqual( Stem("aboyaient"), "aboi");});
test("aboyèrent -> aboi", function() {deepEqual( Stem("aboyèrent"), "aboi");});
test("abraham -> abraham", function() {deepEqual( Stem("abraham"), "abraham");});
test("abrège -> abreg", function() {deepEqual( Stem("abrège"), "abreg");});
test("abrégé -> abreg", function() {deepEqual( Stem("abrégé"), "abreg");});
test("abrégea -> abreg", function() {deepEqual( Stem("abrégea"), "abreg");});
test("abrégeaient -> abreg", function() {deepEqual( Stem("abrégeaient"), "abreg");});
test("abrégeait -> abreg", function() {deepEqual( Stem("abrégeait"), "abreg");});
test("abrégeant -> abreg", function() {deepEqual( Stem("abrégeant"), "abreg");});
test("abréger -> abreg", function() {deepEqual( Stem("abréger"), "abreg");});
test("abrégera -> abreg", function() {deepEqual( Stem("abrégera"), "abreg");});
test("abrégerait -> abreg", function() {deepEqual( Stem("abrégerait"), "abreg");});
test("abrégés -> abreg", function() {deepEqual( Stem("abrégés"), "abreg");});
test("abreuvoir -> abreuvoir", function() {deepEqual( Stem("abreuvoir"), "abreuvoir");});
test("abréviations -> abrévi", function() {deepEqual( Stem("abréviations"), "abrévi");});
test("abri -> abri", function() {deepEqual( Stem("abri"), "abri");});
test("abritât -> abrit", function() {deepEqual( Stem("abritât"), "abrit");});
test("abrité -> abrit", function() {deepEqual( Stem("abrité"), "abrit");});
test("abritée -> abrit", function() {deepEqual( Stem("abritée"), "abrit");});
test("abritent -> abritent", function() {deepEqual( Stem("abritent"), "abritent");});
test("abrités -> abrit", function() {deepEqual( Stem("abrités"), "abrit");});
test("abrutis -> abrut", function() {deepEqual( Stem("abrutis"), "abrut");});
test("abrutissant -> abrut", function() {deepEqual( Stem("abrutissant"), "abrut");});
test("abrutissement -> abrut", function() {deepEqual( Stem("abrutissement"), "abrut");});
test("abruzze -> abruzz", function() {deepEqual( Stem("abruzze"), "abruzz");});
test("absence -> absenc", function() {deepEqual( Stem("absence"), "absenc");});
test("absences -> absenc", function() {deepEqual( Stem("absences"), "absenc");});
test("absent -> absent", function() {deepEqual( Stem("absent"), "absent");});
test("absentait -> absent", function() {deepEqual( Stem("absentait"), "absent");});
test("absente -> absent", function() {deepEqual( Stem("absente"), "absent");});
test("absents -> absent", function() {deepEqual( Stem("absents"), "absent");});
test("absolu -> absolu", function() {deepEqual( Stem("absolu"), "absolu");});
test("absolue -> absolu", function() {deepEqual( Stem("absolue"), "absolu");});
test("absolument -> absolu", function() {deepEqual( Stem("absolument"), "absolu");});
test("absolus -> absolus", function() {deepEqual( Stem("absolus"), "absolus");});
test("absolutisme -> absolut", function() {deepEqual( Stem("absolutisme"), "absolut");});
test("absorba -> absorb", function() {deepEqual( Stem("absorba"), "absorb");});
test("absorbaient -> absorb", function() {deepEqual( Stem("absorbaient"), "absorb");});
test("absorbait -> absorb", function() {deepEqual( Stem("absorbait"), "absorb");});
test("absorbé -> absorb", function() {deepEqual( Stem("absorbé"), "absorb");});
test("absorbée -> absorb", function() {deepEqual( Stem("absorbée"), "absorb");});
test("absorbés -> absorb", function() {deepEqual( Stem("absorbés"), "absorb");});
test("absoudre -> absoudr", function() {deepEqual( Stem("absoudre"), "absoudr");});
test("abstenait -> absten", function() {deepEqual( Stem("abstenait"), "absten");});
test("abstenez -> absten", function() {deepEqual( Stem("abstenez"), "absten");});
test("abstiendrai -> abstiendr", function() {deepEqual( Stem("abstiendrai"), "abstiendr");});
test("abstraction -> abstract", function() {deepEqual( Stem("abstraction"), "abstract");});
test("abstrait -> abstrait", function() {deepEqual( Stem("abstrait"), "abstrait");});
test("absurde -> absurd", function() {deepEqual( Stem("absurde"), "absurd");});
test("absurdes -> absurd", function() {deepEqual( Stem("absurdes"), "absurd");});
test("absurdité -> absurd", function() {deepEqual( Stem("absurdité"), "absurd");});
test("absurdités -> absurd", function() {deepEqual( Stem("absurdités"), "absurd");});
test("abus -> abus", function() {deepEqual( Stem("abus"), "abus");});
test("abusa -> abus", function() {deepEqual( Stem("abusa"), "abus");});
test("abusait -> abus", function() {deepEqual( Stem("abusait"), "abus");});
test("abusant -> abus", function() {deepEqual( Stem("abusant"), "abus");});
test("abuse -> abus", function() {deepEqual( Stem("abuse"), "abus");});
test("abusé -> abus", function() {deepEqual( Stem("abusé"), "abus");});
test("abuser -> abus", function() {deepEqual( Stem("abuser"), "abus");});
test("abusez -> abus", function() {deepEqual( Stem("abusez"), "abus");});
test("abusif -> abus", function() {deepEqual( Stem("abusif"), "abus");});
test("acabit -> acab", function() {deepEqual( Stem("acabit"), "acab");});
test("acacia -> acaci", function() {deepEqual( Stem("acacia"), "acaci");});
test("acacias -> acaci", function() {deepEqual( Stem("acacias"), "acaci");});
test("académicien -> académicien", function() {deepEqual( Stem("académicien"), "académicien");});
test("académie -> academ", function() {deepEqual( Stem("académie"), "academ");});
test("académies -> academ", function() {deepEqual( Stem("académies"), "academ");});
test("académique -> academ", function() {deepEqual( Stem("académique"), "academ");});
test("acajou -> acajou", function() {deepEqual( Stem("acajou"), "acajou");});
test("accabla -> accabl", function() {deepEqual( Stem("accabla"), "accabl");});
test("accablaient -> accabl", function() {deepEqual( Stem("accablaient"), "accabl");});
test("accablait -> accabl", function() {deepEqual( Stem("accablait"), "accabl");});
test("accablant -> accabl", function() {deepEqual( Stem("accablant"), "accabl");});
test("accablante -> accabl", function() {deepEqual( Stem("accablante"), "accabl");});
test("accable -> accabl", function() {deepEqual( Stem("accable"), "accabl");});
test("accablé -> accabl", function() {deepEqual( Stem("accablé"), "accabl");});
test("accablée -> accabl", function() {deepEqual( Stem("accablée"), "accabl");});
test("accablement -> accabl", function() {deepEqual( Stem("accablement"), "accabl");});
test("accabler -> accabl", function() {deepEqual( Stem("accabler"), "accabl");});
test("accableraient -> accabl", function() {deepEqual( Stem("accableraient"), "accabl");});
test("accablèrent -> accabl", function() {deepEqual( Stem("accablèrent"), "accabl");});
test("accalmie -> accalm", function() {deepEqual( Stem("accalmie"), "accalm");});
test("accaparé -> accapar", function() {deepEqual( Stem("accaparé"), "accapar");});
test("accède -> acced", function() {deepEqual( Stem("accède"), "acced");});
test("accéder -> acced", function() {deepEqual( Stem("accéder"), "acced");});
test("accéléra -> accéler", function() {deepEqual( Stem("accéléra"), "accéler");});
test("accélération -> accéler", function() {deepEqual( Stem("accélération"), "accéler");});
test("accent -> accent", function() {deepEqual( Stem("accent"), "accent");});
test("accents -> accent", function() {deepEqual( Stem("accents"), "accent");});
test("accentua -> accentu", function() {deepEqual( Stem("accentua"), "accentu");});
test("accepta -> accept", function() {deepEqual( Stem("accepta"), "accept");});
test("acceptables -> accept", function() {deepEqual( Stem("acceptables"), "accept");});
test("acceptais -> accept", function() {deepEqual( Stem("acceptais"), "accept");});
test("acceptait -> accept", function() {deepEqual( Stem("acceptait"), "accept");});
test("accepte -> accept", function() {deepEqual( Stem("accepte"), "accept");});
test("accepté -> accept", function() {deepEqual( Stem("accepté"), "accept");});
test("acceptée -> accept", function() {deepEqual( Stem("acceptée"), "accept");});
test("acceptent -> acceptent", function() {deepEqual( Stem("acceptent"), "acceptent");});
test("accepter -> accept", function() {deepEqual( Stem("accepter"), "accept");});
test("acceptera -> accept", function() {deepEqual( Stem("acceptera"), "accept");});
test("accepterai -> accept", function() {deepEqual( Stem("accepterai"), "accept");});
test("accepterait -> accept", function() {deepEqual( Stem("accepterait"), "accept");});
test("accepteriez -> accept", function() {deepEqual( Stem("accepteriez"), "accept");});
test("acceptes -> accept", function() {deepEqual( Stem("acceptes"), "accept");});
test("acceptez -> accept", function() {deepEqual( Stem("acceptez"), "accept");});
test("acception -> accept", function() {deepEqual( Stem("acception"), "accept");});
test("acceptons -> accepton", function() {deepEqual( Stem("acceptons"), "accepton");});
test("accès -> acces", function() {deepEqual( Stem("accès"), "acces");});
test("accident -> accident", function() {deepEqual( Stem("accident"), "accident");});
test("accidenté -> accident", function() {deepEqual( Stem("accidenté"), "accident");});
test("accidents -> accident", function() {deepEqual( Stem("accidents"), "accident");});
test("acclamation -> acclam", function() {deepEqual( Stem("acclamation"), "acclam");});
test("acclamations -> acclam", function() {deepEqual( Stem("acclamations"), "acclam");});
test("accommodé -> accommod", function() {deepEqual( Stem("accommodé"), "accommod");});
test("accompagnaient -> accompagn", function() {deepEqual( Stem("accompagnaient"), "accompagn");});
test("accompagnait -> accompagn", function() {deepEqual( Stem("accompagnait"), "accompagn");});
test("accompagnant -> accompagn", function() {deepEqual( Stem("accompagnant"), "accompagn");});
test("accompagne -> accompagn", function() {deepEqual( Stem("accompagne"), "accompagn");});
test("accompagné -> accompagn", function() {deepEqual( Stem("accompagné"), "accompagn");});
test("accompagnée -> accompagn", function() {deepEqual( Stem("accompagnée"), "accompagn");});
test("accompagnement -> accompagn", function() {deepEqual( Stem("accompagnement"), "accompagn");});
test("accompagnent -> accompagnent", function() {deepEqual( Stem("accompagnent"), "accompagnent");});
test("accompagner -> accompagn", function() {deepEqual( Stem("accompagner"), "accompagn");});
test("accompagnèrent -> accompagn", function() {deepEqual( Stem("accompagnèrent"), "accompagn");});
test("accompagniez -> accompagn", function() {deepEqual( Stem("accompagniez"), "accompagn");});
test("accompli -> accompl", function() {deepEqual( Stem("accompli"), "accompl");});
test("accomplie -> accompl", function() {deepEqual( Stem("accomplie"), "accompl");});
test("accomplies -> accompl", function() {deepEqual( Stem("accomplies"), "accompl");});
test("accomplir -> accompl", function() {deepEqual( Stem("accomplir"), "accompl");});
test("accomplirait -> accompl", function() {deepEqual( Stem("accomplirait"), "accompl");});
test("accomplis -> accompl", function() {deepEqual( Stem("accomplis"), "accompl");});
test("accomplissaient -> accompl", function() {deepEqual( Stem("accomplissaient"), "accompl");});
test("accomplissais -> accompl", function() {deepEqual( Stem("accomplissais"), "accompl");});
test("accomplissait -> accompl", function() {deepEqual( Stem("accomplissait"), "accompl");});
test("accomplissant -> accompl", function() {deepEqual( Stem("accomplissant"), "accompl");});
test("accomplissement -> accompl", function() {deepEqual( Stem("accomplissement"), "accompl");});
test("accomplissent -> accompl", function() {deepEqual( Stem("accomplissent"), "accompl");});
test("accomplit -> accompl", function() {deepEqual( Stem("accomplit"), "accompl");});
test("accord -> accord", function() {deepEqual( Stem("accord"), "accord");});
test("accorda -> accord", function() {deepEqual( Stem("accorda"), "accord");});
test("accordait -> accord", function() {deepEqual( Stem("accordait"), "accord");});
test("accordant -> accord", function() {deepEqual( Stem("accordant"), "accord");});
test("accorde -> accord", function() {deepEqual( Stem("accorde"), "accord");});
test("accordé -> accord", function() {deepEqual( Stem("accordé"), "accord");});
test("accordée -> accord", function() {deepEqual( Stem("accordée"), "accord");});
test("accordées -> accord", function() {deepEqual( Stem("accordées"), "accord");});
test("accorder -> accord", function() {deepEqual( Stem("accorder"), "accord");});
test("accorderai -> accord", function() {deepEqual( Stem("accorderai"), "accord");});
test("accorderait -> accord", function() {deepEqual( Stem("accorderait"), "accord");});
test("accordèrent -> accord", function() {deepEqual( Stem("accordèrent"), "accord");});
test("accorderez -> accord", function() {deepEqual( Stem("accorderez"), "accord");});
test("accordez -> accord", function() {deepEqual( Stem("accordez"), "accord");});
test("accosta -> accost", function() {deepEqual( Stem("accosta"), "accost");});
test("accostait -> accost", function() {deepEqual( Stem("accostait"), "accost");});
test("accosté -> accost", function() {deepEqual( Stem("accosté"), "accost");});
test("accoster -> accost", function() {deepEqual( Stem("accoster"), "accost");});
test("accoté -> accot", function() {deepEqual( Stem("accoté"), "accot");});
test("accouchement -> accouch", function() {deepEqual( Stem("accouchement"), "accouch");});
test("accouraient -> accour", function() {deepEqual( Stem("accouraient"), "accour");});
test("accourait -> accour", function() {deepEqual( Stem("accourait"), "accour");});
test("accourant -> accour", function() {deepEqual( Stem("accourant"), "accour");});
test("accourez -> accour", function() {deepEqual( Stem("accourez"), "accour");});
test("accourir -> accour", function() {deepEqual( Stem("accourir"), "accour");});
test("accourue -> accouru", function() {deepEqual( Stem("accourue"), "accouru");});
test("accoururent -> accoururent", function() {deepEqual( Stem("accoururent"), "accoururent");});
test("accourus -> accourus", function() {deepEqual( Stem("accourus"), "accourus");});
test("accourut -> accourut", function() {deepEqual( Stem("accourut"), "accourut");});
test("accoutrement -> accoutr", function() {deepEqual( Stem("accoutrement"), "accoutr");});
test("accoutumât -> accoutum", function() {deepEqual( Stem("accoutumât"), "accoutum");});
test("accoutume -> accoutum", function() {deepEqual( Stem("accoutume"), "accoutum");});
test("accoutumé -> accoutum", function() {deepEqual( Stem("accoutumé"), "accoutum");});
test("accoutumée -> accoutum", function() {deepEqual( Stem("accoutumée"), "accoutum");});
test("accoutumées -> accoutum", function() {deepEqual( Stem("accoutumées"), "accoutum");});
test("accoutumer -> accoutum", function() {deepEqual( Stem("accoutumer"), "accoutum");});
test("accoutumes -> accoutum", function() {deepEqual( Stem("accoutumes"), "accoutum");});
test("accoutumés -> accoutum", function() {deepEqual( Stem("accoutumés"), "accoutum");});
test("accrédité -> accred", function() {deepEqual( Stem("accrédité"), "accred");});
test("accréditer -> accrédit", function() {deepEqual( Stem("accréditer"), "accrédit");});
test("accrochaient -> accroch", function() {deepEqual( Stem("accrochaient"), "accroch");});
test("accrochant -> accroch", function() {deepEqual( Stem("accrochant"), "accroch");});
test("accroché -> accroch", function() {deepEqual( Stem("accroché"), "accroch");});
test("accrocher -> accroch", function() {deepEqual( Stem("accrocher"), "accroch");});
test("accroissaient -> accroiss", function() {deepEqual( Stem("accroissaient"), "accroiss");});
test("accroissait -> accroiss", function() {deepEqual( Stem("accroissait"), "accroiss");});
test("accroissant -> accroiss", function() {deepEqual( Stem("accroissant"), "accroiss");});
test("accroître -> accroîtr", function() {deepEqual( Stem("accroître"), "accroîtr");});
test("accru -> accru", function() {deepEqual( Stem("accru"), "accru");});
test("accrue -> accru", function() {deepEqual( Stem("accrue"), "accru");});
test("accrut -> accrut", function() {deepEqual( Stem("accrut"), "accrut");});
test("accueil -> accueil", function() {deepEqual( Stem("accueil"), "accueil");});
test("accueillait -> accueil", function() {deepEqual( Stem("accueillait"), "accueil");});
test("accueillent -> accueillent", function() {deepEqual( Stem("accueillent"), "accueillent");});
test("accueilli -> accueil", function() {deepEqual( Stem("accueilli"), "accueil");});
test("accueillie -> accueil", function() {deepEqual( Stem("accueillie"), "accueil");});
test("accueillies -> accueil", function() {deepEqual( Stem("accueillies"), "accueil");});
test("accueillir -> accueil", function() {deepEqual( Stem("accueillir"), "accueil");});
test("accueillis -> accueil", function() {deepEqual( Stem("accueillis"), "accueil");});
test("accumulation -> accumul", function() {deepEqual( Stem("accumulation"), "accumul");});
test("accumulé -> accumul", function() {deepEqual( Stem("accumulé"), "accumul");});
test("accumulées -> accumul", function() {deepEqual( Stem("accumulées"), "accumul");});
test("accumulent -> accumulent", function() {deepEqual( Stem("accumulent"), "accumulent");});
test("accumuler -> accumul", function() {deepEqual( Stem("accumuler"), "accumul");});
test("accumulés -> accumul", function() {deepEqual( Stem("accumulés"), "accumul");});
test("accusa -> accus", function() {deepEqual( Stem("accusa"), "accus");});
test("accusait -> accus", function() {deepEqual( Stem("accusait"), "accus");});
test("accusant -> accus", function() {deepEqual( Stem("accusant"), "accus");});
test("accusateur -> accus", function() {deepEqual( Stem("accusateur"), "accus");});
test("accusation -> accus", function() {deepEqual( Stem("accusation"), "accus");});
test("accusations -> accus", function() {deepEqual( Stem("accusations"), "accus");});
test("accuse -> accus", function() {deepEqual( Stem("accuse"), "accus");});
test("accusé -> accus", function() {deepEqual( Stem("accusé"), "accus");});
test("accuser -> accus", function() {deepEqual( Stem("accuser"), "accus");});
test("accuseront -> accus", function() {deepEqual( Stem("accuseront"), "accus");});
test("accusés -> accus", function() {deepEqual( Stem("accusés"), "accus");});
test("accusez -> accus", function() {deepEqual( Stem("accusez"), "accus");});
test("achalandage -> achalandag", function() {deepEqual( Stem("achalandage"), "achalandag");});
test("acharnant -> acharn", function() {deepEqual( Stem("acharnant"), "acharn");});
test("acharnés -> acharn", function() {deepEqual( Stem("acharnés"), "acharn");});
test("achat -> achat", function() {deepEqual( Stem("achat"), "achat");});
test("achemina -> achemin", function() {deepEqual( Stem("achemina"), "achemin");});
test("acheminait -> achemin", function() {deepEqual( Stem("acheminait"), "achemin");});
test("acheminé -> achemin", function() {deepEqual( Stem("acheminé"), "achemin");});
test("acheta -> achet", function() {deepEqual( Stem("acheta"), "achet");});
test("achetait -> achet", function() {deepEqual( Stem("achetait"), "achet");});
test("achetant -> achet", function() {deepEqual( Stem("achetant"), "achet");});
test("achete -> achet", function() {deepEqual( Stem("achete"), "achet");});
test("achète -> achet", function() {deepEqual( Stem("achète"), "achet");});
test("acheté -> achet", function() {deepEqual( Stem("acheté"), "achet");});
test("achetées -> achet", function() {deepEqual( Stem("achetées"), "achet");});
test("acheter -> achet", function() {deepEqual( Stem("acheter"), "achet");});
test("achèterons -> achet", function() {deepEqual( Stem("achèterons"), "achet");});
test("achètes -> achet", function() {deepEqual( Stem("achètes"), "achet");});
test("achetés -> achet", function() {deepEqual( Stem("achetés"), "achet");});
test("achetez -> achet", function() {deepEqual( Stem("achetez"), "achet");});
test("acheva -> achev", function() {deepEqual( Stem("acheva"), "achev");});
test("achevaient -> achev", function() {deepEqual( Stem("achevaient"), "achev");});
test("achevait -> achev", function() {deepEqual( Stem("achevait"), "achev");});
test("achevant -> achev", function() {deepEqual( Stem("achevant"), "achev");});
test("achève -> achev", function() {deepEqual( Stem("achève"), "achev");});
test("achevé -> achev", function() {deepEqual( Stem("achevé"), "achev");});
test("achevée -> achev", function() {deepEqual( Stem("achevée"), "achev");});
test("achèvement -> achev", function() {deepEqual( Stem("achèvement"), "achev");});
test("achever -> achev", function() {deepEqual( Stem("achever"), "achev");});
test("achèvera -> achev", function() {deepEqual( Stem("achèvera"), "achev");});
test("achevez -> achev", function() {deepEqual( Stem("achevez"), "achev");});
test("achille -> achill", function() {deepEqual( Stem("achille"), "achill");});
test("acier -> aci", function() {deepEqual( Stem("acier"), "aci");});
test("acolyte -> acolyt", function() {deepEqual( Stem("acolyte"), "acolyt");});
test("acoustiques -> acoust", function() {deepEqual( Stem("acoustiques"), "acoust");});
test("acquérait -> acquer", function() {deepEqual( Stem("acquérait"), "acquer");});
test("acquerrait -> acquerr", function() {deepEqual( Stem("acquerrait"), "acquerr");});
test("acquiert -> acquiert", function() {deepEqual( Stem("acquiert"), "acquiert");});
test("acquis -> acquis", function() {deepEqual( Stem("acquis"), "acquis");});
test("acquise -> acquis", function() {deepEqual( Stem("acquise"), "acquis");});
test("acquises -> acquis", function() {deepEqual( Stem("acquises"), "acquis");});
test("acquisition -> acquisit", function() {deepEqual( Stem("acquisition"), "acquisit");});
test("acquisitions -> acquisit", function() {deepEqual( Stem("acquisitions"), "acquisit");});
test("acquit -> acquit", function() {deepEqual( Stem("acquit"), "acquit");});
test("acquitta -> acquitt", function() {deepEqual( Stem("acquitta"), "acquitt");});
test("acquittait -> acquitt", function() {deepEqual( Stem("acquittait"), "acquitt");});
test("acquitte -> acquitt", function() {deepEqual( Stem("acquitte"), "acquitt");});
test("acquitté -> acquitt", function() {deepEqual( Stem("acquitté"), "acquitt");});
test("acquittement -> acquitt", function() {deepEqual( Stem("acquittement"), "acquitt");});
test("acquitter -> acquitt", function() {deepEqual( Stem("acquitter"), "acquitt");});
test("acquittés -> acquitt", function() {deepEqual( Stem("acquittés"), "acquitt");});
test("acrobates -> acrobat", function() {deepEqual( Stem("acrobates"), "acrobat");});
test("acrobatique -> acrobat", function() {deepEqual( Stem("acrobatique"), "acrobat");});
test("acte -> acte", function() {deepEqual( Stem("acte"), "acte");});
test("actes -> acte", function() {deepEqual( Stem("actes"), "acte");});
test("acteur -> acteur", function() {deepEqual( Stem("acteur"), "acteur");});
test("acteurs -> acteur", function() {deepEqual( Stem("acteurs"), "acteur");});
test("actif -> actif", function() {deepEqual( Stem("actif"), "actif");});
test("action -> action", function() {deepEqual( Stem("action"), "action");});
test("actionnaires -> actionnair", function() {deepEqual( Stem("actionnaires"), "actionnair");});
test("actions -> action", function() {deepEqual( Stem("actions"), "action");});
test("active -> activ", function() {deepEqual( Stem("active"), "activ");});
test("activement -> activ", function() {deepEqual( Stem("activement"), "activ");});
test("actives -> activ", function() {deepEqual( Stem("actives"), "activ");});
test("activité -> activ", function() {deepEqual( Stem("activité"), "activ");});
test("actrice -> actric", function() {deepEqual( Stem("actrice"), "actric");});
test("actrices -> actric", function() {deepEqual( Stem("actrices"), "actric");});
test("actuel -> actuel", function() {deepEqual( Stem("actuel"), "actuel");});
test("actuelle -> actuel", function() {deepEqual( Stem("actuelle"), "actuel");});
test("actuellement -> actuel", function() {deepEqual( Stem("actuellement"), "actuel");});
test("actuelles -> actuel", function() {deepEqual( Stem("actuelles"), "actuel");});
test("actuels -> actuel", function() {deepEqual( Stem("actuels"), "actuel");});
test("ad -> ad", function() {deepEqual( Stem("ad"), "ad");});
test("adaptant -> adapt", function() {deepEqual( Stem("adaptant"), "adapt");});
test("additions -> addit", function() {deepEqual( Stem("additions"), "addit");});
test("address -> address", function() {deepEqual( Stem("address"), "address");});
test("adeline -> adelin", function() {deepEqual( Stem("adeline"), "adelin");});
test("aden -> aden", function() {deepEqual( Stem("aden"), "aden");});
test("adieu -> adieu", function() {deepEqual( Stem("adieu"), "adieu");});
test("adieux -> adieux", function() {deepEqual( Stem("adieux"), "adieux");});
test("adjoint -> adjoint", function() {deepEqual( Stem("adjoint"), "adjoint");});
test("adjonction -> adjonct", function() {deepEqual( Stem("adjonction"), "adjonct");});
test("adjudant -> adjud", function() {deepEqual( Stem("adjudant"), "adjud");});
test("adjudication -> adjud", function() {deepEqual( Stem("adjudication"), "adjud");});
test("adjudications -> adjud", function() {deepEqual( Stem("adjudications"), "adjud");});
test("adjugeait -> adjug", function() {deepEqual( Stem("adjugeait"), "adjug");});
test("adjuger -> adjug", function() {deepEqual( Stem("adjuger"), "adjug");});
test("admet -> admet", function() {deepEqual( Stem("admet"), "admet");});
test("admettait -> admet", function() {deepEqual( Stem("admettait"), "admet");});
test("admettant -> admet", function() {deepEqual( Stem("admettant"), "admet");});
test("admettent -> admettent", function() {deepEqual( Stem("admettent"), "admettent");});
test("admettons -> admetton", function() {deepEqual( Stem("admettons"), "admetton");});
test("admettre -> admettr", function() {deepEqual( Stem("admettre"), "admettr");});
test("administra -> administr", function() {deepEqual( Stem("administra"), "administr");});
test("administrateur -> administr", function() {deepEqual( Stem("administrateur"), "administr");});
test("administrateurs -> administr", function() {deepEqual( Stem("administrateurs"), "administr");});
test("administration -> administr", function() {deepEqual( Stem("administration"), "administr");});
test("administre -> administr", function() {deepEqual( Stem("administre"), "administr");});
test("administré -> administr", function() {deepEqual( Stem("administré"), "administr");});
test("administrer -> administr", function() {deepEqual( Stem("administrer"), "administr");});
test("administrés -> administr", function() {deepEqual( Stem("administrés"), "administr");});
test("administrez -> administr", function() {deepEqual( Stem("administrez"), "administr");});
test("admira -> admir", function() {deepEqual( Stem("admira"), "admir");});
test("admirable -> admir", function() {deepEqual( Stem("admirable"), "admir");});
test("admirablement -> admir", function() {deepEqual( Stem("admirablement"), "admir");});
test("admirables -> admir", function() {deepEqual( Stem("admirables"), "admir");});
test("admirais -> admir", function() {deepEqual( Stem("admirais"), "admir");});
test("admirait -> admir", function() {deepEqual( Stem("admirait"), "admir");});
test("admirant -> admir", function() {deepEqual( Stem("admirant"), "admir");});
test("admirateurs -> admir", function() {deepEqual( Stem("admirateurs"), "admir");});
test("admiration -> admir", function() {deepEqual( Stem("admiration"), "admir");});
test("admire -> admir", function() {deepEqual( Stem("admire"), "admir");});
test("admiré -> admir", function() {deepEqual( Stem("admiré"), "admir");});
test("admirée -> admir", function() {deepEqual( Stem("admirée"), "admir");});
test("admirées -> admir", function() {deepEqual( Stem("admirées"), "admir");});
test("admirent -> admirent", function() {deepEqual( Stem("admirent"), "admirent");});
test("admirer -> admir", function() {deepEqual( Stem("admirer"), "admir");});
test("admirera -> admir", function() {deepEqual( Stem("admirera"), "admir");});
test("admirèrent -> admir", function() {deepEqual( Stem("admirèrent"), "admir");});
test("admirés -> admir", function() {deepEqual( Stem("admirés"), "admir");});
test("admiriez -> admir", function() {deepEqual( Stem("admiriez"), "admir");});
test("admis -> admis", function() {deepEqual( Stem("admis"), "admis");});
test("admise -> admis", function() {deepEqual( Stem("admise"), "admis");});
test("admises -> admis", function() {deepEqual( Stem("admises"), "admis");});
test("admission -> admiss", function() {deepEqual( Stem("admission"), "admiss");});
test("admît -> admît", function() {deepEqual( Stem("admît"), "admît");});
test("admonestant -> admonest", function() {deepEqual( Stem("admonestant"), "admonest");});
test("adolescent -> adolescent", function() {deepEqual( Stem("adolescent"), "adolescent");});
test("adolphe -> adolph", function() {deepEqual( Stem("adolphe"), "adolph");});
test("adonné -> adon", function() {deepEqual( Stem("adonné"), "adon");});
test("adonnée -> adon", function() {deepEqual( Stem("adonnée"), "adon");});
test("adonnent -> adonnent", function() {deepEqual( Stem("adonnent"), "adonnent");});
test("adopta -> adopt", function() {deepEqual( Stem("adopta"), "adopt");});
test("adopte -> adopt", function() {deepEqual( Stem("adopte"), "adopt");});
test("adopté -> adopt", function() {deepEqual( Stem("adopté"), "adopt");});
test("adoptée -> adopt", function() {deepEqual( Stem("adoptée"), "adopt");});
test("adopter -> adopt", function() {deepEqual( Stem("adopter"), "adopt");});
test("adoptif -> adopt", function() {deepEqual( Stem("adoptif"), "adopt");});
test("adorable -> ador", function() {deepEqual( Stem("adorable"), "ador");});
test("adoraient -> ador", function() {deepEqual( Stem("adoraient"), "ador");});
test("adorais -> ador", function() {deepEqual( Stem("adorais"), "ador");});
test("adorait -> ador", function() {deepEqual( Stem("adorait"), "ador");});
test("adorant -> ador", function() {deepEqual( Stem("adorant"), "ador");});
test("adorateur -> ador", function() {deepEqual( Stem("adorateur"), "ador");});
test("adorateurs -> ador", function() {deepEqual( Stem("adorateurs"), "ador");});
test("adoration -> ador", function() {deepEqual( Stem("adoration"), "ador");});
test("adorations -> ador", function() {deepEqual( Stem("adorations"), "ador");});
test("adoratrices -> ador", function() {deepEqual( Stem("adoratrices"), "ador");});
test("adore -> ador", function() {deepEqual( Stem("adore"), "ador");});
test("adoré -> ador", function() {deepEqual( Stem("adoré"), "ador");});
test("adorée -> ador", function() {deepEqual( Stem("adorée"), "ador");});
test("adorent -> adorent", function() {deepEqual( Stem("adorent"), "adorent");});
test("adorer -> ador", function() {deepEqual( Stem("adorer"), "ador");});
test("adorera -> ador", function() {deepEqual( Stem("adorera"), "ador");});
test("adouci -> adouc", function() {deepEqual( Stem("adouci"), "adouc");});
test("adoucir -> adouc", function() {deepEqual( Stem("adoucir"), "adouc");});
test("adoucissait -> adouc", function() {deepEqual( Stem("adoucissait"), "adouc");});
test("adoucissent -> adouc", function() {deepEqual( Stem("adoucissent"), "adouc");});
test("adressa -> adress", function() {deepEqual( Stem("adressa"), "adress");});
test("adressaient -> adress", function() {deepEqual( Stem("adressaient"), "adress");});
test("adressait -> adress", function() {deepEqual( Stem("adressait"), "adress");});
test("adressant -> adress", function() {deepEqual( Stem("adressant"), "adress");});
test("adressât -> adress", function() {deepEqual( Stem("adressât"), "adress");});
test("adresse -> adress", function() {deepEqual( Stem("adresse"), "adress");});
test("adressé -> adress", function() {deepEqual( Stem("adressé"), "adress");});
test("adressée -> adress", function() {deepEqual( Stem("adressée"), "adress");});
test("adressées -> adress", function() {deepEqual( Stem("adressées"), "adress");});
test("adressent -> adressent", function() {deepEqual( Stem("adressent"), "adressent");});
test("adresser -> adress", function() {deepEqual( Stem("adresser"), "adress");});
test("adresserai -> adress", function() {deepEqual( Stem("adresserai"), "adress");});
test("adressèrent -> adress", function() {deepEqual( Stem("adressèrent"), "adress");});
test("adresses -> adress", function() {deepEqual( Stem("adresses"), "adress");});
test("adressés -> adress", function() {deepEqual( Stem("adressés"), "adress");});
test("adressez -> adress", function() {deepEqual( Stem("adressez"), "adress");});
test("adrien -> adrien", function() {deepEqual( Stem("adrien"), "adrien");});
test("adroit -> adroit", function() {deepEqual( Stem("adroit"), "adroit");});
test("adroite -> adroit", function() {deepEqual( Stem("adroite"), "adroit");});
test("adroitement -> adroit", function() {deepEqual( Stem("adroitement"), "adroit");});
test("adroites -> adroit", function() {deepEqual( Stem("adroites"), "adroit");});
test("adroits -> adroit", function() {deepEqual( Stem("adroits"), "adroit");});
test("adsum -> adsum", function() {deepEqual( Stem("adsum"), "adsum");});
test("adultère -> adulter", function() {deepEqual( Stem("adultère"), "adulter");});
test("adverbe -> adverb", function() {deepEqual( Stem("adverbe"), "adverb");});
test("adversaire -> adversair", function() {deepEqual( Stem("adversaire"), "adversair");});
test("adversaires -> adversair", function() {deepEqual( Stem("adversaires"), "adversair");});
test("adverse -> advers", function() {deepEqual( Stem("adverse"), "advers");});
test("adversité -> advers", function() {deepEqual( Stem("adversité"), "advers");});
test("advint -> advint", function() {deepEqual( Stem("advint"), "advint");});
test("aérienne -> aérien", function() {deepEqual( Stem("aérienne"), "aérien");});
test("affabilité -> affabl", function() {deepEqual( Stem("affabilité"), "affabl");});
test("affadissantes -> affad", function() {deepEqual( Stem("affadissantes"), "affad");});
test("affaibli -> affaibl", function() {deepEqual( Stem("affaibli"), "affaibl");});
test("affaiblie -> affaibl", function() {deepEqual( Stem("affaiblie"), "affaibl");});
test("affaiblissait -> affaibl", function() {deepEqual( Stem("affaiblissait"), "affaibl");});
test("affaiblissement -> affaibl", function() {deepEqual( Stem("affaiblissement"), "affaibl");});
test("affaiblit -> affaibl", function() {deepEqual( Stem("affaiblit"), "affaibl");});
test("affaire -> affair", function() {deepEqual( Stem("affaire"), "affair");});
test("affairé -> affair", function() {deepEqual( Stem("affairé"), "affair");});
test("affaires -> affair", function() {deepEqual( Stem("affaires"), "affair");});
test("affairés -> affair", function() {deepEqual( Stem("affairés"), "affair");});
test("affaissé -> affaiss", function() {deepEqual( Stem("affaissé"), "affaiss");});
test("affamé -> affam", function() {deepEqual( Stem("affamé"), "affam");});
test("affamer -> affam", function() {deepEqual( Stem("affamer"), "affam");});
test("affamés -> affam", function() {deepEqual( Stem("affamés"), "affam");});
test("affecta -> affect", function() {deepEqual( Stem("affecta"), "affect");});
test("affectaient -> affect", function() {deepEqual( Stem("affectaient"), "affect");});
test("affectait -> affect", function() {deepEqual( Stem("affectait"), "affect");});
test("affectant -> affect", function() {deepEqual( Stem("affectant"), "affect");});
test("affectation -> affect", function() {deepEqual( Stem("affectation"), "affect");});
test("affectations -> affect", function() {deepEqual( Stem("affectations"), "affect");});
test("affecte -> affect", function() {deepEqual( Stem("affecte"), "affect");});
test("affecté -> affect", function() {deepEqual( Stem("affecté"), "affect");});
test("affectée -> affect", function() {deepEqual( Stem("affectée"), "affect");});
test("affectées -> affect", function() {deepEqual( Stem("affectées"), "affect");});
test("affecter -> affect", function() {deepEqual( Stem("affecter"), "affect");});
test("affectés -> affect", function() {deepEqual( Stem("affectés"), "affect");});
test("affection -> affect", function() {deepEqual( Stem("affection"), "affect");});
test("affectionnait -> affection", function() {deepEqual( Stem("affectionnait"), "affection");});
test("affectionné -> affection", function() {deepEqual( Stem("affectionné"), "affection");});
test("affections -> affect", function() {deepEqual( Stem("affections"), "affect");});
test("affectueux -> affectu", function() {deepEqual( Stem("affectueux"), "affectu");});
test("affermissant -> afferm", function() {deepEqual( Stem("affermissant"), "afferm");});
test("affermit -> afferm", function() {deepEqual( Stem("affermit"), "afferm");});
test("affichait -> affich", function() {deepEqual( Stem("affichait"), "affich");});
test("affiche -> affich", function() {deepEqual( Stem("affiche"), "affich");});
test("affiché -> affich", function() {deepEqual( Stem("affiché"), "affich");});
test("affichée -> affich", function() {deepEqual( Stem("affichée"), "affich");});
test("affichent -> affichent", function() {deepEqual( Stem("affichent"), "affichent");});
test("afficher -> affich", function() {deepEqual( Stem("afficher"), "affich");});
test("affiches -> affich", function() {deepEqual( Stem("affiches"), "affich");});
test("afficheur -> afficheur", function() {deepEqual( Stem("afficheur"), "afficheur");});
test("affidé -> affid", function() {deepEqual( Stem("affidé"), "affid");});
test("affidés -> affid", function() {deepEqual( Stem("affidés"), "affid");});
test("affilée -> affil", function() {deepEqual( Stem("affilée"), "affil");});
test("affilié -> affili", function() {deepEqual( Stem("affilié"), "affili");});
test("affilier -> affili", function() {deepEqual( Stem("affilier"), "affili");});
test("affinités -> affin", function() {deepEqual( Stem("affinités"), "affin");});
test("affirmait -> affirm", function() {deepEqual( Stem("affirmait"), "affirm");});
test("affirmant -> affirm", function() {deepEqual( Stem("affirmant"), "affirm");});
test("affirmatif -> affirm", function() {deepEqual( Stem("affirmatif"), "affirm");});
test("affirme -> affirm", function() {deepEqual( Stem("affirme"), "affirm");});
test("affirmé -> affirm", function() {deepEqual( Stem("affirmé"), "affirm");});
test("affirment -> affirment", function() {deepEqual( Stem("affirment"), "affirment");});
test("affirmer -> affirm", function() {deepEqual( Stem("affirmer"), "affirm");});
test("affirmerai -> affirm", function() {deepEqual( Stem("affirmerai"), "affirm");});
test("afflictive -> afflict", function() {deepEqual( Stem("afflictive"), "afflict");});
test("afflige -> afflig", function() {deepEqual( Stem("afflige"), "afflig");});
test("affligé -> afflig", function() {deepEqual( Stem("affligé"), "afflig");});
test("affligea -> afflig", function() {deepEqual( Stem("affligea"), "afflig");});
test("affligée -> afflig", function() {deepEqual( Stem("affligée"), "afflig");});
test("affliger -> afflig", function() {deepEqual( Stem("affliger"), "afflig");});
test("affligez -> afflig", function() {deepEqual( Stem("affligez"), "afflig");});
test("afflua -> afflu", function() {deepEqual( Stem("afflua"), "afflu");});
test("affluaient -> afflu", function() {deepEqual( Stem("affluaient"), "afflu");});
test("affluence -> affluenc", function() {deepEqual( Stem("affluence"), "affluenc");});
test("affluent -> affluent", function() {deepEqual( Stem("affluent"), "affluent");});
test("affluents -> affluent", function() {deepEqual( Stem("affluents"), "affluent");});
test("affluer -> afflu", function() {deepEqual( Stem("affluer"), "afflu");});
test("affolait -> affol", function() {deepEqual( Stem("affolait"), "affol");});
test("affolées -> affol", function() {deepEqual( Stem("affolées"), "affol");});
test("affranchi -> affranch", function() {deepEqual( Stem("affranchi"), "affranch");});
test("affrète -> affret", function() {deepEqual( Stem("affrète"), "affret");});
test("affreuse -> affreux", function() {deepEqual( Stem("affreuse"), "affreux");});
test("affreuses -> affreux", function() {deepEqual( Stem("affreuses"), "affreux");});
test("affreux -> affreux", function() {deepEqual( Stem("affreux"), "affreux");});
test("affriolait -> affriol", function() {deepEqual( Stem("affriolait"), "affriol");});
test("affront -> affront", function() {deepEqual( Stem("affront"), "affront");});
test("affrontais -> affront", function() {deepEqual( Stem("affrontais"), "affront");});
test("affronter -> affront", function() {deepEqual( Stem("affronter"), "affront");});
test("affublé -> affubl", function() {deepEqual( Stem("affublé"), "affubl");});
test("afin -> afin", function() {deepEqual( Stem("afin"), "afin");});
test("afrique -> afriqu", function() {deepEqual( Stem("afrique"), "afriqu");});
test("agde -> agde", function() {deepEqual( Stem("agde"), "agde");});
test("age -> age", function() {deepEqual( Stem("age"), "age");});
test("âge -> âge", function() {deepEqual( Stem("âge"), "âge");});
test("âgé -> âgé", function() {deepEqual( Stem("âgé"), "âgé");});
test("âgée -> âgé", function() {deepEqual( Stem("âgée"), "âgé");});
test("âgées -> âgé", function() {deepEqual( Stem("âgées"), "âgé");});
test("agen -> agen", function() {deepEqual( Stem("agen"), "agen");});
test("agencées -> agenc", function() {deepEqual( Stem("agencées"), "agenc");});
test("agenouilla -> agenouill", function() {deepEqual( Stem("agenouilla"), "agenouill");});
test("agenouillant -> agenouill", function() {deepEqual( Stem("agenouillant"), "agenouill");});
test("agenouillé -> agenouill", function() {deepEqual( Stem("agenouillé"), "agenouill");});
test("agenouillée -> agenouill", function() {deepEqual( Stem("agenouillée"), "agenouill");});
test("agent -> agent", function() {deepEqual( Stem("agent"), "agent");});
test("agents -> agent", function() {deepEqual( Stem("agents"), "agent");});
test("âges -> âge", function() {deepEqual( Stem("âges"), "âge");});
test("âgés -> âgé", function() {deepEqual( Stem("âgés"), "âgé");});
test("agglomération -> agglomer", function() {deepEqual( Stem("agglomération"), "agglomer");});
test("aggrottato -> aggrottato", function() {deepEqual( Stem("aggrottato"), "aggrottato");});
test("agi -> agi", function() {deepEqual( Stem("agi"), "agi");});
test("agile -> agil", function() {deepEqual( Stem("agile"), "agil");});
test("agilité -> agil", function() {deepEqual( Stem("agilité"), "agil");});
test("agir -> agir", function() {deepEqual( Stem("agir"), "agir");});
test("agirait -> agir", function() {deepEqual( Stem("agirait"), "agir");});
test("agis -> agis", function() {deepEqual( Stem("agis"), "agis");});
test("agissaient -> agiss", function() {deepEqual( Stem("agissaient"), "agiss");});
test("agissait -> agiss", function() {deepEqual( Stem("agissait"), "agiss");});
test("agissant -> agiss", function() {deepEqual( Stem("agissant"), "agiss");});
test("agissante -> agiss", function() {deepEqual( Stem("agissante"), "agiss");});
test("agisse -> agiss", function() {deepEqual( Stem("agisse"), "agiss");});
test("agissent -> agissent", function() {deepEqual( Stem("agissent"), "agissent");});
test("agissez -> agiss", function() {deepEqual( Stem("agissez"), "agiss");});
test("agissons -> agisson", function() {deepEqual( Stem("agissons"), "agisson");});
test("agit -> agit", function() {deepEqual( Stem("agit"), "agit");});
test("agita -> agit", function() {deepEqual( Stem("agita"), "agit");});
test("agitaient -> agit", function() {deepEqual( Stem("agitaient"), "agit");});
test("agitait -> agit", function() {deepEqual( Stem("agitait"), "agit");});
test("agitant -> agit", function() {deepEqual( Stem("agitant"), "agit");});
test("agitation -> agit", function() {deepEqual( Stem("agitation"), "agit");});
test("agite -> agit", function() {deepEqual( Stem("agite"), "agit");});
test("agité -> agit", function() {deepEqual( Stem("agité"), "agit");});
test("agitée -> agit", function() {deepEqual( Stem("agitée"), "agit");});
test("agitées -> agit", function() {deepEqual( Stem("agitées"), "agit");});
test("agitent -> agitent", function() {deepEqual( Stem("agitent"), "agitent");});
test("agiter -> agit", function() {deepEqual( Stem("agiter"), "agit");});
test("agitèrent -> agit", function() {deepEqual( Stem("agitèrent"), "agit");});
test("agités -> agit", function() {deepEqual( Stem("agités"), "agit");});
test("agneaux -> agneau", function() {deepEqual( Stem("agneaux"), "agneau");});
test("agonie -> agon", function() {deepEqual( Stem("agonie"), "agon");});
test("agra -> agra", function() {deepEqual( Stem("agra"), "agra");});
test("agrandis -> agrand", function() {deepEqual( Stem("agrandis"), "agrand");});
test("agréable -> agréabl", function() {deepEqual( Stem("agréable"), "agréabl");});
test("agréablement -> agréabl", function() {deepEqual( Stem("agréablement"), "agréabl");});
test("agréables -> agréabl", function() {deepEqual( Stem("agréables"), "agréabl");});
test("agréer -> agré", function() {deepEqual( Stem("agréer"), "agré");});
test("agréez -> agré", function() {deepEqual( Stem("agréez"), "agré");});
test("agrément -> agrément", function() {deepEqual( Stem("agrément"), "agrément");});
test("agrémenté -> agrément", function() {deepEqual( Stem("agrémenté"), "agrément");});
test("agrémentée -> agrément", function() {deepEqual( Stem("agrémentée"), "agrément");});
test("agrémentées -> agrément", function() {deepEqual( Stem("agrémentées"), "agrément");});
test("agrémentés -> agrément", function() {deepEqual( Stem("agrémentés"), "agrément");});
test("agréments -> agrément", function() {deepEqual( Stem("agréments"), "agrément");});
test("agrès -> agres", function() {deepEqual( Stem("agrès"), "agres");});
test("agriculteur -> agriculteur", function() {deepEqual( Stem("agriculteur"), "agriculteur");});
test("agriculture -> agricultur", function() {deepEqual( Stem("agriculture"), "agricultur");});
test("ah -> ah", function() {deepEqual( Stem("ah"), "ah");});
test("ahméhnagara -> ahméhnagar", function() {deepEqual( Stem("ahméhnagara"), "ahméhnagar");});
test("ahuri -> ahur", function() {deepEqual( Stem("ahuri"), "ahur");});
test("ai -> ai", function() {deepEqual( Stem("ai"), "ai");});
test("aida -> aid", function() {deepEqual( Stem("aida"), "aid");});
test("aidait -> aid", function() {deepEqual( Stem("aidait"), "aid");});
test("aidant -> aid", function() {deepEqual( Stem("aidant"), "aid");});
test("aide -> aid", function() {deepEqual( Stem("aide"), "aid");});
test("aidé -> aid", function() {deepEqual( Stem("aidé"), "aid");});
test("aidée -> aid", function() {deepEqual( Stem("aidée"), "aid");});
test("aidées -> aid", function() {deepEqual( Stem("aidées"), "aid");});
test("aider -> aid", function() {deepEqual( Stem("aider"), "aid");});
test("aidera -> aid", function() {deepEqual( Stem("aidera"), "aid");});
test("aiderai -> aid", function() {deepEqual( Stem("aiderai"), "aid");});
test("aidèrent -> aid", function() {deepEqual( Stem("aidèrent"), "aid");});
test("aiderez -> aid", function() {deepEqual( Stem("aiderez"), "aid");});
test("aides -> aid", function() {deepEqual( Stem("aides"), "aid");});
test("aidés -> aid", function() {deepEqual( Stem("aidés"), "aid");});
test("aidez -> aid", function() {deepEqual( Stem("aidez"), "aid");});
test("aidiez -> aid", function() {deepEqual( Stem("aidiez"), "aid");});
test("aie -> aie", function() {deepEqual( Stem("aie"), "aie");});
test("aient -> aient", function() {deepEqual( Stem("aient"), "aient");});
test("aies -> aie", function() {deepEqual( Stem("aies"), "aie");});
test("aïeul -> aïeul", function() {deepEqual( Stem("aïeul"), "aïeul");});
test("aïeux -> aïeux", function() {deepEqual( Stem("aïeux"), "aïeux");});
test("aigle -> aigl", function() {deepEqual( Stem("aigle"), "aigl");});
test("aigre -> aigr", function() {deepEqual( Stem("aigre"), "aigr");});
test("aigrelets -> aigrelet", function() {deepEqual( Stem("aigrelets"), "aigrelet");});
test("aigrelettes -> aigrelet", function() {deepEqual( Stem("aigrelettes"), "aigrelet");});
test("aigrement -> aigr", function() {deepEqual( Stem("aigrement"), "aigr");});
test("aigres -> aigr", function() {deepEqual( Stem("aigres"), "aigr");});
test("aigreur -> aigreur", function() {deepEqual( Stem("aigreur"), "aigreur");});
test("aigrirait -> aigr", function() {deepEqual( Stem("aigrirait"), "aigr");});
test("aiguille -> aiguill", function() {deepEqual( Stem("aiguille"), "aiguill");});
test("aiguilles -> aiguill", function() {deepEqual( Stem("aiguilles"), "aiguill");});
test("aiguillon -> aiguillon", function() {deepEqual( Stem("aiguillon"), "aiguillon");});
test("aiguiser -> aiguis", function() {deepEqual( Stem("aiguiser"), "aiguis");});
test("aigus -> aigus", function() {deepEqual( Stem("aigus"), "aigus");});
test("aile -> ail", function() {deepEqual( Stem("aile"), "ail");});
test("ailes -> ail", function() {deepEqual( Stem("ailes"), "ail");});
test("aille -> aill", function() {deepEqual( Stem("aille"), "aill");});
test("ailles -> aill", function() {deepEqual( Stem("ailles"), "aill");});
test("ailleurs -> ailleur", function() {deepEqual( Stem("ailleurs"), "ailleur");});
test("aima -> aim", function() {deepEqual( Stem("aima"), "aim");});
test("aimable -> aimabl", function() {deepEqual( Stem("aimable"), "aimabl");});
test("aimables -> aimabl", function() {deepEqual( Stem("aimables"), "aimabl");});
test("aimaient -> aim", function() {deepEqual( Stem("aimaient"), "aim");});
test("aimais -> aim", function() {deepEqual( Stem("aimais"), "aim");});
test("aimait -> aim", function() {deepEqual( Stem("aimait"), "aim");});
test("aimant -> aim", function() {deepEqual( Stem("aimant"), "aim");});
test("aimât -> aim", function() {deepEqual( Stem("aimât"), "aim");});
test("aime -> aim", function() {deepEqual( Stem("aime"), "aim");});
test("aimé -> aim", function() {deepEqual( Stem("aimé"), "aim");});
test("aimée -> aim", function() {deepEqual( Stem("aimée"), "aim");});
test("aimées -> aim", function() {deepEqual( Stem("aimées"), "aim");});
test("aiment -> aiment", function() {deepEqual( Stem("aiment"), "aiment");});
test("aimer -> aim", function() {deepEqual( Stem("aimer"), "aim");});
test("aimera -> aim", function() {deepEqual( Stem("aimera"), "aim");});
test("aimerai -> aim", function() {deepEqual( Stem("aimerai"), "aim");});
test("aimerais -> aim", function() {deepEqual( Stem("aimerais"), "aim");});
test("aimerait -> aim", function() {deepEqual( Stem("aimerait"), "aim");});
test("aimerez -> aim", function() {deepEqual( Stem("aimerez"), "aim");});
test("aimes -> aim", function() {deepEqual( Stem("aimes"), "aim");});
test("aimés -> aim", function() {deepEqual( Stem("aimés"), "aim");});
test("aimez -> aim", function() {deepEqual( Stem("aimez"), "aim");});
test("aimiez -> aim", function() {deepEqual( Stem("aimiez"), "aim");});
test("aimons -> aimon", function() {deepEqual( Stem("aimons"), "aimon");});
test("aine -> ain", function() {deepEqual( Stem("aine"), "ain");});
test("aîné -> aîn", function() {deepEqual( Stem("aîné"), "aîn");});
test("aînée -> aîn", function() {deepEqual( Stem("aînée"), "aîn");});
test("aînés -> aîn", function() {deepEqual( Stem("aînés"), "aîn");});
test("ainsi -> ains", function() {deepEqual( Stem("ainsi"), "ains");});
test("air -> air", function() {deepEqual( Stem("air"), "air");});
test("aire -> air", function() {deepEqual( Stem("aire"), "air");});
test("airs -> air", function() {deepEqual( Stem("airs"), "air");});
test("aisance -> aisanc", function() {deepEqual( Stem("aisance"), "aisanc");});
test("aise -> ais", function() {deepEqual( Stem("aise"), "ais");});
test("aisé -> ais", function() {deepEqual( Stem("aisé"), "ais");});
test("aisées -> ais", function() {deepEqual( Stem("aisées"), "ais");});
test("aisément -> ais", function() {deepEqual( Stem("aisément"), "ais");});
test("aisés -> ais", function() {deepEqual( Stem("aisés"), "ais");});
test("ait -> ait", function() {deepEqual( Stem("ait"), "ait");});
test("ajournement -> ajourn", function() {deepEqual( Stem("ajournement"), "ajourn");});
test("ajouta -> ajout", function() {deepEqual( Stem("ajouta"), "ajout");});
test("ajoutaient -> ajout", function() {deepEqual( Stem("ajoutaient"), "ajout");});
test("ajoutait -> ajout", function() {deepEqual( Stem("ajoutait"), "ajout");});
test("ajoutant -> ajout", function() {deepEqual( Stem("ajoutant"), "ajout");});
test("ajoute -> ajout", function() {deepEqual( Stem("ajoute"), "ajout");});
test("ajouté -> ajout", function() {deepEqual( Stem("ajouté"), "ajout");});
test("ajoutées -> ajout", function() {deepEqual( Stem("ajoutées"), "ajout");});
test("ajouter -> ajout", function() {deepEqual( Stem("ajouter"), "ajout");});
test("ajoutera -> ajout", function() {deepEqual( Stem("ajoutera"), "ajout");});
test("ajouterai -> ajout", function() {deepEqual( Stem("ajouterai"), "ajout");});
test("ajouteraient -> ajout", function() {deepEqual( Stem("ajouteraient"), "ajout");});
test("ajouterais -> ajout", function() {deepEqual( Stem("ajouterais"), "ajout");});
test("ajoutèrent -> ajout", function() {deepEqual( Stem("ajoutèrent"), "ajout");});
test("ajouterez -> ajout", function() {deepEqual( Stem("ajouterez"), "ajout");});
test("ajouterons -> ajout", function() {deepEqual( Stem("ajouterons"), "ajout");});
test("ajuster -> ajust", function() {deepEqual( Stem("ajuster"), "ajust");});
test("al -> al", function() {deepEqual( Stem("al"), "al");});
test("alabama -> alabam", function() {deepEqual( Stem("alabama"), "alabam");});
test("alacoque -> alacoqu", function() {deepEqual( Stem("alacoque"), "alacoqu");});
test("alari -> alar", function() {deepEqual( Stem("alari"), "alar");});
test("alarma -> alarm", function() {deepEqual( Stem("alarma"), "alarm");});
test("alarmaient -> alarm", function() {deepEqual( Stem("alarmaient"), "alarm");});
test("alarmants -> alarm", function() {deepEqual( Stem("alarmants"), "alarm");});
test("alarme -> alarm", function() {deepEqual( Stem("alarme"), "alarm");});
test("alarmé -> alarm", function() {deepEqual( Stem("alarmé"), "alarm");});
test("alarmée -> alarm", function() {deepEqual( Stem("alarmée"), "alarm");});
test("alarmer -> alarm", function() {deepEqual( Stem("alarmer"), "alarm");});
test("alarmes -> alarm", function() {deepEqual( Stem("alarmes"), "alarm");});
test("alas -> alas", function() {deepEqual( Stem("alas"), "alas");});
test("albâtre -> albâtr", function() {deepEqual( Stem("albâtre"), "albâtr");});
test("albermale -> albermal", function() {deepEqual( Stem("albermale"), "albermal");});
test("album -> album", function() {deepEqual( Stem("album"), "album");});
test("alcooliques -> alcool", function() {deepEqual( Stem("alcooliques"), "alcool");});
test("ale -> ale", function() {deepEqual( Stem("ale"), "ale");});
test("aléa -> alé", function() {deepEqual( Stem("aléa"), "alé");});
test("alembert -> alembert", function() {deepEqual( Stem("alembert"), "alembert");});
test("alençon -> alençon", function() {deepEqual( Stem("alençon"), "alençon");});
test("alerte -> alert", function() {deepEqual( Stem("alerte"), "alert");});
test("alertes -> alert", function() {deepEqual( Stem("alertes"), "alert");});
test("alexandre -> alexandr", function() {deepEqual( Stem("alexandre"), "alexandr");});
test("alfieri -> alfier", function() {deepEqual( Stem("alfieri"), "alfier");});
test("alfred -> alfred", function() {deepEqual( Stem("alfred"), "alfred");});
test("alger -> alger", function() {deepEqual( Stem("alger"), "alger");});
test("alhambra -> alhambr", function() {deepEqual( Stem("alhambra"), "alhambr");});
test("aliène -> alien", function() {deepEqual( Stem("aliène"), "alien");});
test("alignées -> align", function() {deepEqual( Stem("alignées"), "align");});
test("aligre -> aligr", function() {deepEqual( Stem("aligre"), "aligr");});
test("aliment -> aliment", function() {deepEqual( Stem("aliment"), "aliment");});
test("alimentation -> aliment", function() {deepEqual( Stem("alimentation"), "aliment");});
test("alimenter -> aliment", function() {deepEqual( Stem("alimenter"), "aliment");});
test("alimento -> alimento", function() {deepEqual( Stem("alimento"), "alimento");});
test("alinéa -> aliné", function() {deepEqual( Stem("alinéa"), "aliné");});
test("all -> all", function() {deepEqual( Stem("all"), "all");});
test("alla -> alla", function() {deepEqual( Stem("alla"), "alla");});
test("allahabad -> allahabad", function() {deepEqual( Stem("allahabad"), "allahabad");});
test("allaient -> allaient", function() {deepEqual( Stem("allaient"), "allaient");});
test("allais -> allais", function() {deepEqual( Stem("allais"), "allais");});
test("allait -> allait", function() {deepEqual( Stem("allait"), "allait");});
test("allant -> allant", function() {deepEqual( Stem("allant"), "allant");});
test("allât -> allât", function() {deepEqual( Stem("allât"), "allât");});
test("allé -> allé", function() {deepEqual( Stem("allé"), "allé");});
test("alléché -> allech", function() {deepEqual( Stem("alléché"), "allech");});
test("alléchés -> allech", function() {deepEqual( Stem("alléchés"), "allech");});
test("allée -> allé", function() {deepEqual( Stem("allée"), "allé");});
test("allées -> allé", function() {deepEqual( Stem("allées"), "allé");});
test("allégation -> alleg", function() {deepEqual( Stem("allégation"), "alleg");});
test("allege -> alleg", function() {deepEqual( Stem("allege"), "alleg");});
test("allège -> alleg", function() {deepEqual( Stem("allège"), "alleg");});
test("allègre -> allegr", function() {deepEqual( Stem("allègre"), "allegr");});
test("allégresse -> allégress", function() {deepEqual( Stem("allégresse"), "allégress");});
test("alléguant -> allégu", function() {deepEqual( Stem("alléguant"), "allégu");});
test("allemagne -> allemagn", function() {deepEqual( Stem("allemagne"), "allemagn");});
test("allemand -> allemand", function() {deepEqual( Stem("allemand"), "allemand");});
test("allemande -> allemand", function() {deepEqual( Stem("allemande"), "allemand");});
test("allemands -> allemand", function() {deepEqual( Stem("allemands"), "allemand");});
test("aller -> aller", function() {deepEqual( Stem("aller"), "aller");});
test("allèrent -> allèrent", function() {deepEqual( Stem("allèrent"), "allèrent");});
test("allés -> allé", function() {deepEqual( Stem("allés"), "allé");});
test("allez -> allez", function() {deepEqual( Stem("allez"), "allez");});
test("alliage -> alliag", function() {deepEqual( Stem("alliage"), "alliag");});
test("alliance -> allianc", function() {deepEqual( Stem("alliance"), "allianc");});
test("allié -> alli", function() {deepEqual( Stem("allié"), "alli");});
test("alliés -> alli", function() {deepEqual( Stem("alliés"), "alli");});
test("alliez -> alli", function() {deepEqual( Stem("alliez"), "alli");});
test("alligators -> alligator", function() {deepEqual( Stem("alligators"), "alligator");});
test("allions -> allion", function() {deepEqual( Stem("allions"), "allion");});
test("allocution -> allocu", function() {deepEqual( Stem("allocution"), "allocu");});
test("allonge -> allong", function() {deepEqual( Stem("allonge"), "allong");});
test("allongeait -> allong", function() {deepEqual( Stem("allongeait"), "allong");});
test("allongée -> allong", function() {deepEqual( Stem("allongée"), "allong");});
test("allons -> allon", function() {deepEqual( Stem("allons"), "allon");});
test("alloue -> allou", function() {deepEqual( Stem("alloue"), "allou");});
test("alluma -> allum", function() {deepEqual( Stem("alluma"), "allum");});
test("allumait -> allum", function() {deepEqual( Stem("allumait"), "allum");});
test("allume -> allum", function() {deepEqual( Stem("allume"), "allum");});
test("allumé -> allum", function() {deepEqual( Stem("allumé"), "allum");});
test("allumée -> allum", function() {deepEqual( Stem("allumée"), "allum");});
test("allumées -> allum", function() {deepEqual( Stem("allumées"), "allum");});
test("allumer -> allum", function() {deepEqual( Stem("allumer"), "allum");});
test("allumés -> allum", function() {deepEqual( Stem("allumés"), "allum");});
test("allure -> allur", function() {deepEqual( Stem("allure"), "allur");});
test("allures -> allur", function() {deepEqual( Stem("allures"), "allur");});
test("allusion -> allus", function() {deepEqual( Stem("allusion"), "allus");});
test("allusions -> allus", function() {deepEqual( Stem("allusions"), "allus");});
test("almanach -> almanach", function() {deepEqual( Stem("almanach"), "almanach");});
test("almaviva -> almaviv", function() {deepEqual( Stem("almaviva"), "almaviv");});
test("alors -> alor", function() {deepEqual( Stem("alors"), "alor");});
test("alouettes -> alouet", function() {deepEqual( Stem("alouettes"), "alouet");});
test("alourdie -> alourd", function() {deepEqual( Stem("alourdie"), "alourd");});
test("alpes -> alpe", function() {deepEqual( Stem("alpes"), "alpe");});
test("alphabet -> alphabet", function() {deepEqual( Stem("alphabet"), "alphabet");});
test("alphabets -> alphabet", function() {deepEqual( Stem("alphabets"), "alphabet");});
test("alsace -> alsac", function() {deepEqual( Stem("alsace"), "alsac");});
test("also -> also", function() {deepEqual( Stem("also"), "also");});
test("altamira -> altam", function() {deepEqual( Stem("altamira"), "altam");});
test("altéra -> alter", function() {deepEqual( Stem("altéra"), "alter");});
test("altérait -> alter", function() {deepEqual( Stem("altérait"), "alter");});
test("altéré -> alter", function() {deepEqual( Stem("altéré"), "alter");});
test("altérée -> alter", function() {deepEqual( Stem("altérée"), "alter");});
test("altérer -> alter", function() {deepEqual( Stem("altérer"), "alter");});
test("altérés -> alter", function() {deepEqual( Stem("altérés"), "alter");});
test("alternative -> altern", function() {deepEqual( Stem("alternative"), "altern");});
test("alternatives -> altern", function() {deepEqual( Stem("alternatives"), "altern");});
test("altesse -> altess", function() {deepEqual( Stem("altesse"), "altess");});
test("altesses -> altess", function() {deepEqual( Stem("altesses"), "altess");});
test("altier -> alti", function() {deepEqual( Stem("altier"), "alti");});
test("altière -> altier", function() {deepEqual( Stem("altière"), "altier");});
test("altitude -> altitud", function() {deepEqual( Stem("altitude"), "altitud");});
test("alvizi -> alviz", function() {deepEqual( Stem("alvizi"), "alviz");});
test("alzar -> alzar", function() {deepEqual( Stem("alzar"), "alzar");});
test("ama -> ama", function() {deepEqual( Stem("ama"), "ama");});
test("amabilité -> amabl", function() {deepEqual( Stem("amabilité"), "amabl");});
test("amadoué -> amadou", function() {deepEqual( Stem("amadoué"), "amadou");});
test("amadouer -> amadou", function() {deepEqual( Stem("amadouer"), "amadou");});
test("amai -> amai", function() {deepEqual( Stem("amai"), "amai");});
test("amaigris -> amaigr", function() {deepEqual( Stem("amaigris"), "amaigr");});
test("amand -> amand", function() {deepEqual( Stem("amand"), "amand");});
test("amanda -> amand", function() {deepEqual( Stem("amanda"), "amand");});
test("amant -> amant", function() {deepEqual( Stem("amant"), "amant");});
test("amantes -> amant", function() {deepEqual( Stem("amantes"), "amant");});
test("amants -> amant", function() {deepEqual( Stem("amants"), "amant");});
test("amarres -> amarr", function() {deepEqual( Stem("amarres"), "amarr");});
test("amarrés -> amarr", function() {deepEqual( Stem("amarrés"), "amarr");});
test("amas -> amas", function() {deepEqual( Stem("amas"), "amas");});
test("amassaient -> amass", function() {deepEqual( Stem("amassaient"), "amass");});
test("amassé -> amass", function() {deepEqual( Stem("amassé"), "amass");});
test("amassée -> amass", function() {deepEqual( Stem("amassée"), "amass");});
test("amateur -> amateur", function() {deepEqual( Stem("amateur"), "amateur");});
test("amateurs -> amateur", function() {deepEqual( Stem("amateurs"), "amateur");});
test("ambassade -> ambassad", function() {deepEqual( Stem("ambassade"), "ambassad");});
test("ambassadeur -> ambassadeur", function() {deepEqual( Stem("ambassadeur"), "ambassadeur");});
test("ambassadeurs -> ambassadeur", function() {deepEqual( Stem("ambassadeurs"), "ambassadeur");});
test("ambiguë -> ambigu", function() {deepEqual( Stem("ambiguë"), "ambigu");});
test("ambitieuse -> ambiti", function() {deepEqual( Stem("ambitieuse"), "ambiti");});
test("ambitieux -> ambiti", function() {deepEqual( Stem("ambitieux"), "ambiti");});
test("ambition -> ambit", function() {deepEqual( Stem("ambition"), "ambit");});
test("ambulance -> ambul", function() {deepEqual( Stem("ambulance"), "ambul");});
test("ambulant -> ambul", function() {deepEqual( Stem("ambulant"), "ambul");});
test("ambulantes -> ambul", function() {deepEqual( Stem("ambulantes"), "ambul");});
test("ambulants -> ambul", function() {deepEqual( Stem("ambulants"), "ambul");});
test("âme -> âme", function() {deepEqual( Stem("âme"), "âme");});
test("amena -> amen", function() {deepEqual( Stem("amena"), "amen");});
test("aménagé -> aménag", function() {deepEqual( Stem("aménagé"), "aménag");});
test("aménagements -> aménag", function() {deepEqual( Stem("aménagements"), "aménag");});
test("amenait -> amen", function() {deepEqual( Stem("amenait"), "amen");});
test("amende -> amend", function() {deepEqual( Stem("amende"), "amend");});
test("amendes -> amend", function() {deepEqual( Stem("amendes"), "amend");});
test("amène -> amen", function() {deepEqual( Stem("amène"), "amen");});
test("amené -> amen", function() {deepEqual( Stem("amené"), "amen");});
test("amenée -> amen", function() {deepEqual( Stem("amenée"), "amen");});
test("amener -> amen", function() {deepEqual( Stem("amener"), "amen");});
test("amènera -> amen", function() {deepEqual( Stem("amènera"), "amen");});
test("amènerai -> amen", function() {deepEqual( Stem("amènerai"), "amen");});
test("amènerait -> amen", function() {deepEqual( Stem("amènerait"), "amen");});
test("amenez -> amen", function() {deepEqual( Stem("amenez"), "amen");});
test("ameni -> amen", function() {deepEqual( Stem("ameni"), "amen");});
test("amer -> amer", function() {deepEqual( Stem("amer"), "amer");});
test("amère -> amer", function() {deepEqual( Stem("amère"), "amer");});
test("amèrement -> amer", function() {deepEqual( Stem("amèrement"), "amer");});
test("amères -> amer", function() {deepEqual( Stem("amères"), "amer");});
test("américain -> américain", function() {deepEqual( Stem("américain"), "américain");});
test("américaine -> américain", function() {deepEqual( Stem("américaine"), "américain");});
test("américains -> américain", function() {deepEqual( Stem("américains"), "américain");});
test("american -> american", function() {deepEqual( Stem("american"), "american");});
test("amérique -> amer", function() {deepEqual( Stem("amérique"), "amer");});
test("amers -> amer", function() {deepEqual( Stem("amers"), "amer");});
test("amertume -> amertum", function() {deepEqual( Stem("amertume"), "amertum");});
test("âmes -> âme", function() {deepEqual( Stem("âmes"), "âme");});
test("ameublement -> ameubl", function() {deepEqual( Stem("ameublement"), "ameubl");});
test("ameutant -> ameut", function() {deepEqual( Stem("ameutant"), "ameut");});
test("ami -> ami", function() {deepEqual( Stem("ami"), "ami");});
test("amiable -> amiabl", function() {deepEqual( Stem("amiable"), "amiabl");});
test("amical -> amical", function() {deepEqual( Stem("amical"), "amical");});
test("amicale -> amical", function() {deepEqual( Stem("amicale"), "amical");});
test("amicalement -> amical", function() {deepEqual( Stem("amicalement"), "amical");});
test("amicizia -> amicizi", function() {deepEqual( Stem("amicizia"), "amicizi");});
test("amie -> ami", function() {deepEqual( Stem("amie"), "ami");});
test("amiens -> amien", function() {deepEqual( Stem("amiens"), "amien");});
test("amies -> ami", function() {deepEqual( Stem("amies"), "ami");});
test("amis -> amis", function() {deepEqual( Stem("amis"), "amis");});
test("amitié -> amiti", function() {deepEqual( Stem("amitié"), "amiti");});
test("amitiés -> amiti", function() {deepEqual( Stem("amitiés"), "amiti");});
test("amoindri -> amoindr", function() {deepEqual( Stem("amoindri"), "amoindr");});
test("amor -> amor", function() {deepEqual( Stem("amor"), "amor");});
test("amorce -> amorc", function() {deepEqual( Stem("amorce"), "amorc");});
test("amorces -> amorc", function() {deepEqual( Stem("amorces"), "amorc");});
test("amortir -> amort", function() {deepEqual( Stem("amortir"), "amort");});
test("amortirait -> amort", function() {deepEqual( Stem("amortirait"), "amort");});
test("amour -> amour", function() {deepEqual( Stem("amour"), "amour");});
test("amourachée -> amourach", function() {deepEqual( Stem("amourachée"), "amourach");});
test("amoureuse -> amour", function() {deepEqual( Stem("amoureuse"), "amour");});
test("amoureusement -> amour", function() {deepEqual( Stem("amoureusement"), "amour");});
test("amoureux -> amour", function() {deepEqual( Stem("amoureux"), "amour");});
test("amours -> amour", function() {deepEqual( Stem("amours"), "amour");});
test("amphigouriques -> amphigour", function() {deepEqual( Stem("amphigouriques"), "amphigour");});
test("amphion -> amphion", function() {deepEqual( Stem("amphion"), "amphion");});
test("amphithéâtre -> amphithéâtr", function() {deepEqual( Stem("amphithéâtre"), "amphithéâtr");});
test("ample -> ample", function() {deepEqual( Stem("ample"), "ample");});
test("amplification -> amplif", function() {deepEqual( Stem("amplification"), "amplif");});
test("amplifications -> amplif", function() {deepEqual( Stem("amplifications"), "amplif");});
test("amputés -> amput", function() {deepEqual( Stem("amputés"), "amput");});
test("amusa -> amus", function() {deepEqual( Stem("amusa"), "amus");});
test("amusaient -> amus", function() {deepEqual( Stem("amusaient"), "amus");});
test("amusait -> amus", function() {deepEqual( Stem("amusait"), "amus");});
test("amusant -> amus", function() {deepEqual( Stem("amusant"), "amus");});
test("amusante -> amus", function() {deepEqual( Stem("amusante"), "amus");});
test("amusantes -> amus", function() {deepEqual( Stem("amusantes"), "amus");});
test("amusants -> amus", function() {deepEqual( Stem("amusants"), "amus");});
test("amuse -> amus", function() {deepEqual( Stem("amuse"), "amus");});
test("amusé -> amus", function() {deepEqual( Stem("amusé"), "amus");});
test("amusement -> amus", function() {deepEqual( Stem("amusement"), "amus");});
test("amuser -> amus", function() {deepEqual( Stem("amuser"), "amus");});
test("amusera -> amus", function() {deepEqual( Stem("amusera"), "amus");});
test("an -> an", function() {deepEqual( Stem("an"), "an");});
test("anachorète -> anachoret", function() {deepEqual( Stem("anachorète"), "anachoret");});
test("anachronisme -> anachron", function() {deepEqual( Stem("anachronisme"), "anachron");});
test("analyser -> analys", function() {deepEqual( Stem("analyser"), "analys");});
test("ananas -> anan", function() {deepEqual( Stem("ananas"), "anan");});
test("anathème -> anathem", function() {deepEqual( Stem("anathème"), "anathem");});
test("anathèmes -> anathem", function() {deepEqual( Stem("anathèmes"), "anathem");});
test("ancêtres -> ancêtr", function() {deepEqual( Stem("ancêtres"), "ancêtr");});
test("ancien -> ancien", function() {deepEqual( Stem("ancien"), "ancien");});
test("ancienne -> ancien", function() {deepEqual( Stem("ancienne"), "ancien");});
test("anciennes -> ancien", function() {deepEqual( Stem("anciennes"), "ancien");});
test("anciens -> ancien", function() {deepEqual( Stem("anciens"), "ancien");});
test("ancre -> ancre", function() {deepEqual( Stem("ancre"), "ancre");});
test("ancrés -> ancré", function() {deepEqual( Stem("ancrés"), "ancré");});
test("and -> and", function() {deepEqual( Stem("and"), "and");});
test("andaman -> andaman", function() {deepEqual( Stem("andaman"), "andaman");});
test("anderson -> anderson", function() {deepEqual( Stem("anderson"), "anderson");});
test("andrew -> andrew", function() {deepEqual( Stem("andrew"), "andrew");});
test("andryane -> andryan", function() {deepEqual( Stem("andryane"), "andryan");});
test("anéanti -> anéant", function() {deepEqual( Stem("anéanti"), "anéant");});
test("anéantie -> anéant", function() {deepEqual( Stem("anéantie"), "anéant");});
test("anéantir -> anéant", function() {deepEqual( Stem("anéantir"), "anéant");});
test("anéantis -> anéant", function() {deepEqual( Stem("anéantis"), "anéant");});
test("anéantissait -> anéant", function() {deepEqual( Stem("anéantissait"), "anéant");});
test("anéantit -> anéant", function() {deepEqual( Stem("anéantit"), "anéant");});
test("anecdote -> anecdot", function() {deepEqual( Stem("anecdote"), "anecdot");});
test("anecdotes -> anecdot", function() {deepEqual( Stem("anecdotes"), "anecdot");});
test("anecdotique -> anecdot", function() {deepEqual( Stem("anecdotique"), "anecdot");});
test("ânerie -> âner", function() {deepEqual( Stem("ânerie"), "âner");});
test("anetta -> anet", function() {deepEqual( Stem("anetta"), "anet");});
test("ange -> ange", function() {deepEqual( Stem("ange"), "ange");});
test("angela -> angel", function() {deepEqual( Stem("angela"), "angel");});
test("angelica -> angelic", function() {deepEqual( Stem("angelica"), "angelic");});
test("angélina -> angélin", function() {deepEqual( Stem("angélina"), "angélin");});
test("angélique -> angel", function() {deepEqual( Stem("angélique"), "angel");});
test("anges -> ange", function() {deepEqual( Stem("anges"), "ange");});
test("anglais -> anglais", function() {deepEqual( Stem("anglais"), "anglais");});
test("anglaise -> anglais", function() {deepEqual( Stem("anglaise"), "anglais");});
test("anglaises -> anglais", function() {deepEqual( Stem("anglaises"), "anglais");});
test("angle -> angle", function() {deepEqual( Stem("angle"), "angle");});
test("angles -> angle", function() {deepEqual( Stem("angles"), "angle");});
test("angleterre -> angleterr", function() {deepEqual( Stem("angleterre"), "angleterr");});
test("anglo -> anglo", function() {deepEqual( Stem("anglo"), "anglo");});
test("angoisse -> angoiss", function() {deepEqual( Stem("angoisse"), "angoiss");});
test("angoisses -> angoiss", function() {deepEqual( Stem("angoisses"), "angoiss");});
test("angoulême -> angoulêm", function() {deepEqual( Stem("angoulême"), "angoulêm");});
test("aniken -> aniken", function() {deepEqual( Stem("aniken"), "aniken");});
test("anima -> anim", function() {deepEqual( Stem("anima"), "anim");});
test("animaient -> anim", function() {deepEqual( Stem("animaient"), "anim");});
test("animait -> anim", function() {deepEqual( Stem("animait"), "anim");});
test("animal -> animal", function() {deepEqual( Stem("animal"), "animal");});
test("animant -> anim", function() {deepEqual( Stem("animant"), "anim");});
test("animation -> anim", function() {deepEqual( Stem("animation"), "anim");});
test("animaux -> animal", function() {deepEqual( Stem("animaux"), "animal");});
test("anime -> anim", function() {deepEqual( Stem("anime"), "anim");});
test("animé -> anim", function() {deepEqual( Stem("animé"), "anim");});
test("animée -> anim", function() {deepEqual( Stem("animée"), "anim");});
test("animées -> anim", function() {deepEqual( Stem("animées"), "anim");});
test("animer -> anim", function() {deepEqual( Stem("animer"), "anim");});
test("animèrent -> anim", function() {deepEqual( Stem("animèrent"), "anim");});
test("animés -> anim", function() {deepEqual( Stem("animés"), "anim");});
test("annales -> annal", function() {deepEqual( Stem("annales"), "annal");});
test("annam -> annam", function() {deepEqual( Stem("annam"), "annam");});
test("anneau -> anneau", function() {deepEqual( Stem("anneau"), "anneau");});
test("année -> anné", function() {deepEqual( Stem("année"), "anné");});
test("années -> anné", function() {deepEqual( Stem("années"), "anné");});
test("annexait -> annex", function() {deepEqual( Stem("annexait"), "annex");});
test("annibal -> annibal", function() {deepEqual( Stem("annibal"), "annibal");});
test("anno -> anno", function() {deepEqual( Stem("anno"), "anno");});
test("annonça -> annonc", function() {deepEqual( Stem("annonça"), "annonc");});
test("annonçaient -> annonc", function() {deepEqual( Stem("annonçaient"), "annonc");});
test("annonçait -> annonc", function() {deepEqual( Stem("annonçait"), "annonc");});
test("annonçant -> annonc", function() {deepEqual( Stem("annonçant"), "annonc");});
test("annonce -> annonc", function() {deepEqual( Stem("annonce"), "annonc");});
test("annoncé -> annonc", function() {deepEqual( Stem("annoncé"), "annonc");});
test("annoncée -> annonc", function() {deepEqual( Stem("annoncée"), "annonc");});
test("annoncées -> annonc", function() {deepEqual( Stem("annoncées"), "annonc");});
test("annoncent -> annoncent", function() {deepEqual( Stem("annoncent"), "annoncent");});
test("annoncer -> annonc", function() {deepEqual( Stem("annoncer"), "annonc");});
test("annoncerait -> annonc", function() {deepEqual( Stem("annoncerait"), "annonc");});
test("annoncèrent -> annonc", function() {deepEqual( Stem("annoncèrent"), "annonc");});
test("annoncerez -> annonc", function() {deepEqual( Stem("annoncerez"), "annonc");});
test("annonces -> annonc", function() {deepEqual( Stem("annonces"), "annonc");});
test("annoncés -> annonc", function() {deepEqual( Stem("annoncés"), "annonc");});
test("annuel -> annuel", function() {deepEqual( Stem("annuel"), "annuel");});
test("annuelle -> annuel", function() {deepEqual( Stem("annuelle"), "annuel");});
test("annuellement -> annuel", function() {deepEqual( Stem("annuellement"), "annuel");});
test("annulé -> annul", function() {deepEqual( Stem("annulé"), "annul");});
test("annulée -> annul", function() {deepEqual( Stem("annulée"), "annul");});
test("annuleront -> annul", function() {deepEqual( Stem("annuleront"), "annul");});
test("anobli -> anobl", function() {deepEqual( Stem("anobli"), "anobl");});
test("anoblir -> anobl", function() {deepEqual( Stem("anoblir"), "anobl");});
test("anoblis -> anobl", function() {deepEqual( Stem("anoblis"), "anobl");});
test("anoblissement -> anobl", function() {deepEqual( Stem("anoblissement"), "anobl");});
test("anoblit -> anobl", function() {deepEqual( Stem("anoblit"), "anobl");});
test("anodines -> anodin", function() {deepEqual( Stem("anodines"), "anodin");});
test("ânonna -> ânon", function() {deepEqual( Stem("ânonna"), "ânon");});
test("anonyme -> anonym", function() {deepEqual( Stem("anonyme"), "anonym");});
test("anonymement -> anonym", function() {deepEqual( Stem("anonymement"), "anonym");});
test("anonymes -> anonym", function() {deepEqual( Stem("anonymes"), "anonym");});
test("ans -> an", function() {deepEqual( Stem("ans"), "an");});
test("anse -> anse", function() {deepEqual( Stem("anse"), "anse");});
test("antagoniste -> antagon", function() {deepEqual( Stem("antagoniste"), "antagon");});
test("antérieure -> antérieur", function() {deepEqual( Stem("antérieure"), "antérieur");});
test("antérieurs -> antérieur", function() {deepEqual( Stem("antérieurs"), "antérieur");});
test("anthropophages -> anthropophag", function() {deepEqual( Stem("anthropophages"), "anthropophag");});
test("anti -> anti", function() {deepEqual( Stem("anti"), "anti");});
test("antibes -> antib", function() {deepEqual( Stem("antibes"), "antib");});
test("antichambre -> antichambr", function() {deepEqual( Stem("antichambre"), "antichambr");});
test("antichambres -> antichambr", function() {deepEqual( Stem("antichambres"), "antichambr");});
test("antidata -> antidat", function() {deepEqual( Stem("antidata"), "antidat");});
test("antidatée -> antidat", function() {deepEqual( Stem("antidatée"), "antidat");});
test("antigénéreuses -> antigéner", function() {deepEqual( Stem("antigénéreuses"), "antigéner");});
test("antijacobine -> antijacobin", function() {deepEqual( Stem("antijacobine"), "antijacobin");});
test("antimonarchique -> antimonarch", function() {deepEqual( Stem("antimonarchique"), "antimonarch");});
test("antipathie -> antipath", function() {deepEqual( Stem("antipathie"), "antipath");});
test("antipathique -> antipath", function() {deepEqual( Stem("antipathique"), "antipath");});
test("antipode -> antipod", function() {deepEqual( Stem("antipode"), "antipod");});
test("antipodes -> antipod", function() {deepEqual( Stem("antipodes"), "antipod");});
test("antiquaires -> antiquair", function() {deepEqual( Stem("antiquaires"), "antiquair");});
test("antique -> antiqu", function() {deepEqual( Stem("antique"), "antiqu");});
test("antiques -> antiqu", function() {deepEqual( Stem("antiques"), "antiqu");});
test("antiquité -> antiqu", function() {deepEqual( Stem("antiquité"), "antiqu");});
test("antiquités -> antiqu", function() {deepEqual( Stem("antiquités"), "antiqu");});
test("antithèse -> antithes", function() {deepEqual( Stem("antithèse"), "antithes");});
test("antoine -> antoin", function() {deepEqual( Stem("antoine"), "antoin");});
test("anxiété -> anxiet", function() {deepEqual( Stem("anxiété"), "anxiet");});
test("anxieux -> anxieux", function() {deepEqual( Stem("anxieux"), "anxieux");});
test("any -> any", function() {deepEqual( Stem("any"), "any");});
test("aouda -> aoud", function() {deepEqual( Stem("aouda"), "aoud");});
test("août -> août", function() {deepEqual( Stem("août"), "août");});
test("apaisa -> apais", function() {deepEqual( Stem("apaisa"), "apais");});
test("apaisée -> apais", function() {deepEqual( Stem("apaisée"), "apais");});
test("apaiser -> apais", function() {deepEqual( Stem("apaiser"), "apais");});
test("apaisera -> apais", function() {deepEqual( Stem("apaisera"), "apais");});
test("apathie -> apath", function() {deepEqual( Stem("apathie"), "apath");});
test("apathique -> apath", function() {deepEqual( Stem("apathique"), "apath");});
test("apennin -> apennin", function() {deepEqual( Stem("apennin"), "apennin");});
test("apens -> apen", function() {deepEqual( Stem("apens"), "apen");});
test("apercevait -> apercev", function() {deepEqual( Stem("apercevait"), "apercev");});
test("apercevant -> apercev", function() {deepEqual( Stem("apercevant"), "apercev");});
test("apercevoir -> apercevoir", function() {deepEqual( Stem("apercevoir"), "apercevoir");});
test("apercevons -> apercevon", function() {deepEqual( Stem("apercevons"), "apercevon");});
test("apercevrait -> apercevr", function() {deepEqual( Stem("apercevrait"), "apercevr");});
test("aperçois -> aperçois", function() {deepEqual( Stem("aperçois"), "aperçois");});
test("aperçoit -> aperçoit", function() {deepEqual( Stem("aperçoit"), "aperçoit");});
test("aperçoive -> aperço", function() {deepEqual( Stem("aperçoive"), "aperço");});
test("aperçu -> aperçu", function() {deepEqual( Stem("aperçu"), "aperçu");});
test("aperçue -> aperçu", function() {deepEqual( Stem("aperçue"), "aperçu");});
test("aperçurent -> aperçurent", function() {deepEqual( Stem("aperçurent"), "aperçurent");});
test("aperçus -> aperçus", function() {deepEqual( Stem("aperçus"), "aperçus");});
test("aperçut -> aperçut", function() {deepEqual( Stem("aperçut"), "aperçut");});
test("aperçût -> aperçût", function() {deepEqual( Stem("aperçût"), "aperçût");});
test("aplaties -> aplat", function() {deepEqual( Stem("aplaties"), "aplat");});
test("aplatit -> aplat", function() {deepEqual( Stem("aplatit"), "aplat");});
test("aplomb -> aplomb", function() {deepEqual( Stem("aplomb"), "aplomb");});
test("apocalypse -> apocalyps", function() {deepEqual( Stem("apocalypse"), "apocalyps");});
test("apocalyptique -> apocalypt", function() {deepEqual( Stem("apocalyptique"), "apocalypt");});
test("apoplectique -> apoplect", function() {deepEqual( Stem("apoplectique"), "apoplect");});
test("apoplexie -> apoplex", function() {deepEqual( Stem("apoplexie"), "apoplex");});
test("apoplexies -> apoplex", function() {deepEqual( Stem("apoplexies"), "apoplex");});
test("apostat -> apostat", function() {deepEqual( Stem("apostat"), "apostat");});
test("aposté -> apost", function() {deepEqual( Stem("aposté"), "apost");});
test("apostille -> apostill", function() {deepEqual( Stem("apostille"), "apostill");});
test("apostolique -> apostol", function() {deepEqual( Stem("apostolique"), "apostol");});
test("apostoliques -> apostol", function() {deepEqual( Stem("apostoliques"), "apostol");});
test("apothicaire -> apothicair", function() {deepEqual( Stem("apothicaire"), "apothicair");});
test("apôtre -> apôtr", function() {deepEqual( Stem("apôtre"), "apôtr");});
test("apôtres -> apôtr", function() {deepEqual( Stem("apôtres"), "apôtr");});
test("apparaissaient -> apparaiss", function() {deepEqual( Stem("apparaissaient"), "apparaiss");});
test("apparaissait -> apparaiss", function() {deepEqual( Stem("apparaissait"), "apparaiss");});
test("apparait -> appar", function() {deepEqual( Stem("apparait"), "appar");});
test("apparaît -> apparaît", function() {deepEqual( Stem("apparaît"), "apparaît");});
test("apparaîtrait -> apparaîtr", function() {deepEqual( Stem("apparaîtrait"), "apparaîtr");});
test("apparaître -> apparaîtr", function() {deepEqual( Stem("apparaître"), "apparaîtr");});
test("apparat -> apparat", function() {deepEqual( Stem("apparat"), "apparat");});
test("appareil -> appareil", function() {deepEqual( Stem("appareil"), "appareil");});
test("appareillait -> appareil", function() {deepEqual( Stem("appareillait"), "appareil");});
test("appareiller -> appareil", function() {deepEqual( Stem("appareiller"), "appareil");});
test("appareils -> appareil", function() {deepEqual( Stem("appareils"), "appareil");});
test("apparemment -> apparent", function() {deepEqual( Stem("apparemment"), "apparent");});
test("apparence -> apparent", function() {deepEqual( Stem("apparence"), "apparent");});
test("apparences -> apparent", function() {deepEqual( Stem("apparences"), "apparent");});
test("apparent -> apparent", function() {deepEqual( Stem("apparent"), "apparent");});
test("apparente -> apparent", function() {deepEqual( Stem("apparente"), "apparent");});
test("apparition -> apparit", function() {deepEqual( Stem("apparition"), "apparit");});
test("apparitions -> apparit", function() {deepEqual( Stem("apparitions"), "apparit");});
test("appartement -> appart", function() {deepEqual( Stem("appartement"), "appart");});
test("appartements -> appart", function() {deepEqual( Stem("appartements"), "appart");});
test("appartenaient -> apparten", function() {deepEqual( Stem("appartenaient"), "apparten");});
test("appartenait -> apparten", function() {deepEqual( Stem("appartenait"), "apparten");});
test("appartenant -> apparten", function() {deepEqual( Stem("appartenant"), "apparten");});
test("appartenir -> apparten", function() {deepEqual( Stem("appartenir"), "apparten");});
test("appartenu -> appartenu", function() {deepEqual( Stem("appartenu"), "appartenu");});
test("appartiendront -> appartiendront", function() {deepEqual( Stem("appartiendront"), "appartiendront");});
test("appartiennent -> appartiennent", function() {deepEqual( Stem("appartiennent"), "appartiennent");});
test("appartient -> appartient", function() {deepEqual( Stem("appartient"), "appartient");});
test("appartint -> appartint", function() {deepEqual( Stem("appartint"), "appartint");});
test("appartînt -> appartînt", function() {deepEqual( Stem("appartînt"), "appartînt");});
test("apparu -> apparu", function() {deepEqual( Stem("apparu"), "apparu");});
test("apparut -> apparut", function() {deepEqual( Stem("apparut"), "apparut");});
test("appât -> appât", function() {deepEqual( Stem("appât"), "appât");});
test("appel -> appel", function() {deepEqual( Stem("appel"), "appel");});
test("appela -> appel", function() {deepEqual( Stem("appela"), "appel");});
test("appelaient -> appel", function() {deepEqual( Stem("appelaient"), "appel");});
test("appelait -> appel", function() {deepEqual( Stem("appelait"), "appel");});
test("appelant -> appel", function() {deepEqual( Stem("appelant"), "appel");});
test("appelât -> appel", function() {deepEqual( Stem("appelât"), "appel");});
test("appelé -> appel", function() {deepEqual( Stem("appelé"), "appel");});
test("appelée -> appel", function() {deepEqual( Stem("appelée"), "appel");});
test("appelées -> appel", function() {deepEqual( Stem("appelées"), "appel");});
test("appeler -> appel", function() {deepEqual( Stem("appeler"), "appel");});
test("appelés -> appel", function() {deepEqual( Stem("appelés"), "appel");});
test("appelez -> appel", function() {deepEqual( Stem("appelez"), "appel");});
test("appelle -> appel", function() {deepEqual( Stem("appelle"), "appel");});
test("appellent -> appellent", function() {deepEqual( Stem("appellent"), "appellent");});
test("appellera -> appel", function() {deepEqual( Stem("appellera"), "appel");});
test("appellerai -> appel", function() {deepEqual( Stem("appellerai"), "appel");});
test("appellerait -> appel", function() {deepEqual( Stem("appellerait"), "appel");});
test("appellerez -> appel", function() {deepEqual( Stem("appellerez"), "appel");});
test("appelleront -> appel", function() {deepEqual( Stem("appelleront"), "appel");});
test("appelles -> appel", function() {deepEqual( Stem("appelles"), "appel");});
test("appendices -> appendic", function() {deepEqual( Stem("appendices"), "appendic");});
test("appert -> appert", function() {deepEqual( Stem("appert"), "appert");});
test("appesantie -> appesant", function() {deepEqual( Stem("appesantie"), "appesant");});
test("appesantis -> appesant", function() {deepEqual( Stem("appesantis"), "appesant");});
test("appétit -> appet", function() {deepEqual( Stem("appétit"), "appet");});
test("applaudi -> applaud", function() {deepEqual( Stem("applaudi"), "applaud");});
test("applaudie -> applaud", function() {deepEqual( Stem("applaudie"), "applaud");});
test("applaudir -> applaud", function() {deepEqual( Stem("applaudir"), "applaud");});
test("applaudirent -> applaud", function() {deepEqual( Stem("applaudirent"), "applaud");});
test("applaudissaient -> applaud", function() {deepEqual( Stem("applaudissaient"), "applaud");});
test("applaudissements -> applaud", function() {deepEqual( Stem("applaudissements"), "applaud");});
test("applaudit -> applaud", function() {deepEqual( Stem("applaudit"), "applaud");});
test("applicables -> applic", function() {deepEqual( Stem("applicables"), "applic");});
test("application -> appliqu", function() {deepEqual( Stem("application"), "appliqu");});
test("appliqua -> appliqu", function() {deepEqual( Stem("appliqua"), "appliqu");});
test("appliquait -> appliqu", function() {deepEqual( Stem("appliquait"), "appliqu");});
test("applique -> appliqu", function() {deepEqual( Stem("applique"), "appliqu");});
test("appliqué -> appliqu", function() {deepEqual( Stem("appliqué"), "appliqu");});
test("appliquée -> appliqu", function() {deepEqual( Stem("appliquée"), "appliqu");});
test("appliquer -> appliqu", function() {deepEqual( Stem("appliquer"), "appliqu");});
test("appliquez -> appliqu", function() {deepEqual( Stem("appliquez"), "appliqu");});
test("appoint -> appoint", function() {deepEqual( Stem("appoint"), "appoint");});
test("appointements -> appoint", function() {deepEqual( Stem("appointements"), "appoint");});
test("appointés -> appoint", function() {deepEqual( Stem("appointés"), "appoint");});
test("apporta -> apport", function() {deepEqual( Stem("apporta"), "apport");});
test("apportaient -> apport", function() {deepEqual( Stem("apportaient"), "apport");});
test("apportait -> apport", function() {deepEqual( Stem("apportait"), "apport");});
test("apportant -> apport", function() {deepEqual( Stem("apportant"), "apport");});
test("apporte -> apport", function() {deepEqual( Stem("apporte"), "apport");});
test("apporté -> apport", function() {deepEqual( Stem("apporté"), "apport");});
test("apportée -> apport", function() {deepEqual( Stem("apportée"), "apport");});
test("apportées -> apport", function() {deepEqual( Stem("apportées"), "apport");});
test("apporter -> apport", function() {deepEqual( Stem("apporter"), "apport");});
test("apporterai -> apport", function() {deepEqual( Stem("apporterai"), "apport");});
test("apporterait -> apport", function() {deepEqual( Stem("apporterait"), "apport");});
test("apportés -> apport", function() {deepEqual( Stem("apportés"), "apport");});
test("apportez -> apport", function() {deepEqual( Stem("apportez"), "apport");});
test("apportiez -> apport", function() {deepEqual( Stem("apportiez"), "apport");});
test("apposa -> appos", function() {deepEqual( Stem("apposa"), "appos");});
test("apposer -> appos", function() {deepEqual( Stem("apposer"), "appos");});
test("apposés -> appos", function() {deepEqual( Stem("apposés"), "appos");});
test("apprécie -> apprec", function() {deepEqual( Stem("apprécie"), "apprec");});
test("appréciée -> appréci", function() {deepEqual( Stem("appréciée"), "appréci");});
test("apprécier -> appréci", function() {deepEqual( Stem("apprécier"), "appréci");});
test("appréciés -> appréci", function() {deepEqual( Stem("appréciés"), "appréci");});
test("appréhension -> appréhens", function() {deepEqual( Stem("appréhension"), "appréhens");});
test("apprenaient -> appren", function() {deepEqual( Stem("apprenaient"), "appren");});
test("apprenait -> appren", function() {deepEqual( Stem("apprenait"), "appren");});
test("apprenant -> appren", function() {deepEqual( Stem("apprenant"), "appren");});
test("apprend -> apprend", function() {deepEqual( Stem("apprend"), "apprend");});
test("apprendra -> apprendr", function() {deepEqual( Stem("apprendra"), "apprendr");});
test("apprendrais -> apprendr", function() {deepEqual( Stem("apprendrais"), "apprendr");});
test("apprendrait -> apprendr", function() {deepEqual( Stem("apprendrait"), "apprendr");});
test("apprendre -> apprendr", function() {deepEqual( Stem("apprendre"), "apprendr");});
test("apprendrez -> apprendr", function() {deepEqual( Stem("apprendrez"), "apprendr");});
test("apprendrions -> apprendr", function() {deepEqual( Stem("apprendrions"), "apprendr");});
test("apprendront -> apprendront", function() {deepEqual( Stem("apprendront"), "apprendront");});
test("apprends -> apprend", function() {deepEqual( Stem("apprends"), "apprend");});
test("apprenez -> appren", function() {deepEqual( Stem("apprenez"), "appren");});
test("apprennes -> appren", function() {deepEqual( Stem("apprennes"), "appren");});
test("apprêtait -> apprêt", function() {deepEqual( Stem("apprêtait"), "apprêt");});
test("apprêter -> apprêt", function() {deepEqual( Stem("apprêter"), "apprêt");});
test("apprêtons -> apprêton", function() {deepEqual( Stem("apprêtons"), "apprêton");});
test("apprirent -> apprirent", function() {deepEqual( Stem("apprirent"), "apprirent");});
test("appris -> appris", function() {deepEqual( Stem("appris"), "appris");});
test("apprise -> appris", function() {deepEqual( Stem("apprise"), "appris");});
test("apprises -> appris", function() {deepEqual( Stem("apprises"), "appris");});
test("apprit -> apprit", function() {deepEqual( Stem("apprit"), "apprit");});
test("apprivoisés -> apprivois", function() {deepEqual( Stem("apprivoisés"), "apprivois");});
test("approbation -> approb", function() {deepEqual( Stem("approbation"), "approb");});
test("approcha -> approch", function() {deepEqual( Stem("approcha"), "approch");});
test("approchaient -> approch", function() {deepEqual( Stem("approchaient"), "approch");});
test("approchait -> approch", function() {deepEqual( Stem("approchait"), "approch");});
test("approchant -> approch", function() {deepEqual( Stem("approchant"), "approch");});
test("approche -> approch", function() {deepEqual( Stem("approche"), "approch");});
test("approché -> approch", function() {deepEqual( Stem("approché"), "approch");});
test("approchée -> approch", function() {deepEqual( Stem("approchée"), "approch");});
test("approchent -> approchent", function() {deepEqual( Stem("approchent"), "approchent");});
test("approcher -> approch", function() {deepEqual( Stem("approcher"), "approch");});
test("approchèrent -> approch", function() {deepEqual( Stem("approchèrent"), "approch");});
test("approches -> approch", function() {deepEqual( Stem("approches"), "approch");});
test("approchés -> approch", function() {deepEqual( Stem("approchés"), "approch");});
test("approfondie -> approfond", function() {deepEqual( Stem("approfondie"), "approfond");});
test("approprié -> appropri", function() {deepEqual( Stem("approprié"), "appropri");});
test("approuva -> approuv", function() {deepEqual( Stem("approuva"), "approuv");});
test("approuvé -> approuv", function() {deepEqual( Stem("approuvé"), "approuv");});
test("approuvée -> approuv", function() {deepEqual( Stem("approuvée"), "approuv");});
test("approuvera -> approuv", function() {deepEqual( Stem("approuvera"), "approuv");});
test("approuves -> approuv", function() {deepEqual( Stem("approuves"), "approuv");});
test("appui -> appui", function() {deepEqual( Stem("appui"), "appui");});
test("appuie -> appui", function() {deepEqual( Stem("appuie"), "appui");});
test("appuya -> appui", function() {deepEqual( Stem("appuya"), "appui");});
test("appuyaient -> appui", function() {deepEqual( Stem("appuyaient"), "appui");});
test("appuyais -> appui", function() {deepEqual( Stem("appuyais"), "appui");});
test("appuyait -> appui", function() {deepEqual( Stem("appuyait"), "appui");});
test("appuyant -> appui", function() {deepEqual( Stem("appuyant"), "appui");});
test("appuyé -> appui", function() {deepEqual( Stem("appuyé"), "appui");});
test("appuyée -> appui", function() {deepEqual( Stem("appuyée"), "appui");});
test("appuyées -> appui", function() {deepEqual( Stem("appuyées"), "appui");});
test("appuyer -> appui", function() {deepEqual( Stem("appuyer"), "appui");});
test("âpre -> âpre", function() {deepEqual( Stem("âpre"), "âpre");});
test("après -> apres", function() {deepEqual( Stem("après"), "apres");});
test("april -> april", function() {deepEqual( Stem("april"), "april");});
test("aptitude -> aptitud", function() {deepEqual( Stem("aptitude"), "aptitud");});
test("aquarelle -> aquarel", function() {deepEqual( Stem("aquarelle"), "aquarel");});
test("aquetta -> aquet", function() {deepEqual( Stem("aquetta"), "aquet");});
test("aquilin -> aquilin", function() {deepEqual( Stem("aquilin"), "aquilin");});
test("aquitaine -> aquitain", function() {deepEqual( Stem("aquitaine"), "aquitain");});
test("arabe -> arab", function() {deepEqual( Stem("arabe"), "arab");});
test("arabes -> arab", function() {deepEqual( Stem("arabes"), "arab");});
test("arabique -> arab", function() {deepEqual( Stem("arabique"), "arab");});
test("araceli -> aracel", function() {deepEqual( Stem("araceli"), "aracel");});
test("arbitraire -> arbitrair", function() {deepEqual( Stem("arbitraire"), "arbitrair");});
test("arbitraires -> arbitrair", function() {deepEqual( Stem("arbitraires"), "arbitrair");});
test("arbitre -> arbitr", function() {deepEqual( Stem("arbitre"), "arbitr");});
test("arbitres -> arbitr", function() {deepEqual( Stem("arbitres"), "arbitr");});
test("arboré -> arbor", function() {deepEqual( Stem("arboré"), "arbor");});
test("arborer -> arbor", function() {deepEqual( Stem("arborer"), "arbor");});
test("arborescentes -> arborescent", function() {deepEqual( Stem("arborescentes"), "arborescent");});
test("arbre -> arbre", function() {deepEqual( Stem("arbre"), "arbre");});
test("arbres -> arbre", function() {deepEqual( Stem("arbres"), "arbre");});
test("arbrisseaux -> arbrisseau", function() {deepEqual( Stem("arbrisseaux"), "arbrisseau");});
test("arc -> arc", function() {deepEqual( Stem("arc"), "arc");});
test("arceaux -> arceau", function() {deepEqual( Stem("arceaux"), "arceau");});
test("arche -> arche", function() {deepEqual( Stem("arche"), "arche");});
test("archet -> archet", function() {deepEqual( Stem("archet"), "archet");});
test("archevêché -> archevêch", function() {deepEqual( Stem("archevêché"), "archevêch");});
test("archevêque -> archevêqu", function() {deepEqual( Stem("archevêque"), "archevêqu");});
test("archevêques -> archevêqu", function() {deepEqual( Stem("archevêques"), "archevêqu");});
test("archiduc -> archiduc", function() {deepEqual( Stem("archiduc"), "archiduc");});
test("archiépiscopal -> archiépiscopal", function() {deepEqual( Stem("archiépiscopal"), "archiépiscopal");});
test("archiépiscopale -> archiépiscopal", function() {deepEqual( Stem("archiépiscopale"), "archiépiscopal");});
test("archifolle -> archifoll", function() {deepEqual( Stem("archifolle"), "archifoll");});
test("archiprêtre -> archiprêtr", function() {deepEqual( Stem("archiprêtre"), "archiprêtr");});
test("architecte -> architect", function() {deepEqual( Stem("architecte"), "architect");});
test("architecture -> architectur", function() {deepEqual( Stem("architecture"), "architectur");});
test("archives -> archiv", function() {deepEqual( Stem("archives"), "archiv");});
test("arcole -> arcol", function() {deepEqual( Stem("arcole"), "arcol");});
test("arçon -> arçon", function() {deepEqual( Stem("arçon"), "arçon");});
test("ardemment -> ardemment", function() {deepEqual( Stem("ardemment"), "ardemment");});
test("ardent -> ardent", function() {deepEqual( Stem("ardent"), "ardent");});
test("ardente -> ardent", function() {deepEqual( Stem("ardente"), "ardent");});
test("ardentes -> ardent", function() {deepEqual( Stem("ardentes"), "ardent");});
test("ardents -> ardent", function() {deepEqual( Stem("ardents"), "ardent");});
test("ardeur -> ardeur", function() {deepEqual( Stem("ardeur"), "ardeur");});
test("ardu -> ardu", function() {deepEqual( Stem("ardu"), "ardu");});
test("are -> are", function() {deepEqual( Stem("are"), "are");});
test("arecs -> arec", function() {deepEqual( Stem("arecs"), "arec");});
test("aresi -> ares", function() {deepEqual( Stem("aresi"), "ares");});
test("arêtes -> arêt", function() {deepEqual( Stem("arêtes"), "arêt");});
test("argent -> argent", function() {deepEqual( Stem("argent"), "argent");});
test("argentée -> argent", function() {deepEqual( Stem("argentée"), "argent");});
test("argile -> argil", function() {deepEqual( Stem("argile"), "argil");});
test("argument -> argument", function() {deepEqual( Stem("argument"), "argument");});
test("arguments -> argument", function() {deepEqual( Stem("arguments"), "argument");});
test("arides -> arid", function() {deepEqual( Stem("arides"), "arid");});
test("arioste -> ariost", function() {deepEqual( Stem("arioste"), "ariost");});
test("aristocrate -> aristocrat", function() {deepEqual( Stem("aristocrate"), "aristocrat");});
test("aristocratie -> aristocrat", function() {deepEqual( Stem("aristocratie"), "aristocrat");});
test("aristocratique -> aristocrat", function() {deepEqual( Stem("aristocratique"), "aristocrat");});
test("aristocratiques -> aristocrat", function() {deepEqual( Stem("aristocratiques"), "aristocrat");});
test("arithmétique -> arithmet", function() {deepEqual( Stem("arithmétique"), "arithmet");});
test("arkansas -> arkans", function() {deepEqual( Stem("arkansas"), "arkans");});
test("arlequin -> arlequin", function() {deepEqual( Stem("arlequin"), "arlequin");});
test("arma -> arma", function() {deepEqual( Stem("arma"), "arma");});
test("armait -> armait", function() {deepEqual( Stem("armait"), "armait");});
test("armant -> armant", function() {deepEqual( Stem("armant"), "armant");});
test("armateur -> armateur", function() {deepEqual( Stem("armateur"), "armateur");});
test("armateurs -> armateur", function() {deepEqual( Stem("armateurs"), "armateur");});
test("arme -> arme", function() {deepEqual( Stem("arme"), "arme");});
test("armé -> armé", function() {deepEqual( Stem("armé"), "armé");});
test("armée -> armé", function() {deepEqual( Stem("armée"), "armé");});
test("armées -> armé", function() {deepEqual( Stem("armées"), "armé");});
test("arméniennes -> arménien", function() {deepEqual( Stem("arméniennes"), "arménien");});
test("arméniens -> arménien", function() {deepEqual( Stem("arméniens"), "arménien");});
test("armer -> armer", function() {deepEqual( Stem("armer"), "armer");});
test("armes -> arme", function() {deepEqual( Stem("armes"), "arme");});
test("armés -> armé", function() {deepEqual( Stem("armés"), "armé");});
test("armide -> armid", function() {deepEqual( Stem("armide"), "armid");});
test("armoire -> armoir", function() {deepEqual( Stem("armoire"), "armoir");});
test("armoires -> armoir", function() {deepEqual( Stem("armoires"), "armoir");});
test("armoiries -> armoir", function() {deepEqual( Stem("armoiries"), "armoir");});
test("armonica -> armonic", function() {deepEqual( Stem("armonica"), "armonic");});
test("armurier -> armuri", function() {deepEqual( Stem("armurier"), "armuri");});
test("arnauld -> arnauld", function() {deepEqual( Stem("arnauld"), "arnauld");});
test("arpent -> arpent", function() {deepEqual( Stem("arpent"), "arpent");});
test("arpents -> arpent", function() {deepEqual( Stem("arpents"), "arpent");});
test("arquebuser -> arquebus", function() {deepEqual( Stem("arquebuser"), "arquebus");});
test("arquées -> arqué", function() {deepEqual( Stem("arquées"), "arqué");});
test("arqués -> arqué", function() {deepEqual( Stem("arqués"), "arqué");});
test("arracha -> arrach", function() {deepEqual( Stem("arracha"), "arrach");});
test("arrachait -> arrach", function() {deepEqual( Stem("arrachait"), "arrach");});
test("arrachant -> arrach", function() {deepEqual( Stem("arrachant"), "arrach");});
test("arrache -> arrach", function() {deepEqual( Stem("arrache"), "arrach");});
test("arraché -> arrach", function() {deepEqual( Stem("arraché"), "arrach");});
test("arrachée -> arrach", function() {deepEqual( Stem("arrachée"), "arrach");});
test("arrachent -> arrachent", function() {deepEqual( Stem("arrachent"), "arrachent");});
test("arracher -> arrach", function() {deepEqual( Stem("arracher"), "arrach");});
test("arrachèrent -> arrach", function() {deepEqual( Stem("arrachèrent"), "arrach");});
test("arrachés -> arrach", function() {deepEqual( Stem("arrachés"), "arrach");});
test("arrange -> arrang", function() {deepEqual( Stem("arrange"), "arrang");});
test("arrangé -> arrang", function() {deepEqual( Stem("arrangé"), "arrang");});
test("arrangea -> arrang", function() {deepEqual( Stem("arrangea"), "arrang");});
test("arrangeaient -> arrang", function() {deepEqual( Stem("arrangeaient"), "arrang");});
test("arrangeait -> arrang", function() {deepEqual( Stem("arrangeait"), "arrang");});
test("arrangée -> arrang", function() {deepEqual( Stem("arrangée"), "arrang");});
test("arrangées -> arrang", function() {deepEqual( Stem("arrangées"), "arrang");});
test("arrangement -> arrang", function() {deepEqual( Stem("arrangement"), "arrang");});
test("arrangements -> arrang", function() {deepEqual( Stem("arrangements"), "arrang");});
test("arrangent -> arrangent", function() {deepEqual( Stem("arrangent"), "arrangent");});
test("arranger -> arrang", function() {deepEqual( Stem("arranger"), "arrang");});
test("arrangera -> arrang", function() {deepEqual( Stem("arrangera"), "arrang");});
test("arrangerait -> arrang", function() {deepEqual( Stem("arrangerait"), "arrang");});
test("arrangés -> arrang", function() {deepEqual( Stem("arrangés"), "arrang");});
test("arrérages -> arrérag", function() {deepEqual( Stem("arrérages"), "arrérag");});
test("arrestation -> arrest", function() {deepEqual( Stem("arrestation"), "arrest");});
test("arrestations -> arrest", function() {deepEqual( Stem("arrestations"), "arrest");});
test("arrêt -> arrêt", function() {deepEqual( Stem("arrêt"), "arrêt");});
test("arrêta -> arrêt", function() {deepEqual( Stem("arrêta"), "arrêt");});
test("arrêtaient -> arrêt", function() {deepEqual( Stem("arrêtaient"), "arrêt");});
test("arrêtait -> arrêt", function() {deepEqual( Stem("arrêtait"), "arrêt");});
test("arrêtant -> arrêt", function() {deepEqual( Stem("arrêtant"), "arrêt");});
test("arrête -> arrêt", function() {deepEqual( Stem("arrête"), "arrêt");});
test("arrêté -> arrêt", function() {deepEqual( Stem("arrêté"), "arrêt");});
test("arrêtée -> arrêt", function() {deepEqual( Stem("arrêtée"), "arrêt");});
test("arrêtées -> arrêt", function() {deepEqual( Stem("arrêtées"), "arrêt");});
test("arrêtent -> arrêtent", function() {deepEqual( Stem("arrêtent"), "arrêtent");});
test("arrêter -> arrêt", function() {deepEqual( Stem("arrêter"), "arrêt");});
test("arrêtera -> arrêt", function() {deepEqual( Stem("arrêtera"), "arrêt");});
test("arrêterai -> arrêt", function() {deepEqual( Stem("arrêterai"), "arrêt");});
test("arrêterait -> arrêt", function() {deepEqual( Stem("arrêterait"), "arrêt");});
test("arrêtèrent -> arrêt", function() {deepEqual( Stem("arrêtèrent"), "arrêt");});
test("arrêterons -> arrêt", function() {deepEqual( Stem("arrêterons"), "arrêt");});
test("arrêteront -> arrêt", function() {deepEqual( Stem("arrêteront"), "arrêt");});
test("arrêtés -> arrêt", function() {deepEqual( Stem("arrêtés"), "arrêt");});
test("arrêtez -> arrêt", function() {deepEqual( Stem("arrêtez"), "arrêt");});
test("arrêtiez -> arrêt", function() {deepEqual( Stem("arrêtiez"), "arrêt");});
test("arrêtons -> arrêton", function() {deepEqual( Stem("arrêtons"), "arrêton");});
test("arrêts -> arrêt", function() {deepEqual( Stem("arrêts"), "arrêt");});
test("arrhes -> arrhe", function() {deepEqual( Stem("arrhes"), "arrhe");});
test("arrien -> arrien", function() {deepEqual( Stem("arrien"), "arrien");});
test("arrière -> arrier", function() {deepEqual( Stem("arrière"), "arrier");});
test("arriva -> arriv", function() {deepEqual( Stem("arriva"), "arriv");});
test("arrivai -> arriv", function() {deepEqual( Stem("arrivai"), "arriv");});
test("arrivaient -> arriv", function() {deepEqual( Stem("arrivaient"), "arriv");});
test("arrivais -> arriv", function() {deepEqual( Stem("arrivais"), "arriv");});
test("arrivait -> arriv", function() {deepEqual( Stem("arrivait"), "arriv");});
test("arrivant -> arriv", function() {deepEqual( Stem("arrivant"), "arriv");});
test("arrivants -> arriv", function() {deepEqual( Stem("arrivants"), "arriv");});
test("arrivât -> arriv", function() {deepEqual( Stem("arrivât"), "arriv");});
test("arrive -> arriv", function() {deepEqual( Stem("arrive"), "arriv");});
test("arrivé -> arriv", function() {deepEqual( Stem("arrivé"), "arriv");});
test("arrivée -> arriv", function() {deepEqual( Stem("arrivée"), "arriv");});
test("arrivées -> arriv", function() {deepEqual( Stem("arrivées"), "arriv");});
test("arrivent -> arrivent", function() {deepEqual( Stem("arrivent"), "arrivent");});
test("arriver -> arriv", function() {deepEqual( Stem("arriver"), "arriv");});
test("arrivera -> arriv", function() {deepEqual( Stem("arrivera"), "arriv");});
test("arriveraient -> arriv", function() {deepEqual( Stem("arriveraient"), "arriv");});
test("arriverais -> arriv", function() {deepEqual( Stem("arriverais"), "arriv");});
test("arriverait -> arriv", function() {deepEqual( Stem("arriverait"), "arriv");});
test("arrivèrent -> arriv", function() {deepEqual( Stem("arrivèrent"), "arriv");});
test("arriverez -> arriv", function() {deepEqual( Stem("arriverez"), "arriv");});
test("arriverions -> arriv", function() {deepEqual( Stem("arriverions"), "arriv");});
test("arriverons -> arriv", function() {deepEqual( Stem("arriverons"), "arriv");});
test("arriveront -> arriv", function() {deepEqual( Stem("arriveront"), "arriv");});
test("arrives -> arriv", function() {deepEqual( Stem("arrives"), "arriv");});
test("arrivés -> arriv", function() {deepEqual( Stem("arrivés"), "arriv");});
test("arrivez -> arriv", function() {deepEqual( Stem("arrivez"), "arriv");});
test("arrivons -> arrivon", function() {deepEqual( Stem("arrivons"), "arrivon");});
test("arrogante -> arrog", function() {deepEqual( Stem("arrogante"), "arrog");});
test("arrondies -> arrond", function() {deepEqual( Stem("arrondies"), "arrond");});
test("arrondis -> arrond", function() {deepEqual( Stem("arrondis"), "arrond");});
test("arrondissait -> arrond", function() {deepEqual( Stem("arrondissait"), "arrond");});
test("arrondissement -> arrond", function() {deepEqual( Stem("arrondissement"), "arrond");});
test("arrondit -> arrond", function() {deepEqual( Stem("arrondit"), "arrond");});
test("arrosé -> arros", function() {deepEqual( Stem("arrosé"), "arros");});
test("arrosées -> arros", function() {deepEqual( Stem("arrosées"), "arros");});
test("arsenal -> arsenal", function() {deepEqual( Stem("arsenal"), "arsenal");});
test("arsène -> arsen", function() {deepEqual( Stem("arsène"), "arsen");});
test("arsenic -> arsenic", function() {deepEqual( Stem("arsenic"), "arsenic");});
test("art -> art", function() {deepEqual( Stem("art"), "art");});
test("arte -> arte", function() {deepEqual( Stem("arte"), "arte");});
test("artère -> arter", function() {deepEqual( Stem("artère"), "arter");});
test("arthémidore -> arthémidor", function() {deepEqual( Stem("arthémidore"), "arthémidor");});
test("article -> articl", function() {deepEqual( Stem("article"), "articl");});
test("articles -> articl", function() {deepEqual( Stem("articles"), "articl");});
test("articulait -> articul", function() {deepEqual( Stem("articulait"), "articul");});
test("articulant -> articul", function() {deepEqual( Stem("articulant"), "articul");});
test("articulée -> articul", function() {deepEqual( Stem("articulée"), "articul");});
test("articuler -> articul", function() {deepEqual( Stem("articuler"), "articul");});
test("articulés -> articul", function() {deepEqual( Stem("articulés"), "articul");});
test("artifice -> artific", function() {deepEqual( Stem("artifice"), "artific");});
test("artillerie -> artiller", function() {deepEqual( Stem("artillerie"), "artiller");});
test("artisans -> artisan", function() {deepEqual( Stem("artisans"), "artisan");});
test("artiste -> artist", function() {deepEqual( Stem("artiste"), "artist");});
test("artistes -> artist", function() {deepEqual( Stem("artistes"), "artist");});
test("arts -> art", function() {deepEqual( Stem("arts"), "art");});
test("as -> as", function() {deepEqual( Stem("as"), "as");});
test("ascagne -> ascagn", function() {deepEqual( Stem("ascagne"), "ascagn");});
test("ascanio -> ascanio", function() {deepEqual( Stem("ascanio"), "ascanio");});
test("ascétique -> ascet", function() {deepEqual( Stem("ascétique"), "ascet");});
test("asie -> asi", function() {deepEqual( Stem("asie"), "asi");});
test("asile -> asil", function() {deepEqual( Stem("asile"), "asil");});
test("aspect -> aspect", function() {deepEqual( Stem("aspect"), "aspect");});
test("aspects -> aspect", function() {deepEqual( Stem("aspects"), "aspect");});
test("aspérités -> asper", function() {deepEqual( Stem("aspérités"), "asper");});
test("asphaltite -> asphaltit", function() {deepEqual( Stem("asphaltite"), "asphaltit");});
test("asphyxie -> asphyx", function() {deepEqual( Stem("asphyxie"), "asphyx");});
test("asphyxié -> asphyxi", function() {deepEqual( Stem("asphyxié"), "asphyxi");});
test("aspiciam -> aspiciam", function() {deepEqual( Stem("aspiciam"), "aspiciam");});
test("aspira -> aspir", function() {deepEqual( Stem("aspira"), "aspir");});
test("aspirait -> aspir", function() {deepEqual( Stem("aspirait"), "aspir");});
test("aspirants -> aspir", function() {deepEqual( Stem("aspirants"), "aspir");});
test("aspirations -> aspir", function() {deepEqual( Stem("aspirations"), "aspir");});
test("aspire -> aspir", function() {deepEqual( Stem("aspire"), "aspir");});
test("aspirer -> aspir", function() {deepEqual( Stem("aspirer"), "aspir");});
test("aspirez -> aspir", function() {deepEqual( Stem("aspirez"), "aspir");});
test("assaillaient -> assaill", function() {deepEqual( Stem("assaillaient"), "assaill");});
test("assaillant -> assaill", function() {deepEqual( Stem("assaillant"), "assaill");});
test("assaillants -> assaill", function() {deepEqual( Stem("assaillants"), "assaill");});
test("assailli -> assaill", function() {deepEqual( Stem("assailli"), "assaill");});
test("assaillie -> assaill", function() {deepEqual( Stem("assaillie"), "assaill");});
test("assaillis -> assaill", function() {deepEqual( Stem("assaillis"), "assaill");});
test("assassin -> assassin", function() {deepEqual( Stem("assassin"), "assassin");});
test("assassinait -> assassin", function() {deepEqual( Stem("assassinait"), "assassin");});
test("assassinat -> assassinat", function() {deepEqual( Stem("assassinat"), "assassinat");});
test("assassine -> assassin", function() {deepEqual( Stem("assassine"), "assassin");});
test("assassiné -> assassin", function() {deepEqual( Stem("assassiné"), "assassin");});
test("assassiner -> assassin", function() {deepEqual( Stem("assassiner"), "assassin");});
test("assassinés -> assassin", function() {deepEqual( Stem("assassinés"), "assassin");});
test("assassins -> assassin", function() {deepEqual( Stem("assassins"), "assassin");});
test("assaut -> assaut", function() {deepEqual( Stem("assaut"), "assaut");});
test("assembla -> assembl", function() {deepEqual( Stem("assembla"), "assembl");});
test("assemblée -> assembl", function() {deepEqual( Stem("assemblée"), "assembl");});
test("assembler -> assembl", function() {deepEqual( Stem("assembler"), "assembl");});
test("assentiment -> assent", function() {deepEqual( Stem("assentiment"), "assent");});
test("asseoir -> asseoir", function() {deepEqual( Stem("asseoir"), "asseoir");});
test("assertions -> assert", function() {deepEqual( Stem("assertions"), "assert");});
test("asseyaient -> assei", function() {deepEqual( Stem("asseyaient"), "assei");});
test("asseyait -> assei", function() {deepEqual( Stem("asseyait"), "assei");});
test("asseyant -> assei", function() {deepEqual( Stem("asseyant"), "assei");});
test("asseyez -> assei", function() {deepEqual( Stem("asseyez"), "assei");});
test("assez -> assez", function() {deepEqual( Stem("assez"), "assez");});
test("assidue -> assidu", function() {deepEqual( Stem("assidue"), "assidu");});
test("assiduité -> assidu", function() {deepEqual( Stem("assiduité"), "assidu");});
test("assiduités -> assidu", function() {deepEqual( Stem("assiduités"), "assidu");});
test("assidûment -> assidû", function() {deepEqual( Stem("assidûment"), "assidû");});
test("assied -> assied", function() {deepEqual( Stem("assied"), "assied");});
test("assiégé -> assieg", function() {deepEqual( Stem("assiégé"), "assieg");});
test("assiégée -> assieg", function() {deepEqual( Stem("assiégée"), "assieg");});
test("assiéger -> assieg", function() {deepEqual( Stem("assiéger"), "assieg");});
test("assiégés -> assieg", function() {deepEqual( Stem("assiégés"), "assieg");});
test("assiette -> assiet", function() {deepEqual( Stem("assiette"), "assiet");});
test("assignats -> assignat", function() {deepEqual( Stem("assignats"), "assignat");});
test("assigne -> assign", function() {deepEqual( Stem("assigne"), "assign");});
test("assigné -> assign", function() {deepEqual( Stem("assigné"), "assign");});
test("assigner -> assign", function() {deepEqual( Stem("assigner"), "assign");});
test("assirent -> assirent", function() {deepEqual( Stem("assirent"), "assirent");});
test("assis -> assis", function() {deepEqual( Stem("assis"), "assis");});
test("assise -> assis", function() {deepEqual( Stem("assise"), "assis");});
test("assises -> assis", function() {deepEqual( Stem("assises"), "assis");});
test("assista -> assist", function() {deepEqual( Stem("assista"), "assist");});
test("assistaient -> assist", function() {deepEqual( Stem("assistaient"), "assist");});
test("assistait -> assist", function() {deepEqual( Stem("assistait"), "assist");});
test("assistance -> assist", function() {deepEqual( Stem("assistance"), "assist");});
test("assistant -> assist", function() {deepEqual( Stem("assistant"), "assist");});
test("assistants -> assist", function() {deepEqual( Stem("assistants"), "assist");});
test("assiste -> assist", function() {deepEqual( Stem("assiste"), "assist");});
test("assisté -> assist", function() {deepEqual( Stem("assisté"), "assist");});
test("assister -> assist", function() {deepEqual( Stem("assister"), "assist");});
test("assistera -> assist", function() {deepEqual( Stem("assistera"), "assist");});
test("assit -> assit", function() {deepEqual( Stem("assit"), "assit");});
test("associaient -> associ", function() {deepEqual( Stem("associaient"), "associ");});
test("association -> associ", function() {deepEqual( Stem("association"), "associ");});
test("associations -> associ", function() {deepEqual( Stem("associations"), "associ");});
test("associe -> assoc", function() {deepEqual( Stem("associe"), "assoc");});
test("associé -> associ", function() {deepEqual( Stem("associé"), "associ");});
test("assoient -> assoient", function() {deepEqual( Stem("assoient"), "assoient");});
test("assombri -> assombr", function() {deepEqual( Stem("assombri"), "assombr");});
test("assombrit -> assombr", function() {deepEqual( Stem("assombrit"), "assombr");});
test("assommant -> assomm", function() {deepEqual( Stem("assommant"), "assomm");});
test("assommé -> assomm", function() {deepEqual( Stem("assommé"), "assomm");});
test("assommer -> assomm", function() {deepEqual( Stem("assommer"), "assomm");});
test("assommés -> assomm", function() {deepEqual( Stem("assommés"), "assomm");});
test("assommoir -> assommoir", function() {deepEqual( Stem("assommoir"), "assommoir");});
test("assoupie -> assoup", function() {deepEqual( Stem("assoupie"), "assoup");});
test("assoupissantes -> assoup", function() {deepEqual( Stem("assoupissantes"), "assoup");});
test("assoupissement -> assoup", function() {deepEqual( Stem("assoupissement"), "assoup");});
test("assoupit -> assoup", function() {deepEqual( Stem("assoupit"), "assoup");});
test("assourdissant -> assourd", function() {deepEqual( Stem("assourdissant"), "assourd");});
test("assourdit -> assourd", function() {deepEqual( Stem("assourdit"), "assourd");});
test("assura -> assur", function() {deepEqual( Stem("assura"), "assur");});
test("assuraient -> assur", function() {deepEqual( Stem("assuraient"), "assur");});
test("assurait -> assur", function() {deepEqual( Stem("assurait"), "assur");});
test("assurance -> assur", function() {deepEqual( Stem("assurance"), "assur");});
test("assurances -> assur", function() {deepEqual( Stem("assurances"), "assur");});
test("assure -> assur", function() {deepEqual( Stem("assure"), "assur");});
test("assuré -> assur", function() {deepEqual( Stem("assuré"), "assur");});
test("assurée -> assur", function() {deepEqual( Stem("assurée"), "assur");});
test("assurées -> assur", function() {deepEqual( Stem("assurées"), "assur");});
test("assurément -> assur", function() {deepEqual( Stem("assurément"), "assur");});
test("assurer -> assur", function() {deepEqual( Stem("assurer"), "assur");});
test("assurerait -> assur", function() {deepEqual( Stem("assurerait"), "assur");});
test("assurerez -> assur", function() {deepEqual( Stem("assurerez"), "assur");});
test("assureront -> assur", function() {deepEqual( Stem("assureront"), "assur");});
test("assurghur -> assurghur", function() {deepEqual( Stem("assurghur"), "assurghur");});
test("astéroïdes -> astéroïd", function() {deepEqual( Stem("astéroïdes"), "astéroïd");});
test("asthme -> asthme", function() {deepEqual( Stem("asthme"), "asthme");});
test("asti -> asti", function() {deepEqual( Stem("asti"), "asti");});
test("astre -> astre", function() {deepEqual( Stem("astre"), "astre");});
test("astreindre -> astreindr", function() {deepEqual( Stem("astreindre"), "astreindr");});
test("astreins -> astrein", function() {deepEqual( Stem("astreins"), "astrein");});
test("astres -> astre", function() {deepEqual( Stem("astres"), "astre");});
test("astrologie -> astrolog", function() {deepEqual( Stem("astrologie"), "astrolog");});
test("astrologique -> astrolog", function() {deepEqual( Stem("astrologique"), "astrolog");});
test("astrologiques -> astrolog", function() {deepEqual( Stem("astrologiques"), "astrolog");});
test("astrologues -> astrologu", function() {deepEqual( Stem("astrologues"), "astrologu");});
test("astronomes -> astronom", function() {deepEqual( Stem("astronomes"), "astronom");});
test("astronomie -> astronom", function() {deepEqual( Stem("astronomie"), "astronom");});
test("astronomique -> astronom", function() {deepEqual( Stem("astronomique"), "astronom");});
test("astuce -> astuc", function() {deepEqual( Stem("astuce"), "astuc");});
test("at -> at", function() {deepEqual( Stem("at"), "at");});
test("atelier -> ateli", function() {deepEqual( Stem("atelier"), "ateli");});
test("athènes -> athen", function() {deepEqual( Stem("athènes"), "athen");});
test("atlantique -> atlant", function() {deepEqual( Stem("atlantique"), "atlant");});
test("atmosphère -> atmospher", function() {deepEqual( Stem("atmosphère"), "atmospher");});
test("atome -> atom", function() {deepEqual( Stem("atome"), "atom");});
test("atours -> atour", function() {deepEqual( Stem("atours"), "atour");});
test("atouts -> atout", function() {deepEqual( Stem("atouts"), "atout");});
test("atroce -> atroc", function() {deepEqual( Stem("atroce"), "atroc");});
test("atrocement -> atroc", function() {deepEqual( Stem("atrocement"), "atroc");});
test("atroces -> atroc", function() {deepEqual( Stem("atroces"), "atroc");});
test("atrocité -> atroc", function() {deepEqual( Stem("atrocité"), "atroc");});
test("attacha -> attach", function() {deepEqual( Stem("attacha"), "attach");});
test("attachaient -> attach", function() {deepEqual( Stem("attachaient"), "attach");});
test("attachait -> attach", function() {deepEqual( Stem("attachait"), "attach");});
test("attachant -> attach", function() {deepEqual( Stem("attachant"), "attach");});
test("attache -> attach", function() {deepEqual( Stem("attache"), "attach");});
test("attaché -> attach", function() {deepEqual( Stem("attaché"), "attach");});
test("attachée -> attach", function() {deepEqual( Stem("attachée"), "attach");});
test("attachées -> attach", function() {deepEqual( Stem("attachées"), "attach");});
test("attachement -> attach", function() {deepEqual( Stem("attachement"), "attach");});
test("attachent -> attachent", function() {deepEqual( Stem("attachent"), "attachent");});
test("attacher -> attach", function() {deepEqual( Stem("attacher"), "attach");});
test("attachera -> attach", function() {deepEqual( Stem("attachera"), "attach");});
test("attacherai -> attach", function() {deepEqual( Stem("attacherai"), "attach");});
test("attacherait -> attach", function() {deepEqual( Stem("attacherait"), "attach");});
test("attachèrent -> attach", function() {deepEqual( Stem("attachèrent"), "attach");});
test("attachés -> attach", function() {deepEqual( Stem("attachés"), "attach");});
test("attaqua -> attaqu", function() {deepEqual( Stem("attaqua"), "attaqu");});
test("attaquaient -> attaqu", function() {deepEqual( Stem("attaquaient"), "attaqu");});
test("attaquait -> attaqu", function() {deepEqual( Stem("attaquait"), "attaqu");});
test("attaque -> attaqu", function() {deepEqual( Stem("attaque"), "attaqu");});
test("attaqué -> attaqu", function() {deepEqual( Stem("attaqué"), "attaqu");});
test("attaquée -> attaqu", function() {deepEqual( Stem("attaquée"), "attaqu");});
test("attaquer -> attaqu", function() {deepEqual( Stem("attaquer"), "attaqu");});
test("attaques -> attaqu", function() {deepEqual( Stem("attaques"), "attaqu");});
test("attaqués -> attaqu", function() {deepEqual( Stem("attaqués"), "attaqu");});
test("attardé -> attard", function() {deepEqual( Stem("attardé"), "attard");});
test("atteignaient -> atteign", function() {deepEqual( Stem("atteignaient"), "atteign");});
test("atteignait -> atteign", function() {deepEqual( Stem("atteignait"), "atteign");});
test("atteignirent -> atteign", function() {deepEqual( Stem("atteignirent"), "atteign");});
test("atteignit -> atteign", function() {deepEqual( Stem("atteignit"), "atteign");});
test("atteindrait -> atteindr", function() {deepEqual( Stem("atteindrait"), "atteindr");});
test("atteindre -> atteindr", function() {deepEqual( Stem("atteindre"), "atteindr");});
test("atteint -> atteint", function() {deepEqual( Stem("atteint"), "atteint");});
test("atteintes -> atteint", function() {deepEqual( Stem("atteintes"), "atteint");});
test("atteints -> atteint", function() {deepEqual( Stem("atteints"), "atteint");});
test("attelage -> attelag", function() {deepEqual( Stem("attelage"), "attelag");});
test("attelages -> attelag", function() {deepEqual( Stem("attelages"), "attelag");});
test("attelait -> attel", function() {deepEqual( Stem("attelait"), "attel");});
test("attelé -> attel", function() {deepEqual( Stem("attelé"), "attel");});
test("attelée -> attel", function() {deepEqual( Stem("attelée"), "attel");});
test("attelés -> attel", function() {deepEqual( Stem("attelés"), "attel");});
test("attelle -> attel", function() {deepEqual( Stem("attelle"), "attel");});
test("attenait -> atten", function() {deepEqual( Stem("attenait"), "atten");});
test("attenant -> atten", function() {deepEqual( Stem("attenant"), "atten");});
test("attenante -> atten", function() {deepEqual( Stem("attenante"), "atten");});
test("attend -> attend", function() {deepEqual( Stem("attend"), "attend");});
test("attendaient -> attend", function() {deepEqual( Stem("attendaient"), "attend");});
test("attendais -> attend", function() {deepEqual( Stem("attendais"), "attend");});
test("attendait -> attend", function() {deepEqual( Stem("attendait"), "attend");});
test("attendant -> attend", function() {deepEqual( Stem("attendant"), "attend");});
test("attendent -> attendent", function() {deepEqual( Stem("attendent"), "attendent");});
test("attendez -> attend", function() {deepEqual( Stem("attendez"), "attend");});
test("attendirent -> attend", function() {deepEqual( Stem("attendirent"), "attend");});
test("attendit -> attend", function() {deepEqual( Stem("attendit"), "attend");});
test("attendons -> attendon", function() {deepEqual( Stem("attendons"), "attendon");});
test("attendra -> attendr", function() {deepEqual( Stem("attendra"), "attendr");});
test("attendrai -> attendr", function() {deepEqual( Stem("attendrai"), "attendr");});
test("attendrait -> attendr", function() {deepEqual( Stem("attendrait"), "attendr");});
test("attendre -> attendr", function() {deepEqual( Stem("attendre"), "attendr");});
test("attendri -> attendr", function() {deepEqual( Stem("attendri"), "attendr");});
test("attendrie -> attendr", function() {deepEqual( Stem("attendrie"), "attendr");});
test("attendrir -> attendr", function() {deepEqual( Stem("attendrir"), "attendr");});
test("attendriraient -> attendr", function() {deepEqual( Stem("attendriraient"), "attendr");});
test("attendris -> attendr", function() {deepEqual( Stem("attendris"), "attendr");});
test("attendrissant -> attendr", function() {deepEqual( Stem("attendrissant"), "attendr");});
test("attendrissement -> attendr", function() {deepEqual( Stem("attendrissement"), "attendr");});
test("attendrit -> attendr", function() {deepEqual( Stem("attendrit"), "attendr");});
test("attends -> attend", function() {deepEqual( Stem("attends"), "attend");});
test("attendu -> attendu", function() {deepEqual( Stem("attendu"), "attendu");});
test("attendue -> attendu", function() {deepEqual( Stem("attendue"), "attendu");});
test("attendus -> attendus", function() {deepEqual( Stem("attendus"), "attendus");});
test("attente -> attent", function() {deepEqual( Stem("attente"), "attent");});
test("attenté -> attent", function() {deepEqual( Stem("attenté"), "attent");});
test("attenter -> attent", function() {deepEqual( Stem("attenter"), "attent");});
test("attentif -> attent", function() {deepEqual( Stem("attentif"), "attent");});
test("attentifs -> attent", function() {deepEqual( Stem("attentifs"), "attent");});
test("attention -> attent", function() {deepEqual( Stem("attention"), "attent");});
test("attentions -> attent", function() {deepEqual( Stem("attentions"), "attent");});
test("attentive -> attent", function() {deepEqual( Stem("attentive"), "attent");});
test("attentivement -> attent", function() {deepEqual( Stem("attentivement"), "attent");});
test("atterra -> atterr", function() {deepEqual( Stem("atterra"), "atterr");});
test("atterrages -> atterrag", function() {deepEqual( Stem("atterrages"), "atterrag");});
test("atterré -> atterr", function() {deepEqual( Stem("atterré"), "atterr");});
test("atterrée -> atterr", function() {deepEqual( Stem("atterrée"), "atterr");});
test("attestaient -> attest", function() {deepEqual( Stem("attestaient"), "attest");});
test("attiédi -> attied", function() {deepEqual( Stem("attiédi"), "attied");});
test("attira -> attir", function() {deepEqual( Stem("attira"), "attir");});
test("attiraient -> attir", function() {deepEqual( Stem("attiraient"), "attir");});
test("attirait -> attir", function() {deepEqual( Stem("attirait"), "attir");});
test("attire -> attir", function() {deepEqual( Stem("attire"), "attir");});
test("attiré -> attir", function() {deepEqual( Stem("attiré"), "attir");});
test("attirent -> attirent", function() {deepEqual( Stem("attirent"), "attirent");});
test("attirer -> attir", function() {deepEqual( Stem("attirer"), "attir");});
test("attirerait -> attir", function() {deepEqual( Stem("attirerait"), "attir");});
test("attirèrent -> attir", function() {deepEqual( Stem("attirèrent"), "attir");});
test("attirés -> attir", function() {deepEqual( Stem("attirés"), "attir");});
test("attitude -> attitud", function() {deepEqual( Stem("attitude"), "attitud");});
test("attraction -> attract", function() {deepEqual( Stem("attraction"), "attract");});
test("attrait -> attrait", function() {deepEqual( Stem("attrait"), "attrait");});
test("attrapé -> attrap", function() {deepEqual( Stem("attrapé"), "attrap");});
test("attrapera -> attrap", function() {deepEqual( Stem("attrapera"), "attrap");});
test("attrayant -> attrai", function() {deepEqual( Stem("attrayant"), "attrai");});
test("attrayantes -> attrai", function() {deepEqual( Stem("attrayantes"), "attrai");});
test("attribuaient -> attribu", function() {deepEqual( Stem("attribuaient"), "attribu");});
test("attribuait -> attribu", function() {deepEqual( Stem("attribuait"), "attribu");});
test("attribué -> attribu", function() {deepEqual( Stem("attribué"), "attribu");});
test("attribuée -> attribu", function() {deepEqual( Stem("attribuée"), "attribu");});
test("attribuer -> attribu", function() {deepEqual( Stem("attribuer"), "attribu");});
test("attribuera -> attribu", function() {deepEqual( Stem("attribuera"), "attribu");});
test("attributions -> attribu", function() {deepEqual( Stem("attributions"), "attribu");});
test("attristait -> attrist", function() {deepEqual( Stem("attristait"), "attrist");});
test("attristé -> attrist", function() {deepEqual( Stem("attristé"), "attrist");});
test("attristée -> attrist", function() {deepEqual( Stem("attristée"), "attrist");});
test("attrister -> attrist", function() {deepEqual( Stem("attrister"), "attrist");});
test("attroupement -> attroup", function() {deepEqual( Stem("attroupement"), "attroup");});
test("attrouper -> attroup", function() {deepEqual( Stem("attrouper"), "attroup");});
test("au -> au", function() {deepEqual( Stem("au"), "au");});
test("aubaine -> aubain", function() {deepEqual( Stem("aubaine"), "aubain");});
test("aubaines -> aubain", function() {deepEqual( Stem("aubaines"), "aubain");});
test("aube -> aub", function() {deepEqual( Stem("aube"), "aub");});
test("auberge -> auberg", function() {deepEqual( Stem("auberge"), "auberg");});
test("auberges -> auberg", function() {deepEqual( Stem("auberges"), "auberg");});
test("aubergistes -> auberg", function() {deepEqual( Stem("aubergistes"), "auberg");});
test("aubigné -> aubign", function() {deepEqual( Stem("aubigné"), "aubign");});
test("aubry -> aubry", function() {deepEqual( Stem("aubry"), "aubry");});
test("auburn -> auburn", function() {deepEqual( Stem("auburn"), "auburn");});
test("aucun -> aucun", function() {deepEqual( Stem("aucun"), "aucun");});
test("aucune -> aucun", function() {deepEqual( Stem("aucune"), "aucun");});
test("aucunement -> aucun", function() {deepEqual( Stem("aucunement"), "aucun");});
test("audace -> audac", function() {deepEqual( Stem("audace"), "audac");});
test("audacieuse -> audaci", function() {deepEqual( Stem("audacieuse"), "audaci");});
test("audacieuses -> audaci", function() {deepEqual( Stem("audacieuses"), "audaci");});
test("audacieux -> audaci", function() {deepEqual( Stem("audacieux"), "audaci");});
test("audience -> audienc", function() {deepEqual( Stem("audience"), "audienc");});
test("audiences -> audienc", function() {deepEqual( Stem("audiences"), "audienc");});
test("audit -> audit", function() {deepEqual( Stem("audit"), "audit");});
test("auditeur -> auditeur", function() {deepEqual( Stem("auditeur"), "auditeur");});
test("auditeurs -> auditeur", function() {deepEqual( Stem("auditeurs"), "auditeur");});
test("auditoire -> auditoir", function() {deepEqual( Stem("auditoire"), "auditoir");});
test("augmenta -> augment", function() {deepEqual( Stem("augmenta"), "augment");});
test("augmentaient -> augment", function() {deepEqual( Stem("augmentaient"), "augment");});
test("augmentait -> augment", function() {deepEqual( Stem("augmentait"), "augment");});
test("augmentant -> augment", function() {deepEqual( Stem("augmentant"), "augment");});
test("augmentation -> augment", function() {deepEqual( Stem("augmentation"), "augment");});
test("augmente -> augment", function() {deepEqual( Stem("augmente"), "augment");});
test("augmenté -> augment", function() {deepEqual( Stem("augmenté"), "augment");});
test("augmentée -> augment", function() {deepEqual( Stem("augmentée"), "augment");});
test("augmenter -> augment", function() {deepEqual( Stem("augmenter"), "augment");});
test("augmentera -> augment", function() {deepEqual( Stem("augmentera"), "augment");});
test("augmenterait -> augment", function() {deepEqual( Stem("augmenterait"), "augment");});
test("augure -> augur", function() {deepEqual( Stem("augure"), "augur");});
test("augurer -> augur", function() {deepEqual( Stem("augurer"), "augur");});
test("auguste -> august", function() {deepEqual( Stem("auguste"), "august");});
test("augustes -> august", function() {deepEqual( Stem("augustes"), "august");});
test("augustin -> augustin", function() {deepEqual( Stem("augustin"), "augustin");});
test("aujourd -> aujourd", function() {deepEqual( Stem("aujourd"), "aujourd");});
test("aumône -> aumôn", function() {deepEqual( Stem("aumône"), "aumôn");});
test("aumônes -> aumôn", function() {deepEqual( Stem("aumônes"), "aumôn");});
test("aumônier -> aumôni", function() {deepEqual( Stem("aumônier"), "aumôni");});
test("aunes -> aun", function() {deepEqual( Stem("aunes"), "aun");});
test("auparavant -> auparav", function() {deepEqual( Stem("auparavant"), "auparav");});
test("auprès -> aupres", function() {deepEqual( Stem("auprès"), "aupres");});
test("auquel -> auquel", function() {deepEqual( Stem("auquel"), "auquel");});
test("aura -> aur", function() {deepEqual( Stem("aura"), "aur");});
test("aurai -> aur", function() {deepEqual( Stem("aurai"), "aur");});
test("auraient -> aur", function() {deepEqual( Stem("auraient"), "aur");});
test("aurais -> aur", function() {deepEqual( Stem("aurais"), "aur");});
test("aurait -> aur", function() {deepEqual( Stem("aurait"), "aur");});
test("auras -> aur", function() {deepEqual( Stem("auras"), "aur");});
test("aureng -> aureng", function() {deepEqual( Stem("aureng"), "aureng");});
test("aurez -> aur", function() {deepEqual( Stem("aurez"), "aur");});
test("auriez -> aur", function() {deepEqual( Stem("auriez"), "aur");});
test("aurions -> aurion", function() {deepEqual( Stem("aurions"), "aurion");});
test("aurons -> auron", function() {deepEqual( Stem("aurons"), "auron");});
test("auront -> auront", function() {deepEqual( Stem("auront"), "auront");});
test("aurungabad -> aurungabad", function() {deepEqual( Stem("aurungabad"), "aurungabad");});
test("aussi -> auss", function() {deepEqual( Stem("aussi"), "auss");});
test("aussitôt -> aussitôt", function() {deepEqual( Stem("aussitôt"), "aussitôt");});
test("austère -> auster", function() {deepEqual( Stem("austère"), "auster");});
test("austères -> auster", function() {deepEqual( Stem("austères"), "auster");});
test("austérité -> auster", function() {deepEqual( Stem("austérité"), "auster");});
test("austral -> austral", function() {deepEqual( Stem("austral"), "austral");});
test("autant -> aut", function() {deepEqual( Stem("autant"), "aut");});
test("autel -> autel", function() {deepEqual( Stem("autel"), "autel");});
test("autels -> autel", function() {deepEqual( Stem("autels"), "autel");});
test("auteur -> auteur", function() {deepEqual( Stem("auteur"), "auteur");});
test("auteurs -> auteur", function() {deepEqual( Stem("auteurs"), "auteur");});
test("authenticité -> authent", function() {deepEqual( Stem("authenticité"), "authent");});
test("auto -> auto", function() {deepEqual( Stem("auto"), "auto");});
test("automate -> automat", function() {deepEqual( Stem("automate"), "automat");});
test("automatique -> automat", function() {deepEqual( Stem("automatique"), "automat");});
test("automne -> automn", function() {deepEqual( Stem("automne"), "automn");});
test("autorisait -> autoris", function() {deepEqual( Stem("autorisait"), "autoris");});
test("autorisation -> autoris", function() {deepEqual( Stem("autorisation"), "autoris");});
test("autorisations -> autoris", function() {deepEqual( Stem("autorisations"), "autoris");});
test("autorise -> autoris", function() {deepEqual( Stem("autorise"), "autoris");});
test("autorisé -> autoris", function() {deepEqual( Stem("autorisé"), "autoris");});
test("autorisée -> autoris", function() {deepEqual( Stem("autorisée"), "autoris");});
test("autorisent -> autorisent", function() {deepEqual( Stem("autorisent"), "autorisent");});
test("autorisera -> autoris", function() {deepEqual( Stem("autorisera"), "autoris");});
test("autoriserait -> autoris", function() {deepEqual( Stem("autoriserait"), "autoris");});
test("autorité -> autor", function() {deepEqual( Stem("autorité"), "autor");});
test("autorités -> autor", function() {deepEqual( Stem("autorités"), "autor");});
test("autour -> autour", function() {deepEqual( Stem("autour"), "autour");});
test("autre -> autr", function() {deepEqual( Stem("autre"), "autr");});
test("autrefois -> autrefois", function() {deepEqual( Stem("autrefois"), "autrefois");});
test("autrement -> autr", function() {deepEqual( Stem("autrement"), "autr");});
test("autres -> autr", function() {deepEqual( Stem("autres"), "autr");});
test("autriche -> autrich", function() {deepEqual( Stem("autriche"), "autrich");});
test("autrichien -> autrichien", function() {deepEqual( Stem("autrichien"), "autrichien");});
test("autrichienne -> autrichien", function() {deepEqual( Stem("autrichienne"), "autrichien");});
test("autrichiennes -> autrichien", function() {deepEqual( Stem("autrichiennes"), "autrichien");});
test("autrichiens -> autrichien", function() {deepEqual( Stem("autrichiens"), "autrichien");});
test("aux -> aux", function() {deepEqual( Stem("aux"), "aux");});
test("auxiliaire -> auxiliair", function() {deepEqual( Stem("auxiliaire"), "auxiliair");});
test("auxquelles -> auxquel", function() {deepEqual( Stem("auxquelles"), "auxquel");});
test("auxquels -> auxquel", function() {deepEqual( Stem("auxquels"), "auxquel");});
test("av -> av", function() {deepEqual( Stem("av"), "av");});
test("avaient -> avaient", function() {deepEqual( Stem("avaient"), "avaient");});
test("avais -> avais", function() {deepEqual( Stem("avais"), "avais");});
test("avait -> avait", function() {deepEqual( Stem("avait"), "avait");});
test("avala -> aval", function() {deepEqual( Stem("avala"), "aval");});
test("avalé -> aval", function() {deepEqual( Stem("avalé"), "aval");});
test("avança -> avanc", function() {deepEqual( Stem("avança"), "avanc");});
test("avançaient -> avanc", function() {deepEqual( Stem("avançaient"), "avanc");});
test("avançait -> avanc", function() {deepEqual( Stem("avançait"), "avanc");});
test("avançant -> avanc", function() {deepEqual( Stem("avançant"), "avanc");});
test("avance -> avanc", function() {deepEqual( Stem("avance"), "avanc");});
test("avancé -> avanc", function() {deepEqual( Stem("avancé"), "avanc");});
test("avancée -> avanc", function() {deepEqual( Stem("avancée"), "avanc");});
test("avancement -> avanc", function() {deepEqual( Stem("avancement"), "avanc");});
test("avancements -> avanc", function() {deepEqual( Stem("avancements"), "avanc");});
test("avancent -> avancent", function() {deepEqual( Stem("avancent"), "avancent");});
test("avancer -> avanc", function() {deepEqual( Stem("avancer"), "avanc");});
test("avancera -> avanc", function() {deepEqual( Stem("avancera"), "avanc");});
test("avancerait -> avanc", function() {deepEqual( Stem("avancerait"), "avanc");});
test("avancèrent -> avanc", function() {deepEqual( Stem("avancèrent"), "avanc");});
test("avances -> avanc", function() {deepEqual( Stem("avances"), "avanc");});
test("avancés -> avanc", function() {deepEqual( Stem("avancés"), "avanc");});
test("avancez -> avanc", function() {deepEqual( Stem("avancez"), "avanc");});
test("avanie -> avan", function() {deepEqual( Stem("avanie"), "avan");});
test("avanies -> avan", function() {deepEqual( Stem("avanies"), "avan");});
test("avant -> avant", function() {deepEqual( Stem("avant"), "avant");});
test("avantage -> avantag", function() {deepEqual( Stem("avantage"), "avantag");});
test("avantages -> avantag", function() {deepEqual( Stem("avantages"), "avantag");});
test("avantageuse -> avantag", function() {deepEqual( Stem("avantageuse"), "avantag");});
test("avantageusement -> avantag", function() {deepEqual( Stem("avantageusement"), "avantag");});
test("avantageux -> avantag", function() {deepEqual( Stem("avantageux"), "avantag");});
test("avare -> avar", function() {deepEqual( Stem("avare"), "avar");});
test("avarice -> avaric", function() {deepEqual( Stem("avarice"), "avaric");});
test("avarie -> avar", function() {deepEqual( Stem("avarie"), "avar");});
test("avaries -> avar", function() {deepEqual( Stem("avaries"), "avar");});
test("ave -> ave", function() {deepEqual( Stem("ave"), "ave");});
test("avec -> avec", function() {deepEqual( Stem("avec"), "avec");});
test("avenir -> aven", function() {deepEqual( Stem("avenir"), "aven");});
test("aventure -> aventur", function() {deepEqual( Stem("aventure"), "aventur");});
test("aventurent -> aventurent", function() {deepEqual( Stem("aventurent"), "aventurent");});
test("aventurer -> aventur", function() {deepEqual( Stem("aventurer"), "aventur");});
test("aventures -> aventur", function() {deepEqual( Stem("aventures"), "aventur");});
test("aventureuse -> aventur", function() {deepEqual( Stem("aventureuse"), "aventur");});
test("aventureux -> aventur", function() {deepEqual( Stem("aventureux"), "aventur");});
test("avenues -> avenu", function() {deepEqual( Stem("avenues"), "avenu");});
test("avéré -> aver", function() {deepEqual( Stem("avéré"), "aver");});
test("averse -> avers", function() {deepEqual( Stem("averse"), "avers");});
test("aversion -> avers", function() {deepEqual( Stem("aversion"), "avers");});
test("averti -> avert", function() {deepEqual( Stem("averti"), "avert");});
test("avertie -> avert", function() {deepEqual( Stem("avertie"), "avert");});
test("averties -> avert", function() {deepEqual( Stem("averties"), "avert");});
test("avertir -> avert", function() {deepEqual( Stem("avertir"), "avert");});
test("avertira -> avert", function() {deepEqual( Stem("avertira"), "avert");});
test("avertis -> avert", function() {deepEqual( Stem("avertis"), "avert");});
test("avertissait -> avert", function() {deepEqual( Stem("avertissait"), "avert");});
test("avertissant -> avert", function() {deepEqual( Stem("avertissant"), "avert");});
test("avertissement -> avert", function() {deepEqual( Stem("avertissement"), "avert");});
test("avertit -> avert", function() {deepEqual( Stem("avertit"), "avert");});
test("aveu -> aveu", function() {deepEqual( Stem("aveu"), "aveu");});
test("aveugle -> aveugl", function() {deepEqual( Stem("aveugle"), "aveugl");});
test("aveuglé -> aveugl", function() {deepEqual( Stem("aveuglé"), "aveugl");});
test("aveuglée -> aveugl", function() {deepEqual( Stem("aveuglée"), "aveugl");});
test("aveuglement -> aveugl", function() {deepEqual( Stem("aveuglement"), "aveugl");});
test("aveuglément -> aveugl", function() {deepEqual( Stem("aveuglément"), "aveugl");});
test("aveugles -> aveugl", function() {deepEqual( Stem("aveugles"), "aveugl");});
test("aveux -> aveux", function() {deepEqual( Stem("aveux"), "aveux");});
test("aveyron -> aveyron", function() {deepEqual( Stem("aveyron"), "aveyron");});
test("avez -> avez", function() {deepEqual( Stem("avez"), "avez");});
test("avide -> avid", function() {deepEqual( Stem("avide"), "avid");});
test("avidement -> avid", function() {deepEqual( Stem("avidement"), "avid");});
test("avidité -> avid", function() {deepEqual( Stem("avidité"), "avid");});
test("aviez -> avi", function() {deepEqual( Stem("aviez"), "avi");});
test("avilie -> avil", function() {deepEqual( Stem("avilie"), "avil");});
test("avilir -> avil", function() {deepEqual( Stem("avilir"), "avil");});
test("avilirait -> avil", function() {deepEqual( Stem("avilirait"), "avil");});
test("avilissant -> avil", function() {deepEqual( Stem("avilissant"), "avil");});
test("avilissantes -> avil", function() {deepEqual( Stem("avilissantes"), "avil");});
test("avilit -> avil", function() {deepEqual( Stem("avilit"), "avil");});
test("avions -> avion", function() {deepEqual( Stem("avions"), "avion");});
test("aviron -> aviron", function() {deepEqual( Stem("aviron"), "aviron");});
test("avis -> avis", function() {deepEqual( Stem("avis"), "avis");});
test("avisa -> avis", function() {deepEqual( Stem("avisa"), "avis");});
test("avisais -> avis", function() {deepEqual( Stem("avisais"), "avis");});
test("avisait -> avis", function() {deepEqual( Stem("avisait"), "avis");});
test("avise -> avis", function() {deepEqual( Stem("avise"), "avis");});
test("avisé -> avis", function() {deepEqual( Stem("avisé"), "avis");});
test("avisée -> avis", function() {deepEqual( Stem("avisée"), "avis");});
test("aviser -> avis", function() {deepEqual( Stem("aviser"), "avis");});
test("aviserai -> avis", function() {deepEqual( Stem("aviserai"), "avis");});
test("aviserait -> avis", function() {deepEqual( Stem("aviserait"), "avis");});
test("aviserons -> avis", function() {deepEqual( Stem("aviserons"), "avis");});
test("avises -> avis", function() {deepEqual( Stem("avises"), "avis");});
test("avocat -> avocat", function() {deepEqual( Stem("avocat"), "avocat");});
test("avocats -> avocat", function() {deepEqual( Stem("avocats"), "avocat");});
test("avoine -> avoin", function() {deepEqual( Stem("avoine"), "avoin");});
test("avoir -> avoir", function() {deepEqual( Stem("avoir"), "avoir");});
test("avons -> avon", function() {deepEqual( Stem("avons"), "avon");});
test("avoua -> avou", function() {deepEqual( Stem("avoua"), "avou");});
test("avouai -> avou", function() {deepEqual( Stem("avouai"), "avou");});
test("avouait -> avou", function() {deepEqual( Stem("avouait"), "avou");});
test("avouât -> avou", function() {deepEqual( Stem("avouât"), "avou");});
test("avoue -> avou", function() {deepEqual( Stem("avoue"), "avou");});
test("avoué -> avou", function() {deepEqual( Stem("avoué"), "avou");});
test("avouent -> avouent", function() {deepEqual( Stem("avouent"), "avouent");});
test("avouer -> avou", function() {deepEqual( Stem("avouer"), "avou");});
test("avouera -> avou", function() {deepEqual( Stem("avouera"), "avou");});
test("avouerai -> avou", function() {deepEqual( Stem("avouerai"), "avou");});
test("avouerons -> avou", function() {deepEqual( Stem("avouerons"), "avou");});
test("avoués -> avou", function() {deepEqual( Stem("avoués"), "avou");});
test("avouez -> avou", function() {deepEqual( Stem("avouez"), "avou");});
test("avril -> avril", function() {deepEqual( Stem("avril"), "avril");});
test("avviamento -> avviamento", function() {deepEqual( Stem("avviamento"), "avviamento");});
test("away -> away", function() {deepEqual( Stem("away"), "away");});
test("axe -> axe", function() {deepEqual( Stem("axe"), "axe");});
test("ayant -> ayant", function() {deepEqual( Stem("ayant"), "ayant");});
test("ayez -> ayez", function() {deepEqual( Stem("ayez"), "ayez");});
test("aymon -> aymon", function() {deepEqual( Stem("aymon"), "aymon");});
test("ayons -> ayon", function() {deepEqual( Stem("ayons"), "ayon");});
test("azur -> azur", function() {deepEqual( Stem("azur"), "azur");});
test("b -> b", function() {deepEqual( Stem("b"), "b");});
test("bab -> bab", function() {deepEqual( Stem("bab"), "bab");});
test("bâbord -> bâbord", function() {deepEqual( Stem("bâbord"), "bâbord");});
test("babouches -> babouch", function() {deepEqual( Stem("babouches"), "babouch");});
test("babylone -> babylon", function() {deepEqual( Stem("babylone"), "babylon");});
test("bac -> bac", function() {deepEqual( Stem("bac"), "bac");});
test("bacchus -> bacchus", function() {deepEqual( Stem("bacchus"), "bacchus");});
test("back -> back", function() {deepEqual( Stem("back"), "back");});
test("bad -> bad", function() {deepEqual( Stem("bad"), "bad");});
test("badaud -> badaud", function() {deepEqual( Stem("badaud"), "badaud");});
test("badauderie -> badauder", function() {deepEqual( Stem("badauderie"), "badauder");});
test("baden -> baden", function() {deepEqual( Stem("baden"), "baden");});
test("badin -> badin", function() {deepEqual( Stem("badin"), "badin");});
test("badine -> badin", function() {deepEqual( Stem("badine"), "badin");});
test("bafouait -> bafou", function() {deepEqual( Stem("bafouait"), "bafou");});
test("bagage -> bagag", function() {deepEqual( Stem("bagage"), "bagag");});
test("bagages -> bagag", function() {deepEqual( Stem("bagages"), "bagag");});
test("bagarre -> bagarr", function() {deepEqual( Stem("bagarre"), "bagarr");});
test("bagatelle -> bagatel", function() {deepEqual( Stem("bagatelle"), "bagatel");});
test("bagne -> bagn", function() {deepEqual( Stem("bagne"), "bagn");});
test("bague -> bagu", function() {deepEqual( Stem("bague"), "bagu");});
test("bagues -> bagu", function() {deepEqual( Stem("bagues"), "bagu");});
test("baguette -> baguet", function() {deepEqual( Stem("baguette"), "baguet");});
test("bah -> bah", function() {deepEqual( Stem("bah"), "bah");});
test("baie -> bai", function() {deepEqual( Stem("baie"), "bai");});
test("baigné -> baign", function() {deepEqual( Stem("baigné"), "baign");});
test("baignée -> baign", function() {deepEqual( Stem("baignée"), "baign");});
test("baigner -> baign", function() {deepEqual( Stem("baigner"), "baign");});
test("baignés -> baign", function() {deepEqual( Stem("baignés"), "baign");});
test("bail -> bail", function() {deepEqual( Stem("bail"), "bail");});
test("bâillait -> bâill", function() {deepEqual( Stem("bâillait"), "bâill");});
test("bâillant -> bâill", function() {deepEqual( Stem("bâillant"), "bâill");});
test("bâillement -> bâill", function() {deepEqual( Stem("bâillement"), "bâill");});
test("bâiller -> bâill", function() {deepEqual( Stem("bâiller"), "bâill");});
test("bâillon -> bâillon", function() {deepEqual( Stem("bâillon"), "bâillon");});
test("baïonnette -> baïonnet", function() {deepEqual( Stem("baïonnette"), "baïonnet");});
test("baïonnettes -> baïonnet", function() {deepEqual( Stem("baïonnettes"), "baïonnet");});
test("baisa -> bais", function() {deepEqual( Stem("baisa"), "bais");});
test("baisai -> bais", function() {deepEqual( Stem("baisai"), "bais");});
test("baisait -> bais", function() {deepEqual( Stem("baisait"), "bais");});
test("baisant -> bais", function() {deepEqual( Stem("baisant"), "bais");});
test("baise -> bais", function() {deepEqual( Stem("baise"), "bais");});
test("baiser -> bais", function() {deepEqual( Stem("baiser"), "bais");});
test("baisers -> baiser", function() {deepEqual( Stem("baisers"), "baiser");});
test("baissa -> baiss", function() {deepEqual( Stem("baissa"), "baiss");});
test("baissait -> baiss", function() {deepEqual( Stem("baissait"), "baiss");});
test("baissant -> baiss", function() {deepEqual( Stem("baissant"), "baiss");});
test("baisse -> baiss", function() {deepEqual( Stem("baisse"), "baiss");});
test("baissé -> baiss", function() {deepEqual( Stem("baissé"), "baiss");});
test("baissée -> baiss", function() {deepEqual( Stem("baissée"), "baiss");});
test("baisser -> baiss", function() {deepEqual( Stem("baisser"), "baiss");});
test("baissèrent -> baiss", function() {deepEqual( Stem("baissèrent"), "baiss");});
test("baissés -> baiss", function() {deepEqual( Stem("baissés"), "baiss");});
test("bajocs -> bajoc", function() {deepEqual( Stem("bajocs"), "bajoc");});
test("bal -> bal", function() {deepEqual( Stem("bal"), "bal");});
test("baladins -> baladin", function() {deepEqual( Stem("baladins"), "baladin");});
test("balançait -> balanc", function() {deepEqual( Stem("balançait"), "balanc");});
test("balance -> balanc", function() {deepEqual( Stem("balance"), "balanc");});
test("balancée -> balanc", function() {deepEqual( Stem("balancée"), "balanc");});
test("balancement -> balanc", function() {deepEqual( Stem("balancement"), "balanc");});
test("balancer -> balanc", function() {deepEqual( Stem("balancer"), "balanc");});
test("balances -> balanc", function() {deepEqual( Stem("balances"), "balanc");});
test("balancier -> balanci", function() {deepEqual( Stem("balancier"), "balanci");});
test("balayé -> balai", function() {deepEqual( Stem("balayé"), "balai");});
test("balayés -> balai", function() {deepEqual( Stem("balayés"), "balai");});
test("balbi -> balb", function() {deepEqual( Stem("balbi"), "balb");});
test("balbutia -> balbuti", function() {deepEqual( Stem("balbutia"), "balbuti");});
test("balbutiant -> balbuti", function() {deepEqual( Stem("balbutiant"), "balbuti");});
test("balcon -> balcon", function() {deepEqual( Stem("balcon"), "balcon");});
test("balcons -> balcon", function() {deepEqual( Stem("balcons"), "balcon");});
test("baldaquin -> baldaquin", function() {deepEqual( Stem("baldaquin"), "baldaquin");});
test("baldi -> bald", function() {deepEqual( Stem("baldi"), "bald");});
test("balivernes -> balivern", function() {deepEqual( Stem("balivernes"), "balivern");});
test("balland -> balland", function() {deepEqual( Stem("balland"), "balland");});
test("ballants -> ball", function() {deepEqual( Stem("ballants"), "ball");});
test("balle -> ball", function() {deepEqual( Stem("balle"), "ball");});
test("balles -> ball", function() {deepEqual( Stem("balles"), "ball");});
test("ballet -> ballet", function() {deepEqual( Stem("ballet"), "ballet");});
test("ballon -> ballon", function() {deepEqual( Stem("ballon"), "ballon");});
test("balourd -> balourd", function() {deepEqual( Stem("balourd"), "balourd");});
test("balourdise -> balourdis", function() {deepEqual( Stem("balourdise"), "balourdis");});
test("balourdises -> balourdis", function() {deepEqual( Stem("balourdises"), "balourdis");});
test("bals -> bal", function() {deepEqual( Stem("bals"), "bal");});
test("balustrade -> balustrad", function() {deepEqual( Stem("balustrade"), "balustrad");});
test("bamboches -> bamboch", function() {deepEqual( Stem("bamboches"), "bamboch");});
test("bambou -> bambou", function() {deepEqual( Stem("bambou"), "bambou");});
test("bambous -> bambous", function() {deepEqual( Stem("bambous"), "bambous");});
test("bambousiers -> bambousi", function() {deepEqual( Stem("bambousiers"), "bambousi");});
test("ban -> ban", function() {deepEqual( Stem("ban"), "ban");});
test("bananiers -> banani", function() {deepEqual( Stem("bananiers"), "banani");});
test("banc -> banc", function() {deepEqual( Stem("banc"), "banc");});
test("bancs -> banc", function() {deepEqual( Stem("bancs"), "banc");});
test("bande -> band", function() {deepEqual( Stem("bande"), "band");});
test("bandé -> band", function() {deepEqual( Stem("bandé"), "band");});
test("banderoles -> banderol", function() {deepEqual( Stem("banderoles"), "banderol");});
test("bandes -> band", function() {deepEqual( Stem("bandes"), "band");});
test("bandits -> bandit", function() {deepEqual( Stem("bandits"), "bandit");});
test("bandoulière -> bandouli", function() {deepEqual( Stem("bandoulière"), "bandouli");});
test("banians -> banian", function() {deepEqual( Stem("banians"), "banian");});
test("bank -> bank", function() {deepEqual( Stem("bank"), "bank");});
test("banni -> bann", function() {deepEqual( Stem("banni"), "bann");});
test("bannie -> bann", function() {deepEqual( Stem("bannie"), "bann");});
test("bannières -> banni", function() {deepEqual( Stem("bannières"), "banni");});
test("bannir -> bann", function() {deepEqual( Stem("bannir"), "bann");});
test("banque -> banqu", function() {deepEqual( Stem("banque"), "banqu");});
test("banqueroute -> banquerout", function() {deepEqual( Stem("banqueroute"), "banquerout");});
test("banquette -> banquet", function() {deepEqual( Stem("banquette"), "banquet");});
test("banquettes -> banquet", function() {deepEqual( Stem("banquettes"), "banquet");});
test("banquier -> banqui", function() {deepEqual( Stem("banquier"), "banqui");});
test("banquière -> banqui", function() {deepEqual( Stem("banquière"), "banqui");});
test("banquiers -> banqui", function() {deepEqual( Stem("banquiers"), "banqui");});
test("baptisé -> baptis", function() {deepEqual( Stem("baptisé"), "baptis");});
test("bar -> bar", function() {deepEqual( Stem("bar"), "bar");});
test("baraque -> baraqu", function() {deepEqual( Stem("baraque"), "baraqu");});
test("barbare -> barbar", function() {deepEqual( Stem("barbare"), "barbar");});
test("barbares -> barbar", function() {deepEqual( Stem("barbares"), "barbar");});
test("barbarie -> barbar", function() {deepEqual( Stem("barbarie"), "barbar");});
test("barbe -> barb", function() {deepEqual( Stem("barbe"), "barb");});
test("barbiche -> barbich", function() {deepEqual( Stem("barbiche"), "barbich");});
test("barbier -> barbi", function() {deepEqual( Stem("barbier"), "barbi");});
test("barbone -> barbon", function() {deepEqual( Stem("barbone"), "barbon");});
test("barbotement -> barbot", function() {deepEqual( Stem("barbotement"), "barbot");});
test("barbouillait -> barbouill", function() {deepEqual( Stem("barbouillait"), "barbouill");});
test("barême -> barêm", function() {deepEqual( Stem("barême"), "barêm");});
test("bari -> bar", function() {deepEqual( Stem("bari"), "bar");});
test("baring -> baring", function() {deepEqual( Stem("baring"), "baring");});
test("bariolée -> bariol", function() {deepEqual( Stem("bariolée"), "bariol");});
test("barnave -> barnav", function() {deepEqual( Stem("barnave"), "barnav");});
test("barnum -> barnum", function() {deepEqual( Stem("barnum"), "barnum");});
test("baromètre -> barometr", function() {deepEqual( Stem("baromètre"), "barometr");});
test("baromètres -> barometr", function() {deepEqual( Stem("baromètres"), "barometr");});
test("baron -> baron", function() {deepEqual( Stem("baron"), "baron");});
test("baronne -> baron", function() {deepEqual( Stem("baronne"), "baron");});
test("baronnie -> baron", function() {deepEqual( Stem("baronnie"), "baron");});
test("barons -> baron", function() {deepEqual( Stem("barons"), "baron");});
test("baroque -> baroqu", function() {deepEqual( Stem("baroque"), "baroqu");});
test("barque -> barqu", function() {deepEqual( Stem("barque"), "barqu");});
test("barques -> barqu", function() {deepEqual( Stem("barques"), "barqu");});
test("barra -> barr", function() {deepEqual( Stem("barra"), "barr");});
test("barre -> barr", function() {deepEqual( Stem("barre"), "barr");});
test("barreaux -> barreau", function() {deepEqual( Stem("barreaux"), "barreau");});
test("barrer -> barr", function() {deepEqual( Stem("barrer"), "barr");});
test("barricader -> barricad", function() {deepEqual( Stem("barricader"), "barricad");});
test("barricadés -> barricad", function() {deepEqual( Stem("barricadés"), "barricad");});
test("barrière -> barri", function() {deepEqual( Stem("barrière"), "barri");});
test("barrières -> barri", function() {deepEqual( Stem("barrières"), "barri");});
test("barthélemy -> barthélemy", function() {deepEqual( Stem("barthélemy"), "barthélemy");});
test("bas -> bas", function() {deepEqual( Stem("bas"), "bas");});
test("basalte -> basalt", function() {deepEqual( Stem("basalte"), "basalt");});
test("base -> bas", function() {deepEqual( Stem("base"), "bas");});
test("basée -> bas", function() {deepEqual( Stem("basée"), "bas");});
test("bases -> bas", function() {deepEqual( Stem("bases"), "bas");});
test("basile -> basil", function() {deepEqual( Stem("basile"), "basil");});
test("basilique -> basil", function() {deepEqual( Stem("basilique"), "basil");});
test("basse -> bass", function() {deepEqual( Stem("basse"), "bass");});
test("bassement -> bass", function() {deepEqual( Stem("bassement"), "bass");});
test("basses -> bass", function() {deepEqual( Stem("basses"), "bass");});
test("bassesse -> bassess", function() {deepEqual( Stem("bassesse"), "bassess");});
test("bassesses -> bassess", function() {deepEqual( Stem("bassesses"), "bassess");});
test("bassin -> bassin", function() {deepEqual( Stem("bassin"), "bassin");});
test("bassinet -> bassinet", function() {deepEqual( Stem("bassinet"), "bassinet");});
test("bassins -> bassin", function() {deepEqual( Stem("bassins"), "bassin");});
test("bassompierre -> bassompierr", function() {deepEqual( Stem("bassompierre"), "bassompierr");});
test("bastingages -> bastingag", function() {deepEqual( Stem("bastingages"), "bastingag");});
test("bastion -> bastion", function() {deepEqual( Stem("bastion"), "bastion");});
test("bastions -> bastion", function() {deepEqual( Stem("bastions"), "bastion");});
test("bat -> bat", function() {deepEqual( Stem("bat"), "bat");});
test("bataille -> bataill", function() {deepEqual( Stem("bataille"), "bataill");});
test("batailles -> bataill", function() {deepEqual( Stem("batailles"), "bataill");});
test("bataillon -> bataillon", function() {deepEqual( Stem("bataillon"), "bataillon");});
test("bataillons -> bataillon", function() {deepEqual( Stem("bataillons"), "bataillon");});
test("bâtardise -> bâtardis", function() {deepEqual( Stem("bâtardise"), "bâtardis");});
test("bateau -> bateau", function() {deepEqual( Stem("bateau"), "bateau");});
test("bateaux -> bateau", function() {deepEqual( Stem("bateaux"), "bateau");});
test("batelier -> bateli", function() {deepEqual( Stem("batelier"), "bateli");});
test("bateliers -> bateli", function() {deepEqual( Stem("bateliers"), "bateli");});
test("bathurst -> bathurst", function() {deepEqual( Stem("bathurst"), "bathurst");});
test("bâti -> bât", function() {deepEqual( Stem("bâti"), "bât");});
test("bâtie -> bât", function() {deepEqual( Stem("bâtie"), "bât");});
test("bâties -> bât", function() {deepEqual( Stem("bâties"), "bât");});
test("bâtiment -> bât", function() {deepEqual( Stem("bâtiment"), "bât");});
test("bâtiments -> bât", function() {deepEqual( Stem("bâtiments"), "bât");});
test("bâtir -> bât", function() {deepEqual( Stem("bâtir"), "bât");});
test("bâtis -> bât", function() {deepEqual( Stem("bâtis"), "bât");});
test("bâtissait -> bât", function() {deepEqual( Stem("bâtissait"), "bât");});
test("bâtissant -> bât", function() {deepEqual( Stem("bâtissant"), "bât");});
test("bâtisses -> bât", function() {deepEqual( Stem("bâtisses"), "bât");});
test("bâtisseur -> bâtisseur", function() {deepEqual( Stem("bâtisseur"), "bâtisseur");});
test("bâtit -> bât", function() {deepEqual( Stem("bâtit"), "bât");});
test("bâton -> bâton", function() {deepEqual( Stem("bâton"), "bâton");});
test("bâtonne -> bâton", function() {deepEqual( Stem("bâtonne"), "bâton");});
test("bâtons -> bâton", function() {deepEqual( Stem("bâtons"), "bâton");});
test("bats -> bat", function() {deepEqual( Stem("bats"), "bat");});
test("battaient -> batt", function() {deepEqual( Stem("battaient"), "batt");});
test("battait -> batt", function() {deepEqual( Stem("battait"), "batt");});
test("battant -> batt", function() {deepEqual( Stem("battant"), "batt");});
test("battante -> batt", function() {deepEqual( Stem("battante"), "batt");});
test("battants -> batt", function() {deepEqual( Stem("battants"), "batt");});
test("batte -> batt", function() {deepEqual( Stem("batte"), "batt");});
test("battement -> batt", function() {deepEqual( Stem("battement"), "batt");});
test("battements -> batt", function() {deepEqual( Stem("battements"), "batt");});
test("battent -> battent", function() {deepEqual( Stem("battent"), "battent");});
test("batterie -> batter", function() {deepEqual( Stem("batterie"), "batter");});
test("battez -> batt", function() {deepEqual( Stem("battez"), "batt");});
test("battistin -> battistin", function() {deepEqual( Stem("battistin"), "battistin");});
test("battit -> batt", function() {deepEqual( Stem("battit"), "batt");});
test("battrai -> battr", function() {deepEqual( Stem("battrai"), "battr");});
test("battrais -> battr", function() {deepEqual( Stem("battrais"), "battr");});
test("battras -> battr", function() {deepEqual( Stem("battras"), "battr");});
test("battre -> battr", function() {deepEqual( Stem("battre"), "battr");});
test("battrez -> battr", function() {deepEqual( Stem("battrez"), "battr");});
test("battriez -> battr", function() {deepEqual( Stem("battriez"), "battr");});
test("battu -> battu", function() {deepEqual( Stem("battu"), "battu");});
test("battue -> battu", function() {deepEqual( Stem("battue"), "battu");});
test("battus -> battus", function() {deepEqual( Stem("battus"), "battus");});
test("batulcar -> batulcar", function() {deepEqual( Stem("batulcar"), "batulcar");});
test("baume -> baum", function() {deepEqual( Stem("baume"), "baum");});
test("bavard -> bavard", function() {deepEqual( Stem("bavard"), "bavard");});
test("bavardage -> bavardag", function() {deepEqual( Stem("bavardage"), "bavardag");});
test("bavardages -> bavardag", function() {deepEqual( Stem("bavardages"), "bavardag");});
test("bavarde -> bavard", function() {deepEqual( Stem("bavarde"), "bavard");});
test("bavardes -> bavard", function() {deepEqual( Stem("bavardes"), "bavard");});
test("bavards -> bavard", function() {deepEqual( Stem("bavards"), "bavard");});
test("bayadères -> bayader", function() {deepEqual( Stem("bayadères"), "bayader");});
test("bayard -> bayard", function() {deepEqual( Stem("bayard"), "bayard");});
test("baylen -> baylen", function() {deepEqual( Stem("baylen"), "baylen");});
test("bazar -> bazar", function() {deepEqual( Stem("bazar"), "bazar");});
test("bazars -> bazar", function() {deepEqual( Stem("bazars"), "bazar");});
test("bazin -> bazin", function() {deepEqual( Stem("bazin"), "bazin");});
test("be -> be", function() {deepEqual( Stem("be"), "be");});
test("béante -> bé", function() {deepEqual( Stem("béante"), "bé");});
test("béatitudes -> béatitud", function() {deepEqual( Stem("béatitudes"), "béatitud");});
test("beau -> beau", function() {deepEqual( Stem("beau"), "beau");});
test("beaucoup -> beaucoup", function() {deepEqual( Stem("beaucoup"), "beaucoup");});
test("beauharnais -> beauharn", function() {deepEqual( Stem("beauharnais"), "beauharn");});
test("beaujolais -> beaujol", function() {deepEqual( Stem("beaujolais"), "beaujol");});
test("beaumarchais -> beaumarch", function() {deepEqual( Stem("beaumarchais"), "beaumarch");});
test("beauté -> beaut", function() {deepEqual( Stem("beauté"), "beaut");});
test("beautés -> beaut", function() {deepEqual( Stem("beautés"), "beaut");});
test("beauty -> beauty", function() {deepEqual( Stem("beauty"), "beauty");});
test("beauvais -> beauv", function() {deepEqual( Stem("beauvais"), "beauv");});
test("beauvaisis -> beauvais", function() {deepEqual( Stem("beauvaisis"), "beauvais");});
test("beauvoisis -> beauvois", function() {deepEqual( Stem("beauvoisis"), "beauvois");});
test("beaux -> beau", function() {deepEqual( Stem("beaux"), "beau");});
test("bec -> bec", function() {deepEqual( Stem("bec"), "bec");});
test("bêchait -> bêch", function() {deepEqual( Stem("bêchait"), "bêch");});
test("bêché -> bêch", function() {deepEqual( Stem("bêché"), "bêch");});
test("bêcher -> bêch", function() {deepEqual( Stem("bêcher"), "bêch");});
test("becs -> bec", function() {deepEqual( Stem("becs"), "bec");});
test("bédouin -> bédouin", function() {deepEqual( Stem("bédouin"), "bédouin");});
test("beefsteacks -> beefsteack", function() {deepEqual( Stem("beefsteacks"), "beefsteack");});
test("bégayait -> bégai", function() {deepEqual( Stem("bégayait"), "bégai");});
test("béhar -> béhar", function() {deepEqual( Stem("béhar"), "béhar");});
test("behind -> behind", function() {deepEqual( Stem("behind"), "behind");});
test("békir -> bek", function() {deepEqual( Stem("békir"), "bek");});
test("bel -> bel", function() {deepEqual( Stem("bel"), "bel");});
test("belagio -> belagio", function() {deepEqual( Stem("belagio"), "belagio");});
test("bélan -> bélan", function() {deepEqual( Stem("bélan"), "bélan");});
test("belgique -> belgiqu", function() {deepEqual( Stem("belgique"), "belgiqu");});
test("belgirate -> belgirat", function() {deepEqual( Stem("belgirate"), "belgirat");});
test("belle -> bel", function() {deepEqual( Stem("belle"), "bel");});
test("belles -> bel", function() {deepEqual( Stem("belles"), "bel");});
test("belliqueux -> belliqu", function() {deepEqual( Stem("belliqueux"), "belliqu");});
test("belphégor -> belphégor", function() {deepEqual( Stem("belphégor"), "belphégor");});
test("belvédère -> belvéder", function() {deepEqual( Stem("belvédère"), "belvéder");});
test("ben -> ben", function() {deepEqual( Stem("ben"), "ben");});
test("bénarès -> bénares", function() {deepEqual( Stem("bénarès"), "bénares");});
test("bénédiction -> bénédict", function() {deepEqual( Stem("bénédiction"), "bénédict");});
test("bénédictions -> bénédict", function() {deepEqual( Stem("bénédictions"), "bénédict");});
test("benefaciendo -> benefaciendo", function() {deepEqual( Stem("benefaciendo"), "benefaciendo");});
test("bénéfice -> bénéfic", function() {deepEqual( Stem("bénéfice"), "bénéfic");});
test("bénéfices -> bénéfic", function() {deepEqual( Stem("bénéfices"), "bénéfic");});
test("benêt -> benêt", function() {deepEqual( Stem("benêt"), "benêt");});
test("bengale -> bengal", function() {deepEqual( Stem("bengale"), "bengal");});
test("bénis -> ben", function() {deepEqual( Stem("bénis"), "ben");});
test("bénit -> ben", function() {deepEqual( Stem("bénit"), "ben");});
test("bénite -> bénit", function() {deepEqual( Stem("bénite"), "bénit");});
test("bénitier -> béniti", function() {deepEqual( Stem("bénitier"), "béniti");});
test("benjamin -> benjamin", function() {deepEqual( Stem("benjamin"), "benjamin");});
test("benten -> benten", function() {deepEqual( Stem("benten"), "benten");});
test("bentivoglio -> bentivoglio", function() {deepEqual( Stem("bentivoglio"), "bentivoglio");});
test("béranger -> bérang", function() {deepEqual( Stem("béranger"), "bérang");});
test("berceau -> berceau", function() {deepEqual( Stem("berceau"), "berceau");});
test("bercer -> berc", function() {deepEqual( Stem("bercer"), "berc");});
test("bérésina -> bérésin", function() {deepEqual( Stem("bérésina"), "bérésin");});
test("bergère -> berger", function() {deepEqual( Stem("bergère"), "berger");});
test("bergères -> berger", function() {deepEqual( Stem("bergères"), "berger");});
test("bernard -> bernard", function() {deepEqual( Stem("bernard"), "bernard");});
test("berne -> bern", function() {deepEqual( Stem("berne"), "bern");});
test("bertolotti -> bertolott", function() {deepEqual( Stem("bertolotti"), "bertolott");});
test("bertuccio -> bertuccio", function() {deepEqual( Stem("bertuccio"), "bertuccio");});
test("besace -> besac", function() {deepEqual( Stem("besace"), "besac");});
test("besançon -> besançon", function() {deepEqual( Stem("besançon"), "besançon");});
test("besenval -> besenval", function() {deepEqual( Stem("besenval"), "besenval");});
test("besogne -> besogn", function() {deepEqual( Stem("besogne"), "besogn");});
test("besoin -> besoin", function() {deepEqual( Stem("besoin"), "besoin");});
test("besoins -> besoin", function() {deepEqual( Stem("besoins"), "besoin");});
test("bêta -> bêt", function() {deepEqual( Stem("bêta"), "bêt");});
test("bétail -> bétail", function() {deepEqual( Stem("bétail"), "bétail");});
test("bête -> bêt", function() {deepEqual( Stem("bête"), "bêt");});
test("bétel -> bétel", function() {deepEqual( Stem("bétel"), "bétel");});
test("bêtement -> bêt", function() {deepEqual( Stem("bêtement"), "bêt");});
test("bêtes -> bêt", function() {deepEqual( Stem("bêtes"), "bêt");});
test("bêtise -> bêtis", function() {deepEqual( Stem("bêtise"), "bêtis");});
test("bêtises -> bêtis", function() {deepEqual( Stem("bêtises"), "bêtis");});
test("betrays -> betray", function() {deepEqual( Stem("betrays"), "betray");});
test("bettina -> bettin", function() {deepEqual( Stem("bettina"), "bettin");});
test("beuglements -> beugl", function() {deepEqual( Stem("beuglements"), "beugl");});
test("beurre -> beurr", function() {deepEqual( Stem("beurre"), "beurr");});
test("beuve -> beuv", function() {deepEqual( Stem("beuve"), "beuv");});
test("bévue -> bévu", function() {deepEqual( Stem("bévue"), "bévu");});
test("bévues -> bévu", function() {deepEqual( Stem("bévues"), "bévu");});
test("biais -> bi", function() {deepEqual( Stem("biais"), "bi");});
test("biaiser -> biais", function() {deepEqual( Stem("biaiser"), "biais");});
test("bible -> bibl", function() {deepEqual( Stem("bible"), "bibl");});
test("bibliomane -> biblioman", function() {deepEqual( Stem("bibliomane"), "biblioman");});
test("bibliothèque -> bibliothequ", function() {deepEqual( Stem("bibliothèque"), "bibliothequ");});
test("bibliothèques -> bibliothequ", function() {deepEqual( Stem("bibliothèques"), "bibliothequ");});
test("biblique -> bibliqu", function() {deepEqual( Stem("biblique"), "bibliqu");});
test("bibliques -> bibliqu", function() {deepEqual( Stem("bibliques"), "bibliqu");});
test("bielle -> biel", function() {deepEqual( Stem("bielle"), "biel");});
test("bien -> bien", function() {deepEqual( Stem("bien"), "bien");});
test("bienfait -> bienf", function() {deepEqual( Stem("bienfait"), "bienf");});
test("bienfaiteur -> bienfaiteur", function() {deepEqual( Stem("bienfaiteur"), "bienfaiteur");});
test("bienfaitrice -> bienfaitric", function() {deepEqual( Stem("bienfaitrice"), "bienfaitric");});
test("bienfaits -> bienfait", function() {deepEqual( Stem("bienfaits"), "bienfait");});
test("biens -> bien", function() {deepEqual( Stem("biens"), "bien");});
test("bientôt -> bientôt", function() {deepEqual( Stem("bientôt"), "bientôt");});
test("bienveillance -> bienveil", function() {deepEqual( Stem("bienveillance"), "bienveil");});
test("bienveillant -> bienveil", function() {deepEqual( Stem("bienveillant"), "bienveil");});
test("bienvenu -> bienvenu", function() {deepEqual( Stem("bienvenu"), "bienvenu");});
test("bière -> bier", function() {deepEqual( Stem("bière"), "bier");});
test("biftecks -> bifteck", function() {deepEqual( Stem("biftecks"), "bifteck");});
test("bigarrée -> bigarr", function() {deepEqual( Stem("bigarrée"), "bigarr");});
test("bijou -> bijou", function() {deepEqual( Stem("bijou"), "bijou");});
test("bijoux -> bijoux", function() {deepEqual( Stem("bijoux"), "bijoux");});
test("bilieuse -> bilieux", function() {deepEqual( Stem("bilieuse"), "bilieux");});
test("bilieux -> bilieux", function() {deepEqual( Stem("bilieux"), "bilieux");});
test("billard -> billard", function() {deepEqual( Stem("billard"), "billard");});
test("billards -> billard", function() {deepEqual( Stem("billards"), "billard");});
test("billet -> billet", function() {deepEqual( Stem("billet"), "billet");});
test("billets -> billet", function() {deepEqual( Stem("billets"), "billet");});
test("binder -> bind", function() {deepEqual( Stem("binder"), "bind");});
test("binet -> binet", function() {deepEqual( Stem("binet"), "binet");});
test("biographie -> biograph", function() {deepEqual( Stem("biographie"), "biograph");});
test("birmingham -> birmingham", function() {deepEqual( Stem("birmingham"), "birmingham");});
test("bisaïeul -> bisaïeul", function() {deepEqual( Stem("bisaïeul"), "bisaïeul");});
test("biscaïens -> biscaïen", function() {deepEqual( Stem("biscaïens"), "biscaïen");});
test("biscuit -> biscuit", function() {deepEqual( Stem("biscuit"), "biscuit");});
test("biscuits -> biscuit", function() {deepEqual( Stem("biscuits"), "biscuit");});
test("bisogna -> bisogn", function() {deepEqual( Stem("bisogna"), "bisogn");});
test("bisons -> bison", function() {deepEqual( Stem("bisons"), "bison");});
test("bisontine -> bisontin", function() {deepEqual( Stem("bisontine"), "bisontin");});
test("bisontins -> bisontin", function() {deepEqual( Stem("bisontins"), "bisontin");});
test("bisontium -> bisontium", function() {deepEqual( Stem("bisontium"), "bisontium");});
test("bitter -> bitt", function() {deepEqual( Stem("bitter"), "bitt");});
test("bivouac -> bivouac", function() {deepEqual( Stem("bivouac"), "bivouac");});
test("bivouacs -> bivouac", function() {deepEqual( Stem("bivouacs"), "bivouac");});
test("bivouaquaient -> bivouaqu", function() {deepEqual( Stem("bivouaquaient"), "bivouaqu");});
test("bizarre -> bizarr", function() {deepEqual( Stem("bizarre"), "bizarr");});
test("bizarrerie -> bizarrer", function() {deepEqual( Stem("bizarrerie"), "bizarrer");});
test("bizarres -> bizarr", function() {deepEqual( Stem("bizarres"), "bizarr");});
test("blackest -> blackest", function() {deepEqual( Stem("blackest"), "blackest");});
test("blafarde -> blafard", function() {deepEqual( Stem("blafarde"), "blafard");});
test("blâma -> blâm", function() {deepEqual( Stem("blâma"), "blâm");});
test("blâmable -> blâmabl", function() {deepEqual( Stem("blâmable"), "blâmabl");});
test("blâmables -> blâmabl", function() {deepEqual( Stem("blâmables"), "blâmabl");});
test("blâmait -> blâm", function() {deepEqual( Stem("blâmait"), "blâm");});
test("blâme -> blâm", function() {deepEqual( Stem("blâme"), "blâm");});
test("blâmé -> blâm", function() {deepEqual( Stem("blâmé"), "blâm");});
test("blâmée -> blâm", function() {deepEqual( Stem("blâmée"), "blâm");});
test("blâmer -> blâm", function() {deepEqual( Stem("blâmer"), "blâm");});
test("blâmés -> blâm", function() {deepEqual( Stem("blâmés"), "blâm");});
test("blanc -> blanc", function() {deepEqual( Stem("blanc"), "blanc");});
test("blanche -> blanch", function() {deepEqual( Stem("blanche"), "blanch");});
test("blanches -> blanch", function() {deepEqual( Stem("blanches"), "blanch");});
test("blancheur -> blancheur", function() {deepEqual( Stem("blancheur"), "blancheur");});
test("blanchie -> blanch", function() {deepEqual( Stem("blanchie"), "blanch");});
test("blanchies -> blanch", function() {deepEqual( Stem("blanchies"), "blanch");});
test("blanchis -> blanch", function() {deepEqual( Stem("blanchis"), "blanch");});
test("blanchisseuse -> blanchiss", function() {deepEqual( Stem("blanchisseuse"), "blanchiss");});
test("blancs -> blanc", function() {deepEqual( Stem("blancs"), "blanc");});
test("bland -> bland", function() {deepEqual( Stem("bland"), "bland");});
test("blanès -> blanes", function() {deepEqual( Stem("blanès"), "blanes");});
test("blason -> blason", function() {deepEqual( Stem("blason"), "blason");});
test("blasphème -> blasphem", function() {deepEqual( Stem("blasphème"), "blasphem");});
test("blasphémé -> blasphem", function() {deepEqual( Stem("blasphémé"), "blasphem");});
test("blé -> blé", function() {deepEqual( Stem("blé"), "blé");});
test("blême -> blêm", function() {deepEqual( Stem("blême"), "blêm");});
test("blés -> blé", function() {deepEqual( Stem("blés"), "blé");});
test("blessa -> bless", function() {deepEqual( Stem("blessa"), "bless");});
test("blessaient -> bless", function() {deepEqual( Stem("blessaient"), "bless");});
test("blessant -> bless", function() {deepEqual( Stem("blessant"), "bless");});
test("blesse -> bless", function() {deepEqual( Stem("blesse"), "bless");});
test("blessé -> bless", function() {deepEqual( Stem("blessé"), "bless");});
test("blessée -> bless", function() {deepEqual( Stem("blessée"), "bless");});
test("blesser -> bless", function() {deepEqual( Stem("blesser"), "bless");});
test("blesserait -> bless", function() {deepEqual( Stem("blesserait"), "bless");});
test("blessés -> bless", function() {deepEqual( Stem("blessés"), "bless");});
test("blessez -> bless", function() {deepEqual( Stem("blessez"), "bless");});
test("blessure -> blessur", function() {deepEqual( Stem("blessure"), "blessur");});
test("blessures -> blessur", function() {deepEqual( Stem("blessures"), "blessur");});
test("bleu -> bleu", function() {deepEqual( Stem("bleu"), "bleu");});
test("bleuâtre -> bleuâtr", function() {deepEqual( Stem("bleuâtre"), "bleuâtr");});
test("bleuâtres -> bleuâtr", function() {deepEqual( Stem("bleuâtres"), "bleuâtr");});
test("bleue -> bleu", function() {deepEqual( Stem("bleue"), "bleu");});
test("bleues -> bleu", function() {deepEqual( Stem("bleues"), "bleu");});
test("bleus -> bleus", function() {deepEqual( Stem("bleus"), "bleus");});
test("bloc -> bloc", function() {deepEqual( Stem("bloc"), "bloc");});
test("blocs -> bloc", function() {deepEqual( Stem("blocs"), "bloc");});
test("blond -> blond", function() {deepEqual( Stem("blond"), "blond");});
test("blonde -> blond", function() {deepEqual( Stem("blonde"), "blond");});
test("blondin -> blondin", function() {deepEqual( Stem("blondin"), "blondin");});
test("blonds -> blond", function() {deepEqual( Stem("blonds"), "blond");});
test("blood -> blood", function() {deepEqual( Stem("blood"), "blood");});
test("blottie -> blott", function() {deepEqual( Stem("blottie"), "blott");});
test("blottirent -> blott", function() {deepEqual( Stem("blottirent"), "blott");});
test("blottit -> blott", function() {deepEqual( Stem("blottit"), "blott");});
test("blue -> blu", function() {deepEqual( Stem("blue"), "blu");});
test("bluffs -> bluff", function() {deepEqual( Stem("bluffs"), "bluff");});
test("blushes -> blush", function() {deepEqual( Stem("blushes"), "blush");});
test("boat -> boat", function() {deepEqual( Stem("boat"), "boat");});
test("boats -> boat", function() {deepEqual( Stem("boats"), "boat");});
test("boeuf -> boeuf", function() {deepEqual( Stem("boeuf"), "boeuf");});
test("boeufs -> boeuf", function() {deepEqual( Stem("boeufs"), "boeuf");});
test("boire -> boir", function() {deepEqual( Stem("boire"), "boir");});
test("bois -> bois", function() {deepEqual( Stem("bois"), "bois");});
test("boisé -> bois", function() {deepEqual( Stem("boisé"), "bois");});
test("boiserie -> boiser", function() {deepEqual( Stem("boiserie"), "boiser");});
test("boisson -> boisson", function() {deepEqual( Stem("boisson"), "boisson");});
test("boissons -> boisson", function() {deepEqual( Stem("boissons"), "boisson");});
test("boit -> boit", function() {deepEqual( Stem("boit"), "boit");});
test("boîte -> boît", function() {deepEqual( Stem("boîte"), "boît");});
test("boîtes -> boît", function() {deepEqual( Stem("boîtes"), "boît");});
test("boiteux -> boiteux", function() {deepEqual( Stem("boiteux"), "boiteux");});
test("bologne -> bologn", function() {deepEqual( Stem("bologne"), "bologn");});
test("bombace -> bombac", function() {deepEqual( Stem("bombace"), "bombac");});
test("bombardé -> bombard", function() {deepEqual( Stem("bombardé"), "bombard");});
test("bombay -> bombay", function() {deepEqual( Stem("bombay"), "bombay");});
test("bombe -> bomb", function() {deepEqual( Stem("bombe"), "bomb");});
test("bombes -> bomb", function() {deepEqual( Stem("bombes"), "bomb");});
test("bombés -> bomb", function() {deepEqual( Stem("bombés"), "bomb");});
test("bon -> bon", function() {deepEqual( Stem("bon"), "bon");});
test("bona -> bon", function() {deepEqual( Stem("bona"), "bon");});
test("bonaparte -> bonapart", function() {deepEqual( Stem("bonaparte"), "bonapart");});
test("bonapartiste -> bonapart", function() {deepEqual( Stem("bonapartiste"), "bonapart");});
test("bonaventure -> bonaventur", function() {deepEqual( Stem("bonaventure"), "bonaventur");});
test("bondir -> bond", function() {deepEqual( Stem("bondir"), "bond");});
test("bondissait -> bond", function() {deepEqual( Stem("bondissait"), "bond");});
test("bondissant -> bond", function() {deepEqual( Stem("bondissant"), "bond");});
test("bondit -> bond", function() {deepEqual( Stem("bondit"), "bond");});
test("bonds -> bond", function() {deepEqual( Stem("bonds"), "bond");});
test("bone -> bon", function() {deepEqual( Stem("bone"), "bon");});
test("bonheur -> bonheur", function() {deepEqual( Stem("bonheur"), "bonheur");});
test("bonheurs -> bonheur", function() {deepEqual( Stem("bonheurs"), "bonheur");});
test("bonhomie -> bonhom", function() {deepEqual( Stem("bonhomie"), "bonhom");});
test("bonhomme -> bonhomm", function() {deepEqual( Stem("bonhomme"), "bonhomm");});
test("boniface -> bonifac", function() {deepEqual( Stem("boniface"), "bonifac");});
test("bonne -> bon", function() {deepEqual( Stem("bonne"), "bon");});
test("bonnement -> bon", function() {deepEqual( Stem("bonnement"), "bon");});
test("bonnes -> bon", function() {deepEqual( Stem("bonnes"), "bon");});
test("bonnet -> bonnet", function() {deepEqual( Stem("bonnet"), "bonnet");});
test("bonnets -> bonnet", function() {deepEqual( Stem("bonnets"), "bonnet");});
test("bons -> bon", function() {deepEqual( Stem("bons"), "bon");});
test("bonshommes -> bonshomm", function() {deepEqual( Stem("bonshommes"), "bonshomm");});
test("bonsoir -> bonsoir", function() {deepEqual( Stem("bonsoir"), "bonsoir");});
test("bonté -> bont", function() {deepEqual( Stem("bonté"), "bont");});
test("bontés -> bont", function() {deepEqual( Stem("bontés"), "bont");});
test("bonzeries -> bonzer", function() {deepEqual( Stem("bonzeries"), "bonzer");});
test("bonzes -> bonz", function() {deepEqual( Stem("bonzes"), "bonz");});
test("booby -> booby", function() {deepEqual( Stem("booby"), "booby");});
test("bord -> bord", function() {deepEqual( Stem("bord"), "bord");});
test("borda -> bord", function() {deepEqual( Stem("borda"), "bord");});
test("bordaient -> bord", function() {deepEqual( Stem("bordaient"), "bord");});
test("bordait -> bord", function() {deepEqual( Stem("bordait"), "bord");});
test("bordé -> bord", function() {deepEqual( Stem("bordé"), "bord");});
test("bordeaux -> bordeau", function() {deepEqual( Stem("bordeaux"), "bordeau");});
test("bordée -> bord", function() {deepEqual( Stem("bordée"), "bord");});
test("bordées -> bord", function() {deepEqual( Stem("bordées"), "bord");});
test("bordent -> bordent", function() {deepEqual( Stem("bordent"), "bordent");});
test("bordés -> bord", function() {deepEqual( Stem("bordés"), "bord");});
test("bords -> bord", function() {deepEqual( Stem("bords"), "bord");});
test("bordures -> bordur", function() {deepEqual( Stem("bordures"), "bordur");});
test("borgo -> borgo", function() {deepEqual( Stem("borgo"), "borgo");});
test("borna -> born", function() {deepEqual( Stem("borna"), "born");});
test("bornaient -> born", function() {deepEqual( Stem("bornaient"), "born");});
test("bornait -> born", function() {deepEqual( Stem("bornait"), "born");});
test("borne -> born", function() {deepEqual( Stem("borne"), "born");});
test("borné -> born", function() {deepEqual( Stem("borné"), "born");});
test("bornes -> born", function() {deepEqual( Stem("bornes"), "born");});
test("borone -> boron", function() {deepEqual( Stem("borone"), "boron");});
test("borso -> borso", function() {deepEqual( Stem("borso"), "borso");});
test("bosco -> bosco", function() {deepEqual( Stem("bosco"), "bosco");});
test("bosse -> boss", function() {deepEqual( Stem("bosse"), "boss");});
test("bosses -> boss", function() {deepEqual( Stem("bosses"), "boss");});
test("bossi -> boss", function() {deepEqual( Stem("bossi"), "boss");});
test("bossuet -> bossuet", function() {deepEqual( Stem("bossuet"), "bossuet");});
test("botanique -> botan", function() {deepEqual( Stem("botanique"), "botan");});
test("botte -> bott", function() {deepEqual( Stem("botte"), "bott");});
test("bottes -> bott", function() {deepEqual( Stem("bottes"), "bott");});
test("bottier -> botti", function() {deepEqual( Stem("bottier"), "botti");});
test("bouche -> bouch", function() {deepEqual( Stem("bouche"), "bouch");});
test("boucher -> bouch", function() {deepEqual( Stem("boucher"), "bouch");});
test("boucherie -> boucher", function() {deepEqual( Stem("boucherie"), "boucher");});
test("bouchers -> boucher", function() {deepEqual( Stem("bouchers"), "boucher");});
test("bouches -> bouch", function() {deepEqual( Stem("bouches"), "bouch");});
test("boucles -> boucl", function() {deepEqual( Stem("boucles"), "boucl");});
test("bouclés -> boucl", function() {deepEqual( Stem("bouclés"), "boucl");});
test("bouclez -> boucl", function() {deepEqual( Stem("bouclez"), "boucl");});
test("bouclier -> boucli", function() {deepEqual( Stem("bouclier"), "boucli");});
test("bouddhisme -> bouddhism", function() {deepEqual( Stem("bouddhisme"), "bouddhism");});
test("bouddhiste -> bouddhist", function() {deepEqual( Stem("bouddhiste"), "bouddhist");});
test("bouder -> boud", function() {deepEqual( Stem("bouder"), "boud");});
test("boudeur -> boudeur", function() {deepEqual( Stem("boudeur"), "boudeur");});
test("boudeurs -> boudeur", function() {deepEqual( Stem("boudeurs"), "boudeur");});
test("boue -> bou", function() {deepEqual( Stem("boue"), "bou");});
test("bouffe -> bouff", function() {deepEqual( Stem("bouffe"), "bouff");});
test("bouffée -> bouff", function() {deepEqual( Stem("bouffée"), "bouff");});
test("bouffées -> bouff", function() {deepEqual( Stem("bouffées"), "bouff");});
test("bouffes -> bouff", function() {deepEqual( Stem("bouffes"), "bouff");});
test("bouffonnerie -> bouffonner", function() {deepEqual( Stem("bouffonnerie"), "bouffonner");});
test("bouffonneries -> bouffonner", function() {deepEqual( Stem("bouffonneries"), "bouffonner");});
test("bougeait -> boug", function() {deepEqual( Stem("bougeait"), "boug");});
test("bougeoir -> bougeoir", function() {deepEqual( Stem("bougeoir"), "bougeoir");});
test("bouger -> boug", function() {deepEqual( Stem("bouger"), "boug");});
test("bougera -> boug", function() {deepEqual( Stem("bougera"), "boug");});
test("bougez -> boug", function() {deepEqual( Stem("bougez"), "boug");});
test("bougie -> boug", function() {deepEqual( Stem("bougie"), "boug");});
test("bougies -> boug", function() {deepEqual( Stem("bougies"), "boug");});
test("bougon -> bougon", function() {deepEqual( Stem("bougon"), "bougon");});
test("bouillait -> bouill", function() {deepEqual( Stem("bouillait"), "bouill");});
test("bouillant -> bouill", function() {deepEqual( Stem("bouillant"), "bouill");});
test("bouillante -> bouill", function() {deepEqual( Stem("bouillante"), "bouill");});
test("bouilli -> bouill", function() {deepEqual( Stem("bouilli"), "bouill");});
test("bouillir -> bouill", function() {deepEqual( Stem("bouillir"), "bouill");});
test("bouillon -> bouillon", function() {deepEqual( Stem("bouillon"), "bouillon");});
test("boulangers -> boulanger", function() {deepEqual( Stem("boulangers"), "boulanger");});
test("boule -> boul", function() {deepEqual( Stem("boule"), "boul");});
test("bouledogue -> bouledogu", function() {deepEqual( Stem("bouledogue"), "bouledogu");});
test("boulet -> boulet", function() {deepEqual( Stem("boulet"), "boulet");});
test("boulets -> boulet", function() {deepEqual( Stem("boulets"), "boulet");});
test("boulettes -> boulet", function() {deepEqual( Stem("boulettes"), "boulet");});
test("boulevard -> boulevard", function() {deepEqual( Stem("boulevard"), "boulevard");});
test("bouleversa -> boulevers", function() {deepEqual( Stem("bouleversa"), "boulevers");});
test("bouleversaient -> boulevers", function() {deepEqual( Stem("bouleversaient"), "boulevers");});
test("bouleverse -> boulevers", function() {deepEqual( Stem("bouleverse"), "boulevers");});
test("bouleversé -> boulevers", function() {deepEqual( Stem("bouleversé"), "boulevers");});
test("bouleversée -> boulevers", function() {deepEqual( Stem("bouleversée"), "boulevers");});
test("bouleversés -> boulevers", function() {deepEqual( Stem("bouleversés"), "boulevers");});
test("boulogne -> boulogn", function() {deepEqual( Stem("boulogne"), "boulogn");});
test("boulons -> boulon", function() {deepEqual( Stem("boulons"), "boulon");});
test("boulot -> boulot", function() {deepEqual( Stem("boulot"), "boulot");});
test("bouquer -> bouqu", function() {deepEqual( Stem("bouquer"), "bouqu");});
test("bouquet -> bouquet", function() {deepEqual( Stem("bouquet"), "bouquet");});
test("bouquets -> bouquet", function() {deepEqual( Stem("bouquets"), "bouquet");});
test("bourbeux -> bourbeux", function() {deepEqual( Stem("bourbeux"), "bourbeux");});
test("bourbier -> bourbi", function() {deepEqual( Stem("bourbier"), "bourbi");});
test("bourbiers -> bourbi", function() {deepEqual( Stem("bourbiers"), "bourbi");});
test("bourbons -> bourbon", function() {deepEqual( Stem("bourbons"), "bourbon");});
test("bourdon -> bourdon", function() {deepEqual( Stem("bourdon"), "bourdon");});
test("bourdonnement -> bourdon", function() {deepEqual( Stem("bourdonnement"), "bourdon");});
test("bourdonnements -> bourdon", function() {deepEqual( Stem("bourdonnements"), "bourdon");});
test("bourg -> bourg", function() {deepEqual( Stem("bourg"), "bourg");});
test("bourgade -> bourgad", function() {deepEqual( Stem("bourgade"), "bourgad");});
test("bourgades -> bourgad", function() {deepEqual( Stem("bourgades"), "bourgad");});
test("bourgeois -> bourgeois", function() {deepEqual( Stem("bourgeois"), "bourgeois");});
test("bourgeoise -> bourgeois", function() {deepEqual( Stem("bourgeoise"), "bourgeois");});
test("bourgeoises -> bourgeois", function() {deepEqual( Stem("bourgeoises"), "bourgeois");});
test("bourgeoisie -> bourgeois", function() {deepEqual( Stem("bourgeoisie"), "bourgeois");});
test("bourgeons -> bourgeon", function() {deepEqual( Stem("bourgeons"), "bourgeon");});
test("bourgogne -> bourgogn", function() {deepEqual( Stem("bourgogne"), "bourgogn");});
test("bourguignon -> bourguignon", function() {deepEqual( Stem("bourguignon"), "bourguignon");});
test("bourguignons -> bourguignon", function() {deepEqual( Stem("bourguignons"), "bourguignon");});
test("bourrasque -> bourrasqu", function() {deepEqual( Stem("bourrasque"), "bourrasqu");});
test("bourrasques -> bourrasqu", function() {deepEqual( Stem("bourrasques"), "bourrasqu");});
test("bourreau -> bourreau", function() {deepEqual( Stem("bourreau"), "bourreau");});
test("bourreaux -> bourreau", function() {deepEqual( Stem("bourreaux"), "bourreau");});
test("bourrées -> bourr", function() {deepEqual( Stem("bourrées"), "bourr");});
test("bourrelée -> bourrel", function() {deepEqual( Stem("bourrelée"), "bourrel");});
test("bourrèlements -> bourrel", function() {deepEqual( Stem("bourrèlements"), "bourrel");});
test("bourse -> bours", function() {deepEqual( Stem("bourse"), "bours");});
test("bourses -> bours", function() {deepEqual( Stem("bourses"), "bours");});
test("boursicot -> boursicot", function() {deepEqual( Stem("boursicot"), "boursicot");});
test("bousculés -> bouscul", function() {deepEqual( Stem("bousculés"), "bouscul");});
test("bout -> bout", function() {deepEqual( Stem("bout"), "bout");});
test("boutade -> boutad", function() {deepEqual( Stem("boutade"), "boutad");});
test("bouteille -> bouteil", function() {deepEqual( Stem("bouteille"), "bouteil");});
test("bouteilles -> bouteil", function() {deepEqual( Stem("bouteilles"), "bouteil");});
test("boutique -> boutiqu", function() {deepEqual( Stem("boutique"), "boutiqu");});
test("boutiques -> boutiqu", function() {deepEqual( Stem("boutiques"), "boutiqu");});
test("boutiquiers -> boutiqui", function() {deepEqual( Stem("boutiquiers"), "boutiqui");});
test("bouton -> bouton", function() {deepEqual( Stem("bouton"), "bouton");});
test("boutonné -> bouton", function() {deepEqual( Stem("boutonné"), "bouton");});
test("boutonnière -> boutonni", function() {deepEqual( Stem("boutonnière"), "boutonni");});
test("boutons -> bouton", function() {deepEqual( Stem("boutons"), "bouton");});
test("bouts -> bout", function() {deepEqual( Stem("bouts"), "bout");});
test("bow -> bow", function() {deepEqual( Stem("bow"), "bow");});
test("boxe -> box", function() {deepEqual( Stem("boxe"), "box");});
test("bracelets -> bracelet", function() {deepEqual( Stem("bracelets"), "bracelet");});
test("bradshaw -> bradshaw", function() {deepEqual( Stem("bradshaw"), "bradshaw");});
test("brahma -> brahm", function() {deepEqual( Stem("brahma"), "brahm");});
test("brahmanes -> brahman", function() {deepEqual( Stem("brahmanes"), "brahman");});
test("brahmanique -> brahman", function() {deepEqual( Stem("brahmanique"), "brahman");});
test("brahmaniques -> brahman", function() {deepEqual( Stem("brahmaniques"), "brahman");});
test("branchages -> branchag", function() {deepEqual( Stem("branchages"), "branchag");});
test("branche -> branch", function() {deepEqual( Stem("branche"), "branch");});
test("branches -> branch", function() {deepEqual( Stem("branches"), "branch");});
test("brandissant -> brand", function() {deepEqual( Stem("brandissant"), "brand");});
test("brandy -> brandy", function() {deepEqual( Stem("brandy"), "brandy");});
test("branlante -> branl", function() {deepEqual( Stem("branlante"), "branl");});
test("branle -> branl", function() {deepEqual( Stem("branle"), "branl");});
test("brantôme -> brantôm", function() {deepEqual( Stem("brantôme"), "brantôm");});
test("bras -> bras", function() {deepEqual( Stem("bras"), "bras");});
test("brasses -> brass", function() {deepEqual( Stem("brasses"), "brass");});
test("brasseur -> brasseur", function() {deepEqual( Stem("brasseur"), "brasseur");});
test("bravade -> bravad", function() {deepEqual( Stem("bravade"), "bravad");});
test("bravait -> brav", function() {deepEqual( Stem("bravait"), "brav");});
test("brave -> brav", function() {deepEqual( Stem("brave"), "brav");});
test("bravé -> brav", function() {deepEqual( Stem("bravé"), "brav");});
test("bravée -> brav", function() {deepEqual( Stem("bravée"), "brav");});
test("bravement -> brav", function() {deepEqual( Stem("bravement"), "brav");});
test("bravent -> bravent", function() {deepEqual( Stem("bravent"), "bravent");});
test("braver -> brav", function() {deepEqual( Stem("braver"), "brav");});
test("braverais -> brav", function() {deepEqual( Stem("braverais"), "brav");});
test("braves -> brav", function() {deepEqual( Stem("braves"), "brav");});
test("bravi -> brav", function() {deepEqual( Stem("bravi"), "brav");});
test("bravissimo -> bravissimo", function() {deepEqual( Stem("bravissimo"), "bravissimo");});
test("bravo -> bravo", function() {deepEqual( Stem("bravo"), "bravo");});
test("bravoure -> bravour", function() {deepEqual( Stem("bravoure"), "bravour");});
test("bray -> bray", function() {deepEqual( Stem("bray"), "bray");});
test("brebis -> breb", function() {deepEqual( Stem("brebis"), "breb");});
test("bref -> bref", function() {deepEqual( Stem("bref"), "bref");});
test("brefs -> bref", function() {deepEqual( Stem("brefs"), "bref");});
test("brescia -> bresci", function() {deepEqual( Stem("brescia"), "bresci");});
test("brésil -> brésil", function() {deepEqual( Stem("brésil"), "brésil");});
test("bretagne -> bretagn", function() {deepEqual( Stem("bretagne"), "bretagn");});
test("brève -> brev", function() {deepEqual( Stem("brève"), "brev");});
test("brèves -> brev", function() {deepEqual( Stem("brèves"), "brev");});
test("brevet -> brevet", function() {deepEqual( Stem("brevet"), "brevet");});
test("brevets -> brevet", function() {deepEqual( Stem("brevets"), "brevet");});
test("bréviaire -> bréviair", function() {deepEqual( Stem("bréviaire"), "bréviair");});
test("brick -> brick", function() {deepEqual( Stem("brick"), "brick");});
test("bride -> brid", function() {deepEqual( Stem("bride"), "brid");});
test("bridés -> brid", function() {deepEqual( Stem("bridés"), "brid");});
test("bridger -> bridg", function() {deepEqual( Stem("bridger"), "bridg");});
test("bridon -> bridon", function() {deepEqual( Stem("bridon"), "bridon");});
test("brigade -> brigad", function() {deepEqual( Stem("brigade"), "brigad");});
test("brigadier -> brigadi", function() {deepEqual( Stem("brigadier"), "brigadi");});
test("brigadiers -> brigadi", function() {deepEqual( Stem("brigadiers"), "brigadi");});
test("brigand -> brigand", function() {deepEqual( Stem("brigand"), "brigand");});
test("brigands -> brigand", function() {deepEqual( Stem("brigands"), "brigand");});
test("brigantine -> brigantin", function() {deepEqual( Stem("brigantine"), "brigantin");});
test("brigham -> brigham", function() {deepEqual( Stem("brigham"), "brigham");});
test("brighella -> brighel", function() {deepEqual( Stem("brighella"), "brighel");});
test("brilla -> brill", function() {deepEqual( Stem("brilla"), "brill");});
test("brillaient -> brill", function() {deepEqual( Stem("brillaient"), "brill");});
test("brillait -> brill", function() {deepEqual( Stem("brillait"), "brill");});
test("brillamment -> brill", function() {deepEqual( Stem("brillamment"), "brill");});
test("brillant -> brill", function() {deepEqual( Stem("brillant"), "brill");});
test("brillante -> brill", function() {deepEqual( Stem("brillante"), "brill");});
test("brillantes -> brill", function() {deepEqual( Stem("brillantes"), "brill");});
test("brillants -> brill", function() {deepEqual( Stem("brillants"), "brill");});
test("brille -> brill", function() {deepEqual( Stem("brille"), "brill");});
test("brillé -> brill", function() {deepEqual( Stem("brillé"), "brill");});
test("brillent -> brillent", function() {deepEqual( Stem("brillent"), "brillent");});
test("briller -> brill", function() {deepEqual( Stem("briller"), "brill");});
test("brillèrent -> brill", function() {deepEqual( Stem("brillèrent"), "brill");});
test("brindisi -> brindis", function() {deepEqual( Stem("brindisi"), "brindis");});
test("brins -> brin", function() {deepEqual( Stem("brins"), "brin");});
test("brio -> brio", function() {deepEqual( Stem("brio"), "brio");});
test("brique -> briqu", function() {deepEqual( Stem("brique"), "briqu");});
test("briques -> briqu", function() {deepEqual( Stem("briques"), "briqu");});
test("brisa -> bris", function() {deepEqual( Stem("brisa"), "bris");});
test("brisaient -> bris", function() {deepEqual( Stem("brisaient"), "bris");});
test("brisait -> bris", function() {deepEqual( Stem("brisait"), "bris");});
test("brise -> bris", function() {deepEqual( Stem("brise"), "bris");});
test("brisé -> bris", function() {deepEqual( Stem("brisé"), "bris");});
test("brisée -> bris", function() {deepEqual( Stem("brisée"), "bris");});
test("brisées -> bris", function() {deepEqual( Stem("brisées"), "bris");});
test("briser -> bris", function() {deepEqual( Stem("briser"), "bris");});
test("brisèrent -> bris", function() {deepEqual( Stem("brisèrent"), "bris");});
test("brises -> bris", function() {deepEqual( Stem("brises"), "bris");});
test("brisés -> bris", function() {deepEqual( Stem("brisés"), "bris");});
test("britannique -> britann", function() {deepEqual( Stem("britannique"), "britann");});
test("britannisée -> britannis", function() {deepEqual( Stem("britannisée"), "britannis");});
test("british -> british", function() {deepEqual( Stem("british"), "british");});
test("broadway -> broadway", function() {deepEqual( Stem("broadway"), "broadway");});
test("brocanteur -> brocanteur", function() {deepEqual( Stem("brocanteur"), "brocanteur");});
test("brocart -> brocart", function() {deepEqual( Stem("brocart"), "brocart");});
test("brochant -> broch", function() {deepEqual( Stem("brochant"), "broch");});
test("brochées -> broch", function() {deepEqual( Stem("brochées"), "broch");});
test("brochure -> brochur", function() {deepEqual( Stem("brochure"), "brochur");});
test("brocs -> broc", function() {deepEqual( Stem("brocs"), "broc");});
test("brodé -> brod", function() {deepEqual( Stem("brodé"), "brod");});
test("brodées -> brod", function() {deepEqual( Stem("brodées"), "brod");});
test("broderie -> broder", function() {deepEqual( Stem("broderie"), "broder");});
test("broderies -> broder", function() {deepEqual( Stem("broderies"), "broder");});
test("brodés -> brod", function() {deepEqual( Stem("brodés"), "brod");});
test("bronché -> bronch", function() {deepEqual( Stem("bronché"), "bronch");});
test("broncher -> bronch", function() {deepEqual( Stem("broncher"), "bronch");});
test("bronze -> bronz", function() {deepEqual( Stem("bronze"), "bronz");});
test("brosser -> bross", function() {deepEqual( Stem("brosser"), "bross");});
test("brouette -> brouet", function() {deepEqual( Stem("brouette"), "brouet");});
test("brouettes -> brouet", function() {deepEqual( Stem("brouettes"), "brouet");});
test("brougham -> brougham", function() {deepEqual( Stem("brougham"), "brougham");});
test("brouhaha -> brouhah", function() {deepEqual( Stem("brouhaha"), "brouhah");});
test("brouillaient -> brouill", function() {deepEqual( Stem("brouillaient"), "brouill");});
test("brouillais -> brouill", function() {deepEqual( Stem("brouillais"), "brouill");});
test("brouillard -> brouillard", function() {deepEqual( Stem("brouillard"), "brouillard");});
test("brouillards -> brouillard", function() {deepEqual( Stem("brouillards"), "brouillard");});
test("brouille -> brouill", function() {deepEqual( Stem("brouille"), "brouill");});
test("brouillé -> brouill", function() {deepEqual( Stem("brouillé"), "brouill");});
test("brouillée -> brouill", function() {deepEqual( Stem("brouillée"), "brouill");});
test("brouiller -> brouill", function() {deepEqual( Stem("brouiller"), "brouill");});
test("brouillerie -> brouiller", function() {deepEqual( Stem("brouillerie"), "brouiller");});
test("brouilleriez -> brouill", function() {deepEqual( Stem("brouilleriez"), "brouill");});
test("brouillerons -> brouill", function() {deepEqual( Stem("brouillerons"), "brouill");});
test("brouilles -> brouill", function() {deepEqual( Stem("brouilles"), "brouill");});
test("brouillon -> brouillon", function() {deepEqual( Stem("brouillon"), "brouillon");});
test("brouillons -> brouillon", function() {deepEqual( Stem("brouillons"), "brouillon");});
test("broussailles -> broussaill", function() {deepEqual( Stem("broussailles"), "broussaill");});
test("bruissement -> bruissement", function() {deepEqual( Stem("bruissement"), "bruissement");});
test("bruit -> bruit", function() {deepEqual( Stem("bruit"), "bruit");});
test("bruits -> bruit", function() {deepEqual( Stem("bruits"), "bruit");});
test("brûla -> brûl", function() {deepEqual( Stem("brûla"), "brûl");});
test("brûlaient -> brûl", function() {deepEqual( Stem("brûlaient"), "brûl");});
test("brûlait -> brûl", function() {deepEqual( Stem("brûlait"), "brûl");});
test("brûlant -> brûl", function() {deepEqual( Stem("brûlant"), "brûl");});
test("brûlante -> brûl", function() {deepEqual( Stem("brûlante"), "brûl");});
test("brûlantes -> brûl", function() {deepEqual( Stem("brûlantes"), "brûl");});
test("brûle -> brûl", function() {deepEqual( Stem("brûle"), "brûl");});
test("brûlé -> brûl", function() {deepEqual( Stem("brûlé"), "brûl");});
test("brûlée -> brûl", function() {deepEqual( Stem("brûlée"), "brûl");});
test("brûlées -> brûl", function() {deepEqual( Stem("brûlées"), "brûl");});
test("brûler -> brûl", function() {deepEqual( Stem("brûler"), "brûl");});
test("brûlerait -> brûl", function() {deepEqual( Stem("brûlerait"), "brûl");});
test("brûlerez -> brûl", function() {deepEqual( Stem("brûlerez"), "brûl");});
test("brûlés -> brûl", function() {deepEqual( Stem("brûlés"), "brûl");});
test("brûlons -> brûlon", function() {deepEqual( Stem("brûlons"), "brûlon");});
test("brûlure -> brûlur", function() {deepEqual( Stem("brûlure"), "brûlur");});
test("brume -> brum", function() {deepEqual( Stem("brume"), "brum");});
test("brumes -> brum", function() {deepEqual( Stem("brumes"), "brum");});
test("brun -> brun", function() {deepEqual( Stem("brun"), "brun");});
test("brune -> brun", function() {deepEqual( Stem("brune"), "brun");});
test("bruno -> bruno", function() {deepEqual( Stem("bruno"), "bruno");});
test("bruns -> brun", function() {deepEqual( Stem("bruns"), "brun");});
test("brusque -> brusqu", function() {deepEqual( Stem("brusque"), "brusqu");});
test("brusquement -> brusqu", function() {deepEqual( Stem("brusquement"), "brusqu");});
test("brusquer -> brusqu", function() {deepEqual( Stem("brusquer"), "brusqu");});
test("brusques -> brusqu", function() {deepEqual( Stem("brusques"), "brusqu");});
test("brut -> brut", function() {deepEqual( Stem("brut"), "brut");});
test("brutal -> brutal", function() {deepEqual( Stem("brutal"), "brutal");});
test("brutale -> brutal", function() {deepEqual( Stem("brutale"), "brutal");});
test("brutalement -> brutal", function() {deepEqual( Stem("brutalement"), "brutal");});
test("brutalité -> brutal", function() {deepEqual( Stem("brutalité"), "brutal");});
test("brutes -> brut", function() {deepEqual( Stem("brutes"), "brut");});
test("brutus -> brutus", function() {deepEqual( Stem("brutus"), "brutus");});
test("bruxelles -> bruxel", function() {deepEqual( Stem("bruxelles"), "bruxel");});
test("bruyamment -> brui", function() {deepEqual( Stem("bruyamment"), "brui");});
test("bruyant -> brui", function() {deepEqual( Stem("bruyant"), "brui");});
test("bruyante -> brui", function() {deepEqual( Stem("bruyante"), "brui");});
test("bruyantes -> brui", function() {deepEqual( Stem("bruyantes"), "brui");});
test("bruyants -> brui", function() {deepEqual( Stem("bruyants"), "brui");});
test("bu -> bu", function() {deepEqual( Stem("bu"), "bu");});
test("bubna -> bubn", function() {deepEqual( Stem("bubna"), "bubn");});
test("bûcher -> bûch", function() {deepEqual( Stem("bûcher"), "bûch");});
test("budget -> budget", function() {deepEqual( Stem("budget"), "budget");});
test("bue -> bu", function() {deepEqual( Stem("bue"), "bu");});
test("buffa -> buff", function() {deepEqual( Stem("buffa"), "buff");});
test("buffalos -> buffalos", function() {deepEqual( Stem("buffalos"), "buffalos");});
test("buffet -> buffet", function() {deepEqual( Stem("buffet"), "buffet");});
test("buffles -> buffl", function() {deepEqual( Stem("buffles"), "buffl");});
test("buis -> buis", function() {deepEqual( Stem("buis"), "buis");});
test("buissons -> buisson", function() {deepEqual( Stem("buissons"), "buisson");});
test("buli -> bul", function() {deepEqual( Stem("buli"), "bul");});
test("bull -> bull", function() {deepEqual( Stem("bull"), "bull");});
test("bulle -> bull", function() {deepEqual( Stem("bulle"), "bull");});
test("bulletin -> bulletin", function() {deepEqual( Stem("bulletin"), "bulletin");});
test("bulletins -> bulletin", function() {deepEqual( Stem("bulletins"), "bulletin");});
test("bulo -> bulo", function() {deepEqual( Stem("bulo"), "bulo");});
test("bundelkund -> bundelkund", function() {deepEqual( Stem("bundelkund"), "bundelkund");});
test("bungalow -> bungalow", function() {deepEqual( Stem("bungalow"), "bungalow");});
test("bungalows -> bungalow", function() {deepEqual( Stem("bungalows"), "bungalow");});
test("bunhyas -> bunhi", function() {deepEqual( Stem("bunhyas"), "bunhi");});
test("bunsby -> bunsby", function() {deepEqual( Stem("bunsby"), "bunsby");});
test("buonaparte -> buonapart", function() {deepEqual( Stem("buonaparte"), "buonapart");});
test("buonaparté -> buonapart", function() {deepEqual( Stem("buonaparté"), "buonapart");});
test("burati -> burat", function() {deepEqual( Stem("burati"), "burat");});
test("burdivan -> burdivan", function() {deepEqual( Stem("burdivan"), "burdivan");});
test("burdwan -> burdwan", function() {deepEqual( Stem("burdwan"), "burdwan");});
test("bureau -> bureau", function() {deepEqual( Stem("bureau"), "bureau");});
test("bureaucratique -> bureaucrat", function() {deepEqual( Stem("bureaucratique"), "bureaucrat");});
test("bureaux -> bureau", function() {deepEqual( Stem("bureaux"), "bureau");});
test("burhampour -> burhampour", function() {deepEqual( Stem("burhampour"), "burhampour");});
test("burlesque -> burlesqu", function() {deepEqual( Stem("burlesque"), "burlesqu");});
test("burlington -> burlington", function() {deepEqual( Stem("burlington"), "burlington");});
test("burning -> burning", function() {deepEqual( Stem("burning"), "burning");});
test("busqué -> busqu", function() {deepEqual( Stem("busqué"), "busqu");});
test("buste -> bust", function() {deepEqual( Stem("buste"), "bust");});
test("bustos -> bustos", function() {deepEqual( Stem("bustos"), "bustos");});
test("but -> but", function() {deepEqual( Stem("but"), "but");});
test("butcher -> butch", function() {deepEqual( Stem("butcher"), "butch");});
test("butte -> butt", function() {deepEqual( Stem("butte"), "butt");});
test("buvait -> buv", function() {deepEqual( Stem("buvait"), "buv");});
test("buvez -> buv", function() {deepEqual( Stem("buvez"), "buv");});
test("buvions -> buvion", function() {deepEqual( Stem("buvions"), "buvion");});
test("buvons -> buvon", function() {deepEqual( Stem("buvons"), "buvon");});
test("buxar -> buxar", function() {deepEqual( Stem("buxar"), "buxar");});
test("by -> by", function() {deepEqual( Stem("by"), "by");});
test("byron -> byron", function() {deepEqual( Stem("byron"), "byron");});
test("c -> c", function() {deepEqual( Stem("c"), "c");});
test("ça -> ça", function() {deepEqual( Stem("ça"), "ça");});
test("çà -> çà", function() {deepEqual( Stem("çà"), "çà");});
test("cab -> cab", function() {deepEqual( Stem("cab"), "cab");});
test("cabale -> cabal", function() {deepEqual( Stem("cabale"), "cabal");});
test("cabane -> caban", function() {deepEqual( Stem("cabane"), "caban");});
test("cabanes -> caban", function() {deepEqual( Stem("cabanes"), "caban");});
test("cabaret -> cabaret", function() {deepEqual( Stem("cabaret"), "cabaret");});
test("cabarets -> cabaret", function() {deepEqual( Stem("cabarets"), "cabaret");});
test("cabine -> cabin", function() {deepEqual( Stem("cabine"), "cabin");});
test("cabines -> cabin", function() {deepEqual( Stem("cabines"), "cabin");});
test("cabinet -> cabinet", function() {deepEqual( Stem("cabinet"), "cabinet");});
test("cabinets -> cabinet", function() {deepEqual( Stem("cabinets"), "cabinet");});
test("cabotage -> cabotag", function() {deepEqual( Stem("cabotage"), "cabotag");});
test("cabra -> cabr", function() {deepEqual( Stem("cabra"), "cabr");});
test("cabrait -> cabr", function() {deepEqual( Stem("cabrait"), "cabr");});
test("cabrer -> cabr", function() {deepEqual( Stem("cabrer"), "cabr");});
test("cabriolet -> cabriolet", function() {deepEqual( Stem("cabriolet"), "cabriolet");});
test("cacha -> cach", function() {deepEqual( Stem("cacha"), "cach");});
test("cachaient -> cach", function() {deepEqual( Stem("cachaient"), "cach");});
test("cachais -> cach", function() {deepEqual( Stem("cachais"), "cach");});
test("cachait -> cach", function() {deepEqual( Stem("cachait"), "cach");});
test("cachant -> cach", function() {deepEqual( Stem("cachant"), "cach");});
test("cache -> cach", function() {deepEqual( Stem("cache"), "cach");});
test("caché -> cach", function() {deepEqual( Stem("caché"), "cach");});
test("cachée -> cach", function() {deepEqual( Stem("cachée"), "cach");});
test("cachées -> cach", function() {deepEqual( Stem("cachées"), "cach");});
test("cachemire -> cachemir", function() {deepEqual( Stem("cachemire"), "cachemir");});
test("cachent -> cachent", function() {deepEqual( Stem("cachent"), "cachent");});
test("cacher -> cach", function() {deepEqual( Stem("cacher"), "cach");});
test("cachera -> cach", function() {deepEqual( Stem("cachera"), "cach");});
test("cacherai -> cach", function() {deepEqual( Stem("cacherai"), "cach");});
test("cacherait -> cach", function() {deepEqual( Stem("cacherait"), "cach");});
test("cacherons -> cach", function() {deepEqual( Stem("cacherons"), "cach");});
test("cachés -> cach", function() {deepEqual( Stem("cachés"), "cach");});
test("cachet -> cachet", function() {deepEqual( Stem("cachet"), "cachet");});
test("cacheté -> cachet", function() {deepEqual( Stem("cacheté"), "cachet");});
test("cacheter -> cachet", function() {deepEqual( Stem("cacheter"), "cachet");});
test("cachette -> cachet", function() {deepEqual( Stem("cachette"), "cachet");});
test("cachettes -> cachet", function() {deepEqual( Stem("cachettes"), "cachet");});
test("cachons -> cachon", function() {deepEqual( Stem("cachons"), "cachon");});
test("cachot -> cachot", function() {deepEqual( Stem("cachot"), "cachot");});
test("cachots -> cachot", function() {deepEqual( Stem("cachots"), "cachot");});
test("cacolet -> cacolet", function() {deepEqual( Stem("cacolet"), "cacolet");});
test("cacolets -> cacolet", function() {deepEqual( Stem("cacolets"), "cacolet");});
test("cadavre -> cadavr", function() {deepEqual( Stem("cadavre"), "cadavr");});
test("cadavres -> cadavr", function() {deepEqual( Stem("cadavres"), "cadavr");});
test("cadeau -> cadeau", function() {deepEqual( Stem("cadeau"), "cadeau");});
test("cadeaux -> cadeau", function() {deepEqual( Stem("cadeaux"), "cadeau");});
test("cadenabia -> cadenabi", function() {deepEqual( Stem("cadenabia"), "cadenabi");});
test("cadenas -> caden", function() {deepEqual( Stem("cadenas"), "caden");});
test("cadet -> cadet", function() {deepEqual( Stem("cadet"), "cadet");});
test("cadets -> cadet", function() {deepEqual( Stem("cadets"), "cadet");});
test("cadette -> cadet", function() {deepEqual( Stem("cadette"), "cadet");});
test("cadran -> cadran", function() {deepEqual( Stem("cadran"), "cadran");});
test("cadre -> cadr", function() {deepEqual( Stem("cadre"), "cadr");});
test("cadres -> cadr", function() {deepEqual( Stem("cadres"), "cadr");});
test("café -> caf", function() {deepEqual( Stem("café"), "caf");});
test("caféiers -> caféi", function() {deepEqual( Stem("caféiers"), "caféi");});
test("cafés -> caf", function() {deepEqual( Stem("cafés"), "caf");});
test("cage -> cag", function() {deepEqual( Stem("cage"), "cag");});
test("cages -> cag", function() {deepEqual( Stem("cages"), "cag");});
test("cagnola -> cagnol", function() {deepEqual( Stem("cagnola"), "cagnol");});
test("cahier -> cahi", function() {deepEqual( Stem("cahier"), "cahi");});
test("cahutes -> cahut", function() {deepEqual( Stem("cahutes"), "cahut");});
test("caillé -> caill", function() {deepEqual( Stem("caillé"), "caill");});
test("cailles -> caill", function() {deepEqual( Stem("cailles"), "caill");});
test("cailloux -> cailloux", function() {deepEqual( Stem("cailloux"), "cailloux");});
test("caisse -> caiss", function() {deepEqual( Stem("caisse"), "caiss");});
test("caisses -> caiss", function() {deepEqual( Stem("caisses"), "caiss");});
test("caissier -> caissi", function() {deepEqual( Stem("caissier"), "caissi");});
test("caissons -> caisson", function() {deepEqual( Stem("caissons"), "caisson");});
test("cajoleries -> cajoler", function() {deepEqual( Stem("cajoleries"), "cajoler");});
test("calais -> cal", function() {deepEqual( Stem("calais"), "cal");});
test("calcul -> calcul", function() {deepEqual( Stem("calcul"), "calcul");});
test("calculait -> calcul", function() {deepEqual( Stem("calculait"), "calcul");});
test("calculant -> calcul", function() {deepEqual( Stem("calculant"), "calcul");});
test("calculateur -> calcul", function() {deepEqual( Stem("calculateur"), "calcul");});
test("calculé -> calcul", function() {deepEqual( Stem("calculé"), "calcul");});
test("calculée -> calcul", function() {deepEqual( Stem("calculée"), "calcul");});
test("calculées -> calcul", function() {deepEqual( Stem("calculées"), "calcul");});
test("calculer -> calcul", function() {deepEqual( Stem("calculer"), "calcul");});
test("calculs -> calcul", function() {deepEqual( Stem("calculs"), "calcul");});
test("calcutta -> calcutt", function() {deepEqual( Stem("calcutta"), "calcutt");});
test("calèche -> calech", function() {deepEqual( Stem("calèche"), "calech");});
test("calembour -> calembour", function() {deepEqual( Stem("calembour"), "calembour");});
test("calembours -> calembour", function() {deepEqual( Stem("calembours"), "calembour");});
test("calendrier -> calendri", function() {deepEqual( Stem("calendrier"), "calendri");});
test("californie -> californ", function() {deepEqual( Stem("californie"), "californ");});
test("californienne -> californien", function() {deepEqual( Stem("californienne"), "californien");});
test("califourchon -> califourchon", function() {deepEqual( Stem("califourchon"), "califourchon");});
test("câline -> câlin", function() {deepEqual( Stem("câline"), "câlin");});
test("call -> call", function() {deepEqual( Stem("call"), "call");});
test("called -> called", function() {deepEqual( Stem("called"), "called");});
test("callyan -> callyan", function() {deepEqual( Stem("callyan"), "callyan");});
test("calm -> calm", function() {deepEqual( Stem("calm"), "calm");});
test("calma -> calm", function() {deepEqual( Stem("calma"), "calm");});
test("calme -> calm", function() {deepEqual( Stem("calme"), "calm");});
test("calmer -> calm", function() {deepEqual( Stem("calmer"), "calm");});
test("calmerai -> calm", function() {deepEqual( Stem("calmerai"), "calm");});
test("calmèrent -> calm", function() {deepEqual( Stem("calmèrent"), "calm");});
test("calmes -> calm", function() {deepEqual( Stem("calmes"), "calm");});
test("calmez -> calm", function() {deepEqual( Stem("calmez"), "calm");});
test("calomnie -> calomn", function() {deepEqual( Stem("calomnie"), "calomn");});
test("calomnié -> calomni", function() {deepEqual( Stem("calomnié"), "calomni");});
test("calomniée -> calomni", function() {deepEqual( Stem("calomniée"), "calomni");});
test("calomniées -> calomni", function() {deepEqual( Stem("calomniées"), "calomni");});
test("calomnier -> calomni", function() {deepEqual( Stem("calomnier"), "calomni");});
test("calomnieront -> calomni", function() {deepEqual( Stem("calomnieront"), "calomni");});
test("calomnies -> calomn", function() {deepEqual( Stem("calomnies"), "calomn");});
test("calomnieuses -> calomni", function() {deepEqual( Stem("calomnieuses"), "calomni");});
test("calotin -> calotin", function() {deepEqual( Stem("calotin"), "calotin");});
test("calotte -> calott", function() {deepEqual( Stem("calotte"), "calott");});
test("camarade -> camarad", function() {deepEqual( Stem("camarade"), "camarad");});
test("camarades -> camarad", function() {deepEqual( Stem("camarades"), "camarad");});
test("camarilla -> camarill", function() {deepEqual( Stem("camarilla"), "camarill");});
test("cambaye -> cambay", function() {deepEqual( Stem("cambaye"), "cambay");});
test("cambodge -> cambodg", function() {deepEqual( Stem("cambodge"), "cambodg");});
test("cambrai -> cambr", function() {deepEqual( Stem("cambrai"), "cambr");});
test("cambrure -> cambrur", function() {deepEqual( Stem("cambrure"), "cambrur");});
test("camélias -> caméli", function() {deepEqual( Stem("camélias"), "caméli");});
test("cameriere -> camerier", function() {deepEqual( Stem("cameriere"), "camerier");});
test("camériste -> camer", function() {deepEqual( Stem("camériste"), "camer");});
test("camp -> camp", function() {deepEqual( Stem("camp"), "camp");});
test("campagnards -> campagnard", function() {deepEqual( Stem("campagnards"), "campagnard");});
test("campagne -> campagn", function() {deepEqual( Stem("campagne"), "campagn");});
test("campagnes -> campagn", function() {deepEqual( Stem("campagnes"), "campagn");});
test("campaient -> camp", function() {deepEqual( Stem("campaient"), "camp");});
test("campé -> camp", function() {deepEqual( Stem("campé"), "camp");});
test("can -> can", function() {deepEqual( Stem("can"), "can");});
test("canaille -> canaill", function() {deepEqual( Stem("canaille"), "canaill");});
test("canal -> canal", function() {deepEqual( Stem("canal"), "canal");});
test("canapé -> canap", function() {deepEqual( Stem("canapé"), "canap");});
test("canards -> canard", function() {deepEqual( Stem("canards"), "canard");});
test("cancer -> canc", function() {deepEqual( Stem("cancer"), "canc");});
test("candeur -> candeur", function() {deepEqual( Stem("candeur"), "candeur");});
test("candidat -> candidat", function() {deepEqual( Stem("candidat"), "candidat");});
test("candidats -> candidat", function() {deepEqual( Stem("candidats"), "candidat");});
test("candidature -> candidatur", function() {deepEqual( Stem("candidature"), "candidatur");});
test("candide -> candid", function() {deepEqual( Stem("candide"), "candid");});
test("cangos -> cangos", function() {deepEqual( Stem("cangos"), "cangos");});
test("cani -> can", function() {deepEqual( Stem("cani"), "can");});
test("caniches -> canich", function() {deepEqual( Stem("caniches"), "canich");});
test("canif -> canif", function() {deepEqual( Stem("canif"), "canif");});
test("canne -> cann", function() {deepEqual( Stem("canne"), "cann");});
test("cannelle -> cannel", function() {deepEqual( Stem("cannelle"), "cannel");});
test("cannes -> cann", function() {deepEqual( Stem("cannes"), "cann");});
test("canon -> canon", function() {deepEqual( Stem("canon"), "canon");});
test("canonique -> canon", function() {deepEqual( Stem("canonique"), "canon");});
test("canonnade -> canonnad", function() {deepEqual( Stem("canonnade"), "canonnad");});
test("canonniers -> canonni", function() {deepEqual( Stem("canonniers"), "canonni");});
test("canons -> canon", function() {deepEqual( Stem("canons"), "canon");});
test("canot -> canot", function() {deepEqual( Stem("canot"), "canot");});
test("canots -> canot", function() {deepEqual( Stem("canots"), "canot");});
test("canova -> canov", function() {deepEqual( Stem("canova"), "canov");});
test("canta -> cant", function() {deepEqual( Stem("canta"), "cant");});
test("cantate -> cantat", function() {deepEqual( Stem("cantate"), "cantat");});
test("cantatrice -> cantatric", function() {deepEqual( Stem("cantatrice"), "cantatric");});
test("cantilène -> cantilen", function() {deepEqual( Stem("cantilène"), "cantilen");});
test("cantinière -> cantini", function() {deepEqual( Stem("cantinière"), "cantini");});
test("cantiques -> cantiqu", function() {deepEqual( Stem("cantiques"), "cantiqu");});
test("canton -> canton", function() {deepEqual( Stem("canton"), "canton");});
test("cantonnées -> canton", function() {deepEqual( Stem("cantonnées"), "canton");});
test("cantons -> canton", function() {deepEqual( Stem("cantons"), "canton");});
test("cap -> cap", function() {deepEqual( Stem("cap"), "cap");});
test("capable -> capabl", function() {deepEqual( Stem("capable"), "capabl");});
test("capacité -> capac", function() {deepEqual( Stem("capacité"), "capac");});
test("caparaçonnés -> caparaçon", function() {deepEqual( Stem("caparaçonnés"), "caparaçon");});
test("cape -> cap", function() {deepEqual( Stem("cape"), "cap");});
test("capharnaüm -> capharnaüm", function() {deepEqual( Stem("capharnaüm"), "capharnaüm");});
test("capillaire -> capillair", function() {deepEqual( Stem("capillaire"), "capillair");});
test("capitaine -> capitain", function() {deepEqual( Stem("capitaine"), "capitain");});
test("capitaines -> capitain", function() {deepEqual( Stem("capitaines"), "capitain");});
test("capital -> capital", function() {deepEqual( Stem("capital"), "capital");});
test("capitale -> capital", function() {deepEqual( Stem("capitale"), "capital");});
test("capitani -> capitan", function() {deepEqual( Stem("capitani"), "capitan");});
test("capitulation -> capitul", function() {deepEqual( Stem("capitulation"), "capitul");});
test("capon -> capon", function() {deepEqual( Stem("capon"), "capon");});
test("caporal -> caporal", function() {deepEqual( Stem("caporal"), "caporal");});
test("capot -> capot", function() {deepEqual( Stem("capot"), "capot");});
test("caprice -> capric", function() {deepEqual( Stem("caprice"), "capric");});
test("caprices -> capric", function() {deepEqual( Stem("caprices"), "capric");});
test("capricieuse -> caprici", function() {deepEqual( Stem("capricieuse"), "caprici");});
test("capricieusement -> caprici", function() {deepEqual( Stem("capricieusement"), "caprici");});
test("capricieuses -> caprici", function() {deepEqual( Stem("capricieuses"), "caprici");});
test("captivait -> captiv", function() {deepEqual( Stem("captivait"), "captiv");});
test("captivité -> captiv", function() {deepEqual( Stem("captivité"), "captiv");});
test("capture -> captur", function() {deepEqual( Stem("capture"), "captur");});
test("capuche -> capuch", function() {deepEqual( Stem("capuche"), "capuch");});
test("capuchons -> capuchon", function() {deepEqual( Stem("capuchons"), "capuchon");});
test("capucin -> capucin", function() {deepEqual( Stem("capucin"), "capucin");});
test("car -> car", function() {deepEqual( Stem("car"), "car");});
test("carabine -> carabin", function() {deepEqual( Stem("carabine"), "carabin");});
test("carabines -> carabin", function() {deepEqual( Stem("carabines"), "carabin");});
test("carabiniers -> carabini", function() {deepEqual( Stem("carabiniers"), "carabini");});
test("caractère -> caracter", function() {deepEqual( Stem("caractère"), "caracter");});
test("caractères -> caracter", function() {deepEqual( Stem("caractères"), "caracter");});
test("caractérisait -> caractéris", function() {deepEqual( Stem("caractérisait"), "caractéris");});
test("caractérise -> caractéris", function() {deepEqual( Stem("caractérise"), "caractéris");});
test("caractéristique -> caractérist", function() {deepEqual( Stem("caractéristique"), "caractérist");});
test("carafe -> caraf", function() {deepEqual( Stem("carafe"), "caraf");});
test("carbonaro -> carbonaro", function() {deepEqual( Stem("carbonaro"), "carbonaro");});
test("carburé -> carbur", function() {deepEqual( Stem("carburé"), "carbur");});
test("carcasse -> carc", function() {deepEqual( Stem("carcasse"), "carc");});
test("cardif -> cardif", function() {deepEqual( Stem("cardif"), "cardif");});
test("cardinal -> cardinal", function() {deepEqual( Stem("cardinal"), "cardinal");});
test("cardinaux -> cardinal", function() {deepEqual( Stem("cardinaux"), "cardinal");});
test("caressa -> caress", function() {deepEqual( Stem("caressa"), "caress");});
test("caressait -> caress", function() {deepEqual( Stem("caressait"), "caress");});
test("caressant -> caress", function() {deepEqual( Stem("caressant"), "caress");});
test("caressants -> caress", function() {deepEqual( Stem("caressants"), "caress");});
test("caresse -> caress", function() {deepEqual( Stem("caresse"), "caress");});
test("caressent -> caressent", function() {deepEqual( Stem("caressent"), "caressent");});
test("caresser -> caress", function() {deepEqual( Stem("caresser"), "caress");});
test("caresseraient -> caress", function() {deepEqual( Stem("caresseraient"), "caress");});
test("caresses -> caress", function() {deepEqual( Stem("caresses"), "caress");});
test("cargaison -> cargaison", function() {deepEqual( Stem("cargaison"), "cargaison");});
test("caricature -> caricatur", function() {deepEqual( Stem("caricature"), "caricatur");});
test("carlino -> carlino", function() {deepEqual( Stem("carlino"), "carlino");});
test("carlo -> carlo", function() {deepEqual( Stem("carlo"), "carlo");});
test("carlone -> carlon", function() {deepEqual( Stem("carlone"), "carlon");});
test("carnassiers -> carnassi", function() {deepEqual( Stem("carnassiers"), "carnassi");});
test("carnatic -> carnatic", function() {deepEqual( Stem("carnatic"), "carnatic");});
test("carnaval -> carnaval", function() {deepEqual( Stem("carnaval"), "carnaval");});
test("carnet -> carnet", function() {deepEqual( Stem("carnet"), "carnet");});
test("carnot -> carnot", function() {deepEqual( Stem("carnot"), "carnot");});
test("caro -> caro", function() {deepEqual( Stem("caro"), "caro");});
test("caroline -> carolin", function() {deepEqual( Stem("caroline"), "carolin");});
test("caron -> caron", function() {deepEqual( Stem("caron"), "caron");});
test("caroubiers -> caroubi", function() {deepEqual( Stem("caroubiers"), "caroubi");});
test("carpe -> carp", function() {deepEqual( Stem("carpe"), "carp");});
test("carré -> carr", function() {deepEqual( Stem("carré"), "carr");});
test("carreau -> carreau", function() {deepEqual( Stem("carreau"), "carreau");});
test("carreaux -> carreau", function() {deepEqual( Stem("carreaux"), "carreau");});
test("carrée -> carr", function() {deepEqual( Stem("carrée"), "carr");});
test("carrefours -> carrefour", function() {deepEqual( Stem("carrefours"), "carrefour");});
test("carrément -> carr", function() {deepEqual( Stem("carrément"), "carr");});
test("carrés -> carr", function() {deepEqual( Stem("carrés"), "carr");});
test("carrière -> carri", function() {deepEqual( Stem("carrière"), "carri");});
test("carrières -> carri", function() {deepEqual( Stem("carrières"), "carri");});
test("carrosse -> carross", function() {deepEqual( Stem("carrosse"), "carross");});
test("carrosses -> carross", function() {deepEqual( Stem("carrosses"), "carross");});
test("cars -> car", function() {deepEqual( Stem("cars"), "car");});
test("carson -> carson", function() {deepEqual( Stem("carson"), "carson");});
test("carta -> cart", function() {deepEqual( Stem("carta"), "cart");});
test("carte -> cart", function() {deepEqual( Stem("carte"), "cart");});
test("cartes -> cart", function() {deepEqual( Stem("cartes"), "cart");});
test("carthage -> carthag", function() {deepEqual( Stem("carthage"), "carthag");});
test("carton -> carton", function() {deepEqual( Stem("carton"), "carton");});
test("cartons -> carton", function() {deepEqual( Stem("cartons"), "carton");});
test("cartouche -> cartouch", function() {deepEqual( Stem("cartouche"), "cartouch");});
test("cartouches -> cartouch", function() {deepEqual( Stem("cartouches"), "cartouch");});
test("cas -> cas", function() {deepEqual( Stem("cas"), "cas");});
test("casa -> cas", function() {deepEqual( Stem("casa"), "cas");});
test("casal -> casal", function() {deepEqual( Stem("casal"), "casal");});
test("casanier -> casani", function() {deepEqual( Stem("casanier"), "casani");});
test("cascade -> cascad", function() {deepEqual( Stem("cascade"), "cascad");});
test("cascades -> cascad", function() {deepEqual( Stem("cascades"), "cascad");});
test("case -> cas", function() {deepEqual( Stem("case"), "cas");});
test("caserne -> casern", function() {deepEqual( Stem("caserne"), "casern");});
test("cases -> cas", function() {deepEqual( Stem("cases"), "cas");});
test("casi -> cas", function() {deepEqual( Stem("casi"), "cas");});
test("casimir -> casim", function() {deepEqual( Stem("casimir"), "casim");});
test("casino -> casino", function() {deepEqual( Stem("casino"), "casino");});
test("casque -> casqu", function() {deepEqual( Stem("casque"), "casqu");});
test("casques -> casqu", function() {deepEqual( Stem("casques"), "casqu");});
test("cassa -> cass", function() {deepEqual( Stem("cassa"), "cass");});
test("cassait -> cass", function() {deepEqual( Stem("cassait"), "cass");});
test("cassandre -> cassandr", function() {deepEqual( Stem("cassandre"), "cassandr");});
test("cassano -> cassano", function() {deepEqual( Stem("cassano"), "cassano");});
test("cassât -> cass", function() {deepEqual( Stem("cassât"), "cass");});
test("casse -> cass", function() {deepEqual( Stem("casse"), "cass");});
test("cassé -> cass", function() {deepEqual( Stem("cassé"), "cass");});
test("cassée -> cass", function() {deepEqual( Stem("cassée"), "cass");});
test("cassées -> cass", function() {deepEqual( Stem("cassées"), "cass");});
test("cassent -> cassent", function() {deepEqual( Stem("cassent"), "cassent");});
test("casser -> cass", function() {deepEqual( Stem("casser"), "cass");});
test("casserais -> cass", function() {deepEqual( Stem("casserais"), "cass");});
test("casseroles -> casserol", function() {deepEqual( Stem("casseroles"), "casserol");});
test("cassette -> casset", function() {deepEqual( Stem("cassette"), "casset");});
test("cassine -> cassin", function() {deepEqual( Stem("cassine"), "cassin");});
test("castanède -> castaned", function() {deepEqual( Stem("castanède"), "castaned");});
test("caste -> cast", function() {deepEqual( Stem("caste"), "cast");});
test("castelnovo -> castelnovo", function() {deepEqual( Stem("castelnovo"), "castelnovo");});
test("casti -> cast", function() {deepEqual( Stem("casti"), "cast");});
test("casto -> casto", function() {deepEqual( Stem("casto"), "casto");});
test("castorine -> castorin", function() {deepEqual( Stem("castorine"), "castorin");});
test("castres -> castr", function() {deepEqual( Stem("castres"), "castr");});
test("castries -> castr", function() {deepEqual( Stem("castries"), "castr");});
test("casuel -> casuel", function() {deepEqual( Stem("casuel"), "casuel");});
test("casuistes -> casuist", function() {deepEqual( Stem("casuistes"), "casuist");});
test("catanzara -> catanzar", function() {deepEqual( Stem("catanzara"), "catanzar");});
test("catastrophe -> catastroph", function() {deepEqual( Stem("catastrophe"), "catastroph");});
test("catéchisme -> catech", function() {deepEqual( Stem("catéchisme"), "catech");});
test("catena -> caten", function() {deepEqual( Stem("catena"), "caten");});
test("cathédrale -> cathédral", function() {deepEqual( Stem("cathédrale"), "cathédral");});
test("cathelineau -> cathelineau", function() {deepEqual( Stem("cathelineau"), "cathelineau");});
test("catherine -> catherin", function() {deepEqual( Stem("catherine"), "catherin");});
test("cattaro -> cattaro", function() {deepEqual( Stem("cattaro"), "cattaro");});
test("cauchemar -> cauchemar", function() {deepEqual( Stem("cauchemar"), "cauchemar");});
test("cauchemars -> cauchemar", function() {deepEqual( Stem("cauchemars"), "cauchemar");});
test("caudataire -> caudatair", function() {deepEqual( Stem("caudataire"), "caudatair");});
test("causa -> caus", function() {deepEqual( Stem("causa"), "caus");});
test("causait -> caus", function() {deepEqual( Stem("causait"), "caus");});
test("causant -> caus", function() {deepEqual( Stem("causant"), "caus");});
test("cause -> caus", function() {deepEqual( Stem("cause"), "caus");});
test("causé -> caus", function() {deepEqual( Stem("causé"), "caus");});
test("causée -> caus", function() {deepEqual( Stem("causée"), "caus");});
test("causer -> caus", function() {deepEqual( Stem("causer"), "caus");});
test("causerait -> caus", function() {deepEqual( Stem("causerait"), "caus");});
test("causèrent -> caus", function() {deepEqual( Stem("causèrent"), "caus");});
test("causes -> caus", function() {deepEqual( Stem("causes"), "caus");});
test("causés -> caus", function() {deepEqual( Stem("causés"), "caus");});
test("causeur -> causeur", function() {deepEqual( Stem("causeur"), "causeur");});
test("caustique -> caustiqu", function() {deepEqual( Stem("caustique"), "caustiqu");});
test("cauteleuse -> cautel", function() {deepEqual( Stem("cauteleuse"), "cautel");});
test("cauteleux -> cautel", function() {deepEqual( Stem("cauteleux"), "cautel");});
test("caution -> caution", function() {deepEqual( Stem("caution"), "caution");});
test("cautions -> caution", function() {deepEqual( Stem("cautions"), "caution");});
test("cavalerie -> cavaler", function() {deepEqual( Stem("cavalerie"), "cavaler");});
test("cavalier -> cavali", function() {deepEqual( Stem("cavalier"), "cavali");});
test("cavaliers -> cavali", function() {deepEqual( Stem("cavaliers"), "cavali");});
test("cavallo -> cavallo", function() {deepEqual( Stem("cavallo"), "cavallo");});
test("cave -> cav", function() {deepEqual( Stem("cave"), "cav");});
test("caverne -> cavern", function() {deepEqual( Stem("caverne"), "cavern");});
test("caves -> cav", function() {deepEqual( Stem("caves"), "cav");});
test("cavi -> cav", function() {deepEqual( Stem("cavi"), "cav");});
test("caylus -> caylus", function() {deepEqual( Stem("caylus"), "caylus");});
test("ce -> ce", function() {deepEqual( Stem("ce"), "ce");});
test("ceci -> cec", function() {deepEqual( Stem("ceci"), "cec");});
test("céda -> ced", function() {deepEqual( Stem("céda"), "ced");});
test("cédait -> ced", function() {deepEqual( Stem("cédait"), "ced");});
test("cédant -> ced", function() {deepEqual( Stem("cédant"), "ced");});
test("cédar -> cédar", function() {deepEqual( Stem("cédar"), "cédar");});
test("cède -> ced", function() {deepEqual( Stem("cède"), "ced");});
test("cédé -> ced", function() {deepEqual( Stem("cédé"), "ced");});
test("céder -> ced", function() {deepEqual( Stem("céder"), "ced");});
test("cédera -> ced", function() {deepEqual( Stem("cédera"), "ced");});
test("céderons -> ced", function() {deepEqual( Stem("céderons"), "ced");});
test("cédez -> ced", function() {deepEqual( Stem("cédez"), "ced");});
test("cèdre -> cedr", function() {deepEqual( Stem("cèdre"), "cedr");});
test("cèdres -> cedr", function() {deepEqual( Stem("cèdres"), "cedr");});
test("ceignait -> ceign", function() {deepEqual( Stem("ceignait"), "ceign");});
test("ceinture -> ceintur", function() {deepEqual( Stem("ceinture"), "ceintur");});
test("cela -> cel", function() {deepEqual( Stem("cela"), "cel");});
test("célébra -> célebr", function() {deepEqual( Stem("célébra"), "célebr");});
test("célébraient -> célebr", function() {deepEqual( Stem("célébraient"), "célebr");});
test("célébrait -> célebr", function() {deepEqual( Stem("célébrait"), "célebr");});
test("célèbre -> célebr", function() {deepEqual( Stem("célèbre"), "célebr");});
test("célébré -> célebr", function() {deepEqual( Stem("célébré"), "célebr");});
test("célébrée -> célebr", function() {deepEqual( Stem("célébrée"), "célebr");});
test("célébrèrent -> célebr", function() {deepEqual( Stem("célébrèrent"), "célebr");});
test("célèbres -> célebr", function() {deepEqual( Stem("célèbres"), "célebr");});
test("célébrés -> célebr", function() {deepEqual( Stem("célébrés"), "célebr");});
test("céleste -> célest", function() {deepEqual( Stem("céleste"), "célest");});
test("célibataires -> célibatair", function() {deepEqual( Stem("célibataires"), "célibatair");});
test("cella -> cel", function() {deepEqual( Stem("cella"), "cel");});
test("celle -> cel", function() {deepEqual( Stem("celle"), "cel");});
test("celles -> cel", function() {deepEqual( Stem("celles"), "cel");});
test("cellier -> celli", function() {deepEqual( Stem("cellier"), "celli");});
test("cellule -> cellul", function() {deepEqual( Stem("cellule"), "cellul");});
test("celui -> celui", function() {deepEqual( Stem("celui"), "celui");});
test("cendré -> cendr", function() {deepEqual( Stem("cendré"), "cendr");});
test("cendres -> cendr", function() {deepEqual( Stem("cendres"), "cendr");});
test("cendrés -> cendr", function() {deepEqual( Stem("cendrés"), "cendr");});
test("cenis -> cen", function() {deepEqual( Stem("cenis"), "cen");});
test("censure -> censur", function() {deepEqual( Stem("censure"), "censur");});
test("cent -> cent", function() {deepEqual( Stem("cent"), "cent");});
test("centaine -> centain", function() {deepEqual( Stem("centaine"), "centain");});
test("centaines -> centain", function() {deepEqual( Stem("centaines"), "centain");});
test("centième -> centiem", function() {deepEqual( Stem("centième"), "centiem");});
test("centièmes -> centiem", function() {deepEqual( Stem("centièmes"), "centiem");});
test("centime -> centim", function() {deepEqual( Stem("centime"), "centim");});
test("centimes -> centim", function() {deepEqual( Stem("centimes"), "centim");});
test("central -> central", function() {deepEqual( Stem("central"), "central");});
test("centrale -> central", function() {deepEqual( Stem("centrale"), "central");});
test("centre -> centr", function() {deepEqual( Stem("centre"), "centr");});
test("centres -> centr", function() {deepEqual( Stem("centres"), "centr");});
test("cents -> cent", function() {deepEqual( Stem("cents"), "cent");});
test("centuplais -> centupl", function() {deepEqual( Stem("centuplais"), "centupl");});
test("centuplait -> centupl", function() {deepEqual( Stem("centuplait"), "centupl");});
test("centuplée -> centupl", function() {deepEqual( Stem("centuplée"), "centupl");});
test("cependant -> cepend", function() {deepEqual( Stem("cependant"), "cepend");});
test("cercle -> cercl", function() {deepEqual( Stem("cercle"), "cercl");});
test("cercles -> cercl", function() {deepEqual( Stem("cercles"), "cercl");});
test("cérémonie -> cérémon", function() {deepEqual( Stem("cérémonie"), "cérémon");});
test("cérémonies -> cérémon", function() {deepEqual( Stem("cérémonies"), "cérémon");});
test("cérémonieuse -> cérémoni", function() {deepEqual( Stem("cérémonieuse"), "cérémoni");});
test("cérès -> céres", function() {deepEqual( Stem("cérès"), "céres");});
test("cerf -> cerf", function() {deepEqual( Stem("cerf"), "cerf");});
test("cerisiers -> cerisi", function() {deepEqual( Stem("cerisiers"), "cerisi");});
test("certain -> certain", function() {deepEqual( Stem("certain"), "certain");});
test("certaine -> certain", function() {deepEqual( Stem("certaine"), "certain");});
test("certainement -> certain", function() {deepEqual( Stem("certainement"), "certain");});
test("certaines -> certain", function() {deepEqual( Stem("certaines"), "certain");});
test("certains -> certain", function() {deepEqual( Stem("certains"), "certain");});
test("certes -> cert", function() {deepEqual( Stem("certes"), "cert");});
test("certi -> cert", function() {deepEqual( Stem("certi"), "cert");});
test("certificat -> certificat", function() {deepEqual( Stem("certificat"), "certificat");});
test("certificats -> certificat", function() {deepEqual( Stem("certificats"), "certificat");});
test("certifiera -> certifi", function() {deepEqual( Stem("certifiera"), "certifi");});
test("certitude -> certitud", function() {deepEqual( Stem("certitude"), "certitud");});
test("certitudes -> certitud", function() {deepEqual( Stem("certitudes"), "certitud");});
test("cerveau -> cerveau", function() {deepEqual( Stem("cerveau"), "cerveau");});
test("cervelle -> cervel", function() {deepEqual( Stem("cervelle"), "cervel");});
test("ces -> ce", function() {deepEqual( Stem("ces"), "ce");});
test("césar -> césar", function() {deepEqual( Stem("césar"), "césar");});
test("cesare -> cesar", function() {deepEqual( Stem("cesare"), "cesar");});
test("cessa -> cess", function() {deepEqual( Stem("cessa"), "cess");});
test("cessaient -> cess", function() {deepEqual( Stem("cessaient"), "cess");});
test("cessait -> cess", function() {deepEqual( Stem("cessait"), "cess");});
test("cessant -> cess", function() {deepEqual( Stem("cessant"), "cess");});
test("cessante -> cess", function() {deepEqual( Stem("cessante"), "cess");});
test("cessation -> cessat", function() {deepEqual( Stem("cessation"), "cessat");});
test("cesse -> cess", function() {deepEqual( Stem("cesse"), "cess");});
test("cessé -> cess", function() {deepEqual( Stem("cessé"), "cess");});
test("cesser -> cess", function() {deepEqual( Stem("cesser"), "cess");});
test("cessera -> cess", function() {deepEqual( Stem("cessera"), "cess");});
test("cesserais -> cess", function() {deepEqual( Stem("cesserais"), "cess");});
test("cesseras -> cess", function() {deepEqual( Stem("cesseras"), "cess");});
test("cessèrent -> cess", function() {deepEqual( Stem("cessèrent"), "cess");});
test("cesseront -> cess", function() {deepEqual( Stem("cesseront"), "cess");});
test("cessiez -> cess", function() {deepEqual( Stem("cessiez"), "cess");});
test("cessions -> cession", function() {deepEqual( Stem("cessions"), "cession");});
test("cet -> cet", function() {deepEqual( Stem("cet"), "cet");});
test("cette -> cet", function() {deepEqual( Stem("cette"), "cet");});
test("ceux -> ceux", function() {deepEqual( Stem("ceux"), "ceux");});
test("ceylan -> ceylan", function() {deepEqual( Stem("ceylan"), "ceylan");});
test("ceylandais -> ceyland", function() {deepEqual( Stem("ceylandais"), "ceyland");});
test("chacun -> chacun", function() {deepEqual( Stem("chacun"), "chacun");});
test("chacune -> chacun", function() {deepEqual( Stem("chacune"), "chacun");});
test("chagrin -> chagrin", function() {deepEqual( Stem("chagrin"), "chagrin");});
test("chagrine -> chagrin", function() {deepEqual( Stem("chagrine"), "chagrin");});
test("chagriner -> chagrin", function() {deepEqual( Stem("chagriner"), "chagrin");});
test("chagrins -> chagrin", function() {deepEqual( Stem("chagrins"), "chagrin");});
test("chaîne -> chaîn", function() {deepEqual( Stem("chaîne"), "chaîn");});
test("chaînes -> chaîn", function() {deepEqual( Stem("chaînes"), "chaîn");});
test("chaînon -> chaînon", function() {deepEqual( Stem("chaînon"), "chaînon");});
test("chaînons -> chaînon", function() {deepEqual( Stem("chaînons"), "chaînon");});
test("chair -> chair", function() {deepEqual( Stem("chair"), "chair");});
test("chaire -> chair", function() {deepEqual( Stem("chaire"), "chair");});
test("chaise -> chais", function() {deepEqual( Stem("chaise"), "chais");});
test("chaises -> chais", function() {deepEqual( Stem("chaises"), "chais");});
test("chalands -> chaland", function() {deepEqual( Stem("chalands"), "chaland");});
test("châle -> châl", function() {deepEqual( Stem("châle"), "châl");});
test("chaleur -> chaleur", function() {deepEqual( Stem("chaleur"), "chaleur");});
test("chaleurs -> chaleur", function() {deepEqual( Stem("chaleurs"), "chaleur");});
test("châlon -> châlon", function() {deepEqual( Stem("châlon"), "châlon");});
test("châlons -> châlon", function() {deepEqual( Stem("châlons"), "châlon");});
test("chalvet -> chalvet", function() {deepEqual( Stem("chalvet"), "chalvet");});
test("chamarrées -> chamarr", function() {deepEqual( Stem("chamarrées"), "chamarr");});
test("chamarrés -> chamarr", function() {deepEqual( Stem("chamarrés"), "chamarr");});
test("chambellan -> chambellan", function() {deepEqual( Stem("chambellan"), "chambellan");});
test("chambellans -> chambellan", function() {deepEqual( Stem("chambellans"), "chambellan");});
test("chambranle -> chambranl", function() {deepEqual( Stem("chambranle"), "chambranl");});
test("chambre -> chambr", function() {deepEqual( Stem("chambre"), "chambr");});
test("chambres -> chambr", function() {deepEqual( Stem("chambres"), "chambr");});
test("chambrette -> chambret", function() {deepEqual( Stem("chambrette"), "chambret");});
test("chameau -> chameau", function() {deepEqual( Stem("chameau"), "chameau");});
test("champ -> champ", function() {deepEqual( Stem("champ"), "champ");});
test("champagne -> champagn", function() {deepEqual( Stem("champagne"), "champagn");});
test("champêtre -> champêtr", function() {deepEqual( Stem("champêtre"), "champêtr");});
test("champions -> champion", function() {deepEqual( Stem("champions"), "champion");});
test("champs -> champ", function() {deepEqual( Stem("champs"), "champ");});
test("chance -> chanc", function() {deepEqual( Stem("chance"), "chanc");});
test("chancelant -> chancel", function() {deepEqual( Stem("chancelant"), "chancel");});
test("chancelier -> chanceli", function() {deepEqual( Stem("chancelier"), "chanceli");});
test("chancellerie -> chanceller", function() {deepEqual( Stem("chancellerie"), "chanceller");});
test("chances -> chanc", function() {deepEqual( Stem("chances"), "chanc");});
test("chanceux -> chanceux", function() {deepEqual( Stem("chanceux"), "chanceux");});
test("chandelle -> chandel", function() {deepEqual( Stem("chandelle"), "chandel");});
test("chandernagor -> chandernagor", function() {deepEqual( Stem("chandernagor"), "chandernagor");});
test("change -> chang", function() {deepEqual( Stem("change"), "chang");});
test("changé -> chang", function() {deepEqual( Stem("changé"), "chang");});
test("changea -> chang", function() {deepEqual( Stem("changea"), "chang");});
test("changeaient -> chang", function() {deepEqual( Stem("changeaient"), "chang");});
test("changeait -> chang", function() {deepEqual( Stem("changeait"), "chang");});
test("changeant -> chang", function() {deepEqual( Stem("changeant"), "chang");});
test("changeante -> chang", function() {deepEqual( Stem("changeante"), "chang");});
test("changeants -> chang", function() {deepEqual( Stem("changeants"), "chang");});
test("changée -> chang", function() {deepEqual( Stem("changée"), "chang");});
test("changement -> chang", function() {deepEqual( Stem("changement"), "chang");});
test("changements -> chang", function() {deepEqual( Stem("changements"), "chang");});
test("changent -> changent", function() {deepEqual( Stem("changent"), "changent");});
test("changer -> chang", function() {deepEqual( Stem("changer"), "chang");});
test("changerait -> chang", function() {deepEqual( Stem("changerait"), "chang");});
test("changèrent -> chang", function() {deepEqual( Stem("changèrent"), "chang");});
test("changeront -> chang", function() {deepEqual( Stem("changeront"), "chang");});
test("changés -> chang", function() {deepEqual( Stem("changés"), "chang");});
test("chanoine -> chanoin", function() {deepEqual( Stem("chanoine"), "chanoin");});
test("chanoines -> chanoin", function() {deepEqual( Stem("chanoines"), "chanoin");});
test("chanoinesse -> chanoiness", function() {deepEqual( Stem("chanoinesse"), "chanoiness");});
test("chanson -> chanson", function() {deepEqual( Stem("chanson"), "chanson");});
test("chansons -> chanson", function() {deepEqual( Stem("chansons"), "chanson");});
test("chant -> chant", function() {deepEqual( Stem("chant"), "chant");});
test("chanta -> chant", function() {deepEqual( Stem("chanta"), "chant");});
test("chantai -> chant", function() {deepEqual( Stem("chantai"), "chant");});
test("chantaient -> chant", function() {deepEqual( Stem("chantaient"), "chant");});
test("chantait -> chant", function() {deepEqual( Stem("chantait"), "chant");});
test("chantant -> chant", function() {deepEqual( Stem("chantant"), "chant");});
test("chante -> chant", function() {deepEqual( Stem("chante"), "chant");});
test("chanté -> chant", function() {deepEqual( Stem("chanté"), "chant");});
test("chantée -> chant", function() {deepEqual( Stem("chantée"), "chant");});
test("chanter -> chant", function() {deepEqual( Stem("chanter"), "chant");});
test("chantèrent -> chant", function() {deepEqual( Stem("chantèrent"), "chant");});
test("chantés -> chant", function() {deepEqual( Stem("chantés"), "chant");});
test("chanteur -> chanteur", function() {deepEqual( Stem("chanteur"), "chanteur");});
test("chanteuses -> chanteux", function() {deepEqual( Stem("chanteuses"), "chanteux");});
test("chantiez -> chant", function() {deepEqual( Stem("chantiez"), "chant");});
test("chantonnant -> chanton", function() {deepEqual( Stem("chantonnant"), "chanton");});
test("chants -> chant", function() {deepEqual( Stem("chants"), "chant");});
test("chanvre -> chanvr", function() {deepEqual( Stem("chanvre"), "chanvr");});
test("chaos -> chaos", function() {deepEqual( Stem("chaos"), "chaos");});
test("chap -> chap", function() {deepEqual( Stem("chap"), "chap");});
test("chapeau -> chapeau", function() {deepEqual( Stem("chapeau"), "chapeau");});
test("chapeaux -> chapeau", function() {deepEqual( Stem("chapeaux"), "chapeau");});
test("chapelet -> chapelet", function() {deepEqual( Stem("chapelet"), "chapelet");});
test("chapelle -> chapel", function() {deepEqual( Stem("chapelle"), "chapel");});
test("chapes -> chap", function() {deepEqual( Stem("chapes"), "chap");});
test("chapitre -> chapitr", function() {deepEqual( Stem("chapitre"), "chapitr");});
test("chapitres -> chapitr", function() {deepEqual( Stem("chapitres"), "chapitr");});
test("chapons -> chapon", function() {deepEqual( Stem("chapons"), "chapon");});
test("chaque -> chaqu", function() {deepEqual( Stem("chaque"), "chaqu");});
test("char -> char", function() {deepEqual( Stem("char"), "char");});
test("charade -> charad", function() {deepEqual( Stem("charade"), "charad");});
test("charbon -> charbon", function() {deepEqual( Stem("charbon"), "charbon");});
test("charbonnier -> charbonni", function() {deepEqual( Stem("charbonnier"), "charbonni");});
test("charcot -> charcot", function() {deepEqual( Stem("charcot"), "charcot");});
test("charge -> charg", function() {deepEqual( Stem("charge"), "charg");});
test("chargé -> charg", function() {deepEqual( Stem("chargé"), "charg");});
test("chargea -> charg", function() {deepEqual( Stem("chargea"), "charg");});
test("chargeaient -> charg", function() {deepEqual( Stem("chargeaient"), "charg");});
test("chargeait -> charg", function() {deepEqual( Stem("chargeait"), "charg");});
test("chargeant -> charg", function() {deepEqual( Stem("chargeant"), "charg");});
test("chargée -> charg", function() {deepEqual( Stem("chargée"), "charg");});
test("chargées -> charg", function() {deepEqual( Stem("chargées"), "charg");});
test("chargement -> charg", function() {deepEqual( Stem("chargement"), "charg");});
test("charger -> charg", function() {deepEqual( Stem("charger"), "charg");});
test("chargera -> charg", function() {deepEqual( Stem("chargera"), "charg");});
test("chargerais -> charg", function() {deepEqual( Stem("chargerais"), "charg");});
test("chargerait -> charg", function() {deepEqual( Stem("chargerait"), "charg");});
test("chargèrent -> charg", function() {deepEqual( Stem("chargèrent"), "charg");});
test("charges -> charg", function() {deepEqual( Stem("charges"), "charg");});
test("chargés -> charg", function() {deepEqual( Stem("chargés"), "charg");});
test("chargez -> charg", function() {deepEqual( Stem("chargez"), "charg");});
test("charing -> charing", function() {deepEqual( Stem("charing"), "charing");});
test("charitable -> charit", function() {deepEqual( Stem("charitable"), "charit");});
test("charité -> charit", function() {deepEqual( Stem("charité"), "charit");});
test("charlatanisme -> charlatan", function() {deepEqual( Stem("charlatanisme"), "charlatan");});
test("charlatans -> charlatan", function() {deepEqual( Stem("charlatans"), "charlatan");});
test("charlemagne -> charlemagn", function() {deepEqual( Stem("charlemagne"), "charlemagn");});
test("charleroi -> charleroi", function() {deepEqual( Stem("charleroi"), "charleroi");});
test("charles -> charl", function() {deepEqual( Stem("charles"), "charl");});
test("charlotte -> charlott", function() {deepEqual( Stem("charlotte"), "charlott");});
test("charma -> charm", function() {deepEqual( Stem("charma"), "charm");});
test("charmant -> charm", function() {deepEqual( Stem("charmant"), "charm");});
test("charmante -> charm", function() {deepEqual( Stem("charmante"), "charm");});
test("charmantes -> charm", function() {deepEqual( Stem("charmantes"), "charm");});
test("charmants -> charm", function() {deepEqual( Stem("charmants"), "charm");});
test("charme -> charm", function() {deepEqual( Stem("charme"), "charm");});
test("charmé -> charm", function() {deepEqual( Stem("charmé"), "charm");});
test("charmée -> charm", function() {deepEqual( Stem("charmée"), "charm");});
test("charmer -> charm", function() {deepEqual( Stem("charmer"), "charm");});
test("charmes -> charm", function() {deepEqual( Stem("charmes"), "charm");});
test("charmier -> charmi", function() {deepEqual( Stem("charmier"), "charmi");});
test("charpente -> charpent", function() {deepEqual( Stem("charpente"), "charpent");});
test("charpentier -> charpenti", function() {deepEqual( Stem("charpentier"), "charpenti");});
test("charrette -> charret", function() {deepEqual( Stem("charrette"), "charret");});
test("charrettes -> charret", function() {deepEqual( Stem("charrettes"), "charret");});
test("charron -> charron", function() {deepEqual( Stem("charron"), "charron");});
test("charrues -> charru", function() {deepEqual( Stem("charrues"), "charru");});
test("chars -> char", function() {deepEqual( Stem("chars"), "char");});
test("charte -> chart", function() {deepEqual( Stem("charte"), "chart");});
test("chartreuse -> chartreux", function() {deepEqual( Stem("chartreuse"), "chartreux");});
test("chartreux -> chartreux", function() {deepEqual( Stem("chartreux"), "chartreux");});
test("chas -> chas", function() {deepEqual( Stem("chas"), "chas");});
test("chassa -> chass", function() {deepEqual( Stem("chassa"), "chass");});
test("chassaient -> chass", function() {deepEqual( Stem("chassaient"), "chass");});
test("chassait -> chass", function() {deepEqual( Stem("chassait"), "chass");});
test("chassant -> chass", function() {deepEqual( Stem("chassant"), "chass");});
test("chasse -> chass", function() {deepEqual( Stem("chasse"), "chass");});
test("châsse -> châss", function() {deepEqual( Stem("châsse"), "châss");});
test("chassé -> chass", function() {deepEqual( Stem("chassé"), "chass");});
test("chassée -> chass", function() {deepEqual( Stem("chassée"), "chass");});
test("chassent -> chassent", function() {deepEqual( Stem("chassent"), "chassent");});
test("chasser -> chass", function() {deepEqual( Stem("chasser"), "chass");});
test("chassera -> chass", function() {deepEqual( Stem("chassera"), "chass");});
test("chassés -> chass", function() {deepEqual( Stem("chassés"), "chass");});
test("chasseur -> chasseur", function() {deepEqual( Stem("chasseur"), "chasseur");});
test("chasseurs -> chasseur", function() {deepEqual( Stem("chasseurs"), "chasseur");});
test("chassez -> chass", function() {deepEqual( Stem("chassez"), "chass");});
test("châssis -> châss", function() {deepEqual( Stem("châssis"), "châss");});
test("chasuble -> chasubl", function() {deepEqual( Stem("chasuble"), "chasubl");});
test("chasubles -> chasubl", function() {deepEqual( Stem("chasubles"), "chasubl");});
test("chat -> chat", function() {deepEqual( Stem("chat"), "chat");});
test("châtaignes -> châtaign", function() {deepEqual( Stem("châtaignes"), "châtaign");});
test("châtaignier -> châtaigni", function() {deepEqual( Stem("châtaignier"), "châtaigni");});
test("châtaigniers -> châtaigni", function() {deepEqual( Stem("châtaigniers"), "châtaigni");});
test("châtain -> châtain", function() {deepEqual( Stem("châtain"), "châtain");});
test("châtains -> châtain", function() {deepEqual( Stem("châtains"), "châtain");});
test("château -> château", function() {deepEqual( Stem("château"), "château");});
test("châteaux -> château", function() {deepEqual( Stem("châteaux"), "château");});
test("châtier -> châti", function() {deepEqual( Stem("châtier"), "châti");});
test("châtiment -> chât", function() {deepEqual( Stem("châtiment"), "chât");});
test("chatouillement -> chatouill", function() {deepEqual( Stem("chatouillement"), "chatouill");});
test("chatouilleuse -> chatouill", function() {deepEqual( Stem("chatouilleuse"), "chatouill");});
test("chats -> chat", function() {deepEqual( Stem("chats"), "chat");});
test("chaud -> chaud", function() {deepEqual( Stem("chaud"), "chaud");});
test("chaude -> chaud", function() {deepEqual( Stem("chaude"), "chaud");});
test("chaudement -> chaud", function() {deepEqual( Stem("chaudement"), "chaud");});
test("chaudes -> chaud", function() {deepEqual( Stem("chaudes"), "chaud");});
test("chaudière -> chaudi", function() {deepEqual( Stem("chaudière"), "chaudi");});
test("chaudières -> chaudi", function() {deepEqual( Stem("chaudières"), "chaudi");});
test("chauffage -> chauffag", function() {deepEqual( Stem("chauffage"), "chauffag");});
test("chauffaient -> chauff", function() {deepEqual( Stem("chauffaient"), "chauff");});
test("chauffé -> chauff", function() {deepEqual( Stem("chauffé"), "chauff");});
test("chauffée -> chauff", function() {deepEqual( Stem("chauffée"), "chauff");});
test("chauffer -> chauff", function() {deepEqual( Stem("chauffer"), "chauff");});
test("chauffeur -> chauffeur", function() {deepEqual( Stem("chauffeur"), "chauffeur");});
test("chauffeurs -> chauffeur", function() {deepEqual( Stem("chauffeurs"), "chauffeur");});
test("chauffez -> chauff", function() {deepEqual( Stem("chauffez"), "chauff");});
test("chauffons -> chauffon", function() {deepEqual( Stem("chauffons"), "chauffon");});
test("chaulnes -> chauln", function() {deepEqual( Stem("chaulnes"), "chauln");});
test("chaume -> chaum", function() {deepEqual( Stem("chaume"), "chaum");});
test("chaumière -> chaumi", function() {deepEqual( Stem("chaumière"), "chaumi");});
test("chaumières -> chaumi", function() {deepEqual( Stem("chaumières"), "chaumi");});
test("chaussa -> chauss", function() {deepEqual( Stem("chaussa"), "chauss");});
test("chaussé -> chauss", function() {deepEqual( Stem("chaussé"), "chauss");});
test("chaussée -> chauss", function() {deepEqual( Stem("chaussée"), "chauss");});
test("chaussés -> chauss", function() {deepEqual( Stem("chaussés"), "chauss");});
test("chaussettes -> chausset", function() {deepEqual( Stem("chaussettes"), "chausset");});
test("chaussure -> chaussur", function() {deepEqual( Stem("chaussure"), "chaussur");});
test("chaussures -> chaussur", function() {deepEqual( Stem("chaussures"), "chaussur");});
test("chauve -> chauv", function() {deepEqual( Stem("chauve"), "chauv");});
test("chaux -> chaux", function() {deepEqual( Stem("chaux"), "chaux");});
test("chavira -> chav", function() {deepEqual( Stem("chavira"), "chav");});
test("chavirer -> chavir", function() {deepEqual( Stem("chavirer"), "chavir");});
test("chazel -> chazel", function() {deepEqual( Stem("chazel"), "chazel");});
test("che -> che", function() {deepEqual( Stem("che"), "che");});
test("chef -> chef", function() {deepEqual( Stem("chef"), "chef");});
test("chefs -> chef", function() {deepEqual( Stem("chefs"), "chef");});
test("chekina -> chekin", function() {deepEqual( Stem("chekina"), "chekin");});
test("chékina -> chékin", function() {deepEqual( Stem("chékina"), "chékin");});
test("chélan -> chélan", function() {deepEqual( Stem("chélan"), "chélan");});
test("chelem -> chelem", function() {deepEqual( Stem("chelem"), "chelem");});
test("chelles -> chel", function() {deepEqual( Stem("chelles"), "chel");});
test("chemin -> chemin", function() {deepEqual( Stem("chemin"), "chemin");});
test("cheminant -> chemin", function() {deepEqual( Stem("cheminant"), "chemin");});
test("cheminée -> chemin", function() {deepEqual( Stem("cheminée"), "chemin");});
test("cheminées -> chemin", function() {deepEqual( Stem("cheminées"), "chemin");});
test("chemins -> chemin", function() {deepEqual( Stem("chemins"), "chemin");});
test("chemise -> chemis", function() {deepEqual( Stem("chemise"), "chemis");});
test("chemises -> chemis", function() {deepEqual( Stem("chemises"), "chemis");});
test("chêne -> chên", function() {deepEqual( Stem("chêne"), "chên");});
test("chênes -> chên", function() {deepEqual( Stem("chênes"), "chên");});
test("chènevière -> chènevi", function() {deepEqual( Stem("chènevière"), "chènevi");});
test("chenu -> chenu", function() {deepEqual( Stem("chenu"), "chenu");});
test("chèque -> chequ", function() {deepEqual( Stem("chèque"), "chequ");});
test("chèques -> chequ", function() {deepEqual( Stem("chèques"), "chequ");});
test("cher -> cher", function() {deepEqual( Stem("cher"), "cher");});
test("chercha -> cherch", function() {deepEqual( Stem("chercha"), "cherch");});
test("cherchaient -> cherch", function() {deepEqual( Stem("cherchaient"), "cherch");});
test("cherchais -> cherch", function() {deepEqual( Stem("cherchais"), "cherch");});
test("cherchait -> cherch", function() {deepEqual( Stem("cherchait"), "cherch");});
test("cherchant -> cherch", function() {deepEqual( Stem("cherchant"), "cherch");});
test("cherche -> cherch", function() {deepEqual( Stem("cherche"), "cherch");});
test("cherché -> cherch", function() {deepEqual( Stem("cherché"), "cherch");});
test("cherchée -> cherch", function() {deepEqual( Stem("cherchée"), "cherch");});
test("cherchent -> cherchent", function() {deepEqual( Stem("cherchent"), "cherchent");});
test("chercher -> cherch", function() {deepEqual( Stem("chercher"), "cherch");});
test("cherchera -> cherch", function() {deepEqual( Stem("cherchera"), "cherch");});
test("chercherai -> cherch", function() {deepEqual( Stem("chercherai"), "cherch");});
test("chercherait -> cherch", function() {deepEqual( Stem("chercherait"), "cherch");});
test("cherchèrent -> cherch", function() {deepEqual( Stem("cherchèrent"), "cherch");});
test("chercherez -> cherch", function() {deepEqual( Stem("chercherez"), "cherch");});
test("cherches -> cherch", function() {deepEqual( Stem("cherches"), "cherch");});
test("cherchez -> cherch", function() {deepEqual( Stem("cherchez"), "cherch");});
test("cherchons -> cherchon", function() {deepEqual( Stem("cherchons"), "cherchon");});
test("chère -> cher", function() {deepEqual( Stem("chère"), "cher");});
test("chèrement -> cher", function() {deepEqual( Stem("chèrement"), "cher");});
test("chères -> cher", function() {deepEqual( Stem("chères"), "cher");});
test("chéri -> cher", function() {deepEqual( Stem("chéri"), "cher");});
test("chérie -> cher", function() {deepEqual( Stem("chérie"), "cher");});
test("chérir -> cher", function() {deepEqual( Stem("chérir"), "cher");});
test("chéris -> cher", function() {deepEqual( Stem("chéris"), "cher");});
test("chers -> cher", function() {deepEqual( Stem("chers"), "cher");});
test("chester -> chest", function() {deepEqual( Stem("chester"), "chest");});
test("chétif -> chétif", function() {deepEqual( Stem("chétif"), "chétif");});
test("chétifs -> chétif", function() {deepEqual( Stem("chétifs"), "chétif");});
test("chétive -> chétiv", function() {deepEqual( Stem("chétive"), "chétiv");});
test("cheval -> cheval", function() {deepEqual( Stem("cheval"), "cheval");});
test("chevaleresque -> chevaleresqu", function() {deepEqual( Stem("chevaleresque"), "chevaleresqu");});
test("chevalerie -> chevaler", function() {deepEqual( Stem("chevalerie"), "chevaler");});
test("chevalier -> chevali", function() {deepEqual( Stem("chevalier"), "chevali");});
test("chevaliers -> chevali", function() {deepEqual( Stem("chevaliers"), "chevali");});
test("chevaux -> cheval", function() {deepEqual( Stem("chevaux"), "cheval");});
test("chevelure -> chevelur", function() {deepEqual( Stem("chevelure"), "chevelur");});
test("chevet -> chevet", function() {deepEqual( Stem("chevet"), "chevet");});
test("cheveu -> cheveu", function() {deepEqual( Stem("cheveu"), "cheveu");});
test("cheveux -> cheveux", function() {deepEqual( Stem("cheveux"), "cheveux");});
test("chèvrefeuilles -> chèvrefeuill", function() {deepEqual( Stem("chèvrefeuilles"), "chèvrefeuill");});
test("chèvres -> chevr", function() {deepEqual( Stem("chèvres"), "chevr");});
test("chevreuse -> chevreux", function() {deepEqual( Stem("chevreuse"), "chevreux");});
test("cheyenne -> cheyen", function() {deepEqual( Stem("cheyenne"), "cheyen");});
test("chez -> chez", function() {deepEqual( Stem("chez"), "chez");});
test("chiaramonti -> chiaramont", function() {deepEqual( Stem("chiaramonti"), "chiaramont");});
test("chicago -> chicago", function() {deepEqual( Stem("chicago"), "chicago");});
test("chicorée -> chicor", function() {deepEqual( Stem("chicorée"), "chicor");});
test("chien -> chien", function() {deepEqual( Stem("chien"), "chien");});
test("chiens -> chien", function() {deepEqual( Stem("chiens"), "chien");});
test("chiffonna -> chiffon", function() {deepEqual( Stem("chiffonna"), "chiffon");});
test("chiffonnait -> chiffon", function() {deepEqual( Stem("chiffonnait"), "chiffon");});
test("chiffons -> chiffon", function() {deepEqual( Stem("chiffons"), "chiffon");});
test("chiffre -> chiffr", function() {deepEqual( Stem("chiffre"), "chiffr");});
test("chiffrée -> chiffr", function() {deepEqual( Stem("chiffrée"), "chiffr");});
test("chiffrées -> chiffr", function() {deepEqual( Stem("chiffrées"), "chiffr");});
test("chiffrer -> chiffr", function() {deepEqual( Stem("chiffrer"), "chiffr");});
test("chiffres -> chiffr", function() {deepEqual( Stem("chiffres"), "chiffr");});
test("chili -> chil", function() {deepEqual( Stem("chili"), "chil");});
test("chimère -> chimer", function() {deepEqual( Stem("chimère"), "chimer");});
test("chimères -> chimer", function() {deepEqual( Stem("chimères"), "chimer");});
test("chimériques -> chimer", function() {deepEqual( Stem("chimériques"), "chimer");});
test("china -> chin", function() {deepEqual( Stem("china"), "chin");});
test("chine -> chin", function() {deepEqual( Stem("chine"), "chin");});
test("chinois -> chinois", function() {deepEqual( Stem("chinois"), "chinois");});
test("chinoise -> chinois", function() {deepEqual( Stem("chinoise"), "chinois");});
test("chinoises -> chinois", function() {deepEqual( Stem("chinoises"), "chinois");});
test("chiper -> chip", function() {deepEqual( Stem("chiper"), "chip");});
test("chiperait -> chip", function() {deepEqual( Stem("chiperait"), "chip");});
test("chirurgicales -> chirurgical", function() {deepEqual( Stem("chirurgicales"), "chirurgical");});
test("chirurgie -> chirurg", function() {deepEqual( Stem("chirurgie"), "chirurg");});
test("chirurgien -> chirurgien", function() {deepEqual( Stem("chirurgien"), "chirurgien");});
test("chlemm -> chlemm", function() {deepEqual( Stem("chlemm"), "chlemm");});
test("choc -> choc", function() {deepEqual( Stem("choc"), "choc");});
test("chocolat -> chocolat", function() {deepEqual( Stem("chocolat"), "chocolat");});
test("choeur -> choeur", function() {deepEqual( Stem("choeur"), "choeur");});
test("choeurs -> choeur", function() {deepEqual( Stem("choeurs"), "choeur");});
test("choisi -> chois", function() {deepEqual( Stem("choisi"), "chois");});
test("choisie -> chois", function() {deepEqual( Stem("choisie"), "chois");});
test("choisies -> chois", function() {deepEqual( Stem("choisies"), "chois");});
test("choisir -> chois", function() {deepEqual( Stem("choisir"), "chois");});
test("choisirai -> chois", function() {deepEqual( Stem("choisirai"), "chois");});
test("choisirez -> chois", function() {deepEqual( Stem("choisirez"), "chois");});
test("choisis -> chois", function() {deepEqual( Stem("choisis"), "chois");});
test("choisissait -> chois", function() {deepEqual( Stem("choisissait"), "chois");});
test("choisissez -> chois", function() {deepEqual( Stem("choisissez"), "chois");});
test("choisit -> chois", function() {deepEqual( Stem("choisit"), "chois");});
test("choix -> choix", function() {deepEqual( Stem("choix"), "choix");});
test("cholin -> cholin", function() {deepEqual( Stem("cholin"), "cholin");});
test("choqua -> choqu", function() {deepEqual( Stem("choqua"), "choqu");});
test("choquait -> choqu", function() {deepEqual( Stem("choquait"), "choqu");});
test("choquante -> choqu", function() {deepEqual( Stem("choquante"), "choqu");});
test("choque -> choqu", function() {deepEqual( Stem("choque"), "choqu");});
test("choqué -> choqu", function() {deepEqual( Stem("choqué"), "choqu");});
test("choquée -> choqu", function() {deepEqual( Stem("choquée"), "choqu");});
test("choquer -> choqu", function() {deepEqual( Stem("choquer"), "choqu");});
test("choquera -> choqu", function() {deepEqual( Stem("choquera"), "choqu");});
test("choqueraient -> choqu", function() {deepEqual( Stem("choqueraient"), "choqu");});
test("choquèrent -> choqu", function() {deepEqual( Stem("choquèrent"), "choqu");});
test("choqués -> choqu", function() {deepEqual( Stem("choqués"), "choqu");});
test("chorus -> chorus", function() {deepEqual( Stem("chorus"), "chorus");});
test("chose -> chos", function() {deepEqual( Stem("chose"), "chos");});
test("choses -> chos", function() {deepEqual( Stem("choses"), "chos");});
test("chouart -> chouart", function() {deepEqual( Stem("chouart"), "chouart");});
test("choucroute -> choucrout", function() {deepEqual( Stem("choucroute"), "choucrout");});
test("choyé -> choi", function() {deepEqual( Stem("choyé"), "choi");});
test("chrétien -> chrétien", function() {deepEqual( Stem("chrétien"), "chrétien");});
test("chrétienne -> chrétien", function() {deepEqual( Stem("chrétienne"), "chrétien");});
test("chrétiennes -> chrétien", function() {deepEqual( Stem("chrétiennes"), "chrétien");});
test("chrétiens -> chrétien", function() {deepEqual( Stem("chrétiens"), "chrétien");});
test("christ -> christ", function() {deepEqual( Stem("christ"), "christ");});
test("christianisme -> christian", function() {deepEqual( Stem("christianisme"), "christian");});
test("chromatique -> chromat", function() {deepEqual( Stem("chromatique"), "chromat");});
test("chronicle -> chronicl", function() {deepEqual( Stem("chronicle"), "chronicl");});
test("chronique -> chroniqu", function() {deepEqual( Stem("chronique"), "chroniqu");});
test("chronomètre -> chronometr", function() {deepEqual( Stem("chronomètre"), "chronometr");});
test("chronomètres -> chronometr", function() {deepEqual( Stem("chronomètres"), "chronometr");});
test("chronométriquement -> chronometr", function() {deepEqual( Stem("chronométriquement"), "chronometr");});
test("chunar -> chunar", function() {deepEqual( Stem("chunar"), "chunar");});
test("chut -> chut", function() {deepEqual( Stem("chut"), "chut");});
test("chute -> chut", function() {deepEqual( Stem("chute"), "chut");});
test("chuté -> chut", function() {deepEqual( Stem("chuté"), "chut");});
test("chutes -> chut", function() {deepEqual( Stem("chutes"), "chut");});
test("ci -> ci", function() {deepEqual( Stem("ci"), "ci");});
test("ciceri -> cicer", function() {deepEqual( Stem("ciceri"), "cicer");});
test("cicéron -> cicéron", function() {deepEqual( Stem("cicéron"), "cicéron");});
test("cicéronien -> cicéronien", function() {deepEqual( Stem("cicéronien"), "cicéronien");});
test("ciel -> ciel", function() {deepEqual( Stem("ciel"), "ciel");});
test("cierge -> cierg", function() {deepEqual( Stem("cierge"), "cierg");});
test("cierges -> cierg", function() {deepEqual( Stem("cierges"), "cierg");});
test("cieux -> cieux", function() {deepEqual( Stem("cieux"), "cieux");});
test("cigales -> cigal", function() {deepEqual( Stem("cigales"), "cigal");});
test("cigare -> cigar", function() {deepEqual( Stem("cigare"), "cigar");});
test("cigares -> cigar", function() {deepEqual( Stem("cigares"), "cigar");});
test("ciguë -> cigu", function() {deepEqual( Stem("ciguë"), "cigu");});
test("cils -> cil", function() {deepEqual( Stem("cils"), "cil");});
test("cimabué -> cimabu", function() {deepEqual( Stem("cimabué"), "cimabu");});
test("cimarosa -> cimaros", function() {deepEqual( Stem("cimarosa"), "cimaros");});
test("cime -> cim", function() {deepEqual( Stem("cime"), "cim");});
test("cimes -> cim", function() {deepEqual( Stem("cimes"), "cim");});
test("cimetière -> cimeti", function() {deepEqual( Stem("cimetière"), "cimeti");});
test("cinnamome -> cinnamom", function() {deepEqual( Stem("cinnamome"), "cinnamom");});
test("cinq -> cinq", function() {deepEqual( Stem("cinq"), "cinq");});
test("cinquantaine -> cinquantain", function() {deepEqual( Stem("cinquantaine"), "cinquantain");});
test("cinquante -> cinqu", function() {deepEqual( Stem("cinquante"), "cinqu");});
test("cinquantième -> cinquantiem", function() {deepEqual( Stem("cinquantième"), "cinquantiem");});
test("cinquième -> cinquiem", function() {deepEqual( Stem("cinquième"), "cinquiem");});
test("cipayes -> cipay", function() {deepEqual( Stem("cipayes"), "cipay");});
test("circé -> circ", function() {deepEqual( Stem("circé"), "circ");});
test("circonférence -> circonférent", function() {deepEqual( Stem("circonférence"), "circonférent");});
test("circonspection -> circonspect", function() {deepEqual( Stem("circonspection"), "circonspect");});
test("circonstance -> circonst", function() {deepEqual( Stem("circonstance"), "circonst");});
test("circonstances -> circonst", function() {deepEqual( Stem("circonstances"), "circonst");});
test("circonstancié -> circonstanci", function() {deepEqual( Stem("circonstancié"), "circonstanci");});
test("circonvenir -> circonven", function() {deepEqual( Stem("circonvenir"), "circonven");});
test("circula -> circul", function() {deepEqual( Stem("circula"), "circul");});
test("circulaient -> circul", function() {deepEqual( Stem("circulaient"), "circul");});
test("circulaire -> circulair", function() {deepEqual( Stem("circulaire"), "circulair");});
test("circulairement -> circulair", function() {deepEqual( Stem("circulairement"), "circulair");});
test("circulaires -> circulair", function() {deepEqual( Stem("circulaires"), "circulair");});
test("circulant -> circul", function() {deepEqual( Stem("circulant"), "circul");});
test("circulante -> circul", function() {deepEqual( Stem("circulante"), "circul");});
test("circulation -> circul", function() {deepEqual( Stem("circulation"), "circul");});
test("circuler -> circul", function() {deepEqual( Stem("circuler"), "circul");});
test("circulerait -> circul", function() {deepEqual( Stem("circulerait"), "circul");});
test("circumnavigation -> circumnavig", function() {deepEqual( Stem("circumnavigation"), "circumnavig");});
test("cire -> cir", function() {deepEqual( Stem("cire"), "cir");});
test("cirque -> cirqu", function() {deepEqual( Stem("cirque"), "cirqu");});
test("cirques -> cirqu", function() {deepEqual( Stem("cirques"), "cirqu");});
test("cisalpin -> cisalpin", function() {deepEqual( Stem("cisalpin"), "cisalpin");});
test("cisalpine -> cisalpin", function() {deepEqual( Stem("cisalpine"), "cisalpin");});
test("cisco -> cisco", function() {deepEqual( Stem("cisco"), "cisco");});
test("ciseaux -> ciseau", function() {deepEqual( Stem("ciseaux"), "ciseau");});
test("cita -> cit", function() {deepEqual( Stem("cita"), "cit");});
test("citadelle -> citadel", function() {deepEqual( Stem("citadelle"), "citadel");});
test("citaient -> cit", function() {deepEqual( Stem("citaient"), "cit");});
test("citait -> cit", function() {deepEqual( Stem("citait"), "cit");});
test("citant -> cit", function() {deepEqual( Stem("citant"), "cit");});
test("citation -> citat", function() {deepEqual( Stem("citation"), "citat");});
test("citations -> citat", function() {deepEqual( Stem("citations"), "citat");});
test("cite -> cit", function() {deepEqual( Stem("cite"), "cit");});
test("cité -> cit", function() {deepEqual( Stem("cité"), "cit");});
test("citée -> cit", function() {deepEqual( Stem("citée"), "cit");});
test("citer -> cit", function() {deepEqual( Stem("citer"), "cit");});
test("citernes -> citern", function() {deepEqual( Stem("citernes"), "citern");});
test("cités -> cit", function() {deepEqual( Stem("cités"), "cit");});
test("citoyen -> citoyen", function() {deepEqual( Stem("citoyen"), "citoyen");});
test("citoyennes -> citoyen", function() {deepEqual( Stem("citoyennes"), "citoyen");});
test("citoyens -> citoyen", function() {deepEqual( Stem("citoyens"), "citoyen");});
test("citronnier -> citronni", function() {deepEqual( Stem("citronnier"), "citronni");});
test("city -> city", function() {deepEqual( Stem("city"), "city");});
test("civil -> civil", function() {deepEqual( Stem("civil"), "civil");});
test("civile -> civil", function() {deepEqual( Stem("civile"), "civil");});
test("civilisation -> civilis", function() {deepEqual( Stem("civilisation"), "civilis");});
test("civilisées -> civilis", function() {deepEqual( Stem("civilisées"), "civilis");});
test("civilisés -> civilis", function() {deepEqual( Stem("civilisés"), "civilis");});
test("civils -> civil", function() {deepEqual( Stem("civils"), "civil");});
test("clair -> clair", function() {deepEqual( Stem("clair"), "clair");});
test("claire -> clair", function() {deepEqual( Stem("claire"), "clair");});
test("clairement -> clair", function() {deepEqual( Stem("clairement"), "clair");});
test("claires -> clair", function() {deepEqual( Stem("claires"), "clair");});
test("clairière -> clairi", function() {deepEqual( Stem("clairière"), "clairi");});
test("clairs -> clair", function() {deepEqual( Stem("clairs"), "clair");});
test("clairvoyance -> clairvoi", function() {deepEqual( Stem("clairvoyance"), "clairvoi");});
test("clairvoyant -> clairvoi", function() {deepEqual( Stem("clairvoyant"), "clairvoi");});
test("clairvoyante -> clairvoi", function() {deepEqual( Stem("clairvoyante"), "clairvoi");});
test("clairvoyants -> clairvoi", function() {deepEqual( Stem("clairvoyants"), "clairvoi");});
test("clameurs -> clameur", function() {deepEqual( Stem("clameurs"), "clameur");});
test("clandestin -> clandestin", function() {deepEqual( Stem("clandestin"), "clandestin");});
test("clara -> clar", function() {deepEqual( Stem("clara"), "clar");});
test("claret -> claret", function() {deepEqual( Stem("claret"), "claret");});
test("clarté -> clart", function() {deepEqual( Stem("clarté"), "clart");});
test("classait -> class", function() {deepEqual( Stem("classait"), "class");});
test("classe -> class", function() {deepEqual( Stem("classe"), "class");});
test("classé -> class", function() {deepEqual( Stem("classé"), "class");});
test("classes -> class", function() {deepEqual( Stem("classes"), "class");});
test("classés -> class", function() {deepEqual( Stem("classés"), "class");});
test("clause -> claus", function() {deepEqual( Stem("clause"), "claus");});
test("clayonnage -> clayonnag", function() {deepEqual( Stem("clayonnage"), "clayonnag");});
test("clef -> clef", function() {deepEqual( Stem("clef"), "clef");});
test("clefs -> clef", function() {deepEqual( Stem("clefs"), "clef");});
test("clélia -> cléli", function() {deepEqual( Stem("clélia"), "cléli");});
test("clémence -> clémenc", function() {deepEqual( Stem("clémence"), "clémenc");});
test("clément -> clément", function() {deepEqual( Stem("clément"), "clément");});
test("clerc -> clerc", function() {deepEqual( Stem("clerc"), "clerc");});
test("clercs -> clerc", function() {deepEqual( Stem("clercs"), "clerc");});
test("clergé -> clerg", function() {deepEqual( Stem("clergé"), "clerg");});
test("clignant -> clign", function() {deepEqual( Stem("clignant"), "clign");});
test("climat -> climat", function() {deepEqual( Stem("climat"), "climat");});
test("clin -> clin", function() {deepEqual( Stem("clin"), "clin");});
test("clinquant -> clinqu", function() {deepEqual( Stem("clinquant"), "clinqu");});
test("clippers -> clipper", function() {deepEqual( Stem("clippers"), "clipper");});
test("clique -> cliqu", function() {deepEqual( Stem("clique"), "cliqu");});
test("cliquettes -> cliquet", function() {deepEqual( Stem("cliquettes"), "cliquet");});
test("cloaque -> cloaqu", function() {deepEqual( Stem("cloaque"), "cloaqu");});
test("cloche -> cloch", function() {deepEqual( Stem("cloche"), "cloch");});
test("clocher -> cloch", function() {deepEqual( Stem("clocher"), "cloch");});
test("clochers -> clocher", function() {deepEqual( Stem("clochers"), "clocher");});
test("cloches -> cloch", function() {deepEqual( Stem("cloches"), "cloch");});
test("clochettes -> clochet", function() {deepEqual( Stem("clochettes"), "clochet");});
test("cloître -> cloîtr", function() {deepEqual( Stem("cloître"), "cloîtr");});
test("clopant -> clop", function() {deepEqual( Stem("clopant"), "clop");});
test("clopin -> clopin", function() {deepEqual( Stem("clopin"), "clopin");});
test("clore -> clor", function() {deepEqual( Stem("clore"), "clor");});
test("clos -> clos", function() {deepEqual( Stem("clos"), "clos");});
test("close -> clos", function() {deepEqual( Stem("close"), "clos");});
test("closes -> clos", function() {deepEqual( Stem("closes"), "clos");});
test("clôture -> clôtur", function() {deepEqual( Stem("clôture"), "clôtur");});
test("clou -> clou", function() {deepEqual( Stem("clou"), "clou");});
test("cloua -> clou", function() {deepEqual( Stem("cloua"), "clou");});
test("cloud -> cloud", function() {deepEqual( Stem("cloud"), "cloud");});
test("cloué -> clou", function() {deepEqual( Stem("cloué"), "clou");});
test("clouée -> clou", function() {deepEqual( Stem("clouée"), "clou");});
test("clous -> clous", function() {deepEqual( Stem("clous"), "clous");});
test("cloutier -> clouti", function() {deepEqual( Stem("cloutier"), "clouti");});
test("clown -> clown", function() {deepEqual( Stem("clown"), "clown");});
test("clowns -> clown", function() {deepEqual( Stem("clowns"), "clown");});
test("club -> club", function() {deepEqual( Stem("club"), "club");});
test("co -> co", function() {deepEqual( Stem("co"), "co");});
test("coach -> coach", function() {deepEqual( Stem("coach"), "coach");});
test("coaches -> coach", function() {deepEqual( Stem("coaches"), "coach");});
test("coadjuteur -> coadjuteur", function() {deepEqual( Stem("coadjuteur"), "coadjuteur");});
test("coblentz -> coblentz", function() {deepEqual( Stem("coblentz"), "coblentz");});
test("cocarde -> cocard", function() {deepEqual( Stem("cocarde"), "cocard");});
test("cocher -> coch", function() {deepEqual( Stem("cocher"), "coch");});
test("cochère -> cocher", function() {deepEqual( Stem("cochère"), "cocher");});
test("cochers -> cocher", function() {deepEqual( Stem("cochers"), "cocher");});
test("cochinchine -> cochinchin", function() {deepEqual( Stem("cochinchine"), "cochinchin");});
test("coconasso -> coconasso", function() {deepEqual( Stem("coconasso"), "coconasso");});
test("cocotiers -> cocoti", function() {deepEqual( Stem("cocotiers"), "cocoti");});
test("cocotte -> cocott", function() {deepEqual( Stem("cocotte"), "cocott");});
test("code -> cod", function() {deepEqual( Stem("code"), "cod");});
test("coeur -> coeur", function() {deepEqual( Stem("coeur"), "coeur");});
test("coeurs -> coeur", function() {deepEqual( Stem("coeurs"), "coeur");});
test("coffre -> coffr", function() {deepEqual( Stem("coffre"), "coffr");});
test("coffré -> coffr", function() {deepEqual( Stem("coffré"), "coffr");});
test("coffres -> coffr", function() {deepEqual( Stem("coffres"), "coffr");});
test("cohue -> cohu", function() {deepEqual( Stem("cohue"), "cohu");});
test("coidet -> coidet", function() {deepEqual( Stem("coidet"), "coidet");});
test("coiffa -> coiff", function() {deepEqual( Stem("coiffa"), "coiff");});
test("coiffé -> coiff", function() {deepEqual( Stem("coiffé"), "coiff");});
test("coiffée -> coiff", function() {deepEqual( Stem("coiffée"), "coiff");});
test("coiffés -> coiff", function() {deepEqual( Stem("coiffés"), "coiff");});
test("coiffure -> coiffur", function() {deepEqual( Stem("coiffure"), "coiffur");});
test("coin -> coin", function() {deepEqual( Stem("coin"), "coin");});
test("coïncidence -> coïncident", function() {deepEqual( Stem("coïncidence"), "coïncident");});
test("coins -> coin", function() {deepEqual( Stem("coins"), "coin");});
test("col -> col", function() {deepEqual( Stem("col"), "col");});
test("cola -> col", function() {deepEqual( Stem("cola"), "col");});
test("colaba -> colab", function() {deepEqual( Stem("colaba"), "colab");});
test("coldness -> coldness", function() {deepEqual( Stem("coldness"), "coldness");});
test("colère -> coler", function() {deepEqual( Stem("colère"), "coler");});
test("colères -> coler", function() {deepEqual( Stem("colères"), "coler");});
test("colfax -> colfax", function() {deepEqual( Stem("colfax"), "colfax");});
test("colifichet -> colifichet", function() {deepEqual( Stem("colifichet"), "colifichet");});
test("colimaçon -> colimaçon", function() {deepEqual( Stem("colimaçon"), "colimaçon");});
test("colique -> coliqu", function() {deepEqual( Stem("colique"), "coliqu");});
test("colis -> colis", function() {deepEqual( Stem("colis"), "colis");});
test("collaborateurs -> collabor", function() {deepEqual( Stem("collaborateurs"), "collabor");});
test("collait -> coll", function() {deepEqual( Stem("collait"), "coll");});
test("collants -> coll", function() {deepEqual( Stem("collants"), "coll");});
test("colle -> coll", function() {deepEqual( Stem("colle"), "coll");});
test("collé -> coll", function() {deepEqual( Stem("collé"), "coll");});
test("collecteur -> collecteur", function() {deepEqual( Stem("collecteur"), "collecteur");});
test("collecteurs -> collecteur", function() {deepEqual( Stem("collecteurs"), "collecteur");});
test("collection -> collect", function() {deepEqual( Stem("collection"), "collect");});
test("collège -> colleg", function() {deepEqual( Stem("collège"), "colleg");});
test("collègue -> collègu", function() {deepEqual( Stem("collègue"), "collègu");});
test("collègues -> collègu", function() {deepEqual( Stem("collègues"), "collègu");});
test("coller -> coll", function() {deepEqual( Stem("coller"), "coll");});
test("collés -> coll", function() {deepEqual( Stem("collés"), "coll");});
test("collet -> collet", function() {deepEqual( Stem("collet"), "collet");});
test("collier -> colli", function() {deepEqual( Stem("collier"), "colli");});
test("colliers -> colli", function() {deepEqual( Stem("colliers"), "colli");});
test("colline -> collin", function() {deepEqual( Stem("colline"), "collin");});
test("collines -> collin", function() {deepEqual( Stem("collines"), "collin");});
test("colloque -> colloqu", function() {deepEqual( Stem("colloque"), "colloqu");});
test("colmar -> colmar", function() {deepEqual( Stem("colmar"), "colmar");});
test("colombes -> colomb", function() {deepEqual( Stem("colombes"), "colomb");});
test("colombier -> colombi", function() {deepEqual( Stem("colombier"), "colombi");});
test("colonel -> colonel", function() {deepEqual( Stem("colonel"), "colonel");});
test("colonels -> colonel", function() {deepEqual( Stem("colonels"), "colonel");});
test("colonie -> colon", function() {deepEqual( Stem("colonie"), "colon");});
test("colonisateur -> colonis", function() {deepEqual( Stem("colonisateur"), "colonis");});
test("coloniser -> colonis", function() {deepEqual( Stem("coloniser"), "colonis");});
test("colonnade -> colonnad", function() {deepEqual( Stem("colonnade"), "colonnad");});
test("colonne -> colon", function() {deepEqual( Stem("colonne"), "colon");});
test("colonnes -> colon", function() {deepEqual( Stem("colonnes"), "colon");});
test("colorado -> colorado", function() {deepEqual( Stem("colorado"), "colorado");});
test("coloré -> color", function() {deepEqual( Stem("coloré"), "color");});
test("colorée -> color", function() {deepEqual( Stem("colorée"), "color");});
test("colorié -> colori", function() {deepEqual( Stem("colorié"), "colori");});
test("coloris -> color", function() {deepEqual( Stem("coloris"), "color");});
test("colorno -> colorno", function() {deepEqual( Stem("colorno"), "colorno");});
test("colossal -> colossal", function() {deepEqual( Stem("colossal"), "colossal");});
test("colossale -> colossal", function() {deepEqual( Stem("colossale"), "colossal");});
test("colossales -> colossal", function() {deepEqual( Stem("colossales"), "colossal");});
test("colpa -> colp", function() {deepEqual( Stem("colpa"), "colp");});
test("colt -> colt", function() {deepEqual( Stem("colt"), "colt");});
test("columbus -> columbus", function() {deepEqual( Stem("columbus"), "columbus");});
test("combat -> combat", function() {deepEqual( Stem("combat"), "combat");});
test("combats -> combat", function() {deepEqual( Stem("combats"), "combat");});
test("combattaient -> combatt", function() {deepEqual( Stem("combattaient"), "combatt");});
test("combattants -> combatt", function() {deepEqual( Stem("combattants"), "combatt");});
test("combattis -> combatt", function() {deepEqual( Stem("combattis"), "combatt");});
test("combattit -> combatt", function() {deepEqual( Stem("combattit"), "combatt");});
test("combattre -> combattr", function() {deepEqual( Stem("combattre"), "combattr");});
test("combattu -> combattu", function() {deepEqual( Stem("combattu"), "combattu");});
test("combattue -> combattu", function() {deepEqual( Stem("combattue"), "combattu");});
test("combien -> combien", function() {deepEqual( Stem("combien"), "combien");});
test("combina -> combin", function() {deepEqual( Stem("combina"), "combin");});
test("combinaisons -> combinaison", function() {deepEqual( Stem("combinaisons"), "combinaison");});
test("combinant -> combin", function() {deepEqual( Stem("combinant"), "combin");});
test("combiné -> combin", function() {deepEqual( Stem("combiné"), "combin");});
test("combinés -> combin", function() {deepEqual( Stem("combinés"), "combin");});
test("comble -> combl", function() {deepEqual( Stem("comble"), "combl");});
test("comblé -> combl", function() {deepEqual( Stem("comblé"), "combl");});
test("combler -> combl", function() {deepEqual( Stem("combler"), "combl");});
test("comblerait -> combl", function() {deepEqual( Stem("comblerait"), "combl");});
test("combles -> combl", function() {deepEqual( Stem("combles"), "combl");});
test("combustible -> combustibl", function() {deepEqual( Stem("combustible"), "combustibl");});
test("come -> com", function() {deepEqual( Stem("come"), "com");});
test("côme -> côm", function() {deepEqual( Stem("côme"), "côm");});
test("comédie -> comed", function() {deepEqual( Stem("comédie"), "comed");});
test("comédien -> comédien", function() {deepEqual( Stem("comédien"), "comédien");});
test("comédiens -> comédien", function() {deepEqual( Stem("comédiens"), "comédien");});
test("comédies -> comed", function() {deepEqual( Stem("comédies"), "comed");});
test("comestible -> comestibl", function() {deepEqual( Stem("comestible"), "comestibl");});
test("comestibles -> comestibl", function() {deepEqual( Stem("comestibles"), "comestibl");});
test("comique -> comiqu", function() {deepEqual( Stem("comique"), "comiqu");});
test("comiques -> comiqu", function() {deepEqual( Stem("comiques"), "comiqu");});
test("comité -> comit", function() {deepEqual( Stem("comité"), "comit");});
test("commanda -> command", function() {deepEqual( Stem("commanda"), "command");});
test("commandaient -> command", function() {deepEqual( Stem("commandaient"), "command");});
test("commandait -> command", function() {deepEqual( Stem("commandait"), "command");});
test("commandant -> command", function() {deepEqual( Stem("commandant"), "command");});
test("commande -> command", function() {deepEqual( Stem("commande"), "command");});
test("commandé -> command", function() {deepEqual( Stem("commandé"), "command");});
test("commandée -> command", function() {deepEqual( Stem("commandée"), "command");});
test("commandement -> command", function() {deepEqual( Stem("commandement"), "command");});
test("commandements -> command", function() {deepEqual( Stem("commandements"), "command");});
test("commander -> command", function() {deepEqual( Stem("commander"), "command");});
test("commandera -> command", function() {deepEqual( Stem("commandera"), "command");});
test("commanderez -> command", function() {deepEqual( Stem("commanderez"), "command");});
test("commandons -> commandon", function() {deepEqual( Stem("commandons"), "commandon");});
test("comme -> comm", function() {deepEqual( Stem("comme"), "comm");});
test("commença -> commenc", function() {deepEqual( Stem("commença"), "commenc");});
test("commençai -> commenc", function() {deepEqual( Stem("commençai"), "commenc");});
test("commençaient -> commenc", function() {deepEqual( Stem("commençaient"), "commenc");});
test("commençait -> commenc", function() {deepEqual( Stem("commençait"), "commenc");});
test("commençant -> commenc", function() {deepEqual( Stem("commençant"), "commenc");});
test("commence -> commenc", function() {deepEqual( Stem("commence"), "commenc");});
test("commencé -> commenc", function() {deepEqual( Stem("commencé"), "commenc");});
test("commencée -> commenc", function() {deepEqual( Stem("commencée"), "commenc");});
test("commencement -> commenc", function() {deepEqual( Stem("commencement"), "commenc");});
test("commencements -> commenc", function() {deepEqual( Stem("commencements"), "commenc");});
test("commencent -> commencent", function() {deepEqual( Stem("commencent"), "commencent");});
test("commencer -> commenc", function() {deepEqual( Stem("commencer"), "commenc");});
test("commencera -> commenc", function() {deepEqual( Stem("commencera"), "commenc");});
test("commencerai -> commenc", function() {deepEqual( Stem("commencerai"), "commenc");});
test("commencerait -> commenc", function() {deepEqual( Stem("commencerait"), "commenc");});
test("commencèrent -> commenc", function() {deepEqual( Stem("commencèrent"), "commenc");});
test("commencés -> commenc", function() {deepEqual( Stem("commencés"), "commenc");});
test("commencez -> commenc", function() {deepEqual( Stem("commencez"), "commenc");});
test("commençons -> commençon", function() {deepEqual( Stem("commençons"), "commençon");});
test("commensal -> commensal", function() {deepEqual( Stem("commensal"), "commensal");});
test("comment -> comment", function() {deepEqual( Stem("comment"), "comment");});
test("commentaire -> commentair", function() {deepEqual( Stem("commentaire"), "commentair");});
test("commentaires -> commentair", function() {deepEqual( Stem("commentaires"), "commentair");});
test("commentateurs -> comment", function() {deepEqual( Stem("commentateurs"), "comment");});
test("commentée -> comment", function() {deepEqual( Stem("commentée"), "comment");});
test("commenter -> comment", function() {deepEqual( Stem("commenter"), "comment");});
test("commentés -> comment", function() {deepEqual( Stem("commentés"), "comment");});
test("commerçante -> commerc", function() {deepEqual( Stem("commerçante"), "commerc");});
test("commerçantes -> commerc", function() {deepEqual( Stem("commerçantes"), "commerc");});
test("commerçants -> commerc", function() {deepEqual( Stem("commerçants"), "commerc");});
test("commerce -> commerc", function() {deepEqual( Stem("commerce"), "commerc");});
test("commerciale -> commercial", function() {deepEqual( Stem("commerciale"), "commercial");});
test("commets -> commet", function() {deepEqual( Stem("commets"), "commet");});
test("commette -> commet", function() {deepEqual( Stem("commette"), "commet");});
test("commettent -> commettent", function() {deepEqual( Stem("commettent"), "commettent");});
test("commettra -> commettr", function() {deepEqual( Stem("commettra"), "commettr");});
test("commettrais -> commettr", function() {deepEqual( Stem("commettrais"), "commettr");});
test("commettre -> commettr", function() {deepEqual( Stem("commettre"), "commettr");});
test("commis -> comm", function() {deepEqual( Stem("commis"), "comm");});
test("commise -> commis", function() {deepEqual( Stem("commise"), "commis");});
test("commisération -> commiser", function() {deepEqual( Stem("commisération"), "commiser");});
test("commissaire -> commissair", function() {deepEqual( Stem("commissaire"), "commissair");});
test("commission -> commiss", function() {deepEqual( Stem("commission"), "commiss");});
test("commissions -> comm", function() {deepEqual( Stem("commissions"), "comm");});
test("commit -> comm", function() {deepEqual( Stem("commit"), "comm");});
test("commode -> commod", function() {deepEqual( Stem("commode"), "commod");});
test("commodément -> commod", function() {deepEqual( Stem("commodément"), "commod");});
test("commotion -> commot", function() {deepEqual( Stem("commotion"), "commot");});
test("commuée -> commu", function() {deepEqual( Stem("commuée"), "commu");});
test("commuer -> commu", function() {deepEqual( Stem("commuer"), "commu");});
test("commuera -> commu", function() {deepEqual( Stem("commuera"), "commu");});
test("commun -> commun", function() {deepEqual( Stem("commun"), "commun");});
test("communauté -> communaut", function() {deepEqual( Stem("communauté"), "communaut");});
test("communaux -> communal", function() {deepEqual( Stem("communaux"), "communal");});
test("commune -> commun", function() {deepEqual( Stem("commune"), "commun");});
test("communément -> commun", function() {deepEqual( Stem("communément"), "commun");});
test("communes -> commun", function() {deepEqual( Stem("communes"), "commun");});
test("communicatif -> commun", function() {deepEqual( Stem("communicatif"), "commun");});
test("communication -> commun", function() {deepEqual( Stem("communication"), "commun");});
test("communications -> commun", function() {deepEqual( Stem("communications"), "commun");});
test("communicative -> commun", function() {deepEqual( Stem("communicative"), "commun");});
test("communie -> commun", function() {deepEqual( Stem("communie"), "commun");});
test("communion -> communion", function() {deepEqual( Stem("communion"), "communion");});
test("communiqua -> communiqu", function() {deepEqual( Stem("communiqua"), "communiqu");});
test("communiquaient -> communiqu", function() {deepEqual( Stem("communiquaient"), "communiqu");});
test("communiquait -> communiqu", function() {deepEqual( Stem("communiquait"), "communiqu");});
test("communique -> commun", function() {deepEqual( Stem("communique"), "commun");});
test("communiqué -> communiqu", function() {deepEqual( Stem("communiqué"), "communiqu");});
test("communiquée -> communiqu", function() {deepEqual( Stem("communiquée"), "communiqu");});
test("communiquer -> communiqu", function() {deepEqual( Stem("communiquer"), "communiqu");});
test("communs -> commun", function() {deepEqual( Stem("communs"), "commun");});
test("commutation -> commut", function() {deepEqual( Stem("commutation"), "commut");});
test("compagne -> compagn", function() {deepEqual( Stem("compagne"), "compagn");});
test("compagnie -> compagn", function() {deepEqual( Stem("compagnie"), "compagn");});
test("compagnies -> compagn", function() {deepEqual( Stem("compagnies"), "compagn");});
test("compagnon -> compagnon", function() {deepEqual( Stem("compagnon"), "compagnon");});
test("compagnons -> compagnon", function() {deepEqual( Stem("compagnons"), "compagnon");});
test("compara -> compar", function() {deepEqual( Stem("compara"), "compar");});
test("comparable -> compar", function() {deepEqual( Stem("comparable"), "compar");});
test("comparaient -> compar", function() {deepEqual( Stem("comparaient"), "compar");});
test("comparaison -> comparaison", function() {deepEqual( Stem("comparaison"), "comparaison");});
test("comparait -> compar", function() {deepEqual( Stem("comparait"), "compar");});
test("comparaîtrez -> comparaîtr", function() {deepEqual( Stem("comparaîtrez"), "comparaîtr");});
test("comparant -> compar", function() {deepEqual( Stem("comparant"), "compar");});
test("comparativement -> compar", function() {deepEqual( Stem("comparativement"), "compar");});
test("compare -> compar", function() {deepEqual( Stem("compare"), "compar");});
test("comparé -> compar", function() {deepEqual( Stem("comparé"), "compar");});
test("comparée -> compar", function() {deepEqual( Stem("comparée"), "compar");});
test("comparer -> compar", function() {deepEqual( Stem("comparer"), "compar");});
test("compartiment -> compart", function() {deepEqual( Stem("compartiment"), "compart");});
test("compartiments -> compart", function() {deepEqual( Stem("compartiments"), "compart");});
test("compas -> comp", function() {deepEqual( Stem("compas"), "comp");});
test("compassé -> compass", function() {deepEqual( Stem("compassé"), "compass");});
test("compassées -> compass", function() {deepEqual( Stem("compassées"), "compass");});
test("compatibles -> compatibl", function() {deepEqual( Stem("compatibles"), "compatibl");});
test("compatriote -> compatriot", function() {deepEqual( Stem("compatriote"), "compatriot");});
test("compatriotes -> compatriot", function() {deepEqual( Stem("compatriotes"), "compatriot");});
test("compensation -> compens", function() {deepEqual( Stem("compensation"), "compens");});
test("compense -> compens", function() {deepEqual( Stem("compense"), "compens");});
test("compensé -> compens", function() {deepEqual( Stem("compensé"), "compens");});
test("compenser -> compens", function() {deepEqual( Stem("compenser"), "compens");});
test("compère -> comper", function() {deepEqual( Stem("compère"), "comper");});
test("complaisait -> complais", function() {deepEqual( Stem("complaisait"), "complais");});
test("complaisamment -> complais", function() {deepEqual( Stem("complaisamment"), "complais");});
test("complaisance -> complais", function() {deepEqual( Stem("complaisance"), "complais");});
test("complaisances -> complais", function() {deepEqual( Stem("complaisances"), "complais");});
test("complaisant -> complais", function() {deepEqual( Stem("complaisant"), "complais");});
test("complaisante -> complais", function() {deepEqual( Stem("complaisante"), "complais");});
test("complaisantes -> complais", function() {deepEqual( Stem("complaisantes"), "complais");});
test("complaisants -> complais", function() {deepEqual( Stem("complaisants"), "complais");});
test("complément -> compl", function() {deepEqual( Stem("complément"), "compl");});
test("complet -> complet", function() {deepEqual( Stem("complet"), "complet");});
test("complétaient -> complet", function() {deepEqual( Stem("complétaient"), "complet");});
test("complétait -> complet", function() {deepEqual( Stem("complétait"), "complet");});
test("complète -> complet", function() {deepEqual( Stem("complète"), "complet");});
test("complété -> complet", function() {deepEqual( Stem("complété"), "complet");});
test("complètement -> complet", function() {deepEqual( Stem("complètement"), "complet");});
test("compléter -> complet", function() {deepEqual( Stem("compléter"), "complet");});
test("complètes -> complet", function() {deepEqual( Stem("complètes"), "complet");});
test("complets -> complet", function() {deepEqual( Stem("complets"), "complet");});
test("complication -> compliqu", function() {deepEqual( Stem("complication"), "compliqu");});
test("complice -> complic", function() {deepEqual( Stem("complice"), "complic");});
test("complices -> complic", function() {deepEqual( Stem("complices"), "complic");});
test("complicité -> compliqu", function() {deepEqual( Stem("complicité"), "compliqu");});
test("compliment -> compl", function() {deepEqual( Stem("compliment"), "compl");});
test("complimenté -> compliment", function() {deepEqual( Stem("complimenté"), "compliment");});
test("complimenteur -> complimenteur", function() {deepEqual( Stem("complimenteur"), "complimenteur");});
test("complimenteurs -> complimenteur", function() {deepEqual( Stem("complimenteurs"), "complimenteur");});
test("complimenteuse -> compliment", function() {deepEqual( Stem("complimenteuse"), "compliment");});
test("compliments -> compl", function() {deepEqual( Stem("compliments"), "compl");});
test("complique -> compliqu", function() {deepEqual( Stem("complique"), "compliqu");});
test("compliqué -> compliqu", function() {deepEqual( Stem("compliqué"), "compliqu");});
test("compliquée -> compliqu", function() {deepEqual( Stem("compliquée"), "compliqu");});
test("compliquées -> compliqu", function() {deepEqual( Stem("compliquées"), "compliqu");});
test("compliqués -> compliqu", function() {deepEqual( Stem("compliqués"), "compliqu");});
test("complot -> complot", function() {deepEqual( Stem("complot"), "complot");});
test("componction -> componct", function() {deepEqual( Stem("componction"), "componct");});
test("comporta -> comport", function() {deepEqual( Stem("comporta"), "comport");});
test("comportait -> comport", function() {deepEqual( Stem("comportait"), "comport");});
test("comporte -> comport", function() {deepEqual( Stem("comporte"), "comport");});
test("comporté -> comport", function() {deepEqual( Stem("comporté"), "comport");});
test("comportée -> comport", function() {deepEqual( Stem("comportée"), "comport");});
test("composa -> compos", function() {deepEqual( Stem("composa"), "compos");});
test("composaient -> compos", function() {deepEqual( Stem("composaient"), "compos");});
test("composait -> compos", function() {deepEqual( Stem("composait"), "compos");});
test("composant -> compos", function() {deepEqual( Stem("composant"), "compos");});
test("compose -> compos", function() {deepEqual( Stem("compose"), "compos");});
test("composé -> compos", function() {deepEqual( Stem("composé"), "compos");});
test("composée -> compos", function() {deepEqual( Stem("composée"), "compos");});
test("composées -> compos", function() {deepEqual( Stem("composées"), "compos");});
test("composent -> composent", function() {deepEqual( Stem("composent"), "composent");});
test("composer -> compos", function() {deepEqual( Stem("composer"), "compos");});
test("composition -> composit", function() {deepEqual( Stem("composition"), "composit");});
test("compositions -> composit", function() {deepEqual( Stem("compositions"), "composit");});
test("comprato -> comprato", function() {deepEqual( Stem("comprato"), "comprato");});
test("comprenaient -> compren", function() {deepEqual( Stem("comprenaient"), "compren");});
test("comprenait -> compren", function() {deepEqual( Stem("comprenait"), "compren");});
test("comprenant -> compren", function() {deepEqual( Stem("comprenant"), "compren");});
test("comprend -> comprend", function() {deepEqual( Stem("comprend"), "comprend");});
test("comprendra -> comprendr", function() {deepEqual( Stem("comprendra"), "comprendr");});
test("comprendrai -> comprendr", function() {deepEqual( Stem("comprendrai"), "comprendr");});
test("comprendrait -> comprendr", function() {deepEqual( Stem("comprendrait"), "comprendr");});
test("comprendre -> comprendr", function() {deepEqual( Stem("comprendre"), "comprendr");});
test("comprendrez -> comprendr", function() {deepEqual( Stem("comprendrez"), "comprendr");});
test("comprends -> comprend", function() {deepEqual( Stem("comprends"), "comprend");});
test("comprenez -> compren", function() {deepEqual( Stem("comprenez"), "compren");});
test("comprenne -> compren", function() {deepEqual( Stem("comprenne"), "compren");});
test("comprennent -> comprennent", function() {deepEqual( Stem("comprennent"), "comprennent");});
test("comprimant -> comprim", function() {deepEqual( Stem("comprimant"), "comprim");});
test("comprimées -> comprim", function() {deepEqual( Stem("comprimées"), "comprim");});
test("comprimés -> comprim", function() {deepEqual( Stem("comprimés"), "comprim");});
test("comprirent -> compr", function() {deepEqual( Stem("comprirent"), "compr");});
test("compris -> compr", function() {deepEqual( Stem("compris"), "compr");});
test("comprise -> compris", function() {deepEqual( Stem("comprise"), "compris");});
test("comprit -> compr", function() {deepEqual( Stem("comprit"), "compr");});
test("comprît -> compr", function() {deepEqual( Stem("comprît"), "compr");});
test("compromet -> compromet", function() {deepEqual( Stem("compromet"), "compromet");});
test("compromets -> compromet", function() {deepEqual( Stem("compromets"), "compromet");});
test("compromettait -> compromet", function() {deepEqual( Stem("compromettait"), "compromet");});
test("compromettant -> compromet", function() {deepEqual( Stem("compromettant"), "compromet");});
test("compromettante -> compromet", function() {deepEqual( Stem("compromettante"), "compromet");});
test("compromettantes -> compromet", function() {deepEqual( Stem("compromettantes"), "compromet");});
test("compromette -> compromet", function() {deepEqual( Stem("compromette"), "compromet");});
test("compromettra -> compromettr", function() {deepEqual( Stem("compromettra"), "compromettr");});
test("compromettrais -> compromettr", function() {deepEqual( Stem("compromettrais"), "compromettr");});
test("compromettre -> compromettr", function() {deepEqual( Stem("compromettre"), "compromettr");});
test("compromis -> comprom", function() {deepEqual( Stem("compromis"), "comprom");});
test("compromise -> compromis", function() {deepEqual( Stem("compromise"), "compromis");});
test("compromises -> compromis", function() {deepEqual( Stem("compromises"), "compromis");});
test("compta -> compt", function() {deepEqual( Stem("compta"), "compt");});
test("comptabilité -> comptabl", function() {deepEqual( Stem("comptabilité"), "comptabl");});
test("comptaient -> compt", function() {deepEqual( Stem("comptaient"), "compt");});
test("comptais -> compt", function() {deepEqual( Stem("comptais"), "compt");});
test("comptait -> compt", function() {deepEqual( Stem("comptait"), "compt");});
test("comptant -> compt", function() {deepEqual( Stem("comptant"), "compt");});
test("comptât -> compt", function() {deepEqual( Stem("comptât"), "compt");});
test("compte -> compt", function() {deepEqual( Stem("compte"), "compt");});
test("compté -> compt", function() {deepEqual( Stem("compté"), "compt");});
test("comptées -> compt", function() {deepEqual( Stem("comptées"), "compt");});
test("comptent -> comptent", function() {deepEqual( Stem("comptent"), "comptent");});
test("compter -> compt", function() {deepEqual( Stem("compter"), "compt");});
test("compterai -> compt", function() {deepEqual( Stem("compterai"), "compt");});
test("comptèrent -> compt", function() {deepEqual( Stem("comptèrent"), "compt");});
test("comptes -> compt", function() {deepEqual( Stem("comptes"), "compt");});
test("comptés -> compt", function() {deepEqual( Stem("comptés"), "compt");});
test("comptez -> compt", function() {deepEqual( Stem("comptez"), "compt");});
test("comptiez -> compt", function() {deepEqual( Stem("comptiez"), "compt");});
test("comptoir -> comptoir", function() {deepEqual( Stem("comptoir"), "comptoir");});
test("comptoirs -> comptoir", function() {deepEqual( Stem("comptoirs"), "comptoir");});
test("comptons -> compton", function() {deepEqual( Stem("comptons"), "compton");});
test("comte -> comt", function() {deepEqual( Stem("comte"), "comt");});
test("comté -> comt", function() {deepEqual( Stem("comté"), "comt");});
test("comtes -> comt", function() {deepEqual( Stem("comtes"), "comt");});
test("comtés -> comt", function() {deepEqual( Stem("comtés"), "comt");});
test("comtesse -> comtess", function() {deepEqual( Stem("comtesse"), "comtess");});
test("comtois -> comtois", function() {deepEqual( Stem("comtois"), "comtois");});
test("comtoise -> comtois", function() {deepEqual( Stem("comtoise"), "comtois");});
test("concentré -> concentr", function() {deepEqual( Stem("concentré"), "concentr");});
test("concentrer -> concentr", function() {deepEqual( Stem("concentrer"), "concentr");});
test("concentrés -> concentr", function() {deepEqual( Stem("concentrés"), "concentr");});
test("concernaient -> concern", function() {deepEqual( Stem("concernaient"), "concern");});
test("concernant -> concern", function() {deepEqual( Stem("concernant"), "concern");});
test("concerné -> concern", function() {deepEqual( Stem("concerné"), "concern");});
test("concert -> concert", function() {deepEqual( Stem("concert"), "concert");});
test("concerté -> concert", function() {deepEqual( Stem("concerté"), "concert");});
test("concerts -> concert", function() {deepEqual( Stem("concerts"), "concert");});
test("concession -> concess", function() {deepEqual( Stem("concession"), "concess");});
test("concessions -> concess", function() {deepEqual( Stem("concessions"), "concess");});
test("concevaient -> concev", function() {deepEqual( Stem("concevaient"), "concev");});
test("concevait -> concev", function() {deepEqual( Stem("concevait"), "concev");});
test("concevez -> concev", function() {deepEqual( Stem("concevez"), "concev");});
test("concevoir -> concevoir", function() {deepEqual( Stem("concevoir"), "concevoir");});
test("concierge -> concierg", function() {deepEqual( Stem("concierge"), "concierg");});
test("concilié -> concili", function() {deepEqual( Stem("concilié"), "concili");});
test("concilier -> concili", function() {deepEqual( Stem("concilier"), "concili");});
test("concises -> concis", function() {deepEqual( Stem("concises"), "concis");});
test("concitoyens -> concitoyen", function() {deepEqual( Stem("concitoyens"), "concitoyen");});
test("conclu -> conclu", function() {deepEqual( Stem("conclu"), "conclu");});
test("concluaient -> conclu", function() {deepEqual( Stem("concluaient"), "conclu");});
test("concluantes -> conclu", function() {deepEqual( Stem("concluantes"), "conclu");});
test("concluants -> conclu", function() {deepEqual( Stem("concluants"), "conclu");});
test("conclue -> conclu", function() {deepEqual( Stem("conclue"), "conclu");});
test("conclure -> conclur", function() {deepEqual( Stem("conclure"), "conclur");});
test("conclurent -> conclurent", function() {deepEqual( Stem("conclurent"), "conclurent");});
test("conclusion -> conclus", function() {deepEqual( Stem("conclusion"), "conclus");});
test("conclusions -> conclus", function() {deepEqual( Stem("conclusions"), "conclus");});
test("conclut -> conclut", function() {deepEqual( Stem("conclut"), "conclut");});
test("conçois -> conçois", function() {deepEqual( Stem("conçois"), "conçois");});
test("conçoit -> conçoit", function() {deepEqual( Stem("conçoit"), "conçoit");});
test("concordance -> concord", function() {deepEqual( Stem("concordance"), "concord");});
test("concordant -> concord", function() {deepEqual( Stem("concordant"), "concord");});
test("concordat -> concordat", function() {deepEqual( Stem("concordat"), "concordat");});
test("concourent -> concourent", function() {deepEqual( Stem("concourent"), "concourent");});
test("concours -> concour", function() {deepEqual( Stem("concours"), "concour");});
test("conçu -> conçu", function() {deepEqual( Stem("conçu"), "conçu");});
test("conçue -> conçu", function() {deepEqual( Stem("conçue"), "conçu");});
test("concurrent -> concurrent", function() {deepEqual( Stem("concurrent"), "concurrent");});
test("concurrents -> concurrent", function() {deepEqual( Stem("concurrents"), "concurrent");});
test("conçut -> conçut", function() {deepEqual( Stem("conçut"), "conçut");});
test("condamnable -> condamn", function() {deepEqual( Stem("condamnable"), "condamn");});
test("condamnait -> condamn", function() {deepEqual( Stem("condamnait"), "condamn");});
test("condamnant -> condamn", function() {deepEqual( Stem("condamnant"), "condamn");});
test("condamnation -> condamn", function() {deepEqual( Stem("condamnation"), "condamn");});
test("condamne -> condamn", function() {deepEqual( Stem("condamne"), "condamn");});
test("condamné -> condamn", function() {deepEqual( Stem("condamné"), "condamn");});
test("condamnée -> condamn", function() {deepEqual( Stem("condamnée"), "condamn");});
test("condamnent -> condamnent", function() {deepEqual( Stem("condamnent"), "condamnent");});
test("condamner -> condamn", function() {deepEqual( Stem("condamner"), "condamn");});
test("condamneront -> condamn", function() {deepEqual( Stem("condamneront"), "condamn");});
test("condamnés -> condamn", function() {deepEqual( Stem("condamnés"), "condamn");});
test("condé -> cond", function() {deepEqual( Stem("condé"), "cond");});
test("condescendance -> condescend", function() {deepEqual( Stem("condescendance"), "condescend");});
test("condillac -> condillac", function() {deepEqual( Stem("condillac"), "condillac");});
test("condiments -> cond", function() {deepEqual( Stem("condiments"), "cond");});
test("condition -> condit", function() {deepEqual( Stem("condition"), "condit");});
test("conditionnée -> condition", function() {deepEqual( Stem("conditionnée"), "condition");});
test("conditions -> condit", function() {deepEqual( Stem("conditions"), "condit");});
test("condoléance -> condolé", function() {deepEqual( Stem("condoléance"), "condolé");});
test("conducteur -> conducteur", function() {deepEqual( Stem("conducteur"), "conducteur");});
test("conduira -> conduir", function() {deepEqual( Stem("conduira"), "conduir");});
test("conduirait -> conduir", function() {deepEqual( Stem("conduirait"), "conduir");});
test("conduire -> conduir", function() {deepEqual( Stem("conduire"), "conduir");});
test("conduisaient -> conduis", function() {deepEqual( Stem("conduisaient"), "conduis");});
test("conduisait -> conduis", function() {deepEqual( Stem("conduisait"), "conduis");});
test("conduisant -> conduis", function() {deepEqual( Stem("conduisant"), "conduis");});
test("conduisent -> conduisent", function() {deepEqual( Stem("conduisent"), "conduisent");});
test("conduisez -> conduis", function() {deepEqual( Stem("conduisez"), "conduis");});
test("conduisit -> conduis", function() {deepEqual( Stem("conduisit"), "conduis");});
test("conduit -> conduit", function() {deepEqual( Stem("conduit"), "conduit");});
test("conduite -> conduit", function() {deepEqual( Stem("conduite"), "conduit");});
test("conduites -> conduit", function() {deepEqual( Stem("conduites"), "conduit");});
test("conduits -> conduit", function() {deepEqual( Stem("conduits"), "conduit");});
test("confection -> confect", function() {deepEqual( Stem("confection"), "confect");});
test("confédéré -> conféder", function() {deepEqual( Stem("confédéré"), "conféder");});
test("conférait -> confer", function() {deepEqual( Stem("conférait"), "confer");});
test("conférence -> conférent", function() {deepEqual( Stem("conférence"), "conférent");});
test("conférences -> conférent", function() {deepEqual( Stem("conférences"), "conférent");});
test("conférer -> confer", function() {deepEqual( Stem("conférer"), "confer");});
test("confessant -> confess", function() {deepEqual( Stem("confessant"), "confess");});
test("confesser -> confess", function() {deepEqual( Stem("confesser"), "confess");});
test("confesserai -> confess", function() {deepEqual( Stem("confesserai"), "confess");});
test("confesseur -> confesseur", function() {deepEqual( Stem("confesseur"), "confesseur");});
test("confesseurs -> confesseur", function() {deepEqual( Stem("confesseurs"), "confesseur");});
test("confession -> confess", function() {deepEqual( Stem("confession"), "confess");});
test("confessionnal -> confessionnal", function() {deepEqual( Stem("confessionnal"), "confessionnal");});
test("confessionnaux -> confessionnal", function() {deepEqual( Stem("confessionnaux"), "confessionnal");});
test("confessions -> confess", function() {deepEqual( Stem("confessions"), "confess");});
test("confia -> confi", function() {deepEqual( Stem("confia"), "confi");});
test("confiance -> confianc", function() {deepEqual( Stem("confiance"), "confianc");});
test("confidence -> confident", function() {deepEqual( Stem("confidence"), "confident");});
test("confidences -> confident", function() {deepEqual( Stem("confidences"), "confident");});
test("confident -> confident", function() {deepEqual( Stem("confident"), "confident");});
test("confidente -> confident", function() {deepEqual( Stem("confidente"), "confident");});
test("confié -> confi", function() {deepEqual( Stem("confié"), "confi");});
test("confiée -> confi", function() {deepEqual( Stem("confiée"), "confi");});
test("confiées -> confi", function() {deepEqual( Stem("confiées"), "confi");});
test("confier -> confi", function() {deepEqual( Stem("confier"), "confi");});
test("confiés -> confi", function() {deepEqual( Stem("confiés"), "confi");});
test("confiné -> confin", function() {deepEqual( Stem("confiné"), "confin");});
test("confiner -> confin", function() {deepEqual( Stem("confiner"), "confin");});
test("confirma -> confirm", function() {deepEqual( Stem("confirma"), "confirm");});
test("confirmait -> confirm", function() {deepEqual( Stem("confirmait"), "confirm");});
test("confirmée -> confirm", function() {deepEqual( Stem("confirmée"), "confirm");});
test("confirmer -> confirm", function() {deepEqual( Stem("confirmer"), "confirm");});
test("confirmèrent -> confirm", function() {deepEqual( Stem("confirmèrent"), "confirm");});
test("confiscation -> confisc", function() {deepEqual( Stem("confiscation"), "confisc");});
test("confisque -> confisqu", function() {deepEqual( Stem("confisque"), "confisqu");});
test("confisqué -> confisqu", function() {deepEqual( Stem("confisqué"), "confisqu");});
test("confit -> conf", function() {deepEqual( Stem("confit"), "conf");});
test("confluent -> confluent", function() {deepEqual( Stem("confluent"), "confluent");});
test("confondait -> confond", function() {deepEqual( Stem("confondait"), "confond");});
test("confonde -> confond", function() {deepEqual( Stem("confonde"), "confond");});
test("confondent -> confondent", function() {deepEqual( Stem("confondent"), "confondent");});
test("confondre -> confondr", function() {deepEqual( Stem("confondre"), "confondr");});
test("confondu -> confondu", function() {deepEqual( Stem("confondu"), "confondu");});
test("confondus -> confondus", function() {deepEqual( Stem("confondus"), "confondus");});
test("conformait -> conform", function() {deepEqual( Stem("conformait"), "conform");});
test("conforme -> conform", function() {deepEqual( Stem("conforme"), "conform");});
test("conformer -> conform", function() {deepEqual( Stem("conformer"), "conform");});
test("confort -> confort", function() {deepEqual( Stem("confort"), "confort");});
test("confortable -> confort", function() {deepEqual( Stem("confortable"), "confort");});
test("confortablement -> confort", function() {deepEqual( Stem("confortablement"), "confort");});
test("confortables -> confort", function() {deepEqual( Stem("confortables"), "confort");});
test("confrère -> confrer", function() {deepEqual( Stem("confrère"), "confrer");});
test("confrères -> confrer", function() {deepEqual( Stem("confrères"), "confrer");});
test("confrérie -> confrer", function() {deepEqual( Stem("confrérie"), "confrer");});
test("confucius -> confucius", function() {deepEqual( Stem("confucius"), "confucius");});
test("confus -> confus", function() {deepEqual( Stem("confus"), "confus");});
test("confuse -> confus", function() {deepEqual( Stem("confuse"), "confus");});
test("confusément -> confus", function() {deepEqual( Stem("confusément"), "confus");});
test("confusion -> confus", function() {deepEqual( Stem("confusion"), "confus");});
test("confusions -> confus", function() {deepEqual( Stem("confusions"), "confus");});
test("congé -> cong", function() {deepEqual( Stem("congé"), "cong");});
test("congédia -> congédi", function() {deepEqual( Stem("congédia"), "congédi");});
test("congédiant -> congédi", function() {deepEqual( Stem("congédiant"), "congédi");});
test("congédié -> congédi", function() {deepEqual( Stem("congédié"), "congédi");});
test("congédiés -> congédi", function() {deepEqual( Stem("congédiés"), "congédi");});
test("congénères -> congéner", function() {deepEqual( Stem("congénères"), "congéner");});
test("congestionnée -> congestion", function() {deepEqual( Stem("congestionnée"), "congestion");});
test("congratulation -> congratul", function() {deepEqual( Stem("congratulation"), "congratul");});
test("congréganiste -> congrégan", function() {deepEqual( Stem("congréganiste"), "congrégan");});
test("congréganistes -> congrégan", function() {deepEqual( Stem("congréganistes"), "congrégan");});
test("congrégation -> congreg", function() {deepEqual( Stem("congrégation"), "congreg");});
test("congrès -> congres", function() {deepEqual( Stem("congrès"), "congres");});
test("conjecture -> conjectur", function() {deepEqual( Stem("conjecture"), "conjectur");});
test("conjecturer -> conjectur", function() {deepEqual( Stem("conjecturer"), "conjectur");});
test("conjectures -> conjectur", function() {deepEqual( Stem("conjectures"), "conjectur");});
test("conjonctions -> conjonct", function() {deepEqual( Stem("conjonctions"), "conjonct");});
test("conjugal -> conjugal", function() {deepEqual( Stem("conjugal"), "conjugal");});
test("conjugale -> conjugal", function() {deepEqual( Stem("conjugale"), "conjugal");});
test("conjuguer -> conjugu", function() {deepEqual( Stem("conjuguer"), "conjugu");});
test("conjurait -> conjur", function() {deepEqual( Stem("conjurait"), "conjur");});
test("conjurant -> conjur", function() {deepEqual( Stem("conjurant"), "conjur");});
test("conjure -> conjur", function() {deepEqual( Stem("conjure"), "conjur");});
test("conjurée -> conjur", function() {deepEqual( Stem("conjurée"), "conjur");});
test("conjurer -> conjur", function() {deepEqual( Stem("conjurer"), "conjur");});
test("connais -> con", function() {deepEqual( Stem("connais"), "con");});
test("connaissaient -> connaiss", function() {deepEqual( Stem("connaissaient"), "connaiss");});
test("connaissais -> connaiss", function() {deepEqual( Stem("connaissais"), "connaiss");});
test("connaissait -> connaiss", function() {deepEqual( Stem("connaissait"), "connaiss");});
test("connaissance -> connaiss", function() {deepEqual( Stem("connaissance"), "connaiss");});
test("connaissances -> connaiss", function() {deepEqual( Stem("connaissances"), "connaiss");});
test("connaissent -> connaissent", function() {deepEqual( Stem("connaissent"), "connaissent");});
test("connaisseurs -> connaisseur", function() {deepEqual( Stem("connaisseurs"), "connaisseur");});
test("connaissez -> connaiss", function() {deepEqual( Stem("connaissez"), "connaiss");});
test("connaissiez -> connaiss", function() {deepEqual( Stem("connaissiez"), "connaiss");});
test("connaissons -> connaisson", function() {deepEqual( Stem("connaissons"), "connaisson");});
test("connaît -> connaît", function() {deepEqual( Stem("connaît"), "connaît");});
test("connaîtrait -> connaîtr", function() {deepEqual( Stem("connaîtrait"), "connaîtr");});
test("connaitre -> connaitr", function() {deepEqual( Stem("connaitre"), "connaitr");});
test("connaître -> connaîtr", function() {deepEqual( Stem("connaître"), "connaîtr");});
test("connivence -> connivent", function() {deepEqual( Stem("connivence"), "connivent");});
test("connu -> connu", function() {deepEqual( Stem("connu"), "connu");});
test("connue -> connu", function() {deepEqual( Stem("connue"), "connu");});
test("connues -> connu", function() {deepEqual( Stem("connues"), "connu");});
test("connus -> connus", function() {deepEqual( Stem("connus"), "connus");});
test("connut -> connut", function() {deepEqual( Stem("connut"), "connut");});
test("conquérir -> conquer", function() {deepEqual( Stem("conquérir"), "conquer");});
test("conquête -> conquêt", function() {deepEqual( Stem("conquête"), "conquêt");});
test("conquis -> conqu", function() {deepEqual( Stem("conquis"), "conqu");});
test("conquise -> conquis", function() {deepEqual( Stem("conquise"), "conquis");});
test("conradin -> conradin", function() {deepEqual( Stem("conradin"), "conradin");});
test("consacrait -> consacr", function() {deepEqual( Stem("consacrait"), "consacr");});
test("consacre -> consacr", function() {deepEqual( Stem("consacre"), "consacr");});
test("consacré -> consacr", function() {deepEqual( Stem("consacré"), "consacr");});
test("consacrée -> consacr", function() {deepEqual( Stem("consacrée"), "consacr");});
test("consacrées -> consacr", function() {deepEqual( Stem("consacrées"), "consacr");});
test("consacrer -> consacr", function() {deepEqual( Stem("consacrer"), "consacr");});
test("consacrerai -> consacr", function() {deepEqual( Stem("consacrerai"), "consacr");});
test("consacrés -> consacr", function() {deepEqual( Stem("consacrés"), "consacr");});
test("conscience -> conscienc", function() {deepEqual( Stem("conscience"), "conscienc");});
test("consciencieusement -> conscienci", function() {deepEqual( Stem("consciencieusement"), "conscienci");});
test("conscription -> conscript", function() {deepEqual( Stem("conscription"), "conscript");});
test("conscrit -> conscr", function() {deepEqual( Stem("conscrit"), "conscr");});
test("conseil -> conseil", function() {deepEqual( Stem("conseil"), "conseil");});
test("conseilla -> conseil", function() {deepEqual( Stem("conseilla"), "conseil");});
test("conseillaient -> conseil", function() {deepEqual( Stem("conseillaient"), "conseil");});
test("conseillait -> conseil", function() {deepEqual( Stem("conseillait"), "conseil");});
test("conseille -> conseil", function() {deepEqual( Stem("conseille"), "conseil");});
test("conseillé -> conseil", function() {deepEqual( Stem("conseillé"), "conseil");});
test("conseillée -> conseil", function() {deepEqual( Stem("conseillée"), "conseil");});
test("conseiller -> conseil", function() {deepEqual( Stem("conseiller"), "conseil");});
test("conseillerai -> conseil", function() {deepEqual( Stem("conseillerai"), "conseil");});
test("conseillerais -> conseil", function() {deepEqual( Stem("conseillerais"), "conseil");});
test("conseillerait -> conseil", function() {deepEqual( Stem("conseillerait"), "conseil");});
test("conseilleriez -> conseil", function() {deepEqual( Stem("conseilleriez"), "conseil");});
test("conseillers -> conseiller", function() {deepEqual( Stem("conseillers"), "conseiller");});
test("conseils -> conseil", function() {deepEqual( Stem("conseils"), "conseil");});
test("consens -> consen", function() {deepEqual( Stem("consens"), "consen");});
test("consentait -> consent", function() {deepEqual( Stem("consentait"), "consent");});
test("consente -> consent", function() {deepEqual( Stem("consente"), "consent");});
test("consentement -> consent", function() {deepEqual( Stem("consentement"), "consent");});
test("consentez -> consent", function() {deepEqual( Stem("consentez"), "consent");});
test("consenti -> consent", function() {deepEqual( Stem("consenti"), "consent");});
test("consentions -> consent", function() {deepEqual( Stem("consentions"), "consent");});
test("consentir -> consent", function() {deepEqual( Stem("consentir"), "consent");});
test("consentirai -> consent", function() {deepEqual( Stem("consentirai"), "consent");});
test("consentirais -> consent", function() {deepEqual( Stem("consentirais"), "consent");});
test("consentirent -> consent", function() {deepEqual( Stem("consentirent"), "consent");});
test("consentit -> consent", function() {deepEqual( Stem("consentit"), "consent");});
test("conséquemment -> conséquent", function() {deepEqual( Stem("conséquemment"), "conséquent");});
test("conséquence -> conséquent", function() {deepEqual( Stem("conséquence"), "conséquent");});
test("conséquences -> conséquent", function() {deepEqual( Stem("conséquences"), "conséquent");});
test("conséquent -> conséquent", function() {deepEqual( Stem("conséquent"), "conséquent");});
test("conservait -> conserv", function() {deepEqual( Stem("conservait"), "conserv");});
test("conservant -> conserv", function() {deepEqual( Stem("conservant"), "conserv");});
test("conservation -> conserv", function() {deepEqual( Stem("conservation"), "conserv");});
test("conservatoire -> conservatoir", function() {deepEqual( Stem("conservatoire"), "conservatoir");});
test("conserve -> conserv", function() {deepEqual( Stem("conserve"), "conserv");});
test("conservé -> conserv", function() {deepEqual( Stem("conservé"), "conserv");});
test("conservée -> conserv", function() {deepEqual( Stem("conservée"), "conserv");});
test("conservées -> conserv", function() {deepEqual( Stem("conservées"), "conserv");});
test("conservent -> conservent", function() {deepEqual( Stem("conservent"), "conservent");});
test("conserver -> conserv", function() {deepEqual( Stem("conserver"), "conserv");});
test("conserverai -> conserv", function() {deepEqual( Stem("conserverai"), "conserv");});
test("conserves -> conserv", function() {deepEqual( Stem("conserves"), "conserv");});
test("considéra -> consider", function() {deepEqual( Stem("considéra"), "consider");});
test("considérable -> consider", function() {deepEqual( Stem("considérable"), "consider");});
test("considérablement -> consider", function() {deepEqual( Stem("considérablement"), "consider");});
test("considérables -> consider", function() {deepEqual( Stem("considérables"), "consider");});
test("considérait -> consider", function() {deepEqual( Stem("considérait"), "consider");});
test("considérant -> consider", function() {deepEqual( Stem("considérant"), "consider");});
test("considération -> consider", function() {deepEqual( Stem("considération"), "consider");});
test("considérations -> consider", function() {deepEqual( Stem("considérations"), "consider");});
test("considère -> consider", function() {deepEqual( Stem("considère"), "consider");});
test("considéré -> consider", function() {deepEqual( Stem("considéré"), "consider");});
test("considérée -> consider", function() {deepEqual( Stem("considérée"), "consider");});
test("considérées -> consider", function() {deepEqual( Stem("considérées"), "consider");});
test("considérer -> consider", function() {deepEqual( Stem("considérer"), "consider");});
test("considérerais -> consider", function() {deepEqual( Stem("considérerais"), "consider");});
test("considérés -> consider", function() {deepEqual( Stem("considérés"), "consider");});
test("consigne -> consign", function() {deepEqual( Stem("consigne"), "consign");});
test("consistait -> consist", function() {deepEqual( Stem("consistait"), "consist");});
test("consistance -> consist", function() {deepEqual( Stem("consistance"), "consist");});
test("consiste -> consist", function() {deepEqual( Stem("consiste"), "consist");});
test("consister -> consist", function() {deepEqual( Stem("consister"), "consist");});
test("consola -> consol", function() {deepEqual( Stem("consola"), "consol");});
test("consolaient -> consol", function() {deepEqual( Stem("consolaient"), "consol");});
test("consolait -> consol", function() {deepEqual( Stem("consolait"), "consol");});
test("consolation -> consol", function() {deepEqual( Stem("consolation"), "consol");});
test("consolations -> consol", function() {deepEqual( Stem("consolations"), "consol");});
test("console -> consol", function() {deepEqual( Stem("console"), "consol");});
test("consolé -> consol", function() {deepEqual( Stem("consolé"), "consol");});
test("consolée -> consol", function() {deepEqual( Stem("consolée"), "consol");});
test("consoler -> consol", function() {deepEqual( Stem("consoler"), "consol");});
test("consomma -> consomm", function() {deepEqual( Stem("consomma"), "consomm");});
test("consommateur -> consomm", function() {deepEqual( Stem("consommateur"), "consomm");});
test("consommateurs -> consomm", function() {deepEqual( Stem("consommateurs"), "consomm");});
test("consommé -> consomm", function() {deepEqual( Stem("consommé"), "consomm");});
test("consommée -> consomm", function() {deepEqual( Stem("consommée"), "consomm");});
test("consommer -> consomm", function() {deepEqual( Stem("consommer"), "consomm");});
test("consommez -> consomm", function() {deepEqual( Stem("consommez"), "consomm");});
test("conspirais -> consp", function() {deepEqual( Stem("conspirais"), "consp");});
test("conspirante -> conspir", function() {deepEqual( Stem("conspirante"), "conspir");});
test("conspirateur -> conspir", function() {deepEqual( Stem("conspirateur"), "conspir");});
test("conspirateurs -> conspir", function() {deepEqual( Stem("conspirateurs"), "conspir");});
test("conspiration -> conspir", function() {deepEqual( Stem("conspiration"), "conspir");});
test("conspiré -> conspir", function() {deepEqual( Stem("conspiré"), "conspir");});
test("conspirer -> conspir", function() {deepEqual( Stem("conspirer"), "conspir");});
test("conspué -> conspu", function() {deepEqual( Stem("conspué"), "conspu");});
test("constamment -> const", function() {deepEqual( Stem("constamment"), "const");});
test("constance -> constanc", function() {deepEqual( Stem("constance"), "constanc");});
test("constant -> const", function() {deepEqual( Stem("constant"), "const");});
test("constante -> const", function() {deepEqual( Stem("constante"), "const");});
test("constantin -> constantin", function() {deepEqual( Stem("constantin"), "constantin");});
test("constants -> const", function() {deepEqual( Stem("constants"), "const");});
test("constata -> constat", function() {deepEqual( Stem("constata"), "constat");});
test("constaté -> constat", function() {deepEqual( Stem("constaté"), "constat");});
test("constater -> constat", function() {deepEqual( Stem("constater"), "constat");});
test("consternation -> constern", function() {deepEqual( Stem("consternation"), "constern");});
test("consterné -> constern", function() {deepEqual( Stem("consterné"), "constern");});
test("consternée -> constern", function() {deepEqual( Stem("consternée"), "constern");});
test("constituait -> constitu", function() {deepEqual( Stem("constituait"), "constitu");});
test("constitue -> constitu", function() {deepEqual( Stem("constitue"), "constitu");});
test("constitué -> constitu", function() {deepEqual( Stem("constitué"), "constitu");});
test("constituer -> constitu", function() {deepEqual( Stem("constituer"), "constitu");});
test("constituera -> constitu", function() {deepEqual( Stem("constituera"), "constitu");});
test("constitution -> constitu", function() {deepEqual( Stem("constitution"), "constitu");});
test("constitutionnel -> constitutionnel", function() {deepEqual( Stem("constitutionnel"), "constitutionnel");});
test("constitutionnels -> constitutionnel", function() {deepEqual( Stem("constitutionnels"), "constitutionnel");});
test("construction -> construct", function() {deepEqual( Stem("construction"), "construct");});
test("construire -> construir", function() {deepEqual( Stem("construire"), "construir");});
test("construisait -> construis", function() {deepEqual( Stem("construisait"), "construis");});
test("construit -> construit", function() {deepEqual( Stem("construit"), "construit");});
test("construite -> construit", function() {deepEqual( Stem("construite"), "construit");});
test("construites -> construit", function() {deepEqual( Stem("construites"), "construit");});
test("construits -> construit", function() {deepEqual( Stem("construits"), "construit");});
test("consul -> consul", function() {deepEqual( Stem("consul"), "consul");});
test("consulaire -> consulair", function() {deepEqual( Stem("consulaire"), "consulair");});
test("consulaires -> consulair", function() {deepEqual( Stem("consulaires"), "consulair");});
test("consulat -> consulat", function() {deepEqual( Stem("consulat"), "consulat");});
test("consulta -> consult", function() {deepEqual( Stem("consulta"), "consult");});
test("consultait -> consult", function() {deepEqual( Stem("consultait"), "consult");});
test("consultant -> consult", function() {deepEqual( Stem("consultant"), "consult");});
test("consultative -> consult", function() {deepEqual( Stem("consultative"), "consult");});
test("consulté -> consult", function() {deepEqual( Stem("consulté"), "consult");});
test("consulter -> consult", function() {deepEqual( Stem("consulter"), "consult");});
test("consulterais -> consult", function() {deepEqual( Stem("consulterais"), "consult");});
test("consultés -> consult", function() {deepEqual( Stem("consultés"), "consult");});
test("consultons -> consulton", function() {deepEqual( Stem("consultons"), "consulton");});
test("consumé -> consum", function() {deepEqual( Stem("consumé"), "consum");});
test("conta -> cont", function() {deepEqual( Stem("conta"), "cont");});
test("contact -> contact", function() {deepEqual( Stem("contact"), "contact");});
test("contagieux -> contagi", function() {deepEqual( Stem("contagieux"), "contagi");});
test("contais -> cont", function() {deepEqual( Stem("contais"), "cont");});
test("contait -> cont", function() {deepEqual( Stem("contait"), "cont");});
test("contarini -> contarin", function() {deepEqual( Stem("contarini"), "contarin");});
test("conte -> cont", function() {deepEqual( Stem("conte"), "cont");});
test("conté -> cont", function() {deepEqual( Stem("conté"), "cont");});
test("contée -> cont", function() {deepEqual( Stem("contée"), "cont");});
test("contemplait -> contempl", function() {deepEqual( Stem("contemplait"), "contempl");});
test("contemplant -> contempl", function() {deepEqual( Stem("contemplant"), "contempl");});
test("contemplation -> contempl", function() {deepEqual( Stem("contemplation"), "contempl");});
test("contemple -> contempl", function() {deepEqual( Stem("contemple"), "contempl");});
test("contempler -> contempl", function() {deepEqual( Stem("contempler"), "contempl");});
test("contemplerait -> contempl", function() {deepEqual( Stem("contemplerait"), "contempl");});
test("contemporains -> contemporain", function() {deepEqual( Stem("contemporains"), "contemporain");});
test("contenaient -> conten", function() {deepEqual( Stem("contenaient"), "conten");});
test("contenait -> conten", function() {deepEqual( Stem("contenait"), "conten");});
test("contenance -> conten", function() {deepEqual( Stem("contenance"), "conten");});
test("contenant -> conten", function() {deepEqual( Stem("contenant"), "conten");});
test("contenir -> conten", function() {deepEqual( Stem("contenir"), "conten");});
test("content -> content", function() {deepEqual( Stem("content"), "content");});
test("contenta -> content", function() {deepEqual( Stem("contenta"), "content");});
test("contentait -> content", function() {deepEqual( Stem("contentait"), "content");});
test("contentant -> content", function() {deepEqual( Stem("contentant"), "content");});
test("contente -> content", function() {deepEqual( Stem("contente"), "content");});
test("contentement -> content", function() {deepEqual( Stem("contentement"), "content");});
test("contenterait -> content", function() {deepEqual( Stem("contenterait"), "content");});
test("contents -> content", function() {deepEqual( Stem("contents"), "content");});
test("contenu -> contenu", function() {deepEqual( Stem("contenu"), "contenu");});
test("contenue -> contenu", function() {deepEqual( Stem("contenue"), "contenu");});
test("contenues -> contenu", function() {deepEqual( Stem("contenues"), "contenu");});
test("contenus -> contenus", function() {deepEqual( Stem("contenus"), "contenus");});
test("conter -> cont", function() {deepEqual( Stem("conter"), "cont");});
test("conterai -> cont", function() {deepEqual( Stem("conterai"), "cont");});
test("conterait -> cont", function() {deepEqual( Stem("conterait"), "cont");});
test("contes -> cont", function() {deepEqual( Stem("contes"), "cont");});
test("contessina -> contessin", function() {deepEqual( Stem("contessina"), "contessin");});
test("contester -> contest", function() {deepEqual( Stem("contester"), "contest");});
test("conti -> cont", function() {deepEqual( Stem("conti"), "cont");});
test("contiennent -> contiennent", function() {deepEqual( Stem("contiennent"), "contiennent");});
test("contient -> contient", function() {deepEqual( Stem("contient"), "contient");});
test("contine -> contin", function() {deepEqual( Stem("contine"), "contin");});
test("continent -> continent", function() {deepEqual( Stem("continent"), "continent");});
test("continental -> continental", function() {deepEqual( Stem("continental"), "continental");});
test("continents -> continent", function() {deepEqual( Stem("continents"), "continent");});
test("contino -> contino", function() {deepEqual( Stem("contino"), "contino");});
test("contînt -> contînt", function() {deepEqual( Stem("contînt"), "contînt");});
test("continu -> continu", function() {deepEqual( Stem("continu"), "continu");});
test("continua -> continu", function() {deepEqual( Stem("continua"), "continu");});
test("continuait -> continu", function() {deepEqual( Stem("continuait"), "continu");});
test("continuant -> continu", function() {deepEqual( Stem("continuant"), "continu");});
test("continuation -> continu", function() {deepEqual( Stem("continuation"), "continu");});
test("continue -> continu", function() {deepEqual( Stem("continue"), "continu");});
test("continué -> continu", function() {deepEqual( Stem("continué"), "continu");});
test("continuel -> continuel", function() {deepEqual( Stem("continuel"), "continuel");});
test("continuelle -> continuel", function() {deepEqual( Stem("continuelle"), "continuel");});
test("continuellement -> continuel", function() {deepEqual( Stem("continuellement"), "continuel");});
test("continuelles -> continuel", function() {deepEqual( Stem("continuelles"), "continuel");});
test("continuels -> continuel", function() {deepEqual( Stem("continuels"), "continuel");});
test("continuer -> continu", function() {deepEqual( Stem("continuer"), "continu");});
test("continuera -> continu", function() {deepEqual( Stem("continuera"), "continu");});
test("continuerait -> continu", function() {deepEqual( Stem("continuerait"), "continu");});
test("continueront -> continu", function() {deepEqual( Stem("continueront"), "continu");});
test("continuez -> continu", function() {deepEqual( Stem("continuez"), "continu");});
test("continuité -> continu", function() {deepEqual( Stem("continuité"), "continu");});
test("continuons -> continuon", function() {deepEqual( Stem("continuons"), "continuon");});
test("contorsions -> contors", function() {deepEqual( Stem("contorsions"), "contors");});
test("contour -> contour", function() {deepEqual( Stem("contour"), "contour");});
test("contournait -> contourn", function() {deepEqual( Stem("contournait"), "contourn");});
test("contournant -> contourn", function() {deepEqual( Stem("contournant"), "contourn");});
test("contourne -> contourn", function() {deepEqual( Stem("contourne"), "contourn");});
test("contours -> contour", function() {deepEqual( Stem("contours"), "contour");});
test("contractait -> contract", function() {deepEqual( Stem("contractait"), "contract");});
test("contracté -> contract", function() {deepEqual( Stem("contracté"), "contract");});
test("contractée -> contract", function() {deepEqual( Stem("contractée"), "contract");});
test("contracter -> contract", function() {deepEqual( Stem("contracter"), "contract");});
test("contractés -> contract", function() {deepEqual( Stem("contractés"), "contract");});
test("contractions -> contract", function() {deepEqual( Stem("contractions"), "contract");});
test("contradictoirement -> contradictoir", function() {deepEqual( Stem("contradictoirement"), "contradictoir");});
test("contradictoires -> contradictoir", function() {deepEqual( Stem("contradictoires"), "contradictoir");});
test("contraindre -> contraindr", function() {deepEqual( Stem("contraindre"), "contraindr");});
test("contraint -> contraint", function() {deepEqual( Stem("contraint"), "contraint");});
test("contrainte -> contraint", function() {deepEqual( Stem("contrainte"), "contraint");});
test("contraintes -> contraint", function() {deepEqual( Stem("contraintes"), "contraint");});
test("contraire -> contrair", function() {deepEqual( Stem("contraire"), "contrair");});
test("contraires -> contrair", function() {deepEqual( Stem("contraires"), "contrair");});
test("contraria -> contrari", function() {deepEqual( Stem("contraria"), "contrari");});
test("contrariait -> contrari", function() {deepEqual( Stem("contrariait"), "contrari");});
test("contrariant -> contrari", function() {deepEqual( Stem("contrariant"), "contrari");});
test("contrarie -> contrar", function() {deepEqual( Stem("contrarie"), "contrar");});
test("contrarié -> contrari", function() {deepEqual( Stem("contrarié"), "contrari");});
test("contrariée -> contrari", function() {deepEqual( Stem("contrariée"), "contrari");});
test("contrarier -> contrari", function() {deepEqual( Stem("contrarier"), "contrari");});
test("contrariera -> contrari", function() {deepEqual( Stem("contrariera"), "contrari");});
test("contrariés -> contrari", function() {deepEqual( Stem("contrariés"), "contrari");});
test("contrariété -> contrariet", function() {deepEqual( Stem("contrariété"), "contrariet");});
test("contrariétés -> contrariet", function() {deepEqual( Stem("contrariétés"), "contrariet");});
test("contrariez -> contrar", function() {deepEqual( Stem("contrariez"), "contrar");});
test("contrastait -> contrast", function() {deepEqual( Stem("contrastait"), "contrast");});
test("contraste -> contrast", function() {deepEqual( Stem("contraste"), "contrast");});
test("contrastes -> contrast", function() {deepEqual( Stem("contrastes"), "contrast");});
test("contrat -> contrat", function() {deepEqual( Stem("contrat"), "contrat");});
test("contravention -> contravent", function() {deepEqual( Stem("contravention"), "contravent");});
test("contraventions -> contravent", function() {deepEqual( Stem("contraventions"), "contravent");});
test("contre -> contr", function() {deepEqual( Stem("contre"), "contr");});
test("contrebandier -> contrebandi", function() {deepEqual( Stem("contrebandier"), "contrebandi");});
test("contrebandiers -> contrebandi", function() {deepEqual( Stem("contrebandiers"), "contrebandi");});
test("contrebas -> contreb", function() {deepEqual( Stem("contrebas"), "contreb");});
test("contrebasse -> contreb", function() {deepEqual( Stem("contrebasse"), "contreb");});
test("contrebasses -> contreb", function() {deepEqual( Stem("contrebasses"), "contreb");});
test("contrecoup -> contrecoup", function() {deepEqual( Stem("contrecoup"), "contrecoup");});
test("contrecoups -> contrecoup", function() {deepEqual( Stem("contrecoups"), "contrecoup");});
test("contredanse -> contredans", function() {deepEqual( Stem("contredanse"), "contredans");});
test("contredanses -> contredans", function() {deepEqual( Stem("contredanses"), "contredans");});
test("contredirait -> contred", function() {deepEqual( Stem("contredirait"), "contred");});
test("contredire -> contredir", function() {deepEqual( Stem("contredire"), "contredir");});
test("contredisait -> contredis", function() {deepEqual( Stem("contredisait"), "contredis");});
test("contredisant -> contredis", function() {deepEqual( Stem("contredisant"), "contredis");});
test("contredit -> contred", function() {deepEqual( Stem("contredit"), "contred");});
test("contrée -> contr", function() {deepEqual( Stem("contrée"), "contr");});
test("contrées -> contr", function() {deepEqual( Stem("contrées"), "contr");});
test("contrefaite -> contrefait", function() {deepEqual( Stem("contrefaite"), "contrefait");});
test("contrefera -> contref", function() {deepEqual( Stem("contrefera"), "contref");});
test("contrefort -> contrefort", function() {deepEqual( Stem("contrefort"), "contrefort");});
test("contresens -> contresen", function() {deepEqual( Stem("contresens"), "contresen");});
test("contresigner -> contresign", function() {deepEqual( Stem("contresigner"), "contresign");});
test("contretemps -> contretemp", function() {deepEqual( Stem("contretemps"), "contretemp");});
test("contribua -> contribu", function() {deepEqual( Stem("contribua"), "contribu");});
test("contribuai -> contribu", function() {deepEqual( Stem("contribuai"), "contribu");});
test("contribué -> contribu", function() {deepEqual( Stem("contribué"), "contribu");});
test("contribuer -> contribu", function() {deepEqual( Stem("contribuer"), "contribu");});
test("contribution -> contribu", function() {deepEqual( Stem("contribution"), "contribu");});
test("contributions -> contribu", function() {deepEqual( Stem("contributions"), "contribu");});
test("contrit -> contr", function() {deepEqual( Stem("contrit"), "contr");});
test("contrition -> contrit", function() {deepEqual( Stem("contrition"), "contrit");});
test("contrôle -> contrôl", function() {deepEqual( Stem("contrôle"), "contrôl");});
test("contrôler -> contrôl", function() {deepEqual( Stem("contrôler"), "contrôl");});
test("contrôles -> contrôl", function() {deepEqual( Stem("contrôles"), "contrôl");});
test("contumace -> contumac", function() {deepEqual( Stem("contumace"), "contumac");});
test("contusions -> contus", function() {deepEqual( Stem("contusions"), "contus");});
test("convaincre -> convaincr", function() {deepEqual( Stem("convaincre"), "convaincr");});
test("convaincu -> convaincu", function() {deepEqual( Stem("convaincu"), "convaincu");});
test("convaincue -> convaincu", function() {deepEqual( Stem("convaincue"), "convaincu");});
test("convenable -> conven", function() {deepEqual( Stem("convenable"), "conven");});
test("convenablement -> conven", function() {deepEqual( Stem("convenablement"), "conven");});
test("convenables -> conven", function() {deepEqual( Stem("convenables"), "conven");});
test("convenaient -> conven", function() {deepEqual( Stem("convenaient"), "conven");});
test("convenait -> conven", function() {deepEqual( Stem("convenait"), "conven");});
test("convenance -> conven", function() {deepEqual( Stem("convenance"), "conven");});
test("convenances -> conven", function() {deepEqual( Stem("convenances"), "conven");});
test("convenez -> conven", function() {deepEqual( Stem("convenez"), "conven");});
test("convenir -> conven", function() {deepEqual( Stem("convenir"), "conven");});
test("convenons -> convenon", function() {deepEqual( Stem("convenons"), "convenon");});
test("convention -> convent", function() {deepEqual( Stem("convention"), "convent");});
test("convenu -> convenu", function() {deepEqual( Stem("convenu"), "convenu");});
test("convenue -> convenu", function() {deepEqual( Stem("convenue"), "convenu");});
test("convenus -> convenus", function() {deepEqual( Stem("convenus"), "convenus");});
test("converger -> converg", function() {deepEqual( Stem("converger"), "converg");});
test("conversation -> convers", function() {deepEqual( Stem("conversation"), "convers");});
test("conversations -> convers", function() {deepEqual( Stem("conversations"), "convers");});
test("conversion -> convers", function() {deepEqual( Stem("conversion"), "convers");});
test("conversions -> convers", function() {deepEqual( Stem("conversions"), "convers");});
test("convertie -> convert", function() {deepEqual( Stem("convertie"), "convert");});
test("convertir -> convert", function() {deepEqual( Stem("convertir"), "convert");});
test("convertis -> convert", function() {deepEqual( Stem("convertis"), "convert");});
test("conviction -> convict", function() {deepEqual( Stem("conviction"), "convict");});
test("convictions -> convict", function() {deepEqual( Stem("convictions"), "convict");});
test("conviendra -> conviendr", function() {deepEqual( Stem("conviendra"), "conviendr");});
test("conviendrait -> conviendr", function() {deepEqual( Stem("conviendrait"), "conviendr");});
test("conviendrez -> conviendr", function() {deepEqual( Stem("conviendrez"), "conviendr");});
test("conviendrons -> conviendron", function() {deepEqual( Stem("conviendrons"), "conviendron");});
test("convienne -> convien", function() {deepEqual( Stem("convienne"), "convien");});
test("conviennent -> conviennent", function() {deepEqual( Stem("conviennent"), "conviennent");});
test("conviens -> convien", function() {deepEqual( Stem("conviens"), "convien");});
test("convient -> convient", function() {deepEqual( Stem("convient"), "convient");});
test("convier -> convi", function() {deepEqual( Stem("convier"), "convi");});
test("convint -> convint", function() {deepEqual( Stem("convint"), "convint");});
test("convînt -> convînt", function() {deepEqual( Stem("convînt"), "convînt");});
test("convives -> conviv", function() {deepEqual( Stem("convives"), "conviv");});
test("convocation -> convoc", function() {deepEqual( Stem("convocation"), "convoc");});
test("convoi -> convoi", function() {deepEqual( Stem("convoi"), "convoi");});
test("convois -> convois", function() {deepEqual( Stem("convois"), "convois");});
test("convoitise -> convoitis", function() {deepEqual( Stem("convoitise"), "convoitis");});
test("convulsif -> convuls", function() {deepEqual( Stem("convulsif"), "convuls");});
test("convulsifs -> convuls", function() {deepEqual( Stem("convulsifs"), "convuls");});
test("convulsion -> convuls", function() {deepEqual( Stem("convulsion"), "convuls");});
test("convulsionnait -> convulsion", function() {deepEqual( Stem("convulsionnait"), "convulsion");});
test("convulsive -> convuls", function() {deepEqual( Stem("convulsive"), "convuls");});
test("convulsivement -> convuls", function() {deepEqual( Stem("convulsivement"), "convuls");});
test("coolies -> cool", function() {deepEqual( Stem("coolies"), "cool");});
test("copeaux -> copeau", function() {deepEqual( Stem("copeaux"), "copeau");});
test("copiait -> copi", function() {deepEqual( Stem("copiait"), "copi");});
test("copiant -> copi", function() {deepEqual( Stem("copiant"), "copi");});
test("copie -> cop", function() {deepEqual( Stem("copie"), "cop");});
test("copié -> copi", function() {deepEqual( Stem("copié"), "copi");});
test("copiée -> copi", function() {deepEqual( Stem("copiée"), "copi");});
test("copient -> copient", function() {deepEqual( Stem("copient"), "copient");});
test("copier -> copi", function() {deepEqual( Stem("copier"), "copi");});
test("copies -> cop", function() {deepEqual( Stem("copies"), "cop");});
test("copieusement -> copieux", function() {deepEqual( Stem("copieusement"), "copieux");});
test("copiez -> cop", function() {deepEqual( Stem("copiez"), "cop");});
test("copiste -> copist", function() {deepEqual( Stem("copiste"), "copist");});
test("coq -> coq", function() {deepEqual( Stem("coq"), "coq");});
test("coque -> coqu", function() {deepEqual( Stem("coque"), "coqu");});
test("coquets -> coquet", function() {deepEqual( Stem("coquets"), "coquet");});
test("coquette -> coquet", function() {deepEqual( Stem("coquette"), "coquet");});
test("coquetterie -> coquetter", function() {deepEqual( Stem("coquetterie"), "coquetter");});
test("coquetteries -> coquetter", function() {deepEqual( Stem("coquetteries"), "coquetter");});
test("coquille -> coquill", function() {deepEqual( Stem("coquille"), "coquill");});
test("coquin -> coquin", function() {deepEqual( Stem("coquin"), "coquin");});
test("coquine -> coquin", function() {deepEqual( Stem("coquine"), "coquin");});
test("coquinerie -> coquiner", function() {deepEqual( Stem("coquinerie"), "coquiner");});
test("coquineries -> coquiner", function() {deepEqual( Stem("coquineries"), "coquiner");});
test("coquins -> coquin", function() {deepEqual( Stem("coquins"), "coquin");});
test("coran -> coran", function() {deepEqual( Stem("coran"), "coran");});
test("corbeau -> corbeau", function() {deepEqual( Stem("corbeau"), "corbeau");});
test("corbeaux -> corbeau", function() {deepEqual( Stem("corbeaux"), "corbeau");});
test("corbeille -> corbeil", function() {deepEqual( Stem("corbeille"), "corbeil");});
test("corday -> corday", function() {deepEqual( Stem("corday"), "corday");});
test("corde -> cord", function() {deepEqual( Stem("corde"), "cord");});
test("cordes -> cord", function() {deepEqual( Stem("cordes"), "cord");});
test("cordon -> cordon", function() {deepEqual( Stem("cordon"), "cordon");});
test("cordons -> cordon", function() {deepEqual( Stem("cordons"), "cordon");});
test("corea -> cor", function() {deepEqual( Stem("corea"), "cor");});
test("cormorans -> cormoran", function() {deepEqual( Stem("cormorans"), "cormoran");});
test("cornac -> cornac", function() {deepEqual( Stem("cornac"), "cornac");});
test("corne -> corn", function() {deepEqual( Stem("corne"), "corn");});
test("corneille -> corneil", function() {deepEqual( Stem("corneille"), "corneil");});
test("corneilles -> corneil", function() {deepEqual( Stem("corneilles"), "corneil");});
test("cornelia -> corneli", function() {deepEqual( Stem("cornelia"), "corneli");});
test("cornelii -> cornelii", function() {deepEqual( Stem("cornelii"), "cornelii");});
test("cornes -> corn", function() {deepEqual( Stem("cornes"), "corn");});
test("corniche -> cornich", function() {deepEqual( Stem("corniche"), "cornich");});
test("cornichon -> cornichon", function() {deepEqual( Stem("cornichon"), "cornichon");});
test("cornwallis -> cornwall", function() {deepEqual( Stem("cornwallis"), "cornwall");});
test("corporation -> corpor", function() {deepEqual( Stem("corporation"), "corpor");});
test("corps -> corp", function() {deepEqual( Stem("corps"), "corp");});
test("corpus -> corpus", function() {deepEqual( Stem("corpus"), "corpus");});
test("corrals -> corral", function() {deepEqual( Stem("corrals"), "corral");});
test("correct -> correct", function() {deepEqual( Stem("correct"), "correct");});
test("correcte -> correct", function() {deepEqual( Stem("correcte"), "correct");});
test("correctement -> correct", function() {deepEqual( Stem("correctement"), "correct");});
test("correctif -> correct", function() {deepEqual( Stem("correctif"), "correct");});
test("correction -> correct", function() {deepEqual( Stem("correction"), "correct");});
test("correctionnelle -> correctionnel", function() {deepEqual( Stem("correctionnelle"), "correctionnel");});
test("corrège -> correg", function() {deepEqual( Stem("corrège"), "correg");});
test("correspondait -> correspond", function() {deepEqual( Stem("correspondait"), "correspond");});
test("correspondance -> correspond", function() {deepEqual( Stem("correspondance"), "correspond");});
test("correspondances -> correspond", function() {deepEqual( Stem("correspondances"), "correspond");});
test("correspondant -> correspond", function() {deepEqual( Stem("correspondant"), "correspond");});
test("correspondants -> correspond", function() {deepEqual( Stem("correspondants"), "correspond");});
test("correspondre -> correspondr", function() {deepEqual( Stem("correspondre"), "correspondr");});
test("corridor -> corridor", function() {deepEqual( Stem("corridor"), "corridor");});
test("corridors -> corridor", function() {deepEqual( Stem("corridors"), "corridor");});
test("corrigeait -> corrig", function() {deepEqual( Stem("corrigeait"), "corrig");});
test("corrigée -> corrig", function() {deepEqual( Stem("corrigée"), "corrig");});
test("corriger -> corrig", function() {deepEqual( Stem("corriger"), "corrig");});
test("corrigerez -> corrig", function() {deepEqual( Stem("corrigerez"), "corrig");});
test("corrodant -> corrod", function() {deepEqual( Stem("corrodant"), "corrod");});
test("corrompre -> corrompr", function() {deepEqual( Stem("corrompre"), "corrompr");});
test("corrompu -> corrompu", function() {deepEqual( Stem("corrompu"), "corrompu");});
test("corrosif -> corros", function() {deepEqual( Stem("corrosif"), "corros");});
test("corruption -> corrupt", function() {deepEqual( Stem("corruption"), "corrupt");});
test("cors -> cor", function() {deepEqual( Stem("cors"), "cor");});
test("corso -> corso", function() {deepEqual( Stem("corso"), "corso");});
test("cortège -> corteg", function() {deepEqual( Stem("cortège"), "corteg");});
test("cortellate -> cortellat", function() {deepEqual( Stem("cortellate"), "cortellat");});
test("corvée -> corv", function() {deepEqual( Stem("corvée"), "corv");});
test("cosa -> cos", function() {deepEqual( Stem("cosa"), "cos");});
test("cosaques -> cosaqu", function() {deepEqual( Stem("cosaques"), "cosaqu");});
test("cosi -> cos", function() {deepEqual( Stem("cosi"), "cos");});
test("cosmopolite -> cosmopolit", function() {deepEqual( Stem("cosmopolite"), "cosmopolit");});
test("costume -> costum", function() {deepEqual( Stem("costume"), "costum");});
test("costumes -> costum", function() {deepEqual( Stem("costumes"), "costum");});
test("cotait -> cot", function() {deepEqual( Stem("cotait"), "cot");});
test("cote -> cot", function() {deepEqual( Stem("cote"), "cot");});
test("côte -> côt", function() {deepEqual( Stem("côte"), "côt");});
test("côté -> côt", function() {deepEqual( Stem("côté"), "côt");});
test("coteaux -> coteau", function() {deepEqual( Stem("coteaux"), "coteau");});
test("cotée -> cot", function() {deepEqual( Stem("cotée"), "cot");});
test("coterie -> coter", function() {deepEqual( Stem("coterie"), "coter");});
test("coteries -> coter", function() {deepEqual( Stem("coteries"), "coter");});
test("côtes -> côt", function() {deepEqual( Stem("côtes"), "côt");});
test("côtés -> côt", function() {deepEqual( Stem("côtés"), "côt");});
test("coton -> coton", function() {deepEqual( Stem("coton"), "coton");});
test("cotonnades -> cotonnad", function() {deepEqual( Stem("cotonnades"), "cotonnad");});
test("cotons -> coton", function() {deepEqual( Stem("cotons"), "coton");});
test("côtoyant -> côtoi", function() {deepEqual( Stem("côtoyant"), "côtoi");});
test("côtoyé -> côtoi", function() {deepEqual( Stem("côtoyé"), "côtoi");});
test("cotre -> cotr", function() {deepEqual( Stem("cotre"), "cotr");});
test("cotte -> cott", function() {deepEqual( Stem("cotte"), "cott");});
test("cou -> cou", function() {deepEqual( Stem("cou"), "cou");});
test("coucha -> couch", function() {deepEqual( Stem("coucha"), "couch");});
test("couchait -> couch", function() {deepEqual( Stem("couchait"), "couch");});
test("couchant -> couch", function() {deepEqual( Stem("couchant"), "couch");});
test("couche -> couch", function() {deepEqual( Stem("couche"), "couch");});
test("couché -> couch", function() {deepEqual( Stem("couché"), "couch");});
test("couchée -> couch", function() {deepEqual( Stem("couchée"), "couch");});
test("couchent -> couchent", function() {deepEqual( Stem("couchent"), "couchent");});
test("coucher -> couch", function() {deepEqual( Stem("coucher"), "couch");});
test("coucherai -> couch", function() {deepEqual( Stem("coucherai"), "couch");});
test("coucherait -> couch", function() {deepEqual( Stem("coucherait"), "couch");});
test("couchèrent -> couch", function() {deepEqual( Stem("couchèrent"), "couch");});
test("couchés -> couch", function() {deepEqual( Stem("couchés"), "couch");});
test("couchettes -> couchet", function() {deepEqual( Stem("couchettes"), "couchet");});
test("couchez -> couch", function() {deepEqual( Stem("couchez"), "couch");});
test("coude -> coud", function() {deepEqual( Stem("coude"), "coud");});
test("coudes -> coud", function() {deepEqual( Stem("coudes"), "coud");});
test("coudre -> coudr", function() {deepEqual( Stem("coudre"), "coudr");});
test("coudrier -> coudri", function() {deepEqual( Stem("coudrier"), "coudri");});
test("couds -> coud", function() {deepEqual( Stem("couds"), "coud");});
test("coulaient -> coul", function() {deepEqual( Stem("coulaient"), "coul");});
test("coulait -> coul", function() {deepEqual( Stem("coulait"), "coul");});
test("coulant -> coul", function() {deepEqual( Stem("coulant"), "coul");});
test("coule -> coul", function() {deepEqual( Stem("coule"), "coul");});
test("coulé -> coul", function() {deepEqual( Stem("coulé"), "coul");});
test("couler -> coul", function() {deepEqual( Stem("couler"), "coul");});
test("coulèrent -> coul", function() {deepEqual( Stem("coulèrent"), "coul");});
test("couleur -> couleur", function() {deepEqual( Stem("couleur"), "couleur");});
test("couleurs -> couleur", function() {deepEqual( Stem("couleurs"), "couleur");});
test("coulisse -> coul", function() {deepEqual( Stem("coulisse"), "coul");});
test("coulisses -> coul", function() {deepEqual( Stem("coulisses"), "coul");});
test("couloirs -> couloir", function() {deepEqual( Stem("couloirs"), "couloir");});
test("coulon -> coulon", function() {deepEqual( Stem("coulon"), "coulon");});
test("council -> council", function() {deepEqual( Stem("council"), "council");});
test("coup -> coup", function() {deepEqual( Stem("coup"), "coup");});
test("coupa -> coup", function() {deepEqual( Stem("coupa"), "coup");});
test("coupable -> coupabl", function() {deepEqual( Stem("coupable"), "coupabl");});
test("coupables -> coupabl", function() {deepEqual( Stem("coupables"), "coupabl");});
test("coupaient -> coup", function() {deepEqual( Stem("coupaient"), "coup");});
test("coupait -> coup", function() {deepEqual( Stem("coupait"), "coup");});
test("coupant -> coup", function() {deepEqual( Stem("coupant"), "coup");});
test("coupât -> coup", function() {deepEqual( Stem("coupât"), "coup");});
test("coupe -> coup", function() {deepEqual( Stem("coupe"), "coup");});
test("coupé -> coup", function() {deepEqual( Stem("coupé"), "coup");});
test("coupée -> coup", function() {deepEqual( Stem("coupée"), "coup");});
test("coupées -> coup", function() {deepEqual( Stem("coupées"), "coup");});
test("coupent -> coupent", function() {deepEqual( Stem("coupent"), "coupent");});
test("couper -> coup", function() {deepEqual( Stem("couper"), "coup");});
test("couperosée -> couperos", function() {deepEqual( Stem("couperosée"), "couperos");});
test("coupes -> coup", function() {deepEqual( Stem("coupes"), "coup");});
test("coupés -> coup", function() {deepEqual( Stem("coupés"), "coup");});
test("coupez -> coup", function() {deepEqual( Stem("coupez"), "coup");});
test("couple -> coupl", function() {deepEqual( Stem("couple"), "coupl");});
test("couples -> coupl", function() {deepEqual( Stem("couples"), "coupl");});
test("couplet -> couplet", function() {deepEqual( Stem("couplet"), "couplet");});
test("couplets -> couplet", function() {deepEqual( Stem("couplets"), "couplet");});
test("coups -> coup", function() {deepEqual( Stem("coups"), "coup");});
test("coupure -> coupur", function() {deepEqual( Stem("coupure"), "coupur");});
test("cour -> cour", function() {deepEqual( Stem("cour"), "cour");});
test("courage -> courag", function() {deepEqual( Stem("courage"), "courag");});
test("courages -> courag", function() {deepEqual( Stem("courages"), "courag");});
test("courageuse -> courag", function() {deepEqual( Stem("courageuse"), "courag");});
test("courageusement -> courag", function() {deepEqual( Stem("courageusement"), "courag");});
test("courageuses -> courag", function() {deepEqual( Stem("courageuses"), "courag");});
test("courageux -> courag", function() {deepEqual( Stem("courageux"), "courag");});
test("couraient -> cour", function() {deepEqual( Stem("couraient"), "cour");});
test("courait -> cour", function() {deepEqual( Stem("courait"), "cour");});
test("courant -> cour", function() {deepEqual( Stem("courant"), "cour");});
test("courants -> cour", function() {deepEqual( Stem("courants"), "cour");});
test("courbait -> courb", function() {deepEqual( Stem("courbait"), "courb");});
test("courbe -> courb", function() {deepEqual( Stem("courbe"), "courb");});
test("courbé -> courb", function() {deepEqual( Stem("courbé"), "courb");});
test("courber -> courb", function() {deepEqual( Stem("courber"), "courb");});
test("courbes -> courb", function() {deepEqual( Stem("courbes"), "courb");});
test("courbés -> courb", function() {deepEqual( Stem("courbés"), "courb");});
test("courbure -> courbur", function() {deepEqual( Stem("courbure"), "courbur");});
test("coure -> cour", function() {deepEqual( Stem("coure"), "cour");});
test("courent -> courent", function() {deepEqual( Stem("courent"), "courent");});
test("coureur -> coureur", function() {deepEqual( Stem("coureur"), "coureur");});
test("coureurs -> coureur", function() {deepEqual( Stem("coureurs"), "coureur");});
test("courez -> cour", function() {deepEqual( Stem("courez"), "cour");});
test("courier -> couri", function() {deepEqual( Stem("courier"), "couri");});
test("courir -> cour", function() {deepEqual( Stem("courir"), "cour");});
test("couronnaient -> couron", function() {deepEqual( Stem("couronnaient"), "couron");});
test("couronne -> couron", function() {deepEqual( Stem("couronne"), "couron");});
test("couronné -> couron", function() {deepEqual( Stem("couronné"), "couron");});
test("couronnées -> couron", function() {deepEqual( Stem("couronnées"), "couron");});
test("couronnement -> couron", function() {deepEqual( Stem("couronnement"), "couron");});
test("couronnent -> couronnent", function() {deepEqual( Stem("couronnent"), "couronnent");});
test("couronner -> couron", function() {deepEqual( Stem("couronner"), "couron");});
test("couronnes -> couron", function() {deepEqual( Stem("couronnes"), "couron");});
test("courons -> couron", function() {deepEqual( Stem("courons"), "couron");});
test("courrais -> courr", function() {deepEqual( Stem("courrais"), "courr");});
test("courrez -> courr", function() {deepEqual( Stem("courrez"), "courr");});
test("courrier -> courri", function() {deepEqual( Stem("courrier"), "courri");});
test("courriers -> courri", function() {deepEqual( Stem("courriers"), "courri");});
test("courroucés -> courrouc", function() {deepEqual( Stem("courroucés"), "courrouc");});
test("courroux -> courroux", function() {deepEqual( Stem("courroux"), "courroux");});
test("cours -> cour", function() {deepEqual( Stem("cours"), "cour");});
test("course -> cours", function() {deepEqual( Stem("course"), "cours");});
test("courses -> cours", function() {deepEqual( Stem("courses"), "cours");});
test("court -> court", function() {deepEqual( Stem("court"), "court");});
test("courte -> court", function() {deepEqual( Stem("courte"), "court");});
test("courtes -> court", function() {deepEqual( Stem("courtes"), "court");});
test("courtier -> courti", function() {deepEqual( Stem("courtier"), "courti");});
test("courtiers -> courti", function() {deepEqual( Stem("courtiers"), "courti");});
test("courtine -> courtin", function() {deepEqual( Stem("courtine"), "courtin");});
test("courtisan -> courtisan", function() {deepEqual( Stem("courtisan"), "courtisan");});
test("courtisanerie -> courtisaner", function() {deepEqual( Stem("courtisanerie"), "courtisaner");});
test("courtisanesque -> courtisanesqu", function() {deepEqual( Stem("courtisanesque"), "courtisanesqu");});
test("courtisans -> courtisan", function() {deepEqual( Stem("courtisans"), "courtisan");});
test("courts -> court", function() {deepEqual( Stem("courts"), "court");});
test("couru -> couru", function() {deepEqual( Stem("couru"), "couru");});
test("coururent -> coururent", function() {deepEqual( Stem("coururent"), "coururent");});
test("courus -> courus", function() {deepEqual( Stem("courus"), "courus");});
test("courut -> courut", function() {deepEqual( Stem("courut"), "courut");});
test("courût -> courût", function() {deepEqual( Stem("courût"), "courût");});
test("cousait -> cous", function() {deepEqual( Stem("cousait"), "cous");});
test("cousin -> cousin", function() {deepEqual( Stem("cousin"), "cousin");});
test("cousine -> cousin", function() {deepEqual( Stem("cousine"), "cousin");});
test("cousines -> cousin", function() {deepEqual( Stem("cousines"), "cousin");});
test("coussin -> coussin", function() {deepEqual( Stem("coussin"), "coussin");});
test("coussins -> coussin", function() {deepEqual( Stem("coussins"), "coussin");});
test("cousu -> cousu", function() {deepEqual( Stem("cousu"), "cousu");});
test("coûta -> coût", function() {deepEqual( Stem("coûta"), "coût");});
test("coûtaient -> coût", function() {deepEqual( Stem("coûtaient"), "coût");});
test("coûtait -> coût", function() {deepEqual( Stem("coûtait"), "coût");});
test("coûtant -> coût", function() {deepEqual( Stem("coûtant"), "coût");});
test("coûte -> coût", function() {deepEqual( Stem("coûte"), "coût");});
test("coûté -> coût", function() {deepEqual( Stem("coûté"), "coût");});
test("couteau -> couteau", function() {deepEqual( Stem("couteau"), "couteau");});
test("couteaux -> couteau", function() {deepEqual( Stem("couteaux"), "couteau");});
test("coûtent -> coûtent", function() {deepEqual( Stem("coûtent"), "coûtent");});
test("couter -> cout", function() {deepEqual( Stem("couter"), "cout");});
test("coûter -> coût", function() {deepEqual( Stem("coûter"), "coût");});
test("coûtera -> coût", function() {deepEqual( Stem("coûtera"), "coût");});
test("coûterait -> coût", function() {deepEqual( Stem("coûterait"), "coût");});
test("coûtèrent -> coût", function() {deepEqual( Stem("coûtèrent"), "coût");});
test("coûteront -> coût", function() {deepEqual( Stem("coûteront"), "coût");});
test("coutil -> coutil", function() {deepEqual( Stem("coutil"), "coutil");});
test("coutume -> coutum", function() {deepEqual( Stem("coutume"), "coutum");});
test("coutumes -> coutum", function() {deepEqual( Stem("coutumes"), "coutum");});
test("couvent -> couvent", function() {deepEqual( Stem("couvent"), "couvent");});
test("couvents -> couvent", function() {deepEqual( Stem("couvents"), "couvent");});
test("couvert -> couvert", function() {deepEqual( Stem("couvert"), "couvert");});
test("couverte -> couvert", function() {deepEqual( Stem("couverte"), "couvert");});
test("couvertes -> couvert", function() {deepEqual( Stem("couvertes"), "couvert");});
test("couverts -> couvert", function() {deepEqual( Stem("couverts"), "couvert");});
test("couverture -> couvertur", function() {deepEqual( Stem("couverture"), "couvertur");});
test("couvertures -> couvertur", function() {deepEqual( Stem("couvertures"), "couvertur");});
test("couvraient -> couvr", function() {deepEqual( Stem("couvraient"), "couvr");});
test("couvrait -> couvr", function() {deepEqual( Stem("couvrait"), "couvr");});
test("couvrant -> couvr", function() {deepEqual( Stem("couvrant"), "couvr");});
test("couvre -> couvr", function() {deepEqual( Stem("couvre"), "couvr");});
test("couvrent -> couvrent", function() {deepEqual( Stem("couvrent"), "couvrent");});
test("couvrir -> couvr", function() {deepEqual( Stem("couvrir"), "couvr");});
test("couvrira -> couvr", function() {deepEqual( Stem("couvrira"), "couvr");});
test("couvrit -> couvr", function() {deepEqual( Stem("couvrit"), "couvr");});
test("craché -> crach", function() {deepEqual( Stem("craché"), "crach");});
test("cracher -> crach", function() {deepEqual( Stem("cracher"), "crach");});
test("craignais -> craign", function() {deepEqual( Stem("craignais"), "craign");});
test("craignait -> craign", function() {deepEqual( Stem("craignait"), "craign");});
test("craignant -> craign", function() {deepEqual( Stem("craignant"), "craign");});
test("craignez -> craign", function() {deepEqual( Stem("craignez"), "craign");});
test("craignions -> craignion", function() {deepEqual( Stem("craignions"), "craignion");});
test("craignirent -> craign", function() {deepEqual( Stem("craignirent"), "craign");});
test("craignit -> craign", function() {deepEqual( Stem("craignit"), "craign");});
test("craignons -> craignon", function() {deepEqual( Stem("craignons"), "craignon");});
test("craindra -> craindr", function() {deepEqual( Stem("craindra"), "craindr");});
test("craindrai -> craindr", function() {deepEqual( Stem("craindrai"), "craindr");});
test("craindre -> craindr", function() {deepEqual( Stem("craindre"), "craindr");});
test("crains -> crain", function() {deepEqual( Stem("crains"), "crain");});
test("craint -> craint", function() {deepEqual( Stem("craint"), "craint");});
test("crainte -> craint", function() {deepEqual( Stem("crainte"), "craint");});
test("craintes -> craint", function() {deepEqual( Stem("craintes"), "craint");});
test("craintifs -> craintif", function() {deepEqual( Stem("craintifs"), "craintif");});
test("cramoisi -> cramois", function() {deepEqual( Stem("cramoisi"), "cramois");});
test("cramoisie -> cramois", function() {deepEqual( Stem("cramoisie"), "cramois");});
test("cramoisis -> cramois", function() {deepEqual( Stem("cramoisis"), "cramois");});
test("crampe -> cramp", function() {deepEqual( Stem("crampe"), "cramp");});
test("cramponne -> crampon", function() {deepEqual( Stem("cramponne"), "crampon");});
test("crâne -> crân", function() {deepEqual( Stem("crâne"), "crân");});
test("craquement -> craqu", function() {deepEqual( Stem("craquement"), "craqu");});
test("crasseux -> crasseux", function() {deepEqual( Stem("crasseux"), "crasseux");});
test("cravache -> cravach", function() {deepEqual( Stem("cravache"), "cravach");});
test("cravate -> cravat", function() {deepEqual( Stem("cravate"), "cravat");});
test("crayon -> crayon", function() {deepEqual( Stem("crayon"), "crayon");});
test("créance -> créanc", function() {deepEqual( Stem("créance"), "créanc");});
test("créature -> créatur", function() {deepEqual( Stem("créature"), "créatur");});
test("créatures -> créatur", function() {deepEqual( Stem("créatures"), "créatur");});
test("credete -> credet", function() {deepEqual( Stem("credete"), "credet");});
test("crédit -> cred", function() {deepEqual( Stem("crédit"), "cred");});
test("créditeur -> créditeur", function() {deepEqual( Stem("créditeur"), "créditeur");});
test("crédulité -> crédul", function() {deepEqual( Stem("crédulité"), "crédul");});
test("créé -> cré", function() {deepEqual( Stem("créé"), "cré");});
test("creek -> creek", function() {deepEqual( Stem("creek"), "creek");});
test("creeks -> creek", function() {deepEqual( Stem("creeks"), "creek");});
test("crème -> crem", function() {deepEqual( Stem("crème"), "crem");});
test("créole -> créol", function() {deepEqual( Stem("créole"), "créol");});
test("crépuscule -> crépuscul", function() {deepEqual( Stem("crépuscule"), "crépuscul");});
test("crescentini -> crescentin", function() {deepEqual( Stem("crescentini"), "crescentin");});
test("crescentius -> crescentius", function() {deepEqual( Stem("crescentius"), "crescentius");});
test("crescenzi -> crescenz", function() {deepEqual( Stem("crescenzi"), "crescenz");});
test("crête -> crêt", function() {deepEqual( Stem("crête"), "crêt");});
test("creusaient -> creus", function() {deepEqual( Stem("creusaient"), "creus");});
test("creusait -> creus", function() {deepEqual( Stem("creusait"), "creus");});
test("creusé -> creus", function() {deepEqual( Stem("creusé"), "creus");});
test("creuses -> creus", function() {deepEqual( Stem("creuses"), "creus");});
test("creux -> creux", function() {deepEqual( Stem("creux"), "creux");});
test("crevé -> crev", function() {deepEqual( Stem("crevé"), "crev");});
test("crèvera -> crev", function() {deepEqual( Stem("crèvera"), "crev");});
test("cri -> cri", function() {deepEqual( Stem("cri"), "cri");});
test("cria -> cri", function() {deepEqual( Stem("cria"), "cri");});
test("criaient -> cri", function() {deepEqual( Stem("criaient"), "cri");});
test("criait -> cri", function() {deepEqual( Stem("criait"), "cri");});
test("criant -> cri", function() {deepEqual( Stem("criant"), "cri");});
test("criante -> cri", function() {deepEqual( Stem("criante"), "cri");});
test("criards -> criard", function() {deepEqual( Stem("criards"), "criard");});
test("criblé -> cribl", function() {deepEqual( Stem("criblé"), "cribl");});
test("crie -> cri", function() {deepEqual( Stem("crie"), "cri");});
test("crié -> cri", function() {deepEqual( Stem("crié"), "cri");});
test("crier -> cri", function() {deepEqual( Stem("crier"), "cri");});
test("crièrent -> cri", function() {deepEqual( Stem("crièrent"), "cri");});
test("criés -> cri", function() {deepEqual( Stem("criés"), "cri");});
test("criez -> cri", function() {deepEqual( Stem("criez"), "cri");});
test("crime -> crim", function() {deepEqual( Stem("crime"), "crim");});
test("crimes -> crim", function() {deepEqual( Stem("crimes"), "crim");});
test("criminel -> criminel", function() {deepEqual( Stem("criminel"), "criminel");});
test("criminelle -> criminel", function() {deepEqual( Stem("criminelle"), "criminel");});
test("criminelles -> criminel", function() {deepEqual( Stem("criminelles"), "criminel");});
test("criminels -> criminel", function() {deepEqual( Stem("criminels"), "criminel");});
test("crin -> crin", function() {deepEqual( Stem("crin"), "crin");});
test("crinière -> crini", function() {deepEqual( Stem("crinière"), "crini");});
test("crinières -> crini", function() {deepEqual( Stem("crinières"), "crini");});
test("crins -> crin", function() {deepEqual( Stem("crins"), "crin");});
test("cris -> cris", function() {deepEqual( Stem("cris"), "cris");});
test("crise -> cris", function() {deepEqual( Stem("crise"), "cris");});
test("crispe -> crisp", function() {deepEqual( Stem("crispe"), "crisp");});
test("cristal -> cristal", function() {deepEqual( Stem("cristal"), "cristal");});
test("cristaux -> cristal", function() {deepEqual( Stem("cristaux"), "cristal");});
test("critique -> critiqu", function() {deepEqual( Stem("critique"), "critiqu");});
test("critiqué -> critiqu", function() {deepEqual( Stem("critiqué"), "critiqu");});
test("critiquent -> critiquent", function() {deepEqual( Stem("critiquent"), "critiquent");});
test("critiques -> critiqu", function() {deepEqual( Stem("critiques"), "critiqu");});
test("crochet -> crochet", function() {deepEqual( Stem("crochet"), "crochet");});
test("croie -> croi", function() {deepEqual( Stem("croie"), "croi");});
test("croient -> croient", function() {deepEqual( Stem("croient"), "croient");});
test("croira -> croir", function() {deepEqual( Stem("croira"), "croir");});
test("croirai -> croir", function() {deepEqual( Stem("croirai"), "croir");});
test("croiraient -> croir", function() {deepEqual( Stem("croiraient"), "croir");});
test("croirais -> croir", function() {deepEqual( Stem("croirais"), "croir");});
test("croirait -> croir", function() {deepEqual( Stem("croirait"), "croir");});
test("croire -> croir", function() {deepEqual( Stem("croire"), "croir");});
test("croirez -> croir", function() {deepEqual( Stem("croirez"), "croir");});
test("croiriez -> croir", function() {deepEqual( Stem("croiriez"), "croir");});
test("croirons -> croiron", function() {deepEqual( Stem("croirons"), "croiron");});
test("croiront -> croiront", function() {deepEqual( Stem("croiront"), "croiront");});
test("crois -> crois", function() {deepEqual( Stem("crois"), "crois");});
test("croisa -> crois", function() {deepEqual( Stem("croisa"), "crois");});
test("croisade -> croisad", function() {deepEqual( Stem("croisade"), "croisad");});
test("croisades -> croisad", function() {deepEqual( Stem("croisades"), "croisad");});
test("croisaient -> crois", function() {deepEqual( Stem("croisaient"), "crois");});
test("croisait -> crois", function() {deepEqual( Stem("croisait"), "crois");});
test("croisé -> crois", function() {deepEqual( Stem("croisé"), "crois");});
test("croisée -> crois", function() {deepEqual( Stem("croisée"), "crois");});
test("croisées -> crois", function() {deepEqual( Stem("croisées"), "crois");});
test("croisenois -> croisenois", function() {deepEqual( Stem("croisenois"), "croisenois");});
test("croisés -> crois", function() {deepEqual( Stem("croisés"), "crois");});
test("croissaient -> croiss", function() {deepEqual( Stem("croissaient"), "croiss");});
test("croissait -> croiss", function() {deepEqual( Stem("croissait"), "croiss");});
test("croissance -> croissanc", function() {deepEqual( Stem("croissance"), "croissanc");});
test("croissant -> croiss", function() {deepEqual( Stem("croissant"), "croiss");});
test("croissante -> croiss", function() {deepEqual( Stem("croissante"), "croiss");});
test("croit -> croit", function() {deepEqual( Stem("croit"), "croit");});
test("croître -> croîtr", function() {deepEqual( Stem("croître"), "croîtr");});
test("croix -> croix", function() {deepEqual( Stem("croix"), "croix");});
test("cromarty -> cromarty", function() {deepEqual( Stem("cromarty"), "cromarty");});
test("cross -> cross", function() {deepEqual( Stem("cross"), "cross");});
test("crotte -> crott", function() {deepEqual( Stem("crotte"), "crott");});
test("crotté -> crott", function() {deepEqual( Stem("crotté"), "crott");});
test("crottées -> crott", function() {deepEqual( Stem("crottées"), "crott");});
test("crouler -> croul", function() {deepEqual( Stem("crouler"), "croul");});
test("croupe -> croup", function() {deepEqual( Stem("croupe"), "croup");});
test("croupir -> croup", function() {deepEqual( Stem("croupir"), "croup");});
test("croyaient -> croi", function() {deepEqual( Stem("croyaient"), "croi");});
test("croyais -> croi", function() {deepEqual( Stem("croyais"), "croi");});
test("croyait -> croi", function() {deepEqual( Stem("croyait"), "croi");});
test("croyance -> croyanc", function() {deepEqual( Stem("croyance"), "croyanc");});
test("croyant -> croi", function() {deepEqual( Stem("croyant"), "croi");});
test("croyante -> croi", function() {deepEqual( Stem("croyante"), "croi");});
test("croyants -> croi", function() {deepEqual( Stem("croyants"), "croi");});
test("croyez -> croi", function() {deepEqual( Stem("croyez"), "croi");});
test("croyiez -> croi", function() {deepEqual( Stem("croyiez"), "croi");});
test("croyons -> croyon", function() {deepEqual( Stem("croyons"), "croyon");});
test("cru -> cru", function() {deepEqual( Stem("cru"), "cru");});
test("cruauté -> cruaut", function() {deepEqual( Stem("cruauté"), "cruaut");});
test("cruautés -> cruaut", function() {deepEqual( Stem("cruautés"), "cruaut");});
test("cruciales -> crucial", function() {deepEqual( Stem("cruciales"), "crucial");});
test("crucifix -> crucifix", function() {deepEqual( Stem("crucifix"), "crucifix");});
test("crue -> cru", function() {deepEqual( Stem("crue"), "cru");});
test("cruel -> cruel", function() {deepEqual( Stem("cruel"), "cruel");});
test("cruelle -> cruel", function() {deepEqual( Stem("cruelle"), "cruel");});
test("cruellement -> cruel", function() {deepEqual( Stem("cruellement"), "cruel");});
test("cruelles -> cruel", function() {deepEqual( Stem("cruelles"), "cruel");});
test("cruels -> cruel", function() {deepEqual( Stem("cruels"), "cruel");});
test("crues -> cru", function() {deepEqual( Stem("crues"), "cru");});
test("crûment -> crûment", function() {deepEqual( Stem("crûment"), "crûment");});
test("crurent -> crurent", function() {deepEqual( Stem("crurent"), "crurent");});
test("crus -> crus", function() {deepEqual( Stem("crus"), "crus");});
test("crut -> crut", function() {deepEqual( Stem("crut"), "crut");});
test("crût -> crût", function() {deepEqual( Stem("crût"), "crût");});
test("cueilli -> cueil", function() {deepEqual( Stem("cueilli"), "cueil");});
test("cuir -> cuir", function() {deepEqual( Stem("cuir"), "cuir");});
test("cuirasse -> cuir", function() {deepEqual( Stem("cuirasse"), "cuir");});
test("cuirasses -> cuir", function() {deepEqual( Stem("cuirasses"), "cuir");});
test("cuirassier -> cuirassi", function() {deepEqual( Stem("cuirassier"), "cuirassi");});
test("cuirassiers -> cuirassi", function() {deepEqual( Stem("cuirassiers"), "cuirassi");});
test("cuisant -> cuis", function() {deepEqual( Stem("cuisant"), "cuis");});
test("cuisante -> cuis", function() {deepEqual( Stem("cuisante"), "cuis");});
test("cuisine -> cuisin", function() {deepEqual( Stem("cuisine"), "cuisin");});
test("cuisines -> cuisin", function() {deepEqual( Stem("cuisines"), "cuisin");});
test("cuisinier -> cuisini", function() {deepEqual( Stem("cuisinier"), "cuisini");});
test("cuisinière -> cuisini", function() {deepEqual( Stem("cuisinière"), "cuisini");});
test("cuisiniers -> cuisini", function() {deepEqual( Stem("cuisiniers"), "cuisini");});
test("cuisse -> cuiss", function() {deepEqual( Stem("cuisse"), "cuiss");});
test("cuisses -> cuiss", function() {deepEqual( Stem("cuisses"), "cuiss");});
test("cuistre -> cuistr", function() {deepEqual( Stem("cuistre"), "cuistr");});
test("cuistres -> cuistr", function() {deepEqual( Stem("cuistres"), "cuistr");});
test("cuite -> cuit", function() {deepEqual( Stem("cuite"), "cuit");});
test("cuivre -> cuivr", function() {deepEqual( Stem("cuivre"), "cuivr");});
test("cuivres -> cuivr", function() {deepEqual( Stem("cuivres"), "cuivr");});
test("culbute -> culbut", function() {deepEqual( Stem("culbute"), "culbut");});
test("culotte -> culott", function() {deepEqual( Stem("culotte"), "culott");});
test("culottes -> culott", function() {deepEqual( Stem("culottes"), "culott");});
test("culpa -> culp", function() {deepEqual( Stem("culpa"), "culp");});
test("culpabilité -> culpabl", function() {deepEqual( Stem("culpabilité"), "culpabl");});
test("culte -> cult", function() {deepEqual( Stem("culte"), "cult");});
test("cultivée -> cultiv", function() {deepEqual( Stem("cultivée"), "cultiv");});
test("cultivées -> cultiv", function() {deepEqual( Stem("cultivées"), "cultiv");});
test("cultivent -> cultivent", function() {deepEqual( Stem("cultivent"), "cultivent");});
test("cultiver -> cultiv", function() {deepEqual( Stem("cultiver"), "cultiv");});
test("cunard -> cunard", function() {deepEqual( Stem("cunard"), "cunard");});
test("cunctando -> cunctando", function() {deepEqual( Stem("cunctando"), "cunctando");});
test("cupidité -> cupid", function() {deepEqual( Stem("cupidité"), "cupid");});
test("cure -> cur", function() {deepEqual( Stem("cure"), "cur");});
test("curé -> cur", function() {deepEqual( Stem("curé"), "cur");});
test("cures -> cur", function() {deepEqual( Stem("cures"), "cur");});
test("curés -> cur", function() {deepEqual( Stem("curés"), "cur");});
test("curieuse -> curieux", function() {deepEqual( Stem("curieuse"), "curieux");});
test("curieusement -> curieux", function() {deepEqual( Stem("curieusement"), "curieux");});
test("curieuses -> curieux", function() {deepEqual( Stem("curieuses"), "curieux");});
test("curieux -> curieux", function() {deepEqual( Stem("curieux"), "curieux");});
test("curiosité -> curios", function() {deepEqual( Stem("curiosité"), "curios");});
test("custom -> custom", function() {deepEqual( Stem("custom"), "custom");});
test("cuves -> cuv", function() {deepEqual( Stem("cuves"), "cuv");});
test("cuvette -> cuvet", function() {deepEqual( Stem("cuvette"), "cuvet");});
test("cygne -> cygn", function() {deepEqual( Stem("cygne"), "cygn");});
test("cymbales -> cymbal", function() {deepEqual( Stem("cymbales"), "cymbal");});
test("cynique -> cyniqu", function() {deepEqual( Stem("cynique"), "cyniqu");});
test("cyr -> cyr", function() {deepEqual( Stem("cyr"), "cyr");});
test("d -> d", function() {deepEqual( Stem("d"), "d");});
test("da -> da", function() {deepEqual( Stem("da"), "da");});
test("dague -> dagu", function() {deepEqual( Stem("dague"), "dagu");});
test("daigna -> daign", function() {deepEqual( Stem("daigna"), "daign");});
test("daignaient -> daign", function() {deepEqual( Stem("daignaient"), "daign");});
test("daignait -> daign", function() {deepEqual( Stem("daignait"), "daign");});
test("daignant -> daign", function() {deepEqual( Stem("daignant"), "daign");});
test("daignât -> daign", function() {deepEqual( Stem("daignât"), "daign");});
test("daigne -> daign", function() {deepEqual( Stem("daigne"), "daign");});
test("daigné -> daign", function() {deepEqual( Stem("daigné"), "daign");});
test("daignent -> daignent", function() {deepEqual( Stem("daignent"), "daignent");});
test("daigner -> daign", function() {deepEqual( Stem("daigner"), "daign");});
test("daignera -> daign", function() {deepEqual( Stem("daignera"), "daign");});
test("daignerait -> daign", function() {deepEqual( Stem("daignerait"), "daign");});
test("daignèrent -> daign", function() {deepEqual( Stem("daignèrent"), "daign");});
test("daignerez -> daign", function() {deepEqual( Stem("daignerez"), "daign");});
test("daignez -> daign", function() {deepEqual( Stem("daignez"), "daign");});
test("daily -> daily", function() {deepEqual( Stem("daily"), "daily");});
test("daim -> daim", function() {deepEqual( Stem("daim"), "daim");});
test("dais -> dais", function() {deepEqual( Stem("dais"), "dais");});
test("dakota -> dakot", function() {deepEqual( Stem("dakota"), "dakot");});
test("dalles -> dall", function() {deepEqual( Stem("dalles"), "dall");});
test("dalliance -> dallianc", function() {deepEqual( Stem("dalliance"), "dallianc");});
test("dalmate -> dalmat", function() {deepEqual( Stem("dalmate"), "dalmat");});
test("damas -> dam", function() {deepEqual( Stem("damas"), "dam");});
test("damasquinés -> damasquin", function() {deepEqual( Stem("damasquinés"), "damasquin");});
test("dame -> dam", function() {deepEqual( Stem("dame"), "dam");});
test("dames -> dam", function() {deepEqual( Stem("dames"), "dam");});
test("damné -> damn", function() {deepEqual( Stem("damné"), "damn");});
test("damnée -> damn", function() {deepEqual( Stem("damnée"), "damn");});
test("damnent -> damnent", function() {deepEqual( Stem("damnent"), "damnent");});
test("damnés -> damn", function() {deepEqual( Stem("damnés"), "damn");});
test("dandin -> dandin", function() {deepEqual( Stem("dandin"), "dandin");});
test("dandinant -> dandin", function() {deepEqual( Stem("dandinant"), "dandin");});
test("dandy -> dandy", function() {deepEqual( Stem("dandy"), "dandy");});
test("dandys -> dandy", function() {deepEqual( Stem("dandys"), "dandy");});
test("danger -> dang", function() {deepEqual( Stem("danger"), "dang");});
test("dangereuse -> danger", function() {deepEqual( Stem("dangereuse"), "danger");});
test("dangereusement -> danger", function() {deepEqual( Stem("dangereusement"), "danger");});
test("dangereuses -> danger", function() {deepEqual( Stem("dangereuses"), "danger");});
test("dangereux -> danger", function() {deepEqual( Stem("dangereux"), "danger");});
test("dangers -> danger", function() {deepEqual( Stem("dangers"), "danger");});
test("dans -> dan", function() {deepEqual( Stem("dans"), "dan");});
test("dansa -> dans", function() {deepEqual( Stem("dansa"), "dans");});
test("dansaient -> dans", function() {deepEqual( Stem("dansaient"), "dans");});
test("dansait -> dans", function() {deepEqual( Stem("dansait"), "dans");});
test("dansant -> dans", function() {deepEqual( Stem("dansant"), "dans");});
test("danse -> dans", function() {deepEqual( Stem("danse"), "dans");});
test("dansé -> dans", function() {deepEqual( Stem("dansé"), "dans");});
test("dansent -> dansent", function() {deepEqual( Stem("dansent"), "dansent");});
test("danser -> dans", function() {deepEqual( Stem("danser"), "dans");});
test("dansèrent -> dans", function() {deepEqual( Stem("dansèrent"), "dans");});
test("danses -> dans", function() {deepEqual( Stem("danses"), "dans");});
test("danseuses -> danseux", function() {deepEqual( Stem("danseuses"), "danseux");});
test("dante -> dant", function() {deepEqual( Stem("dante"), "dant");});
test("danton -> danton", function() {deepEqual( Stem("danton"), "danton");});
test("darkness -> darkness", function() {deepEqual( Stem("darkness"), "darkness");});
test("data -> dat", function() {deepEqual( Stem("data"), "dat");});
test("datait -> dat", function() {deepEqual( Stem("datait"), "dat");});
test("date -> dat", function() {deepEqual( Stem("date"), "dat");});
test("daté -> dat", function() {deepEqual( Stem("daté"), "dat");});
test("datée -> dat", function() {deepEqual( Stem("datée"), "dat");});
test("datées -> dat", function() {deepEqual( Stem("datées"), "dat");});
test("dates -> dat", function() {deepEqual( Stem("dates"), "dat");});
test("dattiers -> datti", function() {deepEqual( Stem("dattiers"), "datti");});
test("davantage -> davantag", function() {deepEqual( Stem("davantage"), "davantag");});
test("davenport -> davenport", function() {deepEqual( Stem("davenport"), "davenport");});
test("davide -> david", function() {deepEqual( Stem("davide"), "david");});
test("day -> day", function() {deepEqual( Stem("day"), "day");});
test("days -> day", function() {deepEqual( Stem("days"), "day");});
test("de -> de", function() {deepEqual( Stem("de"), "de");});
test("dé -> dé", function() {deepEqual( Stem("dé"), "dé");});
test("débarqua -> débarqu", function() {deepEqual( Stem("débarqua"), "débarqu");});
test("débarquaient -> débarqu", function() {deepEqual( Stem("débarquaient"), "débarqu");});
test("débarquait -> débarqu", function() {deepEqual( Stem("débarquait"), "débarqu");});
test("débarquant -> débarqu", function() {deepEqual( Stem("débarquant"), "débarqu");});
test("débarque -> débarqu", function() {deepEqual( Stem("débarque"), "débarqu");});
test("débarqué -> débarqu", function() {deepEqual( Stem("débarqué"), "débarqu");});
test("débarquement -> débarqu", function() {deepEqual( Stem("débarquement"), "débarqu");});
test("débarquer -> débarqu", function() {deepEqual( Stem("débarquer"), "débarqu");});
test("débarquèrent -> débarqu", function() {deepEqual( Stem("débarquèrent"), "débarqu");});
test("débarrassé -> débarrass", function() {deepEqual( Stem("débarrassé"), "débarrass");});
test("débarrassée -> débarrass", function() {deepEqual( Stem("débarrassée"), "débarrass");});
test("débarrasser -> débarrass", function() {deepEqual( Stem("débarrasser"), "débarrass");});
test("débarrassés -> débarrass", function() {deepEqual( Stem("débarrassés"), "débarrass");});
test("débarrassez -> débarrass", function() {deepEqual( Stem("débarrassez"), "débarrass");});
test("débat -> débat", function() {deepEqual( Stem("débat"), "débat");});
test("débats -> débat", function() {deepEqual( Stem("débats"), "débat");});
test("débattait -> débatt", function() {deepEqual( Stem("débattait"), "débatt");});
test("débattant -> débatt", function() {deepEqual( Stem("débattant"), "débatt");});
test("débattrais -> débattr", function() {deepEqual( Stem("débattrais"), "débattr");});
test("débattre -> débattr", function() {deepEqual( Stem("débattre"), "débattr");});
test("débattue -> débattu", function() {deepEqual( Stem("débattue"), "débattu");});
test("débauche -> débauch", function() {deepEqual( Stem("débauche"), "débauch");});
test("debile -> debil", function() {deepEqual( Stem("debile"), "debil");});
test("débit -> deb", function() {deepEqual( Stem("débit"), "deb");});
test("débita -> débit", function() {deepEqual( Stem("débita"), "débit");});
test("débitaient -> débit", function() {deepEqual( Stem("débitaient"), "débit");});
test("débitant -> débit", function() {deepEqual( Stem("débitant"), "débit");});
test("débite -> débit", function() {deepEqual( Stem("débite"), "débit");});
test("débitées -> débit", function() {deepEqual( Stem("débitées"), "débit");});
test("débiter -> débit", function() {deepEqual( Stem("débiter"), "débit");});
test("débiteur -> débiteur", function() {deepEqual( Stem("débiteur"), "débiteur");});
test("débonnaireté -> débonnairet", function() {deepEqual( Stem("débonnaireté"), "débonnairet");});
test("débordait -> débord", function() {deepEqual( Stem("débordait"), "débord");});
test("débordé -> débord", function() {deepEqual( Stem("débordé"), "débord");});
test("déborder -> débord", function() {deepEqual( Stem("déborder"), "débord");});
test("débouchaient -> débouch", function() {deepEqual( Stem("débouchaient"), "débouch");});
test("débouche -> débouch", function() {deepEqual( Stem("débouche"), "débouch");});
test("déboucher -> débouch", function() {deepEqual( Stem("déboucher"), "débouch");});
test("déboursé -> débours", function() {deepEqual( Stem("déboursé"), "débours");});
test("debout -> debout", function() {deepEqual( Stem("debout"), "debout");});
test("débrider -> débrid", function() {deepEqual( Stem("débrider"), "débrid");});
test("débris -> debr", function() {deepEqual( Stem("débris"), "debr");});
test("débrouillée -> débrouill", function() {deepEqual( Stem("débrouillée"), "débrouill");});
test("débrouiller -> débrouill", function() {deepEqual( Stem("débrouiller"), "débrouill");});
test("début -> début", function() {deepEqual( Stem("début"), "début");});
test("débuta -> début", function() {deepEqual( Stem("débuta"), "début");});
test("débute -> début", function() {deepEqual( Stem("débute"), "début");});
test("débuté -> début", function() {deepEqual( Stem("débuté"), "début");});
test("débuter -> début", function() {deepEqual( Stem("débuter"), "début");});
test("décachetait -> décachet", function() {deepEqual( Stem("décachetait"), "décachet");});
test("décachetée -> décachet", function() {deepEqual( Stem("décachetée"), "décachet");});
test("décachetées -> décachet", function() {deepEqual( Stem("décachetées"), "décachet");});
test("décadence -> décadent", function() {deepEqual( Stem("décadence"), "décadent");});
test("décampa -> décamp", function() {deepEqual( Stem("décampa"), "décamp");});
test("décampe -> décamp", function() {deepEqual( Stem("décampe"), "décamp");});
test("décampé -> décamp", function() {deepEqual( Stem("décampé"), "décamp");});
test("décamper -> décamp", function() {deepEqual( Stem("décamper"), "décamp");});
test("décampons -> décampon", function() {deepEqual( Stem("décampons"), "décampon");});
test("décapité -> décap", function() {deepEqual( Stem("décapité"), "décap");});
test("décelât -> décel", function() {deepEqual( Stem("décelât"), "décel");});
test("décembre -> décembr", function() {deepEqual( Stem("décembre"), "décembr");});
test("décemment -> décent", function() {deepEqual( Stem("décemment"), "décent");});
test("décence -> décenc", function() {deepEqual( Stem("décence"), "décenc");});
test("décent -> décent", function() {deepEqual( Stem("décent"), "décent");});
test("décente -> décent", function() {deepEqual( Stem("décente"), "décent");});
test("décents -> décent", function() {deepEqual( Stem("décents"), "décent");});
test("déceptions -> décept", function() {deepEqual( Stem("déceptions"), "décept");});
test("décès -> déces", function() {deepEqual( Stem("décès"), "déces");});
test("déchaînait -> déchaîn", function() {deepEqual( Stem("déchaînait"), "déchaîn");});
test("déchaînât -> déchaîn", function() {deepEqual( Stem("déchaînât"), "déchaîn");});
test("déchaînement -> déchaîn", function() {deepEqual( Stem("déchaînement"), "déchaîn");});
test("déchaîner -> déchaîn", function() {deepEqual( Stem("déchaîner"), "déchaîn");});
test("décharge -> décharg", function() {deepEqual( Stem("décharge"), "décharg");});
test("déchargement -> décharg", function() {deepEqual( Stem("déchargement"), "décharg");});
test("décharger -> décharg", function() {deepEqual( Stem("décharger"), "décharg");});
test("décharges -> décharg", function() {deepEqual( Stem("décharges"), "décharg");});
test("déchira -> dech", function() {deepEqual( Stem("déchira"), "dech");});
test("déchiraient -> dech", function() {deepEqual( Stem("déchiraient"), "dech");});
test("déchirait -> dech", function() {deepEqual( Stem("déchirait"), "dech");});
test("déchirant -> déchir", function() {deepEqual( Stem("déchirant"), "déchir");});
test("déchire -> déchir", function() {deepEqual( Stem("déchire"), "déchir");});
test("déchiré -> déchir", function() {deepEqual( Stem("déchiré"), "déchir");});
test("déchirée -> déchir", function() {deepEqual( Stem("déchirée"), "déchir");});
test("déchirées -> déchir", function() {deepEqual( Stem("déchirées"), "déchir");});
test("déchirements -> déchir", function() {deepEqual( Stem("déchirements"), "déchir");});
test("déchirer -> déchir", function() {deepEqual( Stem("déchirer"), "déchir");});
test("déchirés -> déchir", function() {deepEqual( Stem("déchirés"), "déchir");});
test("déchirures -> déchirur", function() {deepEqual( Stem("déchirures"), "déchirur");});
test("déchoir -> déchoir", function() {deepEqual( Stem("déchoir"), "déchoir");});
test("déchu -> déchu", function() {deepEqual( Stem("déchu"), "déchu");});
test("décida -> décid", function() {deepEqual( Stem("décida"), "décid");});
test("décidaient -> décid", function() {deepEqual( Stem("décidaient"), "décid");});
test("décidait -> décid", function() {deepEqual( Stem("décidait"), "décid");});
test("décidant -> décid", function() {deepEqual( Stem("décidant"), "décid");});
test("décide -> décid", function() {deepEqual( Stem("décide"), "décid");});
test("décidé -> décid", function() {deepEqual( Stem("décidé"), "décid");});
test("décidée -> décid", function() {deepEqual( Stem("décidée"), "décid");});
test("décidées -> décid", function() {deepEqual( Stem("décidées"), "décid");});
test("décidément -> décid", function() {deepEqual( Stem("décidément"), "décid");});
test("décident -> décident", function() {deepEqual( Stem("décident"), "décident");});
test("décider -> décid", function() {deepEqual( Stem("décider"), "décid");});
test("décidera -> décid", function() {deepEqual( Stem("décidera"), "décid");});
test("déciderait -> décid", function() {deepEqual( Stem("déciderait"), "décid");});
test("décidèrent -> décid", function() {deepEqual( Stem("décidèrent"), "décid");});
test("déciderez -> décid", function() {deepEqual( Stem("déciderez"), "décid");});
test("décimus -> décimus", function() {deepEqual( Stem("décimus"), "décimus");});
test("décisif -> décis", function() {deepEqual( Stem("décisif"), "décis");});
test("décision -> décis", function() {deepEqual( Stem("décision"), "décis");});
test("décisions -> décis", function() {deepEqual( Stem("décisions"), "décis");});
test("décisive -> décis", function() {deepEqual( Stem("décisive"), "décis");});
test("décius -> décius", function() {deepEqual( Stem("décius"), "décius");});
test("déclamer -> déclam", function() {deepEqual( Stem("déclamer"), "déclam");});
test("déclara -> déclar", function() {deepEqual( Stem("déclara"), "déclar");});
test("déclarait -> déclar", function() {deepEqual( Stem("déclarait"), "déclar");});
test("déclarant -> déclar", function() {deepEqual( Stem("déclarant"), "déclar");});
test("déclaration -> déclar", function() {deepEqual( Stem("déclaration"), "déclar");});
test("déclarations -> déclar", function() {deepEqual( Stem("déclarations"), "déclar");});
test("déclare -> déclar", function() {deepEqual( Stem("déclare"), "déclar");});
test("déclaré -> déclar", function() {deepEqual( Stem("déclaré"), "déclar");});
test("déclarée -> déclar", function() {deepEqual( Stem("déclarée"), "déclar");});
test("déclarer -> déclar", function() {deepEqual( Stem("déclarer"), "déclar");});
test("déclarerait -> déclar", function() {deepEqual( Stem("déclarerait"), "déclar");});
test("déclarèrent -> déclar", function() {deepEqual( Stem("déclarèrent"), "déclar");});
test("déclarés -> déclar", function() {deepEqual( Stem("déclarés"), "déclar");});
test("déclarez -> déclar", function() {deepEqual( Stem("déclarez"), "déclar");});
test("déclassés -> déclass", function() {deepEqual( Stem("déclassés"), "déclass");});
test("décoloré -> décolor", function() {deepEqual( Stem("décoloré"), "décolor");});
test("décolorée -> décolor", function() {deepEqual( Stem("décolorée"), "décolor");});
test("décolorées -> décolor", function() {deepEqual( Stem("décolorées"), "décolor");});
test("décomposition -> décomposit", function() {deepEqual( Stem("décomposition"), "décomposit");});
test("déconcerta -> déconcert", function() {deepEqual( Stem("déconcerta"), "déconcert");});
test("déconcertait -> déconcert", function() {deepEqual( Stem("déconcertait"), "déconcert");});
test("déconcerté -> déconcert", function() {deepEqual( Stem("déconcerté"), "déconcert");});
test("déconcertée -> déconcert", function() {deepEqual( Stem("déconcertée"), "déconcert");});
test("déconcerter -> déconcert", function() {deepEqual( Stem("déconcerter"), "déconcert");});
test("déconcertés -> déconcert", function() {deepEqual( Stem("déconcertés"), "déconcert");});
test("déconfit -> déconf", function() {deepEqual( Stem("déconfit"), "déconf");});
test("décontenancé -> décontenanc", function() {deepEqual( Stem("décontenancé"), "décontenanc");});
test("déconvenues -> déconvenu", function() {deepEqual( Stem("déconvenues"), "déconvenu");});
test("décorateur -> décor", function() {deepEqual( Stem("décorateur"), "décor");});
test("décoration -> décor", function() {deepEqual( Stem("décoration"), "décor");});
test("décore -> décor", function() {deepEqual( Stem("décore"), "décor");});
test("décoré -> décor", function() {deepEqual( Stem("décoré"), "décor");});
test("décorée -> décor", function() {deepEqual( Stem("décorée"), "décor");});
test("décorum -> décorum", function() {deepEqual( Stem("décorum"), "décorum");});
test("découchait -> découch", function() {deepEqual( Stem("découchait"), "découch");});
test("découpait -> découp", function() {deepEqual( Stem("découpait"), "découp");});
test("découpant -> découp", function() {deepEqual( Stem("découpant"), "découp");});
test("découpés -> découp", function() {deepEqual( Stem("découpés"), "découp");});
test("découragé -> décourag", function() {deepEqual( Stem("découragé"), "décourag");});
test("découragement -> décourag", function() {deepEqual( Stem("découragement"), "décourag");});
test("découragements -> décourag", function() {deepEqual( Stem("découragements"), "décourag");});
test("décourager -> décourag", function() {deepEqual( Stem("décourager"), "décourag");});
test("décousus -> décousus", function() {deepEqual( Stem("décousus"), "décousus");});
test("découvert -> découvert", function() {deepEqual( Stem("découvert"), "découvert");});
test("découverte -> découvert", function() {deepEqual( Stem("découverte"), "découvert");});
test("découvertes -> découvert", function() {deepEqual( Stem("découvertes"), "découvert");});
test("découverts -> découvert", function() {deepEqual( Stem("découverts"), "découvert");});
test("découvrait -> découvr", function() {deepEqual( Stem("découvrait"), "découvr");});
test("découvrant -> découvr", function() {deepEqual( Stem("découvrant"), "découvr");});
test("découvre -> découvr", function() {deepEqual( Stem("découvre"), "découvr");});
test("découvrir -> découvr", function() {deepEqual( Stem("découvrir"), "découvr");});
test("découvrira -> découvr", function() {deepEqual( Stem("découvrira"), "découvr");});
test("découvrirent -> découvr", function() {deepEqual( Stem("découvrirent"), "découvr");});
test("découvrit -> découvr", function() {deepEqual( Stem("découvrit"), "découvr");});
test("décrépitude -> décrépitud", function() {deepEqual( Stem("décrépitude"), "décrépitud");});
test("décret -> décret", function() {deepEqual( Stem("décret"), "décret");});
test("décrets -> décret", function() {deepEqual( Stem("décrets"), "décret");});
test("décrire -> décrir", function() {deepEqual( Stem("décrire"), "décrir");});
test("décrit -> decr", function() {deepEqual( Stem("décrit"), "decr");});
test("décrivaient -> décriv", function() {deepEqual( Stem("décrivaient"), "décriv");});
test("décrivait -> décriv", function() {deepEqual( Stem("décrivait"), "décriv");});
test("décrivant -> décriv", function() {deepEqual( Stem("décrivant"), "décriv");});
test("décrocha -> décroch", function() {deepEqual( Stem("décrocha"), "décroch");});
test("dédaignant -> dédaign", function() {deepEqual( Stem("dédaignant"), "dédaign");});
test("dédaignée -> dédaign", function() {deepEqual( Stem("dédaignée"), "dédaign");});
test("dédaigneuse -> dédaign", function() {deepEqual( Stem("dédaigneuse"), "dédaign");});
test("dédaigneux -> dédaign", function() {deepEqual( Stem("dédaigneux"), "dédaign");});
test("dédain -> dédain", function() {deepEqual( Stem("dédain"), "dédain");});
test("dédains -> dédain", function() {deepEqual( Stem("dédains"), "dédain");});
test("dedans -> dedan", function() {deepEqual( Stem("dedans"), "dedan");});
test("dédommageait -> dédommag", function() {deepEqual( Stem("dédommageait"), "dédommag");});
test("dédommagement -> dédommag", function() {deepEqual( Stem("dédommagement"), "dédommag");});
test("dédommagent -> dédommagent", function() {deepEqual( Stem("dédommagent"), "dédommagent");});
test("dédommagerez -> dédommag", function() {deepEqual( Stem("dédommagerez"), "dédommag");});
test("déduire -> déduir", function() {deepEqual( Stem("déduire"), "déduir");});
test("déduisit -> déduis", function() {deepEqual( Stem("déduisit"), "déduis");});
test("deem -> deem", function() {deepEqual( Stem("deem"), "deem");});
test("deeper -> deep", function() {deepEqual( Stem("deeper"), "deep");});
test("déesse -> déess", function() {deepEqual( Stem("déesse"), "déess");});
test("défaillante -> défaill", function() {deepEqual( Stem("défaillante"), "défaill");});
test("défaillir -> défaill", function() {deepEqual( Stem("défaillir"), "défaill");});
test("défaire -> défair", function() {deepEqual( Stem("défaire"), "défair");});
test("défais -> def", function() {deepEqual( Stem("défais"), "def");});
test("défaisait -> défais", function() {deepEqual( Stem("défaisait"), "défais");});
test("défait -> def", function() {deepEqual( Stem("défait"), "def");});
test("défaite -> défait", function() {deepEqual( Stem("défaite"), "défait");});
test("défaites -> défait", function() {deepEqual( Stem("défaites"), "défait");});
test("défasse -> def", function() {deepEqual( Stem("défasse"), "def");});
test("défaut -> défaut", function() {deepEqual( Stem("défaut"), "défaut");});
test("défauts -> défaut", function() {deepEqual( Stem("défauts"), "défaut");});
test("défaveur -> défaveur", function() {deepEqual( Stem("défaveur"), "défaveur");});
test("défavorable -> défavor", function() {deepEqual( Stem("défavorable"), "défavor");});
test("défection -> défect", function() {deepEqual( Stem("défection"), "défect");});
test("défend -> défend", function() {deepEqual( Stem("défend"), "défend");});
test("défendaient -> défend", function() {deepEqual( Stem("défendaient"), "défend");});
test("défendait -> défend", function() {deepEqual( Stem("défendait"), "défend");});
test("défendant -> défend", function() {deepEqual( Stem("défendant"), "défend");});
test("défende -> défend", function() {deepEqual( Stem("défende"), "défend");});
test("défendent -> défendent", function() {deepEqual( Stem("défendent"), "défendent");});
test("défendez -> défend", function() {deepEqual( Stem("défendez"), "défend");});
test("défendit -> défend", function() {deepEqual( Stem("défendit"), "défend");});
test("défendons -> défendon", function() {deepEqual( Stem("défendons"), "défendon");});
test("défendre -> défendr", function() {deepEqual( Stem("défendre"), "défendr");});
test("défends -> défend", function() {deepEqual( Stem("défends"), "défend");});
test("défendu -> défendu", function() {deepEqual( Stem("défendu"), "défendu");});
test("défendue -> défendu", function() {deepEqual( Stem("défendue"), "défendu");});
test("défendues -> défendu", function() {deepEqual( Stem("défendues"), "défendu");});
test("défense -> défens", function() {deepEqual( Stem("défense"), "défens");});
test("défenses -> défens", function() {deepEqual( Stem("défenses"), "défens");});
test("défenseurs -> défenseur", function() {deepEqual( Stem("défenseurs"), "défenseur");});
test("défensive -> défens", function() {deepEqual( Stem("défensive"), "défens");});
test("déferai -> def", function() {deepEqual( Stem("déferai"), "def");});
test("déférence -> déférent", function() {deepEqual( Stem("déférence"), "déférent");});
test("défiait -> défi", function() {deepEqual( Stem("défiait"), "défi");});
test("défiance -> défianc", function() {deepEqual( Stem("défiance"), "défianc");});
test("défiant -> défi", function() {deepEqual( Stem("défiant"), "défi");});
test("défie -> def", function() {deepEqual( Stem("défie"), "def");});
test("défigurait -> défigur", function() {deepEqual( Stem("défigurait"), "défigur");});
test("défiguré -> défigur", function() {deepEqual( Stem("défiguré"), "défigur");});
test("défila -> défil", function() {deepEqual( Stem("défila"), "défil");});
test("défilé -> défil", function() {deepEqual( Stem("défilé"), "défil");});
test("défiler -> défil", function() {deepEqual( Stem("défiler"), "défil");});
test("défilés -> défil", function() {deepEqual( Stem("défilés"), "défil");});
test("définissable -> définiss", function() {deepEqual( Stem("définissable"), "définiss");});
test("définitive -> définit", function() {deepEqual( Stem("définitive"), "définit");});
test("définitivement -> définit", function() {deepEqual( Stem("définitivement"), "définit");});
test("défit -> def", function() {deepEqual( Stem("défit"), "def");});
test("défoncèrent -> défonc", function() {deepEqual( Stem("défoncèrent"), "défonc");});
test("défroque -> défroqu", function() {deepEqual( Stem("défroque"), "défroqu");});
test("défunt -> défunt", function() {deepEqual( Stem("défunt"), "défunt");});
test("dégagé -> dégag", function() {deepEqual( Stem("dégagé"), "dégag");});
test("dégagea -> dégag", function() {deepEqual( Stem("dégagea"), "dégag");});
test("dégagée -> dégag", function() {deepEqual( Stem("dégagée"), "dégag");});
test("dégagement -> dégag", function() {deepEqual( Stem("dégagement"), "dégag");});
test("dégager -> dégag", function() {deepEqual( Stem("dégager"), "dégag");});
test("dégât -> deg", function() {deepEqual( Stem("dégât"), "deg");});
test("dégénéré -> dégéner", function() {deepEqual( Stem("dégénéré"), "dégéner");});
test("dégoût -> dégoût", function() {deepEqual( Stem("dégoût"), "dégoût");});
test("dégoûtant -> dégoût", function() {deepEqual( Stem("dégoûtant"), "dégoût");});
test("dégoûtante -> dégoût", function() {deepEqual( Stem("dégoûtante"), "dégoût");});
test("dégoûté -> dégoût", function() {deepEqual( Stem("dégoûté"), "dégoût");});
test("dégoûtée -> dégoût", function() {deepEqual( Stem("dégoûtée"), "dégoût");});
test("dégradée -> dégrad", function() {deepEqual( Stem("dégradée"), "dégrad");});
test("dégradent -> dégradent", function() {deepEqual( Stem("dégradent"), "dégradent");});
test("dégrader -> dégrad", function() {deepEqual( Stem("dégrader"), "dégrad");});
test("degré -> degr", function() {deepEqual( Stem("degré"), "degr");});
test("degrés -> degr", function() {deepEqual( Stem("degrés"), "degr");});
test("dégrisa -> dégris", function() {deepEqual( Stem("dégrisa"), "dégris");});
test("déguenillée -> déguenill", function() {deepEqual( Stem("déguenillée"), "déguenill");});
test("déguerpir -> déguerp", function() {deepEqual( Stem("déguerpir"), "déguerp");});
test("déguisa -> déguis", function() {deepEqual( Stem("déguisa"), "déguis");});
test("déguisait -> déguis", function() {deepEqual( Stem("déguisait"), "déguis");});
test("déguise -> déguis", function() {deepEqual( Stem("déguise"), "déguis");});
test("déguisé -> déguis", function() {deepEqual( Stem("déguisé"), "déguis");});
test("déguisée -> déguis", function() {deepEqual( Stem("déguisée"), "déguis");});
test("déguisement -> déguis", function() {deepEqual( Stem("déguisement"), "déguis");});
test("déguiser -> déguis", function() {deepEqual( Stem("déguiser"), "déguis");});
test("déguisèrent -> déguis", function() {deepEqual( Stem("déguisèrent"), "déguis");});
test("déguisés -> déguis", function() {deepEqual( Stem("déguisés"), "déguis");});
test("dehors -> dehor", function() {deepEqual( Stem("dehors"), "dehor");});
test("déjà -> déjà", function() {deepEqual( Stem("déjà"), "déjà");});
test("déjetées -> déjet", function() {deepEqual( Stem("déjetées"), "déjet");});
test("déjeuna -> déjeun", function() {deepEqual( Stem("déjeuna"), "déjeun");});
test("déjeunait -> déjeun", function() {deepEqual( Stem("déjeunait"), "déjeun");});
test("déjeunant -> déjeun", function() {deepEqual( Stem("déjeunant"), "déjeun");});
test("déjeuné -> déjeun", function() {deepEqual( Stem("déjeuné"), "déjeun");});
test("déjeuner -> déjeun", function() {deepEqual( Stem("déjeuner"), "déjeun");});
test("déjeunèrent -> déjeun", function() {deepEqual( Stem("déjeunèrent"), "déjeun");});
test("déjeunons -> déjeunon", function() {deepEqual( Stem("déjeunons"), "déjeunon");});
test("déjouer -> déjou", function() {deepEqual( Stem("déjouer"), "déjou");});
test("déjoués -> déjou", function() {deepEqual( Stem("déjoués"), "déjou");});
test("del -> del", function() {deepEqual( Stem("del"), "del");});
test("delà -> delà", function() {deepEqual( Stem("delà"), "delà");});
test("délabré -> délabr", function() {deepEqual( Stem("délabré"), "délabr");});
test("délabrée -> délabr", function() {deepEqual( Stem("délabrée"), "délabr");});
test("délabrement -> délabr", function() {deepEqual( Stem("délabrement"), "délabr");});
test("délai -> del", function() {deepEqual( Stem("délai"), "del");});
test("délais -> del", function() {deepEqual( Stem("délais"), "del");});
test("délaissé -> délaiss", function() {deepEqual( Stem("délaissé"), "délaiss");});
test("délasser -> délass", function() {deepEqual( Stem("délasser"), "délass");});
test("délations -> délat", function() {deepEqual( Stem("délations"), "délat");});
test("delavigne -> delavign", function() {deepEqual( Stem("delavigne"), "delavign");});
test("délayé -> délai", function() {deepEqual( Stem("délayé"), "délai");});
test("délégation -> déleg", function() {deepEqual( Stem("délégation"), "déleg");});
test("délibéra -> déliber", function() {deepEqual( Stem("délibéra"), "déliber");});
test("délibération -> déliber", function() {deepEqual( Stem("délibération"), "déliber");});
test("délibérer -> déliber", function() {deepEqual( Stem("délibérer"), "déliber");});
test("délibérons -> délibéron", function() {deepEqual( Stem("délibérons"), "délibéron");});
test("délicat -> délicat", function() {deepEqual( Stem("délicat"), "délicat");});
test("délicate -> délicat", function() {deepEqual( Stem("délicate"), "délicat");});
test("délicates -> délicat", function() {deepEqual( Stem("délicates"), "délicat");});
test("délicatesse -> délicatess", function() {deepEqual( Stem("délicatesse"), "délicatess");});
test("délicats -> délicat", function() {deepEqual( Stem("délicats"), "délicat");});
test("délices -> délic", function() {deepEqual( Stem("délices"), "délic");});
test("délicieuse -> délici", function() {deepEqual( Stem("délicieuse"), "délici");});
test("délicieusement -> délici", function() {deepEqual( Stem("délicieusement"), "délici");});
test("délicieuses -> délici", function() {deepEqual( Stem("délicieuses"), "délici");});
test("délicieux -> délici", function() {deepEqual( Stem("délicieux"), "délici");});
test("délier -> déli", function() {deepEqual( Stem("délier"), "déli");});
test("delille -> delill", function() {deepEqual( Stem("delille"), "delill");});
test("délire -> délir", function() {deepEqual( Stem("délire"), "délir");});
test("délit -> del", function() {deepEqual( Stem("délit"), "del");});
test("délivra -> délivr", function() {deepEqual( Stem("délivra"), "délivr");});
test("délivrance -> délivr", function() {deepEqual( Stem("délivrance"), "délivr");});
test("délivre -> délivr", function() {deepEqual( Stem("délivre"), "délivr");});
test("délivré -> délivr", function() {deepEqual( Stem("délivré"), "délivr");});
test("délivrée -> délivr", function() {deepEqual( Stem("délivrée"), "délivr");});
test("délivrer -> délivr", function() {deepEqual( Stem("délivrer"), "délivr");});
test("délivrera -> délivr", function() {deepEqual( Stem("délivrera"), "délivr");});
test("dell -> del", function() {deepEqual( Stem("dell"), "del");});
test("della -> del", function() {deepEqual( Stem("della"), "del");});
test("demain -> demain", function() {deepEqual( Stem("demain"), "demain");});
test("demanda -> demand", function() {deepEqual( Stem("demanda"), "demand");});
test("demandai -> demand", function() {deepEqual( Stem("demandai"), "demand");});
test("demandaient -> demand", function() {deepEqual( Stem("demandaient"), "demand");});
test("demandais -> demand", function() {deepEqual( Stem("demandais"), "demand");});
test("demandait -> demand", function() {deepEqual( Stem("demandait"), "demand");});
test("demandant -> demand", function() {deepEqual( Stem("demandant"), "demand");});
test("demande -> demand", function() {deepEqual( Stem("demande"), "demand");});
test("demandé -> demand", function() {deepEqual( Stem("demandé"), "demand");});
test("demandée -> demand", function() {deepEqual( Stem("demandée"), "demand");});
test("demandées -> demand", function() {deepEqual( Stem("demandées"), "demand");});
test("demander -> demand", function() {deepEqual( Stem("demander"), "demand");});
test("demandera -> demand", function() {deepEqual( Stem("demandera"), "demand");});
test("demanderai -> demand", function() {deepEqual( Stem("demanderai"), "demand");});
test("demanderaient -> demand", function() {deepEqual( Stem("demanderaient"), "demand");});
test("demanderait -> demand", function() {deepEqual( Stem("demanderait"), "demand");});
test("demandèrent -> demand", function() {deepEqual( Stem("demandèrent"), "demand");});
test("demanderont -> demand", function() {deepEqual( Stem("demanderont"), "demand");});
test("demandes -> demand", function() {deepEqual( Stem("demandes"), "demand");});
test("demandés -> demand", function() {deepEqual( Stem("demandés"), "demand");});
test("demandez -> demand", function() {deepEqual( Stem("demandez"), "demand");});
test("demandiez -> demand", function() {deepEqual( Stem("demandiez"), "demand");});
test("demandons -> demandon", function() {deepEqual( Stem("demandons"), "demandon");});
test("démantelé -> démantel", function() {deepEqual( Stem("démantelé"), "démantel");});
test("démarche -> démarch", function() {deepEqual( Stem("démarche"), "démarch");});
test("démarches -> démarch", function() {deepEqual( Stem("démarches"), "démarch");});
test("démarquer -> démarqu", function() {deepEqual( Stem("démarquer"), "démarqu");});
test("démasquer -> démasqu", function() {deepEqual( Stem("démasquer"), "démasqu");});
test("démêloir -> démêloir", function() {deepEqual( Stem("démêloir"), "démêloir");});
test("déménager -> déménag", function() {deepEqual( Stem("déménager"), "déménag");});
test("démenaient -> démen", function() {deepEqual( Stem("démenaient"), "démen");});
test("démenait -> démen", function() {deepEqual( Stem("démenait"), "démen");});
test("démenti -> dément", function() {deepEqual( Stem("démenti"), "dément");});
test("démentir -> dément", function() {deepEqual( Stem("démentir"), "dément");});
test("démentis -> dément", function() {deepEqual( Stem("démentis"), "dément");});
test("démesurée -> démesur", function() {deepEqual( Stem("démesurée"), "démesur");});
test("demesurement -> demesur", function() {deepEqual( Stem("demesurement"), "demesur");});
test("démesurément -> démesur", function() {deepEqual( Stem("démesurément"), "démesur");});
test("demeura -> demeur", function() {deepEqual( Stem("demeura"), "demeur");});
test("demeurait -> demeur", function() {deepEqual( Stem("demeurait"), "demeur");});
test("demeure -> demeur", function() {deepEqual( Stem("demeure"), "demeur");});
test("demeuré -> demeur", function() {deepEqual( Stem("demeuré"), "demeur");});
test("demeurer -> demeur", function() {deepEqual( Stem("demeurer"), "demeur");});
test("demeurerait -> demeur", function() {deepEqual( Stem("demeurerait"), "demeur");});
test("demeurèrent -> demeur", function() {deepEqual( Stem("demeurèrent"), "demeur");});
test("demeurés -> demeur", function() {deepEqual( Stem("demeurés"), "demeur");});
test("demi -> dem", function() {deepEqual( Stem("demi"), "dem");});
test("demie -> dem", function() {deepEqual( Stem("demie"), "dem");});
test("démission -> démiss", function() {deepEqual( Stem("démission"), "démiss");});
test("démit -> dem", function() {deepEqual( Stem("démit"), "dem");});
test("demoiselle -> demoisel", function() {deepEqual( Stem("demoiselle"), "demoisel");});
test("demoiselles -> demoisel", function() {deepEqual( Stem("demoiselles"), "demoisel");});
test("démolir -> démol", function() {deepEqual( Stem("démolir"), "démol");});
test("démolissent -> démol", function() {deepEqual( Stem("démolissent"), "démol");});
test("démolition -> démolit", function() {deepEqual( Stem("démolition"), "démolit");});
test("démon -> démon", function() {deepEqual( Stem("démon"), "démon");});
test("démonstration -> démonstr", function() {deepEqual( Stem("démonstration"), "démonstr");});
test("démonté -> démont", function() {deepEqual( Stem("démonté"), "démont");});
test("démontée -> démont", function() {deepEqual( Stem("démontée"), "démont");});
test("démonter -> démont", function() {deepEqual( Stem("démonter"), "démont");});
test("démontés -> démont", function() {deepEqual( Stem("démontés"), "démont");});
test("démontra -> démontr", function() {deepEqual( Stem("démontra"), "démontr");});
test("démontrait -> démontr", function() {deepEqual( Stem("démontrait"), "démontr");});
test("démontré -> démontr", function() {deepEqual( Stem("démontré"), "démontr");});
test("dénaturée -> dénatur", function() {deepEqual( Stem("dénaturée"), "dénatur");});
test("deniers -> deni", function() {deepEqual( Stem("deniers"), "deni");});
test("dénigrement -> dénigr", function() {deepEqual( Stem("dénigrement"), "dénigr");});
test("dénomination -> dénomin", function() {deepEqual( Stem("dénomination"), "dénomin");});
test("dénonçait -> dénonc", function() {deepEqual( Stem("dénonçait"), "dénonc");});
test("dénonce -> dénonc", function() {deepEqual( Stem("dénonce"), "dénonc");});
test("dénoncé -> dénonc", function() {deepEqual( Stem("dénoncé"), "dénonc");});
test("dénoncer -> dénonc", function() {deepEqual( Stem("dénoncer"), "dénonc");});
test("dénoncera -> dénonc", function() {deepEqual( Stem("dénoncera"), "dénonc");});
test("dénoncez -> dénonc", function() {deepEqual( Stem("dénoncez"), "dénonc");});
test("dénonciateur -> dénonci", function() {deepEqual( Stem("dénonciateur"), "dénonci");});
test("dénonciation -> dénonci", function() {deepEqual( Stem("dénonciation"), "dénonci");});
test("dénonciations -> dénonci", function() {deepEqual( Stem("dénonciations"), "dénonci");});
test("dénotaient -> dénot", function() {deepEqual( Stem("dénotaient"), "dénot");});
test("dénotait -> dénot", function() {deepEqual( Stem("dénotait"), "dénot");});
test("dénoter -> dénot", function() {deepEqual( Stem("dénoter"), "dénot");});
test("dénouement -> dénou", function() {deepEqual( Stem("dénouement"), "dénou");});
test("dénoûment -> dénoû", function() {deepEqual( Stem("dénoûment"), "dénoû");});
test("densité -> densit", function() {deepEqual( Stem("densité"), "densit");});
test("dent -> dent", function() {deepEqual( Stem("dent"), "dent");});
test("dentelle -> dentel", function() {deepEqual( Stem("dentelle"), "dentel");});
test("dentelles -> dentel", function() {deepEqual( Stem("dentelles"), "dentel");});
test("dents -> dent", function() {deepEqual( Stem("dents"), "dent");});
test("dénué -> dénu", function() {deepEqual( Stem("dénué"), "dénu");});
test("dénuées -> dénu", function() {deepEqual( Stem("dénuées"), "dénu");});
test("denver -> denv", function() {deepEqual( Stem("denver"), "denv");});
test("deo -> deo", function() {deepEqual( Stem("deo"), "deo");});
test("déparait -> dépar", function() {deepEqual( Stem("déparait"), "dépar");});
test("déparant -> dépar", function() {deepEqual( Stem("déparant"), "dépar");});
test("déparée -> dépar", function() {deepEqual( Stem("déparée"), "dépar");});
test("dépareillé -> dépareil", function() {deepEqual( Stem("dépareillé"), "dépareil");});
test("départ -> départ", function() {deepEqual( Stem("départ"), "départ");});
test("département -> départ", function() {deepEqual( Stem("département"), "départ");});
test("dépassaient -> dépass", function() {deepEqual( Stem("dépassaient"), "dépass");});
test("dépassait -> dépass", function() {deepEqual( Stem("dépassait"), "dépass");});
test("dépasse -> dep", function() {deepEqual( Stem("dépasse"), "dep");});
test("dépassé -> dépass", function() {deepEqual( Stem("dépassé"), "dépass");});
test("dépassées -> dépass", function() {deepEqual( Stem("dépassées"), "dépass");});
test("dépasser -> dépass", function() {deepEqual( Stem("dépasser"), "dépass");});
test("dépassés -> dépass", function() {deepEqual( Stem("dépassés"), "dépass");});
test("dépêcha -> dépêch", function() {deepEqual( Stem("dépêcha"), "dépêch");});
test("dépêche -> dépêch", function() {deepEqual( Stem("dépêche"), "dépêch");});
test("dépêché -> dépêch", function() {deepEqual( Stem("dépêché"), "dépêch");});
test("dépêches -> dépêch", function() {deepEqual( Stem("dépêches"), "dépêch");});
test("dépêchez -> dépêch", function() {deepEqual( Stem("dépêchez"), "dépêch");});
test("dépêchons -> dépêchon", function() {deepEqual( Stem("dépêchons"), "dépêchon");});
test("dépeint -> dépeint", function() {deepEqual( Stem("dépeint"), "dépeint");});
test("dépeintes -> dépeint", function() {deepEqual( Stem("dépeintes"), "dépeint");});
test("dépenaillé -> dépenaill", function() {deepEqual( Stem("dépenaillé"), "dépenaill");});
test("dépend -> dépend", function() {deepEqual( Stem("dépend"), "dépend");});
test("dépendait -> dépend", function() {deepEqual( Stem("dépendait"), "dépend");});
test("dépendance -> dépend", function() {deepEqual( Stem("dépendance"), "dépend");});
test("dépendant -> dépend", function() {deepEqual( Stem("dépendant"), "dépend");});
test("dépendre -> dépendr", function() {deepEqual( Stem("dépendre"), "dépendr");});
test("dépendu -> dépendu", function() {deepEqual( Stem("dépendu"), "dépendu");});
test("dépens -> dépen", function() {deepEqual( Stem("dépens"), "dépen");});
test("dépensait -> dépens", function() {deepEqual( Stem("dépensait"), "dépens");});
test("dépense -> dépens", function() {deepEqual( Stem("dépense"), "dépens");});
test("dépensé -> dépens", function() {deepEqual( Stem("dépensé"), "dépens");});
test("dépensées -> dépens", function() {deepEqual( Stem("dépensées"), "dépens");});
test("dépenser -> dépens", function() {deepEqual( Stem("dépenser"), "dépens");});
test("dépenses -> dépens", function() {deepEqual( Stem("dépenses"), "dépens");});
test("dépérir -> déper", function() {deepEqual( Stem("dépérir"), "déper");});
test("dépeuplèrent -> dépeupl", function() {deepEqual( Stem("dépeuplèrent"), "dépeupl");});
test("dépisté -> dépist", function() {deepEqual( Stem("dépisté"), "dépist");});
test("dépistées -> dépist", function() {deepEqual( Stem("dépistées"), "dépist");});
test("dépister -> dépist", function() {deepEqual( Stem("dépister"), "dépist");});
test("dépit -> dep", function() {deepEqual( Stem("dépit"), "dep");});
test("dépitée -> dépit", function() {deepEqual( Stem("dépitée"), "dépit");});
test("déplaçait -> déplac", function() {deepEqual( Stem("déplaçait"), "déplac");});
test("déplace -> déplac", function() {deepEqual( Stem("déplace"), "déplac");});
test("déplacé -> déplac", function() {deepEqual( Stem("déplacé"), "déplac");});
test("déplacées -> déplac", function() {deepEqual( Stem("déplacées"), "déplac");});
test("déplacement -> déplac", function() {deepEqual( Stem("déplacement"), "déplac");});
test("déplairais -> déplair", function() {deepEqual( Stem("déplairais"), "déplair");});
test("déplaire -> déplair", function() {deepEqual( Stem("déplaire"), "déplair");});
test("déplairez -> déplair", function() {deepEqual( Stem("déplairez"), "déplair");});
test("déplaisait -> déplais", function() {deepEqual( Stem("déplaisait"), "déplais");});
test("déplaise -> déplais", function() {deepEqual( Stem("déplaise"), "déplais");});
test("déplaisent -> déplaisent", function() {deepEqual( Stem("déplaisent"), "déplaisent");});
test("déplaisir -> déplais", function() {deepEqual( Stem("déplaisir"), "déplais");});
test("déplaît -> déplaît", function() {deepEqual( Stem("déplaît"), "déplaît");});
test("dépliage -> dépliag", function() {deepEqual( Stem("dépliage"), "dépliag");});
test("déploie -> déploi", function() {deepEqual( Stem("déploie"), "déploi");});
test("déploierais -> déploi", function() {deepEqual( Stem("déploierais"), "déploi");});
test("déplorable -> déplor", function() {deepEqual( Stem("déplorable"), "déplor");});
test("déplorables -> déplor", function() {deepEqual( Stem("déplorables"), "déplor");});
test("déplorait -> déplor", function() {deepEqual( Stem("déplorait"), "déplor");});
test("déploré -> déplor", function() {deepEqual( Stem("déploré"), "déplor");});
test("déploya -> déploi", function() {deepEqual( Stem("déploya"), "déploi");});
test("déployaient -> déploi", function() {deepEqual( Stem("déployaient"), "déploi");});
test("déployé -> déploi", function() {deepEqual( Stem("déployé"), "déploi");});
test("déployée -> déploi", function() {deepEqual( Stem("déployée"), "déploi");});
test("déployer -> déploi", function() {deepEqual( Stem("déployer"), "déploi");});
test("déplu -> déplu", function() {deepEqual( Stem("déplu"), "déplu");});
test("déplut -> déplut", function() {deepEqual( Stem("déplut"), "déplut");});
test("déporta -> déport", function() {deepEqual( Stem("déporta"), "déport");});
test("déportés -> déport", function() {deepEqual( Stem("déportés"), "déport");});
test("déposa -> dépos", function() {deepEqual( Stem("déposa"), "dépos");});
test("déposait -> dépos", function() {deepEqual( Stem("déposait"), "dépos");});
test("déposant -> dépos", function() {deepEqual( Stem("déposant"), "dépos");});
test("déposât -> dépos", function() {deepEqual( Stem("déposât"), "dépos");});
test("dépose -> dépos", function() {deepEqual( Stem("dépose"), "dépos");});
test("déposé -> dépos", function() {deepEqual( Stem("déposé"), "dépos");});
test("déposée -> dépos", function() {deepEqual( Stem("déposée"), "dépos");});
test("déposées -> dépos", function() {deepEqual( Stem("déposées"), "dépos");});
test("déposer -> dépos", function() {deepEqual( Stem("déposer"), "dépos");});
test("déposèrent -> dépos", function() {deepEqual( Stem("déposèrent"), "dépos");});
test("déposés -> dépos", function() {deepEqual( Stem("déposés"), "dépos");});
test("dépositaire -> dépositair", function() {deepEqual( Stem("dépositaire"), "dépositair");});
test("déposition -> déposit", function() {deepEqual( Stem("déposition"), "déposit");});
test("dépositions -> déposit", function() {deepEqual( Stem("dépositions"), "déposit");});
test("dépossédé -> dépossed", function() {deepEqual( Stem("dépossédé"), "dépossed");});
test("dépôt -> dépôt", function() {deepEqual( Stem("dépôt"), "dépôt");});
test("dépôts -> dépôt", function() {deepEqual( Stem("dépôts"), "dépôt");});
test("dépouillait -> dépouill", function() {deepEqual( Stem("dépouillait"), "dépouill");});
test("dépouille -> dépouill", function() {deepEqual( Stem("dépouille"), "dépouill");});
test("dépouillé -> dépouill", function() {deepEqual( Stem("dépouillé"), "dépouill");});
test("dépouiller -> dépouill", function() {deepEqual( Stem("dépouiller"), "dépouill");});
test("dépourvu -> dépourvu", function() {deepEqual( Stem("dépourvu"), "dépourvu");});
test("dépression -> dépress", function() {deepEqual( Stem("dépression"), "dépress");});
test("dépressions -> dépress", function() {deepEqual( Stem("dépressions"), "dépress");});
test("déprimée -> déprim", function() {deepEqual( Stem("déprimée"), "déprim");});
test("depuis -> depuis", function() {deepEqual( Stem("depuis"), "depuis");});
test("députation -> déput", function() {deepEqual( Stem("députation"), "déput");});
test("député -> déput", function() {deepEqual( Stem("député"), "déput");});
test("députés -> déput", function() {deepEqual( Stem("députés"), "déput");});
test("déraillement -> déraill", function() {deepEqual( Stem("déraillement"), "déraill");});
test("déraillements -> déraill", function() {deepEqual( Stem("déraillements"), "déraill");});
test("déraison -> déraison", function() {deepEqual( Stem("déraison"), "déraison");});
test("déraisonnable -> déraison", function() {deepEqual( Stem("déraisonnable"), "déraison");});
test("déraisonnables -> déraison", function() {deepEqual( Stem("déraisonnables"), "déraison");});
test("déraisonner -> déraison", function() {deepEqual( Stem("déraisonner"), "déraison");});
test("dérangé -> dérang", function() {deepEqual( Stem("dérangé"), "dérang");});
test("dérangeait -> dérang", function() {deepEqual( Stem("dérangeait"), "dérang");});
test("dérangements -> dérang", function() {deepEqual( Stem("dérangements"), "dérang");});
test("déranger -> dérang", function() {deepEqual( Stem("déranger"), "dérang");});
test("dérangés -> dérang", function() {deepEqual( Stem("dérangés"), "dérang");});
test("derechef -> derechef", function() {deepEqual( Stem("derechef"), "derechef");});
test("déridait -> dérid", function() {deepEqual( Stem("déridait"), "dérid");});
test("dérision -> déris", function() {deepEqual( Stem("dérision"), "déris");});
test("dernier -> derni", function() {deepEqual( Stem("dernier"), "derni");});
test("dernière -> derni", function() {deepEqual( Stem("dernière"), "derni");});
test("dernieres -> dernier", function() {deepEqual( Stem("dernieres"), "dernier");});
test("dernières -> derni", function() {deepEqual( Stem("dernières"), "derni");});
test("derniers -> derni", function() {deepEqual( Stem("derniers"), "derni");});
test("dérobaient -> dérob", function() {deepEqual( Stem("dérobaient"), "dérob");});
test("dérobé -> dérob", function() {deepEqual( Stem("dérobé"), "dérob");});
test("dérobée -> dérob", function() {deepEqual( Stem("dérobée"), "dérob");});
test("dérober -> dérob", function() {deepEqual( Stem("dérober"), "dérob");});
test("déroberait -> dérob", function() {deepEqual( Stem("déroberait"), "dérob");});
test("déroger -> dérog", function() {deepEqual( Stem("déroger"), "dérog");});
test("déroula -> déroul", function() {deepEqual( Stem("déroula"), "déroul");});
test("déroulant -> déroul", function() {deepEqual( Stem("déroulant"), "déroul");});
test("déroulèrent -> déroul", function() {deepEqual( Stem("déroulèrent"), "déroul");});
test("déroute -> dérout", function() {deepEqual( Stem("déroute"), "dérout");});
test("derrière -> derri", function() {deepEqual( Stem("derrière"), "derri");});
test("derville -> dervill", function() {deepEqual( Stem("derville"), "dervill");});
test("des -> de", function() {deepEqual( Stem("des"), "de");});
test("dès -> des", function() {deepEqual( Stem("dès"), "des");});
test("désabusé -> désabus", function() {deepEqual( Stem("désabusé"), "désabus");});
test("désagréable -> désagré", function() {deepEqual( Stem("désagréable"), "désagré");});
test("désagréablement -> désagré", function() {deepEqual( Stem("désagréablement"), "désagré");});
test("désagréables -> désagré", function() {deepEqual( Stem("désagréables"), "désagré");});
test("désagrément -> désagr", function() {deepEqual( Stem("désagrément"), "désagr");});
test("désagréments -> désagr", function() {deepEqual( Stem("désagréments"), "désagr");});
test("desaix -> desaix", function() {deepEqual( Stem("desaix"), "desaix");});
test("désaltéré -> désalter", function() {deepEqual( Stem("désaltéré"), "désalter");});
test("désappointé -> désappoint", function() {deepEqual( Stem("désappointé"), "désappoint");});
test("désappointement -> désappoint", function() {deepEqual( Stem("désappointement"), "désappoint");});
test("désapprouver -> désapprouv", function() {deepEqual( Stem("désapprouver"), "désapprouv");});
test("désarmé -> désarm", function() {deepEqual( Stem("désarmé"), "désarm");});
test("désarmer -> désarm", function() {deepEqual( Stem("désarmer"), "désarm");});
test("désastre -> désastr", function() {deepEqual( Stem("désastre"), "désastr");});
test("désastres -> désastr", function() {deepEqual( Stem("désastres"), "désastr");});
test("désavantage -> désavantag", function() {deepEqual( Stem("désavantage"), "désavantag");});
test("désavantages -> désavantag", function() {deepEqual( Stem("désavantages"), "désavantag");});
test("désavoue -> désavou", function() {deepEqual( Stem("désavoue"), "désavou");});
test("desceller -> descel", function() {deepEqual( Stem("desceller"), "descel");});
test("descend -> descend", function() {deepEqual( Stem("descend"), "descend");});
test("descendaient -> descend", function() {deepEqual( Stem("descendaient"), "descend");});
test("descendait -> descend", function() {deepEqual( Stem("descendait"), "descend");});
test("descendant -> descend", function() {deepEqual( Stem("descendant"), "descend");});
test("descendante -> descend", function() {deepEqual( Stem("descendante"), "descend");});
test("descendants -> descend", function() {deepEqual( Stem("descendants"), "descend");});
test("descende -> descend", function() {deepEqual( Stem("descende"), "descend");});
test("descendent -> descendent", function() {deepEqual( Stem("descendent"), "descendent");});
test("descendirent -> descend", function() {deepEqual( Stem("descendirent"), "descend");});
test("descendit -> descend", function() {deepEqual( Stem("descendit"), "descend");});
test("descendrait -> descendr", function() {deepEqual( Stem("descendrait"), "descendr");});
test("descendre -> descendr", function() {deepEqual( Stem("descendre"), "descendr");});
test("descendrez -> descendr", function() {deepEqual( Stem("descendrez"), "descendr");});
test("descends -> descend", function() {deepEqual( Stem("descends"), "descend");});
test("descendu -> descendu", function() {deepEqual( Stem("descendu"), "descendu");});
test("descendue -> descendu", function() {deepEqual( Stem("descendue"), "descendu");});
test("descendus -> descendus", function() {deepEqual( Stem("descendus"), "descendus");});
test("descente -> descent", function() {deepEqual( Stem("descente"), "descent");});
test("descoulis -> descoul", function() {deepEqual( Stem("descoulis"), "descoul");});
test("description -> descript", function() {deepEqual( Stem("description"), "descript");});
test("descriptions -> descript", function() {deepEqual( Stem("descriptions"), "descript");});
test("désennuyait -> désennui", function() {deepEqual( Stem("désennuyait"), "désennui");});
test("désennuyer -> désennui", function() {deepEqual( Stem("désennuyer"), "désennui");});
test("désert -> désert", function() {deepEqual( Stem("désert"), "désert");});
test("désertais -> désert", function() {deepEqual( Stem("désertais"), "désert");});
test("déserte -> désert", function() {deepEqual( Stem("déserte"), "désert");});
test("déserté -> désert", function() {deepEqual( Stem("déserté"), "désert");});
test("déserter -> désert", function() {deepEqual( Stem("déserter"), "désert");});
test("désertes -> désert", function() {deepEqual( Stem("désertes"), "désert");});
test("déserteur -> déserteur", function() {deepEqual( Stem("déserteur"), "déserteur");});
test("désertez -> désert", function() {deepEqual( Stem("désertez"), "désert");});
test("désertion -> désert", function() {deepEqual( Stem("désertion"), "désert");});
test("désespérais -> désesper", function() {deepEqual( Stem("désespérais"), "désesper");});
test("désespérait -> désesper", function() {deepEqual( Stem("désespérait"), "désesper");});
test("désespérant -> désesper", function() {deepEqual( Stem("désespérant"), "désesper");});
test("désespérante -> désesper", function() {deepEqual( Stem("désespérante"), "désesper");});
test("désespérants -> désesper", function() {deepEqual( Stem("désespérants"), "désesper");});
test("désespère -> désesper", function() {deepEqual( Stem("désespère"), "désesper");});
test("désespéré -> désesper", function() {deepEqual( Stem("désespéré"), "désesper");});
test("désespérée -> désesper", function() {deepEqual( Stem("désespérée"), "désesper");});
test("désespérer -> désesper", function() {deepEqual( Stem("désespérer"), "désesper");});
test("désespoir -> désespoir", function() {deepEqual( Stem("désespoir"), "désespoir");});
test("déshabillaient -> déshabill", function() {deepEqual( Stem("déshabillaient"), "déshabill");});
test("déshabiller -> déshabill", function() {deepEqual( Stem("déshabiller"), "déshabill");});
test("déshonneur -> déshonneur", function() {deepEqual( Stem("déshonneur"), "déshonneur");});
test("déshonorait -> déshonor", function() {deepEqual( Stem("déshonorait"), "déshonor");});
test("déshonorant -> déshonor", function() {deepEqual( Stem("déshonorant"), "déshonor");});
test("déshonorante -> déshonor", function() {deepEqual( Stem("déshonorante"), "déshonor");});
test("déshonore -> déshonor", function() {deepEqual( Stem("déshonore"), "déshonor");});
test("déshonoré -> déshonor", function() {deepEqual( Stem("déshonoré"), "déshonor");});
test("déshonorée -> déshonor", function() {deepEqual( Stem("déshonorée"), "déshonor");});
test("déshonorent -> déshonorent", function() {deepEqual( Stem("déshonorent"), "déshonorent");});
test("déshonorer -> déshonor", function() {deepEqual( Stem("déshonorer"), "déshonor");});
test("déshonorez -> déshonor", function() {deepEqual( Stem("déshonorez"), "déshonor");});
test("désignant -> désign", function() {deepEqual( Stem("désignant"), "désign");});
test("désigne -> désign", function() {deepEqual( Stem("désigne"), "désign");});
test("désigné -> désign", function() {deepEqual( Stem("désigné"), "désign");});
test("désigner -> désign", function() {deepEqual( Stem("désigner"), "désign");});
test("désignèrent -> désign", function() {deepEqual( Stem("désignèrent"), "désign");});
test("désignés -> désign", function() {deepEqual( Stem("désignés"), "désign");});
test("désignez -> désign", function() {deepEqual( Stem("désignez"), "désign");});
test("désintéresse -> désintéress", function() {deepEqual( Stem("désintéresse"), "désintéress");});
test("désintéressé -> désintéress", function() {deepEqual( Stem("désintéressé"), "désintéress");});
test("désintéressées -> désintéress", function() {deepEqual( Stem("désintéressées"), "désintéress");});
test("désintéressement -> désintéress", function() {deepEqual( Stem("désintéressement"), "désintéress");});
test("désintérêt -> désintérêt", function() {deepEqual( Stem("désintérêt"), "désintérêt");});
test("désir -> des", function() {deepEqual( Stem("désir"), "des");});
test("désira -> des", function() {deepEqual( Stem("désira"), "des");});
test("désirable -> désir", function() {deepEqual( Stem("désirable"), "désir");});
test("désirait -> des", function() {deepEqual( Stem("désirait"), "des");});
test("désire -> désir", function() {deepEqual( Stem("désire"), "désir");});
test("désiré -> désir", function() {deepEqual( Stem("désiré"), "désir");});
test("désirée -> désir", function() {deepEqual( Stem("désirée"), "désir");});
test("désirées -> désir", function() {deepEqual( Stem("désirées"), "désir");});
test("désirent -> des", function() {deepEqual( Stem("désirent"), "des");});
test("désirer -> désir", function() {deepEqual( Stem("désirer"), "désir");});
test("désirerais -> désir", function() {deepEqual( Stem("désirerais"), "désir");});
test("désirez -> des", function() {deepEqual( Stem("désirez"), "des");});
test("désirs -> désir", function() {deepEqual( Stem("désirs"), "désir");});
test("désobéi -> désobéi", function() {deepEqual( Stem("désobéi"), "désobéi");});
test("désobéissante -> désobéiss", function() {deepEqual( Stem("désobéissante"), "désobéiss");});
test("désoblige -> désoblig", function() {deepEqual( Stem("désoblige"), "désoblig");});
test("désobligeante -> désoblig", function() {deepEqual( Stem("désobligeante"), "désoblig");});
test("désobligeants -> désoblig", function() {deepEqual( Stem("désobligeants"), "désoblig");});
test("désoeuvrement -> désoeuvr", function() {deepEqual( Stem("désoeuvrement"), "désoeuvr");});
test("désolait -> désol", function() {deepEqual( Stem("désolait"), "désol");});
test("désolant -> désol", function() {deepEqual( Stem("désolant"), "désol");});
test("désolation -> désol", function() {deepEqual( Stem("désolation"), "désol");});
test("désole -> désol", function() {deepEqual( Stem("désole"), "désol");});
test("désolé -> désol", function() {deepEqual( Stem("désolé"), "désol");});
test("désolée -> désol", function() {deepEqual( Stem("désolée"), "désol");});
test("désordonnée -> désordon", function() {deepEqual( Stem("désordonnée"), "désordon");});
test("désordonnés -> désordon", function() {deepEqual( Stem("désordonnés"), "désordon");});
test("désordre -> désordr", function() {deepEqual( Stem("désordre"), "désordr");});
test("désorienté -> désorient", function() {deepEqual( Stem("désorienté"), "désorient");});
test("désormais -> désorm", function() {deepEqual( Stem("désormais"), "désorm");});
test("despote -> despot", function() {deepEqual( Stem("despote"), "despot");});
test("despotes -> despot", function() {deepEqual( Stem("despotes"), "despot");});
test("despotique -> despot", function() {deepEqual( Stem("despotique"), "despot");});
test("despotiquement -> despot", function() {deepEqual( Stem("despotiquement"), "despot");});
test("despotiques -> despot", function() {deepEqual( Stem("despotiques"), "despot");});
test("despotisme -> despot", function() {deepEqual( Stem("despotisme"), "despot");});
test("despotismes -> despot", function() {deepEqual( Stem("despotismes"), "despot");});
test("desquelles -> desquel", function() {deepEqual( Stem("desquelles"), "desquel");});
test("desquels -> desquel", function() {deepEqual( Stem("desquels"), "desquel");});
test("desséchant -> dessech", function() {deepEqual( Stem("desséchant"), "dessech");});
test("desséché -> dessech", function() {deepEqual( Stem("desséché"), "dessech");});
test("desséchée -> dessech", function() {deepEqual( Stem("desséchée"), "dessech");});
test("dessein -> dessein", function() {deepEqual( Stem("dessein"), "dessein");});
test("desseins -> dessein", function() {deepEqual( Stem("desseins"), "dessein");});
test("dessert -> dessert", function() {deepEqual( Stem("dessert"), "dessert");});
test("desservait -> desserv", function() {deepEqual( Stem("desservait"), "desserv");});
test("desservant -> desserv", function() {deepEqual( Stem("desservant"), "desserv");});
test("desservi -> desserv", function() {deepEqual( Stem("desservi"), "desserv");});
test("dessiller -> dessill", function() {deepEqual( Stem("dessiller"), "dessill");});
test("dessillèrent -> dessill", function() {deepEqual( Stem("dessillèrent"), "dessill");});
test("dessin -> dessin", function() {deepEqual( Stem("dessin"), "dessin");});
test("dessina -> dessin", function() {deepEqual( Stem("dessina"), "dessin");});
test("dessinaient -> dessin", function() {deepEqual( Stem("dessinaient"), "dessin");});
test("dessinait -> dessin", function() {deepEqual( Stem("dessinait"), "dessin");});
test("dessine -> dessin", function() {deepEqual( Stem("dessine"), "dessin");});
test("dessiné -> dessin", function() {deepEqual( Stem("dessiné"), "dessin");});
test("dessinent -> dessinent", function() {deepEqual( Stem("dessinent"), "dessinent");});
test("dessiner -> dessin", function() {deepEqual( Stem("dessiner"), "dessin");});
test("dessins -> dessin", function() {deepEqual( Stem("dessins"), "dessin");});
test("dessous -> dessous", function() {deepEqual( Stem("dessous"), "dessous");});
test("dessus -> dessus", function() {deepEqual( Stem("dessus"), "dessus");});
test("destin -> destin", function() {deepEqual( Stem("destin"), "destin");});
test("destinait -> destin", function() {deepEqual( Stem("destinait"), "destin");});
test("destination -> destin", function() {deepEqual( Stem("destination"), "destin");});
test("destine -> destin", function() {deepEqual( Stem("destine"), "destin");});
test("destiné -> destin", function() {deepEqual( Stem("destiné"), "destin");});
test("destinée -> destin", function() {deepEqual( Stem("destinée"), "destin");});
test("destinées -> destin", function() {deepEqual( Stem("destinées"), "destin");});
test("destinés -> destin", function() {deepEqual( Stem("destinés"), "destin");});
test("destins -> destin", function() {deepEqual( Stem("destins"), "destin");});
test("destitua -> destitu", function() {deepEqual( Stem("destitua"), "destitu");});
test("destitué -> destitu", function() {deepEqual( Stem("destitué"), "destitu");});
test("destituer -> destitu", function() {deepEqual( Stem("destituer"), "destitu");});
test("destituera -> destitu", function() {deepEqual( Stem("destituera"), "destitu");});
test("destituerai -> destitu", function() {deepEqual( Stem("destituerai"), "destitu");});
test("destitution -> destitu", function() {deepEqual( Stem("destitution"), "destitu");});
test("désunir -> désun", function() {deepEqual( Stem("désunir"), "désun");});
test("détacha -> détach", function() {deepEqual( Stem("détacha"), "détach");});
test("détachaient -> détach", function() {deepEqual( Stem("détachaient"), "détach");});
test("détachait -> détach", function() {deepEqual( Stem("détachait"), "détach");});
test("détachant -> détach", function() {deepEqual( Stem("détachant"), "détach");});
test("détache -> détach", function() {deepEqual( Stem("détache"), "détach");});
test("détaché -> détach", function() {deepEqual( Stem("détaché"), "détach");});
test("détachée -> détach", function() {deepEqual( Stem("détachée"), "détach");});
test("détachées -> détach", function() {deepEqual( Stem("détachées"), "détach");});
test("détachement -> détach", function() {deepEqual( Stem("détachement"), "détach");});
test("détacher -> détach", function() {deepEqual( Stem("détacher"), "détach");});
test("détachèrent -> détach", function() {deepEqual( Stem("détachèrent"), "détach");});
test("détail -> détail", function() {deepEqual( Stem("détail"), "détail");});
test("détailla -> détaill", function() {deepEqual( Stem("détailla"), "détaill");});
test("détaillant -> détaill", function() {deepEqual( Stem("détaillant"), "détaill");});
test("détaille -> détaill", function() {deepEqual( Stem("détaille"), "détaill");});
test("détaillé -> détaill", function() {deepEqual( Stem("détaillé"), "détaill");});
test("détaillée -> détaill", function() {deepEqual( Stem("détaillée"), "détaill");});
test("détaillées -> détaill", function() {deepEqual( Stem("détaillées"), "détaill");});
test("détailler -> détaill", function() {deepEqual( Stem("détailler"), "détaill");});
test("détails -> détail", function() {deepEqual( Stem("détails"), "détail");});
test("détaler -> détal", function() {deepEqual( Stem("détaler"), "détal");});
test("détective -> détect", function() {deepEqual( Stem("détective"), "détect");});
test("détectives -> détect", function() {deepEqual( Stem("détectives"), "détect");});
test("détendu -> détendu", function() {deepEqual( Stem("détendu"), "détendu");});
test("détendue -> détendu", function() {deepEqual( Stem("détendue"), "détendu");});
test("détendus -> détendus", function() {deepEqual( Stem("détendus"), "détendus");});
test("détente -> détent", function() {deepEqual( Stem("détente"), "détent");});
test("détention -> détent", function() {deepEqual( Stem("détention"), "détent");});
test("détenus -> détenus", function() {deepEqual( Stem("détenus"), "détenus");});
test("détermina -> détermin", function() {deepEqual( Stem("détermina"), "détermin");});
test("déterminaient -> détermin", function() {deepEqual( Stem("déterminaient"), "détermin");});
test("déterminait -> détermin", function() {deepEqual( Stem("déterminait"), "détermin");});
test("déterminât -> détermin", function() {deepEqual( Stem("déterminât"), "détermin");});
test("détermination -> détermin", function() {deepEqual( Stem("détermination"), "détermin");});
test("déterminations -> détermin", function() {deepEqual( Stem("déterminations"), "détermin");});
test("déterminé -> détermin", function() {deepEqual( Stem("déterminé"), "détermin");});
test("déterminées -> détermin", function() {deepEqual( Stem("déterminées"), "détermin");});
test("déterminer -> détermin", function() {deepEqual( Stem("déterminer"), "détermin");});
test("déterminera -> détermin", function() {deepEqual( Stem("déterminera"), "détermin");});
test("déterrer -> déterr", function() {deepEqual( Stem("déterrer"), "déterr");});
test("détestable -> détest", function() {deepEqual( Stem("détestable"), "détest");});
test("détestables -> détest", function() {deepEqual( Stem("détestables"), "détest");});
test("détestaient -> détest", function() {deepEqual( Stem("détestaient"), "détest");});
test("détestait -> détest", function() {deepEqual( Stem("détestait"), "détest");});
test("déteste -> détest", function() {deepEqual( Stem("déteste"), "détest");});
test("détesté -> détest", function() {deepEqual( Stem("détesté"), "détest");});
test("détestent -> détestent", function() {deepEqual( Stem("détestent"), "détestent");});
test("détester -> détest", function() {deepEqual( Stem("détester"), "détest");});
test("détesterez -> détest", function() {deepEqual( Stem("détesterez"), "détest");});
test("détonation -> déton", function() {deepEqual( Stem("détonation"), "déton");});
test("détonations -> déton", function() {deepEqual( Stem("détonations"), "déton");});
test("détour -> détour", function() {deepEqual( Stem("détour"), "détour");});
test("détourna -> détourn", function() {deepEqual( Stem("détourna"), "détourn");});
test("détournaient -> détourn", function() {deepEqual( Stem("détournaient"), "détourn");});
test("détourné -> détourn", function() {deepEqual( Stem("détourné"), "détourn");});
test("détours -> détour", function() {deepEqual( Stem("détours"), "détour");});
test("détraquer -> détraqu", function() {deepEqual( Stem("détraquer"), "détraqu");});
test("détresse -> détress", function() {deepEqual( Stem("détresse"), "détress");});
test("détriment -> detr", function() {deepEqual( Stem("détriment"), "detr");});
test("détroit -> détroit", function() {deepEqual( Stem("détroit"), "détroit");});
test("détrompé -> détromp", function() {deepEqual( Stem("détrompé"), "détromp");});
test("détruire -> détruir", function() {deepEqual( Stem("détruire"), "détruir");});
test("détruisaient -> détruis", function() {deepEqual( Stem("détruisaient"), "détruis");});
test("détruisit -> détruis", function() {deepEqual( Stem("détruisit"), "détruis");});
test("détruit -> détruit", function() {deepEqual( Stem("détruit"), "détruit");});
test("détruites -> détruit", function() {deepEqual( Stem("détruites"), "détruit");});
test("détruits -> détruit", function() {deepEqual( Stem("détruits"), "détruit");});
test("dette -> det", function() {deepEqual( Stem("dette"), "det");});
test("dettes -> det", function() {deepEqual( Stem("dettes"), "det");});
test("deuil -> deuil", function() {deepEqual( Stem("deuil"), "deuil");});
test("deuils -> deuil", function() {deepEqual( Stem("deuils"), "deuil");});
test("deum -> deum", function() {deepEqual( Stem("deum"), "deum");});
test("deux -> deux", function() {deepEqual( Stem("deux"), "deux");});
test("deuxième -> deuxiem", function() {deepEqual( Stem("deuxième"), "deuxiem");});
test("devaient -> dev", function() {deepEqual( Stem("devaient"), "dev");});
test("devais -> dev", function() {deepEqual( Stem("devais"), "dev");});
test("devait -> dev", function() {deepEqual( Stem("devait"), "dev");});
test("devançant -> devanc", function() {deepEqual( Stem("devançant"), "devanc");});
test("devancer -> devanc", function() {deepEqual( Stem("devancer"), "devanc");});
test("devant -> dev", function() {deepEqual( Stem("devant"), "dev");});
test("devants -> dev", function() {deepEqual( Stem("devants"), "dev");});
test("développa -> développ", function() {deepEqual( Stem("développa"), "développ");});
test("développaient -> développ", function() {deepEqual( Stem("développaient"), "développ");});
test("développait -> développ", function() {deepEqual( Stem("développait"), "développ");});
test("développée -> développ", function() {deepEqual( Stem("développée"), "développ");});
test("développement -> développ", function() {deepEqual( Stem("développement"), "développ");});
test("devenaient -> deven", function() {deepEqual( Stem("devenaient"), "deven");});
test("devenais -> deven", function() {deepEqual( Stem("devenais"), "deven");});
test("devenait -> deven", function() {deepEqual( Stem("devenait"), "deven");});
test("devenant -> deven", function() {deepEqual( Stem("devenant"), "deven");});
test("devenez -> deven", function() {deepEqual( Stem("devenez"), "deven");});
test("devenir -> deven", function() {deepEqual( Stem("devenir"), "deven");});
test("devenu -> devenu", function() {deepEqual( Stem("devenu"), "devenu");});
test("devenue -> devenu", function() {deepEqual( Stem("devenue"), "devenu");});
test("devenus -> devenus", function() {deepEqual( Stem("devenus"), "devenus");});
test("déverse -> dévers", function() {deepEqual( Stem("déverse"), "dévers");});
test("déverser -> dévers", function() {deepEqual( Stem("déverser"), "dévers");});
test("devez -> dev", function() {deepEqual( Stem("devez"), "dev");});
test("deviendra -> deviendr", function() {deepEqual( Stem("deviendra"), "deviendr");});
test("deviendrai -> deviendr", function() {deepEqual( Stem("deviendrai"), "deviendr");});
test("deviendraient -> deviendr", function() {deepEqual( Stem("deviendraient"), "deviendr");});
test("deviendrais -> deviendr", function() {deepEqual( Stem("deviendrais"), "deviendr");});
test("deviendrait -> deviendr", function() {deepEqual( Stem("deviendrait"), "deviendr");});
test("deviendrez -> deviendr", function() {deepEqual( Stem("deviendrez"), "deviendr");});
test("deviendriez -> deviendr", function() {deepEqual( Stem("deviendriez"), "deviendr");});
test("deviennent -> deviennent", function() {deepEqual( Stem("deviennent"), "deviennent");});
test("deviens -> devien", function() {deepEqual( Stem("deviens"), "devien");});
test("devient -> devient", function() {deepEqual( Stem("devient"), "devient");});
test("deviez -> dev", function() {deepEqual( Stem("deviez"), "dev");});
test("devina -> devin", function() {deepEqual( Stem("devina"), "devin");});
test("devinait -> devin", function() {deepEqual( Stem("devinait"), "devin");});
test("devinant -> devin", function() {deepEqual( Stem("devinant"), "devin");});
test("devine -> devin", function() {deepEqual( Stem("devine"), "devin");});
test("deviné -> devin", function() {deepEqual( Stem("deviné"), "devin");});
test("devinée -> devin", function() {deepEqual( Stem("devinée"), "devin");});
test("devinées -> devin", function() {deepEqual( Stem("devinées"), "devin");});
test("deviner -> devin", function() {deepEqual( Stem("deviner"), "devin");});
test("devinera -> devin", function() {deepEqual( Stem("devinera"), "devin");});
test("devinerait -> devin", function() {deepEqual( Stem("devinerait"), "devin");});
test("devineront -> devin", function() {deepEqual( Stem("devineront"), "devin");});
test("devines -> devin", function() {deepEqual( Stem("devines"), "devin");});
test("devinez -> devin", function() {deepEqual( Stem("devinez"), "devin");});
test("devînmes -> devînm", function() {deepEqual( Stem("devînmes"), "devînm");});
test("devinrent -> devinrent", function() {deepEqual( Stem("devinrent"), "devinrent");});
test("devins -> devin", function() {deepEqual( Stem("devins"), "devin");});
test("devint -> devint", function() {deepEqual( Stem("devint"), "devint");});
test("devis -> dev", function() {deepEqual( Stem("devis"), "dev");});
test("dévisageait -> dévisag", function() {deepEqual( Stem("dévisageait"), "dévisag");});
test("dévisager -> dévisag", function() {deepEqual( Stem("dévisager"), "dévisag");});
test("dévisser -> déviss", function() {deepEqual( Stem("dévisser"), "déviss");});
test("devo -> devo", function() {deepEqual( Stem("devo"), "devo");});
test("dévoilé -> dévoil", function() {deepEqual( Stem("dévoilé"), "dévoil");});
test("devoir -> devoir", function() {deepEqual( Stem("devoir"), "devoir");});
test("devoirs -> devoir", function() {deepEqual( Stem("devoirs"), "devoir");});
test("devons -> devon", function() {deepEqual( Stem("devons"), "devon");});
test("dévora -> dévor", function() {deepEqual( Stem("dévora"), "dévor");});
test("dévoraient -> dévor", function() {deepEqual( Stem("dévoraient"), "dévor");});
test("dévorait -> dévor", function() {deepEqual( Stem("dévorait"), "dévor");});
test("dévorante -> dévor", function() {deepEqual( Stem("dévorante"), "dévor");});
test("dévorât -> dévor", function() {deepEqual( Stem("dévorât"), "dévor");});
test("dévore -> dévor", function() {deepEqual( Stem("dévore"), "dévor");});
test("dévoré -> dévor", function() {deepEqual( Stem("dévoré"), "dévor");});
test("dévorée -> dévor", function() {deepEqual( Stem("dévorée"), "dévor");});
test("dévorer -> dévor", function() {deepEqual( Stem("dévorer"), "dévor");});
test("dévoreront -> dévor", function() {deepEqual( Stem("dévoreront"), "dévor");});
test("dévorés -> dévor", function() {deepEqual( Stem("dévorés"), "dévor");});
test("devoret -> devoret", function() {deepEqual( Stem("devoret"), "devoret");});
test("dévorez -> dévor", function() {deepEqual( Stem("dévorez"), "dévor");});
test("dévot -> dévot", function() {deepEqual( Stem("dévot"), "dévot");});
test("dévote -> dévot", function() {deepEqual( Stem("dévote"), "dévot");});
test("dévotement -> dévot", function() {deepEqual( Stem("dévotement"), "dévot");});
test("dévotes -> dévot", function() {deepEqual( Stem("dévotes"), "dévot");});
test("dévotion -> dévot", function() {deepEqual( Stem("dévotion"), "dévot");});
test("dévots -> dévot", function() {deepEqual( Stem("dévots"), "dévot");});
test("dévoué -> dévou", function() {deepEqual( Stem("dévoué"), "dévou");});
test("dévouée -> dévou", function() {deepEqual( Stem("dévouée"), "dévou");});
test("dévouement -> dévou", function() {deepEqual( Stem("dévouement"), "dévou");});
test("dévouements -> dévou", function() {deepEqual( Stem("dévouements"), "dévou");});
test("dévouer -> dévou", function() {deepEqual( Stem("dévouer"), "dévou");});
test("dévoués -> dévou", function() {deepEqual( Stem("dévoués"), "dévou");});
test("devra -> devr", function() {deepEqual( Stem("devra"), "devr");});
test("devrai -> devr", function() {deepEqual( Stem("devrai"), "devr");});
test("devraient -> devr", function() {deepEqual( Stem("devraient"), "devr");});
test("devrais -> devr", function() {deepEqual( Stem("devrais"), "devr");});
test("devrait -> devr", function() {deepEqual( Stem("devrait"), "devr");});
test("devriez -> devr", function() {deepEqual( Stem("devriez"), "devr");});
test("devrons -> devron", function() {deepEqual( Stem("devrons"), "devron");});
test("devront -> devront", function() {deepEqual( Stem("devront"), "devront");});
test("di -> di", function() {deepEqual( Stem("di"), "di");});
test("diable -> diabl", function() {deepEqual( Stem("diable"), "diabl");});
test("diables -> diabl", function() {deepEqual( Stem("diables"), "diabl");});
test("diacre -> diacr", function() {deepEqual( Stem("diacre"), "diacr");});
test("dialogue -> dialogu", function() {deepEqual( Stem("dialogue"), "dialogu");});
test("dialogues -> dialogu", function() {deepEqual( Stem("dialogues"), "dialogu");});
test("diamant -> diam", function() {deepEqual( Stem("diamant"), "diam");});
test("diamanté -> diamant", function() {deepEqual( Stem("diamanté"), "diamant");});
test("diamants -> diam", function() {deepEqual( Stem("diamants"), "diam");});
test("diane -> dian", function() {deepEqual( Stem("diane"), "dian");});
test("diar -> diar", function() {deepEqual( Stem("diar"), "diar");});
test("dicta -> dict", function() {deepEqual( Stem("dicta"), "dict");});
test("dictait -> dict", function() {deepEqual( Stem("dictait"), "dict");});
test("dictateur -> dictateur", function() {deepEqual( Stem("dictateur"), "dictateur");});
test("dicté -> dict", function() {deepEqual( Stem("dicté"), "dict");});
test("dictée -> dict", function() {deepEqual( Stem("dictée"), "dict");});
test("dictées -> dict", function() {deepEqual( Stem("dictées"), "dict");});
test("dicter -> dict", function() {deepEqual( Stem("dicter"), "dict");});
test("dictés -> dict", function() {deepEqual( Stem("dictés"), "dict");});
test("diction -> diction", function() {deepEqual( Stem("diction"), "diction");});
test("dictionnaire -> dictionnair", function() {deepEqual( Stem("dictionnaire"), "dictionnair");});
test("dicton -> dicton", function() {deepEqual( Stem("dicton"), "dicton");});
test("diderot -> diderot", function() {deepEqual( Stem("diderot"), "diderot");});
test("didon -> didon", function() {deepEqual( Stem("didon"), "didon");});
test("diego -> diego", function() {deepEqual( Stem("diego"), "diego");});
test("diègue -> diègu", function() {deepEqual( Stem("diègue"), "diègu");});
test("dieu -> dieu", function() {deepEqual( Stem("dieu"), "dieu");});
test("dieux -> dieux", function() {deepEqual( Stem("dieux"), "dieux");});
test("différence -> différent", function() {deepEqual( Stem("différence"), "différent");});
test("différences -> différent", function() {deepEqual( Stem("différences"), "différent");});
test("différend -> différend", function() {deepEqual( Stem("différend"), "différend");});
test("différends -> différend", function() {deepEqual( Stem("différends"), "différend");});
test("différent -> différent", function() {deepEqual( Stem("différent"), "différent");});
test("diffèrent -> diff", function() {deepEqual( Stem("diffèrent"), "diff");});
test("différente -> différent", function() {deepEqual( Stem("différente"), "différent");});
test("différentes -> différent", function() {deepEqual( Stem("différentes"), "différent");});
test("différents -> différent", function() {deepEqual( Stem("différents"), "différent");});
test("différer -> differ", function() {deepEqual( Stem("différer"), "differ");});
test("difficile -> difficil", function() {deepEqual( Stem("difficile"), "difficil");});
test("difficilement -> difficil", function() {deepEqual( Stem("difficilement"), "difficil");});
test("difficiles -> difficil", function() {deepEqual( Stem("difficiles"), "difficil");});
test("difficulté -> difficult", function() {deepEqual( Stem("difficulté"), "difficult");});
test("difficultés -> difficult", function() {deepEqual( Stem("difficultés"), "difficult");});
test("difficultueux -> difficultu", function() {deepEqual( Stem("difficultueux"), "difficultu");});
test("difforme -> difform", function() {deepEqual( Stem("difforme"), "difform");});
test("digère -> diger", function() {deepEqual( Stem("digère"), "diger");});
test("digne -> dign", function() {deepEqual( Stem("digne"), "dign");});
test("dignement -> dign", function() {deepEqual( Stem("dignement"), "dign");});
test("dignes -> dign", function() {deepEqual( Stem("dignes"), "dign");});
test("dignité -> dignit", function() {deepEqual( Stem("dignité"), "dignit");});
test("dignités -> dignit", function() {deepEqual( Stem("dignités"), "dignit");});
test("digue -> digu", function() {deepEqual( Stem("digue"), "digu");});
test("dijon -> dijon", function() {deepEqual( Stem("dijon"), "dijon");});
test("dilettanti -> dilettant", function() {deepEqual( Stem("dilettanti"), "dilettant");});
test("diligence -> diligent", function() {deepEqual( Stem("diligence"), "diligent");});
test("diligente -> diligent", function() {deepEqual( Stem("diligente"), "diligent");});
test("dimanche -> dimanch", function() {deepEqual( Stem("dimanche"), "dimanch");});
test("dimanches -> dimanch", function() {deepEqual( Stem("dimanches"), "dimanch");});
test("dîme -> dîm", function() {deepEqual( Stem("dîme"), "dîm");});
test("dimension -> dimens", function() {deepEqual( Stem("dimension"), "dimens");});
test("dimensions -> dimens", function() {deepEqual( Stem("dimensions"), "dimens");});
test("diminua -> diminu", function() {deepEqual( Stem("diminua"), "diminu");});
test("diminuaient -> diminu", function() {deepEqual( Stem("diminuaient"), "diminu");});
test("diminuait -> diminu", function() {deepEqual( Stem("diminuait"), "diminu");});
test("diminuant -> diminu", function() {deepEqual( Stem("diminuant"), "diminu");});
test("diminue -> diminu", function() {deepEqual( Stem("diminue"), "diminu");});
test("diminué -> diminu", function() {deepEqual( Stem("diminué"), "diminu");});
test("diminuée -> diminu", function() {deepEqual( Stem("diminuée"), "diminu");});
test("diminuer -> diminu", function() {deepEqual( Stem("diminuer"), "diminu");});
test("diminution -> diminu", function() {deepEqual( Stem("diminution"), "diminu");});
test("dîna -> dîn", function() {deepEqual( Stem("dîna"), "dîn");});
test("dînait -> dîn", function() {deepEqual( Stem("dînait"), "dîn");});
test("dînant -> dîn", function() {deepEqual( Stem("dînant"), "dîn");});
test("dindon -> dindon", function() {deepEqual( Stem("dindon"), "dindon");});
test("dîné -> dîn", function() {deepEqual( Stem("dîné"), "dîn");});
test("dînée -> dîn", function() {deepEqual( Stem("dînée"), "dîn");});
test("dînées -> dîn", function() {deepEqual( Stem("dînées"), "dîn");});
test("dînent -> dînent", function() {deepEqual( Stem("dînent"), "dînent");});
test("dîner -> dîn", function() {deepEqual( Stem("dîner"), "dîn");});
test("dînerai -> dîn", function() {deepEqual( Stem("dînerai"), "dîn");});
test("dînerait -> dîn", function() {deepEqual( Stem("dînerait"), "dîn");});
test("dînèrent -> dîn", function() {deepEqual( Stem("dînèrent"), "dîn");});
test("dîners -> dîner", function() {deepEqual( Stem("dîners"), "dîner");});
test("diocèse -> dioces", function() {deepEqual( Stem("diocèse"), "dioces");});
test("diplomate -> diplomat", function() {deepEqual( Stem("diplomate"), "diplomat");});
test("diplomates -> diplomat", function() {deepEqual( Stem("diplomates"), "diplomat");});
test("diplomatie -> diplomat", function() {deepEqual( Stem("diplomatie"), "diplomat");});
test("diplomatique -> diplomat", function() {deepEqual( Stem("diplomatique"), "diplomat");});
test("diplomatiquement -> diplomat", function() {deepEqual( Stem("diplomatiquement"), "diplomat");});
test("diplomatiques -> diplomat", function() {deepEqual( Stem("diplomatiques"), "diplomat");});
test("dira -> dir", function() {deepEqual( Stem("dira"), "dir");});
test("dirai -> dir", function() {deepEqual( Stem("dirai"), "dir");});
test("diraient -> dir", function() {deepEqual( Stem("diraient"), "dir");});
test("dirais -> dir", function() {deepEqual( Stem("dirais"), "dir");});
test("dirait -> dir", function() {deepEqual( Stem("dirait"), "dir");});
test("diras -> dir", function() {deepEqual( Stem("diras"), "dir");});
test("dire -> dir", function() {deepEqual( Stem("dire"), "dir");});
test("direct -> direct", function() {deepEqual( Stem("direct"), "direct");});
test("directe -> direct", function() {deepEqual( Stem("directe"), "direct");});
test("directement -> direct", function() {deepEqual( Stem("directement"), "direct");});
test("directes -> direct", function() {deepEqual( Stem("directes"), "direct");});
test("directeur -> directeur", function() {deepEqual( Stem("directeur"), "directeur");});
test("direction -> direct", function() {deepEqual( Stem("direction"), "direct");});
test("directions -> direct", function() {deepEqual( Stem("directions"), "direct");});
test("directoire -> directoir", function() {deepEqual( Stem("directoire"), "directoir");});
test("directs -> direct", function() {deepEqual( Stem("directs"), "direct");});
test("dirent -> dirent", function() {deepEqual( Stem("dirent"), "dirent");});
test("direz -> dir", function() {deepEqual( Stem("direz"), "dir");});
test("dirige -> dirig", function() {deepEqual( Stem("dirige"), "dirig");});
test("dirigé -> dirig", function() {deepEqual( Stem("dirigé"), "dirig");});
test("dirigea -> dirig", function() {deepEqual( Stem("dirigea"), "dirig");});
test("dirigeait -> dirig", function() {deepEqual( Stem("dirigeait"), "dirig");});
test("dirigeant -> dirig", function() {deepEqual( Stem("dirigeant"), "dirig");});
test("dirigeante -> dirig", function() {deepEqual( Stem("dirigeante"), "dirig");});
test("dirigée -> dirig", function() {deepEqual( Stem("dirigée"), "dirig");});
test("dirigées -> dirig", function() {deepEqual( Stem("dirigées"), "dirig");});
test("dirigent -> dirigent", function() {deepEqual( Stem("dirigent"), "dirigent");});
test("diriger -> dirig", function() {deepEqual( Stem("diriger"), "dirig");});
test("dirigerait -> dirig", function() {deepEqual( Stem("dirigerait"), "dirig");});
test("dirigèrent -> dirig", function() {deepEqual( Stem("dirigèrent"), "dirig");});
test("dirigés -> dirig", function() {deepEqual( Stem("dirigés"), "dirig");});
test("dirigez -> dirig", function() {deepEqual( Stem("dirigez"), "dirig");});
test("dirions -> dirion", function() {deepEqual( Stem("dirions"), "dirion");});
test("dirons -> diron", function() {deepEqual( Stem("dirons"), "diron");});
test("diront -> diront", function() {deepEqual( Stem("diront"), "diront");});
test("dis -> dis", function() {deepEqual( Stem("dis"), "dis");});
test("disaient -> dis", function() {deepEqual( Stem("disaient"), "dis");});
test("disais -> dis", function() {deepEqual( Stem("disais"), "dis");});
test("disait -> dis", function() {deepEqual( Stem("disait"), "dis");});
test("disant -> dis", function() {deepEqual( Stem("disant"), "dis");});
test("disc -> disc", function() {deepEqual( Stem("disc"), "disc");});
test("discerna -> discern", function() {deepEqual( Stem("discerna"), "discern");});
test("disciple -> discipl", function() {deepEqual( Stem("disciple"), "discipl");});
test("disciples -> discipl", function() {deepEqual( Stem("disciples"), "discipl");});
test("discontinuaient -> discontinu", function() {deepEqual( Stem("discontinuaient"), "discontinu");});
test("discontinuer -> discontinu", function() {deepEqual( Stem("discontinuer"), "discontinu");});
test("disconvenir -> disconven", function() {deepEqual( Stem("disconvenir"), "disconven");});
test("discordant -> discord", function() {deepEqual( Stem("discordant"), "discord");});
test("discours -> discour", function() {deepEqual( Stem("discours"), "discour");});
test("discret -> discret", function() {deepEqual( Stem("discret"), "discret");});
test("discrète -> discret", function() {deepEqual( Stem("discrète"), "discret");});
test("discrétion -> discret", function() {deepEqual( Stem("discrétion"), "discret");});
test("discrets -> discret", function() {deepEqual( Stem("discrets"), "discret");});
test("discussion -> discuss", function() {deepEqual( Stem("discussion"), "discuss");});
test("discussions -> discuss", function() {deepEqual( Stem("discussions"), "discuss");});
test("discuta -> discut", function() {deepEqual( Stem("discuta"), "discut");});
test("discutaient -> discut", function() {deepEqual( Stem("discutaient"), "discut");});
test("discutait -> discut", function() {deepEqual( Stem("discutait"), "discut");});
test("discutant -> discut", function() {deepEqual( Stem("discutant"), "discut");});
test("discute -> discut", function() {deepEqual( Stem("discute"), "discut");});
test("discutée -> discut", function() {deepEqual( Stem("discutée"), "discut");});
test("discuter -> discut", function() {deepEqual( Stem("discuter"), "discut");});
test("discutèrent -> discut", function() {deepEqual( Stem("discutèrent"), "discut");});
test("discutés -> discut", function() {deepEqual( Stem("discutés"), "discut");});
test("dise -> dis", function() {deepEqual( Stem("dise"), "dis");});
test("disent -> disent", function() {deepEqual( Stem("disent"), "disent");});
test("disgrâce -> disgrâc", function() {deepEqual( Stem("disgrâce"), "disgrâc");});
test("disgracie -> disgrac", function() {deepEqual( Stem("disgracie"), "disgrac");});
test("disgracié -> disgraci", function() {deepEqual( Stem("disgracié"), "disgraci");});
test("disgracierez -> disgraci", function() {deepEqual( Stem("disgracierez"), "disgraci");});
test("disinvoltura -> disinvoltur", function() {deepEqual( Stem("disinvoltura"), "disinvoltur");});
test("disloqué -> disloqu", function() {deepEqual( Stem("disloqué"), "disloqu");});
test("disparaissaient -> disparaiss", function() {deepEqual( Stem("disparaissaient"), "disparaiss");});
test("disparaissait -> disparaiss", function() {deepEqual( Stem("disparaissait"), "disparaiss");});
test("disparaissent -> disparaissent", function() {deepEqual( Stem("disparaissent"), "disparaissent");});
test("disparaît -> disparaît", function() {deepEqual( Stem("disparaît"), "disparaît");});
test("disparaître -> disparaîtr", function() {deepEqual( Stem("disparaître"), "disparaîtr");});
test("disparition -> disparit", function() {deepEqual( Stem("disparition"), "disparit");});
test("disparu -> disparu", function() {deepEqual( Stem("disparu"), "disparu");});
test("disparurent -> disparurent", function() {deepEqual( Stem("disparurent"), "disparurent");});
test("disparussent -> disparussent", function() {deepEqual( Stem("disparussent"), "disparussent");});
test("disparut -> disparut", function() {deepEqual( Stem("disparut"), "disparut");});
test("dispendieuses -> dispendi", function() {deepEqual( Stem("dispendieuses"), "dispendi");});
test("dispensé -> dispens", function() {deepEqual( Stem("dispensé"), "dispens");});
test("dispenser -> dispens", function() {deepEqual( Stem("dispenser"), "dispens");});
test("dispersaient -> dispers", function() {deepEqual( Stem("dispersaient"), "dispers");});
test("dispersés -> dispers", function() {deepEqual( Stem("dispersés"), "dispers");});
test("dispos -> dispos", function() {deepEqual( Stem("dispos"), "dispos");});
test("disposa -> dispos", function() {deepEqual( Stem("disposa"), "dispos");});
test("disposaient -> dispos", function() {deepEqual( Stem("disposaient"), "dispos");});
test("disposait -> dispos", function() {deepEqual( Stem("disposait"), "dispos");});
test("dispose -> dispos", function() {deepEqual( Stem("dispose"), "dispos");});
test("disposé -> dispos", function() {deepEqual( Stem("disposé"), "dispos");});
test("disposée -> dispos", function() {deepEqual( Stem("disposée"), "dispos");});
test("disposées -> dispos", function() {deepEqual( Stem("disposées"), "dispos");});
test("disposer -> dispos", function() {deepEqual( Stem("disposer"), "dispos");});
test("disposés -> dispos", function() {deepEqual( Stem("disposés"), "dispos");});
test("disposez -> dispos", function() {deepEqual( Stem("disposez"), "dispos");});
test("disposition -> disposit", function() {deepEqual( Stem("disposition"), "disposit");});
test("dispositions -> disposit", function() {deepEqual( Stem("dispositions"), "disposit");});
test("disposons -> disposon", function() {deepEqual( Stem("disposons"), "disposon");});
test("disproportion -> disproport", function() {deepEqual( Stem("disproportion"), "disproport");});
test("disputa -> disput", function() {deepEqual( Stem("disputa"), "disput");});
test("disputaient -> disput", function() {deepEqual( Stem("disputaient"), "disput");});
test("disputait -> disput", function() {deepEqual( Stem("disputait"), "disput");});
test("dispute -> disput", function() {deepEqual( Stem("dispute"), "disput");});
test("disputer -> disput", function() {deepEqual( Stem("disputer"), "disput");});
test("disputèrent -> disput", function() {deepEqual( Stem("disputèrent"), "disput");});
test("disputons -> disputon", function() {deepEqual( Stem("disputons"), "disputon");});
test("disque -> disqu", function() {deepEqual( Stem("disque"), "disqu");});
test("dissembles -> dissembl", function() {deepEqual( Stem("dissembles"), "dissembl");});
test("dissent -> dissent", function() {deepEqual( Stem("dissent"), "dissent");});
test("disséquée -> dissequ", function() {deepEqual( Stem("disséquée"), "dissequ");});
test("dissertation -> dissert", function() {deepEqual( Stem("dissertation"), "dissert");});
test("dissertations -> dissert", function() {deepEqual( Stem("dissertations"), "dissert");});
test("disserte -> dissert", function() {deepEqual( Stem("disserte"), "dissert");});
test("dissimulaient -> dissimul", function() {deepEqual( Stem("dissimulaient"), "dissimul");});
test("dissimulait -> dissimul", function() {deepEqual( Stem("dissimulait"), "dissimul");});
test("dissimulant -> dissimul", function() {deepEqual( Stem("dissimulant"), "dissimul");});
test("dissimule -> dissimul", function() {deepEqual( Stem("dissimule"), "dissimul");});
test("dissimulée -> dissimul", function() {deepEqual( Stem("dissimulée"), "dissimul");});
test("dissimuler -> dissimul", function() {deepEqual( Stem("dissimuler"), "dissimul");});
test("dissimulerai -> dissimul", function() {deepEqual( Stem("dissimulerai"), "dissimul");});
test("dissimulerons -> dissimul", function() {deepEqual( Stem("dissimulerons"), "dissimul");});
test("dissimulons -> dissimulon", function() {deepEqual( Stem("dissimulons"), "dissimulon");});
test("dissipait -> dissip", function() {deepEqual( Stem("dissipait"), "dissip");});
test("dissipation -> dissip", function() {deepEqual( Stem("dissipation"), "dissip");});
test("dissipations -> dissip", function() {deepEqual( Stem("dissipations"), "dissip");});
test("dissipé -> dissip", function() {deepEqual( Stem("dissipé"), "dissip");});
test("dissipée -> dissip", function() {deepEqual( Stem("dissipée"), "dissip");});
test("dissipées -> dissip", function() {deepEqual( Stem("dissipées"), "dissip");});
test("dissiper -> dissip", function() {deepEqual( Stem("dissiper"), "dissip");});
test("dissipèrent -> dissip", function() {deepEqual( Stem("dissipèrent"), "dissip");});
test("dissolution -> dissolu", function() {deepEqual( Stem("dissolution"), "dissolu");});
test("distance -> distanc", function() {deepEqual( Stem("distance"), "distanc");});
test("distancé -> distanc", function() {deepEqual( Stem("distancé"), "distanc");});
test("distances -> distanc", function() {deepEqual( Stem("distances"), "distanc");});
test("distant -> dist", function() {deepEqual( Stem("distant"), "dist");});
test("distillée -> distill", function() {deepEqual( Stem("distillée"), "distill");});
test("distinctement -> distinct", function() {deepEqual( Stem("distinctement"), "distinct");});
test("distinctes -> distinct", function() {deepEqual( Stem("distinctes"), "distinct");});
test("distinction -> distinct", function() {deepEqual( Stem("distinction"), "distinct");});
test("distinctions -> distinct", function() {deepEqual( Stem("distinctions"), "distinct");});
test("distincts -> distinct", function() {deepEqual( Stem("distincts"), "distinct");});
test("distinguaient -> distingu", function() {deepEqual( Stem("distinguaient"), "distingu");});
test("distinguait -> distingu", function() {deepEqual( Stem("distinguait"), "distingu");});
test("distinguant -> distingu", function() {deepEqual( Stem("distinguant"), "distingu");});
test("distingue -> distingu", function() {deepEqual( Stem("distingue"), "distingu");});
test("distingué -> distingu", function() {deepEqual( Stem("distingué"), "distingu");});
test("distinguée -> distingu", function() {deepEqual( Stem("distinguée"), "distingu");});
test("distinguées -> distingu", function() {deepEqual( Stem("distinguées"), "distingu");});
test("distinguer -> distingu", function() {deepEqual( Stem("distinguer"), "distingu");});
test("distingués -> distingu", function() {deepEqual( Stem("distingués"), "distingu");});
test("distinguons -> distinguon", function() {deepEqual( Stem("distinguons"), "distinguon");});
test("distraction -> distract", function() {deepEqual( Stem("distraction"), "distract");});
test("distractions -> distract", function() {deepEqual( Stem("distractions"), "distract");});
test("distrairait -> distrair", function() {deepEqual( Stem("distrairait"), "distrair");});
test("distraire -> distrair", function() {deepEqual( Stem("distraire"), "distrair");});
test("distrait -> distr", function() {deepEqual( Stem("distrait"), "distr");});
test("distraite -> distrait", function() {deepEqual( Stem("distraite"), "distrait");});
test("distraites -> distrait", function() {deepEqual( Stem("distraites"), "distrait");});
test("distrayaient -> distrai", function() {deepEqual( Stem("distrayaient"), "distrai");});
test("distrayait -> distrai", function() {deepEqual( Stem("distrayait"), "distrai");});
test("distribua -> distribu", function() {deepEqual( Stem("distribua"), "distribu");});
test("distribuait -> distribu", function() {deepEqual( Stem("distribuait"), "distribu");});
test("distribue -> distribu", function() {deepEqual( Stem("distribue"), "distribu");});
test("distribué -> distribu", function() {deepEqual( Stem("distribué"), "distribu");});
test("distribuent -> distribuent", function() {deepEqual( Stem("distribuent"), "distribuent");});
test("distribuer -> distribu", function() {deepEqual( Stem("distribuer"), "distribu");});
test("distribuez -> distribu", function() {deepEqual( Stem("distribuez"), "distribu");});
test("distribution -> distribu", function() {deepEqual( Stem("distribution"), "distribu");});
test("distributions -> distribu", function() {deepEqual( Stem("distributions"), "distribu");});
test("distributive -> distribut", function() {deepEqual( Stem("distributive"), "distribut");});
test("dit -> dit", function() {deepEqual( Stem("dit"), "dit");});
test("dît -> dît", function() {deepEqual( Stem("dît"), "dît");});
test("dite -> dit", function() {deepEqual( Stem("dite"), "dit");});
test("dites -> dit", function() {deepEqual( Stem("dites"), "dit");});
test("dithyrambe -> dithyramb", function() {deepEqual( Stem("dithyrambe"), "dithyramb");});
test("dits -> dit", function() {deepEqual( Stem("dits"), "dit");});
test("diurne -> diurn", function() {deepEqual( Stem("diurne"), "diurn");});
test("divan -> divan", function() {deepEqual( Stem("divan"), "divan");});
test("divers -> diver", function() {deepEqual( Stem("divers"), "diver");});
test("diverses -> divers", function() {deepEqual( Stem("diverses"), "divers");});
test("diversion -> divers", function() {deepEqual( Stem("diversion"), "divers");});
test("divertir -> divert", function() {deepEqual( Stem("divertir"), "divert");});
test("divertissant -> divert", function() {deepEqual( Stem("divertissant"), "divert");});
test("divertissements -> divert", function() {deepEqual( Stem("divertissements"), "divert");});
test("divin -> divin", function() {deepEqual( Stem("divin"), "divin");});
test("divine -> divin", function() {deepEqual( Stem("divine"), "divin");});
test("divinité -> divin", function() {deepEqual( Stem("divinité"), "divin");});
test("divins -> divin", function() {deepEqual( Stem("divins"), "divin");});
test("divisa -> divis", function() {deepEqual( Stem("divisa"), "divis");});
test("divisait -> divis", function() {deepEqual( Stem("divisait"), "divis");});
test("divise -> divis", function() {deepEqual( Stem("divise"), "divis");});
test("divisé -> divis", function() {deepEqual( Stem("divisé"), "divis");});
test("divisée -> divis", function() {deepEqual( Stem("divisée"), "divis");});
test("divisées -> divis", function() {deepEqual( Stem("divisées"), "divis");});
test("divisèrent -> divis", function() {deepEqual( Stem("divisèrent"), "divis");});
test("divisés -> divis", function() {deepEqual( Stem("divisés"), "divis");});
test("division -> divis", function() {deepEqual( Stem("division"), "divis");});
test("divisions -> divis", function() {deepEqual( Stem("divisions"), "divis");});
test("divulguer -> divulgu", function() {deepEqual( Stem("divulguer"), "divulgu");});
test("dix -> dix", function() {deepEqual( Stem("dix"), "dix");});
test("dixerunt -> dixerunt", function() {deepEqual( Stem("dixerunt"), "dixerunt");});
test("dixième -> dixiem", function() {deepEqual( Stem("dixième"), "dixiem");});
test("dizaine -> dizain", function() {deepEqual( Stem("dizaine"), "dizain");});
test("do -> do", function() {deepEqual( Stem("do"), "do");});
test("docilité -> docil", function() {deepEqual( Stem("docilité"), "docil");});
test("docks -> dock", function() {deepEqual( Stem("docks"), "dock");});
test("docteur -> docteur", function() {deepEqual( Stem("docteur"), "docteur");});
test("doctrine -> doctrin", function() {deepEqual( Stem("doctrine"), "doctrin");});
test("doctrines -> doctrin", function() {deepEqual( Stem("doctrines"), "doctrin");});
test("document -> docu", function() {deepEqual( Stem("document"), "docu");});
test("documents -> docu", function() {deepEqual( Stem("documents"), "docu");});
test("dodge -> dodg", function() {deepEqual( Stem("dodge"), "dodg");});
test("doge -> dog", function() {deepEqual( Stem("doge"), "dog");});
test("dogmatiquement -> dogmat", function() {deepEqual( Stem("dogmatiquement"), "dogmat");});
test("dogme -> dogm", function() {deepEqual( Stem("dogme"), "dogm");});
test("doigt -> doigt", function() {deepEqual( Stem("doigt"), "doigt");});
test("doigts -> doigt", function() {deepEqual( Stem("doigts"), "doigt");});
test("dois -> dois", function() {deepEqual( Stem("dois"), "dois");});
test("doit -> doit", function() {deepEqual( Stem("doit"), "doit");});
test("doivent -> doivent", function() {deepEqual( Stem("doivent"), "doivent");});
test("dolci -> dolc", function() {deepEqual( Stem("dolci"), "dolc");});
test("dôle -> dôl", function() {deepEqual( Stem("dôle"), "dôl");});
test("doléances -> doléanc", function() {deepEqual( Stem("doléances"), "doléanc");});
test("dollar -> dollar", function() {deepEqual( Stem("dollar"), "dollar");});
test("dollars -> dollar", function() {deepEqual( Stem("dollars"), "dollar");});
test("dolman -> dolman", function() {deepEqual( Stem("dolman"), "dolman");});
test("domaine -> domain", function() {deepEqual( Stem("domaine"), "domain");});
test("domaniale -> domanial", function() {deepEqual( Stem("domaniale"), "domanial");});
test("dôme -> dôm", function() {deepEqual( Stem("dôme"), "dôm");});
test("domesticité -> domest", function() {deepEqual( Stem("domesticité"), "domest");});
test("domestique -> domest", function() {deepEqual( Stem("domestique"), "domest");});
test("domestiqué -> domestiqu", function() {deepEqual( Stem("domestiqué"), "domestiqu");});
test("domestiques -> domest", function() {deepEqual( Stem("domestiques"), "domest");});
test("domicile -> domicil", function() {deepEqual( Stem("domicile"), "domicil");});
test("domina -> domin", function() {deepEqual( Stem("domina"), "domin");});
test("dominaient -> domin", function() {deepEqual( Stem("dominaient"), "domin");});
test("dominait -> domin", function() {deepEqual( Stem("dominait"), "domin");});
test("dominant -> domin", function() {deepEqual( Stem("dominant"), "domin");});
test("dominante -> domin", function() {deepEqual( Stem("dominante"), "domin");});
test("dominateur -> domin", function() {deepEqual( Stem("dominateur"), "domin");});
test("domination -> domin", function() {deepEqual( Stem("domination"), "domin");});
test("domine -> domin", function() {deepEqual( Stem("domine"), "domin");});
test("dominé -> domin", function() {deepEqual( Stem("dominé"), "domin");});
test("dominée -> domin", function() {deepEqual( Stem("dominée"), "domin");});
test("domingue -> domingu", function() {deepEqual( Stem("domingue"), "domingu");});
test("domini -> domin", function() {deepEqual( Stem("domini"), "domin");});
test("dommage -> dommag", function() {deepEqual( Stem("dommage"), "dommag");});
test("dommages -> dommag", function() {deepEqual( Stem("dommages"), "dommag");});
test("dompté -> dompt", function() {deepEqual( Stem("dompté"), "dompt");});
test("dompter -> dompt", function() {deepEqual( Stem("dompter"), "dompt");});
test("don -> don", function() {deepEqual( Stem("don"), "don");});
test("donation -> donat", function() {deepEqual( Stem("donation"), "donat");});
test("donc -> donc", function() {deepEqual( Stem("donc"), "donc");});
test("dongo -> dongo", function() {deepEqual( Stem("dongo"), "dongo");});
test("donjon -> donjon", function() {deepEqual( Stem("donjon"), "donjon");});
test("donna -> don", function() {deepEqual( Stem("donna"), "don");});
test("donnai -> don", function() {deepEqual( Stem("donnai"), "don");});
test("donnaient -> don", function() {deepEqual( Stem("donnaient"), "don");});
test("donnait -> don", function() {deepEqual( Stem("donnait"), "don");});
test("donnant -> don", function() {deepEqual( Stem("donnant"), "don");});
test("donnassent -> don", function() {deepEqual( Stem("donnassent"), "don");});
test("donnât -> don", function() {deepEqual( Stem("donnât"), "don");});
test("donnâtes -> don", function() {deepEqual( Stem("donnâtes"), "don");});
test("donne -> don", function() {deepEqual( Stem("donne"), "don");});
test("donné -> don", function() {deepEqual( Stem("donné"), "don");});
test("donnée -> don", function() {deepEqual( Stem("donnée"), "don");});
test("données -> don", function() {deepEqual( Stem("données"), "don");});
test("donnent -> donnent", function() {deepEqual( Stem("donnent"), "donnent");});
test("donner -> don", function() {deepEqual( Stem("donner"), "don");});
test("donnera -> don", function() {deepEqual( Stem("donnera"), "don");});
test("donnerai -> don", function() {deepEqual( Stem("donnerai"), "don");});
test("donneraient -> don", function() {deepEqual( Stem("donneraient"), "don");});
test("donnerais -> don", function() {deepEqual( Stem("donnerais"), "don");});
test("donnerait -> don", function() {deepEqual( Stem("donnerait"), "don");});
test("donneras -> don", function() {deepEqual( Stem("donneras"), "don");});
test("donnèrent -> don", function() {deepEqual( Stem("donnèrent"), "don");});
test("donnerez -> don", function() {deepEqual( Stem("donnerez"), "don");});
test("donneriez -> don", function() {deepEqual( Stem("donneriez"), "don");});
test("donneront -> don", function() {deepEqual( Stem("donneront"), "don");});
test("donnes -> don", function() {deepEqual( Stem("donnes"), "don");});
test("donnés -> don", function() {deepEqual( Stem("donnés"), "don");});
test("donneur -> donneur", function() {deepEqual( Stem("donneur"), "donneur");});
test("donnez -> don", function() {deepEqual( Stem("donnez"), "don");});
test("donnions -> donnion", function() {deepEqual( Stem("donnions"), "donnion");});
test("donnons -> donnon", function() {deepEqual( Stem("donnons"), "donnon");});
test("dont -> dont", function() {deepEqual( Stem("dont"), "dont");});
test("dorat -> dorat", function() {deepEqual( Stem("dorat"), "dorat");});
test("doré -> dor", function() {deepEqual( Stem("doré"), "dor");});
test("dorée -> dor", function() {deepEqual( Stem("dorée"), "dor");});
test("dorées -> dor", function() {deepEqual( Stem("dorées"), "dor");});
test("dorénavant -> dorénav", function() {deepEqual( Stem("dorénavant"), "dorénav");});
test("dorés -> dor", function() {deepEqual( Stem("dorés"), "dor");});
test("dormaient -> dorm", function() {deepEqual( Stem("dormaient"), "dorm");});
test("dormait -> dorm", function() {deepEqual( Stem("dormait"), "dorm");});
test("dormantes -> dorm", function() {deepEqual( Stem("dormantes"), "dorm");});
test("dormeurs -> dormeur", function() {deepEqual( Stem("dormeurs"), "dormeur");});
test("dormi -> dorm", function() {deepEqual( Stem("dormi"), "dorm");});
test("dormir -> dorm", function() {deepEqual( Stem("dormir"), "dorm");});
test("dormirai -> dorm", function() {deepEqual( Stem("dormirai"), "dorm");});
test("dormit -> dorm", function() {deepEqual( Stem("dormit"), "dorm");});
test("dormît -> dorm", function() {deepEqual( Stem("dormît"), "dorm");});
test("dort -> dort", function() {deepEqual( Stem("dort"), "dort");});
test("dortoir -> dortoir", function() {deepEqual( Stem("dortoir"), "dortoir");});
test("dortoirs -> dortoir", function() {deepEqual( Stem("dortoirs"), "dortoir");});
test("dorures -> dorur", function() {deepEqual( Stem("dorures"), "dorur");});
test("dos -> dos", function() {deepEqual( Stem("dos"), "dos");});
test("dose -> dos", function() {deepEqual( Stem("dose"), "dos");});
test("dossier -> dossi", function() {deepEqual( Stem("dossier"), "dossi");});
test("dossiers -> dossi", function() {deepEqual( Stem("dossiers"), "dossi");});
test("dot -> dot", function() {deepEqual( Stem("dot"), "dot");});
test("douaire -> douair", function() {deepEqual( Stem("douaire"), "douair");});
test("douairière -> douairi", function() {deepEqual( Stem("douairière"), "douairi");});
test("douane -> douan", function() {deepEqual( Stem("douane"), "douan");});
test("douanier -> douani", function() {deepEqual( Stem("douanier"), "douani");});
test("douaniers -> douani", function() {deepEqual( Stem("douaniers"), "douani");});
test("doubla -> doubl", function() {deepEqual( Stem("doubla"), "doubl");});
test("doublant -> doubl", function() {deepEqual( Stem("doublant"), "doubl");});
test("double -> doubl", function() {deepEqual( Stem("double"), "doubl");});
test("doublé -> doubl", function() {deepEqual( Stem("doublé"), "doubl");});
test("doublée -> doubl", function() {deepEqual( Stem("doublée"), "doubl");});
test("doublement -> doubl", function() {deepEqual( Stem("doublement"), "doubl");});
test("doubler -> doubl", function() {deepEqual( Stem("doubler"), "doubl");});
test("doubles -> doubl", function() {deepEqual( Stem("doubles"), "doubl");});
test("doublure -> doublur", function() {deepEqual( Stem("doublure"), "doublur");});
test("doubs -> doub", function() {deepEqual( Stem("doubs"), "doub");});
test("doubt -> doubt", function() {deepEqual( Stem("doubt"), "doubt");});
test("douce -> douc", function() {deepEqual( Stem("douce"), "douc");});
test("doucement -> douc", function() {deepEqual( Stem("doucement"), "douc");});
test("douces -> douc", function() {deepEqual( Stem("douces"), "douc");});
test("douceur -> douceur", function() {deepEqual( Stem("douceur"), "douceur");});
test("douceurs -> douceur", function() {deepEqual( Stem("douceurs"), "douceur");});
test("doué -> dou", function() {deepEqual( Stem("doué"), "dou");});
test("douée -> dou", function() {deepEqual( Stem("douée"), "dou");});
test("doués -> dou", function() {deepEqual( Stem("doués"), "dou");});
test("douleur -> douleur", function() {deepEqual( Stem("douleur"), "douleur");});
test("douleurs -> douleur", function() {deepEqual( Stem("douleurs"), "douleur");});
test("douloureuse -> doulour", function() {deepEqual( Stem("douloureuse"), "doulour");});
test("douloureuses -> doulour", function() {deepEqual( Stem("douloureuses"), "doulour");});
test("douloureux -> doulour", function() {deepEqual( Stem("douloureux"), "doulour");});
test("douta -> dout", function() {deepEqual( Stem("douta"), "dout");});
test("doutait -> dout", function() {deepEqual( Stem("doutait"), "dout");});
test("doutât -> dout", function() {deepEqual( Stem("doutât"), "dout");});
test("doute -> dout", function() {deepEqual( Stem("doute"), "dout");});
test("douté -> dout", function() {deepEqual( Stem("douté"), "dout");});
test("doutée -> dout", function() {deepEqual( Stem("doutée"), "dout");});
test("douter -> dout", function() {deepEqual( Stem("douter"), "dout");});
test("douterez -> dout", function() {deepEqual( Stem("douterez"), "dout");});
test("doutes -> dout", function() {deepEqual( Stem("doutes"), "dout");});
test("douteuse -> douteux", function() {deepEqual( Stem("douteuse"), "douteux");});
test("douteuses -> douteux", function() {deepEqual( Stem("douteuses"), "douteux");});
test("douteux -> douteux", function() {deepEqual( Stem("douteux"), "douteux");});
test("doutez -> dout", function() {deepEqual( Stem("doutez"), "dout");});
test("douvres -> douvr", function() {deepEqual( Stem("douvres"), "douvr");});
test("doux -> doux", function() {deepEqual( Stem("doux"), "doux");});
test("douzaine -> douzain", function() {deepEqual( Stem("douzaine"), "douzain");});
test("douzaines -> douzain", function() {deepEqual( Stem("douzaines"), "douzain");});
test("douze -> douz", function() {deepEqual( Stem("douze"), "douz");});
test("doyen -> doyen", function() {deepEqual( Stem("doyen"), "doyen");});
test("dragon -> dragon", function() {deepEqual( Stem("dragon"), "dragon");});
test("dragons -> dragon", function() {deepEqual( Stem("dragons"), "dragon");});
test("dramatique -> dramat", function() {deepEqual( Stem("dramatique"), "dramat");});
test("dramatiques -> dramat", function() {deepEqual( Stem("dramatiques"), "dramat");});
test("drame -> dram", function() {deepEqual( Stem("drame"), "dram");});
test("drap -> drap", function() {deepEqual( Stem("drap"), "drap");});
test("drapeau -> drapeau", function() {deepEqual( Stem("drapeau"), "drapeau");});
test("drapeaux -> drapeau", function() {deepEqual( Stem("drapeaux"), "drapeau");});
test("drapée -> drap", function() {deepEqual( Stem("drapée"), "drap");});
test("drapier -> drapi", function() {deepEqual( Stem("drapier"), "drapi");});
test("draps -> drap", function() {deepEqual( Stem("draps"), "drap");});
test("drawing -> drawing", function() {deepEqual( Stem("drawing"), "drawing");});
test("dressaient -> dress", function() {deepEqual( Stem("dressaient"), "dress");});
test("dressait -> dress", function() {deepEqual( Stem("dressait"), "dress");});
test("dresse -> dress", function() {deepEqual( Stem("dresse"), "dress");});
test("dressé -> dress", function() {deepEqual( Stem("dressé"), "dress");});
test("dressée -> dress", function() {deepEqual( Stem("dressée"), "dress");});
test("dresser -> dress", function() {deepEqual( Stem("dresser"), "dress");});
test("dressés -> dress", function() {deepEqual( Stem("dressés"), "dress");});
test("drisses -> driss", function() {deepEqual( Stem("drisses"), "driss");});
test("drogue -> drogu", function() {deepEqual( Stem("drogue"), "drogu");});
test("drogues -> drogu", function() {deepEqual( Stem("drogues"), "drogu");});
test("droit -> droit", function() {deepEqual( Stem("droit"), "droit");});
test("droite -> droit", function() {deepEqual( Stem("droite"), "droit");});
test("droites -> droit", function() {deepEqual( Stem("droites"), "droit");});
test("droits -> droit", function() {deepEqual( Stem("droits"), "droit");});
test("droiture -> droitur", function() {deepEqual( Stem("droiture"), "droitur");});
test("drôle -> drôl", function() {deepEqual( Stem("drôle"), "drôl");});
test("drôles -> drôl", function() {deepEqual( Stem("drôles"), "drôl");});
test("drome -> drom", function() {deepEqual( Stem("drome"), "drom");});
test("dromes -> drom", function() {deepEqual( Stem("dromes"), "drom");});
test("du -> du", function() {deepEqual( Stem("du"), "du");});
test("dû -> dû", function() {deepEqual( Stem("dû"), "dû");});
test("dublin -> dublin", function() {deepEqual( Stem("dublin"), "dublin");});
test("dubois -> dubois", function() {deepEqual( Stem("dubois"), "dubois");});
test("duc -> duc", function() {deepEqual( Stem("duc"), "duc");});
test("ducats -> ducat", function() {deepEqual( Stem("ducats"), "ducat");});
test("duché -> duch", function() {deepEqual( Stem("duché"), "duch");});
test("duchesse -> duchess", function() {deepEqual( Stem("duchesse"), "duchess");});
test("duchesses -> duchess", function() {deepEqual( Stem("duchesses"), "duchess");});
test("ducrest -> ducrest", function() {deepEqual( Stem("ducrest"), "ducrest");});
test("ducros -> ducros", function() {deepEqual( Stem("ducros"), "ducros");});
test("ducs -> duc", function() {deepEqual( Stem("ducs"), "duc");});
test("dudit -> dud", function() {deepEqual( Stem("dudit"), "dud");});
test("due -> du", function() {deepEqual( Stem("due"), "du");});
test("duel -> duel", function() {deepEqual( Stem("duel"), "duel");});
test("duellistes -> duellist", function() {deepEqual( Stem("duellistes"), "duellist");});
test("duettino -> duettino", function() {deepEqual( Stem("duettino"), "duettino");});
test("dugnani -> dugnan", function() {deepEqual( Stem("dugnani"), "dugnan");});
test("dûment -> dûment", function() {deepEqual( Stem("dûment"), "dûment");});
test("dunette -> dunet", function() {deepEqual( Stem("dunette"), "dunet");});
test("dupe -> dup", function() {deepEqual( Stem("dupe"), "dup");});
test("duperie -> duper", function() {deepEqual( Stem("duperie"), "duper");});
test("dupes -> dup", function() {deepEqual( Stem("dupes"), "dup");});
test("duplicité -> dupliqu", function() {deepEqual( Stem("duplicité"), "dupliqu");});
test("duquel -> duquel", function() {deepEqual( Stem("duquel"), "duquel");});
test("dur -> dur", function() {deepEqual( Stem("dur"), "dur");});
test("dura -> dur", function() {deepEqual( Stem("dura"), "dur");});
test("durable -> durabl", function() {deepEqual( Stem("durable"), "durabl");});
test("durables -> durabl", function() {deepEqual( Stem("durables"), "durabl");});
test("duraient -> dur", function() {deepEqual( Stem("duraient"), "dur");});
test("durait -> dur", function() {deepEqual( Stem("durait"), "dur");});
test("durand -> durand", function() {deepEqual( Stem("durand"), "durand");});
test("durant -> dur", function() {deepEqual( Stem("durant"), "dur");});
test("durât -> dur", function() {deepEqual( Stem("durât"), "dur");});
test("durati -> durat", function() {deepEqual( Stem("durati"), "durat");});
test("durcie -> durc", function() {deepEqual( Stem("durcie"), "durc");});
test("dure -> dur", function() {deepEqual( Stem("dure"), "dur");});
test("duré -> dur", function() {deepEqual( Stem("duré"), "dur");});
test("durée -> dur", function() {deepEqual( Stem("durée"), "dur");});
test("durement -> dur", function() {deepEqual( Stem("durement"), "dur");});
test("durent -> durent", function() {deepEqual( Stem("durent"), "durent");});
test("durer -> dur", function() {deepEqual( Stem("durer"), "dur");});
test("durera -> dur", function() {deepEqual( Stem("durera"), "dur");});
test("dureraient -> dur", function() {deepEqual( Stem("dureraient"), "dur");});
test("durerait -> dur", function() {deepEqual( Stem("durerait"), "dur");});
test("dureront -> dur", function() {deepEqual( Stem("dureront"), "dur");});
test("dures -> dur", function() {deepEqual( Stem("dures"), "dur");});
test("dureté -> duret", function() {deepEqual( Stem("dureté"), "duret");});
test("durini -> durin", function() {deepEqual( Stem("durini"), "durin");});
test("durs -> dur", function() {deepEqual( Stem("durs"), "dur");});
test("dus -> dus", function() {deepEqual( Stem("dus"), "dus");});
test("dussé -> duss", function() {deepEqual( Stem("dussé"), "duss");});
test("dut -> dut", function() {deepEqual( Stem("dut"), "dut");});
test("dût -> dût", function() {deepEqual( Stem("dût"), "dût");});
test("duvoisin -> duvoisin", function() {deepEqual( Stem("duvoisin"), "duvoisin");});
test("e -> e", function() {deepEqual( Stem("e"), "e");});
test("è -> è", function() {deepEqual( Stem("è"), "è");});
test("earnshaw -> earnshaw", function() {deepEqual( Stem("earnshaw"), "earnshaw");});
test("eastern -> eastern", function() {deepEqual( Stem("eastern"), "eastern");});
test("eau -> eau", function() {deepEqual( Stem("eau"), "eau");});
test("eaux -> eau", function() {deepEqual( Stem("eaux"), "eau");});
test("ébahi -> ébah", function() {deepEqual( Stem("ébahi"), "ébah");});
test("ébahie -> ébah", function() {deepEqual( Stem("ébahie"), "ébah");});
test("ébahis -> ébah", function() {deepEqual( Stem("ébahis"), "ébah");});
test("ébahissement -> ébah", function() {deepEqual( Stem("ébahissement"), "ébah");});
test("ébattre -> ébattr", function() {deepEqual( Stem("ébattre"), "ébattr");});
test("ébaucha -> ébauch", function() {deepEqual( Stem("ébaucha"), "ébauch");});
test("ébaudissait -> ébaud", function() {deepEqual( Stem("ébaudissait"), "ébaud");});
test("ébène -> ében", function() {deepEqual( Stem("ébène"), "ében");});
test("ébloui -> éblou", function() {deepEqual( Stem("ébloui"), "éblou");});
test("éblouissant -> éblou", function() {deepEqual( Stem("éblouissant"), "éblou");});
test("éblouissante -> éblou", function() {deepEqual( Stem("éblouissante"), "éblou");});
test("éblouissement -> éblou", function() {deepEqual( Stem("éblouissement"), "éblou");});
test("éblouit -> éblou", function() {deepEqual( Stem("éblouit"), "éblou");});
test("ébouriffé -> ébouriff", function() {deepEqual( Stem("ébouriffé"), "ébouriff");});
test("ébouriffée -> ébouriff", function() {deepEqual( Stem("ébouriffée"), "ébouriff");});
test("ébranla -> ébranl", function() {deepEqual( Stem("ébranla"), "ébranl");});
test("ébranlaient -> ébranl", function() {deepEqual( Stem("ébranlaient"), "ébranl");});
test("ébranlant -> ébranl", function() {deepEqual( Stem("ébranlant"), "ébranl");});
test("ébranlé -> ébranl", function() {deepEqual( Stem("ébranlé"), "ébranl");});
test("ébranlée -> ébranl", function() {deepEqual( Stem("ébranlée"), "ébranl");});
test("ébranler -> ébranl", function() {deepEqual( Stem("ébranler"), "ébranl");});
test("ébréché -> ébrech", function() {deepEqual( Stem("ébréché"), "ébrech");});
test("ébruité -> ébruit", function() {deepEqual( Stem("ébruité"), "ébruit");});
test("écailles -> écaill", function() {deepEqual( Stem("écailles"), "écaill");});
test("écarlate -> écarlat", function() {deepEqual( Stem("écarlate"), "écarlat");});
test("écarquillés -> écarquill", function() {deepEqual( Stem("écarquillés"), "écarquill");});
test("écart -> écart", function() {deepEqual( Stem("écart"), "écart");});
test("écartaient -> écart", function() {deepEqual( Stem("écartaient"), "écart");});
test("écartait -> écart", function() {deepEqual( Stem("écartait"), "écart");});
test("écartant -> écart", function() {deepEqual( Stem("écartant"), "écart");});
test("écarte -> écart", function() {deepEqual( Stem("écarte"), "écart");});
test("écarté -> écart", function() {deepEqual( Stem("écarté"), "écart");});
test("écartée -> écart", function() {deepEqual( Stem("écartée"), "écart");});
test("écartées -> écart", function() {deepEqual( Stem("écartées"), "écart");});
test("écartelé -> écartel", function() {deepEqual( Stem("écartelé"), "écartel");});
test("écarter -> écart", function() {deepEqual( Stem("écarter"), "écart");});
test("eccellenza -> eccellenz", function() {deepEqual( Stem("eccellenza"), "eccellenz");});
test("ecclesiam -> ecclesiam", function() {deepEqual( Stem("ecclesiam"), "ecclesiam");});
test("ecclésiastique -> ecclésiast", function() {deepEqual( Stem("ecclésiastique"), "ecclésiast");});
test("ecclésiastiques -> ecclésiast", function() {deepEqual( Stem("ecclésiastiques"), "ecclésiast");});
test("écervelés -> écervel", function() {deepEqual( Stem("écervelés"), "écervel");});
test("échafaud -> échafaud", function() {deepEqual( Stem("échafaud"), "échafaud");});
test("échange -> échang", function() {deepEqual( Stem("échange"), "échang");});
test("échangé -> échang", function() {deepEqual( Stem("échangé"), "échang");});
test("échangeaient -> échang", function() {deepEqual( Stem("échangeaient"), "échang");});
test("échangeant -> échang", function() {deepEqual( Stem("échangeant"), "échang");});
test("échangée -> échang", function() {deepEqual( Stem("échangée"), "échang");});
test("échangées -> échang", function() {deepEqual( Stem("échangées"), "échang");});
test("échanger -> échang", function() {deepEqual( Stem("échanger"), "échang");});
test("échangés -> échang", function() {deepEqual( Stem("échangés"), "échang");});
test("échantillons -> échantillon", function() {deepEqual( Stem("échantillons"), "échantillon");});
test("échappa -> échapp", function() {deepEqual( Stem("échappa"), "échapp");});
test("échappaient -> échapp", function() {deepEqual( Stem("échappaient"), "échapp");});
test("échappait -> échapp", function() {deepEqual( Stem("échappait"), "échapp");});
test("échappe -> échapp", function() {deepEqual( Stem("échappe"), "échapp");});
test("échappé -> échapp", function() {deepEqual( Stem("échappé"), "échapp");});
test("échappée -> échapp", function() {deepEqual( Stem("échappée"), "échapp");});
test("échappées -> échapp", function() {deepEqual( Stem("échappées"), "échapp");});
test("échappement -> échapp", function() {deepEqual( Stem("échappement"), "échapp");});
test("échapper -> échapp", function() {deepEqual( Stem("échapper"), "échapp");});
test("échapperait -> échapp", function() {deepEqual( Stem("échapperait"), "échapp");});
test("échappés -> échapp", function() {deepEqual( Stem("échappés"), "échapp");});
test("échappons -> échappon", function() {deepEqual( Stem("échappons"), "échappon");});
test("écharpe -> écharp", function() {deepEqual( Stem("écharpe"), "écharp");});
test("échauffant -> échauff", function() {deepEqual( Stem("échauffant"), "échauff");});
test("échauffer -> échauff", function() {deepEqual( Stem("échauffer"), "échauff");});
test("échéant -> éché", function() {deepEqual( Stem("échéant"), "éché");});
test("échec -> échec", function() {deepEqual( Stem("échec"), "échec");});
test("échecs -> échec", function() {deepEqual( Stem("échecs"), "échec");});
test("échelle -> échel", function() {deepEqual( Stem("échelle"), "échel");});
test("échelles -> échel", function() {deepEqual( Stem("échelles"), "échel");});
test("échelon -> échelon", function() {deepEqual( Stem("échelon"), "échelon");});
test("échelons -> échelon", function() {deepEqual( Stem("échelons"), "échelon");});
test("échevelé -> échevel", function() {deepEqual( Stem("échevelé"), "échevel");});
test("echiquier -> echiqui", function() {deepEqual( Stem("echiquier"), "echiqui");});
test("échiquiers -> échiqui", function() {deepEqual( Stem("échiquiers"), "échiqui");});
test("échoiront -> échoiront", function() {deepEqual( Stem("échoiront"), "échoiront");});
test("échoppe -> échopp", function() {deepEqual( Stem("échoppe"), "échopp");});
test("échouait -> échou", function() {deepEqual( Stem("échouait"), "échou");});
test("échoue -> échou", function() {deepEqual( Stem("échoue"), "échou");});
test("échoué -> échou", function() {deepEqual( Stem("échoué"), "échou");});
test("échouer -> échou", function() {deepEqual( Stem("échouer"), "échou");});
test("échoueraient -> échou", function() {deepEqual( Stem("échoueraient"), "échou");});
test("échus -> échus", function() {deepEqual( Stem("échus"), "échus");});
test("échut -> échut", function() {deepEqual( Stem("échut"), "échut");});
test("éclair -> éclair", function() {deepEqual( Stem("éclair"), "éclair");});
test("éclairaient -> éclair", function() {deepEqual( Stem("éclairaient"), "éclair");});
test("éclairait -> éclair", function() {deepEqual( Stem("éclairait"), "éclair");});
test("éclairant -> éclair", function() {deepEqual( Stem("éclairant"), "éclair");});
test("éclaircies -> éclairc", function() {deepEqual( Stem("éclaircies"), "éclairc");});
test("éclaircir -> éclairc", function() {deepEqual( Stem("éclaircir"), "éclairc");});
test("éclaircirent -> éclairc", function() {deepEqual( Stem("éclaircirent"), "éclairc");});
test("éclaircissant -> éclairc", function() {deepEqual( Stem("éclaircissant"), "éclairc");});
test("éclaircissement -> éclairc", function() {deepEqual( Stem("éclaircissement"), "éclairc");});
test("éclaircissent -> éclairc", function() {deepEqual( Stem("éclaircissent"), "éclairc");});
test("éclaircit -> éclairc", function() {deepEqual( Stem("éclaircit"), "éclairc");});
test("éclairé -> éclair", function() {deepEqual( Stem("éclairé"), "éclair");});
test("éclairée -> éclair", function() {deepEqual( Stem("éclairée"), "éclair");});
test("éclairer -> éclair", function() {deepEqual( Stem("éclairer"), "éclair");});
test("éclairèrent -> éclair", function() {deepEqual( Stem("éclairèrent"), "éclair");});
test("éclairés -> éclair", function() {deepEqual( Stem("éclairés"), "éclair");});
test("éclairs -> éclair", function() {deepEqual( Stem("éclairs"), "éclair");});
test("éclat -> éclat", function() {deepEqual( Stem("éclat"), "éclat");});
test("éclata -> éclat", function() {deepEqual( Stem("éclata"), "éclat");});
test("éclataient -> éclat", function() {deepEqual( Stem("éclataient"), "éclat");});
test("éclatait -> éclat", function() {deepEqual( Stem("éclatait"), "éclat");});
test("éclatant -> éclat", function() {deepEqual( Stem("éclatant"), "éclat");});
test("éclatante -> éclat", function() {deepEqual( Stem("éclatante"), "éclat");});
test("éclatantes -> éclat", function() {deepEqual( Stem("éclatantes"), "éclat");});
test("éclatants -> éclat", function() {deepEqual( Stem("éclatants"), "éclat");});
test("éclate -> éclat", function() {deepEqual( Stem("éclate"), "éclat");});
test("éclaté -> éclat", function() {deepEqual( Stem("éclaté"), "éclat");});
test("éclatent -> éclatent", function() {deepEqual( Stem("éclatent"), "éclatent");});
test("éclater -> éclat", function() {deepEqual( Stem("éclater"), "éclat");});
test("éclatèrent -> éclat", function() {deepEqual( Stem("éclatèrent"), "éclat");});
test("éclats -> éclat", function() {deepEqual( Stem("éclats"), "éclat");});
test("éclipsait -> éclips", function() {deepEqual( Stem("éclipsait"), "éclips");});
test("éclipse -> éclips", function() {deepEqual( Stem("éclipse"), "éclips");});
test("éclipses -> éclips", function() {deepEqual( Stem("éclipses"), "éclips");});
test("éclipsés -> éclips", function() {deepEqual( Stem("éclipsés"), "éclips");});
test("école -> écol", function() {deepEqual( Stem("école"), "écol");});
test("écolier -> écoli", function() {deepEqual( Stem("écolier"), "écoli");});
test("éconduire -> éconduir", function() {deepEqual( Stem("éconduire"), "éconduir");});
test("éconduit -> éconduit", function() {deepEqual( Stem("éconduit"), "éconduit");});
test("économe -> économ", function() {deepEqual( Stem("économe"), "économ");});
test("économes -> économ", function() {deepEqual( Stem("économes"), "économ");});
test("économie -> économ", function() {deepEqual( Stem("économie"), "économ");});
test("économies -> économ", function() {deepEqual( Stem("économies"), "économ");});
test("économise -> économis", function() {deepEqual( Stem("économise"), "économis");});
test("économisées -> économis", function() {deepEqual( Stem("économisées"), "économis");});
test("économiser -> économis", function() {deepEqual( Stem("économiser"), "économis");});
test("économisés -> économis", function() {deepEqual( Stem("économisés"), "économis");});
test("écorcha -> écorch", function() {deepEqual( Stem("écorcha"), "écorch");});
test("écorchaient -> écorch", function() {deepEqual( Stem("écorchaient"), "écorch");});
test("écorchait -> écorch", function() {deepEqual( Stem("écorchait"), "écorch");});
test("écorché -> écorch", function() {deepEqual( Stem("écorché"), "écorch");});
test("écorchée -> écorch", function() {deepEqual( Stem("écorchée"), "écorch");});
test("écorcher -> écorch", function() {deepEqual( Stem("écorcher"), "écorch");});
test("écorchures -> écorchur", function() {deepEqual( Stem("écorchures"), "écorchur");});
test("écorné -> écorn", function() {deepEqual( Stem("écorné"), "écorn");});
test("écossaise -> écossais", function() {deepEqual( Stem("écossaise"), "écossais");});
test("écoula -> écoul", function() {deepEqual( Stem("écoula"), "écoul");});
test("écoulaient -> écoul", function() {deepEqual( Stem("écoulaient"), "écoul");});
test("écoulant -> écoul", function() {deepEqual( Stem("écoulant"), "écoul");});
test("écoulé -> écoul", function() {deepEqual( Stem("écoulé"), "écoul");});
test("écoulée -> écoul", function() {deepEqual( Stem("écoulée"), "écoul");});
test("écoulement -> écoul", function() {deepEqual( Stem("écoulement"), "écoul");});
test("écoulent -> écoulent", function() {deepEqual( Stem("écoulent"), "écoulent");});
test("écouler -> écoul", function() {deepEqual( Stem("écouler"), "écoul");});
test("écoulèrent -> écoul", function() {deepEqual( Stem("écoulèrent"), "écoul");});
test("écoulés -> écoul", function() {deepEqual( Stem("écoulés"), "écoul");});
test("écouta -> écout", function() {deepEqual( Stem("écouta"), "écout");});
test("écoutaient -> écout", function() {deepEqual( Stem("écoutaient"), "écout");});
test("écoutais -> écout", function() {deepEqual( Stem("écoutais"), "écout");});
test("écoutait -> écout", function() {deepEqual( Stem("écoutait"), "écout");});
test("écoutant -> écout", function() {deepEqual( Stem("écoutant"), "écout");});
test("écoute -> écout", function() {deepEqual( Stem("écoute"), "écout");});
test("écouté -> écout", function() {deepEqual( Stem("écouté"), "écout");});
test("écoutée -> écout", function() {deepEqual( Stem("écoutée"), "écout");});
test("écoutent -> écoutent", function() {deepEqual( Stem("écoutent"), "écoutent");});
test("écouter -> écout", function() {deepEqual( Stem("écouter"), "écout");});
test("écouterai -> écout", function() {deepEqual( Stem("écouterai"), "écout");});
test("écouteront -> écout", function() {deepEqual( Stem("écouteront"), "écout");});
test("écoutes -> écout", function() {deepEqual( Stem("écoutes"), "écout");});
test("écoutés -> écout", function() {deepEqual( Stem("écoutés"), "écout");});
test("ecoutez -> ecout", function() {deepEqual( Stem("ecoutez"), "ecout");});
test("écoutez -> écout", function() {deepEqual( Stem("écoutez"), "écout");});
test("écoutiez -> écout", function() {deepEqual( Stem("écoutiez"), "écout");});
test("écrasaient -> écras", function() {deepEqual( Stem("écrasaient"), "écras");});
test("écrasé -> écras", function() {deepEqual( Stem("écrasé"), "écras");});
test("écrasée -> écras", function() {deepEqual( Stem("écrasée"), "écras");});
test("écrasées -> écras", function() {deepEqual( Stem("écrasées"), "écras");});
test("écraser -> écras", function() {deepEqual( Stem("écraser"), "écras");});
test("écria -> écri", function() {deepEqual( Stem("écria"), "écri");});
test("écriaient -> écri", function() {deepEqual( Stem("écriaient"), "écri");});
test("écriait -> écri", function() {deepEqual( Stem("écriait"), "écri");});
test("écriant -> écri", function() {deepEqual( Stem("écriant"), "écri");});
test("écrie -> écri", function() {deepEqual( Stem("écrie"), "écri");});
test("écrié -> écri", function() {deepEqual( Stem("écrié"), "écri");});
test("écriée -> écri", function() {deepEqual( Stem("écriée"), "écri");});
test("écrient -> écrient", function() {deepEqual( Stem("écrient"), "écrient");});
test("écrier -> écri", function() {deepEqual( Stem("écrier"), "écri");});
test("écrièrent -> écri", function() {deepEqual( Stem("écrièrent"), "écri");});
test("écrin -> écrin", function() {deepEqual( Stem("écrin"), "écrin");});
test("écrira -> écrir", function() {deepEqual( Stem("écrira"), "écrir");});
test("écrirai -> écrir", function() {deepEqual( Stem("écrirai"), "écrir");});
test("écrirais -> écrir", function() {deepEqual( Stem("écrirais"), "écrir");});
test("écrirait -> écrir", function() {deepEqual( Stem("écrirait"), "écrir");});
test("écrire -> écrir", function() {deepEqual( Stem("écrire"), "écrir");});
test("écrirez -> écrir", function() {deepEqual( Stem("écrirez"), "écrir");});
test("écris -> écris", function() {deepEqual( Stem("écris"), "écris");});
test("écrit -> écrit", function() {deepEqual( Stem("écrit"), "écrit");});
test("écrite -> écrit", function() {deepEqual( Stem("écrite"), "écrit");});
test("écriteau -> écriteau", function() {deepEqual( Stem("écriteau"), "écriteau");});
test("écrites -> écrit", function() {deepEqual( Stem("écrites"), "écrit");});
test("écritoire -> écritoir", function() {deepEqual( Stem("écritoire"), "écritoir");});
test("écrits -> écrit", function() {deepEqual( Stem("écrits"), "écrit");});
test("écriture -> écritur", function() {deepEqual( Stem("écriture"), "écritur");});
test("écritures -> écritur", function() {deepEqual( Stem("écritures"), "écritur");});
test("écrivailleur -> écrivailleur", function() {deepEqual( Stem("écrivailleur"), "écrivailleur");});
test("écrivailleurs -> écrivailleur", function() {deepEqual( Stem("écrivailleurs"), "écrivailleur");});
test("écrivain -> écrivain", function() {deepEqual( Stem("écrivain"), "écrivain");});
test("écrivains -> écrivain", function() {deepEqual( Stem("écrivains"), "écrivain");});
test("écrivais -> écriv", function() {deepEqual( Stem("écrivais"), "écriv");});
test("écrivait -> écriv", function() {deepEqual( Stem("écrivait"), "écriv");});
test("écrivant -> écriv", function() {deepEqual( Stem("écrivant"), "écriv");});
test("écrivante -> écriv", function() {deepEqual( Stem("écrivante"), "écriv");});
test("écrive -> écriv", function() {deepEqual( Stem("écrive"), "écriv");});
test("écrivez -> écriv", function() {deepEqual( Stem("écrivez"), "écriv");});
test("écrivirent -> écriv", function() {deepEqual( Stem("écrivirent"), "écriv");});
test("écrivit -> écriv", function() {deepEqual( Stem("écrivit"), "écriv");});
test("écrivît -> écriv", function() {deepEqual( Stem("écrivît"), "écriv");});
test("écrivîtes -> écriv", function() {deepEqual( Stem("écrivîtes"), "écriv");});
test("écrou -> écrou", function() {deepEqual( Stem("écrou"), "écrou");});
test("écroué -> écrou", function() {deepEqual( Stem("écroué"), "écrou");});
test("écroula -> écroul", function() {deepEqual( Stem("écroula"), "écroul");});
test("écroulaient -> écroul", function() {deepEqual( Stem("écroulaient"), "écroul");});
test("écu -> écu", function() {deepEqual( Stem("écu"), "écu");});
test("écueil -> écueil", function() {deepEqual( Stem("écueil"), "écueil");});
test("écuelle -> écuel", function() {deepEqual( Stem("écuelle"), "écuel");});
test("écumait -> écum", function() {deepEqual( Stem("écumait"), "écum");});
test("ecumeur -> ecumeur", function() {deepEqual( Stem("ecumeur"), "ecumeur");});
test("écumeuses -> écum", function() {deepEqual( Stem("écumeuses"), "écum");});
test("écureuil -> écureuil", function() {deepEqual( Stem("écureuil"), "écureuil");});
test("écurie -> écur", function() {deepEqual( Stem("écurie"), "écur");});
test("écuries -> écur", function() {deepEqual( Stem("écuries"), "écur");});
test("écus -> écus", function() {deepEqual( Stem("écus"), "écus");});
test("écuyer -> écui", function() {deepEqual( Stem("écuyer"), "écui");});
test("édification -> édif", function() {deepEqual( Stem("édification"), "édif");});
test("édifice -> édific", function() {deepEqual( Stem("édifice"), "édific");});
test("edimbourg -> edimbourg", function() {deepEqual( Stem("edimbourg"), "edimbourg");});
test("édimbourg -> édimbourg", function() {deepEqual( Stem("édimbourg"), "édimbourg");});
test("edinburgh -> edinburgh", function() {deepEqual( Stem("edinburgh"), "edinburgh");});
test("éditer -> édit", function() {deepEqual( Stem("éditer"), "édit");});
test("éditeur -> éditeur", function() {deepEqual( Stem("éditeur"), "éditeur");});
test("édition -> édit", function() {deepEqual( Stem("édition"), "édit");});
test("éditions -> édit", function() {deepEqual( Stem("éditions"), "édit");});
test("edrisi -> edris", function() {deepEqual( Stem("edrisi"), "edris");});
test("éducation -> éduc", function() {deepEqual( Stem("éducation"), "éduc");});
test("éduquer -> éduqu", function() {deepEqual( Stem("éduquer"), "éduqu");});
test("effaça -> effac", function() {deepEqual( Stem("effaça"), "effac");});
test("efface -> effac", function() {deepEqual( Stem("efface"), "effac");});
test("effacé -> effac", function() {deepEqual( Stem("effacé"), "effac");});
test("effacée -> effac", function() {deepEqual( Stem("effacée"), "effac");});
test("effacées -> effac", function() {deepEqual( Stem("effacées"), "effac");});
test("effacer -> effac", function() {deepEqual( Stem("effacer"), "effac");});
test("effaré -> effar", function() {deepEqual( Stem("effaré"), "effar");});
test("effarouchant -> effarouch", function() {deepEqual( Stem("effarouchant"), "effarouch");});
test("effarouche -> effarouch", function() {deepEqual( Stem("effarouche"), "effarouch");});
test("effarouché -> effarouch", function() {deepEqual( Stem("effarouché"), "effarouch");});
test("effaroucher -> effarouch", function() {deepEqual( Stem("effaroucher"), "effarouch");});
test("effarouches -> effarouch", function() {deepEqual( Stem("effarouches"), "effarouch");});
test("effarouchés -> effarouch", function() {deepEqual( Stem("effarouchés"), "effarouch");});
test("effectivement -> effect", function() {deepEqual( Stem("effectivement"), "effect");});
test("effectives -> effect", function() {deepEqual( Stem("effectives"), "effect");});
test("efféminées -> effémin", function() {deepEqual( Stem("efféminées"), "effémin");});
test("effervescence -> effervescent", function() {deepEqual( Stem("effervescence"), "effervescent");});
test("effet -> effet", function() {deepEqual( Stem("effet"), "effet");});
test("effets -> effet", function() {deepEqual( Stem("effets"), "effet");});
test("effeuilla -> effeuill", function() {deepEqual( Stem("effeuilla"), "effeuill");});
test("effigie -> effig", function() {deepEqual( Stem("effigie"), "effig");});
test("effleurer -> effleur", function() {deepEqual( Stem("effleurer"), "effleur");});
test("efforçait -> efforc", function() {deepEqual( Stem("efforçait"), "efforc");});
test("effort -> effort", function() {deepEqual( Stem("effort"), "effort");});
test("efforts -> effort", function() {deepEqual( Stem("efforts"), "effort");});
test("effraie -> effrai", function() {deepEqual( Stem("effraie"), "effrai");});
test("effraya -> effrai", function() {deepEqual( Stem("effraya"), "effrai");});
test("effrayaient -> effrai", function() {deepEqual( Stem("effrayaient"), "effrai");});
test("effrayait -> effrai", function() {deepEqual( Stem("effrayait"), "effrai");});
test("effrayant -> effrai", function() {deepEqual( Stem("effrayant"), "effrai");});
test("effrayante -> effrai", function() {deepEqual( Stem("effrayante"), "effrai");});
test("effraye -> effray", function() {deepEqual( Stem("effraye"), "effray");});
test("effrayé -> effrai", function() {deepEqual( Stem("effrayé"), "effrai");});
test("effrayée -> effrai", function() {deepEqual( Stem("effrayée"), "effrai");});
test("effrayées -> effrai", function() {deepEqual( Stem("effrayées"), "effrai");});
test("effrayent -> effrayent", function() {deepEqual( Stem("effrayent"), "effrayent");});
test("effrayer -> effrai", function() {deepEqual( Stem("effrayer"), "effrai");});
test("effrayèrent -> effrai", function() {deepEqual( Stem("effrayèrent"), "effrai");});
test("effrayés -> effrai", function() {deepEqual( Stem("effrayés"), "effrai");});
test("effréné -> effren", function() {deepEqual( Stem("effréné"), "effren");});
test("effrénée -> effren", function() {deepEqual( Stem("effrénée"), "effren");});
test("effroi -> effroi", function() {deepEqual( Stem("effroi"), "effroi");});
test("effronté -> effront", function() {deepEqual( Stem("effronté"), "effront");});
test("effrontément -> effront", function() {deepEqual( Stem("effrontément"), "effront");});
test("effronterie -> effronter", function() {deepEqual( Stem("effronterie"), "effronter");});
test("effrontés -> effront", function() {deepEqual( Stem("effrontés"), "effront");});
test("effroyable -> effroi", function() {deepEqual( Stem("effroyable"), "effroi");});
test("effroyablement -> effroi", function() {deepEqual( Stem("effroyablement"), "effroi");});
test("effusion -> effus", function() {deepEqual( Stem("effusion"), "effus");});
test("égaiera -> égai", function() {deepEqual( Stem("égaiera"), "égai");});
test("égal -> égal", function() {deepEqual( Stem("égal"), "égal");});
test("égalait -> égal", function() {deepEqual( Stem("égalait"), "égal");});
test("égale -> égal", function() {deepEqual( Stem("égale"), "égal");});
test("également -> égal", function() {deepEqual( Stem("également"), "égal");});
test("égalent -> égalent", function() {deepEqual( Stem("égalent"), "égalent");});
test("égales -> égal", function() {deepEqual( Stem("égales"), "égal");});
test("égalité -> égal", function() {deepEqual( Stem("égalité"), "égal");});
test("égalités -> égal", function() {deepEqual( Stem("égalités"), "égal");});
test("égara -> égar", function() {deepEqual( Stem("égara"), "égar");});
test("égarait -> égar", function() {deepEqual( Stem("égarait"), "égar");});
test("égard -> égard", function() {deepEqual( Stem("égard"), "égard");});
test("égards -> égard", function() {deepEqual( Stem("égards"), "égard");});
test("égare -> égar", function() {deepEqual( Stem("égare"), "égar");});
test("égaré -> égar", function() {deepEqual( Stem("égaré"), "égar");});
test("égarée -> égar", function() {deepEqual( Stem("égarée"), "égar");});
test("égarement -> égar", function() {deepEqual( Stem("égarement"), "égar");});
test("égarements -> égar", function() {deepEqual( Stem("égarements"), "égar");});
test("égarer -> égar", function() {deepEqual( Stem("égarer"), "égar");});
test("égares -> égar", function() {deepEqual( Stem("égares"), "égar");});
test("égarés -> égar", function() {deepEqual( Stem("égarés"), "égar");});
test("égaux -> égal", function() {deepEqual( Stem("égaux"), "égal");});
test("égaya -> égai", function() {deepEqual( Stem("égaya"), "égai");});
test("égayée -> égai", function() {deepEqual( Stem("égayée"), "égai");});
test("égayer -> égai", function() {deepEqual( Stem("égayer"), "égai");});
test("égayés -> égai", function() {deepEqual( Stem("égayés"), "égai");});
test("église -> églis", function() {deepEqual( Stem("église"), "églis");});
test("églises -> églis", function() {deepEqual( Stem("églises"), "églis");});
test("ego -> ego", function() {deepEqual( Stem("ego"), "ego");});
test("égoïsme -> égoïsm", function() {deepEqual( Stem("égoïsme"), "égoïsm");});
test("égoïste -> égoïst", function() {deepEqual( Stem("égoïste"), "égoïst");});
test("égoïstes -> égoïst", function() {deepEqual( Stem("égoïstes"), "égoïst");});
test("égorgent -> égorgent", function() {deepEqual( Stem("égorgent"), "égorgent");});
test("égorger -> égorg", function() {deepEqual( Stem("égorger"), "égorg");});
test("égorgés -> égorg", function() {deepEqual( Stem("égorgés"), "égorg");});
test("égout -> égout", function() {deepEqual( Stem("égout"), "égout");});
test("égratignure -> égratignur", function() {deepEqual( Stem("égratignure"), "égratignur");});
test("égratignures -> égratignur", function() {deepEqual( Stem("égratignures"), "égratignur");});
test("egypte -> egypt", function() {deepEqual( Stem("egypte"), "egypt");});
test("égypte -> égypt", function() {deepEqual( Stem("égypte"), "égypt");});
test("egyptiens -> egyptien", function() {deepEqual( Stem("egyptiens"), "egyptien");});
test("égyptiens -> égyptien", function() {deepEqual( Stem("égyptiens"), "égyptien");});
test("eh -> eh", function() {deepEqual( Stem("eh"), "eh");});
test("el -> el", function() {deepEqual( Stem("el"), "el");});
test("élan -> élan", function() {deepEqual( Stem("élan"), "élan");});
test("élança -> élanc", function() {deepEqual( Stem("élança"), "élanc");});
test("élançait -> élanc", function() {deepEqual( Stem("élançait"), "élanc");});
test("élançant -> élanc", function() {deepEqual( Stem("élançant"), "élanc");});
test("élance -> élanc", function() {deepEqual( Stem("élance"), "élanc");});
test("élancé -> élanc", function() {deepEqual( Stem("élancé"), "élanc");});
test("élancer -> élanc", function() {deepEqual( Stem("élancer"), "élanc");});
test("élancera -> élanc", function() {deepEqual( Stem("élancera"), "élanc");});
test("élans -> élan", function() {deepEqual( Stem("élans"), "élan");});
test("élargi -> élarg", function() {deepEqual( Stem("élargi"), "élarg");});
test("élastiques -> élast", function() {deepEqual( Stem("élastiques"), "élast");});
test("elder -> elder", function() {deepEqual( Stem("elder"), "elder");});
test("électeur -> électeur", function() {deepEqual( Stem("électeur"), "électeur");});
test("électeurs -> électeur", function() {deepEqual( Stem("électeurs"), "électeur");});
test("élection -> élect", function() {deepEqual( Stem("élection"), "élect");});
test("élections -> élect", function() {deepEqual( Stem("élections"), "élect");});
test("électives -> élect", function() {deepEqual( Stem("électives"), "élect");});
test("électrique -> électr", function() {deepEqual( Stem("électrique"), "électr");});
test("électriques -> électr", function() {deepEqual( Stem("électriques"), "électr");});
test("électrisait -> électris", function() {deepEqual( Stem("électrisait"), "électris");});
test("élégamment -> éleg", function() {deepEqual( Stem("élégamment"), "éleg");});
test("élégance -> éleg", function() {deepEqual( Stem("élégance"), "éleg");});
test("élégant -> éleg", function() {deepEqual( Stem("élégant"), "éleg");});
test("élégante -> éleg", function() {deepEqual( Stem("élégante"), "éleg");});
test("élégantes -> éleg", function() {deepEqual( Stem("élégantes"), "éleg");});
test("élégants -> éleg", function() {deepEqual( Stem("élégants"), "éleg");});
test("élémentaire -> élémentair", function() {deepEqual( Stem("élémentaire"), "élémentair");});
test("éléments -> élément", function() {deepEqual( Stem("éléments"), "élément");});
test("éléphant -> éleph", function() {deepEqual( Stem("éléphant"), "éleph");});
test("eléphanta -> eléphant", function() {deepEqual( Stem("eléphanta"), "eléphant");});
test("éléphants -> éleph", function() {deepEqual( Stem("éléphants"), "éleph");});
test("éleva -> élev", function() {deepEqual( Stem("éleva"), "élev");});
test("élevaient -> élev", function() {deepEqual( Stem("élevaient"), "élev");});
test("élevait -> élev", function() {deepEqual( Stem("élevait"), "élev");});
test("élevant -> élev", function() {deepEqual( Stem("élevant"), "élev");});
test("élévation -> élev", function() {deepEqual( Stem("élévation"), "élev");});
test("élévations -> élev", function() {deepEqual( Stem("élévations"), "élev");});
test("élève -> élev", function() {deepEqual( Stem("élève"), "élev");});
test("élevé -> élev", function() {deepEqual( Stem("élevé"), "élev");});
test("élevée -> élev", function() {deepEqual( Stem("élevée"), "élev");});
test("élevées -> élev", function() {deepEqual( Stem("élevées"), "élev");});
test("élèvent -> élèvent", function() {deepEqual( Stem("élèvent"), "élèvent");});
test("élever -> élev", function() {deepEqual( Stem("élever"), "élev");});
test("élèvera -> élev", function() {deepEqual( Stem("élèvera"), "élev");});
test("élèverai -> élev", function() {deepEqual( Stem("élèverai"), "élev");});
test("élèverez -> élev", function() {deepEqual( Stem("élèverez"), "élev");});
test("élèves -> élev", function() {deepEqual( Stem("élèves"), "élev");});
test("élevés -> élev", function() {deepEqual( Stem("élevés"), "élev");});
test("éleveurs -> éleveur", function() {deepEqual( Stem("éleveurs"), "éleveur");});
test("élisa -> élis", function() {deepEqual( Stem("élisa"), "élis");});
test("élite -> élit", function() {deepEqual( Stem("élite"), "élit");});
test("elko -> elko", function() {deepEqual( Stem("elko"), "elko");});
test("elle -> elle", function() {deepEqual( Stem("elle"), "elle");});
test("elles -> elle", function() {deepEqual( Stem("elles"), "elle");});
test("ellora -> ellor", function() {deepEqual( Stem("ellora"), "ellor");});
test("élocution -> élocu", function() {deepEqual( Stem("élocution"), "élocu");});
test("éloge -> élog", function() {deepEqual( Stem("éloge"), "élog");});
test("éloges -> élog", function() {deepEqual( Stem("éloges"), "élog");});
test("éloigna -> éloign", function() {deepEqual( Stem("éloigna"), "éloign");});
test("éloignaient -> éloign", function() {deepEqual( Stem("éloignaient"), "éloign");});
test("éloignais -> éloign", function() {deepEqual( Stem("éloignais"), "éloign");});
test("éloignait -> éloign", function() {deepEqual( Stem("éloignait"), "éloign");});
test("éloignant -> éloign", function() {deepEqual( Stem("éloignant"), "éloign");});
test("éloignât -> éloign", function() {deepEqual( Stem("éloignât"), "éloign");});
test("éloigne -> éloign", function() {deepEqual( Stem("éloigne"), "éloign");});
test("éloigné -> éloign", function() {deepEqual( Stem("éloigné"), "éloign");});
test("éloignée -> éloign", function() {deepEqual( Stem("éloignée"), "éloign");});
test("éloignées -> éloign", function() {deepEqual( Stem("éloignées"), "éloign");});
test("éloignement -> éloign", function() {deepEqual( Stem("éloignement"), "éloign");});
test("éloigner -> éloign", function() {deepEqual( Stem("éloigner"), "éloign");});
test("éloignerai -> éloign", function() {deepEqual( Stem("éloignerai"), "éloign");});
test("éloignerait -> éloign", function() {deepEqual( Stem("éloignerait"), "éloign");});
test("éloignèrent -> éloign", function() {deepEqual( Stem("éloignèrent"), "éloign");});
test("éloignés -> éloign", function() {deepEqual( Stem("éloignés"), "éloign");});
test("éloignez -> éloign", function() {deepEqual( Stem("éloignez"), "éloign");});
test("éloigniez -> éloign", function() {deepEqual( Stem("éloigniez"), "éloign");});
test("éloquence -> éloquent", function() {deepEqual( Stem("éloquence"), "éloquent");});
test("éloquent -> éloquent", function() {deepEqual( Stem("éloquent"), "éloquent");});
test("éloquente -> éloquent", function() {deepEqual( Stem("éloquente"), "éloquent");});
test("élu -> élu", function() {deepEqual( Stem("élu"), "élu");});
test("éluder -> élud", function() {deepEqual( Stem("éluder"), "élud");});
test("elysées -> elys", function() {deepEqual( Stem("elysées"), "elys");});
test("élysées -> élys", function() {deepEqual( Stem("élysées"), "élys");});
test("émaillée -> émaill", function() {deepEqual( Stem("émaillée"), "émaill");});
test("emballée -> emball", function() {deepEqual( Stem("emballée"), "emball");});
test("emballer -> emball", function() {deepEqual( Stem("emballer"), "emball");});
test("embarcation -> embarc", function() {deepEqual( Stem("embarcation"), "embarc");});
test("embarcations -> embarc", function() {deepEqual( Stem("embarcations"), "embarc");});
test("embardée -> embard", function() {deepEqual( Stem("embardée"), "embard");});
test("embardées -> embard", function() {deepEqual( Stem("embardées"), "embard");});
test("embarqua -> embarqu", function() {deepEqual( Stem("embarqua"), "embarqu");});
test("embarquait -> embarqu", function() {deepEqual( Stem("embarquait"), "embarqu");});
test("embarquant -> embarqu", function() {deepEqual( Stem("embarquant"), "embarqu");});
test("embarque -> embarqu", function() {deepEqual( Stem("embarque"), "embarqu");});
test("embarqué -> embarqu", function() {deepEqual( Stem("embarqué"), "embarqu");});
test("embarquement -> embarqu", function() {deepEqual( Stem("embarquement"), "embarqu");});
test("embarquer -> embarqu", function() {deepEqual( Stem("embarquer"), "embarqu");});
test("embarqués -> embarqu", function() {deepEqual( Stem("embarqués"), "embarqu");});
test("embarras -> embarr", function() {deepEqual( Stem("embarras"), "embarr");});
test("embarrassa -> embarrass", function() {deepEqual( Stem("embarrassa"), "embarrass");});
test("embarrassait -> embarrass", function() {deepEqual( Stem("embarrassait"), "embarrass");});
test("embarrasse -> embarr", function() {deepEqual( Stem("embarrasse"), "embarr");});
test("embarrassé -> embarrass", function() {deepEqual( Stem("embarrassé"), "embarrass");});
test("embarrassée -> embarrass", function() {deepEqual( Stem("embarrassée"), "embarrass");});
test("embarrasser -> embarrass", function() {deepEqual( Stem("embarrasser"), "embarrass");});
test("embarrassés -> embarrass", function() {deepEqual( Stem("embarrassés"), "embarrass");});
test("embaumé -> embaum", function() {deepEqual( Stem("embaumé"), "embaum");});
test("embaumée -> embaum", function() {deepEqual( Stem("embaumée"), "embaum");});
test("embelli -> embel", function() {deepEqual( Stem("embelli"), "embel");});
test("embellie -> embel", function() {deepEqual( Stem("embellie"), "embel");});
test("embellir -> embel", function() {deepEqual( Stem("embellir"), "embel");});
test("emblée -> emblé", function() {deepEqual( Stem("emblée"), "emblé");});
test("emblème -> emblem", function() {deepEqual( Stem("emblème"), "emblem");});
test("embonpoint -> embonpoint", function() {deepEqual( Stem("embonpoint"), "embonpoint");});
test("embossent -> embossent", function() {deepEqual( Stem("embossent"), "embossent");});
test("embouchure -> embouchur", function() {deepEqual( Stem("embouchure"), "embouchur");});
test("embouquait -> embouqu", function() {deepEqual( Stem("embouquait"), "embouqu");});
test("embourbant -> embourb", function() {deepEqual( Stem("embourbant"), "embourb");});
test("embourser -> embours", function() {deepEqual( Stem("embourser"), "embours");});
test("embranchement -> embranch", function() {deepEqual( Stem("embranchement"), "embranch");});
test("embranchements -> embranch", function() {deepEqual( Stem("embranchements"), "embranch");});
test("embrasé -> embras", function() {deepEqual( Stem("embrasé"), "embras");});
test("embrasée -> embras", function() {deepEqual( Stem("embrasée"), "embras");});
test("embrassa -> embrass", function() {deepEqual( Stem("embrassa"), "embrass");});
test("embrassaient -> embrass", function() {deepEqual( Stem("embrassaient"), "embrass");});
test("embrassait -> embrass", function() {deepEqual( Stem("embrassait"), "embrass");});
test("embrassant -> embrass", function() {deepEqual( Stem("embrassant"), "embrass");});
test("embrasse -> embrass", function() {deepEqual( Stem("embrasse"), "embrass");});
test("embrassé -> embrass", function() {deepEqual( Stem("embrassé"), "embrass");});
test("embrassements -> embrass", function() {deepEqual( Stem("embrassements"), "embrass");});
test("embrasser -> embrass", function() {deepEqual( Stem("embrasser"), "embrass");});
test("embrasserais -> embrass", function() {deepEqual( Stem("embrasserais"), "embrass");});
test("embrassèrent -> embrass", function() {deepEqual( Stem("embrassèrent"), "embrass");});
test("embrouilla -> embrouill", function() {deepEqual( Stem("embrouilla"), "embrouill");});
test("embrouillant -> embrouill", function() {deepEqual( Stem("embrouillant"), "embrouill");});
test("embrouille -> embrouill", function() {deepEqual( Stem("embrouille"), "embrouill");});
test("embrouiller -> embrouill", function() {deepEqual( Stem("embrouiller"), "embrouill");});
test("embrumé -> embrum", function() {deepEqual( Stem("embrumé"), "embrum");});
test("embrunir -> embrun", function() {deepEqual( Stem("embrunir"), "embrun");});
test("embruns -> embrun", function() {deepEqual( Stem("embruns"), "embrun");});
test("embûche -> embûch", function() {deepEqual( Stem("embûche"), "embûch");});
test("embûches -> embûch", function() {deepEqual( Stem("embûches"), "embûch");});
test("embuscade -> embuscad", function() {deepEqual( Stem("embuscade"), "embuscad");});
test("émergeait -> émerg", function() {deepEqual( Stem("émergeait"), "émerg");});
test("émerveillé -> émerveil", function() {deepEqual( Stem("émerveillé"), "émerveil");});
test("émerveillée -> émerveil", function() {deepEqual( Stem("émerveillée"), "émerveil");});
test("émettre -> émettr", function() {deepEqual( Stem("émettre"), "émettr");});
test("émeute -> émeut", function() {deepEqual( Stem("émeute"), "émeut");});
test("émeuvent -> émeuvent", function() {deepEqual( Stem("émeuvent"), "émeuvent");});
test("émigrants -> émigr", function() {deepEqual( Stem("émigrants"), "émigr");});
test("émigration -> émigr", function() {deepEqual( Stem("émigration"), "émigr");});
test("émigrera -> émigr", function() {deepEqual( Stem("émigrera"), "émigr");});
test("éminemment -> éminent", function() {deepEqual( Stem("éminemment"), "éminent");});
test("émissaire -> émissair", function() {deepEqual( Stem("émissaire"), "émissair");});
test("emmancher -> emmanch", function() {deepEqual( Stem("emmancher"), "emmanch");});
test("emmêlés -> emmêl", function() {deepEqual( Stem("emmêlés"), "emmêl");});
test("emmena -> emmen", function() {deepEqual( Stem("emmena"), "emmen");});
test("emmenaient -> emmen", function() {deepEqual( Stem("emmenaient"), "emmen");});
test("emmenait -> emmen", function() {deepEqual( Stem("emmenait"), "emmen");});
test("emmène -> emmen", function() {deepEqual( Stem("emmène"), "emmen");});
test("emmené -> emmen", function() {deepEqual( Stem("emmené"), "emmen");});
test("emmener -> emmen", function() {deepEqual( Stem("emmener"), "emmen");});
test("emmènerait -> emmen", function() {deepEqual( Stem("emmènerait"), "emmen");});
test("emmènes -> emmen", function() {deepEqual( Stem("emmènes"), "emmen");});
test("émoi -> émoi", function() {deepEqual( Stem("émoi"), "émoi");});
test("émotion -> émot", function() {deepEqual( Stem("émotion"), "émot");});
test("émotions -> émot", function() {deepEqual( Stem("émotions"), "émot");});
test("émoussés -> émouss", function() {deepEqual( Stem("émoussés"), "émouss");});
test("émoustiller -> émoustill", function() {deepEqual( Stem("émoustiller"), "émoustill");});
test("émouvoir -> émouvoir", function() {deepEqual( Stem("émouvoir"), "émouvoir");});
test("empaquetée -> empaquet", function() {deepEqual( Stem("empaquetée"), "empaquet");});
test("empara -> empar", function() {deepEqual( Stem("empara"), "empar");});
test("emparaient -> empar", function() {deepEqual( Stem("emparaient"), "empar");});
test("emparait -> empar", function() {deepEqual( Stem("emparait"), "empar");});
test("emparant -> empar", function() {deepEqual( Stem("emparant"), "empar");});
test("emparé -> empar", function() {deepEqual( Stem("emparé"), "empar");});
test("emparer -> empar", function() {deepEqual( Stem("emparer"), "empar");});
test("emparèrent -> empar", function() {deepEqual( Stem("emparèrent"), "empar");});
test("emparés -> empar", function() {deepEqual( Stem("emparés"), "empar");});
test("empaumer -> empaum", function() {deepEqual( Stem("empaumer"), "empaum");});
test("empêcha -> empêch", function() {deepEqual( Stem("empêcha"), "empêch");});
test("empêchaient -> empêch", function() {deepEqual( Stem("empêchaient"), "empêch");});
test("empêchait -> empêch", function() {deepEqual( Stem("empêchait"), "empêch");});
test("empêchât -> empêch", function() {deepEqual( Stem("empêchât"), "empêch");});
test("empêche -> empêch", function() {deepEqual( Stem("empêche"), "empêch");});
test("empêché -> empêch", function() {deepEqual( Stem("empêché"), "empêch");});
test("empêchée -> empêch", function() {deepEqual( Stem("empêchée"), "empêch");});
test("empêchent -> empêchent", function() {deepEqual( Stem("empêchent"), "empêchent");});
test("empêcher -> empêch", function() {deepEqual( Stem("empêcher"), "empêch");});
test("empêchera -> empêch", function() {deepEqual( Stem("empêchera"), "empêch");});
test("empêcherai -> empêch", function() {deepEqual( Stem("empêcherai"), "empêch");});
test("empêcheraient -> empêch", function() {deepEqual( Stem("empêcheraient"), "empêch");});
test("empêcherait -> empêch", function() {deepEqual( Stem("empêcherait"), "empêch");});
test("empêchèrent -> empêch", function() {deepEqual( Stem("empêchèrent"), "empêch");});
test("empêcheront -> empêch", function() {deepEqual( Stem("empêcheront"), "empêch");});
test("empêches -> empêch", function() {deepEqual( Stem("empêches"), "empêch");});
test("empêchez -> empêch", function() {deepEqual( Stem("empêchez"), "empêch");});
test("empereur -> empereur", function() {deepEqual( Stem("empereur"), "empereur");});
test("empereurs -> empereur", function() {deepEqual( Stem("empereurs"), "empereur");});
test("empesé -> empes", function() {deepEqual( Stem("empesé"), "empes");});
test("empestée -> empest", function() {deepEqual( Stem("empestée"), "empest");});
test("empêtrés -> empêtr", function() {deepEqual( Stem("empêtrés"), "empêtr");});
test("emphase -> emphas", function() {deepEqual( Stem("emphase"), "emphas");});
test("emphatique -> emphat", function() {deepEqual( Stem("emphatique"), "emphat");});
test("emphatiques -> emphat", function() {deepEqual( Stem("emphatiques"), "emphat");});
test("empilé -> empil", function() {deepEqual( Stem("empilé"), "empil");});
test("empir -> empir", function() {deepEqual( Stem("empir"), "empir");});
test("empire -> empir", function() {deepEqual( Stem("empire"), "empir");});
test("empires -> empir", function() {deepEqual( Stem("empires"), "empir");});
test("emplacement -> emplac", function() {deepEqual( Stem("emplacement"), "emplac");});
test("emplettes -> emplet", function() {deepEqual( Stem("emplettes"), "emplet");});
test("emplissent -> emplissent", function() {deepEqual( Stem("emplissent"), "emplissent");});
test("emploi -> emploi", function() {deepEqual( Stem("emploi"), "emploi");});
test("emploie -> emploi", function() {deepEqual( Stem("emploie"), "emploi");});
test("emploient -> emploient", function() {deepEqual( Stem("emploient"), "emploient");});
test("emploierai -> emploi", function() {deepEqual( Stem("emploierai"), "emploi");});
test("emploieraient -> emploi", function() {deepEqual( Stem("emploieraient"), "emploi");});
test("emploierais -> emploi", function() {deepEqual( Stem("emploierais"), "emploi");});
test("emploierait -> emploi", function() {deepEqual( Stem("emploierait"), "emploi");});
test("emplois -> emplois", function() {deepEqual( Stem("emplois"), "emplois");});
test("employa -> emploi", function() {deepEqual( Stem("employa"), "emploi");});
test("employaient -> emploi", function() {deepEqual( Stem("employaient"), "emploi");});
test("employait -> emploi", function() {deepEqual( Stem("employait"), "emploi");});
test("employant -> emploi", function() {deepEqual( Stem("employant"), "emploi");});
test("employât -> emploi", function() {deepEqual( Stem("employât"), "emploi");});
test("employâtes -> emploi", function() {deepEqual( Stem("employâtes"), "emploi");});
test("employé -> emploi", function() {deepEqual( Stem("employé"), "emploi");});
test("employée -> emploi", function() {deepEqual( Stem("employée"), "emploi");});
test("employées -> emploi", function() {deepEqual( Stem("employées"), "emploi");});
test("employer -> emploi", function() {deepEqual( Stem("employer"), "emploi");});
test("employés -> emploi", function() {deepEqual( Stem("employés"), "emploi");});
test("employez -> emploi", function() {deepEqual( Stem("employez"), "emploi");});
test("emplumés -> emplum", function() {deepEqual( Stem("emplumés"), "emplum");});
test("empoché -> empoch", function() {deepEqual( Stem("empoché"), "empoch");});
test("empoigné -> empoign", function() {deepEqual( Stem("empoigné"), "empoign");});
test("empoignera -> empoign", function() {deepEqual( Stem("empoignera"), "empoign");});
test("empoisonna -> empoison", function() {deepEqual( Stem("empoisonna"), "empoison");});
test("empoisonnaient -> empoison", function() {deepEqual( Stem("empoisonnaient"), "empoison");});
test("empoisonnait -> empoison", function() {deepEqual( Stem("empoisonnait"), "empoison");});
test("empoisonne -> empoison", function() {deepEqual( Stem("empoisonne"), "empoison");});
test("empoisonné -> empoison", function() {deepEqual( Stem("empoisonné"), "empoison");});
test("empoisonnée -> empoison", function() {deepEqual( Stem("empoisonnée"), "empoison");});
test("empoisonnement -> empoison", function() {deepEqual( Stem("empoisonnement"), "empoison");});
test("empoisonnent -> empoisonnent", function() {deepEqual( Stem("empoisonnent"), "empoisonnent");});
test("empoisonner -> empoison", function() {deepEqual( Stem("empoisonner"), "empoison");});
test("empoisonnerai -> empoison", function() {deepEqual( Stem("empoisonnerai"), "empoison");});
test("empoisonnerait -> empoison", function() {deepEqual( Stem("empoisonnerait"), "empoison");});
test("empoisonnés -> empoison", function() {deepEqual( Stem("empoisonnés"), "empoison");});
test("empoisonneur -> empoisonneur", function() {deepEqual( Stem("empoisonneur"), "empoisonneur");});
test("empoisonneurs -> empoisonneur", function() {deepEqual( Stem("empoisonneurs"), "empoisonneur");});
test("emporta -> emport", function() {deepEqual( Stem("emporta"), "emport");});
test("emportaient -> emport", function() {deepEqual( Stem("emportaient"), "emport");});
test("emportait -> emport", function() {deepEqual( Stem("emportait"), "emport");});
test("emportant -> emport", function() {deepEqual( Stem("emportant"), "emport");});
test("emporte -> emport", function() {deepEqual( Stem("emporte"), "emport");});
test("emporté -> emport", function() {deepEqual( Stem("emporté"), "emport");});
test("emportée -> emport", function() {deepEqual( Stem("emportée"), "emport");});
test("emportées -> emport", function() {deepEqual( Stem("emportées"), "emport");});
test("emportement -> emport", function() {deepEqual( Stem("emportement"), "emport");});
test("emportent -> emportent", function() {deepEqual( Stem("emportent"), "emportent");});
test("emporter -> emport", function() {deepEqual( Stem("emporter"), "emport");});
test("emporterait -> emport", function() {deepEqual( Stem("emporterait"), "emport");});
test("emporterez -> emport", function() {deepEqual( Stem("emporterez"), "emport");});
test("emporteront -> emport", function() {deepEqual( Stem("emporteront"), "emport");});
test("emportés -> emport", function() {deepEqual( Stem("emportés"), "emport");});
test("empreinte -> empreint", function() {deepEqual( Stem("empreinte"), "empreint");});
test("empressa -> empress", function() {deepEqual( Stem("empressa"), "empress");});
test("empressé -> empress", function() {deepEqual( Stem("empressé"), "empress");});
test("empressée -> empress", function() {deepEqual( Stem("empressée"), "empress");});
test("empressées -> empress", function() {deepEqual( Stem("empressées"), "empress");});
test("empressement -> empress", function() {deepEqual( Stem("empressement"), "empress");});
test("empressements -> empress", function() {deepEqual( Stem("empressements"), "empress");});
test("empressèrent -> empress", function() {deepEqual( Stem("empressèrent"), "empress");});
test("empressés -> empress", function() {deepEqual( Stem("empressés"), "empress");});
test("emprisonne -> emprison", function() {deepEqual( Stem("emprisonne"), "emprison");});
test("emprisonné -> emprison", function() {deepEqual( Stem("emprisonné"), "emprison");});
test("emprisonnée -> emprison", function() {deepEqual( Stem("emprisonnée"), "emprison");});
test("emprisonnement -> emprison", function() {deepEqual( Stem("emprisonnement"), "emprison");});
test("emprunt -> emprunt", function() {deepEqual( Stem("emprunt"), "emprunt");});
test("emprunta -> emprunt", function() {deepEqual( Stem("emprunta"), "emprunt");});
test("emprunté -> emprunt", function() {deepEqual( Stem("emprunté"), "emprunt");});
test("emprunter -> emprunt", function() {deepEqual( Stem("emprunter"), "emprunt");});
test("empruntés -> emprunt", function() {deepEqual( Stem("empruntés"), "emprunt");});
test("ému -> ému", function() {deepEqual( Stem("ému"), "ému");});
test("émue -> ému", function() {deepEqual( Stem("émue"), "ému");});
test("émule -> émul", function() {deepEqual( Stem("émule"), "émul");});
test("émurent -> émurent", function() {deepEqual( Stem("émurent"), "émurent");});
test("émus -> émus", function() {deepEqual( Stem("émus"), "émus");});
test("émut -> émut", function() {deepEqual( Stem("émut"), "émut");});
test("en -> en", function() {deepEqual( Stem("en"), "en");});
test("encablure -> encablur", function() {deepEqual( Stem("encablure"), "encablur");});
test("encadre -> encadr", function() {deepEqual( Stem("encadre"), "encadr");});
test("encadré -> encadr", function() {deepEqual( Stem("encadré"), "encadr");});
test("encadrées -> encadr", function() {deepEqual( Stem("encadrées"), "encadr");});
test("enceinte -> enceint", function() {deepEqual( Stem("enceinte"), "enceint");});
test("encens -> encen", function() {deepEqual( Stem("encens"), "encen");});
test("enchaîné -> enchaîn", function() {deepEqual( Stem("enchaîné"), "enchaîn");});
test("enchaînée -> enchaîn", function() {deepEqual( Stem("enchaînée"), "enchaîn");});
test("enchaînés -> enchaîn", function() {deepEqual( Stem("enchaînés"), "enchaîn");});
test("enchantait -> enchant", function() {deepEqual( Stem("enchantait"), "enchant");});
test("enchanté -> enchant", function() {deepEqual( Stem("enchanté"), "enchant");});
test("enchantée -> enchant", function() {deepEqual( Stem("enchantée"), "enchant");});
test("enchantement -> enchant", function() {deepEqual( Stem("enchantement"), "enchant");});
test("enchanter -> enchant", function() {deepEqual( Stem("enchanter"), "enchant");});
test("enchanteresses -> enchanteress", function() {deepEqual( Stem("enchanteresses"), "enchanteress");});
test("enchantés -> enchant", function() {deepEqual( Stem("enchantés"), "enchant");});
test("enchanteur -> enchanteur", function() {deepEqual( Stem("enchanteur"), "enchanteur");});
test("enchanteurs -> enchanteur", function() {deepEqual( Stem("enchanteurs"), "enchanteur");});
test("enchâsser -> enchâss", function() {deepEqual( Stem("enchâsser"), "enchâss");});
test("enchère -> encher", function() {deepEqual( Stem("enchère"), "encher");});
test("enchères -> encher", function() {deepEqual( Stem("enchères"), "encher");});
test("enclos -> enclos", function() {deepEqual( Stem("enclos"), "enclos");});
test("enclume -> enclum", function() {deepEqual( Stem("enclume"), "enclum");});
test("encolure -> encolur", function() {deepEqual( Stem("encolure"), "encolur");});
test("encombraient -> encombr", function() {deepEqual( Stem("encombraient"), "encombr");});
test("encombrant -> encombr", function() {deepEqual( Stem("encombrant"), "encombr");});
test("encombrante -> encombr", function() {deepEqual( Stem("encombrante"), "encombr");});
test("encombre -> encombr", function() {deepEqual( Stem("encombre"), "encombr");});
test("encombré -> encombr", function() {deepEqual( Stem("encombré"), "encombr");});
test("encombrée -> encombr", function() {deepEqual( Stem("encombrée"), "encombr");});
test("encombrées -> encombr", function() {deepEqual( Stem("encombrées"), "encombr");});
test("encombrés -> encombr", function() {deepEqual( Stem("encombrés"), "encombr");});
test("encore -> encor", function() {deepEqual( Stem("encore"), "encor");});
test("encouragé -> encourag", function() {deepEqual( Stem("encouragé"), "encourag");});
test("encourageante -> encourag", function() {deepEqual( Stem("encourageante"), "encourag");});
test("encouragement -> encourag", function() {deepEqual( Stem("encouragement"), "encourag");});
test("encourager -> encourag", function() {deepEqual( Stem("encourager"), "encourag");});
test("encouragés -> encourag", function() {deepEqual( Stem("encouragés"), "encourag");});
test("encourir -> encour", function() {deepEqual( Stem("encourir"), "encour");});
test("encouru -> encouru", function() {deepEqual( Stem("encouru"), "encouru");});
test("encrassaient -> encrass", function() {deepEqual( Stem("encrassaient"), "encrass");});
test("encre -> encre", function() {deepEqual( Stem("encre"), "encre");});
test("encroûtées -> encroût", function() {deepEqual( Stem("encroûtées"), "encroût");});
test("encyclopédie -> encycloped", function() {deepEqual( Stem("encyclopédie"), "encycloped");});
test("endoctriné -> endoctrin", function() {deepEqual( Stem("endoctriné"), "endoctrin");});
test("endommagé -> endommag", function() {deepEqual( Stem("endommagé"), "endommag");});
test("endormi -> endorm", function() {deepEqual( Stem("endormi"), "endorm");});
test("endormir -> endorm", function() {deepEqual( Stem("endormir"), "endorm");});
test("endormis -> endorm", function() {deepEqual( Stem("endormis"), "endorm");});
test("endormit -> endorm", function() {deepEqual( Stem("endormit"), "endorm");});
test("endors -> endor", function() {deepEqual( Stem("endors"), "endor");});
test("endossé -> endoss", function() {deepEqual( Stem("endossé"), "endoss");});
test("endosser -> endoss", function() {deepEqual( Stem("endosser"), "endoss");});
test("endroit -> endroit", function() {deepEqual( Stem("endroit"), "endroit");});
test("endroits -> endroit", function() {deepEqual( Stem("endroits"), "endroit");});
test("enduisirent -> enduis", function() {deepEqual( Stem("enduisirent"), "enduis");});
test("enduraient -> endur", function() {deepEqual( Stem("enduraient"), "endur");});
test("endurant -> endur", function() {deepEqual( Stem("endurant"), "endur");});
test("endurci -> endurc", function() {deepEqual( Stem("endurci"), "endurc");});
test("endurcie -> endurc", function() {deepEqual( Stem("endurcie"), "endurc");});
test("endurées -> endur", function() {deepEqual( Stem("endurées"), "endur");});
test("énergie -> énerg", function() {deepEqual( Stem("énergie"), "énerg");});
test("énergique -> énerg", function() {deepEqual( Stem("énergique"), "énerg");});
test("énergumène -> énergumen", function() {deepEqual( Stem("énergumène"), "énergumen");});
test("énergumènes -> énergumen", function() {deepEqual( Stem("énergumènes"), "énergumen");});
test("énervé -> énerv", function() {deepEqual( Stem("énervé"), "énerv");});
test("énervée -> énerv", function() {deepEqual( Stem("énervée"), "énerv");});
test("énerver -> énerv", function() {deepEqual( Stem("énerver"), "énerv");});
test("enfance -> enfanc", function() {deepEqual( Stem("enfance"), "enfanc");});
test("enfant -> enfant", function() {deepEqual( Stem("enfant"), "enfant");});
test("enfantillage -> enfantillag", function() {deepEqual( Stem("enfantillage"), "enfantillag");});
test("enfantillages -> enfantillag", function() {deepEqual( Stem("enfantillages"), "enfantillag");});
test("enfantine -> enfantin", function() {deepEqual( Stem("enfantine"), "enfantin");});
test("enfantines -> enfantin", function() {deepEqual( Stem("enfantines"), "enfantin");});
test("enfants -> enfant", function() {deepEqual( Stem("enfants"), "enfant");});
test("enfer -> enfer", function() {deepEqual( Stem("enfer"), "enfer");});
test("enferma -> enferm", function() {deepEqual( Stem("enferma"), "enferm");});
test("enfermais -> enferm", function() {deepEqual( Stem("enfermais"), "enferm");});
test("enfermait -> enferm", function() {deepEqual( Stem("enfermait"), "enferm");});
test("enfermant -> enferm", function() {deepEqual( Stem("enfermant"), "enferm");});
test("enferme -> enferm", function() {deepEqual( Stem("enferme"), "enferm");});
test("enfermé -> enferm", function() {deepEqual( Stem("enfermé"), "enferm");});
test("enfermée -> enferm", function() {deepEqual( Stem("enfermée"), "enferm");});
test("enfermer -> enferm", function() {deepEqual( Stem("enfermer"), "enferm");});
test("enfermèrent -> enferm", function() {deepEqual( Stem("enfermèrent"), "enferm");});
test("enfermés -> enferm", function() {deepEqual( Stem("enfermés"), "enferm");});
test("enferrer -> enferr", function() {deepEqual( Stem("enferrer"), "enferr");});
test("enfers -> enfer", function() {deepEqual( Stem("enfers"), "enfer");});
test("enfield -> enfield", function() {deepEqual( Stem("enfield"), "enfield");});
test("enfin -> enfin", function() {deepEqual( Stem("enfin"), "enfin");});
test("enflamma -> enflamm", function() {deepEqual( Stem("enflamma"), "enflamm");});
test("enflammé -> enflamm", function() {deepEqual( Stem("enflammé"), "enflamm");});
test("enflammée -> enflamm", function() {deepEqual( Stem("enflammée"), "enflamm");});
test("enflammées -> enflamm", function() {deepEqual( Stem("enflammées"), "enflamm");});
test("enflammer -> enflamm", function() {deepEqual( Stem("enflammer"), "enflamm");});
test("enflammèrent -> enflamm", function() {deepEqual( Stem("enflammèrent"), "enflamm");});
test("enflammés -> enflamm", function() {deepEqual( Stem("enflammés"), "enflamm");});
test("enflée -> enflé", function() {deepEqual( Stem("enflée"), "enflé");});
test("enflées -> enflé", function() {deepEqual( Stem("enflées"), "enflé");});
test("enfonça -> enfonc", function() {deepEqual( Stem("enfonça"), "enfonc");});
test("enfonçaient -> enfonc", function() {deepEqual( Stem("enfonçaient"), "enfonc");});
test("enfonçait -> enfonc", function() {deepEqual( Stem("enfonçait"), "enfonc");});
test("enfonçât -> enfonc", function() {deepEqual( Stem("enfonçât"), "enfonc");});
test("enfonce -> enfonc", function() {deepEqual( Stem("enfonce"), "enfonc");});
test("enfoncer -> enfonc", function() {deepEqual( Stem("enfoncer"), "enfonc");});
test("enfonceront -> enfonc", function() {deepEqual( Stem("enfonceront"), "enfonc");});
test("enfouis -> enfou", function() {deepEqual( Stem("enfouis"), "enfou");});
test("enfourcher -> enfourch", function() {deepEqual( Stem("enfourcher"), "enfourch");});
test("enfui -> enfui", function() {deepEqual( Stem("enfui"), "enfui");});
test("enfuie -> enfui", function() {deepEqual( Stem("enfuie"), "enfui");});
test("enfuir -> enfuir", function() {deepEqual( Stem("enfuir"), "enfuir");});
test("enfuirai -> enfuir", function() {deepEqual( Stem("enfuirai"), "enfuir");});
test("enfuis -> enfuis", function() {deepEqual( Stem("enfuis"), "enfuis");});
test("enfuit -> enfuit", function() {deepEqual( Stem("enfuit"), "enfuit");});
test("enfumé -> enfum", function() {deepEqual( Stem("enfumé"), "enfum");});
test("enfuyaient -> enfui", function() {deepEqual( Stem("enfuyaient"), "enfui");});
test("enfuyait -> enfui", function() {deepEqual( Stem("enfuyait"), "enfui");});
test("engage -> engag", function() {deepEqual( Stem("engage"), "engag");});
test("engagé -> engag", function() {deepEqual( Stem("engagé"), "engag");});
test("engagea -> engag", function() {deepEqual( Stem("engagea"), "engag");});
test("engageaient -> engag", function() {deepEqual( Stem("engageaient"), "engag");});
test("engageait -> engag", function() {deepEqual( Stem("engageait"), "engag");});
test("engageant -> engag", function() {deepEqual( Stem("engageant"), "engag");});
test("engagée -> engag", function() {deepEqual( Stem("engagée"), "engag");});
test("engagées -> engag", function() {deepEqual( Stem("engagées"), "engag");});
test("engagement -> engag", function() {deepEqual( Stem("engagement"), "engag");});
test("engagements -> engag", function() {deepEqual( Stem("engagements"), "engag");});
test("engagent -> engagent", function() {deepEqual( Stem("engagent"), "engagent");});
test("engager -> engag", function() {deepEqual( Stem("engager"), "engag");});
test("engagerai -> engag", function() {deepEqual( Stem("engagerai"), "engag");});
test("engeance -> engeanc", function() {deepEqual( Stem("engeance"), "engeanc");});
test("engendre -> engendr", function() {deepEqual( Stem("engendre"), "engendr");});
test("engine -> engin", function() {deepEqual( Stem("engine"), "engin");});
test("england -> england", function() {deepEqual( Stem("england"), "england");});
test("englishman -> englishman", function() {deepEqual( Stem("englishman"), "englishman");});
test("engloutir -> englout", function() {deepEqual( Stem("engloutir"), "englout");});
test("engoués -> engou", function() {deepEqual( Stem("engoués"), "engou");});
test("engouffrées -> engouffr", function() {deepEqual( Stem("engouffrées"), "engouffr");});
test("engourdis -> engourd", function() {deepEqual( Stem("engourdis"), "engourd");});
test("engourdissement -> engourd", function() {deepEqual( Stem("engourdissement"), "engourd");});
test("énigmatique -> énigmat", function() {deepEqual( Stem("énigmatique"), "énigmat");});
test("énigme -> énigm", function() {deepEqual( Stem("énigme"), "énigm");});
test("enivraient -> enivr", function() {deepEqual( Stem("enivraient"), "enivr");});
test("enivré -> enivr", function() {deepEqual( Stem("enivré"), "enivr");});
test("enivrée -> enivr", function() {deepEqual( Stem("enivrée"), "enivr");});
test("enivrées -> enivr", function() {deepEqual( Stem("enivrées"), "enivr");});
test("enivrer -> enivr", function() {deepEqual( Stem("enivrer"), "enivr");});
test("enjambée -> enjamb", function() {deepEqual( Stem("enjambée"), "enjamb");});
test("enjeu -> enjeu", function() {deepEqual( Stem("enjeu"), "enjeu");});
test("enjouement -> enjou", function() {deepEqual( Stem("enjouement"), "enjou");});
test("enleva -> enlev", function() {deepEqual( Stem("enleva"), "enlev");});
test("enlevaient -> enlev", function() {deepEqual( Stem("enlevaient"), "enlev");});
test("enlevait -> enlev", function() {deepEqual( Stem("enlevait"), "enlev");});
test("enlevât -> enlev", function() {deepEqual( Stem("enlevât"), "enlev");});
test("enlève -> enlev", function() {deepEqual( Stem("enlève"), "enlev");});
test("enlevé -> enlev", function() {deepEqual( Stem("enlevé"), "enlev");});
test("enlevée -> enlev", function() {deepEqual( Stem("enlevée"), "enlev");});
test("enlevées -> enlev", function() {deepEqual( Stem("enlevées"), "enlev");});
test("enlèvement -> enlev", function() {deepEqual( Stem("enlèvement"), "enlev");});
test("enlèvent -> enlèvent", function() {deepEqual( Stem("enlèvent"), "enlèvent");});
test("enlever -> enlev", function() {deepEqual( Stem("enlever"), "enlev");});
test("enlèverais -> enlev", function() {deepEqual( Stem("enlèverais"), "enlev");});
test("enlevèrent -> enlev", function() {deepEqual( Stem("enlevèrent"), "enlev");});
test("enlèverez -> enlev", function() {deepEqual( Stem("enlèverez"), "enlev");});
test("enlevez -> enlev", function() {deepEqual( Stem("enlevez"), "enlev");});
test("enluminée -> enlumin", function() {deepEqual( Stem("enluminée"), "enlumin");});
test("ennemi -> ennem", function() {deepEqual( Stem("ennemi"), "ennem");});
test("ennemie -> ennem", function() {deepEqual( Stem("ennemie"), "ennem");});
test("ennemis -> ennem", function() {deepEqual( Stem("ennemis"), "ennem");});
test("ennius -> ennius", function() {deepEqual( Stem("ennius"), "ennius");});
test("ennnui -> ennnui", function() {deepEqual( Stem("ennnui"), "ennnui");});
test("ennui -> ennui", function() {deepEqual( Stem("ennui"), "ennui");});
test("ennuie -> ennui", function() {deepEqual( Stem("ennuie"), "ennui");});
test("ennuient -> ennuient", function() {deepEqual( Stem("ennuient"), "ennuient");});
test("ennuiera -> ennui", function() {deepEqual( Stem("ennuiera"), "ennui");});
test("ennuierais -> ennui", function() {deepEqual( Stem("ennuierais"), "ennui");});
test("ennuierait -> ennui", function() {deepEqual( Stem("ennuierait"), "ennui");});
test("ennuieront -> ennui", function() {deepEqual( Stem("ennuieront"), "ennui");});
test("ennuies -> ennui", function() {deepEqual( Stem("ennuies"), "ennui");});
test("ennuis -> ennuis", function() {deepEqual( Stem("ennuis"), "ennuis");});
test("ennuya -> ennui", function() {deepEqual( Stem("ennuya"), "ennui");});
test("ennuyaient -> ennui", function() {deepEqual( Stem("ennuyaient"), "ennui");});
test("ennuyais -> ennui", function() {deepEqual( Stem("ennuyais"), "ennui");});
test("ennuyait -> ennui", function() {deepEqual( Stem("ennuyait"), "ennui");});
test("ennuyant -> ennui", function() {deepEqual( Stem("ennuyant"), "ennui");});
test("ennuyé -> ennui", function() {deepEqual( Stem("ennuyé"), "ennui");});
test("ennuyée -> ennui", function() {deepEqual( Stem("ennuyée"), "ennui");});
test("ennuyer -> ennui", function() {deepEqual( Stem("ennuyer"), "ennui");});
test("ennuyés -> ennui", function() {deepEqual( Stem("ennuyés"), "ennui");});
test("ennuyeuse -> ennui", function() {deepEqual( Stem("ennuyeuse"), "ennui");});
test("ennuyeusement -> ennui", function() {deepEqual( Stem("ennuyeusement"), "ennui");});
test("ennuyeuses -> ennui", function() {deepEqual( Stem("ennuyeuses"), "ennui");});
test("ennuyeux -> ennui", function() {deepEqual( Stem("ennuyeux"), "ennui");});
test("ennuyez -> ennui", function() {deepEqual( Stem("ennuyez"), "ennui");});
test("énonçait -> énonc", function() {deepEqual( Stem("énonçait"), "énonc");});
test("énoncé -> énonc", function() {deepEqual( Stem("énoncé"), "énonc");});
test("énoncer -> énonc", function() {deepEqual( Stem("énoncer"), "énonc");});
test("enorgueilli -> enorgueil", function() {deepEqual( Stem("enorgueilli"), "enorgueil");});
test("énorme -> énorm", function() {deepEqual( Stem("énorme"), "énorm");});
test("énormes -> énorm", function() {deepEqual( Stem("énormes"), "énorm");});
test("énormité -> énorm", function() {deepEqual( Stem("énormité"), "énorm");});
test("enquérait -> enquer", function() {deepEqual( Stem("enquérait"), "enquer");});
test("enquête -> enquêt", function() {deepEqual( Stem("enquête"), "enquêt");});
test("enraciner -> enracin", function() {deepEqual( Stem("enraciner"), "enracin");});
test("enragé -> enrag", function() {deepEqual( Stem("enragé"), "enrag");});
test("enragés -> enrag", function() {deepEqual( Stem("enragés"), "enrag");});
test("enrayer -> enrai", function() {deepEqual( Stem("enrayer"), "enrai");});
test("enrayés -> enrai", function() {deepEqual( Stem("enrayés"), "enrai");});
test("enrégimentés -> enrégiment", function() {deepEqual( Stem("enrégimentés"), "enrégiment");});
test("enregistrement -> enregistr", function() {deepEqual( Stem("enregistrement"), "enregistr");});
test("enregistrer -> enregistr", function() {deepEqual( Stem("enregistrer"), "enregistr");});
test("enrhumaient -> enrhum", function() {deepEqual( Stem("enrhumaient"), "enrhum");});
test("enrhumé -> enrhum", function() {deepEqual( Stem("enrhumé"), "enrhum");});
test("enrichi -> enrich", function() {deepEqual( Stem("enrichi"), "enrich");});
test("enrichir -> enrich", function() {deepEqual( Stem("enrichir"), "enrich");});
test("enrichis -> enrich", function() {deepEqual( Stem("enrichis"), "enrich");});
test("enrichissait -> enrich", function() {deepEqual( Stem("enrichissait"), "enrich");});
test("enrichissent -> enrich", function() {deepEqual( Stem("enrichissent"), "enrich");});
test("enrichit -> enrich", function() {deepEqual( Stem("enrichit"), "enrich");});
test("enrouaient -> enrou", function() {deepEqual( Stem("enrouaient"), "enrou");});
test("enroulait -> enroul", function() {deepEqual( Stem("enroulait"), "enroul");});
test("enroulant -> enroul", function() {deepEqual( Stem("enroulant"), "enroul");});
test("ensachés -> ensach", function() {deepEqual( Stem("ensachés"), "ensach");});
test("ensanglanté -> ensanglant", function() {deepEqual( Stem("ensanglanté"), "ensanglant");});
test("enseignait -> enseign", function() {deepEqual( Stem("enseignait"), "enseign");});
test("enseigne -> enseign", function() {deepEqual( Stem("enseigne"), "enseign");});
test("enseigné -> enseign", function() {deepEqual( Stem("enseigné"), "enseign");});
test("enseignées -> enseign", function() {deepEqual( Stem("enseignées"), "enseign");});
test("enseignements -> enseign", function() {deepEqual( Stem("enseignements"), "enseign");});
test("enseignent -> enseignent", function() {deepEqual( Stem("enseignent"), "enseignent");});
test("enseigner -> enseign", function() {deepEqual( Stem("enseigner"), "enseign");});
test("enseignera -> enseign", function() {deepEqual( Stem("enseignera"), "enseign");});
test("ensemble -> ensembl", function() {deepEqual( Stem("ensemble"), "ensembl");});
test("enserrer -> enserr", function() {deepEqual( Stem("enserrer"), "enserr");});
test("ensevelir -> ensevel", function() {deepEqual( Stem("ensevelir"), "ensevel");});
test("ensorcela -> ensorcel", function() {deepEqual( Stem("ensorcela"), "ensorcel");});
test("ensuit -> ensuit", function() {deepEqual( Stem("ensuit"), "ensuit");});
test("ensuite -> ensuit", function() {deepEqual( Stem("ensuite"), "ensuit");});
test("ensuivit -> ensuiv", function() {deepEqual( Stem("ensuivit"), "ensuiv");});
test("entachés -> entach", function() {deepEqual( Stem("entachés"), "entach");});
test("entama -> entam", function() {deepEqual( Stem("entama"), "entam");});
test("entame -> entam", function() {deepEqual( Stem("entame"), "entam");});
test("entamée -> entam", function() {deepEqual( Stem("entamée"), "entam");});
test("entamer -> entam", function() {deepEqual( Stem("entamer"), "entam");});
test("entasse -> entass", function() {deepEqual( Stem("entasse"), "entass");});
test("entassée -> entass", function() {deepEqual( Stem("entassée"), "entass");});
test("entassent -> entassent", function() {deepEqual( Stem("entassent"), "entassent");});
test("entend -> entend", function() {deepEqual( Stem("entend"), "entend");});
test("entendaient -> entend", function() {deepEqual( Stem("entendaient"), "entend");});
test("entendais -> entend", function() {deepEqual( Stem("entendais"), "entend");});
test("entendait -> entend", function() {deepEqual( Stem("entendait"), "entend");});
test("entendant -> entend", function() {deepEqual( Stem("entendant"), "entend");});
test("entendent -> entendent", function() {deepEqual( Stem("entendent"), "entendent");});
test("entendez -> entend", function() {deepEqual( Stem("entendez"), "entend");});
test("entendirent -> entend", function() {deepEqual( Stem("entendirent"), "entend");});
test("entendit -> entend", function() {deepEqual( Stem("entendit"), "entend");});
test("entendît -> entend", function() {deepEqual( Stem("entendît"), "entend");});
test("entendra -> entendr", function() {deepEqual( Stem("entendra"), "entendr");});
test("entendrait -> entendr", function() {deepEqual( Stem("entendrait"), "entendr");});
test("entendre -> entendr", function() {deepEqual( Stem("entendre"), "entendr");});
test("entendrez -> entendr", function() {deepEqual( Stem("entendrez"), "entendr");});
test("entendrons -> entendron", function() {deepEqual( Stem("entendrons"), "entendron");});
test("entends -> entend", function() {deepEqual( Stem("entends"), "entend");});
test("entendu -> entendu", function() {deepEqual( Stem("entendu"), "entendu");});
test("entendue -> entendu", function() {deepEqual( Stem("entendue"), "entendu");});
test("entendus -> entendus", function() {deepEqual( Stem("entendus"), "entendus");});
test("enterrer -> enterr", function() {deepEqual( Stem("enterrer"), "enterr");});
test("enterrez -> enterr", function() {deepEqual( Stem("enterrez"), "enterr");});
test("entêté -> entêt", function() {deepEqual( Stem("entêté"), "entêt");});
test("enthousiasmait -> enthousiasm", function() {deepEqual( Stem("enthousiasmait"), "enthousiasm");});
test("enthousiasme -> enthousiasm", function() {deepEqual( Stem("enthousiasme"), "enthousiasm");});
test("enthousiasmé -> enthousiasm", function() {deepEqual( Stem("enthousiasmé"), "enthousiasm");});
test("enthousiasmées -> enthousiasm", function() {deepEqual( Stem("enthousiasmées"), "enthousiasm");});
test("enthousiaste -> enthousiast", function() {deepEqual( Stem("enthousiaste"), "enthousiast");});
test("enthousiastes -> enthousiast", function() {deepEqual( Stem("enthousiastes"), "enthousiast");});
test("entiché -> entich", function() {deepEqual( Stem("entiché"), "entich");});
test("entier -> enti", function() {deepEqual( Stem("entier"), "enti");});
test("entière -> entier", function() {deepEqual( Stem("entière"), "entier");});
test("entièrement -> entier", function() {deepEqual( Stem("entièrement"), "entier");});
test("entières -> entier", function() {deepEqual( Stem("entières"), "entier");});
test("entiers -> entier", function() {deepEqual( Stem("entiers"), "entier");});
test("entomologique -> entomolog", function() {deepEqual( Stem("entomologique"), "entomolog");});
test("entonnant -> enton", function() {deepEqual( Stem("entonnant"), "enton");});
test("entonné -> enton", function() {deepEqual( Stem("entonné"), "enton");});
test("entonner -> enton", function() {deepEqual( Stem("entonner"), "enton");});
test("entortiller -> entortill", function() {deepEqual( Stem("entortiller"), "entortill");});
test("entortillés -> entortill", function() {deepEqual( Stem("entortillés"), "entortill");});
test("entour -> entour", function() {deepEqual( Stem("entour"), "entour");});
test("entoura -> entour", function() {deepEqual( Stem("entoura"), "entour");});
test("entouraient -> entour", function() {deepEqual( Stem("entouraient"), "entour");});
test("entourait -> entour", function() {deepEqual( Stem("entourait"), "entour");});
test("entoure -> entour", function() {deepEqual( Stem("entoure"), "entour");});
test("entouré -> entour", function() {deepEqual( Stem("entouré"), "entour");});
test("entourée -> entour", function() {deepEqual( Stem("entourée"), "entour");});
test("entourées -> entour", function() {deepEqual( Stem("entourées"), "entour");});
test("entourent -> entourent", function() {deepEqual( Stem("entourent"), "entourent");});
test("entourés -> entour", function() {deepEqual( Stem("entourés"), "entour");});
test("entra -> entra", function() {deepEqual( Stem("entra"), "entra");});
test("entrai -> entrai", function() {deepEqual( Stem("entrai"), "entrai");});
test("entraient -> entraient", function() {deepEqual( Stem("entraient"), "entraient");});
test("entrailles -> entraill", function() {deepEqual( Stem("entrailles"), "entraill");});
test("entraîna -> entraîn", function() {deepEqual( Stem("entraîna"), "entraîn");});
test("entraînait -> entraîn", function() {deepEqual( Stem("entraînait"), "entraîn");});
test("entraînant -> entraîn", function() {deepEqual( Stem("entraînant"), "entraîn");});
test("entraîne -> entraîn", function() {deepEqual( Stem("entraîne"), "entraîn");});
test("entraîné -> entraîn", function() {deepEqual( Stem("entraîné"), "entraîn");});
test("entraînée -> entraîn", function() {deepEqual( Stem("entraînée"), "entraîn");});
test("entraînement -> entraîn", function() {deepEqual( Stem("entraînement"), "entraîn");});
test("entraîner -> entraîn", function() {deepEqual( Stem("entraîner"), "entraîn");});
test("entraînera -> entraîn", function() {deepEqual( Stem("entraînera"), "entraîn");});
test("entraînés -> entraîn", function() {deepEqual( Stem("entraînés"), "entraîn");});
test("entrait -> entrait", function() {deepEqual( Stem("entrait"), "entrait");});
test("entrant -> entrant", function() {deepEqual( Stem("entrant"), "entrant");});
test("entraves -> entrav", function() {deepEqual( Stem("entraves"), "entrav");});
test("entre -> entre", function() {deepEqual( Stem("entre"), "entre");});
test("entré -> entré", function() {deepEqual( Stem("entré"), "entré");});
test("entrecoupée -> entrecoup", function() {deepEqual( Stem("entrecoupée"), "entrecoup");});
test("entrecoupées -> entrecoup", function() {deepEqual( Stem("entrecoupées"), "entrecoup");});
test("entrée -> entré", function() {deepEqual( Stem("entrée"), "entré");});
test("entrées -> entré", function() {deepEqual( Stem("entrées"), "entré");});
test("entrefaites -> entrefait", function() {deepEqual( Stem("entrefaites"), "entrefait");});
test("entrelacement -> entrelac", function() {deepEqual( Stem("entrelacement"), "entrelac");});
test("entremêlées -> entremêl", function() {deepEqual( Stem("entremêlées"), "entremêl");});
test("entremêlés -> entremêl", function() {deepEqual( Stem("entremêlés"), "entremêl");});
test("entremets -> entremet", function() {deepEqual( Stem("entremets"), "entremet");});
test("entremettre -> entremettr", function() {deepEqual( Stem("entremettre"), "entremettr");});
test("entremise -> entremis", function() {deepEqual( Stem("entremise"), "entremis");});
test("entrent -> entrent", function() {deepEqual( Stem("entrent"), "entrent");});
test("entrepôts -> entrepôt", function() {deepEqual( Stem("entrepôts"), "entrepôt");});
test("entreprenait -> entrepren", function() {deepEqual( Stem("entreprenait"), "entrepren");});
test("entreprenant -> entrepren", function() {deepEqual( Stem("entreprenant"), "entrepren");});
test("entreprend -> entreprend", function() {deepEqual( Stem("entreprend"), "entreprend");});
test("entreprendre -> entreprendr", function() {deepEqual( Stem("entreprendre"), "entreprendr");});
test("entrepreneur -> entrepreneur", function() {deepEqual( Stem("entrepreneur"), "entrepreneur");});
test("entrepris -> entrepr", function() {deepEqual( Stem("entrepris"), "entrepr");});
test("entreprise -> entrepris", function() {deepEqual( Stem("entreprise"), "entrepris");});
test("entreprises -> entrepris", function() {deepEqual( Stem("entreprises"), "entrepris");});
test("entreprit -> entrepr", function() {deepEqual( Stem("entreprit"), "entrepr");});
test("entrer -> entrer", function() {deepEqual( Stem("entrer"), "entrer");});
test("entreraient -> entrer", function() {deepEqual( Stem("entreraient"), "entrer");});
test("entreras -> entrer", function() {deepEqual( Stem("entreras"), "entrer");});
test("entrèrent -> entrèrent", function() {deepEqual( Stem("entrèrent"), "entrèrent");});
test("entrés -> entré", function() {deepEqual( Stem("entrés"), "entré");});
test("entresol -> entresol", function() {deepEqual( Stem("entresol"), "entresol");});
test("entretenait -> entreten", function() {deepEqual( Stem("entretenait"), "entreten");});
test("entretenir -> entreten", function() {deepEqual( Stem("entretenir"), "entreten");});
test("entretenu -> entretenu", function() {deepEqual( Stem("entretenu"), "entretenu");});
test("entretenus -> entretenus", function() {deepEqual( Stem("entretenus"), "entretenus");});
test("entretien -> entretien", function() {deepEqual( Stem("entretien"), "entretien");});
test("entretiens -> entretien", function() {deepEqual( Stem("entretiens"), "entretien");});
test("entretient -> entretient", function() {deepEqual( Stem("entretient"), "entretient");});
test("entretinrent -> entretinrent", function() {deepEqual( Stem("entretinrent"), "entretinrent");});
test("entretint -> entretint", function() {deepEqual( Stem("entretint"), "entretint");});
test("entrevit -> entrev", function() {deepEqual( Stem("entrevit"), "entrev");});
test("entrevoir -> entrevoir", function() {deepEqual( Stem("entrevoir"), "entrevoir");});
test("entrevois -> entrevois", function() {deepEqual( Stem("entrevois"), "entrevois");});
test("entrevoit -> entrevoit", function() {deepEqual( Stem("entrevoit"), "entrevoit");});
test("entrevoyaient -> entrevoi", function() {deepEqual( Stem("entrevoyaient"), "entrevoi");});
test("entrevoyait -> entrevoi", function() {deepEqual( Stem("entrevoyait"), "entrevoi");});
test("entrevoyant -> entrevoi", function() {deepEqual( Stem("entrevoyant"), "entrevoi");});
test("entrevu -> entrevu", function() {deepEqual( Stem("entrevu"), "entrevu");});
test("entrevue -> entrevu", function() {deepEqual( Stem("entrevue"), "entrevu");});
test("entrevues -> entrevu", function() {deepEqual( Stem("entrevues"), "entrevu");});
test("entrez -> entrez", function() {deepEqual( Stem("entrez"), "entrez");});
test("entrons -> entron", function() {deepEqual( Stem("entrons"), "entron");});
test("entrouverte -> entrouvert", function() {deepEqual( Stem("entrouverte"), "entrouvert");});
test("entrouvrant -> entrouvr", function() {deepEqual( Stem("entrouvrant"), "entrouvr");});
test("énumération -> énumer", function() {deepEqual( Stem("énumération"), "énumer");});
test("envahi -> envah", function() {deepEqual( Stem("envahi"), "envah");});
test("envahie -> envah", function() {deepEqual( Stem("envahie"), "envah");});
test("envahir -> envah", function() {deepEqual( Stem("envahir"), "envah");});
test("envahissaient -> envah", function() {deepEqual( Stem("envahissaient"), "envah");});
test("envahit -> envah", function() {deepEqual( Stem("envahit"), "envah");});
test("enveloppaient -> envelopp", function() {deepEqual( Stem("enveloppaient"), "envelopp");});
test("enveloppait -> envelopp", function() {deepEqual( Stem("enveloppait"), "envelopp");});
test("enveloppe -> envelopp", function() {deepEqual( Stem("enveloppe"), "envelopp");});
test("enveloppé -> envelopp", function() {deepEqual( Stem("enveloppé"), "envelopp");});
test("enveloppée -> envelopp", function() {deepEqual( Stem("enveloppée"), "envelopp");});
test("envelopper -> envelopp", function() {deepEqual( Stem("envelopper"), "envelopp");});
test("enveloppes -> envelopp", function() {deepEqual( Stem("enveloppes"), "envelopp");});
test("envenimée -> envenim", function() {deepEqual( Stem("envenimée"), "envenim");});
test("enverguait -> envergu", function() {deepEqual( Stem("enverguait"), "envergu");});
test("envergure -> envergur", function() {deepEqual( Stem("envergure"), "envergur");});
test("enverra -> enverr", function() {deepEqual( Stem("enverra"), "enverr");});
test("enverrai -> enverr", function() {deepEqual( Stem("enverrai"), "enverr");});
test("enverrais -> enverr", function() {deepEqual( Stem("enverrais"), "enverr");});
test("enverras -> enverr", function() {deepEqual( Stem("enverras"), "enverr");});
test("enverrez -> enverr", function() {deepEqual( Stem("enverrez"), "enverr");});
test("envers -> enver", function() {deepEqual( Stem("envers"), "enver");});
test("envi -> envi", function() {deepEqual( Stem("envi"), "envi");});
test("enviable -> enviabl", function() {deepEqual( Stem("enviable"), "enviabl");});
test("enviait -> envi", function() {deepEqual( Stem("enviait"), "envi");});
test("enviant -> envi", function() {deepEqual( Stem("enviant"), "envi");});
test("envie -> envi", function() {deepEqual( Stem("envie"), "envi");});
test("envié -> envi", function() {deepEqual( Stem("envié"), "envi");});
test("enviée -> envi", function() {deepEqual( Stem("enviée"), "envi");});
test("envieux -> envieux", function() {deepEqual( Stem("envieux"), "envieux");});
test("environ -> environ", function() {deepEqual( Stem("environ"), "environ");});
test("environnaient -> environ", function() {deepEqual( Stem("environnaient"), "environ");});
test("environnait -> environ", function() {deepEqual( Stem("environnait"), "environ");});
test("environnantes -> environ", function() {deepEqual( Stem("environnantes"), "environ");});
test("environne -> environ", function() {deepEqual( Stem("environne"), "environ");});
test("environné -> environ", function() {deepEqual( Stem("environné"), "environ");});
test("environnée -> environ", function() {deepEqual( Stem("environnée"), "environ");});
test("environnent -> environnent", function() {deepEqual( Stem("environnent"), "environnent");});
test("environner -> environ", function() {deepEqual( Stem("environner"), "environ");});
test("environnés -> environ", function() {deepEqual( Stem("environnés"), "environ");});
test("environs -> environ", function() {deepEqual( Stem("environs"), "environ");});
test("envisageons -> envisageon", function() {deepEqual( Stem("envisageons"), "envisageon");});
test("envisager -> envisag", function() {deepEqual( Stem("envisager"), "envisag");});
test("envisagez -> envisag", function() {deepEqual( Stem("envisagez"), "envisag");});
test("envoi -> envoi", function() {deepEqual( Stem("envoi"), "envoi");});
test("envoie -> envoi", function() {deepEqual( Stem("envoie"), "envoi");});
test("envola -> envol", function() {deepEqual( Stem("envola"), "envol");});
test("envolant -> envol", function() {deepEqual( Stem("envolant"), "envol");});
test("envole -> envol", function() {deepEqual( Stem("envole"), "envol");});
test("envolées -> envol", function() {deepEqual( Stem("envolées"), "envol");});
test("envoler -> envol", function() {deepEqual( Stem("envoler"), "envol");});
test("envolés -> envol", function() {deepEqual( Stem("envolés"), "envol");});
test("envoya -> envoi", function() {deepEqual( Stem("envoya"), "envoi");});
test("envoyaient -> envoi", function() {deepEqual( Stem("envoyaient"), "envoi");});
test("envoyait -> envoi", function() {deepEqual( Stem("envoyait"), "envoi");});
test("envoyant -> envoi", function() {deepEqual( Stem("envoyant"), "envoi");});
test("envoyât -> envoi", function() {deepEqual( Stem("envoyât"), "envoi");});
test("envoyâtes -> envoi", function() {deepEqual( Stem("envoyâtes"), "envoi");});
test("envoyé -> envoi", function() {deepEqual( Stem("envoyé"), "envoi");});
test("envoyée -> envoi", function() {deepEqual( Stem("envoyée"), "envoi");});
test("envoyées -> envoi", function() {deepEqual( Stem("envoyées"), "envoi");});
test("envoyer -> envoi", function() {deepEqual( Stem("envoyer"), "envoi");});
test("envoyés -> envoi", function() {deepEqual( Stem("envoyés"), "envoi");});
test("envoyez -> envoi", function() {deepEqual( Stem("envoyez"), "envoi");});
test("éolienne -> éolien", function() {deepEqual( Stem("éolienne"), "éolien");});
test("épagneul -> épagneul", function() {deepEqual( Stem("épagneul"), "épagneul");});
test("épais -> épais", function() {deepEqual( Stem("épais"), "épais");});
test("épaisse -> épaiss", function() {deepEqual( Stem("épaisse"), "épaiss");});
test("épaisseur -> épaisseur", function() {deepEqual( Stem("épaisseur"), "épaisseur");});
test("épanchement -> épanch", function() {deepEqual( Stem("épanchement"), "épanch");});
test("épanouir -> épanou", function() {deepEqual( Stem("épanouir"), "épanou");});
test("épanouissaient -> épanou", function() {deepEqual( Stem("épanouissaient"), "épanou");});
test("épanouissait -> épanou", function() {deepEqual( Stem("épanouissait"), "épanou");});
test("épanouissement -> épanou", function() {deepEqual( Stem("épanouissement"), "épanou");});
test("épanouit -> épanou", function() {deepEqual( Stem("épanouit"), "épanou");});
test("épargna -> épargn", function() {deepEqual( Stem("épargna"), "épargn");});
test("épargnait -> épargn", function() {deepEqual( Stem("épargnait"), "épargn");});
test("épargne -> épargn", function() {deepEqual( Stem("épargne"), "épargn");});
test("épargné -> épargn", function() {deepEqual( Stem("épargné"), "épargn");});
test("épargnée -> épargn", function() {deepEqual( Stem("épargnée"), "épargn");});
test("épargner -> épargn", function() {deepEqual( Stem("épargner"), "épargn");});
test("épargnera -> épargn", function() {deepEqual( Stem("épargnera"), "épargn");});
test("épargnerait -> épargn", function() {deepEqual( Stem("épargnerait"), "épargn");});
test("épargnez -> épargn", function() {deepEqual( Stem("épargnez"), "épargn");});
test("épargniez -> épargn", function() {deepEqual( Stem("épargniez"), "épargn");});
test("éparses -> épars", function() {deepEqual( Stem("éparses"), "épars");});
test("éparvérés -> éparver", function() {deepEqual( Stem("éparvérés"), "éparver");});
test("épaule -> épaul", function() {deepEqual( Stem("épaule"), "épaul");});
test("épaules -> épaul", function() {deepEqual( Stem("épaules"), "épaul");});
test("épaulés -> épaul", function() {deepEqual( Stem("épaulés"), "épaul");});
test("épaulettes -> épaulet", function() {deepEqual( Stem("épaulettes"), "épaulet");});
test("épée -> épé", function() {deepEqual( Stem("épée"), "épé");});
test("épées -> épé", function() {deepEqual( Stem("épées"), "épé");});
test("éperdu -> éperdu", function() {deepEqual( Stem("éperdu"), "éperdu");});
test("éperdue -> éperdu", function() {deepEqual( Stem("éperdue"), "éperdu");});
test("éperdument -> éperdu", function() {deepEqual( Stem("éperdument"), "éperdu");});
test("éperon -> éperon", function() {deepEqual( Stem("éperon"), "éperon");});
test("éperons -> éperon", function() {deepEqual( Stem("éperons"), "éperon");});
test("épervier -> épervi", function() {deepEqual( Stem("épervier"), "épervi");});
test("éperviers -> épervi", function() {deepEqual( Stem("éperviers"), "épervi");});
test("éphémère -> éphémer", function() {deepEqual( Stem("éphémère"), "éphémer");});
test("épia -> épi", function() {deepEqual( Stem("épia"), "épi");});
test("épiait -> épi", function() {deepEqual( Stem("épiait"), "épi");});
test("épicée -> épic", function() {deepEqual( Stem("épicée"), "épic");});
test("épiciers -> épici", function() {deepEqual( Stem("épiciers"), "épici");});
test("épiderme -> épiderm", function() {deepEqual( Stem("épiderme"), "épiderm");});
test("épie -> épi", function() {deepEqual( Stem("épie"), "épi");});
test("épient -> épient", function() {deepEqual( Stem("épient"), "épient");});
test("épier -> épi", function() {deepEqual( Stem("épier"), "épi");});
test("épigrammatique -> épigrammat", function() {deepEqual( Stem("épigrammatique"), "épigrammat");});
test("épigramme -> épigramm", function() {deepEqual( Stem("épigramme"), "épigramm");});
test("épigrammes -> épigramm", function() {deepEqual( Stem("épigrammes"), "épigramm");});
test("épine -> épin", function() {deepEqual( Stem("épine"), "épin");});
test("épines -> épin", function() {deepEqual( Stem("épines"), "épin");});
test("épineuses -> épin", function() {deepEqual( Stem("épineuses"), "épin");});
test("épingle -> épingl", function() {deepEqual( Stem("épingle"), "épingl");});
test("épingles -> épingl", function() {deepEqual( Stem("épingles"), "épingl");});
test("épique -> épiqu", function() {deepEqual( Stem("épique"), "épiqu");});
test("épis -> épis", function() {deepEqual( Stem("épis"), "épis");});
test("épiscopal -> épiscopal", function() {deepEqual( Stem("épiscopal"), "épiscopal");});
test("épiscopat -> épiscopat", function() {deepEqual( Stem("épiscopat"), "épiscopat");});
test("épisode -> épisod", function() {deepEqual( Stem("épisode"), "épisod");});
test("épitaphe -> épitaph", function() {deepEqual( Stem("épitaphe"), "épitaph");});
test("épithète -> épithet", function() {deepEqual( Stem("épithète"), "épithet");});
test("épître -> épîtr", function() {deepEqual( Stem("épître"), "épîtr");});
test("époque -> époqu", function() {deepEqual( Stem("époque"), "époqu");});
test("époques -> époqu", function() {deepEqual( Stem("époques"), "époqu");});
test("épousa -> épous", function() {deepEqual( Stem("épousa"), "épous");});
test("épousait -> épous", function() {deepEqual( Stem("épousait"), "épous");});
test("épousant -> épous", function() {deepEqual( Stem("épousant"), "épous");});
test("épouse -> épous", function() {deepEqual( Stem("épouse"), "épous");});
test("épousé -> épous", function() {deepEqual( Stem("épousé"), "épous");});
test("épousée -> épous", function() {deepEqual( Stem("épousée"), "épous");});
test("épousées -> épous", function() {deepEqual( Stem("épousées"), "épous");});
test("épouser -> épous", function() {deepEqual( Stem("épouser"), "épous");});
test("épousera -> épous", function() {deepEqual( Stem("épousera"), "épous");});
test("épouserai -> épous", function() {deepEqual( Stem("épouserai"), "épous");});
test("épouserez -> épous", function() {deepEqual( Stem("épouserez"), "épous");});
test("épouseur -> épouseur", function() {deepEqual( Stem("épouseur"), "épouseur");});
test("épousez -> épous", function() {deepEqual( Stem("épousez"), "épous");});
test("épousseter -> épousset", function() {deepEqual( Stem("épousseter"), "épousset");});
test("épouvantable -> épouvant", function() {deepEqual( Stem("épouvantable"), "épouvant");});
test("épouvantablement -> épouvant", function() {deepEqual( Stem("épouvantablement"), "épouvant");});
test("épouvantables -> épouvant", function() {deepEqual( Stem("épouvantables"), "épouvant");});
test("épouvantaient -> épouvant", function() {deepEqual( Stem("épouvantaient"), "épouvant");});
test("épouvante -> épouv", function() {deepEqual( Stem("épouvante"), "épouv");});
test("épouvantée -> épouvant", function() {deepEqual( Stem("épouvantée"), "épouvant");});
test("épouvantements -> épouvant", function() {deepEqual( Stem("épouvantements"), "épouvant");});
test("époux -> époux", function() {deepEqual( Stem("époux"), "époux");});
test("épreuve -> épreuv", function() {deepEqual( Stem("épreuve"), "épreuv");});
test("épreuves -> épreuv", function() {deepEqual( Stem("épreuves"), "épreuv");});
test("épris -> épris", function() {deepEqual( Stem("épris"), "épris");});
test("éprise -> épris", function() {deepEqual( Stem("éprise"), "épris");});
test("éprouva -> éprouv", function() {deepEqual( Stem("éprouva"), "éprouv");});
test("éprouvai -> éprouv", function() {deepEqual( Stem("éprouvai"), "éprouv");});
test("éprouvait -> éprouv", function() {deepEqual( Stem("éprouvait"), "éprouv");});
test("éprouvant -> éprouv", function() {deepEqual( Stem("éprouvant"), "éprouv");});
test("éprouve -> éprouv", function() {deepEqual( Stem("éprouve"), "éprouv");});
test("éprouvé -> éprouv", function() {deepEqual( Stem("éprouvé"), "éprouv");});
test("éprouvée -> éprouv", function() {deepEqual( Stem("éprouvée"), "éprouv");});
test("éprouvées -> éprouv", function() {deepEqual( Stem("éprouvées"), "éprouv");});
test("éprouvent -> éprouvent", function() {deepEqual( Stem("éprouvent"), "éprouvent");});
test("éprouver -> éprouv", function() {deepEqual( Stem("éprouver"), "éprouv");});
test("éprouverais -> éprouv", function() {deepEqual( Stem("éprouverais"), "éprouv");});
test("éprouverait -> éprouv", function() {deepEqual( Stem("éprouverait"), "éprouv");});
test("éprouvés -> éprouv", function() {deepEqual( Stem("éprouvés"), "éprouv");});
test("épuisait -> épuis", function() {deepEqual( Stem("épuisait"), "épuis");});
test("épuisé -> épuis", function() {deepEqual( Stem("épuisé"), "épuis");});
test("épuisée -> épuis", function() {deepEqual( Stem("épuisée"), "épuis");});
test("épuisement -> épuis", function() {deepEqual( Stem("épuisement"), "épuis");});
test("épuisèrent -> épuis", function() {deepEqual( Stem("épuisèrent"), "épuis");});
test("équarrir -> équarr", function() {deepEqual( Stem("équarrir"), "équarr");});
test("équarrissaient -> équarr", function() {deepEqual( Stem("équarrissaient"), "équarr");});
test("équilibre -> équilibr", function() {deepEqual( Stem("équilibre"), "équilibr");});
test("équilibré -> équilibr", function() {deepEqual( Stem("équilibré"), "équilibr");});
test("équilibristes -> équilibr", function() {deepEqual( Stem("équilibristes"), "équilibr");});
test("equinoctial -> equinoctial", function() {deepEqual( Stem("equinoctial"), "equinoctial");});
test("équinoxe -> équinox", function() {deepEqual( Stem("équinoxe"), "équinox");});
test("équinoxes -> équinox", function() {deepEqual( Stem("équinoxes"), "équinox");});
test("équipage -> équipag", function() {deepEqual( Stem("équipage"), "équipag");});
test("équipé -> équip", function() {deepEqual( Stem("équipé"), "équip");});
test("équipée -> équip", function() {deepEqual( Stem("équipée"), "équip");});
test("équité -> équit", function() {deepEqual( Stem("équité"), "équit");});
test("équivalait -> équival", function() {deepEqual( Stem("équivalait"), "équival");});
test("équivoques -> équivoqu", function() {deepEqual( Stem("équivoques"), "équivoqu");});
test("equus -> equus", function() {deepEqual( Stem("equus"), "equus");});
test("er -> er", function() {deepEqual( Stem("er"), "er");});
test("éreinté -> éreint", function() {deepEqual( Stem("éreinté"), "éreint");});
test("ériger -> érig", function() {deepEqual( Stem("ériger"), "érig");});
test("erit -> erit", function() {deepEqual( Stem("erit"), "erit");});
test("ermitages -> ermitag", function() {deepEqual( Stem("ermitages"), "ermitag");});
test("ernest -> ernest", function() {deepEqual( Stem("ernest"), "ernest");});
test("erra -> erra", function() {deepEqual( Stem("erra"), "erra");});
test("erraient -> erraient", function() {deepEqual( Stem("erraient"), "erraient");});
test("errait -> errait", function() {deepEqual( Stem("errait"), "errait");});
test("errant -> errant", function() {deepEqual( Stem("errant"), "errant");});
test("errante -> errant", function() {deepEqual( Stem("errante"), "errant");});
test("erré -> erré", function() {deepEqual( Stem("erré"), "erré");});
test("errer -> errer", function() {deepEqual( Stem("errer"), "errer");});
test("erreur -> erreur", function() {deepEqual( Stem("erreur"), "erreur");});
test("erreurs -> erreur", function() {deepEqual( Stem("erreurs"), "erreur");});
test("es -> e", function() {deepEqual( Stem("es"), "e");});
test("escadron -> escadron", function() {deepEqual( Stem("escadron"), "escadron");});
test("escaladé -> escalad", function() {deepEqual( Stem("escaladé"), "escalad");});
test("escalader -> escalad", function() {deepEqual( Stem("escalader"), "escalad");});
test("escale -> escal", function() {deepEqual( Stem("escale"), "escal");});
test("escalier -> escali", function() {deepEqual( Stem("escalier"), "escali");});
test("escaliers -> escali", function() {deepEqual( Stem("escaliers"), "escali");});
test("escamotée -> escamot", function() {deepEqual( Stem("escamotée"), "escamot");});
test("escamoter -> escamot", function() {deepEqual( Stem("escamoter"), "escamot");});
test("escapade -> escapad", function() {deepEqual( Stem("escapade"), "escapad");});
test("escarpés -> escarp", function() {deepEqual( Stem("escarpés"), "escarp");});
test("escarpins -> escarpin", function() {deepEqual( Stem("escarpins"), "escarpin");});
test("escaut -> escaut", function() {deepEqual( Stem("escaut"), "escaut");});
test("esclandre -> esclandr", function() {deepEqual( Stem("esclandre"), "esclandr");});
test("esclave -> esclav", function() {deepEqual( Stem("esclave"), "esclav");});
test("esclaves -> esclav", function() {deepEqual( Stem("esclaves"), "esclav");});
test("escofié -> escofi", function() {deepEqual( Stem("escofié"), "escofi");});
test("escogriffe -> escogriff", function() {deepEqual( Stem("escogriffe"), "escogriff");});
test("escortaient -> escort", function() {deepEqual( Stem("escortaient"), "escort");});
test("escorte -> escort", function() {deepEqual( Stem("escorte"), "escort");});
test("escorté -> escort", function() {deepEqual( Stem("escorté"), "escort");});
test("escortée -> escort", function() {deepEqual( Stem("escortée"), "escort");});
test("escouade -> escouad", function() {deepEqual( Stem("escouade"), "escouad");});
test("escrime -> escrim", function() {deepEqual( Stem("escrime"), "escrim");});
test("escrit -> escrit", function() {deepEqual( Stem("escrit"), "escrit");});
test("espace -> espac", function() {deepEqual( Stem("espace"), "espac");});
test("espaces -> espac", function() {deepEqual( Stem("espaces"), "espac");});
test("espagne -> espagn", function() {deepEqual( Stem("espagne"), "espagn");});
test("espagnol -> espagnol", function() {deepEqual( Stem("espagnol"), "espagnol");});
test("espagnole -> espagnol", function() {deepEqual( Stem("espagnole"), "espagnol");});
test("espagnoles -> espagnol", function() {deepEqual( Stem("espagnoles"), "espagnol");});
test("espagnolette -> espagnolet", function() {deepEqual( Stem("espagnolette"), "espagnolet");});
test("espagnols -> espagnol", function() {deepEqual( Stem("espagnols"), "espagnol");});
test("esparres -> esparr", function() {deepEqual( Stem("esparres"), "esparr");});
test("espèce -> espec", function() {deepEqual( Stem("espèce"), "espec");});
test("espèces -> espec", function() {deepEqual( Stem("espèces"), "espec");});
test("espéra -> esper", function() {deepEqual( Stem("espéra"), "esper");});
test("espérais -> esper", function() {deepEqual( Stem("espérais"), "esper");});
test("espérait -> esper", function() {deepEqual( Stem("espérait"), "esper");});
test("espérance -> esper", function() {deepEqual( Stem("espérance"), "esper");});
test("espérances -> esper", function() {deepEqual( Stem("espérances"), "esper");});
test("espérant -> esper", function() {deepEqual( Stem("espérant"), "esper");});
test("espère -> esper", function() {deepEqual( Stem("espère"), "esper");});
test("espéré -> esper", function() {deepEqual( Stem("espéré"), "esper");});
test("espérée -> esper", function() {deepEqual( Stem("espérée"), "esper");});
test("espérer -> esper", function() {deepEqual( Stem("espérer"), "esper");});
test("espères -> esper", function() {deepEqual( Stem("espères"), "esper");});
test("espérez -> esper", function() {deepEqual( Stem("espérez"), "esper");});
test("espérons -> espéron", function() {deepEqual( Stem("espérons"), "espéron");});
test("espiègle -> espiegl", function() {deepEqual( Stem("espiègle"), "espiegl");});
test("espion -> espion", function() {deepEqual( Stem("espion"), "espion");});
test("espionnage -> espionnag", function() {deepEqual( Stem("espionnage"), "espionnag");});
test("espionné -> espion", function() {deepEqual( Stem("espionné"), "espion");});
test("espionnes -> espion", function() {deepEqual( Stem("espionnes"), "espion");});
test("espions -> espion", function() {deepEqual( Stem("espions"), "espion");});
test("esplanade -> esplanad", function() {deepEqual( Stem("esplanade"), "esplanad");});
test("espoir -> espoir", function() {deepEqual( Stem("espoir"), "espoir");});
test("esprit -> esprit", function() {deepEqual( Stem("esprit"), "esprit");});
test("esprits -> esprit", function() {deepEqual( Stem("esprits"), "esprit");});
test("esq -> esq", function() {deepEqual( Stem("esq"), "esq");});
test("esquire -> esquir", function() {deepEqual( Stem("esquire"), "esquir");});
test("esquisse -> esquiss", function() {deepEqual( Stem("esquisse"), "esquiss");});
test("esquisser -> esquiss", function() {deepEqual( Stem("esquisser"), "esquiss");});
test("esquiva -> esquiv", function() {deepEqual( Stem("esquiva"), "esquiv");});
test("esquiveras -> esquiv", function() {deepEqual( Stem("esquiveras"), "esquiv");});
test("essai -> essai", function() {deepEqual( Stem("essai"), "essai");});
test("essaiera -> essai", function() {deepEqual( Stem("essaiera"), "essai");});
test("essaierai -> essai", function() {deepEqual( Stem("essaierai"), "essai");});
test("essaierait -> essai", function() {deepEqual( Stem("essaierait"), "essai");});
test("essais -> essais", function() {deepEqual( Stem("essais"), "essais");});
test("essaya -> essai", function() {deepEqual( Stem("essaya"), "essai");});
test("essayaient -> essai", function() {deepEqual( Stem("essayaient"), "essai");});
test("essayait -> essai", function() {deepEqual( Stem("essayait"), "essai");});
test("essayant -> essai", function() {deepEqual( Stem("essayant"), "essai");});
test("essaye -> essay", function() {deepEqual( Stem("essaye"), "essay");});
test("essayé -> essai", function() {deepEqual( Stem("essayé"), "essai");});
test("essayées -> essai", function() {deepEqual( Stem("essayées"), "essai");});
test("essayer -> essai", function() {deepEqual( Stem("essayer"), "essai");});
test("essayons -> essayon", function() {deepEqual( Stem("essayons"), "essayon");});
test("essence -> essenc", function() {deepEqual( Stem("essence"), "essenc");});
test("essences -> essenc", function() {deepEqual( Stem("essences"), "essenc");});
test("essentiel -> essentiel", function() {deepEqual( Stem("essentiel"), "essentiel");});
test("essentielle -> essentiel", function() {deepEqual( Stem("essentielle"), "essentiel");});
test("essentiellement -> essentiel", function() {deepEqual( Stem("essentiellement"), "essentiel");});
test("essieux -> essieux", function() {deepEqual( Stem("essieux"), "essieux");});
test("essoufflé -> essouffl", function() {deepEqual( Stem("essoufflé"), "essouffl");});
test("essoufflée -> essouffl", function() {deepEqual( Stem("essoufflée"), "essouffl");});
test("essuie -> essui", function() {deepEqual( Stem("essuie"), "essui");});
test("essuyait -> essui", function() {deepEqual( Stem("essuyait"), "essui");});
test("essuyé -> essui", function() {deepEqual( Stem("essuyé"), "essui");});
test("essuyer -> essui", function() {deepEqual( Stem("essuyer"), "essui");});
test("est -> est", function() {deepEqual( Stem("est"), "est");});
test("estafette -> estafet", function() {deepEqual( Stem("estafette"), "estafet");});
test("estafier -> estafi", function() {deepEqual( Stem("estafier"), "estafi");});
test("estafiers -> estafi", function() {deepEqual( Stem("estafiers"), "estafi");});
test("estampe -> estamp", function() {deepEqual( Stem("estampe"), "estamp");});
test("estampes -> estamp", function() {deepEqual( Stem("estampes"), "estamp");});
test("estimable -> estim", function() {deepEqual( Stem("estimable"), "estim");});
test("estimables -> estim", function() {deepEqual( Stem("estimables"), "estim");});
test("estimaient -> estim", function() {deepEqual( Stem("estimaient"), "estim");});
test("estimait -> estim", function() {deepEqual( Stem("estimait"), "estim");});
test("estimant -> estim", function() {deepEqual( Stem("estimant"), "estim");});
test("estime -> estim", function() {deepEqual( Stem("estime"), "estim");});
test("estimé -> estim", function() {deepEqual( Stem("estimé"), "estim");});
test("estimée -> estim", function() {deepEqual( Stem("estimée"), "estim");});
test("estimer -> estim", function() {deepEqual( Stem("estimer"), "estim");});
test("estimeraient -> estim", function() {deepEqual( Stem("estimeraient"), "estim");});
test("estimez -> estim", function() {deepEqual( Stem("estimez"), "estim");});
test("estomac -> estomac", function() {deepEqual( Stem("estomac"), "estomac");});
test("estomacs -> estomac", function() {deepEqual( Stem("estomacs"), "estomac");});
test("et -> et", function() {deepEqual( Stem("et"), "et");});
test("établi -> établ", function() {deepEqual( Stem("établi"), "établ");});
test("établie -> établ", function() {deepEqual( Stem("établie"), "établ");});
test("établies -> établ", function() {deepEqual( Stem("établies"), "établ");});
test("établir -> établ", function() {deepEqual( Stem("établir"), "établ");});
test("établira -> établ", function() {deepEqual( Stem("établira"), "établ");});
test("établirent -> établ", function() {deepEqual( Stem("établirent"), "établ");});
test("établirez -> établ", function() {deepEqual( Stem("établirez"), "établ");});
test("établis -> établ", function() {deepEqual( Stem("établis"), "établ");});
test("établissaient -> établ", function() {deepEqual( Stem("établissaient"), "établ");});
test("établissait -> établ", function() {deepEqual( Stem("établissait"), "établ");});
test("établissant -> établ", function() {deepEqual( Stem("établissant"), "établ");});
test("établissement -> établ", function() {deepEqual( Stem("établissement"), "établ");});
test("établissements -> établ", function() {deepEqual( Stem("établissements"), "établ");});
test("établit -> établ", function() {deepEqual( Stem("établit"), "établ");});
test("étage -> étag", function() {deepEqual( Stem("étage"), "étag");});
test("étagea -> étag", function() {deepEqual( Stem("étagea"), "étag");});
test("étageaient -> étag", function() {deepEqual( Stem("étageaient"), "étag");});
test("étages -> étag", function() {deepEqual( Stem("étages"), "étag");});
test("étai -> étai", function() {deepEqual( Stem("étai"), "étai");});
test("étaie -> étai", function() {deepEqual( Stem("étaie"), "étai");});
test("etaient -> etaient", function() {deepEqual( Stem("etaient"), "etaient");});
test("étaient -> étaient", function() {deepEqual( Stem("étaient"), "étaient");});
test("étain -> étain", function() {deepEqual( Stem("étain"), "étain");});
test("étais -> étais", function() {deepEqual( Stem("étais"), "étais");});
test("etait -> etait", function() {deepEqual( Stem("etait"), "etait");});
test("était -> était", function() {deepEqual( Stem("était"), "était");});
test("étalage -> étalag", function() {deepEqual( Stem("étalage"), "étalag");});
test("étalages -> étalag", function() {deepEqual( Stem("étalages"), "étalag");});
test("étalait -> étal", function() {deepEqual( Stem("étalait"), "étal");});
test("étalant -> étal", function() {deepEqual( Stem("étalant"), "étal");});
test("étale -> étal", function() {deepEqual( Stem("étale"), "étal");});
test("étalé -> étal", function() {deepEqual( Stem("étalé"), "étal");});
test("étalée -> étal", function() {deepEqual( Stem("étalée"), "étal");});
test("étaler -> étal", function() {deepEqual( Stem("étaler"), "étal");});
test("étalés -> étal", function() {deepEqual( Stem("étalés"), "étal");});
test("étancher -> étanch", function() {deepEqual( Stem("étancher"), "étanch");});
test("étang -> étang", function() {deepEqual( Stem("étang"), "étang");});
test("étangs -> étang", function() {deepEqual( Stem("étangs"), "étang");});
test("etant -> etant", function() {deepEqual( Stem("etant"), "etant");});
test("étant -> étant", function() {deepEqual( Stem("étant"), "étant");});
test("étarquée -> étarqu", function() {deepEqual( Stem("étarquée"), "étarqu");});
test("etat -> etat", function() {deepEqual( Stem("etat"), "etat");});
test("état -> état", function() {deepEqual( Stem("état"), "état");});
test("etats -> etat", function() {deepEqual( Stem("etats"), "etat");});
test("états -> état", function() {deepEqual( Stem("états"), "état");});
test("étaux -> étal", function() {deepEqual( Stem("étaux"), "étal");});
test("étayé -> étai", function() {deepEqual( Stem("étayé"), "étai");});
test("etc -> etc", function() {deepEqual( Stem("etc"), "etc");});
test("été -> été", function() {deepEqual( Stem("été"), "été");});
test("éteignaient -> éteign", function() {deepEqual( Stem("éteignaient"), "éteign");});
test("éteignait -> éteign", function() {deepEqual( Stem("éteignait"), "éteign");});
test("éteignirent -> éteign", function() {deepEqual( Stem("éteignirent"), "éteign");});
test("éteignit -> éteign", function() {deepEqual( Stem("éteignit"), "éteign");});
test("éteindra -> éteindr", function() {deepEqual( Stem("éteindra"), "éteindr");});
test("éteindre -> éteindr", function() {deepEqual( Stem("éteindre"), "éteindr");});
test("éteindrons -> éteindron", function() {deepEqual( Stem("éteindrons"), "éteindron");});
test("éteint -> éteint", function() {deepEqual( Stem("éteint"), "éteint");});
test("éteinte -> éteint", function() {deepEqual( Stem("éteinte"), "éteint");});
test("éteints -> éteint", function() {deepEqual( Stem("éteints"), "éteint");});
test("étend -> étend", function() {deepEqual( Stem("étend"), "étend");});
test("étendaient -> étend", function() {deepEqual( Stem("étendaient"), "étend");});
test("étendait -> étend", function() {deepEqual( Stem("étendait"), "étend");});
test("étendant -> étend", function() {deepEqual( Stem("étendant"), "étend");});
test("étendent -> étendent", function() {deepEqual( Stem("étendent"), "étendent");});
test("étendirent -> étend", function() {deepEqual( Stem("étendirent"), "étend");});
test("étendit -> étend", function() {deepEqual( Stem("étendit"), "étend");});
test("étendre -> étendr", function() {deepEqual( Stem("étendre"), "étendr");});
test("étendu -> étendu", function() {deepEqual( Stem("étendu"), "étendu");});
test("étendue -> étendu", function() {deepEqual( Stem("étendue"), "étendu");});
test("étendues -> étendu", function() {deepEqual( Stem("étendues"), "étendu");});
test("étendus -> étendus", function() {deepEqual( Stem("étendus"), "étendus");});
test("éternel -> éternel", function() {deepEqual( Stem("éternel"), "éternel");});
test("éternelle -> éternel", function() {deepEqual( Stem("éternelle"), "éternel");});
test("éternelles -> éternel", function() {deepEqual( Stem("éternelles"), "éternel");});
test("éternels -> éternel", function() {deepEqual( Stem("éternels"), "éternel");});
test("éternité -> étern", function() {deepEqual( Stem("éternité"), "étern");});
test("êtes -> ête", function() {deepEqual( Stem("êtes"), "ête");});
test("ethnographiques -> ethnograph", function() {deepEqual( Stem("ethnographiques"), "ethnograph");});
test("étienne -> étien", function() {deepEqual( Stem("étienne"), "étien");});
test("étiez -> éti", function() {deepEqual( Stem("étiez"), "éti");});
test("étincelante -> étincel", function() {deepEqual( Stem("étincelante"), "étincel");});
test("étincelants -> étincel", function() {deepEqual( Stem("étincelants"), "étincel");});
test("étincelle -> étincel", function() {deepEqual( Stem("étincelle"), "étincel");});
test("étincelles -> étincel", function() {deepEqual( Stem("étincelles"), "étincel");});
test("étiole -> étiol", function() {deepEqual( Stem("étiole"), "étiol");});
test("étiolés -> étiol", function() {deepEqual( Stem("étiolés"), "étiol");});
test("étions -> étion", function() {deepEqual( Stem("étions"), "étion");});
test("étiquette -> étiquet", function() {deepEqual( Stem("étiquette"), "étiquet");});
test("étoffe -> étoff", function() {deepEqual( Stem("étoffe"), "étoff");});
test("étoffes -> étoff", function() {deepEqual( Stem("étoffes"), "étoff");});
test("étoile -> étoil", function() {deepEqual( Stem("étoile"), "étoil");});
test("étoilé -> étoil", function() {deepEqual( Stem("étoilé"), "étoil");});
test("étoiles -> étoil", function() {deepEqual( Stem("étoiles"), "étoil");});
test("étonna -> éton", function() {deepEqual( Stem("étonna"), "éton");});
test("étonnaient -> éton", function() {deepEqual( Stem("étonnaient"), "éton");});
test("étonnait -> éton", function() {deepEqual( Stem("étonnait"), "éton");});
test("étonnant -> éton", function() {deepEqual( Stem("étonnant"), "éton");});
test("étonnante -> éton", function() {deepEqual( Stem("étonnante"), "éton");});
test("étonnantes -> éton", function() {deepEqual( Stem("étonnantes"), "éton");});
test("étonnants -> éton", function() {deepEqual( Stem("étonnants"), "éton");});
test("étonne -> éton", function() {deepEqual( Stem("étonne"), "éton");});
test("étonné -> éton", function() {deepEqual( Stem("étonné"), "éton");});
test("étonnée -> éton", function() {deepEqual( Stem("étonnée"), "éton");});
test("étonnées -> éton", function() {deepEqual( Stem("étonnées"), "éton");});
test("étonnement -> éton", function() {deepEqual( Stem("étonnement"), "éton");});
test("étonnent -> étonnent", function() {deepEqual( Stem("étonnent"), "étonnent");});
test("étonner -> éton", function() {deepEqual( Stem("étonner"), "éton");});
test("étonnera -> éton", function() {deepEqual( Stem("étonnera"), "éton");});
test("étonnerait -> éton", function() {deepEqual( Stem("étonnerait"), "éton");});
test("étonnèrent -> éton", function() {deepEqual( Stem("étonnèrent"), "éton");});
test("étonnés -> éton", function() {deepEqual( Stem("étonnés"), "éton");});
test("étouffaient -> étouff", function() {deepEqual( Stem("étouffaient"), "étouff");});
test("étouffait -> étouff", function() {deepEqual( Stem("étouffait"), "étouff");});
test("étouffe -> étouff", function() {deepEqual( Stem("étouffe"), "étouff");});
test("étouffé -> étouff", function() {deepEqual( Stem("étouffé"), "étouff");});
test("étouffée -> étouff", function() {deepEqual( Stem("étouffée"), "étouff");});
test("étouffer -> étouff", function() {deepEqual( Stem("étouffer"), "étouff");});
test("étourderie -> étourder", function() {deepEqual( Stem("étourderie"), "étourder");});
test("étourderies -> étourder", function() {deepEqual( Stem("étourderies"), "étourder");});
test("étourdi -> étourd", function() {deepEqual( Stem("étourdi"), "étourd");});
test("étourdie -> étourd", function() {deepEqual( Stem("étourdie"), "étourd");});
test("étourdiment -> étourd", function() {deepEqual( Stem("étourdiment"), "étourd");});
test("étourdir -> étourd", function() {deepEqual( Stem("étourdir"), "étourd");});
test("étourdissait -> étourd", function() {deepEqual( Stem("étourdissait"), "étourd");});
test("étourdissement -> étourd", function() {deepEqual( Stem("étourdissement"), "étourd");});
test("étourdit -> étourd", function() {deepEqual( Stem("étourdit"), "étourd");});
test("étrange -> étrang", function() {deepEqual( Stem("étrange"), "étrang");});
test("étrangement -> étrang", function() {deepEqual( Stem("étrangement"), "étrang");});
test("étranger -> étrang", function() {deepEqual( Stem("étranger"), "étrang");});
test("étrangère -> étranger", function() {deepEqual( Stem("étrangère"), "étranger");});
test("étrangères -> étranger", function() {deepEqual( Stem("étrangères"), "étranger");});
test("étrangers -> étranger", function() {deepEqual( Stem("étrangers"), "étranger");});
test("étranges -> étrang", function() {deepEqual( Stem("étranges"), "étrang");});
test("étrangeté -> étranget", function() {deepEqual( Stem("étrangeté"), "étranget");});
test("étranglaient -> étrangl", function() {deepEqual( Stem("étranglaient"), "étrangl");});
test("étrangler -> étrangl", function() {deepEqual( Stem("étrangler"), "étrangl");});
test("etrangleurs -> etrangleur", function() {deepEqual( Stem("etrangleurs"), "etrangleur");});
test("étrave -> étrav", function() {deepEqual( Stem("étrave"), "étrav");});
test("etre -> etre", function() {deepEqual( Stem("etre"), "etre");});
test("être -> être", function() {deepEqual( Stem("être"), "être");});
test("étreignit -> étreign", function() {deepEqual( Stem("étreignit"), "étreign");});
test("étreinte -> étreint", function() {deepEqual( Stem("étreinte"), "étreint");});
test("êtres -> être", function() {deepEqual( Stem("êtres"), "être");});
test("étrier -> étri", function() {deepEqual( Stem("étrier"), "étri");});
test("étriers -> étrier", function() {deepEqual( Stem("étriers"), "étrier");});
test("étrille -> étrill", function() {deepEqual( Stem("étrille"), "étrill");});
test("étroit -> étroit", function() {deepEqual( Stem("étroit"), "étroit");});
test("étroite -> étroit", function() {deepEqual( Stem("étroite"), "étroit");});
test("étroitement -> étroit", function() {deepEqual( Stem("étroitement"), "étroit");});
test("étroites -> étroit", function() {deepEqual( Stem("étroites"), "étroit");});
test("étroits -> étroit", function() {deepEqual( Stem("étroits"), "étroit");});
test("étude -> étud", function() {deepEqual( Stem("étude"), "étud");});
test("études -> étud", function() {deepEqual( Stem("études"), "étud");});
test("étudia -> étudi", function() {deepEqual( Stem("étudia"), "étudi");});
test("étudiait -> étudi", function() {deepEqual( Stem("étudiait"), "étudi");});
test("étudiant -> étudi", function() {deepEqual( Stem("étudiant"), "étudi");});
test("étudie -> étud", function() {deepEqual( Stem("étudie"), "étud");});
test("étudié -> étudi", function() {deepEqual( Stem("étudié"), "étudi");});
test("étudiée -> étudi", function() {deepEqual( Stem("étudiée"), "étudi");});
test("étudier -> étudi", function() {deepEqual( Stem("étudier"), "étudi");});
test("étudierai -> étudi", function() {deepEqual( Stem("étudierai"), "étudi");});
test("étudiez -> étud", function() {deepEqual( Stem("étudiez"), "étud");});
test("étui -> étui", function() {deepEqual( Stem("étui"), "étui");});
test("étuis -> étuis", function() {deepEqual( Stem("étuis"), "étuis");});
test("eu -> eu", function() {deepEqual( Stem("eu"), "eu");});
test("eue -> eue", function() {deepEqual( Stem("eue"), "eue");});
test("eues -> eue", function() {deepEqual( Stem("eues"), "eue");});
test("eugène -> eugen", function() {deepEqual( Stem("eugène"), "eugen");});
test("eunuque -> eunuqu", function() {deepEqual( Stem("eunuque"), "eunuqu");});
test("euphorbes -> euphorb", function() {deepEqual( Stem("euphorbes"), "euphorb");});
test("eurent -> eurent", function() {deepEqual( Stem("eurent"), "eurent");});
test("europe -> europ", function() {deepEqual( Stem("europe"), "europ");});
test("européen -> européen", function() {deepEqual( Stem("européen"), "européen");});
test("européenne -> européen", function() {deepEqual( Stem("européenne"), "européen");});
test("européennes -> européen", function() {deepEqual( Stem("européennes"), "européen");});
test("européens -> européen", function() {deepEqual( Stem("européens"), "européen");});
test("eus -> eus", function() {deepEqual( Stem("eus"), "eus");});
test("eusse -> euss", function() {deepEqual( Stem("eusse"), "euss");});
test("eussent -> eussent", function() {deepEqual( Stem("eussent"), "eussent");});
test("eussiez -> euss", function() {deepEqual( Stem("eussiez"), "euss");});
test("eut -> eut", function() {deepEqual( Stem("eut"), "eut");});
test("eût -> eût", function() {deepEqual( Stem("eût"), "eût");});
test("eux -> eux", function() {deepEqual( Stem("eux"), "eux");});
test("évacuer -> évacu", function() {deepEqual( Stem("évacuer"), "évacu");});
test("évader -> évad", function() {deepEqual( Stem("évader"), "évad");});
test("évaluait -> évalu", function() {deepEqual( Stem("évaluait"), "évalu");});
test("évangélique -> évangel", function() {deepEqual( Stem("évangélique"), "évangel");});
test("évangile -> évangil", function() {deepEqual( Stem("évangile"), "évangil");});
test("évanoui -> évanou", function() {deepEqual( Stem("évanoui"), "évanou");});
test("évanouie -> évanou", function() {deepEqual( Stem("évanouie"), "évanou");});
test("évanouir -> évanou", function() {deepEqual( Stem("évanouir"), "évanou");});
test("évanouirent -> évanou", function() {deepEqual( Stem("évanouirent"), "évanou");});
test("évanouis -> évanou", function() {deepEqual( Stem("évanouis"), "évanou");});
test("évanouissait -> évanou", function() {deepEqual( Stem("évanouissait"), "évanou");});
test("évanouissement -> évanou", function() {deepEqual( Stem("évanouissement"), "évanou");});
test("évanouit -> évanou", function() {deepEqual( Stem("évanouit"), "évanou");});
test("evans -> evan", function() {deepEqual( Stem("evans"), "evan");});
test("évaporatoire -> évaporatoir", function() {deepEqual( Stem("évaporatoire"), "évaporatoir");});
test("évasion -> évas", function() {deepEqual( Stem("évasion"), "évas");});
test("évêché -> évêch", function() {deepEqual( Stem("évêché"), "évêch");});
test("éveil -> éveil", function() {deepEqual( Stem("éveil"), "éveil");});
test("éveilla -> éveil", function() {deepEqual( Stem("éveilla"), "éveil");});
test("éveillant -> éveil", function() {deepEqual( Stem("éveillant"), "éveil");});
test("éveillé -> éveil", function() {deepEqual( Stem("éveillé"), "éveil");});
test("éveillée -> éveil", function() {deepEqual( Stem("éveillée"), "éveil");});
test("éveillées -> éveil", function() {deepEqual( Stem("éveillées"), "éveil");});
test("éveiller -> éveil", function() {deepEqual( Stem("éveiller"), "éveil");});
test("éveillera -> éveil", function() {deepEqual( Stem("éveillera"), "éveil");});
test("éveillés -> éveil", function() {deepEqual( Stem("éveillés"), "éveil");});
test("even -> even", function() {deepEqual( Stem("even"), "even");});
test("événement -> éven", function() {deepEqual( Stem("événement"), "éven");});
test("événements -> éven", function() {deepEqual( Stem("événements"), "éven");});
test("evening -> evening", function() {deepEqual( Stem("evening"), "evening");});
test("éventail -> éventail", function() {deepEqual( Stem("éventail"), "éventail");});
test("éventée -> évent", function() {deepEqual( Stem("éventée"), "évent");});
test("éventualité -> éventual", function() {deepEqual( Stem("éventualité"), "éventual");});
test("éventualités -> éventual", function() {deepEqual( Stem("éventualités"), "éventual");});
test("évêque -> évêqu", function() {deepEqual( Stem("évêque"), "évêqu");});
test("évêques -> évêqu", function() {deepEqual( Stem("évêques"), "évêqu");});
test("évidaient -> évid", function() {deepEqual( Stem("évidaient"), "évid");});
test("evidemment -> evident", function() {deepEqual( Stem("evidemment"), "evident");});
test("évidemment -> évident", function() {deepEqual( Stem("évidemment"), "évident");});
test("évidence -> évident", function() {deepEqual( Stem("évidence"), "évident");});
test("évident -> évident", function() {deepEqual( Stem("évident"), "évident");});
test("évidente -> évident", function() {deepEqual( Stem("évidente"), "évident");});
test("évidentes -> évident", function() {deepEqual( Stem("évidentes"), "évident");});
test("évidents -> évident", function() {deepEqual( Stem("évidents"), "évident");});
test("évita -> évit", function() {deepEqual( Stem("évita"), "évit");});
test("évitait -> évit", function() {deepEqual( Stem("évitait"), "évit");});
test("évitant -> évit", function() {deepEqual( Stem("évitant"), "évit");});
test("évité -> évit", function() {deepEqual( Stem("évité"), "évit");});
test("éviter -> évit", function() {deepEqual( Stem("éviter"), "évit");});
test("évitèrent -> évit", function() {deepEqual( Stem("évitèrent"), "évit");});
test("évitons -> éviton", function() {deepEqual( Stem("évitons"), "éviton");});
test("ex -> ex", function() {deepEqual( Stem("ex"), "ex");});
test("exact -> exact", function() {deepEqual( Stem("exact"), "exact");});
test("exacte -> exact", function() {deepEqual( Stem("exacte"), "exact");});
test("exactement -> exact", function() {deepEqual( Stem("exactement"), "exact");});
test("exactes -> exact", function() {deepEqual( Stem("exactes"), "exact");});
test("exactitude -> exactitud", function() {deepEqual( Stem("exactitude"), "exactitud");});
test("exacts -> exact", function() {deepEqual( Stem("exacts"), "exact");});
test("exagéra -> exager", function() {deepEqual( Stem("exagéra"), "exager");});
test("exagérait -> exager", function() {deepEqual( Stem("exagérait"), "exager");});
test("exagérant -> exager", function() {deepEqual( Stem("exagérant"), "exager");});
test("exagération -> exager", function() {deepEqual( Stem("exagération"), "exager");});
test("exagérations -> exager", function() {deepEqual( Stem("exagérations"), "exager");});
test("exagère -> exager", function() {deepEqual( Stem("exagère"), "exager");});
test("exagéré -> exager", function() {deepEqual( Stem("exagéré"), "exager");});
test("exagérée -> exager", function() {deepEqual( Stem("exagérée"), "exager");});
test("exagérées -> exager", function() {deepEqual( Stem("exagérées"), "exager");});
test("exagèrent -> exag", function() {deepEqual( Stem("exagèrent"), "exag");});
test("exagérer -> exager", function() {deepEqual( Stem("exagérer"), "exager");});
test("exagérés -> exager", function() {deepEqual( Stem("exagérés"), "exager");});
test("exalta -> exalt", function() {deepEqual( Stem("exalta"), "exalt");});
test("exaltait -> exalt", function() {deepEqual( Stem("exaltait"), "exalt");});
test("exaltation -> exalt", function() {deepEqual( Stem("exaltation"), "exalt");});
test("exalte -> exalt", function() {deepEqual( Stem("exalte"), "exalt");});
test("exalté -> exalt", function() {deepEqual( Stem("exalté"), "exalt");});
test("exaltée -> exalt", function() {deepEqual( Stem("exaltée"), "exalt");});
test("exaltées -> exalt", function() {deepEqual( Stem("exaltées"), "exalt");});
test("exalter -> exalt", function() {deepEqual( Stem("exalter"), "exalt");});
test("examen -> examen", function() {deepEqual( Stem("examen"), "examen");});
test("examens -> examen", function() {deepEqual( Stem("examens"), "examen");});
test("examina -> examin", function() {deepEqual( Stem("examina"), "examin");});
test("examinait -> examin", function() {deepEqual( Stem("examinait"), "examin");});
test("examinant -> examin", function() {deepEqual( Stem("examinant"), "examin");});
test("examinateur -> examin", function() {deepEqual( Stem("examinateur"), "examin");});
test("examinateurs -> examin", function() {deepEqual( Stem("examinateurs"), "examin");});
test("examine -> examin", function() {deepEqual( Stem("examine"), "examin");});
test("examiné -> examin", function() {deepEqual( Stem("examiné"), "examin");});
test("examinée -> examin", function() {deepEqual( Stem("examinée"), "examin");});
test("examiner -> examin", function() {deepEqual( Stem("examiner"), "examin");});
test("examinez -> examin", function() {deepEqual( Stem("examinez"), "examin");});
test("exaspérait -> exasper", function() {deepEqual( Stem("exaspérait"), "exasper");});
test("exaspéré -> exasper", function() {deepEqual( Stem("exaspéré"), "exasper");});
test("exaspérée -> exasper", function() {deepEqual( Stem("exaspérée"), "exasper");});
test("exaspérer -> exasper", function() {deepEqual( Stem("exaspérer"), "exasper");});
test("excédé -> exced", function() {deepEqual( Stem("excédé"), "exced");});
test("excédée -> exced", function() {deepEqual( Stem("excédée"), "exced");});
test("excéder -> exced", function() {deepEqual( Stem("excéder"), "exced");});
test("excellence -> excellent", function() {deepEqual( Stem("excellence"), "excellent");});
test("excellent -> excellent", function() {deepEqual( Stem("excellent"), "excellent");});
test("excellente -> excellent", function() {deepEqual( Stem("excellente"), "excellent");});
test("excellentes -> excellent", function() {deepEqual( Stem("excellentes"), "excellent");});
test("excellents -> excellent", function() {deepEqual( Stem("excellents"), "excellent");});
test("excentricité -> excentr", function() {deepEqual( Stem("excentricité"), "excentr");});
test("excentrique -> excentr", function() {deepEqual( Stem("excentrique"), "excentr");});
test("excepté -> except", function() {deepEqual( Stem("excepté"), "except");});
test("exception -> except", function() {deepEqual( Stem("exception"), "except");});
test("excès -> exces", function() {deepEqual( Stem("excès"), "exces");});
test("excessif -> excess", function() {deepEqual( Stem("excessif"), "excess");});
test("excessifs -> excess", function() {deepEqual( Stem("excessifs"), "excess");});
test("excessive -> excess", function() {deepEqual( Stem("excessive"), "excess");});
test("excessivement -> excess", function() {deepEqual( Stem("excessivement"), "excess");});
test("excessives -> excess", function() {deepEqual( Stem("excessives"), "excess");});
test("excita -> excit", function() {deepEqual( Stem("excita"), "excit");});
test("excitait -> excit", function() {deepEqual( Stem("excitait"), "excit");});
test("excitation -> excit", function() {deepEqual( Stem("excitation"), "excit");});
test("excité -> excit", function() {deepEqual( Stem("excité"), "excit");});
test("excitée -> excit", function() {deepEqual( Stem("excitée"), "excit");});
test("excitées -> excit", function() {deepEqual( Stem("excitées"), "excit");});
test("excitent -> excitent", function() {deepEqual( Stem("excitent"), "excitent");});
test("exciter -> excit", function() {deepEqual( Stem("exciter"), "excit");});
test("exciterai -> excit", function() {deepEqual( Stem("exciterai"), "excit");});
test("exclama -> exclam", function() {deepEqual( Stem("exclama"), "exclam");});
test("exclamation -> exclam", function() {deepEqual( Stem("exclamation"), "exclam");});
test("exclamations -> exclam", function() {deepEqual( Stem("exclamations"), "exclam");});
test("exclu -> exclu", function() {deepEqual( Stem("exclu"), "exclu");});
test("exclusive -> exclus", function() {deepEqual( Stem("exclusive"), "exclus");});
test("exclusivement -> exclus", function() {deepEqual( Stem("exclusivement"), "exclus");});
test("excusa -> excus", function() {deepEqual( Stem("excusa"), "excus");});
test("excusable -> excus", function() {deepEqual( Stem("excusable"), "excus");});
test("excusait -> excus", function() {deepEqual( Stem("excusait"), "excus");});
test("excusant -> excus", function() {deepEqual( Stem("excusant"), "excus");});
test("excuse -> excus", function() {deepEqual( Stem("excuse"), "excus");});
test("excusée -> excus", function() {deepEqual( Stem("excusée"), "excus");});
test("excuser -> excus", function() {deepEqual( Stem("excuser"), "excus");});
test("excuserez -> excus", function() {deepEqual( Stem("excuserez"), "excus");});
test("excuses -> excus", function() {deepEqual( Stem("excuses"), "excus");});
test("excusez -> excus", function() {deepEqual( Stem("excusez"), "excus");});
test("exécrable -> execr", function() {deepEqual( Stem("exécrable"), "execr");});
test("exécrait -> execr", function() {deepEqual( Stem("exécrait"), "execr");});
test("exécration -> execr", function() {deepEqual( Stem("exécration"), "execr");});
test("exècre -> execr", function() {deepEqual( Stem("exècre"), "execr");});
test("exécrer -> execr", function() {deepEqual( Stem("exécrer"), "execr");});
test("exécuta -> exécut", function() {deepEqual( Stem("exécuta"), "exécut");});
test("exécutait -> exécut", function() {deepEqual( Stem("exécutait"), "exécut");});
test("exécutant -> exécut", function() {deepEqual( Stem("exécutant"), "exécut");});
test("exécute -> exécut", function() {deepEqual( Stem("exécute"), "exécut");});
test("exécuté -> exécut", function() {deepEqual( Stem("exécuté"), "exécut");});
test("exécutée -> exécut", function() {deepEqual( Stem("exécutée"), "exécut");});
test("exécutées -> exécut", function() {deepEqual( Stem("exécutées"), "exécut");});
test("exécuter -> exécut", function() {deepEqual( Stem("exécuter"), "exécut");});
test("exécuterai -> exécut", function() {deepEqual( Stem("exécuterai"), "exécut");});
test("exécuterait -> exécut", function() {deepEqual( Stem("exécuterait"), "exécut");});
test("exécuteras -> exécut", function() {deepEqual( Stem("exécuteras"), "exécut");});
test("exécutés -> exécut", function() {deepEqual( Stem("exécutés"), "exécut");});
test("exécuteur -> exécuteur", function() {deepEqual( Stem("exécuteur"), "exécuteur");});
test("exécution -> exécu", function() {deepEqual( Stem("exécution"), "exécu");});
test("exécutions -> exécu", function() {deepEqual( Stem("exécutions"), "exécu");});
test("exécutoire -> exécutoir", function() {deepEqual( Stem("exécutoire"), "exécutoir");});
test("exemplaire -> exemplair", function() {deepEqual( Stem("exemplaire"), "exemplair");});
test("exemplaires -> exemplair", function() {deepEqual( Stem("exemplaires"), "exemplair");});
test("exemple -> exempl", function() {deepEqual( Stem("exemple"), "exempl");});
test("exemples -> exempl", function() {deepEqual( Stem("exemples"), "exempl");});
test("exempte -> exempt", function() {deepEqual( Stem("exempte"), "exempt");});
test("exempté -> exempt", function() {deepEqual( Stem("exempté"), "exempt");});
test("exerçait -> exerc", function() {deepEqual( Stem("exerçait"), "exerc");});
test("exerçant -> exerc", function() {deepEqual( Stem("exerçant"), "exerc");});
test("exerce -> exerc", function() {deepEqual( Stem("exerce"), "exerc");});
test("exercée -> exerc", function() {deepEqual( Stem("exercée"), "exerc");});
test("exercent -> exercent", function() {deepEqual( Stem("exercent"), "exercent");});
test("exercer -> exerc", function() {deepEqual( Stem("exercer"), "exerc");});
test("exercerait -> exerc", function() {deepEqual( Stem("exercerait"), "exerc");});
test("exercés -> exerc", function() {deepEqual( Stem("exercés"), "exerc");});
test("exercice -> exercic", function() {deepEqual( Stem("exercice"), "exercic");});
test("exercices -> exercic", function() {deepEqual( Stem("exercices"), "exercic");});
test("exhibant -> exhib", function() {deepEqual( Stem("exhibant"), "exhib");});
test("exhibe -> exhib", function() {deepEqual( Stem("exhibe"), "exhib");});
test("exhibition -> exhibit", function() {deepEqual( Stem("exhibition"), "exhibit");});
test("exhibitions -> exhibit", function() {deepEqual( Stem("exhibitions"), "exhibit");});
test("exhortait -> exhort", function() {deepEqual( Stem("exhortait"), "exhort");});
test("exige -> exig", function() {deepEqual( Stem("exige"), "exig");});
test("exigé -> exig", function() {deepEqual( Stem("exigé"), "exig");});
test("exigea -> exig", function() {deepEqual( Stem("exigea"), "exig");});
test("exigeait -> exig", function() {deepEqual( Stem("exigeait"), "exig");});
test("exigences -> exigent", function() {deepEqual( Stem("exigences"), "exigent");});
test("exigeons -> exigeon", function() {deepEqual( Stem("exigeons"), "exigeon");});
test("exiger -> exig", function() {deepEqual( Stem("exiger"), "exig");});
test("exigez -> exig", function() {deepEqual( Stem("exigez"), "exig");});
test("exiguë -> exigu", function() {deepEqual( Stem("exiguë"), "exigu");});
test("exigus -> exigus", function() {deepEqual( Stem("exigus"), "exigus");});
test("exil -> exil", function() {deepEqual( Stem("exil"), "exil");});
test("exila -> exil", function() {deepEqual( Stem("exila"), "exil");});
test("exilait -> exil", function() {deepEqual( Stem("exilait"), "exil");});
test("exile -> exil", function() {deepEqual( Stem("exile"), "exil");});
test("exilé -> exil", function() {deepEqual( Stem("exilé"), "exil");});
test("exilées -> exil", function() {deepEqual( Stem("exilées"), "exil");});
test("exiler -> exil", function() {deepEqual( Stem("exiler"), "exil");});
test("exista -> exist", function() {deepEqual( Stem("exista"), "exist");});
test("existaient -> exist", function() {deepEqual( Stem("existaient"), "exist");});
test("existait -> exist", function() {deepEqual( Stem("existait"), "exist");});
test("existât -> exist", function() {deepEqual( Stem("existât"), "exist");});
test("existe -> exist", function() {deepEqual( Stem("existe"), "exist");});
test("existé -> exist", function() {deepEqual( Stem("existé"), "exist");});
test("existence -> existent", function() {deepEqual( Stem("existence"), "existent");});
test("existent -> existent", function() {deepEqual( Stem("existent"), "existent");});
test("exister -> exist", function() {deepEqual( Stem("exister"), "exist");});
test("exorbitante -> exorbit", function() {deepEqual( Stem("exorbitante"), "exorbit");});
test("exotiques -> exot", function() {deepEqual( Stem("exotiques"), "exot");});
test("expansif -> expans", function() {deepEqual( Stem("expansif"), "expans");});
test("expansion -> expans", function() {deepEqual( Stem("expansion"), "expans");});
test("expédia -> expédi", function() {deepEqual( Stem("expédia"), "expédi");});
test("expédié -> expédi", function() {deepEqual( Stem("expédié"), "expédi");});
test("expédiée -> expédi", function() {deepEqual( Stem("expédiée"), "expédi");});
test("expédier -> expédi", function() {deepEqual( Stem("expédier"), "expédi");});
test("expédition -> expédit", function() {deepEqual( Stem("expédition"), "expédit");});
test("expéditions -> expédit", function() {deepEqual( Stem("expéditions"), "expédit");});
test("expérience -> expérient", function() {deepEqual( Stem("expérience"), "expérient");});
test("expiation -> expiat", function() {deepEqual( Stem("expiation"), "expiat");});
test("expira -> expir", function() {deepEqual( Stem("expira"), "expir");});
test("expiré -> expir", function() {deepEqual( Stem("expiré"), "expir");});
test("expirer -> expir", function() {deepEqual( Stem("expirer"), "expir");});
test("explicable -> explic", function() {deepEqual( Stem("explicable"), "explic");});
test("explication -> expliqu", function() {deepEqual( Stem("explication"), "expliqu");});
test("explications -> expliqu", function() {deepEqual( Stem("explications"), "expliqu");});
test("explicite -> explicit", function() {deepEqual( Stem("explicite"), "explicit");});
test("expliqua -> expliqu", function() {deepEqual( Stem("expliqua"), "expliqu");});
test("expliquait -> expliqu", function() {deepEqual( Stem("expliquait"), "expliqu");});
test("expliquant -> expliqu", function() {deepEqual( Stem("expliquant"), "expliqu");});
test("explique -> expliqu", function() {deepEqual( Stem("explique"), "expliqu");});
test("expliqué -> expliqu", function() {deepEqual( Stem("expliqué"), "expliqu");});
test("expliquée -> expliqu", function() {deepEqual( Stem("expliquée"), "expliqu");});
test("expliquer -> expliqu", function() {deepEqual( Stem("expliquer"), "expliqu");});
test("expliqués -> expliqu", function() {deepEqual( Stem("expliqués"), "expliqu");});
test("expliquez -> expliqu", function() {deepEqual( Stem("expliquez"), "expliqu");});
test("exploit -> exploit", function() {deepEqual( Stem("exploit"), "exploit");});
test("exploits -> exploit", function() {deepEqual( Stem("exploits"), "exploit");});
test("explosion -> explos", function() {deepEqual( Stem("explosion"), "explos");});
test("exposa -> expos", function() {deepEqual( Stem("exposa"), "expos");});
test("exposais -> expos", function() {deepEqual( Stem("exposais"), "expos");});
test("exposait -> expos", function() {deepEqual( Stem("exposait"), "expos");});
test("exposant -> expos", function() {deepEqual( Stem("exposant"), "expos");});
test("expose -> expos", function() {deepEqual( Stem("expose"), "expos");});
test("exposé -> expos", function() {deepEqual( Stem("exposé"), "expos");});
test("exposée -> expos", function() {deepEqual( Stem("exposée"), "expos");});
test("exposées -> expos", function() {deepEqual( Stem("exposées"), "expos");});
test("exposer -> expos", function() {deepEqual( Stem("exposer"), "expos");});
test("exposerai -> expos", function() {deepEqual( Stem("exposerai"), "expos");});
test("exposerais -> expos", function() {deepEqual( Stem("exposerais"), "expos");});
test("exposerait -> expos", function() {deepEqual( Stem("exposerait"), "expos");});
test("exposés -> expos", function() {deepEqual( Stem("exposés"), "expos");});
test("exposez -> expos", function() {deepEqual( Stem("exposez"), "expos");});
test("exprès -> expres", function() {deepEqual( Stem("exprès"), "expres");});
test("express -> express", function() {deepEqual( Stem("express"), "express");});
test("expresse -> express", function() {deepEqual( Stem("expresse"), "express");});
test("expressément -> express", function() {deepEqual( Stem("expressément"), "express");});
test("expressifs -> express", function() {deepEqual( Stem("expressifs"), "express");});
test("expression -> express", function() {deepEqual( Stem("expression"), "express");});
test("expressions -> express", function() {deepEqual( Stem("expressions"), "express");});
test("exprima -> exprim", function() {deepEqual( Stem("exprima"), "exprim");});
test("exprimaient -> exprim", function() {deepEqual( Stem("exprimaient"), "exprim");});
test("exprimait -> exprim", function() {deepEqual( Stem("exprimait"), "exprim");});
test("exprimant -> exprim", function() {deepEqual( Stem("exprimant"), "exprim");});
test("exprime -> exprim", function() {deepEqual( Stem("exprime"), "exprim");});
test("exprimé -> exprim", function() {deepEqual( Stem("exprimé"), "exprim");});
test("exprimée -> exprim", function() {deepEqual( Stem("exprimée"), "exprim");});
test("exprimer -> exprim", function() {deepEqual( Stem("exprimer"), "exprim");});
test("exprimèrent -> exprim", function() {deepEqual( Stem("exprimèrent"), "exprim");});
test("exprimeront -> exprim", function() {deepEqual( Stem("exprimeront"), "exprim");});
test("exquise -> exquis", function() {deepEqual( Stem("exquise"), "exquis");});
test("extase -> extas", function() {deepEqual( Stem("extase"), "extas");});
test("extases -> extas", function() {deepEqual( Stem("extases"), "extas");});
test("extatique -> extat", function() {deepEqual( Stem("extatique"), "extat");});
test("extension -> extens", function() {deepEqual( Stem("extension"), "extens");});
test("extérieur -> extérieur", function() {deepEqual( Stem("extérieur"), "extérieur");});
test("extérieure -> extérieur", function() {deepEqual( Stem("extérieure"), "extérieur");});
test("extérieures -> extérieur", function() {deepEqual( Stem("extérieures"), "extérieur");});
test("extérieurs -> extérieur", function() {deepEqual( Stem("extérieurs"), "extérieur");});
test("exterminés -> extermin", function() {deepEqual( Stem("exterminés"), "extermin");});
test("extinction -> extinct", function() {deepEqual( Stem("extinction"), "extinct");});
test("extorqué -> extorqu", function() {deepEqual( Stem("extorqué"), "extorqu");});
test("extradition -> extradit", function() {deepEqual( Stem("extradition"), "extradit");});
test("extrait -> extrait", function() {deepEqual( Stem("extrait"), "extrait");});
test("extraites -> extrait", function() {deepEqual( Stem("extraites"), "extrait");});
test("extraordinaire -> extraordinair", function() {deepEqual( Stem("extraordinaire"), "extraordinair");});
test("extraordinairement -> extraordinair", function() {deepEqual( Stem("extraordinairement"), "extraordinair");});
test("extraordinaires -> extraordinair", function() {deepEqual( Stem("extraordinaires"), "extraordinair");});
test("extravagant -> extravag", function() {deepEqual( Stem("extravagant"), "extravag");});
test("extravagante -> extravag", function() {deepEqual( Stem("extravagante"), "extravag");});
test("extravagantes -> extravag", function() {deepEqual( Stem("extravagantes"), "extravag");});
test("extrême -> extrêm", function() {deepEqual( Stem("extrême"), "extrêm");});
test("extrêmement -> extrêm", function() {deepEqual( Stem("extrêmement"), "extrêm");});
test("extrêmes -> extrêm", function() {deepEqual( Stem("extrêmes"), "extrêm");});
test("extrémité -> extrem", function() {deepEqual( Stem("extrémité"), "extrem");});
test("extrémités -> extrem", function() {deepEqual( Stem("extrémités"), "extrem");});
test("f -> f", function() {deepEqual( Stem("f"), "f");});
test("fa -> fa", function() {deepEqual( Stem("fa"), "fa");});
test("fabio -> fabio", function() {deepEqual( Stem("fabio"), "fabio");});
test("fable -> fabl", function() {deepEqual( Stem("fable"), "fabl");});
test("fables -> fabl", function() {deepEqual( Stem("fables"), "fabl");});
test("fabricant -> fabric", function() {deepEqual( Stem("fabricant"), "fabric");});
test("fabricants -> fabric", function() {deepEqual( Stem("fabricants"), "fabric");});
test("fabrice -> fabric", function() {deepEqual( Stem("fabrice"), "fabric");});
test("fabriquaient -> fabriqu", function() {deepEqual( Stem("fabriquaient"), "fabriqu");});
test("fabrique -> fabriqu", function() {deepEqual( Stem("fabrique"), "fabriqu");});
test("fabriquée -> fabriqu", function() {deepEqual( Stem("fabriquée"), "fabriqu");});
test("fabriquées -> fabriqu", function() {deepEqual( Stem("fabriquées"), "fabriqu");});
test("fabriquer -> fabriqu", function() {deepEqual( Stem("fabriquer"), "fabriqu");});
test("fabriques -> fabriqu", function() {deepEqual( Stem("fabriques"), "fabriqu");});
test("fabuleux -> fabul", function() {deepEqual( Stem("fabuleux"), "fabul");});
test("fabuliste -> fabul", function() {deepEqual( Stem("fabuliste"), "fabul");});
test("façade -> façad", function() {deepEqual( Stem("façade"), "façad");});
test("façades -> façad", function() {deepEqual( Stem("façades"), "façad");});
test("face -> fac", function() {deepEqual( Stem("face"), "fac");});
test("fâcha -> fâch", function() {deepEqual( Stem("fâcha"), "fâch");});
test("fâchait -> fâch", function() {deepEqual( Stem("fâchait"), "fâch");});
test("fâchât -> fâch", function() {deepEqual( Stem("fâchât"), "fâch");});
test("fâche -> fâch", function() {deepEqual( Stem("fâche"), "fâch");});
test("fâché -> fâch", function() {deepEqual( Stem("fâché"), "fâch");});
test("fâchée -> fâch", function() {deepEqual( Stem("fâchée"), "fâch");});
test("fâchent -> fâchent", function() {deepEqual( Stem("fâchent"), "fâchent");});
test("fâcher -> fâch", function() {deepEqual( Stem("fâcher"), "fâch");});
test("fâchèrent -> fâch", function() {deepEqual( Stem("fâchèrent"), "fâch");});
test("fâchés -> fâch", function() {deepEqual( Stem("fâchés"), "fâch");});
test("fâcheuse -> fâcheux", function() {deepEqual( Stem("fâcheuse"), "fâcheux");});
test("fâcheuses -> fâcheux", function() {deepEqual( Stem("fâcheuses"), "fâcheux");});
test("fâcheux -> fâcheux", function() {deepEqual( Stem("fâcheux"), "fâcheux");});
test("fâchez -> fâch", function() {deepEqual( Stem("fâchez"), "fâch");});
test("facile -> facil", function() {deepEqual( Stem("facile"), "facil");});
test("facilement -> facil", function() {deepEqual( Stem("facilement"), "facil");});
test("facilitait -> facilit", function() {deepEqual( Stem("facilitait"), "facilit");});
test("facilité -> facil", function() {deepEqual( Stem("facilité"), "facil");});
test("facilitent -> facilitent", function() {deepEqual( Stem("facilitent"), "facilitent");});
test("faciliter -> facilit", function() {deepEqual( Stem("faciliter"), "facilit");});
test("facio -> facio", function() {deepEqual( Stem("facio"), "facio");});
test("façon -> façon", function() {deepEqual( Stem("façon"), "façon");});
test("faconde -> facond", function() {deepEqual( Stem("faconde"), "facond");});
test("façons -> façon", function() {deepEqual( Stem("façons"), "façon");});
test("facteur -> facteur", function() {deepEqual( Stem("facteur"), "facteur");});
test("faction -> faction", function() {deepEqual( Stem("faction"), "faction");});
test("factotum -> factotum", function() {deepEqual( Stem("factotum"), "factotum");});
test("faculté -> facult", function() {deepEqual( Stem("faculté"), "facult");});
test("facultés -> facult", function() {deepEqual( Stem("facultés"), "facult");});
test("fade -> fad", function() {deepEqual( Stem("fade"), "fad");});
test("fagots -> fagot", function() {deepEqual( Stem("fagots"), "fagot");});
test("fahrenheit -> fahrenheit", function() {deepEqual( Stem("fahrenheit"), "fahrenheit");});
test("faible -> faibl", function() {deepEqual( Stem("faible"), "faibl");});
test("faibles -> faibl", function() {deepEqual( Stem("faibles"), "faibl");});
test("faiblesse -> faibless", function() {deepEqual( Stem("faiblesse"), "faibless");});
test("faiblesses -> faibless", function() {deepEqual( Stem("faiblesses"), "faibless");});
test("faiblir -> faibl", function() {deepEqual( Stem("faiblir"), "faibl");});
test("faiblirent -> faibl", function() {deepEqual( Stem("faiblirent"), "faibl");});
test("faict -> faict", function() {deepEqual( Stem("faict"), "faict");});
test("failli -> faill", function() {deepEqual( Stem("failli"), "faill");});
test("faillir -> faill", function() {deepEqual( Stem("faillir"), "faill");});
test("faillirent -> faill", function() {deepEqual( Stem("faillirent"), "faill");});
test("faillit -> faill", function() {deepEqual( Stem("faillit"), "faill");});
test("faim -> faim", function() {deepEqual( Stem("faim"), "faim");});
test("fainéant -> fainé", function() {deepEqual( Stem("fainéant"), "fainé");});
test("faire -> fair", function() {deepEqual( Stem("faire"), "fair");});
test("fais -> fais", function() {deepEqual( Stem("fais"), "fais");});
test("faisable -> faisabl", function() {deepEqual( Stem("faisable"), "faisabl");});
test("faisaient -> fais", function() {deepEqual( Stem("faisaient"), "fais");});
test("faisais -> fais", function() {deepEqual( Stem("faisais"), "fais");});
test("faisait -> fais", function() {deepEqual( Stem("faisait"), "fais");});
test("faisant -> fais", function() {deepEqual( Stem("faisant"), "fais");});
test("faisceaux -> faisceau", function() {deepEqual( Stem("faisceaux"), "faisceau");});
test("faisiez -> fais", function() {deepEqual( Stem("faisiez"), "fais");});
test("faisons -> faison", function() {deepEqual( Stem("faisons"), "faison");});
test("fait -> fait", function() {deepEqual( Stem("fait"), "fait");});
test("faite -> fait", function() {deepEqual( Stem("faite"), "fait");});
test("faîte -> faît", function() {deepEqual( Stem("faîte"), "faît");});
test("faites -> fait", function() {deepEqual( Stem("faites"), "fait");});
test("faits -> fait", function() {deepEqual( Stem("faits"), "fait");});
test("fakirs -> fakir", function() {deepEqual( Stem("fakirs"), "fakir");});
test("falcoz -> falcoz", function() {deepEqual( Stem("falcoz"), "falcoz");});
test("faliero -> faliero", function() {deepEqual( Stem("faliero"), "faliero");});
test("fallait -> fall", function() {deepEqual( Stem("fallait"), "fall");});
test("fallentin -> fallentin", function() {deepEqual( Stem("fallentin"), "fallentin");});
test("falloir -> falloir", function() {deepEqual( Stem("falloir"), "falloir");});
test("fallu -> fallu", function() {deepEqual( Stem("fallu"), "fallu");});
test("fallut -> fallut", function() {deepEqual( Stem("fallut"), "fallut");});
test("fameuse -> fameux", function() {deepEqual( Stem("fameuse"), "fameux");});
test("fameusement -> fameux", function() {deepEqual( Stem("fameusement"), "fameux");});
test("fameux -> fameux", function() {deepEqual( Stem("fameux"), "fameux");});
test("familiarisé -> familiaris", function() {deepEqual( Stem("familiarisé"), "familiaris");});
test("familiarité -> familiar", function() {deepEqual( Stem("familiarité"), "familiar");});
test("familier -> famili", function() {deepEqual( Stem("familier"), "famili");});
test("familièrement -> famili", function() {deepEqual( Stem("familièrement"), "famili");});
test("famille -> famill", function() {deepEqual( Stem("famille"), "famill");});
test("familles -> famill", function() {deepEqual( Stem("familles"), "famill");});
test("fanal -> fanal", function() {deepEqual( Stem("fanal"), "fanal");});
test("fanatique -> fanat", function() {deepEqual( Stem("fanatique"), "fanat");});
test("fanatiques -> fanat", function() {deepEqual( Stem("fanatiques"), "fanat");});
test("fanatisme -> fanat", function() {deepEqual( Stem("fanatisme"), "fanat");});
test("fanfarons -> fanfaron", function() {deepEqual( Stem("fanfarons"), "fanfaron");});
test("fange -> fang", function() {deepEqual( Stem("fange"), "fang");});
test("fangeuses -> fangeux", function() {deepEqual( Stem("fangeuses"), "fangeux");});
test("fangeux -> fangeux", function() {deepEqual( Stem("fangeux"), "fangeux");});
test("fantaisie -> fantais", function() {deepEqual( Stem("fantaisie"), "fantais");});
test("fantaisies -> fantais", function() {deepEqual( Stem("fantaisies"), "fantais");});
test("fantaisistes -> fantais", function() {deepEqual( Stem("fantaisistes"), "fantais");});
test("fantasque -> fantasqu", function() {deepEqual( Stem("fantasque"), "fantasqu");});
test("fantastique -> fantast", function() {deepEqual( Stem("fantastique"), "fantast");});
test("fantastiques -> fantast", function() {deepEqual( Stem("fantastiques"), "fantast");});
test("fantôme -> fantôm", function() {deepEqual( Stem("fantôme"), "fantôm");});
test("faquins -> faquin", function() {deepEqual( Stem("faquins"), "faquin");});
test("far -> far", function() {deepEqual( Stem("far"), "far");});
test("faraud -> faraud", function() {deepEqual( Stem("faraud"), "faraud");});
test("farceur -> farceur", function() {deepEqual( Stem("farceur"), "farceur");});
test("farceurs -> farceur", function() {deepEqual( Stem("farceurs"), "farceur");});
test("farci -> farc", function() {deepEqual( Stem("farci"), "farc");});
test("fardeau -> fardeau", function() {deepEqual( Stem("fardeau"), "fardeau");});
test("fare -> far", function() {deepEqual( Stem("fare"), "far");});
test("farine -> farin", function() {deepEqual( Stem("farine"), "farin");});
test("farmer -> farm", function() {deepEqual( Stem("farmer"), "farm");});
test("farnèse -> farnes", function() {deepEqual( Stem("farnèse"), "farnes");});
test("farouche -> farouch", function() {deepEqual( Stem("farouche"), "farouch");});
test("farouches -> farouch", function() {deepEqual( Stem("farouches"), "farouch");});
test("farthing -> farthing", function() {deepEqual( Stem("farthing"), "farthing");});
test("fascinant -> fascin", function() {deepEqual( Stem("fascinant"), "fascin");});
test("fascination -> fascin", function() {deepEqual( Stem("fascination"), "fascin");});
test("fasciné -> fascin", function() {deepEqual( Stem("fasciné"), "fascin");});
test("fasciner -> fascin", function() {deepEqual( Stem("fasciner"), "fascin");});
test("fasse -> fass", function() {deepEqual( Stem("fasse"), "fass");});
test("fassent -> fassent", function() {deepEqual( Stem("fassent"), "fassent");});
test("fassiez -> fass", function() {deepEqual( Stem("fassiez"), "fass");});
test("faste -> fast", function() {deepEqual( Stem("faste"), "fast");});
test("fastenet -> fastenet", function() {deepEqual( Stem("fastenet"), "fastenet");});
test("fat -> fat", function() {deepEqual( Stem("fat"), "fat");});
test("fata -> fat", function() {deepEqual( Stem("fata"), "fat");});
test("fatal -> fatal", function() {deepEqual( Stem("fatal"), "fatal");});
test("fatale -> fatal", function() {deepEqual( Stem("fatale"), "fatal");});
test("fatales -> fatal", function() {deepEqual( Stem("fatales"), "fatal");});
test("fatalité -> fatal", function() {deepEqual( Stem("fatalité"), "fatal");});
test("fatigant -> fatig", function() {deepEqual( Stem("fatigant"), "fatig");});
test("fatigante -> fatig", function() {deepEqual( Stem("fatigante"), "fatig");});
test("fatigua -> fatigu", function() {deepEqual( Stem("fatigua"), "fatigu");});
test("fatiguaient -> fatigu", function() {deepEqual( Stem("fatiguaient"), "fatigu");});
test("fatigue -> fatigu", function() {deepEqual( Stem("fatigue"), "fatigu");});
test("fatigué -> fatigu", function() {deepEqual( Stem("fatigué"), "fatigu");});
test("fatiguée -> fatigu", function() {deepEqual( Stem("fatiguée"), "fatigu");});
test("fatiguées -> fatigu", function() {deepEqual( Stem("fatiguées"), "fatigu");});
test("fatiguer -> fatigu", function() {deepEqual( Stem("fatiguer"), "fatigu");});
test("fatiguerai -> fatigu", function() {deepEqual( Stem("fatiguerai"), "fatigu");});
test("fatigues -> fatigu", function() {deepEqual( Stem("fatigues"), "fatigu");});
test("fatuité -> fatuit", function() {deepEqual( Stem("fatuité"), "fatuit");});
test("faublas -> faubl", function() {deepEqual( Stem("faublas"), "faubl");});
test("faubourg -> faubourg", function() {deepEqual( Stem("faubourg"), "faubourg");});
test("faudra -> faudr", function() {deepEqual( Stem("faudra"), "faudr");});
test("faudrait -> faudr", function() {deepEqual( Stem("faudrait"), "faudr");});
test("faufilant -> faufil", function() {deepEqual( Stem("faufilant"), "faufil");});
test("fausse -> fauss", function() {deepEqual( Stem("fausse"), "fauss");});
test("fausses -> fauss", function() {deepEqual( Stem("fausses"), "fauss");});
test("fausseté -> fausset", function() {deepEqual( Stem("fausseté"), "fausset");});
test("faussetés -> fausset", function() {deepEqual( Stem("faussetés"), "fausset");});
test("fausta -> faust", function() {deepEqual( Stem("fausta"), "faust");});
test("faut -> faut", function() {deepEqual( Stem("faut"), "faut");});
test("faute -> faut", function() {deepEqual( Stem("faute"), "faut");});
test("fautes -> faut", function() {deepEqual( Stem("fautes"), "faut");});
test("fauteuil -> fauteuil", function() {deepEqual( Stem("fauteuil"), "fauteuil");});
test("fauteuils -> fauteuil", function() {deepEqual( Stem("fauteuils"), "fauteuil");});
test("fauve -> fauv", function() {deepEqual( Stem("fauve"), "fauv");});
test("fauves -> fauv", function() {deepEqual( Stem("fauves"), "fauv");});
test("faux -> faux", function() {deepEqual( Stem("faux"), "faux");});
test("faveur -> faveur", function() {deepEqual( Stem("faveur"), "faveur");});
test("faveurs -> faveur", function() {deepEqual( Stem("faveurs"), "faveur");});
test("favorable -> favor", function() {deepEqual( Stem("favorable"), "favor");});
test("favorablement -> favor", function() {deepEqual( Stem("favorablement"), "favor");});
test("favorables -> favor", function() {deepEqual( Stem("favorables"), "favor");});
test("favori -> favor", function() {deepEqual( Stem("favori"), "favor");});
test("favoris -> favor", function() {deepEqual( Stem("favoris"), "favor");});
test("favorisa -> favoris", function() {deepEqual( Stem("favorisa"), "favoris");});
test("favorisait -> favoris", function() {deepEqual( Stem("favorisait"), "favoris");});
test("favoriser -> favoris", function() {deepEqual( Stem("favoriser"), "favoris");});
test("favorite -> favorit", function() {deepEqual( Stem("favorite"), "favorit");});
test("fay -> fay", function() {deepEqual( Stem("fay"), "fay");});
test("fayette -> fayet", function() {deepEqual( Stem("fayette"), "fayet");});
test("fé -> fé", function() {deepEqual( Stem("fé"), "fé");});
test("fébrile -> fébril", function() {deepEqual( Stem("fébrile"), "fébril");});
test("fébrilement -> fébril", function() {deepEqual( Stem("fébrilement"), "fébril");});
test("feci -> fec", function() {deepEqual( Stem("feci"), "fec");});
test("fécond -> fécond", function() {deepEqual( Stem("fécond"), "fécond");});
test("féconde -> fécond", function() {deepEqual( Stem("féconde"), "fécond");});
test("feignait -> feign", function() {deepEqual( Stem("feignait"), "feign");});
test("feignant -> feign", function() {deepEqual( Stem("feignant"), "feign");});
test("feignent -> feignent", function() {deepEqual( Stem("feignent"), "feignent");});
test("feignit -> feign", function() {deepEqual( Stem("feignit"), "feign");});
test("feindre -> feindr", function() {deepEqual( Stem("feindre"), "feindr");});
test("feins -> fein", function() {deepEqual( Stem("feins"), "fein");});
test("feint -> feint", function() {deepEqual( Stem("feint"), "feint");});
test("feinte -> feint", function() {deepEqual( Stem("feinte"), "feint");});
test("felice -> felic", function() {deepEqual( Stem("felice"), "felic");});
test("félicita -> félicit", function() {deepEqual( Stem("félicita"), "félicit");});
test("félicitait -> félicit", function() {deepEqual( Stem("félicitait"), "félicit");});
test("félicite -> félicit", function() {deepEqual( Stem("félicite"), "félicit");});
test("félicité -> féliqu", function() {deepEqual( Stem("félicité"), "féliqu");});
test("félicités -> féliqu", function() {deepEqual( Stem("félicités"), "féliqu");});
test("felino -> felino", function() {deepEqual( Stem("felino"), "felino");});
test("félix -> félix", function() {deepEqual( Stem("félix"), "félix");});
test("fellah -> fellah", function() {deepEqual( Stem("fellah"), "fellah");});
test("fellahs -> fellah", function() {deepEqual( Stem("fellahs"), "fellah");});
test("féminin -> féminin", function() {deepEqual( Stem("féminin"), "féminin");});
test("féminine -> féminin", function() {deepEqual( Stem("féminine"), "féminin");});
test("femme -> femm", function() {deepEqual( Stem("femme"), "femm");});
test("femmelette -> femmelet", function() {deepEqual( Stem("femmelette"), "femmelet");});
test("femmes -> femm", function() {deepEqual( Stem("femmes"), "femm");});
test("fendaient -> fend", function() {deepEqual( Stem("fendaient"), "fend");});
test("fendait -> fend", function() {deepEqual( Stem("fendait"), "fend");});
test("fendues -> fendu", function() {deepEqual( Stem("fendues"), "fendu");});
test("fénelon -> fénelon", function() {deepEqual( Stem("fénelon"), "fénelon");});
test("fenestrelles -> fenestrel", function() {deepEqual( Stem("fenestrelles"), "fenestrel");});
test("fenêtre -> fenêtr", function() {deepEqual( Stem("fenêtre"), "fenêtr");});
test("fenêtres -> fenêtr", function() {deepEqual( Stem("fenêtres"), "fenêtr");});
test("fente -> fent", function() {deepEqual( Stem("fente"), "fent");});
test("féodal -> féodal", function() {deepEqual( Stem("féodal"), "féodal");});
test("fer -> fer", function() {deepEqual( Stem("fer"), "fer");});
test("fera -> fer", function() {deepEqual( Stem("fera"), "fer");});
test("ferai -> fer", function() {deepEqual( Stem("ferai"), "fer");});
test("feraient -> fer", function() {deepEqual( Stem("feraient"), "fer");});
test("ferais -> fer", function() {deepEqual( Stem("ferais"), "fer");});
test("ferait -> fer", function() {deepEqual( Stem("ferait"), "fer");});
test("feras -> fer", function() {deepEqual( Stem("feras"), "fer");});
test("feretrius -> feretrius", function() {deepEqual( Stem("feretrius"), "feretrius");});
test("ferez -> fer", function() {deepEqual( Stem("ferez"), "fer");});
test("feriez -> fer", function() {deepEqual( Stem("feriez"), "fer");});
test("feringhea -> feringh", function() {deepEqual( Stem("feringhea"), "feringh");});
test("ferions -> ferion", function() {deepEqual( Stem("ferions"), "ferion");});
test("ferma -> ferm", function() {deepEqual( Stem("ferma"), "ferm");});
test("fermage -> fermag", function() {deepEqual( Stem("fermage"), "fermag");});
test("fermaient -> ferm", function() {deepEqual( Stem("fermaient"), "ferm");});
test("fermait -> ferm", function() {deepEqual( Stem("fermait"), "ferm");});
test("fermant -> ferm", function() {deepEqual( Stem("fermant"), "ferm");});
test("fermât -> ferm", function() {deepEqual( Stem("fermât"), "ferm");});
test("ferme -> ferm", function() {deepEqual( Stem("ferme"), "ferm");});
test("fermé -> ferm", function() {deepEqual( Stem("fermé"), "ferm");});
test("fermée -> ferm", function() {deepEqual( Stem("fermée"), "ferm");});
test("fermées -> ferm", function() {deepEqual( Stem("fermées"), "ferm");});
test("fermement -> ferm", function() {deepEqual( Stem("fermement"), "ferm");});
test("fermentation -> ferment", function() {deepEqual( Stem("fermentation"), "ferment");});
test("fermer -> ferm", function() {deepEqual( Stem("fermer"), "ferm");});
test("fermerait -> ferm", function() {deepEqual( Stem("fermerait"), "ferm");});
test("fermèrent -> ferm", function() {deepEqual( Stem("fermèrent"), "ferm");});
test("fermerons -> ferm", function() {deepEqual( Stem("fermerons"), "ferm");});
test("fermes -> ferm", function() {deepEqual( Stem("fermes"), "ferm");});
test("fermés -> ferm", function() {deepEqual( Stem("fermés"), "ferm");});
test("fermeté -> fermet", function() {deepEqual( Stem("fermeté"), "fermet");});
test("fermeture -> fermetur", function() {deepEqual( Stem("fermeture"), "fermetur");});
test("fermier -> fermi", function() {deepEqual( Stem("fermier"), "fermi");});
test("fermiers -> fermi", function() {deepEqual( Stem("fermiers"), "fermi");});
test("féroce -> féroc", function() {deepEqual( Stem("féroce"), "féroc");});
test("féroces -> féroc", function() {deepEqual( Stem("féroces"), "féroc");});
test("férocité -> féroc", function() {deepEqual( Stem("férocité"), "féroc");});
test("ferons -> feron", function() {deepEqual( Stem("ferons"), "feron");});
test("feront -> feront", function() {deepEqual( Stem("feront"), "feront");});
test("ferrante -> ferr", function() {deepEqual( Stem("ferrante"), "ferr");});
test("ferrare -> ferrar", function() {deepEqual( Stem("ferrare"), "ferrar");});
test("ferrée -> ferr", function() {deepEqual( Stem("ferrée"), "ferr");});
test("ferrures -> ferrur", function() {deepEqual( Stem("ferrures"), "ferrur");});
test("ferry -> ferry", function() {deepEqual( Stem("ferry"), "ferry");});
test("fers -> fer", function() {deepEqual( Stem("fers"), "fer");});
test("fertile -> fertil", function() {deepEqual( Stem("fertile"), "fertil");});
test("fertiles -> fertil", function() {deepEqual( Stem("fertiles"), "fertil");});
test("fervaques -> fervaqu", function() {deepEqual( Stem("fervaques"), "fervaqu");});
test("fervent -> fervent", function() {deepEqual( Stem("fervent"), "fervent");});
test("fervente -> fervent", function() {deepEqual( Stem("fervente"), "fervent");});
test("fervents -> fervent", function() {deepEqual( Stem("fervents"), "fervent");});
test("ferveur -> ferveur", function() {deepEqual( Stem("ferveur"), "ferveur");});
test("fête -> fêt", function() {deepEqual( Stem("fête"), "fêt");});
test("fêté -> fêt", function() {deepEqual( Stem("fêté"), "fêt");});
test("fêtes -> fêt", function() {deepEqual( Stem("fêtes"), "fêt");});
test("feu -> feu", function() {deepEqual( Stem("feu"), "feu");});
test("feuillage -> feuillag", function() {deepEqual( Stem("feuillage"), "feuillag");});
test("feuille -> feuill", function() {deepEqual( Stem("feuille"), "feuill");});
test("feuilles -> feuill", function() {deepEqual( Stem("feuilles"), "feuill");});
test("feuilleta -> feuillet", function() {deepEqual( Stem("feuilleta"), "feuillet");});
test("feuilletait -> feuillet", function() {deepEqual( Stem("feuilletait"), "feuillet");});
test("feuilletant -> feuillet", function() {deepEqual( Stem("feuilletant"), "feuillet");});
test("feuillets -> feuillet", function() {deepEqual( Stem("feuillets"), "feuillet");});
test("feutre -> feutr", function() {deepEqual( Stem("feutre"), "feutr");});
test("feux -> feux", function() {deepEqual( Stem("feux"), "feux");});
test("few -> few", function() {deepEqual( Stem("few"), "few");});
test("fi -> fi", function() {deepEqual( Stem("fi"), "fi");});
test("fiacre -> fiacr", function() {deepEqual( Stem("fiacre"), "fiacr");});
test("ficelé -> ficel", function() {deepEqual( Stem("ficelé"), "ficel");});
test("ficelles -> ficel", function() {deepEqual( Stem("ficelles"), "ficel");});
test("fichée -> fich", function() {deepEqual( Stem("fichée"), "fich");});
test("fiches -> fich", function() {deepEqual( Stem("fiches"), "fich");});
test("fidèle -> fidel", function() {deepEqual( Stem("fidèle"), "fidel");});
test("fidèlement -> fidel", function() {deepEqual( Stem("fidèlement"), "fidel");});
test("fidèles -> fidel", function() {deepEqual( Stem("fidèles"), "fidel");});
test("fidélité -> fidel", function() {deepEqual( Stem("fidélité"), "fidel");});
test("fie -> fi", function() {deepEqual( Stem("fie"), "fi");});
test("fier -> fi", function() {deepEqual( Stem("fier"), "fi");});
test("fierai -> fi", function() {deepEqual( Stem("fierai"), "fi");});
test("fière -> fier", function() {deepEqual( Stem("fière"), "fier");});
test("fièrement -> fier", function() {deepEqual( Stem("fièrement"), "fier");});
test("fières -> fier", function() {deepEqual( Stem("fières"), "fier");});
test("fiers -> fier", function() {deepEqual( Stem("fiers"), "fier");});
test("fierté -> fiert", function() {deepEqual( Stem("fierté"), "fiert");});
test("fièvre -> fievr", function() {deepEqual( Stem("fièvre"), "fievr");});
test("fiévreux -> fiévreux", function() {deepEqual( Stem("fiévreux"), "fiévreux");});
test("figaro -> figaro", function() {deepEqual( Stem("figaro"), "figaro");});
test("figura -> figur", function() {deepEqual( Stem("figura"), "figur");});
test("figuraient -> figur", function() {deepEqual( Stem("figuraient"), "figur");});
test("figurais -> figur", function() {deepEqual( Stem("figurais"), "figur");});
test("figurait -> figur", function() {deepEqual( Stem("figurait"), "figur");});
test("figurât -> figur", function() {deepEqual( Stem("figurât"), "figur");});
test("figure -> figur", function() {deepEqual( Stem("figure"), "figur");});
test("figuré -> figur", function() {deepEqual( Stem("figuré"), "figur");});
test("figurer -> figur", function() {deepEqual( Stem("figurer"), "figur");});
test("figurerai -> figur", function() {deepEqual( Stem("figurerai"), "figur");});
test("figureriez -> figur", function() {deepEqual( Stem("figureriez"), "figur");});
test("figures -> figur", function() {deepEqual( Stem("figures"), "figur");});
test("figurés -> figur", function() {deepEqual( Stem("figurés"), "figur");});
test("figurez -> figur", function() {deepEqual( Stem("figurez"), "figur");});
test("fil -> fil", function() {deepEqual( Stem("fil"), "fil");});
test("fila -> fil", function() {deepEqual( Stem("fila"), "fil");});
test("filait -> fil", function() {deepEqual( Stem("filait"), "fil");});
test("filant -> fil", function() {deepEqual( Stem("filant"), "fil");});
test("filasse -> fil", function() {deepEqual( Stem("filasse"), "fil");});
test("file -> fil", function() {deepEqual( Stem("file"), "fil");});
test("filé -> fil", function() {deepEqual( Stem("filé"), "fil");});
test("filent -> filent", function() {deepEqual( Stem("filent"), "filent");});
test("filer -> fil", function() {deepEqual( Stem("filer"), "fil");});
test("filerai -> fil", function() {deepEqual( Stem("filerai"), "fil");});
test("files -> fil", function() {deepEqual( Stem("files"), "fil");});
test("filet -> filet", function() {deepEqual( Stem("filet"), "filet");});
test("filez -> fil", function() {deepEqual( Stem("filez"), "fil");});
test("fili -> fil", function() {deepEqual( Stem("fili"), "fil");});
test("filiale -> filial", function() {deepEqual( Stem("filiale"), "filial");});
test("filigrane -> filigran", function() {deepEqual( Stem("filigrane"), "filigran");});
test("filins -> filin", function() {deepEqual( Stem("filins"), "filin");});
test("fille -> fill", function() {deepEqual( Stem("fille"), "fill");});
test("filles -> fill", function() {deepEqual( Stem("filles"), "fill");});
test("filons -> filon", function() {deepEqual( Stem("filons"), "filon");});
test("fils -> fil", function() {deepEqual( Stem("fils"), "fil");});
test("filtrait -> filtr", function() {deepEqual( Stem("filtrait"), "filtr");});
test("fin -> fin", function() {deepEqual( Stem("fin"), "fin");});
test("finance -> financ", function() {deepEqual( Stem("finance"), "financ");});
test("finances -> financ", function() {deepEqual( Stem("finances"), "financ");});
test("financier -> financi", function() {deepEqual( Stem("financier"), "financi");});
test("financièrement -> financi", function() {deepEqual( Stem("financièrement"), "financi");});
test("finds -> find", function() {deepEqual( Stem("finds"), "find");});
test("fine -> fin", function() {deepEqual( Stem("fine"), "fin");});
test("fines -> fin", function() {deepEqual( Stem("fines"), "fin");});
test("finesse -> finess", function() {deepEqual( Stem("finesse"), "finess");});
test("finesses -> finess", function() {deepEqual( Stem("finesses"), "finess");});
test("fini -> fin", function() {deepEqual( Stem("fini"), "fin");});
test("finie -> fin", function() {deepEqual( Stem("finie"), "fin");});
test("finies -> fin", function() {deepEqual( Stem("finies"), "fin");});
test("finir -> fin", function() {deepEqual( Stem("finir"), "fin");});
test("finira -> fin", function() {deepEqual( Stem("finira"), "fin");});
test("finiraient -> fin", function() {deepEqual( Stem("finiraient"), "fin");});
test("finirait -> fin", function() {deepEqual( Stem("finirait"), "fin");});
test("finirent -> fin", function() {deepEqual( Stem("finirent"), "fin");});
test("finis -> fin", function() {deepEqual( Stem("finis"), "fin");});
test("finissait -> fin", function() {deepEqual( Stem("finissait"), "fin");});
test("finissant -> fin", function() {deepEqual( Stem("finissant"), "fin");});
test("finisse -> fin", function() {deepEqual( Stem("finisse"), "fin");});
test("finissent -> fin", function() {deepEqual( Stem("finissent"), "fin");});
test("finissons -> fin", function() {deepEqual( Stem("finissons"), "fin");});
test("finit -> fin", function() {deepEqual( Stem("finit"), "fin");});
test("fins -> fin", function() {deepEqual( Stem("fins"), "fin");});
test("fiole -> fiol", function() {deepEqual( Stem("fiole"), "fiol");});
test("fir -> fir", function() {deepEqual( Stem("fir"), "fir");});
test("fire -> fir", function() {deepEqual( Stem("fire"), "fir");});
test("firent -> firent", function() {deepEqual( Stem("firent"), "firent");});
test("fis -> fis", function() {deepEqual( Stem("fis"), "fis");});
test("fiscal -> fiscal", function() {deepEqual( Stem("fiscal"), "fiscal");});
test("fisse -> fiss", function() {deepEqual( Stem("fisse"), "fiss");});
test("fit -> fit", function() {deepEqual( Stem("fit"), "fit");});
test("fît -> fît", function() {deepEqual( Stem("fît"), "fît");});
test("fitz -> fitz", function() {deepEqual( Stem("fitz"), "fitz");});
test("fix -> fix", function() {deepEqual( Stem("fix"), "fix");});
test("fixa -> fix", function() {deepEqual( Stem("fixa"), "fix");});
test("fixaient -> fix", function() {deepEqual( Stem("fixaient"), "fix");});
test("fixait -> fix", function() {deepEqual( Stem("fixait"), "fix");});
test("fixant -> fix", function() {deepEqual( Stem("fixant"), "fix");});
test("fixe -> fix", function() {deepEqual( Stem("fixe"), "fix");});
test("fixé -> fix", function() {deepEqual( Stem("fixé"), "fix");});
test("fixée -> fix", function() {deepEqual( Stem("fixée"), "fix");});
test("fixement -> fix", function() {deepEqual( Stem("fixement"), "fix");});
test("fixer -> fix", function() {deepEqual( Stem("fixer"), "fix");});
test("fixèrent -> fix", function() {deepEqual( Stem("fixèrent"), "fix");});
test("fixés -> fix", function() {deepEqual( Stem("fixés"), "fix");});
test("fixité -> fixit", function() {deepEqual( Stem("fixité"), "fixit");});
test("flacon -> flacon", function() {deepEqual( Stem("flacon"), "flacon");});
test("flagrant -> flagr", function() {deepEqual( Stem("flagrant"), "flagr");});
test("flair -> flair", function() {deepEqual( Stem("flair"), "flair");});
test("flairait -> flair", function() {deepEqual( Stem("flairait"), "flair");});
test("flamand -> flamand", function() {deepEqual( Stem("flamand"), "flamand");});
test("flamande -> flamand", function() {deepEqual( Stem("flamande"), "flamand");});
test("flambé -> flamb", function() {deepEqual( Stem("flambé"), "flamb");});
test("flambeaux -> flambeau", function() {deepEqual( Stem("flambeaux"), "flambeau");});
test("flambés -> flamb", function() {deepEqual( Stem("flambés"), "flamb");});
test("flamboyants -> flamboi", function() {deepEqual( Stem("flamboyants"), "flamboi");});
test("flamme -> flamm", function() {deepEqual( Stem("flamme"), "flamm");});
test("flammes -> flamm", function() {deepEqual( Stem("flammes"), "flamm");});
test("flâna -> flân", function() {deepEqual( Stem("flâna"), "flân");});
test("flanagan -> flanagan", function() {deepEqual( Stem("flanagan"), "flanagan");});
test("flânait -> flân", function() {deepEqual( Stem("flânait"), "flân");});
test("flânant -> flân", function() {deepEqual( Stem("flânant"), "flân");});
test("flanc -> flanc", function() {deepEqual( Stem("flanc"), "flanc");});
test("flancs -> flanc", function() {deepEqual( Stem("flancs"), "flanc");});
test("flatta -> flatt", function() {deepEqual( Stem("flatta"), "flatt");});
test("flattait -> flatt", function() {deepEqual( Stem("flattait"), "flatt");});
test("flatte -> flatt", function() {deepEqual( Stem("flatte"), "flatt");});
test("flatté -> flatt", function() {deepEqual( Stem("flatté"), "flatt");});
test("flattée -> flatt", function() {deepEqual( Stem("flattée"), "flatt");});
test("flatter -> flatt", function() {deepEqual( Stem("flatter"), "flatt");});
test("flatteries -> flatter", function() {deepEqual( Stem("flatteries"), "flatter");});
test("flatteur -> flatteur", function() {deepEqual( Stem("flatteur"), "flatteur");});
test("flatteurs -> flatteur", function() {deepEqual( Stem("flatteurs"), "flatteur");});
test("flatteuse -> flatteux", function() {deepEqual( Stem("flatteuse"), "flatteux");});
test("flatteuses -> flatteux", function() {deepEqual( Stem("flatteuses"), "flatteux");});
test("flèche -> flech", function() {deepEqual( Stem("flèche"), "flech");});
test("flèches -> flech", function() {deepEqual( Stem("flèches"), "flech");});
test("fléchir -> flech", function() {deepEqual( Stem("fléchir"), "flech");});
test("flegmatique -> flegmat", function() {deepEqual( Stem("flegmatique"), "flegmat");});
test("flegme -> flegm", function() {deepEqual( Stem("flegme"), "flegm");});
test("flétri -> fletr", function() {deepEqual( Stem("flétri"), "fletr");});
test("flétrirait -> fletr", function() {deepEqual( Stem("flétrirait"), "fletr");});
test("fleur -> fleur", function() {deepEqual( Stem("fleur"), "fleur");});
test("fleurs -> fleur", function() {deepEqual( Stem("fleurs"), "fleur");});
test("fleury -> fleury", function() {deepEqual( Stem("fleury"), "fleury");});
test("fleuve -> fleuv", function() {deepEqual( Stem("fleuve"), "fleuv");});
test("fleuves -> fleuv", function() {deepEqual( Stem("fleuves"), "fleuv");});
test("flexible -> flexibl", function() {deepEqual( Stem("flexible"), "flexibl");});
test("flexibles -> flexibl", function() {deepEqual( Stem("flexibles"), "flexibl");});
test("flocons -> flocon", function() {deepEqual( Stem("flocons"), "flocon");});
test("florence -> florenc", function() {deepEqual( Stem("florence"), "florenc");});
test("florissante -> flor", function() {deepEqual( Stem("florissante"), "flor");});
test("flot -> flot", function() {deepEqual( Stem("flot"), "flot");});
test("flots -> flot", function() {deepEqual( Stem("flots"), "flot");});
test("flottaient -> flott", function() {deepEqual( Stem("flottaient"), "flott");});
test("flottant -> flott", function() {deepEqual( Stem("flottant"), "flott");});
test("flottantes -> flott", function() {deepEqual( Stem("flottantes"), "flott");});
test("flottants -> flott", function() {deepEqual( Stem("flottants"), "flott");});
test("flotter -> flott", function() {deepEqual( Stem("flotter"), "flott");});
test("flottille -> flottill", function() {deepEqual( Stem("flottille"), "flottill");});
test("flûtes -> flût", function() {deepEqual( Stem("flûtes"), "flût");});
test("fo -> fo", function() {deepEqual( Stem("fo"), "fo");});
test("foc -> foc", function() {deepEqual( Stem("foc"), "foc");});
test("focs -> foc", function() {deepEqual( Stem("focs"), "foc");});
test("fogg -> fogg", function() {deepEqual( Stem("fogg"), "fogg");});
test("foi -> foi", function() {deepEqual( Stem("foi"), "foi");});
test("foin -> foin", function() {deepEqual( Stem("foin"), "foin");});
test("fois -> fois", function() {deepEqual( Stem("fois"), "fois");});
test("foison -> foison", function() {deepEqual( Stem("foison"), "foison");});
test("foisonnait -> foison", function() {deepEqual( Stem("foisonnait"), "foison");});
test("foisonne -> foison", function() {deepEqual( Stem("foisonne"), "foison");});
test("fokelberg -> fokelberg", function() {deepEqual( Stem("fokelberg"), "fokelberg");});
test("fol -> fol", function() {deepEqual( Stem("fol"), "fol");});
test("folie -> fol", function() {deepEqual( Stem("folie"), "fol");});
test("folies -> fol", function() {deepEqual( Stem("folies"), "fol");});
test("folio -> folio", function() {deepEqual( Stem("folio"), "folio");});
test("folke -> folk", function() {deepEqual( Stem("folke"), "folk");});
test("folle -> foll", function() {deepEqual( Stem("folle"), "foll");});
test("follement -> foll", function() {deepEqual( Stem("follement"), "foll");});
test("folles -> foll", function() {deepEqual( Stem("folles"), "foll");});
test("foncé -> fonc", function() {deepEqual( Stem("foncé"), "fonc");});
test("foncièrement -> fonci", function() {deepEqual( Stem("foncièrement"), "fonci");});
test("fonctionnaire -> fonctionnair", function() {deepEqual( Stem("fonctionnaire"), "fonctionnair");});
test("fonctionnaires -> fonctionnair", function() {deepEqual( Stem("fonctionnaires"), "fonctionnair");});
test("fonctionne -> fonction", function() {deepEqual( Stem("fonctionne"), "fonction");});
test("fonctions -> fonction", function() {deepEqual( Stem("fonctions"), "fonction");});
test("fond -> fond", function() {deepEqual( Stem("fond"), "fond");});
test("fonda -> fond", function() {deepEqual( Stem("fonda"), "fond");});
test("fondaient -> fond", function() {deepEqual( Stem("fondaient"), "fond");});
test("fondait -> fond", function() {deepEqual( Stem("fondait"), "fond");});
test("fondant -> fond", function() {deepEqual( Stem("fondant"), "fond");});
test("fondateur -> fondateur", function() {deepEqual( Stem("fondateur"), "fondateur");});
test("fondations -> fondat", function() {deepEqual( Stem("fondations"), "fondat");});
test("fondé -> fond", function() {deepEqual( Stem("fondé"), "fond");});
test("fondée -> fond", function() {deepEqual( Stem("fondée"), "fond");});
test("fondées -> fond", function() {deepEqual( Stem("fondées"), "fond");});
test("fondements -> fond", function() {deepEqual( Stem("fondements"), "fond");});
test("fondent -> fondent", function() {deepEqual( Stem("fondent"), "fondent");});
test("fonder -> fond", function() {deepEqual( Stem("fonder"), "fond");});
test("fonderies -> fonder", function() {deepEqual( Stem("fonderies"), "fonder");});
test("fondés -> fond", function() {deepEqual( Stem("fondés"), "fond");});
test("fondirent -> fond", function() {deepEqual( Stem("fondirent"), "fond");});
test("fondit -> fond", function() {deepEqual( Stem("fondit"), "fond");});
test("fondre -> fondr", function() {deepEqual( Stem("fondre"), "fondr");});
test("fonds -> fond", function() {deepEqual( Stem("fonds"), "fond");});
test("fondu -> fondu", function() {deepEqual( Stem("fondu"), "fondu");});
test("fondue -> fondu", function() {deepEqual( Stem("fondue"), "fondu");});
test("font -> font", function() {deepEqual( Stem("font"), "font");});
test("fontaine -> fontain", function() {deepEqual( Stem("fontaine"), "fontain");});
test("fontaines -> fontain", function() {deepEqual( Stem("fontaines"), "fontain");});
test("fontan -> fontan", function() {deepEqual( Stem("fontan"), "fontan");});
test("fontana -> fontan", function() {deepEqual( Stem("fontana"), "fontan");});
test("fontenoy -> fontenoy", function() {deepEqual( Stem("fontenoy"), "fontenoy");});
test("for -> for", function() {deepEqual( Stem("for"), "for");});
test("força -> forc", function() {deepEqual( Stem("força"), "forc");});
test("forçaient -> forc", function() {deepEqual( Stem("forçaient"), "forc");});
test("forçais -> forc", function() {deepEqual( Stem("forçais"), "forc");});
test("forçait -> forc", function() {deepEqual( Stem("forçait"), "forc");});
test("forçant -> forc", function() {deepEqual( Stem("forçant"), "forc");});
test("force -> forc", function() {deepEqual( Stem("force"), "forc");});
test("forcé -> forc", function() {deepEqual( Stem("forcé"), "forc");});
test("forcée -> forc", function() {deepEqual( Stem("forcée"), "forc");});
test("forcer -> forc", function() {deepEqual( Stem("forcer"), "forc");});
test("forcera -> forc", function() {deepEqual( Stem("forcera"), "forc");});
test("forcerai -> forc", function() {deepEqual( Stem("forcerai"), "forc");});
test("forcèrent -> forc", function() {deepEqual( Stem("forcèrent"), "forc");});
test("forces -> forc", function() {deepEqual( Stem("forces"), "forc");});
test("forcés -> forc", function() {deepEqual( Stem("forcés"), "forc");});
test("forcez -> forc", function() {deepEqual( Stem("forcez"), "forc");});
test("forêt -> forêt", function() {deepEqual( Stem("forêt"), "forêt");});
test("foretells -> foretel", function() {deepEqual( Stem("foretells"), "foretel");});
test("forets -> foret", function() {deepEqual( Stem("forets"), "foret");});
test("forêts -> forêt", function() {deepEqual( Stem("forêts"), "forêt");});
test("forfaitz -> forfaitz", function() {deepEqual( Stem("forfaitz"), "forfaitz");});
test("forgé -> forg", function() {deepEqual( Stem("forgé"), "forg");});
test("forma -> form", function() {deepEqual( Stem("forma"), "form");});
test("formaient -> form", function() {deepEqual( Stem("formaient"), "form");});
test("formait -> form", function() {deepEqual( Stem("formait"), "form");});
test("formalisait -> formalis", function() {deepEqual( Stem("formalisait"), "formalis");});
test("formaliste -> formal", function() {deepEqual( Stem("formaliste"), "formal");});
test("formalistes -> formal", function() {deepEqual( Stem("formalistes"), "formal");});
test("formalité -> formal", function() {deepEqual( Stem("formalité"), "formal");});
test("formalités -> formal", function() {deepEqual( Stem("formalités"), "formal");});
test("formant -> form", function() {deepEqual( Stem("formant"), "form");});
test("formation -> format", function() {deepEqual( Stem("formation"), "format");});
test("forme -> form", function() {deepEqual( Stem("forme"), "form");});
test("formé -> form", function() {deepEqual( Stem("formé"), "form");});
test("formée -> form", function() {deepEqual( Stem("formée"), "form");});
test("formées -> form", function() {deepEqual( Stem("formées"), "form");});
test("formel -> formel", function() {deepEqual( Stem("formel"), "formel");});
test("formellement -> formel", function() {deepEqual( Stem("formellement"), "formel");});
test("forment -> forment", function() {deepEqual( Stem("forment"), "forment");});
test("former -> form", function() {deepEqual( Stem("former"), "form");});
test("formera -> form", function() {deepEqual( Stem("formera"), "form");});
test("formèrent -> form", function() {deepEqual( Stem("formèrent"), "form");});
test("formes -> form", function() {deepEqual( Stem("formes"), "form");});
test("formés -> form", function() {deepEqual( Stem("formés"), "form");});
test("formez -> form", function() {deepEqual( Stem("formez"), "form");});
test("formidable -> formid", function() {deepEqual( Stem("formidable"), "formid");});
test("formidables -> formid", function() {deepEqual( Stem("formidables"), "formid");});
test("formose -> formos", function() {deepEqual( Stem("formose"), "formos");});
test("formula -> formul", function() {deepEqual( Stem("formula"), "formul");});
test("formule -> formul", function() {deepEqual( Stem("formule"), "formul");});
test("formulée -> formul", function() {deepEqual( Stem("formulée"), "formul");});
test("formuler -> formul", function() {deepEqual( Stem("formuler"), "formul");});
test("formules -> formul", function() {deepEqual( Stem("formules"), "formul");});
test("forster -> forst", function() {deepEqual( Stem("forster"), "forst");});
test("fort -> fort", function() {deepEqual( Stem("fort"), "fort");});
test("forte -> fort", function() {deepEqual( Stem("forte"), "fort");});
test("fortement -> fort", function() {deepEqual( Stem("fortement"), "fort");});
test("forteresse -> forteress", function() {deepEqual( Stem("forteresse"), "forteress");});
test("fortes -> fort", function() {deepEqual( Stem("fortes"), "fort");});
test("forth -> forth", function() {deepEqual( Stem("forth"), "forth");});
test("fortifications -> fortif", function() {deepEqual( Stem("fortifications"), "fortif");});
test("fortifié -> fortifi", function() {deepEqual( Stem("fortifié"), "fortifi");});
test("fortifiée -> fortifi", function() {deepEqual( Stem("fortifiée"), "fortifi");});
test("fortifiées -> fortifi", function() {deepEqual( Stem("fortifiées"), "fortifi");});
test("fortifier -> fortifi", function() {deepEqual( Stem("fortifier"), "fortifi");});
test("fortifions -> fortif", function() {deepEqual( Stem("fortifions"), "fortif");});
test("forts -> fort", function() {deepEqual( Stem("forts"), "fort");});
test("fortune -> fortun", function() {deepEqual( Stem("fortune"), "fortun");});
test("fortuné -> fortun", function() {deepEqual( Stem("fortuné"), "fortun");});
test("fortunées -> fortun", function() {deepEqual( Stem("fortunées"), "fortun");});
test("fortunes -> fortun", function() {deepEqual( Stem("fortunes"), "fortun");});
test("fortunés -> fortun", function() {deepEqual( Stem("fortunés"), "fortun");});
test("foscarini -> foscarin", function() {deepEqual( Stem("foscarini"), "foscarin");});
test("fosse -> foss", function() {deepEqual( Stem("fosse"), "foss");});
test("fossé -> foss", function() {deepEqual( Stem("fossé"), "foss");});
test("fosses -> foss", function() {deepEqual( Stem("fosses"), "foss");});
test("fossés -> foss", function() {deepEqual( Stem("fossés"), "foss");});
test("fou -> fou", function() {deepEqual( Stem("fou"), "fou");});
test("foudre -> foudr", function() {deepEqual( Stem("foudre"), "foudr");});
test("foudroyer -> foudroi", function() {deepEqual( Stem("foudroyer"), "foudroi");});
test("fouet -> fouet", function() {deepEqual( Stem("fouet"), "fouet");});
test("fouettait -> fouet", function() {deepEqual( Stem("fouettait"), "fouet");});
test("fouetté -> fouet", function() {deepEqual( Stem("fouetté"), "fouet");});
test("fouetter -> fouet", function() {deepEqual( Stem("fouetter"), "fouet");});
test("fouetterait -> fouet", function() {deepEqual( Stem("fouetterait"), "fouet");});
test("fougères -> fouger", function() {deepEqual( Stem("fougères"), "fouger");});
test("fougueuse -> fougueux", function() {deepEqual( Stem("fougueuse"), "fougueux");});
test("fougueux -> fougueux", function() {deepEqual( Stem("fougueux"), "fougueux");});
test("fouillait -> fouill", function() {deepEqual( Stem("fouillait"), "fouill");});
test("fouillât -> fouill", function() {deepEqual( Stem("fouillât"), "fouill");});
test("fouille -> fouill", function() {deepEqual( Stem("fouille"), "fouill");});
test("fouillé -> fouill", function() {deepEqual( Stem("fouillé"), "fouill");});
test("fouiller -> fouill", function() {deepEqual( Stem("fouiller"), "fouill");});
test("fouilles -> fouill", function() {deepEqual( Stem("fouilles"), "fouill");});
test("fouillés -> fouill", function() {deepEqual( Stem("fouillés"), "fouill");});
test("fouillez -> fouill", function() {deepEqual( Stem("fouillez"), "fouill");});
test("foule -> foul", function() {deepEqual( Stem("foule"), "foul");});
test("foulé -> foul", function() {deepEqual( Stem("foulé"), "foul");});
test("foules -> foul", function() {deepEqual( Stem("foules"), "foul");});
test("fouqué -> fouqu", function() {deepEqual( Stem("fouqué"), "fouqu");});
test("fourbes -> fourb", function() {deepEqual( Stem("fourbes"), "fourb");});
test("fourgons -> fourgon", function() {deepEqual( Stem("fourgons"), "fourgon");});
test("fourmilière -> fourmili", function() {deepEqual( Stem("fourmilière"), "fourmili");});
test("fourmillait -> fourmill", function() {deepEqual( Stem("fourmillait"), "fourmill");});
test("fourmillement -> fourmill", function() {deepEqual( Stem("fourmillement"), "fourmill");});
test("fourmis -> fourm", function() {deepEqual( Stem("fourmis"), "fourm");});
test("fourmont -> fourmont", function() {deepEqual( Stem("fourmont"), "fourmont");});
test("fourneaux -> fourneau", function() {deepEqual( Stem("fourneaux"), "fourneau");});
test("fourni -> fourn", function() {deepEqual( Stem("fourni"), "fourn");});
test("fournie -> fourn", function() {deepEqual( Stem("fournie"), "fourn");});
test("fournir -> fourn", function() {deepEqual( Stem("fournir"), "fourn");});
test("fourniront -> fourn", function() {deepEqual( Stem("fourniront"), "fourn");});
test("fournis -> fourn", function() {deepEqual( Stem("fournis"), "fourn");});
test("fournissaient -> fourn", function() {deepEqual( Stem("fournissaient"), "fourn");});
test("fournissait -> fourn", function() {deepEqual( Stem("fournissait"), "fourn");});
test("fournissant -> fourn", function() {deepEqual( Stem("fournissant"), "fourn");});
test("fournisseurs -> fournisseur", function() {deepEqual( Stem("fournisseurs"), "fournisseur");});
test("fournit -> fourn", function() {deepEqual( Stem("fournit"), "fourn");});
test("fourniture -> fournitur", function() {deepEqual( Stem("fourniture"), "fournitur");});
test("fournitures -> fournitur", function() {deepEqual( Stem("fournitures"), "fournitur");});
test("fourraient -> fourr", function() {deepEqual( Stem("fourraient"), "fourr");});
test("fourré -> fourr", function() {deepEqual( Stem("fourré"), "fourr");});
test("fourreau -> fourreau", function() {deepEqual( Stem("fourreau"), "fourreau");});
test("fourrer -> fourr", function() {deepEqual( Stem("fourrer"), "fourr");});
test("fourrier -> fourri", function() {deepEqual( Stem("fourrier"), "fourri");});
test("fourriers -> fourri", function() {deepEqual( Stem("fourriers"), "fourri");});
test("fourrures -> fourrur", function() {deepEqual( Stem("fourrures"), "fourrur");});
test("fous -> fous", function() {deepEqual( Stem("fous"), "fous");});
test("fox -> fox", function() {deepEqual( Stem("fox"), "fox");});
test("foyer -> foi", function() {deepEqual( Stem("foyer"), "foi");});
test("frac -> frac", function() {deepEqual( Stem("frac"), "frac");});
test("fracas -> frac", function() {deepEqual( Stem("fracas"), "frac");});
test("fracassée -> fracass", function() {deepEqual( Stem("fracassée"), "fracass");});
test("fracassés -> fracass", function() {deepEqual( Stem("fracassés"), "fracass");});
test("fragile -> fragil", function() {deepEqual( Stem("fragile"), "fragil");});
test("fragments -> fragment", function() {deepEqual( Stem("fragments"), "fragment");});
test("fraîche -> fraîch", function() {deepEqual( Stem("fraîche"), "fraîch");});
test("fraîches -> fraîch", function() {deepEqual( Stem("fraîches"), "fraîch");});
test("fraîcheur -> fraîcheur", function() {deepEqual( Stem("fraîcheur"), "fraîcheur");});
test("fraîchir -> fraîch", function() {deepEqual( Stem("fraîchir"), "fraîch");});
test("fraîchissait -> fraîch", function() {deepEqual( Stem("fraîchissait"), "fraîch");});
test("fraîchit -> fraîch", function() {deepEqual( Stem("fraîchit"), "fraîch");});
test("frailty -> frailty", function() {deepEqual( Stem("frailty"), "frailty");});
test("frais -> frais", function() {deepEqual( Stem("frais"), "frais");});
test("franc -> franc", function() {deepEqual( Stem("franc"), "franc");});
test("français -> franc", function() {deepEqual( Stem("français"), "franc");});
test("française -> français", function() {deepEqual( Stem("française"), "français");});
test("françaises -> français", function() {deepEqual( Stem("françaises"), "français");});
test("france -> franc", function() {deepEqual( Stem("france"), "franc");});
test("francese -> frances", function() {deepEqual( Stem("francese"), "frances");});
test("francfort -> francfort", function() {deepEqual( Stem("francfort"), "francfort");});
test("franche -> franch", function() {deepEqual( Stem("franche"), "franch");});
test("franchement -> franch", function() {deepEqual( Stem("franchement"), "franch");});
test("franchi -> franch", function() {deepEqual( Stem("franchi"), "franch");});
test("franchie -> franch", function() {deepEqual( Stem("franchie"), "franch");});
test("franchies -> franch", function() {deepEqual( Stem("franchies"), "franch");});
test("franchir -> franch", function() {deepEqual( Stem("franchir"), "franch");});
test("franchis -> franch", function() {deepEqual( Stem("franchis"), "franch");});
test("franchise -> franchis", function() {deepEqual( Stem("franchise"), "franchis");});
test("franchissait -> franch", function() {deepEqual( Stem("franchissait"), "franch");});
test("franchissant -> franch", function() {deepEqual( Stem("franchissant"), "franch");});
test("franchissent -> franch", function() {deepEqual( Stem("franchissent"), "franch");});
test("franchit -> franch", function() {deepEqual( Stem("franchit"), "franch");});
test("francis -> franc", function() {deepEqual( Stem("francis"), "franc");});
test("francisco -> francisco", function() {deepEqual( Stem("francisco"), "francisco");});
test("françois -> françois", function() {deepEqual( Stem("françois"), "françois");});
test("francs -> franc", function() {deepEqual( Stem("francs"), "franc");});
test("frappa -> frapp", function() {deepEqual( Stem("frappa"), "frapp");});
test("frappaient -> frapp", function() {deepEqual( Stem("frappaient"), "frapp");});
test("frappait -> frapp", function() {deepEqual( Stem("frappait"), "frapp");});
test("frappant -> frapp", function() {deepEqual( Stem("frappant"), "frapp");});
test("frappante -> frapp", function() {deepEqual( Stem("frappante"), "frapp");});
test("frappantes -> frapp", function() {deepEqual( Stem("frappantes"), "frapp");});
test("frappât -> frapp", function() {deepEqual( Stem("frappât"), "frapp");});
test("frappe -> frapp", function() {deepEqual( Stem("frappe"), "frapp");});
test("frappé -> frapp", function() {deepEqual( Stem("frappé"), "frapp");});
test("frappée -> frapp", function() {deepEqual( Stem("frappée"), "frapp");});
test("frappées -> frapp", function() {deepEqual( Stem("frappées"), "frapp");});
test("frappent -> frappent", function() {deepEqual( Stem("frappent"), "frappent");});
test("frapper -> frapp", function() {deepEqual( Stem("frapper"), "frapp");});
test("frapperai -> frapp", function() {deepEqual( Stem("frapperai"), "frapp");});
test("frappés -> frapp", function() {deepEqual( Stem("frappés"), "frapp");});
test("fraternelle -> fraternel", function() {deepEqual( Stem("fraternelle"), "fraternel");});
test("fraternisaient -> fraternis", function() {deepEqual( Stem("fraternisaient"), "fraternis");});
test("fraude -> fraud", function() {deepEqual( Stem("fraude"), "fraud");});
test("frayée -> frai", function() {deepEqual( Stem("frayée"), "frai");});
test("frayeur -> frayeur", function() {deepEqual( Stem("frayeur"), "frayeur");});
test("frédéric -> frédéric", function() {deepEqual( Stem("frédéric"), "frédéric");});
test("freins -> frein", function() {deepEqual( Stem("freins"), "frein");});
test("frêle -> frêl", function() {deepEqual( Stem("frêle"), "frêl");});
test("freluquets -> freluquet", function() {deepEqual( Stem("freluquets"), "freluquet");});
test("frémi -> frem", function() {deepEqual( Stem("frémi"), "frem");});
test("frémir -> frem", function() {deepEqual( Stem("frémir"), "frem");});
test("frémis -> frem", function() {deepEqual( Stem("frémis"), "frem");});
test("frémit -> frem", function() {deepEqual( Stem("frémit"), "frem");});
test("fremont -> fremont", function() {deepEqual( Stem("fremont"), "fremont");});
test("frênes -> frên", function() {deepEqual( Stem("frênes"), "frên");});
test("frénétique -> frénet", function() {deepEqual( Stem("frénétique"), "frénet");});
test("fréquemment -> fréquent", function() {deepEqual( Stem("fréquemment"), "fréquent");});
test("fréquence -> fréquenc", function() {deepEqual( Stem("fréquence"), "fréquenc");});
test("fréquent -> fréquent", function() {deepEqual( Stem("fréquent"), "fréquent");});
test("fréquente -> fréquent", function() {deepEqual( Stem("fréquente"), "fréquent");});
test("fréquenté -> fréquent", function() {deepEqual( Stem("fréquenté"), "fréquent");});
test("fréquentée -> fréquent", function() {deepEqual( Stem("fréquentée"), "fréquent");});
test("fréquentées -> fréquent", function() {deepEqual( Stem("fréquentées"), "fréquent");});
test("fréquenter -> fréquent", function() {deepEqual( Stem("fréquenter"), "fréquent");});
test("fréquentes -> fréquent", function() {deepEqual( Stem("fréquentes"), "fréquent");});
test("fréquents -> fréquent", function() {deepEqual( Stem("fréquents"), "fréquent");});
test("frère -> frer", function() {deepEqual( Stem("frère"), "frer");});
test("frères -> frer", function() {deepEqual( Stem("frères"), "frer");});
test("fresque -> fresqu", function() {deepEqual( Stem("fresque"), "fresqu");});
test("fret -> fret", function() {deepEqual( Stem("fret"), "fret");});
test("fréter -> fret", function() {deepEqual( Stem("fréter"), "fret");});
test("frilair -> frilair", function() {deepEqual( Stem("frilair"), "frilair");});
test("fringante -> fring", function() {deepEqual( Stem("fringante"), "fring");});
test("friperie -> friper", function() {deepEqual( Stem("friperie"), "friper");});
test("friperies -> friper", function() {deepEqual( Stem("friperies"), "friper");});
test("fripon -> fripon", function() {deepEqual( Stem("fripon"), "fripon");});
test("friponner -> fripon", function() {deepEqual( Stem("friponner"), "fripon");});
test("friponnerie -> friponner", function() {deepEqual( Stem("friponnerie"), "friponner");});
test("friponneries -> friponner", function() {deepEqual( Stem("friponneries"), "friponner");});
test("fripons -> fripon", function() {deepEqual( Stem("fripons"), "fripon");});
test("frisaient -> fris", function() {deepEqual( Stem("frisaient"), "fris");});
test("frisait -> fris", function() {deepEqual( Stem("frisait"), "fris");});
test("friser -> fris", function() {deepEqual( Stem("friser"), "fris");});
test("frises -> fris", function() {deepEqual( Stem("frises"), "fris");});
test("frisés -> fris", function() {deepEqual( Stem("frisés"), "fris");});
test("frisson -> frisson", function() {deepEqual( Stem("frisson"), "frisson");});
test("frivole -> frivol", function() {deepEqual( Stem("frivole"), "frivol");});
test("froc -> froc", function() {deepEqual( Stem("froc"), "froc");});
test("froid -> froid", function() {deepEqual( Stem("froid"), "froid");});
test("froide -> froid", function() {deepEqual( Stem("froide"), "froid");});
test("froidement -> froid", function() {deepEqual( Stem("froidement"), "froid");});
test("froides -> froid", function() {deepEqual( Stem("froides"), "froid");});
test("froideur -> froideur", function() {deepEqual( Stem("froideur"), "froideur");});
test("froids -> froid", function() {deepEqual( Stem("froids"), "froid");});
test("froissa -> froiss", function() {deepEqual( Stem("froissa"), "froiss");});
test("froissant -> froiss", function() {deepEqual( Stem("froissant"), "froiss");});
test("froissants -> froiss", function() {deepEqual( Stem("froissants"), "froiss");});
test("froissé -> froiss", function() {deepEqual( Stem("froissé"), "froiss");});
test("from -> from", function() {deepEqual( Stem("from"), "from");});
test("fromage -> fromag", function() {deepEqual( Stem("fromage"), "fromag");});
test("froment -> froment", function() {deepEqual( Stem("froment"), "froment");});
test("fronçait -> fronc", function() {deepEqual( Stem("fronçait"), "fronc");});
test("fronçant -> fronc", function() {deepEqual( Stem("fronçant"), "fronc");});
test("froncé -> fronc", function() {deepEqual( Stem("froncé"), "fronc");});
test("froncement -> fronc", function() {deepEqual( Stem("froncement"), "fronc");});
test("froncer -> fronc", function() {deepEqual( Stem("froncer"), "fronc");});
test("froncera -> fronc", function() {deepEqual( Stem("froncera"), "fronc");});
test("fronde -> frond", function() {deepEqual( Stem("fronde"), "frond");});
test("frondeur -> frondeur", function() {deepEqual( Stem("frondeur"), "frondeur");});
test("front -> front", function() {deepEqual( Stem("front"), "front");});
test("frontière -> fronti", function() {deepEqual( Stem("frontière"), "fronti");});
test("frontières -> fronti", function() {deepEqual( Stem("frontières"), "fronti");});
test("frontins -> frontin", function() {deepEqual( Stem("frontins"), "frontin");});
test("fronts -> front", function() {deepEqual( Stem("fronts"), "front");});
test("frotta -> frott", function() {deepEqual( Stem("frotta"), "frott");});
test("frottait -> frott", function() {deepEqual( Stem("frottait"), "frott");});
test("frottant -> frott", function() {deepEqual( Stem("frottant"), "frott");});
test("frotté -> frott", function() {deepEqual( Stem("frotté"), "frott");});
test("frottements -> frott", function() {deepEqual( Stem("frottements"), "frott");});
test("fruit -> fruit", function() {deepEqual( Stem("fruit"), "fruit");});
test("fruitières -> fruiti", function() {deepEqual( Stem("fruitières"), "fruiti");});
test("fruits -> fruit", function() {deepEqual( Stem("fruits"), "fruit");});
test("fugitif -> fugit", function() {deepEqual( Stem("fugitif"), "fugit");});
test("fugitifs -> fugit", function() {deepEqual( Stem("fugitifs"), "fugit");});
test("fui -> fui", function() {deepEqual( Stem("fui"), "fui");});
test("fuient -> fuient", function() {deepEqual( Stem("fuient"), "fuient");});
test("fuir -> fuir", function() {deepEqual( Stem("fuir"), "fuir");});
test("fuirais -> fuir", function() {deepEqual( Stem("fuirais"), "fuir");});
test("fuis -> fuis", function() {deepEqual( Stem("fuis"), "fuis");});
test("fuite -> fuit", function() {deepEqual( Stem("fuite"), "fuit");});
test("fulgence -> fulgenc", function() {deepEqual( Stem("fulgence"), "fulgenc");});
test("fuligineuses -> fuligin", function() {deepEqual( Stem("fuligineuses"), "fuligin");});
test("fulminante -> fulmin", function() {deepEqual( Stem("fulminante"), "fulmin");});
test("fumaient -> fum", function() {deepEqual( Stem("fumaient"), "fum");});
test("fumant -> fum", function() {deepEqual( Stem("fumant"), "fum");});
test("fume -> fum", function() {deepEqual( Stem("fume"), "fum");});
test("fumée -> fum", function() {deepEqual( Stem("fumée"), "fum");});
test("fumées -> fum", function() {deepEqual( Stem("fumées"), "fum");});
test("fumer -> fum", function() {deepEqual( Stem("fumer"), "fum");});
test("fumeur -> fumeur", function() {deepEqual( Stem("fumeur"), "fumeur");});
test("fumeurs -> fumeur", function() {deepEqual( Stem("fumeurs"), "fumeur");});
test("funèbre -> funebr", function() {deepEqual( Stem("funèbre"), "funebr");});
test("funèbres -> funebr", function() {deepEqual( Stem("funèbres"), "funebr");});
test("funeste -> funest", function() {deepEqual( Stem("funeste"), "funest");});
test("funestes -> funest", function() {deepEqual( Stem("funestes"), "funest");});
test("fur -> fur", function() {deepEqual( Stem("fur"), "fur");});
test("furent -> furent", function() {deepEqual( Stem("furent"), "furent");});
test("fureur -> fureur", function() {deepEqual( Stem("fureur"), "fureur");});
test("furia -> furi", function() {deepEqual( Stem("furia"), "furi");});
test("furibond -> furibond", function() {deepEqual( Stem("furibond"), "furibond");});
test("furibonde -> furibond", function() {deepEqual( Stem("furibonde"), "furibond");});
test("furibondes -> furibond", function() {deepEqual( Stem("furibondes"), "furibond");});
test("furibonds -> furibond", function() {deepEqual( Stem("furibonds"), "furibond");});
test("furieuse -> furieux", function() {deepEqual( Stem("furieuse"), "furieux");});
test("furieusement -> furieux", function() {deepEqual( Stem("furieusement"), "furieux");});
test("furieuses -> furieux", function() {deepEqual( Stem("furieuses"), "furieux");});
test("furieux -> furieux", function() {deepEqual( Stem("furieux"), "furieux");});
test("furtivement -> furtiv", function() {deepEqual( Stem("furtivement"), "furtiv");});
test("fus -> fus", function() {deepEqual( Stem("fus"), "fus");});
test("fusait -> fus", function() {deepEqual( Stem("fusait"), "fus");});
test("fuseau -> fuseau", function() {deepEqual( Stem("fuseau"), "fuseau");});
test("fuseaux -> fuseau", function() {deepEqual( Stem("fuseaux"), "fuseau");});
test("fusil -> fusil", function() {deepEqual( Stem("fusil"), "fusil");});
test("fusiliers -> fusili", function() {deepEqual( Stem("fusiliers"), "fusili");});
test("fusillé -> fusill", function() {deepEqual( Stem("fusillé"), "fusill");});
test("fusiller -> fusill", function() {deepEqual( Stem("fusiller"), "fusill");});
test("fusillés -> fusill", function() {deepEqual( Stem("fusillés"), "fusill");});
test("fusils -> fusil", function() {deepEqual( Stem("fusils"), "fusil");});
test("fusse -> fuss", function() {deepEqual( Stem("fusse"), "fuss");});
test("fussent -> fussent", function() {deepEqual( Stem("fussent"), "fussent");});
test("fussiez -> fuss", function() {deepEqual( Stem("fussiez"), "fuss");});
test("fut -> fut", function() {deepEqual( Stem("fut"), "fut");});
test("fût -> fût", function() {deepEqual( Stem("fût"), "fût");});
test("futé -> fut", function() {deepEqual( Stem("futé"), "fut");});
test("futilité -> futil", function() {deepEqual( Stem("futilité"), "futil");});
test("futilités -> futil", function() {deepEqual( Stem("futilités"), "futil");});
test("futur -> futur", function() {deepEqual( Stem("futur"), "futur");});
test("futura -> futur", function() {deepEqual( Stem("futura"), "futur");});
test("future -> futur", function() {deepEqual( Stem("future"), "futur");});
test("futures -> futur", function() {deepEqual( Stem("futures"), "futur");});
test("futurs -> futur", function() {deepEqual( Stem("futurs"), "futur");});
test("fuyaient -> fui", function() {deepEqual( Stem("fuyaient"), "fui");});
test("fuyait -> fui", function() {deepEqual( Stem("fuyait"), "fui");});
test("fuyant -> fui", function() {deepEqual( Stem("fuyant"), "fui");});
test("fuyards -> fuyard", function() {deepEqual( Stem("fuyards"), "fuyard");});
test("fuyez -> fui", function() {deepEqual( Stem("fuyez"), "fui");});
test("g -> g", function() {deepEqual( Stem("g"), "g");});
test("gabarit -> gabar", function() {deepEqual( Stem("gabarit"), "gabar");});
test("gabrielle -> gabriel", function() {deepEqual( Stem("gabrielle"), "gabriel");});
test("gâchis -> gâch", function() {deepEqual( Stem("gâchis"), "gâch");});
test("gage -> gag", function() {deepEqual( Stem("gage"), "gag");});
test("gages -> gag", function() {deepEqual( Stem("gages"), "gag");});
test("gageure -> gageur", function() {deepEqual( Stem("gageure"), "gageur");});
test("gagna -> gagn", function() {deepEqual( Stem("gagna"), "gagn");});
test("gagnaient -> gagn", function() {deepEqual( Stem("gagnaient"), "gagn");});
test("gagnais -> gagn", function() {deepEqual( Stem("gagnais"), "gagn");});
test("gagnait -> gagn", function() {deepEqual( Stem("gagnait"), "gagn");});
test("gagnant -> gagn", function() {deepEqual( Stem("gagnant"), "gagn");});
test("gagne -> gagn", function() {deepEqual( Stem("gagne"), "gagn");});
test("gagné -> gagn", function() {deepEqual( Stem("gagné"), "gagn");});
test("gagnée -> gagn", function() {deepEqual( Stem("gagnée"), "gagn");});
test("gagnées -> gagn", function() {deepEqual( Stem("gagnées"), "gagn");});
test("gagnent -> gagnent", function() {deepEqual( Stem("gagnent"), "gagnent");});
test("gagner -> gagn", function() {deepEqual( Stem("gagner"), "gagn");});
test("gagnerai -> gagn", function() {deepEqual( Stem("gagnerai"), "gagn");});
test("gagneras -> gagn", function() {deepEqual( Stem("gagneras"), "gagn");});
test("gagnèrent -> gagn", function() {deepEqual( Stem("gagnèrent"), "gagn");});
test("gagnés -> gagn", function() {deepEqual( Stem("gagnés"), "gagn");});
test("gagnez -> gagn", function() {deepEqual( Stem("gagnez"), "gagn");});
test("gagnons -> gagnon", function() {deepEqual( Stem("gagnons"), "gagnon");});
test("gai -> gai", function() {deepEqual( Stem("gai"), "gai");});
test("gaie -> gai", function() {deepEqual( Stem("gaie"), "gai");});
test("gaiement -> gai", function() {deepEqual( Stem("gaiement"), "gai");});
test("gaies -> gai", function() {deepEqual( Stem("gaies"), "gai");});
test("gaieté -> gaiet", function() {deepEqual( Stem("gaieté"), "gaiet");});
test("gaillard -> gaillard", function() {deepEqual( Stem("gaillard"), "gaillard");});
test("gaillardement -> gaillard", function() {deepEqual( Stem("gaillardement"), "gaillard");});
test("gaîment -> gaî", function() {deepEqual( Stem("gaîment"), "gaî");});
test("gain -> gain", function() {deepEqual( Stem("gain"), "gain");});
test("gains -> gain", function() {deepEqual( Stem("gains"), "gain");});
test("gais -> gais", function() {deepEqual( Stem("gais"), "gais");});
test("gaîté -> gaît", function() {deepEqual( Stem("gaîté"), "gaît");});
test("gala -> gal", function() {deepEqual( Stem("gala"), "gal");});
test("galamment -> gal", function() {deepEqual( Stem("galamment"), "gal");});
test("galant -> gal", function() {deepEqual( Stem("galant"), "gal");});
test("galante -> gal", function() {deepEqual( Stem("galante"), "gal");});
test("galanterie -> galanter", function() {deepEqual( Stem("galanterie"), "galanter");});
test("galantes -> gal", function() {deepEqual( Stem("galantes"), "gal");});
test("galéas -> galé", function() {deepEqual( Stem("galéas"), "galé");});
test("galère -> galer", function() {deepEqual( Stem("galère"), "galer");});
test("galères -> galer", function() {deepEqual( Stem("galères"), "galer");});
test("galerie -> galer", function() {deepEqual( Stem("galerie"), "galer");});
test("galériens -> galérien", function() {deepEqual( Stem("galériens"), "galérien");});
test("galeries -> galer", function() {deepEqual( Stem("galeries"), "galer");});
test("galeuse -> galeux", function() {deepEqual( Stem("galeuse"), "galeux");});
test("galeux -> galeux", function() {deepEqual( Stem("galeux"), "galeux");});
test("gallicane -> gallican", function() {deepEqual( Stem("gallicane"), "gallican");});
test("galon -> galon", function() {deepEqual( Stem("galon"), "galon");});
test("galonnées -> galon", function() {deepEqual( Stem("galonnées"), "galon");});
test("galons -> galon", function() {deepEqual( Stem("galons"), "galon");});
test("galop -> galop", function() {deepEqual( Stem("galop"), "galop");});
test("galopa -> galop", function() {deepEqual( Stem("galopa"), "galop");});
test("galopaient -> galop", function() {deepEqual( Stem("galopaient"), "galop");});
test("galopait -> galop", function() {deepEqual( Stem("galopait"), "galop");});
test("galopant -> galop", function() {deepEqual( Stem("galopant"), "galop");});
test("galope -> galop", function() {deepEqual( Stem("galope"), "galop");});
test("galoper -> galop", function() {deepEqual( Stem("galoper"), "galop");});
test("galopera -> galop", function() {deepEqual( Stem("galopera"), "galop");});
test("galoperai -> galop", function() {deepEqual( Stem("galoperai"), "galop");});
test("galopez -> galop", function() {deepEqual( Stem("galopez"), "galop");});
test("galvanisées -> galvanis", function() {deepEqual( Stem("galvanisées"), "galvanis");});
test("gambadant -> gambad", function() {deepEqual( Stem("gambadant"), "gambad");});
test("gamins -> gamin", function() {deepEqual( Stem("gamins"), "gamin");});
test("gamme -> gamm", function() {deepEqual( Stem("gamme"), "gamm");});
test("ganaches -> ganach", function() {deepEqual( Stem("ganaches"), "ganach");});
test("gange -> gang", function() {deepEqual( Stem("gange"), "gang");});
test("gangrène -> gangren", function() {deepEqual( Stem("gangrène"), "gangren");});
test("gangrenée -> gangren", function() {deepEqual( Stem("gangrenée"), "gangren");});
test("gangrenées -> gangren", function() {deepEqual( Stem("gangrenées"), "gangren");});
test("gant -> gant", function() {deepEqual( Stem("gant"), "gant");});
test("gants -> gant", function() {deepEqual( Stem("gants"), "gant");});
test("garantie -> garant", function() {deepEqual( Stem("garantie"), "garant");});
test("garanties -> garant", function() {deepEqual( Stem("garanties"), "garant");});
test("garantissait -> garant", function() {deepEqual( Stem("garantissait"), "garant");});
test("garçon -> garçon", function() {deepEqual( Stem("garçon"), "garçon");});
test("garçons -> garçon", function() {deepEqual( Stem("garçons"), "garçon");});
test("garda -> gard", function() {deepEqual( Stem("garda"), "gard");});
test("gardai -> gard", function() {deepEqual( Stem("gardai"), "gard");});
test("gardaient -> gard", function() {deepEqual( Stem("gardaient"), "gard");});
test("gardait -> gard", function() {deepEqual( Stem("gardait"), "gard");});
test("gardant -> gard", function() {deepEqual( Stem("gardant"), "gard");});
test("garde -> gard", function() {deepEqual( Stem("garde"), "gard");});
test("gardé -> gard", function() {deepEqual( Stem("gardé"), "gard");});
test("gardée -> gard", function() {deepEqual( Stem("gardée"), "gard");});
test("gardées -> gard", function() {deepEqual( Stem("gardées"), "gard");});
test("gardens -> garden", function() {deepEqual( Stem("gardens"), "garden");});
test("garder -> gard", function() {deepEqual( Stem("garder"), "gard");});
test("gardera -> gard", function() {deepEqual( Stem("gardera"), "gard");});
test("garderai -> gard", function() {deepEqual( Stem("garderai"), "gard");});
test("garderais -> gard", function() {deepEqual( Stem("garderais"), "gard");});
test("garderait -> gard", function() {deepEqual( Stem("garderait"), "gard");});
test("garderas -> gard", function() {deepEqual( Stem("garderas"), "gard");});
test("gardes -> gard", function() {deepEqual( Stem("gardes"), "gard");});
test("gardés -> gard", function() {deepEqual( Stem("gardés"), "gard");});
test("gardez -> gard", function() {deepEqual( Stem("gardez"), "gard");});
test("gardien -> gardien", function() {deepEqual( Stem("gardien"), "gardien");});
test("gardiens -> gardien", function() {deepEqual( Stem("gardiens"), "gardien");});
test("gare -> gar", function() {deepEqual( Stem("gare"), "gar");});
test("garnement -> garn", function() {deepEqual( Stem("garnement"), "garn");});
test("garni -> garn", function() {deepEqual( Stem("garni"), "garn");});
test("garnie -> garn", function() {deepEqual( Stem("garnie"), "garn");});
test("garnies -> garn", function() {deepEqual( Stem("garnies"), "garn");});
test("garnis -> garn", function() {deepEqual( Stem("garnis"), "garn");});
test("garnison -> garnison", function() {deepEqual( Stem("garnison"), "garnison");});
test("garnit -> garn", function() {deepEqual( Stem("garnit"), "garn");});
test("garrot -> garrot", function() {deepEqual( Stem("garrot"), "garrot");});
test("garrotté -> garrott", function() {deepEqual( Stem("garrotté"), "garrott");});
test("gascons -> gascon", function() {deepEqual( Stem("gascons"), "gascon");});
test("gaspilla -> gaspill", function() {deepEqual( Stem("gaspilla"), "gaspill");});
test("gâtaient -> gât", function() {deepEqual( Stem("gâtaient"), "gât");});
test("gâtait -> gât", function() {deepEqual( Stem("gâtait"), "gât");});
test("gâte -> gât", function() {deepEqual( Stem("gâte"), "gât");});
test("gâté -> gât", function() {deepEqual( Stem("gâté"), "gât");});
test("gâteau -> gâteau", function() {deepEqual( Stem("gâteau"), "gâteau");});
test("gâtée -> gât", function() {deepEqual( Stem("gâtée"), "gât");});
test("gâtées -> gât", function() {deepEqual( Stem("gâtées"), "gât");});
test("gâter -> gât", function() {deepEqual( Stem("gâter"), "gât");});
test("gâterait -> gât", function() {deepEqual( Stem("gâterait"), "gât");});
test("gâtés -> gât", function() {deepEqual( Stem("gâtés"), "gât");});
test("gauche -> gauch", function() {deepEqual( Stem("gauche"), "gauch");});
test("gaucherie -> gaucher", function() {deepEqual( Stem("gaucherie"), "gaucher");});
test("gaucheries -> gaucher", function() {deepEqual( Stem("gaucheries"), "gaucher");});
test("gauches -> gauch", function() {deepEqual( Stem("gauches"), "gauch");});
test("gauthier -> gauthi", function() {deepEqual( Stem("gauthier"), "gauthi");});
test("gay -> gay", function() {deepEqual( Stem("gay"), "gay");});
test("gaz -> gaz", function() {deepEqual( Stem("gaz"), "gaz");});
test("gaze -> gaz", function() {deepEqual( Stem("gaze"), "gaz");});
test("gazes -> gaz", function() {deepEqual( Stem("gazes"), "gaz");});
test("gazette -> gazet", function() {deepEqual( Stem("gazette"), "gazet");});
test("gazettes -> gazet", function() {deepEqual( Stem("gazettes"), "gazet");});
test("gazon -> gazon", function() {deepEqual( Stem("gazon"), "gazon");});
test("gazouillements -> gazouill", function() {deepEqual( Stem("gazouillements"), "gazouill");});
test("géant -> gé", function() {deepEqual( Stem("géant"), "gé");});
test("géants -> gé", function() {deepEqual( Stem("géants"), "gé");});
test("gémi -> gem", function() {deepEqual( Stem("gémi"), "gem");});
test("gémissait -> gem", function() {deepEqual( Stem("gémissait"), "gem");});
test("gémissant -> gem", function() {deepEqual( Stem("gémissant"), "gem");});
test("gémissements -> gem", function() {deepEqual( Stem("gémissements"), "gem");});
test("gênaient -> gên", function() {deepEqual( Stem("gênaient"), "gên");});
test("gênait -> gên", function() {deepEqual( Stem("gênait"), "gên");});
test("gênant -> gên", function() {deepEqual( Stem("gênant"), "gên");});
test("gênante -> gên", function() {deepEqual( Stem("gênante"), "gên");});
test("gendarme -> gendarm", function() {deepEqual( Stem("gendarme"), "gendarm");});
test("gendarmer -> gendarm", function() {deepEqual( Stem("gendarmer"), "gendarm");});
test("gendarmerie -> gendarmer", function() {deepEqual( Stem("gendarmerie"), "gendarmer");});
test("gendarmes -> gendarm", function() {deepEqual( Stem("gendarmes"), "gendarm");});
test("gendre -> gendr", function() {deepEqual( Stem("gendre"), "gendr");});
test("gêne -> gên", function() {deepEqual( Stem("gêne"), "gên");});
test("gêné -> gên", function() {deepEqual( Stem("gêné"), "gên");});
test("généalogie -> généalog", function() {deepEqual( Stem("généalogie"), "généalog");});
test("généalogique -> généalog", function() {deepEqual( Stem("généalogique"), "généalog");});
test("gênent -> gênent", function() {deepEqual( Stem("gênent"), "gênent");});
test("gêner -> gên", function() {deepEqual( Stem("gêner"), "gên");});
test("gênerait -> gên", function() {deepEqual( Stem("gênerait"), "gên");});
test("general -> general", function() {deepEqual( Stem("general"), "general");});
test("général -> général", function() {deepEqual( Stem("général"), "général");});
test("générale -> général", function() {deepEqual( Stem("générale"), "général");});
test("généralement -> général", function() {deepEqual( Stem("généralement"), "général");});
test("générales -> général", function() {deepEqual( Stem("générales"), "général");});
test("généraux -> général", function() {deepEqual( Stem("généraux"), "général");});
test("généreuse -> géner", function() {deepEqual( Stem("généreuse"), "géner");});
test("généreusement -> géner", function() {deepEqual( Stem("généreusement"), "géner");});
test("généreuses -> géner", function() {deepEqual( Stem("généreuses"), "géner");});
test("généreux -> géner", function() {deepEqual( Stem("généreux"), "géner");});
test("générosité -> généros", function() {deepEqual( Stem("générosité"), "généros");});
test("gênes -> gên", function() {deepEqual( Stem("gênes"), "gên");});
test("genèse -> genes", function() {deepEqual( Stem("genèse"), "genes");});
test("genève -> genev", function() {deepEqual( Stem("genève"), "genev");});
test("genevois -> genevois", function() {deepEqual( Stem("genevois"), "genevois");});
test("génie -> gen", function() {deepEqual( Stem("génie"), "gen");});
test("génies -> gen", function() {deepEqual( Stem("génies"), "gen");});
test("genlis -> genl", function() {deepEqual( Stem("genlis"), "genl");});
test("génoise -> génois", function() {deepEqual( Stem("génoise"), "génois");});
test("genoux -> genoux", function() {deepEqual( Stem("genoux"), "genoux");});
test("genre -> genr", function() {deepEqual( Stem("genre"), "genr");});
test("genres -> genr", function() {deepEqual( Stem("genres"), "genr");});
test("gens -> gen", function() {deepEqual( Stem("gens"), "gen");});
test("gentil -> gentil", function() {deepEqual( Stem("gentil"), "gentil");});
test("gentilhomme -> gentilhomm", function() {deepEqual( Stem("gentilhomme"), "gentilhomm");});
test("gentille -> gentill", function() {deepEqual( Stem("gentille"), "gentill");});
test("gentils -> gentil", function() {deepEqual( Stem("gentils"), "gentil");});
test("gentilshommes -> gentilshomm", function() {deepEqual( Stem("gentilshommes"), "gentilshomm");});
test("gentle -> gentl", function() {deepEqual( Stem("gentle"), "gentl");});
test("gentleman -> gentleman", function() {deepEqual( Stem("gentleman"), "gentleman");});
test("gentlemen -> gentlemen", function() {deepEqual( Stem("gentlemen"), "gentlemen");});
test("géographie -> géograph", function() {deepEqual( Stem("géographie"), "géograph");});
test("geôlier -> geôli", function() {deepEqual( Stem("geôlier"), "geôli");});
test("geôlière -> geôli", function() {deepEqual( Stem("geôlière"), "geôli");});
test("geôliers -> geôli", function() {deepEqual( Stem("geôliers"), "geôli");});
test("géomètre -> géometr", function() {deepEqual( Stem("géomètre"), "géometr");});
test("géométrie -> géometr", function() {deepEqual( Stem("géométrie"), "géometr");});
test("george -> georg", function() {deepEqual( Stem("george"), "georg");});
test("géorgiques -> géorgiqu", function() {deepEqual( Stem("géorgiques"), "géorgiqu");});
test("gerbes -> gerb", function() {deepEqual( Stem("gerbes"), "gerb");});
test("germain -> germain", function() {deepEqual( Stem("germain"), "germain");});
test("géronimo -> géronimo", function() {deepEqual( Stem("géronimo"), "géronimo");});
test("geste -> gest", function() {deepEqual( Stem("geste"), "gest");});
test("gestes -> gest", function() {deepEqual( Stem("gestes"), "gest");});
test("gesticulant -> gesticul", function() {deepEqual( Stem("gesticulant"), "gesticul");});
test("ghari -> ghar", function() {deepEqual( Stem("ghari"), "ghar");});
test("ghâtes -> ghât", function() {deepEqual( Stem("ghâtes"), "ghât");});
test("ghazepour -> ghazepour", function() {deepEqual( Stem("ghazepour"), "ghazepour");});
test("gherardi -> gherard", function() {deepEqual( Stem("gherardi"), "gherard");});
test("ghisleri -> ghisler", function() {deepEqual( Stem("ghisleri"), "ghisler");});
test("ghisolfi -> ghisolf", function() {deepEqual( Stem("ghisolfi"), "ghisolf");});
test("ghita -> ghit", function() {deepEqual( Stem("ghita"), "ghit");});
test("gia -> gi", function() {deepEqual( Stem("gia"), "gi");});
test("giacomo -> giacomo", function() {deepEqual( Stem("giacomo"), "giacomo");});
test("gibelotte -> gibelott", function() {deepEqual( Stem("gibelotte"), "gibelott");});
test("giberne -> gibern", function() {deepEqual( Stem("giberne"), "gibern");});
test("gibier -> gibi", function() {deepEqual( Stem("gibier"), "gibi");});
test("gibraltar -> gibraltar", function() {deepEqual( Stem("gibraltar"), "gibraltar");});
test("gigantesque -> gigantesqu", function() {deepEqual( Stem("gigantesque"), "gigantesqu");});
test("gigantesques -> gigantesqu", function() {deepEqual( Stem("gigantesques"), "gigantesqu");});
test("gilet -> gilet", function() {deepEqual( Stem("gilet"), "gilet");});
test("gilets -> gilet", function() {deepEqual( Stem("gilets"), "gilet");});
test("giletti -> gilet", function() {deepEqual( Stem("giletti"), "gilet");});
test("gin -> gin", function() {deepEqual( Stem("gin"), "gin");});
test("gina -> gin", function() {deepEqual( Stem("gina"), "gin");});
test("giovanni -> giovann", function() {deepEqual( Stem("giovanni"), "giovann");});
test("giovannone -> giovannon", function() {deepEqual( Stem("giovannone"), "giovannon");});
test("giovita -> giovit", function() {deepEqual( Stem("giovita"), "giovit");});
test("girafe -> giraf", function() {deepEqual( Stem("girafe"), "giraf");});
test("giration -> girat", function() {deepEqual( Stem("giration"), "girat");});
test("giraud -> giraud", function() {deepEqual( Stem("giraud"), "giraud");});
test("girodet -> girodet", function() {deepEqual( Stem("girodet"), "girodet");});
test("girofliers -> girofli", function() {deepEqual( Stem("girofliers"), "girofli");});
test("girondin -> girondin", function() {deepEqual( Stem("girondin"), "girondin");});
test("gisaient -> gis", function() {deepEqual( Stem("gisaient"), "gis");});
test("gisant -> gis", function() {deepEqual( Stem("gisant"), "gis");});
test("gît -> gît", function() {deepEqual( Stem("gît"), "gît");});
test("giulia -> giuli", function() {deepEqual( Stem("giulia"), "giuli");});
test("giuseppe -> giusepp", function() {deepEqual( Stem("giuseppe"), "giusepp");});
test("give -> giv", function() {deepEqual( Stem("give"), "giv");});
test("glaçaient -> glac", function() {deepEqual( Stem("glaçaient"), "glac");});
test("glaçait -> glac", function() {deepEqual( Stem("glaçait"), "glac");});
test("glace -> glac", function() {deepEqual( Stem("glace"), "glac");});
test("glacé -> glac", function() {deepEqual( Stem("glacé"), "glac");});
test("glacée -> glac", function() {deepEqual( Stem("glacée"), "glac");});
test("glacées -> glac", function() {deepEqual( Stem("glacées"), "glac");});
test("glacer -> glac", function() {deepEqual( Stem("glacer"), "glac");});
test("glaces -> glac", function() {deepEqual( Stem("glaces"), "glac");});
test("glacial -> glacial", function() {deepEqual( Stem("glacial"), "glacial");});
test("glaciale -> glacial", function() {deepEqual( Stem("glaciale"), "glacial");});
test("glances -> glanc", function() {deepEqual( Stem("glances"), "glanc");});
test("glapissante -> glap", function() {deepEqual( Stem("glapissante"), "glap");});
test("glasgow -> glasgow", function() {deepEqual( Stem("glasgow"), "glasgow");});
test("glissa -> gliss", function() {deepEqual( Stem("glissa"), "gliss");});
test("glissaient -> gliss", function() {deepEqual( Stem("glissaient"), "gliss");});
test("glissait -> gliss", function() {deepEqual( Stem("glissait"), "gliss");});
test("glissant -> gliss", function() {deepEqual( Stem("glissant"), "gliss");});
test("glisse -> gliss", function() {deepEqual( Stem("glisse"), "gliss");});
test("glissé -> gliss", function() {deepEqual( Stem("glissé"), "gliss");});
test("glissent -> glissent", function() {deepEqual( Stem("glissent"), "glissent");});
test("glisser -> gliss", function() {deepEqual( Stem("glisser"), "gliss");});
test("glissera -> gliss", function() {deepEqual( Stem("glissera"), "gliss");});
test("glissons -> glisson", function() {deepEqual( Stem("glissons"), "glisson");});
test("globe -> glob", function() {deepEqual( Stem("globe"), "glob");});
test("gloire -> gloir", function() {deepEqual( Stem("gloire"), "gloir");});
test("glorieux -> glorieux", function() {deepEqual( Stem("glorieux"), "glorieux");});
test("glory -> glory", function() {deepEqual( Stem("glory"), "glory");});
test("gloutons -> glouton", function() {deepEqual( Stem("gloutons"), "glouton");});
test("glu -> glu", function() {deepEqual( Stem("glu"), "glu");});
test("goa -> go", function() {deepEqual( Stem("goa"), "go");});
test("gobelet -> gobelet", function() {deepEqual( Stem("gobelet"), "gobelet");});
test("godart -> godart", function() {deepEqual( Stem("godart"), "godart");});
test("godavery -> godavery", function() {deepEqual( Stem("godavery"), "godavery");});
test("godille -> godill", function() {deepEqual( Stem("godille"), "godill");});
test("goélette -> goélet", function() {deepEqual( Stem("goélette"), "goélet");});
test("goélettes -> goélet", function() {deepEqual( Stem("goélettes"), "goélet");});
test("goethe -> goeth", function() {deepEqual( Stem("goethe"), "goeth");});
test("goguenard -> goguenard", function() {deepEqual( Stem("goguenard"), "goguenard");});
test("goguenards -> goguenard", function() {deepEqual( Stem("goguenards"), "goguenard");});
test("golconde -> golcond", function() {deepEqual( Stem("golconde"), "golcond");});
test("goldoni -> goldon", function() {deepEqual( Stem("goldoni"), "goldon");});
test("golfe -> golf", function() {deepEqual( Stem("golfe"), "golf");});
test("golfes -> golf", function() {deepEqual( Stem("golfes"), "golf");});
test("golgonda -> golgond", function() {deepEqual( Stem("golgonda"), "golgond");});
test("golgonde -> golgond", function() {deepEqual( Stem("golgonde"), "golgond");});
test("gonds -> gond", function() {deepEqual( Stem("gonds"), "gond");});
test("gongs -> gong", function() {deepEqual( Stem("gongs"), "gong");});
test("gonzo -> gonzo", function() {deepEqual( Stem("gonzo"), "gonzo");});
test("gorge -> gorg", function() {deepEqual( Stem("gorge"), "gorg");});
test("gorgées -> gorg", function() {deepEqual( Stem("gorgées"), "gorg");});
test("gorges -> gorg", function() {deepEqual( Stem("gorges"), "gorg");});
test("gothard -> gothard", function() {deepEqual( Stem("gothard"), "gothard");});
test("gothique -> gothiqu", function() {deepEqual( Stem("gothique"), "gothiqu");});
test("gothiques -> gothiqu", function() {deepEqual( Stem("gothiques"), "gothiqu");});
test("gouailler -> gouaill", function() {deepEqual( Stem("gouailler"), "gouaill");});
test("goudron -> goudron", function() {deepEqual( Stem("goudron"), "goudron");});
test("goulée -> goul", function() {deepEqual( Stem("goulée"), "goul");});
test("gour -> gour", function() {deepEqual( Stem("gour"), "gour");});
test("gourmande -> gourmand", function() {deepEqual( Stem("gourmande"), "gourmand");});
test("gourmandise -> gourmandis", function() {deepEqual( Stem("gourmandise"), "gourmandis");});
test("gourmets -> gourmet", function() {deepEqual( Stem("gourmets"), "gourmet");});
test("gousset -> gousset", function() {deepEqual( Stem("gousset"), "gousset");});
test("goût -> goût", function() {deepEqual( Stem("goût"), "goût");});
test("goûta -> goût", function() {deepEqual( Stem("goûta"), "goût");});
test("goûtant -> goût", function() {deepEqual( Stem("goûtant"), "goût");});
test("goûte -> goût", function() {deepEqual( Stem("goûte"), "goût");});
test("goûté -> goût", function() {deepEqual( Stem("goûté"), "goût");});
test("goûtées -> goût", function() {deepEqual( Stem("goûtées"), "goût");});
test("goûter -> goût", function() {deepEqual( Stem("goûter"), "goût");});
test("goûterait -> goût", function() {deepEqual( Stem("goûterait"), "goût");});
test("goûtés -> goût", function() {deepEqual( Stem("goûtés"), "goût");});
test("goûts -> goût", function() {deepEqual( Stem("goûts"), "goût");});
test("goutte -> goutt", function() {deepEqual( Stem("goutte"), "goutt");});
test("gouttes -> goutt", function() {deepEqual( Stem("gouttes"), "goutt");});
test("gouvernail -> gouvernail", function() {deepEqual( Stem("gouvernail"), "gouvernail");});
test("gouvernait -> gouvern", function() {deepEqual( Stem("gouvernait"), "gouvern");});
test("gouverne -> gouvern", function() {deepEqual( Stem("gouverne"), "gouvern");});
test("gouverné -> gouvern", function() {deepEqual( Stem("gouverné"), "gouvern");});
test("gouvernement -> gouvern", function() {deepEqual( Stem("gouvernement"), "gouvern");});
test("gouvernements -> gouvern", function() {deepEqual( Stem("gouvernements"), "gouvern");});
test("gouvernent -> gouvernent", function() {deepEqual( Stem("gouvernent"), "gouvernent");});
test("gouverner -> gouvern", function() {deepEqual( Stem("gouverner"), "gouvern");});
test("gouverneriez -> gouvern", function() {deepEqual( Stem("gouverneriez"), "gouvern");});
test("gouverneur -> gouverneur", function() {deepEqual( Stem("gouverneur"), "gouverneur");});
test("gouverneurs -> gouverneur", function() {deepEqual( Stem("gouverneurs"), "gouverneur");});
test("gouvion -> gouvion", function() {deepEqual( Stem("gouvion"), "gouvion");});
test("government -> government", function() {deepEqual( Stem("government"), "government");});
test("grâce -> grâc", function() {deepEqual( Stem("grâce"), "grâc");});
test("grâces -> grâc", function() {deepEqual( Stem("grâces"), "grâc");});
test("gracieuse -> gracieux", function() {deepEqual( Stem("gracieuse"), "gracieux");});
test("gracieusement -> gracieux", function() {deepEqual( Stem("gracieusement"), "gracieux");});
test("gracieuses -> gracieux", function() {deepEqual( Stem("gracieuses"), "gracieux");});
test("gracieux -> gracieux", function() {deepEqual( Stem("gracieux"), "gracieux");});
test("grade -> grad", function() {deepEqual( Stem("grade"), "grad");});
test("graduée -> gradu", function() {deepEqual( Stem("graduée"), "gradu");});
test("graduellement -> graduel", function() {deepEqual( Stem("graduellement"), "graduel");});
test("grain -> grain", function() {deepEqual( Stem("grain"), "grain");});
test("grains -> grain", function() {deepEqual( Stem("grains"), "grain");});
test("graisse -> graiss", function() {deepEqual( Stem("graisse"), "graiss");});
test("graisser -> graiss", function() {deepEqual( Stem("graisser"), "graiss");});
test("grand -> grand", function() {deepEqual( Stem("grand"), "grand");});
test("grande -> grand", function() {deepEqual( Stem("grande"), "grand");});
test("grandement -> grand", function() {deepEqual( Stem("grandement"), "grand");});
test("grandes -> grand", function() {deepEqual( Stem("grandes"), "grand");});
test("grandeur -> grandeur", function() {deepEqual( Stem("grandeur"), "grandeur");});
test("grandeurs -> grandeur", function() {deepEqual( Stem("grandeurs"), "grandeur");});
test("grandi -> grand", function() {deepEqual( Stem("grandi"), "grand");});
test("grandie -> grand", function() {deepEqual( Stem("grandie"), "grand");});
test("grandiose -> grandios", function() {deepEqual( Stem("grandiose"), "grandios");});
test("grandis -> grand", function() {deepEqual( Stem("grandis"), "grand");});
test("grandit -> grand", function() {deepEqual( Stem("grandit"), "grand");});
test("grands -> grand", function() {deepEqual( Stem("grands"), "grand");});
test("granit -> gran", function() {deepEqual( Stem("granit"), "gran");});
test("grant -> grant", function() {deepEqual( Stem("grant"), "grant");});
test("granvelle -> granvel", function() {deepEqual( Stem("granvelle"), "granvel");});
test("grappe -> grapp", function() {deepEqual( Stem("grappe"), "grapp");});
test("gras -> gras", function() {deepEqual( Stem("gras"), "gras");});
test("grasse -> grass", function() {deepEqual( Stem("grasse"), "grass");});
test("gratification -> gratif", function() {deepEqual( Stem("gratification"), "gratif");});
test("gratifié -> gratifi", function() {deepEqual( Stem("gratifié"), "gratifi");});
test("gratis -> grat", function() {deepEqual( Stem("gratis"), "grat");});
test("gratius -> gratius", function() {deepEqual( Stem("gratius"), "gratius");});
test("gratter -> gratt", function() {deepEqual( Stem("gratter"), "gratt");});
test("gratuite -> gratuit", function() {deepEqual( Stem("gratuite"), "gratuit");});
test("gratuitement -> gratuit", function() {deepEqual( Stem("gratuitement"), "gratuit");});
test("grave -> grav", function() {deepEqual( Stem("grave"), "grav");});
test("gravé -> grav", function() {deepEqual( Stem("gravé"), "grav");});
test("gravement -> grav", function() {deepEqual( Stem("gravement"), "grav");});
test("graver -> grav", function() {deepEqual( Stem("graver"), "grav");});
test("graves -> grav", function() {deepEqual( Stem("graves"), "grav");});
test("graveur -> graveur", function() {deepEqual( Stem("graveur"), "graveur");});
test("gravir -> grav", function() {deepEqual( Stem("gravir"), "grav");});
test("gravissaient -> grav", function() {deepEqual( Stem("gravissaient"), "grav");});
test("gravitaient -> gravit", function() {deepEqual( Stem("gravitaient"), "gravit");});
test("gravité -> gravit", function() {deepEqual( Stem("gravité"), "gravit");});
test("gravures -> gravur", function() {deepEqual( Stem("gravures"), "gravur");});
test("gray -> gray", function() {deepEqual( Stem("gray"), "gray");});
test("gré -> gré", function() {deepEqual( Stem("gré"), "gré");});
test("great -> great", function() {deepEqual( Stem("great"), "great");});
test("greatly -> greatly", function() {deepEqual( Stem("greatly"), "greatly");});
test("grec -> grec", function() {deepEqual( Stem("grec"), "grec");});
test("grèce -> grec", function() {deepEqual( Stem("grèce"), "grec");});
test("grecque -> grecqu", function() {deepEqual( Stem("grecque"), "grecqu");});
test("grecques -> grecqu", function() {deepEqual( Stem("grecques"), "grecqu");});
test("gredin -> gredin", function() {deepEqual( Stem("gredin"), "gredin");});
test("gréé -> gré", function() {deepEqual( Stem("gréé"), "gré");});
test("green -> green", function() {deepEqual( Stem("green"), "green");});
test("greenwich -> greenwich", function() {deepEqual( Stem("greenwich"), "greenwich");});
test("gréer -> gré", function() {deepEqual( Stem("gréer"), "gré");});
test("greffier -> greffi", function() {deepEqual( Stem("greffier"), "greffi");});
test("grégoire -> grégoir", function() {deepEqual( Stem("grégoire"), "grégoir");});
test("grêles -> grêl", function() {deepEqual( Stem("grêles"), "grêl");});
test("grenade -> grenad", function() {deepEqual( Stem("grenade"), "grenad");});
test("grenadier -> grenadi", function() {deepEqual( Stem("grenadier"), "grenadi");});
test("grenadiers -> grenadi", function() {deepEqual( Stem("grenadiers"), "grenadi");});
test("grenier -> greni", function() {deepEqual( Stem("grenier"), "greni");});
test("grève -> grev", function() {deepEqual( Stem("grève"), "grev");});
test("grianta -> griant", function() {deepEqual( Stem("grianta"), "griant");});
test("griefs -> grief", function() {deepEqual( Stem("griefs"), "grief");});
test("grièvement -> griev", function() {deepEqual( Stem("grièvement"), "griev");});
test("griffe -> griff", function() {deepEqual( Stem("griffe"), "griff");});
test("griffonnages -> griffonnag", function() {deepEqual( Stem("griffonnages"), "griffonnag");});
test("griffonnait -> griffon", function() {deepEqual( Stem("griffonnait"), "griffon");});
test("grillages -> grillag", function() {deepEqual( Stem("grillages"), "grillag");});
test("grille -> grill", function() {deepEqual( Stem("grille"), "grill");});
test("grillé -> grill", function() {deepEqual( Stem("grillé"), "grill");});
test("grillée -> grill", function() {deepEqual( Stem("grillée"), "grill");});
test("grillées -> grill", function() {deepEqual( Stem("grillées"), "grill");});
test("grilles -> grill", function() {deepEqual( Stem("grilles"), "grill");});
test("grillo -> grillo", function() {deepEqual( Stem("grillo"), "grillo");});
test("grimaçant -> grimac", function() {deepEqual( Stem("grimaçant"), "grimac");});
test("grimaçante -> grimac", function() {deepEqual( Stem("grimaçante"), "grimac");});
test("grimaçantes -> grimac", function() {deepEqual( Stem("grimaçantes"), "grimac");});
test("grimaçants -> grimac", function() {deepEqual( Stem("grimaçants"), "grimac");});
test("grimace -> grimac", function() {deepEqual( Stem("grimace"), "grimac");});
test("grimaces -> grimac", function() {deepEqual( Stem("grimaces"), "grimac");});
test("grimer -> grim", function() {deepEqual( Stem("grimer"), "grim");});
test("grimpait -> grimp", function() {deepEqual( Stem("grimpait"), "grimp");});
test("grimpant -> grimp", function() {deepEqual( Stem("grimpant"), "grimp");});
test("gringalet -> gringalet", function() {deepEqual( Stem("gringalet"), "gringalet");});
test("gris -> gris", function() {deepEqual( Stem("gris"), "gris");});
test("grisâtre -> grisâtr", function() {deepEqual( Stem("grisâtre"), "grisâtr");});
test("grise -> gris", function() {deepEqual( Stem("grise"), "gris");});
test("grisé -> gris", function() {deepEqual( Stem("grisé"), "gris");});
test("grisonnants -> grison", function() {deepEqual( Stem("grisonnants"), "grison");});
test("grivelé -> grivel", function() {deepEqual( Stem("grivelé"), "grivel");});
test("grogeot -> grogeot", function() {deepEqual( Stem("grogeot"), "grogeot");});
test("grognement -> grogn", function() {deepEqual( Stem("grognement"), "grogn");});
test("grognon -> grognon", function() {deepEqual( Stem("grognon"), "grognon");});
test("gronda -> grond", function() {deepEqual( Stem("gronda"), "grond");});
test("grondait -> grond", function() {deepEqual( Stem("grondait"), "grond");});
test("grondant -> grond", function() {deepEqual( Stem("grondant"), "grond");});
test("gronde -> grond", function() {deepEqual( Stem("gronde"), "grond");});
test("grondé -> grond", function() {deepEqual( Stem("grondé"), "grond");});
test("grondée -> grond", function() {deepEqual( Stem("grondée"), "grond");});
test("gronder -> grond", function() {deepEqual( Stem("gronder"), "grond");});
test("gronderez -> grond", function() {deepEqual( Stem("gronderez"), "grond");});
test("grondez -> grond", function() {deepEqual( Stem("grondez"), "grond");});
test("groom -> groom", function() {deepEqual( Stem("groom"), "groom");});
test("gros -> gros", function() {deepEqual( Stem("gros"), "gros");});
test("groseilles -> groseil", function() {deepEqual( Stem("groseilles"), "groseil");});
test("grosse -> gross", function() {deepEqual( Stem("grosse"), "gross");});
test("grosses -> gross", function() {deepEqual( Stem("grosses"), "gross");});
test("grossesse -> grossess", function() {deepEqual( Stem("grossesse"), "grossess");});
test("grosseur -> grosseur", function() {deepEqual( Stem("grosseur"), "grosseur");});
test("grossie -> gross", function() {deepEqual( Stem("grossie"), "gross");});
test("grossier -> grossi", function() {deepEqual( Stem("grossier"), "grossi");});
test("grossière -> grossi", function() {deepEqual( Stem("grossière"), "grossi");});
test("grossièrement -> grossi", function() {deepEqual( Stem("grossièrement"), "grossi");});
test("grossières -> grossi", function() {deepEqual( Stem("grossières"), "grossi");});
test("grossièreté -> grossièret", function() {deepEqual( Stem("grossièreté"), "grossièret");});
test("grossièretés -> grossièret", function() {deepEqual( Stem("grossièretés"), "grossièret");});
test("grossiers -> grossi", function() {deepEqual( Stem("grossiers"), "grossi");});
test("grotesque -> grotesqu", function() {deepEqual( Stem("grotesque"), "grotesqu");});
test("grotesques -> grotesqu", function() {deepEqual( Stem("grotesques"), "grotesqu");});
test("grotte -> grott", function() {deepEqual( Stem("grotte"), "grott");});
test("grottes -> grott", function() {deepEqual( Stem("grottes"), "grott");});
test("grouillait -> grouill", function() {deepEqual( Stem("grouillait"), "grouill");});
test("groupe -> group", function() {deepEqual( Stem("groupe"), "group");});
test("groupes -> group", function() {deepEqual( Stem("groupes"), "group");});
test("grues -> gru", function() {deepEqual( Stem("grues"), "gru");});
test("guardate -> guardat", function() {deepEqual( Stem("guardate"), "guardat");});
test("guèbres -> guebr", function() {deepEqual( Stem("guèbres"), "guebr");});
test("guenilles -> guenill", function() {deepEqual( Stem("guenilles"), "guenill");});
test("guépards -> guépard", function() {deepEqual( Stem("guépards"), "guépard");});
test("guerchin -> guerchin", function() {deepEqual( Stem("guerchin"), "guerchin");});
test("guère -> guer", function() {deepEqual( Stem("guère"), "guer");});
test("guéri -> guer", function() {deepEqual( Stem("guéri"), "guer");});
test("guérin -> guérin", function() {deepEqual( Stem("guérin"), "guérin");});
test("guérir -> guer", function() {deepEqual( Stem("guérir"), "guer");});
test("guérison -> guérison", function() {deepEqual( Stem("guérison"), "guérison");});
test("guérissez -> guer", function() {deepEqual( Stem("guérissez"), "guer");});
test("guérit -> guer", function() {deepEqual( Stem("guérit"), "guer");});
test("guérite -> guérit", function() {deepEqual( Stem("guérite"), "guérit");});
test("guérites -> guérit", function() {deepEqual( Stem("guérites"), "guérit");});
test("guerre -> guerr", function() {deepEqual( Stem("guerre"), "guerr");});
test("guerres -> guerr", function() {deepEqual( Stem("guerres"), "guerr");});
test("guerriers -> guerri", function() {deepEqual( Stem("guerriers"), "guerri");});
test("guess -> guess", function() {deepEqual( Stem("guess"), "guess");});
test("guet -> guet", function() {deepEqual( Stem("guet"), "guet");});
test("guetta -> guet", function() {deepEqual( Stem("guetta"), "guet");});
test("guettait -> guet", function() {deepEqual( Stem("guettait"), "guet");});
test("guette -> guet", function() {deepEqual( Stem("guette"), "guet");});
test("guettent -> guettent", function() {deepEqual( Stem("guettent"), "guettent");});
test("guetteurs -> guetteur", function() {deepEqual( Stem("guetteurs"), "guetteur");});
test("gueule -> gueul", function() {deepEqual( Stem("gueule"), "gueul");});
test("gueux -> gueux", function() {deepEqual( Stem("gueux"), "gueux");});
test("gui -> gui", function() {deepEqual( Stem("gui"), "gui");});
test("guichet -> guichet", function() {deepEqual( Stem("guichet"), "guichet");});
test("guichetier -> guicheti", function() {deepEqual( Stem("guichetier"), "guicheti");});
test("guidant -> guid", function() {deepEqual( Stem("guidant"), "guid");});
test("guide -> guid", function() {deepEqual( Stem("guide"), "guid");});
test("guidé -> guid", function() {deepEqual( Stem("guidé"), "guid");});
test("guidée -> guid", function() {deepEqual( Stem("guidée"), "guid");});
test("guider -> guid", function() {deepEqual( Stem("guider"), "guid");});
test("guidés -> guid", function() {deepEqual( Stem("guidés"), "guid");});
test("guidon -> guidon", function() {deepEqual( Stem("guidon"), "guidon");});
test("guignon -> guignon", function() {deepEqual( Stem("guignon"), "guignon");});
test("guillotinaient -> guillotin", function() {deepEqual( Stem("guillotinaient"), "guillotin");});
test("guillotine -> guillotin", function() {deepEqual( Stem("guillotine"), "guillotin");});
test("guillotiné -> guillotin", function() {deepEqual( Stem("guillotiné"), "guillotin");});
test("guillotiner -> guillotin", function() {deepEqual( Stem("guillotiner"), "guillotin");});
test("guillotinés -> guillotin", function() {deepEqual( Stem("guillotinés"), "guillotin");});
test("guindé -> guind", function() {deepEqual( Stem("guindé"), "guind");});
test("guinder -> guind", function() {deepEqual( Stem("guinder"), "guind");});
test("guinée -> guin", function() {deepEqual( Stem("guinée"), "guin");});
test("guinées -> guin", function() {deepEqual( Stem("guinées"), "guin");});
test("guise -> guis", function() {deepEqual( Stem("guise"), "guis");});
test("guitare -> guitar", function() {deepEqual( Stem("guitare"), "guitar");});
test("gustave -> gustav", function() {deepEqual( Stem("gustave"), "gustav");});
test("guy -> guy", function() {deepEqual( Stem("guy"), "guy");});
test("gymnase -> gymnas", function() {deepEqual( Stem("gymnase"), "gymnas");});
test("gymnaste -> gymnast", function() {deepEqual( Stem("gymnaste"), "gymnast");});
test("gymnastes -> gymnast", function() {deepEqual( Stem("gymnastes"), "gymnast");});
test("gymnastique -> gymnast", function() {deepEqual( Stem("gymnastique"), "gymnast");});
test("h -> h", function() {deepEqual( Stem("h"), "h");});
test("ha -> ha", function() {deepEqual( Stem("ha"), "ha");});
test("habile -> habil", function() {deepEqual( Stem("habile"), "habil");});
test("habilement -> habil", function() {deepEqual( Stem("habilement"), "habil");});
test("habiles -> habil", function() {deepEqual( Stem("habiles"), "habil");});
test("habileté -> habilet", function() {deepEqual( Stem("habileté"), "habilet");});
test("habilla -> habill", function() {deepEqual( Stem("habilla"), "habill");});
test("habillait -> habill", function() {deepEqual( Stem("habillait"), "habill");});
test("habillant -> habill", function() {deepEqual( Stem("habillant"), "habill");});
test("habille -> habill", function() {deepEqual( Stem("habille"), "habill");});
test("habillé -> habill", function() {deepEqual( Stem("habillé"), "habill");});
test("habillée -> habill", function() {deepEqual( Stem("habillée"), "habill");});
test("habillement -> habill", function() {deepEqual( Stem("habillement"), "habill");});
test("habiller -> habill", function() {deepEqual( Stem("habiller"), "habill");});
test("habillés -> habill", function() {deepEqual( Stem("habillés"), "habill");});
test("habit -> hab", function() {deepEqual( Stem("habit"), "hab");});
test("habitais -> habit", function() {deepEqual( Stem("habitais"), "habit");});
test("habitait -> habit", function() {deepEqual( Stem("habitait"), "habit");});
test("habitant -> habit", function() {deepEqual( Stem("habitant"), "habit");});
test("habitants -> habit", function() {deepEqual( Stem("habitants"), "habit");});
test("habitation -> habit", function() {deepEqual( Stem("habitation"), "habit");});
test("habite -> habit", function() {deepEqual( Stem("habite"), "habit");});
test("habité -> habit", function() {deepEqual( Stem("habité"), "habit");});
test("habitée -> habit", function() {deepEqual( Stem("habitée"), "habit");});
test("habiter -> habit", function() {deepEqual( Stem("habiter"), "habit");});
test("habiterai -> habit", function() {deepEqual( Stem("habiterai"), "habit");});
test("habiteras -> habit", function() {deepEqual( Stem("habiteras"), "habit");});
test("habités -> habit", function() {deepEqual( Stem("habités"), "habit");});
test("habitez -> habit", function() {deepEqual( Stem("habitez"), "habit");});
test("habits -> habit", function() {deepEqual( Stem("habits"), "habit");});
test("habitude -> habitud", function() {deepEqual( Stem("habitude"), "habitud");});
test("habitudes -> habitud", function() {deepEqual( Stem("habitudes"), "habitud");});
test("habituée -> habitu", function() {deepEqual( Stem("habituée"), "habitu");});
test("habituel -> habituel", function() {deepEqual( Stem("habituel"), "habituel");});
test("habituelle -> habituel", function() {deepEqual( Stem("habituelle"), "habituel");});
test("habituellement -> habituel", function() {deepEqual( Stem("habituellement"), "habituel");});
test("habituelles -> habituel", function() {deepEqual( Stem("habituelles"), "habituel");});
test("habituels -> habituel", function() {deepEqual( Stem("habituels"), "habituel");});
test("habitués -> habitu", function() {deepEqual( Stem("habitués"), "habitu");});
test("hache -> hach", function() {deepEqual( Stem("hache"), "hach");});
test("haches -> hach", function() {deepEqual( Stem("haches"), "hach");});
test("hagard -> hagard", function() {deepEqual( Stem("hagard"), "hagard");});
test("hagards -> hagard", function() {deepEqual( Stem("hagards"), "hagard");});
test("haï -> haï", function() {deepEqual( Stem("haï"), "haï");});
test("haie -> hai", function() {deepEqual( Stem("haie"), "hai");});
test("haies -> hai", function() {deepEqual( Stem("haies"), "hai");});
test("haillons -> haillon", function() {deepEqual( Stem("haillons"), "haillon");});
test("haine -> hain", function() {deepEqual( Stem("haine"), "hain");});
test("haines -> hain", function() {deepEqual( Stem("haines"), "hain");});
test("haineuse -> haineux", function() {deepEqual( Stem("haineuse"), "haineux");});
test("haineuses -> haineux", function() {deepEqual( Stem("haineuses"), "haineux");});
test("hair -> hair", function() {deepEqual( Stem("hair"), "hair");});
test("haïr -> haïr", function() {deepEqual( Stem("haïr"), "haïr");});
test("haïraient -> haïr", function() {deepEqual( Stem("haïraient"), "haïr");});
test("hais -> hais", function() {deepEqual( Stem("hais"), "hais");});
test("haïssaient -> haïss", function() {deepEqual( Stem("haïssaient"), "haïss");});
test("haïssait -> haïss", function() {deepEqual( Stem("haïssait"), "haïss");});
test("haïssent -> haïssent", function() {deepEqual( Stem("haïssent"), "haïssent");});
test("hait -> hait", function() {deepEqual( Stem("hait"), "hait");});
test("hâla -> hâl", function() {deepEqual( Stem("hâla"), "hâl");});
test("halage -> halag", function() {deepEqual( Stem("halage"), "halag");});
test("hâle -> hâl", function() {deepEqual( Stem("hâle"), "hâl");});
test("haleine -> halein", function() {deepEqual( Stem("haleine"), "halein");});
test("haletant -> halet", function() {deepEqual( Stem("haletant"), "halet");});
test("halleck -> halleck", function() {deepEqual( Stem("halleck"), "halleck");});
test("halte -> halt", function() {deepEqual( Stem("halte"), "halt");});
test("haltes -> halt", function() {deepEqual( Stem("haltes"), "halt");});
test("hambourg -> hambourg", function() {deepEqual( Stem("hambourg"), "hambourg");});
test("hambourgeois -> hambourgeois", function() {deepEqual( Stem("hambourgeois"), "hambourgeois");});
test("hambourgeoise -> hambourgeois", function() {deepEqual( Stem("hambourgeoise"), "hambourgeois");});
test("hameau -> hameau", function() {deepEqual( Stem("hameau"), "hameau");});
test("hampe -> hamp", function() {deepEqual( Stem("hampe"), "hamp");});
test("hanche -> hanch", function() {deepEqual( Stem("hanche"), "hanch");});
test("hand -> hand", function() {deepEqual( Stem("hand"), "hand");});
test("hang -> hang", function() {deepEqual( Stem("hang"), "hang");});
test("hangar -> hangar", function() {deepEqual( Stem("hangar"), "hangar");});
test("hantée -> hant", function() {deepEqual( Stem("hantée"), "hant");});
test("hantées -> hant", function() {deepEqual( Stem("hantées"), "hant");});
test("happy -> happy", function() {deepEqual( Stem("happy"), "happy");});
test("harangua -> harangu", function() {deepEqual( Stem("harangua"), "harangu");});
test("haranguer -> harangu", function() {deepEqual( Stem("haranguer"), "harangu");});
test("harassés -> harass", function() {deepEqual( Stem("harassés"), "harass");});
test("hardes -> hard", function() {deepEqual( Stem("hardes"), "hard");});
test("hardi -> hard", function() {deepEqual( Stem("hardi"), "hard");});
test("hardie -> hard", function() {deepEqual( Stem("hardie"), "hard");});
test("hardies -> hard", function() {deepEqual( Stem("hardies"), "hard");});
test("hardiesse -> hardiess", function() {deepEqual( Stem("hardiesse"), "hardiess");});
test("hardiment -> hard", function() {deepEqual( Stem("hardiment"), "hard");});
test("hardis -> hard", function() {deepEqual( Stem("hardis"), "hard");});
test("harmonie -> harmon", function() {deepEqual( Stem("harmonie"), "harmon");});
test("harmonieusement -> harmoni", function() {deepEqual( Stem("harmonieusement"), "harmoni");});
test("harmonieux -> harmoni", function() {deepEqual( Stem("harmonieux"), "harmoni");});
test("harmoniques -> harmon", function() {deepEqual( Stem("harmoniques"), "harmon");});
test("harpe -> harp", function() {deepEqual( Stem("harpe"), "harp");});
test("hasard -> hasard", function() {deepEqual( Stem("hasard"), "hasard");});
test("hasarda -> hasard", function() {deepEqual( Stem("hasarda"), "hasard");});
test("hasardaient -> hasard", function() {deepEqual( Stem("hasardaient"), "hasard");});
test("hasarde -> hasard", function() {deepEqual( Stem("hasarde"), "hasard");});
test("hasardé -> hasard", function() {deepEqual( Stem("hasardé"), "hasard");});
test("hasarder -> hasard", function() {deepEqual( Stem("hasarder"), "hasard");});
test("hasardera -> hasard", function() {deepEqual( Stem("hasardera"), "hasard");});
test("hasardeuse -> hasard", function() {deepEqual( Stem("hasardeuse"), "hasard");});
test("hasardeuses -> hasard", function() {deepEqual( Stem("hasardeuses"), "hasard");});
test("hasardeux -> hasard", function() {deepEqual( Stem("hasardeux"), "hasard");});
test("hasards -> hasard", function() {deepEqual( Stem("hasards"), "hasard");});
test("hâta -> hât", function() {deepEqual( Stem("hâta"), "hât");});
test("hâtait -> hât", function() {deepEqual( Stem("hâtait"), "hât");});
test("hâte -> hât", function() {deepEqual( Stem("hâte"), "hât");});
test("hâté -> hât", function() {deepEqual( Stem("hâté"), "hât");});
test("hâter -> hât", function() {deepEqual( Stem("hâter"), "hât");});
test("hâtèrent -> hât", function() {deepEqual( Stem("hâtèrent"), "hât");});
test("hâtez -> hât", function() {deepEqual( Stem("hâtez"), "hât");});
test("hâtons -> hâton", function() {deepEqual( Stem("hâtons"), "hâton");});
test("haubans -> hauban", function() {deepEqual( Stem("haubans"), "hauban");});
test("haubert -> haubert", function() {deepEqual( Stem("haubert"), "haubert");});
test("haus -> haus", function() {deepEqual( Stem("haus"), "haus");});
test("haussant -> hauss", function() {deepEqual( Stem("haussant"), "hauss");});
test("haussé -> hauss", function() {deepEqual( Stem("haussé"), "hauss");});
test("haussement -> hauss", function() {deepEqual( Stem("haussement"), "hauss");});
test("haut -> haut", function() {deepEqual( Stem("haut"), "haut");});
test("hautain -> hautain", function() {deepEqual( Stem("hautain"), "hautain");});
test("hautaine -> hautain", function() {deepEqual( Stem("hautaine"), "hautain");});
test("haute -> haut", function() {deepEqual( Stem("haute"), "haut");});
test("hautement -> haut", function() {deepEqual( Stem("hautement"), "haut");});
test("hautes -> haut", function() {deepEqual( Stem("hautes"), "haut");});
test("hauteur -> hauteur", function() {deepEqual( Stem("hauteur"), "hauteur");});
test("hauteurs -> hauteur", function() {deepEqual( Stem("hauteurs"), "hauteur");});
test("hauts -> haut", function() {deepEqual( Stem("hauts"), "haut");});
test("havre -> havr", function() {deepEqual( Stem("havre"), "havr");});
test("hay -> hay", function() {deepEqual( Stem("hay"), "hay");});
test("hayez -> hai", function() {deepEqual( Stem("hayez"), "hai");});
test("he -> he", function() {deepEqual( Stem("he"), "he");});
test("hé -> hé", function() {deepEqual( Stem("hé"), "hé");});
test("heaviest -> heaviest", function() {deepEqual( Stem("heaviest"), "heaviest");});
test("hébété -> hébet", function() {deepEqual( Stem("hébété"), "hébet");});
test("hébétés -> hébet", function() {deepEqual( Stem("hébétés"), "hébet");});
test("hein -> hein", function() {deepEqual( Stem("hein"), "hein");});
test("héla -> hel", function() {deepEqual( Stem("héla"), "hel");});
test("hélas -> hel", function() {deepEqual( Stem("hélas"), "hel");});
test("hélène -> hélen", function() {deepEqual( Stem("hélène"), "hélen");});
test("hélice -> hélic", function() {deepEqual( Stem("hélice"), "hélic");});
test("héloïse -> héloïs", function() {deepEqual( Stem("héloïse"), "héloïs");});
test("helvétie -> helvet", function() {deepEqual( Stem("helvétie"), "helvet");});
test("hémisphère -> hémispher", function() {deepEqual( Stem("hémisphère"), "hémispher");});
test("henné -> hen", function() {deepEqual( Stem("henné"), "hen");});
test("hennissant -> hen", function() {deepEqual( Stem("hennissant"), "hen");});
test("hennissement -> hen", function() {deepEqual( Stem("hennissement"), "hen");});
test("hennissements -> hen", function() {deepEqual( Stem("hennissements"), "hen");});
test("hennit -> hen", function() {deepEqual( Stem("hennit"), "hen");});
test("henri -> henr", function() {deepEqual( Stem("henri"), "henr");});
test("henriet -> henriet", function() {deepEqual( Stem("henriet"), "henriet");});
test("henrietta -> henriet", function() {deepEqual( Stem("henrietta"), "henriet");});
test("henry -> henry", function() {deepEqual( Stem("henry"), "henry");});
test("her -> her", function() {deepEqual( Stem("her"), "her");});
test("héraut -> héraut", function() {deepEqual( Stem("héraut"), "héraut");});
test("hérauts -> héraut", function() {deepEqual( Stem("hérauts"), "héraut");});
test("herbe -> herb", function() {deepEqual( Stem("herbe"), "herb");});
test("herbes -> herb", function() {deepEqual( Stem("herbes"), "herb");});
test("hercule -> hercul", function() {deepEqual( Stem("hercule"), "hercul");});
test("herculéenne -> herculéen", function() {deepEqual( Stem("herculéenne"), "herculéen");});
test("hère -> her", function() {deepEqual( Stem("hère"), "her");});
test("héréditaire -> héréditair", function() {deepEqual( Stem("héréditaire"), "héréditair");});
test("hérédité -> héred", function() {deepEqual( Stem("hérédité"), "héred");});
test("hères -> her", function() {deepEqual( Stem("hères"), "her");});
test("hérésie -> héres", function() {deepEqual( Stem("hérésie"), "héres");});
test("hérésies -> héres", function() {deepEqual( Stem("hérésies"), "héres");});
test("hérisse -> her", function() {deepEqual( Stem("hérisse"), "her");});
test("hérissé -> hériss", function() {deepEqual( Stem("hérissé"), "hériss");});
test("hérissée -> hériss", function() {deepEqual( Stem("hérissée"), "hériss");});
test("hérissées -> hériss", function() {deepEqual( Stem("hérissées"), "hériss");});
test("hérissés -> hériss", function() {deepEqual( Stem("hérissés"), "hériss");});
test("héritage -> héritag", function() {deepEqual( Stem("héritage"), "héritag");});
test("hérité -> hérit", function() {deepEqual( Stem("hérité"), "hérit");});
test("héritier -> hériti", function() {deepEqual( Stem("héritier"), "hériti");});
test("héritière -> hériti", function() {deepEqual( Stem("héritière"), "hériti");});
test("hermétiquement -> hermet", function() {deepEqual( Stem("hermétiquement"), "hermet");});
test("hernani -> hernan", function() {deepEqual( Stem("hernani"), "hernan");});
test("hérodiade -> hérodiad", function() {deepEqual( Stem("hérodiade"), "hérodiad");});
test("hérodiades -> hérodiad", function() {deepEqual( Stem("hérodiades"), "hérodiad");});
test("héroïne -> héroïn", function() {deepEqual( Stem("héroïne"), "héroïn");});
test("héroïque -> héroïqu", function() {deepEqual( Stem("héroïque"), "héroïqu");});
test("héroïquement -> héroïqu", function() {deepEqual( Stem("héroïquement"), "héroïqu");});
test("héroïques -> héroïqu", function() {deepEqual( Stem("héroïques"), "héroïqu");});
test("héroïsme -> héroïsm", function() {deepEqual( Stem("héroïsme"), "héroïsm");});
test("héron -> héron", function() {deepEqual( Stem("héron"), "héron");});
test("héros -> héros", function() {deepEqual( Stem("héros"), "héros");});
test("hers -> her", function() {deepEqual( Stem("hers"), "her");});
test("hésita -> hésit", function() {deepEqual( Stem("hésita"), "hésit");});
test("hésitait -> hésit", function() {deepEqual( Stem("hésitait"), "hésit");});
test("hésitant -> hésit", function() {deepEqual( Stem("hésitant"), "hésit");});
test("hésitation -> hésit", function() {deepEqual( Stem("hésitation"), "hésit");});
test("hésite -> hésit", function() {deepEqual( Stem("hésite"), "hésit");});
test("hésité -> hésit", function() {deepEqual( Stem("hésité"), "hésit");});
test("hésiter -> hésit", function() {deepEqual( Stem("hésiter"), "hésit");});
test("hésiterais -> hésit", function() {deepEqual( Stem("hésiterais"), "hésit");});
test("hésiteront -> hésit", function() {deepEqual( Stem("hésiteront"), "hésit");});
test("hésitiez -> hésit", function() {deepEqual( Stem("hésitiez"), "hésit");});
test("hêtre -> hêtr", function() {deepEqual( Stem("hêtre"), "hêtr");});
test("hêtres -> hêtr", function() {deepEqual( Stem("hêtres"), "hêtr");});
test("heure -> heur", function() {deepEqual( Stem("heure"), "heur");});
test("heures -> heur", function() {deepEqual( Stem("heures"), "heur");});
test("heureuse -> heureux", function() {deepEqual( Stem("heureuse"), "heureux");});
test("heureusement -> heureux", function() {deepEqual( Stem("heureusement"), "heureux");});
test("heureuses -> heureux", function() {deepEqual( Stem("heureuses"), "heureux");});
test("heureux -> heureux", function() {deepEqual( Stem("heureux"), "heureux");});
test("heurtaient -> heurt", function() {deepEqual( Stem("heurtaient"), "heurt");});
test("heurte -> heurt", function() {deepEqual( Stem("heurte"), "heurt");});
test("heurter -> heurt", function() {deepEqual( Stem("heurter"), "heurt");});
test("hic -> hic", function() {deepEqual( Stem("hic"), "hic");});
test("hideuse -> hideux", function() {deepEqual( Stem("hideuse"), "hideux");});
test("hideuses -> hideux", function() {deepEqual( Stem("hideuses"), "hideux");});
test("hideux -> hideux", function() {deepEqual( Stem("hideux"), "hideux");});
test("hier -> hi", function() {deepEqual( Stem("hier"), "hi");});
test("hiérarchie -> hiérarch", function() {deepEqual( Stem("hiérarchie"), "hiérarch");});
test("hill -> hill", function() {deepEqual( Stem("hill"), "hill");});
test("himalaya -> himalai", function() {deepEqual( Stem("himalaya"), "himalai");});
test("hindous -> hindous", function() {deepEqual( Stem("hindous"), "hindous");});
test("hip -> hip", function() {deepEqual( Stem("hip"), "hip");});
test("hippolyte -> hippolyt", function() {deepEqual( Stem("hippolyte"), "hippolyt");});
test("his -> his", function() {deepEqual( Stem("his"), "his");});
test("hissa -> hiss", function() {deepEqual( Stem("hissa"), "hiss");});
test("hissé -> hiss", function() {deepEqual( Stem("hissé"), "hiss");});
test("hissées -> hiss", function() {deepEqual( Stem("hissées"), "hiss");});
test("histoire -> histoir", function() {deepEqual( Stem("histoire"), "histoir");});
test("histoires -> histoir", function() {deepEqual( Stem("histoires"), "histoir");});
test("historien -> historien", function() {deepEqual( Stem("historien"), "historien");});
test("historiens -> historien", function() {deepEqual( Stem("historiens"), "historien");});
test("historique -> histor", function() {deepEqual( Stem("historique"), "histor");});
test("historiques -> histor", function() {deepEqual( Stem("historiques"), "histor");});
test("histrion -> histrion", function() {deepEqual( Stem("histrion"), "histrion");});
test("hitch -> hitch", function() {deepEqual( Stem("hitch"), "hitch");});
test("hiver -> hiv", function() {deepEqual( Stem("hiver"), "hiv");});
test("ho -> ho", function() {deepEqual( Stem("ho"), "ho");});
test("hobbes -> hobb", function() {deepEqual( Stem("hobbes"), "hobb");});
test("hobereau -> hobereau", function() {deepEqual( Stem("hobereau"), "hobereau");});
test("hobereaux -> hobereau", function() {deepEqual( Stem("hobereaux"), "hobereau");});
test("hoc -> hoc", function() {deepEqual( Stem("hoc"), "hoc");});
test("hochant -> hoch", function() {deepEqual( Stem("hochant"), "hoch");});
test("hoche -> hoch", function() {deepEqual( Stem("hoche"), "hoch");});
test("holà -> holà", function() {deepEqual( Stem("holà"), "holà");});
test("holland -> holland", function() {deepEqual( Stem("holland"), "holland");});
test("hollandais -> holland", function() {deepEqual( Stem("hollandais"), "holland");});
test("hollandaises -> hollandais", function() {deepEqual( Stem("hollandaises"), "hollandais");});
test("hollande -> holland", function() {deepEqual( Stem("hollande"), "holland");});
test("homélie -> homel", function() {deepEqual( Stem("homélie"), "homel");});
test("homélies -> homel", function() {deepEqual( Stem("homélies"), "homel");});
test("homère -> homer", function() {deepEqual( Stem("homère"), "homer");});
test("hommage -> hommag", function() {deepEqual( Stem("hommage"), "hommag");});
test("hommages -> hommag", function() {deepEqual( Stem("hommages"), "hommag");});
test("homme -> homm", function() {deepEqual( Stem("homme"), "homm");});
test("hommes -> homm", function() {deepEqual( Stem("hommes"), "homm");});
test("hong -> hong", function() {deepEqual( Stem("hong"), "hong");});
test("hongrois -> hongrois", function() {deepEqual( Stem("hongrois"), "hongrois");});
test("honnête -> honnêt", function() {deepEqual( Stem("honnête"), "honnêt");});
test("honnêtes -> honnêt", function() {deepEqual( Stem("honnêtes"), "honnêt");});
test("honnêteté -> honnêtet", function() {deepEqual( Stem("honnêteté"), "honnêtet");});
test("honnêtetés -> honnêtet", function() {deepEqual( Stem("honnêtetés"), "honnêtet");});
test("honneur -> honneur", function() {deepEqual( Stem("honneur"), "honneur");});
test("honneurs -> honneur", function() {deepEqual( Stem("honneurs"), "honneur");});
test("honorabilité -> honor", function() {deepEqual( Stem("honorabilité"), "honor");});
test("honorable -> honor", function() {deepEqual( Stem("honorable"), "honor");});
test("honorables -> honor", function() {deepEqual( Stem("honorables"), "honor");});
test("honore -> honor", function() {deepEqual( Stem("honore"), "honor");});
test("honoré -> honor", function() {deepEqual( Stem("honoré"), "honor");});
test("honorée -> honor", function() {deepEqual( Stem("honorée"), "honor");});
test("honorent -> honorent", function() {deepEqual( Stem("honorent"), "honorent");});
test("honorer -> honor", function() {deepEqual( Stem("honorer"), "honor");});
test("honorera -> honor", function() {deepEqual( Stem("honorera"), "honor");});
test("honorés -> honor", function() {deepEqual( Stem("honorés"), "honor");});
test("honte -> hont", function() {deepEqual( Stem("honte"), "hont");});
test("honteuse -> honteux", function() {deepEqual( Stem("honteuse"), "honteux");});
test("honteusement -> honteux", function() {deepEqual( Stem("honteusement"), "honteux");});
test("honteux -> honteux", function() {deepEqual( Stem("honteux"), "honteux");});
test("honur -> honur", function() {deepEqual( Stem("honur"), "honur");});
test("hook -> hook", function() {deepEqual( Stem("hook"), "hook");});
test("hôpital -> hôpital", function() {deepEqual( Stem("hôpital"), "hôpital");});
test("hôpitaux -> hôpital", function() {deepEqual( Stem("hôpitaux"), "hôpital");});
test("horace -> horac", function() {deepEqual( Stem("horace"), "horac");});
test("horde -> hord", function() {deepEqual( Stem("horde"), "hord");});
test("horions -> horion", function() {deepEqual( Stem("horions"), "horion");});
test("horizon -> horizon", function() {deepEqual( Stem("horizon"), "horizon");});
test("horloge -> horlog", function() {deepEqual( Stem("horloge"), "horlog");});
test("horlogerie -> horloger", function() {deepEqual( Stem("horlogerie"), "horloger");});
test("horloges -> horlog", function() {deepEqual( Stem("horloges"), "horlog");});
test("horreur -> horreur", function() {deepEqual( Stem("horreur"), "horreur");});
test("horreurs -> horreur", function() {deepEqual( Stem("horreurs"), "horreur");});
test("horrible -> horribl", function() {deepEqual( Stem("horrible"), "horribl");});
test("horriblement -> horribl", function() {deepEqual( Stem("horriblement"), "horribl");});
test("horribles -> horribl", function() {deepEqual( Stem("horribles"), "horribl");});
test("hors -> hor", function() {deepEqual( Stem("hors"), "hor");});
test("hospice -> hospic", function() {deepEqual( Stem("hospice"), "hospic");});
test("hospitalité -> hospital", function() {deepEqual( Stem("hospitalité"), "hospital");});
test("hostie -> host", function() {deepEqual( Stem("hostie"), "host");});
test("hostile -> hostil", function() {deepEqual( Stem("hostile"), "hostil");});
test("hostiles -> hostil", function() {deepEqual( Stem("hostiles"), "hostil");});
test("hostilité -> hostil", function() {deepEqual( Stem("hostilité"), "hostil");});
test("hôte -> hôt", function() {deepEqual( Stem("hôte"), "hôt");});
test("hôtel -> hôtel", function() {deepEqual( Stem("hôtel"), "hôtel");});
test("hôtels -> hôtel", function() {deepEqual( Stem("hôtels"), "hôtel");});
test("hôtes -> hôt", function() {deepEqual( Stem("hôtes"), "hôt");});
test("hôtesse -> hôtess", function() {deepEqual( Stem("hôtesse"), "hôtess");});
test("hôtesses -> hôtess", function() {deepEqual( Stem("hôtesses"), "hôtess");});
test("hotte -> hott", function() {deepEqual( Stem("hotte"), "hott");});
test("hottentots -> hottentot", function() {deepEqual( Stem("hottentots"), "hottentot");});
test("hougly -> hougly", function() {deepEqual( Stem("hougly"), "hougly");});
test("houille -> houill", function() {deepEqual( Stem("houille"), "houill");});
test("houle -> houl", function() {deepEqual( Stem("houle"), "houl");});
test("houles -> houl", function() {deepEqual( Stem("houles"), "houl");});
test("houleuse -> houleux", function() {deepEqual( Stem("houleuse"), "houleux");});
test("housards -> housard", function() {deepEqual( Stem("housards"), "housard");});
test("house -> hous", function() {deepEqual( Stem("house"), "hous");});
test("housse -> houss", function() {deepEqual( Stem("housse"), "houss");});
test("how -> how", function() {deepEqual( Stem("how"), "how");});
test("hudson -> hudson", function() {deepEqual( Stem("hudson"), "hudson");});
test("hugo -> hugo", function() {deepEqual( Stem("hugo"), "hugo");});
test("hui -> hui", function() {deepEqual( Stem("hui"), "hui");});
test("huile -> huil", function() {deepEqual( Stem("huile"), "huil");});
test("huilé -> huil", function() {deepEqual( Stem("huilé"), "huil");});
test("huissier -> huissi", function() {deepEqual( Stem("huissier"), "huissi");});
test("huit -> huit", function() {deepEqual( Stem("huit"), "huit");});
test("huitième -> huitiem", function() {deepEqual( Stem("huitième"), "huitiem");});
test("huîtres -> huîtr", function() {deepEqual( Stem("huîtres"), "huîtr");});
test("humain -> humain", function() {deepEqual( Stem("humain"), "humain");});
test("humaine -> humain", function() {deepEqual( Stem("humaine"), "humain");});
test("humainement -> humain", function() {deepEqual( Stem("humainement"), "humain");});
test("humaines -> humain", function() {deepEqual( Stem("humaines"), "humain");});
test("humains -> humain", function() {deepEqual( Stem("humains"), "humain");});
test("humait -> hum", function() {deepEqual( Stem("humait"), "hum");});
test("humaniste -> human", function() {deepEqual( Stem("humaniste"), "human");});
test("humanité -> human", function() {deepEqual( Stem("humanité"), "human");});
test("humanités -> human", function() {deepEqual( Stem("humanités"), "human");});
test("humble -> humbl", function() {deepEqual( Stem("humble"), "humbl");});
test("humblement -> humbl", function() {deepEqual( Stem("humblement"), "humbl");});
test("humbles -> humbl", function() {deepEqual( Stem("humbles"), "humbl");});
test("humboldt -> humboldt", function() {deepEqual( Stem("humboldt"), "humboldt");});
test("hume -> hum", function() {deepEqual( Stem("hume"), "hum");});
test("humer -> hum", function() {deepEqual( Stem("humer"), "hum");});
test("humeur -> humeur", function() {deepEqual( Stem("humeur"), "humeur");});
test("humide -> humid", function() {deepEqual( Stem("humide"), "humid");});
test("humides -> humid", function() {deepEqual( Stem("humides"), "humid");});
test("humidité -> humid", function() {deepEqual( Stem("humidité"), "humid");});
test("humiliant -> humili", function() {deepEqual( Stem("humiliant"), "humili");});
test("humiliante -> humili", function() {deepEqual( Stem("humiliante"), "humili");});
test("humiliantes -> humili", function() {deepEqual( Stem("humiliantes"), "humili");});
test("humiliants -> humili", function() {deepEqual( Stem("humiliants"), "humili");});
test("humiliation -> humili", function() {deepEqual( Stem("humiliation"), "humili");});
test("humiliations -> humili", function() {deepEqual( Stem("humiliations"), "humili");});
test("humilie -> humil", function() {deepEqual( Stem("humilie"), "humil");});
test("humilié -> humili", function() {deepEqual( Stem("humilié"), "humili");});
test("humiliée -> humili", function() {deepEqual( Stem("humiliée"), "humili");});
test("humilient -> humilient", function() {deepEqual( Stem("humilient"), "humilient");});
test("humilier -> humili", function() {deepEqual( Stem("humilier"), "humili");});
test("humiliez -> humil", function() {deepEqual( Stem("humiliez"), "humil");});
test("humilité -> humil", function() {deepEqual( Stem("humilité"), "humil");});
test("hune -> hun", function() {deepEqual( Stem("hune"), "hun");});
test("huniers -> huni", function() {deepEqual( Stem("huniers"), "huni");});
test("hurlante -> hurl", function() {deepEqual( Stem("hurlante"), "hurl");});
test("hurlements -> hurl", function() {deepEqual( Stem("hurlements"), "hurl");});
test("hurlent -> hurlent", function() {deepEqual( Stem("hurlent"), "hurlent");});
test("hurler -> hurl", function() {deepEqual( Stem("hurler"), "hurl");});
test("hurrah -> hurrah", function() {deepEqual( Stem("hurrah"), "hurrah");});
test("hurrahs -> hurrah", function() {deepEqual( Stem("hurrahs"), "hurrah");});
test("hussard -> hussard", function() {deepEqual( Stem("hussard"), "hussard");});
test("hussarde -> hussard", function() {deepEqual( Stem("hussarde"), "hussard");});
test("hussards -> hussard", function() {deepEqual( Stem("hussards"), "hussard");});
test("hutte -> hutt", function() {deepEqual( Stem("hutte"), "hutt");});
test("huttes -> hutt", function() {deepEqual( Stem("huttes"), "hutt");});
test("hvram -> hvram", function() {deepEqual( Stem("hvram"), "hvram");});
test("hydrogène -> hydrogen", function() {deepEqual( Stem("hydrogène"), "hydrogen");});
test("hydrographique -> hydrograph", function() {deepEqual( Stem("hydrographique"), "hydrograph");});
test("hyères -> hyer", function() {deepEqual( Stem("hyères"), "hyer");});
test("hypocrisie -> hypocris", function() {deepEqual( Stem("hypocrisie"), "hypocris");});
test("hypocrisies -> hypocris", function() {deepEqual( Stem("hypocrisies"), "hypocris");});
test("hypocrite -> hypocrit", function() {deepEqual( Stem("hypocrite"), "hypocrit");});
test("hypocrites -> hypocrit", function() {deepEqual( Stem("hypocrites"), "hypocrit");});
test("hypogées -> hypog", function() {deepEqual( Stem("hypogées"), "hypog");});
test("hypothèse -> hypothes", function() {deepEqual( Stem("hypothèse"), "hypothes");});
test("i -> i", function() {deepEqual( Stem("i"), "i");});
test("iago -> iago", function() {deepEqual( Stem("iago"), "iago");});
test("ici -> ici", function() {deepEqual( Stem("ici"), "ici");});
test("ideal -> ideal", function() {deepEqual( Stem("ideal"), "ideal");});
test("idéal -> idéal", function() {deepEqual( Stem("idéal"), "idéal");});
test("idéale -> idéal", function() {deepEqual( Stem("idéale"), "idéal");});
test("idée -> idé", function() {deepEqual( Stem("idée"), "idé");});
test("idées -> idé", function() {deepEqual( Stem("idées"), "idé");});
test("identique -> ident", function() {deepEqual( Stem("identique"), "ident");});
test("identité -> ident", function() {deepEqual( Stem("identité"), "ident");});
test("idiots -> idiot", function() {deepEqual( Stem("idiots"), "idiot");});
test("idolâtrie -> idolâtr", function() {deepEqual( Stem("idolâtrie"), "idolâtr");});
test("idole -> idol", function() {deepEqual( Stem("idole"), "idol");});
test("ignares -> ignar", function() {deepEqual( Stem("ignares"), "ignar");});
test("ignes -> igne", function() {deepEqual( Stem("ignes"), "igne");});
test("ignoble -> ignobl", function() {deepEqual( Stem("ignoble"), "ignobl");});
test("ignobles -> ignobl", function() {deepEqual( Stem("ignobles"), "ignobl");});
test("ignominie -> ignomin", function() {deepEqual( Stem("ignominie"), "ignomin");});
test("ignoraient -> ignor", function() {deepEqual( Stem("ignoraient"), "ignor");});
test("ignorais -> ignor", function() {deepEqual( Stem("ignorais"), "ignor");});
test("ignorait -> ignor", function() {deepEqual( Stem("ignorait"), "ignor");});
test("ignorance -> ignor", function() {deepEqual( Stem("ignorance"), "ignor");});
test("ignorant -> ignor", function() {deepEqual( Stem("ignorant"), "ignor");});
test("ignorante -> ignor", function() {deepEqual( Stem("ignorante"), "ignor");});
test("ignore -> ignor", function() {deepEqual( Stem("ignore"), "ignor");});
test("ignorent -> ignorent", function() {deepEqual( Stem("ignorent"), "ignorent");});
test("ignorer -> ignor", function() {deepEqual( Stem("ignorer"), "ignor");});
test("ignores -> ignor", function() {deepEqual( Stem("ignores"), "ignor");});
test("ignoriez -> ignor", function() {deepEqual( Stem("ignoriez"), "ignor");});
test("ii -> ii", function() {deepEqual( Stem("ii"), "ii");});
test("iii -> iii", function() {deepEqual( Stem("iii"), "iii");});
test("il -> il", function() {deepEqual( Stem("il"), "il");});
test("île -> île", function() {deepEqual( Stem("île"), "île");});
test("îles -> île", function() {deepEqual( Stem("îles"), "île");});
test("illicites -> illicit", function() {deepEqual( Stem("illicites"), "illicit");});
test("illimité -> illim", function() {deepEqual( Stem("illimité"), "illim");});
test("illimitée -> illimit", function() {deepEqual( Stem("illimitée"), "illimit");});
test("illinois -> illinois", function() {deepEqual( Stem("illinois"), "illinois");});
test("illisible -> illisibl", function() {deepEqual( Stem("illisible"), "illisibl");});
test("illisibles -> illisibl", function() {deepEqual( Stem("illisibles"), "illisibl");});
test("illumina -> illumin", function() {deepEqual( Stem("illumina"), "illumin");});
test("illumination -> illumin", function() {deepEqual( Stem("illumination"), "illumin");});
test("illuminé -> illumin", function() {deepEqual( Stem("illuminé"), "illumin");});
test("illuminée -> illumin", function() {deepEqual( Stem("illuminée"), "illumin");});
test("illuminer -> illumin", function() {deepEqual( Stem("illuminer"), "illumin");});
test("illusion -> illus", function() {deepEqual( Stem("illusion"), "illus");});
test("illusions -> illus", function() {deepEqual( Stem("illusions"), "illus");});
test("illustrated -> illustrated", function() {deepEqual( Stem("illustrated"), "illustrated");});
test("illustration -> illustr", function() {deepEqual( Stem("illustration"), "illustr");});
test("illustre -> illustr", function() {deepEqual( Stem("illustre"), "illustr");});
test("illustrer -> illustr", function() {deepEqual( Stem("illustrer"), "illustr");});
test("illustrissime -> illustrissim", function() {deepEqual( Stem("illustrissime"), "illustrissim");});
test("îlot -> îlot", function() {deepEqual( Stem("îlot"), "îlot");});
test("îlots -> îlot", function() {deepEqual( Stem("îlots"), "îlot");});
test("ils -> il", function() {deepEqual( Stem("ils"), "il");});
test("image -> imag", function() {deepEqual( Stem("image"), "imag");});
test("images -> imag", function() {deepEqual( Stem("images"), "imag");});
test("imagina -> imagin", function() {deepEqual( Stem("imagina"), "imagin");});
test("imaginaient -> imagin", function() {deepEqual( Stem("imaginaient"), "imagin");});
test("imaginaire -> imaginair", function() {deepEqual( Stem("imaginaire"), "imaginair");});
test("imaginaires -> imaginair", function() {deepEqual( Stem("imaginaires"), "imaginair");});
test("imaginais -> imagin", function() {deepEqual( Stem("imaginais"), "imagin");});
test("imaginait -> imagin", function() {deepEqual( Stem("imaginait"), "imagin");});
test("imaginant -> imagin", function() {deepEqual( Stem("imaginant"), "imagin");});
test("imagination -> imagin", function() {deepEqual( Stem("imagination"), "imagin");});
test("imaginations -> imagin", function() {deepEqual( Stem("imaginations"), "imagin");});
test("imaginative -> imagin", function() {deepEqual( Stem("imaginative"), "imagin");});
test("imagine -> imagin", function() {deepEqual( Stem("imagine"), "imagin");});
test("imaginé -> imagin", function() {deepEqual( Stem("imaginé"), "imagin");});
test("imaginer -> imagin", function() {deepEqual( Stem("imaginer"), "imagin");});
test("imbécile -> imbécil", function() {deepEqual( Stem("imbécile"), "imbécil");});
test("imbéciles -> imbécil", function() {deepEqual( Stem("imbéciles"), "imbécil");});
test("imita -> imit", function() {deepEqual( Stem("imita"), "imit");});
test("imitait -> imit", function() {deepEqual( Stem("imitait"), "imit");});
test("imitant -> imit", function() {deepEqual( Stem("imitant"), "imit");});
test("imitation -> imit", function() {deepEqual( Stem("imitation"), "imit");});
test("imité -> imit", function() {deepEqual( Stem("imité"), "imit");});
test("imitées -> imit", function() {deepEqual( Stem("imitées"), "imit");});
test("imiter -> imit", function() {deepEqual( Stem("imiter"), "imit");});
test("imman -> imman", function() {deepEqual( Stem("imman"), "imman");});
test("immanquable -> immanqu", function() {deepEqual( Stem("immanquable"), "immanqu");});
test("immanquablement -> immanqu", function() {deepEqual( Stem("immanquablement"), "immanqu");});
test("immédiat -> immédiat", function() {deepEqual( Stem("immédiat"), "immédiat");});
test("immédiate -> immédiat", function() {deepEqual( Stem("immédiate"), "immédiat");});
test("immédiatement -> immédiat", function() {deepEqual( Stem("immédiatement"), "immédiat");});
test("immédiates -> immédiat", function() {deepEqual( Stem("immédiates"), "immédiat");});
test("immédiats -> immédiat", function() {deepEqual( Stem("immédiats"), "immédiat");});
test("immense -> immens", function() {deepEqual( Stem("immense"), "immens");});
test("immensément -> immens", function() {deepEqual( Stem("immensément"), "immens");});
test("immenses -> immens", function() {deepEqual( Stem("immenses"), "immens");});
test("immensité -> immens", function() {deepEqual( Stem("immensité"), "immens");});
test("imminence -> imminent", function() {deepEqual( Stem("imminence"), "imminent");});
test("imminent -> imminent", function() {deepEqual( Stem("imminent"), "imminent");});
test("immobile -> immobil", function() {deepEqual( Stem("immobile"), "immobil");});
test("immobiles -> immobil", function() {deepEqual( Stem("immobiles"), "immobil");});
test("immolé -> immol", function() {deepEqual( Stem("immolé"), "immol");});
test("immoler -> immol", function() {deepEqual( Stem("immoler"), "immol");});
test("immonde -> immond", function() {deepEqual( Stem("immonde"), "immond");});
test("immoral -> immoral", function() {deepEqual( Stem("immoral"), "immoral");});
test("immorales -> immoral", function() {deepEqual( Stem("immorales"), "immoral");});
test("immoralité -> immoral", function() {deepEqual( Stem("immoralité"), "immoral");});
test("immortalisé -> immortalis", function() {deepEqual( Stem("immortalisé"), "immortalis");});
test("immortaliser -> immortalis", function() {deepEqual( Stem("immortaliser"), "immortalis");});
test("immortel -> immortel", function() {deepEqual( Stem("immortel"), "immortel");});
test("immuable -> immuabl", function() {deepEqual( Stem("immuable"), "immuabl");});
test("imola -> imol", function() {deepEqual( Stem("imola"), "imol");});
test("impardonnable -> impardon", function() {deepEqual( Stem("impardonnable"), "impardon");});
test("impardonnables -> impardon", function() {deepEqual( Stem("impardonnables"), "impardon");});
test("imparfait -> imparf", function() {deepEqual( Stem("imparfait"), "imparf");});
test("imparfaite -> imparfait", function() {deepEqual( Stem("imparfaite"), "imparfait");});
test("imparfaitement -> imparfait", function() {deepEqual( Stem("imparfaitement"), "imparfait");});
test("impassibilité -> impassibil", function() {deepEqual( Stem("impassibilité"), "impassibil");});
test("impassible -> impassibl", function() {deepEqual( Stem("impassible"), "impassibl");});
test("impatience -> impatient", function() {deepEqual( Stem("impatience"), "impatient");});
test("impatient -> impatient", function() {deepEqual( Stem("impatient"), "impatient");});
test("impatienta -> impatient", function() {deepEqual( Stem("impatienta"), "impatient");});
test("impatientait -> impatient", function() {deepEqual( Stem("impatientait"), "impatient");});
test("impatientant -> impatient", function() {deepEqual( Stem("impatientant"), "impatient");});
test("impatientante -> impatient", function() {deepEqual( Stem("impatientante"), "impatient");});
test("impatiente -> impatient", function() {deepEqual( Stem("impatiente"), "impatient");});
test("impatienté -> impatient", function() {deepEqual( Stem("impatienté"), "impatient");});
test("impatientée -> impatient", function() {deepEqual( Stem("impatientée"), "impatient");});
test("impatienter -> impatient", function() {deepEqual( Stem("impatienter"), "impatient");});
test("impatientera -> impatient", function() {deepEqual( Stem("impatientera"), "impatient");});
test("impayable -> impai", function() {deepEqual( Stem("impayable"), "impai");});
test("impénétrable -> impénetr", function() {deepEqual( Stem("impénétrable"), "impénetr");});
test("impératif -> imper", function() {deepEqual( Stem("impératif"), "imper");});
test("impératrice -> imper", function() {deepEqual( Stem("impératrice"), "imper");});
test("imperceptibles -> imperceptibl", function() {deepEqual( Stem("imperceptibles"), "imperceptibl");});
test("imperfection -> imperfect", function() {deepEqual( Stem("imperfection"), "imperfect");});
test("impérial -> impérial", function() {deepEqual( Stem("impérial"), "impérial");});
test("impériale -> impérial", function() {deepEqual( Stem("impériale"), "impérial");});
test("impériales -> impérial", function() {deepEqual( Stem("impériales"), "impérial");});
test("impérieuse -> impéri", function() {deepEqual( Stem("impérieuse"), "impéri");});
test("impérieusement -> impéri", function() {deepEqual( Stem("impérieusement"), "impéri");});
test("impérieux -> impéri", function() {deepEqual( Stem("impérieux"), "impéri");});
test("impertinence -> impertinent", function() {deepEqual( Stem("impertinence"), "impertinent");});
test("impertinences -> impertinent", function() {deepEqual( Stem("impertinences"), "impertinent");});
test("impertinent -> impertinent", function() {deepEqual( Stem("impertinent"), "impertinent");});
test("impertinente -> impertinent", function() {deepEqual( Stem("impertinente"), "impertinent");});
test("impertinentes -> impertinent", function() {deepEqual( Stem("impertinentes"), "impertinent");});
test("imperturbable -> imperturb", function() {deepEqual( Stem("imperturbable"), "imperturb");});
test("imperturbablement -> imperturb", function() {deepEqual( Stem("imperturbablement"), "imperturb");});
test("impétueusement -> impétu", function() {deepEqual( Stem("impétueusement"), "impétu");});
test("impie -> impi", function() {deepEqual( Stem("impie"), "impi");});
test("impies -> impi", function() {deepEqual( Stem("impies"), "impi");});
test("impiété -> impiet", function() {deepEqual( Stem("impiété"), "impiet");});
test("impitoyable -> impitoi", function() {deepEqual( Stem("impitoyable"), "impitoi");});
test("impitoyablement -> impitoi", function() {deepEqual( Stem("impitoyablement"), "impitoi");});
test("implacable -> implac", function() {deepEqual( Stem("implacable"), "implac");});
test("implicite -> implicit", function() {deepEqual( Stem("implicite"), "implicit");});
test("implora -> implor", function() {deepEqual( Stem("implora"), "implor");});
test("implorer -> implor", function() {deepEqual( Stem("implorer"), "implor");});
test("impoli -> impol", function() {deepEqual( Stem("impoli"), "impol");});
test("impolie -> impol", function() {deepEqual( Stem("impolie"), "impol");});
test("impoliment -> impol", function() {deepEqual( Stem("impoliment"), "impol");});
test("importait -> import", function() {deepEqual( Stem("importait"), "import");});
test("importance -> import", function() {deepEqual( Stem("importance"), "import");});
test("important -> import", function() {deepEqual( Stem("important"), "import");});
test("importante -> import", function() {deepEqual( Stem("importante"), "import");});
test("importantes -> import", function() {deepEqual( Stem("importantes"), "import");});
test("importants -> import", function() {deepEqual( Stem("importants"), "import");});
test("importe -> import", function() {deepEqual( Stem("importe"), "import");});
test("importée -> import", function() {deepEqual( Stem("importée"), "import");});
test("importent -> importent", function() {deepEqual( Stem("importent"), "importent");});
test("importés -> import", function() {deepEqual( Stem("importés"), "import");});
test("importun -> importun", function() {deepEqual( Stem("importun"), "importun");});
test("importuna -> importun", function() {deepEqual( Stem("importuna"), "importun");});
test("importune -> importun", function() {deepEqual( Stem("importune"), "importun");});
test("importunités -> importun", function() {deepEqual( Stem("importunités"), "importun");});
test("importuns -> importun", function() {deepEqual( Stem("importuns"), "importun");});
test("imposa -> impos", function() {deepEqual( Stem("imposa"), "impos");});
test("imposaient -> impos", function() {deepEqual( Stem("imposaient"), "impos");});
test("imposait -> impos", function() {deepEqual( Stem("imposait"), "impos");});
test("imposant -> impos", function() {deepEqual( Stem("imposant"), "impos");});
test("imposante -> impos", function() {deepEqual( Stem("imposante"), "impos");});
test("impose -> impos", function() {deepEqual( Stem("impose"), "impos");});
test("imposé -> impos", function() {deepEqual( Stem("imposé"), "impos");});
test("imposée -> impos", function() {deepEqual( Stem("imposée"), "impos");});
test("imposées -> impos", function() {deepEqual( Stem("imposées"), "impos");});
test("imposent -> imposent", function() {deepEqual( Stem("imposent"), "imposent");});
test("imposer -> impos", function() {deepEqual( Stem("imposer"), "impos");});
test("imposera -> impos", function() {deepEqual( Stem("imposera"), "impos");});
test("imposèrent -> impos", function() {deepEqual( Stem("imposèrent"), "impos");});
test("imposés -> impos", function() {deepEqual( Stem("imposés"), "impos");});
test("impositions -> imposit", function() {deepEqual( Stem("impositions"), "imposit");});
test("impossibilité -> impossibil", function() {deepEqual( Stem("impossibilité"), "impossibil");});
test("impossible -> impossibl", function() {deepEqual( Stem("impossible"), "impossibl");});
test("impossibles -> impossibl", function() {deepEqual( Stem("impossibles"), "impossibl");});
test("impraticable -> impratic", function() {deepEqual( Stem("impraticable"), "impratic");});
test("imprécations -> imprec", function() {deepEqual( Stem("imprécations"), "imprec");});
test("imprégnait -> impregn", function() {deepEqual( Stem("imprégnait"), "impregn");});
test("imprégné -> impregn", function() {deepEqual( Stem("imprégné"), "impregn");});
test("impresario -> impresario", function() {deepEqual( Stem("impresario"), "impresario");});
test("imprescriptibles -> imprescriptibl", function() {deepEqual( Stem("imprescriptibles"), "imprescriptibl");});
test("impression -> impress", function() {deepEqual( Stem("impression"), "impress");});
test("impressionna -> impression", function() {deepEqual( Stem("impressionna"), "impression");});
test("impressionnait -> impression", function() {deepEqual( Stem("impressionnait"), "impression");});
test("impressions -> impress", function() {deepEqual( Stem("impressions"), "impress");});
test("imprévu -> imprévu", function() {deepEqual( Stem("imprévu"), "imprévu");});
test("imprévue -> imprévu", function() {deepEqual( Stem("imprévue"), "imprévu");});
test("imprévues -> imprévu", function() {deepEqual( Stem("imprévues"), "imprévu");});
test("imprima -> imprim", function() {deepEqual( Stem("imprima"), "imprim");});
test("imprimait -> imprim", function() {deepEqual( Stem("imprimait"), "imprim");});
test("imprime -> imprim", function() {deepEqual( Stem("imprime"), "imprim");});
test("imprimé -> imprim", function() {deepEqual( Stem("imprimé"), "imprim");});
test("imprimée -> imprim", function() {deepEqual( Stem("imprimée"), "imprim");});
test("imprimées -> imprim", function() {deepEqual( Stem("imprimées"), "imprim");});
test("imprimer -> imprim", function() {deepEqual( Stem("imprimer"), "imprim");});
test("imprimerie -> imprimer", function() {deepEqual( Stem("imprimerie"), "imprimer");});
test("imprimés -> imprim", function() {deepEqual( Stem("imprimés"), "imprim");});
test("imprimeur -> imprimeur", function() {deepEqual( Stem("imprimeur"), "imprimeur");});
test("imprimeurs -> imprimeur", function() {deepEqual( Stem("imprimeurs"), "imprimeur");});
test("improbable -> improb", function() {deepEqual( Stem("improbable"), "improb");});
test("improbables -> improb", function() {deepEqual( Stem("improbables"), "improb");});
test("impromptu -> impromptu", function() {deepEqual( Stem("impromptu"), "impromptu");});
test("impromptue -> impromptu", function() {deepEqual( Stem("impromptue"), "impromptu");});
test("impropre -> impropr", function() {deepEqual( Stem("impropre"), "impropr");});
test("improprement -> impropr", function() {deepEqual( Stem("improprement"), "impropr");});
test("improvisais -> improvis", function() {deepEqual( Stem("improvisais"), "improvis");});
test("improvisait -> improvis", function() {deepEqual( Stem("improvisait"), "improvis");});
test("improvisée -> improvis", function() {deepEqual( Stem("improvisée"), "improvis");});
test("improvisées -> improvis", function() {deepEqual( Stem("improvisées"), "improvis");});
test("improvises -> improvis", function() {deepEqual( Stem("improvises"), "improvis");});
test("improvisés -> improvis", function() {deepEqual( Stem("improvisés"), "improvis");});
test("improviste -> improv", function() {deepEqual( Stem("improviste"), "improv");});
test("imprudemment -> imprudent", function() {deepEqual( Stem("imprudemment"), "imprudent");});
test("imprudence -> imprudent", function() {deepEqual( Stem("imprudence"), "imprudent");});
test("imprudences -> imprudent", function() {deepEqual( Stem("imprudences"), "imprudent");});
test("imprudent -> imprudent", function() {deepEqual( Stem("imprudent"), "imprudent");});
test("imprudente -> imprudent", function() {deepEqual( Stem("imprudente"), "imprudent");});
test("imprudentes -> imprudent", function() {deepEqual( Stem("imprudentes"), "imprudent");});
test("imprudents -> imprudent", function() {deepEqual( Stem("imprudents"), "imprudent");});
test("impudence -> impudent", function() {deepEqual( Stem("impudence"), "impudent");});
test("impudent -> impudent", function() {deepEqual( Stem("impudent"), "impudent");});
test("impudents -> impudent", function() {deepEqual( Stem("impudents"), "impudent");});
test("impuissante -> impuiss", function() {deepEqual( Stem("impuissante"), "impuiss");});
test("impuissants -> impuiss", function() {deepEqual( Stem("impuissants"), "impuiss");});
test("impulsion -> impuls", function() {deepEqual( Stem("impulsion"), "impuls");});
test("impunément -> impun", function() {deepEqual( Stem("impunément"), "impun");});
test("impunité -> impun", function() {deepEqual( Stem("impunité"), "impun");});
test("imputant -> imput", function() {deepEqual( Stem("imputant"), "imput");});
test("imputations -> imput", function() {deepEqual( Stem("imputations"), "imput");});
test("imputées -> imput", function() {deepEqual( Stem("imputées"), "imput");});
test("imputer -> imput", function() {deepEqual( Stem("imputer"), "imput");});
test("in -> in", function() {deepEqual( Stem("in"), "in");});
test("ina -> ina", function() {deepEqual( Stem("ina"), "ina");});
test("inaccessible -> inaccessibl", function() {deepEqual( Stem("inaccessible"), "inaccessibl");});
test("inaccessibles -> inaccessibl", function() {deepEqual( Stem("inaccessibles"), "inaccessibl");});
test("inaccoutumé -> inaccoutum", function() {deepEqual( Stem("inaccoutumé"), "inaccoutum");});
test("inaccoutumée -> inaccoutum", function() {deepEqual( Stem("inaccoutumée"), "inaccoutum");});
test("inaccoutumées -> inaccoutum", function() {deepEqual( Stem("inaccoutumées"), "inaccoutum");});
test("inaction -> inact", function() {deepEqual( Stem("inaction"), "inact");});
test("inadmissible -> inadmissibl", function() {deepEqual( Stem("inadmissible"), "inadmissibl");});
test("inadmissibles -> inadmissibl", function() {deepEqual( Stem("inadmissibles"), "inadmissibl");});
test("inaltérable -> inalter", function() {deepEqual( Stem("inaltérable"), "inalter");});
test("inamovible -> inamovibl", function() {deepEqual( Stem("inamovible"), "inamovibl");});
test("inanimé -> inanim", function() {deepEqual( Stem("inanimé"), "inanim");});
test("inanimée -> inanim", function() {deepEqual( Stem("inanimée"), "inanim");});
test("inanimés -> inanim", function() {deepEqual( Stem("inanimés"), "inanim");});
test("inaperçu -> inaperçu", function() {deepEqual( Stem("inaperçu"), "inaperçu");});
test("inaperçue -> inaperçu", function() {deepEqual( Stem("inaperçue"), "inaperçu");});
test("inaperçues -> inaperçu", function() {deepEqual( Stem("inaperçues"), "inaperçu");});
test("inarticulés -> inarticul", function() {deepEqual( Stem("inarticulés"), "inarticul");});
test("inattaquable -> inattaqu", function() {deepEqual( Stem("inattaquable"), "inattaqu");});
test("inattaquables -> inattaqu", function() {deepEqual( Stem("inattaquables"), "inattaqu");});
test("inattendu -> inattendu", function() {deepEqual( Stem("inattendu"), "inattendu");});
test("inattendue -> inattendu", function() {deepEqual( Stem("inattendue"), "inattendu");});
test("inattention -> inattent", function() {deepEqual( Stem("inattention"), "inattent");});
test("inauguration -> inaugur", function() {deepEqual( Stem("inauguration"), "inaugur");});
test("inaugurer -> inaugur", function() {deepEqual( Stem("inaugurer"), "inaugur");});
test("incapable -> incap", function() {deepEqual( Stem("incapable"), "incap");});
test("incarne -> incarn", function() {deepEqual( Stem("incarne"), "incarn");});
test("incarnée -> incarn", function() {deepEqual( Stem("incarnée"), "incarn");});
test("incartade -> incartad", function() {deepEqual( Stem("incartade"), "incartad");});
test("incedo -> incedo", function() {deepEqual( Stem("incedo"), "incedo");});
test("incendiaires -> incendiair", function() {deepEqual( Stem("incendiaires"), "incendiair");});
test("incendie -> incend", function() {deepEqual( Stem("incendie"), "incend");});
test("incendies -> incend", function() {deepEqual( Stem("incendies"), "incend");});
test("incertain -> incertain", function() {deepEqual( Stem("incertain"), "incertain");});
test("incertaine -> incertain", function() {deepEqual( Stem("incertaine"), "incertain");});
test("incertains -> incertain", function() {deepEqual( Stem("incertains"), "incertain");});
test("incertitude -> incertitud", function() {deepEqual( Stem("incertitude"), "incertitud");});
test("incertitudes -> incertitud", function() {deepEqual( Stem("incertitudes"), "incertitud");});
test("incessamment -> incess", function() {deepEqual( Stem("incessamment"), "incess");});
test("incessant -> incess", function() {deepEqual( Stem("incessant"), "incess");});
test("incessants -> incess", function() {deepEqual( Stem("incessants"), "incess");});
test("inceste -> incest", function() {deepEqual( Stem("inceste"), "incest");});
test("incident -> incident", function() {deepEqual( Stem("incident"), "incident");});
test("incidenter -> incident", function() {deepEqual( Stem("incidenter"), "incident");});
test("incidents -> incident", function() {deepEqual( Stem("incidents"), "incident");});
test("incisif -> incis", function() {deepEqual( Stem("incisif"), "incis");});
test("incisions -> incis", function() {deepEqual( Stem("incisions"), "incis");});
test("incisive -> incis", function() {deepEqual( Stem("incisive"), "incis");});
test("incisives -> incis", function() {deepEqual( Stem("incisives"), "incis");});
test("inclina -> inclin", function() {deepEqual( Stem("inclina"), "inclin");});
test("inclinaient -> inclin", function() {deepEqual( Stem("inclinaient"), "inclin");});
test("inclination -> inclin", function() {deepEqual( Stem("inclination"), "inclin");});
test("incliné -> inclin", function() {deepEqual( Stem("incliné"), "inclin");});
test("inclinée -> inclin", function() {deepEqual( Stem("inclinée"), "inclin");});
test("inclinera -> inclin", function() {deepEqual( Stem("inclinera"), "inclin");});
test("inclus -> inclus", function() {deepEqual( Stem("inclus"), "inclus");});
test("incluse -> inclus", function() {deepEqual( Stem("incluse"), "inclus");});
test("incognito -> incognito", function() {deepEqual( Stem("incognito"), "incognito");});
test("incommensurable -> incommensur", function() {deepEqual( Stem("incommensurable"), "incommensur");});
test("incommode -> incommod", function() {deepEqual( Stem("incommode"), "incommod");});
test("incommodée -> incommod", function() {deepEqual( Stem("incommodée"), "incommod");});
test("incommodes -> incommod", function() {deepEqual( Stem("incommodes"), "incommod");});
test("incommodité -> incommod", function() {deepEqual( Stem("incommodité"), "incommod");});
test("incomodo -> incomodo", function() {deepEqual( Stem("incomodo"), "incomodo");});
test("incompatible -> incompatibl", function() {deepEqual( Stem("incompatible"), "incompatibl");});
test("incompatibles -> incompatibl", function() {deepEqual( Stem("incompatibles"), "incompatibl");});
test("incomplètes -> incomplet", function() {deepEqual( Stem("incomplètes"), "incomplet");});
test("incongruité -> incongru", function() {deepEqual( Stem("incongruité"), "incongru");});
test("inconnu -> inconnu", function() {deepEqual( Stem("inconnu"), "inconnu");});
test("inconnue -> inconnu", function() {deepEqual( Stem("inconnue"), "inconnu");});
test("inconnus -> inconnus", function() {deepEqual( Stem("inconnus"), "inconnus");});
test("inconsciemment -> inconscient", function() {deepEqual( Stem("inconsciemment"), "inconscient");});
test("inconsciente -> inconscient", function() {deepEqual( Stem("inconsciente"), "inconscient");});
test("inconsidérée -> inconsider", function() {deepEqual( Stem("inconsidérée"), "inconsider");});
test("inconsolable -> inconsol", function() {deepEqual( Stem("inconsolable"), "inconsol");});
test("inconstance -> inconst", function() {deepEqual( Stem("inconstance"), "inconst");});
test("inconstant -> inconst", function() {deepEqual( Stem("inconstant"), "inconst");});
test("inconstante -> inconst", function() {deepEqual( Stem("inconstante"), "inconst");});
test("incontestable -> incontest", function() {deepEqual( Stem("incontestable"), "incontest");});
test("incontestablement -> incontest", function() {deepEqual( Stem("incontestablement"), "incontest");});
test("inconvenance -> inconven", function() {deepEqual( Stem("inconvenance"), "inconven");});
test("inconvenant -> inconven", function() {deepEqual( Stem("inconvenant"), "inconven");});
test("inconvenante -> inconven", function() {deepEqual( Stem("inconvenante"), "inconven");});
test("inconvenantes -> inconven", function() {deepEqual( Stem("inconvenantes"), "inconven");});
test("inconvénient -> inconvénient", function() {deepEqual( Stem("inconvénient"), "inconvénient");});
test("inconvénients -> inconvénient", function() {deepEqual( Stem("inconvénients"), "inconvénient");});
test("incorporer -> incorpor", function() {deepEqual( Stem("incorporer"), "incorpor");});
test("incrédule -> incrédul", function() {deepEqual( Stem("incrédule"), "incrédul");});
test("incrédulité -> incrédul", function() {deepEqual( Stem("incrédulité"), "incrédul");});
test("incriminait -> incrimin", function() {deepEqual( Stem("incriminait"), "incrimin");});
test("incroyable -> incroi", function() {deepEqual( Stem("incroyable"), "incroi");});
test("incroyables -> incroi", function() {deepEqual( Stem("incroyables"), "incroi");});
test("incrusta -> incrust", function() {deepEqual( Stem("incrusta"), "incrust");});
test("incruster -> incrust", function() {deepEqual( Stem("incruster"), "incrust");});
test("incrustés -> incrust", function() {deepEqual( Stem("incrustés"), "incrust");});
test("incurie -> incur", function() {deepEqual( Stem("incurie"), "incur");});
test("inde -> inde", function() {deepEqual( Stem("inde"), "inde");});
test("indécence -> indécent", function() {deepEqual( Stem("indécence"), "indécent");});
test("indécent -> indécent", function() {deepEqual( Stem("indécent"), "indécent");});
test("indécentes -> indécent", function() {deepEqual( Stem("indécentes"), "indécent");});
test("indécents -> indécent", function() {deepEqual( Stem("indécents"), "indécent");});
test("indéchiffrable -> indéchiffr", function() {deepEqual( Stem("indéchiffrable"), "indéchiffr");});
test("indécis -> indec", function() {deepEqual( Stem("indécis"), "indec");});
test("indécise -> indécis", function() {deepEqual( Stem("indécise"), "indécis");});
test("indéfini -> indéfin", function() {deepEqual( Stem("indéfini"), "indéfin");});
test("indéfinissable -> indéfiniss", function() {deepEqual( Stem("indéfinissable"), "indéfiniss");});
test("indélicatesse -> indélicatess", function() {deepEqual( Stem("indélicatesse"), "indélicatess");});
test("indemne -> indemn", function() {deepEqual( Stem("indemne"), "indemn");});
test("indépendamment -> indépend", function() {deepEqual( Stem("indépendamment"), "indépend");});
test("independance -> independ", function() {deepEqual( Stem("independance"), "independ");});
test("indépendance -> indépend", function() {deepEqual( Stem("indépendance"), "indépend");});
test("indépendant -> indépend", function() {deepEqual( Stem("indépendant"), "indépend");});
test("indépendante -> indépend", function() {deepEqual( Stem("indépendante"), "indépend");});
test("indépendantes -> indépend", function() {deepEqual( Stem("indépendantes"), "indépend");});
test("indépendants -> indépend", function() {deepEqual( Stem("indépendants"), "indépend");});
test("indes -> inde", function() {deepEqual( Stem("indes"), "inde");});
test("indian -> indian", function() {deepEqual( Stem("indian"), "indian");});
test("indiana -> indian", function() {deepEqual( Stem("indiana"), "indian");});
test("indication -> indiqu", function() {deepEqual( Stem("indication"), "indiqu");});
test("indications -> indiqu", function() {deepEqual( Stem("indications"), "indiqu");});
test("indices -> indic", function() {deepEqual( Stem("indices"), "indic");});
test("indicible -> indicibl", function() {deepEqual( Stem("indicible"), "indicibl");});
test("indicibles -> indicibl", function() {deepEqual( Stem("indicibles"), "indicibl");});
test("indien -> indien", function() {deepEqual( Stem("indien"), "indien");});
test("indienne -> indien", function() {deepEqual( Stem("indienne"), "indien");});
test("indiens -> indien", function() {deepEqual( Stem("indiens"), "indien");});
test("indifférence -> indifférent", function() {deepEqual( Stem("indifférence"), "indifférent");});
test("indifférent -> indifférent", function() {deepEqual( Stem("indifférent"), "indifférent");});
test("indifférents -> indifférent", function() {deepEqual( Stem("indifférents"), "indifférent");});
test("indigène -> indigen", function() {deepEqual( Stem("indigène"), "indigen");});
test("indigènes -> indigen", function() {deepEqual( Stem("indigènes"), "indigen");});
test("indigna -> indign", function() {deepEqual( Stem("indigna"), "indign");});
test("indignation -> indign", function() {deepEqual( Stem("indignation"), "indign");});
test("indignations -> indign", function() {deepEqual( Stem("indignations"), "indign");});
test("indigne -> indign", function() {deepEqual( Stem("indigne"), "indign");});
test("indigné -> indign", function() {deepEqual( Stem("indigné"), "indign");});
test("indignée -> indign", function() {deepEqual( Stem("indignée"), "indign");});
test("indignement -> indign", function() {deepEqual( Stem("indignement"), "indign");});
test("indigner -> indign", function() {deepEqual( Stem("indigner"), "indign");});
test("indignes -> indign", function() {deepEqual( Stem("indignes"), "indign");});
test("indignés -> indign", function() {deepEqual( Stem("indignés"), "indign");});
test("indigo -> indigo", function() {deepEqual( Stem("indigo"), "indigo");});
test("indiqua -> indiqu", function() {deepEqual( Stem("indiqua"), "indiqu");});
test("indiquaient -> indiqu", function() {deepEqual( Stem("indiquaient"), "indiqu");});
test("indiquait -> indiqu", function() {deepEqual( Stem("indiquait"), "indiqu");});
test("indiquant -> indiqu", function() {deepEqual( Stem("indiquant"), "indiqu");});
test("indique -> indiqu", function() {deepEqual( Stem("indique"), "indiqu");});
test("indiqué -> indiqu", function() {deepEqual( Stem("indiqué"), "indiqu");});
test("indiquée -> indiqu", function() {deepEqual( Stem("indiquée"), "indiqu");});
test("indiquent -> indiquent", function() {deepEqual( Stem("indiquent"), "indiquent");});
test("indiquer -> indiqu", function() {deepEqual( Stem("indiquer"), "indiqu");});
test("indiquera -> indiqu", function() {deepEqual( Stem("indiquera"), "indiqu");});
test("indiquerait -> indiqu", function() {deepEqual( Stem("indiquerait"), "indiqu");});
test("indiqués -> indiqu", function() {deepEqual( Stem("indiqués"), "indiqu");});
test("indiquez -> indiqu", function() {deepEqual( Stem("indiquez"), "indiqu");});
test("indirect -> indirect", function() {deepEqual( Stem("indirect"), "indirect");});
test("indirecte -> indirect", function() {deepEqual( Stem("indirecte"), "indirect");});
test("indirectement -> indirect", function() {deepEqual( Stem("indirectement"), "indirect");});
test("indirectes -> indirect", function() {deepEqual( Stem("indirectes"), "indirect");});
test("indiscret -> indiscret", function() {deepEqual( Stem("indiscret"), "indiscret");});
test("indiscrète -> indiscret", function() {deepEqual( Stem("indiscrète"), "indiscret");});
test("indiscrètes -> indiscret", function() {deepEqual( Stem("indiscrètes"), "indiscret");});
test("indiscrétion -> indiscret", function() {deepEqual( Stem("indiscrétion"), "indiscret");});
test("indiscrétions -> indiscret", function() {deepEqual( Stem("indiscrétions"), "indiscret");});
test("indiscrets -> indiscret", function() {deepEqual( Stem("indiscrets"), "indiscret");});
test("indispensable -> indispens", function() {deepEqual( Stem("indispensable"), "indispens");});
test("indispensables -> indispens", function() {deepEqual( Stem("indispensables"), "indispens");});
test("indisposé -> indispos", function() {deepEqual( Stem("indisposé"), "indispos");});
test("indisposée -> indispos", function() {deepEqual( Stem("indisposée"), "indispos");});
test("indisposition -> indisposit", function() {deepEqual( Stem("indisposition"), "indisposit");});
test("indistincte -> indistinct", function() {deepEqual( Stem("indistincte"), "indistinct");});
test("individu -> individu", function() {deepEqual( Stem("individu"), "individu");});
test("individuelle -> individuel", function() {deepEqual( Stem("individuelle"), "individuel");});
test("individus -> individus", function() {deepEqual( Stem("individus"), "individus");});
test("indou -> indou", function() {deepEqual( Stem("indou"), "indou");});
test("indoue -> indou", function() {deepEqual( Stem("indoue"), "indou");});
test("indoues -> indou", function() {deepEqual( Stem("indoues"), "indou");});
test("indous -> indous", function() {deepEqual( Stem("indous"), "indous");});
test("indubitable -> indubit", function() {deepEqual( Stem("indubitable"), "indubit");});
test("indue -> indu", function() {deepEqual( Stem("indue"), "indu");});
test("indulgence -> indulgent", function() {deepEqual( Stem("indulgence"), "indulgent");});
test("indulgent -> indulgent", function() {deepEqual( Stem("indulgent"), "indulgent");});
test("indulgente -> indulgent", function() {deepEqual( Stem("indulgente"), "indulgent");});
test("indulgents -> indulgent", function() {deepEqual( Stem("indulgents"), "indulgent");});
test("indus -> indus", function() {deepEqual( Stem("indus"), "indus");});
test("industrie -> industr", function() {deepEqual( Stem("industrie"), "industr");});
test("industriel -> industriel", function() {deepEqual( Stem("industriel"), "industriel");});
test("industrielle -> industriel", function() {deepEqual( Stem("industrielle"), "industriel");});
test("industriels -> industriel", function() {deepEqual( Stem("industriels"), "industriel");});
test("industrieux -> industri", function() {deepEqual( Stem("industrieux"), "industri");});
test("inébranlable -> inébranl", function() {deepEqual( Stem("inébranlable"), "inébranl");});
test("inedit -> ined", function() {deepEqual( Stem("inedit"), "ined");});
test("inédit -> ined", function() {deepEqual( Stem("inédit"), "ined");});
test("ineffaçable -> ineffac", function() {deepEqual( Stem("ineffaçable"), "ineffac");});
test("inégal -> inégal", function() {deepEqual( Stem("inégal"), "inégal");});
test("inégalement -> inégal", function() {deepEqual( Stem("inégalement"), "inégal");});
test("inégales -> inégal", function() {deepEqual( Stem("inégales"), "inégal");});
test("inélégantes -> inéleg", function() {deepEqual( Stem("inélégantes"), "inéleg");});
test("inéprouvé -> inéprouv", function() {deepEqual( Stem("inéprouvé"), "inéprouv");});
test("inepte -> inept", function() {deepEqual( Stem("inepte"), "inept");});
test("ineptes -> inept", function() {deepEqual( Stem("ineptes"), "inept");});
test("inépuisable -> inépuis", function() {deepEqual( Stem("inépuisable"), "inépuis");});
test("inerte -> inert", function() {deepEqual( Stem("inerte"), "inert");});
test("inespéré -> inesper", function() {deepEqual( Stem("inespéré"), "inesper");});
test("inévitablement -> inévit", function() {deepEqual( Stem("inévitablement"), "inévit");});
test("inévitables -> inévit", function() {deepEqual( Stem("inévitables"), "inévit");});
test("inexactitude -> inexactitud", function() {deepEqual( Stem("inexactitude"), "inexactitud");});
test("inexécutable -> inexécut", function() {deepEqual( Stem("inexécutable"), "inexécut");});
test("inexorable -> inexor", function() {deepEqual( Stem("inexorable"), "inexor");});
test("inexpérimenté -> inexpériment", function() {deepEqual( Stem("inexpérimenté"), "inexpériment");});
test("inexplicable -> inexplic", function() {deepEqual( Stem("inexplicable"), "inexplic");});
test("inexprimable -> inexprim", function() {deepEqual( Stem("inexprimable"), "inexprim");});
test("inexprimables -> inexprim", function() {deepEqual( Stem("inexprimables"), "inexprim");});
test("inextricable -> inextric", function() {deepEqual( Stem("inextricable"), "inextric");});
test("infâme -> infâm", function() {deepEqual( Stem("infâme"), "infâm");});
test("infâmes -> infâm", function() {deepEqual( Stem("infâmes"), "infâm");});
test("infamie -> infam", function() {deepEqual( Stem("infamie"), "infam");});
test("infamies -> infam", function() {deepEqual( Stem("infamies"), "infam");});
test("infanterie -> infanter", function() {deepEqual( Stem("infanterie"), "infanter");});
test("infatigable -> infatig", function() {deepEqual( Stem("infatigable"), "infatig");});
test("inférieur -> inférieur", function() {deepEqual( Stem("inférieur"), "inférieur");});
test("inférieure -> inférieur", function() {deepEqual( Stem("inférieure"), "inférieur");});
test("inférieures -> inférieur", function() {deepEqual( Stem("inférieures"), "inférieur");});
test("inférieurs -> inférieur", function() {deepEqual( Stem("inférieurs"), "inférieur");});
test("infériorité -> inférior", function() {deepEqual( Stem("infériorité"), "inférior");});
test("infernale -> infernal", function() {deepEqual( Stem("infernale"), "infernal");});
test("infidèle -> infidel", function() {deepEqual( Stem("infidèle"), "infidel");});
test("infidélité -> infidel", function() {deepEqual( Stem("infidélité"), "infidel");});
test("infini -> infin", function() {deepEqual( Stem("infini"), "infin");});
test("infinie -> infin", function() {deepEqual( Stem("infinie"), "infin");});
test("infinies -> infin", function() {deepEqual( Stem("infinies"), "infin");});
test("infiniment -> infin", function() {deepEqual( Stem("infiniment"), "infin");});
test("infinis -> infin", function() {deepEqual( Stem("infinis"), "infin");});
test("infinité -> infin", function() {deepEqual( Stem("infinité"), "infin");});
test("infirmerie -> infirmer", function() {deepEqual( Stem("infirmerie"), "infirmer");});
test("infirmités -> infirm", function() {deepEqual( Stem("infirmités"), "infirm");});
test("inflammation -> inflamm", function() {deepEqual( Stem("inflammation"), "inflamm");});
test("infléchit -> inflech", function() {deepEqual( Stem("infléchit"), "inflech");});
test("infligé -> inflig", function() {deepEqual( Stem("infligé"), "inflig");});
test("infligée -> inflig", function() {deepEqual( Stem("infligée"), "inflig");});
test("infliger -> inflig", function() {deepEqual( Stem("infliger"), "inflig");});
test("influence -> influenc", function() {deepEqual( Stem("influence"), "influenc");});
test("influencer -> influenc", function() {deepEqual( Stem("influencer"), "influenc");});
test("influent -> influent", function() {deepEqual( Stem("influent"), "influent");});
test("influents -> influent", function() {deepEqual( Stem("influents"), "influent");});
test("influer -> influ", function() {deepEqual( Stem("influer"), "influ");});
test("informa -> inform", function() {deepEqual( Stem("informa"), "inform");});
test("informait -> inform", function() {deepEqual( Stem("informait"), "inform");});
test("informations -> inform", function() {deepEqual( Stem("informations"), "inform");});
test("informée -> inform", function() {deepEqual( Stem("informée"), "inform");});
test("informes -> inform", function() {deepEqual( Stem("informes"), "inform");});
test("informés -> inform", function() {deepEqual( Stem("informés"), "inform");});
test("infortune -> infortun", function() {deepEqual( Stem("infortune"), "infortun");});
test("infortuné -> infortun", function() {deepEqual( Stem("infortuné"), "infortun");});
test("infortunée -> infortun", function() {deepEqual( Stem("infortunée"), "infortun");});
test("infortunes -> infortun", function() {deepEqual( Stem("infortunes"), "infortun");});
test("infortunés -> infortun", function() {deepEqual( Stem("infortunés"), "infortun");});
test("infraction -> infract", function() {deepEqual( Stem("infraction"), "infract");});
test("infusion -> infus", function() {deepEqual( Stem("infusion"), "infus");});
test("ingénieur -> ingénieur", function() {deepEqual( Stem("ingénieur"), "ingénieur");});
test("ingénieurs -> ingénieur", function() {deepEqual( Stem("ingénieurs"), "ingénieur");});
test("ingénieuse -> ingéni", function() {deepEqual( Stem("ingénieuse"), "ingéni");});
test("ingénieusement -> ingéni", function() {deepEqual( Stem("ingénieusement"), "ingéni");});
test("ingénieuses -> ingéni", function() {deepEqual( Stem("ingénieuses"), "ingéni");});
test("ingénieux -> ingéni", function() {deepEqual( Stem("ingénieux"), "ingéni");});
test("ingénu -> ingénu", function() {deepEqual( Stem("ingénu"), "ingénu");});
test("ingrat -> ingrat", function() {deepEqual( Stem("ingrat"), "ingrat");});
test("ingrate -> ingrat", function() {deepEqual( Stem("ingrate"), "ingrat");});
test("ingratitude -> ingratitud", function() {deepEqual( Stem("ingratitude"), "ingratitud");});
test("inhabileté -> inhabilet", function() {deepEqual( Stem("inhabileté"), "inhabilet");});
test("inhabitée -> inhabit", function() {deepEqual( Stem("inhabitée"), "inhabit");});
test("inhalation -> inhal", function() {deepEqual( Stem("inhalation"), "inhal");});
test("inhérent -> inhérent", function() {deepEqual( Stem("inhérent"), "inhérent");});
test("inhérente -> inhérent", function() {deepEqual( Stem("inhérente"), "inhérent");});
test("inhumaine -> inhumain", function() {deepEqual( Stem("inhumaine"), "inhumain");});
test("inhumé -> inhum", function() {deepEqual( Stem("inhumé"), "inhum");});
test("inintelligible -> inintelligibl", function() {deepEqual( Stem("inintelligible"), "inintelligibl");});
test("iniques -> iniqu", function() {deepEqual( Stem("iniques"), "iniqu");});
test("iniquité -> iniqu", function() {deepEqual( Stem("iniquité"), "iniqu");});
test("initiative -> initi", function() {deepEqual( Stem("initiative"), "initi");});
test("initièrent -> initi", function() {deepEqual( Stem("initièrent"), "initi");});
test("injure -> injur", function() {deepEqual( Stem("injure"), "injur");});
test("injures -> injur", function() {deepEqual( Stem("injures"), "injur");});
test("injurié -> injuri", function() {deepEqual( Stem("injurié"), "injuri");});
test("injurieuse -> injuri", function() {deepEqual( Stem("injurieuse"), "injuri");});
test("injurieuses -> injuri", function() {deepEqual( Stem("injurieuses"), "injuri");});
test("injurieux -> injuri", function() {deepEqual( Stem("injurieux"), "injuri");});
test("injuste -> injust", function() {deepEqual( Stem("injuste"), "injust");});
test("injustement -> injust", function() {deepEqual( Stem("injustement"), "injust");});
test("injustes -> injust", function() {deepEqual( Stem("injustes"), "injust");});
test("injustice -> injustic", function() {deepEqual( Stem("injustice"), "injustic");});
test("injustices -> injustic", function() {deepEqual( Stem("injustices"), "injustic");});
test("inn -> inn", function() {deepEqual( Stem("inn"), "inn");});
test("inné -> inné", function() {deepEqual( Stem("inné"), "inné");});
test("innée -> inné", function() {deepEqual( Stem("innée"), "inné");});
test("innocemment -> innocent", function() {deepEqual( Stem("innocemment"), "innocent");});
test("innocence -> innocent", function() {deepEqual( Stem("innocence"), "innocent");});
test("innocent -> innocent", function() {deepEqual( Stem("innocent"), "innocent");});
test("innocente -> innocent", function() {deepEqual( Stem("innocente"), "innocent");});
test("innocentes -> innocent", function() {deepEqual( Stem("innocentes"), "innocent");});
test("innombrable -> innombr", function() {deepEqual( Stem("innombrable"), "innombr");});
test("innombrables -> innombr", function() {deepEqual( Stem("innombrables"), "innombr");});
test("innovation -> innov", function() {deepEqual( Stem("innovation"), "innov");});
test("inoccupées -> inoccup", function() {deepEqual( Stem("inoccupées"), "inoccup");});
test("inoculé -> inocul", function() {deepEqual( Stem("inoculé"), "inocul");});
test("inoffensif -> inoffens", function() {deepEqual( Stem("inoffensif"), "inoffens");});
test("inondaient -> inond", function() {deepEqual( Stem("inondaient"), "inond");});
test("inondait -> inond", function() {deepEqual( Stem("inondait"), "inond");});
test("inondation -> inond", function() {deepEqual( Stem("inondation"), "inond");});
test("inondé -> inond", function() {deepEqual( Stem("inondé"), "inond");});
test("inondée -> inond", function() {deepEqual( Stem("inondée"), "inond");});
test("inondées -> inond", function() {deepEqual( Stem("inondées"), "inond");});
test("inonder -> inond", function() {deepEqual( Stem("inonder"), "inond");});
test("inondèrent -> inond", function() {deepEqual( Stem("inondèrent"), "inond");});
test("inondés -> inond", function() {deepEqual( Stem("inondés"), "inond");});
test("inopinément -> inopin", function() {deepEqual( Stem("inopinément"), "inopin");});
test("inopportunes -> inopportun", function() {deepEqual( Stem("inopportunes"), "inopportun");});
test("inopportuns -> inopportun", function() {deepEqual( Stem("inopportuns"), "inopportun");});
test("inouï -> inouï", function() {deepEqual( Stem("inouï"), "inouï");});
test("inouïs -> inouï", function() {deepEqual( Stem("inouïs"), "inouï");});
test("inqualifiable -> inqualifi", function() {deepEqual( Stem("inqualifiable"), "inqualifi");});
test("inquiet -> inquiet", function() {deepEqual( Stem("inquiet"), "inquiet");});
test("inquiéta -> inquiet", function() {deepEqual( Stem("inquiéta"), "inquiet");});
test("inquiétait -> inquiet", function() {deepEqual( Stem("inquiétait"), "inquiet");});
test("inquiétant -> inquiet", function() {deepEqual( Stem("inquiétant"), "inquiet");});
test("inquiétantes -> inquiet", function() {deepEqual( Stem("inquiétantes"), "inquiet");});
test("inquiétants -> inquiet", function() {deepEqual( Stem("inquiétants"), "inquiet");});
test("inquiète -> inquiet", function() {deepEqual( Stem("inquiète"), "inquiet");});
test("inquiéter -> inquiet", function() {deepEqual( Stem("inquiéter"), "inquiet");});
test("inquiets -> inquiet", function() {deepEqual( Stem("inquiets"), "inquiet");});
test("inquiétude -> inquiétud", function() {deepEqual( Stem("inquiétude"), "inquiétud");});
test("inquiétudes -> inquiétud", function() {deepEqual( Stem("inquiétudes"), "inquiétud");});
test("inquisiteurs -> inquisiteur", function() {deepEqual( Stem("inquisiteurs"), "inquisiteur");});
test("inquisition -> inquisit", function() {deepEqual( Stem("inquisition"), "inquisit");});
test("insaisissable -> insaisiss", function() {deepEqual( Stem("insaisissable"), "insaisiss");});
test("inscription -> inscript", function() {deepEqual( Stem("inscription"), "inscript");});
test("inscriptions -> inscript", function() {deepEqual( Stem("inscriptions"), "inscript");});
test("inscrire -> inscrir", function() {deepEqual( Stem("inscrire"), "inscrir");});
test("inscrit -> inscrit", function() {deepEqual( Stem("inscrit"), "inscrit");});
test("inscrits -> inscrit", function() {deepEqual( Stem("inscrits"), "inscrit");});
test("inscrivit -> inscriv", function() {deepEqual( Stem("inscrivit"), "inscriv");});
test("insectes -> insect", function() {deepEqual( Stem("insectes"), "insect");});
test("insensé -> insens", function() {deepEqual( Stem("insensé"), "insens");});
test("insensée -> insens", function() {deepEqual( Stem("insensée"), "insens");});
test("insensés -> insens", function() {deepEqual( Stem("insensés"), "insens");});
test("insensibilité -> insensibil", function() {deepEqual( Stem("insensibilité"), "insensibil");});
test("insensible -> insensibl", function() {deepEqual( Stem("insensible"), "insensibl");});
test("insensiblement -> insensibl", function() {deepEqual( Stem("insensiblement"), "insensibl");});
test("insensibles -> insensibl", function() {deepEqual( Stem("insensibles"), "insensibl");});
test("inséparable -> insépar", function() {deepEqual( Stem("inséparable"), "insépar");});
test("insérer -> inser", function() {deepEqual( Stem("insérer"), "inser");});
test("insigne -> insign", function() {deepEqual( Stem("insigne"), "insign");});
test("insignes -> insign", function() {deepEqual( Stem("insignes"), "insign");});
test("insignifiance -> insignifi", function() {deepEqual( Stem("insignifiance"), "insignifi");});
test("insignifiant -> insignifi", function() {deepEqual( Stem("insignifiant"), "insignifi");});
test("insignifiante -> insignifi", function() {deepEqual( Stem("insignifiante"), "insignifi");});
test("insignifiants -> insignifi", function() {deepEqual( Stem("insignifiants"), "insignifi");});
test("insinuera -> insinu", function() {deepEqual( Stem("insinuera"), "insinu");});
test("insipide -> insipid", function() {deepEqual( Stem("insipide"), "insipid");});
test("insipides -> insipid", function() {deepEqual( Stem("insipides"), "insipid");});
test("insista -> insist", function() {deepEqual( Stem("insista"), "insist");});
test("insistait -> insist", function() {deepEqual( Stem("insistait"), "insist");});
test("insistance -> insist", function() {deepEqual( Stem("insistance"), "insist");});
test("insistant -> insist", function() {deepEqual( Stem("insistant"), "insist");});
test("insiste -> insist", function() {deepEqual( Stem("insiste"), "insist");});
test("insisté -> insist", function() {deepEqual( Stem("insisté"), "insist");});
test("insister -> insist", function() {deepEqual( Stem("insister"), "insist");});
test("insociable -> insoci", function() {deepEqual( Stem("insociable"), "insoci");});
test("insolemment -> insolent", function() {deepEqual( Stem("insolemment"), "insolent");});
test("insolence -> insolent", function() {deepEqual( Stem("insolence"), "insolent");});
test("insolences -> insolent", function() {deepEqual( Stem("insolences"), "insolent");});
test("insolent -> insolent", function() {deepEqual( Stem("insolent"), "insolent");});
test("insolente -> insolent", function() {deepEqual( Stem("insolente"), "insolent");});
test("insolents -> insolent", function() {deepEqual( Stem("insolents"), "insolent");});
test("insolite -> insolit", function() {deepEqual( Stem("insolite"), "insolit");});
test("insolites -> insolit", function() {deepEqual( Stem("insolites"), "insolit");});
test("insouciance -> insouci", function() {deepEqual( Stem("insouciance"), "insouci");});
test("insouciant -> insouci", function() {deepEqual( Stem("insouciant"), "insouci");});
test("inspecteur -> inspecteur", function() {deepEqual( Stem("inspecteur"), "inspecteur");});
test("inspecteurs -> inspecteur", function() {deepEqual( Stem("inspecteurs"), "inspecteur");});
test("inspection -> inspect", function() {deepEqual( Stem("inspection"), "inspect");});
test("inspira -> inspir", function() {deepEqual( Stem("inspira"), "inspir");});
test("inspiraient -> inspir", function() {deepEqual( Stem("inspiraient"), "inspir");});
test("inspirait -> inspir", function() {deepEqual( Stem("inspirait"), "inspir");});
test("inspirant -> inspir", function() {deepEqual( Stem("inspirant"), "inspir");});
test("inspiration -> inspir", function() {deepEqual( Stem("inspiration"), "inspir");});
test("inspirations -> inspir", function() {deepEqual( Stem("inspirations"), "inspir");});
test("inspire -> inspir", function() {deepEqual( Stem("inspire"), "inspir");});
test("inspiré -> inspir", function() {deepEqual( Stem("inspiré"), "inspir");});
test("inspirée -> inspir", function() {deepEqual( Stem("inspirée"), "inspir");});
test("inspirées -> inspir", function() {deepEqual( Stem("inspirées"), "inspir");});
test("inspirent -> inspirent", function() {deepEqual( Stem("inspirent"), "inspirent");});
test("inspirer -> inspir", function() {deepEqual( Stem("inspirer"), "inspir");});
test("inspirerait -> inspir", function() {deepEqual( Stem("inspirerait"), "inspir");});
test("inspirèrent -> inspir", function() {deepEqual( Stem("inspirèrent"), "inspir");});
test("inspires -> inspir", function() {deepEqual( Stem("inspires"), "inspir");});
test("inspirés -> inspir", function() {deepEqual( Stem("inspirés"), "inspir");});
test("inspirez -> inspir", function() {deepEqual( Stem("inspirez"), "inspir");});
test("instable -> instabl", function() {deepEqual( Stem("instable"), "instabl");});
test("installation -> install", function() {deepEqual( Stem("installation"), "install");});
test("installé -> install", function() {deepEqual( Stem("installé"), "install");});
test("installée -> install", function() {deepEqual( Stem("installée"), "install");});
test("installer -> install", function() {deepEqual( Stem("installer"), "install");});
test("installèrent -> install", function() {deepEqual( Stem("installèrent"), "install");});
test("installés -> install", function() {deepEqual( Stem("installés"), "install");});
test("instances -> instanc", function() {deepEqual( Stem("instances"), "instanc");});
test("instant -> instant", function() {deepEqual( Stem("instant"), "instant");});
test("instantané -> instantan", function() {deepEqual( Stem("instantané"), "instantan");});
test("instantanément -> instantan", function() {deepEqual( Stem("instantanément"), "instantan");});
test("instante -> instant", function() {deepEqual( Stem("instante"), "instant");});
test("instants -> instant", function() {deepEqual( Stem("instants"), "instant");});
test("instar -> instar", function() {deepEqual( Stem("instar"), "instar");});
test("instinct -> instinct", function() {deepEqual( Stem("instinct"), "instinct");});
test("instinctif -> instinct", function() {deepEqual( Stem("instinctif"), "instinct");});
test("instinctivement -> instinct", function() {deepEqual( Stem("instinctivement"), "instinct");});
test("institution -> institu", function() {deepEqual( Stem("institution"), "institu");});
test("institutions -> institu", function() {deepEqual( Stem("institutions"), "institu");});
test("instructif -> instruct", function() {deepEqual( Stem("instructif"), "instruct");});
test("instruction -> instruct", function() {deepEqual( Stem("instruction"), "instruct");});
test("instructions -> instruct", function() {deepEqual( Stem("instructions"), "instruct");});
test("instruire -> instruir", function() {deepEqual( Stem("instruire"), "instruir");});
test("instruisait -> instruis", function() {deepEqual( Stem("instruisait"), "instruis");});
test("instruit -> instruit", function() {deepEqual( Stem("instruit"), "instruit");});
test("instrument -> instrument", function() {deepEqual( Stem("instrument"), "instrument");});
test("instruments -> instrument", function() {deepEqual( Stem("instruments"), "instrument");});
test("insu -> insu", function() {deepEqual( Stem("insu"), "insu");});
test("insuccès -> insucces", function() {deepEqual( Stem("insuccès"), "insucces");});
test("insuffisant -> insuffis", function() {deepEqual( Stem("insuffisant"), "insuffis");});
test("insuffisante -> insuffis", function() {deepEqual( Stem("insuffisante"), "insuffis");});
test("insuffisantes -> insuffis", function() {deepEqual( Stem("insuffisantes"), "insuffis");});
test("insulta -> insult", function() {deepEqual( Stem("insulta"), "insult");});
test("insultant -> insult", function() {deepEqual( Stem("insultant"), "insult");});
test("insultante -> insult", function() {deepEqual( Stem("insultante"), "insult");});
test("insulte -> insult", function() {deepEqual( Stem("insulte"), "insult");});
test("insulté -> insult", function() {deepEqual( Stem("insulté"), "insult");});
test("insulter -> insult", function() {deepEqual( Stem("insulter"), "insult");});
test("insultes -> insult", function() {deepEqual( Stem("insultes"), "insult");});
test("insulteur -> insulteur", function() {deepEqual( Stem("insulteur"), "insulteur");});
test("insupportable -> insupport", function() {deepEqual( Stem("insupportable"), "insupport");});
test("insupportables -> insupport", function() {deepEqual( Stem("insupportables"), "insupport");});
test("insurmontable -> insurmont", function() {deepEqual( Stem("insurmontable"), "insurmont");});
test("insurmontables -> insurmont", function() {deepEqual( Stem("insurmontables"), "insurmont");});
test("insurrection -> insurrect", function() {deepEqual( Stem("insurrection"), "insurrect");});
test("intact -> intact", function() {deepEqual( Stem("intact"), "intact");});
test("intègres -> integr", function() {deepEqual( Stem("intègres"), "integr");});
test("intellectuel -> intellectuel", function() {deepEqual( Stem("intellectuel"), "intellectuel");});
test("intellectuelle -> intellectuel", function() {deepEqual( Stem("intellectuelle"), "intellectuel");});
test("intelligence -> intelligent", function() {deepEqual( Stem("intelligence"), "intelligent");});
test("intelligences -> intelligent", function() {deepEqual( Stem("intelligences"), "intelligent");});
test("intelligent -> intelligent", function() {deepEqual( Stem("intelligent"), "intelligent");});
test("intelligente -> intelligent", function() {deepEqual( Stem("intelligente"), "intelligent");});
test("intelligenti -> intelligent", function() {deepEqual( Stem("intelligenti"), "intelligent");});
test("intelligents -> intelligent", function() {deepEqual( Stem("intelligents"), "intelligent");});
test("intelligible -> intelligibl", function() {deepEqual( Stem("intelligible"), "intelligibl");});
test("intelligibles -> intelligibl", function() {deepEqual( Stem("intelligibles"), "intelligibl");});
test("intempestive -> intempest", function() {deepEqual( Stem("intempestive"), "intempest");});
test("intendant -> intend", function() {deepEqual( Stem("intendant"), "intend");});
test("intense -> intens", function() {deepEqual( Stem("intense"), "intens");});
test("intenses -> intens", function() {deepEqual( Stem("intenses"), "intens");});
test("intensité -> intens", function() {deepEqual( Stem("intensité"), "intens");});
test("intention -> intent", function() {deepEqual( Stem("intention"), "intent");});
test("intentionné -> intention", function() {deepEqual( Stem("intentionné"), "intention");});
test("intentions -> intent", function() {deepEqual( Stem("intentions"), "intent");});
test("interceptait -> intercept", function() {deepEqual( Stem("interceptait"), "intercept");});
test("intercepté -> intercept", function() {deepEqual( Stem("intercepté"), "intercept");});
test("interceptée -> intercept", function() {deepEqual( Stem("interceptée"), "intercept");});
test("interceptées -> intercept", function() {deepEqual( Stem("interceptées"), "intercept");});
test("intercepter -> intercept", function() {deepEqual( Stem("intercepter"), "intercept");});
test("intercepterait -> intercept", function() {deepEqual( Stem("intercepterait"), "intercept");});
test("intercession -> intercess", function() {deepEqual( Stem("intercession"), "intercess");});
test("interdire -> interdir", function() {deepEqual( Stem("interdire"), "interdir");});
test("interdis -> interd", function() {deepEqual( Stem("interdis"), "interd");});
test("interdit -> interd", function() {deepEqual( Stem("interdit"), "interd");});
test("interdite -> interdit", function() {deepEqual( Stem("interdite"), "interdit");});
test("intéressa -> intéress", function() {deepEqual( Stem("intéressa"), "intéress");});
test("intéressaient -> intéress", function() {deepEqual( Stem("intéressaient"), "intéress");});
test("intéressait -> intéress", function() {deepEqual( Stem("intéressait"), "intéress");});
test("intéressant -> intéress", function() {deepEqual( Stem("intéressant"), "intéress");});
test("intéressante -> intéress", function() {deepEqual( Stem("intéressante"), "intéress");});
test("intéressantes -> intéress", function() {deepEqual( Stem("intéressantes"), "intéress");});
test("intéressants -> intéress", function() {deepEqual( Stem("intéressants"), "intéress");});
test("intéresse -> intéress", function() {deepEqual( Stem("intéresse"), "intéress");});
test("intéressé -> intéress", function() {deepEqual( Stem("intéressé"), "intéress");});
test("intéressée -> intéress", function() {deepEqual( Stem("intéressée"), "intéress");});
test("intéressent -> intéressent", function() {deepEqual( Stem("intéressent"), "intéressent");});
test("intéresser -> intéress", function() {deepEqual( Stem("intéresser"), "intéress");});
test("intéresseront -> intéress", function() {deepEqual( Stem("intéresseront"), "intéress");});
test("intéressés -> intéress", function() {deepEqual( Stem("intéressés"), "intéress");});
test("interet -> interet", function() {deepEqual( Stem("interet"), "interet");});
test("intérêt -> intérêt", function() {deepEqual( Stem("intérêt"), "intérêt");});
test("interets -> interet", function() {deepEqual( Stem("interets"), "interet");});
test("intérêts -> intérêt", function() {deepEqual( Stem("intérêts"), "intérêt");});
test("intérieur -> intérieur", function() {deepEqual( Stem("intérieur"), "intérieur");});
test("intérieure -> intérieur", function() {deepEqual( Stem("intérieure"), "intérieur");});
test("intérieurement -> intérieur", function() {deepEqual( Stem("intérieurement"), "intérieur");});
test("intérieurs -> intérieur", function() {deepEqual( Stem("intérieurs"), "intérieur");});
test("interjections -> interject", function() {deepEqual( Stem("interjections"), "interject");});
test("interlocuteur -> interlocuteur", function() {deepEqual( Stem("interlocuteur"), "interlocuteur");});
test("interlocuteurs -> interlocuteur", function() {deepEqual( Stem("interlocuteurs"), "interlocuteur");});
test("interlope -> interlop", function() {deepEqual( Stem("interlope"), "interlop");});
test("intermédiaire -> intermédiair", function() {deepEqual( Stem("intermédiaire"), "intermédiair");});
test("interminable -> intermin", function() {deepEqual( Stem("interminable"), "intermin");});
test("interminables -> intermin", function() {deepEqual( Stem("interminables"), "intermin");});
test("international -> international", function() {deepEqual( Stem("international"), "international");});
test("interpellé -> interpel", function() {deepEqual( Stem("interpellé"), "interpel");});
test("interpeller -> interpel", function() {deepEqual( Stem("interpeller"), "interpel");});
test("interposé -> interpos", function() {deepEqual( Stem("interposé"), "interpos");});
test("interpréta -> interpret", function() {deepEqual( Stem("interpréta"), "interpret");});
test("interprétation -> interpret", function() {deepEqual( Stem("interprétation"), "interpret");});
test("interprétations -> interpret", function() {deepEqual( Stem("interprétations"), "interpret");});
test("interprété -> interpret", function() {deepEqual( Stem("interprété"), "interpret");});
test("interprétée -> interpret", function() {deepEqual( Stem("interprétée"), "interpret");});
test("interprètes -> interpret", function() {deepEqual( Stem("interprètes"), "interpret");});
test("interrogatif -> interrog", function() {deepEqual( Stem("interrogatif"), "interrog");});
test("interrogation -> interrog", function() {deepEqual( Stem("interrogation"), "interrog");});
test("interrogatoire -> interrogatoir", function() {deepEqual( Stem("interrogatoire"), "interrogatoir");});
test("interrogatoires -> interrogatoir", function() {deepEqual( Stem("interrogatoires"), "interrogatoir");});
test("interroge -> interrog", function() {deepEqual( Stem("interroge"), "interrog");});
test("interrogé -> interrog", function() {deepEqual( Stem("interrogé"), "interrog");});
test("interrogea -> interrog", function() {deepEqual( Stem("interrogea"), "interrog");});
test("interrogeant -> interrog", function() {deepEqual( Stem("interrogeant"), "interrog");});
test("interroger -> interrog", function() {deepEqual( Stem("interroger"), "interrog");});
test("interrogerait -> interrog", function() {deepEqual( Stem("interrogerait"), "interrog");});
test("interrogez -> interrog", function() {deepEqual( Stem("interrogez"), "interrog");});
test("interrompait -> interromp", function() {deepEqual( Stem("interrompait"), "interromp");});
test("interrompant -> interromp", function() {deepEqual( Stem("interrompant"), "interromp");});
test("interrompirent -> interromp", function() {deepEqual( Stem("interrompirent"), "interromp");});
test("interrompit -> interromp", function() {deepEqual( Stem("interrompit"), "interromp");});
test("interromprait -> interrompr", function() {deepEqual( Stem("interromprait"), "interrompr");});
test("interrompre -> interrompr", function() {deepEqual( Stem("interrompre"), "interrompr");});
test("interrompt -> interrompt", function() {deepEqual( Stem("interrompt"), "interrompt");});
test("interrompu -> interrompu", function() {deepEqual( Stem("interrompu"), "interrompu");});
test("interrompue -> interrompu", function() {deepEqual( Stem("interrompue"), "interrompu");});
test("interrompues -> interrompu", function() {deepEqual( Stem("interrompues"), "interrompu");});
test("interrompus -> interrompus", function() {deepEqual( Stem("interrompus"), "interrompus");});
test("interrupteur -> interrupteur", function() {deepEqual( Stem("interrupteur"), "interrupteur");});
test("interruption -> interrupt", function() {deepEqual( Stem("interruption"), "interrupt");});
test("intervalle -> intervall", function() {deepEqual( Stem("intervalle"), "intervall");});
test("intervalles -> intervall", function() {deepEqual( Stem("intervalles"), "intervall");});
test("intervention -> intervent", function() {deepEqual( Stem("intervention"), "intervent");});
test("interviendrais -> interviendr", function() {deepEqual( Stem("interviendrais"), "interviendr");});
test("intima -> intim", function() {deepEqual( Stem("intima"), "intim");});
test("intime -> intim", function() {deepEqual( Stem("intime"), "intim");});
test("intimement -> intim", function() {deepEqual( Stem("intimement"), "intim");});
test("intimes -> intim", function() {deepEqual( Stem("intimes"), "intim");});
test("intimida -> intimid", function() {deepEqual( Stem("intimida"), "intimid");});
test("intimidé -> intimid", function() {deepEqual( Stem("intimidé"), "intimid");});
test("intimident -> intimident", function() {deepEqual( Stem("intimident"), "intimident");});
test("intimider -> intimid", function() {deepEqual( Stem("intimider"), "intimid");});
test("intimité -> intim", function() {deepEqual( Stem("intimité"), "intim");});
test("intitulés -> intitul", function() {deepEqual( Stem("intitulés"), "intitul");});
test("intolérable -> intoler", function() {deepEqual( Stem("intolérable"), "intoler");});
test("intolérables -> intoler", function() {deepEqual( Stem("intolérables"), "intoler");});
test("intonation -> inton", function() {deepEqual( Stem("intonation"), "inton");});
test("intraitable -> intrait", function() {deepEqual( Stem("intraitable"), "intrait");});
test("intrépide -> intrépid", function() {deepEqual( Stem("intrépide"), "intrépid");});
test("intrépidement -> intrépid", function() {deepEqual( Stem("intrépidement"), "intrépid");});
test("intrépidité -> intrépid", function() {deepEqual( Stem("intrépidité"), "intrépid");});
test("intrigant -> intrig", function() {deepEqual( Stem("intrigant"), "intrig");});
test("intrigante -> intrig", function() {deepEqual( Stem("intrigante"), "intrig");});
test("intrigants -> intrig", function() {deepEqual( Stem("intrigants"), "intrig");});
test("intriguait -> intrigu", function() {deepEqual( Stem("intriguait"), "intrigu");});
test("intrigue -> intrigu", function() {deepEqual( Stem("intrigue"), "intrigu");});
test("intrigué -> intrigu", function() {deepEqual( Stem("intrigué"), "intrigu");});
test("intrigues -> intrigu", function() {deepEqual( Stem("intrigues"), "intrigu");});
test("introduction -> introduct", function() {deepEqual( Stem("introduction"), "introduct");});
test("introduire -> introduir", function() {deepEqual( Stem("introduire"), "introduir");});
test("introduis -> introduis", function() {deepEqual( Stem("introduis"), "introduis");});
test("introduisit -> introduis", function() {deepEqual( Stem("introduisit"), "introduis");});
test("introduit -> introduit", function() {deepEqual( Stem("introduit"), "introduit");});
test("introduite -> introduit", function() {deepEqual( Stem("introduite"), "introduit");});
test("introduits -> introduit", function() {deepEqual( Stem("introduits"), "introduit");});
test("intrus -> intrus", function() {deepEqual( Stem("intrus"), "intrus");});
test("inusitée -> inusit", function() {deepEqual( Stem("inusitée"), "inusit");});
test("inutile -> inutil", function() {deepEqual( Stem("inutile"), "inutil");});
test("inutilement -> inutil", function() {deepEqual( Stem("inutilement"), "inutil");});
test("inutiles -> inutil", function() {deepEqual( Stem("inutiles"), "inutil");});
test("inutilite -> inutilit", function() {deepEqual( Stem("inutilite"), "inutilit");});
test("inutilité -> inutil", function() {deepEqual( Stem("inutilité"), "inutil");});
test("invalides -> invalid", function() {deepEqual( Stem("invalides"), "invalid");});
test("invariable -> invari", function() {deepEqual( Stem("invariable"), "invari");});
test("invariablement -> invari", function() {deepEqual( Stem("invariablement"), "invari");});
test("invariables -> invari", function() {deepEqual( Stem("invariables"), "invari");});
test("invasion -> invas", function() {deepEqual( Stem("invasion"), "invas");});
test("inventaire -> inventair", function() {deepEqual( Stem("inventaire"), "inventair");});
test("inventait -> invent", function() {deepEqual( Stem("inventait"), "invent");});
test("inventant -> invent", function() {deepEqual( Stem("inventant"), "invent");});
test("invente -> invent", function() {deepEqual( Stem("invente"), "invent");});
test("inventé -> invent", function() {deepEqual( Stem("inventé"), "invent");});
test("inventée -> invent", function() {deepEqual( Stem("inventée"), "invent");});
test("inventées -> invent", function() {deepEqual( Stem("inventées"), "invent");});
test("inventer -> invent", function() {deepEqual( Stem("inventer"), "invent");});
test("inventèrent -> invent", function() {deepEqual( Stem("inventèrent"), "invent");});
test("inventeur -> inventeur", function() {deepEqual( Stem("inventeur"), "inventeur");});
test("inventif -> invent", function() {deepEqual( Stem("inventif"), "invent");});
test("invention -> invent", function() {deepEqual( Stem("invention"), "invent");});
test("inventions -> invent", function() {deepEqual( Stem("inventions"), "invent");});
test("inverse -> invers", function() {deepEqual( Stem("inverse"), "invers");});
test("invincible -> invincibl", function() {deepEqual( Stem("invincible"), "invincibl");});
test("invinciblement -> invincibl", function() {deepEqual( Stem("invinciblement"), "invincibl");});
test("invisible -> invisibl", function() {deepEqual( Stem("invisible"), "invisibl");});
test("invisibles -> invisibl", function() {deepEqual( Stem("invisibles"), "invisibl");});
test("invita -> invit", function() {deepEqual( Stem("invita"), "invit");});
test("invitait -> invit", function() {deepEqual( Stem("invitait"), "invit");});
test("invitant -> invit", function() {deepEqual( Stem("invitant"), "invit");});
test("invitation -> invit", function() {deepEqual( Stem("invitation"), "invit");});
test("invitations -> invit", function() {deepEqual( Stem("invitations"), "invit");});
test("invite -> invit", function() {deepEqual( Stem("invite"), "invit");});
test("invité -> invit", function() {deepEqual( Stem("invité"), "invit");});
test("inviter -> invit", function() {deepEqual( Stem("inviter"), "invit");});
test("inviterai -> invit", function() {deepEqual( Stem("inviterai"), "invit");});
test("invités -> invit", function() {deepEqual( Stem("invités"), "invit");});
test("inviti -> invit", function() {deepEqual( Stem("inviti"), "invit");});
test("invocation -> invoc", function() {deepEqual( Stem("invocation"), "invoc");});
test("involontaire -> involontair", function() {deepEqual( Stem("involontaire"), "involontair");});
test("involontairement -> involontair", function() {deepEqual( Stem("involontairement"), "involontair");});
test("invraisemblable -> invraisembl", function() {deepEqual( Stem("invraisemblable"), "invraisembl");});
test("invraisemblables -> invraisembl", function() {deepEqual( Stem("invraisemblables"), "invraisembl");});
test("invraisemblance -> invraisembl", function() {deepEqual( Stem("invraisemblance"), "invraisembl");});
test("invulnérable -> invulner", function() {deepEqual( Stem("invulnérable"), "invulner");});
test("ioniques -> ioniqu", function() {deepEqual( Stem("ioniques"), "ioniqu");});
test("iowa -> iow", function() {deepEqual( Stem("iowa"), "iow");});
test("ira -> ira", function() {deepEqual( Stem("ira"), "ira");});
test("irai -> irai", function() {deepEqual( Stem("irai"), "irai");});
test("iraient -> iraient", function() {deepEqual( Stem("iraient"), "iraient");});
test("irais -> irais", function() {deepEqual( Stem("irais"), "irais");});
test("irait -> irait", function() {deepEqual( Stem("irait"), "irait");});
test("iras -> iras", function() {deepEqual( Stem("iras"), "iras");});
test("irascible -> irascibl", function() {deepEqual( Stem("irascible"), "irascibl");});
test("irez -> irez", function() {deepEqual( Stem("irez"), "irez");});
test("iriez -> iri", function() {deepEqual( Stem("iriez"), "iri");});
test("irlande -> irland", function() {deepEqual( Stem("irlande"), "irland");});
test("ironie -> iron", function() {deepEqual( Stem("ironie"), "iron");});
test("ironique -> iron", function() {deepEqual( Stem("ironique"), "iron");});
test("irons -> iron", function() {deepEqual( Stem("irons"), "iron");});
test("iront -> iront", function() {deepEqual( Stem("iront"), "iront");});
test("irrégulière -> irréguli", function() {deepEqual( Stem("irrégulière"), "irréguli");});
test("irrégulièrement -> irréguli", function() {deepEqual( Stem("irrégulièrement"), "irréguli");});
test("irréguliers -> irréguli", function() {deepEqual( Stem("irréguliers"), "irréguli");});
test("irrémédiable -> irrémédi", function() {deepEqual( Stem("irrémédiable"), "irrémédi");});
test("irrémissiblement -> irrémissibl", function() {deepEqual( Stem("irrémissiblement"), "irrémissibl");});
test("irréparable -> irrépar", function() {deepEqual( Stem("irréparable"), "irrépar");});
test("irréparablement -> irrépar", function() {deepEqual( Stem("irréparablement"), "irrépar");});
test("irréprochable -> irréproch", function() {deepEqual( Stem("irréprochable"), "irréproch");});
test("irréprochables -> irréproch", function() {deepEqual( Stem("irréprochables"), "irréproch");});
test("irrésistible -> irrésistibl", function() {deepEqual( Stem("irrésistible"), "irrésistibl");});
test("irrésistiblement -> irrésistibl", function() {deepEqual( Stem("irrésistiblement"), "irrésistibl");});
test("irrésistibles -> irrésistibl", function() {deepEqual( Stem("irrésistibles"), "irrésistibl");});
test("irrésolution -> irrésolu", function() {deepEqual( Stem("irrésolution"), "irrésolu");});
test("irrésolutions -> irrésolu", function() {deepEqual( Stem("irrésolutions"), "irrésolu");});
test("irresponsable -> irrespons", function() {deepEqual( Stem("irresponsable"), "irrespons");});
test("irréussites -> irréussit", function() {deepEqual( Stem("irréussites"), "irréussit");});
test("irrévocablement -> irrévoc", function() {deepEqual( Stem("irrévocablement"), "irrévoc");});
test("irriguaient -> irrigu", function() {deepEqual( Stem("irriguaient"), "irrigu");});
test("irrita -> irrit", function() {deepEqual( Stem("irrita"), "irrit");});
test("irritable -> irrit", function() {deepEqual( Stem("irritable"), "irrit");});
test("irritaient -> irrit", function() {deepEqual( Stem("irritaient"), "irrit");});
test("irritait -> irrit", function() {deepEqual( Stem("irritait"), "irrit");});
test("irritant -> irrit", function() {deepEqual( Stem("irritant"), "irrit");});
test("irritation -> irrit", function() {deepEqual( Stem("irritation"), "irrit");});
test("irrite -> irrit", function() {deepEqual( Stem("irrite"), "irrit");});
test("irrité -> irrit", function() {deepEqual( Stem("irrité"), "irrit");});
test("irritée -> irrit", function() {deepEqual( Stem("irritée"), "irrit");});
test("irriter -> irrit", function() {deepEqual( Stem("irriter"), "irrit");});
test("irritèrent -> irrit", function() {deepEqual( Stem("irritèrent"), "irrit");});
test("irruption -> irrupt", function() {deepEqual( Stem("irruption"), "irrupt");});
test("is -> is", function() {deepEqual( Stem("is"), "is");});
test("island -> island", function() {deepEqual( Stem("island"), "island");});
test("isole -> isol", function() {deepEqual( Stem("isole"), "isol");});
test("isolé -> isol", function() {deepEqual( Stem("isolé"), "isol");});
test("isolée -> isol", function() {deepEqual( Stem("isolée"), "isol");});
test("isolement -> isol", function() {deepEqual( Stem("isolement"), "isol");});
test("isolés -> isol", function() {deepEqual( Stem("isolés"), "isol");});
test("isota -> isot", function() {deepEqual( Stem("isota"), "isot");});
test("israël -> israël", function() {deepEqual( Stem("israël"), "israël");});
test("issu -> issu", function() {deepEqual( Stem("issu"), "issu");});
test("issue -> issu", function() {deepEqual( Stem("issue"), "issu");});
test("issues -> issu", function() {deepEqual( Stem("issues"), "issu");});
test("it -> it", function() {deepEqual( Stem("it"), "it");});
test("ita -> ita", function() {deepEqual( Stem("ita"), "ita");});
test("italie -> ital", function() {deepEqual( Stem("italie"), "ital");});
test("italien -> italien", function() {deepEqual( Stem("italien"), "italien");});
test("italienne -> italien", function() {deepEqual( Stem("italienne"), "italien");});
test("italiennes -> italien", function() {deepEqual( Stem("italiennes"), "italien");});
test("italiens -> italien", function() {deepEqual( Stem("italiens"), "italien");});
test("itinéraire -> itinérair", function() {deepEqual( Stem("itinéraire"), "itinérair");});
test("itou -> itou", function() {deepEqual( Stem("itou"), "itou");});
test("its -> it", function() {deepEqual( Stem("its"), "it");});
test("itself -> itself", function() {deepEqual( Stem("itself"), "itself");});
test("iv -> iv", function() {deepEqual( Stem("iv"), "iv");});
test("ivoire -> ivoir", function() {deepEqual( Stem("ivoire"), "ivoir");});
test("ivre -> ivre", function() {deepEqual( Stem("ivre"), "ivre");});
test("ivres -> ivre", function() {deepEqual( Stem("ivres"), "ivre");});
test("ivresse -> ivress", function() {deepEqual( Stem("ivresse"), "ivress");});
test("ivrogne -> ivrogn", function() {deepEqual( Stem("ivrogne"), "ivrogn");});
test("ivrognes -> ivrogn", function() {deepEqual( Stem("ivrognes"), "ivrogn");});
test("ix -> ix", function() {deepEqual( Stem("ix"), "ix");});
test("j -> j", function() {deepEqual( Stem("j"), "j");});
test("jacobin -> jacobin", function() {deepEqual( Stem("jacobin"), "jacobin");});
test("jacobine -> jacobin", function() {deepEqual( Stem("jacobine"), "jacobin");});
test("jacobinisme -> jacobin", function() {deepEqual( Stem("jacobinisme"), "jacobin");});
test("jacobins -> jacobin", function() {deepEqual( Stem("jacobins"), "jacobin");});
test("jacopo -> jacopo", function() {deepEqual( Stem("jacopo"), "jacopo");});
test("jacques -> jacqu", function() {deepEqual( Stem("jacques"), "jacqu");});
test("jadis -> jad", function() {deepEqual( Stem("jadis"), "jad");});
test("jaggernaut -> jaggernaut", function() {deepEqual( Stem("jaggernaut"), "jaggernaut");});
test("jailli -> jaill", function() {deepEqual( Stem("jailli"), "jaill");});
test("jaillissaient -> jaill", function() {deepEqual( Stem("jaillissaient"), "jaill");});
test("jais -> jais", function() {deepEqual( Stem("jais"), "jais");});
test("jalousait -> jalous", function() {deepEqual( Stem("jalousait"), "jalous");});
test("jalouse -> jalous", function() {deepEqual( Stem("jalouse"), "jalous");});
test("jalousé -> jalous", function() {deepEqual( Stem("jalousé"), "jalous");});
test("jalouses -> jalous", function() {deepEqual( Stem("jalouses"), "jalous");});
test("jalousie -> jalous", function() {deepEqual( Stem("jalousie"), "jalous");});
test("jalousies -> jalous", function() {deepEqual( Stem("jalousies"), "jalous");});
test("jaloux -> jaloux", function() {deepEqual( Stem("jaloux"), "jaloux");});
test("jamais -> jam", function() {deepEqual( Stem("jamais"), "jam");});
test("jambe -> jamb", function() {deepEqual( Stem("jambe"), "jamb");});
test("jambes -> jamb", function() {deepEqual( Stem("jambes"), "jamb");});
test("james -> jam", function() {deepEqual( Stem("james"), "jam");});
test("jansénisme -> jansen", function() {deepEqual( Stem("jansénisme"), "jansen");});
test("janséniste -> jansen", function() {deepEqual( Stem("janséniste"), "jansen");});
test("jansénistes -> jansen", function() {deepEqual( Stem("jansénistes"), "jansen");});
test("jante -> jant", function() {deepEqual( Stem("jante"), "jant");});
test("janvier -> janvi", function() {deepEqual( Stem("janvier"), "janvi");});
test("japon -> japon", function() {deepEqual( Stem("japon"), "japon");});
test("japonais -> japon", function() {deepEqual( Stem("japonais"), "japon");});
test("japonaise -> japonais", function() {deepEqual( Stem("japonaise"), "japonais");});
test("japonaisé -> japonais", function() {deepEqual( Stem("japonaisé"), "japonais");});
test("japonaises -> japonais", function() {deepEqual( Stem("japonaises"), "japonais");});
test("jaquette -> jaquet", function() {deepEqual( Stem("jaquette"), "jaquet");});
test("jardin -> jardin", function() {deepEqual( Stem("jardin"), "jardin");});
test("jardinage -> jardinag", function() {deepEqual( Stem("jardinage"), "jardinag");});
test("jardinier -> jardini", function() {deepEqual( Stem("jardinier"), "jardini");});
test("jardins -> jardin", function() {deepEqual( Stem("jardins"), "jardin");});
test("jarnac -> jarnac", function() {deepEqual( Stem("jarnac"), "jarnac");});
test("jarrets -> jarret", function() {deepEqual( Stem("jarrets"), "jarret");});
test("jasant -> jas", function() {deepEqual( Stem("jasant"), "jas");});
test("jasent -> jasent", function() {deepEqual( Stem("jasent"), "jasent");});
test("jaser -> jas", function() {deepEqual( Stem("jaser"), "jas");});
test("jasmin -> jasmin", function() {deepEqual( Stem("jasmin"), "jasmin");});
test("jaugeant -> jaug", function() {deepEqual( Stem("jaugeant"), "jaug");});
test("jaunâtres -> jaunâtr", function() {deepEqual( Stem("jaunâtres"), "jaunâtr");});
test("jaune -> jaun", function() {deepEqual( Stem("jaune"), "jaun");});
test("jaunes -> jaun", function() {deepEqual( Stem("jaunes"), "jaun");});
test("jaunets -> jaunet", function() {deepEqual( Stem("jaunets"), "jaunet");});
test("jaunies -> jaun", function() {deepEqual( Stem("jaunies"), "jaun");});
test("je -> je", function() {deepEqual( Stem("je"), "je");});
test("jean -> jean", function() {deepEqual( Stem("jean"), "jean");});
test("jeannes -> jeann", function() {deepEqual( Stem("jeannes"), "jeann");});
test("jejeebhoy -> jejeebhoy", function() {deepEqual( Stem("jejeebhoy"), "jejeebhoy");});
test("jejeeh -> jejeeh", function() {deepEqual( Stem("jejeeh"), "jejeeh");});
test("jenrel -> jenrel", function() {deepEqual( Stem("jenrel"), "jenrel");});
test("jérémiades -> jérémiad", function() {deepEqual( Stem("jérémiades"), "jérémiad");});
test("jérôme -> jérôm", function() {deepEqual( Stem("jérôme"), "jérôm");});
test("jersey -> jersey", function() {deepEqual( Stem("jersey"), "jersey");});
test("jérusalem -> jérusalem", function() {deepEqual( Stem("jérusalem"), "jérusalem");});
test("jest -> jest", function() {deepEqual( Stem("jest"), "jest");});
test("jésuite -> jésuit", function() {deepEqual( Stem("jésuite"), "jésuit");});
test("jésuites -> jésuit", function() {deepEqual( Stem("jésuites"), "jésuit");});
test("jésuitique -> jésuit", function() {deepEqual( Stem("jésuitique"), "jésuit");});
test("jésuitisme -> jésuit", function() {deepEqual( Stem("jésuitisme"), "jésuit");});
test("jésus -> jésus", function() {deepEqual( Stem("jésus"), "jésus");});
test("jeta -> jet", function() {deepEqual( Stem("jeta"), "jet");});
test("jetaient -> jet", function() {deepEqual( Stem("jetaient"), "jet");});
test("jetait -> jet", function() {deepEqual( Stem("jetait"), "jet");});
test("jetant -> jet", function() {deepEqual( Stem("jetant"), "jet");});
test("jetât -> jet", function() {deepEqual( Stem("jetât"), "jet");});
test("jeté -> jet", function() {deepEqual( Stem("jeté"), "jet");});
test("jetée -> jet", function() {deepEqual( Stem("jetée"), "jet");});
test("jetées -> jet", function() {deepEqual( Stem("jetées"), "jet");});
test("jeter -> jet", function() {deepEqual( Stem("jeter"), "jet");});
test("jetèrent -> jet", function() {deepEqual( Stem("jetèrent"), "jet");});
test("jetés -> jet", function() {deepEqual( Stem("jetés"), "jet");});
test("jetez -> jet", function() {deepEqual( Stem("jetez"), "jet");});
test("jetons -> jeton", function() {deepEqual( Stem("jetons"), "jeton");});
test("jette -> jet", function() {deepEqual( Stem("jette"), "jet");});
test("jettent -> jettent", function() {deepEqual( Stem("jettent"), "jettent");});
test("jetterais -> jet", function() {deepEqual( Stem("jetterais"), "jet");});
test("jetterait -> jet", function() {deepEqual( Stem("jetterait"), "jet");});
test("jetterez -> jet", function() {deepEqual( Stem("jetterez"), "jet");});
test("jeu -> jeu", function() {deepEqual( Stem("jeu"), "jeu");});
test("jeudi -> jeud", function() {deepEqual( Stem("jeudi"), "jeud");});
test("jeudis -> jeud", function() {deepEqual( Stem("jeudis"), "jeud");});
test("jeun -> jeun", function() {deepEqual( Stem("jeun"), "jeun");});
test("jeûnant -> jeûn", function() {deepEqual( Stem("jeûnant"), "jeûn");});
test("jeune -> jeun", function() {deepEqual( Stem("jeune"), "jeun");});
test("jeûne -> jeûn", function() {deepEqual( Stem("jeûne"), "jeûn");});
test("jeunes -> jeun", function() {deepEqual( Stem("jeunes"), "jeun");});
test("jeûnes -> jeûn", function() {deepEqual( Stem("jeûnes"), "jeûn");});
test("jeunesse -> jeuness", function() {deepEqual( Stem("jeunesse"), "jeuness");});
test("jeux -> jeux", function() {deepEqual( Stem("jeux"), "jeux");});
test("joe -> jo", function() {deepEqual( Stem("joe"), "jo");});
test("john -> john", function() {deepEqual( Stem("john"), "john");});
test("joie -> joi", function() {deepEqual( Stem("joie"), "joi");});
test("joies -> joi", function() {deepEqual( Stem("joies"), "joi");});
test("joignait -> joign", function() {deepEqual( Stem("joignait"), "joign");});
test("joignant -> joign", function() {deepEqual( Stem("joignant"), "joign");});
test("joignit -> joign", function() {deepEqual( Stem("joignit"), "joign");});
test("joindre -> joindr", function() {deepEqual( Stem("joindre"), "joindr");});
test("joint -> joint", function() {deepEqual( Stem("joint"), "joint");});
test("jointe -> joint", function() {deepEqual( Stem("jointe"), "joint");});
test("jointes -> joint", function() {deepEqual( Stem("jointes"), "joint");});
test("joli -> jol", function() {deepEqual( Stem("joli"), "jol");});
test("jolie -> jol", function() {deepEqual( Stem("jolie"), "jol");});
test("jolies -> jol", function() {deepEqual( Stem("jolies"), "jol");});
test("joliment -> jol", function() {deepEqual( Stem("joliment"), "jol");});
test("jolis -> jol", function() {deepEqual( Stem("jolis"), "jol");});
test("jonc -> jonc", function() {deepEqual( Stem("jonc"), "jonc");});
test("jonché -> jonch", function() {deepEqual( Stem("jonché"), "jonch");});
test("jonglaient -> jongl", function() {deepEqual( Stem("jonglaient"), "jongl");});
test("jonglait -> jongl", function() {deepEqual( Stem("jonglait"), "jongl");});
test("jonglerie -> jongler", function() {deepEqual( Stem("jonglerie"), "jongler");});
test("jongleurs -> jongleur", function() {deepEqual( Stem("jongleurs"), "jongleur");});
test("jonques -> jonqu", function() {deepEqual( Stem("jonques"), "jonqu");});
test("jonquille -> jonquill", function() {deepEqual( Stem("jonquille"), "jonquill");});
test("joseph -> joseph", function() {deepEqual( Stem("joseph"), "joseph");});
test("joua -> jou", function() {deepEqual( Stem("joua"), "jou");});
test("jouaient -> jou", function() {deepEqual( Stem("jouaient"), "jou");});
test("jouait -> jou", function() {deepEqual( Stem("jouait"), "jou");});
test("jouant -> jou", function() {deepEqual( Stem("jouant"), "jou");});
test("jouât -> jou", function() {deepEqual( Stem("jouât"), "jou");});
test("joue -> jou", function() {deepEqual( Stem("joue"), "jou");});
test("joué -> jou", function() {deepEqual( Stem("joué"), "jou");});
test("jouée -> jou", function() {deepEqual( Stem("jouée"), "jou");});
test("jouer -> jou", function() {deepEqual( Stem("jouer"), "jou");});
test("jouera -> jou", function() {deepEqual( Stem("jouera"), "jou");});
test("jouerai -> jou", function() {deepEqual( Stem("jouerai"), "jou");});
test("joueraient -> jou", function() {deepEqual( Stem("joueraient"), "jou");});
test("jouerais -> jou", function() {deepEqual( Stem("jouerais"), "jou");});
test("jouerait -> jou", function() {deepEqual( Stem("jouerait"), "jou");});
test("joues -> jou", function() {deepEqual( Stem("joues"), "jou");});
test("joueur -> joueur", function() {deepEqual( Stem("joueur"), "joueur");});
test("joueurs -> joueur", function() {deepEqual( Stem("joueurs"), "joueur");});
test("jouez -> jou", function() {deepEqual( Stem("jouez"), "jou");});
test("joui -> jou", function() {deepEqual( Stem("joui"), "jou");});
test("jouir -> jou", function() {deepEqual( Stem("jouir"), "jou");});
test("jouira -> jou", function() {deepEqual( Stem("jouira"), "jou");});
test("jouirait -> jou", function() {deepEqual( Stem("jouirait"), "jou");});
test("jouiras -> jou", function() {deepEqual( Stem("jouiras"), "jou");});
test("jouis -> jou", function() {deepEqual( Stem("jouis"), "jou");});
test("jouissaient -> jou", function() {deepEqual( Stem("jouissaient"), "jou");});
test("jouissait -> jou", function() {deepEqual( Stem("jouissait"), "jou");});
test("jouissance -> jouiss", function() {deepEqual( Stem("jouissance"), "jouiss");});
test("jouissances -> jouiss", function() {deepEqual( Stem("jouissances"), "jouiss");});
test("jouissant -> jou", function() {deepEqual( Stem("jouissant"), "jou");});
test("jouisse -> jou", function() {deepEqual( Stem("jouisse"), "jou");});
test("jouissent -> jou", function() {deepEqual( Stem("jouissent"), "jou");});
test("jouissons -> jou", function() {deepEqual( Stem("jouissons"), "jou");});
test("jouit -> jou", function() {deepEqual( Stem("jouit"), "jou");});
test("joujoux -> joujoux", function() {deepEqual( Stem("joujoux"), "joujoux");});
test("joumate -> joumat", function() {deepEqual( Stem("joumate"), "joumat");});
test("jouons -> jouon", function() {deepEqual( Stem("jouons"), "jouon");});
test("jour -> jour", function() {deepEqual( Stem("jour"), "jour");});
test("jourdain -> jourdain", function() {deepEqual( Stem("jourdain"), "jourdain");});
test("jourdan -> jourdan", function() {deepEqual( Stem("jourdan"), "jourdan");});
test("journal -> journal", function() {deepEqual( Stem("journal"), "journal");});
test("journalière -> journali", function() {deepEqual( Stem("journalière"), "journali");});
test("journalistes -> journal", function() {deepEqual( Stem("journalistes"), "journal");});
test("journaux -> journal", function() {deepEqual( Stem("journaux"), "journal");});
test("journée -> journ", function() {deepEqual( Stem("journée"), "journ");});
test("journées -> journ", function() {deepEqual( Stem("journées"), "journ");});
test("journellement -> journel", function() {deepEqual( Stem("journellement"), "journel");});
test("jours -> jour", function() {deepEqual( Stem("jours"), "jour");});
test("joyeuse -> joyeux", function() {deepEqual( Stem("joyeuse"), "joyeux");});
test("joyeusement -> joyeux", function() {deepEqual( Stem("joyeusement"), "joyeux");});
test("joyeux -> joyeux", function() {deepEqual( Stem("joyeux"), "joyeux");});
test("juan -> juan", function() {deepEqual( Stem("juan"), "juan");});
test("jucha -> juch", function() {deepEqual( Stem("jucha"), "juch");});
test("juché -> juch", function() {deepEqual( Stem("juché"), "juch");});
test("judiciaires -> judiciair", function() {deepEqual( Stem("judiciaires"), "judiciair");});
test("judicieux -> judici", function() {deepEqual( Stem("judicieux"), "judici");});
test("judith -> judith", function() {deepEqual( Stem("judith"), "judith");});
test("juge -> jug", function() {deepEqual( Stem("juge"), "jug");});
test("jugé -> jug", function() {deepEqual( Stem("jugé"), "jug");});
test("jugea -> jug", function() {deepEqual( Stem("jugea"), "jug");});
test("jugeait -> jug", function() {deepEqual( Stem("jugeait"), "jug");});
test("jugeant -> jug", function() {deepEqual( Stem("jugeant"), "jug");});
test("jugement -> jug", function() {deepEqual( Stem("jugement"), "jug");});
test("jugements -> jug", function() {deepEqual( Stem("jugements"), "jug");});
test("jugent -> jugent", function() {deepEqual( Stem("jugent"), "jugent");});
test("juger -> jug", function() {deepEqual( Stem("juger"), "jug");});
test("jugera -> jug", function() {deepEqual( Stem("jugera"), "jug");});
test("jugerai -> jug", function() {deepEqual( Stem("jugerai"), "jug");});
test("jugeront -> jug", function() {deepEqual( Stem("jugeront"), "jug");});
test("juges -> jug", function() {deepEqual( Stem("juges"), "jug");});
test("jugés -> jug", function() {deepEqual( Stem("jugés"), "jug");});
test("jugez -> jug", function() {deepEqual( Stem("jugez"), "jug");});
test("juif -> juif", function() {deepEqual( Stem("juif"), "juif");});
test("juifs -> juif", function() {deepEqual( Stem("juifs"), "juif");});
test("juillet -> juillet", function() {deepEqual( Stem("juillet"), "juillet");});
test("juin -> juin", function() {deepEqual( Stem("juin"), "juin");});
test("jules -> jul", function() {deepEqual( Stem("jules"), "jul");});
test("julesburgh -> julesburgh", function() {deepEqual( Stem("julesburgh"), "julesburgh");});
test("julia -> juli", function() {deepEqual( Stem("julia"), "juli");});
test("julien -> julien", function() {deepEqual( Stem("julien"), "julien");});
test("jumna -> jumn", function() {deepEqual( Stem("jumna"), "jumn");});
test("junction -> junction", function() {deepEqual( Stem("junction"), "junction");});
test("jungles -> jungl", function() {deepEqual( Stem("jungles"), "jungl");});
test("junior -> junior", function() {deepEqual( Stem("junior"), "junior");});
test("jupon -> jupon", function() {deepEqual( Stem("jupon"), "jupon");});
test("jura -> jur", function() {deepEqual( Stem("jura"), "jur");});
test("juraient -> jur", function() {deepEqual( Stem("juraient"), "jur");});
test("jurait -> jur", function() {deepEqual( Stem("jurait"), "jur");});
test("jurant -> jur", function() {deepEqual( Stem("jurant"), "jur");});
test("jure -> jur", function() {deepEqual( Stem("jure"), "jur");});
test("juré -> jur", function() {deepEqual( Stem("juré"), "jur");});
test("jurée -> jur", function() {deepEqual( Stem("jurée"), "jur");});
test("jurement -> jur", function() {deepEqual( Stem("jurement"), "jur");});
test("jurements -> jur", function() {deepEqual( Stem("jurements"), "jur");});
test("jurer -> jur", function() {deepEqual( Stem("jurer"), "jur");});
test("jurerai -> jur", function() {deepEqual( Stem("jurerai"), "jur");});
test("jurerais -> jur", function() {deepEqual( Stem("jurerais"), "jur");});
test("jures -> jur", function() {deepEqual( Stem("jures"), "jur");});
test("jurés -> jur", function() {deepEqual( Stem("jurés"), "jur");});
test("jurez -> jur", function() {deepEqual( Stem("jurez"), "jur");});
test("jurisconsulte -> jurisconsult", function() {deepEqual( Stem("jurisconsulte"), "jurisconsult");});
test("jurisconsultes -> jurisconsult", function() {deepEqual( Stem("jurisconsultes"), "jurisconsult");});
test("juron -> juron", function() {deepEqual( Stem("juron"), "juron");});
test("jurons -> juron", function() {deepEqual( Stem("jurons"), "juron");});
test("jury -> jury", function() {deepEqual( Stem("jury"), "jury");});
test("jusqu -> jusqu", function() {deepEqual( Stem("jusqu"), "jusqu");});
test("jusque -> jusqu", function() {deepEqual( Stem("jusque"), "jusqu");});
test("jusques -> jusqu", function() {deepEqual( Stem("jusques"), "jusqu");});
test("just -> just", function() {deepEqual( Stem("just"), "just");});
test("juste -> just", function() {deepEqual( Stem("juste"), "just");});
test("justement -> just", function() {deepEqual( Stem("justement"), "just");});
test("justes -> just", function() {deepEqual( Stem("justes"), "just");});
test("justesse -> justess", function() {deepEqual( Stem("justesse"), "justess");});
test("justice -> justic", function() {deepEqual( Stem("justice"), "justic");});
test("justifia -> justifi", function() {deepEqual( Stem("justifia"), "justifi");});
test("justifiait -> justifi", function() {deepEqual( Stem("justifiait"), "justifi");});
test("justificatif -> justif", function() {deepEqual( Stem("justificatif"), "justif");});
test("justification -> justif", function() {deepEqual( Stem("justification"), "justif");});
test("justifications -> justif", function() {deepEqual( Stem("justifications"), "justif");});
test("justifie -> justif", function() {deepEqual( Stem("justifie"), "justif");});
test("justifié -> justifi", function() {deepEqual( Stem("justifié"), "justifi");});
test("justifiée -> justifi", function() {deepEqual( Stem("justifiée"), "justifi");});
test("justifier -> justifi", function() {deepEqual( Stem("justifier"), "justifi");});
test("kâli -> kâl", function() {deepEqual( Stem("kâli"), "kâl");});
test("kalisky -> kalisky", function() {deepEqual( Stem("kalisky"), "kalisky");});
test("kallenger -> kalleng", function() {deepEqual( Stem("kallenger"), "kalleng");});
test("kama -> kam", function() {deepEqual( Stem("kama"), "kam");});
test("kamerfield -> kamerfield", function() {deepEqual( Stem("kamerfield"), "kamerfield");});
test("kandallah -> kandallah", function() {deepEqual( Stem("kandallah"), "kandallah");});
test("kanhérie -> kanher", function() {deepEqual( Stem("kanhérie"), "kanher");});
test("kansas -> kans", function() {deepEqual( Stem("kansas"), "kans");});
test("kant -> kant", function() {deepEqual( Stem("kant"), "kant");});
test("kauffmann -> kauffmann", function() {deepEqual( Stem("kauffmann"), "kauffmann");});
test("kearney -> kearney", function() {deepEqual( Stem("kearney"), "kearney");});
test("kehl -> kehl", function() {deepEqual( Stem("kehl"), "kehl");});
test("kent -> kent", function() {deepEqual( Stem("kent"), "kent");});
test("khajours -> khajour", function() {deepEqual( Stem("khajours"), "khajour");});
test("khandeish -> khandeish", function() {deepEqual( Stem("khandeish"), "khandeish");});
test("kholby -> kholby", function() {deepEqual( Stem("kholby"), "kholby");});
test("kien -> kien", function() {deepEqual( Stem("kien"), "kien");});
test("kilomètres -> kilometr", function() {deepEqual( Stem("kilomètres"), "kilometr");});
test("kind -> kind", function() {deepEqual( Stem("kind"), "kind");});
test("kiouni -> kioun", function() {deepEqual( Stem("kiouni"), "kioun");});
test("kirimon -> kirimon", function() {deepEqual( Stem("kirimon"), "kirimon");});
test("kirkland -> kirkland", function() {deepEqual( Stem("kirkland"), "kirkland");});
test("kléber -> kleb", function() {deepEqual( Stem("kléber"), "kleb");});
test("kong -> kong", function() {deepEqual( Stem("kong"), "kong");});
test("korasoff -> korasoff", function() {deepEqual( Stem("korasoff"), "korasoff");});
test("l -> l", function() {deepEqual( Stem("l"), "l");});
test("la -> la", function() {deepEqual( Stem("la"), "la");});
test("là -> là", function() {deepEqual( Stem("là"), "là");});
test("laborieusement -> labori", function() {deepEqual( Stem("laborieusement"), "labori");});
test("laborieux -> labori", function() {deepEqual( Stem("laborieux"), "labori");});
test("labourée -> labour", function() {deepEqual( Stem("labourée"), "labour");});
test("lac -> lac", function() {deepEqual( Stem("lac"), "lac");});
test("lâcha -> lâch", function() {deepEqual( Stem("lâcha"), "lâch");});
test("lachaise -> lachais", function() {deepEqual( Stem("lachaise"), "lachais");});
test("lâchait -> lâch", function() {deepEqual( Stem("lâchait"), "lâch");});
test("lâche -> lâch", function() {deepEqual( Stem("lâche"), "lâch");});
test("lâchement -> lâch", function() {deepEqual( Stem("lâchement"), "lâch");});
test("lâcher -> lâch", function() {deepEqual( Stem("lâcher"), "lâch");});
test("lâches -> lâch", function() {deepEqual( Stem("lâches"), "lâch");});
test("lâcheté -> lâchet", function() {deepEqual( Stem("lâcheté"), "lâchet");});
test("lâchez -> lâch", function() {deepEqual( Stem("lâchez"), "lâch");});
test("laconiquement -> lacon", function() {deepEqual( Stem("laconiquement"), "lacon");});
test("lacs -> lac", function() {deepEqual( Stem("lacs"), "lac");});
test("ladislas -> ladisl", function() {deepEqual( Stem("ladislas"), "ladisl");});
test("ladri -> ladr", function() {deepEqual( Stem("ladri"), "ladr");});
test("lafayette -> lafayet", function() {deepEqual( Stem("lafayette"), "lafayet");});
test("lago -> lago", function() {deepEqual( Stem("lago"), "lago");});
test("laïc -> laïc", function() {deepEqual( Stem("laïc"), "laïc");});
test("laïcs -> laïc", function() {deepEqual( Stem("laïcs"), "laïc");});
test("laid -> laid", function() {deepEqual( Stem("laid"), "laid");});
test("laide -> laid", function() {deepEqual( Stem("laide"), "laid");});
test("laides -> laid", function() {deepEqual( Stem("laides"), "laid");});
test("laideur -> laideur", function() {deepEqual( Stem("laideur"), "laideur");});
test("laideurs -> laideur", function() {deepEqual( Stem("laideurs"), "laideur");});
test("laine -> lain", function() {deepEqual( Stem("laine"), "lain");});
test("laïque -> laïqu", function() {deepEqual( Stem("laïque"), "laïqu");});
test("laissa -> laiss", function() {deepEqual( Stem("laissa"), "laiss");});
test("laissaient -> laiss", function() {deepEqual( Stem("laissaient"), "laiss");});
test("laissais -> laiss", function() {deepEqual( Stem("laissais"), "laiss");});
test("laissait -> laiss", function() {deepEqual( Stem("laissait"), "laiss");});
test("laissant -> laiss", function() {deepEqual( Stem("laissant"), "laiss");});
test("laissât -> laiss", function() {deepEqual( Stem("laissât"), "laiss");});
test("laisse -> laiss", function() {deepEqual( Stem("laisse"), "laiss");});
test("laissé -> laiss", function() {deepEqual( Stem("laissé"), "laiss");});
test("laissée -> laiss", function() {deepEqual( Stem("laissée"), "laiss");});
test("laissées -> laiss", function() {deepEqual( Stem("laissées"), "laiss");});
test("laissent -> laissent", function() {deepEqual( Stem("laissent"), "laissent");});
test("laisser -> laiss", function() {deepEqual( Stem("laisser"), "laiss");});
test("laissera -> laiss", function() {deepEqual( Stem("laissera"), "laiss");});
test("laisserai -> laiss", function() {deepEqual( Stem("laisserai"), "laiss");});
test("laisserais -> laiss", function() {deepEqual( Stem("laisserais"), "laiss");});
test("laisserait -> laiss", function() {deepEqual( Stem("laisserait"), "laiss");});
test("laissèrent -> laiss", function() {deepEqual( Stem("laissèrent"), "laiss");});
test("laisserez -> laiss", function() {deepEqual( Stem("laisserez"), "laiss");});
test("laissés -> laiss", function() {deepEqual( Stem("laissés"), "laiss");});
test("laissez -> laiss", function() {deepEqual( Stem("laissez"), "laiss");});
test("laissions -> laission", function() {deepEqual( Stem("laissions"), "laission");});
test("laissons -> laisson", function() {deepEqual( Stem("laissons"), "laisson");});
test("lait -> lait", function() {deepEqual( Stem("lait"), "lait");});
test("laiterie -> laiter", function() {deepEqual( Stem("laiterie"), "laiter");});
test("laiton -> laiton", function() {deepEqual( Stem("laiton"), "laiton");});
test("laitue -> laitu", function() {deepEqual( Stem("laitue"), "laitu");});
test("lake -> lak", function() {deepEqual( Stem("lake"), "lak");});
test("lambeau -> lambeau", function() {deepEqual( Stem("lambeau"), "lambeau");});
test("lambeaux -> lambeau", function() {deepEqual( Stem("lambeaux"), "lambeau");});
test("lambris -> lambr", function() {deepEqual( Stem("lambris"), "lambr");});
test("lambrissée -> lambriss", function() {deepEqual( Stem("lambrissée"), "lambriss");});
test("lame -> lam", function() {deepEqual( Stem("lame"), "lam");});
test("lamée -> lam", function() {deepEqual( Stem("lamée"), "lam");});
test("lamentable -> lament", function() {deepEqual( Stem("lamentable"), "lament");});
test("lamentables -> lament", function() {deepEqual( Stem("lamentables"), "lament");});
test("lames -> lam", function() {deepEqual( Stem("lames"), "lam");});
test("lampe -> lamp", function() {deepEqual( Stem("lampe"), "lamp");});
test("lampes -> lamp", function() {deepEqual( Stem("lampes"), "lamp");});
test("lança -> lanc", function() {deepEqual( Stem("lança"), "lanc");});
test("lançaient -> lanc", function() {deepEqual( Stem("lançaient"), "lanc");});
test("lançait -> lanc", function() {deepEqual( Stem("lançait"), "lanc");});
test("lançant -> lanc", function() {deepEqual( Stem("lançant"), "lanc");});
test("lance -> lanc", function() {deepEqual( Stem("lance"), "lanc");});
test("lancé -> lanc", function() {deepEqual( Stem("lancé"), "lanc");});
test("lancée -> lanc", function() {deepEqual( Stem("lancée"), "lanc");});
test("lancer -> lanc", function() {deepEqual( Stem("lancer"), "lanc");});
test("lancés -> lanc", function() {deepEqual( Stem("lancés"), "lanc");});
test("landau -> landau", function() {deepEqual( Stem("landau"), "landau");});
test("landes -> land", function() {deepEqual( Stem("landes"), "land");});
test("landriani -> landrian", function() {deepEqual( Stem("landriani"), "landrian");});
test("langage -> langag", function() {deepEqual( Stem("langage"), "langag");});
test("lange -> lang", function() {deepEqual( Stem("lange"), "lang");});
test("langue -> langu", function() {deepEqual( Stem("langue"), "langu");});
test("languedoc -> languedoc", function() {deepEqual( Stem("languedoc"), "languedoc");});
test("langues -> langu", function() {deepEqual( Stem("langues"), "langu");});
test("langueur -> langueur", function() {deepEqual( Stem("langueur"), "langueur");});
test("languir -> languir", function() {deepEqual( Stem("languir"), "languir");});
test("languis -> languis", function() {deepEqual( Stem("languis"), "languis");});
test("languissait -> languiss", function() {deepEqual( Stem("languissait"), "languiss");});
test("languissante -> languiss", function() {deepEqual( Stem("languissante"), "languiss");});
test("lanterne -> lantern", function() {deepEqual( Stem("lanterne"), "lantern");});
test("lanternes -> lantern", function() {deepEqual( Stem("lanternes"), "lantern");});
test("lapidaire -> lapidair", function() {deepEqual( Stem("lapidaire"), "lapidair");});
test("lapin -> lapin", function() {deepEqual( Stem("lapin"), "lapin");});
test("laps -> lap", function() {deepEqual( Stem("laps"), "lap");});
test("laquais -> laqu", function() {deepEqual( Stem("laquais"), "laqu");});
test("laque -> laqu", function() {deepEqual( Stem("laque"), "laqu");});
test("laquelle -> laquel", function() {deepEqual( Stem("laquelle"), "laquel");});
test("laramie -> laram", function() {deepEqual( Stem("laramie"), "laram");});
test("lard -> lard", function() {deepEqual( Stem("lard"), "lard");});
test("larga -> larg", function() {deepEqual( Stem("larga"), "larg");});
test("large -> larg", function() {deepEqual( Stem("large"), "larg");});
test("largement -> larg", function() {deepEqual( Stem("largement"), "larg");});
test("larges -> larg", function() {deepEqual( Stem("larges"), "larg");});
test("largeur -> largeur", function() {deepEqual( Stem("largeur"), "largeur");});
test("larguait -> largu", function() {deepEqual( Stem("larguait"), "largu");});
test("largue -> largu", function() {deepEqual( Stem("largue"), "largu");});
test("larme -> larm", function() {deepEqual( Stem("larme"), "larm");});
test("larmes -> larm", function() {deepEqual( Stem("larmes"), "larm");});
test("las -> las", function() {deepEqual( Stem("las"), "las");});
test("lascia -> lasci", function() {deepEqual( Stem("lascia"), "lasci");});
test("lassa -> lass", function() {deepEqual( Stem("lassa"), "lass");});
test("lasse -> lass", function() {deepEqual( Stem("lasse"), "lass");});
test("lasser -> lass", function() {deepEqual( Stem("lasser"), "lass");});
test("lasseront -> lass", function() {deepEqual( Stem("lasseront"), "lass");});
test("last -> last", function() {deepEqual( Stem("last"), "last");});
test("lataniers -> latani", function() {deepEqual( Stem("lataniers"), "latani");});
test("latérale -> latéral", function() {deepEqual( Stem("latérale"), "latéral");});
test("latérales -> latéral", function() {deepEqual( Stem("latérales"), "latéral");});
test("latin -> latin", function() {deepEqual( Stem("latin"), "latin");});
test("latinam -> latinam", function() {deepEqual( Stem("latinam"), "latinam");});
test("latine -> latin", function() {deepEqual( Stem("latine"), "latin");});
test("latines -> latin", function() {deepEqual( Stem("latines"), "latin");});
test("latiniste -> latin", function() {deepEqual( Stem("latiniste"), "latin");});
test("latinité -> latin", function() {deepEqual( Stem("latinité"), "latin");});
test("latins -> latin", function() {deepEqual( Stem("latins"), "latin");});
test("laudanum -> laudanum", function() {deepEqual( Stem("laudanum"), "laudanum");});
test("laughter -> laught", function() {deepEqual( Stem("laughter"), "laught");});
test("lauréat -> lauréat", function() {deepEqual( Stem("lauréat"), "lauréat");});
test("laurent -> laurent", function() {deepEqual( Stem("laurent"), "laurent");});
test("laurier -> lauri", function() {deepEqual( Stem("laurier"), "lauri");});
test("lauriers -> lauri", function() {deepEqual( Stem("lauriers"), "lauri");});
test("lausanne -> lausann", function() {deepEqual( Stem("lausanne"), "lausann");});
test("lavalette -> lavalet", function() {deepEqual( Stem("lavalette"), "lavalet");});
test("lave -> lav", function() {deepEqual( Stem("lave"), "lav");});
test("laveno -> laveno", function() {deepEqual( Stem("laveno"), "laveno");});
test("laver -> lav", function() {deepEqual( Stem("laver"), "lav");});
test("laye -> lay", function() {deepEqual( Stem("laye"), "lay");});
test("le -> le", function() {deepEqual( Stem("le"), "le");});
test("least -> least", function() {deepEqual( Stem("least"), "least");});
test("lecco -> lecco", function() {deepEqual( Stem("lecco"), "lecco");});
test("leçon -> leçon", function() {deepEqual( Stem("leçon"), "leçon");});
test("leçons -> leçon", function() {deepEqual( Stem("leçons"), "leçon");});
test("lecteur -> lecteur", function() {deepEqual( Stem("lecteur"), "lecteur");});
test("lecteurs -> lecteur", function() {deepEqual( Stem("lecteurs"), "lecteur");});
test("lectrice -> lectric", function() {deepEqual( Stem("lectrice"), "lectric");});
test("lecture -> lectur", function() {deepEqual( Stem("lecture"), "lectur");});
test("ledit -> led", function() {deepEqual( Stem("ledit"), "led");});
test("left -> left", function() {deepEqual( Stem("left"), "left");});
test("légale -> légal", function() {deepEqual( Stem("légale"), "légal");});
test("légalement -> légal", function() {deepEqual( Stem("légalement"), "légal");});
test("légalité -> légal", function() {deepEqual( Stem("légalité"), "légal");});
test("légation -> légat", function() {deepEqual( Stem("légation"), "légat");});
test("légendaire -> légendair", function() {deepEqual( Stem("légendaire"), "légendair");});
test("légendes -> légend", function() {deepEqual( Stem("légendes"), "légend");});
test("leger -> leg", function() {deepEqual( Stem("leger"), "leg");});
test("léger -> leg", function() {deepEqual( Stem("léger"), "leg");});
test("légère -> léger", function() {deepEqual( Stem("légère"), "léger");});
test("légèrement -> léger", function() {deepEqual( Stem("légèrement"), "léger");});
test("légères -> léger", function() {deepEqual( Stem("légères"), "léger");});
test("légèreté -> légèret", function() {deepEqual( Stem("légèreté"), "légèret");});
test("légers -> léger", function() {deepEqual( Stem("légers"), "léger");});
test("légion -> légion", function() {deepEqual( Stem("légion"), "légion");});
test("législateur -> législ", function() {deepEqual( Stem("législateur"), "législ");});
test("législateurs -> législ", function() {deepEqual( Stem("législateurs"), "législ");});
test("législature -> législatur", function() {deepEqual( Stem("législature"), "législatur");});
test("legitime -> legitim", function() {deepEqual( Stem("legitime"), "legitim");});
test("légitime -> légitim", function() {deepEqual( Stem("légitime"), "légitim");});
test("légitimes -> légitim", function() {deepEqual( Stem("légitimes"), "légitim");});
test("légitimité -> légitim", function() {deepEqual( Stem("légitimité"), "légitim");});
test("legs -> leg", function() {deepEqual( Stem("legs"), "leg");});
test("légua -> légu", function() {deepEqual( Stem("légua"), "légu");});
test("lègue -> lègu", function() {deepEqual( Stem("lègue"), "lègu");});
test("légué -> légu", function() {deepEqual( Stem("légué"), "légu");});
test("leipsick -> leipsick", function() {deepEqual( Stem("leipsick"), "leipsick");});
test("lek -> lek", function() {deepEqual( Stem("lek"), "lek");});
test("lélio -> lélio", function() {deepEqual( Stem("lélio"), "lélio");});
test("lendemain -> lendemain", function() {deepEqual( Stem("lendemain"), "lendemain");});
test("lent -> lent", function() {deepEqual( Stem("lent"), "lent");});
test("lente -> lent", function() {deepEqual( Stem("lente"), "lent");});
test("lentement -> lent", function() {deepEqual( Stem("lentement"), "lent");});
test("lentes -> lent", function() {deepEqual( Stem("lentes"), "lent");});
test("lenteur -> lenteur", function() {deepEqual( Stem("lenteur"), "lenteur");});
test("lenteurs -> lenteur", function() {deepEqual( Stem("lenteurs"), "lenteur");});
test("lents -> lent", function() {deepEqual( Stem("lents"), "lent");});
test("leo -> leo", function() {deepEqual( Stem("leo"), "leo");});
test("léonard -> léonard", function() {deepEqual( Stem("léonard"), "léonard");});
test("léontine -> léontin", function() {deepEqual( Stem("léontine"), "léontin");});
test("léotard -> léotard", function() {deepEqual( Stem("léotard"), "léotard");});
test("lépidoptères -> lépidopter", function() {deepEqual( Stem("lépidoptères"), "lépidopter");});
test("lequel -> lequel", function() {deepEqual( Stem("lequel"), "lequel");});
test("leroy -> leroy", function() {deepEqual( Stem("leroy"), "leroy");});
test("les -> le", function() {deepEqual( Stem("les"), "le");});
test("lés -> lé", function() {deepEqual( Stem("lés"), "lé");});
test("lescaut -> lescaut", function() {deepEqual( Stem("lescaut"), "lescaut");});
test("lesdits -> lesdit", function() {deepEqual( Stem("lesdits"), "lesdit");});
test("lèse -> les", function() {deepEqual( Stem("lèse"), "les");});
test("lésineries -> lésiner", function() {deepEqual( Stem("lésineries"), "lésiner");});
test("lesquelles -> lesquel", function() {deepEqual( Stem("lesquelles"), "lesquel");});
test("lesquels -> lesquel", function() {deepEqual( Stem("lesquels"), "lesquel");});
test("less -> less", function() {deepEqual( Stem("less"), "less");});
test("lesseps -> lessep", function() {deepEqual( Stem("lesseps"), "lessep");});
test("lest -> lest", function() {deepEqual( Stem("lest"), "lest");});
test("leste -> lest", function() {deepEqual( Stem("leste"), "lest");});
test("lestement -> lest", function() {deepEqual( Stem("lestement"), "lest");});
test("lester -> lest", function() {deepEqual( Stem("lester"), "lest");});
test("léthargique -> létharg", function() {deepEqual( Stem("léthargique"), "létharg");});
test("lettre -> lettr", function() {deepEqual( Stem("lettre"), "lettr");});
test("lettres -> lettr", function() {deepEqual( Stem("lettres"), "lettr");});
test("leur -> leur", function() {deepEqual( Stem("leur"), "leur");});
test("leurs -> leur", function() {deepEqual( Stem("leurs"), "leur");});
test("leva -> lev", function() {deepEqual( Stem("leva"), "lev");});
test("levait -> lev", function() {deepEqual( Stem("levait"), "lev");});
test("levant -> lev", function() {deepEqual( Stem("levant"), "lev");});
test("lève -> lev", function() {deepEqual( Stem("lève"), "lev");});
test("levé -> lev", function() {deepEqual( Stem("levé"), "lev");});
test("levée -> lev", function() {deepEqual( Stem("levée"), "lev");});
test("levées -> lev", function() {deepEqual( Stem("levées"), "lev");});
test("lèvent -> lèvent", function() {deepEqual( Stem("lèvent"), "lèvent");});
test("lever -> lev", function() {deepEqual( Stem("lever"), "lev");});
test("lèvera -> lev", function() {deepEqual( Stem("lèvera"), "lev");});
test("levèrent -> lev", function() {deepEqual( Stem("levèrent"), "lev");});
test("levez -> lev", function() {deepEqual( Stem("levez"), "lev");});
test("levier -> levi", function() {deepEqual( Stem("levier"), "levi");});
test("leviers -> levi", function() {deepEqual( Stem("leviers"), "levi");});
test("levis -> lev", function() {deepEqual( Stem("levis"), "lev");});
test("lévite -> lévit", function() {deepEqual( Stem("lévite"), "lévit");});
test("lèvre -> levr", function() {deepEqual( Stem("lèvre"), "levr");});
test("lèvres -> levr", function() {deepEqual( Stem("lèvres"), "levr");});
test("lia -> li", function() {deepEqual( Stem("lia"), "li");});
test("liaison -> liaison", function() {deepEqual( Stem("liaison"), "liaison");});
test("liaisons -> liaison", function() {deepEqual( Stem("liaisons"), "liaison");});
test("liant -> li", function() {deepEqual( Stem("liant"), "li");});
test("liard -> liard", function() {deepEqual( Stem("liard"), "liard");});
test("liasse -> li", function() {deepEqual( Stem("liasse"), "li");});
test("liasses -> li", function() {deepEqual( Stem("liasses"), "li");});
test("liât -> li", function() {deepEqual( Stem("liât"), "li");});
test("libellé -> libel", function() {deepEqual( Stem("libellé"), "libel");});
test("libellée -> libel", function() {deepEqual( Stem("libellée"), "libel");});
test("libéral -> libéral", function() {deepEqual( Stem("libéral"), "libéral");});
test("libérales -> libéral", function() {deepEqual( Stem("libérales"), "libéral");});
test("libéralisme -> libéral", function() {deepEqual( Stem("libéralisme"), "libéral");});
test("libérateur -> liber", function() {deepEqual( Stem("libérateur"), "liber");});
test("libéraux -> libéral", function() {deepEqual( Stem("libéraux"), "libéral");});
test("liberté -> libert", function() {deepEqual( Stem("liberté"), "libert");});
test("libertin -> libertin", function() {deepEqual( Stem("libertin"), "libertin");});
test("libertinage -> libertinag", function() {deepEqual( Stem("libertinage"), "libertinag");});
test("libraire -> librair", function() {deepEqual( Stem("libraire"), "librair");});
test("libraires -> librair", function() {deepEqual( Stem("libraires"), "librair");});
test("libre -> libr", function() {deepEqual( Stem("libre"), "libr");});
test("librement -> libr", function() {deepEqual( Stem("librement"), "libr");});
test("libres -> libr", function() {deepEqual( Stem("libres"), "libr");});
test("lichtenberg -> lichtenberg", function() {deepEqual( Stem("lichtenberg"), "lichtenberg");});
test("lie -> li", function() {deepEqual( Stem("lie"), "li");});
test("lié -> li", function() {deepEqual( Stem("lié"), "li");});
test("liée -> li", function() {deepEqual( Stem("liée"), "li");});
test("liées -> li", function() {deepEqual( Stem("liées"), "li");});
test("liège -> lieg", function() {deepEqual( Stem("liège"), "lieg");});
test("lien -> lien", function() {deepEqual( Stem("lien"), "lien");});
test("liens -> lien", function() {deepEqual( Stem("liens"), "lien");});
test("lier -> li", function() {deepEqual( Stem("lier"), "li");});
test("lierre -> lierr", function() {deepEqual( Stem("lierre"), "lierr");});
test("liés -> li", function() {deepEqual( Stem("liés"), "li");});
test("lieu -> lieu", function() {deepEqual( Stem("lieu"), "lieu");});
test("lieue -> lieu", function() {deepEqual( Stem("lieue"), "lieu");});
test("lieues -> lieu", function() {deepEqual( Stem("lieues"), "lieu");});
test("lieutenance -> lieuten", function() {deepEqual( Stem("lieutenance"), "lieuten");});
test("lieutenant -> lieuten", function() {deepEqual( Stem("lieutenant"), "lieuten");});
test("lieutenants -> lieuten", function() {deepEqual( Stem("lieutenants"), "lieuten");});
test("lieux -> lieux", function() {deepEqual( Stem("lieux"), "lieux");});
test("liéven -> liéven", function() {deepEqual( Stem("liéven"), "liéven");});
test("lièvre -> lievr", function() {deepEqual( Stem("lièvre"), "lievr");});
test("lièvres -> lievr", function() {deepEqual( Stem("lièvres"), "lievr");});
test("light -> light", function() {deepEqual( Stem("light"), "light");});
test("ligne -> lign", function() {deepEqual( Stem("ligne"), "lign");});
test("lignes -> lign", function() {deepEqual( Stem("lignes"), "lign");});
test("ligny -> ligny", function() {deepEqual( Stem("ligny"), "ligny");});
test("ligorio -> ligorio", function() {deepEqual( Stem("ligorio"), "ligorio");});
test("ligue -> ligu", function() {deepEqual( Stem("ligue"), "ligu");});
test("ligués -> ligu", function() {deepEqual( Stem("ligués"), "ligu");});
test("lilliputiens -> lilliputien", function() {deepEqual( Stem("lilliputiens"), "lilliputien");});
test("limercati -> limercat", function() {deepEqual( Stem("limercati"), "limercat");});
test("limite -> limit", function() {deepEqual( Stem("limite"), "limit");});
test("limites -> limit", function() {deepEqual( Stem("limites"), "limit");});
test("limpide -> limpid", function() {deepEqual( Stem("limpide"), "limpid");});
test("limpides -> limpid", function() {deepEqual( Stem("limpides"), "limpid");});
test("lincoln -> lincoln", function() {deepEqual( Stem("lincoln"), "lincoln");});
test("line -> lin", function() {deepEqual( Stem("line"), "lin");});
test("linge -> ling", function() {deepEqual( Stem("linge"), "ling");});
test("lingère -> linger", function() {deepEqual( Stem("lingère"), "linger");});
test("lingot -> lingot", function() {deepEqual( Stem("lingot"), "lingot");});
test("linguam -> linguam", function() {deepEqual( Stem("linguam"), "linguam");});
test("lion -> lion", function() {deepEqual( Stem("lion"), "lion");});
test("lip -> lip", function() {deepEqual( Stem("lip"), "lip");});
test("liqueur -> liqueur", function() {deepEqual( Stem("liqueur"), "liqueur");});
test("liqueurs -> liqueur", function() {deepEqual( Stem("liqueurs"), "liqueur");});
test("liquide -> liquid", function() {deepEqual( Stem("liquide"), "liquid");});
test("liquidée -> liquid", function() {deepEqual( Stem("liquidée"), "liquid");});
test("lira -> lir", function() {deepEqual( Stem("lira"), "lir");});
test("lirai -> lir", function() {deepEqual( Stem("lirai"), "lir");});
test("liras -> lir", function() {deepEqual( Stem("liras"), "lir");});
test("lire -> lir", function() {deepEqual( Stem("lire"), "lir");});
test("lis -> lis", function() {deepEqual( Stem("lis"), "lis");});
test("lisaient -> lis", function() {deepEqual( Stem("lisaient"), "lis");});
test("lisait -> lis", function() {deepEqual( Stem("lisait"), "lis");});
test("lisant -> lis", function() {deepEqual( Stem("lisant"), "lis");});
test("lisard -> lisard", function() {deepEqual( Stem("lisard"), "lisard");});
test("lisent -> lisent", function() {deepEqual( Stem("lisent"), "lisent");});
test("lisez -> lis", function() {deepEqual( Stem("lisez"), "lis");});
test("lisible -> lisibl", function() {deepEqual( Stem("lisible"), "lisibl");});
test("lisière -> lisi", function() {deepEqual( Stem("lisière"), "lisi");});
test("lisse -> liss", function() {deepEqual( Stem("lisse"), "liss");});
test("lisses -> liss", function() {deepEqual( Stem("lisses"), "liss");});
test("liste -> list", function() {deepEqual( Stem("liste"), "list");});
test("lit -> lit", function() {deepEqual( Stem("lit"), "lit");});
test("litanies -> litan", function() {deepEqual( Stem("litanies"), "litan");});
test("lithographiée -> lithographi", function() {deepEqual( Stem("lithographiée"), "lithographi");});
test("lithographies -> lithograph", function() {deepEqual( Stem("lithographies"), "lithograph");});
test("litière -> liti", function() {deepEqual( Stem("litière"), "liti");});
test("litières -> liti", function() {deepEqual( Stem("litières"), "liti");});
test("lits -> lit", function() {deepEqual( Stem("lits"), "lit");});
test("littéraire -> littérair", function() {deepEqual( Stem("littéraire"), "littérair");});
test("littéraires -> littérair", function() {deepEqual( Stem("littéraires"), "littérair");});
test("littéralement -> littéral", function() {deepEqual( Stem("littéralement"), "littéral");});
test("littérature -> littératur", function() {deepEqual( Stem("littérature"), "littératur");});
test("little -> littl", function() {deepEqual( Stem("little"), "littl");});
test("live -> liv", function() {deepEqual( Stem("live"), "liv");});
test("liverpool -> liverpool", function() {deepEqual( Stem("liverpool"), "liverpool");});
test("liveru -> liveru", function() {deepEqual( Stem("liveru"), "liveru");});
test("livra -> livr", function() {deepEqual( Stem("livra"), "livr");});
test("livraient -> livr", function() {deepEqual( Stem("livraient"), "livr");});
test("livrais -> livr", function() {deepEqual( Stem("livrais"), "livr");});
test("livrait -> livr", function() {deepEqual( Stem("livrait"), "livr");});
test("livre -> livr", function() {deepEqual( Stem("livre"), "livr");});
test("livré -> livr", function() {deepEqual( Stem("livré"), "livr");});
test("livrée -> livr", function() {deepEqual( Stem("livrée"), "livr");});
test("livrées -> livr", function() {deepEqual( Stem("livrées"), "livr");});
test("livrer -> livr", function() {deepEqual( Stem("livrer"), "livr");});
test("livres -> livr", function() {deepEqual( Stem("livres"), "livr");});
test("livrés -> livr", function() {deepEqual( Stem("livrés"), "livr");});
test("livret -> livret", function() {deepEqual( Stem("livret"), "livret");});
test("ll -> ll", function() {deepEqual( Stem("ll"), "ll");});
test("locale -> local", function() {deepEqual( Stem("locale"), "local");});
test("locarno -> locarno", function() {deepEqual( Stem("locarno"), "locarno");});
test("locataire -> locatair", function() {deepEqual( Stem("locataire"), "locatair");});
test("location -> locat", function() {deepEqual( Stem("location"), "locat");});
test("loch -> loch", function() {deepEqual( Stem("loch"), "loch");});
test("locke -> lock", function() {deepEqual( Stem("locke"), "lock");});
test("locomotion -> locomot", function() {deepEqual( Stem("locomotion"), "locomot");});
test("locomotive -> locomot", function() {deepEqual( Stem("locomotive"), "locomot");});
test("locomotives -> locomot", function() {deepEqual( Stem("locomotives"), "locomot");});
test("lodge -> lodg", function() {deepEqual( Stem("lodge"), "lodg");});
test("lodi -> lod", function() {deepEqual( Stem("lodi"), "lod");});
test("loge -> log", function() {deepEqual( Stem("loge"), "log");});
test("logé -> log", function() {deepEqual( Stem("logé"), "log");});
test("logeable -> logeabl", function() {deepEqual( Stem("logeable"), "logeabl");});
test("logement -> log", function() {deepEqual( Stem("logement"), "log");});
test("logements -> log", function() {deepEqual( Stem("logements"), "log");});
test("loger -> log", function() {deepEqual( Stem("loger"), "log");});
test("loges -> log", function() {deepEqual( Stem("loges"), "log");});
test("logés -> log", function() {deepEqual( Stem("logés"), "log");});
test("logions -> logion", function() {deepEqual( Stem("logions"), "logion");});
test("logique -> logiqu", function() {deepEqual( Stem("logique"), "logiqu");});
test("logiques -> logiqu", function() {deepEqual( Stem("logiques"), "logiqu");});
test("logis -> log", function() {deepEqual( Stem("logis"), "log");});
test("loi -> loi", function() {deepEqual( Stem("loi"), "loi");});
test("loin -> loin", function() {deepEqual( Stem("loin"), "loin");});
test("lointain -> lointain", function() {deepEqual( Stem("lointain"), "lointain");});
test("lointaine -> lointain", function() {deepEqual( Stem("lointaine"), "lointain");});
test("lointaines -> lointain", function() {deepEqual( Stem("lointaines"), "lointain");});
test("lointains -> lointain", function() {deepEqual( Stem("lointains"), "lointain");});
test("lois -> lois", function() {deepEqual( Stem("lois"), "lois");});
test("loisir -> lois", function() {deepEqual( Stem("loisir"), "lois");});
test("lombarde -> lombard", function() {deepEqual( Stem("lombarde"), "lombard");});
test("lombardie -> lombard", function() {deepEqual( Stem("lombardie"), "lombard");});
test("lombardo -> lombardo", function() {deepEqual( Stem("lombardo"), "lombardo");});
test("lombards -> lombard", function() {deepEqual( Stem("lombards"), "lombard");});
test("lonato -> lonato", function() {deepEqual( Stem("lonato"), "lonato");});
test("london -> london", function() {deepEqual( Stem("london"), "london");});
test("londonner -> london", function() {deepEqual( Stem("londonner"), "london");});
test("londres -> londr", function() {deepEqual( Stem("londres"), "londr");});
test("long -> long", function() {deepEqual( Stem("long"), "long");});
test("longanimité -> longanim", function() {deepEqual( Stem("longanimité"), "longanim");});
test("longe -> long", function() {deepEqual( Stem("longe"), "long");});
test("longeant -> long", function() {deepEqual( Stem("longeant"), "long");});
test("longerons -> long", function() {deepEqual( Stem("longerons"), "long");});
test("longévité -> longev", function() {deepEqual( Stem("longévité"), "longev");});
test("longs -> long", function() {deepEqual( Stem("longs"), "long");});
test("longsferry -> longsferry", function() {deepEqual( Stem("longsferry"), "longsferry");});
test("longtemps -> longtemp", function() {deepEqual( Stem("longtemps"), "longtemp");});
test("longue -> longu", function() {deepEqual( Stem("longue"), "longu");});
test("longuement -> longu", function() {deepEqual( Stem("longuement"), "longu");});
test("longues -> longu", function() {deepEqual( Stem("longues"), "longu");});
test("longueur -> longueur", function() {deepEqual( Stem("longueur"), "longueur");});
test("longueville -> longuevill", function() {deepEqual( Stem("longueville"), "longuevill");});
test("lope -> lop", function() {deepEqual( Stem("lope"), "lop");});
test("loquerisne -> loquerisn", function() {deepEqual( Stem("loquerisne"), "loquerisn");});
test("loques -> loqu", function() {deepEqual( Stem("loques"), "loqu");});
test("loquet -> loquet", function() {deepEqual( Stem("loquet"), "loquet");});
test("lord -> lord", function() {deepEqual( Stem("lord"), "lord");});
test("lords -> lord", function() {deepEqual( Stem("lords"), "lord");});
test("lorgnette -> lorgnet", function() {deepEqual( Stem("lorgnette"), "lorgnet");});
test("lorgnettes -> lorgnet", function() {deepEqual( Stem("lorgnettes"), "lorgnet");});
test("lors -> lor", function() {deepEqual( Stem("lors"), "lor");});
test("lorsqu -> lorsqu", function() {deepEqual( Stem("lorsqu"), "lorsqu");});
test("lorsque -> lorsqu", function() {deepEqual( Stem("lorsque"), "lorsqu");});
test("lot -> lot", function() {deepEqual( Stem("lot"), "lot");});
test("loterie -> loter", function() {deepEqual( Stem("loterie"), "loter");});
test("lotus -> lotus", function() {deepEqual( Stem("lotus"), "lotus");});
test("loua -> lou", function() {deepEqual( Stem("loua"), "lou");});
test("louables -> louabl", function() {deepEqual( Stem("louables"), "louabl");});
test("louage -> louag", function() {deepEqual( Stem("louage"), "louag");});
test("louaient -> lou", function() {deepEqual( Stem("louaient"), "lou");});
test("louange -> louang", function() {deepEqual( Stem("louange"), "louang");});
test("louanges -> louang", function() {deepEqual( Stem("louanges"), "louang");});
test("louant -> lou", function() {deepEqual( Stem("louant"), "lou");});
test("louche -> louch", function() {deepEqual( Stem("louche"), "louch");});
test("loue -> lou", function() {deepEqual( Stem("loue"), "lou");});
test("loué -> lou", function() {deepEqual( Stem("loué"), "lou");});
test("louée -> lou", function() {deepEqual( Stem("louée"), "lou");});
test("louées -> lou", function() {deepEqual( Stem("louées"), "lou");});
test("louer -> lou", function() {deepEqual( Stem("louer"), "lou");});
test("louera -> lou", function() {deepEqual( Stem("louera"), "lou");});
test("loueras -> lou", function() {deepEqual( Stem("loueras"), "lou");});
test("louèrent -> lou", function() {deepEqual( Stem("louèrent"), "lou");});
test("loueur -> loueur", function() {deepEqual( Stem("loueur"), "loueur");});
test("loueuse -> loueux", function() {deepEqual( Stem("loueuse"), "loueux");});
test("louez -> lou", function() {deepEqual( Stem("louez"), "lou");});
test("louiez -> lou", function() {deepEqual( Stem("louiez"), "lou");});
test("louis -> lou", function() {deepEqual( Stem("louis"), "lou");});
test("louise -> louis", function() {deepEqual( Stem("louise"), "louis");});
test("louons -> louon", function() {deepEqual( Stem("louons"), "louon");});
test("loup -> loup", function() {deepEqual( Stem("loup"), "loup");});
test("loups -> loup", function() {deepEqual( Stem("loups"), "loup");});
test("lourd -> lourd", function() {deepEqual( Stem("lourd"), "lourd");});
test("lourde -> lourd", function() {deepEqual( Stem("lourde"), "lourd");});
test("lourdement -> lourd", function() {deepEqual( Stem("lourdement"), "lourd");});
test("lourdes -> lourd", function() {deepEqual( Stem("lourdes"), "lourd");});
test("lourdeur -> lourdeur", function() {deepEqual( Stem("lourdeur"), "lourdeur");});
test("loutre -> loutr", function() {deepEqual( Stem("loutre"), "loutr");});
test("louvre -> louvr", function() {deepEqual( Stem("louvre"), "louvr");});
test("love -> lov", function() {deepEqual( Stem("love"), "lov");});
test("lowe -> low", function() {deepEqual( Stem("lowe"), "low");});
test("loyal -> loyal", function() {deepEqual( Stem("loyal"), "loyal");});
test("loyalement -> loyal", function() {deepEqual( Stem("loyalement"), "loyal");});
test("loyauté -> loyaut", function() {deepEqual( Stem("loyauté"), "loyaut");});
test("loyaux -> loyal", function() {deepEqual( Stem("loyaux"), "loyal");});
test("lu -> lu", function() {deepEqual( Stem("lu"), "lu");});
test("lucides -> lucid", function() {deepEqual( Stem("lucides"), "lucid");});
test("lucrative -> lucrat", function() {deepEqual( Stem("lucrative"), "lucrat");});
test("ludovic -> ludovic", function() {deepEqual( Stem("ludovic"), "ludovic");});
test("lue -> lu", function() {deepEqual( Stem("lue"), "lu");});
test("lues -> lu", function() {deepEqual( Stem("lues"), "lu");});
test("lueur -> lueur", function() {deepEqual( Stem("lueur"), "lueur");});
test("lueurs -> lueur", function() {deepEqual( Stem("lueurs"), "lueur");});
test("lugano -> lugano", function() {deepEqual( Stem("lugano"), "lugano");});
test("lugubre -> lugubr", function() {deepEqual( Stem("lugubre"), "lugubr");});
test("lugubrement -> lugubr", function() {deepEqual( Stem("lugubrement"), "lugubr");});
test("lugubres -> lugubr", function() {deepEqual( Stem("lugubres"), "lugubr");});
test("lui -> lui", function() {deepEqual( Stem("lui"), "lui");});
test("luisante -> luis", function() {deepEqual( Stem("luisante"), "luis");});
test("lumière -> lumi", function() {deepEqual( Stem("lumière"), "lumi");});
test("lumières -> lumi", function() {deepEqual( Stem("lumières"), "lumi");});
test("lumineuse -> lumin", function() {deepEqual( Stem("lumineuse"), "lumin");});
test("luna -> lun", function() {deepEqual( Stem("luna"), "lun");});
test("lunch -> lunch", function() {deepEqual( Stem("lunch"), "lunch");});
test("lundi -> lund", function() {deepEqual( Stem("lundi"), "lund");});
test("lune -> lun", function() {deepEqual( Stem("lune"), "lun");});
test("lunette -> lunet", function() {deepEqual( Stem("lunette"), "lunet");});
test("luoghi -> luogh", function() {deepEqual( Stem("luoghi"), "luogh");});
test("lustre -> lustr", function() {deepEqual( Stem("lustre"), "lustr");});
test("lustres -> lustr", function() {deepEqual( Stem("lustres"), "lustr");});
test("lut -> lut", function() {deepEqual( Stem("lut"), "lut");});
test("luther -> luth", function() {deepEqual( Stem("luther"), "luth");});
test("luttaient -> lutt", function() {deepEqual( Stem("luttaient"), "lutt");});
test("luttait -> lutt", function() {deepEqual( Stem("luttait"), "lutt");});
test("lutte -> lutt", function() {deepEqual( Stem("lutte"), "lutt");});
test("luttent -> luttent", function() {deepEqual( Stem("luttent"), "luttent");});
test("lutter -> lutt", function() {deepEqual( Stem("lutter"), "lutt");});
test("luttera -> lutt", function() {deepEqual( Stem("luttera"), "lutt");});
test("luttes -> lutt", function() {deepEqual( Stem("luttes"), "lutt");});
test("luxe -> lux", function() {deepEqual( Stem("luxe"), "lux");});
test("luxée -> lux", function() {deepEqual( Stem("luxée"), "lux");});
test("luxembourg -> luxembourg", function() {deepEqual( Stem("luxembourg"), "luxembourg");});
test("luxuriantes -> luxuri", function() {deepEqual( Stem("luxuriantes"), "luxuri");});
test("luz -> luz", function() {deepEqual( Stem("luz"), "luz");});
test("lycéens -> lycéen", function() {deepEqual( Stem("lycéens"), "lycéen");});
test("lyon -> lyon", function() {deepEqual( Stem("lyon"), "lyon");});
test("lyre -> lyr", function() {deepEqual( Stem("lyre"), "lyr");});
test("m -> m", function() {deepEqual( Stem("m"), "m");});
test("ma -> ma", function() {deepEqual( Stem("ma"), "ma");});
test("mac -> mac", function() {deepEqual( Stem("mac"), "mac");});
test("macadamisées -> macadamis", function() {deepEqual( Stem("macadamisées"), "macadamis");});
test("macao -> macao", function() {deepEqual( Stem("macao"), "macao");});
test("mâchais -> mâch", function() {deepEqual( Stem("mâchais"), "mâch");});
test("mâchait -> mâch", function() {deepEqual( Stem("mâchait"), "mâch");});
test("machiavel -> machiavel", function() {deepEqual( Stem("machiavel"), "machiavel");});
test("machiavélisme -> machiavel", function() {deepEqual( Stem("machiavélisme"), "machiavel");});
test("machiavelli -> machiavel", function() {deepEqual( Stem("machiavelli"), "machiavel");});
test("machinalement -> machinal", function() {deepEqual( Stem("machinalement"), "machinal");});
test("machine -> machin", function() {deepEqual( Stem("machine"), "machin");});
test("machines -> machin", function() {deepEqual( Stem("machines"), "machin");});
test("mackintosh -> mackintosh", function() {deepEqual( Stem("mackintosh"), "mackintosh");});
test("macon -> macon", function() {deepEqual( Stem("macon"), "macon");});
test("maçon -> maçon", function() {deepEqual( Stem("maçon"), "maçon");});
test("maçonnerie -> maçonner", function() {deepEqual( Stem("maçonnerie"), "maçonner");});
test("maçons -> maçon", function() {deepEqual( Stem("maçons"), "maçon");});
test("madame -> madam", function() {deepEqual( Stem("madame"), "madam");});
test("made -> mad", function() {deepEqual( Stem("made"), "mad");});
test("madeleine -> madelein", function() {deepEqual( Stem("madeleine"), "madelein");});
test("mademoiselle -> mademoisel", function() {deepEqual( Stem("mademoiselle"), "mademoisel");});
test("madone -> madon", function() {deepEqual( Stem("madone"), "madon");});
test("madras -> madr", function() {deepEqual( Stem("madras"), "madr");});
test("madriers -> madri", function() {deepEqual( Stem("madriers"), "madri");});
test("maestro -> maestro", function() {deepEqual( Stem("maestro"), "maestro");});
test("magalon -> magalon", function() {deepEqual( Stem("magalon"), "magalon");});
test("magasin -> magasin", function() {deepEqual( Stem("magasin"), "magasin");});
test("magasins -> magasin", function() {deepEqual( Stem("magasins"), "magasin");});
test("maggiore -> maggior", function() {deepEqual( Stem("maggiore"), "maggior");});
test("magicien -> magicien", function() {deepEqual( Stem("magicien"), "magicien");});
test("magie -> mag", function() {deepEqual( Stem("magie"), "mag");});
test("magique -> magiqu", function() {deepEqual( Stem("magique"), "magiqu");});
test("magistral -> magistral", function() {deepEqual( Stem("magistral"), "magistral");});
test("magistrat -> magistrat", function() {deepEqual( Stem("magistrat"), "magistrat");});
test("magistrats -> magistrat", function() {deepEqual( Stem("magistrats"), "magistrat");});
test("magistrature -> magistratur", function() {deepEqual( Stem("magistrature"), "magistratur");});
test("magnanime -> magnanim", function() {deepEqual( Stem("magnanime"), "magnanim");});
test("magnificence -> magnificent", function() {deepEqual( Stem("magnificence"), "magnificent");});
test("magnifique -> magnif", function() {deepEqual( Stem("magnifique"), "magnif");});
test("magnifiquement -> magnif", function() {deepEqual( Stem("magnifiquement"), "magnif");});
test("magnifiques -> magnif", function() {deepEqual( Stem("magnifiques"), "magnif");});
test("magot -> magot", function() {deepEqual( Stem("magot"), "magot");});
test("mahomet -> mahomet", function() {deepEqual( Stem("mahomet"), "mahomet");});
test("mahout -> mahout", function() {deepEqual( Stem("mahout"), "mahout");});
test("mai -> mai", function() {deepEqual( Stem("mai"), "mai");});
test("maigre -> maigr", function() {deepEqual( Stem("maigre"), "maigr");});
test("maigres -> maigr", function() {deepEqual( Stem("maigres"), "maigr");});
test("maigreur -> maigreur", function() {deepEqual( Stem("maigreur"), "maigreur");});
test("maigri -> maigr", function() {deepEqual( Stem("maigri"), "maigr");});
test("maigrie -> maigr", function() {deepEqual( Stem("maigrie"), "maigr");});
test("mail -> mail", function() {deepEqual( Stem("mail"), "mail");});
test("mailles -> maill", function() {deepEqual( Stem("mailles"), "maill");});
test("main -> main", function() {deepEqual( Stem("main"), "main");});
test("mains -> main", function() {deepEqual( Stem("mains"), "main");});
test("maintenaient -> mainten", function() {deepEqual( Stem("maintenaient"), "mainten");});
test("maintenait -> mainten", function() {deepEqual( Stem("maintenait"), "mainten");});
test("maintenant -> mainten", function() {deepEqual( Stem("maintenant"), "mainten");});
test("maintenir -> mainten", function() {deepEqual( Stem("maintenir"), "mainten");});
test("maintenue -> maintenu", function() {deepEqual( Stem("maintenue"), "maintenu");});
test("maintien -> maintien", function() {deepEqual( Stem("maintien"), "maintien");});
test("maintint -> maintint", function() {deepEqual( Stem("maintint"), "maintint");});
test("maire -> mair", function() {deepEqual( Stem("maire"), "mair");});
test("maires -> mair", function() {deepEqual( Stem("maires"), "mair");});
test("mairie -> mair", function() {deepEqual( Stem("mairie"), "mair");});
test("mais -> mais", function() {deepEqual( Stem("mais"), "mais");});
test("maïs -> maï", function() {deepEqual( Stem("maïs"), "maï");});
test("maison -> maison", function() {deepEqual( Stem("maison"), "maison");});
test("maisons -> maison", function() {deepEqual( Stem("maisons"), "maison");});
test("maistre -> maistr", function() {deepEqual( Stem("maistre"), "maistr");});
test("maitre -> maitr", function() {deepEqual( Stem("maitre"), "maitr");});
test("maître -> maîtr", function() {deepEqual( Stem("maître"), "maîtr");});
test("maîtres -> maîtr", function() {deepEqual( Stem("maîtres"), "maîtr");});
test("maîtresse -> maîtress", function() {deepEqual( Stem("maîtresse"), "maîtress");});
test("maîtresses -> maîtress", function() {deepEqual( Stem("maîtresses"), "maîtress");});
test("majesté -> majest", function() {deepEqual( Stem("majesté"), "majest");});
test("majestueuse -> majestu", function() {deepEqual( Stem("majestueuse"), "majestu");});
test("majestueusement -> majestu", function() {deepEqual( Stem("majestueusement"), "majestu");});
test("majestueux -> majestu", function() {deepEqual( Stem("majestueux"), "majestu");});
test("majeur -> majeur", function() {deepEqual( Stem("majeur"), "majeur");});
test("majeure -> majeur", function() {deepEqual( Stem("majeure"), "majeur");});
test("major -> major", function() {deepEqual( Stem("major"), "major");});
test("majordome -> majordom", function() {deepEqual( Stem("majordome"), "majordom");});
test("majordomes -> majordom", function() {deepEqual( Stem("majordomes"), "majordom");});
test("majorité -> major", function() {deepEqual( Stem("majorité"), "major");});
test("majorités -> major", function() {deepEqual( Stem("majorités"), "major");});
test("mal -> mal", function() {deepEqual( Stem("mal"), "mal");});
test("malacca -> malacc", function() {deepEqual( Stem("malacca"), "malacc");});
test("malade -> malad", function() {deepEqual( Stem("malade"), "malad");});
test("malades -> malad", function() {deepEqual( Stem("malades"), "malad");});
test("maladie -> malad", function() {deepEqual( Stem("maladie"), "malad");});
test("maladies -> malad", function() {deepEqual( Stem("maladies"), "malad");});
test("maladive -> malad", function() {deepEqual( Stem("maladive"), "malad");});
test("maladresse -> maladress", function() {deepEqual( Stem("maladresse"), "maladress");});
test("maladresses -> maladress", function() {deepEqual( Stem("maladresses"), "maladress");});
test("maladroit -> maladroit", function() {deepEqual( Stem("maladroit"), "maladroit");});
test("maladroite -> maladroit", function() {deepEqual( Stem("maladroite"), "maladroit");});
test("maladroitement -> maladroit", function() {deepEqual( Stem("maladroitement"), "maladroit");});
test("malaga -> malag", function() {deepEqual( Stem("malaga"), "malag");});
test("malagrida -> malagrid", function() {deepEqual( Stem("malagrida"), "malagrid");});
test("malais -> mal", function() {deepEqual( Stem("malais"), "mal");});
test("malaise -> malais", function() {deepEqual( Stem("malaise"), "malais");});
test("malaisie -> malais", function() {deepEqual( Stem("malaisie"), "malais");});
test("maldonne -> maldon", function() {deepEqual( Stem("maldonne"), "maldon");});
test("mâle -> mâl", function() {deepEqual( Stem("mâle"), "mâl");});
test("malebar -> malebar", function() {deepEqual( Stem("malebar"), "malebar");});
test("malédiction -> malédict", function() {deepEqual( Stem("malédiction"), "malédict");});
test("malencontreuse -> malencontr", function() {deepEqual( Stem("malencontreuse"), "malencontr");});
test("malencontreusement -> malencontr", function() {deepEqual( Stem("malencontreusement"), "malencontr");});
test("malencontreux -> malencontr", function() {deepEqual( Stem("malencontreux"), "malencontr");});
test("malentendu -> malentendu", function() {deepEqual( Stem("malentendu"), "malentendu");});
test("mâles -> mâl", function() {deepEqual( Stem("mâles"), "mâl");});
test("malgré -> malgr", function() {deepEqual( Stem("malgré"), "malgr");});
test("malhabile -> malhabil", function() {deepEqual( Stem("malhabile"), "malhabil");});
test("malheur -> malheur", function() {deepEqual( Stem("malheur"), "malheur");});
test("malheureuse -> malheur", function() {deepEqual( Stem("malheureuse"), "malheur");});
test("malheureusement -> malheur", function() {deepEqual( Stem("malheureusement"), "malheur");});
test("malheureuses -> malheur", function() {deepEqual( Stem("malheureuses"), "malheur");});
test("malheureux -> malheur", function() {deepEqual( Stem("malheureux"), "malheur");});
test("malheurs -> malheur", function() {deepEqual( Stem("malheurs"), "malheur");});
test("malhonnête -> malhonnêt", function() {deepEqual( Stem("malhonnête"), "malhonnêt");});
test("malhonnêteté -> malhonnêtet", function() {deepEqual( Stem("malhonnêteté"), "malhonnêtet");});
test("malice -> malic", function() {deepEqual( Stem("malice"), "malic");});
test("malicieux -> malici", function() {deepEqual( Stem("malicieux"), "malici");});
test("maligne -> malign", function() {deepEqual( Stem("maligne"), "malign");});
test("malignité -> malign", function() {deepEqual( Stem("malignité"), "malign");});
test("malin -> malin", function() {deepEqual( Stem("malin"), "malin");});
test("mall -> mall", function() {deepEqual( Stem("mall"), "mall");});
test("malle -> mall", function() {deepEqual( Stem("malle"), "mall");});
test("malles -> mall", function() {deepEqual( Stem("malles"), "mall");});
test("malligaum -> malligaum", function() {deepEqual( Stem("malligaum"), "malligaum");});
test("malmaison -> malmaison", function() {deepEqual( Stem("malmaison"), "malmaison");});
test("malmener -> malmen", function() {deepEqual( Stem("malmener"), "malmen");});
test("maltraite -> maltrait", function() {deepEqual( Stem("maltraite"), "maltrait");});
test("maltraité -> maltrait", function() {deepEqual( Stem("maltraité"), "maltrait");});
test("maltraitées -> maltrait", function() {deepEqual( Stem("maltraitées"), "maltrait");});
test("maltraiter -> maltrait", function() {deepEqual( Stem("maltraiter"), "maltrait");});
test("maman -> maman", function() {deepEqual( Stem("maman"), "maman");});
test("mameluks -> mameluk", function() {deepEqual( Stem("mameluks"), "mameluk");});
test("mammacia -> mammaci", function() {deepEqual( Stem("mammacia"), "mammaci");});
test("manant -> man", function() {deepEqual( Stem("manant"), "man");});
test("mancar -> mancar", function() {deepEqual( Stem("mancar"), "mancar");});
test("manche -> manch", function() {deepEqual( Stem("manche"), "manch");});
test("manches -> manch", function() {deepEqual( Stem("manches"), "manch");});
test("manchester -> manchest", function() {deepEqual( Stem("manchester"), "manchest");});
test("manda -> mand", function() {deepEqual( Stem("manda"), "mand");});
test("mandarin -> mandarin", function() {deepEqual( Stem("mandarin"), "mandarin");});
test("mandat -> mandat", function() {deepEqual( Stem("mandat"), "mandat");});
test("mandé -> mand", function() {deepEqual( Stem("mandé"), "mand");});
test("mandeb -> mandeb", function() {deepEqual( Stem("mandeb"), "mandeb");});
test("mandement -> mand", function() {deepEqual( Stem("mandement"), "mand");});
test("mander -> mand", function() {deepEqual( Stem("mander"), "mand");});
test("mandiboy -> mandiboy", function() {deepEqual( Stem("mandiboy"), "mandiboy");});
test("manège -> maneg", function() {deepEqual( Stem("manège"), "maneg");});
test("mânes -> mân", function() {deepEqual( Stem("mânes"), "mân");});
test("manette -> manet", function() {deepEqual( Stem("manette"), "manet");});
test("mange -> mang", function() {deepEqual( Stem("mange"), "mang");});
test("mangé -> mang", function() {deepEqual( Stem("mangé"), "mang");});
test("mangea -> mang", function() {deepEqual( Stem("mangea"), "mang");});
test("mangeaient -> mang", function() {deepEqual( Stem("mangeaient"), "mang");});
test("mangeais -> mang", function() {deepEqual( Stem("mangeais"), "mang");});
test("mangeait -> mang", function() {deepEqual( Stem("mangeait"), "mang");});
test("mangeant -> mang", function() {deepEqual( Stem("mangeant"), "mang");});
test("mangent -> mangent", function() {deepEqual( Stem("mangent"), "mangent");});
test("mangeoire -> mangeoir", function() {deepEqual( Stem("mangeoire"), "mangeoir");});
test("manger -> mang", function() {deepEqual( Stem("manger"), "mang");});
test("mangerai -> mang", function() {deepEqual( Stem("mangerai"), "mang");});
test("mangerait -> mang", function() {deepEqual( Stem("mangerait"), "mang");});
test("mangèrent -> mang", function() {deepEqual( Stem("mangèrent"), "mang");});
test("mangeur -> mangeur", function() {deepEqual( Stem("mangeur"), "mangeur");});
test("mangoustes -> mangoust", function() {deepEqual( Stem("mangoustes"), "mangoust");});
test("maniable -> maniabl", function() {deepEqual( Stem("maniable"), "maniabl");});
test("maniait -> mani", function() {deepEqual( Stem("maniait"), "mani");});
test("maniant -> mani", function() {deepEqual( Stem("maniant"), "mani");});
test("maniaque -> maniaqu", function() {deepEqual( Stem("maniaque"), "maniaqu");});
test("manie -> man", function() {deepEqual( Stem("manie"), "man");});
test("manié -> mani", function() {deepEqual( Stem("manié"), "mani");});
test("manier -> mani", function() {deepEqual( Stem("manier"), "mani");});
test("manière -> mani", function() {deepEqual( Stem("manière"), "mani");});
test("manières -> mani", function() {deepEqual( Stem("manières"), "mani");});
test("manifestation -> manifest", function() {deepEqual( Stem("manifestation"), "manifest");});
test("manifesté -> manifest", function() {deepEqual( Stem("manifesté"), "manifest");});
test("manifester -> manifest", function() {deepEqual( Stem("manifester"), "manifest");});
test("mannequins -> mannequin", function() {deepEqual( Stem("mannequins"), "mannequin");});
test("manner -> mann", function() {deepEqual( Stem("manner"), "mann");});
test("manoeuvraient -> manoeuvr", function() {deepEqual( Stem("manoeuvraient"), "manoeuvr");});
test("manoeuvrant -> manoeuvr", function() {deepEqual( Stem("manoeuvrant"), "manoeuvr");});
test("manoeuvre -> manoeuvr", function() {deepEqual( Stem("manoeuvre"), "manoeuvr");});
test("manoeuvré -> manoeuvr", function() {deepEqual( Stem("manoeuvré"), "manoeuvr");});
test("manoeuvrer -> manoeuvr", function() {deepEqual( Stem("manoeuvrer"), "manoeuvr");});
test("manoeuvres -> manoeuvr", function() {deepEqual( Stem("manoeuvres"), "manoeuvr");});
test("manoeuvrés -> manoeuvr", function() {deepEqual( Stem("manoeuvrés"), "manoeuvr");});
test("manon -> manon", function() {deepEqual( Stem("manon"), "manon");});
test("manouvriers -> manouvri", function() {deepEqual( Stem("manouvriers"), "manouvri");});
test("manqua -> manqu", function() {deepEqual( Stem("manqua"), "manqu");});
test("manquaient -> manqu", function() {deepEqual( Stem("manquaient"), "manqu");});
test("manquais -> manqu", function() {deepEqual( Stem("manquais"), "manqu");});
test("manquait -> manqu", function() {deepEqual( Stem("manquait"), "manqu");});
test("manquant -> manqu", function() {deepEqual( Stem("manquant"), "manqu");});
test("manquât -> manqu", function() {deepEqual( Stem("manquât"), "manqu");});
test("manque -> manqu", function() {deepEqual( Stem("manque"), "manqu");});
test("manqué -> manqu", function() {deepEqual( Stem("manqué"), "manqu");});
test("manquée -> manqu", function() {deepEqual( Stem("manquée"), "manqu");});
test("manquent -> manquent", function() {deepEqual( Stem("manquent"), "manquent");});
test("manquer -> manqu", function() {deepEqual( Stem("manquer"), "manqu");});
test("manquera -> manqu", function() {deepEqual( Stem("manquera"), "manqu");});
test("manquerai -> manqu", function() {deepEqual( Stem("manquerai"), "manqu");});
test("manqueraient -> manqu", function() {deepEqual( Stem("manqueraient"), "manqu");});
test("manquerais -> manqu", function() {deepEqual( Stem("manquerais"), "manqu");});
test("manquerait -> manqu", function() {deepEqual( Stem("manquerait"), "manqu");});
test("manquèrent -> manqu", function() {deepEqual( Stem("manquèrent"), "manqu");});
test("manquerez -> manqu", function() {deepEqual( Stem("manquerez"), "manqu");});
test("manqueront -> manqu", function() {deepEqual( Stem("manqueront"), "manqu");});
test("manques -> manqu", function() {deepEqual( Stem("manques"), "manqu");});
test("manquez -> manqu", function() {deepEqual( Stem("manquez"), "manqu");});
test("manquons -> manquon", function() {deepEqual( Stem("manquons"), "manquon");});
test("mansarde -> mansard", function() {deepEqual( Stem("mansarde"), "mansard");});
test("manteau -> manteau", function() {deepEqual( Stem("manteau"), "manteau");});
test("manteaux -> manteau", function() {deepEqual( Stem("manteaux"), "manteau");});
test("mantoue -> mantou", function() {deepEqual( Stem("mantoue"), "mantou");});
test("manuel -> manuel", function() {deepEqual( Stem("manuel"), "manuel");});
test("manufacture -> manufactur", function() {deepEqual( Stem("manufacture"), "manufactur");});
test("manufactures -> manufactur", function() {deepEqual( Stem("manufactures"), "manufactur");});
test("manufacturières -> manufacturi", function() {deepEqual( Stem("manufacturières"), "manufacturi");});
test("manufacturiers -> manufacturi", function() {deepEqual( Stem("manufacturiers"), "manufacturi");});
test("manuscrit -> manuscr", function() {deepEqual( Stem("manuscrit"), "manuscr");});
test("manuscrites -> manuscrit", function() {deepEqual( Stem("manuscrites"), "manuscrit");});
test("manuscrits -> manuscrit", function() {deepEqual( Stem("manuscrits"), "manuscrit");});
test("maquignon -> maquignon", function() {deepEqual( Stem("maquignon"), "maquignon");});
test("marais -> mar", function() {deepEqual( Stem("marais"), "mar");});
test("marâtre -> marâtr", function() {deepEqual( Stem("marâtre"), "marâtr");});
test("marbre -> marbr", function() {deepEqual( Stem("marbre"), "marbr");});
test("marbres -> marbr", function() {deepEqual( Stem("marbres"), "marbr");});
test("marcha -> march", function() {deepEqual( Stem("marcha"), "march");});
test("marchaient -> march", function() {deepEqual( Stem("marchaient"), "march");});
test("marchait -> march", function() {deepEqual( Stem("marchait"), "march");});
test("marchand -> marchand", function() {deepEqual( Stem("marchand"), "marchand");});
test("marchande -> marchand", function() {deepEqual( Stem("marchande"), "marchand");});
test("marchandise -> marchandis", function() {deepEqual( Stem("marchandise"), "marchandis");});
test("marchandises -> marchandis", function() {deepEqual( Stem("marchandises"), "marchandis");});
test("marchands -> marchand", function() {deepEqual( Stem("marchands"), "marchand");});
test("marchant -> march", function() {deepEqual( Stem("marchant"), "march");});
test("marche -> march", function() {deepEqual( Stem("marche"), "march");});
test("marché -> march", function() {deepEqual( Stem("marché"), "march");});
test("marchent -> marchent", function() {deepEqual( Stem("marchent"), "marchent");});
test("marchepied -> marchepied", function() {deepEqual( Stem("marchepied"), "marchepied");});
test("marchepieds -> marchepied", function() {deepEqual( Stem("marchepieds"), "marchepied");});
test("marcher -> march", function() {deepEqual( Stem("marcher"), "march");});
test("marcherez -> march", function() {deepEqual( Stem("marcherez"), "march");});
test("marcherions -> march", function() {deepEqual( Stem("marcherions"), "march");});
test("marcherons -> march", function() {deepEqual( Stem("marcherons"), "march");});
test("marches -> march", function() {deepEqual( Stem("marches"), "march");});
test("marchés -> march", function() {deepEqual( Stem("marchés"), "march");});
test("marchesi -> marches", function() {deepEqual( Stem("marchesi"), "marches");});
test("marchesine -> marchesin", function() {deepEqual( Stem("marchesine"), "marchesin");});
test("marchesino -> marchesino", function() {deepEqual( Stem("marchesino"), "marchesino");});
test("marcheur -> marcheur", function() {deepEqual( Stem("marcheur"), "marcheur");});
test("marcheurs -> marcheur", function() {deepEqual( Stem("marcheurs"), "marcheur");});
test("marchez -> march", function() {deepEqual( Stem("marchez"), "march");});
test("marchiez -> march", function() {deepEqual( Stem("marchiez"), "march");});
test("marchions -> marchion", function() {deepEqual( Stem("marchions"), "marchion");});
test("marchons -> marchon", function() {deepEqual( Stem("marchons"), "marchon");});
test("mardi -> mard", function() {deepEqual( Stem("mardi"), "mard");});
test("mare -> mar", function() {deepEqual( Stem("mare"), "mar");});
test("marécages -> marécag", function() {deepEqual( Stem("marécages"), "marécag");});
test("marécageuse -> marécag", function() {deepEqual( Stem("marécageuse"), "marécag");});
test("maréchal -> maréchal", function() {deepEqual( Stem("maréchal"), "maréchal");});
test("maréchale -> maréchal", function() {deepEqual( Stem("maréchale"), "maréchal");});
test("maréchaux -> maréchal", function() {deepEqual( Stem("maréchaux"), "maréchal");});
test("marée -> mar", function() {deepEqual( Stem("marée"), "mar");});
test("marengo -> marengo", function() {deepEqual( Stem("marengo"), "marengo");});
test("marge -> marg", function() {deepEqual( Stem("marge"), "marg");});
test("marges -> marg", function() {deepEqual( Stem("marges"), "marg");});
test("margot -> margot", function() {deepEqual( Stem("margot"), "margot");});
test("marguerite -> marguerit", function() {deepEqual( Stem("marguerite"), "marguerit");});
test("marguillier -> marguilli", function() {deepEqual( Stem("marguillier"), "marguilli");});
test("mari -> mar", function() {deepEqual( Stem("mari"), "mar");});
test("maria -> mari", function() {deepEqual( Stem("maria"), "mari");});
test("mariage -> mariag", function() {deepEqual( Stem("mariage"), "mariag");});
test("mariages -> mariag", function() {deepEqual( Stem("mariages"), "mariag");});
test("mariait -> mari", function() {deepEqual( Stem("mariait"), "mari");});
test("marie -> mar", function() {deepEqual( Stem("marie"), "mar");});
test("marié -> mari", function() {deepEqual( Stem("marié"), "mari");});
test("mariée -> mari", function() {deepEqual( Stem("mariée"), "mari");});
test("mariées -> mari", function() {deepEqual( Stem("mariées"), "mari");});
test("marier -> mari", function() {deepEqual( Stem("marier"), "mari");});
test("mariera -> mari", function() {deepEqual( Stem("mariera"), "mari");});
test("marietta -> mariet", function() {deepEqual( Stem("marietta"), "mariet");});
test("mariettina -> mariettin", function() {deepEqual( Stem("mariettina"), "mariettin");});
test("marin -> marin", function() {deepEqual( Stem("marin"), "marin");});
test("marini -> marin", function() {deepEqual( Stem("marini"), "marin");});
test("mariniers -> marini", function() {deepEqual( Stem("mariniers"), "marini");});
test("marino -> marino", function() {deepEqual( Stem("marino"), "marino");});
test("marins -> marin", function() {deepEqual( Stem("marins"), "marin");});
test("maris -> mar", function() {deepEqual( Stem("maris"), "mar");});
test("maritime -> maritim", function() {deepEqual( Stem("maritime"), "maritim");});
test("maritimes -> maritim", function() {deepEqual( Stem("maritimes"), "maritim");});
test("markésine -> markésin", function() {deepEqual( Stem("markésine"), "markésin");});
test("market -> market", function() {deepEqual( Stem("market"), "market");});
test("marmande -> marmand", function() {deepEqual( Stem("marmande"), "marmand");});
test("marmots -> marmot", function() {deepEqual( Stem("marmots"), "marmot");});
test("maroquin -> maroquin", function() {deepEqual( Stem("maroquin"), "maroquin");});
test("marote -> marot", function() {deepEqual( Stem("marote"), "marot");});
test("marotte -> marott", function() {deepEqual( Stem("marotte"), "marott");});
test("marqua -> marqu", function() {deepEqual( Stem("marqua"), "marqu");});
test("marquaient -> marqu", function() {deepEqual( Stem("marquaient"), "marqu");});
test("marquait -> marqu", function() {deepEqual( Stem("marquait"), "marqu");});
test("marquant -> marqu", function() {deepEqual( Stem("marquant"), "marqu");});
test("marque -> marqu", function() {deepEqual( Stem("marque"), "marqu");});
test("marqué -> marqu", function() {deepEqual( Stem("marqué"), "marqu");});
test("marquée -> marqu", function() {deepEqual( Stem("marquée"), "marqu");});
test("marquées -> marqu", function() {deepEqual( Stem("marquées"), "marqu");});
test("marquent -> marquent", function() {deepEqual( Stem("marquent"), "marquent");});
test("marquer -> marqu", function() {deepEqual( Stem("marquer"), "marqu");});
test("marquerai -> marqu", function() {deepEqual( Stem("marquerai"), "marqu");});
test("marquèrent -> marqu", function() {deepEqual( Stem("marquèrent"), "marqu");});
test("marques -> marqu", function() {deepEqual( Stem("marques"), "marqu");});
test("marqués -> marqu", function() {deepEqual( Stem("marqués"), "marqu");});
test("marqueterie -> marqueter", function() {deepEqual( Stem("marqueterie"), "marqueter");});
test("marquinot -> marquinot", function() {deepEqual( Stem("marquinot"), "marquinot");});
test("marquis -> marqu", function() {deepEqual( Stem("marquis"), "marqu");});
test("marquise -> marquis", function() {deepEqual( Stem("marquise"), "marquis");});
test("marronnier -> marronni", function() {deepEqual( Stem("marronnier"), "marronni");});
test("marronniers -> marronni", function() {deepEqual( Stem("marronniers"), "marronni");});
test("marrons -> marron", function() {deepEqual( Stem("marrons"), "marron");});
test("mars -> mar", function() {deepEqual( Stem("mars"), "mar");});
test("marseille -> marseil", function() {deepEqual( Stem("marseille"), "marseil");});
test("marteau -> marteau", function() {deepEqual( Stem("marteau"), "marteau");});
test("marteaux -> marteau", function() {deepEqual( Stem("marteaux"), "marteau");});
test("martial -> martial", function() {deepEqual( Stem("martial"), "martial");});
test("martiale -> martial", function() {deepEqual( Stem("martiale"), "martial");});
test("martin -> martin", function() {deepEqual( Stem("martin"), "martin");});
test("martyr -> martyr", function() {deepEqual( Stem("martyr"), "martyr");});
test("martyre -> martyr", function() {deepEqual( Stem("martyre"), "martyr");});
test("mary -> mary", function() {deepEqual( Stem("mary"), "mary");});
test("mascarilles -> mascarill", function() {deepEqual( Stem("mascarilles"), "mascarill");});
test("masculin -> masculin", function() {deepEqual( Stem("masculin"), "masculin");});
test("masculine -> masculin", function() {deepEqual( Stem("masculine"), "masculin");});
test("maslon -> maslon", function() {deepEqual( Stem("maslon"), "maslon");});
test("masquait -> masqu", function() {deepEqual( Stem("masquait"), "masqu");});
test("masque -> masqu", function() {deepEqual( Stem("masque"), "masqu");});
test("masqué -> masqu", function() {deepEqual( Stem("masqué"), "masqu");});
test("masquée -> masqu", function() {deepEqual( Stem("masquée"), "masqu");});
test("masquer -> masqu", function() {deepEqual( Stem("masquer"), "masqu");});
test("masques -> masqu", function() {deepEqual( Stem("masques"), "masqu");});
test("masqués -> masqu", function() {deepEqual( Stem("masqués"), "masqu");});
test("massacre -> massacr", function() {deepEqual( Stem("massacre"), "massacr");});
test("massacrer -> massacr", function() {deepEqual( Stem("massacrer"), "massacr");});
test("massacrés -> massacr", function() {deepEqual( Stem("massacrés"), "massacr");});
test("massant -> mass", function() {deepEqual( Stem("massant"), "mass");});
test("masse -> mass", function() {deepEqual( Stem("masse"), "mass");});
test("masses -> mass", function() {deepEqual( Stem("masses"), "mass");});
test("massif -> massif", function() {deepEqual( Stem("massif"), "massif");});
test("massifs -> massif", function() {deepEqual( Stem("massifs"), "massif");});
test("massillon -> massillon", function() {deepEqual( Stem("massillon"), "massillon");});
test("massinger -> massing", function() {deepEqual( Stem("massinger"), "massing");});
test("mat -> mat", function() {deepEqual( Stem("mat"), "mat");});
test("mât -> mât", function() {deepEqual( Stem("mât"), "mât");});
test("matches -> match", function() {deepEqual( Stem("matches"), "match");});
test("matelas -> matel", function() {deepEqual( Stem("matelas"), "matel");});
test("matelots -> matelot", function() {deepEqual( Stem("matelots"), "matelot");});
test("matériel -> matériel", function() {deepEqual( Stem("matériel"), "matériel");});
test("matérielle -> matériel", function() {deepEqual( Stem("matérielle"), "matériel");});
test("matériellement -> matériel", function() {deepEqual( Stem("matériellement"), "matériel");});
test("matérielles -> matériel", function() {deepEqual( Stem("matérielles"), "matériel");});
test("matériels -> matériel", function() {deepEqual( Stem("matériels"), "matériel");});
test("maternel -> maternel", function() {deepEqual( Stem("maternel"), "maternel");});
test("mathématique -> mathémat", function() {deepEqual( Stem("mathématique"), "mathémat");});
test("mathématiquement -> mathémat", function() {deepEqual( Stem("mathématiquement"), "mathémat");});
test("mathématiques -> mathémat", function() {deepEqual( Stem("mathématiques"), "mathémat");});
test("mathilde -> mathild", function() {deepEqual( Stem("mathilde"), "mathild");});
test("matiere -> matier", function() {deepEqual( Stem("matiere"), "matier");});
test("matière -> mati", function() {deepEqual( Stem("matière"), "mati");});
test("matieres -> matier", function() {deepEqual( Stem("matieres"), "matier");});
test("matières -> mati", function() {deepEqual( Stem("matières"), "mati");});
test("matin -> matin", function() {deepEqual( Stem("matin"), "matin");});
test("matinale -> matinal", function() {deepEqual( Stem("matinale"), "matinal");});
test("matinée -> matin", function() {deepEqual( Stem("matinée"), "matin");});
test("matins -> matin", function() {deepEqual( Stem("matins"), "matin");});
test("matrimoniale -> matrimonial", function() {deepEqual( Stem("matrimoniale"), "matrimonial");});
test("matrimonio -> matrimonio", function() {deepEqual( Stem("matrimonio"), "matrimonio");});
test("mâts -> mât", function() {deepEqual( Stem("mâts"), "mât");});
test("mâture -> mâtur", function() {deepEqual( Stem("mâture"), "mâtur");});
test("mâtures -> mâtur", function() {deepEqual( Stem("mâtures"), "mâtur");});
test("maubeuge -> maubeug", function() {deepEqual( Stem("maubeuge"), "maubeug");});
test("maudire -> maudir", function() {deepEqual( Stem("maudire"), "maudir");});
test("maudis -> maud", function() {deepEqual( Stem("maudis"), "maud");});
test("maudissait -> maud", function() {deepEqual( Stem("maudissait"), "maud");});
test("maudissant -> maud", function() {deepEqual( Stem("maudissant"), "maud");});
test("maudissez -> maud", function() {deepEqual( Stem("maudissez"), "maud");});
test("maudit -> maud", function() {deepEqual( Stem("maudit"), "maud");});
test("maudite -> maudit", function() {deepEqual( Stem("maudite"), "maudit");});
test("maudits -> maudit", function() {deepEqual( Stem("maudits"), "maudit");});
test("maugiron -> maugiron", function() {deepEqual( Stem("maugiron"), "maugiron");});
test("maugirons -> maug", function() {deepEqual( Stem("maugirons"), "maug");});
test("maugréait -> maugré", function() {deepEqual( Stem("maugréait"), "maugré");});
test("maury -> maury", function() {deepEqual( Stem("maury"), "maury");});
test("mausolée -> mausol", function() {deepEqual( Stem("mausolée"), "mausol");});
test("maussade -> maussad", function() {deepEqual( Stem("maussade"), "maussad");});
test("mauvais -> mauv", function() {deepEqual( Stem("mauvais"), "mauv");});
test("mauvaise -> mauvais", function() {deepEqual( Stem("mauvaise"), "mauvais");});
test("mauvaises -> mauvais", function() {deepEqual( Stem("mauvaises"), "mauvais");});
test("mauve -> mauv", function() {deepEqual( Stem("mauve"), "mauv");});
test("maux -> maux", function() {deepEqual( Stem("maux"), "maux");});
test("maxime -> maxim", function() {deepEqual( Stem("maxime"), "maxim");});
test("maximes -> maxim", function() {deepEqual( Stem("maximes"), "maxim");});
test("maximum -> maximum", function() {deepEqual( Stem("maximum"), "maximum");});
test("mayence -> mayenc", function() {deepEqual( Stem("mayence"), "mayenc");});
test("me -> me", function() {deepEqual( Stem("me"), "me");});
test("meako -> meako", function() {deepEqual( Stem("meako"), "meako");});
test("mean -> mean", function() {deepEqual( Stem("mean"), "mean");});
test("mécanicien -> mécanicien", function() {deepEqual( Stem("mécanicien"), "mécanicien");});
test("mécanique -> mécan", function() {deepEqual( Stem("mécanique"), "mécan");});
test("mécaniquement -> mécan", function() {deepEqual( Stem("mécaniquement"), "mécan");});
test("mécanisme -> mécan", function() {deepEqual( Stem("mécanisme"), "mécan");});
test("mécène -> mécen", function() {deepEqual( Stem("mécène"), "mécen");});
test("méchanceté -> méchancet", function() {deepEqual( Stem("méchanceté"), "méchancet");});
test("méchancetés -> méchancet", function() {deepEqual( Stem("méchancetés"), "méchancet");});
test("méchant -> mech", function() {deepEqual( Stem("méchant"), "mech");});
test("méchante -> mech", function() {deepEqual( Stem("méchante"), "mech");});
test("méchantes -> mech", function() {deepEqual( Stem("méchantes"), "mech");});
test("méchants -> mech", function() {deepEqual( Stem("méchants"), "mech");});
test("mèche -> mech", function() {deepEqual( Stem("mèche"), "mech");});
test("mécomptes -> mécompt", function() {deepEqual( Stem("mécomptes"), "mécompt");});
test("méconnaissez -> méconnaiss", function() {deepEqual( Stem("méconnaissez"), "méconnaiss");});
test("mécontent -> mécontent", function() {deepEqual( Stem("mécontent"), "mécontent");});
test("mécontente -> mécontent", function() {deepEqual( Stem("mécontente"), "mécontent");});
test("mécontentement -> mécontent", function() {deepEqual( Stem("mécontentement"), "mécontent");});
test("mécontents -> mécontent", function() {deepEqual( Stem("mécontents"), "mécontent");});
test("médaille -> médaill", function() {deepEqual( Stem("médaille"), "médaill");});
test("médecin -> médecin", function() {deepEqual( Stem("médecin"), "médecin");});
test("médecine -> médecin", function() {deepEqual( Stem("médecine"), "médecin");});
test("médecins -> médecin", function() {deepEqual( Stem("médecins"), "médecin");});
test("médée -> med", function() {deepEqual( Stem("médée"), "med");});
test("medicine -> medicin", function() {deepEqual( Stem("medicine"), "medicin");});
test("médicis -> médic", function() {deepEqual( Stem("médicis"), "médic");});
test("médiocre -> médiocr", function() {deepEqual( Stem("médiocre"), "médiocr");});
test("médiocrement -> médiocr", function() {deepEqual( Stem("médiocrement"), "médiocr");});
test("médiocres -> médiocr", function() {deepEqual( Stem("médiocres"), "médiocr");});
test("médiocrité -> médiocr", function() {deepEqual( Stem("médiocrité"), "médiocr");});
test("médire -> médir", function() {deepEqual( Stem("médire"), "médir");});
test("médisance -> médis", function() {deepEqual( Stem("médisance"), "médis");});
test("médît -> med", function() {deepEqual( Stem("médît"), "med");});
test("médita -> médit", function() {deepEqual( Stem("médita"), "médit");});
test("méditait -> médit", function() {deepEqual( Stem("méditait"), "médit");});
test("méditation -> médit", function() {deepEqual( Stem("méditation"), "médit");});
test("méditations -> médit", function() {deepEqual( Stem("méditations"), "médit");});
test("méditée -> médit", function() {deepEqual( Stem("méditée"), "médit");});
test("méditer -> médit", function() {deepEqual( Stem("méditer"), "médit");});
test("meeting -> meeting", function() {deepEqual( Stem("meeting"), "meeting");});
test("méfiance -> méfianc", function() {deepEqual( Stem("méfiance"), "méfianc");});
test("méfiant -> méfi", function() {deepEqual( Stem("méfiant"), "méfi");});
test("méfie -> mef", function() {deepEqual( Stem("méfie"), "mef");});
test("méfier -> méfi", function() {deepEqual( Stem("méfier"), "méfi");});
test("meilleur -> meilleur", function() {deepEqual( Stem("meilleur"), "meilleur");});
test("meilleure -> meilleur", function() {deepEqual( Stem("meilleure"), "meilleur");});
test("meilleures -> meilleur", function() {deepEqual( Stem("meilleures"), "meilleur");});
test("meilleurs -> meilleur", function() {deepEqual( Stem("meilleurs"), "meilleur");});
test("mêla -> mêl", function() {deepEqual( Stem("mêla"), "mêl");});
test("mêlaient -> mêl", function() {deepEqual( Stem("mêlaient"), "mêl");});
test("mêlait -> mêl", function() {deepEqual( Stem("mêlait"), "mêl");});
test("mélancolie -> mélancol", function() {deepEqual( Stem("mélancolie"), "mélancol");});
test("mélancolique -> mélancol", function() {deepEqual( Stem("mélancolique"), "mélancol");});
test("mélancoliquement -> mélancol", function() {deepEqual( Stem("mélancoliquement"), "mélancol");});
test("mélange -> mélang", function() {deepEqual( Stem("mélange"), "mélang");});
test("mélangé -> mélang", function() {deepEqual( Stem("mélangé"), "mélang");});
test("mélangée -> mélang", function() {deepEqual( Stem("mélangée"), "mélang");});
test("mélangées -> mélang", function() {deepEqual( Stem("mélangées"), "mélang");});
test("mêlant -> mêl", function() {deepEqual( Stem("mêlant"), "mêl");});
test("mêle -> mêl", function() {deepEqual( Stem("mêle"), "mêl");});
test("mêlé -> mêl", function() {deepEqual( Stem("mêlé"), "mêl");});
test("mêlée -> mêl", function() {deepEqual( Stem("mêlée"), "mêl");});
test("mêlent -> mêlent", function() {deepEqual( Stem("mêlent"), "mêlent");});
test("mêler -> mêl", function() {deepEqual( Stem("mêler"), "mêl");});
test("mêlés -> mêl", function() {deepEqual( Stem("mêlés"), "mêl");});
test("mêlez -> mêl", function() {deepEqual( Stem("mêlez"), "mêl");});
test("mélodie -> mélod", function() {deepEqual( Stem("mélodie"), "mélod");});
test("mélodieuse -> mélodi", function() {deepEqual( Stem("mélodieuse"), "mélodi");});
test("mélodrame -> mélodram", function() {deepEqual( Stem("mélodrame"), "mélodram");});
test("melzi -> melz", function() {deepEqual( Stem("melzi"), "melz");});
test("membre -> membr", function() {deepEqual( Stem("membre"), "membr");});
test("membres -> membr", function() {deepEqual( Stem("membres"), "membr");});
test("membrure -> membrur", function() {deepEqual( Stem("membrure"), "membrur");});
test("meme -> mem", function() {deepEqual( Stem("meme"), "mem");});
test("même -> mêm", function() {deepEqual( Stem("même"), "mêm");});
test("mêmes -> mêm", function() {deepEqual( Stem("mêmes"), "mêm");});
test("mémoire -> mémoir", function() {deepEqual( Stem("mémoire"), "mémoir");});
test("mémoires -> mémoir", function() {deepEqual( Stem("mémoires"), "mémoir");});
test("mémorial -> mémorial", function() {deepEqual( Stem("mémorial"), "mémorial");});
test("menaça -> menac", function() {deepEqual( Stem("menaça"), "menac");});
test("menaçaient -> menac", function() {deepEqual( Stem("menaçaient"), "menac");});
test("menaçais -> menac", function() {deepEqual( Stem("menaçais"), "menac");});
test("menaçait -> menac", function() {deepEqual( Stem("menaçait"), "menac");});
test("menaçant -> menac", function() {deepEqual( Stem("menaçant"), "menac");});
test("menace -> menac", function() {deepEqual( Stem("menace"), "menac");});
test("menacé -> menac", function() {deepEqual( Stem("menacé"), "menac");});
test("menacée -> menac", function() {deepEqual( Stem("menacée"), "menac");});
test("menacer -> menac", function() {deepEqual( Stem("menacer"), "menac");});
test("menaces -> menac", function() {deepEqual( Stem("menaces"), "menac");});
test("ménage -> ménag", function() {deepEqual( Stem("ménage"), "ménag");});
test("ménagé -> ménag", function() {deepEqual( Stem("ménagé"), "ménag");});
test("ménagement -> ménag", function() {deepEqual( Stem("ménagement"), "ménag");});
test("ménagements -> ménag", function() {deepEqual( Stem("ménagements"), "ménag");});
test("ménager -> ménag", function() {deepEqual( Stem("ménager"), "ménag");});
test("ménagera -> ménag", function() {deepEqual( Stem("ménagera"), "ménag");});
test("ménages -> ménag", function() {deepEqual( Stem("ménages"), "ménag");});
test("ménagez -> ménag", function() {deepEqual( Stem("ménagez"), "ménag");});
test("menagio -> menagio", function() {deepEqual( Stem("menagio"), "menagio");});
test("menait -> men", function() {deepEqual( Stem("menait"), "men");});
test("mendiant -> mendi", function() {deepEqual( Stem("mendiant"), "mendi");});
test("mendiante -> mendi", function() {deepEqual( Stem("mendiante"), "mendi");});
test("mendicité -> mendiqu", function() {deepEqual( Stem("mendicité"), "mendiqu");});
test("mène -> men", function() {deepEqual( Stem("mène"), "men");});
test("mené -> men", function() {deepEqual( Stem("mené"), "men");});
test("menée -> men", function() {deepEqual( Stem("menée"), "men");});
test("menées -> men", function() {deepEqual( Stem("menées"), "men");});
test("mener -> men", function() {deepEqual( Stem("mener"), "men");});
test("mènera -> men", function() {deepEqual( Stem("mènera"), "men");});
test("mènerai -> men", function() {deepEqual( Stem("mènerai"), "men");});
test("mènerais -> men", function() {deepEqual( Stem("mènerais"), "men");});
test("mènerait -> men", function() {deepEqual( Stem("mènerait"), "men");});
test("menèrent -> men", function() {deepEqual( Stem("menèrent"), "men");});
test("meneurs -> meneur", function() {deepEqual( Stem("meneurs"), "meneur");});
test("menez -> men", function() {deepEqual( Stem("menez"), "men");});
test("menottes -> menott", function() {deepEqual( Stem("menottes"), "menott");});
test("mens -> men", function() {deepEqual( Stem("mens"), "men");});
test("mensonge -> mensong", function() {deepEqual( Stem("mensonge"), "mensong");});
test("mensonges -> mensong", function() {deepEqual( Stem("mensonges"), "mensong");});
test("mentait -> ment", function() {deepEqual( Stem("mentait"), "ment");});
test("mentales -> mental", function() {deepEqual( Stem("mentales"), "mental");});
test("mente -> ment", function() {deepEqual( Stem("mente"), "ment");});
test("menteurs -> menteur", function() {deepEqual( Stem("menteurs"), "menteur");});
test("menteuse -> menteux", function() {deepEqual( Stem("menteuse"), "menteux");});
test("mentez -> ment", function() {deepEqual( Stem("mentez"), "ment");});
test("menti -> ment", function() {deepEqual( Stem("menti"), "ment");});
test("mention -> mention", function() {deepEqual( Stem("mention"), "mention");});
test("mentionne -> mention", function() {deepEqual( Stem("mentionne"), "mention");});
test("mentionner -> mention", function() {deepEqual( Stem("mentionner"), "mention");});
test("mentir -> ment", function() {deepEqual( Stem("mentir"), "ment");});
test("mentirais -> ment", function() {deepEqual( Stem("mentirais"), "ment");});
test("menton -> menton", function() {deepEqual( Stem("menton"), "menton");});
test("menues -> menu", function() {deepEqual( Stem("menues"), "menu");});
test("menuiserie -> menuiser", function() {deepEqual( Stem("menuiserie"), "menuiser");});
test("menuisier -> menuisi", function() {deepEqual( Stem("menuisier"), "menuisi");});
test("menuisiers -> menuisi", function() {deepEqual( Stem("menuisiers"), "menuisi");});
test("méphistophélès -> méphistophéles", function() {deepEqual( Stem("méphistophélès"), "méphistophéles");});
test("méprenait -> mépren", function() {deepEqual( Stem("méprenait"), "mépren");});
test("méprendre -> méprendr", function() {deepEqual( Stem("méprendre"), "méprendr");});
test("mépris -> mepr", function() {deepEqual( Stem("mépris"), "mepr");});
test("méprisa -> mépris", function() {deepEqual( Stem("méprisa"), "mépris");});
test("méprisable -> mépris", function() {deepEqual( Stem("méprisable"), "mépris");});
test("méprisais -> mépris", function() {deepEqual( Stem("méprisais"), "mépris");});
test("méprisait -> mépris", function() {deepEqual( Stem("méprisait"), "mépris");});
test("méprisant -> mépris", function() {deepEqual( Stem("méprisant"), "mépris");});
test("méprise -> mépris", function() {deepEqual( Stem("méprise"), "mépris");});
test("méprisé -> mépris", function() {deepEqual( Stem("méprisé"), "mépris");});
test("méprisée -> mépris", function() {deepEqual( Stem("méprisée"), "mépris");});
test("méprisent -> méprisent", function() {deepEqual( Stem("méprisent"), "méprisent");});
test("mépriser -> mépris", function() {deepEqual( Stem("mépriser"), "mépris");});
test("méprisera -> mépris", function() {deepEqual( Stem("méprisera"), "mépris");});
test("mépriserai -> mépris", function() {deepEqual( Stem("mépriserai"), "mépris");});
test("mépriseraient -> mépris", function() {deepEqual( Stem("mépriseraient"), "mépris");});
test("mépriserait -> mépris", function() {deepEqual( Stem("mépriserait"), "mépris");});
test("méprisez -> mépris", function() {deepEqual( Stem("méprisez"), "mépris");});
test("mer -> mer", function() {deepEqual( Stem("mer"), "mer");});
test("mercadante -> mercad", function() {deepEqual( Stem("mercadante"), "mercad");});
test("mercantile -> mercantil", function() {deepEqual( Stem("mercantile"), "mercantil");});
test("merci -> merc", function() {deepEqual( Stem("merci"), "merc");});
test("mercredi -> mercred", function() {deepEqual( Stem("mercredi"), "mercred");});
test("mercure -> mercur", function() {deepEqual( Stem("mercure"), "mercur");});
test("mère -> mer", function() {deepEqual( Stem("mère"), "mer");});
test("méridien -> méridien", function() {deepEqual( Stem("méridien"), "méridien");});
test("méridiens -> méridien", function() {deepEqual( Stem("méridiens"), "méridien");});
test("méridional -> méridional", function() {deepEqual( Stem("méridional"), "méridional");});
test("méridionale -> méridional", function() {deepEqual( Stem("méridionale"), "méridional");});
test("méridionaux -> méridional", function() {deepEqual( Stem("méridionaux"), "méridional");});
test("mérimée -> mérim", function() {deepEqual( Stem("mérimée"), "mérim");});
test("méritait -> mérit", function() {deepEqual( Stem("méritait"), "mérit");});
test("méritant -> mérit", function() {deepEqual( Stem("méritant"), "mérit");});
test("mérite -> mérit", function() {deepEqual( Stem("mérite"), "mérit");});
test("mérité -> mérit", function() {deepEqual( Stem("mérité"), "mérit");});
test("méritée -> mérit", function() {deepEqual( Stem("méritée"), "mérit");});
test("méritées -> mérit", function() {deepEqual( Stem("méritées"), "mérit");});
test("mériter -> mérit", function() {deepEqual( Stem("mériter"), "mérit");});
test("méritera -> mérit", function() {deepEqual( Stem("méritera"), "mérit");});
test("mériterais -> mérit", function() {deepEqual( Stem("mériterais"), "mérit");});
test("méritèrent -> mérit", function() {deepEqual( Stem("méritèrent"), "mérit");});
test("mérites -> mérit", function() {deepEqual( Stem("mérites"), "mérit");});
test("mérités -> mérit", function() {deepEqual( Stem("mérités"), "mérit");});
test("méritez -> mérit", function() {deepEqual( Stem("méritez"), "mérit");});
test("méritoire -> méritoir", function() {deepEqual( Stem("méritoire"), "méritoir");});
test("mers -> mer", function() {deepEqual( Stem("mers"), "mer");});
test("merveille -> merveil", function() {deepEqual( Stem("merveille"), "merveil");});
test("merveilles -> merveil", function() {deepEqual( Stem("merveilles"), "merveil");});
test("merveilleuse -> merveil", function() {deepEqual( Stem("merveilleuse"), "merveil");});
test("merveilleusement -> merveil", function() {deepEqual( Stem("merveilleusement"), "merveil");});
test("merveilleuses -> merveil", function() {deepEqual( Stem("merveilleuses"), "merveil");});
test("merveilleux -> merveil", function() {deepEqual( Stem("merveilleux"), "merveil");});
test("méry -> méry", function() {deepEqual( Stem("méry"), "méry");});
test("mes -> me", function() {deepEqual( Stem("mes"), "me");});
test("mésalliance -> mésalli", function() {deepEqual( Stem("mésalliance"), "mésalli");});
test("mésaventure -> mésaventur", function() {deepEqual( Stem("mésaventure"), "mésaventur");});
test("mesi -> mes", function() {deepEqual( Stem("mesi"), "mes");});
test("mesquin -> mesquin", function() {deepEqual( Stem("mesquin"), "mesquin");});
test("mesquine -> mesquin", function() {deepEqual( Stem("mesquine"), "mesquin");});
test("mesquins -> mesquin", function() {deepEqual( Stem("mesquins"), "mesquin");});
test("message -> messag", function() {deepEqual( Stem("message"), "messag");});
test("messager -> messag", function() {deepEqual( Stem("messager"), "messag");});
test("messageries -> messager", function() {deepEqual( Stem("messageries"), "messager");});
test("messe -> mess", function() {deepEqual( Stem("messe"), "mess");});
test("messes -> mess", function() {deepEqual( Stem("messes"), "mess");});
test("messieurs -> messieur", function() {deepEqual( Stem("messieurs"), "messieur");});
test("messire -> messir", function() {deepEqual( Stem("messire"), "messir");});
test("mesure -> mesur", function() {deepEqual( Stem("mesure"), "mesur");});
test("mesuré -> mesur", function() {deepEqual( Stem("mesuré"), "mesur");});
test("mesurée -> mesur", function() {deepEqual( Stem("mesurée"), "mesur");});
test("mesurées -> mesur", function() {deepEqual( Stem("mesurées"), "mesur");});
test("mesurer -> mesur", function() {deepEqual( Stem("mesurer"), "mesur");});
test("mesures -> mesur", function() {deepEqual( Stem("mesures"), "mesur");});
test("mesurés -> mesur", function() {deepEqual( Stem("mesurés"), "mesur");});
test("met -> met", function() {deepEqual( Stem("met"), "met");});
test("métal -> métal", function() {deepEqual( Stem("métal"), "métal");});
test("métalliques -> métall", function() {deepEqual( Stem("métalliques"), "métall");});
test("métaphysiques -> métaphys", function() {deepEqual( Stem("métaphysiques"), "métaphys");});
test("météorologiste -> météorolog", function() {deepEqual( Stem("météorologiste"), "météorolog");});
test("méthodes -> méthod", function() {deepEqual( Stem("méthodes"), "méthod");});
test("méthodique -> méthod", function() {deepEqual( Stem("méthodique"), "méthod");});
test("méthodiquement -> méthod", function() {deepEqual( Stem("méthodiquement"), "méthod");});
test("méthodisme -> méthod", function() {deepEqual( Stem("méthodisme"), "méthod");});
test("méticuleuse -> méticul", function() {deepEqual( Stem("méticuleuse"), "méticul");});
test("méticuleux -> méticul", function() {deepEqual( Stem("méticuleux"), "méticul");});
test("métier -> méti", function() {deepEqual( Stem("métier"), "méti");});
test("métiers -> méti", function() {deepEqual( Stem("métiers"), "méti");});
test("mètres -> metr", function() {deepEqual( Stem("mètres"), "metr");});
test("métropole -> métropol", function() {deepEqual( Stem("métropole"), "métropol");});
test("métropolitaine -> métropolitain", function() {deepEqual( Stem("métropolitaine"), "métropolitain");});
test("mets -> met", function() {deepEqual( Stem("mets"), "met");});
test("mettaient -> met", function() {deepEqual( Stem("mettaient"), "met");});
test("mettais -> met", function() {deepEqual( Stem("mettais"), "met");});
test("mettait -> met", function() {deepEqual( Stem("mettait"), "met");});
test("mettant -> met", function() {deepEqual( Stem("mettant"), "met");});
test("mette -> met", function() {deepEqual( Stem("mette"), "met");});
test("mettent -> mettent", function() {deepEqual( Stem("mettent"), "mettent");});
test("mettez -> met", function() {deepEqual( Stem("mettez"), "met");});
test("mettions -> mettion", function() {deepEqual( Stem("mettions"), "mettion");});
test("mettons -> metton", function() {deepEqual( Stem("mettons"), "metton");});
test("mettra -> mettr", function() {deepEqual( Stem("mettra"), "mettr");});
test("mettrai -> mettr", function() {deepEqual( Stem("mettrai"), "mettr");});
test("mettraient -> mettr", function() {deepEqual( Stem("mettraient"), "mettr");});
test("mettrais -> mettr", function() {deepEqual( Stem("mettrais"), "mettr");});
test("mettrait -> mettr", function() {deepEqual( Stem("mettrait"), "mettr");});
test("mettras -> mettr", function() {deepEqual( Stem("mettras"), "mettr");});
test("mettre -> mettr", function() {deepEqual( Stem("mettre"), "mettr");});
test("mettrez -> mettr", function() {deepEqual( Stem("mettrez"), "mettr");});
test("mettriez -> mettr", function() {deepEqual( Stem("mettriez"), "mettr");});
test("mettrons -> mettron", function() {deepEqual( Stem("mettrons"), "mettron");});
test("mettront -> mettront", function() {deepEqual( Stem("mettront"), "mettront");});
test("metz -> metz", function() {deepEqual( Stem("metz"), "metz");});
test("meuble -> meubl", function() {deepEqual( Stem("meuble"), "meubl");});
test("meublée -> meubl", function() {deepEqual( Stem("meublée"), "meubl");});
test("meublées -> meubl", function() {deepEqual( Stem("meublées"), "meubl");});
test("meubler -> meubl", function() {deepEqual( Stem("meubler"), "meubl");});
test("meubles -> meubl", function() {deepEqual( Stem("meubles"), "meubl");});
test("meudon -> meudon", function() {deepEqual( Stem("meudon"), "meudon");});
test("meunier -> meuni", function() {deepEqual( Stem("meunier"), "meuni");});
test("meure -> meur", function() {deepEqual( Stem("meure"), "meur");});
test("meures -> meur", function() {deepEqual( Stem("meures"), "meur");});
test("meurs -> meur", function() {deepEqual( Stem("meurs"), "meur");});
test("meurt -> meurt", function() {deepEqual( Stem("meurt"), "meurt");});
test("meurtre -> meurtr", function() {deepEqual( Stem("meurtre"), "meurtr");});
test("meurtres -> meurtr", function() {deepEqual( Stem("meurtres"), "meurtr");});
test("meurtrier -> meurtri", function() {deepEqual( Stem("meurtrier"), "meurtri");});
test("meurtrière -> meurtri", function() {deepEqual( Stem("meurtrière"), "meurtri");});
test("meurtris -> meurtr", function() {deepEqual( Stem("meurtris"), "meurtr");});
test("meurtrissure -> meurtrissur", function() {deepEqual( Stem("meurtrissure"), "meurtrissur");});
test("meus -> meus", function() {deepEqual( Stem("meus"), "meus");});
test("mexicain -> mexicain", function() {deepEqual( Stem("mexicain"), "mexicain");});
test("mexique -> mexiqu", function() {deepEqual( Stem("mexique"), "mexiqu");});
test("mezzo -> mezzo", function() {deepEqual( Stem("mezzo"), "mezzo");});
test("mi -> mi", function() {deepEqual( Stem("mi"), "mi");});
test("mia -> mi", function() {deepEqual( Stem("mia"), "mi");});
test("miaulé -> miaul", function() {deepEqual( Stem("miaulé"), "miaul");});
test("michaud -> michaud", function() {deepEqual( Stem("michaud"), "michaud");});
test("michel -> michel", function() {deepEqual( Stem("michel"), "michel");});
test("michele -> michel", function() {deepEqual( Stem("michele"), "michel");});
test("michelet -> michelet", function() {deepEqual( Stem("michelet"), "michelet");});
test("micheli -> michel", function() {deepEqual( Stem("micheli"), "michel");});
test("michigan -> michigan", function() {deepEqual( Stem("michigan"), "michigan");});
test("microscope -> microscop", function() {deepEqual( Stem("microscope"), "microscop");});
test("microscopique -> microscop", function() {deepEqual( Stem("microscopique"), "microscop");});
test("microscopiques -> microscop", function() {deepEqual( Stem("microscopiques"), "microscop");});
test("midi -> mid", function() {deepEqual( Stem("midi"), "mid");});
test("mielleuse -> mielleux", function() {deepEqual( Stem("mielleuse"), "mielleux");});
test("mielleuses -> mielleux", function() {deepEqual( Stem("mielleuses"), "mielleux");});
test("mien -> mien", function() {deepEqual( Stem("mien"), "mien");});
test("mienne -> mien", function() {deepEqual( Stem("mienne"), "mien");});
test("miens -> mien", function() {deepEqual( Stem("miens"), "mien");});
test("miettes -> miet", function() {deepEqual( Stem("miettes"), "miet");});
test("mieux -> mieux", function() {deepEqual( Stem("mieux"), "mieux");});
test("mignonnes -> mignon", function() {deepEqual( Stem("mignonnes"), "mignon");});
test("migraine -> migrain", function() {deepEqual( Stem("migraine"), "migrain");});
test("migration -> migrat", function() {deepEqual( Stem("migration"), "migrat");});
test("mikado -> mikado", function() {deepEqual( Stem("mikado"), "mikado");});
test("milan -> milan", function() {deepEqual( Stem("milan"), "milan");});
test("milanais -> milan", function() {deepEqual( Stem("milanais"), "milan");});
test("milanaise -> milanais", function() {deepEqual( Stem("milanaise"), "milanais");});
test("milieu -> milieu", function() {deepEqual( Stem("milieu"), "milieu");});
test("militaire -> militair", function() {deepEqual( Stem("militaire"), "militair");});
test("militaires -> militair", function() {deepEqual( Stem("militaires"), "militair");});
test("mille -> mill", function() {deepEqual( Stem("mille"), "mill");});
test("milles -> mill", function() {deepEqual( Stem("milles"), "mill");});
test("milliard -> milliard", function() {deepEqual( Stem("milliard"), "milliard");});
test("milliards -> milliard", function() {deepEqual( Stem("milliards"), "milliard");});
test("milliers -> milli", function() {deepEqual( Stem("milliers"), "milli");});
test("million -> million", function() {deepEqual( Stem("million"), "million");});
test("millionnaire -> millionnair", function() {deepEqual( Stem("millionnaire"), "millionnair");});
test("millionnaires -> millionnair", function() {deepEqual( Stem("millionnaires"), "millionnair");});
test("millions -> million", function() {deepEqual( Stem("millions"), "million");});
test("mimosées -> mimos", function() {deepEqual( Stem("mimosées"), "mimos");});
test("minaret -> minaret", function() {deepEqual( Stem("minaret"), "minaret");});
test("minarets -> minaret", function() {deepEqual( Stem("minarets"), "minaret");});
test("mince -> minc", function() {deepEqual( Stem("mince"), "minc");});
test("minces -> minc", function() {deepEqual( Stem("minces"), "minc");});
test("mind -> mind", function() {deepEqual( Stem("mind"), "mind");});
test("mine -> min", function() {deepEqual( Stem("mine"), "min");});
test("minéralogie -> minéralog", function() {deepEqual( Stem("minéralogie"), "minéralog");});
test("minéraux -> minéral", function() {deepEqual( Stem("minéraux"), "minéral");});
test("minerve -> minerv", function() {deepEqual( Stem("minerve"), "minerv");});
test("mines -> min", function() {deepEqual( Stem("mines"), "min");});
test("mineurs -> mineur", function() {deepEqual( Stem("mineurs"), "mineur");});
test("miniature -> miniatur", function() {deepEqual( Stem("miniature"), "miniatur");});
test("minimum -> minimum", function() {deepEqual( Stem("minimum"), "minimum");});
test("ministère -> minister", function() {deepEqual( Stem("ministère"), "minister");});
test("ministères -> minister", function() {deepEqual( Stem("ministères"), "minister");});
test("ministériel -> ministériel", function() {deepEqual( Stem("ministériel"), "ministériel");});
test("ministérielle -> ministériel", function() {deepEqual( Stem("ministérielle"), "ministériel");});
test("ministre -> ministr", function() {deepEqual( Stem("ministre"), "ministr");});
test("ministres -> ministr", function() {deepEqual( Stem("ministres"), "ministr");});
test("minuit -> minuit", function() {deepEqual( Stem("minuit"), "minuit");});
test("minute -> minut", function() {deepEqual( Stem("minute"), "minut");});
test("minutes -> minut", function() {deepEqual( Stem("minutes"), "minut");});
test("mirabeau -> mirabeau", function() {deepEqual( Stem("mirabeau"), "mirabeau");});
test("miracle -> miracl", function() {deepEqual( Stem("miracle"), "miracl");});
test("miracles -> miracl", function() {deepEqual( Stem("miracles"), "miracl");});
test("miraculeuse -> miracul", function() {deepEqual( Stem("miraculeuse"), "miracul");});
test("mirari -> mirar", function() {deepEqual( Stem("mirari"), "mirar");});
test("miraut -> miraut", function() {deepEqual( Stem("miraut"), "miraut");});
test("mire -> mir", function() {deepEqual( Stem("mire"), "mir");});
test("mirent -> mirent", function() {deepEqual( Stem("mirent"), "mirent");});
test("miroir -> miroir", function() {deepEqual( Stem("miroir"), "miroir");});
test("mis -> mis", function() {deepEqual( Stem("mis"), "mis");});
test("misaine -> misain", function() {deepEqual( Stem("misaine"), "misain");});
test("mise -> mis", function() {deepEqual( Stem("mise"), "mis");});
test("misène -> misen", function() {deepEqual( Stem("misène"), "misen");});
test("misérable -> miser", function() {deepEqual( Stem("misérable"), "miser");});
test("misérables -> miser", function() {deepEqual( Stem("misérables"), "miser");});
test("misère -> miser", function() {deepEqual( Stem("misère"), "miser");});
test("misères -> miser", function() {deepEqual( Stem("misères"), "miser");});
test("miséricorde -> miséricord", function() {deepEqual( Stem("miséricorde"), "miséricord");});
test("mises -> mis", function() {deepEqual( Stem("mises"), "mis");});
test("missel -> missel", function() {deepEqual( Stem("missel"), "missel");});
test("mission -> mission", function() {deepEqual( Stem("mission"), "mission");});
test("missionnaire -> missionnair", function() {deepEqual( Stem("missionnaire"), "missionnair");});
test("missions -> mission", function() {deepEqual( Stem("missions"), "mission");});
test("mississippi -> mississipp", function() {deepEqual( Stem("mississippi"), "mississipp");});
test("missive -> missiv", function() {deepEqual( Stem("missive"), "missiv");});
test("missouri -> missour", function() {deepEqual( Stem("missouri"), "missour");});
test("mit -> mit", function() {deepEqual( Stem("mit"), "mit");});
test("mît -> mît", function() {deepEqual( Stem("mît"), "mît");});
test("mitiger -> mitig", function() {deepEqual( Stem("mitiger"), "mitig");});
test("mitre -> mitr", function() {deepEqual( Stem("mitre"), "mitr");});
test("mitres -> mitr", function() {deepEqual( Stem("mitres"), "mitr");});
test("mm -> mm", function() {deepEqual( Stem("mm"), "mm");});
test("mme -> mme", function() {deepEqual( Stem("mme"), "mme");});
test("mobile -> mobil", function() {deepEqual( Stem("mobile"), "mobil");});
test("mobiles -> mobil", function() {deepEqual( Stem("mobiles"), "mobil");});
test("mobilité -> mobil", function() {deepEqual( Stem("mobilité"), "mobil");});
test("mode -> mod", function() {deepEqual( Stem("mode"), "mod");});
test("modèle -> model", function() {deepEqual( Stem("modèle"), "model");});
test("modelée -> model", function() {deepEqual( Stem("modelée"), "model");});
test("modèles -> model", function() {deepEqual( Stem("modèles"), "model");});
test("modène -> moden", function() {deepEqual( Stem("modène"), "moden");});
test("modéra -> moder", function() {deepEqual( Stem("modéra"), "moder");});
test("modération -> moder", function() {deepEqual( Stem("modération"), "moder");});
test("modéré -> moder", function() {deepEqual( Stem("modéré"), "moder");});
test("modérée -> moder", function() {deepEqual( Stem("modérée"), "moder");});
test("modérés -> moder", function() {deepEqual( Stem("modérés"), "moder");});
test("modérez -> moder", function() {deepEqual( Stem("modérez"), "moder");});
test("moderne -> modern", function() {deepEqual( Stem("moderne"), "modern");});
test("modernes -> modern", function() {deepEqual( Stem("modernes"), "modern");});
test("modes -> mod", function() {deepEqual( Stem("modes"), "mod");});
test("modeste -> modest", function() {deepEqual( Stem("modeste"), "modest");});
test("modestie -> modest", function() {deepEqual( Stem("modestie"), "modest");});
test("modifia -> modifi", function() {deepEqual( Stem("modifia"), "modifi");});
test("modification -> modif", function() {deepEqual( Stem("modification"), "modif");});
test("modifiée -> modifi", function() {deepEqual( Stem("modifiée"), "modifi");});
test("modifier -> modifi", function() {deepEqual( Stem("modifier"), "modifi");});
test("modifierait -> modifi", function() {deepEqual( Stem("modifierait"), "modifi");});
test("moelleux -> moelleux", function() {deepEqual( Stem("moelleux"), "moelleux");});
test("moeurs -> moeur", function() {deepEqual( Stem("moeurs"), "moeur");});
test("moi -> moi", function() {deepEqual( Stem("moi"), "moi");});
test("moindre -> moindr", function() {deepEqual( Stem("moindre"), "moindr");});
test("moindres -> moindr", function() {deepEqual( Stem("moindres"), "moindr");});
test("moine -> moin", function() {deepEqual( Stem("moine"), "moin");});
test("moineaux -> moineau", function() {deepEqual( Stem("moineaux"), "moineau");});
test("moines -> moin", function() {deepEqual( Stem("moines"), "moin");});
test("moins -> moin", function() {deepEqual( Stem("moins"), "moin");});
test("moirod -> moirod", function() {deepEqual( Stem("moirod"), "moirod");});
test("mois -> mois", function() {deepEqual( Stem("mois"), "mois");});
test("moisson -> moisson", function() {deepEqual( Stem("moisson"), "moisson");});
test("moitié -> moiti", function() {deepEqual( Stem("moitié"), "moiti");});
test("moka -> mok", function() {deepEqual( Stem("moka"), "mok");});
test("mole -> mol", function() {deepEqual( Stem("mole"), "mol");});
test("molière -> moli", function() {deepEqual( Stem("molière"), "moli");});
test("molle -> moll", function() {deepEqual( Stem("molle"), "moll");});
test("mollement -> moll", function() {deepEqual( Stem("mollement"), "moll");});
test("molleton -> molleton", function() {deepEqual( Stem("molleton"), "molleton");});
test("mollissait -> moll", function() {deepEqual( Stem("mollissait"), "moll");});
test("mollit -> moll", function() {deepEqual( Stem("mollit"), "moll");});
test("moltiplico -> moltiplico", function() {deepEqual( Stem("moltiplico"), "moltiplico");});
test("moment -> moment", function() {deepEqual( Stem("moment"), "moment");});
test("momentanée -> momentan", function() {deepEqual( Stem("momentanée"), "momentan");});
test("moments -> moment", function() {deepEqual( Stem("moments"), "moment");});
test("momie -> mom", function() {deepEqual( Stem("momie"), "mom");});
test("momies -> mom", function() {deepEqual( Stem("momies"), "mom");});
test("mon -> mon", function() {deepEqual( Stem("mon"), "mon");});
test("monaca -> monac", function() {deepEqual( Stem("monaca"), "monac");});
test("monarchie -> monarch", function() {deepEqual( Stem("monarchie"), "monarch");});
test("monarchies -> monarch", function() {deepEqual( Stem("monarchies"), "monarch");});
test("monarchique -> monarch", function() {deepEqual( Stem("monarchique"), "monarch");});
test("monarchiques -> monarch", function() {deepEqual( Stem("monarchiques"), "monarch");});
test("monastères -> monaster", function() {deepEqual( Stem("monastères"), "monaster");});
test("moncade -> moncad", function() {deepEqual( Stem("moncade"), "moncad");});
test("monceau -> monceau", function() {deepEqual( Stem("monceau"), "monceau");});
test("moncontour -> moncontour", function() {deepEqual( Stem("moncontour"), "moncontour");});
test("mondain -> mondain", function() {deepEqual( Stem("mondain"), "mondain");});
test("mondaine -> mondain", function() {deepEqual( Stem("mondaine"), "mondain");});
test("mondaines -> mondain", function() {deepEqual( Stem("mondaines"), "mondain");});
test("mondains -> mondain", function() {deepEqual( Stem("mondains"), "mondain");});
test("monde -> mond", function() {deepEqual( Stem("monde"), "mond");});
test("monférine -> monférin", function() {deepEqual( Stem("monférine"), "monférin");});
test("monfleury -> monfleury", function() {deepEqual( Stem("monfleury"), "monfleury");});
test("monghir -> mongh", function() {deepEqual( Stem("monghir"), "mongh");});
test("mongolia -> mongoli", function() {deepEqual( Stem("mongolia"), "mongoli");});
test("moniteur -> moniteur", function() {deepEqual( Stem("moniteur"), "moniteur");});
test("monnaie -> monnai", function() {deepEqual( Stem("monnaie"), "monnai");});
test("monologue -> monologu", function() {deepEqual( Stem("monologue"), "monologu");});
test("monomanes -> monoman", function() {deepEqual( Stem("monomanes"), "monoman");});
test("monopole -> monopol", function() {deepEqual( Stem("monopole"), "monopol");});
test("monosyllabes -> monosyllab", function() {deepEqual( Stem("monosyllabes"), "monosyllab");});
test("monotone -> monoton", function() {deepEqual( Stem("monotone"), "monoton");});
test("monotones -> monoton", function() {deepEqual( Stem("monotones"), "monoton");});
test("monseigneur -> monseigneur", function() {deepEqual( Stem("monseigneur"), "monseigneur");});
test("monsieur -> monsieur", function() {deepEqual( Stem("monsieur"), "monsieur");});
test("monsignor -> monsignor", function() {deepEqual( Stem("monsignor"), "monsignor");});
test("monsignore -> monsignor", function() {deepEqual( Stem("monsignore"), "monsignor");});
test("monstre -> monstr", function() {deepEqual( Stem("monstre"), "monstr");});
test("monstres -> monstr", function() {deepEqual( Stem("monstres"), "monstr");});
test("monstrueuses -> monstrueux", function() {deepEqual( Stem("monstrueuses"), "monstrueux");});
test("mont -> mont", function() {deepEqual( Stem("mont"), "mont");});
test("monta -> mont", function() {deepEqual( Stem("monta"), "mont");});
test("montagne -> montagn", function() {deepEqual( Stem("montagne"), "montagn");});
test("montagnes -> montagn", function() {deepEqual( Stem("montagnes"), "montagn");});
test("montagneuse -> montagn", function() {deepEqual( Stem("montagneuse"), "montagn");});
test("montagneux -> montagn", function() {deepEqual( Stem("montagneux"), "montagn");});
test("montagnola -> montagnol", function() {deepEqual( Stem("montagnola"), "montagnol");});
test("montaient -> mont", function() {deepEqual( Stem("montaient"), "mont");});
test("montais -> mont", function() {deepEqual( Stem("montais"), "mont");});
test("montait -> mont", function() {deepEqual( Stem("montait"), "mont");});
test("montant -> mont", function() {deepEqual( Stem("montant"), "mont");});
test("montât -> mont", function() {deepEqual( Stem("montât"), "mont");});
test("monte -> mont", function() {deepEqual( Stem("monte"), "mont");});
test("monté -> mont", function() {deepEqual( Stem("monté"), "mont");});
test("montée -> mont", function() {deepEqual( Stem("montée"), "mont");});
test("montent -> montent", function() {deepEqual( Stem("montent"), "montent");});
test("monter -> mont", function() {deepEqual( Stem("monter"), "mont");});
test("montera -> mont", function() {deepEqual( Stem("montera"), "mont");});
test("monterai -> mont", function() {deepEqual( Stem("monterai"), "mont");});
test("montèrent -> mont", function() {deepEqual( Stem("montèrent"), "mont");});
test("montés -> mont", function() {deepEqual( Stem("montés"), "mont");});
test("montesson -> montesson", function() {deepEqual( Stem("montesson"), "montesson");});
test("montez -> mont", function() {deepEqual( Stem("montez"), "mont");});
test("montgommery -> montgommery", function() {deepEqual( Stem("montgommery"), "montgommery");});
test("monti -> mont", function() {deepEqual( Stem("monti"), "mont");});
test("montmartre -> montmartr", function() {deepEqual( Stem("montmartre"), "montmartr");});
test("montmirail -> montmirail", function() {deepEqual( Stem("montmirail"), "montmirail");});
test("montmorency -> montmorency", function() {deepEqual( Stem("montmorency"), "montmorency");});
test("montoir -> montoir", function() {deepEqual( Stem("montoir"), "montoir");});
test("montons -> monton", function() {deepEqual( Stem("montons"), "monton");});
test("montra -> montr", function() {deepEqual( Stem("montra"), "montr");});
test("montraient -> montr", function() {deepEqual( Stem("montraient"), "montr");});
test("montrait -> montr", function() {deepEqual( Stem("montrait"), "montr");});
test("montrant -> montr", function() {deepEqual( Stem("montrant"), "montr");});
test("montrât -> montr", function() {deepEqual( Stem("montrât"), "montr");});
test("montre -> montr", function() {deepEqual( Stem("montre"), "montr");});
test("montré -> montr", function() {deepEqual( Stem("montré"), "montr");});
test("montrée -> montr", function() {deepEqual( Stem("montrée"), "montr");});
test("montrent -> montrent", function() {deepEqual( Stem("montrent"), "montrent");});
test("montrer -> montr", function() {deepEqual( Stem("montrer"), "montr");});
test("montrera -> montr", function() {deepEqual( Stem("montrera"), "montr");});
test("montrerai -> montr", function() {deepEqual( Stem("montrerai"), "montr");});
test("montrerait -> montr", function() {deepEqual( Stem("montrerait"), "montr");});
test("montrèrent -> montr", function() {deepEqual( Stem("montrèrent"), "montr");});
test("montreriez -> montr", function() {deepEqual( Stem("montreriez"), "montr");});
test("montres -> montr", function() {deepEqual( Stem("montres"), "montr");});
test("montrés -> montr", function() {deepEqual( Stem("montrés"), "montr");});
test("montreur -> montreur", function() {deepEqual( Stem("montreur"), "montreur");});
test("montrez -> montr", function() {deepEqual( Stem("montrez"), "montr");});
test("monts -> mont", function() {deepEqual( Stem("monts"), "mont");});
test("monture -> montur", function() {deepEqual( Stem("monture"), "montur");});
test("monument -> monu", function() {deepEqual( Stem("monument"), "monu");});
test("monumental -> monumental", function() {deepEqual( Stem("monumental"), "monumental");});
test("monuments -> monu", function() {deepEqual( Stem("monuments"), "monu");});
test("moqua -> moqu", function() {deepEqual( Stem("moqua"), "moqu");});
test("moquai -> moqu", function() {deepEqual( Stem("moquai"), "moqu");});
test("moquaient -> moqu", function() {deepEqual( Stem("moquaient"), "moqu");});
test("moquais -> moqu", function() {deepEqual( Stem("moquais"), "moqu");});
test("moquait -> moqu", function() {deepEqual( Stem("moquait"), "moqu");});
test("moquant -> moqu", function() {deepEqual( Stem("moquant"), "moqu");});
test("moque -> moqu", function() {deepEqual( Stem("moque"), "moqu");});
test("moqué -> moqu", function() {deepEqual( Stem("moqué"), "moqu");});
test("moquent -> moquent", function() {deepEqual( Stem("moquent"), "moquent");});
test("moquer -> moqu", function() {deepEqual( Stem("moquer"), "moqu");});
test("moquera -> moqu", function() {deepEqual( Stem("moquera"), "moqu");});
test("moquerais -> moqu", function() {deepEqual( Stem("moquerais"), "moqu");});
test("moquerait -> moqu", function() {deepEqual( Stem("moquerait"), "moqu");});
test("moquerie -> moquer", function() {deepEqual( Stem("moquerie"), "moquer");});
test("moqueur -> moqueur", function() {deepEqual( Stem("moqueur"), "moqueur");});
test("moqueurs -> moqueur", function() {deepEqual( Stem("moqueurs"), "moqueur");});
test("moqueuse -> moqueux", function() {deepEqual( Stem("moqueuse"), "moqueux");});
test("moral -> moral", function() {deepEqual( Stem("moral"), "moral");});
test("morale -> moral", function() {deepEqual( Stem("morale"), "moral");});
test("morales -> moral", function() {deepEqual( Stem("morales"), "moral");});
test("moralité -> moral", function() {deepEqual( Stem("moralité"), "moral");});
test("moralités -> moral", function() {deepEqual( Stem("moralités"), "moral");});
test("moraux -> moral", function() {deepEqual( Stem("moraux"), "moral");});
test("moravie -> morav", function() {deepEqual( Stem("moravie"), "morav");});
test("morbleu -> morbleu", function() {deepEqual( Stem("morbleu"), "morbleu");});
test("morceau -> morceau", function() {deepEqual( Stem("morceau"), "morceau");});
test("morceaux -> morceau", function() {deepEqual( Stem("morceaux"), "morceau");});
test("mord -> mord", function() {deepEqual( Stem("mord"), "mord");});
test("mordait -> mord", function() {deepEqual( Stem("mordait"), "mord");});
test("mordant -> mord", function() {deepEqual( Stem("mordant"), "mord");});
test("mordantes -> mord", function() {deepEqual( Stem("mordantes"), "mord");});
test("moreri -> morer", function() {deepEqual( Stem("moreri"), "morer");});
test("morfondre -> morfondr", function() {deepEqual( Stem("morfondre"), "morfondr");});
test("mormon -> mormon", function() {deepEqual( Stem("mormon"), "mormon");});
test("mormone -> mormon", function() {deepEqual( Stem("mormone"), "mormon");});
test("mormones -> mormon", function() {deepEqual( Stem("mormones"), "mormon");});
test("mormonisme -> mormon", function() {deepEqual( Stem("mormonisme"), "mormon");});
test("mormons -> mormon", function() {deepEqual( Stem("mormons"), "mormon");});
test("morne -> morn", function() {deepEqual( Stem("morne"), "morn");});
test("mornes -> morn", function() {deepEqual( Stem("mornes"), "morn");});
test("morning -> morning", function() {deepEqual( Stem("morning"), "morning");});
test("morom -> morom", function() {deepEqual( Stem("morom"), "morom");});
test("morose -> moros", function() {deepEqual( Stem("morose"), "moros");});
test("moroses -> moros", function() {deepEqual( Stem("moroses"), "moros");});
test("mort -> mort", function() {deepEqual( Stem("mort"), "mort");});
test("mortaretti -> mortaret", function() {deepEqual( Stem("mortaretti"), "mortaret");});
test("morte -> mort", function() {deepEqual( Stem("morte"), "mort");});
test("mortel -> mortel", function() {deepEqual( Stem("mortel"), "mortel");});
test("mortelle -> mortel", function() {deepEqual( Stem("mortelle"), "mortel");});
test("mortellement -> mortel", function() {deepEqual( Stem("mortellement"), "mortel");});
test("mortelles -> mortel", function() {deepEqual( Stem("mortelles"), "mortel");});
test("mortels -> mortel", function() {deepEqual( Stem("mortels"), "mortel");});
test("mortes -> mort", function() {deepEqual( Stem("mortes"), "mort");});
test("mortier -> morti", function() {deepEqual( Stem("mortier"), "morti");});
test("mortiers -> morti", function() {deepEqual( Stem("mortiers"), "morti");});
test("mortifiantes -> mortifi", function() {deepEqual( Stem("mortifiantes"), "mortifi");});
test("mortifié -> mortifi", function() {deepEqual( Stem("mortifié"), "mortifi");});
test("mortifier -> mortifi", function() {deepEqual( Stem("mortifier"), "mortifi");});
test("morts -> mort", function() {deepEqual( Stem("morts"), "mort");});
test("morveux -> morveux", function() {deepEqual( Stem("morveux"), "morveux");});
test("mosca -> mosc", function() {deepEqual( Stem("mosca"), "mosc");});
test("moscou -> moscou", function() {deepEqual( Stem("moscou"), "moscou");});
test("moskova -> moskov", function() {deepEqual( Stem("moskova"), "moskov");});
test("mosquées -> mosqu", function() {deepEqual( Stem("mosquées"), "mosqu");});
test("most -> most", function() {deepEqual( Stem("most"), "most");});
test("mot -> mot", function() {deepEqual( Stem("mot"), "mot");});
test("moteur -> moteur", function() {deepEqual( Stem("moteur"), "moteur");});
test("motif -> motif", function() {deepEqual( Stem("motif"), "motif");});
test("motifs -> motif", function() {deepEqual( Stem("motifs"), "motif");});
test("motivât -> motiv", function() {deepEqual( Stem("motivât"), "motiv");});
test("motivé -> motiv", function() {deepEqual( Stem("motivé"), "motiv");});
test("motrices -> motric", function() {deepEqual( Stem("motrices"), "motric");});
test("mots -> mot", function() {deepEqual( Stem("mots"), "mot");});
test("motu -> motu", function() {deepEqual( Stem("motu"), "motu");});
test("mouche -> mouch", function() {deepEqual( Stem("mouche"), "mouch");});
test("mouchent -> mouchent", function() {deepEqual( Stem("mouchent"), "mouchent");});
test("moucher -> mouch", function() {deepEqual( Stem("moucher"), "mouch");});
test("moucheurs -> moucheur", function() {deepEqual( Stem("moucheurs"), "moucheur");});
test("mouchoir -> mouchoir", function() {deepEqual( Stem("mouchoir"), "mouchoir");});
test("mouchoirs -> mouchoir", function() {deepEqual( Stem("mouchoirs"), "mouchoir");});
test("mouettes -> mouet", function() {deepEqual( Stem("mouettes"), "mouet");});
test("mouilla -> mouill", function() {deepEqual( Stem("mouilla"), "mouill");});
test("mouillé -> mouill", function() {deepEqual( Stem("mouillé"), "mouill");});
test("mouiller -> mouill", function() {deepEqual( Stem("mouiller"), "mouill");});
test("mouillèrent -> mouill", function() {deepEqual( Stem("mouillèrent"), "mouill");});
test("mouillés -> mouill", function() {deepEqual( Stem("mouillés"), "mouill");});
test("moule -> moul", function() {deepEqual( Stem("moule"), "moul");});
test("moulin -> moulin", function() {deepEqual( Stem("moulin"), "moulin");});
test("moulus -> moulus", function() {deepEqual( Stem("moulus"), "moulus");});
test("mountains -> mountain", function() {deepEqual( Stem("mountains"), "mountain");});
test("mourais -> mour", function() {deepEqual( Stem("mourais"), "mour");});
test("mourait -> mour", function() {deepEqual( Stem("mourait"), "mour");});
test("mourant -> mour", function() {deepEqual( Stem("mourant"), "mour");});
test("mourante -> mour", function() {deepEqual( Stem("mourante"), "mour");});
test("mourants -> mour", function() {deepEqual( Stem("mourants"), "mour");});
test("mourions -> mourion", function() {deepEqual( Stem("mourions"), "mourion");});
test("mourir -> mour", function() {deepEqual( Stem("mourir"), "mour");});
test("mourons -> mouron", function() {deepEqual( Stem("mourons"), "mouron");});
test("mourra -> mourr", function() {deepEqual( Stem("mourra"), "mourr");});
test("mourrai -> mourr", function() {deepEqual( Stem("mourrai"), "mourr");});
test("mourrais -> mourr", function() {deepEqual( Stem("mourrais"), "mourr");});
test("mourrait -> mourr", function() {deepEqual( Stem("mourrait"), "mourr");});
test("mourras -> mourr", function() {deepEqual( Stem("mourras"), "mourr");});
test("mourrez -> mourr", function() {deepEqual( Stem("mourrez"), "mourr");});
test("mourrons -> mourron", function() {deepEqual( Stem("mourrons"), "mourron");});
test("mourront -> mourront", function() {deepEqual( Stem("mourront"), "mourront");});
test("mourshedabad -> mourshedabad", function() {deepEqual( Stem("mourshedabad"), "mourshedabad");});
test("mourusse -> mouruss", function() {deepEqual( Stem("mourusse"), "mouruss");});
test("mourut -> mourut", function() {deepEqual( Stem("mourut"), "mourut");});
test("mourût -> mourût", function() {deepEqual( Stem("mourût"), "mourût");});
test("mousqueterie -> mousqueter", function() {deepEqual( Stem("mousqueterie"), "mousqueter");});
test("mousseline -> mousselin", function() {deepEqual( Stem("mousseline"), "mousselin");});
test("mousseux -> mousseux", function() {deepEqual( Stem("mousseux"), "mousseux");});
test("moustache -> moustach", function() {deepEqual( Stem("moustache"), "moustach");});
test("moustaches -> moustach", function() {deepEqual( Stem("moustaches"), "moustach");});
test("mouton -> mouton", function() {deepEqual( Stem("mouton"), "mouton");});
test("moutonnaient -> mouton", function() {deepEqual( Stem("moutonnaient"), "mouton");});
test("moutons -> mouton", function() {deepEqual( Stem("moutons"), "mouton");});
test("mouvement -> mouv", function() {deepEqual( Stem("mouvement"), "mouv");});
test("mouvements -> mouv", function() {deepEqual( Stem("mouvements"), "mouv");});
test("mouvoir -> mouvoir", function() {deepEqual( Stem("mouvoir"), "mouvoir");});
test("moyen -> moyen", function() {deepEqual( Stem("moyen"), "moyen");});
test("moyenne -> moyen", function() {deepEqual( Stem("moyenne"), "moyen");});
test("moyennes -> moyen", function() {deepEqual( Stem("moyennes"), "moyen");});
test("moyens -> moyen", function() {deepEqual( Stem("moyens"), "moyen");});
test("moyeux -> moyeux", function() {deepEqual( Stem("moyeux"), "moyeux");});
test("mozart -> mozart", function() {deepEqual( Stem("mozart"), "mozart");});
test("mr -> mr", function() {deepEqual( Stem("mr"), "mr");});
test("mrs -> mr", function() {deepEqual( Stem("mrs"), "mr");});
test("mû -> mû", function() {deepEqual( Stem("mû"), "mû");});
test("much -> much", function() {deepEqual( Stem("much"), "much");});
test("muddy -> muddy", function() {deepEqual( Stem("muddy"), "muddy");});
test("mudge -> mudg", function() {deepEqual( Stem("mudge"), "mudg");});
test("muet -> muet", function() {deepEqual( Stem("muet"), "muet");});
test("muets -> muet", function() {deepEqual( Stem("muets"), "muet");});
test("mugissements -> mug", function() {deepEqual( Stem("mugissements"), "mug");});
test("mulet -> mulet", function() {deepEqual( Stem("mulet"), "mulet");});
test("muletiers -> muleti", function() {deepEqual( Stem("muletiers"), "muleti");});
test("mulhouse -> mulhous", function() {deepEqual( Stem("mulhouse"), "mulhous");});
test("multicolores -> multicolor", function() {deepEqual( Stem("multicolores"), "multicolor");});
test("multiplications -> multipl", function() {deepEqual( Stem("multiplications"), "multipl");});
test("multiplicité -> multipl", function() {deepEqual( Stem("multiplicité"), "multipl");});
test("multiplie -> multipl", function() {deepEqual( Stem("multiplie"), "multipl");});
test("multiplier -> multipli", function() {deepEqual( Stem("multiplier"), "multipli");});
test("multipliés -> multipli", function() {deepEqual( Stem("multipliés"), "multipli");});
test("muni -> mun", function() {deepEqual( Stem("muni"), "mun");});
test("munich -> munich", function() {deepEqual( Stem("munich"), "munich");});
test("municipal -> municipal", function() {deepEqual( Stem("municipal"), "municipal");});
test("munir -> mun", function() {deepEqual( Stem("munir"), "mun");});
test("munis -> mun", function() {deepEqual( Stem("munis"), "mun");});
test("munster -> munst", function() {deepEqual( Stem("munster"), "munst");});
test("mur -> mur", function() {deepEqual( Stem("mur"), "mur");});
test("mûr -> mûr", function() {deepEqual( Stem("mûr"), "mûr");});
test("muraille -> muraill", function() {deepEqual( Stem("muraille"), "muraill");});
test("murailles -> muraill", function() {deepEqual( Stem("murailles"), "muraill");});
test("mural -> mural", function() {deepEqual( Stem("mural"), "mural");});
test("murat -> murat", function() {deepEqual( Stem("murat"), "murat");});
test("murées -> mur", function() {deepEqual( Stem("murées"), "mur");});
test("mûrement -> mûr", function() {deepEqual( Stem("mûrement"), "mûr");});
test("mûrir -> mûr", function() {deepEqual( Stem("mûrir"), "mûr");});
test("murmura -> murmur", function() {deepEqual( Stem("murmura"), "murmur");});
test("murmurait -> murmur", function() {deepEqual( Stem("murmurait"), "murmur");});
test("murmure -> murmur", function() {deepEqual( Stem("murmure"), "murmur");});
test("murmures -> murmur", function() {deepEqual( Stem("murmures"), "murmur");});
test("murs -> mur", function() {deepEqual( Stem("murs"), "mur");});
test("muscadiers -> muscadi", function() {deepEqual( Stem("muscadiers"), "muscadi");});
test("muscles -> muscl", function() {deepEqual( Stem("muscles"), "muscl");});
test("musculaire -> musculair", function() {deepEqual( Stem("musculaire"), "musculair");});
test("musculature -> musculatur", function() {deepEqual( Stem("musculature"), "musculatur");});
test("musée -> mus", function() {deepEqual( Stem("musée"), "mus");});
test("mushroom -> mushroom", function() {deepEqual( Stem("mushroom"), "mushroom");});
test("musicien -> musicien", function() {deepEqual( Stem("musicien"), "musicien");});
test("musiciens -> musicien", function() {deepEqual( Stem("musiciens"), "musicien");});
test("musique -> musiqu", function() {deepEqual( Stem("musique"), "musiqu");});
test("musset -> musset", function() {deepEqual( Stem("musset"), "musset");});
test("mutilation -> mutil", function() {deepEqual( Stem("mutilation"), "mutil");});
test("mutilé -> mutil", function() {deepEqual( Stem("mutilé"), "mutil");});
test("mutsh -> mutsh", function() {deepEqual( Stem("mutsh"), "mutsh");});
test("mutuel -> mutuel", function() {deepEqual( Stem("mutuel"), "mutuel");});
test("mylord -> mylord", function() {deepEqual( Stem("mylord"), "mylord");});
test("mystère -> myster", function() {deepEqual( Stem("mystère"), "myster");});
test("mystères -> myster", function() {deepEqual( Stem("mystères"), "myster");});
test("mystérieuse -> mystéri", function() {deepEqual( Stem("mystérieuse"), "mystéri");});
test("mystérieusement -> mystéri", function() {deepEqual( Stem("mystérieusement"), "mystéri");});
test("mystérieux -> mystéri", function() {deepEqual( Stem("mystérieux"), "mystéri");});
test("mysticité -> mystiqu", function() {deepEqual( Stem("mysticité"), "mystiqu");});
test("mystification -> mystif", function() {deepEqual( Stem("mystification"), "mystif");});
test("mystifie -> mystif", function() {deepEqual( Stem("mystifie"), "mystif");});
test("mystifié -> mystifi", function() {deepEqual( Stem("mystifié"), "mystifi");});
test("mystifiée -> mystifi", function() {deepEqual( Stem("mystifiée"), "mystifi");});
test("mystifier -> mystifi", function() {deepEqual( Stem("mystifier"), "mystifi");});
test("mystique -> mystiqu", function() {deepEqual( Stem("mystique"), "mystiqu");});
test("n -> n", function() {deepEqual( Stem("n"), "n");});
test("nadir -> nad", function() {deepEqual( Stem("nadir"), "nad");});
test("nagasaki -> nagasak", function() {deepEqual( Stem("nagasaki"), "nagasak");});
test("nage -> nag", function() {deepEqual( Stem("nage"), "nag");});
test("nagent -> nagent", function() {deepEqual( Stem("nagent"), "nagent");});
test("nager -> nag", function() {deepEqual( Stem("nager"), "nag");});
test("naguère -> naguer", function() {deepEqual( Stem("naguère"), "naguer");});
test("naïf -> naïf", function() {deepEqual( Stem("naïf"), "naïf");});
test("naïfs -> naïf", function() {deepEqual( Stem("naïfs"), "naïf");});
test("nains -> nain", function() {deepEqual( Stem("nains"), "nain");});
test("naissance -> naissanc", function() {deepEqual( Stem("naissance"), "naissanc");});
test("naissant -> naiss", function() {deepEqual( Stem("naissant"), "naiss");});
test("naissante -> naiss", function() {deepEqual( Stem("naissante"), "naiss");});
test("naissent -> naissent", function() {deepEqual( Stem("naissent"), "naissent");});
test("naît -> naît", function() {deepEqual( Stem("naît"), "naît");});
test("naître -> naîtr", function() {deepEqual( Stem("naître"), "naîtr");});
test("naïve -> naïv", function() {deepEqual( Stem("naïve"), "naïv");});
test("naïvement -> naïv", function() {deepEqual( Stem("naïvement"), "naïv");});
test("naïves -> naïv", function() {deepEqual( Stem("naïves"), "naïv");});
test("naïveté -> naïvet", function() {deepEqual( Stem("naïveté"), "naïvet");});
test("nanan -> nanan", function() {deepEqual( Stem("nanan"), "nanan");});
test("nani -> nan", function() {deepEqual( Stem("nani"), "nan");});
test("nankin -> nankin", function() {deepEqual( Stem("nankin"), "nankin");});
test("nanking -> nanking", function() {deepEqual( Stem("nanking"), "nanking");});
test("napier -> napi", function() {deepEqual( Stem("napier"), "napi");});
test("naples -> napl", function() {deepEqual( Stem("naples"), "napl");});
test("napoléon -> napoléon", function() {deepEqual( Stem("napoléon"), "napoléon");});
test("napoléons -> napoléon", function() {deepEqual( Stem("napoléons"), "napoléon");});
test("napolitain -> napolitain", function() {deepEqual( Stem("napolitain"), "napolitain");});
test("nappe -> napp", function() {deepEqual( Stem("nappe"), "napp");});
test("narcotique -> narcot", function() {deepEqual( Stem("narcotique"), "narcot");});
test("narra -> narr", function() {deepEqual( Stem("narra"), "narr");});
test("narrant -> narr", function() {deepEqual( Stem("narrant"), "narr");});
test("narrateur -> narrateur", function() {deepEqual( Stem("narrateur"), "narrateur");});
test("narration -> narrat", function() {deepEqual( Stem("narration"), "narrat");});
test("narrer -> narr", function() {deepEqual( Stem("narrer"), "narr");});
test("nasillard -> nasillard", function() {deepEqual( Stem("nasillard"), "nasillard");});
test("nassik -> nassik", function() {deepEqual( Stem("nassik"), "nassik");});
test("natal -> natal", function() {deepEqual( Stem("natal"), "natal");});
test("natif -> natif", function() {deepEqual( Stem("natif"), "natif");});
test("nation -> nation", function() {deepEqual( Stem("nation"), "nation");});
test("national -> national", function() {deepEqual( Stem("national"), "national");});
test("nationale -> national", function() {deepEqual( Stem("nationale"), "national");});
test("nationales -> national", function() {deepEqual( Stem("nationales"), "national");});
test("nationalité -> national", function() {deepEqual( Stem("nationalité"), "national");});
test("nationalités -> national", function() {deepEqual( Stem("nationalités"), "national");});
test("nations -> nation", function() {deepEqual( Stem("nations"), "nation");});
test("nature -> natur", function() {deepEqual( Stem("nature"), "natur");});
test("naturel -> naturel", function() {deepEqual( Stem("naturel"), "naturel");});
test("naturelle -> naturel", function() {deepEqual( Stem("naturelle"), "naturel");});
test("naturellement -> naturel", function() {deepEqual( Stem("naturellement"), "naturel");});
test("naturelles -> naturel", function() {deepEqual( Stem("naturelles"), "naturel");});
test("naturels -> naturel", function() {deepEqual( Stem("naturels"), "naturel");});
test("naufrages -> naufrag", function() {deepEqual( Stem("naufrages"), "naufrag");});
test("nauséabondes -> nauséabond", function() {deepEqual( Stem("nauséabondes"), "nauséabond");});
test("nausées -> naus", function() {deepEqual( Stem("nausées"), "naus");});
test("nautique -> nautiqu", function() {deepEqual( Stem("nautique"), "nautiqu");});
test("nauvoo -> nauvoo", function() {deepEqual( Stem("nauvoo"), "nauvoo");});
test("navarre -> navarr", function() {deepEqual( Stem("navarre"), "navarr");});
test("navigateur -> navig", function() {deepEqual( Stem("navigateur"), "navig");});
test("navigateurs -> navig", function() {deepEqual( Stem("navigateurs"), "navig");});
test("navigation -> navig", function() {deepEqual( Stem("navigation"), "navig");});
test("navigua -> navigu", function() {deepEqual( Stem("navigua"), "navigu");});
test("naviguant -> navigu", function() {deepEqual( Stem("naviguant"), "navigu");});
test("naviguent -> naviguent", function() {deepEqual( Stem("naviguent"), "naviguent");});
test("navire -> navir", function() {deepEqual( Stem("navire"), "navir");});
test("navires -> navir", function() {deepEqual( Stem("navires"), "navir");});
test("navré -> navr", function() {deepEqual( Stem("navré"), "navr");});
test("navrée -> navr", function() {deepEqual( Stem("navrée"), "navr");});
test("nazaro -> nazaro", function() {deepEqual( Stem("nazaro"), "nazaro");});
test("ne -> ne", function() {deepEqual( Stem("ne"), "ne");});
test("né -> né", function() {deepEqual( Stem("né"), "né");});
test("néanmoins -> néanmoin", function() {deepEqual( Stem("néanmoins"), "néanmoin");});
test("néant -> né", function() {deepEqual( Stem("néant"), "né");});
test("nébieu -> nébieu", function() {deepEqual( Stem("nébieu"), "nébieu");});
test("nebraska -> nebrask", function() {deepEqual( Stem("nebraska"), "nebrask");});
test("nécessaire -> nécessair", function() {deepEqual( Stem("nécessaire"), "nécessair");});
test("nécessairement -> nécessair", function() {deepEqual( Stem("nécessairement"), "nécessair");});
test("nécessaires -> nécessair", function() {deepEqual( Stem("nécessaires"), "nécessair");});
test("nécessitant -> nécessit", function() {deepEqual( Stem("nécessitant"), "nécessit");});
test("nécessité -> nécess", function() {deepEqual( Stem("nécessité"), "nécess");});
test("née -> né", function() {deepEqual( Stem("née"), "né");});
test("nées -> né", function() {deepEqual( Stem("nées"), "né");});
test("nef -> nef", function() {deepEqual( Stem("nef"), "nef");});
test("nefs -> nef", function() {deepEqual( Stem("nefs"), "nef");});
test("négatif -> négat", function() {deepEqual( Stem("négatif"), "négat");});
test("néglige -> néglig", function() {deepEqual( Stem("néglige"), "néglig");});
test("négligé -> néglig", function() {deepEqual( Stem("négligé"), "néglig");});
test("négligeait -> néglig", function() {deepEqual( Stem("négligeait"), "néglig");});
test("négligemment -> négligent", function() {deepEqual( Stem("négligemment"), "négligent");});
test("négligence -> négligent", function() {deepEqual( Stem("négligence"), "négligent");});
test("négligents -> négligent", function() {deepEqual( Stem("négligents"), "négligent");});
test("négliger -> néglig", function() {deepEqual( Stem("négliger"), "néglig");});
test("négligerait -> néglig", function() {deepEqual( Stem("négligerait"), "néglig");});
test("négociant -> négoci", function() {deepEqual( Stem("négociant"), "négoci");});
test("négociants -> négoci", function() {deepEqual( Stem("négociants"), "négoci");});
test("négociateur -> négoci", function() {deepEqual( Stem("négociateur"), "négoci");});
test("négociation -> négoci", function() {deepEqual( Stem("négociation"), "négoci");});
test("négociations -> négoci", function() {deepEqual( Stem("négociations"), "négoci");});
test("nègre -> negr", function() {deepEqual( Stem("nègre"), "negr");});
test("nègres -> negr", function() {deepEqual( Stem("nègres"), "negr");});
test("neige -> neig", function() {deepEqual( Stem("neige"), "neig");});
test("neigeait -> neig", function() {deepEqual( Stem("neigeait"), "neig");});
test("neiges -> neig", function() {deepEqual( Stem("neiges"), "neig");});
test("neptune -> neptun", function() {deepEqual( Stem("neptune"), "neptun");});
test("nerfs -> nerf", function() {deepEqual( Stem("nerfs"), "nerf");});
test("nerval -> nerval", function() {deepEqual( Stem("nerval"), "nerval");});
test("nerveuse -> nerveux", function() {deepEqual( Stem("nerveuse"), "nerveux");});
test("nerveux -> nerveux", function() {deepEqual( Stem("nerveux"), "nerveux");});
test("nés -> né", function() {deepEqual( Stem("nés"), "né");});
test("net -> net", function() {deepEqual( Stem("net"), "net");});
test("nets -> net", function() {deepEqual( Stem("nets"), "net");});
test("nette -> net", function() {deepEqual( Stem("nette"), "net");});
test("nettement -> net", function() {deepEqual( Stem("nettement"), "net");});
test("nettes -> net", function() {deepEqual( Stem("nettes"), "net");});
test("netteté -> nettet", function() {deepEqual( Stem("netteté"), "nettet");});
test("nettoya -> nettoi", function() {deepEqual( Stem("nettoya"), "nettoi");});
test("nettoyer -> nettoi", function() {deepEqual( Stem("nettoyer"), "nettoi");});
test("neuf -> neuf", function() {deepEqual( Stem("neuf"), "neuf");});
test("neufs -> neuf", function() {deepEqual( Stem("neufs"), "neuf");});
test("neutralité -> neutral", function() {deepEqual( Stem("neutralité"), "neutral");});
test("neutre -> neutr", function() {deepEqual( Stem("neutre"), "neutr");});
test("neuvaine -> neuvain", function() {deepEqual( Stem("neuvaine"), "neuvain");});
test("neuve -> neuv", function() {deepEqual( Stem("neuve"), "neuv");});
test("neuves -> neuv", function() {deepEqual( Stem("neuves"), "neuv");});
test("neuvième -> neuviem", function() {deepEqual( Stem("neuvième"), "neuviem");});
test("nevada -> nevad", function() {deepEqual( Stem("nevada"), "nevad");});
test("never -> nev", function() {deepEqual( Stem("never"), "nev");});
test("neveu -> neveu", function() {deepEqual( Stem("neveu"), "neveu");});
test("neveux -> neveux", function() {deepEqual( Stem("neveux"), "neveux");});
test("new -> new", function() {deepEqual( Stem("new"), "new");});
test("news -> new", function() {deepEqual( Stem("news"), "new");});
test("ney -> ney", function() {deepEqual( Stem("ney"), "ney");});
test("nez -> nez", function() {deepEqual( Stem("nez"), "nez");});
test("ni -> ni", function() {deepEqual( Stem("ni"), "ni");});
test("niais -> ni", function() {deepEqual( Stem("niais"), "ni");});
test("niaiserie -> niaiser", function() {deepEqual( Stem("niaiserie"), "niaiser");});
test("niaiseries -> niaiser", function() {deepEqual( Stem("niaiseries"), "niaiser");});
test("niaises -> niais", function() {deepEqual( Stem("niaises"), "niais");});
test("nice -> nic", function() {deepEqual( Stem("nice"), "nic");});
test("niche -> nich", function() {deepEqual( Stem("niche"), "nich");});
test("nicolas -> nicol", function() {deepEqual( Stem("nicolas"), "nicol");});
test("nids -> nid", function() {deepEqual( Stem("nids"), "nid");});
test("nie -> ni", function() {deepEqual( Stem("nie"), "ni");});
test("nié -> ni", function() {deepEqual( Stem("nié"), "ni");});
test("nièce -> niec", function() {deepEqual( Stem("nièce"), "niec");});
test("nièces -> niec", function() {deepEqual( Stem("nièces"), "niec");});
test("nier -> ni", function() {deepEqual( Stem("nier"), "ni");});
test("nierais -> ni", function() {deepEqual( Stem("nierais"), "ni");});
test("nierons -> ni", function() {deepEqual( Stem("nierons"), "ni");});
test("nigaud -> nigaud", function() {deepEqual( Stem("nigaud"), "nigaud");});
test("nigauderie -> nigauder", function() {deepEqual( Stem("nigauderie"), "nigauder");});
test("nigauds -> nigaud", function() {deepEqual( Stem("nigauds"), "nigaud");});
test("night -> night", function() {deepEqual( Stem("night"), "night");});
test("nil -> nil", function() {deepEqual( Stem("nil"), "nil");});
test("niveau -> niveau", function() {deepEqual( Stem("niveau"), "niveau");});
test("nivelées -> nivel", function() {deepEqual( Stem("nivelées"), "nivel");});
test("nizam -> nizam", function() {deepEqual( Stem("nizam"), "nizam");});
test("no -> no", function() {deepEqual( Stem("no"), "no");});
test("nobiliaires -> nobiliair", function() {deepEqual( Stem("nobiliaires"), "nobiliair");});
test("noble -> nobl", function() {deepEqual( Stem("noble"), "nobl");});
test("nobles -> nobl", function() {deepEqual( Stem("nobles"), "nobl");});
test("noblesse -> nobless", function() {deepEqual( Stem("noblesse"), "nobless");});
test("noce -> noc", function() {deepEqual( Stem("noce"), "noc");});
test("noces -> noc", function() {deepEqual( Stem("noces"), "noc");});
test("nocturne -> nocturn", function() {deepEqual( Stem("nocturne"), "nocturn");});
test("nocturnes -> nocturn", function() {deepEqual( Stem("nocturnes"), "nocturn");});
test("noeud -> noeud", function() {deepEqual( Stem("noeud"), "noeud");});
test("noeuds -> noeud", function() {deepEqual( Stem("noeuds"), "noeud");});
test("noie -> noi", function() {deepEqual( Stem("noie"), "noi");});
test("noir -> noir", function() {deepEqual( Stem("noir"), "noir");});
test("noirci -> noirc", function() {deepEqual( Stem("noirci"), "noirc");});
test("noircie -> noirc", function() {deepEqual( Stem("noircie"), "noirc");});
test("noircies -> noirc", function() {deepEqual( Stem("noircies"), "noirc");});
test("noircis -> noirc", function() {deepEqual( Stem("noircis"), "noirc");});
test("noire -> noir", function() {deepEqual( Stem("noire"), "noir");});
test("noires -> noir", function() {deepEqual( Stem("noires"), "noir");});
test("noiroud -> noiroud", function() {deepEqual( Stem("noiroud"), "noiroud");});
test("noirs -> noir", function() {deepEqual( Stem("noirs"), "noir");});
test("noix -> noix", function() {deepEqual( Stem("noix"), "noix");});
test("nom -> nom", function() {deepEqual( Stem("nom"), "nom");});
test("nombre -> nombr", function() {deepEqual( Stem("nombre"), "nombr");});
test("nombreuse -> nombreux", function() {deepEqual( Stem("nombreuse"), "nombreux");});
test("nombreuses -> nombreux", function() {deepEqual( Stem("nombreuses"), "nombreux");});
test("nombreux -> nombreux", function() {deepEqual( Stem("nombreux"), "nombreux");});
test("nominal -> nominal", function() {deepEqual( Stem("nominal"), "nominal");});
test("nominale -> nominal", function() {deepEqual( Stem("nominale"), "nominal");});
test("nomination -> nomin", function() {deepEqual( Stem("nomination"), "nomin");});
test("nommait -> nomm", function() {deepEqual( Stem("nommait"), "nomm");});
test("nommant -> nomm", function() {deepEqual( Stem("nommant"), "nomm");});
test("nomme -> nomm", function() {deepEqual( Stem("nomme"), "nomm");});
test("nommé -> nomm", function() {deepEqual( Stem("nommé"), "nomm");});
test("nommée -> nomm", function() {deepEqual( Stem("nommée"), "nomm");});
test("nommer -> nomm", function() {deepEqual( Stem("nommer"), "nomm");});
test("nommés -> nomm", function() {deepEqual( Stem("nommés"), "nomm");});
test("nommez -> nomm", function() {deepEqual( Stem("nommez"), "nomm");});
test("noms -> nom", function() {deepEqual( Stem("noms"), "nom");});
test("non -> non", function() {deepEqual( Stem("non"), "non");});
test("nonante -> non", function() {deepEqual( Stem("nonante"), "non");});
test("nonchalance -> nonchal", function() {deepEqual( Stem("nonchalance"), "nonchal");});
test("nonchalant -> nonchal", function() {deepEqual( Stem("nonchalant"), "nonchal");});
test("norbert -> norbert", function() {deepEqual( Stem("norbert"), "norbert");});
test("nord -> nord", function() {deepEqual( Stem("nord"), "nord");});
test("norimons -> norimon", function() {deepEqual( Stem("norimons"), "norimon");});
test("normale -> normal", function() {deepEqual( Stem("normale"), "normal");});
test("normandie -> normand", function() {deepEqual( Stem("normandie"), "normand");});
test("normands -> normand", function() {deepEqual( Stem("normands"), "normand");});
test("north -> north", function() {deepEqual( Stem("north"), "north");});
test("nos -> nos", function() {deepEqual( Stem("nos"), "nos");});
test("not -> not", function() {deepEqual( Stem("not"), "not");});
test("notable -> notabl", function() {deepEqual( Stem("notable"), "notabl");});
test("notablement -> notabl", function() {deepEqual( Stem("notablement"), "notabl");});
test("notables -> notabl", function() {deepEqual( Stem("notables"), "notabl");});
test("notaire -> notair", function() {deepEqual( Stem("notaire"), "notair");});
test("notaires -> notair", function() {deepEqual( Stem("notaires"), "notair");});
test("note -> not", function() {deepEqual( Stem("note"), "not");});
test("noté -> not", function() {deepEqual( Stem("noté"), "not");});
test("noter -> not", function() {deepEqual( Stem("noter"), "not");});
test("notes -> not", function() {deepEqual( Stem("notes"), "not");});
test("notez -> not", function() {deepEqual( Stem("notez"), "not");});
test("nothing -> nothing", function() {deepEqual( Stem("nothing"), "nothing");});
test("notice -> notic", function() {deepEqual( Stem("notice"), "notic");});
test("notices -> notic", function() {deepEqual( Stem("notices"), "notic");});
test("notions -> notion", function() {deepEqual( Stem("notions"), "notion");});
test("notoire -> notoir", function() {deepEqual( Stem("notoire"), "notoir");});
test("notoirement -> notoir", function() {deepEqual( Stem("notoirement"), "notoir");});
test("notre -> notr", function() {deepEqual( Stem("notre"), "notr");});
test("nôtre -> nôtr", function() {deepEqual( Stem("nôtre"), "nôtr");});
test("nôtres -> nôtr", function() {deepEqual( Stem("nôtres"), "nôtr");});
test("nouant -> nou", function() {deepEqual( Stem("nouant"), "nou");});
test("nouée -> nou", function() {deepEqual( Stem("nouée"), "nou");});
test("nourri -> nourr", function() {deepEqual( Stem("nourri"), "nourr");});
test("nourrice -> nourric", function() {deepEqual( Stem("nourrice"), "nourric");});
test("nourrie -> nourr", function() {deepEqual( Stem("nourrie"), "nourr");});
test("nourrir -> nourr", function() {deepEqual( Stem("nourrir"), "nourr");});
test("nourrirait -> nourr", function() {deepEqual( Stem("nourrirait"), "nourr");});
test("nourris -> nourr", function() {deepEqual( Stem("nourris"), "nourr");});
test("nourrissait -> nourr", function() {deepEqual( Stem("nourrissait"), "nourr");});
test("nourrissant -> nourr", function() {deepEqual( Stem("nourrissant"), "nourr");});
test("nourrisse -> nourr", function() {deepEqual( Stem("nourrisse"), "nourr");});
test("nourrissent -> nourr", function() {deepEqual( Stem("nourrissent"), "nourr");});
test("nourrit -> nourr", function() {deepEqual( Stem("nourrit"), "nourr");});
test("nourriture -> nourritur", function() {deepEqual( Stem("nourriture"), "nourritur");});
test("nous -> nous", function() {deepEqual( Stem("nous"), "nous");});
test("nouveau -> nouveau", function() {deepEqual( Stem("nouveau"), "nouveau");});
test("nouveauté -> nouveaut", function() {deepEqual( Stem("nouveauté"), "nouveaut");});
test("nouveautés -> nouveaut", function() {deepEqual( Stem("nouveautés"), "nouveaut");});
test("nouveaux -> nouveau", function() {deepEqual( Stem("nouveaux"), "nouveau");});
test("nouvel -> nouvel", function() {deepEqual( Stem("nouvel"), "nouvel");});
test("nouvelle -> nouvel", function() {deepEqual( Stem("nouvelle"), "nouvel");});
test("nouvellement -> nouvel", function() {deepEqual( Stem("nouvellement"), "nouvel");});
test("nouvelles -> nouvel", function() {deepEqual( Stem("nouvelles"), "nouvel");});
test("novare -> novar", function() {deepEqual( Stem("novare"), "novar");});
test("novateurs -> novateur", function() {deepEqual( Stem("novateurs"), "novateur");});
test("novembre -> novembr", function() {deepEqual( Stem("novembre"), "novembr");});
test("novi -> nov", function() {deepEqual( Stem("novi"), "nov");});
test("novice -> novic", function() {deepEqual( Stem("novice"), "novic");});
test("now -> now", function() {deepEqual( Stem("now"), "now");});
test("noyée -> noi", function() {deepEqual( Stem("noyée"), "noi");});
test("noyer -> noi", function() {deepEqual( Stem("noyer"), "noi");});
test("noyers -> noyer", function() {deepEqual( Stem("noyers"), "noyer");});
test("noyés -> noi", function() {deepEqual( Stem("noyés"), "noi");});
test("nu -> nu", function() {deepEqual( Stem("nu"), "nu");});
test("nuage -> nuag", function() {deepEqual( Stem("nuage"), "nuag");});
test("nuages -> nuag", function() {deepEqual( Stem("nuages"), "nuag");});
test("nuance -> nuanc", function() {deepEqual( Stem("nuance"), "nuanc");});
test("nuances -> nuanc", function() {deepEqual( Stem("nuances"), "nuanc");});
test("nudité -> nudit", function() {deepEqual( Stem("nudité"), "nudit");});
test("nue -> nu", function() {deepEqual( Stem("nue"), "nu");});
test("nuées -> nu", function() {deepEqual( Stem("nuées"), "nu");});
test("nues -> nu", function() {deepEqual( Stem("nues"), "nu");});
test("nui -> nui", function() {deepEqual( Stem("nui"), "nui");});
test("nuira -> nuir", function() {deepEqual( Stem("nuira"), "nuir");});
test("nuiraient -> nuir", function() {deepEqual( Stem("nuiraient"), "nuir");});
test("nuirait -> nuir", function() {deepEqual( Stem("nuirait"), "nuir");});
test("nuire -> nuir", function() {deepEqual( Stem("nuire"), "nuir");});
test("nuisait -> nuis", function() {deepEqual( Stem("nuisait"), "nuis");});
test("nuisant -> nuis", function() {deepEqual( Stem("nuisant"), "nuis");});
test("nuisible -> nuisibl", function() {deepEqual( Stem("nuisible"), "nuisibl");});
test("nuisibles -> nuisibl", function() {deepEqual( Stem("nuisibles"), "nuisibl");});
test("nuit -> nuit", function() {deepEqual( Stem("nuit"), "nuit");});
test("nuits -> nuit", function() {deepEqual( Stem("nuits"), "nuit");});
test("nul -> nul", function() {deepEqual( Stem("nul"), "nul");});
test("nulle -> null", function() {deepEqual( Stem("nulle"), "null");});
test("nullement -> null", function() {deepEqual( Stem("nullement"), "null");});
test("nullité -> nullit", function() {deepEqual( Stem("nullité"), "nullit");});
test("nuls -> nul", function() {deepEqual( Stem("nuls"), "nul");});
test("numéro -> numéro", function() {deepEqual( Stem("numéro"), "numéro");});
test("numéros -> numéros", function() {deepEqual( Stem("numéros"), "numéros");});
test("numérotées -> numérot", function() {deepEqual( Stem("numérotées"), "numérot");});
test("nunc -> nunc", function() {deepEqual( Stem("nunc"), "nunc");});
test("nuremberg -> nuremberg", function() {deepEqual( Stem("nuremberg"), "nuremberg");});
test("nus -> nus", function() {deepEqual( Stem("nus"), "nus");});
test("o -> o", function() {deepEqual( Stem("o"), "o");});
test("ô -> ô", function() {deepEqual( Stem("ô"), "ô");});
test("oakland -> oakland", function() {deepEqual( Stem("oakland"), "oakland");});
test("oaths -> oath", function() {deepEqual( Stem("oaths"), "oath");});
test("obadiah -> obadiah", function() {deepEqual( Stem("obadiah"), "obadiah");});
test("obéi -> obéi", function() {deepEqual( Stem("obéi"), "obéi");});
test("obéie -> obei", function() {deepEqual( Stem("obéie"), "obei");});
test("obéir -> obéir", function() {deepEqual( Stem("obéir"), "obéir");});
test("obéira -> obéir", function() {deepEqual( Stem("obéira"), "obéir");});
test("obéirai -> obéir", function() {deepEqual( Stem("obéirai"), "obéir");});
test("obéirais -> obéir", function() {deepEqual( Stem("obéirais"), "obéir");});
test("obéirez -> obéir", function() {deepEqual( Stem("obéirez"), "obéir");});
test("obéis -> obéis", function() {deepEqual( Stem("obéis"), "obéis");});
test("obéissaient -> obéiss", function() {deepEqual( Stem("obéissaient"), "obéiss");});
test("obéissait -> obéiss", function() {deepEqual( Stem("obéissait"), "obéiss");});
test("obéissance -> obéiss", function() {deepEqual( Stem("obéissance"), "obéiss");});
test("obéissant -> obéiss", function() {deepEqual( Stem("obéissant"), "obéiss");});
test("obéissants -> obéiss", function() {deepEqual( Stem("obéissants"), "obéiss");});
test("obéisse -> obéiss", function() {deepEqual( Stem("obéisse"), "obéiss");});
test("obéissez -> obéiss", function() {deepEqual( Stem("obéissez"), "obéiss");});
test("obéit -> obéit", function() {deepEqual( Stem("obéit"), "obéit");});
test("objecter -> object", function() {deepEqual( Stem("objecter"), "object");});
test("objection -> object", function() {deepEqual( Stem("objection"), "object");});
test("objections -> object", function() {deepEqual( Stem("objections"), "object");});
test("objet -> objet", function() {deepEqual( Stem("objet"), "objet");});
test("objets -> objet", function() {deepEqual( Stem("objets"), "objet");});
test("obligation -> oblig", function() {deepEqual( Stem("obligation"), "oblig");});
test("obligations -> oblig", function() {deepEqual( Stem("obligations"), "oblig");});
test("obligatoire -> obligatoir", function() {deepEqual( Stem("obligatoire"), "obligatoir");});
test("oblige -> oblig", function() {deepEqual( Stem("oblige"), "oblig");});
test("obligé -> oblig", function() {deepEqual( Stem("obligé"), "oblig");});
test("obligea -> oblig", function() {deepEqual( Stem("obligea"), "oblig");});
test("obligeait -> oblig", function() {deepEqual( Stem("obligeait"), "oblig");});
test("obligeamment -> oblig", function() {deepEqual( Stem("obligeamment"), "oblig");});
test("obligeances -> oblige", function() {deepEqual( Stem("obligeances"), "oblige");});
test("obligeant -> oblig", function() {deepEqual( Stem("obligeant"), "oblig");});
test("obligeante -> oblig", function() {deepEqual( Stem("obligeante"), "oblig");});
test("obligeantes -> oblig", function() {deepEqual( Stem("obligeantes"), "oblig");});
test("obligeants -> oblig", function() {deepEqual( Stem("obligeants"), "oblig");});
test("obligeât -> oblig", function() {deepEqual( Stem("obligeât"), "oblig");});
test("obligée -> oblig", function() {deepEqual( Stem("obligée"), "oblig");});
test("obligent -> obligent", function() {deepEqual( Stem("obligent"), "obligent");});
test("obliger -> oblig", function() {deepEqual( Stem("obliger"), "oblig");});
test("obligera -> oblig", function() {deepEqual( Stem("obligera"), "oblig");});
test("obligeraient -> oblig", function() {deepEqual( Stem("obligeraient"), "oblig");});
test("obligerez -> oblig", function() {deepEqual( Stem("obligerez"), "oblig");});
test("obligés -> oblig", function() {deepEqual( Stem("obligés"), "oblig");});
test("obligez -> oblig", function() {deepEqual( Stem("obligez"), "oblig");});
test("obliqua -> obliqu", function() {deepEqual( Stem("obliqua"), "obliqu");});
test("obole -> obol", function() {deepEqual( Stem("obole"), "obol");});
test("obscur -> obscur", function() {deepEqual( Stem("obscur"), "obscur");});
test("obscurcit -> obscurc", function() {deepEqual( Stem("obscurcit"), "obscurc");});
test("obscure -> obscur", function() {deepEqual( Stem("obscure"), "obscur");});
test("obscurément -> obscur", function() {deepEqual( Stem("obscurément"), "obscur");});
test("obscures -> obscur", function() {deepEqual( Stem("obscures"), "obscur");});
test("obscurité -> obscur", function() {deepEqual( Stem("obscurité"), "obscur");});
test("obséda -> obsed", function() {deepEqual( Stem("obséda"), "obsed");});
test("obsédé -> obsed", function() {deepEqual( Stem("obsédé"), "obsed");});
test("observa -> observ", function() {deepEqual( Stem("observa"), "observ");});
test("observaient -> observ", function() {deepEqual( Stem("observaient"), "observ");});
test("observait -> observ", function() {deepEqual( Stem("observait"), "observ");});
test("observance -> observ", function() {deepEqual( Stem("observance"), "observ");});
test("observant -> observ", function() {deepEqual( Stem("observant"), "observ");});
test("observateur -> observ", function() {deepEqual( Stem("observateur"), "observ");});
test("observateurs -> observ", function() {deepEqual( Stem("observateurs"), "observ");});
test("observation -> observ", function() {deepEqual( Stem("observation"), "observ");});
test("observations -> observ", function() {deepEqual( Stem("observations"), "observ");});
test("observatoire -> observatoir", function() {deepEqual( Stem("observatoire"), "observatoir");});
test("observe -> observ", function() {deepEqual( Stem("observe"), "observ");});
test("observé -> observ", function() {deepEqual( Stem("observé"), "observ");});
test("observer -> observ", function() {deepEqual( Stem("observer"), "observ");});
test("observèrent -> observ", function() {deepEqual( Stem("observèrent"), "observ");});
test("observés -> observ", function() {deepEqual( Stem("observés"), "observ");});
test("obstacle -> obstacl", function() {deepEqual( Stem("obstacle"), "obstacl");});
test("obstacles -> obstacl", function() {deepEqual( Stem("obstacles"), "obstacl");});
test("obstina -> obstin", function() {deepEqual( Stem("obstina"), "obstin");});
test("obstinait -> obstin", function() {deepEqual( Stem("obstinait"), "obstin");});
test("obstinant -> obstin", function() {deepEqual( Stem("obstinant"), "obstin");});
test("obstination -> obstin", function() {deepEqual( Stem("obstination"), "obstin");});
test("obstiné -> obstin", function() {deepEqual( Stem("obstiné"), "obstin");});
test("obstinément -> obstin", function() {deepEqual( Stem("obstinément"), "obstin");});
test("obstiner -> obstin", function() {deepEqual( Stem("obstiner"), "obstin");});
test("obstruaient -> obstru", function() {deepEqual( Stem("obstruaient"), "obstru");});
test("obtenait -> obten", function() {deepEqual( Stem("obtenait"), "obten");});
test("obtenez -> obten", function() {deepEqual( Stem("obtenez"), "obten");});
test("obtenir -> obten", function() {deepEqual( Stem("obtenir"), "obten");});
test("obtenu -> obtenu", function() {deepEqual( Stem("obtenu"), "obtenu");});
test("obtenue -> obtenu", function() {deepEqual( Stem("obtenue"), "obtenu");});
test("obtenus -> obtenus", function() {deepEqual( Stem("obtenus"), "obtenus");});
test("obtiendrai -> obtiendr", function() {deepEqual( Stem("obtiendrai"), "obtiendr");});
test("obtiendrais -> obtiendr", function() {deepEqual( Stem("obtiendrais"), "obtiendr");});
test("obtiendront -> obtiendront", function() {deepEqual( Stem("obtiendront"), "obtiendront");});
test("obtienne -> obtien", function() {deepEqual( Stem("obtienne"), "obtien");});
test("obtiennent -> obtiennent", function() {deepEqual( Stem("obtiennent"), "obtiennent");});
test("obtiens -> obtien", function() {deepEqual( Stem("obtiens"), "obtien");});
test("obtient -> obtient", function() {deepEqual( Stem("obtient"), "obtient");});
test("obtinrent -> obtinrent", function() {deepEqual( Stem("obtinrent"), "obtinrent");});
test("obtint -> obtint", function() {deepEqual( Stem("obtint"), "obtint");});
test("occasion -> occas", function() {deepEqual( Stem("occasion"), "occas");});
test("occasionner -> occasion", function() {deepEqual( Stem("occasionner"), "occasion");});
test("occasionnés -> occasion", function() {deepEqual( Stem("occasionnés"), "occasion");});
test("occasions -> occas", function() {deepEqual( Stem("occasions"), "occas");});
test("occidentales -> occidental", function() {deepEqual( Stem("occidentales"), "occidental");});
test("occulte -> occult", function() {deepEqual( Stem("occulte"), "occult");});
test("occultes -> occult", function() {deepEqual( Stem("occultes"), "occult");});
test("occupa -> occup", function() {deepEqual( Stem("occupa"), "occup");});
test("occupaient -> occup", function() {deepEqual( Stem("occupaient"), "occup");});
test("occupait -> occup", function() {deepEqual( Stem("occupait"), "occup");});
test("occupant -> occup", function() {deepEqual( Stem("occupant"), "occup");});
test("occupante -> occup", function() {deepEqual( Stem("occupante"), "occup");});
test("occupât -> occup", function() {deepEqual( Stem("occupât"), "occup");});
test("occupation -> occup", function() {deepEqual( Stem("occupation"), "occup");});
test("occupations -> occup", function() {deepEqual( Stem("occupations"), "occup");});
test("occupe -> occup", function() {deepEqual( Stem("occupe"), "occup");});
test("occupé -> occup", function() {deepEqual( Stem("occupé"), "occup");});
test("occupée -> occup", function() {deepEqual( Stem("occupée"), "occup");});
test("occupées -> occup", function() {deepEqual( Stem("occupées"), "occup");});
test("occupent -> occupent", function() {deepEqual( Stem("occupent"), "occupent");});
test("occuper -> occup", function() {deepEqual( Stem("occuper"), "occup");});
test("occupera -> occup", function() {deepEqual( Stem("occupera"), "occup");});
test("occuperai -> occup", function() {deepEqual( Stem("occuperai"), "occup");});
test("occupèrent -> occup", function() {deepEqual( Stem("occupèrent"), "occup");});
test("occupés -> occup", function() {deepEqual( Stem("occupés"), "occup");});
test("occupiez -> occup", function() {deepEqual( Stem("occupiez"), "occup");});
test("occupons -> occupon", function() {deepEqual( Stem("occupons"), "occupon");});
test("occurrence -> occurrent", function() {deepEqual( Stem("occurrence"), "occurrent");});
test("occurrences -> occurrent", function() {deepEqual( Stem("occurrences"), "occurrent");});
test("ocean -> ocean", function() {deepEqual( Stem("ocean"), "ocean");});
test("océan -> océan", function() {deepEqual( Stem("océan"), "océan");});
test("océans -> océan", function() {deepEqual( Stem("océans"), "océan");});
test("ocre -> ocre", function() {deepEqual( Stem("ocre"), "ocre");});
test("octave -> octav", function() {deepEqual( Stem("octave"), "octav");});
test("octobre -> octobr", function() {deepEqual( Stem("octobre"), "octobr");});
test("octroi -> octroi", function() {deepEqual( Stem("octroi"), "octroi");});
test("odalisque -> odalisqu", function() {deepEqual( Stem("odalisque"), "odalisqu");});
test("ode -> ode", function() {deepEqual( Stem("ode"), "ode");});
test("odes -> ode", function() {deepEqual( Stem("odes"), "ode");});
test("odeur -> odeur", function() {deepEqual( Stem("odeur"), "odeur");});
test("odieuse -> odieux", function() {deepEqual( Stem("odieuse"), "odieux");});
test("odieux -> odieux", function() {deepEqual( Stem("odieux"), "odieux");});
test("odorante -> odor", function() {deepEqual( Stem("odorante"), "odor");});
test("odorat -> odorat", function() {deepEqual( Stem("odorat"), "odorat");});
test("oeil -> oeil", function() {deepEqual( Stem("oeil"), "oeil");});
test("oeuf -> oeuf", function() {deepEqual( Stem("oeuf"), "oeuf");});
test("oeufs -> oeuf", function() {deepEqual( Stem("oeufs"), "oeuf");});
test("oeuvre -> oeuvr", function() {deepEqual( Stem("oeuvre"), "oeuvr");});
test("oeuvres -> oeuvr", function() {deepEqual( Stem("oeuvres"), "oeuvr");});
test("of -> of", function() {deepEqual( Stem("of"), "of");});
test("offensa -> offens", function() {deepEqual( Stem("offensa"), "offens");});
test("offensait -> offens", function() {deepEqual( Stem("offensait"), "offens");});
test("offensant -> offens", function() {deepEqual( Stem("offensant"), "offens");});
test("offensante -> offens", function() {deepEqual( Stem("offensante"), "offens");});
test("offensantes -> offens", function() {deepEqual( Stem("offensantes"), "offens");});
test("offensât -> offens", function() {deepEqual( Stem("offensât"), "offens");});
test("offense -> offens", function() {deepEqual( Stem("offense"), "offens");});
test("offensé -> offens", function() {deepEqual( Stem("offensé"), "offens");});
test("offensée -> offens", function() {deepEqual( Stem("offensée"), "offens");});
test("offenser -> offens", function() {deepEqual( Stem("offenser"), "offens");});
test("offenserait -> offens", function() {deepEqual( Stem("offenserait"), "offens");});
test("offenses -> offens", function() {deepEqual( Stem("offenses"), "offens");});
test("offensés -> offens", function() {deepEqual( Stem("offensés"), "offens");});
test("offensive -> offens", function() {deepEqual( Stem("offensive"), "offens");});
test("offert -> offert", function() {deepEqual( Stem("offert"), "offert");});
test("offerte -> offert", function() {deepEqual( Stem("offerte"), "offert");});
test("offerts -> offert", function() {deepEqual( Stem("offerts"), "offert");});
test("office -> offic", function() {deepEqual( Stem("office"), "offic");});
test("offices -> offic", function() {deepEqual( Stem("offices"), "offic");});
test("officiant -> offici", function() {deepEqual( Stem("officiant"), "offici");});
test("officiel -> officiel", function() {deepEqual( Stem("officiel"), "officiel");});
test("officielle -> officiel", function() {deepEqual( Stem("officielle"), "officiel");});
test("officiellement -> officiel", function() {deepEqual( Stem("officiellement"), "officiel");});
test("officielles -> officiel", function() {deepEqual( Stem("officielles"), "officiel");});
test("officiels -> officiel", function() {deepEqual( Stem("officiels"), "officiel");});
test("officier -> offici", function() {deepEqual( Stem("officier"), "offici");});
test("officiers -> offici", function() {deepEqual( Stem("officiers"), "offici");});
test("offraient -> offraient", function() {deepEqual( Stem("offraient"), "offraient");});
test("offrais -> offrais", function() {deepEqual( Stem("offrais"), "offrais");});
test("offrait -> offrait", function() {deepEqual( Stem("offrait"), "offrait");});
test("offrande -> offrand", function() {deepEqual( Stem("offrande"), "offrand");});
test("offrandes -> offrand", function() {deepEqual( Stem("offrandes"), "offrand");});
test("offrant -> offrant", function() {deepEqual( Stem("offrant"), "offrant");});
test("offre -> offre", function() {deepEqual( Stem("offre"), "offre");});
test("offrent -> offrent", function() {deepEqual( Stem("offrent"), "offrent");});
test("offres -> offre", function() {deepEqual( Stem("offres"), "offre");});
test("offrir -> offrir", function() {deepEqual( Stem("offrir"), "offrir");});
test("offrira -> offrir", function() {deepEqual( Stem("offrira"), "offrir");});
test("offrirai -> offrir", function() {deepEqual( Stem("offrirai"), "offrir");});
test("offriraient -> offrir", function() {deepEqual( Stem("offriraient"), "offrir");});
test("offrirait -> offrir", function() {deepEqual( Stem("offrirait"), "offrir");});
test("offris -> offris", function() {deepEqual( Stem("offris"), "offris");});
test("offrit -> offrit", function() {deepEqual( Stem("offrit"), "offrit");});
test("offusqué -> offusqu", function() {deepEqual( Stem("offusqué"), "offusqu");});
test("ogden -> ogden", function() {deepEqual( Stem("ogden"), "ogden");});
test("ogive -> ogiv", function() {deepEqual( Stem("ogive"), "ogiv");});
test("ogre -> ogre", function() {deepEqual( Stem("ogre"), "ogre");});
test("oh -> oh", function() {deepEqual( Stem("oh"), "oh");});
test("ohio -> ohio", function() {deepEqual( Stem("ohio"), "ohio");});
test("oies -> oie", function() {deepEqual( Stem("oies"), "oie");});
test("oiseau -> oiseau", function() {deepEqual( Stem("oiseau"), "oiseau");});
test("oiseaux -> oiseau", function() {deepEqual( Stem("oiseaux"), "oiseau");});
test("oisifs -> oisif", function() {deepEqual( Stem("oisifs"), "oisif");});
test("oisive -> oisiv", function() {deepEqual( Stem("oisive"), "oisiv");});
test("olivier -> olivi", function() {deepEqual( Stem("olivier"), "olivi");});
test("olo -> olo", function() {deepEqual( Stem("olo"), "olo");});
test("omaha -> omah", function() {deepEqual( Stem("omaha"), "omah");});
test("ombragée -> ombrag", function() {deepEqual( Stem("ombragée"), "ombrag");});
test("ombrages -> ombrag", function() {deepEqual( Stem("ombrages"), "ombrag");});
test("ombre -> ombre", function() {deepEqual( Stem("ombre"), "ombre");});
test("ombres -> ombre", function() {deepEqual( Stem("ombres"), "ombre");});
test("ombreuses -> ombreux", function() {deepEqual( Stem("ombreuses"), "ombreux");});
test("omelette -> omelet", function() {deepEqual( Stem("omelette"), "omelet");});
test("omis -> omis", function() {deepEqual( Stem("omis"), "omis");});
test("omission -> omiss", function() {deepEqual( Stem("omission"), "omiss");});
test("omit -> omit", function() {deepEqual( Stem("omit"), "omit");});
test("omnia -> omni", function() {deepEqual( Stem("omnia"), "omni");});
test("omnibus -> omnibus", function() {deepEqual( Stem("omnibus"), "omnibus");});
test("on -> on", function() {deepEqual( Stem("on"), "on");});
test("onces -> once", function() {deepEqual( Stem("onces"), "once");});
test("oncle -> oncle", function() {deepEqual( Stem("oncle"), "oncle");});
test("oncles -> oncle", function() {deepEqual( Stem("oncles"), "oncle");});
test("onction -> onction", function() {deepEqual( Stem("onction"), "onction");});
test("ondulation -> ondul", function() {deepEqual( Stem("ondulation"), "ondul");});
test("ondulations -> ondul", function() {deepEqual( Stem("ondulations"), "ondul");});
test("ont -> ont", function() {deepEqual( Stem("ont"), "ont");});
test("onze -> onze", function() {deepEqual( Stem("onze"), "onze");});
test("opera -> oper", function() {deepEqual( Stem("opera"), "oper");});
test("opéra -> oper", function() {deepEqual( Stem("opéra"), "oper");});
test("opéraient -> oper", function() {deepEqual( Stem("opéraient"), "oper");});
test("opérait -> oper", function() {deepEqual( Stem("opérait"), "oper");});
test("opération -> oper", function() {deepEqual( Stem("opération"), "oper");});
test("opérations -> oper", function() {deepEqual( Stem("opérations"), "oper");});
test("opère -> oper", function() {deepEqual( Stem("opère"), "oper");});
test("opérée -> oper", function() {deepEqual( Stem("opérée"), "oper");});
test("opérer -> oper", function() {deepEqual( Stem("opérer"), "oper");});
test("opiner -> opin", function() {deepEqual( Stem("opiner"), "opin");});
test("opiniâtrement -> opiniâtr", function() {deepEqual( Stem("opiniâtrement"), "opiniâtr");});
test("opinion -> opinion", function() {deepEqual( Stem("opinion"), "opinion");});
test("opinions -> opin", function() {deepEqual( Stem("opinions"), "opin");});
test("opium -> opium", function() {deepEqual( Stem("opium"), "opium");});
test("opportun -> opportun", function() {deepEqual( Stem("opportun"), "opportun");});
test("opportune -> opportun", function() {deepEqual( Stem("opportune"), "opportun");});
test("opportunité -> opportun", function() {deepEqual( Stem("opportunité"), "opportun");});
test("opposaient -> oppos", function() {deepEqual( Stem("opposaient"), "oppos");});
test("opposant -> oppos", function() {deepEqual( Stem("opposant"), "oppos");});
test("oppose -> oppos", function() {deepEqual( Stem("oppose"), "oppos");});
test("opposé -> oppos", function() {deepEqual( Stem("opposé"), "oppos");});
test("opposée -> oppos", function() {deepEqual( Stem("opposée"), "oppos");});
test("opposées -> oppos", function() {deepEqual( Stem("opposées"), "oppos");});
test("opposent -> opposent", function() {deepEqual( Stem("opposent"), "opposent");});
test("opposer -> oppos", function() {deepEqual( Stem("opposer"), "oppos");});
test("opposerai -> oppos", function() {deepEqual( Stem("opposerai"), "oppos");});
test("opposés -> oppos", function() {deepEqual( Stem("opposés"), "oppos");});
test("opposition -> opposit", function() {deepEqual( Stem("opposition"), "opposit");});
test("opprimait -> opprim", function() {deepEqual( Stem("opprimait"), "opprim");});
test("opprimés -> opprim", function() {deepEqual( Stem("opprimés"), "opprim");});
test("opprobre -> opprobr", function() {deepEqual( Stem("opprobre"), "opprobr");});
test("opter -> opter", function() {deepEqual( Stem("opter"), "opter");});
test("optime -> optim", function() {deepEqual( Stem("optime"), "optim");});
test("opulence -> opulent", function() {deepEqual( Stem("opulence"), "opulent");});
test("opulentes -> opulent", function() {deepEqual( Stem("opulentes"), "opulent");});
test("opulents -> opulent", function() {deepEqual( Stem("opulents"), "opulent");});
test("or -> or", function() {deepEqual( Stem("or"), "or");});
test("ora -> ora", function() {deepEqual( Stem("ora"), "ora");});
test("orage -> orag", function() {deepEqual( Stem("orage"), "orag");});
test("orages -> orag", function() {deepEqual( Stem("orages"), "orag");});
test("orange -> orang", function() {deepEqual( Stem("orange"), "orang");});
test("orangé -> orang", function() {deepEqual( Stem("orangé"), "orang");});
test("oranger -> orang", function() {deepEqual( Stem("oranger"), "orang");});
test("orangerie -> oranger", function() {deepEqual( Stem("orangerie"), "oranger");});
test("orangers -> oranger", function() {deepEqual( Stem("orangers"), "oranger");});
test("oranges -> orang", function() {deepEqual( Stem("oranges"), "orang");});
test("orateur -> orateur", function() {deepEqual( Stem("orateur"), "orateur");});
test("orateurs -> orateur", function() {deepEqual( Stem("orateurs"), "orateur");});
test("orbite -> orbit", function() {deepEqual( Stem("orbite"), "orbit");});
test("orchestre -> orchestr", function() {deepEqual( Stem("orchestre"), "orchestr");});
test("ordinaire -> ordinair", function() {deepEqual( Stem("ordinaire"), "ordinair");});
test("ordinairement -> ordinair", function() {deepEqual( Stem("ordinairement"), "ordinair");});
test("ordinaires -> ordinair", function() {deepEqual( Stem("ordinaires"), "ordinair");});
test("ordonna -> ordon", function() {deepEqual( Stem("ordonna"), "ordon");});
test("ordonnait -> ordon", function() {deepEqual( Stem("ordonnait"), "ordon");});
test("ordonnance -> ordon", function() {deepEqual( Stem("ordonnance"), "ordon");});
test("ordonnant -> ordon", function() {deepEqual( Stem("ordonnant"), "ordon");});
test("ordonne -> ordon", function() {deepEqual( Stem("ordonne"), "ordon");});
test("ordonné -> ordon", function() {deepEqual( Stem("ordonné"), "ordon");});
test("ordonnée -> ordon", function() {deepEqual( Stem("ordonnée"), "ordon");});
test("ordonner -> ordon", function() {deepEqual( Stem("ordonner"), "ordon");});
test("ordonnera -> ordon", function() {deepEqual( Stem("ordonnera"), "ordon");});
test("ordonnes -> ordon", function() {deepEqual( Stem("ordonnes"), "ordon");});
test("ordonnés -> ordon", function() {deepEqual( Stem("ordonnés"), "ordon");});
test("ordre -> ordre", function() {deepEqual( Stem("ordre"), "ordre");});
test("ordres -> ordre", function() {deepEqual( Stem("ordres"), "ordre");});
test("oregon -> oregon", function() {deepEqual( Stem("oregon"), "oregon");});
test("oreille -> oreil", function() {deepEqual( Stem("oreille"), "oreil");});
test("oreiller -> oreil", function() {deepEqual( Stem("oreiller"), "oreil");});
test("oreillers -> oreiller", function() {deepEqual( Stem("oreillers"), "oreiller");});
test("oreilles -> oreil", function() {deepEqual( Stem("oreilles"), "oreil");});
test("orfèvre -> orfevr", function() {deepEqual( Stem("orfèvre"), "orfevr");});
test("orfèvrerie -> orfèvrer", function() {deepEqual( Stem("orfèvrerie"), "orfèvrer");});
test("orfèvres -> orfevr", function() {deepEqual( Stem("orfèvres"), "orfevr");});
test("orfraie -> orfrai", function() {deepEqual( Stem("orfraie"), "orfrai");});
test("organes -> organ", function() {deepEqual( Stem("organes"), "organ");});
test("organisa -> organis", function() {deepEqual( Stem("organisa"), "organis");});
test("organisait -> organis", function() {deepEqual( Stem("organisait"), "organis");});
test("organisation -> organis", function() {deepEqual( Stem("organisation"), "organis");});
test("organisé -> organis", function() {deepEqual( Stem("organisé"), "organis");});
test("organisée -> organis", function() {deepEqual( Stem("organisée"), "organis");});
test("organiser -> organis", function() {deepEqual( Stem("organiser"), "organis");});
test("organisèrent -> organis", function() {deepEqual( Stem("organisèrent"), "organis");});
test("orge -> orge", function() {deepEqual( Stem("orge"), "orge");});
test("orgie -> orgi", function() {deepEqual( Stem("orgie"), "orgi");});
test("orgue -> orgu", function() {deepEqual( Stem("orgue"), "orgu");});
test("orgueil -> orgueil", function() {deepEqual( Stem("orgueil"), "orgueil");});
test("orgueilleuse -> orgueil", function() {deepEqual( Stem("orgueilleuse"), "orgueil");});
test("orgueilleusement -> orgueil", function() {deepEqual( Stem("orgueilleusement"), "orgueil");});
test("orgueilleux -> orgueil", function() {deepEqual( Stem("orgueilleux"), "orgueil");});
test("orient -> orient", function() {deepEqual( Stem("orient"), "orient");});
test("oriental -> oriental", function() {deepEqual( Stem("oriental"), "oriental");});
test("orientale -> oriental", function() {deepEqual( Stem("orientale"), "oriental");});
test("orientalistes -> oriental", function() {deepEqual( Stem("orientalistes"), "oriental");});
test("orienter -> orient", function() {deepEqual( Stem("orienter"), "orient");});
test("original -> original", function() {deepEqual( Stem("original"), "original");});
test("originale -> original", function() {deepEqual( Stem("originale"), "original");});
test("originalité -> original", function() {deepEqual( Stem("originalité"), "original");});
test("originaux -> original", function() {deepEqual( Stem("originaux"), "original");});
test("origine -> origin", function() {deepEqual( Stem("origine"), "origin");});
test("orléans -> orléan", function() {deepEqual( Stem("orléans"), "orléan");});
test("ornaient -> ornaient", function() {deepEqual( Stem("ornaient"), "ornaient");});
test("ornait -> ornait", function() {deepEqual( Stem("ornait"), "ornait");});
test("orne -> orne", function() {deepEqual( Stem("orne"), "orne");});
test("orné -> orné", function() {deepEqual( Stem("orné"), "orné");});
test("ornée -> orné", function() {deepEqual( Stem("ornée"), "orné");});
test("ornées -> orné", function() {deepEqual( Stem("ornées"), "orné");});
test("ornement -> ornement", function() {deepEqual( Stem("ornement"), "ornement");});
test("ornementation -> ornement", function() {deepEqual( Stem("ornementation"), "ornement");});
test("ornements -> ornement", function() {deepEqual( Stem("ornements"), "ornement");});
test("ornent -> ornent", function() {deepEqual( Stem("ornent"), "ornent");});
test("orner -> orner", function() {deepEqual( Stem("orner"), "orner");});
test("ornèrent -> ornèrent", function() {deepEqual( Stem("ornèrent"), "ornèrent");});
test("ornés -> orné", function() {deepEqual( Stem("ornés"), "orné");});
test("ornière -> ornier", function() {deepEqual( Stem("ornière"), "ornier");});
test("orpheline -> orphelin", function() {deepEqual( Stem("orpheline"), "orphelin");});
test("orphelins -> orphelin", function() {deepEqual( Stem("orphelins"), "orphelin");});
test("orta -> orta", function() {deepEqual( Stem("orta"), "orta");});
test("orteils -> orteil", function() {deepEqual( Stem("orteils"), "orteil");});
test("orthographe -> orthograph", function() {deepEqual( Stem("orthographe"), "orthograph");});
test("orties -> orti", function() {deepEqual( Stem("orties"), "orti");});
test("ory -> ory", function() {deepEqual( Stem("ory"), "ory");});
test("os -> os", function() {deepEqual( Stem("os"), "os");});
test("osa -> osa", function() {deepEqual( Stem("osa"), "osa");});
test("osai -> osai", function() {deepEqual( Stem("osai"), "osai");});
test("osaient -> osaient", function() {deepEqual( Stem("osaient"), "osaient");});
test("osais -> osais", function() {deepEqual( Stem("osais"), "osais");});
test("osait -> osait", function() {deepEqual( Stem("osait"), "osait");});
test("osant -> osant", function() {deepEqual( Stem("osant"), "osant");});
test("osât -> osât", function() {deepEqual( Stem("osât"), "osât");});
test("oscillaient -> oscill", function() {deepEqual( Stem("oscillaient"), "oscill");});
test("oscillait -> oscill", function() {deepEqual( Stem("oscillait"), "oscill");});
test("oscuro -> oscuro", function() {deepEqual( Stem("oscuro"), "oscuro");});
test("ose -> ose", function() {deepEqual( Stem("ose"), "ose");});
test("osé -> osé", function() {deepEqual( Stem("osé"), "osé");});
test("osées -> osé", function() {deepEqual( Stem("osées"), "osé");});
test("oseille -> oseil", function() {deepEqual( Stem("oseille"), "oseil");});
test("osent -> osent", function() {deepEqual( Stem("osent"), "osent");});
test("oser -> oser", function() {deepEqual( Stem("oser"), "oser");});
test("osera -> oser", function() {deepEqual( Stem("osera"), "oser");});
test("oserai -> oser", function() {deepEqual( Stem("oserai"), "oser");});
test("oseraient -> oser", function() {deepEqual( Stem("oseraient"), "oser");});
test("oserais -> oser", function() {deepEqual( Stem("oserais"), "oser");});
test("oserait -> oser", function() {deepEqual( Stem("oserait"), "oser");});
test("osèrent -> osèrent", function() {deepEqual( Stem("osèrent"), "osèrent");});
test("oserons -> oseron", function() {deepEqual( Stem("oserons"), "oseron");});
test("osez -> osez", function() {deepEqual( Stem("osez"), "osez");});
test("ostensiblement -> ostensibl", function() {deepEqual( Stem("ostensiblement"), "ostensibl");});
test("ôta -> ôta", function() {deepEqual( Stem("ôta"), "ôta");});
test("ôtaient -> ôtaient", function() {deepEqual( Stem("ôtaient"), "ôtaient");});
test("ôtait -> ôtait", function() {deepEqual( Stem("ôtait"), "ôtait");});
test("ôte -> ôte", function() {deepEqual( Stem("ôte"), "ôte");});
test("ôté -> ôté", function() {deepEqual( Stem("ôté"), "ôté");});
test("ôtées -> ôté", function() {deepEqual( Stem("ôtées"), "ôté");});
test("ôter -> ôter", function() {deepEqual( Stem("ôter"), "ôter");});
test("ôtera -> ôter", function() {deepEqual( Stem("ôtera"), "ôter");});
test("ôterai -> ôter", function() {deepEqual( Stem("ôterai"), "ôter");});
test("ôterait -> ôter", function() {deepEqual( Stem("ôterait"), "ôter");});
test("ôtèrent -> ôtèrent", function() {deepEqual( Stem("ôtèrent"), "ôtèrent");});
test("ôterez -> ôter", function() {deepEqual( Stem("ôterez"), "ôter");});
test("ôtez -> ôtez", function() {deepEqual( Stem("ôtez"), "ôtez");});
test("othello -> othello", function() {deepEqual( Stem("othello"), "othello");});
test("ottomane -> ottoman", function() {deepEqual( Stem("ottomane"), "ottoman");});
test("ou -> ou", function() {deepEqual( Stem("ou"), "ou");});
test("où -> où", function() {deepEqual( Stem("où"), "où");});
test("ouailles -> ouaill", function() {deepEqual( Stem("ouailles"), "ouaill");});
test("oubli -> oubl", function() {deepEqual( Stem("oubli"), "oubl");});
test("oublia -> oubli", function() {deepEqual( Stem("oublia"), "oubli");});
test("oubliai -> oubli", function() {deepEqual( Stem("oubliai"), "oubli");});
test("oubliais -> oubli", function() {deepEqual( Stem("oubliais"), "oubli");});
test("oubliait -> oubli", function() {deepEqual( Stem("oubliait"), "oubli");});
test("oubliant -> oubli", function() {deepEqual( Stem("oubliant"), "oubli");});
test("oublie -> oubl", function() {deepEqual( Stem("oublie"), "oubl");});
test("oublié -> oubli", function() {deepEqual( Stem("oublié"), "oubli");});
test("oubliée -> oubli", function() {deepEqual( Stem("oubliée"), "oubli");});
test("oubliées -> oubli", function() {deepEqual( Stem("oubliées"), "oubli");});
test("oublient -> oublient", function() {deepEqual( Stem("oublient"), "oublient");});
test("oublier -> oubli", function() {deepEqual( Stem("oublier"), "oubli");});
test("oubliera -> oubli", function() {deepEqual( Stem("oubliera"), "oubli");});
test("oublierai -> oubli", function() {deepEqual( Stem("oublierai"), "oubli");});
test("oublierais -> oubli", function() {deepEqual( Stem("oublierais"), "oubli");});
test("oublierait -> oubli", function() {deepEqual( Stem("oublierait"), "oubli");});
test("oublierez -> oubli", function() {deepEqual( Stem("oublierez"), "oubli");});
test("oublies -> oubl", function() {deepEqual( Stem("oublies"), "oubl");});
test("oubliez -> oubl", function() {deepEqual( Stem("oubliez"), "oubl");});
test("oublions -> oublion", function() {deepEqual( Stem("oublions"), "oublion");});
test("ouest -> ouest", function() {deepEqual( Stem("ouest"), "ouest");});
test("oui -> oui", function() {deepEqual( Stem("oui"), "oui");});
test("ouï -> ouï", function() {deepEqual( Stem("ouï"), "ouï");});
test("ouïe -> ouï", function() {deepEqual( Stem("ouïe"), "ouï");});
test("our -> our", function() {deepEqual( Stem("our"), "our");});
test("ouragan -> ouragan", function() {deepEqual( Stem("ouragan"), "ouragan");});
test("ouragans -> ouragan", function() {deepEqual( Stem("ouragans"), "ouragan");});
test("ourdies -> ourd", function() {deepEqual( Stem("ourdies"), "ourd");});
test("ours -> our", function() {deepEqual( Stem("ours"), "our");});
test("outils -> outil", function() {deepEqual( Stem("outils"), "outil");});
test("outrage -> outrag", function() {deepEqual( Stem("outrage"), "outrag");});
test("outrageait -> outrag", function() {deepEqual( Stem("outrageait"), "outrag");});
test("outrageantes -> outrag", function() {deepEqual( Stem("outrageantes"), "outrag");});
test("outrageants -> outrag", function() {deepEqual( Stem("outrageants"), "outrag");});
test("outragée -> outrag", function() {deepEqual( Stem("outragée"), "outrag");});
test("outrager -> outrag", function() {deepEqual( Stem("outrager"), "outrag");});
test("outrages -> outrag", function() {deepEqual( Stem("outrages"), "outrag");});
test("outragés -> outrag", function() {deepEqual( Stem("outragés"), "outrag");});
test("outrageusement -> outrag", function() {deepEqual( Stem("outrageusement"), "outrag");});
test("outrait -> outr", function() {deepEqual( Stem("outrait"), "outr");});
test("outrance -> outranc", function() {deepEqual( Stem("outrance"), "outranc");});
test("outrant -> outr", function() {deepEqual( Stem("outrant"), "outr");});
test("outre -> outr", function() {deepEqual( Stem("outre"), "outr");});
test("outré -> outr", function() {deepEqual( Stem("outré"), "outr");});
test("outrée -> outr", function() {deepEqual( Stem("outrée"), "outr");});
test("outrepasser -> outrepass", function() {deepEqual( Stem("outrepasser"), "outrepass");});
test("outrez -> outr", function() {deepEqual( Stem("outrez"), "outr");});
test("ouvert -> ouvert", function() {deepEqual( Stem("ouvert"), "ouvert");});
test("ouverte -> ouvert", function() {deepEqual( Stem("ouverte"), "ouvert");});
test("ouvertement -> ouvert", function() {deepEqual( Stem("ouvertement"), "ouvert");});
test("ouvertes -> ouvert", function() {deepEqual( Stem("ouvertes"), "ouvert");});
test("ouverts -> ouvert", function() {deepEqual( Stem("ouverts"), "ouvert");});
test("ouverture -> ouvertur", function() {deepEqual( Stem("ouverture"), "ouvertur");});
test("ouvrage -> ouvrag", function() {deepEqual( Stem("ouvrage"), "ouvrag");});
test("ouvragé -> ouvrag", function() {deepEqual( Stem("ouvragé"), "ouvrag");});
test("ouvrages -> ouvrag", function() {deepEqual( Stem("ouvrages"), "ouvrag");});
test("ouvraient -> ouvr", function() {deepEqual( Stem("ouvraient"), "ouvr");});
test("ouvrait -> ouvr", function() {deepEqual( Stem("ouvrait"), "ouvr");});
test("ouvrant -> ouvr", function() {deepEqual( Stem("ouvrant"), "ouvr");});
test("ouvrante -> ouvr", function() {deepEqual( Stem("ouvrante"), "ouvr");});
test("ouvre -> ouvr", function() {deepEqual( Stem("ouvre"), "ouvr");});
test("ouvrez -> ouvr", function() {deepEqual( Stem("ouvrez"), "ouvr");});
test("ouvrier -> ouvri", function() {deepEqual( Stem("ouvrier"), "ouvri");});
test("ouvrière -> ouvri", function() {deepEqual( Stem("ouvrière"), "ouvri");});
test("ouvriers -> ouvri", function() {deepEqual( Stem("ouvriers"), "ouvri");});
test("ouvrir -> ouvr", function() {deepEqual( Stem("ouvrir"), "ouvr");});
test("ouvrira -> ouvr", function() {deepEqual( Stem("ouvrira"), "ouvr");});
test("ouvrirait -> ouvr", function() {deepEqual( Stem("ouvrirait"), "ouvr");});
test("ouvrirent -> ouvr", function() {deepEqual( Stem("ouvrirent"), "ouvr");});
test("ouvrit -> ouvr", function() {deepEqual( Stem("ouvrit"), "ouvr");});
test("ouvrît -> ouvr", function() {deepEqual( Stem("ouvrît"), "ouvr");});
test("ovale -> oval", function() {deepEqual( Stem("ovale"), "oval");});
test("oxydé -> oxyd", function() {deepEqual( Stem("oxydé"), "oxyd");});
test("oysterpuf -> oysterpuf", function() {deepEqual( Stem("oysterpuf"), "oysterpuf");});
test("oysters -> oyster", function() {deepEqual( Stem("oysters"), "oyster");});
test("p -> p", function() {deepEqual( Stem("p"), "p");});
test("pablo -> pablo", function() {deepEqual( Stem("pablo"), "pablo");});
test("pace -> pac", function() {deepEqual( Stem("pace"), "pac");});
test("pacha -> pach", function() {deepEqual( Stem("pacha"), "pach");});
test("pacific -> pacific", function() {deepEqual( Stem("pacific"), "pacific");});
test("pacifique -> pacif", function() {deepEqual( Stem("pacifique"), "pacif");});
test("pacifiques -> pacif", function() {deepEqual( Stem("pacifiques"), "pacif");});
test("packet -> packet", function() {deepEqual( Stem("packet"), "packet");});
test("padoue -> padou", function() {deepEqual( Stem("padoue"), "padou");});
test("paganisme -> pagan", function() {deepEqual( Stem("paganisme"), "pagan");});
test("pagato -> pagato", function() {deepEqual( Stem("pagato"), "pagato");});
test("page -> pag", function() {deepEqual( Stem("page"), "pag");});
test("pages -> pag", function() {deepEqual( Stem("pages"), "pag");});
test("pagina -> pagin", function() {deepEqual( Stem("pagina"), "pagin");});
test("pagode -> pagod", function() {deepEqual( Stem("pagode"), "pagod");});
test("pagodes -> pagod", function() {deepEqual( Stem("pagodes"), "pagod");});
test("paie -> pai", function() {deepEqual( Stem("paie"), "pai");});
test("paiement -> pai", function() {deepEqual( Stem("paiement"), "pai");});
test("paiements -> pai", function() {deepEqual( Stem("paiements"), "pai");});
test("païen -> païen", function() {deepEqual( Stem("païen"), "païen");});
test("paient -> paient", function() {deepEqual( Stem("paient"), "paient");});
test("paierai -> pai", function() {deepEqual( Stem("paierai"), "pai");});
test("paierait -> pai", function() {deepEqual( Stem("paierait"), "pai");});
test("paieras -> pai", function() {deepEqual( Stem("paieras"), "pai");});
test("paieriez -> pai", function() {deepEqual( Stem("paieriez"), "pai");});
test("paillasse -> paill", function() {deepEqual( Stem("paillasse"), "paill");});
test("paillasses -> paill", function() {deepEqual( Stem("paillasses"), "paill");});
test("paille -> paill", function() {deepEqual( Stem("paille"), "paill");});
test("pain -> pain", function() {deepEqual( Stem("pain"), "pain");});
test("pains -> pain", function() {deepEqual( Stem("pains"), "pain");});
test("pair -> pair", function() {deepEqual( Stem("pair"), "pair");});
test("paire -> pair", function() {deepEqual( Stem("paire"), "pair");});
test("paires -> pair", function() {deepEqual( Stem("paires"), "pair");});
test("pairie -> pair", function() {deepEqual( Stem("pairie"), "pair");});
test("pairs -> pair", function() {deepEqual( Stem("pairs"), "pair");});
test("paisible -> paisibl", function() {deepEqual( Stem("paisible"), "paisibl");});
test("paisiblement -> paisibl", function() {deepEqual( Stem("paisiblement"), "paisibl");});
test("paix -> paix", function() {deepEqual( Stem("paix"), "paix");});
test("pal -> pal", function() {deepEqual( Stem("pal"), "pal");});
test("palais -> pal", function() {deepEqual( Stem("palais"), "pal");});
test("palanquin -> palanquin", function() {deepEqual( Stem("palanquin"), "palanquin");});
test("palanquins -> palanquin", function() {deepEqual( Stem("palanquins"), "palanquin");});
test("palanza -> palanz", function() {deepEqual( Stem("palanza"), "palanz");});
test("palazzeto -> palazzeto", function() {deepEqual( Stem("palazzeto"), "palazzeto");});
test("pale -> pal", function() {deepEqual( Stem("pale"), "pal");});
test("pâle -> pâl", function() {deepEqual( Stem("pâle"), "pâl");});
test("palefrenier -> palefreni", function() {deepEqual( Stem("palefrenier"), "palefreni");});
test("pâles -> pâl", function() {deepEqual( Stem("pâles"), "pâl");});
test("palestine -> palestin", function() {deepEqual( Stem("palestine"), "palestin");});
test("paletot -> paletot", function() {deepEqual( Stem("paletot"), "paletot");});
test("pâleur -> pâleur", function() {deepEqual( Stem("pâleur"), "pâleur");});
test("pâli -> pâl", function() {deepEqual( Stem("pâli"), "pâl");});
test("palier -> pali", function() {deepEqual( Stem("palier"), "pali");});
test("pâlir -> pâl", function() {deepEqual( Stem("pâlir"), "pâl");});
test("palissades -> palissad", function() {deepEqual( Stem("palissades"), "palissad");});
test("pâlissaient -> pâl", function() {deepEqual( Stem("pâlissaient"), "pâl");});
test("pâlissant -> pâl", function() {deepEqual( Stem("pâlissant"), "pâl");});
test("pâlissantes -> pâl", function() {deepEqual( Stem("pâlissantes"), "pâl");});
test("pâlissent -> pâl", function() {deepEqual( Stem("pâlissent"), "pâl");});
test("pâlit -> pâl", function() {deepEqual( Stem("pâlit"), "pâl");});
test("palki -> palk", function() {deepEqual( Stem("palki"), "palk");});
test("palkigharis -> palkighar", function() {deepEqual( Stem("palkigharis"), "palkighar");});
test("pall -> pall", function() {deepEqual( Stem("pall"), "pall");});
test("palla -> pall", function() {deepEqual( Stem("palla"), "pall");});
test("pallagi -> pallag", function() {deepEqual( Stem("pallagi"), "pallag");});
test("pallida -> pallid", function() {deepEqual( Stem("pallida"), "pallid");});
test("palmiers -> palmi", function() {deepEqual( Stem("palmiers"), "palmi");});
test("palpitait -> palpit", function() {deepEqual( Stem("palpitait"), "palpit");});
test("palpitant -> palpit", function() {deepEqual( Stem("palpitant"), "palpit");});
test("palpitante -> palpit", function() {deepEqual( Stem("palpitante"), "palpit");});
test("palpitants -> palpit", function() {deepEqual( Stem("palpitants"), "palpit");});
test("palpiter -> palpit", function() {deepEqual( Stem("palpiter"), "palpit");});
test("pamphlet -> pamphlet", function() {deepEqual( Stem("pamphlet"), "pamphlet");});
test("pamphlets -> pamphlet", function() {deepEqual( Stem("pamphlets"), "pamphlet");});
test("pan -> pan", function() {deepEqual( Stem("pan"), "pan");});
test("panache -> panach", function() {deepEqual( Stem("panache"), "panach");});
test("pança -> panc", function() {deepEqual( Stem("pança"), "panc");});
test("panier -> pani", function() {deepEqual( Stem("panier"), "pani");});
test("panneaux -> panneau", function() {deepEqual( Stem("panneaux"), "panneau");});
test("panorama -> panoram", function() {deepEqual( Stem("panorama"), "panoram");});
test("panoramique -> panoram", function() {deepEqual( Stem("panoramique"), "panoram");});
test("pansa -> pans", function() {deepEqual( Stem("pansa"), "pans");});
test("pansaient -> pans", function() {deepEqual( Stem("pansaient"), "pans");});
test("pansement -> pans", function() {deepEqual( Stem("pansement"), "pans");});
test("panser -> pans", function() {deepEqual( Stem("panser"), "pans");});
test("pansez -> pans", function() {deepEqual( Stem("pansez"), "pans");});
test("pantalon -> pantalon", function() {deepEqual( Stem("pantalon"), "pantalon");});
test("pantalons -> pantalon", function() {deepEqual( Stem("pantalons"), "pantalon");});
test("panthères -> panther", function() {deepEqual( Stem("panthères"), "panther");});
test("pantoufles -> pantoufl", function() {deepEqual( Stem("pantoufles"), "pantoufl");});
test("paolina -> paolin", function() {deepEqual( Stem("paolina"), "paolin");});
test("papa -> pap", function() {deepEqual( Stem("papa"), "pap");});
test("pape -> pap", function() {deepEqual( Stem("pape"), "pap");});
test("paperasses -> paper", function() {deepEqual( Stem("paperasses"), "paper");});
test("paperassière -> paperassi", function() {deepEqual( Stem("paperassière"), "paperassi");});
test("papier -> papi", function() {deepEqual( Stem("papier"), "papi");});
test("papiers -> papi", function() {deepEqual( Stem("papiers"), "papi");});
test("papillon -> papillon", function() {deepEqual( Stem("papillon"), "papillon");});
test("papillons -> papillon", function() {deepEqual( Stem("papillons"), "papillon");});
test("papillotes -> papillot", function() {deepEqual( Stem("papillotes"), "papillot");});
test("papouas -> papou", function() {deepEqual( Stem("papouas"), "papou");});
test("papyrus -> papyrus", function() {deepEqual( Stem("papyrus"), "papyrus");});
test("paquebot -> paquebot", function() {deepEqual( Stem("paquebot"), "paquebot");});
test("paquebots -> paquebot", function() {deepEqual( Stem("paquebots"), "paquebot");});
test("paquet -> paquet", function() {deepEqual( Stem("paquet"), "paquet");});
test("paquetées -> paquet", function() {deepEqual( Stem("paquetées"), "paquet");});
test("paquets -> paquet", function() {deepEqual( Stem("paquets"), "paquet");});
test("par -> par", function() {deepEqual( Stem("par"), "par");});
test("para -> par", function() {deepEqual( Stem("para"), "par");});
test("parade -> parad", function() {deepEqual( Stem("parade"), "parad");});
test("parader -> parad", function() {deepEqual( Stem("parader"), "parad");});
test("paradis -> parad", function() {deepEqual( Stem("paradis"), "parad");});
test("parages -> parag", function() {deepEqual( Stem("parages"), "parag");});
test("paragraphe -> paragraph", function() {deepEqual( Stem("paragraphe"), "paragraph");});
test("parais -> par", function() {deepEqual( Stem("parais"), "par");});
test("paraissaient -> paraiss", function() {deepEqual( Stem("paraissaient"), "paraiss");});
test("paraissais -> paraiss", function() {deepEqual( Stem("paraissais"), "paraiss");});
test("paraissait -> paraiss", function() {deepEqual( Stem("paraissait"), "paraiss");});
test("paraisse -> paraiss", function() {deepEqual( Stem("paraisse"), "paraiss");});
test("paraissent -> paraissent", function() {deepEqual( Stem("paraissent"), "paraissent");});
test("parait -> par", function() {deepEqual( Stem("parait"), "par");});
test("paraît -> paraît", function() {deepEqual( Stem("paraît"), "paraît");});
test("paraîtra -> paraîtr", function() {deepEqual( Stem("paraîtra"), "paraîtr");});
test("paraîtrai -> paraîtr", function() {deepEqual( Stem("paraîtrai"), "paraîtr");});
test("paraîtraient -> paraîtr", function() {deepEqual( Stem("paraîtraient"), "paraîtr");});
test("paraître -> paraîtr", function() {deepEqual( Stem("paraître"), "paraîtr");});
test("paraîtrons -> paraîtron", function() {deepEqual( Stem("paraîtrons"), "paraîtron");});
test("parallèle -> parallel", function() {deepEqual( Stem("parallèle"), "parallel");});
test("parallèlement -> parallel", function() {deepEqual( Stem("parallèlement"), "parallel");});
test("paralysaient -> paralys", function() {deepEqual( Stem("paralysaient"), "paralys");});
test("paralyse -> paralys", function() {deepEqual( Stem("paralyse"), "paralys");});
test("paralysé -> paralys", function() {deepEqual( Stem("paralysé"), "paralys");});
test("paralyser -> paralys", function() {deepEqual( Stem("paralyser"), "paralys");});
test("paralytique -> paralyt", function() {deepEqual( Stem("paralytique"), "paralyt");});
test("parant -> par", function() {deepEqual( Stem("parant"), "par");});
test("parapet -> parapet", function() {deepEqual( Stem("parapet"), "parapet");});
test("paraphait -> paraph", function() {deepEqual( Stem("paraphait"), "paraph");});
test("paraphe -> paraph", function() {deepEqual( Stem("paraphe"), "paraph");});
test("paraphrasa -> paraphras", function() {deepEqual( Stem("paraphrasa"), "paraphras");});
test("parapluie -> paraplui", function() {deepEqual( Stem("parapluie"), "paraplui");});
test("paratonnerre -> paratonnerr", function() {deepEqual( Stem("paratonnerre"), "paratonnerr");});
test("paratonnerres -> paratonnerr", function() {deepEqual( Stem("paratonnerres"), "paratonnerr");});
test("paravent -> paravent", function() {deepEqual( Stem("paravent"), "paravent");});
test("parbleu -> parbleu", function() {deepEqual( Stem("parbleu"), "parbleu");});
test("parc -> parc", function() {deepEqual( Stem("parc"), "parc");});
test("parce -> parc", function() {deepEqual( Stem("parce"), "parc");});
test("parchemin -> parchemin", function() {deepEqual( Stem("parchemin"), "parchemin");});
test("parcouraient -> parcour", function() {deepEqual( Stem("parcouraient"), "parcour");});
test("parcourait -> parcour", function() {deepEqual( Stem("parcourait"), "parcour");});
test("parcourant -> parcour", function() {deepEqual( Stem("parcourant"), "parcour");});
test("parcourent -> parcourent", function() {deepEqual( Stem("parcourent"), "parcourent");});
test("parcourir -> parcour", function() {deepEqual( Stem("parcourir"), "parcour");});
test("parcourrai -> parcourr", function() {deepEqual( Stem("parcourrai"), "parcourr");});
test("parcours -> parcour", function() {deepEqual( Stem("parcours"), "parcour");});
test("parcourt -> parcourt", function() {deepEqual( Stem("parcourt"), "parcourt");});
test("parcouru -> parcouru", function() {deepEqual( Stem("parcouru"), "parcouru");});
test("parcourue -> parcouru", function() {deepEqual( Stem("parcourue"), "parcouru");});
test("parcoururent -> parcoururent", function() {deepEqual( Stem("parcoururent"), "parcoururent");});
test("parcourus -> parcourus", function() {deepEqual( Stem("parcourus"), "parcourus");});
test("parcourut -> parcourut", function() {deepEqual( Stem("parcourut"), "parcourut");});
test("pardessus -> pardessus", function() {deepEqual( Stem("pardessus"), "pardessus");});
test("pardi -> pard", function() {deepEqual( Stem("pardi"), "pard");});
test("pardieu -> pardieu", function() {deepEqual( Stem("pardieu"), "pardieu");});
test("pardon -> pardon", function() {deepEqual( Stem("pardon"), "pardon");});
test("pardonna -> pardon", function() {deepEqual( Stem("pardonna"), "pardon");});
test("pardonnable -> pardon", function() {deepEqual( Stem("pardonnable"), "pardon");});
test("pardonnables -> pardon", function() {deepEqual( Stem("pardonnables"), "pardon");});
test("pardonnait -> pardon", function() {deepEqual( Stem("pardonnait"), "pardon");});
test("pardonne -> pardon", function() {deepEqual( Stem("pardonne"), "pardon");});
test("pardonné -> pardon", function() {deepEqual( Stem("pardonné"), "pardon");});
test("pardonnées -> pardon", function() {deepEqual( Stem("pardonnées"), "pardon");});
test("pardonnent -> pardonnent", function() {deepEqual( Stem("pardonnent"), "pardonnent");});
test("pardonner -> pardon", function() {deepEqual( Stem("pardonner"), "pardon");});
test("pardonnera -> pardon", function() {deepEqual( Stem("pardonnera"), "pardon");});
test("pardonnerai -> pardon", function() {deepEqual( Stem("pardonnerai"), "pardon");});
test("pardonnerais -> pardon", function() {deepEqual( Stem("pardonnerais"), "pardon");});
test("pardonnerait -> pardon", function() {deepEqual( Stem("pardonnerait"), "pardon");});
test("pardonnerez -> pardon", function() {deepEqual( Stem("pardonnerez"), "pardon");});
test("pardonnes -> pardon", function() {deepEqual( Stem("pardonnes"), "pardon");});
test("pardonnez -> pardon", function() {deepEqual( Stem("pardonnez"), "pardon");});
test("pardonniez -> pardon", function() {deepEqual( Stem("pardonniez"), "pardon");});
test("pardons -> pardon", function() {deepEqual( Stem("pardons"), "pardon");});
test("pare -> par", function() {deepEqual( Stem("pare"), "par");});
test("paré -> par", function() {deepEqual( Stem("paré"), "par");});
test("parée -> par", function() {deepEqual( Stem("parée"), "par");});
test("pareil -> pareil", function() {deepEqual( Stem("pareil"), "pareil");});
test("pareille -> pareil", function() {deepEqual( Stem("pareille"), "pareil");});
test("pareilles -> pareil", function() {deepEqual( Stem("pareilles"), "pareil");});
test("pareils -> pareil", function() {deepEqual( Stem("pareils"), "pareil");});
test("parent -> parent", function() {deepEqual( Stem("parent"), "parent");});
test("parente -> parent", function() {deepEqual( Stem("parente"), "parent");});
test("parentes -> parent", function() {deepEqual( Stem("parentes"), "parent");});
test("parenthèse -> parenthes", function() {deepEqual( Stem("parenthèse"), "parenthes");});
test("parents -> parent", function() {deepEqual( Stem("parents"), "parent");});
test("parer -> par", function() {deepEqual( Stem("parer"), "par");});
test("paresse -> paress", function() {deepEqual( Stem("paresse"), "paress");});
test("paresseuse -> paress", function() {deepEqual( Stem("paresseuse"), "paress");});
test("paresseux -> paress", function() {deepEqual( Stem("paresseux"), "paress");});
test("parfait -> parf", function() {deepEqual( Stem("parfait"), "parf");});
test("parfaite -> parfait", function() {deepEqual( Stem("parfaite"), "parfait");});
test("parfaitement -> parfait", function() {deepEqual( Stem("parfaitement"), "parfait");});
test("parfaites -> parfait", function() {deepEqual( Stem("parfaites"), "parfait");});
test("parfaits -> parfait", function() {deepEqual( Stem("parfaits"), "parfait");});
test("parfois -> parfois", function() {deepEqual( Stem("parfois"), "parfois");});
test("parfum -> parfum", function() {deepEqual( Stem("parfum"), "parfum");});
test("parfumée -> parfum", function() {deepEqual( Stem("parfumée"), "parfum");});
test("parfums -> parfum", function() {deepEqual( Stem("parfums"), "parfum");});
test("pari -> pari", function() {deepEqual( Stem("pari"), "pari");});
test("paria -> pari", function() {deepEqual( Stem("paria"), "pari");});
test("parie -> pari", function() {deepEqual( Stem("parie"), "pari");});
test("parié -> pari", function() {deepEqual( Stem("parié"), "pari");});
test("parient -> parient", function() {deepEqual( Stem("parient"), "parient");});
test("parier -> pari", function() {deepEqual( Stem("parier"), "pari");});
test("parierais -> pari", function() {deepEqual( Stem("parierais"), "pari");});
test("parièrent -> pari", function() {deepEqual( Stem("parièrent"), "pari");});
test("pariétaires -> pariétair", function() {deepEqual( Stem("pariétaires"), "pariétair");});
test("parieurs -> parieur", function() {deepEqual( Stem("parieurs"), "parieur");});
test("paris -> paris", function() {deepEqual( Stem("paris"), "paris");});
test("parisien -> parisien", function() {deepEqual( Stem("parisien"), "parisien");});
test("parisienne -> parisien", function() {deepEqual( Stem("parisienne"), "parisien");});
test("parisiennes -> parisien", function() {deepEqual( Stem("parisiennes"), "parisien");});
test("parisiens -> parisien", function() {deepEqual( Stem("parisiens"), "parisien");});
test("parla -> parl", function() {deepEqual( Stem("parla"), "parl");});
test("parlaient -> parl", function() {deepEqual( Stem("parlaient"), "parl");});
test("parlais -> parl", function() {deepEqual( Stem("parlais"), "parl");});
test("parlait -> parl", function() {deepEqual( Stem("parlait"), "parl");});
test("parlant -> parl", function() {deepEqual( Stem("parlant"), "parl");});
test("parlantes -> parl", function() {deepEqual( Stem("parlantes"), "parl");});
test("parlants -> parl", function() {deepEqual( Stem("parlants"), "parl");});
test("parlassent -> parl", function() {deepEqual( Stem("parlassent"), "parl");});
test("parlât -> parl", function() {deepEqual( Stem("parlât"), "parl");});
test("parle -> parl", function() {deepEqual( Stem("parle"), "parl");});
test("parlé -> parl", function() {deepEqual( Stem("parlé"), "parl");});
test("parlement -> parl", function() {deepEqual( Stem("parlement"), "parl");});
test("parlent -> parlent", function() {deepEqual( Stem("parlent"), "parlent");});
test("parler -> parl", function() {deepEqual( Stem("parler"), "parl");});
test("parlera -> parl", function() {deepEqual( Stem("parlera"), "parl");});
test("parlerai -> parl", function() {deepEqual( Stem("parlerai"), "parl");});
test("parlerais -> parl", function() {deepEqual( Stem("parlerais"), "parl");});
test("parlerait -> parl", function() {deepEqual( Stem("parlerait"), "parl");});
test("parlèrent -> parl", function() {deepEqual( Stem("parlèrent"), "parl");});
test("parlerez -> parl", function() {deepEqual( Stem("parlerez"), "parl");});
test("parlerons -> parl", function() {deepEqual( Stem("parlerons"), "parl");});
test("parleront -> parl", function() {deepEqual( Stem("parleront"), "parl");});
test("parles -> parl", function() {deepEqual( Stem("parles"), "parl");});
test("parleur -> parleur", function() {deepEqual( Stem("parleur"), "parleur");});
test("parleurs -> parleur", function() {deepEqual( Stem("parleurs"), "parleur");});
test("parlez -> parl", function() {deepEqual( Stem("parlez"), "parl");});
test("parliez -> parl", function() {deepEqual( Stem("parliez"), "parl");});
test("parlions -> parlion", function() {deepEqual( Stem("parlions"), "parlion");});
test("parloir -> parloir", function() {deepEqual( Stem("parloir"), "parloir");});
test("parlons -> parlon", function() {deepEqual( Stem("parlons"), "parlon");});
test("parma -> parm", function() {deepEqual( Stem("parma"), "parm");});
test("parme -> parm", function() {deepEqual( Stem("parme"), "parm");});
test("parmesan -> parmesan", function() {deepEqual( Stem("parmesan"), "parmesan");});
test("parmesans -> parmesan", function() {deepEqual( Stem("parmesans"), "parmesan");});
test("parmi -> parm", function() {deepEqual( Stem("parmi"), "parm");});
test("parois -> parois", function() {deepEqual( Stem("parois"), "parois");});
test("paroisse -> paroiss", function() {deepEqual( Stem("paroisse"), "paroiss");});
test("paroisses -> paroiss", function() {deepEqual( Stem("paroisses"), "paroiss");});
test("paroissiale -> paroissial", function() {deepEqual( Stem("paroissiale"), "paroissial");});
test("paroissiens -> paroissien", function() {deepEqual( Stem("paroissiens"), "paroissien");});
test("parole -> parol", function() {deepEqual( Stem("parole"), "parol");});
test("paroles -> parol", function() {deepEqual( Stem("paroles"), "parol");});
test("paroxysme -> paroxysm", function() {deepEqual( Stem("paroxysme"), "paroxysm");});
test("parquet -> parquet", function() {deepEqual( Stem("parquet"), "parquet");});
test("parquetée -> parquet", function() {deepEqual( Stem("parquetée"), "parquet");});
test("parrain -> parrain", function() {deepEqual( Stem("parrain"), "parrain");});
test("pars -> par", function() {deepEqual( Stem("pars"), "par");});
test("parsemée -> parsem", function() {deepEqual( Stem("parsemée"), "parsem");});
test("parsi -> pars", function() {deepEqual( Stem("parsi"), "pars");});
test("parsie -> pars", function() {deepEqual( Stem("parsie"), "pars");});
test("parsis -> pars", function() {deepEqual( Stem("parsis"), "pars");});
test("part -> part", function() {deepEqual( Stem("part"), "part");});
test("partage -> partag", function() {deepEqual( Stem("partage"), "partag");});
test("partagé -> partag", function() {deepEqual( Stem("partagé"), "partag");});
test("partagea -> partag", function() {deepEqual( Stem("partagea"), "partag");});
test("partageait -> partag", function() {deepEqual( Stem("partageait"), "partag");});
test("partagée -> partag", function() {deepEqual( Stem("partagée"), "partag");});
test("partager -> partag", function() {deepEqual( Stem("partager"), "partag");});
test("partagerai -> partag", function() {deepEqual( Stem("partagerai"), "partag");});
test("partagerais -> partag", function() {deepEqual( Stem("partagerais"), "partag");});
test("partaient -> part", function() {deepEqual( Stem("partaient"), "part");});
test("partait -> part", function() {deepEqual( Stem("partait"), "part");});
test("partana -> partan", function() {deepEqual( Stem("partana"), "partan");});
test("partance -> partanc", function() {deepEqual( Stem("partance"), "partanc");});
test("partant -> part", function() {deepEqual( Stem("partant"), "part");});
test("parte -> part", function() {deepEqual( Stem("parte"), "part");});
test("partenaire -> partenair", function() {deepEqual( Stem("partenaire"), "partenair");});
test("partenaires -> partenair", function() {deepEqual( Stem("partenaires"), "partenair");});
test("partent -> partent", function() {deepEqual( Stem("partent"), "partent");});
test("parterre -> parterr", function() {deepEqual( Stem("parterre"), "parterr");});
test("parterres -> parterr", function() {deepEqual( Stem("parterres"), "parterr");});
test("partes -> part", function() {deepEqual( Stem("partes"), "part");});
test("partez -> part", function() {deepEqual( Stem("partez"), "part");});
test("parti -> part", function() {deepEqual( Stem("parti"), "part");});
test("particularité -> particular", function() {deepEqual( Stem("particularité"), "particular");});
test("particularités -> particular", function() {deepEqual( Stem("particularités"), "particular");});
test("particulier -> particuli", function() {deepEqual( Stem("particulier"), "particuli");});
test("particulière -> particuli", function() {deepEqual( Stem("particulière"), "particuli");});
test("particulièrement -> particuli", function() {deepEqual( Stem("particulièrement"), "particuli");});
test("particuliers -> particuli", function() {deepEqual( Stem("particuliers"), "particuli");});
test("partie -> part", function() {deepEqual( Stem("partie"), "part");});
test("parties -> part", function() {deepEqual( Stem("parties"), "part");});
test("partiez -> part", function() {deepEqual( Stem("partiez"), "part");});
test("partir -> part", function() {deepEqual( Stem("partir"), "part");});
test("partira -> part", function() {deepEqual( Stem("partira"), "part");});
test("partirai -> part", function() {deepEqual( Stem("partirai"), "part");});
test("partirais -> part", function() {deepEqual( Stem("partirais"), "part");});
test("partirait -> part", function() {deepEqual( Stem("partirait"), "part");});
test("partirent -> part", function() {deepEqual( Stem("partirent"), "part");});
test("partirez -> part", function() {deepEqual( Stem("partirez"), "part");});
test("partirons -> part", function() {deepEqual( Stem("partirons"), "part");});
test("partis -> part", function() {deepEqual( Stem("partis"), "part");});
test("partisan -> partisan", function() {deepEqual( Stem("partisan"), "partisan");});
test("partisans -> partisan", function() {deepEqual( Stem("partisans"), "partisan");});
test("partit -> part", function() {deepEqual( Stem("partit"), "part");});
test("partît -> part", function() {deepEqual( Stem("partît"), "part");});
test("partner -> partn", function() {deepEqual( Stem("partner"), "partn");});
test("partons -> parton", function() {deepEqual( Stem("partons"), "parton");});
test("partout -> partout", function() {deepEqual( Stem("partout"), "partout");});
test("parts -> part", function() {deepEqual( Stem("parts"), "part");});
test("paru -> paru", function() {deepEqual( Stem("paru"), "paru");});
test("parurent -> parurent", function() {deepEqual( Stem("parurent"), "parurent");});
test("parut -> parut", function() {deepEqual( Stem("parut"), "parut");});
test("parût -> parût", function() {deepEqual( Stem("parût"), "parût");});
test("parvenaient -> parven", function() {deepEqual( Stem("parvenaient"), "parven");});
test("parvenait -> parven", function() {deepEqual( Stem("parvenait"), "parven");});
test("parvenir -> parven", function() {deepEqual( Stem("parvenir"), "parven");});
test("parvenons -> parvenon", function() {deepEqual( Stem("parvenons"), "parvenon");});
test("parvenu -> parvenu", function() {deepEqual( Stem("parvenu"), "parvenu");});
test("parvenue -> parvenu", function() {deepEqual( Stem("parvenue"), "parvenu");});
test("parviendrai -> parviendr", function() {deepEqual( Stem("parviendrai"), "parviendr");});
test("parviendraient -> parviendr", function() {deepEqual( Stem("parviendraient"), "parviendr");});
test("parviendrait -> parviendr", function() {deepEqual( Stem("parviendrait"), "parviendr");});
test("parviendras -> parviendr", function() {deepEqual( Stem("parviendras"), "parviendr");});
test("parviendrons -> parviendron", function() {deepEqual( Stem("parviendrons"), "parviendron");});
test("parviendront -> parviendront", function() {deepEqual( Stem("parviendront"), "parviendront");});
test("parviens -> parvien", function() {deepEqual( Stem("parviens"), "parvien");});
test("parvient -> parvient", function() {deepEqual( Stem("parvient"), "parvient");});
test("parvinrent -> parvinrent", function() {deepEqual( Stem("parvinrent"), "parvinrent");});
test("parvint -> parvint", function() {deepEqual( Stem("parvint"), "parvint");});
test("pas -> pas", function() {deepEqual( Stem("pas"), "pas");});
test("pascal -> pascal", function() {deepEqual( Stem("pascal"), "pascal");});
test("pass -> pass", function() {deepEqual( Stem("pass"), "pass");});
test("passa -> pass", function() {deepEqual( Stem("passa"), "pass");});
test("passable -> passabl", function() {deepEqual( Stem("passable"), "passabl");});
test("passablement -> passabl", function() {deepEqual( Stem("passablement"), "passabl");});
test("passables -> passabl", function() {deepEqual( Stem("passables"), "passabl");});
test("passage -> passag", function() {deepEqual( Stem("passage"), "passag");});
test("passager -> passag", function() {deepEqual( Stem("passager"), "passag");});
test("passagère -> passager", function() {deepEqual( Stem("passagère"), "passager");});
test("passagères -> passager", function() {deepEqual( Stem("passagères"), "passager");});
test("passagers -> passager", function() {deepEqual( Stem("passagers"), "passager");});
test("passages -> passag", function() {deepEqual( Stem("passages"), "passag");});
test("passaient -> pass", function() {deepEqual( Stem("passaient"), "pass");});
test("passais -> pass", function() {deepEqual( Stem("passais"), "pass");});
test("passait -> pass", function() {deepEqual( Stem("passait"), "pass");});
test("passant -> pass", function() {deepEqual( Stem("passant"), "pass");});
test("passants -> pass", function() {deepEqual( Stem("passants"), "pass");});
test("passar -> passar", function() {deepEqual( Stem("passar"), "passar");});
test("passe -> pass", function() {deepEqual( Stem("passe"), "pass");});
test("passé -> pass", function() {deepEqual( Stem("passé"), "pass");});
test("passée -> pass", function() {deepEqual( Stem("passée"), "pass");});
test("passées -> pass", function() {deepEqual( Stem("passées"), "pass");});
test("passementier -> passementi", function() {deepEqual( Stem("passementier"), "passementi");});
test("passent -> passent", function() {deepEqual( Stem("passent"), "passent");});
test("passepartout -> passepartout", function() {deepEqual( Stem("passepartout"), "passepartout");});
test("passeport -> passeport", function() {deepEqual( Stem("passeport"), "passeport");});
test("passeports -> passeport", function() {deepEqual( Stem("passeports"), "passeport");});
test("passer -> pass", function() {deepEqual( Stem("passer"), "pass");});
test("passera -> pass", function() {deepEqual( Stem("passera"), "pass");});
test("passerai -> pass", function() {deepEqual( Stem("passerai"), "pass");});
test("passerais -> pass", function() {deepEqual( Stem("passerais"), "pass");});
test("passerait -> pass", function() {deepEqual( Stem("passerait"), "pass");});
test("passerelle -> passerel", function() {deepEqual( Stem("passerelle"), "passerel");});
test("passerelles -> passerel", function() {deepEqual( Stem("passerelles"), "passerel");});
test("passèrent -> pass", function() {deepEqual( Stem("passèrent"), "pass");});
test("passerons -> pass", function() {deepEqual( Stem("passerons"), "pass");});
test("passeront -> pass", function() {deepEqual( Stem("passeront"), "pass");});
test("passes -> pass", function() {deepEqual( Stem("passes"), "pass");});
test("passés -> pass", function() {deepEqual( Stem("passés"), "pass");});
test("passez -> pass", function() {deepEqual( Stem("passez"), "pass");});
test("passif -> passif", function() {deepEqual( Stem("passif"), "passif");});
test("passion -> passion", function() {deepEqual( Stem("passion"), "passion");});
test("passionnait -> passion", function() {deepEqual( Stem("passionnait"), "passion");});
test("passionnant -> passion", function() {deepEqual( Stem("passionnant"), "passion");});
test("passionne -> passion", function() {deepEqual( Stem("passionne"), "passion");});
test("passionné -> passion", function() {deepEqual( Stem("passionné"), "passion");});
test("passionnée -> passion", function() {deepEqual( Stem("passionnée"), "passion");});
test("passionnées -> passion", function() {deepEqual( Stem("passionnées"), "passion");});
test("passionnément -> passion", function() {deepEqual( Stem("passionnément"), "passion");});
test("passionner -> passion", function() {deepEqual( Stem("passionner"), "passion");});
test("passionnés -> passion", function() {deepEqual( Stem("passionnés"), "passion");});
test("passions -> passion", function() {deepEqual( Stem("passions"), "passion");});
test("passive -> passiv", function() {deepEqual( Stem("passive"), "passiv");});
test("passons -> passon", function() {deepEqual( Stem("passons"), "passon");});
test("pastoral -> pastoral", function() {deepEqual( Stem("pastoral"), "pastoral");});
test("pastorale -> pastoral", function() {deepEqual( Stem("pastorale"), "pastoral");});
test("pataugeant -> pataug", function() {deepEqual( Stem("pataugeant"), "pataug");});
test("pâté -> pât", function() {deepEqual( Stem("pâté"), "pât");});
test("patelin -> patelin", function() {deepEqual( Stem("patelin"), "patelin");});
test("patente -> patent", function() {deepEqual( Stem("patente"), "patent");});
test("pater -> pat", function() {deepEqual( Stem("pater"), "pat");});
test("paterne -> patern", function() {deepEqual( Stem("paterne"), "patern");});
test("paternel -> paternel", function() {deepEqual( Stem("paternel"), "paternel");});
test("paternelle -> paternel", function() {deepEqual( Stem("paternelle"), "paternel");});
test("pathétique -> pathet", function() {deepEqual( Stem("pathétique"), "pathet");});
test("pathétiques -> pathet", function() {deepEqual( Stem("pathétiques"), "pathet");});
test("pathos -> pathos", function() {deepEqual( Stem("pathos"), "pathos");});
test("patiemment -> patient", function() {deepEqual( Stem("patiemment"), "patient");});
test("patience -> patienc", function() {deepEqual( Stem("patience"), "patienc");});
test("patinant -> patin", function() {deepEqual( Stem("patinant"), "patin");});
test("patna -> patn", function() {deepEqual( Stem("patna"), "patn");});
test("patois -> patois", function() {deepEqual( Stem("patois"), "patois");});
test("patrician -> patrician", function() {deepEqual( Stem("patrician"), "patrician");});
test("patricien -> patricien", function() {deepEqual( Stem("patricien"), "patricien");});
test("patricienne -> patricien", function() {deepEqual( Stem("patricienne"), "patricien");});
test("patriciens -> patricien", function() {deepEqual( Stem("patriciens"), "patricien");});
test("patrie -> patr", function() {deepEqual( Stem("patrie"), "patr");});
test("patriotes -> patriot", function() {deepEqual( Stem("patriotes"), "patriot");});
test("patriotisme -> patriot", function() {deepEqual( Stem("patriotisme"), "patriot");});
test("patron -> patron", function() {deepEqual( Stem("patron"), "patron");});
test("patronage -> patronag", function() {deepEqual( Stem("patronage"), "patronag");});
test("patronne -> patron", function() {deepEqual( Stem("patronne"), "patron");});
test("patronnes -> patron", function() {deepEqual( Stem("patronnes"), "patron");});
test("patrouille -> patrouill", function() {deepEqual( Stem("patrouille"), "patrouill");});
test("patte -> patt", function() {deepEqual( Stem("patte"), "patt");});
test("pâture -> pâtur", function() {deepEqual( Stem("pâture"), "pâtur");});
test("pauca -> pauc", function() {deepEqual( Stem("pauca"), "pauc");});
test("paul -> paul", function() {deepEqual( Stem("paul"), "paul");});
test("paupière -> paupi", function() {deepEqual( Stem("paupière"), "paupi");});
test("paupières -> paupi", function() {deepEqual( Stem("paupières"), "paupi");});
test("pauvre -> pauvr", function() {deepEqual( Stem("pauvre"), "pauvr");});
test("pauvrement -> pauvr", function() {deepEqual( Stem("pauvrement"), "pauvr");});
test("pauvres -> pauvr", function() {deepEqual( Stem("pauvres"), "pauvr");});
test("pauvreté -> pauvret", function() {deepEqual( Stem("pauvreté"), "pauvret");});
test("pauwell -> pauwel", function() {deepEqual( Stem("pauwell"), "pauwel");});
test("pavé -> pav", function() {deepEqual( Stem("pavé"), "pav");});
test("pavée -> pav", function() {deepEqual( Stem("pavée"), "pav");});
test("pavie -> pav", function() {deepEqual( Stem("pavie"), "pav");});
test("pavillon -> pavillon", function() {deepEqual( Stem("pavillon"), "pavillon");});
test("pavillons -> pavillon", function() {deepEqual( Stem("pavillons"), "pavillon");});
test("pavois -> pavois", function() {deepEqual( Stem("pavois"), "pavois");});
test("pawnies -> pawn", function() {deepEqual( Stem("pawnies"), "pawn");});
test("paya -> pai", function() {deepEqual( Stem("paya"), "pai");});
test("payables -> payabl", function() {deepEqual( Stem("payables"), "payabl");});
test("payait -> pai", function() {deepEqual( Stem("payait"), "pai");});
test("payant -> pai", function() {deepEqual( Stem("payant"), "pai");});
test("paye -> pay", function() {deepEqual( Stem("paye"), "pay");});
test("payé -> pai", function() {deepEqual( Stem("payé"), "pai");});
test("payée -> pai", function() {deepEqual( Stem("payée"), "pai");});
test("payent -> payent", function() {deepEqual( Stem("payent"), "payent");});
test("payer -> pai", function() {deepEqual( Stem("payer"), "pai");});
test("payera -> pai", function() {deepEqual( Stem("payera"), "pai");});
test("payés -> pai", function() {deepEqual( Stem("payés"), "pai");});
test("payiez -> pai", function() {deepEqual( Stem("payiez"), "pai");});
test("payons -> payon", function() {deepEqual( Stem("payons"), "payon");});
test("pays -> pay", function() {deepEqual( Stem("pays"), "pay");});
test("paysage -> paysag", function() {deepEqual( Stem("paysage"), "paysag");});
test("paysages -> paysag", function() {deepEqual( Stem("paysages"), "paysag");});
test("paysan -> paysan", function() {deepEqual( Stem("paysan"), "paysan");});
test("paysanne -> paysann", function() {deepEqual( Stem("paysanne"), "paysann");});
test("paysans -> paysan", function() {deepEqual( Stem("paysans"), "paysan");});
test("peak -> peak", function() {deepEqual( Stem("peak"), "peak");});
test("peau -> peau", function() {deepEqual( Stem("peau"), "peau");});
test("peccadille -> peccadill", function() {deepEqual( Stem("peccadille"), "peccadill");});
test("peccavi -> peccav", function() {deepEqual( Stem("peccavi"), "peccav");});
test("péchais -> pech", function() {deepEqual( Stem("péchais"), "pech");});
test("pêche -> pêch", function() {deepEqual( Stem("pêche"), "pêch");});
test("péché -> pech", function() {deepEqual( Stem("péché"), "pech");});
test("pécher -> pech", function() {deepEqual( Stem("pécher"), "pech");});
test("péchés -> pech", function() {deepEqual( Stem("péchés"), "pech");});
test("pécheur -> pécheur", function() {deepEqual( Stem("pécheur"), "pécheur");});
test("pêcheurs -> pêcheur", function() {deepEqual( Stem("pêcheurs"), "pêcheur");});
test("pectorale -> pectoral", function() {deepEqual( Stem("pectorale"), "pectoral");});
test("pécule -> pécul", function() {deepEqual( Stem("pécule"), "pécul");});
test("pécuniaire -> pécuniair", function() {deepEqual( Stem("pécuniaire"), "pécuniair");});
test("pédant -> ped", function() {deepEqual( Stem("pédant"), "ped");});
test("pédanterie -> pédanter", function() {deepEqual( Stem("pédanterie"), "pédanter");});
test("pédantesque -> pédantesqu", function() {deepEqual( Stem("pédantesque"), "pédantesqu");});
test("pedroti -> pedrot", function() {deepEqual( Stem("pedroti"), "pedrot");});
test("peignaient -> peign", function() {deepEqual( Stem("peignaient"), "peign");});
test("peignait -> peign", function() {deepEqual( Stem("peignait"), "peign");});
test("peignant -> peign", function() {deepEqual( Stem("peignant"), "peign");});
test("peigné -> peign", function() {deepEqual( Stem("peigné"), "peign");});
test("peignez -> peign", function() {deepEqual( Stem("peignez"), "peign");});
test("peignit -> peign", function() {deepEqual( Stem("peignit"), "peign");});
test("peindra -> peindr", function() {deepEqual( Stem("peindra"), "peindr");});
test("peindre -> peindr", function() {deepEqual( Stem("peindre"), "peindr");});
test("peine -> pein", function() {deepEqual( Stem("peine"), "pein");});
test("peiné -> pein", function() {deepEqual( Stem("peiné"), "pein");});
test("peines -> pein", function() {deepEqual( Stem("peines"), "pein");});
test("peinés -> pein", function() {deepEqual( Stem("peinés"), "pein");});
test("peint -> peint", function() {deepEqual( Stem("peint"), "peint");});
test("peinte -> peint", function() {deepEqual( Stem("peinte"), "peint");});
test("peintes -> peint", function() {deepEqual( Stem("peintes"), "peint");});
test("peintre -> peintr", function() {deepEqual( Stem("peintre"), "peintr");});
test("peintres -> peintr", function() {deepEqual( Stem("peintres"), "peintr");});
test("peints -> peint", function() {deepEqual( Stem("peints"), "peint");});
test("peinture -> peintur", function() {deepEqual( Stem("peinture"), "peintur");});
test("peintures -> peintur", function() {deepEqual( Stem("peintures"), "peintur");});
test("pékin -> pékin", function() {deepEqual( Stem("pékin"), "pékin");});
test("pêle -> pêl", function() {deepEqual( Stem("pêle"), "pêl");});
test("pelegrino -> pelegrino", function() {deepEqual( Stem("pelegrino"), "pelegrino");});
test("pèlerinage -> pèlerinag", function() {deepEqual( Stem("pèlerinage"), "pèlerinag");});
test("pèlerinages -> pèlerinag", function() {deepEqual( Stem("pèlerinages"), "pèlerinag");});
test("pèlerine -> pèlerin", function() {deepEqual( Stem("pèlerine"), "pèlerin");});
test("pèlerins -> pèlerin", function() {deepEqual( Stem("pèlerins"), "pèlerin");});
test("pélicans -> pélican", function() {deepEqual( Stem("pélicans"), "pélican");});
test("pelisse -> pel", function() {deepEqual( Stem("pelisse"), "pel");});
test("pelisses -> pel", function() {deepEqual( Stem("pelisses"), "pel");});
test("pelletées -> pellet", function() {deepEqual( Stem("pelletées"), "pellet");});
test("pellico -> pellico", function() {deepEqual( Stem("pellico"), "pellico");});
test("peloton -> peloton", function() {deepEqual( Stem("peloton"), "peloton");});
test("pénal -> pénal", function() {deepEqual( Stem("pénal"), "pénal");});
test("penaud -> penaud", function() {deepEqual( Stem("penaud"), "penaud");});
test("penauds -> penaud", function() {deepEqual( Stem("penauds"), "penaud");});
test("pence -> penc", function() {deepEqual( Stem("pence"), "penc");});
test("pencha -> pench", function() {deepEqual( Stem("pencha"), "pench");});
test("penchaient -> pench", function() {deepEqual( Stem("penchaient"), "pench");});
test("penchant -> pench", function() {deepEqual( Stem("penchant"), "pench");});
test("penché -> pench", function() {deepEqual( Stem("penché"), "pench");});
test("pencher -> pench", function() {deepEqual( Stem("pencher"), "pench");});
test("pend -> pend", function() {deepEqual( Stem("pend"), "pend");});
test("pendable -> pendabl", function() {deepEqual( Stem("pendable"), "pendabl");});
test("pendables -> pendabl", function() {deepEqual( Stem("pendables"), "pendabl");});
test("pendaient -> pend", function() {deepEqual( Stem("pendaient"), "pend");});
test("pendait -> pend", function() {deepEqual( Stem("pendait"), "pend");});
test("pendant -> pend", function() {deepEqual( Stem("pendant"), "pend");});
test("pendante -> pend", function() {deepEqual( Stem("pendante"), "pend");});
test("pendantes -> pend", function() {deepEqual( Stem("pendantes"), "pend");});
test("pendre -> pendr", function() {deepEqual( Stem("pendre"), "pendr");});
test("pendu -> pendu", function() {deepEqual( Stem("pendu"), "pendu");});
test("pendue -> pendu", function() {deepEqual( Stem("pendue"), "pendu");});
test("pendule -> pendul", function() {deepEqual( Stem("pendule"), "pendul");});
test("pendules -> pendul", function() {deepEqual( Stem("pendules"), "pendul");});
test("pendus -> pendus", function() {deepEqual( Stem("pendus"), "pendus");});
test("pénétra -> pénetr", function() {deepEqual( Stem("pénétra"), "pénetr");});
test("pénétrait -> pénetr", function() {deepEqual( Stem("pénétrait"), "pénetr");});
test("pénétrant -> pénetr", function() {deepEqual( Stem("pénétrant"), "pénetr");});
test("pénétration -> pénetr", function() {deepEqual( Stem("pénétration"), "pénetr");});
test("pénètre -> pénetr", function() {deepEqual( Stem("pénètre"), "pénetr");});
test("pénétré -> pénetr", function() {deepEqual( Stem("pénétré"), "pénetr");});
test("pénétrée -> pénetr", function() {deepEqual( Stem("pénétrée"), "pénetr");});
test("pénétrer -> pénetr", function() {deepEqual( Stem("pénétrer"), "pénetr");});
test("pénétrera -> pénetr", function() {deepEqual( Stem("pénétrera"), "pénetr");});
test("pénétrèrent -> pénetr", function() {deepEqual( Stem("pénétrèrent"), "pénetr");});
test("pénible -> pénibl", function() {deepEqual( Stem("pénible"), "pénibl");});
test("péniblement -> pénibl", function() {deepEqual( Stem("péniblement"), "pénibl");});
test("pénibles -> pénibl", function() {deepEqual( Stem("pénibles"), "pénibl");});
test("péninsulaire -> péninsulair", function() {deepEqual( Stem("péninsulaire"), "péninsulair");});
test("peninsular -> peninsular", function() {deepEqual( Stem("peninsular"), "peninsular");});
test("péninsule -> péninsul", function() {deepEqual( Stem("péninsule"), "péninsul");});
test("pénitence -> pénitent", function() {deepEqual( Stem("pénitence"), "pénitent");});
test("pennsylvanie -> pennsylvan", function() {deepEqual( Stem("pennsylvanie"), "pennsylvan");});
test("penny -> penny", function() {deepEqual( Stem("penny"), "penny");});
test("pensa -> pens", function() {deepEqual( Stem("pensa"), "pens");});
test("pensai -> pens", function() {deepEqual( Stem("pensai"), "pens");});
test("pensaient -> pens", function() {deepEqual( Stem("pensaient"), "pens");});
test("pensais -> pens", function() {deepEqual( Stem("pensais"), "pens");});
test("pensait -> pens", function() {deepEqual( Stem("pensait"), "pens");});
test("pensant -> pens", function() {deepEqual( Stem("pensant"), "pens");});
test("pensante -> pens", function() {deepEqual( Stem("pensante"), "pens");});
test("pensants -> pens", function() {deepEqual( Stem("pensants"), "pens");});
test("pensât -> pens", function() {deepEqual( Stem("pensât"), "pens");});
test("pense -> pens", function() {deepEqual( Stem("pense"), "pens");});
test("pensé -> pens", function() {deepEqual( Stem("pensé"), "pens");});
test("pensée -> pens", function() {deepEqual( Stem("pensée"), "pens");});
test("pensées -> pens", function() {deepEqual( Stem("pensées"), "pens");});
test("pensent -> pensent", function() {deepEqual( Stem("pensent"), "pensent");});
test("penser -> pens", function() {deepEqual( Stem("penser"), "pens");});
test("pensera -> pens", function() {deepEqual( Stem("pensera"), "pens");});
test("penserais -> pens", function() {deepEqual( Stem("penserais"), "pens");});
test("penserait -> pens", function() {deepEqual( Stem("penserait"), "pens");});
test("pensèrent -> pens", function() {deepEqual( Stem("pensèrent"), "pens");});
test("penseur -> penseur", function() {deepEqual( Stem("penseur"), "penseur");});
test("pensez -> pens", function() {deepEqual( Stem("pensez"), "pens");});
test("pensif -> pensif", function() {deepEqual( Stem("pensif"), "pensif");});
test("pension -> pension", function() {deepEqual( Stem("pension"), "pension");});
test("pensionnaire -> pensionnair", function() {deepEqual( Stem("pensionnaire"), "pensionnair");});
test("pensive -> pensiv", function() {deepEqual( Stem("pensive"), "pensiv");});
test("pensons -> penson", function() {deepEqual( Stem("pensons"), "penson");});
test("pentagone -> pentagon", function() {deepEqual( Stem("pentagone"), "pentagon");});
test("pentateuque -> pentateuqu", function() {deepEqual( Stem("pentateuque"), "pentateuqu");});
test("pente -> pent", function() {deepEqual( Stem("pente"), "pent");});
test("pentes -> pent", function() {deepEqual( Stem("pentes"), "pent");});
test("pénurie -> pénur", function() {deepEqual( Stem("pénurie"), "pénur");});
test("pépé -> pep", function() {deepEqual( Stem("pépé"), "pep");});
test("pépites -> pépit", function() {deepEqual( Stem("pépites"), "pépit");});
test("pequigny -> pequigny", function() {deepEqual( Stem("pequigny"), "pequigny");});
test("per -> per", function() {deepEqual( Stem("per"), "per");});
test("perçaient -> perc", function() {deepEqual( Stem("perçaient"), "perc");});
test("perçait -> perc", function() {deepEqual( Stem("perçait"), "perc");});
test("perçant -> perc", function() {deepEqual( Stem("perçant"), "perc");});
test("perçante -> perc", function() {deepEqual( Stem("perçante"), "perc");});
test("perce -> perc", function() {deepEqual( Stem("perce"), "perc");});
test("percé -> perc", function() {deepEqual( Stem("percé"), "perc");});
test("percepteur -> percepteur", function() {deepEqual( Stem("percepteur"), "percepteur");});
test("percer -> perc", function() {deepEqual( Stem("percer"), "perc");});
test("percèrent -> perc", function() {deepEqual( Stem("percèrent"), "perc");});
test("perche -> perch", function() {deepEqual( Stem("perche"), "perch");});
test("perché -> perch", function() {deepEqual( Stem("perché"), "perch");});
test("percussion -> percuss", function() {deepEqual( Stem("percussion"), "percuss");});
test("perd -> perd", function() {deepEqual( Stem("perd"), "perd");});
test("perdaient -> perd", function() {deepEqual( Stem("perdaient"), "perd");});
test("perdais -> perd", function() {deepEqual( Stem("perdais"), "perd");});
test("perdait -> perd", function() {deepEqual( Stem("perdait"), "perd");});
test("perdant -> perd", function() {deepEqual( Stem("perdant"), "perd");});
test("perde -> perd", function() {deepEqual( Stem("perde"), "perd");});
test("perdent -> perdent", function() {deepEqual( Stem("perdent"), "perdent");});
test("perdez -> perd", function() {deepEqual( Stem("perdez"), "perd");});
test("perdirent -> perd", function() {deepEqual( Stem("perdirent"), "perd");});
test("perdit -> perd", function() {deepEqual( Stem("perdit"), "perd");});
test("perdition -> perdit", function() {deepEqual( Stem("perdition"), "perdit");});
test("perdons -> perdon", function() {deepEqual( Stem("perdons"), "perdon");});
test("perdra -> perdr", function() {deepEqual( Stem("perdra"), "perdr");});
test("perdrai -> perdr", function() {deepEqual( Stem("perdrai"), "perdr");});
test("perdrais -> perdr", function() {deepEqual( Stem("perdrais"), "perdr");});
test("perdrait -> perdr", function() {deepEqual( Stem("perdrait"), "perdr");});
test("perdras -> perdr", function() {deepEqual( Stem("perdras"), "perdr");});
test("perdre -> perdr", function() {deepEqual( Stem("perdre"), "perdr");});
test("perdreau -> perdreau", function() {deepEqual( Stem("perdreau"), "perdreau");});
test("perdriez -> perdr", function() {deepEqual( Stem("perdriez"), "perdr");});
test("perdrix -> perdrix", function() {deepEqual( Stem("perdrix"), "perdrix");});
test("perds -> perd", function() {deepEqual( Stem("perds"), "perd");});
test("perdu -> perdu", function() {deepEqual( Stem("perdu"), "perdu");});
test("perdue -> perdu", function() {deepEqual( Stem("perdue"), "perdu");});
test("perdus -> perdus", function() {deepEqual( Stem("perdus"), "perdus");});
test("père -> per", function() {deepEqual( Stem("père"), "per");});
test("pereire -> pereir", function() {deepEqual( Stem("pereire"), "pereir");});
test("pères -> per", function() {deepEqual( Stem("pères"), "per");});
test("perfection -> perfect", function() {deepEqual( Stem("perfection"), "perfect");});
test("perfectionner -> perfection", function() {deepEqual( Stem("perfectionner"), "perfection");});
test("pergolèse -> pergoles", function() {deepEqual( Stem("pergolèse"), "pergoles");});
test("péri -> per", function() {deepEqual( Stem("péri"), "per");});
test("péril -> péril", function() {deepEqual( Stem("péril"), "péril");});
test("périlleux -> périll", function() {deepEqual( Stem("périlleux"), "périll");});
test("périls -> péril", function() {deepEqual( Stem("périls"), "péril");});
test("périmètre -> périmetr", function() {deepEqual( Stem("périmètre"), "périmetr");});
test("période -> périod", function() {deepEqual( Stem("période"), "périod");});
test("périodique -> périod", function() {deepEqual( Stem("périodique"), "périod");});
test("périr -> per", function() {deepEqual( Stem("périr"), "per");});
test("périraient -> per", function() {deepEqual( Stem("périraient"), "per");});
test("péris -> per", function() {deepEqual( Stem("péris"), "per");});
test("périsse -> per", function() {deepEqual( Stem("périsse"), "per");});
test("périssent -> per", function() {deepEqual( Stem("périssent"), "per");});
test("périssez -> per", function() {deepEqual( Stem("périssez"), "per");});
test("péristyle -> péristyl", function() {deepEqual( Stem("péristyle"), "péristyl");});
test("péristyles -> péristyl", function() {deepEqual( Stem("péristyles"), "péristyl");});
test("périt -> per", function() {deepEqual( Stem("périt"), "per");});
test("perles -> perl", function() {deepEqual( Stem("perles"), "perl");});
test("permanence -> permanent", function() {deepEqual( Stem("permanence"), "permanent");});
test("permanente -> permanent", function() {deepEqual( Stem("permanente"), "permanent");});
test("permet -> permet", function() {deepEqual( Stem("permet"), "permet");});
test("permets -> permet", function() {deepEqual( Stem("permets"), "permet");});
test("permettaient -> permet", function() {deepEqual( Stem("permettaient"), "permet");});
test("permettait -> permet", function() {deepEqual( Stem("permettait"), "permet");});
test("permettant -> permet", function() {deepEqual( Stem("permettant"), "permet");});
test("permette -> permet", function() {deepEqual( Stem("permette"), "permet");});
test("permettent -> permettent", function() {deepEqual( Stem("permettent"), "permettent");});
test("permettez -> permet", function() {deepEqual( Stem("permettez"), "permet");});
test("permettra -> permettr", function() {deepEqual( Stem("permettra"), "permettr");});
test("permettrai -> permettr", function() {deepEqual( Stem("permettrai"), "permettr");});
test("permettrait -> permettr", function() {deepEqual( Stem("permettrait"), "permettr");});
test("permettre -> permettr", function() {deepEqual( Stem("permettre"), "permettr");});
test("permettrez -> permettr", function() {deepEqual( Stem("permettrez"), "permettr");});
test("permettront -> permettront", function() {deepEqual( Stem("permettront"), "permettront");});
test("permirent -> perm", function() {deepEqual( Stem("permirent"), "perm");});
test("permis -> perm", function() {deepEqual( Stem("permis"), "perm");});
test("permise -> permis", function() {deepEqual( Stem("permise"), "permis");});
test("permission -> permiss", function() {deepEqual( Stem("permission"), "permiss");});
test("permit -> perm", function() {deepEqual( Stem("permit"), "perm");});
test("permît -> perm", function() {deepEqual( Stem("permît"), "perm");});
test("pernice -> pernic", function() {deepEqual( Stem("pernice"), "pernic");});
test("pérorait -> péror", function() {deepEqual( Stem("pérorait"), "péror");});
test("péroré -> péror", function() {deepEqual( Stem("péroré"), "péror");});
test("pérou -> pérou", function() {deepEqual( Stem("pérou"), "pérou");});
test("pérouse -> pérous", function() {deepEqual( Stem("pérouse"), "pérous");});
test("perpendiculairement -> perpendiculair", function() {deepEqual( Stem("perpendiculairement"), "perpendiculair");});
test("perpétuelle -> perpétuel", function() {deepEqual( Stem("perpétuelle"), "perpétuel");});
test("perpétuels -> perpétuel", function() {deepEqual( Stem("perpétuels"), "perpétuel");});
test("perplexités -> perplex", function() {deepEqual( Stem("perplexités"), "perplex");});
test("perqué -> perqu", function() {deepEqual( Stem("perqué"), "perqu");});
test("perquisition -> perquisit", function() {deepEqual( Stem("perquisition"), "perquisit");});
test("perron -> perron", function() {deepEqual( Stem("perron"), "perron");});
test("perruque -> perruqu", function() {deepEqual( Stem("perruque"), "perruqu");});
test("perruques -> perruqu", function() {deepEqual( Stem("perruques"), "perruqu");});
test("persans -> persan", function() {deepEqual( Stem("persans"), "persan");});
test("persécutait -> persécut", function() {deepEqual( Stem("persécutait"), "persécut");});
test("persécute -> persécut", function() {deepEqual( Stem("persécute"), "persécut");});
test("persécuté -> persécut", function() {deepEqual( Stem("persécuté"), "persécut");});
test("persécuterait -> persécut", function() {deepEqual( Stem("persécuterait"), "persécut");});
test("persécutés -> persécut", function() {deepEqual( Stem("persécutés"), "persécut");});
test("persécutions -> persécu", function() {deepEqual( Stem("persécutions"), "persécu");});
test("perses -> pers", function() {deepEqual( Stem("perses"), "pers");});
test("persienne -> persien", function() {deepEqual( Stem("persienne"), "persien");});
test("persiennes -> persien", function() {deepEqual( Stem("persiennes"), "persien");});
test("persiflage -> persiflag", function() {deepEqual( Stem("persiflage"), "persiflag");});
test("persiflèrent -> persifl", function() {deepEqual( Stem("persiflèrent"), "persifl");});
test("persista -> persist", function() {deepEqual( Stem("persista"), "persist");});
test("persistance -> persist", function() {deepEqual( Stem("persistance"), "persist");});
test("personnage -> personnag", function() {deepEqual( Stem("personnage"), "personnag");});
test("personnages -> personnag", function() {deepEqual( Stem("personnages"), "personnag");});
test("personnalité -> personnal", function() {deepEqual( Stem("personnalité"), "personnal");});
test("personne -> person", function() {deepEqual( Stem("personne"), "person");});
test("personnel -> personnel", function() {deepEqual( Stem("personnel"), "personnel");});
test("personnelle -> personnel", function() {deepEqual( Stem("personnelle"), "personnel");});
test("personnellement -> personnel", function() {deepEqual( Stem("personnellement"), "personnel");});
test("personnelles -> personnel", function() {deepEqual( Stem("personnelles"), "personnel");});
test("personnels -> personnel", function() {deepEqual( Stem("personnels"), "personnel");});
test("personnes -> person", function() {deepEqual( Stem("personnes"), "person");});
test("personnification -> personnif", function() {deepEqual( Stem("personnification"), "personnif");});
test("personnifiée -> personnifi", function() {deepEqual( Stem("personnifiée"), "personnifi");});
test("perspective -> perspect", function() {deepEqual( Stem("perspective"), "perspect");});
test("perspectives -> perspect", function() {deepEqual( Stem("perspectives"), "perspect");});
test("perspicacité -> perspicac", function() {deepEqual( Stem("perspicacité"), "perspicac");});
test("persuadé -> persuad", function() {deepEqual( Stem("persuadé"), "persuad");});
test("persuadée -> persuad", function() {deepEqual( Stem("persuadée"), "persuad");});
test("persuader -> persuad", function() {deepEqual( Stem("persuader"), "persuad");});
test("persuasion -> persuas", function() {deepEqual( Stem("persuasion"), "persuas");});
test("perte -> pert", function() {deepEqual( Stem("perte"), "pert");});
test("pertes -> pert", function() {deepEqual( Stem("pertes"), "pert");});
test("pertuis -> pertuis", function() {deepEqual( Stem("pertuis"), "pertuis");});
test("perturbations -> perturb", function() {deepEqual( Stem("perturbations"), "perturb");});
test("péruvien -> péruvien", function() {deepEqual( Stem("péruvien"), "péruvien");});
test("pervers -> perver", function() {deepEqual( Stem("pervers"), "perver");});
test("perversité -> pervers", function() {deepEqual( Stem("perversité"), "pervers");});
test("pervertisse -> pervert", function() {deepEqual( Stem("pervertisse"), "pervert");});
test("pesait -> pes", function() {deepEqual( Stem("pesait"), "pes");});
test("pesant -> pes", function() {deepEqual( Stem("pesant"), "pes");});
test("pesante -> pes", function() {deepEqual( Stem("pesante"), "pes");});
test("pesanteur -> pesanteur", function() {deepEqual( Stem("pesanteur"), "pesanteur");});
test("pesants -> pes", function() {deepEqual( Stem("pesants"), "pes");});
test("pèse -> pes", function() {deepEqual( Stem("pèse"), "pes");});
test("pesé -> pes", function() {deepEqual( Stem("pesé"), "pes");});
test("peser -> pes", function() {deepEqual( Stem("peser"), "pes");});
test("pesés -> pes", function() {deepEqual( Stem("pesés"), "pes");});
test("pesez -> pes", function() {deepEqual( Stem("pesez"), "pes");});
test("pessimisme -> pessim", function() {deepEqual( Stem("pessimisme"), "pessim");});
test("peste -> pest", function() {deepEqual( Stem("peste"), "pest");});
test("pester -> pest", function() {deepEqual( Stem("pester"), "pest");});
test("pétaudière -> pétaudi", function() {deepEqual( Stem("pétaudière"), "pétaudi");});
test("pétillante -> pétill", function() {deepEqual( Stem("pétillante"), "pétill");});
test("petit -> pet", function() {deepEqual( Stem("petit"), "pet");});
test("petite -> petit", function() {deepEqual( Stem("petite"), "petit");});
test("petites -> petit", function() {deepEqual( Stem("petites"), "petit");});
test("petitesse -> petitess", function() {deepEqual( Stem("petitesse"), "petitess");});
test("petitesses -> petitess", function() {deepEqual( Stem("petitesses"), "petitess");});
test("pétition -> pétit", function() {deepEqual( Stem("pétition"), "pétit");});
test("pétitions -> pétit", function() {deepEqual( Stem("pétitions"), "pétit");});
test("petits -> petit", function() {deepEqual( Stem("petits"), "petit");});
test("pétrarque -> pétrarqu", function() {deepEqual( Stem("pétrarque"), "pétrarqu");});
test("pétrifié -> pétrifi", function() {deepEqual( Stem("pétrifié"), "pétrifi");});
test("pétrifiée -> pétrifi", function() {deepEqual( Stem("pétrifiée"), "pétrifi");});
test("pétrole -> pétrol", function() {deepEqual( Stem("pétrole"), "pétrol");});
test("pétrone -> pétron", function() {deepEqual( Stem("pétrone"), "pétron");});
test("petto -> petto", function() {deepEqual( Stem("petto"), "petto");});
test("pétulance -> pétul", function() {deepEqual( Stem("pétulance"), "pétul");});
test("peu -> peu", function() {deepEqual( Stem("peu"), "peu");});
test("peuple -> peupl", function() {deepEqual( Stem("peuple"), "peupl");});
test("peuplé -> peupl", function() {deepEqual( Stem("peuplé"), "peupl");});
test("peuplée -> peupl", function() {deepEqual( Stem("peuplée"), "peupl");});
test("peuplent -> peuplent", function() {deepEqual( Stem("peuplent"), "peuplent");});
test("peuples -> peupl", function() {deepEqual( Stem("peuples"), "peupl");});
test("peuplés -> peupl", function() {deepEqual( Stem("peuplés"), "peupl");});
test("peuplier -> peupli", function() {deepEqual( Stem("peuplier"), "peupli");});
test("peur -> peur", function() {deepEqual( Stem("peur"), "peur");});
test("peureux -> peureux", function() {deepEqual( Stem("peureux"), "peureux");});
test("peurs -> peur", function() {deepEqual( Stem("peurs"), "peur");});
test("peut -> peut", function() {deepEqual( Stem("peut"), "peut");});
test("peuvent -> peuvent", function() {deepEqual( Stem("peuvent"), "peuvent");});
test("peux -> peux", function() {deepEqual( Stem("peux"), "peux");});
test("pharsale -> pharsal", function() {deepEqual( Stem("pharsale"), "pharsal");});
test("pherson -> pherson", function() {deepEqual( Stem("pherson"), "pherson");});
test("phileas -> phil", function() {deepEqual( Stem("phileas"), "phil");});
test("philippe -> philipp", function() {deepEqual( Stem("philippe"), "philipp");});
test("philosophant -> philosoph", function() {deepEqual( Stem("philosophant"), "philosoph");});
test("philosophe -> philosoph", function() {deepEqual( Stem("philosophe"), "philosoph");});
test("philosophes -> philosoph", function() {deepEqual( Stem("philosophes"), "philosoph");});
test("philosophie -> philosoph", function() {deepEqual( Stem("philosophie"), "philosoph");});
test("philosophique -> philosoph", function() {deepEqual( Stem("philosophique"), "philosoph");});
test("philosophiquement -> philosoph", function() {deepEqual( Stem("philosophiquement"), "philosoph");});
test("philosophiques -> philosoph", function() {deepEqual( Stem("philosophiques"), "philosoph");});
test("phosphorescentes -> phosphorescent", function() {deepEqual( Stem("phosphorescentes"), "phosphorescent");});
test("photographie -> photograph", function() {deepEqual( Stem("photographie"), "photograph");});
test("phrase -> phras", function() {deepEqual( Stem("phrase"), "phras");});
test("phrases -> phras", function() {deepEqual( Stem("phrases"), "phras");});
test("physiognomoniques -> physiognomon", function() {deepEqual( Stem("physiognomoniques"), "physiognomon");});
test("physionomie -> physionom", function() {deepEqual( Stem("physionomie"), "physionom");});
test("physionomies -> physionom", function() {deepEqual( Stem("physionomies"), "physionom");});
test("physionomistes -> physionom", function() {deepEqual( Stem("physionomistes"), "physionom");});
test("physique -> physiqu", function() {deepEqual( Stem("physique"), "physiqu");});
test("physiquement -> physiqu", function() {deepEqual( Stem("physiquement"), "physiqu");});
test("physiques -> physiqu", function() {deepEqual( Stem("physiques"), "physiqu");});
test("piacere -> piacer", function() {deepEqual( Stem("piacere"), "piacer");});
test("pianiste -> pianist", function() {deepEqual( Stem("pianiste"), "pianist");});
test("piano -> piano", function() {deepEqual( Stem("piano"), "piano");});
test("pianos -> pianos", function() {deepEqual( Stem("pianos"), "pianos");});
test("pic -> pic", function() {deepEqual( Stem("pic"), "pic");});
test("pichegru -> pichegru", function() {deepEqual( Stem("pichegru"), "pichegru");});
test("pics -> pic", function() {deepEqual( Stem("pics"), "pic");});
test("pie -> pi", function() {deepEqual( Stem("pie"), "pi");});
test("pièce -> piec", function() {deepEqual( Stem("pièce"), "piec");});
test("pièces -> piec", function() {deepEqual( Stem("pièces"), "piec");});
test("piécettes -> piécet", function() {deepEqual( Stem("piécettes"), "piécet");});
test("pied -> pied", function() {deepEqual( Stem("pied"), "pied");});
test("pieds -> pied", function() {deepEqual( Stem("pieds"), "pied");});
test("piège -> pieg", function() {deepEqual( Stem("piège"), "pieg");});
test("pieges -> pieg", function() {deepEqual( Stem("pieges"), "pieg");});
test("pièges -> pieg", function() {deepEqual( Stem("pièges"), "pieg");});
test("piémont -> piémont", function() {deepEqual( Stem("piémont"), "piémont");});
test("piémontais -> piémont", function() {deepEqual( Stem("piémontais"), "piémont");});
test("piémontaise -> piémontais", function() {deepEqual( Stem("piémontaise"), "piémontais");});
test("pier -> pi", function() {deepEqual( Stem("pier"), "pi");});
test("pierre -> pierr", function() {deepEqual( Stem("pierre"), "pierr");});
test("pierres -> pierr", function() {deepEqual( Stem("pierres"), "pierr");});
test("piété -> piet", function() {deepEqual( Stem("piété"), "piet");});
test("piéton -> piéton", function() {deepEqual( Stem("piéton"), "piéton");});
test("piétons -> piéton", function() {deepEqual( Stem("piétons"), "piéton");});
test("pietragrua -> pietragru", function() {deepEqual( Stem("pietragrua"), "pietragru");});
test("pietranera -> pietran", function() {deepEqual( Stem("pietranera"), "pietran");});
test("piètre -> pietr", function() {deepEqual( Stem("piètre"), "pietr");});
test("pieuse -> pieus", function() {deepEqual( Stem("pieuse"), "pieus");});
test("pieusement -> pieus", function() {deepEqual( Stem("pieusement"), "pieus");});
test("pieuses -> pieus", function() {deepEqual( Stem("pieuses"), "pieus");});
test("pieux -> pieux", function() {deepEqual( Stem("pieux"), "pieux");});
test("pigeon -> pigeon", function() {deepEqual( Stem("pigeon"), "pigeon");});
test("pigeons -> pigeon", function() {deepEqual( Stem("pigeons"), "pigeon");});
test("pilastre -> pilastr", function() {deepEqual( Stem("pilastre"), "pilastr");});
test("pile -> pil", function() {deepEqual( Stem("pile"), "pil");});
test("pilé -> pil", function() {deepEqual( Stem("pilé"), "pil");});
test("piler -> pil", function() {deepEqual( Stem("piler"), "pil");});
test("pilier -> pili", function() {deepEqual( Stem("pilier"), "pili");});
test("piliers -> pili", function() {deepEqual( Stem("piliers"), "pili");});
test("pillage -> pillag", function() {deepEqual( Stem("pillage"), "pillag");});
test("pillages -> pillag", function() {deepEqual( Stem("pillages"), "pillag");});
test("pillaient -> pill", function() {deepEqual( Stem("pillaient"), "pill");});
test("pillaji -> pillaj", function() {deepEqual( Stem("pillaji"), "pillaj");});
test("pille -> pill", function() {deepEqual( Stem("pille"), "pill");});
test("pillé -> pill", function() {deepEqual( Stem("pillé"), "pill");});
test("pillée -> pill", function() {deepEqual( Stem("pillée"), "pill");});
test("pillent -> pillent", function() {deepEqual( Stem("pillent"), "pillent");});
test("pillés -> pill", function() {deepEqual( Stem("pillés"), "pill");});
test("pilori -> pilor", function() {deepEqual( Stem("pilori"), "pilor");});
test("pilote -> pilot", function() {deepEqual( Stem("pilote"), "pilot");});
test("pilotes -> pilot", function() {deepEqual( Stem("pilotes"), "pilot");});
test("pimentel -> pimentel", function() {deepEqual( Stem("pimentel"), "pimentel");});
test("pinceau -> pinceau", function() {deepEqual( Stem("pinceau"), "pinceau");});
test("pincée -> pinc", function() {deepEqual( Stem("pincée"), "pinc");});
test("pincette -> pincet", function() {deepEqual( Stem("pincette"), "pincet");});
test("pintes -> pint", function() {deepEqual( Stem("pintes"), "pint");});
test("piochant -> pioch", function() {deepEqual( Stem("piochant"), "pioch");});
test("pioneer -> pione", function() {deepEqual( Stem("pioneer"), "pione");});
test("pipe -> pip", function() {deepEqual( Stem("pipe"), "pip");});
test("pipes -> pip", function() {deepEqual( Stem("pipes"), "pip");});
test("piqua -> piqu", function() {deepEqual( Stem("piqua"), "piqu");});
test("piquait -> piqu", function() {deepEqual( Stem("piquait"), "piqu");});
test("piquant -> piqu", function() {deepEqual( Stem("piquant"), "piqu");});
test("piquante -> piqu", function() {deepEqual( Stem("piquante"), "piqu");});
test("piquantes -> piqu", function() {deepEqual( Stem("piquantes"), "piqu");});
test("pique -> piqu", function() {deepEqual( Stem("pique"), "piqu");});
test("piqué -> piqu", function() {deepEqual( Stem("piqué"), "piqu");});
test("piquée -> piqu", function() {deepEqual( Stem("piquée"), "piqu");});
test("piquer -> piqu", function() {deepEqual( Stem("piquer"), "piqu");});
test("piquerait -> piqu", function() {deepEqual( Stem("piquerait"), "piqu");});
test("piqués -> piqu", function() {deepEqual( Stem("piqués"), "piqu");});
test("piquez -> piqu", function() {deepEqual( Stem("piquez"), "piqu");});
test("pirard -> pirard", function() {deepEqual( Stem("pirard"), "pirard");});
test("pirate -> pirat", function() {deepEqual( Stem("pirate"), "pirat");});
test("pire -> pir", function() {deepEqual( Stem("pire"), "pir");});
test("pis -> pis", function() {deepEqual( Stem("pis"), "pis");});
test("piste -> pist", function() {deepEqual( Stem("piste"), "pist");});
test("pistolet -> pistolet", function() {deepEqual( Stem("pistolet"), "pistolet");});
test("pistolets -> pistolet", function() {deepEqual( Stem("pistolets"), "pistolet");});
test("piston -> piston", function() {deepEqual( Stem("piston"), "piston");});
test("pistons -> piston", function() {deepEqual( Stem("pistons"), "piston");});
test("pitance -> pitanc", function() {deepEqual( Stem("pitance"), "pitanc");});
test("piteuse -> piteux", function() {deepEqual( Stem("piteuse"), "piteux");});
test("piteusement -> piteux", function() {deepEqual( Stem("piteusement"), "piteux");});
test("piteux -> piteux", function() {deepEqual( Stem("piteux"), "piteux");});
test("pitié -> piti", function() {deepEqual( Stem("pitié"), "piti");});
test("pitoyable -> pitoi", function() {deepEqual( Stem("pitoyable"), "pitoi");});
test("pitt -> pitt", function() {deepEqual( Stem("pitt"), "pitt");});
test("pittoresque -> pittoresqu", function() {deepEqual( Stem("pittoresque"), "pittoresqu");});
test("pittoresques -> pittoresqu", function() {deepEqual( Stem("pittoresques"), "pittoresqu");});
test("pittsburg -> pittsburg", function() {deepEqual( Stem("pittsburg"), "pittsburg");});
test("più -> più", function() {deepEqual( Stem("più"), "più");});
test("plaça -> plac", function() {deepEqual( Stem("plaça"), "plac");});
test("plaçait -> plac", function() {deepEqual( Stem("plaçait"), "plac");});
test("plaçant -> plac", function() {deepEqual( Stem("plaçant"), "plac");});
test("placard -> placard", function() {deepEqual( Stem("placard"), "placard");});
test("place -> plac", function() {deepEqual( Stem("place"), "plac");});
test("placé -> plac", function() {deepEqual( Stem("placé"), "plac");});
test("placée -> plac", function() {deepEqual( Stem("placée"), "plac");});
test("placées -> plac", function() {deepEqual( Stem("placées"), "plac");});
test("placer -> plac", function() {deepEqual( Stem("placer"), "plac");});
test("placera -> plac", function() {deepEqual( Stem("placera"), "plac");});
test("placerai -> plac", function() {deepEqual( Stem("placerai"), "plac");});
test("placerait -> plac", function() {deepEqual( Stem("placerait"), "plac");});
test("placèrent -> plac", function() {deepEqual( Stem("placèrent"), "plac");});
test("placerez -> plac", function() {deepEqual( Stem("placerez"), "plac");});
test("placers -> placer", function() {deepEqual( Stem("placers"), "placer");});
test("places -> plac", function() {deepEqual( Stem("places"), "plac");});
test("placés -> plac", function() {deepEqual( Stem("placés"), "plac");});
test("placez -> plac", function() {deepEqual( Stem("placez"), "plac");});
test("placidité -> placid", function() {deepEqual( Stem("placidité"), "placid");});
test("plafond -> plafond", function() {deepEqual( Stem("plafond"), "plafond");});
test("plafonds -> plafond", function() {deepEqual( Stem("plafonds"), "plafond");});
test("plaida -> plaid", function() {deepEqual( Stem("plaida"), "plaid");});
test("plaidait -> plaid", function() {deepEqual( Stem("plaidait"), "plaid");});
test("plaider -> plaid", function() {deepEqual( Stem("plaider"), "plaid");});
test("plaidoirie -> plaidoir", function() {deepEqual( Stem("plaidoirie"), "plaidoir");});
test("plaie -> plai", function() {deepEqual( Stem("plaie"), "plai");});
test("plaignait -> plaign", function() {deepEqual( Stem("plaignait"), "plaign");});
test("plaignant -> plaign", function() {deepEqual( Stem("plaignant"), "plaign");});
test("plaignants -> plaign", function() {deepEqual( Stem("plaignants"), "plaign");});
test("plaignez -> plaign", function() {deepEqual( Stem("plaignez"), "plaign");});
test("plaignirent -> plaign", function() {deepEqual( Stem("plaignirent"), "plaign");});
test("plaignit -> plaign", function() {deepEqual( Stem("plaignit"), "plaign");});
test("plain -> plain", function() {deepEqual( Stem("plain"), "plain");});
test("plaindrai -> plaindr", function() {deepEqual( Stem("plaindrai"), "plaindr");});
test("plaindrais -> plaindr", function() {deepEqual( Stem("plaindrais"), "plaindr");});
test("plaindre -> plaindr", function() {deepEqual( Stem("plaindre"), "plaindr");});
test("plaine -> plain", function() {deepEqual( Stem("plaine"), "plain");});
test("plaines -> plain", function() {deepEqual( Stem("plaines"), "plain");});
test("plains -> plain", function() {deepEqual( Stem("plains"), "plain");});
test("plaint -> plaint", function() {deepEqual( Stem("plaint"), "plaint");});
test("plainte -> plaint", function() {deepEqual( Stem("plainte"), "plaint");});
test("plaintes -> plaint", function() {deepEqual( Stem("plaintes"), "plaint");});
test("plaintive -> plaintiv", function() {deepEqual( Stem("plaintive"), "plaintiv");});
test("plaints -> plaint", function() {deepEqual( Stem("plaints"), "plaint");});
test("plaira -> plair", function() {deepEqual( Stem("plaira"), "plair");});
test("plairait -> plair", function() {deepEqual( Stem("plairait"), "plair");});
test("plaire -> plair", function() {deepEqual( Stem("plaire"), "plair");});
test("plais -> plais", function() {deepEqual( Stem("plais"), "plais");});
test("plaisaient -> plais", function() {deepEqual( Stem("plaisaient"), "plais");});
test("plaisait -> plais", function() {deepEqual( Stem("plaisait"), "plais");});
test("plaisamment -> plais", function() {deepEqual( Stem("plaisamment"), "plais");});
test("plaisance -> plaisanc", function() {deepEqual( Stem("plaisance"), "plaisanc");});
test("plaisant -> plais", function() {deepEqual( Stem("plaisant"), "plais");});
test("plaisanta -> plaisant", function() {deepEqual( Stem("plaisanta"), "plaisant");});
test("plaisantaient -> plaisant", function() {deepEqual( Stem("plaisantaient"), "plaisant");});
test("plaisantait -> plaisant", function() {deepEqual( Stem("plaisantait"), "plaisant");});
test("plaisantant -> plaisant", function() {deepEqual( Stem("plaisantant"), "plaisant");});
test("plaisantât -> plaisant", function() {deepEqual( Stem("plaisantât"), "plaisant");});
test("plaisante -> plais", function() {deepEqual( Stem("plaisante"), "plais");});
test("plaisanté -> plaisant", function() {deepEqual( Stem("plaisanté"), "plaisant");});
test("plaisantent -> plaisantent", function() {deepEqual( Stem("plaisantent"), "plaisantent");});
test("plaisanter -> plaisant", function() {deepEqual( Stem("plaisanter"), "plaisant");});
test("plaisanterie -> plaisanter", function() {deepEqual( Stem("plaisanterie"), "plaisanter");});
test("plaisanteries -> plaisanter", function() {deepEqual( Stem("plaisanteries"), "plaisanter");});
test("plaisantes -> plais", function() {deepEqual( Stem("plaisantes"), "plais");});
test("plaisants -> plais", function() {deepEqual( Stem("plaisants"), "plais");});
test("plaise -> plais", function() {deepEqual( Stem("plaise"), "plais");});
test("plaisent -> plaisent", function() {deepEqual( Stem("plaisent"), "plaisent");});
test("plaisir -> plais", function() {deepEqual( Stem("plaisir"), "plais");});
test("plaisirs -> plaisir", function() {deepEqual( Stem("plaisirs"), "plaisir");});
test("plaît -> plaît", function() {deepEqual( Stem("plaît"), "plaît");});
test("plan -> plan", function() {deepEqual( Stem("plan"), "plan");});
test("planait -> plan", function() {deepEqual( Stem("planait"), "plan");});
test("planche -> planch", function() {deepEqual( Stem("planche"), "planch");});
test("plancher -> planch", function() {deepEqual( Stem("plancher"), "planch");});
test("planches -> planch", function() {deepEqual( Stem("planches"), "planch");});
test("planchette -> planchet", function() {deepEqual( Stem("planchette"), "planchet");});
test("planisphère -> planispher", function() {deepEqual( Stem("planisphère"), "planispher");});
test("plans -> plan", function() {deepEqual( Stem("plans"), "plan");});
test("plant -> plant", function() {deepEqual( Stem("plant"), "plant");});
test("planta -> plant", function() {deepEqual( Stem("planta"), "plant");});
test("plantation -> plantat", function() {deepEqual( Stem("plantation"), "plantat");});
test("plantations -> plantat", function() {deepEqual( Stem("plantations"), "plantat");});
test("plante -> plant", function() {deepEqual( Stem("plante"), "plant");});
test("planté -> plant", function() {deepEqual( Stem("planté"), "plant");});
test("planter -> plant", function() {deepEqual( Stem("planter"), "plant");});
test("planterez -> plant", function() {deepEqual( Stem("planterez"), "plant");});
test("planterons -> plant", function() {deepEqual( Stem("planterons"), "plant");});
test("plantes -> plant", function() {deepEqual( Stem("plantes"), "plant");});
test("plantés -> plant", function() {deepEqual( Stem("plantés"), "plant");});
test("plantiez -> plant", function() {deepEqual( Stem("plantiez"), "plant");});
test("plaque -> plaqu", function() {deepEqual( Stem("plaque"), "plaqu");});
test("plaques -> plaqu", function() {deepEqual( Stem("plaques"), "plaqu");});
test("plastron -> plastron", function() {deepEqual( Stem("plastron"), "plastron");});
test("plat -> plat", function() {deepEqual( Stem("plat"), "plat");});
test("platanes -> platan", function() {deepEqual( Stem("platanes"), "platan");});
test("plate -> plat", function() {deepEqual( Stem("plate"), "plat");});
test("plateau -> plateau", function() {deepEqual( Stem("plateau"), "plateau");});
test("platement -> plat", function() {deepEqual( Stem("platement"), "plat");});
test("plates -> plat", function() {deepEqual( Stem("plates"), "plat");});
test("platitude -> platitud", function() {deepEqual( Stem("platitude"), "platitud");});
test("platitudes -> platitud", function() {deepEqual( Stem("platitudes"), "platitud");});
test("platonique -> platon", function() {deepEqual( Stem("platonique"), "platon");});
test("plâtre -> plâtr", function() {deepEqual( Stem("plâtre"), "plâtr");});
test("plats -> plat", function() {deepEqual( Stem("plats"), "plat");});
test("platte -> platt", function() {deepEqual( Stem("platte"), "platt");});
test("plausible -> plausibl", function() {deepEqual( Stem("plausible"), "plausibl");});
test("please -> pleas", function() {deepEqual( Stem("please"), "pleas");});
test("plébéien -> plébéien", function() {deepEqual( Stem("plébéien"), "plébéien");});
test("plébéiennes -> plébéien", function() {deepEqual( Stem("plébéiennes"), "plébéien");});
test("plébéiens -> plébéien", function() {deepEqual( Stem("plébéiens"), "plébéien");});
test("plein -> plein", function() {deepEqual( Stem("plein"), "plein");});
test("pleine -> plein", function() {deepEqual( Stem("pleine"), "plein");});
test("pleinement -> plein", function() {deepEqual( Stem("pleinement"), "plein");});
test("pleines -> plein", function() {deepEqual( Stem("pleines"), "plein");});
test("pleins -> plein", function() {deepEqual( Stem("pleins"), "plein");});
test("pleura -> pleur", function() {deepEqual( Stem("pleura"), "pleur");});
test("pleurait -> pleur", function() {deepEqual( Stem("pleurait"), "pleur");});
test("pleurant -> pleur", function() {deepEqual( Stem("pleurant"), "pleur");});
test("pleure -> pleur", function() {deepEqual( Stem("pleure"), "pleur");});
test("pleuré -> pleur", function() {deepEqual( Stem("pleuré"), "pleur");});
test("pleurer -> pleur", function() {deepEqual( Stem("pleurer"), "pleur");});
test("pleurera -> pleur", function() {deepEqual( Stem("pleurera"), "pleur");});
test("pleurerait -> pleur", function() {deepEqual( Stem("pleurerait"), "pleur");});
test("pleurèrent -> pleur", function() {deepEqual( Stem("pleurèrent"), "pleur");});
test("pleureur -> pleureur", function() {deepEqual( Stem("pleureur"), "pleureur");});
test("pleurez -> pleur", function() {deepEqual( Stem("pleurez"), "pleur");});
test("pleurs -> pleur", function() {deepEqual( Stem("pleurs"), "pleur");});
test("pleutre -> pleutr", function() {deepEqual( Stem("pleutre"), "pleutr");});
test("pleuvaient -> pleuv", function() {deepEqual( Stem("pleuvaient"), "pleuv");});
test("pleuvait -> pleuv", function() {deepEqual( Stem("pleuvait"), "pleuv");});
test("pleuvent -> pleuvent", function() {deepEqual( Stem("pleuvent"), "pleuvent");});
test("pli -> pli", function() {deepEqual( Stem("pli"), "pli");});
test("plia -> pli", function() {deepEqual( Stem("plia"), "pli");});
test("pliaient -> pli", function() {deepEqual( Stem("pliaient"), "pli");});
test("plié -> pli", function() {deepEqual( Stem("plié"), "pli");});
test("pliée -> pli", function() {deepEqual( Stem("pliée"), "pli");});
test("plier -> pli", function() {deepEqual( Stem("plier"), "pli");});
test("pliniana -> plinian", function() {deepEqual( Stem("pliniana"), "plinian");});
test("plis -> plis", function() {deepEqual( Stem("plis"), "plis");});
test("plissa -> pliss", function() {deepEqual( Stem("plissa"), "pliss");});
test("plomb -> plomb", function() {deepEqual( Stem("plomb"), "plomb");});
test("plombées -> plomb", function() {deepEqual( Stem("plombées"), "plomb");});
test("plonge -> plong", function() {deepEqual( Stem("plonge"), "plong");});
test("plongé -> plong", function() {deepEqual( Stem("plongé"), "plong");});
test("plongea -> plong", function() {deepEqual( Stem("plongea"), "plong");});
test("plongeaient -> plong", function() {deepEqual( Stem("plongeaient"), "plong");});
test("plongeait -> plong", function() {deepEqual( Stem("plongeait"), "plong");});
test("plongeant -> plong", function() {deepEqual( Stem("plongeant"), "plong");});
test("plongée -> plong", function() {deepEqual( Stem("plongée"), "plong");});
test("plonger -> plong", function() {deepEqual( Stem("plonger"), "plong");});
test("plongerais -> plong", function() {deepEqual( Stem("plongerais"), "plong");});
test("plongés -> plong", function() {deepEqual( Stem("plongés"), "plong");});
test("plours -> plour", function() {deepEqual( Stem("plours"), "plour");});
test("plu -> plu", function() {deepEqual( Stem("plu"), "plu");});
test("pluie -> plui", function() {deepEqual( Stem("pluie"), "plui");});
test("pluies -> plui", function() {deepEqual( Stem("pluies"), "plui");});
test("plum -> plum", function() {deepEqual( Stem("plum"), "plum");});
test("plume -> plum", function() {deepEqual( Stem("plume"), "plum");});
test("plumes -> plum", function() {deepEqual( Stem("plumes"), "plum");});
test("plupart -> plupart", function() {deepEqual( Stem("plupart"), "plupart");});
test("plus -> plus", function() {deepEqual( Stem("plus"), "plus");});
test("plusieurs -> plusieur", function() {deepEqual( Stem("plusieurs"), "plusieur");});
test("plut -> plut", function() {deepEqual( Stem("plut"), "plut");});
test("plût -> plût", function() {deepEqual( Stem("plût"), "plût");});
test("plutôt -> plutôt", function() {deepEqual( Stem("plutôt"), "plutôt");});
test("pô -> pô", function() {deepEqual( Stem("pô"), "pô");});
test("poche -> poch", function() {deepEqual( Stem("poche"), "poch");});
test("poches -> poch", function() {deepEqual( Stem("poches"), "poch");});
test("poco -> poco", function() {deepEqual( Stem("poco"), "poco");});
test("podestat -> podestat", function() {deepEqual( Stem("podestat"), "podestat");});
test("podestats -> podestat", function() {deepEqual( Stem("podestats"), "podestat");});
test("poêle -> poêl", function() {deepEqual( Stem("poêle"), "poêl");});
test("poème -> poem", function() {deepEqual( Stem("poème"), "poem");});
test("poemi -> poem", function() {deepEqual( Stem("poemi"), "poem");});
test("poésie -> poes", function() {deepEqual( Stem("poésie"), "poes");});
test("poésies -> poes", function() {deepEqual( Stem("poésies"), "poes");});
test("poète -> poet", function() {deepEqual( Stem("poète"), "poet");});
test("poètes -> poet", function() {deepEqual( Stem("poètes"), "poet");});
test("poétique -> poétiqu", function() {deepEqual( Stem("poétique"), "poétiqu");});
test("poids -> poid", function() {deepEqual( Stem("poids"), "poid");});
test("poignante -> poign", function() {deepEqual( Stem("poignante"), "poign");});
test("poignantes -> poign", function() {deepEqual( Stem("poignantes"), "poign");});
test("poignard -> poignard", function() {deepEqual( Stem("poignard"), "poignard");});
test("poignarda -> poignard", function() {deepEqual( Stem("poignarda"), "poignard");});
test("poignardé -> poignard", function() {deepEqual( Stem("poignardé"), "poignard");});
test("poignardée -> poignard", function() {deepEqual( Stem("poignardée"), "poignard");});
test("poignarder -> poignard", function() {deepEqual( Stem("poignarder"), "poignard");});
test("poignards -> poignard", function() {deepEqual( Stem("poignards"), "poignard");});
test("poigne -> poign", function() {deepEqual( Stem("poigne"), "poign");});
test("poignée -> poign", function() {deepEqual( Stem("poignée"), "poign");});
test("poignées -> poign", function() {deepEqual( Stem("poignées"), "poign");});
test("poils -> poil", function() {deepEqual( Stem("poils"), "poil");});
test("poindre -> poindr", function() {deepEqual( Stem("poindre"), "poindr");});
test("poing -> poing", function() {deepEqual( Stem("poing"), "poing");});
test("poings -> poing", function() {deepEqual( Stem("poings"), "poing");});
test("point -> point", function() {deepEqual( Stem("point"), "point");});
test("pointe -> point", function() {deepEqual( Stem("pointe"), "point");});
test("pointes -> point", function() {deepEqual( Stem("pointes"), "point");});
test("points -> point", function() {deepEqual( Stem("points"), "point");});
test("pointus -> pointus", function() {deepEqual( Stem("pointus"), "pointus");});
test("poireaux -> poireau", function() {deepEqual( Stem("poireaux"), "poireau");});
test("poison -> poison", function() {deepEqual( Stem("poison"), "poison");});
test("poisons -> poison", function() {deepEqual( Stem("poisons"), "poison");});
test("poisson -> poisson", function() {deepEqual( Stem("poisson"), "poisson");});
test("poissonnerie -> poissonner", function() {deepEqual( Stem("poissonnerie"), "poissonner");});
test("poissons -> poisson", function() {deepEqual( Stem("poissons"), "poisson");});
test("poissy -> poissy", function() {deepEqual( Stem("poissy"), "poissy");});
test("poitrail -> poitrail", function() {deepEqual( Stem("poitrail"), "poitrail");});
test("poitrine -> poitrin", function() {deepEqual( Stem("poitrine"), "poitrin");});
test("poivriers -> poivri", function() {deepEqual( Stem("poivriers"), "poivri");});
test("pole -> pol", function() {deepEqual( Stem("pole"), "pol");});
test("poli -> pol", function() {deepEqual( Stem("poli"), "pol");});
test("police -> polic", function() {deepEqual( Stem("police"), "polic");});
test("policeman -> policeman", function() {deepEqual( Stem("policeman"), "policeman");});
test("policemen -> policemen", function() {deepEqual( Stem("policemen"), "policemen");});
test("polices -> polic", function() {deepEqual( Stem("polices"), "polic");});
test("polichinelle -> polichinel", function() {deepEqual( Stem("polichinelle"), "polichinel");});
test("polidori -> polidor", function() {deepEqual( Stem("polidori"), "polidor");});
test("polie -> pol", function() {deepEqual( Stem("polie"), "pol");});
test("polies -> pol", function() {deepEqual( Stem("polies"), "pol");});
test("poliment -> pol", function() {deepEqual( Stem("poliment"), "pol");});
test("polis -> pol", function() {deepEqual( Stem("polis"), "pol");});
test("polish -> polish", function() {deepEqual( Stem("polish"), "polish");});
test("polisson -> polisson", function() {deepEqual( Stem("polisson"), "polisson");});
test("politesse -> politess", function() {deepEqual( Stem("politesse"), "politess");});
test("politesses -> politess", function() {deepEqual( Stem("politesses"), "politess");});
test("politique -> polit", function() {deepEqual( Stem("politique"), "polit");});
test("politiques -> polit", function() {deepEqual( Stem("politiques"), "polit");});
test("polonais -> polon", function() {deepEqual( Stem("polonais"), "polon");});
test("polyeucte -> polyeuct", function() {deepEqual( Stem("polyeucte"), "polyeuct");});
test("polygames -> polygam", function() {deepEqual( Stem("polygames"), "polygam");});
test("polygamie -> polygam", function() {deepEqual( Stem("polygamie"), "polygam");});
test("polygones -> polygon", function() {deepEqual( Stem("polygones"), "polygon");});
test("pommades -> pommad", function() {deepEqual( Stem("pommades"), "pommad");});
test("pomme -> pomm", function() {deepEqual( Stem("pomme"), "pomm");});
test("pommeau -> pommeau", function() {deepEqual( Stem("pommeau"), "pommeau");});
test("pommelé -> pommel", function() {deepEqual( Stem("pommelé"), "pommel");});
test("pommes -> pomm", function() {deepEqual( Stem("pommes"), "pomm");});
test("pommettes -> pommet", function() {deepEqual( Stem("pommettes"), "pommet");});
test("pommiers -> pommi", function() {deepEqual( Stem("pommiers"), "pommi");});
test("pompe -> pomp", function() {deepEqual( Stem("pompe"), "pomp");});
test("pompes -> pomp", function() {deepEqual( Stem("pompes"), "pomp");});
test("pompiers -> pompi", function() {deepEqual( Stem("pompiers"), "pompi");});
test("pompon -> pompon", function() {deepEqual( Stem("pompon"), "pompon");});
test("ponceaux -> ponceau", function() {deepEqual( Stem("ponceaux"), "ponceau");});
test("poncet -> poncet", function() {deepEqual( Stem("poncet"), "poncet");});
test("ponctualité -> ponctual", function() {deepEqual( Stem("ponctualité"), "ponctual");});
test("ponctuel -> ponctuel", function() {deepEqual( Stem("ponctuel"), "ponctuel");});
test("ponctuelle -> ponctuel", function() {deepEqual( Stem("ponctuelle"), "ponctuel");});
test("ponctuellement -> ponctuel", function() {deepEqual( Stem("ponctuellement"), "ponctuel");});
test("pondéré -> ponder", function() {deepEqual( Stem("pondéré"), "ponder");});
test("poney -> poney", function() {deepEqual( Stem("poney"), "poney");});
test("poneys -> poney", function() {deepEqual( Stem("poneys"), "poney");});
test("pont -> pont", function() {deepEqual( Stem("pont"), "pont");});
test("pontarlier -> pontarli", function() {deepEqual( Stem("pontarlier"), "pontarli");});
test("ponte -> pont", function() {deepEqual( Stem("ponte"), "pont");});
test("ponton -> ponton", function() {deepEqual( Stem("ponton"), "ponton");});
test("ponts -> pont", function() {deepEqual( Stem("ponts"), "pont");});
test("populace -> populac", function() {deepEqual( Stem("populace"), "populac");});
test("populaire -> populair", function() {deepEqual( Stem("populaire"), "populair");});
test("population -> popul", function() {deepEqual( Stem("population"), "popul");});
test("populations -> popul", function() {deepEqual( Stem("populations"), "popul");});
test("porcelaine -> porcelain", function() {deepEqual( Stem("porcelaine"), "porcelain");});
test("porco -> porco", function() {deepEqual( Stem("porco"), "porco");});
test("porcs -> porc", function() {deepEqual( Stem("porcs"), "porc");});
test("porphyre -> porphyr", function() {deepEqual( Stem("porphyre"), "porphyr");});
test("port -> port", function() {deepEqual( Stem("port"), "port");});
test("porta -> port", function() {deepEqual( Stem("porta"), "port");});
test("portaient -> port", function() {deepEqual( Stem("portaient"), "port");});
test("portait -> port", function() {deepEqual( Stem("portait"), "port");});
test("portant -> port", function() {deepEqual( Stem("portant"), "port");});
test("portât -> port", function() {deepEqual( Stem("portât"), "port");});
test("portative -> portat", function() {deepEqual( Stem("portative"), "portat");});
test("porte -> port", function() {deepEqual( Stem("porte"), "port");});
test("porté -> port", function() {deepEqual( Stem("porté"), "port");});
test("portée -> port", function() {deepEqual( Stem("portée"), "port");});
test("portées -> port", function() {deepEqual( Stem("portées"), "port");});
test("portefaix -> portefaix", function() {deepEqual( Stem("portefaix"), "portefaix");});
test("portefeuille -> portefeuill", function() {deepEqual( Stem("portefeuille"), "portefeuill");});
test("portefeuilles -> portefeuill", function() {deepEqual( Stem("portefeuilles"), "portefeuill");});
test("portemanteau -> portemanteau", function() {deepEqual( Stem("portemanteau"), "portemanteau");});
test("portent -> portent", function() {deepEqual( Stem("portent"), "portent");});
test("porter -> port", function() {deepEqual( Stem("porter"), "port");});
test("portera -> port", function() {deepEqual( Stem("portera"), "port");});
test("porteras -> port", function() {deepEqual( Stem("porteras"), "port");});
test("portèrent -> port", function() {deepEqual( Stem("portèrent"), "port");});
test("porterez -> port", function() {deepEqual( Stem("porterez"), "port");});
test("porteront -> port", function() {deepEqual( Stem("porteront"), "port");});
test("portes -> port", function() {deepEqual( Stem("portes"), "port");});
test("portés -> port", function() {deepEqual( Stem("portés"), "port");});
test("porteur -> porteur", function() {deepEqual( Stem("porteur"), "porteur");});
test("porteurs -> porteur", function() {deepEqual( Stem("porteurs"), "porteur");});
test("portez -> port", function() {deepEqual( Stem("portez"), "port");});
test("portier -> porti", function() {deepEqual( Stem("portier"), "porti");});
test("portière -> porti", function() {deepEqual( Stem("portière"), "porti");});
test("portières -> porti", function() {deepEqual( Stem("portières"), "porti");});
test("portiers -> porti", function() {deepEqual( Stem("portiers"), "porti");});
test("portion -> portion", function() {deepEqual( Stem("portion"), "portion");});
test("portique -> portiqu", function() {deepEqual( Stem("portique"), "portiqu");});
test("porto -> porto", function() {deepEqual( Stem("porto"), "porto");});
test("portons -> porton", function() {deepEqual( Stem("portons"), "porton");});
test("portrait -> portr", function() {deepEqual( Stem("portrait"), "portr");});
test("portraits -> portrait", function() {deepEqual( Stem("portraits"), "portrait");});
test("ports -> port", function() {deepEqual( Stem("ports"), "port");});
test("portugais -> portug", function() {deepEqual( Stem("portugais"), "portug");});
test("portugaise -> portugais", function() {deepEqual( Stem("portugaise"), "portugais");});
test("posa -> pos", function() {deepEqual( Stem("posa"), "pos");});
test("posant -> pos", function() {deepEqual( Stem("posant"), "pos");});
test("posé -> pos", function() {deepEqual( Stem("posé"), "pos");});
test("posée -> pos", function() {deepEqual( Stem("posée"), "pos");});
test("posément -> pos", function() {deepEqual( Stem("posément"), "pos");});
test("poser -> pos", function() {deepEqual( Stem("poser"), "pos");});
test("posés -> pos", function() {deepEqual( Stem("posés"), "pos");});
test("positif -> posit", function() {deepEqual( Stem("positif"), "posit");});
test("position -> posit", function() {deepEqual( Stem("position"), "posit");});
test("positions -> posit", function() {deepEqual( Stem("positions"), "posit");});
test("positive -> posit", function() {deepEqual( Stem("positive"), "posit");});
test("positivement -> posit", function() {deepEqual( Stem("positivement"), "posit");});
test("possédait -> possed", function() {deepEqual( Stem("possédait"), "possed");});
test("possédant -> possed", function() {deepEqual( Stem("possédant"), "possed");});
test("possède -> possed", function() {deepEqual( Stem("possède"), "possed");});
test("possédé -> possed", function() {deepEqual( Stem("possédé"), "possed");});
test("posséder -> possed", function() {deepEqual( Stem("posséder"), "possed");});
test("possédés -> possed", function() {deepEqual( Stem("possédés"), "possed");});
test("possesseur -> possesseur", function() {deepEqual( Stem("possesseur"), "possesseur");});
test("possession -> possess", function() {deepEqual( Stem("possession"), "possess");});
test("possessions -> possess", function() {deepEqual( Stem("possessions"), "possess");});
test("possibilité -> possibil", function() {deepEqual( Stem("possibilité"), "possibil");});
test("possibilités -> possibil", function() {deepEqual( Stem("possibilités"), "possibil");});
test("possible -> possibl", function() {deepEqual( Stem("possible"), "possibl");});
test("possibles -> possibl", function() {deepEqual( Stem("possibles"), "possibl");});
test("poste -> post", function() {deepEqual( Stem("poste"), "post");});
test("posté -> post", function() {deepEqual( Stem("posté"), "post");});
test("postérité -> poster", function() {deepEqual( Stem("postérité"), "poster");});
test("postes -> post", function() {deepEqual( Stem("postes"), "post");});
test("posthume -> posthum", function() {deepEqual( Stem("posthume"), "posthum");});
test("postillon -> postillon", function() {deepEqual( Stem("postillon"), "postillon");});
test("potage -> potag", function() {deepEqual( Stem("potage"), "potag");});
test("potager -> potag", function() {deepEqual( Stem("potager"), "potag");});
test("potagères -> potager", function() {deepEqual( Stem("potagères"), "potager");});
test("potentats -> potentat", function() {deepEqual( Stem("potentats"), "potentat");});
test("pouce -> pouc", function() {deepEqual( Stem("pouce"), "pouc");});
test("pouces -> pouc", function() {deepEqual( Stem("pouces"), "pouc");});
test("poudrait -> poudr", function() {deepEqual( Stem("poudrait"), "poudr");});
test("poudre -> poudr", function() {deepEqual( Stem("poudre"), "poudr");});
test("poudrées -> poudr", function() {deepEqual( Stem("poudrées"), "poudr");});
test("poudrés -> poudr", function() {deepEqual( Stem("poudrés"), "poudr");});
test("pouffer -> pouff", function() {deepEqual( Stem("pouffer"), "pouff");});
test("poule -> poul", function() {deepEqual( Stem("poule"), "poul");});
test("poulet -> poulet", function() {deepEqual( Stem("poulet"), "poulet");});
test("poulets -> poulet", function() {deepEqual( Stem("poulets"), "poulet");});
test("poulies -> poul", function() {deepEqual( Stem("poulies"), "poul");});
test("poumons -> poumon", function() {deepEqual( Stem("poumons"), "poumon");});
test("pounah -> pounah", function() {deepEqual( Stem("pounah"), "pounah");});
test("poupée -> poup", function() {deepEqual( Stem("poupée"), "poup");});
test("poupées -> poup", function() {deepEqual( Stem("poupées"), "poup");});
test("pour -> pour", function() {deepEqual( Stem("pour"), "pour");});
test("pourceaux -> pourceau", function() {deepEqual( Stem("pourceaux"), "pourceau");});
test("pourparlers -> pourparler", function() {deepEqual( Stem("pourparlers"), "pourparler");});
test("pourpensées -> pourpens", function() {deepEqual( Stem("pourpensées"), "pourpens");});
test("pourpoint -> pourpoint", function() {deepEqual( Stem("pourpoint"), "pourpoint");});
test("pourpres -> pourpr", function() {deepEqual( Stem("pourpres"), "pourpr");});
test("pourquoi -> pourquoi", function() {deepEqual( Stem("pourquoi"), "pourquoi");});
test("pourra -> pourr", function() {deepEqual( Stem("pourra"), "pourr");});
test("pourrai -> pourr", function() {deepEqual( Stem("pourrai"), "pourr");});
test("pourraient -> pourr", function() {deepEqual( Stem("pourraient"), "pourr");});
test("pourrais -> pourr", function() {deepEqual( Stem("pourrais"), "pourr");});
test("pourrait -> pourr", function() {deepEqual( Stem("pourrait"), "pourr");});
test("pourras -> pourr", function() {deepEqual( Stem("pourras"), "pourr");});
test("pourrez -> pourr", function() {deepEqual( Stem("pourrez"), "pourr");});
test("pourriez -> pourr", function() {deepEqual( Stem("pourriez"), "pourr");});
test("pourrions -> pourrion", function() {deepEqual( Stem("pourrions"), "pourrion");});
test("pourriture -> pourritur", function() {deepEqual( Stem("pourriture"), "pourritur");});
test("pourrons -> pourron", function() {deepEqual( Stem("pourrons"), "pourron");});
test("pourront -> pourront", function() {deepEqual( Stem("pourront"), "pourront");});
test("poursuit -> poursuit", function() {deepEqual( Stem("poursuit"), "poursuit");});
test("poursuite -> poursuit", function() {deepEqual( Stem("poursuite"), "poursuit");});
test("poursuites -> poursuit", function() {deepEqual( Stem("poursuites"), "poursuit");});
test("poursuivaient -> poursuiv", function() {deepEqual( Stem("poursuivaient"), "poursuiv");});
test("poursuivait -> poursuiv", function() {deepEqual( Stem("poursuivait"), "poursuiv");});
test("poursuivant -> poursuiv", function() {deepEqual( Stem("poursuivant"), "poursuiv");});
test("poursuivez -> poursuiv", function() {deepEqual( Stem("poursuivez"), "poursuiv");});
test("poursuivi -> poursuiv", function() {deepEqual( Stem("poursuivi"), "poursuiv");});
test("poursuivie -> poursuiv", function() {deepEqual( Stem("poursuivie"), "poursuiv");});
test("poursuivis -> poursuiv", function() {deepEqual( Stem("poursuivis"), "poursuiv");});
test("poursuivit -> poursuiv", function() {deepEqual( Stem("poursuivit"), "poursuiv");});
test("poursuivrai -> poursuivr", function() {deepEqual( Stem("poursuivrai"), "poursuivr");});
test("poursuivraient -> poursuivr", function() {deepEqual( Stem("poursuivraient"), "poursuivr");});
test("poursuivrait -> poursuivr", function() {deepEqual( Stem("poursuivrait"), "poursuivr");});
test("poursuivre -> poursuivr", function() {deepEqual( Stem("poursuivre"), "poursuivr");});
test("poursuivront -> poursuivront", function() {deepEqual( Stem("poursuivront"), "poursuivront");});
test("pourtant -> pourt", function() {deepEqual( Stem("pourtant"), "pourt");});
test("pourvoir -> pourvoir", function() {deepEqual( Stem("pourvoir"), "pourvoir");});
test("pourvu -> pourvu", function() {deepEqual( Stem("pourvu"), "pourvu");});
test("poussa -> pouss", function() {deepEqual( Stem("poussa"), "pouss");});
test("poussaient -> pouss", function() {deepEqual( Stem("poussaient"), "pouss");});
test("poussait -> pouss", function() {deepEqual( Stem("poussait"), "pouss");});
test("poussant -> pouss", function() {deepEqual( Stem("poussant"), "pouss");});
test("pousse -> pouss", function() {deepEqual( Stem("pousse"), "pouss");});
test("poussé -> pouss", function() {deepEqual( Stem("poussé"), "pouss");});
test("poussée -> pouss", function() {deepEqual( Stem("poussée"), "pouss");});
test("poussent -> poussent", function() {deepEqual( Stem("poussent"), "poussent");});
test("pousser -> pouss", function() {deepEqual( Stem("pousser"), "pouss");});
test("poussera -> pouss", function() {deepEqual( Stem("poussera"), "pouss");});
test("poussés -> pouss", function() {deepEqual( Stem("poussés"), "pouss");});
test("poussez -> pouss", function() {deepEqual( Stem("poussez"), "pouss");});
test("poussière -> poussi", function() {deepEqual( Stem("poussière"), "poussi");});
test("poutre -> poutr", function() {deepEqual( Stem("poutre"), "poutr");});
test("poutres -> poutr", function() {deepEqual( Stem("poutres"), "poutr");});
test("pouvaient -> pouv", function() {deepEqual( Stem("pouvaient"), "pouv");});
test("pouvais -> pouv", function() {deepEqual( Stem("pouvais"), "pouv");});
test("pouvait -> pouv", function() {deepEqual( Stem("pouvait"), "pouv");});
test("pouvant -> pouv", function() {deepEqual( Stem("pouvant"), "pouv");});
test("pouvez -> pouv", function() {deepEqual( Stem("pouvez"), "pouv");});
test("pouviez -> pouv", function() {deepEqual( Stem("pouviez"), "pouv");});
test("pouvions -> pouvion", function() {deepEqual( Stem("pouvions"), "pouvion");});
test("pouvoir -> pouvoir", function() {deepEqual( Stem("pouvoir"), "pouvoir");});
test("pouvons -> pouvon", function() {deepEqual( Stem("pouvons"), "pouvon");});
test("pozzo -> pozzo", function() {deepEqual( Stem("pozzo"), "pozzo");});
test("pradt -> pradt", function() {deepEqual( Stem("pradt"), "pradt");});
test("prairie -> prair", function() {deepEqual( Stem("prairie"), "prair");});
test("prairies -> prair", function() {deepEqual( Stem("prairies"), "prair");});
test("praticable -> pratic", function() {deepEqual( Stem("praticable"), "pratic");});
test("pratiquais -> pratiqu", function() {deepEqual( Stem("pratiquais"), "pratiqu");});
test("pratique -> pratiqu", function() {deepEqual( Stem("pratique"), "pratiqu");});
test("pratiqué -> pratiqu", function() {deepEqual( Stem("pratiqué"), "pratiqu");});
test("pratiquée -> pratiqu", function() {deepEqual( Stem("pratiquée"), "pratiqu");});
test("pratiquées -> pratiqu", function() {deepEqual( Stem("pratiquées"), "pratiqu");});
test("pratiquer -> pratiqu", function() {deepEqual( Stem("pratiquer"), "pratiqu");});
test("pratiques -> pratiqu", function() {deepEqual( Stem("pratiques"), "pratiqu");});
test("pré -> pré", function() {deepEqual( Stem("pré"), "pré");});
test("préalable -> préalabl", function() {deepEqual( Stem("préalable"), "préalabl");});
test("préalablement -> préalabl", function() {deepEqual( Stem("préalablement"), "préalabl");});
test("préambule -> préambul", function() {deepEqual( Stem("préambule"), "préambul");});
test("précaution -> précaut", function() {deepEqual( Stem("précaution"), "précaut");});
test("précautions -> précaut", function() {deepEqual( Stem("précautions"), "précaut");});
test("précéda -> préced", function() {deepEqual( Stem("précéda"), "préced");});
test("précédait -> préced", function() {deepEqual( Stem("précédait"), "préced");});
test("précédé -> préced", function() {deepEqual( Stem("précédé"), "préced");});
test("précédée -> préced", function() {deepEqual( Stem("précédée"), "préced");});
test("précédent -> précédent", function() {deepEqual( Stem("précédent"), "précédent");});
test("précédente -> précédent", function() {deepEqual( Stem("précédente"), "précédent");});
test("précédents -> précédent", function() {deepEqual( Stem("précédents"), "précédent");});
test("précédèrent -> préced", function() {deepEqual( Stem("précédèrent"), "préced");});
test("précédés -> préced", function() {deepEqual( Stem("précédés"), "préced");});
test("précepte -> précept", function() {deepEqual( Stem("précepte"), "précept");});
test("préceptes -> précept", function() {deepEqual( Stem("préceptes"), "précept");});
test("précepteur -> précepteur", function() {deepEqual( Stem("précepteur"), "précepteur");});
test("précepteurs -> précepteur", function() {deepEqual( Stem("précepteurs"), "précepteur");});
test("prêcha -> prêch", function() {deepEqual( Stem("prêcha"), "prêch");});
test("prêchaient -> prêch", function() {deepEqual( Stem("prêchaient"), "prêch");});
test("prêchait -> prêch", function() {deepEqual( Stem("prêchait"), "prêch");});
test("prêchant -> prêch", function() {deepEqual( Stem("prêchant"), "prêch");});
test("prêché -> prêch", function() {deepEqual( Stem("prêché"), "prêch");});
test("prêcher -> prêch", function() {deepEqual( Stem("prêcher"), "prêch");});
test("prêchera -> prêch", function() {deepEqual( Stem("prêchera"), "prêch");});
test("prêcherai -> prêch", function() {deepEqual( Stem("prêcherai"), "prêch");});
test("prêcherait -> prêch", function() {deepEqual( Stem("prêcherait"), "prêch");});
test("prêches -> prêch", function() {deepEqual( Stem("prêches"), "prêch");});
test("précieuse -> précieux", function() {deepEqual( Stem("précieuse"), "précieux");});
test("précieusement -> précieux", function() {deepEqual( Stem("précieusement"), "précieux");});
test("précieuses -> précieux", function() {deepEqual( Stem("précieuses"), "précieux");});
test("précieux -> précieux", function() {deepEqual( Stem("précieux"), "précieux");});
test("précipices -> précipic", function() {deepEqual( Stem("précipices"), "précipic");});
test("précipita -> précipit", function() {deepEqual( Stem("précipita"), "précipit");});
test("précipitaient -> précipit", function() {deepEqual( Stem("précipitaient"), "précipit");});
test("précipitait -> précipit", function() {deepEqual( Stem("précipitait"), "précipit");});
test("précipitamment -> précipit", function() {deepEqual( Stem("précipitamment"), "précipit");});
test("précipitant -> précipit", function() {deepEqual( Stem("précipitant"), "précipit");});
test("précipitation -> précipit", function() {deepEqual( Stem("précipitation"), "précipit");});
test("précipite -> précipit", function() {deepEqual( Stem("précipite"), "précipit");});
test("précipité -> précip", function() {deepEqual( Stem("précipité"), "précip");});
test("précipitent -> précipitent", function() {deepEqual( Stem("précipitent"), "précipitent");});
test("précipiter -> précipit", function() {deepEqual( Stem("précipiter"), "précipit");});
test("précipitèrent -> précipit", function() {deepEqual( Stem("précipitèrent"), "précipit");});
test("précipités -> précip", function() {deepEqual( Stem("précipités"), "précip");});
test("précis -> prec", function() {deepEqual( Stem("précis"), "prec");});
test("précise -> précis", function() {deepEqual( Stem("précise"), "précis");});
test("précisément -> précis", function() {deepEqual( Stem("précisément"), "précis");});
test("précises -> précis", function() {deepEqual( Stem("précises"), "précis");});
test("précision -> précis", function() {deepEqual( Stem("précision"), "précis");});
test("précoces -> précoc", function() {deepEqual( Stem("précoces"), "précoc");});
test("précurseur -> précurseur", function() {deepEqual( Stem("précurseur"), "précurseur");});
test("précurseurs -> précurseur", function() {deepEqual( Stem("précurseurs"), "précurseur");});
test("prédécesseur -> prédécesseur", function() {deepEqual( Stem("prédécesseur"), "prédécesseur");});
test("prédestiné -> prédestin", function() {deepEqual( Stem("prédestiné"), "prédestin");});
test("prédestinée -> prédestin", function() {deepEqual( Stem("prédestinée"), "prédestin");});
test("prédicateur -> prédiqu", function() {deepEqual( Stem("prédicateur"), "prédiqu");});
test("prédication -> prédiqu", function() {deepEqual( Stem("prédication"), "prédiqu");});
test("prédications -> prédiqu", function() {deepEqual( Stem("prédications"), "prédiqu");});
test("prédiction -> prédict", function() {deepEqual( Stem("prédiction"), "prédict");});
test("prédictions -> prédict", function() {deepEqual( Stem("prédictions"), "prédict");});
test("prédire -> prédir", function() {deepEqual( Stem("prédire"), "prédir");});
test("prédispose -> prédispos", function() {deepEqual( Stem("prédispose"), "prédispos");});
test("prédit -> pred", function() {deepEqual( Stem("prédit"), "pred");});
test("préface -> préfac", function() {deepEqual( Stem("préface"), "préfac");});
test("préfecture -> préfectur", function() {deepEqual( Stem("préfecture"), "préfectur");});
test("préféra -> préfer", function() {deepEqual( Stem("préféra"), "préfer");});
test("préférable -> préfer", function() {deepEqual( Stem("préférable"), "préfer");});
test("préférables -> préfer", function() {deepEqual( Stem("préférables"), "préfer");});
test("préférait -> préfer", function() {deepEqual( Stem("préférait"), "préfer");});
test("préfère -> préfer", function() {deepEqual( Stem("préfère"), "préfer");});
test("préféré -> préfer", function() {deepEqual( Stem("préféré"), "préfer");});
test("préférence -> préférent", function() {deepEqual( Stem("préférence"), "préférent");});
test("préférences -> préférent", function() {deepEqual( Stem("préférences"), "préférent");});
test("préférer -> préfer", function() {deepEqual( Stem("préférer"), "préfer");});
test("préférerez -> préfer", function() {deepEqual( Stem("préférerez"), "préfer");});
test("préférez -> préfer", function() {deepEqual( Stem("préférez"), "préfer");});
test("préfériez -> préfer", function() {deepEqual( Stem("préfériez"), "préfer");});
test("préfet -> préfet", function() {deepEqual( Stem("préfet"), "préfet");});
test("préfète -> préfet", function() {deepEqual( Stem("préfète"), "préfet");});
test("préfets -> préfet", function() {deepEqual( Stem("préfets"), "préfet");});
test("préjudice -> préjudic", function() {deepEqual( Stem("préjudice"), "préjudic");});
test("préjudiciable -> préjudici", function() {deepEqual( Stem("préjudiciable"), "préjudici");});
test("préjudicierait -> préjudici", function() {deepEqual( Stem("préjudicierait"), "préjudici");});
test("préjugé -> préjug", function() {deepEqual( Stem("préjugé"), "préjug");});
test("préjugés -> préjug", function() {deepEqual( Stem("préjugés"), "préjug");});
test("prélat -> prélat", function() {deepEqual( Stem("prélat"), "prélat");});
test("prélature -> prélatur", function() {deepEqual( Stem("prélature"), "prélatur");});
test("prélevés -> prélev", function() {deepEqual( Stem("prélevés"), "prélev");});
test("préliminaires -> préliminair", function() {deepEqual( Stem("préliminaires"), "préliminair");});
test("préludé -> prélud", function() {deepEqual( Stem("préludé"), "prélud");});
test("prématurément -> prématur", function() {deepEqual( Stem("prématurément"), "prématur");});
test("préméditation -> prémédit", function() {deepEqual( Stem("préméditation"), "prémédit");});
test("prémédité -> prémed", function() {deepEqual( Stem("prémédité"), "prémed");});
test("premier -> premi", function() {deepEqual( Stem("premier"), "premi");});
test("première -> premi", function() {deepEqual( Stem("première"), "premi");});
test("premièrement -> premi", function() {deepEqual( Stem("premièrement"), "premi");});
test("premières -> premi", function() {deepEqual( Stem("premières"), "premi");});
test("premiers -> premi", function() {deepEqual( Stem("premiers"), "premi");});
test("prenaient -> pren", function() {deepEqual( Stem("prenaient"), "pren");});
test("prenais -> pren", function() {deepEqual( Stem("prenais"), "pren");});
test("prenait -> pren", function() {deepEqual( Stem("prenait"), "pren");});
test("prenant -> pren", function() {deepEqual( Stem("prenant"), "pren");});
test("prend -> prend", function() {deepEqual( Stem("prend"), "prend");});
test("prendra -> prendr", function() {deepEqual( Stem("prendra"), "prendr");});
test("prendrai -> prendr", function() {deepEqual( Stem("prendrai"), "prendr");});
test("prendrais -> prendr", function() {deepEqual( Stem("prendrais"), "prendr");});
test("prendrait -> prendr", function() {deepEqual( Stem("prendrait"), "prendr");});
test("prendras -> prendr", function() {deepEqual( Stem("prendras"), "prendr");});
test("prendre -> prendr", function() {deepEqual( Stem("prendre"), "prendr");});
test("prendrez -> prendr", function() {deepEqual( Stem("prendrez"), "prendr");});
test("prendront -> prendront", function() {deepEqual( Stem("prendront"), "prendront");});
test("prends -> prend", function() {deepEqual( Stem("prends"), "prend");});
test("prenez -> pren", function() {deepEqual( Stem("prenez"), "pren");});
test("prenne -> pren", function() {deepEqual( Stem("prenne"), "pren");});
test("prennent -> prennent", function() {deepEqual( Stem("prennent"), "prennent");});
test("prenons -> prenon", function() {deepEqual( Stem("prenons"), "prenon");});
test("préoccupa -> préoccup", function() {deepEqual( Stem("préoccupa"), "préoccup");});
test("préoccupait -> préoccup", function() {deepEqual( Stem("préoccupait"), "préoccup");});
test("préoccupation -> préoccup", function() {deepEqual( Stem("préoccupation"), "préoccup");});
test("préoccupations -> préoccup", function() {deepEqual( Stem("préoccupations"), "préoccup");});
test("préoccupé -> préoccup", function() {deepEqual( Stem("préoccupé"), "préoccup");});
test("préoccupée -> préoccup", function() {deepEqual( Stem("préoccupée"), "préoccup");});
test("préoccuper -> préoccup", function() {deepEqual( Stem("préoccuper"), "préoccup");});
test("prépara -> prépar", function() {deepEqual( Stem("prépara"), "prépar");});
test("préparaient -> prépar", function() {deepEqual( Stem("préparaient"), "prépar");});
test("préparais -> prépar", function() {deepEqual( Stem("préparais"), "prépar");});
test("préparait -> prépar", function() {deepEqual( Stem("préparait"), "prépar");});
test("préparant -> prépar", function() {deepEqual( Stem("préparant"), "prépar");});
test("préparât -> prépar", function() {deepEqual( Stem("préparât"), "prépar");});
test("préparatifs -> prépar", function() {deepEqual( Stem("préparatifs"), "prépar");});
test("préparation -> prépar", function() {deepEqual( Stem("préparation"), "prépar");});
test("préparatoire -> préparatoir", function() {deepEqual( Stem("préparatoire"), "préparatoir");});
test("préparatoires -> préparatoir", function() {deepEqual( Stem("préparatoires"), "préparatoir");});
test("prépare -> prépar", function() {deepEqual( Stem("prépare"), "prépar");});
test("préparé -> prépar", function() {deepEqual( Stem("préparé"), "prépar");});
test("préparer -> prépar", function() {deepEqual( Stem("préparer"), "prépar");});
test("préparera -> prépar", function() {deepEqual( Stem("préparera"), "prépar");});
test("préparèrent -> prépar", function() {deepEqual( Stem("préparèrent"), "prépar");});
test("préparés -> prépar", function() {deepEqual( Stem("préparés"), "prépar");});
test("préparez -> prépar", function() {deepEqual( Stem("préparez"), "prépar");});
test("préposé -> prépos", function() {deepEqual( Stem("préposé"), "prépos");});
test("prepotenze -> prepotenz", function() {deepEqual( Stem("prepotenze"), "prepotenz");});
test("prérogative -> prérog", function() {deepEqual( Stem("prérogative"), "prérog");});
test("près -> pres", function() {deepEqual( Stem("près"), "pres");});
test("présage -> présag", function() {deepEqual( Stem("présage"), "présag");});
test("présageait -> présag", function() {deepEqual( Stem("présageait"), "présag");});
test("présages -> présag", function() {deepEqual( Stem("présages"), "présag");});
test("presbytère -> presbyter", function() {deepEqual( Stem("presbytère"), "presbyter");});
test("prescrira -> prescr", function() {deepEqual( Stem("prescrira"), "prescr");});
test("prescrire -> prescrir", function() {deepEqual( Stem("prescrire"), "prescrir");});
test("prescrit -> prescr", function() {deepEqual( Stem("prescrit"), "prescr");});
test("prescrite -> prescrit", function() {deepEqual( Stem("prescrite"), "prescrit");});
test("prescrivaient -> prescriv", function() {deepEqual( Stem("prescrivaient"), "prescriv");});
test("prescrivait -> prescriv", function() {deepEqual( Stem("prescrivait"), "prescriv");});
test("préséance -> préséanc", function() {deepEqual( Stem("préséance"), "préséanc");});
test("préséances -> préséanc", function() {deepEqual( Stem("préséances"), "préséanc");});
test("présence -> présenc", function() {deepEqual( Stem("présence"), "présenc");});
test("présent -> présent", function() {deepEqual( Stem("présent"), "présent");});
test("présenta -> présent", function() {deepEqual( Stem("présenta"), "présent");});
test("présentable -> présent", function() {deepEqual( Stem("présentable"), "présent");});
test("présentaient -> présent", function() {deepEqual( Stem("présentaient"), "présent");});
test("présentait -> présent", function() {deepEqual( Stem("présentait"), "présent");});
test("présentant -> présent", function() {deepEqual( Stem("présentant"), "présent");});
test("présentation -> présent", function() {deepEqual( Stem("présentation"), "présent");});
test("présentations -> présent", function() {deepEqual( Stem("présentations"), "présent");});
test("présente -> présent", function() {deepEqual( Stem("présente"), "présent");});
test("présenté -> présent", function() {deepEqual( Stem("présenté"), "présent");});
test("présentée -> présent", function() {deepEqual( Stem("présentée"), "présent");});
test("présentées -> présent", function() {deepEqual( Stem("présentées"), "présent");});
test("présentement -> présent", function() {deepEqual( Stem("présentement"), "présent");});
test("présentent -> présentent", function() {deepEqual( Stem("présentent"), "présentent");});
test("présenter -> présent", function() {deepEqual( Stem("présenter"), "présent");});
test("présentera -> présent", function() {deepEqual( Stem("présentera"), "présent");});
test("présenterait -> présent", function() {deepEqual( Stem("présenterait"), "présent");});
test("présentèrent -> présent", function() {deepEqual( Stem("présentèrent"), "présent");});
test("présenterez -> présent", function() {deepEqual( Stem("présenterez"), "présent");});
test("présentes -> présent", function() {deepEqual( Stem("présentes"), "présent");});
test("présentés -> présent", function() {deepEqual( Stem("présentés"), "présent");});
test("présentez -> présent", function() {deepEqual( Stem("présentez"), "présent");});
test("présents -> présent", function() {deepEqual( Stem("présents"), "présent");});
test("préservant -> préserv", function() {deepEqual( Stem("préservant"), "préserv");});
test("préserve -> préserv", function() {deepEqual( Stem("préserve"), "préserv");});
test("préservé -> préserv", function() {deepEqual( Stem("préservé"), "préserv");});
test("préservée -> préserv", function() {deepEqual( Stem("préservée"), "préserv");});
test("préserver -> préserv", function() {deepEqual( Stem("préserver"), "préserv");});
test("présidait -> présid", function() {deepEqual( Stem("présidait"), "présid");});
test("présidence -> président", function() {deepEqual( Stem("présidence"), "président");});
test("président -> président", function() {deepEqual( Stem("président"), "président");});
test("présidente -> président", function() {deepEqual( Stem("présidente"), "président");});
test("présidents -> président", function() {deepEqual( Stem("présidents"), "président");});
test("présider -> présid", function() {deepEqual( Stem("présider"), "présid");});
test("présomption -> présompt", function() {deepEqual( Stem("présomption"), "présompt");});
test("présomptions -> présompt", function() {deepEqual( Stem("présomptions"), "présompt");});
test("presqu -> presqu", function() {deepEqual( Stem("presqu"), "presqu");});
test("presque -> presqu", function() {deepEqual( Stem("presque"), "presqu");});
test("pressa -> press", function() {deepEqual( Stem("pressa"), "press");});
test("pressaient -> press", function() {deepEqual( Stem("pressaient"), "press");});
test("pressais -> press", function() {deepEqual( Stem("pressais"), "press");});
test("pressait -> press", function() {deepEqual( Stem("pressait"), "press");});
test("pressant -> press", function() {deepEqual( Stem("pressant"), "press");});
test("pressante -> press", function() {deepEqual( Stem("pressante"), "press");});
test("presse -> press", function() {deepEqual( Stem("presse"), "press");});
test("pressé -> press", function() {deepEqual( Stem("pressé"), "press");});
test("pressée -> press", function() {deepEqual( Stem("pressée"), "press");});
test("pressent -> pressent", function() {deepEqual( Stem("pressent"), "pressent");});
test("pressentiment -> pressent", function() {deepEqual( Stem("pressentiment"), "pressent");});
test("pressentiments -> pressent", function() {deepEqual( Stem("pressentiments"), "pressent");});
test("pressentir -> pressent", function() {deepEqual( Stem("pressentir"), "pressent");});
test("presser -> press", function() {deepEqual( Stem("presser"), "press");});
test("pressés -> press", function() {deepEqual( Stem("pressés"), "press");});
test("pression -> pression", function() {deepEqual( Stem("pression"), "pression");});
test("pressoir -> pressoir", function() {deepEqual( Stem("pressoir"), "pressoir");});
test("pressure -> pressur", function() {deepEqual( Stem("pressure"), "pressur");});
test("prestige -> prestig", function() {deepEqual( Stem("prestige"), "prestig");});
test("prestigieuse -> prestigi", function() {deepEqual( Stem("prestigieuse"), "prestigi");});
test("prestigieux -> prestigi", function() {deepEqual( Stem("prestigieux"), "prestigi");});
test("présume -> présum", function() {deepEqual( Stem("présume"), "présum");});
test("présumé -> présum", function() {deepEqual( Stem("présumé"), "présum");});
test("prêt -> prêt", function() {deepEqual( Stem("prêt"), "prêt");});
test("prêta -> prêt", function() {deepEqual( Stem("prêta"), "prêt");});
test("prêtait -> prêt", function() {deepEqual( Stem("prêtait"), "prêt");});
test("prêtant -> prêt", function() {deepEqual( Stem("prêtant"), "prêt");});
test("prête -> prêt", function() {deepEqual( Stem("prête"), "prêt");});
test("prêté -> prêt", function() {deepEqual( Stem("prêté"), "prêt");});
test("prêtée -> prêt", function() {deepEqual( Stem("prêtée"), "prêt");});
test("prétend -> prétend", function() {deepEqual( Stem("prétend"), "prétend");});
test("prétendaient -> prétend", function() {deepEqual( Stem("prétendaient"), "prétend");});
test("prétendait -> prétend", function() {deepEqual( Stem("prétendait"), "prétend");});
test("prétendant -> prétend", function() {deepEqual( Stem("prétendant"), "prétend");});
test("prétendent -> prétendent", function() {deepEqual( Stem("prétendent"), "prétendent");});
test("prétendez -> prétend", function() {deepEqual( Stem("prétendez"), "prétend");});
test("prétendit -> prétend", function() {deepEqual( Stem("prétendit"), "prétend");});
test("prétendons -> prétendon", function() {deepEqual( Stem("prétendons"), "prétendon");});
test("prétendrait -> prétendr", function() {deepEqual( Stem("prétendrait"), "prétendr");});
test("prétendre -> prétendr", function() {deepEqual( Stem("prétendre"), "prétendr");});
test("prétends -> prétend", function() {deepEqual( Stem("prétends"), "prétend");});
test("prétendu -> prétendu", function() {deepEqual( Stem("prétendu"), "prétendu");});
test("prétendue -> prétendu", function() {deepEqual( Stem("prétendue"), "prétendu");});
test("prétendues -> prétendu", function() {deepEqual( Stem("prétendues"), "prétendu");});
test("prétendus -> prétendus", function() {deepEqual( Stem("prétendus"), "prétendus");});
test("prétention -> prétent", function() {deepEqual( Stem("prétention"), "prétent");});
test("prétentions -> prétent", function() {deepEqual( Stem("prétentions"), "prétent");});
test("prêter -> prêt", function() {deepEqual( Stem("prêter"), "prêt");});
test("prêtes -> prêt", function() {deepEqual( Stem("prêtes"), "prêt");});
test("prêtés -> prêt", function() {deepEqual( Stem("prêtés"), "prêt");});
test("prétexta -> prétext", function() {deepEqual( Stem("prétexta"), "prétext");});
test("prétextant -> prétext", function() {deepEqual( Stem("prétextant"), "prétext");});
test("prétexte -> prétext", function() {deepEqual( Stem("prétexte"), "prétext");});
test("prétextes -> prétext", function() {deepEqual( Stem("prétextes"), "prétext");});
test("prêtez -> prêt", function() {deepEqual( Stem("prêtez"), "prêt");});
test("prétoire -> prétoir", function() {deepEqual( Stem("prétoire"), "prétoir");});
test("prêtre -> prêtr", function() {deepEqual( Stem("prêtre"), "prêtr");});
test("prêtres -> prêtr", function() {deepEqual( Stem("prêtres"), "prêtr");});
test("prêts -> prêt", function() {deepEqual( Stem("prêts"), "prêt");});
test("preuve -> preuv", function() {deepEqual( Stem("preuve"), "preuv");});
test("preuves -> preuv", function() {deepEqual( Stem("preuves"), "preuv");});
test("preux -> preux", function() {deepEqual( Stem("preux"), "preux");});
test("prévalant -> préval", function() {deepEqual( Stem("prévalant"), "préval");});
test("prévaloir -> prévaloir", function() {deepEqual( Stem("prévaloir"), "prévaloir");});
test("prévenait -> préven", function() {deepEqual( Stem("prévenait"), "préven");});
test("prévenances -> préven", function() {deepEqual( Stem("prévenances"), "préven");});
test("prévenez -> préven", function() {deepEqual( Stem("prévenez"), "préven");});
test("prévenir -> préven", function() {deepEqual( Stem("prévenir"), "préven");});
test("préventions -> prévent", function() {deepEqual( Stem("préventions"), "prévent");});
test("prévenu -> prévenu", function() {deepEqual( Stem("prévenu"), "prévenu");});
test("prévenus -> prévenus", function() {deepEqual( Stem("prévenus"), "prévenus");});
test("prévienne -> prévien", function() {deepEqual( Stem("prévienne"), "prévien");});
test("préviens -> prévien", function() {deepEqual( Stem("préviens"), "prévien");});
test("prévision -> prévis", function() {deepEqual( Stem("prévision"), "prévis");});
test("prévisions -> prévis", function() {deepEqual( Stem("prévisions"), "prévis");});
test("prévoir -> prévoir", function() {deepEqual( Stem("prévoir"), "prévoir");});
test("prévois -> prévois", function() {deepEqual( Stem("prévois"), "prévois");});
test("prévoit -> prévoit", function() {deepEqual( Stem("prévoit"), "prévoit");});
test("prévost -> prévost", function() {deepEqual( Stem("prévost"), "prévost");});
test("prévoyait -> prévoi", function() {deepEqual( Stem("prévoyait"), "prévoi");});
test("prévoyant -> prévoi", function() {deepEqual( Stem("prévoyant"), "prévoi");});
test("prévu -> prévu", function() {deepEqual( Stem("prévu"), "prévu");});
test("prévue -> prévu", function() {deepEqual( Stem("prévue"), "prévu");});
test("pria -> pri", function() {deepEqual( Stem("pria"), "pri");});
test("priais -> pri", function() {deepEqual( Stem("priais"), "pri");});
test("priait -> pri", function() {deepEqual( Stem("priait"), "pri");});
test("priant -> pri", function() {deepEqual( Stem("priant"), "pri");});
test("prie -> pri", function() {deepEqual( Stem("prie"), "pri");});
test("prié -> pri", function() {deepEqual( Stem("prié"), "pri");});
test("prier -> pri", function() {deepEqual( Stem("prier"), "pri");});
test("prierai -> pri", function() {deepEqual( Stem("prierai"), "pri");});
test("prière -> prier", function() {deepEqual( Stem("prière"), "prier");});
test("prièrent -> pri", function() {deepEqual( Stem("prièrent"), "pri");});
test("prières -> prier", function() {deepEqual( Stem("prières"), "prier");});
test("prieur -> prieur", function() {deepEqual( Stem("prieur"), "prieur");});
test("priez -> pri", function() {deepEqual( Stem("priez"), "pri");});
test("prime -> prim", function() {deepEqual( Stem("prime"), "prim");});
test("primé -> prim", function() {deepEqual( Stem("primé"), "prim");});
test("primer -> prim", function() {deepEqual( Stem("primer"), "prim");});
test("primes -> prim", function() {deepEqual( Stem("primes"), "prim");});
test("primitif -> primit", function() {deepEqual( Stem("primitif"), "primit");});
test("primitives -> primit", function() {deepEqual( Stem("primitives"), "primit");});
test("primo -> primo", function() {deepEqual( Stem("primo"), "primo");});
test("prina -> prin", function() {deepEqual( Stem("prina"), "prin");});
test("prince -> princ", function() {deepEqual( Stem("prince"), "princ");});
test("princes -> princ", function() {deepEqual( Stem("princes"), "princ");});
test("princesse -> princess", function() {deepEqual( Stem("princesse"), "princess");});
test("princesses -> princess", function() {deepEqual( Stem("princesses"), "princess");});
test("principal -> principal", function() {deepEqual( Stem("principal"), "principal");});
test("principale -> principal", function() {deepEqual( Stem("principale"), "principal");});
test("principalement -> principal", function() {deepEqual( Stem("principalement"), "principal");});
test("principales -> principal", function() {deepEqual( Stem("principales"), "principal");});
test("principaux -> principal", function() {deepEqual( Stem("principaux"), "principal");});
test("principe -> princip", function() {deepEqual( Stem("principe"), "princip");});
test("principes -> princip", function() {deepEqual( Stem("principes"), "princip");});
test("printemps -> printemp", function() {deepEqual( Stem("printemps"), "printemp");});
test("prirent -> prirent", function() {deepEqual( Stem("prirent"), "prirent");});
test("pris -> pris", function() {deepEqual( Stem("pris"), "pris");});
test("prise -> pris", function() {deepEqual( Stem("prise"), "pris");});
test("prises -> pris", function() {deepEqual( Stem("prises"), "pris");});
test("prison -> prison", function() {deepEqual( Stem("prison"), "prison");});
test("prisonnier -> prisonni", function() {deepEqual( Stem("prisonnier"), "prisonni");});
test("prisonnière -> prisonni", function() {deepEqual( Stem("prisonnière"), "prisonni");});
test("prisonniers -> prisonni", function() {deepEqual( Stem("prisonniers"), "prisonni");});
test("prisons -> prison", function() {deepEqual( Stem("prisons"), "prison");});
test("prit -> prit", function() {deepEqual( Stem("prit"), "prit");});
test("prît -> prît", function() {deepEqual( Stem("prît"), "prît");});
test("priva -> priv", function() {deepEqual( Stem("priva"), "priv");});
test("privation -> privat", function() {deepEqual( Stem("privation"), "privat");});
test("prive -> priv", function() {deepEqual( Stem("prive"), "priv");});
test("privé -> priv", function() {deepEqual( Stem("privé"), "priv");});
test("privée -> priv", function() {deepEqual( Stem("privée"), "priv");});
test("privées -> priv", function() {deepEqual( Stem("privées"), "priv");});
test("priverai -> priv", function() {deepEqual( Stem("priverai"), "priv");});
test("privés -> priv", function() {deepEqual( Stem("privés"), "priv");});
test("privilège -> privileg", function() {deepEqual( Stem("privilège"), "privileg");});
test("privilèges -> privileg", function() {deepEqual( Stem("privilèges"), "privileg");});
test("privilégié -> privilégi", function() {deepEqual( Stem("privilégié"), "privilégi");});
test("privilégiée -> privilégi", function() {deepEqual( Stem("privilégiée"), "privilégi");});
test("prix -> prix", function() {deepEqual( Stem("prix"), "prix");});
test("pro -> pro", function() {deepEqual( Stem("pro"), "pro");});
test("probabilité -> probabl", function() {deepEqual( Stem("probabilité"), "probabl");});
test("probabilités -> probabl", function() {deepEqual( Stem("probabilités"), "probabl");});
test("probable -> probabl", function() {deepEqual( Stem("probable"), "probabl");});
test("probablement -> probabl", function() {deepEqual( Stem("probablement"), "probabl");});
test("probantes -> prob", function() {deepEqual( Stem("probantes"), "prob");});
test("probe -> prob", function() {deepEqual( Stem("probe"), "prob");});
test("probes -> prob", function() {deepEqual( Stem("probes"), "prob");});
test("probité -> probit", function() {deepEqual( Stem("probité"), "probit");});
test("problème -> problem", function() {deepEqual( Stem("problème"), "problem");});
test("problèmes -> problem", function() {deepEqual( Stem("problèmes"), "problem");});
test("procédé -> proced", function() {deepEqual( Stem("procédé"), "proced");});
test("procédés -> proced", function() {deepEqual( Stem("procédés"), "proced");});
test("procédure -> procédur", function() {deepEqual( Stem("procédure"), "procédur");});
test("procès -> proces", function() {deepEqual( Stem("procès"), "proces");});
test("procession -> process", function() {deepEqual( Stem("procession"), "process");});
test("processionnellement -> processionnel", function() {deepEqual( Stem("processionnellement"), "processionnel");});
test("processions -> process", function() {deepEqual( Stem("processions"), "process");});
test("prochain -> prochain", function() {deepEqual( Stem("prochain"), "prochain");});
test("prochaine -> prochain", function() {deepEqual( Stem("prochaine"), "prochain");});
test("proche -> proch", function() {deepEqual( Stem("proche"), "proch");});
test("proches -> proch", function() {deepEqual( Stem("proches"), "proch");});
test("proclamation -> proclam", function() {deepEqual( Stem("proclamation"), "proclam");});
test("proclamations -> proclam", function() {deepEqual( Stem("proclamations"), "proclam");});
test("proclamée -> proclam", function() {deepEqual( Stem("proclamée"), "proclam");});
test("proclamer -> proclam", function() {deepEqual( Stem("proclamer"), "proclam");});
test("proctor -> proctor", function() {deepEqual( Stem("proctor"), "proctor");});
test("procuration -> procur", function() {deepEqual( Stem("procuration"), "procur");});
test("procure -> procur", function() {deepEqual( Stem("procure"), "procur");});
test("procuré -> procur", function() {deepEqual( Stem("procuré"), "procur");});
test("procurée -> procur", function() {deepEqual( Stem("procurée"), "procur");});
test("procurer -> procur", function() {deepEqual( Stem("procurer"), "procur");});
test("procurerai -> procur", function() {deepEqual( Stem("procurerai"), "procur");});
test("procureur -> procureur", function() {deepEqual( Stem("procureur"), "procureur");});
test("procureurs -> procureur", function() {deepEqual( Stem("procureurs"), "procureur");});
test("prodige -> prodig", function() {deepEqual( Stem("prodige"), "prodig");});
test("prodiges -> prodig", function() {deepEqual( Stem("prodiges"), "prodig");});
test("prodigieuse -> prodigi", function() {deepEqual( Stem("prodigieuse"), "prodigi");});
test("prodigieusement -> prodigi", function() {deepEqual( Stem("prodigieusement"), "prodigi");});
test("prodigieux -> prodigi", function() {deepEqual( Stem("prodigieux"), "prodigi");});
test("prodiguait -> prodigu", function() {deepEqual( Stem("prodiguait"), "prodigu");});
test("prodigue -> prodigu", function() {deepEqual( Stem("prodigue"), "prodigu");});
test("prodiguer -> prodigu", function() {deepEqual( Stem("prodiguer"), "prodigu");});
test("prodiguera -> prodigu", function() {deepEqual( Stem("prodiguera"), "prodigu");});
test("prodiguerait -> prodigu", function() {deepEqual( Stem("prodiguerait"), "prodigu");});
test("prodiguèrent -> prodigu", function() {deepEqual( Stem("prodiguèrent"), "prodigu");});
test("production -> product", function() {deepEqual( Stem("production"), "product");});
test("produirait -> produir", function() {deepEqual( Stem("produirait"), "produir");});
test("produire -> produir", function() {deepEqual( Stem("produire"), "produir");});
test("produis -> produis", function() {deepEqual( Stem("produis"), "produis");});
test("produisaient -> produis", function() {deepEqual( Stem("produisaient"), "produis");});
test("produisait -> produis", function() {deepEqual( Stem("produisait"), "produis");});
test("produisant -> produis", function() {deepEqual( Stem("produisant"), "produis");});
test("produise -> produis", function() {deepEqual( Stem("produise"), "produis");});
test("produisit -> produis", function() {deepEqual( Stem("produisit"), "produis");});
test("produit -> produit", function() {deepEqual( Stem("produit"), "produit");});
test("produite -> produit", function() {deepEqual( Stem("produite"), "produit");});
test("produites -> produit", function() {deepEqual( Stem("produites"), "produit");});
test("produits -> produit", function() {deepEqual( Stem("produits"), "produit");});
test("profanateur -> profan", function() {deepEqual( Stem("profanateur"), "profan");});
test("profane -> profan", function() {deepEqual( Stem("profane"), "profan");});
test("profanes -> profan", function() {deepEqual( Stem("profanes"), "profan");});
test("proférait -> profer", function() {deepEqual( Stem("proférait"), "profer");});
test("proférant -> profer", function() {deepEqual( Stem("proférant"), "profer");});
test("proférées -> profer", function() {deepEqual( Stem("proférées"), "profer");});
test("proférer -> profer", function() {deepEqual( Stem("proférer"), "profer");});
test("proférés -> profer", function() {deepEqual( Stem("proférés"), "profer");});
test("professait -> profess", function() {deepEqual( Stem("professait"), "profess");});
test("professeur -> professeur", function() {deepEqual( Stem("professeur"), "professeur");});
test("professeurs -> professeur", function() {deepEqual( Stem("professeurs"), "professeur");});
test("profession -> profess", function() {deepEqual( Stem("profession"), "profess");});
test("professions -> profess", function() {deepEqual( Stem("professions"), "profess");});
test("profil -> profil", function() {deepEqual( Stem("profil"), "profil");});
test("profilait -> profil", function() {deepEqual( Stem("profilait"), "profil");});
test("profilant -> profil", function() {deepEqual( Stem("profilant"), "profil");});
test("profilée -> profil", function() {deepEqual( Stem("profilée"), "profil");});
test("profils -> profil", function() {deepEqual( Stem("profils"), "profil");});
test("profit -> prof", function() {deepEqual( Stem("profit"), "prof");});
test("profita -> profit", function() {deepEqual( Stem("profita"), "profit");});
test("profitable -> profit", function() {deepEqual( Stem("profitable"), "profit");});
test("profitait -> profit", function() {deepEqual( Stem("profitait"), "profit");});
test("profitant -> profit", function() {deepEqual( Stem("profitant"), "profit");});
test("profité -> profit", function() {deepEqual( Stem("profité"), "profit");});
test("profiter -> profit", function() {deepEqual( Stem("profiter"), "profit");});
test("profiterait -> profit", function() {deepEqual( Stem("profiterait"), "profit");});
test("profitons -> profiton", function() {deepEqual( Stem("profitons"), "profiton");});
test("profits -> profit", function() {deepEqual( Stem("profits"), "profit");});
test("profond -> profond", function() {deepEqual( Stem("profond"), "profond");});
test("profonde -> profond", function() {deepEqual( Stem("profonde"), "profond");});
test("profondément -> profond", function() {deepEqual( Stem("profondément"), "profond");});
test("profondes -> profond", function() {deepEqual( Stem("profondes"), "profond");});
test("profondeur -> profondeur", function() {deepEqual( Stem("profondeur"), "profondeur");});
test("profondeurs -> profondeur", function() {deepEqual( Stem("profondeurs"), "profondeur");});
test("profonds -> profond", function() {deepEqual( Stem("profonds"), "profond");});
test("programme -> programm", function() {deepEqual( Stem("programme"), "programm");});
test("progrès -> progres", function() {deepEqual( Stem("progrès"), "progres");});
test("prohibée -> prohib", function() {deepEqual( Stem("prohibée"), "prohib");});
test("proie -> proi", function() {deepEqual( Stem("proie"), "proi");});
test("projectiles -> projectil", function() {deepEqual( Stem("projectiles"), "projectil");});
test("projet -> projet", function() {deepEqual( Stem("projet"), "projet");});
test("projeté -> projet", function() {deepEqual( Stem("projeté"), "projet");});
test("projetée -> projet", function() {deepEqual( Stem("projetée"), "projet");});
test("projets -> projet", function() {deepEqual( Stem("projets"), "projet");});
test("prolonge -> prolong", function() {deepEqual( Stem("prolonge"), "prolong");});
test("prolongé -> prolong", function() {deepEqual( Stem("prolongé"), "prolong");});
test("prolongea -> prolong", function() {deepEqual( Stem("prolongea"), "prolong");});
test("prolongeaient -> prolong", function() {deepEqual( Stem("prolongeaient"), "prolong");});
test("prolongeant -> prolong", function() {deepEqual( Stem("prolongeant"), "prolong");});
test("prolongée -> prolong", function() {deepEqual( Stem("prolongée"), "prolong");});
test("prolongent -> prolongent", function() {deepEqual( Stem("prolongent"), "prolongent");});
test("prolonger -> prolong", function() {deepEqual( Stem("prolonger"), "prolong");});
test("prolongés -> prolong", function() {deepEqual( Stem("prolongés"), "prolong");});
test("promena -> promen", function() {deepEqual( Stem("promena"), "promen");});
test("promenade -> promenad", function() {deepEqual( Stem("promenade"), "promenad");});
test("promenades -> promenad", function() {deepEqual( Stem("promenades"), "promenad");});
test("promenaient -> promen", function() {deepEqual( Stem("promenaient"), "promen");});
test("promenait -> promen", function() {deepEqual( Stem("promenait"), "promen");});
test("promenant -> promen", function() {deepEqual( Stem("promenant"), "promen");});
test("promène -> promen", function() {deepEqual( Stem("promène"), "promen");});
test("promené -> promen", function() {deepEqual( Stem("promené"), "promen");});
test("promènent -> promènent", function() {deepEqual( Stem("promènent"), "promènent");});
test("promener -> promen", function() {deepEqual( Stem("promener"), "promen");});
test("promenèrent -> promen", function() {deepEqual( Stem("promenèrent"), "promen");});
test("promenés -> promen", function() {deepEqual( Stem("promenés"), "promen");});
test("promeneur -> promeneur", function() {deepEqual( Stem("promeneur"), "promeneur");});
test("promeneurs -> promeneur", function() {deepEqual( Stem("promeneurs"), "promeneur");});
test("promenez -> promen", function() {deepEqual( Stem("promenez"), "promen");});
test("promenions -> promen", function() {deepEqual( Stem("promenions"), "promen");});
test("promesse -> promess", function() {deepEqual( Stem("promesse"), "promess");});
test("promesses -> promess", function() {deepEqual( Stem("promesses"), "promess");});
test("promet -> promet", function() {deepEqual( Stem("promet"), "promet");});
test("promets -> promet", function() {deepEqual( Stem("promets"), "promet");});
test("promettait -> promet", function() {deepEqual( Stem("promettait"), "promet");});
test("promette -> promet", function() {deepEqual( Stem("promette"), "promet");});
test("promettent -> promettent", function() {deepEqual( Stem("promettent"), "promettent");});
test("promettez -> promet", function() {deepEqual( Stem("promettez"), "promet");});
test("promettons -> prometton", function() {deepEqual( Stem("promettons"), "prometton");});
test("promettre -> promettr", function() {deepEqual( Stem("promettre"), "promettr");});
test("promis -> prom", function() {deepEqual( Stem("promis"), "prom");});
test("promise -> promis", function() {deepEqual( Stem("promise"), "promis");});
test("promit -> prom", function() {deepEqual( Stem("promit"), "prom");});
test("promontoire -> promontoir", function() {deepEqual( Stem("promontoire"), "promontoir");});
test("promotion -> promot", function() {deepEqual( Stem("promotion"), "promot");});
test("prompte -> prompt", function() {deepEqual( Stem("prompte"), "prompt");});
test("promptement -> prompt", function() {deepEqual( Stem("promptement"), "prompt");});
test("prôner -> prôn", function() {deepEqual( Stem("prôner"), "prôn");});
test("prononça -> prononc", function() {deepEqual( Stem("prononça"), "prononc");});
test("prononçait -> prononc", function() {deepEqual( Stem("prononçait"), "prononc");});
test("prononçant -> prononc", function() {deepEqual( Stem("prononçant"), "prononc");});
test("prononce -> prononc", function() {deepEqual( Stem("prononce"), "prononc");});
test("prononcé -> prononc", function() {deepEqual( Stem("prononcé"), "prononc");});
test("prononcée -> prononc", function() {deepEqual( Stem("prononcée"), "prononc");});
test("prononcées -> prononc", function() {deepEqual( Stem("prononcées"), "prononc");});
test("prononcer -> prononc", function() {deepEqual( Stem("prononcer"), "prononc");});
test("prononcera -> prononc", function() {deepEqual( Stem("prononcera"), "prononc");});
test("prononcerait -> prononc", function() {deepEqual( Stem("prononcerait"), "prononc");});
test("prononcèrent -> prononc", function() {deepEqual( Stem("prononcèrent"), "prononc");});
test("prononcés -> prononc", function() {deepEqual( Stem("prononcés"), "prononc");});
test("prononciation -> prononci", function() {deepEqual( Stem("prononciation"), "prononci");});
test("prononçons -> prononçon", function() {deepEqual( Stem("prononçons"), "prononçon");});
test("pronostics -> pronostic", function() {deepEqual( Stem("pronostics"), "pronostic");});
test("propageaient -> propag", function() {deepEqual( Stem("propageaient"), "propag");});
test("propagèrent -> propag", function() {deepEqual( Stem("propagèrent"), "propag");});
test("propension -> propens", function() {deepEqual( Stem("propension"), "propens");});
test("prophète -> prophet", function() {deepEqual( Stem("prophète"), "prophet");});
test("prophètes -> prophet", function() {deepEqual( Stem("prophètes"), "prophet");});
test("prophétie -> prophet", function() {deepEqual( Stem("prophétie"), "prophet");});
test("prophéties -> prophet", function() {deepEqual( Stem("prophéties"), "prophet");});
test("propice -> propic", function() {deepEqual( Stem("propice"), "propic");});
test("propices -> propic", function() {deepEqual( Stem("propices"), "propic");});
test("propitiatoires -> propitiatoir", function() {deepEqual( Stem("propitiatoires"), "propitiatoir");});
test("proportion -> proport", function() {deepEqual( Stem("proportion"), "proport");});
test("proportionné -> proportion", function() {deepEqual( Stem("proportionné"), "proportion");});
test("proportions -> proport", function() {deepEqual( Stem("proportions"), "proport");});
test("propos -> propos", function() {deepEqual( Stem("propos"), "propos");});
test("proposa -> propos", function() {deepEqual( Stem("proposa"), "propos");});
test("proposait -> propos", function() {deepEqual( Stem("proposait"), "propos");});
test("propose -> propos", function() {deepEqual( Stem("propose"), "propos");});
test("proposé -> propos", function() {deepEqual( Stem("proposé"), "propos");});
test("proposer -> propos", function() {deepEqual( Stem("proposer"), "propos");});
test("proposerait -> propos", function() {deepEqual( Stem("proposerait"), "propos");});
test("proposés -> propos", function() {deepEqual( Stem("proposés"), "propos");});
test("proposez -> propos", function() {deepEqual( Stem("proposez"), "propos");});
test("proposition -> proposit", function() {deepEqual( Stem("proposition"), "proposit");});
test("propositions -> proposit", function() {deepEqual( Stem("propositions"), "proposit");});
test("propre -> propr", function() {deepEqual( Stem("propre"), "propr");});
test("proprement -> propr", function() {deepEqual( Stem("proprement"), "propr");});
test("propres -> propr", function() {deepEqual( Stem("propres"), "propr");});
test("propreté -> propret", function() {deepEqual( Stem("propreté"), "propret");});
test("propriétaire -> propriétair", function() {deepEqual( Stem("propriétaire"), "propriétair");});
test("propriétaires -> propriétair", function() {deepEqual( Stem("propriétaires"), "propriétair");});
test("propriété -> propriet", function() {deepEqual( Stem("propriété"), "propriet");});
test("propriétés -> propriet", function() {deepEqual( Stem("propriétés"), "propriet");});
test("proprio -> proprio", function() {deepEqual( Stem("proprio"), "proprio");});
test("prosaïquement -> prosaïqu", function() {deepEqual( Stem("prosaïquement"), "prosaïqu");});
test("prosaïques -> prosaïqu", function() {deepEqual( Stem("prosaïques"), "prosaïqu");});
test("proscrivent -> proscrivent", function() {deepEqual( Stem("proscrivent"), "proscrivent");});
test("prose -> pros", function() {deepEqual( Stem("prose"), "pros");});
test("prosélytisme -> prosélyt", function() {deepEqual( Stem("prosélytisme"), "prosélyt");});
test("prospèrent -> prosp", function() {deepEqual( Stem("prospèrent"), "prosp");});
test("prospérité -> prosper", function() {deepEqual( Stem("prospérité"), "prosper");});
test("prospérités -> prosper", function() {deepEqual( Stem("prospérités"), "prosper");});
test("prosterna -> prostern", function() {deepEqual( Stem("prosterna"), "prostern");});
test("prosternait -> prostern", function() {deepEqual( Stem("prosternait"), "prostern");});
test("prosternant -> prostern", function() {deepEqual( Stem("prosternant"), "prostern");});
test("prostration -> prostrat", function() {deepEqual( Stem("prostration"), "prostrat");});
test("protecteur -> protecteur", function() {deepEqual( Stem("protecteur"), "protecteur");});
test("protecteurs -> protecteur", function() {deepEqual( Stem("protecteurs"), "protecteur");});
test("protection -> protect", function() {deepEqual( Stem("protection"), "protect");});
test("protections -> protect", function() {deepEqual( Stem("protections"), "protect");});
test("protège -> proteg", function() {deepEqual( Stem("protège"), "proteg");});
test("protégé -> proteg", function() {deepEqual( Stem("protégé"), "proteg");});
test("protégeaient -> proteg", function() {deepEqual( Stem("protégeaient"), "proteg");});
test("protégeait -> proteg", function() {deepEqual( Stem("protégeait"), "proteg");});
test("protéger -> proteg", function() {deepEqual( Stem("protéger"), "proteg");});
test("protégera -> proteg", function() {deepEqual( Stem("protégera"), "proteg");});
test("protégés -> proteg", function() {deepEqual( Stem("protégés"), "proteg");});
test("protégez -> proteg", function() {deepEqual( Stem("protégez"), "proteg");});
test("protesta -> protest", function() {deepEqual( Stem("protesta"), "protest");});
test("protestait -> protest", function() {deepEqual( Stem("protestait"), "protest");});
test("protestant -> protest", function() {deepEqual( Stem("protestant"), "protest");});
test("protestante -> protest", function() {deepEqual( Stem("protestante"), "protest");});
test("protestantisme -> protestant", function() {deepEqual( Stem("protestantisme"), "protestant");});
test("protestants -> protest", function() {deepEqual( Stem("protestants"), "protest");});
test("protestations -> protest", function() {deepEqual( Stem("protestations"), "protest");});
test("proteste -> protest", function() {deepEqual( Stem("proteste"), "protest");});
test("protesté -> protest", function() {deepEqual( Stem("protesté"), "protest");});
test("protester -> protest", function() {deepEqual( Stem("protester"), "protest");});
test("prouesse -> prouess", function() {deepEqual( Stem("prouesse"), "prouess");});
test("prouva -> prouv", function() {deepEqual( Stem("prouva"), "prouv");});
test("prouvaient -> prouv", function() {deepEqual( Stem("prouvaient"), "prouv");});
test("prouvait -> prouv", function() {deepEqual( Stem("prouvait"), "prouv");});
test("prouvant -> prouv", function() {deepEqual( Stem("prouvant"), "prouv");});
test("prouve -> prouv", function() {deepEqual( Stem("prouve"), "prouv");});
test("prouvé -> prouv", function() {deepEqual( Stem("prouvé"), "prouv");});
test("prouvée -> prouv", function() {deepEqual( Stem("prouvée"), "prouv");});
test("prouvées -> prouv", function() {deepEqual( Stem("prouvées"), "prouv");});
test("prouvent -> prouvent", function() {deepEqual( Stem("prouvent"), "prouvent");});
test("prouver -> prouv", function() {deepEqual( Stem("prouver"), "prouv");});
test("prouveraient -> prouv", function() {deepEqual( Stem("prouveraient"), "prouv");});
test("prouvez -> prouv", function() {deepEqual( Stem("prouvez"), "prouv");});
test("provenaient -> proven", function() {deepEqual( Stem("provenaient"), "proven");});
test("provenait -> proven", function() {deepEqual( Stem("provenait"), "proven");});
test("provence -> provenc", function() {deepEqual( Stem("provence"), "provenc");});
test("proverbe -> proverb", function() {deepEqual( Stem("proverbe"), "proverb");});
test("proverbiale -> proverbial", function() {deepEqual( Stem("proverbiale"), "proverbial");});
test("providence -> provident", function() {deepEqual( Stem("providence"), "provident");});
test("provient -> provient", function() {deepEqual( Stem("provient"), "provient");});
test("province -> provinc", function() {deepEqual( Stem("province"), "provinc");});
test("provinces -> provinc", function() {deepEqual( Stem("provinces"), "provinc");});
test("provincial -> provincial", function() {deepEqual( Stem("provincial"), "provincial");});
test("provinciale -> provincial", function() {deepEqual( Stem("provinciale"), "provincial");});
test("provinciaux -> provincial", function() {deepEqual( Stem("provinciaux"), "provincial");});
test("provision -> provis", function() {deepEqual( Stem("provision"), "provis");});
test("provisions -> provis", function() {deepEqual( Stem("provisions"), "provis");});
test("provocante -> provoc", function() {deepEqual( Stem("provocante"), "provoc");});
test("provocatrice -> provoc", function() {deepEqual( Stem("provocatrice"), "provoc");});
test("provoqua -> provoqu", function() {deepEqual( Stem("provoqua"), "provoqu");});
test("provoquait -> provoqu", function() {deepEqual( Stem("provoquait"), "provoqu");});
test("provoqué -> provoqu", function() {deepEqual( Stem("provoqué"), "provoqu");});
test("provoquée -> provoqu", function() {deepEqual( Stem("provoquée"), "provoqu");});
test("provoquer -> provoqu", function() {deepEqual( Stem("provoquer"), "provoqu");});
test("prude -> prud", function() {deepEqual( Stem("prude"), "prud");});
test("prudemment -> prudent", function() {deepEqual( Stem("prudemment"), "prudent");});
test("prudence -> prudenc", function() {deepEqual( Stem("prudence"), "prudenc");});
test("prudent -> prudent", function() {deepEqual( Stem("prudent"), "prudent");});
test("prudente -> prudent", function() {deepEqual( Stem("prudente"), "prudent");});
test("prudentes -> prudent", function() {deepEqual( Stem("prudentes"), "prudent");});
test("prudents -> prudent", function() {deepEqual( Stem("prudents"), "prudent");});
test("pruderie -> pruder", function() {deepEqual( Stem("pruderie"), "pruder");});
test("prunelle -> prunel", function() {deepEqual( Stem("prunelle"), "prunel");});
test("pruniers -> pruni", function() {deepEqual( Stem("pruniers"), "pruni");});
test("prusse -> pruss", function() {deepEqual( Stem("prusse"), "pruss");});
test("prussien -> prussien", function() {deepEqual( Stem("prussien"), "prussien");});
test("prussienne -> prussien", function() {deepEqual( Stem("prussienne"), "prussien");});
test("prussiens -> prussien", function() {deepEqual( Stem("prussiens"), "prussien");});
test("psalmodie -> psalmod", function() {deepEqual( Stem("psalmodie"), "psalmod");});
test("psaume -> psaum", function() {deepEqual( Stem("psaume"), "psaum");});
test("psaumes -> psaum", function() {deepEqual( Stem("psaumes"), "psaum");});
test("pseudonyme -> pseudonym", function() {deepEqual( Stem("pseudonyme"), "pseudonym");});
test("psyché -> psych", function() {deepEqual( Stem("psyché"), "psych");});
test("pu -> pu", function() {deepEqual( Stem("pu"), "pu");});
test("publia -> publi", function() {deepEqual( Stem("publia"), "publi");});
test("public -> public", function() {deepEqual( Stem("public"), "public");});
test("publicité -> publiqu", function() {deepEqual( Stem("publicité"), "publiqu");});
test("publics -> public", function() {deepEqual( Stem("publics"), "public");});
test("publie -> publ", function() {deepEqual( Stem("publie"), "publ");});
test("publié -> publi", function() {deepEqual( Stem("publié"), "publi");});
test("publiée -> publi", function() {deepEqual( Stem("publiée"), "publi");});
test("publiées -> publi", function() {deepEqual( Stem("publiées"), "publi");});
test("publièrent -> publi", function() {deepEqual( Stem("publièrent"), "publi");});
test("publique -> publiqu", function() {deepEqual( Stem("publique"), "publiqu");});
test("publiquement -> publiqu", function() {deepEqual( Stem("publiquement"), "publiqu");});
test("publiques -> publiqu", function() {deepEqual( Stem("publiques"), "publiqu");});
test("pudeur -> pudeur", function() {deepEqual( Stem("pudeur"), "pudeur");});
test("puériles -> puéril", function() {deepEqual( Stem("puériles"), "puéril");});
test("puis -> puis", function() {deepEqual( Stem("puis"), "puis");});
test("puisait -> puis", function() {deepEqual( Stem("puisait"), "puis");});
test("puisant -> puis", function() {deepEqual( Stem("puisant"), "puis");});
test("puisée -> puis", function() {deepEqual( Stem("puisée"), "puis");});
test("puiser -> puis", function() {deepEqual( Stem("puiser"), "puis");});
test("puisés -> puis", function() {deepEqual( Stem("puisés"), "puis");});
test("puisqu -> puisqu", function() {deepEqual( Stem("puisqu"), "puisqu");});
test("puisque -> puisqu", function() {deepEqual( Stem("puisque"), "puisqu");});
test("puissamment -> puiss", function() {deepEqual( Stem("puissamment"), "puiss");});
test("puissance -> puissanc", function() {deepEqual( Stem("puissance"), "puissanc");});
test("puissances -> puissanc", function() {deepEqual( Stem("puissances"), "puissanc");});
test("puissant -> puiss", function() {deepEqual( Stem("puissant"), "puiss");});
test("puissante -> puiss", function() {deepEqual( Stem("puissante"), "puiss");});
test("puissantes -> puiss", function() {deepEqual( Stem("puissantes"), "puiss");});
test("puissants -> puiss", function() {deepEqual( Stem("puissants"), "puiss");});
test("puisse -> puiss", function() {deepEqual( Stem("puisse"), "puiss");});
test("puissent -> puissent", function() {deepEqual( Stem("puissent"), "puissent");});
test("puissiez -> puiss", function() {deepEqual( Stem("puissiez"), "puiss");});
test("puissions -> puission", function() {deepEqual( Stem("puissions"), "puission");});
test("puits -> puit", function() {deepEqual( Stem("puits"), "puit");});
test("pullulaient -> pullul", function() {deepEqual( Stem("pullulaient"), "pullul");});
test("pullulent -> pullulent", function() {deepEqual( Stem("pullulent"), "pullulent");});
test("punch -> punch", function() {deepEqual( Stem("punch"), "punch");});
test("puni -> pun", function() {deepEqual( Stem("puni"), "pun");});
test("punie -> pun", function() {deepEqual( Stem("punie"), "pun");});
test("punir -> pun", function() {deepEqual( Stem("punir"), "pun");});
test("punira -> pun", function() {deepEqual( Stem("punira"), "pun");});
test("punirait -> pun", function() {deepEqual( Stem("punirait"), "pun");});
test("punirmi -> punirm", function() {deepEqual( Stem("punirmi"), "punirm");});
test("punis -> pun", function() {deepEqual( Stem("punis"), "pun");});
test("punisse -> pun", function() {deepEqual( Stem("punisse"), "pun");});
test("punit -> pun", function() {deepEqual( Stem("punit"), "pun");});
test("punîtes -> pun", function() {deepEqual( Stem("punîtes"), "pun");});
test("punition -> punit", function() {deepEqual( Stem("punition"), "punit");});
test("punitions -> punit", function() {deepEqual( Stem("punitions"), "punit");});
test("puntiglio -> puntiglio", function() {deepEqual( Stem("puntiglio"), "puntiglio");});
test("pupille -> pupill", function() {deepEqual( Stem("pupille"), "pupill");});
test("pupitre -> pupitr", function() {deepEqual( Stem("pupitre"), "pupitr");});
test("pur -> pur", function() {deepEqual( Stem("pur"), "pur");});
test("pure -> pur", function() {deepEqual( Stem("pure"), "pur");});
test("purement -> pur", function() {deepEqual( Stem("purement"), "pur");});
test("purent -> purent", function() {deepEqual( Stem("purent"), "purent");});
test("pureté -> puret", function() {deepEqual( Stem("pureté"), "puret");});
test("purgeait -> purg", function() {deepEqual( Stem("purgeait"), "purg");});
test("purger -> purg", function() {deepEqual( Stem("purger"), "purg");});
test("puritaine -> puritain", function() {deepEqual( Stem("puritaine"), "puritain");});
test("purs -> pur", function() {deepEqual( Stem("purs"), "pur");});
test("purser -> purs", function() {deepEqual( Stem("purser"), "purs");});
test("pusillanime -> pusillanim", function() {deepEqual( Stem("pusillanime"), "pusillanim");});
test("pusillanimes -> pusillanim", function() {deepEqual( Stem("pusillanimes"), "pusillanim");});
test("pusillanimité -> pusillanim", function() {deepEqual( Stem("pusillanimité"), "pusillanim");});
test("pusse -> puss", function() {deepEqual( Stem("pusse"), "puss");});
test("pussent -> pussent", function() {deepEqual( Stem("pussent"), "pussent");});
test("put -> put", function() {deepEqual( Stem("put"), "put");});
test("pût -> pût", function() {deepEqual( Stem("pût"), "pût");});
test("putiphar -> putiphar", function() {deepEqual( Stem("putiphar"), "putiphar");});
test("putréfaction -> putréfact", function() {deepEqual( Stem("putréfaction"), "putréfact");});
test("pyramide -> pyramid", function() {deepEqual( Stem("pyramide"), "pyramid");});
test("pyrénées -> pyren", function() {deepEqual( Stem("pyrénées"), "pyren");});
test("qu -> qu", function() {deepEqual( Stem("qu"), "qu");});
test("qua -> qua", function() {deepEqual( Stem("qua"), "qua");});
test("quadrille -> quadrill", function() {deepEqual( Stem("quadrille"), "quadrill");});
test("quadrupède -> quadruped", function() {deepEqual( Stem("quadrupède"), "quadruped");});
test("quadruple -> quadrupl", function() {deepEqual( Stem("quadruple"), "quadrupl");});
test("quai -> quai", function() {deepEqual( Stem("quai"), "quai");});
test("quais -> quais", function() {deepEqual( Stem("quais"), "quais");});
test("quakeresse -> quakeress", function() {deepEqual( Stem("quakeresse"), "quakeress");});
test("qualifiait -> qualifi", function() {deepEqual( Stem("qualifiait"), "qualifi");});
test("qualificatif -> qualif", function() {deepEqual( Stem("qualificatif"), "qualif");});
test("qualification -> qualif", function() {deepEqual( Stem("qualification"), "qualif");});
test("qualité -> qualit", function() {deepEqual( Stem("qualité"), "qualit");});
test("qualités -> qualit", function() {deepEqual( Stem("qualités"), "qualit");});
test("quand -> quand", function() {deepEqual( Stem("quand"), "quand");});
test("quando -> quando", function() {deepEqual( Stem("quando"), "quando");});
test("quant -> quant", function() {deepEqual( Stem("quant"), "quant");});
test("quanti -> quant", function() {deepEqual( Stem("quanti"), "quant");});
test("quantième -> quantiem", function() {deepEqual( Stem("quantième"), "quantiem");});
test("quantièmes -> quantiem", function() {deepEqual( Stem("quantièmes"), "quantiem");});
test("quantité -> quantit", function() {deepEqual( Stem("quantité"), "quantit");});
test("quarantaine -> quarantain", function() {deepEqual( Stem("quarantaine"), "quarantain");});
test("quarante -> quar", function() {deepEqual( Stem("quarante"), "quar");});
test("quarantième -> quarantiem", function() {deepEqual( Stem("quarantième"), "quarantiem");});
test("quart -> quart", function() {deepEqual( Stem("quart"), "quart");});
test("quarti -> quart", function() {deepEqual( Stem("quarti"), "quart");});
test("quartier -> quarti", function() {deepEqual( Stem("quartier"), "quarti");});
test("quartiers -> quarti", function() {deepEqual( Stem("quartiers"), "quarti");});
test("quarto -> quarto", function() {deepEqual( Stem("quarto"), "quarto");});
test("quarts -> quart", function() {deepEqual( Stem("quarts"), "quart");});
test("quatorze -> quatorz", function() {deepEqual( Stem("quatorze"), "quatorz");});
test("quatre -> quatr", function() {deepEqual( Stem("quatre"), "quatr");});
test("quatrième -> quatriem", function() {deepEqual( Stem("quatrième"), "quatriem");});
test("quatrièmes -> quatriem", function() {deepEqual( Stem("quatrièmes"), "quatriem");});
test("que -> que", function() {deepEqual( Stem("que"), "que");});
test("queenstown -> queenstown", function() {deepEqual( Stem("queenstown"), "queenstown");});
test("quel -> quel", function() {deepEqual( Stem("quel"), "quel");});
test("quelconque -> quelconqu", function() {deepEqual( Stem("quelconque"), "quelconqu");});
test("quelle -> quel", function() {deepEqual( Stem("quelle"), "quel");});
test("quelles -> quel", function() {deepEqual( Stem("quelles"), "quel");});
test("quelqu -> quelqu", function() {deepEqual( Stem("quelqu"), "quelqu");});
test("quelque -> quelqu", function() {deepEqual( Stem("quelque"), "quelqu");});
test("quelquefois -> quelquefois", function() {deepEqual( Stem("quelquefois"), "quelquefois");});
test("quelques -> quelqu", function() {deepEqual( Stem("quelques"), "quelqu");});
test("quels -> quel", function() {deepEqual( Stem("quels"), "quel");});
test("quem -> quem", function() {deepEqual( Stem("quem"), "quem");});
test("querelle -> querel", function() {deepEqual( Stem("querelle"), "querel");});
test("querelles -> querel", function() {deepEqual( Stem("querelles"), "querel");});
test("question -> question", function() {deepEqual( Stem("question"), "question");});
test("questionner -> question", function() {deepEqual( Stem("questionner"), "question");});
test("questions -> question", function() {deepEqual( Stem("questions"), "question");});
test("quête -> quêt", function() {deepEqual( Stem("quête"), "quêt");});
test("quêtes -> quêt", function() {deepEqual( Stem("quêtes"), "quêt");});
test("quêteurs -> quêteur", function() {deepEqual( Stem("quêteurs"), "quêteur");});
test("queue -> queu", function() {deepEqual( Stem("queue"), "queu");});
test("qui -> qui", function() {deepEqual( Stem("qui"), "qui");});
test("quibus -> quibus", function() {deepEqual( Stem("quibus"), "quibus");});
test("quichotte -> quichott", function() {deepEqual( Stem("quichotte"), "quichott");});
test("quiconque -> quiconqu", function() {deepEqual( Stem("quiconque"), "quiconqu");});
test("quid -> quid", function() {deepEqual( Stem("quid"), "quid");});
test("quille -> quill", function() {deepEqual( Stem("quille"), "quill");});
test("quint -> quint", function() {deepEqual( Stem("quint"), "quint");});
test("quintaux -> quintal", function() {deepEqual( Stem("quintaux"), "quintal");});
test("quinte -> quint", function() {deepEqual( Stem("quinte"), "quint");});
test("quinzaine -> quinzain", function() {deepEqual( Stem("quinzaine"), "quinzain");});
test("quinze -> quinz", function() {deepEqual( Stem("quinze"), "quinz");});
test("quinzième -> quinziem", function() {deepEqual( Stem("quinzième"), "quinziem");});
test("quitta -> quitt", function() {deepEqual( Stem("quitta"), "quitt");});
test("quittai -> quitt", function() {deepEqual( Stem("quittai"), "quitt");});
test("quittais -> quitt", function() {deepEqual( Stem("quittais"), "quitt");});
test("quittait -> quitt", function() {deepEqual( Stem("quittait"), "quitt");});
test("quittant -> quitt", function() {deepEqual( Stem("quittant"), "quitt");});
test("quittât -> quitt", function() {deepEqual( Stem("quittât"), "quitt");});
test("quitte -> quitt", function() {deepEqual( Stem("quitte"), "quitt");});
test("quitté -> quitt", function() {deepEqual( Stem("quitté"), "quitt");});
test("quittent -> quittent", function() {deepEqual( Stem("quittent"), "quittent");});
test("quitter -> quitt", function() {deepEqual( Stem("quitter"), "quitt");});
test("quittera -> quitt", function() {deepEqual( Stem("quittera"), "quitt");});
test("quitterai -> quitt", function() {deepEqual( Stem("quitterai"), "quitt");});
test("quitterait -> quitt", function() {deepEqual( Stem("quitterait"), "quitt");});
test("quittèrent -> quitt", function() {deepEqual( Stem("quittèrent"), "quitt");});
test("quitterez -> quitt", function() {deepEqual( Stem("quitterez"), "quitt");});
test("quitterons -> quitt", function() {deepEqual( Stem("quitterons"), "quitt");});
test("quittes -> quitt", function() {deepEqual( Stem("quittes"), "quitt");});
test("quittés -> quitt", function() {deepEqual( Stem("quittés"), "quitt");});
test("quittez -> quitt", function() {deepEqual( Stem("quittez"), "quitt");});
test("quittons -> quitton", function() {deepEqual( Stem("quittons"), "quitton");});
test("quoerens -> quoeren", function() {deepEqual( Stem("quoerens"), "quoeren");});
test("quoi -> quoi", function() {deepEqual( Stem("quoi"), "quoi");});
test("quoiqu -> quoiqu", function() {deepEqual( Stem("quoiqu"), "quoiqu");});
test("quoique -> quoiqu", function() {deepEqual( Stem("quoique"), "quoiqu");});
test("quotidien -> quotidien", function() {deepEqual( Stem("quotidien"), "quotidien");});
test("quotidienne -> quotidien", function() {deepEqual( Stem("quotidienne"), "quotidien");});
test("quotidiennement -> quotidien", function() {deepEqual( Stem("quotidiennement"), "quotidien");});
test("quotité -> quotit", function() {deepEqual( Stem("quotité"), "quotit");});
test("r -> r", function() {deepEqual( Stem("r"), "r");});
test("rabâchage -> rabâchag", function() {deepEqual( Stem("rabâchage"), "rabâchag");});
test("rabaisser -> rabaiss", function() {deepEqual( Stem("rabaisser"), "rabaiss");});
test("raccommodait -> raccommod", function() {deepEqual( Stem("raccommodait"), "raccommod");});
test("raccommodant -> raccommod", function() {deepEqual( Stem("raccommodant"), "raccommod");});
test("raccommodé -> raccommod", function() {deepEqual( Stem("raccommodé"), "raccommod");});
test("raccommodements -> raccommod", function() {deepEqual( Stem("raccommodements"), "raccommod");});
test("raccommoder -> raccommod", function() {deepEqual( Stem("raccommoder"), "raccommod");});
test("raccordent -> raccordent", function() {deepEqual( Stem("raccordent"), "raccordent");});
test("raccourcis -> raccourc", function() {deepEqual( Stem("raccourcis"), "raccourc");});
test("race -> rac", function() {deepEqual( Stem("race"), "rac");});
test("races -> rac", function() {deepEqual( Stem("races"), "rac");});
test("rachète -> rachet", function() {deepEqual( Stem("rachète"), "rachet");});
test("racheter -> rachet", function() {deepEqual( Stem("racheter"), "rachet");});
test("racine -> racin", function() {deepEqual( Stem("racine"), "racin");});
test("raconta -> racont", function() {deepEqual( Stem("raconta"), "racont");});
test("racontait -> racont", function() {deepEqual( Stem("racontait"), "racont");});
test("racontant -> racont", function() {deepEqual( Stem("racontant"), "racont");});
test("racontât -> racont", function() {deepEqual( Stem("racontât"), "racont");});
test("raconte -> racont", function() {deepEqual( Stem("raconte"), "racont");});
test("raconté -> racont", function() {deepEqual( Stem("raconté"), "racont");});
test("racontent -> racontent", function() {deepEqual( Stem("racontent"), "racontent");});
test("raconter -> racont", function() {deepEqual( Stem("raconter"), "racont");});
test("raconterai -> racont", function() {deepEqual( Stem("raconterai"), "racont");});
test("raconteraient -> racont", function() {deepEqual( Stem("raconteraient"), "racont");});
test("raconterait -> racont", function() {deepEqual( Stem("raconterait"), "racont");});
test("racontèrent -> racont", function() {deepEqual( Stem("racontèrent"), "racont");});
test("raconterons -> racont", function() {deepEqual( Stem("raconterons"), "racont");});
test("racontés -> racont", function() {deepEqual( Stem("racontés"), "racont");});
test("racontez -> racont", function() {deepEqual( Stem("racontez"), "racont");});
test("rade -> rad", function() {deepEqual( Stem("rade"), "rad");});
test("radieux -> radieux", function() {deepEqual( Stem("radieux"), "radieux");});
test("radouci -> radouc", function() {deepEqual( Stem("radouci"), "radouc");});
test("rafale -> rafal", function() {deepEqual( Stem("rafale"), "rafal");});
test("rafales -> rafal", function() {deepEqual( Stem("rafales"), "rafal");});
test("raffinée -> raffin", function() {deepEqual( Stem("raffinée"), "raffin");});
test("rafraîchie -> rafraîch", function() {deepEqual( Stem("rafraîchie"), "rafraîch");});
test("rafraîchir -> rafraîch", function() {deepEqual( Stem("rafraîchir"), "rafraîch");});
test("rafraîchissements -> rafraîch", function() {deepEqual( Stem("rafraîchissements"), "rafraîch");});
test("rafraîchit -> rafraîch", function() {deepEqual( Stem("rafraîchit"), "rafraîch");});
test("rage -> rag", function() {deepEqual( Stem("rage"), "rag");});
test("rageant -> rag", function() {deepEqual( Stem("rageant"), "rag");});
test("rages -> rag", function() {deepEqual( Stem("rages"), "rag");});
test("rageurs -> rageur", function() {deepEqual( Stem("rageurs"), "rageur");});
test("raide -> raid", function() {deepEqual( Stem("raide"), "raid");});
test("raidi -> raid", function() {deepEqual( Stem("raidi"), "raid");});
test("raidie -> raid", function() {deepEqual( Stem("raidie"), "raid");});
test("raidirent -> raid", function() {deepEqual( Stem("raidirent"), "raid");});
test("raies -> rai", function() {deepEqual( Stem("raies"), "rai");});
test("rail -> rail", function() {deepEqual( Stem("rail"), "rail");});
test("raillerie -> railler", function() {deepEqual( Stem("raillerie"), "railler");});
test("railroad -> railroad", function() {deepEqual( Stem("railroad"), "railroad");});
test("rails -> rail", function() {deepEqual( Stem("rails"), "rail");});
test("railway -> railway", function() {deepEqual( Stem("railway"), "railway");});
test("railways -> railway", function() {deepEqual( Stem("railways"), "railway");});
test("raison -> raison", function() {deepEqual( Stem("raison"), "raison");});
test("raisonna -> raison", function() {deepEqual( Stem("raisonna"), "raison");});
test("raisonnable -> raison", function() {deepEqual( Stem("raisonnable"), "raison");});
test("raisonnablement -> raison", function() {deepEqual( Stem("raisonnablement"), "raison");});
test("raisonnables -> raison", function() {deepEqual( Stem("raisonnables"), "raison");});
test("raisonnais -> raison", function() {deepEqual( Stem("raisonnais"), "raison");});
test("raisonnait -> raison", function() {deepEqual( Stem("raisonnait"), "raison");});
test("raisonnante -> raison", function() {deepEqual( Stem("raisonnante"), "raison");});
test("raisonne -> raison", function() {deepEqual( Stem("raisonne"), "raison");});
test("raisonnement -> raison", function() {deepEqual( Stem("raisonnement"), "raison");});
test("raisonnements -> raison", function() {deepEqual( Stem("raisonnements"), "raison");});
test("raisonner -> raison", function() {deepEqual( Stem("raisonner"), "raison");});
test("raisonneur -> raisonneur", function() {deepEqual( Stem("raisonneur"), "raisonneur");});
test("raisons -> raison", function() {deepEqual( Stem("raisons"), "raison");});
test("rajah -> rajah", function() {deepEqual( Stem("rajah"), "rajah");});
test("rajahs -> rajah", function() {deepEqual( Stem("rajahs"), "rajah");});
test("rajeuni -> rajeun", function() {deepEqual( Stem("rajeuni"), "rajeun");});
test("râlaient -> râl", function() {deepEqual( Stem("râlaient"), "râl");});
test("ralentie -> ralent", function() {deepEqual( Stem("ralentie"), "ralent");});
test("ralentir -> ralent", function() {deepEqual( Stem("ralentir"), "ralent");});
test("ralentissant -> ralent", function() {deepEqual( Stem("ralentissant"), "ralent");});
test("ralentit -> ralent", function() {deepEqual( Stem("ralentit"), "ralent");});
test("ralliait -> ralli", function() {deepEqual( Stem("ralliait"), "ralli");});
test("rallier -> ralli", function() {deepEqual( Stem("rallier"), "ralli");});
test("ralluma -> rallum", function() {deepEqual( Stem("ralluma"), "rallum");});
test("ralph -> ralph", function() {deepEqual( Stem("ralph"), "ralph");});
test("ramassa -> ramass", function() {deepEqual( Stem("ramassa"), "ramass");});
test("ramassaient -> ramass", function() {deepEqual( Stem("ramassaient"), "ramass");});
test("ramassait -> ramass", function() {deepEqual( Stem("ramassait"), "ramass");});
test("ramasse -> ram", function() {deepEqual( Stem("ramasse"), "ram");});
test("ramassé -> ramass", function() {deepEqual( Stem("ramassé"), "ramass");});
test("ramasser -> ramass", function() {deepEqual( Stem("ramasser"), "ramass");});
test("ramasseraient -> ramass", function() {deepEqual( Stem("ramasseraient"), "ramass");});
test("ramassés -> ramass", function() {deepEqual( Stem("ramassés"), "ramass");});
test("ramassis -> ramass", function() {deepEqual( Stem("ramassis"), "ramass");});
test("ramayana -> ramayan", function() {deepEqual( Stem("ramayana"), "ramayan");});
test("rambarde -> rambard", function() {deepEqual( Stem("rambarde"), "rambard");});
test("rambo -> rambo", function() {deepEqual( Stem("rambo"), "rambo");});
test("rame -> ram", function() {deepEqual( Stem("rame"), "ram");});
test("ramena -> ramen", function() {deepEqual( Stem("ramena"), "ramen");});
test("ramenait -> ramen", function() {deepEqual( Stem("ramenait"), "ramen");});
test("ramenant -> ramen", function() {deepEqual( Stem("ramenant"), "ramen");});
test("ramener -> ramen", function() {deepEqual( Stem("ramener"), "ramen");});
test("rames -> ram", function() {deepEqual( Stem("rames"), "ram");});
test("rameurs -> rameur", function() {deepEqual( Stem("rameurs"), "rameur");});
test("ramifiant -> ramifi", function() {deepEqual( Stem("ramifiant"), "ramifi");});
test("ramifications -> ramif", function() {deepEqual( Stem("ramifications"), "ramif");});
test("ramifiées -> ramifi", function() {deepEqual( Stem("ramifiées"), "ramifi");});
test("rampant -> ramp", function() {deepEqual( Stem("rampant"), "ramp");});
test("rampe -> ramp", function() {deepEqual( Stem("rampe"), "ramp");});
test("rampes -> ramp", function() {deepEqual( Stem("rampes"), "ramp");});
test("ramure -> ramur", function() {deepEqual( Stem("ramure"), "ramur");});
test("ramures -> ramur", function() {deepEqual( Stem("ramures"), "ramur");});
test("ranchos -> ranchos", function() {deepEqual( Stem("ranchos"), "ranchos");});
test("rancune -> rancun", function() {deepEqual( Stem("rancune"), "rancun");});
test("rancunier -> rancuni", function() {deepEqual( Stem("rancunier"), "rancuni");});
test("rang -> rang", function() {deepEqual( Stem("rang"), "rang");});
test("rangé -> rang", function() {deepEqual( Stem("rangé"), "rang");});
test("rangea -> rang", function() {deepEqual( Stem("rangea"), "rang");});
test("rangeait -> rang", function() {deepEqual( Stem("rangeait"), "rang");});
test("rangée -> rang", function() {deepEqual( Stem("rangée"), "rang");});
test("rangées -> rang", function() {deepEqual( Stem("rangées"), "rang");});
test("ranger -> rang", function() {deepEqual( Stem("ranger"), "rang");});
test("rangerait -> rang", function() {deepEqual( Stem("rangerait"), "rang");});
test("rangèrent -> rang", function() {deepEqual( Stem("rangèrent"), "rang");});
test("ranges -> rang", function() {deepEqual( Stem("ranges"), "rang");});
test("rangés -> rang", function() {deepEqual( Stem("rangés"), "rang");});
test("rangoon -> rangoon", function() {deepEqual( Stem("rangoon"), "rangoon");});
test("rangs -> rang", function() {deepEqual( Stem("rangs"), "rang");});
test("ranima -> ranim", function() {deepEqual( Stem("ranima"), "ranim");});
test("ranimé -> ranim", function() {deepEqual( Stem("ranimé"), "ranim");});
test("ranimer -> ranim", function() {deepEqual( Stem("ranimer"), "ranim");});
test("ranimèrent -> ranim", function() {deepEqual( Stem("ranimèrent"), "ranim");});
test("ranuce -> ranuc", function() {deepEqual( Stem("ranuce"), "ranuc");});
test("rapacité -> rapac", function() {deepEqual( Stem("rapacité"), "rapac");});
test("rapatrier -> rapatri", function() {deepEqual( Stem("rapatrier"), "rapatri");});
test("râpé -> râp", function() {deepEqual( Stem("râpé"), "râp");});
test("râpés -> râp", function() {deepEqual( Stem("râpés"), "râp");});
test("rapide -> rapid", function() {deepEqual( Stem("rapide"), "rapid");});
test("rapidement -> rapid", function() {deepEqual( Stem("rapidement"), "rapid");});
test("rapides -> rapid", function() {deepEqual( Stem("rapides"), "rapid");});
test("rapidité -> rapid", function() {deepEqual( Stem("rapidité"), "rapid");});
test("rappela -> rappel", function() {deepEqual( Stem("rappela"), "rappel");});
test("rappelaient -> rappel", function() {deepEqual( Stem("rappelaient"), "rappel");});
test("rappelait -> rappel", function() {deepEqual( Stem("rappelait"), "rappel");});
test("rappelant -> rappel", function() {deepEqual( Stem("rappelant"), "rappel");});
test("rappelât -> rappel", function() {deepEqual( Stem("rappelât"), "rappel");});
test("rappelé -> rappel", function() {deepEqual( Stem("rappelé"), "rappel");});
test("rappelée -> rappel", function() {deepEqual( Stem("rappelée"), "rappel");});
test("rappeler -> rappel", function() {deepEqual( Stem("rappeler"), "rappel");});
test("rappelèrent -> rappel", function() {deepEqual( Stem("rappelèrent"), "rappel");});
test("rappelés -> rappel", function() {deepEqual( Stem("rappelés"), "rappel");});
test("rappelez -> rappel", function() {deepEqual( Stem("rappelez"), "rappel");});
test("rappelle -> rappel", function() {deepEqual( Stem("rappelle"), "rappel");});
test("rappellent -> rappellent", function() {deepEqual( Stem("rappellent"), "rappellent");});
test("rappellera -> rappel", function() {deepEqual( Stem("rappellera"), "rappel");});
test("rappellerai -> rappel", function() {deepEqual( Stem("rappellerai"), "rappel");});
test("rappellerais -> rappel", function() {deepEqual( Stem("rappellerais"), "rappel");});
test("rappellerait -> rappel", function() {deepEqual( Stem("rappellerait"), "rappel");});
test("rappellerez -> rappel", function() {deepEqual( Stem("rappellerez"), "rappel");});
test("rapport -> rapport", function() {deepEqual( Stem("rapport"), "rapport");});
test("rapporta -> rapport", function() {deepEqual( Stem("rapporta"), "rapport");});
test("rapportaient -> rapport", function() {deepEqual( Stem("rapportaient"), "rapport");});
test("rapportait -> rapport", function() {deepEqual( Stem("rapportait"), "rapport");});
test("rapportant -> rapport", function() {deepEqual( Stem("rapportant"), "rapport");});
test("rapportât -> rapport", function() {deepEqual( Stem("rapportât"), "rapport");});
test("rapporte -> rapport", function() {deepEqual( Stem("rapporte"), "rapport");});
test("rapporté -> rapport", function() {deepEqual( Stem("rapporté"), "rapport");});
test("rapportée -> rapport", function() {deepEqual( Stem("rapportée"), "rapport");});
test("rapportées -> rapport", function() {deepEqual( Stem("rapportées"), "rapport");});
test("rapporter -> rapport", function() {deepEqual( Stem("rapporter"), "rapport");});
test("rapporterait -> rapport", function() {deepEqual( Stem("rapporterait"), "rapport");});
test("rapportèrent -> rapport", function() {deepEqual( Stem("rapportèrent"), "rapport");});
test("rapporterons -> rapport", function() {deepEqual( Stem("rapporterons"), "rapport");});
test("rapportes -> rapport", function() {deepEqual( Stem("rapportes"), "rapport");});
test("rapporteur -> rapporteur", function() {deepEqual( Stem("rapporteur"), "rapporteur");});
test("rapports -> rapport", function() {deepEqual( Stem("rapports"), "rapport");});
test("rapprocha -> rapproch", function() {deepEqual( Stem("rapprocha"), "rapproch");});
test("rapprochaient -> rapproch", function() {deepEqual( Stem("rapprochaient"), "rapproch");});
test("rapprochait -> rapproch", function() {deepEqual( Stem("rapprochait"), "rapproch");});
test("rapprochant -> rapproch", function() {deepEqual( Stem("rapprochant"), "rapproch");});
test("rapproche -> rapproch", function() {deepEqual( Stem("rapproche"), "rapproch");});
test("rapproché -> rapproch", function() {deepEqual( Stem("rapproché"), "rapproch");});
test("rapprochées -> rapproch", function() {deepEqual( Stem("rapprochées"), "rapproch");});
test("rapprocher -> rapproch", function() {deepEqual( Stem("rapprocher"), "rapproch");});
test("rapprocherait -> rapproch", function() {deepEqual( Stem("rapprocherait"), "rapproch");});
test("rapprochèrent -> rapproch", function() {deepEqual( Stem("rapprochèrent"), "rapproch");});
test("rapprochés -> rapproch", function() {deepEqual( Stem("rapprochés"), "rapproch");});
test("raquettes -> raquet", function() {deepEqual( Stem("raquettes"), "raquet");});
test("rare -> rar", function() {deepEqual( Stem("rare"), "rar");});
test("raréfiaient -> raréfi", function() {deepEqual( Stem("raréfiaient"), "raréfi");});
test("rarement -> rar", function() {deepEqual( Stem("rarement"), "rar");});
test("rares -> rar", function() {deepEqual( Stem("rares"), "rar");});
test("ras -> ras", function() {deepEqual( Stem("ras"), "ras");});
test("rasant -> ras", function() {deepEqual( Stem("rasant"), "ras");});
test("rasé -> ras", function() {deepEqual( Stem("rasé"), "ras");});
test("rasée -> ras", function() {deepEqual( Stem("rasée"), "ras");});
test("rasées -> ras", function() {deepEqual( Stem("rasées"), "ras");});
test("raser -> ras", function() {deepEqual( Stem("raser"), "ras");});
test("raserait -> ras", function() {deepEqual( Stem("raserait"), "ras");});
test("rassasié -> rassasi", function() {deepEqual( Stem("rassasié"), "rassasi");});
test("rassasiée -> rassasi", function() {deepEqual( Stem("rassasiée"), "rassasi");});
test("rassasier -> rassasi", function() {deepEqual( Stem("rassasier"), "rassasi");});
test("rassemblait -> rassembl", function() {deepEqual( Stem("rassemblait"), "rassembl");});
test("rassemblé -> rassembl", function() {deepEqual( Stem("rassemblé"), "rassembl");});
test("rassembler -> rassembl", function() {deepEqual( Stem("rassembler"), "rassembl");});
test("rassemblés -> rassembl", function() {deepEqual( Stem("rassemblés"), "rassembl");});
test("rasseoir -> rasseoir", function() {deepEqual( Stem("rasseoir"), "rasseoir");});
test("rasséréna -> rasséren", function() {deepEqual( Stem("rasséréna"), "rasséren");});
test("rasséréner -> rasséren", function() {deepEqual( Stem("rasséréner"), "rasséren");});
test("rassi -> rass", function() {deepEqual( Stem("rassi"), "rass");});
test("rassit -> rass", function() {deepEqual( Stem("rassit"), "rass");});
test("rassura -> rassur", function() {deepEqual( Stem("rassura"), "rassur");});
test("rassuraient -> rassur", function() {deepEqual( Stem("rassuraient"), "rassur");});
test("rassurait -> rassur", function() {deepEqual( Stem("rassurait"), "rassur");});
test("rassure -> rassur", function() {deepEqual( Stem("rassure"), "rassur");});
test("rassuré -> rassur", function() {deepEqual( Stem("rassuré"), "rassur");});
test("rassurée -> rassur", function() {deepEqual( Stem("rassurée"), "rassur");});
test("rassurer -> rassur", function() {deepEqual( Stem("rassurer"), "rassur");});
test("rassurez -> rassur", function() {deepEqual( Stem("rassurez"), "rassur");});
test("ratine -> ratin", function() {deepEqual( Stem("ratine"), "ratin");});
test("rationnelle -> rationnel", function() {deepEqual( Stem("rationnelle"), "rationnel");});
test("rationnellement -> rationnel", function() {deepEqual( Stem("rationnellement"), "rationnel");});
test("rats -> rat", function() {deepEqual( Stem("rats"), "rat");});
test("rattachait -> rattach", function() {deepEqual( Stem("rattachait"), "rattach");});
test("ravages -> ravag", function() {deepEqual( Stem("ravages"), "ravag");});
test("ravaler -> raval", function() {deepEqual( Stem("ravaler"), "raval");});
test("ravenne -> raven", function() {deepEqual( Stem("ravenne"), "raven");});
test("raversi -> ravers", function() {deepEqual( Stem("raversi"), "ravers");});
test("ravi -> rav", function() {deepEqual( Stem("ravi"), "rav");});
test("ravie -> rav", function() {deepEqual( Stem("ravie"), "rav");});
test("ravins -> ravin", function() {deepEqual( Stem("ravins"), "ravin");});
test("ravir -> rav", function() {deepEqual( Stem("ravir"), "rav");});
test("ravis -> rav", function() {deepEqual( Stem("ravis"), "rav");});
test("raviser -> ravis", function() {deepEqual( Stem("raviser"), "ravis");});
test("ravissait -> rav", function() {deepEqual( Stem("ravissait"), "rav");});
test("ravissant -> rav", function() {deepEqual( Stem("ravissant"), "rav");});
test("ravissante -> rav", function() {deepEqual( Stem("ravissante"), "rav");});
test("ravissantes -> rav", function() {deepEqual( Stem("ravissantes"), "rav");});
test("ravissants -> rav", function() {deepEqual( Stem("ravissants"), "rav");});
test("ravissement -> rav", function() {deepEqual( Stem("ravissement"), "rav");});
test("ravisseur -> ravisseur", function() {deepEqual( Stem("ravisseur"), "ravisseur");});
test("ravisseurs -> ravisseur", function() {deepEqual( Stem("ravisseurs"), "ravisseur");});
test("ravit -> rav", function() {deepEqual( Stem("ravit"), "rav");});
test("ravoir -> ravoir", function() {deepEqual( Stem("ravoir"), "ravoir");});
test("rayées -> rai", function() {deepEqual( Stem("rayées"), "rai");});
test("raynal -> raynal", function() {deepEqual( Stem("raynal"), "raynal");});
test("rayon -> rayon", function() {deepEqual( Stem("rayon"), "rayon");});
test("rayonna -> rayon", function() {deepEqual( Stem("rayonna"), "rayon");});
test("rayons -> rayon", function() {deepEqual( Stem("rayons"), "rayon");});
test("razori -> razor", function() {deepEqual( Stem("razori"), "razor");});
test("réaction -> réaction", function() {deepEqual( Stem("réaction"), "réaction");});
test("reading -> reading", function() {deepEqual( Stem("reading"), "reading");});
test("réal -> réal", function() {deepEqual( Stem("réal"), "réal");});
test("réalisable -> réalis", function() {deepEqual( Stem("réalisable"), "réalis");});
test("réaliser -> réalis", function() {deepEqual( Stem("réaliser"), "réalis");});
test("réaliste -> réalist", function() {deepEqual( Stem("réaliste"), "réalist");});
test("réalité -> réalit", function() {deepEqual( Stem("réalité"), "réalit");});
test("réapprovisionner -> réapprovision", function() {deepEqual( Stem("réapprovisionner"), "réapprovision");});
test("rébarbatif -> rébarb", function() {deepEqual( Stem("rébarbatif"), "rébarb");});
test("rébarbative -> rébarb", function() {deepEqual( Stem("rébarbative"), "rébarb");});
test("rebâtir -> rebât", function() {deepEqual( Stem("rebâtir"), "rebât");});
test("rebelle -> rebel", function() {deepEqual( Stem("rebelle"), "rebel");});
test("rebelles -> rebel", function() {deepEqual( Stem("rebelles"), "rebel");});
test("rébellion -> rébellion", function() {deepEqual( Stem("rébellion"), "rébellion");});
test("récapitulant -> récapitul", function() {deepEqual( Stem("récapitulant"), "récapitul");});
test("récemment -> récent", function() {deepEqual( Stem("récemment"), "récent");});
test("récente -> récent", function() {deepEqual( Stem("récente"), "récent");});
test("réception -> récept", function() {deepEqual( Stem("réception"), "récept");});
test("réceptions -> récept", function() {deepEqual( Stem("réceptions"), "récept");});
test("recette -> recet", function() {deepEqual( Stem("recette"), "recet");});
test("recettes -> recet", function() {deepEqual( Stem("recettes"), "recet");});
test("recevaient -> recev", function() {deepEqual( Stem("recevaient"), "recev");});
test("recevait -> recev", function() {deepEqual( Stem("recevait"), "recev");});
test("recevant -> recev", function() {deepEqual( Stem("recevant"), "recev");});
test("recevez -> recev", function() {deepEqual( Stem("recevez"), "recev");});
test("receviez -> recev", function() {deepEqual( Stem("receviez"), "recev");});
test("recevoir -> recevoir", function() {deepEqual( Stem("recevoir"), "recevoir");});
test("recevra -> recevr", function() {deepEqual( Stem("recevra"), "recevr");});
test("recevrai -> recevr", function() {deepEqual( Stem("recevrai"), "recevr");});
test("recevrait -> recevr", function() {deepEqual( Stem("recevrait"), "recevr");});
test("recevrez -> recevr", function() {deepEqual( Stem("recevrez"), "recevr");});
test("recharger -> recharg", function() {deepEqual( Stem("recharger"), "recharg");});
test("rechargez -> recharg", function() {deepEqual( Stem("rechargez"), "recharg");});
test("réchauffé -> réchauff", function() {deepEqual( Stem("réchauffé"), "réchauff");});
test("rechercha -> recherch", function() {deepEqual( Stem("rechercha"), "recherch");});
test("recherchait -> recherch", function() {deepEqual( Stem("recherchait"), "recherch");});
test("recherche -> recherch", function() {deepEqual( Stem("recherche"), "recherch");});
test("recherché -> recherch", function() {deepEqual( Stem("recherché"), "recherch");});
test("rechercher -> recherch", function() {deepEqual( Stem("rechercher"), "recherch");});
test("rechercheront -> recherch", function() {deepEqual( Stem("rechercheront"), "recherch");});
test("recherches -> recherch", function() {deepEqual( Stem("recherches"), "recherch");});
test("recherchés -> recherch", function() {deepEqual( Stem("recherchés"), "recherch");});
test("rechignant -> rechign", function() {deepEqual( Stem("rechignant"), "rechign");});
test("rechigné -> rechign", function() {deepEqual( Stem("rechigné"), "rechign");});
test("rechute -> rechut", function() {deepEqual( Stem("rechute"), "rechut");});
test("récidive -> récid", function() {deepEqual( Stem("récidive"), "récid");});
test("reciproquement -> reciproqu", function() {deepEqual( Stem("reciproquement"), "reciproqu");});
test("réciproquement -> réciproqu", function() {deepEqual( Stem("réciproquement"), "réciproqu");});
test("recit -> rec", function() {deepEqual( Stem("recit"), "rec");});
test("récit -> rec", function() {deepEqual( Stem("récit"), "rec");});
test("récita -> récit", function() {deepEqual( Stem("récita"), "récit");});
test("récitaient -> récit", function() {deepEqual( Stem("récitaient"), "récit");});
test("récitait -> récit", function() {deepEqual( Stem("récitait"), "récit");});
test("récitant -> récit", function() {deepEqual( Stem("récitant"), "récit");});
test("récitatif -> récit", function() {deepEqual( Stem("récitatif"), "récit");});
test("récitation -> récit", function() {deepEqual( Stem("récitation"), "récit");});
test("récite -> récit", function() {deepEqual( Stem("récite"), "récit");});
test("récité -> récit", function() {deepEqual( Stem("récité"), "récit");});
test("réciter -> récit", function() {deepEqual( Stem("réciter"), "récit");});
test("réciterai -> récit", function() {deepEqual( Stem("réciterai"), "récit");});
test("réciterez -> récit", function() {deepEqual( Stem("réciterez"), "récit");});
test("récits -> récit", function() {deepEqual( Stem("récits"), "récit");});
test("réclamait -> réclam", function() {deepEqual( Stem("réclamait"), "réclam");});
test("réclame -> réclam", function() {deepEqual( Stem("réclame"), "réclam");});
test("réclamée -> réclam", function() {deepEqual( Stem("réclamée"), "réclam");});
test("réclamer -> réclam", function() {deepEqual( Stem("réclamer"), "réclam");});
test("réclamés -> réclam", function() {deepEqual( Stem("réclamés"), "réclam");});
test("reclus -> reclus", function() {deepEqual( Stem("reclus"), "reclus");});
test("réclusion -> réclus", function() {deepEqual( Stem("réclusion"), "réclus");});
test("reçois -> reçois", function() {deepEqual( Stem("reçois"), "reçois");});
test("reçoit -> reçoit", function() {deepEqual( Stem("reçoit"), "reçoit");});
test("reçoive -> reçoiv", function() {deepEqual( Stem("reçoive"), "reçoiv");});
test("reçoivent -> reçoivent", function() {deepEqual( Stem("reçoivent"), "reçoivent");});
test("récolte -> récolt", function() {deepEqual( Stem("récolte"), "récolt");});
test("recommanda -> recommand", function() {deepEqual( Stem("recommanda"), "recommand");});
test("recommandait -> recommand", function() {deepEqual( Stem("recommandait"), "recommand");});
test("recommandant -> recommand", function() {deepEqual( Stem("recommandant"), "recommand");});
test("recommandation -> recommand", function() {deepEqual( Stem("recommandation"), "recommand");});
test("recommandations -> recommand", function() {deepEqual( Stem("recommandations"), "recommand");});
test("recommande -> recommand", function() {deepEqual( Stem("recommande"), "recommand");});
test("recommandé -> recommand", function() {deepEqual( Stem("recommandé"), "recommand");});
test("recommander -> recommand", function() {deepEqual( Stem("recommander"), "recommand");});
test("recommandés -> recommand", function() {deepEqual( Stem("recommandés"), "recommand");});
test("recommandez -> recommand", function() {deepEqual( Stem("recommandez"), "recommand");});
test("recommença -> recommenc", function() {deepEqual( Stem("recommença"), "recommenc");});
test("recommençaient -> recommenc", function() {deepEqual( Stem("recommençaient"), "recommenc");});
test("recommençait -> recommenc", function() {deepEqual( Stem("recommençait"), "recommenc");});
test("recommençât -> recommenc", function() {deepEqual( Stem("recommençât"), "recommenc");});
test("recommence -> recomment", function() {deepEqual( Stem("recommence"), "recomment");});
test("recommencé -> recommenc", function() {deepEqual( Stem("recommencé"), "recommenc");});
test("recommencer -> recommenc", function() {deepEqual( Stem("recommencer"), "recommenc");});
test("recommencerai -> recommenc", function() {deepEqual( Stem("recommencerai"), "recommenc");});
test("recommenceraient -> recommenc", function() {deepEqual( Stem("recommenceraient"), "recommenc");});
test("recommencerait -> recommenc", function() {deepEqual( Stem("recommencerait"), "recommenc");});
test("recommencèrent -> recommenc", function() {deepEqual( Stem("recommencèrent"), "recommenc");});
test("recommencez -> recommenc", function() {deepEqual( Stem("recommencez"), "recommenc");});
test("récompense -> récompens", function() {deepEqual( Stem("récompense"), "récompens");});
test("récompensé -> récompens", function() {deepEqual( Stem("récompensé"), "récompens");});
test("récompensée -> récompens", function() {deepEqual( Stem("récompensée"), "récompens");});
test("recomptait -> recompt", function() {deepEqual( Stem("recomptait"), "recompt");});
test("réconciliation -> réconcili", function() {deepEqual( Stem("réconciliation"), "réconcili");});
test("réconcilie -> réconcil", function() {deepEqual( Stem("réconcilie"), "réconcil");});
test("reconduire -> reconduir", function() {deepEqual( Stem("reconduire"), "reconduir");});
test("reconduisait -> reconduis", function() {deepEqual( Stem("reconduisait"), "reconduis");});
test("reconduisant -> reconduis", function() {deepEqual( Stem("reconduisant"), "reconduis");});
test("reconduisit -> reconduis", function() {deepEqual( Stem("reconduisit"), "reconduis");});
test("reconduit -> reconduit", function() {deepEqual( Stem("reconduit"), "reconduit");});
test("reconnais -> recon", function() {deepEqual( Stem("reconnais"), "recon");});
test("reconnaissable -> reconnaiss", function() {deepEqual( Stem("reconnaissable"), "reconnaiss");});
test("reconnaissaient -> reconnaiss", function() {deepEqual( Stem("reconnaissaient"), "reconnaiss");});
test("reconnaissait -> reconnaiss", function() {deepEqual( Stem("reconnaissait"), "reconnaiss");});
test("reconnaissance -> reconnaiss", function() {deepEqual( Stem("reconnaissance"), "reconnaiss");});
test("reconnaissant -> reconnaiss", function() {deepEqual( Stem("reconnaissant"), "reconnaiss");});
test("reconnaisse -> reconnaiss", function() {deepEqual( Stem("reconnaisse"), "reconnaiss");});
test("reconnaissent -> reconnaissent", function() {deepEqual( Stem("reconnaissent"), "reconnaissent");});
test("reconnaissez -> reconnaiss", function() {deepEqual( Stem("reconnaissez"), "reconnaiss");});
test("reconnaît -> reconnaît", function() {deepEqual( Stem("reconnaît"), "reconnaît");});
test("reconnaîtra -> reconnaîtr", function() {deepEqual( Stem("reconnaîtra"), "reconnaîtr");});
test("reconnaître -> reconnaîtr", function() {deepEqual( Stem("reconnaître"), "reconnaîtr");});
test("reconnu -> reconnu", function() {deepEqual( Stem("reconnu"), "reconnu");});
test("reconnue -> reconnu", function() {deepEqual( Stem("reconnue"), "reconnu");});
test("reconnurent -> reconnurent", function() {deepEqual( Stem("reconnurent"), "reconnurent");});
test("reconnus -> reconnus", function() {deepEqual( Stem("reconnus"), "reconnus");});
test("reconnut -> reconnut", function() {deepEqual( Stem("reconnut"), "reconnut");});
test("reconquérir -> reconquer", function() {deepEqual( Stem("reconquérir"), "reconquer");});
test("reconquerrait -> reconquerr", function() {deepEqual( Stem("reconquerrait"), "reconquerr");});
test("reconquis -> reconqu", function() {deepEqual( Stem("reconquis"), "reconqu");});
test("recoucher -> recouch", function() {deepEqual( Stem("recoucher"), "recouch");});
test("recoudre -> recoudr", function() {deepEqual( Stem("recoudre"), "recoudr");});
test("recourir -> recour", function() {deepEqual( Stem("recourir"), "recour");});
test("recours -> recour", function() {deepEqual( Stem("recours"), "recour");});
test("recouvert -> recouvert", function() {deepEqual( Stem("recouvert"), "recouvert");});
test("recouverte -> recouvert", function() {deepEqual( Stem("recouverte"), "recouvert");});
test("recouverts -> recouvert", function() {deepEqual( Stem("recouverts"), "recouvert");});
test("recouvra -> recouvr", function() {deepEqual( Stem("recouvra"), "recouvr");});
test("recouvrait -> recouvr", function() {deepEqual( Stem("recouvrait"), "recouvr");});
test("recouvrée -> recouvr", function() {deepEqual( Stem("recouvrée"), "recouvr");});
test("recouvrer -> recouvr", function() {deepEqual( Stem("recouvrer"), "recouvr");});
test("recouvrir -> recouvr", function() {deepEqual( Stem("recouvrir"), "recouvr");});
test("recouvrît -> recouvr", function() {deepEqual( Stem("recouvrît"), "recouvr");});
test("récréation -> récréat", function() {deepEqual( Stem("récréation"), "récréat");});
test("récréations -> récréat", function() {deepEqual( Stem("récréations"), "récréat");});
test("récriait -> récri", function() {deepEqual( Stem("récriait"), "récri");});
test("récrier -> récri", function() {deepEqual( Stem("récrier"), "récri");});
test("récrièrent -> récri", function() {deepEqual( Stem("récrièrent"), "récri");});
test("recrues -> recru", function() {deepEqual( Stem("recrues"), "recru");});
test("recrute -> recrut", function() {deepEqual( Stem("recrute"), "recrut");});
test("recruter -> recrut", function() {deepEqual( Stem("recruter"), "recrut");});
test("rectifia -> rectifi", function() {deepEqual( Stem("rectifia"), "rectifi");});
test("rectifiait -> rectifi", function() {deepEqual( Stem("rectifiait"), "rectifi");});
test("rectifier -> rectifi", function() {deepEqual( Stem("rectifier"), "rectifi");});
test("rectiligne -> rectilign", function() {deepEqual( Stem("rectiligne"), "rectilign");});
test("reçu -> reçu", function() {deepEqual( Stem("reçu"), "reçu");});
test("reçue -> reçu", function() {deepEqual( Stem("reçue"), "reçu");});
test("recueil -> recueil", function() {deepEqual( Stem("recueil"), "recueil");});
test("recueillent -> recueillent", function() {deepEqual( Stem("recueillent"), "recueillent");});
test("recueilli -> recueil", function() {deepEqual( Stem("recueilli"), "recueil");});
test("recueillir -> recueil", function() {deepEqual( Stem("recueillir"), "recueil");});
test("recueillirent -> recueil", function() {deepEqual( Stem("recueillirent"), "recueil");});
test("reçues -> reçu", function() {deepEqual( Stem("reçues"), "reçu");});
test("recula -> recul", function() {deepEqual( Stem("recula"), "recul");});
test("reculant -> recul", function() {deepEqual( Stem("reculant"), "recul");});
test("recule -> recul", function() {deepEqual( Stem("recule"), "recul");});
test("reculé -> recul", function() {deepEqual( Stem("reculé"), "recul");});
test("reculer -> recul", function() {deepEqual( Stem("reculer"), "recul");});
test("reçurent -> reçurent", function() {deepEqual( Stem("reçurent"), "reçurent");});
test("reçus -> reçus", function() {deepEqual( Stem("reçus"), "reçus");});
test("reçut -> reçut", function() {deepEqual( Stem("reçut"), "reçut");});
test("reçût -> reçût", function() {deepEqual( Stem("reçût"), "reçût");});
test("rédacteur -> rédacteur", function() {deepEqual( Stem("rédacteur"), "rédacteur");});
test("rédacteurs -> rédacteur", function() {deepEqual( Stem("rédacteurs"), "rédacteur");});
test("rédaction -> rédact", function() {deepEqual( Stem("rédaction"), "rédact");});
test("redemande -> redemand", function() {deepEqual( Stem("redemande"), "redemand");});
test("redescend -> redescend", function() {deepEqual( Stem("redescend"), "redescend");});
test("redescendant -> redescend", function() {deepEqual( Stem("redescendant"), "redescend");});
test("redescendit -> redescend", function() {deepEqual( Stem("redescendit"), "redescend");});
test("redescendre -> redescendr", function() {deepEqual( Stem("redescendre"), "redescendr");});
test("redescendue -> redescendu", function() {deepEqual( Stem("redescendue"), "redescendu");});
test("redevenaient -> redeven", function() {deepEqual( Stem("redevenaient"), "redeven");});
test("redevenait -> redeven", function() {deepEqual( Stem("redevenait"), "redeven");});
test("redevenant -> redeven", function() {deepEqual( Stem("redevenant"), "redeven");});
test("redevenu -> redevenu", function() {deepEqual( Stem("redevenu"), "redevenu");});
test("redevenue -> redevenu", function() {deepEqual( Stem("redevenue"), "redevenu");});
test("redevint -> redevint", function() {deepEqual( Stem("redevint"), "redevint");});
test("rédigea -> rédig", function() {deepEqual( Stem("rédigea"), "rédig");});
test("rédigée -> rédig", function() {deepEqual( Stem("rédigée"), "rédig");});
test("rédigerait -> rédig", function() {deepEqual( Stem("rédigerait"), "rédig");});
test("redingote -> redingot", function() {deepEqual( Stem("redingote"), "redingot");});
test("redingotes -> redingot", function() {deepEqual( Stem("redingotes"), "redingot");});
test("redira -> red", function() {deepEqual( Stem("redira"), "red");});
test("redits -> redit", function() {deepEqual( Stem("redits"), "redit");});
test("redonner -> redon", function() {deepEqual( Stem("redonner"), "redon");});
test("redoubla -> redoubl", function() {deepEqual( Stem("redoubla"), "redoubl");});
test("redoublaient -> redoubl", function() {deepEqual( Stem("redoublaient"), "redoubl");});
test("redoublait -> redoubl", function() {deepEqual( Stem("redoublait"), "redoubl");});
test("redoublant -> redoubl", function() {deepEqual( Stem("redoublant"), "redoubl");});
test("redouble -> redoubl", function() {deepEqual( Stem("redouble"), "redoubl");});
test("redoublé -> redoubl", function() {deepEqual( Stem("redoublé"), "redoubl");});
test("redoublement -> redoubl", function() {deepEqual( Stem("redoublement"), "redoubl");});
test("redoubler -> redoubl", function() {deepEqual( Stem("redoubler"), "redoubl");});
test("redoublerait -> redoubl", function() {deepEqual( Stem("redoublerait"), "redoubl");});
test("redoublèrent -> redoubl", function() {deepEqual( Stem("redoublèrent"), "redoubl");});
test("redoutables -> redout", function() {deepEqual( Stem("redoutables"), "redout");});
test("redoutaient -> redout", function() {deepEqual( Stem("redoutaient"), "redout");});
test("redoutait -> redout", function() {deepEqual( Stem("redoutait"), "redout");});
test("redoute -> redout", function() {deepEqual( Stem("redoute"), "redout");});
test("redouté -> redout", function() {deepEqual( Stem("redouté"), "redout");});
test("redouter -> redout", function() {deepEqual( Stem("redouter"), "redout");});
test("redoutons -> redouton", function() {deepEqual( Stem("redoutons"), "redouton");});
test("redressait -> redress", function() {deepEqual( Stem("redressait"), "redress");});
test("redresser -> redress", function() {deepEqual( Stem("redresser"), "redress");});
test("réduiras -> réduir", function() {deepEqual( Stem("réduiras"), "réduir");});
test("réduire -> réduir", function() {deepEqual( Stem("réduire"), "réduir");});
test("réduirons -> réduiron", function() {deepEqual( Stem("réduirons"), "réduiron");});
test("réduisait -> réduis", function() {deepEqual( Stem("réduisait"), "réduis");});
test("réduisent -> réduisent", function() {deepEqual( Stem("réduisent"), "réduisent");});
test("réduisit -> réduis", function() {deepEqual( Stem("réduisit"), "réduis");});
test("réduit -> réduit", function() {deepEqual( Stem("réduit"), "réduit");});
test("réduite -> réduit", function() {deepEqual( Stem("réduite"), "réduit");});
test("réduites -> réduit", function() {deepEqual( Stem("réduites"), "réduit");});
test("réduits -> réduit", function() {deepEqual( Stem("réduits"), "réduit");});
test("réel -> réel", function() {deepEqual( Stem("réel"), "réel");});
test("réélection -> réélect", function() {deepEqual( Stem("réélection"), "réélect");});
test("réelle -> réel", function() {deepEqual( Stem("réelle"), "réel");});
test("réellement -> réel", function() {deepEqual( Stem("réellement"), "réel");});
test("réelles -> réel", function() {deepEqual( Stem("réelles"), "réel");});
test("réels -> réel", function() {deepEqual( Stem("réels"), "réel");});
test("réexpédié -> réexpédi", function() {deepEqual( Stem("réexpédié"), "réexpédi");});
test("refaire -> refair", function() {deepEqual( Stem("refaire"), "refair");});
test("refaisait -> refais", function() {deepEqual( Stem("refaisait"), "refais");});
test("refaites -> refait", function() {deepEqual( Stem("refaites"), "refait");});
test("réfectoire -> réfectoir", function() {deepEqual( Stem("réfectoire"), "réfectoir");});
test("références -> référent", function() {deepEqual( Stem("références"), "référent");});
test("referma -> referm", function() {deepEqual( Stem("referma"), "referm");});
test("refermé -> referm", function() {deepEqual( Stem("refermé"), "referm");});
test("refermée -> referm", function() {deepEqual( Stem("refermée"), "referm");});
test("refermer -> referm", function() {deepEqual( Stem("refermer"), "referm");});
test("réfléchi -> réflech", function() {deepEqual( Stem("réfléchi"), "réflech");});
test("réfléchir -> réflech", function() {deepEqual( Stem("réfléchir"), "réflech");});
test("réfléchirez -> réflech", function() {deepEqual( Stem("réfléchirez"), "réflech");});
test("réfléchissait -> réflech", function() {deepEqual( Stem("réfléchissait"), "réflech");});
test("réfléchissant -> réflech", function() {deepEqual( Stem("réfléchissant"), "réflech");});
test("réfléchissez -> réflech", function() {deepEqual( Stem("réfléchissez"), "réflech");});
test("réfléchit -> réflech", function() {deepEqual( Stem("réfléchit"), "réflech");});
test("réfléchît -> réflech", function() {deepEqual( Stem("réfléchît"), "réflech");});
test("reflet -> reflet", function() {deepEqual( Stem("reflet"), "reflet");});
test("reflétait -> reflet", function() {deepEqual( Stem("reflétait"), "reflet");});
test("reflète -> reflet", function() {deepEqual( Stem("reflète"), "reflet");});
test("reflets -> reflet", function() {deepEqual( Stem("reflets"), "reflet");});
test("réflexion -> réflexion", function() {deepEqual( Stem("réflexion"), "réflexion");});
test("réflexions -> réflex", function() {deepEqual( Stem("réflexions"), "réflex");});
test("reflua -> reflu", function() {deepEqual( Stem("reflua"), "reflu");});
test("refluait -> reflu", function() {deepEqual( Stem("refluait"), "reflu");});
test("reform -> reform", function() {deepEqual( Stem("reform"), "reform");});
test("refouler -> refoul", function() {deepEqual( Stem("refouler"), "refoul");});
test("réfractaire -> réfractair", function() {deepEqual( Stem("réfractaire"), "réfractair");});
test("réfractaires -> réfractair", function() {deepEqual( Stem("réfractaires"), "réfractair");});
test("refrain -> refrain", function() {deepEqual( Stem("refrain"), "refrain");});
test("refrains -> refrain", function() {deepEqual( Stem("refrains"), "refrain");});
test("refroidies -> refroid", function() {deepEqual( Stem("refroidies"), "refroid");});
test("refroidir -> refroid", function() {deepEqual( Stem("refroidir"), "refroid");});
test("refuge -> refug", function() {deepEqual( Stem("refuge"), "refug");});
test("réfugia -> réfugi", function() {deepEqual( Stem("réfugia"), "réfugi");});
test("réfugiait -> réfugi", function() {deepEqual( Stem("réfugiait"), "réfugi");});
test("réfugiant -> réfugi", function() {deepEqual( Stem("réfugiant"), "réfugi");});
test("réfugie -> réfug", function() {deepEqual( Stem("réfugie"), "réfug");});
test("réfugié -> réfugi", function() {deepEqual( Stem("réfugié"), "réfugi");});
test("réfugiée -> réfugi", function() {deepEqual( Stem("réfugiée"), "réfugi");});
test("réfugier -> réfugi", function() {deepEqual( Stem("réfugier"), "réfugi");});
test("réfugieront -> réfugi", function() {deepEqual( Stem("réfugieront"), "réfugi");});
test("réfugiés -> réfugi", function() {deepEqual( Stem("réfugiés"), "réfugi");});
test("réfugiez -> réfug", function() {deepEqual( Stem("réfugiez"), "réfug");});
test("refus -> refus", function() {deepEqual( Stem("refus"), "refus");});
test("refusa -> refus", function() {deepEqual( Stem("refusa"), "refus");});
test("refusait -> refus", function() {deepEqual( Stem("refusait"), "refus");});
test("refusant -> refus", function() {deepEqual( Stem("refusant"), "refus");});
test("refuse -> refus", function() {deepEqual( Stem("refuse"), "refus");});
test("refusé -> refus", function() {deepEqual( Stem("refusé"), "refus");});
test("refusée -> refus", function() {deepEqual( Stem("refusée"), "refus");});
test("refusées -> refus", function() {deepEqual( Stem("refusées"), "refus");});
test("refusent -> refusent", function() {deepEqual( Stem("refusent"), "refusent");});
test("refuser -> refus", function() {deepEqual( Stem("refuser"), "refus");});
test("refuserait -> refus", function() {deepEqual( Stem("refuserait"), "refus");});
test("refuseriez -> refus", function() {deepEqual( Stem("refuseriez"), "refus");});
test("refusez -> refus", function() {deepEqual( Stem("refusez"), "refus");});
test("refusiez -> refus", function() {deepEqual( Stem("refusiez"), "refus");});
test("réfutés -> réfut", function() {deepEqual( Stem("réfutés"), "réfut");});
test("regagna -> regagn", function() {deepEqual( Stem("regagna"), "regagn");});
test("regagnaient -> regagn", function() {deepEqual( Stem("regagnaient"), "regagn");});
test("regagnait -> regagn", function() {deepEqual( Stem("regagnait"), "regagn");});
test("regagné -> regagn", function() {deepEqual( Stem("regagné"), "regagn");});
test("regagner -> regagn", function() {deepEqual( Stem("regagner"), "regagn");});
test("régalait -> régal", function() {deepEqual( Stem("régalait"), "régal");});
test("regard -> regard", function() {deepEqual( Stem("regard"), "regard");});
test("regarda -> regard", function() {deepEqual( Stem("regarda"), "regard");});
test("regardaient -> regard", function() {deepEqual( Stem("regardaient"), "regard");});
test("regardais -> regard", function() {deepEqual( Stem("regardais"), "regard");});
test("regardait -> regard", function() {deepEqual( Stem("regardait"), "regard");});
test("regardant -> regard", function() {deepEqual( Stem("regardant"), "regard");});
test("regarde -> regard", function() {deepEqual( Stem("regarde"), "regard");});
test("regardé -> regard", function() {deepEqual( Stem("regardé"), "regard");});
test("regardée -> regard", function() {deepEqual( Stem("regardée"), "regard");});
test("regardent -> regardent", function() {deepEqual( Stem("regardent"), "regardent");});
test("regarder -> regard", function() {deepEqual( Stem("regarder"), "regard");});
test("regardera -> regard", function() {deepEqual( Stem("regardera"), "regard");});
test("regarderai -> regard", function() {deepEqual( Stem("regarderai"), "regard");});
test("regardèrent -> regard", function() {deepEqual( Stem("regardèrent"), "regard");});
test("regarderez -> regard", function() {deepEqual( Stem("regarderez"), "regard");});
test("regarderont -> regard", function() {deepEqual( Stem("regarderont"), "regard");});
test("regardés -> regard", function() {deepEqual( Stem("regardés"), "regard");});
test("regardez -> regard", function() {deepEqual( Stem("regardez"), "regard");});
test("regards -> regard", function() {deepEqual( Stem("regards"), "regard");});
test("régate -> régat", function() {deepEqual( Stem("régate"), "régat");});
test("régénérateur -> régéner", function() {deepEqual( Stem("régénérateur"), "régéner");});
test("régénérer -> régéner", function() {deepEqual( Stem("régénérer"), "régéner");});
test("regent -> regent", function() {deepEqual( Stem("regent"), "regent");});
test("régent -> régent", function() {deepEqual( Stem("régent"), "régent");});
test("regimbait -> regimb", function() {deepEqual( Stem("regimbait"), "regimb");});
test("régime -> régim", function() {deepEqual( Stem("régime"), "régim");});
test("régiment -> reg", function() {deepEqual( Stem("régiment"), "reg");});
test("régiments -> reg", function() {deepEqual( Stem("régiments"), "reg");});
test("régimes -> régim", function() {deepEqual( Stem("régimes"), "régim");});
test("région -> région", function() {deepEqual( Stem("région"), "région");});
test("régions -> région", function() {deepEqual( Stem("régions"), "région");});
test("registre -> registr", function() {deepEqual( Stem("registre"), "registr");});
test("registres -> registr", function() {deepEqual( Stem("registres"), "registr");});
test("régla -> regl", function() {deepEqual( Stem("régla"), "regl");});
test("réglant -> regl", function() {deepEqual( Stem("réglant"), "regl");});
test("règle -> regl", function() {deepEqual( Stem("règle"), "regl");});
test("réglé -> regl", function() {deepEqual( Stem("réglé"), "regl");});
test("réglée -> regl", function() {deepEqual( Stem("réglée"), "regl");});
test("règlement -> regl", function() {deepEqual( Stem("règlement"), "regl");});
test("réglementaire -> réglementair", function() {deepEqual( Stem("réglementaire"), "réglementair");});
test("réglementaires -> réglementair", function() {deepEqual( Stem("réglementaires"), "réglementair");});
test("réglementation -> réglement", function() {deepEqual( Stem("réglementation"), "réglement");});
test("réglementée -> réglement", function() {deepEqual( Stem("réglementée"), "réglement");});
test("règlements -> regl", function() {deepEqual( Stem("règlements"), "regl");});
test("régler -> regl", function() {deepEqual( Stem("régler"), "regl");});
test("réglera -> regl", function() {deepEqual( Stem("réglera"), "regl");});
test("règles -> regl", function() {deepEqual( Stem("règles"), "regl");});
test("réglés -> regl", function() {deepEqual( Stem("réglés"), "regl");});
test("régna -> regn", function() {deepEqual( Stem("régna"), "regn");});
test("régnaient -> regn", function() {deepEqual( Stem("régnaient"), "regn");});
test("régnait -> regn", function() {deepEqual( Stem("régnait"), "regn");});
test("régnant -> regn", function() {deepEqual( Stem("régnant"), "regn");});
test("régnante -> regn", function() {deepEqual( Stem("régnante"), "regn");});
test("règne -> regn", function() {deepEqual( Stem("règne"), "regn");});
test("régné -> regn", function() {deepEqual( Stem("régné"), "regn");});
test("règnent -> règnent", function() {deepEqual( Stem("règnent"), "règnent");});
test("régner -> regn", function() {deepEqual( Stem("régner"), "regn");});
test("régnera -> regn", function() {deepEqual( Stem("régnera"), "regn");});
test("régnez -> regn", function() {deepEqual( Stem("régnez"), "regn");});
test("régnons -> régnon", function() {deepEqual( Stem("régnons"), "régnon");});
test("regorgeant -> regorg", function() {deepEqual( Stem("regorgeant"), "regorg");});
test("regorgent -> regorgent", function() {deepEqual( Stem("regorgent"), "regorgent");});
test("regret -> regret", function() {deepEqual( Stem("regret"), "regret");});
test("regrets -> regret", function() {deepEqual( Stem("regrets"), "regret");});
test("regrettaient -> regret", function() {deepEqual( Stem("regrettaient"), "regret");});
test("regrettait -> regret", function() {deepEqual( Stem("regrettait"), "regret");});
test("regrette -> regret", function() {deepEqual( Stem("regrette"), "regret");});
test("regrettée -> regret", function() {deepEqual( Stem("regrettée"), "regret");});
test("regrettées -> regret", function() {deepEqual( Stem("regrettées"), "regret");});
test("regretter -> regret", function() {deepEqual( Stem("regretter"), "regret");});
test("regretterais -> regret", function() {deepEqual( Stem("regretterais"), "regret");});
test("regretteriez -> regret", function() {deepEqual( Stem("regretteriez"), "regret");});
test("regrettez -> regret", function() {deepEqual( Stem("regrettez"), "regret");});
test("régularisé -> régularis", function() {deepEqual( Stem("régularisé"), "régularis");});
test("régularité -> régular", function() {deepEqual( Stem("régularité"), "régular");});
test("régulateur -> régul", function() {deepEqual( Stem("régulateur"), "régul");});
test("régulier -> réguli", function() {deepEqual( Stem("régulier"), "réguli");});
test("régulière -> réguli", function() {deepEqual( Stem("régulière"), "réguli");});
test("régulièrement -> réguli", function() {deepEqual( Stem("régulièrement"), "réguli");});
test("rehausse -> rehauss", function() {deepEqual( Stem("rehausse"), "rehauss");});
test("rein -> rein", function() {deepEqual( Stem("rein"), "rein");});
test("reina -> rein", function() {deepEqual( Stem("reina"), "rein");});
test("reine -> rein", function() {deepEqual( Stem("reine"), "rein");});
test("reins -> rein", function() {deepEqual( Stem("reins"), "rein");});
test("réintégré -> réintegr", function() {deepEqual( Stem("réintégré"), "réintegr");});
test("réintégrés -> réintegr", function() {deepEqual( Stem("réintégrés"), "réintegr");});
test("réitérée -> réiter", function() {deepEqual( Stem("réitérée"), "réiter");});
test("rejaillir -> rejaill", function() {deepEqual( Stem("rejaillir"), "rejaill");});
test("rejeta -> rejet", function() {deepEqual( Stem("rejeta"), "rejet");});
test("rejeté -> rejet", function() {deepEqual( Stem("rejeté"), "rejet");});
test("rejettera -> rejet", function() {deepEqual( Stem("rejettera"), "rejet");});
test("rejoignait -> rejoign", function() {deepEqual( Stem("rejoignait"), "rejoign");});
test("rejoignant -> rejoign", function() {deepEqual( Stem("rejoignant"), "rejoign");});
test("rejoignent -> rejoignent", function() {deepEqual( Stem("rejoignent"), "rejoignent");});
test("rejoignirent -> rejoign", function() {deepEqual( Stem("rejoignirent"), "rejoign");});
test("rejoignit -> rejoign", function() {deepEqual( Stem("rejoignit"), "rejoign");});
test("rejoindra -> rejoindr", function() {deepEqual( Stem("rejoindra"), "rejoindr");});
test("rejoindre -> rejoindr", function() {deepEqual( Stem("rejoindre"), "rejoindr");});
test("rejoint -> rejoint", function() {deepEqual( Stem("rejoint"), "rejoint");});
test("réjouie -> réjou", function() {deepEqual( Stem("réjouie"), "réjou");});
test("réjouir -> réjou", function() {deepEqual( Stem("réjouir"), "réjou");});
test("réjouirez -> réjou", function() {deepEqual( Stem("réjouirez"), "réjou");});
test("réjouissait -> réjou", function() {deepEqual( Stem("réjouissait"), "réjou");});
test("réjouissances -> réjouiss", function() {deepEqual( Stem("réjouissances"), "réjouiss");});
test("réjouit -> réjou", function() {deepEqual( Stem("réjouit"), "réjou");});
test("relâchait -> relâch", function() {deepEqual( Stem("relâchait"), "relâch");});
test("relâche -> relâch", function() {deepEqual( Stem("relâche"), "relâch");});
test("relâché -> relâch", function() {deepEqual( Stem("relâché"), "relâch");});
test("relâchées -> relâch", function() {deepEqual( Stem("relâchées"), "relâch");});
test("relâcher -> relâch", function() {deepEqual( Stem("relâcher"), "relâch");});
test("relais -> rel", function() {deepEqual( Stem("relais"), "rel");});
test("relancer -> relanc", function() {deepEqual( Stem("relancer"), "relanc");});
test("relatif -> relat", function() {deepEqual( Stem("relatif"), "relat");});
test("relatifs -> relat", function() {deepEqual( Stem("relatifs"), "relat");});
test("relation -> relat", function() {deepEqual( Stem("relation"), "relat");});
test("relations -> relat", function() {deepEqual( Stem("relations"), "relat");});
test("relative -> relat", function() {deepEqual( Stem("relative"), "relat");});
test("relativement -> relat", function() {deepEqual( Stem("relativement"), "relat");});
test("relatives -> relat", function() {deepEqual( Stem("relatives"), "relat");});
test("relégué -> relégu", function() {deepEqual( Stem("relégué"), "relégu");});
test("reléguée -> relégu", function() {deepEqual( Stem("reléguée"), "relégu");});
test("reléguer -> relégu", function() {deepEqual( Stem("reléguer"), "relégu");});
test("releva -> relev", function() {deepEqual( Stem("releva"), "relev");});
test("relevaient -> relev", function() {deepEqual( Stem("relevaient"), "relev");});
test("relevait -> relev", function() {deepEqual( Stem("relevait"), "relev");});
test("relevant -> relev", function() {deepEqual( Stem("relevant"), "relev");});
test("relevé -> relev", function() {deepEqual( Stem("relevé"), "relev");});
test("relevée -> relev", function() {deepEqual( Stem("relevée"), "relev");});
test("relevées -> relev", function() {deepEqual( Stem("relevées"), "relev");});
test("relèvent -> relèvent", function() {deepEqual( Stem("relèvent"), "relèvent");});
test("relever -> relev", function() {deepEqual( Stem("relever"), "relev");});
test("relèveras -> relev", function() {deepEqual( Stem("relèveras"), "relev");});
test("relié -> reli", function() {deepEqual( Stem("relié"), "reli");});
test("reliée -> reli", function() {deepEqual( Stem("reliée"), "reli");});
test("reliées -> reli", function() {deepEqual( Stem("reliées"), "reli");});
test("relief -> relief", function() {deepEqual( Stem("relief"), "relief");});
test("reliefs -> relief", function() {deepEqual( Stem("reliefs"), "relief");});
test("relier -> reli", function() {deepEqual( Stem("relier"), "reli");});
test("reliés -> reli", function() {deepEqual( Stem("reliés"), "reli");});
test("religieuse -> religi", function() {deepEqual( Stem("religieuse"), "religi");});
test("religieusement -> religi", function() {deepEqual( Stem("religieusement"), "religi");});
test("religieuses -> religi", function() {deepEqual( Stem("religieuses"), "religi");});
test("religieux -> religi", function() {deepEqual( Stem("religieux"), "religi");});
test("religion -> religion", function() {deepEqual( Stem("religion"), "religion");});
test("religions -> relig", function() {deepEqual( Stem("religions"), "relig");});
test("religiosité -> religios", function() {deepEqual( Stem("religiosité"), "religios");});
test("reliquat -> reliquat", function() {deepEqual( Stem("reliquat"), "reliquat");});
test("relique -> reliqu", function() {deepEqual( Stem("relique"), "reliqu");});
test("relire -> relir", function() {deepEqual( Stem("relire"), "relir");});
test("relis -> rel", function() {deepEqual( Stem("relis"), "rel");});
test("relisais -> relis", function() {deepEqual( Stem("relisais"), "relis");});
test("relisait -> relis", function() {deepEqual( Stem("relisait"), "relis");});
test("relise -> relis", function() {deepEqual( Stem("relise"), "relis");});
test("relu -> relu", function() {deepEqual( Stem("relu"), "relu");});
test("relut -> relut", function() {deepEqual( Stem("relut"), "relut");});
test("rem -> rem", function() {deepEqual( Stem("rem"), "rem");});
test("remariais -> remari", function() {deepEqual( Stem("remariais"), "remari");});
test("remarqua -> remarqu", function() {deepEqual( Stem("remarqua"), "remarqu");});
test("remarquable -> remarqu", function() {deepEqual( Stem("remarquable"), "remarqu");});
test("remarquablement -> remarqu", function() {deepEqual( Stem("remarquablement"), "remarqu");});
test("remarquables -> remarqu", function() {deepEqual( Stem("remarquables"), "remarqu");});
test("remarquaient -> remarqu", function() {deepEqual( Stem("remarquaient"), "remarqu");});
test("remarquait -> remarqu", function() {deepEqual( Stem("remarquait"), "remarqu");});
test("remarquant -> remarqu", function() {deepEqual( Stem("remarquant"), "remarqu");});
test("remarquâtes -> remarqu", function() {deepEqual( Stem("remarquâtes"), "remarqu");});
test("remarque -> remarqu", function() {deepEqual( Stem("remarque"), "remarqu");});
test("remarqué -> remarqu", function() {deepEqual( Stem("remarqué"), "remarqu");});
test("remarquée -> remarqu", function() {deepEqual( Stem("remarquée"), "remarqu");});
test("remarquer -> remarqu", function() {deepEqual( Stem("remarquer"), "remarqu");});
test("remarquera -> remarqu", function() {deepEqual( Stem("remarquera"), "remarqu");});
test("remarquèrent -> remarqu", function() {deepEqual( Stem("remarquèrent"), "remarqu");});
test("remarquerez -> remarqu", function() {deepEqual( Stem("remarquerez"), "remarqu");});
test("remarques -> remarqu", function() {deepEqual( Stem("remarques"), "remarqu");});
test("remarqués -> remarqu", function() {deepEqual( Stem("remarqués"), "remarqu");});
test("remarquez -> remarqu", function() {deepEqual( Stem("remarquez"), "remarqu");});
test("rembourse -> rembours", function() {deepEqual( Stem("rembourse"), "rembours");});
test("remboursement -> rembours", function() {deepEqual( Stem("remboursement"), "rembours");});
test("rembourser -> rembours", function() {deepEqual( Stem("rembourser"), "rembours");});
test("rembrunit -> rembrun", function() {deepEqual( Stem("rembrunit"), "rembrun");});
test("remède -> remed", function() {deepEqual( Stem("remède"), "remed");});
test("remèdes -> remed", function() {deepEqual( Stem("remèdes"), "remed");});
test("remédier -> remédi", function() {deepEqual( Stem("remédier"), "remédi");});
test("remercia -> remerci", function() {deepEqual( Stem("remercia"), "remerci");});
test("remerciait -> remerci", function() {deepEqual( Stem("remerciait"), "remerci");});
test("remerciant -> remerci", function() {deepEqual( Stem("remerciant"), "remerci");});
test("remercie -> remerc", function() {deepEqual( Stem("remercie"), "remerc");});
test("remercié -> remerci", function() {deepEqual( Stem("remercié"), "remerci");});
test("remerciée -> remerci", function() {deepEqual( Stem("remerciée"), "remerci");});
test("remerciements -> remerci", function() {deepEqual( Stem("remerciements"), "remerci");});
test("remercier -> remerci", function() {deepEqual( Stem("remercier"), "remerci");});
test("remercierais -> remerci", function() {deepEqual( Stem("remercierais"), "remerci");});
test("remercierait -> remerci", function() {deepEqual( Stem("remercierait"), "remerci");});
test("remercîment -> remercî", function() {deepEqual( Stem("remercîment"), "remercî");});
test("remercîments -> remercî", function() {deepEqual( Stem("remercîments"), "remercî");});
test("remet -> remet", function() {deepEqual( Stem("remet"), "remet");});
test("remets -> remet", function() {deepEqual( Stem("remets"), "remet");});
test("remettait -> remet", function() {deepEqual( Stem("remettait"), "remet");});
test("remettant -> remet", function() {deepEqual( Stem("remettant"), "remet");});
test("remette -> remet", function() {deepEqual( Stem("remette"), "remet");});
test("remettent -> remettent", function() {deepEqual( Stem("remettent"), "remettent");});
test("remettra -> remettr", function() {deepEqual( Stem("remettra"), "remettr");});
test("remettrai -> remettr", function() {deepEqual( Stem("remettrai"), "remettr");});
test("remettrais -> remettr", function() {deepEqual( Stem("remettrais"), "remettr");});
test("remettrait -> remettr", function() {deepEqual( Stem("remettrait"), "remettr");});
test("remettras -> remettr", function() {deepEqual( Stem("remettras"), "remettr");});
test("remettre -> remettr", function() {deepEqual( Stem("remettre"), "remettr");});
test("remettrez -> remettr", function() {deepEqual( Stem("remettrez"), "remettr");});
test("remiers -> remi", function() {deepEqual( Stem("remiers"), "remi");});
test("remirent -> rem", function() {deepEqual( Stem("remirent"), "rem");});
test("remis -> rem", function() {deepEqual( Stem("remis"), "rem");});
test("remise -> remis", function() {deepEqual( Stem("remise"), "remis");});
test("remises -> remis", function() {deepEqual( Stem("remises"), "remis");});
test("rémission -> rémiss", function() {deepEqual( Stem("rémission"), "rémiss");});
test("remit -> rem", function() {deepEqual( Stem("remit"), "rem");});
test("remonta -> remont", function() {deepEqual( Stem("remonta"), "remont");});
test("remontait -> remont", function() {deepEqual( Stem("remontait"), "remont");});
test("remontant -> remont", function() {deepEqual( Stem("remontant"), "remont");});
test("remonte -> remont", function() {deepEqual( Stem("remonte"), "remont");});
test("remonté -> remont", function() {deepEqual( Stem("remonté"), "remont");});
test("remontent -> remontent", function() {deepEqual( Stem("remontent"), "remontent");});
test("remonter -> remont", function() {deepEqual( Stem("remonter"), "remont");});
test("remonterait -> remont", function() {deepEqual( Stem("remonterait"), "remont");});
test("remontez -> remont", function() {deepEqual( Stem("remontez"), "remont");});
test("remontrance -> remontr", function() {deepEqual( Stem("remontrance"), "remontr");});
test("remontrances -> remontr", function() {deepEqual( Stem("remontrances"), "remontr");});
test("remontrer -> remontr", function() {deepEqual( Stem("remontrer"), "remontr");});
test("remords -> remord", function() {deepEqual( Stem("remords"), "remord");});
test("remorquant -> remorqu", function() {deepEqual( Stem("remorquant"), "remorqu");});
test("remous -> remous", function() {deepEqual( Stem("remous"), "remous");});
test("rempart -> rempart", function() {deepEqual( Stem("rempart"), "rempart");});
test("remparts -> rempart", function() {deepEqual( Stem("remparts"), "rempart");});
test("remplaça -> remplac", function() {deepEqual( Stem("remplaça"), "remplac");});
test("remplaçaient -> remplac", function() {deepEqual( Stem("remplaçaient"), "remplac");});
test("remplaçait -> remplac", function() {deepEqual( Stem("remplaçait"), "remplac");});
test("remplace -> remplac", function() {deepEqual( Stem("remplace"), "remplac");});
test("remplacé -> remplac", function() {deepEqual( Stem("remplacé"), "remplac");});
test("remplacée -> remplac", function() {deepEqual( Stem("remplacée"), "remplac");});
test("remplacement -> remplac", function() {deepEqual( Stem("remplacement"), "remplac");});
test("remplacer -> remplac", function() {deepEqual( Stem("remplacer"), "remplac");});
test("remplacera -> remplac", function() {deepEqual( Stem("remplacera"), "remplac");});
test("remplacés -> remplac", function() {deepEqual( Stem("remplacés"), "remplac");});
test("rempli -> rempl", function() {deepEqual( Stem("rempli"), "rempl");});
test("remplie -> rempl", function() {deepEqual( Stem("remplie"), "rempl");});
test("remplies -> rempl", function() {deepEqual( Stem("remplies"), "rempl");});
test("remplir -> rempl", function() {deepEqual( Stem("remplir"), "rempl");});
test("remplirent -> rempl", function() {deepEqual( Stem("remplirent"), "rempl");});
test("remplis -> rempl", function() {deepEqual( Stem("remplis"), "rempl");});
test("remplissaient -> rempl", function() {deepEqual( Stem("remplissaient"), "rempl");});
test("remplissait -> rempl", function() {deepEqual( Stem("remplissait"), "rempl");});
test("remplissant -> rempl", function() {deepEqual( Stem("remplissant"), "rempl");});
test("remplissent -> rempl", function() {deepEqual( Stem("remplissent"), "rempl");});
test("remplit -> rempl", function() {deepEqual( Stem("remplit"), "rempl");});
test("remplumai -> remplum", function() {deepEqual( Stem("remplumai"), "remplum");});
test("remportant -> remport", function() {deepEqual( Stem("remportant"), "remport");});
test("remporter -> remport", function() {deepEqual( Stem("remporter"), "remport");});
test("remua -> remu", function() {deepEqual( Stem("remua"), "remu");});
test("remuant -> remu", function() {deepEqual( Stem("remuant"), "remu");});
test("remue -> remu", function() {deepEqual( Stem("remue"), "remu");});
test("remuée -> remu", function() {deepEqual( Stem("remuée"), "remu");});
test("remuer -> remu", function() {deepEqual( Stem("remuer"), "remu");});
test("remues -> remu", function() {deepEqual( Stem("remues"), "remu");});
test("rémunération -> rémuner", function() {deepEqual( Stem("rémunération"), "rémuner");});
test("renaissant -> renaiss", function() {deepEqual( Stem("renaissant"), "renaiss");});
test("renaissantes -> renaiss", function() {deepEqual( Stem("renaissantes"), "renaiss");});
test("renaître -> renaîtr", function() {deepEqual( Stem("renaître"), "renaîtr");});
test("rênal -> rênal", function() {deepEqual( Stem("rênal"), "rênal");});
test("renard -> renard", function() {deepEqual( Stem("renard"), "renard");});
test("rencontra -> rencontr", function() {deepEqual( Stem("rencontra"), "rencontr");});
test("rencontrai -> rencontr", function() {deepEqual( Stem("rencontrai"), "rencontr");});
test("rencontrait -> rencontr", function() {deepEqual( Stem("rencontrait"), "rencontr");});
test("rencontrâmes -> rencontr", function() {deepEqual( Stem("rencontrâmes"), "rencontr");});
test("rencontrant -> rencontr", function() {deepEqual( Stem("rencontrant"), "rencontr");});
test("rencontrassent -> rencontr", function() {deepEqual( Stem("rencontrassent"), "rencontr");});
test("rencontrât -> rencontr", function() {deepEqual( Stem("rencontrât"), "rencontr");});
test("rencontre -> rencontr", function() {deepEqual( Stem("rencontre"), "rencontr");});
test("rencontré -> rencontr", function() {deepEqual( Stem("rencontré"), "rencontr");});
test("rencontrée -> rencontr", function() {deepEqual( Stem("rencontrée"), "rencontr");});
test("rencontrées -> rencontr", function() {deepEqual( Stem("rencontrées"), "rencontr");});
test("rencontrent -> rencontrent", function() {deepEqual( Stem("rencontrent"), "rencontrent");});
test("rencontrer -> rencontr", function() {deepEqual( Stem("rencontrer"), "rencontr");});
test("rencontrerai -> rencontr", function() {deepEqual( Stem("rencontrerai"), "rencontr");});
test("rencontreraient -> rencontr", function() {deepEqual( Stem("rencontreraient"), "rencontr");});
test("rencontrèrent -> rencontr", function() {deepEqual( Stem("rencontrèrent"), "rencontr");});
test("rencontres -> rencontr", function() {deepEqual( Stem("rencontres"), "rencontr");});
test("rencontrés -> rencontr", function() {deepEqual( Stem("rencontrés"), "rencontr");});
test("rend -> rend", function() {deepEqual( Stem("rend"), "rend");});
test("rendaient -> rend", function() {deepEqual( Stem("rendaient"), "rend");});
test("rendait -> rend", function() {deepEqual( Stem("rendait"), "rend");});
test("rendant -> rend", function() {deepEqual( Stem("rendant"), "rend");});
test("rende -> rend", function() {deepEqual( Stem("rende"), "rend");});
test("rendent -> rendent", function() {deepEqual( Stem("rendent"), "rendent");});
test("rendez -> rend", function() {deepEqual( Stem("rendez"), "rend");});
test("rendirent -> rend", function() {deepEqual( Stem("rendirent"), "rend");});
test("rendit -> rend", function() {deepEqual( Stem("rendit"), "rend");});
test("rendît -> rend", function() {deepEqual( Stem("rendît"), "rend");});
test("rendra -> rendr", function() {deepEqual( Stem("rendra"), "rendr");});
test("rendrai -> rendr", function() {deepEqual( Stem("rendrai"), "rendr");});
test("rendrait -> rendr", function() {deepEqual( Stem("rendrait"), "rendr");});
test("rendre -> rendr", function() {deepEqual( Stem("rendre"), "rendr");});
test("rendrez -> rendr", function() {deepEqual( Stem("rendrez"), "rendr");});
test("rendriez -> rendr", function() {deepEqual( Stem("rendriez"), "rendr");});
test("rendrons -> rendron", function() {deepEqual( Stem("rendrons"), "rendron");});
test("rendront -> rendront", function() {deepEqual( Stem("rendront"), "rendront");});
test("rends -> rend", function() {deepEqual( Stem("rends"), "rend");});
test("rendu -> rendu", function() {deepEqual( Stem("rendu"), "rendu");});
test("rendue -> rendu", function() {deepEqual( Stem("rendue"), "rendu");});
test("rendus -> rendus", function() {deepEqual( Stem("rendus"), "rendus");});
test("rêne -> rên", function() {deepEqual( Stem("rêne"), "rên");});
test("rené -> ren", function() {deepEqual( Stem("rené"), "ren");});
test("renfermait -> renferm", function() {deepEqual( Stem("renfermait"), "renferm");});
test("renfermant -> renferm", function() {deepEqual( Stem("renfermant"), "renferm");});
test("renferme -> renferm", function() {deepEqual( Stem("renferme"), "renferm");});
test("renfermé -> renferm", function() {deepEqual( Stem("renfermé"), "renferm");});
test("renfermée -> renferm", function() {deepEqual( Stem("renfermée"), "renferm");});
test("renfermer -> renferm", function() {deepEqual( Stem("renfermer"), "renferm");});
test("renforcé -> renforc", function() {deepEqual( Stem("renforcé"), "renforc");});
test("renfort -> renfort", function() {deepEqual( Stem("renfort"), "renfort");});
test("renfrogné -> renfrogn", function() {deepEqual( Stem("renfrogné"), "renfrogn");});
test("reniera -> reni", function() {deepEqual( Stem("reniera"), "reni");});
test("reno -> reno", function() {deepEqual( Stem("reno"), "reno");});
test("renom -> renom", function() {deepEqual( Stem("renom"), "renom");});
test("renommé -> renomm", function() {deepEqual( Stem("renommé"), "renomm");});
test("renommée -> renomm", function() {deepEqual( Stem("renommée"), "renomm");});
test("renonça -> renonc", function() {deepEqual( Stem("renonça"), "renonc");});
test("renonçait -> renonc", function() {deepEqual( Stem("renonçait"), "renonc");});
test("renonce -> renonc", function() {deepEqual( Stem("renonce"), "renonc");});
test("renoncé -> renonc", function() {deepEqual( Stem("renoncé"), "renonc");});
test("renoncer -> renonc", function() {deepEqual( Stem("renoncer"), "renonc");});
test("renoncera -> renonc", function() {deepEqual( Stem("renoncera"), "renonc");});
test("renoncerais -> renonc", function() {deepEqual( Stem("renoncerais"), "renonc");});
test("renoncez -> renonc", function() {deepEqual( Stem("renoncez"), "renonc");});
test("renoué -> renou", function() {deepEqual( Stem("renoué"), "renou");});
test("renouer -> renou", function() {deepEqual( Stem("renouer"), "renou");});
test("renouvela -> renouvel", function() {deepEqual( Stem("renouvela"), "renouvel");});
test("renouvelait -> renouvel", function() {deepEqual( Stem("renouvelait"), "renouvel");});
test("renouvelant -> renouvel", function() {deepEqual( Stem("renouvelant"), "renouvel");});
test("renouvelé -> renouvel", function() {deepEqual( Stem("renouvelé"), "renouvel");});
test("renouvelées -> renouvel", function() {deepEqual( Stem("renouvelées"), "renouvel");});
test("renouveler -> renouvel", function() {deepEqual( Stem("renouveler"), "renouvel");});
test("renouvelèrent -> renouvel", function() {deepEqual( Stem("renouvelèrent"), "renouvel");});
test("renouvellement -> renouvel", function() {deepEqual( Stem("renouvellement"), "renouvel");});
test("renouvellent -> renouvellent", function() {deepEqual( Stem("renouvellent"), "renouvellent");});
test("renseignement -> renseign", function() {deepEqual( Stem("renseignement"), "renseign");});
test("renseignements -> renseign", function() {deepEqual( Stem("renseignements"), "renseign");});
test("rente -> rent", function() {deepEqual( Stem("rente"), "rent");});
test("rentes -> rent", function() {deepEqual( Stem("rentes"), "rent");});
test("rentra -> rentr", function() {deepEqual( Stem("rentra"), "rentr");});
test("rentrait -> rentr", function() {deepEqual( Stem("rentrait"), "rentr");});
test("rentrant -> rentr", function() {deepEqual( Stem("rentrant"), "rentr");});
test("rentrât -> rentr", function() {deepEqual( Stem("rentrât"), "rentr");});
test("rentre -> rentr", function() {deepEqual( Stem("rentre"), "rentr");});
test("rentré -> rentr", function() {deepEqual( Stem("rentré"), "rentr");});
test("rentrée -> rentr", function() {deepEqual( Stem("rentrée"), "rentr");});
test("rentrent -> rentrent", function() {deepEqual( Stem("rentrent"), "rentrent");});
test("rentrer -> rentr", function() {deepEqual( Stem("rentrer"), "rentr");});
test("rentrera -> rentr", function() {deepEqual( Stem("rentrera"), "rentr");});
test("rentrerai -> rentr", function() {deepEqual( Stem("rentrerai"), "rentr");});
test("rentrèrent -> rentr", function() {deepEqual( Stem("rentrèrent"), "rentr");});
test("rentrerez -> rentr", function() {deepEqual( Stem("rentrerez"), "rentr");});
test("rentrés -> rentr", function() {deepEqual( Stem("rentrés"), "rentr");});
test("rentrons -> rentron", function() {deepEqual( Stem("rentrons"), "rentron");});
test("renverra -> renverr", function() {deepEqual( Stem("renverra"), "renverr");});
test("renverraient -> renverr", function() {deepEqual( Stem("renverraient"), "renverr");});
test("renverrez -> renverr", function() {deepEqual( Stem("renverrez"), "renverr");});
test("renverrons -> renverron", function() {deepEqual( Stem("renverrons"), "renverron");});
test("renversa -> renvers", function() {deepEqual( Stem("renversa"), "renvers");});
test("renversant -> renvers", function() {deepEqual( Stem("renversant"), "renvers");});
test("renverse -> renvers", function() {deepEqual( Stem("renverse"), "renvers");});
test("renversé -> renvers", function() {deepEqual( Stem("renversé"), "renvers");});
test("renversée -> renvers", function() {deepEqual( Stem("renversée"), "renvers");});
test("renversement -> renvers", function() {deepEqual( Stem("renversement"), "renvers");});
test("renverser -> renvers", function() {deepEqual( Stem("renverser"), "renvers");});
test("renverseront -> renvers", function() {deepEqual( Stem("renverseront"), "renvers");});
test("renvoie -> renvoi", function() {deepEqual( Stem("renvoie"), "renvoi");});
test("renvoya -> renvoi", function() {deepEqual( Stem("renvoya"), "renvoi");});
test("renvoyait -> renvoi", function() {deepEqual( Stem("renvoyait"), "renvoi");});
test("renvoyant -> renvoi", function() {deepEqual( Stem("renvoyant"), "renvoi");});
test("renvoyé -> renvoi", function() {deepEqual( Stem("renvoyé"), "renvoi");});
test("renvoyée -> renvoi", function() {deepEqual( Stem("renvoyée"), "renvoi");});
test("renvoyer -> renvoi", function() {deepEqual( Stem("renvoyer"), "renvoi");});
test("renvoyèrent -> renvoi", function() {deepEqual( Stem("renvoyèrent"), "renvoi");});
test("renvoyez -> renvoi", function() {deepEqual( Stem("renvoyez"), "renvoi");});
test("renvoyiez -> renvoi", function() {deepEqual( Stem("renvoyiez"), "renvoi");});
test("renvoyons -> renvoyon", function() {deepEqual( Stem("renvoyons"), "renvoyon");});
test("renza -> renz", function() {deepEqual( Stem("renza"), "renz");});
test("repaire -> repair", function() {deepEqual( Stem("repaire"), "repair");});
test("répandaient -> répand", function() {deepEqual( Stem("répandaient"), "répand");});
test("répandait -> répand", function() {deepEqual( Stem("répandait"), "répand");});
test("répandant -> répand", function() {deepEqual( Stem("répandant"), "répand");});
test("répandent -> répandent", function() {deepEqual( Stem("répandent"), "répandent");});
test("répandit -> répand", function() {deepEqual( Stem("répandit"), "répand");});
test("répandît -> répand", function() {deepEqual( Stem("répandît"), "répand");});
test("répandrait -> répandr", function() {deepEqual( Stem("répandrait"), "répandr");});
test("répandre -> répandr", function() {deepEqual( Stem("répandre"), "répandr");});
test("répandu -> répandu", function() {deepEqual( Stem("répandu"), "répandu");});
test("répandue -> répandu", function() {deepEqual( Stem("répandue"), "répandu");});
test("répandues -> répandu", function() {deepEqual( Stem("répandues"), "répandu");});
test("reparaissaient -> reparaiss", function() {deepEqual( Stem("reparaissaient"), "reparaiss");});
test("reparaissait -> reparaiss", function() {deepEqual( Stem("reparaissait"), "reparaiss");});
test("reparaîtra -> reparaîtr", function() {deepEqual( Stem("reparaîtra"), "reparaîtr");});
test("reparaîtrai -> reparaîtr", function() {deepEqual( Stem("reparaîtrai"), "reparaîtr");});
test("reparaîtrait -> reparaîtr", function() {deepEqual( Stem("reparaîtrait"), "reparaîtr");});
test("reparaître -> reparaîtr", function() {deepEqual( Stem("reparaître"), "reparaîtr");});
test("reparaîtrons -> reparaîtron", function() {deepEqual( Stem("reparaîtrons"), "reparaîtron");});
test("réparation -> répar", function() {deepEqual( Stem("réparation"), "répar");});
test("réparations -> répar", function() {deepEqual( Stem("réparations"), "répar");});
test("réparée -> répar", function() {deepEqual( Stem("réparée"), "répar");});
test("réparent -> réparent", function() {deepEqual( Stem("réparent"), "réparent");});
test("réparer -> répar", function() {deepEqual( Stem("réparer"), "répar");});
test("répareraient -> répar", function() {deepEqual( Stem("répareraient"), "répar");});
test("réparerait -> répar", function() {deepEqual( Stem("réparerait"), "répar");});
test("répareras -> répar", function() {deepEqual( Stem("répareras"), "répar");});
test("reparlait -> reparl", function() {deepEqual( Stem("reparlait"), "reparl");});
test("repartaient -> repart", function() {deepEqual( Stem("repartaient"), "repart");});
test("reparti -> repart", function() {deepEqual( Stem("reparti"), "repart");});
test("repartie -> repart", function() {deepEqual( Stem("repartie"), "repart");});
test("reparties -> repart", function() {deepEqual( Stem("reparties"), "repart");});
test("repartir -> repart", function() {deepEqual( Stem("repartir"), "repart");});
test("repartirent -> repart", function() {deepEqual( Stem("repartirent"), "repart");});
test("repartit -> repart", function() {deepEqual( Stem("repartit"), "repart");});
test("répartition -> répartit", function() {deepEqual( Stem("répartition"), "répartit");});
test("repartons -> reparton", function() {deepEqual( Stem("repartons"), "reparton");});
test("reparu -> reparu", function() {deepEqual( Stem("reparu"), "reparu");});
test("reparurent -> reparurent", function() {deepEqual( Stem("reparurent"), "reparurent");});
test("reparut -> reparut", function() {deepEqual( Stem("reparut"), "reparut");});
test("repas -> rep", function() {deepEqual( Stem("repas"), "rep");});
test("repassa -> repass", function() {deepEqual( Stem("repassa"), "repass");});
test("repassai -> repass", function() {deepEqual( Stem("repassai"), "repass");});
test("repassait -> repass", function() {deepEqual( Stem("repassait"), "repass");});
test("repassant -> repass", function() {deepEqual( Stem("repassant"), "repass");});
test("repasser -> repass", function() {deepEqual( Stem("repasser"), "repass");});
test("repasserait -> repass", function() {deepEqual( Stem("repasserait"), "repass");});
test("repens -> repen", function() {deepEqual( Stem("repens"), "repen");});
test("repensant -> repens", function() {deepEqual( Stem("repensant"), "repens");});
test("repenser -> repens", function() {deepEqual( Stem("repenser"), "repens");});
test("repentie -> repent", function() {deepEqual( Stem("repentie"), "repent");});
test("repentir -> repent", function() {deepEqual( Stem("repentir"), "repent");});
test("reperdre -> reperdr", function() {deepEqual( Stem("reperdre"), "reperdr");});
test("répéta -> répet", function() {deepEqual( Stem("répéta"), "répet");});
test("répétaient -> répet", function() {deepEqual( Stem("répétaient"), "répet");});
test("répétait -> répet", function() {deepEqual( Stem("répétait"), "répet");});
test("répétant -> répet", function() {deepEqual( Stem("répétant"), "répet");});
test("répétât -> répet", function() {deepEqual( Stem("répétât"), "répet");});
test("répète -> répet", function() {deepEqual( Stem("répète"), "répet");});
test("répété -> répet", function() {deepEqual( Stem("répété"), "répet");});
test("répétée -> répet", function() {deepEqual( Stem("répétée"), "répet");});
test("répétées -> répet", function() {deepEqual( Stem("répétées"), "répet");});
test("répètent -> répètent", function() {deepEqual( Stem("répètent"), "répètent");});
test("repeter -> repet", function() {deepEqual( Stem("repeter"), "repet");});
test("répéter -> répet", function() {deepEqual( Stem("répéter"), "répet");});
test("répétera -> répet", function() {deepEqual( Stem("répétera"), "répet");});
test("répéterai -> répet", function() {deepEqual( Stem("répéterai"), "répet");});
test("répéterait -> répet", function() {deepEqual( Stem("répéterait"), "répet");});
test("répéterons -> répet", function() {deepEqual( Stem("répéterons"), "répet");});
test("répéteront -> répet", function() {deepEqual( Stem("répéteront"), "répet");});
test("répétez -> répet", function() {deepEqual( Stem("répétez"), "répet");});
test("répétions -> répet", function() {deepEqual( Stem("répétions"), "répet");});
test("répétiteur -> répétiteur", function() {deepEqual( Stem("répétiteur"), "répétiteur");});
test("répit -> rep", function() {deepEqual( Stem("répit"), "rep");});
test("replaça -> replac", function() {deepEqual( Stem("replaça"), "replac");});
test("replaçant -> replac", function() {deepEqual( Stem("replaçant"), "replac");});
test("replacer -> replac", function() {deepEqual( Stem("replacer"), "replac");});
test("repliée -> repli", function() {deepEqual( Stem("repliée"), "repli");});
test("replièrent -> repli", function() {deepEqual( Stem("replièrent"), "repli");});
test("répliqua -> répliqu", function() {deepEqual( Stem("répliqua"), "répliqu");});
test("répliquait -> répliqu", function() {deepEqual( Stem("répliquait"), "répliqu");});
test("réplique -> répliqu", function() {deepEqual( Stem("réplique"), "répliqu");});
test("répliquer -> répliqu", function() {deepEqual( Stem("répliquer"), "répliqu");});
test("répliquerai -> répliqu", function() {deepEqual( Stem("répliquerai"), "répliqu");});
test("répliques -> répliqu", function() {deepEqual( Stem("répliques"), "répliqu");});
test("replis -> repl", function() {deepEqual( Stem("replis"), "repl");});
test("répond -> répond", function() {deepEqual( Stem("répond"), "répond");});
test("répondaient -> répond", function() {deepEqual( Stem("répondaient"), "répond");});
test("répondais -> répond", function() {deepEqual( Stem("répondais"), "répond");});
test("répondait -> répond", function() {deepEqual( Stem("répondait"), "répond");});
test("répondant -> répond", function() {deepEqual( Stem("répondant"), "répond");});
test("répondez -> répond", function() {deepEqual( Stem("répondez"), "répond");});
test("répondiez -> répond", function() {deepEqual( Stem("répondiez"), "répond");});
test("répondirent -> répond", function() {deepEqual( Stem("répondirent"), "répond");});
test("répondit -> répond", function() {deepEqual( Stem("répondit"), "répond");});
test("répondît -> répond", function() {deepEqual( Stem("répondît"), "répond");});
test("répondra -> répondr", function() {deepEqual( Stem("répondra"), "répondr");});
test("répondrai -> répondr", function() {deepEqual( Stem("répondrai"), "répondr");});
test("répondrais -> répondr", function() {deepEqual( Stem("répondrais"), "répondr");});
test("répondrait -> répondr", function() {deepEqual( Stem("répondrait"), "répondr");});
test("répondras -> répondr", function() {deepEqual( Stem("répondras"), "répondr");});
test("répondre -> répondr", function() {deepEqual( Stem("répondre"), "répondr");});
test("répondrez -> répondr", function() {deepEqual( Stem("répondrez"), "répondr");});
test("réponds -> répond", function() {deepEqual( Stem("réponds"), "répond");});
test("répondu -> répondu", function() {deepEqual( Stem("répondu"), "répondu");});
test("réponse -> répons", function() {deepEqual( Stem("réponse"), "répons");});
test("réponses -> répons", function() {deepEqual( Stem("réponses"), "répons");});
test("reportant -> report", function() {deepEqual( Stem("reportant"), "report");});
test("reporté -> report", function() {deepEqual( Stem("reporté"), "report");});
test("reporters -> reporter", function() {deepEqual( Stem("reporters"), "reporter");});
test("repos -> repos", function() {deepEqual( Stem("repos"), "repos");});
test("reposa -> repos", function() {deepEqual( Stem("reposa"), "repos");});
test("reposait -> repos", function() {deepEqual( Stem("reposait"), "repos");});
test("repose -> repos", function() {deepEqual( Stem("repose"), "repos");});
test("reposé -> repos", function() {deepEqual( Stem("reposé"), "repos");});
test("reposer -> repos", function() {deepEqual( Stem("reposer"), "repos");});
test("reposera -> repos", function() {deepEqual( Stem("reposera"), "repos");});
test("reposoir -> reposoir", function() {deepEqual( Stem("reposoir"), "reposoir");});
test("reposoirs -> reposoir", function() {deepEqual( Stem("reposoirs"), "reposoir");});
test("repoussa -> repouss", function() {deepEqual( Stem("repoussa"), "repouss");});
test("repoussais -> repouss", function() {deepEqual( Stem("repoussais"), "repouss");});
test("repoussait -> repouss", function() {deepEqual( Stem("repoussait"), "repouss");});
test("repoussant -> repouss", function() {deepEqual( Stem("repoussant"), "repouss");});
test("repousse -> repouss", function() {deepEqual( Stem("repousse"), "repouss");});
test("repoussé -> repouss", function() {deepEqual( Stem("repoussé"), "repouss");});
test("repoussée -> repouss", function() {deepEqual( Stem("repoussée"), "repouss");});
test("repoussées -> repouss", function() {deepEqual( Stem("repoussées"), "repouss");});
test("repousser -> repouss", function() {deepEqual( Stem("repousser"), "repouss");});
test("repousserait -> repouss", function() {deepEqual( Stem("repousserait"), "repouss");});
test("repoussés -> repouss", function() {deepEqual( Stem("repoussés"), "repouss");});
test("repoussez -> repouss", function() {deepEqual( Stem("repoussez"), "repouss");});
test("reprenaient -> repren", function() {deepEqual( Stem("reprenaient"), "repren");});
test("reprenait -> repren", function() {deepEqual( Stem("reprenait"), "repren");});
test("reprenant -> repren", function() {deepEqual( Stem("reprenant"), "repren");});
test("reprend -> reprend", function() {deepEqual( Stem("reprend"), "reprend");});
test("reprendra -> reprendr", function() {deepEqual( Stem("reprendra"), "reprendr");});
test("reprendrai -> reprendr", function() {deepEqual( Stem("reprendrai"), "reprendr");});
test("reprendrait -> reprendr", function() {deepEqual( Stem("reprendrait"), "reprendr");});
test("reprendre -> reprendr", function() {deepEqual( Stem("reprendre"), "reprendr");});
test("reprendrons -> reprendron", function() {deepEqual( Stem("reprendrons"), "reprendron");});
test("reprends -> reprend", function() {deepEqual( Stem("reprends"), "reprend");});
test("reprenez -> repren", function() {deepEqual( Stem("reprenez"), "repren");});
test("représenta -> représent", function() {deepEqual( Stem("représenta"), "représent");});
test("représentaient -> représent", function() {deepEqual( Stem("représentaient"), "représent");});
test("représentait -> représent", function() {deepEqual( Stem("représentait"), "représent");});
test("représentant -> représent", function() {deepEqual( Stem("représentant"), "représent");});
test("représentation -> représent", function() {deepEqual( Stem("représentation"), "représent");});
test("representations -> represent", function() {deepEqual( Stem("representations"), "represent");});
test("représentations -> représent", function() {deepEqual( Stem("représentations"), "représent");});
test("représente -> représent", function() {deepEqual( Stem("représente"), "représent");});
test("représenté -> représent", function() {deepEqual( Stem("représenté"), "représent");});
test("représenter -> représent", function() {deepEqual( Stem("représenter"), "représent");});
test("réprimande -> réprimand", function() {deepEqual( Stem("réprimande"), "réprimand");});
test("réprimer -> réprim", function() {deepEqual( Stem("réprimer"), "réprim");});
test("reprirent -> repr", function() {deepEqual( Stem("reprirent"), "repr");});
test("repris -> repr", function() {deepEqual( Stem("repris"), "repr");});
test("reprise -> repris", function() {deepEqual( Stem("reprise"), "repris");});
test("reprises -> repris", function() {deepEqual( Stem("reprises"), "repris");});
test("reprit -> repr", function() {deepEqual( Stem("reprit"), "repr");});
test("reprît -> repr", function() {deepEqual( Stem("reprît"), "repr");});
test("reprocha -> reproch", function() {deepEqual( Stem("reprocha"), "reproch");});
test("reprochaient -> reproch", function() {deepEqual( Stem("reprochaient"), "reproch");});
test("reprochait -> reproch", function() {deepEqual( Stem("reprochait"), "reproch");});
test("reprochant -> reproch", function() {deepEqual( Stem("reprochant"), "reproch");});
test("reproche -> reproch", function() {deepEqual( Stem("reproche"), "reproch");});
test("reproché -> reproch", function() {deepEqual( Stem("reproché"), "reproch");});
test("reprochée -> reproch", function() {deepEqual( Stem("reprochée"), "reproch");});
test("reprocher -> reproch", function() {deepEqual( Stem("reprocher"), "reproch");});
test("reprochera -> reproch", function() {deepEqual( Stem("reprochera"), "reproch");});
test("reprocherai -> reproch", function() {deepEqual( Stem("reprocherai"), "reproch");});
test("reprocherais -> reproch", function() {deepEqual( Stem("reprocherais"), "reproch");});
test("reproches -> reproch", function() {deepEqual( Stem("reproches"), "reproch");});
test("reprochons -> reprochon", function() {deepEqual( Stem("reprochons"), "reprochon");});
test("reproduire -> reproduir", function() {deepEqual( Stem("reproduire"), "reproduir");});
test("reproduisait -> reproduis", function() {deepEqual( Stem("reproduisait"), "reproduis");});
test("reproduisent -> reproduisent", function() {deepEqual( Stem("reproduisent"), "reproduisent");});
test("reproduisirent -> reproduis", function() {deepEqual( Stem("reproduisirent"), "reproduis");});
test("reproduisit -> reproduis", function() {deepEqual( Stem("reproduisit"), "reproduis");});
test("reproduit -> reproduit", function() {deepEqual( Stem("reproduit"), "reproduit");});
test("reprouvez -> reprouv", function() {deepEqual( Stem("reprouvez"), "reprouv");});
test("reptation -> reptat", function() {deepEqual( Stem("reptation"), "reptat");});
test("reptiles -> reptil", function() {deepEqual( Stem("reptiles"), "reptil");});
test("républicain -> républicain", function() {deepEqual( Stem("républicain"), "républicain");});
test("républicains -> républicain", function() {deepEqual( Stem("républicains"), "républicain");});
test("republican -> republican", function() {deepEqual( Stem("republican"), "republican");});
test("république -> républ", function() {deepEqual( Stem("république"), "républ");});
test("républiques -> républ", function() {deepEqual( Stem("républiques"), "républ");});
test("répudié -> répudi", function() {deepEqual( Stem("répudié"), "répudi");});
test("répugnait -> répugn", function() {deepEqual( Stem("répugnait"), "répugn");});
test("répugnance -> répugn", function() {deepEqual( Stem("répugnance"), "répugn");});
test("réputation -> réput", function() {deepEqual( Stem("réputation"), "réput");});
test("réputations -> réput", function() {deepEqual( Stem("réputations"), "réput");});
test("requiers -> requi", function() {deepEqual( Stem("requiers"), "requi");});
test("requise -> requis", function() {deepEqual( Stem("requise"), "requis");});
test("réquisitionnaire -> réquisitionnair", function() {deepEqual( Stem("réquisitionnaire"), "réquisitionnair");});
test("rescousse -> rescouss", function() {deepEqual( Stem("rescousse"), "rescouss");});
test("rescrit -> rescr", function() {deepEqual( Stem("rescrit"), "rescr");});
test("réseau -> réseau", function() {deepEqual( Stem("réseau"), "réseau");});
test("resegon -> resegon", function() {deepEqual( Stem("resegon"), "resegon");});
test("resembleth -> resembleth", function() {deepEqual( Stem("resembleth"), "resembleth");});
test("réserva -> réserv", function() {deepEqual( Stem("réserva"), "réserv");});
test("réservait -> réserv", function() {deepEqual( Stem("réservait"), "réserv");});
test("réserve -> réserv", function() {deepEqual( Stem("réserve"), "réserv");});
test("réservé -> réserv", function() {deepEqual( Stem("réservé"), "réserv");});
test("réservée -> réserv", function() {deepEqual( Stem("réservée"), "réserv");});
test("réservées -> réserv", function() {deepEqual( Stem("réservées"), "réserv");});
test("réserver -> réserv", function() {deepEqual( Stem("réserver"), "réserv");});
test("réserves -> réserv", function() {deepEqual( Stem("réserves"), "réserv");});
test("réservés -> réserv", function() {deepEqual( Stem("réservés"), "réserv");});
test("réservoir -> réservoir", function() {deepEqual( Stem("réservoir"), "réservoir");});
test("résidais -> résid", function() {deepEqual( Stem("résidais"), "résid");});
test("résidait -> résid", function() {deepEqual( Stem("résidait"), "résid");});
test("résidence -> résident", function() {deepEqual( Stem("résidence"), "résident");});
test("résigna -> résign", function() {deepEqual( Stem("résigna"), "résign");});
test("résignation -> résign", function() {deepEqual( Stem("résignation"), "résign");});
test("résigné -> résign", function() {deepEqual( Stem("résigné"), "résign");});
test("résignée -> résign", function() {deepEqual( Stem("résignée"), "résign");});
test("résigner -> résign", function() {deepEqual( Stem("résigner"), "résign");});
test("résines -> résin", function() {deepEqual( Stem("résines"), "résin");});
test("résista -> résist", function() {deepEqual( Stem("résista"), "résist");});
test("résistaient -> résist", function() {deepEqual( Stem("résistaient"), "résist");});
test("résistait -> résist", function() {deepEqual( Stem("résistait"), "résist");});
test("résistance -> résist", function() {deepEqual( Stem("résistance"), "résist");});
test("résistant -> résist", function() {deepEqual( Stem("résistant"), "résist");});
test("résiste -> résist", function() {deepEqual( Stem("résiste"), "résist");});
test("résister -> résist", function() {deepEqual( Stem("résister"), "résist");});
test("résisterez -> résist", function() {deepEqual( Stem("résisterez"), "résist");});
test("résistes -> résist", function() {deepEqual( Stem("résistes"), "résist");});
test("résolu -> résolu", function() {deepEqual( Stem("résolu"), "résolu");});
test("résolue -> résolu", function() {deepEqual( Stem("résolue"), "résolu");});
test("résolues -> résolu", function() {deepEqual( Stem("résolues"), "résolu");});
test("résolument -> résolu", function() {deepEqual( Stem("résolument"), "résolu");});
test("résolurent -> résolurent", function() {deepEqual( Stem("résolurent"), "résolurent");});
test("résolut -> résolut", function() {deepEqual( Stem("résolut"), "résolut");});
test("résolution -> résolu", function() {deepEqual( Stem("résolution"), "résolu");});
test("résolutions -> résolu", function() {deepEqual( Stem("résolutions"), "résolu");});
test("résonnaient -> réson", function() {deepEqual( Stem("résonnaient"), "réson");});
test("résoudre -> résoudr", function() {deepEqual( Stem("résoudre"), "résoudr");});
test("respect -> respect", function() {deepEqual( Stem("respect"), "respect");});
test("respecta -> respect", function() {deepEqual( Stem("respecta"), "respect");});
test("respectable -> respect", function() {deepEqual( Stem("respectable"), "respect");});
test("respectables -> respect", function() {deepEqual( Stem("respectables"), "respect");});
test("respectais -> respect", function() {deepEqual( Stem("respectais"), "respect");});
test("respectait -> respect", function() {deepEqual( Stem("respectait"), "respect");});
test("respectant -> respect", function() {deepEqual( Stem("respectant"), "respect");});
test("respectante -> respect", function() {deepEqual( Stem("respectante"), "respect");});
test("respecte -> respect", function() {deepEqual( Stem("respecte"), "respect");});
test("respecté -> respect", function() {deepEqual( Stem("respecté"), "respect");});
test("respecter -> respect", function() {deepEqual( Stem("respecter"), "respect");});
test("respecterais -> respect", function() {deepEqual( Stem("respecterais"), "respect");});
test("respectés -> respect", function() {deepEqual( Stem("respectés"), "respect");});
test("respective -> respect", function() {deepEqual( Stem("respective"), "respect");});
test("respects -> respect", function() {deepEqual( Stem("respects"), "respect");});
test("respectueuse -> respectu", function() {deepEqual( Stem("respectueuse"), "respectu");});
test("respectueusement -> respectu", function() {deepEqual( Stem("respectueusement"), "respectu");});
test("respectueuses -> respectu", function() {deepEqual( Stem("respectueuses"), "respectu");});
test("respectueux -> respectu", function() {deepEqual( Stem("respectueux"), "respectu");});
test("respira -> resp", function() {deepEqual( Stem("respira"), "resp");});
test("respiraient -> resp", function() {deepEqual( Stem("respiraient"), "resp");});
test("respirait -> resp", function() {deepEqual( Stem("respirait"), "resp");});
test("respirant -> respir", function() {deepEqual( Stem("respirant"), "respir");});
test("respiration -> respir", function() {deepEqual( Stem("respiration"), "respir");});
test("respire -> respir", function() {deepEqual( Stem("respire"), "respir");});
test("respirer -> respir", function() {deepEqual( Stem("respirer"), "respir");});
test("respirerai -> respir", function() {deepEqual( Stem("respirerai"), "respir");});
test("respirons -> resp", function() {deepEqual( Stem("respirons"), "resp");});
test("resplendissant -> resplend", function() {deepEqual( Stem("resplendissant"), "resplend");});
test("resplendissante -> resplend", function() {deepEqual( Stem("resplendissante"), "resplend");});
test("resplendissent -> resplend", function() {deepEqual( Stem("resplendissent"), "resplend");});
test("responsable -> respons", function() {deepEqual( Stem("responsable"), "respons");});
test("ressemblaient -> ressembl", function() {deepEqual( Stem("ressemblaient"), "ressembl");});
test("ressemblait -> ressembl", function() {deepEqual( Stem("ressemblait"), "ressembl");});
test("ressemblance -> ressembl", function() {deepEqual( Stem("ressemblance"), "ressembl");});
test("ressemblant -> ressembl", function() {deepEqual( Stem("ressemblant"), "ressembl");});
test("ressemblât -> ressembl", function() {deepEqual( Stem("ressemblât"), "ressembl");});
test("ressemble -> ressembl", function() {deepEqual( Stem("ressemble"), "ressembl");});
test("ressemblé -> ressembl", function() {deepEqual( Stem("ressemblé"), "ressembl");});
test("ressemblent -> ressemblent", function() {deepEqual( Stem("ressemblent"), "ressemblent");});
test("ressembler -> ressembl", function() {deepEqual( Stem("ressembler"), "ressembl");});
test("ressemblera -> ressembl", function() {deepEqual( Stem("ressemblera"), "ressembl");});
test("ressemblez -> ressembl", function() {deepEqual( Stem("ressemblez"), "ressembl");});
test("ressens -> ressen", function() {deepEqual( Stem("ressens"), "ressen");});
test("ressentait -> ressent", function() {deepEqual( Stem("ressentait"), "ressent");});
test("ressentir -> ressent", function() {deepEqual( Stem("ressentir"), "ressent");});
test("ressentit -> ressent", function() {deepEqual( Stem("ressentit"), "ressent");});
test("resserré -> resserr", function() {deepEqual( Stem("resserré"), "resserr");});
test("ressort -> ressort", function() {deepEqual( Stem("ressort"), "ressort");});
test("ressorti -> ressort", function() {deepEqual( Stem("ressorti"), "ressort");});
test("ressortir -> ressort", function() {deepEqual( Stem("ressortir"), "ressort");});
test("ressorts -> ressort", function() {deepEqual( Stem("ressorts"), "ressort");});
test("ressource -> ressourc", function() {deepEqual( Stem("ressource"), "ressourc");});
test("ressources -> ressourc", function() {deepEqual( Stem("ressources"), "ressourc");});
test("ressuscité -> ressusc", function() {deepEqual( Stem("ressuscité"), "ressusc");});
test("ressuscitèrent -> ressuscit", function() {deepEqual( Stem("ressuscitèrent"), "ressuscit");});
test("resta -> rest", function() {deepEqual( Stem("resta"), "rest");});
test("restai -> rest", function() {deepEqual( Stem("restai"), "rest");});
test("restaient -> rest", function() {deepEqual( Stem("restaient"), "rest");});
test("restait -> rest", function() {deepEqual( Stem("restait"), "rest");});
test("restant -> rest", function() {deepEqual( Stem("restant"), "rest");});
test("restassent -> rest", function() {deepEqual( Stem("restassent"), "rest");});
test("restât -> rest", function() {deepEqual( Stem("restât"), "rest");});
test("restaurant -> restaur", function() {deepEqual( Stem("restaurant"), "restaur");});
test("restaurants -> restaur", function() {deepEqual( Stem("restaurants"), "restaur");});
test("restauration -> restaur", function() {deepEqual( Stem("restauration"), "restaur");});
test("restaurations -> restaur", function() {deepEqual( Stem("restaurations"), "restaur");});
test("restauré -> restaur", function() {deepEqual( Stem("restauré"), "restaur");});
test("reste -> rest", function() {deepEqual( Stem("reste"), "rest");});
test("resté -> rest", function() {deepEqual( Stem("resté"), "rest");});
test("restée -> rest", function() {deepEqual( Stem("restée"), "rest");});
test("restées -> rest", function() {deepEqual( Stem("restées"), "rest");});
test("restent -> restent", function() {deepEqual( Stem("restent"), "restent");});
test("rester -> rest", function() {deepEqual( Stem("rester"), "rest");});
test("restera -> rest", function() {deepEqual( Stem("restera"), "rest");});
test("resterai -> rest", function() {deepEqual( Stem("resterai"), "rest");});
test("resteraient -> rest", function() {deepEqual( Stem("resteraient"), "rest");});
test("resterais -> rest", function() {deepEqual( Stem("resterais"), "rest");});
test("resterait -> rest", function() {deepEqual( Stem("resterait"), "rest");});
test("resteras -> rest", function() {deepEqual( Stem("resteras"), "rest");});
test("restèrent -> rest", function() {deepEqual( Stem("restèrent"), "rest");});
test("resterez -> rest", function() {deepEqual( Stem("resterez"), "rest");});
test("resteront -> rest", function() {deepEqual( Stem("resteront"), "rest");});
test("restes -> rest", function() {deepEqual( Stem("restes"), "rest");});
test("restés -> rest", function() {deepEqual( Stem("restés"), "rest");});
test("restez -> rest", function() {deepEqual( Stem("restez"), "rest");});
test("restiez -> rest", function() {deepEqual( Stem("restiez"), "rest");});
test("restitué -> restitu", function() {deepEqual( Stem("restitué"), "restitu");});
test("restituée -> restitu", function() {deepEqual( Stem("restituée"), "restitu");});
test("restituit -> restituit", function() {deepEqual( Stem("restituit"), "restituit");});
test("restitution -> restitu", function() {deepEqual( Stem("restitution"), "restitu");});
test("restriction -> restrict", function() {deepEqual( Stem("restriction"), "restrict");});
test("résultait -> résult", function() {deepEqual( Stem("résultait"), "résult");});
test("résultat -> résultat", function() {deepEqual( Stem("résultat"), "résultat");});
test("résultats -> résultat", function() {deepEqual( Stem("résultats"), "résultat");});
test("résumait -> résum", function() {deepEqual( Stem("résumait"), "résum");});
test("résumé -> résum", function() {deepEqual( Stem("résumé"), "résum");});
test("résumer -> résum", function() {deepEqual( Stem("résumer"), "résum");});
test("résumons -> résumon", function() {deepEqual( Stem("résumons"), "résumon");});
test("résurrection -> résurrect", function() {deepEqual( Stem("résurrection"), "résurrect");});
test("rétabli -> rétabl", function() {deepEqual( Stem("rétabli"), "rétabl");});
test("rétablie -> rétabl", function() {deepEqual( Stem("rétablie"), "rétabl");});
test("rétablir -> rétabl", function() {deepEqual( Stem("rétablir"), "rétabl");});
test("rétabliras -> rétabl", function() {deepEqual( Stem("rétabliras"), "rétabl");});
test("rétablissait -> rétabl", function() {deepEqual( Stem("rétablissait"), "rétabl");});
test("rétablissement -> rétabl", function() {deepEqual( Stem("rétablissement"), "rétabl");});
test("rétablit -> rétabl", function() {deepEqual( Stem("rétablit"), "rétabl");});
test("retard -> retard", function() {deepEqual( Stem("retard"), "retard");});
test("retardait -> retard", function() {deepEqual( Stem("retardait"), "retard");});
test("retardant -> retard", function() {deepEqual( Stem("retardant"), "retard");});
test("retardataire -> retardatair", function() {deepEqual( Stem("retardataire"), "retardatair");});
test("retarde -> retard", function() {deepEqual( Stem("retarde"), "retard");});
test("retardé -> retard", function() {deepEqual( Stem("retardé"), "retard");});
test("retardée -> retard", function() {deepEqual( Stem("retardée"), "retard");});
test("retardent -> retardent", function() {deepEqual( Stem("retardent"), "retardent");});
test("retarder -> retard", function() {deepEqual( Stem("retarder"), "retard");});
test("retardez -> retard", function() {deepEqual( Stem("retardez"), "retard");});
test("retards -> retard", function() {deepEqual( Stem("retards"), "retard");});
test("retenaient -> reten", function() {deepEqual( Stem("retenaient"), "reten");});
test("retenait -> reten", function() {deepEqual( Stem("retenait"), "reten");});
test("retenant -> reten", function() {deepEqual( Stem("retenant"), "reten");});
test("retenez -> reten", function() {deepEqual( Stem("retenez"), "reten");});
test("retenir -> reten", function() {deepEqual( Stem("retenir"), "reten");});
test("retenti -> retent", function() {deepEqual( Stem("retenti"), "retent");});
test("retentir -> retent", function() {deepEqual( Stem("retentir"), "retent");});
test("retentiraient -> retent", function() {deepEqual( Stem("retentiraient"), "retent");});
test("retentirait -> retent", function() {deepEqual( Stem("retentirait"), "retent");});
test("retentirent -> retent", function() {deepEqual( Stem("retentirent"), "retent");});
test("retentissaient -> retent", function() {deepEqual( Stem("retentissaient"), "retent");});
test("retentissait -> retent", function() {deepEqual( Stem("retentissait"), "retent");});
test("retentissant -> retent", function() {deepEqual( Stem("retentissant"), "retent");});
test("retentissement -> retent", function() {deepEqual( Stem("retentissement"), "retent");});
test("retentit -> retent", function() {deepEqual( Stem("retentit"), "retent");});
test("retenu -> retenu", function() {deepEqual( Stem("retenu"), "retenu");});
test("retenue -> retenu", function() {deepEqual( Stem("retenue"), "retenu");});
test("retenues -> retenu", function() {deepEqual( Stem("retenues"), "retenu");});
test("retenus -> retenus", function() {deepEqual( Stem("retenus"), "retenus");});
test("retiendrai -> retiendr", function() {deepEqual( Stem("retiendrai"), "retiendr");});
test("retienne -> retien", function() {deepEqual( Stem("retienne"), "retien");});
test("retiennent -> retiennent", function() {deepEqual( Stem("retiennent"), "retiennent");});
test("retient -> retient", function() {deepEqual( Stem("retient"), "retient");});
test("retinrent -> retinrent", function() {deepEqual( Stem("retinrent"), "retinrent");});
test("retint -> retint", function() {deepEqual( Stem("retint"), "retint");});
test("retira -> ret", function() {deepEqual( Stem("retira"), "ret");});
test("retiraient -> ret", function() {deepEqual( Stem("retiraient"), "ret");});
test("retirait -> ret", function() {deepEqual( Stem("retirait"), "ret");});
test("retirant -> retir", function() {deepEqual( Stem("retirant"), "retir");});
test("retirât -> retir", function() {deepEqual( Stem("retirât"), "retir");});
test("retire -> retir", function() {deepEqual( Stem("retire"), "retir");});
test("retiré -> retir", function() {deepEqual( Stem("retiré"), "retir");});
test("retirée -> retir", function() {deepEqual( Stem("retirée"), "retir");});
test("retirées -> retir", function() {deepEqual( Stem("retirées"), "retir");});
test("retirer -> retir", function() {deepEqual( Stem("retirer"), "retir");});
test("retirerais -> retir", function() {deepEqual( Stem("retirerais"), "retir");});
test("retirerait -> retir", function() {deepEqual( Stem("retirerait"), "retir");});
test("retirèrent -> retir", function() {deepEqual( Stem("retirèrent"), "retir");});
test("retirerez -> retir", function() {deepEqual( Stem("retirerez"), "retir");});
test("retirés -> retir", function() {deepEqual( Stem("retirés"), "retir");});
test("retirez -> ret", function() {deepEqual( Stem("retirez"), "ret");});
test("retirons -> ret", function() {deepEqual( Stem("retirons"), "ret");});
test("retomba -> retomb", function() {deepEqual( Stem("retomba"), "retomb");});
test("retombait -> retomb", function() {deepEqual( Stem("retombait"), "retomb");});
test("retombant -> retomb", function() {deepEqual( Stem("retombant"), "retomb");});
test("retombe -> retomb", function() {deepEqual( Stem("retombe"), "retomb");});
test("retombée -> retomb", function() {deepEqual( Stem("retombée"), "retomb");});
test("retomber -> retomb", function() {deepEqual( Stem("retomber"), "retomb");});
test("retomberait -> retomb", function() {deepEqual( Stem("retomberait"), "retomb");});
test("retombes -> retomb", function() {deepEqual( Stem("retombes"), "retomb");});
test("retour -> retour", function() {deepEqual( Stem("retour"), "retour");});
test("retourna -> retourn", function() {deepEqual( Stem("retourna"), "retourn");});
test("retournaient -> retourn", function() {deepEqual( Stem("retournaient"), "retourn");});
test("retournait -> retourn", function() {deepEqual( Stem("retournait"), "retourn");});
test("retournant -> retourn", function() {deepEqual( Stem("retournant"), "retourn");});
test("retourne -> retourn", function() {deepEqual( Stem("retourne"), "retourn");});
test("retourné -> retourn", function() {deepEqual( Stem("retourné"), "retourn");});
test("retourner -> retourn", function() {deepEqual( Stem("retourner"), "retourn");});
test("retournèrent -> retourn", function() {deepEqual( Stem("retournèrent"), "retourn");});
test("retournez -> retourn", function() {deepEqual( Stem("retournez"), "retourn");});
test("retracer -> retrac", function() {deepEqual( Stem("retracer"), "retrac");});
test("rétracte -> rétract", function() {deepEqual( Stem("rétracte"), "rétract");});
test("retraite -> retrait", function() {deepEqual( Stem("retraite"), "retrait");});
test("retraites -> retrait", function() {deepEqual( Stem("retraites"), "retrait");});
test("retrancher -> retranch", function() {deepEqual( Stem("retrancher"), "retranch");});
test("retranchés -> retranch", function() {deepEqual( Stem("retranchés"), "retranch");});
test("rétréci -> rétrec", function() {deepEqual( Stem("rétréci"), "rétrec");});
test("rétrécir -> rétrec", function() {deepEqual( Stem("rétrécir"), "rétrec");});
test("rétrécissait -> rétrec", function() {deepEqual( Stem("rétrécissait"), "rétrec");});
test("retrempait -> retremp", function() {deepEqual( Stem("retrempait"), "retremp");});
test("retrempé -> retremp", function() {deepEqual( Stem("retrempé"), "retremp");});
test("rétribution -> rétribu", function() {deepEqual( Stem("rétribution"), "rétribu");});
test("rétrospectif -> rétrospect", function() {deepEqual( Stem("rétrospectif"), "rétrospect");});
test("retrouva -> retrouv", function() {deepEqual( Stem("retrouva"), "retrouv");});
test("retrouvaient -> retrouv", function() {deepEqual( Stem("retrouvaient"), "retrouv");});
test("retrouvait -> retrouv", function() {deepEqual( Stem("retrouvait"), "retrouv");});
test("retrouvant -> retrouv", function() {deepEqual( Stem("retrouvant"), "retrouv");});
test("retrouvât -> retrouv", function() {deepEqual( Stem("retrouvât"), "retrouv");});
test("retrouve -> retrouv", function() {deepEqual( Stem("retrouve"), "retrouv");});
test("retrouvé -> retrouv", function() {deepEqual( Stem("retrouvé"), "retrouv");});
test("retrouvée -> retrouv", function() {deepEqual( Stem("retrouvée"), "retrouv");});
test("retrouver -> retrouv", function() {deepEqual( Stem("retrouver"), "retrouv");});
test("retrouvera -> retrouv", function() {deepEqual( Stem("retrouvera"), "retrouv");});
test("retrouverai -> retrouv", function() {deepEqual( Stem("retrouverai"), "retrouv");});
test("retrouvèrent -> retrouv", function() {deepEqual( Stem("retrouvèrent"), "retrouv");});
test("retrouverez -> retrouv", function() {deepEqual( Stem("retrouverez"), "retrouv");});
test("retrouverons -> retrouv", function() {deepEqual( Stem("retrouverons"), "retrouv");});
test("retz -> retz", function() {deepEqual( Stem("retz"), "retz");});
test("réuni -> réun", function() {deepEqual( Stem("réuni"), "réun");});
test("réunie -> réun", function() {deepEqual( Stem("réunie"), "réun");});
test("réunies -> réun", function() {deepEqual( Stem("réunies"), "réun");});
test("réunion -> réunion", function() {deepEqual( Stem("réunion"), "réunion");});
test("réunir -> réun", function() {deepEqual( Stem("réunir"), "réun");});
test("réunirent -> réun", function() {deepEqual( Stem("réunirent"), "réun");});
test("réuniront -> réun", function() {deepEqual( Stem("réuniront"), "réun");});
test("réunis -> réun", function() {deepEqual( Stem("réunis"), "réun");});
test("réunissaient -> réun", function() {deepEqual( Stem("réunissaient"), "réun");});
test("réunissait -> réun", function() {deepEqual( Stem("réunissait"), "réun");});
test("réunissant -> réun", function() {deepEqual( Stem("réunissant"), "réun");});
test("réunissent -> réun", function() {deepEqual( Stem("réunissent"), "réun");});
test("réunissez -> réun", function() {deepEqual( Stem("réunissez"), "réun");});
test("réunit -> réun", function() {deepEqual( Stem("réunit"), "réun");});
test("réussi -> réuss", function() {deepEqual( Stem("réussi"), "réuss");});
test("réussir -> réuss", function() {deepEqual( Stem("réussir"), "réuss");});
test("réussirais -> réuss", function() {deepEqual( Stem("réussirais"), "réuss");});
test("réussis -> réuss", function() {deepEqual( Stem("réussis"), "réuss");});
test("réussissait -> réuss", function() {deepEqual( Stem("réussissait"), "réuss");});
test("réussissez -> réuss", function() {deepEqual( Stem("réussissez"), "réuss");});
test("réussit -> réuss", function() {deepEqual( Stem("réussit"), "réuss");});
test("réussite -> réussit", function() {deepEqual( Stem("réussite"), "réussit");});
test("rêva -> rêv", function() {deepEqual( Stem("rêva"), "rêv");});
test("rêvait -> rêv", function() {deepEqual( Stem("rêvait"), "rêv");});
test("revanche -> revanch", function() {deepEqual( Stem("revanche"), "revanch");});
test("rêvant -> rêv", function() {deepEqual( Stem("rêvant"), "rêv");});
test("revaudrai -> revaudr", function() {deepEqual( Stem("revaudrai"), "revaudr");});
test("rêve -> rêv", function() {deepEqual( Stem("rêve"), "rêv");});
test("rêvé -> rêv", function() {deepEqual( Stem("rêvé"), "rêv");});
test("réveil -> réveil", function() {deepEqual( Stem("réveil"), "réveil");});
test("réveilla -> réveil", function() {deepEqual( Stem("réveilla"), "réveil");});
test("réveillait -> réveil", function() {deepEqual( Stem("réveillait"), "réveil");});
test("réveillant -> réveil", function() {deepEqual( Stem("réveillant"), "réveil");});
test("réveillât -> réveil", function() {deepEqual( Stem("réveillât"), "réveil");});
test("réveille -> réveil", function() {deepEqual( Stem("réveille"), "réveil");});
test("réveillé -> réveil", function() {deepEqual( Stem("réveillé"), "réveil");});
test("réveillée -> réveil", function() {deepEqual( Stem("réveillée"), "réveil");});
test("réveiller -> réveil", function() {deepEqual( Stem("réveiller"), "réveil");});
test("réveillèrent -> réveil", function() {deepEqual( Stem("réveillèrent"), "réveil");});
test("réveillés -> réveil", function() {deepEqual( Stem("réveillés"), "réveil");});
test("révéla -> rével", function() {deepEqual( Stem("révéla"), "rével");});
test("révélait -> rével", function() {deepEqual( Stem("révélait"), "rével");});
test("révélation -> rével", function() {deepEqual( Stem("révélation"), "rével");});
test("révélé -> rével", function() {deepEqual( Stem("révélé"), "rével");});
test("révéler -> rével", function() {deepEqual( Stem("révéler"), "rével");});
test("revenaient -> reven", function() {deepEqual( Stem("revenaient"), "reven");});
test("revenait -> reven", function() {deepEqual( Stem("revenait"), "reven");});
test("revenant -> reven", function() {deepEqual( Stem("revenant"), "reven");});
test("revendeur -> revendeur", function() {deepEqual( Stem("revendeur"), "revendeur");});
test("revendre -> revendr", function() {deepEqual( Stem("revendre"), "revendr");});
test("revenez -> reven", function() {deepEqual( Stem("revenez"), "reven");});
test("revenir -> reven", function() {deepEqual( Stem("revenir"), "reven");});
test("revenons -> revenon", function() {deepEqual( Stem("revenons"), "revenon");});
test("revenu -> revenu", function() {deepEqual( Stem("revenu"), "revenu");});
test("revenue -> revenu", function() {deepEqual( Stem("revenue"), "revenu");});
test("revenus -> revenus", function() {deepEqual( Stem("revenus"), "revenus");});
test("rêver -> rêv", function() {deepEqual( Stem("rêver"), "rêv");});
test("révéré -> réver", function() {deepEqual( Stem("révéré"), "réver");});
test("révérence -> révérent", function() {deepEqual( Stem("révérence"), "révérent");});
test("révérences -> révérent", function() {deepEqual( Stem("révérences"), "révérent");});
test("révérencieuses -> révérenci", function() {deepEqual( Stem("révérencieuses"), "révérenci");});
test("révérend -> révérend", function() {deepEqual( Stem("révérend"), "révérend");});
test("révérendissime -> révérendissim", function() {deepEqual( Stem("révérendissime"), "révérendissim");});
test("rêverie -> rêver", function() {deepEqual( Stem("rêverie"), "rêver");});
test("rêveries -> rêver", function() {deepEqual( Stem("rêveries"), "rêver");});
test("reverrai -> reverr", function() {deepEqual( Stem("reverrai"), "reverr");});
test("reverrais -> reverr", function() {deepEqual( Stem("reverrais"), "reverr");});
test("reverrait -> reverr", function() {deepEqual( Stem("reverrait"), "reverr");});
test("reverrez -> reverr", function() {deepEqual( Stem("reverrez"), "reverr");});
test("reverrons -> reverron", function() {deepEqual( Stem("reverrons"), "reverron");});
test("reverront -> reverront", function() {deepEqual( Stem("reverront"), "reverront");});
test("revers -> rever", function() {deepEqual( Stem("revers"), "rever");});
test("rêves -> rêv", function() {deepEqual( Stem("rêves"), "rêv");});
test("revêtir -> revêt", function() {deepEqual( Stem("revêtir"), "revêt");});
test("revêtu -> revêtu", function() {deepEqual( Stem("revêtu"), "revêtu");});
test("revêtus -> revêtus", function() {deepEqual( Stem("revêtus"), "revêtus");});
test("rêveur -> rêveur", function() {deepEqual( Stem("rêveur"), "rêveur");});
test("rêveuse -> rêveux", function() {deepEqual( Stem("rêveuse"), "rêveux");});
test("rêvez -> rêv", function() {deepEqual( Stem("rêvez"), "rêv");});
test("reviendra -> reviendr", function() {deepEqual( Stem("reviendra"), "reviendr");});
test("reviendrai -> reviendr", function() {deepEqual( Stem("reviendrai"), "reviendr");});
test("reviendrais -> reviendr", function() {deepEqual( Stem("reviendrais"), "reviendr");});
test("reviendrait -> reviendr", function() {deepEqual( Stem("reviendrait"), "reviendr");});
test("reviendrez -> reviendr", function() {deepEqual( Stem("reviendrez"), "reviendr");});
test("reviendront -> reviendront", function() {deepEqual( Stem("reviendront"), "reviendront");});
test("revienne -> revien", function() {deepEqual( Stem("revienne"), "revien");});
test("reviennent -> reviennent", function() {deepEqual( Stem("reviennent"), "reviennent");});
test("reviens -> revien", function() {deepEqual( Stem("reviens"), "revien");});
test("revient -> revient", function() {deepEqual( Stem("revient"), "revient");});
test("review -> review", function() {deepEqual( Stem("review"), "review");});
test("revinrent -> revinrent", function() {deepEqual( Stem("revinrent"), "revinrent");});
test("revinssent -> revinssent", function() {deepEqual( Stem("revinssent"), "revinssent");});
test("revint -> revint", function() {deepEqual( Stem("revint"), "revint");});
test("revirement -> revir", function() {deepEqual( Stem("revirement"), "revir");});
test("revirent -> rev", function() {deepEqual( Stem("revirent"), "rev");});
test("revissent -> rev", function() {deepEqual( Stem("revissent"), "rev");});
test("revit -> rev", function() {deepEqual( Stem("revit"), "rev");});
test("revivaient -> reviv", function() {deepEqual( Stem("revivaient"), "reviv");});
test("revoie -> revoi", function() {deepEqual( Stem("revoie"), "revoi");});
test("revoies -> revoi", function() {deepEqual( Stem("revoies"), "revoi");});
test("revoir -> revoir", function() {deepEqual( Stem("revoir"), "revoir");});
test("revois -> revois", function() {deepEqual( Stem("revois"), "revois");});
test("révolta -> révolt", function() {deepEqual( Stem("révolta"), "révolt");});
test("révoltante -> révolt", function() {deepEqual( Stem("révoltante"), "révolt");});
test("révoltantes -> révolt", function() {deepEqual( Stem("révoltantes"), "révolt");});
test("révoltât -> révolt", function() {deepEqual( Stem("révoltât"), "révolt");});
test("révolte -> révolt", function() {deepEqual( Stem("révolte"), "révolt");});
test("révolté -> révolt", function() {deepEqual( Stem("révolté"), "révolt");});
test("révoltée -> révolt", function() {deepEqual( Stem("révoltée"), "révolt");});
test("révolter -> révolt", function() {deepEqual( Stem("révolter"), "révolt");});
test("révolues -> révolu", function() {deepEqual( Stem("révolues"), "révolu");});
test("révolus -> révolus", function() {deepEqual( Stem("révolus"), "révolus");});
test("révolution -> révolu", function() {deepEqual( Stem("révolution"), "révolu");});
test("révolutionnaire -> révolutionnair", function() {deepEqual( Stem("révolutionnaire"), "révolutionnair");});
test("révolutionnaires -> révolutionnair", function() {deepEqual( Stem("révolutionnaires"), "révolutionnair");});
test("révolutions -> révolu", function() {deepEqual( Stem("révolutions"), "révolu");});
test("revolver -> revolv", function() {deepEqual( Stem("revolver"), "revolv");});
test("revolvers -> revolver", function() {deepEqual( Stem("revolvers"), "revolver");});
test("révoquée -> révoqu", function() {deepEqual( Stem("révoquée"), "révoqu");});
test("révoquerai -> révoqu", function() {deepEqual( Stem("révoquerai"), "révoqu");});
test("révoquerez -> révoqu", function() {deepEqual( Stem("révoquerez"), "révoqu");});
test("revoyait -> revoi", function() {deepEqual( Stem("revoyait"), "revoi");});
test("revoyant -> revoi", function() {deepEqual( Stem("revoyant"), "revoi");});
test("revu -> revu", function() {deepEqual( Stem("revu"), "revu");});
test("revue -> revu", function() {deepEqual( Stem("revue"), "revu");});
test("revues -> revu", function() {deepEqual( Stem("revues"), "revu");});
test("rez -> rez", function() {deepEqual( Stem("rez"), "rez");});
test("rhin -> rhin", function() {deepEqual( Stem("rhin"), "rhin");});
test("rhône -> rhôn", function() {deepEqual( Stem("rhône"), "rhôn");});
test("rhubarbe -> rhubarb", function() {deepEqual( Stem("rhubarbe"), "rhubarb");});
test("rhume -> rhum", function() {deepEqual( Stem("rhume"), "rhum");});
test("ri -> ri", function() {deepEqual( Stem("ri"), "ri");});
test("riaient -> ri", function() {deepEqual( Stem("riaient"), "ri");});
test("riais -> ri", function() {deepEqual( Stem("riais"), "ri");});
test("riait -> ri", function() {deepEqual( Stem("riait"), "ri");});
test("riant -> ri", function() {deepEqual( Stem("riant"), "ri");});
test("riante -> ri", function() {deepEqual( Stem("riante"), "ri");});
test("riants -> ri", function() {deepEqual( Stem("riants"), "ri");});
test("ricanant -> rican", function() {deepEqual( Stem("ricanant"), "rican");});
test("ricanement -> rican", function() {deepEqual( Stem("ricanement"), "rican");});
test("ricciarda -> ricciard", function() {deepEqual( Stem("ricciarda"), "ricciard");});
test("richards -> richard", function() {deepEqual( Stem("richards"), "richard");});
test("riche -> rich", function() {deepEqual( Stem("riche"), "rich");});
test("richelieu -> richelieu", function() {deepEqual( Stem("richelieu"), "richelieu");});
test("richement -> rich", function() {deepEqual( Stem("richement"), "rich");});
test("richemond -> richemond", function() {deepEqual( Stem("richemond"), "richemond");});
test("riches -> rich", function() {deepEqual( Stem("riches"), "rich");});
test("richesse -> richess", function() {deepEqual( Stem("richesse"), "richess");});
test("richesses -> richess", function() {deepEqual( Stem("richesses"), "richess");});
test("richissime -> richissim", function() {deepEqual( Stem("richissime"), "richissim");});
test("rideau -> rideau", function() {deepEqual( Stem("rideau"), "rideau");});
test("rideaux -> rideau", function() {deepEqual( Stem("rideaux"), "rideau");});
test("rides -> rid", function() {deepEqual( Stem("rides"), "rid");});
test("ridicule -> ridicul", function() {deepEqual( Stem("ridicule"), "ridicul");});
test("ridicules -> ridicul", function() {deepEqual( Stem("ridicules"), "ridicul");});
test("rie -> ri", function() {deepEqual( Stem("rie"), "ri");});
test("rien -> rien", function() {deepEqual( Stem("rien"), "rien");});
test("riens -> rien", function() {deepEqual( Stem("riens"), "rien");});
test("rient -> rient", function() {deepEqual( Stem("rient"), "rient");});
test("rienzi -> rienz", function() {deepEqual( Stem("rienzi"), "rienz");});
test("rigides -> rigid", function() {deepEqual( Stem("rigides"), "rigid");});
test("rigoureuse -> rigour", function() {deepEqual( Stem("rigoureuse"), "rigour");});
test("rigoureusement -> rigour", function() {deepEqual( Stem("rigoureusement"), "rigour");});
test("rigoureux -> rigour", function() {deepEqual( Stem("rigoureux"), "rigour");});
test("rigueur -> rigueur", function() {deepEqual( Stem("rigueur"), "rigueur");});
test("rigueurs -> rigueur", function() {deepEqual( Stem("rigueurs"), "rigueur");});
test("rimailleur -> rimailleur", function() {deepEqual( Stem("rimailleur"), "rimailleur");});
test("rimes -> rim", function() {deepEqual( Stem("rimes"), "rim");});
test("rios -> rios", function() {deepEqual( Stem("rios"), "rios");});
test("riposta -> ripost", function() {deepEqual( Stem("riposta"), "ripost");});
test("ripostaient -> ripost", function() {deepEqual( Stem("ripostaient"), "ripost");});
test("rire -> rir", function() {deepEqual( Stem("rire"), "rir");});
test("rires -> rir", function() {deepEqual( Stem("rires"), "rir");});
test("ris -> ris", function() {deepEqual( Stem("ris"), "ris");});
test("riscara -> riscar", function() {deepEqual( Stem("riscara"), "riscar");});
test("risqua -> risqu", function() {deepEqual( Stem("risqua"), "risqu");});
test("risquaient -> risqu", function() {deepEqual( Stem("risquaient"), "risqu");});
test("risque -> risqu", function() {deepEqual( Stem("risque"), "risqu");});
test("risqué -> risqu", function() {deepEqual( Stem("risqué"), "risqu");});
test("risquer -> risqu", function() {deepEqual( Stem("risquer"), "risqu");});
test("risquerai -> risqu", function() {deepEqual( Stem("risquerai"), "risqu");});
test("risques -> risqu", function() {deepEqual( Stem("risques"), "risqu");});
test("risquiez -> risqu", function() {deepEqual( Stem("risquiez"), "risqu");});
test("risquons -> risquon", function() {deepEqual( Stem("risquons"), "risquon");});
test("rit -> rit", function() {deepEqual( Stem("rit"), "rit");});
test("rît -> rît", function() {deepEqual( Stem("rît"), "rît");});
test("ritournelle -> ritournel", function() {deepEqual( Stem("ritournelle"), "ritournel");});
test("riva -> riv", function() {deepEqual( Stem("riva"), "riv");});
test("rivage -> rivag", function() {deepEqual( Stem("rivage"), "rivag");});
test("rival -> rival", function() {deepEqual( Stem("rival"), "rival");});
test("rivale -> rival", function() {deepEqual( Stem("rivale"), "rival");});
test("rivales -> rival", function() {deepEqual( Stem("rivales"), "rival");});
test("rivalité -> rival", function() {deepEqual( Stem("rivalité"), "rival");});
test("rivarol -> rivarol", function() {deepEqual( Stem("rivarol"), "rivarol");});
test("rivaux -> rival", function() {deepEqual( Stem("rivaux"), "rival");});
test("rive -> riv", function() {deepEqual( Stem("rive"), "riv");});
test("river -> riv", function() {deepEqual( Stem("river"), "riv");});
test("riverisco -> riverisco", function() {deepEqual( Stem("riverisco"), "riverisco");});
test("rives -> riv", function() {deepEqual( Stem("rives"), "riv");});
test("rivière -> rivi", function() {deepEqual( Stem("rivière"), "rivi");});
test("rivières -> rivi", function() {deepEqual( Stem("rivières"), "rivi");});
test("rivoli -> rivol", function() {deepEqual( Stem("rivoli"), "rivol");});
test("riz -> riz", function() {deepEqual( Stem("riz"), "riz");});
test("rizières -> rizi", function() {deepEqual( Stem("rizières"), "rizi");});
test("road -> road", function() {deepEqual( Stem("road"), "road");});
test("roads -> road", function() {deepEqual( Stem("roads"), "road");});
test("roastbeef -> roastbeef", function() {deepEqual( Stem("roastbeef"), "roastbeef");});
test("robe -> rob", function() {deepEqual( Stem("robe"), "rob");});
test("robert -> robert", function() {deepEqual( Stem("robert"), "robert");});
test("robes -> rob", function() {deepEqual( Stem("robes"), "rob");});
test("robespierre -> robespierr", function() {deepEqual( Stem("robespierre"), "robespierr");});
test("robre -> robr", function() {deepEqual( Stem("robre"), "robr");});
test("robres -> robr", function() {deepEqual( Stem("robres"), "robr");});
test("robuste -> robust", function() {deepEqual( Stem("robuste"), "robust");});
test("robustes -> robust", function() {deepEqual( Stem("robustes"), "robust");});
test("roc -> roc", function() {deepEqual( Stem("roc"), "roc");});
test("roch -> roch", function() {deepEqual( Stem("roch"), "roch");});
test("rocher -> roch", function() {deepEqual( Stem("rocher"), "roch");});
test("rochers -> rocher", function() {deepEqual( Stem("rochers"), "rocher");});
test("roches -> roch", function() {deepEqual( Stem("roches"), "roch");});
test("rocheuses -> rocheux", function() {deepEqual( Stem("rocheuses"), "rocheux");});
test("rock -> rock", function() {deepEqual( Stem("rock"), "rock");});
test("rocky -> rocky", function() {deepEqual( Stem("rocky"), "rocky");});
test("roclin -> roclin", function() {deepEqual( Stem("roclin"), "roclin");});
test("rôdait -> rôd", function() {deepEqual( Stem("rôdait"), "rôd");});
test("rôdant -> rôd", function() {deepEqual( Stem("rôdant"), "rôd");});
test("rôder -> rôd", function() {deepEqual( Stem("rôder"), "rôd");});
test("rogations -> rogat", function() {deepEqual( Stem("rogations"), "rogat");});
test("rogné -> rogn", function() {deepEqual( Stem("rogné"), "rogn");});
test("rognure -> rognur", function() {deepEqual( Stem("rognure"), "rognur");});
test("rogue -> rogu", function() {deepEqual( Stem("rogue"), "rogu");});
test("roguerie -> roguer", function() {deepEqual( Stem("roguerie"), "roguer");});
test("roi -> roi", function() {deepEqual( Stem("roi"), "roi");});
test("rois -> rois", function() {deepEqual( Stem("rois"), "rois");});
test("roiville -> roivill", function() {deepEqual( Stem("roiville"), "roivill");});
test("roland -> roland", function() {deepEqual( Stem("roland"), "roland");});
test("rôle -> rôl", function() {deepEqual( Stem("rôle"), "rôl");});
test("rôles -> rôl", function() {deepEqual( Stem("rôles"), "rôl");});
test("romagnan -> romagnan", function() {deepEqual( Stem("romagnan"), "romagnan");});
test("romagnano -> romagnano", function() {deepEqual( Stem("romagnano"), "romagnano");});
test("romagne -> romagn", function() {deepEqual( Stem("romagne"), "romagn");});
test("romain -> romain", function() {deepEqual( Stem("romain"), "romain");});
test("romaine -> romain", function() {deepEqual( Stem("romaine"), "romain");});
test("romains -> romain", function() {deepEqual( Stem("romains"), "romain");});
test("roman -> roman", function() {deepEqual( Stem("roman"), "roman");});
test("romanesque -> romanesqu", function() {deepEqual( Stem("romanesque"), "romanesqu");});
test("romanesques -> romanesqu", function() {deepEqual( Stem("romanesques"), "romanesqu");});
test("romans -> roman", function() {deepEqual( Stem("romans"), "roman");});
test("rome -> rom", function() {deepEqual( Stem("rome"), "rom");});
test("rompe -> romp", function() {deepEqual( Stem("rompe"), "romp");});
test("rompez -> romp", function() {deepEqual( Stem("rompez"), "romp");});
test("rompit -> romp", function() {deepEqual( Stem("rompit"), "romp");});
test("rompre -> rompr", function() {deepEqual( Stem("rompre"), "rompr");});
test("rompt -> rompt", function() {deepEqual( Stem("rompt"), "rompt");});
test("rompu -> rompu", function() {deepEqual( Stem("rompu"), "rompu");});
test("rompus -> rompus", function() {deepEqual( Stem("rompus"), "rompus");});
test("ronces -> ronc", function() {deepEqual( Stem("ronces"), "ronc");});
test("ronceux -> ronceux", function() {deepEqual( Stem("ronceux"), "ronceux");});
test("rond -> rond", function() {deepEqual( Stem("rond"), "rond");});
test("ronde -> rond", function() {deepEqual( Stem("ronde"), "rond");});
test("rondement -> rond", function() {deepEqual( Stem("rondement"), "rond");});
test("rondes -> rond", function() {deepEqual( Stem("rondes"), "rond");});
test("ronds -> rond", function() {deepEqual( Stem("ronds"), "rond");});
test("ronflait -> ronfl", function() {deepEqual( Stem("ronflait"), "ronfl");});
test("ronflantes -> ronfl", function() {deepEqual( Stem("ronflantes"), "ronfl");});
test("ronfle -> ronfl", function() {deepEqual( Stem("ronfle"), "ronfl");});
test("ronflement -> ronfl", function() {deepEqual( Stem("ronflement"), "ronfl");});
test("ronflements -> ronfl", function() {deepEqual( Stem("ronflements"), "ronfl");});
test("rongeait -> rong", function() {deepEqual( Stem("rongeait"), "rong");});
test("ronsard -> ronsard", function() {deepEqual( Stem("ronsard"), "ronsard");});
test("room -> room", function() {deepEqual( Stem("room"), "room");});
test("rooms -> room", function() {deepEqual( Stem("rooms"), "room");});
test("rose -> ros", function() {deepEqual( Stem("rose"), "ros");});
test("roseau -> roseau", function() {deepEqual( Stem("roseau"), "roseau");});
test("roseaux -> roseau", function() {deepEqual( Stem("roseaux"), "roseau");});
test("rosée -> ros", function() {deepEqual( Stem("rosée"), "ros");});
test("roses -> ros", function() {deepEqual( Stem("roses"), "ros");});
test("rosier -> rosi", function() {deepEqual( Stem("rosier"), "rosi");});
test("rosiers -> rosi", function() {deepEqual( Stem("rosiers"), "rosi");});
test("rosse -> ross", function() {deepEqual( Stem("rosse"), "ross");});
test("rossé -> ross", function() {deepEqual( Stem("rossé"), "ross");});
test("rosses -> ross", function() {deepEqual( Stem("rosses"), "ross");});
test("rossini -> rossin", function() {deepEqual( Stem("rossini"), "rossin");});
test("rothal -> rothal", function() {deepEqual( Stem("rothal"), "rothal");});
test("rothschild -> rothschild", function() {deepEqual( Stem("rothschild"), "rothschild");});
test("rôti -> rôt", function() {deepEqual( Stem("rôti"), "rôt");});
test("rôtie -> rôt", function() {deepEqual( Stem("rôtie"), "rôt");});
test("rôties -> rôt", function() {deepEqual( Stem("rôties"), "rôt");});
test("rotrou -> rotrou", function() {deepEqual( Stem("rotrou"), "rotrou");});
test("roue -> rou", function() {deepEqual( Stem("roue"), "rou");});
test("roué -> rou", function() {deepEqual( Stem("roué"), "rou");});
test("rouer -> rou", function() {deepEqual( Stem("rouer"), "rou");});
test("roueries -> rouer", function() {deepEqual( Stem("roueries"), "rouer");});
test("roues -> rou", function() {deepEqual( Stem("roues"), "rou");});
test("rouffles -> rouffl", function() {deepEqual( Stem("rouffles"), "rouffl");});
test("rouge -> roug", function() {deepEqual( Stem("rouge"), "roug");});
test("rougeâtre -> rougeâtr", function() {deepEqual( Stem("rougeâtre"), "rougeâtr");});
test("rouges -> roug", function() {deepEqual( Stem("rouges"), "roug");});
test("rougeur -> rougeur", function() {deepEqual( Stem("rougeur"), "rougeur");});
test("rougi -> roug", function() {deepEqual( Stem("rougi"), "roug");});
test("rougir -> roug", function() {deepEqual( Stem("rougir"), "roug");});
test("rougira -> roug", function() {deepEqual( Stem("rougira"), "roug");});
test("rougirait -> roug", function() {deepEqual( Stem("rougirait"), "roug");});
test("rougissait -> roug", function() {deepEqual( Stem("rougissait"), "roug");});
test("rougissant -> roug", function() {deepEqual( Stem("rougissant"), "roug");});
test("rougit -> roug", function() {deepEqual( Stem("rougit"), "roug");});
test("rouille -> rouill", function() {deepEqual( Stem("rouille"), "rouill");});
test("rouillé -> rouill", function() {deepEqual( Stem("rouillé"), "rouill");});
test("roula -> roul", function() {deepEqual( Stem("roula"), "roul");});
test("roulaient -> roul", function() {deepEqual( Stem("roulaient"), "roul");});
test("roulait -> roul", function() {deepEqual( Stem("roulait"), "roul");});
test("roulant -> roul", function() {deepEqual( Stem("roulant"), "roul");});
test("roule -> roul", function() {deepEqual( Stem("roule"), "roul");});
test("rouleau -> rouleau", function() {deepEqual( Stem("rouleau"), "rouleau");});
test("roulement -> roul", function() {deepEqual( Stem("roulement"), "roul");});
test("roulèrent -> roul", function() {deepEqual( Stem("roulèrent"), "roul");});
test("roulis -> roul", function() {deepEqual( Stem("roulis"), "roul");});
test("rousseau -> rousseau", function() {deepEqual( Stem("rousseau"), "rousseau");});
test("route -> rout", function() {deepEqual( Stem("route"), "rout");});
test("routes -> rout", function() {deepEqual( Stem("routes"), "rout");});
test("rouvert -> rouvert", function() {deepEqual( Stem("rouvert"), "rouvert");});
test("rouvray -> rouvray", function() {deepEqual( Stem("rouvray"), "rouvray");});
test("rouvrit -> rouvr", function() {deepEqual( Stem("rouvrit"), "rouvr");});
test("rovere -> rover", function() {deepEqual( Stem("rovere"), "rover");});
test("rovère -> rover", function() {deepEqual( Stem("rovère"), "rover");});
test("row -> row", function() {deepEqual( Stem("row"), "row");});
test("rowan -> rowan", function() {deepEqual( Stem("rowan"), "rowan");});
test("royal -> royal", function() {deepEqual( Stem("royal"), "royal");});
test("royale -> royal", function() {deepEqual( Stem("royale"), "royal");});
test("royaliste -> royal", function() {deepEqual( Stem("royaliste"), "royal");});
test("royalistes -> royal", function() {deepEqual( Stem("royalistes"), "royal");});
test("royaume -> royaum", function() {deepEqual( Stem("royaume"), "royaum");});
test("ruban -> ruban", function() {deepEqual( Stem("ruban"), "ruban");});
test("rubempré -> rubempr", function() {deepEqual( Stem("rubempré"), "rubempr");});
test("rubigneau -> rubigneau", function() {deepEqual( Stem("rubigneau"), "rubigneau");});
test("rude -> rud", function() {deepEqual( Stem("rude"), "rud");});
test("rudement -> rud", function() {deepEqual( Stem("rudement"), "rud");});
test("rudes -> rud", function() {deepEqual( Stem("rudes"), "rud");});
test("rudesse -> rudess", function() {deepEqual( Stem("rudesse"), "rudess");});
test("rue -> ru", function() {deepEqual( Stem("rue"), "ru");});
test("rues -> ru", function() {deepEqual( Stem("rues"), "ru");});
test("ruga -> rug", function() {deepEqual( Stem("ruga"), "rug");});
test("rugissements -> rug", function() {deepEqual( Stem("rugissements"), "rug");});
test("ruina -> ruin", function() {deepEqual( Stem("ruina"), "ruin");});
test("ruinait -> ruin", function() {deepEqual( Stem("ruinait"), "ruin");});
test("ruine -> ruin", function() {deepEqual( Stem("ruine"), "ruin");});
test("ruiné -> ruin", function() {deepEqual( Stem("ruiné"), "ruin");});
test("ruinée -> ruin", function() {deepEqual( Stem("ruinée"), "ruin");});
test("ruinées -> ruin", function() {deepEqual( Stem("ruinées"), "ruin");});
test("ruinent -> ruinent", function() {deepEqual( Stem("ruinent"), "ruinent");});
test("ruiner -> ruin", function() {deepEqual( Stem("ruiner"), "ruin");});
test("ruines -> ruin", function() {deepEqual( Stem("ruines"), "ruin");});
test("ruinés -> ruin", function() {deepEqual( Stem("ruinés"), "ruin");});
test("ruineux -> ruineux", function() {deepEqual( Stem("ruineux"), "ruineux");});
test("ruinez -> ruin", function() {deepEqual( Stem("ruinez"), "ruin");});
test("ruisseau -> ruisseau", function() {deepEqual( Stem("ruisseau"), "ruisseau");});
test("ruisseaux -> ruisseau", function() {deepEqual( Stem("ruisseaux"), "ruisseau");});
test("ruminait -> rumin", function() {deepEqual( Stem("ruminait"), "rumin");});
test("ruminants -> rumin", function() {deepEqual( Stem("ruminants"), "rumin");});
test("rupture -> ruptur", function() {deepEqual( Stem("rupture"), "ruptur");});
test("rus -> rus", function() {deepEqual( Stem("rus"), "rus");});
test("rusca -> rusc", function() {deepEqual( Stem("rusca"), "rusc");});
test("ruse -> rus", function() {deepEqual( Stem("ruse"), "rus");});
test("rusé -> rus", function() {deepEqual( Stem("rusé"), "rus");});
test("russe -> russ", function() {deepEqual( Stem("russe"), "russ");});
test("russell -> russel", function() {deepEqual( Stem("russell"), "russel");});
test("russes -> russ", function() {deepEqual( Stem("russes"), "russ");});
test("russie -> russ", function() {deepEqual( Stem("russie"), "russ");});
test("s -> s", function() {deepEqual( Stem("s"), "s");});
test("sa -> sa", function() {deepEqual( Stem("sa"), "sa");});
test("sablé -> sabl", function() {deepEqual( Stem("sablé"), "sabl");});
test("sablées -> sabl", function() {deepEqual( Stem("sablées"), "sabl");});
test("sabre -> sabr", function() {deepEqual( Stem("sabre"), "sabr");});
test("sabré -> sabr", function() {deepEqual( Stem("sabré"), "sabr");});
test("sabrer -> sabr", function() {deepEqual( Stem("sabrer"), "sabr");});
test("sabres -> sabr", function() {deepEqual( Stem("sabres"), "sabr");});
test("sabrés -> sabr", function() {deepEqual( Stem("sabrés"), "sabr");});
test("sac -> sac", function() {deepEqual( Stem("sac"), "sac");});
test("sacca -> sacc", function() {deepEqual( Stem("sacca"), "sacc");});
test("saccadés -> saccad", function() {deepEqual( Stem("saccadés"), "saccad");});
test("sachant -> sach", function() {deepEqual( Stem("sachant"), "sach");});
test("sache -> sach", function() {deepEqual( Stem("sache"), "sach");});
test("saches -> sach", function() {deepEqual( Stem("saches"), "sach");});
test("sachez -> sach", function() {deepEqual( Stem("sachez"), "sach");});
test("sachiez -> sach", function() {deepEqual( Stem("sachiez"), "sach");});
test("sachons -> sachon", function() {deepEqual( Stem("sachons"), "sachon");});
test("sacramentelle -> sacramentel", function() {deepEqual( Stem("sacramentelle"), "sacramentel");});
test("sacramento -> sacramento", function() {deepEqual( Stem("sacramento"), "sacramento");});
test("sacre -> sacr", function() {deepEqual( Stem("sacre"), "sacr");});
test("sacré -> sacr", function() {deepEqual( Stem("sacré"), "sacr");});
test("sacrédié -> sacrédi", function() {deepEqual( Stem("sacrédié"), "sacrédi");});
test("sacrée -> sacr", function() {deepEqual( Stem("sacrée"), "sacr");});
test("sacrées -> sacr", function() {deepEqual( Stem("sacrées"), "sacr");});
test("sacrement -> sacr", function() {deepEqual( Stem("sacrement"), "sacr");});
test("sacrements -> sacr", function() {deepEqual( Stem("sacrements"), "sacr");});
test("sacrés -> sacr", function() {deepEqual( Stem("sacrés"), "sacr");});
test("sacrifiait -> sacrifi", function() {deepEqual( Stem("sacrifiait"), "sacrifi");});
test("sacrifiant -> sacrifi", function() {deepEqual( Stem("sacrifiant"), "sacrifi");});
test("sacrifice -> sacrific", function() {deepEqual( Stem("sacrifice"), "sacrific");});
test("sacrifices -> sacrific", function() {deepEqual( Stem("sacrifices"), "sacrific");});
test("sacrifie -> sacrif", function() {deepEqual( Stem("sacrifie"), "sacrif");});
test("sacrifié -> sacrifi", function() {deepEqual( Stem("sacrifié"), "sacrifi");});
test("sacrifiées -> sacrifi", function() {deepEqual( Stem("sacrifiées"), "sacrifi");});
test("sacrifier -> sacrifi", function() {deepEqual( Stem("sacrifier"), "sacrifi");});
test("sacrifierait -> sacrifi", function() {deepEqual( Stem("sacrifierait"), "sacrifi");});
test("sacrifiés -> sacrifi", function() {deepEqual( Stem("sacrifiés"), "sacrifi");});
test("sacrifiez -> sacrif", function() {deepEqual( Stem("sacrifiez"), "sacrif");});
test("sacrilège -> sacrileg", function() {deepEqual( Stem("sacrilège"), "sacrileg");});
test("sacristie -> sacrist", function() {deepEqual( Stem("sacristie"), "sacrist");});
test("saddle -> saddl", function() {deepEqual( Stem("saddle"), "saddl");});
test("sagacité -> sagac", function() {deepEqual( Stem("sagacité"), "sagac");});
test("sage -> sag", function() {deepEqual( Stem("sage"), "sag");});
test("sagement -> sag", function() {deepEqual( Stem("sagement"), "sag");});
test("sages -> sag", function() {deepEqual( Stem("sages"), "sag");});
test("sagesse -> sagess", function() {deepEqual( Stem("sagesse"), "sagess");});
test("sagoutiers -> sagouti", function() {deepEqual( Stem("sagoutiers"), "sagouti");});
test("saïd -> saïd", function() {deepEqual( Stem("saïd"), "saïd");});
test("saigna -> saign", function() {deepEqual( Stem("saigna"), "saign");});
test("saignait -> saign", function() {deepEqual( Stem("saignait"), "saign");});
test("saigné -> saign", function() {deepEqual( Stem("saigné"), "saign");});
test("saignées -> saign", function() {deepEqual( Stem("saignées"), "saign");});
test("saigner -> saign", function() {deepEqual( Stem("saigner"), "saign");});
test("saillant -> saill", function() {deepEqual( Stem("saillant"), "saill");});
test("saillante -> saill", function() {deepEqual( Stem("saillante"), "saill");});
test("saillantes -> saill", function() {deepEqual( Stem("saillantes"), "saill");});
test("saillants -> saill", function() {deepEqual( Stem("saillants"), "saill");});
test("saillie -> saill", function() {deepEqual( Stem("saillie"), "saill");});
test("saillies -> saill", function() {deepEqual( Stem("saillies"), "saill");});
test("sain -> sain", function() {deepEqual( Stem("sain"), "sain");});
test("sainclair -> sainclair", function() {deepEqual( Stem("sainclair"), "sainclair");});
test("saine -> sain", function() {deepEqual( Stem("saine"), "sain");});
test("sains -> sain", function() {deepEqual( Stem("sains"), "sain");});
test("saint -> saint", function() {deepEqual( Stem("saint"), "saint");});
test("sainte -> saint", function() {deepEqual( Stem("sainte"), "saint");});
test("saintes -> saint", function() {deepEqual( Stem("saintes"), "saint");});
test("sainteté -> saintet", function() {deepEqual( Stem("sainteté"), "saintet");});
test("saints -> saint", function() {deepEqual( Stem("saints"), "saint");});
test("sais -> sais", function() {deepEqual( Stem("sais"), "sais");});
test("saisi -> sais", function() {deepEqual( Stem("saisi"), "sais");});
test("saisie -> sais", function() {deepEqual( Stem("saisie"), "sais");});
test("saisines -> saisin", function() {deepEqual( Stem("saisines"), "saisin");});
test("saisir -> sais", function() {deepEqual( Stem("saisir"), "sais");});
test("saisirais -> sais", function() {deepEqual( Stem("saisirais"), "sais");});
test("saisirent -> sais", function() {deepEqual( Stem("saisirent"), "sais");});
test("saisis -> sais", function() {deepEqual( Stem("saisis"), "sais");});
test("saisissait -> sais", function() {deepEqual( Stem("saisissait"), "sais");});
test("saisissant -> sais", function() {deepEqual( Stem("saisissant"), "sais");});
test("saisissante -> sais", function() {deepEqual( Stem("saisissante"), "sais");});
test("saisissement -> sais", function() {deepEqual( Stem("saisissement"), "sais");});
test("saisissez -> sais", function() {deepEqual( Stem("saisissez"), "sais");});
test("saisit -> sais", function() {deepEqual( Stem("saisit"), "sais");});
test("saisîtes -> sais", function() {deepEqual( Stem("saisîtes"), "sais");});
test("saison -> saison", function() {deepEqual( Stem("saison"), "saison");});
test("sait -> sait", function() {deepEqual( Stem("sait"), "sait");});
test("saki -> sak", function() {deepEqual( Stem("saki"), "sak");});
test("salaire -> salair", function() {deepEqual( Stem("salaire"), "salair");});
test("salanganes -> salangan", function() {deepEqual( Stem("salanganes"), "salangan");});
test("salcette -> salcet", function() {deepEqual( Stem("salcette"), "salcet");});
test("sale -> sal", function() {deepEqual( Stem("sale"), "sal");});
test("salé -> sal", function() {deepEqual( Stem("salé"), "sal");});
test("salement -> sal", function() {deepEqual( Stem("salement"), "sal");});
test("sales -> sal", function() {deepEqual( Stem("sales"), "sal");});
test("saleté -> salet", function() {deepEqual( Stem("saleté"), "salet");});
test("salis -> sal", function() {deepEqual( Stem("salis"), "sal");});
test("salle -> sall", function() {deepEqual( Stem("salle"), "sall");});
test("salles -> sall", function() {deepEqual( Stem("salles"), "sall");});
test("salomon -> salomon", function() {deepEqual( Stem("salomon"), "salomon");});
test("salon -> salon", function() {deepEqual( Stem("salon"), "salon");});
test("salons -> salon", function() {deepEqual( Stem("salons"), "salon");});
test("salt -> salt", function() {deepEqual( Stem("salt"), "salt");});
test("saltimbanques -> saltimbanqu", function() {deepEqual( Stem("saltimbanques"), "saltimbanqu");});
test("salua -> salu", function() {deepEqual( Stem("salua"), "salu");});
test("saluaient -> salu", function() {deepEqual( Stem("saluaient"), "salu");});
test("saluait -> salu", function() {deepEqual( Stem("saluait"), "salu");});
test("saluant -> salu", function() {deepEqual( Stem("saluant"), "salu");});
test("salue -> salu", function() {deepEqual( Stem("salue"), "salu");});
test("salué -> salu", function() {deepEqual( Stem("salué"), "salu");});
test("saluer -> salu", function() {deepEqual( Stem("saluer"), "salu");});
test("saluèrent -> salu", function() {deepEqual( Stem("saluèrent"), "salu");});
test("salure -> salur", function() {deepEqual( Stem("salure"), "salur");});
test("salut -> salut", function() {deepEqual( Stem("salut"), "salut");});
test("salutaire -> salutair", function() {deepEqual( Stem("salutaire"), "salutair");});
test("samedi -> samed", function() {deepEqual( Stem("samedi"), "samed");});
test("samedis -> samed", function() {deepEqual( Stem("samedis"), "samed");});
test("samuel -> samuel", function() {deepEqual( Stem("samuel"), "samuel");});
test("san -> san", function() {deepEqual( Stem("san"), "san");});
test("sancho -> sancho", function() {deepEqual( Stem("sancho"), "sancho");});
test("sanctifie -> sanctif", function() {deepEqual( Stem("sanctifie"), "sanctif");});
test("sanctuaire -> sanctuair", function() {deepEqual( Stem("sanctuaire"), "sanctuair");});
test("sanctus -> sanctus", function() {deepEqual( Stem("sanctus"), "sanctus");});
test("sandales -> sandal", function() {deepEqual( Stem("sandales"), "sandal");});
test("sandolaro -> sandolaro", function() {deepEqual( Stem("sandolaro"), "sandolaro");});
test("sandrino -> sandrino", function() {deepEqual( Stem("sandrino"), "sandrino");});
test("sandy -> sandy", function() {deepEqual( Stem("sandy"), "sandy");});
test("sang -> sang", function() {deepEqual( Stem("sang"), "sang");});
test("sanglant -> sangl", function() {deepEqual( Stem("sanglant"), "sangl");});
test("sanglante -> sangl", function() {deepEqual( Stem("sanglante"), "sangl");});
test("sanglier -> sangli", function() {deepEqual( Stem("sanglier"), "sangli");});
test("sanglot -> sanglot", function() {deepEqual( Stem("sanglot"), "sanglot");});
test("sanglotaient -> sanglot", function() {deepEqual( Stem("sanglotaient"), "sanglot");});
test("sanglotant -> sanglot", function() {deepEqual( Stem("sanglotant"), "sanglot");});
test("sanglots -> sanglot", function() {deepEqual( Stem("sanglots"), "sanglot");});
test("sangsues -> sangsu", function() {deepEqual( Stem("sangsues"), "sangsu");});
test("sanguigna -> sanguign", function() {deepEqual( Stem("sanguigna"), "sanguign");});
test("sanguinaire -> sanguinair", function() {deepEqual( Stem("sanguinaire"), "sanguinair");});
test("sannazaro -> sannazaro", function() {deepEqual( Stem("sannazaro"), "sannazaro");});
test("sans -> san", function() {deepEqual( Stem("sans"), "san");});
test("sanseverina -> sanseverin", function() {deepEqual( Stem("sanseverina"), "sanseverin");});
test("santal -> santal", function() {deepEqual( Stem("santal"), "santal");});
test("santé -> sant", function() {deepEqual( Stem("santé"), "sant");});
test("saper -> sap", function() {deepEqual( Stem("saper"), "sap");});
test("sapin -> sapin", function() {deepEqual( Stem("sapin"), "sapin");});
test("sapins -> sapin", function() {deepEqual( Stem("sapins"), "sapin");});
test("sarà -> sarà", function() {deepEqual( Stem("sarà"), "sarà");});
test("saragosse -> saragoss", function() {deepEqual( Stem("saragosse"), "saragoss");});
test("sarasine -> sarasin", function() {deepEqual( Stem("sarasine"), "sarasin");});
test("sarcasmes -> sarcasm", function() {deepEqual( Stem("sarcasmes"), "sarcasm");});
test("sardonique -> sardon", function() {deepEqual( Stem("sardonique"), "sardon");});
test("sarono -> sarono", function() {deepEqual( Stem("sarono"), "sarono");});
test("sat -> sat", function() {deepEqual( Stem("sat"), "sat");});
test("satiété -> satiet", function() {deepEqual( Stem("satiété"), "satiet");});
test("satin -> satin", function() {deepEqual( Stem("satin"), "satin");});
test("satirique -> satir", function() {deepEqual( Stem("satirique"), "satir");});
test("satiriques -> satir", function() {deepEqual( Stem("satiriques"), "satir");});
test("satisfaction -> satisfact", function() {deepEqual( Stem("satisfaction"), "satisfact");});
test("satisfaire -> satisfair", function() {deepEqual( Stem("satisfaire"), "satisfair");});
test("satisfaisant -> satisfais", function() {deepEqual( Stem("satisfaisant"), "satisfais");});
test("satisfait -> satisf", function() {deepEqual( Stem("satisfait"), "satisf");});
test("satisfera -> satisf", function() {deepEqual( Stem("satisfera"), "satisf");});
test("saturaient -> satur", function() {deepEqual( Stem("saturaient"), "satur");});
test("saturée -> satur", function() {deepEqual( Stem("saturée"), "satur");});
test("sauce -> sauc", function() {deepEqual( Stem("sauce"), "sauc");});
test("saucisses -> sauc", function() {deepEqual( Stem("saucisses"), "sauc");});
test("sauders -> sauder", function() {deepEqual( Stem("sauders"), "sauder");});
test("sauf -> sauf", function() {deepEqual( Stem("sauf"), "sauf");});
test("saugrenues -> saugrenu", function() {deepEqual( Stem("saugrenues"), "saugrenu");});
test("saule -> saul", function() {deepEqual( Stem("saule"), "saul");});
test("saules -> saul", function() {deepEqual( Stem("saules"), "saul");});
test("saura -> saur", function() {deepEqual( Stem("saura"), "saur");});
test("saurai -> saur", function() {deepEqual( Stem("saurai"), "saur");});
test("sauraient -> saur", function() {deepEqual( Stem("sauraient"), "saur");});
test("saurais -> saur", function() {deepEqual( Stem("saurais"), "saur");});
test("saurait -> saur", function() {deepEqual( Stem("saurait"), "saur");});
test("saurez -> saur", function() {deepEqual( Stem("saurez"), "saur");});
test("sauriez -> saur", function() {deepEqual( Stem("sauriez"), "saur");});
test("saurons -> sauron", function() {deepEqual( Stem("saurons"), "sauron");});
test("sauront -> sauront", function() {deepEqual( Stem("sauront"), "sauront");});
test("saut -> saut", function() {deepEqual( Stem("saut"), "saut");});
test("sauta -> saut", function() {deepEqual( Stem("sauta"), "saut");});
test("sautait -> saut", function() {deepEqual( Stem("sautait"), "saut");});
test("sautant -> saut", function() {deepEqual( Stem("sautant"), "saut");});
test("saute -> saut", function() {deepEqual( Stem("saute"), "saut");});
test("sauté -> saut", function() {deepEqual( Stem("sauté"), "saut");});
test("sauter -> saut", function() {deepEqual( Stem("sauter"), "saut");});
test("sauterai -> saut", function() {deepEqual( Stem("sauterai"), "saut");});
test("sauterait -> saut", function() {deepEqual( Stem("sauterait"), "saut");});
test("sautèrent -> saut", function() {deepEqual( Stem("sautèrent"), "saut");});
test("sautés -> saut", function() {deepEqual( Stem("sautés"), "saut");});
test("sauteur -> sauteur", function() {deepEqual( Stem("sauteur"), "sauteur");});
test("sauteuse -> sauteux", function() {deepEqual( Stem("sauteuse"), "sauteux");});
test("sautillant -> sautill", function() {deepEqual( Stem("sautillant"), "sautill");});
test("sautoir -> sautoir", function() {deepEqual( Stem("sautoir"), "sautoir");});
test("sauts -> saut", function() {deepEqual( Stem("sauts"), "saut");});
test("sauva -> sauv", function() {deepEqual( Stem("sauva"), "sauv");});
test("sauvage -> sauvag", function() {deepEqual( Stem("sauvage"), "sauvag");});
test("sauvages -> sauvag", function() {deepEqual( Stem("sauvages"), "sauvag");});
test("sauvait -> sauv", function() {deepEqual( Stem("sauvait"), "sauv");});
test("sauvant -> sauv", function() {deepEqual( Stem("sauvant"), "sauv");});
test("sauve -> sauv", function() {deepEqual( Stem("sauve"), "sauv");});
test("sauvé -> sauv", function() {deepEqual( Stem("sauvé"), "sauv");});
test("sauvée -> sauv", function() {deepEqual( Stem("sauvée"), "sauv");});
test("sauvegarder -> sauvegard", function() {deepEqual( Stem("sauvegarder"), "sauvegard");});
test("sauvent -> sauvent", function() {deepEqual( Stem("sauvent"), "sauvent");});
test("sauver -> sauv", function() {deepEqual( Stem("sauver"), "sauv");});
test("sauvera -> sauv", function() {deepEqual( Stem("sauvera"), "sauv");});
test("sauverai -> sauv", function() {deepEqual( Stem("sauverai"), "sauv");});
test("sauveraient -> sauv", function() {deepEqual( Stem("sauveraient"), "sauv");});
test("sauveront -> sauv", function() {deepEqual( Stem("sauveront"), "sauv");});
test("sauvés -> sauv", function() {deepEqual( Stem("sauvés"), "sauv");});
test("sauveur -> sauveur", function() {deepEqual( Stem("sauveur"), "sauveur");});
test("sauveurs -> sauveur", function() {deepEqual( Stem("sauveurs"), "sauveur");});
test("sauvez -> sauv", function() {deepEqual( Stem("sauvez"), "sauv");});
test("sauvions -> sauvion", function() {deepEqual( Stem("sauvions"), "sauvion");});
test("sauvons -> sauvon", function() {deepEqual( Stem("sauvons"), "sauvon");});
test("savaient -> sav", function() {deepEqual( Stem("savaient"), "sav");});
test("savais -> sav", function() {deepEqual( Stem("savais"), "sav");});
test("savait -> sav", function() {deepEqual( Stem("savait"), "sav");});
test("savamment -> sav", function() {deepEqual( Stem("savamment"), "sav");});
test("savant -> sav", function() {deepEqual( Stem("savant"), "sav");});
test("savante -> sav", function() {deepEqual( Stem("savante"), "sav");});
test("savantes -> sav", function() {deepEqual( Stem("savantes"), "sav");});
test("savants -> sav", function() {deepEqual( Stem("savants"), "sav");});
test("savent -> savent", function() {deepEqual( Stem("savent"), "savent");});
test("saveur -> saveur", function() {deepEqual( Stem("saveur"), "saveur");});
test("savez -> sav", function() {deepEqual( Stem("savez"), "sav");});
test("saviez -> sav", function() {deepEqual( Stem("saviez"), "sav");});
test("saville -> savill", function() {deepEqual( Stem("saville"), "savill");});
test("savoir -> savoir", function() {deepEqual( Stem("savoir"), "savoir");});
test("savons -> savon", function() {deepEqual( Stem("savons"), "savon");});
test("saxe -> sax", function() {deepEqual( Stem("saxe"), "sax");});
test("saxon -> saxon", function() {deepEqual( Stem("saxon"), "saxon");});
test("saxons -> saxon", function() {deepEqual( Stem("saxons"), "saxon");});
test("sbires -> sbir", function() {deepEqual( Stem("sbires"), "sbir");});
test("scabreuses -> scabreux", function() {deepEqual( Stem("scabreuses"), "scabreux");});
test("scabreux -> scabreux", function() {deepEqual( Stem("scabreux"), "scabreux");});
test("scagliola -> scagliol", function() {deepEqual( Stem("scagliola"), "scagliol");});
test("scala -> scal", function() {deepEqual( Stem("scala"), "scal");});
test("scalpent -> scalpent", function() {deepEqual( Stem("scalpent"), "scalpent");});
test("scandale -> scandal", function() {deepEqual( Stem("scandale"), "scandal");});
test("scandaleuse -> scandal", function() {deepEqual( Stem("scandaleuse"), "scandal");});
test("scandalisaient -> scandalis", function() {deepEqual( Stem("scandalisaient"), "scandalis");});
test("scandalisé -> scandalis", function() {deepEqual( Stem("scandalisé"), "scandalis");});
test("scandalisée -> scandalis", function() {deepEqual( Stem("scandalisée"), "scandalis");});
test("scandalisera -> scandalis", function() {deepEqual( Stem("scandalisera"), "scandalis");});
test("scandalisés -> scandalis", function() {deepEqual( Stem("scandalisés"), "scandalis");});
test("scandinavie -> scandinav", function() {deepEqual( Stem("scandinavie"), "scandinav");});
test("sceau -> sceau", function() {deepEqual( Stem("sceau"), "sceau");});
test("sceaux -> sceau", function() {deepEqual( Stem("sceaux"), "sceau");});
test("scélérat -> scélérat", function() {deepEqual( Stem("scélérat"), "scélérat");});
test("scélératesse -> scélératess", function() {deepEqual( Stem("scélératesse"), "scélératess");});
test("scélérats -> scélérat", function() {deepEqual( Stem("scélérats"), "scélérat");});
test("scellé -> scel", function() {deepEqual( Stem("scellé"), "scel");});
test("scène -> scen", function() {deepEqual( Stem("scène"), "scen");});
test("scènes -> scen", function() {deepEqual( Stem("scènes"), "scen");});
test("schiller -> schill", function() {deepEqual( Stem("schiller"), "schill");});
test("schuyler -> schuyl", function() {deepEqual( Stem("schuyler"), "schuyl");});
test("sciant -> sci", function() {deepEqual( Stem("sciant"), "sci");});
test("scie -> sci", function() {deepEqual( Stem("scie"), "sci");});
test("scié -> sci", function() {deepEqual( Stem("scié"), "sci");});
test("sciemment -> scient", function() {deepEqual( Stem("sciemment"), "scient");});
test("science -> scienc", function() {deepEqual( Stem("science"), "scienc");});
test("sciences -> scienc", function() {deepEqual( Stem("sciences"), "scienc");});
test("scier -> sci", function() {deepEqual( Stem("scier"), "sci");});
test("scierie -> scier", function() {deepEqual( Stem("scierie"), "scier");});
test("scies -> sci", function() {deepEqual( Stem("scies"), "sci");});
test("scieur -> scieur", function() {deepEqual( Stem("scieur"), "scieur");});
test("scintillants -> scintill", function() {deepEqual( Stem("scintillants"), "scintill");});
test("scintillations -> scintill", function() {deepEqual( Stem("scintillations"), "scintill");});
test("scotland -> scotland", function() {deepEqual( Stem("scotland"), "scotland");});
test("scott -> scott", function() {deepEqual( Stem("scott"), "scott");});
test("scotti -> scott", function() {deepEqual( Stem("scotti"), "scott");});
test("scrupule -> scrupul", function() {deepEqual( Stem("scrupule"), "scrupul");});
test("scrupules -> scrupul", function() {deepEqual( Stem("scrupules"), "scrupul");});
test("scrupuleuse -> scrupul", function() {deepEqual( Stem("scrupuleuse"), "scrupul");});
test("scrupuleusement -> scrupul", function() {deepEqual( Stem("scrupuleusement"), "scrupul");});
test("scrutateur -> scrutateur", function() {deepEqual( Stem("scrutateur"), "scrutateur");});
test("sculptée -> sculpt", function() {deepEqual( Stem("sculptée"), "sculpt");});
test("sculptées -> sculpt", function() {deepEqual( Stem("sculptées"), "sculpt");});
test("sculptés -> sculpt", function() {deepEqual( Stem("sculptés"), "sculpt");});
test("sculpteur -> sculpteur", function() {deepEqual( Stem("sculpteur"), "sculpteur");});
test("sculpteurs -> sculpteur", function() {deepEqual( Stem("sculpteurs"), "sculpteur");});
test("se -> se", function() {deepEqual( Stem("se"), "se");});
test("séance -> séanc", function() {deepEqual( Stem("séance"), "séanc");});
test("sec -> sec", function() {deepEqual( Stem("sec"), "sec");});
test("secatore -> secator", function() {deepEqual( Stem("secatore"), "secator");});
test("sèche -> sech", function() {deepEqual( Stem("sèche"), "sech");});
test("séché -> sech", function() {deepEqual( Stem("séché"), "sech");});
test("séchée -> sech", function() {deepEqual( Stem("séchée"), "sech");});
test("sèchement -> sech", function() {deepEqual( Stem("sèchement"), "sech");});
test("sécher -> sech", function() {deepEqual( Stem("sécher"), "sech");});
test("sécheresse -> sécheress", function() {deepEqual( Stem("sécheresse"), "sécheress");});
test("sèches -> sech", function() {deepEqual( Stem("sèches"), "sech");});
test("second -> second", function() {deepEqual( Stem("second"), "second");});
test("secondaient -> second", function() {deepEqual( Stem("secondaient"), "second");});
test("seconde -> second", function() {deepEqual( Stem("seconde"), "second");});
test("secondé -> second", function() {deepEqual( Stem("secondé"), "second");});
test("secondent -> secondent", function() {deepEqual( Stem("secondent"), "secondent");});
test("seconderait -> second", function() {deepEqual( Stem("seconderait"), "second");});
test("secondes -> second", function() {deepEqual( Stem("secondes"), "second");});
test("secoua -> secou", function() {deepEqual( Stem("secoua"), "secou");});
test("secouaient -> secou", function() {deepEqual( Stem("secouaient"), "secou");});
test("secouait -> secou", function() {deepEqual( Stem("secouait"), "secou");});
test("secouant -> secou", function() {deepEqual( Stem("secouant"), "secou");});
test("secoue -> secou", function() {deepEqual( Stem("secoue"), "secou");});
test("secouée -> secou", function() {deepEqual( Stem("secouée"), "secou");});
test("secoués -> secou", function() {deepEqual( Stem("secoués"), "secou");});
test("secourable -> secour", function() {deepEqual( Stem("secourable"), "secour");});
test("secourez -> secour", function() {deepEqual( Stem("secourez"), "secour");});
test("secourir -> secour", function() {deepEqual( Stem("secourir"), "secour");});
test("secours -> secour", function() {deepEqual( Stem("secours"), "secour");});
test("secouru -> secouru", function() {deepEqual( Stem("secouru"), "secouru");});
test("secousse -> secouss", function() {deepEqual( Stem("secousse"), "secouss");});
test("secousses -> secouss", function() {deepEqual( Stem("secousses"), "secouss");});
test("secret -> secret", function() {deepEqual( Stem("secret"), "secret");});
test("secrétaire -> secrétair", function() {deepEqual( Stem("secrétaire"), "secrétair");});
test("secrétaires -> secrétair", function() {deepEqual( Stem("secrétaires"), "secrétair");});
test("secrète -> secret", function() {deepEqual( Stem("secrète"), "secret");});
test("secrètement -> secret", function() {deepEqual( Stem("secrètement"), "secret");});
test("secrètes -> secret", function() {deepEqual( Stem("secrètes"), "secret");});
test("secrets -> secret", function() {deepEqual( Stem("secrets"), "secret");});
test("secs -> sec", function() {deepEqual( Stem("secs"), "sec");});
test("sectaire -> sectair", function() {deepEqual( Stem("sectaire"), "sectair");});
test("sectateur -> sectateur", function() {deepEqual( Stem("sectateur"), "sectateur");});
test("sectateurs -> sectateur", function() {deepEqual( Stem("sectateurs"), "sectateur");});
test("secte -> sect", function() {deepEqual( Stem("secte"), "sect");});
test("section -> section", function() {deepEqual( Stem("section"), "section");});
test("séculaires -> séculair", function() {deepEqual( Stem("séculaires"), "séculair");});
test("secundo -> secundo", function() {deepEqual( Stem("secundo"), "secundo");});
test("sécurité -> sécur", function() {deepEqual( Stem("sécurité"), "sécur");});
test("sédentaire -> sédentair", function() {deepEqual( Stem("sédentaire"), "sédentair");});
test("sedgwick -> sedgwick", function() {deepEqual( Stem("sedgwick"), "sedgwick");});
test("sediola -> sediol", function() {deepEqual( Stem("sediola"), "sediol");});
test("séditieuse -> séditi", function() {deepEqual( Stem("séditieuse"), "séditi");});
test("séditieux -> séditi", function() {deepEqual( Stem("séditieux"), "séditi");});
test("sédition -> sédit", function() {deepEqual( Stem("sédition"), "sédit");});
test("séducteur -> séducteur", function() {deepEqual( Stem("séducteur"), "séducteur");});
test("séduction -> séduct", function() {deepEqual( Stem("séduction"), "séduct");});
test("séductions -> séduct", function() {deepEqual( Stem("séductions"), "séduct");});
test("séduire -> séduir", function() {deepEqual( Stem("séduire"), "séduir");});
test("séduisait -> séduis", function() {deepEqual( Stem("séduisait"), "séduis");});
test("séduisant -> séduis", function() {deepEqual( Stem("séduisant"), "séduis");});
test("séduisante -> séduis", function() {deepEqual( Stem("séduisante"), "séduis");});
test("séduisants -> séduis", function() {deepEqual( Stem("séduisants"), "séduis");});
test("séduit -> séduit", function() {deepEqual( Stem("séduit"), "séduit");});
test("séduite -> séduit", function() {deepEqual( Stem("séduite"), "séduit");});
test("séduits -> séduit", function() {deepEqual( Stem("séduits"), "séduit");});
test("segreto -> segreto", function() {deepEqual( Stem("segreto"), "segreto");});
test("seigneur -> seigneur", function() {deepEqual( Stem("seigneur"), "seigneur");});
test("seigneuries -> seigneur", function() {deepEqual( Stem("seigneuries"), "seigneur");});
test("seigneurs -> seigneur", function() {deepEqual( Stem("seigneurs"), "seigneur");});
test("sein -> sein", function() {deepEqual( Stem("sein"), "sein");});
test("seine -> sein", function() {deepEqual( Stem("seine"), "sein");});
test("seize -> seiz", function() {deepEqual( Stem("seize"), "seiz");});
test("séjour -> séjour", function() {deepEqual( Stem("séjour"), "séjour");});
test("séjournait -> séjourn", function() {deepEqual( Stem("séjournait"), "séjourn");});
test("séjournât -> séjourn", function() {deepEqual( Stem("séjournât"), "séjourn");});
test("séjourner -> séjourn", function() {deepEqual( Stem("séjourner"), "séjourn");});
test("sel -> sel", function() {deepEqual( Stem("sel"), "sel");});
test("sella -> sel", function() {deepEqual( Stem("sella"), "sel");});
test("selle -> sel", function() {deepEqual( Stem("selle"), "sel");});
test("sellé -> sel", function() {deepEqual( Stem("sellé"), "sel");});
test("sellette -> sellet", function() {deepEqual( Stem("sellette"), "sellet");});
test("selon -> selon", function() {deepEqual( Stem("selon"), "selon");});
test("sema -> sem", function() {deepEqual( Stem("sema"), "sem");});
test("semaine -> semain", function() {deepEqual( Stem("semaine"), "semain");});
test("semaines -> semain", function() {deepEqual( Stem("semaines"), "semain");});
test("sembla -> sembl", function() {deepEqual( Stem("sembla"), "sembl");});
test("semblable -> semblabl", function() {deepEqual( Stem("semblable"), "semblabl");});
test("semblables -> semblabl", function() {deepEqual( Stem("semblables"), "semblabl");});
test("semblaient -> sembl", function() {deepEqual( Stem("semblaient"), "sembl");});
test("semblait -> sembl", function() {deepEqual( Stem("semblait"), "sembl");});
test("semblant -> sembl", function() {deepEqual( Stem("semblant"), "sembl");});
test("semblât -> sembl", function() {deepEqual( Stem("semblât"), "sembl");});
test("semble -> sembl", function() {deepEqual( Stem("semble"), "sembl");});
test("semblé -> sembl", function() {deepEqual( Stem("semblé"), "sembl");});
test("semblent -> semblent", function() {deepEqual( Stem("semblent"), "semblent");});
test("sembler -> sembl", function() {deepEqual( Stem("sembler"), "sembl");});
test("semblera -> sembl", function() {deepEqual( Stem("semblera"), "sembl");});
test("semblerait -> sembl", function() {deepEqual( Stem("semblerait"), "sembl");});
test("semblèrent -> sembl", function() {deepEqual( Stem("semblèrent"), "sembl");});
test("semblez -> sembl", function() {deepEqual( Stem("semblez"), "sembl");});
test("sème -> sem", function() {deepEqual( Stem("sème"), "sem");});
test("semé -> sem", function() {deepEqual( Stem("semé"), "sem");});
test("semée -> sem", function() {deepEqual( Stem("semée"), "sem");});
test("semées -> sem", function() {deepEqual( Stem("semées"), "sem");});
test("semelle -> semel", function() {deepEqual( Stem("semelle"), "semel");});
test("semelles -> semel", function() {deepEqual( Stem("semelles"), "semel");});
test("semer -> sem", function() {deepEqual( Stem("semer"), "sem");});
test("semés -> sem", function() {deepEqual( Stem("semés"), "sem");});
test("semez -> sem", function() {deepEqual( Stem("semez"), "sem");});
test("semi -> sem", function() {deepEqual( Stem("semi"), "sem");});
test("sémillant -> sémill", function() {deepEqual( Stem("sémillant"), "sémill");});
test("sémillante -> sémill", function() {deepEqual( Stem("sémillante"), "sémill");});
test("séminaire -> séminair", function() {deepEqual( Stem("séminaire"), "séminair");});
test("séminariste -> séminar", function() {deepEqual( Stem("séminariste"), "séminar");});
test("séminaristes -> séminar", function() {deepEqual( Stem("séminaristes"), "séminar");});
test("sempans -> sempan", function() {deepEqual( Stem("sempans"), "sempan");});
test("sens -> sen", function() {deepEqual( Stem("sens"), "sen");});
test("sensation -> sensat", function() {deepEqual( Stem("sensation"), "sensat");});
test("sensations -> sensat", function() {deepEqual( Stem("sensations"), "sensat");});
test("sensée -> sens", function() {deepEqual( Stem("sensée"), "sens");});
test("sensés -> sens", function() {deepEqual( Stem("sensés"), "sens");});
test("sensibilité -> sensibil", function() {deepEqual( Stem("sensibilité"), "sensibil");});
test("sensible -> sensibl", function() {deepEqual( Stem("sensible"), "sensibl");});
test("sensiblement -> sensibl", function() {deepEqual( Stem("sensiblement"), "sensibl");});
test("sensibles -> sensibl", function() {deepEqual( Stem("sensibles"), "sensibl");});
test("sent -> sent", function() {deepEqual( Stem("sent"), "sent");});
test("sentaient -> sent", function() {deepEqual( Stem("sentaient"), "sent");});
test("sentais -> sent", function() {deepEqual( Stem("sentais"), "sent");});
test("sentait -> sent", function() {deepEqual( Stem("sentait"), "sent");});
test("sentant -> sent", function() {deepEqual( Stem("sentant"), "sent");});
test("sentence -> sentenc", function() {deepEqual( Stem("sentence"), "sentenc");});
test("sentences -> sentenc", function() {deepEqual( Stem("sentences"), "sentenc");});
test("sentent -> sentent", function() {deepEqual( Stem("sentent"), "sentent");});
test("sentez -> sent", function() {deepEqual( Stem("sentez"), "sent");});
test("senti -> sent", function() {deepEqual( Stem("senti"), "sent");});
test("sentie -> sent", function() {deepEqual( Stem("sentie"), "sent");});
test("sentier -> senti", function() {deepEqual( Stem("sentier"), "senti");});
test("sentiers -> senti", function() {deepEqual( Stem("sentiers"), "senti");});
test("senties -> sent", function() {deepEqual( Stem("senties"), "sent");});
test("sentiment -> sent", function() {deepEqual( Stem("sentiment"), "sent");});
test("sentimentale -> sentimental", function() {deepEqual( Stem("sentimentale"), "sentimental");});
test("sentimentales -> sentimental", function() {deepEqual( Stem("sentimentales"), "sentimental");});
test("sentiments -> sent", function() {deepEqual( Stem("sentiments"), "sent");});
test("sentinelle -> sentinel", function() {deepEqual( Stem("sentinelle"), "sentinel");});
test("sentinelles -> sentinel", function() {deepEqual( Stem("sentinelles"), "sentinel");});
test("sentir -> sent", function() {deepEqual( Stem("sentir"), "sent");});
test("sentira -> sent", function() {deepEqual( Stem("sentira"), "sent");});
test("sentirez -> sent", function() {deepEqual( Stem("sentirez"), "sent");});
test("sentisses -> sent", function() {deepEqual( Stem("sentisses"), "sent");});
test("sentit -> sent", function() {deepEqual( Stem("sentit"), "sent");});
test("sépara -> sépar", function() {deepEqual( Stem("sépara"), "sépar");});
test("séparaient -> sépar", function() {deepEqual( Stem("séparaient"), "sépar");});
test("séparait -> sépar", function() {deepEqual( Stem("séparait"), "sépar");});
test("séparant -> sépar", function() {deepEqual( Stem("séparant"), "sépar");});
test("séparation -> sépar", function() {deepEqual( Stem("séparation"), "sépar");});
test("sépare -> sépar", function() {deepEqual( Stem("sépare"), "sépar");});
test("séparé -> sépar", function() {deepEqual( Stem("séparé"), "sépar");});
test("séparée -> sépar", function() {deepEqual( Stem("séparée"), "sépar");});
test("séparées -> sépar", function() {deepEqual( Stem("séparées"), "sépar");});
test("séparent -> séparent", function() {deepEqual( Stem("séparent"), "séparent");});
test("séparer -> sépar", function() {deepEqual( Stem("séparer"), "sépar");});
test("séparera -> sépar", function() {deepEqual( Stem("séparera"), "sépar");});
test("séparés -> sépar", function() {deepEqual( Stem("séparés"), "sépar");});
test("séparons -> séparon", function() {deepEqual( Stem("séparons"), "séparon");});
test("sept -> sept", function() {deepEqual( Stem("sept"), "sept");});
test("septembre -> septembr", function() {deepEqual( Stem("septembre"), "septembr");});
test("septentrional -> septentrional", function() {deepEqual( Stem("septentrional"), "septentrional");});
test("septentrionale -> septentrional", function() {deepEqual( Stem("septentrionale"), "septentrional");});
test("septentrionales -> septentrional", function() {deepEqual( Stem("septentrionales"), "septentrional");});
test("septième -> septiem", function() {deepEqual( Stem("septième"), "septiem");});
test("sequin -> sequin", function() {deepEqual( Stem("sequin"), "sequin");});
test("sequins -> sequin", function() {deepEqual( Stem("sequins"), "sequin");});
test("sera -> ser", function() {deepEqual( Stem("sera"), "ser");});
test("serai -> ser", function() {deepEqual( Stem("serai"), "ser");});
test("seraient -> ser", function() {deepEqual( Stem("seraient"), "ser");});
test("sérail -> sérail", function() {deepEqual( Stem("sérail"), "sérail");});
test("serais -> ser", function() {deepEqual( Stem("serais"), "ser");});
test("serait -> ser", function() {deepEqual( Stem("serait"), "ser");});
test("seras -> ser", function() {deepEqual( Stem("seras"), "ser");});
test("sérénade -> sérénad", function() {deepEqual( Stem("sérénade"), "sérénad");});
test("sérénades -> sérénad", function() {deepEqual( Stem("sérénades"), "sérénad");});
test("sérénissime -> sérénissim", function() {deepEqual( Stem("sérénissime"), "sérénissim");});
test("sérénité -> séren", function() {deepEqual( Stem("sérénité"), "séren");});
test("serez -> ser", function() {deepEqual( Stem("serez"), "ser");});
test("sergent -> sergent", function() {deepEqual( Stem("sergent"), "sergent");});
test("série -> ser", function() {deepEqual( Stem("série"), "ser");});
test("sérieuse -> sérieux", function() {deepEqual( Stem("sérieuse"), "sérieux");});
test("serieusement -> serieux", function() {deepEqual( Stem("serieusement"), "serieux");});
test("sérieusement -> sérieux", function() {deepEqual( Stem("sérieusement"), "sérieux");});
test("sérieuses -> sérieux", function() {deepEqual( Stem("sérieuses"), "sérieux");});
test("sérieux -> sérieux", function() {deepEqual( Stem("sérieux"), "sérieux");});
test("seriez -> ser", function() {deepEqual( Stem("seriez"), "ser");});
test("serions -> serion", function() {deepEqual( Stem("serions"), "serion");});
test("serious -> serious", function() {deepEqual( Stem("serious"), "serious");});
test("serment -> serment", function() {deepEqual( Stem("serment"), "serment");});
test("serments -> serment", function() {deepEqual( Stem("serments"), "serment");});
test("sermon -> sermon", function() {deepEqual( Stem("sermon"), "sermon");});
test("sermons -> sermon", function() {deepEqual( Stem("sermons"), "sermon");});
test("serons -> seron", function() {deepEqual( Stem("serons"), "seron");});
test("seront -> seront", function() {deepEqual( Stem("seront"), "seront");});
test("serpent -> serpent", function() {deepEqual( Stem("serpent"), "serpent");});
test("serpentent -> serpentent", function() {deepEqual( Stem("serpentent"), "serpentent");});
test("serpents -> serpent", function() {deepEqual( Stem("serpents"), "serpent");});
test("serpolet -> serpolet", function() {deepEqual( Stem("serpolet"), "serpolet");});
test("serra -> serr", function() {deepEqual( Stem("serra"), "serr");});
test("serraient -> serr", function() {deepEqual( Stem("serraient"), "serr");});
test("serrait -> serr", function() {deepEqual( Stem("serrait"), "serr");});
test("serrant -> serr", function() {deepEqual( Stem("serrant"), "serr");});
test("serre -> serr", function() {deepEqual( Stem("serre"), "serr");});
test("serré -> serr", function() {deepEqual( Stem("serré"), "serr");});
test("serrée -> serr", function() {deepEqual( Stem("serrée"), "serr");});
test("serrées -> serr", function() {deepEqual( Stem("serrées"), "serr");});
test("serrements -> serr", function() {deepEqual( Stem("serrements"), "serr");});
test("serrent -> serrent", function() {deepEqual( Stem("serrent"), "serrent");});
test("serrer -> serr", function() {deepEqual( Stem("serrer"), "serr");});
test("serrèrent -> serr", function() {deepEqual( Stem("serrèrent"), "serr");});
test("serres -> serr", function() {deepEqual( Stem("serres"), "serr");});
test("serrés -> serr", function() {deepEqual( Stem("serrés"), "serr");});
test("serrure -> serrur", function() {deepEqual( Stem("serrure"), "serrur");});
test("serrures -> serrur", function() {deepEqual( Stem("serrures"), "serrur");});
test("serrurier -> serruri", function() {deepEqual( Stem("serrurier"), "serruri");});
test("sert -> sert", function() {deepEqual( Stem("sert"), "sert");});
test("servaient -> serv", function() {deepEqual( Stem("servaient"), "serv");});
test("servais -> serv", function() {deepEqual( Stem("servais"), "serv");});
test("servait -> serv", function() {deepEqual( Stem("servait"), "serv");});
test("servant -> serv", function() {deepEqual( Stem("servant"), "serv");});
test("servante -> serv", function() {deepEqual( Stem("servante"), "serv");});
test("serve -> serv", function() {deepEqual( Stem("serve"), "serv");});
test("servent -> servent", function() {deepEqual( Stem("servent"), "servent");});
test("servi -> serv", function() {deepEqual( Stem("servi"), "serv");});
test("serviable -> serviabl", function() {deepEqual( Stem("serviable"), "serviabl");});
test("service -> servic", function() {deepEqual( Stem("service"), "servic");});
test("services -> servic", function() {deepEqual( Stem("services"), "servic");});
test("servie -> serv", function() {deepEqual( Stem("servie"), "serv");});
test("serviettes -> serviet", function() {deepEqual( Stem("serviettes"), "serviet");});
test("servilement -> servil", function() {deepEqual( Stem("servilement"), "servil");});
test("servir -> serv", function() {deepEqual( Stem("servir"), "serv");});
test("servira -> serv", function() {deepEqual( Stem("servira"), "serv");});
test("servirai -> serv", function() {deepEqual( Stem("servirai"), "serv");});
test("serviraient -> serv", function() {deepEqual( Stem("serviraient"), "serv");});
test("servirait -> serv", function() {deepEqual( Stem("servirait"), "serv");});
test("servirez -> serv", function() {deepEqual( Stem("servirez"), "serv");});
test("servis -> serv", function() {deepEqual( Stem("servis"), "serv");});
test("servit -> serv", function() {deepEqual( Stem("servit"), "serv");});
test("serviteur -> serviteur", function() {deepEqual( Stem("serviteur"), "serviteur");});
test("serviteurs -> serviteur", function() {deepEqual( Stem("serviteurs"), "serviteur");});
test("ses -> se", function() {deepEqual( Stem("ses"), "se");});
test("session -> session", function() {deepEqual( Stem("session"), "session");});
test("seuil -> seuil", function() {deepEqual( Stem("seuil"), "seuil");});
test("seul -> seul", function() {deepEqual( Stem("seul"), "seul");});
test("seule -> seul", function() {deepEqual( Stem("seule"), "seul");});
test("seulement -> seul", function() {deepEqual( Stem("seulement"), "seul");});
test("seules -> seul", function() {deepEqual( Stem("seules"), "seul");});
test("seuls -> seul", function() {deepEqual( Stem("seuls"), "seul");});
test("sévère -> séver", function() {deepEqual( Stem("sévère"), "séver");});
test("sévèrement -> séver", function() {deepEqual( Stem("sévèrement"), "séver");});
test("sévères -> séver", function() {deepEqual( Stem("sévères"), "séver");});
test("sévérité -> séver", function() {deepEqual( Stem("sévérité"), "séver");});
test("sévérités -> séver", function() {deepEqual( Stem("sévérités"), "séver");});
test("sexagésimales -> sexagésimal", function() {deepEqual( Stem("sexagésimales"), "sexagésimal");});
test("sexe -> sex", function() {deepEqual( Stem("sexe"), "sex");});
test("sexes -> sex", function() {deepEqual( Stem("sexes"), "sex");});
test("sfondrata -> sfondrat", function() {deepEqual( Stem("sfondrata"), "sfondrat");});
test("sforce -> sforc", function() {deepEqual( Stem("sforce"), "sforc");});
test("sforze -> sforz", function() {deepEqual( Stem("sforze"), "sforz");});
test("shako -> shako", function() {deepEqual( Stem("shako"), "shako");});
test("shakos -> shakos", function() {deepEqual( Stem("shakos"), "shakos");});
test("shakspeare -> shakspear", function() {deepEqual( Stem("shakspeare"), "shakspear");});
test("shangaï -> shangaï", function() {deepEqual( Stem("shangaï"), "shangaï");});
test("sheppard -> sheppard", function() {deepEqual( Stem("sheppard"), "sheppard");});
test("sheridan -> sheridan", function() {deepEqual( Stem("sheridan"), "sheridan");});
test("sherry -> sherry", function() {deepEqual( Stem("sherry"), "sherry");});
test("shilling -> shilling", function() {deepEqual( Stem("shilling"), "shilling");});
test("shillings -> shilling", function() {deepEqual( Stem("shillings"), "shilling");});
test("shipping -> shipping", function() {deepEqual( Stem("shipping"), "shipping");});
test("shiva -> shiv", function() {deepEqual( Stem("shiva"), "shiv");});
test("shows -> show", function() {deepEqual( Stem("shows"), "show");});
test("si -> si", function() {deepEqual( Stem("si"), "si");});
test("siamo -> siamo", function() {deepEqual( Stem("siamo"), "siamo");});
test("siècle -> siecl", function() {deepEqual( Stem("siècle"), "siecl");});
test("siècles -> siecl", function() {deepEqual( Stem("siècles"), "siecl");});
test("siège -> sieg", function() {deepEqual( Stem("siège"), "sieg");});
test("sièges -> sieg", function() {deepEqual( Stem("sièges"), "sieg");});
test("sien -> sien", function() {deepEqual( Stem("sien"), "sien");});
test("sienne -> sien", function() {deepEqual( Stem("sienne"), "sien");});
test("siennes -> sien", function() {deepEqual( Stem("siennes"), "sien");});
test("siens -> sien", function() {deepEqual( Stem("siens"), "sien");});
test("sierra -> sierr", function() {deepEqual( Stem("sierra"), "sierr");});
test("sieste -> siest", function() {deepEqual( Stem("sieste"), "siest");});
test("sieur -> sieur", function() {deepEqual( Stem("sieur"), "sieur");});
test("sieyès -> sieyes", function() {deepEqual( Stem("sieyès"), "sieyes");});
test("siffla -> siffl", function() {deepEqual( Stem("siffla"), "siffl");});
test("sifflaient -> siffl", function() {deepEqual( Stem("sifflaient"), "siffl");});
test("sifflait -> siffl", function() {deepEqual( Stem("sifflait"), "siffl");});
test("sifflant -> siffl", function() {deepEqual( Stem("sifflant"), "siffl");});
test("sifflement -> siffl", function() {deepEqual( Stem("sifflement"), "siffl");});
test("sifflements -> siffl", function() {deepEqual( Stem("sifflements"), "siffl");});
test("siffler -> siffl", function() {deepEqual( Stem("siffler"), "siffl");});
test("sifflet -> sifflet", function() {deepEqual( Stem("sifflet"), "sifflet");});
test("sifflets -> sifflet", function() {deepEqual( Stem("sifflets"), "sifflet");});
test("sighs -> sigh", function() {deepEqual( Stem("sighs"), "sigh");});
test("sigisbée -> sigisb", function() {deepEqual( Stem("sigisbée"), "sigisb");});
test("sigismond -> sigismond", function() {deepEqual( Stem("sigismond"), "sigismond");});
test("signa -> sign", function() {deepEqual( Stem("signa"), "sign");});
test("signait -> sign", function() {deepEqual( Stem("signait"), "sign");});
test("signal -> signal", function() {deepEqual( Stem("signal"), "signal");});
test("signala -> signal", function() {deepEqual( Stem("signala"), "signal");});
test("signale -> signal", function() {deepEqual( Stem("signale"), "signal");});
test("signalé -> signal", function() {deepEqual( Stem("signalé"), "signal");});
test("signalée -> signal", function() {deepEqual( Stem("signalée"), "signal");});
test("signalement -> signal", function() {deepEqual( Stem("signalement"), "signal");});
test("signalements -> signal", function() {deepEqual( Stem("signalements"), "signal");});
test("signaler -> signal", function() {deepEqual( Stem("signaler"), "signal");});
test("signalerait -> signal", function() {deepEqual( Stem("signalerait"), "signal");});
test("signant -> sign", function() {deepEqual( Stem("signant"), "sign");});
test("signature -> signatur", function() {deepEqual( Stem("signature"), "signatur");});
test("signaux -> signal", function() {deepEqual( Stem("signaux"), "signal");});
test("signe -> sign", function() {deepEqual( Stem("signe"), "sign");});
test("signé -> sign", function() {deepEqual( Stem("signé"), "sign");});
test("signée -> sign", function() {deepEqual( Stem("signée"), "sign");});
test("signées -> sign", function() {deepEqual( Stem("signées"), "sign");});
test("signer -> sign", function() {deepEqual( Stem("signer"), "sign");});
test("signera -> sign", function() {deepEqual( Stem("signera"), "sign");});
test("signerai -> sign", function() {deepEqual( Stem("signerai"), "sign");});
test("signes -> sign", function() {deepEqual( Stem("signes"), "sign");});
test("signets -> signet", function() {deepEqual( Stem("signets"), "signet");});
test("signez -> sign", function() {deepEqual( Stem("signez"), "sign");});
test("signifiait -> signifi", function() {deepEqual( Stem("signifiait"), "signifi");});
test("significatif -> signif", function() {deepEqual( Stem("significatif"), "signif");});
test("signification -> signif", function() {deepEqual( Stem("signification"), "signif");});
test("significative -> signif", function() {deepEqual( Stem("significative"), "signif");});
test("significatives -> signif", function() {deepEqual( Stem("significatives"), "signif");});
test("signifie -> signif", function() {deepEqual( Stem("signifie"), "signif");});
test("signifier -> signifi", function() {deepEqual( Stem("signifier"), "signifi");});
test("signor -> signor", function() {deepEqual( Stem("signor"), "signor");});
test("signora -> signor", function() {deepEqual( Stem("signora"), "signor");});
test("signorino -> signorino", function() {deepEqual( Stem("signorino"), "signorino");});
test("silence -> silenc", function() {deepEqual( Stem("silence"), "silenc");});
test("silencieuse -> silenci", function() {deepEqual( Stem("silencieuse"), "silenci");});
test("silencieusement -> silenci", function() {deepEqual( Stem("silencieusement"), "silenci");});
test("silencieux -> silenci", function() {deepEqual( Stem("silencieux"), "silenci");});
test("silhouette -> silhouet", function() {deepEqual( Stem("silhouette"), "silhouet");});
test("sillonnaient -> sillon", function() {deepEqual( Stem("sillonnaient"), "sillon");});
test("sillonne -> sillon", function() {deepEqual( Stem("sillonne"), "sillon");});
test("sillonné -> sillon", function() {deepEqual( Stem("sillonné"), "sillon");});
test("sillonnés -> sillon", function() {deepEqual( Stem("sillonnés"), "sillon");});
test("sillons -> sillon", function() {deepEqual( Stem("sillons"), "sillon");});
test("simagrées -> simagr", function() {deepEqual( Stem("simagrées"), "simagr");});
test("simon -> simon", function() {deepEqual( Stem("simon"), "simon");});
test("simonie -> simon", function() {deepEqual( Stem("simonie"), "simon");});
test("simple -> simpl", function() {deepEqual( Stem("simple"), "simpl");});
test("simplement -> simpl", function() {deepEqual( Stem("simplement"), "simpl");});
test("simples -> simpl", function() {deepEqual( Stem("simples"), "simpl");});
test("simplicité -> simpliqu", function() {deepEqual( Stem("simplicité"), "simpliqu");});
test("simplifiée -> simplifi", function() {deepEqual( Stem("simplifiée"), "simplifi");});
test("simule -> simul", function() {deepEqual( Stem("simule"), "simul");});
test("sinant -> sin", function() {deepEqual( Stem("sinant"), "sin");});
test("since -> sinc", function() {deepEqual( Stem("since"), "sinc");});
test("sincère -> sincer", function() {deepEqual( Stem("sincère"), "sincer");});
test("sincèrement -> sincer", function() {deepEqual( Stem("sincèrement"), "sincer");});
test("sincères -> sincer", function() {deepEqual( Stem("sincères"), "sincer");});
test("sincérité -> sincer", function() {deepEqual( Stem("sincérité"), "sincer");});
test("sindes -> sind", function() {deepEqual( Stem("sindes"), "sind");});
test("sine -> sin", function() {deepEqual( Stem("sine"), "sin");});
test("sinécures -> sinécur", function() {deepEqual( Stem("sinécures"), "sinécur");});
test("singapore -> singapor", function() {deepEqual( Stem("singapore"), "singapor");});
test("singe -> sing", function() {deepEqual( Stem("singe"), "sing");});
test("singeries -> singer", function() {deepEqual( Stem("singeries"), "singer");});
test("singes -> sing", function() {deepEqual( Stem("singes"), "sing");});
test("singularité -> singular", function() {deepEqual( Stem("singularité"), "singular");});
test("singularités -> singular", function() {deepEqual( Stem("singularités"), "singular");});
test("singulier -> singuli", function() {deepEqual( Stem("singulier"), "singuli");});
test("singulière -> singuli", function() {deepEqual( Stem("singulière"), "singuli");});
test("singulièrement -> singuli", function() {deepEqual( Stem("singulièrement"), "singuli");});
test("singulières -> singuli", function() {deepEqual( Stem("singulières"), "singuli");});
test("singuliers -> singuli", function() {deepEqual( Stem("singuliers"), "singuli");});
test("sinistre -> sinistr", function() {deepEqual( Stem("sinistre"), "sinistr");});
test("sinistres -> sinistr", function() {deepEqual( Stem("sinistres"), "sinistr");});
test("sinon -> sinon", function() {deepEqual( Stem("sinon"), "sinon");});
test("sinuosités -> sinuos", function() {deepEqual( Stem("sinuosités"), "sinuos");});
test("sioux -> sioux", function() {deepEqual( Stem("sioux"), "sioux");});
test("sir -> sir", function() {deepEqual( Stem("sir"), "sir");});
test("sire -> sir", function() {deepEqual( Stem("sire"), "sir");});
test("site -> sit", function() {deepEqual( Stem("site"), "sit");});
test("sites -> sit", function() {deepEqual( Stem("sites"), "sit");});
test("sitôt -> sitôt", function() {deepEqual( Stem("sitôt"), "sitôt");});
test("situation -> situat", function() {deepEqual( Stem("situation"), "situat");});
test("situé -> situ", function() {deepEqual( Stem("situé"), "situ");});
test("située -> situ", function() {deepEqual( Stem("située"), "situ");});
test("situés -> situ", function() {deepEqual( Stem("situés"), "situ");});
test("six -> six", function() {deepEqual( Stem("six"), "six");});
test("sixième -> sixiem", function() {deepEqual( Stem("sixième"), "sixiem");});
test("sixte -> sixt", function() {deepEqual( Stem("sixte"), "sixt");});
test("sixtine -> sixtin", function() {deepEqual( Stem("sixtine"), "sixtin");});
test("sky -> sky", function() {deepEqual( Stem("sky"), "sky");});
test("sleeping -> sleeping", function() {deepEqual( Stem("sleeping"), "sleeping");});
test("slight -> slight", function() {deepEqual( Stem("slight"), "slight");});
test("sloop -> sloop", function() {deepEqual( Stem("sloop"), "sloop");});
test("small -> small", function() {deepEqual( Stem("small"), "small");});
test("smith -> smith", function() {deepEqual( Stem("smith"), "smith");});
test("smollett -> smollet", function() {deepEqual( Stem("smollett"), "smollet");});
test("smyth -> smyth", function() {deepEqual( Stem("smyth"), "smyth");});
test("so -> so", function() {deepEqual( Stem("so"), "so");});
test("social -> social", function() {deepEqual( Stem("social"), "social");});
test("sociale -> social", function() {deepEqual( Stem("sociale"), "social");});
test("sociales -> social", function() {deepEqual( Stem("sociales"), "social");});
test("sociaux -> social", function() {deepEqual( Stem("sociaux"), "social");});
test("société -> societ", function() {deepEqual( Stem("société"), "societ");});
test("sociétés -> societ", function() {deepEqual( Stem("sociétés"), "societ");});
test("socques -> socqu", function() {deepEqual( Stem("socques"), "socqu");});
test("soeur -> soeur", function() {deepEqual( Stem("soeur"), "soeur");});
test("soeurs -> soeur", function() {deepEqual( Stem("soeurs"), "soeur");});
test("soi -> soi", function() {deepEqual( Stem("soi"), "soi");});
test("soie -> soi", function() {deepEqual( Stem("soie"), "soi");});
test("soient -> soient", function() {deepEqual( Stem("soient"), "soient");});
test("soif -> soif", function() {deepEqual( Stem("soif"), "soif");});
test("soigna -> soign", function() {deepEqual( Stem("soigna"), "soign");});
test("soignait -> soign", function() {deepEqual( Stem("soignait"), "soign");});
test("soignant -> soign", function() {deepEqual( Stem("soignant"), "soign");});
test("soigne -> soign", function() {deepEqual( Stem("soigne"), "soign");});
test("soigné -> soign", function() {deepEqual( Stem("soigné"), "soign");});
test("soignée -> soign", function() {deepEqual( Stem("soignée"), "soign");});
test("soigner -> soign", function() {deepEqual( Stem("soigner"), "soign");});
test("soignés -> soign", function() {deepEqual( Stem("soignés"), "soign");});
test("soigneusement -> soigneux", function() {deepEqual( Stem("soigneusement"), "soigneux");});
test("soigneux -> soigneux", function() {deepEqual( Stem("soigneux"), "soigneux");});
test("soin -> soin", function() {deepEqual( Stem("soin"), "soin");});
test("soins -> soin", function() {deepEqual( Stem("soins"), "soin");});
test("soir -> soir", function() {deepEqual( Stem("soir"), "soir");});
test("soirée -> soir", function() {deepEqual( Stem("soirée"), "soir");});
test("soirées -> soir", function() {deepEqual( Stem("soirées"), "soir");});
test("soirs -> soir", function() {deepEqual( Stem("soirs"), "soir");});
test("sois -> sois", function() {deepEqual( Stem("sois"), "sois");});
test("soissons -> soisson", function() {deepEqual( Stem("soissons"), "soisson");});
test("soit -> soit", function() {deepEqual( Stem("soit"), "soit");});
test("soixante -> soix", function() {deepEqual( Stem("soixante"), "soix");});
test("soixantième -> soixantiem", function() {deepEqual( Stem("soixantième"), "soixantiem");});
test("sol -> sol", function() {deepEqual( Stem("sol"), "sol");});
test("solaire -> solair", function() {deepEqual( Stem("solaire"), "solair");});
test("soldant -> sold", function() {deepEqual( Stem("soldant"), "sold");});
test("soldat -> soldat", function() {deepEqual( Stem("soldat"), "soldat");});
test("soldats -> soldat", function() {deepEqual( Stem("soldats"), "soldat");});
test("solde -> sold", function() {deepEqual( Stem("solde"), "sold");});
test("soldé -> sold", function() {deepEqual( Stem("soldé"), "sold");});
test("soldés -> sold", function() {deepEqual( Stem("soldés"), "sold");});
test("soleil -> soleil", function() {deepEqual( Stem("soleil"), "soleil");});
test("solennel -> solennel", function() {deepEqual( Stem("solennel"), "solennel");});
test("solennelle -> solennel", function() {deepEqual( Stem("solennelle"), "solennel");});
test("solennels -> solennel", function() {deepEqual( Stem("solennels"), "solennel");});
test("solide -> solid", function() {deepEqual( Stem("solide"), "solid");});
test("solidement -> solid", function() {deepEqual( Stem("solidement"), "solid");});
test("solides -> solid", function() {deepEqual( Stem("solides"), "solid");});
test("solidité -> solid", function() {deepEqual( Stem("solidité"), "solid");});
test("solitaire -> solitair", function() {deepEqual( Stem("solitaire"), "solitair");});
test("solitaires -> solitair", function() {deepEqual( Stem("solitaires"), "solitair");});
test("solitude -> solitud", function() {deepEqual( Stem("solitude"), "solitud");});
test("sollicita -> sollicit", function() {deepEqual( Stem("sollicita"), "sollicit");});
test("sollicitait -> sollicit", function() {deepEqual( Stem("sollicitait"), "sollicit");});
test("sollicitations -> sollicit", function() {deepEqual( Stem("sollicitations"), "sollicit");});
test("sollicite -> sollicit", function() {deepEqual( Stem("sollicite"), "sollicit");});
test("sollicité -> solliqu", function() {deepEqual( Stem("sollicité"), "solliqu");});
test("solliciter -> sollicit", function() {deepEqual( Stem("solliciter"), "sollicit");});
test("solliciteur -> solliciteur", function() {deepEqual( Stem("solliciteur"), "solliciteur");});
test("sollicitez -> sollicit", function() {deepEqual( Stem("sollicitez"), "sollicit");});
test("sols -> sol", function() {deepEqual( Stem("sols"), "sol");});
test("solution -> solut", function() {deepEqual( Stem("solution"), "solut");});
test("somanlis -> somanl", function() {deepEqual( Stem("somanlis"), "somanl");});
test("sombre -> sombr", function() {deepEqual( Stem("sombre"), "sombr");});
test("sombrer -> sombr", function() {deepEqual( Stem("sombrer"), "sombr");});
test("sombreros -> sombreros", function() {deepEqual( Stem("sombreros"), "sombreros");});
test("sombres -> sombr", function() {deepEqual( Stem("sombres"), "sombr");});
test("sommaire -> sommair", function() {deepEqual( Stem("sommaire"), "sommair");});
test("sommariva -> sommariv", function() {deepEqual( Stem("sommariva"), "sommariv");});
test("sommation -> sommat", function() {deepEqual( Stem("sommation"), "sommat");});
test("somme -> somm", function() {deepEqual( Stem("somme"), "somm");});
test("sommeil -> sommeil", function() {deepEqual( Stem("sommeil"), "sommeil");});
test("sommeillait -> sommeil", function() {deepEqual( Stem("sommeillait"), "sommeil");});
test("sommer -> somm", function() {deepEqual( Stem("sommer"), "somm");});
test("sommes -> somm", function() {deepEqual( Stem("sommes"), "somm");});
test("sommet -> sommet", function() {deepEqual( Stem("sommet"), "sommet");});
test("sommets -> sommet", function() {deepEqual( Stem("sommets"), "sommet");});
test("sommités -> sommit", function() {deepEqual( Stem("sommités"), "sommit");});
test("somptueuse -> somptueux", function() {deepEqual( Stem("somptueuse"), "somptueux");});
test("somptueusement -> somptueux", function() {deepEqual( Stem("somptueusement"), "somptueux");});
test("somptueux -> somptueux", function() {deepEqual( Stem("somptueux"), "somptueux");});
test("somptuosité -> somptuos", function() {deepEqual( Stem("somptuosité"), "somptuos");});
test("son -> son", function() {deepEqual( Stem("son"), "son");});
test("sonder -> sond", function() {deepEqual( Stem("sonder"), "sond");});
test("songe -> song", function() {deepEqual( Stem("songe"), "song");});
test("songé -> song", function() {deepEqual( Stem("songé"), "song");});
test("songea -> song", function() {deepEqual( Stem("songea"), "song");});
test("songeaient -> song", function() {deepEqual( Stem("songeaient"), "song");});
test("songeais -> song", function() {deepEqual( Stem("songeais"), "song");});
test("songeait -> song", function() {deepEqual( Stem("songeait"), "song");});
test("songeant -> song", function() {deepEqual( Stem("songeant"), "song");});
test("songeât -> song", function() {deepEqual( Stem("songeât"), "song");});
test("songent -> songent", function() {deepEqual( Stem("songent"), "songent");});
test("songeons -> songeon", function() {deepEqual( Stem("songeons"), "songeon");});
test("songer -> song", function() {deepEqual( Stem("songer"), "song");});
test("songera -> song", function() {deepEqual( Stem("songera"), "song");});
test("songerai -> song", function() {deepEqual( Stem("songerai"), "song");});
test("songerait -> song", function() {deepEqual( Stem("songerait"), "song");});
test("songèrent -> song", function() {deepEqual( Stem("songèrent"), "song");});
test("songes -> song", function() {deepEqual( Stem("songes"), "song");});
test("songez -> song", function() {deepEqual( Stem("songez"), "song");});
test("sonna -> son", function() {deepEqual( Stem("sonna"), "son");});
test("sonnaient -> son", function() {deepEqual( Stem("sonnaient"), "son");});
test("sonnait -> son", function() {deepEqual( Stem("sonnait"), "son");});
test("sonnant -> son", function() {deepEqual( Stem("sonnant"), "son");});
test("sonnât -> son", function() {deepEqual( Stem("sonnât"), "son");});
test("sonne -> son", function() {deepEqual( Stem("sonne"), "son");});
test("sonné -> son", function() {deepEqual( Stem("sonné"), "son");});
test("sonnée -> son", function() {deepEqual( Stem("sonnée"), "son");});
test("sonnées -> son", function() {deepEqual( Stem("sonnées"), "son");});
test("sonner -> son", function() {deepEqual( Stem("sonner"), "son");});
test("sonnera -> son", function() {deepEqual( Stem("sonnera"), "son");});
test("sonnèrent -> son", function() {deepEqual( Stem("sonnèrent"), "son");});
test("sonneries -> sonner", function() {deepEqual( Stem("sonneries"), "sonner");});
test("sonneront -> son", function() {deepEqual( Stem("sonneront"), "son");});
test("sonnés -> son", function() {deepEqual( Stem("sonnés"), "son");});
test("sonnet -> sonnet", function() {deepEqual( Stem("sonnet"), "sonnet");});
test("sonnets -> sonnet", function() {deepEqual( Stem("sonnets"), "sonnet");});
test("sonnette -> sonnet", function() {deepEqual( Stem("sonnette"), "sonnet");});
test("sonnettes -> sonnet", function() {deepEqual( Stem("sonnettes"), "sonnet");});
test("sonneurs -> sonneur", function() {deepEqual( Stem("sonneurs"), "sonneur");});
test("sonore -> sonor", function() {deepEqual( Stem("sonore"), "sonor");});
test("sonores -> sonor", function() {deepEqual( Stem("sonores"), "sonor");});
test("sons -> son", function() {deepEqual( Stem("sons"), "son");});
test("sont -> sont", function() {deepEqual( Stem("sont"), "sont");});
test("sorbonne -> sorbon", function() {deepEqual( Stem("sorbonne"), "sorbon");});
test("sorcier -> sorci", function() {deepEqual( Stem("sorcier"), "sorci");});
test("sordide -> sordid", function() {deepEqual( Stem("sordide"), "sordid");});
test("sorel -> sorel", function() {deepEqual( Stem("sorel"), "sorel");});
test("sorezana -> sorezan", function() {deepEqual( Stem("sorezana"), "sorezan");});
test("sorgho -> sorgho", function() {deepEqual( Stem("sorgho"), "sorgho");});
test("sors -> sor", function() {deepEqual( Stem("sors"), "sor");});
test("sort -> sort", function() {deepEqual( Stem("sort"), "sort");});
test("sortaient -> sort", function() {deepEqual( Stem("sortaient"), "sort");});
test("sortais -> sort", function() {deepEqual( Stem("sortais"), "sort");});
test("sortait -> sort", function() {deepEqual( Stem("sortait"), "sort");});
test("sortant -> sort", function() {deepEqual( Stem("sortant"), "sort");});
test("sorte -> sort", function() {deepEqual( Stem("sorte"), "sort");});
test("sortent -> sortent", function() {deepEqual( Stem("sortent"), "sortent");});
test("sortes -> sort", function() {deepEqual( Stem("sortes"), "sort");});
test("sortez -> sort", function() {deepEqual( Stem("sortez"), "sort");});
test("sorti -> sort", function() {deepEqual( Stem("sorti"), "sort");});
test("sortie -> sort", function() {deepEqual( Stem("sortie"), "sort");});
test("sortiez -> sort", function() {deepEqual( Stem("sortiez"), "sort");});
test("sortir -> sort", function() {deepEqual( Stem("sortir"), "sort");});
test("sortira -> sort", function() {deepEqual( Stem("sortira"), "sort");});
test("sortirai -> sort", function() {deepEqual( Stem("sortirai"), "sort");});
test("sortirais -> sort", function() {deepEqual( Stem("sortirais"), "sort");});
test("sortirait -> sort", function() {deepEqual( Stem("sortirait"), "sort");});
test("sortiras -> sort", function() {deepEqual( Stem("sortiras"), "sort");});
test("sortirent -> sort", function() {deepEqual( Stem("sortirent"), "sort");});
test("sortirez -> sort", function() {deepEqual( Stem("sortirez"), "sort");});
test("sortirions -> sort", function() {deepEqual( Stem("sortirions"), "sort");});
test("sortirons -> sort", function() {deepEqual( Stem("sortirons"), "sort");});
test("sortis -> sort", function() {deepEqual( Stem("sortis"), "sort");});
test("sortit -> sort", function() {deepEqual( Stem("sortit"), "sort");});
test("sortît -> sort", function() {deepEqual( Stem("sortît"), "sort");});
test("sorts -> sort", function() {deepEqual( Stem("sorts"), "sort");});
test("sot -> sot", function() {deepEqual( Stem("sot"), "sot");});
test("sots -> sot", function() {deepEqual( Stem("sots"), "sot");});
test("sotte -> sott", function() {deepEqual( Stem("sotte"), "sott");});
test("sottement -> sott", function() {deepEqual( Stem("sottement"), "sott");});
test("sottes -> sott", function() {deepEqual( Stem("sottes"), "sott");});
test("sottise -> sottis", function() {deepEqual( Stem("sottise"), "sottis");});
test("sottises -> sottis", function() {deepEqual( Stem("sottises"), "sottis");});
test("sou -> sou", function() {deepEqual( Stem("sou"), "sou");});
test("soubrette -> soubret", function() {deepEqual( Stem("soubrette"), "soubret");});
test("souci -> souc", function() {deepEqual( Stem("souci"), "souc");});
test("soucia -> souci", function() {deepEqual( Stem("soucia"), "souci");});
test("souciait -> souci", function() {deepEqual( Stem("souciait"), "souci");});
test("soucier -> souci", function() {deepEqual( Stem("soucier"), "souci");});
test("soucieuse -> soucieux", function() {deepEqual( Stem("soucieuse"), "soucieux");});
test("soucieux -> soucieux", function() {deepEqual( Stem("soucieux"), "soucieux");});
test("soucis -> souc", function() {deepEqual( Stem("soucis"), "souc");});
test("soudain -> soudain", function() {deepEqual( Stem("soudain"), "soudain");});
test("soudaine -> soudain", function() {deepEqual( Stem("soudaine"), "soudain");});
test("soudainement -> soudain", function() {deepEqual( Stem("soudainement"), "soudain");});
test("souffert -> souffert", function() {deepEqual( Stem("souffert"), "souffert");});
test("souffla -> souffl", function() {deepEqual( Stem("souffla"), "souffl");});
test("soufflait -> souffl", function() {deepEqual( Stem("soufflait"), "souffl");});
test("soufflant -> souffl", function() {deepEqual( Stem("soufflant"), "souffl");});
test("souffle -> souffl", function() {deepEqual( Stem("souffle"), "souffl");});
test("soufflent -> soufflent", function() {deepEqual( Stem("soufflent"), "soufflent");});
test("souffler -> souffl", function() {deepEqual( Stem("souffler"), "souffl");});
test("soufflet -> soufflet", function() {deepEqual( Stem("soufflet"), "soufflet");});
test("soufflets -> soufflet", function() {deepEqual( Stem("soufflets"), "soufflet");});
test("souffleur -> souffleur", function() {deepEqual( Stem("souffleur"), "souffleur");});
test("souffrais -> souffr", function() {deepEqual( Stem("souffrais"), "souffr");});
test("souffrait -> souffr", function() {deepEqual( Stem("souffrait"), "souffr");});
test("souffrance -> souffranc", function() {deepEqual( Stem("souffrance"), "souffranc");});
test("souffrances -> souffranc", function() {deepEqual( Stem("souffrances"), "souffranc");});
test("souffrant -> souffr", function() {deepEqual( Stem("souffrant"), "souffr");});
test("souffrante -> souffr", function() {deepEqual( Stem("souffrante"), "souffr");});
test("souffre -> souffr", function() {deepEqual( Stem("souffre"), "souffr");});
test("souffrent -> souffrent", function() {deepEqual( Stem("souffrent"), "souffrent");});
test("souffres -> souffr", function() {deepEqual( Stem("souffres"), "souffr");});
test("souffrez -> souffr", function() {deepEqual( Stem("souffrez"), "souffr");});
test("souffrir -> souffr", function() {deepEqual( Stem("souffrir"), "souffr");});
test("souffrira -> souffr", function() {deepEqual( Stem("souffrira"), "souffr");});
test("souffrirai -> souffr", function() {deepEqual( Stem("souffrirai"), "souffr");});
test("souffrirais -> souffr", function() {deepEqual( Stem("souffrirais"), "souffr");});
test("souffriras -> souffr", function() {deepEqual( Stem("souffriras"), "souffr");});
test("souffrissent -> souffr", function() {deepEqual( Stem("souffrissent"), "souffr");});
test("souffrit -> souffr", function() {deepEqual( Stem("souffrit"), "souffr");});
test("souhait -> souh", function() {deepEqual( Stem("souhait"), "souh");});
test("souhaitant -> souhait", function() {deepEqual( Stem("souhaitant"), "souhait");});
test("souhaite -> souhait", function() {deepEqual( Stem("souhaite"), "souhait");});
test("souhaité -> souhait", function() {deepEqual( Stem("souhaité"), "souhait");});
test("souillé -> souill", function() {deepEqual( Stem("souillé"), "souill");});
test("souiller -> souill", function() {deepEqual( Stem("souiller"), "souill");});
test("soulagé -> soulag", function() {deepEqual( Stem("soulagé"), "soulag");});
test("soulagée -> soulag", function() {deepEqual( Stem("soulagée"), "soulag");});
test("soulagement -> soulag", function() {deepEqual( Stem("soulagement"), "soulag");});
test("soulcy -> soulcy", function() {deepEqual( Stem("soulcy"), "soulcy");});
test("souleva -> soulev", function() {deepEqual( Stem("souleva"), "soulev");});
test("soulevait -> soulev", function() {deepEqual( Stem("soulevait"), "soulev");});
test("soulevant -> soulev", function() {deepEqual( Stem("soulevant"), "soulev");});
test("soulevée -> soulev", function() {deepEqual( Stem("soulevée"), "soulev");});
test("soulevées -> soulev", function() {deepEqual( Stem("soulevées"), "soulev");});
test("soulèvent -> soulèvent", function() {deepEqual( Stem("soulèvent"), "soulèvent");});
test("soulever -> soulev", function() {deepEqual( Stem("soulever"), "soulev");});
test("soulèverai -> soulev", function() {deepEqual( Stem("soulèverai"), "soulev");});
test("soulier -> souli", function() {deepEqual( Stem("soulier"), "souli");});
test("souliers -> souli", function() {deepEqual( Stem("souliers"), "souli");});
test("soulte -> soult", function() {deepEqual( Stem("soulte"), "soult");});
test("soumettait -> soumet", function() {deepEqual( Stem("soumettait"), "soumet");});
test("soumettre -> soumettr", function() {deepEqual( Stem("soumettre"), "soumettr");});
test("soumis -> soum", function() {deepEqual( Stem("soumis"), "soum");});
test("soumise -> soumis", function() {deepEqual( Stem("soumise"), "soumis");});
test("soumises -> soumis", function() {deepEqual( Stem("soumises"), "soumis");});
test("soumission -> soumiss", function() {deepEqual( Stem("soumission"), "soumiss");});
test("soumit -> soum", function() {deepEqual( Stem("soumit"), "soum");});
test("soupait -> soup", function() {deepEqual( Stem("soupait"), "soup");});
test("soupapes -> soupap", function() {deepEqual( Stem("soupapes"), "soupap");});
test("soupçon -> soupçon", function() {deepEqual( Stem("soupçon"), "soupçon");});
test("soupçonna -> soupçon", function() {deepEqual( Stem("soupçonna"), "soupçon");});
test("soupçonnaient -> soupçon", function() {deepEqual( Stem("soupçonnaient"), "soupçon");});
test("soupçonnait -> soupçon", function() {deepEqual( Stem("soupçonnait"), "soupçon");});
test("soupçonne -> soupçon", function() {deepEqual( Stem("soupçonne"), "soupçon");});
test("soupçonné -> soupçon", function() {deepEqual( Stem("soupçonné"), "soupçon");});
test("soupçonnée -> soupçon", function() {deepEqual( Stem("soupçonnée"), "soupçon");});
test("soupçonner -> soupçon", function() {deepEqual( Stem("soupçonner"), "soupçon");});
test("soupçonnés -> soupçon", function() {deepEqual( Stem("soupçonnés"), "soupçon");});
test("soupçonneux -> soupçon", function() {deepEqual( Stem("soupçonneux"), "soupçon");});
test("soupçons -> soupçon", function() {deepEqual( Stem("soupçons"), "soupçon");});
test("soupe -> soup", function() {deepEqual( Stem("soupe"), "soup");});
test("soupé -> soup", function() {deepEqual( Stem("soupé"), "soup");});
test("souper -> soup", function() {deepEqual( Stem("souper"), "soup");});
test("soupers -> souper", function() {deepEqual( Stem("soupers"), "souper");});
test("soupez -> soup", function() {deepEqual( Stem("soupez"), "soup");});
test("soupir -> soup", function() {deepEqual( Stem("soupir"), "soup");});
test("soupirant -> soupir", function() {deepEqual( Stem("soupirant"), "soupir");});
test("soupire -> soupir", function() {deepEqual( Stem("soupire"), "soupir");});
test("soupirer -> soupir", function() {deepEqual( Stem("soupirer"), "soupir");});
test("souple -> soupl", function() {deepEqual( Stem("souple"), "soupl");});
test("souplesse -> soupless", function() {deepEqual( Stem("souplesse"), "soupless");});
test("source -> sourc", function() {deepEqual( Stem("source"), "sourc");});
test("sources -> sourc", function() {deepEqual( Stem("sources"), "sourc");});
test("sourcil -> sourcil", function() {deepEqual( Stem("sourcil"), "sourcil");});
test("sourciliers -> sourcili", function() {deepEqual( Stem("sourciliers"), "sourcili");});
test("sourcilla -> sourcill", function() {deepEqual( Stem("sourcilla"), "sourcill");});
test("sourcillé -> sourcill", function() {deepEqual( Stem("sourcillé"), "sourcill");});
test("sourciller -> sourcill", function() {deepEqual( Stem("sourciller"), "sourcill");});
test("sourcils -> sourcil", function() {deepEqual( Stem("sourcils"), "sourcil");});
test("sourd -> sourd", function() {deepEqual( Stem("sourd"), "sourd");});
test("sourde -> sourd", function() {deepEqual( Stem("sourde"), "sourd");});
test("souri -> sour", function() {deepEqual( Stem("souri"), "sour");});
test("souriait -> souri", function() {deepEqual( Stem("souriait"), "souri");});
test("souriant -> souri", function() {deepEqual( Stem("souriant"), "souri");});
test("souriante -> souri", function() {deepEqual( Stem("souriante"), "souri");});
test("souriantes -> souri", function() {deepEqual( Stem("souriantes"), "souri");});
test("sourire -> sourir", function() {deepEqual( Stem("sourire"), "sourir");});
test("sourires -> sourir", function() {deepEqual( Stem("sourires"), "sourir");});
test("sourit -> sour", function() {deepEqual( Stem("sourit"), "sour");});
test("sournois -> sournois", function() {deepEqual( Stem("sournois"), "sournois");});
test("sournoise -> sournois", function() {deepEqual( Stem("sournoise"), "sournois");});
test("sous -> sous", function() {deepEqual( Stem("sous"), "sous");});
test("soustrairais -> soustrair", function() {deepEqual( Stem("soustrairais"), "soustrair");});
test("soustraire -> soustrair", function() {deepEqual( Stem("soustraire"), "soustrair");});
test("soustrait -> soustr", function() {deepEqual( Stem("soustrait"), "soustr");});
test("soutane -> soutan", function() {deepEqual( Stem("soutane"), "soutan");});
test("soutenaient -> souten", function() {deepEqual( Stem("soutenaient"), "souten");});
test("soutenait -> souten", function() {deepEqual( Stem("soutenait"), "souten");});
test("soutenant -> souten", function() {deepEqual( Stem("soutenant"), "souten");});
test("soutènement -> souten", function() {deepEqual( Stem("soutènement"), "souten");});
test("soutenir -> souten", function() {deepEqual( Stem("soutenir"), "souten");});
test("soutenu -> soutenu", function() {deepEqual( Stem("soutenu"), "soutenu");});
test("soutenue -> soutenu", function() {deepEqual( Stem("soutenue"), "soutenu");});
test("soutenues -> soutenu", function() {deepEqual( Stem("soutenues"), "soutenu");});
test("souterrain -> souterrain", function() {deepEqual( Stem("souterrain"), "souterrain");});
test("souterraines -> souterrain", function() {deepEqual( Stem("souterraines"), "souterrain");});
test("soutes -> sout", function() {deepEqual( Stem("soutes"), "sout");});
test("south -> south", function() {deepEqual( Stem("south"), "south");});
test("southampton -> southampton", function() {deepEqual( Stem("southampton"), "southampton");});
test("southey -> southey", function() {deepEqual( Stem("southey"), "southey");});
test("soutiennent -> soutiennent", function() {deepEqual( Stem("soutiennent"), "soutiennent");});
test("soutiens -> soutien", function() {deepEqual( Stem("soutiens"), "soutien");});
test("soutient -> soutient", function() {deepEqual( Stem("soutient"), "soutient");});
test("soutint -> soutint", function() {deepEqual( Stem("soutint"), "soutint");});
test("souvenaient -> souven", function() {deepEqual( Stem("souvenaient"), "souven");});
test("souvenait -> souven", function() {deepEqual( Stem("souvenait"), "souven");});
test("souvenant -> souven", function() {deepEqual( Stem("souvenant"), "souven");});
test("souvenez -> souven", function() {deepEqual( Stem("souvenez"), "souven");});
test("souvenir -> souven", function() {deepEqual( Stem("souvenir"), "souven");});
test("souvenirs -> souvenir", function() {deepEqual( Stem("souvenirs"), "souvenir");});
test("souvent -> souvent", function() {deepEqual( Stem("souvent"), "souvent");});
test("souvenus -> souvenus", function() {deepEqual( Stem("souvenus"), "souvenus");});
test("souverain -> souverain", function() {deepEqual( Stem("souverain"), "souverain");});
test("souveraine -> souverain", function() {deepEqual( Stem("souveraine"), "souverain");});
test("souverainement -> souverain", function() {deepEqual( Stem("souverainement"), "souverain");});
test("souveraineté -> souverainet", function() {deepEqual( Stem("souveraineté"), "souverainet");});
test("souverains -> souverain", function() {deepEqual( Stem("souverains"), "souverain");});
test("souviendra -> souviendr", function() {deepEqual( Stem("souviendra"), "souviendr");});
test("souviendrez -> souviendr", function() {deepEqual( Stem("souviendrez"), "souviendr");});
test("souvienne -> souvien", function() {deepEqual( Stem("souvienne"), "souvien");});
test("souviennent -> souviennent", function() {deepEqual( Stem("souviennent"), "souviennent");});
test("souviens -> souvien", function() {deepEqual( Stem("souviens"), "souvien");});
test("souvient -> souvient", function() {deepEqual( Stem("souvient"), "souvient");});
test("souvint -> souvint", function() {deepEqual( Stem("souvint"), "souvint");});
test("soyeux -> soyeux", function() {deepEqual( Stem("soyeux"), "soyeux");});
test("soyez -> soi", function() {deepEqual( Stem("soyez"), "soi");});
test("soyons -> soyon", function() {deepEqual( Stem("soyons"), "soyon");});
test("spardeck -> spardeck", function() {deepEqual( Stem("spardeck"), "spardeck");});
test("speak -> speak", function() {deepEqual( Stem("speak"), "speak");});
test("spécial -> spécial", function() {deepEqual( Stem("spécial"), "spécial");});
test("spéciale -> spécial", function() {deepEqual( Stem("spéciale"), "spécial");});
test("spécialement -> spécial", function() {deepEqual( Stem("spécialement"), "spécial");});
test("spécialité -> spécial", function() {deepEqual( Stem("spécialité"), "spécial");});
test("spécifier -> spécifi", function() {deepEqual( Stem("spécifier"), "spécifi");});
test("spécifique -> spécif", function() {deepEqual( Stem("spécifique"), "spécif");});
test("spectacle -> spectacl", function() {deepEqual( Stem("spectacle"), "spectacl");});
test("spectacles -> spectacl", function() {deepEqual( Stem("spectacles"), "spectacl");});
test("spectateur -> spectateur", function() {deepEqual( Stem("spectateur"), "spectateur");});
test("spectateurs -> spectateur", function() {deepEqual( Stem("spectateurs"), "spectateur");});
test("spectrale -> spectral", function() {deepEqual( Stem("spectrale"), "spectral");});
test("spectre -> spectr", function() {deepEqual( Stem("spectre"), "spectr");});
test("spéculation -> spécul", function() {deepEqual( Stem("spéculation"), "spécul");});
test("spéculations -> spécul", function() {deepEqual( Stem("spéculations"), "spécul");});
test("speedy -> speedy", function() {deepEqual( Stem("speedy"), "speedy");});
test("sphère -> spher", function() {deepEqual( Stem("sphère"), "spher");});
test("sphéroïde -> sphéroïd", function() {deepEqual( Stem("sphéroïde"), "sphéroïd");});
test("spielberg -> spielberg", function() {deepEqual( Stem("spielberg"), "spielberg");});
test("spirale -> spiral", function() {deepEqual( Stem("spirale"), "spiral");});
test("spirales -> spiral", function() {deepEqual( Stem("spirales"), "spiral");});
test("spirituel -> spirituel", function() {deepEqual( Stem("spirituel"), "spirituel");});
test("spirituelle -> spirituel", function() {deepEqual( Stem("spirituelle"), "spirituel");});
test("spirituelles -> spirituel", function() {deepEqual( Stem("spirituelles"), "spirituel");});
test("splendide -> splendid", function() {deepEqual( Stem("splendide"), "splendid");});
test("splendides -> splendid", function() {deepEqual( Stem("splendides"), "splendid");});
test("spring -> spring", function() {deepEqual( Stem("spring"), "spring");});
test("squares -> squar", function() {deepEqual( Stem("squares"), "squar");});
test("squelette -> squelet", function() {deepEqual( Stem("squelette"), "squelet");});
test("st -> st", function() {deepEqual( Stem("st"), "st");});
test("staël -> staël", function() {deepEqual( Stem("staël"), "staël");});
test("stalles -> stall", function() {deepEqual( Stem("stalles"), "stall");});
test("stamp -> stamp", function() {deepEqual( Stem("stamp"), "stamp");});
test("standard -> standard", function() {deepEqual( Stem("standard"), "standard");});
test("stanislas -> stanisl", function() {deepEqual( Stem("stanislas"), "stanisl");});
test("star -> star", function() {deepEqual( Stem("star"), "star");});
test("starke -> stark", function() {deepEqual( Stem("starke"), "stark");});
test("station -> station", function() {deepEqual( Stem("station"), "station");});
test("stationnera -> station", function() {deepEqual( Stem("stationnera"), "station");});
test("stationnés -> station", function() {deepEqual( Stem("stationnés"), "station");});
test("stations -> station", function() {deepEqual( Stem("stations"), "station");});
test("statuaire -> statuair", function() {deepEqual( Stem("statuaire"), "statuair");});
test("statue -> statu", function() {deepEqual( Stem("statue"), "statu");});
test("statues -> statu", function() {deepEqual( Stem("statues"), "statu");});
test("stature -> statur", function() {deepEqual( Stem("stature"), "statur");});
test("staub -> staub", function() {deepEqual( Stem("staub"), "staub");});
test("steam -> steam", function() {deepEqual( Stem("steam"), "steam");});
test("steamboats -> steamboat", function() {deepEqual( Stem("steamboats"), "steamboat");});
test("steamer -> steam", function() {deepEqual( Stem("steamer"), "steam");});
test("steamers -> steamer", function() {deepEqual( Stem("steamers"), "steamer");});
test("steccata -> steccat", function() {deepEqual( Stem("steccata"), "steccat");});
test("stefano -> stefano", function() {deepEqual( Stem("stefano"), "stefano");});
test("stentor -> stentor", function() {deepEqual( Stem("stentor"), "stentor");});
test("stephenson -> stephenson", function() {deepEqual( Stem("stephenson"), "stephenson");});
test("sterling -> sterling", function() {deepEqual( Stem("sterling"), "sterling");});
test("sterne -> stern", function() {deepEqual( Stem("sterne"), "stern");});
test("steward -> steward", function() {deepEqual( Stem("steward"), "steward");});
test("stigmates -> stigmat", function() {deepEqual( Stem("stigmates"), "stigmat");});
test("stigmatiser -> stigmatis", function() {deepEqual( Stem("stigmatiser"), "stigmatis");});
test("still -> still", function() {deepEqual( Stem("still"), "still");});
test("stimuler -> stimul", function() {deepEqual( Stem("stimuler"), "stimul");});
test("stolen -> stolen", function() {deepEqual( Stem("stolen"), "stolen");});
test("strabon -> strabon", function() {deepEqual( Stem("strabon"), "strabon");});
test("stramonium -> stramonium", function() {deepEqual( Stem("stramonium"), "stramonium");});
test("strand -> strand", function() {deepEqual( Stem("strand"), "strand");});
test("strasbourg -> strasbourg", function() {deepEqual( Stem("strasbourg"), "strasbourg");});
test("stratagème -> stratagem", function() {deepEqual( Stem("stratagème"), "stratagem");});
test("straw -> straw", function() {deepEqual( Stem("straw"), "straw");});
test("street -> street", function() {deepEqual( Stem("street"), "street");});
test("strict -> strict", function() {deepEqual( Stem("strict"), "strict");});
test("stricte -> strict", function() {deepEqual( Stem("stricte"), "strict");});
test("strictement -> strict", function() {deepEqual( Stem("strictement"), "strict");});
test("strombeck -> strombeck", function() {deepEqual( Stem("strombeck"), "strombeck");});
test("strongest -> strongest", function() {deepEqual( Stem("strongest"), "strongest");});
test("strychnine -> strychnin", function() {deepEqual( Stem("strychnine"), "strychnin");});
test("stuart -> stuart", function() {deepEqual( Stem("stuart"), "stuart");});
test("studbook -> studbook", function() {deepEqual( Stem("studbook"), "studbook");});
test("stupéfaction -> stupéfact", function() {deepEqual( Stem("stupéfaction"), "stupéfact");});
test("stupéfait -> stupef", function() {deepEqual( Stem("stupéfait"), "stupef");});
test("stupéfiante -> stupéfi", function() {deepEqual( Stem("stupéfiante"), "stupéfi");});
test("stupefie -> stupef", function() {deepEqual( Stem("stupefie"), "stupef");});
test("stupéfie -> stupef", function() {deepEqual( Stem("stupéfie"), "stupef");});
test("stupéfié -> stupéfi", function() {deepEqual( Stem("stupéfié"), "stupéfi");});
test("stupéfier -> stupéfi", function() {deepEqual( Stem("stupéfier"), "stupéfi");});
test("stupeur -> stupeur", function() {deepEqual( Stem("stupeur"), "stupeur");});
test("stupide -> stupid", function() {deepEqual( Stem("stupide"), "stupid");});
test("stupides -> stupid", function() {deepEqual( Stem("stupides"), "stupid");});
test("style -> styl", function() {deepEqual( Stem("style"), "styl");});
test("stylé -> styl", function() {deepEqual( Stem("stylé"), "styl");});
test("stylés -> styl", function() {deepEqual( Stem("stylés"), "styl");});
test("su -> su", function() {deepEqual( Stem("su"), "su");});
test("suave -> suav", function() {deepEqual( Stem("suave"), "suav");});
test("subalterne -> subaltern", function() {deepEqual( Stem("subalterne"), "subaltern");});
test("subalternes -> subaltern", function() {deepEqual( Stem("subalternes"), "subaltern");});
test("subi -> sub", function() {deepEqual( Stem("subi"), "sub");});
test("subir -> sub", function() {deepEqual( Stem("subir"), "sub");});
test("subira -> sub", function() {deepEqual( Stem("subira"), "sub");});
test("subirait -> sub", function() {deepEqual( Stem("subirait"), "sub");});
test("subis -> sub", function() {deepEqual( Stem("subis"), "sub");});
test("subissant -> sub", function() {deepEqual( Stem("subissant"), "sub");});
test("subit -> sub", function() {deepEqual( Stem("subit"), "sub");});
test("subite -> subit", function() {deepEqual( Stem("subite"), "subit");});
test("subitement -> subit", function() {deepEqual( Stem("subitement"), "subit");});
test("subjugue -> subjugu", function() {deepEqual( Stem("subjugue"), "subjugu");});
test("subjugué -> subjugu", function() {deepEqual( Stem("subjugué"), "subjugu");});
test("subjuguer -> subjugu", function() {deepEqual( Stem("subjuguer"), "subjugu");});
test("sublime -> sublim", function() {deepEqual( Stem("sublime"), "sublim");});
test("sublimes -> sublim", function() {deepEqual( Stem("sublimes"), "sublim");});
test("sublimité -> sublim", function() {deepEqual( Stem("sublimité"), "sublim");});
test("submerge -> submerg", function() {deepEqual( Stem("submerge"), "submerg");});
test("submergé -> submerg", function() {deepEqual( Stem("submergé"), "submerg");});
test("submergèrent -> submerg", function() {deepEqual( Stem("submergèrent"), "submerg");});
test("subordonnés -> subordon", function() {deepEqual( Stem("subordonnés"), "subordon");});
test("suborner -> suborn", function() {deepEqual( Stem("suborner"), "suborn");});
test("subsistance -> subsist", function() {deepEqual( Stem("subsistance"), "subsist");});
test("subsiste -> subsist", function() {deepEqual( Stem("subsiste"), "subsist");});
test("subsistent -> subsistent", function() {deepEqual( Stem("subsistent"), "subsistent");});
test("substance -> substanc", function() {deepEqual( Stem("substance"), "substanc");});
test("substitué -> substitu", function() {deepEqual( Stem("substitué"), "substitu");});
test("substituée -> substitu", function() {deepEqual( Stem("substituée"), "substitu");});
test("substituées -> substitu", function() {deepEqual( Stem("substituées"), "substitu");});
test("substituer -> substitu", function() {deepEqual( Stem("substituer"), "substitu");});
test("substitut -> substitut", function() {deepEqual( Stem("substitut"), "substitut");});
test("subtilité -> subtil", function() {deepEqual( Stem("subtilité"), "subtil");});
test("subvention -> subvent", function() {deepEqual( Stem("subvention"), "subvent");});
test("succéda -> succed", function() {deepEqual( Stem("succéda"), "succed");});
test("succédaient -> succed", function() {deepEqual( Stem("succédaient"), "succed");});
test("succédait -> succed", function() {deepEqual( Stem("succédait"), "succed");});
test("succède -> succed", function() {deepEqual( Stem("succède"), "succed");});
test("succédé -> succed", function() {deepEqual( Stem("succédé"), "succed");});
test("succéder -> succed", function() {deepEqual( Stem("succéder"), "succed");});
test("succédèrent -> succed", function() {deepEqual( Stem("succédèrent"), "succed");});
test("succès -> succes", function() {deepEqual( Stem("succès"), "succes");});
test("successeur -> successeur", function() {deepEqual( Stem("successeur"), "successeur");});
test("successeurs -> successeur", function() {deepEqual( Stem("successeurs"), "successeur");});
test("successifs -> success", function() {deepEqual( Stem("successifs"), "success");});
test("succession -> success", function() {deepEqual( Stem("succession"), "success");});
test("successive -> success", function() {deepEqual( Stem("successive"), "success");});
test("successivement -> success", function() {deepEqual( Stem("successivement"), "success");});
test("successives -> success", function() {deepEqual( Stem("successives"), "success");});
test("successor -> successor", function() {deepEqual( Stem("successor"), "successor");});
test("succombant -> succomb", function() {deepEqual( Stem("succombant"), "succomb");});
test("succombé -> succomb", function() {deepEqual( Stem("succombé"), "succomb");});
test("succombent -> succombent", function() {deepEqual( Stem("succombent"), "succombent");});
test("succomber -> succomb", function() {deepEqual( Stem("succomber"), "succomb");});
test("succulentes -> succulent", function() {deepEqual( Stem("succulentes"), "succulent");});
test("succulents -> succulent", function() {deepEqual( Stem("succulents"), "succulent");});
test("such -> such", function() {deepEqual( Stem("such"), "such");});
test("suchet -> suchet", function() {deepEqual( Stem("suchet"), "suchet");});
test("sucre -> sucr", function() {deepEqual( Stem("sucre"), "sucr");});
test("sucreries -> sucrer", function() {deepEqual( Stem("sucreries"), "sucrer");});
test("sud -> sud", function() {deepEqual( Stem("sud"), "sud");});
test("suédois -> suédois", function() {deepEqual( Stem("suédois"), "suédois");});
test("sueur -> sueur", function() {deepEqual( Stem("sueur"), "sueur");});
test("suez -> su", function() {deepEqual( Stem("suez"), "su");});
test("suffers -> suffer", function() {deepEqual( Stem("suffers"), "suffer");});
test("suffi -> suff", function() {deepEqual( Stem("suffi"), "suff");});
test("suffira -> suff", function() {deepEqual( Stem("suffira"), "suff");});
test("suffiraient -> suff", function() {deepEqual( Stem("suffiraient"), "suff");});
test("suffirait -> suff", function() {deepEqual( Stem("suffirait"), "suff");});
test("suffire -> suffir", function() {deepEqual( Stem("suffire"), "suffir");});
test("suffirent -> suff", function() {deepEqual( Stem("suffirent"), "suff");});
test("suffiront -> suff", function() {deepEqual( Stem("suffiront"), "suff");});
test("suffisaient -> suffis", function() {deepEqual( Stem("suffisaient"), "suffis");});
test("suffisait -> suffis", function() {deepEqual( Stem("suffisait"), "suffis");});
test("suffisamment -> suffis", function() {deepEqual( Stem("suffisamment"), "suffis");});
test("suffisance -> suffis", function() {deepEqual( Stem("suffisance"), "suffis");});
test("suffisant -> suffis", function() {deepEqual( Stem("suffisant"), "suffis");});
test("suffisante -> suffis", function() {deepEqual( Stem("suffisante"), "suffis");});
test("suffisantes -> suffis", function() {deepEqual( Stem("suffisantes"), "suffis");});
test("suffisent -> suffisent", function() {deepEqual( Stem("suffisent"), "suffisent");});
test("suffit -> suff", function() {deepEqual( Stem("suffit"), "suff");});
test("suffocations -> suffoc", function() {deepEqual( Stem("suffocations"), "suffoc");});
test("suffoqua -> suffoqu", function() {deepEqual( Stem("suffoqua"), "suffoqu");});
test("suffoqué -> suffoqu", function() {deepEqual( Stem("suffoqué"), "suffoqu");});
test("suffoquerait -> suffoqu", function() {deepEqual( Stem("suffoquerait"), "suffoqu");});
test("suggéra -> sugger", function() {deepEqual( Stem("suggéra"), "sugger");});
test("suggéré -> sugger", function() {deepEqual( Stem("suggéré"), "sugger");});
test("suggérée -> sugger", function() {deepEqual( Stem("suggérée"), "sugger");});
test("suggérer -> sugger", function() {deepEqual( Stem("suggérer"), "sugger");});
test("suicide -> suicid", function() {deepEqual( Stem("suicide"), "suicid");});
test("suie -> sui", function() {deepEqual( Stem("suie"), "sui");});
test("suis -> suis", function() {deepEqual( Stem("suis"), "suis");});
test("suisse -> suiss", function() {deepEqual( Stem("suisse"), "suiss");});
test("suisses -> suiss", function() {deepEqual( Stem("suisses"), "suiss");});
test("suit -> suit", function() {deepEqual( Stem("suit"), "suit");});
test("suite -> suit", function() {deepEqual( Stem("suite"), "suit");});
test("suites -> suit", function() {deepEqual( Stem("suites"), "suit");});
test("suivaient -> suiv", function() {deepEqual( Stem("suivaient"), "suiv");});
test("suivais -> suiv", function() {deepEqual( Stem("suivais"), "suiv");});
test("suivait -> suiv", function() {deepEqual( Stem("suivait"), "suiv");});
test("suivant -> suiv", function() {deepEqual( Stem("suivant"), "suiv");});
test("suivante -> suiv", function() {deepEqual( Stem("suivante"), "suiv");});
test("suivantes -> suiv", function() {deepEqual( Stem("suivantes"), "suiv");});
test("suivants -> suiv", function() {deepEqual( Stem("suivants"), "suiv");});
test("suivent -> suivent", function() {deepEqual( Stem("suivent"), "suivent");});
test("suivez -> suiv", function() {deepEqual( Stem("suivez"), "suiv");});
test("suivi -> suiv", function() {deepEqual( Stem("suivi"), "suiv");});
test("suivie -> suiv", function() {deepEqual( Stem("suivie"), "suiv");});
test("suivies -> suiv", function() {deepEqual( Stem("suivies"), "suiv");});
test("suiviez -> suiv", function() {deepEqual( Stem("suiviez"), "suiv");});
test("suivirent -> suiv", function() {deepEqual( Stem("suivirent"), "suiv");});
test("suivis -> suiv", function() {deepEqual( Stem("suivis"), "suiv");});
test("suivit -> suiv", function() {deepEqual( Stem("suivit"), "suiv");});
test("suivons -> suivon", function() {deepEqual( Stem("suivons"), "suivon");});
test("suivra -> suivr", function() {deepEqual( Stem("suivra"), "suivr");});
test("suivrai -> suivr", function() {deepEqual( Stem("suivrai"), "suivr");});
test("suivraient -> suivr", function() {deepEqual( Stem("suivraient"), "suivr");});
test("suivras -> suivr", function() {deepEqual( Stem("suivras"), "suivr");});
test("suivre -> suivr", function() {deepEqual( Stem("suivre"), "suivr");});
test("suivront -> suivront", function() {deepEqual( Stem("suivront"), "suivront");});
test("sujet -> sujet", function() {deepEqual( Stem("sujet"), "sujet");});
test("sujets -> sujet", function() {deepEqual( Stem("sujets"), "sujet");});
test("sujette -> sujet", function() {deepEqual( Stem("sujette"), "sujet");});
test("sujettes -> sujet", function() {deepEqual( Stem("sujettes"), "sujet");});
test("sullivan -> sullivan", function() {deepEqual( Stem("sullivan"), "sullivan");});
test("sultan -> sultan", function() {deepEqual( Stem("sultan"), "sultan");});
test("sumatra -> sumatr", function() {deepEqual( Stem("sumatra"), "sumatr");});
test("sun -> sun", function() {deepEqual( Stem("sun"), "sun");});
test("superbe -> superb", function() {deepEqual( Stem("superbe"), "superb");});
test("superbes -> superb", function() {deepEqual( Stem("superbes"), "superb");});
test("superficie -> superfic", function() {deepEqual( Stem("superficie"), "superfic");});
test("superficiel -> superficiel", function() {deepEqual( Stem("superficiel"), "superficiel");});
test("superflu -> superflu", function() {deepEqual( Stem("superflu"), "superflu");});
test("supérieur -> supérieur", function() {deepEqual( Stem("supérieur"), "supérieur");});
test("supérieure -> supérieur", function() {deepEqual( Stem("supérieure"), "supérieur");});
test("supérieurement -> supérieur", function() {deepEqual( Stem("supérieurement"), "supérieur");});
test("supérieures -> supérieur", function() {deepEqual( Stem("supérieures"), "supérieur");});
test("supérieurs -> supérieur", function() {deepEqual( Stem("supérieurs"), "supérieur");});
test("supériorité -> supérior", function() {deepEqual( Stem("supériorité"), "supérior");});
test("suppléé -> supplé", function() {deepEqual( Stem("suppléé"), "supplé");});
test("supplément -> suppl", function() {deepEqual( Stem("supplément"), "suppl");});
test("supplémentaire -> supplémentair", function() {deepEqual( Stem("supplémentaire"), "supplémentair");});
test("supplia -> suppli", function() {deepEqual( Stem("supplia"), "suppli");});
test("suppliaient -> suppli", function() {deepEqual( Stem("suppliaient"), "suppli");});
test("suppliait -> suppli", function() {deepEqual( Stem("suppliait"), "suppli");});
test("suppliant -> suppli", function() {deepEqual( Stem("suppliant"), "suppli");});
test("suppliante -> suppli", function() {deepEqual( Stem("suppliante"), "suppli");});
test("supplications -> suppliqu", function() {deepEqual( Stem("supplications"), "suppliqu");});
test("supplice -> supplic", function() {deepEqual( Stem("supplice"), "supplic");});
test("supplices -> supplic", function() {deepEqual( Stem("supplices"), "supplic");});
test("supplie -> suppl", function() {deepEqual( Stem("supplie"), "suppl");});
test("supplier -> suppli", function() {deepEqual( Stem("supplier"), "suppli");});
test("suppliez -> suppl", function() {deepEqual( Stem("suppliez"), "suppl");});
test("supportable -> support", function() {deepEqual( Stem("supportable"), "support");});
test("supportait -> support", function() {deepEqual( Stem("supportait"), "support");});
test("supportent -> supportent", function() {deepEqual( Stem("supportent"), "supportent");});
test("supporter -> support", function() {deepEqual( Stem("supporter"), "support");});
test("supporterait -> support", function() {deepEqual( Stem("supporterait"), "support");});
test("supposait -> suppos", function() {deepEqual( Stem("supposait"), "suppos");});
test("supposant -> suppos", function() {deepEqual( Stem("supposant"), "suppos");});
test("suppose -> suppos", function() {deepEqual( Stem("suppose"), "suppos");});
test("supposé -> suppos", function() {deepEqual( Stem("supposé"), "suppos");});
test("supposée -> suppos", function() {deepEqual( Stem("supposée"), "suppos");});
test("supposer -> suppos", function() {deepEqual( Stem("supposer"), "suppos");});
test("supposés -> suppos", function() {deepEqual( Stem("supposés"), "suppos");});
test("supposez -> suppos", function() {deepEqual( Stem("supposez"), "suppos");});
test("supposition -> supposit", function() {deepEqual( Stem("supposition"), "supposit");});
test("suppositions -> supposit", function() {deepEqual( Stem("suppositions"), "supposit");});
test("supposons -> supposon", function() {deepEqual( Stem("supposons"), "supposon");});
test("suppression -> suppress", function() {deepEqual( Stem("suppression"), "suppress");});
test("supprimant -> supprim", function() {deepEqual( Stem("supprimant"), "supprim");});
test("supprime -> supprim", function() {deepEqual( Stem("supprime"), "supprim");});
test("supprimé -> supprim", function() {deepEqual( Stem("supprimé"), "supprim");});
test("supprimée -> supprim", function() {deepEqual( Stem("supprimée"), "supprim");});
test("supprimer -> supprim", function() {deepEqual( Stem("supprimer"), "supprim");});
test("supprimons -> supprimon", function() {deepEqual( Stem("supprimons"), "supprimon");});
test("supputait -> supput", function() {deepEqual( Stem("supputait"), "supput");});
test("suprême -> suprêm", function() {deepEqual( Stem("suprême"), "suprêm");});
test("sur -> sur", function() {deepEqual( Stem("sur"), "sur");});
test("sûr -> sûr", function() {deepEqual( Stem("sûr"), "sûr");});
test("surannée -> surann", function() {deepEqual( Stem("surannée"), "surann");});
test("surate -> surat", function() {deepEqual( Stem("surate"), "surat");});
test("surchargés -> surcharg", function() {deepEqual( Stem("surchargés"), "surcharg");});
test("surchauffée -> surchauff", function() {deepEqual( Stem("surchauffée"), "surchauff");});
test("surcroît -> surcroît", function() {deepEqual( Stem("surcroît"), "surcroît");});
test("sûre -> sûr", function() {deepEqual( Stem("sûre"), "sûr");});
test("surélevés -> surélev", function() {deepEqual( Stem("surélevés"), "surélev");});
test("sûrement -> sûr", function() {deepEqual( Stem("sûrement"), "sûr");});
test("surenchère -> surencher", function() {deepEqual( Stem("surenchère"), "surencher");});
test("surent -> surent", function() {deepEqual( Stem("surent"), "surent");});
test("suresnes -> suresn", function() {deepEqual( Stem("suresnes"), "suresn");});
test("sûreté -> sûret", function() {deepEqual( Stem("sûreté"), "sûret");});
test("surexcité -> surexc", function() {deepEqual( Stem("surexcité"), "surexc");});
test("surface -> surfac", function() {deepEqual( Stem("surface"), "surfac");});
test("surgir -> surg", function() {deepEqual( Stem("surgir"), "surg");});
test("surgirait -> surg", function() {deepEqual( Stem("surgirait"), "surg");});
test("surgirent -> surg", function() {deepEqual( Stem("surgirent"), "surg");});
test("surhumain -> surhumain", function() {deepEqual( Stem("surhumain"), "surhumain");});
test("surhumaine -> surhumain", function() {deepEqual( Stem("surhumaine"), "surhumain");});
test("surlendemain -> surlendemain", function() {deepEqual( Stem("surlendemain"), "surlendemain");});
test("surmontant -> surmont", function() {deepEqual( Stem("surmontant"), "surmont");});
test("surmonte -> surmont", function() {deepEqual( Stem("surmonte"), "surmont");});
test("surmontée -> surmont", function() {deepEqual( Stem("surmontée"), "surmont");});
test("surmontées -> surmont", function() {deepEqual( Stem("surmontées"), "surmont");});
test("surmonter -> surmont", function() {deepEqual( Stem("surmonter"), "surmont");});
test("surnage -> surnag", function() {deepEqual( Stem("surnage"), "surnag");});
test("surnagea -> surnag", function() {deepEqual( Stem("surnagea"), "surnag");});
test("surnageait -> surnag", function() {deepEqual( Stem("surnageait"), "surnag");});
test("surnaturelle -> surnaturel", function() {deepEqual( Stem("surnaturelle"), "surnaturel");});
test("surnom -> surnom", function() {deepEqual( Stem("surnom"), "surnom");});
test("surnommèrent -> surnomm", function() {deepEqual( Stem("surnommèrent"), "surnomm");});
test("surpassa -> surpass", function() {deepEqual( Stem("surpassa"), "surpass");});
test("surpasse -> surp", function() {deepEqual( Stem("surpasse"), "surp");});
test("surpassé -> surpass", function() {deepEqual( Stem("surpassé"), "surpass");});
test("surpassent -> surp", function() {deepEqual( Stem("surpassent"), "surp");});
test("surplis -> surpl", function() {deepEqual( Stem("surplis"), "surpl");});
test("surplus -> surplus", function() {deepEqual( Stem("surplus"), "surplus");});
test("surprenait -> surpren", function() {deepEqual( Stem("surprenait"), "surpren");});
test("surprenant -> surpren", function() {deepEqual( Stem("surprenant"), "surpren");});
test("surprend -> surprend", function() {deepEqual( Stem("surprend"), "surprend");});
test("surprendre -> surprendr", function() {deepEqual( Stem("surprendre"), "surprendr");});
test("surprirent -> surpr", function() {deepEqual( Stem("surprirent"), "surpr");});
test("surpris -> surpr", function() {deepEqual( Stem("surpris"), "surpr");});
test("surprise -> surpris", function() {deepEqual( Stem("surprise"), "surpris");});
test("surprises -> surpris", function() {deepEqual( Stem("surprises"), "surpris");});
test("surprit -> surpr", function() {deepEqual( Stem("surprit"), "surpr");});
test("surrey -> surrey", function() {deepEqual( Stem("surrey"), "surrey");});
test("sûrs -> sûr", function() {deepEqual( Stem("sûrs"), "sûr");});
test("sursaut -> sursaut", function() {deepEqual( Stem("sursaut"), "sursaut");});
test("surtout -> surtout", function() {deepEqual( Stem("surtout"), "surtout");});
test("survécut -> survécut", function() {deepEqual( Stem("survécut"), "survécut");});
test("surveillait -> surveil", function() {deepEqual( Stem("surveillait"), "surveil");});
test("surveillance -> surveil", function() {deepEqual( Stem("surveillance"), "surveil");});
test("surveillants -> surveil", function() {deepEqual( Stem("surveillants"), "surveil");});
test("surveille -> surveil", function() {deepEqual( Stem("surveille"), "surveil");});
test("surveillé -> surveil", function() {deepEqual( Stem("surveillé"), "surveil");});
test("surveillée -> surveil", function() {deepEqual( Stem("surveillée"), "surveil");});
test("surveiller -> surveil", function() {deepEqual( Stem("surveiller"), "surveil");});
test("surveillera -> surveil", function() {deepEqual( Stem("surveillera"), "surveil");});
test("survenait -> surven", function() {deepEqual( Stem("survenait"), "surven");});
test("survenir -> surven", function() {deepEqual( Stem("survenir"), "surven");});
test("survenue -> survenu", function() {deepEqual( Stem("survenue"), "survenu");});
test("survinrent -> survinrent", function() {deepEqual( Stem("survinrent"), "survinrent");});
test("survint -> survint", function() {deepEqual( Stem("survint"), "survint");});
test("survit -> surv", function() {deepEqual( Stem("survit"), "surv");});
test("survivant -> surviv", function() {deepEqual( Stem("survivant"), "surviv");});
test("survivrai -> survivr", function() {deepEqual( Stem("survivrai"), "survivr");});
test("survivrais -> survivr", function() {deepEqual( Stem("survivrais"), "survivr");});
test("survivre -> survivr", function() {deepEqual( Stem("survivre"), "survivr");});
test("survivrez -> survivr", function() {deepEqual( Stem("survivrez"), "survivr");});
test("sus -> sus", function() {deepEqual( Stem("sus"), "sus");});
test("susceptible -> susceptibl", function() {deepEqual( Stem("susceptible"), "susceptibl");});
test("susceptibles -> susceptibl", function() {deepEqual( Stem("susceptibles"), "susceptibl");});
test("susciter -> suscit", function() {deepEqual( Stem("susciter"), "suscit");});
test("suscitèrent -> suscit", function() {deepEqual( Stem("suscitèrent"), "suscit");});
test("susdit -> susd", function() {deepEqual( Stem("susdit"), "susd");});
test("suspect -> suspect", function() {deepEqual( Stem("suspect"), "suspect");});
test("suspecte -> suspect", function() {deepEqual( Stem("suspecte"), "suspect");});
test("suspecter -> suspect", function() {deepEqual( Stem("suspecter"), "suspect");});
test("suspects -> suspect", function() {deepEqual( Stem("suspects"), "suspect");});
test("suspendre -> suspendr", function() {deepEqual( Stem("suspendre"), "suspendr");});
test("suspendu -> suspendu", function() {deepEqual( Stem("suspendu"), "suspendu");});
test("suspendue -> suspendu", function() {deepEqual( Stem("suspendue"), "suspendu");});
test("suspendus -> suspendus", function() {deepEqual( Stem("suspendus"), "suspendus");});
test("suspens -> suspen", function() {deepEqual( Stem("suspens"), "suspen");});
test("suspicion -> suspicion", function() {deepEqual( Stem("suspicion"), "suspicion");});
test("sut -> sut", function() {deepEqual( Stem("sut"), "sut");});
test("sût -> sût", function() {deepEqual( Stem("sût"), "sût");});
test("sutpour -> sutpour", function() {deepEqual( Stem("sutpour"), "sutpour");});
test("sutty -> sutty", function() {deepEqual( Stem("sutty"), "sutty");});
test("svelte -> svelt", function() {deepEqual( Stem("svelte"), "svelt");});
test("sweeter -> sweet", function() {deepEqual( Stem("sweeter"), "sweet");});
test("sydenham -> sydenham", function() {deepEqual( Stem("sydenham"), "sydenham");});
test("syénites -> syénit", function() {deepEqual( Stem("syénites"), "syénit");});
test("syllabe -> syllab", function() {deepEqual( Stem("syllabe"), "syllab");});
test("syllabes -> syllab", function() {deepEqual( Stem("syllabes"), "syllab");});
test("syllogisme -> syllog", function() {deepEqual( Stem("syllogisme"), "syllog");});
test("symbole -> symbol", function() {deepEqual( Stem("symbole"), "symbol");});
test("symboles -> symbol", function() {deepEqual( Stem("symboles"), "symbol");});
test("symbolisent -> symbolisent", function() {deepEqual( Stem("symbolisent"), "symbolisent");});
test("symétrie -> symetr", function() {deepEqual( Stem("symétrie"), "symetr");});
test("symétriques -> symetr", function() {deepEqual( Stem("symétriques"), "symetr");});
test("sympathie -> sympath", function() {deepEqual( Stem("sympathie"), "sympath");});
test("sympathisait -> sympathis", function() {deepEqual( Stem("sympathisait"), "sympathis");});
test("sympathise -> sympathis", function() {deepEqual( Stem("sympathise"), "sympathis");});
test("symphonie -> symphon", function() {deepEqual( Stem("symphonie"), "symphon");});
test("symptôme -> symptôm", function() {deepEqual( Stem("symptôme"), "symptôm");});
test("symptômes -> symptôm", function() {deepEqual( Stem("symptômes"), "symptôm");});
test("synagogues -> synagogu", function() {deepEqual( Stem("synagogues"), "synagogu");});
test("synonyme -> synonym", function() {deepEqual( Stem("synonyme"), "synonym");});
test("synonymes -> synonym", function() {deepEqual( Stem("synonymes"), "synonym");});
test("système -> system", function() {deepEqual( Stem("système"), "system");});
test("t -> t", function() {deepEqual( Stem("t"), "t");});
test("ta -> ta", function() {deepEqual( Stem("ta"), "ta");});
test("tabac -> tabac", function() {deepEqual( Stem("tabac"), "tabac");});
test("tabagie -> tabag", function() {deepEqual( Stem("tabagie"), "tabag");});
test("tabagies -> tabag", function() {deepEqual( Stem("tabagies"), "tabag");});
test("tabatière -> tabati", function() {deepEqual( Stem("tabatière"), "tabati");});
test("tabernacle -> tabernacl", function() {deepEqual( Stem("tabernacle"), "tabernacl");});
test("table -> tabl", function() {deepEqual( Stem("table"), "tabl");});
test("tableau -> tableau", function() {deepEqual( Stem("tableau"), "tableau");});
test("tableaux -> tableau", function() {deepEqual( Stem("tableaux"), "tableau");});
test("tables -> tabl", function() {deepEqual( Stem("tables"), "tabl");});
test("tablette -> tablet", function() {deepEqual( Stem("tablette"), "tablet");});
test("tablier -> tabli", function() {deepEqual( Stem("tablier"), "tabli");});
test("tabouret -> tabouret", function() {deepEqual( Stem("tabouret"), "tabouret");});
test("tâchait -> tâch", function() {deepEqual( Stem("tâchait"), "tâch");});
test("tâchant -> tâch", function() {deepEqual( Stem("tâchant"), "tâch");});
test("tache -> tach", function() {deepEqual( Stem("tache"), "tach");});
test("tâche -> tâch", function() {deepEqual( Stem("tâche"), "tâch");});
test("taché -> tach", function() {deepEqual( Stem("taché"), "tach");});
test("tachée -> tach", function() {deepEqual( Stem("tachée"), "tach");});
test("tachées -> tach", function() {deepEqual( Stem("tachées"), "tach");});
test("tâcher -> tâch", function() {deepEqual( Stem("tâcher"), "tâch");});
test("tâcherai -> tâch", function() {deepEqual( Stem("tâcherai"), "tâch");});
test("taches -> tach", function() {deepEqual( Stem("taches"), "tach");});
test("tachetée -> tachet", function() {deepEqual( Stem("tachetée"), "tachet");});
test("tâchez -> tâch", function() {deepEqual( Stem("tâchez"), "tâch");});
test("tâchons -> tâchon", function() {deepEqual( Stem("tâchons"), "tâchon");});
test("tacite -> tacit", function() {deepEqual( Stem("tacite"), "tacit");});
test("tacites -> tacit", function() {deepEqual( Stem("tacites"), "tacit");});
test("taciti -> tacit", function() {deepEqual( Stem("taciti"), "tacit");});
test("taciturnes -> taciturn", function() {deepEqual( Stem("taciturnes"), "taciturn");});
test("tact -> tact", function() {deepEqual( Stem("tact"), "tact");});
test("taffetas -> taffet", function() {deepEqual( Stem("taffetas"), "taffet");});
test("taïkoun -> taïkoun", function() {deepEqual( Stem("taïkoun"), "taïkoun");});
test("tailla -> taill", function() {deepEqual( Stem("tailla"), "taill");});
test("taillanderie -> taillander", function() {deepEqual( Stem("taillanderie"), "taillander");});
test("taillant -> taill", function() {deepEqual( Stem("taillant"), "taill");});
test("taille -> taill", function() {deepEqual( Stem("taille"), "taill");});
test("taillé -> taill", function() {deepEqual( Stem("taillé"), "taill");});
test("taillées -> taill", function() {deepEqual( Stem("taillées"), "taill");});
test("tailler -> taill", function() {deepEqual( Stem("tailler"), "taill");});
test("taillés -> taill", function() {deepEqual( Stem("taillés"), "taill");});
test("tailleur -> tailleur", function() {deepEqual( Stem("tailleur"), "tailleur");});
test("taillis -> taill", function() {deepEqual( Stem("taillis"), "taill");});
test("taire -> tair", function() {deepEqual( Stem("taire"), "tair");});
test("tais -> tais", function() {deepEqual( Stem("tais"), "tais");});
test("taisaient -> tais", function() {deepEqual( Stem("taisaient"), "tais");});
test("taisait -> tais", function() {deepEqual( Stem("taisait"), "tais");});
test("taisant -> tais", function() {deepEqual( Stem("taisant"), "tais");});
test("taisez -> tais", function() {deepEqual( Stem("taisez"), "tais");});
test("tait -> tait", function() {deepEqual( Stem("tait"), "tait");});
test("takes -> tak", function() {deepEqual( Stem("takes"), "tak");});
test("talent -> talent", function() {deepEqual( Stem("talent"), "talent");});
test("talents -> talent", function() {deepEqual( Stem("talents"), "talent");});
test("talleyrand -> talleyrand", function() {deepEqual( Stem("talleyrand"), "talleyrand");});
test("talma -> talm", function() {deepEqual( Stem("talma"), "talm");});
test("taloches -> taloch", function() {deepEqual( Stem("taloches"), "taloch");});
test("talons -> talon", function() {deepEqual( Stem("talons"), "talon");});
test("talus -> talus", function() {deepEqual( Stem("talus"), "talus");});
test("tam -> tam", function() {deepEqual( Stem("tam"), "tam");});
test("tamarins -> tamarin", function() {deepEqual( Stem("tamarins"), "tamarin");});
test("tambour -> tambour", function() {deepEqual( Stem("tambour"), "tambour");});
test("tambourins -> tambourin", function() {deepEqual( Stem("tambourins"), "tambourin");});
test("tambours -> tambour", function() {deepEqual( Stem("tambours"), "tambour");});
test("tams -> tam", function() {deepEqual( Stem("tams"), "tam");});
test("tanari -> tanar", function() {deepEqual( Stem("tanari"), "tanar");});
test("tanbeau -> tanbeau", function() {deepEqual( Stem("tanbeau"), "tanbeau");});
test("tancrède -> tancred", function() {deepEqual( Stem("tancrède"), "tancred");});
test("tandis -> tand", function() {deepEqual( Stem("tandis"), "tand");});
test("tangage -> tangag", function() {deepEqual( Stem("tangage"), "tangag");});
test("tangles -> tangl", function() {deepEqual( Stem("tangles"), "tangl");});
test("tankadère -> tankader", function() {deepEqual( Stem("tankadère"), "tankader");});
test("tankardere -> tankarder", function() {deepEqual( Stem("tankardere"), "tankarder");});
test("tankardère -> tankarder", function() {deepEqual( Stem("tankardère"), "tankarder");});
test("tankas -> tank", function() {deepEqual( Stem("tankas"), "tank");});
test("tannah -> tannah", function() {deepEqual( Stem("tannah"), "tannah");});
test("tanquam -> tanquam", function() {deepEqual( Stem("tanquam"), "tanquam");});
test("tant -> tant", function() {deepEqual( Stem("tant"), "tant");});
test("tante -> tant", function() {deepEqual( Stem("tante"), "tant");});
test("tantes -> tant", function() {deepEqual( Stem("tantes"), "tant");});
test("tantôt -> tantôt", function() {deepEqual( Stem("tantôt"), "tantôt");});
test("tanzi -> tanz", function() {deepEqual( Stem("tanzi"), "tanz");});
test("tapage -> tapag", function() {deepEqual( Stem("tapage"), "tapag");});
test("tapé -> tap", function() {deepEqual( Stem("tapé"), "tap");});
test("tapis -> tapis", function() {deepEqual( Stem("tapis"), "tapis");});
test("tapissée -> tapiss", function() {deepEqual( Stem("tapissée"), "tapiss");});
test("tapisserie -> tapisser", function() {deepEqual( Stem("tapisserie"), "tapisser");});
test("tapissier -> tapissi", function() {deepEqual( Stem("tapissier"), "tapissi");});
test("tapissiers -> tapissi", function() {deepEqual( Stem("tapissiers"), "tapissi");});
test("tapty -> tapty", function() {deepEqual( Stem("tapty"), "tapty");});
test("tard -> tard", function() {deepEqual( Stem("tard"), "tard");});
test("tarda -> tard", function() {deepEqual( Stem("tarda"), "tard");});
test("tardaient -> tard", function() {deepEqual( Stem("tardaient"), "tard");});
test("tardait -> tard", function() {deepEqual( Stem("tardait"), "tard");});
test("tarde -> tard", function() {deepEqual( Stem("tarde"), "tard");});
test("tardé -> tard", function() {deepEqual( Stem("tardé"), "tard");});
test("tarder -> tard", function() {deepEqual( Stem("tarder"), "tard");});
test("tarderait -> tard", function() {deepEqual( Stem("tarderait"), "tard");});
test("tardèrent -> tard", function() {deepEqual( Stem("tardèrent"), "tard");});
test("tardive -> tardiv", function() {deepEqual( Stem("tardive"), "tardiv");});
test("tarés -> tar", function() {deepEqual( Stem("tarés"), "tar");});
test("taries -> tar", function() {deepEqual( Stem("taries"), "tar");});
test("tarirent -> tar", function() {deepEqual( Stem("tarirent"), "tar");});
test("tarissait -> tar", function() {deepEqual( Stem("tarissait"), "tar");});
test("tarit -> tar", function() {deepEqual( Stem("tarit"), "tar");});
test("tarots -> tarot", function() {deepEqual( Stem("tarots"), "tarot");});
test("tarragone -> tarragon", function() {deepEqual( Stem("tarragone"), "tarragon");});
test("tartines -> tartin", function() {deepEqual( Stem("tartines"), "tartin");});
test("tartufe -> tartuf", function() {deepEqual( Stem("tartufe"), "tartuf");});
test("tas -> tas", function() {deepEqual( Stem("tas"), "tas");});
test("tasse -> tass", function() {deepEqual( Stem("tasse"), "tass");});
test("tasses -> tass", function() {deepEqual( Stem("tasses"), "tass");});
test("tâtonnent -> tâtonnent", function() {deepEqual( Stem("tâtonnent"), "tâtonnent");});
test("taudis -> taud", function() {deepEqual( Stem("taudis"), "taud");});
test("taureaux -> taureau", function() {deepEqual( Stem("taureaux"), "taureau");});
test("taverne -> tavern", function() {deepEqual( Stem("taverne"), "tavern");});
test("taxes -> tax", function() {deepEqual( Stem("taxes"), "tax");});
test("taxis -> tax", function() {deepEqual( Stem("taxis"), "tax");});
test("te -> te", function() {deepEqual( Stem("te"), "te");});
test("tea -> te", function() {deepEqual( Stem("tea"), "te");});
test("tecks -> teck", function() {deepEqual( Stem("tecks"), "teck");});
test("teindre -> teindr", function() {deepEqual( Stem("teindre"), "teindr");});
test("teint -> teint", function() {deepEqual( Stem("teint"), "teint");});
test("teinte -> teint", function() {deepEqual( Stem("teinte"), "teint");});
test("teintes -> teint", function() {deepEqual( Stem("teintes"), "teint");});
test("tel -> tel", function() {deepEqual( Stem("tel"), "tel");});
test("telegraph -> telegraph", function() {deepEqual( Stem("telegraph"), "telegraph");});
test("télégraphe -> télégraph", function() {deepEqual( Stem("télégraphe"), "télégraph");});
test("télégraphié -> télégraphi", function() {deepEqual( Stem("télégraphié"), "télégraphi");});
test("télégraphique -> télégraph", function() {deepEqual( Stem("télégraphique"), "télégraph");});
test("télégraphiques -> télégraph", function() {deepEqual( Stem("télégraphiques"), "télégraph");});
test("télémaque -> télémaqu", function() {deepEqual( Stem("télémaque"), "télémaqu");});
test("télescope -> télescop", function() {deepEqual( Stem("télescope"), "télescop");});
test("télescopes -> télescop", function() {deepEqual( Stem("télescopes"), "télescop");});
test("telle -> tel", function() {deepEqual( Stem("telle"), "tel");});
test("tellement -> tel", function() {deepEqual( Stem("tellement"), "tel");});
test("telles -> tel", function() {deepEqual( Stem("telles"), "tel");});
test("tels -> tel", function() {deepEqual( Stem("tels"), "tel");});
test("téméraire -> témérair", function() {deepEqual( Stem("téméraire"), "témérair");});
test("témérité -> témer", function() {deepEqual( Stem("témérité"), "témer");});
test("témoignage -> témoignag", function() {deepEqual( Stem("témoignage"), "témoignag");});
test("témoignaient -> témoign", function() {deepEqual( Stem("témoignaient"), "témoign");});
test("témoignait -> témoign", function() {deepEqual( Stem("témoignait"), "témoign");});
test("temoigne -> temoign", function() {deepEqual( Stem("temoigne"), "temoign");});
test("témoigne -> témoign", function() {deepEqual( Stem("témoigne"), "témoign");});
test("témoigné -> témoign", function() {deepEqual( Stem("témoigné"), "témoign");});
test("témoigner -> témoign", function() {deepEqual( Stem("témoigner"), "témoign");});
test("témoigneront -> témoign", function() {deepEqual( Stem("témoigneront"), "témoign");});
test("témoigniez -> témoign", function() {deepEqual( Stem("témoigniez"), "témoign");});
test("témoin -> témoin", function() {deepEqual( Stem("témoin"), "témoin");});
test("témoins -> témoin", function() {deepEqual( Stem("témoins"), "témoin");});
test("tempe -> temp", function() {deepEqual( Stem("tempe"), "temp");});
test("tempérait -> temper", function() {deepEqual( Stem("tempérait"), "temper");});
test("tempérament -> temper", function() {deepEqual( Stem("tempérament"), "temper");});
test("température -> températur", function() {deepEqual( Stem("température"), "températur");});
test("tempérée -> temper", function() {deepEqual( Stem("tempérée"), "temper");});
test("tempes -> temp", function() {deepEqual( Stem("tempes"), "temp");});
test("tempest -> tempest", function() {deepEqual( Stem("tempest"), "tempest");});
test("tempête -> tempêt", function() {deepEqual( Stem("tempête"), "tempêt");});
test("temple -> templ", function() {deepEqual( Stem("temple"), "templ");});
test("temples -> templ", function() {deepEqual( Stem("temples"), "templ");});
test("temps -> temp", function() {deepEqual( Stem("temps"), "temp");});
test("tenable -> tenabl", function() {deepEqual( Stem("tenable"), "tenabl");});
test("ténacité -> ténac", function() {deepEqual( Stem("ténacité"), "ténac");});
test("tenaient -> ten", function() {deepEqual( Stem("tenaient"), "ten");});
test("tenais -> ten", function() {deepEqual( Stem("tenais"), "ten");});
test("tenait -> ten", function() {deepEqual( Stem("tenait"), "ten");});
test("tenant -> ten", function() {deepEqual( Stem("tenant"), "ten");});
test("tenante -> ten", function() {deepEqual( Stem("tenante"), "ten");});
test("tend -> tend", function() {deepEqual( Stem("tend"), "tend");});
test("tendaient -> tend", function() {deepEqual( Stem("tendaient"), "tend");});
test("tendait -> tend", function() {deepEqual( Stem("tendait"), "tend");});
test("tendance -> tendanc", function() {deepEqual( Stem("tendance"), "tendanc");});
test("tendent -> tendent", function() {deepEqual( Stem("tendent"), "tendent");});
test("tender -> tend", function() {deepEqual( Stem("tender"), "tend");});
test("tendit -> tend", function() {deepEqual( Stem("tendit"), "tend");});
test("tendre -> tendr", function() {deepEqual( Stem("tendre"), "tendr");});
test("tendrement -> tendr", function() {deepEqual( Stem("tendrement"), "tendr");});
test("tendres -> tendr", function() {deepEqual( Stem("tendres"), "tendr");});
test("tendresse -> tendress", function() {deepEqual( Stem("tendresse"), "tendress");});
test("tendresses -> tendress", function() {deepEqual( Stem("tendresses"), "tendress");});
test("tendu -> tendu", function() {deepEqual( Stem("tendu"), "tendu");});
test("tendue -> tendu", function() {deepEqual( Stem("tendue"), "tendu");});
test("tendues -> tendu", function() {deepEqual( Stem("tendues"), "tendu");});
test("tendus -> tendus", function() {deepEqual( Stem("tendus"), "tendus");});
test("tenerani -> teneran", function() {deepEqual( Stem("tenerani"), "teneran");});
test("tenere -> tener", function() {deepEqual( Stem("tenere"), "tener");});
test("teneur -> teneur", function() {deepEqual( Stem("teneur"), "teneur");});
test("tenez -> ten", function() {deepEqual( Stem("tenez"), "ten");});
test("tenir -> ten", function() {deepEqual( Stem("tenir"), "ten");});
test("tenons -> tenon", function() {deepEqual( Stem("tenons"), "tenon");});
test("ténor -> ténor", function() {deepEqual( Stem("ténor"), "ténor");});
test("tenta -> tent", function() {deepEqual( Stem("tenta"), "tent");});
test("tentait -> tent", function() {deepEqual( Stem("tentait"), "tent");});
test("tentation -> tentat", function() {deepEqual( Stem("tentation"), "tentat");});
test("tentations -> tentat", function() {deepEqual( Stem("tentations"), "tentat");});
test("tentative -> tentat", function() {deepEqual( Stem("tentative"), "tentat");});
test("tentatives -> tentat", function() {deepEqual( Stem("tentatives"), "tentat");});
test("tente -> tent", function() {deepEqual( Stem("tente"), "tent");});
test("tenté -> tent", function() {deepEqual( Stem("tenté"), "tent");});
test("tenter -> tent", function() {deepEqual( Stem("tenter"), "tent");});
test("tenteras -> tent", function() {deepEqual( Stem("tenteras"), "tent");});
test("tentez -> tent", function() {deepEqual( Stem("tentez"), "tent");});
test("tentures -> tentur", function() {deepEqual( Stem("tentures"), "tentur");});
test("tenu -> tenu", function() {deepEqual( Stem("tenu"), "tenu");});
test("tenue -> tenu", function() {deepEqual( Stem("tenue"), "tenu");});
test("tenues -> tenu", function() {deepEqual( Stem("tenues"), "tenu");});
test("tenus -> tenus", function() {deepEqual( Stem("tenus"), "tenus");});
test("terme -> term", function() {deepEqual( Stem("terme"), "term");});
test("termes -> term", function() {deepEqual( Stem("termes"), "term");});
test("termina -> termin", function() {deepEqual( Stem("termina"), "termin");});
test("terminaient -> termin", function() {deepEqual( Stem("terminaient"), "termin");});
test("terminait -> termin", function() {deepEqual( Stem("terminait"), "termin");});
test("termine -> termin", function() {deepEqual( Stem("termine"), "termin");});
test("terminé -> termin", function() {deepEqual( Stem("terminé"), "termin");});
test("terminée -> termin", function() {deepEqual( Stem("terminée"), "termin");});
test("terminées -> termin", function() {deepEqual( Stem("terminées"), "termin");});
test("terminer -> termin", function() {deepEqual( Stem("terminer"), "termin");});
test("terminera -> termin", function() {deepEqual( Stem("terminera"), "termin");});
test("terminèrent -> termin", function() {deepEqual( Stem("terminèrent"), "termin");});
test("ternir -> tern", function() {deepEqual( Stem("ternir"), "tern");});
test("terrain -> terrain", function() {deepEqual( Stem("terrain"), "terrain");});
test("terrains -> terrain", function() {deepEqual( Stem("terrains"), "terrain");});
test("terrasse -> terr", function() {deepEqual( Stem("terrasse"), "terr");});
test("terrassé -> terrass", function() {deepEqual( Stem("terrassé"), "terrass");});
test("terrasses -> terr", function() {deepEqual( Stem("terrasses"), "terr");});
test("terrassiers -> terrassi", function() {deepEqual( Stem("terrassiers"), "terrassi");});
test("terre -> terr", function() {deepEqual( Stem("terre"), "terr");});
test("terres -> terr", function() {deepEqual( Stem("terres"), "terr");});
test("terrestre -> terrestr", function() {deepEqual( Stem("terrestre"), "terrestr");});
test("terrestres -> terrestr", function() {deepEqual( Stem("terrestres"), "terrestr");});
test("terreur -> terreur", function() {deepEqual( Stem("terreur"), "terreur");});
test("terreurs -> terreur", function() {deepEqual( Stem("terreurs"), "terreur");});
test("terrible -> terribl", function() {deepEqual( Stem("terrible"), "terribl");});
test("terriblement -> terribl", function() {deepEqual( Stem("terriblement"), "terribl");});
test("terribles -> terribl", function() {deepEqual( Stem("terribles"), "terribl");});
test("territoire -> territoir", function() {deepEqual( Stem("territoire"), "territoir");});
test("tertio -> tertio", function() {deepEqual( Stem("tertio"), "tertio");});
test("tertre -> tertr", function() {deepEqual( Stem("tertre"), "tertr");});
test("terzo -> terzo", function() {deepEqual( Stem("terzo"), "terzo");});
test("tes -> te", function() {deepEqual( Stem("tes"), "te");});
test("testa -> test", function() {deepEqual( Stem("testa"), "test");});
test("testament -> test", function() {deepEqual( Stem("testament"), "test");});
test("tête -> têt", function() {deepEqual( Stem("tête"), "têt");});
test("têtes -> têt", function() {deepEqual( Stem("têtes"), "têt");});
test("teulier -> teuli", function() {deepEqual( Stem("teulier"), "teuli");});
test("texte -> text", function() {deepEqual( Stem("texte"), "text");});
test("textuellement -> textuel", function() {deepEqual( Stem("textuellement"), "textuel");});
test("thaler -> thal", function() {deepEqual( Stem("thaler"), "thal");});
test("that -> that", function() {deepEqual( Stem("that"), "that");});
test("the -> the", function() {deepEqual( Stem("the"), "the");});
test("thé -> thé", function() {deepEqual( Stem("thé"), "thé");});
test("théâtral -> théâtral", function() {deepEqual( Stem("théâtral"), "théâtral");});
test("théâtre -> théâtr", function() {deepEqual( Stem("théâtre"), "théâtr");});
test("théâtres -> théâtr", function() {deepEqual( Stem("théâtres"), "théâtr");});
test("theft -> theft", function() {deepEqual( Stem("theft"), "theft");});
test("thème -> them", function() {deepEqual( Stem("thème"), "them");});
test("thèmes -> them", function() {deepEqual( Stem("thèmes"), "them");});
test("thémistocle -> thémistocl", function() {deepEqual( Stem("thémistocle"), "thémistocl");});
test("then -> then", function() {deepEqual( Stem("then"), "then");});
test("théodolinde -> théodolind", function() {deepEqual( Stem("théodolinde"), "théodolind");});
test("théologie -> théolog", function() {deepEqual( Stem("théologie"), "théolog");});
test("théologien -> théologien", function() {deepEqual( Stem("théologien"), "théologien");});
test("théorie -> théor", function() {deepEqual( Stem("théorie"), "théor");});
test("théories -> théor", function() {deepEqual( Stem("théories"), "théor");});
test("théoriquement -> théoriqu", function() {deepEqual( Stem("théoriquement"), "théoriqu");});
test("there -> ther", function() {deepEqual( Stem("there"), "ther");});
test("thérèse -> théres", function() {deepEqual( Stem("thérèse"), "théres");});
test("thermomètre -> thermometr", function() {deepEqual( Stem("thermomètre"), "thermometr");});
test("thésée -> thes", function() {deepEqual( Stem("thésée"), "thes");});
test("thing -> thing", function() {deepEqual( Stem("thing"), "thing");});
test("this -> this", function() {deepEqual( Stem("this"), "this");});
test("thomas -> thom", function() {deepEqual( Stem("thomas"), "thom");});
test("though -> though", function() {deepEqual( Stem("though"), "though");});
test("thousands -> thousand", function() {deepEqual( Stem("thousands"), "thousand");});
test("thrilling -> thrilling", function() {deepEqual( Stem("thrilling"), "thrilling");});
test("thugs -> thug", function() {deepEqual( Stem("thugs"), "thug");});
test("tibère -> tiber", function() {deepEqual( Stem("tibère"), "tiber");});
test("tibi -> tib", function() {deepEqual( Stem("tibi"), "tib");});
test("tien -> tien", function() {deepEqual( Stem("tien"), "tien");});
test("tiendra -> tiendr", function() {deepEqual( Stem("tiendra"), "tiendr");});
test("tiendrait -> tiendr", function() {deepEqual( Stem("tiendrait"), "tiendr");});
test("tiendras -> tiendr", function() {deepEqual( Stem("tiendras"), "tiendr");});
test("tiendrez -> tiendr", function() {deepEqual( Stem("tiendrez"), "tiendr");});
test("tiendront -> tiendront", function() {deepEqual( Stem("tiendront"), "tiendront");});
test("tienne -> tien", function() {deepEqual( Stem("tienne"), "tien");});
test("tiennent -> tiennent", function() {deepEqual( Stem("tiennent"), "tiennent");});
test("tiens -> tien", function() {deepEqual( Stem("tiens"), "tien");});
test("tient -> tient", function() {deepEqual( Stem("tient"), "tient");});
test("tierce -> tierc", function() {deepEqual( Stem("tierce"), "tierc");});
test("tiers -> tier", function() {deepEqual( Stem("tiers"), "tier");});
test("tige -> tig", function() {deepEqual( Stem("tige"), "tig");});
test("tiges -> tig", function() {deepEqual( Stem("tiges"), "tig");});
test("tigre -> tigr", function() {deepEqual( Stem("tigre"), "tigr");});
test("tigres -> tigr", function() {deepEqual( Stem("tigres"), "tigr");});
test("tilbury -> tilbury", function() {deepEqual( Stem("tilbury"), "tilbury");});
test("tilburys -> tilbury", function() {deepEqual( Stem("tilburys"), "tilbury");});
test("tilleul -> tilleul", function() {deepEqual( Stem("tilleul"), "tilleul");});
test("tilleuls -> tilleul", function() {deepEqual( Stem("tilleuls"), "tilleul");});
test("timbre -> timbr", function() {deepEqual( Stem("timbre"), "timbr");});
test("timbrée -> timbr", function() {deepEqual( Stem("timbrée"), "timbr");});
test("timbrées -> timbr", function() {deepEqual( Stem("timbrées"), "timbr");});
test("timbres -> timbr", function() {deepEqual( Stem("timbres"), "timbr");});
test("time -> tim", function() {deepEqual( Stem("time"), "tim");});
test("times -> tim", function() {deepEqual( Stem("times"), "tim");});
test("timide -> timid", function() {deepEqual( Stem("timide"), "timid");});
test("timidement -> timid", function() {deepEqual( Stem("timidement"), "timid");});
test("timides -> timid", function() {deepEqual( Stem("timides"), "timid");});
test("timidité -> timid", function() {deepEqual( Stem("timidité"), "timid");});
test("timorée -> timor", function() {deepEqual( Stem("timorée"), "timor");});
test("tingou -> tingou", function() {deepEqual( Stem("tingou"), "tingou");});
test("tinrent -> tinrent", function() {deepEqual( Stem("tinrent"), "tinrent");});
test("tinssent -> tinssent", function() {deepEqual( Stem("tinssent"), "tinssent");});
test("tint -> tint", function() {deepEqual( Stem("tint"), "tint");});
test("tînt -> tînt", function() {deepEqual( Stem("tînt"), "tînt");});
test("tintamarre -> tintamarr", function() {deepEqual( Stem("tintamarre"), "tintamarr");});
test("tinte -> tint", function() {deepEqual( Stem("tinte"), "tint");});
test("tira -> tir", function() {deepEqual( Stem("tira"), "tir");});
test("tirade -> tirad", function() {deepEqual( Stem("tirade"), "tirad");});
test("tirades -> tirad", function() {deepEqual( Stem("tirades"), "tirad");});
test("tirage -> tirag", function() {deepEqual( Stem("tirage"), "tirag");});
test("tiraient -> tir", function() {deepEqual( Stem("tiraient"), "tir");});
test("tiraillé -> tiraill", function() {deepEqual( Stem("tiraillé"), "tiraill");});
test("tirailler -> tiraill", function() {deepEqual( Stem("tirailler"), "tiraill");});
test("tirait -> tir", function() {deepEqual( Stem("tirait"), "tir");});
test("tirant -> tir", function() {deepEqual( Stem("tirant"), "tir");});
test("tirât -> tir", function() {deepEqual( Stem("tirât"), "tir");});
test("tire -> tir", function() {deepEqual( Stem("tire"), "tir");});
test("tiré -> tir", function() {deepEqual( Stem("tiré"), "tir");});
test("tirée -> tir", function() {deepEqual( Stem("tirée"), "tir");});
test("tirent -> tirent", function() {deepEqual( Stem("tirent"), "tirent");});
test("tirer -> tir", function() {deepEqual( Stem("tirer"), "tir");});
test("tirera -> tir", function() {deepEqual( Stem("tirera"), "tir");});
test("tireraient -> tir", function() {deepEqual( Stem("tireraient"), "tir");});
test("tirerais -> tir", function() {deepEqual( Stem("tirerais"), "tir");});
test("tirerait -> tir", function() {deepEqual( Stem("tirerait"), "tir");});
test("tirèrent -> tir", function() {deepEqual( Stem("tirèrent"), "tir");});
test("tirerez -> tir", function() {deepEqual( Stem("tirerez"), "tir");});
test("tirés -> tir", function() {deepEqual( Stem("tirés"), "tir");});
test("tirez -> tir", function() {deepEqual( Stem("tirez"), "tir");});
test("tiroir -> tiroir", function() {deepEqual( Stem("tiroir"), "tiroir");});
test("tissu -> tissu", function() {deepEqual( Stem("tissu"), "tissu");});
test("tissue -> tissu", function() {deepEqual( Stem("tissue"), "tissu");});
test("tite -> tit", function() {deepEqual( Stem("tite"), "tit");});
test("titre -> titr", function() {deepEqual( Stem("titre"), "titr");});
test("titres -> titr", function() {deepEqual( Stem("titres"), "titr");});
test("titubant -> titub", function() {deepEqual( Stem("titubant"), "titub");});
test("titulaire -> titulair", function() {deepEqual( Stem("titulaire"), "titulair");});
test("to -> to", function() {deepEqual( Stem("to"), "to");});
test("together -> togeth", function() {deepEqual( Stem("together"), "togeth");});
test("toi -> toi", function() {deepEqual( Stem("toi"), "toi");});
test("toile -> toil", function() {deepEqual( Stem("toile"), "toil");});
test("toiles -> toil", function() {deepEqual( Stem("toiles"), "toil");});
test("toilette -> toilet", function() {deepEqual( Stem("toilette"), "toilet");});
test("toilettes -> toilet", function() {deepEqual( Stem("toilettes"), "toilet");});
test("toisait -> tois", function() {deepEqual( Stem("toisait"), "tois");});
test("toisant -> tois", function() {deepEqual( Stem("toisant"), "tois");});
test("toises -> tois", function() {deepEqual( Stem("toises"), "tois");});
test("toison -> toison", function() {deepEqual( Stem("toison"), "toison");});
test("toit -> toit", function() {deepEqual( Stem("toit"), "toit");});
test("toits -> toit", function() {deepEqual( Stem("toits"), "toit");});
test("toiture -> toitur", function() {deepEqual( Stem("toiture"), "toitur");});
test("tolède -> toled", function() {deepEqual( Stem("tolède"), "toled");});
test("tolèrent -> tol", function() {deepEqual( Stem("tolèrent"), "tol");});
test("tolérer -> toler", function() {deepEqual( Stem("tolérer"), "toler");});
test("tolly -> tolly", function() {deepEqual( Stem("tolly"), "tolly");});
test("tomba -> tomb", function() {deepEqual( Stem("tomba"), "tomb");});
test("tombaient -> tomb", function() {deepEqual( Stem("tombaient"), "tomb");});
test("tombait -> tomb", function() {deepEqual( Stem("tombait"), "tomb");});
test("tombant -> tomb", function() {deepEqual( Stem("tombant"), "tomb");});
test("tombante -> tomb", function() {deepEqual( Stem("tombante"), "tomb");});
test("tombassent -> tomb", function() {deepEqual( Stem("tombassent"), "tomb");});
test("tombât -> tomb", function() {deepEqual( Stem("tombât"), "tomb");});
test("tombe -> tomb", function() {deepEqual( Stem("tombe"), "tomb");});
test("tombé -> tomb", function() {deepEqual( Stem("tombé"), "tomb");});
test("tombeau -> tombeau", function() {deepEqual( Stem("tombeau"), "tombeau");});
test("tombeaux -> tombeau", function() {deepEqual( Stem("tombeaux"), "tombeau");});
test("tombée -> tomb", function() {deepEqual( Stem("tombée"), "tomb");});
test("tombent -> tombent", function() {deepEqual( Stem("tombent"), "tombent");});
test("tomber -> tomb", function() {deepEqual( Stem("tomber"), "tomb");});
test("tomberai -> tomb", function() {deepEqual( Stem("tomberai"), "tomb");});
test("tomberaient -> tomb", function() {deepEqual( Stem("tomberaient"), "tomb");});
test("tomberais -> tomb", function() {deepEqual( Stem("tomberais"), "tomb");});
test("tombèrent -> tomb", function() {deepEqual( Stem("tombèrent"), "tomb");});
test("tomberont -> tomb", function() {deepEqual( Stem("tomberont"), "tomb");});
test("tombés -> tomb", function() {deepEqual( Stem("tombés"), "tomb");});
test("tombez -> tomb", function() {deepEqual( Stem("tombez"), "tomb");});
test("tombone -> tombon", function() {deepEqual( Stem("tombone"), "tombon");});
test("tome -> tom", function() {deepEqual( Stem("tome"), "tom");});
test("tomes -> tom", function() {deepEqual( Stem("tomes"), "tom");});
test("ton -> ton", function() {deepEqual( Stem("ton"), "ton");});
test("tonalités -> tonal", function() {deepEqual( Stem("tonalités"), "tonal");});
test("tondre -> tondr", function() {deepEqual( Stem("tondre"), "tondr");});
test("tonnage -> tonnag", function() {deepEqual( Stem("tonnage"), "tonnag");});
test("tonnaient -> ton", function() {deepEqual( Stem("tonnaient"), "ton");});
test("tonnante -> ton", function() {deepEqual( Stem("tonnante"), "ton");});
test("tonne -> ton", function() {deepEqual( Stem("tonne"), "ton");});
test("tonneaux -> tonneau", function() {deepEqual( Stem("tonneaux"), "tonneau");});
test("tonnelier -> tonneli", function() {deepEqual( Stem("tonnelier"), "tonneli");});
test("tonnerre -> tonnerr", function() {deepEqual( Stem("tonnerre"), "tonnerr");});
test("tonnerres -> tonnerr", function() {deepEqual( Stem("tonnerres"), "tonnerr");});
test("tonnes -> ton", function() {deepEqual( Stem("tonnes"), "ton");});
test("tonte -> tont", function() {deepEqual( Stem("tonte"), "tont");});
test("too -> too", function() {deepEqual( Stem("too"), "too");});
test("toque -> toqu", function() {deepEqual( Stem("toque"), "toqu");});
test("torche -> torch", function() {deepEqual( Stem("torche"), "torch");});
test("torches -> torch", function() {deepEqual( Stem("torches"), "torch");});
test("torchon -> torchon", function() {deepEqual( Stem("torchon"), "torchon");});
test("tordait -> tord", function() {deepEqual( Stem("tordait"), "tord");});
test("tordant -> tord", function() {deepEqual( Stem("tordant"), "tord");});
test("tordit -> tord", function() {deepEqual( Stem("tordit"), "tord");});
test("tordre -> tordr", function() {deepEqual( Stem("tordre"), "tordr");});
test("tords -> tord", function() {deepEqual( Stem("tords"), "tord");});
test("torpeur -> torpeur", function() {deepEqual( Stem("torpeur"), "torpeur");});
test("torrent -> torrent", function() {deepEqual( Stem("torrent"), "torrent");});
test("torrents -> torrent", function() {deepEqual( Stem("torrents"), "torrent");});
test("torsade -> torsad", function() {deepEqual( Stem("torsade"), "torsad");});
test("torses -> tors", function() {deepEqual( Stem("torses"), "tors");});
test("tort -> tort", function() {deepEqual( Stem("tort"), "tort");});
test("torto -> torto", function() {deepEqual( Stem("torto"), "torto");});
test("tortoni -> torton", function() {deepEqual( Stem("tortoni"), "torton");});
test("torts -> tort", function() {deepEqual( Stem("torts"), "tort");});
test("tortue -> tortu", function() {deepEqual( Stem("tortue"), "tortu");});
test("tortues -> tortu", function() {deepEqual( Stem("tortues"), "tortu");});
test("tortura -> tortur", function() {deepEqual( Stem("tortura"), "tortur");});
test("torturait -> tortur", function() {deepEqual( Stem("torturait"), "tortur");});
test("torture -> tortur", function() {deepEqual( Stem("torture"), "tortur");});
test("torturé -> tortur", function() {deepEqual( Stem("torturé"), "tortur");});
test("torturer -> tortur", function() {deepEqual( Stem("torturer"), "tortur");});
test("tortures -> tortur", function() {deepEqual( Stem("tortures"), "tortur");});
test("toscane -> toscan", function() {deepEqual( Stem("toscane"), "toscan");});
test("tôt -> tôt", function() {deepEqual( Stem("tôt"), "tôt");});
test("total -> total", function() {deepEqual( Stem("total"), "total");});
test("totale -> total", function() {deepEqual( Stem("totale"), "total");});
test("totalement -> total", function() {deepEqual( Stem("totalement"), "total");});
test("toto -> toto", function() {deepEqual( Stem("toto"), "toto");});
test("toucha -> touch", function() {deepEqual( Stem("toucha"), "touch");});
test("touchaient -> touch", function() {deepEqual( Stem("touchaient"), "touch");});
test("touchais -> touch", function() {deepEqual( Stem("touchais"), "touch");});
test("touchait -> touch", function() {deepEqual( Stem("touchait"), "touch");});
test("touchant -> touch", function() {deepEqual( Stem("touchant"), "touch");});
test("touchante -> touch", function() {deepEqual( Stem("touchante"), "touch");});
test("touchantes -> touch", function() {deepEqual( Stem("touchantes"), "touch");});
test("touchants -> touch", function() {deepEqual( Stem("touchants"), "touch");});
test("touchât -> touch", function() {deepEqual( Stem("touchât"), "touch");});
test("touche -> touch", function() {deepEqual( Stem("touche"), "touch");});
test("touché -> touch", function() {deepEqual( Stem("touché"), "touch");});
test("touchée -> touch", function() {deepEqual( Stem("touchée"), "touch");});
test("toucher -> touch", function() {deepEqual( Stem("toucher"), "touch");});
test("touchera -> touch", function() {deepEqual( Stem("touchera"), "touch");});
test("toucherez -> touch", function() {deepEqual( Stem("toucherez"), "touch");});
test("toucheront -> touch", function() {deepEqual( Stem("toucheront"), "touch");});
test("touches -> touch", function() {deepEqual( Stem("touches"), "touch");});
test("touchés -> touch", function() {deepEqual( Stem("touchés"), "touch");});
test("touffe -> touff", function() {deepEqual( Stem("touffe"), "touff");});
test("touffes -> touff", function() {deepEqual( Stem("touffes"), "touff");});
test("touffu -> touffu", function() {deepEqual( Stem("touffu"), "touffu");});
test("touffus -> touffus", function() {deepEqual( Stem("touffus"), "touffus");});
test("toujours -> toujour", function() {deepEqual( Stem("toujours"), "toujour");});
test("toulouse -> toulous", function() {deepEqual( Stem("toulouse"), "toulous");});
test("toupie -> toup", function() {deepEqual( Stem("toupie"), "toup");});
test("toupies -> toup", function() {deepEqual( Stem("toupies"), "toup");});
test("tour -> tour", function() {deepEqual( Stem("tour"), "tour");});
test("tourbillon -> tourbillon", function() {deepEqual( Stem("tourbillon"), "tourbillon");});
test("tourbillonnait -> tourbillon", function() {deepEqual( Stem("tourbillonnait"), "tourbillon");});
test("tourbillons -> tourbillon", function() {deepEqual( Stem("tourbillons"), "tourbillon");});
test("touriste -> tourist", function() {deepEqual( Stem("touriste"), "tourist");});
test("tourment -> tourment", function() {deepEqual( Stem("tourment"), "tourment");});
test("tourmentait -> tourment", function() {deepEqual( Stem("tourmentait"), "tourment");});
test("tourmente -> tourment", function() {deepEqual( Stem("tourmente"), "tourment");});
test("tourmenté -> tourment", function() {deepEqual( Stem("tourmenté"), "tourment");});
test("tourmentée -> tourment", function() {deepEqual( Stem("tourmentée"), "tourment");});
test("tourmentés -> tourment", function() {deepEqual( Stem("tourmentés"), "tourment");});
test("tourmentin -> tourmentin", function() {deepEqual( Stem("tourmentin"), "tourmentin");});
test("tourments -> tourment", function() {deepEqual( Stem("tourments"), "tourment");});
test("tourna -> tourn", function() {deepEqual( Stem("tourna"), "tourn");});
test("tournai -> tourn", function() {deepEqual( Stem("tournai"), "tourn");});
test("tournaient -> tourn", function() {deepEqual( Stem("tournaient"), "tourn");});
test("tournait -> tourn", function() {deepEqual( Stem("tournait"), "tourn");});
test("tournant -> tourn", function() {deepEqual( Stem("tournant"), "tourn");});
test("tournante -> tourn", function() {deepEqual( Stem("tournante"), "tourn");});
test("tournantes -> tourn", function() {deepEqual( Stem("tournantes"), "tourn");});
test("tourne -> tourn", function() {deepEqual( Stem("tourne"), "tourn");});
test("tourné -> tourn", function() {deepEqual( Stem("tourné"), "tourn");});
test("tournée -> tourn", function() {deepEqual( Stem("tournée"), "tourn");});
test("tournées -> tourn", function() {deepEqual( Stem("tournées"), "tourn");});
test("tournent -> tournent", function() {deepEqual( Stem("tournent"), "tournent");});
test("tourner -> tourn", function() {deepEqual( Stem("tourner"), "tourn");});
test("tournera -> tourn", function() {deepEqual( Stem("tournera"), "tourn");});
test("tournèrent -> tourn", function() {deepEqual( Stem("tournèrent"), "tourn");});
test("tourniquets -> tourniquet", function() {deepEqual( Stem("tourniquets"), "tourniquet");});
test("tournoyant -> tournoi", function() {deepEqual( Stem("tournoyant"), "tournoi");});
test("tournure -> tournur", function() {deepEqual( Stem("tournure"), "tournur");});
test("tournures -> tournur", function() {deepEqual( Stem("tournures"), "tournur");});
test("tours -> tour", function() {deepEqual( Stem("tours"), "tour");});
test("tous -> tous", function() {deepEqual( Stem("tous"), "tous");});
test("toussa -> touss", function() {deepEqual( Stem("toussa"), "touss");});
test("tousser -> touss", function() {deepEqual( Stem("tousser"), "touss");});
test("tout -> tout", function() {deepEqual( Stem("tout"), "tout");});
test("toute -> tout", function() {deepEqual( Stem("toute"), "tout");});
test("toutefois -> toutefois", function() {deepEqual( Stem("toutefois"), "toutefois");});
test("toutes -> tout", function() {deepEqual( Stem("toutes"), "tout");});
test("tr -> tr", function() {deepEqual( Stem("tr"), "tr");});
test("trac -> trac", function() {deepEqual( Stem("trac"), "trac");});
test("traçait -> trac", function() {deepEqual( Stem("traçait"), "trac");});
test("tracasse -> trac", function() {deepEqual( Stem("tracasse"), "trac");});
test("tracasserie -> tracasser", function() {deepEqual( Stem("tracasserie"), "tracasser");});
test("tracasseries -> tracasser", function() {deepEqual( Stem("tracasseries"), "tracasser");});
test("trace -> trac", function() {deepEqual( Stem("trace"), "trac");});
test("tracé -> trac", function() {deepEqual( Stem("tracé"), "trac");});
test("tracée -> trac", function() {deepEqual( Stem("tracée"), "trac");});
test("tracées -> trac", function() {deepEqual( Stem("tracées"), "trac");});
test("tracer -> trac", function() {deepEqual( Stem("tracer"), "trac");});
test("traces -> trac", function() {deepEqual( Stem("traces"), "trac");});
test("tracés -> trac", function() {deepEqual( Stem("tracés"), "trac");});
test("traction -> traction", function() {deepEqual( Stem("traction"), "traction");});
test("tradition -> tradit", function() {deepEqual( Stem("tradition"), "tradit");});
test("traduction -> traduct", function() {deepEqual( Stem("traduction"), "traduct");});
test("traduire -> traduir", function() {deepEqual( Stem("traduire"), "traduir");});
test("traduis -> traduis", function() {deepEqual( Stem("traduis"), "traduis");});
test("traduit -> traduit", function() {deepEqual( Stem("traduit"), "traduit");});
test("traduite -> traduit", function() {deepEqual( Stem("traduite"), "traduit");});
test("traduites -> traduit", function() {deepEqual( Stem("traduites"), "traduit");});
test("tragédie -> traged", function() {deepEqual( Stem("tragédie"), "traged");});
test("tragique -> tragiqu", function() {deepEqual( Stem("tragique"), "tragiqu");});
test("tragiques -> tragiqu", function() {deepEqual( Stem("tragiques"), "tragiqu");});
test("trahi -> trah", function() {deepEqual( Stem("trahi"), "trah");});
test("trahie -> trah", function() {deepEqual( Stem("trahie"), "trah");});
test("trahies -> trah", function() {deepEqual( Stem("trahies"), "trah");});
test("trahir -> trah", function() {deepEqual( Stem("trahir"), "trah");});
test("trahira -> trah", function() {deepEqual( Stem("trahira"), "trah");});
test("trahirais -> trah", function() {deepEqual( Stem("trahirais"), "trah");});
test("trahirait -> trah", function() {deepEqual( Stem("trahirait"), "trah");});
test("trahiriez -> trah", function() {deepEqual( Stem("trahiriez"), "trah");});
test("trahiront -> trah", function() {deepEqual( Stem("trahiront"), "trah");});
test("trahis -> trah", function() {deepEqual( Stem("trahis"), "trah");});
test("trahison -> trahison", function() {deepEqual( Stem("trahison"), "trahison");});
test("trahissaient -> trah", function() {deepEqual( Stem("trahissaient"), "trah");});
test("trahissait -> trah", function() {deepEqual( Stem("trahissait"), "trah");});
test("trahissant -> trah", function() {deepEqual( Stem("trahissant"), "trah");});
test("trahisse -> trah", function() {deepEqual( Stem("trahisse"), "trah");});
test("trahissez -> trah", function() {deepEqual( Stem("trahissez"), "trah");});
test("trahit -> trah", function() {deepEqual( Stem("trahit"), "trah");});
test("trahît -> trah", function() {deepEqual( Stem("trahît"), "trah");});
test("train -> train", function() {deepEqual( Stem("train"), "train");});
test("traînaient -> traîn", function() {deepEqual( Stem("traînaient"), "traîn");});
test("traînait -> traîn", function() {deepEqual( Stem("traînait"), "traîn");});
test("traînante -> traîn", function() {deepEqual( Stem("traînante"), "traîn");});
test("traînard -> traînard", function() {deepEqual( Stem("traînard"), "traînard");});
test("traîné -> traîn", function() {deepEqual( Stem("traîné"), "traîn");});
test("traîneau -> traîneau", function() {deepEqual( Stem("traîneau"), "traîneau");});
test("traîneaux -> traîneau", function() {deepEqual( Stem("traîneaux"), "traîneau");});
test("traînée -> traîn", function() {deepEqual( Stem("traînée"), "traîn");});
test("traînées -> traîn", function() {deepEqual( Stem("traînées"), "traîn");});
test("traîner -> traîn", function() {deepEqual( Stem("traîner"), "traîn");});
test("trains -> train", function() {deepEqual( Stem("trains"), "train");});
test("trait -> trait", function() {deepEqual( Stem("trait"), "trait");});
test("traita -> trait", function() {deepEqual( Stem("traita"), "trait");});
test("traitait -> trait", function() {deepEqual( Stem("traitait"), "trait");});
test("traitant -> trait", function() {deepEqual( Stem("traitant"), "trait");});
test("traitât -> trait", function() {deepEqual( Stem("traitât"), "trait");});
test("traite -> trait", function() {deepEqual( Stem("traite"), "trait");});
test("traité -> trait", function() {deepEqual( Stem("traité"), "trait");});
test("traitée -> trait", function() {deepEqual( Stem("traitée"), "trait");});
test("traitement -> trait", function() {deepEqual( Stem("traitement"), "trait");});
test("traitent -> traitent", function() {deepEqual( Stem("traitent"), "traitent");});
test("traiter -> trait", function() {deepEqual( Stem("traiter"), "trait");});
test("traitera -> trait", function() {deepEqual( Stem("traitera"), "trait");});
test("traitèrent -> trait", function() {deepEqual( Stem("traitèrent"), "trait");});
test("traités -> trait", function() {deepEqual( Stem("traités"), "trait");});
test("traitez -> trait", function() {deepEqual( Stem("traitez"), "trait");});
test("traître -> traîtr", function() {deepEqual( Stem("traître"), "traîtr");});
test("traîtreusement -> traîtreux", function() {deepEqual( Stem("traîtreusement"), "traîtreux");});
test("traits -> trait", function() {deepEqual( Stem("traits"), "trait");});
test("trajectoires -> trajectoir", function() {deepEqual( Stem("trajectoires"), "trajectoir");});
test("trajet -> trajet", function() {deepEqual( Stem("trajet"), "trajet");});
test("trame -> tram", function() {deepEqual( Stem("trame"), "tram");});
test("tramezzina -> tramezzin", function() {deepEqual( Stem("tramezzina"), "tramezzin");});
test("tramways -> tramway", function() {deepEqual( Stem("tramways"), "tramway");});
test("tranchait -> tranch", function() {deepEqual( Stem("tranchait"), "tranch");});
test("tranchant -> tranch", function() {deepEqual( Stem("tranchant"), "tranch");});
test("tranchants -> tranch", function() {deepEqual( Stem("tranchants"), "tranch");});
test("tranche -> tranch", function() {deepEqual( Stem("tranche"), "tranch");});
test("tranchée -> tranch", function() {deepEqual( Stem("tranchée"), "tranch");});
test("tranchées -> tranch", function() {deepEqual( Stem("tranchées"), "tranch");});
test("tranches -> tranch", function() {deepEqual( Stem("tranches"), "tranch");});
test("tranchés -> tranch", function() {deepEqual( Stem("tranchés"), "tranch");});
test("tranquille -> tranquill", function() {deepEqual( Stem("tranquille"), "tranquill");});
test("tranquillement -> tranquill", function() {deepEqual( Stem("tranquillement"), "tranquill");});
test("tranquilles -> tranquill", function() {deepEqual( Stem("tranquilles"), "tranquill");});
test("tranquillise -> tranquillis", function() {deepEqual( Stem("tranquillise"), "tranquillis");});
test("tranquillisée -> tranquillis", function() {deepEqual( Stem("tranquillisée"), "tranquillis");});
test("tranquilliserait -> tranquillis", function() {deepEqual( Stem("tranquilliserait"), "tranquillis");});
test("tranquillisez -> tranquillis", function() {deepEqual( Stem("tranquillisez"), "tranquillis");});
test("tranquillité -> tranquill", function() {deepEqual( Stem("tranquillité"), "tranquill");});
test("transaction -> transact", function() {deepEqual( Stem("transaction"), "transact");});
test("transactions -> transact", function() {deepEqual( Stem("transactions"), "transact");});
test("transatlantique -> transatlant", function() {deepEqual( Stem("transatlantique"), "transatlant");});
test("transatlantiques -> transatlant", function() {deepEqual( Stem("transatlantiques"), "transatlant");});
test("transcrire -> transcrir", function() {deepEqual( Stem("transcrire"), "transcrir");});
test("transcrit -> transcr", function() {deepEqual( Stem("transcrit"), "transcr");});
test("transcrivait -> transcriv", function() {deepEqual( Stem("transcrivait"), "transcriv");});
test("transcrivant -> transcriv", function() {deepEqual( Stem("transcrivant"), "transcriv");});
test("transcrivit -> transcriv", function() {deepEqual( Stem("transcrivit"), "transcriv");});
test("transes -> trans", function() {deepEqual( Stem("transes"), "trans");});
test("transfèrement -> transfer", function() {deepEqual( Stem("transfèrement"), "transfer");});
test("transférer -> transfer", function() {deepEqual( Stem("transférer"), "transfer");});
test("transfigure -> transfigur", function() {deepEqual( Stem("transfigure"), "transfigur");});
test("transforma -> transform", function() {deepEqual( Stem("transforma"), "transform");});
test("transformant -> transform", function() {deepEqual( Stem("transformant"), "transform");});
test("transformé -> transform", function() {deepEqual( Stem("transformé"), "transform");});
test("transformée -> transform", function() {deepEqual( Stem("transformée"), "transform");});
test("transforment -> transforment", function() {deepEqual( Stem("transforment"), "transforment");});
test("transformer -> transform", function() {deepEqual( Stem("transformer"), "transform");});
test("transformés -> transform", function() {deepEqual( Stem("transformés"), "transform");});
test("transfuge -> transfug", function() {deepEqual( Stem("transfuge"), "transfug");});
test("transgression -> transgress", function() {deepEqual( Stem("transgression"), "transgress");});
test("transie -> trans", function() {deepEqual( Stem("transie"), "trans");});
test("transiger -> transig", function() {deepEqual( Stem("transiger"), "transig");});
test("transire -> transir", function() {deepEqual( Stem("transire"), "transir");});
test("transit -> trans", function() {deepEqual( Stem("transit"), "trans");});
test("transmettre -> transmettr", function() {deepEqual( Stem("transmettre"), "transmettr");});
test("transmise -> transmis", function() {deepEqual( Stem("transmise"), "transmis");});
test("transmissible -> transmissibl", function() {deepEqual( Stem("transmissible"), "transmissibl");});
test("transmit -> transm", function() {deepEqual( Stem("transmit"), "transm");});
test("transocéanienne -> transocéanien", function() {deepEqual( Stem("transocéanienne"), "transocéanien");});
test("transocéaniennes -> transocéanien", function() {deepEqual( Stem("transocéaniennes"), "transocéanien");});
test("transparents -> transparent", function() {deepEqual( Stem("transparents"), "transparent");});
test("transport -> transport", function() {deepEqual( Stem("transport"), "transport");});
test("transporta -> transport", function() {deepEqual( Stem("transporta"), "transport");});
test("transportait -> transport", function() {deepEqual( Stem("transportait"), "transport");});
test("transportât -> transport", function() {deepEqual( Stem("transportât"), "transport");});
test("transporté -> transport", function() {deepEqual( Stem("transporté"), "transport");});
test("transportée -> transport", function() {deepEqual( Stem("transportée"), "transport");});
test("transporter -> transport", function() {deepEqual( Stem("transporter"), "transport");});
test("transports -> transport", function() {deepEqual( Stem("transports"), "transport");});
test("transversale -> transversal", function() {deepEqual( Stem("transversale"), "transversal");});
test("trapp -> trapp", function() {deepEqual( Stem("trapp"), "trapp");});
test("trappe -> trapp", function() {deepEqual( Stem("trappe"), "trapp");});
test("trappes -> trapp", function() {deepEqual( Stem("trappes"), "trapp");});
test("trappiste -> trappist", function() {deepEqual( Stem("trappiste"), "trappist");});
test("trapues -> trapu", function() {deepEqual( Stem("trapues"), "trapu");});
test("traqué -> traqu", function() {deepEqual( Stem("traqué"), "traqu");});
test("trattamento -> trattamento", function() {deepEqual( Stem("trattamento"), "trattamento");});
test("trattoria -> trattori", function() {deepEqual( Stem("trattoria"), "trattori");});
test("travail -> travail", function() {deepEqual( Stem("travail"), "travail");});
test("travailla -> travaill", function() {deepEqual( Stem("travailla"), "travaill");});
test("travaillaient -> travaill", function() {deepEqual( Stem("travaillaient"), "travaill");});
test("travaillait -> travaill", function() {deepEqual( Stem("travaillait"), "travaill");});
test("travaille -> travaill", function() {deepEqual( Stem("travaille"), "travaill");});
test("travaillé -> travaill", function() {deepEqual( Stem("travaillé"), "travaill");});
test("travailler -> travaill", function() {deepEqual( Stem("travailler"), "travaill");});
test("travailleurs -> travailleur", function() {deepEqual( Stem("travailleurs"), "travailleur");});
test("travaux -> traval", function() {deepEqual( Stem("travaux"), "traval");});
test("travers -> traver", function() {deepEqual( Stem("travers"), "traver");});
test("traversa -> travers", function() {deepEqual( Stem("traversa"), "travers");});
test("traversaient -> travers", function() {deepEqual( Stem("traversaient"), "travers");});
test("traversait -> travers", function() {deepEqual( Stem("traversait"), "travers");});
test("traversant -> travers", function() {deepEqual( Stem("traversant"), "travers");});
test("traverse -> travers", function() {deepEqual( Stem("traverse"), "travers");});
test("traversé -> travers", function() {deepEqual( Stem("traversé"), "travers");});
test("traversee -> traverse", function() {deepEqual( Stem("traversee"), "traverse");});
test("traversée -> travers", function() {deepEqual( Stem("traversée"), "travers");});
test("traversées -> travers", function() {deepEqual( Stem("traversées"), "travers");});
test("traversent -> traversent", function() {deepEqual( Stem("traversent"), "traversent");});
test("traverser -> travers", function() {deepEqual( Stem("traverser"), "travers");});
test("traverserai -> travers", function() {deepEqual( Stem("traverserai"), "travers");});
test("traversèrent -> travers", function() {deepEqual( Stem("traversèrent"), "travers");});
test("traversés -> travers", function() {deepEqual( Stem("traversés"), "travers");});
test("traversez -> travers", function() {deepEqual( Stem("traversez"), "travers");});
test("trébuchant -> trébuch", function() {deepEqual( Stem("trébuchant"), "trébuch");});
test("tredici -> tredic", function() {deepEqual( Stem("tredici"), "tredic");});
test("treize -> treiz", function() {deepEqual( Stem("treize"), "treiz");});
test("treizième -> treiziem", function() {deepEqual( Stem("treizième"), "treiziem");});
test("trembla -> trembl", function() {deepEqual( Stem("trembla"), "trembl");});
test("tremblaient -> trembl", function() {deepEqual( Stem("tremblaient"), "trembl");});
test("tremblais -> trembl", function() {deepEqual( Stem("tremblais"), "trembl");});
test("tremblait -> trembl", function() {deepEqual( Stem("tremblait"), "trembl");});
test("tremblant -> trembl", function() {deepEqual( Stem("tremblant"), "trembl");});
test("tremblante -> trembl", function() {deepEqual( Stem("tremblante"), "trembl");});
test("tremblantes -> trembl", function() {deepEqual( Stem("tremblantes"), "trembl");});
test("tremble -> trembl", function() {deepEqual( Stem("tremble"), "trembl");});
test("tremblé -> trembl", function() {deepEqual( Stem("tremblé"), "trembl");});
test("tremblement -> trembl", function() {deepEqual( Stem("tremblement"), "trembl");});
test("trembler -> trembl", function() {deepEqual( Stem("trembler"), "trembl");});
test("tremblera -> trembl", function() {deepEqual( Stem("tremblera"), "trembl");});
test("tremblerai -> trembl", function() {deepEqual( Stem("tremblerai"), "trembl");});
test("trembleront -> trembl", function() {deepEqual( Stem("trembleront"), "trembl");});
test("tremblez -> trembl", function() {deepEqual( Stem("tremblez"), "trembl");});
test("trempe -> tremp", function() {deepEqual( Stem("trempe"), "tremp");});
test("trempé -> tremp", function() {deepEqual( Stem("trempé"), "tremp");});
test("tremper -> tremp", function() {deepEqual( Stem("tremper"), "tremp");});
test("tremplin -> tremplin", function() {deepEqual( Stem("tremplin"), "tremplin");});
test("tremulously -> tremulously", function() {deepEqual( Stem("tremulously"), "tremulously");});
test("trentaine -> trentain", function() {deepEqual( Stem("trentaine"), "trentain");});
test("trente -> trent", function() {deepEqual( Stem("trente"), "trent");});
test("trépas -> trep", function() {deepEqual( Stem("trépas"), "trep");});
test("tres -> tre", function() {deepEqual( Stem("tres"), "tre");});
test("très -> tres", function() {deepEqual( Stem("très"), "tres");});
test("trésor -> trésor", function() {deepEqual( Stem("trésor"), "trésor");});
test("trésors -> trésor", function() {deepEqual( Stem("trésors"), "trésor");});
test("tressailli -> tressaill", function() {deepEqual( Stem("tressailli"), "tressaill");});
test("tressaillir -> tressaill", function() {deepEqual( Stem("tressaillir"), "tressaill");});
test("tressaillit -> tressaill", function() {deepEqual( Stem("tressaillit"), "tressaill");});
test("tresse -> tress", function() {deepEqual( Stem("tresse"), "tress");});
test("tressé -> tress", function() {deepEqual( Stem("tressé"), "tress");});
test("trêve -> trêv", function() {deepEqual( Stem("trêve"), "trêv");});
test("trévise -> trévis", function() {deepEqual( Stem("trévise"), "trévis");});
test("triangle -> triangl", function() {deepEqual( Stem("triangle"), "triangl");});
test("triangulaire -> triangulair", function() {deepEqual( Stem("triangulaire"), "triangulair");});
test("tribu -> tribu", function() {deepEqual( Stem("tribu"), "tribu");});
test("tribun -> tribun", function() {deepEqual( Stem("tribun"), "tribun");});
test("tribunal -> tribunal", function() {deepEqual( Stem("tribunal"), "tribunal");});
test("tribunaux -> tribunal", function() {deepEqual( Stem("tribunaux"), "tribunal");});
test("tribune -> tribun", function() {deepEqual( Stem("tribune"), "tribun");});
test("tributaires -> tributair", function() {deepEqual( Stem("tributaires"), "tributair");});
test("tric -> tric", function() {deepEqual( Stem("tric"), "tric");});
test("tricolore -> tricolor", function() {deepEqual( Stem("tricolore"), "tricolor");});
test("trinquette -> trinquet", function() {deepEqual( Stem("trinquette"), "trinquet");});
test("trio -> trio", function() {deepEqual( Stem("trio"), "trio");});
test("triompha -> triomph", function() {deepEqual( Stem("triompha"), "triomph");});
test("triomphait -> triomph", function() {deepEqual( Stem("triomphait"), "triomph");});
test("triomphale -> triomphal", function() {deepEqual( Stem("triomphale"), "triomphal");});
test("triomphant -> triomph", function() {deepEqual( Stem("triomphant"), "triomph");});
test("triomphante -> triomph", function() {deepEqual( Stem("triomphante"), "triomph");});
test("triomphe -> triomph", function() {deepEqual( Stem("triomphe"), "triomph");});
test("triomphé -> triomph", function() {deepEqual( Stem("triomphé"), "triomph");});
test("triomphent -> triomphent", function() {deepEqual( Stem("triomphent"), "triomphent");});
test("triompher -> triomph", function() {deepEqual( Stem("triompher"), "triomph");});
test("triomphera -> triomph", function() {deepEqual( Stem("triomphera"), "triomph");});
test("triompherait -> triomph", function() {deepEqual( Stem("triompherait"), "triomph");});
test("triompheront -> triomph", function() {deepEqual( Stem("triompheront"), "triomph");});
test("triomphes -> triomph", function() {deepEqual( Stem("triomphes"), "triomph");});
test("triple -> tripl", function() {deepEqual( Stem("triple"), "tripl");});
test("triplé -> tripl", function() {deepEqual( Stem("triplé"), "tripl");});
test("triste -> trist", function() {deepEqual( Stem("triste"), "trist");});
test("tristement -> trist", function() {deepEqual( Stem("tristement"), "trist");});
test("tristes -> trist", function() {deepEqual( Stem("tristes"), "trist");});
test("tristesse -> tristess", function() {deepEqual( Stem("tristesse"), "tristess");});
test("tristesses -> tristess", function() {deepEqual( Stem("tristesses"), "tristess");});
test("triumvirat -> triumvirat", function() {deepEqual( Stem("triumvirat"), "triumvirat");});
test("triviale -> trivial", function() {deepEqual( Stem("triviale"), "trivial");});
test("trois -> trois", function() {deepEqual( Stem("trois"), "trois");});
test("troisième -> troisiem", function() {deepEqual( Stem("troisième"), "troisiem");});
test("troisièmes -> troisiem", function() {deepEqual( Stem("troisièmes"), "troisiem");});
test("trombe -> tromb", function() {deepEqual( Stem("trombe"), "tromb");});
test("trompa -> tromp", function() {deepEqual( Stem("trompa"), "tromp");});
test("trompaient -> tromp", function() {deepEqual( Stem("trompaient"), "tromp");});
test("trompait -> tromp", function() {deepEqual( Stem("trompait"), "tromp");});
test("trompant -> tromp", function() {deepEqual( Stem("trompant"), "tromp");});
test("trompe -> tromp", function() {deepEqual( Stem("trompe"), "tromp");});
test("trompé -> tromp", function() {deepEqual( Stem("trompé"), "tromp");});
test("trompée -> tromp", function() {deepEqual( Stem("trompée"), "tromp");});
test("tromper -> tromp", function() {deepEqual( Stem("tromper"), "tromp");});
test("tromperai -> tromp", function() {deepEqual( Stem("tromperai"), "tromp");});
test("tromperais -> tromp", function() {deepEqual( Stem("tromperais"), "tromp");});
test("trompes -> tromp", function() {deepEqual( Stem("trompes"), "tromp");});
test("trompés -> tromp", function() {deepEqual( Stem("trompés"), "tromp");});
test("trompez -> tromp", function() {deepEqual( Stem("trompez"), "tromp");});
test("tronc -> tronc", function() {deepEqual( Stem("tronc"), "tronc");});
test("tronçon -> tronçon", function() {deepEqual( Stem("tronçon"), "tronçon");});
test("troncs -> tronc", function() {deepEqual( Stem("troncs"), "tronc");});
test("trône -> trôn", function() {deepEqual( Stem("trône"), "trôn");});
test("trop -> trop", function() {deepEqual( Stem("trop"), "trop");});
test("trophée -> troph", function() {deepEqual( Stem("trophée"), "troph");});
test("tropicale -> tropical", function() {deepEqual( Stem("tropicale"), "tropical");});
test("tropicales -> tropical", function() {deepEqual( Stem("tropicales"), "tropical");});
test("tropique -> tropiqu", function() {deepEqual( Stem("tropique"), "tropiqu");});
test("tropiques -> tropiqu", function() {deepEqual( Stem("tropiques"), "tropiqu");});
test("troppo -> troppo", function() {deepEqual( Stem("troppo"), "troppo");});
test("trot -> trot", function() {deepEqual( Stem("trot"), "trot");});
test("trottait -> trott", function() {deepEqual( Stem("trottait"), "trott");});
test("trotter -> trott", function() {deepEqual( Stem("trotter"), "trott");});
test("trottoir -> trottoir", function() {deepEqual( Stem("trottoir"), "trottoir");});
test("trottoirs -> trottoir", function() {deepEqual( Stem("trottoirs"), "trottoir");});
test("trou -> trou", function() {deepEqual( Stem("trou"), "trou");});
test("troubla -> troubl", function() {deepEqual( Stem("troubla"), "troubl");});
test("troublaient -> troubl", function() {deepEqual( Stem("troublaient"), "troubl");});
test("troublait -> troubl", function() {deepEqual( Stem("troublait"), "troubl");});
test("troublant -> troubl", function() {deepEqual( Stem("troublant"), "troubl");});
test("trouble -> troubl", function() {deepEqual( Stem("trouble"), "troubl");});
test("troublé -> troubl", function() {deepEqual( Stem("troublé"), "troubl");});
test("troublée -> troubl", function() {deepEqual( Stem("troublée"), "troubl");});
test("troublées -> troubl", function() {deepEqual( Stem("troublées"), "troubl");});
test("troubler -> troubl", function() {deepEqual( Stem("troubler"), "troubl");});
test("troublera -> troubl", function() {deepEqual( Stem("troublera"), "troubl");});
test("troublèrent -> troubl", function() {deepEqual( Stem("troublèrent"), "troubl");});
test("troubleront -> troubl", function() {deepEqual( Stem("troubleront"), "troubl");});
test("troubles -> troubl", function() {deepEqual( Stem("troubles"), "troubl");});
test("troublés -> troubl", function() {deepEqual( Stem("troublés"), "troubl");});
test("troublez -> troubl", function() {deepEqual( Stem("troublez"), "troubl");});
test("troupe -> troup", function() {deepEqual( Stem("troupe"), "troup");});
test("troupeau -> troupeau", function() {deepEqual( Stem("troupeau"), "troupeau");});
test("troupes -> troup", function() {deepEqual( Stem("troupes"), "troup");});
test("troupiers -> troupi", function() {deepEqual( Stem("troupiers"), "troupi");});
test("trous -> trous", function() {deepEqual( Stem("trous"), "trous");});
test("trousses -> trouss", function() {deepEqual( Stem("trousses"), "trouss");});
test("trouva -> trouv", function() {deepEqual( Stem("trouva"), "trouv");});
test("trouvai -> trouv", function() {deepEqual( Stem("trouvai"), "trouv");});
test("trouvaient -> trouv", function() {deepEqual( Stem("trouvaient"), "trouv");});
test("trouvais -> trouv", function() {deepEqual( Stem("trouvais"), "trouv");});
test("trouvait -> trouv", function() {deepEqual( Stem("trouvait"), "trouv");});
test("trouvant -> trouv", function() {deepEqual( Stem("trouvant"), "trouv");});
test("trouvât -> trouv", function() {deepEqual( Stem("trouvât"), "trouv");});
test("trouve -> trouv", function() {deepEqual( Stem("trouve"), "trouv");});
test("trouvé -> trouv", function() {deepEqual( Stem("trouvé"), "trouv");});
test("trouvée -> trouv", function() {deepEqual( Stem("trouvée"), "trouv");});
test("trouvées -> trouv", function() {deepEqual( Stem("trouvées"), "trouv");});
test("trouvent -> trouvent", function() {deepEqual( Stem("trouvent"), "trouvent");});
test("trouver -> trouv", function() {deepEqual( Stem("trouver"), "trouv");});
test("trouvera -> trouv", function() {deepEqual( Stem("trouvera"), "trouv");});
test("trouverai -> trouv", function() {deepEqual( Stem("trouverai"), "trouv");});
test("trouveraient -> trouv", function() {deepEqual( Stem("trouveraient"), "trouv");});
test("trouverais -> trouv", function() {deepEqual( Stem("trouverais"), "trouv");});
test("trouverait -> trouv", function() {deepEqual( Stem("trouverait"), "trouv");});
test("trouveras -> trouv", function() {deepEqual( Stem("trouveras"), "trouv");});
test("trouvèrent -> trouv", function() {deepEqual( Stem("trouvèrent"), "trouv");});
test("trouverez -> trouv", function() {deepEqual( Stem("trouverez"), "trouv");});
test("trouveriez -> trouv", function() {deepEqual( Stem("trouveriez"), "trouv");});
test("trouverions -> trouv", function() {deepEqual( Stem("trouverions"), "trouv");});
test("trouverons -> trouv", function() {deepEqual( Stem("trouverons"), "trouv");});
test("trouveront -> trouv", function() {deepEqual( Stem("trouveront"), "trouv");});
test("trouves -> trouv", function() {deepEqual( Stem("trouves"), "trouv");});
test("trouvés -> trouv", function() {deepEqual( Stem("trouvés"), "trouv");});
test("trouvez -> trouv", function() {deepEqual( Stem("trouvez"), "trouv");});
test("trouvons -> trouvon", function() {deepEqual( Stem("trouvons"), "trouvon");});
test("truites -> truit", function() {deepEqual( Stem("truites"), "truit");});
test("trunk -> trunk", function() {deepEqual( Stem("trunk"), "trunk");});
test("tu -> tu", function() {deepEqual( Stem("tu"), "tu");});
test("tua -> tu", function() {deepEqual( Stem("tua"), "tu");});
test("tuais -> tu", function() {deepEqual( Stem("tuais"), "tu");});
test("tuait -> tu", function() {deepEqual( Stem("tuait"), "tu");});
test("tuant -> tu", function() {deepEqual( Stem("tuant"), "tu");});
test("tudieu -> tudieu", function() {deepEqual( Stem("tudieu"), "tudieu");});
test("tue -> tu", function() {deepEqual( Stem("tue"), "tu");});
test("tué -> tu", function() {deepEqual( Stem("tué"), "tu");});
test("tuée -> tu", function() {deepEqual( Stem("tuée"), "tu");});
test("tuent -> tuent", function() {deepEqual( Stem("tuent"), "tuent");});
test("tuer -> tu", function() {deepEqual( Stem("tuer"), "tu");});
test("tuera -> tu", function() {deepEqual( Stem("tuera"), "tu");});
test("tuerai -> tu", function() {deepEqual( Stem("tuerai"), "tu");});
test("tuerais -> tu", function() {deepEqual( Stem("tuerais"), "tu");});
test("tuerait -> tu", function() {deepEqual( Stem("tuerait"), "tu");});
test("tués -> tu", function() {deepEqual( Stem("tués"), "tu");});
test("tuez -> tu", function() {deepEqual( Stem("tuez"), "tu");});
test("tuileries -> tuiler", function() {deepEqual( Stem("tuileries"), "tuiler");});
test("tuiles -> tuil", function() {deepEqual( Stem("tuiles"), "tuil");});
test("tuilla -> tuill", function() {deepEqual( Stem("tuilla"), "tuill");});
test("tumulte -> tumult", function() {deepEqual( Stem("tumulte"), "tumult");});
test("tumultueuse -> tumultu", function() {deepEqual( Stem("tumultueuse"), "tumultu");});
test("tunique -> tuniqu", function() {deepEqual( Stem("tunique"), "tuniqu");});
test("tunnel -> tunnel", function() {deepEqual( Stem("tunnel"), "tunnel");});
test("tunnels -> tunnel", function() {deepEqual( Stem("tunnels"), "tunnel");});
test("turban -> turban", function() {deepEqual( Stem("turban"), "turban");});
test("turbans -> turban", function() {deepEqual( Stem("turbans"), "turban");});
test("turin -> turin", function() {deepEqual( Stem("turin"), "turin");});
test("turn -> turn", function() {deepEqual( Stem("turn"), "turn");});
test("turpitude -> turpitud", function() {deepEqual( Stem("turpitude"), "turpitud");});
test("tussaud -> tussaud", function() {deepEqual( Stem("tussaud"), "tussaud");});
test("tut -> tut", function() {deepEqual( Stem("tut"), "tut");});
test("tutoie -> tutoi", function() {deepEqual( Stem("tutoie"), "tutoi");});
test("tutoiement -> tutoi", function() {deepEqual( Stem("tutoiement"), "tutoi");});
test("tutoyait -> tutoi", function() {deepEqual( Stem("tutoyait"), "tutoi");});
test("tutoyer -> tutoi", function() {deepEqual( Stem("tutoyer"), "tutoi");});
test("tutti -> tutt", function() {deepEqual( Stem("tutti"), "tutt");});
test("tutto -> tutto", function() {deepEqual( Stem("tutto"), "tutto");});
test("tuyau -> tuyau", function() {deepEqual( Stem("tuyau"), "tuyau");});
test("tuyaux -> tuyal", function() {deepEqual( Stem("tuyaux"), "tuyal");});
test("twelfth -> twelfth", function() {deepEqual( Stem("twelfth"), "twelfth");});
test("two -> two", function() {deepEqual( Stem("two"), "two");});
test("tympaniser -> tympanis", function() {deepEqual( Stem("tympaniser"), "tympanis");});
test("type -> typ", function() {deepEqual( Stem("type"), "typ");});
test("types -> typ", function() {deepEqual( Stem("types"), "typ");});
test("typhon -> typhon", function() {deepEqual( Stem("typhon"), "typhon");});
test("tyran -> tyran", function() {deepEqual( Stem("tyran"), "tyran");});
test("tyrannie -> tyrann", function() {deepEqual( Stem("tyrannie"), "tyrann");});
test("tyrannisait -> tyrannis", function() {deepEqual( Stem("tyrannisait"), "tyrannis");});
test("tyrans -> tyran", function() {deepEqual( Stem("tyrans"), "tyran");});
test("uçaf -> uçaf", function() {deepEqual( Stem("uçaf"), "uçaf");});
test("uddaul -> uddaul", function() {deepEqual( Stem("uddaul"), "uddaul");});
test("ultimatum -> ultimatum", function() {deepEqual( Stem("ultimatum"), "ultimatum");});
test("ultra -> ultra", function() {deepEqual( Stem("ultra"), "ultra");});
test("ultras -> ultras", function() {deepEqual( Stem("ultras"), "ultras");});
test("ulysse -> ulyss", function() {deepEqual( Stem("ulysse"), "ulyss");});
test("un -> un", function() {deepEqual( Stem("un"), "un");});
test("unam -> unam", function() {deepEqual( Stem("unam"), "unam");});
test("unanime -> unanim", function() {deepEqual( Stem("unanime"), "unanim");});
test("unanimement -> unanim", function() {deepEqual( Stem("unanimement"), "unanim");});
test("uncertain -> uncertain", function() {deepEqual( Stem("uncertain"), "uncertain");});
test("une -> une", function() {deepEqual( Stem("une"), "une");});
test("unes -> une", function() {deepEqual( Stem("unes"), "une");});
test("uni -> uni", function() {deepEqual( Stem("uni"), "uni");});
test("unie -> uni", function() {deepEqual( Stem("unie"), "uni");});
test("unième -> uniem", function() {deepEqual( Stem("unième"), "uniem");});
test("unies -> uni", function() {deepEqual( Stem("unies"), "uni");});
test("uniforme -> uniform", function() {deepEqual( Stem("uniforme"), "uniform");});
test("uniformes -> uniform", function() {deepEqual( Stem("uniformes"), "uniform");});
test("union -> union", function() {deepEqual( Stem("union"), "union");});
test("unique -> uniqu", function() {deepEqual( Stem("unique"), "uniqu");});
test("uniquement -> uniqu", function() {deepEqual( Stem("uniquement"), "uniqu");});
test("unis -> unis", function() {deepEqual( Stem("unis"), "unis");});
test("unissaient -> uniss", function() {deepEqual( Stem("unissaient"), "uniss");});
test("unissait -> uniss", function() {deepEqual( Stem("unissait"), "uniss");});
test("unissez -> uniss", function() {deepEqual( Stem("unissez"), "uniss");});
test("univers -> univer", function() {deepEqual( Stem("univers"), "univer");});
test("universel -> universel", function() {deepEqual( Stem("universel"), "universel");});
test("universelle -> universel", function() {deepEqual( Stem("universelle"), "universel");});
test("uns -> un", function() {deepEqual( Stem("uns"), "un");});
test("uranus -> uranus", function() {deepEqual( Stem("uranus"), "uranus");});
test("urbanité -> urban", function() {deepEqual( Stem("urbanité"), "urban");});
test("urne -> urne", function() {deepEqual( Stem("urne"), "urne");});
test("usa -> usa", function() {deepEqual( Stem("usa"), "usa");});
test("usage -> usag", function() {deepEqual( Stem("usage"), "usag");});
test("usages -> usag", function() {deepEqual( Stem("usages"), "usag");});
test("usant -> usant", function() {deepEqual( Stem("usant"), "usant");});
test("use -> use", function() {deepEqual( Stem("use"), "use");});
test("usé -> usé", function() {deepEqual( Stem("usé"), "usé");});
test("user -> user", function() {deepEqual( Stem("user"), "user");});
test("usine -> usin", function() {deepEqual( Stem("usine"), "usin");});
test("ustensile -> ustensil", function() {deepEqual( Stem("ustensile"), "ustensil");});
test("usure -> usur", function() {deepEqual( Stem("usure"), "usur");});
test("usuriers -> usuri", function() {deepEqual( Stem("usuriers"), "usuri");});
test("usurpateur -> usurp", function() {deepEqual( Stem("usurpateur"), "usurp");});
test("usurpations -> usurp", function() {deepEqual( Stem("usurpations"), "usurp");});
test("usurpe -> usurp", function() {deepEqual( Stem("usurpe"), "usurp");});
test("usurpé -> usurp", function() {deepEqual( Stem("usurpé"), "usurp");});
test("usurpées -> usurp", function() {deepEqual( Stem("usurpées"), "usurp");});
test("usurpés -> usurp", function() {deepEqual( Stem("usurpés"), "usurp");});
test("utah -> utah", function() {deepEqual( Stem("utah"), "utah");});
test("utile -> util", function() {deepEqual( Stem("utile"), "util");});
test("utiles -> util", function() {deepEqual( Stem("utiles"), "util");});
test("utilisaient -> utilis", function() {deepEqual( Stem("utilisaient"), "utilis");});
test("utiliser -> utilis", function() {deepEqual( Stem("utiliser"), "utilis");});
test("utilité -> util", function() {deepEqual( Stem("utilité"), "util");});
test("uzeri -> uzer", function() {deepEqual( Stem("uzeri"), "uzer");});
test("uzès -> uzes", function() {deepEqual( Stem("uzès"), "uzes");});
test("v -> v", function() {deepEqual( Stem("v"), "v");});
test("va -> va", function() {deepEqual( Stem("va"), "va");});
test("vacances -> vacanc", function() {deepEqual( Stem("vacances"), "vacanc");});
test("vacant -> vac", function() {deepEqual( Stem("vacant"), "vac");});
test("vacante -> vac", function() {deepEqual( Stem("vacante"), "vac");});
test("vacarme -> vacarm", function() {deepEqual( Stem("vacarme"), "vacarm");});
test("vache -> vach", function() {deepEqual( Stem("vache"), "vach");});
test("vacillais -> vacill", function() {deepEqual( Stem("vacillais"), "vacill");});
test("vagabond -> vagabond", function() {deepEqual( Stem("vagabond"), "vagabond");});
test("vagabonde -> vagabond", function() {deepEqual( Stem("vagabonde"), "vagabond");});
test("vague -> vagu", function() {deepEqual( Stem("vague"), "vagu");});
test("vaguement -> vagu", function() {deepEqual( Stem("vaguement"), "vagu");});
test("vagues -> vagu", function() {deepEqual( Stem("vagues"), "vagu");});
test("vaille -> vaill", function() {deepEqual( Stem("vaille"), "vaill");});
test("vain -> vain", function() {deepEqual( Stem("vain"), "vain");});
test("vaincre -> vaincr", function() {deepEqual( Stem("vaincre"), "vaincr");});
test("vaincu -> vaincu", function() {deepEqual( Stem("vaincu"), "vaincu");});
test("vaincue -> vaincu", function() {deepEqual( Stem("vaincue"), "vaincu");});
test("vaincus -> vaincus", function() {deepEqual( Stem("vaincus"), "vaincus");});
test("vaine -> vain", function() {deepEqual( Stem("vaine"), "vain");});
test("vainement -> vain", function() {deepEqual( Stem("vainement"), "vain");});
test("vaines -> vain", function() {deepEqual( Stem("vaines"), "vain");});
test("vainqueur -> vainqueur", function() {deepEqual( Stem("vainqueur"), "vainqueur");});
test("vains -> vain", function() {deepEqual( Stem("vains"), "vain");});
test("vais -> vais", function() {deepEqual( Stem("vais"), "vais");});
test("vaisseau -> vaisseau", function() {deepEqual( Stem("vaisseau"), "vaisseau");});
test("valable -> valabl", function() {deepEqual( Stem("valable"), "valabl");});
test("valables -> valabl", function() {deepEqual( Stem("valables"), "valabl");});
test("valaient -> val", function() {deepEqual( Stem("valaient"), "val");});
test("valait -> val", function() {deepEqual( Stem("valait"), "val");});
test("valant -> val", function() {deepEqual( Stem("valant"), "val");});
test("vale -> val", function() {deepEqual( Stem("vale"), "val");});
test("valenod -> valenod", function() {deepEqual( Stem("valenod"), "valenod");});
test("valent -> valent", function() {deepEqual( Stem("valent"), "valent");});
test("valère -> valer", function() {deepEqual( Stem("valère"), "valer");});
test("valet -> valet", function() {deepEqual( Stem("valet"), "valet");});
test("valets -> valet", function() {deepEqual( Stem("valets"), "valet");});
test("valeur -> valeur", function() {deepEqual( Stem("valeur"), "valeur");});
test("vallee -> valle", function() {deepEqual( Stem("vallee"), "valle");});
test("vallée -> vall", function() {deepEqual( Stem("vallée"), "vall");});
test("vallées -> vall", function() {deepEqual( Stem("vallées"), "vall");});
test("valoir -> valoir", function() {deepEqual( Stem("valoir"), "valoir");});
test("valois -> valois", function() {deepEqual( Stem("valois"), "valois");});
test("valserra -> valserr", function() {deepEqual( Stem("valserra"), "valserr");});
test("valu -> valu", function() {deepEqual( Stem("valu"), "valu");});
test("valurent -> valurent", function() {deepEqual( Stem("valurent"), "valurent");});
test("valut -> valut", function() {deepEqual( Stem("valut"), "valut");});
test("vandalisme -> vandal", function() {deepEqual( Stem("vandalisme"), "vandal");});
test("vane -> van", function() {deepEqual( Stem("vane"), "van");});
test("vaneau -> vaneau", function() {deepEqual( Stem("vaneau"), "vaneau");});
test("vanité -> vanit", function() {deepEqual( Stem("vanité"), "vanit");});
test("vaniteuse -> vanit", function() {deepEqual( Stem("vaniteuse"), "vanit");});
test("vaniteux -> vanit", function() {deepEqual( Stem("vaniteux"), "vanit");});
test("vanta -> vant", function() {deepEqual( Stem("vanta"), "vant");});
test("vantait -> vant", function() {deepEqual( Stem("vantait"), "vant");});
test("vanté -> vant", function() {deepEqual( Stem("vanté"), "vant");});
test("vantent -> vantent", function() {deepEqual( Stem("vantent"), "vantent");});
test("vanter -> vant", function() {deepEqual( Stem("vanter"), "vant");});
test("vanvitelli -> vanvitel", function() {deepEqual( Stem("vanvitelli"), "vanvitel");});
test("vapeur -> vapeur", function() {deepEqual( Stem("vapeur"), "vapeur");});
test("vapeurs -> vapeur", function() {deepEqual( Stem("vapeurs"), "vapeur");});
test("varèse -> vares", function() {deepEqual( Stem("varèse"), "vares");});
test("variaient -> vari", function() {deepEqual( Stem("variaient"), "vari");});
test("varie -> var", function() {deepEqual( Stem("varie"), "var");});
test("varié -> vari", function() {deepEqual( Stem("varié"), "vari");});
test("variétés -> variet", function() {deepEqual( Stem("variétés"), "variet");});
test("vas -> vas", function() {deepEqual( Stem("vas"), "vas");});
test("vase -> vas", function() {deepEqual( Stem("vase"), "vas");});
test("vases -> vas", function() {deepEqual( Stem("vases"), "vas");});
test("vasi -> vas", function() {deepEqual( Stem("vasi"), "vas");});
test("vasistas -> vasist", function() {deepEqual( Stem("vasistas"), "vasist");});
test("vaste -> vast", function() {deepEqual( Stem("vaste"), "vast");});
test("vastes -> vast", function() {deepEqual( Stem("vastes"), "vast");});
test("vau -> vau", function() {deepEqual( Stem("vau"), "vau");});
test("vaudeville -> vaudevill", function() {deepEqual( Stem("vaudeville"), "vaudevill");});
test("vaudra -> vaudr", function() {deepEqual( Stem("vaudra"), "vaudr");});
test("vaudrait -> vaudr", function() {deepEqual( Stem("vaudrait"), "vaudr");});
test("vaudront -> vaudront", function() {deepEqual( Stem("vaudront"), "vaudront");});
test("vaurien -> vaurien", function() {deepEqual( Stem("vaurien"), "vaurien");});
test("vaut -> vaut", function() {deepEqual( Stem("vaut"), "vaut");});
test("vaux -> vaux", function() {deepEqual( Stem("vaux"), "vaux");});
test("vécu -> vécu", function() {deepEqual( Stem("vécu"), "vécu");});
test("vécurent -> vécurent", function() {deepEqual( Stem("vécurent"), "vécurent");});
test("vécut -> vécut", function() {deepEqual( Stem("vécut"), "vécut");});
test("vécût -> vécût", function() {deepEqual( Stem("vécût"), "vécût");});
test("vedette -> vedet", function() {deepEqual( Stem("vedette"), "vedet");});
test("vega -> veg", function() {deepEqual( Stem("vega"), "veg");});
test("végétaient -> véget", function() {deepEqual( Stem("végétaient"), "véget");});
test("végéter -> véget", function() {deepEqual( Stem("végéter"), "véget");});
test("véhémence -> véhément", function() {deepEqual( Stem("véhémence"), "véhément");});
test("véhément -> veh", function() {deepEqual( Stem("véhément"), "veh");});
test("véhicule -> véhicul", function() {deepEqual( Stem("véhicule"), "véhicul");});
test("véhiculé -> véhicul", function() {deepEqual( Stem("véhiculé"), "véhicul");});
test("véhicules -> véhicul", function() {deepEqual( Stem("véhicules"), "véhicul");});
test("veilla -> veil", function() {deepEqual( Stem("veilla"), "veil");});
test("veillaient -> veil", function() {deepEqual( Stem("veillaient"), "veil");});
test("veillait -> veil", function() {deepEqual( Stem("veillait"), "veil");});
test("veillât -> veil", function() {deepEqual( Stem("veillât"), "veil");});
test("veille -> veil", function() {deepEqual( Stem("veille"), "veil");});
test("veillé -> veil", function() {deepEqual( Stem("veillé"), "veil");});
test("veillent -> veillent", function() {deepEqual( Stem("veillent"), "veillent");});
test("veiller -> veil", function() {deepEqual( Stem("veiller"), "veil");});
test("veillerons -> veil", function() {deepEqual( Stem("veillerons"), "veil");});
test("veilles -> veil", function() {deepEqual( Stem("veilles"), "veil");});
test("veilleuse -> veilleux", function() {deepEqual( Stem("veilleuse"), "veilleux");});
test("veine -> vein", function() {deepEqual( Stem("veine"), "vein");});
test("veines -> vein", function() {deepEqual( Stem("veines"), "vein");});
test("velléité -> velléit", function() {deepEqual( Stem("velléité"), "velléit");});
test("velléités -> velléit", function() {deepEqual( Stem("velléités"), "velléit");});
test("velleja -> vellej", function() {deepEqual( Stem("velleja"), "vellej");});
test("velours -> velour", function() {deepEqual( Stem("velours"), "velour");});
test("vély -> vély", function() {deepEqual( Stem("vély"), "vély");});
test("venaient -> ven", function() {deepEqual( Stem("venaient"), "ven");});
test("venait -> ven", function() {deepEqual( Stem("venait"), "ven");});
test("vénales -> vénal", function() {deepEqual( Stem("vénales"), "vénal");});
test("vénalité -> vénal", function() {deepEqual( Stem("vénalité"), "vénal");});
test("venant -> ven", function() {deepEqual( Stem("venant"), "ven");});
test("venceslas -> vencesl", function() {deepEqual( Stem("venceslas"), "vencesl");});
test("vend -> vend", function() {deepEqual( Stem("vend"), "vend");});
test("vendait -> vend", function() {deepEqual( Stem("vendait"), "vend");});
test("vendant -> vend", function() {deepEqual( Stem("vendant"), "vend");});
test("vendée -> vend", function() {deepEqual( Stem("vendée"), "vend");});
test("vendent -> vendent", function() {deepEqual( Stem("vendent"), "vendent");});
test("vendeur -> vendeur", function() {deepEqual( Stem("vendeur"), "vendeur");});
test("vendeurs -> vendeur", function() {deepEqual( Stem("vendeurs"), "vendeur");});
test("vendit -> vend", function() {deepEqual( Stem("vendit"), "vend");});
test("vendrai -> vendr", function() {deepEqual( Stem("vendrai"), "vendr");});
test("vendrais -> vendr", function() {deepEqual( Stem("vendrais"), "vendr");});
test("vendrait -> vendr", function() {deepEqual( Stem("vendrait"), "vendr");});
test("vendre -> vendr", function() {deepEqual( Stem("vendre"), "vendr");});
test("vendredi -> vendred", function() {deepEqual( Stem("vendredi"), "vendred");});
test("vendredis -> vendred", function() {deepEqual( Stem("vendredis"), "vendred");});
test("vendront -> vendront", function() {deepEqual( Stem("vendront"), "vendront");});
test("vends -> vend", function() {deepEqual( Stem("vends"), "vend");});
test("vendu -> vendu", function() {deepEqual( Stem("vendu"), "vendu");});
test("vendue -> vendu", function() {deepEqual( Stem("vendue"), "vendu");});
test("vendus -> vendus", function() {deepEqual( Stem("vendus"), "vendus");});
test("vénérable -> véner", function() {deepEqual( Stem("vénérable"), "véner");});
test("vénérables -> véner", function() {deepEqual( Stem("vénérables"), "véner");});
test("vénération -> véner", function() {deepEqual( Stem("vénération"), "véner");});
test("vénère -> véner", function() {deepEqual( Stem("vénère"), "véner");});
test("vénérées -> véner", function() {deepEqual( Stem("vénérées"), "véner");});
test("vénérer -> véner", function() {deepEqual( Stem("vénérer"), "véner");});
test("venette -> venet", function() {deepEqual( Stem("venette"), "venet");});
test("venez -> ven", function() {deepEqual( Stem("venez"), "ven");});
test("venge -> veng", function() {deepEqual( Stem("venge"), "veng");});
test("vengé -> veng", function() {deepEqual( Stem("vengé"), "veng");});
test("vengea -> veng", function() {deepEqual( Stem("vengea"), "veng");});
test("vengeait -> veng", function() {deepEqual( Stem("vengeait"), "veng");});
test("vengeance -> vengeanc", function() {deepEqual( Stem("vengeance"), "vengeanc");});
test("vengée -> veng", function() {deepEqual( Stem("vengée"), "veng");});
test("vengent -> vengent", function() {deepEqual( Stem("vengent"), "vengent");});
test("venger -> veng", function() {deepEqual( Stem("venger"), "veng");});
test("vengera -> veng", function() {deepEqual( Stem("vengera"), "veng");});
test("vengerai -> veng", function() {deepEqual( Stem("vengerai"), "veng");});
test("veniez -> ven", function() {deepEqual( Stem("veniez"), "ven");});
test("venin -> venin", function() {deepEqual( Stem("venin"), "venin");});
test("venir -> ven", function() {deepEqual( Stem("venir"), "ven");});
test("venise -> venis", function() {deepEqual( Stem("venise"), "venis");});
test("vénitien -> vénitien", function() {deepEqual( Stem("vénitien"), "vénitien");});
test("vénitiens -> vénitien", function() {deepEqual( Stem("vénitiens"), "vénitien");});
test("venons -> venon", function() {deepEqual( Stem("venons"), "venon");});
test("vent -> vent", function() {deepEqual( Stem("vent"), "vent");});
test("vente -> vent", function() {deepEqual( Stem("vente"), "vent");});
test("ventes -> vent", function() {deepEqual( Stem("ventes"), "vent");});
test("ventre -> ventr", function() {deepEqual( Stem("ventre"), "ventr");});
test("vents -> vent", function() {deepEqual( Stem("vents"), "vent");});
test("venu -> venu", function() {deepEqual( Stem("venu"), "venu");});
test("venue -> venu", function() {deepEqual( Stem("venue"), "venu");});
test("venues -> venu", function() {deepEqual( Stem("venues"), "venu");});
test("venus -> venus", function() {deepEqual( Stem("venus"), "venus");});
test("vérandas -> vérand", function() {deepEqual( Stem("vérandas"), "vérand");});
test("verbal -> verbal", function() {deepEqual( Stem("verbal"), "verbal");});
test("verbe -> verb", function() {deepEqual( Stem("verbe"), "verb");});
test("verdâtres -> verdâtr", function() {deepEqual( Stem("verdâtres"), "verdâtr");});
test("verdict -> verdict", function() {deepEqual( Stem("verdict"), "verdict");});
test("verdoyantes -> verdoi", function() {deepEqual( Stem("verdoyantes"), "verdoi");});
test("verdoyants -> verdoi", function() {deepEqual( Stem("verdoyants"), "verdoi");});
test("verdure -> verdur", function() {deepEqual( Stem("verdure"), "verdur");});
test("verger -> verg", function() {deepEqual( Stem("verger"), "verg");});
test("vergogne -> vergogn", function() {deepEqual( Stem("vergogne"), "vergogn");});
test("vergues -> vergu", function() {deepEqual( Stem("vergues"), "vergu");});
test("vergy -> vergy", function() {deepEqual( Stem("vergy"), "vergy");});
test("véridiques -> vérid", function() {deepEqual( Stem("véridiques"), "vérid");});
test("vérifia -> vérifi", function() {deepEqual( Stem("vérifia"), "vérifi");});
test("vérification -> vérif", function() {deepEqual( Stem("vérification"), "vérif");});
test("vérifié -> vérifi", function() {deepEqual( Stem("vérifié"), "vérifi");});
test("vérifier -> vérifi", function() {deepEqual( Stem("vérifier"), "vérifi");});
test("véritable -> vérit", function() {deepEqual( Stem("véritable"), "vérit");});
test("véritablement -> vérit", function() {deepEqual( Stem("véritablement"), "vérit");});
test("véritables -> vérit", function() {deepEqual( Stem("véritables"), "vérit");});
test("vérité -> vérit", function() {deepEqual( Stem("vérité"), "vérit");});
test("vérités -> vérit", function() {deepEqual( Stem("vérités"), "vérit");});
test("vermeilles -> vermeil", function() {deepEqual( Stem("vermeilles"), "vermeil");});
test("vermont -> vermont", function() {deepEqual( Stem("vermont"), "vermont");});
test("vermoulu -> vermoulu", function() {deepEqual( Stem("vermoulu"), "vermoulu");});
test("vermoulue -> vermoulu", function() {deepEqual( Stem("vermoulue"), "vermoulu");});
test("verna -> vern", function() {deepEqual( Stem("verna"), "vern");});
test("vernaye -> vernay", function() {deepEqual( Stem("vernaye"), "vernay");});
test("verne -> vern", function() {deepEqual( Stem("verne"), "vern");});
test("vernes -> vern", function() {deepEqual( Stem("vernes"), "vern");});
test("verni -> vern", function() {deepEqual( Stem("verni"), "vern");});
test("vernis -> vern", function() {deepEqual( Stem("vernis"), "vern");});
test("vérole -> vérol", function() {deepEqual( Stem("vérole"), "vérol");});
test("verona -> veron", function() {deepEqual( Stem("verona"), "veron");});
test("vérone -> véron", function() {deepEqual( Stem("vérone"), "véron");});
test("verra -> verr", function() {deepEqual( Stem("verra"), "verr");});
test("verrai -> verr", function() {deepEqual( Stem("verrai"), "verr");});
test("verraient -> verr", function() {deepEqual( Stem("verraient"), "verr");});
test("verrais -> verr", function() {deepEqual( Stem("verrais"), "verr");});
test("verrait -> verr", function() {deepEqual( Stem("verrait"), "verr");});
test("verras -> verr", function() {deepEqual( Stem("verras"), "verr");});
test("verre -> verr", function() {deepEqual( Stem("verre"), "verr");});
test("verres -> verr", function() {deepEqual( Stem("verres"), "verr");});
test("verrez -> verr", function() {deepEqual( Stem("verrez"), "verr");});
test("verrières -> verri", function() {deepEqual( Stem("verrières"), "verri");});
test("verrons -> verron", function() {deepEqual( Stem("verrons"), "verron");});
test("verront -> verront", function() {deepEqual( Stem("verront"), "verront");});
test("verrou -> verrou", function() {deepEqual( Stem("verrou"), "verrou");});
test("verrous -> verrous", function() {deepEqual( Stem("verrous"), "verrous");});
test("verruqueux -> verruqu", function() {deepEqual( Stem("verruqueux"), "verruqu");});
test("vers -> ver", function() {deepEqual( Stem("vers"), "ver");});
test("versa -> vers", function() {deepEqual( Stem("versa"), "vers");});
test("versailles -> versaill", function() {deepEqual( Stem("versailles"), "versaill");});
test("versait -> vers", function() {deepEqual( Stem("versait"), "vers");});
test("versant -> vers", function() {deepEqual( Stem("versant"), "vers");});
test("versants -> vers", function() {deepEqual( Stem("versants"), "vers");});
test("verse -> vers", function() {deepEqual( Stem("verse"), "vers");});
test("verser -> vers", function() {deepEqual( Stem("verser"), "vers");});
test("versets -> verset", function() {deepEqual( Stem("versets"), "verset");});
test("vert -> vert", function() {deepEqual( Stem("vert"), "vert");});
test("verte -> vert", function() {deepEqual( Stem("verte"), "vert");});
test("vertement -> vert", function() {deepEqual( Stem("vertement"), "vert");});
test("vertes -> vert", function() {deepEqual( Stem("vertes"), "vert");});
test("vertical -> vertical", function() {deepEqual( Stem("vertical"), "vertical");});
test("verticale -> vertical", function() {deepEqual( Stem("verticale"), "vertical");});
test("verticalement -> vertical", function() {deepEqual( Stem("verticalement"), "vertical");});
test("verts -> vert", function() {deepEqual( Stem("verts"), "vert");});
test("vertu -> vertu", function() {deepEqual( Stem("vertu"), "vertu");});
test("vertueuse -> vertueux", function() {deepEqual( Stem("vertueuse"), "vertueux");});
test("vertueuses -> vertueux", function() {deepEqual( Stem("vertueuses"), "vertueux");});
test("vertueux -> vertueux", function() {deepEqual( Stem("vertueux"), "vertueux");});
test("vertus -> vertus", function() {deepEqual( Stem("vertus"), "vertus");});
test("verve -> verv", function() {deepEqual( Stem("verve"), "verv");});
test("very -> very", function() {deepEqual( Stem("very"), "very");});
test("vespasien -> vespasien", function() {deepEqual( Stem("vespasien"), "vespasien");});
test("vesper -> vesp", function() {deepEqual( Stem("vesper"), "vesp");});
test("veste -> vest", function() {deepEqual( Stem("veste"), "vest");});
test("vestes -> vest", function() {deepEqual( Stem("vestes"), "vest");});
test("vestibule -> vestibul", function() {deepEqual( Stem("vestibule"), "vestibul");});
test("vestige -> vestig", function() {deepEqual( Stem("vestige"), "vestig");});
test("vésuve -> vésuv", function() {deepEqual( Stem("vésuve"), "vésuv");});
test("vêtement -> vêt", function() {deepEqual( Stem("vêtement"), "vêt");});
test("vêtements -> vêt", function() {deepEqual( Stem("vêtements"), "vêt");});
test("vêtent -> vêtent", function() {deepEqual( Stem("vêtent"), "vêtent");});
test("vétille -> vétill", function() {deepEqual( Stem("vétille"), "vétill");});
test("vetturini -> vetturin", function() {deepEqual( Stem("vetturini"), "vetturin");});
test("vetturino -> vetturino", function() {deepEqual( Stem("vetturino"), "vetturino");});
test("vêtu -> vêtu", function() {deepEqual( Stem("vêtu"), "vêtu");});
test("vêtue -> vêtu", function() {deepEqual( Stem("vêtue"), "vêtu");});
test("vêtues -> vêtu", function() {deepEqual( Stem("vêtues"), "vêtu");});
test("vêtus -> vêtus", function() {deepEqual( Stem("vêtus"), "vêtus");});
test("veuf -> veuf", function() {deepEqual( Stem("veuf"), "veuf");});
test("veuille -> veuill", function() {deepEqual( Stem("veuille"), "veuill");});
test("veuillez -> veuill", function() {deepEqual( Stem("veuillez"), "veuill");});
test("veuilliez -> veuill", function() {deepEqual( Stem("veuilliez"), "veuill");});
test("veulent -> veulent", function() {deepEqual( Stem("veulent"), "veulent");});
test("veut -> veut", function() {deepEqual( Stem("veut"), "veut");});
test("veuvage -> veuvag", function() {deepEqual( Stem("veuvage"), "veuvag");});
test("veuve -> veuv", function() {deepEqual( Stem("veuve"), "veuv");});
test("veuves -> veuv", function() {deepEqual( Stem("veuves"), "veuv");});
test("veux -> veux", function() {deepEqual( Stem("veux"), "veux");});
test("vexait -> vex", function() {deepEqual( Stem("vexait"), "vex");});
test("vexantes -> vex", function() {deepEqual( Stem("vexantes"), "vex");});
test("vexations -> vexat", function() {deepEqual( Stem("vexations"), "vexat");});
test("vexé -> vex", function() {deepEqual( Stem("vexé"), "vex");});
test("vexer -> vex", function() {deepEqual( Stem("vexer"), "vex");});
test("vexés -> vex", function() {deepEqual( Stem("vexés"), "vex");});
test("vi -> vi", function() {deepEqual( Stem("vi"), "vi");});
test("via -> vi", function() {deepEqual( Stem("via"), "vi");});
test("viaducs -> viaduc", function() {deepEqual( Stem("viaducs"), "viaduc");});
test("viagère -> viager", function() {deepEqual( Stem("viagère"), "viager");});
test("viande -> viand", function() {deepEqual( Stem("viande"), "viand");});
test("viandes -> viand", function() {deepEqual( Stem("viandes"), "viand");});
test("viatique -> viatiqu", function() {deepEqual( Stem("viatique"), "viatiqu");});
test("vibrations -> vibrat", function() {deepEqual( Stem("vibrations"), "vibrat");});
test("vicaire -> vicair", function() {deepEqual( Stem("vicaire"), "vicair");});
test("vicaires -> vicair", function() {deepEqual( Stem("vicaires"), "vicair");});
test("vice -> vic", function() {deepEqual( Stem("vice"), "vic");});
test("vices -> vic", function() {deepEqual( Stem("vices"), "vic");});
test("vicieux -> vicieux", function() {deepEqual( Stem("vicieux"), "vicieux");});
test("vicissitudes -> vicissitud", function() {deepEqual( Stem("vicissitudes"), "vicissitud");});
test("vico -> vico", function() {deepEqual( Stem("vico"), "vico");});
test("vicolo -> vicolo", function() {deepEqual( Stem("vicolo"), "vicolo");});
test("vicomte -> vicomt", function() {deepEqual( Stem("vicomte"), "vicomt");});
test("vicomtes -> vicomt", function() {deepEqual( Stem("vicomtes"), "vicomt");});
test("victime -> victim", function() {deepEqual( Stem("victime"), "victim");});
test("victimes -> victim", function() {deepEqual( Stem("victimes"), "victim");});
test("victoire -> victoir", function() {deepEqual( Stem("victoire"), "victoir");});
test("victoires -> victoir", function() {deepEqual( Stem("victoires"), "victoir");});
test("victor -> victor", function() {deepEqual( Stem("victor"), "victor");});
test("victoria -> victori", function() {deepEqual( Stem("victoria"), "victori");});
test("victorieuse -> victori", function() {deepEqual( Stem("victorieuse"), "victori");});
test("vicvacarma -> vicvacarm", function() {deepEqual( Stem("vicvacarma"), "vicvacarm");});
test("vida -> vid", function() {deepEqual( Stem("vida"), "vid");});
test("vidaient -> vid", function() {deepEqual( Stem("vidaient"), "vid");});
test("vidant -> vid", function() {deepEqual( Stem("vidant"), "vid");});
test("vide -> vid", function() {deepEqual( Stem("vide"), "vid");});
test("vidées -> vid", function() {deepEqual( Stem("vidées"), "vid");});
test("vider -> vid", function() {deepEqual( Stem("vider"), "vid");});
test("vides -> vid", function() {deepEqual( Stem("vides"), "vid");});
test("videz -> vid", function() {deepEqual( Stem("videz"), "vid");});
test("vie -> vi", function() {deepEqual( Stem("vie"), "vi");});
test("vieil -> vieil", function() {deepEqual( Stem("vieil"), "vieil");});
test("vieillard -> vieillard", function() {deepEqual( Stem("vieillard"), "vieillard");});
test("vieillards -> vieillard", function() {deepEqual( Stem("vieillards"), "vieillard");});
test("vieille -> vieil", function() {deepEqual( Stem("vieille"), "vieil");});
test("vieilles -> vieil", function() {deepEqual( Stem("vieilles"), "vieil");});
test("vieillesse -> vieilless", function() {deepEqual( Stem("vieillesse"), "vieilless");});
test("vieillie -> vieil", function() {deepEqual( Stem("vieillie"), "vieil");});
test("vieillir -> vieil", function() {deepEqual( Stem("vieillir"), "vieil");});
test("vieillit -> vieil", function() {deepEqual( Stem("vieillit"), "vieil");});
test("viendra -> viendr", function() {deepEqual( Stem("viendra"), "viendr");});
test("viendrai -> viendr", function() {deepEqual( Stem("viendrai"), "viendr");});
test("viendraient -> viendr", function() {deepEqual( Stem("viendraient"), "viendr");});
test("viendrait -> viendr", function() {deepEqual( Stem("viendrait"), "viendr");});
test("viendras -> viendr", function() {deepEqual( Stem("viendras"), "viendr");});
test("vienne -> vien", function() {deepEqual( Stem("vienne"), "vien");});
test("viennent -> viennent", function() {deepEqual( Stem("viennent"), "viennent");});
test("viennes -> vien", function() {deepEqual( Stem("viennes"), "vien");});
test("viens -> vien", function() {deepEqual( Stem("viens"), "vien");});
test("vient -> vient", function() {deepEqual( Stem("vient"), "vient");});
test("vierge -> vierg", function() {deepEqual( Stem("vierge"), "vierg");});
test("vies -> vi", function() {deepEqual( Stem("vies"), "vi");});
test("vieux -> vieux", function() {deepEqual( Stem("vieux"), "vieux");});
test("views -> view", function() {deepEqual( Stem("views"), "view");});
test("vif -> vif", function() {deepEqual( Stem("vif"), "vif");});
test("vifs -> vif", function() {deepEqual( Stem("vifs"), "vif");});
test("vigano -> vigano", function() {deepEqual( Stem("vigano"), "vigano");});
test("vigilante -> vigil", function() {deepEqual( Stem("vigilante"), "vigil");});
test("vignano -> vignano", function() {deepEqual( Stem("vignano"), "vignano");});
test("vigne -> vign", function() {deepEqual( Stem("vigne"), "vign");});
test("vigoureuse -> vigour", function() {deepEqual( Stem("vigoureuse"), "vigour");});
test("vigoureusement -> vigour", function() {deepEqual( Stem("vigoureusement"), "vigour");});
test("vigoureuses -> vigour", function() {deepEqual( Stem("vigoureuses"), "vigour");});
test("vigoureux -> vigour", function() {deepEqual( Stem("vigoureux"), "vigour");});
test("vigueur -> vigueur", function() {deepEqual( Stem("vigueur"), "vigueur");});
test("viharis -> vihar", function() {deepEqual( Stem("viharis"), "vihar");});
test("vii -> vii", function() {deepEqual( Stem("vii"), "vii");});
test("viii -> vii", function() {deepEqual( Stem("viii"), "vii");});
test("vil -> vil", function() {deepEqual( Stem("vil"), "vil");});
test("vilain -> vilain", function() {deepEqual( Stem("vilain"), "vilain");});
test("vilaine -> vilain", function() {deepEqual( Stem("vilaine"), "vilain");});
test("vilaines -> vilain", function() {deepEqual( Stem("vilaines"), "vilain");});
test("vilains -> vilain", function() {deepEqual( Stem("vilains"), "vilain");});
test("vile -> vil", function() {deepEqual( Stem("vile"), "vil");});
test("vilenie -> vilen", function() {deepEqual( Stem("vilenie"), "vilen");});
test("vilipendé -> vilipend", function() {deepEqual( Stem("vilipendé"), "vilipend");});
test("vilipendée -> vilipend", function() {deepEqual( Stem("vilipendée"), "vilipend");});
test("villa -> vill", function() {deepEqual( Stem("villa"), "vill");});
test("village -> villag", function() {deepEqual( Stem("village"), "villag");});
test("villages -> villag", function() {deepEqual( Stem("villages"), "villag");});
test("ville -> vill", function() {deepEqual( Stem("ville"), "vill");});
test("villequier -> villequi", function() {deepEqual( Stem("villequier"), "villequi");});
test("villes -> vill", function() {deepEqual( Stem("villes"), "vill");});
test("vils -> vil", function() {deepEqual( Stem("vils"), "vil");});
test("vîmes -> vîm", function() {deepEqual( Stem("vîmes"), "vîm");});
test("vin -> vin", function() {deepEqual( Stem("vin"), "vin");});
test("vinci -> vinc", function() {deepEqual( Stem("vinci"), "vinc");});
test("vindhias -> vindhi", function() {deepEqual( Stem("vindhias"), "vindhi");});
test("vindicatif -> vindiqu", function() {deepEqual( Stem("vindicatif"), "vindiqu");});
test("vindicative -> vindiqu", function() {deepEqual( Stem("vindicative"), "vindiqu");});
test("vingt -> vingt", function() {deepEqual( Stem("vingt"), "vingt");});
test("vingtaine -> vingtain", function() {deepEqual( Stem("vingtaine"), "vingtain");});
test("vingtième -> vingtiem", function() {deepEqual( Stem("vingtième"), "vingtiem");});
test("vingts -> vingt", function() {deepEqual( Stem("vingts"), "vingt");});
test("vinrent -> vinrent", function() {deepEqual( Stem("vinrent"), "vinrent");});
test("vins -> vin", function() {deepEqual( Stem("vins"), "vin");});
test("vinsse -> vinss", function() {deepEqual( Stem("vinsse"), "vinss");});
test("vint -> vint", function() {deepEqual( Stem("vint"), "vint");});
test("vînt -> vînt", function() {deepEqual( Stem("vînt"), "vînt");});
test("viole -> viol", function() {deepEqual( Stem("viole"), "viol");});
test("violé -> viol", function() {deepEqual( Stem("violé"), "viol");});
test("violemment -> violent", function() {deepEqual( Stem("violemment"), "violent");});
test("violence -> violenc", function() {deepEqual( Stem("violence"), "violenc");});
test("violent -> violent", function() {deepEqual( Stem("violent"), "violent");});
test("violentant -> violent", function() {deepEqual( Stem("violentant"), "violent");});
test("violente -> violent", function() {deepEqual( Stem("violente"), "violent");});
test("violenté -> violent", function() {deepEqual( Stem("violenté"), "violent");});
test("violentes -> violent", function() {deepEqual( Stem("violentes"), "violent");});
test("violents -> violent", function() {deepEqual( Stem("violents"), "violent");});
test("violer -> viol", function() {deepEqual( Stem("violer"), "viol");});
test("violes -> viol", function() {deepEqual( Stem("violes"), "viol");});
test("violets -> violet", function() {deepEqual( Stem("violets"), "violet");});
test("violette -> violet", function() {deepEqual( Stem("violette"), "violet");});
test("violettes -> violet", function() {deepEqual( Stem("violettes"), "violet");});
test("violiers -> violi", function() {deepEqual( Stem("violiers"), "violi");});
test("violon -> violon", function() {deepEqual( Stem("violon"), "violon");});
test("vipère -> viper", function() {deepEqual( Stem("vipère"), "viper");});
test("virago -> virago", function() {deepEqual( Stem("virago"), "virago");});
test("virent -> virent", function() {deepEqual( Stem("virent"), "virent");});
test("virgile -> virgil", function() {deepEqual( Stem("virgile"), "virgil");});
test("virtue -> virtu", function() {deepEqual( Stem("virtue"), "virtu");});
test("virtuose -> virtuos", function() {deepEqual( Stem("virtuose"), "virtuos");});
test("vis -> vis", function() {deepEqual( Stem("vis"), "vis");});
test("visa -> vis", function() {deepEqual( Stem("visa"), "vis");});
test("visage -> visag", function() {deepEqual( Stem("visage"), "visag");});
test("visages -> visag", function() {deepEqual( Stem("visages"), "visag");});
test("visas -> vis", function() {deepEqual( Stem("visas"), "vis");});
test("visconti -> viscont", function() {deepEqual( Stem("visconti"), "viscont");});
test("visé -> vis", function() {deepEqual( Stem("visé"), "vis");});
test("visent -> visent", function() {deepEqual( Stem("visent"), "visent");});
test("viser -> vis", function() {deepEqual( Stem("viser"), "vis");});
test("viserez -> vis", function() {deepEqual( Stem("viserez"), "vis");});
test("visible -> visibl", function() {deepEqual( Stem("visible"), "visibl");});
test("visiblement -> visibl", function() {deepEqual( Stem("visiblement"), "visibl");});
test("visibles -> visibl", function() {deepEqual( Stem("visibles"), "visibl");});
test("vision -> vision", function() {deepEqual( Stem("vision"), "vision");});
test("visions -> vision", function() {deepEqual( Stem("visions"), "vision");});
test("visita -> visit", function() {deepEqual( Stem("visita"), "visit");});
test("visitation -> visit", function() {deepEqual( Stem("visitation"), "visit");});
test("visite -> visit", function() {deepEqual( Stem("visite"), "visit");});
test("visité -> visit", function() {deepEqual( Stem("visité"), "visit");});
test("visitées -> visit", function() {deepEqual( Stem("visitées"), "visit");});
test("visiter -> visit", function() {deepEqual( Stem("visiter"), "visit");});
test("visitera -> visit", function() {deepEqual( Stem("visitera"), "visit");});
test("visites -> visit", function() {deepEqual( Stem("visites"), "visit");});
test("viso -> viso", function() {deepEqual( Stem("viso"), "viso");});
test("visons -> vison", function() {deepEqual( Stem("visons"), "vison");});
test("visu -> visu", function() {deepEqual( Stem("visu"), "visu");});
test("vit -> vit", function() {deepEqual( Stem("vit"), "vit");});
test("vît -> vît", function() {deepEqual( Stem("vît"), "vît");});
test("vite -> vit", function() {deepEqual( Stem("vite"), "vit");});
test("vitesse -> vitess", function() {deepEqual( Stem("vitesse"), "vitess");});
test("vitesses -> vitess", function() {deepEqual( Stem("vitesses"), "vitess");});
test("vitraux -> vitral", function() {deepEqual( Stem("vitraux"), "vitral");});
test("vitre -> vitr", function() {deepEqual( Stem("vitre"), "vitr");});
test("vitres -> vitr", function() {deepEqual( Stem("vitres"), "vitr");});
test("viva -> viv", function() {deepEqual( Stem("viva"), "viv");});
test("vivacité -> vivac", function() {deepEqual( Stem("vivacité"), "vivac");});
test("vivaient -> viv", function() {deepEqual( Stem("vivaient"), "viv");});
test("vivais -> viv", function() {deepEqual( Stem("vivais"), "viv");});
test("vivait -> viv", function() {deepEqual( Stem("vivait"), "viv");});
test("vivandière -> vivandi", function() {deepEqual( Stem("vivandière"), "vivandi");});
test("vivandières -> vivandi", function() {deepEqual( Stem("vivandières"), "vivandi");});
test("vivant -> viv", function() {deepEqual( Stem("vivant"), "viv");});
test("vivante -> viv", function() {deepEqual( Stem("vivante"), "viv");});
test("vivants -> viv", function() {deepEqual( Stem("vivants"), "viv");});
test("vive -> viv", function() {deepEqual( Stem("vive"), "viv");});
test("vivement -> viv", function() {deepEqual( Stem("vivement"), "viv");});
test("vivent -> vivent", function() {deepEqual( Stem("vivent"), "vivent");});
test("vives -> viv", function() {deepEqual( Stem("vives"), "viv");});
test("vivez -> viv", function() {deepEqual( Stem("vivez"), "viv");});
test("vivons -> vivon", function() {deepEqual( Stem("vivons"), "vivon");});
test("vivoter -> vivot", function() {deepEqual( Stem("vivoter"), "vivot");});
test("vivra -> vivr", function() {deepEqual( Stem("vivra"), "vivr");});
test("vivrai -> vivr", function() {deepEqual( Stem("vivrai"), "vivr");});
test("vivrait -> vivr", function() {deepEqual( Stem("vivrait"), "vivr");});
test("vivre -> vivr", function() {deepEqual( Stem("vivre"), "vivr");});
test("vivres -> vivr", function() {deepEqual( Stem("vivres"), "vivr");});
test("vivrez -> vivr", function() {deepEqual( Stem("vivrez"), "vivr");});
test("vivrions -> vivrion", function() {deepEqual( Stem("vivrions"), "vivrion");});
test("vivrons -> vivron", function() {deepEqual( Stem("vivrons"), "vivron");});
test("vivront -> vivront", function() {deepEqual( Stem("vivront"), "vivront");});
test("vocation -> vocat", function() {deepEqual( Stem("vocation"), "vocat");});
test("vociférations -> vocifer", function() {deepEqual( Stem("vociférations"), "vocifer");});
test("voeu -> voeu", function() {deepEqual( Stem("voeu"), "voeu");});
test("voeux -> voeux", function() {deepEqual( Stem("voeux"), "voeux");});
test("voguer -> vogu", function() {deepEqual( Stem("voguer"), "vogu");});
test("voi -> voi", function() {deepEqual( Stem("voi"), "voi");});
test("voici -> voic", function() {deepEqual( Stem("voici"), "voic");});
test("voie -> voi", function() {deepEqual( Stem("voie"), "voi");});
test("voient -> voient", function() {deepEqual( Stem("voient"), "voient");});
test("voies -> voi", function() {deepEqual( Stem("voies"), "voi");});
test("voilà -> voilà", function() {deepEqual( Stem("voilà"), "voilà");});
test("voile -> voil", function() {deepEqual( Stem("voile"), "voil");});
test("voilé -> voil", function() {deepEqual( Stem("voilé"), "voil");});
test("voilée -> voil", function() {deepEqual( Stem("voilée"), "voil");});
test("voilées -> voil", function() {deepEqual( Stem("voilées"), "voil");});
test("voiles -> voil", function() {deepEqual( Stem("voiles"), "voil");});
test("voilés -> voil", function() {deepEqual( Stem("voilés"), "voil");});
test("voilure -> voilur", function() {deepEqual( Stem("voilure"), "voilur");});
test("voir -> voir", function() {deepEqual( Stem("voir"), "voir");});
test("vois -> vois", function() {deepEqual( Stem("vois"), "vois");});
test("voisin -> voisin", function() {deepEqual( Stem("voisin"), "voisin");});
test("voisinage -> voisinag", function() {deepEqual( Stem("voisinage"), "voisinag");});
test("voisine -> voisin", function() {deepEqual( Stem("voisine"), "voisin");});
test("voisines -> voisin", function() {deepEqual( Stem("voisines"), "voisin");});
test("voisins -> voisin", function() {deepEqual( Stem("voisins"), "voisin");});
test("voit -> voit", function() {deepEqual( Stem("voit"), "voit");});
test("voiture -> voitur", function() {deepEqual( Stem("voiture"), "voitur");});
test("voitures -> voitur", function() {deepEqual( Stem("voitures"), "voitur");});
test("voix -> voix", function() {deepEqual( Stem("voix"), "voix");});
test("vol -> vol", function() {deepEqual( Stem("vol"), "vol");});
test("volaient -> vol", function() {deepEqual( Stem("volaient"), "vol");});
test("volaille -> volaill", function() {deepEqual( Stem("volaille"), "volaill");});
test("volait -> vol", function() {deepEqual( Stem("volait"), "vol");});
test("volant -> vol", function() {deepEqual( Stem("volant"), "vol");});
test("volants -> vol", function() {deepEqual( Stem("volants"), "vol");});
test("volatiles -> volatil", function() {deepEqual( Stem("volatiles"), "volatil");});
test("volcan -> volcan", function() {deepEqual( Stem("volcan"), "volcan");});
test("vole -> vol", function() {deepEqual( Stem("vole"), "vol");});
test("volé -> vol", function() {deepEqual( Stem("volé"), "vol");});
test("volée -> vol", function() {deepEqual( Stem("volée"), "vol");});
test("volées -> vol", function() {deepEqual( Stem("volées"), "vol");});
test("volent -> volent", function() {deepEqual( Stem("volent"), "volent");});
test("voler -> vol", function() {deepEqual( Stem("voler"), "vol");});
test("volera -> vol", function() {deepEqual( Stem("volera"), "vol");});
test("volerai -> vol", function() {deepEqual( Stem("volerai"), "vol");});
test("volerait -> vol", function() {deepEqual( Stem("volerait"), "vol");});
test("volés -> vol", function() {deepEqual( Stem("volés"), "vol");});
test("volet -> volet", function() {deepEqual( Stem("volet"), "volet");});
test("volets -> volet", function() {deepEqual( Stem("volets"), "volet");});
test("voleur -> voleur", function() {deepEqual( Stem("voleur"), "voleur");});
test("voleurs -> voleur", function() {deepEqual( Stem("voleurs"), "voleur");});
test("volez -> vol", function() {deepEqual( Stem("volez"), "vol");});
test("volière -> voli", function() {deepEqual( Stem("volière"), "voli");});
test("volontaire -> volontair", function() {deepEqual( Stem("volontaire"), "volontair");});
test("volontairement -> volontair", function() {deepEqual( Stem("volontairement"), "volontair");});
test("volontaires -> volontair", function() {deepEqual( Stem("volontaires"), "volontair");});
test("volonté -> volont", function() {deepEqual( Stem("volonté"), "volont");});
test("volontés -> volont", function() {deepEqual( Stem("volontés"), "volont");});
test("volontiers -> volonti", function() {deepEqual( Stem("volontiers"), "volonti");});
test("vols -> vol", function() {deepEqual( Stem("vols"), "vol");});
test("voltaire -> voltair", function() {deepEqual( Stem("voltaire"), "voltair");});
test("voltige -> voltig", function() {deepEqual( Stem("voltige"), "voltig");});
test("voltigeant -> voltig", function() {deepEqual( Stem("voltigeant"), "voltig");});
test("voltiger -> voltig", function() {deepEqual( Stem("voltiger"), "voltig");});
test("voltigeur -> voltigeur", function() {deepEqual( Stem("voltigeur"), "voltigeur");});
test("volubilité -> volubil", function() {deepEqual( Stem("volubilité"), "volubil");});
test("volume -> volum", function() {deepEqual( Stem("volume"), "volum");});
test("volumes -> volum", function() {deepEqual( Stem("volumes"), "volum");});
test("volupté -> volupt", function() {deepEqual( Stem("volupté"), "volupt");});
test("voluptés -> volupt", function() {deepEqual( Stem("voluptés"), "volupt");});
test("voluptueuse -> voluptu", function() {deepEqual( Stem("voluptueuse"), "voluptu");});
test("voluptueusement -> voluptu", function() {deepEqual( Stem("voluptueusement"), "voluptu");});
test("voluptueuses -> voluptu", function() {deepEqual( Stem("voluptueuses"), "voluptu");});
test("voluptueux -> voluptu", function() {deepEqual( Stem("voluptueux"), "voluptu");});
test("volutes -> volut", function() {deepEqual( Stem("volutes"), "volut");});
test("vomero -> vomero", function() {deepEqual( Stem("vomero"), "vomero");});
test("vomir -> vom", function() {deepEqual( Stem("vomir"), "vom");});
test("vomissait -> vom", function() {deepEqual( Stem("vomissait"), "vom");});
test("vont -> vont", function() {deepEqual( Stem("vont"), "vont");});
test("voraces -> vorac", function() {deepEqual( Stem("voraces"), "vorac");});
test("vos -> vos", function() {deepEqual( Stem("vos"), "vos");});
test("votaient -> vot", function() {deepEqual( Stem("votaient"), "vot");});
test("votant -> vot", function() {deepEqual( Stem("votant"), "vot");});
test("vote -> vot", function() {deepEqual( Stem("vote"), "vot");});
test("voté -> vot", function() {deepEqual( Stem("voté"), "vot");});
test("votée -> vot", function() {deepEqual( Stem("votée"), "vot");});
test("voter -> vot", function() {deepEqual( Stem("voter"), "vot");});
test("votes -> vot", function() {deepEqual( Stem("votes"), "vot");});
test("votre -> votr", function() {deepEqual( Stem("votre"), "votr");});
test("vôtre -> vôtr", function() {deepEqual( Stem("vôtre"), "vôtr");});
test("vôtres -> vôtr", function() {deepEqual( Stem("vôtres"), "vôtr");});
test("voudra -> voudr", function() {deepEqual( Stem("voudra"), "voudr");});
test("voudraient -> voudr", function() {deepEqual( Stem("voudraient"), "voudr");});
test("voudrais -> voudr", function() {deepEqual( Stem("voudrais"), "voudr");});
test("voudrait -> voudr", function() {deepEqual( Stem("voudrait"), "voudr");});
test("voudras -> voudr", function() {deepEqual( Stem("voudras"), "voudr");});
test("voudrez -> voudr", function() {deepEqual( Stem("voudrez"), "voudr");});
test("voudriez -> voudr", function() {deepEqual( Stem("voudriez"), "voudr");});
test("voudrions -> voudrion", function() {deepEqual( Stem("voudrions"), "voudrion");});
test("voudront -> voudront", function() {deepEqual( Stem("voudront"), "voudront");});
test("voué -> vou", function() {deepEqual( Stem("voué"), "vou");});
test("vouent -> vouent", function() {deepEqual( Stem("vouent"), "vouent");});
test("vouer -> vou", function() {deepEqual( Stem("vouer"), "vou");});
test("vouèrent -> vou", function() {deepEqual( Stem("vouèrent"), "vou");});
test("voulaient -> voul", function() {deepEqual( Stem("voulaient"), "voul");});
test("voulais -> voul", function() {deepEqual( Stem("voulais"), "voul");});
test("voulait -> voul", function() {deepEqual( Stem("voulait"), "voul");});
test("voulant -> voul", function() {deepEqual( Stem("voulant"), "voul");});
test("voulez -> voul", function() {deepEqual( Stem("voulez"), "voul");});
test("vouliez -> voul", function() {deepEqual( Stem("vouliez"), "voul");});
test("vouloir -> vouloir", function() {deepEqual( Stem("vouloir"), "vouloir");});
test("voulons -> voulon", function() {deepEqual( Stem("voulons"), "voulon");});
test("voulu -> voulu", function() {deepEqual( Stem("voulu"), "voulu");});
test("voulues -> voulu", function() {deepEqual( Stem("voulues"), "voulu");});
test("voulurent -> voulurent", function() {deepEqual( Stem("voulurent"), "voulurent");});
test("voulus -> voulus", function() {deepEqual( Stem("voulus"), "voulus");});
test("voulussent -> voulussent", function() {deepEqual( Stem("voulussent"), "voulussent");});
test("voulut -> voulut", function() {deepEqual( Stem("voulut"), "voulut");});
test("voulût -> voulût", function() {deepEqual( Stem("voulût"), "voulût");});
test("vous -> vous", function() {deepEqual( Stem("vous"), "vous");});
test("voûte -> voût", function() {deepEqual( Stem("voûte"), "voût");});
test("voûtes -> voût", function() {deepEqual( Stem("voûtes"), "voût");});
test("voyage -> voyag", function() {deepEqual( Stem("voyage"), "voyag");});
test("voyagé -> voyag", function() {deepEqual( Stem("voyagé"), "voyag");});
test("voyageait -> voyag", function() {deepEqual( Stem("voyageait"), "voyag");});
test("voyageant -> voyag", function() {deepEqual( Stem("voyageant"), "voyag");});
test("voyagent -> voyagent", function() {deepEqual( Stem("voyagent"), "voyagent");});
test("voyageons -> voyageon", function() {deepEqual( Stem("voyageons"), "voyageon");});
test("voyager -> voyag", function() {deepEqual( Stem("voyager"), "voyag");});
test("voyages -> voyag", function() {deepEqual( Stem("voyages"), "voyag");});
test("voyageur -> voyageur", function() {deepEqual( Stem("voyageur"), "voyageur");});
test("voyageurs -> voyageur", function() {deepEqual( Stem("voyageurs"), "voyageur");});
test("voyageuse -> voyag", function() {deepEqual( Stem("voyageuse"), "voyag");});
test("voyagez -> voyag", function() {deepEqual( Stem("voyagez"), "voyag");});
test("voyaient -> voi", function() {deepEqual( Stem("voyaient"), "voi");});
test("voyais -> voi", function() {deepEqual( Stem("voyais"), "voi");});
test("voyait -> voi", function() {deepEqual( Stem("voyait"), "voi");});
test("voyant -> voi", function() {deepEqual( Stem("voyant"), "voi");});
test("voyez -> voi", function() {deepEqual( Stem("voyez"), "voi");});
test("voyiez -> voi", function() {deepEqual( Stem("voyiez"), "voi");});
test("voyons -> voyon", function() {deepEqual( Stem("voyons"), "voyon");});
test("vrai -> vrai", function() {deepEqual( Stem("vrai"), "vrai");});
test("vraie -> vrai", function() {deepEqual( Stem("vraie"), "vrai");});
test("vraies -> vrai", function() {deepEqual( Stem("vraies"), "vrai");});
test("vraiment -> vrai", function() {deepEqual( Stem("vraiment"), "vrai");});
test("vrais -> vrais", function() {deepEqual( Stem("vrais"), "vrais");});
test("vraisemblable -> vraisembl", function() {deepEqual( Stem("vraisemblable"), "vraisembl");});
test("vraisemblablement -> vraisembl", function() {deepEqual( Stem("vraisemblablement"), "vraisembl");});
test("vu -> vu", function() {deepEqual( Stem("vu"), "vu");});
test("vue -> vu", function() {deepEqual( Stem("vue"), "vu");});
test("vues -> vu", function() {deepEqual( Stem("vues"), "vu");});
test("vulgaire -> vulgair", function() {deepEqual( Stem("vulgaire"), "vulgair");});
test("vulgairement -> vulgair", function() {deepEqual( Stem("vulgairement"), "vulgair");});
test("vulgaires -> vulgair", function() {deepEqual( Stem("vulgaires"), "vulgair");});
test("vulgarité -> vulgar", function() {deepEqual( Stem("vulgarité"), "vulgar");});
test("vus -> vus", function() {deepEqual( Stem("vus"), "vus");});
test("w -> w", function() {deepEqual( Stem("w"), "w");});
test("wagon -> wagon", function() {deepEqual( Stem("wagon"), "wagon");});
test("wagons -> wagon", function() {deepEqual( Stem("wagons"), "wagon");});
test("wagram -> wagram", function() {deepEqual( Stem("wagram"), "wagram");});
test("wahsatch -> wahsatch", function() {deepEqual( Stem("wahsatch"), "wahsatch");});
test("walbah -> walbah", function() {deepEqual( Stem("walbah"), "walbah");});
test("walter -> walt", function() {deepEqual( Stem("walter"), "walt");});
test("wandering -> wandering", function() {deepEqual( Stem("wandering"), "wandering");});
test("was -> was", function() {deepEqual( Stem("was"), "was");});
test("washington -> washington", function() {deepEqual( Stem("washington"), "washington");});
test("waterloo -> waterloo", function() {deepEqual( Stem("waterloo"), "waterloo");});
test("wayne -> wayn", function() {deepEqual( Stem("wayne"), "wayn");});
test("we -> we", function() {deepEqual( Stem("we"), "we");});
test("weber -> web", function() {deepEqual( Stem("weber"), "web");});
test("wellington -> wellington", function() {deepEqual( Stem("wellington"), "wellington");});
test("were -> wer", function() {deepEqual( Stem("were"), "wer");});
test("west -> west", function() {deepEqual( Stem("west"), "west");});
test("wharf -> wharf", function() {deepEqual( Stem("wharf"), "wharf");});
test("wharfs -> wharf", function() {deepEqual( Stem("wharfs"), "wharf");});
test("which -> which", function() {deepEqual( Stem("which"), "which");});
test("whisky -> whisky", function() {deepEqual( Stem("whisky"), "whisky");});
test("whisnou -> whisnou", function() {deepEqual( Stem("whisnou"), "whisnou");});
test("whist -> whist", function() {deepEqual( Stem("whist"), "whist");});
test("white -> whit", function() {deepEqual( Stem("white"), "whit");});
test("will -> will", function() {deepEqual( Stem("will"), "will");});
test("william -> william", function() {deepEqual( Stem("william"), "william");});
test("wilson -> wilson", function() {deepEqual( Stem("wilson"), "wilson");});
test("with -> with", function() {deepEqual( Stem("with"), "with");});
test("withdrew -> withdrew", function() {deepEqual( Stem("withdrew"), "withdrew");});
test("word -> word", function() {deepEqual( Stem("word"), "word");});
test("would -> would", function() {deepEqual( Stem("would"), "would");});
test("wyoming -> wyoming", function() {deepEqual( Stem("wyoming"), "wyoming");});
test("x -> x", function() {deepEqual( Stem("x"), "x");});
test("xavier -> xavi", function() {deepEqual( Stem("xavier"), "xavi");});
test("xérès -> xéres", function() {deepEqual( Stem("xérès"), "xéres");});
test("xi -> xi", function() {deepEqual( Stem("xi"), "xi");});
test("xii -> xii", function() {deepEqual( Stem("xii"), "xii");});
test("xiii -> xii", function() {deepEqual( Stem("xiii"), "xii");});
test("xiv -> xiv", function() {deepEqual( Stem("xiv"), "xiv");});
test("xix -> xix", function() {deepEqual( Stem("xix"), "xix");});
test("xv -> xv", function() {deepEqual( Stem("xv"), "xv");});
test("xvi -> xvi", function() {deepEqual( Stem("xvi"), "xvi");});
test("xvii -> xvii", function() {deepEqual( Stem("xvii"), "xvii");});
test("xviii -> xvii", function() {deepEqual( Stem("xviii"), "xvii");});
test("xx -> xx", function() {deepEqual( Stem("xx"), "xx");});
test("xxi -> xxi", function() {deepEqual( Stem("xxi"), "xxi");});
test("xxii -> xxii", function() {deepEqual( Stem("xxii"), "xxii");});
test("xxiii -> xxii", function() {deepEqual( Stem("xxiii"), "xxii");});
test("xxiv -> xxiv", function() {deepEqual( Stem("xxiv"), "xxiv");});
test("xxix -> xxix", function() {deepEqual( Stem("xxix"), "xxix");});
test("xxv -> xxv", function() {deepEqual( Stem("xxv"), "xxv");});
test("xxvi -> xxvi", function() {deepEqual( Stem("xxvi"), "xxvi");});
test("xxvii -> xxvii", function() {deepEqual( Stem("xxvii"), "xxvii");});
test("xxviii -> xxvii", function() {deepEqual( Stem("xxviii"), "xxvii");});
test("xxx -> xxx", function() {deepEqual( Stem("xxx"), "xxx");});
test("xxxi -> xxxi", function() {deepEqual( Stem("xxxi"), "xxxi");});
test("xxxii -> xxxii", function() {deepEqual( Stem("xxxii"), "xxxii");});
test("xxxiii -> xxxii", function() {deepEqual( Stem("xxxiii"), "xxxii");});
test("xxxiv -> xxxiv", function() {deepEqual( Stem("xxxiv"), "xxxiv");});
test("xxxv -> xxxv", function() {deepEqual( Stem("xxxv"), "xxxv");});
test("xxxvi -> xxxvi", function() {deepEqual( Stem("xxxvi"), "xxxvi");});
test("xxxvii -> xxxvii", function() {deepEqual( Stem("xxxvii"), "xxxvii");});
test("y -> y", function() {deepEqual( Stem("y"), "y");});
test("yacht -> yacht", function() {deepEqual( Stem("yacht"), "yacht");});
test("yachts -> yacht", function() {deepEqual( Stem("yachts"), "yacht");});
test("yakounines -> yakounin", function() {deepEqual( Stem("yakounines"), "yakounin");});
test("yankee -> yanke", function() {deepEqual( Stem("yankee"), "yanke");});
test("yeddo -> yeddo", function() {deepEqual( Stem("yeddo"), "yeddo");});
test("yert -> yert", function() {deepEqual( Stem("yert"), "yert");});
test("yet -> yet", function() {deepEqual( Stem("yet"), "yet");});
test("yeux -> yeux", function() {deepEqual( Stem("yeux"), "yeux");});
test("yokohama -> yokoham", function() {deepEqual( Stem("yokohama"), "yokoham");});
test("york -> york", function() {deepEqual( Stem("york"), "york");});
test("young -> young", function() {deepEqual( Stem("young"), "young");});
test("zambajon -> zambajon", function() {deepEqual( Stem("zambajon"), "zambajon");});
test("zeb -> zeb", function() {deepEqual( Stem("zeb"), "zeb");});
test("zébrés -> zebr", function() {deepEqual( Stem("zébrés"), "zebr");});
test("zébus -> zébus", function() {deepEqual( Stem("zébus"), "zébus");});
test("zèle -> zel", function() {deepEqual( Stem("zèle"), "zel");});
test("zélés -> zel", function() {deepEqual( Stem("zélés"), "zel");});
test("zénith -> zénith", function() {deepEqual( Stem("zénith"), "zénith");});
test("zigzags -> zigzag", function() {deepEqual( Stem("zigzags"), "zigzag");});
test("zingarelli -> zingarel", function() {deepEqual( Stem("zingarelli"), "zingarel");});
test("zonders -> zonder", function() {deepEqual( Stem("zonders"), "zonder");});
test("zoroastre -> zoroastr", function() {deepEqual( Stem("zoroastre"), "zoroastr");});
test("zurla -> zurl", function() {deepEqual( Stem("zurla"), "zurl");});
