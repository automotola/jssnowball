QUnit.config.hidepassed = true;
var Stem = snowballFactory.newStemmer('swedish').stem;
test("a -> a", function() {deepEqual( Stem("a"), "a");});
test("aaele -> aael", function() {deepEqual( Stem("aaele"), "aael");});
test("aah -> aah", function() {deepEqual( Stem("aah"), "aah");});
test("ab -> ab", function() {deepEqual( Stem("ab"), "ab");});
test("abba -> abb", function() {deepEqual( Stem("abba"), "abb");});
test("abborrar -> abborr", function() {deepEqual( Stem("abborrar"), "abborr");});
test("abborrarna -> abborr", function() {deepEqual( Stem("abborrarna"), "abborr");});
test("abborre -> abborr", function() {deepEqual( Stem("abborre"), "abborr");});
test("abborrpinne -> abborrpin", function() {deepEqual( Stem("abborrpinne"), "abborrpin");});
test("abc -> abc", function() {deepEqual( Stem("abc"), "abc");});
test("abednego -> abednego", function() {deepEqual( Stem("abednego"), "abednego");});
test("abort -> abort", function() {deepEqual( Stem("abort"), "abort");});
test("abrahams -> abraham", function() {deepEqual( Stem("abrahams"), "abraham");});
test("absint -> absint", function() {deepEqual( Stem("absint"), "absint");});
test("abskons -> abskon", function() {deepEqual( Stem("abskons"), "abskon");});
test("absolut -> absolut", function() {deepEqual( Stem("absolut"), "absolut");});
test("ack -> ack", function() {deepEqual( Stem("ack"), "ack");});
test("ackompanjerade -> ackompanjer", function() {deepEqual( Stem("ackompanjerade"), "ackompanjer");});
test("ackord -> ackord", function() {deepEqual( Stem("ackord"), "ackord");});
test("acllerbring -> acllerbring", function() {deepEqual( Stem("acllerbring"), "acllerbring");});
test("acob -> acob", function() {deepEqual( Stem("acob"), "acob");});
test("ad -> ad", function() {deepEqual( Stem("ad"), "ad");});
test("adclc -> adclc", function() {deepEqual( Stem("adclc"), "adclc");});
test("adcle -> adcl", function() {deepEqual( Stem("adcle"), "adcl");});
test("addra -> addr", function() {deepEqual( Stem("addra"), "addr");});
test("ade -> ade", function() {deepEqual( Stem("ade"), "ade");});
test("adeie -> adei", function() {deepEqual( Stem("adeie"), "adei");});
test("adel -> adel", function() {deepEqual( Stem("adel"), "adel");});
test("adelc -> adelc", function() {deepEqual( Stem("adelc"), "adelc");});
test("adele -> adel", function() {deepEqual( Stem("adele"), "adel");});
test("adeles -> adel", function() {deepEqual( Stem("adeles"), "adel");});
test("adelig -> ade", function() {deepEqual( Stem("adelig"), "ade");});
test("adelns -> adeln", function() {deepEqual( Stem("adelns"), "adeln");});
test("adelsdam -> adelsdam", function() {deepEqual( Stem("adelsdam"), "adelsdam");});
test("adelsfröken -> adelsfrök", function() {deepEqual( Stem("adelsfröken"), "adelsfrök");});
test("adelskalendern -> adelskalend", function() {deepEqual( Stem("adelskalendern"), "adelskalend");});
test("adelskalendrar -> adelskalendr", function() {deepEqual( Stem("adelskalendrar"), "adelskalendr");});
test("adelskapen -> adelskap", function() {deepEqual( Stem("adelskapen"), "adelskap");});
test("adelsman -> adelsman", function() {deepEqual( Stem("adelsman"), "adelsman");});
test("adelsmän -> adelsmän", function() {deepEqual( Stem("adelsmän"), "adelsmän");});
test("adelsvapen -> adelsvap", function() {deepEqual( Stem("adelsvapen"), "adelsvap");});
test("aderton -> aderton", function() {deepEqual( Stem("aderton"), "aderton");});
test("adertonde -> adertond", function() {deepEqual( Stem("adertonde"), "adertond");});
test("adertonhundratalet -> adertonhundratalet", function() {deepEqual( Stem("adertonhundratalet"), "adertonhundratalet");});
test("adertonskilling -> adertonskilling", function() {deepEqual( Stem("adertonskilling"), "adertonskilling");});
test("adjunkt -> adjunk", function() {deepEqual( Stem("adjunkt"), "adjunk");});
test("adjunkten -> adjunk", function() {deepEqual( Stem("adjunkten"), "adjunk");});
test("adjunktur -> adjunktur", function() {deepEqual( Stem("adjunktur"), "adjunktur");});
test("adjö -> adjö", function() {deepEqual( Stem("adjö"), "adjö");});
test("adlades -> adl", function() {deepEqual( Stem("adlades"), "adl");});
test("adler -> adl", function() {deepEqual( Stem("adler"), "adl");});
test("adlerbeth -> adlerbeth", function() {deepEqual( Stem("adlerbeth"), "adlerbeth");});
test("adlig -> adl", function() {deepEqual( Stem("adlig"), "adl");});
test("adliga -> adl", function() {deepEqual( Stem("adliga"), "adl");});
test("adligt -> adl", function() {deepEqual( Stem("adligt"), "adl");});
test("adolfs -> adolf", function() {deepEqual( Stem("adolfs"), "adolf");});
test("adopterad -> adopter", function() {deepEqual( Stem("adopterad"), "adopter");});
test("adopterade -> adopter", function() {deepEqual( Stem("adopterade"), "adopter");});
test("adoratör -> adoratör", function() {deepEqual( Stem("adoratör"), "adoratör");});
test("adress -> adress", function() {deepEqual( Stem("adress"), "adress");});
test("adressen -> adress", function() {deepEqual( Stem("adressen"), "adress");});
test("adressera -> adresser", function() {deepEqual( Stem("adressera"), "adresser");});
test("adresserade -> adresser", function() {deepEqual( Stem("adresserade"), "adresser");});
test("adresserat -> adresser", function() {deepEqual( Stem("adresserat"), "adresser");});
test("adt -> adt", function() {deepEqual( Stem("adt"), "adt");});
test("advent -> advent", function() {deepEqual( Stem("advent"), "advent");});
test("advoceras -> advocer", function() {deepEqual( Stem("advoceras"), "advocer");});
test("advokat -> advok", function() {deepEqual( Stem("advokat"), "advok");});
test("advokatyr -> advokatyr", function() {deepEqual( Stem("advokatyr"), "advokatyr");});
test("aek -> aek", function() {deepEqual( Stem("aek"), "aek");});
test("aet -> aet", function() {deepEqual( Stem("aet"), "aet");});
test("aeternitatis -> aeternitatis", function() {deepEqual( Stem("aeternitatis"), "aeternitatis");});
test("af -> af", function() {deepEqual( Stem("af"), "af");});
test("afbetalning -> afbetalning", function() {deepEqual( Stem("afbetalning"), "afbetalning");});
test("afbida -> afbid", function() {deepEqual( Stem("afbida"), "afbid");});
test("afbrott -> afbrot", function() {deepEqual( Stem("afbrott"), "afbrot");});
test("afbrutna -> afbrutn", function() {deepEqual( Stem("afbrutna"), "afbrutn");});
test("afbryta -> afbryt", function() {deepEqual( Stem("afbryta"), "afbryt");});
test("afbröt -> afbröt", function() {deepEqual( Stem("afbröt"), "afbröt");});
test("afdagatagne -> afdagatagn", function() {deepEqual( Stem("afdagatagne"), "afdagatagn");});
test("afdrag -> afdrag", function() {deepEqual( Stem("afdrag"), "afdrag");});
test("afdukadt -> afdukad", function() {deepEqual( Stem("afdukadt"), "afdukad");});
test("affaires -> affair", function() {deepEqual( Stem("affaires"), "affair");});
test("affallen -> affall", function() {deepEqual( Stem("affallen"), "affall");});
test("affekterade -> affekter", function() {deepEqual( Stem("affekterade"), "affekter");});
test("affär -> affär", function() {deepEqual( Stem("affär"), "affär");});
test("affärdande -> affärd", function() {deepEqual( Stem("affärdande"), "affärd");});
test("affären -> affär", function() {deepEqual( Stem("affären"), "affär");});
test("affärer -> affär", function() {deepEqual( Stem("affärer"), "affär");});
test("affärerna -> affär", function() {deepEqual( Stem("affärerna"), "affär");});
test("affärernas -> affär", function() {deepEqual( Stem("affärernas"), "affär");});
test("affärsbrev -> affärsbrev", function() {deepEqual( Stem("affärsbrev"), "affärsbrev");});
test("affärsman -> affärsman", function() {deepEqual( Stem("affärsman"), "affärsman");});
test("affärsmannen -> affärsman", function() {deepEqual( Stem("affärsmannen"), "affärsman");});
test("affärsmannens -> affärsman", function() {deepEqual( Stem("affärsmannens"), "affärsman");});
test("affärsmin -> affärsmin", function() {deepEqual( Stem("affärsmin"), "affärsmin");});
test("affärsmässig -> affärsmäss", function() {deepEqual( Stem("affärsmässig"), "affärsmäss");});
test("affärsmässiga -> affärsmäss", function() {deepEqual( Stem("affärsmässiga"), "affärsmäss");});
test("affärsmässigt -> affärsmäss", function() {deepEqual( Stem("affärsmässigt"), "affärsmäss");});
test("affärsställning -> affärsställning", function() {deepEqual( Stem("affärsställning"), "affärsställning");});
test("affärsställningen -> affärsställning", function() {deepEqual( Stem("affärsställningen"), "affärsställning");});
test("affärsvänner -> affärsvän", function() {deepEqual( Stem("affärsvänner"), "affärsvän");});
test("afgjord -> afgjord", function() {deepEqual( Stem("afgjord"), "afgjord");});
test("afgjordt -> afgjord", function() {deepEqual( Stem("afgjordt"), "afgjord");});
test("afgjort -> afgjort", function() {deepEqual( Stem("afgjort"), "afgjort");});
test("afgrunden -> afgrund", function() {deepEqual( Stem("afgrunden"), "afgrund");});
test("afgud -> afgud", function() {deepEqual( Stem("afgud"), "afgud");});
test("afgudade -> afgud", function() {deepEqual( Stem("afgudade"), "afgud");});
test("afgudalika -> afgudalik", function() {deepEqual( Stem("afgudalika"), "afgudalik");});
test("afgöra -> afgör", function() {deepEqual( Stem("afgöra"), "afgör");});
test("afhandla -> afhandl", function() {deepEqual( Stem("afhandla"), "afhandl");});
test("afhemta -> afhemt", function() {deepEqual( Stem("afhemta"), "afhemt");});
test("afhjelpa -> afhjelp", function() {deepEqual( Stem("afhjelpa"), "afhjelp");});
test("afhuggen -> afhugg", function() {deepEqual( Stem("afhuggen"), "afhugg");});
test("afhålla -> afhåll", function() {deepEqual( Stem("afhålla"), "afhåll");});
test("afhållen -> afhåll", function() {deepEqual( Stem("afhållen"), "afhåll");});
test("afhölja -> afhölj", function() {deepEqual( Stem("afhölja"), "afhölj");});
test("afhöll -> afhöll", function() {deepEqual( Stem("afhöll"), "afhöll");});
test("afhöra -> afhör", function() {deepEqual( Stem("afhöra"), "afhör");});
test("afhörandet -> afhör", function() {deepEqual( Stem("afhörandet"), "afhör");});
test("afhörde -> afhörd", function() {deepEqual( Stem("afhörde"), "afhörd");});
test("afhört -> afhört", function() {deepEqual( Stem("afhört"), "afhört");});
test("afklippt -> afklippt", function() {deepEqual( Stem("afklippt"), "afklippt");});
test("afklädandet -> afkläd", function() {deepEqual( Stem("afklädandet"), "afkläd");});
test("afkomman -> afkomman", function() {deepEqual( Stem("afkomman"), "afkomman");});
test("aflagda -> aflag", function() {deepEqual( Stem("aflagda"), "aflag");});
test("aflyftat -> aflyft", function() {deepEqual( Stem("aflyftat"), "aflyft");});
test("afläggare -> aflägg", function() {deepEqual( Stem("afläggare"), "aflägg");});
test("aflägsen -> aflägs", function() {deepEqual( Stem("aflägsen"), "aflägs");});
test("aflägsna -> aflägsn", function() {deepEqual( Stem("aflägsna"), "aflägsn");});
test("aflägsnade -> aflägsn", function() {deepEqual( Stem("aflägsnade"), "aflägsn");});
test("aflägsnare -> aflägsn", function() {deepEqual( Stem("aflägsnare"), "aflägsn");});
test("aflägsnat -> aflägsn", function() {deepEqual( Stem("aflägsnat"), "aflägsn");});
test("aflöper -> aflöp", function() {deepEqual( Stem("aflöper"), "aflöp");});
test("afmagrade -> afmagr", function() {deepEqual( Stem("afmagrade"), "afmagr");});
test("afmätta -> afmät", function() {deepEqual( Stem("afmätta"), "afmät");});
test("afmålade -> afmål", function() {deepEqual( Stem("afmålade"), "afmål");});
test("afplanka -> afplank", function() {deepEqual( Stem("afplanka"), "afplank");});
test("afpressade -> afpress", function() {deepEqual( Stem("afpressade"), "afpress");});
test("afresa -> afres", function() {deepEqual( Stem("afresa"), "afres");});
test("afresan -> afresan", function() {deepEqual( Stem("afresan"), "afresan");});
test("afreste -> afrest", function() {deepEqual( Stem("afreste"), "afrest");});
test("afri -> afri", function() {deepEqual( Stem("afri"), "afri");});
test("afrika -> afrik", function() {deepEqual( Stem("afrika"), "afrik");});
test("afrikahettan -> afrikahettan", function() {deepEqual( Stem("afrikahettan"), "afrikahettan");});
test("afsagt -> afsag", function() {deepEqual( Stem("afsagt"), "afsag");});
test("afsats -> afsat", function() {deepEqual( Stem("afsats"), "afsat");});
test("afse -> afs", function() {deepEqual( Stem("afse"), "afs");});
test("afseende -> afseend", function() {deepEqual( Stem("afseende"), "afseend");});
test("afseenden -> afseend", function() {deepEqual( Stem("afseenden"), "afseend");});
test("afsides -> afsid", function() {deepEqual( Stem("afsides"), "afsid");});
test("afskaffande -> afskaff", function() {deepEqual( Stem("afskaffande"), "afskaff");});
test("afsked -> afsked", function() {deepEqual( Stem("afsked"), "afsked");});
test("afskedshelsning -> afskedshelsning", function() {deepEqual( Stem("afskedshelsning"), "afskedshelsning");});
test("afskedskopp -> afskedskopp", function() {deepEqual( Stem("afskedskopp"), "afskedskopp");});
test("afskedsstunden -> afskedsstund", function() {deepEqual( Stem("afskedsstunden"), "afskedsstund");});
test("afskilda -> afskild", function() {deepEqual( Stem("afskilda"), "afskild");});
test("afskilde -> afskild", function() {deepEqual( Stem("afskilde"), "afskild");});
test("afskurit -> afskurit", function() {deepEqual( Stem("afskurit"), "afskurit");});
test("afsky -> afsky", function() {deepEqual( Stem("afsky"), "afsky");});
test("afslag -> afslag", function() {deepEqual( Stem("afslag"), "afslag");});
test("afslet -> afslet", function() {deepEqual( Stem("afslet"), "afslet");});
test("afslog -> afslog", function() {deepEqual( Stem("afslog"), "afslog");});
test("afsluta -> afslut", function() {deepEqual( Stem("afsluta"), "afslut");});
test("afslutande -> afslut", function() {deepEqual( Stem("afslutande"), "afslut");});
test("afslutat -> afslut", function() {deepEqual( Stem("afslutat"), "afslut");});
test("afspisa -> afspis", function() {deepEqual( Stem("afspisa"), "afspis");});
test("afsteg -> afsteg", function() {deepEqual( Stem("afsteg"), "afsteg");});
test("afstyrka -> afstyrk", function() {deepEqual( Stem("afstyrka"), "afstyrk");});
test("afstyrkt -> afstyrk", function() {deepEqual( Stem("afstyrkt"), "afstyrk");});
test("afstå -> afstå", function() {deepEqual( Stem("afstå"), "afstå");});
test("afstånd -> afstånd", function() {deepEqual( Stem("afstånd"), "afstånd");});
test("afsändt -> afsänd", function() {deepEqual( Stem("afsändt"), "afsänd");});
test("aftaget -> aftaget", function() {deepEqual( Stem("aftaget"), "aftaget");});
test("aftagit -> aftagit", function() {deepEqual( Stem("aftagit"), "aftagit");});
test("aftnar -> aftn", function() {deepEqual( Stem("aftnar"), "aftn");});
test("aftnarna -> aftn", function() {deepEqual( Stem("aftnarna"), "aftn");});
test("aftnarne -> aftn", function() {deepEqual( Stem("aftnarne"), "aftn");});
test("aftog -> aftog", function() {deepEqual( Stem("aftog"), "aftog");});
test("afton -> afton", function() {deepEqual( Stem("afton"), "afton");});
test("aftonblad -> aftonbl", function() {deepEqual( Stem("aftonblad"), "aftonbl");});
test("aftonbladet -> aftonbladet", function() {deepEqual( Stem("aftonbladet"), "aftonbladet");});
test("aftonbordet -> aftonbordet", function() {deepEqual( Stem("aftonbordet"), "aftonbordet");});
test("aftonbön -> aftonbön", function() {deepEqual( Stem("aftonbön"), "aftonbön");});
test("aftonen -> afton", function() {deepEqual( Stem("aftonen"), "afton");});
test("aftonens -> afton", function() {deepEqual( Stem("aftonens"), "afton");});
test("aftonfläktar -> aftonfläk", function() {deepEqual( Stem("aftonfläktar"), "aftonfläk");});
test("aftonlampan -> aftonlampan", function() {deepEqual( Stem("aftonlampan"), "aftonlampan");});
test("aftonlandet -> aftonl", function() {deepEqual( Stem("aftonlandet"), "aftonl");});
test("aftonljuset -> aftonljuset", function() {deepEqual( Stem("aftonljuset"), "aftonljuset");});
test("aftonmåltid -> aftonmåltid", function() {deepEqual( Stem("aftonmåltid"), "aftonmåltid");});
test("aftonmåltiden -> aftonmåltid", function() {deepEqual( Stem("aftonmåltiden"), "aftonmåltid");});
test("aftonpipan -> aftonpipan", function() {deepEqual( Stem("aftonpipan"), "aftonpipan");});
test("aftonpromenad -> aftonpromen", function() {deepEqual( Stem("aftonpromenad"), "aftonpromen");});
test("aftonringningen -> aftonringning", function() {deepEqual( Stem("aftonringningen"), "aftonringning");});
test("aftons -> afton", function() {deepEqual( Stem("aftons"), "afton");});
test("aftonsken -> aftonsk", function() {deepEqual( Stem("aftonsken"), "aftonsk");});
test("aftonstjärnan -> aftonstjärnan", function() {deepEqual( Stem("aftonstjärnan"), "aftonstjärnan");});
test("aftonstund -> aftonstund", function() {deepEqual( Stem("aftonstund"), "aftonstund");});
test("aftonsällskap -> aftonsällskap", function() {deepEqual( Stem("aftonsällskap"), "aftonsällskap");});
test("aftonvinden -> aftonvind", function() {deepEqual( Stem("aftonvinden"), "aftonvind");});
test("aftvungit -> aftvungit", function() {deepEqual( Stem("aftvungit"), "aftvungit");});
test("afund -> afund", function() {deepEqual( Stem("afund"), "afund");});
test("afundsjuka -> afundsjuk", function() {deepEqual( Stem("afundsjuka"), "afundsjuk");});
test("afundsvärd -> afundsvärd", function() {deepEqual( Stem("afundsvärd"), "afundsvärd");});
test("afundsvärdast -> afundsvärd", function() {deepEqual( Stem("afundsvärdast"), "afundsvärd");});
test("afvakta -> afvak", function() {deepEqual( Stem("afvakta"), "afvak");});
test("afvaktade -> afvak", function() {deepEqual( Stem("afvaktade"), "afvak");});
test("afvika -> afvik", function() {deepEqual( Stem("afvika"), "afvik");});
test("afvoghet -> afvog", function() {deepEqual( Stem("afvoghet"), "afvog");});
test("afväpnade -> afväpn", function() {deepEqual( Stem("afväpnade"), "afväpn");});
test("afväpnades -> afväpn", function() {deepEqual( Stem("afväpnades"), "afväpn");});
test("aga -> aga", function() {deepEqual( Stem("aga"), "aga");});
test("agan -> agan", function() {deepEqual( Stem("agan"), "agan");});
test("agaren -> agar", function() {deepEqual( Stem("agaren"), "agar");});
test("agda -> agd", function() {deepEqual( Stem("agda"), "agd");});
test("agde -> agd", function() {deepEqual( Stem("agde"), "agd");});
test("age -> age", function() {deepEqual( Stem("age"), "age");});
test("agent -> agent", function() {deepEqual( Stem("agent"), "agent");});
test("agera -> ager", function() {deepEqual( Stem("agera"), "ager");});
test("agerande -> ager", function() {deepEqual( Stem("agerande"), "ager");});
test("agg -> agg", function() {deepEqual( Stem("agg"), "agg");});
test("aggande -> agg", function() {deepEqual( Stem("aggande"), "agg");});
test("agn -> agn", function() {deepEqual( Stem("agn"), "agn");});
test("agnar -> agn", function() {deepEqual( Stem("agnar"), "agn");});
test("agnes -> agn", function() {deepEqual( Stem("agnes"), "agn");});
test("agnet -> agnet", function() {deepEqual( Stem("agnet"), "agnet");});
test("ah -> ah", function() {deepEqual( Stem("ah"), "ah");});
test("air -> air", function() {deepEqual( Stem("air"), "air");});
test("aj -> aj", function() {deepEqual( Stem("aj"), "aj");});
test("ak -> ak", function() {deepEqual( Stem("ak"), "ak");});
test("akademien -> akademi", function() {deepEqual( Stem("akademien"), "akademi");});
test("akademikamrat -> akademikamr", function() {deepEqual( Stem("akademikamrat"), "akademikamr");});
test("akademikamrater -> akademikamrat", function() {deepEqual( Stem("akademikamrater"), "akademikamrat");});
test("akademitid -> akademitid", function() {deepEqual( Stem("akademitid"), "akademitid");});
test("akardroskor -> akardrosk", function() {deepEqual( Stem("akardroskor"), "akardrosk");});
test("akrarna -> akr", function() {deepEqual( Stem("akrarna"), "akr");});
test("akrobat -> akrob", function() {deepEqual( Stem("akrobat"), "akrob");});
test("aksgrå -> aksgrå", function() {deepEqual( Stem("aksgrå"), "aksgrå");});
test("akt -> akt", function() {deepEqual( Stem("akt"), "akt");});
test("akta -> akt", function() {deepEqual( Stem("akta"), "akt");});
test("aktad -> akt", function() {deepEqual( Stem("aktad"), "akt");});
test("aktade -> akt", function() {deepEqual( Stem("aktade"), "akt");});
test("aktar -> akt", function() {deepEqual( Stem("aktar"), "akt");});
test("aktas -> akt", function() {deepEqual( Stem("aktas"), "akt");});
test("aktat -> akt", function() {deepEqual( Stem("aktat"), "akt");});
test("akten -> akt", function() {deepEqual( Stem("akten"), "akt");});
test("akterut -> akterut", function() {deepEqual( Stem("akterut"), "akterut");});
test("aktiebolag -> aktiebolag", function() {deepEqual( Stem("aktiebolag"), "aktiebolag");});
test("aktier -> akti", function() {deepEqual( Stem("aktier"), "akti");});
test("aktierna -> akti", function() {deepEqual( Stem("aktierna"), "akti");});
test("aktning -> aktning", function() {deepEqual( Stem("aktning"), "aktning");});
test("aktningen -> aktning", function() {deepEqual( Stem("aktningen"), "aktning");});
test("aktningsfull -> aktningsfull", function() {deepEqual( Stem("aktningsfull"), "aktningsfull");});
test("aktningsfullt -> aktningsfull", function() {deepEqual( Stem("aktningsfullt"), "aktningsfull");});
test("aktningsvärd -> aktningsvärd", function() {deepEqual( Stem("aktningsvärd"), "aktningsvärd");});
test("aktningsvärda -> aktningsvärd", function() {deepEqual( Stem("aktningsvärda"), "aktningsvärd");});
test("aktningsvärde -> aktningsvärd", function() {deepEqual( Stem("aktningsvärde"), "aktningsvärd");});
test("aktningsvärt -> aktningsvärt", function() {deepEqual( Stem("aktningsvärt"), "aktningsvärt");});
test("aktsamt -> aktsamt", function() {deepEqual( Stem("aktsamt"), "aktsamt");});
test("aktuella -> aktuell", function() {deepEqual( Stem("aktuella"), "aktuell");});
test("aktör -> aktör", function() {deepEqual( Stem("aktör"), "aktör");});
test("akva -> akv", function() {deepEqual( Stem("akva"), "akv");});
test("akvavit -> akvavit", function() {deepEqual( Stem("akvavit"), "akvavit");});
test("al -> al", function() {deepEqual( Stem("al"), "al");});
test("alabaster -> alabast", function() {deepEqual( Stem("alabaster"), "alabast");});
test("alarmera -> alarmer", function() {deepEqual( Stem("alarmera"), "alarmer");});
test("albuske -> albusk", function() {deepEqual( Stem("albuske"), "albusk");});
test("aldng -> aldng", function() {deepEqual( Stem("aldng"), "aldng");});
test("aldrig -> aldr", function() {deepEqual( Stem("aldrig"), "aldr");});
test("alexander -> alexand", function() {deepEqual( Stem("alexander"), "alexand");});
test("alfred -> alfred", function() {deepEqual( Stem("alfred"), "alfred");});
test("alfvar -> alfv", function() {deepEqual( Stem("alfvar"), "alfv");});
test("algeriet -> algeriet", function() {deepEqual( Stem("algeriet"), "algeriet");});
test("alice -> alic", function() {deepEqual( Stem("alice"), "alic");});
test("alkohol -> alkohol", function() {deepEqual( Stem("alkohol"), "alkohol");});
test("alkoholister -> alkoholist", function() {deepEqual( Stem("alkoholister"), "alkoholist");});
test("alkov -> alkov", function() {deepEqual( Stem("alkov"), "alkov");});
test("all -> all", function() {deepEqual( Stem("all"), "all");});
test("alla -> all", function() {deepEqual( Stem("alla"), "all");});
test("allan -> allan", function() {deepEqual( Stem("allan"), "allan");});
test("allas -> all", function() {deepEqual( Stem("allas"), "all");});
test("alldaglig -> alldag", function() {deepEqual( Stem("alldaglig"), "alldag");});
test("alldagliga -> alldag", function() {deepEqual( Stem("alldagliga"), "alldag");});
test("alldagligt -> alldag", function() {deepEqual( Stem("alldagligt"), "alldag");});
test("alldeles -> alldel", function() {deepEqual( Stem("alldeles"), "alldel");});
test("alldenstund -> alldenstund", function() {deepEqual( Stem("alldenstund"), "alldenstund");});
test("alle -> all", function() {deepEqual( Stem("alle"), "all");});
test("alleens -> alle", function() {deepEqual( Stem("alleens"), "alle");});
test("alleer -> alle", function() {deepEqual( Stem("alleer"), "alle");});
test("alleerna -> alle", function() {deepEqual( Stem("alleerna"), "alle");});
test("allegori -> allegori", function() {deepEqual( Stem("allegori"), "allegori");});
test("allehanda -> allehand", function() {deepEqual( Stem("allehanda"), "allehand");});
test("allehandaunderliga -> allehandaunder", function() {deepEqual( Stem("allehandaunderliga"), "allehandaunder");});
test("allen -> all", function() {deepEqual( Stem("allen"), "all");});
test("allena -> allen", function() {deepEqual( Stem("allena"), "allen");});
test("allenast -> allen", function() {deepEqual( Stem("allenast"), "allen");});
test("allesam -> allesam", function() {deepEqual( Stem("allesam"), "allesam");});
test("allesamman -> allesamman", function() {deepEqual( Stem("allesamman"), "allesamman");});
test("allesammans -> allesamman", function() {deepEqual( Stem("allesammans"), "allesamman");});
test("allhelgonadag -> allhelgonadag", function() {deepEqual( Stem("allhelgonadag"), "allhelgonadag");});
test("allihop -> allihop", function() {deepEqual( Stem("allihop"), "allihop");});
test("allmakt -> allmak", function() {deepEqual( Stem("allmakt"), "allmak");});
test("allmoge -> allmog", function() {deepEqual( Stem("allmoge"), "allmog");});
test("allmogen -> allmog", function() {deepEqual( Stem("allmogen"), "allmog");});
test("allmogens -> allmog", function() {deepEqual( Stem("allmogens"), "allmog");});
test("allmän -> allmän", function() {deepEqual( Stem("allmän"), "allmän");});
test("allmänhet -> allmän", function() {deepEqual( Stem("allmänhet"), "allmän");});
test("allmänheten -> allmän", function() {deepEqual( Stem("allmänheten"), "allmän");});
test("allmänhetens -> allmän", function() {deepEqual( Stem("allmänhetens"), "allmän");});
test("allmänna -> allmän", function() {deepEqual( Stem("allmänna"), "allmän");});
test("allmännare -> allmän", function() {deepEqual( Stem("allmännare"), "allmän");});
test("allmänt -> allmänt", function() {deepEqual( Stem("allmänt"), "allmänt");});
test("allo -> allo", function() {deepEqual( Stem("allo"), "allo");});
test("allod -> allod", function() {deepEqual( Stem("allod"), "allod");});
test("allom -> allom", function() {deepEqual( Stem("allom"), "allom");});
test("allra -> allr", function() {deepEqual( Stem("allra"), "allr");});
test("allraminst -> allraminst", function() {deepEqual( Stem("allraminst"), "allraminst");});
test("alls -> all", function() {deepEqual( Stem("alls"), "all");});
test("allsköns -> allskön", function() {deepEqual( Stem("allsköns"), "allskön");});
test("allsmägtige -> allsmägt", function() {deepEqual( Stem("allsmägtige"), "allsmägt");});
test("allsmäktig -> allsmäkt", function() {deepEqual( Stem("allsmäktig"), "allsmäkt");});
test("allsmäktiga -> allsmäkt", function() {deepEqual( Stem("allsmäktiga"), "allsmäkt");});
test("allt -> allt", function() {deepEqual( Stem("allt"), "allt");});
test("alltfor -> alltf", function() {deepEqual( Stem("alltfor"), "alltf");});
test("alltfort -> alltfort", function() {deepEqual( Stem("alltfort"), "alltfort");});
test("alltför -> alltför", function() {deepEqual( Stem("alltför"), "alltför");});
test("alltid -> alltid", function() {deepEqual( Stem("alltid"), "alltid");});
test("alltihop -> alltihop", function() {deepEqual( Stem("alltihop"), "alltihop");});
test("alltihopa -> alltihop", function() {deepEqual( Stem("alltihopa"), "alltihop");});
test("allting -> allting", function() {deepEqual( Stem("allting"), "allting");});
test("alltjämt -> alltjämt", function() {deepEqual( Stem("alltjämt"), "alltjämt");});
test("alltkl -> alltkl", function() {deepEqual( Stem("alltkl"), "alltkl");});
test("alltld -> alltld", function() {deepEqual( Stem("alltld"), "alltld");});
test("alltmer -> alltm", function() {deepEqual( Stem("alltmer"), "alltm");});
test("alltmera -> alltmer", function() {deepEqual( Stem("alltmera"), "alltmer");});
test("alltomkring -> alltomkring", function() {deepEqual( Stem("alltomkring"), "alltomkring");});
test("alltsa -> allts", function() {deepEqual( Stem("alltsa"), "allts");});
test("alltsammams -> alltsammam", function() {deepEqual( Stem("alltsammams"), "alltsammam");});
test("alltsamman -> alltsamman", function() {deepEqual( Stem("alltsamman"), "alltsamman");});
test("alltsammans -> alltsamman", function() {deepEqual( Stem("alltsammans"), "alltsamman");});
test("alltsedan -> alltsedan", function() {deepEqual( Stem("alltsedan"), "alltsedan");});
test("alltså -> alltså", function() {deepEqual( Stem("alltså"), "alltså");});
test("alltäammans -> alltäamman", function() {deepEqual( Stem("alltäammans"), "alltäamman");});
test("allvar -> allv", function() {deepEqual( Stem("allvar"), "allv");});
test("allvaret -> allvaret", function() {deepEqual( Stem("allvaret"), "allvaret");});
test("allvarlig -> allvar", function() {deepEqual( Stem("allvarlig"), "allvar");});
test("allvarliga -> allvar", function() {deepEqual( Stem("allvarliga"), "allvar");});
test("allvarligare -> allvar", function() {deepEqual( Stem("allvarligare"), "allvar");});
test("allvarligt -> allvar", function() {deepEqual( Stem("allvarligt"), "allvar");});
test("allvarsam -> allvarsam", function() {deepEqual( Stem("allvarsam"), "allvarsam");});
test("allvarsamma -> allvarsamm", function() {deepEqual( Stem("allvarsamma"), "allvarsamm");});
test("allvarsammare -> allvarsamm", function() {deepEqual( Stem("allvarsammare"), "allvarsamm");});
test("allvarsamme -> allvarsamm", function() {deepEqual( Stem("allvarsamme"), "allvarsamm");});
test("allvarsamt -> allvarsamt", function() {deepEqual( Stem("allvarsamt"), "allvarsamt");});
test("alm -> alm", function() {deepEqual( Stem("alm"), "alm");});
test("almanacka -> almanack", function() {deepEqual( Stem("almanacka"), "almanack");});
test("almanackan -> almanackan", function() {deepEqual( Stem("almanackan"), "almanackan");});
test("almar -> alm", function() {deepEqual( Stem("almar"), "alm");});
test("aln -> aln", function() {deepEqual( Stem("aln"), "aln");});
test("alnar -> aln", function() {deepEqual( Stem("alnar"), "aln");});
test("alsing -> alsing", function() {deepEqual( Stem("alsing"), "alsing");});
test("alska -> alsk", function() {deepEqual( Stem("alska"), "alsk");});
test("alskade -> alsk", function() {deepEqual( Stem("alskade"), "alsk");});
test("alskande -> alsk", function() {deepEqual( Stem("alskande"), "alsk");});
test("alskar -> alsk", function() {deepEqual( Stem("alskar"), "alsk");});
test("alstern -> alst", function() {deepEqual( Stem("alstern"), "alst");});
test("alstra -> alstr", function() {deepEqual( Stem("alstra"), "alstr");});
test("alstrade -> alstr", function() {deepEqual( Stem("alstrade"), "alstr");});
test("alstring -> alstring", function() {deepEqual( Stem("alstring"), "alstring");});
test("alt -> alt", function() {deepEqual( Stem("alt"), "alt");});
test("alta -> alt", function() {deepEqual( Stem("alta"), "alt");});
test("altare -> alt", function() {deepEqual( Stem("altare"), "alt");});
test("altarens -> alt", function() {deepEqual( Stem("altarens"), "alt");});
test("altaret -> altaret", function() {deepEqual( Stem("altaret"), "altaret");});
test("altarets -> altaret", function() {deepEqual( Stem("altarets"), "altaret");});
test("altarrunden -> altarrund", function() {deepEqual( Stem("altarrunden"), "altarrund");});
test("altartavla -> altartavl", function() {deepEqual( Stem("altartavla"), "altartavl");});
test("altartavlan -> altartavlan", function() {deepEqual( Stem("altartavlan"), "altartavlan");});
test("altartavlor -> altartavl", function() {deepEqual( Stem("altartavlor"), "altartavl");});
test("altartavlorna -> altartavl", function() {deepEqual( Stem("altartavlorna"), "altartavl");});
test("altid -> altid", function() {deepEqual( Stem("altid"), "altid");});
test("am -> am", function() {deepEqual( Stem("am"), "am");});
test("amarant -> amarant", function() {deepEqual( Stem("amarant"), "amarant");});
test("ambrosius -> ambrosius", function() {deepEqual( Stem("ambrosius"), "ambrosius");});
test("amen -> amen", function() {deepEqual( Stem("amen"), "amen");});
test("amerika -> amerik", function() {deepEqual( Stem("amerika"), "amerik");});
test("amerikansk -> amerikansk", function() {deepEqual( Stem("amerikansk"), "amerikansk");});
test("amerikanskt -> amerikansk", function() {deepEqual( Stem("amerikanskt"), "amerikansk");});
test("ametist -> ametist", function() {deepEqual( Stem("ametist"), "ametist");});
test("ametister -> ametist", function() {deepEqual( Stem("ametister"), "ametist");});
test("ametyst -> ametyst", function() {deepEqual( Stem("ametyst"), "ametyst");});
test("amlan -> amlan", function() {deepEqual( Stem("amlan"), "amlan");});
test("amlar -> aml", function() {deepEqual( Stem("amlar"), "aml");});
test("amlat -> aml", function() {deepEqual( Stem("amlat"), "aml");});
test("ammar -> amm", function() {deepEqual( Stem("ammar"), "amm");});
test("amnärkt -> amnärk", function() {deepEqual( Stem("amnärkt"), "amnärk");});
test("amo -> amo", function() {deepEqual( Stem("amo"), "amo");});
test("amor -> amor", function() {deepEqual( Stem("amor"), "amor");});
test("amour -> amour", function() {deepEqual( Stem("amour"), "amour");});
test("amours -> amour", function() {deepEqual( Stem("amours"), "amour");});
test("amp -> amp", function() {deepEqual( Stem("amp"), "amp");});
test("ampall -> ampall", function() {deepEqual( Stem("ampall"), "ampall");});
test("ampla -> ampl", function() {deepEqual( Stem("ampla"), "ampl");});
test("amsikte -> amsik", function() {deepEqual( Stem("amsikte"), "amsik");});
test("amsiktet -> amsiktet", function() {deepEqual( Stem("amsiktet"), "amsiktet");});
test("an -> an", function() {deepEqual( Stem("an"), "an");});
test("ana -> ana", function() {deepEqual( Stem("ana"), "ana");});
test("anade -> anad", function() {deepEqual( Stem("anade"), "anad");});
test("anamma -> anamm", function() {deepEqual( Stem("anamma"), "anamm");});
test("anande -> anand", function() {deepEqual( Stem("anande"), "anand");});
test("anar -> anar", function() {deepEqual( Stem("anar"), "anar");});
test("anas -> anas", function() {deepEqual( Stem("anas"), "anas");});
test("anat -> anat", function() {deepEqual( Stem("anat"), "anat");});
test("anbefalde -> anbefald", function() {deepEqual( Stem("anbefalde"), "anbefald");});
test("anbefallde -> anbefalld", function() {deepEqual( Stem("anbefallde"), "anbefalld");});
test("anbelangar -> anbelang", function() {deepEqual( Stem("anbelangar"), "anbelang");});
test("anblick -> anblick", function() {deepEqual( Stem("anblick"), "anblick");});
test("anblicken -> anblick", function() {deepEqual( Stem("anblicken"), "anblick");});
test("anbud -> anbud", function() {deepEqual( Stem("anbud"), "anbud");});
test("anbudet -> anbudet", function() {deepEqual( Stem("anbudet"), "anbudet");});
test("anda -> and", function() {deepEqual( Stem("anda"), "and");});
test("andades -> and", function() {deepEqual( Stem("andades"), "and");});
test("andakt -> andak", function() {deepEqual( Stem("andakt"), "andak");});
test("andakten -> andak", function() {deepEqual( Stem("andakten"), "andak");});
test("andaktsbok -> andaktsbok", function() {deepEqual( Stem("andaktsbok"), "andaktsbok");});
test("andaktsfull -> andaktsfull", function() {deepEqual( Stem("andaktsfull"), "andaktsfull");});
test("andaktsstund -> andaktsstund", function() {deepEqual( Stem("andaktsstund"), "andaktsstund");});
test("andaktsstunder -> andaktsstund", function() {deepEqual( Stem("andaktsstunder"), "andaktsstund");});
test("andamål -> andamål", function() {deepEqual( Stem("andamål"), "andamål");});
test("andan -> andan", function() {deepEqual( Stem("andan"), "andan");});
test("andande -> and", function() {deepEqual( Stem("andande"), "and");});
test("andans -> andan", function() {deepEqual( Stem("andans"), "andan");});
test("andar -> and", function() {deepEqual( Stem("andar"), "and");});
test("andarna -> and", function() {deepEqual( Stem("andarna"), "and");});
test("andas -> and", function() {deepEqual( Stem("andas"), "and");});
test("ande -> and", function() {deepEqual( Stem("ande"), "and");});
test("andedrag -> andedrag", function() {deepEqual( Stem("andedrag"), "andedrag");});
test("andedrägt -> andedräg", function() {deepEqual( Stem("andedrägt"), "andedräg");});
test("andedräkt -> andedräk", function() {deepEqual( Stem("andedräkt"), "andedräk");});
test("andedräkten -> andedräk", function() {deepEqual( Stem("andedräkten"), "andedräk");});
test("andel -> andel", function() {deepEqual( Stem("andel"), "andel");});
test("anden -> and", function() {deepEqual( Stem("anden"), "and");});
test("andersen -> anders", function() {deepEqual( Stem("andersen"), "anders");});
test("andesång -> andesång", function() {deepEqual( Stem("andesång"), "andesång");});
test("andetag -> andetag", function() {deepEqual( Stem("andetag"), "andetag");});
test("andfadd -> andfad", function() {deepEqual( Stem("andfadd"), "andfad");});
test("andfatt -> andfat", function() {deepEqual( Stem("andfatt"), "andfat");});
test("andfådd -> andfåd", function() {deepEqual( Stem("andfådd"), "andfåd");});
test("andfått -> andfåt", function() {deepEqual( Stem("andfått"), "andfåt");});
test("andlig -> and", function() {deepEqual( Stem("andlig"), "and");});
test("andliga -> and", function() {deepEqual( Stem("andliga"), "and");});
test("andlige -> and", function() {deepEqual( Stem("andlige"), "and");});
test("andligen -> and", function() {deepEqual( Stem("andligen"), "and");});
test("andligt -> and", function() {deepEqual( Stem("andligt"), "and");});
test("andlöst -> andlös", function() {deepEqual( Stem("andlöst"), "andlös");});
test("andock -> andock", function() {deepEqual( Stem("andock"), "andock");});
test("andra -> andr", function() {deepEqual( Stem("andra"), "andr");});
test("andras -> andr", function() {deepEqual( Stem("andras"), "andr");});
test("andre -> andr", function() {deepEqual( Stem("andre"), "andr");});
test("andres -> andr", function() {deepEqual( Stem("andres"), "andr");});
test("androgyn -> androgyn", function() {deepEqual( Stem("androgyn"), "androgyn");});
test("andrum -> andrum", function() {deepEqual( Stem("andrum"), "andrum");});
test("andtäppa -> andtäpp", function() {deepEqual( Stem("andtäppa"), "andtäpp");});
test("andtäppan -> andtäppan", function() {deepEqual( Stem("andtäppan"), "andtäppan");});
test("andäktiga -> andäkt", function() {deepEqual( Stem("andäktiga"), "andäkt");});
test("andäktigt -> andäkt", function() {deepEqual( Stem("andäktigt"), "andäkt");});
test("andå -> andå", function() {deepEqual( Stem("andå"), "andå");});
test("anej -> anej", function() {deepEqual( Stem("anej"), "anej");});
test("anekdot -> anekdot", function() {deepEqual( Stem("anekdot"), "anekdot");});
test("anekdoten -> anekdot", function() {deepEqual( Stem("anekdoten"), "anekdot");});
test("anekdoter -> anekdot", function() {deepEqual( Stem("anekdoter"), "anekdot");});
test("anfall -> anfall", function() {deepEqual( Stem("anfall"), "anfall");});
test("anfallen -> anfall", function() {deepEqual( Stem("anfallen"), "anfall");});
test("anför -> anför", function() {deepEqual( Stem("anför"), "anför");});
test("anföra -> anför", function() {deepEqual( Stem("anföra"), "anför");});
test("anförande -> anför", function() {deepEqual( Stem("anförande"), "anför");});
test("anförda -> anförd", function() {deepEqual( Stem("anförda"), "anförd");});
test("anförde -> anförd", function() {deepEqual( Stem("anförde"), "anförd");});
test("anförtro -> anförtro", function() {deepEqual( Stem("anförtro"), "anförtro");});
test("anförtrodda -> anförtrod", function() {deepEqual( Stem("anförtrodda"), "anförtrod");});
test("anförtrodde -> anförtrod", function() {deepEqual( Stem("anförtrodde"), "anförtrod");});
test("anförtroddes -> anförtrod", function() {deepEqual( Stem("anförtroddes"), "anförtrod");});
test("anförtrott -> anförtrot", function() {deepEqual( Stem("anförtrott"), "anförtrot");});
test("anförvant -> anförvant", function() {deepEqual( Stem("anförvant"), "anförvant");});
test("anförvanters -> anförvanter", function() {deepEqual( Stem("anförvanters"), "anförvanter");});
test("angar -> ang", function() {deepEqual( Stem("angar"), "ang");});
test("angder -> angd", function() {deepEqual( Stem("angder"), "angd");});
test("ange -> ang", function() {deepEqual( Stem("ange"), "ang");});
test("angeia -> angei", function() {deepEqual( Stem("angeia"), "angei");});
test("angel -> angel", function() {deepEqual( Stem("angel"), "angel");});
test("angela -> angel", function() {deepEqual( Stem("angela"), "angel");});
test("angelal -> angelal", function() {deepEqual( Stem("angelal"), "angelal");});
test("angelas -> angel", function() {deepEqual( Stem("angelas"), "angel");});
test("angelicus -> angelicus", function() {deepEqual( Stem("angelicus"), "angelicus");});
test("angelo -> angelo", function() {deepEqual( Stem("angelo"), "angelo");});
test("angelägen -> angeläg", function() {deepEqual( Stem("angelägen"), "angeläg");});
test("angelägenhet -> angelägen", function() {deepEqual( Stem("angelägenhet"), "angelägen");});
test("angelägenheten -> angelägen", function() {deepEqual( Stem("angelägenheten"), "angelägen");});
test("angelägenheter -> angelägen", function() {deepEqual( Stem("angelägenheter"), "angelägen");});
test("angelägenheterna -> angelägen", function() {deepEqual( Stem("angelägenheterna"), "angelägen");});
test("angeläget -> angeläget", function() {deepEqual( Stem("angeläget"), "angeläget");});
test("angelägna -> angelägn", function() {deepEqual( Stem("angelägna"), "angelägn");});
test("angelägnare -> angelägn", function() {deepEqual( Stem("angelägnare"), "angelägn");});
test("angen -> ang", function() {deepEqual( Stem("angen"), "ang");});
test("angenäm -> angenäm", function() {deepEqual( Stem("angenäm"), "angenäm");});
test("angenäma -> angenäm", function() {deepEqual( Stem("angenäma"), "angenäm");});
test("angenämt -> angenämt", function() {deepEqual( Stem("angenämt"), "angenämt");});
test("angenärn -> angenärn", function() {deepEqual( Stem("angenärn"), "angenärn");});
test("angerfull -> angerfull", function() {deepEqual( Stem("angerfull"), "angerfull");});
test("angest -> angest", function() {deepEqual( Stem("angest"), "angest");});
test("angestfull -> angestfull", function() {deepEqual( Stem("angestfull"), "angestfull");});
test("angestfulla -> angestfull", function() {deepEqual( Stem("angestfulla"), "angestfull");});
test("angick -> angick", function() {deepEqual( Stem("angick"), "angick");});
test("angifva -> angifv", function() {deepEqual( Stem("angifva"), "angifv");});
test("angifvelse -> angifv", function() {deepEqual( Stem("angifvelse"), "angifv");});
test("angivits -> angivit", function() {deepEqual( Stem("angivits"), "angivit");});
test("angrepp -> angrepp", function() {deepEqual( Stem("angrepp"), "angrepp");});
test("angripen -> angrip", function() {deepEqual( Stem("angripen"), "angrip");});
test("angriper -> angrip", function() {deepEqual( Stem("angriper"), "angrip");});
test("angränsande -> angräns", function() {deepEqual( Stem("angränsande"), "angräns");});
test("angående -> angåend", function() {deepEqual( Stem("angående"), "angåend");});
test("angår -> angår", function() {deepEqual( Stem("angår"), "angår");});
test("anholt -> anholt", function() {deepEqual( Stem("anholt"), "anholt");});
test("anhålla -> anhåll", function() {deepEqual( Stem("anhålla"), "anhåll");});
test("anhållan -> anhållan", function() {deepEqual( Stem("anhållan"), "anhållan");});
test("anhåller -> anhåll", function() {deepEqual( Stem("anhåller"), "anhåll");});
test("anhöll -> anhöll", function() {deepEqual( Stem("anhöll"), "anhöll");});
test("anhöriga -> anhör", function() {deepEqual( Stem("anhöriga"), "anhör");});
test("aning -> aning", function() {deepEqual( Stem("aning"), "aning");});
test("aningar -> aning", function() {deepEqual( Stem("aningar"), "aning");});
test("aningen -> aning", function() {deepEqual( Stem("aningen"), "aning");});
test("anjovis -> anjovis", function() {deepEqual( Stem("anjovis"), "anjovis");});
test("ankar -> ank", function() {deepEqual( Stem("ankar"), "ank");});
test("ankare -> ank", function() {deepEqual( Stem("ankare"), "ank");});
test("anklaga -> anklag", function() {deepEqual( Stem("anklaga"), "anklag");});
test("anklagade -> anklag", function() {deepEqual( Stem("anklagade"), "anklag");});
test("anklagande -> anklag", function() {deepEqual( Stem("anklagande"), "anklag");});
test("anklagelsen -> anklag", function() {deepEqual( Stem("anklagelsen"), "anklag");});
test("anklagelser -> anklag", function() {deepEqual( Stem("anklagelser"), "anklag");});
test("ankom -> ankom", function() {deepEqual( Stem("ankom"), "ankom");});
test("ankommet -> ankommet", function() {deepEqual( Stem("ankommet"), "ankommet");});
test("ankomst -> ankomst", function() {deepEqual( Stem("ankomst"), "ankomst");});
test("ankomsten -> ankomst", function() {deepEqual( Stem("ankomsten"), "ankomst");});
test("anlag -> anlag", function() {deepEqual( Stem("anlag"), "anlag");});
test("anlagd -> anlag", function() {deepEqual( Stem("anlagd"), "anlag");});
test("anlagen -> anlag", function() {deepEqual( Stem("anlagen"), "anlag");});
test("anledning -> anledning", function() {deepEqual( Stem("anledning"), "anledning");});
test("anledningar -> anledning", function() {deepEqual( Stem("anledningar"), "anledning");});
test("anledningarna -> anledning", function() {deepEqual( Stem("anledningarna"), "anledning");});
test("anledningen -> anledning", function() {deepEqual( Stem("anledningen"), "anledning");});
test("anlet -> anlet", function() {deepEqual( Stem("anlet"), "anlet");});
test("anlete -> anlet", function() {deepEqual( Stem("anlete"), "anlet");});
test("anletes -> anlet", function() {deepEqual( Stem("anletes"), "anlet");});
test("anletsdrag -> anletsdrag", function() {deepEqual( Stem("anletsdrag"), "anletsdrag");});
test("anletsdragen -> anletsdrag", function() {deepEqual( Stem("anletsdragen"), "anletsdrag");});
test("anlita -> anlit", function() {deepEqual( Stem("anlita"), "anlit");});
test("anlitad -> anlit", function() {deepEqual( Stem("anlitad"), "anlit");});
test("anlitades -> anlit", function() {deepEqual( Stem("anlitades"), "anlit");});
test("anlitar -> anlit", function() {deepEqual( Stem("anlitar"), "anlit");});
test("anläggning -> anläggning", function() {deepEqual( Stem("anläggning"), "anläggning");});
test("anlände -> anländ", function() {deepEqual( Stem("anlände"), "anländ");});
test("anlänt -> anlänt", function() {deepEqual( Stem("anlänt"), "anlänt");});
test("anmaning -> anmaning", function() {deepEqual( Stem("anmaning"), "anmaning");});
test("anmäla -> anmäl", function() {deepEqual( Stem("anmäla"), "anmäl");});
test("anmälan -> anmälan", function() {deepEqual( Stem("anmälan"), "anmälan");});
test("anmälandet -> anmäl", function() {deepEqual( Stem("anmälandet"), "anmäl");});
test("anmäler -> anmäl", function() {deepEqual( Stem("anmäler"), "anmäl");});
test("anmält -> anmält", function() {deepEqual( Stem("anmält"), "anmält");});
test("anmärk -> anmärk", function() {deepEqual( Stem("anmärk"), "anmärk");});
test("anmärka -> anmärk", function() {deepEqual( Stem("anmärka"), "anmärk");});
test("anmärkning -> anmärkning", function() {deepEqual( Stem("anmärkning"), "anmärkning");});
test("anmärkningar -> anmärkning", function() {deepEqual( Stem("anmärkningar"), "anmärkning");});
test("anmärkningen -> anmärkning", function() {deepEqual( Stem("anmärkningen"), "anmärkning");});
test("anmärkningsvärda -> anmärkningsvärd", function() {deepEqual( Stem("anmärkningsvärda"), "anmärkningsvärd");});
test("anmärkningsvärdt -> anmärkningsvärd", function() {deepEqual( Stem("anmärkningsvärdt"), "anmärkningsvärd");});
test("anmärkningsvärt -> anmärkningsvärt", function() {deepEqual( Stem("anmärkningsvärt"), "anmärkningsvärt");});
test("anmärktc -> anmärktc", function() {deepEqual( Stem("anmärktc"), "anmärktc");});
test("anmärkte -> anmärk", function() {deepEqual( Stem("anmärkte"), "anmärk");});
test("ann -> ann", function() {deepEqual( Stem("ann"), "ann");});
test("anna -> ann", function() {deepEqual( Stem("anna"), "ann");});
test("annalkande -> annalk", function() {deepEqual( Stem("annalkande"), "annalk");});
test("annan -> annan", function() {deepEqual( Stem("annan"), "annan");});
test("annans -> annan", function() {deepEqual( Stem("annans"), "annan");});
test("annars -> annar", function() {deepEqual( Stem("annars"), "annar");});
test("annat -> ann", function() {deepEqual( Stem("annat"), "ann");});
test("annexkyrkan -> annexkyrkan", function() {deepEqual( Stem("annexkyrkan"), "annexkyrkan");});
test("annika -> annik", function() {deepEqual( Stem("annika"), "annik");});
test("annikas -> annik", function() {deepEqual( Stem("annikas"), "annik");});
test("annons -> annon", function() {deepEqual( Stem("annons"), "annon");});
test("annonsen -> annons", function() {deepEqual( Stem("annonsen"), "annons");});
test("annonser -> annons", function() {deepEqual( Stem("annonser"), "annons");});
test("annonsera -> annonser", function() {deepEqual( Stem("annonsera"), "annonser");});
test("annonserades -> annonser", function() {deepEqual( Stem("annonserades"), "annonser");});
test("annor -> ann", function() {deepEqual( Stem("annor"), "ann");});
test("annorlm -> annorlm", function() {deepEqual( Stem("annorlm"), "annorlm");});
test("annorlunda -> annorlund", function() {deepEqual( Stem("annorlunda"), "annorlund");});
test("annorstädes -> annorstäd", function() {deepEqual( Stem("annorstädes"), "annorstäd");});
test("annoterade -> annoter", function() {deepEqual( Stem("annoterade"), "annoter");});
test("anns -> ann", function() {deepEqual( Stem("anns"), "ann");});
test("annu -> annu", function() {deepEqual( Stem("annu"), "annu");});
test("anonymt -> anonymt", function() {deepEqual( Stem("anonymt"), "anonymt");});
test("anordnande -> anordn", function() {deepEqual( Stem("anordnande"), "anordn");});
test("anordningar -> anordning", function() {deepEqual( Stem("anordningar"), "anordning");});
test("anordningen -> anordning", function() {deepEqual( Stem("anordningen"), "anordning");});
test("anpassningsförmåga -> anpassningsförmåg", function() {deepEqual( Stem("anpassningsförmåga"), "anpassningsförmåg");});
test("anrep -> anrep", function() {deepEqual( Stem("anrep"), "anrep");});
test("anropa -> anrop", function() {deepEqual( Stem("anropa"), "anrop");});
test("anropade -> anrop", function() {deepEqual( Stem("anropade"), "anrop");});
test("anrättning -> anrättning", function() {deepEqual( Stem("anrättning"), "anrättning");});
test("anrättningen -> anrättning", function() {deepEqual( Stem("anrättningen"), "anrättning");});
test("ans -> ans", function() {deepEqual( Stem("ans"), "ans");});
test("ansa -> ans", function() {deepEqual( Stem("ansa"), "ans");});
test("ansade -> ans", function() {deepEqual( Stem("ansade"), "ans");});
test("ansag -> ansag", function() {deepEqual( Stem("ansag"), "ansag");});
test("ansatt -> ansat", function() {deepEqual( Stem("ansatt"), "ansat");});
test("ansatte -> ansat", function() {deepEqual( Stem("ansatte"), "ansat");});
test("ansattes -> ansat", function() {deepEqual( Stem("ansattes"), "ansat");});
test("anse -> ans", function() {deepEqual( Stem("anse"), "ans");});
test("ansedd -> ansed", function() {deepEqual( Stem("ansedd"), "ansed");});
test("anseende -> anseend", function() {deepEqual( Stem("anseende"), "anseend");});
test("anser -> ans", function() {deepEqual( Stem("anser"), "ans");});
test("anses -> ans", function() {deepEqual( Stem("anses"), "ans");});
test("ansett -> anset", function() {deepEqual( Stem("ansett"), "anset");});
test("ansigte -> ans", function() {deepEqual( Stem("ansigte"), "ans");});
test("ansigtes -> ans", function() {deepEqual( Stem("ansigtes"), "ans");});
test("ansigtet -> ansigtet", function() {deepEqual( Stem("ansigtet"), "ansigtet");});
test("ansigtsdrag -> ansigtsdrag", function() {deepEqual( Stem("ansigtsdrag"), "ansigtsdrag");});
test("ansigtsdragen -> ansigtsdrag", function() {deepEqual( Stem("ansigtsdragen"), "ansigtsdrag");});
test("ansigtsmusklerna -> ansigtsmuskl", function() {deepEqual( Stem("ansigtsmusklerna"), "ansigtsmuskl");});
test("ansikte -> ansik", function() {deepEqual( Stem("ansikte"), "ansik");});
test("ansikten -> ansik", function() {deepEqual( Stem("ansikten"), "ansik");});
test("ansiktena -> ansikten", function() {deepEqual( Stem("ansiktena"), "ansikten");});
test("ansiktet -> ansiktet", function() {deepEqual( Stem("ansiktet"), "ansiktet");});
test("ansiktets -> ansiktet", function() {deepEqual( Stem("ansiktets"), "ansiktet");});
test("ansiktsdragens -> ansiktsdrag", function() {deepEqual( Stem("ansiktsdragens"), "ansiktsdrag");});
test("ansiktshy -> ansiktshy", function() {deepEqual( Stem("ansiktshy"), "ansiktshy");});
test("ansiktslupus -> ansiktslupus", function() {deepEqual( Stem("ansiktslupus"), "ansiktslupus");});
test("ansiktsmuskler -> ansiktsmuskl", function() {deepEqual( Stem("ansiktsmuskler"), "ansiktsmuskl");});
test("ansiktsuttryck -> ansiktsuttryck", function() {deepEqual( Stem("ansiktsuttryck"), "ansiktsuttryck");});
test("ansiktsuttrycket -> ansiktsuttrycket", function() {deepEqual( Stem("ansiktsuttrycket"), "ansiktsuttrycket");});
test("ansiktsytan -> ansiktsytan", function() {deepEqual( Stem("ansiktsytan"), "ansiktsytan");});
test("anskaffa -> anskaff", function() {deepEqual( Stem("anskaffa"), "anskaff");});
test("anskaffades -> anskaff", function() {deepEqual( Stem("anskaffades"), "anskaff");});
test("anskaffas -> anskaff", function() {deepEqual( Stem("anskaffas"), "anskaff");});
test("anskrämliga -> anskräm", function() {deepEqual( Stem("anskrämliga"), "anskräm");});
test("anslag -> anslag", function() {deepEqual( Stem("anslag"), "anslag");});
test("anslagen -> anslag", function() {deepEqual( Stem("anslagen"), "anslag");});
test("anslagit -> anslagit", function() {deepEqual( Stem("anslagit"), "anslagit");});
test("anslog -> anslog", function() {deepEqual( Stem("anslog"), "anslog");});
test("ansluta -> anslut", function() {deepEqual( Stem("ansluta"), "anslut");});
test("anslå -> anslå", function() {deepEqual( Stem("anslå"), "anslå");});
test("anspelning -> anspelning", function() {deepEqual( Stem("anspelning"), "anspelning");});
test("ansprakslösa -> ansprakslös", function() {deepEqual( Stem("ansprakslösa"), "ansprakslös");});
test("anspråk -> anspråk", function() {deepEqual( Stem("anspråk"), "anspråk");});
test("anspråket -> anspråket", function() {deepEqual( Stem("anspråket"), "anspråket");});
test("anspråksfulla -> anspråksfull", function() {deepEqual( Stem("anspråksfulla"), "anspråksfull");});
test("anspråkslös -> anspråkslös", function() {deepEqual( Stem("anspråkslös"), "anspråkslös");});
test("anspråkslösa -> anspråkslös", function() {deepEqual( Stem("anspråkslösa"), "anspråkslös");});
test("anspråkslösheten -> anspråkslös", function() {deepEqual( Stem("anspråkslösheten"), "anspråkslös");});
test("anspråkslöst -> anspråkslös", function() {deepEqual( Stem("anspråkslöst"), "anspråkslös");});
test("anstalt -> anstalt", function() {deepEqual( Stem("anstalt"), "anstalt");});
test("anstalten -> anstalt", function() {deepEqual( Stem("anstalten"), "anstalt");});
test("anstalter -> anstalt", function() {deepEqual( Stem("anstalter"), "anstalt");});
test("anstod -> anstod", function() {deepEqual( Stem("anstod"), "anstod");});
test("anstodo -> anstodo", function() {deepEqual( Stem("anstodo"), "anstodo");});
test("anstrykning -> anstrykning", function() {deepEqual( Stem("anstrykning"), "anstrykning");});
test("anstränga -> ansträng", function() {deepEqual( Stem("anstränga"), "ansträng");});
test("ansträngande -> ansträng", function() {deepEqual( Stem("ansträngande"), "ansträng");});
test("ansträngd -> ansträng", function() {deepEqual( Stem("ansträngd"), "ansträng");});
test("ansträngda -> ansträng", function() {deepEqual( Stem("ansträngda"), "ansträng");});
test("ansträngde -> ansträng", function() {deepEqual( Stem("ansträngde"), "ansträng");});
test("anstränger -> ansträng", function() {deepEqual( Stem("anstränger"), "ansträng");});
test("ansträngning -> ansträngning", function() {deepEqual( Stem("ansträngning"), "ansträngning");});
test("ansträngningar -> ansträngning", function() {deepEqual( Stem("ansträngningar"), "ansträngning");});
test("ansträngningen -> ansträngning", function() {deepEqual( Stem("ansträngningen"), "ansträngning");});
test("ansträngt -> ansträng", function() {deepEqual( Stem("ansträngt"), "ansträng");});
test("anställning -> anställning", function() {deepEqual( Stem("anställning"), "anställning");});
test("anständig -> anständ", function() {deepEqual( Stem("anständig"), "anständ");});
test("anständigt -> anständ", function() {deepEqual( Stem("anständigt"), "anständ");});
test("anstå -> anstå", function() {deepEqual( Stem("anstå"), "anstå");});
test("anstånd -> anstånd", function() {deepEqual( Stem("anstånd"), "anstånd");});
test("anstår -> anstår", function() {deepEqual( Stem("anstår"), "anstår");});
test("anstått -> anståt", function() {deepEqual( Stem("anstått"), "anståt");});
test("anstötlig -> anstöt", function() {deepEqual( Stem("anstötlig"), "anstöt");});
test("anstötligt -> anstöt", function() {deepEqual( Stem("anstötligt"), "anstöt");});
test("ansvar -> ansv", function() {deepEqual( Stem("ansvar"), "ansv");});
test("ansvara -> ansvar", function() {deepEqual( Stem("ansvara"), "ansvar");});
test("ansvarar -> ansvar", function() {deepEqual( Stem("ansvarar"), "ansvar");});
test("ansvaret -> ansvaret", function() {deepEqual( Stem("ansvaret"), "ansvaret");});
test("ansvarsfull -> ansvarsfull", function() {deepEqual( Stem("ansvarsfull"), "ansvarsfull");});
test("ansätta -> ansät", function() {deepEqual( Stem("ansätta"), "ansät");});
test("ansåg -> ansåg", function() {deepEqual( Stem("ansåg"), "ansåg");});
test("ansåge -> ansåg", function() {deepEqual( Stem("ansåge"), "ansåg");});
test("ansågo -> ansågo", function() {deepEqual( Stem("ansågo"), "ansågo");});
test("ansågs -> ansåg", function() {deepEqual( Stem("ansågs"), "ansåg");});
test("ant -> ant", function() {deepEqual( Stem("ant"), "ant");});
test("antag -> antag", function() {deepEqual( Stem("antag"), "antag");});
test("antaga -> antag", function() {deepEqual( Stem("antaga"), "antag");});
test("antagandet -> antag", function() {deepEqual( Stem("antagandet"), "antag");});
test("antagas -> antag", function() {deepEqual( Stem("antagas"), "antag");});
test("antagen -> antag", function() {deepEqual( Stem("antagen"), "antag");});
test("antager -> antag", function() {deepEqual( Stem("antager"), "antag");});
test("antages -> antag", function() {deepEqual( Stem("antages"), "antag");});
test("antagit -> antagit", function() {deepEqual( Stem("antagit"), "antagit");});
test("antagligt -> antag", function() {deepEqual( Stem("antagligt"), "antag");});
test("antagna -> antagn", function() {deepEqual( Stem("antagna"), "antagn");});
test("antal -> antal", function() {deepEqual( Stem("antal"), "antal");});
test("antalet -> antalet", function() {deepEqual( Stem("antalet"), "antalet");});
test("antar -> ant", function() {deepEqual( Stem("antar"), "ant");});
test("antastad -> antast", function() {deepEqual( Stem("antastad"), "antast");});
test("anteckna -> anteckn", function() {deepEqual( Stem("anteckna"), "anteckn");});
test("antecknat -> anteckn", function() {deepEqual( Stem("antecknat"), "anteckn");});
test("anteckningar -> anteckning", function() {deepEqual( Stem("anteckningar"), "anteckning");});
test("anteckningarna -> anteckning", function() {deepEqual( Stem("anteckningarna"), "anteckning");});
test("anteckningsbok -> anteckningsbok", function() {deepEqual( Stem("anteckningsbok"), "anteckningsbok");});
test("anteckningsböcker -> anteckningsböck", function() {deepEqual( Stem("anteckningsböcker"), "anteckningsböck");});
test("antenner -> anten", function() {deepEqual( Stem("antenner"), "anten");});
test("antidreyfusistisk -> antidreyfusistisk", function() {deepEqual( Stem("antidreyfusistisk"), "antidreyfusistisk");});
test("antik -> antik", function() {deepEqual( Stem("antik"), "antik");});
test("antika -> antik", function() {deepEqual( Stem("antika"), "antik");});
test("antikvariat -> antikvari", function() {deepEqual( Stem("antikvariat"), "antikvari");});
test("antikviteter -> antikvitet", function() {deepEqual( Stem("antikviteter"), "antikvitet");});
test("antingen -> anting", function() {deepEqual( Stem("antingen"), "anting");});
test("antisemitism -> antisemitism", function() {deepEqual( Stem("antisemitism"), "antisemitism");});
test("antligen -> ant", function() {deepEqual( Stem("antligen"), "ant");});
test("antog -> antog", function() {deepEqual( Stem("antog"), "antog");});
test("antogo -> antogo", function() {deepEqual( Stem("antogo"), "antogo");});
test("antogos -> antogo", function() {deepEqual( Stem("antogos"), "antogo");});
test("antogs -> antog", function() {deepEqual( Stem("antogs"), "antog");});
test("antoinettefichyn -> antoinettefichyn", function() {deepEqual( Stem("antoinettefichyn"), "antoinettefichyn");});
test("anton -> anton", function() {deepEqual( Stem("anton"), "anton");});
test("antons -> anton", function() {deepEqual( Stem("antons"), "anton");});
test("anträd -> anträd", function() {deepEqual( Stem("anträd"), "anträd");});
test("anträdde -> anträd", function() {deepEqual( Stem("anträdde"), "anträd");});
test("anträddes -> anträd", function() {deepEqual( Stem("anträddes"), "anträd");});
test("antydan -> antydan", function() {deepEqual( Stem("antydan"), "antydan");});
test("antydda -> antyd", function() {deepEqual( Stem("antydda"), "antyd");});
test("antydde -> antyd", function() {deepEqual( Stem("antydde"), "antyd");});
test("antyder -> antyd", function() {deepEqual( Stem("antyder"), "antyd");});
test("antydningar -> antydning", function() {deepEqual( Stem("antydningar"), "antydning");});
test("antytt -> antyt", function() {deepEqual( Stem("antytt"), "antyt");});
test("antågande -> antåg", function() {deepEqual( Stem("antågande"), "antåg");});
test("anvisad -> anvis", function() {deepEqual( Stem("anvisad"), "anvis");});
test("anvisade -> anvis", function() {deepEqual( Stem("anvisade"), "anvis");});
test("anvisat -> anvis", function() {deepEqual( Stem("anvisat"), "anvis");});
test("använd -> använd", function() {deepEqual( Stem("använd"), "använd");});
test("använda -> använd", function() {deepEqual( Stem("använda"), "använd");});
test("användas -> använd", function() {deepEqual( Stem("användas"), "använd");});
test("använde -> använd", function() {deepEqual( Stem("använde"), "använd");});
test("använder -> använd", function() {deepEqual( Stem("använder"), "använd");});
test("användes -> använd", function() {deepEqual( Stem("användes"), "använd");});
test("användning -> användning", function() {deepEqual( Stem("användning"), "användning");});
test("användt -> använd", function() {deepEqual( Stem("användt"), "använd");});
test("använt -> använt", function() {deepEqual( Stem("använt"), "använt");});
test("använts -> använt", function() {deepEqual( Stem("använts"), "använt");});
test("apade -> apad", function() {deepEqual( Stem("apade"), "apad");});
test("apel -> apel", function() {deepEqual( Stem("apel"), "apel");});
test("apeltelning -> apeltelning", function() {deepEqual( Stem("apeltelning"), "apeltelning");});
test("apgossen -> apgoss", function() {deepEqual( Stem("apgossen"), "apgoss");});
test("apkäkar -> apkäk", function() {deepEqual( Stem("apkäkar"), "apkäk");});
test("aplar -> apl", function() {deepEqual( Stem("aplar"), "apl");});
test("apollinaris -> apollinaris", function() {deepEqual( Stem("apollinaris"), "apollinaris");});
test("apostlarne -> apostl", function() {deepEqual( Stem("apostlarne"), "apostl");});
test("apotekare -> apotek", function() {deepEqual( Stem("apotekare"), "apotek");});
test("apotekarens -> apotek", function() {deepEqual( Stem("apotekarens"), "apotek");});
test("apoteket -> apoteket", function() {deepEqual( Stem("apoteket"), "apoteket");});
test("apparanser -> apparans", function() {deepEqual( Stem("apparanser"), "apparans");});
test("apparition -> apparition", function() {deepEqual( Stem("apparition"), "apparition");});
test("applåd -> applåd", function() {deepEqual( Stem("applåd"), "applåd");});
test("applådcr -> applådcr", function() {deepEqual( Stem("applådcr"), "applådcr");});
test("applåder -> applåd", function() {deepEqual( Stem("applåder"), "applåd");});
test("applådsalvor -> applådsalv", function() {deepEqual( Stem("applådsalvor"), "applådsalv");});
test("april -> april", function() {deepEqual( Stem("april"), "april");});
test("aprildag -> aprildag", function() {deepEqual( Stem("aprildag"), "aprildag");});
test("apropos -> apropo", function() {deepEqual( Stem("apropos"), "apropo");});
test("apropå -> apropå", function() {deepEqual( Stem("apropå"), "apropå");});
test("aptit -> aptit", function() {deepEqual( Stem("aptit"), "aptit");});
test("ar -> ar", function() {deepEqual( Stem("ar"), "ar");});
test("arabella -> arabell", function() {deepEqual( Stem("arabella"), "arabell");});
test("aramell -> aramell", function() {deepEqual( Stem("aramell"), "aramell");});
test("arangerad -> aranger", function() {deepEqual( Stem("arangerad"), "aranger");});
test("aratal -> aratal", function() {deepEqual( Stem("aratal"), "aratal");});
test("arbeta -> arbet", function() {deepEqual( Stem("arbeta"), "arbet");});
test("arbetad -> arbet", function() {deepEqual( Stem("arbetad"), "arbet");});
test("arbetade -> arbet", function() {deepEqual( Stem("arbetade"), "arbet");});
test("arbetar -> arbet", function() {deepEqual( Stem("arbetar"), "arbet");});
test("arbetare -> arbet", function() {deepEqual( Stem("arbetare"), "arbet");});
test("arbetat -> arbet", function() {deepEqual( Stem("arbetat"), "arbet");});
test("arbete -> arbet", function() {deepEqual( Stem("arbete"), "arbet");});
test("arbeten -> arbet", function() {deepEqual( Stem("arbeten"), "arbet");});
test("arbeterskor -> arbetersk", function() {deepEqual( Stem("arbeterskor"), "arbetersk");});
test("arbetet -> arbetet", function() {deepEqual( Stem("arbetet"), "arbetet");});
test("arbetets -> arbetet", function() {deepEqual( Stem("arbetets"), "arbetet");});
test("arbetsam -> arbetsam", function() {deepEqual( Stem("arbetsam"), "arbetsam");});
test("arbetsamhet -> arbetsam", function() {deepEqual( Stem("arbetsamhet"), "arbetsam");});
test("arbetsamma -> arbetsamm", function() {deepEqual( Stem("arbetsamma"), "arbetsamm");});
test("arbetsblusar -> arbetsblus", function() {deepEqual( Stem("arbetsblusar"), "arbetsblus");});
test("arbetsbord -> arbetsbord", function() {deepEqual( Stem("arbetsbord"), "arbetsbord");});
test("arbetsbördan -> arbetsbördan", function() {deepEqual( Stem("arbetsbördan"), "arbetsbördan");});
test("arbetsdag -> arbetsdag", function() {deepEqual( Stem("arbetsdag"), "arbetsdag");});
test("arbetsdagen -> arbetsdag", function() {deepEqual( Stem("arbetsdagen"), "arbetsdag");});
test("arbetsdagern -> arbetsdag", function() {deepEqual( Stem("arbetsdagern"), "arbetsdag");});
test("arbetsdrift -> arbetsdrift", function() {deepEqual( Stem("arbetsdrift"), "arbetsdrift");});
test("arbetsfordon -> arbetsfordon", function() {deepEqual( Stem("arbetsfordon"), "arbetsfordon");});
test("arbetsförmåga -> arbetsförmåg", function() {deepEqual( Stem("arbetsförmåga"), "arbetsförmåg");});
test("arbetshänderna -> arbetshänd", function() {deepEqual( Stem("arbetshänderna"), "arbetshänd");});
test("arbetskläder -> arbetskläd", function() {deepEqual( Stem("arbetskläder"), "arbetskläd");});
test("arbetslag -> arbetslag", function() {deepEqual( Stem("arbetslag"), "arbetslag");});
test("arbetsmänniskor -> arbetsmännisk", function() {deepEqual( Stem("arbetsmänniskor"), "arbetsmännisk");});
test("arbetsrum -> arbetsrum", function() {deepEqual( Stem("arbetsrum"), "arbetsrum");});
test("arbetssamhet -> arbetssam", function() {deepEqual( Stem("arbetssamhet"), "arbetssam");});
test("arbetstid -> arbetstid", function() {deepEqual( Stem("arbetstid"), "arbetstid");});
test("arbetsåkdon -> arbetsåkdon", function() {deepEqual( Stem("arbetsåkdon"), "arbetsåkdon");});
test("aren -> aren", function() {deepEqual( Stem("aren"), "aren");});
test("arets -> aret", function() {deepEqual( Stem("arets"), "aret");});
test("arftagare -> arftag", function() {deepEqual( Stem("arftagare"), "arftag");});
test("arför -> arför", function() {deepEqual( Stem("arför"), "arför");});
test("arg -> arg", function() {deepEqual( Stem("arg"), "arg");});
test("arga -> arg", function() {deepEqual( Stem("arga"), "arg");});
test("argad -> arg", function() {deepEqual( Stem("argad"), "arg");});
test("argt -> argt", function() {deepEqual( Stem("argt"), "argt");});
test("argument -> argument", function() {deepEqual( Stem("argument"), "argument");});
test("argumenterade -> argumenter", function() {deepEqual( Stem("argumenterade"), "argumenter");});
test("aristokrati -> aristokrati", function() {deepEqual( Stem("aristokrati"), "aristokrati");});
test("aristokratiska -> aristokratisk", function() {deepEqual( Stem("aristokratiska"), "aristokratisk");});
test("aristokratiskt -> aristokratisk", function() {deepEqual( Stem("aristokratiskt"), "aristokratisk");});
test("arit -> arit", function() {deepEqual( Stem("arit"), "arit");});
test("ark -> ark", function() {deepEqual( Stem("ark"), "ark");});
test("arkad -> ark", function() {deepEqual( Stem("arkad"), "ark");});
test("arkadisk -> arkadisk", function() {deepEqual( Stem("arkadisk"), "arkadisk");});
test("arken -> ark", function() {deepEqual( Stem("arken"), "ark");});
test("arket -> arket", function() {deepEqual( Stem("arket"), "arket");});
test("arkets -> arket", function() {deepEqual( Stem("arkets"), "arket");});
test("arkipelag -> arkipelag", function() {deepEqual( Stem("arkipelag"), "arkipelag");});
test("arm -> arm", function() {deepEqual( Stem("arm"), "arm");});
test("arma -> arm", function() {deepEqual( Stem("arma"), "arm");});
test("armar -> arm", function() {deepEqual( Stem("armar"), "arm");});
test("armarna -> arm", function() {deepEqual( Stem("armarna"), "arm");});
test("armarne -> arm", function() {deepEqual( Stem("armarne"), "arm");});
test("armat -> arm", function() {deepEqual( Stem("armat"), "arm");});
test("armbagarna -> armbag", function() {deepEqual( Stem("armbagarna"), "armbag");});
test("armband -> armband", function() {deepEqual( Stem("armband"), "armband");});
test("armbågar -> armbåg", function() {deepEqual( Stem("armbågar"), "armbåg");});
test("armbågarna -> armbåg", function() {deepEqual( Stem("armbågarna"), "armbåg");});
test("armbåge -> armbåg", function() {deepEqual( Stem("armbåge"), "armbåg");});
test("armbågen -> armbåg", function() {deepEqual( Stem("armbågen"), "armbåg");});
test("arme -> arm", function() {deepEqual( Stem("arme"), "arm");});
test("armen -> arm", function() {deepEqual( Stem("armen"), "arm");});
test("armhågarna -> armhåg", function() {deepEqual( Stem("armhågarna"), "armhåg");});
test("armod -> armod", function() {deepEqual( Stem("armod"), "armod");});
test("armodet -> armodet", function() {deepEqual( Stem("armodet"), "armodet");});
test("armodets -> armodet", function() {deepEqual( Stem("armodets"), "armodet");});
test("armtag -> armtag", function() {deepEqual( Stem("armtag"), "armtag");});
test("arna -> arn", function() {deepEqual( Stem("arna"), "arn");});
test("arnman -> arnman", function() {deepEqual( Stem("arnman"), "arnman");});
test("arnmans -> arnman", function() {deepEqual( Stem("arnmans"), "arnman");});
test("arnoldson -> arnoldson", function() {deepEqual( Stem("arnoldson"), "arnoldson");});
test("aro -> aro", function() {deepEqual( Stem("aro"), "aro");});
test("aron -> aron", function() {deepEqual( Stem("aron"), "aron");});
test("arrangerad -> arranger", function() {deepEqual( Stem("arrangerad"), "arranger");});
test("arrangerade -> arranger", function() {deepEqual( Stem("arrangerade"), "arranger");});
test("arrangerar -> arranger", function() {deepEqual( Stem("arrangerar"), "arranger");});
test("arrangeringen -> arrangering", function() {deepEqual( Stem("arrangeringen"), "arrangering");});
test("arren -> arr", function() {deepEqual( Stem("arren"), "arr");});
test("arrenda -> arrend", function() {deepEqual( Stem("arrenda"), "arrend");});
test("arrendator -> arrendat", function() {deepEqual( Stem("arrendator"), "arrendat");});
test("arrendatorn -> arrendatorn", function() {deepEqual( Stem("arrendatorn"), "arrendatorn");});
test("arrendatorns -> arrendatorn", function() {deepEqual( Stem("arrendatorns"), "arrendatorn");});
test("arrendators -> arrendator", function() {deepEqual( Stem("arrendators"), "arrendator");});
test("arrendatorsbostadcn -> arrendatorsbostadcn", function() {deepEqual( Stem("arrendatorsbostadcn"), "arrendatorsbostadcn");});
test("arrendatorsbostaden -> arrendatorsbostad", function() {deepEqual( Stem("arrendatorsbostaden"), "arrendatorsbostad");});
test("arrendatorsbostadens -> arrendatorsbostad", function() {deepEqual( Stem("arrendatorsbostadens"), "arrendatorsbostad");});
test("arrendatorsbyggnaden -> arrendatorsbyggnad", function() {deepEqual( Stem("arrendatorsbyggnaden"), "arrendatorsbyggnad");});
test("arrendatorsfrun -> arrendatorsfrun", function() {deepEqual( Stem("arrendatorsfrun"), "arrendatorsfrun");});
test("arrer -> arr", function() {deepEqual( Stem("arrer"), "arr");});
test("arrest -> arrest", function() {deepEqual( Stem("arrest"), "arrest");});
test("arsenik -> arsenik", function() {deepEqual( Stem("arsenik"), "arsenik");});
test("art -> art", function() {deepEqual( Stem("art"), "art");});
test("artade -> art", function() {deepEqual( Stem("artade"), "art");});
test("artar -> art", function() {deepEqual( Stem("artar"), "art");});
test("arten -> art", function() {deepEqual( Stem("arten"), "art");});
test("artificiella -> artificiell", function() {deepEqual( Stem("artificiella"), "artificiell");});
test("artig -> art", function() {deepEqual( Stem("artig"), "art");});
test("artiga -> art", function() {deepEqual( Stem("artiga"), "art");});
test("artigaste -> art", function() {deepEqual( Stem("artigaste"), "art");});
test("artige -> art", function() {deepEqual( Stem("artige"), "art");});
test("artighet -> art", function() {deepEqual( Stem("artighet"), "art");});
test("artigheten -> art", function() {deepEqual( Stem("artigheten"), "art");});
test("artigheter -> art", function() {deepEqual( Stem("artigheter"), "art");});
test("artigheterna -> art", function() {deepEqual( Stem("artigheterna"), "art");});
test("artighetsskratt -> artighetsskrat", function() {deepEqual( Stem("artighetsskratt"), "artighetsskrat");});
test("artigt -> art", function() {deepEqual( Stem("artigt"), "art");});
test("artikel -> artikel", function() {deepEqual( Stem("artikel"), "artikel");});
test("artiklar -> artikl", function() {deepEqual( Stem("artiklar"), "artikl");});
test("artiklarna -> artikl", function() {deepEqual( Stem("artiklarna"), "artikl");});
test("artistiskt -> artistisk", function() {deepEqual( Stem("artistiskt"), "artistisk");});
test("arv -> arv", function() {deepEqual( Stem("arv"), "arv");});
test("arve -> arv", function() {deepEqual( Stem("arve"), "arv");});
test("arvedel -> arvedel", function() {deepEqual( Stem("arvedel"), "arvedel");});
test("arves -> arv", function() {deepEqual( Stem("arves"), "arv");});
test("arvet -> arvet", function() {deepEqual( Stem("arvet"), "arvet");});
test("arvid -> arvid", function() {deepEqual( Stem("arvid"), "arvid");});
test("arvingar -> arving", function() {deepEqual( Stem("arvingar"), "arving");});
test("arvingarnas -> arving", function() {deepEqual( Stem("arvingarnas"), "arving");});
test("arvinge -> arving", function() {deepEqual( Stem("arvinge"), "arving");});
test("arvingen -> arving", function() {deepEqual( Stem("arvingen"), "arving");});
test("arvlös -> arvlös", function() {deepEqual( Stem("arvlös"), "arvlös");});
test("arvsfrågan -> arvsfrågan", function() {deepEqual( Stem("arvsfrågan"), "arvsfrågan");});
test("arvtagaren -> arvtag", function() {deepEqual( Stem("arvtagaren"), "arvtag");});
test("arvtagerska -> arvtagersk", function() {deepEqual( Stem("arvtagerska"), "arvtagersk");});
test("as -> as", function() {deepEqual( Stem("as"), "as");});
test("asikt -> asik", function() {deepEqual( Stem("asikt"), "asik");});
test("ask -> ask", function() {deepEqual( Stem("ask"), "ask");});
test("aska -> ask", function() {deepEqual( Stem("aska"), "ask");});
test("askan -> askan", function() {deepEqual( Stem("askan"), "askan");});
test("askarna -> ask", function() {deepEqual( Stem("askarna"), "ask");});
test("asken -> ask", function() {deepEqual( Stem("asken"), "ask");});
test("askenberg -> askenberg", function() {deepEqual( Stem("askenberg"), "askenberg");});
test("askenbergs -> askenberg", function() {deepEqual( Stem("askenbergs"), "askenberg");});
test("askgrå -> askgrå", function() {deepEqual( Stem("askgrå"), "askgrå");});
test("asmundssons -> asmundsson", function() {deepEqual( Stem("asmundssons"), "asmundsson");});
test("asp -> asp", function() {deepEqual( Stem("asp"), "asp");});
test("aspar -> asp", function() {deepEqual( Stem("aspar"), "asp");});
test("asparna -> asp", function() {deepEqual( Stem("asparna"), "asp");});
test("associerad -> associer", function() {deepEqual( Stem("associerad"), "associer");});
test("assurerat -> assurer", function() {deepEqual( Stem("assurerat"), "assurer");});
test("astolf -> astolf", function() {deepEqual( Stem("astolf"), "astolf");});
test("astrar -> astr", function() {deepEqual( Stem("astrar"), "astr");});
test("astrarna -> astr", function() {deepEqual( Stem("astrarna"), "astr");});
test("astronomiska -> astronomisk", function() {deepEqual( Stem("astronomiska"), "astronomisk");});
test("asynen -> asyn", function() {deepEqual( Stem("asynen"), "asyn");});
test("at -> at", function() {deepEqual( Stem("at"), "at");});
test("atelje -> atelj", function() {deepEqual( Stem("atelje"), "atelj");});
test("atenarna -> aten", function() {deepEqual( Stem("atenarna"), "aten");});
test("atenienn -> atenien", function() {deepEqual( Stem("atenienn"), "atenien");});
test("ateniennen -> atenien", function() {deepEqual( Stem("ateniennen"), "atenien");});
test("ater -> ater", function() {deepEqual( Stem("ater"), "ater");});
test("atertaga -> atertag", function() {deepEqual( Stem("atertaga"), "atertag");});
test("atervända -> atervänd", function() {deepEqual( Stem("atervända"), "atervänd");});
test("atervånt -> atervånt", function() {deepEqual( Stem("atervånt"), "atervånt");});
test("atl -> atl", function() {deepEqual( Stem("atl"), "atl");});
test("atltså -> atltså", function() {deepEqual( Stem("atltså"), "atltså");});
test("atminstone -> atminston", function() {deepEqual( Stem("atminstone"), "atminston");});
test("atmosferen -> atmosfer", function() {deepEqual( Stem("atmosferen"), "atmosfer");});
test("atmosfären -> atmosfär", function() {deepEqual( Stem("atmosfären"), "atmosfär");});
test("atmosfäriska -> atmosfärisk", function() {deepEqual( Stem("atmosfäriska"), "atmosfärisk");});
test("atog -> atog", function() {deepEqual( Stem("atog"), "atog");});
test("att -> att", function() {deepEqual( Stem("att"), "att");});
test("attachemang -> attachemang", function() {deepEqual( Stem("attachemang"), "attachemang");});
test("attachement -> attachement", function() {deepEqual( Stem("attachement"), "attachement");});
test("attbar -> attb", function() {deepEqual( Stem("attbar"), "attb");});
test("atterbom -> atterbom", function() {deepEqual( Stem("atterbom"), "atterbom");});
test("attesten -> attest", function() {deepEqual( Stem("attesten"), "attest");});
test("attiofjerde -> attiofjerd", function() {deepEqual( Stem("attiofjerde"), "attiofjerd");});
test("attityd -> attityd", function() {deepEqual( Stem("attityd"), "attityd");});
test("attrapp -> attrapp", function() {deepEqual( Stem("attrapp"), "attrapp");});
test("attrapper -> attrapp", function() {deepEqual( Stem("attrapper"), "attrapp");});
test("au -> au", function() {deepEqual( Stem("au"), "au");});
test("auditorium -> auditorium", function() {deepEqual( Stem("auditorium"), "auditorium");});
test("audumbla -> audumbl", function() {deepEqual( Stem("audumbla"), "audumbl");});
test("augsburgiska -> augsburgisk", function() {deepEqual( Stem("augsburgiska"), "augsburgisk");});
test("augusti -> augusti", function() {deepEqual( Stem("augusti"), "augusti");});
test("augustikvällarna -> augustikväll", function() {deepEqual( Stem("augustikvällarna"), "augustikväll");});
test("auktiga -> aukt", function() {deepEqual( Stem("auktiga"), "aukt");});
test("auktion -> auktion", function() {deepEqual( Stem("auktion"), "auktion");});
test("auktioner -> auktion", function() {deepEqual( Stem("auktioner"), "auktion");});
test("auktoritet -> auktoritet", function() {deepEqual( Stem("auktoritet"), "auktoritet");});
test("aura -> aur", function() {deepEqual( Stem("aura"), "aur");});
test("auskultant -> auskultant", function() {deepEqual( Stem("auskultant"), "auskultant");});
test("australien -> australi", function() {deepEqual( Stem("australien"), "australi");});
test("australneger -> australneg", function() {deepEqual( Stem("australneger"), "australneg");});
test("automat -> autom", function() {deepEqual( Stem("automat"), "autom");});
test("automatiskt -> automatisk", function() {deepEqual( Stem("automatiskt"), "automatisk");});
test("automobil -> automobil", function() {deepEqual( Stem("automobil"), "automobil");});
test("av -> av", function() {deepEqual( Stem("av"), "av");});
test("avancerat -> avancer", function() {deepEqual( Stem("avancerat"), "avancer");});
test("avbedjan -> avbedjan", function() {deepEqual( Stem("avbedjan"), "avbedjan");});
test("avbida -> avbid", function() {deepEqual( Stem("avbida"), "avbid");});
test("avbild -> avbild", function() {deepEqual( Stem("avbild"), "avbild");});
test("avbildade -> avbild", function() {deepEqual( Stem("avbildade"), "avbild");});
test("avblåsts -> avblåst", function() {deepEqual( Stem("avblåsts"), "avblåst");});
test("avbrott -> avbrot", function() {deepEqual( Stem("avbrott"), "avbrot");});
test("avbrottet -> avbrottet", function() {deepEqual( Stem("avbrottet"), "avbrottet");});
test("avbruten -> avbrut", function() {deepEqual( Stem("avbruten"), "avbrut");});
test("avbrutit -> avbrutit", function() {deepEqual( Stem("avbrutit"), "avbrutit");});
test("avbrutna -> avbrutn", function() {deepEqual( Stem("avbrutna"), "avbrutn");});
test("avbryta -> avbryt", function() {deepEqual( Stem("avbryta"), "avbryt");});
test("avbrytande -> avbryt", function() {deepEqual( Stem("avbrytande"), "avbryt");});
test("avbryter -> avbryt", function() {deepEqual( Stem("avbryter"), "avbryt");});
test("avbränt -> avbränt", function() {deepEqual( Stem("avbränt"), "avbränt");});
test("avbröt -> avbröt", function() {deepEqual( Stem("avbröt"), "avbröt");});
test("avbröts -> avbröt", function() {deepEqual( Stem("avbröts"), "avbröt");});
test("avböjde -> avböjd", function() {deepEqual( Stem("avböjde"), "avböjd");});
test("avdelat -> avdel", function() {deepEqual( Stem("avdelat"), "avdel");});
test("avdelning -> avdelning", function() {deepEqual( Stem("avdelning"), "avdelning");});
test("avdelningen -> avdelning", function() {deepEqual( Stem("avdelningen"), "avdelning");});
test("avdelningskontor -> avdelningskont", function() {deepEqual( Stem("avdelningskontor"), "avdelningskont");});
test("avdomnad -> avdomn", function() {deepEqual( Stem("avdomnad"), "avdomn");});
test("avdrag -> avdrag", function() {deepEqual( Stem("avdrag"), "avdrag");});
test("avdånad -> avdån", function() {deepEqual( Stem("avdånad"), "avdån");});
test("ave -> ave", function() {deepEqual( Stem("ave"), "ave");});
test("avec -> avec", function() {deepEqual( Stem("avec"), "avec");});
test("aven -> aven", function() {deepEqual( Stem("aven"), "aven");});
test("avfallna -> avfalln", function() {deepEqual( Stem("avfallna"), "avfalln");});
test("avfladd -> avflad", function() {deepEqual( Stem("avfladd"), "avflad");});
test("avflagade -> avflag", function() {deepEqual( Stem("avflagade"), "avflag");});
test("avfärd -> avfärd", function() {deepEqual( Stem("avfärd"), "avfärd");});
test("avfärdad -> avfärd", function() {deepEqual( Stem("avfärdad"), "avfärd");});
test("avfärden -> avfärd", function() {deepEqual( Stem("avfärden"), "avfärd");});
test("avge -> avg", function() {deepEqual( Stem("avge"), "avg");});
test("avgjord -> avgjord", function() {deepEqual( Stem("avgjord"), "avgjord");});
test("avgjort -> avgjort", function() {deepEqual( Stem("avgjort"), "avgjort");});
test("avgjorts -> avgjort", function() {deepEqual( Stem("avgjorts"), "avgjort");});
test("avgjöras -> avgjör", function() {deepEqual( Stem("avgjöras"), "avgjör");});
test("avglömda -> avglömd", function() {deepEqual( Stem("avglömda"), "avglömd");});
test("avgnagda -> avgnag", function() {deepEqual( Stem("avgnagda"), "avgnag");});
test("avgrund -> avgrund", function() {deepEqual( Stem("avgrund"), "avgrund");});
test("avgrunden -> avgrund", function() {deepEqual( Stem("avgrunden"), "avgrund");});
test("avgrunder -> avgrund", function() {deepEqual( Stem("avgrunder"), "avgrund");});
test("avgrundsanden -> avgrunds", function() {deepEqual( Stem("avgrundsanden"), "avgrunds");});
test("avgrundsdjup -> avgrundsdjup", function() {deepEqual( Stem("avgrundsdjup"), "avgrundsdjup");});
test("avgudat -> avgud", function() {deepEqual( Stem("avgudat"), "avgud");});
test("avgående -> avgåend", function() {deepEqual( Stem("avgående"), "avgåend");});
test("avgått -> avgåt", function() {deepEqual( Stem("avgått"), "avgåt");});
test("avgåvo -> avgåvo", function() {deepEqual( Stem("avgåvo"), "avgåvo");});
test("avgöra -> avgör", function() {deepEqual( Stem("avgöra"), "avgör");});
test("avgörande -> avgör", function() {deepEqual( Stem("avgörande"), "avgör");});
test("avhandling -> avhandling", function() {deepEqual( Stem("avhandling"), "avhandling");});
test("avhandlingen -> avhandling", function() {deepEqual( Stem("avhandlingen"), "avhandling");});
test("avhjälpt -> avhjälpt", function() {deepEqual( Stem("avhjälpt"), "avhjälpt");});
test("avhämta -> avhämt", function() {deepEqual( Stem("avhämta"), "avhämt");});
test("avhålla -> avhåll", function() {deepEqual( Stem("avhålla"), "avhåll");});
test("avhållen -> avhåll", function() {deepEqual( Stem("avhållen"), "avhåll");});
test("avhåller -> avhåll", function() {deepEqual( Stem("avhåller"), "avhåll");});
test("avhållsamhet -> avhållsam", function() {deepEqual( Stem("avhållsamhet"), "avhållsam");});
test("avhölja -> avhölj", function() {deepEqual( Stem("avhölja"), "avhölj");});
test("avhörde -> avhörd", function() {deepEqual( Stem("avhörde"), "avhörd");});
test("avhört -> avhört", function() {deepEqual( Stem("avhört"), "avhört");});
test("avig -> avig", function() {deepEqual( Stem("avig"), "avig");});
test("aviga -> avig", function() {deepEqual( Stem("aviga"), "avig");});
test("avklädde -> avkläd", function() {deepEqual( Stem("avklädde"), "avkläd");});
test("avkomling -> avkomling", function() {deepEqual( Stem("avkomling"), "avkomling");});
test("avkunnad -> avkun", function() {deepEqual( Stem("avkunnad"), "avkun");});
test("avlade -> avl", function() {deepEqual( Stem("avlade"), "avl");});
test("avlagda -> avlag", function() {deepEqual( Stem("avlagda"), "avlag");});
test("avlande -> avl", function() {deepEqual( Stem("avlande"), "avl");});
test("avlidna -> avlidn", function() {deepEqual( Stem("avlidna"), "avlidn");});
test("avlidne -> avlidn", function() {deepEqual( Stem("avlidne"), "avlidn");});
test("avlocka -> avlock", function() {deepEqual( Stem("avlocka"), "avlock");});
test("avloppsrör -> avloppsrör", function() {deepEqual( Stem("avloppsrör"), "avloppsrör");});
test("avlupo -> avlupo", function() {deepEqual( Stem("avlupo"), "avlupo");});
test("avlägga -> avlägg", function() {deepEqual( Stem("avlägga"), "avlägg");});
test("avlägsen -> avlägs", function() {deepEqual( Stem("avlägsen"), "avlägs");});
test("avlägset -> avlägset", function() {deepEqual( Stem("avlägset"), "avlägset");});
test("avlägsna -> avlägsn", function() {deepEqual( Stem("avlägsna"), "avlägsn");});
test("avlägsnade -> avlägsn", function() {deepEqual( Stem("avlägsnade"), "avlägsn");});
test("avlägsnare -> avlägsn", function() {deepEqual( Stem("avlägsnare"), "avlägsn");});
test("avlägsnaste -> avlägsn", function() {deepEqual( Stem("avlägsnaste"), "avlägsn");});
test("avlägsnat -> avlägsn", function() {deepEqual( Stem("avlägsnat"), "avlägsn");});
test("avlånga -> avlång", function() {deepEqual( Stem("avlånga"), "avlång");});
test("avlöpa -> avlöp", function() {deepEqual( Stem("avlöpa"), "avlöp");});
test("avlöste -> avlöst", function() {deepEqual( Stem("avlöste"), "avlöst");});
test("avlövade -> avlöv", function() {deepEqual( Stem("avlövade"), "avlöv");});
test("avmagrat -> avmagr", function() {deepEqual( Stem("avmagrat"), "avmagr");});
test("avmätt -> avmät", function() {deepEqual( Stem("avmätt"), "avmät");});
test("avmätta -> avmät", function() {deepEqual( Stem("avmätta"), "avmät");});
test("avpassad -> avpass", function() {deepEqual( Stem("avpassad"), "avpass");});
test("avresa -> avres", function() {deepEqual( Stem("avresa"), "avres");});
test("avresan -> avresan", function() {deepEqual( Stem("avresan"), "avresan");});
test("avrivning -> avrivning", function() {deepEqual( Stem("avrivning"), "avrivning");});
test("avrättsplatsen -> avrättsplats", function() {deepEqual( Stem("avrättsplatsen"), "avrättsplats");});
test("avsatsen -> avsats", function() {deepEqual( Stem("avsatsen"), "avsats");});
test("avsatt -> avsat", function() {deepEqual( Stem("avsatt"), "avsat");});
test("avseende -> avseend", function() {deepEqual( Stem("avseende"), "avseend");});
test("avseenden -> avseend", function() {deepEqual( Stem("avseenden"), "avseend");});
test("avsett -> avset", function() {deepEqual( Stem("avsett"), "avset");});
test("avsides -> avsid", function() {deepEqual( Stem("avsides"), "avsid");});
test("avsigkomna -> avsigkomn", function() {deepEqual( Stem("avsigkomna"), "avsigkomn");});
test("avsikt -> avsik", function() {deepEqual( Stem("avsikt"), "avsik");});
test("avsikten -> avsik", function() {deepEqual( Stem("avsikten"), "avsik");});
test("avskaven -> avskav", function() {deepEqual( Stem("avskaven"), "avskav");});
test("avsked -> avsked", function() {deepEqual( Stem("avsked"), "avsked");});
test("avskedet -> avskedet", function() {deepEqual( Stem("avskedet"), "avskedet");});
test("avskedsansökan -> avskedsansökan", function() {deepEqual( Stem("avskedsansökan"), "avskedsansökan");});
test("avskedsblick -> avskedsblick", function() {deepEqual( Stem("avskedsblick"), "avskedsblick");});
test("avskedsmåltiden -> avskedsmåltid", function() {deepEqual( Stem("avskedsmåltiden"), "avskedsmåltid");});
test("avskild -> avskild", function() {deepEqual( Stem("avskild"), "avskild");});
test("avskilda -> avskild", function() {deepEqual( Stem("avskilda"), "avskild");});
test("avskildhet -> avskild", function() {deepEqual( Stem("avskildhet"), "avskild");});
test("avskrift -> avskrift", function() {deepEqual( Stem("avskrift"), "avskrift");});
test("avskrädeshögen -> avskrädeshög", function() {deepEqual( Stem("avskrädeshögen"), "avskrädeshög");});
test("avskum -> avskum", function() {deepEqual( Stem("avskum"), "avskum");});
test("avsky -> avsky", function() {deepEqual( Stem("avsky"), "avsky");});
test("avskydd -> avskyd", function() {deepEqual( Stem("avskydd"), "avskyd");});
test("avskydda -> avskyd", function() {deepEqual( Stem("avskydda"), "avskyd");});
test("avskydde -> avskyd", function() {deepEqual( Stem("avskydde"), "avskyd");});
test("avskyr -> avskyr", function() {deepEqual( Stem("avskyr"), "avskyr");});
test("avskytt -> avskyt", function() {deepEqual( Stem("avskytt"), "avskyt");});
test("avskyvärda -> avskyvärd", function() {deepEqual( Stem("avskyvärda"), "avskyvärd");});
test("avskyvärde -> avskyvärd", function() {deepEqual( Stem("avskyvärde"), "avskyvärd");});
test("avskyvärt -> avskyvärt", function() {deepEqual( Stem("avskyvärt"), "avskyvärt");});
test("avslag -> avslag", function() {deepEqual( Stem("avslag"), "avslag");});
test("avsluta -> avslut", function() {deepEqual( Stem("avsluta"), "avslut");});
test("avslutade -> avslut", function() {deepEqual( Stem("avslutade"), "avslut");});
test("avslutades -> avslut", function() {deepEqual( Stem("avslutades"), "avslut");});
test("avslutat -> avslut", function() {deepEqual( Stem("avslutat"), "avslut");});
test("avslutning -> avslutning", function() {deepEqual( Stem("avslutning"), "avslutning");});
test("avslöja -> avslöj", function() {deepEqual( Stem("avslöja"), "avslöj");});
test("avslöjade -> avslöj", function() {deepEqual( Stem("avslöjade"), "avslöj");});
test("avslöjat -> avslöj", function() {deepEqual( Stem("avslöjat"), "avslöj");});
test("avslöt -> avslöt", function() {deepEqual( Stem("avslöt"), "avslöt");});
test("avslöts -> avslöt", function() {deepEqual( Stem("avslöts"), "avslöt");});
test("avsmak -> avsmak", function() {deepEqual( Stem("avsmak"), "avsmak");});
test("avstack -> avstack", function() {deepEqual( Stem("avstack"), "avstack");});
test("avstanna -> avstan", function() {deepEqual( Stem("avstanna"), "avstan");});
test("avstickare -> avstick", function() {deepEqual( Stem("avstickare"), "avstick");});
test("avstigna -> avstign", function() {deepEqual( Stem("avstigna"), "avstign");});
test("avstod -> avstod", function() {deepEqual( Stem("avstod"), "avstod");});
test("avstubbade -> avstubb", function() {deepEqual( Stem("avstubbade"), "avstubb");});
test("avstädades -> avstäd", function() {deepEqual( Stem("avstädades"), "avstäd");});
test("avstå -> avstå", function() {deepEqual( Stem("avstå"), "avstå");});
test("avstånd -> avstånd", function() {deepEqual( Stem("avstånd"), "avstånd");});
test("avståndet -> avståndet", function() {deepEqual( Stem("avståndet"), "avståndet");});
test("avstår -> avstår", function() {deepEqual( Stem("avstår"), "avstår");});
test("avsvalnat -> avsvaln", function() {deepEqual( Stem("avsvalnat"), "avsvaln");});
test("avsvor -> avsv", function() {deepEqual( Stem("avsvor"), "avsv");});
test("avsättningen -> avsättning", function() {deepEqual( Stem("avsättningen"), "avsättning");});
test("avsöndrat -> avsöndr", function() {deepEqual( Stem("avsöndrat"), "avsöndr");});
test("avtaga -> avtag", function() {deepEqual( Stem("avtaga"), "avtag");});
test("avtal -> avtal", function() {deepEqual( Stem("avtal"), "avtal");});
test("avtala -> avtal", function() {deepEqual( Stem("avtala"), "avtal");});
test("avtalade -> avtal", function() {deepEqual( Stem("avtalade"), "avtal");});
test("avtalat -> avtal", function() {deepEqual( Stem("avtalat"), "avtal");});
test("avtog -> avtog", function() {deepEqual( Stem("avtog"), "avtog");});
test("avtogo -> avtogo", function() {deepEqual( Stem("avtogo"), "avtogo");});
test("avtryck -> avtryck", function() {deepEqual( Stem("avtryck"), "avtryck");});
test("avund -> avund", function() {deepEqual( Stem("avund"), "avund");});
test("avundade -> avund", function() {deepEqual( Stem("avundade"), "avund");});
test("avundades -> avund", function() {deepEqual( Stem("avundades"), "avund");});
test("avundas -> avund", function() {deepEqual( Stem("avundas"), "avund");});
test("avundats -> avundat", function() {deepEqual( Stem("avundats"), "avundat");});
test("avunden -> avund", function() {deepEqual( Stem("avunden"), "avund");});
test("avundens -> avund", function() {deepEqual( Stem("avundens"), "avund");});
test("avunds -> avund", function() {deepEqual( Stem("avunds"), "avund");});
test("avundsjuk -> avundsjuk", function() {deepEqual( Stem("avundsjuk"), "avundsjuk");});
test("avundsjuka -> avundsjuk", function() {deepEqual( Stem("avundsjuka"), "avundsjuk");});
test("avundsjukan -> avundsjukan", function() {deepEqual( Stem("avundsjukan"), "avundsjukan");});
test("avundsjukt -> avundsjuk", function() {deepEqual( Stem("avundsjukt"), "avundsjuk");});
test("avundsvärd -> avundsvärd", function() {deepEqual( Stem("avundsvärd"), "avundsvärd");});
test("avundsvärda -> avundsvärd", function() {deepEqual( Stem("avundsvärda"), "avundsvärd");});
test("avvakta -> avvak", function() {deepEqual( Stem("avvakta"), "avvak");});
test("avvaktade -> avvak", function() {deepEqual( Stem("avvaktade"), "avvak");});
test("avvaktan -> avvaktan", function() {deepEqual( Stem("avvaktan"), "avvaktan");});
test("avvaktande -> avvak", function() {deepEqual( Stem("avvaktande"), "avvak");});
test("avverkade -> avverk", function() {deepEqual( Stem("avverkade"), "avverk");});
test("avvikelse -> avvik", function() {deepEqual( Stem("avvikelse"), "avvik");});
test("avvikelsen -> avvik", function() {deepEqual( Stem("avvikelsen"), "avvik");});
test("avvisad -> avvis", function() {deepEqual( Stem("avvisad"), "avvis");});
test("avvisande -> avvis", function() {deepEqual( Stem("avvisande"), "avvis");});
test("avväg -> avväg", function() {deepEqual( Stem("avväg"), "avväg");});
test("avvägd -> avväg", function() {deepEqual( Stem("avvägd"), "avväg");});
test("avvägt -> avväg", function() {deepEqual( Stem("avvägt"), "avväg");});
test("avvärja -> avvärj", function() {deepEqual( Stem("avvärja"), "avvärj");});
test("avvärjande -> avvärj", function() {deepEqual( Stem("avvärjande"), "avvärj");});
test("avvärjde -> avvärjd", function() {deepEqual( Stem("avvärjde"), "avvärjd");});
test("axel -> axel", function() {deepEqual( Stem("axel"), "axel");});
test("axelbred -> axelbred", function() {deepEqual( Stem("axelbred"), "axelbred");});
test("axeln -> axeln", function() {deepEqual( Stem("axeln"), "axeln");});
test("axelryckning -> axelryckning", function() {deepEqual( Stem("axelryckning"), "axelryckning");});
test("axelryckningen -> axelryckning", function() {deepEqual( Stem("axelryckningen"), "axelryckning");});
test("axens -> axen", function() {deepEqual( Stem("axens"), "axen");});
test("axlar -> axl", function() {deepEqual( Stem("axlar"), "axl");});
test("axlarna -> axl", function() {deepEqual( Stem("axlarna"), "axl");});
test("axlarne -> axl", function() {deepEqual( Stem("axlarne"), "axl");});
test("azltså -> azltså", function() {deepEqual( Stem("azltså"), "azltså");});
test("azur -> azur", function() {deepEqual( Stem("azur"), "azur");});
test("azurblått -> azurblåt", function() {deepEqual( Stem("azurblått"), "azurblåt");});
test("b -> b", function() {deepEqual( Stem("b"), "b");});
test("ba -> ba", function() {deepEqual( Stem("ba"), "ba");});
test("babels -> babel", function() {deepEqual( Stem("babels"), "babel");});
test("babelstorn -> babelstorn", function() {deepEqual( Stem("babelstorn"), "babelstorn");});
test("babordslanternan -> babordslanternan", function() {deepEqual( Stem("babordslanternan"), "babordslanternan");});
test("babordsrelingen -> babordsreling", function() {deepEqual( Stem("babordsrelingen"), "babordsreling");});
test("babyloniska -> babylonisk", function() {deepEqual( Stem("babyloniska"), "babylonisk");});
test("baciller -> bacill", function() {deepEqual( Stem("baciller"), "bacill");});
test("bacillerna -> bacill", function() {deepEqual( Stem("bacillerna"), "bacill");});
test("bacillskräck -> bacillskräck", function() {deepEqual( Stem("bacillskräck"), "bacillskräck");});
test("backar -> back", function() {deepEqual( Stem("backar"), "back");});
test("backe -> back", function() {deepEqual( Stem("backe"), "back");});
test("backen -> back", function() {deepEqual( Stem("backen"), "back");});
test("backor -> back", function() {deepEqual( Stem("backor"), "back");});
test("bad -> bad", function() {deepEqual( Stem("bad"), "bad");});
test("bada -> bad", function() {deepEqual( Stem("bada"), "bad");});
test("badade -> bad", function() {deepEqual( Stem("badade"), "bad");});
test("badades -> bad", function() {deepEqual( Stem("badades"), "bad");});
test("badat -> bad", function() {deepEqual( Stem("badat"), "bad");});
test("badc -> badc", function() {deepEqual( Stem("badc"), "badc");});
test("badden -> badd", function() {deepEqual( Stem("badden"), "badd");});
test("baddräkt -> baddräk", function() {deepEqual( Stem("baddräkt"), "baddräk");});
test("bade -> bad", function() {deepEqual( Stem("bade"), "bad");});
test("baden -> bad", function() {deepEqual( Stem("baden"), "bad");});
test("badet -> badet", function() {deepEqual( Stem("badet"), "badet");});
test("badhuset -> badhuset", function() {deepEqual( Stem("badhuset"), "badhuset");});
test("badkuren -> badkur", function() {deepEqual( Stem("badkuren"), "badkur");});
test("badning -> badning", function() {deepEqual( Stem("badning"), "badning");});
test("badrum -> badrum", function() {deepEqual( Stem("badrum"), "badrum");});
test("badsejour -> badsejour", function() {deepEqual( Stem("badsejour"), "badsejour");});
test("badsejouren -> badsejour", function() {deepEqual( Stem("badsejouren"), "badsejour");});
test("badstranden -> badstr", function() {deepEqual( Stem("badstranden"), "badstr");});
test("badstuga -> badstug", function() {deepEqual( Stem("badstuga"), "badstug");});
test("badstugan -> badstugan", function() {deepEqual( Stem("badstugan"), "badstugan");});
test("badstuns -> badstun", function() {deepEqual( Stem("badstuns"), "badstun");});
test("badstället -> badstället", function() {deepEqual( Stem("badstället"), "badstället");});
test("bagare -> bag", function() {deepEqual( Stem("bagare"), "bag");});
test("bagaren -> bag", function() {deepEqual( Stem("bagaren"), "bag");});
test("bagarn -> bagarn", function() {deepEqual( Stem("bagarn"), "bagarn");});
test("bagarns -> bagarn", function() {deepEqual( Stem("bagarns"), "bagarn");});
test("bagatell -> bagatell", function() {deepEqual( Stem("bagatell"), "bagatell");});
test("bagateller -> bagatell", function() {deepEqual( Stem("bagateller"), "bagatell");});
test("bagerierna -> bageri", function() {deepEqual( Stem("bagerierna"), "bageri");});
test("bagge -> bagg", function() {deepEqual( Stem("bagge"), "bagg");});
test("bagges -> bagg", function() {deepEqual( Stem("bagges"), "bagg");});
test("baglig -> bag", function() {deepEqual( Stem("baglig"), "bag");});
test("bah -> bah", function() {deepEqual( Stem("bah"), "bah");});
test("bahytthattar -> bahytthat", function() {deepEqual( Stem("bahytthattar"), "bahytthat");});
test("bak -> bak", function() {deepEqual( Stem("bak"), "bak");});
test("baka -> bak", function() {deepEqual( Stem("baka"), "bak");});
test("bakat -> bak", function() {deepEqual( Stem("bakat"), "bak");});
test("bakbenen -> bakben", function() {deepEqual( Stem("bakbenen"), "bakben");});
test("bakelsehungriga -> bakelsehungr", function() {deepEqual( Stem("bakelsehungriga"), "bakelsehungr");});
test("bakelser -> bak", function() {deepEqual( Stem("bakelser"), "bak");});
test("baken -> bak", function() {deepEqual( Stem("baken"), "bak");});
test("bakfoten -> bakfot", function() {deepEqual( Stem("bakfoten"), "bakfot");});
test("bakgata -> bakgat", function() {deepEqual( Stem("bakgata"), "bakgat");});
test("bakgrunden -> bakgrund", function() {deepEqual( Stem("bakgrunden"), "bakgrund");});
test("bakhuvud -> bakhuvud", function() {deepEqual( Stem("bakhuvud"), "bakhuvud");});
test("bakhåll -> bakhåll", function() {deepEqual( Stem("bakhåll"), "bakhåll");});
test("bakifrån -> bakifrån", function() {deepEqual( Stem("bakifrån"), "bakifrån");});
test("baklänges -> bakläng", function() {deepEqual( Stem("baklänges"), "bakläng");});
test("bakom -> bakom", function() {deepEqual( Stem("bakom"), "bakom");});
test("bakport -> bakport", function() {deepEqual( Stem("bakport"), "bakport");});
test("bakringarna -> bakring", function() {deepEqual( Stem("bakringarna"), "bakring");});
test("baksida -> baksid", function() {deepEqual( Stem("baksida"), "baksid");});
test("baktanke -> baktank", function() {deepEqual( Stem("baktanke"), "baktank");});
test("bakverk -> bakverk", function() {deepEqual( Stem("bakverk"), "bakverk");});
test("bakvändt -> bakvänd", function() {deepEqual( Stem("bakvändt"), "bakvänd");});
test("bakåt -> bakåt", function() {deepEqual( Stem("bakåt"), "bakåt");});
test("bal -> bal", function() {deepEqual( Stem("bal"), "bal");});
test("balansera -> balanser", function() {deepEqual( Stem("balansera"), "balanser");});
test("balanserade -> balanser", function() {deepEqual( Stem("balanserade"), "balanser");});
test("balanserande -> balanser", function() {deepEqual( Stem("balanserande"), "balanser");});
test("baler -> bal", function() {deepEqual( Stem("baler"), "bal");});
test("balett -> balet", function() {deepEqual( Stem("balett"), "balet");});
test("balja -> balj", function() {deepEqual( Stem("balja"), "balj");});
test("baljorna -> balj", function() {deepEqual( Stem("baljorna"), "balj");});
test("balkong -> balkong", function() {deepEqual( Stem("balkong"), "balkong");});
test("balladen -> ballad", function() {deepEqual( Stem("balladen"), "ballad");});
test("balsam -> balsam", function() {deepEqual( Stem("balsam"), "balsam");});
test("balsamin -> balsamin", function() {deepEqual( Stem("balsamin"), "balsamin");});
test("balsaminen -> balsamin", function() {deepEqual( Stem("balsaminen"), "balsamin");});
test("balsaminer -> balsamin", function() {deepEqual( Stem("balsaminer"), "balsamin");});
test("balsaminerna -> balsamin", function() {deepEqual( Stem("balsaminerna"), "balsamin");});
test("balsaminernas -> balsamin", function() {deepEqual( Stem("balsaminernas"), "balsamin");});
test("balsampoppeln -> balsampoppeln", function() {deepEqual( Stem("balsampoppeln"), "balsampoppeln");});
test("balsäsong -> balsäsong", function() {deepEqual( Stem("balsäsong"), "balsäsong");});
test("bamablomstrande -> bamablomstr", function() {deepEqual( Stem("bamablomstrande"), "bamablomstr");});
test("ban -> ban", function() {deepEqual( Stem("ban"), "ban");});
test("bana -> ban", function() {deepEqual( Stem("bana"), "ban");});
test("banade -> ban", function() {deepEqual( Stem("banade"), "ban");});
test("banala -> banal", function() {deepEqual( Stem("banala"), "banal");});
test("banan -> banan", function() {deepEqual( Stem("banan"), "banan");});
test("banar -> ban", function() {deepEqual( Stem("banar"), "ban");});
test("band -> band", function() {deepEqual( Stem("band"), "band");});
test("bandet -> bandet", function() {deepEqual( Stem("bandet"), "bandet");});
test("bandhundens -> bandhund", function() {deepEqual( Stem("bandhundens"), "bandhund");});
test("bandrullar -> bandrull", function() {deepEqual( Stem("bandrullar"), "bandrull");});
test("bane -> ban", function() {deepEqual( Stem("bane"), "ban");});
test("baner -> ban", function() {deepEqual( Stem("baner"), "ban");});
test("bank -> bank", function() {deepEqual( Stem("bank"), "bank");});
test("bankar -> bank", function() {deepEqual( Stem("bankar"), "bank");});
test("bankdirektören -> bankdirektör", function() {deepEqual( Stem("bankdirektören"), "bankdirektör");});
test("banko -> banko", function() {deepEqual( Stem("banko"), "banko");});
test("bann -> bann", function() {deepEqual( Stem("bann"), "bann");});
test("banna -> bann", function() {deepEqual( Stem("banna"), "bann");});
test("bannande -> bann", function() {deepEqual( Stem("bannande"), "bann");});
test("bannor -> bann", function() {deepEqual( Stem("bannor"), "bann");});
test("bans -> ban", function() {deepEqual( Stem("bans"), "ban");});
test("bar -> bar", function() {deepEqual( Stem("bar"), "bar");});
test("bara -> bar", function() {deepEqual( Stem("bara"), "bar");});
test("barbari -> barbari", function() {deepEqual( Stem("barbari"), "barbari");});
test("barett -> baret", function() {deepEqual( Stem("barett"), "baret");});
test("barfota -> barfot", function() {deepEqual( Stem("barfota"), "barfot");});
test("barhuvad -> barhuv", function() {deepEqual( Stem("barhuvad"), "barhuv");});
test("bari -> bari", function() {deepEqual( Stem("bari"), "bari");});
test("bark -> bark", function() {deepEqual( Stem("bark"), "bark");});
test("barkbat -> barkb", function() {deepEqual( Stem("barkbat"), "barkb");});
test("barm -> barm", function() {deepEqual( Stem("barm"), "barm");});
test("barmar -> barm", function() {deepEqual( Stem("barmar"), "barm");});
test("barmen -> barm", function() {deepEqual( Stem("barmen"), "barm");});
test("barmhertig -> barmhert", function() {deepEqual( Stem("barmhertig"), "barmhert");});
test("barmhertighet -> barmhert", function() {deepEqual( Stem("barmhertighet"), "barmhert");});
test("barmhärtiga -> barmhärt", function() {deepEqual( Stem("barmhärtiga"), "barmhärt");});
test("barmhärtige -> barmhärt", function() {deepEqual( Stem("barmhärtige"), "barmhärt");});
test("barmhärtiges -> barmhärt", function() {deepEqual( Stem("barmhärtiges"), "barmhärt");});
test("barmhärtighet -> barmhärt", function() {deepEqual( Stem("barmhärtighet"), "barmhärt");});
test("barmhärtigheten -> barmhärt", function() {deepEqual( Stem("barmhärtigheten"), "barmhärt");});
test("barmhärtighetsdoktorerna -> barmhärtighetsdoktor", function() {deepEqual( Stem("barmhärtighetsdoktorerna"), "barmhärtighetsdoktor");});
test("barmhärtighetsgärningar -> barmhärtighetsgärning", function() {deepEqual( Stem("barmhärtighetsgärningar"), "barmhärtighetsgärning");});
test("barmhärtighetsverk -> barmhärtighetsverk", function() {deepEqual( Stem("barmhärtighetsverk"), "barmhärtighetsverk");});
test("barmhärtigt -> barmhärt", function() {deepEqual( Stem("barmhärtigt"), "barmhärt");});
test("barmmorskan -> barmmorskan", function() {deepEqual( Stem("barmmorskan"), "barmmorskan");});
test("barn -> barn", function() {deepEqual( Stem("barn"), "barn");});
test("barnaföderska -> barnafödersk", function() {deepEqual( Stem("barnaföderska"), "barnafödersk");});
test("barnansikte -> barnansik", function() {deepEqual( Stem("barnansikte"), "barnansik");});
test("barnasinnet -> barnasinnet", function() {deepEqual( Stem("barnasinnet"), "barnasinnet");});
test("barnavård -> barnavård", function() {deepEqual( Stem("barnavård"), "barnavård");});
test("barnavårdsnämnden -> barnavårdsnämnd", function() {deepEqual( Stem("barnavårdsnämnden"), "barnavårdsnämnd");});
test("barnbarn -> barnbarn", function() {deepEqual( Stem("barnbarn"), "barnbarn");});
test("barnbarnen -> barnbarn", function() {deepEqual( Stem("barnbarnen"), "barnbarn");});
test("barnbördshus -> barnbördshus", function() {deepEqual( Stem("barnbördshus"), "barnbördshus");});
test("barnbördshuset -> barnbördshuset", function() {deepEqual( Stem("barnbördshuset"), "barnbördshuset");});
test("barndom -> barndom", function() {deepEqual( Stem("barndom"), "barndom");});
test("barndomen -> barndom", function() {deepEqual( Stem("barndomen"), "barndom");});
test("barndomens -> barndom", function() {deepEqual( Stem("barndomens"), "barndom");});
test("barndoms -> barndom", function() {deepEqual( Stem("barndoms"), "barndom");});
test("barndomsminnen -> barndomsmin", function() {deepEqual( Stem("barndomsminnen"), "barndomsmin");});
test("barndomsstad -> barndomsst", function() {deepEqual( Stem("barndomsstad"), "barndomsst");});
test("barndomsår -> barndomsår", function() {deepEqual( Stem("barndomsår"), "barndomsår");});
test("barndop -> barndop", function() {deepEqual( Stem("barndop"), "barndop");});
test("barnen -> barn", function() {deepEqual( Stem("barnen"), "barn");});
test("barnens -> barn", function() {deepEqual( Stem("barnens"), "barn");});
test("barnet -> barnet", function() {deepEqual( Stem("barnet"), "barnet");});
test("barnets -> barnet", function() {deepEqual( Stem("barnets"), "barnet");});
test("barneu -> barneu", function() {deepEqual( Stem("barneu"), "barneu");});
test("barnflicka -> barnflick", function() {deepEqual( Stem("barnflicka"), "barnflick");});
test("barnhemmet -> barnhemmet", function() {deepEqual( Stem("barnhemmet"), "barnhemmet");});
test("barnhuset -> barnhuset", function() {deepEqual( Stem("barnhuset"), "barnhuset");});
test("barnjungfru -> barnjungfru", function() {deepEqual( Stem("barnjungfru"), "barnjungfru");});
test("barnjungfruns -> barnjungfrun", function() {deepEqual( Stem("barnjungfruns"), "barnjungfrun");});
test("barnkammare -> barnkamm", function() {deepEqual( Stem("barnkammare"), "barnkamm");});
test("barnkammaren -> barnkamm", function() {deepEqual( Stem("barnkammaren"), "barnkamm");});
test("barnkammarens -> barnkamm", function() {deepEqual( Stem("barnkammarens"), "barnkamm");});
test("barnkära -> barnkär", function() {deepEqual( Stem("barnkära"), "barnkär");});
test("barnlös -> barnlös", function() {deepEqual( Stem("barnlös"), "barnlös");});
test("barnlöst -> barnlös", function() {deepEqual( Stem("barnlöst"), "barnlös");});
test("barnmorska -> barnmorsk", function() {deepEqual( Stem("barnmorska"), "barnmorsk");});
test("barnmorskan -> barnmorskan", function() {deepEqual( Stem("barnmorskan"), "barnmorskan");});
test("barnmorskans -> barnmorskan", function() {deepEqual( Stem("barnmorskans"), "barnmorskan");});
test("barnmorskor -> barnmorsk", function() {deepEqual( Stem("barnmorskor"), "barnmorsk");});
test("barnpensionat -> barnpension", function() {deepEqual( Stem("barnpensionat"), "barnpension");});
test("barnröst -> barnröst", function() {deepEqual( Stem("barnröst"), "barnröst");});
test("barns -> barn", function() {deepEqual( Stem("barns"), "barn");});
test("barnsbörd -> barnsbörd", function() {deepEqual( Stem("barnsbörd"), "barnsbörd");});
test("barnskaran -> barnskaran", function() {deepEqual( Stem("barnskaran"), "barnskaran");});
test("barnslig -> barns", function() {deepEqual( Stem("barnslig"), "barns");});
test("barnsliga -> barns", function() {deepEqual( Stem("barnsliga"), "barns");});
test("barnsligc -> barnsligc", function() {deepEqual( Stem("barnsligc"), "barnsligc");});
test("barnslighet -> barns", function() {deepEqual( Stem("barnslighet"), "barns");});
test("barnsligheten -> barns", function() {deepEqual( Stem("barnsligheten"), "barns");});
test("barnsligheter -> barns", function() {deepEqual( Stem("barnsligheter"), "barns");});
test("barnsligt -> barns", function() {deepEqual( Stem("barnsligt"), "barns");});
test("barnsnöd -> barnsnöd", function() {deepEqual( Stem("barnsnöd"), "barnsnöd");});
test("barnsäng -> barnsäng", function() {deepEqual( Stem("barnsäng"), "barnsäng");});
test("barnsängar -> barnsäng", function() {deepEqual( Stem("barnsängar"), "barnsäng");});
test("barnsängskvinnas -> barnsängskvin", function() {deepEqual( Stem("barnsängskvinnas"), "barnsängskvin");});
test("barnsängskvinnorna -> barnsängskvin", function() {deepEqual( Stem("barnsängskvinnorna"), "barnsängskvin");});
test("barnungar -> barnung", function() {deepEqual( Stem("barnungar"), "barnung");});
test("barnungarne -> barnung", function() {deepEqual( Stem("barnungarne"), "barnung");});
test("barnungars -> barnungar", function() {deepEqual( Stem("barnungars"), "barnungar");});
test("barnunge -> barnung", function() {deepEqual( Stem("barnunge"), "barnung");});
test("baron -> baron", function() {deepEqual( Stem("baron"), "baron");});
test("baronen -> baron", function() {deepEqual( Stem("baronen"), "baron");});
test("baronens -> baron", function() {deepEqual( Stem("baronens"), "baron");});
test("baroner -> baron", function() {deepEqual( Stem("baroner"), "baron");});
test("barr -> barr", function() {deepEqual( Stem("barr"), "barr");});
test("barren -> barr", function() {deepEqual( Stem("barren"), "barr");});
test("barriären -> barriär", function() {deepEqual( Stem("barriären"), "barriär");});
test("barrskog -> barrskog", function() {deepEqual( Stem("barrskog"), "barrskog");});
test("bars -> bar", function() {deepEqual( Stem("bars"), "bar");});
test("barsk -> barsk", function() {deepEqual( Stem("barsk"), "barsk");});
test("barska -> barsk", function() {deepEqual( Stem("barska"), "barsk");});
test("barske -> barsk", function() {deepEqual( Stem("barske"), "barsk");});
test("barskt -> barsk", function() {deepEqual( Stem("barskt"), "barsk");});
test("bart -> bart", function() {deepEqual( Stem("bart"), "bart");});
test("basar -> bas", function() {deepEqual( Stem("basar"), "bas");});
test("baserad -> baser", function() {deepEqual( Stem("baserad"), "baser");});
test("basilisken -> basilisk", function() {deepEqual( Stem("basilisken"), "basilisk");});
test("bastanta -> bastant", function() {deepEqual( Stem("bastanta"), "bastant");});
test("bastigt -> bast", function() {deepEqual( Stem("bastigt"), "bast");});
test("bastu -> bastu", function() {deepEqual( Stem("bastu"), "bastu");});
test("bastun -> bastun", function() {deepEqual( Stem("bastun"), "bastun");});
test("basun -> basun", function() {deepEqual( Stem("basun"), "basun");});
test("batalj -> batalj", function() {deepEqual( Stem("batalj"), "batalj");});
test("batar -> bat", function() {deepEqual( Stem("batar"), "bat");});
test("batarml -> batarml", function() {deepEqual( Stem("batarml"), "batarml");});
test("batist -> batist", function() {deepEqual( Stem("batist"), "batist");});
test("battre -> battr", function() {deepEqual( Stem("battre"), "battr");});
test("battys -> batty", function() {deepEqual( Stem("battys"), "batty");});
test("baudelaire -> baudelair", function() {deepEqual( Stem("baudelaire"), "baudelair");});
test("bb -> bb", function() {deepEqual( Stem("bb"), "bb");});
test("bcgrepp -> bcgrepp", function() {deepEqual( Stem("bcgrepp"), "bcgrepp");});
test("bcrg -> bcrg", function() {deepEqual( Stem("bcrg"), "bcrg");});
test("bctt -> bctt", function() {deepEqual( Stem("bctt"), "bctt");});
test("bcvekande -> bcvek", function() {deepEqual( Stem("bcvekande"), "bcvek");});
test("be -> be", function() {deepEqual( Stem("be"), "be");});
test("beandran -> beandran", function() {deepEqual( Stem("beandran"), "beandran");});
test("bearbetades -> bearbet", function() {deepEqual( Stem("bearbetades"), "bearbet");});
test("bearbetning -> bearbetning", function() {deepEqual( Stem("bearbetning"), "bearbetning");});
test("bearbetningen -> bearbetning", function() {deepEqual( Stem("bearbetningen"), "bearbetning");});
test("bearn -> bearn", function() {deepEqual( Stem("bearn"), "bearn");});
test("beau -> beau", function() {deepEqual( Stem("beau"), "beau");});
test("beaune -> beaun", function() {deepEqual( Stem("beaune"), "beaun");});
test("bebag -> bebag", function() {deepEqual( Stem("bebag"), "bebag");});
test("bebandling -> bebandling", function() {deepEqual( Stem("bebandling"), "bebandling");});
test("bebekommer -> bebekomm", function() {deepEqual( Stem("bebekommer"), "bebekomm");});
test("beblandelse -> bebland", function() {deepEqual( Stem("beblandelse"), "bebland");});
test("beblomstra -> beblomstr", function() {deepEqual( Stem("beblomstra"), "beblomstr");});
test("bebodd -> bebod", function() {deepEqual( Stem("bebodd"), "bebod");});
test("beboddes -> bebod", function() {deepEqual( Stem("beboddes"), "bebod");});
test("bebos -> bebo", function() {deepEqual( Stem("bebos"), "bebo");});
test("bebott -> bebot", function() {deepEqual( Stem("bebott"), "bebot");});
test("bebyggare -> bebygg", function() {deepEqual( Stem("bebyggare"), "bebygg");});
test("bebåda -> bebåd", function() {deepEqual( Stem("bebåda"), "bebåd");});
test("bebådat -> bebåd", function() {deepEqual( Stem("bebådat"), "bebåd");});
test("beckiga -> beck", function() {deepEqual( Stem("beckiga"), "beck");});
test("bed -> bed", function() {deepEqual( Stem("bed"), "bed");});
test("bedagad -> bedag", function() {deepEqual( Stem("bedagad"), "bedag");});
test("bedarrat -> bedarr", function() {deepEqual( Stem("bedarrat"), "bedarr");});
test("beder -> bed", function() {deepEqual( Stem("beder"), "bed");});
test("bedit -> bedit", function() {deepEqual( Stem("bedit"), "bedit");});
test("bedja -> bedj", function() {deepEqual( Stem("bedja"), "bedj");});
test("bedjande -> bedj", function() {deepEqual( Stem("bedjande"), "bedj");});
test("bedjen -> bedj", function() {deepEqual( Stem("bedjen"), "bedj");});
test("bedoma -> bedom", function() {deepEqual( Stem("bedoma"), "bedom");});
test("bedraga -> bedrag", function() {deepEqual( Stem("bedraga"), "bedrag");});
test("bedragare -> bedrag", function() {deepEqual( Stem("bedragare"), "bedrag");});
test("bedragen -> bedrag", function() {deepEqual( Stem("bedragen"), "bedrag");});
test("bedrager -> bedrag", function() {deepEqual( Stem("bedrager"), "bedrag");});
test("bedragit -> bedragit", function() {deepEqual( Stem("bedragit"), "bedragit");});
test("bedragna -> bedragn", function() {deepEqual( Stem("bedragna"), "bedragn");});
test("bedragne -> bedragn", function() {deepEqual( Stem("bedragne"), "bedragn");});
test("bedriva -> bedriv", function() {deepEqual( Stem("bedriva"), "bedriv");});
test("bedrives -> bedriv", function() {deepEqual( Stem("bedrives"), "bedriv");});
test("bedrog -> bedrog", function() {deepEqual( Stem("bedrog"), "bedrog");});
test("bedroge -> bedrog", function() {deepEqual( Stem("bedroge"), "bedrog");});
test("bedrogo -> bedrogo", function() {deepEqual( Stem("bedrogo"), "bedrogo");});
test("bedrovligt -> bedrov", function() {deepEqual( Stem("bedrovligt"), "bedrov");});
test("bedrägeri -> bedrägeri", function() {deepEqual( Stem("bedrägeri"), "bedrägeri");});
test("bedrägliga -> bedräg", function() {deepEqual( Stem("bedrägliga"), "bedräg");});
test("bedröfliga -> bedröf", function() {deepEqual( Stem("bedröfliga"), "bedröf");});
test("bedröfva -> bedröfv", function() {deepEqual( Stem("bedröfva"), "bedröfv");});
test("bedröfvad -> bedröfv", function() {deepEqual( Stem("bedröfvad"), "bedröfv");});
test("bedröfvade -> bedröfv", function() {deepEqual( Stem("bedröfvade"), "bedröfv");});
test("bedröfvat -> bedröfv", function() {deepEqual( Stem("bedröfvat"), "bedröfv");});
test("bedröfvelse -> bedröfv", function() {deepEqual( Stem("bedröfvelse"), "bedröfv");});
test("bedröfvelsen -> bedröfv", function() {deepEqual( Stem("bedröfvelsen"), "bedröfv");});
test("bedröfvelsens -> bedröfv", function() {deepEqual( Stem("bedröfvelsens"), "bedröfv");});
test("bedrövad -> bedröv", function() {deepEqual( Stem("bedrövad"), "bedröv");});
test("bedrövade -> bedröv", function() {deepEqual( Stem("bedrövade"), "bedröv");});
test("bedrövas -> bedröv", function() {deepEqual( Stem("bedrövas"), "bedröv");});
test("bedrövelsen -> bedröv", function() {deepEqual( Stem("bedrövelsen"), "bedröv");});
test("bedrövliga -> bedröv", function() {deepEqual( Stem("bedrövliga"), "bedröv");});
test("bedrövligt -> bedröv", function() {deepEqual( Stem("bedrövligt"), "bedröv");});
test("bedt -> bedt", function() {deepEqual( Stem("bedt"), "bedt");});
test("bedyra -> bedyr", function() {deepEqual( Stem("bedyra"), "bedyr");});
test("bedyrade -> bedyr", function() {deepEqual( Stem("bedyrade"), "bedyr");});
test("bedyrar -> bedyr", function() {deepEqual( Stem("bedyrar"), "bedyr");});
test("bedyrat -> bedyr", function() {deepEqual( Stem("bedyrat"), "bedyr");});
test("bedårade -> bedår", function() {deepEqual( Stem("bedårade"), "bedår");});
test("bedöma -> bedöm", function() {deepEqual( Stem("bedöma"), "bedöm");});
test("bedömande -> bedöm", function() {deepEqual( Stem("bedömande"), "bedöm");});
test("bedömer -> bedöm", function() {deepEqual( Stem("bedömer"), "bedöm");});
test("bedömt -> bedömt", function() {deepEqual( Stem("bedömt"), "bedömt");});
test("bedövad -> bedöv", function() {deepEqual( Stem("bedövad"), "bedöv");});
test("bedövas -> bedöv", function() {deepEqual( Stem("bedövas"), "bedöv");});
test("bedövningens -> bedövning", function() {deepEqual( Stem("bedövningens"), "bedövning");});
test("befalde -> befald", function() {deepEqual( Stem("befalde"), "befald");});
test("befaldes -> befald", function() {deepEqual( Stem("befaldes"), "befald");});
test("befalla -> befall", function() {deepEqual( Stem("befalla"), "befall");});
test("befallande -> befall", function() {deepEqual( Stem("befallande"), "befall");});
test("befalld -> befalld", function() {deepEqual( Stem("befalld"), "befalld");});
test("befallde -> befalld", function() {deepEqual( Stem("befallde"), "befalld");});
test("befaller -> befall", function() {deepEqual( Stem("befaller"), "befall");});
test("befalles -> befall", function() {deepEqual( Stem("befalles"), "befall");});
test("befallning -> befallning", function() {deepEqual( Stem("befallning"), "befallning");});
test("befallningar -> befallning", function() {deepEqual( Stem("befallningar"), "befallning");});
test("befallningen -> befallning", function() {deepEqual( Stem("befallningen"), "befallning");});
test("befallningsmannen -> befallningsman", function() {deepEqual( Stem("befallningsmannen"), "befallningsman");});
test("befallningsmannens -> befallningsman", function() {deepEqual( Stem("befallningsmannens"), "befallningsman");});
test("befann -> befan", function() {deepEqual( Stem("befann"), "befan");});
test("befanns -> befan", function() {deepEqual( Stem("befanns"), "befan");});
test("befans -> befan", function() {deepEqual( Stem("befans"), "befan");});
test("befara -> befar", function() {deepEqual( Stem("befara"), "befar");});
test("befarade -> befar", function() {deepEqual( Stem("befarade"), "befar");});
test("befarm -> befarm", function() {deepEqual( Stem("befarm"), "befarm");});
test("befatta -> befat", function() {deepEqual( Stem("befatta"), "befat");});
test("befattar -> befat", function() {deepEqual( Stem("befattar"), "befat");});
test("befattning -> befattning", function() {deepEqual( Stem("befattning"), "befattning");});
test("befattningar -> befattning", function() {deepEqual( Stem("befattningar"), "befattning");});
test("befattningen -> befattning", function() {deepEqual( Stem("befattningen"), "befattning");});
test("befinna -> befin", function() {deepEqual( Stem("befinna"), "befin");});
test("befinner -> befin", function() {deepEqual( Stem("befinner"), "befin");});
test("befinnes -> befin", function() {deepEqual( Stem("befinnes"), "befin");});
test("befolkade -> befolk", function() {deepEqual( Stem("befolkade"), "befolk");});
test("befolkas -> befolk", function() {deepEqual( Stem("befolkas"), "befolk");});
test("befolkning -> befolkning", function() {deepEqual( Stem("befolkning"), "befolkning");});
test("befolkningen -> befolkning", function() {deepEqual( Stem("befolkningen"), "befolkning");});
test("befordran -> befordran", function() {deepEqual( Stem("befordran"), "befordran");});
test("befordrat -> befordr", function() {deepEqual( Stem("befordrat"), "befordr");});
test("befordringar -> befordring", function() {deepEqual( Stem("befordringar"), "befordring");});
test("befria -> befri", function() {deepEqual( Stem("befria"), "befri");});
test("befriad -> befri", function() {deepEqual( Stem("befriad"), "befri");});
test("befriade -> befri", function() {deepEqual( Stem("befriade"), "befri");});
test("befriaren -> befri", function() {deepEqual( Stem("befriaren"), "befri");});
test("befriat -> befri", function() {deepEqual( Stem("befriat"), "befri");});
test("befrielse -> befri", function() {deepEqual( Stem("befrielse"), "befri");});
test("befrielsen -> befri", function() {deepEqual( Stem("befrielsen"), "befri");});
test("befruktade -> befruk", function() {deepEqual( Stem("befruktade"), "befruk");});
test("befruktades -> befruk", function() {deepEqual( Stem("befruktades"), "befruk");});
test("befryndad -> befrynd", function() {deepEqual( Stem("befryndad"), "befrynd");});
test("befrämja -> befrämj", function() {deepEqual( Stem("befrämja"), "befrämj");});
test("befrämjas -> befrämj", function() {deepEqual( Stem("befrämjas"), "befrämj");});
test("befunnit -> befunnit", function() {deepEqual( Stem("befunnit"), "befunnit");});
test("befunno -> befunno", function() {deepEqual( Stem("befunno"), "befunno");});
test("befälet -> befälet", function() {deepEqual( Stem("befälet"), "befälet");});
test("befängd -> befäng", function() {deepEqual( Stem("befängd"), "befäng");});
test("befängda -> befäng", function() {deepEqual( Stem("befängda"), "befäng");});
test("befängt -> befäng", function() {deepEqual( Stem("befängt"), "befäng");});
test("befästa -> befäst", function() {deepEqual( Stem("befästa"), "befäst");});
test("begaf -> begaf", function() {deepEqual( Stem("begaf"), "begaf");});
test("begagna -> begagn", function() {deepEqual( Stem("begagna"), "begagn");});
test("begagnad -> begagn", function() {deepEqual( Stem("begagnad"), "begagn");});
test("begagnade -> begagn", function() {deepEqual( Stem("begagnade"), "begagn");});
test("begagnades -> begagn", function() {deepEqual( Stem("begagnades"), "begagn");});
test("begagnar -> begagn", function() {deepEqual( Stem("begagnar"), "begagn");});
test("begagnas -> begagn", function() {deepEqual( Stem("begagnas"), "begagn");});
test("begagnat -> begagn", function() {deepEqual( Stem("begagnat"), "begagn");});
test("begagnats -> begagnat", function() {deepEqual( Stem("begagnats"), "begagnat");});
test("begart -> begart", function() {deepEqual( Stem("begart"), "begart");});
test("begav -> begav", function() {deepEqual( Stem("begav"), "begav");});
test("begavad -> begav", function() {deepEqual( Stem("begavad"), "begav");});
test("bege -> beg", function() {deepEqual( Stem("bege"), "beg");});
test("begge -> begg", function() {deepEqual( Stem("begge"), "begg");});
test("begges -> begg", function() {deepEqual( Stem("begges"), "begg");});
test("begick -> begick", function() {deepEqual( Stem("begick"), "begick");});
test("begifva -> begifv", function() {deepEqual( Stem("begifva"), "begifv");});
test("begifvenhet -> begifven", function() {deepEqual( Stem("begifvenhet"), "begifven");});
test("begingo -> begingo", function() {deepEqual( Stem("begingo"), "begingo");});
test("begiva -> begiv", function() {deepEqual( Stem("begiva"), "begiv");});
test("begrafva -> begrafv", function() {deepEqual( Stem("begrafva"), "begrafv");});
test("begrafvet -> begrafvet", function() {deepEqual( Stem("begrafvet"), "begrafvet");});
test("begrav -> begrav", function() {deepEqual( Stem("begrav"), "begrav");});
test("begrava -> begrav", function() {deepEqual( Stem("begrava"), "begrav");});
test("begravas -> begrav", function() {deepEqual( Stem("begravas"), "begrav");});
test("begravda -> begravd", function() {deepEqual( Stem("begravda"), "begravd");});
test("begraven -> begrav", function() {deepEqual( Stem("begraven"), "begrav");});
test("begraver -> begrav", function() {deepEqual( Stem("begraver"), "begrav");});
test("begravet -> begravet", function() {deepEqual( Stem("begravet"), "begravet");});
test("begravit -> begravit", function() {deepEqual( Stem("begravit"), "begravit");});
test("begravna -> begravn", function() {deepEqual( Stem("begravna"), "begravn");});
test("begravning -> begravning", function() {deepEqual( Stem("begravning"), "begravning");});
test("begravningar -> begravning", function() {deepEqual( Stem("begravningar"), "begravning");});
test("begravningen -> begravning", function() {deepEqual( Stem("begravningen"), "begravning");});
test("begravningsbyrå -> begravningsbyrå", function() {deepEqual( Stem("begravningsbyrå"), "begravningsbyrå");});
test("begravningskaffe -> begravningskaff", function() {deepEqual( Stem("begravningskaffe"), "begravningskaff");});
test("begrep -> begrep", function() {deepEqual( Stem("begrep"), "begrep");});
test("begrepp -> begrepp", function() {deepEqual( Stem("begrepp"), "begrepp");});
test("begreppen -> begrepp", function() {deepEqual( Stem("begreppen"), "begrepp");});
test("begreppet -> begreppet", function() {deepEqual( Stem("begreppet"), "begreppet");});
test("begreppsförvirring -> begreppsförvirring", function() {deepEqual( Stem("begreppsförvirring"), "begreppsförvirring");});
test("begripa -> begrip", function() {deepEqual( Stem("begripa"), "begrip");});
test("begripas -> begrip", function() {deepEqual( Stem("begripas"), "begrip");});
test("begripe -> begrip", function() {deepEqual( Stem("begripe"), "begrip");});
test("begriper -> begrip", function() {deepEqual( Stem("begriper"), "begrip");});
test("begripet -> begripet", function() {deepEqual( Stem("begripet"), "begripet");});
test("begripit -> begripit", function() {deepEqual( Stem("begripit"), "begripit");});
test("begripliga -> begrip", function() {deepEqual( Stem("begripliga"), "begrip");});
test("begripligt -> begrip", function() {deepEqual( Stem("begripligt"), "begrip");});
test("begrov -> begrov", function() {deepEqual( Stem("begrov"), "begrov");});
test("begrovs -> begrov", function() {deepEqual( Stem("begrovs"), "begrov");});
test("begrunda -> begrund", function() {deepEqual( Stem("begrunda"), "begrund");});
test("begrundade -> begrund", function() {deepEqual( Stem("begrundade"), "begrund");});
test("begrundande -> begrund", function() {deepEqual( Stem("begrundande"), "begrund");});
test("begrundanden -> begrund", function() {deepEqual( Stem("begrundanden"), "begrund");});
test("begrundat -> begrund", function() {deepEqual( Stem("begrundat"), "begrund");});
test("begränsa -> begräns", function() {deepEqual( Stem("begränsa"), "begräns");});
test("begråta -> begråt", function() {deepEqual( Stem("begråta"), "begråt");});
test("begråtit -> begråtit", function() {deepEqual( Stem("begråtit"), "begråtit");});
test("begynna -> begyn", function() {deepEqual( Stem("begynna"), "begyn");});
test("begynnande -> begyn", function() {deepEqual( Stem("begynnande"), "begyn");});
test("begynnelsen -> begynn", function() {deepEqual( Stem("begynnelsen"), "begynn");});
test("begynns -> begyn", function() {deepEqual( Stem("begynns"), "begyn");});
test("begynt -> begynt", function() {deepEqual( Stem("begynt"), "begynt");});
test("begynte -> begynt", function() {deepEqual( Stem("begynte"), "begynt");});
test("begär -> begär", function() {deepEqual( Stem("begär"), "begär");});
test("begära -> begär", function() {deepEqual( Stem("begära"), "begär");});
test("begäran -> begäran", function() {deepEqual( Stem("begäran"), "begäran");});
test("begärda -> begärd", function() {deepEqual( Stem("begärda"), "begärd");});
test("begärde -> begärd", function() {deepEqual( Stem("begärde"), "begärd");});
test("begärelse -> begär", function() {deepEqual( Stem("begärelse"), "begär");});
test("begären -> begär", function() {deepEqual( Stem("begären"), "begär");});
test("begäret -> begäret", function() {deepEqual( Stem("begäret"), "begäret");});
test("begärets -> begäret", function() {deepEqual( Stem("begärets"), "begäret");});
test("begärlighet -> begär", function() {deepEqual( Stem("begärlighet"), "begär");});
test("begärligt -> begär", function() {deepEqual( Stem("begärligt"), "begär");});
test("begärt -> begärt", function() {deepEqual( Stem("begärt"), "begärt");});
test("begå -> begå", function() {deepEqual( Stem("begå"), "begå");});
test("begåfvad -> begåfv", function() {deepEqual( Stem("begåfvad"), "begåfv");});
test("begånget -> begånget", function() {deepEqual( Stem("begånget"), "begånget");});
test("begångna -> begångn", function() {deepEqual( Stem("begångna"), "begångn");});
test("begår -> begår", function() {deepEqual( Stem("begår"), "begår");});
test("begås -> begås", function() {deepEqual( Stem("begås"), "begås");});
test("begått -> begåt", function() {deepEqual( Stem("begått"), "begåt");});
test("begåvad -> begåv", function() {deepEqual( Stem("begåvad"), "begåv");});
test("begåvade -> begåv", function() {deepEqual( Stem("begåvade"), "begåv");});
test("begåvning -> begåvning", function() {deepEqual( Stem("begåvning"), "begåvning");});
test("begåvo -> begåvo", function() {deepEqual( Stem("begåvo"), "begåvo");});
test("behag -> behag", function() {deepEqual( Stem("behag"), "behag");});
test("behaga -> behag", function() {deepEqual( Stem("behaga"), "behag");});
test("behagade -> behag", function() {deepEqual( Stem("behagade"), "behag");});
test("behagar -> behag", function() {deepEqual( Stem("behagar"), "behag");});
test("behagas -> behag", function() {deepEqual( Stem("behagas"), "behag");});
test("behagat -> behag", function() {deepEqual( Stem("behagat"), "behag");});
test("behaget -> behaget", function() {deepEqual( Stem("behaget"), "behaget");});
test("behagfull -> behagfull", function() {deepEqual( Stem("behagfull"), "behagfull");});
test("behaglig -> behag", function() {deepEqual( Stem("behaglig"), "behag");});
test("behagliga -> behag", function() {deepEqual( Stem("behagliga"), "behag");});
test("behagligare -> behag", function() {deepEqual( Stem("behagligare"), "behag");});
test("behagligast -> behag", function() {deepEqual( Stem("behagligast"), "behag");});
test("behagligaste -> behag", function() {deepEqual( Stem("behagligaste"), "behag");});
test("behagligt -> behag", function() {deepEqual( Stem("behagligt"), "behag");});
test("behagsjuk -> behagsjuk", function() {deepEqual( Stem("behagsjuk"), "behagsjuk");});
test("behagsjuka -> behagsjuk", function() {deepEqual( Stem("behagsjuka"), "behagsjuk");});
test("behagsjukan -> behagsjukan", function() {deepEqual( Stem("behagsjukan"), "behagsjukan");});
test("behagsjukans -> behagsjukan", function() {deepEqual( Stem("behagsjukans"), "behagsjukan");});
test("behagsjukas -> behagsjuk", function() {deepEqual( Stem("behagsjukas"), "behagsjuk");});
test("behandla -> behandl", function() {deepEqual( Stem("behandla"), "behandl");});
test("behandlades -> behandl", function() {deepEqual( Stem("behandlades"), "behandl");});
test("behandlas -> behandl", function() {deepEqual( Stem("behandlas"), "behandl");});
test("behandlat -> behandl", function() {deepEqual( Stem("behandlat"), "behandl");});
test("behandling -> behandling", function() {deepEqual( Stem("behandling"), "behandling");});
test("behandlingen -> behandling", function() {deepEqual( Stem("behandlingen"), "behandling");});
test("beherska -> behersk", function() {deepEqual( Stem("beherska"), "behersk");});
test("beherskades -> behersk", function() {deepEqual( Stem("beherskades"), "behersk");});
test("beherskning -> beherskning", function() {deepEqual( Stem("beherskning"), "beherskning");});
test("behjelplig -> behjelp", function() {deepEqual( Stem("behjelplig"), "behjelp");});
test("behjertat -> behjert", function() {deepEqual( Stem("behjertat"), "behjert");});
test("behof -> behof", function() {deepEqual( Stem("behof"), "behof");});
test("behofvet -> behofvet", function() {deepEqual( Stem("behofvet"), "behofvet");});
test("behov -> behov", function() {deepEqual( Stem("behov"), "behov");});
test("behova -> behov", function() {deepEqual( Stem("behova"), "behov");});
test("behovde -> behovd", function() {deepEqual( Stem("behovde"), "behovd");});
test("behoven -> behov", function() {deepEqual( Stem("behoven"), "behov");});
test("behovet -> behovet", function() {deepEqual( Stem("behovet"), "behovet");});
test("behovets -> behovet", function() {deepEqual( Stem("behovets"), "behovet");});
test("behäftad -> behäft", function() {deepEqual( Stem("behäftad"), "behäft");});
test("behäftade -> behäft", function() {deepEqual( Stem("behäftade"), "behäft");});
test("behäftadt -> behäftad", function() {deepEqual( Stem("behäftadt"), "behäftad");});
test("behändig -> behänd", function() {deepEqual( Stem("behändig"), "behänd");});
test("behändiga -> behänd", function() {deepEqual( Stem("behändiga"), "behänd");});
test("behändigt -> behänd", function() {deepEqual( Stem("behändigt"), "behänd");});
test("behärska -> behärsk", function() {deepEqual( Stem("behärska"), "behärsk");});
test("behärskad -> behärsk", function() {deepEqual( Stem("behärskad"), "behärsk");});
test("behärskade -> behärsk", function() {deepEqual( Stem("behärskade"), "behärsk");});
test("behärskat -> behärsk", function() {deepEqual( Stem("behärskat"), "behärsk");});
test("behärskats -> behärskat", function() {deepEqual( Stem("behärskats"), "behärskat");});
test("behärskning -> behärskning", function() {deepEqual( Stem("behärskning"), "behärskning");});
test("behåll -> behåll", function() {deepEqual( Stem("behåll"), "behåll");});
test("behålla -> behåll", function() {deepEqual( Stem("behålla"), "behåll");});
test("behåller -> behåll", function() {deepEqual( Stem("behåller"), "behåll");});
test("behöfde -> behöfd", function() {deepEqual( Stem("behöfde"), "behöfd");});
test("behöfdes -> behöfd", function() {deepEqual( Stem("behöfdes"), "behöfd");});
test("behöfligt -> behöf", function() {deepEqual( Stem("behöfligt"), "behöf");});
test("behöfs -> behöf", function() {deepEqual( Stem("behöfs"), "behöf");});
test("behöft -> behöft", function() {deepEqual( Stem("behöft"), "behöft");});
test("behöfva -> behöfv", function() {deepEqual( Stem("behöfva"), "behöfv");});
test("behöfvas -> behöfv", function() {deepEqual( Stem("behöfvas"), "behöfv");});
test("behöfver -> behöfv", function() {deepEqual( Stem("behöfver"), "behöfv");});
test("behöll -> behöll", function() {deepEqual( Stem("behöll"), "behöll");});
test("behölle -> behöll", function() {deepEqual( Stem("behölle"), "behöll");});
test("behöllo -> behöllo", function() {deepEqual( Stem("behöllo"), "behöllo");});
test("behörig -> behör", function() {deepEqual( Stem("behörig"), "behör");});
test("behörigen -> behör", function() {deepEqual( Stem("behörigen"), "behör");});
test("behöva -> behöv", function() {deepEqual( Stem("behöva"), "behöv");});
test("behövas -> behöv", function() {deepEqual( Stem("behövas"), "behöv");});
test("behövdc -> behövdc", function() {deepEqual( Stem("behövdc"), "behövdc");});
test("behövde -> behövd", function() {deepEqual( Stem("behövde"), "behövd");});
test("behövdes -> behövd", function() {deepEqual( Stem("behövdes"), "behövd");});
test("behöver -> behöv", function() {deepEqual( Stem("behöver"), "behöv");});
test("behövs -> behöv", function() {deepEqual( Stem("behövs"), "behöv");});
test("behövt -> behövt", function() {deepEqual( Stem("behövt"), "behövt");});
test("bekant -> bekant", function() {deepEqual( Stem("bekant"), "bekant");});
test("bekanta -> bekant", function() {deepEqual( Stem("bekanta"), "bekant");});
test("bekantas -> bekant", function() {deepEqual( Stem("bekantas"), "bekant");});
test("bekante -> bekant", function() {deepEqual( Stem("bekante"), "bekant");});
test("bekants -> bekant", function() {deepEqual( Stem("bekants"), "bekant");});
test("bekantskap -> bekantskap", function() {deepEqual( Stem("bekantskap"), "bekantskap");});
test("bekantskapen -> bekantskap", function() {deepEqual( Stem("bekantskapen"), "bekantskap");});
test("bekantskaper -> bekantskap", function() {deepEqual( Stem("bekantskaper"), "bekantskap");});
test("bekantskaperna -> bekantskap", function() {deepEqual( Stem("bekantskaperna"), "bekantskap");});
test("bekantskapers -> bekantskaper", function() {deepEqual( Stem("bekantskapers"), "bekantskaper");});
test("bekantsskap -> bekantsskap", function() {deepEqual( Stem("bekantsskap"), "bekantsskap");});
test("beklaga -> beklag", function() {deepEqual( Stem("beklaga"), "beklag");});
test("beklagade -> beklag", function() {deepEqual( Stem("beklagade"), "beklag");});
test("beklagande -> beklag", function() {deepEqual( Stem("beklagande"), "beklag");});
test("beklagansvärda -> beklagansvärd", function() {deepEqual( Stem("beklagansvärda"), "beklagansvärd");});
test("beklagansvärde -> beklagansvärd", function() {deepEqual( Stem("beklagansvärde"), "beklagansvärd");});
test("beklagansvärt -> beklagansvärt", function() {deepEqual( Stem("beklagansvärt"), "beklagansvärt");});
test("beklagar -> beklag", function() {deepEqual( Stem("beklagar"), "beklag");});
test("beklagarlsvärd -> beklagarlsvärd", function() {deepEqual( Stem("beklagarlsvärd"), "beklagarlsvärd");});
test("beklagat -> beklag", function() {deepEqual( Stem("beklagat"), "beklag");});
test("beklädd -> bekläd", function() {deepEqual( Stem("beklädd"), "bekläd");});
test("beklämd -> beklämd", function() {deepEqual( Stem("beklämd"), "beklämd");});
test("beklämdhet -> beklämd", function() {deepEqual( Stem("beklämdhet"), "beklämd");});
test("beklämmande -> beklämm", function() {deepEqual( Stem("beklämmande"), "beklämm");});
test("beklämning -> beklämning", function() {deepEqual( Stem("beklämning"), "beklämning");});
test("bekom -> bekom", function() {deepEqual( Stem("bekom"), "bekom");});
test("bekomma -> bekomm", function() {deepEqual( Stem("bekomma"), "bekomm");});
test("bekommer -> bekomm", function() {deepEqual( Stem("bekommer"), "bekomm");});
test("bekommit -> bekommit", function() {deepEqual( Stem("bekommit"), "bekommit");});
test("bekostnad -> bekostn", function() {deepEqual( Stem("bekostnad"), "bekostn");});
test("bekräfta -> bekräft", function() {deepEqual( Stem("bekräfta"), "bekräft");});
test("bekräftar -> bekräft", function() {deepEqual( Stem("bekräftar"), "bekräft");});
test("bekräftas -> bekräft", function() {deepEqual( Stem("bekräftas"), "bekräft");});
test("bekräftat -> bekräft", function() {deepEqual( Stem("bekräftat"), "bekräft");});
test("bekräftelse -> bekräft", function() {deepEqual( Stem("bekräftelse"), "bekräft");});
test("bekröner -> bekrön", function() {deepEqual( Stem("bekröner"), "bekrön");});
test("bekväm -> bekväm", function() {deepEqual( Stem("bekväm"), "bekväm");});
test("bekväma -> bekväm", function() {deepEqual( Stem("bekväma"), "bekväm");});
test("bekvämaste -> bekväm", function() {deepEqual( Stem("bekvämaste"), "bekväm");});
test("bekvämde -> bekvämd", function() {deepEqual( Stem("bekvämde"), "bekvämd");});
test("bekvämlighet -> bekväm", function() {deepEqual( Stem("bekvämlighet"), "bekväm");});
test("bekvämlighetsinrättningarnas -> bekvämlighetsinrättning", function() {deepEqual( Stem("bekvämlighetsinrättningarnas"), "bekvämlighetsinrättning");});
test("bekvämt -> bekvämt", function() {deepEqual( Stem("bekvämt"), "bekvämt");});
test("bekvänlligheter -> bekvänl", function() {deepEqual( Stem("bekvänlligheter"), "bekvänl");});
test("bekymmer -> bekymm", function() {deepEqual( Stem("bekymmer"), "bekymm");});
test("bekymmersam -> bekymmersam", function() {deepEqual( Stem("bekymmersam"), "bekymmersam");});
test("bekymmersamma -> bekymmersamm", function() {deepEqual( Stem("bekymmersamma"), "bekymmersamm");});
test("bekymmerslösa -> bekymmerslös", function() {deepEqual( Stem("bekymmerslösa"), "bekymmerslös");});
test("bekymmerslösheten -> bekymmerslös", function() {deepEqual( Stem("bekymmerslösheten"), "bekymmerslös");});
test("bekymra -> bekymr", function() {deepEqual( Stem("bekymra"), "bekymr");});
test("bekymrad -> bekymr", function() {deepEqual( Stem("bekymrad"), "bekymr");});
test("bekymrade -> bekymr", function() {deepEqual( Stem("bekymrade"), "bekymr");});
test("bekymrar -> bekymr", function() {deepEqual( Stem("bekymrar"), "bekymr");});
test("bekymrat -> bekymr", function() {deepEqual( Stem("bekymrat"), "bekymr");});
test("bekymren -> bekymr", function() {deepEqual( Stem("bekymren"), "bekymr");});
test("bekymret -> bekymret", function() {deepEqual( Stem("bekymret"), "bekymret");});
test("bekämpa -> bekämp", function() {deepEqual( Stem("bekämpa"), "bekämp");});
test("bekämpande -> bekämp", function() {deepEqual( Stem("bekämpande"), "bekämp");});
test("bekände -> bekänd", function() {deepEqual( Stem("bekände"), "bekänd");});
test("bekänn -> bekän", function() {deepEqual( Stem("bekänn"), "bekän");});
test("bekänna -> bekän", function() {deepEqual( Stem("bekänna"), "bekän");});
test("bekännare -> bekän", function() {deepEqual( Stem("bekännare"), "bekän");});
test("bekännelse -> bekänn", function() {deepEqual( Stem("bekännelse"), "bekänn");});
test("bekännelsen -> bekänn", function() {deepEqual( Stem("bekännelsen"), "bekänn");});
test("bekänner -> bekän", function() {deepEqual( Stem("bekänner"), "bekän");});
test("belagd -> belag", function() {deepEqual( Stem("belagd"), "belag");});
test("belagda -> belag", function() {deepEqual( Stem("belagda"), "belag");});
test("beledsagade -> beledsag", function() {deepEqual( Stem("beledsagade"), "beledsag");});
test("belefvad -> belefv", function() {deepEqual( Stem("belefvad"), "belefv");});
test("beler -> bel", function() {deepEqual( Stem("beler"), "bel");});
test("bell -> bell", function() {deepEqual( Stem("bell"), "bell");});
test("bellmans -> bellman", function() {deepEqual( Stem("bellmans"), "bellman");});
test("bellona -> bellon", function() {deepEqual( Stem("bellona"), "bellon");});
test("bells -> bell", function() {deepEqual( Stem("bells"), "bell");});
test("belopp -> belopp", function() {deepEqual( Stem("belopp"), "belopp");});
test("beloppet -> beloppet", function() {deepEqual( Stem("beloppet"), "beloppet");});
test("belsasars -> belsasar", function() {deepEqual( Stem("belsasars"), "belsasar");});
test("belt -> belt", function() {deepEqual( Stem("belt"), "belt");});
test("belysa -> belys", function() {deepEqual( Stem("belysa"), "belys");});
test("belysning -> belysning", function() {deepEqual( Stem("belysning"), "belysning");});
test("belysningen -> belysning", function() {deepEqual( Stem("belysningen"), "belysning");});
test("belyst -> belyst", function() {deepEqual( Stem("belyst"), "belyst");});
test("belysta -> belyst", function() {deepEqual( Stem("belysta"), "belyst");});
test("belystes -> belyst", function() {deepEqual( Stem("belystes"), "belyst");});
test("belägen -> beläg", function() {deepEqual( Stem("belägen"), "beläg");});
test("belägenhet -> belägen", function() {deepEqual( Stem("belägenhet"), "belägen");});
test("belägg -> belägg", function() {deepEqual( Stem("belägg"), "belägg");});
test("belägna -> belägn", function() {deepEqual( Stem("belägna"), "belägn");});
test("belägrades -> belägr", function() {deepEqual( Stem("belägrades"), "belägr");});
test("belägrat -> belägr", function() {deepEqual( Stem("belägrat"), "belägr");});
test("belåten -> belåt", function() {deepEqual( Stem("belåten"), "belåt");});
test("belåtenhet -> belåten", function() {deepEqual( Stem("belåtenhet"), "belåten");});
test("belåtet -> belåtet", function() {deepEqual( Stem("belåtet"), "belåtet");});
test("belåtna -> belåtn", function() {deepEqual( Stem("belåtna"), "belåtn");});
test("belåtnare -> belåtn", function() {deepEqual( Stem("belåtnare"), "belåtn");});
test("belåtnaste -> belåtn", function() {deepEqual( Stem("belåtnaste"), "belåtn");});
test("belöna -> belön", function() {deepEqual( Stem("belöna"), "belön");});
test("belönade -> belön", function() {deepEqual( Stem("belönade"), "belön");});
test("belönades -> belön", function() {deepEqual( Stem("belönades"), "belön");});
test("belöning -> belöning", function() {deepEqual( Stem("belöning"), "belöning");});
test("belöningen -> belöning", function() {deepEqual( Stem("belöningen"), "belöning");});
test("bem -> bem", function() {deepEqual( Stem("bem"), "bem");});
test("bemantla -> bemantl", function() {deepEqual( Stem("bemantla"), "bemantl");});
test("bemedlade -> bemedl", function() {deepEqual( Stem("bemedlade"), "bemedl");});
test("bemma -> bemm", function() {deepEqual( Stem("bemma"), "bemm");});
test("bemägtigade -> bemägt", function() {deepEqual( Stem("bemägtigade"), "bemägt");});
test("bemägtigat -> bemägt", function() {deepEqual( Stem("bemägtigat"), "bemägt");});
test("bemäktiga -> bemäkt", function() {deepEqual( Stem("bemäktiga"), "bemäkt");});
test("bemälte -> bemält", function() {deepEqual( Stem("bemälte"), "bemält");});
test("bemärka -> bemärk", function() {deepEqual( Stem("bemärka"), "bemärk");});
test("bemärkelse -> bemärk", function() {deepEqual( Stem("bemärkelse"), "bemärk");});
test("bemärkelsedagar -> bemärkelsedag", function() {deepEqual( Stem("bemärkelsedagar"), "bemärkelsedag");});
test("bemärkt -> bemärk", function() {deepEqual( Stem("bemärkt"), "bemärk");});
test("bemärkte -> bemärk", function() {deepEqual( Stem("bemärkte"), "bemärk");});
test("bemärktes -> bemärk", function() {deepEqual( Stem("bemärktes"), "bemärk");});
test("bemöda -> bemöd", function() {deepEqual( Stem("bemöda"), "bemöd");});
test("bemödade -> bemöd", function() {deepEqual( Stem("bemödade"), "bemöd");});
test("bemödande -> bemöd", function() {deepEqual( Stem("bemödande"), "bemöd");});
test("bemödanden -> bemöd", function() {deepEqual( Stem("bemödanden"), "bemöd");});
test("bemödandet -> bemöd", function() {deepEqual( Stem("bemödandet"), "bemöd");});
test("bemödat -> bemöd", function() {deepEqual( Stem("bemödat"), "bemöd");});
test("bemöta -> bemöt", function() {deepEqual( Stem("bemöta"), "bemöt");});
test("bemötande -> bemöt", function() {deepEqual( Stem("bemötande"), "bemöt");});
test("bemötas -> bemöt", function() {deepEqual( Stem("bemötas"), "bemöt");});
test("bemöter -> bemöt", function() {deepEqual( Stem("bemöter"), "bemöt");});
test("bemött -> bemöt", function() {deepEqual( Stem("bemött"), "bemöt");});
test("bemötte -> bemöt", function() {deepEqual( Stem("bemötte"), "bemöt");});
test("bemöttes -> bemöt", function() {deepEqual( Stem("bemöttes"), "bemöt");});
test("ben -> ben", function() {deepEqual( Stem("ben"), "ben");});
test("bena -> ben", function() {deepEqual( Stem("bena"), "ben");});
test("benade -> ben", function() {deepEqual( Stem("benade"), "ben");});
test("benat -> ben", function() {deepEqual( Stem("benat"), "ben");});
test("bene -> ben", function() {deepEqual( Stem("bene"), "ben");});
test("benedia -> benedi", function() {deepEqual( Stem("benedia"), "benedi");});
test("benen -> ben", function() {deepEqual( Stem("benen"), "ben");});
test("benet -> benet", function() {deepEqual( Stem("benet"), "benet");});
test("benkläder -> benkläd", function() {deepEqual( Stem("benkläder"), "benkläd");});
test("benne -> benn", function() {deepEqual( Stem("benne"), "benn");});
test("bennes -> benn", function() {deepEqual( Stem("bennes"), "benn");});
test("benno -> benno", function() {deepEqual( Stem("benno"), "benno");});
test("benägen -> benäg", function() {deepEqual( Stem("benägen"), "benäg");});
test("benäget -> benäget", function() {deepEqual( Stem("benäget"), "benäget");});
test("benämna -> benämn", function() {deepEqual( Stem("benämna"), "benämn");});
test("benämnas -> benämn", function() {deepEqual( Stem("benämnas"), "benämn");});
test("benämnde -> benämnd", function() {deepEqual( Stem("benämnde"), "benämnd");});
test("benämndes -> benämnd", function() {deepEqual( Stem("benämndes"), "benämnd");});
test("benämner -> benämn", function() {deepEqual( Stem("benämner"), "benämn");});
test("benämnes -> benämn", function() {deepEqual( Stem("benämnes"), "benämn");});
test("benämning -> benämning", function() {deepEqual( Stem("benämning"), "benämning");});
test("benämningen -> benämning", function() {deepEqual( Stem("benämningen"), "benämning");});
test("benådad -> benåd", function() {deepEqual( Stem("benådad"), "benåd");});
test("benådade -> benåd", function() {deepEqual( Stem("benådade"), "benåd");});
test("benådande -> benåd", function() {deepEqual( Stem("benådande"), "benåd");});
test("beprisade -> bepris", function() {deepEqual( Stem("beprisade"), "bepris");});
test("bepröfvade -> bepröfv", function() {deepEqual( Stem("bepröfvade"), "bepröfv");});
test("bepröfvelser -> bepröfv", function() {deepEqual( Stem("bepröfvelser"), "bepröfv");});
test("beprövad -> bepröv", function() {deepEqual( Stem("beprövad"), "bepröv");});
test("beqvämare -> beqväm", function() {deepEqual( Stem("beqvämare"), "beqväm");});
test("beqvämlighet -> beqväm", function() {deepEqual( Stem("beqvämlighet"), "beqväm");});
test("beqvämligheter -> beqväm", function() {deepEqual( Stem("beqvämligheter"), "beqväm");});
test("beqvämt -> beqvämt", function() {deepEqual( Stem("beqvämt"), "beqvämt");});
test("ber -> ber", function() {deepEqual( Stem("ber"), "ber");});
test("bereda -> bered", function() {deepEqual( Stem("bereda"), "bered");});
test("beredd -> bered", function() {deepEqual( Stem("beredd"), "bered");});
test("beredda -> bered", function() {deepEqual( Stem("beredda"), "bered");});
test("beredde -> bered", function() {deepEqual( Stem("beredde"), "bered");});
test("bereddes -> bered", function() {deepEqual( Stem("bereddes"), "bered");});
test("beredskap -> beredskap", function() {deepEqual( Stem("beredskap"), "beredskap");});
test("beredt -> bered", function() {deepEqual( Stem("beredt"), "bered");});
test("beredvillighet -> beredvil", function() {deepEqual( Stem("beredvillighet"), "beredvil");});
test("beredvilligt -> beredvil", function() {deepEqual( Stem("beredvilligt"), "beredvil");});
test("berest -> berest", function() {deepEqual( Stem("berest"), "berest");});
test("berett -> beret", function() {deepEqual( Stem("berett"), "beret");});
test("berg -> berg", function() {deepEqual( Stem("berg"), "berg");});
test("berga -> berg", function() {deepEqual( Stem("berga"), "berg");});
test("bergad -> berg", function() {deepEqual( Stem("bergad"), "berg");});
test("bergar -> berg", function() {deepEqual( Stem("bergar"), "berg");});
test("bergen -> berg", function() {deepEqual( Stem("bergen"), "berg");});
test("bergena -> bergen", function() {deepEqual( Stem("bergena"), "bergen");});
test("bergens -> berg", function() {deepEqual( Stem("bergens"), "berg");});
test("berget -> berget", function() {deepEqual( Stem("berget"), "berget");});
test("bergets -> berget", function() {deepEqual( Stem("bergets"), "berget");});
test("berghäll -> berghäll", function() {deepEqual( Stem("berghäll"), "berghäll");});
test("berghällen -> berghäll", function() {deepEqual( Stem("berghällen"), "berghäll");});
test("bergknallar -> bergknall", function() {deepEqual( Stem("bergknallar"), "bergknall");});
test("bergman -> bergman", function() {deepEqual( Stem("bergman"), "bergman");});
test("bergning -> bergning", function() {deepEqual( Stem("bergning"), "bergning");});
test("bergshäll -> bergshäll", function() {deepEqual( Stem("bergshäll"), "bergshäll");});
test("bergshällen -> bergshäll", function() {deepEqual( Stem("bergshällen"), "bergshäll");});
test("bergsmanstapet -> bergsmanstapet", function() {deepEqual( Stem("bergsmanstapet"), "bergsmanstapet");});
test("bergsprängningen -> bergsprängning", function() {deepEqual( Stem("bergsprängningen"), "bergsprängning");});
test("bergsspetsen -> bergsspets", function() {deepEqual( Stem("bergsspetsen"), "bergsspets");});
test("bergtroll -> bergtroll", function() {deepEqual( Stem("bergtroll"), "bergtroll");});
test("bergväggen -> bergvägg", function() {deepEqual( Stem("bergväggen"), "bergvägg");});
test("bernard -> bernard", function() {deepEqual( Stem("bernard"), "bernard");});
test("bernards -> bernard", function() {deepEqual( Stem("bernards"), "bernard");});
test("berns -> bern", function() {deepEqual( Stem("berns"), "bern");});
test("bero -> bero", function() {deepEqual( Stem("bero"), "bero");});
test("berodde -> berod", function() {deepEqual( Stem("berodde"), "berod");});
test("beroende -> beroend", function() {deepEqual( Stem("beroende"), "beroend");});
test("beror -> ber", function() {deepEqual( Stem("beror"), "ber");});
test("bert -> bert", function() {deepEqual( Stem("bert"), "bert");});
test("berusande -> berus", function() {deepEqual( Stem("berusande"), "berus");});
test("berusat -> berus", function() {deepEqual( Stem("berusat"), "berus");});
test("berusning -> berusning", function() {deepEqual( Stem("berusning"), "berusning");});
test("beryktade -> beryk", function() {deepEqual( Stem("beryktade"), "beryk");});
test("beryktat -> beryk", function() {deepEqual( Stem("beryktat"), "beryk");});
test("beräkna -> beräkn", function() {deepEqual( Stem("beräkna"), "beräkn");});
test("beräknad -> beräkn", function() {deepEqual( Stem("beräknad"), "beräkn");});
test("beräknade -> beräkn", function() {deepEqual( Stem("beräknade"), "beräkn");});
test("beräknat -> beräkn", function() {deepEqual( Stem("beräknat"), "beräkn");});
test("beräkning -> beräkning", function() {deepEqual( Stem("beräkning"), "beräkning");});
test("beräkningar -> beräkning", function() {deepEqual( Stem("beräkningar"), "beräkning");});
test("beräkningarnes -> beräkningarn", function() {deepEqual( Stem("beräkningarnes"), "beräkningarn");});
test("berätta -> berät", function() {deepEqual( Stem("berätta"), "berät");});
test("berättade -> berät", function() {deepEqual( Stem("berättade"), "berät");});
test("berättades -> berät", function() {deepEqual( Stem("berättades"), "berät");});
test("berättandes -> berät", function() {deepEqual( Stem("berättandes"), "berät");});
test("berättar -> berät", function() {deepEqual( Stem("berättar"), "berät");});
test("berättas -> berät", function() {deepEqual( Stem("berättas"), "berät");});
test("berättat -> berät", function() {deepEqual( Stem("berättat"), "berät");});
test("berättats -> berättat", function() {deepEqual( Stem("berättats"), "berättat");});
test("berättelse -> berätt", function() {deepEqual( Stem("berättelse"), "berätt");});
test("berättelsen -> berätt", function() {deepEqual( Stem("berättelsen"), "berätt");});
test("berättelser -> berätt", function() {deepEqual( Stem("berättelser"), "berätt");});
test("berättigad -> berätt", function() {deepEqual( Stem("berättigad"), "berätt");});
test("berättigat -> berätt", function() {deepEqual( Stem("berättigat"), "berätt");});
test("beröfva -> beröfv", function() {deepEqual( Stem("beröfva"), "beröfv");});
test("beröfvade -> beröfv", function() {deepEqual( Stem("beröfvade"), "beröfv");});
test("beröm -> beröm", function() {deepEqual( Stem("beröm"), "beröm");});
test("berömd -> berömd", function() {deepEqual( Stem("berömd"), "berömd");});
test("berömda -> berömd", function() {deepEqual( Stem("berömda"), "berömd");});
test("berömde -> berömd", function() {deepEqual( Stem("berömde"), "berömd");});
test("berömdes -> berömd", function() {deepEqual( Stem("berömdes"), "berömd");});
test("berömdheterna -> berömd", function() {deepEqual( Stem("berömdheterna"), "berömd");});
test("berömlig -> beröm", function() {deepEqual( Stem("berömlig"), "beröm");});
test("berömma -> berömm", function() {deepEqual( Stem("berömma"), "berömm");});
test("berömmande -> berömm", function() {deepEqual( Stem("berömmande"), "berömm");});
test("berömmas -> berömm", function() {deepEqual( Stem("berömmas"), "berömm");});
test("berömmer -> berömm", function() {deepEqual( Stem("berömmer"), "berömm");});
test("berömvärd -> berömvärd", function() {deepEqual( Stem("berömvärd"), "berömvärd");});
test("berömvärt -> berömvärt", function() {deepEqual( Stem("berömvärt"), "berömvärt");});
test("beröra -> berör", function() {deepEqual( Stem("beröra"), "berör");});
test("berörd -> berörd", function() {deepEqual( Stem("berörd"), "berörd");});
test("berörda -> berörd", function() {deepEqual( Stem("berörda"), "berörd");});
test("berörde -> berörd", function() {deepEqual( Stem("berörde"), "berörd");});
test("berördes -> berörd", function() {deepEqual( Stem("berördes"), "berörd");});
test("beröring -> beröring", function() {deepEqual( Stem("beröring"), "beröring");});
test("beröringen -> beröring", function() {deepEqual( Stem("beröringen"), "beröring");});
test("beröringspunkt -> beröringspunk", function() {deepEqual( Stem("beröringspunkt"), "beröringspunk");});
test("berört -> berört", function() {deepEqual( Stem("berört"), "berört");});
test("berövad -> beröv", function() {deepEqual( Stem("berövad"), "beröv");});
test("berövade -> beröv", function() {deepEqual( Stem("berövade"), "beröv");});
test("besagde -> besag", function() {deepEqual( Stem("besagde"), "besag");});
test("besannade -> besan", function() {deepEqual( Stem("besannade"), "besan");});
test("besatt -> besat", function() {deepEqual( Stem("besatt"), "besat");});
test("besatta -> besat", function() {deepEqual( Stem("besatta"), "besat");});
test("bese -> bes", function() {deepEqual( Stem("bese"), "bes");});
test("besegra -> besegr", function() {deepEqual( Stem("besegra"), "besegr");});
test("besegrade -> besegr", function() {deepEqual( Stem("besegrade"), "besegr");});
test("besegras -> besegr", function() {deepEqual( Stem("besegras"), "besegr");});
test("besiktigande -> besikt", function() {deepEqual( Stem("besiktigande"), "besikt");});
test("besinming -> besinming", function() {deepEqual( Stem("besinming"), "besinming");});
test("besinna -> besin", function() {deepEqual( Stem("besinna"), "besin");});
test("besinnade -> besin", function() {deepEqual( Stem("besinnade"), "besin");});
test("besinnar -> besin", function() {deepEqual( Stem("besinnar"), "besin");});
test("besinnat -> besin", function() {deepEqual( Stem("besinnat"), "besin");});
test("besinning -> besinning", function() {deepEqual( Stem("besinning"), "besinning");});
test("besinningstid -> besinningstid", function() {deepEqual( Stem("besinningstid"), "besinningstid");});
test("besitta -> besit", function() {deepEqual( Stem("besitta"), "besit");});
test("besitter -> besit", function() {deepEqual( Stem("besitter"), "besit");});
test("besittning -> besittning", function() {deepEqual( Stem("besittning"), "besittning");});
test("besittnutg -> besittnutg", function() {deepEqual( Stem("besittnutg"), "besittnutg");});
test("besjungen -> besjung", function() {deepEqual( Stem("besjungen"), "besjung");});
test("beska -> besk", function() {deepEqual( Stem("beska"), "besk");});
test("beskaffad -> beskaff", function() {deepEqual( Stem("beskaffad"), "beskaff");});
test("beskaffenhet -> beskaffen", function() {deepEqual( Stem("beskaffenhet"), "beskaffen");});
test("beskaffenheten -> beskaffen", function() {deepEqual( Stem("beskaffenheten"), "beskaffen");});
test("besked -> besked", function() {deepEqual( Stem("besked"), "besked");});
test("beskedet -> beskedet", function() {deepEqual( Stem("beskedet"), "beskedet");});
test("beskedlig -> besked", function() {deepEqual( Stem("beskedlig"), "besked");});
test("beskedliga -> besked", function() {deepEqual( Stem("beskedliga"), "besked");});
test("beskedlige -> besked", function() {deepEqual( Stem("beskedlige"), "besked");});
test("beskedlighet -> besked", function() {deepEqual( Stem("beskedlighet"), "besked");});
test("beskedligt -> besked", function() {deepEqual( Stem("beskedligt"), "besked");});
test("beskickning -> beskickning", function() {deepEqual( Stem("beskickning"), "beskickning");});
test("beskickningen -> beskickning", function() {deepEqual( Stem("beskickningen"), "beskickning");});
test("beskref -> beskref", function() {deepEqual( Stem("beskref"), "beskref");});
test("beskrev -> beskrev", function() {deepEqual( Stem("beskrev"), "beskrev");});
test("beskrevo -> beskrevo", function() {deepEqual( Stem("beskrevo"), "beskrevo");});
test("beskrifning -> beskrifning", function() {deepEqual( Stem("beskrifning"), "beskrifning");});
test("beskrifningen -> beskrifning", function() {deepEqual( Stem("beskrifningen"), "beskrifning");});
test("beskrifva -> beskrifv", function() {deepEqual( Stem("beskrifva"), "beskrifv");});
test("beskrifver -> beskrifv", function() {deepEqual( Stem("beskrifver"), "beskrifv");});
test("beskrifvit -> beskrifvit", function() {deepEqual( Stem("beskrifvit"), "beskrifvit");});
test("beskriva -> beskriv", function() {deepEqual( Stem("beskriva"), "beskriv");});
test("beskrivit -> beskrivit", function() {deepEqual( Stem("beskrivit"), "beskrivit");});
test("beskrivna -> beskrivn", function() {deepEqual( Stem("beskrivna"), "beskrivn");});
test("beskrivning -> beskrivning", function() {deepEqual( Stem("beskrivning"), "beskrivning");});
test("beskrivningar -> beskrivning", function() {deepEqual( Stem("beskrivningar"), "beskrivning");});
test("beskt -> besk", function() {deepEqual( Stem("beskt"), "besk");});
test("beskuggades -> beskugg", function() {deepEqual( Stem("beskuggades"), "beskugg");});
test("beskydd -> beskyd", function() {deepEqual( Stem("beskydd"), "beskyd");});
test("beskyddande -> beskyd", function() {deepEqual( Stem("beskyddande"), "beskyd");});
test("beskyddare -> beskyd", function() {deepEqual( Stem("beskyddare"), "beskyd");});
test("beskyddares -> beskyddar", function() {deepEqual( Stem("beskyddares"), "beskyddar");});
test("beskyddarinna -> beskyddarin", function() {deepEqual( Stem("beskyddarinna"), "beskyddarin");});
test("beskyllning -> beskyllning", function() {deepEqual( Stem("beskyllning"), "beskyllning");});
test("beskyllningar -> beskyllning", function() {deepEqual( Stem("beskyllningar"), "beskyllning");});
test("beskyllningen -> beskyllning", function() {deepEqual( Stem("beskyllningen"), "beskyllning");});
test("beskäftig -> beskäft", function() {deepEqual( Stem("beskäftig"), "beskäft");});
test("beskäftigt -> beskäft", function() {deepEqual( Stem("beskäftigt"), "beskäft");});
test("beskärd -> beskärd", function() {deepEqual( Stem("beskärd"), "beskärd");});
test("beskåda -> beskåd", function() {deepEqual( Stem("beskåda"), "beskåd");});
test("beslag -> beslag", function() {deepEqual( Stem("beslag"), "beslag");});
test("beslaget -> beslaget", function() {deepEqual( Stem("beslaget"), "beslaget");});
test("beslut -> beslut", function() {deepEqual( Stem("beslut"), "beslut");});
test("besluta -> beslut", function() {deepEqual( Stem("besluta"), "beslut");});
test("beslutar -> beslut", function() {deepEqual( Stem("beslutar"), "beslut");});
test("beslutas -> beslut", function() {deepEqual( Stem("beslutas"), "beslut");});
test("beslutat -> beslut", function() {deepEqual( Stem("beslutat"), "beslut");});
test("besluten -> beslut", function() {deepEqual( Stem("besluten"), "beslut");});
test("beslutet -> beslutet", function() {deepEqual( Stem("beslutet"), "beslutet");});
test("beslutit -> beslutit", function() {deepEqual( Stem("beslutit"), "beslutit");});
test("beslutsam -> beslutsam", function() {deepEqual( Stem("beslutsam"), "beslutsam");});
test("beslutsamhet -> beslutsam", function() {deepEqual( Stem("beslutsamhet"), "beslutsam");});
test("beslutsamma -> beslutsamm", function() {deepEqual( Stem("beslutsamma"), "beslutsamm");});
test("besläktade -> besläk", function() {deepEqual( Stem("besläktade"), "besläk");});
test("beslöjad -> beslöj", function() {deepEqual( Stem("beslöjad"), "beslöj");});
test("beslöjade -> beslöj", function() {deepEqual( Stem("beslöjade"), "beslöj");});
test("beslöt -> beslöt", function() {deepEqual( Stem("beslöt"), "beslöt");});
test("beslöto -> beslöto", function() {deepEqual( Stem("beslöto"), "beslöto");});
test("bespara -> bespar", function() {deepEqual( Stem("bespara"), "bespar");});
test("besparades -> bespar", function() {deepEqual( Stem("besparades"), "bespar");});
test("besparar -> bespar", function() {deepEqual( Stem("besparar"), "bespar");});
test("bess -> bess", function() {deepEqual( Stem("bess"), "bess");});
test("best -> best", function() {deepEqual( Stem("best"), "best");});
test("besten -> best", function() {deepEqual( Stem("besten"), "best");});
test("bestjäla -> bestjäl", function() {deepEqual( Stem("bestjäla"), "bestjäl");});
test("bestod -> bestod", function() {deepEqual( Stem("bestod"), "bestod");});
test("bestodo -> bestodo", function() {deepEqual( Stem("bestodo"), "bestodo");});
test("bestraffa -> bestraff", function() {deepEqual( Stem("bestraffa"), "bestraff");});
test("bestrida -> bestrid", function() {deepEqual( Stem("bestrida"), "bestrid");});
test("bestridande -> bestrid", function() {deepEqual( Stem("bestridande"), "bestrid");});
test("beströ -> beströ", function() {deepEqual( Stem("beströ"), "beströ");});
test("bestyr -> bestyr", function() {deepEqual( Stem("bestyr"), "bestyr");});
test("bestyra -> bestyr", function() {deepEqual( Stem("bestyra"), "bestyr");});
test("bestyret -> bestyret", function() {deepEqual( Stem("bestyret"), "bestyret");});
test("bestyrkt -> bestyrk", function() {deepEqual( Stem("bestyrkt"), "bestyrk");});
test("beställa -> beställ", function() {deepEqual( Stem("beställa"), "beställ");});
test("beställd -> beställd", function() {deepEqual( Stem("beställd"), "beställd");});
test("beställde -> beställd", function() {deepEqual( Stem("beställde"), "beställd");});
test("beställning -> beställning", function() {deepEqual( Stem("beställning"), "beställning");});
test("beställsam -> beställsam", function() {deepEqual( Stem("beställsam"), "beställsam");});
test("beställsamt -> beställsamt", function() {deepEqual( Stem("beställsamt"), "beställsamt");});
test("beställt -> beställt", function() {deepEqual( Stem("beställt"), "beställt");});
test("bestämd -> bestämd", function() {deepEqual( Stem("bestämd"), "bestämd");});
test("bestämda -> bestämd", function() {deepEqual( Stem("bestämda"), "bestämd");});
test("bestämdare -> bestämd", function() {deepEqual( Stem("bestämdare"), "bestämd");});
test("bestämde -> bestämd", function() {deepEqual( Stem("bestämde"), "bestämd");});
test("bestämdhet -> bestämd", function() {deepEqual( Stem("bestämdhet"), "bestämd");});
test("bestämdt -> bestämd", function() {deepEqual( Stem("bestämdt"), "bestämd");});
test("bestämma -> bestämm", function() {deepEqual( Stem("bestämma"), "bestämm");});
test("bestämmas -> bestämm", function() {deepEqual( Stem("bestämmas"), "bestämm");});
test("bestämmelse -> bestämm", function() {deepEqual( Stem("bestämmelse"), "bestämm");});
test("bestämmelseort -> bestämmelseort", function() {deepEqual( Stem("bestämmelseort"), "bestämmelseort");});
test("bestämt -> bestämt", function() {deepEqual( Stem("bestämt"), "bestämt");});
test("beständig -> beständ", function() {deepEqual( Stem("beständig"), "beständ");});
test("beständiga -> beständ", function() {deepEqual( Stem("beständiga"), "beständ");});
test("beständigt -> beständ", function() {deepEqual( Stem("beständigt"), "beständ");});
test("bestänkta -> bestänk", function() {deepEqual( Stem("bestänkta"), "bestänk");});
test("bestänkte -> bestänk", function() {deepEqual( Stem("bestänkte"), "bestänk");});
test("bestärnd -> bestärnd", function() {deepEqual( Stem("bestärnd"), "bestärnd");});
test("bestå -> bestå", function() {deepEqual( Stem("bestå"), "bestå");});
test("bestående -> beståend", function() {deepEqual( Stem("bestående"), "beståend");});
test("beståndande -> bestånd", function() {deepEqual( Stem("beståndande"), "bestånd");});
test("består -> består", function() {deepEqual( Stem("består"), "består");});
test("bestört -> bestört", function() {deepEqual( Stem("bestört"), "bestört");});
test("bestörtning -> bestörtning", function() {deepEqual( Stem("bestörtning"), "bestörtning");});
test("besvara -> besvar", function() {deepEqual( Stem("besvara"), "besvar");});
test("besvarade -> besvar", function() {deepEqual( Stem("besvarade"), "besvar");});
test("besvarades -> besvar", function() {deepEqual( Stem("besvarades"), "besvar");});
test("besvarande -> besvar", function() {deepEqual( Stem("besvarande"), "besvar");});
test("besvaras -> besvar", function() {deepEqual( Stem("besvaras"), "besvar");});
test("besvek -> besvek", function() {deepEqual( Stem("besvek"), "besvek");});
test("besvikelse -> besvik", function() {deepEqual( Stem("besvikelse"), "besvik");});
test("besviken -> besvik", function() {deepEqual( Stem("besviken"), "besvik");});
test("besvor -> besv", function() {deepEqual( Stem("besvor"), "besv");});
test("besvurit -> besvurit", function() {deepEqual( Stem("besvurit"), "besvurit");});
test("besvär -> besvär", function() {deepEqual( Stem("besvär"), "besvär");});
test("besvära -> besvär", function() {deepEqual( Stem("besvära"), "besvär");});
test("besvärad -> besvär", function() {deepEqual( Stem("besvärad"), "besvär");});
test("besvärade -> besvär", function() {deepEqual( Stem("besvärade"), "besvär");});
test("besvärades -> besvär", function() {deepEqual( Stem("besvärades"), "besvär");});
test("besvärande -> besvär", function() {deepEqual( Stem("besvärande"), "besvär");});
test("besvärar -> besvär", function() {deepEqual( Stem("besvärar"), "besvär");});
test("besväras -> besvär", function() {deepEqual( Stem("besväras"), "besvär");});
test("besvärat -> besvär", function() {deepEqual( Stem("besvärat"), "besvär");});
test("besväret -> besväret", function() {deepEqual( Stem("besväret"), "besväret");});
test("besvärjande -> besvärj", function() {deepEqual( Stem("besvärjande"), "besvärj");});
test("besvärlig -> besvär", function() {deepEqual( Stem("besvärlig"), "besvär");});
test("besvärliga -> besvär", function() {deepEqual( Stem("besvärliga"), "besvär");});
test("besvärligheter -> besvär", function() {deepEqual( Stem("besvärligheter"), "besvär");});
test("besvärligt -> besvär", function() {deepEqual( Stem("besvärligt"), "besvär");});
test("besydnerligt -> besydner", function() {deepEqual( Stem("besydnerligt"), "besydner");});
test("besyn -> besyn", function() {deepEqual( Stem("besyn"), "besyn");});
test("besynnerlig -> besynner", function() {deepEqual( Stem("besynnerlig"), "besynner");});
test("besynnerliga -> besynner", function() {deepEqual( Stem("besynnerliga"), "besynner");});
test("besynnerligare -> besynner", function() {deepEqual( Stem("besynnerligare"), "besynner");});
test("besynnerligaste -> besynner", function() {deepEqual( Stem("besynnerligaste"), "besynner");});
test("besynnerligen -> besynner", function() {deepEqual( Stem("besynnerligen"), "besynner");});
test("besynnerlighet -> besynner", function() {deepEqual( Stem("besynnerlighet"), "besynner");});
test("besynnerligt -> besynner", function() {deepEqual( Stem("besynnerligt"), "besynner");});
test("besättning -> besättning", function() {deepEqual( Stem("besättning"), "besättning");});
test("besättningen -> besättning", function() {deepEqual( Stem("besättningen"), "besättning");});
test("besåg -> besåg", function() {deepEqual( Stem("besåg"), "besåg");});
test("besök -> besök", function() {deepEqual( Stem("besök"), "besök");});
test("besöka -> besök", function() {deepEqual( Stem("besöka"), "besök");});
test("besökande -> besök", function() {deepEqual( Stem("besökande"), "besök");});
test("besöken -> besök", function() {deepEqual( Stem("besöken"), "besök");});
test("besöker -> besök", function() {deepEqual( Stem("besöker"), "besök");});
test("besöket -> besöket", function() {deepEqual( Stem("besöket"), "besöket");});
test("besökt -> besök", function() {deepEqual( Stem("besökt"), "besök");});
test("besökta -> besök", function() {deepEqual( Stem("besökta"), "besök");});
test("besökte -> besök", function() {deepEqual( Stem("besökte"), "besök");});
test("besöktes -> besök", function() {deepEqual( Stem("besöktes"), "besök");});
test("bet -> bet", function() {deepEqual( Stem("bet"), "bet");});
test("betade -> bet", function() {deepEqual( Stem("betade"), "bet");});
test("betaga -> betag", function() {deepEqual( Stem("betaga"), "betag");});
test("betagen -> betag", function() {deepEqual( Stem("betagen"), "betag");});
test("betagit -> betagit", function() {deepEqual( Stem("betagit"), "betagit");});
test("betala -> betal", function() {deepEqual( Stem("betala"), "betal");});
test("betalade -> betal", function() {deepEqual( Stem("betalade"), "betal");});
test("betalar -> betal", function() {deepEqual( Stem("betalar"), "betal");});
test("betalas -> betal", function() {deepEqual( Stem("betalas"), "betal");});
test("betalat -> betal", function() {deepEqual( Stem("betalat"), "betal");});
test("betalda -> betald", function() {deepEqual( Stem("betalda"), "betald");});
test("betalning -> betalning", function() {deepEqual( Stem("betalning"), "betalning");});
test("betalningen -> betalning", function() {deepEqual( Stem("betalningen"), "betalning");});
test("betalt -> betalt", function() {deepEqual( Stem("betalt"), "betalt");});
test("betalte -> betalt", function() {deepEqual( Stem("betalte"), "betalt");});
test("betankande -> betank", function() {deepEqual( Stem("betankande"), "betank");});
test("betar -> bet", function() {deepEqual( Stem("betar"), "bet");});
test("bete -> bet", function() {deepEqual( Stem("bete"), "bet");});
test("beteckningar -> beteckning", function() {deepEqual( Stem("beteckningar"), "beteckning");});
test("betedde -> beted", function() {deepEqual( Stem("betedde"), "beted");});
test("betett -> betet", function() {deepEqual( Stem("betett"), "betet");});
test("beting -> beting", function() {deepEqual( Stem("beting"), "beting");});
test("betjanar -> betjan", function() {deepEqual( Stem("betjanar"), "betjan");});
test("betjening -> betjening", function() {deepEqual( Stem("betjening"), "betjening");});
test("betjäna -> betjän", function() {deepEqual( Stem("betjäna"), "betjän");});
test("betjänade -> betjän", function() {deepEqual( Stem("betjänade"), "betjän");});
test("betjäningen -> betjäning", function() {deepEqual( Stem("betjäningen"), "betjäning");});
test("betjänt -> betjänt", function() {deepEqual( Stem("betjänt"), "betjänt");});
test("betlehem -> betlehem", function() {deepEqual( Stem("betlehem"), "betlehem");});
test("betlehems -> betlehem", function() {deepEqual( Stem("betlehems"), "betlehem");});
test("betog -> betog", function() {deepEqual( Stem("betog"), "betog");});
test("betrak -> betrak", function() {deepEqual( Stem("betrak"), "betrak");});
test("betrakta -> betrak", function() {deepEqual( Stem("betrakta"), "betrak");});
test("betraktad -> betrak", function() {deepEqual( Stem("betraktad"), "betrak");});
test("betraktadc -> betraktadc", function() {deepEqual( Stem("betraktadc"), "betraktadc");});
test("betraktade -> betrak", function() {deepEqual( Stem("betraktade"), "betrak");});
test("betraktades -> betrak", function() {deepEqual( Stem("betraktades"), "betrak");});
test("betraktande -> betrak", function() {deepEqual( Stem("betraktande"), "betrak");});
test("betraktar -> betrak", function() {deepEqual( Stem("betraktar"), "betrak");});
test("betraktas -> betrak", function() {deepEqual( Stem("betraktas"), "betrak");});
test("betraktat -> betrak", function() {deepEqual( Stem("betraktat"), "betrak");});
test("betraktelse -> betrakt", function() {deepEqual( Stem("betraktelse"), "betrakt");});
test("betraktelsen -> betrakt", function() {deepEqual( Stem("betraktelsen"), "betrakt");});
test("betraktelser -> betrakt", function() {deepEqual( Stem("betraktelser"), "betrakt");});
test("betror -> betr", function() {deepEqual( Stem("betror"), "betr");});
test("betryck -> betryck", function() {deepEqual( Stem("betryck"), "betryck");});
test("betryckt -> betryck", function() {deepEqual( Stem("betryckt"), "betryck");});
test("betryckta -> betryck", function() {deepEqual( Stem("betryckta"), "betryck");});
test("betryckte -> betryck", function() {deepEqual( Stem("betryckte"), "betryck");});
test("beträda -> beträd", function() {deepEqual( Stem("beträda"), "beträd");});
test("beträdde -> beträd", function() {deepEqual( Stem("beträdde"), "beträd");});
test("beträdt -> beträd", function() {deepEqual( Stem("beträdt"), "beträd");});
test("beträffade -> beträff", function() {deepEqual( Stem("beträffade"), "beträff");});
test("beträffande -> beträff", function() {deepEqual( Stem("beträffande"), "beträff");});
test("beträffar -> beträff", function() {deepEqual( Stem("beträffar"), "beträff");});
test("betsade -> bets", function() {deepEqual( Stem("betsade"), "bets");});
test("betsel -> betsel", function() {deepEqual( Stem("betsel"), "betsel");});
test("bett -> bett", function() {deepEqual( Stem("bett"), "bett");});
test("bettaktelse -> bettakt", function() {deepEqual( Stem("bettaktelse"), "bettakt");});
test("betty -> betty", function() {deepEqual( Stem("betty"), "betty");});
test("bettys -> betty", function() {deepEqual( Stem("bettys"), "betty");});
test("betvingare -> betving", function() {deepEqual( Stem("betvingare"), "betving");});
test("betvingaren -> betving", function() {deepEqual( Stem("betvingaren"), "betving");});
test("betvivlade -> betvivl", function() {deepEqual( Stem("betvivlade"), "betvivl");});
test("betvivlar -> betvivl", function() {deepEqual( Stem("betvivlar"), "betvivl");});
test("betyda -> betyd", function() {deepEqual( Stem("betyda"), "betyd");});
test("betydande -> betyd", function() {deepEqual( Stem("betydande"), "betyd");});
test("betydde -> betyd", function() {deepEqual( Stem("betydde"), "betyd");});
test("betydelse -> betyd", function() {deepEqual( Stem("betydelse"), "betyd");});
test("betydelsefull -> betydelsefull", function() {deepEqual( Stem("betydelsefull"), "betydelsefull");});
test("betydelsefulla -> betydelsefull", function() {deepEqual( Stem("betydelsefulla"), "betydelsefull");});
test("betydelsefullt -> betydelsefull", function() {deepEqual( Stem("betydelsefullt"), "betydelsefull");});
test("betydelselösa -> betydelselös", function() {deepEqual( Stem("betydelselösa"), "betydelselös");});
test("betydelsen -> betyd", function() {deepEqual( Stem("betydelsen"), "betyd");});
test("betydenhet -> betyden", function() {deepEqual( Stem("betydenhet"), "betyden");});
test("betyder -> betyd", function() {deepEqual( Stem("betyder"), "betyd");});
test("betydlig -> betyd", function() {deepEqual( Stem("betydlig"), "betyd");});
test("betydliga -> betyd", function() {deepEqual( Stem("betydliga"), "betyd");});
test("betydligaste -> betyd", function() {deepEqual( Stem("betydligaste"), "betyd");});
test("betydligt -> betyd", function() {deepEqual( Stem("betydligt"), "betyd");});
test("betyg -> betyg", function() {deepEqual( Stem("betyg"), "betyg");});
test("betyga -> betyg", function() {deepEqual( Stem("betyga"), "betyg");});
test("betytt -> betyt", function() {deepEqual( Stem("betytt"), "betyt");});
test("betäcka -> betäck", function() {deepEqual( Stem("betäcka"), "betäck");});
test("betäckta -> betäck", function() {deepEqual( Stem("betäckta"), "betäck");});
test("betäckte -> betäck", function() {deepEqual( Stem("betäckte"), "betäck");});
test("betänk -> betänk", function() {deepEqual( Stem("betänk"), "betänk");});
test("betänka -> betänk", function() {deepEqual( Stem("betänka"), "betänk");});
test("betänkande -> betänk", function() {deepEqual( Stem("betänkande"), "betänk");});
test("betänketid -> betänketid", function() {deepEqual( Stem("betänketid"), "betänketid");});
test("betänklig -> betänk", function() {deepEqual( Stem("betänklig"), "betänk");});
test("betänkliga -> betänk", function() {deepEqual( Stem("betänkliga"), "betänk");});
test("betänkligheter -> betänk", function() {deepEqual( Stem("betänkligheter"), "betänk");});
test("betänkningstid -> betänkningstid", function() {deepEqual( Stem("betänkningstid"), "betänkningstid");});
test("betänksam -> betänksam", function() {deepEqual( Stem("betänksam"), "betänksam");});
test("betänksamt -> betänksamt", function() {deepEqual( Stem("betänksamt"), "betänksamt");});
test("betänkt -> betänk", function() {deepEqual( Stem("betänkt"), "betänk");});
test("betänkte -> betänk", function() {deepEqual( Stem("betänkte"), "betänk");});
test("beund -> beund", function() {deepEqual( Stem("beund"), "beund");});
test("beundra -> beundr", function() {deepEqual( Stem("beundra"), "beundr");});
test("beundrad -> beundr", function() {deepEqual( Stem("beundrad"), "beundr");});
test("beundrade -> beundr", function() {deepEqual( Stem("beundrade"), "beundr");});
test("beundrades -> beundr", function() {deepEqual( Stem("beundrades"), "beundr");});
test("beundran -> beundran", function() {deepEqual( Stem("beundran"), "beundran");});
test("beundrande -> beundr", function() {deepEqual( Stem("beundrande"), "beundr");});
test("beundransvärdt -> beundransvärd", function() {deepEqual( Stem("beundransvärdt"), "beundransvärd");});
test("beundrar -> beundr", function() {deepEqual( Stem("beundrar"), "beundr");});
test("beundrare -> beundr", function() {deepEqual( Stem("beundrare"), "beundr");});
test("beundrat -> beundr", function() {deepEqual( Stem("beundrat"), "beundr");});
test("bevagenhet -> bevagen", function() {deepEqual( Stem("bevagenhet"), "bevagen");});
test("bevaka -> bevak", function() {deepEqual( Stem("bevaka"), "bevak");});
test("bevakad -> bevak", function() {deepEqual( Stem("bevakad"), "bevak");});
test("bevakas -> bevak", function() {deepEqual( Stem("bevakas"), "bevak");});
test("bevandra -> bevandr", function() {deepEqual( Stem("bevandra"), "bevandr");});
test("bevant -> bevant", function() {deepEqual( Stem("bevant"), "bevant");});
test("bevara -> bevar", function() {deepEqual( Stem("bevara"), "bevar");});
test("bevarade -> bevar", function() {deepEqual( Stem("bevarade"), "bevar");});
test("bevarar -> bevar", function() {deepEqual( Stem("bevarar"), "bevar");});
test("bevaras -> bevar", function() {deepEqual( Stem("bevaras"), "bevar");});
test("bevarat -> bevar", function() {deepEqual( Stem("bevarat"), "bevar");});
test("bevare -> bev", function() {deepEqual( Stem("bevare"), "bev");});
test("bevars -> bevar", function() {deepEqual( Stem("bevars"), "bevar");});
test("beve -> bev", function() {deepEqual( Stem("beve"), "bev");});
test("beveka -> bevek", function() {deepEqual( Stem("beveka"), "bevek");});
test("bevekande -> bevek", function() {deepEqual( Stem("bevekande"), "bevek");});
test("bevekelsegrund -> bevekelsegrund", function() {deepEqual( Stem("bevekelsegrund"), "bevekelsegrund");});
test("bevekelsegrunder -> bevekelsegrund", function() {deepEqual( Stem("bevekelsegrunder"), "bevekelsegrund");});
test("bevekligaste -> bevek", function() {deepEqual( Stem("bevekligaste"), "bevek");});
test("bevekt -> bevek", function() {deepEqual( Stem("bevekt"), "bevek");});
test("bevektes -> bevek", function() {deepEqual( Stem("bevektes"), "bevek");});
test("beviljad -> bevilj", function() {deepEqual( Stem("beviljad"), "bevilj");});
test("beviljade -> bevilj", function() {deepEqual( Stem("beviljade"), "bevilj");});
test("beviljades -> bevilj", function() {deepEqual( Stem("beviljades"), "bevilj");});
test("beviljas -> bevilj", function() {deepEqual( Stem("beviljas"), "bevilj");});
test("bevingad -> beving", function() {deepEqual( Stem("bevingad"), "beving");});
test("bevingat -> beving", function() {deepEqual( Stem("bevingat"), "beving");});
test("bevis -> bevis", function() {deepEqual( Stem("bevis"), "bevis");});
test("bevisa -> bevis", function() {deepEqual( Stem("bevisa"), "bevis");});
test("bevisad -> bevis", function() {deepEqual( Stem("bevisad"), "bevis");});
test("bevisade -> bevis", function() {deepEqual( Stem("bevisade"), "bevis");});
test("bevisar -> bevis", function() {deepEqual( Stem("bevisar"), "bevis");});
test("bevisas -> bevis", function() {deepEqual( Stem("bevisas"), "bevis");});
test("bevisat -> bevis", function() {deepEqual( Stem("bevisat"), "bevis");});
test("bevisen -> bevis", function() {deepEqual( Stem("bevisen"), "bevis");});
test("beviset -> beviset", function() {deepEqual( Stem("beviset"), "beviset");});
test("bevista -> bevist", function() {deepEqual( Stem("bevista"), "bevist");});
test("bevistat -> bevist", function() {deepEqual( Stem("bevistat"), "bevist");});
test("bevittna -> bevittn", function() {deepEqual( Stem("bevittna"), "bevittn");});
test("bevittnad -> bevittn", function() {deepEqual( Stem("bevittnad"), "bevittn");});
test("bevittnade -> bevittn", function() {deepEqual( Stem("bevittnade"), "bevittn");});
test("bevittnat -> bevittn", function() {deepEqual( Stem("bevittnat"), "bevittn");});
test("bevändt -> bevänd", function() {deepEqual( Stem("bevändt"), "bevänd");});
test("bevänt -> bevänt", function() {deepEqual( Stem("bevänt"), "bevänt");});
test("bevåg -> bevåg", function() {deepEqual( Stem("bevåg"), "bevåg");});
test("bhnd -> bhnd", function() {deepEqual( Stem("bhnd"), "bhnd");});
test("bi -> bi", function() {deepEqual( Stem("bi"), "bi");});
test("bibehålla -> bibehåll", function() {deepEqual( Stem("bibehålla"), "bibehåll");});
test("bibehållen -> bibehåll", function() {deepEqual( Stem("bibehållen"), "bibehåll");});
test("bibehåller -> bibehåll", function() {deepEqual( Stem("bibehåller"), "bibehåll");});
test("bibehållit -> bibehållit", function() {deepEqual( Stem("bibehållit"), "bibehållit");});
test("bibehöll -> bibehöll", function() {deepEqual( Stem("bibehöll"), "bibehöll");});
test("bibehölle -> bibehöll", function() {deepEqual( Stem("bibehölle"), "bibehöll");});
test("bibel -> bibel", function() {deepEqual( Stem("bibel"), "bibel");});
test("bibelens -> bibel", function() {deepEqual( Stem("bibelens"), "bibel");});
test("bibeln -> bibeln", function() {deepEqual( Stem("bibeln"), "bibeln");});
test("bibelns -> bibeln", function() {deepEqual( Stem("bibelns"), "bibeln");});
test("bibelsprak -> bibelsprak", function() {deepEqual( Stem("bibelsprak"), "bibelsprak");});
test("bibelspråk -> bibelspråk", function() {deepEqual( Stem("bibelspråk"), "bibelspråk");});
test("biblar -> bibl", function() {deepEqual( Stem("biblar"), "bibl");});
test("biblens -> bibl", function() {deepEqual( Stem("biblens"), "bibl");});
test("bibliotek -> bibliotek", function() {deepEqual( Stem("bibliotek"), "bibliotek");});
test("biblioteket -> biblioteket", function() {deepEqual( Stem("biblioteket"), "biblioteket");});
test("biblioteksfontänen -> biblioteksfontän", function() {deepEqual( Stem("biblioteksfontänen"), "biblioteksfontän");});
test("biblioteksrum -> biblioteksrum", function() {deepEqual( Stem("biblioteksrum"), "biblioteksrum");});
test("biblioteksrummet -> biblioteksrummet", function() {deepEqual( Stem("biblioteksrummet"), "biblioteksrummet");});
test("bibo -> bibo", function() {deepEqual( Stem("bibo"), "bibo");});
test("bicyklister -> bicyklist", function() {deepEqual( Stem("bicyklister"), "bicyklist");});
test("bidar -> bid", function() {deepEqual( Stem("bidar"), "bid");});
test("bidrag -> bidrag", function() {deepEqual( Stem("bidrag"), "bidrag");});
test("bidraga -> bidrag", function() {deepEqual( Stem("bidraga"), "bidrag");});
test("bidragit -> bidragit", function() {deepEqual( Stem("bidragit"), "bidragit");});
test("bidrar -> bidr", function() {deepEqual( Stem("bidrar"), "bidr");});
test("bidrog -> bidrog", function() {deepEqual( Stem("bidrog"), "bidrog");});
test("bidrogo -> bidrogo", function() {deepEqual( Stem("bidrogo"), "bidrogo");});
test("bien -> bien", function() {deepEqual( Stem("bien"), "bien");});
test("biet -> biet", function() {deepEqual( Stem("biet"), "biet");});
test("bifall -> bifall", function() {deepEqual( Stem("bifall"), "bifall");});
test("bifalla -> bifall", function() {deepEqual( Stem("bifalla"), "bifall");});
test("bifaller -> bifall", function() {deepEqual( Stem("bifaller"), "bifall");});
test("bifallet -> bifallet", function() {deepEqual( Stem("bifallet"), "bifallet");});
test("bifallsskrän -> bifallsskrän", function() {deepEqual( Stem("bifallsskrän"), "bifallsskrän");});
test("bifoga -> bifog", function() {deepEqual( Stem("bifoga"), "bifog");});
test("bifogade -> bifog", function() {deepEqual( Stem("bifogade"), "bifog");});
test("bifölls -> biföll", function() {deepEqual( Stem("bifölls"), "biföll");});
test("bihang -> bihang", function() {deepEqual( Stem("bihang"), "bihang");});
test("bihanget -> bihanget", function() {deepEqual( Stem("bihanget"), "bihanget");});
test("bikt -> bikt", function() {deepEqual( Stem("bikt"), "bikt");});
test("bikta -> bikt", function() {deepEqual( Stem("bikta"), "bikt");});
test("bikten -> bikt", function() {deepEqual( Stem("bikten"), "bikt");});
test("bikternas -> bikt", function() {deepEqual( Stem("bikternas"), "bikt");});
test("biktfäder -> biktfäd", function() {deepEqual( Stem("biktfäder"), "biktfäd");});
test("bil -> bil", function() {deepEqual( Stem("bil"), "bil");});
test("bila -> bil", function() {deepEqual( Stem("bila"), "bil");});
test("bilaga -> bilag", function() {deepEqual( Stem("bilaga"), "bilag");});
test("bilan -> bilan", function() {deepEqual( Stem("bilan"), "bilan");});
test("bilar -> bil", function() {deepEqual( Stem("bilar"), "bil");});
test("bilarna -> bil", function() {deepEqual( Stem("bilarna"), "bil");});
test("bild -> bild", function() {deepEqual( Stem("bild"), "bild");});
test("bilda -> bild", function() {deepEqual( Stem("bilda"), "bild");});
test("bildad -> bild", function() {deepEqual( Stem("bildad"), "bild");});
test("bildade -> bild", function() {deepEqual( Stem("bildade"), "bild");});
test("bildades -> bild", function() {deepEqual( Stem("bildades"), "bild");});
test("bildat -> bild", function() {deepEqual( Stem("bildat"), "bild");});
test("bilden -> bild", function() {deepEqual( Stem("bilden"), "bild");});
test("bilder -> bild", function() {deepEqual( Stem("bilder"), "bild");});
test("bilderna -> bild", function() {deepEqual( Stem("bilderna"), "bild");});
test("bildhuggeriverk -> bildhuggeriverk", function() {deepEqual( Stem("bildhuggeriverk"), "bildhuggeriverk");});
test("bildlikt -> bildlik", function() {deepEqual( Stem("bildlikt"), "bildlik");});
test("bildning -> bildning", function() {deepEqual( Stem("bildning"), "bildning");});
test("bildningen -> bildning", function() {deepEqual( Stem("bildningen"), "bildning");});
test("bildningsgrad -> bildningsgr", function() {deepEqual( Stem("bildningsgrad"), "bildningsgr");});
test("bildstod -> bildstod", function() {deepEqual( Stem("bildstod"), "bildstod");});
test("bilen -> bil", function() {deepEqual( Stem("bilen"), "bil");});
test("bilens -> bil", function() {deepEqual( Stem("bilens"), "bil");});
test("biljett -> biljet", function() {deepEqual( Stem("biljett"), "biljet");});
test("biljetten -> biljet", function() {deepEqual( Stem("biljetten"), "biljet");});
test("biljetter -> biljet", function() {deepEqual( Stem("biljetter"), "biljet");});
test("biljettluckan -> biljettluckan", function() {deepEqual( Stem("biljettluckan"), "biljettluckan");});
test("billig -> bil", function() {deepEqual( Stem("billig"), "bil");});
test("billiga -> bil", function() {deepEqual( Stem("billiga"), "bil");});
test("billigare -> bil", function() {deepEqual( Stem("billigare"), "bil");});
test("billigheten -> bil", function() {deepEqual( Stem("billigheten"), "bil");});
test("billigt -> bil", function() {deepEqual( Stem("billigt"), "bil");});
test("biltoge -> biltog", function() {deepEqual( Stem("biltoge"), "biltog");});
test("bilägga -> bilägg", function() {deepEqual( Stem("bilägga"), "bilägg");});
test("binamnet -> binamnet", function() {deepEqual( Stem("binamnet"), "binamnet");});
test("binda -> bind", function() {deepEqual( Stem("binda"), "bind");});
test("bindande -> bind", function() {deepEqual( Stem("bindande"), "bind");});
test("bindel -> bindel", function() {deepEqual( Stem("bindel"), "bindel");});
test("binder -> bind", function() {deepEqual( Stem("binder"), "bind");});
test("bindlar -> bindl", function() {deepEqual( Stem("bindlar"), "bindl");});
test("bindmössa -> bindmöss", function() {deepEqual( Stem("bindmössa"), "bindmöss");});
test("bindmössor -> bindmöss", function() {deepEqual( Stem("bindmössor"), "bindmöss");});
test("bindor -> bind", function() {deepEqual( Stem("bindor"), "bind");});
test("bingar -> bing", function() {deepEqual( Stem("bingar"), "bing");});
test("binglade -> bingl", function() {deepEqual( Stem("binglade"), "bingl");});
test("binnikemask -> binnikemask", function() {deepEqual( Stem("binnikemask"), "binnikemask");});
test("binnikemasken -> binnikemask", function() {deepEqual( Stem("binnikemasken"), "binnikemask");});
test("biograferna -> biograf", function() {deepEqual( Stem("biograferna"), "biograf");});
test("biografi -> biografi", function() {deepEqual( Stem("biografi"), "biografi");});
test("birck -> birck", function() {deepEqual( Stem("birck"), "birck");});
test("birger -> birg", function() {deepEqual( Stem("birger"), "birg");});
test("birgers -> birger", function() {deepEqual( Stem("birgers"), "birger");});
test("birgitta -> birgit", function() {deepEqual( Stem("birgitta"), "birgit");});
test("biroll -> biroll", function() {deepEqual( Stem("biroll"), "biroll");});
test("bisak -> bisak", function() {deepEqual( Stem("bisak"), "bisak");});
test("bisarraste -> bisarr", function() {deepEqual( Stem("bisarraste"), "bisarr");});
test("bisarrerier -> bisarreri", function() {deepEqual( Stem("bisarrerier"), "bisarreri");});
test("bisats -> bisat", function() {deepEqual( Stem("bisats"), "bisat");});
test("biskop -> biskop", function() {deepEqual( Stem("biskop"), "biskop");});
test("biskopar -> biskop", function() {deepEqual( Stem("biskopar"), "biskop");});
test("bismak -> bismak", function() {deepEqual( Stem("bismak"), "bismak");});
test("bismarck -> bismarck", function() {deepEqual( Stem("bismarck"), "bismarck");});
test("bist -> bist", function() {deepEqual( Stem("bist"), "bist");});
test("bister -> bist", function() {deepEqual( Stem("bister"), "bist");});
test("bistert -> bistert", function() {deepEqual( Stem("bistert"), "bistert");});
test("bistra -> bistr", function() {deepEqual( Stem("bistra"), "bistr");});
test("bistre -> bistr", function() {deepEqual( Stem("bistre"), "bistr");});
test("bistånd -> bistånd", function() {deepEqual( Stem("bistånd"), "bistånd");});
test("bistått -> biståt", function() {deepEqual( Stem("bistått"), "biståt");});
test("bit -> bit", function() {deepEqual( Stem("bit"), "bit");});
test("bita -> bit", function() {deepEqual( Stem("bita"), "bit");});
test("bitande -> bit", function() {deepEqual( Stem("bitande"), "bit");});
test("bitankar -> bitank", function() {deepEqual( Stem("bitankar"), "bitank");});
test("bitar -> bit", function() {deepEqual( Stem("bitar"), "bit");});
test("bitarna -> bit", function() {deepEqual( Stem("bitarna"), "bit");});
test("bitas -> bit", function() {deepEqual( Stem("bitas"), "bit");});
test("biter -> bit", function() {deepEqual( Stem("biter"), "bit");});
test("bitit -> bitit", function() {deepEqual( Stem("bitit"), "bitit");});
test("biträda -> biträd", function() {deepEqual( Stem("biträda"), "biträd");});
test("biträde -> biträd", function() {deepEqual( Stem("biträde"), "biträd");});
test("biträden -> biträd", function() {deepEqual( Stem("biträden"), "biträd");});
test("biträdet -> biträdet", function() {deepEqual( Stem("biträdet"), "biträdet");});
test("bitter -> bitt", function() {deepEqual( Stem("bitter"), "bitt");});
test("bitterhet -> bitter", function() {deepEqual( Stem("bitterhet"), "bitter");});
test("bitterheten -> bitter", function() {deepEqual( Stem("bitterheten"), "bitter");});
test("bitterligen -> bitter", function() {deepEqual( Stem("bitterligen"), "bitter");});
test("bittersta -> bitterst", function() {deepEqual( Stem("bittersta"), "bitterst");});
test("bittert -> bittert", function() {deepEqual( Stem("bittert"), "bittert");});
test("bittida -> bittid", function() {deepEqual( Stem("bittida"), "bittid");});
test("bittra -> bittr", function() {deepEqual( Stem("bittra"), "bittr");});
test("bittraste -> bittr", function() {deepEqual( Stem("bittraste"), "bittr");});
test("bittring -> bittring", function() {deepEqual( Stem("bittring"), "bittring");});
test("biått -> biått", function() {deepEqual( Stem("biått"), "biått");});
test("bjelkar -> bjelk", function() {deepEqual( Stem("bjelkar"), "bjelk");});
test("bjelklaget -> bjelklaget", function() {deepEqual( Stem("bjelklaget"), "bjelklaget");});
test("bju -> bju", function() {deepEqual( Stem("bju"), "bju");});
test("bjuda -> bjud", function() {deepEqual( Stem("bjuda"), "bjud");});
test("bjudande -> bjud", function() {deepEqual( Stem("bjudande"), "bjud");});
test("bjudas -> bjud", function() {deepEqual( Stem("bjudas"), "bjud");});
test("bjuden -> bjud", function() {deepEqual( Stem("bjuden"), "bjud");});
test("bjuder -> bjud", function() {deepEqual( Stem("bjuder"), "bjud");});
test("bjudes -> bjud", function() {deepEqual( Stem("bjudes"), "bjud");});
test("bjudit -> bjudit", function() {deepEqual( Stem("bjudit"), "bjudit");});
test("bjudna -> bjudn", function() {deepEqual( Stem("bjudna"), "bjudn");});
test("bjudning -> bjudning", function() {deepEqual( Stem("bjudning"), "bjudning");});
test("bjudningar -> bjudning", function() {deepEqual( Stem("bjudningar"), "bjudning");});
test("bjudningskorten -> bjudningskort", function() {deepEqual( Stem("bjudningskorten"), "bjudningskort");});
test("bjuds -> bjud", function() {deepEqual( Stem("bjuds"), "bjud");});
test("bjäff -> bjäff", function() {deepEqual( Stem("bjäff"), "bjäff");});
test("bjälkarna -> bjälk", function() {deepEqual( Stem("bjälkarna"), "bjälk");});
test("bjällra -> bjällr", function() {deepEqual( Stem("bjällra"), "bjällr");});
test("bjärt -> bjärt", function() {deepEqual( Stem("bjärt"), "bjärt");});
test("bjärta -> bjärt", function() {deepEqual( Stem("bjärta"), "bjärt");});
test("bjärtat -> bjärt", function() {deepEqual( Stem("bjärtat"), "bjärt");});
test("bjöd -> bjöd", function() {deepEqual( Stem("bjöd"), "bjöd");});
test("bjödo -> bjödo", function() {deepEqual( Stem("bjödo"), "bjödo");});
test("bjödos -> bjödo", function() {deepEqual( Stem("bjödos"), "bjödo");});
test("bjöds -> bjöd", function() {deepEqual( Stem("bjöds"), "bjöd");});
test("björk -> björk", function() {deepEqual( Stem("björk"), "björk");});
test("björkallen -> björkall", function() {deepEqual( Stem("björkallen"), "björkall");});
test("björkar -> björk", function() {deepEqual( Stem("björkar"), "björk");});
test("björkarna -> björk", function() {deepEqual( Stem("björkarna"), "björk");});
test("björkbacke -> björkback", function() {deepEqual( Stem("björkbacke"), "björkback");});
test("björkdungen -> björkdung", function() {deepEqual( Stem("björkdungen"), "björkdung");});
test("björkens -> björk", function() {deepEqual( Stem("björkens"), "björk");});
test("björks -> björk", function() {deepEqual( Stem("björks"), "björk");});
test("björn -> björn", function() {deepEqual( Stem("björn"), "björn");});
test("björnars -> björnar", function() {deepEqual( Stem("björnars"), "björnar");});
test("björnen -> björn", function() {deepEqual( Stem("björnen"), "björn");});
test("björns -> björn", function() {deepEqual( Stem("björns"), "björn");});
test("björnspråket -> björnspråket", function() {deepEqual( Stem("björnspråket"), "björnspråket");});
test("bl -> bl", function() {deepEqual( Stem("bl"), "bl");});
test("bla -> bla", function() {deepEqual( Stem("bla"), "bla");});
test("black -> black", function() {deepEqual( Stem("black"), "black");});
test("blacka -> black", function() {deepEqual( Stem("blacka"), "black");});
test("blacksuddare -> blacksud", function() {deepEqual( Stem("blacksuddare"), "blacksud");});
test("blackt -> black", function() {deepEqual( Stem("blackt"), "black");});
test("blad -> blad", function() {deepEqual( Stem("blad"), "blad");});
test("bladen -> blad", function() {deepEqual( Stem("bladen"), "blad");});
test("bladet -> bladet", function() {deepEqual( Stem("bladet"), "bladet");});
test("bladrika -> bladrik", function() {deepEqual( Stem("bladrika"), "bladrik");});
test("bladverket -> bladverket", function() {deepEqual( Stem("bladverket"), "bladverket");});
test("blanchs -> blanch", function() {deepEqual( Stem("blanchs"), "blanch");});
test("blancmanger -> blancmang", function() {deepEqual( Stem("blancmanger"), "blancmang");});
test("bland -> bland", function() {deepEqual( Stem("bland"), "bland");});
test("blanda -> bland", function() {deepEqual( Stem("blanda"), "bland");});
test("blandad -> bland", function() {deepEqual( Stem("blandad"), "bland");});
test("blandade -> bland", function() {deepEqual( Stem("blandade"), "bland");});
test("blandande -> bland", function() {deepEqual( Stem("blandande"), "bland");});
test("blandar -> bland", function() {deepEqual( Stem("blandar"), "bland");});
test("blandas -> bland", function() {deepEqual( Stem("blandas"), "bland");});
test("blandat -> bland", function() {deepEqual( Stem("blandat"), "bland");});
test("blandning -> blandning", function() {deepEqual( Stem("blandning"), "blandning");});
test("blandsäd -> blandsäd", function() {deepEqual( Stem("blandsäd"), "blandsäd");});
test("blank -> blank", function() {deepEqual( Stem("blank"), "blank");});
test("blanka -> blank", function() {deepEqual( Stem("blanka"), "blank");});
test("blankskurad -> blankskur", function() {deepEqual( Stem("blankskurad"), "blankskur");});
test("blankt -> blank", function() {deepEqual( Stem("blankt"), "blank");});
test("blankte -> blank", function() {deepEqual( Stem("blankte"), "blank");});
test("blanzeflor -> blanzefl", function() {deepEqual( Stem("blanzeflor"), "blanzefl");});
test("blasande -> blas", function() {deepEqual( Stem("blasande"), "blas");});
test("blcv -> blcv", function() {deepEqual( Stem("blcv"), "blcv");});
test("ble -> ble", function() {deepEqual( Stem("ble"), "ble");});
test("bleckmugg -> bleckmugg", function() {deepEqual( Stem("bleckmugg"), "bleckmugg");});
test("blef -> blef", function() {deepEqual( Stem("blef"), "blef");});
test("blefve -> blefv", function() {deepEqual( Stem("blefve"), "blefv");});
test("blefvo -> blefvo", function() {deepEqual( Stem("blefvo"), "blefvo");});
test("blek -> blek", function() {deepEqual( Stem("blek"), "blek");});
test("bleka -> blek", function() {deepEqual( Stem("bleka"), "blek");});
test("blekare -> blek", function() {deepEqual( Stem("blekare"), "blek");});
test("bleke -> blek", function() {deepEqual( Stem("bleke"), "blek");});
test("blekgröna -> blekgrön", function() {deepEqual( Stem("blekgröna"), "blekgrön");});
test("blekhet -> blek", function() {deepEqual( Stem("blekhet"), "blek");});
test("blekna -> blekn", function() {deepEqual( Stem("blekna"), "blekn");});
test("bleknade -> blekn", function() {deepEqual( Stem("bleknade"), "blekn");});
test("bleknande -> blekn", function() {deepEqual( Stem("bleknande"), "blekn");});
test("bleknar -> blekn", function() {deepEqual( Stem("bleknar"), "blekn");});
test("blekt -> blekt", function() {deepEqual( Stem("blekt"), "blekt");});
test("blekvit -> blekvit", function() {deepEqual( Stem("blekvit"), "blekvit");});
test("blev -> blev", function() {deepEqual( Stem("blev"), "blev");});
test("bleve -> blev", function() {deepEqual( Stem("bleve"), "blev");});
test("blevo -> blevo", function() {deepEqual( Stem("blevo"), "blevo");});
test("bli -> bli", function() {deepEqual( Stem("bli"), "bli");});
test("blick -> blick", function() {deepEqual( Stem("blick"), "blick");});
test("blicka -> blick", function() {deepEqual( Stem("blicka"), "blick");});
test("blickade -> blick", function() {deepEqual( Stem("blickade"), "blick");});
test("blickande -> blick", function() {deepEqual( Stem("blickande"), "blick");});
test("blickar -> blick", function() {deepEqual( Stem("blickar"), "blick");});
test("blickarna -> blick", function() {deepEqual( Stem("blickarna"), "blick");});
test("blickarnas -> blick", function() {deepEqual( Stem("blickarnas"), "blick");});
test("blickat -> blick", function() {deepEqual( Stem("blickat"), "blick");});
test("blicken -> blick", function() {deepEqual( Stem("blicken"), "blick");});
test("blid -> blid", function() {deepEqual( Stem("blid"), "blid");});
test("blida -> blid", function() {deepEqual( Stem("blida"), "blid");});
test("blidare -> blid", function() {deepEqual( Stem("blidare"), "blid");});
test("blidka -> blidk", function() {deepEqual( Stem("blidka"), "blidk");});
test("blif -> blif", function() {deepEqual( Stem("blif"), "blif");});
test("blifva -> blifv", function() {deepEqual( Stem("blifva"), "blifv");});
test("blifver -> blifv", function() {deepEqual( Stem("blifver"), "blifv");});
test("blifvit -> blifvit", function() {deepEqual( Stem("blifvit"), "blifvit");});
test("blind -> blind", function() {deepEqual( Stem("blind"), "blind");});
test("blinda -> blind", function() {deepEqual( Stem("blinda"), "blind");});
test("blindas -> blind", function() {deepEqual( Stem("blindas"), "blind");});
test("blinddörr -> blinddörr", function() {deepEqual( Stem("blinddörr"), "blinddörr");});
test("blinde -> blind", function() {deepEqual( Stem("blinde"), "blind");});
test("blindhet -> blind", function() {deepEqual( Stem("blindhet"), "blind");});
test("blink -> blink", function() {deepEqual( Stem("blink"), "blink");});
test("blinka -> blink", function() {deepEqual( Stem("blinka"), "blink");});
test("blinkade -> blink", function() {deepEqual( Stem("blinkade"), "blink");});
test("blinkande -> blink", function() {deepEqual( Stem("blinkande"), "blink");});
test("blinkar -> blink", function() {deepEqual( Stem("blinkar"), "blink");});
test("blinkat -> blink", function() {deepEqual( Stem("blinkat"), "blink");});
test("blinken -> blink", function() {deepEqual( Stem("blinken"), "blink");});
test("blinkning -> blinkning", function() {deepEqual( Stem("blinkning"), "blinkning");});
test("blint -> blint", function() {deepEqual( Stem("blint"), "blint");});
test("blir -> blir", function() {deepEqual( Stem("blir"), "blir");});
test("blitt -> blitt", function() {deepEqual( Stem("blitt"), "blitt");});
test("bliv -> bliv", function() {deepEqual( Stem("bliv"), "bliv");});
test("bliva -> bliv", function() {deepEqual( Stem("bliva"), "bliv");});
test("blivande -> bliv", function() {deepEqual( Stem("blivande"), "bliv");});
test("blivit -> blivit", function() {deepEqual( Stem("blivit"), "blivit");});
test("blixt -> blixt", function() {deepEqual( Stem("blixt"), "blixt");});
test("blixtar -> blixt", function() {deepEqual( Stem("blixtar"), "blixt");});
test("blixtarna -> blixt", function() {deepEqual( Stem("blixtarna"), "blixt");});
test("blixtlikt -> blixtlik", function() {deepEqual( Stem("blixtlikt"), "blixtlik");});
test("blixtrade -> blixtr", function() {deepEqual( Stem("blixtrade"), "blixtr");});
test("blixtrande -> blixtr", function() {deepEqual( Stem("blixtrande"), "blixtr");});
test("blixtrat -> blixtr", function() {deepEqual( Stem("blixtrat"), "blixtr");});
test("blixtsnabb -> blixtsnabb", function() {deepEqual( Stem("blixtsnabb"), "blixtsnabb");});
test("blixtsnabbt -> blixtsnabbt", function() {deepEqual( Stem("blixtsnabbt"), "blixtsnabbt");});
test("blod -> blod", function() {deepEqual( Stem("blod"), "blod");});
test("blodde -> blodd", function() {deepEqual( Stem("blodde"), "blodd");});
test("bloddroppe -> bloddropp", function() {deepEqual( Stem("bloddroppe"), "bloddropp");});
test("blodet -> blodet", function() {deepEqual( Stem("blodet"), "blodet");});
test("blodets -> blodet", function() {deepEqual( Stem("blodets"), "blodet");});
test("blodfläckar -> blodfläck", function() {deepEqual( Stem("blodfläckar"), "blodfläck");});
test("blodfull -> blodfull", function() {deepEqual( Stem("blodfull"), "blodfull");});
test("blodhund -> blodhund", function() {deepEqual( Stem("blodhund"), "blodhund");});
test("blodig -> blod", function() {deepEqual( Stem("blodig"), "blod");});
test("blodiga -> blod", function() {deepEqual( Stem("blodiga"), "blod");});
test("blodnatten -> blodnat", function() {deepEqual( Stem("blodnatten"), "blodnat");});
test("blodränder -> blodränd", function() {deepEqual( Stem("blodränder"), "blodränd");});
test("blodröd -> blodröd", function() {deepEqual( Stem("blodröd"), "blodröd");});
test("blodröda -> blodröd", function() {deepEqual( Stem("blodröda"), "blodröd");});
test("blodrött -> blodröt", function() {deepEqual( Stem("blodrött"), "blodröt");});
test("blods -> blod", function() {deepEqual( Stem("blods"), "blod");});
test("blodsarbete -> blodsarbet", function() {deepEqual( Stem("blodsarbete"), "blodsarbet");});
test("blodsdroppar -> blodsdropp", function() {deepEqual( Stem("blodsdroppar"), "blodsdropp");});
test("blodskam -> blodskam", function() {deepEqual( Stem("blodskam"), "blodskam");});
test("blodskulder -> blodskuld", function() {deepEqual( Stem("blodskulder"), "blodskuld");});
test("blodsprängda -> blodspräng", function() {deepEqual( Stem("blodsprängda"), "blodspräng");});
test("blodstråle -> blodstrål", function() {deepEqual( Stem("blodstråle"), "blodstrål");});
test("blodstårar -> blodstår", function() {deepEqual( Stem("blodstårar"), "blodstår");});
test("blom -> blom", function() {deepEqual( Stem("blom"), "blom");});
test("blombukett -> blombuket", function() {deepEqual( Stem("blombukett"), "blombuket");});
test("blombuketter -> blombuket", function() {deepEqual( Stem("blombuketter"), "blombuket");});
test("blomdoft -> blomdoft", function() {deepEqual( Stem("blomdoft"), "blomdoft");});
test("blomfrön -> blomfrön", function() {deepEqual( Stem("blomfrön"), "blomfrön");});
test("blomglaset -> blomglaset", function() {deepEqual( Stem("blomglaset"), "blomglaset");});
test("blomkrukor -> blomkruk", function() {deepEqual( Stem("blomkrukor"), "blomkruk");});
test("blomkrukorna -> blomkruk", function() {deepEqual( Stem("blomkrukorna"), "blomkruk");});
test("blomlik -> blomlik", function() {deepEqual( Stem("blomlik"), "blomlik");});
test("blomma -> blomm", function() {deepEqual( Stem("blomma"), "blomm");});
test("blommade -> blomm", function() {deepEqual( Stem("blommade"), "blomm");});
test("blomman -> blomman", function() {deepEqual( Stem("blomman"), "blomman");});
test("blommande -> blomm", function() {deepEqual( Stem("blommande"), "blomm");});
test("blommar -> blomm", function() {deepEqual( Stem("blommar"), "blomm");});
test("blommas -> blomm", function() {deepEqual( Stem("blommas"), "blomm");});
test("blommat -> blomm", function() {deepEqual( Stem("blommat"), "blomm");});
test("blommen -> blomm", function() {deepEqual( Stem("blommen"), "blomm");});
test("blommig -> blomm", function() {deepEqual( Stem("blommig"), "blomm");});
test("blommon -> blommon", function() {deepEqual( Stem("blommon"), "blommon");});
test("blommor -> blomm", function() {deepEqual( Stem("blommor"), "blomm");});
test("blommorna -> blomm", function() {deepEqual( Stem("blommorna"), "blomm");});
test("blommornas -> blomm", function() {deepEqual( Stem("blommornas"), "blomm");});
test("blommors -> blommor", function() {deepEqual( Stem("blommors"), "blommor");});
test("blomning -> blomning", function() {deepEqual( Stem("blomning"), "blomning");});
test("blomrabatten -> blomrabat", function() {deepEqual( Stem("blomrabatten"), "blomrabat");});
test("blomrika -> blomrik", function() {deepEqual( Stem("blomrika"), "blomrik");});
test("blomst -> blomst", function() {deepEqual( Stem("blomst"), "blomst");});
test("blomster -> blomst", function() {deepEqual( Stem("blomster"), "blomst");});
test("blomsteravsky -> blomsteravsky", function() {deepEqual( Stem("blomsteravsky"), "blomsteravsky");});
test("blomsterbutik -> blomsterbutik", function() {deepEqual( Stem("blomsterbutik"), "blomsterbutik");});
test("blomsterbutiken -> blomsterbutik", function() {deepEqual( Stem("blomsterbutiken"), "blomsterbutik");});
test("blomsterdoft -> blomsterdoft", function() {deepEqual( Stem("blomsterdoft"), "blomsterdoft");});
test("blomstergudinn -> blomstergudin", function() {deepEqual( Stem("blomstergudinn"), "blomstergudin");});
test("blomstermångleri -> blomstermångleri", function() {deepEqual( Stem("blomstermångleri"), "blomstermångleri");});
test("blomsterrabatter -> blomsterrabat", function() {deepEqual( Stem("blomsterrabatter"), "blomsterrabat");});
test("blomsterrabatterna -> blomsterrabat", function() {deepEqual( Stem("blomsterrabatterna"), "blomsterrabat");});
test("blomsterskörden -> blomsterskörd", function() {deepEqual( Stem("blomsterskörden"), "blomsterskörd");});
test("blomsterskötsel -> blomsterskötsel", function() {deepEqual( Stem("blomsterskötsel"), "blomsterskötsel");});
test("blomsterskötseln -> blomsterskötseln", function() {deepEqual( Stem("blomsterskötseln"), "blomsterskötseln");});
test("blomsterslag -> blomsterslag", function() {deepEqual( Stem("blomsterslag"), "blomsterslag");});
test("blomstersträng -> blomstersträng", function() {deepEqual( Stem("blomstersträng"), "blomstersträng");});
test("blomsterstänglar -> blomsterstängl", function() {deepEqual( Stem("blomsterstänglar"), "blomsterstängl");});
test("blomsterstånd -> blomsterstånd", function() {deepEqual( Stem("blomsterstånd"), "blomsterstånd");});
test("blomstersäden -> blomstersäd", function() {deepEqual( Stem("blomstersäden"), "blomstersäd");});
test("blomstertid -> blomstertid", function() {deepEqual( Stem("blomstertid"), "blomstertid");});
test("blomsterängar -> blomsteräng", function() {deepEqual( Stem("blomsterängar"), "blomsteräng");});
test("blomstra -> blomstr", function() {deepEqual( Stem("blomstra"), "blomstr");});
test("blomstrade -> blomstr", function() {deepEqual( Stem("blomstrade"), "blomstr");});
test("blomstrand -> blomstrand", function() {deepEqual( Stem("blomstrand"), "blomstrand");});
test("blomstrande -> blomstr", function() {deepEqual( Stem("blomstrande"), "blomstr");});
test("blomstras -> blomstr", function() {deepEqual( Stem("blomstras"), "blomstr");});
test("blomstrat -> blomstr", function() {deepEqual( Stem("blomstrat"), "blomstr");});
test("blomstren -> blomstr", function() {deepEqual( Stem("blomstren"), "blomstr");});
test("blomvaserna -> blomvas", function() {deepEqual( Stem("blomvaserna"), "blomvas");});
test("blond -> blond", function() {deepEqual( Stem("blond"), "blond");});
test("blonda -> blond", function() {deepEqual( Stem("blonda"), "blond");});
test("blonde -> blond", function() {deepEqual( Stem("blonde"), "blond");});
test("blonder -> blond", function() {deepEqual( Stem("blonder"), "blond");});
test("blondermössa -> blondermöss", function() {deepEqual( Stem("blondermössa"), "blondermöss");});
test("blondin -> blondin", function() {deepEqual( Stem("blondin"), "blondin");});
test("blont -> blont", function() {deepEqual( Stem("blont"), "blont");});
test("bloss -> bloss", function() {deepEqual( Stem("bloss"), "bloss");});
test("blossa -> bloss", function() {deepEqual( Stem("blossa"), "bloss");});
test("blossade -> bloss", function() {deepEqual( Stem("blossade"), "bloss");});
test("blossande -> bloss", function() {deepEqual( Stem("blossande"), "bloss");});
test("blossen -> bloss", function() {deepEqual( Stem("blossen"), "bloss");});
test("blossens -> bloss", function() {deepEqual( Stem("blossens"), "bloss");});
test("blott -> blott", function() {deepEqual( Stem("blott"), "blott");});
test("blotta -> blott", function() {deepEqual( Stem("blotta"), "blott");});
test("blottad -> blott", function() {deepEqual( Stem("blottad"), "blott");});
test("blottade -> blott", function() {deepEqual( Stem("blottade"), "blott");});
test("blottat -> blott", function() {deepEqual( Stem("blottat"), "blott");});
test("blottstäld -> blottstäld", function() {deepEqual( Stem("blottstäld"), "blottstäld");});
test("blottställa -> blottställ", function() {deepEqual( Stem("blottställa"), "blottställ");});
test("blottställd -> blottställd", function() {deepEqual( Stem("blottställd"), "blottställd");});
test("blottställde -> blottställd", function() {deepEqual( Stem("blottställde"), "blottställd");});
test("blottställer -> blottställ", function() {deepEqual( Stem("blottställer"), "blottställ");});
test("blou -> blou", function() {deepEqual( Stem("blou"), "blou");});
test("blstert -> blstert", function() {deepEqual( Stem("blstert"), "blstert");});
test("blume -> blum", function() {deepEqual( Stem("blume"), "blum");});
test("blumstedt -> blumsted", function() {deepEqual( Stem("blumstedt"), "blumsted");});
test("blumstedts -> blumsted", function() {deepEqual( Stem("blumstedts"), "blumsted");});
test("blund -> blund", function() {deepEqual( Stem("blund"), "blund");});
test("blunda -> blund", function() {deepEqual( Stem("blunda"), "blund");});
test("blundade -> blund", function() {deepEqual( Stem("blundade"), "blund");});
test("blundande -> blund", function() {deepEqual( Stem("blundande"), "blund");});
test("blundar -> blund", function() {deepEqual( Stem("blundar"), "blund");});
test("blus -> blus", function() {deepEqual( Stem("blus"), "blus");});
test("blusen -> blus", function() {deepEqual( Stem("blusen"), "blus");});
test("blusliv -> blusliv", function() {deepEqual( Stem("blusliv"), "blusliv");});
test("bluslivet -> bluslivet", function() {deepEqual( Stem("bluslivet"), "bluslivet");});
test("bly -> bly", function() {deepEqual( Stem("bly"), "bly");});
test("blyertspenna -> blyertspen", function() {deepEqual( Stem("blyertspenna"), "blyertspen");});
test("blyg -> blyg", function() {deepEqual( Stem("blyg"), "blyg");});
test("blyga -> blyg", function() {deepEqual( Stem("blyga"), "blyg");});
test("blygas -> blyg", function() {deepEqual( Stem("blygas"), "blyg");});
test("blygdes -> blygd", function() {deepEqual( Stem("blygdes"), "blygd");});
test("blyghet -> blyg", function() {deepEqual( Stem("blyghet"), "blyg");});
test("blygheten -> blyg", function() {deepEqual( Stem("blygheten"), "blyg");});
test("blygs -> blyg", function() {deepEqual( Stem("blygs"), "blyg");});
test("blygsam -> blygsam", function() {deepEqual( Stem("blygsam"), "blygsam");});
test("blygsamhet -> blygsam", function() {deepEqual( Stem("blygsamhet"), "blygsam");});
test("blygsamheten -> blygsam", function() {deepEqual( Stem("blygsamheten"), "blygsam");});
test("blygsamhetens -> blygsam", function() {deepEqual( Stem("blygsamhetens"), "blygsam");});
test("blygsamma -> blygsamm", function() {deepEqual( Stem("blygsamma"), "blygsamm");});
test("blygsamt -> blygsamt", function() {deepEqual( Stem("blygsamt"), "blygsamt");});
test("blygsel -> blygsel", function() {deepEqual( Stem("blygsel"), "blygsel");});
test("blygselkänsla -> blygselkänsl", function() {deepEqual( Stem("blygselkänsla"), "blygselkänsl");});
test("blygselkänslan -> blygselkänslan", function() {deepEqual( Stem("blygselkänslan"), "blygselkänslan");});
test("blygselrodnad -> blygselrodn", function() {deepEqual( Stem("blygselrodnad"), "blygselrodn");});
test("blygt -> blygt", function() {deepEqual( Stem("blygt"), "blygt");});
test("blygts -> blygt", function() {deepEqual( Stem("blygts"), "blygt");});
test("blyhagel -> blyhagel", function() {deepEqual( Stem("blyhagel"), "blyhagel");});
test("blyn -> blyn", function() {deepEqual( Stem("blyn"), "blyn");});
test("bläcka -> bläck", function() {deepEqual( Stem("bläcka"), "bläck");});
test("bläcket -> bläcket", function() {deepEqual( Stem("bläcket"), "bläcket");});
test("bläckfläckar -> bläckfläck", function() {deepEqual( Stem("bläckfläckar"), "bläckfläck");});
test("bläcksvart -> bläcksvart", function() {deepEqual( Stem("bläcksvart"), "bläcksvart");});
test("bläddra -> bläddr", function() {deepEqual( Stem("bläddra"), "bläddr");});
test("bläddrade -> bläddr", function() {deepEqual( Stem("bläddrade"), "bläddr");});
test("bläddrande -> bläddr", function() {deepEqual( Stem("bläddrande"), "bläddr");});
test("bländad -> bländ", function() {deepEqual( Stem("bländad"), "bländ");});
test("bländade -> bländ", function() {deepEqual( Stem("bländade"), "bländ");});
test("bländande -> bländ", function() {deepEqual( Stem("bländande"), "bländ");});
test("blänk -> blänk", function() {deepEqual( Stem("blänk"), "blänk");});
test("blänka -> blänk", function() {deepEqual( Stem("blänka"), "blänk");});
test("blänkande -> blänk", function() {deepEqual( Stem("blänkande"), "blänk");});
test("blänker -> blänk", function() {deepEqual( Stem("blänker"), "blänk");});
test("blänkt -> blänk", function() {deepEqual( Stem("blänkt"), "blänk");});
test("blänkte -> blänk", function() {deepEqual( Stem("blänkte"), "blänk");});
test("blära -> blär", function() {deepEqual( Stem("blära"), "blär");});
test("blästern -> bläst", function() {deepEqual( Stem("blästern"), "bläst");});
test("blå -> blå", function() {deepEqual( Stem("blå"), "blå");});
test("blåa -> blåa", function() {deepEqual( Stem("blåa"), "blåa");});
test("blåblick -> blåblick", function() {deepEqual( Stem("blåblick"), "blåblick");});
test("blågredelina -> blågredelin", function() {deepEqual( Stem("blågredelina"), "blågredelin");});
test("blåklocka -> blåklock", function() {deepEqual( Stem("blåklocka"), "blåklock");});
test("blåklockor -> blåklock", function() {deepEqual( Stem("blåklockor"), "blåklock");});
test("blåklädd -> blåkläd", function() {deepEqual( Stem("blåklädd"), "blåkläd");});
test("blåmålade -> blåmål", function() {deepEqual( Stem("blåmålade"), "blåmål");});
test("blånade -> blån", function() {deepEqual( Stem("blånade"), "blån");});
test("blånande -> blån", function() {deepEqual( Stem("blånande"), "blån");});
test("blånar -> blån", function() {deepEqual( Stem("blånar"), "blån");});
test("blånat -> blån", function() {deepEqual( Stem("blånat"), "blån");});
test("blår -> blår", function() {deepEqual( Stem("blår"), "blår");});
test("blårandiga -> blårand", function() {deepEqual( Stem("blårandiga"), "blårand");});
test("blårött -> blåröt", function() {deepEqual( Stem("blårött"), "blåröt");});
test("blås -> blås", function() {deepEqual( Stem("blås"), "blås");});
test("blåsa -> blås", function() {deepEqual( Stem("blåsa"), "blås");});
test("blåsande -> blås", function() {deepEqual( Stem("blåsande"), "blås");});
test("blåser -> blås", function() {deepEqual( Stem("blåser"), "blås");});
test("blåsig -> blås", function() {deepEqual( Stem("blåsig"), "blås");});
test("blåsor -> blås", function() {deepEqual( Stem("blåsor"), "blås");});
test("blåst -> blåst", function() {deepEqual( Stem("blåst"), "blåst");});
test("blåsta -> blåst", function() {deepEqual( Stem("blåsta"), "blåst");});
test("blåste -> blåst", function() {deepEqual( Stem("blåste"), "blåst");});
test("blåsten -> blåst", function() {deepEqual( Stem("blåsten"), "blåst");});
test("blåsyra -> blåsyr", function() {deepEqual( Stem("blåsyra"), "blåsyr");});
test("blåsyran -> blåsyran", function() {deepEqual( Stem("blåsyran"), "blåsyran");});
test("blått -> blått", function() {deepEqual( Stem("blått"), "blått");});
test("blåådrade -> blåådr", function() {deepEqual( Stem("blåådrade"), "blåådr");});
test("blöda -> blöd", function() {deepEqual( Stem("blöda"), "blöd");});
test("blödande -> blöd", function() {deepEqual( Stem("blödande"), "blöd");});
test("blödde -> blödd", function() {deepEqual( Stem("blödde"), "blödd");});
test("blöder -> blöd", function() {deepEqual( Stem("blöder"), "blöd");});
test("blödig -> blöd", function() {deepEqual( Stem("blödig"), "blöd");});
test("blödiga -> blöd", function() {deepEqual( Stem("blödiga"), "blöd");});
test("blöjor -> blöj", function() {deepEqual( Stem("blöjor"), "blöj");});
test("blöta -> blöt", function() {deepEqual( Stem("blöta"), "blöt");});
test("blött -> blött", function() {deepEqual( Stem("blött"), "blött");});
test("bo -> bo", function() {deepEqual( Stem("bo"), "bo");});
test("boa -> boa", function() {deepEqual( Stem("boa"), "boa");});
test("boan -> boan", function() {deepEqual( Stem("boan"), "boan");});
test("bock -> bock", function() {deepEqual( Stem("bock"), "bock");});
test("bocka -> bock", function() {deepEqual( Stem("bocka"), "bock");});
test("bockade -> bock", function() {deepEqual( Stem("bockade"), "bock");});
test("bockar -> bock", function() {deepEqual( Stem("bockar"), "bock");});
test("bocken -> bock", function() {deepEqual( Stem("bocken"), "bock");});
test("bocktörnet -> bocktörnet", function() {deepEqual( Stem("bocktörnet"), "bocktörnet");});
test("bod -> bod", function() {deepEqual( Stem("bod"), "bod");});
test("bodarna -> bod", function() {deepEqual( Stem("bodarna"), "bod");});
test("bodarnes -> bodarn", function() {deepEqual( Stem("bodarnes"), "bodarn");});
test("bodbetjänt -> bodbetjänt", function() {deepEqual( Stem("bodbetjänt"), "bodbetjänt");});
test("bodbetjänten -> bodbetjänt", function() {deepEqual( Stem("bodbetjänten"), "bodbetjänt");});
test("bodbitrade -> bodbitr", function() {deepEqual( Stem("bodbitrade"), "bodbitr");});
test("bodde -> bodd", function() {deepEqual( Stem("bodde"), "bodd");});
test("boddonjuan -> boddonjuan", function() {deepEqual( Stem("boddonjuan"), "boddonjuan");});
test("boden -> bod", function() {deepEqual( Stem("boden"), "bod");});
test("bodfröken -> bodfrök", function() {deepEqual( Stem("bodfröken"), "bodfrök");});
test("bodfönster -> bodfönst", function() {deepEqual( Stem("bodfönster"), "bodfönst");});
test("bodkammaren -> bodkamm", function() {deepEqual( Stem("bodkammaren"), "bodkamm");});
test("bodkammarn -> bodkammarn", function() {deepEqual( Stem("bodkammarn"), "bodkammarn");});
test("bodknodden -> bodknod", function() {deepEqual( Stem("bodknodden"), "bodknod");});
test("boende -> boend", function() {deepEqual( Stem("boende"), "boend");});
test("boet -> boet", function() {deepEqual( Stem("boet"), "boet");});
test("boett -> boett", function() {deepEqual( Stem("boett"), "boett");});
test("boetten -> boett", function() {deepEqual( Stem("boetten"), "boett");});
test("bofast -> bof", function() {deepEqual( Stem("bofast"), "bof");});
test("bog -> bog", function() {deepEqual( Stem("bog"), "bog");});
test("bogen -> bog", function() {deepEqual( Stem("bogen"), "bog");});
test("bohaget -> bohaget", function() {deepEqual( Stem("bohaget"), "bohaget");});
test("bohuslänningen -> bohuslänning", function() {deepEqual( Stem("bohuslänningen"), "bohuslänning");});
test("bohusläns -> bohuslän", function() {deepEqual( Stem("bohusläns"), "bohuslän");});
test("bohuslänska -> bohuslänsk", function() {deepEqual( Stem("bohuslänska"), "bohuslänsk");});
test("bohuslänske -> bohuslänsk", function() {deepEqual( Stem("bohuslänske"), "bohuslänsk");});
test("boja -> boj", function() {deepEqual( Stem("boja"), "boj");});
test("bojt -> bojt", function() {deepEqual( Stem("bojt"), "bojt");});
test("bok -> bok", function() {deepEqual( Stem("bok"), "bok");});
test("boken -> bok", function() {deepEqual( Stem("boken"), "bok");});
test("bokens -> bok", function() {deepEqual( Stem("bokens"), "bok");});
test("bokföring -> bokföring", function() {deepEqual( Stem("bokföring"), "bokföring");});
test("bokhylla -> bokhyll", function() {deepEqual( Stem("bokhylla"), "bokhyll");});
test("bokhyllan -> bokhyllan", function() {deepEqual( Stem("bokhyllan"), "bokhyllan");});
test("bokhyllor -> bokhyll", function() {deepEqual( Stem("bokhyllor"), "bokhyll");});
test("bokhyllorna -> bokhyll", function() {deepEqual( Stem("bokhyllorna"), "bokhyll");});
test("bokna -> bokn", function() {deepEqual( Stem("bokna"), "bokn");});
test("bokskåp -> bokskåp", function() {deepEqual( Stem("bokskåp"), "bokskåp");});
test("bokskåpet -> bokskåpet", function() {deepEqual( Stem("bokskåpet"), "bokskåpet");});
test("bokstaf -> bokstaf", function() {deepEqual( Stem("bokstaf"), "bokstaf");});
test("bokstafven -> bokstafv", function() {deepEqual( Stem("bokstafven"), "bokstafv");});
test("bokstav -> bokstav", function() {deepEqual( Stem("bokstav"), "bokstav");});
test("bokstaven -> bokstav", function() {deepEqual( Stem("bokstaven"), "bokstav");});
test("bokstavlig -> bokstav", function() {deepEqual( Stem("bokstavlig"), "bokstav");});
test("bokstavligen -> bokstav", function() {deepEqual( Stem("bokstavligen"), "bokstav");});
test("bokstäver -> bokstäv", function() {deepEqual( Stem("bokstäver"), "bokstäv");});
test("boktryckare -> boktryck", function() {deepEqual( Stem("boktryckare"), "boktryck");});
test("bokvett -> bokvet", function() {deepEqual( Stem("bokvett"), "bokvet");});
test("bolag -> bolag", function() {deepEqual( Stem("bolag"), "bolag");});
test("bolagsdirektör -> bolagsdirektör", function() {deepEqual( Stem("bolagsdirektör"), "bolagsdirektör");});
test("bolagsdirektörn -> bolagsdirektörn", function() {deepEqual( Stem("bolagsdirektörn"), "bolagsdirektörn");});
test("bolares -> bolar", function() {deepEqual( Stem("bolares"), "bolar");});
test("bolat -> bol", function() {deepEqual( Stem("bolat"), "bol");});
test("boleriska -> bolerisk", function() {deepEqual( Stem("boleriska"), "bolerisk");});
test("boll -> boll", function() {deepEqual( Stem("boll"), "boll");});
test("bolsterhöljda -> bolsterhöljd", function() {deepEqual( Stem("bolsterhöljda"), "bolsterhöljd");});
test("bom -> bom", function() {deepEqual( Stem("bom"), "bom");});
test("bomb -> bomb", function() {deepEqual( Stem("bomb"), "bomb");});
test("bombasinsförkläde -> bombasinsförkläd", function() {deepEqual( Stem("bombasinsförkläde"), "bombasinsförkläd");});
test("bombasinsklänningar -> bombasinsklänning", function() {deepEqual( Stem("bombasinsklänningar"), "bombasinsklänning");});
test("bombasm -> bombasm", function() {deepEqual( Stem("bombasm"), "bombasm");});
test("bomber -> bomb", function() {deepEqual( Stem("bomber"), "bomb");});
test("boms -> bom", function() {deepEqual( Stem("boms"), "bom");});
test("bomull -> bomull", function() {deepEqual( Stem("bomull"), "bomull");});
test("bomullen -> bomull", function() {deepEqual( Stem("bomullen"), "bomull");});
test("bomullschalen -> bomullschal", function() {deepEqual( Stem("bomullschalen"), "bomullschal");});
test("bomullsgardiner -> bomullsgardin", function() {deepEqual( Stem("bomullsgardiner"), "bomullsgardin");});
test("bomullskläder -> bomullskläd", function() {deepEqual( Stem("bomullskläder"), "bomullskläd");});
test("bomullsklänning -> bomullsklänning", function() {deepEqual( Stem("bomullsklänning"), "bomullsklänning");});
test("bomullsklänningarna -> bomullsklänning", function() {deepEqual( Stem("bomullsklänningarna"), "bomullsklänning");});
test("bomullsklänningen -> bomullsklänning", function() {deepEqual( Stem("bomullsklänningen"), "bomullsklänning");});
test("bomullslärftsgardiner -> bomullslärftsgardin", function() {deepEqual( Stem("bomullslärftsgardiner"), "bomullslärftsgardin");});
test("bomullsparaply -> bomullsparaply", function() {deepEqual( Stem("bomullsparaply"), "bomullsparaply");});
test("bomullsplagg -> bomullsplagg", function() {deepEqual( Stem("bomullsplagg"), "bomullsplagg");});
test("bomullssammet -> bomullssammet", function() {deepEqual( Stem("bomullssammet"), "bomullssammet");});
test("bomullsschal -> bomullsschal", function() {deepEqual( Stem("bomullsschal"), "bomullsschal");});
test("bomullsschalen -> bomullsschal", function() {deepEqual( Stem("bomullsschalen"), "bomullsschal");});
test("bomullsstrumpor -> bomullsstrump", function() {deepEqual( Stem("bomullsstrumpor"), "bomullsstrump");});
test("bomullsstrumporna -> bomullsstrump", function() {deepEqual( Stem("bomullsstrumporna"), "bomullsstrump");});
test("bon -> bon", function() {deepEqual( Stem("bon"), "bon");});
test("bonat -> bon", function() {deepEqual( Stem("bonat"), "bon");});
test("bonddräng -> bonddräng", function() {deepEqual( Stem("bonddräng"), "bonddräng");});
test("bonddöttrarna -> bonddöttr", function() {deepEqual( Stem("bonddöttrarna"), "bonddöttr");});
test("bonde -> bond", function() {deepEqual( Stem("bonde"), "bond");});
test("bonden -> bond", function() {deepEqual( Stem("bonden"), "bond");});
test("bondenamn -> bondenamn", function() {deepEqual( Stem("bondenamn"), "bondenamn");});
test("bondens -> bond", function() {deepEqual( Stem("bondens"), "bond");});
test("bonderomaner -> bonderoman", function() {deepEqual( Stem("bonderomaner"), "bonderoman");});
test("bondesjäl -> bondesjäl", function() {deepEqual( Stem("bondesjäl"), "bondesjäl");});
test("bondeska -> bondesk", function() {deepEqual( Stem("bondeska"), "bondesk");});
test("bondeståndet -> bondeståndet", function() {deepEqual( Stem("bondeståndet"), "bondeståndet");});
test("bondflicka -> bondflick", function() {deepEqual( Stem("bondflicka"), "bondflick");});
test("bondflickan -> bondflickan", function() {deepEqual( Stem("bondflickan"), "bondflickan");});
test("bondflickans -> bondflickan", function() {deepEqual( Stem("bondflickans"), "bondflickan");});
test("bondflickor -> bondflick", function() {deepEqual( Stem("bondflickor"), "bondflick");});
test("bondflickorna -> bondflick", function() {deepEqual( Stem("bondflickorna"), "bondflick");});
test("bondflickornas -> bondflick", function() {deepEqual( Stem("bondflickornas"), "bondflick");});
test("bondfolket -> bondfolket", function() {deepEqual( Stem("bondfolket"), "bondfolket");});
test("bondgummorna -> bondgumm", function() {deepEqual( Stem("bondgummorna"), "bondgumm");});
test("bondhustru -> bondhustru", function() {deepEqual( Stem("bondhustru"), "bondhustru");});
test("bondkvinnas -> bondkvin", function() {deepEqual( Stem("bondkvinnas"), "bondkvin");});
test("bondkvinnor -> bondkvin", function() {deepEqual( Stem("bondkvinnor"), "bondkvin");});
test("bondkärran -> bondkärran", function() {deepEqual( Stem("bondkärran"), "bondkärran");});
test("bonemotet -> bonemotet", function() {deepEqual( Stem("bonemotet"), "bonemotet");});
test("bonhomie -> bonhomi", function() {deepEqual( Stem("bonhomie"), "bonhomi");});
test("boning -> boning", function() {deepEqual( Stem("boning"), "boning");});
test("boningar -> boning", function() {deepEqual( Stem("boningar"), "boning");});
test("boningsrum -> boningsrum", function() {deepEqual( Stem("boningsrum"), "boningsrum");});
test("bonjour -> bonjour", function() {deepEqual( Stem("bonjour"), "bonjour");});
test("bonjourer -> bonjour", function() {deepEqual( Stem("bonjourer"), "bonjour");});
test("bonjourliknande -> bonjourlikn", function() {deepEqual( Stem("bonjourliknande"), "bonjourlikn");});
test("bonjur -> bonjur", function() {deepEqual( Stem("bonjur"), "bonjur");});
test("bonom -> bonom", function() {deepEqual( Stem("bonom"), "bonom");});
test("bopfällda -> bopfälld", function() {deepEqual( Stem("bopfällda"), "bopfälld");});
test("bor -> bor", function() {deepEqual( Stem("bor"), "bor");});
test("bora -> bor", function() {deepEqual( Stem("bora"), "bor");});
test("borag -> borag", function() {deepEqual( Stem("borag"), "borag");});
test("bord -> bord", function() {deepEqual( Stem("bord"), "bord");});
test("bordduken -> bordduk", function() {deepEqual( Stem("bordduken"), "bordduk");});
test("borde -> bord", function() {deepEqual( Stem("borde"), "bord");});
test("bordel -> bordel", function() {deepEqual( Stem("bordel"), "bordel");});
test("borden -> bord", function() {deepEqual( Stem("borden"), "bord");});
test("bordet -> bordet", function() {deepEqual( Stem("bordet"), "bordet");});
test("bords -> bord", function() {deepEqual( Stem("bords"), "bord");});
test("bordsbön -> bordsbön", function() {deepEqual( Stem("bordsbön"), "bordsbön");});
test("bordsbönen -> bordsbön", function() {deepEqual( Stem("bordsbönen"), "bordsbön");});
test("bordskamrat -> bordskamr", function() {deepEqual( Stem("bordskamrat"), "bordskamr");});
test("bordskanten -> bordskant", function() {deepEqual( Stem("bordskanten"), "bordskant");});
test("bordskifva -> bordskifv", function() {deepEqual( Stem("bordskifva"), "bordskifv");});
test("bordskifvan -> bordskifvan", function() {deepEqual( Stem("bordskifvan"), "bordskifvan");});
test("bordstudsaren -> bordstuds", function() {deepEqual( Stem("bordstudsaren"), "bordstuds");});
test("bordsänden -> bordsänd", function() {deepEqual( Stem("bordsänden"), "bordsänd");});
test("bordun -> bordun", function() {deepEqual( Stem("bordun"), "bordun");});
test("borg -> borg", function() {deepEqual( Stem("borg"), "borg");});
test("borgade -> borg", function() {deepEqual( Stem("borgade"), "borg");});
test("borgare -> borg", function() {deepEqual( Stem("borgare"), "borg");});
test("borgarfolk -> borgarfolk", function() {deepEqual( Stem("borgarfolk"), "borgarfolk");});
test("borgarhus -> borgarhus", function() {deepEqual( Stem("borgarhus"), "borgarhus");});
test("borgat -> borg", function() {deepEqual( Stem("borgat"), "borg");});
test("borgen -> borg", function() {deepEqual( Stem("borgen"), "borg");});
test("borgerlig -> borger", function() {deepEqual( Stem("borgerlig"), "borger");});
test("borgerliga -> borger", function() {deepEqual( Stem("borgerliga"), "borger");});
test("borgerligt -> borger", function() {deepEqual( Stem("borgerligt"), "borger");});
test("borgmästare -> borgmäst", function() {deepEqual( Stem("borgmästare"), "borgmäst");});
test("borgmästaren -> borgmäst", function() {deepEqual( Stem("borgmästaren"), "borgmäst");});
test("borgmästarns -> borgmästarn", function() {deepEqual( Stem("borgmästarns"), "borgmästarn");});
test("borjade -> borj", function() {deepEqual( Stem("borjade"), "borj");});
test("borrade -> borr", function() {deepEqual( Stem("borrade"), "borr");});
test("borrades -> borr", function() {deepEqual( Stem("borrades"), "borr");});
test("borrande -> borr", function() {deepEqual( Stem("borrande"), "borr");});
test("borrat -> borr", function() {deepEqual( Stem("borrat"), "borr");});
test("borsta -> borst", function() {deepEqual( Stem("borsta"), "borst");});
test("borstade -> borst", function() {deepEqual( Stem("borstade"), "borst");});
test("borstades -> borst", function() {deepEqual( Stem("borstades"), "borst");});
test("borstar -> borst", function() {deepEqual( Stem("borstar"), "borst");});
test("borste -> borst", function() {deepEqual( Stem("borste"), "borst");});
test("borsten -> borst", function() {deepEqual( Stem("borsten"), "borst");});
test("borstning -> borstning", function() {deepEqual( Stem("borstning"), "borstning");});
test("bort -> bort", function() {deepEqual( Stem("bort"), "bort");});
test("borta -> bort", function() {deepEqual( Stem("borta"), "bort");});
test("bortbjuden -> bortbjud", function() {deepEqual( Stem("bortbjuden"), "bortbjud");});
test("bortblåst -> bortblåst", function() {deepEqual( Stem("bortblåst"), "bortblåst");});
test("bortblåsta -> bortblåst", function() {deepEqual( Stem("bortblåsta"), "bortblåst");});
test("bortbyta -> bortbyt", function() {deepEqual( Stem("bortbyta"), "bortbyt");});
test("bortbytt -> bortbyt", function() {deepEqual( Stem("bortbytt"), "bortbyt");});
test("bortdog -> bortdog", function() {deepEqual( Stem("bortdog"), "bortdog");});
test("bortdöende -> bortdöend", function() {deepEqual( Stem("bortdöende"), "bortdöend");});
test("bortföres -> bortför", function() {deepEqual( Stem("bortföres"), "bortför");});
test("bortfört -> bortfört", function() {deepEqual( Stem("bortfört"), "bortfört");});
test("bortgingo -> bortgingo", function() {deepEqual( Stem("bortgingo"), "bortgingo");});
test("bortglömda -> bortglömd", function() {deepEqual( Stem("bortglömda"), "bortglömd");});
test("bortglömt -> bortglömt", function() {deepEqual( Stem("bortglömt"), "bortglömt");});
test("bortgång -> bortgång", function() {deepEqual( Stem("bortgång"), "bortgång");});
test("bortgångne -> bortgångn", function() {deepEqual( Stem("bortgångne"), "bortgångn");});
test("bortifran -> bortifran", function() {deepEqual( Stem("bortifran"), "bortifran");});
test("bortifrån -> bortifrån", function() {deepEqual( Stem("bortifrån"), "bortifrån");});
test("bortilande -> bortil", function() {deepEqual( Stem("bortilande"), "bortil");});
test("bortkastade -> bortkast", function() {deepEqual( Stem("bortkastade"), "bortkast");});
test("bortkelade -> bortkel", function() {deepEqual( Stem("bortkelade"), "bortkel");});
test("bortlade -> bortl", function() {deepEqual( Stem("bortlade"), "bortl");});
test("bortnöta -> bortnöt", function() {deepEqual( Stem("bortnöta"), "bortnöt");});
test("bortnött -> bortnöt", function() {deepEqual( Stem("bortnött"), "bortnöt");});
test("bortom -> bortom", function() {deepEqual( Stem("bortom"), "bortom");});
test("bortprata -> bortprat", function() {deepEqual( Stem("bortprata"), "bortprat");});
test("bortpratade -> bortprat", function() {deepEqual( Stem("bortpratade"), "bortprat");});
test("bortre -> bortr", function() {deepEqual( Stem("bortre"), "bortr");});
test("bortresa -> bortres", function() {deepEqual( Stem("bortresa"), "bortres");});
test("bortresta -> bortrest", function() {deepEqual( Stem("bortresta"), "bortrest");});
test("bortsatt -> bortsat", function() {deepEqual( Stem("bortsatt"), "bortsat");});
test("bortschasad -> bortschas", function() {deepEqual( Stem("bortschasad"), "bortschas");});
test("bortse -> borts", function() {deepEqual( Stem("bortse"), "borts");});
test("bortskaffa -> bortskaff", function() {deepEqual( Stem("bortskaffa"), "bortskaff");});
test("bortskymd -> bortskymd", function() {deepEqual( Stem("bortskymd"), "bortskymd");});
test("bortskyndande -> bortskynd", function() {deepEqual( Stem("bortskyndande"), "bortskynd");});
test("bortskämd -> bortskämd", function() {deepEqual( Stem("bortskämd"), "bortskämd");});
test("bortskämda -> bortskämd", function() {deepEqual( Stem("bortskämda"), "bortskämd");});
test("bortskämdt -> bortskämd", function() {deepEqual( Stem("bortskämdt"), "bortskämd");});
test("bortskämt -> bortskämt", function() {deepEqual( Stem("bortskämt"), "bortskämt");});
test("bortsköt -> bortsköt", function() {deepEqual( Stem("bortsköt"), "bortsköt");});
test("bortslitma -> bortslitm", function() {deepEqual( Stem("bortslitma"), "bortslitm");});
test("bortsnappat -> bortsnapp", function() {deepEqual( Stem("bortsnappat"), "bortsnapp");});
test("bortsopade -> bortsop", function() {deepEqual( Stem("bortsopade"), "bortsop");});
test("bortspoladt -> bortspolad", function() {deepEqual( Stem("bortspoladt"), "bortspolad");});
test("bortstjäla -> bortstjäl", function() {deepEqual( Stem("bortstjäla"), "bortstjäl");});
test("bortsväva -> bortsväv", function() {deepEqual( Stem("bortsväva"), "bortsväv");});
test("borttaga -> borttag", function() {deepEqual( Stem("borttaga"), "borttag");});
test("borttappad -> borttapp", function() {deepEqual( Stem("borttappad"), "borttapp");});
test("borttappade -> borttapp", function() {deepEqual( Stem("borttappade"), "borttapp");});
test("borttorka -> borttork", function() {deepEqual( Stem("borttorka"), "borttork");});
test("borttorkade -> borttork", function() {deepEqual( Stem("borttorkade"), "borttork");});
test("bortvända -> bortvänd", function() {deepEqual( Stem("bortvända"), "bortvänd");});
test("bortvände -> bortvänd", function() {deepEqual( Stem("bortvände"), "bortvänd");});
test("bortvänt -> bortvänt", function() {deepEqual( Stem("bortvänt"), "bortvänt");});
test("bortåt -> bortåt", function() {deepEqual( Stem("bortåt"), "bortåt");});
test("boshdem -> boshdem", function() {deepEqual( Stem("boshdem"), "boshdem");});
test("boskap -> boskap", function() {deepEqual( Stem("boskap"), "boskap");});
test("boskapen -> boskap", function() {deepEqual( Stem("boskapen"), "boskap");});
test("boskapens -> boskap", function() {deepEqual( Stem("boskapens"), "boskap");});
test("bostad -> bost", function() {deepEqual( Stem("bostad"), "bost");});
test("bostaden -> bostad", function() {deepEqual( Stem("bostaden"), "bostad");});
test("bostäder -> bostäd", function() {deepEqual( Stem("bostäder"), "bostäd");});
test("bosättning -> bosättning", function() {deepEqual( Stem("bosättning"), "bosättning");});
test("bot -> bot", function() {deepEqual( Stem("bot"), "bot");});
test("bota -> bot", function() {deepEqual( Stem("bota"), "bot");});
test("botaniken -> botanik", function() {deepEqual( Stem("botaniken"), "botanik");});
test("botar -> bot", function() {deepEqual( Stem("botar"), "bot");});
test("botfärdiga -> botfärd", function() {deepEqual( Stem("botfärdiga"), "botfärd");});
test("botofter -> botoft", function() {deepEqual( Stem("botofter"), "botoft");});
test("botpredikanten -> botpredikant", function() {deepEqual( Stem("botpredikanten"), "botpredikant");});
test("bott -> bott", function() {deepEqual( Stem("bott"), "bott");});
test("botten -> bott", function() {deepEqual( Stem("botten"), "bott");});
test("bottenfock -> bottenfock", function() {deepEqual( Stem("bottenfock"), "bottenfock");});
test("bottenrefvadt -> bottenrefvad", function() {deepEqual( Stem("bottenrefvadt"), "bottenrefvad");});
test("bottnen -> bottn", function() {deepEqual( Stem("bottnen"), "bottn");});
test("boulangermarschen -> boulangermarsch", function() {deepEqual( Stem("boulangermarschen"), "boulangermarsch");});
test("bourgogne -> bourgogn", function() {deepEqual( Stem("bourgogne"), "bourgogn");});
test("boven -> bov", function() {deepEqual( Stem("boven"), "bov");});
test("bra -> bra", function() {deepEqual( Stem("bra"), "bra");});
test("bradska -> bradsk", function() {deepEqual( Stem("bradska"), "bradsk");});
test("bragden -> bragd", function() {deepEqual( Stem("bragden"), "bragd");});
test("bragder -> bragd", function() {deepEqual( Stem("bragder"), "bragd");});
test("bragt -> bragt", function() {deepEqual( Stem("bragt"), "bragt");});
test("bragte -> bragt", function() {deepEqual( Stem("bragte"), "bragt");});
test("brakade -> brak", function() {deepEqual( Stem("brakade"), "brak");});
test("brand -> brand", function() {deepEqual( Stem("brand"), "brand");});
test("brandfärgat -> brandfärg", function() {deepEqual( Stem("brandfärgat"), "brandfärg");});
test("brandförsäkra -> brandförsäkr", function() {deepEqual( Stem("brandförsäkra"), "brandförsäkr");});
test("brandgul -> brandgul", function() {deepEqual( Stem("brandgul"), "brandgul");});
test("brann -> brann", function() {deepEqual( Stem("brann"), "brann");});
test("brant -> brant", function() {deepEqual( Stem("brant"), "brant");});
test("branta -> brant", function() {deepEqual( Stem("branta"), "brant");});
test("branten -> brant", function() {deepEqual( Stem("branten"), "brant");});
test("branter -> brant", function() {deepEqual( Stem("branter"), "brant");});
test("branting -> branting", function() {deepEqual( Stem("branting"), "branting");});
test("brasa -> bras", function() {deepEqual( Stem("brasa"), "bras");});
test("brasan -> brasan", function() {deepEqual( Stem("brasan"), "brasan");});
test("brasans -> brasan", function() {deepEqual( Stem("brasans"), "brasan");});
test("brasglöd -> brasglöd", function() {deepEqual( Stem("brasglöd"), "brasglöd");});
test("braska -> brask", function() {deepEqual( Stem("braska"), "brask");});
test("brasorna -> bras", function() {deepEqual( Stem("brasorna"), "bras");});
test("brast -> brast", function() {deepEqual( Stem("brast"), "brast");});
test("brattom -> brattom", function() {deepEqual( Stem("brattom"), "brattom");});
test("braun -> braun", function() {deepEqual( Stem("braun"), "braun");});
test("braverat -> braver", function() {deepEqual( Stem("braverat"), "braver");});
test("braxenpanka -> braxenpank", function() {deepEqual( Stem("braxenpanka"), "braxenpank");});
test("bred -> bred", function() {deepEqual( Stem("bred"), "bred");});
test("breda -> bred", function() {deepEqual( Stem("breda"), "bred");});
test("bredare -> bred", function() {deepEqual( Stem("bredare"), "bred");});
test("bredast -> bred", function() {deepEqual( Stem("bredast"), "bred");});
test("bredaxlad -> bredaxl", function() {deepEqual( Stem("bredaxlad"), "bredaxl");});
test("bredbent -> bredbent", function() {deepEqual( Stem("bredbent"), "bredbent");});
test("bredd -> bredd", function() {deepEqual( Stem("bredd"), "bredd");});
test("bredde -> bredd", function() {deepEqual( Stem("bredde"), "bredd");});
test("bredden -> bredd", function() {deepEqual( Stem("bredden"), "bredd");});
test("breden -> bred", function() {deepEqual( Stem("breden"), "bred");});
test("breder -> bred", function() {deepEqual( Stem("breder"), "bred");});
test("bredskyggig -> bredskygg", function() {deepEqual( Stem("bredskyggig"), "bredskygg");});
test("bredskörtade -> bredskört", function() {deepEqual( Stem("bredskörtade"), "bredskört");});
test("bredvi -> bredvi", function() {deepEqual( Stem("bredvi"), "bredvi");});
test("bredvid -> bredvid", function() {deepEqual( Stem("bredvid"), "bredvid");});
test("bref -> bref", function() {deepEqual( Stem("bref"), "bref");});
test("brefvet -> brefvet", function() {deepEqual( Stem("brefvet"), "brefvet");});
test("brefvets -> brefvet", function() {deepEqual( Stem("brefvets"), "brefvet");});
test("brett -> brett", function() {deepEqual( Stem("brett"), "brett");});
test("brev -> brev", function() {deepEqual( Stem("brev"), "brev");});
test("brevbärarinnans -> brevbärarinnan", function() {deepEqual( Stem("brevbärarinnans"), "brevbärarinnan");});
test("breven -> brev", function() {deepEqual( Stem("breven"), "brev");});
test("brevet -> brevet", function() {deepEqual( Stem("brevet"), "brevet");});
test("brevets -> brevet", function() {deepEqual( Stem("brevets"), "brevet");});
test("brevid -> brevid", function() {deepEqual( Stem("brevid"), "brevid");});
test("brevlådan -> brevlådan", function() {deepEqual( Stem("brevlådan"), "brevlådan");});
test("bricka -> brick", function() {deepEqual( Stem("bricka"), "brick");});
test("brickan -> brickan", function() {deepEqual( Stem("brickan"), "brickan");});
test("brigg -> brigg", function() {deepEqual( Stem("brigg"), "brigg");});
test("brikoll -> brikoll", function() {deepEqual( Stem("brikoll"), "brikoll");});
test("briljant -> briljant", function() {deepEqual( Stem("briljant"), "briljant");});
test("brin -> brin", function() {deepEqual( Stem("brin"), "brin");});
test("bring -> bring", function() {deepEqual( Stem("bring"), "bring");});
test("bringa -> bring", function() {deepEqual( Stem("bringa"), "bring");});
test("bringade -> bring", function() {deepEqual( Stem("bringade"), "bring");});
test("bringan -> bringan", function() {deepEqual( Stem("bringan"), "bringan");});
test("bringar -> bring", function() {deepEqual( Stem("bringar"), "bring");});
test("bringat -> bring", function() {deepEqual( Stem("bringat"), "bring");});
test("brinna -> brinn", function() {deepEqual( Stem("brinna"), "brinn");});
test("brinnande -> brinn", function() {deepEqual( Stem("brinnande"), "brinn");});
test("brinne -> brinn", function() {deepEqual( Stem("brinne"), "brinn");});
test("brinner -> brinn", function() {deepEqual( Stem("brinner"), "brinn");});
test("brist -> brist", function() {deepEqual( Stem("brist"), "brist");});
test("brista -> brist", function() {deepEqual( Stem("brista"), "brist");});
test("bristande -> brist", function() {deepEqual( Stem("bristande"), "brist");});
test("bristen -> brist", function() {deepEqual( Stem("bristen"), "brist");});
test("brister -> brist", function() {deepEqual( Stem("brister"), "brist");});
test("bristfälligt -> bristfäl", function() {deepEqual( Stem("bristfälligt"), "bristfäl");});
test("brita -> brit", function() {deepEqual( Stem("brita"), "brit");});
test("britta -> britt", function() {deepEqual( Stem("britta"), "britt");});
test("brittas -> britt", function() {deepEqual( Stem("brittas"), "britt");});
test("brittmässvind -> brittmässvind", function() {deepEqual( Stem("brittmässvind"), "brittmässvind");});
test("brmna -> brmna", function() {deepEqual( Stem("brmna"), "brmna");});
test("bro -> bro", function() {deepEqual( Stem("bro"), "bro");});
test("broar -> broar", function() {deepEqual( Stem("broar"), "broar");});
test("brockhaus -> brockhaus", function() {deepEqual( Stem("brockhaus"), "brockhaus");});
test("broder -> brod", function() {deepEqual( Stem("broder"), "brod");});
test("brodera -> broder", function() {deepEqual( Stem("brodera"), "broder");});
test("broderad -> broder", function() {deepEqual( Stem("broderad"), "broder");});
test("broderat -> broder", function() {deepEqual( Stem("broderat"), "broder");});
test("broderi -> broderi", function() {deepEqual( Stem("broderi"), "broderi");});
test("broderier -> broderi", function() {deepEqual( Stem("broderier"), "broderi");});
test("broderiet -> broderiet", function() {deepEqual( Stem("broderiet"), "broderiet");});
test("brodering -> brodering", function() {deepEqual( Stem("brodering"), "brodering");});
test("broderliga -> broder", function() {deepEqual( Stem("broderliga"), "broder");});
test("brodern -> brod", function() {deepEqual( Stem("brodern"), "brod");});
test("broderns -> brod", function() {deepEqual( Stem("broderns"), "brod");});
test("broderskap -> broderskap", function() {deepEqual( Stem("broderskap"), "broderskap");});
test("brodet -> brodet", function() {deepEqual( Stem("brodet"), "brodet");});
test("brokad -> brok", function() {deepEqual( Stem("brokad"), "brok");});
test("brokig -> brok", function() {deepEqual( Stem("brokig"), "brok");});
test("brokiga -> brok", function() {deepEqual( Stem("brokiga"), "brok");});
test("brokigt -> brok", function() {deepEqual( Stem("brokigt"), "brok");});
test("bromsar -> broms", function() {deepEqual( Stem("bromsar"), "broms");});
test("bromsarna -> broms", function() {deepEqual( Stem("bromsarna"), "broms");});
test("bron -> bron", function() {deepEqual( Stem("bron"), "bron");});
test("brons -> bron", function() {deepEqual( Stem("brons"), "bron");});
test("bronserad -> bronser", function() {deepEqual( Stem("bronserad"), "bronser");});
test("bronsgruppen -> bronsgrupp", function() {deepEqual( Stem("bronsgruppen"), "bronsgrupp");});
test("bronsstoden -> bronsstod", function() {deepEqual( Stem("bronsstoden"), "bronsstod");});
test("bror -> bror", function() {deepEqual( Stem("bror"), "bror");});
test("brors -> bror", function() {deepEqual( Stem("brors"), "bror");});
test("brorskål -> brorskål", function() {deepEqual( Stem("brorskål"), "brorskål");});
test("brorson -> brorson", function() {deepEqual( Stem("brorson"), "brorson");});
test("brorsonen -> brorson", function() {deepEqual( Stem("brorsonen"), "brorson");});
test("brorsonens -> brorson", function() {deepEqual( Stem("brorsonens"), "brorson");});
test("broräcket -> broräcket", function() {deepEqual( Stem("broräcket"), "broräcket");});
test("brosch -> brosch", function() {deepEqual( Stem("brosch"), "brosch");});
test("brost -> brost", function() {deepEqual( Stem("brost"), "brost");});
test("brostedt -> brosted", function() {deepEqual( Stem("brostedt"), "brosted");});
test("brostedts -> brosted", function() {deepEqual( Stem("brostedts"), "brosted");});
test("brott -> brott", function() {deepEqual( Stem("brott"), "brott");});
test("brottades -> brott", function() {deepEqual( Stem("brottades"), "brott");});
test("brottande -> brott", function() {deepEqual( Stem("brottande"), "brott");});
test("brotten -> brott", function() {deepEqual( Stem("brotten"), "brott");});
test("brottet -> brottet", function() {deepEqual( Stem("brottet"), "brottet");});
test("brottets -> brottet", function() {deepEqual( Stem("brottets"), "brottet");});
test("brottslig -> brotts", function() {deepEqual( Stem("brottslig"), "brotts");});
test("brottsliga -> brotts", function() {deepEqual( Stem("brottsliga"), "brotts");});
test("brottslighet -> brotts", function() {deepEqual( Stem("brottslighet"), "brotts");});
test("brottsligt -> brotts", function() {deepEqual( Stem("brottsligt"), "brotts");});
test("brottsling -> brottsling", function() {deepEqual( Stem("brottsling"), "brottsling");});
test("brottslingarne -> brottsling", function() {deepEqual( Stem("brottslingarne"), "brottsling");});
test("bru -> bru", function() {deepEqual( Stem("bru"), "bru");});
test("brud -> brud", function() {deepEqual( Stem("brud"), "brud");});
test("brudckrona -> brudckron", function() {deepEqual( Stem("brudckrona"), "brudckron");});
test("brudekrona -> brudekron", function() {deepEqual( Stem("brudekrona"), "brudekron");});
test("bruden -> brud", function() {deepEqual( Stem("bruden"), "brud");});
test("brudens -> brud", function() {deepEqual( Stem("brudens"), "brud");});
test("brudgum -> brudgum", function() {deepEqual( Stem("brudgum"), "brudgum");});
test("brudgummen -> brudgumm", function() {deepEqual( Stem("brudgummen"), "brudgumm");});
test("brudgums -> brudgum", function() {deepEqual( Stem("brudgums"), "brudgum");});
test("brudklädningen -> brudklädning", function() {deepEqual( Stem("brudklädningen"), "brudklädning");});
test("brudklänningen -> brudklänning", function() {deepEqual( Stem("brudklänningen"), "brudklänning");});
test("brudpallen -> brudpall", function() {deepEqual( Stem("brudpallen"), "brudpall");});
test("brudparet -> brudparet", function() {deepEqual( Stem("brudparet"), "brudparet");});
test("brudskaran -> brudskaran", function() {deepEqual( Stem("brudskaran"), "brudskaran");});
test("brudskruden -> brudskrud", function() {deepEqual( Stem("brudskruden"), "brudskrud");});
test("brudslöja -> brudslöj", function() {deepEqual( Stem("brudslöja"), "brudslöj");});
test("brudsängen -> brudsäng", function() {deepEqual( Stem("brudsängen"), "brudsäng");});
test("bruk -> bruk", function() {deepEqual( Stem("bruk"), "bruk");});
test("bruka -> bruk", function() {deepEqual( Stem("bruka"), "bruk");});
test("brukade -> bruk", function() {deepEqual( Stem("brukade"), "bruk");});
test("brukar -> bruk", function() {deepEqual( Stem("brukar"), "bruk");});
test("brukas -> bruk", function() {deepEqual( Stem("brukas"), "bruk");});
test("brukat -> bruk", function() {deepEqual( Stem("brukat"), "bruk");});
test("brukbar -> brukb", function() {deepEqual( Stem("brukbar"), "brukb");});
test("bruket -> bruket", function() {deepEqual( Stem("bruket"), "bruket");});
test("brukliga -> bruk", function() {deepEqual( Stem("brukliga"), "bruk");});
test("brukspatron -> brukspatron", function() {deepEqual( Stem("brukspatron"), "brukspatron");});
test("brum -> brum", function() {deepEqual( Stem("brum"), "brum");});
test("brumma -> brumm", function() {deepEqual( Stem("brumma"), "brumm");});
test("brun -> brun", function() {deepEqual( Stem("brun"), "brun");});
test("bruna -> brun", function() {deepEqual( Stem("bruna"), "brun");});
test("brunbarkade -> brunbark", function() {deepEqual( Stem("brunbarkade"), "brunbark");});
test("brunbetsad -> brunbets", function() {deepEqual( Stem("brunbetsad"), "brunbets");});
test("brunbr -> brunbr", function() {deepEqual( Stem("brunbr"), "brunbr");});
test("brunbrända -> brunbränd", function() {deepEqual( Stem("brunbrända"), "brunbränd");});
test("brunetta -> brunet", function() {deepEqual( Stem("brunetta"), "brunet");});
test("brunn -> brunn", function() {deepEqual( Stem("brunn"), "brunn");});
test("brunnen -> brunn", function() {deepEqual( Stem("brunnen"), "brunn");});
test("brunnit -> brunnit", function() {deepEqual( Stem("brunnit"), "brunnit");});
test("brunno -> brunno", function() {deepEqual( Stem("brunno"), "brunno");});
test("brunnsbal -> brunnsbal", function() {deepEqual( Stem("brunnsbal"), "brunnsbal");});
test("brunnsorten -> brunnsort", function() {deepEqual( Stem("brunnsorten"), "brunnsort");});
test("brunnsresan -> brunnsresan", function() {deepEqual( Stem("brunnsresan"), "brunnsresan");});
test("brunrosiga -> brunros", function() {deepEqual( Stem("brunrosiga"), "brunros");});
test("brunrosigt -> brunros", function() {deepEqual( Stem("brunrosigt"), "brunros");});
test("brunröda -> brunröd", function() {deepEqual( Stem("brunröda"), "brunröd");});
test("brunst -> brunst", function() {deepEqual( Stem("brunst"), "brunst");});
test("brunstekta -> brunstek", function() {deepEqual( Stem("brunstekta"), "brunstek");});
test("brunt -> brunt", function() {deepEqual( Stem("brunt"), "brunt");});
test("brunögda -> brunög", function() {deepEqual( Stem("brunögda"), "brunög");});
test("brus -> brus", function() {deepEqual( Stem("brus"), "brus");});
test("brusa -> brus", function() {deepEqual( Stem("brusa"), "brus");});
test("brusade -> brus", function() {deepEqual( Stem("brusade"), "brus");});
test("brusala -> brusal", function() {deepEqual( Stem("brusala"), "brusal");});
test("brusalahöst -> brusalahöst", function() {deepEqual( Stem("brusalahöst"), "brusalahöst");});
test("brusalaljus -> brusalaljus", function() {deepEqual( Stem("brusalaljus"), "brusalaljus");});
test("brusalanatt -> brusalanat", function() {deepEqual( Stem("brusalanatt"), "brusalanat");});
test("brusalavår -> brusalavår", function() {deepEqual( Stem("brusalavår"), "brusalavår");});
test("brusande -> brus", function() {deepEqual( Stem("brusande"), "brus");});
test("brusar -> brus", function() {deepEqual( Stem("brusar"), "brus");});
test("brush -> brush", function() {deepEqual( Stem("brush"), "brush");});
test("brushen -> brush", function() {deepEqual( Stem("brushen"), "brush");});
test("brusning -> brusning", function() {deepEqual( Stem("brusning"), "brusning");});
test("brusten -> brust", function() {deepEqual( Stem("brusten"), "brust");});
test("brustit -> brustit", function() {deepEqual( Stem("brustit"), "brustit");});
test("brustna -> brustn", function() {deepEqual( Stem("brustna"), "brustn");});
test("brusto -> brusto", function() {deepEqual( Stem("brusto"), "brusto");});
test("brutala -> brutal", function() {deepEqual( Stem("brutala"), "brutal");});
test("bruten -> brut", function() {deepEqual( Stem("bruten"), "brut");});
test("brutet -> brutet", function() {deepEqual( Stem("brutet"), "brutet");});
test("brutit -> brutit", function() {deepEqual( Stem("brutit"), "brutit");});
test("brutna -> brutn", function() {deepEqual( Stem("brutna"), "brutn");});
test("bry -> bry", function() {deepEqual( Stem("bry"), "bry");});
test("brydd -> brydd", function() {deepEqual( Stem("brydd"), "brydd");});
test("bryddc -> bryddc", function() {deepEqual( Stem("bryddc"), "bryddc");});
test("brydde -> brydd", function() {deepEqual( Stem("brydde"), "brydd");});
test("bryderi -> bryderi", function() {deepEqual( Stem("bryderi"), "bryderi");});
test("brydsamma -> brydsamm", function() {deepEqual( Stem("brydsamma"), "brydsamm");});
test("brygga -> brygg", function() {deepEqual( Stem("brygga"), "brygg");});
test("bryggan -> bryggan", function() {deepEqual( Stem("bryggan"), "bryggan");});
test("bryggans -> bryggan", function() {deepEqual( Stem("bryggans"), "bryggan");});
test("bryggarkärra -> bryggarkärr", function() {deepEqual( Stem("bryggarkärra"), "bryggarkärr");});
test("brygghus -> brygghus", function() {deepEqual( Stem("brygghus"), "brygghus");});
test("bryn -> bryn", function() {deepEqual( Stem("bryn"), "bryn");});
test("brynostar -> brynost", function() {deepEqual( Stem("brynostar"), "brynost");});
test("brynt -> brynt", function() {deepEqual( Stem("brynt"), "brynt");});
test("bryr -> bryr", function() {deepEqual( Stem("bryr"), "bryr");});
test("bryta -> bryt", function() {deepEqual( Stem("bryta"), "bryt");});
test("bryter -> bryt", function() {deepEqual( Stem("bryter"), "bryt");});
test("brytning -> brytning", function() {deepEqual( Stem("brytning"), "brytning");});
test("brytt -> brytt", function() {deepEqual( Stem("brytt"), "brytt");});
test("bräckliga -> bräck", function() {deepEqual( Stem("bräckliga"), "bräck");});
test("bräckt -> bräck", function() {deepEqual( Stem("bräckt"), "bräck");});
test("bräckte -> bräck", function() {deepEqual( Stem("bräckte"), "bräck");});
test("bräcktes -> bräck", function() {deepEqual( Stem("bräcktes"), "bräck");});
test("brädd -> brädd", function() {deepEqual( Stem("brädd"), "brädd");});
test("brädden -> brädd", function() {deepEqual( Stem("brädden"), "brädd");});
test("bräder -> bräd", function() {deepEqual( Stem("bräder"), "bräd");});
test("bräderna -> bräd", function() {deepEqual( Stem("bräderna"), "bräd");});
test("brädet -> brädet", function() {deepEqual( Stem("brädet"), "brädet");});
test("brädgårdar -> brädgård", function() {deepEqual( Stem("brädgårdar"), "brädgård");});
test("brädspelet -> brädspelet", function() {deepEqual( Stem("brädspelet"), "brädspelet");});
test("brädspelsbordet -> brädspelsbordet", function() {deepEqual( Stem("brädspelsbordet"), "brädspelsbordet");});
test("bräkte -> bräkt", function() {deepEqual( Stem("bräkte"), "bräkt");});
test("bränd -> bränd", function() {deepEqual( Stem("bränd"), "bränd");});
test("brända -> bränd", function() {deepEqual( Stem("brända"), "bränd");});
test("brände -> bränd", function() {deepEqual( Stem("brände"), "bränd");});
test("bränn -> bränn", function() {deepEqual( Stem("bränn"), "bränn");});
test("bränna -> bränn", function() {deepEqual( Stem("bränna"), "bränn");});
test("brännande -> bränn", function() {deepEqual( Stem("brännande"), "bränn");});
test("brännas -> bränn", function() {deepEqual( Stem("brännas"), "bränn");});
test("bränner -> bränn", function() {deepEqual( Stem("bränner"), "bränn");});
test("bränneribyggnaden -> bränneribyggnad", function() {deepEqual( Stem("bränneribyggnaden"), "bränneribyggnad");});
test("bränningar -> bränning", function() {deepEqual( Stem("bränningar"), "bränning");});
test("bränningarne -> bränning", function() {deepEqual( Stem("bränningarne"), "bränning");});
test("bränningen -> bränning", function() {deepEqual( Stem("bränningen"), "bränning");});
test("bränningens -> bränning", function() {deepEqual( Stem("bränningens"), "bränning");});
test("brännpunkt -> brännpunk", function() {deepEqual( Stem("brännpunkt"), "brännpunk");});
test("brännskadan -> brännskadan", function() {deepEqual( Stem("brännskadan"), "brännskadan");});
test("brännvin -> brännvin", function() {deepEqual( Stem("brännvin"), "brännvin");});
test("brännvinet -> brännvinet", function() {deepEqual( Stem("brännvinet"), "brännvinet");});
test("brännvinets -> brännvinet", function() {deepEqual( Stem("brännvinets"), "brännvinet");});
test("brännvinsglas -> brännvinsgl", function() {deepEqual( Stem("brännvinsglas"), "brännvinsgl");});
test("bränt -> bränt", function() {deepEqual( Stem("bränt"), "bränt");});
test("bränvin -> bränvin", function() {deepEqual( Stem("bränvin"), "bränvin");});
test("bränvins -> bränvin", function() {deepEqual( Stem("bränvins"), "bränvin");});
test("brätte -> brätt", function() {deepEqual( Stem("brätte"), "brätt");});
test("brätten -> brätt", function() {deepEqual( Stem("brätten"), "brätt");});
test("brättet -> brättet", function() {deepEqual( Stem("brättet"), "brättet");});
test("bråckband -> bråckband", function() {deepEqual( Stem("bråckband"), "bråckband");});
test("bråddjup -> bråddjup", function() {deepEqual( Stem("bråddjup"), "bråddjup");});
test("bråddjupet -> bråddjupet", function() {deepEqual( Stem("bråddjupet"), "bråddjupet");});
test("brådska -> brådsk", function() {deepEqual( Stem("brådska"), "brådsk");});
test("brådskan -> brådskan", function() {deepEqual( Stem("brådskan"), "brådskan");});
test("brådskande -> brådsk", function() {deepEqual( Stem("brådskande"), "brådsk");});
test("brådstörtade -> brådstört", function() {deepEqual( Stem("brådstörtade"), "brådstört");});
test("brådstörtande -> brådstört", function() {deepEqual( Stem("brådstörtande"), "brådstört");});
test("brådt -> brådt", function() {deepEqual( Stem("brådt"), "brådt");});
test("brådtom -> brådtom", function() {deepEqual( Stem("brådtom"), "brådtom");});
test("bråelser -> bråels", function() {deepEqual( Stem("bråelser"), "bråels");});
test("bråk -> bråk", function() {deepEqual( Stem("bråk"), "bråk");});
test("bråka -> bråk", function() {deepEqual( Stem("bråka"), "bråk");});
test("bråkades -> bråk", function() {deepEqual( Stem("bråkades"), "bråk");});
test("bråkat -> bråk", function() {deepEqual( Stem("bråkat"), "bråk");});
test("bråkdel -> bråkdel", function() {deepEqual( Stem("bråkdel"), "bråkdel");});
test("bråkiga -> bråk", function() {deepEqual( Stem("bråkiga"), "bråk");});
test("brånar -> brån", function() {deepEqual( Stem("brånar"), "brån");});
test("bråte -> bråt", function() {deepEqual( Stem("bråte"), "bråt");});
test("bråtet -> bråtet", function() {deepEqual( Stem("bråtet"), "bråtet");});
test("bråtl -> bråtl", function() {deepEqual( Stem("bråtl"), "bråtl");});
test("brått -> brått", function() {deepEqual( Stem("brått"), "brått");});
test("bråttom -> bråttom", function() {deepEqual( Stem("bråttom"), "bråttom");});
test("bråvik -> bråvik", function() {deepEqual( Stem("bråvik"), "bråvik");});
test("brö -> brö", function() {deepEqual( Stem("brö"), "brö");});
test("bröd -> bröd", function() {deepEqual( Stem("bröd"), "bröd");});
test("brödbitar -> brödbit", function() {deepEqual( Stem("brödbitar"), "brödbit");});
test("bröder -> bröd", function() {deepEqual( Stem("bröder"), "bröd");});
test("bröderna -> bröd", function() {deepEqual( Stem("bröderna"), "bröd");});
test("brödernas -> bröd", function() {deepEqual( Stem("brödernas"), "bröd");});
test("brödet -> brödet", function() {deepEqual( Stem("brödet"), "brödet");});
test("brödkaka -> brödkak", function() {deepEqual( Stem("brödkaka"), "brödkak");});
test("brödstycke -> brödstyck", function() {deepEqual( Stem("brödstycke"), "brödstyck");});
test("brödutdelningen -> brödutdelning", function() {deepEqual( Stem("brödutdelningen"), "brödutdelning");});
test("bröllop -> bröllop", function() {deepEqual( Stem("bröllop"), "bröllop");});
test("bröllopet -> bröllopet", function() {deepEqual( Stem("bröllopet"), "bröllopet");});
test("bröllops -> bröllop", function() {deepEqual( Stem("bröllops"), "bröllop");});
test("bröllopsdagen -> bröllopsdag", function() {deepEqual( Stem("bröllopsdagen"), "bröllopsdag");});
test("bröllopsgästerna -> bröllopsgäst", function() {deepEqual( Stem("bröllopsgästerna"), "bröllopsgäst");});
test("bröllopshus -> bröllopshus", function() {deepEqual( Stem("bröllopshus"), "bröllopshus");});
test("bröllopskrans -> bröllopskran", function() {deepEqual( Stem("bröllopskrans"), "bröllopskran");});
test("bröllopslägrets -> bröllopslägret", function() {deepEqual( Stem("bröllopslägrets"), "bröllopslägret");});
test("bröllopsmarskalken -> bröllopsmarskalk", function() {deepEqual( Stem("bröllopsmarskalken"), "bröllopsmarskalk");});
test("bröllopsresa -> bröllopsres", function() {deepEqual( Stem("bröllopsresa"), "bröllopsres");});
test("bröllopsskaran -> bröllopsskaran", function() {deepEqual( Stem("bröllopsskaran"), "bröllopsskaran");});
test("bröst -> bröst", function() {deepEqual( Stem("bröst"), "bröst");});
test("brösten -> bröst", function() {deepEqual( Stem("brösten"), "bröst");});
test("bröstens -> bröst", function() {deepEqual( Stem("bröstens"), "bröst");});
test("bröstet -> bröstet", function() {deepEqual( Stem("bröstet"), "bröstet");});
test("bröstfickan -> bröstfickan", function() {deepEqual( Stem("bröstfickan"), "bröstfickan");});
test("bröstfickans -> bröstfickan", function() {deepEqual( Stem("bröstfickans"), "bröstfickan");});
test("bröstförkläde -> bröstförkläd", function() {deepEqual( Stem("bröstförkläde"), "bröstförkläd");});
test("bröstkråset -> bröstkråset", function() {deepEqual( Stem("bröstkråset"), "bröstkråset");});
test("bröstvärk -> bröstvärk", function() {deepEqual( Stem("bröstvärk"), "bröstvärk");});
test("bröt -> bröt", function() {deepEqual( Stem("bröt"), "bröt");});
test("bröto -> bröto", function() {deepEqual( Stem("bröto"), "bröto");});
test("brötos -> bröto", function() {deepEqual( Stem("brötos"), "bröto");});
test("bt -> bt", function() {deepEqual( Stem("bt"), "bt");});
test("bttrak -> bttrak", function() {deepEqual( Stem("bttrak"), "bttrak");});
test("bubblade -> bubbl", function() {deepEqual( Stem("bubblade"), "bubbl");});
test("bubblande -> bubbl", function() {deepEqual( Stem("bubblande"), "bubbl");});
test("bubblor -> bubbl", function() {deepEqual( Stem("bubblor"), "bubbl");});
test("buch -> buch", function() {deepEqual( Stem("buch"), "buch");});
test("bucklade -> buckl", function() {deepEqual( Stem("bucklade"), "buckl");});
test("bucklorna -> buckl", function() {deepEqual( Stem("bucklorna"), "buckl");});
test("bud -> bud", function() {deepEqual( Stem("bud"), "bud");});
test("budet -> budet", function() {deepEqual( Stem("budet"), "budet");});
test("budorden -> budord", function() {deepEqual( Stem("budorden"), "budord");});
test("budordet -> budordet", function() {deepEqual( Stem("budordet"), "budordet");});
test("buds -> bud", function() {deepEqual( Stem("buds"), "bud");});
test("budskap -> budskap", function() {deepEqual( Stem("budskap"), "budskap");});
test("buga -> bug", function() {deepEqual( Stem("buga"), "bug");});
test("bugade -> bug", function() {deepEqual( Stem("bugade"), "bug");});
test("bugande -> bug", function() {deepEqual( Stem("bugande"), "bug");});
test("bugar -> bug", function() {deepEqual( Stem("bugar"), "bug");});
test("bugat -> bug", function() {deepEqual( Stem("bugat"), "bug");});
test("bugning -> bugning", function() {deepEqual( Stem("bugning"), "bugning");});
test("bugningar -> bugning", function() {deepEqual( Stem("bugningar"), "bugning");});
test("buk -> buk", function() {deepEqual( Stem("buk"), "buk");});
test("bukett -> buket", function() {deepEqual( Stem("bukett"), "buket");});
test("buketten -> buket", function() {deepEqual( Stem("buketten"), "buket");});
test("buketter -> buket", function() {deepEqual( Stem("buketter"), "buket");});
test("bukt -> bukt", function() {deepEqual( Stem("bukt"), "bukt");});
test("buktande -> bukt", function() {deepEqual( Stem("buktande"), "bukt");});
test("bukter -> bukt", function() {deepEqual( Stem("bukter"), "bukt");});
test("buktiga -> bukt", function() {deepEqual( Stem("buktiga"), "bukt");});
test("bulevarden -> bulevard", function() {deepEqual( Stem("bulevarden"), "bulevard");});
test("buljong -> buljong", function() {deepEqual( Stem("buljong"), "buljong");});
test("buljongen -> buljong", function() {deepEqual( Stem("buljongen"), "buljong");});
test("buljongens -> buljong", function() {deepEqual( Stem("buljongens"), "buljong");});
test("bull -> bull", function() {deepEqual( Stem("bull"), "bull");});
test("bulle -> bull", function() {deepEqual( Stem("bulle"), "bull");});
test("buller -> bull", function() {deepEqual( Stem("buller"), "bull");});
test("bullhalva -> bullhalv", function() {deepEqual( Stem("bullhalva"), "bullhalv");});
test("bullrande -> bullr", function() {deepEqual( Stem("bullrande"), "bullr");});
test("bullrar -> bullr", function() {deepEqual( Stem("bullrar"), "bullr");});
test("bullret -> bullret", function() {deepEqual( Stem("bullret"), "bullret");});
test("bulor -> bul", function() {deepEqual( Stem("bulor"), "bul");});
test("bulsig -> buls", function() {deepEqual( Stem("bulsig"), "buls");});
test("bulta -> bult", function() {deepEqual( Stem("bulta"), "bult");});
test("bultade -> bult", function() {deepEqual( Stem("bultade"), "bult");});
test("bultande -> bult", function() {deepEqual( Stem("bultande"), "bult");});
test("bultar -> bult", function() {deepEqual( Stem("bultar"), "bult");});
test("bulwer -> bulw", function() {deepEqual( Stem("bulwer"), "bulw");});
test("bunden -> bund", function() {deepEqual( Stem("bunden"), "bund");});
test("bundet -> bundet", function() {deepEqual( Stem("bundet"), "bundet");});
test("bundit -> bundit", function() {deepEqual( Stem("bundit"), "bundit");});
test("bundna -> bundn", function() {deepEqual( Stem("bundna"), "bundn");});
test("bundo -> bundo", function() {deepEqual( Stem("bundo"), "bundo");});
test("bundt -> bund", function() {deepEqual( Stem("bundt"), "bund");});
test("bundtar -> bund", function() {deepEqual( Stem("bundtar"), "bund");});
test("bundttröja -> bundttröj", function() {deepEqual( Stem("bundttröja"), "bundttröj");});
test("bunt -> bunt", function() {deepEqual( Stem("bunt"), "bunt");});
test("buntar -> bunt", function() {deepEqual( Stem("buntar"), "bunt");});
test("bunyans -> bunyan", function() {deepEqual( Stem("bunyans"), "bunyan");});
test("bur -> bur", function() {deepEqual( Stem("bur"), "bur");});
test("buren -> bur", function() {deepEqual( Stem("buren"), "bur");});
test("burgund -> burgund", function() {deepEqual( Stem("burgund"), "burgund");});
test("burit -> burit", function() {deepEqual( Stem("burit"), "burit");});
test("burk -> burk", function() {deepEqual( Stem("burk"), "burk");});
test("burkar -> burk", function() {deepEqual( Stem("burkar"), "burk");});
test("burna -> burn", function() {deepEqual( Stem("burna"), "burn");});
test("buro -> buro", function() {deepEqual( Stem("buro"), "buro");});
test("burskap -> burskap", function() {deepEqual( Stem("burskap"), "burskap");});
test("busarna -> bus", function() {deepEqual( Stem("busarna"), "bus");});
test("buse -> bus", function() {deepEqual( Stem("buse"), "bus");});
test("buskar -> busk", function() {deepEqual( Stem("buskar"), "busk");});
test("buskarna -> busk", function() {deepEqual( Stem("buskarna"), "busk");});
test("buske -> busk", function() {deepEqual( Stem("buske"), "busk");});
test("busken -> busk", function() {deepEqual( Stem("busken"), "busk");});
test("buss -> buss", function() {deepEqual( Stem("buss"), "buss");});
test("bussen -> buss", function() {deepEqual( Stem("bussen"), "buss");});
test("butelj -> butelj", function() {deepEqual( Stem("butelj"), "butelj");});
test("buteljen -> butelj", function() {deepEqual( Stem("buteljen"), "butelj");});
test("buteljer -> butelj", function() {deepEqual( Stem("buteljer"), "butelj");});
test("buteljerna -> butelj", function() {deepEqual( Stem("buteljerna"), "butelj");});
test("buteljgrön -> buteljgrön", function() {deepEqual( Stem("buteljgrön"), "buteljgrön");});
test("buteljgröna -> buteljgrön", function() {deepEqual( Stem("buteljgröna"), "buteljgrön");});
test("butiken -> butik", function() {deepEqual( Stem("butiken"), "butik");});
test("butikernas -> butik", function() {deepEqual( Stem("butikernas"), "butik");});
test("butiksfönster -> butiksfönst", function() {deepEqual( Stem("butiksfönster"), "butiksfönst");});
test("buttert -> buttert", function() {deepEqual( Stem("buttert"), "buttert");});
test("buttra -> buttr", function() {deepEqual( Stem("buttra"), "buttr");});
test("buvudet -> buvudet", function() {deepEqual( Stem("buvudet"), "buvudet");});
test("by -> by", function() {deepEqual( Stem("by"), "by");});
test("byar -> byar", function() {deepEqual( Stem("byar"), "byar");});
test("byffen -> byff", function() {deepEqual( Stem("byffen"), "byff");});
test("bygd -> bygd", function() {deepEqual( Stem("bygd"), "bygd");});
test("bygden -> bygd", function() {deepEqual( Stem("bygden"), "bygd");});
test("bygderna -> bygd", function() {deepEqual( Stem("bygderna"), "bygd");});
test("bygdes -> bygd", function() {deepEqual( Stem("bygdes"), "bygd");});
test("bygdt -> bygd", function() {deepEqual( Stem("bygdt"), "bygd");});
test("bygga -> bygg", function() {deepEqual( Stem("bygga"), "bygg");});
test("byggande -> bygg", function() {deepEqual( Stem("byggande"), "bygg");});
test("byggas -> bygg", function() {deepEqual( Stem("byggas"), "bygg");});
test("byggd -> bygg", function() {deepEqual( Stem("byggd"), "bygg");});
test("byggda -> bygg", function() {deepEqual( Stem("byggda"), "bygg");});
test("byggde -> bygg", function() {deepEqual( Stem("byggde"), "bygg");});
test("bygger -> bygg", function() {deepEqual( Stem("bygger"), "bygg");});
test("byggnad -> byggn", function() {deepEqual( Stem("byggnad"), "byggn");});
test("byggnaden -> byggnad", function() {deepEqual( Stem("byggnaden"), "byggnad");});
test("byggnader -> byggnad", function() {deepEqual( Stem("byggnader"), "byggnad");});
test("byggnaderna -> byggnad", function() {deepEqual( Stem("byggnaderna"), "byggnad");});
test("byggnadsställningar -> byggnadsställning", function() {deepEqual( Stem("byggnadsställningar"), "byggnadsställning");});
test("byggningen -> byggning", function() {deepEqual( Stem("byggningen"), "byggning");});
test("byggt -> bygg", function() {deepEqual( Stem("byggt"), "bygg");});
test("bygningen -> bygning", function() {deepEqual( Stem("bygningen"), "bygning");});
test("bygt -> bygt", function() {deepEqual( Stem("bygt"), "bygt");});
test("bylte -> bylt", function() {deepEqual( Stem("bylte"), "bylt");});
test("byn -> byn", function() {deepEqual( Stem("byn"), "byn");});
test("byns -> byn", function() {deepEqual( Stem("byns"), "byn");});
test("byrå -> byrå", function() {deepEqual( Stem("byrå"), "byrå");});
test("byråar -> byrå", function() {deepEqual( Stem("byråar"), "byrå");});
test("byrålådan -> byrålådan", function() {deepEqual( Stem("byrålådan"), "byrålådan");});
test("byrån -> byrån", function() {deepEqual( Stem("byrån"), "byrån");});
test("byråns -> byrån", function() {deepEqual( Stem("byråns"), "byrån");});
test("byrånyckel -> byrånyckel", function() {deepEqual( Stem("byrånyckel"), "byrånyckel");});
test("bysättning -> bysättning", function() {deepEqual( Stem("bysättning"), "bysättning");});
test("byta -> byt", function() {deepEqual( Stem("byta"), "byt");});
test("byte -> byt", function() {deepEqual( Stem("byte"), "byt");});
test("bytet -> bytet", function() {deepEqual( Stem("bytet"), "bytet");});
test("byting -> byting", function() {deepEqual( Stem("byting"), "byting");});
test("bytt -> bytt", function() {deepEqual( Stem("bytt"), "bytt");});
test("bytte -> bytt", function() {deepEqual( Stem("bytte"), "bytt");});
test("byxfickorna -> byxfick", function() {deepEqual( Stem("byxfickorna"), "byxfick");});
test("byxor -> byx", function() {deepEqual( Stem("byxor"), "byx");});
test("byxorna -> byx", function() {deepEqual( Stem("byxorna"), "byx");});
test("bä -> bä", function() {deepEqual( Stem("bä"), "bä");});
test("bäckar -> bäck", function() {deepEqual( Stem("bäckar"), "bäck");});
test("bäckarna -> bäck", function() {deepEqual( Stem("bäckarna"), "bäck");});
test("bäcken -> bäck", function() {deepEqual( Stem("bäcken"), "bäck");});
test("bäd -> bäd", function() {deepEqual( Stem("bäd"), "bäd");});
test("bädd -> bädd", function() {deepEqual( Stem("bädd"), "bädd");});
test("bädda -> bädd", function() {deepEqual( Stem("bädda"), "bädd");});
test("bäddad -> bädd", function() {deepEqual( Stem("bäddad"), "bädd");});
test("bäddade -> bädd", function() {deepEqual( Stem("bäddade"), "bädd");});
test("bäddar -> bädd", function() {deepEqual( Stem("bäddar"), "bädd");});
test("bädden -> bädd", function() {deepEqual( Stem("bädden"), "bädd");});
test("bäfvan -> bäfvan", function() {deepEqual( Stem("bäfvan"), "bäfvan");});
test("bäfvande -> bäfv", function() {deepEqual( Stem("bäfvande"), "bäfv");});
test("bäfvat -> bäfv", function() {deepEqual( Stem("bäfvat"), "bäfv");});
test("bägare -> bäg", function() {deepEqual( Stem("bägare"), "bäg");});
test("bägarn -> bägarn", function() {deepEqual( Stem("bägarn"), "bägarn");});
test("bägge -> bägg", function() {deepEqual( Stem("bägge"), "bägg");});
test("bägges -> bägg", function() {deepEqual( Stem("bägges"), "bägg");});
test("bälg -> bälg", function() {deepEqual( Stem("bälg"), "bälg");});
test("bält -> bält", function() {deepEqual( Stem("bält"), "bält");});
test("bän -> bän", function() {deepEqual( Stem("bän"), "bän");});
test("bänder -> bänd", function() {deepEqual( Stem("bänder"), "bänd");});
test("bängde -> bäng", function() {deepEqual( Stem("bängde"), "bäng");});
test("bänk -> bänk", function() {deepEqual( Stem("bänk"), "bänk");});
test("bänkar -> bänk", function() {deepEqual( Stem("bänkar"), "bänk");});
test("bänkarna -> bänk", function() {deepEqual( Stem("bänkarna"), "bänk");});
test("bänken -> bänk", function() {deepEqual( Stem("bänken"), "bänk");});
test("bänkraden -> bänkrad", function() {deepEqual( Stem("bänkraden"), "bänkrad");});
test("bär -> bär", function() {deepEqual( Stem("bär"), "bär");});
test("bära -> bär", function() {deepEqual( Stem("bära"), "bär");});
test("bärande -> bär", function() {deepEqual( Stem("bärande"), "bär");});
test("bärare -> bär", function() {deepEqual( Stem("bärare"), "bär");});
test("bäras -> bär", function() {deepEqual( Stem("bäras"), "bär");});
test("bären -> bär", function() {deepEqual( Stem("bären"), "bär");});
test("bärga -> bärg", function() {deepEqual( Stem("bärga"), "bärg");});
test("bärgad -> bärg", function() {deepEqual( Stem("bärgad"), "bärg");});
test("bärgade -> bärg", function() {deepEqual( Stem("bärgade"), "bärg");});
test("bärlig -> bär", function() {deepEqual( Stem("bärlig"), "bär");});
test("bärs -> bär", function() {deepEqual( Stem("bärs"), "bär");});
test("bärsärkaraseri -> bärsärkaraseri", function() {deepEqual( Stem("bärsärkaraseri"), "bärsärkaraseri");});
test("bäst -> bäst", function() {deepEqual( Stem("bäst"), "bäst");});
test("bästa -> bäst", function() {deepEqual( Stem("bästa"), "bäst");});
test("bäste -> bäst", function() {deepEqual( Stem("bäste"), "bäst");});
test("bättra -> bättr", function() {deepEqual( Stem("bättra"), "bättr");});
test("bättre -> bättr", function() {deepEqual( Stem("bättre"), "bättr");});
test("bättringsvägen -> bättringsväg", function() {deepEqual( Stem("bättringsvägen"), "bättringsväg");});
test("bävade -> bäv", function() {deepEqual( Stem("bävade"), "bäv");});
test("bävan -> bävan", function() {deepEqual( Stem("bävan"), "bävan");});
test("bävande -> bäv", function() {deepEqual( Stem("bävande"), "bäv");});
test("bävar -> bäv", function() {deepEqual( Stem("bävar"), "bäv");});
test("bäverråtta -> bäverråt", function() {deepEqual( Stem("bäverråtta"), "bäverråt");});
test("båd -> båd", function() {deepEqual( Stem("båd"), "båd");});
test("båda -> båd", function() {deepEqual( Stem("båda"), "båd");});
test("bådande -> båd", function() {deepEqual( Stem("bådande"), "båd");});
test("bådar -> båd", function() {deepEqual( Stem("bådar"), "båd");});
test("bådas -> båd", function() {deepEqual( Stem("bådas"), "båd");});
test("både -> båd", function() {deepEqual( Stem("både"), "båd");});
test("bådo -> bådo", function() {deepEqual( Stem("bådo"), "bådo");});
test("båga -> båg", function() {deepEqual( Stem("båga"), "båg");});
test("bågar -> båg", function() {deepEqual( Stem("bågar"), "båg");});
test("båge -> båg", function() {deepEqual( Stem("båge"), "båg");});
test("bågen -> båg", function() {deepEqual( Stem("bågen"), "båg");});
test("bågiga -> båg", function() {deepEqual( Stem("bågiga"), "båg");});
test("båglampa -> båglamp", function() {deepEqual( Stem("båglampa"), "båglamp");});
test("bågna -> bågn", function() {deepEqual( Stem("bågna"), "bågn");});
test("bål -> bål", function() {deepEqual( Stem("bål"), "bål");});
test("båld -> båld", function() {deepEqual( Stem("båld"), "båld");});
test("bålet -> bålet", function() {deepEqual( Stem("bålet"), "bålet");});
test("bålrika -> bålrik", function() {deepEqual( Stem("bålrika"), "bålrik");});
test("bålstor -> bålst", function() {deepEqual( Stem("bålstor"), "bålst");});
test("bånglade -> bångl", function() {deepEqual( Stem("bånglade"), "bångl");});
test("bård -> bård", function() {deepEqual( Stem("bård"), "bård");});
test("bården -> bård", function() {deepEqual( Stem("bården"), "bård");});
test("bårens -> bår", function() {deepEqual( Stem("bårens"), "bår");});
test("bårhade -> bårh", function() {deepEqual( Stem("bårhade"), "bårh");});
test("bås -> bås", function() {deepEqual( Stem("bås"), "bås");});
test("båt -> båt", function() {deepEqual( Stem("båt"), "båt");});
test("båtar -> båt", function() {deepEqual( Stem("båtar"), "båt");});
test("båtarna -> båt", function() {deepEqual( Stem("båtarna"), "båt");});
test("båtarnas -> båt", function() {deepEqual( Stem("båtarnas"), "båt");});
test("båtarne -> båt", function() {deepEqual( Stem("båtarne"), "båt");});
test("båten -> båt", function() {deepEqual( Stem("båten"), "båt");});
test("båtens -> båt", function() {deepEqual( Stem("båtens"), "båt");});
test("båthuset -> båthuset", function() {deepEqual( Stem("båthuset"), "båthuset");});
test("båtkarl -> båtkarl", function() {deepEqual( Stem("båtkarl"), "båtkarl");});
test("båtslöjtnanten -> båtslöjtnant", function() {deepEqual( Stem("båtslöjtnanten"), "båtslöjtnant");});
test("böcker -> böck", function() {deepEqual( Stem("böcker"), "böck");});
test("böckerna -> böck", function() {deepEqual( Stem("böckerna"), "böck");});
test("böcklins -> böcklin", function() {deepEqual( Stem("böcklins"), "böcklin");});
test("böj -> böj", function() {deepEqual( Stem("böj"), "böj");});
test("böja -> böj", function() {deepEqual( Stem("böja"), "böj");});
test("böjd -> böjd", function() {deepEqual( Stem("böjd"), "böjd");});
test("böjda -> böjd", function() {deepEqual( Stem("böjda"), "böjd");});
test("böjde -> böjd", function() {deepEqual( Stem("böjde"), "böjd");});
test("böjdes -> böjd", function() {deepEqual( Stem("böjdes"), "böjd");});
test("böjelse -> böj", function() {deepEqual( Stem("böjelse"), "böj");});
test("böjelser -> böj", function() {deepEqual( Stem("böjelser"), "böj");});
test("böjlig -> böj", function() {deepEqual( Stem("böjlig"), "böj");});
test("böjliga -> böj", function() {deepEqual( Stem("böjliga"), "böj");});
test("böjning -> böjning", function() {deepEqual( Stem("böjning"), "böjning");});
test("böjningarna -> böjning", function() {deepEqual( Stem("böjningarna"), "böjning");});
test("böjningen -> böjning", function() {deepEqual( Stem("böjningen"), "böjning");});
test("böjt -> böjt", function() {deepEqual( Stem("böjt"), "böjt");});
test("böl -> böl", function() {deepEqual( Stem("böl"), "böl");});
test("böld -> böld", function() {deepEqual( Stem("böld"), "böld");});
test("bölder -> böld", function() {deepEqual( Stem("bölder"), "böld");});
test("bölja -> bölj", function() {deepEqual( Stem("bölja"), "bölj");});
test("böljade -> bölj", function() {deepEqual( Stem("böljade"), "bölj");});
test("böljeslag -> böljeslag", function() {deepEqual( Stem("böljeslag"), "böljeslag");});
test("böljor -> bölj", function() {deepEqual( Stem("böljor"), "bölj");});
test("böljorna -> bölj", function() {deepEqual( Stem("böljorna"), "bölj");});
test("böljornas -> bölj", function() {deepEqual( Stem("böljornas"), "bölj");});
test("böljskum -> böljskum", function() {deepEqual( Stem("böljskum"), "böljskum");});
test("böll -> böll", function() {deepEqual( Stem("böll"), "böll");});
test("bömisk -> bömisk", function() {deepEqual( Stem("bömisk"), "bömisk");});
test("bön -> bön", function() {deepEqual( Stem("bön"), "bön");});
test("böncstunder -> böncstund", function() {deepEqual( Stem("böncstunder"), "böncstund");});
test("bönder -> bönd", function() {deepEqual( Stem("bönder"), "bönd");});
test("bönderna -> bönd", function() {deepEqual( Stem("bönderna"), "bönd");});
test("böne -> bön", function() {deepEqual( Stem("böne"), "bön");});
test("bönehus -> bönehus", function() {deepEqual( Stem("bönehus"), "bönehus");});
test("böneman -> böneman", function() {deepEqual( Stem("böneman"), "böneman");});
test("bönemöte -> bönemöt", function() {deepEqual( Stem("bönemöte"), "bönemöt");});
test("bönemöten -> bönemöt", function() {deepEqual( Stem("bönemöten"), "bönemöt");});
test("bönen -> bön", function() {deepEqual( Stem("bönen"), "bön");});
test("böner -> bön", function() {deepEqual( Stem("böner"), "bön");});
test("bönerna -> bön", function() {deepEqual( Stem("bönerna"), "bön");});
test("bönernas -> bön", function() {deepEqual( Stem("bönernas"), "bön");});
test("bönesuck -> bönesuck", function() {deepEqual( Stem("bönesuck"), "bönesuck");});
test("bönfalla -> bönfall", function() {deepEqual( Stem("bönfalla"), "bönfall");});
test("bönfallande -> bönfall", function() {deepEqual( Stem("bönfallande"), "bönfall");});
test("bönkapell -> bönkapell", function() {deepEqual( Stem("bönkapell"), "bönkapell");});
test("bör -> bör", function() {deepEqual( Stem("bör"), "bör");});
test("böra -> bör", function() {deepEqual( Stem("böra"), "bör");});
test("börd -> börd", function() {deepEqual( Stem("börd"), "börd");});
test("börda -> börd", function() {deepEqual( Stem("börda"), "börd");});
test("bördan -> bördan", function() {deepEqual( Stem("bördan"), "bördan");});
test("börde -> börd", function() {deepEqual( Stem("börde"), "börd");});
test("bördens -> börd", function() {deepEqual( Stem("bördens"), "börd");});
test("börja -> börj", function() {deepEqual( Stem("börja"), "börj");});
test("börjacle -> börjacl", function() {deepEqual( Stem("börjacle"), "börjacl");});
test("började -> börj", function() {deepEqual( Stem("började"), "börj");});
test("börjades -> börj", function() {deepEqual( Stem("börjades"), "börj");});
test("börjam -> börjam", function() {deepEqual( Stem("börjam"), "börjam");});
test("början -> början", function() {deepEqual( Stem("början"), "början");});
test("börjar -> börj", function() {deepEqual( Stem("börjar"), "börj");});
test("börjas -> börj", function() {deepEqual( Stem("börjas"), "börj");});
test("börjat -> börj", function() {deepEqual( Stem("börjat"), "börj");});
test("börjen -> börj", function() {deepEqual( Stem("börjen"), "börj");});
test("börs -> bör", function() {deepEqual( Stem("börs"), "bör");});
test("bört -> bört", function() {deepEqual( Stem("bört"), "bört");});
test("bössa -> böss", function() {deepEqual( Stem("bössa"), "böss");});
test("bössan -> bössan", function() {deepEqual( Stem("bössan"), "bössan");});
test("böttiger -> bött", function() {deepEqual( Stem("böttiger"), "bött");});
test("bövelen -> bövel", function() {deepEqual( Stem("bövelen"), "bövel");});
test("böveln -> böveln", function() {deepEqual( Stem("böveln"), "böveln");});
test("c -> c", function() {deepEqual( Stem("c"), "c");});
test("ca -> ca", function() {deepEqual( Stem("ca"), "ca");});
test("calle -> call", function() {deepEqual( Stem("calle"), "call");});
test("camma -> camm", function() {deepEqual( Stem("camma"), "camm");});
test("canto -> canto", function() {deepEqual( Stem("canto"), "canto");});
test("care -> car", function() {deepEqual( Stem("care"), "car");});
test("carl -> carl", function() {deepEqual( Stem("carl"), "carl");});
test("carlo -> carlo", function() {deepEqual( Stem("carlo"), "carlo");});
test("carree -> carre", function() {deepEqual( Stem("carree"), "carre");});
test("causent -> causent", function() {deepEqual( Stem("causent"), "causent");});
test("cavalleria -> cavalleri", function() {deepEqual( Stem("cavalleria"), "cavalleri");});
test("ccix -> ccix", function() {deepEqual( Stem("ccix"), "ccix");});
test("ccvii -> ccvii", function() {deepEqual( Stem("ccvii"), "ccvii");});
test("ccviii -> ccviii", function() {deepEqual( Stem("ccviii"), "ccviii");});
test("ccx -> ccx", function() {deepEqual( Stem("ccx"), "ccx");});
test("cecilia -> cecili", function() {deepEqual( Stem("cecilia"), "cecili");});
test("cecilias -> cecili", function() {deepEqual( Stem("cecilias"), "cecili");});
test("cedera -> ceder", function() {deepEqual( Stem("cedera"), "ceder");});
test("cell -> cell", function() {deepEqual( Stem("cell"), "cell");});
test("celle -> cell", function() {deepEqual( Stem("celle"), "cell");});
test("cellerna -> cell", function() {deepEqual( Stem("cellerna"), "cell");});
test("ceremoni -> ceremoni", function() {deepEqual( Stem("ceremoni"), "ceremoni");});
test("ceremonien -> ceremoni", function() {deepEqual( Stem("ceremonien"), "ceremoni");});
test("ceremonierna -> ceremoni", function() {deepEqual( Stem("ceremonierna"), "ceremoni");});
test("ceremoniplikter -> ceremoniplik", function() {deepEqual( Stem("ceremoniplikter"), "ceremoniplik");});
test("cftcr -> cftcr", function() {deepEqual( Stem("cftcr"), "cftcr");});
test("cfter -> cfter", function() {deepEqual( Stem("cfter"), "cfter");});
test("cgent -> cgent", function() {deepEqual( Stem("cgent"), "cgent");});
test("ch -> ch", function() {deepEqual( Stem("ch"), "ch");});
test("chablis -> chablis", function() {deepEqual( Stem("chablis"), "chablis");});
test("champagne -> champagn", function() {deepEqual( Stem("champagne"), "champagn");});
test("champagnen -> champagn", function() {deepEqual( Stem("champagnen"), "champagn");});
test("champagnesorten -> champagnesort", function() {deepEqual( Stem("champagnesorten"), "champagnesort");});
test("charlatan -> charlatan", function() {deepEqual( Stem("charlatan"), "charlatan");});
test("charlataner -> charlatan", function() {deepEqual( Stem("charlataner"), "charlatan");});
test("charlatanfasoner -> charlatanfason", function() {deepEqual( Stem("charlatanfasoner"), "charlatanfason");});
test("charm -> charm", function() {deepEqual( Stem("charm"), "charm");});
test("charmant -> charmant", function() {deepEqual( Stem("charmant"), "charmant");});
test("charmanta -> charmant", function() {deepEqual( Stem("charmanta"), "charmant");});
test("charmerad -> charmer", function() {deepEqual( Stem("charmerad"), "charmer");});
test("charmörer -> charmör", function() {deepEqual( Stem("charmörer"), "charmör");});
test("charon -> charon", function() {deepEqual( Stem("charon"), "charon");});
test("chasseur -> chasseur", function() {deepEqual( Stem("chasseur"), "chasseur");});
test("chelone -> chelon", function() {deepEqual( Stem("chelone"), "chelon");});
test("chevalereska -> chevaleresk", function() {deepEqual( Stem("chevalereska"), "chevaleresk");});
test("chevelyr -> chevelyr", function() {deepEqual( Stem("chevelyr"), "chevelyr");});
test("cheviotstyget -> cheviotstyget", function() {deepEqual( Stem("cheviotstyget"), "cheviotstyget");});
test("chic -> chic", function() {deepEqual( Stem("chic"), "chic");});
test("chicago -> chicago", function() {deepEqual( Stem("chicago"), "chicago");});
test("chiffer -> chiff", function() {deepEqual( Stem("chiffer"), "chiff");});
test("chiffonjeklaffen -> chiffonjeklaff", function() {deepEqual( Stem("chiffonjeklaffen"), "chiffonjeklaff");});
test("chiffonjen -> chiffonj", function() {deepEqual( Stem("chiffonjen"), "chiffonj");});
test("chikanerad -> chikaner", function() {deepEqual( Stem("chikanerad"), "chikaner");});
test("chloris -> chloris", function() {deepEqual( Stem("chloris"), "chloris");});
test("choklad -> chokl", function() {deepEqual( Stem("choklad"), "chokl");});
test("chokladbit -> chokladbit", function() {deepEqual( Stem("chokladbit"), "chokladbit");});
test("chokladbrun -> chokladbrun", function() {deepEqual( Stem("chokladbrun"), "chokladbrun");});
test("chokladkaka -> chokladkak", function() {deepEqual( Stem("chokladkaka"), "chokladkak");});
test("chopin -> chopin", function() {deepEqual( Stem("chopin"), "chopin");});
test("chopins -> chopin", function() {deepEqual( Stem("chopins"), "chopin");});
test("christine -> christin", function() {deepEqual( Stem("christine"), "christin");});
test("cig -> cig", function() {deepEqual( Stem("cig"), "cig");});
test("cigarett -> cigaret", function() {deepEqual( Stem("cigarett"), "cigaret");});
test("cigarettstumpen -> cigarettstump", function() {deepEqual( Stem("cigarettstumpen"), "cigarettstump");});
test("cigarr -> cigarr", function() {deepEqual( Stem("cigarr"), "cigarr");});
test("cigarraskan -> cigarraskan", function() {deepEqual( Stem("cigarraskan"), "cigarraskan");});
test("cigarrbod -> cigarrbod", function() {deepEqual( Stem("cigarrbod"), "cigarrbod");});
test("cigarrbutik -> cigarrbutik", function() {deepEqual( Stem("cigarrbutik"), "cigarrbutik");});
test("cigarren -> cigarr", function() {deepEqual( Stem("cigarren"), "cigarr");});
test("cigarrer -> cigarr", function() {deepEqual( Stem("cigarrer"), "cigarr");});
test("cigarrerna -> cigarr", function() {deepEqual( Stem("cigarrerna"), "cigarr");});
test("cigarrett -> cigarret", function() {deepEqual( Stem("cigarrett"), "cigarret");});
test("cigarretten -> cigarret", function() {deepEqual( Stem("cigarretten"), "cigarret");});
test("cigarretter -> cigarret", function() {deepEqual( Stem("cigarretter"), "cigarret");});
test("cigarrettetui -> cigarrettetui", function() {deepEqual( Stem("cigarrettetui"), "cigarrettetui");});
test("cigarrettspetsen -> cigarrettspets", function() {deepEqual( Stem("cigarrettspetsen"), "cigarrettspets");});
test("cigarrfodral -> cigarrfodral", function() {deepEqual( Stem("cigarrfodral"), "cigarrfodral");});
test("cigarrfrågan -> cigarrfrågan", function() {deepEqual( Stem("cigarrfrågan"), "cigarrfrågan");});
test("cigarrkopp -> cigarrkopp", function() {deepEqual( Stem("cigarrkopp"), "cigarrkopp");});
test("cigarröken -> cigarrök", function() {deepEqual( Stem("cigarröken"), "cigarrök");});
test("cirka -> cirk", function() {deepEqual( Stem("cirka"), "cirk");});
test("cirkel -> cirkel", function() {deepEqual( Stem("cirkel"), "cirkel");});
test("cirklar -> cirkl", function() {deepEqual( Stem("cirklar"), "cirkl");});
test("citat -> cit", function() {deepEqual( Stem("citat"), "cit");});
test("citia -> citi", function() {deepEqual( Stem("citia"), "citi");});
test("citron -> citron", function() {deepEqual( Stem("citron"), "citron");});
test("citrongul -> citrongul", function() {deepEqual( Stem("citrongul"), "citrongul");});
test("citronskiva -> citronskiv", function() {deepEqual( Stem("citronskiva"), "citronskiv");});
test("citronsyrad -> citronsyr", function() {deepEqual( Stem("citronsyrad"), "citronsyr");});
test("civilisation -> civilisation", function() {deepEqual( Stem("civilisation"), "civilisation");});
test("civilisationens -> civilisation", function() {deepEqual( Stem("civilisationens"), "civilisation");});
test("civiliserade -> civiliser", function() {deepEqual( Stem("civiliserade"), "civiliser");});
test("cj -> cj", function() {deepEqual( Stem("cj"), "cj");});
test("ckade -> ckad", function() {deepEqual( Stem("ckade"), "ckad");});
test("clct -> clct", function() {deepEqual( Stem("clct"), "clct");});
test("cldrött -> cldrött", function() {deepEqual( Stem("cldrött"), "cldrött");});
test("cleganta -> clegant", function() {deepEqual( Stem("cleganta"), "clegant");});
test("clownaktigt -> clownakt", function() {deepEqual( Stem("clownaktigt"), "clownakt");});
test("clätt -> clätt", function() {deepEqual( Stem("clätt"), "clätt");});
test("cn -> cn", function() {deepEqual( Stem("cn"), "cn");});
test("cns -> cns", function() {deepEqual( Stem("cns"), "cns");});
test("coeur -> coeur", function() {deepEqual( Stem("coeur"), "coeur");});
test("coldcream -> coldcream", function() {deepEqual( Stem("coldcream"), "coldcream");});
test("collvins -> collvin", function() {deepEqual( Stem("collvins"), "collvin");});
test("cologne -> cologn", function() {deepEqual( Stem("cologne"), "cologn");});
test("commun -> commun", function() {deepEqual( Stem("commun"), "commun");});
test("connoissent -> connoissent", function() {deepEqual( Stem("connoissent"), "connoissent");});
test("corde -> cord", function() {deepEqual( Stem("corde"), "cord");});
test("corpus -> corpus", function() {deepEqual( Stem("corpus"), "corpus");});
test("corydalis -> corydalis", function() {deepEqual( Stem("corydalis"), "corydalis");});
test("cr -> cr", function() {deepEqual( Stem("cr"), "cr");});
test("creature -> creatur", function() {deepEqual( Stem("creature"), "creatur");});
test("cremer -> crem", function() {deepEqual( Stem("cremer"), "crem");});
test("crepen -> crep", function() {deepEqual( Stem("crepen"), "crep");});
test("croit -> croit", function() {deepEqual( Stem("croit"), "croit");});
test("ct -> ct", function() {deepEqual( Stem("ct"), "ct");});
test("ctra -> ctra", function() {deepEqual( Stem("ctra"), "ctra");});
test("ctt -> ctt", function() {deepEqual( Stem("ctt"), "ctt");});
test("curetterna -> curet", function() {deepEqual( Stem("curetterna"), "curet");});
test("cyankalium -> cyankalium", function() {deepEqual( Stem("cyankalium"), "cyankalium");});
test("cyankaliumpiller -> cyankaliumpill", function() {deepEqual( Stem("cyankaliumpiller"), "cyankaliumpill");});
test("cylinder -> cylind", function() {deepEqual( Stem("cylinder"), "cylind");});
test("cylinderhatt -> cylinderhat", function() {deepEqual( Stem("cylinderhatt"), "cylinderhat");});
test("cyrenaiker -> cyrenaik", function() {deepEqual( Stem("cyrenaiker"), "cyrenaik");});
test("cyrenaikerna -> cyrenaik", function() {deepEqual( Stem("cyrenaikerna"), "cyrenaik");});
test("d -> d", function() {deepEqual( Stem("d"), "d");});
test("da -> da", function() {deepEqual( Stem("da"), "da");});
test("dad -> dad", function() {deepEqual( Stem("dad"), "dad");});
test("dadcs -> dadc", function() {deepEqual( Stem("dadcs"), "dadc");});
test("dade -> dad", function() {deepEqual( Stem("dade"), "dad");});
test("dag -> dag", function() {deepEqual( Stem("dag"), "dag");});
test("dagama -> dagam", function() {deepEqual( Stem("dagama"), "dagam");});
test("dagar -> dag", function() {deepEqual( Stem("dagar"), "dag");});
test("dagarna -> dag", function() {deepEqual( Stem("dagarna"), "dag");});
test("dagarnas -> dag", function() {deepEqual( Stem("dagarnas"), "dag");});
test("dagarne -> dag", function() {deepEqual( Stem("dagarne"), "dag");});
test("dagars -> dagar", function() {deepEqual( Stem("dagars"), "dagar");});
test("dagas -> dag", function() {deepEqual( Stem("dagas"), "dag");});
test("dagblad -> dagbl", function() {deepEqual( Stem("dagblad"), "dagbl");});
test("dagbladet -> dagbladet", function() {deepEqual( Stem("dagbladet"), "dagbladet");});
test("dagbladskontoret -> dagbladskontoret", function() {deepEqual( Stem("dagbladskontoret"), "dagbladskontoret");});
test("dagbok -> dagbok", function() {deepEqual( Stem("dagbok"), "dagbok");});
test("dagboken -> dagbok", function() {deepEqual( Stem("dagboken"), "dagbok");});
test("dagboksblad -> dagboksbl", function() {deepEqual( Stem("dagboksblad"), "dagboksbl");});
test("dagbokslappar -> dagbokslapp", function() {deepEqual( Stem("dagbokslappar"), "dagbokslapp");});
test("dagen -> dag", function() {deepEqual( Stem("dagen"), "dag");});
test("dagens -> dag", function() {deepEqual( Stem("dagens"), "dag");});
test("dager -> dag", function() {deepEqual( Stem("dager"), "dag");});
test("dagern -> dag", function() {deepEqual( Stem("dagern"), "dag");});
test("dagg -> dagg", function() {deepEqual( Stem("dagg"), "dagg");});
test("daggdroppe -> daggdropp", function() {deepEqual( Stem("daggdroppe"), "daggdropp");});
test("daggdtoppar -> daggdtopp", function() {deepEqual( Stem("daggdtoppar"), "daggdtopp");});
test("daggen -> dagg", function() {deepEqual( Stem("daggen"), "dagg");});
test("daggfrisk -> daggfrisk", function() {deepEqual( Stem("daggfrisk"), "daggfrisk");});
test("daggiga -> dagg", function() {deepEqual( Stem("daggiga"), "dagg");});
test("daggryningen -> daggryning", function() {deepEqual( Stem("daggryningen"), "daggryning");});
test("daglig -> dag", function() {deepEqual( Stem("daglig"), "dag");});
test("dagliga -> dag", function() {deepEqual( Stem("dagliga"), "dag");});
test("dagligen -> dag", function() {deepEqual( Stem("dagligen"), "dag");});
test("dagligrummet -> dagligrummet", function() {deepEqual( Stem("dagligrummet"), "dagligrummet");});
test("dagligt -> dag", function() {deepEqual( Stem("dagligt"), "dag");});
test("dagningen -> dagning", function() {deepEqual( Stem("dagningen"), "dagning");});
test("dags -> dag", function() {deepEqual( Stem("dags"), "dag");});
test("dagsarbete -> dagsarbet", function() {deepEqual( Stem("dagsarbete"), "dagsarbet");});
test("dagsljus -> dagsljus", function() {deepEqual( Stem("dagsljus"), "dagsljus");});
test("dagsljuset -> dagsljuset", function() {deepEqual( Stem("dagsljuset"), "dagsljuset");});
test("dagslång -> dagslång", function() {deepEqual( Stem("dagslång"), "dagslång");});
test("dagslånga -> dagslång", function() {deepEqual( Stem("dagslånga"), "dagslång");});
test("dagsresa -> dagsres", function() {deepEqual( Stem("dagsresa"), "dagsres");});
test("dagstaho -> dagstaho", function() {deepEqual( Stem("dagstaho"), "dagstaho");});
test("dagstahohlm -> dagstahohlm", function() {deepEqual( Stem("dagstahohlm"), "dagstahohlm");});
test("dagstaholm -> dagstaholm", function() {deepEqual( Stem("dagstaholm"), "dagstaholm");});
test("dal -> dal", function() {deepEqual( Stem("dal"), "dal");});
test("dala -> dal", function() {deepEqual( Stem("dala"), "dal");});
test("dalar -> dal", function() {deepEqual( Stem("dalar"), "dal");});
test("dalen -> dal", function() {deepEqual( Stem("dalen"), "dal");});
test("dalfolk -> dalfolk", function() {deepEqual( Stem("dalfolk"), "dalfolk");});
test("daligt -> dal", function() {deepEqual( Stem("daligt"), "dal");});
test("dalkarl -> dalkarl", function() {deepEqual( Stem("dalkarl"), "dalkarl");});
test("dallra -> dallr", function() {deepEqual( Stem("dallra"), "dallr");});
test("dallrade -> dallr", function() {deepEqual( Stem("dallrade"), "dallr");});
test("dallrande -> dallr", function() {deepEqual( Stem("dallrande"), "dallr");});
test("dallring -> dallring", function() {deepEqual( Stem("dallring"), "dallring");});
test("dalmålning -> dalmålning", function() {deepEqual( Stem("dalmålning"), "dalmålning");});
test("dalstedt -> dalsted", function() {deepEqual( Stem("dalstedt"), "dalsted");});
test("dam -> dam", function() {deepEqual( Stem("dam"), "dam");});
test("damast -> dam", function() {deepEqual( Stem("damast"), "dam");});
test("damastöverdraget -> damastöverdraget", function() {deepEqual( Stem("damastöverdraget"), "damastöverdraget");});
test("dame -> dam", function() {deepEqual( Stem("dame"), "dam");});
test("damen -> dam", function() {deepEqual( Stem("damen"), "dam");});
test("damens -> dam", function() {deepEqual( Stem("damens"), "dam");});
test("damer -> dam", function() {deepEqual( Stem("damer"), "dam");});
test("damerna -> dam", function() {deepEqual( Stem("damerna"), "dam");});
test("damm -> damm", function() {deepEqual( Stem("damm"), "damm");});
test("damma -> damm", function() {deepEqual( Stem("damma"), "damm");});
test("dammade -> damm", function() {deepEqual( Stem("dammade"), "damm");});
test("dammades -> damm", function() {deepEqual( Stem("dammades"), "damm");});
test("dammar -> damm", function() {deepEqual( Stem("dammar"), "damm");});
test("dammen -> damm", function() {deepEqual( Stem("dammen"), "damm");});
test("dammet -> dammet", function() {deepEqual( Stem("dammet"), "dammet");});
test("dammig -> damm", function() {deepEqual( Stem("dammig"), "damm");});
test("dammiga -> damm", function() {deepEqual( Stem("dammiga"), "damm");});
test("dammkorn -> dammkorn", function() {deepEqual( Stem("dammkorn"), "dammkorn");});
test("dammskyarna -> dammsky", function() {deepEqual( Stem("dammskyarna"), "dammsky");});
test("dampäls -> dampäl", function() {deepEqual( Stem("dampäls"), "dampäl");});
test("damring -> damring", function() {deepEqual( Stem("damring"), "damring");});
test("damtorkar -> damtork", function() {deepEqual( Stem("damtorkar"), "damtork");});
test("dan -> dan", function() {deepEqual( Stem("dan"), "dan");});
test("dana -> dan", function() {deepEqual( Stem("dana"), "dan");});
test("danad -> dan", function() {deepEqual( Stem("danad"), "dan");});
test("dandy -> dandy", function() {deepEqual( Stem("dandy"), "dandy");});
test("daniel -> daniel", function() {deepEqual( Stem("daniel"), "daniel");});
test("dankar -> dank", function() {deepEqual( Stem("dankar"), "dank");});
test("dans -> dan", function() {deepEqual( Stem("dans"), "dan");});
test("dansa -> dans", function() {deepEqual( Stem("dansa"), "dans");});
test("dansade -> dans", function() {deepEqual( Stem("dansade"), "dans");});
test("dansande -> dans", function() {deepEqual( Stem("dansande"), "dans");});
test("dansandes -> dans", function() {deepEqual( Stem("dansandes"), "dans");});
test("dansar -> dans", function() {deepEqual( Stem("dansar"), "dans");});
test("dansat -> dans", function() {deepEqual( Stem("dansat"), "dans");});
test("dansdocka -> dansdock", function() {deepEqual( Stem("dansdocka"), "dansdock");});
test("dansen -> dans", function() {deepEqual( Stem("dansen"), "dans");});
test("dansk -> dansk", function() {deepEqual( Stem("dansk"), "dansk");});
test("dansskola -> dansskol", function() {deepEqual( Stem("dansskola"), "dansskol");});
test("danssteg -> danssteg", function() {deepEqual( Stem("danssteg"), "danssteg");});
test("dant -> dant", function() {deepEqual( Stem("dant"), "dant");});
test("danviken -> danvik", function() {deepEqual( Stem("danviken"), "danvik");});
test("dar -> dar", function() {deepEqual( Stem("dar"), "dar");});
test("darfor -> darf", function() {deepEqual( Stem("darfor"), "darf");});
test("dari -> dari", function() {deepEqual( Stem("dari"), "dari");});
test("darifrån -> darifrån", function() {deepEqual( Stem("darifrån"), "darifrån");});
test("darom -> darom", function() {deepEqual( Stem("darom"), "darom");});
test("darr -> darr", function() {deepEqual( Stem("darr"), "darr");});
test("darra -> darr", function() {deepEqual( Stem("darra"), "darr");});
test("darrade -> darr", function() {deepEqual( Stem("darrade"), "darr");});
test("darrande -> darr", function() {deepEqual( Stem("darrande"), "darr");});
test("darrar -> darr", function() {deepEqual( Stem("darrar"), "darr");});
test("darrat -> darr", function() {deepEqual( Stem("darrat"), "darr");});
test("darrning -> darrning", function() {deepEqual( Stem("darrning"), "darrning");});
test("darvid -> darvid", function() {deepEqual( Stem("darvid"), "darvid");});
test("darwinismen -> darwinism", function() {deepEqual( Stem("darwinismen"), "darwinism");});
test("dasa -> das", function() {deepEqual( Stem("dasa"), "das");});
test("daterad -> dater", function() {deepEqual( Stem("daterad"), "dater");});
test("daterar -> dater", function() {deepEqual( Stem("daterar"), "dater");});
test("dato -> dato", function() {deepEqual( Stem("dato"), "dato");});
test("datorn -> datorn", function() {deepEqual( Stem("datorn"), "datorn");});
test("datorsbostaden -> datorsbostad", function() {deepEqual( Stem("datorsbostaden"), "datorsbostad");});
test("datum -> datum", function() {deepEqual( Stem("datum"), "datum");});
test("datumen -> datum", function() {deepEqual( Stem("datumen"), "datum");});
test("dc -> dc", function() {deepEqual( Stem("dc"), "dc");});
test("dcdför -> dcdför", function() {deepEqual( Stem("dcdför"), "dcdför");});
test("dcn -> dcn", function() {deepEqual( Stem("dcn"), "dcn");});
test("dct -> dct", function() {deepEqual( Stem("dct"), "dct");});
test("dcu -> dcu", function() {deepEqual( Stem("dcu"), "dcu");});
test("de -> de", function() {deepEqual( Stem("de"), "de");});
test("debatt -> debat", function() {deepEqual( Stem("debatt"), "debat");});
test("debet -> debet", function() {deepEqual( Stem("debet"), "debet");});
test("december -> decemb", function() {deepEqual( Stem("december"), "decemb");});
test("decembermörker -> decembermörk", function() {deepEqual( Stem("decembermörker"), "decembermörk");});
test("decemberstormen -> decemberstorm", function() {deepEqual( Stem("decemberstormen"), "decemberstorm");});
test("definition -> definition", function() {deepEqual( Stem("definition"), "definition");});
test("definitivt -> definitivt", function() {deepEqual( Stem("definitivt"), "definitivt");});
test("defunts -> defunt", function() {deepEqual( Stem("defunts"), "defunt");});
test("deg -> deg", function() {deepEqual( Stem("deg"), "deg");});
test("degen -> deg", function() {deepEqual( Stem("degen"), "deg");});
test("degkaret -> degkaret", function() {deepEqual( Stem("degkaret"), "degkaret");});
test("dejelig -> deje", function() {deepEqual( Stem("dejelig"), "deje");});
test("dekadans -> dekadan", function() {deepEqual( Stem("dekadans"), "dekadan");});
test("deklameras -> deklamer", function() {deepEqual( Stem("deklameras"), "deklamer");});
test("dekokter -> dekok", function() {deepEqual( Stem("dekokter"), "dekok");});
test("dekorationer -> dekoration", function() {deepEqual( Stem("dekorationer"), "dekoration");});
test("dekorationerna -> dekoration", function() {deepEqual( Stem("dekorationerna"), "dekoration");});
test("dekorativ -> dekorativ", function() {deepEqual( Stem("dekorativ"), "dekorativ");});
test("dekorerat -> dekorer", function() {deepEqual( Stem("dekorerat"), "dekorer");});
test("del -> del", function() {deepEqual( Stem("del"), "del");});
test("dela -> del", function() {deepEqual( Stem("dela"), "del");});
test("delad -> del", function() {deepEqual( Stem("delad"), "del");});
test("delade -> del", function() {deepEqual( Stem("delade"), "del");});
test("delades -> del", function() {deepEqual( Stem("delades"), "del");});
test("delaktig -> delakt", function() {deepEqual( Stem("delaktig"), "delakt");});
test("delande -> del", function() {deepEqual( Stem("delande"), "del");});
test("delar -> del", function() {deepEqual( Stem("delar"), "del");});
test("delarna -> del", function() {deepEqual( Stem("delarna"), "del");});
test("delarne -> del", function() {deepEqual( Stem("delarne"), "del");});
test("delas -> del", function() {deepEqual( Stem("delas"), "del");});
test("delat -> del", function() {deepEqual( Stem("delat"), "del");});
test("delen -> del", function() {deepEqual( Stem("delen"), "del");});
test("delicti -> delicti", function() {deepEqual( Stem("delicti"), "delicti");});
test("delikat -> delik", function() {deepEqual( Stem("delikat"), "delik");});
test("delikata -> delikat", function() {deepEqual( Stem("delikata"), "delikat");});
test("delikataste -> delikat", function() {deepEqual( Stem("delikataste"), "delikat");});
test("delila -> delil", function() {deepEqual( Stem("delila"), "delil");});
test("delma -> delm", function() {deepEqual( Stem("delma"), "delm");});
test("delos -> delo", function() {deepEqual( Stem("delos"), "delo");});
test("dels -> del", function() {deepEqual( Stem("dels"), "del");});
test("delsen -> dels", function() {deepEqual( Stem("delsen"), "dels");});
test("deltaga -> deltag", function() {deepEqual( Stem("deltaga"), "deltag");});
test("deltagande -> deltag", function() {deepEqual( Stem("deltagande"), "deltag");});
test("deltagandet -> deltag", function() {deepEqual( Stem("deltagandet"), "deltag");});
test("deltagaren -> deltag", function() {deepEqual( Stem("deltagaren"), "deltag");});
test("deltagit -> deltagit", function() {deepEqual( Stem("deltagit"), "deltagit");});
test("delvis -> delvis", function() {deepEqual( Stem("delvis"), "delvis");});
test("dem -> dem", function() {deepEqual( Stem("dem"), "dem");});
test("demagogen -> demagog", function() {deepEqual( Stem("demagogen"), "demagog");});
test("demla -> deml", function() {deepEqual( Stem("demla"), "deml");});
test("demma -> demm", function() {deepEqual( Stem("demma"), "demm");});
test("demokratisk -> demokratisk", function() {deepEqual( Stem("demokratisk"), "demokratisk");});
test("demonen -> demon", function() {deepEqual( Stem("demonen"), "demon");});
test("demonisk -> demonisk", function() {deepEqual( Stem("demonisk"), "demonisk");});
test("demoniskt -> demonisk", function() {deepEqual( Stem("demoniskt"), "demonisk");});
test("demonstration -> demonstration", function() {deepEqual( Stem("demonstration"), "demonstration");});
test("demostenes -> demosten", function() {deepEqual( Stem("demostenes"), "demosten");});
test("demutan -> demutan", function() {deepEqual( Stem("demutan"), "demutan");});
test("den -> den", function() {deepEqual( Stem("den"), "den");});
test("dena -> den", function() {deepEqual( Stem("dena"), "den");});
test("deneb -> deneb", function() {deepEqual( Stem("deneb"), "deneb");});
test("denna -> denn", function() {deepEqual( Stem("denna"), "denn");});
test("dennas -> denn", function() {deepEqual( Stem("dennas"), "denn");});
test("denne -> denn", function() {deepEqual( Stem("denne"), "denn");});
test("dennes -> denn", function() {deepEqual( Stem("dennes"), "denn");});
test("dens -> den", function() {deepEqual( Stem("dens"), "den");});
test("densamma -> densamm", function() {deepEqual( Stem("densamma"), "densamm");});
test("densamme -> densamm", function() {deepEqual( Stem("densamme"), "densamm");});
test("denscöconens -> denscöcon", function() {deepEqual( Stem("denscöconens"), "denscöcon");});
test("departemanget -> departemanget", function() {deepEqual( Stem("departemanget"), "departemanget");});
test("departement -> departement", function() {deepEqual( Stem("departement"), "departement");});
test("deporterad -> deporter", function() {deepEqual( Stem("deporterad"), "deporter");});
test("der -> der", function() {deepEqual( Stem("der"), "der");});
test("derade -> der", function() {deepEqual( Stem("derade"), "der");});
test("deraf -> deraf", function() {deepEqual( Stem("deraf"), "deraf");});
test("deras -> der", function() {deepEqual( Stem("deras"), "der");});
test("derefter -> dereft", function() {deepEqual( Stem("derefter"), "dereft");});
test("deremot -> deremot", function() {deepEqual( Stem("deremot"), "deremot");});
test("derest -> derest", function() {deepEqual( Stem("derest"), "derest");});
test("derför -> derför", function() {deepEqual( Stem("derför"), "derför");});
test("derföre -> derför", function() {deepEqual( Stem("derföre"), "derför");});
test("derhän -> derhän", function() {deepEqual( Stem("derhän"), "derhän");});
test("deri -> deri", function() {deepEqual( Stem("deri"), "deri");});
test("derifrån -> derifrån", function() {deepEqual( Stem("derifrån"), "derifrån");});
test("derigenom -> derigenom", function() {deepEqual( Stem("derigenom"), "derigenom");});
test("derinne -> derin", function() {deepEqual( Stem("derinne"), "derin");});
test("derjemte -> derjemt", function() {deepEqual( Stem("derjemte"), "derjemt");});
test("dermed -> dermed", function() {deepEqual( Stem("dermed"), "dermed");});
test("dermont -> dermont", function() {deepEqual( Stem("dermont"), "dermont");});
test("derna -> dern", function() {deepEqual( Stem("derna"), "dern");});
test("derom -> derom", function() {deepEqual( Stem("derom"), "derom");});
test("deromkring -> deromkring", function() {deepEqual( Stem("deromkring"), "deromkring");});
test("derpå -> derpå", function() {deepEqual( Stem("derpå"), "derpå");});
test("derstädes -> derstäd", function() {deepEqual( Stem("derstädes"), "derstäd");});
test("dertill -> dertill", function() {deepEqual( Stem("dertill"), "dertill");});
test("derunder -> derund", function() {deepEqual( Stem("derunder"), "derund");});
test("deruppe -> derupp", function() {deepEqual( Stem("deruppe"), "derupp");});
test("deruti -> deruti", function() {deepEqual( Stem("deruti"), "deruti");});
test("dervid -> dervid", function() {deepEqual( Stem("dervid"), "dervid");});
test("deråt -> deråt", function() {deepEqual( Stem("deråt"), "deråt");});
test("deröfver -> deröfv", function() {deepEqual( Stem("deröfver"), "deröfv");});
test("des -> des", function() {deepEqual( Stem("des"), "des");});
test("desamma -> desamm", function() {deepEqual( Stem("desamma"), "desamm");});
test("desorganisation -> desorganisation", function() {deepEqual( Stem("desorganisation"), "desorganisation");});
test("desperat -> desper", function() {deepEqual( Stem("desperat"), "desper");});
test("dess -> dess", function() {deepEqual( Stem("dess"), "dess");});
test("dessa -> dess", function() {deepEqual( Stem("dessa"), "dess");});
test("dessemellan -> dessemellan", function() {deepEqual( Stem("dessemellan"), "dessemellan");});
test("desserten -> dessert", function() {deepEqual( Stem("desserten"), "dessert");});
test("dessförinnan -> dessförinnan", function() {deepEqual( Stem("dessförinnan"), "dessförinnan");});
test("desslikes -> desslik", function() {deepEqual( Stem("desslikes"), "desslik");});
test("dessouernas -> dessou", function() {deepEqual( Stem("dessouernas"), "dessou");});
test("dessutom -> dessutom", function() {deepEqual( Stem("dessutom"), "dessutom");});
test("desto -> desto", function() {deepEqual( Stem("desto"), "desto");});
test("det -> det", function() {deepEqual( Stem("det"), "det");});
test("detalj -> detalj", function() {deepEqual( Stem("detalj"), "detalj");});
test("detaljer -> detalj", function() {deepEqual( Stem("detaljer"), "detalj");});
test("detaljkunskaper -> detaljkunskap", function() {deepEqual( Stem("detaljkunskaper"), "detaljkunskap");});
test("detektiv -> detektiv", function() {deepEqual( Stem("detektiv"), "detektiv");});
test("deth -> deth", function() {deepEqual( Stem("deth"), "deth");});
test("detsamma -> detsamm", function() {deepEqual( Stem("detsamma"), "detsamm");});
test("detta -> dett", function() {deepEqual( Stem("detta"), "dett");});
test("deva -> dev", function() {deepEqual( Stem("deva"), "dev");});
test("devient -> devient", function() {deepEqual( Stem("devient"), "devient");});
test("di -> di", function() {deepEqual( Stem("di"), "di");});
test("dia -> dia", function() {deepEqual( Stem("dia"), "dia");});
test("diagnosen -> diagnos", function() {deepEqual( Stem("diagnosen"), "diagnos");});
test("dianatemplet -> dianatemplet", function() {deepEqual( Stem("dianatemplet"), "dianatemplet");});
test("diciplars -> diciplar", function() {deepEqual( Stem("diciplars"), "diciplar");});
test("dier -> dier", function() {deepEqual( Stem("dier"), "dier");});
test("diet -> diet", function() {deepEqual( Stem("diet"), "diet");});
test("dieten -> diet", function() {deepEqual( Stem("dieten"), "diet");});
test("dietrich -> dietrich", function() {deepEqual( Stem("dietrich"), "dietrich");});
test("dig -> dig", function() {deepEqual( Stem("dig"), "dig");});
test("diger -> dig", function() {deepEqual( Stem("diger"), "dig");});
test("dighet -> dig", function() {deepEqual( Stem("dighet"), "dig");});
test("digheter -> dig", function() {deepEqual( Stem("digheter"), "dig");});
test("digitalis -> digitalis", function() {deepEqual( Stem("digitalis"), "digitalis");});
test("digl -> digl", function() {deepEqual( Stem("digl"), "digl");});
test("dignade -> dign", function() {deepEqual( Stem("dignade"), "dign");});
test("dignande -> dign", function() {deepEqual( Stem("dignande"), "dign");});
test("digt -> digt", function() {deepEqual( Stem("digt"), "digt");});
test("dikanten -> dikant", function() {deepEqual( Stem("dikanten"), "dikant");});
test("diken -> dik", function() {deepEqual( Stem("diken"), "dik");});
test("dikens -> dik", function() {deepEqual( Stem("dikens"), "dik");});
test("diket -> diket", function() {deepEqual( Stem("diket"), "diket");});
test("dikt -> dikt", function() {deepEqual( Stem("dikt"), "dikt");});
test("diktare -> dikt", function() {deepEqual( Stem("diktare"), "dikt");});
test("diktarefeber -> diktarefeb", function() {deepEqual( Stem("diktarefeber"), "diktarefeb");});
test("diktarna -> dikt", function() {deepEqual( Stem("diktarna"), "dikt");});
test("diktat -> dikt", function() {deepEqual( Stem("diktat"), "dikt");});
test("dikten -> dikt", function() {deepEqual( Stem("dikten"), "dikt");});
test("diktens -> dikt", function() {deepEqual( Stem("diktens"), "dikt");});
test("dikter -> dikt", function() {deepEqual( Stem("dikter"), "dikt");});
test("dikterad -> dikter", function() {deepEqual( Stem("dikterad"), "dikter");});
test("dikterat -> dikter", function() {deepEqual( Stem("dikterat"), "dikter");});
test("dikterna -> dikt", function() {deepEqual( Stem("dikterna"), "dikt");});
test("diktionären -> diktionär", function() {deepEqual( Stem("diktionären"), "diktionär");});
test("dim -> dim", function() {deepEqual( Stem("dim"), "dim");});
test("dimensioner -> dimension", function() {deepEqual( Stem("dimensioner"), "dimension");});
test("dimma -> dimm", function() {deepEqual( Stem("dimma"), "dimm");});
test("dimman -> dimman", function() {deepEqual( Stem("dimman"), "dimman");});
test("dimmig -> dimm", function() {deepEqual( Stem("dimmig"), "dimm");});
test("dimmor -> dimm", function() {deepEqual( Stem("dimmor"), "dimm");});
test("dimmorna -> dimm", function() {deepEqual( Stem("dimmorna"), "dimm");});
test("din -> din", function() {deepEqual( Stem("din"), "din");});
test("dina -> din", function() {deepEqual( Stem("dina"), "din");});
test("dingla -> dingl", function() {deepEqual( Stem("dingla"), "dingl");});
test("dinglade -> dingl", function() {deepEqual( Stem("dinglade"), "dingl");});
test("dinglande -> dingl", function() {deepEqual( Stem("dinglande"), "dingl");});
test("dinglar -> dingl", function() {deepEqual( Stem("dinglar"), "dingl");});
test("diplomat -> diplom", function() {deepEqual( Stem("diplomat"), "diplom");});
test("direkt -> direk", function() {deepEqual( Stem("direkt"), "direk");});
test("direkta -> direk", function() {deepEqual( Stem("direkta"), "direk");});
test("direktör -> direktör", function() {deepEqual( Stem("direktör"), "direktör");});
test("direktören -> direktör", function() {deepEqual( Stem("direktören"), "direktör");});
test("direktörn -> direktörn", function() {deepEqual( Stem("direktörn"), "direktörn");});
test("discipel -> discipel", function() {deepEqual( Stem("discipel"), "discipel");});
test("disciplinen -> disciplin", function() {deepEqual( Stem("disciplinen"), "disciplin");});
test("disigt -> dis", function() {deepEqual( Stem("disigt"), "dis");});
test("disk -> disk", function() {deepEqual( Stem("disk"), "disk");});
test("diska -> disk", function() {deepEqual( Stem("diska"), "disk");});
test("diskant -> diskant", function() {deepEqual( Stem("diskant"), "diskant");});
test("disken -> disk", function() {deepEqual( Stem("disken"), "disk");});
test("diskret -> diskret", function() {deepEqual( Stem("diskret"), "diskret");});
test("diskreta -> diskret", function() {deepEqual( Stem("diskreta"), "diskret");});
test("diskussion -> diskussion", function() {deepEqual( Stem("diskussion"), "diskussion");});
test("diskutera -> diskuter", function() {deepEqual( Stem("diskutera"), "diskuter");});
test("diskuterade -> diskuter", function() {deepEqual( Stem("diskuterade"), "diskuter");});
test("dispens -> disp", function() {deepEqual( Stem("dispens"), "disp");});
test("disponera -> disponer", function() {deepEqual( Stem("disponera"), "disponer");});
test("disposition -> disposition", function() {deepEqual( Stem("disposition"), "disposition");});
test("disputera -> disputer", function() {deepEqual( Stem("disputera"), "disputer");});
test("distansen -> distans", function() {deepEqual( Stem("distansen"), "distans");});
test("distrahera -> distraher", function() {deepEqual( Stem("distrahera"), "distraher");});
test("distriktet -> distriktet", function() {deepEqual( Stem("distriktet"), "distriktet");});
test("dit -> dit", function() {deepEqual( Stem("dit"), "dit");});
test("ditin -> ditin", function() {deepEqual( Stem("ditin"), "ditin");});
test("ditlades -> ditl", function() {deepEqual( Stem("ditlades"), "ditl");});
test("ditlocka -> ditlock", function() {deepEqual( Stem("ditlocka"), "ditlock");});
test("dito -> dito", function() {deepEqual( Stem("dito"), "dito");});
test("ditresan -> ditresan", function() {deepEqual( Stem("ditresan"), "ditresan");});
test("ditsatte -> ditsat", function() {deepEqual( Stem("ditsatte"), "ditsat");});
test("ditt -> ditt", function() {deepEqual( Stem("ditt"), "ditt");});
test("ditåt -> ditåt", function() {deepEqual( Stem("ditåt"), "ditåt");});
test("diurä -> diurä", function() {deepEqual( Stem("diurä"), "diurä");});
test("divansbordet -> divansbordet", function() {deepEqual( Stem("divansbordet"), "divansbordet");});
test("divergensen -> divergens", function() {deepEqual( Stem("divergensen"), "divergens");});
test("diverse -> divers", function() {deepEqual( Stem("diverse"), "divers");});
test("division -> division", function() {deepEqual( Stem("division"), "division");});
test("dj -> dj", function() {deepEqual( Stem("dj"), "dj");});
test("djerf -> djerf", function() {deepEqual( Stem("djerf"), "djerf");});
test("djerfhet -> djerf", function() {deepEqual( Stem("djerfhet"), "djerf");});
test("djerft -> djerft", function() {deepEqual( Stem("djerft"), "djerft");});
test("djerfva -> djerfv", function() {deepEqual( Stem("djerfva"), "djerfv");});
test("djerfve -> djerfv", function() {deepEqual( Stem("djerfve"), "djerfv");});
test("djungel -> djungel", function() {deepEqual( Stem("djungel"), "djungel");});
test("djup -> djup", function() {deepEqual( Stem("djup"), "djup");});
test("djupa -> djup", function() {deepEqual( Stem("djupa"), "djup");});
test("djupare -> djup", function() {deepEqual( Stem("djupare"), "djup");});
test("djupast -> djup", function() {deepEqual( Stem("djupast"), "djup");});
test("djupaste -> djup", function() {deepEqual( Stem("djupaste"), "djup");});
test("djupblå -> djupblå", function() {deepEqual( Stem("djupblå"), "djupblå");});
test("djupet -> djupet", function() {deepEqual( Stem("djupet"), "djupet");});
test("djupsinnigaste -> djupsinn", function() {deepEqual( Stem("djupsinnigaste"), "djupsinn");});
test("djupsinnighet -> djupsinn", function() {deepEqual( Stem("djupsinnighet"), "djupsinn");});
test("djupsinnigt -> djupsinn", function() {deepEqual( Stem("djupsinnigt"), "djupsinn");});
test("djupt -> djupt", function() {deepEqual( Stem("djupt"), "djupt");});
test("djur -> djur", function() {deepEqual( Stem("djur"), "djur");});
test("djuransiktet -> djuransiktet", function() {deepEqual( Stem("djuransiktet"), "djuransiktet");});
test("djurbilder -> djurbild", function() {deepEqual( Stem("djurbilder"), "djurbild");});
test("djuren -> djur", function() {deepEqual( Stem("djuren"), "djur");});
test("djuret -> djuret", function() {deepEqual( Stem("djuret"), "djuret");});
test("djurets -> djuret", function() {deepEqual( Stem("djurets"), "djuret");});
test("djurgård -> djurgård", function() {deepEqual( Stem("djurgård"), "djurgård");});
test("djurgården -> djurgård", function() {deepEqual( Stem("djurgården"), "djurgård");});
test("djurgårds -> djurgård", function() {deepEqual( Stem("djurgårds"), "djurgård");});
test("djurgårdsbrunn -> djurgårdsbrun", function() {deepEqual( Stem("djurgårdsbrunn"), "djurgårdsbrun");});
test("djurgårdsspektaklet -> djurgårdsspektaklet", function() {deepEqual( Stem("djurgårdsspektaklet"), "djurgårdsspektaklet");});
test("djuriskt -> djurisk", function() {deepEqual( Stem("djuriskt"), "djurisk");});
test("djurs -> djur", function() {deepEqual( Stem("djurs"), "djur");});
test("djä -> djä", function() {deepEqual( Stem("djä"), "djä");});
test("djärv -> djärv", function() {deepEqual( Stem("djärv"), "djärv");});
test("djärva -> djärv", function() {deepEqual( Stem("djärva"), "djärv");});
test("djärvare -> djärv", function() {deepEqual( Stem("djärvare"), "djärv");});
test("djärvhet -> djärv", function() {deepEqual( Stem("djärvhet"), "djärv");});
test("djärvt -> djärvt", function() {deepEqual( Stem("djärvt"), "djärvt");});
test("djävlar -> djävl", function() {deepEqual( Stem("djävlar"), "djävl");});
test("djävlarna -> djävl", function() {deepEqual( Stem("djävlarna"), "djävl");});
test("djävulen -> djävul", function() {deepEqual( Stem("djävulen"), "djävul");});
test("djävuln -> djävuln", function() {deepEqual( Stem("djävuln"), "djävuln");});
test("djävulskvinna -> djävulskvin", function() {deepEqual( Stem("djävulskvinna"), "djävulskvin");});
test("dli -> dli", function() {deepEqual( Stem("dli"), "dli");});
test("dll -> dll", function() {deepEqual( Stem("dll"), "dll");});
test("dln -> dln", function() {deepEqual( Stem("dln"), "dln");});
test("dlodet -> dlodet", function() {deepEqual( Stem("dlodet"), "dlodet");});
test("docent -> docent", function() {deepEqual( Stem("docent"), "docent");});
test("dock -> dock", function() {deepEqual( Stem("dock"), "dock");});
test("docka -> dock", function() {deepEqual( Stem("docka"), "dock");});
test("dockan -> dockan", function() {deepEqual( Stem("dockan"), "dockan");});
test("dockklädningen -> dockklädning", function() {deepEqual( Stem("dockklädningen"), "dockklädning");});
test("dockor -> dock", function() {deepEqual( Stem("dockor"), "dock");});
test("dockorna -> dock", function() {deepEqual( Stem("dockorna"), "dock");});
test("dod -> dod", function() {deepEqual( Stem("dod"), "dod");});
test("doden -> dod", function() {deepEqual( Stem("doden"), "dod");});
test("dof -> dof", function() {deepEqual( Stem("dof"), "dof");});
test("doft -> doft", function() {deepEqual( Stem("doft"), "doft");});
test("dofta -> doft", function() {deepEqual( Stem("dofta"), "doft");});
test("doftade -> doft", function() {deepEqual( Stem("doftade"), "doft");});
test("doftande -> doft", function() {deepEqual( Stem("doftande"), "doft");});
test("doftar -> doft", function() {deepEqual( Stem("doftar"), "doft");});
test("doften -> doft", function() {deepEqual( Stem("doften"), "doft");});
test("dofters -> dofter", function() {deepEqual( Stem("dofters"), "dofter");});
test("doftsjäl -> doftsjäl", function() {deepEqual( Stem("doftsjäl"), "doftsjäl");});
test("dofva -> dofv", function() {deepEqual( Stem("dofva"), "dofv");});
test("dog -> dog", function() {deepEqual( Stem("dog"), "dog");});
test("doge -> dog", function() {deepEqual( Stem("doge"), "dog");});
test("dogg -> dogg", function() {deepEqual( Stem("dogg"), "dogg");});
test("dogo -> dogo", function() {deepEqual( Stem("dogo"), "dogo");});
test("dok -> dok", function() {deepEqual( Stem("dok"), "dok");});
test("doktor -> dokt", function() {deepEqual( Stem("doktor"), "dokt");});
test("doktorinnan -> doktorinnan", function() {deepEqual( Stem("doktorinnan"), "doktorinnan");});
test("doktorn -> doktorn", function() {deepEqual( Stem("doktorn"), "doktorn");});
test("doktorns -> doktorn", function() {deepEqual( Stem("doktorns"), "doktorn");});
test("doktorsdisputation -> doktorsdisputation", function() {deepEqual( Stem("doktorsdisputation"), "doktorsdisputation");});
test("dokument -> dokument", function() {deepEqual( Stem("dokument"), "dokument");});
test("dokumenterat -> dokumenter", function() {deepEqual( Stem("dokumenterat"), "dokumenter");});
test("dokumentet -> dokumentet", function() {deepEqual( Stem("dokumentet"), "dokumentet");});
test("dold -> dold", function() {deepEqual( Stem("dold"), "dold");});
test("dolda -> dold", function() {deepEqual( Stem("dolda"), "dold");});
test("dolde -> dold", function() {deepEqual( Stem("dolde"), "dold");});
test("doldes -> dold", function() {deepEqual( Stem("doldes"), "dold");});
test("doljas -> dolj", function() {deepEqual( Stem("doljas"), "dolj");});
test("doljer -> dolj", function() {deepEqual( Stem("doljer"), "dolj");});
test("doljs -> dolj", function() {deepEqual( Stem("doljs"), "dolj");});
test("dolt -> dolt", function() {deepEqual( Stem("dolt"), "dolt");});
test("dolts -> dolt", function() {deepEqual( Stem("dolts"), "dolt");});
test("dom -> dom", function() {deepEqual( Stem("dom"), "dom");});
test("domar -> dom", function() {deepEqual( Stem("domar"), "dom");});
test("domare -> dom", function() {deepEqual( Stem("domare"), "dom");});
test("domaren -> dom", function() {deepEqual( Stem("domaren"), "dom");});
test("domareuppsyn -> domareuppsyn", function() {deepEqual( Stem("domareuppsyn"), "domareuppsyn");});
test("domarevärdigheten -> domarevärd", function() {deepEqual( Stem("domarevärdigheten"), "domarevärd");});
test("domarinnan -> domarinnan", function() {deepEqual( Stem("domarinnan"), "domarinnan");});
test("domcn -> domcn", function() {deepEqual( Stem("domcn"), "domcn");});
test("domderade -> domder", function() {deepEqual( Stem("domderade"), "domder");});
test("domedag -> domedag", function() {deepEqual( Stem("domedag"), "domedag");});
test("domen -> dom", function() {deepEqual( Stem("domen"), "dom");});
test("domer -> dom", function() {deepEqual( Stem("domer"), "dom");});
test("domfällande -> domfäll", function() {deepEqual( Stem("domfällande"), "domfäll");});
test("domkyrka -> domkyrk", function() {deepEqual( Stem("domkyrka"), "domkyrk");});
test("domkyrkans -> domkyrkan", function() {deepEqual( Stem("domkyrkans"), "domkyrkan");});
test("domna -> domn", function() {deepEqual( Stem("domna"), "domn");});
test("domnad -> domn", function() {deepEqual( Stem("domnad"), "domn");});
test("domnade -> domn", function() {deepEqual( Stem("domnade"), "domn");});
test("domning -> domning", function() {deepEqual( Stem("domning"), "domning");});
test("domprostgården -> domprostgård", function() {deepEqual( Stem("domprostgården"), "domprostgård");});
test("doms -> dom", function() {deepEqual( Stem("doms"), "dom");});
test("domsaga -> domsag", function() {deepEqual( Stem("domsaga"), "domsag");});
test("domsagan -> domsagan", function() {deepEqual( Stem("domsagan"), "domsagan");});
test("domsagor -> domsag", function() {deepEqual( Stem("domsagor"), "domsag");});
test("don -> don", function() {deepEqual( Stem("don"), "don");});
test("dopattest -> dopattest", function() {deepEqual( Stem("dopattest"), "dopattest");});
test("dopet -> dopet", function() {deepEqual( Stem("dopet"), "dopet");});
test("dopp -> dopp", function() {deepEqual( Stem("dopp"), "dopp");});
test("doppa -> dopp", function() {deepEqual( Stem("doppa"), "dopp");});
test("doppade -> dopp", function() {deepEqual( Stem("doppade"), "dopp");});
test("doppar -> dopp", function() {deepEqual( Stem("doppar"), "dopp");});
test("dora -> dor", function() {deepEqual( Stem("dora"), "dor");});
test("doras -> dor", function() {deepEqual( Stem("doras"), "dor");});
test("dork -> dork", function() {deepEqual( Stem("dork"), "dork");});
test("dorr -> dorr", function() {deepEqual( Stem("dorr"), "dorr");});
test("dorren -> dorr", function() {deepEqual( Stem("dorren"), "dorr");});
test("dosa -> dos", function() {deepEqual( Stem("dosa"), "dos");});
test("dosan -> dosan", function() {deepEqual( Stem("dosan"), "dosan");});
test("dosis -> dosis", function() {deepEqual( Stem("dosis"), "dosis");});
test("dott -> dott", function() {deepEqual( Stem("dott"), "dott");});
test("dotter -> dott", function() {deepEqual( Stem("dotter"), "dott");});
test("dotterlig -> dotter", function() {deepEqual( Stem("dotterlig"), "dotter");});
test("dottern -> dott", function() {deepEqual( Stem("dottern"), "dott");});
test("dotterns -> dott", function() {deepEqual( Stem("dotterns"), "dott");});
test("dotters -> dotter", function() {deepEqual( Stem("dotters"), "dotter");});
test("dov -> dov", function() {deepEqual( Stem("dov"), "dov");});
test("dova -> dov", function() {deepEqual( Stem("dova"), "dov");});
test("dovt -> dovt", function() {deepEqual( Stem("dovt"), "dovt");});
test("dr -> dr", function() {deepEqual( Stem("dr"), "dr");});
test("dra -> dra", function() {deepEqual( Stem("dra"), "dra");});
test("drabant -> drabant", function() {deepEqual( Stem("drabant"), "drabant");});
test("drabbningar -> drabbning", function() {deepEqual( Stem("drabbningar"), "drabbning");});
test("drack -> drack", function() {deepEqual( Stem("drack"), "drack");});
test("drag -> drag", function() {deepEqual( Stem("drag"), "drag");});
test("draga -> drag", function() {deepEqual( Stem("draga"), "drag");});
test("dragande -> drag", function() {deepEqual( Stem("dragande"), "drag");});
test("dragas -> drag", function() {deepEqual( Stem("dragas"), "drag");});
test("dragen -> drag", function() {deepEqual( Stem("dragen"), "drag");});
test("drager -> drag", function() {deepEqual( Stem("drager"), "drag");});
test("draget -> draget", function() {deepEqual( Stem("draget"), "draget");});
test("dragg -> dragg", function() {deepEqual( Stem("dragg"), "dragg");});
test("draggen -> dragg", function() {deepEqual( Stem("draggen"), "dragg");});
test("dragit -> dragit", function() {deepEqual( Stem("dragit"), "dragit");});
test("dragits -> dragit", function() {deepEqual( Stem("dragits"), "dragit");});
test("dragkista -> dragkist", function() {deepEqual( Stem("dragkista"), "dragkist");});
test("dragkistan -> dragkistan", function() {deepEqual( Stem("dragkistan"), "dragkistan");});
test("dragna -> dragn", function() {deepEqual( Stem("dragna"), "dragn");});
test("dragning -> dragning", function() {deepEqual( Stem("dragning"), "dragning");});
test("dragonerna -> dragon", function() {deepEqual( Stem("dragonerna"), "dragon");});
test("dragshållaren -> dragshåll", function() {deepEqual( Stem("dragshållaren"), "dragshåll");});
test("dragspel -> dragspel", function() {deepEqual( Stem("dragspel"), "dragspel");});
test("drakar -> drak", function() {deepEqual( Stem("drakar"), "drak");});
test("draken -> drak", function() {deepEqual( Stem("draken"), "drak");});
test("drakens -> drak", function() {deepEqual( Stem("drakens"), "drak");});
test("dramatiska -> dramatisk", function() {deepEqual( Stem("dramatiska"), "dramatisk");});
test("draperad -> draper", function() {deepEqual( Stem("draperad"), "draper");});
test("draperade -> draper", function() {deepEqual( Stem("draperade"), "draper");});
test("draperande -> draper", function() {deepEqual( Stem("draperande"), "draper");});
test("draperi -> draperi", function() {deepEqual( Stem("draperi"), "draperi");});
test("draperier -> draperi", function() {deepEqual( Stem("draperier"), "draperi");});
test("draperiet -> draperiet", function() {deepEqual( Stem("draperiet"), "draperiet");});
test("draperingen -> drapering", function() {deepEqual( Stem("draperingen"), "drapering");});
test("drar -> drar", function() {deepEqual( Stem("drar"), "drar");});
test("dras -> dras", function() {deepEqual( Stem("dras"), "dras");});
test("dref -> dref", function() {deepEqual( Stem("dref"), "dref");});
test("dreg -> dreg", function() {deepEqual( Stem("dreg"), "dreg");});
test("dreglande -> dregl", function() {deepEqual( Stem("dreglande"), "dregl");});
test("dresserad -> dresser", function() {deepEqual( Stem("dresserad"), "dresser");});
test("drev -> drev", function() {deepEqual( Stem("drev"), "drev");});
test("dreve -> drev", function() {deepEqual( Stem("dreve"), "drev");});
test("drevkarlar -> drevkarl", function() {deepEqual( Stem("drevkarlar"), "drevkarl");});
test("drevo -> drevo", function() {deepEqual( Stem("drevo"), "drevo");});
test("drevs -> drev", function() {deepEqual( Stem("drevs"), "drev");});
test("dreyfus -> dreyfus", function() {deepEqual( Stem("dreyfus"), "dreyfus");});
test("dreyfusaffären -> dreyfusaffär", function() {deepEqual( Stem("dreyfusaffären"), "dreyfusaffär");});
test("dreyfusard -> dreyfusard", function() {deepEqual( Stem("dreyfusard"), "dreyfusard");});
test("drick -> drick", function() {deepEqual( Stem("drick"), "drick");});
test("dricka -> drick", function() {deepEqual( Stem("dricka"), "drick");});
test("drickaren -> drick", function() {deepEqual( Stem("drickaren"), "drick");});
test("dricker -> drick", function() {deepEqual( Stem("dricker"), "drick");});
test("drickspengar -> drickspeng", function() {deepEqual( Stem("drickspengar"), "drickspeng");});
test("drickspengarne -> drickspeng", function() {deepEqual( Stem("drickspengarne"), "drickspeng");});
test("drift -> drift", function() {deepEqual( Stem("drift"), "drift");});
test("driftens -> drift", function() {deepEqual( Stem("driftens"), "drift");});
test("drifter -> drift", function() {deepEqual( Stem("drifter"), "drift");});
test("driftiga -> drift", function() {deepEqual( Stem("driftiga"), "drift");});
test("driftige -> drift", function() {deepEqual( Stem("driftige"), "drift");});
test("driftliv -> driftliv", function() {deepEqual( Stem("driftliv"), "driftliv");});
test("drifva -> drifv", function() {deepEqual( Stem("drifva"), "drifv");});
test("drifver -> drifv", function() {deepEqual( Stem("drifver"), "drifv");});
test("drifvit -> drifvit", function() {deepEqual( Stem("drifvit"), "drifvit");});
test("drifvor -> drifv", function() {deepEqual( Stem("drifvor"), "drifv");});
test("drill -> drill", function() {deepEqual( Stem("drill"), "drill");});
test("drillade -> drill", function() {deepEqual( Stem("drillade"), "drill");});
test("drillar -> drill", function() {deepEqual( Stem("drillar"), "drill");});
test("drillat -> drill", function() {deepEqual( Stem("drillat"), "drill");});
test("drillen -> drill", function() {deepEqual( Stem("drillen"), "drill");});
test("dris -> dris", function() {deepEqual( Stem("dris"), "dris");});
test("dristade -> drist", function() {deepEqual( Stem("dristade"), "drist");});
test("dristar -> drist", function() {deepEqual( Stem("dristar"), "drist");});
test("dristighet -> drist", function() {deepEqual( Stem("dristighet"), "drist");});
test("dristigt -> drist", function() {deepEqual( Stem("dristigt"), "drist");});
test("driva -> driv", function() {deepEqual( Stem("driva"), "driv");});
test("drivande -> driv", function() {deepEqual( Stem("drivande"), "driv");});
test("drivans -> drivan", function() {deepEqual( Stem("drivans"), "drivan");});
test("driven -> driv", function() {deepEqual( Stem("driven"), "driv");});
test("driver -> driv", function() {deepEqual( Stem("driver"), "driv");});
test("drivfjädrar -> drivfjädr", function() {deepEqual( Stem("drivfjädrar"), "drivfjädr");});
test("drivit -> drivit", function() {deepEqual( Stem("drivit"), "drivit");});
test("drivits -> drivit", function() {deepEqual( Stem("drivits"), "drivit");});
test("drivna -> drivn", function() {deepEqual( Stem("drivna"), "drivn");});
test("drivor -> driv", function() {deepEqual( Stem("drivor"), "driv");});
test("drivorna -> driv", function() {deepEqual( Stem("drivorna"), "driv");});
test("drog -> drog", function() {deepEqual( Stem("drog"), "drog");});
test("drogo -> drogo", function() {deepEqual( Stem("drogo"), "drogo");});
test("drogos -> drogo", function() {deepEqual( Stem("drogos"), "drogo");});
test("drogs -> drog", function() {deepEqual( Stem("drogs"), "drog");});
test("dropp -> dropp", function() {deepEqual( Stem("dropp"), "dropp");});
test("droppa -> dropp", function() {deepEqual( Stem("droppa"), "dropp");});
test("droppade -> dropp", function() {deepEqual( Stem("droppade"), "dropp");});
test("droppar -> dropp", function() {deepEqual( Stem("droppar"), "dropp");});
test("droppe -> dropp", function() {deepEqual( Stem("droppe"), "dropp");});
test("droppen -> dropp", function() {deepEqual( Stem("droppen"), "dropp");});
test("droska -> drosk", function() {deepEqual( Stem("droska"), "drosk");});
test("droskbil -> droskbil", function() {deepEqual( Stem("droskbil"), "droskbil");});
test("droskkusk -> droskkusk", function() {deepEqual( Stem("droskkusk"), "droskkusk");});
test("droskkuskarna -> droskkusk", function() {deepEqual( Stem("droskkuskarna"), "droskkusk");});
test("droskorna -> drosk", function() {deepEqual( Stem("droskorna"), "drosk");});
test("drosksläde -> drosksläd", function() {deepEqual( Stem("drosksläde"), "drosksläd");});
test("drottning -> drottning", function() {deepEqual( Stem("drottning"), "drottning");});
test("drottningbenådade -> drottningbenåd", function() {deepEqual( Stem("drottningbenådade"), "drottningbenåd");});
test("drottningen -> drottning", function() {deepEqual( Stem("drottningen"), "drottning");});
test("drottninggatan -> drottninggatan", function() {deepEqual( Stem("drottninggatan"), "drottninggatan");});
test("drucken -> druck", function() {deepEqual( Stem("drucken"), "druck");});
test("druckit -> druckit", function() {deepEqual( Stem("druckit"), "druckit");});
test("druckna -> druckn", function() {deepEqual( Stem("druckna"), "druckn");});
test("drucko -> drucko", function() {deepEqual( Stem("drucko"), "drucko");});
test("drufvans -> drufvan", function() {deepEqual( Stem("drufvans"), "drufvan");});
test("drummel -> drummel", function() {deepEqual( Stem("drummel"), "drummel");});
test("drummeln -> drummeln", function() {deepEqual( Stem("drummeln"), "drummeln");});
test("drunkna -> drunkn", function() {deepEqual( Stem("drunkna"), "drunkn");});
test("drunknad -> drunkn", function() {deepEqual( Stem("drunknad"), "drunkn");});
test("drunknade -> drunkn", function() {deepEqual( Stem("drunknade"), "drunkn");});
test("drunknar -> drunkn", function() {deepEqual( Stem("drunknar"), "drunkn");});
test("drunknat -> drunkn", function() {deepEqual( Stem("drunknat"), "drunkn");});
test("drunkningsdöden -> drunkningsdöd", function() {deepEqual( Stem("drunkningsdöden"), "drunkningsdöd");});
test("drupit -> drupit", function() {deepEqual( Stem("drupit"), "drupit");});
test("druvans -> druvan", function() {deepEqual( Stem("druvans"), "druvan");});
test("druvor -> druv", function() {deepEqual( Stem("druvor"), "druv");});
test("druvors -> druvor", function() {deepEqual( Stem("druvors"), "druvor");});
test("dry -> dry", function() {deepEqual( Stem("dry"), "dry");});
test("dryaden -> dryad", function() {deepEqual( Stem("dryaden"), "dryad");});
test("dryck -> dryck", function() {deepEqual( Stem("dryck"), "dryck");});
test("drycken -> dryck", function() {deepEqual( Stem("drycken"), "dryck");});
test("drycker -> dryck", function() {deepEqual( Stem("drycker"), "dryck");});
test("dryftade -> dryft", function() {deepEqual( Stem("dryftade"), "dryft");});
test("dryga -> dryg", function() {deepEqual( Stem("dryga"), "dryg");});
test("drygt -> drygt", function() {deepEqual( Stem("drygt"), "drygt");});
test("drypa -> dryp", function() {deepEqual( Stem("drypa"), "dryp");});
test("drypande -> dryp", function() {deepEqual( Stem("drypande"), "dryp");});
test("dryper -> dryp", function() {deepEqual( Stem("dryper"), "dryp");});
test("drägg -> drägg", function() {deepEqual( Stem("drägg"), "drägg");});
test("dräkt -> dräkt", function() {deepEqual( Stem("dräkt"), "dräkt");});
test("dräkten -> dräkt", function() {deepEqual( Stem("dräkten"), "dräkt");});
test("dräll -> dräll", function() {deepEqual( Stem("dräll"), "dräll");});
test("drällen -> dräll", function() {deepEqual( Stem("drällen"), "dräll");});
test("dräng -> dräng", function() {deepEqual( Stem("dräng"), "dräng");});
test("drängar -> dräng", function() {deepEqual( Stem("drängar"), "dräng");});
test("drängarna -> dräng", function() {deepEqual( Stem("drängarna"), "dräng");});
test("drängen -> dräng", function() {deepEqual( Stem("drängen"), "dräng");});
test("drängnävar -> drängnäv", function() {deepEqual( Stem("drängnävar"), "drängnäv");});
test("dränka -> dränk", function() {deepEqual( Stem("dränka"), "dränk");});
test("dränker -> dränk", function() {deepEqual( Stem("dränker"), "dränk");});
test("dräpa -> dräp", function() {deepEqual( Stem("dräpa"), "dräp");});
test("dräpt -> dräpt", function() {deepEqual( Stem("dräpt"), "dräpt");});
test("dråplig -> dråp", function() {deepEqual( Stem("dråplig"), "dråp");});
test("dråpliga -> dråp", function() {deepEqual( Stem("dråpliga"), "dråp");});
test("dröja -> dröj", function() {deepEqual( Stem("dröja"), "dröj");});
test("dröjande -> dröj", function() {deepEqual( Stem("dröjande"), "dröj");});
test("dröjde -> dröjd", function() {deepEqual( Stem("dröjde"), "dröjd");});
test("dröjer -> dröj", function() {deepEqual( Stem("dröjer"), "dröj");});
test("dröjsmål -> dröjsmål", function() {deepEqual( Stem("dröjsmål"), "dröjsmål");});
test("dröjt -> dröjt", function() {deepEqual( Stem("dröjt"), "dröjt");});
test("dröm -> dröm", function() {deepEqual( Stem("dröm"), "dröm");});
test("drömde -> drömd", function() {deepEqual( Stem("drömde"), "drömd");});
test("drömlikt -> drömlik", function() {deepEqual( Stem("drömlikt"), "drömlik");});
test("drömma -> drömm", function() {deepEqual( Stem("drömma"), "drömm");});
test("drömmande -> drömm", function() {deepEqual( Stem("drömmande"), "drömm");});
test("drömmar -> drömm", function() {deepEqual( Stem("drömmar"), "drömm");});
test("drömmare -> drömm", function() {deepEqual( Stem("drömmare"), "drömm");});
test("drömmarna -> drömm", function() {deepEqual( Stem("drömmarna"), "drömm");});
test("drömmarnas -> drömm", function() {deepEqual( Stem("drömmarnas"), "drömm");});
test("drömmars -> drömmar", function() {deepEqual( Stem("drömmars"), "drömmar");});
test("drömmen -> drömm", function() {deepEqual( Stem("drömmen"), "drömm");});
test("drömmens -> drömm", function() {deepEqual( Stem("drömmens"), "drömm");});
test("drömmer -> drömm", function() {deepEqual( Stem("drömmer"), "drömm");});
test("drömt -> drömt", function() {deepEqual( Stem("drömt"), "drömt");});
test("drömvärld -> drömvärld", function() {deepEqual( Stem("drömvärld"), "drömvärld");});
test("dröp -> dröp", function() {deepEqual( Stem("dröp"), "dröp");});
test("drövade -> dröv", function() {deepEqual( Stem("drövade"), "dröv");});
test("du -> du", function() {deepEqual( Stem("du"), "du");});
test("duat -> duat", function() {deepEqual( Stem("duat"), "duat");});
test("dubbeldröm -> dubbeldröm", function() {deepEqual( Stem("dubbeldröm"), "dubbeldröm");});
test("dubbelfönstren -> dubbelfönstr", function() {deepEqual( Stem("dubbelfönstren"), "dubbelfönstr");});
test("dubbelgångare -> dubbelgång", function() {deepEqual( Stem("dubbelgångare"), "dubbelgång");});
test("dubbelhet -> dubbel", function() {deepEqual( Stem("dubbelhet"), "dubbel");});
test("dubbelliv -> dubbelliv", function() {deepEqual( Stem("dubbelliv"), "dubbelliv");});
test("dubbellorgnett -> dubbellorgnet", function() {deepEqual( Stem("dubbellorgnett"), "dubbellorgnet");});
test("dubbelroller -> dubbelroll", function() {deepEqual( Stem("dubbelroller"), "dubbelroll");});
test("dubbelt -> dubbelt", function() {deepEqual( Stem("dubbelt"), "dubbelt");});
test("dubbla -> dubbl", function() {deepEqual( Stem("dubbla"), "dubbl");});
test("dufvan -> dufvan", function() {deepEqual( Stem("dufvan"), "dufvan");});
test("duga -> dug", function() {deepEqual( Stem("duga"), "dug");});
test("dugande -> dug", function() {deepEqual( Stem("dugande"), "dug");});
test("dugde -> dugd", function() {deepEqual( Stem("dugde"), "dugd");});
test("duger -> dug", function() {deepEqual( Stem("duger"), "dug");});
test("duggregn -> duggregn", function() {deepEqual( Stem("duggregn"), "duggregn");});
test("duggregna -> duggregn", function() {deepEqual( Stem("duggregna"), "duggregn");});
test("duggregnet -> duggregnet", function() {deepEqual( Stem("duggregnet"), "duggregnet");});
test("dugligheten -> dug", function() {deepEqual( Stem("dugligheten"), "dug");});
test("dugtig -> dugt", function() {deepEqual( Stem("dugtig"), "dugt");});
test("dugtigt -> dugt", function() {deepEqual( Stem("dugtigt"), "dugt");});
test("duk -> duk", function() {deepEqual( Stem("duk"), "duk");});
test("duka -> duk", function() {deepEqual( Stem("duka"), "duk");});
test("dukade -> duk", function() {deepEqual( Stem("dukade"), "duk");});
test("dukades -> duk", function() {deepEqual( Stem("dukades"), "duk");});
test("dukadt -> dukad", function() {deepEqual( Stem("dukadt"), "dukad");});
test("dukar -> duk", function() {deepEqual( Stem("dukar"), "duk");});
test("dukas -> duk", function() {deepEqual( Stem("dukas"), "duk");});
test("dukat -> duk", function() {deepEqual( Stem("dukat"), "duk");});
test("duken -> duk", function() {deepEqual( Stem("duken"), "duk");});
test("dukning -> dukning", function() {deepEqual( Stem("dukning"), "dukning");});
test("duktig -> dukt", function() {deepEqual( Stem("duktig"), "dukt");});
test("duktiga -> dukt", function() {deepEqual( Stem("duktiga"), "dukt");});
test("duktigare -> dukt", function() {deepEqual( Stem("duktigare"), "dukt");});
test("duktigt -> dukt", function() {deepEqual( Stem("duktigt"), "dukt");});
test("dum -> dum", function() {deepEqual( Stem("dum"), "dum");});
test("dumhet -> dum", function() {deepEqual( Stem("dumhet"), "dum");});
test("dumheter -> dum", function() {deepEqual( Stem("dumheter"), "dum");});
test("dumma -> dumm", function() {deepEqual( Stem("dumma"), "dumm");});
test("dummare -> dumm", function() {deepEqual( Stem("dummare"), "dumm");});
test("dummaste -> dumm", function() {deepEqual( Stem("dummaste"), "dumm");});
test("dumme -> dumm", function() {deepEqual( Stem("dumme"), "dumm");});
test("dumt -> dumt", function() {deepEqual( Stem("dumt"), "dumt");});
test("dun -> dun", function() {deepEqual( Stem("dun"), "dun");});
test("dundrade -> dundr", function() {deepEqual( Stem("dundrade"), "dundr");});
test("dundrar -> dundr", function() {deepEqual( Stem("dundrar"), "dundr");});
test("dundrat -> dundr", function() {deepEqual( Stem("dundrat"), "dundr");});
test("duniga -> dun", function() {deepEqual( Stem("duniga"), "dun");});
test("dunigt -> dun", function() {deepEqual( Stem("dunigt"), "dun");});
test("dunk -> dunk", function() {deepEqual( Stem("dunk"), "dunk");});
test("dunka -> dunk", function() {deepEqual( Stem("dunka"), "dunk");});
test("dunkadc -> dunkadc", function() {deepEqual( Stem("dunkadc"), "dunkadc");});
test("dunkade -> dunk", function() {deepEqual( Stem("dunkade"), "dunk");});
test("dunkande -> dunk", function() {deepEqual( Stem("dunkande"), "dunk");});
test("dunkar -> dunk", function() {deepEqual( Stem("dunkar"), "dunk");});
test("dunkel -> dunkel", function() {deepEqual( Stem("dunkel"), "dunkel");});
test("dunkelt -> dunkelt", function() {deepEqual( Stem("dunkelt"), "dunkelt");});
test("dunkla -> dunkl", function() {deepEqual( Stem("dunkla"), "dunkl");});
test("dunklar -> dunkl", function() {deepEqual( Stem("dunklar"), "dunkl");});
test("dunklare -> dunkl", function() {deepEqual( Stem("dunklare"), "dunkl");});
test("dunklet -> dunklet", function() {deepEqual( Stem("dunklet"), "dunklet");});
test("duns -> dun", function() {deepEqual( Stem("duns"), "dun");});
test("dunsar -> duns", function() {deepEqual( Stem("dunsar"), "duns");});
test("dunst -> dunst", function() {deepEqual( Stem("dunst"), "dunst");});
test("dunstade -> dunst", function() {deepEqual( Stem("dunstade"), "dunst");});
test("dunstat -> dunst", function() {deepEqual( Stem("dunstat"), "dunst");});
test("dunster -> dunst", function() {deepEqual( Stem("dunster"), "dunst");});
test("dunstkretsen -> dunstkrets", function() {deepEqual( Stem("dunstkretsen"), "dunstkrets");});
test("dur -> dur", function() {deepEqual( Stem("dur"), "dur");});
test("durk -> durk", function() {deepEqual( Stem("durk"), "durk");});
test("dus -> dus", function() {deepEqual( Stem("dus"), "dus");});
test("duschbad -> duschb", function() {deepEqual( Stem("duschbad"), "duschb");});
test("dussin -> dussin", function() {deepEqual( Stem("dussin"), "dussin");});
test("dusör -> dusör", function() {deepEqual( Stem("dusör"), "dusör");});
test("duva -> duv", function() {deepEqual( Stem("duva"), "duv");});
test("duvan -> duvan", function() {deepEqual( Stem("duvan"), "duvan");});
test("duvas -> duv", function() {deepEqual( Stem("duvas"), "duv");});
test("duvor -> duv", function() {deepEqual( Stem("duvor"), "duv");});
test("duvoröst -> duvoröst", function() {deepEqual( Stem("duvoröst"), "duvoröst");});
test("duvovingar -> duvoving", function() {deepEqual( Stem("duvovingar"), "duvoving");});
test("duvoögon -> duvoögon", function() {deepEqual( Stem("duvoögon"), "duvoögon");});
test("duvunge -> duvung", function() {deepEqual( Stem("duvunge"), "duvung");});
test("duvögon -> duvögon", function() {deepEqual( Stem("duvögon"), "duvögon");});
test("dvala -> dval", function() {deepEqual( Stem("dvala"), "dval");});
test("dvaldes -> dvald", function() {deepEqual( Stem("dvaldes"), "dvald");});
test("dväljas -> dvälj", function() {deepEqual( Stem("dväljas"), "dvälj");});
test("dvärg -> dvärg", function() {deepEqual( Stem("dvärg"), "dvärg");});
test("dvärgman -> dvärgman", function() {deepEqual( Stem("dvärgman"), "dvärgman");});
test("dy -> dy", function() {deepEqual( Stem("dy"), "dy");});
test("dygd -> dygd", function() {deepEqual( Stem("dygd"), "dygd");});
test("dygde -> dygd", function() {deepEqual( Stem("dygde"), "dygd");});
test("dygden -> dygd", function() {deepEqual( Stem("dygden"), "dygd");});
test("dygdig -> dygd", function() {deepEqual( Stem("dygdig"), "dygd");});
test("dygdige -> dygd", function() {deepEqual( Stem("dygdige"), "dygd");});
test("dygdigt -> dygd", function() {deepEqual( Stem("dygdigt"), "dygd");});
test("dygn -> dygn", function() {deepEqual( Stem("dygn"), "dygn");});
test("dygnet -> dygnet", function() {deepEqual( Stem("dygnet"), "dygnet");});
test("dyka -> dyk", function() {deepEqual( Stem("dyka"), "dyk");});
test("dyker -> dyk", function() {deepEqual( Stem("dyker"), "dyk");});
test("dykt -> dykt", function() {deepEqual( Stem("dykt"), "dykt");});
test("dylik -> dylik", function() {deepEqual( Stem("dylik"), "dylik");});
test("dylika -> dylik", function() {deepEqual( Stem("dylika"), "dylik");});
test("dylikt -> dylik", function() {deepEqual( Stem("dylikt"), "dylik");});
test("dyn -> dyn", function() {deepEqual( Stem("dyn"), "dyn");});
test("dyna -> dyn", function() {deepEqual( Stem("dyna"), "dyn");});
test("dyning -> dyning", function() {deepEqual( Stem("dyning"), "dyning");});
test("dyningar -> dyning", function() {deepEqual( Stem("dyningar"), "dyning");});
test("dyningarna -> dyning", function() {deepEqual( Stem("dyningarna"), "dyning");});
test("dynorna -> dyn", function() {deepEqual( Stem("dynorna"), "dyn");});
test("dyr -> dyr", function() {deepEqual( Stem("dyr"), "dyr");});
test("dyra -> dyr", function() {deepEqual( Stem("dyra"), "dyr");});
test("dyrare -> dyr", function() {deepEqual( Stem("dyrare"), "dyr");});
test("dyraste -> dyr", function() {deepEqual( Stem("dyraste"), "dyr");});
test("dyrbar -> dyrb", function() {deepEqual( Stem("dyrbar"), "dyrb");});
test("dyrbara -> dyrbar", function() {deepEqual( Stem("dyrbara"), "dyrbar");});
test("dyrbarare -> dyrbar", function() {deepEqual( Stem("dyrbarare"), "dyrbar");});
test("dyrbaraste -> dyrbar", function() {deepEqual( Stem("dyrbaraste"), "dyrbar");});
test("dyrbarheter -> dyrbar", function() {deepEqual( Stem("dyrbarheter"), "dyrbar");});
test("dyre -> dyr", function() {deepEqual( Stem("dyre"), "dyr");});
test("dyrhet -> dyr", function() {deepEqual( Stem("dyrhet"), "dyr");});
test("dyrka -> dyrk", function() {deepEqual( Stem("dyrka"), "dyrk");});
test("dyrkade -> dyrk", function() {deepEqual( Stem("dyrkade"), "dyrk");});
test("dyrkan -> dyrkan", function() {deepEqual( Stem("dyrkan"), "dyrkan");});
test("dyrköpt -> dyrköpt", function() {deepEqual( Stem("dyrköpt"), "dyrköpt");});
test("dyrköpta -> dyrköpt", function() {deepEqual( Stem("dyrköpta"), "dyrköpt");});
test("dyrt -> dyrt", function() {deepEqual( Stem("dyrt"), "dyrt");});
test("dyst -> dyst", function() {deepEqual( Stem("dyst"), "dyst");});
test("dyster -> dyst", function() {deepEqual( Stem("dyster"), "dyst");});
test("dysterhet -> dyster", function() {deepEqual( Stem("dysterhet"), "dyster");});
test("dystert -> dystert", function() {deepEqual( Stem("dystert"), "dystert");});
test("dystra -> dystr", function() {deepEqual( Stem("dystra"), "dystr");});
test("dystre -> dystr", function() {deepEqual( Stem("dystre"), "dystr");});
test("dä -> dä", function() {deepEqual( Stem("dä"), "dä");});
test("däck -> däck", function() {deepEqual( Stem("däck"), "däck");});
test("däcken -> däck", function() {deepEqual( Stem("däcken"), "däck");});
test("däcket -> däcket", function() {deepEqual( Stem("däcket"), "däcket");});
test("däcksbåten -> däcksbåt", function() {deepEqual( Stem("däcksbåten"), "däcksbåt");});
test("däckslasten -> däckslast", function() {deepEqual( Stem("däckslasten"), "däckslast");});
test("dädan -> dädan", function() {deepEqual( Stem("dädan"), "dädan");});
test("dägga -> dägg", function() {deepEqual( Stem("dägga"), "dägg");});
test("däl -> däl", function() {deepEqual( Stem("däl"), "däl");});
test("dämpad -> dämp", function() {deepEqual( Stem("dämpad"), "dämp");});
test("dämpade -> dämp", function() {deepEqual( Stem("dämpade"), "dämp");});
test("dämpades -> dämp", function() {deepEqual( Stem("dämpades"), "dämp");});
test("dämpande -> dämp", function() {deepEqual( Stem("dämpande"), "dämp");});
test("dämpat -> dämp", function() {deepEqual( Stem("dämpat"), "dämp");});
test("dämt -> dämt", function() {deepEqual( Stem("dämt"), "dämt");});
test("dän -> dän", function() {deepEqual( Stem("dän"), "dän");});
test("dängde -> däng", function() {deepEqual( Stem("dängde"), "däng");});
test("där -> där", function() {deepEqual( Stem("där"), "där");});
test("därat -> där", function() {deepEqual( Stem("därat"), "där");});
test("därav -> därav", function() {deepEqual( Stem("därav"), "därav");});
test("därbakom -> därbakom", function() {deepEqual( Stem("därbakom"), "därbakom");});
test("därborta -> därbort", function() {deepEqual( Stem("därborta"), "därbort");});
test("därefter -> däreft", function() {deepEqual( Stem("därefter"), "däreft");});
test("däremot -> däremot", function() {deepEqual( Stem("däremot"), "däremot");});
test("därest -> därest", function() {deepEqual( Stem("därest"), "därest");});
test("därfor -> därf", function() {deepEqual( Stem("därfor"), "därf");});
test("därför -> därför", function() {deepEqual( Stem("därför"), "därför");});
test("därföre -> därför", function() {deepEqual( Stem("därföre"), "därför");});
test("därhemma -> därhemm", function() {deepEqual( Stem("därhemma"), "därhemm");});
test("därhos -> därho", function() {deepEqual( Stem("därhos"), "därho");});
test("därhän -> därhän", function() {deepEqual( Stem("därhän"), "därhän");});
test("däri -> däri", function() {deepEqual( Stem("däri"), "däri");});
test("därifrall -> därifrall", function() {deepEqual( Stem("därifrall"), "därifrall");});
test("därifran -> därifran", function() {deepEqual( Stem("därifran"), "därifran");});
test("därifrån -> därifrån", function() {deepEqual( Stem("därifrån"), "därifrån");});
test("därigenom -> därigenom", function() {deepEqual( Stem("därigenom"), "därigenom");});
test("därigenorm -> därigenorm", function() {deepEqual( Stem("därigenorm"), "därigenorm");});
test("därinifrån -> därinifrån", function() {deepEqual( Stem("därinifrån"), "därinifrån");});
test("därinnanför -> därinnanför", function() {deepEqual( Stem("därinnanför"), "därinnanför");});
test("därinne -> därin", function() {deepEqual( Stem("därinne"), "därin");});
test("därintill -> därintill", function() {deepEqual( Stem("därintill"), "därintill");});
test("därinunder -> därinund", function() {deepEqual( Stem("därinunder"), "därinund");});
test("därjämte -> därjämt", function() {deepEqual( Stem("därjämte"), "därjämt");});
test("därmed -> därmed", function() {deepEqual( Stem("därmed"), "därmed");});
test("därnedan -> därnedan", function() {deepEqual( Stem("därnedan"), "därnedan");});
test("därnedanför -> därnedanför", function() {deepEqual( Stem("därnedanför"), "därnedanför");});
test("därnere -> därner", function() {deepEqual( Stem("därnere"), "därner");});
test("därnäst -> därnäst", function() {deepEqual( Stem("därnäst"), "därnäst");});
test("därom -> därom", function() {deepEqual( Stem("därom"), "därom");});
test("därpa -> därp", function() {deepEqual( Stem("därpa"), "därp");});
test("därpå -> därpå", function() {deepEqual( Stem("därpå"), "därpå");});
test("därstädes -> därstäd", function() {deepEqual( Stem("därstädes"), "därstäd");});
test("därtill -> därtill", function() {deepEqual( Stem("därtill"), "därtill");});
test("därunder -> därund", function() {deepEqual( Stem("därunder"), "därund");});
test("däruppe -> därupp", function() {deepEqual( Stem("däruppe"), "därupp");});
test("därur -> därur", function() {deepEqual( Stem("därur"), "därur");});
test("därute -> därut", function() {deepEqual( Stem("därute"), "därut");});
test("däruti -> däruti", function() {deepEqual( Stem("däruti"), "däruti");});
test("därutur -> därutur", function() {deepEqual( Stem("därutur"), "därutur");});
test("därutöver -> därutöv", function() {deepEqual( Stem("därutöver"), "därutöv");});
test("därvid -> därvid", function() {deepEqual( Stem("därvid"), "därvid");});
test("däråt -> däråt", function() {deepEqual( Stem("däråt"), "däråt");});
test("däröver -> däröv", function() {deepEqual( Stem("däröver"), "däröv");});
test("då -> då", function() {deepEqual( Stem("då"), "då");});
test("dågot -> dågot", function() {deepEqual( Stem("dågot"), "dågot");});
test("dålig -> dål", function() {deepEqual( Stem("dålig"), "dål");});
test("dåliga -> dål", function() {deepEqual( Stem("dåliga"), "dål");});
test("dåligare -> dål", function() {deepEqual( Stem("dåligare"), "dål");});
test("dålighet -> dål", function() {deepEqual( Stem("dålighet"), "dål");});
test("dåligt -> dål", function() {deepEqual( Stem("dåligt"), "dål");});
test("dån -> dån", function() {deepEqual( Stem("dån"), "dån");});
test("dånade -> dån", function() {deepEqual( Stem("dånade"), "dån");});
test("dånande -> dån", function() {deepEqual( Stem("dånande"), "dån");});
test("dånar -> dån", function() {deepEqual( Stem("dånar"), "dån");});
test("dånat -> dån", function() {deepEqual( Stem("dånat"), "dån");});
test("dånet -> dånet", function() {deepEqual( Stem("dånet"), "dånet");});
test("dåningen -> dåning", function() {deepEqual( Stem("dåningen"), "dåning");});
test("dår -> dår", function() {deepEqual( Stem("dår"), "dår");});
test("dåra -> dår", function() {deepEqual( Stem("dåra"), "dår");});
test("dåraktiga -> dårakt", function() {deepEqual( Stem("dåraktiga"), "dårakt");});
test("dåraktigt -> dårakt", function() {deepEqual( Stem("dåraktigt"), "dårakt");});
test("dårande -> dår", function() {deepEqual( Stem("dårande"), "dår");});
test("dårars -> dårar", function() {deepEqual( Stem("dårars"), "dårar");});
test("dårat -> dår", function() {deepEqual( Stem("dårat"), "dår");});
test("dåre -> dår", function() {deepEqual( Stem("dåre"), "dår");});
test("dåren -> dår", function() {deepEqual( Stem("dåren"), "dår");});
test("dårhus -> dårhus", function() {deepEqual( Stem("dårhus"), "dårhus");});
test("dårhusen -> dårhus", function() {deepEqual( Stem("dårhusen"), "dårhus");});
test("dårhuside -> dårhusid", function() {deepEqual( Stem("dårhuside"), "dårhusid");});
test("dårskap -> dårskap", function() {deepEqual( Stem("dårskap"), "dårskap");});
test("dårskapen -> dårskap", function() {deepEqual( Stem("dårskapen"), "dårskap");});
test("dåsa -> dås", function() {deepEqual( Stem("dåsa"), "dås");});
test("dåsigt -> dås", function() {deepEqual( Stem("dåsigt"), "dås");});
test("dö -> dö", function() {deepEqual( Stem("dö"), "dö");});
test("död -> död", function() {deepEqual( Stem("död"), "död");});
test("döda -> död", function() {deepEqual( Stem("döda"), "död");});
test("dödade -> död", function() {deepEqual( Stem("dödade"), "död");});
test("dödande -> död", function() {deepEqual( Stem("dödande"), "död");});
test("dödar -> död", function() {deepEqual( Stem("dödar"), "död");});
test("dödas -> död", function() {deepEqual( Stem("dödas"), "död");});
test("dödat -> död", function() {deepEqual( Stem("dödat"), "död");});
test("dödbenskult -> dödbenskult", function() {deepEqual( Stem("dödbenskult"), "dödbenskult");});
test("döddagar -> döddag", function() {deepEqual( Stem("döddagar"), "döddag");});
test("döde -> död", function() {deepEqual( Stem("döde"), "död");});
test("döden -> död", function() {deepEqual( Stem("döden"), "död");});
test("dödens -> död", function() {deepEqual( Stem("dödens"), "död");});
test("dödfött -> dödföt", function() {deepEqual( Stem("dödfött"), "dödföt");});
test("dödlig -> död", function() {deepEqual( Stem("dödlig"), "död");});
test("dödliga -> död", function() {deepEqual( Stem("dödliga"), "död");});
test("dödligt -> död", function() {deepEqual( Stem("dödligt"), "död");});
test("döds -> död", function() {deepEqual( Stem("döds"), "död");});
test("dödsattesten -> dödsattest", function() {deepEqual( Stem("dödsattesten"), "dödsattest");});
test("dödsbädd -> dödsbäd", function() {deepEqual( Stem("dödsbädd"), "dödsbäd");});
test("dödsdag -> dödsdag", function() {deepEqual( Stem("dödsdag"), "dödsdag");});
test("dödsdömd -> dödsdömd", function() {deepEqual( Stem("dödsdömd"), "dödsdömd");});
test("dödsdömde -> dödsdömd", function() {deepEqual( Stem("dödsdömde"), "dödsdömd");});
test("dödsfall -> dödsfall", function() {deepEqual( Stem("dödsfall"), "dödsfall");});
test("dödsfallet -> dödsfallet", function() {deepEqual( Stem("dödsfallet"), "dödsfallet");});
test("dödsfiende -> dödsfiend", function() {deepEqual( Stem("dödsfiende"), "dödsfiend");});
test("dödskonvulsionerna -> dödskonvulsion", function() {deepEqual( Stem("dödskonvulsionerna"), "dödskonvulsion");});
test("dödsmärket -> dödsmärket", function() {deepEqual( Stem("dödsmärket"), "dödsmärket");});
test("dödsmörkret -> dödsmörkret", function() {deepEqual( Stem("dödsmörkret"), "dödsmörkret");});
test("dödsorsaken -> dödsorsak", function() {deepEqual( Stem("dödsorsaken"), "dödsorsak");});
test("dödsskräcken -> dödsskräck", function() {deepEqual( Stem("dödsskräcken"), "dödsskräck");});
test("dödsskrämda -> dödsskrämd", function() {deepEqual( Stem("dödsskrämda"), "dödsskrämd");});
test("dödsskuegornas -> dödsskueg", function() {deepEqual( Stem("dödsskuegornas"), "dödsskueg");});
test("dödsskuggor -> dödsskugg", function() {deepEqual( Stem("dödsskuggor"), "dödsskugg");});
test("dödsstraff -> dödsstraff", function() {deepEqual( Stem("dödsstraff"), "dödsstraff");});
test("dödsstund -> dödsstund", function() {deepEqual( Stem("dödsstund"), "dödsstund");});
test("dödssuck -> dödssuck", function() {deepEqual( Stem("dödssuck"), "dödssuck");});
test("dödssuckar -> dödssuck", function() {deepEqual( Stem("dödssuckar"), "dödssuck");});
test("dödssynd -> dödssynd", function() {deepEqual( Stem("dödssynd"), "dödssynd");});
test("dödssynderna -> dödssynd", function() {deepEqual( Stem("dödssynderna"), "dödssynd");});
test("dödssäng -> dödssäng", function() {deepEqual( Stem("dödssäng"), "dödssäng");});
test("dödstyst -> dödstyst", function() {deepEqual( Stem("dödstyst"), "dödstyst");});
test("dödsångesten -> dödsångest", function() {deepEqual( Stem("dödsångesten"), "dödsångest");});
test("döende -> döend", function() {deepEqual( Stem("döende"), "döend");});
test("döf -> döf", function() {deepEqual( Stem("döf"), "döf");});
test("döfstum -> döfstum", function() {deepEqual( Stem("döfstum"), "döfstum");});
test("döfva -> döfv", function() {deepEqual( Stem("döfva"), "döfv");});
test("dök -> dök", function() {deepEqual( Stem("dök"), "dök");});
test("döko -> döko", function() {deepEqual( Stem("döko"), "döko");});
test("dölja -> dölj", function() {deepEqual( Stem("dölja"), "dölj");});
test("döljande -> dölj", function() {deepEqual( Stem("döljande"), "dölj");});
test("döljer -> dölj", function() {deepEqual( Stem("döljer"), "dölj");});
test("döm -> döm", function() {deepEqual( Stem("döm"), "döm");});
test("döma -> döm", function() {deepEqual( Stem("döma"), "döm");});
test("dömd -> dömd", function() {deepEqual( Stem("dömd"), "dömd");});
test("dömda -> dömd", function() {deepEqual( Stem("dömda"), "dömd");});
test("dömde -> dömd", function() {deepEqual( Stem("dömde"), "dömd");});
test("döme -> döm", function() {deepEqual( Stem("döme"), "döm");});
test("dömer -> döm", function() {deepEqual( Stem("dömer"), "döm");});
test("dömt -> dömt", function() {deepEqual( Stem("dömt"), "dömt");});
test("dön -> dön", function() {deepEqual( Stem("dön"), "dön");});
test("döpt -> döpt", function() {deepEqual( Stem("döpt"), "döpt");});
test("dör -> dör", function() {deepEqual( Stem("dör"), "dör");});
test("döra -> dör", function() {deepEqual( Stem("döra"), "dör");});
test("dörr -> dörr", function() {deepEqual( Stem("dörr"), "dörr");});
test("dörrar -> dörr", function() {deepEqual( Stem("dörrar"), "dörr");});
test("dörrarna -> dörr", function() {deepEqual( Stem("dörrarna"), "dörr");});
test("dörrcn -> dörrcn", function() {deepEqual( Stem("dörrcn"), "dörrcn");});
test("dörrell -> dörrell", function() {deepEqual( Stem("dörrell"), "dörrell");});
test("dörren -> dörr", function() {deepEqual( Stem("dörren"), "dörr");});
test("dörrlaset -> dörrlaset", function() {deepEqual( Stem("dörrlaset"), "dörrlaset");});
test("dörrskyltarna -> dörrskylt", function() {deepEqual( Stem("dörrskyltarna"), "dörrskylt");});
test("dörrspringa -> dörrspring", function() {deepEqual( Stem("dörrspringa"), "dörrspring");});
test("dörrvredet -> dörrvredet", function() {deepEqual( Stem("dörrvredet"), "dörrvredet");});
test("dött -> dött", function() {deepEqual( Stem("dött"), "dött");});
test("döttrar -> döttr", function() {deepEqual( Stem("döttrar"), "döttr");});
test("döttrarna -> döttr", function() {deepEqual( Stem("döttrarna"), "döttr");});
test("döv -> döv", function() {deepEqual( Stem("döv"), "döv");});
test("döva -> döv", function() {deepEqual( Stem("döva"), "döv");});
test("dövad -> döv", function() {deepEqual( Stem("dövad"), "döv");});
test("dövades -> döv", function() {deepEqual( Stem("dövades"), "döv");});
test("e -> e", function() {deepEqual( Stem("e"), "e");});
test("ea -> ea", function() {deepEqual( Stem("ea"), "ea");});
test("eau -> eau", function() {deepEqual( Stem("eau"), "eau");});
test("ebbar -> ebb", function() {deepEqual( Stem("ebbar"), "ebb");});
test("ecklesiastikminister -> ecklesiastikminist", function() {deepEqual( Stem("ecklesiastikminister"), "ecklesiastikminist");});
test("ed -> ed", function() {deepEqual( Stem("ed"), "ed");});
test("eden -> eden", function() {deepEqual( Stem("eden"), "eden");});
test("eder -> eder", function() {deepEqual( Stem("eder"), "eder");});
test("edla -> edl", function() {deepEqual( Stem("edla"), "edl");});
test("edligt -> edl", function() {deepEqual( Stem("edligt"), "edl");});
test("edra -> edr", function() {deepEqual( Stem("edra"), "edr");});
test("edward -> edward", function() {deepEqual( Stem("edward"), "edward");});
test("efesus -> efesus", function() {deepEqual( Stem("efesus"), "efesus");});
test("effekt -> effek", function() {deepEqual( Stem("effekt"), "effek");});
test("effter -> efft", function() {deepEqual( Stem("effter"), "efft");});
test("eftcr -> eftcr", function() {deepEqual( Stem("eftcr"), "eftcr");});
test("eftel -> eftel", function() {deepEqual( Stem("eftel"), "eftel");});
test("efter -> eft", function() {deepEqual( Stem("efter"), "eft");});
test("efterapande -> efterap", function() {deepEqual( Stem("efterapande"), "efterap");});
test("efterbildningen -> efterbildning", function() {deepEqual( Stem("efterbildningen"), "efterbildning");});
test("efterfikar -> efterfik", function() {deepEqual( Stem("efterfikar"), "efterfik");});
test("efterfråga -> efterfråg", function() {deepEqual( Stem("efterfråga"), "efterfråg");});
test("efterfrågade -> efterfråg", function() {deepEqual( Stem("efterfrågade"), "efterfråg");});
test("efterföljd -> efterföljd", function() {deepEqual( Stem("efterföljd"), "efterföljd");});
test("eftergift -> eftergift", function() {deepEqual( Stem("eftergift"), "eftergift");});
test("eftergifvande -> eftergifv", function() {deepEqual( Stem("eftergifvande"), "eftergifv");});
test("eftergifven -> eftergifv", function() {deepEqual( Stem("eftergifven"), "eftergifv");});
test("eftergivande -> eftergiv", function() {deepEqual( Stem("eftergivande"), "eftergiv");});
test("efterhängsenhet -> efterhängsen", function() {deepEqual( Stem("efterhängsenhet"), "efterhängsen");});
test("efterhärma -> efterhärm", function() {deepEqual( Stem("efterhärma"), "efterhärm");});
test("efterhärmade -> efterhärm", function() {deepEqual( Stem("efterhärmade"), "efterhärm");});
test("efterhållen -> efterhåll", function() {deepEqual( Stem("efterhållen"), "efterhåll");});
test("efterhörde -> efterhörd", function() {deepEqual( Stem("efterhörde"), "efterhörd");});
test("efterkomma -> efterkomm", function() {deepEqual( Stem("efterkomma"), "efterkomm");});
test("efterlemnade -> efterlemn", function() {deepEqual( Stem("efterlemnade"), "efterlemn");});
test("efterlämnade -> efterlämn", function() {deepEqual( Stem("efterlämnade"), "efterlämn");});
test("efterlämnar -> efterlämn", function() {deepEqual( Stem("efterlämnar"), "efterlämn");});
test("efterlämnat -> efterlämn", function() {deepEqual( Stem("efterlämnat"), "efterlämn");});
test("efterlängtad -> efterläng", function() {deepEqual( Stem("efterlängtad"), "efterläng");});
test("efterlängtade -> efterläng", function() {deepEqual( Stem("efterlängtade"), "efterläng");});
test("efterlängtar -> efterläng", function() {deepEqual( Stem("efterlängtar"), "efterläng");});
test("efterlängtat -> efterläng", function() {deepEqual( Stem("efterlängtat"), "efterläng");});
test("eftermiddag -> eftermiddag", function() {deepEqual( Stem("eftermiddag"), "eftermiddag");});
test("eftermiddagarna -> eftermiddag", function() {deepEqual( Stem("eftermiddagarna"), "eftermiddag");});
test("eftermiddagarne -> eftermiddag", function() {deepEqual( Stem("eftermiddagarne"), "eftermiddag");});
test("eftermiddagen -> eftermiddag", function() {deepEqual( Stem("eftermiddagen"), "eftermiddag");});
test("eftermiddags -> eftermiddag", function() {deepEqual( Stem("eftermiddags"), "eftermiddag");});
test("eftermiddagssolen -> eftermiddagssol", function() {deepEqual( Stem("eftermiddagssolen"), "eftermiddagssol");});
test("eftermiddagsvakten -> eftermiddagsvak", function() {deepEqual( Stem("eftermiddagsvakten"), "eftermiddagsvak");});
test("efternamnet -> efternamnet", function() {deepEqual( Stem("efternamnet"), "efternamnet");});
test("efterräknade -> efterräkn", function() {deepEqual( Stem("efterräknade"), "efterräkn");});
test("efterrättelse -> efterrätt", function() {deepEqual( Stem("efterrättelse"), "efterrätt");});
test("efterrätten -> efterrät", function() {deepEqual( Stem("efterrätten"), "efterrät");});
test("efterrätter -> efterrät", function() {deepEqual( Stem("efterrätter"), "efterrät");});
test("eftersade -> efters", function() {deepEqual( Stem("eftersade"), "efters");});
test("efterse -> efters", function() {deepEqual( Stem("efterse"), "efters");});
test("eftersinna -> eftersin", function() {deepEqual( Stem("eftersinna"), "eftersin");});
test("eftersinnande -> eftersin", function() {deepEqual( Stem("eftersinnande"), "eftersin");});
test("eftersom -> eftersom", function() {deepEqual( Stem("eftersom"), "eftersom");});
test("efterspaningar -> efterspaning", function() {deepEqual( Stem("efterspaningar"), "efterspaning");});
test("efterspel -> efterspel", function() {deepEqual( Stem("efterspel"), "efterspel");});
test("efterst -> efterst", function() {deepEqual( Stem("efterst"), "efterst");});
test("eftersträfva -> eftersträfv", function() {deepEqual( Stem("eftersträfva"), "eftersträfv");});
test("eftersträfvar -> eftersträfv", function() {deepEqual( Stem("eftersträfvar"), "eftersträfv");});
test("eftersträva -> eftersträv", function() {deepEqual( Stem("eftersträva"), "eftersträv");});
test("eftersträvade -> eftersträv", function() {deepEqual( Stem("eftersträvade"), "eftersträv");});
test("eftersträvansvärt -> eftersträvansvärt", function() {deepEqual( Stem("eftersträvansvärt"), "eftersträvansvärt");});
test("efterstygn -> efterstygn", function() {deepEqual( Stem("efterstygn"), "efterstygn");});
test("eftersyn -> eftersyn", function() {deepEqual( Stem("eftersyn"), "eftersyn");});
test("eftersökt -> eftersök", function() {deepEqual( Stem("eftersökt"), "eftersök");});
test("eftersökta -> eftersök", function() {deepEqual( Stem("eftersökta"), "eftersök");});
test("eftertanke -> eftertank", function() {deepEqual( Stem("eftertanke"), "eftertank");});
test("eftertruppen -> eftertrupp", function() {deepEqual( Stem("eftertruppen"), "eftertrupp");});
test("eftertryck -> eftertryck", function() {deepEqual( Stem("eftertryck"), "eftertryck");});
test("eftertryckligt -> eftertryck", function() {deepEqual( Stem("eftertryckligt"), "eftertryck");});
test("eftertrycks -> eftertryck", function() {deepEqual( Stem("eftertrycks"), "eftertryck");});
test("efterträdare -> efterträd", function() {deepEqual( Stem("efterträdare"), "efterträd");});
test("efterträderska -> efterträdersk", function() {deepEqual( Stem("efterträderska"), "efterträdersk");});
test("efterträtts -> efterträt", function() {deepEqual( Stem("efterträtts"), "efterträt");});
test("eftervärkarna -> eftervärk", function() {deepEqual( Stem("eftervärkarna"), "eftervärk");});
test("efteråt -> efteråt", function() {deepEqual( Stem("efteråt"), "efteråt");});
test("ega -> ega", function() {deepEqual( Stem("ega"), "ega");});
test("eganderätt -> eganderät", function() {deepEqual( Stem("eganderätt"), "eganderät");});
test("egarinnan -> egarinnan", function() {deepEqual( Stem("egarinnan"), "egarinnan");});
test("egde -> egd", function() {deepEqual( Stem("egde"), "egd");});
test("ege -> ege", function() {deepEqual( Stem("ege"), "ege");});
test("egen -> egen", function() {deepEqual( Stem("egen"), "egen");});
test("egenart -> egenart", function() {deepEqual( Stem("egenart"), "egenart");});
test("egendom -> egendom", function() {deepEqual( Stem("egendom"), "egendom");});
test("egendomen -> egendom", function() {deepEqual( Stem("egendomen"), "egendom");});
test("egendomlig -> egendom", function() {deepEqual( Stem("egendomlig"), "egendom");});
test("egendomliga -> egendom", function() {deepEqual( Stem("egendomliga"), "egendom");});
test("egendomligt -> egendom", function() {deepEqual( Stem("egendomligt"), "egendom");});
test("egenhet -> egen", function() {deepEqual( Stem("egenhet"), "egen");});
test("egenheter -> egen", function() {deepEqual( Stem("egenheter"), "egen");});
test("egenhändiga -> egenhänd", function() {deepEqual( Stem("egenhändiga"), "egenhänd");});
test("egenkär -> egenkär", function() {deepEqual( Stem("egenkär"), "egenkär");});
test("egenkärlek -> egenkärlek", function() {deepEqual( Stem("egenkärlek"), "egenkärlek");});
test("egenkärleken -> egenkärlek", function() {deepEqual( Stem("egenkärleken"), "egenkärlek");});
test("egenkärt -> egenkärt", function() {deepEqual( Stem("egenkärt"), "egenkärt");});
test("egenmäk -> egenmäk", function() {deepEqual( Stem("egenmäk"), "egenmäk");});
test("egennytta -> egennyt", function() {deepEqual( Stem("egennytta"), "egennyt");});
test("egennyttig -> egennytt", function() {deepEqual( Stem("egennyttig"), "egennytt");});
test("egennyttiga -> egennytt", function() {deepEqual( Stem("egennyttiga"), "egennytt");});
test("egensinnig -> egensinn", function() {deepEqual( Stem("egensinnig"), "egensinn");});
test("egensinnigt -> egensinn", function() {deepEqual( Stem("egensinnigt"), "egensinn");});
test("egenskap -> egenskap", function() {deepEqual( Stem("egenskap"), "egenskap");});
test("egenskapen -> egenskap", function() {deepEqual( Stem("egenskapen"), "egenskap");});
test("egenskaper -> egenskap", function() {deepEqual( Stem("egenskaper"), "egenskap");});
test("egenskaperna -> egenskap", function() {deepEqual( Stem("egenskaperna"), "egenskap");});
test("egentlig -> egent", function() {deepEqual( Stem("egentlig"), "egent");});
test("egentliga -> egent", function() {deepEqual( Stem("egentliga"), "egent");});
test("egentligaste -> egent", function() {deepEqual( Stem("egentligaste"), "egent");});
test("egentligen -> egent", function() {deepEqual( Stem("egentligen"), "egent");});
test("egentligt -> egent", function() {deepEqual( Stem("egentligt"), "egent");});
test("eger -> eger", function() {deepEqual( Stem("eger"), "eger");});
test("eget -> eget", function() {deepEqual( Stem("eget"), "eget");});
test("egg -> egg", function() {deepEqual( Stem("egg"), "egg");});
test("egga -> egg", function() {deepEqual( Stem("egga"), "egg");});
test("eggade -> egg", function() {deepEqual( Stem("eggade"), "egg");});
test("eggar -> egg", function() {deepEqual( Stem("eggar"), "egg");});
test("eggas -> egg", function() {deepEqual( Stem("eggas"), "egg");});
test("eggat -> egg", function() {deepEqual( Stem("eggat"), "egg");});
test("egna -> egn", function() {deepEqual( Stem("egna"), "egn");});
test("egnade -> egn", function() {deepEqual( Stem("egnade"), "egn");});
test("egnades -> egn", function() {deepEqual( Stem("egnades"), "egn");});
test("egnadt -> egnad", function() {deepEqual( Stem("egnadt"), "egnad");});
test("egnar -> egn", function() {deepEqual( Stem("egnar"), "egn");});
test("egoism -> egoism", function() {deepEqual( Stem("egoism"), "egoism");});
test("egoist -> egoist", function() {deepEqual( Stem("egoist"), "egoist");});
test("egoisten -> egoist", function() {deepEqual( Stem("egoisten"), "egoist");});
test("egoistiska -> egoistisk", function() {deepEqual( Stem("egoistiska"), "egoistisk");});
test("egoistiskt -> egoistisk", function() {deepEqual( Stem("egoistiskt"), "egoistisk");});
test("egt -> egt", function() {deepEqual( Stem("egt"), "egt");});
test("egypterna -> egypt", function() {deepEqual( Stem("egypterna"), "egypt");});
test("egypti -> egypti", function() {deepEqual( Stem("egypti"), "egypti");});
test("ehrencreutz -> ehrencreutz", function() {deepEqual( Stem("ehrencreutz"), "ehrencreutz");});
test("ehuru -> ehuru", function() {deepEqual( Stem("ehuru"), "ehuru");});
test("eian -> eian", function() {deepEqual( Stem("eian"), "eian");});
test("eians -> eian", function() {deepEqual( Stem("eians"), "eian");});
test("eiffeltornet -> eiffeltornet", function() {deepEqual( Stem("eiffeltornet"), "eiffeltornet");});
test("eine -> ein", function() {deepEqual( Stem("eine"), "ein");});
test("ej -> ej", function() {deepEqual( Stem("ej"), "ej");});
test("ejugu -> ejugu", function() {deepEqual( Stem("ejugu"), "ejugu");});
test("ek -> ek", function() {deepEqual( Stem("ek"), "ek");});
test("eka -> eka", function() {deepEqual( Stem("eka"), "eka");});
test("ekade -> ekad", function() {deepEqual( Stem("ekade"), "ekad");});
test("ekar -> ekar", function() {deepEqual( Stem("ekar"), "ekar");});
test("ekas -> ekas", function() {deepEqual( Stem("ekas"), "ekas");});
test("ekbord -> ekbord", function() {deepEqual( Stem("ekbord"), "ekbord");});
test("ekered -> ekered", function() {deepEqual( Stem("ekered"), "ekered");});
test("ekhult -> ekhult", function() {deepEqual( Stem("ekhult"), "ekhult");});
test("ekhults -> ekhult", function() {deepEqual( Stem("ekhults"), "ekhult");});
test("ekipaget -> ekipaget", function() {deepEqual( Stem("ekipaget"), "ekipaget");});
test("eklatant -> eklatant", function() {deepEqual( Stem("eklatant"), "eklatant");});
test("eklund -> eklund", function() {deepEqual( Stem("eklund"), "eklund");});
test("eklunds -> eklund", function() {deepEqual( Stem("eklunds"), "eklund");});
test("eklärerat -> eklärer", function() {deepEqual( Stem("eklärerat"), "eklärer");});
test("eklöv -> eklöv", function() {deepEqual( Stem("eklöv"), "eklöv");});
test("eko -> eko", function() {deepEqual( Stem("eko"), "eko");});
test("ekonomien -> ekonomi", function() {deepEqual( Stem("ekonomien"), "ekonomi");});
test("ekonomiskt -> ekonomisk", function() {deepEqual( Stem("ekonomiskt"), "ekonomisk");});
test("ekorre -> ekorr", function() {deepEqual( Stem("ekorre"), "ekorr");});
test("ekorren -> ekorr", function() {deepEqual( Stem("ekorren"), "ekorr");});
test("ekotemplet -> ekotemplet", function() {deepEqual( Stem("ekotemplet"), "ekotemplet");});
test("eksem -> eksem", function() {deepEqual( Stem("eksem"), "eksem");});
test("el -> el", function() {deepEqual( Stem("el"), "el");});
test("elak -> elak", function() {deepEqual( Stem("elak"), "elak");});
test("elaka -> elak", function() {deepEqual( Stem("elaka"), "elak");});
test("elakare -> elak", function() {deepEqual( Stem("elakare"), "elak");});
test("elakaste -> elak", function() {deepEqual( Stem("elakaste"), "elak");});
test("elakhet -> elak", function() {deepEqual( Stem("elakhet"), "elak");});
test("elakheter -> elak", function() {deepEqual( Stem("elakheter"), "elak");});
test("elakt -> elak", function() {deepEqual( Stem("elakt"), "elak");});
test("elan -> elan", function() {deepEqual( Stem("elan"), "elan");});
test("eld -> eld", function() {deepEqual( Stem("eld"), "eld");});
test("elda -> eld", function() {deepEqual( Stem("elda"), "eld");});
test("eldade -> eld", function() {deepEqual( Stem("eldade"), "eld");});
test("eldar -> eld", function() {deepEqual( Stem("eldar"), "eld");});
test("eldat -> eld", function() {deepEqual( Stem("eldat"), "eld");});
test("eldbrasa -> eldbras", function() {deepEqual( Stem("eldbrasa"), "eldbras");});
test("elddonen -> elddon", function() {deepEqual( Stem("elddonen"), "elddon");});
test("elden -> eld", function() {deepEqual( Stem("elden"), "eld");});
test("eldens -> eld", function() {deepEqual( Stem("eldens"), "eld");});
test("eldgnistor -> eldgnist", function() {deepEqual( Stem("eldgnistor"), "eldgnist");});
test("eldig -> eld", function() {deepEqual( Stem("eldig"), "eld");});
test("eldiga -> eld", function() {deepEqual( Stem("eldiga"), "eld");});
test("eldorado -> eldorado", function() {deepEqual( Stem("eldorado"), "eldorado");});
test("eldrod -> eldrod", function() {deepEqual( Stem("eldrod"), "eldrod");});
test("eldros -> eldro", function() {deepEqual( Stem("eldros"), "eldro");});
test("eldrosen -> eldros", function() {deepEqual( Stem("eldrosen"), "eldros");});
test("eldröd -> eldröd", function() {deepEqual( Stem("eldröd"), "eldröd");});
test("eldrött -> eldröt", function() {deepEqual( Stem("eldrött"), "eldröt");});
test("eldsken -> eldsk", function() {deepEqual( Stem("eldsken"), "eldsk");});
test("eldskenets -> eldskenet", function() {deepEqual( Stem("eldskenets"), "eldskenet");});
test("eldstrimma -> eldstrimm", function() {deepEqual( Stem("eldstrimma"), "eldstrimm");});
test("eldsvåda -> eldsvåd", function() {deepEqual( Stem("eldsvåda"), "eldsvåd");});
test("eldtunga -> eldtung", function() {deepEqual( Stem("eldtunga"), "eldtung");});
test("elefant -> elefant", function() {deepEqual( Stem("elefant"), "elefant");});
test("eleg -> eleg", function() {deepEqual( Stem("eleg"), "eleg");});
test("elegans -> elegan", function() {deepEqual( Stem("elegans"), "elegan");});
test("elegant -> elegant", function() {deepEqual( Stem("elegant"), "elegant");});
test("eleganta -> elegant", function() {deepEqual( Stem("eleganta"), "elegant");});
test("eleganten -> elegant", function() {deepEqual( Stem("eleganten"), "elegant");});
test("eleganter -> elegant", function() {deepEqual( Stem("eleganter"), "elegant");});
test("elektrisk -> elektrisk", function() {deepEqual( Stem("elektrisk"), "elektrisk");});
test("elektriska -> elektrisk", function() {deepEqual( Stem("elektriska"), "elektrisk");});
test("elektriskt -> elektrisk", function() {deepEqual( Stem("elektriskt"), "elektrisk");});
test("elektroniska -> elektronisk", function() {deepEqual( Stem("elektroniska"), "elektronisk");});
test("element -> element", function() {deepEqual( Stem("element"), "element");});
test("elementarkraft -> elementarkraft", function() {deepEqual( Stem("elementarkraft"), "elementarkraft");});
test("elementen -> element", function() {deepEqual( Stem("elementen"), "element");});
test("elementet -> elementet", function() {deepEqual( Stem("elementet"), "elementet");});
test("eletty -> eletty", function() {deepEqual( Stem("eletty"), "eletty");});
test("elev -> elev", function() {deepEqual( Stem("elev"), "elev");});
test("eleven -> elev", function() {deepEqual( Stem("eleven"), "elev");});
test("elever -> elev", function() {deepEqual( Stem("elever"), "elev");});
test("eleverna -> elev", function() {deepEqual( Stem("eleverna"), "elev");});
test("elevernas -> elev", function() {deepEqual( Stem("elevernas"), "elev");});
test("elfenben -> elfenb", function() {deepEqual( Stem("elfenben"), "elfenb");});
test("elfenbensfärgad -> elfenbensfärg", function() {deepEqual( Stem("elfenbensfärgad"), "elfenbensfärg");});
test("elfqvinnan -> elfqvinnan", function() {deepEqual( Stem("elfqvinnan"), "elfqvinnan");});
test("elfte -> elft", function() {deepEqual( Stem("elfte"), "elft");});
test("elfva -> elfv", function() {deepEqual( Stem("elfva"), "elfv");});
test("elfvorna -> elfv", function() {deepEqual( Stem("elfvorna"), "elfv");});
test("eljes -> elj", function() {deepEqual( Stem("eljes"), "elj");});
test("eljest -> eljest", function() {deepEqual( Stem("eljest"), "eljest");});
test("ell -> ell", function() {deepEqual( Stem("ell"), "ell");});
test("ella -> ell", function() {deepEqual( Stem("ella"), "ell");});
test("ellas -> ell", function() {deepEqual( Stem("ellas"), "ell");});
test("ellen -> ell", function() {deepEqual( Stem("ellen"), "ell");});
test("eller -> ell", function() {deepEqual( Stem("eller"), "ell");});
test("elon -> elon", function() {deepEqual( Stem("elon"), "elon");});
test("elsa -> els", function() {deepEqual( Stem("elsa"), "els");});
test("elva -> elv", function() {deepEqual( Stem("elva"), "elv");});
test("elände -> eländ", function() {deepEqual( Stem("elände"), "eländ");});
test("eländig -> eländ", function() {deepEqual( Stem("eländig"), "eländ");});
test("eländiga -> eländ", function() {deepEqual( Stem("eländiga"), "eländ");});
test("eländigaste -> eländ", function() {deepEqual( Stem("eländigaste"), "eländ");});
test("eländige -> eländ", function() {deepEqual( Stem("eländige"), "eländ");});
test("eländighet -> eländ", function() {deepEqual( Stem("eländighet"), "eländ");});
test("eländigt -> eländ", function() {deepEqual( Stem("eländigt"), "eländ");});
test("elån -> elån", function() {deepEqual( Stem("elån"), "elån");});
test("emanerade -> emaner", function() {deepEqual( Stem("emanerade"), "emaner");});
test("emaus -> emaus", function() {deepEqual( Stem("emaus"), "emaus");});
test("emedan -> emedan", function() {deepEqual( Stem("emedan"), "emedan");});
test("emellan -> emellan", function() {deepEqual( Stem("emellan"), "emellan");});
test("emellanat -> emellan", function() {deepEqual( Stem("emellanat"), "emellan");});
test("emellanåt -> emellanåt", function() {deepEqual( Stem("emellanåt"), "emellanåt");});
test("emellertid -> emellertid", function() {deepEqual( Stem("emellertid"), "emellertid");});
test("emma -> emm", function() {deepEqual( Stem("emma"), "emm");});
test("emot -> emot", function() {deepEqual( Stem("emot"), "emot");});
test("emottaga -> emottag", function() {deepEqual( Stem("emottaga"), "emottag");});
test("emottog -> emottog", function() {deepEqual( Stem("emottog"), "emottog");});
test("emploient -> emploient", function() {deepEqual( Stem("emploient"), "emploient");});
test("en -> en", function() {deepEqual( Stem("en"), "en");});
test("ena -> ena", function() {deepEqual( Stem("ena"), "ena");});
test("enahanda -> enahand", function() {deepEqual( Stem("enahanda"), "enahand");});
test("enas -> enas", function() {deepEqual( Stem("enas"), "enas");});
test("enbart -> enbart", function() {deepEqual( Stem("enbart"), "enbart");});
test("enbuske -> enbusk", function() {deepEqual( Stem("enbuske"), "enbusk");});
test("enda -> end", function() {deepEqual( Stem("enda"), "end");});
test("endas -> end", function() {deepEqual( Stem("endas"), "end");});
test("endast -> end", function() {deepEqual( Stem("endast"), "end");});
test("endaste -> end", function() {deepEqual( Stem("endaste"), "end");});
test("ende -> end", function() {deepEqual( Stem("ende"), "end");});
test("endera -> ender", function() {deepEqual( Stem("endera"), "ender");});
test("endräkt -> endräk", function() {deepEqual( Stem("endräkt"), "endräk");});
test("ene -> ene", function() {deepEqual( Stem("ene"), "ene");});
test("ener -> ener", function() {deepEqual( Stem("ener"), "ener");});
test("energi -> energi", function() {deepEqual( Stem("energi"), "energi");});
test("energiska -> energisk", function() {deepEqual( Stem("energiska"), "energisk");});
test("energiskt -> energisk", function() {deepEqual( Stem("energiskt"), "energisk");});
test("enes -> enes", function() {deepEqual( Stem("enes"), "enes");});
test("enfald -> enfald", function() {deepEqual( Stem("enfald"), "enfald");});
test("enfalden -> enfald", function() {deepEqual( Stem("enfalden"), "enfald");});
test("enfaldig -> enfald", function() {deepEqual( Stem("enfaldig"), "enfald");});
test("enfaldiga -> enfald", function() {deepEqual( Stem("enfaldiga"), "enfald");});
test("enfaldighet -> enfald", function() {deepEqual( Stem("enfaldighet"), "enfald");});
test("enfaldigt -> enfald", function() {deepEqual( Stem("enfaldigt"), "enfald");});
test("enformiga -> enform", function() {deepEqual( Stem("enformiga"), "enform");});
test("enformighet -> enform", function() {deepEqual( Stem("enformighet"), "enform");});
test("enformigheten -> enform", function() {deepEqual( Stem("enformigheten"), "enform");});
test("enformigt -> enform", function() {deepEqual( Stem("enformigt"), "enform");});
test("enfödde -> enföd", function() {deepEqual( Stem("enfödde"), "enföd");});
test("engblomo -> engblomo", function() {deepEqual( Stem("engblomo"), "engblomo");});
test("engel -> engel", function() {deepEqual( Stem("engel"), "engel");});
test("engeln -> engeln", function() {deepEqual( Stem("engeln"), "engeln");});
test("engelska -> engelsk", function() {deepEqual( Stem("engelska"), "engelsk");});
test("engelsmännen -> engelsmän", function() {deepEqual( Stem("engelsmännen"), "engelsmän");});
test("england -> england", function() {deepEqual( Stem("england"), "england");});
test("englar -> engl", function() {deepEqual( Stem("englar"), "engl");});
test("englarne -> engl", function() {deepEqual( Stem("englarne"), "engl");});
test("englarnes -> englarn", function() {deepEqual( Stem("englarnes"), "englarn");});
test("enhet -> enhet", function() {deepEqual( Stem("enhet"), "enhet");});
test("enig -> enig", function() {deepEqual( Stem("enig"), "enig");});
test("eniga -> enig", function() {deepEqual( Stem("eniga"), "enig");});
test("enighet -> enig", function() {deepEqual( Stem("enighet"), "enig");});
test("enka -> enk", function() {deepEqual( Stem("enka"), "enk");});
test("enkcl -> enkcl", function() {deepEqual( Stem("enkcl"), "enkcl");});
test("enkefru -> enkefru", function() {deepEqual( Stem("enkefru"), "enkefru");});
test("enkel -> enkel", function() {deepEqual( Stem("enkel"), "enkel");});
test("enkelhet -> enkel", function() {deepEqual( Stem("enkelhet"), "enkel");});
test("enkelt -> enkelt", function() {deepEqual( Stem("enkelt"), "enkelt");});
test("enkla -> enkl", function() {deepEqual( Stem("enkla"), "enkl");});
test("enklare -> enkl", function() {deepEqual( Stem("enklare"), "enkl");});
test("enklaste -> enkl", function() {deepEqual( Stem("enklaste"), "enkl");});
test("enkom -> enkom", function() {deepEqual( Stem("enkom"), "enkom");});
test("enkor -> enk", function() {deepEqual( Stem("enkor"), "enk");});
test("enleveras -> enlever", function() {deepEqual( Stem("enleveras"), "enlever");});
test("enlevering -> enlevering", function() {deepEqual( Stem("enlevering"), "enlevering");});
test("enligt -> enl", function() {deepEqual( Stem("enligt"), "enl");});
test("enna -> enn", function() {deepEqual( Stem("enna"), "enn");});
test("ennui -> ennui", function() {deepEqual( Stem("ennui"), "ennui");});
test("enompryglas -> enomprygl", function() {deepEqual( Stem("enompryglas"), "enomprygl");});
test("enorma -> enorm", function() {deepEqual( Stem("enorma"), "enorm");});
test("enris -> enris", function() {deepEqual( Stem("enris"), "enris");});
test("enrum -> enrum", function() {deepEqual( Stem("enrum"), "enrum");});
test("ens -> ens", function() {deepEqual( Stem("ens"), "ens");});
test("ensam -> ensam", function() {deepEqual( Stem("ensam"), "ensam");});
test("ensamen -> ensam", function() {deepEqual( Stem("ensamen"), "ensam");});
test("ensamhet -> ensam", function() {deepEqual( Stem("ensamhet"), "ensam");});
test("ensamheten -> ensam", function() {deepEqual( Stem("ensamheten"), "ensam");});
test("ensamhetens -> ensam", function() {deepEqual( Stem("ensamhetens"), "ensam");});
test("ensamma -> ensamm", function() {deepEqual( Stem("ensamma"), "ensamm");});
test("ensammes -> ensamm", function() {deepEqual( Stem("ensammes"), "ensamm");});
test("ensamt -> ensamt", function() {deepEqual( Stem("ensamt"), "ensamt");});
test("ensarnma -> ensarnm", function() {deepEqual( Stem("ensarnma"), "ensarnm");});
test("ense -> ens", function() {deepEqual( Stem("ense"), "ens");});
test("ensittarens -> ensit", function() {deepEqual( Stem("ensittarens"), "ensit");});
test("enskilda -> enskild", function() {deepEqual( Stem("enskilda"), "enskild");});
test("enskildheter -> enskild", function() {deepEqual( Stem("enskildheter"), "enskild");});
test("enskildt -> enskild", function() {deepEqual( Stem("enskildt"), "enskild");});
test("enskilt -> enskilt", function() {deepEqual( Stem("enskilt"), "enskilt");});
test("enskilta -> enskilt", function() {deepEqual( Stem("enskilta"), "enskilt");});
test("enslig -> ens", function() {deepEqual( Stem("enslig"), "ens");});
test("ensliga -> ens", function() {deepEqual( Stem("ensliga"), "ens");});
test("enslighet -> ens", function() {deepEqual( Stem("enslighet"), "ens");});
test("ensligt -> ens", function() {deepEqual( Stem("ensligt"), "ens");});
test("enslingen -> ensling", function() {deepEqual( Stem("enslingen"), "ensling");});
test("enstaka -> enstak", function() {deepEqual( Stem("enstaka"), "enstak");});
test("enstöring -> enstöring", function() {deepEqual( Stem("enstöring"), "enstöring");});
test("entonig -> enton", function() {deepEqual( Stem("entonig"), "enton");});
test("entoniga -> enton", function() {deepEqual( Stem("entoniga"), "enton");});
test("entonigt -> enton", function() {deepEqual( Stem("entonigt"), "enton");});
test("enträgen -> enträg", function() {deepEqual( Stem("enträgen"), "enträg");});
test("enträget -> enträget", function() {deepEqual( Stem("enträget"), "enträget");});
test("enträgna -> enträgn", function() {deepEqual( Stem("enträgna"), "enträgn");});
test("enträgnaste -> enträgn", function() {deepEqual( Stem("enträgnaste"), "enträgn");});
test("enträgne -> enträgn", function() {deepEqual( Stem("enträgne"), "enträgn");});
test("envar -> env", function() {deepEqual( Stem("envar"), "env");});
test("enveten -> envet", function() {deepEqual( Stem("enveten"), "envet");});
test("envis -> envis", function() {deepEqual( Stem("envis"), "envis");});
test("envisa -> envis", function() {deepEqual( Stem("envisa"), "envis");});
test("envisas -> envis", function() {deepEqual( Stem("envisas"), "envis");});
test("envise -> envis", function() {deepEqual( Stem("envise"), "envis");});
test("envishet -> envis", function() {deepEqual( Stem("envishet"), "envis");});
test("envist -> envist", function() {deepEqual( Stem("envist"), "envist");});
test("envåldshärskarens -> envåldshärsk", function() {deepEqual( Stem("envåldshärskarens"), "envåldshärsk");});
test("envånings -> envåning", function() {deepEqual( Stem("envånings"), "envåning");});
test("envåningsbyggnaden -> envåningsbyggnad", function() {deepEqual( Stem("envåningsbyggnaden"), "envåningsbyggnad");});
test("enär -> enär", function() {deepEqual( Stem("enär"), "enär");});
test("eol -> eol", function() {deepEqual( Stem("eol"), "eol");});
test("eolin -> eolin", function() {deepEqual( Stem("eolin"), "eolin");});
test("eolsharpor -> eolsharp", function() {deepEqual( Stem("eolsharpor"), "eolsharp");});
test("eolus -> eolus", function() {deepEqual( Stem("eolus"), "eolus");});
test("epilepsi -> epilepsi", function() {deepEqual( Stem("epilepsi"), "epilepsi");});
test("epileptisk -> epileptisk", function() {deepEqual( Stem("epileptisk"), "epileptisk");});
test("episod -> episod", function() {deepEqual( Stem("episod"), "episod");});
test("episoder -> episod", function() {deepEqual( Stem("episoder"), "episod");});
test("epistlar -> epistl", function() {deepEqual( Stem("epistlar"), "epistl");});
test("epok -> epok", function() {deepEqual( Stem("epok"), "epok");});
test("epokgörande -> epokgör", function() {deepEqual( Stem("epokgörande"), "epokgör");});
test("epåletter -> epålet", function() {deepEqual( Stem("epåletter"), "epålet");});
test("er -> er", function() {deepEqual( Stem("er"), "er");});
test("era -> era", function() {deepEqual( Stem("era"), "era");});
test("erbarmligt -> erbarm", function() {deepEqual( Stem("erbarmligt"), "erbarm");});
test("erbjuda -> erbjud", function() {deepEqual( Stem("erbjuda"), "erbjud");});
test("erbjuder -> erbjud", function() {deepEqual( Stem("erbjuder"), "erbjud");});
test("erbjudes -> erbjud", function() {deepEqual( Stem("erbjudes"), "erbjud");});
test("erbjudna -> erbjudn", function() {deepEqual( Stem("erbjudna"), "erbjudn");});
test("erbjöd -> erbjöd", function() {deepEqual( Stem("erbjöd"), "erbjöd");});
test("erbjöds -> erbjöd", function() {deepEqual( Stem("erbjöds"), "erbjöd");});
test("erda -> erd", function() {deepEqual( Stem("erda"), "erd");});
test("erfar -> erf", function() {deepEqual( Stem("erfar"), "erf");});
test("erfara -> erfar", function() {deepEqual( Stem("erfara"), "erfar");});
test("erfaren -> erf", function() {deepEqual( Stem("erfaren"), "erf");});
test("erfarenhet -> erfaren", function() {deepEqual( Stem("erfarenhet"), "erfaren");});
test("erfarenheten -> erfaren", function() {deepEqual( Stem("erfarenheten"), "erfaren");});
test("erfarenheter -> erfaren", function() {deepEqual( Stem("erfarenheter"), "erfaren");});
test("erfares -> erfar", function() {deepEqual( Stem("erfares"), "erfar");});
test("erfaret -> erfaret", function() {deepEqual( Stem("erfaret"), "erfaret");});
test("erfarit -> erfarit", function() {deepEqual( Stem("erfarit"), "erfarit");});
test("erfarna -> erf", function() {deepEqual( Stem("erfarna"), "erf");});
test("erfarne -> erf", function() {deepEqual( Stem("erfarne"), "erf");});
test("erfor -> erf", function() {deepEqual( Stem("erfor"), "erf");});
test("erforderlig -> erforder", function() {deepEqual( Stem("erforderlig"), "erforder");});
test("erforderligt -> erforder", function() {deepEqual( Stem("erforderligt"), "erforder");});
test("erfordra -> erfordr", function() {deepEqual( Stem("erfordra"), "erfordr");});
test("erfordrade -> erfordr", function() {deepEqual( Stem("erfordrade"), "erfordr");});
test("erfordrades -> erfordr", function() {deepEqual( Stem("erfordrades"), "erfordr");});
test("erfordras -> erfordr", function() {deepEqual( Stem("erfordras"), "erfordr");});
test("erhalla -> erhall", function() {deepEqual( Stem("erhalla"), "erhall");});
test("erhålla -> erhåll", function() {deepEqual( Stem("erhålla"), "erhåll");});
test("erhållit -> erhållit", function() {deepEqual( Stem("erhållit"), "erhållit");});
test("erhållna -> erhålln", function() {deepEqual( Stem("erhållna"), "erhålln");});
test("erhöll -> erhöll", function() {deepEqual( Stem("erhöll"), "erhöll");});
test("erhölle -> erhöll", function() {deepEqual( Stem("erhölle"), "erhöll");});
test("erhöllo -> erhöllo", function() {deepEqual( Stem("erhöllo"), "erhöllo");});
test("erhölls -> erhöll", function() {deepEqual( Stem("erhölls"), "erhöll");});
test("erika -> erik", function() {deepEqual( Stem("erika"), "erik");});
test("erikas -> erik", function() {deepEqual( Stem("erikas"), "erik");});
test("eriksfärd -> eriksfärd", function() {deepEqual( Stem("eriksfärd"), "eriksfärd");});
test("eriksgata -> eriksgat", function() {deepEqual( Stem("eriksgata"), "eriksgat");});
test("erinnyerna -> erinny", function() {deepEqual( Stem("erinnyerna"), "erinny");});
test("erinra -> erinr", function() {deepEqual( Stem("erinra"), "erinr");});
test("erinrade -> erinr", function() {deepEqual( Stem("erinrade"), "erinr");});
test("erinrades -> erinr", function() {deepEqual( Stem("erinrades"), "erinr");});
test("erinran -> erinran", function() {deepEqual( Stem("erinran"), "erinran");});
test("erinrande -> erinr", function() {deepEqual( Stem("erinrande"), "erinr");});
test("erinrar -> erinr", function() {deepEqual( Stem("erinrar"), "erinr");});
test("erinrat -> erinr", function() {deepEqual( Stem("erinrat"), "erinr");});
test("erinring -> erinring", function() {deepEqual( Stem("erinring"), "erinring");});
test("erinringar -> erinring", function() {deepEqual( Stem("erinringar"), "erinring");});
test("erinringen -> erinring", function() {deepEqual( Stem("erinringen"), "erinring");});
test("erkann -> erkan", function() {deepEqual( Stem("erkann"), "erkan");});
test("erkänd -> erkänd", function() {deepEqual( Stem("erkänd"), "erkänd");});
test("erkända -> erkänd", function() {deepEqual( Stem("erkända"), "erkänd");});
test("erkände -> erkänd", function() {deepEqual( Stem("erkände"), "erkänd");});
test("erkänn -> erkän", function() {deepEqual( Stem("erkänn"), "erkän");});
test("erkänna -> erkän", function() {deepEqual( Stem("erkänna"), "erkän");});
test("erkännande -> erkän", function() {deepEqual( Stem("erkännande"), "erkän");});
test("erkänner -> erkän", function() {deepEqual( Stem("erkänner"), "erkän");});
test("erkänsla -> erkänsl", function() {deepEqual( Stem("erkänsla"), "erkänsl");});
test("erkänt -> erkänt", function() {deepEqual( Stem("erkänt"), "erkänt");});
test("erl -> erl", function() {deepEqual( Stem("erl"), "erl");});
test("erlade -> erl", function() {deepEqual( Stem("erlade"), "erl");});
test("erlagda -> erlag", function() {deepEqual( Stem("erlagda"), "erlag");});
test("erlägga -> erlägg", function() {deepEqual( Stem("erlägga"), "erlägg");});
test("erna -> ern", function() {deepEqual( Stem("erna"), "ern");});
test("ernas -> ern", function() {deepEqual( Stem("ernas"), "ern");});
test("ernestina -> ernestin", function() {deepEqual( Stem("ernestina"), "ernestin");});
test("ernst -> ernst", function() {deepEqual( Stem("ernst"), "ernst");});
test("ernå -> ernå", function() {deepEqual( Stem("ernå"), "ernå");});
test("ernående -> ernåend", function() {deepEqual( Stem("ernående"), "ernåend");});
test("erotisk -> erotisk", function() {deepEqual( Stem("erotisk"), "erotisk");});
test("erplagg -> erplagg", function() {deepEqual( Stem("erplagg"), "erplagg");});
test("erre -> err", function() {deepEqual( Stem("erre"), "err");});
test("ersatt -> ersat", function() {deepEqual( Stem("ersatt"), "ersat");});
test("ersatta -> ersat", function() {deepEqual( Stem("ersatta"), "ersat");});
test("ersatte -> ersat", function() {deepEqual( Stem("ersatte"), "ersat");});
test("ersätta -> ersät", function() {deepEqual( Stem("ersätta"), "ersät");});
test("ersätter -> ersät", function() {deepEqual( Stem("ersätter"), "ersät");});
test("ersättning -> ersättning", function() {deepEqual( Stem("ersättning"), "ersättning");});
test("ert -> ert", function() {deepEqual( Stem("ert"), "ert");});
test("ertappade -> ertapp", function() {deepEqual( Stem("ertappade"), "ertapp");});
test("ertappat -> ertapp", function() {deepEqual( Stem("ertappat"), "ertapp");});
test("eröfra -> eröfr", function() {deepEqual( Stem("eröfra"), "eröfr");});
test("eröfrade -> eröfr", function() {deepEqual( Stem("eröfrade"), "eröfr");});
test("erövra -> erövr", function() {deepEqual( Stem("erövra"), "erövr");});
test("erövrad -> erövr", function() {deepEqual( Stem("erövrad"), "erövr");});
test("erövring -> erövring", function() {deepEqual( Stem("erövring"), "erövring");});
test("erövringar -> erövring", function() {deepEqual( Stem("erövringar"), "erövring");});
test("es -> es", function() {deepEqual( Stem("es"), "es");});
test("esoteriska -> esoterisk", function() {deepEqual( Stem("esoteriska"), "esoterisk");});
test("ess -> ess", function() {deepEqual( Stem("ess"), "ess");});
test("esse -> ess", function() {deepEqual( Stem("esse"), "ess");});
test("essingen -> essing", function() {deepEqual( Stem("essingen"), "essing");});
test("est -> est", function() {deepEqual( Stem("est"), "est");});
test("esterhazys -> esterhazy", function() {deepEqual( Stem("esterhazys"), "esterhazy");});
test("estetikens -> estetik", function() {deepEqual( Stem("estetikens"), "estetik");});
test("estetiska -> estetisk", function() {deepEqual( Stem("estetiska"), "estetisk");});
test("estimabel -> estimabel", function() {deepEqual( Stem("estimabel"), "estimabel");});
test("estimabelt -> estimabelt", function() {deepEqual( Stem("estimabelt"), "estimabelt");});
test("estrad -> estr", function() {deepEqual( Stem("estrad"), "estr");});
test("estraden -> estrad", function() {deepEqual( Stem("estraden"), "estrad");});
test("et -> et", function() {deepEqual( Stem("et"), "et");});
test("etan -> etan", function() {deepEqual( Stem("etan"), "etan");});
test("etc -> etc", function() {deepEqual( Stem("etc"), "etc");});
test("eteriska -> eterisk", function() {deepEqual( Stem("eteriska"), "eterisk");});
test("eterstruten -> eterstrut", function() {deepEqual( Stem("eterstruten"), "eterstrut");});
test("etiketter -> etiket", function() {deepEqual( Stem("etiketter"), "etiket");});
test("etiskt -> etisk", function() {deepEqual( Stem("etiskt"), "etisk");});
test("etra -> etr", function() {deepEqual( Stem("etra"), "etr");});
test("etras -> etr", function() {deepEqual( Stem("etras"), "etr");});
test("etsat -> ets", function() {deepEqual( Stem("etsat"), "ets");});
test("ett -> ett", function() {deepEqual( Stem("ett"), "ett");});
test("etta -> ett", function() {deepEqual( Stem("etta"), "ett");});
test("etter -> ett", function() {deepEqual( Stem("etter"), "ett");});
test("etthundra -> etthundr", function() {deepEqual( Stem("etthundra"), "etthundr");});
test("etty -> etty", function() {deepEqual( Stem("etty"), "etty");});
test("ettårig -> ettår", function() {deepEqual( Stem("ettårig"), "ettår");});
test("etuin -> etuin", function() {deepEqual( Stem("etuin"), "etuin");});
test("eu -> eu", function() {deepEqual( Stem("eu"), "eu");});
test("euer -> euer", function() {deepEqual( Stem("euer"), "euer");});
test("eugeniahemmet -> eugeniahemmet", function() {deepEqual( Stem("eugeniahemmet"), "eugeniahemmet");});
test("europa -> europ", function() {deepEqual( Stem("europa"), "europ");});
test("ev -> ev", function() {deepEqual( Stem("ev"), "ev");});
test("eva -> eva", function() {deepEqual( Stem("eva"), "eva");});
test("evangelist -> evangelist", function() {deepEqual( Stem("evangelist"), "evangelist");});
test("evangeliums -> evangelium", function() {deepEqual( Stem("evangeliums"), "evangelium");});
test("evig -> evig", function() {deepEqual( Stem("evig"), "evig");});
test("eviga -> evig", function() {deepEqual( Stem("eviga"), "evig");});
test("evige -> evig", function() {deepEqual( Stem("evige"), "evig");});
test("evighet -> evig", function() {deepEqual( Stem("evighet"), "evig");});
test("evigheten -> evig", function() {deepEqual( Stem("evigheten"), "evig");});
test("evighetens -> evig", function() {deepEqual( Stem("evighetens"), "evig");});
test("evighetssynpunkt -> evighetssynpunk", function() {deepEqual( Stem("evighetssynpunkt"), "evighetssynpunk");});
test("evighetstanke -> evighetstank", function() {deepEqual( Stem("evighetstanke"), "evighetstank");});
test("evigt -> evig", function() {deepEqual( Stem("evigt"), "evig");});
test("evärdeliga -> evärde", function() {deepEqual( Stem("evärdeliga"), "evärde");});
test("ex -> ex", function() {deepEqual( Stem("ex"), "ex");});
test("exalterad -> exalter", function() {deepEqual( Stem("exalterad"), "exalter");});
test("exalterade -> exalter", function() {deepEqual( Stem("exalterade"), "exalter");});
test("examen -> exam", function() {deepEqual( Stem("examen"), "exam");});
test("examineras -> examiner", function() {deepEqual( Stem("examineras"), "examiner");});
test("excellensen -> excellens", function() {deepEqual( Stem("excellensen"), "excellens");});
test("excentriciteter -> excentricitet", function() {deepEqual( Stem("excentriciteter"), "excentricitet");});
test("exekutionen -> exekution", function() {deepEqual( Stem("exekutionen"), "exekution");});
test("exekutiva -> exekutiv", function() {deepEqual( Stem("exekutiva"), "exekutiv");});
test("exempel -> exempel", function() {deepEqual( Stem("exempel"), "exempel");});
test("exemplar -> exempl", function() {deepEqual( Stem("exemplar"), "exempl");});
test("exemplarisk -> exemplarisk", function() {deepEqual( Stem("exemplarisk"), "exemplarisk");});
test("exemplariska -> exemplarisk", function() {deepEqual( Stem("exemplariska"), "exemplarisk");});
test("exemplen -> exempl", function() {deepEqual( Stem("exemplen"), "exempl");});
test("exemplet -> exemplet", function() {deepEqual( Stem("exemplet"), "exemplet");});
test("exercera -> exercer", function() {deepEqual( Stem("exercera"), "exercer");});
test("existera -> exister", function() {deepEqual( Stem("existera"), "exister");});
test("exlöjtnanten -> exlöjtnant", function() {deepEqual( Stem("exlöjtnanten"), "exlöjtnant");});
test("exotisk -> exotisk", function() {deepEqual( Stem("exotisk"), "exotisk");});
test("expedi -> expedi", function() {deepEqual( Stem("expedi"), "expedi");});
test("expedierad -> expedier", function() {deepEqual( Stem("expedierad"), "expedier");});
test("expeditionen -> expedition", function() {deepEqual( Stem("expeditionen"), "expedition");});
test("expeditionerna -> expedition", function() {deepEqual( Stem("expeditionerna"), "expedition");});
test("exposition -> exposition", function() {deepEqual( Stem("exposition"), "exposition");});
test("expositionen -> exposition", function() {deepEqual( Stem("expositionen"), "exposition");});
test("extas -> ext", function() {deepEqual( Stem("extas"), "ext");});
test("extasen -> extas", function() {deepEqual( Stem("extasen"), "extas");});
test("extatiska -> extatisk", function() {deepEqual( Stem("extatiska"), "extatisk");});
test("extra -> extr", function() {deepEqual( Stem("extra"), "extr");});
test("extraordinarien -> extraordinari", function() {deepEqual( Stem("extraordinarien"), "extraordinari");});
test("extraordinart -> extraordinart", function() {deepEqual( Stem("extraordinart"), "extraordinart");});
test("extravagant -> extravagant", function() {deepEqual( Stem("extravagant"), "extravagant");});
test("eörstod -> eörstod", function() {deepEqual( Stem("eörstod"), "eörstod");});
test("f -> f", function() {deepEqual( Stem("f"), "f");});
test("fa -> fa", function() {deepEqual( Stem("fa"), "fa");});
test("fabian -> fabian", function() {deepEqual( Stem("fabian"), "fabian");});
test("fabriker -> fabrik", function() {deepEqual( Stem("fabriker"), "fabrik");});
test("fabriksmärke -> fabriksmärk", function() {deepEqual( Stem("fabriksmärke"), "fabriksmärk");});
test("fabriksskorstenarna -> fabriksskorsten", function() {deepEqual( Stem("fabriksskorstenarna"), "fabriksskorsten");});
test("fackelfest -> fackelfest", function() {deepEqual( Stem("fackelfest"), "fackelfest");});
test("facket -> facket", function() {deepEqual( Stem("facket"), "facket");});
test("fackla -> fackl", function() {deepEqual( Stem("fackla"), "fackl");});
test("fackman -> fackman", function() {deepEqual( Stem("fackman"), "fackman");});
test("facktermerna -> fackterm", function() {deepEqual( Stem("facktermerna"), "fackterm");});
test("facktidskrift -> facktidskrift", function() {deepEqual( Stem("facktidskrift"), "facktidskrift");});
test("facktidskrifter -> facktidskrift", function() {deepEqual( Stem("facktidskrifter"), "facktidskrift");});
test("faddergåfvor -> faddergåfv", function() {deepEqual( Stem("faddergåfvor"), "faddergåfv");});
test("fader -> fad", function() {deepEqual( Stem("fader"), "fad");});
test("faderlig -> fader", function() {deepEqual( Stem("faderlig"), "fader");});
test("faderliga -> fader", function() {deepEqual( Stem("faderliga"), "fader");});
test("faderlösa -> faderlös", function() {deepEqual( Stem("faderlösa"), "faderlös");});
test("fadern -> fad", function() {deepEqual( Stem("fadern"), "fad");});
test("faderns -> fad", function() {deepEqual( Stem("faderns"), "fad");});
test("fadersglädje -> fadersglädj", function() {deepEqual( Stem("fadersglädje"), "fadersglädj");});
test("fadershemmet -> fadershemmet", function() {deepEqual( Stem("fadershemmet"), "fadershemmet");});
test("fadershjärtat -> fadershjärt", function() {deepEqual( Stem("fadershjärtat"), "fadershjärt");});
test("fadersnamnet -> fadersnamnet", function() {deepEqual( Stem("fadersnamnet"), "fadersnamnet");});
test("fadrens -> fadr", function() {deepEqual( Stem("fadrens"), "fadr");});
test("faft -> faft", function() {deepEqual( Stem("faft"), "faft");});
test("fafänga -> fafäng", function() {deepEqual( Stem("fafänga"), "fafäng");});
test("fagel -> fagel", function() {deepEqual( Stem("fagel"), "fagel");});
test("fageln -> fageln", function() {deepEqual( Stem("fageln"), "fageln");});
test("fager -> fag", function() {deepEqual( Stem("fager"), "fag");});
test("fagert -> fagert", function() {deepEqual( Stem("fagert"), "fagert");});
test("fagra -> fagr", function() {deepEqual( Stem("fagra"), "fagr");});
test("fahlen -> fahl", function() {deepEqual( Stem("fahlen"), "fahl");});
test("fak -> fak", function() {deepEqual( Stem("fak"), "fak");});
test("fakta -> fakt", function() {deepEqual( Stem("fakta"), "fakt");});
test("faktiskt -> faktisk", function() {deepEqual( Stem("faktiskt"), "faktisk");});
test("fal -> fal", function() {deepEqual( Stem("fal"), "fal");});
test("falaskan -> falaskan", function() {deepEqual( Stem("falaskan"), "falaskan");});
test("falköga -> falkög", function() {deepEqual( Stem("falköga"), "falkög");});
test("falkögon -> falkögon", function() {deepEqual( Stem("falkögon"), "falkögon");});
test("fall -> fall", function() {deepEqual( Stem("fall"), "fall");});
test("falla -> fall", function() {deepEqual( Stem("falla"), "fall");});
test("fallande -> fall", function() {deepEqual( Stem("fallande"), "fall");});
test("fallen -> fall", function() {deepEqual( Stem("fallen"), "fall");});
test("fallenhet -> fallen", function() {deepEqual( Stem("fallenhet"), "fallen");});
test("faller -> fall", function() {deepEqual( Stem("faller"), "fall");});
test("fallet -> fallet", function() {deepEqual( Stem("fallet"), "fallet");});
test("fallfärdigt -> fallfärd", function() {deepEqual( Stem("fallfärdigt"), "fallfärd");});
test("fallit -> fallit", function() {deepEqual( Stem("fallit"), "fallit");});
test("fallna -> falln", function() {deepEqual( Stem("fallna"), "falln");});
test("fallucka -> falluck", function() {deepEqual( Stem("fallucka"), "falluck");});
test("falluckan -> falluckan", function() {deepEqual( Stem("falluckan"), "falluckan");});
test("falnade -> faln", function() {deepEqual( Stem("falnade"), "faln");});
test("falsk -> falsk", function() {deepEqual( Stem("falsk"), "falsk");});
test("falska -> falsk", function() {deepEqual( Stem("falska"), "falsk");});
test("falskhet -> falsk", function() {deepEqual( Stem("falskhet"), "falsk");});
test("falskt -> falsk", function() {deepEqual( Stem("falskt"), "falsk");});
test("famil -> famil", function() {deepEqual( Stem("famil"), "famil");});
test("familj -> familj", function() {deepEqual( Stem("familj"), "familj");});
test("familjcn -> familjcn", function() {deepEqual( Stem("familjcn"), "familjcn");});
test("familjebjudningarna -> familjebjudning", function() {deepEqual( Stem("familjebjudningarna"), "familjebjudning");});
test("familjebänken -> familjebänk", function() {deepEqual( Stem("familjebänken"), "familjebänk");});
test("familjefar -> familjef", function() {deepEqual( Stem("familjefar"), "familjef");});
test("familjeförbindelser -> familjeförbind", function() {deepEqual( Stem("familjeförbindelser"), "familjeförbind");});
test("familjeförhållanden -> familjeförhåll", function() {deepEqual( Stem("familjeförhållanden"), "familjeförhåll");});
test("familjegraven -> familjegrav", function() {deepEqual( Stem("familjegraven"), "familjegrav");});
test("familjehändelser -> familjehänd", function() {deepEqual( Stem("familjehändelser"), "familjehänd");});
test("familjelifvet -> familjelifvet", function() {deepEqual( Stem("familjelifvet"), "familjelifvet");});
test("familjen -> familj", function() {deepEqual( Stem("familjen"), "familj");});
test("familjens -> familj", function() {deepEqual( Stem("familjens"), "familj");});
test("familjer -> familj", function() {deepEqual( Stem("familjer"), "familj");});
test("familjeträdet -> familjeträdet", function() {deepEqual( Stem("familjeträdet"), "familjeträdet");});
test("familjs -> familj", function() {deepEqual( Stem("familjs"), "familj");});
test("familjtafla -> familjtafl", function() {deepEqual( Stem("familjtafla"), "familjtafl");});
test("faml -> faml", function() {deepEqual( Stem("faml"), "faml");});
test("famlade -> faml", function() {deepEqual( Stem("famlade"), "faml");});
test("famlande -> faml", function() {deepEqual( Stem("famlande"), "faml");});
test("famlar -> faml", function() {deepEqual( Stem("famlar"), "faml");});
test("famls -> faml", function() {deepEqual( Stem("famls"), "faml");});
test("famn -> famn", function() {deepEqual( Stem("famn"), "famn");});
test("famna -> famn", function() {deepEqual( Stem("famna"), "famn");});
test("famnadcs -> famnadc", function() {deepEqual( Stem("famnadcs"), "famnadc");});
test("famnade -> famn", function() {deepEqual( Stem("famnade"), "famn");});
test("famnades -> famn", function() {deepEqual( Stem("famnades"), "famn");});
test("famnar -> famn", function() {deepEqual( Stem("famnar"), "famn");});
test("famnen -> famn", function() {deepEqual( Stem("famnen"), "famn");});
test("famntag -> famntag", function() {deepEqual( Stem("famntag"), "famntag");});
test("famntaget -> famntaget", function() {deepEqual( Stem("famntaget"), "famntaget");});
test("famntagets -> famntaget", function() {deepEqual( Stem("famntagets"), "famntaget");});
test("famntags -> famntag", function() {deepEqual( Stem("famntags"), "famntag");});
test("fan -> fan", function() {deepEqual( Stem("fan"), "fan");});
test("fana -> fan", function() {deepEqual( Stem("fana"), "fan");});
test("fanders -> fander", function() {deepEqual( Stem("fanders"), "fander");});
test("fanga -> fang", function() {deepEqual( Stem("fanga"), "fang");});
test("fangen -> fang", function() {deepEqual( Stem("fangen"), "fang");});
test("fanliljen -> fanlilj", function() {deepEqual( Stem("fanliljen"), "fanlilj");});
test("fann -> fann", function() {deepEqual( Stem("fann"), "fann");});
test("fanns -> fann", function() {deepEqual( Stem("fanns"), "fann");});
test("fans -> fan", function() {deepEqual( Stem("fans"), "fan");});
test("fantasi -> fantasi", function() {deepEqual( Stem("fantasi"), "fantasi");});
test("fantasien -> fantasi", function() {deepEqual( Stem("fantasien"), "fantasi");});
test("fantasiens -> fantasi", function() {deepEqual( Stem("fantasiens"), "fantasi");});
test("fantasier -> fantasi", function() {deepEqual( Stem("fantasier"), "fantasi");});
test("fantastisk -> fantastisk", function() {deepEqual( Stem("fantastisk"), "fantastisk");});
test("fantastiska -> fantastisk", function() {deepEqual( Stem("fantastiska"), "fantastisk");});
test("fantastiskt -> fantastisk", function() {deepEqual( Stem("fantastiskt"), "fantastisk");});
test("fantiserade -> fantiser", function() {deepEqual( Stem("fantiserade"), "fantiser");});
test("fantiserar -> fantiser", function() {deepEqual( Stem("fantiserar"), "fantiser");});
test("fantome -> fantom", function() {deepEqual( Stem("fantome"), "fantom");});
test("far -> far", function() {deepEqual( Stem("far"), "far");});
test("fara -> far", function() {deepEqual( Stem("fara"), "far");});
test("faran -> faran", function() {deepEqual( Stem("faran"), "faran");});
test("farande -> far", function() {deepEqual( Stem("farande"), "far");});
test("farbroder -> farbrod", function() {deepEqual( Stem("farbroder"), "farbrod");});
test("farbrodern -> farbrod", function() {deepEqual( Stem("farbrodern"), "farbrod");});
test("farbroderns -> farbrod", function() {deepEqual( Stem("farbroderns"), "farbrod");});
test("farbror -> farbr", function() {deepEqual( Stem("farbror"), "farbr");});
test("farbrors -> farbror", function() {deepEqual( Stem("farbrors"), "farbror");});
test("farbröder -> farbröd", function() {deepEqual( Stem("farbröder"), "farbröd");});
test("fardig -> fard", function() {deepEqual( Stem("fardig"), "fard");});
test("farfadern -> farfad", function() {deepEqual( Stem("farfadern"), "farfad");});
test("farfar -> farf", function() {deepEqual( Stem("farfar"), "farf");});
test("farfars -> farfar", function() {deepEqual( Stem("farfars"), "farfar");});
test("farföräldrar -> farföräldr", function() {deepEqual( Stem("farföräldrar"), "farföräldr");});
test("farföräldrars -> farföräldrar", function() {deepEqual( Stem("farföräldrars"), "farföräldrar");});
test("farhåga -> farhåg", function() {deepEqual( Stem("farhåga"), "farhåg");});
test("farhågan -> farhågan", function() {deepEqual( Stem("farhågan"), "farhågan");});
test("farhågor -> farhåg", function() {deepEqual( Stem("farhågor"), "farhåg");});
test("farit -> farit", function() {deepEqual( Stem("farit"), "farit");});
test("farkost -> farkost", function() {deepEqual( Stem("farkost"), "farkost");});
test("farkosten -> farkost", function() {deepEqual( Stem("farkosten"), "farkost");});
test("farkoster -> farkost", function() {deepEqual( Stem("farkoster"), "farkost");});
test("farl -> farl", function() {deepEqual( Stem("farl"), "farl");});
test("farlig -> far", function() {deepEqual( Stem("farlig"), "far");});
test("farliga -> far", function() {deepEqual( Stem("farliga"), "far");});
test("farligare -> far", function() {deepEqual( Stem("farligare"), "far");});
test("farligt -> far", function() {deepEqual( Stem("farligt"), "far");});
test("farm -> farm", function() {deepEqual( Stem("farm"), "farm");});
test("farmaceut -> farmaceut", function() {deepEqual( Stem("farmaceut"), "farmaceut");});
test("farmaceuten -> farmaceut", function() {deepEqual( Stem("farmaceuten"), "farmaceut");});
test("farmor -> farm", function() {deepEqual( Stem("farmor"), "farm");});
test("faror -> far", function() {deepEqual( Stem("faror"), "far");});
test("fars -> far", function() {deepEqual( Stem("fars"), "far");});
test("farscha -> farsch", function() {deepEqual( Stem("farscha"), "farsch");});
test("farstudör -> farstudör", function() {deepEqual( Stem("farstudör"), "farstudör");});
test("farstutrapp -> farstutrapp", function() {deepEqual( Stem("farstutrapp"), "farstutrapp");});
test("fart -> fart", function() {deepEqual( Stem("fart"), "fart");});
test("farten -> fart", function() {deepEqual( Stem("farten"), "fart");});
test("fartyg -> fartyg", function() {deepEqual( Stem("fartyg"), "fartyg");});
test("fartygen -> fartyg", function() {deepEqual( Stem("fartygen"), "fartyg");});
test("fartyget -> fartyget", function() {deepEqual( Stem("fartyget"), "fartyget");});
test("fartygets -> fartyget", function() {deepEqual( Stem("fartygets"), "fartyget");});
test("fartygs -> fartyg", function() {deepEqual( Stem("fartygs"), "fartyg");});
test("farvatten -> farvat", function() {deepEqual( Stem("farvatten"), "farvat");});
test("farväl -> farväl", function() {deepEqual( Stem("farväl"), "farväl");});
test("fasa -> fas", function() {deepEqual( Stem("fasa"), "fas");});
test("fasad -> fas", function() {deepEqual( Stem("fasad"), "fas");});
test("fasanerna -> fasan", function() {deepEqual( Stem("fasanerna"), "fasan");});
test("fasansfulle -> fasansfull", function() {deepEqual( Stem("fasansfulle"), "fasansfull");});
test("fasansfullt -> fasansfull", function() {deepEqual( Stem("fasansfullt"), "fasansfull");});
test("fasar -> fas", function() {deepEqual( Stem("fasar"), "fas");});
test("fasligen -> fas", function() {deepEqual( Stem("fasligen"), "fas");});
test("fasligt -> fas", function() {deepEqual( Stem("fasligt"), "fas");});
test("fasoner -> fason", function() {deepEqual( Stem("fasoner"), "fason");});
test("fasonerna -> fason", function() {deepEqual( Stem("fasonerna"), "fason");});
test("fasor -> fas", function() {deepEqual( Stem("fasor"), "fas");});
test("fassor -> fass", function() {deepEqual( Stem("fassor"), "fass");});
test("fast -> fast", function() {deepEqual( Stem("fast"), "fast");});
test("fasta -> fast", function() {deepEqual( Stem("fasta"), "fast");});
test("fastad -> fast", function() {deepEqual( Stem("fastad"), "fast");});
test("fastaget -> fastaget", function() {deepEqual( Stem("fastaget"), "fastaget");});
test("fastan -> fastan", function() {deepEqual( Stem("fastan"), "fastan");});
test("fastare -> fast", function() {deepEqual( Stem("fastare"), "fast");});
test("fastbunden -> fastbund", function() {deepEqual( Stem("fastbunden"), "fastbund");});
test("faster -> fast", function() {deepEqual( Stem("faster"), "fast");});
test("fastern -> fast", function() {deepEqual( Stem("fastern"), "fast");});
test("fasters -> faster", function() {deepEqual( Stem("fasters"), "faster");});
test("fastfrusen -> fastfrus", function() {deepEqual( Stem("fastfrusen"), "fastfrus");});
test("fasthet -> fast", function() {deepEqual( Stem("fasthet"), "fast");});
test("fasthäftade -> fasthäft", function() {deepEqual( Stem("fasthäftade"), "fasthäft");});
test("fasthålla -> fasthåll", function() {deepEqual( Stem("fasthålla"), "fasthåll");});
test("fasthöllo -> fasthöllo", function() {deepEqual( Stem("fasthöllo"), "fasthöllo");});
test("fastklistrad -> fastklistr", function() {deepEqual( Stem("fastklistrad"), "fastklistr");});
test("fastlag -> fastlag", function() {deepEqual( Stem("fastlag"), "fastlag");});
test("fastlagskoral -> fastlagskoral", function() {deepEqual( Stem("fastlagskoral"), "fastlagskoral");});
test("fastmer -> fastm", function() {deepEqual( Stem("fastmer"), "fastm");});
test("fastmö -> fastmö", function() {deepEqual( Stem("fastmö"), "fastmö");});
test("fastna -> fastn", function() {deepEqual( Stem("fastna"), "fastn");});
test("fastnade -> fastn", function() {deepEqual( Stem("fastnade"), "fastn");});
test("fastnaglad -> fastnagl", function() {deepEqual( Stem("fastnaglad"), "fastnagl");});
test("fastnat -> fastn", function() {deepEqual( Stem("fastnat"), "fastn");});
test("fastrar -> fastr", function() {deepEqual( Stem("fastrar"), "fastr");});
test("fastställda -> fastställd", function() {deepEqual( Stem("fastställda"), "fastställd");});
test("fastsurrad -> fastsurr", function() {deepEqual( Stem("fastsurrad"), "fastsurr");});
test("fastsurrade -> fastsurr", function() {deepEqual( Stem("fastsurrade"), "fastsurr");});
test("fastän -> fastän", function() {deepEqual( Stem("fastän"), "fastän");});
test("fastån -> fastån", function() {deepEqual( Stem("fastån"), "fastån");});
test("fat -> fat", function() {deepEqual( Stem("fat"), "fat");});
test("fatalt -> fatalt", function() {deepEqual( Stem("fatalt"), "fatalt");});
test("fatet -> fatet", function() {deepEqual( Stem("fatet"), "fatet");});
test("fatt -> fatt", function() {deepEqual( Stem("fatt"), "fatt");});
test("fatta -> fatt", function() {deepEqual( Stem("fatta"), "fatt");});
test("fattadc -> fattadc", function() {deepEqual( Stem("fattadc"), "fattadc");});
test("fattade -> fatt", function() {deepEqual( Stem("fattade"), "fatt");});
test("fattades -> fatt", function() {deepEqual( Stem("fattades"), "fatt");});
test("fattar -> fatt", function() {deepEqual( Stem("fattar"), "fatt");});
test("fattas -> fatt", function() {deepEqual( Stem("fattas"), "fatt");});
test("fattat -> fatt", function() {deepEqual( Stem("fattat"), "fatt");});
test("fattbar -> fattb", function() {deepEqual( Stem("fattbar"), "fattb");});
test("fattig -> fatt", function() {deepEqual( Stem("fattig"), "fatt");});
test("fattiga -> fatt", function() {deepEqual( Stem("fattiga"), "fatt");});
test("fattigare -> fatt", function() {deepEqual( Stem("fattigare"), "fatt");});
test("fattigaste -> fatt", function() {deepEqual( Stem("fattigaste"), "fatt");});
test("fattigdom -> fattigdom", function() {deepEqual( Stem("fattigdom"), "fattigdom");});
test("fattigdomen -> fattigdom", function() {deepEqual( Stem("fattigdomen"), "fattigdom");});
test("fattigdomens -> fattigdom", function() {deepEqual( Stem("fattigdomens"), "fattigdom");});
test("fattige -> fatt", function() {deepEqual( Stem("fattige"), "fatt");});
test("fattiglapp -> fattiglapp", function() {deepEqual( Stem("fattiglapp"), "fattiglapp");});
test("fattiglappen -> fattiglapp", function() {deepEqual( Stem("fattiglappen"), "fattiglapp");});
test("fattigt -> fatt", function() {deepEqual( Stem("fattigt"), "fatt");});
test("fattning -> fattning", function() {deepEqual( Stem("fattning"), "fattning");});
test("fattningsförmåga -> fattningsförmåg", function() {deepEqual( Stem("fattningsförmåga"), "fattningsförmåg");});
test("fattningsgåva -> fattningsgåv", function() {deepEqual( Stem("fattningsgåva"), "fattningsgåv");});
test("faubourg -> faubourg", function() {deepEqual( Stem("faubourg"), "faubourg");});
test("faure -> faur", function() {deepEqual( Stem("faure"), "faur");});
test("faust -> faust", function() {deepEqual( Stem("faust"), "faust");});
test("faute -> faut", function() {deepEqual( Stem("faute"), "faut");});
test("favitska -> favitsk", function() {deepEqual( Stem("favitska"), "favitsk");});
test("favoriträtt -> favoriträt", function() {deepEqual( Stem("favoriträtt"), "favoriträt");});
test("fax -> fax", function() {deepEqual( Stem("fax"), "fax");});
test("fctt -> fctt", function() {deepEqual( Stem("fctt"), "fctt");});
test("fdrlovade -> fdrlov", function() {deepEqual( Stem("fdrlovade"), "fdrlov");});
test("fdrvridna -> fdrvridn", function() {deepEqual( Stem("fdrvridna"), "fdrvridn");});
test("fe -> fe", function() {deepEqual( Stem("fe"), "fe");});
test("feber -> feb", function() {deepEqual( Stem("feber"), "feb");});
test("feberaktig -> feberakt", function() {deepEqual( Stem("feberaktig"), "feberakt");});
test("feberaktiga -> feberakt", function() {deepEqual( Stem("feberaktiga"), "feberakt");});
test("feberdröm -> feberdröm", function() {deepEqual( Stem("feberdröm"), "feberdröm");});
test("feberhetta -> feberhet", function() {deepEqual( Stem("feberhetta"), "feberhet");});
test("febern -> feb", function() {deepEqual( Stem("febern"), "feb");});
test("feberns -> feb", function() {deepEqual( Stem("feberns"), "feb");});
test("febersjukdom -> febersjukdom", function() {deepEqual( Stem("febersjukdom"), "febersjukdom");});
test("febertermometern -> febertermomet", function() {deepEqual( Stem("febertermometern"), "febertermomet");});
test("febervarm -> febervarm", function() {deepEqual( Stem("febervarm"), "febervarm");});
test("feberyrsel -> feberyrsel", function() {deepEqual( Stem("feberyrsel"), "feberyrsel");});
test("feberyrseln -> feberyrseln", function() {deepEqual( Stem("feberyrseln"), "feberyrseln");});
test("febrilt -> febrilt", function() {deepEqual( Stem("febrilt"), "febrilt");});
test("februari -> februari", function() {deepEqual( Stem("februari"), "februari");});
test("feer -> feer", function() {deepEqual( Stem("feer"), "feer");});
test("feerna -> feern", function() {deepEqual( Stem("feerna"), "feern");});
test("feg -> feg", function() {deepEqual( Stem("feg"), "feg");});
test("feghet -> feg", function() {deepEqual( Stem("feghet"), "feg");});
test("fegt -> fegt", function() {deepEqual( Stem("fegt"), "fegt");});
test("fejade -> fej", function() {deepEqual( Stem("fejade"), "fej");});
test("fejd -> fejd", function() {deepEqual( Stem("fejd"), "fejd");});
test("fel -> fel", function() {deepEqual( Stem("fel"), "fel");});
test("fela -> fel", function() {deepEqual( Stem("fela"), "fel");});
test("felade -> fel", function() {deepEqual( Stem("felade"), "fel");});
test("felaktig -> felakt", function() {deepEqual( Stem("felaktig"), "felakt");});
test("felaktiga -> felakt", function() {deepEqual( Stem("felaktiga"), "felakt");});
test("felande -> fel", function() {deepEqual( Stem("felande"), "fel");});
test("felas -> fel", function() {deepEqual( Stem("felas"), "fel");});
test("felat -> fel", function() {deepEqual( Stem("felat"), "fel");});
test("felet -> felet", function() {deepEqual( Stem("felet"), "felet");});
test("felfri -> felfri", function() {deepEqual( Stem("felfri"), "felfri");});
test("felix -> felix", function() {deepEqual( Stem("felix"), "felix");});
test("felmodellerad -> felmodeller", function() {deepEqual( Stem("felmodellerad"), "felmodeller");});
test("felslagna -> felslagn", function() {deepEqual( Stem("felslagna"), "felslagn");});
test("felsteg -> felsteg", function() {deepEqual( Stem("felsteg"), "felsteg");});
test("fem -> fem", function() {deepEqual( Stem("fem"), "fem");});
test("feminin -> feminin", function() {deepEqual( Stem("feminin"), "feminin");});
test("femkamp -> femkamp", function() {deepEqual( Stem("femkamp"), "femkamp");});
test("femma -> femm", function() {deepEqual( Stem("femma"), "femm");});
test("femrio -> femrio", function() {deepEqual( Stem("femrio"), "femrio");});
test("femte -> femt", function() {deepEqual( Stem("femte"), "femt");});
test("femtio -> femtio", function() {deepEqual( Stem("femtio"), "femtio");});
test("femtiosex -> femtiosex", function() {deepEqual( Stem("femtiosex"), "femtiosex");});
test("femtiosju -> femtiosju", function() {deepEqual( Stem("femtiosju"), "femtiosju");});
test("femtiotalet -> femtiotalet", function() {deepEqual( Stem("femtiotalet"), "femtiotalet");});
test("femtioåtta -> femtioåt", function() {deepEqual( Stem("femtioåtta"), "femtioåt");});
test("femton -> femton", function() {deepEqual( Stem("femton"), "femton");});
test("femtonde -> femtond", function() {deepEqual( Stem("femtonde"), "femtond");});
test("fen -> fen", function() {deepEqual( Stem("fen"), "fen");});
test("fena -> fen", function() {deepEqual( Stem("fena"), "fen");});
test("fenelon -> fenelon", function() {deepEqual( Stem("fenelon"), "fenelon");});
test("fenix -> fenix", function() {deepEqual( Stem("fenix"), "fenix");});
test("fenomenens -> fenomen", function() {deepEqual( Stem("fenomenens"), "fenomen");});
test("fenster -> fenst", function() {deepEqual( Stem("fenster"), "fenst");});
test("ferierna -> feri", function() {deepEqual( Stem("ferierna"), "feri");});
test("fermt -> fermt", function() {deepEqual( Stem("fermt"), "fermt");});
test("fermtio -> fermtio", function() {deepEqual( Stem("fermtio"), "fermtio");});
test("fernissa -> ferniss", function() {deepEqual( Stem("fernissa"), "ferniss");});
test("fersen -> fers", function() {deepEqual( Stem("fersen"), "fers");});
test("fest -> fest", function() {deepEqual( Stem("fest"), "fest");});
test("festen -> fest", function() {deepEqual( Stem("festen"), "fest");});
test("festens -> fest", function() {deepEqual( Stem("festens"), "fest");});
test("fester -> fest", function() {deepEqual( Stem("fester"), "fest");});
test("festernas -> fest", function() {deepEqual( Stem("festernas"), "fest");});
test("festklädda -> festkläd", function() {deepEqual( Stem("festklädda"), "festkläd");});
test("festliga -> fest", function() {deepEqual( Stem("festliga"), "fest");});
test("festligaste -> fest", function() {deepEqual( Stem("festligaste"), "fest");});
test("festligheten -> fest", function() {deepEqual( Stem("festligheten"), "fest");});
test("festligt -> fest", function() {deepEqual( Stem("festligt"), "fest");});
test("fet -> fet", function() {deepEqual( Stem("fet"), "fet");});
test("feta -> fet", function() {deepEqual( Stem("feta"), "fet");});
test("fetare -> fet", function() {deepEqual( Stem("fetare"), "fet");});
test("fetknoppen -> fetknopp", function() {deepEqual( Stem("fetknoppen"), "fetknopp");});
test("fetlagd -> fetlag", function() {deepEqual( Stem("fetlagd"), "fetlag");});
test("fetlagt -> fetlag", function() {deepEqual( Stem("fetlagt"), "fetlag");});
test("fetman -> fetman", function() {deepEqual( Stem("fetman"), "fetman");});
test("fetstilsrubriken -> fetstilsrubrik", function() {deepEqual( Stem("fetstilsrubriken"), "fetstilsrubrik");});
test("fett -> fett", function() {deepEqual( Stem("fett"), "fett");});
test("fetthjärta -> fetthjärt", function() {deepEqual( Stem("fetthjärta"), "fetthjärt");});
test("fez -> fez", function() {deepEqual( Stem("fez"), "fez");});
test("fezen -> fez", function() {deepEqual( Stem("fezen"), "fez");});
test("fi -> fi", function() {deepEqual( Stem("fi"), "fi");});
test("fiaddra -> fiaddr", function() {deepEqual( Stem("fiaddra"), "fiaddr");});
test("fiat -> fiat", function() {deepEqual( Stem("fiat"), "fiat");});
test("fibrer -> fibr", function() {deepEqual( Stem("fibrer"), "fibr");});
test("fichn -> fichn", function() {deepEqual( Stem("fichn"), "fichn");});
test("ficj -> ficj", function() {deepEqual( Stem("ficj"), "ficj");});
test("fick -> fick", function() {deepEqual( Stem("fick"), "fick");});
test("ficka -> fick", function() {deepEqual( Stem("ficka"), "fick");});
test("fickan -> fickan", function() {deepEqual( Stem("fickan"), "fickan");});
test("ficker -> fick", function() {deepEqual( Stem("ficker"), "fick");});
test("fickers -> ficker", function() {deepEqual( Stem("fickers"), "ficker");});
test("fickor -> fick", function() {deepEqual( Stem("fickor"), "fick");});
test("fickorna -> fick", function() {deepEqual( Stem("fickorna"), "fick");});
test("fickpengar -> fickpeng", function() {deepEqual( Stem("fickpengar"), "fickpeng");});
test("ficktjuvs -> ficktjuv", function() {deepEqual( Stem("ficktjuvs"), "ficktjuv");});
test("fickur -> fickur", function() {deepEqual( Stem("fickur"), "fickur");});
test("fideikommiss -> fideikommiss", function() {deepEqual( Stem("fideikommiss"), "fideikommiss");});
test("fiende -> fiend", function() {deepEqual( Stem("fiende"), "fiend");});
test("fiendeland -> fiendeland", function() {deepEqual( Stem("fiendeland"), "fiendeland");});
test("fiender -> fiend", function() {deepEqual( Stem("fiender"), "fiend");});
test("fientlig -> fient", function() {deepEqual( Stem("fientlig"), "fient");});
test("fientliga -> fient", function() {deepEqual( Stem("fientliga"), "fient");});
test("fientlighet -> fient", function() {deepEqual( Stem("fientlighet"), "fient");});
test("fiffigt -> fiff", function() {deepEqual( Stem("fiffigt"), "fiff");});
test("fig -> fig", function() {deepEqual( Stem("fig"), "fig");});
test("figur -> figur", function() {deepEqual( Stem("figur"), "figur");});
test("figuranter -> figurant", function() {deepEqual( Stem("figuranter"), "figurant");});
test("figuren -> figur", function() {deepEqual( Stem("figuren"), "figur");});
test("figurer -> figur", function() {deepEqual( Stem("figurer"), "figur");});
test("figurerna -> figur", function() {deepEqual( Stem("figurerna"), "figur");});
test("figurliga -> figur", function() {deepEqual( Stem("figurliga"), "figur");});
test("fiiosofiskt -> fiiosofisk", function() {deepEqual( Stem("fiiosofiskt"), "fiiosofisk");});
test("fiiten -> fiit", function() {deepEqual( Stem("fiiten"), "fiit");});
test("fikar -> fik", function() {deepEqual( Stem("fikar"), "fik");});
test("fikon -> fikon", function() {deepEqual( Stem("fikon"), "fikon");});
test("fikonaskörten -> fikonaskört", function() {deepEqual( Stem("fikonaskörten"), "fikonaskört");});
test("fiktion -> fiktion", function() {deepEqual( Stem("fiktion"), "fiktion");});
test("fiktioner -> fiktion", function() {deepEqual( Stem("fiktioner"), "fiktion");});
test("fikusen -> fikus", function() {deepEqual( Stem("fikusen"), "fikus");});
test("fil -> fil", function() {deepEqual( Stem("fil"), "fil");});
test("filantroper -> filantrop", function() {deepEqual( Stem("filantroper"), "filantrop");});
test("filbunke -> filbunk", function() {deepEqual( Stem("filbunke"), "filbunk");});
test("filen -> fil", function() {deepEqual( Stem("filen"), "fil");});
test("filips -> filip", function() {deepEqual( Stem("filips"), "filip");});
test("filosof -> filosof", function() {deepEqual( Stem("filosof"), "filosof");});
test("filosofen -> filosof", function() {deepEqual( Stem("filosofen"), "filosof");});
test("filosoferna -> filosof", function() {deepEqual( Stem("filosoferna"), "filosof");});
test("filosofi -> filosofi", function() {deepEqual( Stem("filosofi"), "filosofi");});
test("filosofin -> filosofin", function() {deepEqual( Stem("filosofin"), "filosofin");});
test("filosofiska -> filosofisk", function() {deepEqual( Stem("filosofiska"), "filosofisk");});
test("filt -> filt", function() {deepEqual( Stem("filt"), "filt");});
test("filtar -> filt", function() {deepEqual( Stem("filtar"), "filt");});
test("filuren -> filur", function() {deepEqual( Stem("filuren"), "filur");});
test("fimbulnatt -> fimbulnat", function() {deepEqual( Stem("fimbulnatt"), "fimbulnat");});
test("fimla -> fiml", function() {deepEqual( Stem("fimla"), "fiml");});
test("fimls -> fiml", function() {deepEqual( Stem("fimls"), "fiml");});
test("fin -> fin", function() {deepEqual( Stem("fin"), "fin");});
test("fina -> fin", function() {deepEqual( Stem("fina"), "fin");});
test("finansvärlden -> finansvärld", function() {deepEqual( Stem("finansvärlden"), "finansvärld");});
test("finare -> fin", function() {deepEqual( Stem("finare"), "fin");});
test("finaste -> fin", function() {deepEqual( Stem("finaste"), "fin");});
test("finessen -> finess", function() {deepEqual( Stem("finessen"), "finess");});
test("fingc -> fingc", function() {deepEqual( Stem("fingc"), "fingc");});
test("finge -> fing", function() {deepEqual( Stem("finge"), "fing");});
test("finger -> fing", function() {deepEqual( Stem("finger"), "fing");});
test("fingerspetsar -> fingerspets", function() {deepEqual( Stem("fingerspetsar"), "fingerspets");});
test("fingerspetsarna -> fingerspets", function() {deepEqual( Stem("fingerspetsarna"), "fingerspets");});
test("fingertoppar -> fingertopp", function() {deepEqual( Stem("fingertoppar"), "fingertopp");});
test("fingertopparna -> fingertopp", function() {deepEqual( Stem("fingertopparna"), "fingertopp");});
test("fingo -> fingo", function() {deepEqual( Stem("fingo"), "fingo");});
test("fingra -> fingr", function() {deepEqual( Stem("fingra"), "fingr");});
test("fingrade -> fingr", function() {deepEqual( Stem("fingrade"), "fingr");});
test("fingrar -> fingr", function() {deepEqual( Stem("fingrar"), "fingr");});
test("fingrarna -> fingr", function() {deepEqual( Stem("fingrarna"), "fingr");});
test("fingrarne -> fingr", function() {deepEqual( Stem("fingrarne"), "fingr");});
test("fingret -> fingret", function() {deepEqual( Stem("fingret"), "fingret");});
test("finhet -> fin", function() {deepEqual( Stem("finhet"), "fin");});
test("finheter -> fin", function() {deepEqual( Stem("finheter"), "fin");});
test("finkel -> finkel", function() {deepEqual( Stem("finkel"), "finkel");});
test("finkänslig -> finkäns", function() {deepEqual( Stem("finkänslig"), "finkäns");});
test("finkänsliga -> finkäns", function() {deepEqual( Stem("finkänsliga"), "finkäns");});
test("finkänslighet -> finkäns", function() {deepEqual( Stem("finkänslighet"), "finkäns");});
test("finland -> finland", function() {deepEqual( Stem("finland"), "finland");});
test("finlandssvenska -> finlandssvensk", function() {deepEqual( Stem("finlandssvenska"), "finlandssvensk");});
test("finländsk -> finländsk", function() {deepEqual( Stem("finländsk"), "finländsk");});
test("finms -> finm", function() {deepEqual( Stem("finms"), "finm");});
test("finna -> finn", function() {deepEqual( Stem("finna"), "finn");});
test("finnande -> finn", function() {deepEqual( Stem("finnande"), "finn");});
test("finnandes -> finn", function() {deepEqual( Stem("finnandes"), "finn");});
test("finnarna -> finn", function() {deepEqual( Stem("finnarna"), "finn");});
test("finnas -> finn", function() {deepEqual( Stem("finnas"), "finn");});
test("finner -> finn", function() {deepEqual( Stem("finner"), "finn");});
test("finnes -> finn", function() {deepEqual( Stem("finnes"), "finn");});
test("finns -> finn", function() {deepEqual( Stem("finns"), "finn");});
test("fins -> fin", function() {deepEqual( Stem("fins"), "fin");});
test("finsk -> finsk", function() {deepEqual( Stem("finsk"), "finsk");});
test("finska -> finsk", function() {deepEqual( Stem("finska"), "finsk");});
test("fint -> fint", function() {deepEqual( Stem("fint"), "fint");});
test("fintlighet -> fint", function() {deepEqual( Stem("fintlighet"), "fint");});
test("finur -> finur", function() {deepEqual( Stem("finur"), "finur");});
test("fiol -> fiol", function() {deepEqual( Stem("fiol"), "fiol");});
test("fiolen -> fiol", function() {deepEqual( Stem("fiolen"), "fiol");});
test("fiolin -> fiolin", function() {deepEqual( Stem("fiolin"), "fiolin");});
test("fira -> fir", function() {deepEqual( Stem("fira"), "fir");});
test("firad -> fir", function() {deepEqual( Stem("firad"), "fir");});
test("firade -> fir", function() {deepEqual( Stem("firade"), "fir");});
test("firades -> fir", function() {deepEqual( Stem("firades"), "fir");});
test("firande -> fir", function() {deepEqual( Stem("firande"), "fir");});
test("firar -> fir", function() {deepEqual( Stem("firar"), "fir");});
test("firat -> fir", function() {deepEqual( Stem("firat"), "fir");});
test("firma -> firm", function() {deepEqual( Stem("firma"), "firm");});
test("fisk -> fisk", function() {deepEqual( Stem("fisk"), "fisk");});
test("fiska -> fisk", function() {deepEqual( Stem("fiska"), "fisk");});
test("fiskar -> fisk", function() {deepEqual( Stem("fiskar"), "fisk");});
test("fiskarbatarna -> fiskarbat", function() {deepEqual( Stem("fiskarbatarna"), "fiskarbat");});
test("fiskarbåtarna -> fiskarbåt", function() {deepEqual( Stem("fiskarbåtarna"), "fiskarbåt");});
test("fiskare -> fisk", function() {deepEqual( Stem("fiskare"), "fisk");});
test("fiskaren -> fisk", function() {deepEqual( Stem("fiskaren"), "fisk");});
test("fiskarflicka -> fiskarflick", function() {deepEqual( Stem("fiskarflicka"), "fiskarflick");});
test("fiskarflickan -> fiskarflickan", function() {deepEqual( Stem("fiskarflickan"), "fiskarflickan");});
test("fiskarflickans -> fiskarflickan", function() {deepEqual( Stem("fiskarflickans"), "fiskarflickan");});
test("fiskargubbe -> fiskargubb", function() {deepEqual( Stem("fiskargubbe"), "fiskargubb");});
test("fiskarne -> fisk", function() {deepEqual( Stem("fiskarne"), "fisk");});
test("fiskarstugan -> fiskarstugan", function() {deepEqual( Stem("fiskarstugan"), "fiskarstugan");});
test("fiskarstugorna -> fiskarstug", function() {deepEqual( Stem("fiskarstugorna"), "fiskarstug");});
test("fiskat -> fisk", function() {deepEqual( Stem("fiskat"), "fisk");});
test("fiske -> fisk", function() {deepEqual( Stem("fiske"), "fisk");});
test("fisken -> fisk", function() {deepEqual( Stem("fisken"), "fisk");});
test("fisket -> fisket", function() {deepEqual( Stem("fisket"), "fisket");});
test("fiskfatet -> fiskfatet", function() {deepEqual( Stem("fiskfatet"), "fiskfatet");});
test("fiskläge -> fiskläg", function() {deepEqual( Stem("fiskläge"), "fiskläg");});
test("fisklägen -> fiskläg", function() {deepEqual( Stem("fisklägen"), "fiskläg");});
test("fiskläget -> fiskläget", function() {deepEqual( Stem("fiskläget"), "fiskläget");});
test("fisklägets -> fiskläget", function() {deepEqual( Stem("fisklägets"), "fiskläget");});
test("fisknoten -> fisknot", function() {deepEqual( Stem("fisknoten"), "fisknot");});
test("fiskrarne -> fiskr", function() {deepEqual( Stem("fiskrarne"), "fiskr");});
test("fiskredskap -> fiskredskap", function() {deepEqual( Stem("fiskredskap"), "fiskredskap");});
test("fiskredskapen -> fiskredskap", function() {deepEqual( Stem("fiskredskapen"), "fiskredskap");});
test("fisktorkning -> fisktorkning", function() {deepEqual( Stem("fisktorkning"), "fisktorkning");});
test("fisktorkningen -> fisktorkning", function() {deepEqual( Stem("fisktorkningen"), "fisktorkning");});
test("fistmanspresenterna -> fistmanspresent", function() {deepEqual( Stem("fistmanspresenterna"), "fistmanspresent");});
test("fix -> fix", function() {deepEqual( Stem("fix"), "fix");});
test("fixerade -> fixer", function() {deepEqual( Stem("fixerade"), "fixer");});
test("fixerar -> fixer", function() {deepEqual( Stem("fixerar"), "fixer");});
test("fiäsk -> fiäsk", function() {deepEqual( Stem("fiäsk"), "fiäsk");});
test("fjerde -> fjerd", function() {deepEqual( Stem("fjerde"), "fjerd");});
test("fjesk -> fjesk", function() {deepEqual( Stem("fjesk"), "fjesk");});
test("fjeska -> fjesk", function() {deepEqual( Stem("fjeska"), "fjesk");});
test("fjol -> fjol", function() {deepEqual( Stem("fjol"), "fjol");});
test("fjolligt -> fjol", function() {deepEqual( Stem("fjolligt"), "fjol");});
test("fjor -> fjor", function() {deepEqual( Stem("fjor"), "fjor");});
test("fjorton -> fjorton", function() {deepEqual( Stem("fjorton"), "fjorton");});
test("fjortonde -> fjortond", function() {deepEqual( Stem("fjortonde"), "fjortond");});
test("fjortonårig -> fjortonår", function() {deepEqual( Stem("fjortonårig"), "fjortonår");});
test("fjortonöres -> fjortonör", function() {deepEqual( Stem("fjortonöres"), "fjortonör");});
test("fjun -> fjun", function() {deepEqual( Stem("fjun"), "fjun");});
test("fjuniga -> fjun", function() {deepEqual( Stem("fjuniga"), "fjun");});
test("fjunlös -> fjunlös", function() {deepEqual( Stem("fjunlös"), "fjunlös");});
test("fjäder -> fjäd", function() {deepEqual( Stem("fjäder"), "fjäd");});
test("fjäderboa -> fjäderbo", function() {deepEqual( Stem("fjäderboa"), "fjäderbo");});
test("fjädern -> fjäd", function() {deepEqual( Stem("fjädern"), "fjäd");});
test("fjädrande -> fjädr", function() {deepEqual( Stem("fjädrande"), "fjädr");});
test("fjädrar -> fjädr", function() {deepEqual( Stem("fjädrar"), "fjädr");});
test("fjäll -> fjäll", function() {deepEqual( Stem("fjäll"), "fjäll");});
test("fjällen -> fjäll", function() {deepEqual( Stem("fjällen"), "fjäll");});
test("fjälliga -> fjäl", function() {deepEqual( Stem("fjälliga"), "fjäl");});
test("fjälligt -> fjäl", function() {deepEqual( Stem("fjälligt"), "fjäl");});
test("fjällko -> fjällko", function() {deepEqual( Stem("fjällko"), "fjällko");});
test("fjärde -> fjärd", function() {deepEqual( Stem("fjärde"), "fjärd");});
test("fjärdedelar -> fjärdedel", function() {deepEqual( Stem("fjärdedelar"), "fjärdedel");});
test("fjärdedelen -> fjärdedel", function() {deepEqual( Stem("fjärdedelen"), "fjärdedel");});
test("fjärdedels -> fjärdedel", function() {deepEqual( Stem("fjärdedels"), "fjärdedel");});
test("fjärden -> fjärd", function() {deepEqual( Stem("fjärden"), "fjärd");});
test("fjärdingsväg -> fjärdingsväg", function() {deepEqual( Stem("fjärdingsväg"), "fjärdingsväg");});
test("fjäril -> fjäril", function() {deepEqual( Stem("fjäril"), "fjäril");});
test("fjärilar -> fjäril", function() {deepEqual( Stem("fjärilar"), "fjäril");});
test("fjärn -> fjärn", function() {deepEqual( Stem("fjärn"), "fjärn");});
test("fjärnt -> fjärnt", function() {deepEqual( Stem("fjärnt"), "fjärnt");});
test("fjärran -> fjärran", function() {deepEqual( Stem("fjärran"), "fjärran");});
test("fjäsa -> fjäs", function() {deepEqual( Stem("fjäsa"), "fjäs");});
test("fjäsad -> fjäs", function() {deepEqual( Stem("fjäsad"), "fjäs");});
test("fjäsade -> fjäs", function() {deepEqual( Stem("fjäsade"), "fjäs");});
test("fjäsk -> fjäsk", function() {deepEqual( Stem("fjäsk"), "fjäsk");});
test("fjäska -> fjäsk", function() {deepEqual( Stem("fjäska"), "fjäsk");});
test("fjät -> fjät", function() {deepEqual( Stem("fjät"), "fjät");});
test("flabbade -> flabb", function() {deepEqual( Stem("flabbade"), "flabb");});
test("flacka -> flack", function() {deepEqual( Stem("flacka"), "flack");});
test("flackade -> flack", function() {deepEqual( Stem("flackade"), "flack");});
test("flackande -> flack", function() {deepEqual( Stem("flackande"), "flack");});
test("flacken -> flack", function() {deepEqual( Stem("flacken"), "flack");});
test("flackt -> flack", function() {deepEqual( Stem("flackt"), "flack");});
test("fladd -> fladd", function() {deepEqual( Stem("fladd"), "fladd");});
test("fladdra -> fladdr", function() {deepEqual( Stem("fladdra"), "fladdr");});
test("fladdrade -> fladdr", function() {deepEqual( Stem("fladdrade"), "fladdr");});
test("fladdrande -> fladdr", function() {deepEqual( Stem("fladdrande"), "fladdr");});
test("fladdrar -> fladdr", function() {deepEqual( Stem("fladdrar"), "fladdr");});
test("fladdrat -> fladdr", function() {deepEqual( Stem("fladdrat"), "fladdr");});
test("flagat -> flag", function() {deepEqual( Stem("flagat"), "flag");});
test("flagg -> flagg", function() {deepEqual( Stem("flagg"), "flagg");});
test("flaggar -> flagg", function() {deepEqual( Stem("flaggar"), "flagg");});
test("flaggor -> flagg", function() {deepEqual( Stem("flaggor"), "flagg");});
test("flagor -> flag", function() {deepEqual( Stem("flagor"), "flag");});
test("flak -> flak", function() {deepEqual( Stem("flak"), "flak");});
test("flamma -> flamm", function() {deepEqual( Stem("flamma"), "flamm");});
test("flammade -> flamm", function() {deepEqual( Stem("flammade"), "flamm");});
test("flamman -> flamman", function() {deepEqual( Stem("flamman"), "flamman");});
test("flammande -> flamm", function() {deepEqual( Stem("flammande"), "flamm");});
test("flammar -> flamm", function() {deepEqual( Stem("flammar"), "flamm");});
test("flammorna -> flamm", function() {deepEqual( Stem("flammorna"), "flamm");});
test("flamröd -> flamröd", function() {deepEqual( Stem("flamröd"), "flamröd");});
test("flandrisk -> flandrisk", function() {deepEqual( Stem("flandrisk"), "flandrisk");});
test("flarn -> flarn", function() {deepEqual( Stem("flarn"), "flarn");});
test("flaska -> flask", function() {deepEqual( Stem("flaska"), "flask");});
test("flaskan -> flaskan", function() {deepEqual( Stem("flaskan"), "flaskan");});
test("flaskor -> flask", function() {deepEqual( Stem("flaskor"), "flask");});
test("flat -> flat", function() {deepEqual( Stem("flat"), "flat");});
test("flata -> flat", function() {deepEqual( Stem("flata"), "flat");});
test("flaxade -> flax", function() {deepEqual( Stem("flaxade"), "flax");});
test("flaxande -> flax", function() {deepEqual( Stem("flaxande"), "flax");});
test("flegmatiska -> flegmatisk", function() {deepEqual( Stem("flegmatiska"), "flegmatisk");});
test("fler -> fler", function() {deepEqual( Stem("fler"), "fler");});
test("flera -> fler", function() {deepEqual( Stem("flera"), "fler");});
test("flesta -> flest", function() {deepEqual( Stem("flesta"), "flest");});
test("flestas -> flest", function() {deepEqual( Stem("flestas"), "flest");});
test("fli -> fli", function() {deepEqual( Stem("fli"), "fli");});
test("flicka -> flick", function() {deepEqual( Stem("flicka"), "flick");});
test("flickaktig -> flickakt", function() {deepEqual( Stem("flickaktig"), "flickakt");});
test("flickaktigt -> flickakt", function() {deepEqual( Stem("flickaktigt"), "flickakt");});
test("flickan -> flickan", function() {deepEqual( Stem("flickan"), "flickan");});
test("flickans -> flickan", function() {deepEqual( Stem("flickans"), "flickan");});
test("flickas -> flick", function() {deepEqual( Stem("flickas"), "flick");});
test("flickbarn -> flickbarn", function() {deepEqual( Stem("flickbarn"), "flickbarn");});
test("flickben -> flickb", function() {deepEqual( Stem("flickben"), "flickb");});
test("flickbröst -> flickbröst", function() {deepEqual( Stem("flickbröst"), "flickbröst");});
test("flickdrömmerierna -> flickdrömmeri", function() {deepEqual( Stem("flickdrömmerierna"), "flickdrömmeri");});
test("flickförtjusningen -> flickförtjusning", function() {deepEqual( Stem("flickförtjusningen"), "flickförtjusning");});
test("flickhufvud -> flickhufvud", function() {deepEqual( Stem("flickhufvud"), "flickhufvud");});
test("flickhänder -> flickhänd", function() {deepEqual( Stem("flickhänder"), "flickhänd");});
test("flickkroppen -> flickkropp", function() {deepEqual( Stem("flickkroppen"), "flickkropp");});
test("flickläroverk -> flickläroverk", function() {deepEqual( Stem("flickläroverk"), "flickläroverk");});
test("flicklåro -> flicklåro", function() {deepEqual( Stem("flicklåro"), "flicklåro");});
test("flicknamn -> flicknamn", function() {deepEqual( Stem("flicknamn"), "flicknamn");});
test("flickor -> flick", function() {deepEqual( Stem("flickor"), "flick");});
test("flickorna -> flick", function() {deepEqual( Stem("flickorna"), "flick");});
test("flickornas -> flick", function() {deepEqual( Stem("flickornas"), "flick");});
test("flickors -> flickor", function() {deepEqual( Stem("flickors"), "flickor");});
test("flickröster -> flickröst", function() {deepEqual( Stem("flickröster"), "flickröst");});
test("flickskolan -> flickskolan", function() {deepEqual( Stem("flickskolan"), "flickskolan");});
test("flicksnärtor -> flicksnärt", function() {deepEqual( Stem("flicksnärtor"), "flicksnärt");});
test("flicktiden -> flicktid", function() {deepEqual( Stem("flicktiden"), "flicktid");});
test("flickunge -> flickung", function() {deepEqual( Stem("flickunge"), "flickung");});
test("flickungen -> flickung", function() {deepEqual( Stem("flickungen"), "flickung");});
test("flickuppfostran -> flickuppfostran", function() {deepEqual( Stem("flickuppfostran"), "flickuppfostran");});
test("flida -> flid", function() {deepEqual( Stem("flida"), "flid");});
test("flieka -> fliek", function() {deepEqual( Stem("flieka"), "fliek");});
test("flik -> flik", function() {deepEqual( Stem("flik"), "flik");});
test("flikade -> flik", function() {deepEqual( Stem("flikade"), "flik");});
test("flikar -> flik", function() {deepEqual( Stem("flikar"), "flik");});
test("flin -> flin", function() {deepEqual( Stem("flin"), "flin");});
test("flingor -> fling", function() {deepEqual( Stem("flingor"), "fling");});
test("flinka -> flink", function() {deepEqual( Stem("flinka"), "flink");});
test("flinke -> flink", function() {deepEqual( Stem("flinke"), "flink");});
test("flinkt -> flink", function() {deepEqual( Stem("flinkt"), "flink");});
test("flintor -> flint", function() {deepEqual( Stem("flintor"), "flint");});
test("flintskallig -> flintskal", function() {deepEqual( Stem("flintskallig"), "flintskal");});
test("flintskallige -> flintskal", function() {deepEqual( Stem("flintskallige"), "flintskal");});
test("flit -> flit", function() {deepEqual( Stem("flit"), "flit");});
test("flitig -> flit", function() {deepEqual( Stem("flitig"), "flit");});
test("flitiga -> flit", function() {deepEqual( Stem("flitiga"), "flit");});
test("flitigare -> flit", function() {deepEqual( Stem("flitigare"), "flit");});
test("flitige -> flit", function() {deepEqual( Stem("flitige"), "flit");});
test("flitigt -> flit", function() {deepEqual( Stem("flitigt"), "flit");});
test("flock -> flock", function() {deepEqual( Stem("flock"), "flock");});
test("flockade -> flock", function() {deepEqual( Stem("flockade"), "flock");});
test("flockar -> flock", function() {deepEqual( Stem("flockar"), "flock");});
test("flocken -> flock", function() {deepEqual( Stem("flocken"), "flock");});
test("flod -> flod", function() {deepEqual( Stem("flod"), "flod");});
test("floden -> flod", function() {deepEqual( Stem("floden"), "flod");});
test("floder -> flod", function() {deepEqual( Stem("floder"), "flod");});
test("floders -> floder", function() {deepEqual( Stem("floders"), "floder");});
test("flor -> flor", function() {deepEqual( Stem("flor"), "flor");});
test("flora -> flor", function() {deepEqual( Stem("flora"), "flor");});
test("floras -> flor", function() {deepEqual( Stem("floras"), "flor");});
test("floreal -> floreal", function() {deepEqual( Stem("floreal"), "floreal");});
test("florentinarnas -> florentin", function() {deepEqual( Stem("florentinarnas"), "florentin");});
test("florerar -> florer", function() {deepEqual( Stem("florerar"), "florer");});
test("floret -> floret", function() {deepEqual( Stem("floret"), "floret");});
test("florets -> floret", function() {deepEqual( Stem("florets"), "floret");});
test("florsdraperier -> florsdraperi", function() {deepEqual( Stem("florsdraperier"), "florsdraperi");});
test("florstunn -> florstun", function() {deepEqual( Stem("florstunn"), "florstun");});
test("flossa -> floss", function() {deepEqual( Stem("flossa"), "floss");});
test("flott -> flott", function() {deepEqual( Stem("flott"), "flott");});
test("flotta -> flott", function() {deepEqual( Stem("flotta"), "flott");});
test("flottan -> flottan", function() {deepEqual( Stem("flottan"), "flottan");});
test("flottas -> flott", function() {deepEqual( Stem("flottas"), "flott");});
test("flottglänsande -> flottgläns", function() {deepEqual( Stem("flottglänsande"), "flottgläns");});
test("flottig -> flott", function() {deepEqual( Stem("flottig"), "flott");});
test("flottigare -> flott", function() {deepEqual( Stem("flottigare"), "flott");});
test("fluga -> flug", function() {deepEqual( Stem("fluga"), "flug");});
test("flugfångare -> flugfång", function() {deepEqual( Stem("flugfångare"), "flugfång");});
test("flugit -> flugit", function() {deepEqual( Stem("flugit"), "flugit");});
test("flugmöte -> flugmöt", function() {deepEqual( Stem("flugmöte"), "flugmöt");});
test("flugor -> flug", function() {deepEqual( Stem("flugor"), "flug");});
test("flugorna -> flug", function() {deepEqual( Stem("flugorna"), "flug");});
test("flugornas -> flug", function() {deepEqual( Stem("flugornas"), "flug");});
test("flutit -> flutit", function() {deepEqual( Stem("flutit"), "flutit");});
test("flux -> flux", function() {deepEqual( Stem("flux"), "flux");});
test("fly -> fly", function() {deepEqual( Stem("fly"), "fly");});
test("flydda -> flydd", function() {deepEqual( Stem("flydda"), "flydd");});
test("flydde -> flydd", function() {deepEqual( Stem("flydde"), "flydd");});
test("flyende -> flyend", function() {deepEqual( Stem("flyende"), "flyend");});
test("flyg -> flyg", function() {deepEqual( Stem("flyg"), "flyg");});
test("flyga -> flyg", function() {deepEqual( Stem("flyga"), "flyg");});
test("flygande -> flyg", function() {deepEqual( Stem("flygande"), "flyg");});
test("flygaren -> flyg", function() {deepEqual( Stem("flygaren"), "flyg");});
test("flygeln -> flygeln", function() {deepEqual( Stem("flygeln"), "flygeln");});
test("flyger -> flyg", function() {deepEqual( Stem("flyger"), "flyg");});
test("flyglar -> flygl", function() {deepEqual( Stem("flyglar"), "flygl");});
test("flygt -> flygt", function() {deepEqual( Stem("flygt"), "flygt");});
test("flykt -> flykt", function() {deepEqual( Stem("flykt"), "flykt");});
test("flykta -> flykt", function() {deepEqual( Stem("flykta"), "flykt");});
test("flyktande -> flykt", function() {deepEqual( Stem("flyktande"), "flykt");});
test("flyktar -> flykt", function() {deepEqual( Stem("flyktar"), "flykt");});
test("flykten -> flykt", function() {deepEqual( Stem("flykten"), "flykt");});
test("flykter -> flykt", function() {deepEqual( Stem("flykter"), "flykt");});
test("flyktig -> flykt", function() {deepEqual( Stem("flyktig"), "flykt");});
test("flyktiga -> flykt", function() {deepEqual( Stem("flyktiga"), "flykt");});
test("flyktigare -> flykt", function() {deepEqual( Stem("flyktigare"), "flykt");});
test("flyktighet -> flykt", function() {deepEqual( Stem("flyktighet"), "flykt");});
test("flyktigheten -> flykt", function() {deepEqual( Stem("flyktigheten"), "flykt");});
test("flyktigt -> flykt", function() {deepEqual( Stem("flyktigt"), "flykt");});
test("flykting -> flykting", function() {deepEqual( Stem("flykting"), "flykting");});
test("flyktlg -> flyktlg", function() {deepEqual( Stem("flyktlg"), "flyktlg");});
test("flyr -> flyr", function() {deepEqual( Stem("flyr"), "flyr");});
test("flyta -> flyt", function() {deepEqual( Stem("flyta"), "flyt");});
test("flytande -> flyt", function() {deepEqual( Stem("flytande"), "flyt");});
test("flyter -> flyt", function() {deepEqual( Stem("flyter"), "flyt");});
test("flytt -> flytt", function() {deepEqual( Stem("flytt"), "flytt");});
test("flytta -> flytt", function() {deepEqual( Stem("flytta"), "flytt");});
test("flyttade -> flytt", function() {deepEqual( Stem("flyttade"), "flytt");});
test("flyttar -> flytt", function() {deepEqual( Stem("flyttar"), "flytt");});
test("flyttat -> flytt", function() {deepEqual( Stem("flyttat"), "flytt");});
test("flyttbar -> flyttb", function() {deepEqual( Stem("flyttbar"), "flyttb");});
test("flyttfoglarne -> flyttfogl", function() {deepEqual( Stem("flyttfoglarne"), "flyttfogl");});
test("flyttning -> flyttning", function() {deepEqual( Stem("flyttning"), "flyttning");});
test("fläck -> fläck", function() {deepEqual( Stem("fläck"), "fläck");});
test("fläckar -> fläck", function() {deepEqual( Stem("fläckar"), "fläck");});
test("fläckarna -> fläck", function() {deepEqual( Stem("fläckarna"), "fläck");});
test("fläcken -> fläck", function() {deepEqual( Stem("fläcken"), "fläck");});
test("fläckig -> fläck", function() {deepEqual( Stem("fläckig"), "fläck");});
test("fläckigt -> fläck", function() {deepEqual( Stem("fläckigt"), "fläck");});
test("fläcktiga -> fläckt", function() {deepEqual( Stem("fläcktiga"), "fläckt");});
test("fläder -> fläd", function() {deepEqual( Stem("fläder"), "fläd");});
test("fläkt -> fläkt", function() {deepEqual( Stem("fläkt"), "fläkt");});
test("fläktade -> fläkt", function() {deepEqual( Stem("fläktade"), "fläkt");});
test("fläktande -> fläkt", function() {deepEqual( Stem("fläktande"), "fläkt");});
test("fläktar -> fläkt", function() {deepEqual( Stem("fläktar"), "fläkt");});
test("fläktat -> fläkt", function() {deepEqual( Stem("fläktat"), "fläkt");});
test("fläkte -> fläkt", function() {deepEqual( Stem("fläkte"), "fläkt");});
test("flämtade -> flämt", function() {deepEqual( Stem("flämtade"), "flämt");});
test("flämtamde -> flämtamd", function() {deepEqual( Stem("flämtamde"), "flämtamd");});
test("flämtande -> flämt", function() {deepEqual( Stem("flämtande"), "flämt");});
test("flämtar -> flämt", function() {deepEqual( Stem("flämtar"), "flämt");});
test("flämtat -> flämt", function() {deepEqual( Stem("flämtat"), "flämt");});
test("flärd -> flärd", function() {deepEqual( Stem("flärd"), "flärd");});
test("flärdfull -> flärdfull", function() {deepEqual( Stem("flärdfull"), "flärdfull");});
test("flärdfulla -> flärdfull", function() {deepEqual( Stem("flärdfulla"), "flärdfull");});
test("flärdlöshet -> flärdlös", function() {deepEqual( Stem("flärdlöshet"), "flärdlös");});
test("fläsk -> fläsk", function() {deepEqual( Stem("fläsk"), "fläsk");});
test("fläskbitens -> fläskbit", function() {deepEqual( Stem("fläskbitens"), "fläskbit");});
test("fläskkotlett -> fläskkotlet", function() {deepEqual( Stem("fläskkotlett"), "fläskkotlet");});
test("fläta -> flät", function() {deepEqual( Stem("fläta"), "flät");});
test("flätade -> flät", function() {deepEqual( Stem("flätade"), "flät");});
test("flätan -> flätan", function() {deepEqual( Stem("flätan"), "flätan");});
test("flätar -> flät", function() {deepEqual( Stem("flätar"), "flät");});
test("flätor -> flät", function() {deepEqual( Stem("flätor"), "flät");});
test("flåsade -> flås", function() {deepEqual( Stem("flåsade"), "flås");});
test("flåsande -> flås", function() {deepEqual( Stem("flåsande"), "flås");});
test("flödade -> flöd", function() {deepEqual( Stem("flödade"), "flöd");});
test("flödande -> flöd", function() {deepEqual( Stem("flödande"), "flöd");});
test("flödar -> flöd", function() {deepEqual( Stem("flödar"), "flöd");});
test("flöden -> flöd", function() {deepEqual( Stem("flöden"), "flöd");});
test("flödet -> flödet", function() {deepEqual( Stem("flödet"), "flödet");});
test("flög -> flög", function() {deepEqual( Stem("flög"), "flög");});
test("flögo -> flögo", function() {deepEqual( Stem("flögo"), "flögo");});
test("flöjel -> flöjel", function() {deepEqual( Stem("flöjel"), "flöjel");});
test("flöjlande -> flöjl", function() {deepEqual( Stem("flöjlande"), "flöjl");});
test("flöjlarna -> flöjl", function() {deepEqual( Stem("flöjlarna"), "flöjl");});
test("flöjt -> flöjt", function() {deepEqual( Stem("flöjt"), "flöjt");});
test("flöjter -> flöjt", function() {deepEqual( Stem("flöjter"), "flöjt");});
test("flöjtverk -> flöjtverk", function() {deepEqual( Stem("flöjtverk"), "flöjtverk");});
test("flöt -> flöt", function() {deepEqual( Stem("flöt"), "flöt");});
test("fmlstret -> fmlstret", function() {deepEqual( Stem("fmlstret"), "fmlstret");});
test("fn -> fn", function() {deepEqual( Stem("fn"), "fn");});
test("fnassel -> fnassel", function() {deepEqual( Stem("fnassel"), "fnassel");});
test("fnissade -> fniss", function() {deepEqual( Stem("fnissade"), "fniss");});
test("fnitter -> fnitt", function() {deepEqual( Stem("fnitter"), "fnitt");});
test("fnittrade -> fnittr", function() {deepEqual( Stem("fnittrade"), "fnittr");});
test("fnittrande -> fnittr", function() {deepEqual( Stem("fnittrande"), "fnittr");});
test("fnurrar -> fnurr", function() {deepEqual( Stem("fnurrar"), "fnurr");});
test("fnys -> fnys", function() {deepEqual( Stem("fnys"), "fnys");});
test("fnysning -> fnysning", function() {deepEqual( Stem("fnysning"), "fnysning");});
test("fnyste -> fnyst", function() {deepEqual( Stem("fnyste"), "fnyst");});
test("fnös -> fnös", function() {deepEqual( Stem("fnös"), "fnös");});
test("fnöske -> fnösk", function() {deepEqual( Stem("fnöske"), "fnösk");});
test("foajen -> foaj", function() {deepEqual( Stem("foajen"), "foaj");});
test("focken -> fock", function() {deepEqual( Stem("focken"), "fock");});
test("fockmasten -> fockmast", function() {deepEqual( Stem("fockmasten"), "fockmast");});
test("fockskotet -> fockskotet", function() {deepEqual( Stem("fockskotet"), "fockskotet");});
test("fodcr -> fodcr", function() {deepEqual( Stem("fodcr"), "fodcr");});
test("foderverket -> foderverket", function() {deepEqual( Stem("foderverket"), "foderverket");});
test("fodral -> fodral", function() {deepEqual( Stem("fodral"), "fodral");});
test("fodralet -> fodralet", function() {deepEqual( Stem("fodralet"), "fodralet");});
test("fodringsägaren -> fodringsäg", function() {deepEqual( Stem("fodringsägaren"), "fodringsäg");});
test("foga -> fog", function() {deepEqual( Stem("foga"), "fog");});
test("fogade -> fog", function() {deepEqual( Stem("fogade"), "fog");});
test("fogarna -> fog", function() {deepEqual( Stem("fogarna"), "fog");});
test("fogat -> fog", function() {deepEqual( Stem("fogat"), "fog");});
test("fogdar -> fogd", function() {deepEqual( Stem("fogdar"), "fogd");});
test("fogde -> fogd", function() {deepEqual( Stem("fogde"), "fogd");});
test("fogden -> fogd", function() {deepEqual( Stem("fogden"), "fogd");});
test("fogelkvist -> fogelkvist", function() {deepEqual( Stem("fogelkvist"), "fogelkvist");});
test("foglig -> fog", function() {deepEqual( Stem("foglig"), "fog");});
test("fogligare -> fog", function() {deepEqual( Stem("fogligare"), "fog");});
test("fogligheten -> fog", function() {deepEqual( Stem("fogligheten"), "fog");});
test("fogligt -> fog", function() {deepEqual( Stem("fogligt"), "fog");});
test("fogningar -> fogning", function() {deepEqual( Stem("fogningar"), "fogning");});
test("folianter -> foliant", function() {deepEqual( Stem("folianter"), "foliant");});
test("folie -> foli", function() {deepEqual( Stem("folie"), "foli");});
test("folies -> foli", function() {deepEqual( Stem("folies"), "foli");});
test("folja -> folj", function() {deepEqual( Stem("folja"), "folj");});
test("folk -> folk", function() {deepEqual( Stem("folk"), "folk");});
test("folkbok -> folkbok", function() {deepEqual( Stem("folkbok"), "folkbok");});
test("folken -> folk", function() {deepEqual( Stem("folken"), "folk");});
test("folket -> folket", function() {deepEqual( Stem("folket"), "folket");});
test("folkets -> folket", function() {deepEqual( Stem("folkets"), "folket");});
test("folkhop -> folkhop", function() {deepEqual( Stem("folkhop"), "folkhop");});
test("folkliv -> folkliv", function() {deepEqual( Stem("folkliv"), "folkliv");});
test("folklivet -> folklivet", function() {deepEqual( Stem("folklivet"), "folklivet");});
test("folkmelodi -> folkmelodi", function() {deepEqual( Stem("folkmelodi"), "folkmelodi");});
test("folks -> folk", function() {deepEqual( Stem("folks"), "folk");});
test("folksamlingar -> folksamling", function() {deepEqual( Stem("folksamlingar"), "folksamling");});
test("folkskarorna -> folkskar", function() {deepEqual( Stem("folkskarorna"), "folkskar");});
test("folkskollärare -> folkskollär", function() {deepEqual( Stem("folkskollärare"), "folkskollär");});
test("folksägen -> folksäg", function() {deepEqual( Stem("folksägen"), "folksäg");});
test("folksägner -> folksägn", function() {deepEqual( Stem("folksägner"), "folksägn");});
test("folktom -> folktom", function() {deepEqual( Stem("folktom"), "folktom");});
test("folktommast -> folktomm", function() {deepEqual( Stem("folktommast"), "folktomm");});
test("folktro -> folktro", function() {deepEqual( Stem("folktro"), "folktro");});
test("folkvett -> folkvet", function() {deepEqual( Stem("folkvett"), "folkvet");});
test("folkvimlet -> folkvimlet", function() {deepEqual( Stem("folkvimlet"), "folkvimlet");});
test("foll -> foll", function() {deepEqual( Stem("foll"), "foll");});
test("follo -> follo", function() {deepEqual( Stem("follo"), "follo");});
test("fonden -> fond", function() {deepEqual( Stem("fonden"), "fond");});
test("fonder -> fond", function() {deepEqual( Stem("fonder"), "fond");});
test("fondmäklaren -> fondmäkl", function() {deepEqual( Stem("fondmäklaren"), "fondmäkl");});
test("fonstren -> fonstr", function() {deepEqual( Stem("fonstren"), "fonstr");});
test("fonstret -> fonstret", function() {deepEqual( Stem("fonstret"), "fonstret");});
test("for -> for", function() {deepEqual( Stem("for"), "for");});
test("forbi -> forbi", function() {deepEqual( Stem("forbi"), "forbi");});
test("forcerat -> forcer", function() {deepEqual( Stem("forcerat"), "forcer");});
test("ford -> ford", function() {deepEqual( Stem("ford"), "ford");});
test("fordna -> fordn", function() {deepEqual( Stem("fordna"), "fordn");});
test("fordom -> fordom", function() {deepEqual( Stem("fordom"), "fordom");});
test("fordomtima -> fordomtim", function() {deepEqual( Stem("fordomtima"), "fordomtim");});
test("fordon -> fordon", function() {deepEqual( Stem("fordon"), "fordon");});
test("fordra -> fordr", function() {deepEqual( Stem("fordra"), "fordr");});
test("fordrade -> fordr", function() {deepEqual( Stem("fordrade"), "fordr");});
test("fordran -> fordran", function() {deepEqual( Stem("fordran"), "fordran");});
test("fordrande -> fordr", function() {deepEqual( Stem("fordrande"), "fordr");});
test("fordrar -> fordr", function() {deepEqual( Stem("fordrar"), "fordr");});
test("fordras -> fordr", function() {deepEqual( Stem("fordras"), "fordr");});
test("fordrat -> fordr", function() {deepEqual( Stem("fordrat"), "fordr");});
test("fordringar -> fordring", function() {deepEqual( Stem("fordringar"), "fordring");});
test("fordringsägare -> fordringsäg", function() {deepEqual( Stem("fordringsägare"), "fordringsäg");});
test("fordringsägaren -> fordringsäg", function() {deepEqual( Stem("fordringsägaren"), "fordringsäg");});
test("foredrog -> foredrog", function() {deepEqual( Stem("foredrog"), "foredrog");});
test("forefoll -> forefoll", function() {deepEqual( Stem("forefoll"), "forefoll");});
test("foregaende -> foregaend", function() {deepEqual( Stem("foregaende"), "foregaend");});
test("foreslog -> foreslog", function() {deepEqual( Stem("foreslog"), "foreslog");});
test("forfärligt -> forfär", function() {deepEqual( Stem("forfärligt"), "forfär");});
test("forklade -> forkl", function() {deepEqual( Stem("forklade"), "forkl");});
test("form -> form", function() {deepEqual( Stem("form"), "form");});
test("forma -> form", function() {deepEqual( Stem("forma"), "form");});
test("formade -> form", function() {deepEqual( Stem("formade"), "form");});
test("formande -> form", function() {deepEqual( Stem("formande"), "form");});
test("formas -> form", function() {deepEqual( Stem("formas"), "form");});
test("format -> form", function() {deepEqual( Stem("format"), "form");});
test("formationer -> formation", function() {deepEqual( Stem("formationer"), "formation");});
test("formats -> format", function() {deepEqual( Stem("formats"), "format");});
test("formellt -> formellt", function() {deepEqual( Stem("formellt"), "formellt");});
test("formen -> form", function() {deepEqual( Stem("formen"), "form");});
test("formens -> form", function() {deepEqual( Stem("formens"), "form");});
test("former -> form", function() {deepEqual( Stem("former"), "form");});
test("formerna -> form", function() {deepEqual( Stem("formerna"), "form");});
test("formligen -> form", function() {deepEqual( Stem("formligen"), "form");});
test("formlighet -> form", function() {deepEqual( Stem("formlighet"), "form");});
test("formligt -> form", function() {deepEqual( Stem("formligt"), "form");});
test("formlösa -> formlös", function() {deepEqual( Stem("formlösa"), "formlös");});
test("formulera -> formuler", function() {deepEqual( Stem("formulera"), "formuler");});
test("formuläret -> formuläret", function() {deepEqual( Stem("formuläret"), "formuläret");});
test("formåga -> formåg", function() {deepEqual( Stem("formåga"), "formåg");});
test("forn -> forn", function() {deepEqual( Stem("forn"), "forn");});
test("forna -> forn", function() {deepEqual( Stem("forna"), "forn");});
test("forne -> forn", function() {deepEqual( Stem("forne"), "forn");});
test("forntida -> forntid", function() {deepEqual( Stem("forntida"), "forntid");});
test("foro -> foro", function() {deepEqual( Stem("foro"), "foro");});
test("foror -> for", function() {deepEqual( Stem("foror"), "for");});
test("forr -> forr", function() {deepEqual( Stem("forr"), "forr");});
test("fors -> for", function() {deepEqual( Stem("fors"), "for");});
test("forsade -> fors", function() {deepEqual( Stem("forsade"), "fors");});
test("forsande -> fors", function() {deepEqual( Stem("forsande"), "fors");});
test("forsar -> fors", function() {deepEqual( Stem("forsar"), "fors");});
test("forsen -> fors", function() {deepEqual( Stem("forsen"), "fors");});
test("forsiktigt -> forsikt", function() {deepEqual( Stem("forsiktigt"), "forsikt");});
test("forskande -> forsk", function() {deepEqual( Stem("forskande"), "forsk");});
test("forskar -> forsk", function() {deepEqual( Stem("forskar"), "forsk");});
test("forskarmödorna -> forskarmöd", function() {deepEqual( Stem("forskarmödorna"), "forskarmöd");});
test("forsla -> forsl", function() {deepEqual( Stem("forsla"), "forsl");});
test("forsmädat -> forsmäd", function() {deepEqual( Stem("forsmädat"), "forsmäd");});
test("forssar -> forss", function() {deepEqual( Stem("forssar"), "forss");});
test("forssling -> forssling", function() {deepEqual( Stem("forssling"), "forssling");});
test("forst -> forst", function() {deepEqual( Stem("forst"), "forst");});
test("forstorad -> forstor", function() {deepEqual( Stem("forstorad"), "forstor");});
test("forsökte -> forsök", function() {deepEqual( Stem("forsökte"), "forsök");});
test("fort -> fort", function() {deepEqual( Stem("fort"), "fort");});
test("fortare -> fort", function() {deepEqual( Stem("fortare"), "fort");});
test("fortepianot -> fortepianot", function() {deepEqual( Stem("fortepianot"), "fortepianot");});
test("fortfar -> fortf", function() {deepEqual( Stem("fortfar"), "fortf");});
test("fortfara -> fortfar", function() {deepEqual( Stem("fortfara"), "fortfar");});
test("fortfarande -> fortfar", function() {deepEqual( Stem("fortfarande"), "fortfar");});
test("fortfarit -> fortfarit", function() {deepEqual( Stem("fortfarit"), "fortfarit");});
test("fortfor -> fortf", function() {deepEqual( Stem("fortfor"), "fortf");});
test("fortforo -> fortforo", function() {deepEqual( Stem("fortforo"), "fortforo");});
test("fortgick -> fortgick", function() {deepEqual( Stem("fortgick"), "fortgick");});
test("fortgång -> fortgång", function() {deepEqual( Stem("fortgång"), "fortgång");});
test("fortgången -> fortgång", function() {deepEqual( Stem("fortgången"), "fortgång");});
test("fortgått -> fortgåt", function() {deepEqual( Stem("fortgått"), "fortgåt");});
test("fortjust -> fortjust", function() {deepEqual( Stem("fortjust"), "fortjust");});
test("fortjänster -> fortjänst", function() {deepEqual( Stem("fortjänster"), "fortjänst");});
test("fortkomst -> fortkomst", function() {deepEqual( Stem("fortkomst"), "fortkomst");});
test("fortsatt -> fortsat", function() {deepEqual( Stem("fortsatt"), "fortsat");});
test("fortsatta -> fortsat", function() {deepEqual( Stem("fortsatta"), "fortsat");});
test("fortsatte -> fortsat", function() {deepEqual( Stem("fortsatte"), "fortsat");});
test("fortsattes -> fortsat", function() {deepEqual( Stem("fortsattes"), "fortsat");});
test("fortskaffningsmedlet -> fortskaffningsmedlet", function() {deepEqual( Stem("fortskaffningsmedlet"), "fortskaffningsmedlet");});
test("fortsätt -> fortsät", function() {deepEqual( Stem("fortsätt"), "fortsät");});
test("fortsätta -> fortsät", function() {deepEqual( Stem("fortsätta"), "fortsät");});
test("fortsättandet -> fortsät", function() {deepEqual( Stem("fortsättandet"), "fortsät");});
test("fortsätter -> fortsät", function() {deepEqual( Stem("fortsätter"), "fortsät");});
test("fortsättning -> fortsättning", function() {deepEqual( Stem("fortsättning"), "fortsättning");});
test("fortsättningen -> fortsättning", function() {deepEqual( Stem("fortsättningen"), "fortsättning");});
test("fortune -> fortun", function() {deepEqual( Stem("fortune"), "fortun");});
test("forum -> forum", function() {deepEqual( Stem("forum"), "forum");});
test("forut -> forut", function() {deepEqual( Stem("forut"), "forut");});
test("forvandla -> forvandl", function() {deepEqual( Stem("forvandla"), "forvandl");});
test("forvridna -> forvridn", function() {deepEqual( Stem("forvridna"), "forvridn");});
test("forälskad -> forälsk", function() {deepEqual( Stem("forälskad"), "forälsk");});
test("forändrade -> forändr", function() {deepEqual( Stem("forändrade"), "forändr");});
test("fosfat -> fosf", function() {deepEqual( Stem("fosfat"), "fosf");});
test("fosforism -> fosforism", function() {deepEqual( Stem("fosforism"), "fosforism");});
test("foster -> fost", function() {deepEqual( Stem("foster"), "fost");});
test("fosterbarn -> fosterbarn", function() {deepEqual( Stem("fosterbarn"), "fosterbarn");});
test("fosterdotter -> fosterdot", function() {deepEqual( Stem("fosterdotter"), "fosterdot");});
test("fosterdottern -> fosterdot", function() {deepEqual( Stem("fosterdottern"), "fosterdot");});
test("fosterfader -> fosterfad", function() {deepEqual( Stem("fosterfader"), "fosterfad");});
test("fosterfar -> fosterf", function() {deepEqual( Stem("fosterfar"), "fosterf");});
test("fosterland -> fosterland", function() {deepEqual( Stem("fosterland"), "fosterland");});
test("fosterlandet -> fosterl", function() {deepEqual( Stem("fosterlandet"), "fosterl");});
test("fosterlandets -> fosterlandet", function() {deepEqual( Stem("fosterlandets"), "fosterlandet");});
test("fosterlands -> fosterland", function() {deepEqual( Stem("fosterlands"), "fosterland");});
test("fosterlandsförräderi -> fosterlandsförräderi", function() {deepEqual( Stem("fosterlandsförräderi"), "fosterlandsförräderi");});
test("fosterlandsvän -> fosterlandsvän", function() {deepEqual( Stem("fosterlandsvän"), "fosterlandsvän");});
test("fosterländska -> fosterländsk", function() {deepEqual( Stem("fosterländska"), "fosterländsk");});
test("fostermodern -> fostermod", function() {deepEqual( Stem("fostermodern"), "fostermod");});
test("fostermor -> fosterm", function() {deepEqual( Stem("fostermor"), "fosterm");});
test("fostermors -> fostermor", function() {deepEqual( Stem("fostermors"), "fostermor");});
test("fostrade -> fostr", function() {deepEqual( Stem("fostrade"), "fostr");});
test("fostrat -> fostr", function() {deepEqual( Stem("fostrat"), "fostr");});
test("fostret -> fostret", function() {deepEqual( Stem("fostret"), "fostret");});
test("fot -> fot", function() {deepEqual( Stem("fot"), "fot");});
test("fotboll -> fotboll", function() {deepEqual( Stem("fotboll"), "fotboll");});
test("fotbollen -> fotboll", function() {deepEqual( Stem("fotbollen"), "fotboll");});
test("foten -> fot", function() {deepEqual( Stem("foten"), "fot");});
test("fotgängare -> fotgäng", function() {deepEqual( Stem("fotgängare"), "fotgäng");});
test("fotnot -> fotnot", function() {deepEqual( Stem("fotnot"), "fotnot");});
test("fotogen -> fotog", function() {deepEqual( Stem("fotogen"), "fotog");});
test("fotogenlampor -> fotogenlamp", function() {deepEqual( Stem("fotogenlampor"), "fotogenlamp");});
test("fotogenlukten -> fotogenluk", function() {deepEqual( Stem("fotogenlukten"), "fotogenluk");});
test("fotografi -> fotografi", function() {deepEqual( Stem("fotografi"), "fotografi");});
test("fotografier -> fotografi", function() {deepEqual( Stem("fotografier"), "fotografi");});
test("fotografiet -> fotografiet", function() {deepEqual( Stem("fotografiet"), "fotografiet");});
test("fotografin -> fotografin", function() {deepEqual( Stem("fotografin"), "fotografin");});
test("fotogratiet -> fotogratiet", function() {deepEqual( Stem("fotogratiet"), "fotogratiet");});
test("fotpar -> fotp", function() {deepEqual( Stem("fotpar"), "fotp");});
test("fots -> fot", function() {deepEqual( Stem("fots"), "fot");});
test("fotsbredd -> fotsbred", function() {deepEqual( Stem("fotsbredd"), "fotsbred");});
test("fotspar -> fotsp", function() {deepEqual( Stem("fotspar"), "fotsp");});
test("fotspår -> fotspår", function() {deepEqual( Stem("fotspår"), "fotspår");});
test("fotsteg -> fotsteg", function() {deepEqual( Stem("fotsteg"), "fotsteg");});
test("fotstegem -> fotstegem", function() {deepEqual( Stem("fotstegem"), "fotstegem");});
test("fotstegen -> fotsteg", function() {deepEqual( Stem("fotstegen"), "fotsteg");});
test("fotterna -> fott", function() {deepEqual( Stem("fotterna"), "fott");});
test("fotvandraren -> fotvandr", function() {deepEqual( Stem("fotvandraren"), "fotvandr");});
test("fou -> fou", function() {deepEqual( Stem("fou"), "fou");});
test("fra -> fra", function() {deepEqual( Stem("fra"), "fra");});
test("frack -> frack", function() {deepEqual( Stem("frack"), "frack");});
test("frackarna -> frack", function() {deepEqual( Stem("frackarna"), "frack");});
test("fracken -> frack", function() {deepEqual( Stem("fracken"), "frack");});
test("frackens -> frack", function() {deepEqual( Stem("frackens"), "frack");});
test("frackfason -> frackfason", function() {deepEqual( Stem("frackfason"), "frackfason");});
test("frackskörten -> frackskört", function() {deepEqual( Stem("frackskörten"), "frackskört");});
test("fradga -> fradg", function() {deepEqual( Stem("fradga"), "fradg");});
test("fradgande -> fradg", function() {deepEqual( Stem("fradgande"), "fradg");});
test("fraga -> frag", function() {deepEqual( Stem("fraga"), "frag");});
test("fragade -> frag", function() {deepEqual( Stem("fragade"), "frag");});
test("fragan -> fragan", function() {deepEqual( Stem("fragan"), "fragan");});
test("fragar -> frag", function() {deepEqual( Stem("fragar"), "frag");});
test("fragment -> fragment", function() {deepEqual( Stem("fragment"), "fragment");});
test("frall -> frall", function() {deepEqual( Stem("frall"), "frall");});
test("fralsta -> fralst", function() {deepEqual( Stem("fralsta"), "fralst");});
test("fram -> fram", function() {deepEqual( Stem("fram"), "fram");});
test("framat -> fram", function() {deepEqual( Stem("framat"), "fram");});
test("framatlutad -> framatlut", function() {deepEqual( Stem("framatlutad"), "framatlut");});
test("framblickade -> framblick", function() {deepEqual( Stem("framblickade"), "framblick");});
test("frambragt -> frambrag", function() {deepEqual( Stem("frambragt"), "frambrag");});
test("frambringa -> frambring", function() {deepEqual( Stem("frambringa"), "frambring");});
test("frambringar -> frambring", function() {deepEqual( Stem("frambringar"), "frambring");});
test("frambrytande -> frambryt", function() {deepEqual( Stem("frambrytande"), "frambryt");});
test("frambröt -> frambröt", function() {deepEqual( Stem("frambröt"), "frambröt");});
test("framburna -> framburn", function() {deepEqual( Stem("framburna"), "framburn");});
test("framdeles -> framdel", function() {deepEqual( Stem("framdeles"), "framdel");});
test("framdraga -> framdrag", function() {deepEqual( Stem("framdraga"), "framdrag");});
test("framdrog -> framdrog", function() {deepEqual( Stem("framdrog"), "framdrog");});
test("framdrogo -> framdrogo", function() {deepEqual( Stem("framdrogo"), "framdrogo");});
test("framdykande -> framdyk", function() {deepEqual( Stem("framdykande"), "framdyk");});
test("framemot -> framemot", function() {deepEqual( Stem("framemot"), "framemot");});
test("framfarna -> framf", function() {deepEqual( Stem("framfarna"), "framf");});
test("framfart -> framfart", function() {deepEqual( Stem("framfart"), "framfart");});
test("framfor -> framf", function() {deepEqual( Stem("framfor"), "framf");});
test("framfödandet -> framföd", function() {deepEqual( Stem("framfödandet"), "framföd");});
test("framför -> framför", function() {deepEqual( Stem("framför"), "framför");});
test("framföra -> framför", function() {deepEqual( Stem("framföra"), "framför");});
test("framförallt -> framförallt", function() {deepEqual( Stem("framförallt"), "framförallt");});
test("framförd -> framförd", function() {deepEqual( Stem("framförd"), "framförd");});
test("framförde -> framförd", function() {deepEqual( Stem("framförde"), "framförd");});
test("framgick -> framgick", function() {deepEqual( Stem("framgick"), "framgick");});
test("framgå -> framgå", function() {deepEqual( Stem("framgå"), "framgå");});
test("framgång -> framgång", function() {deepEqual( Stem("framgång"), "framgång");});
test("framgången -> framgång", function() {deepEqual( Stem("framgången"), "framgång");});
test("framgångsrike -> framgångsrik", function() {deepEqual( Stem("framgångsrike"), "framgångsrik");});
test("framhjulen -> framhjul", function() {deepEqual( Stem("framhjulen"), "framhjul");});
test("framhäva -> framhäv", function() {deepEqual( Stem("framhäva"), "framhäv");});
test("framila -> framil", function() {deepEqual( Stem("framila"), "framil");});
test("framkalla -> framkall", function() {deepEqual( Stem("framkalla"), "framkall");});
test("framkallade -> framkall", function() {deepEqual( Stem("framkallade"), "framkall");});
test("framkalladt -> framkallad", function() {deepEqual( Stem("framkalladt"), "framkallad");});
test("framkallat -> framkall", function() {deepEqual( Stem("framkallat"), "framkall");});
test("framkasta -> framkast", function() {deepEqual( Stem("framkasta"), "framkast");});
test("framkastad -> framkast", function() {deepEqual( Stem("framkastad"), "framkast");});
test("framkastade -> framkast", function() {deepEqual( Stem("framkastade"), "framkast");});
test("framkastat -> framkast", function() {deepEqual( Stem("framkastat"), "framkast");});
test("framkom -> framkom", function() {deepEqual( Stem("framkom"), "framkom");});
test("framkomma -> framkomm", function() {deepEqual( Stem("framkomma"), "framkomm");});
test("framkröp -> framkröp", function() {deepEqual( Stem("framkröp"), "framkröp");});
test("framlagd -> framlag", function() {deepEqual( Stem("framlagd"), "framlag");});
test("framlefva -> framlefv", function() {deepEqual( Stem("framlefva"), "framlefv");});
test("framleta -> framlet", function() {deepEqual( Stem("framleta"), "framlet");});
test("framleva -> framlev", function() {deepEqual( Stem("framleva"), "framlev");});
test("framlidne -> framlidn", function() {deepEqual( Stem("framlidne"), "framlidn");});
test("framling -> framling", function() {deepEqual( Stem("framling"), "framling");});
test("framlockat -> framlock", function() {deepEqual( Stem("framlockat"), "framlock");});
test("framlägga -> framlägg", function() {deepEqual( Stem("framlägga"), "framlägg");});
test("framman -> framman", function() {deepEqual( Stem("framman"), "framman");});
test("frammc -> frammc", function() {deepEqual( Stem("frammc"), "frammc");});
test("framme -> framm", function() {deepEqual( Stem("framme"), "framm");});
test("framom -> framom", function() {deepEqual( Stem("framom"), "framom");});
test("framplocka -> framplock", function() {deepEqual( Stem("framplocka"), "framplock");});
test("framplockade -> framplock", function() {deepEqual( Stem("framplockade"), "framplock");});
test("frampressade -> frampress", function() {deepEqual( Stem("frampressade"), "frampress");});
test("frampustade -> frampust", function() {deepEqual( Stem("frampustade"), "frampust");});
test("frampå -> frampå", function() {deepEqual( Stem("frampå"), "frampå");});
test("framropades -> framrop", function() {deepEqual( Stem("framropades"), "framrop");});
test("framrullade -> framrull", function() {deepEqual( Stem("framrullade"), "framrull");});
test("framräckt -> framräck", function() {deepEqual( Stem("framräckt"), "framräck");});
test("framsatt -> framsat", function() {deepEqual( Stem("framsatt"), "framsat");});
test("framsatta -> framsat", function() {deepEqual( Stem("framsatta"), "framsat");});
test("framsattes -> framsat", function() {deepEqual( Stem("framsattes"), "framsat");});
test("framsida -> framsid", function() {deepEqual( Stem("framsida"), "framsid");});
test("framskimrat -> framskimr", function() {deepEqual( Stem("framskimrat"), "framskimr");});
test("framskjuta -> framskjut", function() {deepEqual( Stem("framskjuta"), "framskjut");});
test("framskjuten -> framskjut", function() {deepEqual( Stem("framskjuten"), "framskjut");});
test("framskred -> framskred", function() {deepEqual( Stem("framskred"), "framskred");});
test("framskriden -> framskrid", function() {deepEqual( Stem("framskriden"), "framskrid");});
test("framskymta -> framskymt", function() {deepEqual( Stem("framskymta"), "framskymt");});
test("framskymtade -> framskymt", function() {deepEqual( Stem("framskymtade"), "framskymt");});
test("framsläpade -> framsläp", function() {deepEqual( Stem("framsläpade"), "framsläp");});
test("framsmyga -> framsmyg", function() {deepEqual( Stem("framsmyga"), "framsmyg");});
test("framsmögo -> framsmögo", function() {deepEqual( Stem("framsmögo"), "framsmögo");});
test("framstamma -> framstamm", function() {deepEqual( Stem("framstamma"), "framstamm");});
test("framstammade -> framstamm", function() {deepEqual( Stem("framstammade"), "framstamm");});
test("framsteg -> framsteg", function() {deepEqual( Stem("framsteg"), "framsteg");});
test("framstickande -> framstick", function() {deepEqual( Stem("framstickande"), "framstick");});
test("framsticker -> framstick", function() {deepEqual( Stem("framsticker"), "framstick");});
test("framstod -> framstod", function() {deepEqual( Stem("framstod"), "framstod");});
test("framsträckt -> framsträck", function() {deepEqual( Stem("framsträckt"), "framsträck");});
test("framstupa -> framstup", function() {deepEqual( Stem("framstupa"), "framstup");});
test("framstälda -> framstäld", function() {deepEqual( Stem("framstälda"), "framstäld");});
test("framstälde -> framstäld", function() {deepEqual( Stem("framstälde"), "framstäld");});
test("framställa -> framställ", function() {deepEqual( Stem("framställa"), "framställ");});
test("framställda -> framställd", function() {deepEqual( Stem("framställda"), "framställd");});
test("framställning -> framställning", function() {deepEqual( Stem("framställning"), "framställning");});
test("framställningar -> framställning", function() {deepEqual( Stem("framställningar"), "framställning");});
test("framställningen -> framställning", function() {deepEqual( Stem("framställningen"), "framställning");});
test("framställt -> framställt", function() {deepEqual( Stem("framställt"), "framställt");});
test("framstå -> framstå", function() {deepEqual( Stem("framstå"), "framstå");});
test("framstående -> framståend", function() {deepEqual( Stem("framstående"), "framståend");});
test("framstönat -> framstön", function() {deepEqual( Stem("framstönat"), "framstön");});
test("framsuckade -> framsuck", function() {deepEqual( Stem("framsuckade"), "framsuck");});
test("framt -> framt", function() {deepEqual( Stem("framt"), "framt");});
test("framtaga -> framtag", function() {deepEqual( Stem("framtaga"), "framtag");});
test("framtagit -> framtagit", function() {deepEqual( Stem("framtagit"), "framtagit");});
test("framtassarna -> framtass", function() {deepEqual( Stem("framtassarna"), "framtass");});
test("framtid -> framtid", function() {deepEqual( Stem("framtid"), "framtid");});
test("framtida -> framtid", function() {deepEqual( Stem("framtida"), "framtid");});
test("framtiden -> framtid", function() {deepEqual( Stem("framtiden"), "framtid");});
test("framtids -> framtid", function() {deepEqual( Stem("framtids"), "framtid");});
test("framtidsman -> framtidsman", function() {deepEqual( Stem("framtidsman"), "framtidsman");});
test("framtidsmän -> framtidsmän", function() {deepEqual( Stem("framtidsmän"), "framtidsmän");});
test("framtill -> framtill", function() {deepEqual( Stem("framtill"), "framtill");});
test("framtitta -> framtit", function() {deepEqual( Stem("framtitta"), "framtit");});
test("framtittar -> framtit", function() {deepEqual( Stem("framtittar"), "framtit");});
test("framtog -> framtog", function() {deepEqual( Stem("framtog"), "framtog");});
test("framtogs -> framtog", function() {deepEqual( Stem("framtogs"), "framtog");});
test("framträda -> framträd", function() {deepEqual( Stem("framträda"), "framträd");});
test("framträdande -> framträd", function() {deepEqual( Stem("framträdande"), "framträd");});
test("framträdde -> framträd", function() {deepEqual( Stem("framträdde"), "framträd");});
test("framtränga -> framträng", function() {deepEqual( Stem("framtränga"), "framträng");});
test("framträngde -> framträng", function() {deepEqual( Stem("framträngde"), "framträng");});
test("framträtt -> framträt", function() {deepEqual( Stem("framträtt"), "framträt");});
test("framtvinga -> framtving", function() {deepEqual( Stem("framtvinga"), "framtving");});
test("framviskade -> framvisk", function() {deepEqual( Stem("framviskade"), "framvisk");});
test("framviskat -> framvisk", function() {deepEqual( Stem("framviskat"), "framvisk");});
test("framvästes -> framväst", function() {deepEqual( Stem("framvästes"), "framväst");});
test("framät -> framät", function() {deepEqual( Stem("framät"), "framät");});
test("framåt -> framåt", function() {deepEqual( Stem("framåt"), "framåt");});
test("framåtandan -> framåtandan", function() {deepEqual( Stem("framåtandan"), "framåtandan");});
test("framåtböjd -> framåtböjd", function() {deepEqual( Stem("framåtböjd"), "framåtböjd");});
test("framåtböjt -> framåtböjt", function() {deepEqual( Stem("framåtböjt"), "framåtböjt");});
test("framåtlutad -> framåtlut", function() {deepEqual( Stem("framåtlutad"), "framåtlut");});
test("fran -> fran", function() {deepEqual( Stem("fran"), "fran");});
test("frankens -> frank", function() {deepEqual( Stem("frankens"), "frank");});
test("frankiska -> frankisk", function() {deepEqual( Stem("frankiska"), "frankisk");});
test("frans -> fran", function() {deepEqual( Stem("frans"), "fran");});
test("fransar -> frans", function() {deepEqual( Stem("fransar"), "frans");});
test("fransk -> fransk", function() {deepEqual( Stem("fransk"), "fransk");});
test("franska -> fransk", function() {deepEqual( Stem("franska"), "fransk");});
test("franskt -> fransk", function() {deepEqual( Stem("franskt"), "fransk");});
test("fransmännen -> fransmän", function() {deepEqual( Stem("fransmännen"), "fransmän");});
test("fransos -> franso", function() {deepEqual( Stem("fransos"), "franso");});
test("fransosen -> fransos", function() {deepEqual( Stem("fransosen"), "fransos");});
test("fransyska -> fransysk", function() {deepEqual( Stem("fransyska"), "fransysk");});
test("frants -> frant", function() {deepEqual( Stem("frants"), "frant");});
test("franzen -> franz", function() {deepEqual( Stem("franzen"), "franz");});
test("frapperad -> frapper", function() {deepEqual( Stem("frapperad"), "frapper");});
test("frapperade -> frapper", function() {deepEqual( Stem("frapperade"), "frapper");});
test("frarmfört -> frarmfört", function() {deepEqual( Stem("frarmfört"), "frarmfört");});
test("frasade -> fras", function() {deepEqual( Stem("frasade"), "fras");});
test("frasande -> fras", function() {deepEqual( Stem("frasande"), "fras");});
test("frasen -> fras", function() {deepEqual( Stem("frasen"), "fras");});
test("fraser -> fras", function() {deepEqual( Stem("fraser"), "fras");});
test("fred -> fred", function() {deepEqual( Stem("fred"), "fred");});
test("fredad -> fred", function() {deepEqual( Stem("fredad"), "fred");});
test("fredag -> fredag", function() {deepEqual( Stem("fredag"), "fredag");});
test("fredagen -> fredag", function() {deepEqual( Stem("fredagen"), "fredag");});
test("fredags -> fredag", function() {deepEqual( Stem("fredags"), "fredag");});
test("fredagsförmiddagen -> fredagsförmiddag", function() {deepEqual( Stem("fredagsförmiddagen"), "fredagsförmiddag");});
test("freden -> fred", function() {deepEqual( Stem("freden"), "fred");});
test("fredlig -> fred", function() {deepEqual( Stem("fredlig"), "fred");});
test("fredliga -> fred", function() {deepEqual( Stem("fredliga"), "fred");});
test("fredligare -> fred", function() {deepEqual( Stem("fredligare"), "fred");});
test("fredligt -> fred", function() {deepEqual( Stem("fredligt"), "fred");});
test("fredlösa -> fredlös", function() {deepEqual( Stem("fredlösa"), "fredlös");});
test("fredmans -> fredman", function() {deepEqual( Stem("fredmans"), "fredman");});
test("fredrik -> fredrik", function() {deepEqual( Stem("fredrik"), "fredrik");});
test("fredrika -> fredrik", function() {deepEqual( Stem("fredrika"), "fredrik");});
test("fredrikas -> fredrik", function() {deepEqual( Stem("fredrikas"), "fredrik");});
test("fredrikshalds -> fredrikshald", function() {deepEqual( Stem("fredrikshalds"), "fredrikshald");});
test("freds -> fred", function() {deepEqual( Stem("freds"), "fred");});
test("fredsgatan -> fredsgatan", function() {deepEqual( Stem("fredsgatan"), "fredsgatan");});
test("fredstraktat -> fredstrak", function() {deepEqual( Stem("fredstraktat"), "fredstrak");});
test("fresta -> frest", function() {deepEqual( Stem("fresta"), "frest");});
test("frestad -> frest", function() {deepEqual( Stem("frestad"), "frest");});
test("frestade -> frest", function() {deepEqual( Stem("frestade"), "frest");});
test("frestades -> frest", function() {deepEqual( Stem("frestades"), "frest");});
test("frestande -> frest", function() {deepEqual( Stem("frestande"), "frest");});
test("frestaren -> frest", function() {deepEqual( Stem("frestaren"), "frest");});
test("frestats -> frestat", function() {deepEqual( Stem("frestats"), "frestat");});
test("frestelse -> frest", function() {deepEqual( Stem("frestelse"), "frest");});
test("frestelsen -> frest", function() {deepEqual( Stem("frestelsen"), "frest");});
test("frestelsens -> frest", function() {deepEqual( Stem("frestelsens"), "frest");});
test("frestelser -> frest", function() {deepEqual( Stem("frestelser"), "frest");});
test("fri -> fri", function() {deepEqual( Stem("fri"), "fri");});
test("fria -> fria", function() {deepEqual( Stem("fria"), "fria");});
test("friad -> friad", function() {deepEqual( Stem("friad"), "friad");});
test("friade -> friad", function() {deepEqual( Stem("friade"), "friad");});
test("friar -> friar", function() {deepEqual( Stem("friar"), "friar");});
test("friardräkten -> friardräk", function() {deepEqual( Stem("friardräkten"), "friardräk");});
test("friare -> friar", function() {deepEqual( Stem("friare"), "friar");});
test("friarefärd -> friarefärd", function() {deepEqual( Stem("friarefärd"), "friarefärd");});
test("friaren -> friar", function() {deepEqual( Stem("friaren"), "friar");});
test("friarens -> friar", function() {deepEqual( Stem("friarens"), "friar");});
test("friareresa -> friareres", function() {deepEqual( Stem("friareresa"), "friareres");});
test("friareresan -> friareresan", function() {deepEqual( Stem("friareresan"), "friareresan");});
test("friares -> friar", function() {deepEqual( Stem("friares"), "friar");});
test("friareärenden -> friareärend", function() {deepEqual( Stem("friareärenden"), "friareärend");});
test("friareäventyr -> friareäventyr", function() {deepEqual( Stem("friareäventyr"), "friareäventyr");});
test("friat -> friat", function() {deepEqual( Stem("friat"), "friat");});
test("frid -> frid", function() {deepEqual( Stem("frid"), "frid");});
test("fridag -> fridag", function() {deepEqual( Stem("fridag"), "fridag");});
test("friden -> frid", function() {deepEqual( Stem("friden"), "frid");});
test("fridens -> frid", function() {deepEqual( Stem("fridens"), "frid");});
test("fridfu -> fridfu", function() {deepEqual( Stem("fridfu"), "fridfu");});
test("fridfulla -> fridfull", function() {deepEqual( Stem("fridfulla"), "fridfull");});
test("fridfullt -> fridfull", function() {deepEqual( Stem("fridfullt"), "fridfull");});
test("fridlyst -> fridlyst", function() {deepEqual( Stem("fridlyst"), "fridlyst");});
test("fridlysta -> fridlyst", function() {deepEqual( Stem("fridlysta"), "fridlyst");});
test("fridlös -> fridlös", function() {deepEqual( Stem("fridlös"), "fridlös");});
test("fridolin -> fridolin", function() {deepEqual( Stem("fridolin"), "fridolin");});
test("fridtjuv -> fridtjuv", function() {deepEqual( Stem("fridtjuv"), "fridtjuv");});
test("frieri -> frieri", function() {deepEqual( Stem("frieri"), "frieri");});
test("frieriet -> frieriet", function() {deepEqual( Stem("frieriet"), "frieriet");});
test("frieriets -> frieriet", function() {deepEqual( Stem("frieriets"), "frieriet");});
test("frieriterminen -> frieritermin", function() {deepEqual( Stem("frieriterminen"), "frieritermin");});
test("frigjord -> frigjord", function() {deepEqual( Stem("frigjord"), "frigjord");});
test("frigör -> frigör", function() {deepEqual( Stem("frigör"), "frigör");});
test("frigöra -> frigör", function() {deepEqual( Stem("frigöra"), "frigör");});
test("friherrinna -> friherrin", function() {deepEqual( Stem("friherrinna"), "friherrin");});
test("friherrinnan -> friherrinnan", function() {deepEqual( Stem("friherrinnan"), "friherrinnan");});
test("friherrinnans -> friherrinnan", function() {deepEqual( Stem("friherrinnans"), "friherrinnan");});
test("friherrinnor -> friherrin", function() {deepEqual( Stem("friherrinnor"), "friherrin");});
test("friherrlig -> friherr", function() {deepEqual( Stem("friherrlig"), "friherr");});
test("frihet -> frihet", function() {deepEqual( Stem("frihet"), "frihet");});
test("friheten -> frihet", function() {deepEqual( Stem("friheten"), "frihet");});
test("frikostig -> frikost", function() {deepEqual( Stem("frikostig"), "frikost");});
test("frikostighet -> frikost", function() {deepEqual( Stem("frikostighet"), "frikost");});
test("frikostigt -> frikost", function() {deepEqual( Stem("frikostigt"), "frikost");});
test("frikännande -> frikän", function() {deepEqual( Stem("frikännande"), "frikän");});
test("frileux -> frileux", function() {deepEqual( Stem("frileux"), "frileux");});
test("frillornas -> frill", function() {deepEqual( Stem("frillornas"), "frill");});
test("frimodig -> frimod", function() {deepEqual( Stem("frimodig"), "frimod");});
test("frimodighet -> frimod", function() {deepEqual( Stem("frimodighet"), "frimod");});
test("frimodigt -> frimod", function() {deepEqual( Stem("frimodigt"), "frimod");});
test("frimärkena -> frimärken", function() {deepEqual( Stem("frimärkena"), "frimärken");});
test("fripredikantens -> fripredikant", function() {deepEqual( Stem("fripredikantens"), "fripredikant");});
test("fris -> fris", function() {deepEqual( Stem("fris"), "fris");});
test("frisinnad -> frisin", function() {deepEqual( Stem("frisinnad"), "frisin");});
test("frisinnade -> frisin", function() {deepEqual( Stem("frisinnade"), "frisin");});
test("frisk -> frisk", function() {deepEqual( Stem("frisk"), "frisk");});
test("friska -> frisk", function() {deepEqual( Stem("friska"), "frisk");});
test("friskare -> frisk", function() {deepEqual( Stem("friskare"), "frisk");});
test("friskhet -> frisk", function() {deepEqual( Stem("friskhet"), "frisk");});
test("friskt -> frisk", function() {deepEqual( Stem("friskt"), "frisk");});
test("frispråkande -> frispråk", function() {deepEqual( Stem("frispråkande"), "frispråk");});
test("frisrocken -> frisrock", function() {deepEqual( Stem("frisrocken"), "frisrock");});
test("fristad -> frist", function() {deepEqual( Stem("fristad"), "frist");});
test("fristunder -> fristund", function() {deepEqual( Stem("fristunder"), "fristund");});
test("fritid -> fritid", function() {deepEqual( Stem("fritid"), "fritid");});
test("fritimmen -> fritimm", function() {deepEqual( Stem("fritimmen"), "fritimm");});
test("fritt -> fritt", function() {deepEqual( Stem("fritt"), "fritt");});
test("frivoliteter -> frivolitet", function() {deepEqual( Stem("frivoliteter"), "frivolitet");});
test("frivolt -> frivolt", function() {deepEqual( Stem("frivolt"), "frivolt");});
test("frkn -> frkn", function() {deepEqual( Stem("frkn"), "frkn");});
test("fro -> fro", function() {deepEqual( Stem("fro"), "fro");});
test("frodades -> frod", function() {deepEqual( Stem("frodades"), "frod");});
test("frodas -> frod", function() {deepEqual( Stem("frodas"), "frod");});
test("frodig -> frod", function() {deepEqual( Stem("frodig"), "frod");});
test("frojder -> frojd", function() {deepEqual( Stem("frojder"), "frojd");});
test("frokenhud -> frokenhud", function() {deepEqual( Stem("frokenhud"), "frokenhud");});
test("frokn -> frokn", function() {deepEqual( Stem("frokn"), "frokn");});
test("froknarna -> frokn", function() {deepEqual( Stem("froknarna"), "frokn");});
test("froknrrna -> froknrrn", function() {deepEqual( Stem("froknrrna"), "froknrrn");});
test("from -> from", function() {deepEqual( Stem("from"), "from");});
test("fromhet -> from", function() {deepEqual( Stem("fromhet"), "from");});
test("fromma -> fromm", function() {deepEqual( Stem("fromma"), "fromm");});
test("fromme -> fromm", function() {deepEqual( Stem("fromme"), "fromm");});
test("fromsinnlig -> fromsinn", function() {deepEqual( Stem("fromsinnlig"), "fromsinn");});
test("fromt -> fromt", function() {deepEqual( Stem("fromt"), "fromt");});
test("frontespisen -> frontespis", function() {deepEqual( Stem("frontespisen"), "frontespis");});
test("fross -> fross", function() {deepEqual( Stem("fross"), "fross");});
test("frossa -> fross", function() {deepEqual( Stem("frossa"), "fross");});
test("frossade -> fross", function() {deepEqual( Stem("frossade"), "fross");});
test("frossbrytningar -> frossbrytning", function() {deepEqual( Stem("frossbrytningar"), "frossbrytning");});
test("frost -> frost", function() {deepEqual( Stem("frost"), "frost");});
test("frosten -> frost", function() {deepEqual( Stem("frosten"), "frost");});
test("frostiga -> frost", function() {deepEqual( Stem("frostiga"), "frost");});
test("frostnatt -> frostnat", function() {deepEqual( Stem("frostnatt"), "frostnat");});
test("frot -> frot", function() {deepEqual( Stem("frot"), "frot");});
test("frrb -> frrb", function() {deepEqual( Stem("frrb"), "frrb");});
test("frsknarr -> frsknarr", function() {deepEqual( Stem("frsknarr"), "frsknarr");});
test("fru -> fru", function() {deepEqual( Stem("fru"), "fru");});
test("fruar -> fruar", function() {deepEqual( Stem("fruar"), "fruar");});
test("fruarna -> fruarn", function() {deepEqual( Stem("fruarna"), "fruarn");});
test("fruarnas -> fruarn", function() {deepEqual( Stem("fruarnas"), "fruarn");});
test("frukost -> frukost", function() {deepEqual( Stem("frukost"), "frukost");});
test("frukostbordet -> frukostbordet", function() {deepEqual( Stem("frukostbordet"), "frukostbordet");});
test("frukosten -> frukost", function() {deepEqual( Stem("frukosten"), "frukost");});
test("frukostera -> frukoster", function() {deepEqual( Stem("frukostera"), "frukoster");});
test("frukostlovet -> frukostlovet", function() {deepEqual( Stem("frukostlovet"), "frukostlovet");});
test("frukostrast -> frukostr", function() {deepEqual( Stem("frukostrast"), "frukostr");});
test("frukt -> frukt", function() {deepEqual( Stem("frukt"), "frukt");});
test("frukta -> frukt", function() {deepEqual( Stem("frukta"), "frukt");});
test("fruktad -> frukt", function() {deepEqual( Stem("fruktad"), "frukt");});
test("fruktade -> frukt", function() {deepEqual( Stem("fruktade"), "frukt");});
test("fruktan -> fruktan", function() {deepEqual( Stem("fruktan"), "fruktan");});
test("fruktande -> frukt", function() {deepEqual( Stem("fruktande"), "frukt");});
test("fruktans -> fruktan", function() {deepEqual( Stem("fruktans"), "fruktan");});
test("fruktansvärd -> fruktansvärd", function() {deepEqual( Stem("fruktansvärd"), "fruktansvärd");});
test("fruktansvärda -> fruktansvärd", function() {deepEqual( Stem("fruktansvärda"), "fruktansvärd");});
test("fruktansvärdt -> fruktansvärd", function() {deepEqual( Stem("fruktansvärdt"), "fruktansvärd");});
test("fruktansvärt -> fruktansvärt", function() {deepEqual( Stem("fruktansvärt"), "fruktansvärt");});
test("fruktar -> frukt", function() {deepEqual( Stem("fruktar"), "frukt");});
test("fruktat -> frukt", function() {deepEqual( Stem("fruktat"), "frukt");});
test("frukten -> frukt", function() {deepEqual( Stem("frukten"), "frukt");});
test("frukter -> frukt", function() {deepEqual( Stem("frukter"), "frukt");});
test("frukterna -> frukt", function() {deepEqual( Stem("frukterna"), "frukt");});
test("frukters -> frukter", function() {deepEqual( Stem("frukters"), "frukter");});
test("fruktgirlanger -> fruktgirlang", function() {deepEqual( Stem("fruktgirlanger"), "fruktgirlang");});
test("fruktkorg -> fruktkorg", function() {deepEqual( Stem("fruktkorg"), "fruktkorg");});
test("fruktlösa -> fruktlös", function() {deepEqual( Stem("fruktlösa"), "fruktlös");});
test("fruktlösare -> fruktlös", function() {deepEqual( Stem("fruktlösare"), "fruktlös");});
test("fruktlösheten -> fruktlös", function() {deepEqual( Stem("fruktlösheten"), "fruktlös");});
test("fruktlöst -> fruktlös", function() {deepEqual( Stem("fruktlöst"), "fruktlös");});
test("frun -> frun", function() {deepEqual( Stem("frun"), "frun");});
test("fruns -> frun", function() {deepEqual( Stem("fruns"), "frun");});
test("fruntimmer -> fruntimm", function() {deepEqual( Stem("fruntimmer"), "fruntimm");});
test("fruntimmershand -> fruntimmershand", function() {deepEqual( Stem("fruntimmershand"), "fruntimmershand");});
test("fruntimmershattarna -> fruntimmershat", function() {deepEqual( Stem("fruntimmershattarna"), "fruntimmershat");});
test("fruntimmershistorier -> fruntimmershistori", function() {deepEqual( Stem("fruntimmershistorier"), "fruntimmershistori");});
test("fruntimmerskappa -> fruntimmerskapp", function() {deepEqual( Stem("fruntimmerskappa"), "fruntimmerskapp");});
test("fruntimmerskjortel -> fruntimmerskjortel", function() {deepEqual( Stem("fruntimmerskjortel"), "fruntimmerskjortel");});
test("fruntimmersröst -> fruntimmersröst", function() {deepEqual( Stem("fruntimmersröst"), "fruntimmersröst");});
test("fruntimren -> fruntimr", function() {deepEqual( Stem("fruntimren"), "fruntimr");});
test("fruntimrens -> fruntimr", function() {deepEqual( Stem("fruntimrens"), "fruntimr");});
test("fruntimret -> fruntimret", function() {deepEqual( Stem("fruntimret"), "fruntimret");});
test("frus -> frus", function() {deepEqual( Stem("frus"), "frus");});
test("frusen -> frus", function() {deepEqual( Stem("frusen"), "frus");});
test("fruset -> fruset", function() {deepEqual( Stem("fruset"), "fruset");});
test("frusit -> frusit", function() {deepEqual( Stem("frusit"), "frusit");});
test("frusna -> frusn", function() {deepEqual( Stem("frusna"), "frusn");});
test("frustade -> frust", function() {deepEqual( Stem("frustade"), "frust");});
test("frustande -> frust", function() {deepEqual( Stem("frustande"), "frust");});
test("frustar -> frust", function() {deepEqual( Stem("frustar"), "frust");});
test("frustulammen -> frustulamm", function() {deepEqual( Stem("frustulammen"), "frustulamm");});
test("frynt -> frynt", function() {deepEqual( Stem("frynt"), "frynt");});
test("fryntlig -> frynt", function() {deepEqual( Stem("fryntlig"), "frynt");});
test("fryntlighet -> frynt", function() {deepEqual( Stem("fryntlighet"), "frynt");});
test("fryntligt -> frynt", function() {deepEqual( Stem("fryntligt"), "frynt");});
test("fryntligtvädran -> fryntligtvädran", function() {deepEqual( Stem("fryntligtvädran"), "fryntligtvädran");});
test("frysa -> frys", function() {deepEqual( Stem("frysa"), "frys");});
test("frysande -> frys", function() {deepEqual( Stem("frysande"), "frys");});
test("fryser -> frys", function() {deepEqual( Stem("fryser"), "frys");});
test("frysning -> frysning", function() {deepEqual( Stem("frysning"), "frysning");});
test("fräcka -> fräck", function() {deepEqual( Stem("fräcka"), "fräck");});
test("fräckare -> fräck", function() {deepEqual( Stem("fräckare"), "fräck");});
test("fräcke -> fräck", function() {deepEqual( Stem("fräcke"), "fräck");});
test("fräckhet -> fräck", function() {deepEqual( Stem("fräckhet"), "fräck");});
test("fräckheten -> fräck", function() {deepEqual( Stem("fräckheten"), "fräck");});
test("fräckt -> fräck", function() {deepEqual( Stem("fräckt"), "fräck");});
test("fräknig -> fräkn", function() {deepEqual( Stem("fräknig"), "fräkn");});
test("fräls -> fräl", function() {deepEqual( Stem("fräls"), "fräl");});
test("frälsa -> fräls", function() {deepEqual( Stem("frälsa"), "fräls");});
test("frälsare -> fräls", function() {deepEqual( Stem("frälsare"), "fräls");});
test("frälsares -> frälsar", function() {deepEqual( Stem("frälsares"), "frälsar");});
test("frälsets -> frälset", function() {deepEqual( Stem("frälsets"), "frälset");});
test("frälsning -> frälsning", function() {deepEqual( Stem("frälsning"), "frälsning");});
test("frälsningsarmen -> frälsningsarm", function() {deepEqual( Stem("frälsningsarmen"), "frälsningsarm");});
test("frälsningskrokan -> frälsningskrokan", function() {deepEqual( Stem("frälsningskrokan"), "frälsningskrokan");});
test("frälsningsmöte -> frälsningsmöt", function() {deepEqual( Stem("frälsningsmöte"), "frälsningsmöt");});
test("frälsningssoldat -> frälsningssold", function() {deepEqual( Stem("frälsningssoldat"), "frälsningssold");});
test("frälsningssoldater -> frälsningssoldat", function() {deepEqual( Stem("frälsningssoldater"), "frälsningssoldat");});
test("frälsningssoldaterna -> frälsningssoldat", function() {deepEqual( Stem("frälsningssoldaterna"), "frälsningssoldat");});
test("frälsningssoldaternas -> frälsningssoldat", function() {deepEqual( Stem("frälsningssoldaternas"), "frälsningssoldat");});
test("frälst -> frälst", function() {deepEqual( Stem("frälst"), "frälst");});
test("frälsta -> frälst", function() {deepEqual( Stem("frälsta"), "frälst");});
test("främ -> främ", function() {deepEqual( Stem("främ"), "främ");});
test("främja -> främj", function() {deepEqual( Stem("främja"), "främj");});
test("främjandet -> främj", function() {deepEqual( Stem("främjandet"), "främj");});
test("främling -> främling", function() {deepEqual( Stem("främling"), "främling");});
test("främlingar -> främling", function() {deepEqual( Stem("främlingar"), "främling");});
test("främlingen -> främling", function() {deepEqual( Stem("främlingen"), "främling");});
test("främlings -> främling", function() {deepEqual( Stem("främlings"), "främling");});
test("främmand -> främmand", function() {deepEqual( Stem("främmand"), "främmand");});
test("främmandc -> främmandc", function() {deepEqual( Stem("främmandc"), "främmandc");});
test("främmande -> främm", function() {deepEqual( Stem("främmande"), "främm");});
test("främst -> främst", function() {deepEqual( Stem("främst"), "främst");});
test("främsta -> främst", function() {deepEqual( Stem("främsta"), "främst");});
test("frän -> frän", function() {deepEqual( Stem("frän"), "frän");});
test("fräna -> frän", function() {deepEqual( Stem("fräna"), "frän");});
test("frände -> fränd", function() {deepEqual( Stem("frände"), "fränd");});
test("fränder -> fränd", function() {deepEqual( Stem("fränder"), "fränd");});
test("fränders -> fränder", function() {deepEqual( Stem("fränders"), "fränder");});
test("fränt -> fränt", function() {deepEqual( Stem("fränt"), "fränt");});
test("fräsa -> fräs", function() {deepEqual( Stem("fräsa"), "fräs");});
test("fräsande -> fräs", function() {deepEqual( Stem("fräsande"), "fräs");});
test("fräste -> fräst", function() {deepEqual( Stem("fräste"), "fräst");});
test("fräta -> frät", function() {deepEqual( Stem("fräta"), "frät");});
test("frätande -> frät", function() {deepEqual( Stem("frätande"), "frät");});
test("fräter -> frät", function() {deepEqual( Stem("fräter"), "frät");});
test("frätte -> frätt", function() {deepEqual( Stem("frätte"), "frätt");});
test("fråga -> fråg", function() {deepEqual( Stem("fråga"), "fråg");});
test("frågad -> fråg", function() {deepEqual( Stem("frågad"), "fråg");});
test("frågade -> fråg", function() {deepEqual( Stem("frågade"), "fråg");});
test("frågan -> frågan", function() {deepEqual( Stem("frågan"), "frågan");});
test("frågande -> fråg", function() {deepEqual( Stem("frågande"), "fråg");});
test("frågans -> frågan", function() {deepEqual( Stem("frågans"), "frågan");});
test("frågar -> fråg", function() {deepEqual( Stem("frågar"), "fråg");});
test("frågas -> fråg", function() {deepEqual( Stem("frågas"), "fråg");});
test("frågat -> fråg", function() {deepEqual( Stem("frågat"), "fråg");});
test("frågetecken -> frågeteck", function() {deepEqual( Stem("frågetecken"), "frågeteck");});
test("frågor -> fråg", function() {deepEqual( Stem("frågor"), "fråg");});
test("frågtecken -> frågteck", function() {deepEqual( Stem("frågtecken"), "frågteck");});
test("från -> från", function() {deepEqual( Stem("från"), "från");});
test("fråndragen -> fråndrag", function() {deepEqual( Stem("fråndragen"), "fråndrag");});
test("frångå -> frångå", function() {deepEqual( Stem("frångå"), "frångå");});
test("frångår -> frångår", function() {deepEqual( Stem("frångår"), "frångår");});
test("frånskilda -> frånskild", function() {deepEqual( Stem("frånskilda"), "frånskild");});
test("frånskilt -> frånskilt", function() {deepEqual( Stem("frånskilt"), "frånskilt");});
test("frånskjutit -> frånskjutit", function() {deepEqual( Stem("frånskjutit"), "frånskjutit");});
test("frånsköts -> frånsköt", function() {deepEqual( Stem("frånsköts"), "frånsköt");});
test("frånstötande -> frånstöt", function() {deepEqual( Stem("frånstötande"), "frånstöt");});
test("frånsäger -> frånsäg", function() {deepEqual( Stem("frånsäger"), "frånsäg");});
test("fråntaga -> fråntag", function() {deepEqual( Stem("fråntaga"), "fråntag");});
test("fråntagas -> fråntag", function() {deepEqual( Stem("fråntagas"), "fråntag");});
test("fråntager -> fråntag", function() {deepEqual( Stem("fråntager"), "fråntag");});
test("frånträda -> frånträd", function() {deepEqual( Stem("frånträda"), "frånträd");});
test("frånvarande -> frånvar", function() {deepEqual( Stem("frånvarande"), "frånvar");});
test("frånvaro -> frånvaro", function() {deepEqual( Stem("frånvaro"), "frånvaro");});
test("frånvaron -> frånvaron", function() {deepEqual( Stem("frånvaron"), "frånvaron");});
test("frö -> frö", function() {deepEqual( Stem("frö"), "frö");});
test("fröding -> fröding", function() {deepEqual( Stem("fröding"), "fröding");});
test("fröet -> fröet", function() {deepEqual( Stem("fröet"), "fröet");});
test("fröja -> fröj", function() {deepEqual( Stem("fröja"), "fröj");});
test("fröjd -> fröjd", function() {deepEqual( Stem("fröjd"), "fröjd");});
test("fröjda -> fröjd", function() {deepEqual( Stem("fröjda"), "fröjd");});
test("fröjdade -> fröjd", function() {deepEqual( Stem("fröjdade"), "fröjd");});
test("fröjdades -> fröjd", function() {deepEqual( Stem("fröjdades"), "fröjd");});
test("fröjdas -> fröjd", function() {deepEqual( Stem("fröjdas"), "fröjd");});
test("fröjde -> fröjd", function() {deepEqual( Stem("fröjde"), "fröjd");});
test("fröjdefulla -> fröjdefull", function() {deepEqual( Stem("fröjdefulla"), "fröjdefull");});
test("fröjdeljud -> fröjdeljud", function() {deepEqual( Stem("fröjdeljud"), "fröjdeljud");});
test("fröjden -> fröjd", function() {deepEqual( Stem("fröjden"), "fröjd");});
test("fröjder -> fröjd", function() {deepEqual( Stem("fröjder"), "fröjd");});
test("fröjdesalen -> fröjdesal", function() {deepEqual( Stem("fröjdesalen"), "fröjdesal");});
test("fröjdeämnen -> fröjdeämn", function() {deepEqual( Stem("fröjdeämnen"), "fröjdeämn");});
test("fröjdfull -> fröjdfull", function() {deepEqual( Stem("fröjdfull"), "fröjdfull");});
test("fröjds -> fröjd", function() {deepEqual( Stem("fröjds"), "fröjd");});
test("fröken -> frök", function() {deepEqual( Stem("fröken"), "frök");});
test("frökens -> frök", function() {deepEqual( Stem("frökens"), "frök");});
test("frökn -> frökn", function() {deepEqual( Stem("frökn"), "frökn");});
test("fröknar -> frökn", function() {deepEqual( Stem("fröknar"), "frökn");});
test("fröknarn -> fröknarn", function() {deepEqual( Stem("fröknarn"), "fröknarn");});
test("fröknarna -> frökn", function() {deepEqual( Stem("fröknarna"), "frökn");});
test("fröknarnas -> frökn", function() {deepEqual( Stem("fröknarnas"), "frökn");});
test("fröknarnn -> fröknarn", function() {deepEqual( Stem("fröknarnn"), "fröknarn");});
test("fröknarno -> fröknarno", function() {deepEqual( Stem("fröknarno"), "fröknarno");});
test("fröknartl -> fröknartl", function() {deepEqual( Stem("fröknartl"), "fröknartl");});
test("frömjölet -> frömjölet", function() {deepEqual( Stem("frömjölet"), "frömjölet");});
test("frön -> frön", function() {deepEqual( Stem("frön"), "frön");});
test("fröna -> frön", function() {deepEqual( Stem("fröna"), "frön");});
test("frös -> frös", function() {deepEqual( Stem("frös"), "frös");});
test("fröso -> fröso", function() {deepEqual( Stem("fröso"), "fröso");});
test("fsrstås -> fsrstås", function() {deepEqual( Stem("fsrstås"), "fsrstås");});
test("fter -> fter", function() {deepEqual( Stem("fter"), "fter");});
test("fugaartade -> fugaart", function() {deepEqual( Stem("fugaartade"), "fugaart");});
test("fukt -> fukt", function() {deepEqual( Stem("fukt"), "fukt");});
test("fukta -> fukt", function() {deepEqual( Stem("fukta"), "fukt");});
test("fuktade -> fukt", function() {deepEqual( Stem("fuktade"), "fukt");});
test("fuktades -> fukt", function() {deepEqual( Stem("fuktades"), "fukt");});
test("fuktas -> fukt", function() {deepEqual( Stem("fuktas"), "fukt");});
test("fuktfläckar -> fuktfläck", function() {deepEqual( Stem("fuktfläckar"), "fuktfläck");});
test("fuktig -> fukt", function() {deepEqual( Stem("fuktig"), "fukt");});
test("fuktiga -> fukt", function() {deepEqual( Stem("fuktiga"), "fukt");});
test("fuktigt -> fukt", function() {deepEqual( Stem("fuktigt"), "fukt");});
test("ful -> ful", function() {deepEqual( Stem("ful"), "ful");});
test("fula -> ful", function() {deepEqual( Stem("fula"), "ful");});
test("fulare -> ful", function() {deepEqual( Stem("fulare"), "ful");});
test("fulaste -> ful", function() {deepEqual( Stem("fulaste"), "ful");});
test("fulhet -> ful", function() {deepEqual( Stem("fulhet"), "ful");});
test("full -> full", function() {deepEqual( Stem("full"), "full");});
test("fulla -> full", function() {deepEqual( Stem("fulla"), "full");});
test("fullare -> full", function() {deepEqual( Stem("fullare"), "full");});
test("fullastad -> fullast", function() {deepEqual( Stem("fullastad"), "fullast");});
test("fullaste -> full", function() {deepEqual( Stem("fullaste"), "full");});
test("fullblod -> fullblod", function() {deepEqual( Stem("fullblod"), "fullblod");});
test("fullborda -> fullbord", function() {deepEqual( Stem("fullborda"), "fullbord");});
test("fullbordad -> fullbord", function() {deepEqual( Stem("fullbordad"), "fullbord");});
test("fullbordade -> fullbord", function() {deepEqual( Stem("fullbordade"), "fullbord");});
test("fullbordan -> fullbordan", function() {deepEqual( Stem("fullbordan"), "fullbordan");});
test("fullbordat -> fullbord", function() {deepEqual( Stem("fullbordat"), "fullbord");});
test("fullfölja -> fullfölj", function() {deepEqual( Stem("fullfölja"), "fullfölj");});
test("fullgjort -> fullgjort", function() {deepEqual( Stem("fullgjort"), "fullgjort");});
test("fullgör -> fullgör", function() {deepEqual( Stem("fullgör"), "fullgör");});
test("fullklottrade -> fullklottr", function() {deepEqual( Stem("fullklottrade"), "fullklottr");});
test("fullkomlig -> fullkom", function() {deepEqual( Stem("fullkomlig"), "fullkom");});
test("fullkomliga -> fullkom", function() {deepEqual( Stem("fullkomliga"), "fullkom");});
test("fullkomligaste -> fullkom", function() {deepEqual( Stem("fullkomligaste"), "fullkom");});
test("fullkomligen -> fullkom", function() {deepEqual( Stem("fullkomligen"), "fullkom");});
test("fullkomligheten -> fullkom", function() {deepEqual( Stem("fullkomligheten"), "fullkom");});
test("fullkomligt -> fullkom", function() {deepEqual( Stem("fullkomligt"), "fullkom");});
test("fullkomnade -> fullkomn", function() {deepEqual( Stem("fullkomnade"), "fullkomn");});
test("fullmånens -> fullmån", function() {deepEqual( Stem("fullmånens"), "fullmån");});
test("fullsatt -> fullsat", function() {deepEqual( Stem("fullsatt"), "fullsat");});
test("fullsatta -> fullsat", function() {deepEqual( Stem("fullsatta"), "fullsat");});
test("fullskrivet -> fullskrivet", function() {deepEqual( Stem("fullskrivet"), "fullskrivet");});
test("fullständig -> fullständ", function() {deepEqual( Stem("fullständig"), "fullständ");});
test("fullständigt -> fullständ", function() {deepEqual( Stem("fullständigt"), "fullständ");});
test("fullt -> fullt", function() {deepEqual( Stem("fullt"), "fullt");});
test("fullvuxen -> fullvux", function() {deepEqual( Stem("fullvuxen"), "fullvux");});
test("fulländad -> fulländ", function() {deepEqual( Stem("fulländad"), "fulländ");});
test("fulländade -> fulländ", function() {deepEqual( Stem("fulländade"), "fulländ");});
test("fult -> fult", function() {deepEqual( Stem("fult"), "fult");});
test("fulton -> fulton", function() {deepEqual( Stem("fulton"), "fulton");});
test("fumlade -> fuml", function() {deepEqual( Stem("fumlade"), "fuml");});
test("fumlig -> fum", function() {deepEqual( Stem("fumlig"), "fum");});
test("fumliga -> fum", function() {deepEqual( Stem("fumliga"), "fum");});
test("fun -> fun", function() {deepEqual( Stem("fun"), "fun");});
test("fund -> fund", function() {deepEqual( Stem("fund"), "fund");});
test("funde -> fund", function() {deepEqual( Stem("funde"), "fund");});
test("fundera -> funder", function() {deepEqual( Stem("fundera"), "funder");});
test("funderadc -> funderadc", function() {deepEqual( Stem("funderadc"), "funderadc");});
test("funderade -> funder", function() {deepEqual( Stem("funderade"), "funder");});
test("funderande -> funder", function() {deepEqual( Stem("funderande"), "funder");});
test("funderar -> funder", function() {deepEqual( Stem("funderar"), "funder");});
test("funderat -> funder", function() {deepEqual( Stem("funderat"), "funder");});
test("funderingar -> fundering", function() {deepEqual( Stem("funderingar"), "fundering");});
test("funderingarna -> fundering", function() {deepEqual( Stem("funderingarna"), "fundering");});
test("funderiugar -> funderiug", function() {deepEqual( Stem("funderiugar"), "funderiug");});
test("fundersamt -> fundersamt", function() {deepEqual( Stem("fundersamt"), "fundersamt");});
test("fungerande -> funger", function() {deepEqual( Stem("fungerande"), "funger");});
test("funktioner -> funktion", function() {deepEqual( Stem("funktioner"), "funktion");});
test("funna -> funn", function() {deepEqual( Stem("funna"), "funn");});
test("funnen -> funn", function() {deepEqual( Stem("funnen"), "funn");});
test("funnes -> funn", function() {deepEqual( Stem("funnes"), "funn");});
test("funnit -> funnit", function() {deepEqual( Stem("funnit"), "funnit");});
test("funnits -> funnit", function() {deepEqual( Stem("funnits"), "funnit");});
test("funno -> funno", function() {deepEqual( Stem("funno"), "funno");});
test("funnos -> funno", function() {deepEqual( Stem("funnos"), "funno");});
test("funster -> funst", function() {deepEqual( Stem("funster"), "funst");});
test("furan -> furan", function() {deepEqual( Stem("furan"), "furan");});
test("furie -> furi", function() {deepEqual( Stem("furie"), "furi");});
test("furielika -> furielik", function() {deepEqual( Stem("furielika"), "furielik");});
test("furore -> furor", function() {deepEqual( Stem("furore"), "furor");});
test("furorna -> fur", function() {deepEqual( Stem("furorna"), "fur");});
test("furstar -> furst", function() {deepEqual( Stem("furstar"), "furst");});
test("furste -> furst", function() {deepEqual( Stem("furste"), "furst");});
test("furstes -> furst", function() {deepEqual( Stem("furstes"), "furst");});
test("furstliga -> furst", function() {deepEqual( Stem("furstliga"), "furst");});
test("furstligt -> furst", function() {deepEqual( Stem("furstligt"), "furst");});
test("furu -> furu", function() {deepEqual( Stem("furu"), "furu");});
test("furupinnar -> furupin", function() {deepEqual( Stem("furupinnar"), "furupin");});
test("fusk -> fusk", function() {deepEqual( Stem("fusk"), "fusk");});
test("fuska -> fusk", function() {deepEqual( Stem("fuska"), "fusk");});
test("fuskade -> fusk", function() {deepEqual( Stem("fuskade"), "fusk");});
test("fuskar -> fusk", function() {deepEqual( Stem("fuskar"), "fusk");});
test("fusket -> fusket", function() {deepEqual( Stem("fusket"), "fusket");});
test("futtig -> futt", function() {deepEqual( Stem("futtig"), "futt");});
test("futtiga -> futt", function() {deepEqual( Stem("futtiga"), "futt");});
test("futtigt -> futt", function() {deepEqual( Stem("futtigt"), "futt");});
test("fy -> fy", function() {deepEqual( Stem("fy"), "fy");});
test("fyld -> fyld", function() {deepEqual( Stem("fyld"), "fyld");});
test("fylda -> fyld", function() {deepEqual( Stem("fylda"), "fyld");});
test("fylde -> fyld", function() {deepEqual( Stem("fylde"), "fyld");});
test("fylgia -> fylgi", function() {deepEqual( Stem("fylgia"), "fylgi");});
test("fylla -> fyll", function() {deepEqual( Stem("fylla"), "fyll");});
test("fyllandet -> fyll", function() {deepEqual( Stem("fyllandet"), "fyll");});
test("fyllas -> fyll", function() {deepEqual( Stem("fyllas"), "fyll");});
test("fylld -> fylld", function() {deepEqual( Stem("fylld"), "fylld");});
test("fyllda -> fylld", function() {deepEqual( Stem("fyllda"), "fylld");});
test("fyllde -> fylld", function() {deepEqual( Stem("fyllde"), "fylld");});
test("fylldes -> fylld", function() {deepEqual( Stem("fylldes"), "fylld");});
test("fyller -> fyll", function() {deepEqual( Stem("fyller"), "fyll");});
test("fylleriet -> fylleriet", function() {deepEqual( Stem("fylleriet"), "fylleriet");});
test("fylles -> fyll", function() {deepEqual( Stem("fylles"), "fyll");});
test("fyllig -> fyl", function() {deepEqual( Stem("fyllig"), "fyl");});
test("fylliga -> fyl", function() {deepEqual( Stem("fylliga"), "fyl");});
test("fylligare -> fyl", function() {deepEqual( Stem("fylligare"), "fyl");});
test("fyllighet -> fyl", function() {deepEqual( Stem("fyllighet"), "fyl");});
test("fylligt -> fyl", function() {deepEqual( Stem("fylligt"), "fyl");});
test("fyllt -> fyllt", function() {deepEqual( Stem("fyllt"), "fyllt");});
test("fylt -> fylt", function() {deepEqual( Stem("fylt"), "fylt");});
test("fynd -> fynd", function() {deepEqual( Stem("fynd"), "fynd");});
test("fyndet -> fyndet", function() {deepEqual( Stem("fyndet"), "fyndet");});
test("fyndig -> fynd", function() {deepEqual( Stem("fyndig"), "fynd");});
test("fyr -> fyr", function() {deepEqual( Stem("fyr"), "fyr");});
test("fyra -> fyr", function() {deepEqual( Stem("fyra"), "fyr");});
test("fyratiden -> fyratid", function() {deepEqual( Stem("fyratiden"), "fyratid");});
test("fyratusen -> fyratus", function() {deepEqual( Stem("fyratusen"), "fyratus");});
test("fyrfotingar -> fyrfoting", function() {deepEqual( Stem("fyrfotingar"), "fyrfoting");});
test("fyrkanter -> fyrkant", function() {deepEqual( Stem("fyrkanter"), "fyrkant");});
test("fyrkantig -> fyrkant", function() {deepEqual( Stem("fyrkantig"), "fyrkant");});
test("fyrkantigt -> fyrkant", function() {deepEqual( Stem("fyrkantigt"), "fyrkant");});
test("fyrkar -> fyrk", function() {deepEqual( Stem("fyrkar"), "fyrk");});
test("fyrsprång -> fyrsprång", function() {deepEqual( Stem("fyrsprång"), "fyrsprång");});
test("fyrstolpig -> fyrstolp", function() {deepEqual( Stem("fyrstolpig"), "fyrstolp");});
test("fyrtio -> fyrtio", function() {deepEqual( Stem("fyrtio"), "fyrtio");});
test("fyrtiofem -> fyrtiofem", function() {deepEqual( Stem("fyrtiofem"), "fyrtiofem");});
test("fyrverk -> fyrverk", function() {deepEqual( Stem("fyrverk"), "fyrverk");});
test("fyrväldigt -> fyrväld", function() {deepEqual( Stem("fyrväldigt"), "fyrväld");});
test("fysik -> fysik", function() {deepEqual( Stem("fysik"), "fysik");});
test("fysionomi -> fysionomi", function() {deepEqual( Stem("fysionomi"), "fysionomi");});
test("fysisk -> fysisk", function() {deepEqual( Stem("fysisk"), "fysisk");});
test("fysiska -> fysisk", function() {deepEqual( Stem("fysiska"), "fysisk");});
test("fä -> fä", function() {deepEqual( Stem("fä"), "fä");});
test("fäder -> fäd", function() {deepEqual( Stem("fäder"), "fäd");});
test("fädernesland -> fädernesland", function() {deepEqual( Stem("fädernesland"), "fädernesland");});
test("fäderneslandet -> fädernesl", function() {deepEqual( Stem("fäderneslandet"), "fädernesl");});
test("fäderneslandets -> fäderneslandet", function() {deepEqual( Stem("fäderneslandets"), "fäderneslandet");});
test("fädernestammen -> fädernestamm", function() {deepEqual( Stem("fädernestammen"), "fädernestamm");});
test("fädrens -> fädr", function() {deepEqual( Stem("fädrens"), "fädr");});
test("fägna -> fägn", function() {deepEqual( Stem("fägna"), "fägn");});
test("fägnade -> fägn", function() {deepEqual( Stem("fägnade"), "fägn");});
test("fägnar -> fägn", function() {deepEqual( Stem("fägnar"), "fägn");});
test("fägring -> fägring", function() {deepEqual( Stem("fägring"), "fägring");});
test("fähund -> fähund", function() {deepEqual( Stem("fähund"), "fähund");});
test("fäktade -> fäkt", function() {deepEqual( Stem("fäktade"), "fäkt");});
test("fälda -> fäld", function() {deepEqual( Stem("fälda"), "fäld");});
test("fälde -> fäld", function() {deepEqual( Stem("fälde"), "fäld");});
test("fälla -> fäll", function() {deepEqual( Stem("fälla"), "fäll");});
test("fällan -> fällan", function() {deepEqual( Stem("fällan"), "fällan");});
test("fällda -> fälld", function() {deepEqual( Stem("fällda"), "fälld");});
test("fällde -> fälld", function() {deepEqual( Stem("fällde"), "fälld");});
test("fäller -> fäll", function() {deepEqual( Stem("fäller"), "fäll");});
test("fällklaff -> fällklaff", function() {deepEqual( Stem("fällklaff"), "fällklaff");});
test("fällknif -> fällknif", function() {deepEqual( Stem("fällknif"), "fällknif");});
test("fällsäng -> fällsäng", function() {deepEqual( Stem("fällsäng"), "fällsäng");});
test("fält -> fält", function() {deepEqual( Stem("fält"), "fält");});
test("fälten -> fält", function() {deepEqual( Stem("fälten"), "fält");});
test("fältens -> fält", function() {deepEqual( Stem("fältens"), "fält");});
test("fälttåg -> fälttåg", function() {deepEqual( Stem("fälttåg"), "fälttåg");});
test("fäng -> fäng", function() {deepEqual( Stem("fäng"), "fäng");});
test("fängelse -> fäng", function() {deepEqual( Stem("fängelse"), "fäng");});
test("fängelserna -> fäng", function() {deepEqual( Stem("fängelserna"), "fäng");});
test("fängnar -> fängn", function() {deepEqual( Stem("fängnar"), "fängn");});
test("fängsla -> fängsl", function() {deepEqual( Stem("fängsla"), "fängsl");});
test("fängslad -> fängsl", function() {deepEqual( Stem("fängslad"), "fängsl");});
test("fängslade -> fängsl", function() {deepEqual( Stem("fängslade"), "fängsl");});
test("fängslades -> fängsl", function() {deepEqual( Stem("fängslades"), "fängsl");});
test("fängslande -> fängsl", function() {deepEqual( Stem("fängslande"), "fängsl");});
test("fängslat -> fängsl", function() {deepEqual( Stem("fängslat"), "fängsl");});
test("fängslet -> fängslet", function() {deepEqual( Stem("fängslet"), "fängslet");});
test("fär -> fär", function() {deepEqual( Stem("fär"), "fär");});
test("färd -> färd", function() {deepEqual( Stem("färd"), "färd");});
test("färdades -> färd", function() {deepEqual( Stem("färdades"), "färd");});
test("färdas -> färd", function() {deepEqual( Stem("färdas"), "färd");});
test("färde -> färd", function() {deepEqual( Stem("färde"), "färd");});
test("färden -> färd", function() {deepEqual( Stem("färden"), "färd");});
test("färdig -> färd", function() {deepEqual( Stem("färdig"), "färd");});
test("färdiga -> färd", function() {deepEqual( Stem("färdiga"), "färd");});
test("färdigats -> färdigat", function() {deepEqual( Stem("färdigats"), "färdigat");});
test("färdighet -> färd", function() {deepEqual( Stem("färdighet"), "färd");});
test("färdiglovade -> färdiglov", function() {deepEqual( Stem("färdiglovade"), "färdiglov");});
test("färdigt -> färd", function() {deepEqual( Stem("färdigt"), "färd");});
test("färg -> färg", function() {deepEqual( Stem("färg"), "färg");});
test("färgade -> färg", function() {deepEqual( Stem("färgade"), "färg");});
test("färgades -> färg", function() {deepEqual( Stem("färgades"), "färg");});
test("färgar -> färg", function() {deepEqual( Stem("färgar"), "färg");});
test("färgat -> färg", function() {deepEqual( Stem("färgat"), "färg");});
test("färgen -> färg", function() {deepEqual( Stem("färgen"), "färg");});
test("färger -> färg", function() {deepEqual( Stem("färger"), "färg");});
test("färgerna -> färg", function() {deepEqual( Stem("färgerna"), "färg");});
test("färggrann -> färggran", function() {deepEqual( Stem("färggrann"), "färggran");});
test("färglösa -> färglös", function() {deepEqual( Stem("färglösa"), "färglös");});
test("färgprakt -> färgprak", function() {deepEqual( Stem("färgprakt"), "färgprak");});
test("färgrika -> färgrik", function() {deepEqual( Stem("färgrika"), "färgrik");});
test("färgspel -> färgspel", function() {deepEqual( Stem("färgspel"), "färgspel");});
test("färgton -> färgton", function() {deepEqual( Stem("färgton"), "färgton");});
test("färjan -> färjan", function() {deepEqual( Stem("färjan"), "färjan");});
test("färliga -> fär", function() {deepEqual( Stem("färliga"), "fär");});
test("färsk -> färsk", function() {deepEqual( Stem("färsk"), "färsk");});
test("färska -> färsk", function() {deepEqual( Stem("färska"), "färsk");});
test("färskt -> färsk", function() {deepEqual( Stem("färskt"), "färsk");});
test("färsäkrat -> färsäkr", function() {deepEqual( Stem("färsäkrat"), "färsäkr");});
test("fäst -> fäst", function() {deepEqual( Stem("fäst"), "fäst");});
test("fästa -> fäst", function() {deepEqual( Stem("fästa"), "fäst");});
test("fästad -> fäst", function() {deepEqual( Stem("fästad"), "fäst");});
test("fästade -> fäst", function() {deepEqual( Stem("fästade"), "fäst");});
test("fästades -> fäst", function() {deepEqual( Stem("fästades"), "fäst");});
test("fästadt -> fästad", function() {deepEqual( Stem("fästadt"), "fästad");});
test("fästas -> fäst", function() {deepEqual( Stem("fästas"), "fäst");});
test("fästat -> fäst", function() {deepEqual( Stem("fästat"), "fäst");});
test("fäste -> fäst", function() {deepEqual( Stem("fäste"), "fäst");});
test("fäster -> fäst", function() {deepEqual( Stem("fäster"), "fäst");});
test("fästet -> fästet", function() {deepEqual( Stem("fästet"), "fästet");});
test("fästman -> fästman", function() {deepEqual( Stem("fästman"), "fästman");});
test("fästmannen -> fästman", function() {deepEqual( Stem("fästmannen"), "fästman");});
test("fästmannens -> fästman", function() {deepEqual( Stem("fästmannens"), "fästman");});
test("fästmö -> fästmö", function() {deepEqual( Stem("fästmö"), "fästmö");});
test("fästmön -> fästmön", function() {deepEqual( Stem("fästmön"), "fästmön");});
test("fästmös -> fästmös", function() {deepEqual( Stem("fästmös"), "fästmös");});
test("fästmöskänkerna -> fästmöskänk", function() {deepEqual( Stem("fästmöskänkerna"), "fästmöskänk");});
test("fästningen -> fästning", function() {deepEqual( Stem("fästningen"), "fästning");});
test("fästrman -> fästrman", function() {deepEqual( Stem("fästrman"), "fästrman");});
test("få -> få", function() {deepEqual( Stem("få"), "få");});
test("fåelarnas -> fåel", function() {deepEqual( Stem("fåelarnas"), "fåel");});
test("fåfäng -> fåfäng", function() {deepEqual( Stem("fåfäng"), "fåfäng");});
test("fåfänga -> fåfäng", function() {deepEqual( Stem("fåfänga"), "fåfäng");});
test("fåfängan -> fåfängan", function() {deepEqual( Stem("fåfängan"), "fåfängan");});
test("fåfänglighet -> fåfäng", function() {deepEqual( Stem("fåfänglighet"), "fåfäng");});
test("fåfängt -> fåfäng", function() {deepEqual( Stem("fåfängt"), "fåfäng");});
test("fågel -> fågel", function() {deepEqual( Stem("fågel"), "fågel");});
test("fågelbur -> fågelbur", function() {deepEqual( Stem("fågelbur"), "fågelbur");});
test("fågelflock -> fågelflock", function() {deepEqual( Stem("fågelflock"), "fågelflock");});
test("fågelkropp -> fågelkropp", function() {deepEqual( Stem("fågelkropp"), "fågelkropp");});
test("fågelkroppen -> fågelkropp", function() {deepEqual( Stem("fågelkroppen"), "fågelkropp");});
test("fågelkvist -> fågelkvist", function() {deepEqual( Stem("fågelkvist"), "fågelkvist");});
test("fågeln -> fågeln", function() {deepEqual( Stem("fågeln"), "fågeln");});
test("fågelns -> fågeln", function() {deepEqual( Stem("fågelns"), "fågeln");});
test("fågelnäbb -> fågelnäbb", function() {deepEqual( Stem("fågelnäbb"), "fågelnäbb");});
test("fågelnäbbars -> fågelnäbbar", function() {deepEqual( Stem("fågelnäbbars"), "fågelnäbbar");});
test("fågels -> fågel", function() {deepEqual( Stem("fågels"), "fågel");});
test("fågeltro -> fågeltro", function() {deepEqual( Stem("fågeltro"), "fågeltro");});
test("fågelungars -> fågelungar", function() {deepEqual( Stem("fågelungars"), "fågelungar");});
test("fågelunge -> fågelung", function() {deepEqual( Stem("fågelunge"), "fågelung");});
test("fågelungen -> fågelung", function() {deepEqual( Stem("fågelungen"), "fågelung");});
test("fåglar -> fågl", function() {deepEqual( Stem("fåglar"), "fågl");});
test("fåglarna -> fågl", function() {deepEqual( Stem("fåglarna"), "fågl");});
test("fåglarnas -> fågl", function() {deepEqual( Stem("fåglarnas"), "fågl");});
test("fåglars -> fåglar", function() {deepEqual( Stem("fåglars"), "fåglar");});
test("fållat -> fåll", function() {deepEqual( Stem("fållat"), "fåll");});
test("fån -> fån", function() {deepEqual( Stem("fån"), "fån");});
test("fånar -> fån", function() {deepEqual( Stem("fånar"), "fån");});
test("fåne -> fån", function() {deepEqual( Stem("fåne"), "fån");});
test("fång -> fång", function() {deepEqual( Stem("fång"), "fång");});
test("fånga -> fång", function() {deepEqual( Stem("fånga"), "fång");});
test("fångad -> fång", function() {deepEqual( Stem("fångad"), "fång");});
test("fångade -> fång", function() {deepEqual( Stem("fångade"), "fång");});
test("fångar -> fång", function() {deepEqual( Stem("fångar"), "fång");});
test("fångarne -> fång", function() {deepEqual( Stem("fångarne"), "fång");});
test("fångas -> fång", function() {deepEqual( Stem("fångas"), "fång");});
test("fångat -> fång", function() {deepEqual( Stem("fångat"), "fång");});
test("fångcellen -> fångcell", function() {deepEqual( Stem("fångcellen"), "fångcell");});
test("fånge -> fång", function() {deepEqual( Stem("fånge"), "fång");});
test("fången -> fång", function() {deepEqual( Stem("fången"), "fång");});
test("fångenskapen -> fångenskap", function() {deepEqual( Stem("fångenskapen"), "fångenskap");});
test("fångkärra -> fångkärr", function() {deepEqual( Stem("fångkärra"), "fångkärr");});
test("fånglinan -> fånglinan", function() {deepEqual( Stem("fånglinan"), "fånglinan");});
test("fångna -> fångn", function() {deepEqual( Stem("fångna"), "fångn");});
test("fångst -> fångst", function() {deepEqual( Stem("fångst"), "fångst");});
test("fånig -> fån", function() {deepEqual( Stem("fånig"), "fån");});
test("fåniga -> fån", function() {deepEqual( Stem("fåniga"), "fån");});
test("fånigt -> fån", function() {deepEqual( Stem("fånigt"), "fån");});
test("fåordig -> fåord", function() {deepEqual( Stem("fåordig"), "fåord");});
test("fåordiga -> fåord", function() {deepEqual( Stem("fåordiga"), "fåord");});
test("får -> får", function() {deepEqual( Stem("får"), "får");});
test("fåra -> får", function() {deepEqual( Stem("fåra"), "får");});
test("fåraktigt -> fårakt", function() {deepEqual( Stem("fåraktigt"), "fårakt");});
test("fårbog -> fårbog", function() {deepEqual( Stem("fårbog"), "fårbog");});
test("fåren -> får", function() {deepEqual( Stem("fåren"), "får");});
test("fåret -> fåret", function() {deepEqual( Stem("fåret"), "fåret");});
test("fårskallen -> fårskall", function() {deepEqual( Stem("fårskallen"), "fårskall");});
test("fått -> fått", function() {deepEqual( Stem("fått"), "fått");});
test("fö -> fö", function() {deepEqual( Stem("fö"), "fö");});
test("föda -> föd", function() {deepEqual( Stem("föda"), "föd");});
test("födande -> föd", function() {deepEqual( Stem("födande"), "föd");});
test("födas -> föd", function() {deepEqual( Stem("födas"), "föd");});
test("född -> född", function() {deepEqual( Stem("född"), "född");});
test("födda -> född", function() {deepEqual( Stem("födda"), "född");});
test("födde -> född", function() {deepEqual( Stem("födde"), "född");});
test("föddes -> född", function() {deepEqual( Stem("föddes"), "född");});
test("födelse -> föd", function() {deepEqual( Stem("födelse"), "föd");});
test("födelsedag -> födelsedag", function() {deepEqual( Stem("födelsedag"), "födelsedag");});
test("födelsedagar -> födelsedag", function() {deepEqual( Stem("födelsedagar"), "födelsedag");});
test("födelsedagen -> födelsedag", function() {deepEqual( Stem("födelsedagen"), "födelsedag");});
test("födelsedagens -> födelsedag", function() {deepEqual( Stem("födelsedagens"), "födelsedag");});
test("födelsedagsbord -> födelsedagsbord", function() {deepEqual( Stem("födelsedagsbord"), "födelsedagsbord");});
test("födelsedagsbordet -> födelsedagsbordet", function() {deepEqual( Stem("födelsedagsbordet"), "födelsedagsbordet");});
test("födelsemysteriet -> födelsemysteriet", function() {deepEqual( Stem("födelsemysteriet"), "födelsemysteriet");});
test("födelsen -> föd", function() {deepEqual( Stem("födelsen"), "föd");});
test("födelser -> föd", function() {deepEqual( Stem("födelser"), "föd");});
test("föder -> föd", function() {deepEqual( Stem("föder"), "föd");});
test("födes -> föd", function() {deepEqual( Stem("födes"), "föd");});
test("födgeni -> födgeni", function() {deepEqual( Stem("födgeni"), "födgeni");});
test("födslovåndor -> födslovånd", function() {deepEqual( Stem("födslovåndor"), "födslovånd");});
test("föga -> fög", function() {deepEqual( Stem("föga"), "fög");});
test("föibi -> föibi", function() {deepEqual( Stem("föibi"), "föibi");});
test("föijt -> föijt", function() {deepEqual( Stem("föijt"), "föijt");});
test("föl -> föl", function() {deepEqual( Stem("föl"), "föl");});
test("följ -> följ", function() {deepEqual( Stem("följ"), "följ");});
test("följa -> följ", function() {deepEqual( Stem("följa"), "följ");});
test("följaktligen -> följakt", function() {deepEqual( Stem("följaktligen"), "följakt");});
test("följande -> följ", function() {deepEqual( Stem("följande"), "följ");});
test("följd -> följd", function() {deepEqual( Stem("följd"), "följd");});
test("följde -> följd", function() {deepEqual( Stem("följde"), "följd");});
test("följden -> följd", function() {deepEqual( Stem("följden"), "följd");});
test("följder -> följd", function() {deepEqual( Stem("följder"), "följd");});
test("följderna -> följd", function() {deepEqual( Stem("följderna"), "följd");});
test("följdes -> följd", function() {deepEqual( Stem("följdes"), "följd");});
test("följe -> följ", function() {deepEqual( Stem("följe"), "följ");});
test("följer -> följ", function() {deepEqual( Stem("följer"), "följ");});
test("följeslagare -> följeslag", function() {deepEqual( Stem("följeslagare"), "följeslag");});
test("följeslagares -> följeslagar", function() {deepEqual( Stem("följeslagares"), "följeslagar");});
test("följeslagerska -> följeslagersk", function() {deepEqual( Stem("följeslagerska"), "följeslagersk");});
test("följetongen -> följetong", function() {deepEqual( Stem("följetongen"), "följetong");});
test("följs -> följ", function() {deepEqual( Stem("följs"), "följ");});
test("följt -> följt", function() {deepEqual( Stem("följt"), "följt");});
test("föll -> föll", function() {deepEqual( Stem("föll"), "föll");});
test("fölle -> föll", function() {deepEqual( Stem("fölle"), "föll");});
test("föllo -> föllo", function() {deepEqual( Stem("föllo"), "föllo");});
test("fömodan -> fömodan", function() {deepEqual( Stem("fömodan"), "fömodan");});
test("fömuftiga -> fömuft", function() {deepEqual( Stem("fömuftiga"), "fömuft");});
test("fön -> fön", function() {deepEqual( Stem("fön"), "fön");});
test("fönster -> fönst", function() {deepEqual( Stem("fönster"), "fönst");});
test("fönsterblecket -> fönsterblecket", function() {deepEqual( Stem("fönsterblecket"), "fönsterblecket");});
test("fönsterbrädet -> fönsterbrädet", function() {deepEqual( Stem("fönsterbrädet"), "fönsterbrädet");});
test("fönsterglaset -> fönsterglaset", function() {deepEqual( Stem("fönsterglaset"), "fönsterglaset");});
test("fönsterglugg -> fönsterglugg", function() {deepEqual( Stem("fönsterglugg"), "fönsterglugg");});
test("fönsterkarm -> fönsterkarm", function() {deepEqual( Stem("fönsterkarm"), "fönsterkarm");});
test("fönsterkarmen -> fönsterkarm", function() {deepEqual( Stem("fönsterkarmen"), "fönsterkarm");});
test("fönsterkurtis -> fönsterkurtis", function() {deepEqual( Stem("fönsterkurtis"), "fönsterkurtis");});
test("fönsterluckor -> fönsterluck", function() {deepEqual( Stem("fönsterluckor"), "fönsterluck");});
test("fönsterluften -> fönsterluft", function() {deepEqual( Stem("fönsterluften"), "fönsterluft");});
test("fönsterlufter -> fönsterluft", function() {deepEqual( Stem("fönsterlufter"), "fönsterluft");});
test("fönsterlufterna -> fönsterluft", function() {deepEqual( Stem("fönsterlufterna"), "fönsterluft");});
test("fönsterna -> fönst", function() {deepEqual( Stem("fönsterna"), "fönst");});
test("fönsternas -> fönst", function() {deepEqual( Stem("fönsternas"), "fönst");});
test("fönsterpantomimen -> fönsterpantomim", function() {deepEqual( Stem("fönsterpantomimen"), "fönsterpantomim");});
test("fönsterplats -> fönsterplat", function() {deepEqual( Stem("fönsterplats"), "fönsterplat");});
test("fönsterrader -> fönsterrad", function() {deepEqual( Stem("fönsterrader"), "fönsterrad");});
test("fönsterruta -> fönsterrut", function() {deepEqual( Stem("fönsterruta"), "fönsterrut");});
test("fönsterrutan -> fönsterrutan", function() {deepEqual( Stem("fönsterrutan"), "fönsterrutan");});
test("fönsterrutor -> fönsterrut", function() {deepEqual( Stem("fönsterrutor"), "fönsterrut");});
test("fönsterrutorna -> fönsterrut", function() {deepEqual( Stem("fönsterrutorna"), "fönsterrut");});
test("fönsterspringorna -> fönsterspring", function() {deepEqual( Stem("fönsterspringorna"), "fönsterspring");});
test("fönstrct -> fönstrct", function() {deepEqual( Stem("fönstrct"), "fönstrct");});
test("fönstren -> fönstr", function() {deepEqual( Stem("fönstren"), "fönstr");});
test("fönstrens -> fönstr", function() {deepEqual( Stem("fönstrens"), "fönstr");});
test("fönstret -> fönstret", function() {deepEqual( Stem("fönstret"), "fönstret");});
test("fönstrets -> fönstret", function() {deepEqual( Stem("fönstrets"), "fönstret");});
test("för -> för", function() {deepEqual( Stem("för"), "för");});
test("föra -> för", function() {deepEqual( Stem("föra"), "för");});
test("förakt -> förak", function() {deepEqual( Stem("förakt"), "förak");});
test("förakta -> förak", function() {deepEqual( Stem("förakta"), "förak");});
test("föraktad -> förak", function() {deepEqual( Stem("föraktad"), "förak");});
test("föraktade -> förak", function() {deepEqual( Stem("föraktade"), "förak");});
test("föraktande -> förak", function() {deepEqual( Stem("föraktande"), "förak");});
test("föraktar -> förak", function() {deepEqual( Stem("föraktar"), "förak");});
test("föraktare -> förak", function() {deepEqual( Stem("föraktare"), "förak");});
test("föraktas -> förak", function() {deepEqual( Stem("föraktas"), "förak");});
test("föraktfuilt -> föraktfuilt", function() {deepEqual( Stem("föraktfuilt"), "föraktfuilt");});
test("föraktlig -> förakt", function() {deepEqual( Stem("föraktlig"), "förakt");});
test("föraktliga -> förakt", function() {deepEqual( Stem("föraktliga"), "förakt");});
test("föraktligare -> förakt", function() {deepEqual( Stem("föraktligare"), "förakt");});
test("föraktligt -> förakt", function() {deepEqual( Stem("föraktligt"), "förakt");});
test("föranledd -> föranled", function() {deepEqual( Stem("föranledd"), "föranled");});
test("föranledda -> föranled", function() {deepEqual( Stem("föranledda"), "föranled");});
test("föranledde -> föranled", function() {deepEqual( Stem("föranledde"), "föranled");});
test("föranlett -> föranlet", function() {deepEqual( Stem("föranlett"), "föranlet");});
test("föranstalta -> föranstalt", function() {deepEqual( Stem("föranstalta"), "föranstalt");});
test("förarga -> förarg", function() {deepEqual( Stem("förarga"), "förarg");});
test("förargad -> förarg", function() {deepEqual( Stem("förargad"), "förarg");});
test("förargade -> förarg", function() {deepEqual( Stem("förargade"), "förarg");});
test("förargat -> förarg", function() {deepEqual( Stem("förargat"), "förarg");});
test("förargelse -> förarg", function() {deepEqual( Stem("förargelse"), "förarg");});
test("förarglige -> förarg", function() {deepEqual( Stem("förarglige"), "förarg");});
test("förargligt -> förarg", function() {deepEqual( Stem("förargligt"), "förarg");});
test("förarsätet -> förarsätet", function() {deepEqual( Stem("förarsätet"), "förarsätet");});
test("föras -> för", function() {deepEqual( Stem("föras"), "för");});
test("förb -> förb", function() {deepEqual( Stem("förb"), "förb");});
test("förbanna -> förban", function() {deepEqual( Stem("förbanna"), "förban");});
test("förbannad -> förban", function() {deepEqual( Stem("förbannad"), "förban");});
test("förbannade -> förban", function() {deepEqual( Stem("förbannade"), "förban");});
test("förbannat -> förban", function() {deepEqual( Stem("förbannat"), "förban");});
test("förbannelse -> förbann", function() {deepEqual( Stem("förbannelse"), "förbann");});
test("förbannelser -> förbann", function() {deepEqual( Stem("förbannelser"), "förbann");});
test("förbarma -> förbarm", function() {deepEqual( Stem("förbarma"), "förbarm");});
test("förbarmade -> förbarm", function() {deepEqual( Stem("förbarmade"), "förbarm");});
test("förbarmande -> förbarm", function() {deepEqual( Stem("förbarmande"), "förbarm");});
test("förbarmare -> förbarm", function() {deepEqual( Stem("förbarmare"), "förbarm");});
test("förbarme -> förbarm", function() {deepEqual( Stem("förbarme"), "förbarm");});
test("förbaskade -> förbask", function() {deepEqual( Stem("förbaskade"), "förbask");});
test("förbaskat -> förbask", function() {deepEqual( Stem("förbaskat"), "förbask");});
test("förbehallsamhet -> förbehallsam", function() {deepEqual( Stem("förbehallsamhet"), "förbehallsam");});
test("förbehåll -> förbehåll", function() {deepEqual( Stem("förbehåll"), "förbehåll");});
test("förbehållen -> förbehåll", function() {deepEqual( Stem("förbehållen"), "förbehåll");});
test("förbehåller -> förbehåll", function() {deepEqual( Stem("förbehåller"), "förbehåll");});
test("förbehållet -> förbehållet", function() {deepEqual( Stem("förbehållet"), "förbehållet");});
test("förbehållsamhet -> förbehållsam", function() {deepEqual( Stem("förbehållsamhet"), "förbehållsam");});
test("förbereda -> förbered", function() {deepEqual( Stem("förbereda"), "förbered");});
test("förberedde -> förbered", function() {deepEqual( Stem("förberedde"), "förbered");});
test("förberedelser -> förbered", function() {deepEqual( Stem("förberedelser"), "förbered");});
test("förberett -> förberet", function() {deepEqual( Stem("förberett"), "förberet");});
test("förbi -> förbi", function() {deepEqual( Stem("förbi"), "förbi");});
test("förbifarten -> förbifart", function() {deepEqual( Stem("förbifarten"), "förbifart");});
test("förbiflytande -> förbiflyt", function() {deepEqual( Stem("förbiflytande"), "förbiflyt");});
test("förbigaende -> förbigaend", function() {deepEqual( Stem("förbigaende"), "förbigaend");});
test("förbigicks -> förbigick", function() {deepEqual( Stem("förbigicks"), "förbigick");});
test("förbiglidande -> förbiglid", function() {deepEqual( Stem("förbiglidande"), "förbiglid");});
test("förbigå -> förbigå", function() {deepEqual( Stem("förbigå"), "förbigå");});
test("förbigående -> förbigåend", function() {deepEqual( Stem("förbigående"), "förbigåend");});
test("förbigåerlde -> förbigåerld", function() {deepEqual( Stem("förbigåerlde"), "förbigåerld");});
test("förbiilande -> förbiil", function() {deepEqual( Stem("förbiilande"), "förbiil");});
test("förbinclelse -> förbincl", function() {deepEqual( Stem("förbinclelse"), "förbincl");});
test("förbindelse -> förbind", function() {deepEqual( Stem("förbindelse"), "förbind");});
test("förbindelsen -> förbind", function() {deepEqual( Stem("förbindelsen"), "förbind");});
test("förbindelser -> förbind", function() {deepEqual( Stem("förbindelser"), "förbind");});
test("förbindlig -> förbind", function() {deepEqual( Stem("förbindlig"), "förbind");});
test("förbindlighet -> förbind", function() {deepEqual( Stem("förbindlighet"), "förbind");});
test("förbindligt -> förbind", function() {deepEqual( Stem("förbindligt"), "förbind");});
test("förbise -> förbis", function() {deepEqual( Stem("förbise"), "förbis");});
test("förbisedd -> förbised", function() {deepEqual( Stem("förbisedd"), "förbised");});
test("förbisedda -> förbised", function() {deepEqual( Stem("förbisedda"), "förbised");});
test("förbiser -> förbis", function() {deepEqual( Stem("förbiser"), "förbis");});
test("förbistring -> förbistring", function() {deepEqual( Stem("förbistring"), "förbistring");});
test("förbisåg -> förbisåg", function() {deepEqual( Stem("förbisåg"), "förbisåg");});
test("förbittras -> förbittr", function() {deepEqual( Stem("förbittras"), "förbittr");});
test("förbittring -> förbittring", function() {deepEqual( Stem("förbittring"), "förbittring");});
test("förbjude -> förbjud", function() {deepEqual( Stem("förbjude"), "förbjud");});
test("förbjuder -> förbjud", function() {deepEqual( Stem("förbjuder"), "förbjud");});
test("förbjudet -> förbjudet", function() {deepEqual( Stem("förbjudet"), "förbjudet");});
test("förbjudit -> förbjudit", function() {deepEqual( Stem("förbjudit"), "förbjudit");});
test("förbjudna -> förbjudn", function() {deepEqual( Stem("förbjudna"), "förbjudn");});
test("förbjöd -> förbjöd", function() {deepEqual( Stem("förbjöd"), "förbjöd");});
test("förblandat -> förbland", function() {deepEqual( Stem("förblandat"), "förbland");});
test("förblef -> förblef", function() {deepEqual( Stem("förblef"), "förblef");});
test("förblev -> förblev", function() {deepEqual( Stem("förblev"), "förblev");});
test("förblevo -> förblevo", function() {deepEqual( Stem("förblevo"), "förblevo");});
test("förbli -> förbli", function() {deepEqual( Stem("förbli"), "förbli");});
test("förblifva -> förblifv", function() {deepEqual( Stem("förblifva"), "förblifv");});
test("förblindade -> förblind", function() {deepEqual( Stem("förblindade"), "förblind");});
test("förblindadt -> förblindad", function() {deepEqual( Stem("förblindadt"), "förblindad");});
test("förblindar -> förblind", function() {deepEqual( Stem("förblindar"), "förblind");});
test("förblir -> förblir", function() {deepEqual( Stem("förblir"), "förblir");});
test("förbliv -> förbliv", function() {deepEqual( Stem("förbliv"), "förbliv");});
test("förblivande -> förbliv", function() {deepEqual( Stem("förblivande"), "förbliv");});
test("förbluffade -> förbluff", function() {deepEqual( Stem("förbluffade"), "förbluff");});
test("förbluffande -> förbluff", function() {deepEqual( Stem("förbluffande"), "förbluff");});
test("förborgade -> förborg", function() {deepEqual( Stem("förborgade"), "förborg");});
test("förbrinna -> förbrin", function() {deepEqual( Stem("förbrinna"), "förbrin");});
test("förbrinner -> förbrin", function() {deepEqual( Stem("förbrinner"), "förbrin");});
test("förbrylla -> förbryll", function() {deepEqual( Stem("förbrylla"), "förbryll");});
test("förbrytare -> förbryt", function() {deepEqual( Stem("förbrytare"), "förbryt");});
test("förbrytelse -> förbryt", function() {deepEqual( Stem("förbrytelse"), "förbryt");});
test("förbrytelsen -> förbryt", function() {deepEqual( Stem("förbrytelsen"), "förbryt");});
test("förbränd -> förbränd", function() {deepEqual( Stem("förbränd"), "förbränd");});
test("förbrända -> förbränd", function() {deepEqual( Stem("förbrända"), "förbränd");});
test("förbud -> förbud", function() {deepEqual( Stem("förbud"), "förbud");});
test("förbund -> förbund", function() {deepEqual( Stem("förbund"), "förbund");});
test("förbunde -> förbund", function() {deepEqual( Stem("förbunde"), "förbund");});
test("förbunden -> förbund", function() {deepEqual( Stem("förbunden"), "förbund");});
test("förbundit -> förbundit", function() {deepEqual( Stem("förbundit"), "förbundit");});
test("förbundna -> förbundn", function() {deepEqual( Stem("förbundna"), "förbundn");});
test("förbytt -> förbyt", function() {deepEqual( Stem("förbytt"), "förbyt");});
test("förbättra -> förbättr", function() {deepEqual( Stem("förbättra"), "förbättr");});
test("förbättrad -> förbättr", function() {deepEqual( Stem("förbättrad"), "förbättr");});
test("förbättrades -> förbättr", function() {deepEqual( Stem("förbättrades"), "förbättr");});
test("förbättradt -> förbättrad", function() {deepEqual( Stem("förbättradt"), "förbättrad");});
test("förbättrat -> förbättr", function() {deepEqual( Stem("förbättrat"), "förbättr");});
test("förbättring -> förbättring", function() {deepEqual( Stem("förbättring"), "förbättring");});
test("förbålt -> förbålt", function() {deepEqual( Stem("förbålt"), "förbålt");});
test("förböner -> förbön", function() {deepEqual( Stem("förböner"), "förbön");});
test("förc -> förc", function() {deepEqual( Stem("förc"), "förc");});
test("förd -> förd", function() {deepEqual( Stem("förd"), "förd");});
test("förda -> förd", function() {deepEqual( Stem("förda"), "förd");});
test("förde -> förd", function() {deepEqual( Stem("förde"), "förd");});
test("fördel -> fördel", function() {deepEqual( Stem("fördel"), "fördel");});
test("fördelaktig -> fördelakt", function() {deepEqual( Stem("fördelaktig"), "fördelakt");});
test("fördelaktigare -> fördelakt", function() {deepEqual( Stem("fördelaktigare"), "fördelakt");});
test("fördelaktigt -> fördelakt", function() {deepEqual( Stem("fördelaktigt"), "fördelakt");});
test("fördelande -> fördel", function() {deepEqual( Stem("fördelande"), "fördel");});
test("fördelar -> fördel", function() {deepEqual( Stem("fördelar"), "fördel");});
test("fördelningen -> fördelning", function() {deepEqual( Stem("fördelningen"), "fördelning");});
test("förden -> förd", function() {deepEqual( Stem("förden"), "förd");});
test("fördenskull -> fördenskull", function() {deepEqual( Stem("fördenskull"), "fördenskull");});
test("förderfvet -> förderfvet", function() {deepEqual( Stem("förderfvet"), "förderfvet");});
test("fördes -> förd", function() {deepEqual( Stem("fördes"), "förd");});
test("fördj -> fördj", function() {deepEqual( Stem("fördj"), "fördj");});
test("fördjekladt -> fördjeklad", function() {deepEqual( Stem("fördjekladt"), "fördjeklad");});
test("fördjupade -> fördjup", function() {deepEqual( Stem("fördjupade"), "fördjup");});
test("fördjupningar -> fördjupning", function() {deepEqual( Stem("fördjupningar"), "fördjupning");});
test("fördjupningen -> fördjupning", function() {deepEqual( Stem("fördjupningen"), "fördjupning");});
test("fördolt -> fördolt", function() {deepEqual( Stem("fördolt"), "fördolt");});
test("fördom -> fördom", function() {deepEqual( Stem("fördom"), "fördom");});
test("fördomar -> fördom", function() {deepEqual( Stem("fördomar"), "fördom");});
test("fördrag -> fördrag", function() {deepEqual( Stem("fördrag"), "fördrag");});
test("fördraga -> fördrag", function() {deepEqual( Stem("fördraga"), "fördrag");});
test("fördragsamhetens -> fördragsam", function() {deepEqual( Stem("fördragsamhetens"), "fördragsam");});
test("fördrar -> fördr", function() {deepEqual( Stem("fördrar"), "fördr");});
test("fördrevo -> fördrevo", function() {deepEqual( Stem("fördrevo"), "fördrevo");});
test("fördriva -> fördriv", function() {deepEqual( Stem("fördriva"), "fördriv");});
test("fördröja -> fördröj", function() {deepEqual( Stem("fördröja"), "fördröj");});
test("fördröjt -> fördröjt", function() {deepEqual( Stem("fördröjt"), "fördröjt");});
test("fördubblad -> fördubbl", function() {deepEqual( Stem("fördubblad"), "fördubbl");});
test("fördubblade -> fördubbl", function() {deepEqual( Stem("fördubblade"), "fördubbl");});
test("fördubbladt -> fördubblad", function() {deepEqual( Stem("fördubbladt"), "fördubblad");});
test("fördunk -> fördunk", function() {deepEqual( Stem("fördunk"), "fördunk");});
test("fördärva -> fördärv", function() {deepEqual( Stem("fördärva"), "fördärv");});
test("fördärvar -> fördärv", function() {deepEqual( Stem("fördärvar"), "fördärv");});
test("fördärvat -> fördärv", function() {deepEqual( Stem("fördärvat"), "fördärv");});
test("fördärvet -> fördärvet", function() {deepEqual( Stem("fördärvet"), "fördärvet");});
test("fördöma -> fördöm", function() {deepEqual( Stem("fördöma"), "fördöm");});
test("fördömd -> fördömd", function() {deepEqual( Stem("fördömd"), "fördömd");});
test("fördömda -> fördömd", function() {deepEqual( Stem("fördömda"), "fördömd");});
test("fördömde -> fördömd", function() {deepEqual( Stem("fördömde"), "fördömd");});
test("fördöme -> fördöm", function() {deepEqual( Stem("fördöme"), "fördöm");});
test("fördömt -> fördömt", function() {deepEqual( Stem("fördömt"), "fördömt");});
test("före -> för", function() {deepEqual( Stem("före"), "för");});
test("förebilder -> förebild", function() {deepEqual( Stem("förebilder"), "förebild");});
test("förebrå -> förebrå", function() {deepEqual( Stem("förebrå"), "förebrå");});
test("förebrådde -> förebråd", function() {deepEqual( Stem("förebrådde"), "förebråd");});
test("förebråelse -> förebrå", function() {deepEqual( Stem("förebråelse"), "förebrå");});
test("förebråelser -> förebrå", function() {deepEqual( Stem("förebråelser"), "förebrå");});
test("förebrående -> förebråend", function() {deepEqual( Stem("förebrående"), "förebråend");});
test("förebud -> förebud", function() {deepEqual( Stem("förebud"), "förebud");});
test("förebygga -> förebygg", function() {deepEqual( Stem("förebygga"), "förebygg");});
test("föredrag -> föredrag", function() {deepEqual( Stem("föredrag"), "föredrag");});
test("föredrager -> föredrag", function() {deepEqual( Stem("föredrager"), "föredrag");});
test("föredraget -> föredraget", function() {deepEqual( Stem("föredraget"), "föredraget");});
test("föredragshållare -> föredragshåll", function() {deepEqual( Stem("föredragshållare"), "föredragshåll");});
test("föredrog -> föredrog", function() {deepEqual( Stem("föredrog"), "föredrog");});
test("föredöme -> föredöm", function() {deepEqual( Stem("föredöme"), "föredöm");});
test("förefalla -> förefall", function() {deepEqual( Stem("förefalla"), "förefall");});
test("förefallande -> förefall", function() {deepEqual( Stem("förefallande"), "förefall");});
test("förefaller -> förefall", function() {deepEqual( Stem("förefaller"), "förefall");});
test("förefallit -> förefallit", function() {deepEqual( Stem("förefallit"), "förefallit");});
test("föreföll -> föreföll", function() {deepEqual( Stem("föreföll"), "föreföll");});
test("föreföllo -> föreföllo", function() {deepEqual( Stem("föreföllo"), "föreföllo");});
test("föregick -> föregick", function() {deepEqual( Stem("föregick"), "föregick");});
test("föregående -> föregåend", function() {deepEqual( Stem("föregående"), "föregåend");});
test("föregångare -> föregång", function() {deepEqual( Stem("föregångare"), "föregång");});
test("föregånget -> föregånget", function() {deepEqual( Stem("föregånget"), "föregånget");});
test("förehades -> föreh", function() {deepEqual( Stem("förehades"), "föreh");});
test("förehafvande -> förehafv", function() {deepEqual( Stem("förehafvande"), "förehafv");});
test("förehafvandet -> förehafv", function() {deepEqual( Stem("förehafvandet"), "förehafv");});
test("förehavande -> förehav", function() {deepEqual( Stem("förehavande"), "förehav");});
test("förehålla -> förehåll", function() {deepEqual( Stem("förehålla"), "förehåll");});
test("förekom -> förekom", function() {deepEqual( Stem("förekom"), "förekom");});
test("förekomma -> förekomm", function() {deepEqual( Stem("förekomma"), "förekomm");});
test("förekommande -> förekomm", function() {deepEqual( Stem("förekommande"), "förekomm");});
test("förekommandet -> förekomm", function() {deepEqual( Stem("förekommandet"), "förekomm");});
test("förekommer -> förekomm", function() {deepEqual( Stem("förekommer"), "förekomm");});
test("förekommit -> förekommit", function() {deepEqual( Stem("förekommit"), "förekommit");});
test("förekommo -> förekommo", function() {deepEqual( Stem("förekommo"), "förekommo");});
test("förekoms -> förekom", function() {deepEqual( Stem("förekoms"), "förekom");});
test("förelagt -> förelag", function() {deepEqual( Stem("förelagt"), "förelag");});
test("föreligga -> föreligg", function() {deepEqual( Stem("föreligga"), "föreligg");});
test("föreligger -> föreligg", function() {deepEqual( Stem("föreligger"), "föreligg");});
test("föreläsning -> föreläsning", function() {deepEqual( Stem("föreläsning"), "föreläsning");});
test("föreläsningar -> föreläsning", function() {deepEqual( Stem("föreläsningar"), "föreläsning");});
test("föreläsningssalarna -> föreläsningssal", function() {deepEqual( Stem("föreläsningssalarna"), "föreläsningssal");});
test("föremål -> föremål", function() {deepEqual( Stem("föremål"), "föremål");});
test("föremålen -> föremål", function() {deepEqual( Stem("föremålen"), "föremål");});
test("föremålet -> föremålet", function() {deepEqual( Stem("föremålet"), "föremålet");});
test("fören -> för", function() {deepEqual( Stem("fören"), "för");});
test("förena -> fören", function() {deepEqual( Stem("förena"), "fören");});
test("förenad -> fören", function() {deepEqual( Stem("förenad"), "fören");});
test("förenade -> fören", function() {deepEqual( Stem("förenade"), "fören");});
test("förenande -> fören", function() {deepEqual( Stem("förenande"), "fören");});
test("förenar -> fören", function() {deepEqual( Stem("förenar"), "fören");});
test("förenas -> fören", function() {deepEqual( Stem("förenas"), "fören");});
test("förenat -> fören", function() {deepEqual( Stem("förenat"), "fören");});
test("förening -> förening", function() {deepEqual( Stem("förening"), "förening");});
test("föreningsband -> föreningsband", function() {deepEqual( Stem("föreningsband"), "föreningsband");});
test("förer -> för", function() {deepEqual( Stem("förer"), "för");});
test("förerska -> förersk", function() {deepEqual( Stem("förerska"), "förersk");});
test("föresats -> föresat", function() {deepEqual( Stem("föresats"), "föresat");});
test("föresatsen -> föresats", function() {deepEqual( Stem("föresatsen"), "föresats");});
test("föresatser -> föresats", function() {deepEqual( Stem("föresatser"), "föresats");});
test("föresatt -> föresat", function() {deepEqual( Stem("föresatt"), "föresat");});
test("föresatte -> föresat", function() {deepEqual( Stem("föresatte"), "föresat");});
test("föreskrift -> föreskrift", function() {deepEqual( Stem("föreskrift"), "föreskrift");});
test("föreskrifter -> föreskrift", function() {deepEqual( Stem("föreskrifter"), "föreskrift");});
test("föreslagit -> föreslagit", function() {deepEqual( Stem("föreslagit"), "föreslagit");});
test("föreslagna -> föreslagn", function() {deepEqual( Stem("föreslagna"), "föreslagn");});
test("föreslog -> föreslog", function() {deepEqual( Stem("föreslog"), "föreslog");});
test("föreslå -> föreslå", function() {deepEqual( Stem("föreslå"), "föreslå");});
test("förespel -> förespel", function() {deepEqual( Stem("förespel"), "förespel");});
test("förestallde -> förestalld", function() {deepEqual( Stem("förestallde"), "förestalld");});
test("förestavade -> förestav", function() {deepEqual( Stem("förestavade"), "förestav");});
test("förestod -> förestod", function() {deepEqual( Stem("förestod"), "förestod");});
test("förestodo -> förestodo", function() {deepEqual( Stem("förestodo"), "förestodo");});
test("förestyr -> förestyr", function() {deepEqual( Stem("förestyr"), "förestyr");});
test("förestälde -> förestäld", function() {deepEqual( Stem("förestälde"), "förestäld");});
test("föreställa -> föreställ", function() {deepEqual( Stem("föreställa"), "föreställ");});
test("föreställande -> föreställ", function() {deepEqual( Stem("föreställande"), "föreställ");});
test("föreställda -> föreställd", function() {deepEqual( Stem("föreställda"), "föreställd");});
test("föreställde -> föreställd", function() {deepEqual( Stem("föreställde"), "föreställd");});
test("föreställdes -> föreställd", function() {deepEqual( Stem("föreställdes"), "föreställd");});
test("föreställer -> föreställ", function() {deepEqual( Stem("föreställer"), "föreställ");});
test("föreställning -> föreställning", function() {deepEqual( Stem("föreställning"), "föreställning");});
test("föreställningar -> föreställning", function() {deepEqual( Stem("föreställningar"), "föreställning");});
test("föreställningen -> föreställning", function() {deepEqual( Stem("föreställningen"), "föreställning");});
test("föreställt -> föreställt", function() {deepEqual( Stem("föreställt"), "föreställt");});
test("förestält -> förestält", function() {deepEqual( Stem("förestält"), "förestält");});
test("förestå -> förestå", function() {deepEqual( Stem("förestå"), "förestå");});
test("förestående -> föreståend", function() {deepEqual( Stem("förestående"), "föreståend");});
test("föreståndarinnan -> föreståndarinnan", function() {deepEqual( Stem("föreståndarinnan"), "föreståndarinnan");});
test("föreståndarinnans -> föreståndarinnan", function() {deepEqual( Stem("föreståndarinnans"), "föreståndarinnan");});
test("föreståndarinnorna -> föreståndarin", function() {deepEqual( Stem("föreståndarinnorna"), "föreståndarin");});
test("föresvävade -> föresväv", function() {deepEqual( Stem("föresvävade"), "föresväv");});
test("företa -> föret", function() {deepEqual( Stem("företa"), "föret");});
test("företag -> företag", function() {deepEqual( Stem("företag"), "företag");});
test("företaga -> företag", function() {deepEqual( Stem("företaga"), "företag");});
test("företagas -> företag", function() {deepEqual( Stem("företagas"), "företag");});
test("företager -> företag", function() {deepEqual( Stem("företager"), "företag");});
test("företaget -> företaget", function() {deepEqual( Stem("företaget"), "företaget");});
test("företagit -> företagit", function() {deepEqual( Stem("företagit"), "företagit");});
test("företagsam -> företagsam", function() {deepEqual( Stem("företagsam"), "företagsam");});
test("förete -> föret", function() {deepEqual( Stem("förete"), "föret");});
test("företedde -> företed", function() {deepEqual( Stem("företedde"), "företed");});
test("företeelse -> förete", function() {deepEqual( Stem("företeelse"), "förete");});
test("företeelser -> förete", function() {deepEqual( Stem("företeelser"), "förete");});
test("företog -> företog", function() {deepEqual( Stem("företog"), "företog");});
test("företogo -> företogo", function() {deepEqual( Stem("företogo"), "företogo");});
test("företrädare -> företräd", function() {deepEqual( Stem("företrädare"), "företräd");});
test("företräde -> företräd", function() {deepEqual( Stem("företräde"), "företräd");});
test("företräden -> företräd", function() {deepEqual( Stem("företräden"), "företräd");});
test("företrädesvis -> företrädesvis", function() {deepEqual( Stem("företrädesvis"), "företrädesvis");});
test("företrädet -> företrädet", function() {deepEqual( Stem("företrädet"), "företrädet");});
test("förevändning -> förevändning", function() {deepEqual( Stem("förevändning"), "förevändning");});
test("förevändningar -> förevändning", function() {deepEqual( Stem("förevändningar"), "förevändning");});
test("förevändningen -> förevändning", function() {deepEqual( Stem("förevändningen"), "förevändning");});
test("förfall -> förfall", function() {deepEqual( Stem("förfall"), "förfall");});
test("förfalla -> förfall", function() {deepEqual( Stem("förfalla"), "förfall");});
test("förfallen -> förfall", function() {deepEqual( Stem("förfallen"), "förfall");});
test("förfallodagen -> förfallodag", function() {deepEqual( Stem("förfallodagen"), "förfallodag");});
test("förfalskare -> förfalsk", function() {deepEqual( Stem("förfalskare"), "förfalsk");});
test("förfalskat -> förfalsk", function() {deepEqual( Stem("förfalskat"), "förfalsk");});
test("förfara -> förfar", function() {deepEqual( Stem("förfara"), "förfar");});
test("förfarit -> förfarit", function() {deepEqual( Stem("förfarit"), "förfarit");});
test("förfaslig -> förfas", function() {deepEqual( Stem("förfaslig"), "förfas");});
test("förfasligt -> förfas", function() {deepEqual( Stem("förfasligt"), "förfas");});
test("författare -> förfat", function() {deepEqual( Stem("författare"), "förfat");});
test("författaren -> förfat", function() {deepEqual( Stem("författaren"), "förfat");});
test("författarskap -> författarskap", function() {deepEqual( Stem("författarskap"), "författarskap");});
test("författat -> förfat", function() {deepEqual( Stem("författat"), "förfat");});
test("författats -> författat", function() {deepEqual( Stem("författats"), "författat");});
test("förfelade -> förfel", function() {deepEqual( Stem("förfelade"), "förfel");});
test("förfinade -> förfin", function() {deepEqual( Stem("förfinade"), "förfin");});
test("förfluget -> förfluget", function() {deepEqual( Stem("förfluget"), "förfluget");});
test("förfluten -> förflut", function() {deepEqual( Stem("förfluten"), "förflut");});
test("förflutit -> förflutit", function() {deepEqual( Stem("förflutit"), "förflutit");});
test("förflutna -> förflutn", function() {deepEqual( Stem("förflutna"), "förflutn");});
test("förflyktigad -> förflykt", function() {deepEqual( Stem("förflyktigad"), "förflykt");});
test("förflyktigat -> förflykt", function() {deepEqual( Stem("förflyktigat"), "förflykt");});
test("förflytta -> förflyt", function() {deepEqual( Stem("förflytta"), "förflyt");});
test("förflöt -> förflöt", function() {deepEqual( Stem("förflöt"), "förflöt");});
test("förflöto -> förflöto", function() {deepEqual( Stem("förflöto"), "förflöto");});
test("förfoga -> förfog", function() {deepEqual( Stem("förfoga"), "förfog");});
test("förfogade -> förfog", function() {deepEqual( Stem("förfogade"), "förfog");});
test("förfogande -> förfog", function() {deepEqual( Stem("förfogande"), "förfog");});
test("förfogar -> förfog", function() {deepEqual( Stem("förfogar"), "förfog");});
test("förfriskas -> förfrisk", function() {deepEqual( Stem("förfriskas"), "förfrisk");});
test("förfriskning -> förfriskning", function() {deepEqual( Stem("förfriskning"), "förfriskning");});
test("förfriskningar -> förfriskning", function() {deepEqual( Stem("förfriskningar"), "förfriskning");});
test("förfrusen -> förfrus", function() {deepEqual( Stem("förfrusen"), "förfrus");});
test("förfrusna -> förfrusn", function() {deepEqual( Stem("förfrusna"), "förfrusn");});
test("förfrusne -> förfrusn", function() {deepEqual( Stem("förfrusne"), "förfrusn");});
test("förfrysa -> förfrys", function() {deepEqual( Stem("förfrysa"), "förfrys");});
test("förfrågningar -> förfrågning", function() {deepEqual( Stem("förfrågningar"), "förfrågning");});
test("förfäder -> förfäd", function() {deepEqual( Stem("förfäder"), "förfäd");});
test("förfäiligt -> förfäi", function() {deepEqual( Stem("förfäiligt"), "förfäi");});
test("förfärad -> förfär", function() {deepEqual( Stem("förfärad"), "förfär");});
test("förfäran -> förfäran", function() {deepEqual( Stem("förfäran"), "förfäran");});
test("förfärande -> förfär", function() {deepEqual( Stem("förfärande"), "förfär");});
test("förfäras -> förfär", function() {deepEqual( Stem("förfäras"), "förfär");});
test("förfärdigats -> förfärdigat", function() {deepEqual( Stem("förfärdigats"), "förfärdigat");});
test("förfärlig -> förfär", function() {deepEqual( Stem("förfärlig"), "förfär");});
test("förfärliga -> förfär", function() {deepEqual( Stem("förfärliga"), "förfär");});
test("förfärligare -> förfär", function() {deepEqual( Stem("förfärligare"), "förfär");});
test("förfärligaste -> förfär", function() {deepEqual( Stem("förfärligaste"), "förfär");});
test("förfärligt -> förfär", function() {deepEqual( Stem("förfärligt"), "förfär");});
test("förföljaren -> förfölj", function() {deepEqual( Stem("förföljaren"), "förfölj");});
test("förföljd -> förföljd", function() {deepEqual( Stem("förföljd"), "förföljd");});
test("förföljde -> förföljd", function() {deepEqual( Stem("förföljde"), "förföljd");});
test("förföljdes -> förföljd", function() {deepEqual( Stem("förföljdes"), "förföljd");});
test("förföljelsevansinne -> förföljelsevansin", function() {deepEqual( Stem("förföljelsevansinne"), "förföljelsevansin");});
test("förföljer -> förfölj", function() {deepEqual( Stem("förföljer"), "förfölj");});
test("förföljes -> förfölj", function() {deepEqual( Stem("förföljes"), "förfölj");});
test("förföljs -> förfölj", function() {deepEqual( Stem("förföljs"), "förfölj");});
test("förföljt -> förföljt", function() {deepEqual( Stem("förföljt"), "förföljt");});
test("förföll -> förföll", function() {deepEqual( Stem("förföll"), "förföll");});
test("förföllo -> förföllo", function() {deepEqual( Stem("förföllo"), "förföllo");});
test("förföra -> förför", function() {deepEqual( Stem("förföra"), "förför");});
test("förföraren -> förför", function() {deepEqual( Stem("förföraren"), "förför");});
test("förförares -> förförar", function() {deepEqual( Stem("förförares"), "förförar");});
test("förförelse -> förför", function() {deepEqual( Stem("förförelse"), "förför");});
test("förförelsen -> förför", function() {deepEqual( Stem("förförelsen"), "förför");});
test("förföriska -> förförisk", function() {deepEqual( Stem("förföriska"), "förförisk");});
test("förföriskt -> förförisk", function() {deepEqual( Stem("förföriskt"), "förförisk");});
test("förfört -> förfört", function() {deepEqual( Stem("förfört"), "förfört");});
test("förgallrade -> förgallr", function() {deepEqual( Stem("förgallrade"), "förgallr");});
test("förge -> förg", function() {deepEqual( Stem("förge"), "förg");});
test("förgick -> förgick", function() {deepEqual( Stem("förgick"), "förgick");});
test("förgicks -> förgick", function() {deepEqual( Stem("förgicks"), "förgick");});
test("förgifta -> förgift", function() {deepEqual( Stem("förgifta"), "förgift");});
test("förgiftad -> förgift", function() {deepEqual( Stem("förgiftad"), "förgift");});
test("förgiftade -> förgift", function() {deepEqual( Stem("förgiftade"), "förgift");});
test("förgiftat -> förgift", function() {deepEqual( Stem("förgiftat"), "förgift");});
test("förgingo -> förgingo", function() {deepEqual( Stem("förgingo"), "förgingo");});
test("förglömma -> förglömm", function() {deepEqual( Stem("förglömma"), "förglömm");});
test("förgripa -> förgrip", function() {deepEqual( Stem("förgripa"), "förgrip");});
test("förgrunden -> förgrund", function() {deepEqual( Stem("förgrunden"), "förgrund");});
test("förgrämda -> förgrämd", function() {deepEqual( Stem("förgrämda"), "förgrämd");});
test("förgråten -> förgråt", function() {deepEqual( Stem("förgråten"), "förgråt");});
test("förgudade -> förgud", function() {deepEqual( Stem("förgudade"), "förgud");});
test("förgudning -> förgudning", function() {deepEqual( Stem("förgudning"), "förgudning");});
test("förgylda -> förgyld", function() {deepEqual( Stem("förgylda"), "förgyld");});
test("förgylla -> förgyll", function() {deepEqual( Stem("förgylla"), "förgyll");});
test("förgylld -> förgylld", function() {deepEqual( Stem("förgylld"), "förgylld");});
test("förgyllda -> förgylld", function() {deepEqual( Stem("förgyllda"), "förgylld");});
test("förgyllde -> förgylld", function() {deepEqual( Stem("förgyllde"), "förgylld");});
test("förgyllning -> förgyllning", function() {deepEqual( Stem("förgyllning"), "förgyllning");});
test("förgyllt -> förgyllt", function() {deepEqual( Stem("förgyllt"), "förgyllt");});
test("förgäfves -> förgäfv", function() {deepEqual( Stem("förgäfves"), "förgäfv");});
test("förgängelse -> förgäng", function() {deepEqual( Stem("förgängelse"), "förgäng");});
test("förgängelsen -> förgäng", function() {deepEqual( Stem("förgängelsen"), "förgäng");});
test("förgängelsens -> förgäng", function() {deepEqual( Stem("förgängelsens"), "förgäng");});
test("förgängliga -> förgäng", function() {deepEqual( Stem("förgängliga"), "förgäng");});
test("förgät -> förgät", function() {deepEqual( Stem("förgät"), "förgät");});
test("förgäta -> förgät", function() {deepEqual( Stem("förgäta"), "förgät");});
test("förgätande -> förgät", function() {deepEqual( Stem("förgätande"), "förgät");});
test("förgäter -> förgät", function() {deepEqual( Stem("förgäter"), "förgät");});
test("förgätit -> förgätit", function() {deepEqual( Stem("förgätit"), "förgätit");});
test("förgäves -> förgäv", function() {deepEqual( Stem("förgäves"), "förgäv");});
test("förgången -> förgång", function() {deepEqual( Stem("förgången"), "förgång");});
test("förgångna -> förgångn", function() {deepEqual( Stem("förgångna"), "förgångn");});
test("förgår -> förgår", function() {deepEqual( Stem("förgår"), "förgår");});
test("förgården -> förgård", function() {deepEqual( Stem("förgården"), "förgård");});
test("förgårs -> förgår", function() {deepEqual( Stem("förgårs"), "förgår");});
test("förgåtts -> förgåt", function() {deepEqual( Stem("förgåtts"), "förgåt");});
test("förgör -> förgör", function() {deepEqual( Stem("förgör"), "förgör");});
test("förgöra -> förgör", function() {deepEqual( Stem("förgöra"), "förgör");});
test("förhand -> förhand", function() {deepEqual( Stem("förhand"), "förhand");});
test("förhasta -> förhast", function() {deepEqual( Stem("förhasta"), "förhast");});
test("förhastad -> förhast", function() {deepEqual( Stem("förhastad"), "förhast");});
test("förhastade -> förhast", function() {deepEqual( Stem("förhastade"), "förhast");});
test("förhatlig -> förhat", function() {deepEqual( Stem("förhatlig"), "förhat");});
test("förhatliga -> förhat", function() {deepEqual( Stem("förhatliga"), "förhat");});
test("förhexad -> förhex", function() {deepEqual( Stem("förhexad"), "förhex");});
test("förhinder -> förhind", function() {deepEqual( Stem("förhinder"), "förhind");});
test("förhindra -> förhindr", function() {deepEqual( Stem("förhindra"), "förhindr");});
test("förhoppning -> förhoppning", function() {deepEqual( Stem("förhoppning"), "förhoppning");});
test("förhoppningar -> förhoppning", function() {deepEqual( Stem("förhoppningar"), "förhoppning");});
test("förhoppningen -> förhoppning", function() {deepEqual( Stem("förhoppningen"), "förhoppning");});
test("förhoppningens -> förhoppning", function() {deepEqual( Stem("förhoppningens"), "förhoppning");});
test("förhoppningsfull -> förhoppningsfull", function() {deepEqual( Stem("förhoppningsfull"), "förhoppningsfull");});
test("förhänge -> förhäng", function() {deepEqual( Stem("förhänge"), "förhäng");});
test("förhäpnade -> förhäpn", function() {deepEqual( Stem("förhäpnade"), "förhäpn");});
test("förhärdade -> förhärd", function() {deepEqual( Stem("förhärdade"), "förhärd");});
test("förhärdadt -> förhärdad", function() {deepEqual( Stem("förhärdadt"), "förhärdad");});
test("förhäxade -> förhäx", function() {deepEqual( Stem("förhäxade"), "förhäx");});
test("förhålla -> förhåll", function() {deepEqual( Stem("förhålla"), "förhåll");});
test("förhållande -> förhåll", function() {deepEqual( Stem("förhållande"), "förhåll");});
test("förhållanden -> förhåll", function() {deepEqual( Stem("förhållanden"), "förhåll");});
test("förhållandena -> förhållanden", function() {deepEqual( Stem("förhållandena"), "förhållanden");});
test("förhållandet -> förhåll", function() {deepEqual( Stem("förhållandet"), "förhåll");});
test("förhållen -> förhåll", function() {deepEqual( Stem("förhållen"), "förhåll");});
test("förhåller -> förhåll", function() {deepEqual( Stem("förhåller"), "förhåll");});
test("förhöjda -> förhöjd", function() {deepEqual( Stem("förhöjda"), "förhöjd");});
test("förhöjdes -> förhöjd", function() {deepEqual( Stem("förhöjdes"), "förhöjd");});
test("förhöjning -> förhöjning", function() {deepEqual( Stem("förhöjning"), "förhöjning");});
test("förhöll -> förhöll", function() {deepEqual( Stem("förhöll"), "förhöll");});
test("förhör -> förhör", function() {deepEqual( Stem("förhör"), "förhör");});
test("förhöra -> förhör", function() {deepEqual( Stem("förhöra"), "förhör");});
test("förhöret -> förhöret", function() {deepEqual( Stem("förhöret"), "förhöret");});
test("förifra -> förifr", function() {deepEqual( Stem("förifra"), "förifr");});
test("förintas -> förint", function() {deepEqual( Stem("förintas"), "förint");});
test("förirrade -> förirr", function() {deepEqual( Stem("förirrade"), "förirr");});
test("förirrat -> förirr", function() {deepEqual( Stem("förirrat"), "förirr");});
test("förjaga -> förjag", function() {deepEqual( Stem("förjaga"), "förjag");});
test("förjagad -> förjag", function() {deepEqual( Stem("förjagad"), "förjag");});
test("förjagades -> förjag", function() {deepEqual( Stem("förjagades"), "förjag");});
test("förjagat -> förjag", function() {deepEqual( Stem("förjagat"), "förjag");});
test("förkasta -> förkast", function() {deepEqual( Stem("förkasta"), "förkast");});
test("förkastade -> förkast", function() {deepEqual( Stem("förkastade"), "förkast");});
test("förkastat -> förkast", function() {deepEqual( Stem("förkastat"), "förkast");});
test("förkastelsedom -> förkastelsedom", function() {deepEqual( Stem("förkastelsedom"), "förkastelsedom");});
test("förklara -> förklar", function() {deepEqual( Stem("förklara"), "förklar");});
test("förklarad -> förklar", function() {deepEqual( Stem("förklarad"), "förklar");});
test("förklarade -> förklar", function() {deepEqual( Stem("förklarade"), "förklar");});
test("förklarande -> förklar", function() {deepEqual( Stem("förklarande"), "förklar");});
test("förklarar -> förklar", function() {deepEqual( Stem("förklarar"), "förklar");});
test("förklaras -> förklar", function() {deepEqual( Stem("förklaras"), "förklar");});
test("förklarat -> förklar", function() {deepEqual( Stem("förklarat"), "förklar");});
test("förklaring -> förklaring", function() {deepEqual( Stem("förklaring"), "förklaring");});
test("förklaringen -> förklaring", function() {deepEqual( Stem("förklaringen"), "förklaring");});
test("förklarlig -> förklar", function() {deepEqual( Stem("förklarlig"), "förklar");});
test("förklemade -> förklem", function() {deepEqual( Stem("förklemade"), "förklem");});
test("förklingar -> förkling", function() {deepEqual( Stem("förklingar"), "förkling");});
test("förklädde -> förkläd", function() {deepEqual( Stem("förklädde"), "förkläd");});
test("förkläde -> förkläd", function() {deepEqual( Stem("förkläde"), "förkläd");});
test("förkläden -> förkläd", function() {deepEqual( Stem("förkläden"), "förkläd");});
test("förklädet -> förklädet", function() {deepEqual( Stem("förklädet"), "förklädet");});
test("förklädnad -> förklädn", function() {deepEqual( Stem("förklädnad"), "förklädn");});
test("förknappningar -> förknappning", function() {deepEqual( Stem("förknappningar"), "förknappning");});
test("förknippade -> förknipp", function() {deepEqual( Stem("förknippade"), "förknipp");});
test("förkofran -> förkofran", function() {deepEqual( Stem("förkofran"), "förkofran");});
test("förkolna -> förkoln", function() {deepEqual( Stem("förkolna"), "förkoln");});
test("förkorta -> förkort", function() {deepEqual( Stem("förkorta"), "förkort");});
test("förkortning -> förkortning", function() {deepEqual( Stem("förkortning"), "förkortning");});
test("förkovrar -> förkovr", function() {deepEqual( Stem("förkovrar"), "förkovr");});
test("förkroppsligade -> förkropps", function() {deepEqual( Stem("förkroppsligade"), "förkropps");});
test("förkrossande -> förkross", function() {deepEqual( Stem("förkrossande"), "förkross");});
test("förkrossat -> förkross", function() {deepEqual( Stem("förkrossat"), "förkross");});
test("förkrosselsens -> förkross", function() {deepEqual( Stem("förkrosselsens"), "förkross");});
test("förkrympta -> förkrympt", function() {deepEqual( Stem("förkrympta"), "förkrympt");});
test("förkunna -> förkun", function() {deepEqual( Stem("förkunna"), "förkun");});
test("förkunnade -> förkun", function() {deepEqual( Stem("förkunnade"), "förkun");});
test("förkunnare -> förkun", function() {deepEqual( Stem("förkunnare"), "förkun");});
test("förkunnelse -> förkunn", function() {deepEqual( Stem("förkunnelse"), "förkunn");});
test("förkyla -> förkyl", function() {deepEqual( Stem("förkyla"), "förkyl");});
test("förkyld -> förkyld", function() {deepEqual( Stem("förkyld"), "förkyld");});
test("förkyler -> förkyl", function() {deepEqual( Stem("förkyler"), "förkyl");});
test("förkylning -> förkylning", function() {deepEqual( Stem("förkylning"), "förkylning");});
test("förkylt -> förkylt", function() {deepEqual( Stem("förkylt"), "förkylt");});
test("förkänning -> förkänning", function() {deepEqual( Stem("förkänning"), "förkänning");});
test("förkänsla -> förkänsl", function() {deepEqual( Stem("förkänsla"), "förkänsl");});
test("förkänslan -> förkänslan", function() {deepEqual( Stem("förkänslan"), "förkänslan");});
test("förkärlek -> förkärlek", function() {deepEqual( Stem("förkärlek"), "förkärlek");});
test("förlag -> förlag", function() {deepEqual( Stem("förlag"), "förlag");});
test("förlaga -> förlag", function() {deepEqual( Stem("förlaga"), "förlag");});
test("förlagan -> förlagan", function() {deepEqual( Stem("förlagan"), "förlagan");});
test("förlama -> förlam", function() {deepEqual( Stem("förlama"), "förlam");});
test("förlamande -> förlam", function() {deepEqual( Stem("förlamande"), "förlam");});
test("förlamning -> förlamning", function() {deepEqual( Stem("förlamning"), "förlamning");});
test("förlast -> förl", function() {deepEqual( Stem("förlast"), "förl");});
test("förlata -> förlat", function() {deepEqual( Stem("förlata"), "förlat");});
test("förledande -> förled", function() {deepEqual( Stem("förledande"), "förled");});
test("förledas -> förled", function() {deepEqual( Stem("förledas"), "förled");});
test("förledd -> förled", function() {deepEqual( Stem("förledd"), "förled");});
test("förlidna -> förlidn", function() {deepEqual( Stem("förlidna"), "förlidn");});
test("förlig -> för", function() {deepEqual( Stem("förlig"), "för");});
test("förlika -> förlik", function() {deepEqual( Stem("förlika"), "förlik");});
test("förliktes -> förlik", function() {deepEqual( Stem("förliktes"), "förlik");});
test("förlist -> förlist", function() {deepEqual( Stem("förlist"), "förlist");});
test("förlita -> förlit", function() {deepEqual( Stem("förlita"), "förlit");});
test("förlitande -> förlit", function() {deepEqual( Stem("förlitande"), "förlit");});
test("förljufvade -> förljufv", function() {deepEqual( Stem("förljufvade"), "förljufv");});
test("förlofning -> förlofning", function() {deepEqual( Stem("förlofning"), "förlofning");});
test("förlopp -> förlopp", function() {deepEqual( Stem("förlopp"), "förlopp");});
test("förlora -> förlor", function() {deepEqual( Stem("förlora"), "förlor");});
test("förlorad -> förlor", function() {deepEqual( Stem("förlorad"), "förlor");});
test("förlorade -> förlor", function() {deepEqual( Stem("förlorade"), "förlor");});
test("förloradt -> förlorad", function() {deepEqual( Stem("förloradt"), "förlorad");});
test("förlorar -> förlor", function() {deepEqual( Stem("förlorar"), "förlor");});
test("förloras -> förlor", function() {deepEqual( Stem("förloras"), "förlor");});
test("förlorat -> förlor", function() {deepEqual( Stem("förlorat"), "förlor");});
test("förlossa -> förloss", function() {deepEqual( Stem("förlossa"), "förloss");});
test("förlossning -> förlossning", function() {deepEqual( Stem("förlossning"), "förlossning");});
test("förlossningen -> förlossning", function() {deepEqual( Stem("förlossningen"), "förlossning");});
test("förlossningsbord -> förlossningsbord", function() {deepEqual( Stem("förlossningsbord"), "förlossningsbord");});
test("förlossningsborden -> förlossningsbord", function() {deepEqual( Stem("förlossningsborden"), "förlossningsbord");});
test("förlossningsbordet -> förlossningsbordet", function() {deepEqual( Stem("förlossningsbordet"), "förlossningsbordet");});
test("förlossningshem -> förlossningshem", function() {deepEqual( Stem("förlossningshem"), "förlossningshem");});
test("förlossningshemmet -> förlossningshemmet", function() {deepEqual( Stem("förlossningshemmet"), "förlossningshemmet");});
test("förlossningspraktikens -> förlossningspraktik", function() {deepEqual( Stem("förlossningspraktikens"), "förlossningspraktik");});
test("förlossningsrummet -> förlossningsrummet", function() {deepEqual( Stem("förlossningsrummet"), "förlossningsrummet");});
test("förlossningssalar -> förlossningssal", function() {deepEqual( Stem("förlossningssalar"), "förlossningssal");});
test("förlossningssalen -> förlossningssal", function() {deepEqual( Stem("förlossningssalen"), "förlossningssal");});
test("förlossningstänger -> förlossningstäng", function() {deepEqual( Stem("förlossningstänger"), "förlossningstäng");});
test("förlov -> förlov", function() {deepEqual( Stem("förlov"), "förlov");});
test("förlova -> förlov", function() {deepEqual( Stem("förlova"), "förlov");});
test("förlovad -> förlov", function() {deepEqual( Stem("förlovad"), "förlov");});
test("förlovade -> förlov", function() {deepEqual( Stem("förlovade"), "förlov");});
test("förlovat -> förlov", function() {deepEqual( Stem("förlovat"), "förlov");});
test("förlovingskalaset -> förlovingskalaset", function() {deepEqual( Stem("förlovingskalaset"), "förlovingskalaset");});
test("förlovning -> förlovning", function() {deepEqual( Stem("förlovning"), "förlovning");});
test("förlovningar -> förlovning", function() {deepEqual( Stem("förlovningar"), "förlovning");});
test("förlovningen -> förlovning", function() {deepEqual( Stem("förlovningen"), "förlovning");});
test("förlovningskalaset -> förlovningskalaset", function() {deepEqual( Stem("förlovningskalaset"), "förlovningskalaset");});
test("förlovningskyssen -> förlovningskyss", function() {deepEqual( Stem("förlovningskyssen"), "förlovningskyss");});
test("förlovningsring -> förlovningsring", function() {deepEqual( Stem("förlovningsring"), "förlovningsring");});
test("förlust -> förlust", function() {deepEqual( Stem("förlust"), "förlust");});
test("förlustelse -> förlust", function() {deepEqual( Stem("förlustelse"), "förlust");});
test("förlustelser -> förlust", function() {deepEqual( Stem("förlustelser"), "förlust");});
test("förlustelseställen -> förlustelseställ", function() {deepEqual( Stem("förlustelseställen"), "förlustelseställ");});
test("förlusten -> förlust", function() {deepEqual( Stem("förlusten"), "förlust");});
test("förlägen -> förläg", function() {deepEqual( Stem("förlägen"), "förläg");});
test("förlägenhet -> förlägen", function() {deepEqual( Stem("förlägenhet"), "förlägen");});
test("förläget -> förläget", function() {deepEqual( Stem("förläget"), "förläget");});
test("förläggare -> förlägg", function() {deepEqual( Stem("förläggare"), "förlägg");});
test("förlägna -> förlägn", function() {deepEqual( Stem("förlägna"), "förlägn");});
test("förlänga -> förläng", function() {deepEqual( Stem("förlänga"), "förläng");});
test("förlängd -> förläng", function() {deepEqual( Stem("förlängd"), "förläng");});
test("förlät -> förlät", function() {deepEqual( Stem("förlät"), "förlät");});
test("förlåt -> förlåt", function() {deepEqual( Stem("förlåt"), "förlåt");});
test("förlåta -> förlåt", function() {deepEqual( Stem("förlåta"), "förlåt");});
test("förlåtas -> förlåt", function() {deepEqual( Stem("förlåtas"), "förlåt");});
test("förlåte -> förlåt", function() {deepEqual( Stem("förlåte"), "förlåt");});
test("förlåtelse -> förlåt", function() {deepEqual( Stem("förlåtelse"), "förlåt");});
test("förlåter -> förlåt", function() {deepEqual( Stem("förlåter"), "förlåt");});
test("förlåtit -> förlåtit", function() {deepEqual( Stem("förlåtit"), "förlåtit");});
test("förlåtlig -> förlåt", function() {deepEqual( Stem("förlåtlig"), "förlåt");});
test("förlåtliga -> förlåt", function() {deepEqual( Stem("förlåtliga"), "förlåt");});
test("förlåtligt -> förlåt", function() {deepEqual( Stem("förlåtligt"), "förlåt");});
test("förlöjliga -> förlöj", function() {deepEqual( Stem("förlöjliga"), "förlöj");});
test("förlöjligande -> förlöj", function() {deepEqual( Stem("förlöjligande"), "förlöj");});
test("förlösande -> förlös", function() {deepEqual( Stem("förlösande"), "förlös");});
test("förlöstes -> förlös", function() {deepEqual( Stem("förlöstes"), "förlös");});
test("förmadde -> förmad", function() {deepEqual( Stem("förmadde"), "förmad");});
test("förmak -> förmak", function() {deepEqual( Stem("förmak"), "förmak");});
test("förmaket -> förmaket", function() {deepEqual( Stem("förmaket"), "förmaket");});
test("förman -> förman", function() {deepEqual( Stem("förman"), "förman");});
test("förmana -> förman", function() {deepEqual( Stem("förmana"), "förman");});
test("förmanade -> förman", function() {deepEqual( Stem("förmanade"), "förman");});
test("förmanande -> förman", function() {deepEqual( Stem("förmanande"), "förman");});
test("förmanen -> förman", function() {deepEqual( Stem("förmanen"), "förman");});
test("förmaning -> förmaning", function() {deepEqual( Stem("förmaning"), "förmaning");});
test("förmaningar -> förmaning", function() {deepEqual( Stem("förmaningar"), "förmaning");});
test("förmaningen -> förmaning", function() {deepEqual( Stem("förmaningen"), "förmaning");});
test("förmans -> förman", function() {deepEqual( Stem("förmans"), "förman");});
test("förmasten -> förmast", function() {deepEqual( Stem("förmasten"), "förmast");});
test("förmening -> förmening", function() {deepEqual( Stem("förmening"), "förmening");});
test("förmiddag -> förmiddag", function() {deepEqual( Stem("förmiddag"), "förmiddag");});
test("förmiddagarna -> förmiddag", function() {deepEqual( Stem("förmiddagarna"), "förmiddag");});
test("förmiddagarne -> förmiddag", function() {deepEqual( Stem("förmiddagarne"), "förmiddag");});
test("förmiddagen -> förmiddag", function() {deepEqual( Stem("förmiddagen"), "förmiddag");});
test("förmiddagens -> förmiddag", function() {deepEqual( Stem("förmiddagens"), "förmiddag");});
test("förmiddags -> förmiddag", function() {deepEqual( Stem("förmiddags"), "förmiddag");});
test("förmiddagsdräkt -> förmiddagsdräk", function() {deepEqual( Stem("förmiddagsdräkt"), "förmiddagsdräk");});
test("förmiddagsvandring -> förmiddagsvandring", function() {deepEqual( Stem("förmiddagsvandring"), "förmiddagsvandring");});
test("förmiddagsvisiterna -> förmiddagsvisit", function() {deepEqual( Stem("förmiddagsvisiterna"), "förmiddagsvisit");});
test("förmildrad -> förmildr", function() {deepEqual( Stem("förmildrad"), "förmildr");});
test("förmildrade -> förmildr", function() {deepEqual( Stem("förmildrade"), "förmildr");});
test("förmildrat -> förmildr", function() {deepEqual( Stem("förmildrat"), "förmildr");});
test("förminskning -> förminskning", function() {deepEqual( Stem("förminskning"), "förminskning");});
test("förmoda -> förmod", function() {deepEqual( Stem("förmoda"), "förmod");});
test("förmodade -> förmod", function() {deepEqual( Stem("förmodade"), "förmod");});
test("förmodan -> förmodan", function() {deepEqual( Stem("förmodan"), "förmodan");});
test("förmodar -> förmod", function() {deepEqual( Stem("förmodar"), "förmod");});
test("förmodat -> förmod", function() {deepEqual( Stem("förmodat"), "förmod");});
test("förmodligen -> förmod", function() {deepEqual( Stem("förmodligen"), "förmod");});
test("förmyndare -> förmynd", function() {deepEqual( Stem("förmyndare"), "förmynd");});
test("förmyndaren -> förmynd", function() {deepEqual( Stem("förmyndaren"), "förmynd");});
test("förmän -> förmän", function() {deepEqual( Stem("förmän"), "förmän");});
test("förmärka -> förmärk", function() {deepEqual( Stem("förmärka"), "förmärk");});
test("förmärkte -> förmärk", function() {deepEqual( Stem("förmärkte"), "förmärk");});
test("förmärs -> förmär", function() {deepEqual( Stem("förmärs"), "förmär");});
test("förmätet -> förmätet", function() {deepEqual( Stem("förmätet"), "förmätet");});
test("förmätliga -> förmät", function() {deepEqual( Stem("förmätliga"), "förmät");});
test("förmå -> förmå", function() {deepEqual( Stem("förmå"), "förmå");});
test("förmådde -> förmåd", function() {deepEqual( Stem("förmådde"), "förmåd");});
test("förmåga -> förmåg", function() {deepEqual( Stem("förmåga"), "förmåg");});
test("förmågan -> förmågan", function() {deepEqual( Stem("förmågan"), "förmågan");});
test("förmål -> förmål", function() {deepEqual( Stem("förmål"), "förmål");});
test("förmån -> förmån", function() {deepEqual( Stem("förmån"), "förmån");});
test("förmånen -> förmån", function() {deepEqual( Stem("förmånen"), "förmån");});
test("förmåner -> förmån", function() {deepEqual( Stem("förmåner"), "förmån");});
test("förmånlig -> förmån", function() {deepEqual( Stem("förmånlig"), "förmån");});
test("förmånliga -> förmån", function() {deepEqual( Stem("förmånliga"), "förmån");});
test("förmånligare -> förmån", function() {deepEqual( Stem("förmånligare"), "förmån");});
test("förmånligast -> förmån", function() {deepEqual( Stem("förmånligast"), "förmån");});
test("förmånligt -> förmån", function() {deepEqual( Stem("förmånligt"), "förmån");});
test("förmår -> förmår", function() {deepEqual( Stem("förmår"), "förmår");});
test("förmås -> förmås", function() {deepEqual( Stem("förmås"), "förmås");});
test("förmått -> förmåt", function() {deepEqual( Stem("förmått"), "förmåt");});
test("förmögen -> förmög", function() {deepEqual( Stem("förmögen"), "förmög");});
test("förmögenhet -> förmögen", function() {deepEqual( Stem("förmögenhet"), "förmögen");});
test("förmögenheten -> förmögen", function() {deepEqual( Stem("förmögenheten"), "förmögen");});
test("förmögenheter -> förmögen", function() {deepEqual( Stem("förmögenheter"), "förmögen");});
test("förmögna -> förmögn", function() {deepEqual( Stem("förmögna"), "förmögn");});
test("förmögnare -> förmögn", function() {deepEqual( Stem("förmögnare"), "förmögn");});
test("förmörkar -> förmörk", function() {deepEqual( Stem("förmörkar"), "förmörk");});
test("förnam -> förnam", function() {deepEqual( Stem("förnam"), "förnam");});
test("förnamn -> förnamn", function() {deepEqual( Stem("förnamn"), "förnamn");});
test("förnedrad -> förnedr", function() {deepEqual( Stem("förnedrad"), "förnedr");});
test("förnedrade -> förnedr", function() {deepEqual( Stem("förnedrade"), "förnedr");});
test("förnedrande -> förnedr", function() {deepEqual( Stem("förnedrande"), "förnedr");});
test("förnedring -> förnedring", function() {deepEqual( Stem("förnedring"), "förnedring");});
test("förneka -> förnek", function() {deepEqual( Stem("förneka"), "förnek");});
test("förnekar -> förnek", function() {deepEqual( Stem("förnekar"), "förnek");});
test("förnimma -> förnimm", function() {deepEqual( Stem("förnimma"), "förnimm");});
test("förnimmelse -> förnimm", function() {deepEqual( Stem("förnimmelse"), "förnimm");});
test("förnimmelser -> förnimm", function() {deepEqual( Stem("förnimmelser"), "förnimm");});
test("förning -> förning", function() {deepEqual( Stem("förning"), "förning");});
test("förnuft -> förnuft", function() {deepEqual( Stem("förnuft"), "förnuft");});
test("förnuftet -> förnuftet", function() {deepEqual( Stem("förnuftet"), "förnuftet");});
test("förnuftets -> förnuftet", function() {deepEqual( Stem("förnuftets"), "förnuftet");});
test("förnuftig -> förnuft", function() {deepEqual( Stem("förnuftig"), "förnuft");});
test("förnuftiga -> förnuft", function() {deepEqual( Stem("förnuftiga"), "förnuft");});
test("förnuftigare -> förnuft", function() {deepEqual( Stem("förnuftigare"), "förnuft");});
test("förnuftigas -> förnuft", function() {deepEqual( Stem("förnuftigas"), "förnuft");});
test("förnuftigt -> förnuft", function() {deepEqual( Stem("förnuftigt"), "förnuft");});
test("förnuftsslut -> förnuftsslut", function() {deepEqual( Stem("förnuftsslut"), "förnuftsslut");});
test("förnummit -> förnummit", function() {deepEqual( Stem("förnummit"), "förnummit");});
test("förnummo -> förnummo", function() {deepEqual( Stem("förnummo"), "förnummo");});
test("förnya -> förny", function() {deepEqual( Stem("förnya"), "förny");});
test("förnyad -> förny", function() {deepEqual( Stem("förnyad"), "förny");});
test("förnyade -> förny", function() {deepEqual( Stem("förnyade"), "förny");});
test("förnyades -> förny", function() {deepEqual( Stem("förnyades"), "förny");});
test("förnyas -> förny", function() {deepEqual( Stem("förnyas"), "förny");});
test("förnyat -> förny", function() {deepEqual( Stem("förnyat"), "förny");});
test("förnäm -> förnäm", function() {deepEqual( Stem("förnäm"), "förnäm");});
test("förnäma -> förnäm", function() {deepEqual( Stem("förnäma"), "förnäm");});
test("förnämare -> förnäm", function() {deepEqual( Stem("förnämare"), "förnäm");});
test("förnämaste -> förnäm", function() {deepEqual( Stem("förnämaste"), "förnäm");});
test("förnämhet -> förnäm", function() {deepEqual( Stem("förnämhet"), "förnäm");});
test("förnämligast -> förnäm", function() {deepEqual( Stem("förnämligast"), "förnäm");});
test("förnämligt -> förnäm", function() {deepEqual( Stem("förnämligt"), "förnäm");});
test("förnämsta -> förnämst", function() {deepEqual( Stem("förnämsta"), "förnämst");});
test("förnämt -> förnämt", function() {deepEqual( Stem("förnämt"), "förnämt");});
test("förnärmad -> förnärm", function() {deepEqual( Stem("förnärmad"), "förnärm");});
test("förnärmat -> förnärm", function() {deepEqual( Stem("förnärmat"), "förnärm");});
test("förnödenheter -> förnöden", function() {deepEqual( Stem("förnödenheter"), "förnöden");});
test("förnöj -> förnöj", function() {deepEqual( Stem("förnöj"), "förnöj");});
test("förnöjd -> förnöjd", function() {deepEqual( Stem("förnöjd"), "förnöjd");});
test("förnöjda -> förnöjd", function() {deepEqual( Stem("förnöjda"), "förnöjd");});
test("förnöjde -> förnöjd", function() {deepEqual( Stem("förnöjde"), "förnöjd");});
test("förnöjdt -> förnöjd", function() {deepEqual( Stem("förnöjdt"), "förnöjd");});
test("förnöjelse -> förnöj", function() {deepEqual( Stem("förnöjelse"), "förnöj");});
test("förnöjsamhet -> förnöjsam", function() {deepEqual( Stem("förnöjsamhet"), "förnöjsam");});
test("förnöjt -> förnöjt", function() {deepEqual( Stem("förnöjt"), "förnöjt");});
test("förnötte -> förnöt", function() {deepEqual( Stem("förnötte"), "förnöt");});
test("förolyckade -> förolyck", function() {deepEqual( Stem("förolyckade"), "förolyck");});
test("förolyckades -> förolyck", function() {deepEqual( Stem("förolyckades"), "förolyck");});
test("förolyckadt -> förolyckad", function() {deepEqual( Stem("förolyckadt"), "förolyckad");});
test("förolämpad -> förolämp", function() {deepEqual( Stem("förolämpad"), "förolämp");});
test("förolämpade -> förolämp", function() {deepEqual( Stem("förolämpade"), "förolämp");});
test("förolämpar -> förolämp", function() {deepEqual( Stem("förolämpar"), "förolämp");});
test("förolämpas -> förolämp", function() {deepEqual( Stem("förolämpas"), "förolämp");});
test("förolämpat -> förolämp", function() {deepEqual( Stem("förolämpat"), "förolämp");});
test("förolämpning -> förolämpning", function() {deepEqual( Stem("förolämpning"), "förolämpning");});
test("förolämpningen -> förolämpning", function() {deepEqual( Stem("förolämpningen"), "förolämpning");});
test("förord -> förord", function() {deepEqual( Stem("förord"), "förord");});
test("förordnande -> förordn", function() {deepEqual( Stem("förordnande"), "förordn");});
test("förordnandet -> förordn", function() {deepEqual( Stem("förordnandet"), "förordn");});
test("förordnat -> förordn", function() {deepEqual( Stem("förordnat"), "förordn");});
test("förorsaka -> förorsak", function() {deepEqual( Stem("förorsaka"), "förorsak");});
test("förorsakade -> förorsak", function() {deepEqual( Stem("förorsakade"), "förorsak");});
test("förorsakat -> förorsak", function() {deepEqual( Stem("förorsakat"), "förorsak");});
test("förorättade -> förorät", function() {deepEqual( Stem("förorättade"), "förorät");});
test("förpestat -> förpest", function() {deepEqual( Stem("förpestat"), "förpest");});
test("förr -> förr", function() {deepEqual( Stem("förr"), "förr");});
test("förra -> förr", function() {deepEqual( Stem("förra"), "förr");});
test("förras -> förr", function() {deepEqual( Stem("förras"), "förr");});
test("förre -> förr", function() {deepEqual( Stem("förre"), "förr");});
test("förres -> förr", function() {deepEqual( Stem("förres"), "förr");});
test("förrgår -> förrgår", function() {deepEqual( Stem("förrgår"), "förrgår");});
test("förringar -> förring", function() {deepEqual( Stem("förringar"), "förring");});
test("förrmak -> förrmak", function() {deepEqual( Stem("förrmak"), "förrmak");});
test("förrstolpiga -> förrstolp", function() {deepEqual( Stem("förrstolpiga"), "förrstolp");});
test("förrunne -> förrun", function() {deepEqual( Stem("förrunne"), "förrun");});
test("förruttnade -> förruttn", function() {deepEqual( Stem("förruttnade"), "förruttn");});
test("förruttnelse -> förruttn", function() {deepEqual( Stem("förruttnelse"), "förruttn");});
test("förryckt -> förryck", function() {deepEqual( Stem("förryckt"), "förryck");});
test("förryckta -> förryck", function() {deepEqual( Stem("förryckta"), "förryck");});
test("förräderi -> förräderi", function() {deepEqual( Stem("förräderi"), "förräderi");});
test("förrädisk -> förrädisk", function() {deepEqual( Stem("förrädisk"), "förrädisk");});
test("förrädiska -> förrädisk", function() {deepEqual( Stem("förrädiska"), "förrädisk");});
test("förrädiske -> förrädisk", function() {deepEqual( Stem("förrädiske"), "förrädisk");});
test("förrädiskt -> förrädisk", function() {deepEqual( Stem("förrädiskt"), "förrädisk");});
test("förrän -> förrän", function() {deepEqual( Stem("förrän"), "förrän");});
test("förråd -> förråd", function() {deepEqual( Stem("förråd"), "förråd");});
test("förråda -> förråd", function() {deepEqual( Stem("förråda"), "förråd");});
test("förrådande -> förråd", function() {deepEqual( Stem("förrådande"), "förråd");});
test("förrådd -> förråd", function() {deepEqual( Stem("förrådd"), "förråd");});
test("förrådde -> förråd", function() {deepEqual( Stem("förrådde"), "förråd");});
test("förråder -> förråd", function() {deepEqual( Stem("förråder"), "förråd");});
test("förrådskamrar -> förrådskamr", function() {deepEqual( Stem("förrådskamrar"), "förrådskamr");});
test("förrådt -> förråd", function() {deepEqual( Stem("förrådt"), "förråd");});
test("förrått -> förråt", function() {deepEqual( Stem("förrått"), "förråt");});
test("försagd -> försag", function() {deepEqual( Stem("försagd"), "försag");});
test("försagde -> försag", function() {deepEqual( Stem("försagde"), "försag");});
test("försagt -> försag", function() {deepEqual( Stem("försagt"), "försag");});
test("försaka -> försak", function() {deepEqual( Stem("försaka"), "försak");});
test("försakade -> försak", function() {deepEqual( Stem("försakade"), "försak");});
test("försakar -> försak", function() {deepEqual( Stem("försakar"), "försak");});
test("försakat -> försak", function() {deepEqual( Stem("försakat"), "försak");});
test("försakelse -> försak", function() {deepEqual( Stem("försakelse"), "försak");});
test("försakelsen -> försak", function() {deepEqual( Stem("försakelsen"), "försak");});
test("försakelsens -> försak", function() {deepEqual( Stem("försakelsens"), "försak");});
test("försakelser -> försak", function() {deepEqual( Stem("försakelser"), "försak");});
test("försakrade -> försakr", function() {deepEqual( Stem("försakrade"), "försakr");});
test("försam -> försam", function() {deepEqual( Stem("försam"), "försam");});
test("församlade -> församl", function() {deepEqual( Stem("församlade"), "församl");});
test("församladt -> församlad", function() {deepEqual( Stem("församladt"), "församlad");});
test("församling -> församling", function() {deepEqual( Stem("församling"), "församling");});
test("församlingen -> församling", function() {deepEqual( Stem("församlingen"), "församling");});
test("församlingens -> församling", function() {deepEqual( Stem("församlingens"), "församling");});
test("försatt -> försat", function() {deepEqual( Stem("försatt"), "försat");});
test("försatte -> försat", function() {deepEqual( Stem("försatte"), "försat");});
test("försattes -> försat", function() {deepEqual( Stem("försattes"), "försat");});
test("förse -> förs", function() {deepEqual( Stem("förse"), "förs");});
test("försedd -> försed", function() {deepEqual( Stem("försedd"), "försed");});
test("försedda -> försed", function() {deepEqual( Stem("försedda"), "försed");});
test("försedt -> försed", function() {deepEqual( Stem("försedt"), "försed");});
test("förseelse -> förse", function() {deepEqual( Stem("förseelse"), "förse");});
test("förseglade -> försegl", function() {deepEqual( Stem("förseglade"), "försegl");});
test("försenad -> försen", function() {deepEqual( Stem("försenad"), "försen");});
test("försett -> förset", function() {deepEqual( Stem("försett"), "förset");});
test("försiggick -> försiggick", function() {deepEqual( Stem("försiggick"), "försiggick");});
test("försigginge -> försigging", function() {deepEqual( Stem("försigginge"), "försigging");});
test("försiggingo -> försiggingo", function() {deepEqual( Stem("försiggingo"), "försiggingo");});
test("försiggår -> försiggår", function() {deepEqual( Stem("försiggår"), "försiggår");});
test("försiggått -> försiggåt", function() {deepEqual( Stem("försiggått"), "försiggåt");});
test("försigtig -> försigt", function() {deepEqual( Stem("försigtig"), "försigt");});
test("försigtighet -> försigt", function() {deepEqual( Stem("försigtighet"), "försigt");});
test("försigtigt -> försigt", function() {deepEqual( Stem("försigtigt"), "försigt");});
test("försik -> försik", function() {deepEqual( Stem("försik"), "försik");});
test("försiktig -> försikt", function() {deepEqual( Stem("försiktig"), "försikt");});
test("försiktiga -> försikt", function() {deepEqual( Stem("försiktiga"), "försikt");});
test("försiktighet -> försikt", function() {deepEqual( Stem("försiktighet"), "försikt");});
test("försiktighetsmått -> försiktighetsmåt", function() {deepEqual( Stem("försiktighetsmått"), "försiktighetsmåt");});
test("försiktighetspredikan -> försiktighetspredikan", function() {deepEqual( Stem("försiktighetspredikan"), "försiktighetspredikan");});
test("försiktigt -> försikt", function() {deepEqual( Stem("försiktigt"), "försikt");});
test("försiktigtvis -> försiktigtvis", function() {deepEqual( Stem("försiktigtvis"), "försiktigtvis");});
test("försjunka -> försjunk", function() {deepEqual( Stem("försjunka"), "försjunk");});
test("försjunkna -> försjunkn", function() {deepEqual( Stem("försjunkna"), "försjunkn");});
test("försjönk -> försjönk", function() {deepEqual( Stem("försjönk"), "försjönk");});
test("förskaffade -> förskaff", function() {deepEqual( Stem("förskaffade"), "förskaff");});
test("förskaffar -> förskaff", function() {deepEqual( Stem("förskaffar"), "förskaff");});
test("förskaffat -> förskaff", function() {deepEqual( Stem("förskaffat"), "förskaff");});
test("förskjuten -> förskjut", function() {deepEqual( Stem("förskjuten"), "förskjut");});
test("förskjuter -> förskjut", function() {deepEqual( Stem("förskjuter"), "förskjut");});
test("förskjutit -> förskjutit", function() {deepEqual( Stem("förskjutit"), "förskjutit");});
test("förskjutne -> förskjutn", function() {deepEqual( Stem("förskjutne"), "förskjutn");});
test("förskona -> förskon", function() {deepEqual( Stem("förskona"), "förskon");});
test("förskonad -> förskon", function() {deepEqual( Stem("förskonad"), "förskon");});
test("förskott -> förskot", function() {deepEqual( Stem("förskott"), "förskot");});
test("förskrev -> förskrev", function() {deepEqual( Stem("förskrev"), "förskrev");});
test("förskräckelse -> förskräck", function() {deepEqual( Stem("förskräckelse"), "förskräck");});
test("förskräckes -> förskräck", function() {deepEqual( Stem("förskräckes"), "förskräck");});
test("förskräckiigt -> förskräcki", function() {deepEqual( Stem("förskräckiigt"), "förskräcki");});
test("förskräcklig -> förskräck", function() {deepEqual( Stem("förskräcklig"), "förskräck");});
test("förskräckliga -> förskräck", function() {deepEqual( Stem("förskräckliga"), "förskräck");});
test("förskräckligaste -> förskräck", function() {deepEqual( Stem("förskräckligaste"), "förskräck");});
test("förskräckligt -> förskräck", function() {deepEqual( Stem("förskräckligt"), "förskräck");});
test("förskräckt -> förskräck", function() {deepEqual( Stem("förskräckt"), "förskräck");});
test("förskräckta -> förskräck", function() {deepEqual( Stem("förskräckta"), "förskräck");});
test("förskrämd -> förskrämd", function() {deepEqual( Stem("förskrämd"), "förskrämd");});
test("förskrämda -> förskrämd", function() {deepEqual( Stem("förskrämda"), "förskrämd");});
test("förskrämt -> förskrämt", function() {deepEqual( Stem("förskrämt"), "förskrämt");});
test("förskyllan -> förskyllan", function() {deepEqual( Stem("förskyllan"), "förskyllan");});
test("försköna -> förskön", function() {deepEqual( Stem("försköna"), "förskön");});
test("förskönandet -> förskön", function() {deepEqual( Stem("förskönandet"), "förskön");});
test("försköningar -> försköning", function() {deepEqual( Stem("försköningar"), "försköning");});
test("försköte -> försköt", function() {deepEqual( Stem("försköte"), "försköt");});
test("förslag -> förslag", function() {deepEqual( Stem("förslag"), "förslag");});
test("förslaget -> förslaget", function() {deepEqual( Stem("förslaget"), "förslaget");});
test("förslagets -> förslaget", function() {deepEqual( Stem("förslagets"), "förslaget");});
test("förslappade -> förslapp", function() {deepEqual( Stem("förslappade"), "förslapp");});
test("förslog -> förslog", function() {deepEqual( Stem("förslog"), "förslog");});
test("förslår -> förslår", function() {deepEqual( Stem("förslår"), "förslår");});
test("försmak -> försmak", function() {deepEqual( Stem("försmak"), "försmak");});
test("försmaken -> försmak", function() {deepEqual( Stem("försmaken"), "försmak");});
test("försmädelse -> försmäd", function() {deepEqual( Stem("försmädelse"), "försmäd");});
test("försmädlig -> försmäd", function() {deepEqual( Stem("försmädlig"), "försmäd");});
test("försmädligt -> försmäd", function() {deepEqual( Stem("försmädligt"), "försmäd");});
test("försmå -> försmå", function() {deepEqual( Stem("försmå"), "försmå");});
test("försmådd -> försmåd", function() {deepEqual( Stem("försmådd"), "försmåd");});
test("försmådda -> försmåd", function() {deepEqual( Stem("försmådda"), "försmåd");});
test("försmådde -> försmåd", function() {deepEqual( Stem("försmådde"), "försmåd");});
test("försmår -> försmår", function() {deepEqual( Stem("försmår"), "försmår");});
test("försmått -> försmåt", function() {deepEqual( Stem("försmått"), "försmåt");});
test("försoffas -> försoff", function() {deepEqual( Stem("försoffas"), "försoff");});
test("försofva -> försofv", function() {deepEqual( Stem("försofva"), "försofv");});
test("försoka -> försok", function() {deepEqual( Stem("försoka"), "försok");});
test("försona -> förson", function() {deepEqual( Stem("försona"), "förson");});
test("försonad -> förson", function() {deepEqual( Stem("försonad"), "förson");});
test("försonade -> förson", function() {deepEqual( Stem("försonade"), "förson");});
test("försonande -> förson", function() {deepEqual( Stem("försonande"), "förson");});
test("försonat -> förson", function() {deepEqual( Stem("försonat"), "förson");});
test("försoning -> försoning", function() {deepEqual( Stem("försoning"), "försoning");});
test("försoningen -> försoning", function() {deepEqual( Stem("försoningen"), "försoning");});
test("försoningsfanan -> försoningsfanan", function() {deepEqual( Stem("försoningsfanan"), "försoningsfanan");});
test("försonligt -> förson", function() {deepEqual( Stem("försonligt"), "förson");});
test("försorg -> försorg", function() {deepEqual( Stem("försorg"), "försorg");});
test("försover -> försov", function() {deepEqual( Stem("försover"), "försov");});
test("förspeglingen -> förspegling", function() {deepEqual( Stem("förspeglingen"), "förspegling");});
test("förspelet -> förspelet", function() {deepEqual( Stem("förspelet"), "förspelet");});
test("förspildt -> förspild", function() {deepEqual( Stem("förspildt"), "förspild");});
test("förspilla -> förspill", function() {deepEqual( Stem("förspilla"), "förspill");});
test("förspilld -> förspilld", function() {deepEqual( Stem("förspilld"), "förspilld");});
test("förspillda -> förspilld", function() {deepEqual( Stem("förspillda"), "förspilld");});
test("förspilt -> förspilt", function() {deepEqual( Stem("förspilt"), "förspilt");});
test("förspordes -> förspord", function() {deepEqual( Stem("förspordes"), "förspord");});
test("försprång -> försprång", function() {deepEqual( Stem("försprång"), "försprång");});
test("förspända -> förspänd", function() {deepEqual( Stem("förspända"), "förspänd");});
test("förspänt -> förspänt", function() {deepEqual( Stem("förspänt"), "förspänt");});
test("först -> först", function() {deepEqual( Stem("först"), "först");});
test("första -> först", function() {deepEqual( Stem("första"), "först");});
test("förstadsgata -> förstadsgat", function() {deepEqual( Stem("förstadsgata"), "förstadsgat");});
test("förstar -> först", function() {deepEqual( Stem("förstar"), "först");});
test("förstas -> först", function() {deepEqual( Stem("förstas"), "först");});
test("förstasida -> förstasid", function() {deepEqual( Stem("förstasida"), "förstasid");});
test("förste -> först", function() {deepEqual( Stem("förste"), "först");});
test("förstenad -> försten", function() {deepEqual( Stem("förstenad"), "försten");});
test("förstenade -> försten", function() {deepEqual( Stem("förstenade"), "försten");});
test("förstfödde -> förstföd", function() {deepEqual( Stem("förstfödde"), "förstföd");});
test("förstfödslorätt -> förstfödslorät", function() {deepEqual( Stem("förstfödslorätt"), "förstfödslorät");});
test("förstklassigt -> förstklass", function() {deepEqual( Stem("förstklassigt"), "förstklass");});
test("förstkommande -> förstkomm", function() {deepEqual( Stem("förstkommande"), "förstkomm");});
test("förstnämda -> förstnämd", function() {deepEqual( Stem("förstnämda"), "förstnämd");});
test("förstod -> förstod", function() {deepEqual( Stem("förstod"), "förstod");});
test("förstodo -> förstodo", function() {deepEqual( Stem("förstodo"), "förstodo");});
test("förstorad -> förstor", function() {deepEqual( Stem("förstorad"), "förstor");});
test("förstorade -> förstor", function() {deepEqual( Stem("förstorade"), "förstor");});
test("förstorades -> förstor", function() {deepEqual( Stem("förstorades"), "förstor");});
test("försträcka -> försträck", function() {deepEqual( Stem("försträcka"), "försträck");});
test("försträckte -> försträck", function() {deepEqual( Stem("försträckte"), "försträck");});
test("förströ -> förströ", function() {deepEqual( Stem("förströ"), "förströ");});
test("förströdd -> förströd", function() {deepEqual( Stem("förströdd"), "förströd");});
test("förströelse -> förströ", function() {deepEqual( Stem("förströelse"), "förströ");});
test("förströelser -> förströ", function() {deepEqual( Stem("förströelser"), "förströ");});
test("förströs -> förströs", function() {deepEqual( Stem("förströs"), "förströs");});
test("förstrött -> förströt", function() {deepEqual( Stem("förstrött"), "förströt");});
test("förstubro -> förstubro", function() {deepEqual( Stem("förstubro"), "förstubro");});
test("förstucken -> förstuck", function() {deepEqual( Stem("förstucken"), "förstuck");});
test("förstudörrn -> förstudörrn", function() {deepEqual( Stem("förstudörrn"), "förstudörrn");});
test("förstuga -> förstug", function() {deepEqual( Stem("förstuga"), "förstug");});
test("förstugan -> förstugan", function() {deepEqual( Stem("förstugan"), "förstugan");});
test("förstugkvisten -> förstugkvist", function() {deepEqual( Stem("förstugkvisten"), "förstugkvist");});
test("förstugubron -> förstugubron", function() {deepEqual( Stem("förstugubron"), "förstugubron");});
test("förstugudörren -> förstugudörr", function() {deepEqual( Stem("förstugudörren"), "förstugudörr");});
test("förstuguqvistarne -> förstuguqvist", function() {deepEqual( Stem("förstuguqvistarne"), "förstuguqvist");});
test("förstuguqvisten -> förstuguqvist", function() {deepEqual( Stem("förstuguqvisten"), "förstuguqvist");});
test("förstulen -> förstul", function() {deepEqual( Stem("förstulen"), "förstul");});
test("förstulet -> förstulet", function() {deepEqual( Stem("förstulet"), "förstulet");});
test("förstulna -> förstuln", function() {deepEqual( Stem("förstulna"), "förstuln");});
test("förstummad -> förstumm", function() {deepEqual( Stem("förstummad"), "förstumm");});
test("förstummades -> förstumm", function() {deepEqual( Stem("förstummades"), "förstumm");});
test("förstälda -> förstäld", function() {deepEqual( Stem("förstälda"), "förstäld");});
test("förställa -> förställ", function() {deepEqual( Stem("förställa"), "förställ");});
test("förställd -> förställd", function() {deepEqual( Stem("förställd"), "förställd");});
test("förställda -> förställd", function() {deepEqual( Stem("förställda"), "förställd");});
test("förställing -> förställing", function() {deepEqual( Stem("förställing"), "förställing");});
test("förställning -> förställning", function() {deepEqual( Stem("förställning"), "förställning");});
test("förstämd -> förstämd", function() {deepEqual( Stem("förstämd"), "förstämd");});
test("förstämda -> förstämd", function() {deepEqual( Stem("förstämda"), "förstämd");});
test("förständiga -> förständ", function() {deepEqual( Stem("förständiga"), "förständ");});
test("förstärka -> förstärk", function() {deepEqual( Stem("förstärka"), "förstärk");});
test("förstärkt -> förstärk", function() {deepEqual( Stem("förstärkt"), "förstärk");});
test("förstå -> förstå", function() {deepEqual( Stem("förstå"), "förstå");});
test("förståelse -> förstå", function() {deepEqual( Stem("förståelse"), "förstå");});
test("förstående -> förståend", function() {deepEqual( Stem("förstående"), "förståend");});
test("förstånd -> förstånd", function() {deepEqual( Stem("förstånd"), "förstånd");});
test("förståndet -> förståndet", function() {deepEqual( Stem("förståndet"), "förståndet");});
test("förståndets -> förståndet", function() {deepEqual( Stem("förståndets"), "förståndet");});
test("förståndig -> förstånd", function() {deepEqual( Stem("förståndig"), "förstånd");});
test("förståndiga -> förstånd", function() {deepEqual( Stem("förståndiga"), "förstånd");});
test("förståndigare -> förstånd", function() {deepEqual( Stem("förståndigare"), "förstånd");});
test("förståndigt -> förstånd", function() {deepEqual( Stem("förståndigt"), "förstånd");});
test("förstår -> förstår", function() {deepEqual( Stem("förstår"), "förstår");});
test("förstås -> förstås", function() {deepEqual( Stem("förstås"), "förstås");});
test("förstått -> förståt", function() {deepEqual( Stem("förstått"), "förståt");});
test("förstör -> förstör", function() {deepEqual( Stem("förstör"), "förstör");});
test("förstöra -> förstör", function() {deepEqual( Stem("förstöra"), "förstör");});
test("förstörande -> förstör", function() {deepEqual( Stem("förstörande"), "förstör");});
test("förstörd -> förstörd", function() {deepEqual( Stem("förstörd"), "förstörd");});
test("förstörda -> förstörd", function() {deepEqual( Stem("förstörda"), "förstörd");});
test("förstörde -> förstörd", function() {deepEqual( Stem("förstörde"), "förstörd");});
test("förstörelsen -> förstör", function() {deepEqual( Stem("förstörelsen"), "förstör");});
test("förstörs -> förstör", function() {deepEqual( Stem("förstörs"), "förstör");});
test("förstört -> förstört", function() {deepEqual( Stem("förstört"), "förstört");});
test("försumlighet -> försum", function() {deepEqual( Stem("försumlighet"), "försum");});
test("försumma -> försumm", function() {deepEqual( Stem("försumma"), "försumm");});
test("försummade -> försumm", function() {deepEqual( Stem("försummade"), "försumm");});
test("försummadt -> försummad", function() {deepEqual( Stem("försummadt"), "försummad");});
test("försummas -> försumm", function() {deepEqual( Stem("försummas"), "försumm");});
test("försummat -> försumm", function() {deepEqual( Stem("försummat"), "försumm");});
test("försummelse -> försumm", function() {deepEqual( Stem("försummelse"), "försumm");});
test("försupen -> försup", function() {deepEqual( Stem("försupen"), "försup");});
test("försupna -> försupn", function() {deepEqual( Stem("försupna"), "försupn");});
test("försutten -> försut", function() {deepEqual( Stem("försutten"), "försut");});
test("försvaga -> försvag", function() {deepEqual( Stem("försvaga"), "försvag");});
test("försvagad -> försvag", function() {deepEqual( Stem("försvagad"), "försvag");});
test("försvagade -> försvag", function() {deepEqual( Stem("försvagade"), "försvag");});
test("försvagat -> försvag", function() {deepEqual( Stem("försvagat"), "försvag");});
test("försvann -> försvan", function() {deepEqual( Stem("försvann"), "försvan");});
test("försvar -> försv", function() {deepEqual( Stem("försvar"), "försv");});
test("försvara -> försvar", function() {deepEqual( Stem("försvara"), "försvar");});
test("försvarade -> försvar", function() {deepEqual( Stem("försvarade"), "försvar");});
test("försvarare -> försvar", function() {deepEqual( Stem("försvarare"), "försvar");});
test("försvarligt -> försvar", function() {deepEqual( Stem("försvarligt"), "försvar");});
test("försvinna -> försvin", function() {deepEqual( Stem("försvinna"), "försvin");});
test("försvinnande -> försvin", function() {deepEqual( Stem("försvinnande"), "försvin");});
test("försvinner -> försvin", function() {deepEqual( Stem("försvinner"), "försvin");});
test("försvunn -> försvun", function() {deepEqual( Stem("försvunn"), "försvun");});
test("försvunna -> försvun", function() {deepEqual( Stem("försvunna"), "försvun");});
test("försvunne -> försvun", function() {deepEqual( Stem("försvunne"), "försvun");});
test("försvunnen -> försvun", function() {deepEqual( Stem("försvunnen"), "försvun");});
test("försvunnet -> försvunnet", function() {deepEqual( Stem("försvunnet"), "försvunnet");});
test("försvunnit -> försvunnit", function() {deepEqual( Stem("försvunnit"), "försvunnit");});
test("försvunno -> försvunno", function() {deepEqual( Stem("försvunno"), "försvunno");});
test("försyn -> försyn", function() {deepEqual( Stem("försyn"), "försyn");});
test("försynen -> försyn", function() {deepEqual( Stem("försynen"), "försyn");});
test("försäkra -> försäkr", function() {deepEqual( Stem("försäkra"), "försäkr");});
test("försäkrade -> försäkr", function() {deepEqual( Stem("försäkrade"), "försäkr");});
test("försäkran -> försäkran", function() {deepEqual( Stem("försäkran"), "försäkran");});
test("försäkrar -> försäkr", function() {deepEqual( Stem("försäkrar"), "försäkr");});
test("försäkrat -> försäkr", function() {deepEqual( Stem("försäkrat"), "försäkr");});
test("försäkringar -> försäkring", function() {deepEqual( Stem("försäkringar"), "försäkring");});
test("försäljarna -> försälj", function() {deepEqual( Stem("försäljarna"), "försälj");});
test("försäljning -> försäljning", function() {deepEqual( Stem("försäljning"), "försäljning");});
test("försände -> försänd", function() {deepEqual( Stem("försände"), "försänd");});
test("försätta -> försät", function() {deepEqual( Stem("försätta"), "försät");});
test("försåtligt -> försåt", function() {deepEqual( Stem("försåtligt"), "försåt");});
test("försök -> försök", function() {deepEqual( Stem("försök"), "försök");});
test("försöka -> försök", function() {deepEqual( Stem("försöka"), "försök");});
test("försöker -> försök", function() {deepEqual( Stem("försöker"), "försök");});
test("försöket -> försöket", function() {deepEqual( Stem("försöket"), "försöket");});
test("försökt -> försök", function() {deepEqual( Stem("försökt"), "försök");});
test("försökte -> försök", function() {deepEqual( Stem("försökte"), "försök");});
test("försörjningsinrättningar -> försörjningsinrättning", function() {deepEqual( Stem("försörjningsinrättningar"), "försörjningsinrättning");});
test("fört -> fört", function() {deepEqual( Stem("fört"), "fört");});
test("förtaga -> förtag", function() {deepEqual( Stem("förtaga"), "förtag");});
test("förtager -> förtag", function() {deepEqual( Stem("förtager"), "förtag");});
test("förtagit -> förtagit", function() {deepEqual( Stem("förtagit"), "förtagit");});
test("förtal -> förtal", function() {deepEqual( Stem("förtal"), "förtal");});
test("förtala -> förtal", function() {deepEqual( Stem("förtala"), "förtal");});
test("förteg -> förteg", function() {deepEqual( Stem("förteg"), "förteg");});
test("förtegat -> förteg", function() {deepEqual( Stem("förtegat"), "förteg");});
test("förteget -> förteget", function() {deepEqual( Stem("förteget"), "förteget");});
test("förtid -> förtid", function() {deepEqual( Stem("förtid"), "förtid");});
test("förtiga -> fört", function() {deepEqual( Stem("förtiga"), "fört");});
test("förtigas -> fört", function() {deepEqual( Stem("förtigas"), "fört");});
test("förtjena -> förtjen", function() {deepEqual( Stem("förtjena"), "förtjen");});
test("förtjenar -> förtjen", function() {deepEqual( Stem("förtjenar"), "förtjen");});
test("förtjenst -> förtjenst", function() {deepEqual( Stem("förtjenst"), "förtjenst");});
test("förtjensten -> förtjenst", function() {deepEqual( Stem("förtjensten"), "förtjenst");});
test("förtjenster -> förtjenst", function() {deepEqual( Stem("förtjenster"), "förtjenst");});
test("förtjenstfull -> förtjenstfull", function() {deepEqual( Stem("förtjenstfull"), "förtjenstfull");});
test("förtjenstfullare -> förtjenstfull", function() {deepEqual( Stem("förtjenstfullare"), "förtjenstfull");});
test("förtjent -> förtjent", function() {deepEqual( Stem("förtjent"), "förtjent");});
test("förtjusande -> förtjus", function() {deepEqual( Stem("förtjusande"), "förtjus");});
test("förtjusning -> förtjusning", function() {deepEqual( Stem("förtjusning"), "förtjusning");});
test("förtjust -> förtjust", function() {deepEqual( Stem("förtjust"), "förtjust");});
test("förtjusta -> förtjust", function() {deepEqual( Stem("förtjusta"), "förtjust");});
test("förtjuste -> förtjust", function() {deepEqual( Stem("förtjuste"), "förtjust");});
test("förtjäna -> förtjän", function() {deepEqual( Stem("förtjäna"), "förtjän");});
test("förtjänade -> förtjän", function() {deepEqual( Stem("förtjänade"), "förtjän");});
test("förtjänar -> förtjän", function() {deepEqual( Stem("förtjänar"), "förtjän");});
test("förtjänst -> förtjänst", function() {deepEqual( Stem("förtjänst"), "förtjänst");});
test("förtjänster -> förtjänst", function() {deepEqual( Stem("förtjänster"), "förtjänst");});
test("förtjänstfulla -> förtjänstfull", function() {deepEqual( Stem("förtjänstfulla"), "förtjänstfull");});
test("förtjänstfullt -> förtjänstfull", function() {deepEqual( Stem("förtjänstfullt"), "förtjänstfull");});
test("förtjänt -> förtjänt", function() {deepEqual( Stem("förtjänt"), "förtjänt");});
test("förtjänte -> förtjänt", function() {deepEqual( Stem("förtjänte"), "förtjänt");});
test("förtoppen -> förtopp", function() {deepEqual( Stem("förtoppen"), "förtopp");});
test("förtorkade -> förtork", function() {deepEqual( Stem("förtorkade"), "förtork");});
test("förtret -> förtret", function() {deepEqual( Stem("förtret"), "förtret");});
test("förtreta -> förtret", function() {deepEqual( Stem("förtreta"), "förtret");});
test("förtretad -> förtret", function() {deepEqual( Stem("förtretad"), "förtret");});
test("förtretat -> förtret", function() {deepEqual( Stem("förtretat"), "förtret");});
test("förtreten -> förtret", function() {deepEqual( Stem("förtreten"), "förtret");});
test("förtreter -> förtret", function() {deepEqual( Stem("förtreter"), "förtret");});
test("förtretliga -> förtret", function() {deepEqual( Stem("förtretliga"), "förtret");});
test("förtretlighet -> förtret", function() {deepEqual( Stem("förtretlighet"), "förtret");});
test("förtretligheter -> förtret", function() {deepEqual( Stem("förtretligheter"), "förtret");});
test("förtro -> förtro", function() {deepEqual( Stem("förtro"), "förtro");});
test("förtrodde -> förtrod", function() {deepEqual( Stem("förtrodde"), "förtrod");});
test("förtroende -> förtroend", function() {deepEqual( Stem("förtroende"), "förtroend");});
test("förtroendebefattningar -> förtroendebefattning", function() {deepEqual( Stem("förtroendebefattningar"), "förtroendebefattning");});
test("förtroendefullt -> förtroendefull", function() {deepEqual( Stem("förtroendefullt"), "förtroendefull");});
test("förtroenden -> förtroend", function() {deepEqual( Stem("förtroenden"), "förtroend");});
test("förtroendet -> förtroendet", function() {deepEqual( Stem("förtroendet"), "förtroendet");});
test("förtroendeväckande -> förtroendeväck", function() {deepEqual( Stem("förtroendeväckande"), "förtroendeväck");});
test("förtrogen -> förtrog", function() {deepEqual( Stem("förtrogen"), "förtrog");});
test("förtrogna -> förtrogn", function() {deepEqual( Stem("förtrogna"), "förtrogn");});
test("förtrogne -> förtrogn", function() {deepEqual( Stem("förtrogne"), "förtrogn");});
test("förtrolig -> förtro", function() {deepEqual( Stem("förtrolig"), "förtro");});
test("förtroliga -> förtro", function() {deepEqual( Stem("förtroliga"), "förtro");});
test("förtroligare -> förtro", function() {deepEqual( Stem("förtroligare"), "förtro");});
test("förtroligaste -> förtro", function() {deepEqual( Stem("förtroligaste"), "förtro");});
test("förtrolighet -> förtro", function() {deepEqual( Stem("förtrolighet"), "förtro");});
test("förtroligheten -> förtro", function() {deepEqual( Stem("förtroligheten"), "förtro");});
test("förtroligt -> förtro", function() {deepEqual( Stem("förtroligt"), "förtro");});
test("förtrolla -> förtroll", function() {deepEqual( Stem("förtrolla"), "förtroll");});
test("förtrollade -> förtroll", function() {deepEqual( Stem("förtrollade"), "förtroll");});
test("förtrollades -> förtroll", function() {deepEqual( Stem("förtrollades"), "förtroll");});
test("förtrollande -> förtroll", function() {deepEqual( Stem("förtrollande"), "förtroll");});
test("förtrollat -> förtroll", function() {deepEqual( Stem("förtrollat"), "förtroll");});
test("förtrollats -> förtrollat", function() {deepEqual( Stem("förtrollats"), "förtrollat");});
test("förtrollerska -> förtrollersk", function() {deepEqual( Stem("förtrollerska"), "förtrollersk");});
test("förtrollning -> förtrollning", function() {deepEqual( Stem("förtrollning"), "förtrollning");});
test("förtror -> förtr", function() {deepEqual( Stem("förtror"), "förtr");});
test("förtrott -> förtrot", function() {deepEqual( Stem("förtrott"), "förtrot");});
test("förtrytelse -> förtryt", function() {deepEqual( Stem("förtrytelse"), "förtryt");});
test("förtrytelsen -> förtryt", function() {deepEqual( Stem("förtrytelsen"), "förtryt");});
test("förtrytelsens -> förtryt", function() {deepEqual( Stem("förtrytelsens"), "förtryt");});
test("förtryter -> förtryt", function() {deepEqual( Stem("förtryter"), "förtryt");});
test("förtrytsamt -> förtrytsamt", function() {deepEqual( Stem("förtrytsamt"), "förtrytsamt");});
test("förträfflig -> förträff", function() {deepEqual( Stem("förträfflig"), "förträff");});
test("förträffliga -> förträff", function() {deepEqual( Stem("förträffliga"), "förträff");});
test("förträffligaste -> förträff", function() {deepEqual( Stem("förträffligaste"), "förträff");});
test("förträfflige -> förträff", function() {deepEqual( Stem("förträfflige"), "förträff");});
test("förträffligt -> förträff", function() {deepEqual( Stem("förträffligt"), "förträff");});
test("förtrösta -> förtröst", function() {deepEqual( Stem("förtrösta"), "förtröst");});
test("förtröstan -> förtröstan", function() {deepEqual( Stem("förtröstan"), "förtröstan");});
test("förtröstande -> förtröst", function() {deepEqual( Stem("förtröstande"), "förtröst");});
test("förtröstansfullt -> förtröstansfull", function() {deepEqual( Stem("förtröstansfullt"), "förtröstansfull");});
test("förtröstar -> förtröst", function() {deepEqual( Stem("förtröstar"), "förtröst");});
test("förtröt -> förtröt", function() {deepEqual( Stem("förtröt"), "förtröt");});
test("förts -> fört", function() {deepEqual( Stem("förts"), "fört");});
test("förtunnades -> förtun", function() {deepEqual( Stem("förtunnades"), "förtun");});
test("förtvifladt -> förtviflad", function() {deepEqual( Stem("förtvifladt"), "förtviflad");});
test("förtviflan -> förtviflan", function() {deepEqual( Stem("förtviflan"), "förtviflan");});
test("förtvina -> förtvin", function() {deepEqual( Stem("förtvina"), "förtvin");});
test("förtvivlad -> förtvivl", function() {deepEqual( Stem("förtvivlad"), "förtvivl");});
test("förtvivlade -> förtvivl", function() {deepEqual( Stem("förtvivlade"), "förtvivl");});
test("förtvivlan -> förtvivlan", function() {deepEqual( Stem("förtvivlan"), "förtvivlan");});
test("förtvivlat -> förtvivl", function() {deepEqual( Stem("förtvivlat"), "förtvivl");});
test("förty -> förty", function() {deepEqual( Stem("förty"), "förty");});
test("förtäckta -> förtäck", function() {deepEqual( Stem("förtäckta"), "förtäck");});
test("förtälja -> förtälj", function() {deepEqual( Stem("förtälja"), "förtälj");});
test("förtäljde -> förtäljd", function() {deepEqual( Stem("förtäljde"), "förtäljd");});
test("förtäljer -> förtälj", function() {deepEqual( Stem("förtäljer"), "förtälj");});
test("förtäljt -> förtäljt", function() {deepEqual( Stem("förtäljt"), "förtäljt");});
test("förtära -> förtär", function() {deepEqual( Stem("förtära"), "förtär");});
test("förtärande -> förtär", function() {deepEqual( Stem("förtärande"), "förtär");});
test("förtärd -> förtärd", function() {deepEqual( Stem("förtärd"), "förtärd");});
test("förtärde -> förtärd", function() {deepEqual( Stem("förtärde"), "förtärd");});
test("förtärdes -> förtärd", function() {deepEqual( Stem("förtärdes"), "förtärd");});
test("förtärs -> förtär", function() {deepEqual( Stem("förtärs"), "förtär");});
test("förtätade -> förtät", function() {deepEqual( Stem("förtätade"), "förtät");});
test("förtöjd -> förtöjd", function() {deepEqual( Stem("förtöjd"), "förtöjd");});
test("förtörd -> förtörd", function() {deepEqual( Stem("förtörd"), "förtörd");});
test("förtörnad -> förtörn", function() {deepEqual( Stem("förtörnad"), "förtörn");});
test("förunderlig -> förunder", function() {deepEqual( Stem("förunderlig"), "förunder");});
test("förunderliga -> förunder", function() {deepEqual( Stem("förunderliga"), "förunder");});
test("förundra -> förundr", function() {deepEqual( Stem("förundra"), "förundr");});
test("förundrad -> förundr", function() {deepEqual( Stem("förundrad"), "förundr");});
test("förundrade -> förundr", function() {deepEqual( Stem("förundrade"), "förundr");});
test("förundran -> förundran", function() {deepEqual( Stem("förundran"), "förundran");});
test("förundrar -> förundr", function() {deepEqual( Stem("förundrar"), "förundr");});
test("förunnat -> förun", function() {deepEqual( Stem("förunnat"), "förun");});
test("förut -> förut", function() {deepEqual( Stem("förut"), "förut");});
test("förutsatt -> förutsat", function() {deepEqual( Stem("förutsatt"), "förutsat");});
test("förutse -> föruts", function() {deepEqual( Stem("förutse"), "föruts");});
test("förutser -> föruts", function() {deepEqual( Stem("förutser"), "föruts");});
test("förutses -> föruts", function() {deepEqual( Stem("förutses"), "föruts");});
test("förutsett -> förutset", function() {deepEqual( Stem("förutsett"), "förutset");});
test("förutsätter -> förutsät", function() {deepEqual( Stem("förutsätter"), "förutsät");});
test("förutsättningen -> förutsättning", function() {deepEqual( Stem("förutsättningen"), "förutsättning");});
test("förvanad -> förvan", function() {deepEqual( Stem("förvanad"), "förvan");});
test("förvandla -> förvandl", function() {deepEqual( Stem("förvandla"), "förvandl");});
test("förvandlad -> förvandl", function() {deepEqual( Stem("förvandlad"), "förvandl");});
test("förvandlade -> förvandl", function() {deepEqual( Stem("förvandlade"), "förvandl");});
test("förvandlades -> förvandl", function() {deepEqual( Stem("förvandlades"), "förvandl");});
test("förvandlande -> förvandl", function() {deepEqual( Stem("förvandlande"), "förvandl");});
test("förvandlar -> förvandl", function() {deepEqual( Stem("förvandlar"), "förvandl");});
test("förvandlas -> förvandl", function() {deepEqual( Stem("förvandlas"), "förvandl");});
test("förvandlat -> förvandl", function() {deepEqual( Stem("förvandlat"), "förvandl");});
test("förvandling -> förvandling", function() {deepEqual( Stem("förvandling"), "förvandling");});
test("förvandlingen -> förvandling", function() {deepEqual( Stem("förvandlingen"), "förvandling");});
test("förvandlingens -> förvandling", function() {deepEqual( Stem("förvandlingens"), "förvandling");});
test("förvandlingsverk -> förvandlingsverk", function() {deepEqual( Stem("förvandlingsverk"), "förvandlingsverk");});
test("förvar -> förv", function() {deepEqual( Stem("förvar"), "förv");});
test("förvara -> förvar", function() {deepEqual( Stem("förvara"), "förvar");});
test("förvarade -> förvar", function() {deepEqual( Stem("förvarade"), "förvar");});
test("förvarades -> förvar", function() {deepEqual( Stem("förvarades"), "förvar");});
test("förvarar -> förvar", function() {deepEqual( Stem("förvarar"), "förvar");});
test("förvaras -> förvar", function() {deepEqual( Stem("förvaras"), "förvar");});
test("förvarat -> förvar", function() {deepEqual( Stem("förvarat"), "förvar");});
test("förvaringsrum -> förvaringsrum", function() {deepEqual( Stem("förvaringsrum"), "förvaringsrum");});
test("förverkligas -> förverk", function() {deepEqual( Stem("förverkligas"), "förverk");});
test("förvildade -> förvild", function() {deepEqual( Stem("förvildade"), "förvild");});
test("förvilla -> förvill", function() {deepEqual( Stem("förvilla"), "förvill");});
test("förvillade -> förvill", function() {deepEqual( Stem("förvillade"), "förvill");});
test("förvillande -> förvill", function() {deepEqual( Stem("förvillande"), "förvill");});
test("förvillas -> förvill", function() {deepEqual( Stem("förvillas"), "förvill");});
test("förvillelse -> förvill", function() {deepEqual( Stem("förvillelse"), "förvill");});
test("förvirrad -> förvirr", function() {deepEqual( Stem("förvirrad"), "förvirr");});
test("förvirradc -> förvirradc", function() {deepEqual( Stem("förvirradc"), "förvirradc");});
test("förvirrade -> förvirr", function() {deepEqual( Stem("förvirrade"), "förvirr");});
test("förvirrande -> förvirr", function() {deepEqual( Stem("förvirrande"), "förvirr");});
test("förvirras -> förvirr", function() {deepEqual( Stem("förvirras"), "förvirr");});
test("förvirrat -> förvirr", function() {deepEqual( Stem("förvirrat"), "förvirr");});
test("förvirring -> förvirring", function() {deepEqual( Stem("förvirring"), "förvirring");});
test("förvirringen -> förvirring", function() {deepEqual( Stem("förvirringen"), "förvirring");});
test("förvisad -> förvis", function() {deepEqual( Stem("förvisad"), "förvis");});
test("förvissa -> förviss", function() {deepEqual( Stem("förvissa"), "förviss");});
test("förvissad -> förviss", function() {deepEqual( Stem("förvissad"), "förviss");});
test("förvissade -> förviss", function() {deepEqual( Stem("förvissade"), "förviss");});
test("förvissar -> förviss", function() {deepEqual( Stem("förvissar"), "förviss");});
test("förvissat -> förviss", function() {deepEqual( Stem("förvissat"), "förviss");});
test("förvisso -> förvisso", function() {deepEqual( Stem("förvisso"), "förvisso");});
test("förvreds -> förvred", function() {deepEqual( Stem("förvreds"), "förvred");});
test("förvrida -> förvrid", function() {deepEqual( Stem("förvrida"), "förvrid");});
test("förvriden -> förvrid", function() {deepEqual( Stem("förvriden"), "förvrid");});
test("förvridet -> förvridet", function() {deepEqual( Stem("förvridet"), "förvridet");});
test("förvridna -> förvridn", function() {deepEqual( Stem("förvridna"), "förvridn");});
test("förvrängd -> förvräng", function() {deepEqual( Stem("förvrängd"), "förvräng");});
test("förvägna -> förvägn", function() {deepEqual( Stem("förvägna"), "förvägn");});
test("förvälvas -> förvälv", function() {deepEqual( Stem("förvälvas"), "förvälv");});
test("förvänad -> förvän", function() {deepEqual( Stem("förvänad"), "förvän");});
test("förvänd -> förvänd", function() {deepEqual( Stem("förvänd"), "förvänd");});
test("förväntan -> förväntan", function() {deepEqual( Stem("förväntan"), "förväntan");});
test("förväntansfull -> förväntansfull", function() {deepEqual( Stem("förväntansfull"), "förväntansfull");});
test("förväntansfulla -> förväntansfull", function() {deepEqual( Stem("förväntansfulla"), "förväntansfull");});
test("förväntningar -> förväntning", function() {deepEqual( Stem("förväntningar"), "förväntning");});
test("förvärfva -> förvärfv", function() {deepEqual( Stem("förvärfva"), "förvärfv");});
test("förvärfvade -> förvärfv", function() {deepEqual( Stem("förvärfvade"), "förvärfv");});
test("förvärfvadt -> förvärfvad", function() {deepEqual( Stem("förvärfvadt"), "förvärfvad");});
test("förvärfvat -> förvärfv", function() {deepEqual( Stem("förvärfvat"), "förvärfv");});
test("förvärrar -> förvärr", function() {deepEqual( Stem("förvärrar"), "förvärr");});
test("förvärva -> förvärv", function() {deepEqual( Stem("förvärva"), "förvärv");});
test("förvärvad -> förvärv", function() {deepEqual( Stem("förvärvad"), "förvärv");});
test("förvärvade -> förvärv", function() {deepEqual( Stem("förvärvade"), "förvärv");});
test("förvärvat -> förvärv", function() {deepEqual( Stem("förvärvat"), "förvärv");});
test("förvärvt -> förvärvt", function() {deepEqual( Stem("förvärvt"), "förvärvt");});
test("förväxling -> förväxling", function() {deepEqual( Stem("förväxling"), "förväxling");});
test("förvåna -> förvån", function() {deepEqual( Stem("förvåna"), "förvån");});
test("förvånad -> förvån", function() {deepEqual( Stem("förvånad"), "förvån");});
test("förvånade -> förvån", function() {deepEqual( Stem("förvånade"), "förvån");});
test("förvånades -> förvån", function() {deepEqual( Stem("förvånades"), "förvån");});
test("förvånande -> förvån", function() {deepEqual( Stem("förvånande"), "förvån");});
test("förvånar -> förvån", function() {deepEqual( Stem("förvånar"), "förvån");});
test("förvånat -> förvån", function() {deepEqual( Stem("förvånat"), "förvån");});
test("förvåning -> förvåning", function() {deepEqual( Stem("förvåning"), "förvåning");});
test("förvånint -> förvånint", function() {deepEqual( Stem("förvånint"), "förvånint");});
test("förvåren -> förvår", function() {deepEqual( Stem("förvåren"), "förvår");});
test("föryngrad -> föryngr", function() {deepEqual( Stem("föryngrad"), "föryngr");});
test("förädlande -> förädl", function() {deepEqual( Stem("förädlande"), "förädl");});
test("förädlar -> förädl", function() {deepEqual( Stem("förädlar"), "förädl");});
test("föräldragården -> föräldragård", function() {deepEqual( Stem("föräldragården"), "föräldragård");});
test("föräldralösa -> föräldralös", function() {deepEqual( Stem("föräldralösa"), "föräldralös");});
test("föräldralöst -> föräldralös", function() {deepEqual( Stem("föräldralöst"), "föräldralös");});
test("föräldrar -> föräldr", function() {deepEqual( Stem("föräldrar"), "föräldr");});
test("föräldrarna -> föräldr", function() {deepEqual( Stem("föräldrarna"), "föräldr");});
test("föräldrarnas -> föräldr", function() {deepEqual( Stem("föräldrarnas"), "föräldr");});
test("föräldrarne -> föräldr", function() {deepEqual( Stem("föräldrarne"), "föräldr");});
test("föräldrars -> föräldrar", function() {deepEqual( Stem("föräldrars"), "föräldrar");});
test("förälskad -> förälsk", function() {deepEqual( Stem("förälskad"), "förälsk");});
test("förälskade -> förälsk", function() {deepEqual( Stem("förälskade"), "förälsk");});
test("förälskat -> förälsk", function() {deepEqual( Stem("förälskat"), "förälsk");});
test("förälskelse -> förälsk", function() {deepEqual( Stem("förälskelse"), "förälsk");});
test("föränderlighet -> föränder", function() {deepEqual( Stem("föränderlighet"), "föränder");});
test("förändra -> förändr", function() {deepEqual( Stem("förändra"), "förändr");});
test("förändrad -> förändr", function() {deepEqual( Stem("förändrad"), "förändr");});
test("förändrades -> förändr", function() {deepEqual( Stem("förändrades"), "förändr");});
test("förändras -> förändr", function() {deepEqual( Stem("förändras"), "förändr");});
test("förändrat -> förändr", function() {deepEqual( Stem("förändrat"), "förändr");});
test("förändring -> förändring", function() {deepEqual( Stem("förändring"), "förändring");});
test("förändringar -> förändring", function() {deepEqual( Stem("förändringar"), "förändring");});
test("förändringen -> förändring", function() {deepEqual( Stem("förändringen"), "förändring");});
test("förärat -> förär", function() {deepEqual( Stem("förärat"), "förär");});
test("föråldrad -> föråldr", function() {deepEqual( Stem("föråldrad"), "föråldr");});
test("föråldrade -> föråldr", function() {deepEqual( Stem("föråldrade"), "föråldr");});
test("föråldrat -> föråldr", function() {deepEqual( Stem("föråldrat"), "föråldr");});
test("förödd -> föröd", function() {deepEqual( Stem("förödd"), "föröd");});
test("förödda -> föröd", function() {deepEqual( Stem("förödda"), "föröd");});
test("förödelsen -> föröd", function() {deepEqual( Stem("förödelsen"), "föröd");});
test("förödelsens -> föröd", function() {deepEqual( Stem("förödelsens"), "föröd");});
test("förödmjuka -> förödmjuk", function() {deepEqual( Stem("förödmjuka"), "förödmjuk");});
test("förödmjukad -> förödmjuk", function() {deepEqual( Stem("förödmjukad"), "förödmjuk");});
test("förödmjukande -> förödmjuk", function() {deepEqual( Stem("förödmjukande"), "förödmjuk");});
test("förödmjukelse -> förödmjuk", function() {deepEqual( Stem("förödmjukelse"), "förödmjuk");});
test("förödmjukelser -> förödmjuk", function() {deepEqual( Stem("förödmjukelser"), "förödmjuk");});
test("förökat -> förök", function() {deepEqual( Stem("förökat"), "förök");});
test("förökning -> förökning", function() {deepEqual( Stem("förökning"), "förökning");});
test("förövas -> föröv", function() {deepEqual( Stem("förövas"), "föröv");});
test("fösa -> fös", function() {deepEqual( Stem("fösa"), "fös");});
test("fött -> fött", function() {deepEqual( Stem("fött"), "fött");});
test("föttcrna -> föttcrn", function() {deepEqual( Stem("föttcrna"), "föttcrn");});
test("fötter -> fött", function() {deepEqual( Stem("fötter"), "fött");});
test("fötterna -> fött", function() {deepEqual( Stem("fötterna"), "fött");});
test("fötts -> fött", function() {deepEqual( Stem("fötts"), "fött");});
test("g -> g", function() {deepEqual( Stem("g"), "g");});
test("ga -> ga", function() {deepEqual( Stem("ga"), "ga");});
test("gabriel -> gabriel", function() {deepEqual( Stem("gabriel"), "gabriel");});
test("gabriella -> gabriell", function() {deepEqual( Stem("gabriella"), "gabriell");});
test("gabriellas -> gabriell", function() {deepEqual( Stem("gabriellas"), "gabriell");});
test("gadd -> gadd", function() {deepEqual( Stem("gadd"), "gadd");});
test("gaf -> gaf", function() {deepEqual( Stem("gaf"), "gaf");});
test("gaffel -> gaffel", function() {deepEqual( Stem("gaffel"), "gaffel");});
test("gafflar -> gaffl", function() {deepEqual( Stem("gafflar"), "gaffl");});
test("gafflarna -> gaffl", function() {deepEqual( Stem("gafflarna"), "gaffl");});
test("gafs -> gaf", function() {deepEqual( Stem("gafs"), "gaf");});
test("gafvel -> gafvel", function() {deepEqual( Stem("gafvel"), "gafvel");});
test("gafvelkammaren -> gafvelkamm", function() {deepEqual( Stem("gafvelkammaren"), "gafvelkamm");});
test("gafveln -> gafveln", function() {deepEqual( Stem("gafveln"), "gafveln");});
test("gagn -> gagn", function() {deepEqual( Stem("gagn"), "gagn");});
test("gagna -> gagn", function() {deepEqual( Stem("gagna"), "gagn");});
test("gagnade -> gagn", function() {deepEqual( Stem("gagnade"), "gagn");});
test("gagnar -> gagn", function() {deepEqual( Stem("gagnar"), "gagn");});
test("gagnat -> gagn", function() {deepEqual( Stem("gagnat"), "gagn");});
test("gagne -> gagn", function() {deepEqual( Stem("gagne"), "gagn");});
test("gagneligast -> gagne", function() {deepEqual( Stem("gagneligast"), "gagne");});
test("gagnlöst -> gagnlös", function() {deepEqual( Stem("gagnlöst"), "gagnlös");});
test("gagns -> gagn", function() {deepEqual( Stem("gagns"), "gagn");});
test("galanerna -> galan", function() {deepEqual( Stem("galanerna"), "galan");});
test("galant -> galant", function() {deepEqual( Stem("galant"), "galant");});
test("galanta -> galant", function() {deepEqual( Stem("galanta"), "galant");});
test("galanteri -> galanteri", function() {deepEqual( Stem("galanteri"), "galanteri");});
test("galeas -> gale", function() {deepEqual( Stem("galeas"), "gale");});
test("galeasen -> galeas", function() {deepEqual( Stem("galeasen"), "galeas");});
test("galen -> gal", function() {deepEqual( Stem("galen"), "gal");});
test("galenskap -> galenskap", function() {deepEqual( Stem("galenskap"), "galenskap");});
test("galenskaper -> galenskap", function() {deepEqual( Stem("galenskaper"), "galenskap");});
test("galet -> galet", function() {deepEqual( Stem("galet"), "galet");});
test("galgen -> galg", function() {deepEqual( Stem("galgen"), "galg");});
test("galjonsbilder -> galjonsbild", function() {deepEqual( Stem("galjonsbilder"), "galjonsbild");});
test("gall -> gall", function() {deepEqual( Stem("gall"), "gall");});
test("gallans -> gallan", function() {deepEqual( Stem("gallans"), "gallan");});
test("galleri -> galleri", function() {deepEqual( Stem("galleri"), "galleri");});
test("galleriet -> galleriet", function() {deepEqual( Stem("galleriet"), "galleriet");});
test("gallerna -> gall", function() {deepEqual( Stem("gallerna"), "gall");});
test("gallfeber -> gallfeb", function() {deepEqual( Stem("gallfeber"), "gallfeb");});
test("gallhumlen -> gallhuml", function() {deepEqual( Stem("gallhumlen"), "gallhuml");});
test("gallhöna -> gallhön", function() {deepEqual( Stem("gallhöna"), "gallhön");});
test("gallimatias -> gallimati", function() {deepEqual( Stem("gallimatias"), "gallimati");});
test("galliska -> gallisk", function() {deepEqual( Stem("galliska"), "gallisk");});
test("gallko -> gallko", function() {deepEqual( Stem("gallko"), "gallko");});
test("gallret -> gallret", function() {deepEqual( Stem("gallret"), "gallret");});
test("gallskrek -> gallskrek", function() {deepEqual( Stem("gallskrek"), "gallskrek");});
test("gallsteklar -> gallstekl", function() {deepEqual( Stem("gallsteklar"), "gallstekl");});
test("galläpplen -> galläppl", function() {deepEqual( Stem("galläpplen"), "galläppl");});
test("galna -> galn", function() {deepEqual( Stem("galna"), "galn");});
test("galning -> galning", function() {deepEqual( Stem("galning"), "galning");});
test("galningar -> galning", function() {deepEqual( Stem("galningar"), "galning");});
test("galningen -> galning", function() {deepEqual( Stem("galningen"), "galning");});
test("galopp -> galopp", function() {deepEqual( Stem("galopp"), "galopp");});
test("galoppera -> galopper", function() {deepEqual( Stem("galoppera"), "galopper");});
test("galoscher -> galosch", function() {deepEqual( Stem("galoscher"), "galosch");});
test("galoschmakarna -> galoschmak", function() {deepEqual( Stem("galoschmakarna"), "galoschmak");});
test("galtar -> galt", function() {deepEqual( Stem("galtar"), "galt");});
test("gam -> gam", function() {deepEqual( Stem("gam"), "gam");});
test("gamla -> gaml", function() {deepEqual( Stem("gamla"), "gaml");});
test("gamlas -> gaml", function() {deepEqual( Stem("gamlas"), "gaml");});
test("gamle -> gaml", function() {deepEqual( Stem("gamle"), "gaml");});
test("gamles -> gaml", function() {deepEqual( Stem("gamles"), "gaml");});
test("gamma -> gamm", function() {deepEqual( Stem("gamma"), "gamm");});
test("gammal -> gammal", function() {deepEqual( Stem("gammal"), "gammal");});
test("gammaldags -> gammaldag", function() {deepEqual( Stem("gammaldags"), "gammaldag");});
test("gammalklok -> gammalklok", function() {deepEqual( Stem("gammalklok"), "gammalklok");});
test("gammalmodiga -> gammalmod", function() {deepEqual( Stem("gammalmodiga"), "gammalmod");});
test("gammalstafvar -> gammalstafv", function() {deepEqual( Stem("gammalstafvar"), "gammalstafv");});
test("gammalstavad -> gammalstav", function() {deepEqual( Stem("gammalstavad"), "gammalstav");});
test("gammalsven -> gammalsv", function() {deepEqual( Stem("gammalsven"), "gammalsv");});
test("gammalt -> gammalt", function() {deepEqual( Stem("gammalt"), "gammalt");});
test("gamman -> gamman", function() {deepEqual( Stem("gamman"), "gamman");});
test("gande -> gand", function() {deepEqual( Stem("gande"), "gand");});
test("gang -> gang", function() {deepEqual( Stem("gang"), "gang");});
test("gangen -> gang", function() {deepEqual( Stem("gangen"), "gang");});
test("ganger -> gang", function() {deepEqual( Stem("ganger"), "gang");});
test("ganska -> gansk", function() {deepEqual( Stem("ganska"), "gansk");});
test("gap -> gap", function() {deepEqual( Stem("gap"), "gap");});
test("gapa -> gap", function() {deepEqual( Stem("gapa"), "gap");});
test("gapade -> gap", function() {deepEqual( Stem("gapade"), "gap");});
test("gapande -> gap", function() {deepEqual( Stem("gapande"), "gap");});
test("gapar -> gap", function() {deepEqual( Stem("gapar"), "gap");});
test("gapet -> gapet", function() {deepEqual( Stem("gapet"), "gapet");});
test("gapskratt -> gapskrat", function() {deepEqual( Stem("gapskratt"), "gapskrat");});
test("gapskratta -> gapskrat", function() {deepEqual( Stem("gapskratta"), "gapskrat");});
test("gapskrattar -> gapskrat", function() {deepEqual( Stem("gapskrattar"), "gapskrat");});
test("gar -> gar", function() {deepEqual( Stem("gar"), "gar");});
test("garcon -> garcon", function() {deepEqual( Stem("garcon"), "garcon");});
test("gard -> gard", function() {deepEqual( Stem("gard"), "gard");});
test("garde -> gard", function() {deepEqual( Stem("garde"), "gard");});
test("garden -> gard", function() {deepEqual( Stem("garden"), "gard");});
test("garderoben -> garderob", function() {deepEqual( Stem("garderoben"), "garderob");});
test("gardin -> gardin", function() {deepEqual( Stem("gardin"), "gardin");});
test("gardinen -> gardin", function() {deepEqual( Stem("gardinen"), "gardin");});
test("gardiner -> gardin", function() {deepEqual( Stem("gardiner"), "gardin");});
test("gardinerna -> gardin", function() {deepEqual( Stem("gardinerna"), "gardin");});
test("gardinstyger -> gardinstyg", function() {deepEqual( Stem("gardinstyger"), "gardinstyg");});
test("gardintyg -> gardintyg", function() {deepEqual( Stem("gardintyg"), "gardintyg");});
test("gardintyget -> gardintyget", function() {deepEqual( Stem("gardintyget"), "gardintyget");});
test("gards -> gard", function() {deepEqual( Stem("gards"), "gard");});
test("gardsplanen -> gardsplan", function() {deepEqual( Stem("gardsplanen"), "gardsplan");});
test("garibaldi -> garibaldi", function() {deepEqual( Stem("garibaldi"), "garibaldi");});
test("garmla -> garml", function() {deepEqual( Stem("garmla"), "garml");});
test("garn -> garn", function() {deepEqual( Stem("garn"), "garn");});
test("garna -> garn", function() {deepEqual( Stem("garna"), "garn");});
test("garnerad -> garner", function() {deepEqual( Stem("garnerad"), "garner");});
test("garnerade -> garner", function() {deepEqual( Stem("garnerade"), "garner");});
test("garnet -> garnet", function() {deepEqual( Stem("garnet"), "garnet");});
test("garnvindan -> garnvindan", function() {deepEqual( Stem("garnvindan"), "garnvindan");});
test("garnvindor -> garnvind", function() {deepEqual( Stem("garnvindor"), "garnvind");});
test("garvade -> garv", function() {deepEqual( Stem("garvade"), "garv");});
test("gasblossen -> gasbloss", function() {deepEqual( Stem("gasblossen"), "gasbloss");});
test("gasell -> gasell", function() {deepEqual( Stem("gasell"), "gasell");});
test("gasförgiftade -> gasförgift", function() {deepEqual( Stem("gasförgiftade"), "gasförgift");});
test("gaslykta -> gaslyk", function() {deepEqual( Stem("gaslykta"), "gaslyk");});
test("gaslyktan -> gaslyktan", function() {deepEqual( Stem("gaslyktan"), "gaslyktan");});
test("gaslyktor -> gaslyk", function() {deepEqual( Stem("gaslyktor"), "gaslyk");});
test("gaslyktorna -> gaslyk", function() {deepEqual( Stem("gaslyktorna"), "gaslyk");});
test("gaspedalen -> gaspedal", function() {deepEqual( Stem("gaspedalen"), "gaspedal");});
test("gasrampen -> gasramp", function() {deepEqual( Stem("gasrampen"), "gasramp");});
test("gasrör -> gasrör", function() {deepEqual( Stem("gasrör"), "gasrör");});
test("gasskyarna -> gassky", function() {deepEqual( Stem("gasskyarna"), "gassky");});
test("gasverket -> gasverket", function() {deepEqual( Stem("gasverket"), "gasverket");});
test("gata -> gat", function() {deepEqual( Stem("gata"), "gat");});
test("gatan -> gatan", function() {deepEqual( Stem("gatan"), "gatan");});
test("gatans -> gatan", function() {deepEqual( Stem("gatans"), "gatan");});
test("gatfulla -> gatfull", function() {deepEqual( Stem("gatfulla"), "gatfull");});
test("gathörn -> gathörn", function() {deepEqual( Stem("gathörn"), "gathörn");});
test("gathörnet -> gathörnet", function() {deepEqual( Stem("gathörnet"), "gathörnet");});
test("gatlyktorna -> gatlyk", function() {deepEqual( Stem("gatlyktorna"), "gatlyk");});
test("gatläggningen -> gatläggning", function() {deepEqual( Stem("gatläggningen"), "gatläggning");});
test("gator -> gat", function() {deepEqual( Stem("gator"), "gat");});
test("gatorna -> gat", function() {deepEqual( Stem("gatorna"), "gat");});
test("gatsopare -> gatsop", function() {deepEqual( Stem("gatsopare"), "gatsop");});
test("gatstrykerskorna -> gatstrykersk", function() {deepEqual( Stem("gatstrykerskorna"), "gatstrykersk");});
test("gatt -> gatt", function() {deepEqual( Stem("gatt"), "gatt");});
test("gatukorset -> gatukorset", function() {deepEqual( Stem("gatukorset"), "gatukorset");});
test("gatukorsning -> gatukorsning", function() {deepEqual( Stem("gatukorsning"), "gatukorsning");});
test("gav -> gav", function() {deepEqual( Stem("gav"), "gav");});
test("gavelrum -> gavelrum", function() {deepEqual( Stem("gavelrum"), "gavelrum");});
test("gavo -> gavo", function() {deepEqual( Stem("gavo"), "gavo");});
test("gavs -> gav", function() {deepEqual( Stem("gavs"), "gav");});
test("gcstalt -> gcstalt", function() {deepEqual( Stem("gcstalt"), "gcstalt");});
test("gcting -> gcting", function() {deepEqual( Stem("gcting"), "gcting");});
test("ge -> ge", function() {deepEqual( Stem("ge"), "ge");});
test("gebitet -> gebitet", function() {deepEqual( Stem("gebitet"), "gebitet");});
test("gedigen -> ged", function() {deepEqual( Stem("gedigen"), "ged");});
test("gedigna -> gedign", function() {deepEqual( Stem("gedigna"), "gedign");});
test("gehör -> gehör", function() {deepEqual( Stem("gehör"), "gehör");});
test("gela -> gel", function() {deepEqual( Stem("gela"), "gel");});
test("gelatinkapslar -> gelatinkapsl", function() {deepEqual( Stem("gelatinkapslar"), "gelatinkapsl");});
test("gele -> gel", function() {deepEqual( Stem("gele"), "gel");});
test("gelikar -> gelik", function() {deepEqual( Stem("gelikar"), "gelik");});
test("geln -> geln", function() {deepEqual( Stem("geln"), "geln");});
test("gemen -> gem", function() {deepEqual( Stem("gemen"), "gem");});
test("gemena -> gemen", function() {deepEqual( Stem("gemena"), "gemen");});
test("gemene -> gemen", function() {deepEqual( Stem("gemene"), "gemen");});
test("gemenliga -> gemen", function() {deepEqual( Stem("gemenliga"), "gemen");});
test("gemenligen -> gemen", function() {deepEqual( Stem("gemenligen"), "gemen");});
test("gemensam -> gemensam", function() {deepEqual( Stem("gemensam"), "gemensam");});
test("gemensamma -> gemensamm", function() {deepEqual( Stem("gemensamma"), "gemensamm");});
test("gemensamt -> gemensamt", function() {deepEqual( Stem("gemensamt"), "gemensamt");});
test("gemenskap -> gemenskap", function() {deepEqual( Stem("gemenskap"), "gemenskap");});
test("gemenskapen -> gemenskap", function() {deepEqual( Stem("gemenskapen"), "gemenskap");});
test("gement -> gement", function() {deepEqual( Stem("gement"), "gement");});
test("gemnälde -> gemnäld", function() {deepEqual( Stem("gemnälde"), "gemnäld");});
test("gemyt -> gemyt", function() {deepEqual( Stem("gemyt"), "gemyt");});
test("gemytlig -> gemyt", function() {deepEqual( Stem("gemytlig"), "gemyt");});
test("gemytliga -> gemyt", function() {deepEqual( Stem("gemytliga"), "gemyt");});
test("gemål -> gemål", function() {deepEqual( Stem("gemål"), "gemål");});
test("gen -> gen", function() {deepEqual( Stem("gen"), "gen");});
test("genast -> gen", function() {deepEqual( Stem("genast"), "gen");});
test("genealogi -> genealogi", function() {deepEqual( Stem("genealogi"), "genealogi");});
test("generad -> gener", function() {deepEqual( Stem("generad"), "gener");});
test("generade -> gener", function() {deepEqual( Stem("generade"), "gener");});
test("generalkonsuler -> generalkonsul", function() {deepEqual( Stem("generalkonsuler"), "generalkonsul");});
test("generalmajor -> generalmaj", function() {deepEqual( Stem("generalmajor"), "generalmaj");});
test("generar -> gener", function() {deepEqual( Stem("generar"), "gener");});
test("generat -> gener", function() {deepEqual( Stem("generat"), "gener");});
test("generation -> generation", function() {deepEqual( Stem("generation"), "generation");});
test("generationer -> generation", function() {deepEqual( Stem("generationer"), "generation");});
test("generations -> generation", function() {deepEqual( Stem("generations"), "generation");});
test("gengäld -> gengäld", function() {deepEqual( Stem("gengäld"), "gengäld");});
test("geni -> geni", function() {deepEqual( Stem("geni"), "geni");});
test("genier -> geni", function() {deepEqual( Stem("genier"), "geni");});
test("genljud -> genljud", function() {deepEqual( Stem("genljud"), "genljud");});
test("genljöd -> genljöd", function() {deepEqual( Stem("genljöd"), "genljöd");});
test("genmälte -> genmält", function() {deepEqual( Stem("genmälte"), "genmält");});
test("genom -> genom", function() {deepEqual( Stem("genom"), "genom");});
test("genomborrande -> genomborr", function() {deepEqual( Stem("genomborrande"), "genomborr");});
test("genombrutna -> genombrutn", function() {deepEqual( Stem("genombrutna"), "genombrutn");});
test("genombröto -> genombröto", function() {deepEqual( Stem("genombröto"), "genombröto");});
test("genomdrifva -> genomdrifv", function() {deepEqual( Stem("genomdrifva"), "genomdrifv");});
test("genomflög -> genomflög", function() {deepEqual( Stem("genomflög"), "genomflög");});
test("genomfor -> genomf", function() {deepEqual( Stem("genomfor"), "genomf");});
test("genomgick -> genomgick", function() {deepEqual( Stem("genomgick"), "genomgick");});
test("genomgingo -> genomgingo", function() {deepEqual( Stem("genomgingo"), "genomgingo");});
test("genomgå -> genomgå", function() {deepEqual( Stem("genomgå"), "genomgå");});
test("genomgåendet -> genomgåendet", function() {deepEqual( Stem("genomgåendet"), "genomgåendet");});
test("genomgången -> genomgång", function() {deepEqual( Stem("genomgången"), "genomgång");});
test("genomgår -> genomgår", function() {deepEqual( Stem("genomgår"), "genomgår");});
test("genomgått -> genomgåt", function() {deepEqual( Stem("genomgått"), "genomgåt");});
test("genomhederlig -> genomheder", function() {deepEqual( Stem("genomhederlig"), "genomheder");});
test("genomila -> genomil", function() {deepEqual( Stem("genomila"), "genomil");});
test("genomlefvat -> genomlefv", function() {deepEqual( Stem("genomlefvat"), "genomlefv");});
test("genomletade -> genomlet", function() {deepEqual( Stem("genomletade"), "genomlet");});
test("genomlidit -> genomlidit", function() {deepEqual( Stem("genomlidit"), "genomlidit");});
test("genompryglade -> genomprygl", function() {deepEqual( Stem("genompryglade"), "genomprygl");});
test("genomse -> genoms", function() {deepEqual( Stem("genomse"), "genoms");});
test("genomskimrad -> genomskimr", function() {deepEqual( Stem("genomskimrad"), "genomskimr");});
test("genomskinlig -> genomskin", function() {deepEqual( Stem("genomskinlig"), "genomskin");});
test("genomskinliga -> genomskin", function() {deepEqual( Stem("genomskinliga"), "genomskin");});
test("genomskinligt -> genomskin", function() {deepEqual( Stem("genomskinligt"), "genomskin");});
test("genomskåda -> genomskåd", function() {deepEqual( Stem("genomskåda"), "genomskåd");});
test("genomskådar -> genomskåd", function() {deepEqual( Stem("genomskådar"), "genomskåd");});
test("genomskådat -> genomskåd", function() {deepEqual( Stem("genomskådat"), "genomskåd");});
test("genomstekt -> genomstek", function() {deepEqual( Stem("genomstekt"), "genomstek");});
test("genomströmmades -> genomströmm", function() {deepEqual( Stem("genomströmmades"), "genomströmm");});
test("genomtränga -> genomträng", function() {deepEqual( Stem("genomtränga"), "genomträng");});
test("genomträngande -> genomträng", function() {deepEqual( Stem("genomträngande"), "genomträng");});
test("genomträngde -> genomträng", function() {deepEqual( Stem("genomträngde"), "genomträng");});
test("genomtummat -> genomtumm", function() {deepEqual( Stem("genomtummat"), "genomtumm");});
test("genomvaka -> genomvak", function() {deepEqual( Stem("genomvaka"), "genomvak");});
test("genomvakat -> genomvak", function() {deepEqual( Stem("genomvakat"), "genomvak");});
test("genomvåta -> genomvåt", function() {deepEqual( Stem("genomvåta"), "genomvåt");});
test("genomögnade -> genomögn", function() {deepEqual( Stem("genomögnade"), "genomögn");});
test("genorn -> genorn", function() {deepEqual( Stem("genorn"), "genorn");});
test("genre -> genr", function() {deepEqual( Stem("genre"), "genr");});
test("gens -> gen", function() {deepEqual( Stem("gens"), "gen");});
test("gent -> gent", function() {deepEqual( Stem("gent"), "gent");});
test("gentil -> gentil", function() {deepEqual( Stem("gentil"), "gentil");});
test("gentilaste -> gentil", function() {deepEqual( Stem("gentilaste"), "gentil");});
test("gentle -> gentl", function() {deepEqual( Stem("gentle"), "gentl");});
test("gentleman -> gentleman", function() {deepEqual( Stem("gentleman"), "gentleman");});
test("gentlemans -> gentleman", function() {deepEqual( Stem("gentlemans"), "gentleman");});
test("genväg -> genväg", function() {deepEqual( Stem("genväg"), "genväg");});
test("genvägen -> genväg", function() {deepEqual( Stem("genvägen"), "genväg");});
test("geometriskt -> geometrisk", function() {deepEqual( Stem("geometriskt"), "geometrisk");});
test("georgine -> georgin", function() {deepEqual( Stem("georgine"), "georgin");});
test("georginer -> georgin", function() {deepEqual( Stem("georginer"), "georgin");});
test("georginers -> georginer", function() {deepEqual( Stem("georginers"), "georginer");});
test("georgines -> georgin", function() {deepEqual( Stem("georgines"), "georgin");});
test("ger -> ger", function() {deepEqual( Stem("ger"), "ger");});
test("geranium -> geranium", function() {deepEqual( Stem("geranium"), "geranium");});
test("gerda -> gerd", function() {deepEqual( Stem("gerda"), "gerd");});
test("german -> german", function() {deepEqual( Stem("german"), "german");});
test("germanska -> germansk", function() {deepEqual( Stem("germanska"), "germansk");});
test("gerna -> gern", function() {deepEqual( Stem("gerna"), "gern");});
test("gerning -> gerning", function() {deepEqual( Stem("gerning"), "gerning");});
test("gerningar -> gerning", function() {deepEqual( Stem("gerningar"), "gerning");});
test("gest -> gest", function() {deepEqual( Stem("gest"), "gest");});
test("gestalt -> gestalt", function() {deepEqual( Stem("gestalt"), "gestalt");});
test("gestaltar -> gestalt", function() {deepEqual( Stem("gestaltar"), "gestalt");});
test("gestaltcr -> gestaltcr", function() {deepEqual( Stem("gestaltcr"), "gestaltcr");});
test("gestalten -> gestalt", function() {deepEqual( Stem("gestalten"), "gestalt");});
test("gestalter -> gestalt", function() {deepEqual( Stem("gestalter"), "gestalt");});
test("gestalterna -> gestalt", function() {deepEqual( Stem("gestalterna"), "gestalt");});
test("gesten -> gest", function() {deepEqual( Stem("gesten"), "gest");});
test("gester -> gest", function() {deepEqual( Stem("gester"), "gest");});
test("gestikulerade -> gestikuler", function() {deepEqual( Stem("gestikulerade"), "gestikuler");});
test("gestikulerande -> gestikuler", function() {deepEqual( Stem("gestikulerande"), "gestikuler");});
test("gesäller -> gesäll", function() {deepEqual( Stem("gesäller"), "gesäll");});
test("gesällerna -> gesäll", function() {deepEqual( Stem("gesällerna"), "gesäll");});
test("gesällers -> gesäller", function() {deepEqual( Stem("gesällers"), "gesäller");});
test("get -> get", function() {deepEqual( Stem("get"), "get");});
test("geting -> geting", function() {deepEqual( Stem("geting"), "geting");});
test("getsemane -> getseman", function() {deepEqual( Stem("getsemane"), "getseman");});
test("gett -> gett", function() {deepEqual( Stem("gett"), "gett");});
test("gevär -> gevär", function() {deepEqual( Stem("gevär"), "gevär");});
test("geväret -> geväret", function() {deepEqual( Stem("geväret"), "geväret");});
test("gevärskolfven -> gevärskolfv", function() {deepEqual( Stem("gevärskolfven"), "gevärskolfv");});
test("gick -> gick", function() {deepEqual( Stem("gick"), "gick");});
test("gif -> gif", function() {deepEqual( Stem("gif"), "gif");});
test("gifningen -> gifning", function() {deepEqual( Stem("gifningen"), "gifning");});
test("gift -> gift", function() {deepEqual( Stem("gift"), "gift");});
test("gifta -> gift", function() {deepEqual( Stem("gifta"), "gift");});
test("giftas -> gift", function() {deepEqual( Stem("giftas"), "gift");});
test("giftasgrillerna -> giftasgrill", function() {deepEqual( Stem("giftasgrillerna"), "giftasgrill");});
test("giftaslust -> giftaslust", function() {deepEqual( Stem("giftaslust"), "giftaslust");});
test("giftaslysten -> giftaslyst", function() {deepEqual( Stem("giftaslysten"), "giftaslyst");});
test("giftastankarna -> giftastank", function() {deepEqual( Stem("giftastankarna"), "giftastank");});
test("giftbägare -> giftbäg", function() {deepEqual( Stem("giftbägare"), "giftbäg");});
test("gifte -> gift", function() {deepEqual( Stem("gifte"), "gift");});
test("gifter -> gift", function() {deepEqual( Stem("gifter"), "gift");});
test("giftermål -> giftermål", function() {deepEqual( Stem("giftermål"), "giftermål");});
test("giftermålet -> giftermålet", function() {deepEqual( Stem("giftermålet"), "giftermålet");});
test("giftermålsanbud -> giftermålsanbud", function() {deepEqual( Stem("giftermålsanbud"), "giftermålsanbud");});
test("giftermålsanmälan -> giftermålsanmälan", function() {deepEqual( Stem("giftermålsanmälan"), "giftermålsanmälan");});
test("giftermålsförslaget -> giftermålsförslaget", function() {deepEqual( Stem("giftermålsförslaget"), "giftermålsförslaget");});
test("giftermålsförsök -> giftermålsförsök", function() {deepEqual( Stem("giftermålsförsök"), "giftermålsförsök");});
test("giftermålsplaner -> giftermålsplan", function() {deepEqual( Stem("giftermålsplaner"), "giftermålsplan");});
test("giftermålsspekulation -> giftermålsspekulation", function() {deepEqual( Stem("giftermålsspekulation"), "giftermålsspekulation");});
test("giftermålsvurm -> giftermålsvurm", function() {deepEqual( Stem("giftermålsvurm"), "giftermålsvurm");});
test("giftet -> giftet", function() {deepEqual( Stem("giftet"), "giftet");});
test("giftig -> gift", function() {deepEqual( Stem("giftig"), "gift");});
test("giftiga -> gift", function() {deepEqual( Stem("giftiga"), "gift");});
test("giftigaste -> gift", function() {deepEqual( Stem("giftigaste"), "gift");});
test("giftorätt -> giftorät", function() {deepEqual( Stem("giftorätt"), "giftorät");});
test("gifva -> gifv", function() {deepEqual( Stem("gifva"), "gifv");});
test("gifvas -> gifv", function() {deepEqual( Stem("gifvas"), "gifv");});
test("gifve -> gifv", function() {deepEqual( Stem("gifve"), "gifv");});
test("gifven -> gifv", function() {deepEqual( Stem("gifven"), "gifv");});
test("gifver -> gifv", function() {deepEqual( Stem("gifver"), "gifv");});
test("gifvit -> gifvit", function() {deepEqual( Stem("gifvit"), "gifvit");});
test("giga -> gig", function() {deepEqual( Stem("giga"), "gig");});
test("gigantisk -> gigantisk", function() {deepEqual( Stem("gigantisk"), "gigantisk");});
test("gigantiska -> gigantisk", function() {deepEqual( Stem("gigantiska"), "gigantisk");});
test("gikten -> gikt", function() {deepEqual( Stem("gikten"), "gikt");});
test("giktfulla -> giktfull", function() {deepEqual( Stem("giktfulla"), "giktfull");});
test("giljan -> giljan", function() {deepEqual( Stem("giljan"), "giljan");});
test("giljarsträng -> giljarsträng", function() {deepEqual( Stem("giljarsträng"), "giljarsträng");});
test("gilla -> gill", function() {deepEqual( Stem("gilla"), "gill");});
test("gillad -> gill", function() {deepEqual( Stem("gillad"), "gill");});
test("gillade -> gill", function() {deepEqual( Stem("gillade"), "gill");});
test("gillat -> gill", function() {deepEqual( Stem("gillat"), "gill");});
test("gillstu -> gillstu", function() {deepEqual( Stem("gillstu"), "gillstu");});
test("gillstugan -> gillstugan", function() {deepEqual( Stem("gillstugan"), "gillstugan");});
test("gillstutömmar -> gillstutömm", function() {deepEqual( Stem("gillstutömmar"), "gillstutömm");});
test("ginge -> ging", function() {deepEqual( Stem("ginge"), "ging");});
test("gingo -> gingo", function() {deepEqual( Stem("gingo"), "gingo");});
test("ginst -> ginst", function() {deepEqual( Stem("ginst"), "ginst");});
test("gips -> gip", function() {deepEqual( Stem("gips"), "gip");});
test("gipsbild -> gipsbild", function() {deepEqual( Stem("gipsbild"), "gipsbild");});
test("gipsornament -> gipsornament", function() {deepEqual( Stem("gipsornament"), "gipsornament");});
test("girig -> gir", function() {deepEqual( Stem("girig"), "gir");});
test("giriga -> gir", function() {deepEqual( Stem("giriga"), "gir");});
test("girigbuk -> girigbuk", function() {deepEqual( Stem("girigbuk"), "girigbuk");});
test("girigt -> gir", function() {deepEqual( Stem("girigt"), "gir");});
test("gissa -> giss", function() {deepEqual( Stem("gissa"), "giss");});
test("gissade -> giss", function() {deepEqual( Stem("gissade"), "giss");});
test("gissar -> giss", function() {deepEqual( Stem("gissar"), "giss");});
test("gissat -> giss", function() {deepEqual( Stem("gissat"), "giss");});
test("gissel -> gissel", function() {deepEqual( Stem("gissel"), "gissel");});
test("gisselslagen -> gisselslag", function() {deepEqual( Stem("gisselslagen"), "gisselslag");});
test("gisslande -> gissl", function() {deepEqual( Stem("gisslande"), "gissl");});
test("gissning -> gissning", function() {deepEqual( Stem("gissning"), "gissning");});
test("gistnade -> gistn", function() {deepEqual( Stem("gistnade"), "gistn");});
test("gitarr -> gitarr", function() {deepEqual( Stem("gitarr"), "gitarr");});
test("gitarren -> gitarr", function() {deepEqual( Stem("gitarren"), "gitarr");});
test("gitarrer -> gitarr", function() {deepEqual( Stem("gitarrer"), "gitarr");});
test("gitarrerna -> gitarr", function() {deepEqual( Stem("gitarrerna"), "gitarr");});
test("gitarrknäpp -> gitarrknäpp", function() {deepEqual( Stem("gitarrknäpp"), "gitarrknäpp");});
test("gitarrspel -> gitarrspel", function() {deepEqual( Stem("gitarrspel"), "gitarrspel");});
test("gittat -> gitt", function() {deepEqual( Stem("gittat"), "gitt");});
test("gitte -> gitt", function() {deepEqual( Stem("gitte"), "gitt");});
test("gitter -> gitt", function() {deepEqual( Stem("gitter"), "gitt");});
test("giuseppe -> giusepp", function() {deepEqual( Stem("giuseppe"), "giusepp");});
test("giv -> giv", function() {deepEqual( Stem("giv"), "giv");});
test("giva -> giv", function() {deepEqual( Stem("giva"), "giv");});
test("givande -> giv", function() {deepEqual( Stem("givande"), "giv");});
test("givas -> giv", function() {deepEqual( Stem("givas"), "giv");});
test("give -> giv", function() {deepEqual( Stem("give"), "giv");});
test("given -> giv", function() {deepEqual( Stem("given"), "giv");});
test("givet -> givet", function() {deepEqual( Stem("givet"), "givet");});
test("givit -> givit", function() {deepEqual( Stem("givit"), "givit");});
test("givmilda -> givmild", function() {deepEqual( Stem("givmilda"), "givmild");});
test("givmildare -> givmild", function() {deepEqual( Stem("givmildare"), "givmild");});
test("givmildhets -> givmildhet", function() {deepEqual( Stem("givmildhets"), "givmildhet");});
test("givna -> givn", function() {deepEqual( Stem("givna"), "givn");});
test("gjord -> gjord", function() {deepEqual( Stem("gjord"), "gjord");});
test("gjorda -> gjord", function() {deepEqual( Stem("gjorda"), "gjord");});
test("gjorde -> gjord", function() {deepEqual( Stem("gjorde"), "gjord");});
test("gjordes -> gjord", function() {deepEqual( Stem("gjordes"), "gjord");});
test("gjordt -> gjord", function() {deepEqual( Stem("gjordt"), "gjord");});
test("gjort -> gjort", function() {deepEqual( Stem("gjort"), "gjort");});
test("gjorte -> gjort", function() {deepEqual( Stem("gjorte"), "gjort");});
test("gjuta -> gjut", function() {deepEqual( Stem("gjuta"), "gjut");});
test("gjutit -> gjutit", function() {deepEqual( Stem("gjutit"), "gjutit");});
test("gl -> gl", function() {deepEqual( Stem("gl"), "gl");});
test("glacehandskar -> glacehandsk", function() {deepEqual( Stem("glacehandskar"), "glacehandsk");});
test("glad -> glad", function() {deepEqual( Stem("glad"), "glad");});
test("glada -> glad", function() {deepEqual( Stem("glada"), "glad");});
test("gladare -> glad", function() {deepEqual( Stem("gladare"), "glad");});
test("gladast -> glad", function() {deepEqual( Stem("gladast"), "glad");});
test("gladaste -> glad", function() {deepEqual( Stem("gladaste"), "glad");});
test("gladde -> gladd", function() {deepEqual( Stem("gladde"), "gladd");});
test("gladdes -> gladd", function() {deepEqual( Stem("gladdes"), "gladd");});
test("glade -> glad", function() {deepEqual( Stem("glade"), "glad");});
test("gladio -> gladio", function() {deepEqual( Stem("gladio"), "gladio");});
test("gladja -> gladj", function() {deepEqual( Stem("gladja"), "gladj");});
test("gladlynt -> gladlynt", function() {deepEqual( Stem("gladlynt"), "gladlynt");});
test("gladt -> gladt", function() {deepEqual( Stem("gladt"), "gladt");});
test("glam -> glam", function() {deepEqual( Stem("glam"), "glam");});
test("glan -> glan", function() {deepEqual( Stem("glan"), "glan");});
test("glans -> glan", function() {deepEqual( Stem("glans"), "glan");});
test("glansen -> glans", function() {deepEqual( Stem("glansen"), "glans");});
test("glanslös -> glanslös", function() {deepEqual( Stem("glanslös"), "glanslös");});
test("glanslösa -> glanslös", function() {deepEqual( Stem("glanslösa"), "glanslös");});
test("glansperiod -> glansperiod", function() {deepEqual( Stem("glansperiod"), "glansperiod");});
test("glanste -> glanst", function() {deepEqual( Stem("glanste"), "glanst");});
test("glappande -> glapp", function() {deepEqual( Stem("glappande"), "glapp");});
test("glas -> glas", function() {deepEqual( Stem("glas"), "glas");});
test("glasblanka -> glasblank", function() {deepEqual( Stem("glasblanka"), "glasblank");});
test("glasburk -> glasburk", function() {deepEqual( Stem("glasburk"), "glasburk");});
test("glasdisken -> glasdisk", function() {deepEqual( Stem("glasdisken"), "glasdisk");});
test("glasdörren -> glasdörr", function() {deepEqual( Stem("glasdörren"), "glasdörr");});
test("glasen -> glas", function() {deepEqual( Stem("glasen"), "glas");});
test("glaset -> glaset", function() {deepEqual( Stem("glaset"), "glaset");});
test("glasets -> glaset", function() {deepEqual( Stem("glasets"), "glaset");});
test("glasigt -> glas", function() {deepEqual( Stem("glasigt"), "glas");});
test("glasklara -> glasklar", function() {deepEqual( Stem("glasklara"), "glasklar");});
test("glaskupa -> glaskup", function() {deepEqual( Stem("glaskupa"), "glaskup");});
test("glaskupan -> glaskupan", function() {deepEqual( Stem("glaskupan"), "glaskupan");});
test("glaskärl -> glaskärl", function() {deepEqual( Stem("glaskärl"), "glaskärl");});
test("glaspärlor -> glaspärl", function() {deepEqual( Stem("glaspärlor"), "glaspärl");});
test("glasruta -> glasrut", function() {deepEqual( Stem("glasruta"), "glasrut");});
test("glasskåp -> glasskåp", function() {deepEqual( Stem("glasskåp"), "glasskåp");});
test("glasveran -> glasveran", function() {deepEqual( Stem("glasveran"), "glasveran");});
test("glasverandan -> glasverandan", function() {deepEqual( Stem("glasverandan"), "glasverandan");});
test("glasväggen -> glasvägg", function() {deepEqual( Stem("glasväggen"), "glasvägg");});
test("glasyr -> glasyr", function() {deepEqual( Stem("glasyr"), "glasyr");});
test("glasögon -> glasögon", function() {deepEqual( Stem("glasögon"), "glasögon");});
test("glasögonen -> glasögon", function() {deepEqual( Stem("glasögonen"), "glasögon");});
test("glatt -> glatt", function() {deepEqual( Stem("glatt"), "glatt");});
test("glatta -> glatt", function() {deepEqual( Stem("glatta"), "glatt");});
test("gled -> gled", function() {deepEqual( Stem("gled"), "gled");});
test("gledo -> gledo", function() {deepEqual( Stem("gledo"), "gledo");});
test("glesnade -> glesn", function() {deepEqual( Stem("glesnade"), "glesn");});
test("glesnande -> glesn", function() {deepEqual( Stem("glesnande"), "glesn");});
test("glesnar -> glesn", function() {deepEqual( Stem("glesnar"), "glesn");});
test("glesnat -> glesn", function() {deepEqual( Stem("glesnat"), "glesn");});
test("glida -> glid", function() {deepEqual( Stem("glida"), "glid");});
test("glidande -> glid", function() {deepEqual( Stem("glidande"), "glid");});
test("glider -> glid", function() {deepEqual( Stem("glider"), "glid");});
test("glidit -> glidit", function() {deepEqual( Stem("glidit"), "glidit");});
test("glim -> glim", function() {deepEqual( Stem("glim"), "glim");});
test("glimma -> glimm", function() {deepEqual( Stem("glimma"), "glimm");});
test("glimmade -> glimm", function() {deepEqual( Stem("glimmade"), "glimm");});
test("glimmande -> glimm", function() {deepEqual( Stem("glimmande"), "glimm");});
test("glimt -> glimt", function() {deepEqual( Stem("glimt"), "glimt");});
test("glindrande -> glindr", function() {deepEqual( Stem("glindrande"), "glindr");});
test("glitter -> glitt", function() {deepEqual( Stem("glitter"), "glitt");});
test("glittra -> glittr", function() {deepEqual( Stem("glittra"), "glittr");});
test("glittrade -> glittr", function() {deepEqual( Stem("glittrade"), "glittr");});
test("glittrande -> glittr", function() {deepEqual( Stem("glittrande"), "glittr");});
test("glittret -> glittret", function() {deepEqual( Stem("glittret"), "glittret");});
test("glomma -> glomm", function() {deepEqual( Stem("glomma"), "glomm");});
test("glopar -> glop", function() {deepEqual( Stem("glopar"), "glop");});
test("gloria -> glori", function() {deepEqual( Stem("gloria"), "glori");});
test("glufsade -> glufs", function() {deepEqual( Stem("glufsade"), "glufs");});
test("glugg -> glugg", function() {deepEqual( Stem("glugg"), "glugg");});
test("gluggar -> glugg", function() {deepEqual( Stem("gluggar"), "glugg");});
test("glupande -> glup", function() {deepEqual( Stem("glupande"), "glup");});
test("glupska -> glupsk", function() {deepEqual( Stem("glupska"), "glupsk");});
test("glupskt -> glupsk", function() {deepEqual( Stem("glupskt"), "glupsk");});
test("gläder -> gläd", function() {deepEqual( Stem("gläder"), "gläd");});
test("glädja -> glädj", function() {deepEqual( Stem("glädja"), "glädj");});
test("glädjande -> glädj", function() {deepEqual( Stem("glädjande"), "glädj");});
test("glädjas -> glädj", function() {deepEqual( Stem("glädjas"), "glädj");});
test("glädje -> glädj", function() {deepEqual( Stem("glädje"), "glädj");});
test("glädjeblixt -> glädjeblixt", function() {deepEqual( Stem("glädjeblixt"), "glädjeblixt");});
test("glädjekälla -> glädjekäll", function() {deepEqual( Stem("glädjekälla"), "glädjekäll");});
test("glädjen -> glädj", function() {deepEqual( Stem("glädjen"), "glädj");});
test("glädjens -> glädj", function() {deepEqual( Stem("glädjens"), "glädj");});
test("glädjerop -> glädjerop", function() {deepEqual( Stem("glädjerop"), "glädjerop");});
test("glädjerörelse -> glädjerör", function() {deepEqual( Stem("glädjerörelse"), "glädjerör");});
test("glädjes -> glädj", function() {deepEqual( Stem("glädjes"), "glädj");});
test("glädjeskri -> glädjeskri", function() {deepEqual( Stem("glädjeskri"), "glädjeskri");});
test("glädjestrålande -> glädjestrål", function() {deepEqual( Stem("glädjestrålande"), "glädjestrål");});
test("glädjestråle -> glädjestrål", function() {deepEqual( Stem("glädjestråle"), "glädjestrål");});
test("glädjetommaste -> glädjetomm", function() {deepEqual( Stem("glädjetommaste"), "glädjetomm");});
test("gläds -> gläd", function() {deepEqual( Stem("gläds"), "gläd");});
test("glädtige -> glädt", function() {deepEqual( Stem("glädtige"), "glädt");});
test("gläfsande -> gläfs", function() {deepEqual( Stem("gläfsande"), "gläfs");});
test("gläfste -> gläfst", function() {deepEqual( Stem("gläfste"), "gläfst");});
test("glän -> glän", function() {deepEqual( Stem("glän"), "glän");});
test("glänsa -> gläns", function() {deepEqual( Stem("glänsa"), "gläns");});
test("glänsande -> gläns", function() {deepEqual( Stem("glänsande"), "gläns");});
test("glänser -> gläns", function() {deepEqual( Stem("glänser"), "gläns");});
test("glänst -> glänst", function() {deepEqual( Stem("glänst"), "glänst");});
test("glänste -> glänst", function() {deepEqual( Stem("glänste"), "glänst");});
test("glänt -> glänt", function() {deepEqual( Stem("glänt"), "glänt");});
test("glänta -> glänt", function() {deepEqual( Stem("glänta"), "glänt");});
test("gläntade -> glänt", function() {deepEqual( Stem("gläntade"), "glänt");});
test("gläntan -> gläntan", function() {deepEqual( Stem("gläntan"), "gläntan");});
test("gläntande -> glänt", function() {deepEqual( Stem("gläntande"), "glänt");});
test("gläntas -> glänt", function() {deepEqual( Stem("gläntas"), "glänt");});
test("glättigt -> glätt", function() {deepEqual( Stem("glättigt"), "glätt");});
test("glöd -> glöd", function() {deepEqual( Stem("glöd"), "glöd");});
test("glöda -> glöd", function() {deepEqual( Stem("glöda"), "glöd");});
test("glödande -> glöd", function() {deepEqual( Stem("glödande"), "glöd");});
test("glödde -> glödd", function() {deepEqual( Stem("glödde"), "glödd");});
test("glöder -> glöd", function() {deepEqual( Stem("glöder"), "glöd");});
test("glödgade -> glödg", function() {deepEqual( Stem("glödgade"), "glödg");});
test("glödheta -> glödhet", function() {deepEqual( Stem("glödheta"), "glödhet");});
test("glödlamporna -> glödlamp", function() {deepEqual( Stem("glödlamporna"), "glödlamp");});
test("glöm -> glöm", function() {deepEqual( Stem("glöm"), "glöm");});
test("glömd -> glömd", function() {deepEqual( Stem("glömd"), "glömd");});
test("glömda -> glömd", function() {deepEqual( Stem("glömda"), "glömd");});
test("glömde -> glömd", function() {deepEqual( Stem("glömde"), "glömd");});
test("glömma -> glömm", function() {deepEqual( Stem("glömma"), "glömm");});
test("glömmande -> glömm", function() {deepEqual( Stem("glömmande"), "glömm");});
test("glömmas -> glömm", function() {deepEqual( Stem("glömmas"), "glömm");});
test("glömmer -> glömm", function() {deepEqual( Stem("glömmer"), "glömm");});
test("glömska -> glömsk", function() {deepEqual( Stem("glömska"), "glömsk");});
test("glömt -> glömt", function() {deepEqual( Stem("glömt"), "glömt");});
test("gmlgademlär -> gmlgademlär", function() {deepEqual( Stem("gmlgademlär"), "gmlgademlär");});
test("gnagande -> gnag", function() {deepEqual( Stem("gnagande"), "gnag");});
test("gnagandr -> gnagandr", function() {deepEqual( Stem("gnagandr"), "gnagandr");});
test("gnagde -> gnagd", function() {deepEqual( Stem("gnagde"), "gnagd");});
test("gnagt -> gnagt", function() {deepEqual( Stem("gnagt"), "gnagt");});
test("gnat -> gnat", function() {deepEqual( Stem("gnat"), "gnat");});
test("gnata -> gnat", function() {deepEqual( Stem("gnata"), "gnat");});
test("gnatig -> gnat", function() {deepEqual( Stem("gnatig"), "gnat");});
test("gnd -> gnd", function() {deepEqual( Stem("gnd"), "gnd");});
test("gned -> gned", function() {deepEqual( Stem("gned"), "gned");});
test("gnedos -> gnedo", function() {deepEqual( Stem("gnedos"), "gnedo");});
test("gnida -> gnid", function() {deepEqual( Stem("gnida"), "gnid");});
test("gnissla -> gnissl", function() {deepEqual( Stem("gnissla"), "gnissl");});
test("gnisslade -> gnissl", function() {deepEqual( Stem("gnisslade"), "gnissl");});
test("gnisslande -> gnissl", function() {deepEqual( Stem("gnisslande"), "gnissl");});
test("gnista -> gnist", function() {deepEqual( Stem("gnista"), "gnist");});
test("gnistan -> gnistan", function() {deepEqual( Stem("gnistan"), "gnistan");});
test("gnistor -> gnist", function() {deepEqual( Stem("gnistor"), "gnist");});
test("gnistrade -> gnistr", function() {deepEqual( Stem("gnistrade"), "gnistr");});
test("gnistrande -> gnistr", function() {deepEqual( Stem("gnistrande"), "gnistr");});
test("gno -> gno", function() {deepEqual( Stem("gno"), "gno");});
test("gnodde -> gnodd", function() {deepEqual( Stem("gnodde"), "gnodd");});
test("gnola -> gnol", function() {deepEqual( Stem("gnola"), "gnol");});
test("gnolade -> gnol", function() {deepEqual( Stem("gnolade"), "gnol");});
test("gnolande -> gnol", function() {deepEqual( Stem("gnolande"), "gnol");});
test("gnolar -> gnol", function() {deepEqual( Stem("gnolar"), "gnol");});
test("gnolat -> gnol", function() {deepEqual( Stem("gnolat"), "gnol");});
test("gnomen -> gnom", function() {deepEqual( Stem("gnomen"), "gnom");});
test("gnomer -> gnom", function() {deepEqual( Stem("gnomer"), "gnom");});
test("gnott -> gnott", function() {deepEqual( Stem("gnott"), "gnott");});
test("gnuggade -> gnugg", function() {deepEqual( Stem("gnuggade"), "gnugg");});
test("gny -> gny", function() {deepEqual( Stem("gny"), "gny");});
test("gnyr -> gnyr", function() {deepEqual( Stem("gnyr"), "gnyr");});
test("gnäggade -> gnägg", function() {deepEqual( Stem("gnäggade"), "gnägg");});
test("gnäggande -> gnägg", function() {deepEqual( Stem("gnäggande"), "gnägg");});
test("gnälla -> gnäll", function() {deepEqual( Stem("gnälla"), "gnäll");});
test("gnällande -> gnäll", function() {deepEqual( Stem("gnällande"), "gnäll");});
test("gnällde -> gnälld", function() {deepEqual( Stem("gnällde"), "gnälld");});
test("gnäller -> gnäll", function() {deepEqual( Stem("gnäller"), "gnäll");});
test("go -> go", function() {deepEqual( Stem("go"), "go");});
test("god -> god", function() {deepEqual( Stem("god"), "god");});
test("goda -> god", function() {deepEqual( Stem("goda"), "god");});
test("godas -> god", function() {deepEqual( Stem("godas"), "god");});
test("godbit -> godbit", function() {deepEqual( Stem("godbit"), "godbit");});
test("godbitar -> godbit", function() {deepEqual( Stem("godbitar"), "godbit");});
test("goddagarna -> goddag", function() {deepEqual( Stem("goddagarna"), "goddag");});
test("goddagarne -> goddag", function() {deepEqual( Stem("goddagarne"), "goddag");});
test("goddagspilt -> goddagspilt", function() {deepEqual( Stem("goddagspilt"), "goddagspilt");});
test("gode -> god", function() {deepEqual( Stem("gode"), "god");});
test("godhet -> god", function() {deepEqual( Stem("godhet"), "god");});
test("godheten -> god", function() {deepEqual( Stem("godheten"), "god");});
test("godhjärtade -> godhjärt", function() {deepEqual( Stem("godhjärtade"), "godhjärt");});
test("godlynt -> godlynt", function() {deepEqual( Stem("godlynt"), "godlynt");});
test("godlynthet -> godlynt", function() {deepEqual( Stem("godlynthet"), "godlynt");});
test("godmodiga -> godmod", function() {deepEqual( Stem("godmodiga"), "godmod");});
test("godmodighet -> godmod", function() {deepEqual( Stem("godmodighet"), "godmod");});
test("godmodigt -> godmod", function() {deepEqual( Stem("godmodigt"), "godmod");});
test("godnatt -> godnat", function() {deepEqual( Stem("godnatt"), "godnat");});
test("godo -> godo", function() {deepEqual( Stem("godo"), "godo");});
test("gods -> god", function() {deepEqual( Stem("gods"), "god");});
test("godsagare -> godsag", function() {deepEqual( Stem("godsagare"), "godsag");});
test("godsagarn -> godsagarn", function() {deepEqual( Stem("godsagarn"), "godsagarn");});
test("godsaker -> godsak", function() {deepEqual( Stem("godsaker"), "godsak");});
test("godsakerna -> godsak", function() {deepEqual( Stem("godsakerna"), "godsak");});
test("godset -> godset", function() {deepEqual( Stem("godset"), "godset");});
test("godsinthet -> godsint", function() {deepEqual( Stem("godsinthet"), "godsint");});
test("godsägare -> godsäg", function() {deepEqual( Stem("godsägare"), "godsäg");});
test("godsägarn -> godsägarn", function() {deepEqual( Stem("godsägarn"), "godsägarn");});
test("godt -> godt", function() {deepEqual( Stem("godt"), "godt");});
test("godta -> godt", function() {deepEqual( Stem("godta"), "godt");});
test("godtgjorde -> godtgjord", function() {deepEqual( Stem("godtgjorde"), "godtgjord");});
test("godtycke -> godtyck", function() {deepEqual( Stem("godtycke"), "godtyck");});
test("goivet -> goivet", function() {deepEqual( Stem("goivet"), "goivet");});
test("gol -> gol", function() {deepEqual( Stem("gol"), "gol");});
test("golf -> golf", function() {deepEqual( Stem("golf"), "golf");});
test("golfvet -> golfvet", function() {deepEqual( Stem("golfvet"), "golfvet");});
test("golv -> golv", function() {deepEqual( Stem("golv"), "golv");});
test("golvct -> golvct", function() {deepEqual( Stem("golvct"), "golvct");});
test("golvet -> golvet", function() {deepEqual( Stem("golvet"), "golvet");});
test("golvspringor -> golvspring", function() {deepEqual( Stem("golvspringor"), "golvspring");});
test("golvspringorna -> golvspring", function() {deepEqual( Stem("golvspringorna"), "golvspring");});
test("gommen -> gomm", function() {deepEqual( Stem("gommen"), "gomm");});
test("gonen -> gon", function() {deepEqual( Stem("gonen"), "gon");});
test("gor -> gor", function() {deepEqual( Stem("gor"), "gor");});
test("gora -> gor", function() {deepEqual( Stem("gora"), "gor");});
test("gorna -> gorn", function() {deepEqual( Stem("gorna"), "gorn");});
test("gossaktigt -> gossakt", function() {deepEqual( Stem("gossaktigt"), "gossakt");});
test("gossar -> goss", function() {deepEqual( Stem("gossar"), "goss");});
test("gossarna -> goss", function() {deepEqual( Stem("gossarna"), "goss");});
test("gossarne -> goss", function() {deepEqual( Stem("gossarne"), "goss");});
test("gossc -> gossc", function() {deepEqual( Stem("gossc"), "gossc");});
test("gosse -> goss", function() {deepEqual( Stem("gosse"), "goss");});
test("gossel -> gossel", function() {deepEqual( Stem("gossel"), "gossel");});
test("gossen -> goss", function() {deepEqual( Stem("gossen"), "goss");});
test("gossens -> goss", function() {deepEqual( Stem("gossens"), "goss");});
test("gosshänder -> gosshänd", function() {deepEqual( Stem("gosshänder"), "gosshänd");});
test("gosskola -> gosskol", function() {deepEqual( Stem("gosskola"), "gosskol");});
test("gosspannan -> gosspannan", function() {deepEqual( Stem("gosspannan"), "gosspannan");});
test("gossårens -> gossår", function() {deepEqual( Stem("gossårens"), "gossår");});
test("got -> got", function() {deepEqual( Stem("got"), "got");});
test("gotisk -> gotisk", function() {deepEqual( Stem("gotisk"), "gotisk");});
test("gott -> gott", function() {deepEqual( Stem("gott"), "gott");});
test("gottbard -> gottbard", function() {deepEqual( Stem("gottbard"), "gottbard");});
test("gotter -> gott", function() {deepEqual( Stem("gotter"), "gott");});
test("gottfinnande -> gottfin", function() {deepEqual( Stem("gottfinnande"), "gottfin");});
test("gottgjorde -> gottgjord", function() {deepEqual( Stem("gottgjorde"), "gottgjord");});
test("gottgöra -> gottgör", function() {deepEqual( Stem("gottgöra"), "gottgör");});
test("gottgöres -> gottgör", function() {deepEqual( Stem("gottgöres"), "gottgör");});
test("gotthard -> gotthard", function() {deepEqual( Stem("gotthard"), "gotthard");});
test("gotthards -> gotthard", function() {deepEqual( Stem("gotthards"), "gotthard");});
test("gottpåse -> gottpås", function() {deepEqual( Stem("gottpåse"), "gottpås");});
test("gouttiere -> gouttier", function() {deepEqual( Stem("gouttiere"), "gouttier");});
test("gra -> gra", function() {deepEqual( Stem("gra"), "gra");});
test("grace -> grac", function() {deepEqual( Stem("grace"), "grac");});
test("gracer -> grac", function() {deepEqual( Stem("gracer"), "grac");});
test("gracerna -> grac", function() {deepEqual( Stem("gracerna"), "grac");});
test("graciös -> graciös", function() {deepEqual( Stem("graciös"), "graciös");});
test("graciösa -> graciös", function() {deepEqual( Stem("graciösa"), "graciös");});
test("grad -> grad", function() {deepEqual( Stem("grad"), "grad");});
test("grader -> grad", function() {deepEqual( Stem("grader"), "grad");});
test("graders -> grader", function() {deepEqual( Stem("graders"), "grader");});
test("gradvis -> gradvis", function() {deepEqual( Stem("gradvis"), "gradvis");});
test("graf -> graf", function() {deepEqual( Stem("graf"), "graf");});
test("grafdjup -> grafdjup", function() {deepEqual( Stem("grafdjup"), "grafdjup");});
test("grafvarne -> grafv", function() {deepEqual( Stem("grafvarne"), "grafv");});
test("grafven -> grafv", function() {deepEqual( Stem("grafven"), "grafv");});
test("grafvens -> grafv", function() {deepEqual( Stem("grafvens"), "grafv");});
test("gral -> gral", function() {deepEqual( Stem("gral"), "gral");});
test("grammatikan -> grammatikan", function() {deepEqual( Stem("grammatikan"), "grammatikan");});
test("gran -> gran", function() {deepEqual( Stem("gran"), "gran");});
test("granar -> gran", function() {deepEqual( Stem("granar"), "gran");});
test("granarna -> gran", function() {deepEqual( Stem("granarna"), "gran");});
test("granarnas -> gran", function() {deepEqual( Stem("granarnas"), "gran");});
test("grand -> grand", function() {deepEqual( Stem("grand"), "grand");});
test("granen -> gran", function() {deepEqual( Stem("granen"), "gran");});
test("grankottarna -> grankot", function() {deepEqual( Stem("grankottarna"), "grankot");});
test("grann -> grann", function() {deepEqual( Stem("grann"), "grann");});
test("granna -> grann", function() {deepEqual( Stem("granna"), "grann");});
test("grannar -> grann", function() {deepEqual( Stem("grannar"), "grann");});
test("grannare -> grann", function() {deepEqual( Stem("grannare"), "grann");});
test("grannarne -> grann", function() {deepEqual( Stem("grannarne"), "grann");});
test("grannarnes -> grannarn", function() {deepEqual( Stem("grannarnes"), "grannarn");});
test("grannaste -> grann", function() {deepEqual( Stem("grannaste"), "grann");});
test("granne -> grann", function() {deepEqual( Stem("granne"), "grann");});
test("grannens -> grann", function() {deepEqual( Stem("grannens"), "grann");});
test("grannes -> grann", function() {deepEqual( Stem("grannes"), "grann");});
test("grannlaga -> grannlag", function() {deepEqual( Stem("grannlaga"), "grannlag");});
test("grannlagenhet -> grannlagen", function() {deepEqual( Stem("grannlagenhet"), "grannlagen");});
test("grannlåt -> grannlåt", function() {deepEqual( Stem("grannlåt"), "grannlåt");});
test("grannlåtsdocka -> grannlåtsdock", function() {deepEqual( Stem("grannlåtsdocka"), "grannlåtsdock");});
test("grannlåtsrummen -> grannlåtsrumm", function() {deepEqual( Stem("grannlåtsrummen"), "grannlåtsrumm");});
test("grannqvinna -> grannqvin", function() {deepEqual( Stem("grannqvinna"), "grannqvin");});
test("grannskap -> grannskap", function() {deepEqual( Stem("grannskap"), "grannskap");});
test("grannskapet -> grannskapet", function() {deepEqual( Stem("grannskapet"), "grannskapet");});
test("grannstränderna -> grannstränd", function() {deepEqual( Stem("grannstränderna"), "grannstränd");});
test("grannstugan -> grannstugan", function() {deepEqual( Stem("grannstugan"), "grannstugan");});
test("grannt -> grannt", function() {deepEqual( Stem("grannt"), "grannt");});
test("granorgeln -> granorgeln", function() {deepEqual( Stem("granorgeln"), "granorgeln");});
test("granris -> granris", function() {deepEqual( Stem("granris"), "granris");});
test("granrisat -> granris", function() {deepEqual( Stem("granrisat"), "granris");});
test("granska -> gransk", function() {deepEqual( Stem("granska"), "gransk");});
test("granskade -> gransk", function() {deepEqual( Stem("granskade"), "gransk");});
test("granskande -> gransk", function() {deepEqual( Stem("granskande"), "gransk");});
test("granskare -> gransk", function() {deepEqual( Stem("granskare"), "gransk");});
test("granskat -> gransk", function() {deepEqual( Stem("granskat"), "gransk");});
test("granskog -> granskog", function() {deepEqual( Stem("granskog"), "granskog");});
test("granskogen -> granskog", function() {deepEqual( Stem("granskogen"), "granskog");});
test("grant -> grant", function() {deepEqual( Stem("grant"), "grant");});
test("grantop -> grantop", function() {deepEqual( Stem("grantop"), "grantop");});
test("grata -> grat", function() {deepEqual( Stem("grata"), "grat");});
test("gratiers -> gratier", function() {deepEqual( Stem("gratiers"), "gratier");});
test("gratis -> gratis", function() {deepEqual( Stem("gratis"), "gratis");});
test("gratulationer -> gratulation", function() {deepEqual( Stem("gratulationer"), "gratulation");});
test("gratulera -> gratuler", function() {deepEqual( Stem("gratulera"), "gratuler");});
test("gratulerade -> gratuler", function() {deepEqual( Stem("gratulerade"), "gratuler");});
test("grav -> grav", function() {deepEqual( Stem("grav"), "grav");});
test("gravar -> grav", function() {deepEqual( Stem("gravar"), "grav");});
test("gravarna -> grav", function() {deepEqual( Stem("gravarna"), "grav");});
test("graven -> grav", function() {deepEqual( Stem("graven"), "grav");});
test("gravera -> graver", function() {deepEqual( Stem("gravera"), "graver");});
test("gravlika -> gravlik", function() {deepEqual( Stem("gravlika"), "gravlik");});
test("gravstenar -> gravsten", function() {deepEqual( Stem("gravstenar"), "gravsten");});
test("gravstenarna -> gravsten", function() {deepEqual( Stem("gravstenarna"), "gravsten");});
test("gravvård -> gravvård", function() {deepEqual( Stem("gravvård"), "gravvård");});
test("gravvårdar -> gravvård", function() {deepEqual( Stem("gravvårdar"), "gravvård");});
test("gravyrer -> gravyr", function() {deepEqual( Stem("gravyrer"), "gravyr");});
test("gredelin -> gredelin", function() {deepEqual( Stem("gredelin"), "gredelin");});
test("gredelina -> gredelin", function() {deepEqual( Stem("gredelina"), "gredelin");});
test("gredelint -> gredelint", function() {deepEqual( Stem("gredelint"), "gredelint");});
test("gregorius -> gregorius", function() {deepEqual( Stem("gregorius"), "gregorius");});
test("grekiska -> grekisk", function() {deepEqual( Stem("grekiska"), "grekisk");});
test("gren -> gren", function() {deepEqual( Stem("gren"), "gren");});
test("grenar -> gren", function() {deepEqual( Stem("grenar"), "gren");});
test("grenarna -> gren", function() {deepEqual( Stem("grenarna"), "gren");});
test("grenen -> gren", function() {deepEqual( Stem("grenen"), "gren");});
test("grensle -> grensl", function() {deepEqual( Stem("grensle"), "grensl");});
test("grep -> grep", function() {deepEqual( Stem("grep"), "grep");});
test("grepar -> grep", function() {deepEqual( Stem("grepar"), "grep");});
test("grepe -> grep", function() {deepEqual( Stem("grepe"), "grep");});
test("grepen -> grep", function() {deepEqual( Stem("grepen"), "grep");});
test("grepo -> grepo", function() {deepEqual( Stem("grepo"), "grepo");});
test("grepp -> grepp", function() {deepEqual( Stem("grepp"), "grepp");});
test("greppet -> greppet", function() {deepEqual( Stem("greppet"), "greppet");});
test("greps -> grep", function() {deepEqual( Stem("greps"), "grep");});
test("gret -> gret", function() {deepEqual( Stem("gret"), "gret");});
test("gretchens -> gretch", function() {deepEqual( Stem("gretchens"), "gretch");});
test("grevar -> grev", function() {deepEqual( Stem("grevar"), "grev");});
test("greve -> grev", function() {deepEqual( Stem("greve"), "grev");});
test("grevegriften -> grevegrift", function() {deepEqual( Stem("grevegriften"), "grevegrift");});
test("greven -> grev", function() {deepEqual( Stem("greven"), "grev");});
test("grevens -> grev", function() {deepEqual( Stem("grevens"), "grev");});
test("grevinna -> grevin", function() {deepEqual( Stem("grevinna"), "grevin");});
test("grevinnan -> grevinnan", function() {deepEqual( Stem("grevinnan"), "grevinnan");});
test("grevinnor -> grevin", function() {deepEqual( Stem("grevinnor"), "grevin");});
test("grevliga -> grev", function() {deepEqual( Stem("grevliga"), "grev");});
test("grevlige -> grev", function() {deepEqual( Stem("grevlige"), "grev");});
test("grevligt -> grev", function() {deepEqual( Stem("grevligt"), "grev");});
test("griffeltavla -> griffeltavl", function() {deepEqual( Stem("griffeltavla"), "griffeltavl");});
test("griller -> grill", function() {deepEqual( Stem("griller"), "grill");});
test("grillerna -> grill", function() {deepEqual( Stem("grillerna"), "grill");});
test("grimas -> grim", function() {deepEqual( Stem("grimas"), "grim");});
test("grimaserade -> grimaser", function() {deepEqual( Stem("grimaserade"), "grimaser");});
test("grimaserande -> grimaser", function() {deepEqual( Stem("grimaserande"), "grimaser");});
test("grimen -> grim", function() {deepEqual( Stem("grimen"), "grim");});
test("grimma -> grimm", function() {deepEqual( Stem("grimma"), "grimm");});
test("grina -> grin", function() {deepEqual( Stem("grina"), "grin");});
test("grinade -> grin", function() {deepEqual( Stem("grinade"), "grin");});
test("grinande -> grin", function() {deepEqual( Stem("grinande"), "grin");});
test("grind -> grind", function() {deepEqual( Stem("grind"), "grind");});
test("grindar -> grind", function() {deepEqual( Stem("grindar"), "grind");});
test("grinden -> grind", function() {deepEqual( Stem("grinden"), "grind");});
test("grindstolpar -> grindstolp", function() {deepEqual( Stem("grindstolpar"), "grindstolp");});
test("gripa -> grip", function() {deepEqual( Stem("gripa"), "grip");});
test("gripande -> grip", function() {deepEqual( Stem("gripande"), "grip");});
test("griparna -> grip", function() {deepEqual( Stem("griparna"), "grip");});
test("gripas -> grip", function() {deepEqual( Stem("gripas"), "grip");});
test("gripen -> grip", function() {deepEqual( Stem("gripen"), "grip");});
test("griper -> grip", function() {deepEqual( Stem("griper"), "grip");});
test("gripit -> gripit", function() {deepEqual( Stem("gripit"), "gripit");});
test("gripna -> gripn", function() {deepEqual( Stem("gripna"), "gripn");});
test("gris -> gris", function() {deepEqual( Stem("gris"), "gris");});
test("grisen -> gris", function() {deepEqual( Stem("grisen"), "gris");});
test("gro -> gro", function() {deepEqual( Stem("gro"), "gro");});
test("groda -> grod", function() {deepEqual( Stem("groda"), "grod");});
test("grodde -> grodd", function() {deepEqual( Stem("grodde"), "grodd");});
test("grodden -> grodd", function() {deepEqual( Stem("grodden"), "grodd");});
test("grof -> grof", function() {deepEqual( Stem("grof"), "grof");});
test("grofkorniga -> grofkorn", function() {deepEqual( Stem("grofkorniga"), "grofkorn");});
test("groft -> groft", function() {deepEqual( Stem("groft"), "groft");});
test("grofva -> grofv", function() {deepEqual( Stem("grofva"), "grofv");});
test("grogg -> grogg", function() {deepEqual( Stem("grogg"), "grogg");});
test("groggar -> grogg", function() {deepEqual( Stem("groggar"), "grogg");});
test("grop -> grop", function() {deepEqual( Stem("grop"), "grop");});
test("gropar -> grop", function() {deepEqual( Stem("gropar"), "grop");});
test("groparna -> grop", function() {deepEqual( Stem("groparna"), "grop");});
test("gropen -> grop", function() {deepEqual( Stem("gropen"), "grop");});
test("gropiga -> grop", function() {deepEqual( Stem("gropiga"), "grop");});
test("gror -> gror", function() {deepEqual( Stem("gror"), "gror");});
test("grossess -> grossess", function() {deepEqual( Stem("grossess"), "grossess");});
test("grosshandlardotter -> grosshandlardot", function() {deepEqual( Stem("grosshandlardotter"), "grosshandlardot");});
test("grosshandlare -> grosshandl", function() {deepEqual( Stem("grosshandlare"), "grosshandl");});
test("grotesk -> grotesk", function() {deepEqual( Stem("grotesk"), "grotesk");});
test("grov -> grov", function() {deepEqual( Stem("grov"), "grov");});
test("grova -> grov", function() {deepEqual( Stem("grova"), "grov");});
test("grovkornigaste -> grovkorn", function() {deepEqual( Stem("grovkornigaste"), "grovkorn");});
test("grovt -> grovt", function() {deepEqual( Stem("grovt"), "grovt");});
test("grubbel -> grubbel", function() {deepEqual( Stem("grubbel"), "grubbel");});
test("grubbla -> grubbl", function() {deepEqual( Stem("grubbla"), "grubbl");});
test("grubblade -> grubbl", function() {deepEqual( Stem("grubblade"), "grubbl");});
test("grubblande -> grubbl", function() {deepEqual( Stem("grubblande"), "grubbl");});
test("grubblandet -> grubbl", function() {deepEqual( Stem("grubblandet"), "grubbl");});
test("grubblar -> grubbl", function() {deepEqual( Stem("grubblar"), "grubbl");});
test("grubblat -> grubbl", function() {deepEqual( Stem("grubblat"), "grubbl");});
test("grubbleri -> grubbleri", function() {deepEqual( Stem("grubbleri"), "grubbleri");});
test("grufliga -> gruf", function() {deepEqual( Stem("grufliga"), "gruf");});
test("grufligt -> gruf", function() {deepEqual( Stem("grufligt"), "gruf");});
test("grumlade -> gruml", function() {deepEqual( Stem("grumlade"), "gruml");});
test("grumlig -> grum", function() {deepEqual( Stem("grumlig"), "grum");});
test("grumliga -> grum", function() {deepEqual( Stem("grumliga"), "grum");});
test("grumligt -> grum", function() {deepEqual( Stem("grumligt"), "grum");});
test("grund -> grund", function() {deepEqual( Stem("grund"), "grund");});
test("grunda -> grund", function() {deepEqual( Stem("grunda"), "grund");});
test("grundad -> grund", function() {deepEqual( Stem("grundad"), "grund");});
test("grundade -> grund", function() {deepEqual( Stem("grundade"), "grund");});
test("grundas -> grund", function() {deepEqual( Stem("grundas"), "grund");});
test("grundaste -> grund", function() {deepEqual( Stem("grundaste"), "grund");});
test("grundat -> grund", function() {deepEqual( Stem("grundat"), "grund");});
test("grundats -> grundat", function() {deepEqual( Stem("grundats"), "grundat");});
test("grunddrag -> grunddrag", function() {deepEqual( Stem("grunddrag"), "grunddrag");});
test("grunddrifterna -> grunddrift", function() {deepEqual( Stem("grunddrifterna"), "grunddrift");});
test("grunden -> grund", function() {deepEqual( Stem("grunden"), "grund");});
test("grundet -> grundet", function() {deepEqual( Stem("grundet"), "grundet");});
test("grundlagda -> grundlag", function() {deepEqual( Stem("grundlagda"), "grundlag");});
test("grundlig -> grund", function() {deepEqual( Stem("grundlig"), "grund");});
test("grundligt -> grund", function() {deepEqual( Stem("grundligt"), "grund");});
test("grundpelare -> grundpel", function() {deepEqual( Stem("grundpelare"), "grundpel");});
test("grundsatsen -> grundsats", function() {deepEqual( Stem("grundsatsen"), "grundsats");});
test("grundsatser -> grundsats", function() {deepEqual( Stem("grundsatser"), "grundsats");});
test("grundval -> grundval", function() {deepEqual( Stem("grundval"), "grundval");});
test("grupp -> grupp", function() {deepEqual( Stem("grupp"), "grupp");});
test("gruppen -> grupp", function() {deepEqual( Stem("gruppen"), "grupp");});
test("grupper -> grupp", function() {deepEqual( Stem("grupper"), "grupp");});
test("grupperade -> grupper", function() {deepEqual( Stem("grupperade"), "grupper");});
test("grus -> grus", function() {deepEqual( Stem("grus"), "grus");});
test("gruset -> gruset", function() {deepEqual( Stem("gruset"), "gruset");});
test("gruvade -> gruv", function() {deepEqual( Stem("gruvade"), "gruv");});
test("gruvlig -> gruv", function() {deepEqual( Stem("gruvlig"), "gruv");});
test("gruvligt -> gruv", function() {deepEqual( Stem("gruvligt"), "gruv");});
test("gry -> gry", function() {deepEqual( Stem("gry"), "gry");});
test("gryende -> gryend", function() {deepEqual( Stem("gryende"), "gryend");});
test("grym -> grym", function() {deepEqual( Stem("grym"), "grym");});
test("grymheten -> grym", function() {deepEqual( Stem("grymheten"), "grym");});
test("grymheter -> grym", function() {deepEqual( Stem("grymheter"), "grym");});
test("grymma -> grymm", function() {deepEqual( Stem("grymma"), "grymm");});
test("grymmaste -> grymm", function() {deepEqual( Stem("grymmaste"), "grymm");});
test("grymt -> grymt", function() {deepEqual( Stem("grymt"), "grymt");});
test("gryngröten -> gryngröt", function() {deepEqual( Stem("gryngröten"), "gryngröt");});
test("gryning -> gryning", function() {deepEqual( Stem("gryning"), "gryning");});
test("gryningen -> gryning", function() {deepEqual( Stem("gryningen"), "gryning");});
test("gryningens -> gryning", function() {deepEqual( Stem("gryningens"), "gryning");});
test("gryningsdagern -> gryningsdag", function() {deepEqual( Stem("gryningsdagern"), "gryningsdag");});
test("grynvälling -> grynvälling", function() {deepEqual( Stem("grynvälling"), "grynvälling");});
test("gryr -> gryr", function() {deepEqual( Stem("gryr"), "gryr");});
test("gryta -> gryt", function() {deepEqual( Stem("gryta"), "gryt");});
test("grytor -> gryt", function() {deepEqual( Stem("grytor"), "gryt");});
test("grytorna -> gryt", function() {deepEqual( Stem("grytorna"), "gryt");});
test("gräddade -> grädd", function() {deepEqual( Stem("gräddade"), "grädd");});
test("grädde -> grädd", function() {deepEqual( Stem("grädde"), "grädd");});
test("gräl -> gräl", function() {deepEqual( Stem("gräl"), "gräl");});
test("gräla -> gräl", function() {deepEqual( Stem("gräla"), "gräl");});
test("grälade -> gräl", function() {deepEqual( Stem("grälade"), "gräl");});
test("grälande -> gräl", function() {deepEqual( Stem("grälande"), "gräl");});
test("grälat -> gräl", function() {deepEqual( Stem("grälat"), "gräl");});
test("grälen -> gräl", function() {deepEqual( Stem("grälen"), "gräl");});
test("grälla -> gräll", function() {deepEqual( Stem("grälla"), "gräll");});
test("grämde -> grämd", function() {deepEqual( Stem("grämde"), "grämd");});
test("grämelse -> gräm", function() {deepEqual( Stem("grämelse"), "gräm");});
test("grämelsens -> gräm", function() {deepEqual( Stem("grämelsens"), "gräm");});
test("grämer -> gräm", function() {deepEqual( Stem("grämer"), "gräm");});
test("grämt -> grämt", function() {deepEqual( Stem("grämt"), "grämt");});
test("gränd -> gränd", function() {deepEqual( Stem("gränd"), "gränd");});
test("gränden -> gränd", function() {deepEqual( Stem("gränden"), "gränd");});
test("gränder -> gränd", function() {deepEqual( Stem("gränder"), "gränd");});
test("gränderna -> gränd", function() {deepEqual( Stem("gränderna"), "gränd");});
test("grändernas -> gränd", function() {deepEqual( Stem("grändernas"), "gränd");});
test("gräns -> grän", function() {deepEqual( Stem("gräns"), "grän");});
test("gränsade -> gräns", function() {deepEqual( Stem("gränsade"), "gräns");});
test("gränsande -> gräns", function() {deepEqual( Stem("gränsande"), "gräns");});
test("gränsen -> gräns", function() {deepEqual( Stem("gränsen"), "gräns");});
test("gränser -> gräns", function() {deepEqual( Stem("gränser"), "gräns");});
test("gränserna -> gräns", function() {deepEqual( Stem("gränserna"), "gräns");});
test("gränslös -> gränslös", function() {deepEqual( Stem("gränslös"), "gränslös");});
test("gränslöst -> gränslös", function() {deepEqual( Stem("gränslöst"), "gränslös");});
test("gräs -> gräs", function() {deepEqual( Stem("gräs"), "gräs");});
test("gräsbevuxen -> gräsbevux", function() {deepEqual( Stem("gräsbevuxen"), "gräsbevux");});
test("gräsbevuxna -> gräsbevuxn", function() {deepEqual( Stem("gräsbevuxna"), "gräsbevuxn");});
test("gräsbänkar -> gräsbänk", function() {deepEqual( Stem("gräsbänkar"), "gräsbänk");});
test("gräset -> gräset", function() {deepEqual( Stem("gräset"), "gräset");});
test("gräsliga -> gräs", function() {deepEqual( Stem("gräsliga"), "gräs");});
test("gräsligaste -> gräs", function() {deepEqual( Stem("gräsligaste"), "gräs");});
test("gräsligt -> gräs", function() {deepEqual( Stem("gräsligt"), "gräs");});
test("gräsmattan -> gräsmattan", function() {deepEqual( Stem("gräsmattan"), "gräsmattan");});
test("gräsmattor -> gräsmat", function() {deepEqual( Stem("gräsmattor"), "gräsmat");});
test("gräsmattorna -> gräsmat", function() {deepEqual( Stem("gräsmattorna"), "gräsmat");});
test("gräsplan -> gräsplan", function() {deepEqual( Stem("gräsplan"), "gräsplan");});
test("grässtrån -> grässtrån", function() {deepEqual( Stem("grässtrån"), "grässtrån");});
test("grät -> grät", function() {deepEqual( Stem("grät"), "grät");});
test("gräto -> gräto", function() {deepEqual( Stem("gräto"), "gräto");});
test("gräv -> gräv", function() {deepEqual( Stem("gräv"), "gräv");});
test("gräva -> gräv", function() {deepEqual( Stem("gräva"), "gräv");});
test("grävda -> grävd", function() {deepEqual( Stem("grävda"), "grävd");});
test("grävde -> grävd", function() {deepEqual( Stem("grävde"), "grävd");});
test("gräver -> gräv", function() {deepEqual( Stem("gräver"), "gräv");});
test("grå -> grå", function() {deepEqual( Stem("grå"), "grå");});
test("gråa -> gråa", function() {deepEqual( Stem("gråa"), "gråa");});
test("gråare -> gråar", function() {deepEqual( Stem("gråare"), "gråar");});
test("gråblandad -> gråbland", function() {deepEqual( Stem("gråblandad"), "gråbland");});
test("gråblanka -> gråblank", function() {deepEqual( Stem("gråblanka"), "gråblank");});
test("gråbleka -> gråblek", function() {deepEqual( Stem("gråbleka"), "gråblek");});
test("grådask -> grådask", function() {deepEqual( Stem("grådask"), "grådask");});
test("grådaskiga -> grådask", function() {deepEqual( Stem("grådaskiga"), "grådask");});
test("grågröna -> grågrön", function() {deepEqual( Stem("grågröna"), "grågrön");});
test("gråhet -> gråhet", function() {deepEqual( Stem("gråhet"), "gråhet");});
test("gråkappeexcellensen -> gråkappeexcellens", function() {deepEqual( Stem("gråkappeexcellensen"), "gråkappeexcellens");});
test("gråkulet -> gråkulet", function() {deepEqual( Stem("gråkulet"), "gråkulet");});
test("grånade -> grån", function() {deepEqual( Stem("grånade"), "grån");});
test("grånande -> grån", function() {deepEqual( Stem("grånande"), "grån");});
test("grånat -> grån", function() {deepEqual( Stem("grånat"), "grån");});
test("gråsprängd -> gråspräng", function() {deepEqual( Stem("gråsprängd"), "gråspräng");});
test("gråsprängda -> gråspräng", function() {deepEqual( Stem("gråsprängda"), "gråspräng");});
test("gråsprängdt -> gråsprängd", function() {deepEqual( Stem("gråsprängdt"), "gråsprängd");});
test("gråsprängt -> gråspräng", function() {deepEqual( Stem("gråsprängt"), "gråspräng");});
test("gråsten -> gråst", function() {deepEqual( Stem("gråsten"), "gråst");});
test("gråstrimmig -> gråstrimm", function() {deepEqual( Stem("gråstrimmig"), "gråstrimm");});
test("gråt -> gråt", function() {deepEqual( Stem("gråt"), "gråt");});
test("gråta -> gråt", function() {deepEqual( Stem("gråta"), "gråt");});
test("gråtande -> gråt", function() {deepEqual( Stem("gråtande"), "gråt");});
test("gråte -> gråt", function() {deepEqual( Stem("gråte"), "gråt");});
test("gråten -> gråt", function() {deepEqual( Stem("gråten"), "gråt");});
test("gråter -> gråt", function() {deepEqual( Stem("gråter"), "gråt");});
test("gråtfärdig -> gråtfärd", function() {deepEqual( Stem("gråtfärdig"), "gråtfärd");});
test("gråtit -> gråtit", function() {deepEqual( Stem("gråtit"), "gråtit");});
test("gråtkramp -> gråtkramp", function() {deepEqual( Stem("gråtkramp"), "gråtkramp");});
test("grått -> grått", function() {deepEqual( Stem("grått"), "grått");});
test("gröfsta -> gröfst", function() {deepEqual( Stem("gröfsta"), "gröfst");});
test("grön -> grön", function() {deepEqual( Stem("grön"), "grön");});
test("gröna -> grön", function() {deepEqual( Stem("gröna"), "grön");});
test("grönaktiga -> grönakt", function() {deepEqual( Stem("grönaktiga"), "grönakt");});
test("gröngräset -> gröngräset", function() {deepEqual( Stem("gröngräset"), "gröngräset");});
test("grönmålad -> grönmål", function() {deepEqual( Stem("grönmålad"), "grönmål");});
test("grönmålade -> grönmål", function() {deepEqual( Stem("grönmålade"), "grönmål");});
test("grönska -> grönsk", function() {deepEqual( Stem("grönska"), "grönsk");});
test("grönskan -> grönskan", function() {deepEqual( Stem("grönskan"), "grönskan");});
test("grönskande -> grönsk", function() {deepEqual( Stem("grönskande"), "grönsk");});
test("grönstedts -> grönsted", function() {deepEqual( Stem("grönstedts"), "grönsted");});
test("grönt -> grönt", function() {deepEqual( Stem("grönt"), "grönt");});
test("gröt -> gröt", function() {deepEqual( Stem("gröt"), "gröt");});
test("gröten -> gröt", function() {deepEqual( Stem("gröten"), "gröt");});
test("grötig -> gröt", function() {deepEqual( Stem("grötig"), "gröt");});
test("grövre -> grövr", function() {deepEqual( Stem("grövre"), "grövr");});
test("gt -> gt", function() {deepEqual( Stem("gt"), "gt");});
test("gtlbben -> gtlbben", function() {deepEqual( Stem("gtlbben"), "gtlbben");});
test("gtngo -> gtngo", function() {deepEqual( Stem("gtngo"), "gtngo");});
test("gtvis -> gtvis", function() {deepEqual( Stem("gtvis"), "gtvis");});
test("gu -> gu", function() {deepEqual( Stem("gu"), "gu");});
test("gubb -> gubb", function() {deepEqual( Stem("gubb"), "gubb");});
test("gubbar -> gubb", function() {deepEqual( Stem("gubbar"), "gubb");});
test("gubbarne -> gubb", function() {deepEqual( Stem("gubbarne"), "gubb");});
test("gubbe -> gubb", function() {deepEqual( Stem("gubbe"), "gubb");});
test("gubben -> gubb", function() {deepEqual( Stem("gubben"), "gubb");});
test("gubbens -> gubb", function() {deepEqual( Stem("gubbens"), "gubb");});
test("gubbes -> gubb", function() {deepEqual( Stem("gubbes"), "gubb");});
test("gubbsatiriskt -> gubbsatirisk", function() {deepEqual( Stem("gubbsatiriskt"), "gubbsatirisk");});
test("gubevars -> gubevar", function() {deepEqual( Stem("gubevars"), "gubevar");});
test("gud -> gud", function() {deepEqual( Stem("gud"), "gud");});
test("gudadryck -> gudadryck", function() {deepEqual( Stem("gudadryck"), "gudadryck");});
test("gudaktiga -> gudakt", function() {deepEqual( Stem("gudaktiga"), "gudakt");});
test("gudaktigheten -> gudakt", function() {deepEqual( Stem("gudaktigheten"), "gudakt");});
test("gudarna -> gud", function() {deepEqual( Stem("gudarna"), "gud");});
test("gudarnes -> gudarn", function() {deepEqual( Stem("gudarnes"), "gudarn");});
test("gudars -> gudar", function() {deepEqual( Stem("gudars"), "gudar");});
test("gudbevars -> gudbevar", function() {deepEqual( Stem("gudbevars"), "gudbevar");});
test("guden -> gud", function() {deepEqual( Stem("guden"), "gud");});
test("gudens -> gud", function() {deepEqual( Stem("gudens"), "gud");});
test("gudfar -> gudf", function() {deepEqual( Stem("gudfar"), "gudf");});
test("gudfruktig -> gudfrukt", function() {deepEqual( Stem("gudfruktig"), "gudfrukt");});
test("gudfruktiga -> gudfrukt", function() {deepEqual( Stem("gudfruktiga"), "gudfrukt");});
test("gudfruktigt -> gudfrukt", function() {deepEqual( Stem("gudfruktigt"), "gudfrukt");});
test("gudi -> gudi", function() {deepEqual( Stem("gudi"), "gudi");});
test("gudlöshet -> gudlös", function() {deepEqual( Stem("gudlöshet"), "gudlös");});
test("gudlöst -> gudlös", function() {deepEqual( Stem("gudlöst"), "gudlös");});
test("gudnås -> gudnås", function() {deepEqual( Stem("gudnås"), "gudnås");});
test("gudom -> gudom", function() {deepEqual( Stem("gudom"), "gudom");});
test("gudomens -> gudom", function() {deepEqual( Stem("gudomens"), "gudom");});
test("gudomlig -> gudom", function() {deepEqual( Stem("gudomlig"), "gudom");});
test("gudomliga -> gudom", function() {deepEqual( Stem("gudomliga"), "gudom");});
test("gudomligare -> gudom", function() {deepEqual( Stem("gudomligare"), "gudom");});
test("gudomlighet -> gudom", function() {deepEqual( Stem("gudomlighet"), "gudom");});
test("guds -> gud", function() {deepEqual( Stem("guds"), "gud");});
test("gudsfruktan -> gudsfruktan", function() {deepEqual( Stem("gudsfruktan"), "gudsfruktan");});
test("gudskelov -> gudskelov", function() {deepEqual( Stem("gudskelov"), "gudskelov");});
test("gudson -> gudson", function() {deepEqual( Stem("gudson"), "gudson");});
test("gudstjänstens -> gudstjänst", function() {deepEqual( Stem("gudstjänstens"), "gudstjänst");});
test("gudsängeln -> gudsängeln", function() {deepEqual( Stem("gudsängeln"), "gudsängeln");});
test("guhl -> guhl", function() {deepEqual( Stem("guhl"), "guhl");});
test("gul -> gul", function() {deepEqual( Stem("gul"), "gul");});
test("gula -> gul", function() {deepEqual( Stem("gula"), "gul");});
test("gulaktig -> gulakt", function() {deepEqual( Stem("gulaktig"), "gulakt");});
test("gulbetsade -> gulbets", function() {deepEqual( Stem("gulbetsade"), "gulbets");});
test("gulblekt -> gulblek", function() {deepEqual( Stem("gulblekt"), "gulblek");});
test("guld -> guld", function() {deepEqual( Stem("guld"), "guld");});
test("guldbroderad -> guldbroder", function() {deepEqual( Stem("guldbroderad"), "guldbroder");});
test("guldbrosch -> guldbrosch", function() {deepEqual( Stem("guldbrosch"), "guldbrosch");});
test("gulddosan -> gulddosan", function() {deepEqual( Stem("gulddosan"), "gulddosan");});
test("guldets -> guldet", function() {deepEqual( Stem("guldets"), "guldet");});
test("guldfargad -> guldfarg", function() {deepEqual( Stem("guldfargad"), "guldfarg");});
test("guldfärg -> guldfärg", function() {deepEqual( Stem("guldfärg"), "guldfärg");});
test("guldfärgade -> guldfärg", function() {deepEqual( Stem("guldfärgade"), "guldfärg");});
test("guldgula -> guldgul", function() {deepEqual( Stem("guldgula"), "guldgul");});
test("guldklackar -> guldklack", function() {deepEqual( Stem("guldklackar"), "guldklack");});
test("guldklot -> guldklot", function() {deepEqual( Stem("guldklot"), "guldklot");});
test("guldlöv -> guldlöv", function() {deepEqual( Stem("guldlöv"), "guldlöv");});
test("guldpapper -> guldpapp", function() {deepEqual( Stem("guldpapper"), "guldpapp");});
test("guldprins -> guldprin", function() {deepEqual( Stem("guldprins"), "guldprin");});
test("guldskimmer -> guldskimm", function() {deepEqual( Stem("guldskimmer"), "guldskimm");});
test("guldskimrande -> guldskimr", function() {deepEqual( Stem("guldskimrande"), "guldskimr");});
test("guldskärp -> guldskärp", function() {deepEqual( Stem("guldskärp"), "guldskärp");});
test("guldskål -> guldskål", function() {deepEqual( Stem("guldskål"), "guldskål");});
test("guldsmedsbutik -> guldsmedsbutik", function() {deepEqual( Stem("guldsmedsbutik"), "guldsmedsbutik");});
test("guldsnitt -> guldsnit", function() {deepEqual( Stem("guldsnitt"), "guldsnit");});
test("guldsnusdosan -> guldsnusdosan", function() {deepEqual( Stem("guldsnusdosan"), "guldsnusdosan");});
test("guldstoft -> guldstoft", function() {deepEqual( Stem("guldstoft"), "guldstoft");});
test("guldtränsar -> guldträns", function() {deepEqual( Stem("guldtränsar"), "guldträns");});
test("guldur -> guldur", function() {deepEqual( Stem("guldur"), "guldur");});
test("guldårens -> guldår", function() {deepEqual( Stem("guldårens"), "guldår");});
test("gulgrå -> gulgrå", function() {deepEqual( Stem("gulgrå"), "gulgrå");});
test("gulgrått -> gulgråt", function() {deepEqual( Stem("gulgrått"), "gulgråt");});
test("gulgrön -> gulgrön", function() {deepEqual( Stem("gulgrön"), "gulgrön");});
test("gulhvitt -> gulhvit", function() {deepEqual( Stem("gulhvitt"), "gulhvit");});
test("gulhårige -> gulhår", function() {deepEqual( Stem("gulhårige"), "gulhår");});
test("gull -> gull", function() {deepEqual( Stem("gull"), "gull");});
test("gullet -> gullet", function() {deepEqual( Stem("gullet"), "gullet");});
test("gullgult -> gullgult", function() {deepEqual( Stem("gullgult"), "gullgult");});
test("gullros -> gullro", function() {deepEqual( Stem("gullros"), "gullro");});
test("gullvivor -> gullviv", function() {deepEqual( Stem("gullvivor"), "gullviv");});
test("gulmålad -> gulmål", function() {deepEqual( Stem("gulmålad"), "gulmål");});
test("gulna -> guln", function() {deepEqual( Stem("gulna"), "guln");});
test("gulnad -> guln", function() {deepEqual( Stem("gulnad"), "guln");});
test("gulnade -> guln", function() {deepEqual( Stem("gulnade"), "guln");});
test("gulnat -> guln", function() {deepEqual( Stem("gulnat"), "guln");});
test("gulrosig -> gulros", function() {deepEqual( Stem("gulrosig"), "gulros");});
test("gulrosiga -> gulros", function() {deepEqual( Stem("gulrosiga"), "gulros");});
test("gulröd -> gulröd", function() {deepEqual( Stem("gulröd"), "gulröd");});
test("gult -> gult", function() {deepEqual( Stem("gult"), "gult");});
test("gum -> gum", function() {deepEqual( Stem("gum"), "gum");});
test("gumansikte -> gumansik", function() {deepEqual( Stem("gumansikte"), "gumansik");});
test("gumma -> gumm", function() {deepEqual( Stem("gumma"), "gumm");});
test("gumman -> gumman", function() {deepEqual( Stem("gumman"), "gumman");});
test("gummi -> gummi", function() {deepEqual( Stem("gummi"), "gummi");});
test("gummiansikte -> gummiansik", function() {deepEqual( Stem("gummiansikte"), "gummiansik");});
test("gummihandske -> gummihandsk", function() {deepEqual( Stem("gummihandske"), "gummihandsk");});
test("gummiring -> gummiring", function() {deepEqual( Stem("gummiring"), "gummiring");});
test("gummor -> gumm", function() {deepEqual( Stem("gummor"), "gumm");});
test("gummorna -> gumm", function() {deepEqual( Stem("gummorna"), "gumm");});
test("gummors -> gummor", function() {deepEqual( Stem("gummors"), "gummor");});
test("gung -> gung", function() {deepEqual( Stem("gung"), "gung");});
test("gunga -> gung", function() {deepEqual( Stem("gunga"), "gung");});
test("gungade -> gung", function() {deepEqual( Stem("gungade"), "gung");});
test("gungande -> gung", function() {deepEqual( Stem("gungande"), "gung");});
test("gunst -> gunst", function() {deepEqual( Stem("gunst"), "gunst");});
test("gunstiga -> gunst", function() {deepEqual( Stem("gunstiga"), "gunst");});
test("gunstige -> gunst", function() {deepEqual( Stem("gunstige"), "gunst");});
test("gunstigt -> gunst", function() {deepEqual( Stem("gunstigt"), "gunst");});
test("gunstling -> gunstling", function() {deepEqual( Stem("gunstling"), "gunstling");});
test("gunstlingen -> gunstling", function() {deepEqual( Stem("gunstlingen"), "gunstling");});
test("gunås -> gunås", function() {deepEqual( Stem("gunås"), "gunås");});
test("guppade -> gupp", function() {deepEqual( Stem("guppade"), "gupp");});
test("gurka -> gurk", function() {deepEqual( Stem("gurka"), "gurk");});
test("gurkornas -> gurk", function() {deepEqual( Stem("gurkornas"), "gurk");});
test("gustaf -> gustaf", function() {deepEqual( Stem("gustaf"), "gustaf");});
test("gustav -> gustav", function() {deepEqual( Stem("gustav"), "gustav");});
test("guttaperkaboll -> guttaperkaboll", function() {deepEqual( Stem("guttaperkaboll"), "guttaperkaboll");});
test("gutår -> gutår", function() {deepEqual( Stem("gutår"), "gutår");});
test("gyckel -> gyckel", function() {deepEqual( Stem("gyckel"), "gyckel");});
test("gyckla -> gyckl", function() {deepEqual( Stem("gyckla"), "gyckl");});
test("gycklade -> gyckl", function() {deepEqual( Stem("gycklade"), "gyckl");});
test("gycklar -> gyckl", function() {deepEqual( Stem("gycklar"), "gyckl");});
test("gycklare -> gyckl", function() {deepEqual( Stem("gycklare"), "gyckl");});
test("gycklaren -> gyckl", function() {deepEqual( Stem("gycklaren"), "gyckl");});
test("gycklarlynne -> gycklarlyn", function() {deepEqual( Stem("gycklarlynne"), "gycklarlyn");});
test("gyllenbandade -> gyllenband", function() {deepEqual( Stem("gyllenbandade"), "gyllenband");});
test("gyllenborg -> gyllenborg", function() {deepEqual( Stem("gyllenborg"), "gyllenborg");});
test("gyllenc -> gyllenc", function() {deepEqual( Stem("gyllenc"), "gyllenc");});
test("gyllene -> gyllen", function() {deepEqual( Stem("gyllene"), "gyllen");});
test("gyllenröd -> gyllenröd", function() {deepEqual( Stem("gyllenröd"), "gyllenröd");});
test("gyllenstjärnan -> gyllenstjärnan", function() {deepEqual( Stem("gyllenstjärnan"), "gyllenstjärnan");});
test("gyllne -> gylln", function() {deepEqual( Stem("gyllne"), "gylln");});
test("gymnasiitid -> gymnasiitid", function() {deepEqual( Stem("gymnasiitid"), "gymnasiitid");});
test("gymnasist -> gymnasist", function() {deepEqual( Stem("gymnasist"), "gymnasist");});
test("gymnasisten -> gymnasist", function() {deepEqual( Stem("gymnasisten"), "gymnasist");});
test("gymnasium -> gymnasium", function() {deepEqual( Stem("gymnasium"), "gymnasium");});
test("gymnastiklokalen -> gymnastiklokal", function() {deepEqual( Stem("gymnastiklokalen"), "gymnastiklokal");});
test("gymnastiklärare -> gymnastiklär", function() {deepEqual( Stem("gymnastiklärare"), "gymnastiklär");});
test("gymnastiktavlingarna -> gymnastiktavling", function() {deepEqual( Stem("gymnastiktavlingarna"), "gymnastiktavling");});
test("gynekologi -> gynekologi", function() {deepEqual( Stem("gynekologi"), "gynekologi");});
test("gynnad -> gynn", function() {deepEqual( Stem("gynnad"), "gynn");});
test("gynnade -> gynn", function() {deepEqual( Stem("gynnade"), "gynn");});
test("gynnande -> gynn", function() {deepEqual( Stem("gynnande"), "gynn");});
test("gynnar -> gynn", function() {deepEqual( Stem("gynnar"), "gynn");});
test("gynnare -> gynn", function() {deepEqual( Stem("gynnare"), "gynn");});
test("gynnsamma -> gynnsamm", function() {deepEqual( Stem("gynnsamma"), "gynnsamm");});
test("gynsamma -> gynsamm", function() {deepEqual( Stem("gynsamma"), "gynsamm");});
test("gynsamt -> gynsamt", function() {deepEqual( Stem("gynsamt"), "gynsamt");});
test("gäck -> gäck", function() {deepEqual( Stem("gäck"), "gäck");});
test("gäcka -> gäck", function() {deepEqual( Stem("gäcka"), "gäck");});
test("gäckade -> gäck", function() {deepEqual( Stem("gäckade"), "gäck");});
test("gäckande -> gäck", function() {deepEqual( Stem("gäckande"), "gäck");});
test("gäckat -> gäck", function() {deepEqual( Stem("gäckat"), "gäck");});
test("gälda -> gäld", function() {deepEqual( Stem("gälda"), "gäld");});
test("gälde -> gäld", function() {deepEqual( Stem("gälde"), "gäld");});
test("gäldstugan -> gäldstugan", function() {deepEqual( Stem("gäldstugan"), "gäldstugan");});
test("gäll -> gäll", function() {deepEqual( Stem("gäll"), "gäll");});
test("gälla -> gäll", function() {deepEqual( Stem("gälla"), "gäll");});
test("gällande -> gäll", function() {deepEqual( Stem("gällande"), "gäll");});
test("gällde -> gälld", function() {deepEqual( Stem("gällde"), "gälld");});
test("gäller -> gäll", function() {deepEqual( Stem("gäller"), "gäll");});
test("gällt -> gällt", function() {deepEqual( Stem("gällt"), "gällt");});
test("gält -> gält", function() {deepEqual( Stem("gält"), "gält");});
test("gäma -> gäm", function() {deepEqual( Stem("gäma"), "gäm");});
test("gäng -> gäng", function() {deepEqual( Stem("gäng"), "gäng");});
test("gänglig -> gäng", function() {deepEqual( Stem("gänglig"), "gäng");});
test("gängliga -> gäng", function() {deepEqual( Stem("gängliga"), "gäng");});
test("gängse -> gängs", function() {deepEqual( Stem("gängse"), "gängs");});
test("gärd -> gärd", function() {deepEqual( Stem("gärd"), "gärd");});
test("gärdena -> gärden", function() {deepEqual( Stem("gärdena"), "gärden");});
test("gärdesgard -> gärdesgard", function() {deepEqual( Stem("gärdesgard"), "gärdesgard");});
test("gärna -> gärn", function() {deepEqual( Stem("gärna"), "gärn");});
test("gärning -> gärning", function() {deepEqual( Stem("gärning"), "gärning");});
test("gärningen -> gärning", function() {deepEqual( Stem("gärningen"), "gärning");});
test("gäspa -> gäsp", function() {deepEqual( Stem("gäspa"), "gäsp");});
test("gäspade -> gäsp", function() {deepEqual( Stem("gäspade"), "gäsp");});
test("gäspning -> gäspning", function() {deepEqual( Stem("gäspning"), "gäspning");});
test("gäspningar -> gäspning", function() {deepEqual( Stem("gäspningar"), "gäspning");});
test("gäst -> gäst", function() {deepEqual( Stem("gäst"), "gäst");});
test("gästabudshus -> gästabudshus", function() {deepEqual( Stem("gästabudshus"), "gästabudshus");});
test("gästar -> gäst", function() {deepEqual( Stem("gästar"), "gäst");});
test("gästat -> gäst", function() {deepEqual( Stem("gästat"), "gäst");});
test("gästbyggningen -> gästbyggning", function() {deepEqual( Stem("gästbyggningen"), "gästbyggning");});
test("gästen -> gäst", function() {deepEqual( Stem("gästen"), "gäst");});
test("gäster -> gäst", function() {deepEqual( Stem("gäster"), "gäst");});
test("gästerna -> gäst", function() {deepEqual( Stem("gästerna"), "gäst");});
test("gästers -> gäster", function() {deepEqual( Stem("gästers"), "gäster");});
test("gästfrihet -> gästfri", function() {deepEqual( Stem("gästfrihet"), "gästfri");});
test("gästfriheten -> gästfri", function() {deepEqual( Stem("gästfriheten"), "gästfri");});
test("gästfrihetens -> gästfri", function() {deepEqual( Stem("gästfrihetens"), "gästfri");});
test("gästgivaregården -> gästgivaregård", function() {deepEqual( Stem("gästgivaregården"), "gästgivaregård");});
test("gästkammaren -> gästkamm", function() {deepEqual( Stem("gästkammaren"), "gästkamm");});
test("gästkammarn -> gästkammarn", function() {deepEqual( Stem("gästkammarn"), "gästkammarn");});
test("gästrum -> gästrum", function() {deepEqual( Stem("gästrum"), "gästrum");});
test("gästrummet -> gästrummet", function() {deepEqual( Stem("gästrummet"), "gästrummet");});
test("gå -> gå", function() {deepEqual( Stem("gå"), "gå");});
test("gående -> gåend", function() {deepEqual( Stem("gående"), "gåend");});
test("gåfva -> gåfv", function() {deepEqual( Stem("gåfva"), "gåfv");});
test("gåfve -> gåfv", function() {deepEqual( Stem("gåfve"), "gåfv");});
test("gåfvo -> gåfvo", function() {deepEqual( Stem("gåfvo"), "gåfvo");});
test("gåfvor -> gåfv", function() {deepEqual( Stem("gåfvor"), "gåfv");});
test("gång -> gång", function() {deepEqual( Stem("gång"), "gång");});
test("gånga -> gång", function() {deepEqual( Stem("gånga"), "gång");});
test("gångar -> gång", function() {deepEqual( Stem("gångar"), "gång");});
test("gångarens -> gång", function() {deepEqual( Stem("gångarens"), "gång");});
test("gångarna -> gång", function() {deepEqual( Stem("gångarna"), "gång");});
test("gångarnas -> gång", function() {deepEqual( Stem("gångarnas"), "gång");});
test("gångars -> gångar", function() {deepEqual( Stem("gångars"), "gångar");});
test("gångbanan -> gångbanan", function() {deepEqual( Stem("gångbanan"), "gångbanan");});
test("gången -> gång", function() {deepEqual( Stem("gången"), "gång");});
test("gångens -> gång", function() {deepEqual( Stem("gångens"), "gång");});
test("gånger -> gång", function() {deepEqual( Stem("gånger"), "gång");});
test("gångerna -> gång", function() {deepEqual( Stem("gångerna"), "gång");});
test("gångmattan -> gångmattan", function() {deepEqual( Stem("gångmattan"), "gångmattan");});
test("gångna -> gångn", function() {deepEqual( Stem("gångna"), "gångn");});
test("gångspelet -> gångspelet", function() {deepEqual( Stem("gångspelet"), "gångspelet");});
test("gångstig -> gångst", function() {deepEqual( Stem("gångstig"), "gångst");});
test("går -> går", function() {deepEqual( Stem("går"), "går");});
test("gård -> gård", function() {deepEqual( Stem("gård"), "gård");});
test("gårdagen -> gårdag", function() {deepEqual( Stem("gårdagen"), "gårdag");});
test("gårdagens -> gårdag", function() {deepEqual( Stem("gårdagens"), "gårdag");});
test("gårdar -> gård", function() {deepEqual( Stem("gårdar"), "gård");});
test("gården -> gård", function() {deepEqual( Stem("gården"), "gård");});
test("gårdens -> gård", function() {deepEqual( Stem("gårdens"), "gård");});
test("gårds -> gård", function() {deepEqual( Stem("gårds"), "gård");});
test("gårdsflygel -> gårdsflygel", function() {deepEqual( Stem("gårdsflygel"), "gårdsflygel");});
test("gårdsflygeln -> gårdsflygeln", function() {deepEqual( Stem("gårdsflygeln"), "gårdsflygeln");});
test("gårdshörnet -> gårdshörnet", function() {deepEqual( Stem("gårdshörnet"), "gårdshörnet");});
test("gårdsmuren -> gårdsmur", function() {deepEqual( Stem("gårdsmuren"), "gårdsmur");});
test("gårdsplan -> gårdsplan", function() {deepEqual( Stem("gårdsplan"), "gårdsplan");});
test("gårdsplanen -> gårdsplan", function() {deepEqual( Stem("gårdsplanen"), "gårdsplan");});
test("gårkök -> gårkök", function() {deepEqual( Stem("gårkök"), "gårkök");});
test("gåsen -> gås", function() {deepEqual( Stem("gåsen"), "gås");});
test("gåsmarsch -> gåsmarsch", function() {deepEqual( Stem("gåsmarsch"), "gåsmarsch");});
test("gåsmarschen -> gåsmarsch", function() {deepEqual( Stem("gåsmarschen"), "gåsmarsch");});
test("gåsvinge -> gåsving", function() {deepEqual( Stem("gåsvinge"), "gåsving");});
test("gåta -> gåt", function() {deepEqual( Stem("gåta"), "gåt");});
test("gåtan -> gåtan", function() {deepEqual( Stem("gåtan"), "gåtan");});
test("gåtfull -> gåtfull", function() {deepEqual( Stem("gåtfull"), "gåtfull");});
test("gåtfullt -> gåtfull", function() {deepEqual( Stem("gåtfullt"), "gåtfull");});
test("gåtlikt -> gåtlik", function() {deepEqual( Stem("gåtlikt"), "gåtlik");});
test("gåtor -> gåt", function() {deepEqual( Stem("gåtor"), "gåt");});
test("gåtornas -> gåt", function() {deepEqual( Stem("gåtornas"), "gåt");});
test("gått -> gått", function() {deepEqual( Stem("gått"), "gått");});
test("gåva -> gåv", function() {deepEqual( Stem("gåva"), "gåv");});
test("gåvan -> gåvan", function() {deepEqual( Stem("gåvan"), "gåvan");});
test("gåve -> gåv", function() {deepEqual( Stem("gåve"), "gåv");});
test("gåven -> gåv", function() {deepEqual( Stem("gåven"), "gåv");});
test("gåvo -> gåvo", function() {deepEqual( Stem("gåvo"), "gåvo");});
test("gåvor -> gåv", function() {deepEqual( Stem("gåvor"), "gåv");});
test("gödde -> gödd", function() {deepEqual( Stem("gödde"), "gödd");});
test("gödsel -> gödsel", function() {deepEqual( Stem("gödsel"), "gödsel");});
test("göia -> göia", function() {deepEqual( Stem("göia"), "göia");});
test("gök -> gök", function() {deepEqual( Stem("gök"), "gök");});
test("gökar -> gök", function() {deepEqual( Stem("gökar"), "gök");});
test("göken -> gök", function() {deepEqual( Stem("göken"), "gök");});
test("göm -> göm", function() {deepEqual( Stem("göm"), "göm");});
test("gömd -> gömd", function() {deepEqual( Stem("gömd"), "gömd");});
test("gömda -> gömd", function() {deepEqual( Stem("gömda"), "gömd");});
test("gömde -> gömd", function() {deepEqual( Stem("gömde"), "gömd");});
test("gömdt -> gömd", function() {deepEqual( Stem("gömdt"), "gömd");});
test("gömma -> gömm", function() {deepEqual( Stem("gömma"), "gömm");});
test("gömmande -> gömm", function() {deepEqual( Stem("gömmande"), "gömm");});
test("gömmen -> gömm", function() {deepEqual( Stem("gömmen"), "gömm");});
test("gömmer -> gömm", function() {deepEqual( Stem("gömmer"), "gömm");});
test("gömsle -> gömsl", function() {deepEqual( Stem("gömsle"), "gömsl");});
test("gömslen -> gömsl", function() {deepEqual( Stem("gömslen"), "gömsl");});
test("gömställe -> gömställ", function() {deepEqual( Stem("gömställe"), "gömställ");});
test("gömt -> gömt", function() {deepEqual( Stem("gömt"), "gömt");});
test("gör -> gör", function() {deepEqual( Stem("gör"), "gör");});
test("göra -> gör", function() {deepEqual( Stem("göra"), "gör");});
test("göras -> gör", function() {deepEqual( Stem("göras"), "gör");});
test("göres -> gör", function() {deepEqual( Stem("göres"), "gör");});
test("göromål -> göromål", function() {deepEqual( Stem("göromål"), "göromål");});
test("göta -> göt", function() {deepEqual( Stem("göta"), "göt");});
test("göteborg -> göteborg", function() {deepEqual( Stem("göteborg"), "göteborg");});
test("götiska -> götisk", function() {deepEqual( Stem("götiska"), "götisk");});
test("h -> h", function() {deepEqual( Stem("h"), "h");});
test("ha -> ha", function() {deepEqual( Stem("ha"), "ha");});
test("hab -> hab", function() {deepEqual( Stem("hab"), "hab");});
test("habilement -> habilement", function() {deepEqual( Stem("habilement"), "habilement");});
test("habiten -> habit", function() {deepEqual( Stem("habiten"), "habit");});
test("hack -> hack", function() {deepEqual( Stem("hack"), "hack");});
test("hacka -> hack", function() {deepEqual( Stem("hacka"), "hack");});
test("hackade -> hack", function() {deepEqual( Stem("hackade"), "hack");});
test("hackande -> hack", function() {deepEqual( Stem("hackande"), "hack");});
test("hackar -> hack", function() {deepEqual( Stem("hackar"), "hack");});
test("hackat -> hack", function() {deepEqual( Stem("hackat"), "hack");});
test("hackor -> hack", function() {deepEqual( Stem("hackor"), "hack");});
test("hacle -> hacl", function() {deepEqual( Stem("hacle"), "hacl");});
test("had -> had", function() {deepEqual( Stem("had"), "had");});
test("hadc -> hadc", function() {deepEqual( Stem("hadc"), "hadc");});
test("hade -> had", function() {deepEqual( Stem("hade"), "had");});
test("haf -> haf", function() {deepEqual( Stem("haf"), "haf");});
test("hafsfrun -> hafsfrun", function() {deepEqual( Stem("hafsfrun"), "hafsfrun");});
test("hafsfågel -> hafsfågel", function() {deepEqual( Stem("hafsfågel"), "hafsfågel");});
test("hafsjungfru -> hafsjungfru", function() {deepEqual( Stem("hafsjungfru"), "hafsjungfru");});
test("hafsjungfrun -> hafsjungfrun", function() {deepEqual( Stem("hafsjungfrun"), "hafsjungfrun");});
test("hafsmannen -> hafsman", function() {deepEqual( Stem("hafsmannen"), "hafsman");});
test("hafsstranden -> hafsstr", function() {deepEqual( Stem("hafsstranden"), "hafsstr");});
test("hafssvallet -> hafssvallet", function() {deepEqual( Stem("hafssvallet"), "hafssvallet");});
test("hafstrollen -> hafstroll", function() {deepEqual( Stem("hafstrollen"), "hafstroll");});
test("hafstång -> hafstång", function() {deepEqual( Stem("hafstång"), "hafstång");});
test("hafsvattnet -> hafsvattnet", function() {deepEqual( Stem("hafsvattnet"), "hafsvattnet");});
test("hafsytan -> hafsytan", function() {deepEqual( Stem("hafsytan"), "hafsytan");});
test("haft -> haft", function() {deepEqual( Stem("haft"), "haft");});
test("hafva -> hafv", function() {deepEqual( Stem("hafva"), "hafv");});
test("hafven -> hafv", function() {deepEqual( Stem("hafven"), "hafv");});
test("hafver -> hafv", function() {deepEqual( Stem("hafver"), "hafv");});
test("hafvet -> hafvet", function() {deepEqual( Stem("hafvet"), "hafvet");});
test("hafvets -> hafvet", function() {deepEqual( Stem("hafvets"), "hafvet");});
test("haga -> hag", function() {deepEqual( Stem("haga"), "hag");});
test("hagaparken -> hagapark", function() {deepEqual( Stem("hagaparken"), "hagapark");});
test("hagar -> hag", function() {deepEqual( Stem("hagar"), "hag");});
test("hage -> hag", function() {deepEqual( Stem("hage"), "hag");});
test("hagen -> hag", function() {deepEqual( Stem("hagen"), "hag");});
test("hagens -> hag", function() {deepEqual( Stem("hagens"), "hag");});
test("haglig -> hag", function() {deepEqual( Stem("haglig"), "hag");});
test("haka -> hak", function() {deepEqual( Stem("haka"), "hak");});
test("hakade -> hak", function() {deepEqual( Stem("hakade"), "hak");});
test("hakan -> hakan", function() {deepEqual( Stem("hakan"), "hakan");});
test("hakar -> hak", function() {deepEqual( Stem("hakar"), "hak");});
test("hakat -> hak", function() {deepEqual( Stem("hakat"), "hak");});
test("hakom -> hakom", function() {deepEqual( Stem("hakom"), "hakom");});
test("hal -> hal", function() {deepEqual( Stem("hal"), "hal");});
test("hala -> hal", function() {deepEqual( Stem("hala"), "hal");});
test("halade -> hal", function() {deepEqual( Stem("halade"), "hal");});
test("halades -> hal", function() {deepEqual( Stem("halades"), "hal");});
test("half -> half", function() {deepEqual( Stem("half"), "half");});
test("halfbror -> halfbr", function() {deepEqual( Stem("halfbror"), "halfbr");});
test("halfbrustna -> halfbrustn", function() {deepEqual( Stem("halfbrustna"), "halfbrustn");});
test("halfdunkla -> halfdunkl", function() {deepEqual( Stem("halfdunkla"), "halfdunkl");});
test("halfförfallet -> halfförfallet", function() {deepEqual( Stem("halfförfallet"), "halfförfallet");});
test("halfgod -> halfgod", function() {deepEqual( Stem("halfgod"), "halfgod");});
test("halfgråtande -> halfgråt", function() {deepEqual( Stem("halfgråtande"), "halfgråt");});
test("halfhviskade -> halfhvisk", function() {deepEqual( Stem("halfhviskade"), "halfhvisk");});
test("halfhögt -> halfhög", function() {deepEqual( Stem("halfhögt"), "halfhög");});
test("halfslocknade -> halfslockn", function() {deepEqual( Stem("halfslocknade"), "halfslockn");});
test("halfslumrade -> halfslumr", function() {deepEqual( Stem("halfslumrade"), "halfslumr");});
test("halfsofvande -> halfsofv", function() {deepEqual( Stem("halfsofvande"), "halfsofv");});
test("halft -> halft", function() {deepEqual( Stem("halft"), "halft");});
test("halftimme -> halftimm", function() {deepEqual( Stem("halftimme"), "halftimm");});
test("halftrånande -> halftrån", function() {deepEqual( Stem("halftrånande"), "halftrån");});
test("halfvan -> halfvan", function() {deepEqual( Stem("halfvan"), "halfvan");});
test("halfvilde -> halfvild", function() {deepEqual( Stem("halfvilde"), "halfvild");});
test("halfvissnade -> halfvissn", function() {deepEqual( Stem("halfvissnade"), "halfvissn");});
test("halfvägs -> halfväg", function() {deepEqual( Stem("halfvägs"), "halfväg");});
test("halka -> halk", function() {deepEqual( Stem("halka"), "halk");});
test("halkade -> halk", function() {deepEqual( Stem("halkade"), "halk");});
test("halkat -> halk", function() {deepEqual( Stem("halkat"), "halk");});
test("hall -> hall", function() {deepEqual( Stem("hall"), "hall");});
test("halla -> hall", function() {deepEqual( Stem("halla"), "hall");});
test("hallandshedarnas -> hallandshed", function() {deepEqual( Stem("hallandshedarnas"), "hallandshed");});
test("halle -> hall", function() {deepEqual( Stem("halle"), "hall");});
test("halleluja -> halleluj", function() {deepEqual( Stem("halleluja"), "halleluj");});
test("hallen -> hall", function() {deepEqual( Stem("hallen"), "hall");});
test("haller -> hall", function() {deepEqual( Stem("haller"), "hall");});
test("hallit -> hallit", function() {deepEqual( Stem("hallit"), "hallit");});
test("hallonen -> hallon", function() {deepEqual( Stem("hallonen"), "hallon");});
test("hallonkräm -> hallonkräm", function() {deepEqual( Stem("hallonkräm"), "hallonkräm");});
test("halls -> hall", function() {deepEqual( Stem("halls"), "hall");});
test("hallström -> hallström", function() {deepEqual( Stem("hallström"), "hallström");});
test("hallucination -> hallucination", function() {deepEqual( Stem("hallucination"), "hallucination");});
test("hallå -> hallå", function() {deepEqual( Stem("hallå"), "hallå");});
test("halm -> halm", function() {deepEqual( Stem("halm"), "halm");});
test("halmgult -> halmgult", function() {deepEqual( Stem("halmgult"), "halmgult");});
test("halmhatt -> halmhat", function() {deepEqual( Stem("halmhatt"), "halmhat");});
test("halmhatten -> halmhat", function() {deepEqual( Stem("halmhatten"), "halmhat");});
test("hals -> hal", function() {deepEqual( Stem("hals"), "hal");});
test("halsade -> hals", function() {deepEqual( Stem("halsade"), "hals");});
test("halsar -> hals", function() {deepEqual( Stem("halsar"), "hals");});
test("halsband -> halsband", function() {deepEqual( Stem("halsband"), "halsband");});
test("halsduk -> halsduk", function() {deepEqual( Stem("halsduk"), "halsduk");});
test("halsduken -> halsduk", function() {deepEqual( Stem("halsduken"), "halsduk");});
test("halsduksknuten -> halsduksknut", function() {deepEqual( Stem("halsduksknuten"), "halsduksknut");});
test("halsen -> hals", function() {deepEqual( Stem("halsen"), "hals");});
test("halsgropen -> halsgrop", function() {deepEqual( Stem("halsgropen"), "halsgrop");});
test("halsstarriga -> halsstarr", function() {deepEqual( Stem("halsstarriga"), "halsstarr");});
test("halt -> halt", function() {deepEqual( Stem("halt"), "halt");});
test("haltade -> halt", function() {deepEqual( Stem("haltade"), "halt");});
test("haltande -> halt", function() {deepEqual( Stem("haltande"), "halt");});
test("haltar -> halt", function() {deepEqual( Stem("haltar"), "halt");});
test("halts -> halt", function() {deepEqual( Stem("halts"), "halt");});
test("halv -> halv", function() {deepEqual( Stem("halv"), "halv");});
test("halva -> halv", function() {deepEqual( Stem("halva"), "halv");});
test("halvan -> halvan", function() {deepEqual( Stem("halvan"), "halvan");});
test("halvannan -> halvannan", function() {deepEqual( Stem("halvannan"), "halvannan");});
test("halvar -> halv", function() {deepEqual( Stem("halvar"), "halv");});
test("halvbildning -> halvbildning", function() {deepEqual( Stem("halvbildning"), "halvbildning");});
test("halvbutelj -> halvbutelj", function() {deepEqual( Stem("halvbutelj"), "halvbutelj");});
test("halvdager -> halvdag", function() {deepEqual( Stem("halvdager"), "halvdag");});
test("halvdagern -> halvdag", function() {deepEqual( Stem("halvdagern"), "halvdag");});
test("halvdrömmande -> halvdrömm", function() {deepEqual( Stem("halvdrömmande"), "halvdrömm");});
test("halvdunklet -> halvdunklet", function() {deepEqual( Stem("halvdunklet"), "halvdunklet");});
test("halvdöende -> halvdöend", function() {deepEqual( Stem("halvdöende"), "halvdöend");});
test("halvfylld -> halvfylld", function() {deepEqual( Stem("halvfylld"), "halvfylld");});
test("halvfärdig -> halvfärd", function() {deepEqual( Stem("halvfärdig"), "halvfärd");});
test("halvförtäckta -> halvförtäck", function() {deepEqual( Stem("halvförtäckta"), "halvförtäck");});
test("halvgamle -> halvgaml", function() {deepEqual( Stem("halvgamle"), "halvgaml");});
test("halvgråtande -> halvgråt", function() {deepEqual( Stem("halvgråtande"), "halvgråt");});
test("halvhögt -> halvhög", function() {deepEqual( Stem("halvhögt"), "halvhög");});
test("halvjude -> halvjud", function() {deepEqual( Stem("halvjude"), "halvjud");});
test("halvklart -> halvklart", function() {deepEqual( Stem("halvklart"), "halvklart");});
test("halvklädd -> halvkläd", function() {deepEqual( Stem("halvklädd"), "halvkläd");});
test("halvkvävd -> halvkvävd", function() {deepEqual( Stem("halvkvävd"), "halvkvävd");});
test("halvkvävda -> halvkvävd", function() {deepEqual( Stem("halvkvävda"), "halvkvävd");});
test("halvliggande -> halvligg", function() {deepEqual( Stem("halvliggande"), "halvligg");});
test("halvläkta -> halvläk", function() {deepEqual( Stem("halvläkta"), "halvläk");});
test("halvmedvetet -> halvmedvetet", function() {deepEqual( Stem("halvmedvetet"), "halvmedvetet");});
test("halvmörkret -> halvmörkret", function() {deepEqual( Stem("halvmörkret"), "halvmörkret");});
test("halvrökt -> halvrök", function() {deepEqual( Stem("halvrökt"), "halvrök");});
test("halvskymd -> halvskymd", function() {deepEqual( Stem("halvskymd"), "halvskymd");});
test("halvslummer -> halvslumm", function() {deepEqual( Stem("halvslummer"), "halvslumm");});
test("halvslutna -> halvslutn", function() {deepEqual( Stem("halvslutna"), "halvslutn");});
test("halvsovande -> halvsov", function() {deepEqual( Stem("halvsovande"), "halvsov");});
test("halvstop -> halvstop", function() {deepEqual( Stem("halvstop"), "halvstop");});
test("halvsänkt -> halvsänk", function() {deepEqual( Stem("halvsänkt"), "halvsänk");});
test("halvt -> halvt", function() {deepEqual( Stem("halvt"), "halvt");});
test("halvtannat -> halvtan", function() {deepEqual( Stem("halvtannat"), "halvtan");});
test("halvtimme -> halvtimm", function() {deepEqual( Stem("halvtimme"), "halvtimm");});
test("halvtoner -> halvton", function() {deepEqual( Stem("halvtoner"), "halvton");});
test("halvtömt -> halvtömt", function() {deepEqual( Stem("halvtömt"), "halvtömt");});
test("halvvaken -> halvvak", function() {deepEqual( Stem("halvvaken"), "halvvak");});
test("halvvuxen -> halvvux", function() {deepEqual( Stem("halvvuxen"), "halvvux");});
test("halvvuxna -> halvvuxn", function() {deepEqual( Stem("halvvuxna"), "halvvuxn");});
test("halvvägs -> halvväg", function() {deepEqual( Stem("halvvägs"), "halvväg");});
test("halvår -> halvår", function() {deepEqual( Stem("halvår"), "halvår");});
test("halvöppen -> halvöpp", function() {deepEqual( Stem("halvöppen"), "halvöpp");});
test("halvöppna -> halvöppn", function() {deepEqual( Stem("halvöppna"), "halvöppn");});
test("ham -> ham", function() {deepEqual( Stem("ham"), "ham");});
test("hamburg -> hamburg", function() {deepEqual( Stem("hamburg"), "hamburg");});
test("hamburger -> hamburg", function() {deepEqual( Stem("hamburger"), "hamburg");});
test("hamburgerlotteriet -> hamburgerlotteriet", function() {deepEqual( Stem("hamburgerlotteriet"), "hamburgerlotteriet");});
test("hammare -> hamm", function() {deepEqual( Stem("hammare"), "hamm");});
test("hamn -> hamn", function() {deepEqual( Stem("hamn"), "hamn");});
test("hamna -> hamn", function() {deepEqual( Stem("hamna"), "hamn");});
test("hamnade -> hamn", function() {deepEqual( Stem("hamnade"), "hamn");});
test("hamnat -> hamn", function() {deepEqual( Stem("hamnat"), "hamn");});
test("hamnen -> hamn", function() {deepEqual( Stem("hamnen"), "hamn");});
test("hamngatan -> hamngatan", function() {deepEqual( Stem("hamngatan"), "hamngatan");});
test("hampfrö -> hampfrö", function() {deepEqual( Stem("hampfrö"), "hampfrö");});
test("hamrade -> hamr", function() {deepEqual( Stem("hamrade"), "hamr");});
test("han -> han", function() {deepEqual( Stem("han"), "han");});
test("hand -> hand", function() {deepEqual( Stem("hand"), "hand");});
test("handarbctcn -> handarbctcn", function() {deepEqual( Stem("handarbctcn"), "handarbctcn");});
test("handarbete -> handarbet", function() {deepEqual( Stem("handarbete"), "handarbet");});
test("handduk -> handduk", function() {deepEqual( Stem("handduk"), "handduk");});
test("handdukar -> handduk", function() {deepEqual( Stem("handdukar"), "handduk");});
test("handduken -> handduk", function() {deepEqual( Stem("handduken"), "handduk");});
test("handdukshängare -> handdukshäng", function() {deepEqual( Stem("handdukshängare"), "handdukshäng");});
test("handel -> handel", function() {deepEqual( Stem("handel"), "handel");});
test("handeln -> handeln", function() {deepEqual( Stem("handeln"), "handeln");});
test("handelsboden -> handelsbod", function() {deepEqual( Stem("handelsboden"), "handelsbod");});
test("handelsföretag -> handelsföretag", function() {deepEqual( Stem("handelsföretag"), "handelsföretag");});
test("handelshus -> handelshus", function() {deepEqual( Stem("handelshus"), "handelshus");});
test("handelsjudar -> handelsjud", function() {deepEqual( Stem("handelsjudar"), "handelsjud");});
test("handelsman -> handelsman", function() {deepEqual( Stem("handelsman"), "handelsman");});
test("handelsmannen -> handelsman", function() {deepEqual( Stem("handelsmannen"), "handelsman");});
test("handen -> hand", function() {deepEqual( Stem("handen"), "hand");});
test("handens -> hand", function() {deepEqual( Stem("handens"), "hand");});
test("hander -> hand", function() {deepEqual( Stem("hander"), "hand");});
test("handfallen -> handfall", function() {deepEqual( Stem("handfallen"), "handfall");});
test("handfaten -> handfat", function() {deepEqual( Stem("handfaten"), "handfat");});
test("handfatet -> handfatet", function() {deepEqual( Stem("handfatet"), "handfatet");});
test("handflatan -> handflatan", function() {deepEqual( Stem("handflatan"), "handflatan");});
test("handfull -> handfull", function() {deepEqual( Stem("handfull"), "handfull");});
test("handhafva -> handhafv", function() {deepEqual( Stem("handhafva"), "handhafv");});
test("handhava -> handhav", function() {deepEqual( Stem("handhava"), "handhav");});
test("handkammare -> handkamm", function() {deepEqual( Stem("handkammare"), "handkamm");});
test("handkammaren -> handkamm", function() {deepEqual( Stem("handkammaren"), "handkamm");});
test("handklappningar -> handklappning", function() {deepEqual( Stem("handklappningar"), "handklappning");});
test("handla -> handl", function() {deepEqual( Stem("handla"), "handl");});
test("handlade -> handl", function() {deepEqual( Stem("handlade"), "handl");});
test("handlande -> handl", function() {deepEqual( Stem("handlande"), "handl");});
test("handlar -> handl", function() {deepEqual( Stem("handlar"), "handl");});
test("handlat -> handl", function() {deepEqual( Stem("handlat"), "handl");});
test("handled -> handled", function() {deepEqual( Stem("handled"), "handled");});
test("handleden -> handled", function() {deepEqual( Stem("handleden"), "handled");});
test("handling -> handling", function() {deepEqual( Stem("handling"), "handling");});
test("handlingar -> handling", function() {deepEqual( Stem("handlingar"), "handling");});
test("handlingen -> handling", function() {deepEqual( Stem("handlingen"), "handling");});
test("handlingens -> handling", function() {deepEqual( Stem("handlingens"), "handling");});
test("handlingssätt -> handlingssät", function() {deepEqual( Stem("handlingssätt"), "handlingssät");});
test("handlöst -> handlös", function() {deepEqual( Stem("handlöst"), "handlös");});
test("handom -> handom", function() {deepEqual( Stem("handom"), "handom");});
test("handrörelse -> handrör", function() {deepEqual( Stem("handrörelse"), "handrör");});
test("handrörelser -> handrör", function() {deepEqual( Stem("handrörelser"), "handrör");});
test("hands -> hand", function() {deepEqual( Stem("hands"), "hand");});
test("handskar -> handsk", function() {deepEqual( Stem("handskar"), "handsk");});
test("handskats -> handskat", function() {deepEqual( Stem("handskats"), "handskat");});
test("handske -> handsk", function() {deepEqual( Stem("handske"), "handsk");});
test("handsken -> handsk", function() {deepEqual( Stem("handsken"), "handsk");});
test("handslag -> handslag", function() {deepEqual( Stem("handslag"), "handslag");});
test("handstil -> handstil", function() {deepEqual( Stem("handstil"), "handstil");});
test("handtaget -> handtaget", function() {deepEqual( Stem("handtaget"), "handtaget");});
test("handteckning -> handteckning", function() {deepEqual( Stem("handteckning"), "handteckning");});
test("handteckningen -> handteckning", function() {deepEqual( Stem("handteckningen"), "handteckning");});
test("handtera -> handter", function() {deepEqual( Stem("handtera"), "handter");});
test("handtryckning -> handtryckning", function() {deepEqual( Stem("handtryckning"), "handtryckning");});
test("handtryckningar -> handtryckning", function() {deepEqual( Stem("handtryckningar"), "handtryckning");});
test("handtverket -> handtverket", function() {deepEqual( Stem("handtverket"), "handtverket");});
test("handtverkslära -> handtverkslär", function() {deepEqual( Stem("handtverkslära"), "handtverkslär");});
test("handväskan -> handväskan", function() {deepEqual( Stem("handväskan"), "handväskan");});
test("hane -> han", function() {deepEqual( Stem("hane"), "han");});
test("hanhundar -> hanhund", function() {deepEqual( Stem("hanhundar"), "hanhund");});
test("hann -> hann", function() {deepEqual( Stem("hann"), "hann");});
test("hannarnas -> hann", function() {deepEqual( Stem("hannarnas"), "hann");});
test("hanringdeoch -> hanringdeoch", function() {deepEqual( Stem("hanringdeoch"), "hanringdeoch");});
test("hans -> han", function() {deepEqual( Stem("hans"), "han");});
test("hansestäderna -> hansestäd", function() {deepEqual( Stem("hansestäderna"), "hansestäd");});
test("hantera -> hanter", function() {deepEqual( Stem("hantera"), "hanter");});
test("hanterar -> hanter", function() {deepEqual( Stem("hanterar"), "hanter");});
test("hantverk -> hantverk", function() {deepEqual( Stem("hantverk"), "hantverk");});
test("hantverksklassen -> hantverksklass", function() {deepEqual( Stem("hantverksklassen"), "hantverksklass");});
test("har -> har", function() {deepEqual( Stem("har"), "har");});
test("haraldsson -> haraldsson", function() {deepEqual( Stem("haraldsson"), "haraldsson");});
test("haraldssons -> haraldsson", function() {deepEqual( Stem("haraldssons"), "haraldsson");});
test("harang -> harang", function() {deepEqual( Stem("harang"), "harang");});
test("hard -> hard", function() {deepEqual( Stem("hard"), "hard");});
test("hardning -> hardning", function() {deepEqual( Stem("hardning"), "hardning");});
test("hards -> hard", function() {deepEqual( Stem("hards"), "hard");});
test("hare -> har", function() {deepEqual( Stem("hare"), "har");});
test("harem -> harem", function() {deepEqual( Stem("harem"), "harem");});
test("haremsdam -> haremsdam", function() {deepEqual( Stem("haremsdam"), "haremsdam");});
test("haret -> haret", function() {deepEqual( Stem("haret"), "haret");});
test("harig -> har", function() {deepEqual( Stem("harig"), "har");});
test("harklade -> harkl", function() {deepEqual( Stem("harklade"), "harkl");});
test("harkrank -> harkrank", function() {deepEqual( Stem("harkrank"), "harkrank");});
test("harl -> harl", function() {deepEqual( Stem("harl"), "harl");});
test("harm -> harm", function() {deepEqual( Stem("harm"), "harm");});
test("harmar -> harm", function() {deepEqual( Stem("harmar"), "harm");});
test("harmas -> harm", function() {deepEqual( Stem("harmas"), "harm");});
test("harmen -> harm", function() {deepEqual( Stem("harmen"), "harm");});
test("harmligt -> harm", function() {deepEqual( Stem("harmligt"), "harm");});
test("harmoniska -> harmonisk", function() {deepEqual( Stem("harmoniska"), "harmonisk");});
test("harmoniskt -> harmonisk", function() {deepEqual( Stem("harmoniskt"), "harmonisk");});
test("harmsen -> harms", function() {deepEqual( Stem("harmsen"), "harms");});
test("harmset -> harmset", function() {deepEqual( Stem("harmset"), "harmset");});
test("harmsna -> harmsn", function() {deepEqual( Stem("harmsna"), "harmsn");});
test("harpolek -> harpolek", function() {deepEqual( Stem("harpolek"), "harpolek");});
test("harpspelerska -> harpspelersk", function() {deepEqual( Stem("harpspelerska"), "harpspelersk");});
test("harpun -> harpun", function() {deepEqual( Stem("harpun"), "harpun");});
test("harpunen -> harpun", function() {deepEqual( Stem("harpunen"), "harpun");});
test("harskling -> harskling", function() {deepEqual( Stem("harskling"), "harskling");});
test("harvatten -> harvat", function() {deepEqual( Stem("harvatten"), "harvat");});
test("hasande -> has", function() {deepEqual( Stem("hasande"), "has");});
test("hasar -> has", function() {deepEqual( Stem("hasar"), "has");});
test("hasselbacken -> hasselback", function() {deepEqual( Stem("hasselbacken"), "hasselback");});
test("hasselbacksmiddag -> hasselbacksmiddag", function() {deepEqual( Stem("hasselbacksmiddag"), "hasselbacksmiddag");});
test("hasselblåst -> hasselblåst", function() {deepEqual( Stem("hasselblåst"), "hasselblåst");});
test("hasselfrans -> hasselfran", function() {deepEqual( Stem("hasselfrans"), "hasselfran");});
test("hasselkäpp -> hasselkäpp", function() {deepEqual( Stem("hasselkäpp"), "hasselkäpp");});
test("hast -> hast", function() {deepEqual( Stem("hast"), "hast");});
test("hastade -> hast", function() {deepEqual( Stem("hastade"), "hast");});
test("hastig -> hast", function() {deepEqual( Stem("hastig"), "hast");});
test("hastiga -> hast", function() {deepEqual( Stem("hastiga"), "hast");});
test("hastighet -> hast", function() {deepEqual( Stem("hastighet"), "hast");});
test("hastigheten -> hast", function() {deepEqual( Stem("hastigheten"), "hast");});
test("hastigt -> hast", function() {deepEqual( Stem("hastigt"), "hast");});
test("hastl -> hastl", function() {deepEqual( Stem("hastl"), "hastl");});
test("hat -> hat", function() {deepEqual( Stem("hat"), "hat");});
test("hata -> hat", function() {deepEqual( Stem("hata"), "hat");});
test("hatade -> hat", function() {deepEqual( Stem("hatade"), "hat");});
test("hatande -> hat", function() {deepEqual( Stem("hatande"), "hat");});
test("hatar -> hat", function() {deepEqual( Stem("hatar"), "hat");});
test("hatat -> hat", function() {deepEqual( Stem("hatat"), "hat");});
test("hatet -> hatet", function() {deepEqual( Stem("hatet"), "hatet");});
test("hatfulla -> hatfull", function() {deepEqual( Stem("hatfulla"), "hatfull");});
test("hatska -> hatsk", function() {deepEqual( Stem("hatska"), "hatsk");});
test("hatt -> hatt", function() {deepEqual( Stem("hatt"), "hatt");});
test("hattar -> hatt", function() {deepEqual( Stem("hattar"), "hatt");});
test("hattbrättet -> hattbrättet", function() {deepEqual( Stem("hattbrättet"), "hattbrättet");});
test("hatten -> hatt", function() {deepEqual( Stem("hatten"), "hatt");});
test("hatthyllan -> hatthyllan", function() {deepEqual( Stem("hatthyllan"), "hatthyllan");});
test("hattmakare -> hattmak", function() {deepEqual( Stem("hattmakare"), "hattmak");});
test("hattskrålla -> hattskråll", function() {deepEqual( Stem("hattskrålla"), "hattskråll");});
test("hau -> hau", function() {deepEqual( Stem("hau"), "hau");});
test("hav -> hav", function() {deepEqual( Stem("hav"), "hav");});
test("hava -> hav", function() {deepEqual( Stem("hava"), "hav");});
test("havande -> hav", function() {deepEqual( Stem("havande"), "hav");});
test("havannamagasinet -> havannamagasinet", function() {deepEqual( Stem("havannamagasinet"), "havannamagasinet");});
test("have -> hav", function() {deepEqual( Stem("have"), "hav");});
test("haven -> hav", function() {deepEqual( Stem("haven"), "hav");});
test("haver -> hav", function() {deepEqual( Stem("haver"), "hav");});
test("havet -> havet", function() {deepEqual( Stem("havet"), "havet");});
test("havets -> havet", function() {deepEqual( Stem("havets"), "havet");});
test("havrebröd -> havrebröd", function() {deepEqual( Stem("havrebröd"), "havrebröd");});
test("havs -> hav", function() {deepEqual( Stem("havs"), "hav");});
test("havsbottnen -> havsbottn", function() {deepEqual( Stem("havsbottnen"), "havsbottn");});
test("havsstranden -> havsstr", function() {deepEqual( Stem("havsstranden"), "havsstr");});
test("hbma -> hbma", function() {deepEqual( Stem("hbma"), "hbma");});
test("hclgc -> hclgc", function() {deepEqual( Stem("hclgc"), "hclgc");});
test("hclme -> hclme", function() {deepEqual( Stem("hclme"), "hclme");});
test("hclt -> hclt", function() {deepEqual( Stem("hclt"), "hclt");});
test("hcm -> hcm", function() {deepEqual( Stem("hcm"), "hcm");});
test("hcmles -> hcmles", function() {deepEqual( Stem("hcmles"), "hcmles");});
test("hcnncs -> hcnncs", function() {deepEqual( Stem("hcnncs"), "hcnncs");});
test("hcnne -> hcnne", function() {deepEqual( Stem("hcnne"), "hcnne");});
test("hcnnes -> hcnnes", function() {deepEqual( Stem("hcnnes"), "hcnnes");});
test("hdde -> hdde", function() {deepEqual( Stem("hdde"), "hdde");});
test("hdnom -> hdnom", function() {deepEqual( Stem("hdnom"), "hdnom");});
test("hebrons -> hebron", function() {deepEqual( Stem("hebrons"), "hebron");});
test("hed -> hed", function() {deepEqual( Stem("hed"), "hed");});
test("hedar -> hed", function() {deepEqual( Stem("hedar"), "hed");});
test("hedborn -> hedborn", function() {deepEqual( Stem("hedborn"), "hedborn");});
test("heden -> hed", function() {deepEqual( Stem("heden"), "hed");});
test("hedenhös -> hedenhös", function() {deepEqual( Stem("hedenhös"), "hedenhös");});
test("heder -> hed", function() {deepEqual( Stem("heder"), "hed");});
test("hederlig -> heder", function() {deepEqual( Stem("hederlig"), "heder");});
test("hederliga -> heder", function() {deepEqual( Stem("hederliga"), "heder");});
test("hederlige -> heder", function() {deepEqual( Stem("hederlige"), "heder");});
test("hederligheten -> heder", function() {deepEqual( Stem("hederligheten"), "heder");});
test("hederligt -> heder", function() {deepEqual( Stem("hederligt"), "heder");});
test("hedern -> hed", function() {deepEqual( Stem("hedern"), "hed");});
test("hederns -> hed", function() {deepEqual( Stem("hederns"), "hed");});
test("hedersdag -> hedersdag", function() {deepEqual( Stem("hedersdag"), "hedersdag");});
test("hederskänsla -> hederskänsl", function() {deepEqual( Stem("hederskänsla"), "hederskänsl");});
test("hedersmannen -> hedersman", function() {deepEqual( Stem("hedersmannen"), "hedersman");});
test("hedersord -> hedersord", function() {deepEqual( Stem("hedersord"), "hedersord");});
test("hederspaschan -> hederspaschan", function() {deepEqual( Stem("hederspaschan"), "hederspaschan");});
test("hedersplats -> hedersplat", function() {deepEqual( Stem("hedersplats"), "hedersplat");});
test("hederssak -> hederssak", function() {deepEqual( Stem("hederssak"), "hederssak");});
test("hedersvakt -> hedersvak", function() {deepEqual( Stem("hedersvakt"), "hedersvak");});
test("hedervärda -> hedervärd", function() {deepEqual( Stem("hedervärda"), "hedervärd");});
test("hednatiden -> hednatid", function() {deepEqual( Stem("hednatiden"), "hednatid");});
test("hedrad -> hedr", function() {deepEqual( Stem("hedrad"), "hedr");});
test("hedrade -> hedr", function() {deepEqual( Stem("hedrade"), "hedr");});
test("hedrande -> hedr", function() {deepEqual( Stem("hedrande"), "hedr");});
test("hedrar -> hedr", function() {deepEqual( Stem("hedrar"), "hedr");});
test("hedrat -> hedr", function() {deepEqual( Stem("hedrat"), "hedr");});
test("hedrats -> hedrat", function() {deepEqual( Stem("hedrats"), "hedrat");});
test("heidelberg -> heidelberg", function() {deepEqual( Stem("heidelberg"), "heidelberg");});
test("heidelberga -> heidelberg", function() {deepEqual( Stem("heidelberga"), "heidelberg");});
test("hej -> hej", function() {deepEqual( Stem("hej"), "hej");});
test("hejda -> hejd", function() {deepEqual( Stem("hejda"), "hejd");});
test("hejdade -> hejd", function() {deepEqual( Stem("hejdade"), "hejd");});
test("hejdlöst -> hejdlös", function() {deepEqual( Stem("hejdlöst"), "hejdlös");});
test("hektiska -> hektisk", function() {deepEqual( Stem("hektiska"), "hektisk");});
test("hel -> hel", function() {deepEqual( Stem("hel"), "hel");});
test("hela -> hel", function() {deepEqual( Stem("hela"), "hel");});
test("helades -> hel", function() {deepEqual( Stem("helades"), "hel");});
test("helande -> hel", function() {deepEqual( Stem("helande"), "hel");});
test("helena -> helen", function() {deepEqual( Stem("helena"), "helen");});
test("helfigur -> helfigur", function() {deepEqual( Stem("helfigur"), "helfigur");});
test("helg -> helg", function() {deepEqual( Stem("helg"), "helg");});
test("helga -> helg", function() {deepEqual( Stem("helga"), "helg");});
test("helgad -> helg", function() {deepEqual( Stem("helgad"), "helg");});
test("helgade -> helg", function() {deepEqual( Stem("helgade"), "helg");});
test("helgat -> helg", function() {deepEqual( Stem("helgat"), "helg");});
test("helgdagsaftonen -> helgdagsafton", function() {deepEqual( Stem("helgdagsaftonen"), "helgdagsafton");});
test("helgdagsdrägt -> helgdagsdräg", function() {deepEqual( Stem("helgdagsdrägt"), "helgdagsdräg");});
test("helgdagshatten -> helgdagshat", function() {deepEqual( Stem("helgdagshatten"), "helgdagshat");});
test("helgdagskläder -> helgdagskläd", function() {deepEqual( Stem("helgdagskläder"), "helgdagskläd");});
test("helgdagskläderna -> helgdagskläd", function() {deepEqual( Stem("helgdagskläderna"), "helgdagskläd");});
test("helgdagsklänning -> helgdagsklänning", function() {deepEqual( Stem("helgdagsklänning"), "helgdagsklänning");});
test("helgeandsholmens -> helgeandsholm", function() {deepEqual( Stem("helgeandsholmens"), "helgeandsholm");});
test("helgedom -> helgedom", function() {deepEqual( Stem("helgedom"), "helgedom");});
test("helgelse -> helg", function() {deepEqual( Stem("helgelse"), "helg");});
test("helgjuten -> helgjut", function() {deepEqual( Stem("helgjuten"), "helgjut");});
test("helgon -> helgon", function() {deepEqual( Stem("helgon"), "helgon");});
test("helgongriften -> helgongrift", function() {deepEqual( Stem("helgongriften"), "helgongrift");});
test("helhet -> hel", function() {deepEqual( Stem("helhet"), "hel");});
test("helig -> hel", function() {deepEqual( Stem("helig"), "hel");});
test("heliga -> hel", function() {deepEqual( Stem("heliga"), "hel");});
test("heligaorden -> heligaord", function() {deepEqual( Stem("heligaorden"), "heligaord");});
test("heligas -> hel", function() {deepEqual( Stem("heligas"), "hel");});
test("heligaste -> hel", function() {deepEqual( Stem("heligaste"), "hel");});
test("helighet -> hel", function() {deepEqual( Stem("helighet"), "hel");});
test("heligt -> hel", function() {deepEqual( Stem("heligt"), "hel");});
test("heller -> hell", function() {deepEqual( Stem("heller"), "hell");});
test("hellre -> hellr", function() {deepEqual( Stem("hellre"), "hellr");});
test("helme -> helm", function() {deepEqual( Stem("helme"), "helm");});
test("helmes -> helm", function() {deepEqual( Stem("helmes"), "helm");});
test("helsa -> hels", function() {deepEqual( Stem("helsa"), "hels");});
test("helsad -> hels", function() {deepEqual( Stem("helsad"), "hels");});
test("helsade -> hels", function() {deepEqual( Stem("helsade"), "hels");});
test("helsades -> hels", function() {deepEqual( Stem("helsades"), "hels");});
test("helsan -> helsan", function() {deepEqual( Stem("helsan"), "helsan");});
test("helsar -> hels", function() {deepEqual( Stem("helsar"), "hels");});
test("helsat -> hels", function() {deepEqual( Stem("helsat"), "hels");});
test("helskinnad -> helskin", function() {deepEqual( Stem("helskinnad"), "helskin");});
test("helsning -> helsning", function() {deepEqual( Stem("helsning"), "helsning");});
test("helsningar -> helsning", function() {deepEqual( Stem("helsningar"), "helsning");});
test("helsningen -> helsning", function() {deepEqual( Stem("helsningen"), "helsning");});
test("helsosamma -> helsosamm", function() {deepEqual( Stem("helsosamma"), "helsosamm");});
test("helst -> helst", function() {deepEqual( Stem("helst"), "helst");});
test("helt -> helt", function() {deepEqual( Stem("helt"), "helt");});
test("helv -> helv", function() {deepEqual( Stem("helv"), "helv");});
test("helvete -> helvet", function() {deepEqual( Stem("helvete"), "helvet");});
test("helvetes -> helvet", function() {deepEqual( Stem("helvetes"), "helvet");});
test("helvetet -> helvetet", function() {deepEqual( Stem("helvetet"), "helvetet");});
test("helvetets -> helvetet", function() {deepEqual( Stem("helvetets"), "helvetet");});
test("helvetiska -> helvetisk", function() {deepEqual( Stem("helvetiska"), "helvetisk");});
test("helvetiskt -> helvetisk", function() {deepEqual( Stem("helvetiskt"), "helvetisk");});
test("hem -> hem", function() {deepEqual( Stem("hem"), "hem");});
test("hembakade -> hembak", function() {deepEqual( Stem("hembakade"), "hembak");});
test("hembjuden -> hembjud", function() {deepEqual( Stem("hembjuden"), "hembjud");});
test("hembygd -> hembyg", function() {deepEqual( Stem("hembygd"), "hembyg");});
test("hembära -> hembär", function() {deepEqual( Stem("hembära"), "hembär");});
test("hemdygder -> hemdyg", function() {deepEqual( Stem("hemdygder"), "hemdyg");});
test("hemforslad -> hemforsl", function() {deepEqual( Stem("hemforslad"), "hemforsl");});
test("hemfärden -> hemfärd", function() {deepEqual( Stem("hemfärden"), "hemfärd");});
test("hemför -> hemför", function() {deepEqual( Stem("hemför"), "hemför");});
test("hemförd -> hemförd", function() {deepEqual( Stem("hemförd"), "hemförd");});
test("hemförde -> hemförd", function() {deepEqual( Stem("hemförde"), "hemförd");});
test("hemgift -> hemgift", function() {deepEqual( Stem("hemgift"), "hemgift");});
test("hemgiften -> hemgift", function() {deepEqual( Stem("hemgiften"), "hemgift");});
test("hemgjorda -> hemgjord", function() {deepEqual( Stem("hemgjorda"), "hemgjord");});
test("hemgång -> hemgång", function() {deepEqual( Stem("hemgång"), "hemgång");});
test("hemifrån -> hemifrån", function() {deepEqual( Stem("hemifrån"), "hemifrån");});
test("hemjordens -> hemjord", function() {deepEqual( Stem("hemjordens"), "hemjord");});
test("hemkalla -> hemkall", function() {deepEqual( Stem("hemkalla"), "hemkall");});
test("hemkommen -> hemkomm", function() {deepEqual( Stem("hemkommen"), "hemkomm");});
test("hemkommit -> hemkommit", function() {deepEqual( Stem("hemkommit"), "hemkommit");});
test("hemkomna -> hemkomn", function() {deepEqual( Stem("hemkomna"), "hemkomn");});
test("hemkomst -> hemkomst", function() {deepEqual( Stem("hemkomst"), "hemkomst");});
test("hemkomsten -> hemkomst", function() {deepEqual( Stem("hemkomsten"), "hemkomst");});
test("hemkärt -> hemkärt", function() {deepEqual( Stem("hemkärt"), "hemkärt");});
test("hemland -> hemland", function() {deepEqual( Stem("hemland"), "hemland");});
test("hemlc -> hemlc", function() {deepEqual( Stem("hemlc"), "hemlc");});
test("hemle -> heml", function() {deepEqual( Stem("hemle"), "heml");});
test("hemles -> heml", function() {deepEqual( Stem("hemles"), "heml");});
test("hemlig -> hem", function() {deepEqual( Stem("hemlig"), "hem");});
test("hemliga -> hem", function() {deepEqual( Stem("hemliga"), "hem");});
test("hemlige -> hem", function() {deepEqual( Stem("hemlige"), "hem");});
test("hemligen -> hem", function() {deepEqual( Stem("hemligen"), "hem");});
test("hemlighet -> hem", function() {deepEqual( Stem("hemlighet"), "hem");});
test("hemligheten -> hem", function() {deepEqual( Stem("hemligheten"), "hem");});
test("hemligheter -> hem", function() {deepEqual( Stem("hemligheter"), "hem");});
test("hemlighets -> hemlighet", function() {deepEqual( Stem("hemlighets"), "hemlighet");});
test("hemlighetsfull -> hemlighetsfull", function() {deepEqual( Stem("hemlighetsfull"), "hemlighetsfull");});
test("hemlighetsfulla -> hemlighetsfull", function() {deepEqual( Stem("hemlighetsfulla"), "hemlighetsfull");});
test("hemlighetsfullt -> hemlighetsfull", function() {deepEqual( Stem("hemlighetsfullt"), "hemlighetsfull");});
test("hemligt -> hem", function() {deepEqual( Stem("hemligt"), "hem");});
test("hemlotsande -> hemlots", function() {deepEqual( Stem("hemlotsande"), "hemlots");});
test("hemlängtan -> hemlängtan", function() {deepEqual( Stem("hemlängtan"), "hemlängtan");});
test("hemma -> hemm", function() {deepEqual( Stem("hemma"), "hemm");});
test("hemmansdöttrar -> hemmansdöttr", function() {deepEqual( Stem("hemmansdöttrar"), "hemmansdöttr");});
test("hemmansägardotter -> hemmansägardot", function() {deepEqual( Stem("hemmansägardotter"), "hemmansägardot");});
test("hemmansägare -> hemmansäg", function() {deepEqual( Stem("hemmansägare"), "hemmansäg");});
test("hemmastadd -> hemmastad", function() {deepEqual( Stem("hemmastadd"), "hemmastad");});
test("hemmastatt -> hemmastat", function() {deepEqual( Stem("hemmastatt"), "hemmastat");});
test("hemmavaro -> hemmavaro", function() {deepEqual( Stem("hemmavaro"), "hemmavaro");});
test("hemme -> hemm", function() {deepEqual( Stem("hemme"), "hemm");});
test("hemmes -> hemm", function() {deepEqual( Stem("hemmes"), "hemm");});
test("hemmet -> hemmet", function() {deepEqual( Stem("hemmet"), "hemmet");});
test("hemmets -> hemmet", function() {deepEqual( Stem("hemmets"), "hemmet");});
test("hemne -> hemn", function() {deepEqual( Stem("hemne"), "hemn");});
test("hemort -> hemort", function() {deepEqual( Stem("hemort"), "hemort");});
test("hemorten -> hemort", function() {deepEqual( Stem("hemorten"), "hemort");});
test("hemresa -> hemres", function() {deepEqual( Stem("hemresa"), "hemres");});
test("hemresan -> hemresan", function() {deepEqual( Stem("hemresan"), "hemresan");});
test("hemresande -> hemres", function() {deepEqual( Stem("hemresande"), "hemres");});
test("hemrma -> hemrm", function() {deepEqual( Stem("hemrma"), "hemrm");});
test("hemsjuk -> hemsjuk", function() {deepEqual( Stem("hemsjuk"), "hemsjuk");});
test("hemsk -> hemsk", function() {deepEqual( Stem("hemsk"), "hemsk");});
test("hemska -> hemsk", function() {deepEqual( Stem("hemska"), "hemsk");});
test("hemskhet -> hemsk", function() {deepEqual( Stem("hemskhet"), "hemsk");});
test("hemskickad -> hemskick", function() {deepEqual( Stem("hemskickad"), "hemskick");});
test("hemskt -> hemsk", function() {deepEqual( Stem("hemskt"), "hemsk");});
test("hemstad -> hemst", function() {deepEqual( Stem("hemstad"), "hemst");});
test("hemsökelsen -> hemsök", function() {deepEqual( Stem("hemsökelsen"), "hemsök");});
test("hemsökelser -> hemsök", function() {deepEqual( Stem("hemsökelser"), "hemsök");});
test("hemsökte -> hemsök", function() {deepEqual( Stem("hemsökte"), "hemsök");});
test("hemsöktes -> hemsök", function() {deepEqual( Stem("hemsöktes"), "hemsök");});
test("hemta -> hemt", function() {deepEqual( Stem("hemta"), "hemt");});
test("hemtade -> hemt", function() {deepEqual( Stem("hemtade"), "hemt");});
test("hemtades -> hemt", function() {deepEqual( Stem("hemtades"), "hemt");});
test("hemtar -> hemt", function() {deepEqual( Stem("hemtar"), "hemt");});
test("hemtrevligt -> hemtrev", function() {deepEqual( Stem("hemtrevligt"), "hemtrev");});
test("hemtrevnad -> hemtrevn", function() {deepEqual( Stem("hemtrevnad"), "hemtrevn");});
test("hemväg -> hemväg", function() {deepEqual( Stem("hemväg"), "hemväg");});
test("hemvägen -> hemväg", function() {deepEqual( Stem("hemvägen"), "hemväg");});
test("hemåt -> hemåt", function() {deepEqual( Stem("hemåt"), "hemåt");});
test("hen -> hen", function() {deepEqual( Stem("hen"), "hen");});
test("henck -> henck", function() {deepEqual( Stem("henck"), "henck");});
test("hencks -> henck", function() {deepEqual( Stem("hencks"), "henck");});
test("hende -> hend", function() {deepEqual( Stem("hende"), "hend");});
test("hendec -> hendec", function() {deepEqual( Stem("hendec"), "hendec");});
test("henmc -> henmc", function() {deepEqual( Stem("henmc"), "henmc");});
test("henme -> henm", function() {deepEqual( Stem("henme"), "henm");});
test("henmes -> henm", function() {deepEqual( Stem("henmes"), "henm");});
test("henna -> henn", function() {deepEqual( Stem("henna"), "henn");});
test("hennc -> hennc", function() {deepEqual( Stem("hennc"), "hennc");});
test("henncs -> hennc", function() {deepEqual( Stem("henncs"), "hennc");});
test("henne -> henn", function() {deepEqual( Stem("henne"), "henn");});
test("hennes -> henn", function() {deepEqual( Stem("hennes"), "henn");});
test("henning -> henning", function() {deepEqual( Stem("henning"), "henning");});
test("hennings -> henning", function() {deepEqual( Stem("hennings"), "henning");});
test("hennt -> hennt", function() {deepEqual( Stem("hennt"), "hennt");});
test("henrika -> henrik", function() {deepEqual( Stem("henrika"), "henrik");});
test("henrle -> henrl", function() {deepEqual( Stem("henrle"), "henrl");});
test("heraldik -> heraldik", function() {deepEqual( Stem("heraldik"), "heraldik");});
test("heraldiskt -> heraldisk", function() {deepEqual( Stem("heraldiskt"), "heraldisk");});
test("herbergera -> herberger", function() {deepEqual( Stem("herbergera"), "herberger");});
test("herbergerat -> herberger", function() {deepEqual( Stem("herbergerat"), "herberger");});
test("herde -> herd", function() {deepEqual( Stem("herde"), "herd");});
test("herdespel -> herdespel", function() {deepEqual( Stem("herdespel"), "herdespel");});
test("herdesång -> herdesång", function() {deepEqual( Stem("herdesång"), "herdesång");});
test("herdinna -> herdin", function() {deepEqual( Stem("herdinna"), "herdin");});
test("hergell -> hergell", function() {deepEqual( Stem("hergell"), "hergell");});
test("herme -> herm", function() {deepEqual( Stem("herme"), "herm");});
test("hern -> hern", function() {deepEqual( Stem("hern"), "hern");});
test("herodes -> herod", function() {deepEqual( Stem("herodes"), "herod");});
test("herodias -> herodi", function() {deepEqual( Stem("herodias"), "herodi");});
test("heroiske -> heroisk", function() {deepEqual( Stem("heroiske"), "heroisk");});
test("herr -> herr", function() {deepEqual( Stem("herr"), "herr");});
test("herran -> herran", function() {deepEqual( Stem("herran"), "herran");});
test("herranom -> herranom", function() {deepEqual( Stem("herranom"), "herranom");});
test("herrans -> herran", function() {deepEqual( Stem("herrans"), "herran");});
test("herrar -> herr", function() {deepEqual( Stem("herrar"), "herr");});
test("herrarna -> herr", function() {deepEqual( Stem("herrarna"), "herr");});
test("herrarnas -> herr", function() {deepEqual( Stem("herrarnas"), "herr");});
test("herrarne -> herr", function() {deepEqual( Stem("herrarne"), "herr");});
test("herre -> herr", function() {deepEqual( Stem("herre"), "herr");});
test("herregud -> herregud", function() {deepEqual( Stem("herregud"), "herregud");});
test("herrejestanes -> herrejestan", function() {deepEqual( Stem("herrejestanes"), "herrejestan");});
test("herrekarlar -> herrekarl", function() {deepEqual( Stem("herrekarlar"), "herrekarl");});
test("herrekarlsrock -> herrekarlsrock", function() {deepEqual( Stem("herrekarlsrock"), "herrekarlsrock");});
test("herrelös -> herrelös", function() {deepEqual( Stem("herrelös"), "herrelös");});
test("herrelösa -> herrelös", function() {deepEqual( Stem("herrelösa"), "herrelös");});
test("herren -> herr", function() {deepEqual( Stem("herren"), "herr");});
test("herrens -> herr", function() {deepEqual( Stem("herrens"), "herr");});
test("herres -> herr", function() {deepEqual( Stem("herres"), "herr");});
test("herresäte -> herresät", function() {deepEqual( Stem("herresäte"), "herresät");});
test("herresätena -> herresäten", function() {deepEqual( Stem("herresätena"), "herresäten");});
test("herrgardsekipage -> herrgardsekipag", function() {deepEqual( Stem("herrgardsekipage"), "herrgardsekipag");});
test("herrgdrdsbyggnaden -> herrgdrdsbyggnad", function() {deepEqual( Stem("herrgdrdsbyggnaden"), "herrgdrdsbyggnad");});
test("herrgård -> herrgård", function() {deepEqual( Stem("herrgård"), "herrgård");});
test("herrgårdar -> herrgård", function() {deepEqual( Stem("herrgårdar"), "herrgård");});
test("herrgården -> herrgård", function() {deepEqual( Stem("herrgården"), "herrgård");});
test("herrgårdsbyggnaden -> herrgårdsbyggnad", function() {deepEqual( Stem("herrgårdsbyggnaden"), "herrgårdsbyggnad");});
test("herrgårdsdamerna -> herrgårdsdam", function() {deepEqual( Stem("herrgårdsdamerna"), "herrgårdsdam");});
test("herrgårdsekipage -> herrgårdsekipag", function() {deepEqual( Stem("herrgårdsekipage"), "herrgårdsekipag");});
test("herrgårdsfröken -> herrgårdsfrök", function() {deepEqual( Stem("herrgårdsfröken"), "herrgårdsfrök");});
test("herrgårdsköket -> herrgårdsköket", function() {deepEqual( Stem("herrgårdsköket"), "herrgårdsköket");});
test("herrgårdsliv -> herrgårdsliv", function() {deepEqual( Stem("herrgårdsliv"), "herrgårdsliv");});
test("herrgårdsrum -> herrgårdsrum", function() {deepEqual( Stem("herrgårdsrum"), "herrgårdsrum");});
test("herrinnan -> herrinnan", function() {deepEqual( Stem("herrinnan"), "herrinnan");});
test("herrn -> herrn", function() {deepEqual( Stem("herrn"), "herrn");});
test("herrskap -> herrskap", function() {deepEqual( Stem("herrskap"), "herrskap");});
test("herrskapers -> herrskaper", function() {deepEqual( Stem("herrskapers"), "herrskaper");});
test("herrskapet -> herrskapet", function() {deepEqual( Stem("herrskapet"), "herrskapet");});
test("herrskapets -> herrskapet", function() {deepEqual( Stem("herrskapets"), "herrskapet");});
test("herrskaps -> herrskap", function() {deepEqual( Stem("herrskaps"), "herrskap");});
test("herrskapsfolkets -> herrskapsfolket", function() {deepEqual( Stem("herrskapsfolkets"), "herrskapsfolket");});
test("herrskapsklassen -> herrskapsklass", function() {deepEqual( Stem("herrskapsklassen"), "herrskapsklass");});
test("herskade -> hersk", function() {deepEqual( Stem("herskade"), "hersk");});
test("hertha -> herth", function() {deepEqual( Stem("hertha"), "herth");});
test("herthas -> herth", function() {deepEqual( Stem("herthas"), "herth");});
test("hertig -> hert", function() {deepEqual( Stem("hertig"), "hert");});
test("hertigen -> hert", function() {deepEqual( Stem("hertigen"), "hert");});
test("hes -> hes", function() {deepEqual( Stem("hes"), "hes");});
test("hesa -> hes", function() {deepEqual( Stem("hesa"), "hes");});
test("hesatt -> hesat", function() {deepEqual( Stem("hesatt"), "hesat");});
test("heslutsamhet -> heslutsam", function() {deepEqual( Stem("heslutsamhet"), "heslutsam");});
test("hessingen -> hessing", function() {deepEqual( Stem("hessingen"), "hessing");});
test("hest -> hest", function() {deepEqual( Stem("hest"), "hest");});
test("het -> het", function() {deepEqual( Stem("het"), "het");});
test("heta -> het", function() {deepEqual( Stem("heta"), "het");});
test("hetare -> het", function() {deepEqual( Stem("hetare"), "het");});
test("hetast -> het", function() {deepEqual( Stem("hetast"), "het");});
test("hetat -> het", function() {deepEqual( Stem("hetat"), "het");});
test("heten -> het", function() {deepEqual( Stem("heten"), "het");});
test("hetens -> het", function() {deepEqual( Stem("hetens"), "het");});
test("heter -> het", function() {deepEqual( Stem("heter"), "het");});
test("hetmes -> hetm", function() {deepEqual( Stem("hetmes"), "hetm");});
test("hets -> het", function() {deepEqual( Stem("hets"), "het");});
test("hetsa -> hets", function() {deepEqual( Stem("hetsa"), "hets");});
test("hetsad -> hets", function() {deepEqual( Stem("hetsad"), "hets");});
test("hetsade -> hets", function() {deepEqual( Stem("hetsade"), "hets");});
test("hetsande -> hets", function() {deepEqual( Stem("hetsande"), "hets");});
test("hetsar -> hets", function() {deepEqual( Stem("hetsar"), "hets");});
test("hetsig -> hets", function() {deepEqual( Stem("hetsig"), "hets");});
test("hetsiga -> hets", function() {deepEqual( Stem("hetsiga"), "hets");});
test("hetsigt -> hets", function() {deepEqual( Stem("hetsigt"), "hets");});
test("hetsit -> hetsit", function() {deepEqual( Stem("hetsit"), "hetsit");});
test("hetsjakt -> hetsjak", function() {deepEqual( Stem("hetsjakt"), "hetsjak");});
test("hett -> hett", function() {deepEqual( Stem("hett"), "hett");});
test("hetta -> hett", function() {deepEqual( Stem("hetta"), "hett");});
test("hettade -> hett", function() {deepEqual( Stem("hettade"), "hett");});
test("hettan -> hettan", function() {deepEqual( Stem("hettan"), "hettan");});
test("hettande -> hett", function() {deepEqual( Stem("hettande"), "hett");});
test("hette -> hett", function() {deepEqual( Stem("hette"), "hett");});
test("hga -> hga", function() {deepEqual( Stem("hga"), "hga");});
test("hi -> hi", function() {deepEqual( Stem("hi"), "hi");});
test("hicka -> hick", function() {deepEqual( Stem("hicka"), "hick");});
test("him -> him", function() {deepEqual( Stem("him"), "him");});
test("himlabryn -> himlabryn", function() {deepEqual( Stem("himlabryn"), "himlabryn");});
test("himlabågen -> himlabåg", function() {deepEqual( Stem("himlabågen"), "himlabåg");});
test("himlafrö -> himlafrö", function() {deepEqual( Stem("himlafrö"), "himlafrö");});
test("himlande -> himl", function() {deepEqual( Stem("himlande"), "himl");});
test("himlen -> himl", function() {deepEqual( Stem("himlen"), "himl");});
test("himlens -> himl", function() {deepEqual( Stem("himlens"), "himl");});
test("himmel -> himmel", function() {deepEqual( Stem("himmel"), "himmel");});
test("himmelen -> himmel", function() {deepEqual( Stem("himmelen"), "himmel");});
test("himmelens -> himmel", function() {deepEqual( Stem("himmelens"), "himmel");});
test("himmeln -> himmeln", function() {deepEqual( Stem("himmeln"), "himmeln");});
test("himmelriket -> himmelriket", function() {deepEqual( Stem("himmelriket"), "himmelriket");});
test("himmelrikets -> himmelriket", function() {deepEqual( Stem("himmelrikets"), "himmelriket");});
test("himmels -> himmel", function() {deepEqual( Stem("himmels"), "himmel");});
test("himmelska -> himmelsk", function() {deepEqual( Stem("himmelska"), "himmelsk");});
test("himmelskas -> himmelsk", function() {deepEqual( Stem("himmelskas"), "himmelsk");});
test("himmelske -> himmelsk", function() {deepEqual( Stem("himmelske"), "himmelsk");});
test("himmelskt -> himmelsk", function() {deepEqual( Stem("himmelskt"), "himmelsk");});
test("himmelssäng -> himmelssäng", function() {deepEqual( Stem("himmelssäng"), "himmelssäng");});
test("himmelssängen -> himmelssäng", function() {deepEqual( Stem("himmelssängen"), "himmelssäng");});
test("himmrlskt -> himmrlsk", function() {deepEqual( Stem("himmrlskt"), "himmrlsk");});
test("hin -> hin", function() {deepEqual( Stem("hin"), "hin");});
test("hind -> hind", function() {deepEqual( Stem("hind"), "hind");});
test("hinder -> hind", function() {deepEqual( Stem("hinder"), "hind");});
test("hindra -> hindr", function() {deepEqual( Stem("hindra"), "hindr");});
test("hindrad -> hindr", function() {deepEqual( Stem("hindrad"), "hindr");});
test("hindrade -> hindr", function() {deepEqual( Stem("hindrade"), "hindr");});
test("hindrar -> hindr", function() {deepEqual( Stem("hindrar"), "hindr");});
test("hindrat -> hindr", function() {deepEqual( Stem("hindrat"), "hindr");});
test("hink -> hink", function() {deepEqual( Stem("hink"), "hink");});
test("hinken -> hink", function() {deepEqual( Stem("hinken"), "hink");});
test("hinna -> hinn", function() {deepEqual( Stem("hinna"), "hinn");});
test("hinner -> hinn", function() {deepEqual( Stem("hinner"), "hinn");});
test("hiram -> hiram", function() {deepEqual( Stem("hiram"), "hiram");});
test("hiskligt -> hisk", function() {deepEqual( Stem("hiskligt"), "hisk");});
test("hisnade -> hisn", function() {deepEqual( Stem("hisnade"), "hisn");});
test("hisnande -> hisn", function() {deepEqual( Stem("hisnande"), "hisn");});
test("hissades -> hiss", function() {deepEqual( Stem("hissades"), "hiss");});
test("historia -> histori", function() {deepEqual( Stem("historia"), "histori");});
test("historie -> histori", function() {deepEqual( Stem("historie"), "histori");});
test("historielärare -> historielär", function() {deepEqual( Stem("historielärare"), "historielär");});
test("historieläraren -> historielär", function() {deepEqual( Stem("historieläraren"), "historielär");});
test("historielärarinnan -> historielärarinnan", function() {deepEqual( Stem("historielärarinnan"), "historielärarinnan");});
test("historiemålning -> historiemålning", function() {deepEqual( Stem("historiemålning"), "historiemålning");});
test("historien -> histori", function() {deepEqual( Stem("historien"), "histori");});
test("historier -> histori", function() {deepEqual( Stem("historier"), "histori");});
test("historierna -> histori", function() {deepEqual( Stem("historierna"), "histori");});
test("historietimme -> historietimm", function() {deepEqual( Stem("historietimme"), "historietimm");});
test("histrioner -> histrion", function() {deepEqual( Stem("histrioner"), "histrion");});
test("hit -> hit", function() {deepEqual( Stem("hit"), "hit");});
test("hitbjudit -> hitbjudit", function() {deepEqual( Stem("hitbjudit"), "hitbjudit");});
test("hitintills -> hitintill", function() {deepEqual( Stem("hitintills"), "hitintill");});
test("hitresa -> hitres", function() {deepEqual( Stem("hitresa"), "hitres");});
test("hitskickade -> hitskick", function() {deepEqual( Stem("hitskickade"), "hitskick");});
test("hitta -> hitt", function() {deepEqual( Stem("hitta"), "hitt");});
test("hittadc -> hittadc", function() {deepEqual( Stem("hittadc"), "hittadc");});
test("hittade -> hitt", function() {deepEqual( Stem("hittade"), "hitt");});
test("hittar -> hitt", function() {deepEqual( Stem("hittar"), "hitt");});
test("hittat -> hitt", function() {deepEqual( Stem("hittat"), "hitt");});
test("hittebarn -> hittebarn", function() {deepEqual( Stem("hittebarn"), "hittebarn");});
test("hittills -> hittill", function() {deepEqual( Stem("hittills"), "hittill");});
test("hitåt -> hitåt", function() {deepEqual( Stem("hitåt"), "hitåt");});
test("hjalmar -> hjalm", function() {deepEqual( Stem("hjalmar"), "hjalm");});
test("hjalpa -> hjalp", function() {deepEqual( Stem("hjalpa"), "hjalp");});
test("hjalplöshet -> hjalplös", function() {deepEqual( Stem("hjalplöshet"), "hjalplös");});
test("hjalplöst -> hjalplös", function() {deepEqual( Stem("hjalplöst"), "hjalplös");});
test("hjalpte -> hjalpt", function() {deepEqual( Stem("hjalpte"), "hjalpt");});
test("hjarhn -> hjarhn", function() {deepEqual( Stem("hjarhn"), "hjarhn");});
test("hjarna -> hjarn", function() {deepEqual( Stem("hjarna"), "hjarn");});
test("hjarta -> hjart", function() {deepEqual( Stem("hjarta"), "hjart");});
test("hjartan -> hjartan", function() {deepEqual( Stem("hjartan"), "hjartan");});
test("hjel -> hjel", function() {deepEqual( Stem("hjel"), "hjel");});
test("hjelp -> hjelp", function() {deepEqual( Stem("hjelp"), "hjelp");});
test("hjelpa -> hjelp", function() {deepEqual( Stem("hjelpa"), "hjelp");});
test("hjelpe -> hjelp", function() {deepEqual( Stem("hjelpe"), "hjelp");});
test("hjelpen -> hjelp", function() {deepEqual( Stem("hjelpen"), "hjelp");});
test("hjelper -> hjelp", function() {deepEqual( Stem("hjelper"), "hjelp");});
test("hjelpreda -> hjelpred", function() {deepEqual( Stem("hjelpreda"), "hjelpred");});
test("hjelpt -> hjelpt", function() {deepEqual( Stem("hjelpt"), "hjelpt");});
test("hjelpte -> hjelpt", function() {deepEqual( Stem("hjelpte"), "hjelpt");});
test("hjelptes -> hjelpt", function() {deepEqual( Stem("hjelptes"), "hjelpt");});
test("hjelte -> hjelt", function() {deepEqual( Stem("hjelte"), "hjelt");});
test("hjeltinna -> hjeltin", function() {deepEqual( Stem("hjeltinna"), "hjeltin");});
test("hjerna -> hjern", function() {deepEqual( Stem("hjerna"), "hjern");});
test("hjernan -> hjernan", function() {deepEqual( Stem("hjernan"), "hjernan");});
test("hjerta -> hjert", function() {deepEqual( Stem("hjerta"), "hjert");});
test("hjertan -> hjertan", function() {deepEqual( Stem("hjertan"), "hjertan");});
test("hjertandes -> hjert", function() {deepEqual( Stem("hjertandes"), "hjert");});
test("hjertans -> hjertan", function() {deepEqual( Stem("hjertans"), "hjertan");});
test("hjertas -> hjert", function() {deepEqual( Stem("hjertas"), "hjert");});
test("hjertat -> hjert", function() {deepEqual( Stem("hjertat"), "hjert");});
test("hjertats -> hjertat", function() {deepEqual( Stem("hjertats"), "hjertat");});
test("hjerteqval -> hjerteqval", function() {deepEqual( Stem("hjerteqval"), "hjerteqval");});
test("hjertesorg -> hjertesorg", function() {deepEqual( Stem("hjertesorg"), "hjertesorg");});
test("hjerteångest -> hjerteångest", function() {deepEqual( Stem("hjerteångest"), "hjerteångest");});
test("hjertgropen -> hjertgrop", function() {deepEqual( Stem("hjertgropen"), "hjertgrop");});
test("hjertklappning -> hjertklappning", function() {deepEqual( Stem("hjertklappning"), "hjertklappning");});
test("hjertlig -> hjert", function() {deepEqual( Stem("hjertlig"), "hjert");});
test("hjertliga -> hjert", function() {deepEqual( Stem("hjertliga"), "hjert");});
test("hjertligaste -> hjert", function() {deepEqual( Stem("hjertligaste"), "hjert");});
test("hjertligen -> hjert", function() {deepEqual( Stem("hjertligen"), "hjert");});
test("hjertligt -> hjert", function() {deepEqual( Stem("hjertligt"), "hjert");});
test("hjertlöse -> hjertlös", function() {deepEqual( Stem("hjertlöse"), "hjertlös");});
test("hjon -> hjon", function() {deepEqual( Stem("hjon"), "hjon");});
test("hjord -> hjord", function() {deepEqual( Stem("hjord"), "hjord");});
test("hjortronplan -> hjortronplan", function() {deepEqual( Stem("hjortronplan"), "hjortronplan");});
test("hjul -> hjul", function() {deepEqual( Stem("hjul"), "hjul");});
test("hjulens -> hjul", function() {deepEqual( Stem("hjulens"), "hjul");});
test("hjulet -> hjulet", function() {deepEqual( Stem("hjulet"), "hjulet");});
test("hjulets -> hjulet", function() {deepEqual( Stem("hjulets"), "hjulet");});
test("hjulspårens -> hjulspår", function() {deepEqual( Stem("hjulspårens"), "hjulspår");});
test("hjälp -> hjälp", function() {deepEqual( Stem("hjälp"), "hjälp");});
test("hjälpa -> hjälp", function() {deepEqual( Stem("hjälpa"), "hjälp");});
test("hjälpande -> hjälp", function() {deepEqual( Stem("hjälpande"), "hjälp");});
test("hjälpas -> hjälp", function() {deepEqual( Stem("hjälpas"), "hjälp");});
test("hjälpe -> hjälp", function() {deepEqual( Stem("hjälpe"), "hjälp");});
test("hjälpen -> hjälp", function() {deepEqual( Stem("hjälpen"), "hjälp");});
test("hjälper -> hjälp", function() {deepEqual( Stem("hjälper"), "hjälp");});
test("hjälpligt -> hjälp", function() {deepEqual( Stem("hjälpligt"), "hjälp");});
test("hjälplös -> hjälplös", function() {deepEqual( Stem("hjälplös"), "hjälplös");});
test("hjälplösa -> hjälplös", function() {deepEqual( Stem("hjälplösa"), "hjälplös");});
test("hjälplöst -> hjälplös", function() {deepEqual( Stem("hjälplöst"), "hjälplös");});
test("hjälpmadam -> hjälpmadam", function() {deepEqual( Stem("hjälpmadam"), "hjälpmadam");});
test("hjälpmadamens -> hjälpmadam", function() {deepEqual( Stem("hjälpmadamens"), "hjälpmadam");});
test("hjälpmadammen -> hjälpmadamm", function() {deepEqual( Stem("hjälpmadammen"), "hjälpmadamm");});
test("hjälpmadams -> hjälpmadam", function() {deepEqual( Stem("hjälpmadams"), "hjälpmadam");});
test("hjälpsam -> hjälpsam", function() {deepEqual( Stem("hjälpsam"), "hjälpsam");});
test("hjälpsamma -> hjälpsamm", function() {deepEqual( Stem("hjälpsamma"), "hjälpsamm");});
test("hjälpt -> hjälpt", function() {deepEqual( Stem("hjälpt"), "hjälpt");});
test("hjälpte -> hjälpt", function() {deepEqual( Stem("hjälpte"), "hjälpt");});
test("hjälte -> hjält", function() {deepEqual( Stem("hjälte"), "hjält");});
test("hjältemod -> hjältemod", function() {deepEqual( Stem("hjältemod"), "hjältemod");});
test("hjältemodig -> hjältemod", function() {deepEqual( Stem("hjältemodig"), "hjältemod");});
test("hjältemodiga -> hjältemod", function() {deepEqual( Stem("hjältemodiga"), "hjältemod");});
test("hjältemodigt -> hjältemod", function() {deepEqual( Stem("hjältemodigt"), "hjältemod");});
test("hjälten -> hjält", function() {deepEqual( Stem("hjälten"), "hjält");});
test("hjältes -> hjält", function() {deepEqual( Stem("hjältes"), "hjält");});
test("hjältinnan -> hjältinnan", function() {deepEqual( Stem("hjältinnan"), "hjältinnan");});
test("hjälös -> hjälös", function() {deepEqual( Stem("hjälös"), "hjälös");});
test("hjärna -> hjärn", function() {deepEqual( Stem("hjärna"), "hjärn");});
test("hjärnan -> hjärnan", function() {deepEqual( Stem("hjärnan"), "hjärnan");});
test("hjärnans -> hjärnan", function() {deepEqual( Stem("hjärnans"), "hjärnan");});
test("hjärnor -> hjärn", function() {deepEqual( Stem("hjärnor"), "hjärn");});
test("hjärta -> hjärt", function() {deepEqual( Stem("hjärta"), "hjärt");});
test("hjärtan -> hjärtan", function() {deepEqual( Stem("hjärtan"), "hjärtan");});
test("hjärtans -> hjärtan", function() {deepEqual( Stem("hjärtans"), "hjärtan");});
test("hjärtas -> hjärt", function() {deepEqual( Stem("hjärtas"), "hjärt");});
test("hjärtat -> hjärt", function() {deepEqual( Stem("hjärtat"), "hjärt");});
test("hjärtats -> hjärtat", function() {deepEqual( Stem("hjärtats"), "hjärtat");});
test("hjärtegryn -> hjärtegryn", function() {deepEqual( Stem("hjärtegryn"), "hjärtegryn");});
test("hjärtelag -> hjärtelag", function() {deepEqual( Stem("hjärtelag"), "hjärtelag");});
test("hjärtemänniskor -> hjärtemännisk", function() {deepEqual( Stem("hjärtemänniskor"), "hjärtemännisk");});
test("hjärtenerv -> hjärtenerv", function() {deepEqual( Stem("hjärtenerv"), "hjärtenerv");});
test("hjärtenära -> hjärtenär", function() {deepEqual( Stem("hjärtenära"), "hjärtenär");});
test("hjärterknekt -> hjärterknek", function() {deepEqual( Stem("hjärterknekt"), "hjärterknek");});
test("hjärterötter -> hjärteröt", function() {deepEqual( Stem("hjärterötter"), "hjärteröt");});
test("hjärtesorg -> hjärtesorg", function() {deepEqual( Stem("hjärtesorg"), "hjärtesorg");});
test("hjärtfelet -> hjärtfelet", function() {deepEqual( Stem("hjärtfelet"), "hjärtfelet");});
test("hjärtförlamning -> hjärtförlamning", function() {deepEqual( Stem("hjärtförlamning"), "hjärtförlamning");});
test("hjärtklappning -> hjärtklappning", function() {deepEqual( Stem("hjärtklappning"), "hjärtklappning");});
test("hjärtklappningen -> hjärtklappning", function() {deepEqual( Stem("hjärtklappningen"), "hjärtklappning");});
test("hjärtklämning -> hjärtklämning", function() {deepEqual( Stem("hjärtklämning"), "hjärtklämning");});
test("hjärtlidande -> hjärtlid", function() {deepEqual( Stem("hjärtlidande"), "hjärtlid");});
test("hjärtlig -> hjärt", function() {deepEqual( Stem("hjärtlig"), "hjärt");});
test("hjärtliga -> hjärt", function() {deepEqual( Stem("hjärtliga"), "hjärt");});
test("hjärtligaste -> hjärt", function() {deepEqual( Stem("hjärtligaste"), "hjärt");});
test("hjärtlighet -> hjärt", function() {deepEqual( Stem("hjärtlighet"), "hjärt");});
test("hjärtligt -> hjärt", function() {deepEqual( Stem("hjärtligt"), "hjärt");});
test("hjärtlös -> hjärtlös", function() {deepEqual( Stem("hjärtlös"), "hjärtlös");});
test("hjärtlösa -> hjärtlös", function() {deepEqual( Stem("hjärtlösa"), "hjärtlös");});
test("hjärtlöst -> hjärtlös", function() {deepEqual( Stem("hjärtlöst"), "hjärtlös");});
test("hjärtrörande -> hjärtrör", function() {deepEqual( Stem("hjärtrörande"), "hjärtrör");});
test("hjärtrörelserna -> hjärtrör", function() {deepEqual( Stem("hjärtrörelserna"), "hjärtrör");});
test("hjärtsjukdomar -> hjärtsjukdom", function() {deepEqual( Stem("hjärtsjukdomar"), "hjärtsjukdom");});
test("hjärtslag -> hjärtslag", function() {deepEqual( Stem("hjärtslag"), "hjärtslag");});
test("hjäs -> hjäs", function() {deepEqual( Stem("hjäs"), "hjäs");});
test("hjässa -> hjäss", function() {deepEqual( Stem("hjässa"), "hjäss");});
test("hjässan -> hjässan", function() {deepEqual( Stem("hjässan"), "hjässan");});
test("hjålpa -> hjålp", function() {deepEqual( Stem("hjålpa"), "hjålp");});
test("hjårta -> hjårt", function() {deepEqual( Stem("hjårta"), "hjårt");});
test("hjårtan -> hjårtan", function() {deepEqual( Stem("hjårtan"), "hjårtan");});
test("hl -> hl", function() {deepEqual( Stem("hl"), "hl");});
test("hlalp -> hlalp", function() {deepEqual( Stem("hlalp"), "hlalp");});
test("hlen -> hlen", function() {deepEqual( Stem("hlen"), "hlen");});
test("hlften -> hlften", function() {deepEqual( Stem("hlften"), "hlften");});
test("hlför -> hlför", function() {deepEqual( Stem("hlför"), "hlför");});
test("hlgen -> hlgen", function() {deepEqual( Stem("hlgen"), "hlgen");});
test("hlivit -> hlivit", function() {deepEqual( Stem("hlivit"), "hlivit");});
test("hlixtlik -> hlixtlik", function() {deepEqual( Stem("hlixtlik"), "hlixtlik");});
test("hlod -> hlod", function() {deepEqual( Stem("hlod"), "hlod");});
test("hltc -> hltc", function() {deepEqual( Stem("hltc"), "hltc");});
test("hlte -> hlte", function() {deepEqual( Stem("hlte"), "hlte");});
test("hlygrel -> hlygrel", function() {deepEqual( Stem("hlygrel"), "hlygrel");});
test("hm -> hm", function() {deepEqual( Stem("hm"), "hm");});
test("hmde -> hmde", function() {deepEqual( Stem("hmde"), "hmde");});
test("hml -> hml", function() {deepEqual( Stem("hml"), "hml");});
test("hnn -> hnn", function() {deepEqual( Stem("hnn"), "hnn");});
test("ho -> ho", function() {deepEqual( Stem("ho"), "ho");});
test("hobktare -> hobk", function() {deepEqual( Stem("hobktare"), "hobk");});
test("hofkläder -> hofkläd", function() {deepEqual( Stem("hofkläder"), "hofkläd");});
test("hog -> hog", function() {deepEqual( Stem("hog"), "hog");});
test("hogt -> hogt", function() {deepEqual( Stem("hogt"), "hogt");});
test("hoj -> hoj", function() {deepEqual( Stem("hoj"), "hoj");});
test("hol -> hol", function() {deepEqual( Stem("hol"), "hol");});
test("holl -> holl", function() {deepEqual( Stem("holl"), "holl");});
test("holländskt -> holländsk", function() {deepEqual( Stem("holländskt"), "holländsk");});
test("holm -> holm", function() {deepEqual( Stem("holm"), "holm");});
test("holmar -> holm", function() {deepEqual( Stem("holmar"), "holm");});
test("holme -> holm", function() {deepEqual( Stem("holme"), "holm");});
test("holmen -> holm", function() {deepEqual( Stem("holmen"), "holm");});
test("holmström -> holmström", function() {deepEqual( Stem("holmström"), "holmström");});
test("holmströms -> holmström", function() {deepEqual( Stem("holmströms"), "holmström");});
test("homeros -> homero", function() {deepEqual( Stem("homeros"), "homero");});
test("homme -> homm", function() {deepEqual( Stem("homme"), "homm");});
test("hon -> hon", function() {deepEqual( Stem("hon"), "hon");});
test("honett -> honet", function() {deepEqual( Stem("honett"), "honet");});
test("honnett -> honnet", function() {deepEqual( Stem("honnett"), "honnet");});
test("honoll -> honoll", function() {deepEqual( Stem("honoll"), "honoll");});
test("honom -> honom", function() {deepEqual( Stem("honom"), "honom");});
test("hononl -> hononl", function() {deepEqual( Stem("hononl"), "hononl");});
test("honor -> hon", function() {deepEqual( Stem("honor"), "hon");});
test("honorar -> honor", function() {deepEqual( Stem("honorar"), "honor");});
test("honorera -> honorer", function() {deepEqual( Stem("honorera"), "honorer");});
test("honung -> honung", function() {deepEqual( Stem("honung"), "honung");});
test("honungsbytta -> honungsbyt", function() {deepEqual( Stem("honungsbytta"), "honungsbyt");});
test("honungshusen -> honungshus", function() {deepEqual( Stem("honungshusen"), "honungshus");});
test("honungssöta -> honungssöt", function() {deepEqual( Stem("honungssöta"), "honungssöt");});
test("hop -> hop", function() {deepEqual( Stem("hop"), "hop");});
test("hopa -> hop", function() {deepEqual( Stem("hopa"), "hop");});
test("hopade -> hop", function() {deepEqual( Stem("hopade"), "hop");});
test("hopades -> hop", function() {deepEqual( Stem("hopades"), "hop");});
test("hopen -> hop", function() {deepEqual( Stem("hopen"), "hop");});
test("hopfallen -> hopfall", function() {deepEqual( Stem("hopfallen"), "hopfall");});
test("hopfällda -> hopfälld", function() {deepEqual( Stem("hopfällda"), "hopfälld");});
test("hopgyttrade -> hopgyttr", function() {deepEqual( Stem("hopgyttrade"), "hopgyttr");});
test("hopklämde -> hopklämd", function() {deepEqual( Stem("hopklämde"), "hopklämd");});
test("hopknipen -> hopknip", function() {deepEqual( Stem("hopknipen"), "hopknip");});
test("hopknipet -> hopknipet", function() {deepEqual( Stem("hopknipet"), "hopknipet");});
test("hopknipna -> hopknipn", function() {deepEqual( Stem("hopknipna"), "hopknipn");});
test("hopknycklade -> hopknyckl", function() {deepEqual( Stem("hopknycklade"), "hopknyckl");});
test("hopknäppte -> hopknäppt", function() {deepEqual( Stem("hopknäppte"), "hopknäppt");});
test("hopkopplade -> hopkoppl", function() {deepEqual( Stem("hopkopplade"), "hopkoppl");});
test("hopkrupen -> hopkrup", function() {deepEqual( Stem("hopkrupen"), "hopkrup");});
test("hoplagda -> hoplag", function() {deepEqual( Stem("hoplagda"), "hoplag");});
test("hoplagt -> hoplag", function() {deepEqual( Stem("hoplagt"), "hoplag");});
test("hopp -> hopp", function() {deepEqual( Stem("hopp"), "hopp");});
test("hoppa -> hopp", function() {deepEqual( Stem("hoppa"), "hopp");});
test("hoppade -> hopp", function() {deepEqual( Stem("hoppade"), "hopp");});
test("hoppades -> hopp", function() {deepEqual( Stem("hoppades"), "hopp");});
test("hoppande -> hopp", function() {deepEqual( Stem("hoppande"), "hopp");});
test("hoppar -> hopp", function() {deepEqual( Stem("hoppar"), "hopp");});
test("hoppas -> hopp", function() {deepEqual( Stem("hoppas"), "hopp");});
test("hoppats -> hoppat", function() {deepEqual( Stem("hoppats"), "hoppat");});
test("hoppet -> hoppet", function() {deepEqual( Stem("hoppet"), "hoppet");});
test("hoppfulla -> hoppfull", function() {deepEqual( Stem("hoppfulla"), "hoppfull");});
test("hoppla -> hoppl", function() {deepEqual( Stem("hoppla"), "hoppl");});
test("hopplösa -> hopplös", function() {deepEqual( Stem("hopplösa"), "hopplös");});
test("hopplöshet -> hopplös", function() {deepEqual( Stem("hopplöshet"), "hopplös");});
test("hopplöst -> hopplös", function() {deepEqual( Stem("hopplöst"), "hopplös");});
test("hoppning -> hoppning", function() {deepEqual( Stem("hoppning"), "hoppning");});
test("hoppningsfullt -> hoppningsfull", function() {deepEqual( Stem("hoppningsfullt"), "hoppningsfull");});
test("hoppressade -> hoppress", function() {deepEqual( Stem("hoppressade"), "hoppress");});
test("hoprafsat -> hoprafs", function() {deepEqual( Stem("hoprafsat"), "hoprafs");});
test("hopsjunken -> hopsjunk", function() {deepEqual( Stem("hopsjunken"), "hopsjunk");});
test("hopsydda -> hopsyd", function() {deepEqual( Stem("hopsydda"), "hopsyd");});
test("hoptryckt -> hoptryck", function() {deepEqual( Stem("hoptryckt"), "hoptryck");});
test("hopvecklade -> hopveckl", function() {deepEqual( Stem("hopvecklade"), "hopveckl");});
test("hopvek -> hopvek", function() {deepEqual( Stem("hopvek"), "hopvek");});
test("hor -> hor", function() {deepEqual( Stem("hor"), "hor");});
test("hora -> hor", function() {deepEqual( Stem("hora"), "hor");});
test("horaktige -> horakt", function() {deepEqual( Stem("horaktige"), "horakt");});
test("horas -> hor", function() {deepEqual( Stem("horas"), "hor");});
test("horde -> hord", function() {deepEqual( Stem("horde"), "hord");});
test("horisk -> horisk", function() {deepEqual( Stem("horisk"), "horisk");});
test("horisont -> horisont", function() {deepEqual( Stem("horisont"), "horisont");});
test("horisontala -> horisontal", function() {deepEqual( Stem("horisontala"), "horisontal");});
test("horisonten -> horisont", function() {deepEqual( Stem("horisonten"), "horisont");});
test("horn -> horn", function() {deepEqual( Stem("horn"), "horn");});
test("hornen -> horn", function() {deepEqual( Stem("hornen"), "horn");});
test("horniga -> horn", function() {deepEqual( Stem("horniga"), "horn");});
test("horribelt -> horribelt", function() {deepEqual( Stem("horribelt"), "horribelt");});
test("horribla -> horribl", function() {deepEqual( Stem("horribla"), "horribl");});
test("hort -> hort", function() {deepEqual( Stem("hort"), "hort");});
test("horta -> hort", function() {deepEqual( Stem("horta"), "hort");});
test("hos -> hos", function() {deepEqual( Stem("hos"), "hos");});
test("hospital -> hospital", function() {deepEqual( Stem("hospital"), "hospital");});
test("hostade -> host", function() {deepEqual( Stem("hostade"), "host");});
test("hosten -> host", function() {deepEqual( Stem("hosten"), "host");});
test("hot -> hot", function() {deepEqual( Stem("hot"), "hot");});
test("hota -> hot", function() {deepEqual( Stem("hota"), "hot");});
test("hotad -> hot", function() {deepEqual( Stem("hotad"), "hot");});
test("hotade -> hot", function() {deepEqual( Stem("hotade"), "hot");});
test("hotande -> hot", function() {deepEqual( Stem("hotande"), "hot");});
test("hotar -> hot", function() {deepEqual( Stem("hotar"), "hot");});
test("hotas -> hot", function() {deepEqual( Stem("hotas"), "hot");});
test("hotel -> hotel", function() {deepEqual( Stem("hotel"), "hotel");});
test("hotell -> hotell", function() {deepEqual( Stem("hotell"), "hotell");});
test("hotellbeställning -> hotellbeställning", function() {deepEqual( Stem("hotellbeställning"), "hotellbeställning");});
test("hotellet -> hotellet", function() {deepEqual( Stem("hotellet"), "hotellet");});
test("hotellgården -> hotellgård", function() {deepEqual( Stem("hotellgården"), "hotellgård");});
test("hotellrum -> hotellrum", function() {deepEqual( Stem("hotellrum"), "hotellrum");});
test("hotellrummet -> hotellrummet", function() {deepEqual( Stem("hotellrummet"), "hotellrummet");});
test("hotelse -> hot", function() {deepEqual( Stem("hotelse"), "hot");});
test("hotelser -> hot", function() {deepEqual( Stem("hotelser"), "hot");});
test("hottentottskor -> hottentottsk", function() {deepEqual( Stem("hottentottskor"), "hottentottsk");});
test("hov -> hov", function() {deepEqual( Stem("hov"), "hov");});
test("hovman -> hovman", function() {deepEqual( Stem("hovman"), "hovman");});
test("hovmästare -> hovmäst", function() {deepEqual( Stem("hovmästare"), "hovmäst");});
test("hovmästaren -> hovmäst", function() {deepEqual( Stem("hovmästaren"), "hovmäst");});
test("hovmästarinna -> hovmästarin", function() {deepEqual( Stem("hovmästarinna"), "hovmästarin");});
test("hovmästarinnan -> hovmästarinnan", function() {deepEqual( Stem("hovmästarinnan"), "hovmästarinnan");});
test("hovmästarinnans -> hovmästarinnan", function() {deepEqual( Stem("hovmästarinnans"), "hovmästarinnan");});
test("hovnarr -> hovnarr", function() {deepEqual( Stem("hovnarr"), "hovnarr");});
test("hovpredikant -> hovpredikant", function() {deepEqual( Stem("hovpredikant"), "hovpredikant");});
test("hovrätt -> hovrät", function() {deepEqual( Stem("hovrätt"), "hovrät");});
test("hovrätten -> hovrät", function() {deepEqual( Stem("hovrätten"), "hovrät");});
test("hr -> hr", function() {deepEqual( Stem("hr"), "hr");});
test("hra -> hra", function() {deepEqual( Stem("hra"), "hra");});
test("hrencreutz -> hrencreutz", function() {deepEqual( Stem("hrencreutz"), "hrencreutz");});
test("hrudgum -> hrudgum", function() {deepEqual( Stem("hrudgum"), "hrudgum");});
test("htet -> htet", function() {deepEqual( Stem("htet"), "htet");});
test("hu -> hu", function() {deepEqual( Stem("hu"), "hu");});
test("hubert -> hubert", function() {deepEqual( Stem("hubert"), "hubert");});
test("hud -> hud", function() {deepEqual( Stem("hud"), "hud");});
test("hude -> hud", function() {deepEqual( Stem("hude"), "hud");});
test("huden -> hud", function() {deepEqual( Stem("huden"), "hud");});
test("hudens -> hud", function() {deepEqual( Stem("hudens"), "hud");});
test("hudingar -> huding", function() {deepEqual( Stem("hudingar"), "huding");});
test("hudsjukdomar -> hudsjukdom", function() {deepEqual( Stem("hudsjukdomar"), "hudsjukdom");});
test("hufvu -> hufvu", function() {deepEqual( Stem("hufvu"), "hufvu");});
test("hufvud -> hufvud", function() {deepEqual( Stem("hufvud"), "hufvud");});
test("hufvuden -> hufvud", function() {deepEqual( Stem("hufvuden"), "hufvud");});
test("hufvudet -> hufvudet", function() {deepEqual( Stem("hufvudet"), "hufvudet");});
test("hufvudgärden -> hufvudgärd", function() {deepEqual( Stem("hufvudgärden"), "hufvudgärd");});
test("hufvudkudden -> hufvudkud", function() {deepEqual( Stem("hufvudkudden"), "hufvudkud");});
test("hufvudpersonerna -> hufvudperson", function() {deepEqual( Stem("hufvudpersonerna"), "hufvudperson");});
test("hufvudsaken -> hufvudsak", function() {deepEqual( Stem("hufvudsaken"), "hufvudsak");});
test("hufvudstaden -> hufvudstad", function() {deepEqual( Stem("hufvudstaden"), "hufvudstad");});
test("hufvudvärk -> hufvudvärk", function() {deepEqual( Stem("hufvudvärk"), "hufvudvärk");});
test("hugad -> hug", function() {deepEqual( Stem("hugad"), "hug");});
test("hugg -> hugg", function() {deepEqual( Stem("hugg"), "hugg");});
test("hugga -> hugg", function() {deepEqual( Stem("hugga"), "hugg");});
test("huggaren -> hugg", function() {deepEqual( Stem("huggaren"), "hugg");});
test("huggit -> huggit", function() {deepEqual( Stem("huggit"), "huggit");});
test("hugnad -> hugn", function() {deepEqual( Stem("hugnad"), "hugn");});
test("hugnade -> hugn", function() {deepEqual( Stem("hugnade"), "hugn");});
test("hugnades -> hugn", function() {deepEqual( Stem("hugnades"), "hugn");});
test("hugnar -> hugn", function() {deepEqual( Stem("hugnar"), "hugn");});
test("hugos -> hugo", function() {deepEqual( Stem("hugos"), "hugo");});
test("hugskott -> hugskot", function() {deepEqual( Stem("hugskott"), "hugskot");});
test("hugsvalelse -> hugsval", function() {deepEqual( Stem("hugsvalelse"), "hugsval");});
test("huj -> huj", function() {deepEqual( Stem("huj"), "huj");});
test("hukade -> huk", function() {deepEqual( Stem("hukade"), "huk");});
test("hula -> hul", function() {deepEqual( Stem("hula"), "hul");});
test("hulda -> huld", function() {deepEqual( Stem("hulda"), "huld");});
test("huldaste -> huld", function() {deepEqual( Stem("huldaste"), "huld");});
test("hulde -> huld", function() {deepEqual( Stem("hulde"), "huld");});
test("huldhet -> huld", function() {deepEqual( Stem("huldhet"), "huld");});
test("hull -> hull", function() {deepEqual( Stem("hull"), "hull");});
test("huller -> hull", function() {deepEqual( Stem("huller"), "hull");});
test("hullet -> hullet", function() {deepEqual( Stem("hullet"), "hullet");});
test("hulpit -> hulpit", function() {deepEqual( Stem("hulpit"), "hulpit");});
test("hult -> hult", function() {deepEqual( Stem("hult"), "hult");});
test("hum -> hum", function() {deepEqual( Stem("hum"), "hum");});
test("humanaste -> human", function() {deepEqual( Stem("humanaste"), "human");});
test("humanist -> humanist", function() {deepEqual( Stem("humanist"), "humanist");});
test("humanitäre -> humanitär", function() {deepEqual( Stem("humanitäre"), "humanitär");});
test("humant -> humant", function() {deepEqual( Stem("humant"), "humant");});
test("humbug -> humbug", function() {deepEqual( Stem("humbug"), "humbug");});
test("humbugen -> humbug", function() {deepEqual( Stem("humbugen"), "humbug");});
test("humd -> humd", function() {deepEqual( Stem("humd"), "humd");});
test("humle -> huml", function() {deepEqual( Stem("humle"), "huml");});
test("humlegården -> humlegård", function() {deepEqual( Stem("humlegården"), "humlegård");});
test("humlegårdens -> humlegård", function() {deepEqual( Stem("humlegårdens"), "humlegård");});
test("humlegårdsgatan -> humlegårdsgatan", function() {deepEqual( Stem("humlegårdsgatan"), "humlegårdsgatan");});
test("humlerankor -> humlerank", function() {deepEqual( Stem("humlerankor"), "humlerank");});
test("humlesvärm -> humlesvärm", function() {deepEqual( Stem("humlesvärm"), "humlesvärm");});
test("humlor -> huml", function() {deepEqual( Stem("humlor"), "huml");});
test("humlornas -> huml", function() {deepEqual( Stem("humlornas"), "huml");});
test("hummer -> humm", function() {deepEqual( Stem("hummer"), "humm");});
test("hummertina -> hummertin", function() {deepEqual( Stem("hummertina"), "hummertin");});
test("hummertinan -> hummertinan", function() {deepEqual( Stem("hummertinan"), "hummertinan");});
test("hummertänger -> hummertäng", function() {deepEqual( Stem("hummertänger"), "hummertäng");});
test("humor -> hum", function() {deepEqual( Stem("humor"), "hum");});
test("humorist -> humorist", function() {deepEqual( Stem("humorist"), "humorist");});
test("humoristiskt -> humoristisk", function() {deepEqual( Stem("humoristiskt"), "humoristisk");});
test("humrar -> humr", function() {deepEqual( Stem("humrar"), "humr");});
test("humör -> humör", function() {deepEqual( Stem("humör"), "humör");});
test("hun -> hun", function() {deepEqual( Stem("hun"), "hun");});
test("hund -> hund", function() {deepEqual( Stem("hund"), "hund");});
test("hundar -> hund", function() {deepEqual( Stem("hundar"), "hund");});
test("hundarna -> hund", function() {deepEqual( Stem("hundarna"), "hund");});
test("hundarne -> hund", function() {deepEqual( Stem("hundarne"), "hund");});
test("hunden -> hund", function() {deepEqual( Stem("hunden"), "hund");});
test("hundens -> hund", function() {deepEqual( Stem("hundens"), "hund");});
test("hundgård -> hundgård", function() {deepEqual( Stem("hundgård"), "hundgård");});
test("hundhjärna -> hundhjärn", function() {deepEqual( Stem("hundhjärna"), "hundhjärn");});
test("hundlivets -> hundlivet", function() {deepEqual( Stem("hundlivets"), "hundlivet");});
test("hundra -> hundr", function() {deepEqual( Stem("hundra"), "hundr");});
test("hundrade -> hundr", function() {deepEqual( Stem("hundrade"), "hundr");});
test("hundratals -> hundratal", function() {deepEqual( Stem("hundratals"), "hundratal");});
test("hunds -> hund", function() {deepEqual( Stem("hunds"), "hund");});
test("hundsnus -> hundsnus", function() {deepEqual( Stem("hundsnus"), "hundsnus");});
test("hundvalp -> hundvalp", function() {deepEqual( Stem("hundvalp"), "hundvalp");});
test("hunger -> hung", function() {deepEqual( Stem("hunger"), "hung");});
test("hungern -> hung", function() {deepEqual( Stem("hungern"), "hung");});
test("hungerns -> hung", function() {deepEqual( Stem("hungerns"), "hung");});
test("hungrat -> hungr", function() {deepEqual( Stem("hungrat"), "hungr");});
test("hungrig -> hungr", function() {deepEqual( Stem("hungrig"), "hungr");});
test("hungriga -> hungr", function() {deepEqual( Stem("hungriga"), "hungr");});
test("hungrigt -> hungr", function() {deepEqual( Stem("hungrigt"), "hungr");});
test("hunne -> hunn", function() {deepEqual( Stem("hunne"), "hunn");});
test("hunnet -> hunnet", function() {deepEqual( Stem("hunnet"), "hunnet");});
test("hunnit -> hunnit", function() {deepEqual( Stem("hunnit"), "hunnit");});
test("hunno -> hunno", function() {deepEqual( Stem("hunno"), "hunno");});
test("hur -> hur", function() {deepEqual( Stem("hur"), "hur");});
test("hurdan -> hurdan", function() {deepEqual( Stem("hurdan"), "hurdan");});
test("hurnlegården -> hurnlegård", function() {deepEqual( Stem("hurnlegården"), "hurnlegård");});
test("hurrade -> hurr", function() {deepEqual( Stem("hurrade"), "hurr");});
test("hurtig -> hurt", function() {deepEqual( Stem("hurtig"), "hurt");});
test("hurtiga -> hurt", function() {deepEqual( Stem("hurtiga"), "hurt");});
test("hurtige -> hurt", function() {deepEqual( Stem("hurtige"), "hurt");});
test("hurtigt -> hurt", function() {deepEqual( Stem("hurtigt"), "hurt");});
test("huru -> huru", function() {deepEqual( Stem("huru"), "huru");});
test("hurudan -> hurudan", function() {deepEqual( Stem("hurudan"), "hurudan");});
test("hurudana -> hurudan", function() {deepEqual( Stem("hurudana"), "hurudan");});
test("hurudant -> hurudant", function() {deepEqual( Stem("hurudant"), "hurudant");});
test("huruledes -> huruled", function() {deepEqual( Stem("huruledes"), "huruled");});
test("hurusom -> hurusom", function() {deepEqual( Stem("hurusom"), "hurusom");});
test("huruvida -> huruvid", function() {deepEqual( Stem("huruvida"), "huruvid");});
test("hus -> hus", function() {deepEqual( Stem("hus"), "hus");});
test("husbehov -> husbehov", function() {deepEqual( Stem("husbehov"), "husbehov");});
test("husbestyr -> husbestyr", function() {deepEqual( Stem("husbestyr"), "husbestyr");});
test("husbonde -> husbond", function() {deepEqual( Stem("husbonde"), "husbond");});
test("husbondefolk -> husbondefolk", function() {deepEqual( Stem("husbondefolk"), "husbondefolk");});
test("husbonderätt -> husbonderät", function() {deepEqual( Stem("husbonderätt"), "husbonderät");});
test("husbondes -> husbond", function() {deepEqual( Stem("husbondes"), "husbond");});
test("husbondeväldet -> husbondeväldet", function() {deepEqual( Stem("husbondeväldet"), "husbondeväldet");});
test("husen -> hus", function() {deepEqual( Stem("husen"), "hus");});
test("husens -> hus", function() {deepEqual( Stem("husens"), "hus");});
test("huserade -> huser", function() {deepEqual( Stem("huserade"), "huser");});
test("huseru -> huseru", function() {deepEqual( Stem("huseru"), "huseru");});
test("huset -> huset", function() {deepEqual( Stem("huset"), "huset");});
test("husets -> huset", function() {deepEqual( Stem("husets"), "huset");});
test("husfolkets -> husfolket", function() {deepEqual( Stem("husfolkets"), "husfolket");});
test("husfriden -> husfrid", function() {deepEqual( Stem("husfriden"), "husfrid");});
test("husfridens -> husfrid", function() {deepEqual( Stem("husfridens"), "husfrid");});
test("husfru -> husfru", function() {deepEqual( Stem("husfru"), "husfru");});
test("husfrun -> husfrun", function() {deepEqual( Stem("husfrun"), "husfrun");});
test("husfruns -> husfrun", function() {deepEqual( Stem("husfruns"), "husfrun");});
test("husfrus -> husfrus", function() {deepEqual( Stem("husfrus"), "husfrus");});
test("husförestånderska -> husföreståndersk", function() {deepEqual( Stem("husförestånderska"), "husföreståndersk");});
test("husgeråd -> husgeråd", function() {deepEqual( Stem("husgeråd"), "husgeråd");});
test("husgerådet -> husgerådet", function() {deepEqual( Stem("husgerådet"), "husgerådet");});
test("husgöromål -> husgöromål", function() {deepEqual( Stem("husgöromål"), "husgöromål");});
test("husgöromålet -> husgöromålet", function() {deepEqual( Stem("husgöromålet"), "husgöromålet");});
test("hushåll -> hushåll", function() {deepEqual( Stem("hushåll"), "hushåll");});
test("hushålla -> hushåll", function() {deepEqual( Stem("hushålla"), "hushåll");});
test("hushållar -> hushåll", function() {deepEqual( Stem("hushållar"), "hushåll");});
test("hushållerska -> hushållersk", function() {deepEqual( Stem("hushållerska"), "hushållersk");});
test("hushållerskan -> hushållerskan", function() {deepEqual( Stem("hushållerskan"), "hushållerskan");});
test("hushållerskas -> hushållersk", function() {deepEqual( Stem("hushållerskas"), "hushållersk");});
test("hushållet -> hushållet", function() {deepEqual( Stem("hushållet"), "hushållet");});
test("hushållning -> hushållning", function() {deepEqual( Stem("hushållning"), "hushållning");});
test("hushållningen -> hushållning", function() {deepEqual( Stem("hushållningen"), "hushållning");});
test("hushålls -> hushåll", function() {deepEqual( Stem("hushålls"), "hushåll");});
test("hushållsaktig -> hushållsakt", function() {deepEqual( Stem("hushållsaktig"), "hushållsakt");});
test("hushållsaktighet -> hushållsakt", function() {deepEqual( Stem("hushållsaktighet"), "hushållsakt");});
test("hushållsbestyr -> hushållsbestyr", function() {deepEqual( Stem("hushållsbestyr"), "hushållsbestyr");});
test("hushållsgeni -> hushållsgeni", function() {deepEqual( Stem("hushållsgeni"), "hushållsgeni");});
test("hushållskonto -> hushållskonto", function() {deepEqual( Stem("hushållskonto"), "hushållskonto");});
test("hushållspenningarna -> hushållspenning", function() {deepEqual( Stem("hushållspenningarna"), "hushållspenning");});
test("hushållsprinciper -> hushållsprincip", function() {deepEqual( Stem("hushållsprinciper"), "hushållsprincip");});
test("hushållsprinciperna -> hushållsprincip", function() {deepEqual( Stem("hushållsprinciperna"), "hushållsprincip");});
test("hushållssaker -> hushållssak", function() {deepEqual( Stem("hushållssaker"), "hushållssak");});
test("hushållsskola -> hushållsskol", function() {deepEqual( Stem("hushållsskola"), "hushållsskol");});
test("hushållsskolan -> hushållsskolan", function() {deepEqual( Stem("hushållsskolan"), "hushållsskolan");});
test("hushållsskolans -> hushållsskolan", function() {deepEqual( Stem("hushållsskolans"), "hushållsskolan");});
test("hushållssumman -> hushållssumman", function() {deepEqual( Stem("hushållssumman"), "hushållssumman");});
test("hushållssyssla -> hushållssyssl", function() {deepEqual( Stem("hushållssyssla"), "hushållssyssl");});
test("hushållsuppköp -> hushållsuppköp", function() {deepEqual( Stem("hushållsuppköp"), "hushållsuppköp");});
test("hushållsvetenskap -> hushållsvetenskap", function() {deepEqual( Stem("hushållsvetenskap"), "hushållsvetenskap");});
test("hushållsväg -> hushållsväg", function() {deepEqual( Stem("hushållsväg"), "hushållsväg");});
test("hushållvetenskap -> hushållvetenskap", function() {deepEqual( Stem("hushållvetenskap"), "hushållvetenskap");});
test("husknut -> husknut", function() {deepEqual( Stem("husknut"), "husknut");});
test("husknutarna -> husknut", function() {deepEqual( Stem("husknutarna"), "husknut");});
test("husknuten -> husknut", function() {deepEqual( Stem("husknuten"), "husknut");});
test("huslig -> hus", function() {deepEqual( Stem("huslig"), "hus");});
test("husliga -> hus", function() {deepEqual( Stem("husliga"), "hus");});
test("huslighet -> hus", function() {deepEqual( Stem("huslighet"), "hus");});
test("husligt -> hus", function() {deepEqual( Stem("husligt"), "hus");});
test("husläkare -> husläk", function() {deepEqual( Stem("husläkare"), "husläk");});
test("husläkaren -> husläk", function() {deepEqual( Stem("husläkaren"), "husläk");});
test("husmamsell -> husmamsell", function() {deepEqual( Stem("husmamsell"), "husmamsell");});
test("husmoder -> husmod", function() {deepEqual( Stem("husmoder"), "husmod");});
test("husmoderlig -> husmoder", function() {deepEqual( Stem("husmoderlig"), "husmoder");});
test("husmoderliga -> husmoder", function() {deepEqual( Stem("husmoderliga"), "husmoder");});
test("husmodern -> husmod", function() {deepEqual( Stem("husmodern"), "husmod");});
test("husmoderns -> husmod", function() {deepEqual( Stem("husmoderns"), "husmod");});
test("husmor -> husm", function() {deepEqual( Stem("husmor"), "husm");});
test("husnummer -> husnumm", function() {deepEqual( Stem("husnummer"), "husnumm");});
test("huspigan -> huspigan", function() {deepEqual( Stem("huspigan"), "huspigan");});
test("hustaken -> hustak", function() {deepEqual( Stem("hustaken"), "hustak");});
test("hustru -> hustru", function() {deepEqual( Stem("hustru"), "hustru");});
test("hustrublick -> hustrublick", function() {deepEqual( Stem("hustrublick"), "hustrublick");});
test("hustrumin -> hustrumin", function() {deepEqual( Stem("hustrumin"), "hustrumin");});
test("hustrun -> hustrun", function() {deepEqual( Stem("hustrun"), "hustrun");});
test("hustruns -> hustrun", function() {deepEqual( Stem("hustruns"), "hustrun");});
test("hustrur -> hustrur", function() {deepEqual( Stem("hustrur"), "hustrur");});
test("hustrurna -> hustrurn", function() {deepEqual( Stem("hustrurna"), "hustrurn");});
test("hustrurnas -> hustrurn", function() {deepEqual( Stem("hustrurnas"), "hustrurn");});
test("hustrurs -> hustrur", function() {deepEqual( Stem("hustrurs"), "hustrur");});
test("hustrus -> hustrus", function() {deepEqual( Stem("hustrus"), "hustrus");});
test("husundersökning -> husundersökning", function() {deepEqual( Stem("husundersökning"), "husundersökning");});
test("hut -> hut", function() {deepEqual( Stem("hut"), "hut");});
test("huttrade -> huttr", function() {deepEqual( Stem("huttrade"), "huttr");});
test("huvadet -> huvadet", function() {deepEqual( Stem("huvadet"), "huvadet");});
test("huvans -> huvan", function() {deepEqual( Stem("huvans"), "huvan");});
test("huven -> huv", function() {deepEqual( Stem("huven"), "huv");});
test("huvu -> huvu", function() {deepEqual( Stem("huvu"), "huvu");});
test("huvud -> huvud", function() {deepEqual( Stem("huvud"), "huvud");});
test("huvudallen -> huvudall", function() {deepEqual( Stem("huvudallen"), "huvudall");});
test("huvudbonaden -> huvudbonad", function() {deepEqual( Stem("huvudbonaden"), "huvudbonad");});
test("huvudbry -> huvudbry", function() {deepEqual( Stem("huvudbry"), "huvudbry");});
test("huvudbyggnaden -> huvudbyggnad", function() {deepEqual( Stem("huvudbyggnaden"), "huvudbyggnad");});
test("huvudduk -> huvudduk", function() {deepEqual( Stem("huvudduk"), "huvudduk");});
test("huvuddukarna -> huvudduk", function() {deepEqual( Stem("huvuddukarna"), "huvudduk");});
test("huvuden -> huvud", function() {deepEqual( Stem("huvuden"), "huvud");});
test("huvudena -> huvuden", function() {deepEqual( Stem("huvudena"), "huvuden");});
test("huvudenas -> huvuden", function() {deepEqual( Stem("huvudenas"), "huvuden");});
test("huvudet -> huvudet", function() {deepEqual( Stem("huvudet"), "huvudet");});
test("huvudfiende -> huvudfiend", function() {deepEqual( Stem("huvudfiende"), "huvudfiend");});
test("huvudgrupper -> huvudgrupp", function() {deepEqual( Stem("huvudgrupper"), "huvudgrupp");});
test("huvudgärd -> huvudgärd", function() {deepEqual( Stem("huvudgärd"), "huvudgärd");});
test("huvudgärden -> huvudgärd", function() {deepEqual( Stem("huvudgärden"), "huvudgärd");});
test("huvudkudde -> huvudkud", function() {deepEqual( Stem("huvudkudde"), "huvudkud");});
test("huvudkudden -> huvudkud", function() {deepEqual( Stem("huvudkudden"), "huvudkud");});
test("huvudman -> huvudman", function() {deepEqual( Stem("huvudman"), "huvudman");});
test("huvudrollen -> huvudroll", function() {deepEqual( Stem("huvudrollen"), "huvudroll");});
test("huvudsaken -> huvudsak", function() {deepEqual( Stem("huvudsaken"), "huvudsak");});
test("huvudsakligen -> huvudsak", function() {deepEqual( Stem("huvudsakligen"), "huvudsak");});
test("huvudstad -> huvudst", function() {deepEqual( Stem("huvudstad"), "huvudst");});
test("huvudstaden -> huvudstad", function() {deepEqual( Stem("huvudstaden"), "huvudstad");});
test("huvudstadens -> huvudstad", function() {deepEqual( Stem("huvudstadens"), "huvudstad");});
test("huvudvillkoret -> huvudvillkoret", function() {deepEqual( Stem("huvudvillkoret"), "huvudvillkoret");});
test("huvudvärk -> huvudvärk", function() {deepEqual( Stem("huvudvärk"), "huvudvärk");});
test("huvudvärken -> huvudvärk", function() {deepEqual( Stem("huvudvärken"), "huvudvärk");});
test("hux -> hux", function() {deepEqual( Stem("hux"), "hux");});
test("hvad -> hvad", function() {deepEqual( Stem("hvad"), "hvad");});
test("hvadan -> hvadan", function() {deepEqual( Stem("hvadan"), "hvadan");});
test("hvalf -> hvalf", function() {deepEqual( Stem("hvalf"), "hvalf");});
test("hvalfiskarne -> hvalfisk", function() {deepEqual( Stem("hvalfiskarne"), "hvalfisk");});
test("hvar -> hvar", function() {deepEqual( Stem("hvar"), "hvar");});
test("hvaraf -> hvaraf", function() {deepEqual( Stem("hvaraf"), "hvaraf");});
test("hvarandra -> hvarandr", function() {deepEqual( Stem("hvarandra"), "hvarandr");});
test("hvardagliga -> hvardag", function() {deepEqual( Stem("hvardagliga"), "hvardag");});
test("hvardagsgäst -> hvardagsgäst", function() {deepEqual( Stem("hvardagsgäst"), "hvardagsgäst");});
test("hvardagslag -> hvardagslag", function() {deepEqual( Stem("hvardagslag"), "hvardagslag");});
test("hvardera -> hvarder", function() {deepEqual( Stem("hvardera"), "hvarder");});
test("hvarefter -> hvareft", function() {deepEqual( Stem("hvarefter"), "hvareft");});
test("hvaremot -> hvaremot", function() {deepEqual( Stem("hvaremot"), "hvaremot");});
test("hvarest -> hvarest", function() {deepEqual( Stem("hvarest"), "hvarest");});
test("hvarför -> hvarför", function() {deepEqual( Stem("hvarför"), "hvarför");});
test("hvarföre -> hvarför", function() {deepEqual( Stem("hvarföre"), "hvarför");});
test("hvari -> hvari", function() {deepEqual( Stem("hvari"), "hvari");});
test("hvaribland -> hvaribland", function() {deepEqual( Stem("hvaribland"), "hvaribland");});
test("hvarifrån -> hvarifrån", function() {deepEqual( Stem("hvarifrån"), "hvarifrån");});
test("hvarigenom -> hvarigenom", function() {deepEqual( Stem("hvarigenom"), "hvarigenom");});
test("hvarje -> hvarj", function() {deepEqual( Stem("hvarje"), "hvarj");});
test("hvarjehanda -> hvarjehand", function() {deepEqual( Stem("hvarjehanda"), "hvarjehand");});
test("hvarken -> hvark", function() {deepEqual( Stem("hvarken"), "hvark");});
test("hvarmed -> hvarmed", function() {deepEqual( Stem("hvarmed"), "hvarmed");});
test("hvarom -> hvarom", function() {deepEqual( Stem("hvarom"), "hvarom");});
test("hvarpå -> hvarpå", function() {deepEqual( Stem("hvarpå"), "hvarpå");});
test("hvars -> hvar", function() {deepEqual( Stem("hvars"), "hvar");});
test("hvart -> hvart", function() {deepEqual( Stem("hvart"), "hvart");});
test("hvarthelst -> hvarthelst", function() {deepEqual( Stem("hvarthelst"), "hvarthelst");});
test("hvartill -> hvartill", function() {deepEqual( Stem("hvartill"), "hvartill");});
test("hvarunder -> hvarund", function() {deepEqual( Stem("hvarunder"), "hvarund");});
test("hvaruti -> hvaruti", function() {deepEqual( Stem("hvaruti"), "hvaruti");});
test("hvarvid -> hvarvid", function() {deepEqual( Stem("hvarvid"), "hvarvid");});
test("hvaråt -> hvaråt", function() {deepEqual( Stem("hvaråt"), "hvaråt");});
test("hvaröfver -> hvaröfv", function() {deepEqual( Stem("hvaröfver"), "hvaröfv");});
test("hvem -> hvem", function() {deepEqual( Stem("hvem"), "hvem");});
test("hvems -> hvem", function() {deepEqual( Stem("hvems"), "hvem");});
test("hvetebröd -> hvetebröd", function() {deepEqual( Stem("hvetebröd"), "hvetebröd");});
test("hvi -> hvi", function() {deepEqual( Stem("hvi"), "hvi");});
test("hvila -> hvil", function() {deepEqual( Stem("hvila"), "hvil");});
test("hvilade -> hvil", function() {deepEqual( Stem("hvilade"), "hvil");});
test("hvilat -> hvil", function() {deepEqual( Stem("hvilat"), "hvil");});
test("hvilka -> hvilk", function() {deepEqual( Stem("hvilka"), "hvilk");});
test("hvilkas -> hvilk", function() {deepEqual( Stem("hvilkas"), "hvilk");});
test("hvilken -> hvilk", function() {deepEqual( Stem("hvilken"), "hvilk");});
test("hvilket -> hvilket", function() {deepEqual( Stem("hvilket"), "hvilket");});
test("hvilodag -> hvilodag", function() {deepEqual( Stem("hvilodag"), "hvilodag");});
test("hvilorum -> hvilorum", function() {deepEqual( Stem("hvilorum"), "hvilorum");});
test("hvirflar -> hvirfl", function() {deepEqual( Stem("hvirflar"), "hvirfl");});
test("hviska -> hvisk", function() {deepEqual( Stem("hviska"), "hvisk");});
test("hviskade -> hvisk", function() {deepEqual( Stem("hviskade"), "hvisk");});
test("hviskande -> hvisk", function() {deepEqual( Stem("hviskande"), "hvisk");});
test("hviskat -> hvisk", function() {deepEqual( Stem("hviskat"), "hvisk");});
test("hvissling -> hvissling", function() {deepEqual( Stem("hvissling"), "hvissling");});
test("hvit -> hvit", function() {deepEqual( Stem("hvit"), "hvit");});
test("hvita -> hvit", function() {deepEqual( Stem("hvita"), "hvit");});
test("hvitklädd -> hvitkläd", function() {deepEqual( Stem("hvitklädd"), "hvitkläd");});
test("hvitt -> hvitt", function() {deepEqual( Stem("hvitt"), "hvitt");});
test("hvtll -> hvtll", function() {deepEqual( Stem("hvtll"), "hvtll");});
test("hvälfde -> hvälfd", function() {deepEqual( Stem("hvälfde"), "hvälfd");});
test("hy -> hy", function() {deepEqual( Stem("hy"), "hy");});
test("hyckla -> hyckl", function() {deepEqual( Stem("hyckla"), "hyckl");});
test("hycklare -> hyckl", function() {deepEqual( Stem("hycklare"), "hyckl");});
test("hyckleri -> hyckleri", function() {deepEqual( Stem("hyckleri"), "hyckleri");});
test("hycklerskan -> hycklerskan", function() {deepEqual( Stem("hycklerskan"), "hycklerskan");});
test("hydda -> hydd", function() {deepEqual( Stem("hydda"), "hydd");});
test("hyddor -> hydd", function() {deepEqual( Stem("hyddor"), "hydd");});
test("hygglig -> hygg", function() {deepEqual( Stem("hygglig"), "hygg");});
test("hyggliga -> hygg", function() {deepEqual( Stem("hyggliga"), "hygg");});
test("hygglige -> hygg", function() {deepEqual( Stem("hygglige"), "hygg");});
test("hyggligt -> hygg", function() {deepEqual( Stem("hyggligt"), "hygg");});
test("hygienisk -> hygienisk", function() {deepEqual( Stem("hygienisk"), "hygienisk");});
test("hylla -> hyll", function() {deepEqual( Stem("hylla"), "hyll");});
test("hyllan -> hyllan", function() {deepEqual( Stem("hyllan"), "hyllan");});
test("hyllning -> hyllning", function() {deepEqual( Stem("hyllning"), "hyllning");});
test("hyllor -> hyll", function() {deepEqual( Stem("hyllor"), "hyll");});
test("hyllorna -> hyll", function() {deepEqual( Stem("hyllorna"), "hyll");});
test("hymn -> hymn", function() {deepEqual( Stem("hymn"), "hymn");});
test("hymnen -> hymn", function() {deepEqual( Stem("hymnen"), "hymn");});
test("hymner -> hymn", function() {deepEqual( Stem("hymner"), "hymn");});
test("hyn -> hyn", function() {deepEqual( Stem("hyn"), "hyn");});
test("hyndan -> hyndan", function() {deepEqual( Stem("hyndan"), "hyndan");});
test("hyndans -> hyndan", function() {deepEqual( Stem("hyndans"), "hyndan");});
test("hypetek -> hypetek", function() {deepEqual( Stem("hypetek"), "hypetek");});
test("hypnotisera -> hypnotiser", function() {deepEqual( Stem("hypnotisera"), "hypnotiser");});
test("hypnotiserar -> hypnotiser", function() {deepEqual( Stem("hypnotiserar"), "hypnotiser");});
test("hypnotiserats -> hypnotiserat", function() {deepEqual( Stem("hypnotiserats"), "hypnotiserat");});
test("hypnotisk -> hypnotisk", function() {deepEqual( Stem("hypnotisk"), "hypnotisk");});
test("hypnotism -> hypnotism", function() {deepEqual( Stem("hypnotism"), "hypnotism");});
test("hypokonder -> hypokond", function() {deepEqual( Stem("hypokonder"), "hypokond");});
test("hypotek -> hypotek", function() {deepEqual( Stem("hypotek"), "hypotek");});
test("hyr -> hyr", function() {deepEqual( Stem("hyr"), "hyr");});
test("hyra -> hyr", function() {deepEqual( Stem("hyra"), "hyr");});
test("hyran -> hyran", function() {deepEqual( Stem("hyran"), "hyran");});
test("hyrde -> hyrd", function() {deepEqual( Stem("hyrde"), "hyrd");});
test("hyrer -> hyr", function() {deepEqual( Stem("hyrer"), "hyr");});
test("hyresgäster -> hyresgäst", function() {deepEqual( Stem("hyresgäster"), "hyresgäst");});
test("hyresmannen -> hyresman", function() {deepEqual( Stem("hyresmannen"), "hyresman");});
test("hyrt -> hyrt", function() {deepEqual( Stem("hyrt"), "hyrt");});
test("hyrvagn -> hyrvagn", function() {deepEqual( Stem("hyrvagn"), "hyrvagn");});
test("hyrvagnarna -> hyrvagn", function() {deepEqual( Stem("hyrvagnarna"), "hyrvagn");});
test("hysa -> hys", function() {deepEqual( Stem("hysa"), "hys");});
test("hyser -> hys", function() {deepEqual( Stem("hyser"), "hys");});
test("hyskor -> hysk", function() {deepEqual( Stem("hyskor"), "hysk");});
test("hyst -> hyst", function() {deepEqual( Stem("hyst"), "hyst");});
test("hyste -> hyst", function() {deepEqual( Stem("hyste"), "hyst");});
test("hysterisk -> hysterisk", function() {deepEqual( Stem("hysterisk"), "hysterisk");});
test("hysteriska -> hysterisk", function() {deepEqual( Stem("hysteriska"), "hysterisk");});
test("hysteriskt -> hysterisk", function() {deepEqual( Stem("hysteriskt"), "hysterisk");});
test("hytten -> hytt", function() {deepEqual( Stem("hytten"), "hytt");});
test("hyvel -> hyvel", function() {deepEqual( Stem("hyvel"), "hyvel");});
test("hä -> hä", function() {deepEqual( Stem("hä"), "hä");});
test("häcklefjäll -> häcklefjäll", function() {deepEqual( Stem("häcklefjäll"), "häcklefjäll");});
test("hädan -> hädan", function() {deepEqual( Stem("hädan"), "hädan");});
test("hädanefter -> hädaneft", function() {deepEqual( Stem("hädanefter"), "hädaneft");});
test("hädangångna -> hädangångn", function() {deepEqual( Stem("hädangångna"), "hädangångn");});
test("hädangångnas -> hädangångn", function() {deepEqual( Stem("hädangångnas"), "hädangångn");});
test("hädd -> hädd", function() {deepEqual( Stem("hädd"), "hädd");});
test("häfda -> häfd", function() {deepEqual( Stem("häfda"), "häfd");});
test("häftad -> häft", function() {deepEqual( Stem("häftad"), "häft");});
test("häftade -> häft", function() {deepEqual( Stem("häftade"), "häft");});
test("häfte -> häft", function() {deepEqual( Stem("häfte"), "häft");});
test("häftet -> häftet", function() {deepEqual( Stem("häftet"), "häftet");});
test("häftig -> häft", function() {deepEqual( Stem("häftig"), "häft");});
test("häftiga -> häft", function() {deepEqual( Stem("häftiga"), "häft");});
test("häftigare -> häft", function() {deepEqual( Stem("häftigare"), "häft");});
test("häftighet -> häft", function() {deepEqual( Stem("häftighet"), "häft");});
test("häftigt -> häft", function() {deepEqual( Stem("häftigt"), "häft");});
test("häggblom -> häggblom", function() {deepEqual( Stem("häggblom"), "häggblom");});
test("häggblommor -> häggblomm", function() {deepEqual( Stem("häggblommor"), "häggblomm");});
test("häggen -> hägg", function() {deepEqual( Stem("häggen"), "hägg");});
test("hägn -> hägn", function() {deepEqual( Stem("hägn"), "hägn");});
test("hägnade -> hägn", function() {deepEqual( Stem("hägnade"), "hägn");});
test("häktad -> häkt", function() {deepEqual( Stem("häktad"), "häkt");});
test("häktas -> häkt", function() {deepEqual( Stem("häktas"), "häkt");});
test("häkte -> häkt", function() {deepEqual( Stem("häkte"), "häkt");});
test("häl -> häl", function() {deepEqual( Stem("häl"), "häl");});
test("hälarna -> häl", function() {deepEqual( Stem("hälarna"), "häl");});
test("hälarne -> häl", function() {deepEqual( Stem("hälarne"), "häl");});
test("hälft -> hälft", function() {deepEqual( Stem("hälft"), "hälft");});
test("hälften -> hälft", function() {deepEqual( Stem("hälften"), "hälft");});
test("hälfter -> hälft", function() {deepEqual( Stem("hälfter"), "hälft");});
test("hälfterna -> hälft", function() {deepEqual( Stem("hälfterna"), "hälft");});
test("hälla -> häll", function() {deepEqual( Stem("hälla"), "häll");});
test("hällde -> hälld", function() {deepEqual( Stem("hällde"), "hälld");});
test("hälleberget -> hälleberget", function() {deepEqual( Stem("hälleberget"), "hälleberget");});
test("hällen -> häll", function() {deepEqual( Stem("hällen"), "häll");});
test("hällens -> häll", function() {deepEqual( Stem("hällens"), "häll");});
test("hällre -> hällr", function() {deepEqual( Stem("hällre"), "hällr");});
test("hälsa -> häls", function() {deepEqual( Stem("hälsa"), "häls");});
test("hälsad -> häls", function() {deepEqual( Stem("hälsad"), "häls");});
test("hälsade -> häls", function() {deepEqual( Stem("hälsade"), "häls");});
test("hälsades -> häls", function() {deepEqual( Stem("hälsades"), "häls");});
test("hälsan -> hälsan", function() {deepEqual( Stem("hälsan"), "hälsan");});
test("hälsande -> häls", function() {deepEqual( Stem("hälsande"), "häls");});
test("hälsans -> hälsan", function() {deepEqual( Stem("hälsans"), "hälsan");});
test("hälsar -> häls", function() {deepEqual( Stem("hälsar"), "häls");});
test("hälsas -> häls", function() {deepEqual( Stem("hälsas"), "häls");});
test("hälsat -> häls", function() {deepEqual( Stem("hälsat"), "häls");});
test("hälsning -> hälsning", function() {deepEqual( Stem("hälsning"), "hälsning");});
test("hälsningar -> hälsning", function() {deepEqual( Stem("hälsningar"), "hälsning");});
test("hälsningarna -> hälsning", function() {deepEqual( Stem("hälsningarna"), "hälsning");});
test("hälsningen -> hälsning", function() {deepEqual( Stem("hälsningen"), "hälsning");});
test("hälsobrunn -> hälsobrun", function() {deepEqual( Stem("hälsobrunn"), "hälsobrun");});
test("hälsofarlighet -> hälsofar", function() {deepEqual( Stem("hälsofarlighet"), "hälsofar");});
test("hälsosamt -> hälsosamt", function() {deepEqual( Stem("hälsosamt"), "hälsosamt");});
test("hälsotillstånd -> hälsotillstånd", function() {deepEqual( Stem("hälsotillstånd"), "hälsotillstånd");});
test("hälsovinst -> hälsovinst", function() {deepEqual( Stem("hälsovinst"), "hälsovinst");});
test("häm -> häm", function() {deepEqual( Stem("häm"), "häm");});
test("hämma -> hämm", function() {deepEqual( Stem("hämma"), "hämm");});
test("hämna -> hämn", function() {deepEqual( Stem("hämna"), "hämn");});
test("hämnade -> hämn", function() {deepEqual( Stem("hämnade"), "hämn");});
test("hämnar -> hämn", function() {deepEqual( Stem("hämnar"), "hämn");});
test("hämnas -> hämn", function() {deepEqual( Stem("hämnas"), "hämn");});
test("hämnd -> hämnd", function() {deepEqual( Stem("hämnd"), "hämnd");});
test("hämta -> hämt", function() {deepEqual( Stem("hämta"), "hämt");});
test("hämtade -> hämt", function() {deepEqual( Stem("hämtade"), "hämt");});
test("hämtande -> hämt", function() {deepEqual( Stem("hämtande"), "hämt");});
test("hämtar -> hämt", function() {deepEqual( Stem("hämtar"), "hämt");});
test("hämtat -> hämt", function() {deepEqual( Stem("hämtat"), "hämt");});
test("hän -> hän", function() {deepEqual( Stem("hän"), "hän");});
test("hända -> händ", function() {deepEqual( Stem("hända"), "händ");});
test("händcr -> händcr", function() {deepEqual( Stem("händcr"), "händcr");});
test("hände -> händ", function() {deepEqual( Stem("hände"), "händ");});
test("händels -> händel", function() {deepEqual( Stem("händels"), "händel");});
test("händelse -> händ", function() {deepEqual( Stem("händelse"), "händ");});
test("händelseförloppet -> händelseförloppet", function() {deepEqual( Stem("händelseförloppet"), "händelseförloppet");});
test("händelsen -> händ", function() {deepEqual( Stem("händelsen"), "händ");});
test("händelser -> händ", function() {deepEqual( Stem("händelser"), "händ");});
test("händelserna -> händ", function() {deepEqual( Stem("händelserna"), "händ");});
test("händelsevis -> händelsevis", function() {deepEqual( Stem("händelsevis"), "händelsevis");});
test("händer -> händ", function() {deepEqual( Stem("händer"), "händ");});
test("händerna -> händ", function() {deepEqual( Stem("händerna"), "händ");});
test("händerochhjälpadem -> händerochhjälpadem", function() {deepEqual( Stem("händerochhjälpadem"), "händerochhjälpadem");});
test("händren -> händr", function() {deepEqual( Stem("händren"), "händr");});
test("händt -> händ", function() {deepEqual( Stem("händt"), "händ");});
test("hänför -> hänför", function() {deepEqual( Stem("hänför"), "hänför");});
test("hänföra -> hänför", function() {deepEqual( Stem("hänföra"), "hänför");});
test("hänförande -> hänför", function() {deepEqual( Stem("hänförande"), "hänför");});
test("hänförd -> hänförd", function() {deepEqual( Stem("hänförd"), "hänförd");});
test("hänförda -> hänförd", function() {deepEqual( Stem("hänförda"), "hänförd");});
test("hänfört -> hänfört", function() {deepEqual( Stem("hänfört"), "hänfört");});
test("hänga -> häng", function() {deepEqual( Stem("hänga"), "häng");});
test("hängande -> häng", function() {deepEqual( Stem("hängande"), "häng");});
test("hängbjörkarna -> hängbjörk", function() {deepEqual( Stem("hängbjörkarna"), "hängbjörk");});
test("hängde -> häng", function() {deepEqual( Stem("hängde"), "häng");});
test("hängdes -> häng", function() {deepEqual( Stem("hängdes"), "häng");});
test("hänger -> häng", function() {deepEqual( Stem("hänger"), "häng");});
test("hänggranshult -> hänggranshult", function() {deepEqual( Stem("hänggranshult"), "hänggranshult");});
test("hängifvenhet -> hängifven", function() {deepEqual( Stem("hängifvenhet"), "hängifven");});
test("hängivenhet -> hängiven", function() {deepEqual( Stem("hängivenhet"), "hängiven");});
test("hänglar -> hängl", function() {deepEqual( Stem("hänglar"), "hängl");});
test("hängt -> häng", function() {deepEqual( Stem("hängt"), "häng");});
test("hänqckning -> hänqckning", function() {deepEqual( Stem("hänqckning"), "hänqckning");});
test("hänryckning -> hänryckning", function() {deepEqual( Stem("hänryckning"), "hänryckning");});
test("hänryckta -> hänryck", function() {deepEqual( Stem("hänryckta"), "hänryck");});
test("hänseende -> hänseend", function() {deepEqual( Stem("hänseende"), "hänseend");});
test("hänseenden -> hänseend", function() {deepEqual( Stem("hänseenden"), "hänseend");});
test("hänsyn -> hänsyn", function() {deepEqual( Stem("hänsyn"), "hänsyn");});
test("hänsynsfull -> hänsynsfull", function() {deepEqual( Stem("hänsynsfull"), "hänsynsfull");});
test("hänsynslös -> hänsynslös", function() {deepEqual( Stem("hänsynslös"), "hänsynslös");});
test("hänsynslösa -> hänsynslös", function() {deepEqual( Stem("hänsynslösa"), "hänsynslös");});
test("hänsynslöst -> hänsynslös", function() {deepEqual( Stem("hänsynslöst"), "hänsynslös");});
test("hänt -> hänt", function() {deepEqual( Stem("hänt"), "hänt");});
test("häntyda -> häntyd", function() {deepEqual( Stem("häntyda"), "häntyd");});
test("häntydande -> häntyd", function() {deepEqual( Stem("häntydande"), "häntyd");});
test("häntydde -> häntyd", function() {deepEqual( Stem("häntydde"), "häntyd");});
test("häntydning -> häntydning", function() {deepEqual( Stem("häntydning"), "häntydning");});
test("häntydningar -> häntydning", function() {deepEqual( Stem("häntydningar"), "häntydning");});
test("häntydningen -> häntydning", function() {deepEqual( Stem("häntydningen"), "häntydning");});
test("hänvisa -> hänvis", function() {deepEqual( Stem("hänvisa"), "hänvis");});
test("hänvisat -> hänvis", function() {deepEqual( Stem("hänvisat"), "hänvis");});
test("hänvisning -> hänvisning", function() {deepEqual( Stem("hänvisning"), "hänvisning");});
test("häpen -> häp", function() {deepEqual( Stem("häpen"), "häp");});
test("häpna -> häpn", function() {deepEqual( Stem("häpna"), "häpn");});
test("häpnad -> häpn", function() {deepEqual( Stem("häpnad"), "häpn");});
test("häpnade -> häpn", function() {deepEqual( Stem("häpnade"), "häpn");});
test("häpnande -> häpn", function() {deepEqual( Stem("häpnande"), "häpn");});
test("häpnar -> häpn", function() {deepEqual( Stem("häpnar"), "häpn");});
test("häpnat -> häpn", function() {deepEqual( Stem("häpnat"), "häpn");});
test("här -> här", function() {deepEqual( Stem("här"), "här");});
test("härad -> här", function() {deepEqual( Stem("härad"), "här");});
test("häradshövding -> häradshövding", function() {deepEqual( Stem("häradshövding"), "häradshövding");});
test("häradshövdingen -> häradshövding", function() {deepEqual( Stem("häradshövdingen"), "häradshövding");});
test("häradsväg -> häradsväg", function() {deepEqual( Stem("häradsväg"), "häradsväg");});
test("häraf -> häraf", function() {deepEqual( Stem("häraf"), "häraf");});
test("härar -> här", function() {deepEqual( Stem("härar"), "här");});
test("härav -> härav", function() {deepEqual( Stem("härav"), "härav");});
test("härbärgera -> härbärger", function() {deepEqual( Stem("härbärgera"), "härbärger");});
test("härbärgerar -> härbärger", function() {deepEqual( Stem("härbärgerar"), "härbärger");});
test("härd -> härd", function() {deepEqual( Stem("härd"), "härd");});
test("härdad -> härd", function() {deepEqual( Stem("härdad"), "härd");});
test("härdar -> härd", function() {deepEqual( Stem("härdar"), "härd");});
test("härdens -> härd", function() {deepEqual( Stem("härdens"), "härd");});
test("härdningen -> härdning", function() {deepEqual( Stem("härdningen"), "härdning");});
test("härefter -> häreft", function() {deepEqual( Stem("härefter"), "häreft");});
test("häremellan -> häremellan", function() {deepEqual( Stem("häremellan"), "häremellan");});
test("häremot -> häremot", function() {deepEqual( Stem("häremot"), "häremot");});
test("härflöt -> härflöt", function() {deepEqual( Stem("härflöt"), "härflöt");});
test("härifran -> härifran", function() {deepEqual( Stem("härifran"), "härifran");});
test("härifrån -> härifrån", function() {deepEqual( Stem("härifrån"), "härifrån");});
test("häriig -> häri", function() {deepEqual( Stem("häriig"), "häri");});
test("härjad -> härj", function() {deepEqual( Stem("härjad"), "härj");});
test("härjade -> härj", function() {deepEqual( Stem("härjade"), "härj");});
test("härjadt -> härjad", function() {deepEqual( Stem("härjadt"), "härjad");});
test("härjande -> härj", function() {deepEqual( Stem("härjande"), "härj");});
test("härjar -> härj", function() {deepEqual( Stem("härjar"), "härj");});
test("härjat -> härj", function() {deepEqual( Stem("härjat"), "härj");});
test("härkomst -> härkomst", function() {deepEqual( Stem("härkomst"), "härkomst");});
test("härledde -> härled", function() {deepEqual( Stem("härledde"), "härled");});
test("härlig -> här", function() {deepEqual( Stem("härlig"), "här");});
test("härliga -> här", function() {deepEqual( Stem("härliga"), "här");});
test("härligare -> här", function() {deepEqual( Stem("härligare"), "här");});
test("härlighet -> här", function() {deepEqual( Stem("härlighet"), "här");});
test("härligheten -> här", function() {deepEqual( Stem("härligheten"), "här");});
test("härligheter -> här", function() {deepEqual( Stem("härligheter"), "här");});
test("härligt -> här", function() {deepEqual( Stem("härligt"), "här");});
test("härma -> härm", function() {deepEqual( Stem("härma"), "härm");});
test("härmade -> härm", function() {deepEqual( Stem("härmade"), "härm");});
test("härmande -> härm", function() {deepEqual( Stem("härmande"), "härm");});
test("härmar -> härm", function() {deepEqual( Stem("härmar"), "härm");});
test("härmed -> härmed", function() {deepEqual( Stem("härmed"), "härmed");});
test("härmedelst -> härmedelst", function() {deepEqual( Stem("härmedelst"), "härmedelst");});
test("härnäst -> härnäst", function() {deepEqual( Stem("härnäst"), "härnäst");});
test("härom -> härom", function() {deepEqual( Stem("härom"), "härom");});
test("häromdagen -> häromdag", function() {deepEqual( Stem("häromdagen"), "häromdag");});
test("häromkvällen -> häromkväll", function() {deepEqual( Stem("häromkvällen"), "häromkväll");});
test("häromåret -> häromåret", function() {deepEqual( Stem("häromåret"), "häromåret");});
test("härpå -> härpå", function() {deepEqual( Stem("härpå"), "härpå");});
test("härrörde -> härrörd", function() {deepEqual( Stem("härrörde"), "härrörd");});
test("härska -> härsk", function() {deepEqual( Stem("härska"), "härsk");});
test("härskade -> härsk", function() {deepEqual( Stem("härskade"), "härsk");});
test("härskaren -> härsk", function() {deepEqual( Stem("härskaren"), "härsk");});
test("härskarinna -> härskarin", function() {deepEqual( Stem("härskarinna"), "härskarin");});
test("härskat -> härsk", function() {deepEqual( Stem("härskat"), "härsk");});
test("härstamning -> härstamning", function() {deepEqual( Stem("härstamning"), "härstamning");});
test("härstädes -> härstäd", function() {deepEqual( Stem("härstädes"), "härstäd");});
test("härt -> härt", function() {deepEqual( Stem("härt"), "härt");});
test("härtill -> härtill", function() {deepEqual( Stem("härtill"), "härtill");});
test("härunder -> härund", function() {deepEqual( Stem("härunder"), "härund");});
test("häruppe -> härupp", function() {deepEqual( Stem("häruppe"), "härupp");});
test("härut -> härut", function() {deepEqual( Stem("härut"), "härut");});
test("häruti -> häruti", function() {deepEqual( Stem("häruti"), "häruti");});
test("härutinnan -> härutinnan", function() {deepEqual( Stem("härutinnan"), "härutinnan");});
test("härutöver -> härutöv", function() {deepEqual( Stem("härutöver"), "härutöv");});
test("härva -> härv", function() {deepEqual( Stem("härva"), "härv");});
test("härvid -> härvid", function() {deepEqual( Stem("härvid"), "härvid");});
test("härå -> härå", function() {deepEqual( Stem("härå"), "härå");});
test("häröfver -> häröfv", function() {deepEqual( Stem("häröfver"), "häröfv");});
test("häröver -> häröv", function() {deepEqual( Stem("häröver"), "häröv");});
test("häst -> häst", function() {deepEqual( Stem("häst"), "häst");});
test("hästar -> häst", function() {deepEqual( Stem("hästar"), "häst");});
test("hästarna -> häst", function() {deepEqual( Stem("hästarna"), "häst");});
test("hästen -> häst", function() {deepEqual( Stem("hästen"), "häst");});
test("hästhalsen -> hästhals", function() {deepEqual( Stem("hästhalsen"), "hästhals");});
test("hästryggar -> hästrygg", function() {deepEqual( Stem("hästryggar"), "hästrygg");});
test("hästryggen -> hästrygg", function() {deepEqual( Stem("hästryggen"), "hästrygg");});
test("hätsk -> hätsk", function() {deepEqual( Stem("hätsk"), "hätsk");});
test("hätska -> hätsk", function() {deepEqual( Stem("hätska"), "hätsk");});
test("hätskcnet -> hätskcnet", function() {deepEqual( Stem("hätskcnet"), "hätskcnet");});
test("hätskhet -> hätsk", function() {deepEqual( Stem("hätskhet"), "hätsk");});
test("hätskt -> hätsk", function() {deepEqual( Stem("hätskt"), "hätsk");});
test("hävda -> hävd", function() {deepEqual( Stem("hävda"), "hävd");});
test("hävder -> hävd", function() {deepEqual( Stem("hävder"), "hävd");});
test("hävdvunnet -> hävdvunnet", function() {deepEqual( Stem("hävdvunnet"), "hävdvunnet");});
test("häxa -> häx", function() {deepEqual( Stem("häxa"), "häx");});
test("häxdansen -> häxdans", function() {deepEqual( Stem("häxdansen"), "häxdans");});
test("häxeri -> häxeri", function() {deepEqual( Stem("häxeri"), "häxeri");});
test("hå -> hå", function() {deepEqual( Stem("hå"), "hå");});
test("håde -> håd", function() {deepEqual( Stem("håde"), "håd");});
test("håg -> håg", function() {deepEqual( Stem("håg"), "håg");});
test("hågad -> håg", function() {deepEqual( Stem("hågad"), "håg");});
test("hågen -> håg", function() {deepEqual( Stem("hågen"), "håg");});
test("hågkomst -> hågkomst", function() {deepEqual( Stem("hågkomst"), "hågkomst");});
test("hågkomster -> hågkomst", function() {deepEqual( Stem("hågkomster"), "hågkomst");});
test("håkan -> håkan", function() {deepEqual( Stem("håkan"), "håkan");});
test("hål -> hål", function() {deepEqual( Stem("hål"), "hål");});
test("håla -> hål", function() {deepEqual( Stem("håla"), "hål");});
test("hålen -> hål", function() {deepEqual( Stem("hålen"), "hål");});
test("håligt -> hål", function() {deepEqual( Stem("håligt"), "hål");});
test("håll -> håll", function() {deepEqual( Stem("håll"), "håll");});
test("hålla -> håll", function() {deepEqual( Stem("hålla"), "håll");});
test("hållande -> håll", function() {deepEqual( Stem("hållande"), "håll");});
test("hållas -> håll", function() {deepEqual( Stem("hållas"), "håll");});
test("hållbart -> hållbart", function() {deepEqual( Stem("hållbart"), "hållbart");});
test("hålle -> håll", function() {deepEqual( Stem("hålle"), "håll");});
test("håller -> håll", function() {deepEqual( Stem("håller"), "håll");});
test("hålles -> håll", function() {deepEqual( Stem("hålles"), "håll");});
test("hållet -> hållet", function() {deepEqual( Stem("hållet"), "hållet");});
test("hållhakar -> hållhak", function() {deepEqual( Stem("hållhakar"), "hållhak");});
test("hållit -> hållit", function() {deepEqual( Stem("hållit"), "hållit");});
test("hållning -> hållning", function() {deepEqual( Stem("hållning"), "hållning");});
test("hållningen -> hållning", function() {deepEqual( Stem("hållningen"), "hållning");});
test("hålor -> hål", function() {deepEqual( Stem("hålor"), "hål");});
test("hån -> hån", function() {deepEqual( Stem("hån"), "hån");});
test("hånade -> hån", function() {deepEqual( Stem("hånade"), "hån");});
test("hånande -> hån", function() {deepEqual( Stem("hånande"), "hån");});
test("hånfull -> hånfull", function() {deepEqual( Stem("hånfull"), "hånfull");});
test("hånfulla -> hånfull", function() {deepEqual( Stem("hånfulla"), "hånfull");});
test("hånfullt -> hånfull", function() {deepEqual( Stem("hånfullt"), "hånfull");});
test("hångrinande -> hångrin", function() {deepEqual( Stem("hångrinande"), "hångrin");});
test("hånle -> hånl", function() {deepEqual( Stem("hånle"), "hånl");});
test("hånlog -> hånlog", function() {deepEqual( Stem("hånlog"), "hånlog");});
test("håns -> hån", function() {deepEqual( Stem("håns"), "hån");});
test("hånskratt -> hånskrat", function() {deepEqual( Stem("hånskratt"), "hånskrat");});
test("hånskrattade -> hånskrat", function() {deepEqual( Stem("hånskrattade"), "hånskrat");});
test("hår -> hår", function() {deepEqual( Stem("hår"), "hår");});
test("hård -> hård", function() {deepEqual( Stem("hård"), "hård");});
test("hårda -> hård", function() {deepEqual( Stem("hårda"), "hård");});
test("hårdare -> hård", function() {deepEqual( Stem("hårdare"), "hård");});
test("hårdhet -> hård", function() {deepEqual( Stem("hårdhet"), "hård");});
test("hårdna -> hårdn", function() {deepEqual( Stem("hårdna"), "hårdn");});
test("hårdnackenhet -> hårdnacken", function() {deepEqual( Stem("hårdnackenhet"), "hårdnacken");});
test("hårdt -> hård", function() {deepEqual( Stem("hårdt"), "hård");});
test("håret -> håret", function() {deepEqual( Stem("håret"), "håret");});
test("hårets -> håret", function() {deepEqual( Stem("hårets"), "håret");});
test("hårfläta -> hårflät", function() {deepEqual( Stem("hårfläta"), "hårflät");});
test("hårfästet -> hårfästet", function() {deepEqual( Stem("hårfästet"), "hårfästet");});
test("hårig -> hår", function() {deepEqual( Stem("hårig"), "hår");});
test("håriga -> hår", function() {deepEqual( Stem("håriga"), "hår");});
test("hårskrud -> hårskrud", function() {deepEqual( Stem("hårskrud"), "hårskrud");});
test("hårslingor -> hårsling", function() {deepEqual( Stem("hårslingor"), "hårsling");});
test("hårslingorna -> hårsling", function() {deepEqual( Stem("hårslingorna"), "hårsling");});
test("hårsmån -> hårsmån", function() {deepEqual( Stem("hårsmån"), "hårsmån");});
test("hårstrå -> hårstrå", function() {deepEqual( Stem("hårstrå"), "hårstrå");});
test("hårt -> hårt", function() {deepEqual( Stem("hårt"), "hårt");});
test("hårtestar -> hårtest", function() {deepEqual( Stem("hårtestar"), "hårtest");});
test("hö -> hö", function() {deepEqual( Stem("hö"), "hö");});
test("höflig -> höf", function() {deepEqual( Stem("höflig"), "höf");});
test("höfliga -> höf", function() {deepEqual( Stem("höfliga"), "höf");});
test("höflighet -> höf", function() {deepEqual( Stem("höflighet"), "höf");});
test("höfligheten -> höf", function() {deepEqual( Stem("höfligheten"), "höf");});
test("höfligt -> höf", function() {deepEqual( Stem("höfligt"), "höf");});
test("höftbred -> höftbred", function() {deepEqual( Stem("höftbred"), "höftbred");});
test("höfter -> höft", function() {deepEqual( Stem("höfter"), "höft");});
test("höfterna -> höft", function() {deepEqual( Stem("höfterna"), "höft");});
test("höfternas -> höft", function() {deepEqual( Stem("höfternas"), "höft");});
test("höftlinjer -> höftlinj", function() {deepEqual( Stem("höftlinjer"), "höftlinj");});
test("höfvan -> höfvan", function() {deepEqual( Stem("höfvan"), "höfvan");});
test("hög -> hög", function() {deepEqual( Stem("hög"), "hög");});
test("höga -> hög", function() {deepEqual( Stem("höga"), "hög");});
test("högadlig -> högad", function() {deepEqual( Stem("högadlig"), "högad");});
test("högaktade -> högak", function() {deepEqual( Stem("högaktade"), "högak");});
test("högaktar -> högak", function() {deepEqual( Stem("högaktar"), "högak");});
test("högar -> hög", function() {deepEqual( Stem("högar"), "hög");});
test("högas -> hög", function() {deepEqual( Stem("högas"), "hög");});
test("högblå -> högblå", function() {deepEqual( Stem("högblå"), "högblå");});
test("högburen -> högbur", function() {deepEqual( Stem("högburen"), "högbur");});
test("högdragen -> högdrag", function() {deepEqual( Stem("högdragen"), "högdrag");});
test("högdraget -> högdraget", function() {deepEqual( Stem("högdraget"), "högdraget");});
test("höge -> hög", function() {deepEqual( Stem("höge"), "hög");});
test("högeligen -> höge", function() {deepEqual( Stem("högeligen"), "höge");});
test("högen -> hög", function() {deepEqual( Stem("högen"), "hög");});
test("höger -> hög", function() {deepEqual( Stem("höger"), "hög");});
test("högfärd -> högfärd", function() {deepEqual( Stem("högfärd"), "högfärd");});
test("högfärdig -> högfärd", function() {deepEqual( Stem("högfärdig"), "högfärd");});
test("högfärdiga -> högfärd", function() {deepEqual( Stem("högfärdiga"), "högfärd");});
test("högfärdigt -> högfärd", function() {deepEqual( Stem("högfärdigt"), "högfärd");});
test("högförnäma -> högförnäm", function() {deepEqual( Stem("högförnäma"), "högförnäm");});
test("högförnäme -> högförnäm", function() {deepEqual( Stem("högförnäme"), "högförnäm");});
test("högförnämt -> högförnämt", function() {deepEqual( Stem("högförnämt"), "högförnämt");});
test("högg -> högg", function() {deepEqual( Stem("högg"), "högg");});
test("höggrevlig -> höggrev", function() {deepEqual( Stem("höggrevlig"), "höggrev");});
test("högklackade -> högklack", function() {deepEqual( Stem("högklackade"), "högklack");});
test("högljudda -> högljud", function() {deepEqual( Stem("högljudda"), "högljud");});
test("högljuddare -> högljud", function() {deepEqual( Stem("högljuddare"), "högljud");});
test("högljudt -> högljud", function() {deepEqual( Stem("högljudt"), "högljud");});
test("högljutt -> högljut", function() {deepEqual( Stem("högljutt"), "högljut");});
test("högmo -> högmo", function() {deepEqual( Stem("högmo"), "högmo");});
test("högmod -> högmod", function() {deepEqual( Stem("högmod"), "högmod");});
test("högmodet -> högmodet", function() {deepEqual( Stem("högmodet"), "högmodet");});
test("högmodets -> högmodet", function() {deepEqual( Stem("högmodets"), "högmodet");});
test("högmodig -> högmod", function() {deepEqual( Stem("högmodig"), "högmod");});
test("högmodiga -> högmod", function() {deepEqual( Stem("högmodiga"), "högmod");});
test("högmodige -> högmod", function() {deepEqual( Stem("högmodige"), "högmod");});
test("högmods -> högmod", function() {deepEqual( Stem("högmods"), "högmod");});
test("högmodsandan -> högmodsandan", function() {deepEqual( Stem("högmodsandan"), "högmodsandan");});
test("högra -> högr", function() {deepEqual( Stem("högra"), "högr");});
test("högre -> högr", function() {deepEqual( Stem("högre"), "högr");});
test("högres -> högr", function() {deepEqual( Stem("högres"), "högr");});
test("högryggade -> högrygg", function() {deepEqual( Stem("högryggade"), "högrygg");});
test("högröda -> högröd", function() {deepEqual( Stem("högröda"), "högröd");});
test("högrödaste -> högröd", function() {deepEqual( Stem("högrödaste"), "högröd");});
test("högsint -> högsint", function() {deepEqual( Stem("högsint"), "högsint");});
test("högskaf -> högskaf", function() {deepEqual( Stem("högskaf"), "högskaf");});
test("högskolan -> högskolan", function() {deepEqual( Stem("högskolan"), "högskolan");});
test("högskotan -> högskotan", function() {deepEqual( Stem("högskotan"), "högskotan");});
test("högsommaren -> högsomm", function() {deepEqual( Stem("högsommaren"), "högsomm");});
test("högst -> högst", function() {deepEqual( Stem("högst"), "högst");});
test("högsta -> högst", function() {deepEqual( Stem("högsta"), "högst");});
test("högste -> högst", function() {deepEqual( Stem("högste"), "högst");});
test("högstes -> högst", function() {deepEqual( Stem("högstes"), "högst");});
test("högsträva -> högsträv", function() {deepEqual( Stem("högsträva"), "högsträv");});
test("högsällt -> högsällt", function() {deepEqual( Stem("högsällt"), "högsällt");});
test("högt -> högt", function() {deepEqual( Stem("högt"), "högt");});
test("högtid -> högtid", function() {deepEqual( Stem("högtid"), "högtid");});
test("högtiden -> högtid", function() {deepEqual( Stem("högtiden"), "högtid");});
test("högtidlig -> högtid", function() {deepEqual( Stem("högtidlig"), "högtid");});
test("högtidliga -> högtid", function() {deepEqual( Stem("högtidliga"), "högtid");});
test("högtidlighet -> högtid", function() {deepEqual( Stem("högtidlighet"), "högtid");});
test("högtidligheten -> högtid", function() {deepEqual( Stem("högtidligheten"), "högtid");});
test("högtidligt -> högtid", function() {deepEqual( Stem("högtidligt"), "högtid");});
test("högtidsafton -> högtidsafton", function() {deepEqual( Stem("högtidsafton"), "högtidsafton");});
test("högtidsdagen -> högtidsdag", function() {deepEqual( Stem("högtidsdagen"), "högtidsdag");});
test("högtidsdräkten -> högtidsdräk", function() {deepEqual( Stem("högtidsdräkten"), "högtidsdräk");});
test("högtidsstunder -> högtidsstund", function() {deepEqual( Stem("högtidsstunder"), "högtidsstund");});
test("högtidsstämt -> högtidsstämt", function() {deepEqual( Stem("högtidsstämt"), "högtidsstämt");});
test("högtidstimmen -> högtidstimm", function() {deepEqual( Stem("högtidstimmen"), "högtidstimm");});
test("högvardiga -> högvard", function() {deepEqual( Stem("högvardiga"), "högvard");});
test("högvälborne -> högvälborn", function() {deepEqual( Stem("högvälborne"), "högvälborn");});
test("högväxt -> högväxt", function() {deepEqual( Stem("högväxt"), "högväxt");});
test("högväxta -> högväxt", function() {deepEqual( Stem("högväxta"), "högväxt");});
test("högönskliga -> högönsk", function() {deepEqual( Stem("högönskliga"), "högönsk");});
test("höj -> höj", function() {deepEqual( Stem("höj"), "höj");});
test("höja -> höj", function() {deepEqual( Stem("höja"), "höj");});
test("höjande -> höj", function() {deepEqual( Stem("höjande"), "höj");});
test("höjd -> höjd", function() {deepEqual( Stem("höjd"), "höjd");});
test("höjda -> höjd", function() {deepEqual( Stem("höjda"), "höjd");});
test("höjde -> höjd", function() {deepEqual( Stem("höjde"), "höjd");});
test("höjden -> höjd", function() {deepEqual( Stem("höjden"), "höjd");});
test("höjder -> höjd", function() {deepEqual( Stem("höjder"), "höjd");});
test("höjderna -> höjd", function() {deepEqual( Stem("höjderna"), "höjd");});
test("höjdes -> höjd", function() {deepEqual( Stem("höjdes"), "höjd");});
test("höjer -> höj", function() {deepEqual( Stem("höjer"), "höj");});
test("höjt -> höjt", function() {deepEqual( Stem("höjt"), "höjt");});
test("hökar -> hök", function() {deepEqual( Stem("hökar"), "hök");});
test("hökarbod -> hökarbod", function() {deepEqual( Stem("hökarbod"), "hökarbod");});
test("hökarboden -> hökarbod", function() {deepEqual( Stem("hökarboden"), "hökarbod");});
test("hökaredisk -> hökaredisk", function() {deepEqual( Stem("hökaredisk"), "hökaredisk");});
test("hökarekandidaten -> hökarekandidat", function() {deepEqual( Stem("hökarekandidaten"), "hökarekandidat");});
test("hökarens -> hök", function() {deepEqual( Stem("hökarens"), "hök");});
test("höken -> hök", function() {deepEqual( Stem("höken"), "hök");});
test("hökens -> hök", function() {deepEqual( Stem("hökens"), "hök");});
test("hökerimedhjälparen -> hökerimedhjälp", function() {deepEqual( Stem("hökerimedhjälparen"), "hökerimedhjälp");});
test("hölja -> hölj", function() {deepEqual( Stem("hölja"), "hölj");});
test("höljande -> hölj", function() {deepEqual( Stem("höljande"), "hölj");});
test("hölje -> hölj", function() {deepEqual( Stem("hölje"), "hölj");});
test("höll -> höll", function() {deepEqual( Stem("höll"), "höll");});
test("hölle -> höll", function() {deepEqual( Stem("hölle"), "höll");});
test("höllo -> höllo", function() {deepEqual( Stem("höllo"), "höllo");});
test("höllos -> höllo", function() {deepEqual( Stem("höllos"), "höllo");});
test("hölls -> höll", function() {deepEqual( Stem("hölls"), "höll");});
test("höna -> hön", function() {deepEqual( Stem("höna"), "hön");});
test("hönan -> hönan", function() {deepEqual( Stem("hönan"), "hönan");});
test("höns -> hön", function() {deepEqual( Stem("höns"), "hön");});
test("hönsflickan -> hönsflickan", function() {deepEqual( Stem("hönsflickan"), "hönsflickan");});
test("hönsgarden -> hönsgard", function() {deepEqual( Stem("hönsgarden"), "hönsgard");});
test("hönsgården -> hönsgård", function() {deepEqual( Stem("hönsgården"), "hönsgård");});
test("hör -> hör", function() {deepEqual( Stem("hör"), "hör");});
test("höra -> hör", function() {deepEqual( Stem("höra"), "hör");});
test("hörande -> hör", function() {deepEqual( Stem("hörande"), "hör");});
test("höras -> hör", function() {deepEqual( Stem("höras"), "hör");});
test("hörbart -> hörbart", function() {deepEqual( Stem("hörbart"), "hörbart");});
test("hörd -> hörd", function() {deepEqual( Stem("hörd"), "hörd");});
test("hörda -> hörd", function() {deepEqual( Stem("hörda"), "hörd");});
test("hördc -> hördc", function() {deepEqual( Stem("hördc"), "hördc");});
test("hörde -> hörd", function() {deepEqual( Stem("hörde"), "hörd");});
test("hördes -> hörd", function() {deepEqual( Stem("hördes"), "hörd");});
test("hören -> hör", function() {deepEqual( Stem("hören"), "hör");});
test("höres -> hör", function() {deepEqual( Stem("höres"), "hör");});
test("hörhåll -> hörhåll", function() {deepEqual( Stem("hörhåll"), "hörhåll");});
test("hörlur -> hörlur", function() {deepEqual( Stem("hörlur"), "hörlur");});
test("hörn -> hörn", function() {deepEqual( Stem("hörn"), "hörn");});
test("hörnen -> hörn", function() {deepEqual( Stem("hörnen"), "hörn");});
test("hörnet -> hörnet", function() {deepEqual( Stem("hörnet"), "hörnet");});
test("hörnkammaren -> hörnkamm", function() {deepEqual( Stem("hörnkammaren"), "hörnkamm");});
test("hörnkammarn -> hörnkammarn", function() {deepEqual( Stem("hörnkammarn"), "hörnkammarn");});
test("hörnrum -> hörnrum", function() {deepEqual( Stem("hörnrum"), "hörnrum");});
test("hörnrummet -> hörnrummet", function() {deepEqual( Stem("hörnrummet"), "hörnrummet");});
test("hörröret -> hörröret", function() {deepEqual( Stem("hörröret"), "hörröret");});
test("hörs -> hör", function() {deepEqual( Stem("hörs"), "hör");});
test("hörsel -> hörsel", function() {deepEqual( Stem("hörsel"), "hörsel");});
test("hört -> hört", function() {deepEqual( Stem("hört"), "hört");});
test("höst -> höst", function() {deepEqual( Stem("höst"), "höst");});
test("höstarna -> höst", function() {deepEqual( Stem("höstarna"), "höst");});
test("höstbrasan -> höstbrasan", function() {deepEqual( Stem("höstbrasan"), "höstbrasan");});
test("hösten -> höst", function() {deepEqual( Stem("hösten"), "höst");});
test("höstens -> höst", function() {deepEqual( Stem("höstens"), "höst");});
test("höstfest -> höstfest", function() {deepEqual( Stem("höstfest"), "höstfest");});
test("hösthorn -> hösthorn", function() {deepEqual( Stem("hösthorn"), "hösthorn");});
test("hösthornets -> hösthornet", function() {deepEqual( Stem("hösthornets"), "hösthornet");});
test("höstkväll -> höstkväll", function() {deepEqual( Stem("höstkväll"), "höstkväll");});
test("höstkvällars -> höstkvällar", function() {deepEqual( Stem("höstkvällars"), "höstkvällar");});
test("höstliga -> höst", function() {deepEqual( Stem("höstliga"), "höst");});
test("höstligt -> höst", function() {deepEqual( Stem("höstligt"), "höst");});
test("höstluften -> höstluft", function() {deepEqual( Stem("höstluften"), "höstluft");});
test("höstlöv -> höstlöv", function() {deepEqual( Stem("höstlöv"), "höstlöv");});
test("höstmoln -> höstmoln", function() {deepEqual( Stem("höstmoln"), "höstmoln");});
test("höstmolnen -> höstmoln", function() {deepEqual( Stem("höstmolnen"), "höstmoln");});
test("höstnattens -> höstnat", function() {deepEqual( Stem("höstnattens"), "höstnat");});
test("höstpoet -> höstpoet", function() {deepEqual( Stem("höstpoet"), "höstpoet");});
test("höstpsalm -> höstpsalm", function() {deepEqual( Stem("höstpsalm"), "höstpsalm");});
test("höstregn -> höstregn", function() {deepEqual( Stem("höstregn"), "höstregn");});
test("höstregnet -> höstregnet", function() {deepEqual( Stem("höstregnet"), "höstregnet");});
test("höststormar -> höststorm", function() {deepEqual( Stem("höststormar"), "höststorm");});
test("höststormarne -> höststorm", function() {deepEqual( Stem("höststormarne"), "höststorm");});
test("höststormen -> höststorm", function() {deepEqual( Stem("höststormen"), "höststorm");});
test("höstutsädet -> höstutsädet", function() {deepEqual( Stem("höstutsädet"), "höstutsädet");});
test("höstvind -> höstvind", function() {deepEqual( Stem("höstvind"), "höstvind");});
test("höstvioler -> höstviol", function() {deepEqual( Stem("höstvioler"), "höstviol");});
test("höstvädrens -> höstvädr", function() {deepEqual( Stem("höstvädrens"), "höstvädr");});
test("hötorget -> hötorget", function() {deepEqual( Stem("hötorget"), "hötorget");});
test("hötte -> hött", function() {deepEqual( Stem("hötte"), "hött");});
test("hövdingen -> hövding", function() {deepEqual( Stem("hövdingen"), "hövding");});
test("höver -> höv", function() {deepEqual( Stem("höver"), "höv");});
test("höves -> höv", function() {deepEqual( Stem("höves"), "höv");});
test("höviskt -> hövisk", function() {deepEqual( Stem("höviskt"), "hövisk");});
test("hövlig -> höv", function() {deepEqual( Stem("hövlig"), "höv");});
test("hövliga -> höv", function() {deepEqual( Stem("hövliga"), "höv");});
test("hövligare -> höv", function() {deepEqual( Stem("hövligare"), "höv");});
test("hövlighet -> höv", function() {deepEqual( Stem("hövlighet"), "höv");});
test("hövligt -> höv", function() {deepEqual( Stem("hövligt"), "höv");});
test("i -> i", function() {deepEqual( Stem("i"), "i");});
test("ia -> ia", function() {deepEqual( Stem("ia"), "ia");});
test("iag -> iag", function() {deepEqual( Stem("iag"), "iag");});
test("iaktta -> iakt", function() {deepEqual( Stem("iaktta"), "iakt");});
test("iakttaga -> iakttag", function() {deepEqual( Stem("iakttaga"), "iakttag");});
test("iakttagande -> iakttag", function() {deepEqual( Stem("iakttagande"), "iakttag");});
test("iakttagas -> iakttag", function() {deepEqual( Stem("iakttagas"), "iakttag");});
test("iakttagit -> iakttagit", function() {deepEqual( Stem("iakttagit"), "iakttagit");});
test("iakttog -> iakttog", function() {deepEqual( Stem("iakttog"), "iakttog");});
test("iakttogo -> iakttogo", function() {deepEqual( Stem("iakttogo"), "iakttogo");});
test("iangt -> iang", function() {deepEqual( Stem("iangt"), "iang");});
test("ibland -> ibland", function() {deepEqual( Stem("ibland"), "ibland");});
test("iblandvaggade -> iblandvagg", function() {deepEqual( Stem("iblandvaggade"), "iblandvagg");});
test("ibsenpjäs -> ibsenpjäs", function() {deepEqual( Stem("ibsenpjäs"), "ibsenpjäs");});
test("icautschukdocka -> icautschukdock", function() {deepEqual( Stem("icautschukdocka"), "icautschukdock");});
test("ick -> ick", function() {deepEqual( Stem("ick"), "ick");});
test("icka -> ick", function() {deepEqual( Stem("icka"), "ick");});
test("ickan -> ickan", function() {deepEqual( Stem("ickan"), "ickan");});
test("ickc -> ickc", function() {deepEqual( Stem("ickc"), "ickc");});
test("icke -> ick", function() {deepEqual( Stem("icke"), "ick");});
test("ickeömt -> ickeömt", function() {deepEqual( Stem("ickeömt"), "ickeömt");});
test("icn -> icn", function() {deepEqual( Stem("icn"), "icn");});
test("icna -> icn", function() {deepEqual( Stem("icna"), "icn");});
test("idag -> idag", function() {deepEqual( Stem("idag"), "idag");});
test("ide -> ide", function() {deepEqual( Stem("ide"), "ide");});
test("idealiska -> idealisk", function() {deepEqual( Stem("idealiska"), "idealisk");});
test("idealitet -> idealitet", function() {deepEqual( Stem("idealitet"), "idealitet");});
test("ideella -> ideell", function() {deepEqual( Stem("ideella"), "ideell");});
test("ideellt -> ideellt", function() {deepEqual( Stem("ideellt"), "ideellt");});
test("ideen -> ide", function() {deepEqual( Stem("ideen"), "ide");});
test("ideer -> ide", function() {deepEqual( Stem("ideer"), "ide");});
test("idel -> idel", function() {deepEqual( Stem("idel"), "idel");});
test("ideliga -> ide", function() {deepEqual( Stem("ideliga"), "ide");});
test("ideligen -> ide", function() {deepEqual( Stem("ideligen"), "ide");});
test("ideligt -> ide", function() {deepEqual( Stem("ideligt"), "ide");});
test("iden -> iden", function() {deepEqual( Stem("iden"), "iden");});
test("identifiera -> identifier", function() {deepEqual( Stem("identifiera"), "identifier");});
test("idio -> idio", function() {deepEqual( Stem("idio"), "idio");});
test("idiot -> idiot", function() {deepEqual( Stem("idiot"), "idiot");});
test("idioten -> idiot", function() {deepEqual( Stem("idioten"), "idiot");});
test("idiotförtrytelse -> idiotförtryt", function() {deepEqual( Stem("idiotförtrytelse"), "idiotförtryt");});
test("idiotiskt -> idiotisk", function() {deepEqual( Stem("idiotiskt"), "idiotisk");});
test("idiotmoral -> idiotmoral", function() {deepEqual( Stem("idiotmoral"), "idiotmoral");});
test("idiots -> idiot", function() {deepEqual( Stem("idiots"), "idiot");});
test("idje -> idj", function() {deepEqual( Stem("idje"), "idj");});
test("idkat -> idk", function() {deepEqual( Stem("idkat"), "idk");});
test("idoghet -> idog", function() {deepEqual( Stem("idoghet"), "idog");});
test("idol -> idol", function() {deepEqual( Stem("idol"), "idol");});
test("idr -> idr", function() {deepEqual( Stem("idr"), "idr");});
test("idrottens -> idrot", function() {deepEqual( Stem("idrottens"), "idrot");});
test("idrottsprestation -> idrottsprestation", function() {deepEqual( Stem("idrottsprestation"), "idrottsprestation");});
test("idyllen -> idyll", function() {deepEqual( Stem("idyllen"), "idyll");});
test("idylliska -> idyllisk", function() {deepEqual( Stem("idylliska"), "idyllisk");});
test("idylliskt -> idyllisk", function() {deepEqual( Stem("idylliskt"), "idyllisk");});
test("ied -> ied", function() {deepEqual( Stem("ied"), "ied");});
test("ieende -> ieend", function() {deepEqual( Stem("ieende"), "ieend");});
test("ieke -> iek", function() {deepEqual( Stem("ieke"), "iek");});
test("if -> if", function() {deepEqual( Stem("if"), "if");});
test("ifall -> ifall", function() {deepEqual( Stem("ifall"), "ifall");});
test("ifran -> ifran", function() {deepEqual( Stem("ifran"), "ifran");});
test("ifred -> ifred", function() {deepEqual( Stem("ifred"), "ifred");});
test("ifrigt -> ifr", function() {deepEqual( Stem("ifrigt"), "ifr");});
test("ifråga -> ifråg", function() {deepEqual( Stem("ifråga"), "ifråg");});
test("ifrågavarande -> ifrågavar", function() {deepEqual( Stem("ifrågavarande"), "ifrågavar");});
test("ifråm -> ifråm", function() {deepEqual( Stem("ifråm"), "ifråm");});
test("ifrån -> ifrån", function() {deepEqual( Stem("ifrån"), "ifrån");});
test("ifte -> ift", function() {deepEqual( Stem("ifte"), "ift");});
test("ifver -> ifv", function() {deepEqual( Stem("ifver"), "ifv");});
test("ifylla -> ifyll", function() {deepEqual( Stem("ifylla"), "ifyll");});
test("iföljd -> iföljd", function() {deepEqual( Stem("iföljd"), "iföljd");});
test("iförd -> iförd", function() {deepEqual( Stem("iförd"), "iförd");});
test("ig -> ig", function() {deepEqual( Stem("ig"), "ig");});
test("igen -> igen", function() {deepEqual( Stem("igen"), "igen");});
test("igenkastad -> igenkast", function() {deepEqual( Stem("igenkastad"), "igenkast");});
test("igenkände -> igenkänd", function() {deepEqual( Stem("igenkände"), "igenkänd");});
test("igenkändes -> igenkänd", function() {deepEqual( Stem("igenkändes"), "igenkänd");});
test("igenkänna -> igenkän", function() {deepEqual( Stem("igenkänna"), "igenkän");});
test("igenkännas -> igenkän", function() {deepEqual( Stem("igenkännas"), "igenkän");});
test("igenkänt -> igenkänt", function() {deepEqual( Stem("igenkänt"), "igenkänt");});
test("igenlöst -> igenlös", function() {deepEqual( Stem("igenlöst"), "igenlös");});
test("igenom -> igenom", function() {deepEqual( Stem("igenom"), "igenom");});
test("igenslogs -> igenslog", function() {deepEqual( Stem("igenslogs"), "igenslog");});
test("ignorera -> ignorer", function() {deepEqual( Stem("ignorera"), "ignorer");});
test("igot -> igot", function() {deepEqual( Stem("igot"), "igot");});
test("igt -> igt", function() {deepEqual( Stem("igt"), "igt");});
test("igår -> igår", function() {deepEqual( Stem("igår"), "igår");});
test("ihjäl -> ihjäl", function() {deepEqual( Stem("ihjäl"), "ihjäl");});
test("ihop -> ihop", function() {deepEqual( Stem("ihop"), "ihop");});
test("ihopfästning -> ihopfästning", function() {deepEqual( Stem("ihopfästning"), "ihopfästning");});
test("ihopfört -> ihopfört", function() {deepEqual( Stem("ihopfört"), "ihopfört");});
test("ihopknogade -> ihopknog", function() {deepEqual( Stem("ihopknogade"), "ihopknog");});
test("ihopkrupen -> ihopkrup", function() {deepEqual( Stem("ihopkrupen"), "ihopkrup");});
test("ihoplappade -> ihoplapp", function() {deepEqual( Stem("ihoplappade"), "ihoplapp");});
test("ihopsmida -> ihopsmid", function() {deepEqual( Stem("ihopsmida"), "ihopsmid");});
test("ihopvek -> ihopvek", function() {deepEqual( Stem("ihopvek"), "ihopvek");});
test("ihärdig -> ihärd", function() {deepEqual( Stem("ihärdig"), "ihärd");});
test("ihärdiga -> ihärd", function() {deepEqual( Stem("ihärdiga"), "ihärd");});
test("ihärdige -> ihärd", function() {deepEqual( Stem("ihärdige"), "ihärd");});
test("ihärdighet -> ihärd", function() {deepEqual( Stem("ihärdighet"), "ihärd");});
test("ihåg -> ihåg", function() {deepEqual( Stem("ihåg"), "ihåg");});
test("ihågkom -> ihågkom", function() {deepEqual( Stem("ihågkom"), "ihågkom");});
test("ihågkommen -> ihågkomm", function() {deepEqual( Stem("ihågkommen"), "ihågkomm");});
test("ihågkommes -> ihågkomm", function() {deepEqual( Stem("ihågkommes"), "ihågkomm");});
test("ihågkomna -> ihågkomn", function() {deepEqual( Stem("ihågkomna"), "ihågkomn");});
test("ihålig -> ihå", function() {deepEqual( Stem("ihålig"), "ihå");});
test("ihåliga -> ihå", function() {deepEqual( Stem("ihåliga"), "ihå");});
test("ihåligt -> ihå", function() {deepEqual( Stem("ihåligt"), "ihå");});
test("ihållande -> ihåll", function() {deepEqual( Stem("ihållande"), "ihåll");});
test("ii -> ii", function() {deepEqual( Stem("ii"), "ii");});
test("iian -> iian", function() {deepEqual( Stem("iian"), "iian");});
test("iianske -> iiansk", function() {deepEqual( Stem("iianske"), "iiansk");});
test("iii -> iii", function() {deepEqual( Stem("iii"), "iii");});
test("iion -> iion", function() {deepEqual( Stem("iion"), "iion");});
test("iit -> iit", function() {deepEqual( Stem("iit"), "iit");});
test("iittpå -> iittpå", function() {deepEqual( Stem("iittpå"), "iittpå");});
test("iiv -> iiv", function() {deepEqual( Stem("iiv"), "iiv");});
test("iiå -> iiå", function() {deepEqual( Stem("iiå"), "iiå");});
test("ijml -> ijml", function() {deepEqual( Stem("ijml"), "ijml");});
test("ijud -> ijud", function() {deepEqual( Stem("ijud"), "ijud");});
test("ijuda -> ijud", function() {deepEqual( Stem("ijuda"), "ijud");});
test("ijuder -> ijud", function() {deepEqual( Stem("ijuder"), "ijud");});
test("ijudet -> ijudet", function() {deepEqual( Stem("ijudet"), "ijudet");});
test("ijum -> ijum", function() {deepEqual( Stem("ijum"), "ijum");});
test("ijumma -> ijumm", function() {deepEqual( Stem("ijumma"), "ijumm");});
test("ijumt -> ijumt", function() {deepEqual( Stem("ijumt"), "ijumt");});
test("ijungande -> ijung", function() {deepEqual( Stem("ijungande"), "ijung");});
test("ijus -> ijus", function() {deepEqual( Stem("ijus"), "ijus");});
test("ijusa -> ijus", function() {deepEqual( Stem("ijusa"), "ijus");});
test("ijusare -> ijus", function() {deepEqual( Stem("ijusare"), "ijus");});
test("ijusblatt -> ijusblat", function() {deepEqual( Stem("ijusblatt"), "ijusblat");});
test("ijusblå -> ijusblå", function() {deepEqual( Stem("ijusblå"), "ijusblå");});
test("ijusboll -> ijusboll", function() {deepEqual( Stem("ijusboll"), "ijusboll");});
test("ijusbruna -> ijusbrun", function() {deepEqual( Stem("ijusbruna"), "ijusbrun");});
test("ijuset -> ijuset", function() {deepEqual( Stem("ijuset"), "ijuset");});
test("ijusfläckarna -> ijusfläck", function() {deepEqual( Stem("ijusfläckarna"), "ijusfläck");});
test("ijushuvudet -> ijushuvudet", function() {deepEqual( Stem("ijushuvudet"), "ijushuvudet");});
test("ijussken -> ijussk", function() {deepEqual( Stem("ijussken"), "ijussk");});
test("ijusskenet -> ijusskenet", function() {deepEqual( Stem("ijusskenet"), "ijusskenet");});
test("ijusstrimma -> ijusstrimm", function() {deepEqual( Stem("ijusstrimma"), "ijusstrimm");});
test("ijust -> ijust", function() {deepEqual( Stem("ijust"), "ijust");});
test("ijuv -> ijuv", function() {deepEqual( Stem("ijuv"), "ijuv");});
test("ijuva -> ijuv", function() {deepEqual( Stem("ijuva"), "ijuv");});
test("ijuvlig -> ijuv", function() {deepEqual( Stem("ijuvlig"), "ijuv");});
test("ijuvligt -> ijuv", function() {deepEqual( Stem("ijuvligt"), "ijuv");});
test("ijuvt -> ijuvt", function() {deepEqual( Stem("ijuvt"), "ijuvt");});
test("ijöd -> ijöd", function() {deepEqual( Stem("ijöd"), "ijöd");});
test("ijödo -> ijödo", function() {deepEqual( Stem("ijödo"), "ijödo");});
test("ijög -> ijög", function() {deepEqual( Stem("ijög"), "ijög");});
test("iklädde -> ikläd", function() {deepEqual( Stem("iklädde"), "ikläd");});
test("iklädt -> ikläd", function() {deepEqual( Stem("iklädt"), "ikläd");});
test("iklätt -> iklät", function() {deepEqual( Stem("iklätt"), "iklät");});
test("ikull -> ikull", function() {deepEqual( Stem("ikull"), "ikull");});
test("ikämlas -> ikäml", function() {deepEqual( Stem("ikämlas"), "ikäml");});
test("il -> il", function() {deepEqual( Stem("il"), "il");});
test("ila -> ila", function() {deepEqual( Stem("ila"), "ila");});
test("ilade -> ilad", function() {deepEqual( Stem("ilade"), "ilad");});
test("ilan -> ilan", function() {deepEqual( Stem("ilan"), "ilan");});
test("ilande -> iland", function() {deepEqual( Stem("ilande"), "iland");});
test("ilar -> ilar", function() {deepEqual( Stem("ilar"), "ilar");});
test("ilat -> ilat", function() {deepEqual( Stem("ilat"), "ilat");});
test("ilbud -> ilbud", function() {deepEqual( Stem("ilbud"), "ilbud");});
test("ildhets -> ildhet", function() {deepEqual( Stem("ildhets"), "ildhet");});
test("ilennes -> ilen", function() {deepEqual( Stem("ilennes"), "ilen");});
test("ill -> ill", function() {deepEqual( Stem("ill"), "ill");});
test("illa -> ill", function() {deepEqual( Stem("illa"), "ill");});
test("illamående -> illamåend", function() {deepEqual( Stem("illamående"), "illamåend");});
test("illfundiga -> illfund", function() {deepEqual( Stem("illfundiga"), "illfund");});
test("illistiga -> illist", function() {deepEqual( Stem("illistiga"), "illist");});
test("illsskolan -> illsskolan", function() {deepEqual( Stem("illsskolan"), "illsskolan");});
test("illusion -> illusion", function() {deepEqual( Stem("illusion"), "illusion");});
test("illusionen -> illusion", function() {deepEqual( Stem("illusionen"), "illusion");});
test("illusioner -> illusion", function() {deepEqual( Stem("illusioner"), "illusion");});
test("illusionsfria -> illusionsfri", function() {deepEqual( Stem("illusionsfria"), "illusionsfri");});
test("illustrationer -> illustration", function() {deepEqual( Stem("illustrationer"), "illustration");});
test("illustrerad -> illustrer", function() {deepEqual( Stem("illustrerad"), "illustrer");});
test("illvilliga -> illvil", function() {deepEqual( Stem("illvilliga"), "illvil");});
test("ilman -> ilman", function() {deepEqual( Stem("ilman"), "ilman");});
test("ilning -> ilning", function() {deepEqual( Stem("ilning"), "ilning");});
test("ilon -> ilon", function() {deepEqual( Stem("ilon"), "ilon");});
test("ilska -> ilsk", function() {deepEqual( Stem("ilska"), "ilsk");});
test("ilsken -> ilsk", function() {deepEqual( Stem("ilsken"), "ilsk");});
test("ilsket -> ilsket", function() {deepEqual( Stem("ilsket"), "ilsket");});
test("ilskna -> ilskn", function() {deepEqual( Stem("ilskna"), "ilskn");});
test("ilsnabba -> ilsnabb", function() {deepEqual( Stem("ilsnabba"), "ilsnabb");});
test("ilyttade -> ilyt", function() {deepEqual( Stem("ilyttade"), "ilyt");});
test("imma -> imm", function() {deepEqual( Stem("imma"), "imm");});
test("imman -> imman", function() {deepEqual( Stem("imman"), "imman");});
test("immanuel -> immanuel", function() {deepEqual( Stem("immanuel"), "immanuel");});
test("immaterielt -> immaterielt", function() {deepEqual( Stem("immaterielt"), "immaterielt");});
test("immodernt -> immodernt", function() {deepEqual( Stem("immodernt"), "immodernt");});
test("impertinent -> impertinent", function() {deepEqual( Stem("impertinent"), "impertinent");});
test("imponerade -> imponer", function() {deepEqual( Stem("imponerade"), "imponer");});
test("imponerat -> imponer", function() {deepEqual( Stem("imponerat"), "imponer");});
test("imposant -> imposant", function() {deepEqual( Stem("imposant"), "imposant");});
test("improvisationskonst -> improvisationskonst", function() {deepEqual( Stem("improvisationskonst"), "improvisationskonst");});
test("improvisera -> improviser", function() {deepEqual( Stem("improvisera"), "improviser");});
test("improviserade -> improviser", function() {deepEqual( Stem("improviserade"), "improviser");});
test("impuls -> impul", function() {deepEqual( Stem("impuls"), "impul");});
test("impulser -> impuls", function() {deepEqual( Stem("impulser"), "impuls");});
test("impulsiv -> impulsiv", function() {deepEqual( Stem("impulsiv"), "impulsiv");});
test("impulsivt -> impulsivt", function() {deepEqual( Stem("impulsivt"), "impulsivt");});
test("in -> in", function() {deepEqual( Stem("in"), "in");});
test("ina -> ina", function() {deepEqual( Stem("ina"), "ina");});
test("inackorderat -> inackorder", function() {deepEqual( Stem("inackorderat"), "inackorder");});
test("inackorderingen -> inackordering", function() {deepEqual( Stem("inackorderingen"), "inackordering");});
test("inandades -> inand", function() {deepEqual( Stem("inandades"), "inand");});
test("inandandes -> inand", function() {deepEqual( Stem("inandandes"), "inand");});
test("inandas -> inand", function() {deepEqual( Stem("inandas"), "inand");});
test("inb -> inb", function() {deepEqual( Stem("inb"), "inb");});
test("inbalanserande -> inbalanser", function() {deepEqual( Stem("inbalanserande"), "inbalanser");});
test("inbegripen -> inbegrip", function() {deepEqual( Stem("inbegripen"), "inbegrip");});
test("inbetalningarna -> inbetalning", function() {deepEqual( Stem("inbetalningarna"), "inbetalning");});
test("inbetalningen -> inbetalning", function() {deepEqual( Stem("inbetalningen"), "inbetalning");});
test("inbetalta -> inbetalt", function() {deepEqual( Stem("inbetalta"), "inbetalt");});
test("inbilla -> inbill", function() {deepEqual( Stem("inbilla"), "inbill");});
test("inbillad -> inbill", function() {deepEqual( Stem("inbillad"), "inbill");});
test("inbillade -> inbill", function() {deepEqual( Stem("inbillade"), "inbill");});
test("inbillar -> inbill", function() {deepEqual( Stem("inbillar"), "inbill");});
test("inbillat -> inbill", function() {deepEqual( Stem("inbillat"), "inbill");});
test("inbillning -> inbillning", function() {deepEqual( Stem("inbillning"), "inbillning");});
test("inbillningar -> inbillning", function() {deepEqual( Stem("inbillningar"), "inbillning");});
test("inbillningen -> inbillning", function() {deepEqual( Stem("inbillningen"), "inbillning");});
test("inbillningskraft -> inbillningskraft", function() {deepEqual( Stem("inbillningskraft"), "inbillningskraft");});
test("inbilska -> inbilsk", function() {deepEqual( Stem("inbilska"), "inbilsk");});
test("inbilskhetens -> inbilsk", function() {deepEqual( Stem("inbilskhetens"), "inbilsk");});
test("inbiten -> inbit", function() {deepEqual( Stem("inbiten"), "inbit");});
test("inbjuda -> inbjud", function() {deepEqual( Stem("inbjuda"), "inbjud");});
test("inbjudan -> inbjudan", function() {deepEqual( Stem("inbjudan"), "inbjudan");});
test("inbjudande -> inbjud", function() {deepEqual( Stem("inbjudande"), "inbjud");});
test("inbjuden -> inbjud", function() {deepEqual( Stem("inbjuden"), "inbjud");});
test("inbjudna -> inbjudn", function() {deepEqual( Stem("inbjudna"), "inbjudn");});
test("inbjudning -> inbjudning", function() {deepEqual( Stem("inbjudning"), "inbjudning");});
test("inbjudningen -> inbjudning", function() {deepEqual( Stem("inbjudningen"), "inbjudning");});
test("inbjöd -> inbjöd", function() {deepEqual( Stem("inbjöd"), "inbjöd");});
test("inbjöds -> inbjöd", function() {deepEqual( Stem("inbjöds"), "inbjöd");});
test("inbragte -> inbrag", function() {deepEqual( Stem("inbragte"), "inbrag");});
test("inbrant -> inbrant", function() {deepEqual( Stem("inbrant"), "inbrant");});
test("inbringa -> inbring", function() {deepEqual( Stem("inbringa"), "inbring");});
test("inbringat -> inbring", function() {deepEqual( Stem("inbringat"), "inbring");});
test("inbrott -> inbrot", function() {deepEqual( Stem("inbrott"), "inbrot");});
test("inbrytande -> inbryt", function() {deepEqual( Stem("inbrytande"), "inbryt");});
test("inbränt -> inbränt", function() {deepEqual( Stem("inbränt"), "inbränt");});
test("inbunden -> inbund", function() {deepEqual( Stem("inbunden"), "inbund");});
test("inburen -> inbur", function() {deepEqual( Stem("inburen"), "inbur");});
test("inbäddad -> inbäd", function() {deepEqual( Stem("inbäddad"), "inbäd");});
test("ind -> ind", function() {deepEqual( Stem("ind"), "ind");});
test("indad -> ind", function() {deepEqual( Stem("indad"), "ind");});
test("inde -> ind", function() {deepEqual( Stem("inde"), "ind");});
test("indelas -> indel", function() {deepEqual( Stem("indelas"), "indel");});
test("indelning -> indelning", function() {deepEqual( Stem("indelning"), "indelning");});
test("inder -> ind", function() {deepEqual( Stem("inder"), "ind");});
test("indien -> indi", function() {deepEqual( Stem("indien"), "indi");});
test("indiskräckt -> indiskräck", function() {deepEqual( Stem("indiskräckt"), "indiskräck");});
test("individens -> individ", function() {deepEqual( Stem("individens"), "individ");});
test("individer -> individ", function() {deepEqual( Stem("individer"), "individ");});
test("indragas -> indrag", function() {deepEqual( Stem("indragas"), "indrag");});
test("indragen -> indrag", function() {deepEqual( Stem("indragen"), "indrag");});
test("indragna -> indragn", function() {deepEqual( Stem("indragna"), "indragn");});
test("indrog -> indrog", function() {deepEqual( Stem("indrog"), "indrog");});
test("indrägtigare -> indrägt", function() {deepEqual( Stem("indrägtigare"), "indrägt");});
test("industriens -> industri", function() {deepEqual( Stem("industriens"), "industri");});
test("inemot -> inemot", function() {deepEqual( Stem("inemot"), "inemot");});
test("infall -> infall", function() {deepEqual( Stem("infall"), "infall");});
test("infalla -> infall", function() {deepEqual( Stem("infalla"), "infall");});
test("infallet -> infallet", function() {deepEqual( Stem("infallet"), "infallet");});
test("infallna -> infalln", function() {deepEqual( Stem("infallna"), "infalln");});
test("infamt -> infamt", function() {deepEqual( Stem("infamt"), "infamt");});
test("infann -> infan", function() {deepEqual( Stem("infann"), "infan");});
test("infattningen -> infattning", function() {deepEqual( Stem("infattningen"), "infattning");});
test("infernaliska -> infernalisk", function() {deepEqual( Stem("infernaliska"), "infernalisk");});
test("infinna -> infin", function() {deepEqual( Stem("infinna"), "infin");});
test("infinner -> infin", function() {deepEqual( Stem("infinner"), "infin");});
test("influensa -> influens", function() {deepEqual( Stem("influensa"), "influens");});
test("influensaväder -> influensaväd", function() {deepEqual( Stem("influensaväder"), "influensaväd");});
test("inflytande -> inflyt", function() {deepEqual( Stem("inflytande"), "inflyt");});
test("inflytandet -> inflyt", function() {deepEqual( Stem("inflytandet"), "inflyt");});
test("inflytelsen -> inflyt", function() {deepEqual( Stem("inflytelsen"), "inflyt");});
test("inflytelserika -> inflytelserik", function() {deepEqual( Stem("inflytelserika"), "inflytelserik");});
test("inflyttande -> inflyt", function() {deepEqual( Stem("inflyttande"), "inflyt");});
test("inflyttat -> inflyt", function() {deepEqual( Stem("inflyttat"), "inflyt");});
test("informationen -> information", function() {deepEqual( Stem("informationen"), "information");});
test("informator -> informat", function() {deepEqual( Stem("informator"), "informat");});
test("informatorn -> informatorn", function() {deepEqual( Stem("informatorn"), "informatorn");});
test("infria -> infri", function() {deepEqual( Stem("infria"), "infri");});
test("infriade -> infri", function() {deepEqual( Stem("infriade"), "infri");});
test("infrusen -> infrus", function() {deepEqual( Stem("infrusen"), "infrus");});
test("infunnit -> infunnit", function() {deepEqual( Stem("infunnit"), "infunnit");});
test("infunno -> infunno", function() {deepEqual( Stem("infunno"), "infunno");});
test("inföll -> inföll", function() {deepEqual( Stem("inföll"), "inföll");});
test("inför -> inför", function() {deepEqual( Stem("inför"), "inför");});
test("införa -> inför", function() {deepEqual( Stem("införa"), "inför");});
test("införande -> inför", function() {deepEqual( Stem("införande"), "inför");});
test("införd -> införd", function() {deepEqual( Stem("införd"), "införd");});
test("infördes -> införd", function() {deepEqual( Stem("infördes"), "införd");});
test("införer -> inför", function() {deepEqual( Stem("införer"), "inför");});
test("införseln -> införseln", function() {deepEqual( Stem("införseln"), "införseln");});
test("infört -> infört", function() {deepEqual( Stem("infört"), "infört");});
test("ing -> ing", function() {deepEqual( Stem("ing"), "ing");});
test("inga -> ing", function() {deepEqual( Stem("inga"), "ing");});
test("ingaf -> ingaf", function() {deepEqual( Stem("ingaf"), "ingaf");});
test("ingalunda -> ingalund", function() {deepEqual( Stem("ingalunda"), "ingalund");});
test("ingav -> ingav", function() {deepEqual( Stem("ingav"), "ingav");});
test("ingelgren -> ingelgr", function() {deepEqual( Stem("ingelgren"), "ingelgr");});
test("ingelgrens -> ingelgr", function() {deepEqual( Stem("ingelgrens"), "ingelgr");});
test("ingelns -> ingeln", function() {deepEqual( Stem("ingelns"), "ingeln");});
test("ingen -> ing", function() {deepEqual( Stem("ingen"), "ing");});
test("ingendera -> ingender", function() {deepEqual( Stem("ingendera"), "ingender");});
test("ingenskada -> ingenskad", function() {deepEqual( Stem("ingenskada"), "ingenskad");});
test("ingenstans -> ingenstan", function() {deepEqual( Stem("ingenstans"), "ingenstan");});
test("ingenstädes -> ingenstäd", function() {deepEqual( Stem("ingenstädes"), "ingenstäd");});
test("ingenting -> ingenting", function() {deepEqual( Stem("ingenting"), "ingenting");});
test("inger -> ing", function() {deepEqual( Stem("inger"), "ing");});
test("inget -> inget", function() {deepEqual( Stem("inget"), "inget");});
test("ingick -> ingick", function() {deepEqual( Stem("ingick"), "ingick");});
test("ingifva -> ingifv", function() {deepEqual( Stem("ingifva"), "ingifv");});
test("ingingo -> ingingo", function() {deepEqual( Stem("ingingo"), "ingingo");});
test("ingiva -> ingiv", function() {deepEqual( Stem("ingiva"), "ingiv");});
test("ingivelse -> ingiv", function() {deepEqual( Stem("ingivelse"), "ingiv");});
test("ingivelsen -> ingiv", function() {deepEqual( Stem("ingivelsen"), "ingiv");});
test("ingivelsenl -> ingivelsenl", function() {deepEqual( Stem("ingivelsenl"), "ingivelsenl");});
test("ingivit -> ingivit", function() {deepEqual( Stem("ingivit"), "ingivit");});
test("ingjuta -> ingjut", function() {deepEqual( Stem("ingjuta"), "ingjut");});
test("inglidande -> inglid", function() {deepEqual( Stem("inglidande"), "inglid");});
test("ingrarna -> ingr", function() {deepEqual( Stem("ingrarna"), "ingr");});
test("ingripande -> ingrip", function() {deepEqual( Stem("ingripande"), "ingrip");});
test("ingt -> ingt", function() {deepEqual( Stem("ingt"), "ingt");});
test("ingå -> ingå", function() {deepEqual( Stem("ingå"), "ingå");});
test("ingående -> ingåend", function() {deepEqual( Stem("ingående"), "ingåend");});
test("ingången -> ingång", function() {deepEqual( Stem("ingången"), "ingång");});
test("ingångna -> ingångn", function() {deepEqual( Stem("ingångna"), "ingångn");});
test("ingångsspråk -> ingångsspråk", function() {deepEqual( Stem("ingångsspråk"), "ingångsspråk");});
test("ingått -> ingåt", function() {deepEqual( Stem("ingått"), "ingåt");});
test("inhaladt -> inhalad", function() {deepEqual( Stem("inhaladt"), "inhalad");});
test("inhemta -> inhemt", function() {deepEqual( Stem("inhemta"), "inhemt");});
test("inhemtat -> inhemt", function() {deepEqual( Stem("inhemtat"), "inhemt");});
test("inhgande -> inhg", function() {deepEqual( Stem("inhgande"), "inhg");});
test("inhugget -> inhugget", function() {deepEqual( Stem("inhugget"), "inhugget");});
test("inhuggna -> inhuggn", function() {deepEqual( Stem("inhuggna"), "inhuggn");});
test("inhämta -> inhämt", function() {deepEqual( Stem("inhämta"), "inhämt");});
test("inhämtade -> inhämt", function() {deepEqual( Stem("inhämtade"), "inhämt");});
test("inhämtas -> inhämt", function() {deepEqual( Stem("inhämtas"), "inhämt");});
test("inhämtat -> inhämt", function() {deepEqual( Stem("inhämtat"), "inhämt");});
test("inhöljd -> inhöljd", function() {deepEqual( Stem("inhöljd"), "inhöljd");});
test("inhöljt -> inhöljt", function() {deepEqual( Stem("inhöljt"), "inhöljt");});
test("ini -> ini", function() {deepEqual( Stem("ini"), "ini");});
test("inifran -> inifran", function() {deepEqual( Stem("inifran"), "inifran");});
test("inifrån -> inifrån", function() {deepEqual( Stem("inifrån"), "inifrån");});
test("initialer -> initial", function() {deepEqual( Stem("initialer"), "initial");});
test("injaga -> injag", function() {deepEqual( Stem("injaga"), "injag");});
test("inkallas -> inkall", function() {deepEqual( Stem("inkallas"), "inkall");});
test("inkilad -> inkil", function() {deepEqual( Stem("inkilad"), "inkil");});
test("inkiladt -> inkilad", function() {deepEqual( Stem("inkiladt"), "inkilad");});
test("inkilat -> inkil", function() {deepEqual( Stem("inkilat"), "inkil");});
test("inklämd -> inklämd", function() {deepEqual( Stem("inklämd"), "inklämd");});
test("inkognito -> inkognito", function() {deepEqual( Stem("inkognito"), "inkognito");});
test("inkom -> inkom", function() {deepEqual( Stem("inkom"), "inkom");});
test("inkomma -> inkomm", function() {deepEqual( Stem("inkomma"), "inkomm");});
test("inkommen -> inkomm", function() {deepEqual( Stem("inkommen"), "inkomm");});
test("inkommer -> inkomm", function() {deepEqual( Stem("inkommer"), "inkomm");});
test("inkommit -> inkommit", function() {deepEqual( Stem("inkommit"), "inkommit");});
test("inkomst -> inkomst", function() {deepEqual( Stem("inkomst"), "inkomst");});
test("inkomsten -> inkomst", function() {deepEqual( Stem("inkomsten"), "inkomst");});
test("inkomster -> inkomst", function() {deepEqual( Stem("inkomster"), "inkomst");});
test("inkrupen -> inkrup", function() {deepEqual( Stem("inkrupen"), "inkrup");});
test("inkråmet -> inkråmet", function() {deepEqual( Stem("inkråmet"), "inkråmet");});
test("inköpet -> inköpet", function() {deepEqual( Stem("inköpet"), "inköpet");});
test("inkörsporten -> inkörsport", function() {deepEqual( Stem("inkörsporten"), "inkörsport");});
test("inlade -> inl", function() {deepEqual( Stem("inlade"), "inl");});
test("inlagt -> inlag", function() {deepEqual( Stem("inlagt"), "inlag");});
test("inlandsklimat -> inlandsklim", function() {deepEqual( Stem("inlandsklimat"), "inlandsklim");});
test("inled -> inled", function() {deepEqual( Stem("inled"), "inled");});
test("inledde -> inled", function() {deepEqual( Stem("inledde"), "inled");});
test("inleddes -> inled", function() {deepEqual( Stem("inleddes"), "inled");});
test("inledning -> inledning", function() {deepEqual( Stem("inledning"), "inledning");});
test("inledningen -> inledning", function() {deepEqual( Stem("inledningen"), "inledning");});
test("inlindat -> inlind", function() {deepEqual( Stem("inlindat"), "inlind");});
test("inlägga -> inlägg", function() {deepEqual( Stem("inlägga"), "inlägg");});
test("inläggande -> inlägg", function() {deepEqual( Stem("inläggande"), "inlägg");});
test("inläggningar -> inläggning", function() {deepEqual( Stem("inläggningar"), "inläggning");});
test("inlämna -> inlämn", function() {deepEqual( Stem("inlämna"), "inlämn");});
test("inlämnas -> inlämn", function() {deepEqual( Stem("inlämnas"), "inlämn");});
test("inlärda -> inlärd", function() {deepEqual( Stem("inlärda"), "inlärd");});
test("inlärt -> inlärt", function() {deepEqual( Stem("inlärt"), "inlärt");});
test("inlät -> inlät", function() {deepEqual( Stem("inlät"), "inlät");});
test("inlåst -> inlåst", function() {deepEqual( Stem("inlåst"), "inlåst");});
test("inlåste -> inlåst", function() {deepEqual( Stem("inlåste"), "inlåst");});
test("inlåta -> inlåt", function() {deepEqual( Stem("inlåta"), "inlåt");});
test("inmjölade -> inmjöl", function() {deepEqual( Stem("inmjölade"), "inmjöl");});
test("inmurad -> inmur", function() {deepEqual( Stem("inmurad"), "inmur");});
test("innan -> innan", function() {deepEqual( Stem("innan"), "innan");});
test("innandörne -> innandörn", function() {deepEqual( Stem("innandörne"), "innandörn");});
test("innanför -> innanför", function() {deepEqual( Stem("innanför"), "innanför");});
test("innanmätet -> innanmätet", function() {deepEqual( Stem("innanmätet"), "innanmätet");});
test("inne -> inn", function() {deepEqual( Stem("inne"), "inn");});
test("innebar -> inneb", function() {deepEqual( Stem("innebar"), "inneb");});
test("inneboende -> inneboend", function() {deepEqual( Stem("inneboende"), "inneboend");});
test("innebär -> innebär", function() {deepEqual( Stem("innebär"), "innebär");});
test("innebära -> innebär", function() {deepEqual( Stem("innebära"), "innebär");});
test("innefattade -> innefat", function() {deepEqual( Stem("innefattade"), "innefat");});
test("innehade -> inneh", function() {deepEqual( Stem("innehade"), "inneh");});
test("innehades -> inneh", function() {deepEqual( Stem("innehades"), "inneh");});
test("innehåll -> innehåll", function() {deepEqual( Stem("innehåll"), "innehåll");});
test("innehållande -> innehåll", function() {deepEqual( Stem("innehållande"), "innehåll");});
test("innehåller -> innehåll", function() {deepEqual( Stem("innehåller"), "innehåll");});
test("innehållet -> innehållet", function() {deepEqual( Stem("innehållet"), "innehållet");});
test("innehöll -> innehöll", function() {deepEqual( Stem("innehöll"), "innehöll");});
test("inner -> inn", function() {deepEqual( Stem("inner"), "inn");});
test("innerlig -> inner", function() {deepEqual( Stem("innerlig"), "inner");});
test("innerliga -> inner", function() {deepEqual( Stem("innerliga"), "inner");});
test("innerligare -> inner", function() {deepEqual( Stem("innerligare"), "inner");});
test("innerligen -> inner", function() {deepEqual( Stem("innerligen"), "inner");});
test("innerlighet -> inner", function() {deepEqual( Stem("innerlighet"), "inner");});
test("innerligt -> inner", function() {deepEqual( Stem("innerligt"), "inner");});
test("innerst -> innerst", function() {deepEqual( Stem("innerst"), "innerst");});
test("innersta -> innerst", function() {deepEqual( Stem("innersta"), "innerst");});
test("innesluten -> inneslut", function() {deepEqual( Stem("innesluten"), "inneslut");});
test("innesluter -> inneslut", function() {deepEqual( Stem("innesluter"), "inneslut");});
test("inneslutit -> inneslutit", function() {deepEqual( Stem("inneslutit"), "inneslutit");});
test("inneslöt -> inneslöt", function() {deepEqual( Stem("inneslöt"), "inneslöt");});
test("inneslöts -> inneslöt", function() {deepEqual( Stem("inneslöts"), "inneslöt");});
test("innevånare -> innevån", function() {deepEqual( Stem("innevånare"), "innevån");});
test("innu -> innu", function() {deepEqual( Stem("innu"), "innu");});
test("innästlade -> innästl", function() {deepEqual( Stem("innästlade"), "innästl");});
test("innästlat -> innästl", function() {deepEqual( Stem("innästlat"), "innästl");});
test("inom -> inom", function() {deepEqual( Stem("inom"), "inom");});
test("inomhus -> inomhus", function() {deepEqual( Stem("inomhus"), "inomhus");});
test("inonl -> inonl", function() {deepEqual( Stem("inonl"), "inonl");});
test("inpackaåe -> inpackaå", function() {deepEqual( Stem("inpackaåe"), "inpackaå");});
test("inpassad -> inpass", function() {deepEqual( Stem("inpassad"), "inpass");});
test("inpassas -> inpass", function() {deepEqual( Stem("inpassas"), "inpass");});
test("inpiskad -> inpisk", function() {deepEqual( Stem("inpiskad"), "inpisk");});
test("inplanta -> inplant", function() {deepEqual( Stem("inplanta"), "inplant");});
test("inplantar -> inplant", function() {deepEqual( Stem("inplantar"), "inplant");});
test("inplantat -> inplant", function() {deepEqual( Stem("inplantat"), "inplant");});
test("inpräglade -> inprägl", function() {deepEqual( Stem("inpräglade"), "inprägl");});
test("inpudrad -> inpudr", function() {deepEqual( Stem("inpudrad"), "inpudr");});
test("inpå -> inpå", function() {deepEqual( Stem("inpå"), "inpå");});
test("inqvarterat -> inqvarter", function() {deepEqual( Stem("inqvarterat"), "inqvarter");});
test("inramning -> inramning", function() {deepEqual( Stem("inramning"), "inramning");});
test("inre -> inr", function() {deepEqual( Stem("inre"), "inr");});
test("inredd -> inred", function() {deepEqual( Stem("inredd"), "inred");});
test("inredning -> inredning", function() {deepEqual( Stem("inredning"), "inredning");});
test("inredt -> inred", function() {deepEqual( Stem("inredt"), "inred");});
test("inres -> inr", function() {deepEqual( Stem("inres"), "inr");});
test("inrett -> inret", function() {deepEqual( Stem("inrett"), "inret");});
test("inrikes -> inrik", function() {deepEqual( Stem("inrikes"), "inrik");});
test("inropades -> inrop", function() {deepEqual( Stem("inropades"), "inrop");});
test("inrotade -> inrot", function() {deepEqual( Stem("inrotade"), "inrot");});
test("inrusande -> inrus", function() {deepEqual( Stem("inrusande"), "inrus");});
test("inrättat -> inrät", function() {deepEqual( Stem("inrättat"), "inrät");});
test("inrättning -> inrättning", function() {deepEqual( Stem("inrättning"), "inrättning");});
test("inrådan -> inrådan", function() {deepEqual( Stem("inrådan"), "inrådan");});
test("insatt -> insat", function() {deepEqual( Stem("insatt"), "insat");});
test("insatte -> insat", function() {deepEqual( Stem("insatte"), "insat");});
test("inse -> ins", function() {deepEqual( Stem("inse"), "ins");});
test("inseende -> inseend", function() {deepEqual( Stem("inseende"), "inseend");});
test("insegel -> insegel", function() {deepEqual( Stem("insegel"), "insegel");});
test("inseglet -> inseglet", function() {deepEqual( Stem("inseglet"), "inseglet");});
test("insekt -> insek", function() {deepEqual( Stem("insekt"), "insek");});
test("insekter -> insek", function() {deepEqual( Stem("insekter"), "insek");});
test("insekterna -> insek", function() {deepEqual( Stem("insekterna"), "insek");});
test("inser -> ins", function() {deepEqual( Stem("inser"), "ins");});
test("insett -> inset", function() {deepEqual( Stem("insett"), "inset");});
test("insidan -> insidan", function() {deepEqual( Stem("insidan"), "insidan");});
test("insikt -> insik", function() {deepEqual( Stem("insikt"), "insik");});
test("insinuerande -> insinuer", function() {deepEqual( Stem("insinuerande"), "insinuer");});
test("insjuknat -> insjukn", function() {deepEqual( Stem("insjuknat"), "insjukn");});
test("insjunkna -> insjunkn", function() {deepEqual( Stem("insjunkna"), "insjunkn");});
test("insjö -> insjö", function() {deepEqual( Stem("insjö"), "insjö");});
test("insjöar -> insjö", function() {deepEqual( Stem("insjöar"), "insjö");});
test("insjöarna -> insjö", function() {deepEqual( Stem("insjöarna"), "insjö");});
test("insjös -> insjös", function() {deepEqual( Stem("insjös"), "insjös");});
test("inskeppadt -> inskeppad", function() {deepEqual( Stem("inskeppadt"), "inskeppad");});
test("inskjuta -> inskjut", function() {deepEqual( Stem("inskjuta"), "inskjut");});
test("inskrifvet -> inskrifvet", function() {deepEqual( Stem("inskrifvet"), "inskrifvet");});
test("inskriven -> inskriv", function() {deepEqual( Stem("inskriven"), "inskriv");});
test("inskrivet -> inskrivet", function() {deepEqual( Stem("inskrivet"), "inskrivet");});
test("inskrivningsboken -> inskrivningsbok", function() {deepEqual( Stem("inskrivningsboken"), "inskrivningsbok");});
test("inskrivningspengarna -> inskrivningspeng", function() {deepEqual( Stem("inskrivningspengarna"), "inskrivningspeng");});
test("inskränka -> inskränk", function() {deepEqual( Stem("inskränka"), "inskränk");});
test("inskränkningar -> inskränkning", function() {deepEqual( Stem("inskränkningar"), "inskränkning");});
test("inskränkt -> inskränk", function() {deepEqual( Stem("inskränkt"), "inskränk");});
test("inskränkte -> inskränk", function() {deepEqual( Stem("inskränkte"), "inskränk");});
test("inskyndande -> inskynd", function() {deepEqual( Stem("inskyndande"), "inskynd");});
test("insköt -> insköt", function() {deepEqual( Stem("insköt"), "insköt");});
test("insläppa -> insläpp", function() {deepEqual( Stem("insläppa"), "insläpp");});
test("insmög -> insmög", function() {deepEqual( Stem("insmög"), "insmög");});
test("insmögo -> insmögo", function() {deepEqual( Stem("insmögo"), "insmögo");});
test("insnärjd -> insnärjd", function() {deepEqual( Stem("insnärjd"), "insnärjd");});
test("insnöade -> insnö", function() {deepEqual( Stem("insnöade"), "insnö");});
test("insomnad -> insomn", function() {deepEqual( Stem("insomnad"), "insomn");});
test("insomnade -> insomn", function() {deepEqual( Stem("insomnade"), "insomn");});
test("insomnat -> insomn", function() {deepEqual( Stem("insomnat"), "insomn");});
test("inspara -> inspar", function() {deepEqual( Stem("inspara"), "inspar");});
test("insparar -> inspar", function() {deepEqual( Stem("insparar"), "inspar");});
test("insparas -> inspar", function() {deepEqual( Stem("insparas"), "inspar");});
test("inspektion -> inspektion", function() {deepEqual( Stem("inspektion"), "inspektion");});
test("inspektor -> inspek", function() {deepEqual( Stem("inspektor"), "inspek");});
test("inspektorens -> inspektor", function() {deepEqual( Stem("inspektorens"), "inspektor");});
test("inspiration -> inspiration", function() {deepEqual( Stem("inspiration"), "inspiration");});
test("inspirationer -> inspiration", function() {deepEqual( Stem("inspirationer"), "inspiration");});
test("insprängande -> inspräng", function() {deepEqual( Stem("insprängande"), "inspräng");});
test("inspärrad -> inspärr", function() {deepEqual( Stem("inspärrad"), "inspärr");});
test("installerad -> installer", function() {deepEqual( Stem("installerad"), "installer");});
test("insteg -> insteg", function() {deepEqual( Stem("insteg"), "insteg");});
test("instiftelseorden -> instiftelseord", function() {deepEqual( Stem("instiftelseorden"), "instiftelseord");});
test("instinkt -> instink", function() {deepEqual( Stem("instinkt"), "instink");});
test("instinktartad -> instinktart", function() {deepEqual( Stem("instinktartad"), "instinktart");});
test("instinktartadt -> instinktartad", function() {deepEqual( Stem("instinktartadt"), "instinktartad");});
test("instinkten -> instink", function() {deepEqual( Stem("instinkten"), "instink");});
test("instinkter -> instink", function() {deepEqual( Stem("instinkter"), "instink");});
test("instinktiv -> instinktiv", function() {deepEqual( Stem("instinktiv"), "instinktiv");});
test("instinktivt -> instinktivt", function() {deepEqual( Stem("instinktivt"), "instinktivt");});
test("instinktmässigt -> instinktmäss", function() {deepEqual( Stem("instinktmässigt"), "instinktmäss");});
test("instinktsmässigt -> instinktsmäss", function() {deepEqual( Stem("instinktsmässigt"), "instinktsmäss");});
test("instrument -> instrument", function() {deepEqual( Stem("instrument"), "instrument");});
test("instrumenten -> instrument", function() {deepEqual( Stem("instrumenten"), "instrument");});
test("instrumentens -> instrument", function() {deepEqual( Stem("instrumentens"), "instrument");});
test("instrumentet -> instrumentet", function() {deepEqual( Stem("instrumentet"), "instrumentet");});
test("instrumentskåp -> instrumentskåp", function() {deepEqual( Stem("instrumentskåp"), "instrumentskåp");});
test("instundande -> instund", function() {deepEqual( Stem("instundande"), "instund");});
test("instuvade -> instuv", function() {deepEqual( Stem("instuvade"), "instuv");});
test("inställa -> inställ", function() {deepEqual( Stem("inställa"), "inställ");});
test("inställda -> inställd", function() {deepEqual( Stem("inställda"), "inställd");});
test("inställsam -> inställsam", function() {deepEqual( Stem("inställsam"), "inställsam");});
test("inställsamhet -> inställsam", function() {deepEqual( Stem("inställsamhet"), "inställsam");});
test("inställsamma -> inställsamm", function() {deepEqual( Stem("inställsamma"), "inställsamm");});
test("inställsamt -> inställsamt", function() {deepEqual( Stem("inställsamt"), "inställsamt");});
test("instämde -> instämd", function() {deepEqual( Stem("instämde"), "instämd");});
test("instämmande -> instämm", function() {deepEqual( Stem("instämmande"), "instämm");});
test("instängd -> instäng", function() {deepEqual( Stem("instängd"), "instäng");});
test("instängda -> instäng", function() {deepEqual( Stem("instängda"), "instäng");});
test("instöpacket -> instöpacket", function() {deepEqual( Stem("instöpacket"), "instöpacket");});
test("insugit -> insugit", function() {deepEqual( Stem("insugit"), "insugit");});
test("insvepa -> insvep", function() {deepEqual( Stem("insvepa"), "insvep");});
test("insvept -> insvept", function() {deepEqual( Stem("insvept"), "insvept");});
test("insvepta -> insvept", function() {deepEqual( Stem("insvepta"), "insvept");});
test("insändarna -> insänd", function() {deepEqual( Stem("insändarna"), "insänd");});
test("insändes -> insänd", function() {deepEqual( Stem("insändes"), "insänd");});
test("insätta -> insät", function() {deepEqual( Stem("insätta"), "insät");});
test("insätter -> insät", function() {deepEqual( Stem("insätter"), "insät");});
test("insåg -> insåg", function() {deepEqual( Stem("insåg"), "insåg");});
test("insåge -> insåg", function() {deepEqual( Stem("insåge"), "insåg");});
test("insågo -> insågo", function() {deepEqual( Stem("insågo"), "insågo");});
test("insög -> insög", function() {deepEqual( Stem("insög"), "insög");});
test("insögo -> insögo", function() {deepEqual( Stem("insögo"), "insögo");});
test("insöva -> insöv", function() {deepEqual( Stem("insöva"), "insöv");});
test("insövd -> insövd", function() {deepEqual( Stem("insövd"), "insövd");});
test("int -> int", function() {deepEqual( Stem("int"), "int");});
test("intaga -> intag", function() {deepEqual( Stem("intaga"), "intag");});
test("intagande -> intag", function() {deepEqual( Stem("intagande"), "intag");});
test("intagen -> intag", function() {deepEqual( Stem("intagen"), "intag");});
test("intager -> intag", function() {deepEqual( Stem("intager"), "intag");});
test("intagit -> intagit", function() {deepEqual( Stem("intagit"), "intagit");});
test("intar -> int", function() {deepEqual( Stem("intar"), "int");});
test("intc -> intc", function() {deepEqual( Stem("intc"), "intc");});
test("inte -> int", function() {deepEqual( Stem("inte"), "int");});
test("intelligens -> intel", function() {deepEqual( Stem("intelligens"), "intel");});
test("intelligent -> intelligent", function() {deepEqual( Stem("intelligent"), "intelligent");});
test("intensivt -> intensivt", function() {deepEqual( Stem("intensivt"), "intensivt");});
test("interiör -> interiör", function() {deepEqual( Stem("interiör"), "interiör");});
test("intermezzot -> intermezzot", function() {deepEqual( Stem("intermezzot"), "intermezzot");});
test("interneringar -> internering", function() {deepEqual( Stem("interneringar"), "internering");});
test("intervjuar -> intervju", function() {deepEqual( Stem("intervjuar"), "intervju");});
test("intet -> intet", function() {deepEqual( Stem("intet"), "intet");});
test("intetdera -> intetder", function() {deepEqual( Stem("intetdera"), "intetder");});
test("intetgjord -> intetgjord", function() {deepEqual( Stem("intetgjord"), "intetgjord");});
test("intill -> intill", function() {deepEqual( Stem("intill"), "intill");});
test("intillträdgårdensstora -> intillträdgårdensstor", function() {deepEqual( Stem("intillträdgårdensstora"), "intillträdgårdensstor");});
test("intima -> intim", function() {deepEqual( Stem("intima"), "intim");});
test("intimare -> intim", function() {deepEqual( Stem("intimare"), "intim");});
test("intime -> intim", function() {deepEqual( Stem("intime"), "intim");});
test("intimt -> intimt", function() {deepEqual( Stem("intimt"), "intimt");});
test("intog -> intog", function() {deepEqual( Stem("intog"), "intog");});
test("intogos -> intogo", function() {deepEqual( Stem("intogos"), "intogo");});
test("intonerade -> intoner", function() {deepEqual( Stem("intonerade"), "intoner");});
test("intorkade -> intork", function() {deepEqual( Stem("intorkade"), "intork");});
test("intrassla -> intrassl", function() {deepEqual( Stem("intrassla"), "intrassl");});
test("intrasslade -> intrassl", function() {deepEqual( Stem("intrasslade"), "intrassl");});
test("intressant -> intressant", function() {deepEqual( Stem("intressant"), "intressant");});
test("intressanta -> intressant", function() {deepEqual( Stem("intressanta"), "intressant");});
test("intressantare -> intressant", function() {deepEqual( Stem("intressantare"), "intressant");});
test("intressantaste -> intressant", function() {deepEqual( Stem("intressantaste"), "intressant");});
test("intressante -> intressant", function() {deepEqual( Stem("intressante"), "intressant");});
test("intresse -> intress", function() {deepEqual( Stem("intresse"), "intress");});
test("intressen -> intress", function() {deepEqual( Stem("intressen"), "intress");});
test("intressentskap -> intressentskap", function() {deepEqual( Stem("intressentskap"), "intressentskap");});
test("intressera -> intresser", function() {deepEqual( Stem("intressera"), "intresser");});
test("intresserad -> intresser", function() {deepEqual( Stem("intresserad"), "intresser");});
test("intresserade -> intresser", function() {deepEqual( Stem("intresserade"), "intresser");});
test("intresserar -> intresser", function() {deepEqual( Stem("intresserar"), "intresser");});
test("intresserat -> intresser", function() {deepEqual( Stem("intresserat"), "intresser");});
test("intresset -> intresset", function() {deepEqual( Stem("intresset"), "intresset");});
test("intrig -> intr", function() {deepEqual( Stem("intrig"), "intr");});
test("intriger -> intr", function() {deepEqual( Stem("intriger"), "intr");});
test("intrigera -> intriger", function() {deepEqual( Stem("intrigera"), "intriger");});
test("intrigstycken -> intrigstyck", function() {deepEqual( Stem("intrigstycken"), "intrigstyck");});
test("introducerad -> introducer", function() {deepEqual( Stem("introducerad"), "introducer");});
test("intryck -> intryck", function() {deepEqual( Stem("intryck"), "intryck");});
test("intrycket -> intrycket", function() {deepEqual( Stem("intrycket"), "intrycket");});
test("intryckt -> intryck", function() {deepEqual( Stem("intryckt"), "intryck");});
test("inträda -> inträd", function() {deepEqual( Stem("inträda"), "inträd");});
test("inträdande -> inträd", function() {deepEqual( Stem("inträdande"), "inträd");});
test("inträdde -> inträd", function() {deepEqual( Stem("inträdde"), "inträd");});
test("inträde -> inträd", function() {deepEqual( Stem("inträde"), "inträd");});
test("inträdet -> inträdet", function() {deepEqual( Stem("inträdet"), "inträdet");});
test("inträdt -> inträd", function() {deepEqual( Stem("inträdt"), "inträd");});
test("inträffa -> inträff", function() {deepEqual( Stem("inträffa"), "inträff");});
test("inträffade -> inträff", function() {deepEqual( Stem("inträffade"), "inträff");});
test("inträffande -> inträff", function() {deepEqual( Stem("inträffande"), "inträff");});
test("inträffar -> inträff", function() {deepEqual( Stem("inträffar"), "inträff");});
test("inträffat -> inträff", function() {deepEqual( Stem("inträffat"), "inträff");});
test("intränga -> inträng", function() {deepEqual( Stem("intränga"), "inträng");});
test("inträngande -> inträng", function() {deepEqual( Stem("inträngande"), "inträng");});
test("inträngde -> inträng", function() {deepEqual( Stem("inträngde"), "inträng");});
test("inträtt -> inträt", function() {deepEqual( Stem("inträtt"), "inträt");});
test("intrång -> intrång", function() {deepEqual( Stem("intrång"), "intrång");});
test("inunder -> inund", function() {deepEqual( Stem("inunder"), "inund");});
test("inuti -> inuti", function() {deepEqual( Stem("inuti"), "inuti");});
test("invaliden -> invalid", function() {deepEqual( Stem("invaliden"), "invalid");});
test("invalider -> invalid", function() {deepEqual( Stem("invalider"), "invalid");});
test("invandes -> inv", function() {deepEqual( Stem("invandes"), "inv");});
test("invecklad -> inveckl", function() {deepEqual( Stem("invecklad"), "inveckl");});
test("invecklade -> inveckl", function() {deepEqual( Stem("invecklade"), "inveckl");});
test("invektiv -> invektiv", function() {deepEqual( Stem("invektiv"), "invektiv");});
test("inventarium -> inventarium", function() {deepEqual( Stem("inventarium"), "inventarium");});
test("inverka -> inverk", function() {deepEqual( Stem("inverka"), "inverk");});
test("inverkade -> inverk", function() {deepEqual( Stem("inverkade"), "inverk");});
test("inverkan -> inverkan", function() {deepEqual( Stem("inverkan"), "inverkan");});
test("inverkar -> inverk", function() {deepEqual( Stem("inverkar"), "inverk");});
test("invid -> invid", function() {deepEqual( Stem("invid"), "invid");});
test("invigd -> inv", function() {deepEqual( Stem("invigd"), "inv");});
test("inviterat -> inviter", function() {deepEqual( Stem("inviterat"), "inviter");});
test("invända -> invänd", function() {deepEqual( Stem("invända"), "invänd");});
test("invände -> invänd", function() {deepEqual( Stem("invände"), "invänd");});
test("invändning -> invändning", function() {deepEqual( Stem("invändning"), "invändning");});
test("invändningar -> invändning", function() {deepEqual( Stem("invändningar"), "invändning");});
test("invänta -> invänt", function() {deepEqual( Stem("invänta"), "invänt");});
test("inväntade -> invänt", function() {deepEqual( Stem("inväntade"), "invänt");});
test("invärtes -> invärt", function() {deepEqual( Stem("invärtes"), "invärt");});
test("invånare -> invån", function() {deepEqual( Stem("invånare"), "invån");});
test("invånarne -> invån", function() {deepEqual( Stem("invånarne"), "invån");});
test("inälvor -> inälv", function() {deepEqual( Stem("inälvor"), "inälv");});
test("inåt -> inåt", function() {deepEqual( Stem("inåt"), "inåt");});
test("inåtvänd -> inåtvänd", function() {deepEqual( Stem("inåtvänd"), "inåtvänd");});
test("inöfva -> inöfv", function() {deepEqual( Stem("inöfva"), "inöfv");});
test("inöva -> inöv", function() {deepEqual( Stem("inöva"), "inöv");});
test("inövad -> inöv", function() {deepEqual( Stem("inövad"), "inöv");});
test("iog -> iog", function() {deepEqual( Stem("iog"), "iog");});
test("iordningställa -> iordningställ", function() {deepEqual( Stem("iordningställa"), "iordningställ");});
test("ir -> ir", function() {deepEqual( Stem("ir"), "ir");});
test("iramför -> iramför", function() {deepEqual( Stem("iramför"), "iramför");});
test("irene -> iren", function() {deepEqual( Stem("irene"), "iren");});
test("irisk -> irisk", function() {deepEqual( Stem("irisk"), "irisk");});
test("irliga -> irl", function() {deepEqual( Stem("irliga"), "irl");});
test("ironi -> ironi", function() {deepEqual( Stem("ironi"), "ironi");});
test("ironiskt -> ironisk", function() {deepEqual( Stem("ironiskt"), "ironisk");});
test("irr -> irr", function() {deepEqual( Stem("irr"), "irr");});
test("irra -> irr", function() {deepEqual( Stem("irra"), "irr");});
test("irrade -> irr", function() {deepEqual( Stem("irrade"), "irr");});
test("irrande -> irr", function() {deepEqual( Stem("irrande"), "irr");});
test("irrar -> irr", function() {deepEqual( Stem("irrar"), "irr");});
test("irrat -> irr", function() {deepEqual( Stem("irrat"), "irr");});
test("irrfärder -> irrfärd", function() {deepEqual( Stem("irrfärder"), "irrfärd");});
test("irriterar -> irriter", function() {deepEqual( Stem("irriterar"), "irriter");});
test("irädstam -> irädstam", function() {deepEqual( Stem("irädstam"), "irädstam");});
test("irågade -> iråg", function() {deepEqual( Stem("irågade"), "iråg");});
test("iråkade -> iråk", function() {deepEqual( Stem("iråkade"), "iråk");});
test("irån -> irån", function() {deepEqual( Stem("irån"), "irån");});
test("is -> is", function() {deepEqual( Stem("is"), "is");});
test("isa -> isa", function() {deepEqual( Stem("isa"), "isa");});
test("isade -> isad", function() {deepEqual( Stem("isade"), "isad");});
test("isak -> isak", function() {deepEqual( Stem("isak"), "isak");});
test("isande -> isand", function() {deepEqual( Stem("isande"), "isand");});
test("isas -> isas", function() {deepEqual( Stem("isas"), "isas");});
test("isaskar -> isask", function() {deepEqual( Stem("isaskar"), "isask");});
test("isdroppar -> isdropp", function() {deepEqual( Stem("isdroppar"), "isdropp");});
test("isen -> isen", function() {deepEqual( Stem("isen"), "isen");});
test("isfrusna -> isfrusn", function() {deepEqual( Stem("isfrusna"), "isfrusn");});
test("isig -> isig", function() {deepEqual( Stem("isig"), "isig");});
test("isiga -> isig", function() {deepEqual( Stem("isiga"), "isig");});
test("isigt -> isig", function() {deepEqual( Stem("isigt"), "isig");});
test("iskade -> isk", function() {deepEqual( Stem("iskade"), "isk");});
test("iskall -> iskall", function() {deepEqual( Stem("iskall"), "iskall");});
test("iskallt -> iskallt", function() {deepEqual( Stem("iskallt"), "iskallt");});
test("iskyla -> iskyl", function() {deepEqual( Stem("iskyla"), "iskyl");});
test("islossningen -> islossning", function() {deepEqual( Stem("islossningen"), "islossning");});
test("ismassa -> ismass", function() {deepEqual( Stem("ismassa"), "ismass");});
test("ismassorna -> ismass", function() {deepEqual( Stem("ismassorna"), "ismass");});
test("isning -> isning", function() {deepEqual( Stem("isning"), "isning");});
test("isolerade -> isoler", function() {deepEqual( Stem("isolerade"), "isoler");});
test("isop -> isop", function() {deepEqual( Stem("isop"), "isop");});
test("israelitiskt -> israelitisk", function() {deepEqual( Stem("israelitiskt"), "israelitisk");});
test("israels -> israel", function() {deepEqual( Stem("israels"), "israel");});
test("isstycke -> isstyck", function() {deepEqual( Stem("isstycke"), "isstyck");});
test("isstycken -> isstyck", function() {deepEqual( Stem("isstycken"), "isstyck");});
test("isstyckena -> isstycken", function() {deepEqual( Stem("isstyckena"), "isstycken");});
test("ister -> ist", function() {deepEqual( Stem("ister"), "ist");});
test("isterhakan -> isterhakan", function() {deepEqual( Stem("isterhakan"), "isterhakan");});
test("isynnerhet -> isynner", function() {deepEqual( Stem("isynnerhet"), "isynner");});
test("isär -> isär", function() {deepEqual( Stem("isär"), "isär");});
test("it -> it", function() {deepEqual( Stem("it"), "it");});
test("italien -> itali", function() {deepEqual( Stem("italien"), "itali");});
test("italiensk -> italiensk", function() {deepEqual( Stem("italiensk"), "italiensk");});
test("italienska -> italiensk", function() {deepEqual( Stem("italienska"), "italiensk");});
test("italienskorna -> italiensk", function() {deepEqual( Stem("italienskorna"), "italiensk");});
test("itans -> itan", function() {deepEqual( Stem("itans"), "itan");});
test("itet -> itet", function() {deepEqual( Stem("itet"), "itet");});
test("ittlade -> ittl", function() {deepEqual( Stem("ittlade"), "ittl");});
test("itu -> itu", function() {deepEqual( Stem("itu"), "itu");});
test("itva -> itv", function() {deepEqual( Stem("itva"), "itv");});
test("iute -> iut", function() {deepEqual( Stem("iute"), "iut");});
test("iv -> iv", function() {deepEqual( Stem("iv"), "iv");});
test("iver -> iver", function() {deepEqual( Stem("iver"), "iver");});
test("ivrade -> ivr", function() {deepEqual( Stem("ivrade"), "ivr");});
test("ivrig -> ivr", function() {deepEqual( Stem("ivrig"), "ivr");});
test("ivriga -> ivr", function() {deepEqual( Stem("ivriga"), "ivr");});
test("ivrigare -> ivr", function() {deepEqual( Stem("ivrigare"), "ivr");});
test("ivrigt -> ivr", function() {deepEqual( Stem("ivrigt"), "ivr");});
test("ix -> ix", function() {deepEqual( Stem("ix"), "ix");});
test("iyck -> iyck", function() {deepEqual( Stem("iyck"), "iyck");});
test("iycka -> iyck", function() {deepEqual( Stem("iycka"), "iyck");});
test("iyckades -> iyck", function() {deepEqual( Stem("iyckades"), "iyck");});
test("iyckan -> iyckan", function() {deepEqual( Stem("iyckan"), "iyckan");});
test("iyckats -> iyckat", function() {deepEqual( Stem("iyckats"), "iyckat");});
test("iycklig -> iyck", function() {deepEqual( Stem("iycklig"), "iyck");});
test("iyckliga -> iyck", function() {deepEqual( Stem("iyckliga"), "iyck");});
test("iycklige -> iyck", function() {deepEqual( Stem("iycklige"), "iyck");});
test("iyckligt -> iyck", function() {deepEqual( Stem("iyckligt"), "iyck");});
test("iyckokänsla -> iyckokänsl", function() {deepEqual( Stem("iyckokänsla"), "iyckokänsl");});
test("iycksalige -> iycksa", function() {deepEqual( Stem("iycksalige"), "iycksa");});
test("iyckönska -> iyckönsk", function() {deepEqual( Stem("iyckönska"), "iyckönsk");});
test("iydde -> iydd", function() {deepEqual( Stem("iydde"), "iydd");});
test("iyddes -> iydd", function() {deepEqual( Stem("iyddes"), "iydd");});
test("iydig -> iyd", function() {deepEqual( Stem("iydig"), "iyd");});
test("iydigt -> iyd", function() {deepEqual( Stem("iydigt"), "iyd");});
test("iydnad -> iydn", function() {deepEqual( Stem("iydnad"), "iydn");});
test("iyf -> iyf", function() {deepEqual( Stem("iyf"), "iyf");});
test("iyft -> iyft", function() {deepEqual( Stem("iyft"), "iyft");});
test("iyfta -> iyft", function() {deepEqual( Stem("iyfta"), "iyft");});
test("iyftad -> iyft", function() {deepEqual( Stem("iyftad"), "iyft");});
test("iyftas -> iyft", function() {deepEqual( Stem("iyftas"), "iyft");});
test("iyftat -> iyft", function() {deepEqual( Stem("iyftat"), "iyft");});
test("iyfte -> iyft", function() {deepEqual( Stem("iyfte"), "iyft");});
test("iyfter -> iyft", function() {deepEqual( Stem("iyfter"), "iyft");});
test("iyftes -> iyft", function() {deepEqual( Stem("iyftes"), "iyft");});
test("iyfts -> iyft", function() {deepEqual( Stem("iyfts"), "iyft");});
test("iyk -> iyk", function() {deepEqual( Stem("iyk"), "iyk");});
test("iykt -> iykt", function() {deepEqual( Stem("iykt"), "iykt");});
test("iykta -> iykt", function() {deepEqual( Stem("iykta"), "iykt");});
test("iyktan -> iyktan", function() {deepEqual( Stem("iyktan"), "iyktan");});
test("iyktor -> iykt", function() {deepEqual( Stem("iyktor"), "iykt");});
test("iyktorna -> iykt", function() {deepEqual( Stem("iyktorna"), "iykt");});
test("iyktskenet -> iyktskenet", function() {deepEqual( Stem("iyktskenet"), "iyktskenet");});
test("iynne -> iynn", function() {deepEqual( Stem("iynne"), "iynn");});
test("iysa -> iys", function() {deepEqual( Stem("iysa"), "iys");});
test("iysande -> iys", function() {deepEqual( Stem("iysande"), "iys");});
test("iyser -> iys", function() {deepEqual( Stem("iyser"), "iys");});
test("iyss -> iyss", function() {deepEqual( Stem("iyss"), "iyss");});
test("iyssna -> iyssn", function() {deepEqual( Stem("iyssna"), "iyssn");});
test("iyssnade -> iyssn", function() {deepEqual( Stem("iyssnade"), "iyssn");});
test("iyssnande -> iyssn", function() {deepEqual( Stem("iyssnande"), "iyssn");});
test("iyssnat -> iyssn", function() {deepEqual( Stem("iyssnat"), "iyssn");});
test("iyst -> iyst", function() {deepEqual( Stem("iyst"), "iyst");});
test("iyste -> iyst", function() {deepEqual( Stem("iyste"), "iyst");});
test("iysten -> iyst", function() {deepEqual( Stem("iysten"), "iyst");});
test("iystes -> iyst", function() {deepEqual( Stem("iystes"), "iyst");});
test("iystna -> iystn", function() {deepEqual( Stem("iystna"), "iystn");});
test("iystnad -> iystn", function() {deepEqual( Stem("iystnad"), "iystn");});
test("iytt -> iytt", function() {deepEqual( Stem("iytt"), "iytt");});
test("iänge -> iäng", function() {deepEqual( Stem("iänge"), "iäng");});
test("iåg -> iåg", function() {deepEqual( Stem("iåg"), "iåg");});
test("iörde -> iörd", function() {deepEqual( Stem("iörde"), "iörd");});
test("iörjågade -> iörjåg", function() {deepEqual( Stem("iörjågade"), "iörjåg");});
test("iörlåt -> iörlåt", function() {deepEqual( Stem("iörlåt"), "iörlåt");});
test("iörst -> iörst", function() {deepEqual( Stem("iörst"), "iörst");});
test("iös -> iös", function() {deepEqual( Stem("iös"), "iös");});
test("j -> j", function() {deepEqual( Stem("j"), "j");});
test("ja -> ja", function() {deepEqual( Stem("ja"), "ja");});
test("jacka -> jack", function() {deepEqual( Stem("jacka"), "jack");});
test("jackfickorna -> jackfick", function() {deepEqual( Stem("jackfickorna"), "jackfick");});
test("jacob -> jacob", function() {deepEqual( Stem("jacob"), "jacob");});
test("jacobs -> jacob", function() {deepEqual( Stem("jacobs"), "jacob");});
test("jacoo -> jacoo", function() {deepEqual( Stem("jacoo"), "jacoo");});
test("jade -> jad", function() {deepEqual( Stem("jade"), "jad");});
test("jae -> jae", function() {deepEqual( Stem("jae"), "jae");});
test("jaf -> jaf", function() {deepEqual( Stem("jaf"), "jaf");});
test("jag -> jag", function() {deepEqual( Stem("jag"), "jag");});
test("jaga -> jag", function() {deepEqual( Stem("jaga"), "jag");});
test("jagad -> jag", function() {deepEqual( Stem("jagad"), "jag");});
test("jagade -> jag", function() {deepEqual( Stem("jagade"), "jag");});
test("jagande -> jag", function() {deepEqual( Stem("jagande"), "jag");});
test("jagandets -> jagandet", function() {deepEqual( Stem("jagandets"), "jagandet");});
test("jagar -> jag", function() {deepEqual( Stem("jagar"), "jag");});
test("jagas -> jag", function() {deepEqual( Stem("jagas"), "jag");});
test("jagat -> jag", function() {deepEqual( Stem("jagat"), "jag");});
test("jagats -> jagat", function() {deepEqual( Stem("jagats"), "jagat");});
test("jaget -> jaget", function() {deepEqual( Stem("jaget"), "jaget");});
test("jaha -> jah", function() {deepEqual( Stem("jaha"), "jah");});
test("jakande -> jak", function() {deepEqual( Stem("jakande"), "jak");});
test("jakob -> jakob", function() {deepEqual( Stem("jakob"), "jakob");});
test("jakobs -> jakob", function() {deepEqual( Stem("jakobs"), "jakob");});
test("jakt -> jakt", function() {deepEqual( Stem("jakt"), "jakt");});
test("jaktbössa -> jaktböss", function() {deepEqual( Stem("jaktbössa"), "jaktböss");});
test("jakten -> jakt", function() {deepEqual( Stem("jakten"), "jakt");});
test("jakthund -> jakthund", function() {deepEqual( Stem("jakthund"), "jakthund");});
test("jaktkarl -> jaktkarl", function() {deepEqual( Stem("jaktkarl"), "jaktkarl");});
test("jaktkarlar -> jaktkarl", function() {deepEqual( Stem("jaktkarlar"), "jaktkarl");});
test("jaktkarlarne -> jaktkarl", function() {deepEqual( Stem("jaktkarlarne"), "jaktkarl");});
test("jaktkarlens -> jaktkarl", function() {deepEqual( Stem("jaktkarlens"), "jaktkarl");});
test("jaktlöjtnant -> jaktlöjtnant", function() {deepEqual( Stem("jaktlöjtnant"), "jaktlöjtnant");});
test("jaktlöjtnanten -> jaktlöjtnant", function() {deepEqual( Stem("jaktlöjtnanten"), "jaktlöjtnant");});
test("jaktlöjtnantens -> jaktlöjtnant", function() {deepEqual( Stem("jaktlöjtnantens"), "jaktlöjtnant");});
test("jalusi -> jalusi", function() {deepEqual( Stem("jalusi"), "jalusi");});
test("jalusien -> jalusi", function() {deepEqual( Stem("jalusien"), "jalusi");});
test("jalusier -> jalusi", function() {deepEqual( Stem("jalusier"), "jalusi");});
test("jalusierna -> jalusi", function() {deepEqual( Stem("jalusierna"), "jalusi");});
test("jamaika -> jamaik", function() {deepEqual( Stem("jamaika"), "jamaik");});
test("jamat -> jam", function() {deepEqual( Stem("jamat"), "jam");});
test("jamrande -> jamr", function() {deepEqual( Stem("jamrande"), "jamr");});
test("jamt -> jamt", function() {deepEqual( Stem("jamt"), "jamt");});
test("jande -> jand", function() {deepEqual( Stem("jande"), "jand");});
test("januari -> januari", function() {deepEqual( Stem("januari"), "januari");});
test("japanska -> japansk", function() {deepEqual( Stem("japanska"), "japansk");});
test("jaquette -> jaquet", function() {deepEqual( Stem("jaquette"), "jaquet");});
test("jaquettekappa -> jaquettekapp", function() {deepEqual( Stem("jaquettekappa"), "jaquettekapp");});
test("jargong -> jargong", function() {deepEqual( Stem("jargong"), "jargong");});
test("jasmin -> jasmin", function() {deepEqual( Stem("jasmin"), "jasmin");});
test("jasminen -> jasmin", function() {deepEqual( Stem("jasminen"), "jasmin");});
test("jasminer -> jasmin", function() {deepEqual( Stem("jasminer"), "jasmin");});
test("jasminhäck -> jasminhäck", function() {deepEqual( Stem("jasminhäck"), "jasminhäck");});
test("jaspis -> jaspis", function() {deepEqual( Stem("jaspis"), "jaspis");});
test("jaså -> jaså", function() {deepEqual( Stem("jaså"), "jaså");});
test("javäl -> javäl", function() {deepEqual( Stem("javäl"), "javäl");});
test("jazzvindens -> jazzvind", function() {deepEqual( Stem("jazzvindens"), "jazzvind");});
test("jcrn -> jcrn", function() {deepEqual( Stem("jcrn"), "jcrn");});
test("jcsus -> jcsus", function() {deepEqual( Stem("jcsus"), "jcsus");});
test("je -> je", function() {deepEqual( Stem("je"), "je");});
test("jemföra -> jemför", function() {deepEqual( Stem("jemföra"), "jemför");});
test("jemföras -> jemför", function() {deepEqual( Stem("jemföras"), "jemför");});
test("jemförelse -> jemför", function() {deepEqual( Stem("jemförelse"), "jemför");});
test("jemförelser -> jemför", function() {deepEqual( Stem("jemförelser"), "jemför");});
test("jemförelsevis -> jemförelsevis", function() {deepEqual( Stem("jemförelsevis"), "jemförelsevis");});
test("jemförligt -> jemför", function() {deepEqual( Stem("jemförligt"), "jemför");});
test("jemkade -> jemk", function() {deepEqual( Stem("jemkade"), "jemk");});
test("jemmer -> jemm", function() {deepEqual( Stem("jemmer"), "jemm");});
test("jemmerfulla -> jemmerfull", function() {deepEqual( Stem("jemmerfulla"), "jemmerfull");});
test("jemmerrop -> jemmerrop", function() {deepEqual( Stem("jemmerrop"), "jemmerrop");});
test("jemn -> jemn", function() {deepEqual( Stem("jemn"), "jemn");});
test("jemna -> jemn", function() {deepEqual( Stem("jemna"), "jemn");});
test("jemnårigt -> jemnår", function() {deepEqual( Stem("jemnårigt"), "jemnår");});
test("jemrande -> jemr", function() {deepEqual( Stem("jemrande"), "jemr");});
test("jemt -> jemt", function() {deepEqual( Stem("jemt"), "jemt");});
test("jemte -> jemt", function() {deepEqual( Stem("jemte"), "jemt");});
test("jemväl -> jemväl", function() {deepEqual( Stem("jemväl"), "jemväl");});
test("jer -> jer", function() {deepEqual( Stem("jer"), "jer");});
test("jernkakelugnen -> jernkakelugn", function() {deepEqual( Stem("jernkakelugnen"), "jernkakelugn");});
test("jernnatur -> jernnatur", function() {deepEqual( Stem("jernnatur"), "jernnatur");});
test("jernpansrade -> jernpansr", function() {deepEqual( Stem("jernpansrade"), "jernpansr");});
test("jernringar -> jernring", function() {deepEqual( Stem("jernringar"), "jernring");});
test("jernrustningarne -> jernrustning", function() {deepEqual( Stem("jernrustningarne"), "jernrustning");});
test("jesu -> jesu", function() {deepEqual( Stem("jesu"), "jesu");});
test("jesuitens -> jesuit", function() {deepEqual( Stem("jesuitens"), "jesuit");});
test("jesum -> jesum", function() {deepEqual( Stem("jesum"), "jesum");});
test("jesus -> jesus", function() {deepEqual( Stem("jesus"), "jesus");});
test("jettegrytorna -> jettegryt", function() {deepEqual( Stem("jettegrytorna"), "jettegryt");});
test("jettekrafter -> jettekraft", function() {deepEqual( Stem("jettekrafter"), "jettekraft");});
test("jettelika -> jettelik", function() {deepEqual( Stem("jettelika"), "jettelik");});
test("jl -> jl", function() {deepEqual( Stem("jl"), "jl");});
test("jo -> jo", function() {deepEqual( Stem("jo"), "jo");});
test("job -> job", function() {deepEqual( Stem("job"), "job");});
test("jobs -> job", function() {deepEqual( Stem("jobs"), "job");});
test("jockeymössa -> jockeymöss", function() {deepEqual( Stem("jockeymössa"), "jockeymöss");});
test("johamles -> johaml", function() {deepEqual( Stem("johamles"), "johaml");});
test("johan -> johan", function() {deepEqual( Stem("johan"), "johan");});
test("johannelund -> johannelund", function() {deepEqual( Stem("johannelund"), "johannelund");});
test("johannem -> johannem", function() {deepEqual( Stem("johannem"), "johannem");});
test("johannes -> johan", function() {deepEqual( Stem("johannes"), "johan");});
test("johannis -> johannis", function() {deepEqual( Stem("johannis"), "johannis");});
test("johans -> johan", function() {deepEqual( Stem("johans"), "johan");});
test("johansmarschen -> johansmarsch", function() {deepEqual( Stem("johansmarschen"), "johansmarsch");});
test("john -> john", function() {deepEqual( Stem("john"), "john");});
test("joho -> joho", function() {deepEqual( Stem("joho"), "joho");});
test("jojo -> jojo", function() {deepEqual( Stem("jojo"), "jojo");});
test("jojomänsan -> jojomänsan", function() {deepEqual( Stem("jojomänsan"), "jojomänsan");});
test("jollra -> jollr", function() {deepEqual( Stem("jollra"), "jollr");});
test("jollradc -> jollradc", function() {deepEqual( Stem("jollradc"), "jollradc");});
test("jollrade -> jollr", function() {deepEqual( Stem("jollrade"), "jollr");});
test("jollrande -> jollr", function() {deepEqual( Stem("jollrande"), "jollr");});
test("jon -> jon", function() {deepEqual( Stem("jon"), "jon");});
test("jonas -> jon", function() {deepEqual( Stem("jonas"), "jon");});
test("jor -> jor", function() {deepEqual( Stem("jor"), "jor");});
test("jord -> jord", function() {deepEqual( Stem("jord"), "jord");});
test("jordades -> jord", function() {deepEqual( Stem("jordades"), "jord");});
test("jordbebyggarens -> jordbebygg", function() {deepEqual( Stem("jordbebyggarens"), "jordbebygg");});
test("jordbrunt -> jordbrunt", function() {deepEqual( Stem("jordbrunt"), "jordbrunt");});
test("jordbundna -> jordbundn", function() {deepEqual( Stem("jordbundna"), "jordbundn");});
test("jordelivets -> jordelivet", function() {deepEqual( Stem("jordelivets"), "jordelivet");});
test("jorden -> jord", function() {deepEqual( Stem("jorden"), "jord");});
test("jordens -> jord", function() {deepEqual( Stem("jordens"), "jord");});
test("jordevandringen -> jordevandring", function() {deepEqual( Stem("jordevandringen"), "jordevandring");});
test("jordfästningen -> jordfästning", function() {deepEqual( Stem("jordfästningen"), "jordfästning");});
test("jordisk -> jordisk", function() {deepEqual( Stem("jordisk"), "jordisk");});
test("jordiska -> jordisk", function() {deepEqual( Stem("jordiska"), "jordisk");});
test("jordiskt -> jordisk", function() {deepEqual( Stem("jordiskt"), "jordisk");});
test("jordklotet -> jordklotet", function() {deepEqual( Stem("jordklotet"), "jordklotet");});
test("jordvåningen -> jordvåning", function() {deepEqual( Stem("jordvåningen"), "jordvåning");});
test("jordytan -> jordytan", function() {deepEqual( Stem("jordytan"), "jordytan");});
test("joscf -> joscf", function() {deepEqual( Stem("joscf"), "joscf");});
test("josef -> josef", function() {deepEqual( Stem("josef"), "josef");});
test("josefina -> josefin", function() {deepEqual( Stem("josefina"), "josefin");});
test("josefinas -> josefin", function() {deepEqual( Stem("josefinas"), "josefin");});
test("josefs -> josef", function() {deepEqual( Stem("josefs"), "josef");});
test("journalist -> journalist", function() {deepEqual( Stem("journalist"), "journalist");});
test("jovialisk -> jovialisk", function() {deepEqual( Stem("jovialisk"), "jovialisk");});
test("jr -> jr", function() {deepEqual( Stem("jr"), "jr");});
test("ju -> ju", function() {deepEqual( Stem("ju"), "ju");});
test("jubel -> jubel", function() {deepEqual( Stem("jubel"), "jubel");});
test("jublade -> jubl", function() {deepEqual( Stem("jublade"), "jubl");});
test("jublande -> jubl", function() {deepEqual( Stem("jublande"), "jubl");});
test("jud -> jud", function() {deepEqual( Stem("jud"), "jud");});
test("judar -> jud", function() {deepEqual( Stem("judar"), "jud");});
test("jude -> jud", function() {deepEqual( Stem("jude"), "jud");});
test("judebarnen -> judebarn", function() {deepEqual( Stem("judebarnen"), "judebarn");});
test("judefamilj -> judefamilj", function() {deepEqual( Stem("judefamilj"), "judefamilj");});
test("judeflicka -> judeflick", function() {deepEqual( Stem("judeflicka"), "judeflick");});
test("judehistorier -> judehistori", function() {deepEqual( Stem("judehistorier"), "judehistori");});
test("juden -> jud", function() {deepEqual( Stem("juden"), "jud");});
test("judinnan -> judinnan", function() {deepEqual( Stem("judinnan"), "judinnan");});
test("judiska -> judisk", function() {deepEqual( Stem("judiska"), "judisk");});
test("judiske -> judisk", function() {deepEqual( Stem("judiske"), "judisk");});
test("judiskt -> judisk", function() {deepEqual( Stem("judiskt"), "judisk");});
test("judy -> judy", function() {deepEqual( Stem("judy"), "judy");});
test("judys -> judy", function() {deepEqual( Stem("judys"), "judy");});
test("jukänthenne -> jukänthen", function() {deepEqual( Stem("jukänthenne"), "jukänthen");});
test("jul -> jul", function() {deepEqual( Stem("jul"), "jul");});
test("jula -> jul", function() {deepEqual( Stem("jula"), "jul");});
test("julafton -> julafton", function() {deepEqual( Stem("julafton"), "julafton");});
test("julaftonen -> julafton", function() {deepEqual( Stem("julaftonen"), "julafton");});
test("jular -> jul", function() {deepEqual( Stem("jular"), "jul");});
test("julbjudning -> julbjudning", function() {deepEqual( Stem("julbjudning"), "julbjudning");});
test("juldagen -> juldag", function() {deepEqual( Stem("juldagen"), "juldag");});
test("julehalm -> julehalm", function() {deepEqual( Stem("julehalm"), "julehalm");});
test("julen -> jul", function() {deepEqual( Stem("julen"), "jul");});
test("julens -> jul", function() {deepEqual( Stem("julens"), "jul");});
test("julepsalm -> julepsalm", function() {deepEqual( Stem("julepsalm"), "julepsalm");});
test("julevind -> julevind", function() {deepEqual( Stem("julevind"), "julevind");});
test("julgranen -> julgran", function() {deepEqual( Stem("julgranen"), "julgran");});
test("julgris -> julgris", function() {deepEqual( Stem("julgris"), "julgris");});
test("julhögtiden -> julhögtid", function() {deepEqual( Stem("julhögtiden"), "julhögtid");});
test("juli -> juli", function() {deepEqual( Stem("juli"), "juli");});
test("julias -> juli", function() {deepEqual( Stem("julias"), "juli");});
test("julie -> juli", function() {deepEqual( Stem("julie"), "juli");});
test("julstöket -> julstöket", function() {deepEqual( Stem("julstöket"), "julstöket");});
test("jungarna -> jung", function() {deepEqual( Stem("jungarna"), "jung");});
test("jungfru -> jungfru", function() {deepEqual( Stem("jungfru"), "jungfru");});
test("jungfrudom -> jungfrudom", function() {deepEqual( Stem("jungfrudom"), "jungfrudom");});
test("jungfrukropp -> jungfrukropp", function() {deepEqual( Stem("jungfrukropp"), "jungfrukropp");});
test("jungfruliga -> jungfru", function() {deepEqual( Stem("jungfruliga"), "jungfru");});
test("jungfrun -> jungfrun", function() {deepEqual( Stem("jungfrun"), "jungfrun");});
test("jungfruns -> jungfrun", function() {deepEqual( Stem("jungfruns"), "jungfrun");});
test("jungfrur -> jungfrur", function() {deepEqual( Stem("jungfrur"), "jungfrur");});
test("jungfrurna -> jungfrurn", function() {deepEqual( Stem("jungfrurna"), "jungfrurn");});
test("jungfruålderns -> jungfruåld", function() {deepEqual( Stem("jungfruålderns"), "jungfruåld");});
test("jungman -> jungman", function() {deepEqual( Stem("jungman"), "jungman");});
test("jungmannen -> jungman", function() {deepEqual( Stem("jungmannen"), "jungman");});
test("juni -> juni", function() {deepEqual( Stem("juni"), "juni");});
test("juniafton -> juniafton", function() {deepEqual( Stem("juniafton"), "juniafton");});
test("junior -> juni", function() {deepEqual( Stem("junior"), "juni");});
test("juniors -> junior", function() {deepEqual( Stem("juniors"), "junior");});
test("junkrarna -> junkr", function() {deepEqual( Stem("junkrarna"), "junkr");});
test("junkrarne -> junkr", function() {deepEqual( Stem("junkrarne"), "junkr");});
test("junlös -> junlös", function() {deepEqual( Stem("junlös"), "junlös");});
test("juri -> juri", function() {deepEqual( Stem("juri"), "juri");});
test("juridik -> juridik", function() {deepEqual( Stem("juridik"), "juridik");});
test("juridiken -> juridik", function() {deepEqual( Stem("juridiken"), "juridik");});
test("juridiska -> juridisk", function() {deepEqual( Stem("juridiska"), "juridisk");});
test("juristerna -> jurist", function() {deepEqual( Stem("juristerna"), "jurist");});
test("jury -> jury", function() {deepEqual( Stem("jury"), "jury");});
test("just -> just", function() {deepEqual( Stem("just"), "just");});
test("justera -> juster", function() {deepEqual( Stem("justera"), "juster");});
test("justerat -> juster", function() {deepEqual( Stem("justerat"), "juster");});
test("justitias -> justiti", function() {deepEqual( Stem("justitias"), "justiti");});
test("justitierevisionen -> justitierevision", function() {deepEqual( Stem("justitierevisionen"), "justitierevision");});
test("justitierådet -> justitierådet", function() {deepEqual( Stem("justitierådet"), "justitierådet");});
test("jutland -> jutland", function() {deepEqual( Stem("jutland"), "jutland");});
test("juvel -> juvel", function() {deepEqual( Stem("juvel"), "juvel");});
test("juveler -> juvel", function() {deepEqual( Stem("juveler"), "juvel");});
test("juver -> juv", function() {deepEqual( Stem("juver"), "juv");});
test("jver -> jver", function() {deepEqual( Stem("jver"), "jver");});
test("jädrar -> jädr", function() {deepEqual( Stem("jädrar"), "jädr");});
test("jäfva -> jäfv", function() {deepEqual( Stem("jäfva"), "jäfv");});
test("jägare -> jäg", function() {deepEqual( Stem("jägare"), "jäg");});
test("jägaren -> jäg", function() {deepEqual( Stem("jägaren"), "jäg");});
test("jägarn -> jägarn", function() {deepEqual( Stem("jägarn"), "jägarn");});
test("jägtande -> jägt", function() {deepEqual( Stem("jägtande"), "jägt");});
test("jäktande -> jäkt", function() {deepEqual( Stem("jäktande"), "jäkt");});
test("jämföras -> jämför", function() {deepEqual( Stem("jämföras"), "jämför");});
test("jämförde -> jämförd", function() {deepEqual( Stem("jämförde"), "jämförd");});
test("jämförelse -> jämför", function() {deepEqual( Stem("jämförelse"), "jämför");});
test("jämförelsen -> jämför", function() {deepEqual( Stem("jämförelsen"), "jämför");});
test("jämförliga -> jämför", function() {deepEqual( Stem("jämförliga"), "jämför");});
test("jämkar -> jämk", function() {deepEqual( Stem("jämkar"), "jämk");});
test("jämlikheten -> jämlik", function() {deepEqual( Stem("jämlikheten"), "jämlik");});
test("jämmer -> jämm", function() {deepEqual( Stem("jämmer"), "jämm");});
test("jämmerdal -> jämmerdal", function() {deepEqual( Stem("jämmerdal"), "jämmerdal");});
test("jämmerdalen -> jämmerdal", function() {deepEqual( Stem("jämmerdalen"), "jämmerdal");});
test("jämmerlig -> jämmer", function() {deepEqual( Stem("jämmerlig"), "jämmer");});
test("jämmern -> jämm", function() {deepEqual( Stem("jämmern"), "jämm");});
test("jämmerrop -> jämmerrop", function() {deepEqual( Stem("jämmerrop"), "jämmerrop");});
test("jämn -> jämn", function() {deepEqual( Stem("jämn"), "jämn");});
test("jämna -> jämn", function() {deepEqual( Stem("jämna"), "jämn");});
test("jämnan -> jämnan", function() {deepEqual( Stem("jämnan"), "jämnan");});
test("jämnar -> jämn", function() {deepEqual( Stem("jämnar"), "jämn");});
test("jämngamla -> jämngaml", function() {deepEqual( Stem("jämngamla"), "jämngaml");});
test("jämngod -> jämngod", function() {deepEqual( Stem("jämngod"), "jämngod");});
test("jämngrå -> jämngrå", function() {deepEqual( Stem("jämngrå"), "jämngrå");});
test("jämnt -> jämnt", function() {deepEqual( Stem("jämnt"), "jämnt");});
test("jämnårig -> jämnår", function() {deepEqual( Stem("jämnårig"), "jämnår");});
test("jämnåriga -> jämnår", function() {deepEqual( Stem("jämnåriga"), "jämnår");});
test("jämra -> jämr", function() {deepEqual( Stem("jämra"), "jämr");});
test("jämrade -> jämr", function() {deepEqual( Stem("jämrade"), "jämr");});
test("jämrande -> jämr", function() {deepEqual( Stem("jämrande"), "jämr");});
test("jämrat -> jämr", function() {deepEqual( Stem("jämrat"), "jämr");});
test("jämt -> jämt", function() {deepEqual( Stem("jämt"), "jämt");});
test("jämte -> jämt", function() {deepEqual( Stem("jämte"), "jämt");});
test("jämvikten -> jämvik", function() {deepEqual( Stem("jämvikten"), "jämvik");});
test("jämväl -> jämväl", function() {deepEqual( Stem("jämväl"), "jämväl");});
test("jäo -> jäo", function() {deepEqual( Stem("jäo"), "jäo");});
test("järn -> järn", function() {deepEqual( Stem("järn"), "järn");});
test("järnhård -> järnhård", function() {deepEqual( Stem("järnhård"), "järnhård");});
test("järnspira -> järnspir", function() {deepEqual( Stem("järnspira"), "järnspir");});
test("järnsäng -> järnsäng", function() {deepEqual( Stem("järnsäng"), "järnsäng");});
test("järnvägs -> järnväg", function() {deepEqual( Stem("järnvägs"), "järnväg");});
test("järnvägsresan -> järnvägsresan", function() {deepEqual( Stem("järnvägsresan"), "järnvägsresan");});
test("järran -> järran", function() {deepEqual( Stem("järran"), "järran");});
test("jäsa -> jäs", function() {deepEqual( Stem("jäsa"), "jäs");});
test("jäsande -> jäs", function() {deepEqual( Stem("jäsande"), "jäs");});
test("jäser -> jäs", function() {deepEqual( Stem("jäser"), "jäs");});
test("jäsning -> jäsning", function() {deepEqual( Stem("jäsning"), "jäsning");});
test("jäst -> jäst", function() {deepEqual( Stem("jäst"), "jäst");});
test("jästa -> jäst", function() {deepEqual( Stem("jästa"), "jäst");});
test("jäste -> jäst", function() {deepEqual( Stem("jäste"), "jäst");});
test("jättar -> jätt", function() {deepEqual( Stem("jättar"), "jätt");});
test("jättars -> jättar", function() {deepEqual( Stem("jättars"), "jättar");});
test("jätte -> jätt", function() {deepEqual( Stem("jätte"), "jätt");});
test("jättebarn -> jättebarn", function() {deepEqual( Stem("jättebarn"), "jättebarn");});
test("jättegrytan -> jättegrytan", function() {deepEqual( Stem("jättegrytan"), "jättegrytan");});
test("jättelik -> jättelik", function() {deepEqual( Stem("jättelik"), "jättelik");});
test("jättenavel -> jättenavel", function() {deepEqual( Stem("jättenavel"), "jättenavel");});
test("jättesolv -> jättesolv", function() {deepEqual( Stem("jättesolv"), "jättesolv");});
test("jättesteg -> jättesteg", function() {deepEqual( Stem("jättesteg"), "jättesteg");});
test("jättestor -> jättest", function() {deepEqual( Stem("jättestor"), "jättest");});
test("jättetass -> jättetass", function() {deepEqual( Stem("jättetass"), "jättetass");});
test("jätteviskning -> jätteviskning", function() {deepEqual( Stem("jätteviskning"), "jätteviskning");});
test("k -> k", function() {deepEqual( Stem("k"), "k");});
test("ka -> ka", function() {deepEqual( Stem("ka"), "ka");});
test("kabelända -> kabeländ", function() {deepEqual( Stem("kabelända"), "kabeländ");});
test("kabinett -> kabinet", function() {deepEqual( Stem("kabinett"), "kabinet");});
test("kabinettet -> kabinettet", function() {deepEqual( Stem("kabinettet"), "kabinettet");});
test("kackerlackor -> kackerlack", function() {deepEqual( Stem("kackerlackor"), "kackerlack");});
test("kade -> kad", function() {deepEqual( Stem("kade"), "kad");});
test("kadett -> kadet", function() {deepEqual( Stem("kadett"), "kadet");});
test("kafe -> kaf", function() {deepEqual( Stem("kafe"), "kaf");});
test("kafebord -> kafebord", function() {deepEqual( Stem("kafebord"), "kafebord");});
test("kafeerna -> kafe", function() {deepEqual( Stem("kafeerna"), "kafe");});
test("kafeet -> kafeet", function() {deepEqual( Stem("kafeet"), "kafeet");});
test("kafeets -> kafeet", function() {deepEqual( Stem("kafeets"), "kafeet");});
test("kafehörn -> kafehörn", function() {deepEqual( Stem("kafehörn"), "kafehörn");});
test("kaferestaurang -> kaferestaurang", function() {deepEqual( Stem("kaferestaurang"), "kaferestaurang");});
test("kafesoffan -> kafesoffan", function() {deepEqual( Stem("kafesoffan"), "kafesoffan");});
test("kaffe -> kaff", function() {deepEqual( Stem("kaffe"), "kaff");});
test("kaffebord -> kaffebord", function() {deepEqual( Stem("kaffebord"), "kaffebord");});
test("kaffebordet -> kaffebordet", function() {deepEqual( Stem("kaffebordet"), "kaffebordet");});
test("kaffebricka -> kaffebrick", function() {deepEqual( Stem("kaffebricka"), "kaffebrick");});
test("kaffebrickan -> kaffebrickan", function() {deepEqual( Stem("kaffebrickan"), "kaffebrickan");});
test("kaffegrädde -> kaffegräd", function() {deepEqual( Stem("kaffegrädde"), "kaffegräd");});
test("kaffekanna -> kaffekan", function() {deepEqual( Stem("kaffekanna"), "kaffekan");});
test("kaffekannan -> kaffekannan", function() {deepEqual( Stem("kaffekannan"), "kaffekannan");});
test("kaffekittel -> kaffekittel", function() {deepEqual( Stem("kaffekittel"), "kaffekittel");});
test("kaffekokaren -> kaffekok", function() {deepEqual( Stem("kaffekokaren"), "kaffekok");});
test("kaffekopp -> kaffekopp", function() {deepEqual( Stem("kaffekopp"), "kaffekopp");});
test("kaffekoppen -> kaffekopp", function() {deepEqual( Stem("kaffekoppen"), "kaffekopp");});
test("kaffekvarn -> kaffekvarn", function() {deepEqual( Stem("kaffekvarn"), "kaffekvarn");});
test("kaffepanna -> kaffepan", function() {deepEqual( Stem("kaffepanna"), "kaffepan");});
test("kaffepannan -> kaffepannan", function() {deepEqual( Stem("kaffepannan"), "kaffepannan");});
test("kaffesyster -> kaffesyst", function() {deepEqual( Stem("kaffesyster"), "kaffesyst");});
test("kaffet -> kaffet", function() {deepEqual( Stem("kaffet"), "kaffet");});
test("kaffetimme -> kaffetimm", function() {deepEqual( Stem("kaffetimme"), "kaffetimm");});
test("kaffetåren -> kaffetår", function() {deepEqual( Stem("kaffetåren"), "kaffetår");});
test("kaftan -> kaftan", function() {deepEqual( Stem("kaftan"), "kaftan");});
test("kaftanlik -> kaftanlik", function() {deepEqual( Stem("kaftanlik"), "kaftanlik");});
test("kaggar -> kagg", function() {deepEqual( Stem("kaggar"), "kagg");});
test("kah -> kah", function() {deepEqual( Stem("kah"), "kah");});
test("kaiken -> kaik", function() {deepEqual( Stem("kaiken"), "kaik");});
test("kains -> kain", function() {deepEqual( Stem("kains"), "kain");});
test("kaja -> kaj", function() {deepEqual( Stem("kaja"), "kaj");});
test("kajen -> kaj", function() {deepEqual( Stem("kajen"), "kaj");});
test("kajer -> kaj", function() {deepEqual( Stem("kajer"), "kaj");});
test("kajerna -> kaj", function() {deepEqual( Stem("kajerna"), "kaj");});
test("kajsa -> kajs", function() {deepEqual( Stem("kajsa"), "kajs");});
test("kajsas -> kajs", function() {deepEqual( Stem("kajsas"), "kajs");});
test("kaka -> kak", function() {deepEqual( Stem("kaka"), "kak");});
test("kakan -> kakan", function() {deepEqual( Stem("kakan"), "kakan");});
test("kakel -> kakel", function() {deepEqual( Stem("kakel"), "kakel");});
test("kakelugn -> kakelugn", function() {deepEqual( Stem("kakelugn"), "kakelugn");});
test("kakelugnar -> kakelugn", function() {deepEqual( Stem("kakelugnar"), "kakelugn");});
test("kakelugnen -> kakelugn", function() {deepEqual( Stem("kakelugnen"), "kakelugn");});
test("kakelugnsfrisen -> kakelugnsfris", function() {deepEqual( Stem("kakelugnsfrisen"), "kakelugnsfris");});
test("kakelugnskanten -> kakelugnskant", function() {deepEqual( Stem("kakelugnskanten"), "kakelugnskant");});
test("kakfat -> kakf", function() {deepEqual( Stem("kakfat"), "kakf");});
test("kakfatet -> kakfatet", function() {deepEqual( Stem("kakfatet"), "kakfatet");});
test("kakor -> kak", function() {deepEqual( Stem("kakor"), "kak");});
test("kakpapper -> kakpapp", function() {deepEqual( Stem("kakpapper"), "kakpapp");});
test("kaksmet -> kaksmet", function() {deepEqual( Stem("kaksmet"), "kaksmet");});
test("kala -> kal", function() {deepEqual( Stem("kala"), "kal");});
test("kalasa -> kalas", function() {deepEqual( Stem("kalasa"), "kalas");});
test("kalaser -> kalas", function() {deepEqual( Stem("kalaser"), "kalas");});
test("kalaset -> kalaset", function() {deepEqual( Stem("kalaset"), "kalaset");});
test("kalasskjortorna -> kalasskjort", function() {deepEqual( Stem("kalasskjortorna"), "kalasskjort");});
test("kalendern -> kalend", function() {deepEqual( Stem("kalendern"), "kalend");});
test("kali -> kali", function() {deepEqual( Stem("kali"), "kali");});
test("kalk -> kalk", function() {deepEqual( Stem("kalk"), "kalk");});
test("kalkar -> kalk", function() {deepEqual( Stem("kalkar"), "kalk");});
test("kalken -> kalk", function() {deepEqual( Stem("kalken"), "kalk");});
test("kalkon -> kalkon", function() {deepEqual( Stem("kalkon"), "kalkon");});
test("kalkonen -> kalkon", function() {deepEqual( Stem("kalkonen"), "kalkon");});
test("kalkonerna -> kalkon", function() {deepEqual( Stem("kalkonerna"), "kalkon");});
test("kalkonskivorna -> kalkonskiv", function() {deepEqual( Stem("kalkonskivorna"), "kalkonskiv");});
test("kall -> kall", function() {deepEqual( Stem("kall"), "kall");});
test("kalla -> kall", function() {deepEqual( Stem("kalla"), "kall");});
test("kallad -> kall", function() {deepEqual( Stem("kallad"), "kall");});
test("kallade -> kall", function() {deepEqual( Stem("kallade"), "kall");});
test("kallades -> kall", function() {deepEqual( Stem("kallades"), "kall");});
test("kalladt -> kallad", function() {deepEqual( Stem("kalladt"), "kallad");});
test("kallande -> kall", function() {deepEqual( Stem("kallande"), "kall");});
test("kallar -> kall", function() {deepEqual( Stem("kallar"), "kall");});
test("kallas -> kall", function() {deepEqual( Stem("kallas"), "kall");});
test("kallaste -> kall", function() {deepEqual( Stem("kallaste"), "kall");});
test("kallat -> kall", function() {deepEqual( Stem("kallat"), "kall");});
test("kallats -> kallat", function() {deepEqual( Stem("kallats"), "kallat");});
test("kallbad -> kallb", function() {deepEqual( Stem("kallbad"), "kallb");});
test("kallblodighet -> kallblod", function() {deepEqual( Stem("kallblodighet"), "kallblod");});
test("kalle -> kall", function() {deepEqual( Stem("kalle"), "kall");});
test("kallelse -> kall", function() {deepEqual( Stem("kallelse"), "kall");});
test("kallnade -> kalln", function() {deepEqual( Stem("kallnade"), "kalln");});
test("kallnar -> kalln", function() {deepEqual( Stem("kallnar"), "kalln");});
test("kallnat -> kalln", function() {deepEqual( Stem("kallnat"), "kalln");});
test("kallsinnighet -> kallsinn", function() {deepEqual( Stem("kallsinnighet"), "kallsinn");});
test("kallsvettades -> kallsvet", function() {deepEqual( Stem("kallsvettades"), "kallsvet");});
test("kallt -> kallt", function() {deepEqual( Stem("kallt"), "kallt");});
test("kalnrern -> kalnr", function() {deepEqual( Stem("kalnrern"), "kalnr");});
test("kalops -> kalop", function() {deepEqual( Stem("kalops"), "kalop");});
test("kalt -> kalt", function() {deepEqual( Stem("kalt"), "kalt");});
test("kalufs -> kaluf", function() {deepEqual( Stem("kalufs"), "kaluf");});
test("kalufsen -> kalufs", function() {deepEqual( Stem("kalufsen"), "kalufs");});
test("kalva -> kalv", function() {deepEqual( Stem("kalva"), "kalv");});
test("kalvstekssås -> kalvstekssås", function() {deepEqual( Stem("kalvstekssås"), "kalvstekssås");});
test("kam -> kam", function() {deepEqual( Stem("kam"), "kam");});
test("kameral -> kameral", function() {deepEqual( Stem("kameral"), "kameral");});
test("kamfer -> kamf", function() {deepEqual( Stem("kamfer"), "kamf");});
test("kamma -> kamm", function() {deepEqual( Stem("kamma"), "kamm");});
test("kammad -> kamm", function() {deepEqual( Stem("kammad"), "kamm");});
test("kammakaregatan -> kammakaregatan", function() {deepEqual( Stem("kammakaregatan"), "kammakaregatan");});
test("kammar -> kamm", function() {deepEqual( Stem("kammar"), "kamm");});
test("kammardörr -> kammardörr", function() {deepEqual( Stem("kammardörr"), "kammardörr");});
test("kammare -> kamm", function() {deepEqual( Stem("kammare"), "kamm");});
test("kammaren -> kamm", function() {deepEqual( Stem("kammaren"), "kamm");});
test("kammarfönster -> kammarfönst", function() {deepEqual( Stem("kammarfönster"), "kammarfönst");});
test("kammargolfvet -> kammargolfvet", function() {deepEqual( Stem("kammargolfvet"), "kammargolfvet");});
test("kammarhandel -> kammarhandel", function() {deepEqual( Stem("kammarhandel"), "kammarhandel");});
test("kammarherre -> kammarherr", function() {deepEqual( Stem("kammarherre"), "kammarherr");});
test("kammarherrinna -> kammarherrin", function() {deepEqual( Stem("kammarherrinna"), "kammarherrin");});
test("kammarjunkar -> kammarjunk", function() {deepEqual( Stem("kammarjunkar"), "kammarjunk");});
test("kammarjunkare -> kammarjunk", function() {deepEqual( Stem("kammarjunkare"), "kammarjunk");});
test("kammarjunkarefullmakt -> kammarjunkarefullmak", function() {deepEqual( Stem("kammarjunkarefullmakt"), "kammarjunkarefullmak");});
test("kammarlifvet -> kammarlifvet", function() {deepEqual( Stem("kammarlifvet"), "kammarlifvet");});
test("kammarn -> kammarn", function() {deepEqual( Stem("kammarn"), "kammarn");});
test("kammarorgel -> kammarorgel", function() {deepEqual( Stem("kammarorgel"), "kammarorgel");});
test("kammarspisning -> kammarspisning", function() {deepEqual( Stem("kammarspisning"), "kammarspisning");});
test("kammartjenare -> kammartjen", function() {deepEqual( Stem("kammartjenare"), "kammartjen");});
test("kammen -> kamm", function() {deepEqual( Stem("kammen"), "kamm");});
test("kammerrerinna -> kammerrerin", function() {deepEqual( Stem("kammerrerinna"), "kammerrerin");});
test("kamp -> kamp", function() {deepEqual( Stem("kamp"), "kamp");});
test("kampar -> kamp", function() {deepEqual( Stem("kampar"), "kamp");});
test("kampen -> kamp", function() {deepEqual( Stem("kampen"), "kamp");});
test("kamrar -> kamr", function() {deepEqual( Stem("kamrar"), "kamr");});
test("kamrars -> kamrar", function() {deepEqual( Stem("kamrars"), "kamrar");});
test("kamrat -> kamr", function() {deepEqual( Stem("kamrat"), "kamr");});
test("kamraten -> kamrat", function() {deepEqual( Stem("kamraten"), "kamrat");});
test("kamrater -> kamrat", function() {deepEqual( Stem("kamrater"), "kamrat");});
test("kamraterna -> kamrat", function() {deepEqual( Stem("kamraterna"), "kamrat");});
test("kamraternas -> kamrat", function() {deepEqual( Stem("kamraternas"), "kamrat");});
test("kamrem -> kamrem", function() {deepEqual( Stem("kamrem"), "kamrem");});
test("kamrer -> kamr", function() {deepEqual( Stem("kamrer"), "kamr");});
test("kamrern -> kamr", function() {deepEqual( Stem("kamrern"), "kamr");});
test("kamrerns -> kamr", function() {deepEqual( Stem("kamrerns"), "kamr");});
test("kamrers -> kamrer", function() {deepEqual( Stem("kamrers"), "kamrer");});
test("kamrerskan -> kamrerskan", function() {deepEqual( Stem("kamrerskan"), "kamrerskan");});
test("kan -> kan", function() {deepEqual( Stem("kan"), "kan");});
test("kana -> kan", function() {deepEqual( Stem("kana"), "kan");});
test("kanalen -> kanal", function() {deepEqual( Stem("kanalen"), "kanal");});
test("kanalje -> kanalj", function() {deepEqual( Stem("kanalje"), "kanalj");});
test("kanaljeri -> kanaljeri", function() {deepEqual( Stem("kanaljeri"), "kanaljeri");});
test("kanaljerna -> kanalj", function() {deepEqual( Stem("kanaljerna"), "kanalj");});
test("kande -> kand", function() {deepEqual( Stem("kande"), "kand");});
test("kandelabrarna -> kandelabr", function() {deepEqual( Stem("kandelabrarna"), "kandelabr");});
test("kanderad -> kander", function() {deepEqual( Stem("kanderad"), "kander");});
test("kandidaten -> kandidat", function() {deepEqual( Stem("kandidaten"), "kandidat");});
test("kanel -> kanel", function() {deepEqual( Stem("kanel"), "kanel");});
test("kanhä -> kanhä", function() {deepEqual( Stem("kanhä"), "kanhä");});
test("kanhända -> kanhänd", function() {deepEqual( Stem("kanhända"), "kanhänd");});
test("kanistern -> kanist", function() {deepEqual( Stem("kanistern"), "kanist");});
test("kanna -> kann", function() {deepEqual( Stem("kanna"), "kann");});
test("kannan -> kannan", function() {deepEqual( Stem("kannan"), "kannan");});
test("kannans -> kannan", function() {deepEqual( Stem("kannans"), "kannan");});
test("kannas -> kann", function() {deepEqual( Stem("kannas"), "kann");});
test("kannstöparsarkasm -> kannstöparsarkasm", function() {deepEqual( Stem("kannstöparsarkasm"), "kannstöparsarkasm");});
test("kanonskott -> kanonskot", function() {deepEqual( Stem("kanonskott"), "kanonskot");});
test("kanoter -> kanot", function() {deepEqual( Stem("kanoter"), "kanot");});
test("kanotiärerna -> kanotiär", function() {deepEqual( Stem("kanotiärerna"), "kanotiär");});
test("kanskc -> kanskc", function() {deepEqual( Stem("kanskc"), "kanskc");});
test("kanske -> kansk", function() {deepEqual( Stem("kanske"), "kansk");});
test("kansla -> kansl", function() {deepEqual( Stem("kansla"), "kansl");});
test("kanslirådet -> kanslirådet", function() {deepEqual( Stem("kanslirådet"), "kanslirådet");});
test("kanslisekreterare -> kanslisekreter", function() {deepEqual( Stem("kanslisekreterare"), "kanslisekreter");});
test("kanslor -> kansl", function() {deepEqual( Stem("kanslor"), "kansl");});
test("kant -> kant", function() {deepEqual( Stem("kant"), "kant");});
test("kantad -> kant", function() {deepEqual( Stem("kantad"), "kant");});
test("kantade -> kant", function() {deepEqual( Stem("kantade"), "kant");});
test("kanten -> kant", function() {deepEqual( Stem("kanten"), "kant");});
test("kanter -> kant", function() {deepEqual( Stem("kanter"), "kant");});
test("kanterna -> kant", function() {deepEqual( Stem("kanterna"), "kant");});
test("kantig -> kant", function() {deepEqual( Stem("kantig"), "kant");});
test("kantor -> kant", function() {deepEqual( Stem("kantor"), "kant");});
test("kantorn -> kantorn", function() {deepEqual( Stem("kantorn"), "kantorn");});
test("kantorns -> kantorn", function() {deepEqual( Stem("kantorns"), "kantorn");});
test("kantra -> kantr", function() {deepEqual( Stem("kantra"), "kantr");});
test("kantrade -> kantr", function() {deepEqual( Stem("kantrade"), "kantr");});
test("kantring -> kantring", function() {deepEqual( Stem("kantring"), "kantring");});
test("kaos -> kaos", function() {deepEqual( Stem("kaos"), "kaos");});
test("kapa -> kap", function() {deepEqual( Stem("kapa"), "kap");});
test("kapabel -> kapabel", function() {deepEqual( Stem("kapabel"), "kapabel");});
test("kapell -> kapell", function() {deepEqual( Stem("kapell"), "kapell");});
test("kapellens -> kapell", function() {deepEqual( Stem("kapellens"), "kapell");});
test("kapital -> kapital", function() {deepEqual( Stem("kapital"), "kapital");});
test("kapitel -> kapitel", function() {deepEqual( Stem("kapitel"), "kapitel");});
test("kapitlet -> kapitlet", function() {deepEqual( Stem("kapitlet"), "kapitlet");});
test("kapp -> kapp", function() {deepEqual( Stem("kapp"), "kapp");});
test("kappa -> kapp", function() {deepEqual( Stem("kappa"), "kapp");});
test("kappan -> kappan", function() {deepEqual( Stem("kappan"), "kappan");});
test("kappas -> kapp", function() {deepEqual( Stem("kappas"), "kapp");});
test("kappe -> kapp", function() {deepEqual( Stem("kappe"), "kapp");});
test("kapplöpning -> kapplöpning", function() {deepEqual( Stem("kapplöpning"), "kapplöpning");});
test("kappor -> kapp", function() {deepEqual( Stem("kappor"), "kapp");});
test("kapporna -> kapp", function() {deepEqual( Stem("kapporna"), "kapp");});
test("kapprock -> kapprock", function() {deepEqual( Stem("kapprock"), "kapprock");});
test("kappsäck -> kappsäck", function() {deepEqual( Stem("kappsäck"), "kappsäck");});
test("kappsäckarna -> kappsäck", function() {deepEqual( Stem("kappsäckarna"), "kappsäck");});
test("kappsäcken -> kappsäck", function() {deepEqual( Stem("kappsäcken"), "kappsäck");});
test("kappärm -> kappärm", function() {deepEqual( Stem("kappärm"), "kappärm");});
test("kapriser -> kapris", function() {deepEqual( Stem("kapriser"), "kapris");});
test("kapslar -> kapsl", function() {deepEqual( Stem("kapslar"), "kapsl");});
test("kapslarna -> kapsl", function() {deepEqual( Stem("kapslarna"), "kapsl");});
test("kapten -> kapt", function() {deepEqual( Stem("kapten"), "kapt");});
test("kaptenen -> kapten", function() {deepEqual( Stem("kaptenen"), "kapten");});
test("kaptenens -> kapten", function() {deepEqual( Stem("kaptenens"), "kapten");});
test("kaptens -> kapt", function() {deepEqual( Stem("kaptens"), "kapt");});
test("kaptensvärdighet -> kaptensvärd", function() {deepEqual( Stem("kaptensvärdighet"), "kaptensvärd");});
test("kapun -> kapun", function() {deepEqual( Stem("kapun"), "kapun");});
test("kapunen -> kapun", function() {deepEqual( Stem("kapunen"), "kapun");});
test("kar -> kar", function() {deepEqual( Stem("kar"), "kar");});
test("karakter -> karak", function() {deepEqual( Stem("karakter"), "karak");});
test("karakteriserar -> karakteriser", function() {deepEqual( Stem("karakteriserar"), "karakteriser");});
test("karakteristiken -> karakteristik", function() {deepEqual( Stem("karakteristiken"), "karakteristik");});
test("karakteristisk -> karakteristisk", function() {deepEqual( Stem("karakteristisk"), "karakteristisk");});
test("karakteristiskt -> karakteristisk", function() {deepEqual( Stem("karakteristiskt"), "karakteristisk");});
test("karaktär -> karaktär", function() {deepEqual( Stem("karaktär"), "karaktär");});
test("karaktärens -> karaktär", function() {deepEqual( Stem("karaktärens"), "karaktär");});
test("karaktärer -> karaktär", function() {deepEqual( Stem("karaktärer"), "karaktär");});
test("karaktärslöst -> karaktärslös", function() {deepEqual( Stem("karaktärslöst"), "karaktärslös");});
test("karamell -> karamell", function() {deepEqual( Stem("karamell"), "karamell");});
test("karameller -> karamell", function() {deepEqual( Stem("karameller"), "karamell");});
test("karamellkoket -> karamellkoket", function() {deepEqual( Stem("karamellkoket"), "karamellkoket");});
test("karbol -> karbol", function() {deepEqual( Stem("karbol"), "karbol");});
test("kardborrar -> kardborr", function() {deepEqual( Stem("kardborrar"), "kardborr");});
test("karet -> karet", function() {deepEqual( Stem("karet"), "karet");});
test("karikatyrer -> karikatyr", function() {deepEqual( Stem("karikatyrer"), "karikatyr");});
test("karin -> karin", function() {deepEqual( Stem("karin"), "karin");});
test("karl -> karl", function() {deepEqual( Stem("karl"), "karl");});
test("karlar -> karl", function() {deepEqual( Stem("karlar"), "karl");});
test("karlarna -> karl", function() {deepEqual( Stem("karlarna"), "karl");});
test("karlarne -> karl", function() {deepEqual( Stem("karlarne"), "karl");});
test("karlberg -> karlberg", function() {deepEqual( Stem("karlberg"), "karlberg");});
test("karlbergs -> karlberg", function() {deepEqual( Stem("karlbergs"), "karlberg");});
test("karlbergsallen -> karlbergsall", function() {deepEqual( Stem("karlbergsallen"), "karlbergsall");});
test("karlek -> karlek", function() {deepEqual( Stem("karlek"), "karlek");});
test("karlekarl -> karlekarl", function() {deepEqual( Stem("karlekarl"), "karlekarl");});
test("karlen -> karl", function() {deepEqual( Stem("karlen"), "karl");});
test("karlmark -> karlmark", function() {deepEqual( Stem("karlmark"), "karlmark");});
test("karlmarken -> karlmark", function() {deepEqual( Stem("karlmarken"), "karlmark");});
test("karlmarkens -> karlmark", function() {deepEqual( Stem("karlmarkens"), "karlmark");});
test("karlmarks -> karlmark", function() {deepEqual( Stem("karlmarks"), "karlmark");});
test("karlmarkskan -> karlmarkskan", function() {deepEqual( Stem("karlmarkskan"), "karlmarkskan");});
test("karls -> karl", function() {deepEqual( Stem("karls"), "karl");});
test("karlske -> karlsk", function() {deepEqual( Stem("karlske"), "karlsk");});
test("karlskepnad -> karlskepn", function() {deepEqual( Stem("karlskepnad"), "karlskepn");});
test("karmrater -> karmrat", function() {deepEqual( Stem("karmrater"), "karmrat");});
test("karmrern -> karmr", function() {deepEqual( Stem("karmrern"), "karmr");});
test("karmstol -> karmstol", function() {deepEqual( Stem("karmstol"), "karmstol");});
test("karna -> karn", function() {deepEqual( Stem("karna"), "karn");});
test("karo -> karo", function() {deepEqual( Stem("karo"), "karo");});
test("karolin -> karolin", function() {deepEqual( Stem("karolin"), "karolin");});
test("karolina -> karolin", function() {deepEqual( Stem("karolina"), "karolin");});
test("kaross -> kaross", function() {deepEqual( Stem("kaross"), "kaross");});
test("karott -> karot", function() {deepEqual( Stem("karott"), "karot");});
test("karriär -> karriär", function() {deepEqual( Stem("karriär"), "karriär");});
test("karriärsynpunkt -> karriärsynpunk", function() {deepEqual( Stem("karriärsynpunkt"), "karriärsynpunk");});
test("karta -> kart", function() {deepEqual( Stem("karta"), "kart");});
test("kartan -> kartan", function() {deepEqual( Stem("kartan"), "kartan");});
test("kartonger -> kartong", function() {deepEqual( Stem("kartonger"), "kartong");});
test("karusell -> karusell", function() {deepEqual( Stem("karusell"), "karusell");});
test("karusellen -> karusell", function() {deepEqual( Stem("karusellen"), "karusell");});
test("karva -> karv", function() {deepEqual( Stem("karva"), "karv");});
test("karvat -> karv", function() {deepEqual( Stem("karvat"), "karv");});
test("kas -> kas", function() {deepEqual( Stem("kas"), "kas");});
test("kaskader -> kaskad", function() {deepEqual( Stem("kaskader"), "kaskad");});
test("kassa -> kass", function() {deepEqual( Stem("kassa"), "kass");});
test("kassaboken -> kassabok", function() {deepEqual( Stem("kassaboken"), "kassabok");});
test("kassabokens -> kassabok", function() {deepEqual( Stem("kassabokens"), "kassabok");});
test("kassaböcker -> kassaböck", function() {deepEqual( Stem("kassaböcker"), "kassaböck");});
test("kassadirektör -> kassadirektör", function() {deepEqual( Stem("kassadirektör"), "kassadirektör");});
test("kassakista -> kassakist", function() {deepEqual( Stem("kassakista"), "kassakist");});
test("kassan -> kassan", function() {deepEqual( Stem("kassan"), "kassan");});
test("kasta -> kast", function() {deepEqual( Stem("kasta"), "kast");});
test("kastad -> kast", function() {deepEqual( Stem("kastad"), "kast");});
test("kastadc -> kastadc", function() {deepEqual( Stem("kastadc"), "kastadc");});
test("kastade -> kast", function() {deepEqual( Stem("kastade"), "kast");});
test("kastades -> kast", function() {deepEqual( Stem("kastades"), "kast");});
test("kastande -> kast", function() {deepEqual( Stem("kastande"), "kast");});
test("kastanje -> kastanj", function() {deepEqual( Stem("kastanje"), "kastanj");});
test("kastanjebruna -> kastanjebrun", function() {deepEqual( Stem("kastanjebruna"), "kastanjebrun");});
test("kastanjen -> kastanj", function() {deepEqual( Stem("kastanjen"), "kastanj");});
test("kastanjer -> kastanj", function() {deepEqual( Stem("kastanjer"), "kastanj");});
test("kastanjernas -> kastanj", function() {deepEqual( Stem("kastanjernas"), "kastanj");});
test("kastanjeträd -> kastanjeträd", function() {deepEqual( Stem("kastanjeträd"), "kastanjeträd");});
test("kastanjeträden -> kastanjeträd", function() {deepEqual( Stem("kastanjeträden"), "kastanjeträd");});
test("kastar -> kast", function() {deepEqual( Stem("kastar"), "kast");});
test("kastas -> kast", function() {deepEqual( Stem("kastas"), "kast");});
test("kastat -> kast", function() {deepEqual( Stem("kastat"), "kast");});
test("kastats -> kastat", function() {deepEqual( Stem("kastats"), "kastat");});
test("kastellan -> kastellan", function() {deepEqual( Stem("kastellan"), "kastellan");});
test("kasus -> kasus", function() {deepEqual( Stem("kasus"), "kasus");});
test("katarina -> katarin", function() {deepEqual( Stem("katarina"), "katarin");});
test("katastrof -> katastrof", function() {deepEqual( Stem("katastrof"), "katastrof");});
test("katedcrn -> katedcrn", function() {deepEqual( Stem("katedcrn"), "katedcrn");});
test("kateder -> kated", function() {deepEqual( Stem("kateder"), "kated");});
test("katedern -> kated", function() {deepEqual( Stem("katedern"), "kated");});
test("katedrals -> katedral", function() {deepEqual( Stem("katedrals"), "katedral");});
test("katekesen -> katekes", function() {deepEqual( Stem("katekesen"), "katekes");});
test("katolik -> katolik", function() {deepEqual( Stem("katolik"), "katolik");});
test("katolsk -> katolsk", function() {deepEqual( Stem("katolsk"), "katolsk");});
test("katolska -> katolsk", function() {deepEqual( Stem("katolska"), "katolsk");});
test("katrina -> katrin", function() {deepEqual( Stem("katrina"), "katrin");});
test("katrinadagen -> katrinadag", function() {deepEqual( Stem("katrinadagen"), "katrinadag");});
test("katrinas -> katrin", function() {deepEqual( Stem("katrinas"), "katrin");});
test("katsor -> kats", function() {deepEqual( Stem("katsor"), "kats");});
test("katt -> katt", function() {deepEqual( Stem("katt"), "katt");});
test("katta -> katt", function() {deepEqual( Stem("katta"), "katt");});
test("kattdjur -> kattdjur", function() {deepEqual( Stem("kattdjur"), "kattdjur");});
test("katten -> katt", function() {deepEqual( Stem("katten"), "katt");});
test("kattens -> katt", function() {deepEqual( Stem("kattens"), "katt");});
test("kattlik -> kattlik", function() {deepEqual( Stem("kattlik"), "kattlik");});
test("kattmusik -> kattmusik", function() {deepEqual( Stem("kattmusik"), "kattmusik");});
test("kattor -> katt", function() {deepEqual( Stem("kattor"), "katt");});
test("katts -> katt", function() {deepEqual( Stem("katts"), "katt");});
test("kattuner -> kattun", function() {deepEqual( Stem("kattuner"), "kattun");});
test("kattuns -> kattun", function() {deepEqual( Stem("kattuns"), "kattun");});
test("kattunsgardiner -> kattunsgardin", function() {deepEqual( Stem("kattunsgardiner"), "kattunsgardin");});
test("kattunsklädningen -> kattunsklädning", function() {deepEqual( Stem("kattunsklädningen"), "kattunsklädning");});
test("kattunstycken -> kattunstyck", function() {deepEqual( Stem("kattunstycken"), "kattunstyck");});
test("kavaj -> kavaj", function() {deepEqual( Stem("kavaj"), "kavaj");});
test("kavajfickorna -> kavajfick", function() {deepEqual( Stem("kavajfickorna"), "kavajfick");});
test("kavajkostym -> kavajkostym", function() {deepEqual( Stem("kavajkostym"), "kavajkostym");});
test("kavaljer -> kavalj", function() {deepEqual( Stem("kavaljer"), "kavalj");});
test("kavaljererna -> kavaljer", function() {deepEqual( Stem("kavaljererna"), "kavaljer");});
test("kavaljern -> kavalj", function() {deepEqual( Stem("kavaljern"), "kavalj");});
test("kavaljersmaner -> kavaljersman", function() {deepEqual( Stem("kavaljersmaner"), "kavaljersman");});
test("kavata -> kavat", function() {deepEqual( Stem("kavata"), "kavat");});
test("kavet -> kavet", function() {deepEqual( Stem("kavet"), "kavet");});
test("kaxig -> kax", function() {deepEqual( Stem("kaxig"), "kax");});
test("kedja -> kedj", function() {deepEqual( Stem("kedja"), "kedj");});
test("kedjan -> kedjan", function() {deepEqual( Stem("kedjan"), "kedjan");});
test("kedjor -> kedj", function() {deepEqual( Stem("kedjor"), "kedj");});
test("kejsare -> kejs", function() {deepEqual( Stem("kejsare"), "kejs");});
test("kejsarinna -> kejsarin", function() {deepEqual( Stem("kejsarinna"), "kejsarin");});
test("kela -> kel", function() {deepEqual( Stem("kela"), "kel");});
test("kellnern -> kelln", function() {deepEqual( Stem("kellnern"), "kelln");});
test("kelser -> kels", function() {deepEqual( Stem("kelser"), "kels");});
test("kelt -> kelt", function() {deepEqual( Stem("kelt"), "kelt");});
test("ken -> ken", function() {deepEqual( Stem("ken"), "ken");});
test("kered -> kered", function() {deepEqual( Stem("kered"), "kered");});
test("kerstin -> kerstin", function() {deepEqual( Stem("kerstin"), "kerstin");});
test("kerstins -> kerstin", function() {deepEqual( Stem("kerstins"), "kerstin");});
test("kerub -> kerub", function() {deepEqual( Stem("kerub"), "kerub");});
test("kestner -> kestn", function() {deepEqual( Stem("kestner"), "kestn");});
test("kestners -> kestner", function() {deepEqual( Stem("kestners"), "kestner");});
test("khngade -> khngad", function() {deepEqual( Stem("khngade"), "khngad");});
test("kiang -> kiang", function() {deepEqual( Stem("kiang"), "kiang");});
test("kickade -> kick", function() {deepEqual( Stem("kickade"), "kick");});
test("kiga -> kig", function() {deepEqual( Stem("kiga"), "kig");});
test("kihlberg -> kihlberg", function() {deepEqual( Stem("kihlberg"), "kihlberg");});
test("kikade -> kik", function() {deepEqual( Stem("kikade"), "kik");});
test("kikaren -> kik", function() {deepEqual( Stem("kikaren"), "kik");});
test("kiksögon -> kiksögon", function() {deepEqual( Stem("kiksögon"), "kiksögon");});
test("kilade -> kil", function() {deepEqual( Stem("kilade"), "kil");});
test("killingsfäll -> killingsfäll", function() {deepEqual( Stem("killingsfäll"), "killingsfäll");});
test("kin -> kin", function() {deepEqual( Stem("kin"), "kin");});
test("kind -> kind", function() {deepEqual( Stem("kind"), "kind");});
test("kindben -> kindb", function() {deepEqual( Stem("kindben"), "kindb");});
test("kindbenet -> kindbenet", function() {deepEqual( Stem("kindbenet"), "kindbenet");});
test("kinden -> kind", function() {deepEqual( Stem("kinden"), "kind");});
test("kindens -> kind", function() {deepEqual( Stem("kindens"), "kind");});
test("kinder -> kind", function() {deepEqual( Stem("kinder"), "kind");});
test("kinderna -> kind", function() {deepEqual( Stem("kinderna"), "kind");});
test("kindknotor -> kindknot", function() {deepEqual( Stem("kindknotor"), "kindknot");});
test("kinesisk -> kinesisk", function() {deepEqual( Stem("kinesisk"), "kinesisk");});
test("kinesiska -> kinesisk", function() {deepEqual( Stem("kinesiska"), "kinesisk");});
test("kinkig -> kink", function() {deepEqual( Stem("kinkig"), "kink");});
test("kinkiga -> kink", function() {deepEqual( Stem("kinkiga"), "kink");});
test("kinkigare -> kink", function() {deepEqual( Stem("kinkigare"), "kink");});
test("kinkigt -> kink", function() {deepEqual( Stem("kinkigt"), "kink");});
test("kippa -> kipp", function() {deepEqual( Stem("kippa"), "kipp");});
test("kippskor -> kippsk", function() {deepEqual( Stem("kippskor"), "kippsk");});
test("kirurgen -> kirurg", function() {deepEqual( Stem("kirurgen"), "kirurg");});
test("kirurger -> kirurg", function() {deepEqual( Stem("kirurger"), "kirurg");});
test("kisade -> kis", function() {deepEqual( Stem("kisade"), "kis");});
test("kisande -> kis", function() {deepEqual( Stem("kisande"), "kis");});
test("kiselstenar -> kiselsten", function() {deepEqual( Stem("kiselstenar"), "kiselsten");});
test("kista -> kist", function() {deepEqual( Stem("kista"), "kist");});
test("kistan -> kistan", function() {deepEqual( Stem("kistan"), "kistan");});
test("kistlock -> kistlock", function() {deepEqual( Stem("kistlock"), "kistlock");});
test("kistor -> kist", function() {deepEqual( Stem("kistor"), "kist");});
test("kitslighet -> kits", function() {deepEqual( Stem("kitslighet"), "kits");});
test("kitta -> kitt", function() {deepEqual( Stem("kitta"), "kitt");});
test("kittel -> kittel", function() {deepEqual( Stem("kittel"), "kittel");});
test("kittla -> kittl", function() {deepEqual( Stem("kittla"), "kittl");});
test("kittlade -> kittl", function() {deepEqual( Stem("kittlade"), "kittl");});
test("kittlande -> kittl", function() {deepEqual( Stem("kittlande"), "kittl");});
test("kiv -> kiv", function() {deepEqual( Stem("kiv"), "kiv");});
test("kjol -> kjol", function() {deepEqual( Stem("kjol"), "kjol");});
test("kjolar -> kjol", function() {deepEqual( Stem("kjolar"), "kjol");});
test("kjolarna -> kjol", function() {deepEqual( Stem("kjolarna"), "kjol");});
test("kjolen -> kjol", function() {deepEqual( Stem("kjolen"), "kjol");});
test("kjolkanten -> kjolkant", function() {deepEqual( Stem("kjolkanten"), "kjolkant");});
test("kjolsäck -> kjolsäck", function() {deepEqual( Stem("kjolsäck"), "kjolsäck");});
test("kjortel -> kjortel", function() {deepEqual( Stem("kjortel"), "kjortel");});
test("kjortelfållar -> kjortelfåll", function() {deepEqual( Stem("kjortelfållar"), "kjortelfåll");});
test("kjortelsäck -> kjortelsäck", function() {deepEqual( Stem("kjortelsäck"), "kjortelsäck");});
test("kjortelsäcken -> kjortelsäck", function() {deepEqual( Stem("kjortelsäcken"), "kjortelsäck");});
test("kjortlarna -> kjortl", function() {deepEqual( Stem("kjortlarna"), "kjortl");});
test("kla -> kla", function() {deepEqual( Stem("kla"), "kla");});
test("klack -> klack", function() {deepEqual( Stem("klack"), "klack");});
test("klackar -> klack", function() {deepEqual( Stem("klackar"), "klack");});
test("klackarna -> klack", function() {deepEqual( Stem("klackarna"), "klack");});
test("klader -> klad", function() {deepEqual( Stem("klader"), "klad");});
test("klaffbord -> klaffbord", function() {deepEqual( Stem("klaffbord"), "klaffbord");});
test("klaffen -> klaff", function() {deepEqual( Stem("klaffen"), "klaff");});
test("klaga -> klag", function() {deepEqual( Stem("klaga"), "klag");});
test("klagade -> klag", function() {deepEqual( Stem("klagade"), "klag");});
test("klagan -> klagan", function() {deepEqual( Stem("klagan"), "klagan");});
test("klagande -> klag", function() {deepEqual( Stem("klagande"), "klag");});
test("klagar -> klag", function() {deepEqual( Stem("klagar"), "klag");});
test("klagat -> klag", function() {deepEqual( Stem("klagat"), "klag");});
test("klagomål -> klagomål", function() {deepEqual( Stem("klagomål"), "klagomål");});
test("klampade -> klamp", function() {deepEqual( Stem("klampade"), "klamp");});
test("klander -> kland", function() {deepEqual( Stem("klander"), "kland");});
test("klandra -> klandr", function() {deepEqual( Stem("klandra"), "klandr");});
test("klandrade -> klandr", function() {deepEqual( Stem("klandrade"), "klandr");});
test("klandrar -> klandr", function() {deepEqual( Stem("klandrar"), "klandr");});
test("klang -> klang", function() {deepEqual( Stem("klang"), "klang");});
test("klangen -> klang", function() {deepEqual( Stem("klangen"), "klang");});
test("klangfull -> klangfull", function() {deepEqual( Stem("klangfull"), "klangfull");});
test("klangfärg -> klangfärg", function() {deepEqual( Stem("klangfärg"), "klangfärg");});
test("klanningsficka -> klanningsfick", function() {deepEqual( Stem("klanningsficka"), "klanningsfick");});
test("klapp -> klapp", function() {deepEqual( Stem("klapp"), "klapp");});
test("klappa -> klapp", function() {deepEqual( Stem("klappa"), "klapp");});
test("klappade -> klapp", function() {deepEqual( Stem("klappade"), "klapp");});
test("klappande -> klapp", function() {deepEqual( Stem("klappande"), "klapp");});
test("klappar -> klapp", function() {deepEqual( Stem("klappar"), "klapp");});
test("klappat -> klapp", function() {deepEqual( Stem("klappat"), "klapp");});
test("klappning -> klappning", function() {deepEqual( Stem("klappning"), "klappning");});
test("klapprade -> klappr", function() {deepEqual( Stem("klapprade"), "klappr");});
test("klapprande -> klappr", function() {deepEqual( Stem("klapprande"), "klappr");});
test("klapprandet -> klappr", function() {deepEqual( Stem("klapprandet"), "klappr");});
test("klar -> klar", function() {deepEqual( Stem("klar"), "klar");});
test("klara -> klar", function() {deepEqual( Stem("klara"), "klar");});
test("klarar -> klar", function() {deepEqual( Stem("klarar"), "klar");});
test("klarare -> klar", function() {deepEqual( Stem("klarare"), "klar");});
test("klaraste -> klar", function() {deepEqual( Stem("klaraste"), "klar");});
test("klarbla -> klarbl", function() {deepEqual( Stem("klarbla"), "klarbl");});
test("klarbär -> klarbär", function() {deepEqual( Stem("klarbär"), "klarbär");});
test("klarhet -> klar", function() {deepEqual( Stem("klarhet"), "klar");});
test("klarna -> klarn", function() {deepEqual( Stem("klarna"), "klarn");});
test("klarnade -> klarn", function() {deepEqual( Stem("klarnade"), "klarn");});
test("klarnar -> klarn", function() {deepEqual( Stem("klarnar"), "klarn");});
test("klart -> klart", function() {deepEqual( Stem("klart"), "klart");});
test("klarögd -> klarög", function() {deepEqual( Stem("klarögd"), "klarög");});
test("klarögda -> klarög", function() {deepEqual( Stem("klarögda"), "klarög");});
test("klas -> klas", function() {deepEqual( Stem("klas"), "klas");});
test("klasar -> klas", function() {deepEqual( Stem("klasar"), "klas");});
test("klass -> klass", function() {deepEqual( Stem("klass"), "klass");});
test("klassbildning -> klassbildning", function() {deepEqual( Stem("klassbildning"), "klassbildning");});
test("klassen -> klass", function() {deepEqual( Stem("klassen"), "klass");});
test("klassens -> klass", function() {deepEqual( Stem("klassens"), "klass");});
test("klasser -> klass", function() {deepEqual( Stem("klasser"), "klass");});
test("klasserna -> klass", function() {deepEqual( Stem("klasserna"), "klass");});
test("klassföreståndarinnan -> klassföreståndarinnan", function() {deepEqual( Stem("klassföreståndarinnan"), "klassföreståndarinnan");});
test("klassifikationssystem -> klassifikationssystem", function() {deepEqual( Stem("klassifikationssystem"), "klassifikationssystem");});
test("klasskamrat -> klasskamr", function() {deepEqual( Stem("klasskamrat"), "klasskamr");});
test("klasskamraten -> klasskamrat", function() {deepEqual( Stem("klasskamraten"), "klasskamrat");});
test("klasskamrater -> klasskamrat", function() {deepEqual( Stem("klasskamrater"), "klasskamrat");});
test("klassrum -> klassrum", function() {deepEqual( Stem("klassrum"), "klassrum");});
test("klassrummen -> klassrumm", function() {deepEqual( Stem("klassrummen"), "klassrumm");});
test("klassrummet -> klassrummet", function() {deepEqual( Stem("klassrummet"), "klassrummet");});
test("klatsch -> klatsch", function() {deepEqual( Stem("klatsch"), "klatsch");});
test("klaver -> klav", function() {deepEqual( Stem("klaver"), "klav");});
test("klaveret -> klaveret", function() {deepEqual( Stem("klaveret"), "klaveret");});
test("kled -> kled", function() {deepEqual( Stem("kled"), "kled");});
test("klef -> klef", function() {deepEqual( Stem("klef"), "klef");});
test("klemade -> klem", function() {deepEqual( Stem("klemade"), "klem");});
test("klemande -> klem", function() {deepEqual( Stem("klemande"), "klem");});
test("klemandet -> klem", function() {deepEqual( Stem("klemandet"), "klem");});
test("klen -> klen", function() {deepEqual( Stem("klen"), "klen");});
test("klena -> klen", function() {deepEqual( Stem("klena"), "klen");});
test("klenod -> klenod", function() {deepEqual( Stem("klenod"), "klenod");});
test("klenoder -> klenod", function() {deepEqual( Stem("klenoder"), "klenod");});
test("klenoders -> klenoder", function() {deepEqual( Stem("klenoders"), "klenoder");});
test("klent -> klent", function() {deepEqual( Stem("klent"), "klent");});
test("klentrogne -> klentrogn", function() {deepEqual( Stem("klentrogne"), "klentrogn");});
test("kleptoman -> kleptoman", function() {deepEqual( Stem("kleptoman"), "kleptoman");});
test("klev -> klev", function() {deepEqual( Stem("klev"), "klev");});
test("kli -> kli", function() {deepEqual( Stem("kli"), "kli");});
test("kliar -> kliar", function() {deepEqual( Stem("kliar"), "kliar");});
test("kliat -> kliat", function() {deepEqual( Stem("kliat"), "kliat");});
test("klibbade -> klibb", function() {deepEqual( Stem("klibbade"), "klibb");});
test("klibbar -> klibb", function() {deepEqual( Stem("klibbar"), "klibb");});
test("klibbat -> klibb", function() {deepEqual( Stem("klibbat"), "klibb");});
test("klimat -> klim", function() {deepEqual( Stem("klimat"), "klim");});
test("klinga -> kling", function() {deepEqual( Stem("klinga"), "kling");});
test("klingade -> kling", function() {deepEqual( Stem("klingade"), "kling");});
test("klingallde -> klingalld", function() {deepEqual( Stem("klingallde"), "klingalld");});
test("klingand -> klingand", function() {deepEqual( Stem("klingand"), "klingand");});
test("klingande -> kling", function() {deepEqual( Stem("klingande"), "kling");});
test("klingar -> kling", function() {deepEqual( Stem("klingar"), "kling");});
test("klinkan -> klinkan", function() {deepEqual( Stem("klinkan"), "klinkan");});
test("klintar -> klint", function() {deepEqual( Stem("klintar"), "klint");});
test("klippa -> klipp", function() {deepEqual( Stem("klippa"), "klipp");});
test("klippan -> klippan", function() {deepEqual( Stem("klippan"), "klippan");});
test("klipper -> klipp", function() {deepEqual( Stem("klipper"), "klipp");});
test("klipphålorna -> klipphål", function() {deepEqual( Stem("klipphålorna"), "klipphål");});
test("klippiga -> klipp", function() {deepEqual( Stem("klippiga"), "klipp");});
test("klippmassor -> klippmass", function() {deepEqual( Stem("klippmassor"), "klippmass");});
test("klippor -> klipp", function() {deepEqual( Stem("klippor"), "klipp");});
test("klipporna -> klipp", function() {deepEqual( Stem("klipporna"), "klipp");});
test("klippt -> klippt", function() {deepEqual( Stem("klippt"), "klippt");});
test("klippte -> klippt", function() {deepEqual( Stem("klippte"), "klippt");});
test("klipptopparne -> klipptopp", function() {deepEqual( Stem("klipptopparne"), "klipptopp");});
test("klipska -> klipsk", function() {deepEqual( Stem("klipska"), "klipsk");});
test("klirrade -> klirr", function() {deepEqual( Stem("klirrade"), "klirr");});
test("klirrande -> klirr", function() {deepEqual( Stem("klirrande"), "klirr");});
test("kliv -> kliv", function() {deepEqual( Stem("kliv"), "kliv");});
test("kliva -> kliv", function() {deepEqual( Stem("kliva"), "kliv");});
test("klo -> klo", function() {deepEqual( Stem("klo"), "klo");});
test("kloaken -> kloak", function() {deepEqual( Stem("kloaken"), "kloak");});
test("klock -> klock", function() {deepEqual( Stem("klock"), "klock");});
test("klocka -> klock", function() {deepEqual( Stem("klocka"), "klock");});
test("klockan -> klockan", function() {deepEqual( Stem("klockan"), "klockan");});
test("klockans -> klockan", function() {deepEqual( Stem("klockans"), "klockan");});
test("klockare -> klock", function() {deepEqual( Stem("klockare"), "klock");});
test("klockaren -> klock", function() {deepEqual( Stem("klockaren"), "klock");});
test("klockarens -> klock", function() {deepEqual( Stem("klockarens"), "klock");});
test("klockarfar -> klockarf", function() {deepEqual( Stem("klockarfar"), "klockarf");});
test("klockarn -> klockarn", function() {deepEqual( Stem("klockarn"), "klockarn");});
test("klockarsonen -> klockarson", function() {deepEqual( Stem("klockarsonen"), "klockarson");});
test("klockas -> klock", function() {deepEqual( Stem("klockas"), "klock");});
test("klockkedjan -> klockkedjan", function() {deepEqual( Stem("klockkedjan"), "klockkedjan");});
test("klocklikt -> klocklik", function() {deepEqual( Stem("klocklikt"), "klocklik");});
test("klockor -> klock", function() {deepEqual( Stem("klockor"), "klock");});
test("klockorna -> klock", function() {deepEqual( Stem("klockorna"), "klock");});
test("klockornas -> klock", function() {deepEqual( Stem("klockornas"), "klock");});
test("klockors -> klockor", function() {deepEqual( Stem("klockors"), "klockor");});
test("klockringning -> klockringning", function() {deepEqual( Stem("klockringning"), "klockringning");});
test("kloekornas -> kloek", function() {deepEqual( Stem("kloekornas"), "kloek");});
test("klok -> klok", function() {deepEqual( Stem("klok"), "klok");});
test("kloka -> klok", function() {deepEqual( Stem("kloka"), "klok");});
test("klokare -> klok", function() {deepEqual( Stem("klokare"), "klok");});
test("klokast -> klok", function() {deepEqual( Stem("klokast"), "klok");});
test("klokaste -> klok", function() {deepEqual( Stem("klokaste"), "klok");});
test("kloke -> klok", function() {deepEqual( Stem("kloke"), "klok");});
test("klokhet -> klok", function() {deepEqual( Stem("klokhet"), "klok");});
test("klokheten -> klok", function() {deepEqual( Stem("klokheten"), "klok");});
test("klokt -> klokt", function() {deepEqual( Stem("klokt"), "klokt");});
test("kloliknande -> klolikn", function() {deepEqual( Stem("kloliknande"), "klolikn");});
test("klor -> klor", function() {deepEqual( Stem("klor"), "klor");});
test("klorna -> klorn", function() {deepEqual( Stem("klorna"), "klorn");});
test("kloroform -> kloroform", function() {deepEqual( Stem("kloroform"), "kloroform");});
test("kloster -> klost", function() {deepEqual( Stem("kloster"), "klost");});
test("klostergården -> klostergård", function() {deepEqual( Stem("klostergården"), "klostergård");});
test("klosterlik -> klosterlik", function() {deepEqual( Stem("klosterlik"), "klosterlik");});
test("klot -> klot", function() {deepEqual( Stem("klot"), "klot");});
test("klotb -> klotb", function() {deepEqual( Stem("klotb"), "klotb");});
test("klotrund -> klotrund", function() {deepEqual( Stem("klotrund"), "klotrund");});
test("klotrunda -> klotrund", function() {deepEqual( Stem("klotrunda"), "klotrund");});
test("klotrunt -> klotrunt", function() {deepEqual( Stem("klotrunt"), "klotrunt");});
test("klskade -> klskad", function() {deepEqual( Stem("klskade"), "klskad");});
test("klubba -> klubb", function() {deepEqual( Stem("klubba"), "klubb");});
test("klubban -> klubban", function() {deepEqual( Stem("klubban"), "klubban");});
test("klubben -> klubb", function() {deepEqual( Stem("klubben"), "klubb");});
test("kludderi -> kludderi", function() {deepEqual( Stem("kludderi"), "kludderi");});
test("klump -> klump", function() {deepEqual( Stem("klump"), "klump");});
test("klumpen -> klump", function() {deepEqual( Stem("klumpen"), "klump");});
test("klumpig -> klump", function() {deepEqual( Stem("klumpig"), "klump");});
test("klungan -> klungan", function() {deepEqual( Stem("klungan"), "klungan");});
test("klunk -> klunk", function() {deepEqual( Stem("klunk"), "klunk");});
test("klunkar -> klunk", function() {deepEqual( Stem("klunkar"), "klunk");});
test("klyftigheterna -> klyft", function() {deepEqual( Stem("klyftigheterna"), "klyft");});
test("klyftor -> klyft", function() {deepEqual( Stem("klyftor"), "klyft");});
test("klyfver -> klyfv", function() {deepEqual( Stem("klyfver"), "klyfv");});
test("klynka -> klynk", function() {deepEqual( Stem("klynka"), "klynk");});
test("klynkade -> klynk", function() {deepEqual( Stem("klynkade"), "klynk");});
test("klyva -> klyv", function() {deepEqual( Stem("klyva"), "klyv");});
test("klyvas -> klyv", function() {deepEqual( Stem("klyvas"), "klyv");});
test("klä -> klä", function() {deepEqual( Stem("klä"), "klä");});
test("kläd -> kläd", function() {deepEqual( Stem("kläd"), "kläd");});
test("kläda -> kläd", function() {deepEqual( Stem("kläda"), "kläd");});
test("klädas -> kläd", function() {deepEqual( Stem("klädas"), "kläd");});
test("klädd -> klädd", function() {deepEqual( Stem("klädd"), "klädd");});
test("klädda -> klädd", function() {deepEqual( Stem("klädda"), "klädd");});
test("klädde -> klädd", function() {deepEqual( Stem("klädde"), "klädd");});
test("kläde -> kläd", function() {deepEqual( Stem("kläde"), "kläd");});
test("klädedrägt -> klädedräg", function() {deepEqual( Stem("klädedrägt"), "klädedräg");});
test("kläden -> kläd", function() {deepEqual( Stem("kläden"), "kläd");});
test("kläder -> kläd", function() {deepEqual( Stem("kläder"), "kläd");});
test("kläderna -> kläd", function() {deepEqual( Stem("kläderna"), "kläd");});
test("klädernas -> kläd", function() {deepEqual( Stem("klädernas"), "kläd");});
test("klädespersedel -> klädespersedel", function() {deepEqual( Stem("klädespersedel"), "klädespersedel");});
test("klädespersedeln -> klädespersedeln", function() {deepEqual( Stem("klädespersedeln"), "klädespersedeln");});
test("klädespersedlarne -> klädespersedl", function() {deepEqual( Stem("klädespersedlarne"), "klädespersedl");});
test("klädkorg -> klädkorg", function() {deepEqual( Stem("klädkorg"), "klädkorg");});
test("klädmäklaredotter -> klädmäklaredot", function() {deepEqual( Stem("klädmäklaredotter"), "klädmäklaredot");});
test("klädnad -> klädn", function() {deepEqual( Stem("klädnad"), "klädn");});
test("klädning -> klädning", function() {deepEqual( Stem("klädning"), "klädning");});
test("klädningar -> klädning", function() {deepEqual( Stem("klädningar"), "klädning");});
test("klädningarna -> klädning", function() {deepEqual( Stem("klädningarna"), "klädning");});
test("klädningarnas -> klädning", function() {deepEqual( Stem("klädningarnas"), "klädning");});
test("klädningarne -> klädning", function() {deepEqual( Stem("klädningarne"), "klädning");});
test("klädningen -> klädning", function() {deepEqual( Stem("klädningen"), "klädning");});
test("klädningsliv -> klädningsliv", function() {deepEqual( Stem("klädningsliv"), "klädningsliv");});
test("klädsam -> klädsam", function() {deepEqual( Stem("klädsam"), "klädsam");});
test("klädsel -> klädsel", function() {deepEqual( Stem("klädsel"), "klädsel");});
test("klädseln -> klädseln", function() {deepEqual( Stem("klädseln"), "klädseln");});
test("klädstand -> klädstand", function() {deepEqual( Stem("klädstand"), "klädstand");});
test("klädstånd -> klädstånd", function() {deepEqual( Stem("klädstånd"), "klädstånd");});
test("klädståndet -> klädståndet", function() {deepEqual( Stem("klädståndet"), "klädståndet");});
test("klädståndsfru -> klädståndsfru", function() {deepEqual( Stem("klädståndsfru"), "klädståndsfru");});
test("klädståndsfruar -> klädståndsfru", function() {deepEqual( Stem("klädståndsfruar"), "klädståndsfru");});
test("klädståndsfrun -> klädståndsfrun", function() {deepEqual( Stem("klädståndsfrun"), "klädståndsfrun");});
test("klädståndsfruns -> klädståndsfrun", function() {deepEqual( Stem("klädståndsfruns"), "klädståndsfrun");});
test("klädståndsluften -> klädståndsluft", function() {deepEqual( Stem("klädståndsluften"), "klädståndsluft");});
test("klämde -> klämd", function() {deepEqual( Stem("klämde"), "klämd");});
test("klämma -> klämm", function() {deepEqual( Stem("klämma"), "klämm");});
test("klämman -> klämman", function() {deepEqual( Stem("klämman"), "klämman");});
test("klämt -> klämt", function() {deepEqual( Stem("klämt"), "klämt");});
test("klämtade -> klämt", function() {deepEqual( Stem("klämtade"), "klämt");});
test("klämtande -> klämt", function() {deepEqual( Stem("klämtande"), "klämt");});
test("klämtat -> klämt", function() {deepEqual( Stem("klämtat"), "klämt");});
test("klämtslag -> klämtslag", function() {deepEqual( Stem("klämtslag"), "klämtslag");});
test("klämtslaget -> klämtslaget", function() {deepEqual( Stem("klämtslaget"), "klämtslaget");});
test("klän -> klän", function() {deepEqual( Stem("klän"), "klän");});
test("klänga -> kläng", function() {deepEqual( Stem("klänga"), "kläng");});
test("klängde -> kläng", function() {deepEqual( Stem("klängde"), "kläng");});
test("klänning -> klänning", function() {deepEqual( Stem("klänning"), "klänning");});
test("klänningar -> klänning", function() {deepEqual( Stem("klänningar"), "klänning");});
test("klänningen -> klänning", function() {deepEqual( Stem("klänningen"), "klänning");});
test("klänningsficka -> klänningsfick", function() {deepEqual( Stem("klänningsficka"), "klänningsfick");});
test("klänningskjol -> klänningskjol", function() {deepEqual( Stem("klänningskjol"), "klänningskjol");});
test("klänningslivet -> klänningslivet", function() {deepEqual( Stem("klänningslivet"), "klänningslivet");});
test("klänningstyget -> klänningstyget", function() {deepEqual( Stem("klänningstyget"), "klänningstyget");});
test("kläp -> kläp", function() {deepEqual( Stem("kläp"), "kläp");});
test("kläppen -> kläpp", function() {deepEqual( Stem("kläppen"), "kläpp");});
test("klär -> klär", function() {deepEqual( Stem("klär"), "klär");});
test("klätt -> klätt", function() {deepEqual( Stem("klätt"), "klätt");});
test("klättra -> klättr", function() {deepEqual( Stem("klättra"), "klättr");});
test("klättrade -> klättr", function() {deepEqual( Stem("klättrade"), "klättr");});
test("klättrande -> klättr", function() {deepEqual( Stem("klättrande"), "klättr");});
test("klättrar -> klättr", function() {deepEqual( Stem("klättrar"), "klättr");});
test("klättrarnas -> klättr", function() {deepEqual( Stem("klättrarnas"), "klättr");});
test("klåda -> klåd", function() {deepEqual( Stem("klåda"), "klåd");});
test("klådde -> klådd", function() {deepEqual( Stem("klådde"), "klådd");});
test("klåfingrigt -> klåfingr", function() {deepEqual( Stem("klåfingrigt"), "klåfingr");});
test("klömde -> klömd", function() {deepEqual( Stem("klömde"), "klömd");});
test("klöv -> klöv", function() {deepEqual( Stem("klöv"), "klöv");});
test("klöver -> klöv", function() {deepEqual( Stem("klöver"), "klöv");});
test("klöverblommor -> klöverblomm", function() {deepEqual( Stem("klöverblommor"), "klöverblomm");});
test("klövern -> klöv", function() {deepEqual( Stem("klövern"), "klöv");});
test("km -> km", function() {deepEqual( Stem("km"), "km");});
test("kna -> kna", function() {deepEqual( Stem("kna"), "kna");});
test("knaben -> knab", function() {deepEqual( Stem("knaben"), "knab");});
test("knacka -> knack", function() {deepEqual( Stem("knacka"), "knack");});
test("knackade -> knack", function() {deepEqual( Stem("knackade"), "knack");});
test("knackandet -> knack", function() {deepEqual( Stem("knackandet"), "knack");});
test("knackar -> knack", function() {deepEqual( Stem("knackar"), "knack");});
test("knackat -> knack", function() {deepEqual( Stem("knackat"), "knack");});
test("knackning -> knackning", function() {deepEqual( Stem("knackning"), "knackning");});
test("knackningen -> knackning", function() {deepEqual( Stem("knackningen"), "knackning");});
test("knaka -> knak", function() {deepEqual( Stem("knaka"), "knak");});
test("knakade -> knak", function() {deepEqual( Stem("knakade"), "knak");});
test("knakande -> knak", function() {deepEqual( Stem("knakande"), "knak");});
test("knall -> knall", function() {deepEqual( Stem("knall"), "knall");});
test("knallar -> knall", function() {deepEqual( Stem("knallar"), "knall");});
test("knap -> knap", function() {deepEqual( Stem("knap"), "knap");});
test("knapp -> knapp", function() {deepEqual( Stem("knapp"), "knapp");});
test("knappa -> knapp", function() {deepEqual( Stem("knappa"), "knapp");});
test("knappar -> knapp", function() {deepEqual( Stem("knappar"), "knapp");});
test("knapparna -> knapp", function() {deepEqual( Stem("knapparna"), "knapp");});
test("knapparne -> knapp", function() {deepEqual( Stem("knapparne"), "knapp");});
test("knappast -> knapp", function() {deepEqual( Stem("knappast"), "knapp");});
test("knapphandlare -> knapphandl", function() {deepEqual( Stem("knapphandlare"), "knapphandl");});
test("knapphandlaren -> knapphandl", function() {deepEqual( Stem("knapphandlaren"), "knapphandl");});
test("knapphål -> knapphål", function() {deepEqual( Stem("knapphål"), "knapphål");});
test("knapphålet -> knapphålet", function() {deepEqual( Stem("knapphålet"), "knapphålet");});
test("knappnål -> knappnål", function() {deepEqual( Stem("knappnål"), "knappnål");});
test("knappt -> knappt", function() {deepEqual( Stem("knappt"), "knappt");});
test("knappte -> knappt", function() {deepEqual( Stem("knappte"), "knappt");});
test("knaprade -> knapr", function() {deepEqual( Stem("knaprade"), "knapr");});
test("knapt -> knapt", function() {deepEqual( Stem("knapt"), "knapt");});
test("knarra -> knarr", function() {deepEqual( Stem("knarra"), "knarr");});
test("knarrade -> knarr", function() {deepEqual( Stem("knarrade"), "knarr");});
test("knarrande -> knarr", function() {deepEqual( Stem("knarrande"), "knarr");});
test("knarrar -> knarr", function() {deepEqual( Stem("knarrar"), "knarr");});
test("knarrigt -> knarr", function() {deepEqual( Stem("knarrigt"), "knarr");});
test("knarrningar -> knarrning", function() {deepEqual( Stem("knarrningar"), "knarrning");});
test("knarrningen -> knarrning", function() {deepEqual( Stem("knarrningen"), "knarrning");});
test("knaster -> knast", function() {deepEqual( Stem("knaster"), "knast");});
test("knastrade -> knastr", function() {deepEqual( Stem("knastrade"), "knastr");});
test("knastrande -> knastr", function() {deepEqual( Stem("knastrande"), "knastr");});
test("knekt -> knekt", function() {deepEqual( Stem("knekt"), "knekt");});
test("knektar -> knekt", function() {deepEqual( Stem("knektar"), "knekt");});
test("knep -> knep", function() {deepEqual( Stem("knep"), "knep");});
test("knepe -> knep", function() {deepEqual( Stem("knepe"), "knep");});
test("knip -> knip", function() {deepEqual( Stem("knip"), "knip");});
test("knipa -> knip", function() {deepEqual( Stem("knipa"), "knip");});
test("knipan -> knipan", function() {deepEqual( Stem("knipan"), "knipan");});
test("knipande -> knip", function() {deepEqual( Stem("knipande"), "knip");});
test("kniper -> knip", function() {deepEqual( Stem("kniper"), "knip");});
test("knippa -> knipp", function() {deepEqual( Stem("knippa"), "knipp");});
test("knippe -> knipp", function() {deepEqual( Stem("knippe"), "knipp");});
test("kniv -> kniv", function() {deepEqual( Stem("kniv"), "kniv");});
test("knivar -> kniv", function() {deepEqual( Stem("knivar"), "kniv");});
test("knivblad -> knivbl", function() {deepEqual( Stem("knivblad"), "knivbl");});
test("kniven -> kniv", function() {deepEqual( Stem("kniven"), "kniv");});
test("kno -> kno", function() {deepEqual( Stem("kno"), "kno");});
test("knogar -> knog", function() {deepEqual( Stem("knogar"), "knog");});
test("knogat -> knog", function() {deepEqual( Stem("knogat"), "knog");});
test("knopp -> knopp", function() {deepEqual( Stem("knopp"), "knopp");});
test("knoppande -> knopp", function() {deepEqual( Stem("knoppande"), "knopp");});
test("knoppar -> knopp", function() {deepEqual( Stem("knoppar"), "knopp");});
test("knopparna -> knopp", function() {deepEqual( Stem("knopparna"), "knopp");});
test("knoppas -> knopp", function() {deepEqual( Stem("knoppas"), "knopp");});
test("knoppen -> knopp", function() {deepEqual( Stem("knoppen"), "knopp");});
test("knot -> knot", function() {deepEqual( Stem("knot"), "knot");});
test("knota -> knot", function() {deepEqual( Stem("knota"), "knot");});
test("knotade -> knot", function() {deepEqual( Stem("knotade"), "knot");});
test("knotig -> knot", function() {deepEqual( Stem("knotig"), "knot");});
test("knotiga -> knot", function() {deepEqual( Stem("knotiga"), "knot");});
test("knotighet -> knot", function() {deepEqual( Stem("knotighet"), "knot");});
test("knubbig -> knubb", function() {deepEqual( Stem("knubbig"), "knubb");});
test("knubbiga -> knubb", function() {deepEqual( Stem("knubbiga"), "knubb");});
test("knuff -> knuff", function() {deepEqual( Stem("knuff"), "knuff");});
test("knuffa -> knuff", function() {deepEqual( Stem("knuffa"), "knuff");});
test("knuffade -> knuff", function() {deepEqual( Stem("knuffade"), "knuff");});
test("knuffar -> knuff", function() {deepEqual( Stem("knuffar"), "knuff");});
test("knut -> knut", function() {deepEqual( Stem("knut"), "knut");});
test("knutar -> knut", function() {deepEqual( Stem("knutar"), "knut");});
test("knutarne -> knut", function() {deepEqual( Stem("knutarne"), "knut");});
test("knuten -> knut", function() {deepEqual( Stem("knuten"), "knut");});
test("knutet -> knutet", function() {deepEqual( Stem("knutet"), "knutet");});
test("knutit -> knutit", function() {deepEqual( Stem("knutit"), "knutit");});
test("knutna -> knutn", function() {deepEqual( Stem("knutna"), "knutn");});
test("knyckar -> knyck", function() {deepEqual( Stem("knyckar"), "knyck");});
test("knyppeldynor -> knyppeldyn", function() {deepEqual( Stem("knyppeldynor"), "knyppeldyn");});
test("knyst -> knyst", function() {deepEqual( Stem("knyst"), "knyst");});
test("knysta -> knyst", function() {deepEqual( Stem("knysta"), "knyst");});
test("knyta -> knyt", function() {deepEqual( Stem("knyta"), "knyt");});
test("knytande -> knyt", function() {deepEqual( Stem("knytande"), "knyt");});
test("knyte -> knyt", function() {deepEqual( Stem("knyte"), "knyt");});
test("knyten -> knyt", function() {deepEqual( Stem("knyten"), "knyt");});
test("knyter -> knyt", function() {deepEqual( Stem("knyter"), "knyt");});
test("knä -> knä", function() {deepEqual( Stem("knä"), "knä");});
test("knäbyxor -> knäbyx", function() {deepEqual( Stem("knäbyxor"), "knäbyx");});
test("knäböjande -> knäböj", function() {deepEqual( Stem("knäböjande"), "knäböj");});
test("knäböjde -> knäböjd", function() {deepEqual( Stem("knäböjde"), "knäböjd");});
test("knäcka -> knäck", function() {deepEqual( Stem("knäcka"), "knäck");});
test("knäckebröd -> knäckebröd", function() {deepEqual( Stem("knäckebröd"), "knäckebröd");});
test("knäckt -> knäck", function() {deepEqual( Stem("knäckt"), "knäck");});
test("knäckta -> knäck", function() {deepEqual( Stem("knäckta"), "knäck");});
test("knäckte -> knäck", function() {deepEqual( Stem("knäckte"), "knäck");});
test("knäet -> knäet", function() {deepEqual( Stem("knäet"), "knäet");});
test("knäfveln -> knäfveln", function() {deepEqual( Stem("knäfveln"), "knäfveln");});
test("knän -> knän", function() {deepEqual( Stem("knän"), "knän");});
test("knäna -> knän", function() {deepEqual( Stem("knäna"), "knän");});
test("knäppa -> knäpp", function() {deepEqual( Stem("knäppa"), "knäpp");});
test("knäppande -> knäpp", function() {deepEqual( Stem("knäppande"), "knäpp");});
test("knäppen -> knäpp", function() {deepEqual( Stem("knäppen"), "knäpp");});
test("knäppning -> knäppning", function() {deepEqual( Stem("knäppning"), "knäppning");});
test("knäppt -> knäppt", function() {deepEqual( Stem("knäppt"), "knäppt");});
test("knäppta -> knäppt", function() {deepEqual( Stem("knäppta"), "knäppt");});
test("knäppte -> knäppt", function() {deepEqual( Stem("knäppte"), "knäppt");});
test("knäskålar -> knäskål", function() {deepEqual( Stem("knäskålar"), "knäskål");});
test("knät -> knät", function() {deepEqual( Stem("knät"), "knät");});
test("knäveln -> knäveln", function() {deepEqual( Stem("knäveln"), "knäveln");});
test("knöt -> knöt", function() {deepEqual( Stem("knöt"), "knöt");});
test("knötos -> knöto", function() {deepEqual( Stem("knötos"), "knöto");});
test("ko -> ko", function() {deepEqual( Stem("ko"), "ko");});
test("kocken -> kock", function() {deepEqual( Stem("kocken"), "kock");});
test("koffert -> koffert", function() {deepEqual( Stem("koffert"), "koffert");});
test("koin -> koin", function() {deepEqual( Stem("koin"), "koin");});
test("koja -> koj", function() {deepEqual( Stem("koja"), "koj");});
test("kojen -> koj", function() {deepEqual( Stem("kojen"), "koj");});
test("koka -> kok", function() {deepEqual( Stem("koka"), "kok");});
test("kokade -> kok", function() {deepEqual( Stem("kokade"), "kok");});
test("kokar -> kok", function() {deepEqual( Stem("kokar"), "kok");});
test("kokat -> kok", function() {deepEqual( Stem("kokat"), "kok");});
test("kokerier -> kokeri", function() {deepEqual( Stem("kokerier"), "kokeri");});
test("kokerskan -> kokerskan", function() {deepEqual( Stem("kokerskan"), "kokerskan");});
test("kokerskor -> kokersk", function() {deepEqual( Stem("kokerskor"), "kokersk");});
test("kokett -> koket", function() {deepEqual( Stem("kokett"), "koket");});
test("koketta -> koket", function() {deepEqual( Stem("koketta"), "koket");});
test("kokettera -> koketter", function() {deepEqual( Stem("kokettera"), "koketter");});
test("koketterar -> koketter", function() {deepEqual( Stem("koketterar"), "koketter");});
test("koketteri -> koketteri", function() {deepEqual( Stem("koketteri"), "koketteri");});
test("kokhett -> kokhet", function() {deepEqual( Stem("kokhett"), "kokhet");});
test("kokkonst -> kokkonst", function() {deepEqual( Stem("kokkonst"), "kokkonst");});
test("kokt -> kokt", function() {deepEqual( Stem("kokt"), "kokt");});
test("kokta -> kokt", function() {deepEqual( Stem("kokta"), "kokt");});
test("kol -> kol", function() {deepEqual( Stem("kol"), "kol");});
test("koleran -> koleran", function() {deepEqual( Stem("koleran"), "koleran");});
test("kolglöden -> kolglöd", function() {deepEqual( Stem("kolglöden"), "kolglöd");});
test("koliskt -> kolisk", function() {deepEqual( Stem("koliskt"), "kolisk");});
test("kollega -> kolleg", function() {deepEqual( Stem("kollega"), "kolleg");});
test("kollegan -> kollegan", function() {deepEqual( Stem("kollegan"), "kollegan");});
test("kolleger -> kolleg", function() {deepEqual( Stem("kolleger"), "kolleg");});
test("kollin -> kollin", function() {deepEqual( Stem("kollin"), "kollin");});
test("kollrig -> kollr", function() {deepEqual( Stem("kollrig"), "kollr");});
test("kolonnerna -> kolon", function() {deepEqual( Stem("kolonnerna"), "kolon");});
test("kolossal -> kolossal", function() {deepEqual( Stem("kolossal"), "kolossal");});
test("kolossala -> kolossal", function() {deepEqual( Stem("kolossala"), "kolossal");});
test("kolossale -> kolossal", function() {deepEqual( Stem("kolossale"), "kolossal");});
test("kolossalt -> kolossalt", function() {deepEqual( Stem("kolossalt"), "kolossalt");});
test("kolpor -> kolp", function() {deepEqual( Stem("kolpor"), "kolp");});
test("kolportera -> kolporter", function() {deepEqual( Stem("kolportera"), "kolporter");});
test("kolportoren -> kolportor", function() {deepEqual( Stem("kolportoren"), "kolportor");});
test("kolportör -> kolportör", function() {deepEqual( Stem("kolportör"), "kolportör");});
test("kolportören -> kolportör", function() {deepEqual( Stem("kolportören"), "kolportör");});
test("kolportörens -> kolportör", function() {deepEqual( Stem("kolportörens"), "kolportör");});
test("kolportörer -> kolportör", function() {deepEqual( Stem("kolportörer"), "kolportör");});
test("kolsvart -> kolsvart", function() {deepEqual( Stem("kolsvart"), "kolsvart");});
test("kolsvarta -> kolsvart", function() {deepEqual( Stem("kolsvarta"), "kolsvart");});
test("kolsyran -> kolsyran", function() {deepEqual( Stem("kolsyran"), "kolsyran");});
test("kolt -> kolt", function() {deepEqual( Stem("kolt"), "kolt");});
test("kolv -> kolv", function() {deepEqual( Stem("kolv"), "kolv");});
test("kom -> kom", function() {deepEqual( Stem("kom"), "kom");});
test("komediantfolk -> komediantfolk", function() {deepEqual( Stem("komediantfolk"), "komediantfolk");});
test("komedien -> komedi", function() {deepEqual( Stem("komedien"), "komedi");});
test("komedier -> komedi", function() {deepEqual( Stem("komedier"), "komedi");});
test("komfortabelt -> komfortabelt", function() {deepEqual( Stem("komfortabelt"), "komfortabelt");});
test("komisk -> komisk", function() {deepEqual( Stem("komisk"), "komisk");});
test("komiskt -> komisk", function() {deepEqual( Stem("komiskt"), "komisk");});
test("komm -> komm", function() {deepEqual( Stem("komm"), "komm");});
test("komma -> komm", function() {deepEqual( Stem("komma"), "komm");});
test("kommande -> komm", function() {deepEqual( Stem("kommande"), "komm");});
test("kommandeval -> kommandeval", function() {deepEqual( Stem("kommandeval"), "kommandeval");});
test("kommandostafven -> kommandostafv", function() {deepEqual( Stem("kommandostafven"), "kommandostafv");});
test("kommandoton -> kommandoton", function() {deepEqual( Stem("kommandoton"), "kommandoton");});
test("komme -> komm", function() {deepEqual( Stem("komme"), "komm");});
test("kommen -> komm", function() {deepEqual( Stem("kommen"), "komm");});
test("kommendera -> kommender", function() {deepEqual( Stem("kommendera"), "kommender");});
test("kommenderad -> kommender", function() {deepEqual( Stem("kommenderad"), "kommender");});
test("kommenderade -> kommender", function() {deepEqual( Stem("kommenderade"), "kommender");});
test("kommenderande -> kommender", function() {deepEqual( Stem("kommenderande"), "kommender");});
test("kommenterade -> kommenter", function() {deepEqual( Stem("kommenterade"), "kommenter");});
test("kommer -> komm", function() {deepEqual( Stem("kommer"), "komm");});
test("kommet -> kommet", function() {deepEqual( Stem("kommet"), "kommet");});
test("komminister -> komminist", function() {deepEqual( Stem("komminister"), "komminist");});
test("komministern -> komminist", function() {deepEqual( Stem("komministern"), "komminist");});
test("komministersfru -> komministersfru", function() {deepEqual( Stem("komministersfru"), "komministersfru");});
test("komministersänkan -> komministersänkan", function() {deepEqual( Stem("komministersänkan"), "komministersänkan");});
test("komministeränkan -> komministeränkan", function() {deepEqual( Stem("komministeränkan"), "komministeränkan");});
test("komministraturen -> komministratur", function() {deepEqual( Stem("komministraturen"), "komministratur");});
test("kommissionen -> kommission", function() {deepEqual( Stem("kommissionen"), "kommission");});
test("kommit -> kommit", function() {deepEqual( Stem("kommit"), "kommit");});
test("kommiuisterns -> kommiuist", function() {deepEqual( Stem("kommiuisterns"), "kommiuist");});
test("kommo -> kommo", function() {deepEqual( Stem("kommo"), "kommo");});
test("kommod -> kommod", function() {deepEqual( Stem("kommod"), "kommod");});
test("kommoden -> kommod", function() {deepEqual( Stem("kommoden"), "kommod");});
test("kommunionen -> kommunion", function() {deepEqual( Stem("kommunionen"), "kommunion");});
test("komna -> komn", function() {deepEqual( Stem("komna"), "komn");});
test("kompan -> kompan", function() {deepEqual( Stem("kompan"), "kompan");});
test("kompaner -> kompan", function() {deepEqual( Stem("kompaner"), "kompan");});
test("kompani -> kompani", function() {deepEqual( Stem("kompani"), "kompani");});
test("kompanjon -> kompanjon", function() {deepEqual( Stem("kompanjon"), "kompanjon");});
test("kompanjonerna -> kompanjon", function() {deepEqual( Stem("kompanjonerna"), "kompanjon");});
test("kompanjons -> kompanjon", function() {deepEqual( Stem("kompanjons"), "kompanjon");});
test("kompanjonskap -> kompanjonskap", function() {deepEqual( Stem("kompanjonskap"), "kompanjonskap");});
test("kompass -> kompass", function() {deepEqual( Stem("kompass"), "kompass");});
test("kompetent -> kompetent", function() {deepEqual( Stem("kompetent"), "kompetent");});
test("komplimang -> komplimang", function() {deepEqual( Stem("komplimang"), "komplimang");});
test("komponerar -> komponer", function() {deepEqual( Stem("komponerar"), "komponer");});
test("kompositören -> kompositör", function() {deepEqual( Stem("kompositören"), "kompositör");});
test("komrnit -> komrnit", function() {deepEqual( Stem("komrnit"), "komrnit");});
test("kon -> kon", function() {deepEqual( Stem("kon"), "kon");});
test("koncentrerar -> koncentrer", function() {deepEqual( Stem("koncentrerar"), "koncentrer");});
test("koncepterna -> koncept", function() {deepEqual( Stem("koncepterna"), "koncept");});
test("konceptet -> konceptet", function() {deepEqual( Stem("konceptet"), "konceptet");});
test("kondition -> kondition", function() {deepEqual( Stem("kondition"), "kondition");});
test("konditori -> konditori", function() {deepEqual( Stem("konditori"), "konditori");});
test("konditorier -> konditori", function() {deepEqual( Stem("konditorier"), "konditori");});
test("konditoriet -> konditoriet", function() {deepEqual( Stem("konditoriet"), "konditoriet");});
test("konfekt -> konfek", function() {deepEqual( Stem("konfekt"), "konfek");});
test("konfirmand -> konfirmand", function() {deepEqual( Stem("konfirmand"), "konfirmand");});
test("konfirmationsprästen -> konfirmationspräst", function() {deepEqual( Stem("konfirmationsprästen"), "konfirmationspräst");});
test("konfirmationssvärmeri -> konfirmationssvärmeri", function() {deepEqual( Stem("konfirmationssvärmeri"), "konfirmationssvärmeri");});
test("konfirmerad -> konfirmer", function() {deepEqual( Stem("konfirmerad"), "konfirmer");});
test("konfirmerades -> konfirmer", function() {deepEqual( Stem("konfirmerades"), "konfirmer");});
test("konfysa -> konfys", function() {deepEqual( Stem("konfysa"), "konfys");});
test("kongl -> kongl", function() {deepEqual( Stem("kongl"), "kongl");});
test("koniska -> konisk", function() {deepEqual( Stem("koniska"), "konisk");});
test("konjak -> konjak", function() {deepEqual( Stem("konjak"), "konjak");});
test("konjaken -> konjak", function() {deepEqual( Stem("konjaken"), "konjak");});
test("konjaksbuteljen -> konjaksbutelj", function() {deepEqual( Stem("konjaksbuteljen"), "konjaksbutelj");});
test("konjaksglas -> konjaksgl", function() {deepEqual( Stem("konjaksglas"), "konjaksgl");});
test("konkurrens -> konkurr", function() {deepEqual( Stem("konkurrens"), "konkurr");});
test("konkurrensen -> konkurrens", function() {deepEqual( Stem("konkurrensen"), "konkurrens");});
test("konkurs -> konkur", function() {deepEqual( Stem("konkurs"), "konkur");});
test("konradsberg -> konradsberg", function() {deepEqual( Stem("konradsberg"), "konradsberg");});
test("konseljen -> konselj", function() {deepEqual( Stem("konseljen"), "konselj");});
test("konsert -> konsert", function() {deepEqual( Stem("konsert"), "konsert");});
test("konserter -> konsert", function() {deepEqual( Stem("konserter"), "konsert");});
test("konservativa -> konservativ", function() {deepEqual( Stem("konservativa"), "konservativ");});
test("konserver -> konserv", function() {deepEqual( Stem("konserver"), "konserv");});
test("konservera -> konserver", function() {deepEqual( Stem("konservera"), "konserver");});
test("konserverad -> konserver", function() {deepEqual( Stem("konserverad"), "konserver");});
test("konspirerande -> konspirer", function() {deepEqual( Stem("konspirerande"), "konspirer");});
test("konst -> konst", function() {deepEqual( Stem("konst"), "konst");});
test("konstanta -> konstant", function() {deepEqual( Stem("konstanta"), "konstant");});
test("konstapeln -> konstapeln", function() {deepEqual( Stem("konstapeln"), "konstapeln");});
test("konstatera -> konstater", function() {deepEqual( Stem("konstatera"), "konstater");});
test("konstaterade -> konstater", function() {deepEqual( Stem("konstaterade"), "konstater");});
test("konstaterandet -> konstater", function() {deepEqual( Stem("konstaterandet"), "konstater");});
test("konstaterar -> konstater", function() {deepEqual( Stem("konstaterar"), "konstater");});
test("konstaterat -> konstater", function() {deepEqual( Stem("konstaterat"), "konstater");});
test("konsten -> konst", function() {deepEqual( Stem("konsten"), "konst");});
test("konstens -> konst", function() {deepEqual( Stem("konstens"), "konst");});
test("konster -> konst", function() {deepEqual( Stem("konster"), "konst");});
test("konsterfarna -> konsterf", function() {deepEqual( Stem("konsterfarna"), "konsterf");});
test("konsterna -> konst", function() {deepEqual( Stem("konsterna"), "konst");});
test("konstgjord -> konstgjord", function() {deepEqual( Stem("konstgjord"), "konstgjord");});
test("konstgjort -> konstgjort", function() {deepEqual( Stem("konstgjort"), "konstgjort");});
test("konstgrepp -> konstgrepp", function() {deepEqual( Stem("konstgrepp"), "konstgrepp");});
test("konstig -> konst", function() {deepEqual( Stem("konstig"), "konst");});
test("konstiga -> konst", function() {deepEqual( Stem("konstiga"), "konst");});
test("konstigt -> konst", function() {deepEqual( Stem("konstigt"), "konst");});
test("konstkännaremin -> konstkännaremin", function() {deepEqual( Stem("konstkännaremin"), "konstkännaremin");});
test("konstkännedom -> konstkännedom", function() {deepEqual( Stem("konstkännedom"), "konstkännedom");});
test("konstlad -> konstl", function() {deepEqual( Stem("konstlad"), "konstl");});
test("konstlade -> konstl", function() {deepEqual( Stem("konstlade"), "konstl");});
test("konstnär -> konstnär", function() {deepEqual( Stem("konstnär"), "konstnär");});
test("konstnärer -> konstnär", function() {deepEqual( Stem("konstnärer"), "konstnär");});
test("konstnärligt -> konstnär", function() {deepEqual( Stem("konstnärligt"), "konstnär");});
test("konstrikt -> konstrik", function() {deepEqual( Stem("konstrikt"), "konstrik");});
test("konstruera -> konstruer", function() {deepEqual( Stem("konstruera"), "konstruer");});
test("konstruerade -> konstruer", function() {deepEqual( Stem("konstruerade"), "konstruer");});
test("konstruerat -> konstruer", function() {deepEqual( Stem("konstruerat"), "konstruer");});
test("konstruktioner -> konstruktion", function() {deepEqual( Stem("konstruktioner"), "konstruktion");});
test("konstverk -> konstverk", function() {deepEqual( Stem("konstverk"), "konstverk");});
test("konstverket -> konstverket", function() {deepEqual( Stem("konstverket"), "konstverket");});
test("konsul -> konsul", function() {deepEqual( Stem("konsul"), "konsul");});
test("konsuler -> konsul", function() {deepEqual( Stem("konsuler"), "konsul");});
test("konsulinnans -> konsulinnan", function() {deepEqual( Stem("konsulinnans"), "konsulinnan");});
test("konsulisydamerika -> konsulisydamerik", function() {deepEqual( Stem("konsulisydamerika"), "konsulisydamerik");});
test("konsuln -> konsuln", function() {deepEqual( Stem("konsuln"), "konsuln");});
test("konsulns -> konsuln", function() {deepEqual( Stem("konsulns"), "konsuln");});
test("konsultationen -> konsultation", function() {deepEqual( Stem("konsultationen"), "konsultation");});
test("konsultera -> konsulter", function() {deepEqual( Stem("konsultera"), "konsulter");});
test("kontakt -> kontak", function() {deepEqual( Stem("kontakt"), "kontak");});
test("kontant -> kontant", function() {deepEqual( Stem("kontant"), "kontant");});
test("kontanta -> kontant", function() {deepEqual( Stem("kontanta"), "kontant");});
test("kontanter -> kontant", function() {deepEqual( Stem("kontanter"), "kontant");});
test("konterfej -> konterfej", function() {deepEqual( Stem("konterfej"), "konterfej");});
test("kontinent -> kontinent", function() {deepEqual( Stem("kontinent"), "kontinent");});
test("kontor -> kont", function() {deepEqual( Stem("kontor"), "kont");});
test("kontoret -> kontoret", function() {deepEqual( Stem("kontoret"), "kontoret");});
test("kontrabesök -> kontrabesök", function() {deepEqual( Stem("kontrabesök"), "kontrabesök");});
test("kontrahenterna -> kontrahent", function() {deepEqual( Stem("kontrahenterna"), "kontrahent");});
test("kontrast -> kontr", function() {deepEqual( Stem("kontrast"), "kontr");});
test("kontraster -> kontrast", function() {deepEqual( Stem("kontraster"), "kontrast");});
test("kontravisit -> kontravisit", function() {deepEqual( Stem("kontravisit"), "kontravisit");});
test("kontrollörn -> kontrollörn", function() {deepEqual( Stem("kontrollörn"), "kontrollörn");});
test("konturen -> kontur", function() {deepEqual( Stem("konturen"), "kontur");});
test("konturerna -> kontur", function() {deepEqual( Stem("konturerna"), "kontur");});
test("konung -> konung", function() {deepEqual( Stem("konung"), "konung");});
test("konungarnes -> konungarn", function() {deepEqual( Stem("konungarnes"), "konungarn");});
test("konungason -> konungason", function() {deepEqual( Stem("konungason"), "konungason");});
test("konungen -> konung", function() {deepEqual( Stem("konungen"), "konung");});
test("konungens -> konung", function() {deepEqual( Stem("konungens"), "konung");});
test("konungs -> konung", function() {deepEqual( Stem("konungs"), "konung");});
test("konungsfågel -> konungsfågel", function() {deepEqual( Stem("konungsfågel"), "konungsfågel");});
test("konventiklar -> konventikl", function() {deepEqual( Stem("konventiklar"), "konventikl");});
test("konventionellt -> konventionellt", function() {deepEqual( Stem("konventionellt"), "konventionellt");});
test("konversation -> konversation", function() {deepEqual( Stem("konversation"), "konversation");});
test("konversationstråden -> konversationstråd", function() {deepEqual( Stem("konversationstråden"), "konversationstråd");});
test("konverserade -> konverser", function() {deepEqual( Stem("konverserade"), "konverser");});
test("konvulsioner -> konvulsion", function() {deepEqual( Stem("konvulsioner"), "konvulsion");});
test("konvulsivisk -> konvulsivisk", function() {deepEqual( Stem("konvulsivisk"), "konvulsivisk");});
test("kop -> kop", function() {deepEqual( Stem("kop"), "kop");});
test("kopia -> kopi", function() {deepEqual( Stem("kopia"), "kopi");});
test("kopp -> kopp", function() {deepEqual( Stem("kopp"), "kopp");});
test("koppar -> kopp", function() {deepEqual( Stem("koppar"), "kopp");});
test("kopparflaska -> kopparflask", function() {deepEqual( Stem("kopparflaska"), "kopparflask");});
test("kopparfärgade -> kopparfärg", function() {deepEqual( Stem("kopparfärgade"), "kopparfärg");});
test("kopparn -> kopparn", function() {deepEqual( Stem("kopparn"), "kopparn");});
test("kopparröd -> kopparröd", function() {deepEqual( Stem("kopparröd"), "kopparröd");});
test("koppartälten -> koppartält", function() {deepEqual( Stem("koppartälten"), "koppartält");});
test("koppen -> kopp", function() {deepEqual( Stem("koppen"), "kopp");});
test("kopplare -> koppl", function() {deepEqual( Stem("kopplare"), "koppl");});
test("kopplet -> kopplet", function() {deepEqual( Stem("kopplet"), "kopplet");});
test("kopporna -> kopp", function() {deepEqual( Stem("kopporna"), "kopp");});
test("kor -> kor", function() {deepEqual( Stem("kor"), "kor");});
test("koral -> koral", function() {deepEqual( Stem("koral"), "koral");});
test("koralen -> koral", function() {deepEqual( Stem("koralen"), "koral");});
test("kordong -> kordong", function() {deepEqual( Stem("kordong"), "kordong");});
test("korets -> koret", function() {deepEqual( Stem("korets"), "koret");});
test("korg -> korg", function() {deepEqual( Stem("korg"), "korg");});
test("korgar -> korg", function() {deepEqual( Stem("korgar"), "korg");});
test("korgen -> korg", function() {deepEqual( Stem("korgen"), "korg");});
test("korgossarna -> korgoss", function() {deepEqual( Stem("korgossarna"), "korgoss");});
test("korintierna -> korinti", function() {deepEqual( Stem("korintierna"), "korinti");});
test("korkas -> kork", function() {deepEqual( Stem("korkas"), "kork");});
test("korken -> kork", function() {deepEqual( Stem("korken"), "kork");});
test("korkskrufven -> korkskrufv", function() {deepEqual( Stem("korkskrufven"), "korkskrufv");});
test("korligen -> kor", function() {deepEqual( Stem("korligen"), "kor");});
test("korn -> korn", function() {deepEqual( Stem("korn"), "korn");});
test("korna -> korn", function() {deepEqual( Stem("korna"), "korn");});
test("kornas -> korn", function() {deepEqual( Stem("kornas"), "korn");});
test("kornblixtsky -> kornblixtsky", function() {deepEqual( Stem("kornblixtsky"), "kornblixtsky");});
test("kornblå -> kornblå", function() {deepEqual( Stem("kornblå"), "kornblå");});
test("kornen -> korn", function() {deepEqual( Stem("kornen"), "korn");});
test("kornhamn -> kornhamn", function() {deepEqual( Stem("kornhamn"), "kornhamn");});
test("kornhamnstorg -> kornhamnstorg", function() {deepEqual( Stem("kornhamnstorg"), "kornhamnstorg");});
test("kornknarr -> kornknarr", function() {deepEqual( Stem("kornknarr"), "kornknarr");});
test("korp -> korp", function() {deepEqual( Stem("korp"), "korp");});
test("korpen -> korp", function() {deepEqual( Stem("korpen"), "korp");});
test("korpulent -> korpulent", function() {deepEqual( Stem("korpulent"), "korpulent");});
test("korrekt -> korrek", function() {deepEqual( Stem("korrekt"), "korrek");});
test("korrekta -> korrek", function() {deepEqual( Stem("korrekta"), "korrek");});
test("korridor -> korrid", function() {deepEqual( Stem("korridor"), "korrid");});
test("korridoren -> korridor", function() {deepEqual( Stem("korridoren"), "korridor");});
test("korridorens -> korridor", function() {deepEqual( Stem("korridorens"), "korridor");});
test("korridorerna -> korridor", function() {deepEqual( Stem("korridorerna"), "korridor");});
test("korrigeras -> korriger", function() {deepEqual( Stem("korrigeras"), "korriger");});
test("kors -> kor", function() {deepEqual( Stem("kors"), "kor");});
test("korsa -> kors", function() {deepEqual( Stem("korsa"), "kors");});
test("korsad -> kors", function() {deepEqual( Stem("korsad"), "kors");});
test("korsade -> kors", function() {deepEqual( Stem("korsade"), "kors");});
test("korsat -> kors", function() {deepEqual( Stem("korsat"), "kors");});
test("korsblick -> korsblick", function() {deepEqual( Stem("korsblick"), "korsblick");});
test("korsdragande -> korsdrag", function() {deepEqual( Stem("korsdragande"), "korsdrag");});
test("korsdragerskan -> korsdragerskan", function() {deepEqual( Stem("korsdragerskan"), "korsdragerskan");});
test("korset -> korset", function() {deepEqual( Stem("korset"), "korset");});
test("korsets -> korset", function() {deepEqual( Stem("korsets"), "korset");});
test("korsfästelse -> korsfäst", function() {deepEqual( Stem("korsfästelse"), "korsfäst");});
test("korsfästes -> korsfäst", function() {deepEqual( Stem("korsfästes"), "korsfäst");});
test("korslagda -> korslag", function() {deepEqual( Stem("korslagda"), "korslag");});
test("korsmässa -> korsmäss", function() {deepEqual( Stem("korsmässa"), "korsmäss");});
test("kort -> kort", function() {deepEqual( Stem("kort"), "kort");});
test("korta -> kort", function() {deepEqual( Stem("korta"), "kort");});
test("kortare -> kort", function() {deepEqual( Stem("kortare"), "kort");});
test("kortaste -> kort", function() {deepEqual( Stem("kortaste"), "kort");});
test("korteligen -> korte", function() {deepEqual( Stem("korteligen"), "korte");});
test("korten -> kort", function() {deepEqual( Stem("korten"), "kort");});
test("kortet -> kortet", function() {deepEqual( Stem("kortet"), "kortet");});
test("korthet -> kort", function() {deepEqual( Stem("korthet"), "kort");});
test("korthugget -> korthugget", function() {deepEqual( Stem("korthugget"), "korthugget");});
test("korthuggna -> korthuggn", function() {deepEqual( Stem("korthuggna"), "korthuggn");});
test("korthus -> korthus", function() {deepEqual( Stem("korthus"), "korthus");});
test("kortklippta -> kortklippt", function() {deepEqual( Stem("kortklippta"), "kortklippt");});
test("kortlapparna -> kortlapp", function() {deepEqual( Stem("kortlapparna"), "kortlapp");});
test("kortlek -> kortlek", function() {deepEqual( Stem("kortlek"), "kortlek");});
test("kortlekar -> kortlek", function() {deepEqual( Stem("kortlekar"), "kortlek");});
test("kortligen -> kort", function() {deepEqual( Stem("kortligen"), "kort");});
test("kortsidan -> kortsidan", function() {deepEqual( Stem("kortsidan"), "kortsidan");});
test("kortspel -> kortspel", function() {deepEqual( Stem("kortspel"), "kortspel");});
test("kortspelsbrodern -> kortspelsbrod", function() {deepEqual( Stem("kortspelsbrodern"), "kortspelsbrod");});
test("korus -> korus", function() {deepEqual( Stem("korus"), "korus");});
test("korv -> korv", function() {deepEqual( Stem("korv"), "korv");});
test("korvbeställningar -> korvbeställning", function() {deepEqual( Stem("korvbeställningar"), "korvbeställning");});
test("korvgörningen -> korvgörning", function() {deepEqual( Stem("korvgörningen"), "korvgörning");});
test("kos -> kos", function() {deepEqual( Stem("kos"), "kos");});
test("kosan -> kosan", function() {deepEqual( Stem("kosan"), "kosan");});
test("kossa -> koss", function() {deepEqual( Stem("kossa"), "koss");});
test("kost -> kost", function() {deepEqual( Stem("kost"), "kost");});
test("kosta -> kost", function() {deepEqual( Stem("kosta"), "kost");});
test("kostade -> kost", function() {deepEqual( Stem("kostade"), "kost");});
test("kostar -> kost", function() {deepEqual( Stem("kostar"), "kost");});
test("kostat -> kost", function() {deepEqual( Stem("kostat"), "kost");});
test("kostbara -> kostbar", function() {deepEqual( Stem("kostbara"), "kostbar");});
test("kostelig -> koste", function() {deepEqual( Stem("kostelig"), "koste");});
test("koster -> kost", function() {deepEqual( Stem("koster"), "kost");});
test("kostföraktare -> kostförak", function() {deepEqual( Stem("kostföraktare"), "kostförak");});
test("kostlik -> kostlik", function() {deepEqual( Stem("kostlik"), "kostlik");});
test("kostnad -> kostn", function() {deepEqual( Stem("kostnad"), "kostn");});
test("kostnaden -> kostnad", function() {deepEqual( Stem("kostnaden"), "kostnad");});
test("kostsammare -> kostsamm", function() {deepEqual( Stem("kostsammare"), "kostsamm");});
test("kostym -> kostym", function() {deepEqual( Stem("kostym"), "kostym");});
test("kostymerad -> kostymer", function() {deepEqual( Stem("kostymerad"), "kostymer");});
test("kotiljongsmärken -> kotiljongsmärk", function() {deepEqual( Stem("kotiljongsmärken"), "kotiljongsmärk");});
test("kotlettben -> kotlettb", function() {deepEqual( Stem("kotlettben"), "kotlettb");});
test("kotletten -> kotlet", function() {deepEqual( Stem("kotletten"), "kotlet");});
test("kotletter -> kotlet", function() {deepEqual( Stem("kotletter"), "kotlet");});
test("kotor -> kot", function() {deepEqual( Stem("kotor"), "kot");});
test("kott -> kott", function() {deepEqual( Stem("kott"), "kott");});
test("kotteri -> kotteri", function() {deepEqual( Stem("kotteri"), "kotteri");});
test("kottsliga -> kotts", function() {deepEqual( Stem("kottsliga"), "kotts");});
test("kr -> kr", function() {deepEqual( Stem("kr"), "kr");});
test("krabat -> krab", function() {deepEqual( Stem("krabat"), "krab");});
test("krabban -> krabban", function() {deepEqual( Stem("krabban"), "krabban");});
test("krabbor -> krabb", function() {deepEqual( Stem("krabbor"), "krabb");});
test("krack -> krack", function() {deepEqual( Stem("krack"), "krack");});
test("kraf -> kraf", function() {deepEqual( Stem("kraf"), "kraf");});
test("kraft -> kraft", function() {deepEqual( Stem("kraft"), "kraft");});
test("kraften -> kraft", function() {deepEqual( Stem("kraften"), "kraft");});
test("krafter -> kraft", function() {deepEqual( Stem("krafter"), "kraft");});
test("krafterna -> kraft", function() {deepEqual( Stem("krafterna"), "kraft");});
test("kraftfull -> kraftfull", function() {deepEqual( Stem("kraftfull"), "kraftfull");});
test("kraftfulla -> kraftfull", function() {deepEqual( Stem("kraftfulla"), "kraftfull");});
test("kraftfullare -> kraftfull", function() {deepEqual( Stem("kraftfullare"), "kraftfull");});
test("kraftfullaste -> kraftfull", function() {deepEqual( Stem("kraftfullaste"), "kraftfull");});
test("kraftfullhet -> kraftfull", function() {deepEqual( Stem("kraftfullhet"), "kraftfull");});
test("kraftfullt -> kraftfull", function() {deepEqual( Stem("kraftfullt"), "kraftfull");});
test("kraftgrepp -> kraftgrepp", function() {deepEqual( Stem("kraftgrepp"), "kraftgrepp");});
test("kraftig -> kraft", function() {deepEqual( Stem("kraftig"), "kraft");});
test("kraftiga -> kraft", function() {deepEqual( Stem("kraftiga"), "kraft");});
test("kraftigare -> kraft", function() {deepEqual( Stem("kraftigare"), "kraft");});
test("kraftigt -> kraft", function() {deepEqual( Stem("kraftigt"), "kraft");});
test("kragar -> krag", function() {deepEqual( Stem("kragar"), "krag");});
test("krage -> krag", function() {deepEqual( Stem("krage"), "krag");});
test("kragen -> krag", function() {deepEqual( Stem("kragen"), "krag");});
test("krake -> krak", function() {deepEqual( Stem("krake"), "krak");});
test("krakornas -> krak", function() {deepEqual( Stem("krakornas"), "krak");});
test("kram -> kram", function() {deepEqual( Stem("kram"), "kram");});
test("krama -> kram", function() {deepEqual( Stem("krama"), "kram");});
test("kramad -> kram", function() {deepEqual( Stem("kramad"), "kram");});
test("kramade -> kram", function() {deepEqual( Stem("kramade"), "kram");});
test("kramande -> kram", function() {deepEqual( Stem("kramande"), "kram");});
test("kramar -> kram", function() {deepEqual( Stem("kramar"), "kram");});
test("kramp -> kramp", function() {deepEqual( Stem("kramp"), "kramp");});
test("krampaktig -> krampakt", function() {deepEqual( Stem("krampaktig"), "krampakt");});
test("krampaktigt -> krampakt", function() {deepEqual( Stem("krampaktigt"), "krampakt");});
test("krampgråt -> krampgråt", function() {deepEqual( Stem("krampgråt"), "krampgråt");});
test("krampor -> kramp", function() {deepEqual( Stem("krampor"), "kramp");});
test("kramporna -> kramp", function() {deepEqual( Stem("kramporna"), "kramp");});
test("kranier -> krani", function() {deepEqual( Stem("kranier"), "krani");});
test("kranium -> kranium", function() {deepEqual( Stem("kranium"), "kranium");});
test("krans -> kran", function() {deepEqual( Stem("krans"), "kran");});
test("kransad -> krans", function() {deepEqual( Stem("kransad"), "krans");});
test("kransar -> krans", function() {deepEqual( Stem("kransar"), "krans");});
test("kransen -> krans", function() {deepEqual( Stem("kransen"), "krans");});
test("krasande -> kras", function() {deepEqual( Stem("krasande"), "kras");});
test("krasandet -> kras", function() {deepEqual( Stem("krasandet"), "kras");});
test("krasch -> krasch", function() {deepEqual( Stem("krasch"), "krasch");});
test("krassen -> krass", function() {deepEqual( Stem("krassen"), "krass");});
test("kratta -> kratt", function() {deepEqual( Stem("kratta"), "kratt");});
test("krav -> krav", function() {deepEqual( Stem("krav"), "krav");});
test("kredit -> kredit", function() {deepEqual( Stem("kredit"), "kredit");});
test("krediten -> kredit", function() {deepEqual( Stem("krediten"), "kredit");});
test("kreditorernas -> kreditor", function() {deepEqual( Stem("kreditorernas"), "kreditor");});
test("kretin -> kretin", function() {deepEqual( Stem("kretin"), "kretin");});
test("krets -> kret", function() {deepEqual( Stem("krets"), "kret");});
test("kretsa -> krets", function() {deepEqual( Stem("kretsa"), "krets");});
test("kretsade -> krets", function() {deepEqual( Stem("kretsade"), "krets");});
test("kretsande -> krets", function() {deepEqual( Stem("kretsande"), "krets");});
test("kretsar -> krets", function() {deepEqual( Stem("kretsar"), "krets");});
test("kretsen -> krets", function() {deepEqual( Stem("kretsen"), "krets");});
test("kretsgång -> kretsgång", function() {deepEqual( Stem("kretsgång"), "kretsgång");});
test("kreverar -> krever", function() {deepEqual( Stem("kreverar"), "krever");});
test("krig -> krig", function() {deepEqual( Stem("krig"), "krig");});
test("krigare -> krig", function() {deepEqual( Stem("krigare"), "krig");});
test("krigaren -> krig", function() {deepEqual( Stem("krigaren"), "krig");});
test("krigarsläkt -> krigarsläk", function() {deepEqual( Stem("krigarsläkt"), "krigarsläk");});
test("kriget -> kriget", function() {deepEqual( Stem("kriget"), "kriget");});
test("krigets -> kriget", function() {deepEqual( Stem("krigets"), "kriget");});
test("krigsklang -> krigsklang", function() {deepEqual( Stem("krigsklang"), "krigsklang");});
test("krigslist -> krigslist", function() {deepEqual( Stem("krigslist"), "krigslist");});
test("krigsmakten -> krigsmak", function() {deepEqual( Stem("krigsmakten"), "krigsmak");});
test("krigstillstånd -> krigstillstånd", function() {deepEqual( Stem("krigstillstånd"), "krigstillstånd");});
test("krigstillståndet -> krigstillståndet", function() {deepEqual( Stem("krigstillståndet"), "krigstillståndet");});
test("kriminalberättelser -> kriminalberätt", function() {deepEqual( Stem("kriminalberättelser"), "kriminalberätt");});
test("krimskrams -> krimskram", function() {deepEqual( Stem("krimskrams"), "krimskram");});
test("kring -> kring", function() {deepEqual( Stem("kring"), "kring");});
test("kringbjudet -> kringbjudet", function() {deepEqual( Stem("kringbjudet"), "kringbjudet");});
test("kringelkrokar -> kringelkrok", function() {deepEqual( Stem("kringelkrokar"), "kringelkrok");});
test("kringfarande -> kringfar", function() {deepEqual( Stem("kringfarande"), "kringfar");});
test("kringfladdrande -> kringfladdr", function() {deepEqual( Stem("kringfladdrande"), "kringfladdr");});
test("kringla -> kringl", function() {deepEqual( Stem("kringla"), "kringl");});
test("kringränd -> kringränd", function() {deepEqual( Stem("kringränd"), "kringränd");});
test("kringränna -> kringrän", function() {deepEqual( Stem("kringränna"), "kringrän");});
test("kringspridarc -> kringspridarc", function() {deepEqual( Stem("kringspridarc"), "kringspridarc");});
test("kringspridda -> kringsprid", function() {deepEqual( Stem("kringspridda"), "kringsprid");});
test("kringvandrande -> kringvandr", function() {deepEqual( Stem("kringvandrande"), "kringvandr");});
test("krist -> krist", function() {deepEqual( Stem("krist"), "krist");});
test("kristaller -> kristall", function() {deepEqual( Stem("kristaller"), "kristall");});
test("kristallklar -> kristallkl", function() {deepEqual( Stem("kristallklar"), "kristallkl");});
test("kristallkronor -> kristallkron", function() {deepEqual( Stem("kristallkronor"), "kristallkron");});
test("kristallvas -> kristallv", function() {deepEqual( Stem("kristallvas"), "kristallv");});
test("kristen -> krist", function() {deepEqual( Stem("kristen"), "krist");});
test("kristendom -> kristendom", function() {deepEqual( Stem("kristendom"), "kristendom");});
test("kristenhet -> kristen", function() {deepEqual( Stem("kristenhet"), "kristen");});
test("kristenhets -> kristenhet", function() {deepEqual( Stem("kristenhets"), "kristenhet");});
test("kristet -> kristet", function() {deepEqual( Stem("kristet"), "kristet");});
test("kristi -> kristi", function() {deepEqual( Stem("kristi"), "kristi");});
test("kristin -> kristin", function() {deepEqual( Stem("kristin"), "kristin");});
test("kristina -> kristin", function() {deepEqual( Stem("kristina"), "kristin");});
test("kristinas -> kristin", function() {deepEqual( Stem("kristinas"), "kristin");});
test("kristlig -> krist", function() {deepEqual( Stem("kristlig"), "krist");});
test("kristliga -> krist", function() {deepEqual( Stem("kristliga"), "krist");});
test("kristligt -> krist", function() {deepEqual( Stem("kristligt"), "krist");});
test("kristna -> kristn", function() {deepEqual( Stem("kristna"), "kristn");});
test("kristnade -> kristn", function() {deepEqual( Stem("kristnade"), "kristn");});
test("kristnas -> kristn", function() {deepEqual( Stem("kristnas"), "kristn");});
test("kristne -> kristn", function() {deepEqual( Stem("kristne"), "kristn");});
test("kristningsnamnet -> kristningsnamnet", function() {deepEqual( Stem("kristningsnamnet"), "kristningsnamnet");});
test("kristum -> kristum", function() {deepEqual( Stem("kristum"), "kristum");});
test("kristusbarnet -> kristusbarnet", function() {deepEqual( Stem("kristusbarnet"), "kristusbarnet");});
test("krit -> krit", function() {deepEqual( Stem("krit"), "krit");});
test("kritade -> krit", function() {deepEqual( Stem("kritade"), "krit");});
test("kritbiten -> kritbit", function() {deepEqual( Stem("kritbiten"), "kritbit");});
test("kritblek -> kritblek", function() {deepEqual( Stem("kritblek"), "kritblek");});
test("kritbleka -> kritblek", function() {deepEqual( Stem("kritbleka"), "kritblek");});
test("kritcirkeln -> kritcirkeln", function() {deepEqual( Stem("kritcirkeln"), "kritcirkeln");});
test("krithvita -> krithvit", function() {deepEqual( Stem("krithvita"), "krithvit");});
test("kritik -> kritik", function() {deepEqual( Stem("kritik"), "kritik");});
test("kritiserande -> kritiser", function() {deepEqual( Stem("kritiserande"), "kritiser");});
test("kritisk -> kritisk", function() {deepEqual( Stem("kritisk"), "kritisk");});
test("kritiska -> kritisk", function() {deepEqual( Stem("kritiska"), "kritisk");});
test("kritvita -> kritvit", function() {deepEqual( Stem("kritvita"), "kritvit");});
test("kritvitt -> kritvit", function() {deepEqual( Stem("kritvitt"), "kritvit");});
test("krokan -> krokan", function() {deepEqual( Stem("krokan"), "krokan");});
test("krokar -> krok", function() {deepEqual( Stem("krokar"), "krok");});
test("krokarna -> krok", function() {deepEqual( Stem("krokarna"), "krok");});
test("kroken -> krok", function() {deepEqual( Stem("kroken"), "krok");});
test("krokig -> krok", function() {deepEqual( Stem("krokig"), "krok");});
test("krokiga -> krok", function() {deepEqual( Stem("krokiga"), "krok");});
test("krokna -> krokn", function() {deepEqual( Stem("krokna"), "krokn");});
test("krokvägar -> krokväg", function() {deepEqual( Stem("krokvägar"), "krokväg");});
test("kromatiska -> kromatisk", function() {deepEqual( Stem("kromatiska"), "kromatisk");});
test("krona -> kron", function() {deepEqual( Stem("krona"), "kron");});
test("kronan -> kronan", function() {deepEqual( Stem("kronan"), "kronan");});
test("kronans -> kronan", function() {deepEqual( Stem("kronans"), "kronan");});
test("kronobåten -> kronobåt", function() {deepEqual( Stem("kronobåten"), "kronobåt");});
test("kronor -> kron", function() {deepEqual( Stem("kronor"), "kron");});
test("kronprinsen -> kronprins", function() {deepEqual( Stem("kronprinsen"), "kronprins");});
test("krontjufven -> krontjufv", function() {deepEqual( Stem("krontjufven"), "krontjufv");});
test("kronärtskocka -> kronärtskock", function() {deepEqual( Stem("kronärtskocka"), "kronärtskock");});
test("kronärtskockan -> kronärtskockan", function() {deepEqual( Stem("kronärtskockan"), "kronärtskockan");});
test("krop -> krop", function() {deepEqual( Stem("krop"), "krop");});
test("kropp -> kropp", function() {deepEqual( Stem("kropp"), "kropp");});
test("kroppar -> kropp", function() {deepEqual( Stem("kroppar"), "kropp");});
test("kroppen -> kropp", function() {deepEqual( Stem("kroppen"), "kropp");});
test("kroppens -> kropp", function() {deepEqual( Stem("kroppens"), "kropp");});
test("kropps -> kropp", function() {deepEqual( Stem("kropps"), "kropp");});
test("kroppsarbetare -> kroppsarbet", function() {deepEqual( Stem("kroppsarbetare"), "kroppsarbet");});
test("kroppsbyggnad -> kroppsbyggn", function() {deepEqual( Stem("kroppsbyggnad"), "kroppsbyggn");});
test("kroppskrafter -> kroppskraft", function() {deepEqual( Stem("kroppskrafter"), "kroppskraft");});
test("kroppslig -> kropps", function() {deepEqual( Stem("kroppslig"), "kropps");});
test("kroppsliga -> kropps", function() {deepEqual( Stem("kroppsliga"), "kropps");});
test("kroppsligen -> kropps", function() {deepEqual( Stem("kroppsligen"), "kropps");});
test("kroppsligt -> kropps", function() {deepEqual( Stem("kroppsligt"), "kropps");});
test("krossa -> kross", function() {deepEqual( Stem("krossa"), "kross");});
test("krossad -> kross", function() {deepEqual( Stem("krossad"), "kross");});
test("krossade -> kross", function() {deepEqual( Stem("krossade"), "kross");});
test("krossades -> kross", function() {deepEqual( Stem("krossades"), "kross");});
test("krossadt -> krossad", function() {deepEqual( Stem("krossadt"), "krossad");});
test("krossande -> kross", function() {deepEqual( Stem("krossande"), "kross");});
test("krossas -> kross", function() {deepEqual( Stem("krossas"), "kross");});
test("krossat -> kross", function() {deepEqual( Stem("krossat"), "kross");});
test("kruka -> kruk", function() {deepEqual( Stem("kruka"), "kruk");});
test("krukan -> krukan", function() {deepEqual( Stem("krukan"), "krukan");});
test("krukväxter -> krukväxt", function() {deepEqual( Stem("krukväxter"), "krukväxt");});
test("krukväxterna -> krukväxt", function() {deepEqual( Stem("krukväxterna"), "krukväxt");});
test("krumbukter -> krumbuk", function() {deepEqual( Stem("krumbukter"), "krumbuk");});
test("krumma -> krumm", function() {deepEqual( Stem("krumma"), "krumm");});
test("krupit -> krupit", function() {deepEqual( Stem("krupit"), "krupit");});
test("krus -> krus", function() {deepEqual( Stem("krus"), "krus");});
test("krusa -> krus", function() {deepEqual( Stem("krusa"), "krus");});
test("krusad -> krus", function() {deepEqual( Stem("krusad"), "krus");});
test("krusade -> krus", function() {deepEqual( Stem("krusade"), "krus");});
test("krusades -> krus", function() {deepEqual( Stem("krusades"), "krus");});
test("krusar -> krus", function() {deepEqual( Stem("krusar"), "krus");});
test("krusiga -> krus", function() {deepEqual( Stem("krusiga"), "krus");});
test("krusigt -> krus", function() {deepEqual( Stem("krusigt"), "krus");});
test("krusning -> krusning", function() {deepEqual( Stem("krusning"), "krusning");});
test("krut -> krut", function() {deepEqual( Stem("krut"), "krut");});
test("krutet -> krutet", function() {deepEqual( Stem("krutet"), "krutet");});
test("krutrök -> krutrök", function() {deepEqual( Stem("krutrök"), "krutrök");});
test("krutsprängt -> krutspräng", function() {deepEqual( Stem("krutsprängt"), "krutspräng");});
test("kry -> kry", function() {deepEqual( Stem("kry"), "kry");});
test("kryare -> kryar", function() {deepEqual( Stem("kryare"), "kryar");});
test("kryat -> kryat", function() {deepEqual( Stem("kryat"), "kryat");});
test("kryck -> kryck", function() {deepEqual( Stem("kryck"), "kryck");});
test("kryckan -> kryckan", function() {deepEqual( Stem("kryckan"), "kryckan");});
test("kryckor -> kryck", function() {deepEqual( Stem("kryckor"), "kryck");});
test("kryckorna -> kryck", function() {deepEqual( Stem("kryckorna"), "kryck");});
test("kryddad -> krydd", function() {deepEqual( Stem("kryddad"), "krydd");});
test("kryddan -> kryddan", function() {deepEqual( Stem("kryddan"), "kryddan");});
test("kryddat -> krydd", function() {deepEqual( Stem("kryddat"), "krydd");});
test("kryddbod -> kryddbod", function() {deepEqual( Stem("kryddbod"), "kryddbod");});
test("kryddor -> krydd", function() {deepEqual( Stem("kryddor"), "krydd");});
test("krylbom -> krylbom", function() {deepEqual( Stem("krylbom"), "krylbom");});
test("krymp -> krymp", function() {deepEqual( Stem("krymp"), "krymp");});
test("krympa -> krymp", function() {deepEqual( Stem("krympa"), "krymp");});
test("krymper -> krymp", function() {deepEqual( Stem("krymper"), "krymp");});
test("krympling -> krympling", function() {deepEqual( Stem("krympling"), "krympling");});
test("krymplingars -> krymplingar", function() {deepEqual( Stem("krymplingars"), "krymplingar");});
test("krymplingen -> krympling", function() {deepEqual( Stem("krymplingen"), "krympling");});
test("krympt -> krympt", function() {deepEqual( Stem("krympt"), "krympt");});
test("krympte -> krympt", function() {deepEqual( Stem("krympte"), "krympt");});
test("kryp -> kryp", function() {deepEqual( Stem("kryp"), "kryp");});
test("krypa -> kryp", function() {deepEqual( Stem("krypa"), "kryp");});
test("kryper -> kryp", function() {deepEqual( Stem("kryper"), "kryp");});
test("krypskytten -> krypskyt", function() {deepEqual( Stem("krypskytten"), "krypskyt");});
test("kryssade -> kryss", function() {deepEqual( Stem("kryssade"), "kryss");});
test("kryssar -> kryss", function() {deepEqual( Stem("kryssar"), "kryss");});
test("kryssat -> kryss", function() {deepEqual( Stem("kryssat"), "kryss");});
test("krysta -> kryst", function() {deepEqual( Stem("krysta"), "kryst");});
test("kräfde -> kräfd", function() {deepEqual( Stem("kräfde"), "kräfd");});
test("kräfta -> kräft", function() {deepEqual( Stem("kräfta"), "kräft");});
test("kräftan -> kräftan", function() {deepEqual( Stem("kräftan"), "kräftan");});
test("kräftartad -> kräftart", function() {deepEqual( Stem("kräftartad"), "kräftart");});
test("kräftor -> kräft", function() {deepEqual( Stem("kräftor"), "kräft");});
test("kräftskal -> kräftskal", function() {deepEqual( Stem("kräftskal"), "kräftskal");});
test("kräk -> kräk", function() {deepEqual( Stem("kräk"), "kräk");});
test("kräkas -> kräk", function() {deepEqual( Stem("kräkas"), "kräk");});
test("kräken -> kräk", function() {deepEqual( Stem("kräken"), "kräk");});
test("kräket -> kräket", function() {deepEqual( Stem("kräket"), "kräket");});
test("kräktes -> kräkt", function() {deepEqual( Stem("kräktes"), "kräkt");});
test("krälade -> kräl", function() {deepEqual( Stem("krälade"), "kräl");});
test("krälande -> kräl", function() {deepEqual( Stem("krälande"), "kräl");});
test("krämarborden -> krämarbord", function() {deepEqual( Stem("krämarborden"), "krämarbord");});
test("krämpor -> krämp", function() {deepEqual( Stem("krämpor"), "krämp");});
test("krängde -> kräng", function() {deepEqual( Stem("krängde"), "kräng");});
test("kränkta -> kränk", function() {deepEqual( Stem("kränkta"), "kränk");});
test("kräsen -> kräs", function() {deepEqual( Stem("kräsen"), "kräs");});
test("kräver -> kräv", function() {deepEqual( Stem("kräver"), "kräv");});
test("kråka -> kråk", function() {deepEqual( Stem("kråka"), "kråk");});
test("kråkans -> kråkan", function() {deepEqual( Stem("kråkans"), "kråkan");});
test("kråkfot -> kråkfot", function() {deepEqual( Stem("kråkfot"), "kråkfot");});
test("kråkfötter -> kråkföt", function() {deepEqual( Stem("kråkfötter"), "kråkföt");});
test("kråkor -> kråk", function() {deepEqual( Stem("kråkor"), "kråk");});
test("kråkorna -> kråk", function() {deepEqual( Stem("kråkorna"), "kråk");});
test("kråkunge -> kråkung", function() {deepEqual( Stem("kråkunge"), "kråkung");});
test("kråmar -> kråm", function() {deepEqual( Stem("kråmar"), "kråm");});
test("krångel -> krångel", function() {deepEqual( Stem("krångel"), "krångel");});
test("krångla -> krångl", function() {deepEqual( Stem("krångla"), "krångl");});
test("krångliga -> krång", function() {deepEqual( Stem("krångliga"), "krång");});
test("krångligare -> krång", function() {deepEqual( Stem("krångligare"), "krång");});
test("kråsbandet -> kråsb", function() {deepEqual( Stem("kråsbandet"), "kråsb");});
test("kråset -> kråset", function() {deepEqual( Stem("kråset"), "kråset");});
test("kråsnål -> kråsnål", function() {deepEqual( Stem("kråsnål"), "kråsnål");});
test("krök -> krök", function() {deepEqual( Stem("krök"), "krök");});
test("kröka -> krök", function() {deepEqual( Stem("kröka"), "krök");});
test("krökar -> krök", function() {deepEqual( Stem("krökar"), "krök");});
test("krökning -> krökning", function() {deepEqual( Stem("krökning"), "krökning");});
test("krökningar -> krökning", function() {deepEqual( Stem("krökningar"), "krökning");});
test("krökningen -> krökning", function() {deepEqual( Stem("krökningen"), "krökning");});
test("krökt -> krökt", function() {deepEqual( Stem("krökt"), "krökt");});
test("krökta -> krökt", function() {deepEqual( Stem("krökta"), "krökt");});
test("krökte -> krökt", function() {deepEqual( Stem("krökte"), "krökt");});
test("krön -> krön", function() {deepEqual( Stem("krön"), "krön");});
test("kröna -> krön", function() {deepEqual( Stem("kröna"), "krön");});
test("krönas -> krön", function() {deepEqual( Stem("krönas"), "krön");});
test("krönen -> krön", function() {deepEqual( Stem("krönen"), "krön");});
test("krönet -> krönet", function() {deepEqual( Stem("krönet"), "krönet");});
test("krönika -> krönik", function() {deepEqual( Stem("krönika"), "krönik");});
test("kröningsdag -> kröningsdag", function() {deepEqual( Stem("kröningsdag"), "kröningsdag");});
test("kröningsmarschen -> kröningsmarsch", function() {deepEqual( Stem("kröningsmarschen"), "kröningsmarsch");});
test("kröningsmynt -> kröningsmynt", function() {deepEqual( Stem("kröningsmynt"), "kröningsmynt");});
test("kröp -> kröp", function() {deepEqual( Stem("kröp"), "kröp");});
test("kröpo -> kröpo", function() {deepEqual( Stem("kröpo"), "kröpo");});
test("ktocka -> ktock", function() {deepEqual( Stem("ktocka"), "ktock");});
test("kuappt -> kuappt", function() {deepEqual( Stem("kuappt"), "kuappt");});
test("kuddar -> kudd", function() {deepEqual( Stem("kuddar"), "kudd");});
test("kuddarna -> kudd", function() {deepEqual( Stem("kuddarna"), "kudd");});
test("kuddc -> kuddc", function() {deepEqual( Stem("kuddc"), "kuddc");});
test("kudde -> kudd", function() {deepEqual( Stem("kudde"), "kudd");});
test("kudden -> kudd", function() {deepEqual( Stem("kudden"), "kudd");});
test("kuddvar -> kuddv", function() {deepEqual( Stem("kuddvar"), "kuddv");});
test("kufvades -> kufv", function() {deepEqual( Stem("kufvades"), "kufv");});
test("kufvadt -> kufvad", function() {deepEqual( Stem("kufvadt"), "kufvad");});
test("kujonera -> kujoner", function() {deepEqual( Stem("kujonera"), "kujoner");});
test("kula -> kul", function() {deepEqual( Stem("kula"), "kul");});
test("kulan -> kulan", function() {deepEqual( Stem("kulan"), "kulan");});
test("kulen -> kul", function() {deepEqual( Stem("kulen"), "kul");});
test("kulet -> kulet", function() {deepEqual( Stem("kulet"), "kulet");});
test("kuliss -> kuliss", function() {deepEqual( Stem("kuliss"), "kuliss");});
test("kulissen -> kuliss", function() {deepEqual( Stem("kulissen"), "kuliss");});
test("kulisserna -> kuliss", function() {deepEqual( Stem("kulisserna"), "kuliss");});
test("kull -> kull", function() {deepEqual( Stem("kull"), "kull");});
test("kullar -> kull", function() {deepEqual( Stem("kullar"), "kull");});
test("kullarna -> kull", function() {deepEqual( Stem("kullarna"), "kull");});
test("kullbåtarna -> kullbåt", function() {deepEqual( Stem("kullbåtarna"), "kullbåt");});
test("kulle -> kull", function() {deepEqual( Stem("kulle"), "kull");});
test("kullen -> kull", function() {deepEqual( Stem("kullen"), "kull");});
test("kullerstenar -> kullersten", function() {deepEqual( Stem("kullerstenar"), "kullersten");});
test("kullerstenarna -> kullersten", function() {deepEqual( Stem("kullerstenarna"), "kullersten");});
test("kullerstolen -> kullerstol", function() {deepEqual( Stem("kullerstolen"), "kullerstol");});
test("kullisserna -> kulliss", function() {deepEqual( Stem("kullisserna"), "kulliss");});
test("kullkastat -> kullkast", function() {deepEqual( Stem("kullkastat"), "kullkast");});
test("kullstjälpt -> kullstjälpt", function() {deepEqual( Stem("kullstjälpt"), "kullstjälpt");});
test("kulma -> kulm", function() {deepEqual( Stem("kulma"), "kulm");});
test("kulor -> kul", function() {deepEqual( Stem("kulor"), "kul");});
test("kulorna -> kul", function() {deepEqual( Stem("kulorna"), "kul");});
test("kulturen -> kultur", function() {deepEqual( Stem("kulturen"), "kultur");});
test("kulörta -> kulört", function() {deepEqual( Stem("kulörta"), "kulört");});
test("kum -> kum", function() {deepEqual( Stem("kum"), "kum");});
test("kumpanerna -> kumpan", function() {deepEqual( Stem("kumpanerna"), "kumpan");});
test("kund -> kund", function() {deepEqual( Stem("kund"), "kund");});
test("kundc -> kundc", function() {deepEqual( Stem("kundc"), "kundc");});
test("kunde -> kund", function() {deepEqual( Stem("kunde"), "kund");});
test("kunder -> kund", function() {deepEqual( Stem("kunder"), "kund");});
test("kung -> kung", function() {deepEqual( Stem("kung"), "kung");});
test("kungen -> kung", function() {deepEqual( Stem("kungen"), "kung");});
test("kungens -> kung", function() {deepEqual( Stem("kungens"), "kung");});
test("kungjorde -> kungjord", function() {deepEqual( Stem("kungjorde"), "kungjord");});
test("kungjordes -> kungjord", function() {deepEqual( Stem("kungjordes"), "kungjord");});
test("kungl -> kungl", function() {deepEqual( Stem("kungl"), "kungl");});
test("kunglig -> kung", function() {deepEqual( Stem("kunglig"), "kung");});
test("kungliga -> kung", function() {deepEqual( Stem("kungliga"), "kung");});
test("kungsholmen -> kungsholm", function() {deepEqual( Stem("kungsholmen"), "kungsholm");});
test("kungsträdgården -> kungsträdgård", function() {deepEqual( Stem("kungsträdgården"), "kungsträdgård");});
test("kungsängsliljor -> kungsängslilj", function() {deepEqual( Stem("kungsängsliljor"), "kungsängslilj");});
test("kunna -> kunn", function() {deepEqual( Stem("kunna"), "kunn");});
test("kunnat -> kunn", function() {deepEqual( Stem("kunnat"), "kunn");});
test("kunnelse -> kunn", function() {deepEqual( Stem("kunnelse"), "kunn");});
test("kunnig -> kunn", function() {deepEqual( Stem("kunnig"), "kunn");});
test("kunniga -> kunn", function() {deepEqual( Stem("kunniga"), "kunn");});
test("kunskap -> kunskap", function() {deepEqual( Stem("kunskap"), "kunskap");});
test("kunskaper -> kunskap", function() {deepEqual( Stem("kunskaper"), "kunskap");});
test("kupeerna -> kupe", function() {deepEqual( Stem("kupeerna"), "kupe");});
test("kupefönstren -> kupefönstr", function() {deepEqual( Stem("kupefönstren"), "kupefönstr");});
test("kupiga -> kup", function() {deepEqual( Stem("kupiga"), "kup");});
test("kur -> kur", function() {deepEqual( Stem("kur"), "kur");});
test("kurage -> kurag", function() {deepEqual( Stem("kurage"), "kurag");});
test("kurbits -> kurbit", function() {deepEqual( Stem("kurbits"), "kurbit");});
test("kurbitsen -> kurbits", function() {deepEqual( Stem("kurbitsen"), "kurbits");});
test("kurbitsmålning -> kurbitsmålning", function() {deepEqual( Stem("kurbitsmålning"), "kurbitsmålning");});
test("kuren -> kur", function() {deepEqual( Stem("kuren"), "kur");});
test("kurerar -> kurer", function() {deepEqual( Stem("kurerar"), "kurer");});
test("kurlde -> kurld", function() {deepEqual( Stem("kurlde"), "kurld");});
test("kurma -> kurm", function() {deepEqual( Stem("kurma"), "kurm");});
test("kurna -> kurn", function() {deepEqual( Stem("kurna"), "kurn");});
test("kurort -> kurort", function() {deepEqual( Stem("kurort"), "kurort");});
test("kurragömmalek -> kurragömmalek", function() {deepEqual( Stem("kurragömmalek"), "kurragömmalek");});
test("kurre -> kurr", function() {deepEqual( Stem("kurre"), "kurr");});
test("kurs -> kur", function() {deepEqual( Stem("kurs"), "kur");});
test("kursavgifter -> kursavgift", function() {deepEqual( Stem("kursavgifter"), "kursavgift");});
test("kursen -> kurs", function() {deepEqual( Stem("kursen"), "kurs");});
test("kursiv -> kursiv", function() {deepEqual( Stem("kursiv"), "kursiv");});
test("kursiva -> kursiv", function() {deepEqual( Stem("kursiva"), "kursiv");});
test("kurtis -> kurtis", function() {deepEqual( Stem("kurtis"), "kurtis");});
test("kurtisaner -> kurtisan", function() {deepEqual( Stem("kurtisaner"), "kurtisan");});
test("kurtisen -> kurtis", function() {deepEqual( Stem("kurtisen"), "kurtis");});
test("kurtiser -> kurtis", function() {deepEqual( Stem("kurtiser"), "kurtis");});
test("kurva -> kurv", function() {deepEqual( Stem("kurva"), "kurv");});
test("kurvor -> kurv", function() {deepEqual( Stem("kurvor"), "kurv");});
test("kuscha -> kusch", function() {deepEqual( Stem("kuscha"), "kusch");});
test("kusin -> kusin", function() {deepEqual( Stem("kusin"), "kusin");});
test("kusinens -> kusin", function() {deepEqual( Stem("kusinens"), "kusin");});
test("kusiner -> kusin", function() {deepEqual( Stem("kusiner"), "kusin");});
test("kusinerna -> kusin", function() {deepEqual( Stem("kusinerna"), "kusin");});
test("kusinernas -> kusin", function() {deepEqual( Stem("kusinernas"), "kusin");});
test("kusins -> kusin", function() {deepEqual( Stem("kusins"), "kusin");});
test("kusken -> kusk", function() {deepEqual( Stem("kusken"), "kusk");});
test("kusligt -> kus", function() {deepEqual( Stem("kusligt"), "kus");});
test("kust -> kust", function() {deepEqual( Stem("kust"), "kust");});
test("kustbevakare -> kustbevak", function() {deepEqual( Stem("kustbevakare"), "kustbevak");});
test("kustbevakaren -> kustbevak", function() {deepEqual( Stem("kustbevakaren"), "kustbevak");});
test("kustbevakarens -> kustbevak", function() {deepEqual( Stem("kustbevakarens"), "kustbevak");});
test("kusten -> kust", function() {deepEqual( Stem("kusten"), "kust");});
test("kustens -> kust", function() {deepEqual( Stem("kustens"), "kust");});
test("kustnaturen -> kustnatur", function() {deepEqual( Stem("kustnaturen"), "kustnatur");});
test("kuststaden -> kuststad", function() {deepEqual( Stem("kuststaden"), "kuststad");});
test("kusttjensteman -> kusttjensteman", function() {deepEqual( Stem("kusttjensteman"), "kusttjensteman");});
test("kusttjenstemän -> kusttjenstemän", function() {deepEqual( Stem("kusttjenstemän"), "kusttjenstemän");});
test("kustuppsyningsmannen -> kustuppsyningsman", function() {deepEqual( Stem("kustuppsyningsmannen"), "kustuppsyningsman");});
test("kut -> kut", function() {deepEqual( Stem("kut"), "kut");});
test("kutiga -> kut", function() {deepEqual( Stem("kutiga"), "kut");});
test("kutter -> kutt", function() {deepEqual( Stem("kutter"), "kutt");});
test("kuttra -> kuttr", function() {deepEqual( Stem("kuttra"), "kuttr");});
test("kuva -> kuv", function() {deepEqual( Stem("kuva"), "kuv");});
test("kuvad -> kuv", function() {deepEqual( Stem("kuvad"), "kuv");});
test("kuvade -> kuv", function() {deepEqual( Stem("kuvade"), "kuv");});
test("kuvert -> kuvert", function() {deepEqual( Stem("kuvert"), "kuvert");});
test("kuvertet -> kuvertet", function() {deepEqual( Stem("kuvertet"), "kuvertet");});
test("kvadrat -> kvadr", function() {deepEqual( Stem("kvadrat"), "kvadr");});
test("kvadraten -> kvadrat", function() {deepEqual( Stem("kvadraten"), "kvadrat");});
test("kval -> kval", function() {deepEqual( Stem("kval"), "kval");});
test("kvald -> kvald", function() {deepEqual( Stem("kvald"), "kvald");});
test("kvalda -> kvald", function() {deepEqual( Stem("kvalda"), "kvald");});
test("kvalde -> kvald", function() {deepEqual( Stem("kvalde"), "kvald");});
test("kvaldes -> kvald", function() {deepEqual( Stem("kvaldes"), "kvald");});
test("kvalfull -> kvalfull", function() {deepEqual( Stem("kvalfull"), "kvalfull");});
test("kvalfullt -> kvalfull", function() {deepEqual( Stem("kvalfullt"), "kvalfull");});
test("kvalfylld -> kvalfylld", function() {deepEqual( Stem("kvalfylld"), "kvalfylld");});
test("kvalitetsvagn -> kvalitetsvagn", function() {deepEqual( Stem("kvalitetsvagn"), "kvalitetsvagn");});
test("kvall -> kvall", function() {deepEqual( Stem("kvall"), "kvall");});
test("kvalm -> kvalm", function() {deepEqual( Stem("kvalm"), "kvalm");});
test("kvalmig -> kvalm", function() {deepEqual( Stem("kvalmig"), "kvalm");});
test("kvalmiga -> kvalm", function() {deepEqual( Stem("kvalmiga"), "kvalm");});
test("kvar -> kvar", function() {deepEqual( Stem("kvar"), "kvar");});
test("kvarblevo -> kvarblevo", function() {deepEqual( Stem("kvarblevo"), "kvarblevo");});
test("kvarglömd -> kvarglömd", function() {deepEqual( Stem("kvarglömd"), "kvarglömd");});
test("kvarhålla -> kvarhåll", function() {deepEqual( Stem("kvarhålla"), "kvarhåll");});
test("kvarhölls -> kvarhöll", function() {deepEqual( Stem("kvarhölls"), "kvarhöll");});
test("kvarlevande -> kvarlev", function() {deepEqual( Stem("kvarlevande"), "kvarlev");});
test("kvarlevorna -> kvarlev", function() {deepEqual( Stem("kvarlevorna"), "kvarlev");});
test("kvarlämna -> kvarlämn", function() {deepEqual( Stem("kvarlämna"), "kvarlämn");});
test("kvarndrängen -> kvarndräng", function() {deepEqual( Stem("kvarndrängen"), "kvarndräng");});
test("kvarnen -> kvarn", function() {deepEqual( Stem("kvarnen"), "kvarn");});
test("kvarnforsen -> kvarnfors", function() {deepEqual( Stem("kvarnforsen"), "kvarnfors");});
test("kvarnhjul -> kvarnhjul", function() {deepEqual( Stem("kvarnhjul"), "kvarnhjul");});
test("kvarnhjulshatten -> kvarnhjulshat", function() {deepEqual( Stem("kvarnhjulshatten"), "kvarnhjulshat");});
test("kvarnlekan -> kvarnlekan", function() {deepEqual( Stem("kvarnlekan"), "kvarnlekan");});
test("kvarntorrt -> kvarntorrt", function() {deepEqual( Stem("kvarntorrt"), "kvarntorrt");});
test("kvarnvinden -> kvarnvind", function() {deepEqual( Stem("kvarnvinden"), "kvarnvind");});
test("kvarsittande -> kvarsit", function() {deepEqual( Stem("kvarsittande"), "kvarsit");});
test("kvarsittare -> kvarsit", function() {deepEqual( Stem("kvarsittare"), "kvarsit");});
test("kvarstod -> kvarstod", function() {deepEqual( Stem("kvarstod"), "kvarstod");});
test("kvarstå -> kvarstå", function() {deepEqual( Stem("kvarstå"), "kvarstå");});
test("kvart -> kvart", function() {deepEqual( Stem("kvart"), "kvart");});
test("kvartalet -> kvartalet", function() {deepEqual( Stem("kvartalet"), "kvartalet");});
test("kvartalets -> kvartalet", function() {deepEqual( Stem("kvartalets"), "kvartalet");});
test("kvartalsvis -> kvartalsvis", function() {deepEqual( Stem("kvartalsvis"), "kvartalsvis");});
test("kvarteis -> kvarteis", function() {deepEqual( Stem("kvarteis"), "kvarteis");});
test("kvarten -> kvart", function() {deepEqual( Stem("kvarten"), "kvart");});
test("kvarter -> kvart", function() {deepEqual( Stem("kvarter"), "kvart");});
test("kvarts -> kvart", function() {deepEqual( Stem("kvarts"), "kvart");});
test("kvartsbuteljer -> kvartsbutelj", function() {deepEqual( Stem("kvartsbuteljer"), "kvartsbutelj");});
test("kvasten -> kvast", function() {deepEqual( Stem("kvasten"), "kvast");});
test("kvastkäpp -> kvastkäpp", function() {deepEqual( Stem("kvastkäpp"), "kvastkäpp");});
test("kvav -> kvav", function() {deepEqual( Stem("kvav"), "kvav");});
test("kvava -> kvav", function() {deepEqual( Stem("kvava"), "kvav");});
test("kvavt -> kvavt", function() {deepEqual( Stem("kvavt"), "kvavt");});
test("kved -> kved", function() {deepEqual( Stem("kved"), "kved");});
test("kvick -> kvick", function() {deepEqual( Stem("kvick"), "kvick");});
test("kvicka -> kvick", function() {deepEqual( Stem("kvicka"), "kvick");});
test("kvickheter -> kvick", function() {deepEqual( Stem("kvickheter"), "kvick");});
test("kvickna -> kvickn", function() {deepEqual( Stem("kvickna"), "kvickn");});
test("kvickt -> kvick", function() {deepEqual( Stem("kvickt"), "kvick");});
test("kvida -> kvid", function() {deepEqual( Stem("kvida"), "kvid");});
test("kvidande -> kvid", function() {deepEqual( Stem("kvidande"), "kvid");});
test("kvider -> kvid", function() {deepEqual( Stem("kvider"), "kvid");});
test("kvill -> kvill", function() {deepEqual( Stem("kvill"), "kvill");});
test("kvin -> kvin", function() {deepEqual( Stem("kvin"), "kvin");});
test("kvinna -> kvinn", function() {deepEqual( Stem("kvinna"), "kvinn");});
test("kvinnan -> kvinnan", function() {deepEqual( Stem("kvinnan"), "kvinnan");});
test("kvinnans -> kvinnan", function() {deepEqual( Stem("kvinnans"), "kvinnan");});
test("kvinnas -> kvinn", function() {deepEqual( Stem("kvinnas"), "kvinn");});
test("kvinnfolk -> kvinnfolk", function() {deepEqual( Stem("kvinnfolk"), "kvinnfolk");});
test("kvinnfolken -> kvinnfolk", function() {deepEqual( Stem("kvinnfolken"), "kvinnfolk");});
test("kvinnlig -> kvinn", function() {deepEqual( Stem("kvinnlig"), "kvinn");});
test("kvinnliga -> kvinn", function() {deepEqual( Stem("kvinnliga"), "kvinn");});
test("kvinnlighet -> kvinn", function() {deepEqual( Stem("kvinnlighet"), "kvinn");});
test("kvinnligt -> kvinn", function() {deepEqual( Stem("kvinnligt"), "kvinn");});
test("kvinno -> kvinno", function() {deepEqual( Stem("kvinno"), "kvinno");});
test("kvinnoarmar -> kvinnoarm", function() {deepEqual( Stem("kvinnoarmar"), "kvinnoarm");});
test("kvinnoblomma -> kvinnoblomm", function() {deepEqual( Stem("kvinnoblomma"), "kvinnoblomm");});
test("kvinnoblomman -> kvinnoblomman", function() {deepEqual( Stem("kvinnoblomman"), "kvinnoblomman");});
test("kvinnohuvuds -> kvinnohuvud", function() {deepEqual( Stem("kvinnohuvuds"), "kvinnohuvud");});
test("kvinnohår -> kvinnohår", function() {deepEqual( Stem("kvinnohår"), "kvinnohår");});
test("kvinnokropp -> kvinnokropp", function() {deepEqual( Stem("kvinnokropp"), "kvinnokropp");});
test("kvinnolist -> kvinnolist", function() {deepEqual( Stem("kvinnolist"), "kvinnolist");});
test("kvinnoläkare -> kvinnoläk", function() {deepEqual( Stem("kvinnoläkare"), "kvinnoläk");});
test("kvinnoläkaren -> kvinnoläk", function() {deepEqual( Stem("kvinnoläkaren"), "kvinnoläk");});
test("kvinnomakt -> kvinnomak", function() {deepEqual( Stem("kvinnomakt"), "kvinnomak");});
test("kvinnomänniska -> kvinnomännisk", function() {deepEqual( Stem("kvinnomänniska"), "kvinnomännisk");});
test("kvinnor -> kvinn", function() {deepEqual( Stem("kvinnor"), "kvinn");});
test("kvinnorna -> kvinn", function() {deepEqual( Stem("kvinnorna"), "kvinn");});
test("kvinnornas -> kvinn", function() {deepEqual( Stem("kvinnornas"), "kvinn");});
test("kvinnorov -> kvinnorov", function() {deepEqual( Stem("kvinnorov"), "kvinnorov");});
test("kvinnors -> kvinnor", function() {deepEqual( Stem("kvinnors"), "kvinnor");});
test("kvinnoröst -> kvinnoröst", function() {deepEqual( Stem("kvinnoröst"), "kvinnoröst");});
test("kvinnorösten -> kvinnoröst", function() {deepEqual( Stem("kvinnorösten"), "kvinnoröst");});
test("kvinnosidan -> kvinnosidan", function() {deepEqual( Stem("kvinnosidan"), "kvinnosidan");});
test("kvinnoskepelse -> kvinnoskep", function() {deepEqual( Stem("kvinnoskepelse"), "kvinnoskep");});
test("kvinnovarelse -> kvinnovar", function() {deepEqual( Stem("kvinnovarelse"), "kvinnovar");});
test("kvinnsperson -> kvinnsperson", function() {deepEqual( Stem("kvinnsperson"), "kvinnsperson");});
test("kvist -> kvist", function() {deepEqual( Stem("kvist"), "kvist");});
test("kvistar -> kvist", function() {deepEqual( Stem("kvistar"), "kvist");});
test("kvisten -> kvist", function() {deepEqual( Stem("kvisten"), "kvist");});
test("kvitt -> kvitt", function() {deepEqual( Stem("kvitt"), "kvitt");});
test("kvitter -> kvitt", function() {deepEqual( Stem("kvitter"), "kvitt");});
test("kvittera -> kvitter", function() {deepEqual( Stem("kvittera"), "kvitter");});
test("kvitterat -> kvitter", function() {deepEqual( Stem("kvitterat"), "kvitter");});
test("kvittning -> kvittning", function() {deepEqual( Stem("kvittning"), "kvittning");});
test("kvittra -> kvittr", function() {deepEqual( Stem("kvittra"), "kvittr");});
test("kvittrade -> kvittr", function() {deepEqual( Stem("kvittrade"), "kvittr");});
test("kvittrande -> kvittr", function() {deepEqual( Stem("kvittrande"), "kvittr");});
test("kvittrat -> kvittr", function() {deepEqual( Stem("kvittrat"), "kvittr");});
test("kväd -> kväd", function() {deepEqual( Stem("kväd"), "kväd");});
test("kväden -> kväd", function() {deepEqual( Stem("kväden"), "kväd");});
test("kväkarsträng -> kväkarsträng", function() {deepEqual( Stem("kväkarsträng"), "kväkarsträng");});
test("kväljningar -> kväljning", function() {deepEqual( Stem("kväljningar"), "kväljning");});
test("kväljningarna -> kväljning", function() {deepEqual( Stem("kväljningarna"), "kväljning");});
test("kväll -> kväll", function() {deepEqual( Stem("kväll"), "kväll");});
test("kvälla -> kväll", function() {deepEqual( Stem("kvälla"), "kväll");});
test("kvällar -> kväll", function() {deepEqual( Stem("kvällar"), "kväll");});
test("kvällarna -> kväll", function() {deepEqual( Stem("kvällarna"), "kväll");});
test("kvälldags -> kvälldag", function() {deepEqual( Stem("kvälldags"), "kvälldag");});
test("kvällen -> kväll", function() {deepEqual( Stem("kvällen"), "kväll");});
test("kvällens -> kväll", function() {deepEqual( Stem("kvällens"), "kväll");});
test("kvällshimlens -> kvällshiml", function() {deepEqual( Stem("kvällshimlens"), "kvällshiml");});
test("kvällsluften -> kvällsluft", function() {deepEqual( Stem("kvällsluften"), "kvällsluft");});
test("kvällsolen -> kvällsol", function() {deepEqual( Stem("kvällsolen"), "kvällsol");});
test("kvällspromenad -> kvällspromen", function() {deepEqual( Stem("kvällspromenad"), "kvällspromen");});
test("kvällssky -> kvällssky", function() {deepEqual( Stem("kvällssky"), "kvällssky");});
test("kvällstysta -> kvällstyst", function() {deepEqual( Stem("kvällstysta"), "kvällstyst");});
test("kvällsvard -> kvällsvard", function() {deepEqual( Stem("kvällsvard"), "kvällsvard");});
test("kvällsvarden -> kvällsvard", function() {deepEqual( Stem("kvällsvarden"), "kvällsvard");});
test("kväsa -> kväs", function() {deepEqual( Stem("kväsa"), "kväs");});
test("kväv -> kväv", function() {deepEqual( Stem("kväv"), "kväv");});
test("kväva -> kväv", function() {deepEqual( Stem("kväva"), "kväv");});
test("kvävande -> kväv", function() {deepEqual( Stem("kvävande"), "kväv");});
test("kvävas -> kväv", function() {deepEqual( Stem("kvävas"), "kväv");});
test("kvävd -> kvävd", function() {deepEqual( Stem("kvävd"), "kvävd");});
test("kvävda -> kvävd", function() {deepEqual( Stem("kvävda"), "kvävd");});
test("kvävde -> kvävd", function() {deepEqual( Stem("kvävde"), "kvävd");});
test("kvävdes -> kvävd", function() {deepEqual( Stem("kvävdes"), "kvävd");});
test("kväve -> kväv", function() {deepEqual( Stem("kväve"), "kväv");});
test("kvävs -> kväv", function() {deepEqual( Stem("kvävs"), "kväv");});
test("kvävt -> kvävt", function() {deepEqual( Stem("kvävt"), "kvävt");});
test("kycklidgar -> kycklidg", function() {deepEqual( Stem("kycklidgar"), "kycklidg");});
test("kycklingar -> kyckling", function() {deepEqual( Stem("kycklingar"), "kyckling");});
test("kyffet -> kyffet", function() {deepEqual( Stem("kyffet"), "kyffet");});
test("kyla -> kyl", function() {deepEqual( Stem("kyla"), "kyl");});
test("kylde -> kyld", function() {deepEqual( Stem("kylde"), "kyld");});
test("kylig -> kyl", function() {deepEqual( Stem("kylig"), "kyl");});
test("kyliga -> kyl", function() {deepEqual( Stem("kyliga"), "kyl");});
test("kyligt -> kyl", function() {deepEqual( Stem("kyligt"), "kyl");});
test("kymmer -> kymm", function() {deepEqual( Stem("kymmer"), "kymm");});
test("kymriska -> kymrisk", function() {deepEqual( Stem("kymriska"), "kymrisk");});
test("kyparen -> kyp", function() {deepEqual( Stem("kyparen"), "kyp");});
test("kyrka -> kyrk", function() {deepEqual( Stem("kyrka"), "kyrk");});
test("kyrkan -> kyrkan", function() {deepEqual( Stem("kyrkan"), "kyrkan");});
test("kyrkans -> kyrkan", function() {deepEqual( Stem("kyrkans"), "kyrkan");});
test("kyrkfolket -> kyrkfolket", function() {deepEqual( Stem("kyrkfolket"), "kyrkfolket");});
test("kyrkklockan -> kyrkklockan", function() {deepEqual( Stem("kyrkklockan"), "kyrkklockan");});
test("kyrkklockans -> kyrkklockan", function() {deepEqual( Stem("kyrkklockans"), "kyrkklockan");});
test("kyrkobacken -> kyrkoback", function() {deepEqual( Stem("kyrkobacken"), "kyrkoback");});
test("kyrkofadern -> kyrkofad", function() {deepEqual( Stem("kyrkofadern"), "kyrkofad");});
test("kyrkogard -> kyrkogard", function() {deepEqual( Stem("kyrkogard"), "kyrkogard");});
test("kyrkogardar -> kyrkogard", function() {deepEqual( Stem("kyrkogardar"), "kyrkogard");});
test("kyrkogård -> kyrkogård", function() {deepEqual( Stem("kyrkogård"), "kyrkogård");});
test("kyrkogården -> kyrkogård", function() {deepEqual( Stem("kyrkogården"), "kyrkogård");});
test("kyrkogårdens -> kyrkogård", function() {deepEqual( Stem("kyrkogårdens"), "kyrkogård");});
test("kyrkogårdshymner -> kyrkogårdshymn", function() {deepEqual( Stem("kyrkogårdshymner"), "kyrkogårdshymn");});
test("kyrkogårdshörnet -> kyrkogårdshörnet", function() {deepEqual( Stem("kyrkogårdshörnet"), "kyrkogårdshörnet");});
test("kyrkogårdsmuren -> kyrkogårdsmur", function() {deepEqual( Stem("kyrkogårdsmuren"), "kyrkogårdsmur");});
test("kyrkogårdsporten -> kyrkogårdsport", function() {deepEqual( Stem("kyrkogårdsporten"), "kyrkogårdsport");});
test("kyrkoherde -> kyrkoherd", function() {deepEqual( Stem("kyrkoherde"), "kyrkoherd");});
test("kyrkoherden -> kyrkoherd", function() {deepEqual( Stem("kyrkoherden"), "kyrkoherd");});
test("kyrkomuren -> kyrkomur", function() {deepEqual( Stem("kyrkomuren"), "kyrkomur");});
test("kyrkomusiken -> kyrkomusik", function() {deepEqual( Stem("kyrkomusiken"), "kyrkomusik");});
test("kyrkor -> kyrk", function() {deepEqual( Stem("kyrkor"), "kyrk");});
test("kyrkorna -> kyrk", function() {deepEqual( Stem("kyrkorna"), "kyrk");});
test("kyrkosångarne -> kyrkosång", function() {deepEqual( Stem("kyrkosångarne"), "kyrkosång");});
test("kyrkovärdar -> kyrkovärd", function() {deepEqual( Stem("kyrkovärdar"), "kyrkovärd");});
test("kyrkplikt -> kyrkplik", function() {deepEqual( Stem("kyrkplikt"), "kyrkplik");});
test("kyrkporten -> kyrkport", function() {deepEqual( Stem("kyrkporten"), "kyrkport");});
test("kyrksilvret -> kyrksilvret", function() {deepEqual( Stem("kyrksilvret"), "kyrksilvret");});
test("kyrkspiran -> kyrkspiran", function() {deepEqual( Stem("kyrkspiran"), "kyrkspiran");});
test("kyrktaket -> kyrktaket", function() {deepEqual( Stem("kyrktaket"), "kyrktaket");});
test("kyrktornet -> kyrktornet", function() {deepEqual( Stem("kyrktornet"), "kyrktornet");});
test("kyrktrappan -> kyrktrappan", function() {deepEqual( Stem("kyrktrappan"), "kyrktrappan");});
test("kyrktuppen -> kyrktupp", function() {deepEqual( Stem("kyrktuppen"), "kyrktupp");});
test("kyrkvallen -> kyrkvall", function() {deepEqual( Stem("kyrkvallen"), "kyrkvall");});
test("kysk -> kysk", function() {deepEqual( Stem("kysk"), "kysk");});
test("kyska -> kysk", function() {deepEqual( Stem("kyska"), "kysk");});
test("kyss -> kyss", function() {deepEqual( Stem("kyss"), "kyss");});
test("kyssa -> kyss", function() {deepEqual( Stem("kyssa"), "kyss");});
test("kyssande -> kyss", function() {deepEqual( Stem("kyssande"), "kyss");});
test("kyssar -> kyss", function() {deepEqual( Stem("kyssar"), "kyss");});
test("kyssarna -> kyss", function() {deepEqual( Stem("kyssarna"), "kyss");});
test("kyssas -> kyss", function() {deepEqual( Stem("kyssas"), "kyss");});
test("kyssen -> kyss", function() {deepEqual( Stem("kyssen"), "kyss");});
test("kysser -> kyss", function() {deepEqual( Stem("kysser"), "kyss");});
test("kysst -> kysst", function() {deepEqual( Stem("kysst"), "kysst");});
test("kysste -> kysst", function() {deepEqual( Stem("kysste"), "kysst");});
test("kysstes -> kysst", function() {deepEqual( Stem("kysstes"), "kysst");});
test("käck -> käck", function() {deepEqual( Stem("käck"), "käck");});
test("käcka -> käck", function() {deepEqual( Stem("käcka"), "käck");});
test("käckaste -> käck", function() {deepEqual( Stem("käckaste"), "käck");});
test("käckt -> käck", function() {deepEqual( Stem("käckt"), "käck");});
test("käft -> käft", function() {deepEqual( Stem("käft"), "käft");});
test("käften -> käft", function() {deepEqual( Stem("käften"), "käft");});
test("kägla -> kägl", function() {deepEqual( Stem("kägla"), "kägl");});
test("käk -> käk", function() {deepEqual( Stem("käk"), "käk");});
test("käkar -> käk", function() {deepEqual( Stem("käkar"), "käk");});
test("käkarna -> käk", function() {deepEqual( Stem("käkarna"), "käk");});
test("kälkborgare -> kälkborg", function() {deepEqual( Stem("kälkborgare"), "kälkborg");});
test("källa -> käll", function() {deepEqual( Stem("källa"), "käll");});
test("källan -> källan", function() {deepEqual( Stem("källan"), "källan");});
test("källare -> käll", function() {deepEqual( Stem("källare"), "käll");});
test("källaren -> käll", function() {deepEqual( Stem("källaren"), "käll");});
test("källarglugg -> källarglugg", function() {deepEqual( Stem("källarglugg"), "källarglugg");});
test("källarkund -> källarkund", function() {deepEqual( Stem("källarkund"), "källarkund");});
test("källarmästaren -> källarmäst", function() {deepEqual( Stem("källarmästaren"), "källarmäst");});
test("källarmästarfrun -> källarmästarfrun", function() {deepEqual( Stem("källarmästarfrun"), "källarmästarfrun");});
test("källarn -> källarn", function() {deepEqual( Stem("källarn"), "källarn");});
test("källarsal -> källarsal", function() {deepEqual( Stem("källarsal"), "källarsal");});
test("källas -> käll", function() {deepEqual( Stem("källas"), "käll");});
test("källklar -> källkl", function() {deepEqual( Stem("källklar"), "källkl");});
test("källorna -> käll", function() {deepEqual( Stem("källorna"), "käll");});
test("källrar -> källr", function() {deepEqual( Stem("källrar"), "källr");});
test("kälms -> kälm", function() {deepEqual( Stem("kälms"), "kälm");});
test("kält -> kält", function() {deepEqual( Stem("kält"), "kält");});
test("kämla -> käml", function() {deepEqual( Stem("kämla"), "käml");});
test("kämpa -> kämp", function() {deepEqual( Stem("kämpa"), "kämp");});
test("kämpade -> kämp", function() {deepEqual( Stem("kämpade"), "kämp");});
test("kämpande -> kämp", function() {deepEqual( Stem("kämpande"), "kämp");});
test("kämpat -> kämp", function() {deepEqual( Stem("kämpat"), "kämp");});
test("känbar -> känb", function() {deepEqual( Stem("känbar"), "känb");});
test("känbart -> känbart", function() {deepEqual( Stem("känbart"), "känbart");});
test("känd -> känd", function() {deepEqual( Stem("känd"), "känd");});
test("kända -> känd", function() {deepEqual( Stem("kända"), "känd");});
test("kändc -> kändc", function() {deepEqual( Stem("kändc"), "kändc");});
test("kände -> känd", function() {deepEqual( Stem("kände"), "känd");});
test("kändes -> känd", function() {deepEqual( Stem("kändes"), "känd");});
test("kängor -> käng", function() {deepEqual( Stem("kängor"), "käng");});
test("känhända -> känhänd", function() {deepEqual( Stem("känhända"), "känhänd");});
test("känn -> känn", function() {deepEqual( Stem("känn"), "känn");});
test("känna -> känn", function() {deepEqual( Stem("känna"), "känn");});
test("kännareblick -> kännareblick", function() {deepEqual( Stem("kännareblick"), "kännareblick");});
test("kännas -> känn", function() {deepEqual( Stem("kännas"), "känn");});
test("kännbar -> kännb", function() {deepEqual( Stem("kännbar"), "kännb");});
test("kännbart -> kännbart", function() {deepEqual( Stem("kännbart"), "kännbart");});
test("känncr -> känncr", function() {deepEqual( Stem("känncr"), "känncr");});
test("känne -> känn", function() {deepEqual( Stem("känne"), "känn");});
test("kännedom -> kännedom", function() {deepEqual( Stem("kännedom"), "kännedom");});
test("kännedomen -> kännedom", function() {deepEqual( Stem("kännedomen"), "kännedom");});
test("känner -> känn", function() {deepEqual( Stem("känner"), "känn");});
test("kännes -> känn", function() {deepEqual( Stem("kännes"), "känn");});
test("kännetecken -> känneteck", function() {deepEqual( Stem("kännetecken"), "känneteck");});
test("känning -> känning", function() {deepEqual( Stem("känning"), "känning");});
test("känningar -> känning", function() {deepEqual( Stem("känningar"), "känning");});
test("känns -> känn", function() {deepEqual( Stem("känns"), "känn");});
test("käns -> kän", function() {deepEqual( Stem("käns"), "kän");});
test("känsla -> känsl", function() {deepEqual( Stem("känsla"), "känsl");});
test("känslan -> känslan", function() {deepEqual( Stem("känslan"), "känslan");});
test("känslans -> känslan", function() {deepEqual( Stem("känslans"), "känslan");});
test("känslig -> käns", function() {deepEqual( Stem("känslig"), "käns");});
test("känsliga -> käns", function() {deepEqual( Stem("känsliga"), "käns");});
test("känslige -> käns", function() {deepEqual( Stem("känslige"), "käns");});
test("känsligt -> käns", function() {deepEqual( Stem("känsligt"), "käns");});
test("känsloliv -> känsloliv", function() {deepEqual( Stem("känsloliv"), "känsloliv");});
test("känslolös -> känslolös", function() {deepEqual( Stem("känslolös"), "känslolös");});
test("känslolöst -> känslolös", function() {deepEqual( Stem("känslolöst"), "känslolös");});
test("känslor -> känsl", function() {deepEqual( Stem("känslor"), "känsl");});
test("känslorna -> känsl", function() {deepEqual( Stem("känslorna"), "känsl");});
test("känslornas -> känsl", function() {deepEqual( Stem("känslornas"), "känsl");});
test("känslostormarna -> känslostorm", function() {deepEqual( Stem("känslostormarna"), "känslostorm");});
test("känslouttryck -> känslouttryck", function() {deepEqual( Stem("känslouttryck"), "känslouttryck");});
test("känsö -> känsö", function() {deepEqual( Stem("känsö"), "känsö");});
test("känt -> känt", function() {deepEqual( Stem("känt"), "känt");});
test("känts -> känt", function() {deepEqual( Stem("känts"), "känt");});
test("käpp -> käpp", function() {deepEqual( Stem("käpp"), "käpp");});
test("käppen -> käpp", function() {deepEqual( Stem("käppen"), "käpp");});
test("käppkryckan -> käppkryckan", function() {deepEqual( Stem("käppkryckan"), "käppkryckan");});
test("kär -> kär", function() {deepEqual( Stem("kär"), "kär");});
test("kära -> kär", function() {deepEqual( Stem("kära"), "kär");});
test("kärare -> kär", function() {deepEqual( Stem("kärare"), "kär");});
test("käraste -> kär", function() {deepEqual( Stem("käraste"), "kär");});
test("kärastes -> kärast", function() {deepEqual( Stem("kärastes"), "kärast");});
test("käre -> kär", function() {deepEqual( Stem("käre"), "kär");});
test("käresta -> kärest", function() {deepEqual( Stem("käresta"), "kärest");});
test("kärestan -> kärestan", function() {deepEqual( Stem("kärestan"), "kärestan");});
test("kärft -> kärft", function() {deepEqual( Stem("kärft"), "kärft");});
test("käri -> käri", function() {deepEqual( Stem("käri"), "käri");});
test("käril -> käril", function() {deepEqual( Stem("käril"), "käril");});
test("käring -> käring", function() {deepEqual( Stem("käring"), "käring");});
test("käringar -> käring", function() {deepEqual( Stem("käringar"), "käring");});
test("käringen -> käring", function() {deepEqual( Stem("käringen"), "käring");});
test("kärl -> kärl", function() {deepEqual( Stem("kärl"), "kärl");});
test("kärlek -> kärlek", function() {deepEqual( Stem("kärlek"), "kärlek");});
test("kärleken -> kärlek", function() {deepEqual( Stem("kärleken"), "kärlek");});
test("kärlekens -> kärlek", function() {deepEqual( Stem("kärlekens"), "kärlek");});
test("kärleks -> kärlek", function() {deepEqual( Stem("kärleks"), "kärlek");});
test("kärleksaffären -> kärleksaffär", function() {deepEqual( Stem("kärleksaffären"), "kärleksaffär");});
test("kärleksakten -> kärleksak", function() {deepEqual( Stem("kärleksakten"), "kärleksak");});
test("kärleksbetygelser -> kärleksbetyg", function() {deepEqual( Stem("kärleksbetygelser"), "kärleksbetyg");});
test("kärleksbrev -> kärleksbrev", function() {deepEqual( Stem("kärleksbrev"), "kärleksbrev");});
test("kärleksfull -> kärleksfull", function() {deepEqual( Stem("kärleksfull"), "kärleksfull");});
test("kärleksfulla -> kärleksfull", function() {deepEqual( Stem("kärleksfulla"), "kärleksfull");});
test("kärleksfulle -> kärleksfull", function() {deepEqual( Stem("kärleksfulle"), "kärleksfull");});
test("kärleksfullt -> kärleksfull", function() {deepEqual( Stem("kärleksfullt"), "kärleksfull");});
test("kärleksförkiaringarna -> kärleksförkiaring", function() {deepEqual( Stem("kärleksförkiaringarna"), "kärleksförkiaring");});
test("kärleksförklaring -> kärleksförklaring", function() {deepEqual( Stem("kärleksförklaring"), "kärleksförklaring");});
test("kärleksförklaringarna -> kärleksförklaring", function() {deepEqual( Stem("kärleksförklaringarna"), "kärleksförklaring");});
test("kärleksglam -> kärleksglam", function() {deepEqual( Stem("kärleksglam"), "kärleksglam");});
test("kärlekshandel -> kärlekshandel", function() {deepEqual( Stem("kärlekshandel"), "kärlekshandel");});
test("kärlekshistoria -> kärlekshistori", function() {deepEqual( Stem("kärlekshistoria"), "kärlekshistori");});
test("kärlekshistorien -> kärlekshistori", function() {deepEqual( Stem("kärlekshistorien"), "kärlekshistori");});
test("kärlekshistorier -> kärlekshistori", function() {deepEqual( Stem("kärlekshistorier"), "kärlekshistori");});
test("kärleksintrig -> kärleksintr", function() {deepEqual( Stem("kärleksintrig"), "kärleksintr");});
test("kärlekskamp -> kärlekskamp", function() {deepEqual( Stem("kärlekskamp"), "kärlekskamp");});
test("kärleksmånen -> kärleksmån", function() {deepEqual( Stem("kärleksmånen"), "kärleksmån");});
test("kärleksmöten -> kärleksmöt", function() {deepEqual( Stem("kärleksmöten"), "kärleksmöt");});
test("kärleksrika -> kärleksrik", function() {deepEqual( Stem("kärleksrika"), "kärleksrik");});
test("kärleksromaner -> kärleksroman", function() {deepEqual( Stem("kärleksromaner"), "kärleksroman");});
test("kärleksscener -> kärleksscen", function() {deepEqual( Stem("kärleksscener"), "kärleksscen");});
test("kärleksvarm -> kärleksvarm", function() {deepEqual( Stem("kärleksvarm"), "kärleksvarm");});
test("kärleksveckornas -> kärleksveck", function() {deepEqual( Stem("kärleksveckornas"), "kärleksveck");});
test("kärleksvind -> kärleksvind", function() {deepEqual( Stem("kärleksvind"), "kärleksvind");});
test("kärlig -> kär", function() {deepEqual( Stem("kärlig"), "kär");});
test("kärligt -> kär", function() {deepEqual( Stem("kärligt"), "kär");});
test("kärna -> kärn", function() {deepEqual( Stem("kärna"), "kärn");});
test("kärnan -> kärnan", function() {deepEqual( Stem("kärnan"), "kärnan");});
test("kärnfulla -> kärnfull", function() {deepEqual( Stem("kärnfulla"), "kärnfull");});
test("kärnlöst -> kärnlös", function() {deepEqual( Stem("kärnlöst"), "kärnlös");});
test("kärnspråk -> kärnspråk", function() {deepEqual( Stem("kärnspråk"), "kärnspråk");});
test("kärr -> kärr", function() {deepEqual( Stem("kärr"), "kärr");});
test("kärra -> kärr", function() {deepEqual( Stem("kärra"), "kärr");});
test("kärran -> kärran", function() {deepEqual( Stem("kärran"), "kärran");});
test("kärren -> kärr", function() {deepEqual( Stem("kärren"), "kärr");});
test("kärret -> kärret", function() {deepEqual( Stem("kärret"), "kärret");});
test("kärt -> kärt", function() {deepEqual( Stem("kärt"), "kärt");});
test("kärv -> kärv", function() {deepEqual( Stem("kärv"), "kärv");});
test("kärva -> kärv", function() {deepEqual( Stem("kärva"), "kärv");});
test("kärvt -> kärvt", function() {deepEqual( Stem("kärvt"), "kärvt");});
test("kättja -> kättj", function() {deepEqual( Stem("kättja"), "kättj");});
test("kättjan -> kättjan", function() {deepEqual( Stem("kättjan"), "kättjan");});
test("kådiga -> kåd", function() {deepEqual( Stem("kådiga"), "kåd");});
test("kåkar -> kåk", function() {deepEqual( Stem("kåkar"), "kåk");});
test("kålen -> kål", function() {deepEqual( Stem("kålen"), "kål");});
test("kåpa -> kåp", function() {deepEqual( Stem("kåpa"), "kåp");});
test("kår -> kår", function() {deepEqual( Stem("kår"), "kår");});
test("kåren -> kår", function() {deepEqual( Stem("kåren"), "kår");});
test("kåttjefulla -> kåttjefull", function() {deepEqual( Stem("kåttjefulla"), "kåttjefull");});
test("kökemästarn -> kökemästarn", function() {deepEqual( Stem("kökemästarn"), "kökemästarn");});
test("köket -> köket", function() {deepEqual( Stem("köket"), "köket");});
test("köks -> kök", function() {deepEqual( Stem("köks"), "kök");});
test("köksbordet -> köksbordet", function() {deepEqual( Stem("köksbordet"), "köksbordet");});
test("köksfönster -> köksfönst", function() {deepEqual( Stem("köksfönster"), "köksfönst");});
test("köksgolvet -> köksgolvet", function() {deepEqual( Stem("köksgolvet"), "köksgolvet");});
test("kökslampa -> kökslamp", function() {deepEqual( Stem("kökslampa"), "kökslamp");});
test("köksskåp -> köksskåp", function() {deepEqual( Stem("köksskåp"), "köksskåp");});
test("köksträdgården -> köksträdgård", function() {deepEqual( Stem("köksträdgården"), "köksträdgård");});
test("köksväldet -> köksväldet", function() {deepEqual( Stem("köksväldet"), "köksväldet");});
test("köld -> köld", function() {deepEqual( Stem("köld"), "köld");});
test("kölden -> köld", function() {deepEqual( Stem("kölden"), "köld");});
test("köldrysning -> köldrysning", function() {deepEqual( Stem("köldrysning"), "köldrysning");});
test("kön -> kön", function() {deepEqual( Stem("kön"), "kön");});
test("könet -> könet", function() {deepEqual( Stem("könet"), "könet");});
test("königsmarck -> königsmarck", function() {deepEqual( Stem("königsmarck"), "königsmarck");});
test("königsmarcks -> königsmarck", function() {deepEqual( Stem("königsmarcks"), "königsmarck");});
test("könsdrift -> könsdrift", function() {deepEqual( Stem("könsdrift"), "könsdrift");});
test("könsliga -> köns", function() {deepEqual( Stem("könsliga"), "köns");});
test("köp -> köp", function() {deepEqual( Stem("köp"), "köp");});
test("köpa -> köp", function() {deepEqual( Stem("köpa"), "köp");});
test("köpare -> köp", function() {deepEqual( Stem("köpare"), "köp");});
test("köparen -> köp", function() {deepEqual( Stem("köparen"), "köp");});
test("köparinnan -> köparinnan", function() {deepEqual( Stem("köparinnan"), "köparinnan");});
test("köper -> köp", function() {deepEqual( Stem("köper"), "köp");});
test("köpet -> köpet", function() {deepEqual( Stem("köpet"), "köpet");});
test("köpman -> köpman", function() {deepEqual( Stem("köpman"), "köpman");});
test("köpmangatan -> köpmangatan", function() {deepEqual( Stem("köpmangatan"), "köpmangatan");});
test("köpmannen -> köpman", function() {deepEqual( Stem("köpmannen"), "köpman");});
test("köpmanshus -> köpmanshus", function() {deepEqual( Stem("köpmanshus"), "köpmanshus");});
test("köpt -> köpt", function() {deepEqual( Stem("köpt"), "köpt");});
test("köpta -> köpt", function() {deepEqual( Stem("köpta"), "köpt");});
test("köpte -> köpt", function() {deepEqual( Stem("köpte"), "köpt");});
test("kör -> kör", function() {deepEqual( Stem("kör"), "kör");});
test("köra -> kör", function() {deepEqual( Stem("köra"), "kör");});
test("körande -> kör", function() {deepEqual( Stem("körande"), "kör");});
test("köras -> kör", function() {deepEqual( Stem("köras"), "kör");});
test("körbanan -> körbanan", function() {deepEqual( Stem("körbanan"), "körbanan");});
test("körde -> körd", function() {deepEqual( Stem("körde"), "körd");});
test("kördes -> körd", function() {deepEqual( Stem("kördes"), "körd");});
test("körjade -> körj", function() {deepEqual( Stem("körjade"), "körj");});
test("körsbär -> körsbär", function() {deepEqual( Stem("körsbär"), "körsbär");});
test("körsbäret -> körsbäret", function() {deepEqual( Stem("körsbäret"), "körsbäret");});
test("körsbärssaft -> körsbärssaft", function() {deepEqual( Stem("körsbärssaft"), "körsbärssaft");});
test("körsbärssylt -> körsbärssylt", function() {deepEqual( Stem("körsbärssylt"), "körsbärssylt");});
test("körsbärsträd -> körsbärsträd", function() {deepEqual( Stem("körsbärsträd"), "körsbärsträd");});
test("körsbärsträden -> körsbärsträd", function() {deepEqual( Stem("körsbärsträden"), "körsbärsträd");});
test("körsång -> körsång", function() {deepEqual( Stem("körsång"), "körsång");});
test("kört -> kört", function() {deepEqual( Stem("kört"), "kört");});
test("kött -> kött", function() {deepEqual( Stem("kött"), "kött");});
test("köttben -> köttb", function() {deepEqual( Stem("köttben"), "köttb");});
test("köttbullar -> köttbull", function() {deepEqual( Stem("köttbullar"), "köttbull");});
test("köttet -> köttet", function() {deepEqual( Stem("köttet"), "köttet");});
test("köttets -> köttet", function() {deepEqual( Stem("köttets"), "köttet");});
test("köttslig -> kötts", function() {deepEqual( Stem("köttslig"), "kötts");});
test("l -> l", function() {deepEqual( Stem("l"), "l");});
test("la -> la", function() {deepEqual( Stem("la"), "la");});
test("labyrint -> labyrint", function() {deepEqual( Stem("labyrint"), "labyrint");});
test("lack -> lack", function() {deepEqual( Stem("lack"), "lack");});
test("lackar -> lack", function() {deepEqual( Stem("lackar"), "lack");});
test("lackeringen -> lackering", function() {deepEqual( Stem("lackeringen"), "lackering");});
test("lackkängornas -> lackkäng", function() {deepEqual( Stem("lackkängornas"), "lackkäng");});
test("lad -> lad", function() {deepEqual( Stem("lad"), "lad");});
test("lada -> lad", function() {deepEqual( Stem("lada"), "lad");});
test("ladc -> ladc", function() {deepEqual( Stem("ladc"), "ladc");});
test("laddad -> ladd", function() {deepEqual( Stem("laddad"), "ladd");});
test("lade -> lad", function() {deepEqual( Stem("lade"), "lad");});
test("laderartade -> laderart", function() {deepEqual( Stem("laderartade"), "laderart");});
test("lades -> lad", function() {deepEqual( Stem("lades"), "lad");});
test("ladugård -> ladugård", function() {deepEqual( Stem("ladugård"), "ladugård");});
test("ladugården -> ladugård", function() {deepEqual( Stem("ladugården"), "ladugård");});
test("ladugårdsförmannen -> ladugårdsförman", function() {deepEqual( Stem("ladugårdsförmannen"), "ladugårdsförman");});
test("ladugårdslandet -> ladugårdsl", function() {deepEqual( Stem("ladugårdslandet"), "ladugårdsl");});
test("ladugårdspiga -> ladugårdsp", function() {deepEqual( Stem("ladugårdspiga"), "ladugårdsp");});
test("lafve -> lafv", function() {deepEqual( Stem("lafve"), "lafv");});
test("lag -> lag", function() {deepEqual( Stem("lag"), "lag");});
test("laga -> lag", function() {deepEqual( Stem("laga"), "lag");});
test("lagad -> lag", function() {deepEqual( Stem("lagad"), "lag");});
test("lagade -> lag", function() {deepEqual( Stem("lagade"), "lag");});
test("lagar -> lag", function() {deepEqual( Stem("lagar"), "lag");});
test("lagarna -> lag", function() {deepEqual( Stem("lagarna"), "lag");});
test("lagarne -> lag", function() {deepEqual( Stem("lagarne"), "lag");});
test("lagas -> lag", function() {deepEqual( Stem("lagas"), "lag");});
test("lagat -> lag", function() {deepEqual( Stem("lagat"), "lag");});
test("lagd -> lagd", function() {deepEqual( Stem("lagd"), "lagd");});
test("lagda -> lagd", function() {deepEqual( Stem("lagda"), "lagd");});
test("lagen -> lag", function() {deepEqual( Stem("lagen"), "lag");});
test("lagenliga -> lagen", function() {deepEqual( Stem("lagenliga"), "lagen");});
test("lagens -> lag", function() {deepEqual( Stem("lagens"), "lag");});
test("lager -> lag", function() {deepEqual( Stem("lager"), "lag");});
test("lagerheim -> lagerheim", function() {deepEqual( Stem("lagerheim"), "lagerheim");});
test("laget -> laget", function() {deepEqual( Stem("laget"), "laget");});
test("laggargamla -> laggargaml", function() {deepEqual( Stem("laggargamla"), "laggargaml");});
test("laglig -> lag", function() {deepEqual( Stem("laglig"), "lag");});
test("lagliga -> lag", function() {deepEqual( Stem("lagliga"), "lag");});
test("lagman -> lagman", function() {deepEqual( Stem("lagman"), "lagman");});
test("lagmannen -> lagman", function() {deepEqual( Stem("lagmannen"), "lagman");});
test("lagmannens -> lagman", function() {deepEqual( Stem("lagmannens"), "lagman");});
test("lago -> lago", function() {deepEqual( Stem("lago"), "lago");});
test("lagom -> lagom", function() {deepEqual( Stem("lagom"), "lagom");});
test("lagpara -> lagpar", function() {deepEqual( Stem("lagpara"), "lagpar");});
test("lagra -> lagr", function() {deepEqual( Stem("lagra"), "lagr");});
test("lagrade -> lagr", function() {deepEqual( Stem("lagrade"), "lagr");});
test("lagrar -> lagr", function() {deepEqual( Stem("lagrar"), "lagr");});
test("lagrat -> lagr", function() {deepEqual( Stem("lagrat"), "lagr");});
test("lagstiftare -> lagstift", function() {deepEqual( Stem("lagstiftare"), "lagstift");});
test("lagsökningarna -> lagsökning", function() {deepEqual( Stem("lagsökningarna"), "lagsökning");});
test("lagt -> lagt", function() {deepEqual( Stem("lagt"), "lagt");});
test("lakan -> lakan", function() {deepEqual( Stem("lakan"), "lakan");});
test("lakanen -> lakan", function() {deepEqual( Stem("lakanen"), "lakan");});
test("lakanet -> lakanet", function() {deepEqual( Stem("lakanet"), "lakanet");});
test("lakej -> lakej", function() {deepEqual( Stem("lakej"), "lakej");});
test("lakoniskt -> lakonisk", function() {deepEqual( Stem("lakoniskt"), "lakonisk");});
test("lallade -> lall", function() {deepEqual( Stem("lallade"), "lall");});
test("lam -> lam", function() {deepEqual( Stem("lam"), "lam");});
test("lama -> lam", function() {deepEqual( Stem("lama"), "lam");});
test("lamdet -> lamdet", function() {deepEqual( Stem("lamdet"), "lamdet");});
test("lamm -> lamm", function() {deepEqual( Stem("lamm"), "lamm");});
test("lammet -> lammet", function() {deepEqual( Stem("lammet"), "lammet");});
test("lammungar -> lammung", function() {deepEqual( Stem("lammungar"), "lammung");});
test("lamna -> lamn", function() {deepEqual( Stem("lamna"), "lamn");});
test("lamnade -> lamn", function() {deepEqual( Stem("lamnade"), "lamn");});
test("lamp -> lamp", function() {deepEqual( Stem("lamp"), "lamp");});
test("lampa -> lamp", function() {deepEqual( Stem("lampa"), "lamp");});
test("lampan -> lampan", function() {deepEqual( Stem("lampan"), "lampan");});
test("lampetterna -> lampet", function() {deepEqual( Stem("lampetterna"), "lampet");});
test("lampglaset -> lampglaset", function() {deepEqual( Stem("lampglaset"), "lampglaset");});
test("lampor -> lamp", function() {deepEqual( Stem("lampor"), "lamp");});
test("lamporna -> lamp", function() {deepEqual( Stem("lamporna"), "lamp");});
test("lampsken -> lampsk", function() {deepEqual( Stem("lampsken"), "lampsk");});
test("lampskenet -> lampskenet", function() {deepEqual( Stem("lampskenet"), "lampskenet");});
test("lamt -> lamt", function() {deepEqual( Stem("lamt"), "lamt");});
test("lan -> lan", function() {deepEqual( Stem("lan"), "lan");});
test("land -> land", function() {deepEqual( Stem("land"), "land");});
test("landa -> land", function() {deepEqual( Stem("landa"), "land");});
test("landbacken -> landback", function() {deepEqual( Stem("landbacken"), "landback");});
test("landborg -> landborg", function() {deepEqual( Stem("landborg"), "landborg");});
test("landborgs -> landborg", function() {deepEqual( Stem("landborgs"), "landborg");});
test("lande -> land", function() {deepEqual( Stem("lande"), "land");});
test("landen -> land", function() {deepEqual( Stem("landen"), "land");});
test("lander -> land", function() {deepEqual( Stem("lander"), "land");});
test("landet -> landet", function() {deepEqual( Stem("landet"), "landet");});
test("landets -> landet", function() {deepEqual( Stem("landets"), "landet");});
test("landgången -> landgång", function() {deepEqual( Stem("landgången"), "landgång");});
test("landning -> landning", function() {deepEqual( Stem("landning"), "landning");});
test("lands -> land", function() {deepEqual( Stem("lands"), "land");});
test("landsbygden -> landsbyg", function() {deepEqual( Stem("landsbygden"), "landsbyg");});
test("landsens -> lands", function() {deepEqual( Stem("landsens"), "lands");});
test("landsförsamlingar -> landsförsamling", function() {deepEqual( Stem("landsförsamlingar"), "landsförsamling");});
test("landskap -> landskap", function() {deepEqual( Stem("landskap"), "landskap");});
test("landskapet -> landskapet", function() {deepEqual( Stem("landskapet"), "landskapet");});
test("landskyrkornas -> landskyrk", function() {deepEqual( Stem("landskyrkornas"), "landskyrk");});
test("landsmål -> landsmål", function() {deepEqual( Stem("landsmål"), "landsmål");});
test("landsorten -> landsort", function() {deepEqual( Stem("landsorten"), "landsort");});
test("landställe -> landställ", function() {deepEqual( Stem("landställe"), "landställ");});
test("landsväg -> landsväg", function() {deepEqual( Stem("landsväg"), "landsväg");});
test("landsvägen -> landsväg", function() {deepEqual( Stem("landsvägen"), "landsväg");});
test("landsändar -> landsänd", function() {deepEqual( Stem("landsändar"), "landsänd");});
test("landtlig -> landt", function() {deepEqual( Stem("landtlig"), "landt");});
test("landvägen -> landväg", function() {deepEqual( Stem("landvägen"), "landväg");});
test("lanet -> lanet", function() {deepEqual( Stem("lanet"), "lanet");});
test("lang -> lang", function() {deepEqual( Stem("lang"), "lang");});
test("langa -> lang", function() {deepEqual( Stem("langa"), "lang");});
test("lange -> lang", function() {deepEqual( Stem("lange"), "lang");});
test("langrandiga -> langrand", function() {deepEqual( Stem("langrandiga"), "langrand");});
test("langre -> langr", function() {deepEqual( Stem("langre"), "langr");});
test("langsamt -> langsamt", function() {deepEqual( Stem("langsamt"), "langsamt");});
test("langt -> lang", function() {deepEqual( Stem("langt"), "lang");});
test("langtade -> lang", function() {deepEqual( Stem("langtade"), "lang");});
test("langtan -> langtan", function() {deepEqual( Stem("langtan"), "langtan");});
test("langtancle -> langtancl", function() {deepEqual( Stem("langtancle"), "langtancl");});
test("langtifrån -> langtifrån", function() {deepEqual( Stem("langtifrån"), "langtifrån");});
test("lantbrukare -> lantbruk", function() {deepEqual( Stem("lantbrukare"), "lantbruk");});
test("lanternorna -> lantern", function() {deepEqual( Stem("lanternorna"), "lantern");});
test("lanthushåll -> lanthushåll", function() {deepEqual( Stem("lanthushåll"), "lanthushåll");});
test("lantlig -> lant", function() {deepEqual( Stem("lantlig"), "lant");});
test("lantliga -> lant", function() {deepEqual( Stem("lantliga"), "lant");});
test("lantligaste -> lant", function() {deepEqual( Stem("lantligaste"), "lant");});
test("lantligt -> lant", function() {deepEqual( Stem("lantligt"), "lant");});
test("lantluft -> lantluft", function() {deepEqual( Stem("lantluft"), "lantluft");});
test("lantluften -> lantluft", function() {deepEqual( Stem("lantluften"), "lantluft");});
test("lantnöje -> lantnöj", function() {deepEqual( Stem("lantnöje"), "lantnöj");});
test("lantsejuren -> lantsejur", function() {deepEqual( Stem("lantsejuren"), "lantsejur");});
test("lantställe -> lantställ", function() {deepEqual( Stem("lantställe"), "lantställ");});
test("lantstället -> lantstället", function() {deepEqual( Stem("lantstället"), "lantstället");});
test("lanttöser -> lanttös", function() {deepEqual( Stem("lanttöser"), "lanttös");});
test("lapade -> lap", function() {deepEqual( Stem("lapade"), "lap");});
test("lapp -> lapp", function() {deepEqual( Stem("lapp"), "lapp");});
test("lappar -> lapp", function() {deepEqual( Stem("lappar"), "lapp");});
test("lappri -> lappri", function() {deepEqual( Stem("lappri"), "lappri");});
test("lapprihändelse -> lapprihänd", function() {deepEqual( Stem("lapprihändelse"), "lapprihänd");});
test("lapprihändelsen -> lapprihänd", function() {deepEqual( Stem("lapprihändelsen"), "lapprihänd");});
test("lara -> lar", function() {deepEqual( Stem("lara"), "lar");});
test("larm -> larm", function() {deepEqual( Stem("larm"), "larm");});
test("larmar -> larm", function() {deepEqual( Stem("larmar"), "larm");});
test("larmet -> larmet", function() {deepEqual( Stem("larmet"), "larmet");});
test("larna -> larn", function() {deepEqual( Stem("larna"), "larn");});
test("lars -> lar", function() {deepEqual( Stem("lars"), "lar");});
test("larsdotter -> larsdot", function() {deepEqual( Stem("larsdotter"), "larsdot");});
test("larses -> lars", function() {deepEqual( Stem("larses"), "lars");});
test("larsmesse -> larsmess", function() {deepEqual( Stem("larsmesse"), "larsmess");});
test("larsmessefärden -> larsmessefärd", function() {deepEqual( Stem("larsmessefärden"), "larsmessefärd");});
test("larsson -> larsson", function() {deepEqual( Stem("larsson"), "larsson");});
test("lart -> lart", function() {deepEqual( Stem("lart"), "lart");});
test("larv -> larv", function() {deepEqual( Stem("larv"), "larv");});
test("lass -> lass", function() {deepEqual( Stem("lass"), "lass");});
test("lasset -> lasset", function() {deepEqual( Stem("lasset"), "lasset");});
test("lassman -> lassman", function() {deepEqual( Stem("lassman"), "lassman");});
test("lassmans -> lassman", function() {deepEqual( Stem("lassmans"), "lassman");});
test("last -> last", function() {deepEqual( Stem("last"), "last");});
test("lastad -> last", function() {deepEqual( Stem("lastad"), "last");});
test("lastade -> last", function() {deepEqual( Stem("lastade"), "last");});
test("lastat -> last", function() {deepEqual( Stem("lastat"), "last");});
test("lastdjur -> lastdjur", function() {deepEqual( Stem("lastdjur"), "lastdjur");});
test("lasten -> last", function() {deepEqual( Stem("lasten"), "last");});
test("laster -> last", function() {deepEqual( Stem("laster"), "last");});
test("lasterna -> last", function() {deepEqual( Stem("lasterna"), "last");});
test("lastfulle -> lastfull", function() {deepEqual( Stem("lastfulle"), "lastfull");});
test("lastning -> lastning", function() {deepEqual( Stem("lastning"), "lastning");});
test("lat -> lat", function() {deepEqual( Stem("lat"), "lat");});
test("lata -> lat", function() {deepEqual( Stem("lata"), "lat");});
test("latin -> latin", function() {deepEqual( Stem("latin"), "latin");});
test("latit -> latit", function() {deepEqual( Stem("latit"), "latit");});
test("latt -> latt", function() {deepEqual( Stem("latt"), "latt");});
test("latta -> latt", function() {deepEqual( Stem("latta"), "latt");});
test("lattare -> latt", function() {deepEqual( Stem("lattare"), "latt");});
test("laura -> laur", function() {deepEqual( Stem("laura"), "laur");});
test("laurentia -> laurenti", function() {deepEqual( Stem("laurentia"), "laurenti");});
test("lave -> lav", function() {deepEqual( Stem("lave"), "lav");});
test("lavoar -> lavo", function() {deepEqual( Stem("lavoar"), "lavo");});
test("lavoaren -> lavo", function() {deepEqual( Stem("lavoaren"), "lavo");});
test("lavoarens -> lavo", function() {deepEqual( Stem("lavoarens"), "lavo");});
test("lazulit -> lazulit", function() {deepEqual( Stem("lazulit"), "lazulit");});
test("lbland -> lbland", function() {deepEqual( Stem("lbland"), "lbland");});
test("ldälmandc -> ldälmandc", function() {deepEqual( Stem("ldälmandc"), "ldälmandc");});
test("le -> le", function() {deepEqual( Stem("le"), "le");});
test("led -> led", function() {deepEqual( Stem("led"), "led");});
test("leda -> led", function() {deepEqual( Stem("leda"), "led");});
test("ledamot -> ledamot", function() {deepEqual( Stem("ledamot"), "ledamot");});
test("ledande -> led", function() {deepEqual( Stem("ledande"), "led");});
test("ledare -> led", function() {deepEqual( Stem("ledare"), "led");});
test("ledas -> led", function() {deepEqual( Stem("ledas"), "led");});
test("ledast -> led", function() {deepEqual( Stem("ledast"), "led");});
test("ledband -> ledband", function() {deepEqual( Stem("ledband"), "ledband");});
test("ledbandet -> ledb", function() {deepEqual( Stem("ledbandet"), "ledb");});
test("ledd -> ledd", function() {deepEqual( Stem("ledd"), "ledd");});
test("ledde -> ledd", function() {deepEqual( Stem("ledde"), "ledd");});
test("leddes -> ledd", function() {deepEqual( Stem("leddes"), "ledd");});
test("lede -> led", function() {deepEqual( Stem("lede"), "led");});
test("leder -> led", function() {deepEqual( Stem("leder"), "led");});
test("ledes -> led", function() {deepEqual( Stem("ledes"), "led");});
test("ledig -> led", function() {deepEqual( Stem("ledig"), "led");});
test("lediga -> led", function() {deepEqual( Stem("lediga"), "led");});
test("ledighet -> led", function() {deepEqual( Stem("ledighet"), "led");});
test("ledigt -> led", function() {deepEqual( Stem("ledigt"), "led");});
test("ledmotivet -> ledmotivet", function() {deepEqual( Stem("ledmotivet"), "ledmotivet");});
test("ledning -> ledning", function() {deepEqual( Stem("ledning"), "ledning");});
test("ledo -> ledo", function() {deepEqual( Stem("ledo"), "ledo");});
test("leds -> led", function() {deepEqual( Stem("leds"), "led");});
test("ledsagade -> ledsag", function() {deepEqual( Stem("ledsagade"), "ledsag");});
test("ledsagarinnans -> ledsagarinnan", function() {deepEqual( Stem("ledsagarinnans"), "ledsagarinnan");});
test("ledsage -> ledsag", function() {deepEqual( Stem("ledsage"), "ledsag");});
test("ledsam -> ledsam", function() {deepEqual( Stem("ledsam"), "ledsam");});
test("ledsamhet -> ledsam", function() {deepEqual( Stem("ledsamhet"), "ledsam");});
test("ledsamheter -> ledsam", function() {deepEqual( Stem("ledsamheter"), "ledsam");});
test("ledsamma -> ledsamm", function() {deepEqual( Stem("ledsamma"), "ledsamm");});
test("ledsamt -> ledsamt", function() {deepEqual( Stem("ledsamt"), "ledsamt");});
test("ledsen -> leds", function() {deepEqual( Stem("ledsen"), "leds");});
test("ledsna -> ledsn", function() {deepEqual( Stem("ledsna"), "ledsn");});
test("ledsnad -> ledsn", function() {deepEqual( Stem("ledsnad"), "ledsn");});
test("ledsnade -> ledsn", function() {deepEqual( Stem("ledsnade"), "ledsn");});
test("ledsnaden -> ledsnad", function() {deepEqual( Stem("ledsnaden"), "ledsnad");});
test("ledsnar -> ledsn", function() {deepEqual( Stem("ledsnar"), "ledsn");});
test("ledsnat -> ledsn", function() {deepEqual( Stem("ledsnat"), "ledsn");});
test("ledt -> ledt", function() {deepEqual( Stem("ledt"), "ledt");});
test("ledtråd -> ledtråd", function() {deepEqual( Stem("ledtråd"), "ledtråd");});
test("ledtråden -> ledtråd", function() {deepEqual( Stem("ledtråden"), "ledtråd");});
test("leendc -> leendc", function() {deepEqual( Stem("leendc"), "leendc");});
test("leende -> leend", function() {deepEqual( Stem("leende"), "leend");});
test("leenden -> leend", function() {deepEqual( Stem("leenden"), "leend");});
test("leendet -> leendet", function() {deepEqual( Stem("leendet"), "leendet");});
test("lefde -> lefd", function() {deepEqual( Stem("lefde"), "lefd");});
test("lefnad -> lefn", function() {deepEqual( Stem("lefnad"), "lefn");});
test("lefnadsfrisk -> lefnadsfrisk", function() {deepEqual( Stem("lefnadsfrisk"), "lefnadsfrisk");});
test("lefnadslust -> lefnadslust", function() {deepEqual( Stem("lefnadslust"), "lefnadslust");});
test("lefnadsomständigheter -> lefnadsomständ", function() {deepEqual( Stem("lefnadsomständigheter"), "lefnadsomständ");});
test("lefnadssätt -> lefnadssät", function() {deepEqual( Stem("lefnadssätt"), "lefnadssät");});
test("lefva -> lefv", function() {deepEqual( Stem("lefva"), "lefv");});
test("lefvande -> lefv", function() {deepEqual( Stem("lefvande"), "lefv");});
test("lefvat -> lefv", function() {deepEqual( Stem("lefvat"), "lefv");});
test("lefve -> lefv", function() {deepEqual( Stem("lefve"), "lefv");});
test("lefver -> lefv", function() {deepEqual( Stem("lefver"), "lefv");});
test("lefvernet -> lefvernet", function() {deepEqual( Stem("lefvernet"), "lefvernet");});
test("legat -> leg", function() {deepEqual( Stem("legat"), "leg");});
test("legenden -> legend", function() {deepEqual( Stem("legenden"), "legend");});
test("legendens -> legend", function() {deepEqual( Stem("legendens"), "legend");});
test("lejd -> lejd", function() {deepEqual( Stem("lejd"), "lejd");});
test("lejon -> lejon", function() {deepEqual( Stem("lejon"), "lejon");});
test("lejonet -> lejonet", function() {deepEqual( Stem("lejonet"), "lejonet");});
test("lejonhona -> lejonhon", function() {deepEqual( Stem("lejonhona"), "lejonhon");});
test("lek -> lek", function() {deepEqual( Stem("lek"), "lek");});
test("leka -> lek", function() {deepEqual( Stem("leka"), "lek");});
test("lekamde -> lekamd", function() {deepEqual( Stem("lekamde"), "lekamd");});
test("lekamen -> lekam", function() {deepEqual( Stem("lekamen"), "lekam");});
test("lekamligen -> lekam", function() {deepEqual( Stem("lekamligen"), "lekam");});
test("lekande -> lek", function() {deepEqual( Stem("lekande"), "lek");});
test("lekar -> lek", function() {deepEqual( Stem("lekar"), "lek");});
test("leken -> lek", function() {deepEqual( Stem("leken"), "lek");});
test("leker -> lek", function() {deepEqual( Stem("leker"), "lek");});
test("lekfullt -> lekfull", function() {deepEqual( Stem("lekfullt"), "lekfull");});
test("lekhus -> lekhus", function() {deepEqual( Stem("lekhus"), "lekhus");});
test("lekkamrat -> lekkamr", function() {deepEqual( Stem("lekkamrat"), "lekkamr");});
test("lekman -> lekman", function() {deepEqual( Stem("lekman"), "lekman");});
test("leks -> lek", function() {deepEqual( Stem("leks"), "lek");});
test("leksaken -> leksak", function() {deepEqual( Stem("leksaken"), "leksak");});
test("leksakerna -> leksak", function() {deepEqual( Stem("leksakerna"), "leksak");});
test("lekstugan -> lekstugan", function() {deepEqual( Stem("lekstugan"), "lekstugan");});
test("lekt -> lekt", function() {deepEqual( Stem("lekt"), "lekt");});
test("lekte -> lekt", function() {deepEqual( Stem("lekte"), "lekt");});
test("lektion -> lektion", function() {deepEqual( Stem("lektion"), "lektion");});
test("lektionen -> lektion", function() {deepEqual( Stem("lektionen"), "lektion");});
test("lektioner -> lektion", function() {deepEqual( Stem("lektioner"), "lektion");});
test("lektionerna -> lektion", function() {deepEqual( Stem("lektionerna"), "lektion");});
test("lektionsbordet -> lektionsbordet", function() {deepEqual( Stem("lektionsbordet"), "lektionsbordet");});
test("lektionsdagarna -> lektionsdag", function() {deepEqual( Stem("lektionsdagarna"), "lektionsdag");});
test("lektor -> lekt", function() {deepEqual( Stem("lektor"), "lekt");});
test("lektorn -> lektorn", function() {deepEqual( Stem("lektorn"), "lektorn");});
test("lel -> lel", function() {deepEqual( Stem("lel"), "lel");});
test("lem -> lem", function() {deepEqual( Stem("lem"), "lem");});
test("lemlästade -> lemläst", function() {deepEqual( Stem("lemlästade"), "lemläst");});
test("lemmar -> lemm", function() {deepEqual( Stem("lemmar"), "lemm");});
test("lemmarna -> lemm", function() {deepEqual( Stem("lemmarna"), "lemm");});
test("lemmarne -> lemm", function() {deepEqual( Stem("lemmarne"), "lemm");});
test("lemmen -> lemm", function() {deepEqual( Stem("lemmen"), "lemm");});
test("lemna -> lemn", function() {deepEqual( Stem("lemna"), "lemn");});
test("lemnad -> lemn", function() {deepEqual( Stem("lemnad"), "lemn");});
test("lemnade -> lemn", function() {deepEqual( Stem("lemnade"), "lemn");});
test("lemnadt -> lemnad", function() {deepEqual( Stem("lemnadt"), "lemnad");});
test("lemnar -> lemn", function() {deepEqual( Stem("lemnar"), "lemn");});
test("lemnat -> lemn", function() {deepEqual( Stem("lemnat"), "lemn");});
test("lemningar -> lemning", function() {deepEqual( Stem("lemningar"), "lemning");});
test("lemningarne -> lemning", function() {deepEqual( Stem("lemningarne"), "lemning");});
test("len -> len", function() {deepEqual( Stem("len"), "len");});
test("lena -> len", function() {deepEqual( Stem("lena"), "len");});
test("lenar -> len", function() {deepEqual( Stem("lenar"), "len");});
test("lenare -> len", function() {deepEqual( Stem("lenare"), "len");});
test("lenas -> len", function() {deepEqual( Stem("lenas"), "len");});
test("lenaste -> len", function() {deepEqual( Stem("lenaste"), "len");});
test("lennarby -> lennarby", function() {deepEqual( Stem("lennarby"), "lennarby");});
test("lent -> lent", function() {deepEqual( Stem("lent"), "lent");});
test("leopold -> leopold", function() {deepEqual( Stem("leopold"), "leopold");});
test("ler -> ler", function() {deepEqual( Stem("ler"), "ler");});
test("leran -> leran", function() {deepEqual( Stem("leran"), "leran");});
test("lerkrus -> lerkrus", function() {deepEqual( Stem("lerkrus"), "lerkrus");});
test("les -> les", function() {deepEqual( Stem("les"), "les");});
test("let -> let", function() {deepEqual( Stem("let"), "let");});
test("leta -> let", function() {deepEqual( Stem("leta"), "let");});
test("letade -> let", function() {deepEqual( Stem("letade"), "let");});
test("letande -> let", function() {deepEqual( Stem("letande"), "let");});
test("letar -> let", function() {deepEqual( Stem("letar"), "let");});
test("letas -> let", function() {deepEqual( Stem("letas"), "let");});
test("letat -> let", function() {deepEqual( Stem("letat"), "let");});
test("lett -> lett", function() {deepEqual( Stem("lett"), "lett");});
test("letty -> letty", function() {deepEqual( Stem("letty"), "letty");});
test("leur -> leur", function() {deepEqual( Stem("leur"), "leur");});
test("leurs -> leur", function() {deepEqual( Stem("leurs"), "leur");});
test("leva -> lev", function() {deepEqual( Stem("leva"), "lev");});
test("levamde -> levamd", function() {deepEqual( Stem("levamde"), "levamd");});
test("levande -> lev", function() {deepEqual( Stem("levande"), "lev");});
test("levandes -> lev", function() {deepEqual( Stem("levandes"), "lev");});
test("levas -> lev", function() {deepEqual( Stem("levas"), "lev");});
test("levat -> lev", function() {deepEqual( Stem("levat"), "lev");});
test("levde -> levd", function() {deepEqual( Stem("levde"), "levd");});
test("levdes -> levd", function() {deepEqual( Stem("levdes"), "levd");});
test("levdl -> levdl", function() {deepEqual( Stem("levdl"), "levdl");});
test("levelse -> lev", function() {deepEqual( Stem("levelse"), "lev");});
test("lever -> lev", function() {deepEqual( Stem("lever"), "lev");});
test("leverera -> leverer", function() {deepEqual( Stem("leverera"), "leverer");});
test("leverne -> levern", function() {deepEqual( Stem("leverne"), "levern");});
test("levin -> levin", function() {deepEqual( Stem("levin"), "levin");});
test("levins -> levin", function() {deepEqual( Stem("levins"), "levin");});
test("levnad -> levn", function() {deepEqual( Stem("levnad"), "levn");});
test("levnads -> levnad", function() {deepEqual( Stem("levnads"), "levnad");});
test("levnadsfilosofi -> levnadsfilosofi", function() {deepEqual( Stem("levnadsfilosofi"), "levnadsfilosofi");});
test("levnadsfriska -> levnadsfrisk", function() {deepEqual( Stem("levnadsfriska"), "levnadsfrisk");});
test("levnadsförhållanden -> levnadsförhåll", function() {deepEqual( Stem("levnadsförhållanden"), "levnadsförhåll");});
test("levnadsglad -> levnadsgl", function() {deepEqual( Stem("levnadsglad"), "levnadsgl");});
test("levnadsglade -> levnadsgl", function() {deepEqual( Stem("levnadsglade"), "levnadsgl");});
test("levnadssättet -> levnadssättet", function() {deepEqual( Stem("levnadssättet"), "levnadssättet");});
test("lewinson -> lewinson", function() {deepEqual( Stem("lewinson"), "lewinson");});
test("lexa -> lex", function() {deepEqual( Stem("lexa"), "lex");});
test("lexan -> lexan", function() {deepEqual( Stem("lexan"), "lexan");});
test("lexor -> lex", function() {deepEqual( Stem("lexor"), "lex");});
test("lgol -> lgol", function() {deepEqual( Stem("lgol"), "lgol");});
test("lgon -> lgon", function() {deepEqual( Stem("lgon"), "lgon");});
test("lhl -> lhl", function() {deepEqual( Stem("lhl"), "lhl");});
test("li -> li", function() {deepEqual( Stem("li"), "li");});
test("liber -> lib", function() {deepEqual( Stem("liber"), "lib");});
test("liberalare -> liberal", function() {deepEqual( Stem("liberalare"), "liberal");});
test("liberale -> liberal", function() {deepEqual( Stem("liberale"), "liberal");});
test("liberalt -> liberalt", function() {deepEqual( Stem("liberalt"), "liberalt");});
test("liberi -> liberi", function() {deepEqual( Stem("liberi"), "liberi");});
test("licentiat -> licenti", function() {deepEqual( Stem("licentiat"), "licenti");});
test("licentiaten -> licentiat", function() {deepEqual( Stem("licentiaten"), "licentiat");});
test("licka -> lick", function() {deepEqual( Stem("licka"), "lick");});
test("lickan -> lickan", function() {deepEqual( Stem("lickan"), "lickan");});
test("lid -> lid", function() {deepEqual( Stem("lid"), "lid");});
test("lida -> lid", function() {deepEqual( Stem("lida"), "lid");});
test("lidande -> lid", function() {deepEqual( Stem("lidande"), "lid");});
test("lidanden -> lid", function() {deepEqual( Stem("lidanden"), "lid");});
test("lidandes -> lid", function() {deepEqual( Stem("lidandes"), "lid");});
test("lidandet -> lid", function() {deepEqual( Stem("lidandet"), "lid");});
test("lidandets -> lidandet", function() {deepEqual( Stem("lidandets"), "lidandet");});
test("lidelse -> lid", function() {deepEqual( Stem("lidelse"), "lid");});
test("lidelsefull -> lidelsefull", function() {deepEqual( Stem("lidelsefull"), "lidelsefull");});
test("lidelsefullt -> lidelsefull", function() {deepEqual( Stem("lidelsefullt"), "lidelsefull");});
test("lidelsen -> lid", function() {deepEqual( Stem("lidelsen"), "lid");});
test("lidelsens -> lid", function() {deepEqual( Stem("lidelsens"), "lid");});
test("lidelser -> lid", function() {deepEqual( Stem("lidelser"), "lid");});
test("liden -> lid", function() {deepEqual( Stem("liden"), "lid");});
test("lider -> lid", function() {deepEqual( Stem("lider"), "lid");});
test("liderlig -> lider", function() {deepEqual( Stem("liderlig"), "lider");});
test("liderliga -> lider", function() {deepEqual( Stem("liderliga"), "lider");});
test("lidit -> lidit", function() {deepEqual( Stem("lidit"), "lidit");});
test("lidna -> lidn", function() {deepEqual( Stem("lidna"), "lidn");});
test("lie -> lie", function() {deepEqual( Stem("lie"), "lie");});
test("lieder -> lied", function() {deepEqual( Stem("lieder"), "lied");});
test("lien -> lien", function() {deepEqual( Stem("lien"), "lien");});
test("lif -> lif", function() {deepEqual( Stem("lif"), "lif");});
test("lifhanken -> lifhank", function() {deepEqual( Stem("lifhanken"), "lifhank");});
test("liflig -> lif", function() {deepEqual( Stem("liflig"), "lif");});
test("lifliga -> lif", function() {deepEqual( Stem("lifliga"), "lif");});
test("lifligt -> lif", function() {deepEqual( Stem("lifligt"), "lif");});
test("liflös -> liflös", function() {deepEqual( Stem("liflös"), "liflös");});
test("liflösa -> liflös", function() {deepEqual( Stem("liflösa"), "liflös");});
test("liflöst -> liflös", function() {deepEqual( Stem("liflöst"), "liflös");});
test("lifnärde -> lifnärd", function() {deepEqual( Stem("lifnärde"), "lifnärd");});
test("lifs -> lif", function() {deepEqual( Stem("lifs"), "lif");});
test("lifsblomma -> lifsblomm", function() {deepEqual( Stem("lifsblomma"), "lifsblomm");});
test("lifsfara -> lifsfar", function() {deepEqual( Stem("lifsfara"), "lifsfar");});
test("lifsfulla -> lifsfull", function() {deepEqual( Stem("lifsfulla"), "lifsfull");});
test("lifsgnistan -> lifsgnistan", function() {deepEqual( Stem("lifsgnistan"), "lifsgnistan");});
test("lifskraft -> lifskraft", function() {deepEqual( Stem("lifskraft"), "lifskraft");});
test("lifslefvande -> lifslefv", function() {deepEqual( Stem("lifslefvande"), "lifslefv");});
test("lifstid -> lifstid", function() {deepEqual( Stem("lifstid"), "lifstid");});
test("lifstiden -> lifstid", function() {deepEqual( Stem("lifstiden"), "lifstid");});
test("lifsuppgift -> lifsuppgift", function() {deepEqual( Stem("lifsuppgift"), "lifsuppgift");});
test("lifva -> lifv", function() {deepEqual( Stem("lifva"), "lifv");});
test("lifvad -> lifv", function() {deepEqual( Stem("lifvad"), "lifv");});
test("lifvade -> lifv", function() {deepEqual( Stem("lifvade"), "lifv");});
test("lifvar -> lifv", function() {deepEqual( Stem("lifvar"), "lifv");});
test("lifvas -> lifv", function() {deepEqual( Stem("lifvas"), "lifv");});
test("lifvet -> lifvet", function() {deepEqual( Stem("lifvet"), "lifvet");});
test("lifvets -> lifvet", function() {deepEqual( Stem("lifvets"), "lifvet");});
test("lig -> lig", function() {deepEqual( Stem("lig"), "lig");});
test("liga -> lig", function() {deepEqual( Stem("liga"), "lig");});
test("ligare -> lig", function() {deepEqual( Stem("ligare"), "lig");});
test("lige -> lig", function() {deepEqual( Stem("lige"), "lig");});
test("ligen -> lig", function() {deepEqual( Stem("ligen"), "lig");});
test("ligg -> ligg", function() {deepEqual( Stem("ligg"), "ligg");});
test("ligga -> ligg", function() {deepEqual( Stem("ligga"), "ligg");});
test("liggande -> ligg", function() {deepEqual( Stem("liggande"), "ligg");});
test("ligger -> ligg", function() {deepEqual( Stem("ligger"), "ligg");});
test("lighet -> lig", function() {deepEqual( Stem("lighet"), "lig");});
test("ligheten -> lig", function() {deepEqual( Stem("ligheten"), "lig");});
test("lighetens -> lig", function() {deepEqual( Stem("lighetens"), "lig");});
test("lighetsfulla -> lighetsfull", function() {deepEqual( Stem("lighetsfulla"), "lighetsfull");});
test("ligt -> ligt", function() {deepEqual( Stem("ligt"), "ligt");});
test("lihsom -> lihsom", function() {deepEqual( Stem("lihsom"), "lihsom");});
test("liit -> liit", function() {deepEqual( Stem("liit"), "liit");});
test("lik -> lik", function() {deepEqual( Stem("lik"), "lik");});
test("lika -> lik", function() {deepEqual( Stem("lika"), "lik");});
test("likadan -> likadan", function() {deepEqual( Stem("likadan"), "likadan");});
test("likadana -> likadan", function() {deepEqual( Stem("likadana"), "likadan");});
test("likadant -> likadant", function() {deepEqual( Stem("likadant"), "likadant");});
test("likadån -> likadån", function() {deepEqual( Stem("likadån"), "likadån");});
test("likafullt -> likafull", function() {deepEqual( Stem("likafullt"), "likafull");});
test("likar -> lik", function() {deepEqual( Stem("likar"), "lik");});
test("likartade -> likart", function() {deepEqual( Stem("likartade"), "likart");});
test("likartat -> likart", function() {deepEqual( Stem("likartat"), "likart");});
test("likasom -> likasom", function() {deepEqual( Stem("likasom"), "likasom");});
test("likaså -> likaså", function() {deepEqual( Stem("likaså"), "likaså");});
test("likaval -> likaval", function() {deepEqual( Stem("likaval"), "likaval");});
test("likaväl -> likaväl", function() {deepEqual( Stem("likaväl"), "likaväl");});
test("like -> lik", function() {deepEqual( Stem("like"), "lik");});
test("liken -> lik", function() {deepEqual( Stem("liken"), "lik");});
test("liket -> liket", function() {deepEqual( Stem("liket"), "liket");});
test("likgiltig -> likgilt", function() {deepEqual( Stem("likgiltig"), "likgilt");});
test("likgiltiga -> likgilt", function() {deepEqual( Stem("likgiltiga"), "likgilt");});
test("likgiltigaste -> likgilt", function() {deepEqual( Stem("likgiltigaste"), "likgilt");});
test("likgiltighet -> likgilt", function() {deepEqual( Stem("likgiltighet"), "likgilt");});
test("likgiltigheten -> likgilt", function() {deepEqual( Stem("likgiltigheten"), "likgilt");});
test("likgiltigt -> likgilt", function() {deepEqual( Stem("likgiltigt"), "likgilt");});
test("likhet -> lik", function() {deepEqual( Stem("likhet"), "lik");});
test("likheten -> lik", function() {deepEqual( Stem("likheten"), "lik");});
test("liklukt -> likluk", function() {deepEqual( Stem("liklukt"), "likluk");});
test("likluktande -> likluk", function() {deepEqual( Stem("likluktande"), "likluk");});
test("likna -> likn", function() {deepEqual( Stem("likna"), "likn");});
test("liknade -> likn", function() {deepEqual( Stem("liknade"), "likn");});
test("liknande -> likn", function() {deepEqual( Stem("liknande"), "likn");});
test("liknar -> likn", function() {deepEqual( Stem("liknar"), "likn");});
test("liknas -> likn", function() {deepEqual( Stem("liknas"), "likn");});
test("liknelsen -> likn", function() {deepEqual( Stem("liknelsen"), "likn");});
test("liknöjd -> liknöjd", function() {deepEqual( Stem("liknöjd"), "liknöjd");});
test("liknöjdhet -> liknöjd", function() {deepEqual( Stem("liknöjdhet"), "liknöjd");});
test("likprocessioner -> likprocession", function() {deepEqual( Stem("likprocessioner"), "likprocession");});
test("liksom -> liksom", function() {deepEqual( Stem("liksom"), "liksom");});
test("likså -> likså", function() {deepEqual( Stem("likså"), "likså");});
test("liksånger -> liksång", function() {deepEqual( Stem("liksånger"), "liksång");});
test("likt -> likt", function() {deepEqual( Stem("likt"), "likt");});
test("liktidigt -> liktid", function() {deepEqual( Stem("liktidigt"), "liktid");});
test("liktydig -> liktyd", function() {deepEqual( Stem("liktydig"), "liktyd");});
test("liktydigt -> liktyd", function() {deepEqual( Stem("liktydigt"), "liktyd");});
test("likvidera -> likvider", function() {deepEqual( Stem("likvidera"), "likvider");});
test("likviderade -> likvider", function() {deepEqual( Stem("likviderade"), "likvider");});
test("likviderande -> likvider", function() {deepEqual( Stem("likviderande"), "likvider");});
test("likvisst -> likvisst", function() {deepEqual( Stem("likvisst"), "likvisst");});
test("likväl -> likväl", function() {deepEqual( Stem("likväl"), "likväl");});
test("likör -> likör", function() {deepEqual( Stem("likör"), "likör");});
test("lilen -> lil", function() {deepEqual( Stem("lilen"), "lil");});
test("liliamello -> liliamello", function() {deepEqual( Stem("liliamello"), "liliamello");});
test("lilian -> lilian", function() {deepEqual( Stem("lilian"), "lilian");});
test("lilja -> lilj", function() {deepEqual( Stem("lilja"), "lilj");});
test("liljan -> liljan", function() {deepEqual( Stem("liljan"), "liljan");});
test("liljekonvalje -> liljekonvalj", function() {deepEqual( Stem("liljekonvalje"), "liljekonvalj");});
test("liljekonvaljerna -> liljekonvalj", function() {deepEqual( Stem("liljekonvaljerna"), "liljekonvalj");});
test("liljespön -> liljespön", function() {deepEqual( Stem("liljespön"), "liljespön");});
test("liljevret -> liljevret", function() {deepEqual( Stem("liljevret"), "liljevret");});
test("liljkonvalj -> liljkonvalj", function() {deepEqual( Stem("liljkonvalj"), "liljkonvalj");});
test("liljor -> lilj", function() {deepEqual( Stem("liljor"), "lilj");});
test("lill -> lill", function() {deepEqual( Stem("lill"), "lill");});
test("lilla -> lill", function() {deepEqual( Stem("lilla"), "lill");});
test("lillan -> lillan", function() {deepEqual( Stem("lillan"), "lillan");});
test("lille -> lill", function() {deepEqual( Stem("lille"), "lill");});
test("lilliehöök -> lilliehöök", function() {deepEqual( Stem("lilliehöök"), "lilliehöök");});
test("limmeplagg -> limmeplagg", function() {deepEqual( Stem("limmeplagg"), "limmeplagg");});
test("lin -> lin", function() {deepEqual( Stem("lin"), "lin");});
test("lina -> lin", function() {deepEqual( Stem("lina"), "lin");});
test("linan -> linan", function() {deepEqual( Stem("linan"), "linan");});
test("lind -> lind", function() {deepEqual( Stem("lind"), "lind");});
test("lindad -> lind", function() {deepEqual( Stem("lindad"), "lind");});
test("lindade -> lind", function() {deepEqual( Stem("lindade"), "lind");});
test("lindansartruppen -> lindansartrupp", function() {deepEqual( Stem("lindansartruppen"), "lindansartrupp");});
test("lindar -> lind", function() {deepEqual( Stem("lindar"), "lind");});
test("lindarna -> lind", function() {deepEqual( Stem("lindarna"), "lind");});
test("lindat -> lind", function() {deepEqual( Stem("lindat"), "lind");});
test("linde -> lind", function() {deepEqual( Stem("linde"), "lind");});
test("linden -> lind", function() {deepEqual( Stem("linden"), "lind");});
test("linderots -> linderot", function() {deepEqual( Stem("linderots"), "linderot");});
test("lindfelt -> lindfelt", function() {deepEqual( Stem("lindfelt"), "lindfelt");});
test("lindfelts -> lindfelt", function() {deepEqual( Stem("lindfelts"), "lindfelt");});
test("lindgren -> lindgr", function() {deepEqual( Stem("lindgren"), "lindgr");});
test("lindgrens -> lindgr", function() {deepEqual( Stem("lindgrens"), "lindgr");});
test("lindman -> lindman", function() {deepEqual( Stem("lindman"), "lindman");});
test("lindra -> lindr", function() {deepEqual( Stem("lindra"), "lindr");});
test("lindrade -> lindr", function() {deepEqual( Stem("lindrade"), "lindr");});
test("lindrat -> lindr", function() {deepEqual( Stem("lindrat"), "lindr");});
test("lindrig -> lindr", function() {deepEqual( Stem("lindrig"), "lindr");});
test("lindriga -> lindr", function() {deepEqual( Stem("lindriga"), "lindr");});
test("lindrigare -> lindr", function() {deepEqual( Stem("lindrigare"), "lindr");});
test("lindrigast -> lindr", function() {deepEqual( Stem("lindrigast"), "lindr");});
test("lindrigaste -> lindr", function() {deepEqual( Stem("lindrigaste"), "lindr");});
test("lindrigt -> lindr", function() {deepEqual( Stem("lindrigt"), "lindr");});
test("lindring -> lindring", function() {deepEqual( Stem("lindring"), "lindring");});
test("lindträdet -> lindträdet", function() {deepEqual( Stem("lindträdet"), "lindträdet");});
test("linet -> linet", function() {deepEqual( Stem("linet"), "linet");});
test("linets -> linet", function() {deepEqual( Stem("linets"), "linet");});
test("linfrö -> linfrö", function() {deepEqual( Stem("linfrö"), "linfrö");});
test("lingen -> ling", function() {deepEqual( Stem("lingen"), "ling");});
test("lingon -> lingon", function() {deepEqual( Stem("lingon"), "lingon");});
test("lingonris -> lingonris", function() {deepEqual( Stem("lingonris"), "lingonris");});
test("lingonriset -> lingonriset", function() {deepEqual( Stem("lingonriset"), "lingonriset");});
test("lingult -> lingult", function() {deepEqual( Stem("lingult"), "lingult");});
test("linje -> linj", function() {deepEqual( Stem("linje"), "linj");});
test("linjer -> linj", function() {deepEqual( Stem("linjer"), "linj");});
test("linjerna -> linj", function() {deepEqual( Stem("linjerna"), "linj");});
test("linjespel -> linjespel", function() {deepEqual( Stem("linjespel"), "linjespel");});
test("link -> link", function() {deepEqual( Stem("link"), "link");});
test("linkade -> link", function() {deepEqual( Stem("linkade"), "link");});
test("linne -> linn", function() {deepEqual( Stem("linne"), "linn");});
test("linnea -> linne", function() {deepEqual( Stem("linnea"), "linne");});
test("linneas -> linne", function() {deepEqual( Stem("linneas"), "linne");});
test("linnel -> linnel", function() {deepEqual( Stem("linnel"), "linnel");});
test("linneplagg -> linneplagg", function() {deepEqual( Stem("linneplagg"), "linneplagg");});
test("linnes -> linn", function() {deepEqual( Stem("linnes"), "linn");});
test("linnet -> linnet", function() {deepEqual( Stem("linnet"), "linnet");});
test("linoleummattor -> linoleummat", function() {deepEqual( Stem("linoleummattor"), "linoleummat");});
test("linongsklänningen -> linongsklänning", function() {deepEqual( Stem("linongsklänningen"), "linongsklänning");});
test("linsädet -> linsädet", function() {deepEqual( Stem("linsädet"), "linsädet");});
test("lintyget -> lintyget", function() {deepEqual( Stem("lintyget"), "lintyget");});
test("lionardos -> lionardo", function() {deepEqual( Stem("lionardos"), "lionardo");});
test("lipa -> lip", function() {deepEqual( Stem("lipa"), "lip");});
test("lipade -> lip", function() {deepEqual( Stem("lipade"), "lip");});
test("liqviden -> liqvid", function() {deepEqual( Stem("liqviden"), "liqvid");});
test("lisa -> lis", function() {deepEqual( Stem("lisa"), "lis");});
test("lisan -> lisan", function() {deepEqual( Stem("lisan"), "lisan");});
test("lisas -> lis", function() {deepEqual( Stem("lisas"), "lis");});
test("lisma -> lism", function() {deepEqual( Stem("lisma"), "lism");});
test("lismande -> lism", function() {deepEqual( Stem("lismande"), "lism");});
test("lismar -> lism", function() {deepEqual( Stem("lismar"), "lism");});
test("list -> list", function() {deepEqual( Stem("list"), "list");});
test("listen -> list", function() {deepEqual( Stem("listen"), "list");});
test("lister -> list", function() {deepEqual( Stem("lister"), "list");});
test("listig -> list", function() {deepEqual( Stem("listig"), "list");});
test("listiga -> list", function() {deepEqual( Stem("listiga"), "list");});
test("listige -> list", function() {deepEqual( Stem("listige"), "list");});
test("listigt -> list", function() {deepEqual( Stem("listigt"), "list");});
test("lit -> lit", function() {deepEqual( Stem("lit"), "lit");});
test("lita -> lit", function() {deepEqual( Stem("lita"), "lit");});
test("litanior -> litani", function() {deepEqual( Stem("litanior"), "litani");});
test("litar -> lit", function() {deepEqual( Stem("litar"), "lit");});
test("litat -> lit", function() {deepEqual( Stem("litat"), "lit");});
test("litct -> litct", function() {deepEqual( Stem("litct"), "litct");});
test("lite -> lit", function() {deepEqual( Stem("lite"), "lit");});
test("litea -> lite", function() {deepEqual( Stem("litea"), "lite");});
test("liten -> lit", function() {deepEqual( Stem("liten"), "lit");});
test("litet -> litet", function() {deepEqual( Stem("litet"), "litet");});
test("litograferad -> litografer", function() {deepEqual( Stem("litograferad"), "litografer");});
test("littat -> litt", function() {deepEqual( Stem("littat"), "litt");});
test("litteratur -> litteratur", function() {deepEqual( Stem("litteratur"), "litteratur");});
test("litteraturen -> litteratur", function() {deepEqual( Stem("litteraturen"), "litteratur");});
test("litterära -> litterär", function() {deepEqual( Stem("litterära"), "litterär");});
test("liua -> liua", function() {deepEqual( Stem("liua"), "liua");});
test("liudfeldt -> liudfeld", function() {deepEqual( Stem("liudfeldt"), "liudfeld");});
test("liv -> liv", function() {deepEqual( Stem("liv"), "liv");});
test("livad -> liv", function() {deepEqual( Stem("livad"), "liv");});
test("livande -> liv", function() {deepEqual( Stem("livande"), "liv");});
test("livct -> livct", function() {deepEqual( Stem("livct"), "livct");});
test("livee -> live", function() {deepEqual( Stem("livee"), "live");});
test("liver -> liv", function() {deepEqual( Stem("liver"), "liv");});
test("livet -> livet", function() {deepEqual( Stem("livet"), "livet");});
test("livets -> livet", function() {deepEqual( Stem("livets"), "livet");});
test("livförsäkringspremien -> livförsäkringspremi", function() {deepEqual( Stem("livförsäkringspremien"), "livförsäkringspremi");});
test("livgardist -> livgardist", function() {deepEqual( Stem("livgardist"), "livgardist");});
test("livkusk -> livkusk", function() {deepEqual( Stem("livkusk"), "livkusk");});
test("livlig -> liv", function() {deepEqual( Stem("livlig"), "liv");});
test("livliga -> liv", function() {deepEqual( Stem("livliga"), "liv");});
test("livligare -> liv", function() {deepEqual( Stem("livligare"), "liv");});
test("livligaste -> liv", function() {deepEqual( Stem("livligaste"), "liv");});
test("livlige -> liv", function() {deepEqual( Stem("livlige"), "liv");});
test("livlighet -> liv", function() {deepEqual( Stem("livlighet"), "liv");});
test("livligt -> liv", function() {deepEqual( Stem("livligt"), "liv");});
test("livländska -> livländsk", function() {deepEqual( Stem("livländska"), "livländsk");});
test("livlös -> livlös", function() {deepEqual( Stem("livlös"), "livlös");});
test("livmoderns -> livmod", function() {deepEqual( Stem("livmoderns"), "livmod");});
test("livmodersprutor -> livmodersprut", function() {deepEqual( Stem("livmodersprutor"), "livmodersprut");});
test("livnärt -> livnärt", function() {deepEqual( Stem("livnärt"), "livnärt");});
test("livre -> livr", function() {deepEqual( Stem("livre"), "livr");});
test("livränta -> livränt", function() {deepEqual( Stem("livränta"), "livränt");});
test("livs -> liv", function() {deepEqual( Stem("livs"), "liv");});
test("livsandar -> livsand", function() {deepEqual( Stem("livsandar"), "livsand");});
test("livsbejakaren -> livsbejak", function() {deepEqual( Stem("livsbejakaren"), "livsbejak");});
test("livsfarligt -> livsfar", function() {deepEqual( Stem("livsfarligt"), "livsfar");});
test("livsfrukt -> livsfruk", function() {deepEqual( Stem("livsfrukt"), "livsfruk");});
test("livsfröt -> livsfröt", function() {deepEqual( Stem("livsfröt"), "livsfröt");});
test("livsglädje -> livsglädj", function() {deepEqual( Stem("livsglädje"), "livsglädj");});
test("livslust -> livslust", function() {deepEqual( Stem("livslust"), "livslust");});
test("livstid -> livstid", function() {deepEqual( Stem("livstid"), "livstid");});
test("livstiden -> livstid", function() {deepEqual( Stem("livstiden"), "livstid");});
test("livstycke -> livstyck", function() {deepEqual( Stem("livstycke"), "livstyck");});
test("livstycken -> livstyck", function() {deepEqual( Stem("livstycken"), "livstyck");});
test("livstyckets -> livstycket", function() {deepEqual( Stem("livstyckets"), "livstycket");});
test("livsuppgift -> livsuppgift", function() {deepEqual( Stem("livsuppgift"), "livsuppgift");});
test("livsåskådning -> livsåskådning", function() {deepEqual( Stem("livsåskådning"), "livsåskådning");});
test("livsöde -> livsöd", function() {deepEqual( Stem("livsöde"), "livsöd");});
test("ljettför -> ljettför", function() {deepEqual( Stem("ljettför"), "ljettför");});
test("ljnset -> ljnset", function() {deepEqual( Stem("ljnset"), "ljnset");});
test("lju -> lju", function() {deepEqual( Stem("lju"), "lju");});
test("ljud -> ljud", function() {deepEqual( Stem("ljud"), "ljud");});
test("ljuda -> ljud", function() {deepEqual( Stem("ljuda"), "ljud");});
test("ljudande -> ljud", function() {deepEqual( Stem("ljudande"), "ljud");});
test("ljuder -> ljud", function() {deepEqual( Stem("ljuder"), "ljud");});
test("ljudet -> ljudet", function() {deepEqual( Stem("ljudet"), "ljudet");});
test("ljudit -> ljudit", function() {deepEqual( Stem("ljudit"), "ljudit");});
test("ljudlig -> ljud", function() {deepEqual( Stem("ljudlig"), "ljud");});
test("ljudliga -> ljud", function() {deepEqual( Stem("ljudliga"), "ljud");});
test("ljudlöst -> ljudlös", function() {deepEqual( Stem("ljudlöst"), "ljudlös");});
test("ljuf -> ljuf", function() {deepEqual( Stem("ljuf"), "ljuf");});
test("ljuflig -> ljuf", function() {deepEqual( Stem("ljuflig"), "ljuf");});
test("ljufligt -> ljuf", function() {deepEqual( Stem("ljufligt"), "ljuf");});
test("ljuft -> ljuft", function() {deepEqual( Stem("ljuft"), "ljuft");});
test("ljufva -> ljufv", function() {deepEqual( Stem("ljufva"), "ljufv");});
test("ljufvare -> ljufv", function() {deepEqual( Stem("ljufvare"), "ljufv");});
test("ljufvast -> ljufv", function() {deepEqual( Stem("ljufvast"), "ljufv");});
test("ljufvaste -> ljufv", function() {deepEqual( Stem("ljufvaste"), "ljufv");});
test("ljuga -> ljug", function() {deepEqual( Stem("ljuga"), "ljug");});
test("ljuger -> ljug", function() {deepEqual( Stem("ljuger"), "ljug");});
test("ljugit -> ljugit", function() {deepEqual( Stem("ljugit"), "ljugit");});
test("ljum -> ljum", function() {deepEqual( Stem("ljum"), "ljum");});
test("ljumhet -> ljum", function() {deepEqual( Stem("ljumhet"), "ljum");});
test("ljumma -> ljumm", function() {deepEqual( Stem("ljumma"), "ljumm");});
test("ljumt -> ljumt", function() {deepEqual( Stem("ljumt"), "ljumt");});
test("ljung -> ljung", function() {deepEqual( Stem("ljung"), "ljung");});
test("ljungade -> ljung", function() {deepEqual( Stem("ljungade"), "ljung");});
test("ljungande -> ljung", function() {deepEqual( Stem("ljungande"), "ljung");});
test("ljungkvist -> ljungkvist", function() {deepEqual( Stem("ljungkvist"), "ljungkvist");});
test("ljus -> ljus", function() {deepEqual( Stem("ljus"), "ljus");});
test("ljusa -> ljus", function() {deepEqual( Stem("ljusa"), "ljus");});
test("ljusare -> ljus", function() {deepEqual( Stem("ljusare"), "ljus");});
test("ljusastaken -> ljusastak", function() {deepEqual( Stem("ljusastaken"), "ljusastak");});
test("ljusaste -> ljus", function() {deepEqual( Stem("ljusaste"), "ljus");});
test("ljusbiten -> ljusbit", function() {deepEqual( Stem("ljusbiten"), "ljusbit");});
test("ljusblå -> ljusblå", function() {deepEqual( Stem("ljusblå"), "ljusblå");});
test("ljusblått -> ljusblåt", function() {deepEqual( Stem("ljusblått"), "ljusblåt");});
test("ljusbrun -> ljusbrun", function() {deepEqual( Stem("ljusbrun"), "ljusbrun");});
test("ljusen -> ljus", function() {deepEqual( Stem("ljusen"), "ljus");});
test("ljusens -> ljus", function() {deepEqual( Stem("ljusens"), "ljus");});
test("ljuset -> ljuset", function() {deepEqual( Stem("ljuset"), "ljuset");});
test("ljusets -> ljuset", function() {deepEqual( Stem("ljusets"), "ljuset");});
test("ljusfläckar -> ljusfläck", function() {deepEqual( Stem("ljusfläckar"), "ljusfläck");});
test("ljusfläckarna -> ljusfläck", function() {deepEqual( Stem("ljusfläckarna"), "ljusfläck");});
test("ljusgrå -> ljusgrå", function() {deepEqual( Stem("ljusgrå"), "ljusgrå");});
test("ljusgrön -> ljusgrön", function() {deepEqual( Stem("ljusgrön"), "ljusgrön");});
test("ljusgul -> ljusgul", function() {deepEqual( Stem("ljusgul"), "ljusgul");});
test("ljushav -> ljushav", function() {deepEqual( Stem("ljushav"), "ljushav");});
test("ljushåriga -> ljushår", function() {deepEqual( Stem("ljushåriga"), "ljushår");});
test("ljusknekt -> ljusknek", function() {deepEqual( Stem("ljusknekt"), "ljusknek");});
test("ljuskretsen -> ljuskrets", function() {deepEqual( Stem("ljuskretsen"), "ljuskrets");});
test("ljuslett -> ljuslet", function() {deepEqual( Stem("ljuslett"), "ljuslet");});
test("ljuslågan -> ljuslågan", function() {deepEqual( Stem("ljuslågan"), "ljuslågan");});
test("ljusmelodi -> ljusmelodi", function() {deepEqual( Stem("ljusmelodi"), "ljusmelodi");});
test("ljusna -> ljusn", function() {deepEqual( Stem("ljusna"), "ljusn");});
test("ljusnade -> ljusn", function() {deepEqual( Stem("ljusnade"), "ljusn");});
test("ljusnande -> ljusn", function() {deepEqual( Stem("ljusnande"), "ljusn");});
test("ljusnar -> ljusn", function() {deepEqual( Stem("ljusnar"), "ljusn");});
test("ljusning -> ljusning", function() {deepEqual( Stem("ljusning"), "ljusning");});
test("ljusrandig -> ljusrand", function() {deepEqual( Stem("ljusrandig"), "ljusrand");});
test("ljusringar -> ljusring", function() {deepEqual( Stem("ljusringar"), "ljusring");});
test("ljussken -> ljussk", function() {deepEqual( Stem("ljussken"), "ljussk");});
test("ljusskenet -> ljusskenet", function() {deepEqual( Stem("ljusskenet"), "ljusskenet");});
test("ljusskyltar -> ljusskylt", function() {deepEqual( Stem("ljusskyltar"), "ljusskylt");});
test("ljusskymt -> ljusskymt", function() {deepEqual( Stem("ljusskymt"), "ljusskymt");});
test("ljusstakar -> ljusstak", function() {deepEqual( Stem("ljusstakar"), "ljusstak");});
test("ljusstrimma -> ljusstrimm", function() {deepEqual( Stem("ljusstrimma"), "ljusstrimm");});
test("ljusstöperskan -> ljusstöperskan", function() {deepEqual( Stem("ljusstöperskan"), "ljusstöperskan");});
test("ljust -> ljust", function() {deepEqual( Stem("ljust"), "ljust");});
test("ljuv -> ljuv", function() {deepEqual( Stem("ljuv"), "ljuv");});
test("ljuva -> ljuv", function() {deepEqual( Stem("ljuva"), "ljuv");});
test("ljuvaste -> ljuv", function() {deepEqual( Stem("ljuvaste"), "ljuv");});
test("ljuvlig -> ljuv", function() {deepEqual( Stem("ljuvlig"), "ljuv");});
test("ljuvliga -> ljuv", function() {deepEqual( Stem("ljuvliga"), "ljuv");});
test("ljuvligaste -> ljuv", function() {deepEqual( Stem("ljuvligaste"), "ljuv");});
test("ljuvligt -> ljuv", function() {deepEqual( Stem("ljuvligt"), "ljuv");});
test("ljuvt -> ljuvt", function() {deepEqual( Stem("ljuvt"), "ljuvt");});
test("ljöd -> ljöd", function() {deepEqual( Stem("ljöd"), "ljöd");});
test("ljödo -> ljödo", function() {deepEqual( Stem("ljödo"), "ljödo");});
test("lkar -> lkar", function() {deepEqual( Stem("lkar"), "lkar");});
test("ll -> ll", function() {deepEqual( Stem("ll"), "ll");});
test("lla -> lla", function() {deepEqual( Stem("lla"), "lla");});
test("llans -> llan", function() {deepEqual( Stem("llans"), "llan");});
test("ller -> ller", function() {deepEqual( Stem("ller"), "ller");});
test("lletty -> lletty", function() {deepEqual( Stem("lletty"), "lletty");});
test("llng -> llng", function() {deepEqual( Stem("llng"), "llng");});
test("llolmström -> llolmström", function() {deepEqual( Stem("llolmström"), "llolmström");});
test("llon -> llon", function() {deepEqual( Stem("llon"), "llon");});
test("lls -> lls", function() {deepEqual( Stem("lls"), "lls");});
test("llsa -> llsa", function() {deepEqual( Stem("llsa"), "llsa");});
test("llu -> llu", function() {deepEqual( Stem("llu"), "llu");});
test("llöll -> llöll", function() {deepEqual( Stem("llöll"), "llöll");});
test("lmg -> lmg", function() {deepEqual( Stem("lmg"), "lmg");});
test("lnte -> lnte", function() {deepEqual( Stem("lnte"), "lnte");});
test("loade -> load", function() {deepEqual( Stem("loade"), "load");});
test("locka -> lock", function() {deepEqual( Stem("locka"), "lock");});
test("lockade -> lock", function() {deepEqual( Stem("lockade"), "lock");});
test("lockades -> lock", function() {deepEqual( Stem("lockades"), "lock");});
test("lockan -> lockan", function() {deepEqual( Stem("lockan"), "lockan");});
test("lockande -> lock", function() {deepEqual( Stem("lockande"), "lock");});
test("lockar -> lock", function() {deepEqual( Stem("lockar"), "lock");});
test("lockarna -> lock", function() {deepEqual( Stem("lockarna"), "lock");});
test("lockat -> lock", function() {deepEqual( Stem("lockat"), "lock");});
test("lockbete -> lockbet", function() {deepEqual( Stem("lockbete"), "lockbet");});
test("lockbetet -> lockbetet", function() {deepEqual( Stem("lockbetet"), "lockbetet");});
test("lockelser -> lock", function() {deepEqual( Stem("lockelser"), "lock");});
test("locket -> locket", function() {deepEqual( Stem("locket"), "locket");});
test("lockiga -> lock", function() {deepEqual( Stem("lockiga"), "lock");});
test("lockigt -> lock", function() {deepEqual( Stem("lockigt"), "lock");});
test("lodbössa -> lodböss", function() {deepEqual( Stem("lodbössa"), "lodböss");});
test("loe -> loe", function() {deepEqual( Stem("loe"), "loe");});
test("lof -> lof", function() {deepEqual( Stem("lof"), "lof");});
test("loflig -> lof", function() {deepEqual( Stem("loflig"), "lof");});
test("lofliga -> lof", function() {deepEqual( Stem("lofliga"), "lof");});
test("lofligheten -> lof", function() {deepEqual( Stem("lofligheten"), "lof");});
test("lofligt -> lof", function() {deepEqual( Stem("lofligt"), "lof");});
test("loft -> loft", function() {deepEqual( Stem("loft"), "loft");});
test("loftet -> loftet", function() {deepEqual( Stem("loftet"), "loftet");});
test("lofva -> lofv", function() {deepEqual( Stem("lofva"), "lofv");});
test("lofvade -> lofv", function() {deepEqual( Stem("lofvade"), "lofv");});
test("lofvar -> lofv", function() {deepEqual( Stem("lofvar"), "lofv");});
test("lofvat -> lofv", function() {deepEqual( Stem("lofvat"), "lofv");});
test("log -> log", function() {deepEqual( Stem("log"), "log");});
test("loge -> log", function() {deepEqual( Stem("loge"), "log");});
test("logen -> log", function() {deepEqual( Stem("logen"), "log");});
test("logeraden -> logerad", function() {deepEqual( Stem("logeraden"), "logerad");});
test("loggboken -> loggbok", function() {deepEqual( Stem("loggboken"), "loggbok");});
test("logik -> logik", function() {deepEqual( Stem("logik"), "logik");});
test("logis -> logis", function() {deepEqual( Stem("logis"), "logis");});
test("logiska -> logisk", function() {deepEqual( Stem("logiska"), "logisk");});
test("logiskt -> logisk", function() {deepEqual( Stem("logiskt"), "logisk");});
test("logo -> logo", function() {deepEqual( Stem("logo"), "logo");});
test("lohengrin -> lohengrin", function() {deepEqual( Stem("lohengrin"), "lohengrin");});
test("loja -> loj", function() {deepEqual( Stem("loja"), "loj");});
test("lojtnant -> lojtnant", function() {deepEqual( Stem("lojtnant"), "lojtnant");});
test("lojtnantsfru -> lojtnantsfru", function() {deepEqual( Stem("lojtnantsfru"), "lojtnantsfru");});
test("lokal -> lokal", function() {deepEqual( Stem("lokal"), "lokal");});
test("lokalen -> lokal", function() {deepEqual( Stem("lokalen"), "lokal");});
test("lokomotivet -> lokomotivet", function() {deepEqual( Stem("lokomotivet"), "lokomotivet");});
test("lombardbrucke -> lombardbruck", function() {deepEqual( Stem("lombardbrucke"), "lombardbruck");});
test("lon -> lon", function() {deepEqual( Stem("lon"), "lon");});
test("lopp -> lopp", function() {deepEqual( Stem("lopp"), "lopp");});
test("loppet -> loppet", function() {deepEqual( Stem("loppet"), "loppet");});
test("lorens -> lor", function() {deepEqual( Stem("lorens"), "lor");});
test("lorette -> loret", function() {deepEqual( Stem("lorette"), "loret");});
test("lorgnetten -> lorgnet", function() {deepEqual( Stem("lorgnetten"), "lorgnet");});
test("lorgnetterande -> lorgnetter", function() {deepEqual( Stem("lorgnetterande"), "lorgnetter");});
test("lorgnettkedja -> lorgnettkedj", function() {deepEqual( Stem("lorgnettkedja"), "lorgnettkedj");});
test("lorraine -> lorrain", function() {deepEqual( Stem("lorraine"), "lorrain");});
test("los -> los", function() {deepEqual( Stem("los"), "los");});
test("loss -> loss", function() {deepEqual( Stem("loss"), "loss");});
test("lossade -> loss", function() {deepEqual( Stem("lossade"), "loss");});
test("lossades -> loss", function() {deepEqual( Stem("lossades"), "loss");});
test("lossnade -> lossn", function() {deepEqual( Stem("lossnade"), "lossn");});
test("lossnat -> lossn", function() {deepEqual( Stem("lossnat"), "lossn");});
test("lossning -> lossning", function() {deepEqual( Stem("lossning"), "lossning");});
test("lost -> lost", function() {deepEqual( Stem("lost"), "lost");});
test("lott -> lott", function() {deepEqual( Stem("lott"), "lott");});
test("lottade -> lott", function() {deepEqual( Stem("lottade"), "lott");});
test("lotten -> lott", function() {deepEqual( Stem("lotten"), "lott");});
test("lotter -> lott", function() {deepEqual( Stem("lotter"), "lott");});
test("lotteri -> lotteri", function() {deepEqual( Stem("lotteri"), "lotteri");});
test("lotteripäls -> lotteripäl", function() {deepEqual( Stem("lotteripäls"), "lotteripäl");});
test("lotterna -> lott", function() {deepEqual( Stem("lotterna"), "lott");});
test("louise -> louis", function() {deepEqual( Stem("louise"), "louis");});
test("lov -> lov", function() {deepEqual( Stem("lov"), "lov");});
test("lova -> lov", function() {deepEqual( Stem("lova"), "lov");});
test("lovade -> lov", function() {deepEqual( Stem("lovade"), "lov");});
test("lovande -> lov", function() {deepEqual( Stem("lovande"), "lov");});
test("lovar -> lov", function() {deepEqual( Stem("lovar"), "lov");});
test("lovat -> lov", function() {deepEqual( Stem("lovat"), "lov");});
test("loven -> lov", function() {deepEqual( Stem("loven"), "lov");});
test("lovera -> lover", function() {deepEqual( Stem("lovera"), "lover");});
test("loverar -> lover", function() {deepEqual( Stem("loverar"), "lover");});
test("loverat -> lover", function() {deepEqual( Stem("loverat"), "lover");});
test("lovliga -> lov", function() {deepEqual( Stem("lovliga"), "lov");});
test("lovligt -> lov", function() {deepEqual( Stem("lovligt"), "lov");});
test("lovning -> lovning", function() {deepEqual( Stem("lovning"), "lovning");});
test("lovprisade -> lovpris", function() {deepEqual( Stem("lovprisade"), "lovpris");});
test("lovsång -> lovsång", function() {deepEqual( Stem("lovsång"), "lovsång");});
test("lovsånger -> lovsång", function() {deepEqual( Stem("lovsånger"), "lovsång");});
test("lowärda -> lowärd", function() {deepEqual( Stem("lowärda"), "lowärd");});
test("loz -> loz", function() {deepEqual( Stem("loz"), "loz");});
test("lr -> lr", function() {deepEqual( Stem("lr"), "lr");});
test("lsamt -> lsamt", function() {deepEqual( Stem("lsamt"), "lsamt");});
test("lsen -> lsen", function() {deepEqual( Stem("lsen"), "lsen");});
test("lstad -> lstad", function() {deepEqual( Stem("lstad"), "lstad");});
test("lt -> lt", function() {deepEqual( Stem("lt"), "lt");});
test("ltj -> ltj", function() {deepEqual( Stem("ltj"), "ltj");});
test("lucidor -> lucid", function() {deepEqual( Stem("lucidor"), "lucid");});
test("lucie -> luci", function() {deepEqual( Stem("lucie"), "luci");});
test("lucies -> luci", function() {deepEqual( Stem("lucies"), "luci");});
test("lucka -> luck", function() {deepEqual( Stem("lucka"), "luck");});
test("luckan -> luckan", function() {deepEqual( Stem("luckan"), "luckan");});
test("luckorna -> luck", function() {deepEqual( Stem("luckorna"), "luck");});
test("luden -> lud", function() {deepEqual( Stem("luden"), "lud");});
test("ludna -> ludn", function() {deepEqual( Stem("ludna"), "ludn");});
test("luffare -> luff", function() {deepEqual( Stem("luffare"), "luff");});
test("lufsandc -> lufsandc", function() {deepEqual( Stem("lufsandc"), "lufsandc");});
test("luft -> luft", function() {deepEqual( Stem("luft"), "luft");});
test("luftdraget -> luftdraget", function() {deepEqual( Stem("luftdraget"), "luftdraget");});
test("luften -> luft", function() {deepEqual( Stem("luften"), "luft");});
test("luftens -> luft", function() {deepEqual( Stem("luftens"), "luft");});
test("luftig -> luft", function() {deepEqual( Stem("luftig"), "luft");});
test("luftiga -> luft", function() {deepEqual( Stem("luftiga"), "luft");});
test("luftigaste -> luft", function() {deepEqual( Stem("luftigaste"), "luft");});
test("luftslott -> luftslot", function() {deepEqual( Stem("luftslott"), "luftslot");});
test("luftström -> luftström", function() {deepEqual( Stem("luftström"), "luftström");});
test("lugg -> lugg", function() {deepEqual( Stem("lugg"), "lugg");});
test("luggslitenhet -> luggsliten", function() {deepEqual( Stem("luggslitenhet"), "luggsliten");});
test("luggslitna -> luggslitn", function() {deepEqual( Stem("luggslitna"), "luggslitn");});
test("lugn -> lugn", function() {deepEqual( Stem("lugn"), "lugn");});
test("lugna -> lugn", function() {deepEqual( Stem("lugna"), "lugn");});
test("lugnad -> lugn", function() {deepEqual( Stem("lugnad"), "lugn");});
test("lugnade -> lugn", function() {deepEqual( Stem("lugnade"), "lugn");});
test("lugnande -> lugn", function() {deepEqual( Stem("lugnande"), "lugn");});
test("lugnar -> lugn", function() {deepEqual( Stem("lugnar"), "lugn");});
test("lugnare -> lugn", function() {deepEqual( Stem("lugnare"), "lugn");});
test("lugnaste -> lugn", function() {deepEqual( Stem("lugnaste"), "lugn");});
test("lugnat -> lugn", function() {deepEqual( Stem("lugnat"), "lugn");});
test("lugnet -> lugnet", function() {deepEqual( Stem("lugnet"), "lugnet");});
test("lugnt -> lugnt", function() {deepEqual( Stem("lugnt"), "lugnt");});
test("lukt -> lukt", function() {deepEqual( Stem("lukt"), "lukt");});
test("lukta -> lukt", function() {deepEqual( Stem("lukta"), "lukt");});
test("luktade -> lukt", function() {deepEqual( Stem("luktade"), "lukt");});
test("luktar -> lukt", function() {deepEqual( Stem("luktar"), "lukt");});
test("lukten -> lukt", function() {deepEqual( Stem("lukten"), "lukt");});
test("luktärter -> luktärt", function() {deepEqual( Stem("luktärter"), "luktärt");});
test("lullade -> lull", function() {deepEqual( Stem("lullade"), "lull");});
test("lummiga -> lumm", function() {deepEqual( Stem("lummiga"), "lumm");});
test("lummigt -> lumm", function() {deepEqual( Stem("lummigt"), "lumm");});
test("lump -> lump", function() {deepEqual( Stem("lump"), "lump");});
test("lumpen -> lump", function() {deepEqual( Stem("lumpen"), "lump");});
test("lumpet -> lumpet", function() {deepEqual( Stem("lumpet"), "lumpet");});
test("lumpne -> lumpn", function() {deepEqual( Stem("lumpne"), "lumpn");});
test("lumpsamlare -> lumpsaml", function() {deepEqual( Stem("lumpsamlare"), "lumpsaml");});
test("luna -> lun", function() {deepEqual( Stem("luna"), "lun");});
test("lunch -> lunch", function() {deepEqual( Stem("lunch"), "lunch");});
test("lunchbordet -> lunchbordet", function() {deepEqual( Stem("lunchbordet"), "lunchbordet");});
test("lunchen -> lunch", function() {deepEqual( Stem("lunchen"), "lunch");});
test("lund -> lund", function() {deepEqual( Stem("lund"), "lund");});
test("lundar -> lund", function() {deepEqual( Stem("lundar"), "lund");});
test("lundarnas -> lund", function() {deepEqual( Stem("lundarnas"), "lund");});
test("lunetter -> lunet", function() {deepEqual( Stem("lunetter"), "lunet");});
test("lunginflamma -> lunginflamm", function() {deepEqual( Stem("lunginflamma"), "lunginflamm");});
test("lungor -> lung", function() {deepEqual( Stem("lungor"), "lung");});
test("lungorna -> lung", function() {deepEqual( Stem("lungorna"), "lung");});
test("lunkade -> lunk", function() {deepEqual( Stem("lunkade"), "lunk");});
test("lunkentus -> lunkentus", function() {deepEqual( Stem("lunkentus"), "lunkentus");});
test("luntan -> luntan", function() {deepEqual( Stem("luntan"), "luntan");});
test("luntor -> lunt", function() {deepEqual( Stem("luntor"), "lunt");});
test("lur -> lur", function() {deepEqual( Stem("lur"), "lur");});
test("lura -> lur", function() {deepEqual( Stem("lura"), "lur");});
test("lurad -> lur", function() {deepEqual( Stem("lurad"), "lur");});
test("lurade -> lur", function() {deepEqual( Stem("lurade"), "lur");});
test("lurande -> lur", function() {deepEqual( Stem("lurande"), "lur");});
test("lurar -> lur", function() {deepEqual( Stem("lurar"), "lur");});
test("lurat -> lur", function() {deepEqual( Stem("lurat"), "lur");});
test("luren -> lur", function() {deepEqual( Stem("luren"), "lur");});
test("lurendrejarn -> lurendrejarn", function() {deepEqual( Stem("lurendrejarn"), "lurendrejarn");});
test("lurendrejarne -> lurendrej", function() {deepEqual( Stem("lurendrejarne"), "lurendrej");});
test("lurendrejarnes -> lurendrejarn", function() {deepEqual( Stem("lurendrejarnes"), "lurendrejarn");});
test("lurendrejas -> lurendrej", function() {deepEqual( Stem("lurendrejas"), "lurendrej");});
test("lurendrejeri -> lurendrejeri", function() {deepEqual( Stem("lurendrejeri"), "lurendrejeri");});
test("lurendrejeribeslag -> lurendrejeribeslag", function() {deepEqual( Stem("lurendrejeribeslag"), "lurendrejeribeslag");});
test("lurendrejerierna -> lurendrejeri", function() {deepEqual( Stem("lurendrejerierna"), "lurendrejeri");});
test("lurendrejeriet -> lurendrejeriet", function() {deepEqual( Stem("lurendrejeriet"), "lurendrejeriet");});
test("lurfviga -> lurfv", function() {deepEqual( Stem("lurfviga"), "lurfv");});
test("luri -> luri", function() {deepEqual( Stem("luri"), "luri");});
test("lurviga -> lurv", function() {deepEqual( Stem("lurviga"), "lurv");});
test("luschi -> luschi", function() {deepEqual( Stem("luschi"), "luschi");});
test("luschie -> luschi", function() {deepEqual( Stem("luschie"), "luschi");});
test("lusen -> lus", function() {deepEqual( Stem("lusen"), "lus");});
test("luska -> lusk", function() {deepEqual( Stem("luska"), "lusk");});
test("lust -> lust", function() {deepEqual( Stem("lust"), "lust");});
test("lustar -> lust", function() {deepEqual( Stem("lustar"), "lust");});
test("lusteld -> lusteld", function() {deepEqual( Stem("lusteld"), "lusteld");});
test("lusten -> lust", function() {deepEqual( Stem("lusten"), "lust");});
test("lustfyllda -> lustfylld", function() {deepEqual( Stem("lustfyllda"), "lustfylld");});
test("lustfärd -> lustfärd", function() {deepEqual( Stem("lustfärd"), "lustfärd");});
test("lustfärder -> lustfärd", function() {deepEqual( Stem("lustfärder"), "lustfärd");});
test("lustgård -> lustgård", function() {deepEqual( Stem("lustgård"), "lustgård");});
test("lustgården -> lustgård", function() {deepEqual( Stem("lustgården"), "lustgård");});
test("lustig -> lust", function() {deepEqual( Stem("lustig"), "lust");});
test("lustiga -> lust", function() {deepEqual( Stem("lustiga"), "lust");});
test("lustigaste -> lust", function() {deepEqual( Stem("lustigaste"), "lust");});
test("lustigt -> lust", function() {deepEqual( Stem("lustigt"), "lust");});
test("lustturen -> lusttur", function() {deepEqual( Stem("lustturen"), "lusttur");});
test("lusttåg -> lusttåg", function() {deepEqual( Stem("lusttåg"), "lusttåg");});
test("lustvandra -> lustvandr", function() {deepEqual( Stem("lustvandra"), "lustvandr");});
test("lut -> lut", function() {deepEqual( Stem("lut"), "lut");});
test("luta -> lut", function() {deepEqual( Stem("luta"), "lut");});
test("lutad -> lut", function() {deepEqual( Stem("lutad"), "lut");});
test("lutade -> lut", function() {deepEqual( Stem("lutade"), "lut");});
test("lutande -> lut", function() {deepEqual( Stem("lutande"), "lut");});
test("lutans -> lutan", function() {deepEqual( Stem("lutans"), "lutan");});
test("lutar -> lut", function() {deepEqual( Stem("lutar"), "lut");});
test("lutat -> lut", function() {deepEqual( Stem("lutat"), "lut");});
test("luteransk -> luteransk", function() {deepEqual( Stem("luteransk"), "luteransk");});
test("luther -> luth", function() {deepEqual( Stem("luther"), "luth");});
test("luthers -> luther", function() {deepEqual( Stem("luthers"), "luther");});
test("luven -> luv", function() {deepEqual( Stem("luven"), "luv");});
test("lvcka -> lvcka", function() {deepEqual( Stem("lvcka"), "lvcka");});
test("lycka -> lyck", function() {deepEqual( Stem("lycka"), "lyck");});
test("lyckades -> lyck", function() {deepEqual( Stem("lyckades"), "lyck");});
test("lyckadt -> lyckad", function() {deepEqual( Stem("lyckadt"), "lyckad");});
test("lyckan -> lyckan", function() {deepEqual( Stem("lyckan"), "lyckan");});
test("lyckans -> lyckan", function() {deepEqual( Stem("lyckans"), "lyckan");});
test("lyckas -> lyck", function() {deepEqual( Stem("lyckas"), "lyck");});
test("lyckats -> lyckat", function() {deepEqual( Stem("lyckats"), "lyckat");});
test("lycklig -> lyck", function() {deepEqual( Stem("lycklig"), "lyck");});
test("lyckliga -> lyck", function() {deepEqual( Stem("lyckliga"), "lyck");});
test("lyckligare -> lyck", function() {deepEqual( Stem("lyckligare"), "lyck");});
test("lyckligast -> lyck", function() {deepEqual( Stem("lyckligast"), "lyck");});
test("lyckligaste -> lyck", function() {deepEqual( Stem("lyckligaste"), "lyck");});
test("lycklige -> lyck", function() {deepEqual( Stem("lycklige"), "lyck");});
test("lyckliggöra -> lyckliggör", function() {deepEqual( Stem("lyckliggöra"), "lyckliggör");});
test("lyckligheten -> lyck", function() {deepEqual( Stem("lyckligheten"), "lyck");});
test("lyckligt -> lyck", function() {deepEqual( Stem("lyckligt"), "lyck");});
test("lyckligtvis -> lyckligtvis", function() {deepEqual( Stem("lyckligtvis"), "lyckligtvis");});
test("lyckodagar -> lyckodag", function() {deepEqual( Stem("lyckodagar"), "lyckodag");});
test("lyckodränkta -> lyckodränk", function() {deepEqual( Stem("lyckodränkta"), "lyckodränk");});
test("lyckodröm -> lyckodröm", function() {deepEqual( Stem("lyckodröm"), "lyckodröm");});
test("lyckokänsla -> lyckokänsl", function() {deepEqual( Stem("lyckokänsla"), "lyckokänsl");});
test("lyckopannkakan -> lyckopannkakan", function() {deepEqual( Stem("lyckopannkakan"), "lyckopannkakan");});
test("lyckoropen -> lyckorop", function() {deepEqual( Stem("lyckoropen"), "lyckorop");});
test("lycksalig -> lycksa", function() {deepEqual( Stem("lycksalig"), "lycksa");});
test("lycksaliga -> lycksa", function() {deepEqual( Stem("lycksaliga"), "lycksa");});
test("lycksalige -> lycksa", function() {deepEqual( Stem("lycksalige"), "lycksa");});
test("lycksalighet -> lycksa", function() {deepEqual( Stem("lycksalighet"), "lycksa");});
test("lycksalighetens -> lycksa", function() {deepEqual( Stem("lycksalighetens"), "lycksa");});
test("lycksälla -> lycksäll", function() {deepEqual( Stem("lycksälla"), "lycksäll");});
test("lyckt -> lyck", function() {deepEqual( Stem("lyckt"), "lyck");});
test("lyckönska -> lyckönsk", function() {deepEqual( Stem("lyckönska"), "lyckönsk");});
test("lyckönskar -> lyckönsk", function() {deepEqual( Stem("lyckönskar"), "lyckönsk");});
test("lyckönskningar -> lyckönskning", function() {deepEqual( Stem("lyckönskningar"), "lyckönskning");});
test("lyckönskningarna -> lyckönskning", function() {deepEqual( Stem("lyckönskningarna"), "lyckönskning");});
test("lyckönskningstal -> lyckönskningstal", function() {deepEqual( Stem("lyckönskningstal"), "lyckönskningstal");});
test("lyda -> lyd", function() {deepEqual( Stem("lyda"), "lyd");});
test("lydde -> lydd", function() {deepEqual( Stem("lydde"), "lydd");});
test("lyder -> lyd", function() {deepEqual( Stem("lyder"), "lyd");});
test("lydig -> lyd", function() {deepEqual( Stem("lydig"), "lyd");});
test("lydiga -> lyd", function() {deepEqual( Stem("lydiga"), "lyd");});
test("lydigt -> lyd", function() {deepEqual( Stem("lydigt"), "lyd");});
test("lydnad -> lydn", function() {deepEqual( Stem("lydnad"), "lydn");});
test("lyeker -> lyek", function() {deepEqual( Stem("lyeker"), "lyek");});
test("lyft -> lyft", function() {deepEqual( Stem("lyft"), "lyft");});
test("lyfta -> lyft", function() {deepEqual( Stem("lyfta"), "lyft");});
test("lyftad -> lyft", function() {deepEqual( Stem("lyftad"), "lyft");});
test("lyftade -> lyft", function() {deepEqual( Stem("lyftade"), "lyft");});
test("lyftades -> lyft", function() {deepEqual( Stem("lyftades"), "lyft");});
test("lyftande -> lyft", function() {deepEqual( Stem("lyftande"), "lyft");});
test("lyftas -> lyft", function() {deepEqual( Stem("lyftas"), "lyft");});
test("lyfte -> lyft", function() {deepEqual( Stem("lyfte"), "lyft");});
test("lyften -> lyft", function() {deepEqual( Stem("lyften"), "lyft");});
test("lyfter -> lyft", function() {deepEqual( Stem("lyfter"), "lyft");});
test("lyftes -> lyft", function() {deepEqual( Stem("lyftes"), "lyft");});
test("lyholmarne -> lyholm", function() {deepEqual( Stem("lyholmarne"), "lyholm");});
test("lykta -> lykt", function() {deepEqual( Stem("lykta"), "lykt");});
test("lyktan -> lyktan", function() {deepEqual( Stem("lyktan"), "lyktan");});
test("lyktar -> lykt", function() {deepEqual( Stem("lyktar"), "lykt");});
test("lyktor -> lykt", function() {deepEqual( Stem("lyktor"), "lykt");});
test("lyktorna -> lykt", function() {deepEqual( Stem("lyktorna"), "lykt");});
test("lyktornas -> lykt", function() {deepEqual( Stem("lyktornas"), "lykt");});
test("lyktstolpe -> lyktstolp", function() {deepEqual( Stem("lyktstolpe"), "lyktstolp");});
test("lyktstolpen -> lyktstolp", function() {deepEqual( Stem("lyktstolpen"), "lyktstolp");});
test("lykttändare -> lykttänd", function() {deepEqual( Stem("lykttändare"), "lykttänd");});
test("lykttändaren -> lykttänd", function() {deepEqual( Stem("lykttändaren"), "lykttänd");});
test("lymmel -> lymmel", function() {deepEqual( Stem("lymmel"), "lymmel");});
test("lymmeln -> lymmeln", function() {deepEqual( Stem("lymmeln"), "lymmeln");});
test("lyngden -> lyng", function() {deepEqual( Stem("lyngden"), "lyng");});
test("lynne -> lynn", function() {deepEqual( Stem("lynne"), "lynn");});
test("lynnen -> lynn", function() {deepEqual( Stem("lynnen"), "lynn");});
test("lynnet -> lynnet", function() {deepEqual( Stem("lynnet"), "lynnet");});
test("lyra -> lyr", function() {deepEqual( Stem("lyra"), "lyr");});
test("lys -> lys", function() {deepEqual( Stem("lys"), "lys");});
test("lysa -> lys", function() {deepEqual( Stem("lysa"), "lys");});
test("lysande -> lys", function() {deepEqual( Stem("lysande"), "lys");});
test("lysas -> lys", function() {deepEqual( Stem("lysas"), "lys");});
test("lyser -> lys", function() {deepEqual( Stem("lyser"), "lys");});
test("lysning -> lysning", function() {deepEqual( Stem("lysning"), "lysning");});
test("lyss -> lyss", function() {deepEqual( Stem("lyss"), "lyss");});
test("lyssna -> lyssn", function() {deepEqual( Stem("lyssna"), "lyssn");});
test("lyssnade -> lyssn", function() {deepEqual( Stem("lyssnade"), "lyssn");});
test("lyssnande -> lyssn", function() {deepEqual( Stem("lyssnande"), "lyssn");});
test("lyssnar -> lyssn", function() {deepEqual( Stem("lyssnar"), "lyssn");});
test("lyssnat -> lyssn", function() {deepEqual( Stem("lyssnat"), "lyssn");});
test("lyssnen -> lyssn", function() {deepEqual( Stem("lyssnen"), "lyssn");});
test("lyst -> lyst", function() {deepEqual( Stem("lyst"), "lyst");});
test("lyste -> lyst", function() {deepEqual( Stem("lyste"), "lyst");});
test("lysten -> lyst", function() {deepEqual( Stem("lysten"), "lyst");});
test("lyster -> lyst", function() {deepEqual( Stem("lyster"), "lyst");});
test("lysterklänning -> lysterklänning", function() {deepEqual( Stem("lysterklänning"), "lysterklänning");});
test("lystes -> lyst", function() {deepEqual( Stem("lystes"), "lyst");});
test("lystna -> lystn", function() {deepEqual( Stem("lystna"), "lystn");});
test("lystnad -> lystn", function() {deepEqual( Stem("lystnad"), "lystn");});
test("lystrade -> lystr", function() {deepEqual( Stem("lystrade"), "lystr");});
test("lyte -> lyt", function() {deepEqual( Stem("lyte"), "lyt");});
test("lytt -> lytt", function() {deepEqual( Stem("lytt"), "lytt");});
test("lytton -> lytton", function() {deepEqual( Stem("lytton"), "lytton");});
test("lyx -> lyx", function() {deepEqual( Stem("lyx"), "lyx");});
test("lyxartikel -> lyxartikel", function() {deepEqual( Stem("lyxartikel"), "lyxartikel");});
test("lyxsaker -> lyxsak", function() {deepEqual( Stem("lyxsaker"), "lyxsak");});
test("lä -> lä", function() {deepEqual( Stem("lä"), "lä");});
test("läcker -> läck", function() {deepEqual( Stem("läcker"), "läck");});
test("läckerhet -> läcker", function() {deepEqual( Stem("läckerhet"), "läcker");});
test("läckerheter -> läcker", function() {deepEqual( Stem("läckerheter"), "läcker");});
test("läckerheterna -> läcker", function() {deepEqual( Stem("läckerheterna"), "läcker");});
test("läckra -> läckr", function() {deepEqual( Stem("läckra"), "läckr");});
test("läder -> läd", function() {deepEqual( Stem("läder"), "läd");});
test("läderband -> läderband", function() {deepEqual( Stem("läderband"), "läderband");});
test("läderdynan -> läderdynan", function() {deepEqual( Stem("läderdynan"), "läderdynan");});
test("läderfabrikör -> läderfabrikör", function() {deepEqual( Stem("läderfabrikör"), "läderfabrikör");});
test("läderlappar -> läderlapp", function() {deepEqual( Stem("läderlappar"), "läderlapp");});
test("läderläpparna -> läderläpp", function() {deepEqual( Stem("läderläpparna"), "läderläpp");});
test("läderpermar -> läderperm", function() {deepEqual( Stem("läderpermar"), "läderperm");});
test("läffsor -> läffs", function() {deepEqual( Stem("läffsor"), "läffs");});
test("läge -> läg", function() {deepEqual( Stem("läge"), "läg");});
test("lägenhet -> lägen", function() {deepEqual( Stem("lägenhet"), "lägen");});
test("lägenheten -> lägen", function() {deepEqual( Stem("lägenheten"), "lägen");});
test("läger -> läg", function() {deepEqual( Stem("läger"), "läg");});
test("lägerelden -> lägereld", function() {deepEqual( Stem("lägerelden"), "lägereld");});
test("läget -> läget", function() {deepEqual( Stem("läget"), "läget");});
test("lägg -> lägg", function() {deepEqual( Stem("lägg"), "lägg");});
test("lägga -> lägg", function() {deepEqual( Stem("lägga"), "lägg");});
test("läggande -> lägg", function() {deepEqual( Stem("läggande"), "lägg");});
test("läggen -> lägg", function() {deepEqual( Stem("läggen"), "lägg");});
test("lägger -> lägg", function() {deepEqual( Stem("lägger"), "lägg");});
test("lägges -> lägg", function() {deepEqual( Stem("lägges"), "lägg");});
test("läggspelet -> läggspelet", function() {deepEqual( Stem("läggspelet"), "läggspelet");});
test("läglig -> läg", function() {deepEqual( Stem("läglig"), "läg");});
test("lägligt -> läg", function() {deepEqual( Stem("lägligt"), "läg");});
test("lägrade -> lägr", function() {deepEqual( Stem("lägrade"), "lägr");});
test("lägrat -> lägr", function() {deepEqual( Stem("lägrat"), "lägr");});
test("lägre -> lägr", function() {deepEqual( Stem("lägre"), "lägr");});
test("lägret -> lägret", function() {deepEqual( Stem("lägret"), "lägret");});
test("lägsen -> lägs", function() {deepEqual( Stem("lägsen"), "lägs");});
test("lägsna -> lägsn", function() {deepEqual( Stem("lägsna"), "lägsn");});
test("lägsta -> lägst", function() {deepEqual( Stem("lägsta"), "lägst");});
test("läkarblick -> läkarblick", function() {deepEqual( Stem("läkarblick"), "läkarblick");});
test("läkare -> läk", function() {deepEqual( Stem("läkare"), "läk");});
test("läkared -> läkared", function() {deepEqual( Stem("läkared"), "läkared");});
test("läkaren -> läk", function() {deepEqual( Stem("läkaren"), "läk");});
test("läkarens -> läk", function() {deepEqual( Stem("läkarens"), "läk");});
test("läkarföreningen -> läkarförening", function() {deepEqual( Stem("läkarföreningen"), "läkarförening");});
test("läkarna -> läk", function() {deepEqual( Stem("läkarna"), "läk");});
test("läkarpjosk -> läkarpjosk", function() {deepEqual( Stem("läkarpjosk"), "läkarpjosk");});
test("läkarsällskapet -> läkarsällskapet", function() {deepEqual( Stem("läkarsällskapet"), "läkarsällskapet");});
test("läkarsällskapets -> läkarsällskapet", function() {deepEqual( Stem("läkarsällskapets"), "läkarsällskapet");});
test("läkas -> läk", function() {deepEqual( Stem("läkas"), "läk");});
test("läkedom -> läkedom", function() {deepEqual( Stem("läkedom"), "läkedom");});
test("läkemedel -> läkemedel", function() {deepEqual( Stem("läkemedel"), "läkemedel");});
test("läker -> läk", function() {deepEqual( Stem("läker"), "läk");});
test("läkts -> läkt", function() {deepEqual( Stem("läkts"), "läkt");});
test("lämna -> lämn", function() {deepEqual( Stem("lämna"), "lämn");});
test("lämnad -> lämn", function() {deepEqual( Stem("lämnad"), "lämn");});
test("lämnade -> lämn", function() {deepEqual( Stem("lämnade"), "lämn");});
test("lämnades -> lämn", function() {deepEqual( Stem("lämnades"), "lämn");});
test("lämnande -> lämn", function() {deepEqual( Stem("lämnande"), "lämn");});
test("lämnar -> lämn", function() {deepEqual( Stem("lämnar"), "lämn");});
test("lämnas -> lämn", function() {deepEqual( Stem("lämnas"), "lämn");});
test("lämnat -> lämn", function() {deepEqual( Stem("lämnat"), "lämn");});
test("lämnats -> lämnat", function() {deepEqual( Stem("lämnats"), "lämnat");});
test("lämningarna -> lämning", function() {deepEqual( Stem("lämningarna"), "lämning");});
test("lämpa -> lämp", function() {deepEqual( Stem("lämpa"), "lämp");});
test("lämpar -> lämp", function() {deepEqual( Stem("lämpar"), "lämp");});
test("lämpas -> lämp", function() {deepEqual( Stem("lämpas"), "lämp");});
test("lämplig -> lämp", function() {deepEqual( Stem("lämplig"), "lämp");});
test("lämpliga -> lämp", function() {deepEqual( Stem("lämpliga"), "lämp");});
test("lämpligare -> lämp", function() {deepEqual( Stem("lämpligare"), "lämp");});
test("lämpligen -> lämp", function() {deepEqual( Stem("lämpligen"), "lämp");});
test("lämpligt -> lämp", function() {deepEqual( Stem("lämpligt"), "lämp");});
test("lämpor -> lämp", function() {deepEqual( Stem("lämpor"), "lämp");});
test("länd -> länd", function() {deepEqual( Stem("länd"), "länd");});
test("länder -> länd", function() {deepEqual( Stem("länder"), "länd");});
test("ländska -> ländsk", function() {deepEqual( Stem("ländska"), "ländsk");});
test("läng -> läng", function() {deepEqual( Stem("läng"), "läng");});
test("längc -> längc", function() {deepEqual( Stem("längc"), "längc");});
test("längd -> läng", function() {deepEqual( Stem("längd"), "läng");});
test("längden -> läng", function() {deepEqual( Stem("längden"), "läng");});
test("länge -> läng", function() {deepEqual( Stem("länge"), "läng");});
test("längesedan -> längesedan", function() {deepEqual( Stem("längesedan"), "längesedan");});
test("längesen -> länges", function() {deepEqual( Stem("längesen"), "länges");});
test("längre -> längr", function() {deepEqual( Stem("längre"), "längr");});
test("längs -> läng", function() {deepEqual( Stem("längs"), "läng");});
test("längst -> längst", function() {deepEqual( Stem("längst"), "längst");});
test("längsta -> längst", function() {deepEqual( Stem("längsta"), "längst");});
test("längta -> läng", function() {deepEqual( Stem("längta"), "läng");});
test("längtade -> läng", function() {deepEqual( Stem("längtade"), "läng");});
test("längtan -> längtan", function() {deepEqual( Stem("längtan"), "längtan");});
test("längtande -> läng", function() {deepEqual( Stem("längtande"), "läng");});
test("längtans -> längtan", function() {deepEqual( Stem("längtans"), "längtan");});
test("längtansfull -> längtansfull", function() {deepEqual( Stem("längtansfull"), "längtansfull");});
test("längtansfullt -> längtansfull", function() {deepEqual( Stem("längtansfullt"), "längtansfull");});
test("längtar -> läng", function() {deepEqual( Stem("längtar"), "läng");});
test("längtat -> läng", function() {deepEqual( Stem("längtat"), "läng");});
test("länk -> länk", function() {deepEqual( Stem("länk"), "länk");});
test("länstol -> länstol", function() {deepEqual( Stem("länstol"), "länstol");});
test("länstolen -> länstol", function() {deepEqual( Stem("länstolen"), "länstol");});
test("läpp -> läpp", function() {deepEqual( Stem("läpp"), "läpp");});
test("läppar -> läpp", function() {deepEqual( Stem("läppar"), "läpp");});
test("läpparna -> läpp", function() {deepEqual( Stem("läpparna"), "läpp");});
test("läpparne -> läpp", function() {deepEqual( Stem("läpparne"), "läpp");});
test("läppen -> läpp", function() {deepEqual( Stem("läppen"), "läpp");});
test("läppens -> läpp", function() {deepEqual( Stem("läppens"), "läpp");});
test("läppja -> läppj", function() {deepEqual( Stem("läppja"), "läppj");});
test("läppjade -> läppj", function() {deepEqual( Stem("läppjade"), "läppj");});
test("läppjar -> läppj", function() {deepEqual( Stem("läppjar"), "läppj");});
test("lär -> lär", function() {deepEqual( Stem("lär"), "lär");});
test("lära -> lär", function() {deepEqual( Stem("lära"), "lär");});
test("läraktig -> lärakt", function() {deepEqual( Stem("läraktig"), "lärakt");});
test("läran -> läran", function() {deepEqual( Stem("läran"), "läran");});
test("lärare -> lär", function() {deepEqual( Stem("lärare"), "lär");});
test("lärarebefattning -> lärarebefattning", function() {deepEqual( Stem("lärarebefattning"), "lärarebefattning");});
test("läraren -> lär", function() {deepEqual( Stem("läraren"), "lär");});
test("lärarens -> lär", function() {deepEqual( Stem("lärarens"), "lär");});
test("lärares -> lärar", function() {deepEqual( Stem("lärares"), "lärar");});
test("lärarevärdighet -> lärarevärd", function() {deepEqual( Stem("lärarevärdighet"), "lärarevärd");});
test("lärarin -> lärarin", function() {deepEqual( Stem("lärarin"), "lärarin");});
test("lärarinna -> lärarin", function() {deepEqual( Stem("lärarinna"), "lärarin");});
test("lärarinnan -> lärarinnan", function() {deepEqual( Stem("lärarinnan"), "lärarinnan");});
test("lärarinnans -> lärarinnan", function() {deepEqual( Stem("lärarinnans"), "lärarinnan");});
test("lärarinnegärning -> lärarinnegärning", function() {deepEqual( Stem("lärarinnegärning"), "lärarinnegärning");});
test("lärarinnesemina -> lärarinnesemin", function() {deepEqual( Stem("lärarinnesemina"), "lärarinnesemin");});
test("lärd -> lärd", function() {deepEqual( Stem("lärd"), "lärd");});
test("lärda -> lärd", function() {deepEqual( Stem("lärda"), "lärd");});
test("lärde -> lärd", function() {deepEqual( Stem("lärde"), "lärd");});
test("lärdom -> lärdom", function() {deepEqual( Stem("lärdom"), "lärdom");});
test("lärdomar -> lärdom", function() {deepEqual( Stem("lärdomar"), "lärdom");});
test("lärer -> lär", function() {deepEqual( Stem("lärer"), "lär");});
test("lärft -> lärft", function() {deepEqual( Stem("lärft"), "lärft");});
test("lärftskramhandlare -> lärftskramhandl", function() {deepEqual( Stem("lärftskramhandlare"), "lärftskramhandl");});
test("lärftskramhandlaren -> lärftskramhandl", function() {deepEqual( Stem("lärftskramhandlaren"), "lärftskramhandl");});
test("lärftskramhandlarens -> lärftskramhandl", function() {deepEqual( Stem("lärftskramhandlarens"), "lärftskramhandl");});
test("lärgossen -> lärgoss", function() {deepEqual( Stem("lärgossen"), "lärgoss");});
test("lärjungar -> lärjung", function() {deepEqual( Stem("lärjungar"), "lärjung");});
test("lärjunge -> lärjung", function() {deepEqual( Stem("lärjunge"), "lärjung");});
test("lärka -> lärk", function() {deepEqual( Stem("lärka"), "lärk");});
test("lärkor -> lärk", function() {deepEqual( Stem("lärkor"), "lärk");});
test("lärkstaden -> lärkstad", function() {deepEqual( Stem("lärkstaden"), "lärkstad");});
test("lärkvingar -> lärkving", function() {deepEqual( Stem("lärkvingar"), "lärkving");});
test("lärnna -> lärn", function() {deepEqual( Stem("lärnna"), "lärn");});
test("läroanstalterna -> läroanstalt", function() {deepEqual( Stem("läroanstalterna"), "läroanstalt");});
test("lärofader -> lärofad", function() {deepEqual( Stem("lärofader"), "lärofad");});
test("läror -> lär", function() {deepEqual( Stem("läror"), "lär");});
test("lärorummet -> lärorummet", function() {deepEqual( Stem("lärorummet"), "lärorummet");});
test("lärostriderna -> lärostrid", function() {deepEqual( Stem("lärostriderna"), "lärostrid");});
test("läroverk -> läroverk", function() {deepEqual( Stem("läroverk"), "läroverk");});
test("läroverksadjunkten -> läroverksadjunk", function() {deepEqual( Stem("läroverksadjunkten"), "läroverksadjunk");});
test("lärt -> lärt", function() {deepEqual( Stem("lärt"), "lärt");});
test("lärvtskramhandlarns -> lärvtskramhandlarn", function() {deepEqual( Stem("lärvtskramhandlarns"), "lärvtskramhandlarn");});
test("läs -> läs", function() {deepEqual( Stem("läs"), "läs");});
test("läsa -> läs", function() {deepEqual( Stem("läsa"), "läs");});
test("läsaren -> läs", function() {deepEqual( Stem("läsaren"), "läs");});
test("läsarens -> läs", function() {deepEqual( Stem("läsarens"), "läs");});
test("läsas -> läs", function() {deepEqual( Stem("läsas"), "läs");});
test("läser -> läs", function() {deepEqual( Stem("läser"), "läs");});
test("läses -> läs", function() {deepEqual( Stem("läses"), "läs");});
test("läsida -> läsid", function() {deepEqual( Stem("läsida"), "läsid");});
test("läskar -> läsk", function() {deepEqual( Stem("läskar"), "läsk");});
test("läsning -> läsning", function() {deepEqual( Stem("läsning"), "läsning");});
test("läsningen -> läsning", function() {deepEqual( Stem("läsningen"), "läsning");});
test("läspa -> läsp", function() {deepEqual( Stem("läspa"), "läsp");});
test("läspade -> läsp", function() {deepEqual( Stem("läspade"), "läsp");});
test("läst -> läst", function() {deepEqual( Stem("läst"), "läst");});
test("läste -> läst", function() {deepEqual( Stem("läste"), "läst");});
test("lästes -> läst", function() {deepEqual( Stem("lästes"), "läst");});
test("lät -> lät", function() {deepEqual( Stem("lät"), "lät");});
test("lätande -> lät", function() {deepEqual( Stem("lätande"), "lät");});
test("läte -> lät", function() {deepEqual( Stem("läte"), "lät");});
test("läten -> lät", function() {deepEqual( Stem("läten"), "lät");});
test("läto -> läto", function() {deepEqual( Stem("läto"), "läto");});
test("lätt -> lätt", function() {deepEqual( Stem("lätt"), "lätt");});
test("lätta -> lätt", function() {deepEqual( Stem("lätta"), "lätt");});
test("lättad -> lätt", function() {deepEqual( Stem("lättad"), "lätt");});
test("lättade -> lätt", function() {deepEqual( Stem("lättade"), "lätt");});
test("lättadt -> lättad", function() {deepEqual( Stem("lättadt"), "lättad");});
test("lättare -> lätt", function() {deepEqual( Stem("lättare"), "lätt");});
test("lättast -> lätt", function() {deepEqual( Stem("lättast"), "lätt");});
test("lättaste -> lätt", function() {deepEqual( Stem("lättaste"), "lätt");});
test("lättat -> lätt", function() {deepEqual( Stem("lättat"), "lätt");});
test("lättböjliga -> lättböj", function() {deepEqual( Stem("lättböjliga"), "lättböj");});
test("lätteligen -> lätte", function() {deepEqual( Stem("lätteligen"), "lätte");});
test("lättfattligt -> lättfatt", function() {deepEqual( Stem("lättfattligt"), "lättfatt");});
test("lätthet -> lätt", function() {deepEqual( Stem("lätthet"), "lätt");});
test("lätthänt -> lätthänt", function() {deepEqual( Stem("lätthänt"), "lätthänt");});
test("lättingen -> lätting", function() {deepEqual( Stem("lättingen"), "lätting");});
test("lättjefull -> lättjefull", function() {deepEqual( Stem("lättjefull"), "lättjefull");});
test("lättnad -> lättn", function() {deepEqual( Stem("lättnad"), "lättn");});
test("lättretliga -> lättret", function() {deepEqual( Stem("lättretliga"), "lättret");});
test("lättrörd -> lättrörd", function() {deepEqual( Stem("lättrörd"), "lättrörd");});
test("lättsinne -> lättsin", function() {deepEqual( Stem("lättsinne"), "lättsin");});
test("lättsinnig -> lättsinn", function() {deepEqual( Stem("lättsinnig"), "lättsinn");});
test("lättsinniga -> lättsinn", function() {deepEqual( Stem("lättsinniga"), "lättsinn");});
test("lättsinnighet -> lättsinn", function() {deepEqual( Stem("lättsinnighet"), "lättsinn");});
test("lättsinnigheter -> lättsinn", function() {deepEqual( Stem("lättsinnigheter"), "lättsinn");});
test("lättsinnigt -> lättsinn", function() {deepEqual( Stem("lättsinnigt"), "lättsinn");});
test("lättvindig -> lättvind", function() {deepEqual( Stem("lättvindig"), "lättvind");});
test("läxa -> läx", function() {deepEqual( Stem("läxa"), "läx");});
test("läxläsningen -> läxläsning", function() {deepEqual( Stem("läxläsningen"), "läxläsning");});
test("läxorna -> läx", function() {deepEqual( Stem("läxorna"), "läx");});
test("låda -> låd", function() {deepEqual( Stem("låda"), "låd");});
test("lådan -> lådan", function() {deepEqual( Stem("lådan"), "lådan");});
test("låding -> låding", function() {deepEqual( Stem("låding"), "låding");});
test("lådingsfriska -> lådingsfrisk", function() {deepEqual( Stem("lådingsfriska"), "lådingsfrisk");});
test("låg -> låg", function() {deepEqual( Stem("låg"), "låg");});
test("låga -> låg", function() {deepEqual( Stem("låga"), "låg");});
test("lågade -> låg", function() {deepEqual( Stem("lågade"), "låg");});
test("lågan -> lågan", function() {deepEqual( Stem("lågan"), "lågan");});
test("lågande -> låg", function() {deepEqual( Stem("lågande"), "låg");});
test("låge -> låg", function() {deepEqual( Stem("låge"), "låg");});
test("låghet -> låg", function() {deepEqual( Stem("låghet"), "låg");});
test("lågklackad -> lågklack", function() {deepEqual( Stem("lågklackad"), "lågklack");});
test("lågklackade -> lågklack", function() {deepEqual( Stem("lågklackade"), "lågklack");});
test("lågo -> lågo", function() {deepEqual( Stem("lågo"), "lågo");});
test("lågor -> låg", function() {deepEqual( Stem("lågor"), "låg");});
test("lågorna -> låg", function() {deepEqual( Stem("lågorna"), "låg");});
test("lågskon -> lågskon", function() {deepEqual( Stem("lågskon"), "lågskon");});
test("lågt -> lågt", function() {deepEqual( Stem("lågt"), "lågt");});
test("lån -> lån", function() {deepEqual( Stem("lån"), "lån");});
test("låna -> lån", function() {deepEqual( Stem("låna"), "lån");});
test("lånade -> lån", function() {deepEqual( Stem("lånade"), "lån");});
test("lånar -> lån", function() {deepEqual( Stem("lånar"), "lån");});
test("lånat -> lån", function() {deepEqual( Stem("lånat"), "lån");});
test("lånet -> lånet", function() {deepEqual( Stem("lånet"), "lånet");});
test("lång -> lång", function() {deepEqual( Stem("lång"), "lång");});
test("långa -> lång", function() {deepEqual( Stem("långa"), "lång");});
test("långan -> långan", function() {deepEqual( Stem("långan"), "långan");});
test("långbyxor -> långbyx", function() {deepEqual( Stem("långbyxor"), "långbyx");});
test("långdraget -> långdraget", function() {deepEqual( Stem("långdraget"), "långdraget");});
test("långfingret -> långfingret", function() {deepEqual( Stem("långfingret"), "långfingret");});
test("långhalsdukar -> långhalsduk", function() {deepEqual( Stem("långhalsdukar"), "långhalsduk");});
test("långholmen -> långholm", function() {deepEqual( Stem("långholmen"), "långholm");});
test("långlig -> lång", function() {deepEqual( Stem("långlig"), "lång");});
test("långlåt -> långlåt", function() {deepEqual( Stem("långlåt"), "långlåt");});
test("långor -> lång", function() {deepEqual( Stem("långor"), "lång");});
test("långrandiga -> långrand", function() {deepEqual( Stem("långrandiga"), "långrand");});
test("långrandigt -> långrand", function() {deepEqual( Stem("långrandigt"), "långrand");});
test("långresa -> långres", function() {deepEqual( Stem("långresa"), "långres");});
test("långrock -> långrock", function() {deepEqual( Stem("långrock"), "långrock");});
test("långs -> lång", function() {deepEqual( Stem("långs"), "lång");});
test("långsam -> långsam", function() {deepEqual( Stem("långsam"), "långsam");});
test("långsamheten -> långsam", function() {deepEqual( Stem("långsamheten"), "långsam");});
test("långsamma -> långsamm", function() {deepEqual( Stem("långsamma"), "långsamm");});
test("långsamt -> långsamt", function() {deepEqual( Stem("långsamt"), "långsamt");});
test("långsannt -> långsannt", function() {deepEqual( Stem("långsannt"), "långsannt");});
test("långsides -> långsid", function() {deepEqual( Stem("långsides"), "långsid");});
test("långsint -> långsint", function() {deepEqual( Stem("långsint"), "långsint");});
test("långt -> lång", function() {deepEqual( Stem("långt"), "lång");});
test("långtifrån -> långtifrån", function() {deepEqual( Stem("långtifrån"), "långtifrån");});
test("långtmindre -> långtmindr", function() {deepEqual( Stem("långtmindre"), "långtmindr");});
test("långvarig -> långvar", function() {deepEqual( Stem("långvarig"), "långvar");});
test("långvarigt -> långvar", function() {deepEqual( Stem("långvarigt"), "långvar");});
test("långväga -> långväg", function() {deepEqual( Stem("långväga"), "långväg");});
test("långväggen -> långvägg", function() {deepEqual( Stem("långväggen"), "långvägg");});
test("låntagaren -> låntag", function() {deepEqual( Stem("låntagaren"), "låntag");});
test("lår -> lår", function() {deepEqual( Stem("lår"), "lår");});
test("lås -> lås", function() {deepEqual( Stem("lås"), "lås");});
test("låsa -> lås", function() {deepEqual( Stem("låsa"), "lås");});
test("låset -> låset", function() {deepEqual( Stem("låset"), "låset");});
test("låsets -> låset", function() {deepEqual( Stem("låsets"), "låset");});
test("låst -> låst", function() {deepEqual( Stem("låst"), "låst");});
test("låste -> låst", function() {deepEqual( Stem("låste"), "låst");});
test("låt -> låt", function() {deepEqual( Stem("låt"), "låt");});
test("låta -> låt", function() {deepEqual( Stem("låta"), "låt");});
test("låtande -> låt", function() {deepEqual( Stem("låtande"), "låt");});
test("låte -> låt", function() {deepEqual( Stem("låte"), "låt");});
test("låtelse -> låt", function() {deepEqual( Stem("låtelse"), "låt");});
test("låter -> låt", function() {deepEqual( Stem("låter"), "låt");});
test("låtit -> låtit", function() {deepEqual( Stem("låtit"), "låtit");});
test("låtsa -> låts", function() {deepEqual( Stem("låtsa"), "låts");});
test("låtsad -> låts", function() {deepEqual( Stem("låtsad"), "låts");});
test("låtsade -> låts", function() {deepEqual( Stem("låtsade"), "låts");});
test("låtsades -> låts", function() {deepEqual( Stem("låtsades"), "låts");});
test("låtsande -> låts", function() {deepEqual( Stem("låtsande"), "låts");});
test("låtsar -> låts", function() {deepEqual( Stem("låtsar"), "låts");});
test("låtsas -> låts", function() {deepEqual( Stem("låtsas"), "låts");});
test("låtsat -> låts", function() {deepEqual( Stem("låtsat"), "låts");});
test("låtsats -> låtsat", function() {deepEqual( Stem("låtsats"), "låtsat");});
test("låäng -> låäng", function() {deepEqual( Stem("låäng"), "låäng");});
test("löda -> löd", function() {deepEqual( Stem("löda"), "löd");});
test("löddret -> löddret", function() {deepEqual( Stem("löddret"), "löddret");});
test("löfte -> löft", function() {deepEqual( Stem("löfte"), "löft");});
test("löften -> löft", function() {deepEqual( Stem("löften"), "löft");});
test("löftet -> löftet", function() {deepEqual( Stem("löftet"), "löftet");});
test("löftets -> löftet", function() {deepEqual( Stem("löftets"), "löftet");});
test("lögn -> lögn", function() {deepEqual( Stem("lögn"), "lögn");});
test("lögnen -> lögn", function() {deepEqual( Stem("lögnen"), "lögn");});
test("lögnens -> lögn", function() {deepEqual( Stem("lögnens"), "lögn");});
test("lögner -> lögn", function() {deepEqual( Stem("lögner"), "lögn");});
test("lögnhals -> lögnhal", function() {deepEqual( Stem("lögnhals"), "lögnhal");});
test("löj -> löj", function() {deepEqual( Stem("löj"), "löj");});
test("löje -> löj", function() {deepEqual( Stem("löje"), "löj");});
test("löjeblandade -> löjebland", function() {deepEqual( Stem("löjeblandade"), "löjebland");});
test("löjen -> löj", function() {deepEqual( Stem("löjen"), "löj");});
test("löjet -> löjet", function() {deepEqual( Stem("löjet"), "löjet");});
test("löjlig -> löj", function() {deepEqual( Stem("löjlig"), "löj");});
test("löjliga -> löj", function() {deepEqual( Stem("löjliga"), "löj");});
test("löjligaste -> löj", function() {deepEqual( Stem("löjligaste"), "löj");});
test("löjliget -> löjliget", function() {deepEqual( Stem("löjliget"), "löjliget");});
test("löjlighet -> löj", function() {deepEqual( Stem("löjlighet"), "löj");});
test("löjligheter -> löj", function() {deepEqual( Stem("löjligheter"), "löj");});
test("löjligt -> löj", function() {deepEqual( Stem("löjligt"), "löj");});
test("löjtnant -> löjtnant", function() {deepEqual( Stem("löjtnant"), "löjtnant");});
test("löjtnanten -> löjtnant", function() {deepEqual( Stem("löjtnanten"), "löjtnant");});
test("löjtnantens -> löjtnant", function() {deepEqual( Stem("löjtnantens"), "löjtnant");});
test("löjtnantets -> löjtnantet", function() {deepEqual( Stem("löjtnantets"), "löjtnantet");});
test("löjtnantskotteri -> löjtnantskotteri", function() {deepEqual( Stem("löjtnantskotteri"), "löjtnantskotteri");});
test("lök -> lök", function() {deepEqual( Stem("lök"), "lök");});
test("löken -> lök", function() {deepEqual( Stem("löken"), "lök");});
test("lökskivor -> lökskiv", function() {deepEqual( Stem("lökskivor"), "lökskiv");});
test("lömska -> lömsk", function() {deepEqual( Stem("lömska"), "lömsk");});
test("lömskt -> lömsk", function() {deepEqual( Stem("lömskt"), "lömsk");});
test("lön -> lön", function() {deepEqual( Stem("lön"), "lön");});
test("löna -> lön", function() {deepEqual( Stem("löna"), "lön");});
test("lönade -> lön", function() {deepEqual( Stem("lönade"), "lön");});
test("lönar -> lön", function() {deepEqual( Stem("lönar"), "lön");});
test("lönen -> lön", function() {deepEqual( Stem("lönen"), "lön");});
test("lönn -> lönn", function() {deepEqual( Stem("lönn"), "lönn");});
test("lönnarna -> lönn", function() {deepEqual( Stem("lönnarna"), "lönn");});
test("lönnars -> lönnar", function() {deepEqual( Stem("lönnars"), "lönnar");});
test("lönnblad -> lönnbl", function() {deepEqual( Stem("lönnblad"), "lönnbl");});
test("lönndom -> lönndom", function() {deepEqual( Stem("lönndom"), "lönndom");});
test("lönnligaste -> lönn", function() {deepEqual( Stem("lönnligaste"), "lönn");});
test("lönnlåda -> lönnlåd", function() {deepEqual( Stem("lönnlåda"), "lönnlåd");});
test("lönnlådan -> lönnlådan", function() {deepEqual( Stem("lönnlådan"), "lönnlådan");});
test("lönte -> lönt", function() {deepEqual( Stem("lönte"), "lönt");});
test("löpa -> löp", function() {deepEqual( Stem("löpa"), "löp");});
test("löparen -> löp", function() {deepEqual( Stem("löparen"), "löp");});
test("löpeldsgirland -> löpeldsgirland", function() {deepEqual( Stem("löpeldsgirland"), "löpeldsgirland");});
test("löper -> löp", function() {deepEqual( Stem("löper"), "löp");});
test("löpt -> löpt", function() {deepEqual( Stem("löpt"), "löpt");});
test("löpte -> löpt", function() {deepEqual( Stem("löpte"), "löpt");});
test("lördag -> lördag", function() {deepEqual( Stem("lördag"), "lördag");});
test("lördagen -> lördag", function() {deepEqual( Stem("lördagen"), "lördag");});
test("lördagsafton -> lördagsafton", function() {deepEqual( Stem("lördagsafton"), "lördagsafton");});
test("lördagsaftonens -> lördagsafton", function() {deepEqual( Stem("lördagsaftonens"), "lördagsafton");});
test("lördagsaftonstonfall -> lördagsaftonstonfall", function() {deepEqual( Stem("lördagsaftonstonfall"), "lördagsaftonstonfall");});
test("lördagskväll -> lördagskväll", function() {deepEqual( Stem("lördagskväll"), "lördagskväll");});
test("lördagskvällarna -> lördagskväll", function() {deepEqual( Stem("lördagskvällarna"), "lördagskväll");});
test("lös -> lös", function() {deepEqual( Stem("lös"), "lös");});
test("lösa -> lös", function() {deepEqual( Stem("lösa"), "lös");});
test("lösaktiga -> lösakt", function() {deepEqual( Stem("lösaktiga"), "lösakt");});
test("lösas -> lös", function() {deepEqual( Stem("lösas"), "lös");});
test("lösegendom -> lösegendom", function() {deepEqual( Stem("lösegendom"), "lösegendom");});
test("lösen -> lös", function() {deepEqual( Stem("lösen"), "lös");});
test("lösens -> lös", function() {deepEqual( Stem("lösens"), "lös");});
test("lösensord -> lösensord", function() {deepEqual( Stem("lösensord"), "lösensord");});
test("löser -> lös", function() {deepEqual( Stem("löser"), "lös");});
test("lösgjorde -> lösgjord", function() {deepEqual( Stem("lösgjorde"), "lösgjord");});
test("lösning -> lösning", function() {deepEqual( Stem("lösning"), "lösning");});
test("lösningar -> lösning", function() {deepEqual( Stem("lösningar"), "lösning");});
test("lösningen -> lösning", function() {deepEqual( Stem("lösningen"), "lösning");});
test("lösrycka -> lösryck", function() {deepEqual( Stem("lösrycka"), "lösryck");});
test("lösryckt -> lösryck", function() {deepEqual( Stem("lösryckt"), "lösryck");});
test("lösryckta -> lösryck", function() {deepEqual( Stem("lösryckta"), "lösryck");});
test("löst -> löst", function() {deepEqual( Stem("löst"), "löst");});
test("löste -> löst", function() {deepEqual( Stem("löste"), "löst");});
test("lösöreboet -> lösöreboet", function() {deepEqual( Stem("lösöreboet"), "lösöreboet");});
test("lötsligt -> löts", function() {deepEqual( Stem("lötsligt"), "löts");});
test("löv -> löv", function() {deepEqual( Stem("löv"), "löv");});
test("lövat -> löv", function() {deepEqual( Stem("lövat"), "löv");});
test("lövdungen -> lövdung", function() {deepEqual( Stem("lövdungen"), "lövdung");});
test("löven -> löv", function() {deepEqual( Stem("löven"), "löv");});
test("lövens -> löv", function() {deepEqual( Stem("lövens"), "löv");});
test("lövmassor -> lövmass", function() {deepEqual( Stem("lövmassor"), "lövmass");});
test("lövruskor -> lövrusk", function() {deepEqual( Stem("lövruskor"), "lövrusk");});
test("lövskog -> lövskog", function() {deepEqual( Stem("lövskog"), "lövskog");});
test("lövskogen -> lövskog", function() {deepEqual( Stem("lövskogen"), "lövskog");});
test("lövsprångsdova -> lövsprångsdov", function() {deepEqual( Stem("lövsprångsdova"), "lövsprångsdov");});
test("lövverk -> lövverk", function() {deepEqual( Stem("lövverk"), "lövverk");});
test("lövverket -> lövverket", function() {deepEqual( Stem("lövverket"), "lövverket");});
test("löwenström -> löwenström", function() {deepEqual( Stem("löwenström"), "löwenström");});
test("löwenströms -> löwenström", function() {deepEqual( Stem("löwenströms"), "löwenström");});
test("m -> m", function() {deepEqual( Stem("m"), "m");});
test("ma -> ma", function() {deepEqual( Stem("ma"), "ma");});
test("mac -> mac", function() {deepEqual( Stem("mac"), "mac");});
test("macson -> macson", function() {deepEqual( Stem("macson"), "macson");});
test("madame -> madam", function() {deepEqual( Stem("madame"), "madam");});
test("madamens -> madam", function() {deepEqual( Stem("madamens"), "madam");});
test("madamerna -> madam", function() {deepEqual( Stem("madamerna"), "madam");});
test("madde -> madd", function() {deepEqual( Stem("madde"), "madd");});
test("madeirabuteljen -> madeirabutelj", function() {deepEqual( Stem("madeirabuteljen"), "madeirabutelj");});
test("madeleine -> madelein", function() {deepEqual( Stem("madeleine"), "madelein");});
test("madeleines -> madelein", function() {deepEqual( Stem("madeleines"), "madelein");});
test("mademoiselle -> mademoisell", function() {deepEqual( Stem("mademoiselle"), "mademoisell");});
test("maderia -> maderi", function() {deepEqual( Stem("maderia"), "maderi");});
test("madonna -> madon", function() {deepEqual( Stem("madonna"), "madon");});
test("madonnaliljan -> madonnaliljan", function() {deepEqual( Stem("madonnaliljan"), "madonnaliljan");});
test("madonnan -> madonnan", function() {deepEqual( Stem("madonnan"), "madonnan");});
test("madonnor -> madon", function() {deepEqual( Stem("madonnor"), "madon");});
test("madras -> madr", function() {deepEqual( Stem("madras"), "madr");});
test("magar -> mag", function() {deepEqual( Stem("magar"), "mag");});
test("magasin -> magasin", function() {deepEqual( Stem("magasin"), "magasin");});
test("magasinet -> magasinet", function() {deepEqual( Stem("magasinet"), "magasinet");});
test("magda -> magd", function() {deepEqual( Stem("magda"), "magd");});
test("magdalena -> magdalen", function() {deepEqual( Stem("magdalena"), "magdalen");});
test("magdas -> magd", function() {deepEqual( Stem("magdas"), "magd");});
test("mage -> mag", function() {deepEqual( Stem("mage"), "mag");});
test("magen -> mag", function() {deepEqual( Stem("magen"), "mag");});
test("mager -> mag", function() {deepEqual( Stem("mager"), "mag");});
test("magert -> magert", function() {deepEqual( Stem("magert"), "magert");});
test("magister -> magist", function() {deepEqual( Stem("magister"), "magist");});
test("magistern -> magist", function() {deepEqual( Stem("magistern"), "magist");});
test("magisterns -> magist", function() {deepEqual( Stem("magisterns"), "magist");});
test("magnet -> magnet", function() {deepEqual( Stem("magnet"), "magnet");});
test("magnetisktinfernaliskt -> magnetisktinfernalisk", function() {deepEqual( Stem("magnetisktinfernaliskt"), "magnetisktinfernalisk");});
test("magnifika -> magnifik", function() {deepEqual( Stem("magnifika"), "magnifik");});
test("magnifikt -> magnifik", function() {deepEqual( Stem("magnifikt"), "magnifik");});
test("magra -> magr", function() {deepEqual( Stem("magra"), "magr");});
test("magrare -> magr", function() {deepEqual( Stem("magrare"), "magr");});
test("magrat -> magr", function() {deepEqual( Stem("magrat"), "magr");});
test("magt -> magt", function() {deepEqual( Stem("magt"), "magt");});
test("magten -> magt", function() {deepEqual( Stem("magten"), "magt");});
test("magtpåliggande -> magtpåligg", function() {deepEqual( Stem("magtpåliggande"), "magtpåligg");});
test("mahogny -> mahogny", function() {deepEqual( Stem("mahogny"), "mahogny");});
test("mahognysekretären -> mahognysekretär", function() {deepEqual( Stem("mahognysekretären"), "mahognysekretär");});
test("mahognyspelbordet -> mahognyspelbordet", function() {deepEqual( Stem("mahognyspelbordet"), "mahognyspelbordet");});
test("mahognystolar -> mahognystol", function() {deepEqual( Stem("mahognystolar"), "mahognystol");});
test("mahända -> mahänd", function() {deepEqual( Stem("mahända"), "mahänd");});
test("maintenon -> maintenon", function() {deepEqual( Stem("maintenon"), "maintenon");});
test("maj -> maj", function() {deepEqual( Stem("maj"), "maj");});
test("majestät -> majestät", function() {deepEqual( Stem("majestät"), "majestät");});
test("majestätet -> majestätet", function() {deepEqual( Stem("majestätet"), "majestätet");});
test("majestäts -> majestät", function() {deepEqual( Stem("majestäts"), "majestät");});
test("majrock -> majrock", function() {deepEqual( Stem("majrock"), "majrock");});
test("majsen -> majs", function() {deepEqual( Stem("majsen"), "majs");});
test("majstänger -> majstäng", function() {deepEqual( Stem("majstänger"), "majstäng");});
test("majstången -> majstång", function() {deepEqual( Stem("majstången"), "majstång");});
test("mak -> mak", function() {deepEqual( Stem("mak"), "mak");});
test("maka -> mak", function() {deepEqual( Stem("maka"), "mak");});
test("makade -> mak", function() {deepEqual( Stem("makade"), "mak");});
test("makan -> makan", function() {deepEqual( Stem("makan"), "makan");});
test("makarna -> mak", function() {deepEqual( Stem("makarna"), "mak");});
test("makas -> mak", function() {deepEqual( Stem("makas"), "mak");});
test("make -> mak", function() {deepEqual( Stem("make"), "mak");});
test("maken -> mak", function() {deepEqual( Stem("maken"), "mak");});
test("makens -> mak", function() {deepEqual( Stem("makens"), "mak");});
test("makes -> mak", function() {deepEqual( Stem("makes"), "mak");});
test("makligt -> mak", function() {deepEqual( Stem("makligt"), "mak");});
test("makt -> makt", function() {deepEqual( Stem("makt"), "makt");});
test("maktar -> makt", function() {deepEqual( Stem("maktar"), "makt");});
test("makten -> makt", function() {deepEqual( Stem("makten"), "makt");});
test("makter -> makt", function() {deepEqual( Stem("makter"), "makt");});
test("maktlös -> maktlös", function() {deepEqual( Stem("maktlös"), "maktlös");});
test("maktlösa -> maktlös", function() {deepEqual( Stem("maktlösa"), "maktlös");});
test("maktlöshet -> maktlös", function() {deepEqual( Stem("maktlöshet"), "maktlös");});
test("maktpålig -> maktpå", function() {deepEqual( Stem("maktpålig"), "maktpå");});
test("maktpåliggande -> maktpåligg", function() {deepEqual( Stem("maktpåliggande"), "maktpåligg");});
test("mal -> mal", function() {deepEqual( Stem("mal"), "mal");});
test("mala -> mal", function() {deepEqual( Stem("mala"), "mal");});
test("malat -> mal", function() {deepEqual( Stem("malat"), "mal");});
test("malda -> mald", function() {deepEqual( Stem("malda"), "mald");});
test("malde -> mald", function() {deepEqual( Stem("malde"), "mald");});
test("malen -> mal", function() {deepEqual( Stem("malen"), "mal");});
test("malena -> malen", function() {deepEqual( Stem("malena"), "malen");});
test("malla -> mall", function() {deepEqual( Stem("malla"), "mall");});
test("mallas -> mall", function() {deepEqual( Stem("mallas"), "mall");});
test("malm -> malm", function() {deepEqual( Stem("malm"), "malm");});
test("malms -> malm", function() {deepEqual( Stem("malms"), "malm");});
test("malmskillnadsgatan -> malmskillnadsgatan", function() {deepEqual( Stem("malmskillnadsgatan"), "malmskillnadsgatan");});
test("malmtorgsgatan -> malmtorgsgatan", function() {deepEqual( Stem("malmtorgsgatan"), "malmtorgsgatan");});
test("maläten -> malät", function() {deepEqual( Stem("maläten"), "malät");});
test("malätet -> malätet", function() {deepEqual( Stem("malätet"), "malätet");});
test("mamma -> mamm", function() {deepEqual( Stem("mamma"), "mamm");});
test("mammas -> mamm", function() {deepEqual( Stem("mammas"), "mamm");});
test("mammor -> mamm", function() {deepEqual( Stem("mammor"), "mamm");});
test("mamsell -> mamsell", function() {deepEqual( Stem("mamsell"), "mamsell");});
test("mamsellerna -> mamsell", function() {deepEqual( Stem("mamsellerna"), "mamsell");});
test("mamsells -> mamsell", function() {deepEqual( Stem("mamsells"), "mamsell");});
test("mamsen -> mams", function() {deepEqual( Stem("mamsen"), "mams");});
test("man -> man", function() {deepEqual( Stem("man"), "man");});
test("manade -> man", function() {deepEqual( Stem("manade"), "man");});
test("manader -> manad", function() {deepEqual( Stem("manader"), "manad");});
test("manande -> man", function() {deepEqual( Stem("manande"), "man");});
test("manat -> man", function() {deepEqual( Stem("manat"), "man");});
test("mandarin -> mandarin", function() {deepEqual( Stem("mandarin"), "mandarin");});
test("mande -> mand", function() {deepEqual( Stem("mande"), "mand");});
test("mandelblommor -> mandelblomm", function() {deepEqual( Stem("mandelblommor"), "mandelblomm");});
test("manderskiöld -> manderskiöld", function() {deepEqual( Stem("manderskiöld"), "manderskiöld");});
test("manderström -> manderström", function() {deepEqual( Stem("manderström"), "manderström");});
test("maner -> man", function() {deepEqual( Stem("maner"), "man");});
test("maneret -> maneret", function() {deepEqual( Stem("maneret"), "maneret");});
test("manga -> mang", function() {deepEqual( Stem("manga"), "mang");});
test("mangfaldiga -> mangfald", function() {deepEqual( Stem("mangfaldiga"), "mangfald");});
test("manhaftigt -> manhaft", function() {deepEqual( Stem("manhaftigt"), "manhaft");});
test("maningsord -> maningsord", function() {deepEqual( Stem("maningsord"), "maningsord");});
test("manlig -> man", function() {deepEqual( Stem("manlig"), "man");});
test("manliga -> man", function() {deepEqual( Stem("manliga"), "man");});
test("manligt -> man", function() {deepEqual( Stem("manligt"), "man");});
test("mannaålder -> mannaåld", function() {deepEqual( Stem("mannaålder"), "mannaåld");});
test("mannaålderns -> mannaåld", function() {deepEqual( Stem("mannaålderns"), "mannaåld");});
test("mannaåren -> mannaår", function() {deepEqual( Stem("mannaåren"), "mannaår");});
test("mannen -> mann", function() {deepEqual( Stem("mannen"), "mann");});
test("mannens -> mann", function() {deepEqual( Stem("mannens"), "mann");});
test("manniska -> mannisk", function() {deepEqual( Stem("manniska"), "mannisk");});
test("manniskorna -> mannisk", function() {deepEqual( Stem("manniskorna"), "mannisk");});
test("mans -> man", function() {deepEqual( Stem("mans"), "man");});
test("manschetter -> manschet", function() {deepEqual( Stem("manschetter"), "manschet");});
test("manshög -> manshög", function() {deepEqual( Stem("manshög"), "manshög");});
test("manskor -> mansk", function() {deepEqual( Stem("manskor"), "mansk");});
test("mansperson -> mansperson", function() {deepEqual( Stem("mansperson"), "mansperson");});
test("manssidan -> manssidan", function() {deepEqual( Stem("manssidan"), "manssidan");});
test("mantel -> mantel", function() {deepEqual( Stem("mantel"), "mantel");});
test("mantlar -> mantl", function() {deepEqual( Stem("mantlar"), "mantl");});
test("manuskriptet -> manuskriptet", function() {deepEqual( Stem("manuskriptet"), "manuskriptet");});
test("manzanilla -> manzanill", function() {deepEqual( Stem("manzanilla"), "manzanill");});
test("manöver -> manöv", function() {deepEqual( Stem("manöver"), "manöv");});
test("manövrerade -> manövrer", function() {deepEqual( Stem("manövrerade"), "manövrer");});
test("mar -> mar", function() {deepEqual( Stem("mar"), "mar");});
test("mara -> mar", function() {deepEqual( Stem("mara"), "mar");});
test("maran -> maran", function() {deepEqual( Stem("maran"), "maran");});
test("mardröm -> mardröm", function() {deepEqual( Stem("mardröm"), "mardröm");});
test("maren -> mar", function() {deepEqual( Stem("maren"), "mar");});
test("margit -> margit", function() {deepEqual( Stem("margit"), "margit");});
test("margits -> margit", function() {deepEqual( Stem("margits"), "margit");});
test("margot -> margot", function() {deepEqual( Stem("margot"), "margot");});
test("maria -> mari", function() {deepEqual( Stem("maria"), "mari");});
test("marias -> mari", function() {deepEqual( Stem("marias"), "mari");});
test("marie -> mari", function() {deepEqual( Stem("marie"), "mari");});
test("mariebo -> mariebo", function() {deepEqual( Stem("mariebo"), "mariebo");});
test("mariestad -> mariest", function() {deepEqual( Stem("mariestad"), "mariest");});
test("mariga -> mar", function() {deepEqual( Stem("mariga"), "mar");});
test("mark -> mark", function() {deepEqual( Stem("mark"), "mark");});
test("markeh -> markeh", function() {deepEqual( Stem("markeh"), "markeh");});
test("markel -> markel", function() {deepEqual( Stem("markel"), "markel");});
test("markels -> markel", function() {deepEqual( Stem("markels"), "markel");});
test("marken -> mark", function() {deepEqual( Stem("marken"), "mark");});
test("markena -> marken", function() {deepEqual( Stem("markena"), "marken");});
test("markens -> mark", function() {deepEqual( Stem("markens"), "mark");});
test("markerade -> marker", function() {deepEqual( Stem("markerade"), "marker");});
test("markerat -> marker", function() {deepEqual( Stem("markerat"), "marker");});
test("markerna -> mark", function() {deepEqual( Stem("markerna"), "mark");});
test("markligare -> mark", function() {deepEqual( Stem("markligare"), "mark");});
test("marknad -> markn", function() {deepEqual( Stem("marknad"), "markn");});
test("marknaden -> marknad", function() {deepEqual( Stem("marknaden"), "marknad");});
test("marknadsvimlet -> marknadsvimlet", function() {deepEqual( Stem("marknadsvimlet"), "marknadsvimlet");});
test("markvärdigt -> markvärd", function() {deepEqual( Stem("markvärdigt"), "markvärd");});
test("marmor -> marm", function() {deepEqual( Stem("marmor"), "marm");});
test("marmorbordet -> marmorbordet", function() {deepEqual( Stem("marmorbordet"), "marmorbordet");});
test("marmorerade -> marmorer", function() {deepEqual( Stem("marmorerade"), "marmorer");});
test("marmorn -> marmorn", function() {deepEqual( Stem("marmorn"), "marmorn");});
test("marmorvit -> marmorvit", function() {deepEqual( Stem("marmorvit"), "marmorvit");});
test("marna -> marn", function() {deepEqual( Stem("marna"), "marn");});
test("marocko -> marocko", function() {deepEqual( Stem("marocko"), "marocko");});
test("marscbtakt -> marscbtak", function() {deepEqual( Stem("marscbtakt"), "marscbtak");});
test("marsch -> marsch", function() {deepEqual( Stem("marsch"), "marsch");});
test("marschen -> marsch", function() {deepEqual( Stem("marschen"), "marsch");});
test("marskalk -> marskalk", function() {deepEqual( Stem("marskalk"), "marskalk");});
test("marstrand -> marstrand", function() {deepEqual( Stem("marstrand"), "marstrand");});
test("marstrandsfärden -> marstrandsfärd", function() {deepEqual( Stem("marstrandsfärden"), "marstrandsfärd");});
test("marstrandsresan -> marstrandsresan", function() {deepEqual( Stem("marstrandsresan"), "marstrandsresan");});
test("marsvind -> marsvind", function() {deepEqual( Stem("marsvind"), "marsvind");});
test("marterade -> marter", function() {deepEqual( Stem("marterade"), "marter");});
test("martin -> martin", function() {deepEqual( Stem("martin"), "martin");});
test("martyr -> martyr", function() {deepEqual( Stem("martyr"), "martyr");});
test("mas -> mas", function() {deepEqual( Stem("mas"), "mas");});
test("masar -> mas", function() {deepEqual( Stem("masar"), "mas");});
test("mask -> mask", function() {deepEqual( Stem("mask"), "mask");});
test("masken -> mask", function() {deepEqual( Stem("masken"), "mask");});
test("masker -> mask", function() {deepEqual( Stem("masker"), "mask");});
test("maskerad -> masker", function() {deepEqual( Stem("maskerad"), "masker");});
test("maskerader -> maskerad", function() {deepEqual( Stem("maskerader"), "maskerad");});
test("maskeras -> masker", function() {deepEqual( Stem("maskeras"), "masker");});
test("maskers -> masker", function() {deepEqual( Stem("maskers"), "masker");});
test("maskiner -> maskin", function() {deepEqual( Stem("maskiner"), "maskin");});
test("maskineriet -> maskineriet", function() {deepEqual( Stem("maskineriet"), "maskineriet");});
test("maskinerna -> maskin", function() {deepEqual( Stem("maskinerna"), "maskin");});
test("maskor -> mask", function() {deepEqual( Stem("maskor"), "mask");});
test("mass -> mass", function() {deepEqual( Stem("mass"), "mass");});
test("massa -> mass", function() {deepEqual( Stem("massa"), "mass");});
test("massage -> massag", function() {deepEqual( Stem("massage"), "massag");});
test("masserade -> masser", function() {deepEqual( Stem("masserade"), "masser");});
test("massiva -> massiv", function() {deepEqual( Stem("massiva"), "massiv");});
test("massor -> mass", function() {deepEqual( Stem("massor"), "mass");});
test("massorna -> mass", function() {deepEqual( Stem("massorna"), "mass");});
test("mast -> mast", function() {deepEqual( Stem("mast"), "mast");});
test("maste -> mast", function() {deepEqual( Stem("maste"), "mast");});
test("masten -> mast", function() {deepEqual( Stem("masten"), "mast");});
test("master -> mast", function() {deepEqual( Stem("master"), "mast");});
test("masterna -> mast", function() {deepEqual( Stem("masterna"), "mast");});
test("mastodonter -> mastodont", function() {deepEqual( Stem("mastodonter"), "mastodont");});
test("masurbjörk -> masurbjörk", function() {deepEqual( Stem("masurbjörk"), "masurbjörk");});
test("mat -> mat", function() {deepEqual( Stem("mat"), "mat");});
test("matar -> mat", function() {deepEqual( Stem("matar"), "mat");});
test("matbit -> matbit", function() {deepEqual( Stem("matbit"), "matbit");});
test("matbordet -> matbordet", function() {deepEqual( Stem("matbordet"), "matbordet");});
test("matdagar -> matdag", function() {deepEqual( Stem("matdagar"), "matdag");});
test("matdagarna -> matdag", function() {deepEqual( Stem("matdagarna"), "matdag");});
test("matdags -> matdag", function() {deepEqual( Stem("matdags"), "matdag");});
test("matematiker -> matematik", function() {deepEqual( Stem("matematiker"), "matematik");});
test("matematikerns -> matematik", function() {deepEqual( Stem("matematikerns"), "matematik");});
test("matematikläraren -> matematiklär", function() {deepEqual( Stem("matematikläraren"), "matematiklär");});
test("matematiktimmarna -> matematiktimm", function() {deepEqual( Stem("matematiktimmarna"), "matematiktimm");});
test("maten -> mat", function() {deepEqual( Stem("maten"), "mat");});
test("material -> material", function() {deepEqual( Stem("material"), "material");});
test("materiella -> materiell", function() {deepEqual( Stem("materiella"), "materiell");});
test("matfebern -> matfeb", function() {deepEqual( Stem("matfebern"), "matfeb");});
test("matfriske -> matfrisk", function() {deepEqual( Stem("matfriske"), "matfrisk");});
test("mathämtaren -> mathämt", function() {deepEqual( Stem("mathämtaren"), "mathämt");});
test("matilda -> matild", function() {deepEqual( Stem("matilda"), "matild");});
test("matildas -> matild", function() {deepEqual( Stem("matildas"), "matild");});
test("matkorgar -> matkorg", function() {deepEqual( Stem("matkorgar"), "matkorg");});
test("matlagning -> matlagning", function() {deepEqual( Stem("matlagning"), "matlagning");});
test("matlust -> matlust", function() {deepEqual( Stem("matlust"), "matlust");});
test("matmodern -> matmod", function() {deepEqual( Stem("matmodern"), "matmod");});
test("matmor -> matm", function() {deepEqual( Stem("matmor"), "matm");});
test("matmors -> matmor", function() {deepEqual( Stem("matmors"), "matmor");});
test("matmödrars -> matmödrar", function() {deepEqual( Stem("matmödrars"), "matmödrar");});
test("matos -> mato", function() {deepEqual( Stem("matos"), "mato");});
test("matoset -> matoset", function() {deepEqual( Stem("matoset"), "matoset");});
test("matrona -> matron", function() {deepEqual( Stem("matrona"), "matron");});
test("matronan -> matronan", function() {deepEqual( Stem("matronan"), "matronan");});
test("matronor -> matron", function() {deepEqual( Stem("matronor"), "matron");});
test("matros -> matro", function() {deepEqual( Stem("matros"), "matro");});
test("matroser -> matros", function() {deepEqual( Stem("matroser"), "matros");});
test("mats -> mat", function() {deepEqual( Stem("mats"), "mat");});
test("matsal -> matsal", function() {deepEqual( Stem("matsal"), "matsal");});
test("matsaled -> matsaled", function() {deepEqual( Stem("matsaled"), "matsaled");});
test("matsalen -> matsal", function() {deepEqual( Stem("matsalen"), "matsal");});
test("matsalskypare -> matsalskyp", function() {deepEqual( Stem("matsalskypare"), "matsalskyp");});
test("matsedeln -> matsedeln", function() {deepEqual( Stem("matsedeln"), "matsedeln");});
test("matsmältningsprocessen -> matsmältningsprocess", function() {deepEqual( Stem("matsmältningsprocessen"), "matsmältningsprocess");});
test("matsäck -> matsäck", function() {deepEqual( Stem("matsäck"), "matsäck");});
test("matsäcken -> matsäck", function() {deepEqual( Stem("matsäcken"), "matsäck");});
test("matt -> matt", function() {deepEqual( Stem("matt"), "matt");});
test("matta -> matt", function() {deepEqual( Stem("matta"), "matt");});
test("mattad -> matt", function() {deepEqual( Stem("mattad"), "matt");});
test("mattan -> mattan", function() {deepEqual( Stem("mattan"), "mattan");});
test("mattare -> matt", function() {deepEqual( Stem("mattare"), "matt");});
test("mattas -> matt", function() {deepEqual( Stem("mattas"), "matt");});
test("matte -> matt", function() {deepEqual( Stem("matte"), "matt");});
test("mattfullt -> mattfull", function() {deepEqual( Stem("mattfullt"), "mattfull");});
test("mattighet -> matt", function() {deepEqual( Stem("mattighet"), "matt");});
test("mattimmen -> mattimm", function() {deepEqual( Stem("mattimmen"), "mattimm");});
test("mattinan -> mattinan", function() {deepEqual( Stem("mattinan"), "mattinan");});
test("matvaror -> matvar", function() {deepEqual( Stem("matvaror"), "matvar");});
test("maupassants -> maupassant", function() {deepEqual( Stem("maupassants"), "maupassant");});
test("mcd -> mcd", function() {deepEqual( Stem("mcd"), "mcd");});
test("mcdan -> mcdan", function() {deepEqual( Stem("mcdan"), "mcdan");});
test("mcn -> mcn", function() {deepEqual( Stem("mcn"), "mcn");});
test("mcnade -> mcnad", function() {deepEqual( Stem("mcnade"), "mcnad");});
test("mda -> mda", function() {deepEqual( Stem("mda"), "mda");});
test("me -> me", function() {deepEqual( Stem("me"), "me");});
test("med -> med", function() {deepEqual( Stem("med"), "med");});
test("medaljong -> medaljong", function() {deepEqual( Stem("medaljong"), "medaljong");});
test("medaljongen -> medaljong", function() {deepEqual( Stem("medaljongen"), "medaljong");});
test("medan -> medan", function() {deepEqual( Stem("medan"), "medan");});
test("medborgare -> medborg", function() {deepEqual( Stem("medborgare"), "medborg");});
test("medbroder -> medbrod", function() {deepEqual( Stem("medbroder"), "medbrod");});
test("medbrottslingen -> medbrottsling", function() {deepEqual( Stem("medbrottslingen"), "medbrottsling");});
test("meddela -> meddel", function() {deepEqual( Stem("meddela"), "meddel");});
test("meddelade -> meddel", function() {deepEqual( Stem("meddelade"), "meddel");});
test("meddelades -> meddel", function() {deepEqual( Stem("meddelades"), "meddel");});
test("meddelande -> meddel", function() {deepEqual( Stem("meddelande"), "meddel");});
test("meddelar -> meddel", function() {deepEqual( Stem("meddelar"), "meddel");});
test("meddelat -> meddel", function() {deepEqual( Stem("meddelat"), "meddel");});
test("medel -> medel", function() {deepEqual( Stem("medel"), "medel");});
test("medelbar -> medelb", function() {deepEqual( Stem("medelbar"), "medelb");});
test("medelklassfru -> medelklassfru", function() {deepEqual( Stem("medelklassfru"), "medelklassfru");});
test("medelmåttan -> medelmåttan", function() {deepEqual( Stem("medelmåttan"), "medelmåttan");});
test("medelmåttigt -> medelmått", function() {deepEqual( Stem("medelmåttigt"), "medelmått");});
test("medelproportionalen -> medelproportional", function() {deepEqual( Stem("medelproportionalen"), "medelproportional");});
test("medelväg -> medelväg", function() {deepEqual( Stem("medelväg"), "medelväg");});
test("medelvägen -> medelväg", function() {deepEqual( Stem("medelvägen"), "medelväg");});
test("medelålder -> medelåld", function() {deepEqual( Stem("medelålder"), "medelåld");});
test("medelålders -> medelålder", function() {deepEqual( Stem("medelålders"), "medelålder");});
test("meden -> med", function() {deepEqual( Stem("meden"), "med");});
test("medfog -> medfog", function() {deepEqual( Stem("medfog"), "medfog");});
test("medfödd -> medföd", function() {deepEqual( Stem("medfödd"), "medföd");});
test("medfödda -> medföd", function() {deepEqual( Stem("medfödda"), "medföd");});
test("medfölja -> medfölj", function() {deepEqual( Stem("medfölja"), "medfölj");});
test("medföljande -> medfölj", function() {deepEqual( Stem("medföljande"), "medfölj");});
test("medföljt -> medföljt", function() {deepEqual( Stem("medföljt"), "medföljt");});
test("medför -> medför", function() {deepEqual( Stem("medför"), "medför");});
test("medföra -> medför", function() {deepEqual( Stem("medföra"), "medför");});
test("medförde -> medförd", function() {deepEqual( Stem("medförde"), "medförd");});
test("medfört -> medfört", function() {deepEqual( Stem("medfört"), "medfört");});
test("medfött -> medföt", function() {deepEqual( Stem("medfött"), "medföt");});
test("medgaf -> medgaf", function() {deepEqual( Stem("medgaf"), "medgaf");});
test("medgav -> medgav", function() {deepEqual( Stem("medgav"), "medgav");});
test("medge -> medg", function() {deepEqual( Stem("medge"), "medg");});
test("medger -> medg", function() {deepEqual( Stem("medger"), "medg");});
test("medgifver -> medgifv", function() {deepEqual( Stem("medgifver"), "medgifv");});
test("medgifvit -> medgifvit", function() {deepEqual( Stem("medgifvit"), "medgifvit");});
test("medgiva -> medgiv", function() {deepEqual( Stem("medgiva"), "medgiv");});
test("medgives -> medgiv", function() {deepEqual( Stem("medgives"), "medgiv");});
test("medgåfvo -> medgåfvo", function() {deepEqual( Stem("medgåfvo"), "medgåfvo");});
test("medgången -> medgång", function() {deepEqual( Stem("medgången"), "medgång");});
test("medgörlig -> medgör", function() {deepEqual( Stem("medgörlig"), "medgör");});
test("medgörlighet -> medgör", function() {deepEqual( Stem("medgörlighet"), "medgör");});
test("medgörligt -> medgör", function() {deepEqual( Stem("medgörligt"), "medgör");});
test("medhava -> medhav", function() {deepEqual( Stem("medhava"), "medhav");});
test("medhjälpare -> medhjälp", function() {deepEqual( Stem("medhjälpare"), "medhjälp");});
test("medicin -> medicin", function() {deepEqual( Stem("medicin"), "medicin");});
test("medicine -> medicin", function() {deepEqual( Stem("medicine"), "medicin");});
test("medicinerar -> mediciner", function() {deepEqual( Stem("medicinerar"), "mediciner");});
test("medicinsk -> medicinsk", function() {deepEqual( Stem("medicinsk"), "medicinsk");});
test("medikamentskåp -> medikamentskåp", function() {deepEqual( Stem("medikamentskåp"), "medikamentskåp");});
test("medkänsla -> medkänsl", function() {deepEqual( Stem("medkänsla"), "medkänsl");});
test("medkänslan -> medkänslan", function() {deepEqual( Stem("medkänslan"), "medkänslan");});
test("medlande -> medl", function() {deepEqual( Stem("medlande"), "medl");});
test("medlarekall -> medlarekall", function() {deepEqual( Stem("medlarekall"), "medlarekall");});
test("medlem -> medlem", function() {deepEqual( Stem("medlem"), "medlem");});
test("medlen -> medl", function() {deepEqual( Stem("medlen"), "medl");});
test("medlet -> medlet", function() {deepEqual( Stem("medlet"), "medlet");});
test("medlidande -> medlid", function() {deepEqual( Stem("medlidande"), "medlid");});
test("medlidsam -> medlidsam", function() {deepEqual( Stem("medlidsam"), "medlidsam");});
test("medlidsamt -> medlidsamt", function() {deepEqual( Stem("medlidsamt"), "medlidsamt");});
test("medmenniska -> medmennisk", function() {deepEqual( Stem("medmenniska"), "medmennisk");});
test("medmenniskor -> medmennisk", function() {deepEqual( Stem("medmenniskor"), "medmennisk");});
test("medryckt -> medryck", function() {deepEqual( Stem("medryckt"), "medryck");});
test("medsystrar -> medsystr", function() {deepEqual( Stem("medsystrar"), "medsystr");});
test("medtaga -> medtag", function() {deepEqual( Stem("medtaga"), "medtag");});
test("medtagande -> medtag", function() {deepEqual( Stem("medtagande"), "medtag");});
test("medtagit -> medtagit", function() {deepEqual( Stem("medtagit"), "medtagit");});
test("medtog -> medtog", function() {deepEqual( Stem("medtog"), "medtog");});
test("medtoge -> medtog", function() {deepEqual( Stem("medtoge"), "medtog");});
test("medverkan -> medverkan", function() {deepEqual( Stem("medverkan"), "medverkan");});
test("medvetande -> medvet", function() {deepEqual( Stem("medvetande"), "medvet");});
test("medvetandet -> medvet", function() {deepEqual( Stem("medvetandet"), "medvet");});
test("medveten -> medvet", function() {deepEqual( Stem("medveten"), "medvet");});
test("medvetenhet -> medveten", function() {deepEqual( Stem("medvetenhet"), "medveten");});
test("medvetet -> medvetet", function() {deepEqual( Stem("medvetet"), "medvetet");});
test("medvetna -> medvetn", function() {deepEqual( Stem("medvetna"), "medvetn");});
test("medvetslös -> medvetslös", function() {deepEqual( Stem("medvetslös"), "medvetslös");});
test("medvetslöst -> medvetslös", function() {deepEqual( Stem("medvetslöst"), "medvetslös");});
test("medömkan -> medömkan", function() {deepEqual( Stem("medömkan"), "medömkan");});
test("mejade -> mej", function() {deepEqual( Stem("mejade"), "mej");});
test("mejramsknipporna -> mejramsknipp", function() {deepEqual( Stem("mejramsknipporna"), "mejramsknipp");});
test("mejsel -> mejsel", function() {deepEqual( Stem("mejsel"), "mejsel");});
test("mekanik -> mekanik", function() {deepEqual( Stem("mekanik"), "mekanik");});
test("mekanisk -> mekanisk", function() {deepEqual( Stem("mekanisk"), "mekanisk");});
test("mekaniskt -> mekanisk", function() {deepEqual( Stem("mekaniskt"), "mekanisk");});
test("mekanismen -> mekanism", function() {deepEqual( Stem("mekanismen"), "mekanism");});
test("mel -> mel", function() {deepEqual( Stem("mel"), "mel");});
test("melan -> melan", function() {deepEqual( Stem("melan"), "melan");});
test("melankoli -> melankoli", function() {deepEqual( Stem("melankoli"), "melankoli");});
test("melankolisk -> melankolisk", function() {deepEqual( Stem("melankolisk"), "melankolisk");});
test("melankoliska -> melankolisk", function() {deepEqual( Stem("melankoliska"), "melankolisk");});
test("melankoliskt -> melankolisk", function() {deepEqual( Stem("melankoliskt"), "melankolisk");});
test("mellan -> mellan", function() {deepEqual( Stem("mellan"), "mellan");});
test("mellanlägg -> mellanlägg", function() {deepEqual( Stem("mellanlägg"), "mellanlägg");});
test("mellanländskt -> mellanländsk", function() {deepEqual( Stem("mellanländskt"), "mellanländsk");});
test("mellanrum -> mellanrum", function() {deepEqual( Stem("mellanrum"), "mellanrum");});
test("mellanrummet -> mellanrummet", function() {deepEqual( Stem("mellanrummet"), "mellanrummet");});
test("mellantid -> mellantid", function() {deepEqual( Stem("mellantid"), "mellantid");});
test("mellantiden -> mellantid", function() {deepEqual( Stem("mellantiden"), "mellantid");});
test("mellantider -> mellantid", function() {deepEqual( Stem("mellantider"), "mellantid");});
test("mellberg -> mellberg", function() {deepEqual( Stem("mellberg"), "mellberg");});
test("meller -> mell", function() {deepEqual( Stem("meller"), "mell");});
test("mellersta -> mellerst", function() {deepEqual( Stem("mellersta"), "mellerst");});
test("mellin -> mellin", function() {deepEqual( Stem("mellin"), "mellin");});
test("mellinska -> mellinsk", function() {deepEqual( Stem("mellinska"), "mellinsk");});
test("melodi -> melodi", function() {deepEqual( Stem("melodi"), "melodi");});
test("melodien -> melodi", function() {deepEqual( Stem("melodien"), "melodi");});
test("melodier -> melodi", function() {deepEqual( Stem("melodier"), "melodi");});
test("melodin -> melodin", function() {deepEqual( Stem("melodin"), "melodin");});
test("melodiskt -> melodisk", function() {deepEqual( Stem("melodiskt"), "melodisk");});
test("melssängen -> melssäng", function() {deepEqual( Stem("melssängen"), "melssäng");});
test("melusina -> melusin", function() {deepEqual( Stem("melusina"), "melusin");});
test("men -> men", function() {deepEqual( Stem("men"), "men");});
test("mena -> men", function() {deepEqual( Stem("mena"), "men");});
test("menad -> men", function() {deepEqual( Stem("menad"), "men");});
test("menade -> men", function() {deepEqual( Stem("menade"), "men");});
test("menades -> men", function() {deepEqual( Stem("menades"), "men");});
test("menadt -> menad", function() {deepEqual( Stem("menadt"), "menad");});
test("menageri -> menageri", function() {deepEqual( Stem("menageri"), "menageri");});
test("menande -> men", function() {deepEqual( Stem("menande"), "men");});
test("menar -> men", function() {deepEqual( Stem("menar"), "men");});
test("menat -> men", function() {deepEqual( Stem("menat"), "men");});
test("menbarasvagtmotståndgjordc -> menbarasvagtmotståndgjordc", function() {deepEqual( Stem("menbarasvagtmotståndgjordc"), "menbarasvagtmotståndgjordc");});
test("menera -> mener", function() {deepEqual( Stem("menera"), "mener");});
test("menighet -> men", function() {deepEqual( Stem("menighet"), "men");});
test("menigheten -> men", function() {deepEqual( Stem("menigheten"), "men");});
test("mening -> mening", function() {deepEqual( Stem("mening"), "mening");});
test("meningar -> mening", function() {deepEqual( Stem("meningar"), "mening");});
test("meningarna -> mening", function() {deepEqual( Stem("meningarna"), "mening");});
test("meningen -> mening", function() {deepEqual( Stem("meningen"), "mening");});
test("meningslösa -> meningslös", function() {deepEqual( Stem("meningslösa"), "meningslös");});
test("meningslöst -> meningslös", function() {deepEqual( Stem("meningslöst"), "meningslös");});
test("meningsutbytet -> meningsutbytet", function() {deepEqual( Stem("meningsutbytet"), "meningsutbytet");});
test("menliga -> men", function() {deepEqual( Stem("menliga"), "men");});
test("menlöshet -> menlös", function() {deepEqual( Stem("menlöshet"), "menlös");});
test("menlöst -> menlös", function() {deepEqual( Stem("menlöst"), "menlös");});
test("menniska -> mennisk", function() {deepEqual( Stem("menniska"), "mennisk");});
test("menniskan -> menniskan", function() {deepEqual( Stem("menniskan"), "menniskan");});
test("menniskas -> mennisk", function() {deepEqual( Stem("menniskas"), "mennisk");});
test("menniskoben -> menniskob", function() {deepEqual( Stem("menniskoben"), "menniskob");});
test("menniskohjertat -> menniskohjert", function() {deepEqual( Stem("menniskohjertat"), "menniskohjert");});
test("menniskolifs -> menniskolif", function() {deepEqual( Stem("menniskolifs"), "menniskolif");});
test("menniskor -> mennisk", function() {deepEqual( Stem("menniskor"), "mennisk");});
test("menniskorna -> mennisk", function() {deepEqual( Stem("menniskorna"), "mennisk");});
test("menniskornas -> mennisk", function() {deepEqual( Stem("menniskornas"), "mennisk");});
test("menniskors -> menniskor", function() {deepEqual( Stem("menniskors"), "menniskor");});
test("menniskosnillets -> menniskosnillet", function() {deepEqual( Stem("menniskosnillets"), "menniskosnillet");});
test("menniskostoftets -> menniskostoftet", function() {deepEqual( Stem("menniskostoftets"), "menniskostoftet");});
test("menniskovänliga -> menniskovän", function() {deepEqual( Stem("menniskovänliga"), "menniskovän");});
test("menniskoälskande -> menniskoälsk", function() {deepEqual( Stem("menniskoälskande"), "menniskoälsk");});
test("mensklig -> mensk", function() {deepEqual( Stem("mensklig"), "mensk");});
test("menskliga -> mensk", function() {deepEqual( Stem("menskliga"), "mensk");});
test("mensklighetens -> mensk", function() {deepEqual( Stem("mensklighetens"), "mensk");});
test("menskor -> mensk", function() {deepEqual( Stem("menskor"), "mensk");});
test("ment -> ment", function() {deepEqual( Stem("ment"), "ment");});
test("mente -> ment", function() {deepEqual( Stem("mente"), "ment");});
test("mentors -> mentor", function() {deepEqual( Stem("mentors"), "mentor");});
test("mentsbestridanden -> mentsbestrid", function() {deepEqual( Stem("mentsbestridanden"), "mentsbestrid");});
test("menyn -> menyn", function() {deepEqual( Stem("menyn"), "menyn");});
test("mer -> mer", function() {deepEqual( Stem("mer"), "mer");});
test("mera -> mer", function() {deepEqual( Stem("mera"), "mer");});
test("merendels -> merendel", function() {deepEqual( Stem("merendels"), "merendel");});
test("meritförteckning -> meritförteckning", function() {deepEqual( Stem("meritförteckning"), "meritförteckning");});
test("meritlistan -> meritlistan", function() {deepEqual( Stem("meritlistan"), "meritlistan");});
test("mertens -> mert", function() {deepEqual( Stem("mertens"), "mert");});
test("mes -> mes", function() {deepEqual( Stem("mes"), "mes");});
test("mest -> mest", function() {deepEqual( Stem("mest"), "mest");});
test("mesta -> mest", function() {deepEqual( Stem("mesta"), "mest");});
test("met -> met", function() {deepEqual( Stem("met"), "met");});
test("meta -> met", function() {deepEqual( Stem("meta"), "met");});
test("metade -> met", function() {deepEqual( Stem("metade"), "met");});
test("metall -> metall", function() {deepEqual( Stem("metall"), "metall");});
test("metallens -> metall", function() {deepEqual( Stem("metallens"), "metall");});
test("metallisk -> metallisk", function() {deepEqual( Stem("metallisk"), "metallisk");});
test("metallklangen -> metallklang", function() {deepEqual( Stem("metallklangen"), "metallklang");});
test("metar -> met", function() {deepEqual( Stem("metar"), "met");});
test("meter -> met", function() {deepEqual( Stem("meter"), "met");});
test("metoden -> metod", function() {deepEqual( Stem("metoden"), "metod");});
test("metref -> metref", function() {deepEqual( Stem("metref"), "metref");});
test("metrefvar -> metrefv", function() {deepEqual( Stem("metrefvar"), "metrefv");});
test("metshatt -> metshat", function() {deepEqual( Stem("metshatt"), "metshat");});
test("metslent -> metslent", function() {deepEqual( Stem("metslent"), "metslent");});
test("metspöet -> metspöet", function() {deepEqual( Stem("metspöet"), "metspöet");});
test("metspön -> metspön", function() {deepEqual( Stem("metspön"), "metspön");});
test("mevo -> mevo", function() {deepEqual( Stem("mevo"), "mevo");});
test("mi -> mi", function() {deepEqual( Stem("mi"), "mi");});
test("middag -> middag", function() {deepEqual( Stem("middag"), "middag");});
test("middagar -> middag", function() {deepEqual( Stem("middagar"), "middag");});
test("middagarna -> middag", function() {deepEqual( Stem("middagarna"), "middag");});
test("middagen -> middag", function() {deepEqual( Stem("middagen"), "middag");});
test("middags -> middag", function() {deepEqual( Stem("middags"), "middag");});
test("middagsbjudning -> middagsbjudning", function() {deepEqual( Stem("middagsbjudning"), "middagsbjudning");});
test("middagsbordet -> middagsbordet", function() {deepEqual( Stem("middagsbordet"), "middagsbordet");});
test("middagscigarr -> middagscigarr", function() {deepEqual( Stem("middagscigarr"), "middagscigarr");});
test("middagslur -> middagslur", function() {deepEqual( Stem("middagslur"), "middagslur");});
test("middagsluren -> middagslur", function() {deepEqual( Stem("middagsluren"), "middagslur");});
test("middagsmåltid -> middagsmåltid", function() {deepEqual( Stem("middagsmåltid"), "middagsmåltid");});
test("middagsskymningen -> middagsskymning", function() {deepEqual( Stem("middagsskymningen"), "middagsskymning");});
test("middagssällskap -> middagssällskap", function() {deepEqual( Stem("middagssällskap"), "middagssällskap");});
test("middagssömn -> middagssömn", function() {deepEqual( Stem("middagssömn"), "middagssömn");});
test("middagstid -> middagstid", function() {deepEqual( Stem("middagstid"), "middagstid");});
test("middagstiden -> middagstid", function() {deepEqual( Stem("middagstiden"), "middagstid");});
test("middagstimmen -> middagstimm", function() {deepEqual( Stem("middagstimmen"), "middagstimm");});
test("middagstimmens -> middagstimm", function() {deepEqual( Stem("middagstimmens"), "middagstimm");});
test("midja -> midj", function() {deepEqual( Stem("midja"), "midj");});
test("midjan -> midjan", function() {deepEqual( Stem("midjan"), "midjan");});
test("midjorna -> midj", function() {deepEqual( Stem("midjorna"), "midj");});
test("midnatt -> midnat", function() {deepEqual( Stem("midnatt"), "midnat");});
test("midnattsmässa -> midnattsmäss", function() {deepEqual( Stem("midnattsmässa"), "midnattsmäss");});
test("midnattssolens -> midnattssol", function() {deepEqual( Stem("midnattssolens"), "midnattssol");});
test("midsommar -> midsomm", function() {deepEqual( Stem("midsommar"), "midsomm");});
test("midsommarblomstret -> midsommarblomstret", function() {deepEqual( Stem("midsommarblomstret"), "midsommarblomstret");});
test("midsommarbål -> midsommarbål", function() {deepEqual( Stem("midsommarbål"), "midsommarbål");});
test("midsommarhelgen -> midsommarhelg", function() {deepEqual( Stem("midsommarhelgen"), "midsommarhelg");});
test("midsommarlek -> midsommarlek", function() {deepEqual( Stem("midsommarlek"), "midsommarlek");});
test("midsommarnatt -> midsommarnat", function() {deepEqual( Stem("midsommarnatt"), "midsommarnat");});
test("midsommarnattens -> midsommarnat", function() {deepEqual( Stem("midsommarnattens"), "midsommarnat");});
test("midsommarstång -> midsommarstång", function() {deepEqual( Stem("midsommarstång"), "midsommarstång");});
test("midsommartiden -> midsommartid", function() {deepEqual( Stem("midsommartiden"), "midsommartid");});
test("midt -> midt", function() {deepEqual( Stem("midt"), "midt");});
test("midtemot -> midtemot", function() {deepEqual( Stem("midtemot"), "midtemot");});
test("midten -> midt", function() {deepEqual( Stem("midten"), "midt");});
test("mig -> mig", function() {deepEqual( Stem("mig"), "mig");});
test("miga -> mig", function() {deepEqual( Stem("miga"), "mig");});
test("migl -> migl", function() {deepEqual( Stem("migl"), "migl");});
test("mikael -> mikael", function() {deepEqual( Stem("mikael"), "mikael");});
test("mil -> mil", function() {deepEqual( Stem("mil"), "mil");});
test("mild -> mild", function() {deepEqual( Stem("mild"), "mild");});
test("milda -> mild", function() {deepEqual( Stem("milda"), "mild");});
test("mildare -> mild", function() {deepEqual( Stem("mildare"), "mild");});
test("mildaste -> mild", function() {deepEqual( Stem("mildaste"), "mild");});
test("milde -> mild", function() {deepEqual( Stem("milde"), "mild");});
test("mildhet -> mild", function() {deepEqual( Stem("mildhet"), "mild");});
test("mildrade -> mildr", function() {deepEqual( Stem("mildrade"), "mildr");});
test("mildrades -> mildr", function() {deepEqual( Stem("mildrades"), "mildr");});
test("mildt -> mild", function() {deepEqual( Stem("mildt"), "mild");});
test("milens -> mil", function() {deepEqual( Stem("milens"), "mil");});
test("militär -> militär", function() {deepEqual( Stem("militär"), "militär");});
test("militären -> militär", function() {deepEqual( Stem("militären"), "militär");});
test("militärer -> militär", function() {deepEqual( Stem("militärer"), "militär");});
test("militärerna -> militär", function() {deepEqual( Stem("militärerna"), "militär");});
test("miljardism -> miljardism", function() {deepEqual( Stem("miljardism"), "miljardism");});
test("miljö -> miljö", function() {deepEqual( Stem("miljö"), "miljö");});
test("miljön -> miljön", function() {deepEqual( Stem("miljön"), "miljön");});
test("million -> million", function() {deepEqual( Stem("million"), "million");});
test("millioner -> million", function() {deepEqual( Stem("millioner"), "million");});
test("millionstad -> millionst", function() {deepEqual( Stem("millionstad"), "millionst");});
test("milme -> milm", function() {deepEqual( Stem("milme"), "milm");});
test("mils -> mil", function() {deepEqual( Stem("mils"), "mil");});
test("milstolpe -> milstolp", function() {deepEqual( Stem("milstolpe"), "milstolp");});
test("milt -> milt", function() {deepEqual( Stem("milt"), "milt");});
test("mimik -> mimik", function() {deepEqual( Stem("mimik"), "mimik");});
test("min -> min", function() {deepEqual( Stem("min"), "min");});
test("mina -> min", function() {deepEqual( Stem("mina"), "min");});
test("minde -> mind", function() {deepEqual( Stem("minde"), "mind");});
test("minderåriga -> minderår", function() {deepEqual( Stem("minderåriga"), "minderår");});
test("mindes -> mind", function() {deepEqual( Stem("mindes"), "mind");});
test("mindre -> mindr", function() {deepEqual( Stem("mindre"), "mindr");});
test("minen -> min", function() {deepEqual( Stem("minen"), "min");});
test("miner -> min", function() {deepEqual( Stem("miner"), "min");});
test("miniatyr -> miniatyr", function() {deepEqual( Stem("miniatyr"), "miniatyr");});
test("miniatyrer -> miniatyr", function() {deepEqual( Stem("miniatyrer"), "miniatyr");});
test("minimala -> minimal", function() {deepEqual( Stem("minimala"), "minimal");});
test("minnas -> minn", function() {deepEqual( Stem("minnas"), "minn");});
test("minnc -> minnc", function() {deepEqual( Stem("minnc"), "minnc");});
test("minne -> minn", function() {deepEqual( Stem("minne"), "minn");});
test("minnelse -> minn", function() {deepEqual( Stem("minnelse"), "minn");});
test("minnen -> minn", function() {deepEqual( Stem("minnen"), "minn");});
test("minnens -> minn", function() {deepEqual( Stem("minnens"), "minn");});
test("minnes -> minn", function() {deepEqual( Stem("minnes"), "minn");});
test("minnesbeta -> minnesbet", function() {deepEqual( Stem("minnesbeta"), "minnesbet");});
test("minnesbetan -> minnesbetan", function() {deepEqual( Stem("minnesbetan"), "minnesbetan");});
test("minnesslö -> minnesslö", function() {deepEqual( Stem("minnesslö"), "minnesslö");});
test("minnet -> minnet", function() {deepEqual( Stem("minnet"), "minnet");});
test("minns -> minn", function() {deepEqual( Stem("minns"), "minn");});
test("minnsann -> minnsan", function() {deepEqual( Stem("minnsann"), "minnsan");});
test("mins -> min", function() {deepEqual( Stem("mins"), "min");});
test("minsann -> minsan", function() {deepEqual( Stem("minsann"), "minsan");});
test("minska -> minsk", function() {deepEqual( Stem("minska"), "minsk");});
test("minskades -> minsk", function() {deepEqual( Stem("minskades"), "minsk");});
test("minskar -> minsk", function() {deepEqual( Stem("minskar"), "minsk");});
test("minskning -> minskning", function() {deepEqual( Stem("minskning"), "minskning");});
test("minst -> minst", function() {deepEqual( Stem("minst"), "minst");});
test("minsta -> minst", function() {deepEqual( Stem("minsta"), "minst");});
test("minut -> minut", function() {deepEqual( Stem("minut"), "minut");});
test("minuten -> minut", function() {deepEqual( Stem("minuten"), "minut");});
test("minuter -> minut", function() {deepEqual( Stem("minuter"), "minut");});
test("minuterna -> minut", function() {deepEqual( Stem("minuterna"), "minut");});
test("minuters -> minuter", function() {deepEqual( Stem("minuters"), "minuter");});
test("miserablaste -> miserabl", function() {deepEqual( Stem("miserablaste"), "miserabl");});
test("miss -> miss", function() {deepEqual( Stem("miss"), "miss");});
test("missat -> miss", function() {deepEqual( Stem("missat"), "miss");});
test("missbelåten -> missbelåt", function() {deepEqual( Stem("missbelåten"), "missbelåt");});
test("missbildat -> missbild", function() {deepEqual( Stem("missbildat"), "missbild");});
test("missbilliga -> missbil", function() {deepEqual( Stem("missbilliga"), "missbil");});
test("missbruka -> missbruk", function() {deepEqual( Stem("missbruka"), "missbruk");});
test("missbrukade -> missbruk", function() {deepEqual( Stem("missbrukade"), "missbruk");});
test("missbrukar -> missbruk", function() {deepEqual( Stem("missbrukar"), "missbruk");});
test("missbrukas -> missbruk", function() {deepEqual( Stem("missbrukas"), "missbruk");});
test("missfall -> missfall", function() {deepEqual( Stem("missfall"), "missfall");});
test("missfoster -> missfost", function() {deepEqual( Stem("missfoster"), "missfost");});
test("missfostret -> missfostret", function() {deepEqual( Stem("missfostret"), "missfostret");});
test("missförhållande -> missförhåll", function() {deepEqual( Stem("missförhållande"), "missförhåll");});
test("missförstod -> missförstod", function() {deepEqual( Stem("missförstod"), "missförstod");});
test("missförstå -> missförstå", function() {deepEqual( Stem("missförstå"), "missförstå");});
test("missförstånd -> missförstånd", function() {deepEqual( Stem("missförstånd"), "missförstånd");});
test("missgrepp -> missgrepp", function() {deepEqual( Stem("missgrepp"), "missgrepp");});
test("misshag -> misshag", function() {deepEqual( Stem("misshag"), "misshag");});
test("misshagade -> misshag", function() {deepEqual( Stem("misshagade"), "misshag");});
test("misshagar -> misshag", function() {deepEqual( Stem("misshagar"), "misshag");});
test("misshandel -> misshandel", function() {deepEqual( Stem("misshandel"), "misshandel");});
test("missioncn -> missioncn", function() {deepEqual( Stem("missioncn"), "missioncn");});
test("missionsskolan -> missionsskolan", function() {deepEqual( Stem("missionsskolan"), "missionsskolan");});
test("missionsskolans -> missionsskolan", function() {deepEqual( Stem("missionsskolans"), "missionsskolan");});
test("missionsverksamhet -> missionsverksam", function() {deepEqual( Stem("missionsverksamhet"), "missionsverksam");});
test("missionär -> missionär", function() {deepEqual( Stem("missionär"), "missionär");});
test("missklädde -> misskläd", function() {deepEqual( Stem("missklädde"), "misskläd");});
test("missklädt -> misskläd", function() {deepEqual( Stem("missklädt"), "misskläd");});
test("misskänna -> misskän", function() {deepEqual( Stem("misskänna"), "misskän");});
test("misskänner -> misskän", function() {deepEqual( Stem("misskänner"), "misskän");});
test("misskänt -> misskänt", function() {deepEqual( Stem("misskänt"), "misskänt");});
test("misskötta -> missköt", function() {deepEqual( Stem("misskötta"), "missköt");});
test("missleddes -> missled", function() {deepEqual( Stem("missleddes"), "missled");});
test("missljud -> missljud", function() {deepEqual( Stem("missljud"), "missljud");});
test("misslyckad -> misslyck", function() {deepEqual( Stem("misslyckad"), "misslyck");});
test("misslyckade -> misslyck", function() {deepEqual( Stem("misslyckade"), "misslyck");});
test("misslyckades -> misslyck", function() {deepEqual( Stem("misslyckades"), "misslyck");});
test("misslyckande -> misslyck", function() {deepEqual( Stem("misslyckande"), "misslyck");});
test("misslyckas -> misslyck", function() {deepEqual( Stem("misslyckas"), "misslyck");});
test("misslynt -> misslynt", function() {deepEqual( Stem("misslynt"), "misslynt");});
test("misslynthet -> misslynt", function() {deepEqual( Stem("misslynthet"), "misslynt");});
test("missmodig -> missmod", function() {deepEqual( Stem("missmodig"), "missmod");});
test("missnöjd -> missnöjd", function() {deepEqual( Stem("missnöjd"), "missnöjd");});
test("missnöjda -> missnöjd", function() {deepEqual( Stem("missnöjda"), "missnöjd");});
test("missnöje -> missnöj", function() {deepEqual( Stem("missnöje"), "missnöj");});
test("missnöjets -> missnöjet", function() {deepEqual( Stem("missnöjets"), "missnöjet");});
test("missräkning -> missräkning", function() {deepEqual( Stem("missräkning"), "missräkning");});
test("missräkningar -> missräkning", function() {deepEqual( Stem("missräkningar"), "missräkning");});
test("misstag -> misstag", function() {deepEqual( Stem("misstag"), "misstag");});
test("misstaga -> misstag", function() {deepEqual( Stem("misstaga"), "misstag");});
test("misstager -> misstag", function() {deepEqual( Stem("misstager"), "misstag");});
test("misstaget -> misstaget", function() {deepEqual( Stem("misstaget"), "misstaget");});
test("misstagit -> misstagit", function() {deepEqual( Stem("misstagit"), "misstagit");});
test("misstankar -> misstank", function() {deepEqual( Stem("misstankar"), "misstank");});
test("misstanke -> misstank", function() {deepEqual( Stem("misstanke"), "misstank");});
test("misstanken -> misstank", function() {deepEqual( Stem("misstanken"), "misstank");});
test("misstar -> misst", function() {deepEqual( Stem("misstar"), "misst");});
test("misstog -> misstog", function() {deepEqual( Stem("misstog"), "misstog");});
test("misstolkas -> misstolk", function() {deepEqual( Stem("misstolkas"), "misstolk");});
test("misstro -> misstro", function() {deepEqual( Stem("misstro"), "misstro");});
test("misstrodde -> misstrod", function() {deepEqual( Stem("misstrodde"), "misstrod");});
test("misstroende -> misstroend", function() {deepEqual( Stem("misstroende"), "misstroend");});
test("misstrogen -> misstrog", function() {deepEqual( Stem("misstrogen"), "misstrog");});
test("misstyck -> misstyck", function() {deepEqual( Stem("misstyck"), "misstyck");});
test("misstycka -> misstyck", function() {deepEqual( Stem("misstycka"), "misstyck");});
test("misstycker -> misstyck", function() {deepEqual( Stem("misstycker"), "misstyck");});
test("misstyd -> misstyd", function() {deepEqual( Stem("misstyd"), "misstyd");});
test("misstyda -> misstyd", function() {deepEqual( Stem("misstyda"), "misstyd");});
test("misstydas -> misstyd", function() {deepEqual( Stem("misstydas"), "misstyd");});
test("misstydde -> misstyd", function() {deepEqual( Stem("misstydde"), "misstyd");});
test("misstyder -> misstyd", function() {deepEqual( Stem("misstyder"), "misstyd");});
test("misstänka -> misstänk", function() {deepEqual( Stem("misstänka"), "misstänk");});
test("misstänker -> misstänk", function() {deepEqual( Stem("misstänker"), "misstänk");});
test("misstänksam -> misstänksam", function() {deepEqual( Stem("misstänksam"), "misstänksam");});
test("misstänksamhet -> misstänksam", function() {deepEqual( Stem("misstänksamhet"), "misstänksam");});
test("misstänksamt -> misstänksamt", function() {deepEqual( Stem("misstänksamt"), "misstänksamt");});
test("misstänkt -> misstänk", function() {deepEqual( Stem("misstänkt"), "misstänk");});
test("misstänkta -> misstänk", function() {deepEqual( Stem("misstänkta"), "misstänk");});
test("misstänkte -> misstänk", function() {deepEqual( Stem("misstänkte"), "misstänk");});
test("missunna -> missun", function() {deepEqual( Stem("missunna"), "missun");});
test("missöde -> missöd", function() {deepEqual( Stem("missöde"), "missöd");});
test("missöden -> missöd", function() {deepEqual( Stem("missöden"), "missöd");});
test("missödet -> missödet", function() {deepEqual( Stem("missödet"), "missödet");});
test("mist -> mist", function() {deepEqual( Stem("mist"), "mist");});
test("mista -> mist", function() {deepEqual( Stem("mista"), "mist");});
test("mistad -> mist", function() {deepEqual( Stem("mistad"), "mist");});
test("mistat -> mist", function() {deepEqual( Stem("mistat"), "mist");});
test("miste -> mist", function() {deepEqual( Stem("miste"), "mist");});
test("mister -> mist", function() {deepEqual( Stem("mister"), "mist");});
test("misär -> misär", function() {deepEqual( Stem("misär"), "misär");});
test("mit -> mit", function() {deepEqual( Stem("mit"), "mit");});
test("mitt -> mitt", function() {deepEqual( Stem("mitt"), "mitt");});
test("mittbenat -> mittben", function() {deepEqual( Stem("mittbenat"), "mittben");});
test("mittelgången -> mittelgång", function() {deepEqual( Stem("mittelgången"), "mittelgång");});
test("mittemellan -> mittemellan", function() {deepEqual( Stem("mittemellan"), "mittemellan");});
test("mittemot -> mittemot", function() {deepEqual( Stem("mittemot"), "mittemot");});
test("mitten -> mitt", function() {deepEqual( Stem("mitten"), "mitt");});
test("mittpunkt -> mittpunk", function() {deepEqual( Stem("mittpunkt"), "mittpunk");});
test("mittpå -> mittpå", function() {deepEqual( Stem("mittpå"), "mittpå");});
test("mittunder -> mittund", function() {deepEqual( Stem("mittunder"), "mittund");});
test("mivit -> mivit", function() {deepEqual( Stem("mivit"), "mivit");});
test("mixtur -> mixtur", function() {deepEqual( Stem("mixtur"), "mixtur");});
test("mjella -> mjell", function() {deepEqual( Stem("mjella"), "mjell");});
test("mjeltsjuk -> mjeltsjuk", function() {deepEqual( Stem("mjeltsjuk"), "mjeltsjuk");});
test("mjeltsjuka -> mjeltsjuk", function() {deepEqual( Stem("mjeltsjuka"), "mjeltsjuk");});
test("mjugg -> mjugg", function() {deepEqual( Stem("mjugg"), "mjugg");});
test("mjuk -> mjuk", function() {deepEqual( Stem("mjuk"), "mjuk");});
test("mjuka -> mjuk", function() {deepEqual( Stem("mjuka"), "mjuk");});
test("mjukare -> mjuk", function() {deepEqual( Stem("mjukare"), "mjuk");});
test("mjukaste -> mjuk", function() {deepEqual( Stem("mjukaste"), "mjuk");});
test("mjukhet -> mjuk", function() {deepEqual( Stem("mjukhet"), "mjuk");});
test("mjukt -> mjukt", function() {deepEqual( Stem("mjukt"), "mjukt");});
test("mjälla -> mjäll", function() {deepEqual( Stem("mjälla"), "mjäll");});
test("mjältsjuk -> mjältsjuk", function() {deepEqual( Stem("mjältsjuk"), "mjältsjuk");});
test("mjältsjuka -> mjältsjuk", function() {deepEqual( Stem("mjältsjuka"), "mjältsjuk");});
test("mjöd -> mjöd", function() {deepEqual( Stem("mjöd"), "mjöd");});
test("mjöl -> mjöl", function() {deepEqual( Stem("mjöl"), "mjöl");});
test("mjölade -> mjöl", function() {deepEqual( Stem("mjölade"), "mjöl");});
test("mjöldustet -> mjöldustet", function() {deepEqual( Stem("mjöldustet"), "mjöldustet");});
test("mjölig -> mjöl", function() {deepEqual( Stem("mjölig"), "mjöl");});
test("mjöligt -> mjöl", function() {deepEqual( Stem("mjöligt"), "mjöl");});
test("mjölk -> mjölk", function() {deepEqual( Stem("mjölk"), "mjölk");});
test("mjölkade -> mjölk", function() {deepEqual( Stem("mjölkade"), "mjölk");});
test("mjölkaret -> mjölkaret", function() {deepEqual( Stem("mjölkaret"), "mjölkaret");});
test("mjölkbyttor -> mjölkbyt", function() {deepEqual( Stem("mjölkbyttor"), "mjölkbyt");});
test("mjölken -> mjölk", function() {deepEqual( Stem("mjölken"), "mjölk");});
test("mjölkmagasinet -> mjölkmagasinet", function() {deepEqual( Stem("mjölkmagasinet"), "mjölkmagasinet");});
test("mjölkmuggen -> mjölkmugg", function() {deepEqual( Stem("mjölkmuggen"), "mjölkmugg");});
test("mjölkvällingen -> mjölkvälling", function() {deepEqual( Stem("mjölkvällingen"), "mjölkvälling");});
test("mjölnarn -> mjölnarn", function() {deepEqual( Stem("mjölnarn"), "mjölnarn");});
test("mjölnarne -> mjöln", function() {deepEqual( Stem("mjölnarne"), "mjöln");});
test("mjölsiktningen -> mjölsiktning", function() {deepEqual( Stem("mjölsiktningen"), "mjölsiktning");});
test("mjölskäppan -> mjölskäppan", function() {deepEqual( Stem("mjölskäppan"), "mjölskäppan");});
test("mjölsäckar -> mjölsäck", function() {deepEqual( Stem("mjölsäckar"), "mjölsäck");});
test("mjöltunnan -> mjöltunnan", function() {deepEqual( Stem("mjöltunnan"), "mjöltunnan");});
test("ml -> ml", function() {deepEqual( Stem("ml"), "ml");});
test("mldrade -> mldrad", function() {deepEqual( Stem("mldrade"), "mldrad");});
test("mlg -> mlg", function() {deepEqual( Stem("mlg"), "mlg");});
test("mll -> mll", function() {deepEqual( Stem("mll"), "mll");});
test("mln -> mln", function() {deepEqual( Stem("mln"), "mln");});
test("mlskan -> mlskan", function() {deepEqual( Stem("mlskan"), "mlskan");});
test("mn -> mn", function() {deepEqual( Stem("mn"), "mn");});
test("mna -> mna", function() {deepEqual( Stem("mna"), "mna");});
test("mngen -> mngen", function() {deepEqual( Stem("mngen"), "mngen");});
test("mnn -> mnn", function() {deepEqual( Stem("mnn"), "mnn");});
test("mod -> mod", function() {deepEqual( Stem("mod"), "mod");});
test("modd -> modd", function() {deepEqual( Stem("modd"), "modd");});
test("modehandlerskor -> modehandlersk", function() {deepEqual( Stem("modehandlerskor"), "modehandlersk");});
test("modell -> modell", function() {deepEqual( Stem("modell"), "modell");});
test("modellerade -> modeller", function() {deepEqual( Stem("modellerade"), "modeller");});
test("moder -> mod", function() {deepEqual( Stem("moder"), "mod");});
test("moderat -> moder", function() {deepEqual( Stem("moderat"), "moder");});
test("moderlig -> moder", function() {deepEqual( Stem("moderlig"), "moder");});
test("moderliga -> moder", function() {deepEqual( Stem("moderliga"), "moder");});
test("moderligt -> moder", function() {deepEqual( Stem("moderligt"), "moder");});
test("moderlös -> moderlös", function() {deepEqual( Stem("moderlös"), "moderlös");});
test("moderlösa -> moderlös", function() {deepEqual( Stem("moderlösa"), "moderlös");});
test("moderlöse -> moderlös", function() {deepEqual( Stem("moderlöse"), "moderlös");});
test("modern -> mod", function() {deepEqual( Stem("modern"), "mod");});
test("moderna -> mod", function() {deepEqual( Stem("moderna"), "mod");});
test("moderniserad -> moderniser", function() {deepEqual( Stem("moderniserad"), "moderniser");});
test("moderns -> mod", function() {deepEqual( Stem("moderns"), "mod");});
test("modernt -> modernt", function() {deepEqual( Stem("modernt"), "modernt");});
test("moders -> moder", function() {deepEqual( Stem("moders"), "moder");});
test("modersbarm -> modersbarm", function() {deepEqual( Stem("modersbarm"), "modersbarm");});
test("modersbröst -> modersbröst", function() {deepEqual( Stem("modersbröst"), "modersbröst");});
test("modersbröstet -> modersbröstet", function() {deepEqual( Stem("modersbröstet"), "modersbröstet");});
test("modershjerta -> modershjert", function() {deepEqual( Stem("modershjerta"), "modershjert");});
test("modershjärtat -> modershjärt", function() {deepEqual( Stem("modershjärtat"), "modershjärt");});
test("moderskapets -> moderskapet", function() {deepEqual( Stem("moderskapets"), "moderskapet");});
test("modesta -> modest", function() {deepEqual( Stem("modesta"), "modest");});
test("modet -> modet", function() {deepEqual( Stem("modet"), "modet");});
test("modfäld -> modfäld", function() {deepEqual( Stem("modfäld"), "modfäld");});
test("modfälld -> modfälld", function() {deepEqual( Stem("modfälld"), "modfälld");});
test("modig -> mod", function() {deepEqual( Stem("modig"), "mod");});
test("modiga -> mod", function() {deepEqual( Stem("modiga"), "mod");});
test("modigare -> mod", function() {deepEqual( Stem("modigare"), "mod");});
test("modigt -> mod", function() {deepEqual( Stem("modigt"), "mod");});
test("modlöshet -> modlös", function() {deepEqual( Stem("modlöshet"), "modlös");});
test("modlöst -> modlös", function() {deepEqual( Stem("modlöst"), "modlös");});
test("modrar -> modr", function() {deepEqual( Stem("modrar"), "modr");});
test("mods -> mod", function() {deepEqual( Stem("mods"), "mod");});
test("modstulenhet -> modstulen", function() {deepEqual( Stem("modstulenhet"), "modstulen");});
test("modulerade -> moduler", function() {deepEqual( Stem("modulerade"), "moduler");});
test("modus -> modus", function() {deepEqual( Stem("modus"), "modus");});
test("modärna -> modärn", function() {deepEqual( Stem("modärna"), "modärn");});
test("mogen -> mog", function() {deepEqual( Stem("mogen"), "mog");});
test("moget -> moget", function() {deepEqual( Stem("moget"), "moget");});
test("mogma -> mogm", function() {deepEqual( Stem("mogma"), "mogm");});
test("mogna -> mogn", function() {deepEqual( Stem("mogna"), "mogn");});
test("mognade -> mogn", function() {deepEqual( Stem("mognade"), "mogn");});
test("mognadt -> mognad", function() {deepEqual( Stem("mognadt"), "mognad");});
test("mognar -> mogn", function() {deepEqual( Stem("mognar"), "mogn");});
test("mognare -> mogn", function() {deepEqual( Stem("mognare"), "mogn");});
test("mognat -> mogn", function() {deepEqual( Stem("mognat"), "mogn");});
test("mohikanen -> mohikan", function() {deepEqual( Stem("mohikanen"), "mohikan");});
test("mokat -> mok", function() {deepEqual( Stem("mokat"), "mok");});
test("molande -> mol", function() {deepEqual( Stem("molande"), "mol");});
test("molat -> mol", function() {deepEqual( Stem("molat"), "mol");});
test("moll -> moll", function() {deepEqual( Stem("moll"), "moll");});
test("moln -> moln", function() {deepEqual( Stem("moln"), "moln");});
test("molnen -> moln", function() {deepEqual( Stem("molnen"), "moln");});
test("molnet -> molnet", function() {deepEqual( Stem("molnet"), "molnet");});
test("molnkransen -> molnkrans", function() {deepEqual( Stem("molnkransen"), "molnkrans");});
test("molnmassorna -> molnmass", function() {deepEqual( Stem("molnmassorna"), "molnmass");});
test("molnskockarna -> molnskock", function() {deepEqual( Stem("molnskockarna"), "molnskock");});
test("moltke -> moltk", function() {deepEqual( Stem("moltke"), "moltk");});
test("mon -> mon", function() {deepEqual( Stem("mon"), "mon");});
test("monarda -> monard", function() {deepEqual( Stem("monarda"), "monard");});
test("monark -> monark", function() {deepEqual( Stem("monark"), "monark");});
test("monda -> mond", function() {deepEqual( Stem("monda"), "mond");});
test("mondäna -> mondän", function() {deepEqual( Stem("mondäna"), "mondän");});
test("monsieur -> monsieur", function() {deepEqual( Stem("monsieur"), "monsieur");});
test("monte -> mont", function() {deepEqual( Stem("monte"), "mont");});
test("montmartre -> montmartr", function() {deepEqual( Stem("montmartre"), "montmartr");});
test("mor -> mor", function() {deepEqual( Stem("mor"), "mor");});
test("mora -> mor", function() {deepEqual( Stem("mora"), "mor");});
test("moral -> moral", function() {deepEqual( Stem("moral"), "moral");});
test("moralen -> moral", function() {deepEqual( Stem("moralen"), "moral");});
test("moralens -> moral", function() {deepEqual( Stem("moralens"), "moral");});
test("moraler -> moral", function() {deepEqual( Stem("moraler"), "moral");});
test("moraliska -> moralisk", function() {deepEqual( Stem("moraliska"), "moralisk");});
test("moraliskt -> moralisk", function() {deepEqual( Stem("moraliskt"), "moralisk");});
test("moralitet -> moralitet", function() {deepEqual( Stem("moralitet"), "moralitet");});
test("morb -> morb", function() {deepEqual( Stem("morb"), "morb");});
test("morbror -> morbr", function() {deepEqual( Stem("morbror"), "morbr");});
test("morbrors -> morbror", function() {deepEqual( Stem("morbrors"), "morbror");});
test("mord -> mord", function() {deepEqual( Stem("mord"), "mord");});
test("mordet -> mordet", function() {deepEqual( Stem("mordet"), "mordet");});
test("mordiska -> mordisk", function() {deepEqual( Stem("mordiska"), "mordisk");});
test("mordnatten -> mordnat", function() {deepEqual( Stem("mordnatten"), "mordnat");});
test("mordredskap -> mordredskap", function() {deepEqual( Stem("mordredskap"), "mordredskap");});
test("morell -> morell", function() {deepEqual( Stem("morell"), "morell");});
test("mores -> mor", function() {deepEqual( Stem("mores"), "mor");});
test("morfar -> morf", function() {deepEqual( Stem("morfar"), "morf");});
test("morföräldrar -> morföräldr", function() {deepEqual( Stem("morföräldrar"), "morföräldr");});
test("morföräldrarnas -> morföräldr", function() {deepEqual( Stem("morföräldrarnas"), "morföräldr");});
test("morgnar -> morgn", function() {deepEqual( Stem("morgnar"), "morgn");});
test("morgnarna -> morgn", function() {deepEqual( Stem("morgnarna"), "morgn");});
test("morgnarne -> morgn", function() {deepEqual( Stem("morgnarne"), "morgn");});
test("morgon -> morgon", function() {deepEqual( Stem("morgon"), "morgon");});
test("morgonarbete -> morgonarbet", function() {deepEqual( Stem("morgonarbete"), "morgonarbet");});
test("morgoncn -> morgoncn", function() {deepEqual( Stem("morgoncn"), "morgoncn");});
test("morgondagen -> morgondag", function() {deepEqual( Stem("morgondagen"), "morgondag");});
test("morgondagens -> morgondag", function() {deepEqual( Stem("morgondagens"), "morgondag");});
test("morgondaggen -> morgondagg", function() {deepEqual( Stem("morgondaggen"), "morgondagg");});
test("morgonen -> morgon", function() {deepEqual( Stem("morgonen"), "morgon");});
test("morgonens -> morgon", function() {deepEqual( Stem("morgonens"), "morgon");});
test("morgonglada -> morgonglad", function() {deepEqual( Stem("morgonglada"), "morgonglad");});
test("morgongryningen -> morgongryning", function() {deepEqual( Stem("morgongryningen"), "morgongryning");});
test("morgongrått -> morgongråt", function() {deepEqual( Stem("morgongrått"), "morgongråt");});
test("morgonhimlen -> morgonhiml", function() {deepEqual( Stem("morgonhimlen"), "morgonhiml");});
test("morgonkaffe -> morgonkaff", function() {deepEqual( Stem("morgonkaffe"), "morgonkaff");});
test("morgonpromenad -> morgonpromen", function() {deepEqual( Stem("morgonpromenad"), "morgonpromen");});
test("morgonpromenader -> morgonpromenad", function() {deepEqual( Stem("morgonpromenader"), "morgonpromenad");});
test("morgonritt -> morgonrit", function() {deepEqual( Stem("morgonritt"), "morgonrit");});
test("morgonritter -> morgonrit", function() {deepEqual( Stem("morgonritter"), "morgonrit");});
test("morgonrock -> morgonrock", function() {deepEqual( Stem("morgonrock"), "morgonrock");});
test("morgonrocken -> morgonrock", function() {deepEqual( Stem("morgonrocken"), "morgonrock");});
test("morgonsolen -> morgonsol", function() {deepEqual( Stem("morgonsolen"), "morgonsol");});
test("morgonstjerna -> morgonstj", function() {deepEqual( Stem("morgonstjerna"), "morgonstj");});
test("morgonstund -> morgonstund", function() {deepEqual( Stem("morgonstund"), "morgonstund");});
test("morgonstunder -> morgonstund", function() {deepEqual( Stem("morgonstunder"), "morgonstund");});
test("morgonvandringen -> morgonvandring", function() {deepEqual( Stem("morgonvandringen"), "morgonvandring");});
test("morgonvatten -> morgonvat", function() {deepEqual( Stem("morgonvatten"), "morgonvat");});
test("morior -> mori", function() {deepEqual( Stem("morior"), "mori");});
test("morka -> mork", function() {deepEqual( Stem("morka"), "mork");});
test("morknar -> morkn", function() {deepEqual( Stem("morknar"), "morkn");});
test("morkret -> morkret", function() {deepEqual( Stem("morkret"), "morkret");});
test("mormor -> morm", function() {deepEqual( Stem("mormor"), "morm");});
test("mormors -> mormor", function() {deepEqual( Stem("mormors"), "mormor");});
test("morna -> morn", function() {deepEqual( Stem("morna"), "morn");});
test("morrade -> morr", function() {deepEqual( Stem("morrade"), "morr");});
test("morrande -> morr", function() {deepEqual( Stem("morrande"), "morr");});
test("morrning -> morrning", function() {deepEqual( Stem("morrning"), "morrning");});
test("mors -> mor", function() {deepEqual( Stem("mors"), "mor");});
test("morse -> mors", function() {deepEqual( Stem("morse"), "mors");});
test("morskt -> morsk", function() {deepEqual( Stem("morskt"), "morsk");});
test("mortel -> mortel", function() {deepEqual( Stem("mortel"), "mortel");});
test("mosaik -> mosaik", function() {deepEqual( Stem("mosaik"), "mosaik");});
test("mosiga -> mos", function() {deepEqual( Stem("mosiga"), "mos");});
test("mosin -> mosin", function() {deepEqual( Stem("mosin"), "mosin");});
test("mossa -> moss", function() {deepEqual( Stem("mossa"), "moss");});
test("mossan -> mossan", function() {deepEqual( Stem("mossan"), "mossan");});
test("mossen -> moss", function() {deepEqual( Stem("mossen"), "moss");});
test("moster -> most", function() {deepEqual( Stem("moster"), "most");});
test("mosters -> moster", function() {deepEqual( Stem("mosters"), "moster");});
test("mostrar -> mostr", function() {deepEqual( Stem("mostrar"), "mostr");});
test("mot -> mot", function() {deepEqual( Stem("mot"), "mot");});
test("motarbeta -> motarbet", function() {deepEqual( Stem("motarbeta"), "motarbet");});
test("motarbetade -> motarbet", function() {deepEqual( Stem("motarbetade"), "motarbet");});
test("motarbetas -> motarbet", function() {deepEqual( Stem("motarbetas"), "motarbet");});
test("motbjudande -> motbjud", function() {deepEqual( Stem("motbjudande"), "motbjud");});
test("motgift -> motgift", function() {deepEqual( Stem("motgift"), "motgift");});
test("motgångar -> motgång", function() {deepEqual( Stem("motgångar"), "motgång");});
test("motgången -> motgång", function() {deepEqual( Stem("motgången"), "motgång");});
test("motiv -> motiv", function() {deepEqual( Stem("motiv"), "motiv");});
test("motiverat -> motiver", function() {deepEqual( Stem("motiverat"), "motiver");});
test("motor -> mot", function() {deepEqual( Stem("motor"), "mot");});
test("motorernas -> motor", function() {deepEqual( Stem("motorernas"), "motor");});
test("motorn -> motorn", function() {deepEqual( Stem("motorn"), "motorn");});
test("motsade -> mots", function() {deepEqual( Stem("motsade"), "mots");});
test("motsades -> mots", function() {deepEqual( Stem("motsades"), "mots");});
test("motsagt -> motsag", function() {deepEqual( Stem("motsagt"), "motsag");});
test("motsats -> motsat", function() {deepEqual( Stem("motsats"), "motsat");});
test("motsatsen -> motsats", function() {deepEqual( Stem("motsatsen"), "motsats");});
test("motsatser -> motsats", function() {deepEqual( Stem("motsatser"), "motsats");});
test("motsatt -> motsat", function() {deepEqual( Stem("motsatt"), "motsat");});
test("motsatta -> motsat", function() {deepEqual( Stem("motsatta"), "motsat");});
test("motspänstighet -> motspänst", function() {deepEqual( Stem("motspänstighet"), "motspänst");});
test("motstod -> motstod", function() {deepEqual( Stem("motstod"), "motstod");});
test("motsträfvighet -> motsträfv", function() {deepEqual( Stem("motsträfvighet"), "motsträfv");});
test("motsträviga -> motsträv", function() {deepEqual( Stem("motsträviga"), "motsträv");});
test("motsträvige -> motsträv", function() {deepEqual( Stem("motsträvige"), "motsträv");});
test("motsträvighet -> motsträv", function() {deepEqual( Stem("motsträvighet"), "motsträv");});
test("motsträvigt -> motsträv", function() {deepEqual( Stem("motsträvigt"), "motsträv");});
test("motstå -> motstå", function() {deepEqual( Stem("motstå"), "motstå");});
test("motstånd -> motstånd", function() {deepEqual( Stem("motstånd"), "motstånd");});
test("motståndet -> motståndet", function() {deepEqual( Stem("motståndet"), "motståndet");});
test("motsvara -> motsvar", function() {deepEqual( Stem("motsvara"), "motsvar");});
test("motsäga -> motsäg", function() {deepEqual( Stem("motsäga"), "motsäg");});
test("motsägelse -> motsäg", function() {deepEqual( Stem("motsägelse"), "motsäg");});
test("motsägelsen -> motsäg", function() {deepEqual( Stem("motsägelsen"), "motsäg");});
test("motsägelser -> motsäg", function() {deepEqual( Stem("motsägelser"), "motsäg");});
test("mott -> mott", function() {deepEqual( Stem("mott"), "mott");});
test("mottag -> mottag", function() {deepEqual( Stem("mottag"), "mottag");});
test("mottaga -> mottag", function() {deepEqual( Stem("mottaga"), "mottag");});
test("mottagande -> mottag", function() {deepEqual( Stem("mottagande"), "mottag");});
test("mottagandet -> mottag", function() {deepEqual( Stem("mottagandet"), "mottag");});
test("mottagas -> mottag", function() {deepEqual( Stem("mottagas"), "mottag");});
test("mottagen -> mottag", function() {deepEqual( Stem("mottagen"), "mottag");});
test("mottager -> mottag", function() {deepEqual( Stem("mottager"), "mottag");});
test("mottagit -> mottagit", function() {deepEqual( Stem("mottagit"), "mottagit");});
test("mottagna -> mottagn", function() {deepEqual( Stem("mottagna"), "mottagn");});
test("mottagning -> mottagning", function() {deepEqual( Stem("mottagning"), "mottagning");});
test("mottagningen -> mottagning", function() {deepEqual( Stem("mottagningen"), "mottagning");});
test("mottagningsrum -> mottagningsrum", function() {deepEqual( Stem("mottagningsrum"), "mottagningsrum");});
test("mottagningsrummet -> mottagningsrummet", function() {deepEqual( Stem("mottagningsrummet"), "mottagningsrummet");});
test("mottagningstiden -> mottagningstid", function() {deepEqual( Stem("mottagningstiden"), "mottagningstid");});
test("mottagningstidens -> mottagningstid", function() {deepEqual( Stem("mottagningstidens"), "mottagningstid");});
test("mottagningstimmen -> mottagningstimm", function() {deepEqual( Stem("mottagningstimmen"), "mottagningstimm");});
test("mottog -> mottog", function() {deepEqual( Stem("mottog"), "mottog");});
test("mottogo -> mottogo", function() {deepEqual( Stem("mottogo"), "mottogo");});
test("mottogs -> mottog", function() {deepEqual( Stem("mottogs"), "mottog");});
test("motvilja -> motvilj", function() {deepEqual( Stem("motvilja"), "motvilj");});
test("motvillighet -> motvil", function() {deepEqual( Stem("motvillighet"), "motvil");});
test("motvilligt -> motvil", function() {deepEqual( Stem("motvilligt"), "motvil");});
test("moy -> moy", function() {deepEqual( Stem("moy"), "moy");});
test("mozart -> mozart", function() {deepEqual( Stem("mozart"), "mozart");});
test("mq -> mq", function() {deepEqual( Stem("mq"), "mq");});
test("mr -> mr", function() {deepEqual( Stem("mr"), "mr");});
test("ms -> ms", function() {deepEqual( Stem("ms"), "ms");});
test("mte -> mte", function() {deepEqual( Stem("mte"), "mte");});
test("muffen -> muff", function() {deepEqual( Stem("muffen"), "muff");});
test("mulen -> mul", function() {deepEqual( Stem("mulen"), "mul");});
test("mulet -> mulet", function() {deepEqual( Stem("mulet"), "mulet");});
test("mull -> mull", function() {deepEqual( Stem("mull"), "mull");});
test("mullen -> mull", function() {deepEqual( Stem("mullen"), "mull");});
test("mullig -> mul", function() {deepEqual( Stem("mullig"), "mul");});
test("mullrar -> mullr", function() {deepEqual( Stem("mullrar"), "mullr");});
test("mulna -> muln", function() {deepEqual( Stem("mulna"), "muln");});
test("mulnade -> muln", function() {deepEqual( Stem("mulnade"), "muln");});
test("mum -> mum", function() {deepEqual( Stem("mum"), "mum");});
test("mumielika -> mumielik", function() {deepEqual( Stem("mumielika"), "mumielik");});
test("mumla -> muml", function() {deepEqual( Stem("mumla"), "muml");});
test("mumlade -> muml", function() {deepEqual( Stem("mumlade"), "muml");});
test("mumlande -> muml", function() {deepEqual( Stem("mumlande"), "muml");});
test("mumlar -> muml", function() {deepEqual( Stem("mumlar"), "muml");});
test("mumlat -> muml", function() {deepEqual( Stem("mumlat"), "muml");});
test("mumlet -> mumlet", function() {deepEqual( Stem("mumlet"), "mumlet");});
test("mumm -> mumm", function() {deepEqual( Stem("mumm"), "mumm");});
test("mums -> mum", function() {deepEqual( Stem("mums"), "mum");});
test("mumsa -> mums", function() {deepEqual( Stem("mumsa"), "mums");});
test("mumsade -> mums", function() {deepEqual( Stem("mumsade"), "mums");});
test("mumsande -> mums", function() {deepEqual( Stem("mumsande"), "mums");});
test("mumsat -> mums", function() {deepEqual( Stem("mumsat"), "mums");});
test("mun -> mun", function() {deepEqual( Stem("mun"), "mun");});
test("mund -> mund", function() {deepEqual( Stem("mund"), "mund");});
test("mungipor -> mungip", function() {deepEqual( Stem("mungipor"), "mungip");});
test("mungiporna -> mungip", function() {deepEqual( Stem("mungiporna"), "mungip");});
test("munken -> munk", function() {deepEqual( Stem("munken"), "munk");});
test("munklegend -> munklegend", function() {deepEqual( Stem("munklegend"), "munklegend");});
test("munnar -> munn", function() {deepEqual( Stem("munnar"), "munn");});
test("munnarna -> munn", function() {deepEqual( Stem("munnarna"), "munn");});
test("munnen -> munn", function() {deepEqual( Stem("munnen"), "munn");});
test("munsbit -> munsbit", function() {deepEqual( Stem("munsbit"), "munsbit");});
test("munstycken -> munstyck", function() {deepEqual( Stem("munstycken"), "munstyck");});
test("munter -> munt", function() {deepEqual( Stem("munter"), "munt");});
test("munterhet -> munter", function() {deepEqual( Stem("munterhet"), "munter");});
test("muntert -> muntert", function() {deepEqual( Stem("muntert"), "muntert");});
test("muntlig -> munt", function() {deepEqual( Stem("muntlig"), "munt");});
test("muntligen -> munt", function() {deepEqual( Stem("muntligen"), "munt");});
test("muntligt -> munt", function() {deepEqual( Stem("muntligt"), "munt");});
test("muntra -> muntr", function() {deepEqual( Stem("muntra"), "muntr");});
test("muntrande -> muntr", function() {deepEqual( Stem("muntrande"), "muntr");});
test("muntrare -> muntr", function() {deepEqual( Stem("muntrare"), "muntr");});
test("muntraste -> muntr", function() {deepEqual( Stem("muntraste"), "muntr");});
test("muntre -> muntr", function() {deepEqual( Stem("muntre"), "muntr");});
test("munvig -> munv", function() {deepEqual( Stem("munvig"), "munv");});
test("munvädren -> munvädr", function() {deepEqual( Stem("munvädren"), "munvädr");});
test("mur -> mur", function() {deepEqual( Stem("mur"), "mur");});
test("murar -> mur", function() {deepEqual( Stem("murar"), "mur");});
test("murarna -> mur", function() {deepEqual( Stem("murarna"), "mur");});
test("murbruket -> murbruket", function() {deepEqual( Stem("murbruket"), "murbruket");});
test("muren -> mur", function() {deepEqual( Stem("muren"), "mur");});
test("murken -> murk", function() {deepEqual( Stem("murken"), "murk");});
test("murket -> murket", function() {deepEqual( Stem("murket"), "murket");});
test("murklor -> murkl", function() {deepEqual( Stem("murklor"), "murkl");});
test("murklorna -> murkl", function() {deepEqual( Stem("murklorna"), "murkl");});
test("murkna -> murkn", function() {deepEqual( Stem("murkna"), "murkn");});
test("murre -> murr", function() {deepEqual( Stem("murre"), "murr");});
test("murvel -> murvel", function() {deepEqual( Stem("murvel"), "murvel");});
test("murvlar -> murvl", function() {deepEqual( Stem("murvlar"), "murvl");});
test("murvlarna -> murvl", function() {deepEqual( Stem("murvlarna"), "murvl");});
test("mus -> mus", function() {deepEqual( Stem("mus"), "mus");});
test("musa -> mus", function() {deepEqual( Stem("musa"), "mus");});
test("museer -> muse", function() {deepEqual( Stem("museer"), "muse");});
test("museet -> museet", function() {deepEqual( Stem("museet"), "museet");});
test("musen -> mus", function() {deepEqual( Stem("musen"), "mus");});
test("musik -> musik", function() {deepEqual( Stem("musik"), "musik");});
test("musikalisk -> musikalisk", function() {deepEqual( Stem("musikalisk"), "musikalisk");});
test("musikaliske -> musikalisk", function() {deepEqual( Stem("musikaliske"), "musikalisk");});
test("musikanter -> musikant", function() {deepEqual( Stem("musikanter"), "musikant");});
test("musiken -> musik", function() {deepEqual( Stem("musiken"), "musik");});
test("musikens -> musik", function() {deepEqual( Stem("musikens"), "musik");});
test("musiker -> musik", function() {deepEqual( Stem("musiker"), "musik");});
test("musiknummer -> musiknumm", function() {deepEqual( Stem("musiknummer"), "musiknumm");});
test("muskel -> muskel", function() {deepEqual( Stem("muskel"), "muskel");});
test("muskelspelet -> muskelspelet", function() {deepEqual( Stem("muskelspelet"), "muskelspelet");});
test("muskelstarka -> muskelstark", function() {deepEqual( Stem("muskelstarka"), "muskelstark");});
test("musklerna -> muskl", function() {deepEqual( Stem("musklerna"), "muskl");});
test("muskulatur -> muskulatur", function() {deepEqual( Stem("muskulatur"), "muskulatur");});
test("muskulös -> muskulös", function() {deepEqual( Stem("muskulös"), "muskulös");});
test("muskötskott -> muskötskot", function() {deepEqual( Stem("muskötskott"), "muskötskot");});
test("muslinsgardinen -> muslinsgardin", function() {deepEqual( Stem("muslinsgardinen"), "muslinsgardin");});
test("musslinsduken -> musslinsduk", function() {deepEqual( Stem("musslinsduken"), "musslinsduk");});
test("must -> must", function() {deepEqual( Stem("must"), "must");});
test("mustasch -> mustasch", function() {deepEqual( Stem("mustasch"), "mustasch");});
test("mustascher -> mustasch", function() {deepEqual( Stem("mustascher"), "mustasch");});
test("musten -> must", function() {deepEqual( Stem("musten"), "must");});
test("mustig -> must", function() {deepEqual( Stem("mustig"), "must");});
test("mustiga -> must", function() {deepEqual( Stem("mustiga"), "must");});
test("muta -> mut", function() {deepEqual( Stem("muta"), "mut");});
test("muttrade -> muttr", function() {deepEqual( Stem("muttrade"), "muttr");});
test("muttrande -> muttr", function() {deepEqual( Stem("muttrande"), "muttr");});
test("myckct -> myckct", function() {deepEqual( Stem("myckct"), "myckct");});
test("mycke -> myck", function() {deepEqual( Stem("mycke"), "myck");});
test("mycken -> myck", function() {deepEqual( Stem("mycken"), "myck");});
test("myckenhet -> mycken", function() {deepEqual( Stem("myckenhet"), "mycken");});
test("mycket -> mycket", function() {deepEqual( Stem("mycket"), "mycket");});
test("myckna -> myckn", function() {deepEqual( Stem("myckna"), "myckn");});
test("myeket -> myeket", function() {deepEqual( Stem("myeket"), "myeket");});
test("mygg -> mygg", function() {deepEqual( Stem("mygg"), "mygg");});
test("myggan -> myggan", function() {deepEqual( Stem("myggan"), "myggan");});
test("myggen -> mygg", function() {deepEqual( Stem("myggen"), "mygg");});
test("myggor -> mygg", function() {deepEqual( Stem("myggor"), "mygg");});
test("myggorna -> mygg", function() {deepEqual( Stem("myggorna"), "mygg");});
test("myling -> myling", function() {deepEqual( Stem("myling"), "myling");});
test("mylingarna -> myling", function() {deepEqual( Stem("mylingarna"), "myling");});
test("mylla -> myll", function() {deepEqual( Stem("mylla"), "myll");});
test("myllrande -> myllr", function() {deepEqual( Stem("myllrande"), "myllr");});
test("myllrar -> myllr", function() {deepEqual( Stem("myllrar"), "myllr");});
test("myndig -> mynd", function() {deepEqual( Stem("myndig"), "mynd");});
test("myndiga -> mynd", function() {deepEqual( Stem("myndiga"), "mynd");});
test("myndigare -> mynd", function() {deepEqual( Stem("myndigare"), "mynd");});
test("myndighet -> mynd", function() {deepEqual( Stem("myndighet"), "mynd");});
test("myndigheters -> myndigheter", function() {deepEqual( Stem("myndigheters"), "myndigheter");});
test("myndighets -> myndighet", function() {deepEqual( Stem("myndighets"), "myndighet");});
test("myndling -> myndling", function() {deepEqual( Stem("myndling"), "myndling");});
test("mynnat -> mynn", function() {deepEqual( Stem("mynnat"), "mynn");});
test("mynt -> mynt", function() {deepEqual( Stem("mynt"), "mynt");});
test("myra -> myr", function() {deepEqual( Stem("myra"), "myr");});
test("myran -> myran", function() {deepEqual( Stem("myran"), "myran");});
test("myrarna -> myr", function() {deepEqual( Stem("myrarna"), "myr");});
test("myren -> myr", function() {deepEqual( Stem("myren"), "myr");});
test("myriader -> myriad", function() {deepEqual( Stem("myriader"), "myriad");});
test("myror -> myr", function() {deepEqual( Stem("myror"), "myr");});
test("myrstack -> myrstack", function() {deepEqual( Stem("myrstack"), "myrstack");});
test("myrstackarna -> myrstack", function() {deepEqual( Stem("myrstackarna"), "myrstack");});
test("myrten -> myrt", function() {deepEqual( Stem("myrten"), "myrt");});
test("myrtenträd -> myrtenträd", function() {deepEqual( Stem("myrtenträd"), "myrtenträd");});
test("mysande -> mys", function() {deepEqual( Stem("mysande"), "mys");});
test("myst -> myst", function() {deepEqual( Stem("myst"), "myst");});
test("myste -> myst", function() {deepEqual( Stem("myste"), "myst");});
test("mysterer -> myster", function() {deepEqual( Stem("mysterer"), "myster");});
test("mysterium -> mysterium", function() {deepEqual( Stem("mysterium"), "mysterium");});
test("mystifikation -> mystifikation", function() {deepEqual( Stem("mystifikation"), "mystifikation");});
test("mystifikationer -> mystifikation", function() {deepEqual( Stem("mystifikationer"), "mystifikation");});
test("mystik -> mystik", function() {deepEqual( Stem("mystik"), "mystik");});
test("mystisk -> mystisk", function() {deepEqual( Stem("mystisk"), "mystisk");});
test("mystiska -> mystisk", function() {deepEqual( Stem("mystiska"), "mystisk");});
test("mystiskt -> mystisk", function() {deepEqual( Stem("mystiskt"), "mystisk");});
test("myten -> myt", function() {deepEqual( Stem("myten"), "myt");});
test("mäblerna -> mäbl", function() {deepEqual( Stem("mäblerna"), "mäbl");});
test("mägtade -> mägt", function() {deepEqual( Stem("mägtade"), "mägt");});
test("mägtig -> mägt", function() {deepEqual( Stem("mägtig"), "mägt");});
test("mägtigt -> mägt", function() {deepEqual( Stem("mägtigt"), "mägt");});
test("mäkta -> mäkt", function() {deepEqual( Stem("mäkta"), "mäkt");});
test("mäktig -> mäkt", function() {deepEqual( Stem("mäktig"), "mäkt");});
test("mäktiga -> mäkt", function() {deepEqual( Stem("mäktiga"), "mäkt");});
test("mäktigare -> mäkt", function() {deepEqual( Stem("mäktigare"), "mäkt");});
test("mäktigt -> mäkt", function() {deepEqual( Stem("mäktigt"), "mäkt");});
test("mälarbåten -> mälarbåt", function() {deepEqual( Stem("mälarbåten"), "mälarbåt");});
test("mälaren -> mäl", function() {deepEqual( Stem("mälaren"), "mäl");});
test("mälarens -> mäl", function() {deepEqual( Stem("mälarens"), "mäl");});
test("mälmiskornas -> mälmisk", function() {deepEqual( Stem("mälmiskornas"), "mälmisk");});
test("män -> män", function() {deepEqual( Stem("män"), "män");});
test("mändell -> mändell", function() {deepEqual( Stem("mändell"), "mändell");});
test("mänga -> mäng", function() {deepEqual( Stem("mänga"), "mäng");});
test("mängd -> mäng", function() {deepEqual( Stem("mängd"), "mäng");});
test("mängden -> mäng", function() {deepEqual( Stem("mängden"), "mäng");});
test("männen -> männ", function() {deepEqual( Stem("männen"), "männ");});
test("männens -> männ", function() {deepEqual( Stem("männens"), "männ");});
test("männer -> männ", function() {deepEqual( Stem("männer"), "männ");});
test("männerna -> männ", function() {deepEqual( Stem("männerna"), "männ");});
test("människa -> människ", function() {deepEqual( Stem("människa"), "människ");});
test("människan -> människan", function() {deepEqual( Stem("människan"), "människan");});
test("människans -> människan", function() {deepEqual( Stem("människans"), "människan");});
test("människas -> människ", function() {deepEqual( Stem("människas"), "människ");});
test("människo -> människo", function() {deepEqual( Stem("människo"), "människo");});
test("människobarnens -> människobarn", function() {deepEqual( Stem("människobarnens"), "människobarn");});
test("människofiskare -> människofisk", function() {deepEqual( Stem("människofiskare"), "människofisk");});
test("människofruktan -> människofruktan", function() {deepEqual( Stem("människofruktan"), "människofruktan");});
test("människokännedom -> människokännedom", function() {deepEqual( Stem("människokännedom"), "människokännedom");});
test("människokärlek -> människokärlek", function() {deepEqual( Stem("människokärlek"), "människokärlek");});
test("människoliv -> människoliv", function() {deepEqual( Stem("människoliv"), "människoliv");});
test("människomaterial -> människomaterial", function() {deepEqual( Stem("människomaterial"), "människomaterial");});
test("människopsykologi -> människopsykologi", function() {deepEqual( Stem("människopsykologi"), "människopsykologi");});
test("människor -> människ", function() {deepEqual( Stem("människor"), "människ");});
test("människorna -> människ", function() {deepEqual( Stem("människorna"), "människ");});
test("människornas -> människ", function() {deepEqual( Stem("människornas"), "människ");});
test("människors -> människor", function() {deepEqual( Stem("människors"), "människor");});
test("människorätt -> människorät", function() {deepEqual( Stem("människorätt"), "människorät");});
test("människoskygghet -> människoskygg", function() {deepEqual( Stem("människoskygghet"), "människoskygg");});
test("människosläktet -> människosläktet", function() {deepEqual( Stem("människosläktet"), "människosläktet");});
test("människosonen -> människoson", function() {deepEqual( Stem("människosonen"), "människoson");});
test("människosort -> människosort", function() {deepEqual( Stem("människosort"), "människosort");});
test("människovilja -> människovilj", function() {deepEqual( Stem("människovilja"), "människovilj");});
test("människovimlet -> människovimlet", function() {deepEqual( Stem("människovimlet"), "människovimlet");});
test("människovän -> människovän", function() {deepEqual( Stem("människovän"), "människovän");});
test("mäns -> män", function() {deepEqual( Stem("mäns"), "män");});
test("mänska -> mänsk", function() {deepEqual( Stem("mänska"), "mänsk");});
test("mänsklig -> mänsk", function() {deepEqual( Stem("mänsklig"), "mänsk");});
test("mänskliga -> mänsk", function() {deepEqual( Stem("mänskliga"), "mänsk");});
test("mänskligheten -> mänsk", function() {deepEqual( Stem("mänskligheten"), "mänsk");});
test("mänsklighetens -> mänsk", function() {deepEqual( Stem("mänsklighetens"), "mänsk");});
test("mänskligt -> mänsk", function() {deepEqual( Stem("mänskligt"), "mänsk");});
test("mänskor -> mänsk", function() {deepEqual( Stem("mänskor"), "mänsk");});
test("märg -> märg", function() {deepEqual( Stem("märg"), "märg");});
test("märgfull -> märgfull", function() {deepEqual( Stem("märgfull"), "märgfull");});
test("märk -> märk", function() {deepEqual( Stem("märk"), "märk");});
test("märka -> märk", function() {deepEqual( Stem("märka"), "märk");});
test("märkbar -> märkb", function() {deepEqual( Stem("märkbar"), "märkb");});
test("märkbara -> märkbar", function() {deepEqual( Stem("märkbara"), "märkbar");});
test("märkbarare -> märkbar", function() {deepEqual( Stem("märkbarare"), "märkbar");});
test("märkbart -> märkbart", function() {deepEqual( Stem("märkbart"), "märkbart");});
test("märke -> märk", function() {deepEqual( Stem("märke"), "märk");});
test("märken -> märk", function() {deepEqual( Stem("märken"), "märk");});
test("märker -> märk", function() {deepEqual( Stem("märker"), "märk");});
test("märket -> märket", function() {deepEqual( Stem("märket"), "märket");});
test("märklig -> märk", function() {deepEqual( Stem("märklig"), "märk");});
test("märkliga -> märk", function() {deepEqual( Stem("märkliga"), "märk");});
test("märkligheter -> märk", function() {deepEqual( Stem("märkligheter"), "märk");});
test("märkligt -> märk", function() {deepEqual( Stem("märkligt"), "märk");});
test("märkt -> märk", function() {deepEqual( Stem("märkt"), "märk");});
test("märkte -> märk", function() {deepEqual( Stem("märkte"), "märk");});
test("märktes -> märk", function() {deepEqual( Stem("märktes"), "märk");});
test("märkvärdig -> märkvärd", function() {deepEqual( Stem("märkvärdig"), "märkvärd");});
test("märkvärdiga -> märkvärd", function() {deepEqual( Stem("märkvärdiga"), "märkvärd");});
test("märkvärdigheter -> märkvärd", function() {deepEqual( Stem("märkvärdigheter"), "märkvärd");});
test("märkvärdigt -> märkvärd", function() {deepEqual( Stem("märkvärdigt"), "märkvärd");});
test("märtas -> märt", function() {deepEqual( Stem("märtas"), "märt");});
test("mässa -> mäss", function() {deepEqual( Stem("mässa"), "mäss");});
test("mässade -> mäss", function() {deepEqual( Stem("mässade"), "mäss");});
test("mässar -> mäss", function() {deepEqual( Stem("mässar"), "mäss");});
test("mässing -> mässing", function() {deepEqual( Stem("mässing"), "mässing");});
test("mästare -> mäst", function() {deepEqual( Stem("mästare"), "mäst");});
test("mästaren -> mäst", function() {deepEqual( Stem("mästaren"), "mäst");});
test("mästarn -> mästarn", function() {deepEqual( Stem("mästarn"), "mästarn");});
test("mäste -> mäst", function() {deepEqual( Stem("mäste"), "mäst");});
test("mäster -> mäst", function() {deepEqual( Stem("mäster"), "mäst");});
test("mästermansyxan -> mästermansyxan", function() {deepEqual( Stem("mästermansyxan"), "mästermansyxan");});
test("mästerstycke -> mästerstyck", function() {deepEqual( Stem("mästerstycke"), "mästerstyck");});
test("mästrade -> mästr", function() {deepEqual( Stem("mästrade"), "mästr");});
test("mäta -> mät", function() {deepEqual( Stem("mäta"), "mät");});
test("mätas -> mät", function() {deepEqual( Stem("mätas"), "mät");});
test("mäter -> mät", function() {deepEqual( Stem("mäter"), "mät");});
test("mätt -> mätt", function() {deepEqual( Stem("mätt"), "mätt");});
test("mätta -> mätt", function() {deepEqual( Stem("mätta"), "mätt");});
test("mättad -> mätt", function() {deepEqual( Stem("mättad"), "mätt");});
test("mättar -> mätt", function() {deepEqual( Stem("mättar"), "mätt");});
test("mätte -> mätt", function() {deepEqual( Stem("mätte"), "mätt");});
test("må -> må", function() {deepEqual( Stem("må"), "må");});
test("mådde -> mådd", function() {deepEqual( Stem("mådde"), "mådd");});
test("mående -> måend", function() {deepEqual( Stem("mående"), "måend");});
test("måfå -> måfå", function() {deepEqual( Stem("måfå"), "måfå");});
test("måg -> måg", function() {deepEqual( Stem("måg"), "måg");});
test("mågen -> måg", function() {deepEqual( Stem("mågen"), "måg");});
test("mågs -> måg", function() {deepEqual( Stem("mågs"), "måg");});
test("måhända -> måhänd", function() {deepEqual( Stem("måhända"), "måhänd");});
test("mål -> mål", function() {deepEqual( Stem("mål"), "mål");});
test("måla -> mål", function() {deepEqual( Stem("måla"), "mål");});
test("målad -> mål", function() {deepEqual( Stem("målad"), "mål");});
test("målade -> mål", function() {deepEqual( Stem("målade"), "mål");});
test("målande -> mål", function() {deepEqual( Stem("målande"), "mål");});
test("målar -> mål", function() {deepEqual( Stem("målar"), "mål");});
test("målarakademiens -> målarakademi", function() {deepEqual( Stem("målarakademiens"), "målarakademi");});
test("målare -> mål", function() {deepEqual( Stem("målare"), "mål");});
test("målareexpositionen -> målareexposition", function() {deepEqual( Stem("målareexpositionen"), "målareexposition");});
test("målarfärgen -> målarfärg", function() {deepEqual( Stem("målarfärgen"), "målarfärg");});
test("målarmästare -> målarmäst", function() {deepEqual( Stem("målarmästare"), "målarmäst");});
test("målas -> mål", function() {deepEqual( Stem("målas"), "mål");});
test("målat -> mål", function() {deepEqual( Stem("målat"), "mål");});
test("målet -> målet", function() {deepEqual( Stem("målet"), "målet");});
test("mållös -> mållös", function() {deepEqual( Stem("mållös"), "mållös");});
test("målning -> målning", function() {deepEqual( Stem("målning"), "målning");});
test("måls -> mål", function() {deepEqual( Stem("måls"), "mål");});
test("måltid -> måltid", function() {deepEqual( Stem("måltid"), "måltid");});
test("måltiden -> måltid", function() {deepEqual( Stem("måltiden"), "måltid");});
test("måltiderna -> måltid", function() {deepEqual( Stem("måltiderna"), "måltid");});
test("måltidstimmen -> måltidstimm", function() {deepEqual( Stem("måltidstimmen"), "måltidstimm");});
test("mån -> mån", function() {deepEqual( Stem("mån"), "mån");});
test("månad -> mån", function() {deepEqual( Stem("månad"), "mån");});
test("månaden -> månad", function() {deepEqual( Stem("månaden"), "månad");});
test("månader -> månad", function() {deepEqual( Stem("månader"), "månad");});
test("månaderna -> månad", function() {deepEqual( Stem("månaderna"), "månad");});
test("månadernas -> månad", function() {deepEqual( Stem("månadernas"), "månad");});
test("månaders -> månader", function() {deepEqual( Stem("månaders"), "månader");});
test("månads -> månad", function() {deepEqual( Stem("månads"), "månad");});
test("månar -> mån", function() {deepEqual( Stem("månar"), "mån");});
test("månbristning -> månbristning", function() {deepEqual( Stem("månbristning"), "månbristning");});
test("måndag -> måndag", function() {deepEqual( Stem("måndag"), "måndag");});
test("måndagen -> måndag", function() {deepEqual( Stem("måndagen"), "måndag");});
test("måndc -> måndc", function() {deepEqual( Stem("måndc"), "måndc");});
test("månde -> månd", function() {deepEqual( Stem("månde"), "månd");});
test("måne -> mån", function() {deepEqual( Stem("måne"), "mån");});
test("månen -> mån", function() {deepEqual( Stem("månen"), "mån");});
test("många -> mång", function() {deepEqual( Stem("många"), "mång");});
test("mångahanda -> mångahand", function() {deepEqual( Stem("mångahanda"), "mångahand");});
test("mångdubbelt -> mångdubbelt", function() {deepEqual( Stem("mångdubbelt"), "mångdubbelt");});
test("mångelskan -> mångelskan", function() {deepEqual( Stem("mångelskan"), "mångelskan");});
test("mången -> mång", function() {deepEqual( Stem("mången"), "mång");});
test("månget -> månget", function() {deepEqual( Stem("månget"), "månget");});
test("mångfald -> mångfald", function() {deepEqual( Stem("mångfald"), "mångfald");});
test("mångfaldiga -> mångfald", function() {deepEqual( Stem("mångfaldiga"), "mångfald");});
test("mångfaldigt -> mångfald", function() {deepEqual( Stem("mångfaldigt"), "mångfald");});
test("mångfärgat -> mångfärg", function() {deepEqual( Stem("mångfärgat"), "mångfärg");});
test("månggifte -> månggift", function() {deepEqual( Stem("månggifte"), "månggift");});
test("månghundraårig -> månghundraår", function() {deepEqual( Stem("månghundraårig"), "månghundraår");});
test("månglarna -> mångl", function() {deepEqual( Stem("månglarna"), "mångl");});
test("månglittermjöl -> månglittermjöl", function() {deepEqual( Stem("månglittermjöl"), "månglittermjöl");});
test("månglitterskrud -> månglitterskrud", function() {deepEqual( Stem("månglitterskrud"), "månglitterskrud");});
test("mångtydigt -> mångtyd", function() {deepEqual( Stem("mångtydigt"), "mångtyd");});
test("mångårig -> mångår", function() {deepEqual( Stem("mångårig"), "mångår");});
test("mångåriga -> mångår", function() {deepEqual( Stem("mångåriga"), "mångår");});
test("mångårigt -> mångår", function() {deepEqual( Stem("mångårigt"), "mångår");});
test("månklara -> månklar", function() {deepEqual( Stem("månklara"), "månklar");});
test("månljus -> månljus", function() {deepEqual( Stem("månljus"), "månljus");});
test("månljuset -> månljuset", function() {deepEqual( Stem("månljuset"), "månljuset");});
test("månn -> månn", function() {deepEqual( Stem("månn"), "månn");});
test("månne -> månn", function() {deepEqual( Stem("månne"), "månn");});
test("månsken -> månsk", function() {deepEqual( Stem("månsken"), "månsk");});
test("månskenet -> månskenet", function() {deepEqual( Stem("månskenet"), "månskenet");});
test("månskensfantast -> månskensfant", function() {deepEqual( Stem("månskensfantast"), "månskensfant");});
test("månskensnatt -> månskensnat", function() {deepEqual( Stem("månskensnatt"), "månskensnat");});
test("månskensnatten -> månskensnat", function() {deepEqual( Stem("månskensnatten"), "månskensnat");});
test("månskensnätter -> månskensnät", function() {deepEqual( Stem("månskensnätter"), "månskensnät");});
test("månskymning -> månskymning", function() {deepEqual( Stem("månskymning"), "månskymning");});
test("månstrålarna -> månstrål", function() {deepEqual( Stem("månstrålarna"), "månstrål");});
test("månstråle -> månstrål", function() {deepEqual( Stem("månstråle"), "månstrål");});
test("måntro -> måntro", function() {deepEqual( Stem("måntro"), "måntro");});
test("mår -> mår", function() {deepEqual( Stem("mår"), "mår");});
test("mårten -> mårt", function() {deepEqual( Stem("mårten"), "mårt");});
test("mårtens -> mårt", function() {deepEqual( Stem("mårtens"), "mårt");});
test("måsar -> mås", function() {deepEqual( Stem("måsar"), "mås");});
test("måsle -> måsl", function() {deepEqual( Stem("måsle"), "måsl");});
test("måst -> måst", function() {deepEqual( Stem("måst"), "måst");});
test("måstc -> måstc", function() {deepEqual( Stem("måstc"), "måstc");});
test("måste -> måst", function() {deepEqual( Stem("måste"), "måst");});
test("mått -> mått", function() {deepEqual( Stem("mått"), "mått");});
test("måtta -> mått", function() {deepEqual( Stem("måtta"), "mått");});
test("måttan -> måttan", function() {deepEqual( Stem("måttan"), "måttan");});
test("måtte -> mått", function() {deepEqual( Stem("måtte"), "mått");});
test("måttet -> måttet", function() {deepEqual( Stem("måttet"), "måttet");});
test("måttligt -> mått", function() {deepEqual( Stem("måttligt"), "mått");});
test("måtto -> måtto", function() {deepEqual( Stem("måtto"), "måtto");});
test("mö -> mö", function() {deepEqual( Stem("mö"), "mö");});
test("möbel -> möbel", function() {deepEqual( Stem("möbel"), "möbel");});
test("möbeln -> möbeln", function() {deepEqual( Stem("möbeln"), "möbeln");});
test("möbelöverdrag -> möbelöverdrag", function() {deepEqual( Stem("möbelöverdrag"), "möbelöverdrag");});
test("möblemang -> möblemang", function() {deepEqual( Stem("möblemang"), "möblemang");});
test("möblemanget -> möblemanget", function() {deepEqual( Stem("möblemanget"), "möblemanget");});
test("möbler -> möbl", function() {deepEqual( Stem("möbler"), "möbl");});
test("möblerade -> möbler", function() {deepEqual( Stem("möblerade"), "möbler");});
test("möblerar -> möbler", function() {deepEqual( Stem("möblerar"), "möbler");});
test("möblerat -> möbler", function() {deepEqual( Stem("möblerat"), "möbler");});
test("möbleringen -> möblering", function() {deepEqual( Stem("möbleringen"), "möblering");});
test("möblerna -> möbl", function() {deepEqual( Stem("möblerna"), "möbl");});
test("möda -> möd", function() {deepEqual( Stem("möda"), "möd");});
test("mödan -> mödan", function() {deepEqual( Stem("mödan"), "mödan");});
test("mödor -> möd", function() {deepEqual( Stem("mödor"), "möd");});
test("mödosamt -> mödosamt", function() {deepEqual( Stem("mödosamt"), "mödosamt");});
test("mödrar -> mödr", function() {deepEqual( Stem("mödrar"), "mödr");});
test("möj -> möj", function() {deepEqual( Stem("möj"), "möj");});
test("möjliga -> möj", function() {deepEqual( Stem("möjliga"), "möj");});
test("möjligast -> möj", function() {deepEqual( Stem("möjligast"), "möj");});
test("möjligaste -> möj", function() {deepEqual( Stem("möjligaste"), "möj");});
test("möjligen -> möj", function() {deepEqual( Stem("möjligen"), "möj");});
test("möjlighet -> möj", function() {deepEqual( Stem("möjlighet"), "möj");});
test("möjligheten -> möj", function() {deepEqual( Stem("möjligheten"), "möj");});
test("möjligheter -> möj", function() {deepEqual( Stem("möjligheter"), "möj");});
test("möjligt -> möj", function() {deepEqual( Stem("möjligt"), "möj");});
test("möjligtvis -> möjligtvis", function() {deepEqual( Stem("möjligtvis"), "möjligtvis");});
test("möjllgt -> möjllg", function() {deepEqual( Stem("möjllgt"), "möjllg");});
test("mönster -> mönst", function() {deepEqual( Stem("mönster"), "mönst");});
test("mönstrade -> mönstr", function() {deepEqual( Stem("mönstrade"), "mönstr");});
test("mönstrande -> mönstr", function() {deepEqual( Stem("mönstrande"), "mönstr");});
test("mönstret -> mönstret", function() {deepEqual( Stem("mönstret"), "mönstret");});
test("mönstring -> mönstring", function() {deepEqual( Stem("mönstring"), "mönstring");});
test("mör -> mör", function() {deepEqual( Stem("mör"), "mör");});
test("mörare -> mör", function() {deepEqual( Stem("mörare"), "mör");});
test("mörbultade -> mörbult", function() {deepEqual( Stem("mörbultade"), "mörbult");});
test("mörda -> mörd", function() {deepEqual( Stem("mörda"), "mörd");});
test("mördande -> mörd", function() {deepEqual( Stem("mördande"), "mörd");});
test("mördar -> mörd", function() {deepEqual( Stem("mördar"), "mörd");});
test("mördare -> mörd", function() {deepEqual( Stem("mördare"), "mörd");});
test("mördarekula -> mördarekul", function() {deepEqual( Stem("mördarekula"), "mördarekul");});
test("mördaren -> mörd", function() {deepEqual( Stem("mördaren"), "mörd");});
test("mördares -> mördar", function() {deepEqual( Stem("mördares"), "mördar");});
test("mördarn -> mördarn", function() {deepEqual( Stem("mördarn"), "mördarn");});
test("mördarne -> mörd", function() {deepEqual( Stem("mördarne"), "mörd");});
test("mörk -> mörk", function() {deepEqual( Stem("mörk"), "mörk");});
test("mörka -> mörk", function() {deepEqual( Stem("mörka"), "mörk");});
test("mörkare -> mörk", function() {deepEqual( Stem("mörkare"), "mörk");});
test("mörkaste -> mörk", function() {deepEqual( Stem("mörkaste"), "mörk");});
test("mörkbla -> mörkbl", function() {deepEqual( Stem("mörkbla"), "mörkbl");});
test("mörkblå -> mörkblå", function() {deepEqual( Stem("mörkblå"), "mörkblå");});
test("mörkblåglänsande -> mörkblågläns", function() {deepEqual( Stem("mörkblåglänsande"), "mörkblågläns");});
test("mörkbruna -> mörkbrun", function() {deepEqual( Stem("mörkbruna"), "mörkbrun");});
test("mörkbrunt -> mörkbrunt", function() {deepEqual( Stem("mörkbrunt"), "mörkbrunt");});
test("mörke -> mörk", function() {deepEqual( Stem("mörke"), "mörk");});
test("mörker -> mörk", function() {deepEqual( Stem("mörker"), "mörk");});
test("mörkgrå -> mörkgrå", function() {deepEqual( Stem("mörkgrå"), "mörkgrå");});
test("mörkgrön -> mörkgrön", function() {deepEqual( Stem("mörkgrön"), "mörkgrön");});
test("mörkhårig -> mörkhår", function() {deepEqual( Stem("mörkhårig"), "mörkhår");});
test("mörklagd -> mörklag", function() {deepEqual( Stem("mörklagd"), "mörklag");});
test("mörkna -> mörkn", function() {deepEqual( Stem("mörkna"), "mörkn");});
test("mörknade -> mörkn", function() {deepEqual( Stem("mörknade"), "mörkn");});
test("mörknande -> mörkn", function() {deepEqual( Stem("mörknande"), "mörkn");});
test("mörknar -> mörkn", function() {deepEqual( Stem("mörknar"), "mörkn");});
test("mörknat -> mörkn", function() {deepEqual( Stem("mörknat"), "mörkn");});
test("mörkningen -> mörkning", function() {deepEqual( Stem("mörkningen"), "mörkning");});
test("mörkrer -> mörkr", function() {deepEqual( Stem("mörkrer"), "mörkr");});
test("mörkret -> mörkret", function() {deepEqual( Stem("mörkret"), "mörkret");});
test("mörkröd -> mörkröd", function() {deepEqual( Stem("mörkröd"), "mörkröd");});
test("mörkröda -> mörkröd", function() {deepEqual( Stem("mörkröda"), "mörkröd");});
test("mörksamt -> mörksamt", function() {deepEqual( Stem("mörksamt"), "mörksamt");});
test("mörksens -> mörks", function() {deepEqual( Stem("mörksens"), "mörks");});
test("mörkt -> mörk", function() {deepEqual( Stem("mörkt"), "mörk");});
test("mös -> mös", function() {deepEqual( Stem("mös"), "mös");});
test("möss -> möss", function() {deepEqual( Stem("möss"), "möss");});
test("mössa -> möss", function() {deepEqual( Stem("mössa"), "möss");});
test("mössan -> mössan", function() {deepEqual( Stem("mössan"), "mössan");});
test("möta -> möt", function() {deepEqual( Stem("möta"), "möt");});
test("mötande -> möt", function() {deepEqual( Stem("mötande"), "möt");});
test("mötas -> möt", function() {deepEqual( Stem("mötas"), "möt");});
test("möte -> möt", function() {deepEqual( Stem("möte"), "möt");});
test("möten -> möt", function() {deepEqual( Stem("möten"), "möt");});
test("mötena -> möten", function() {deepEqual( Stem("mötena"), "möten");});
test("möter -> möt", function() {deepEqual( Stem("möter"), "möt");});
test("mötes -> möt", function() {deepEqual( Stem("mötes"), "möt");});
test("mötesplats -> mötesplat", function() {deepEqual( Stem("mötesplats"), "mötesplat");});
test("mötesplatsen -> mötesplats", function() {deepEqual( Stem("mötesplatsen"), "mötesplats");});
test("mötet -> mötet", function() {deepEqual( Stem("mötet"), "mötet");});
test("möts -> möt", function() {deepEqual( Stem("möts"), "möt");});
test("mött -> mött", function() {deepEqual( Stem("mött"), "mött");});
test("mötte -> mött", function() {deepEqual( Stem("mötte"), "mött");});
test("möttes -> mött", function() {deepEqual( Stem("möttes"), "mött");});
test("mötts -> mött", function() {deepEqual( Stem("mötts"), "mött");});
test("n -> n", function() {deepEqual( Stem("n"), "n");});
test("na -> na", function() {deepEqual( Stem("na"), "na");});
test("nacke -> nack", function() {deepEqual( Stem("nacke"), "nack");});
test("nacken -> nack", function() {deepEqual( Stem("nacken"), "nack");});
test("nackens -> nack", function() {deepEqual( Stem("nackens"), "nack");});
test("nackstyf -> nackstyf", function() {deepEqual( Stem("nackstyf"), "nackstyf");});
test("nad -> nad", function() {deepEqual( Stem("nad"), "nad");});
test("nadde -> nadd", function() {deepEqual( Stem("nadde"), "nadd");});
test("naddes -> nadd", function() {deepEqual( Stem("naddes"), "nadd");});
test("nade -> nad", function() {deepEqual( Stem("nade"), "nad");});
test("nadelön -> nadelön", function() {deepEqual( Stem("nadelön"), "nadelön");});
test("naden -> nad", function() {deepEqual( Stem("naden"), "nad");});
test("nader -> nad", function() {deepEqual( Stem("nader"), "nad");});
test("nadig -> nad", function() {deepEqual( Stem("nadig"), "nad");});
test("nafsade -> nafs", function() {deepEqual( Stem("nafsade"), "nafs");});
test("nafsar -> nafs", function() {deepEqual( Stem("nafsar"), "nafs");});
test("nafsat -> nafs", function() {deepEqual( Stem("nafsat"), "nafs");});
test("nagel -> nagel", function() {deepEqual( Stem("nagel"), "nagel");});
test("nageln -> nageln", function() {deepEqual( Stem("nageln"), "nageln");});
test("naggade -> nagg", function() {deepEqual( Stem("naggade"), "nagg");});
test("naggande -> nagg", function() {deepEqual( Stem("naggande"), "nagg");});
test("naglande -> nagl", function() {deepEqual( Stem("naglande"), "nagl");});
test("naglar -> nagl", function() {deepEqual( Stem("naglar"), "nagl");});
test("naglarna -> nagl", function() {deepEqual( Stem("naglarna"), "nagl");});
test("naglarne -> nagl", function() {deepEqual( Stem("naglarne"), "nagl");});
test("nagon -> nagon", function() {deepEqual( Stem("nagon"), "nagon");});
test("nagonsin -> nagonsin", function() {deepEqual( Stem("nagonsin"), "nagonsin");});
test("nagot -> nagot", function() {deepEqual( Stem("nagot"), "nagot");});
test("nagra -> nagr", function() {deepEqual( Stem("nagra"), "nagr");});
test("naiv -> naiv", function() {deepEqual( Stem("naiv"), "naiv");});
test("naiva -> naiv", function() {deepEqual( Stem("naiva"), "naiv");});
test("naivt -> naivt", function() {deepEqual( Stem("naivt"), "naivt");});
test("naken -> nak", function() {deepEqual( Stem("naken"), "nak");});
test("nakenhet -> naken", function() {deepEqual( Stem("nakenhet"), "naken");});
test("naket -> naket", function() {deepEqual( Stem("naket"), "naket");});
test("nakna -> nakn", function() {deepEqual( Stem("nakna"), "nakn");});
test("nakterhuset -> nakterhuset", function() {deepEqual( Stem("nakterhuset"), "nakterhuset");});
test("nalkades -> nalk", function() {deepEqual( Stem("nalkades"), "nalk");});
test("nalkas -> nalk", function() {deepEqual( Stem("nalkas"), "nalk");});
test("namn -> namn", function() {deepEqual( Stem("namn"), "namn");});
test("namnen -> namn", function() {deepEqual( Stem("namnen"), "namn");});
test("namnet -> namnet", function() {deepEqual( Stem("namnet"), "namnet");});
test("namnlös -> namnlös", function() {deepEqual( Stem("namnlös"), "namnlös");});
test("namnlöst -> namnlös", function() {deepEqual( Stem("namnlöst"), "namnlös");});
test("namnsdag -> namnsdag", function() {deepEqual( Stem("namnsdag"), "namnsdag");});
test("namnsdagar -> namnsdag", function() {deepEqual( Stem("namnsdagar"), "namnsdag");});
test("namnteckningar -> namnteckning", function() {deepEqual( Stem("namnteckningar"), "namnteckning");});
test("nan -> nan", function() {deepEqual( Stem("nan"), "nan");});
test("nande -> nand", function() {deepEqual( Stem("nande"), "nand");});
test("nankinsbyxor -> nankinsbyx", function() {deepEqual( Stem("nankinsbyxor"), "nankinsbyx");});
test("nanna -> nann", function() {deepEqual( Stem("nanna"), "nann");});
test("nannas -> nann", function() {deepEqual( Stem("nannas"), "nann");});
test("nans -> nan", function() {deepEqual( Stem("nans"), "nan");});
test("napoleon -> napoleon", function() {deepEqual( Stem("napoleon"), "napoleon");});
test("napoleons -> napoleon", function() {deepEqual( Stem("napoleons"), "napoleon");});
test("napoleonsbild -> napoleonsbild", function() {deepEqual( Stem("napoleonsbild"), "napoleonsbild");});
test("napp -> napp", function() {deepEqual( Stem("napp"), "napp");});
test("nappa -> napp", function() {deepEqual( Stem("nappa"), "napp");});
test("nappte -> nappt", function() {deepEqual( Stem("nappte"), "nappt");});
test("nar -> nar", function() {deepEqual( Stem("nar"), "nar");});
test("nara -> nar", function() {deepEqual( Stem("nara"), "nar");});
test("narciss -> narciss", function() {deepEqual( Stem("narciss"), "narciss");});
test("narcissism -> narcissism", function() {deepEqual( Stem("narcissism"), "narcissism");});
test("narkosmasken -> narkosmask", function() {deepEqual( Stem("narkosmasken"), "narkosmask");});
test("narmn -> narmn", function() {deepEqual( Stem("narmn"), "narmn");});
test("narna -> narn", function() {deepEqual( Stem("narna"), "narn");});
test("narr -> narr", function() {deepEqual( Stem("narr"), "narr");});
test("narra -> narr", function() {deepEqual( Stem("narra"), "narr");});
test("narrade -> narr", function() {deepEqual( Stem("narrade"), "narr");});
test("narrades -> narr", function() {deepEqual( Stem("narrades"), "narr");});
test("narraktiga -> narrakt", function() {deepEqual( Stem("narraktiga"), "narrakt");});
test("narraktigheterna -> narrakt", function() {deepEqual( Stem("narraktigheterna"), "narrakt");});
test("narrar -> narr", function() {deepEqual( Stem("narrar"), "narr");});
test("narras -> narr", function() {deepEqual( Stem("narras"), "narr");});
test("narrat -> narr", function() {deepEqual( Stem("narrat"), "narr");});
test("narrats -> narrat", function() {deepEqual( Stem("narrats"), "narrat");});
test("narren -> narr", function() {deepEqual( Stem("narren"), "narr");});
test("narri -> narri", function() {deepEqual( Stem("narri"), "narri");});
test("narrklocka -> narrklock", function() {deepEqual( Stem("narrklocka"), "narrklock");});
test("nasaltoner -> nasalton", function() {deepEqual( Stem("nasaltoner"), "nasalton");});
test("nasta -> nast", function() {deepEqual( Stem("nasta"), "nast");});
test("nastan -> nastan", function() {deepEqual( Stem("nastan"), "nastan");});
test("nat -> nat", function() {deepEqual( Stem("nat"), "nat");});
test("natarligtvis -> natarligtvis", function() {deepEqual( Stem("natarligtvis"), "natarligtvis");});
test("natet -> natet", function() {deepEqual( Stem("natet"), "natet");});
test("nationaleko -> nationaleko", function() {deepEqual( Stem("nationaleko"), "nationaleko");});
test("nationers -> nationer", function() {deepEqual( Stem("nationers"), "nationer");});
test("nations -> nation", function() {deepEqual( Stem("nations"), "nation");});
test("natorligtvis -> natorligtvis", function() {deepEqual( Stem("natorligtvis"), "natorligtvis");});
test("natt -> natt", function() {deepEqual( Stem("natt"), "natt");});
test("nattblå -> nattblå", function() {deepEqual( Stem("nattblå"), "nattblå");});
test("nattcll -> nattcll", function() {deepEqual( Stem("nattcll"), "nattcll");});
test("nattdaggen -> nattdagg", function() {deepEqual( Stem("nattdaggen"), "nattdagg");});
test("nattdrakt -> nattdrak", function() {deepEqual( Stem("nattdrakt"), "nattdrak");});
test("nattdräkt -> nattdräk", function() {deepEqual( Stem("nattdräkt"), "nattdräk");});
test("nattduksbord -> nattduksbord", function() {deepEqual( Stem("nattduksbord"), "nattduksbord");});
test("nattduksbordet -> nattduksbordet", function() {deepEqual( Stem("nattduksbordet"), "nattduksbordet");});
test("natten -> natt", function() {deepEqual( Stem("natten"), "natt");});
test("nattens -> natt", function() {deepEqual( Stem("nattens"), "natt");});
test("nattetid -> nattetid", function() {deepEqual( Stem("nattetid"), "nattetid");});
test("nattfjäril -> nattfjäril", function() {deepEqual( Stem("nattfjäril"), "nattfjäril");});
test("nattfjäriln -> nattfjäriln", function() {deepEqual( Stem("nattfjäriln"), "nattfjäriln");});
test("nattglim -> nattglim", function() {deepEqual( Stem("nattglim"), "nattglim");});
test("natthämtning -> natthämtning", function() {deepEqual( Stem("natthämtning"), "natthämtning");});
test("nattkappor -> nattkapp", function() {deepEqual( Stem("nattkappor"), "nattkapp");});
test("nattlig -> natt", function() {deepEqual( Stem("nattlig"), "natt");});
test("nattliga -> natt", function() {deepEqual( Stem("nattliga"), "natt");});
test("nattligt -> natt", function() {deepEqual( Stem("nattligt"), "natt");});
test("nattlinne -> nattlin", function() {deepEqual( Stem("nattlinne"), "nattlin");});
test("nattlinnet -> nattlinnet", function() {deepEqual( Stem("nattlinnet"), "nattlinnet");});
test("nattluften -> nattluft", function() {deepEqual( Stem("nattluften"), "nattluft");});
test("nattmössan -> nattmössan", function() {deepEqual( Stem("nattmössan"), "nattmössan");});
test("nattrock -> nattrock", function() {deepEqual( Stem("nattrock"), "nattrock");});
test("nattrockar -> nattrock", function() {deepEqual( Stem("nattrockar"), "nattrock");});
test("nattrocken -> nattrock", function() {deepEqual( Stem("nattrocken"), "nattrock");});
test("nattrocksfickan -> nattrocksfickan", function() {deepEqual( Stem("nattrocksfickan"), "nattrocksfickan");});
test("nattrocksfragmenterna -> nattrocksfragment", function() {deepEqual( Stem("nattrocksfragmenterna"), "nattrocksfragment");});
test("nattröja -> nattröj", function() {deepEqual( Stem("nattröja"), "nattröj");});
test("natts -> natt", function() {deepEqual( Stem("natts"), "natt");});
test("nattskjorta -> nattskjort", function() {deepEqual( Stem("nattskjorta"), "nattskjort");});
test("nattskymningen -> nattskymning", function() {deepEqual( Stem("nattskymningen"), "nattskymning");});
test("nattstuga -> nattstug", function() {deepEqual( Stem("nattstuga"), "nattstug");});
test("nattsvirare -> nattsvir", function() {deepEqual( Stem("nattsvirare"), "nattsvir");});
test("nattvak -> nattvak", function() {deepEqual( Stem("nattvak"), "nattvak");});
test("nattvakt -> nattvak", function() {deepEqual( Stem("nattvakt"), "nattvak");});
test("nattvandrerska -> nattvandrersk", function() {deepEqual( Stem("nattvandrerska"), "nattvandrersk");});
test("nattvarden -> nattvard", function() {deepEqual( Stem("nattvarden"), "nattvard");});
test("nattvardens -> nattvard", function() {deepEqual( Stem("nattvardens"), "nattvard");});
test("nattvardsbaciller -> nattvardsbacill", function() {deepEqual( Stem("nattvardsbaciller"), "nattvardsbacill");});
test("nattvardsfrågan -> nattvardsfrågan", function() {deepEqual( Stem("nattvardsfrågan"), "nattvardsfrågan");});
test("nattvardsgäst -> nattvardsgäst", function() {deepEqual( Stem("nattvardsgäst"), "nattvardsgäst");});
test("nattvardsgång -> nattvardsgång", function() {deepEqual( Stem("nattvardsgång"), "nattvardsgång");});
test("nattvardskalk -> nattvardskalk", function() {deepEqual( Stem("nattvardskalk"), "nattvardskalk");});
test("nattvardskapslar -> nattvardskapsl", function() {deepEqual( Stem("nattvardskapslar"), "nattvardskapsl");});
test("nattvardsvinet -> nattvardsvinet", function() {deepEqual( Stem("nattvardsvinet"), "nattvardsvinet");});
test("nattvind -> nattvind", function() {deepEqual( Stem("nattvind"), "nattvind");});
test("nattvinden -> nattvind", function() {deepEqual( Stem("nattvinden"), "nattvind");});
test("natur -> natur", function() {deepEqual( Stem("natur"), "natur");});
test("naturbarnet -> naturbarnet", function() {deepEqual( Stem("naturbarnet"), "naturbarnet");});
test("naturbehov -> naturbehov", function() {deepEqual( Stem("naturbehov"), "naturbehov");});
test("naturen -> natur", function() {deepEqual( Stem("naturen"), "natur");});
test("naturens -> natur", function() {deepEqual( Stem("naturens"), "natur");});
test("naturer -> natur", function() {deepEqual( Stem("naturer"), "natur");});
test("naturgåfvor -> naturgåfv", function() {deepEqual( Stem("naturgåfvor"), "naturgåfv");});
test("naturkrafter -> naturkraft", function() {deepEqual( Stem("naturkrafter"), "naturkraft");});
test("naturkunnighet -> naturkunn", function() {deepEqual( Stem("naturkunnighet"), "naturkunn");});
test("naturl -> naturl", function() {deepEqual( Stem("naturl"), "naturl");});
test("naturlig -> natur", function() {deepEqual( Stem("naturlig"), "natur");});
test("naturliga -> natur", function() {deepEqual( Stem("naturliga"), "natur");});
test("naturligt -> natur", function() {deepEqual( Stem("naturligt"), "natur");});
test("naturligtns -> naturligtn", function() {deepEqual( Stem("naturligtns"), "naturligtn");});
test("naturligtvis -> naturligtvis", function() {deepEqual( Stem("naturligtvis"), "naturligtvis");});
test("naturskönhet -> naturskön", function() {deepEqual( Stem("naturskönhet"), "naturskön");});
test("navarra -> navarr", function() {deepEqual( Stem("navarra"), "navarr");});
test("navel -> navel", function() {deepEqual( Stem("navel"), "navel");});
test("naveln -> naveln", function() {deepEqual( Stem("naveln"), "naveln");});
test("navelsträng -> navelsträng", function() {deepEqual( Stem("navelsträng"), "navelsträng");});
test("navigation -> navigation", function() {deepEqual( Stem("navigation"), "navigation");});
test("navigationen -> navigation", function() {deepEqual( Stem("navigationen"), "navigation");});
test("nazir -> nazir", function() {deepEqual( Stem("nazir"), "nazir");});
test("ncs -> ncs", function() {deepEqual( Stem("ncs"), "ncs");});
test("ndade -> ndad", function() {deepEqual( Stem("ndade"), "ndad");});
test("ndgon -> ndgon", function() {deepEqual( Stem("ndgon"), "ndgon");});
test("ne -> ne", function() {deepEqual( Stem("ne"), "ne");});
test("necken -> neck", function() {deepEqual( Stem("necken"), "neck");});
test("neckens -> neck", function() {deepEqual( Stem("neckens"), "neck");});
test("neckros -> neckro", function() {deepEqual( Stem("neckros"), "neckro");});
test("neckrosor -> neckros", function() {deepEqual( Stem("neckrosor"), "neckros");});
test("ned -> ned", function() {deepEqual( Stem("ned"), "ned");});
test("nedan -> nedan", function() {deepEqual( Stem("nedan"), "nedan");});
test("nedanför -> nedanför", function() {deepEqual( Stem("nedanför"), "nedanför");});
test("nedanom -> nedanom", function() {deepEqual( Stem("nedanom"), "nedanom");});
test("nedanstående -> nedanståend", function() {deepEqual( Stem("nedanstående"), "nedanståend");});
test("nedat -> ned", function() {deepEqual( Stem("nedat"), "ned");});
test("nedbojda -> nedbojd", function() {deepEqual( Stem("nedbojda"), "nedbojd");});
test("nedborrade -> nedborr", function() {deepEqual( Stem("nedborrade"), "nedborr");});
test("nedböjd -> nedböjd", function() {deepEqual( Stem("nedböjd"), "nedböjd");});
test("nedböjda -> nedböjd", function() {deepEqual( Stem("nedböjda"), "nedböjd");});
test("nedböjde -> nedböjd", function() {deepEqual( Stem("nedböjde"), "nedböjd");});
test("nedböjt -> nedböjt", function() {deepEqual( Stem("nedböjt"), "nedböjt");});
test("neddalat -> neddal", function() {deepEqual( Stem("neddalat"), "neddal");});
test("neddignade -> neddign", function() {deepEqual( Stem("neddignade"), "neddign");});
test("neddragen -> neddrag", function() {deepEqual( Stem("neddragen"), "neddrag");});
test("neddragna -> neddragn", function() {deepEqual( Stem("neddragna"), "neddragn");});
test("nederlag -> nederlag", function() {deepEqual( Stem("nederlag"), "nederlag");});
test("nedersta -> nederst", function() {deepEqual( Stem("nedersta"), "nederst");});
test("nedfallen -> nedfall", function() {deepEqual( Stem("nedfallen"), "nedfall");});
test("nedfallna -> nedfalln", function() {deepEqual( Stem("nedfallna"), "nedfalln");});
test("nedfälda -> nedfäld", function() {deepEqual( Stem("nedfälda"), "nedfäld");});
test("nedföll -> nedföll", function() {deepEqual( Stem("nedföll"), "nedföll");});
test("nedföllo -> nedföllo", function() {deepEqual( Stem("nedföllo"), "nedföllo");});
test("nedför -> nedför", function() {deepEqual( Stem("nedför"), "nedför");});
test("nedgick -> nedgick", function() {deepEqual( Stem("nedgick"), "nedgick");});
test("nedgrävd -> nedgrävd", function() {deepEqual( Stem("nedgrävd"), "nedgrävd");});
test("nedgående -> nedgåend", function() {deepEqual( Stem("nedgående"), "nedgåend");});
test("nedgång -> nedgång", function() {deepEqual( Stem("nedgång"), "nedgång");});
test("nedgår -> nedgår", function() {deepEqual( Stem("nedgår"), "nedgår");});
test("nedhalade -> nedhal", function() {deepEqual( Stem("nedhalade"), "nedhal");});
test("nedhukad -> nedhuk", function() {deepEqual( Stem("nedhukad"), "nedhuk");});
test("nedhäng -> nedhäng", function() {deepEqual( Stem("nedhäng"), "nedhäng");});
test("nedifrån -> nedifrån", function() {deepEqual( Stem("nedifrån"), "nedifrån");});
test("nedkommen -> nedkomm", function() {deepEqual( Stem("nedkommen"), "nedkomm");});
test("nedlade -> nedl", function() {deepEqual( Stem("nedlade"), "nedl");});
test("nedlagt -> nedlag", function() {deepEqual( Stem("nedlagt"), "nedlag");});
test("nedlutad -> nedlut", function() {deepEqual( Stem("nedlutad"), "nedlut");});
test("nedlägga -> nedlägg", function() {deepEqual( Stem("nedlägga"), "nedlägg");});
test("nedlåta -> nedlåt", function() {deepEqual( Stem("nedlåta"), "nedlåt");});
test("nedlåtande -> nedlåt", function() {deepEqual( Stem("nedlåtande"), "nedlåt");});
test("nedlåtenhet -> nedlåten", function() {deepEqual( Stem("nedlåtenhet"), "nedlåten");});
test("nedlör -> nedlör", function() {deepEqual( Stem("nedlör"), "nedlör");});
test("nedmyllades -> nedmyll", function() {deepEqual( Stem("nedmyllades"), "nedmyll");});
test("nedom -> nedom", function() {deepEqual( Stem("nedom"), "nedom");});
test("nedpackning -> nedpackning", function() {deepEqual( Stem("nedpackning"), "nedpackning");});
test("nedra -> nedr", function() {deepEqual( Stem("nedra"), "nedr");});
test("nedramlade -> nedraml", function() {deepEqual( Stem("nedramlade"), "nedraml");});
test("nedre -> nedr", function() {deepEqual( Stem("nedre"), "nedr");});
test("nedriga -> nedr", function() {deepEqual( Stem("nedriga"), "nedr");});
test("nedrigt -> nedr", function() {deepEqual( Stem("nedrigt"), "nedr");});
test("nedring -> nedring", function() {deepEqual( Stem("nedring"), "nedring");});
test("nedsatt -> nedsat", function() {deepEqual( Stem("nedsatt"), "nedsat");});
test("nedsjunka -> nedsjunk", function() {deepEqual( Stem("nedsjunka"), "nedsjunk");});
test("nedsjunken -> nedsjunk", function() {deepEqual( Stem("nedsjunken"), "nedsjunk");});
test("nedsjunket -> nedsjunket", function() {deepEqual( Stem("nedsjunket"), "nedsjunket");});
test("nedsjunkit -> nedsjunkit", function() {deepEqual( Stem("nedsjunkit"), "nedsjunkit");});
test("nedsjönk -> nedsjönk", function() {deepEqual( Stem("nedsjönk"), "nedsjönk");});
test("nedskjuten -> nedskjut", function() {deepEqual( Stem("nedskjuten"), "nedskjut");});
test("nedskrifvit -> nedskrifvit", function() {deepEqual( Stem("nedskrifvit"), "nedskrifvit");});
test("nedslagen -> nedslag", function() {deepEqual( Stem("nedslagen"), "nedslag");});
test("nedslagenhet -> nedslagen", function() {deepEqual( Stem("nedslagenhet"), "nedslagen");});
test("nedslagna -> nedslagn", function() {deepEqual( Stem("nedslagna"), "nedslagn");});
test("nedslungad -> nedslung", function() {deepEqual( Stem("nedslungad"), "nedslung");});
test("nedslående -> nedslåend", function() {deepEqual( Stem("nedslående"), "nedslåend");});
test("nedsmutsa -> nedsmuts", function() {deepEqual( Stem("nedsmutsa"), "nedsmuts");});
test("nedstuckna -> nedstuckn", function() {deepEqual( Stem("nedstuckna"), "nedstuckn");});
test("nedstämd -> nedstämd", function() {deepEqual( Stem("nedstämd"), "nedstämd");});
test("nedstämdhet -> nedstämd", function() {deepEqual( Stem("nedstämdhet"), "nedstämd");});
test("nedstämmer -> nedstämm", function() {deepEqual( Stem("nedstämmer"), "nedstämm");});
test("nedstänkt -> nedstänk", function() {deepEqual( Stem("nedstänkt"), "nedstänk");});
test("nedsänkt -> nedsänk", function() {deepEqual( Stem("nedsänkt"), "nedsänk");});
test("nedsättande -> nedsät", function() {deepEqual( Stem("nedsättande"), "nedsät");});
test("nedtill -> nedtill", function() {deepEqual( Stem("nedtill"), "nedtill");});
test("nedtog -> nedtog", function() {deepEqual( Stem("nedtog"), "nedtog");});
test("nedtryckt -> nedtryck", function() {deepEqual( Stem("nedtryckt"), "nedtryck");});
test("nedtryckta -> nedtryck", function() {deepEqual( Stem("nedtryckta"), "nedtryck");});
test("nedtrycktas -> nedtryck", function() {deepEqual( Stem("nedtrycktas"), "nedtryck");});
test("nedtryckte -> nedtryck", function() {deepEqual( Stem("nedtryckte"), "nedtryck");});
test("nedtyngd -> nedtyng", function() {deepEqual( Stem("nedtyngd"), "nedtyng");});
test("nedtystad -> nedtyst", function() {deepEqual( Stem("nedtystad"), "nedtyst");});
test("nedviken -> nedvik", function() {deepEqual( Stem("nedviken"), "nedvik");});
test("nedvänd -> nedvänd", function() {deepEqual( Stem("nedvänd"), "nedvänd");});
test("nedvändt -> nedvänd", function() {deepEqual( Stem("nedvändt"), "nedvänd");});
test("nedvänt -> nedvänt", function() {deepEqual( Stem("nedvänt"), "nedvänt");});
test("nedåt -> nedåt", function() {deepEqual( Stem("nedåt"), "nedåt");});
test("nee -> nee", function() {deepEqual( Stem("nee"), "nee");});
test("neg -> neg", function() {deepEqual( Stem("neg"), "neg");});
test("neger -> neg", function() {deepEqual( Stem("neger"), "neg");});
test("negerhår -> negerhår", function() {deepEqual( Stem("negerhår"), "negerhår");});
test("negertroll -> negertroll", function() {deepEqual( Stem("negertroll"), "negertroll");});
test("negligeer -> neglige", function() {deepEqual( Stem("negligeer"), "neglige");});
test("negress -> negress", function() {deepEqual( Stem("negress"), "negress");});
test("negresser -> negress", function() {deepEqual( Stem("negresser"), "negress");});
test("nehej -> nehej", function() {deepEqual( Stem("nehej"), "nehej");});
test("nej -> nej", function() {deepEqual( Stem("nej"), "nej");});
test("nejd -> nejd", function() {deepEqual( Stem("nejd"), "nejd");});
test("nejden -> nejd", function() {deepEqual( Stem("nejden"), "nejd");});
test("nejlika -> nejlik", function() {deepEqual( Stem("nejlika"), "nejlik");});
test("nejlikdoft -> nejlikdoft", function() {deepEqual( Stem("nejlikdoft"), "nejlikdoft");});
test("nejlikor -> nejlik", function() {deepEqual( Stem("nejlikor"), "nejlik");});
test("neka -> nek", function() {deepEqual( Stem("neka"), "nek");});
test("nekade -> nek", function() {deepEqual( Stem("nekade"), "nek");});
test("nekande -> nek", function() {deepEqual( Stem("nekande"), "nek");});
test("nekar -> nek", function() {deepEqual( Stem("nekar"), "nek");});
test("nekas -> nek", function() {deepEqual( Stem("nekas"), "nek");});
test("nekat -> nek", function() {deepEqual( Stem("nekat"), "nek");});
test("nelly -> nelly", function() {deepEqual( Stem("nelly"), "nelly");});
test("nem -> nem", function() {deepEqual( Stem("nem"), "nem");});
test("nemligen -> nem", function() {deepEqual( Stem("nemligen"), "nem");});
test("nen -> nen", function() {deepEqual( Stem("nen"), "nen");});
test("ner -> ner", function() {deepEqual( Stem("ner"), "ner");});
test("nere -> ner", function() {deepEqual( Stem("nere"), "ner");});
test("nereus -> nereus", function() {deepEqual( Stem("nereus"), "nereus");});
test("nerfälld -> nerfälld", function() {deepEqual( Stem("nerfälld"), "nerfälld");});
test("nerifrån -> nerifrån", function() {deepEqual( Stem("nerifrån"), "nerifrån");});
test("nerligt -> ner", function() {deepEqual( Stem("nerligt"), "ner");});
test("nersolkade -> nersolk", function() {deepEqual( Stem("nersolkade"), "nersolk");});
test("nersuttet -> nersuttet", function() {deepEqual( Stem("nersuttet"), "nersuttet");});
test("nersölade -> nersöl", function() {deepEqual( Stem("nersölade"), "nersöl");});
test("nertagna -> nertagn", function() {deepEqual( Stem("nertagna"), "nertagn");});
test("nerver -> nerv", function() {deepEqual( Stem("nerver"), "nerv");});
test("nervlös -> nervlös", function() {deepEqual( Stem("nervlös"), "nervlös");});
test("nervsjuka -> nervsjuk", function() {deepEqual( Stem("nervsjuka"), "nervsjuk");});
test("nervtrådar -> nervtråd", function() {deepEqual( Stem("nervtrådar"), "nervtråd");});
test("nervvärk -> nervvärk", function() {deepEqual( Stem("nervvärk"), "nervvärk");});
test("nervös -> nervös", function() {deepEqual( Stem("nervös"), "nervös");});
test("nervösa -> nervös", function() {deepEqual( Stem("nervösa"), "nervös");});
test("nervöst -> nervöst", function() {deepEqual( Stem("nervöst"), "nervöst");});
test("nes -> nes", function() {deepEqual( Stem("nes"), "nes");});
test("net -> net", function() {deepEqual( Stem("net"), "net");});
test("neta -> net", function() {deepEqual( Stem("neta"), "net");});
test("netas -> net", function() {deepEqual( Stem("netas"), "net");});
test("netty -> netty", function() {deepEqual( Stem("netty"), "netty");});
test("ni -> ni", function() {deepEqual( Stem("ni"), "ni");});
test("nia -> nia", function() {deepEqual( Stem("nia"), "nia");});
test("niais -> niais", function() {deepEqual( Stem("niais"), "niais");});
test("niaiserie -> niaiseri", function() {deepEqual( Stem("niaiserie"), "niaiseri");});
test("nic -> nic", function() {deepEqual( Stem("nic"), "nic");});
test("nicander -> nicand", function() {deepEqual( Stem("nicander"), "nicand");});
test("nick -> nick", function() {deepEqual( Stem("nick"), "nick");});
test("nicka -> nick", function() {deepEqual( Stem("nicka"), "nick");});
test("nickade -> nick", function() {deepEqual( Stem("nickade"), "nick");});
test("nickande -> nick", function() {deepEqual( Stem("nickande"), "nick");});
test("nickar -> nick", function() {deepEqual( Stem("nickar"), "nick");});
test("nickningar -> nickning", function() {deepEqual( Stem("nickningar"), "nickning");});
test("nietzsche -> nietzsch", function() {deepEqual( Stem("nietzsche"), "nietzsch");});
test("nigande -> nig", function() {deepEqual( Stem("nigande"), "nig");});
test("niger -> nig", function() {deepEqual( Stem("niger"), "nig");});
test("nigit -> nigit", function() {deepEqual( Stem("nigit"), "nigit");});
test("nigning -> nigning", function() {deepEqual( Stem("nigning"), "nigning");});
test("nikotin -> nikotin", function() {deepEqual( Stem("nikotin"), "nikotin");});
test("nils -> nil", function() {deepEqual( Stem("nils"), "nil");});
test("nimma -> nimm", function() {deepEqual( Stem("nimma"), "nimm");});
test("nimmelse -> nimm", function() {deepEqual( Stem("nimmelse"), "nimm");});
test("ning -> ning", function() {deepEqual( Stem("ning"), "ning");});
test("ningar -> ning", function() {deepEqual( Stem("ningar"), "ning");});
test("ningarna -> ning", function() {deepEqual( Stem("ningarna"), "ning");});
test("ningen -> ning", function() {deepEqual( Stem("ningen"), "ning");});
test("ningskjol -> ningskjol", function() {deepEqual( Stem("ningskjol"), "ningskjol");});
test("ningsrum -> ningsrum", function() {deepEqual( Stem("ningsrum"), "ningsrum");});
test("ninkande -> nink", function() {deepEqual( Stem("ninkande"), "nink");});
test("nio -> nio", function() {deepEqual( Stem("nio"), "nio");});
test("nionde -> niond", function() {deepEqual( Stem("nionde"), "niond");});
test("nipper -> nipp", function() {deepEqual( Stem("nipper"), "nipp");});
test("nish -> nish", function() {deepEqual( Stem("nish"), "nish");});
test("niska -> nisk", function() {deepEqual( Stem("niska"), "nisk");});
test("niskor -> nisk", function() {deepEqual( Stem("niskor"), "nisk");});
test("niskorna -> nisk", function() {deepEqual( Stem("niskorna"), "nisk");});
test("nisse -> niss", function() {deepEqual( Stem("nisse"), "niss");});
test("nit -> nit", function() {deepEqual( Stem("nit"), "nit");});
test("nitet -> nitet", function() {deepEqual( Stem("nitet"), "nitet");});
test("nitisk -> nitisk", function() {deepEqual( Stem("nitisk"), "nitisk");});
test("nitiske -> nitisk", function() {deepEqual( Stem("nitiske"), "nitisk");});
test("nitton -> nitton", function() {deepEqual( Stem("nitton"), "nitton");});
test("nittonde -> nittond", function() {deepEqual( Stem("nittonde"), "nittond");});
test("nittonåriga -> nittonår", function() {deepEqual( Stem("nittonåriga"), "nittonår");});
test("njuratalg -> njuratalg", function() {deepEqual( Stem("njuratalg"), "njuratalg");});
test("njut -> njut", function() {deepEqual( Stem("njut"), "njut");});
test("njuta -> njut", function() {deepEqual( Stem("njuta"), "njut");});
test("njutande -> njut", function() {deepEqual( Stem("njutande"), "njut");});
test("njuter -> njut", function() {deepEqual( Stem("njuter"), "njut");});
test("njutit -> njutit", function() {deepEqual( Stem("njutit"), "njutit");});
test("njutning -> njutning", function() {deepEqual( Stem("njutning"), "njutning");});
test("njutningen -> njutning", function() {deepEqual( Stem("njutningen"), "njutning");});
test("njutningens -> njutning", function() {deepEqual( Stem("njutningens"), "njutning");});
test("njutningsfullt -> njutningsfull", function() {deepEqual( Stem("njutningsfullt"), "njutningsfull");});
test("njöt -> njöt", function() {deepEqual( Stem("njöt"), "njöt");});
test("njöto -> njöto", function() {deepEqual( Stem("njöto"), "njöto");});
test("nk -> nk", function() {deepEqual( Stem("nk"), "nk");});
test("nlan -> nlan", function() {deepEqual( Stem("nlan"), "nlan");});
test("nm -> nm", function() {deepEqual( Stem("nm"), "nm");});
test("nn -> nn", function() {deepEqual( Stem("nn"), "nn");});
test("nnan -> nnan", function() {deepEqual( Stem("nnan"), "nnan");});
test("nnelankoliskt -> nnelankolisk", function() {deepEqual( Stem("nnelankoliskt"), "nnelankolisk");});
test("nninnen -> nninn", function() {deepEqual( Stem("nninnen"), "nninn");});
test("no -> no", function() {deepEqual( Stem("no"), "no");});
test("noak -> noak", function() {deepEqual( Stem("noak"), "noak");});
test("nobel -> nobel", function() {deepEqual( Stem("nobel"), "nobel");});
test("nobelt -> nobelt", function() {deepEqual( Stem("nobelt"), "nobelt");});
test("nobla -> nobl", function() {deepEqual( Stem("nobla"), "nobl");});
test("noblaste -> nobl", function() {deepEqual( Stem("noblaste"), "nobl");});
test("nobless -> nobless", function() {deepEqual( Stem("nobless"), "nobless");});
test("nocturne -> nocturn", function() {deepEqual( Stem("nocturne"), "nocturn");});
test("nog -> nog", function() {deepEqual( Stem("nog"), "nog");});
test("noga -> nog", function() {deepEqual( Stem("noga"), "nog");});
test("noggrann -> noggran", function() {deepEqual( Stem("noggrann"), "noggran");});
test("noggranna -> noggran", function() {deepEqual( Stem("noggranna"), "noggran");});
test("noggrannhet -> noggran", function() {deepEqual( Stem("noggrannhet"), "noggran");});
test("noggrant -> noggrant", function() {deepEqual( Stem("noggrant"), "noggrant");});
test("nogräknad -> nogräkn", function() {deepEqual( Stem("nogräknad"), "nogräkn");});
test("nogräknade -> nogräkn", function() {deepEqual( Stem("nogräknade"), "nogräkn");});
test("nolla -> noll", function() {deepEqual( Stem("nolla"), "noll");});
test("nom -> nom", function() {deepEqual( Stem("nom"), "nom");});
test("nomi -> nomi", function() {deepEqual( Stem("nomi"), "nomi");});
test("non -> non", function() {deepEqual( Stem("non"), "non");});
test("nonchalant -> nonchalant", function() {deepEqual( Stem("nonchalant"), "nonchalant");});
test("nonsens -> nons", function() {deepEqual( Stem("nonsens"), "nons");});
test("nordan -> nordan", function() {deepEqual( Stem("nordan"), "nordan");});
test("nordenflycht -> nordenflycht", function() {deepEqual( Stem("nordenflycht"), "nordenflycht");});
test("nordens -> nord", function() {deepEqual( Stem("nordens"), "nord");});
test("nordiska -> nordisk", function() {deepEqual( Stem("nordiska"), "nordisk");});
test("nordstjärnan -> nordstjärnan", function() {deepEqual( Stem("nordstjärnan"), "nordstjärnan");});
test("nordstjärneriddare -> nordstjärnerid", function() {deepEqual( Stem("nordstjärneriddare"), "nordstjärnerid");});
test("nordvest -> nordvest", function() {deepEqual( Stem("nordvest"), "nordvest");});
test("nordväst -> nordväst", function() {deepEqual( Stem("nordväst"), "nordväst");});
test("nordvästans -> nordvästan", function() {deepEqual( Stem("nordvästans"), "nordvästan");});
test("nordösten -> nordöst", function() {deepEqual( Stem("nordösten"), "nordöst");});
test("norge -> norg", function() {deepEqual( Stem("norge"), "norg");});
test("normala -> normal", function() {deepEqual( Stem("normala"), "normal");});
test("norman -> norman", function() {deepEqual( Stem("norman"), "norman");});
test("normans -> norman", function() {deepEqual( Stem("normans"), "norman");});
test("normant -> normant", function() {deepEqual( Stem("normant"), "normant");});
test("norr -> norr", function() {deepEqual( Stem("norr"), "norr");});
test("norrbacka -> norrback", function() {deepEqual( Stem("norrbacka"), "norrback");});
test("norrbackaläckerheterna -> norrbackaläcker", function() {deepEqual( Stem("norrbackaläckerheterna"), "norrbackaläcker");});
test("norrbro -> norrbro", function() {deepEqual( Stem("norrbro"), "norrbro");});
test("norrköping -> norrköping", function() {deepEqual( Stem("norrköping"), "norrköping");});
test("norrland -> norrland", function() {deepEqual( Stem("norrland"), "norrland");});
test("norrländska -> norrländsk", function() {deepEqual( Stem("norrländska"), "norrländsk");});
test("norrmalmstorg -> norrmalmstorg", function() {deepEqual( Stem("norrmalmstorg"), "norrmalmstorg");});
test("norrmännen -> norrmän", function() {deepEqual( Stem("norrmännen"), "norrmän");});
test("norrström -> norrström", function() {deepEqual( Stem("norrström"), "norrström");});
test("norrtull -> norrtull", function() {deepEqual( Stem("norrtull"), "norrtull");});
test("norskt -> norsk", function() {deepEqual( Stem("norskt"), "norsk");});
test("nos -> nos", function() {deepEqual( Stem("nos"), "nos");});
test("nosade -> nos", function() {deepEqual( Stem("nosade"), "nos");});
test("nosande -> nos", function() {deepEqual( Stem("nosande"), "nos");});
test("nosar -> nos", function() {deepEqual( Stem("nosar"), "nos");});
test("nosen -> nos", function() {deepEqual( Stem("nosen"), "nos");});
test("noster -> nost", function() {deepEqual( Stem("noster"), "nost");});
test("not -> not", function() {deepEqual( Stem("not"), "not");});
test("nota -> not", function() {deepEqual( Stem("nota"), "not");});
test("notabiliteternas -> notabilitet", function() {deepEqual( Stem("notabiliteternas"), "notabilitet");});
test("notarie -> notari", function() {deepEqual( Stem("notarie"), "notari");});
test("notarien -> notari", function() {deepEqual( Stem("notarien"), "notari");});
test("notariens -> notari", function() {deepEqual( Stem("notariens"), "notari");});
test("notarieus -> notarieus", function() {deepEqual( Stem("notarieus"), "notarieus");});
test("notatien -> notati", function() {deepEqual( Stem("notatien"), "notati");});
test("notificerande -> notificer", function() {deepEqual( Stem("notificerande"), "notificer");});
test("notis -> notis", function() {deepEqual( Stem("notis"), "notis");});
test("notisen -> notis", function() {deepEqual( Stem("notisen"), "notis");});
test("notiser -> notis", function() {deepEqual( Stem("notiser"), "notis");});
test("notoriska -> notorisk", function() {deepEqual( Stem("notoriska"), "notorisk");});
test("notre -> notr", function() {deepEqual( Stem("notre"), "notr");});
test("nous -> nous", function() {deepEqual( Stem("nous"), "nous");});
test("noveller -> novell", function() {deepEqual( Stem("noveller"), "novell");});
test("novellförfattare -> novellförfat", function() {deepEqual( Stem("novellförfattare"), "novellförfat");});
test("november -> novemb", function() {deepEqual( Stem("november"), "novemb");});
test("novemberdag -> novemberdag", function() {deepEqual( Stem("novemberdag"), "novemberdag");});
test("nr -> nr", function() {deepEqual( Stem("nr"), "nr");});
test("nste -> nste", function() {deepEqual( Stem("nste"), "nste");});
test("ntya -> ntya", function() {deepEqual( Stem("ntya"), "ntya");});
test("ntötte -> ntött", function() {deepEqual( Stem("ntötte"), "ntött");});
test("nu -> nu", function() {deepEqual( Stem("nu"), "nu");});
test("nuet -> nuet", function() {deepEqual( Stem("nuet"), "nuet");});
test("nuft -> nuft", function() {deepEqual( Stem("nuft"), "nuft");});
test("nuftet -> nuftet", function() {deepEqual( Stem("nuftet"), "nuftet");});
test("nuförtiden -> nuförtid", function() {deepEqual( Stem("nuförtiden"), "nuförtid");});
test("numera -> numer", function() {deepEqual( Stem("numera"), "numer");});
test("nummer -> numm", function() {deepEqual( Stem("nummer"), "numm");});
test("nummerplåt -> nummerplåt", function() {deepEqual( Stem("nummerplåt"), "nummerplåt");});
test("nurna -> nurn", function() {deepEqual( Stem("nurna"), "nurn");});
test("nutid -> nutid", function() {deepEqual( Stem("nutid"), "nutid");});
test("nuvarande -> nuvar", function() {deepEqual( Stem("nuvarande"), "nuvar");});
test("nvts -> nvts", function() {deepEqual( Stem("nvts"), "nvts");});
test("ny -> ny", function() {deepEqual( Stem("ny"), "ny");});
test("nya -> nya", function() {deepEqual( Stem("nya"), "nya");});
test("nyans -> nyan", function() {deepEqual( Stem("nyans"), "nyan");});
test("nyanser -> nyans", function() {deepEqual( Stem("nyanser"), "nyans");});
test("nyare -> nyar", function() {deepEqual( Stem("nyare"), "nyar");});
test("nyaste -> nyast", function() {deepEqual( Stem("nyaste"), "nyast");});
test("nyck -> nyck", function() {deepEqual( Stem("nyck"), "nyck");});
test("nyckel -> nyckel", function() {deepEqual( Stem("nyckel"), "nyckel");});
test("nyckelhål -> nyckelhål", function() {deepEqual( Stem("nyckelhål"), "nyckelhål");});
test("nyckelhålet -> nyckelhålet", function() {deepEqual( Stem("nyckelhålet"), "nyckelhålet");});
test("nyckeln -> nyckeln", function() {deepEqual( Stem("nyckeln"), "nyckeln");});
test("nycken -> nyck", function() {deepEqual( Stem("nycken"), "nyck");});
test("nycker -> nyck", function() {deepEqual( Stem("nycker"), "nyck");});
test("nyckfull -> nyckfull", function() {deepEqual( Stem("nyckfull"), "nyckfull");});
test("nyckfulla -> nyckfull", function() {deepEqual( Stem("nyckfulla"), "nyckfull");});
test("nydukade -> nyduk", function() {deepEqual( Stem("nydukade"), "nyduk");});
test("nye -> nye", function() {deepEqual( Stem("nye"), "nye");});
test("nyfallen -> nyfall", function() {deepEqual( Stem("nyfallen"), "nyfall");});
test("nyfiken -> nyfik", function() {deepEqual( Stem("nyfiken"), "nyfik");});
test("nyfikenhet -> nyfiken", function() {deepEqual( Stem("nyfikenhet"), "nyfiken");});
test("nyfikenheten -> nyfiken", function() {deepEqual( Stem("nyfikenheten"), "nyfiken");});
test("nyfiket -> nyfiket", function() {deepEqual( Stem("nyfiket"), "nyfiket");});
test("nyfikna -> nyfikn", function() {deepEqual( Stem("nyfikna"), "nyfikn");});
test("nyfrälsta -> nyfrälst", function() {deepEqual( Stem("nyfrälsta"), "nyfrälst");});
test("nyfärgat -> nyfärg", function() {deepEqual( Stem("nyfärgat"), "nyfärg");});
test("nyfödd -> nyföd", function() {deepEqual( Stem("nyfödd"), "nyföd");});
test("nyfödda -> nyföd", function() {deepEqual( Stem("nyfödda"), "nyföd");});
test("nyföddas -> nyföd", function() {deepEqual( Stem("nyföddas"), "nyföd");});
test("nyförlovade -> nyförlov", function() {deepEqual( Stem("nyförlovade"), "nyförlov");});
test("nyfött -> nyföt", function() {deepEqual( Stem("nyfött"), "nyföt");});
test("nygatan -> nygatan", function() {deepEqual( Stem("nygatan"), "nygatan");});
test("nygifta -> nygift", function() {deepEqual( Stem("nygifta"), "nygift");});
test("nyhet -> nyhet", function() {deepEqual( Stem("nyhet"), "nyhet");});
test("nyheten -> nyhet", function() {deepEqual( Stem("nyheten"), "nyhet");});
test("nyhetens -> nyhet", function() {deepEqual( Stem("nyhetens"), "nyhet");});
test("nyheter -> nyhet", function() {deepEqual( Stem("nyheter"), "nyhet");});
test("nykomling -> nykomling", function() {deepEqual( Stem("nykomling"), "nykomling");});
test("nykommen -> nykomm", function() {deepEqual( Stem("nykommen"), "nykomm");});
test("nykomna -> nykomn", function() {deepEqual( Stem("nykomna"), "nykomn");});
test("nykomnas -> nykomn", function() {deepEqual( Stem("nykomnas"), "nykomn");});
test("nykter -> nykt", function() {deepEqual( Stem("nykter"), "nykt");});
test("nykterhetskalv -> nykterhetskalv", function() {deepEqual( Stem("nykterhetskalv"), "nykterhetskalv");});
test("nykterhetsskrifter -> nykterhetsskrift", function() {deepEqual( Stem("nykterhetsskrifter"), "nykterhetsskrift");});
test("nyktert -> nyktert", function() {deepEqual( Stem("nyktert"), "nyktert");});
test("nyktigam -> nyktigam", function() {deepEqual( Stem("nyktigam"), "nyktigam");});
test("nyktra -> nyktr", function() {deepEqual( Stem("nyktra"), "nyktr");});
test("nyktre -> nyktr", function() {deepEqual( Stem("nyktre"), "nyktr");});
test("nyligen -> nyl", function() {deepEqual( Stem("nyligen"), "nyl");});
test("nymf -> nymf", function() {deepEqual( Stem("nymf"), "nymf");});
test("nymfens -> nymf", function() {deepEqual( Stem("nymfens"), "nymf");});
test("nymodiga -> nymod", function() {deepEqual( Stem("nymodiga"), "nymod");});
test("nynna -> nynn", function() {deepEqual( Stem("nynna"), "nynn");});
test("nynnande -> nynn", function() {deepEqual( Stem("nynnande"), "nynn");});
test("nyo -> nyo", function() {deepEqual( Stem("nyo"), "nyo");});
test("nyomvända -> nyomvänd", function() {deepEqual( Stem("nyomvända"), "nyomvänd");});
test("nypa -> nyp", function() {deepEqual( Stem("nypa"), "nyp");});
test("nyper -> nyp", function() {deepEqual( Stem("nyper"), "nyp");});
test("nypon -> nypon", function() {deepEqual( Stem("nypon"), "nypon");});
test("nys -> nys", function() {deepEqual( Stem("nys"), "nys");});
test("nysilverbricka -> nysilverbrick", function() {deepEqual( Stem("nysilverbricka"), "nysilverbrick");});
test("nyskurade -> nyskur", function() {deepEqual( Stem("nyskurade"), "nyskur");});
test("nyskurat -> nyskur", function() {deepEqual( Stem("nyskurat"), "nyskur");});
test("nyss -> nyss", function() {deepEqual( Stem("nyss"), "nyss");});
test("nystade -> nyst", function() {deepEqual( Stem("nystade"), "nyst");});
test("nystan -> nystan", function() {deepEqual( Stem("nystan"), "nystan");});
test("nystfot -> nystfot", function() {deepEqual( Stem("nystfot"), "nystfot");});
test("nystrukna -> nystrukn", function() {deepEqual( Stem("nystrukna"), "nystrukn");});
test("nystädat -> nystäd", function() {deepEqual( Stem("nystädat"), "nystäd");});
test("nystärkt -> nystärk", function() {deepEqual( Stem("nystärkt"), "nystärk");});
test("nytra -> nytr", function() {deepEqual( Stem("nytra"), "nytr");});
test("nytt -> nytt", function() {deepEqual( Stem("nytt"), "nytt");});
test("nytta -> nytt", function() {deepEqual( Stem("nytta"), "nytt");});
test("nyttan -> nyttan", function() {deepEqual( Stem("nyttan"), "nyttan");});
test("nyttfödd -> nyttföd", function() {deepEqual( Stem("nyttfödd"), "nyttföd");});
test("nyttig -> nytt", function() {deepEqual( Stem("nyttig"), "nytt");});
test("nyttiga -> nytt", function() {deepEqual( Stem("nyttiga"), "nytt");});
test("nyttigare -> nytt", function() {deepEqual( Stem("nyttigare"), "nytt");});
test("nyttigt -> nytt", function() {deepEqual( Stem("nyttigt"), "nytt");});
test("nyttja -> nyttj", function() {deepEqual( Stem("nyttja"), "nyttj");});
test("nyttjade -> nyttj", function() {deepEqual( Stem("nyttjade"), "nyttj");});
test("nyttjande -> nyttj", function() {deepEqual( Stem("nyttjande"), "nyttj");});
test("nyttjas -> nyttj", function() {deepEqual( Stem("nyttjas"), "nyttj");});
test("nytända -> nytänd", function() {deepEqual( Stem("nytända"), "nytänd");});
test("nyvunna -> nyvun", function() {deepEqual( Stem("nyvunna"), "nyvun");});
test("nyväckta -> nyväck", function() {deepEqual( Stem("nyväckta"), "nyväck");});
test("nyåret -> nyåret", function() {deepEqual( Stem("nyåret"), "nyåret");});
test("nyårsafton -> nyårsafton", function() {deepEqual( Stem("nyårsafton"), "nyårsafton");});
test("nyårsny -> nyårsny", function() {deepEqual( Stem("nyårsny"), "nyårsny");});
test("näbb -> näbb", function() {deepEqual( Stem("näbb"), "näbb");});
test("näbbar -> näbb", function() {deepEqual( Stem("näbbar"), "näbb");});
test("näbben -> näbb", function() {deepEqual( Stem("näbben"), "näbb");});
test("näbbig -> näbb", function() {deepEqual( Stem("näbbig"), "näbb");});
test("näbbiga -> näbb", function() {deepEqual( Stem("näbbiga"), "näbb");});
test("näckblad -> näckbl", function() {deepEqual( Stem("näckblad"), "näckbl");});
test("näckens -> näck", function() {deepEqual( Stem("näckens"), "näck");});
test("näekros -> näekro", function() {deepEqual( Stem("näekros"), "näekro");});
test("näm -> näm", function() {deepEqual( Stem("näm"), "näm");});
test("nämde -> nämd", function() {deepEqual( Stem("nämde"), "nämd");});
test("nämlande -> näml", function() {deepEqual( Stem("nämlande"), "näml");});
test("nämligen -> näm", function() {deepEqual( Stem("nämligen"), "näm");});
test("nämn -> nämn", function() {deepEqual( Stem("nämn"), "nämn");});
test("nämna -> nämn", function() {deepEqual( Stem("nämna"), "nämn");});
test("nämnas -> nämn", function() {deepEqual( Stem("nämnas"), "nämn");});
test("nämnd -> nämnd", function() {deepEqual( Stem("nämnd"), "nämnd");});
test("nämnda -> nämnd", function() {deepEqual( Stem("nämnda"), "nämnd");});
test("nämnde -> nämnd", function() {deepEqual( Stem("nämnde"), "nämnd");});
test("nämndemanslika -> nämndemanslik", function() {deepEqual( Stem("nämndemanslika"), "nämndemanslik");});
test("nämner -> nämn", function() {deepEqual( Stem("nämner"), "nämn");});
test("nämnt -> nämnt", function() {deepEqual( Stem("nämnt"), "nämnt");});
test("nämnvärd -> nämnvärd", function() {deepEqual( Stem("nämnvärd"), "nämnvärd");});
test("nämt -> nämt", function() {deepEqual( Stem("nämt"), "nämt");});
test("nändes -> nänd", function() {deepEqual( Stem("nändes"), "nänd");});
test("näpst -> näpst", function() {deepEqual( Stem("näpst"), "näpst");});
test("när -> när", function() {deepEqual( Stem("när"), "när");});
test("nära -> när", function() {deepEqual( Stem("nära"), "när");});
test("närande -> när", function() {deepEqual( Stem("närande"), "när");});
test("närapa -> närap", function() {deepEqual( Stem("närapa"), "närap");});
test("närapå -> närapå", function() {deepEqual( Stem("närapå"), "närapå");});
test("närbeläget -> närbeläget", function() {deepEqual( Stem("närbeläget"), "närbeläget");});
test("närd -> närd", function() {deepEqual( Stem("närd"), "närd");});
test("närda -> närd", function() {deepEqual( Stem("närda"), "närd");});
test("närde -> närd", function() {deepEqual( Stem("närde"), "närd");});
test("närgånget -> närgånget", function() {deepEqual( Stem("närgånget"), "närgånget");});
test("närhet -> när", function() {deepEqual( Stem("närhet"), "när");});
test("närheten -> när", function() {deepEqual( Stem("närheten"), "när");});
test("näring -> näring", function() {deepEqual( Stem("näring"), "näring");});
test("näringsgrenar -> näringsgren", function() {deepEqual( Stem("näringsgrenar"), "näringsgren");});
test("näringsämnet -> näringsämnet", function() {deepEqual( Stem("näringsämnet"), "näringsämnet");});
test("närke -> närk", function() {deepEqual( Stem("närke"), "närk");});
test("närma -> närm", function() {deepEqual( Stem("närma"), "närm");});
test("närmade -> närm", function() {deepEqual( Stem("närmade"), "närm");});
test("närmande -> närm", function() {deepEqual( Stem("närmande"), "närm");});
test("närmar -> närm", function() {deepEqual( Stem("närmar"), "närm");});
test("närmare -> närm", function() {deepEqual( Stem("närmare"), "närm");});
test("närmast -> närm", function() {deepEqual( Stem("närmast"), "närm");});
test("närmaste -> närm", function() {deepEqual( Stem("närmaste"), "närm");});
test("närmat -> närm", function() {deepEqual( Stem("närmat"), "närm");});
test("närmre -> närmr", function() {deepEqual( Stem("närmre"), "närmr");});
test("närnnda -> närnnd", function() {deepEqual( Stem("närnnda"), "närnnd");});
test("närsynt -> närsynt", function() {deepEqual( Stem("närsynt"), "närsynt");});
test("närsynta -> närsynt", function() {deepEqual( Stem("närsynta"), "närsynt");});
test("närt -> närt", function() {deepEqual( Stem("närt"), "närt");});
test("närvarande -> närvar", function() {deepEqual( Stem("närvarande"), "närvar");});
test("närvarandes -> närvar", function() {deepEqual( Stem("närvarandes"), "närvar");});
test("närvaro -> närvaro", function() {deepEqual( Stem("närvaro"), "närvaro");});
test("närvaron -> närvaron", function() {deepEqual( Stem("närvaron"), "närvaron");});
test("näsa -> näs", function() {deepEqual( Stem("näsa"), "näs");});
test("näsan -> näsan", function() {deepEqual( Stem("näsan"), "näsan");});
test("näsbenet -> näsbenet", function() {deepEqual( Stem("näsbenet"), "näsbenet");});
test("näsborrar -> näsborr", function() {deepEqual( Stem("näsborrar"), "näsborr");});
test("näsborrarna -> näsborr", function() {deepEqual( Stem("näsborrarna"), "näsborr");});
test("näsduk -> näsduk", function() {deepEqual( Stem("näsduk"), "näsduk");});
test("näsdukar -> näsduk", function() {deepEqual( Stem("näsdukar"), "näsduk");});
test("näsdukarna -> näsduk", function() {deepEqual( Stem("näsdukarna"), "näsduk");});
test("näsduken -> näsduk", function() {deepEqual( Stem("näsduken"), "näsduk");});
test("näsdukssnibben -> näsdukssnibb", function() {deepEqual( Stem("näsdukssnibben"), "näsdukssnibb");});
test("näsor -> näs", function() {deepEqual( Stem("näsor"), "näs");});
test("näspärla -> näspärl", function() {deepEqual( Stem("näspärla"), "näspärl");});
test("näst -> näst", function() {deepEqual( Stem("näst"), "näst");});
test("nästa -> näst", function() {deepEqual( Stem("nästa"), "näst");});
test("nästan -> nästan", function() {deepEqual( Stem("nästan"), "nästan");});
test("näste -> näst", function() {deepEqual( Stem("näste"), "näst");});
test("nästena -> nästen", function() {deepEqual( Stem("nästena"), "nästen");});
test("nästföljande -> nästfölj", function() {deepEqual( Stem("nästföljande"), "nästfölj");});
test("nästipp -> nästipp", function() {deepEqual( Stem("nästipp"), "nästipp");});
test("nästkommande -> nästkomm", function() {deepEqual( Stem("nästkommande"), "nästkomm");});
test("nästnn -> nästn", function() {deepEqual( Stem("nästnn"), "nästn");});
test("näsvis -> näsvis", function() {deepEqual( Stem("näsvis"), "näsvis");});
test("näsvisa -> näsvis", function() {deepEqual( Stem("näsvisa"), "näsvis");});
test("näsvisare -> näsvis", function() {deepEqual( Stem("näsvisare"), "näsvis");});
test("näsvise -> näsvis", function() {deepEqual( Stem("näsvise"), "näsvis");});
test("näsvishet -> näsvis", function() {deepEqual( Stem("näsvishet"), "näsvis");});
test("näsvist -> näsvist", function() {deepEqual( Stem("näsvist"), "näsvist");});
test("nät -> nät", function() {deepEqual( Stem("nät"), "nät");});
test("nätet -> nätet", function() {deepEqual( Stem("nätet"), "nätet");});
test("nätets -> nätet", function() {deepEqual( Stem("nätets"), "nätet");});
test("näthinnor -> näthin", function() {deepEqual( Stem("näthinnor"), "näthin");});
test("nätt -> nätt", function() {deepEqual( Stem("nätt"), "nätt");});
test("nätta -> nätt", function() {deepEqual( Stem("nätta"), "nätt");});
test("nättaste -> nätt", function() {deepEqual( Stem("nättaste"), "nätt");});
test("nätter -> nätt", function() {deepEqual( Stem("nätter"), "nätt");});
test("nätterna -> nätt", function() {deepEqual( Stem("nätterna"), "nätt");});
test("nätters -> nätter", function() {deepEqual( Stem("nätters"), "nätter");});
test("nävar -> näv", function() {deepEqual( Stem("nävar"), "näv");});
test("näve -> näv", function() {deepEqual( Stem("näve"), "näv");});
test("näven -> näv", function() {deepEqual( Stem("näven"), "näv");});
test("nå -> nå", function() {deepEqual( Stem("nå"), "nå");});
test("nåd -> nåd", function() {deepEqual( Stem("nåd"), "nåd");});
test("nådde -> nådd", function() {deepEqual( Stem("nådde"), "nådd");});
test("nådenes -> nåden", function() {deepEqual( Stem("nådenes"), "nåden");});
test("nådens -> nåd", function() {deepEqual( Stem("nådens"), "nåd");});
test("nåder -> nåd", function() {deepEqual( Stem("nåder"), "nåd");});
test("nådesmulor -> nådesmul", function() {deepEqual( Stem("nådesmulor"), "nådesmul");});
test("nådetiden -> nådetid", function() {deepEqual( Stem("nådetiden"), "nådetid");});
test("nådig -> nåd", function() {deepEqual( Stem("nådig"), "nåd");});
test("nådiga -> nåd", function() {deepEqual( Stem("nådiga"), "nåd");});
test("nådige -> nåd", function() {deepEqual( Stem("nådige"), "nåd");});
test("nådigt -> nåd", function() {deepEqual( Stem("nådigt"), "nåd");});
test("någml -> någml", function() {deepEqual( Stem("någml"), "någml");});
test("någo -> någo", function() {deepEqual( Stem("någo"), "någo");});
test("någon -> någon", function() {deepEqual( Stem("någon"), "någon");});
test("någondera -> någonder", function() {deepEqual( Stem("någondera"), "någonder");});
test("någons -> någon", function() {deepEqual( Stem("någons"), "någon");});
test("någonsin -> någonsin", function() {deepEqual( Stem("någonsin"), "någonsin");});
test("någonstades -> någonst", function() {deepEqual( Stem("någonstades"), "någonst");});
test("någonstans -> någonstan", function() {deepEqual( Stem("någonstans"), "någonstan");});
test("någonstädes -> någonstäd", function() {deepEqual( Stem("någonstädes"), "någonstäd");});
test("någonstådes -> någonståd", function() {deepEqual( Stem("någonstådes"), "någonståd");});
test("någonting -> någonting", function() {deepEqual( Stem("någonting"), "någonting");});
test("någorlunda -> någorlund", function() {deepEqual( Stem("någorlunda"), "någorlund");});
test("någorstädes -> någorstäd", function() {deepEqual( Stem("någorstädes"), "någorstäd");});
test("något -> något", function() {deepEqual( Stem("något"), "något");});
test("någotdera -> någotder", function() {deepEqual( Stem("någotdera"), "någotder");});
test("några -> någr", function() {deepEqual( Stem("några"), "någr");});
test("nåidge -> nåidg", function() {deepEqual( Stem("nåidge"), "nåidg");});
test("nålar -> nål", function() {deepEqual( Stem("nålar"), "nål");});
test("nålen -> nål", function() {deepEqual( Stem("nålen"), "nål");});
test("nånsin -> nånsin", function() {deepEqual( Stem("nånsin"), "nånsin");});
test("når -> når", function() {deepEqual( Stem("når"), "når");});
test("nås -> nås", function() {deepEqual( Stem("nås"), "nås");});
test("nått -> nått", function() {deepEqual( Stem("nått"), "nått");});
test("nåväl -> nåväl", function() {deepEqual( Stem("nåväl"), "nåväl");});
test("nöd -> nöd", function() {deepEqual( Stem("nöd"), "nöd");});
test("nödd -> nödd", function() {deepEqual( Stem("nödd"), "nödd");});
test("nöden -> nöd", function() {deepEqual( Stem("nöden"), "nöd");});
test("nödens -> nöd", function() {deepEqual( Stem("nödens"), "nöd");});
test("nödfall -> nödfall", function() {deepEqual( Stem("nödfall"), "nödfall");});
test("nödgade -> nödg", function() {deepEqual( Stem("nödgade"), "nödg");});
test("nödgades -> nödg", function() {deepEqual( Stem("nödgades"), "nödg");});
test("nödgas -> nödg", function() {deepEqual( Stem("nödgas"), "nödg");});
test("nödgats -> nödgat", function() {deepEqual( Stem("nödgats"), "nödgat");});
test("nödiga -> nöd", function() {deepEqual( Stem("nödiga"), "nöd");});
test("nödigt -> nöd", function() {deepEqual( Stem("nödigt"), "nöd");});
test("nödrop -> nödrop", function() {deepEqual( Stem("nödrop"), "nödrop");});
test("nödsakad -> nödsak", function() {deepEqual( Stem("nödsakad"), "nödsak");});
test("nödställds -> nödställd", function() {deepEqual( Stem("nödställds"), "nödställd");});
test("nödtorftigt -> nödtorft", function() {deepEqual( Stem("nödtorftigt"), "nödtorft");});
test("nödtvång -> nödtvång", function() {deepEqual( Stem("nödtvång"), "nödtvång");});
test("nödvandigheten -> nödvand", function() {deepEqual( Stem("nödvandigheten"), "nödvand");});
test("nödvändig -> nödvänd", function() {deepEqual( Stem("nödvändig"), "nödvänd");});
test("nödvändiga -> nödvänd", function() {deepEqual( Stem("nödvändiga"), "nödvänd");});
test("nödvändigare -> nödvänd", function() {deepEqual( Stem("nödvändigare"), "nödvänd");});
test("nödvändigaste -> nödvänd", function() {deepEqual( Stem("nödvändigaste"), "nödvänd");});
test("nödvändighet -> nödvänd", function() {deepEqual( Stem("nödvändighet"), "nödvänd");});
test("nödvändigheten -> nödvänd", function() {deepEqual( Stem("nödvändigheten"), "nödvänd");});
test("nödvändighetens -> nödvänd", function() {deepEqual( Stem("nödvändighetens"), "nödvänd");});
test("nödvändighetsartiklar -> nödvändighetsartikl", function() {deepEqual( Stem("nödvändighetsartiklar"), "nödvändighetsartikl");});
test("nödvändigt -> nödvänd", function() {deepEqual( Stem("nödvändigt"), "nödvänd");});
test("nödvärn -> nödvärn", function() {deepEqual( Stem("nödvärn"), "nödvärn");});
test("nöja -> nöj", function() {deepEqual( Stem("nöja"), "nöj");});
test("nöjd -> nöjd", function() {deepEqual( Stem("nöjd"), "nöjd");});
test("nöjda -> nöjd", function() {deepEqual( Stem("nöjda"), "nöjd");});
test("nöjde -> nöjd", function() {deepEqual( Stem("nöjde"), "nöjd");});
test("nöje -> nöj", function() {deepEqual( Stem("nöje"), "nöj");});
test("nöjelse -> nöj", function() {deepEqual( Stem("nöjelse"), "nöj");});
test("nöjen -> nöj", function() {deepEqual( Stem("nöjen"), "nöj");});
test("nöjena -> nöjen", function() {deepEqual( Stem("nöjena"), "nöjen");});
test("nöjer -> nöj", function() {deepEqual( Stem("nöjer"), "nöj");});
test("nöjes -> nöj", function() {deepEqual( Stem("nöjes"), "nöj");});
test("nöjet -> nöjet", function() {deepEqual( Stem("nöjet"), "nöjet");});
test("nöjs -> nöj", function() {deepEqual( Stem("nöjs"), "nöj");});
test("nöjsam -> nöjsam", function() {deepEqual( Stem("nöjsam"), "nöjsam");});
test("nöp -> nöp", function() {deepEqual( Stem("nöp"), "nöp");});
test("nöt -> nöt", function() {deepEqual( Stem("nöt"), "nöt");});
test("nöter -> nöt", function() {deepEqual( Stem("nöter"), "nöt");});
test("nötkärna -> nötkärn", function() {deepEqual( Stem("nötkärna"), "nötkärn");});
test("nötning -> nötning", function() {deepEqual( Stem("nötning"), "nötning");});
test("nötta -> nött", function() {deepEqual( Stem("nötta"), "nött");});
test("nötter -> nött", function() {deepEqual( Stem("nötter"), "nött");});
test("o -> o", function() {deepEqual( Stem("o"), "o");});
test("oa -> oa", function() {deepEqual( Stem("oa"), "oa");});
test("oafbrutet -> oafbrutet", function() {deepEqual( Stem("oafbrutet"), "oafbrutet");});
test("oafgjordt -> oafgjord", function() {deepEqual( Stem("oafgjordt"), "oafgjord");});
test("oaktadt -> oaktad", function() {deepEqual( Stem("oaktadt"), "oaktad");});
test("oaktat -> oakt", function() {deepEqual( Stem("oaktat"), "oakt");});
test("oanade -> oan", function() {deepEqual( Stem("oanade"), "oan");});
test("oandligt -> oand", function() {deepEqual( Stem("oandligt"), "oand");});
test("oangripet -> oangripet", function() {deepEqual( Stem("oangripet"), "oangripet");});
test("oansenliga -> oansen", function() {deepEqual( Stem("oansenliga"), "oansen");});
test("oanständiga -> oanständ", function() {deepEqual( Stem("oanständiga"), "oanständ");});
test("oanständigt -> oanständ", function() {deepEqual( Stem("oanständigt"), "oanständ");});
test("oartig -> oart", function() {deepEqual( Stem("oartig"), "oart");});
test("oartikuleradt -> oartikulerad", function() {deepEqual( Stem("oartikuleradt"), "oartikulerad");});
test("oartikulerat -> oartikuler", function() {deepEqual( Stem("oartikulerat"), "oartikuler");});
test("oavbruten -> oavbrut", function() {deepEqual( Stem("oavbruten"), "oavbrut");});
test("oavbrutet -> oavbrutet", function() {deepEqual( Stem("oavbrutet"), "oavbrutet");});
test("oavbrutna -> oavbrutn", function() {deepEqual( Stem("oavbrutna"), "oavbrutn");});
test("oavlåtligen -> oavlåt", function() {deepEqual( Stem("oavlåtligen"), "oavlåt");});
test("oavundade -> oavund", function() {deepEqual( Stem("oavundade"), "oavund");});
test("oavvänt -> oavvänt", function() {deepEqual( Stem("oavvänt"), "oavvänt");});
test("obarmhärtigt -> obarmhärt", function() {deepEqual( Stem("obarmhärtigt"), "obarmhärt");});
test("obduktion -> obduktion", function() {deepEqual( Stem("obduktion"), "obduktion");});
test("obebyggda -> obebygg", function() {deepEqual( Stem("obebyggda"), "obebygg");});
test("obegriplig -> obegrip", function() {deepEqual( Stem("obegriplig"), "obegrip");});
test("obegripliga -> obegrip", function() {deepEqual( Stem("obegripliga"), "obegrip");});
test("obegripligt -> obegrip", function() {deepEqual( Stem("obegripligt"), "obegrip");});
test("obegränsade -> obegräns", function() {deepEqual( Stem("obegränsade"), "obegräns");});
test("obehag -> obehag", function() {deepEqual( Stem("obehag"), "obehag");});
test("obehaget -> obehaget", function() {deepEqual( Stem("obehaget"), "obehaget");});
test("obehaglig -> obehag", function() {deepEqual( Stem("obehaglig"), "obehag");});
test("obehagliga -> obehag", function() {deepEqual( Stem("obehagliga"), "obehag");});
test("obehagligare -> obehag", function() {deepEqual( Stem("obehagligare"), "obehag");});
test("obehagligt -> obehag", function() {deepEqual( Stem("obehagligt"), "obehag");});
test("obehindradt -> obehindrad", function() {deepEqual( Stem("obehindradt"), "obehindrad");});
test("obehörig -> obehör", function() {deepEqual( Stem("obehörig"), "obehör");});
test("obehöriga -> obehör", function() {deepEqual( Stem("obehöriga"), "obehör");});
test("obehövliga -> obehöv", function() {deepEqual( Stem("obehövliga"), "obehöv");});
test("obekant -> obekant", function() {deepEqual( Stem("obekant"), "obekant");});
test("obekanta -> obekant", function() {deepEqual( Stem("obekanta"), "obekant");});
test("obekantskapen -> obekantskap", function() {deepEqual( Stem("obekantskapen"), "obekantskap");});
test("obekväma -> obekväm", function() {deepEqual( Stem("obekväma"), "obekväm");});
test("obekymrade -> obekymr", function() {deepEqual( Stem("obekymrade"), "obekymr");});
test("obekymrat -> obekymr", function() {deepEqual( Stem("obekymrat"), "obekymr");});
test("obelevad -> obelev", function() {deepEqual( Stem("obelevad"), "obelev");});
test("obemärkt -> obemärk", function() {deepEqual( Stem("obemärkt"), "obemärk");});
test("obenägen -> obenäg", function() {deepEqual( Stem("obenägen"), "obenäg");});
test("obenägenhet -> obenägen", function() {deepEqual( Stem("obenägenhet"), "obenägen");});
test("oberedd -> obered", function() {deepEqual( Stem("oberedd"), "obered");});
test("oberoende -> oberoend", function() {deepEqual( Stem("oberoende"), "oberoend");});
test("oberäknade -> oberäkn", function() {deepEqual( Stem("oberäknade"), "oberäkn");});
test("oberäknadt -> oberäknad", function() {deepEqual( Stem("oberäknadt"), "oberäknad");});
test("oberäknat -> oberäkn", function() {deepEqual( Stem("oberäknat"), "oberäkn");});
test("oberäknelig -> oberäkne", function() {deepEqual( Stem("oberäknelig"), "oberäkne");});
test("oberäkneligt -> oberäkne", function() {deepEqual( Stem("oberäkneligt"), "oberäkne");});
test("oberäknerliga -> oberäkner", function() {deepEqual( Stem("oberäknerliga"), "oberäkner");});
test("oberörd -> oberörd", function() {deepEqual( Stem("oberörd"), "oberörd");});
test("oberörda -> oberörd", function() {deepEqual( Stem("oberörda"), "oberörd");});
test("oberördhet -> oberörd", function() {deepEqual( Stem("oberördhet"), "oberörd");});
test("oberört -> oberört", function() {deepEqual( Stem("oberört"), "oberört");});
test("obesatt -> obesat", function() {deepEqual( Stem("obesatt"), "obesat");});
test("obeskedligt -> obesked", function() {deepEqual( Stem("obeskedligt"), "obesked");});
test("obeskriflig -> obeskrif", function() {deepEqual( Stem("obeskriflig"), "obeskrif");});
test("obeskrifliga -> obeskrif", function() {deepEqual( Stem("obeskrifliga"), "obeskrif");});
test("obeskrifligt -> obeskrif", function() {deepEqual( Stem("obeskrifligt"), "obeskrif");});
test("obeskrivlig -> obeskriv", function() {deepEqual( Stem("obeskrivlig"), "obeskriv");});
test("obeskrivliga -> obeskriv", function() {deepEqual( Stem("obeskrivliga"), "obeskriv");});
test("obeskrivligt -> obeskriv", function() {deepEqual( Stem("obeskrivligt"), "obeskriv");});
test("obeslutsam -> obeslutsam", function() {deepEqual( Stem("obeslutsam"), "obeslutsam");});
test("obeslutsamme -> obeslutsamm", function() {deepEqual( Stem("obeslutsamme"), "obeslutsamm");});
test("obestand -> obestand", function() {deepEqual( Stem("obestand"), "obestand");});
test("obestridliga -> obestrid", function() {deepEqual( Stem("obestridliga"), "obestrid");});
test("obestämd -> obestämd", function() {deepEqual( Stem("obestämd"), "obestämd");});
test("obestämda -> obestämd", function() {deepEqual( Stem("obestämda"), "obestämd");});
test("obestämt -> obestämt", function() {deepEqual( Stem("obestämt"), "obestämt");});
test("obesvarade -> obesvar", function() {deepEqual( Stem("obesvarade"), "obesvar");});
test("obesvärat -> obesvär", function() {deepEqual( Stem("obesvärat"), "obesvär");});
test("obetingat -> obeting", function() {deepEqual( Stem("obetingat"), "obeting");});
test("obetydlig -> obetyd", function() {deepEqual( Stem("obetydlig"), "obetyd");});
test("obetydliga -> obetyd", function() {deepEqual( Stem("obetydliga"), "obetyd");});
test("obetydligare -> obetyd", function() {deepEqual( Stem("obetydligare"), "obetyd");});
test("obetydligaste -> obetyd", function() {deepEqual( Stem("obetydligaste"), "obetyd");});
test("obetydlige -> obetyd", function() {deepEqual( Stem("obetydlige"), "obetyd");});
test("obetydlighet -> obetyd", function() {deepEqual( Stem("obetydlighet"), "obetyd");});
test("obetydligt -> obetyd", function() {deepEqual( Stem("obetydligt"), "obetyd");});
test("obetänksam -> obetänksam", function() {deepEqual( Stem("obetänksam"), "obetänksam");});
test("obetänksamhet -> obetänksam", function() {deepEqual( Stem("obetänksamhet"), "obetänksam");});
test("obetänksamme -> obetänksamm", function() {deepEqual( Stem("obetänksamme"), "obetänksamm");});
test("obetänksamt -> obetänksamt", function() {deepEqual( Stem("obetänksamt"), "obetänksamt");});
test("obeveklig -> obevek", function() {deepEqual( Stem("obeveklig"), "obevek");});
test("obildad -> obild", function() {deepEqual( Stem("obildad"), "obild");});
test("obildade -> obild", function() {deepEqual( Stem("obildade"), "obild");});
test("obillig -> obil", function() {deepEqual( Stem("obillig"), "obil");});
test("obilliga -> obil", function() {deepEqual( Stem("obilliga"), "obil");});
test("obilligt -> obil", function() {deepEqual( Stem("obilligt"), "obil");});
test("oblandad -> obland", function() {deepEqual( Stem("oblandad"), "obland");});
test("oblandadt -> oblandad", function() {deepEqual( Stem("oblandadt"), "oblandad");});
test("obligeant -> obligeant", function() {deepEqual( Stem("obligeant"), "obligeant");});
test("obligera -> obliger", function() {deepEqual( Stem("obligera"), "obliger");});
test("oblyg -> oblyg", function() {deepEqual( Stem("oblyg"), "oblyg");});
test("oblyga -> oblyg", function() {deepEqual( Stem("oblyga"), "oblyg");});
test("oblygare -> oblyg", function() {deepEqual( Stem("oblygare"), "oblyg");});
test("oblyghet -> oblyg", function() {deepEqual( Stem("oblyghet"), "oblyg");});
test("oblygt -> oblyg", function() {deepEqual( Stem("oblygt"), "oblyg");});
test("obotlig -> obot", function() {deepEqual( Stem("obotlig"), "obot");});
test("obotligt -> obot", function() {deepEqual( Stem("obotligt"), "obot");});
test("obrottslig -> obrotts", function() {deepEqual( Stem("obrottslig"), "obrotts");});
test("obrukbart -> obrukbart", function() {deepEqual( Stem("obrukbart"), "obrukbart");});
test("observationer -> observation", function() {deepEqual( Stem("observationer"), "observation");});
test("observera -> observer", function() {deepEqual( Stem("observera"), "observer");});
test("observerade -> observer", function() {deepEqual( Stem("observerade"), "observer");});
test("observerades -> observer", function() {deepEqual( Stem("observerades"), "observer");});
test("observerat -> observer", function() {deepEqual( Stem("observerat"), "observer");});
test("obytt -> obyt", function() {deepEqual( Stem("obytt"), "obyt");});
test("obändiga -> obänd", function() {deepEqual( Stem("obändiga"), "obänd");});
test("oböjliga -> oböj", function() {deepEqual( Stem("oböjliga"), "oböj");});
test("ocb -> ocb", function() {deepEqual( Stem("ocb"), "ocb");});
test("occh -> occh", function() {deepEqual( Stem("occh"), "occh");});
test("ocfi -> ocfi", function() {deepEqual( Stem("ocfi"), "ocfi");});
test("och -> och", function() {deepEqual( Stem("och"), "och");});
test("ock -> ock", function() {deepEqual( Stem("ock"), "ock");});
test("ockra -> ockr", function() {deepEqual( Stem("ockra"), "ockr");});
test("ockrå -> ockrå", function() {deepEqual( Stem("ockrå"), "ockrå");});
test("ocksa -> ocks", function() {deepEqual( Stem("ocksa"), "ocks");});
test("ocksi -> ocksi", function() {deepEqual( Stem("ocksi"), "ocksi");});
test("också -> också", function() {deepEqual( Stem("också"), "också");});
test("ocl -> ocl", function() {deepEqual( Stem("ocl"), "ocl");});
test("odeciderad -> odecider", function() {deepEqual( Stem("odeciderad"), "odecider");});
test("odelad -> odel", function() {deepEqual( Stem("odelad"), "odel");});
test("oderton -> oderton", function() {deepEqual( Stem("oderton"), "oderton");});
test("odh -> odh", function() {deepEqual( Stem("odh"), "odh");});
test("odjur -> odjur", function() {deepEqual( Stem("odjur"), "odjur");});
test("odjuren -> odjur", function() {deepEqual( Stem("odjuren"), "odjur");});
test("odjuret -> odjuret", function() {deepEqual( Stem("odjuret"), "odjuret");});
test("odjurs -> odjur", function() {deepEqual( Stem("odjurs"), "odjur");});
test("odla -> odl", function() {deepEqual( Stem("odla"), "odl");});
test("odlade -> odl", function() {deepEqual( Stem("odlade"), "odl");});
test("odlarns -> odlarn", function() {deepEqual( Stem("odlarns"), "odlarn");});
test("odmjuk -> odmjuk", function() {deepEqual( Stem("odmjuk"), "odmjuk");});
test("odmjukt -> odmjuk", function() {deepEqual( Stem("odmjukt"), "odmjuk");});
test("odräg -> odräg", function() {deepEqual( Stem("odräg"), "odräg");});
test("odräglig -> odräg", function() {deepEqual( Stem("odräglig"), "odräg");});
test("odrägliga -> odräg", function() {deepEqual( Stem("odrägliga"), "odräg");});
test("odräglige -> odräg", function() {deepEqual( Stem("odräglige"), "odräg");});
test("odrägligt -> odräg", function() {deepEqual( Stem("odrägligt"), "odräg");});
test("odugliga -> odug", function() {deepEqual( Stem("odugliga"), "odug");});
test("odugligt -> odug", function() {deepEqual( Stem("odugligt"), "odug");});
test("odygd -> odyg", function() {deepEqual( Stem("odygd"), "odyg");});
test("odygdigt -> odygd", function() {deepEqual( Stem("odygdigt"), "odygd");});
test("odödlig -> odöd", function() {deepEqual( Stem("odödlig"), "odöd");});
test("odödliga -> odöd", function() {deepEqual( Stem("odödliga"), "odöd");});
test("odödlighet -> odöd", function() {deepEqual( Stem("odödlighet"), "odöd");});
test("odödligt -> odöd", function() {deepEqual( Stem("odödligt"), "odöd");});
test("oeb -> oeb", function() {deepEqual( Stem("oeb"), "oeb");});
test("oeftertänksamma -> oeftertänksamm", function() {deepEqual( Stem("oeftertänksamma"), "oeftertänksamm");});
test("oegentligen -> oegent", function() {deepEqual( Stem("oegentligen"), "oegent");});
test("oeh -> oeh", function() {deepEqual( Stem("oeh"), "oeh");});
test("oeldadt -> oeldad", function() {deepEqual( Stem("oeldadt"), "oeldad");});
test("oemotståndlig -> oemotstånd", function() {deepEqual( Stem("oemotståndlig"), "oemotstånd");});
test("oemotståndligt -> oemotstånd", function() {deepEqual( Stem("oemotståndligt"), "oemotstånd");});
test("oen -> oen", function() {deepEqual( Stem("oen"), "oen");});
test("oenothera -> oenother", function() {deepEqual( Stem("oenothera"), "oenother");});
test("oer -> oer", function() {deepEqual( Stem("oer"), "oer");});
test("oerfaren -> oerf", function() {deepEqual( Stem("oerfaren"), "oerf");});
test("oerfarna -> oerf", function() {deepEqual( Stem("oerfarna"), "oerf");});
test("oerhörd -> oerhörd", function() {deepEqual( Stem("oerhörd"), "oerhörd");});
test("oerhörda -> oerhörd", function() {deepEqual( Stem("oerhörda"), "oerhörd");});
test("oerhördt -> oerhörd", function() {deepEqual( Stem("oerhördt"), "oerhörd");});
test("oerhört -> oerhört", function() {deepEqual( Stem("oerhört"), "oerhört");});
test("oersättliga -> oersätt", function() {deepEqual( Stem("oersättliga"), "oersätt");});
test("of -> of", function() {deepEqual( Stem("of"), "of");});
test("ofantlig -> ofant", function() {deepEqual( Stem("ofantlig"), "ofant");});
test("ofantliga -> ofant", function() {deepEqual( Stem("ofantliga"), "ofant");});
test("ofantligt -> ofant", function() {deepEqual( Stem("ofantligt"), "ofant");});
test("ofarlig -> ofar", function() {deepEqual( Stem("ofarlig"), "ofar");});
test("ofattbara -> ofattbar", function() {deepEqual( Stem("ofattbara"), "ofattbar");});
test("ofelbara -> ofelbar", function() {deepEqual( Stem("ofelbara"), "ofelbar");});
test("ofelbart -> ofelbart", function() {deepEqual( Stem("ofelbart"), "ofelbart");});
test("offentliga -> offent", function() {deepEqual( Stem("offentliga"), "offent");});
test("offentligheten -> offent", function() {deepEqual( Stem("offentligheten"), "offent");});
test("offentligt -> offent", function() {deepEqual( Stem("offentligt"), "offent");});
test("offer -> off", function() {deepEqual( Stem("offer"), "off");});
test("offerdag -> offerdag", function() {deepEqual( Stem("offerdag"), "offerdag");});
test("officer -> offic", function() {deepEqual( Stem("officer"), "offic");});
test("officerare -> officer", function() {deepEqual( Stem("officerare"), "officer");});
test("officershem -> officershem", function() {deepEqual( Stem("officershem"), "officershem");});
test("officianten -> officiant", function() {deepEqual( Stem("officianten"), "officiant");});
test("offra -> offr", function() {deepEqual( Stem("offra"), "offr");});
test("offrade -> offr", function() {deepEqual( Stem("offrade"), "offr");});
test("offrat -> offr", function() {deepEqual( Stem("offrat"), "offr");});
test("ofog -> ofog", function() {deepEqual( Stem("ofog"), "ofog");});
test("oformlig -> oform", function() {deepEqual( Stem("oformlig"), "oform");});
test("oformliga -> oform", function() {deepEqual( Stem("oformliga"), "oform");});
test("ofrid -> ofrid", function() {deepEqual( Stem("ofrid"), "ofrid");});
test("ofrivillig -> ofrivil", function() {deepEqual( Stem("ofrivillig"), "ofrivil");});
test("ofrivilligt -> ofrivil", function() {deepEqual( Stem("ofrivilligt"), "ofrivil");});
test("ofruktbar -> ofruktb", function() {deepEqual( Stem("ofruktbar"), "ofruktb");});
test("ofruktbara -> ofruktbar", function() {deepEqual( Stem("ofruktbara"), "ofruktbar");});
test("ofta -> oft", function() {deepEqual( Stem("ofta"), "oft");});
test("oftare -> oft", function() {deepEqual( Stem("oftare"), "oft");});
test("oftast -> oft", function() {deepEqual( Stem("oftast"), "oft");});
test("ofullständigt -> ofullständ", function() {deepEqual( Stem("ofullständigt"), "ofullständ");});
test("ofvan -> ofvan", function() {deepEqual( Stem("ofvan"), "ofvan");});
test("ofvanstående -> ofvanståend", function() {deepEqual( Stem("ofvanstående"), "ofvanståend");});
test("ofödda -> oföd", function() {deepEqual( Stem("ofödda"), "oföd");});
test("oföddas -> oföd", function() {deepEqual( Stem("oföddas"), "oföd");});
test("oförargliga -> oförarg", function() {deepEqual( Stem("oförargliga"), "oförarg");});
test("oförberett -> oförberet", function() {deepEqual( Stem("oförberett"), "oförberet");});
test("ofördelaktiga -> ofördelakt", function() {deepEqual( Stem("ofördelaktiga"), "ofördelakt");});
test("ofördelaktigt -> ofördelakt", function() {deepEqual( Stem("ofördelaktigt"), "ofördelakt");});
test("oförenliga -> ofören", function() {deepEqual( Stem("oförenliga"), "ofören");});
test("oförfalskade -> oförfalsk", function() {deepEqual( Stem("oförfalskade"), "oförfalsk");});
test("oförfalskat -> oförfalsk", function() {deepEqual( Stem("oförfalskat"), "oförfalsk");});
test("oförfärat -> oförfär", function() {deepEqual( Stem("oförfärat"), "oförfär");});
test("oförgiftade -> oförgift", function() {deepEqual( Stem("oförgiftade"), "oförgift");});
test("oförgripliga -> oförgrip", function() {deepEqual( Stem("oförgripliga"), "oförgrip");});
test("oförhappandes -> oförhapp", function() {deepEqual( Stem("oförhappandes"), "oförhapp");});
test("oförklarligt -> oförklar", function() {deepEqual( Stem("oförklarligt"), "oförklar");});
test("oförlåtliga -> oförlåt", function() {deepEqual( Stem("oförlåtliga"), "oförlåt");});
test("oförminskad -> oförminsk", function() {deepEqual( Stem("oförminskad"), "oförminsk");});
test("oförmodade -> oförmod", function() {deepEqual( Stem("oförmodade"), "oförmod");});
test("oförmodadt -> oförmodad", function() {deepEqual( Stem("oförmodadt"), "oförmodad");});
test("oförmodat -> oförmod", function() {deepEqual( Stem("oförmodat"), "oförmod");});
test("oförmärkt -> oförmärk", function() {deepEqual( Stem("oförmärkt"), "oförmärk");});
test("oförmåga -> oförmåg", function() {deepEqual( Stem("oförmåga"), "oförmåg");});
test("oförsigtighet -> oförsigt", function() {deepEqual( Stem("oförsigtighet"), "oförsigt");});
test("oförsiktighet -> oförsikt", function() {deepEqual( Stem("oförsiktighet"), "oförsikt");});
test("oförsiktigt -> oförsikt", function() {deepEqual( Stem("oförsiktigt"), "oförsikt");});
test("oförskräckt -> oförskräck", function() {deepEqual( Stem("oförskräckt"), "oförskräck");});
test("oförskämd -> oförskämd", function() {deepEqual( Stem("oförskämd"), "oförskämd");});
test("oförskämda -> oförskämd", function() {deepEqual( Stem("oförskämda"), "oförskämd");});
test("oförskämdaste -> oförskämd", function() {deepEqual( Stem("oförskämdaste"), "oförskämd");});
test("oförskämdt -> oförskämd", function() {deepEqual( Stem("oförskämdt"), "oförskämd");});
test("oförskämt -> oförskämt", function() {deepEqual( Stem("oförskämt"), "oförskämt");});
test("oförsonade -> oförson", function() {deepEqual( Stem("oförsonade"), "oförson");});
test("oförstäld -> oförstäld", function() {deepEqual( Stem("oförstäld"), "oförstäld");});
test("oförstående -> oförståend", function() {deepEqual( Stem("oförstående"), "oförståend");});
test("oförstånd -> oförstånd", function() {deepEqual( Stem("oförstånd"), "oförstånd");});
test("oförståndiga -> oförstånd", function() {deepEqual( Stem("oförståndiga"), "oförstånd");});
test("oförsvarligt -> oförsvar", function() {deepEqual( Stem("oförsvarligt"), "oförsvar");});
test("oförsynt -> oförsynt", function() {deepEqual( Stem("oförsynt"), "oförsynt");});
test("oförsynta -> oförsynt", function() {deepEqual( Stem("oförsynta"), "oförsynt");});
test("oförsyntheten -> oförsynt", function() {deepEqual( Stem("oförsyntheten"), "oförsynt");});
test("oförsörjda -> oförsörjd", function() {deepEqual( Stem("oförsörjda"), "oförsörjd");});
test("oförtrutet -> oförtrutet", function() {deepEqual( Stem("oförtrutet"), "oförtrutet");});
test("oförtrutna -> oförtrutn", function() {deepEqual( Stem("oförtrutna"), "oförtrutn");});
test("oförtöfvadt -> oförtöfvad", function() {deepEqual( Stem("oförtöfvadt"), "oförtöfvad");});
test("oförutsedd -> oförutsed", function() {deepEqual( Stem("oförutsedd"), "oförutsed");});
test("oförvitlig -> oförvit", function() {deepEqual( Stem("oförvitlig"), "oförvit");});
test("oförvägen -> oförväg", function() {deepEqual( Stem("oförvägen"), "oförväg");});
test("oförvägenhet -> oförvägen", function() {deepEqual( Stem("oförvägenhet"), "oförvägen");});
test("oförvägna -> oförvägn", function() {deepEqual( Stem("oförvägna"), "oförvägn");});
test("oförytterlig -> oförytter", function() {deepEqual( Stem("oförytterlig"), "oförytter");});
test("oga -> oga", function() {deepEqual( Stem("oga"), "oga");});
test("ogenerad -> ogener", function() {deepEqual( Stem("ogenerad"), "ogener");});
test("ogenerat -> ogener", function() {deepEqual( Stem("ogenerat"), "ogener");});
test("ogerna -> ogern", function() {deepEqual( Stem("ogerna"), "ogern");});
test("ogerning -> ogerning", function() {deepEqual( Stem("ogerning"), "ogerning");});
test("ogift -> ogift", function() {deepEqual( Stem("ogift"), "ogift");});
test("ogifta -> ogift", function() {deepEqual( Stem("ogifta"), "ogift");});
test("ogillade -> ogill", function() {deepEqual( Stem("ogillade"), "ogill");});
test("ogillande -> ogill", function() {deepEqual( Stem("ogillande"), "ogill");});
test("ogjorda -> ogjord", function() {deepEqual( Stem("ogjorda"), "ogjord");});
test("ogon -> ogon", function() {deepEqual( Stem("ogon"), "ogon");});
test("ogonen -> ogon", function() {deepEqual( Stem("ogonen"), "ogon");});
test("ogonlocken -> ogonlock", function() {deepEqual( Stem("ogonlocken"), "ogonlock");});
test("ogonspringor -> ogonspring", function() {deepEqual( Stem("ogonspringor"), "ogonspring");});
test("ograciös -> ograciös", function() {deepEqual( Stem("ograciös"), "ograciös");});
test("ogrannlaga -> ogrannlag", function() {deepEqual( Stem("ogrannlaga"), "ogrannlag");});
test("ogrundad -> ogrund", function() {deepEqual( Stem("ogrundad"), "ogrund");});
test("ogräset -> ogräset", function() {deepEqual( Stem("ogräset"), "ogräset");});
test("ogudaktigt -> ogudakt", function() {deepEqual( Stem("ogudaktigt"), "ogudakt");});
test("ogunst -> ogunst", function() {deepEqual( Stem("ogunst"), "ogunst");});
test("ogunstigt -> ogunst", function() {deepEqual( Stem("ogunstigt"), "ogunst");});
test("ogärna -> ogärn", function() {deepEqual( Stem("ogärna"), "ogärn");});
test("ogörligt -> ogör", function() {deepEqual( Stem("ogörligt"), "ogör");});
test("ohan -> ohan", function() {deepEqual( Stem("ohan"), "ohan");});
test("ohejdad -> ohejd", function() {deepEqual( Stem("ohejdad"), "ohejd");});
test("ohejdade -> ohejd", function() {deepEqual( Stem("ohejdade"), "ohejd");});
test("ohejdadt -> ohejdad", function() {deepEqual( Stem("ohejdadt"), "ohejdad");});
test("ohelig -> ohe", function() {deepEqual( Stem("ohelig"), "ohe");});
test("ohjelplige -> ohjelp", function() {deepEqual( Stem("ohjelplige"), "ohjelp");});
test("ohjelpligen -> ohjelp", function() {deepEqual( Stem("ohjelpligen"), "ohjelp");});
test("ohjälplig -> ohjälp", function() {deepEqual( Stem("ohjälplig"), "ohjälp");});
test("ohjälpliga -> ohjälp", function() {deepEqual( Stem("ohjälpliga"), "ohjälp");});
test("ohjälpligt -> ohjälp", function() {deepEqual( Stem("ohjälpligt"), "ohjälp");});
test("ohlea -> ohle", function() {deepEqual( Stem("ohlea"), "ohle");});
test("oho -> oho", function() {deepEqual( Stem("oho"), "oho");});
test("ohygglig -> ohygg", function() {deepEqual( Stem("ohygglig"), "ohygg");});
test("ohyggliga -> ohygg", function() {deepEqual( Stem("ohyggliga"), "ohygg");});
test("ohyggligt -> ohygg", function() {deepEqual( Stem("ohyggligt"), "ohygg");});
test("ohyra -> ohyr", function() {deepEqual( Stem("ohyra"), "ohyr");});
test("ohyvlade -> ohyvl", function() {deepEqual( Stem("ohyvlade"), "ohyvl");});
test("ohöfviskt -> ohöfvisk", function() {deepEqual( Stem("ohöfviskt"), "ohöfvisk");});
test("ohöljt -> ohöljt", function() {deepEqual( Stem("ohöljt"), "ohöljt");});
test("ohörbar -> ohörb", function() {deepEqual( Stem("ohörbar"), "ohörb");});
test("ohörbart -> ohörbart", function() {deepEqual( Stem("ohörbart"), "ohörbart");});
test("ohövlig -> ohöv", function() {deepEqual( Stem("ohövlig"), "ohöv");});
test("ohövligt -> ohöv", function() {deepEqual( Stem("ohövligt"), "ohöv");});
test("oid -> oid", function() {deepEqual( Stem("oid"), "oid");});
test("oigenkänliga -> oigenkän", function() {deepEqual( Stem("oigenkänliga"), "oigenkän");});
test("oinskränkt -> oinskränk", function() {deepEqual( Stem("oinskränkt"), "oinskränk");});
test("oinskränkta -> oinskränk", function() {deepEqual( Stem("oinskränkta"), "oinskränk");});
test("oiruktbar -> oiruktb", function() {deepEqual( Stem("oiruktbar"), "oiruktb");});
test("ois -> ois", function() {deepEqual( Stem("ois"), "ois");});
test("oj -> oj", function() {deepEqual( Stem("oj"), "oj");});
test("ojemna -> ojemn", function() {deepEqual( Stem("ojemna"), "ojemn");});
test("ojämförligt -> ojämför", function() {deepEqual( Stem("ojämförligt"), "ojämför");});
test("ojämna -> ojämn", function() {deepEqual( Stem("ojämna"), "ojämn");});
test("ojämnt -> ojämnt", function() {deepEqual( Stem("ojämnt"), "ojämnt");});
test("ok -> ok", function() {deepEqual( Stem("ok"), "ok");});
test("oklart -> oklart", function() {deepEqual( Stem("oklart"), "oklart");});
test("oknarna -> okn", function() {deepEqual( Stem("oknarna"), "okn");});
test("oknytt -> oknyt", function() {deepEqual( Stem("oknytt"), "oknyt");});
test("okonstlade -> okonstl", function() {deepEqual( Stem("okonstlade"), "okonstl");});
test("okroppsliga -> okropps", function() {deepEqual( Stem("okroppsliga"), "okropps");});
test("okroppsligt -> okropps", function() {deepEqual( Stem("okroppsligt"), "okropps");});
test("oktober -> oktob", function() {deepEqual( Stem("oktober"), "oktob");});
test("oktoberskymningen -> oktoberskymning", function() {deepEqual( Stem("oktoberskymningen"), "oktoberskymning");});
test("okultiverad -> okultiver", function() {deepEqual( Stem("okultiverad"), "okultiver");});
test("okunnig -> okunn", function() {deepEqual( Stem("okunnig"), "okunn");});
test("okunniga -> okunn", function() {deepEqual( Stem("okunniga"), "okunn");});
test("okunnighet -> okunn", function() {deepEqual( Stem("okunnighet"), "okunn");});
test("okuvlig -> okuv", function() {deepEqual( Stem("okuvlig"), "okuv");});
test("okynne -> okyn", function() {deepEqual( Stem("okynne"), "okyn");});
test("okynnig -> okynn", function() {deepEqual( Stem("okynnig"), "okynn");});
test("okynniga -> okynn", function() {deepEqual( Stem("okynniga"), "okynn");});
test("okyska -> okysk", function() {deepEqual( Stem("okyska"), "okysk");});
test("okyskhetens -> okysk", function() {deepEqual( Stem("okyskhetens"), "okysk");});
test("okänd -> okänd", function() {deepEqual( Stem("okänd"), "okänd");});
test("okända -> okänd", function() {deepEqual( Stem("okända"), "okänd");});
test("okände -> okänd", function() {deepEqual( Stem("okände"), "okänd");});
test("okänslig -> okäns", function() {deepEqual( Stem("okänslig"), "okäns");});
test("okänt -> okänt", function() {deepEqual( Stem("okänt"), "okänt");});
test("oköpandes -> oköp", function() {deepEqual( Stem("oköpandes"), "oköp");});
test("ola -> ola", function() {deepEqual( Stem("ola"), "ola");});
test("olatet -> olatet", function() {deepEqual( Stem("olatet"), "olatet");});
test("oldsmobile -> oldsmobil", function() {deepEqual( Stem("oldsmobile"), "oldsmobil");});
test("olidlig -> olid", function() {deepEqual( Stem("olidlig"), "olid");});
test("olidliga -> olid", function() {deepEqual( Stem("olidliga"), "olid");});
test("olidligaste -> olid", function() {deepEqual( Stem("olidligaste"), "olid");});
test("olidligt -> olid", function() {deepEqual( Stem("olidligt"), "olid");});
test("olik -> olik", function() {deepEqual( Stem("olik"), "olik");});
test("olika -> olik", function() {deepEqual( Stem("olika"), "olik");});
test("olikfärgade -> olikfärg", function() {deepEqual( Stem("olikfärgade"), "olikfärg");});
test("olikt -> olik", function() {deepEqual( Stem("olikt"), "olik");});
test("oliver -> oliv", function() {deepEqual( Stem("oliver"), "oliv");});
test("olivgul -> olivgul", function() {deepEqual( Stem("olivgul"), "olivgul");});
test("olivlund -> olivlund", function() {deepEqual( Stem("olivlund"), "olivlund");});
test("olja -> olj", function() {deepEqual( Stem("olja"), "olj");});
test("oljat -> olj", function() {deepEqual( Stem("oljat"), "olj");});
test("oljefärg -> oljefärg", function() {deepEqual( Stem("oljefärg"), "oljefärg");});
test("oljekläder -> oljekläd", function() {deepEqual( Stem("oljekläder"), "oljekläd");});
test("oljelampan -> oljelampan", function() {deepEqual( Stem("oljelampan"), "oljelampan");});
test("oljelampor -> oljelamp", function() {deepEqual( Stem("oljelampor"), "oljelamp");});
test("oljelamporna -> oljelamp", function() {deepEqual( Stem("oljelamporna"), "oljelamp");});
test("oljelampornas -> oljelamp", function() {deepEqual( Stem("oljelampornas"), "oljelamp");});
test("oljud -> oljud", function() {deepEqual( Stem("oljud"), "oljud");});
test("olle -> oll", function() {deepEqual( Stem("olle"), "oll");});
test("olmströms -> olmström", function() {deepEqual( Stem("olmströms"), "olmström");});
test("oloflig -> olof", function() {deepEqual( Stem("oloflig"), "olof");});
test("ologiskt -> ologisk", function() {deepEqual( Stem("ologiskt"), "ologisk");});
test("olovliga -> olov", function() {deepEqual( Stem("olovliga"), "olov");});
test("olssons -> olsson", function() {deepEqual( Stem("olssons"), "olsson");});
test("olust -> olust", function() {deepEqual( Stem("olust"), "olust");});
test("olustig -> olust", function() {deepEqual( Stem("olustig"), "olust");});
test("olustkänslor -> olustkänsl", function() {deepEqual( Stem("olustkänslor"), "olustkänsl");});
test("olyck -> olyck", function() {deepEqual( Stem("olyck"), "olyck");});
test("olycka -> olyck", function() {deepEqual( Stem("olycka"), "olyck");});
test("olyckan -> olyckan", function() {deepEqual( Stem("olyckan"), "olyckan");});
test("olyckas -> olyck", function() {deepEqual( Stem("olyckas"), "olyck");});
test("olycklig -> olyck", function() {deepEqual( Stem("olycklig"), "olyck");});
test("olyckliga -> olyck", function() {deepEqual( Stem("olyckliga"), "olyck");});
test("olyckligare -> olyck", function() {deepEqual( Stem("olyckligare"), "olyck");});
test("olycklige -> olyck", function() {deepEqual( Stem("olycklige"), "olyck");});
test("olyckligt -> olyck", function() {deepEqual( Stem("olyckligt"), "olyck");});
test("olyckligtvis -> olyckligtvis", function() {deepEqual( Stem("olyckligtvis"), "olyckligtvis");});
test("olyckor -> olyck", function() {deepEqual( Stem("olyckor"), "olyck");});
test("olyckorna -> olyck", function() {deepEqual( Stem("olyckorna"), "olyck");});
test("olycks -> olyck", function() {deepEqual( Stem("olycks"), "olyck");});
test("olycksaliga -> olycksa", function() {deepEqual( Stem("olycksaliga"), "olycksa");});
test("olycksaningar -> olycksaning", function() {deepEqual( Stem("olycksaningar"), "olycksaning");});
test("olycksbådande -> olycksbåd", function() {deepEqual( Stem("olycksbådande"), "olycksbåd");});
test("olycksdagen -> olycksdag", function() {deepEqual( Stem("olycksdagen"), "olycksdag");});
test("olyckshändelsen -> olyckshänd", function() {deepEqual( Stem("olyckshändelsen"), "olyckshänd");});
test("olyckshändelser -> olyckshänd", function() {deepEqual( Stem("olyckshändelser"), "olyckshänd");});
test("olyckshändelserna -> olyckshänd", function() {deepEqual( Stem("olyckshändelserna"), "olyckshänd");});
test("olycksskräcken -> olycksskräck", function() {deepEqual( Stem("olycksskräcken"), "olycksskräck");});
test("olycksöde -> olycksöd", function() {deepEqual( Stem("olycksöde"), "olycksöd");});
test("olydig -> olyd", function() {deepEqual( Stem("olydig"), "olyd");});
test("olydnad -> olydn", function() {deepEqual( Stem("olydnad"), "olydn");});
test("olympiska -> olympisk", function() {deepEqual( Stem("olympiska"), "olympisk");});
test("olyska -> olysk", function() {deepEqual( Stem("olyska"), "olysk");});
test("olägenheter -> olägen", function() {deepEqual( Stem("olägenheter"), "olägen");});
test("olägligt -> oläg", function() {deepEqual( Stem("olägligt"), "oläg");});
test("olåten -> olåt", function() {deepEqual( Stem("olåten"), "olåt");});
test("olösligt -> olös", function() {deepEqual( Stem("olösligt"), "olös");});
test("olösta -> olöst", function() {deepEqual( Stem("olösta"), "olöst");});
test("om -> om", function() {deepEqual( Stem("om"), "om");});
test("omaka -> omak", function() {deepEqual( Stem("omaka"), "omak");});
test("omaket -> omaket", function() {deepEqual( Stem("omaket"), "omaket");});
test("omanligt -> oman", function() {deepEqual( Stem("omanligt"), "oman");});
test("ombedd -> ombed", function() {deepEqual( Stem("ombedd"), "ombed");});
test("ombilda -> ombild", function() {deepEqual( Stem("ombilda"), "ombild");});
test("ombord -> ombord", function() {deepEqual( Stem("ombord"), "ombord");});
test("ombre -> ombr", function() {deepEqual( Stem("ombre"), "ombr");});
test("ombunden -> ombund", function() {deepEqual( Stem("ombunden"), "ombund");});
test("ombyta -> ombyt", function() {deepEqual( Stem("ombyta"), "ombyt");});
test("ombyte -> ombyt", function() {deepEqual( Stem("ombyte"), "ombyt");});
test("ombytes -> ombyt", function() {deepEqual( Stem("ombytes"), "ombyt");});
test("ombytte -> ombyt", function() {deepEqual( Stem("ombytte"), "ombyt");});
test("omdöme -> omdöm", function() {deepEqual( Stem("omdöme"), "omdöm");});
test("omedelbar -> omedelb", function() {deepEqual( Stem("omedelbar"), "omedelb");});
test("omedelbart -> omedelbart", function() {deepEqual( Stem("omedelbart"), "omedelbart");});
test("omedgörlig -> omedgör", function() {deepEqual( Stem("omedgörlig"), "omedgör");});
test("omedgörligaste -> omedgör", function() {deepEqual( Stem("omedgörligaste"), "omedgör");});
test("omedveten -> omedvet", function() {deepEqual( Stem("omedveten"), "omedvet");});
test("omedvetet -> omedvetet", function() {deepEqual( Stem("omedvetet"), "omedvetet");});
test("omedvetna -> omedvetn", function() {deepEqual( Stem("omedvetna"), "omedvetn");});
test("omelett -> omelet", function() {deepEqual( Stem("omelett"), "omelet");});
test("omen -> omen", function() {deepEqual( Stem("omen"), "omen");});
test("omfamna -> omfamn", function() {deepEqual( Stem("omfamna"), "omfamn");});
test("omfamnande -> omfamn", function() {deepEqual( Stem("omfamnande"), "omfamn");});
test("omfamningar -> omfamning", function() {deepEqual( Stem("omfamningar"), "omfamning");});
test("omfara -> omfar", function() {deepEqual( Stem("omfara"), "omfar");});
test("omfatta -> omfat", function() {deepEqual( Stem("omfatta"), "omfat");});
test("omfattas -> omfat", function() {deepEqual( Stem("omfattas"), "omfat");});
test("omflutet -> omflutet", function() {deepEqual( Stem("omflutet"), "omflutet");});
test("omfång -> omfång", function() {deepEqual( Stem("omfång"), "omfång");});
test("omfånget -> omfånget", function() {deepEqual( Stem("omfånget"), "omfånget");});
test("omförmäla -> omförmäl", function() {deepEqual( Stem("omförmäla"), "omförmäl");});
test("omgaf -> omgaf", function() {deepEqual( Stem("omgaf"), "omgaf");});
test("omgav -> omgav", function() {deepEqual( Stem("omgav"), "omgav");});
test("omgifning -> omgifning", function() {deepEqual( Stem("omgifning"), "omgifning");});
test("omgifnings -> omgifning", function() {deepEqual( Stem("omgifnings"), "omgifning");});
test("omgift -> omgift", function() {deepEqual( Stem("omgift"), "omgift");});
test("omgifven -> omgifv", function() {deepEqual( Stem("omgifven"), "omgifv");});
test("omgivande -> omgiv", function() {deepEqual( Stem("omgivande"), "omgiv");});
test("omgiven -> omgiv", function() {deepEqual( Stem("omgiven"), "omgiv");});
test("omgivet -> omgivet", function() {deepEqual( Stem("omgivet"), "omgivet");});
test("omgivning -> omgivning", function() {deepEqual( Stem("omgivning"), "omgivning");});
test("omgivningarna -> omgivning", function() {deepEqual( Stem("omgivningarna"), "omgivning");});
test("omgjorda -> omgjord", function() {deepEqual( Stem("omgjorda"), "omgjord");});
test("omgjordad -> omgjord", function() {deepEqual( Stem("omgjordad"), "omgjord");});
test("omgjort -> omgjort", function() {deepEqual( Stem("omgjort"), "omgjort");});
test("omgång -> omgång", function() {deepEqual( Stem("omgång"), "omgång");});
test("omgåvo -> omgåvo", function() {deepEqual( Stem("omgåvo"), "omgåvo");});
test("omhägnad -> omhägn", function() {deepEqual( Stem("omhägnad"), "omhägn");});
test("omhängen -> omhäng", function() {deepEqual( Stem("omhängen"), "omhäng");});
test("omigen -> omig", function() {deepEqual( Stem("omigen"), "omig");});
test("omild -> omild", function() {deepEqual( Stem("omild"), "omild");});
test("omildt -> omild", function() {deepEqual( Stem("omildt"), "omild");});
test("omisskänlig -> omisskän", function() {deepEqual( Stem("omisskänlig"), "omisskän");});
test("omisskänliga -> omisskän", function() {deepEqual( Stem("omisskänliga"), "omisskän");});
test("omisskänligaste -> omisskän", function() {deepEqual( Stem("omisskänligaste"), "omisskän");});
test("omisskänligt -> omisskän", function() {deepEqual( Stem("omisskänligt"), "omisskän");});
test("omisskänneligt -> omisskänne", function() {deepEqual( Stem("omisskänneligt"), "omisskänne");});
test("omisskännligt -> omisskänn", function() {deepEqual( Stem("omisskännligt"), "omisskänn");});
test("omisstänksamma -> omisstänksamm", function() {deepEqual( Stem("omisstänksamma"), "omisstänksamm");});
test("omisstänksamme -> omisstänksamm", function() {deepEqual( Stem("omisstänksamme"), "omisstänksamm");});
test("omklädd -> omkläd", function() {deepEqual( Stem("omklädd"), "omkläd");});
test("omklädseln -> omklädseln", function() {deepEqual( Stem("omklädseln"), "omklädseln");});
test("omklädt -> omkläd", function() {deepEqual( Stem("omklädt"), "omkläd");});
test("omknutet -> omknutet", function() {deepEqual( Stem("omknutet"), "omknutet");});
test("omkomma -> omkomm", function() {deepEqual( Stem("omkomma"), "omkomm");});
test("omkommit -> omkommit", function() {deepEqual( Stem("omkommit"), "omkommit");});
test("omkrets -> omkret", function() {deepEqual( Stem("omkrets"), "omkret");});
test("omkrh -> omkrh", function() {deepEqual( Stem("omkrh"), "omkrh");});
test("omkring -> omkring", function() {deepEqual( Stem("omkring"), "omkring");});
test("omkringströdda -> omkringströd", function() {deepEqual( Stem("omkringströdda"), "omkringströd");});
test("omkriug -> omkriug", function() {deepEqual( Stem("omkriug"), "omkriug");});
test("omkull -> omkull", function() {deepEqual( Stem("omkull"), "omkull");});
test("omle -> oml", function() {deepEqual( Stem("omle"), "oml");});
test("omlindat -> omlind", function() {deepEqual( Stem("omlindat"), "omlind");});
test("omlopp -> omlopp", function() {deepEqual( Stem("omlopp"), "omlopp");});
test("omläggning -> omläggning", function() {deepEqual( Stem("omläggning"), "omläggning");});
test("ommöblerad -> ommöbler", function() {deepEqual( Stem("ommöblerad"), "ommöbler");});
test("omnibus -> omnibus", function() {deepEqual( Stem("omnibus"), "omnibus");});
test("omnibusarna -> omnibus", function() {deepEqual( Stem("omnibusarna"), "omnibus");});
test("omnibusarnas -> omnibus", function() {deepEqual( Stem("omnibusarnas"), "omnibus");});
test("omnämda -> omnämd", function() {deepEqual( Stem("omnämda"), "omnämd");});
test("omnämna -> omnämn", function() {deepEqual( Stem("omnämna"), "omnämn");});
test("omnämnandet -> omnämn", function() {deepEqual( Stem("omnämnandet"), "omnämn");});
test("omnämnda -> omnämnd", function() {deepEqual( Stem("omnämnda"), "omnämnd");});
test("omnämnde -> omnämnd", function() {deepEqual( Stem("omnämnde"), "omnämnd");});
test("omnämndes -> omnämnd", function() {deepEqual( Stem("omnämndes"), "omnämnd");});
test("omodern -> omod", function() {deepEqual( Stem("omodern"), "omod");});
test("omoralisk -> omoralisk", function() {deepEqual( Stem("omoralisk"), "omoralisk");});
test("omotiverade -> omotiver", function() {deepEqual( Stem("omotiverade"), "omotiver");});
test("omotiverat -> omotiver", function() {deepEqual( Stem("omotiverat"), "omotiver");});
test("omringa -> omring", function() {deepEqual( Stem("omringa"), "omring");});
test("område -> områd", function() {deepEqual( Stem("område"), "områd");});
test("områden -> områd", function() {deepEqual( Stem("områden"), "områd");});
test("området -> området", function() {deepEqual( Stem("området"), "området");});
test("omsade -> oms", function() {deepEqual( Stem("omsade"), "oms");});
test("omsider -> omsid", function() {deepEqual( Stem("omsider"), "omsid");});
test("omskrivningar -> omskrivning", function() {deepEqual( Stem("omskrivningar"), "omskrivning");});
test("omslag -> omslag", function() {deepEqual( Stem("omslag"), "omslag");});
test("omslingrad -> omslingr", function() {deepEqual( Stem("omslingrad"), "omslingr");});
test("omslutna -> omslutn", function() {deepEqual( Stem("omslutna"), "omslutn");});
test("omslöt -> omslöt", function() {deepEqual( Stem("omslöt"), "omslöt");});
test("omsorg -> omsorg", function() {deepEqual( Stem("omsorg"), "omsorg");});
test("omsorgen -> omsorg", function() {deepEqual( Stem("omsorgen"), "omsorg");});
test("omsorger -> omsorg", function() {deepEqual( Stem("omsorger"), "omsorg");});
test("omsorgsfulla -> omsorgsfull", function() {deepEqual( Stem("omsorgsfulla"), "omsorgsfull");});
test("omsorgsfullt -> omsorgsfull", function() {deepEqual( Stem("omsorgsfullt"), "omsorgsfull");});
test("omspände -> omspänd", function() {deepEqual( Stem("omspände"), "omspänd");});
test("omstuvning -> omstuvning", function() {deepEqual( Stem("omstuvning"), "omstuvning");});
test("omstän -> omstän", function() {deepEqual( Stem("omstän"), "omstän");});
test("omständighet -> omständ", function() {deepEqual( Stem("omständighet"), "omständ");});
test("omständigheten -> omständ", function() {deepEqual( Stem("omständigheten"), "omständ");});
test("omständigheter -> omständ", function() {deepEqual( Stem("omständigheter"), "omständ");});
test("omständigheterna -> omständ", function() {deepEqual( Stem("omständigheterna"), "omständ");});
test("omstörta -> omstört", function() {deepEqual( Stem("omstörta"), "omstört");});
test("omstörtningen -> omstörtning", function() {deepEqual( Stem("omstörtningen"), "omstörtning");});
test("omsvep -> omsvep", function() {deepEqual( Stem("omsvep"), "omsvep");});
test("omsvepa -> omsvep", function() {deepEqual( Stem("omsvepa"), "omsvep");});
test("omsvepande -> omsvep", function() {deepEqual( Stem("omsvepande"), "omsvep");});
test("omsvärmad -> omsvärm", function() {deepEqual( Stem("omsvärmad"), "omsvärm");});
test("omsvävade -> omsväv", function() {deepEqual( Stem("omsvävade"), "omsväv");});
test("omsägande -> omsäg", function() {deepEqual( Stem("omsägande"), "omsäg");});
test("omtala -> omtal", function() {deepEqual( Stem("omtala"), "omtal");});
test("omtalade -> omtal", function() {deepEqual( Stem("omtalade"), "omtal");});
test("omtalar -> omtal", function() {deepEqual( Stem("omtalar"), "omtal");});
test("omtalas -> omtal", function() {deepEqual( Stem("omtalas"), "omtal");});
test("omtalta -> omtalt", function() {deepEqual( Stem("omtalta"), "omtalt");});
test("omtanke -> omtank", function() {deepEqual( Stem("omtanke"), "omtank");});
test("omtuggade -> omtugg", function() {deepEqual( Stem("omtuggade"), "omtugg");});
test("omtumlad -> omtuml", function() {deepEqual( Stem("omtumlad"), "omtuml");});
test("omtvistade -> omtvist", function() {deepEqual( Stem("omtvistade"), "omtvist");});
test("omtyckt -> omtyck", function() {deepEqual( Stem("omtyckt"), "omtyck");});
test("omtyckta -> omtyck", function() {deepEqual( Stem("omtyckta"), "omtyck");});
test("omtänksamhet -> omtänksam", function() {deepEqual( Stem("omtänksamhet"), "omtänksam");});
test("omtänksamma -> omtänksamm", function() {deepEqual( Stem("omtänksamma"), "omtänksamm");});
test("omtåliga -> omtå", function() {deepEqual( Stem("omtåliga"), "omtå");});
test("omutlig -> omut", function() {deepEqual( Stem("omutlig"), "omut");});
test("omvanda -> omvand", function() {deepEqual( Stem("omvanda"), "omvand");});
test("omväg -> omväg", function() {deepEqual( Stem("omväg"), "omväg");});
test("omvägar -> omväg", function() {deepEqual( Stem("omvägar"), "omväg");});
test("omvända -> omvänd", function() {deepEqual( Stem("omvända"), "omvänd");});
test("omvände -> omvänd", function() {deepEqual( Stem("omvände"), "omvänd");});
test("omvändelse -> omvänd", function() {deepEqual( Stem("omvändelse"), "omvänd");});
test("omvändt -> omvänd", function() {deepEqual( Stem("omvändt"), "omvänd");});
test("omvärvas -> omvärv", function() {deepEqual( Stem("omvärvas"), "omvärv");});
test("omvärvd -> omvärvd", function() {deepEqual( Stem("omvärvd"), "omvärvd");});
test("omväxling -> omväxling", function() {deepEqual( Stem("omväxling"), "omväxling");});
test("omvårdnad -> omvårdn", function() {deepEqual( Stem("omvårdnad"), "omvårdn");});
test("omänskligt -> omänsk", function() {deepEqual( Stem("omänskligt"), "omänsk");});
test("omärklig -> omärk", function() {deepEqual( Stem("omärklig"), "omärk");});
test("omärkligen -> omärk", function() {deepEqual( Stem("omärkligen"), "omärk");});
test("omärkligt -> omärk", function() {deepEqual( Stem("omärkligt"), "omärk");});
test("omätliga -> omät", function() {deepEqual( Stem("omätliga"), "omät");});
test("omätligt -> omät", function() {deepEqual( Stem("omätligt"), "omät");});
test("omättliga -> omätt", function() {deepEqual( Stem("omättliga"), "omätt");});
test("omöjlig -> omöj", function() {deepEqual( Stem("omöjlig"), "omöj");});
test("omöjliga -> omöj", function() {deepEqual( Stem("omöjliga"), "omöj");});
test("omöjligare -> omöj", function() {deepEqual( Stem("omöjligare"), "omöj");});
test("omöjligaste -> omöj", function() {deepEqual( Stem("omöjligaste"), "omöj");});
test("omöjligen -> omöj", function() {deepEqual( Stem("omöjligen"), "omöj");});
test("omöjlighet -> omöj", function() {deepEqual( Stem("omöjlighet"), "omöj");});
test("omöjligheten -> omöj", function() {deepEqual( Stem("omöjligheten"), "omöj");});
test("omöjligt -> omöj", function() {deepEqual( Stem("omöjligt"), "omöj");});
test("on -> on", function() {deepEqual( Stem("on"), "on");});
test("onaturlig -> onatur", function() {deepEqual( Stem("onaturlig"), "onatur");});
test("onaturliga -> onatur", function() {deepEqual( Stem("onaturliga"), "onatur");});
test("onaturligt -> onatur", function() {deepEqual( Stem("onaturligt"), "onatur");});
test("ond -> ond", function() {deepEqual( Stem("ond"), "ond");});
test("onda -> ond", function() {deepEqual( Stem("onda"), "ond");});
test("onde -> ond", function() {deepEqual( Stem("onde"), "ond");});
test("ondo -> ondo", function() {deepEqual( Stem("ondo"), "ondo");});
test("ondska -> ondsk", function() {deepEqual( Stem("ondska"), "ondsk");});
test("ondskefull -> ondskefull", function() {deepEqual( Stem("ondskefull"), "ondskefull");});
test("ondskefulla -> ondskefull", function() {deepEqual( Stem("ondskefulla"), "ondskefull");});
test("ondskefullt -> ondskefull", function() {deepEqual( Stem("ondskefullt"), "ondskefull");});
test("ondt -> ondt", function() {deepEqual( Stem("ondt"), "ondt");});
test("onekligen -> onek", function() {deepEqual( Stem("onekligen"), "onek");});
test("onkel -> onkel", function() {deepEqual( Stem("onkel"), "onkel");});
test("onkels -> onkel", function() {deepEqual( Stem("onkels"), "onkel");});
test("onsdag -> onsdag", function() {deepEqual( Stem("onsdag"), "onsdag");});
test("onsdagen -> onsdag", function() {deepEqual( Stem("onsdagen"), "onsdag");});
test("onsdagsafton -> onsdagsafton", function() {deepEqual( Stem("onsdagsafton"), "onsdagsafton");});
test("ont -> ont", function() {deepEqual( Stem("ont"), "ont");});
test("onus -> onus", function() {deepEqual( Stem("onus"), "onus");});
test("onytta -> onyt", function() {deepEqual( Stem("onytta"), "onyt");});
test("onyttig -> onytt", function() {deepEqual( Stem("onyttig"), "onytt");});
test("onämnbart -> onämnbart", function() {deepEqual( Stem("onämnbart"), "onämnbart");});
test("onådigt -> onåd", function() {deepEqual( Stem("onådigt"), "onåd");});
test("onödig -> onöd", function() {deepEqual( Stem("onödig"), "onöd");});
test("onödiga -> onöd", function() {deepEqual( Stem("onödiga"), "onöd");});
test("onödigt -> onöd", function() {deepEqual( Stem("onödigt"), "onöd");});
test("onödigtvis -> onödigtvis", function() {deepEqual( Stem("onödigtvis"), "onödigtvis");});
test("ooh -> ooh", function() {deepEqual( Stem("ooh"), "ooh");});
test("oombedd -> oombed", function() {deepEqual( Stem("oombedd"), "oombed");});
test("oora -> oor", function() {deepEqual( Stem("oora"), "oor");});
test("oord -> oord", function() {deepEqual( Stem("oord"), "oord");});
test("oordnade -> oordn", function() {deepEqual( Stem("oordnade"), "oordn");});
test("oordnat -> oordn", function() {deepEqual( Stem("oordnat"), "oordn");});
test("oordning -> oordning", function() {deepEqual( Stem("oordning"), "oordning");});
test("opaler -> opal", function() {deepEqual( Stem("opaler"), "opal");});
test("opassamde -> opassamd", function() {deepEqual( Stem("opassamde"), "opassamd");});
test("opassande -> opass", function() {deepEqual( Stem("opassande"), "opass");});
test("opasslighet -> opass", function() {deepEqual( Stem("opasslighet"), "opass");});
test("opel -> opel", function() {deepEqual( Stem("opel"), "opel");});
test("opera -> oper", function() {deepEqual( Stem("opera"), "oper");});
test("operabalett -> operabalet", function() {deepEqual( Stem("operabalett"), "operabalet");});
test("operan -> operan", function() {deepEqual( Stem("operan"), "operan");});
test("operation -> operation", function() {deepEqual( Stem("operation"), "operation");});
test("operera -> operer", function() {deepEqual( Stem("operera"), "operer");});
test("opereras -> operer", function() {deepEqual( Stem("opereras"), "operer");});
test("operor -> oper", function() {deepEqual( Stem("operor"), "oper");});
test("opinionen -> opinion", function() {deepEqual( Stem("opinionen"), "opinion");});
test("opp -> opp", function() {deepEqual( Stem("opp"), "opp");});
test("oppen -> opp", function() {deepEqual( Stem("oppen"), "opp");});
test("opplimens -> opplim", function() {deepEqual( Stem("opplimens"), "opplim");});
test("opröfvadt -> opröfvad", function() {deepEqual( Stem("opröfvadt"), "opröfvad");});
test("opåräknad -> opåräkn", function() {deepEqual( Stem("opåräknad"), "opåräkn");});
test("opåräknade -> opåräkn", function() {deepEqual( Stem("opåräknade"), "opåräkn");});
test("opåräknat -> opåräkn", function() {deepEqual( Stem("opåräknat"), "opåräkn");});
test("opåtalt -> opåtalt", function() {deepEqual( Stem("opåtalt"), "opåtalt");});
test("or -> or", function() {deepEqual( Stem("or"), "or");});
test("ora -> ora", function() {deepEqual( Stem("ora"), "ora");});
test("orakad -> orak", function() {deepEqual( Stem("orakad"), "orak");});
test("orakel -> orakel", function() {deepEqual( Stem("orakel"), "orakel");});
test("orangeriet -> orangeriet", function() {deepEqual( Stem("orangeriet"), "orangeriet");});
test("orangutang -> orangutang", function() {deepEqual( Stem("orangutang"), "orangutang");});
test("orcn -> orcn", function() {deepEqual( Stem("orcn"), "orcn");});
test("ord -> ord", function() {deepEqual( Stem("ord"), "ord");});
test("ordagrant -> ordagrant", function() {deepEqual( Stem("ordagrant"), "ordagrant");});
test("ordalag -> ordalag", function() {deepEqual( Stem("ordalag"), "ordalag");});
test("ordat -> ord", function() {deepEqual( Stem("ordat"), "ord");});
test("ordbyte -> ordbyt", function() {deepEqual( Stem("ordbyte"), "ordbyt");});
test("orden -> ord", function() {deepEqual( Stem("orden"), "ord");});
test("ordens -> ord", function() {deepEqual( Stem("ordens"), "ord");});
test("ordensband -> ordensband", function() {deepEqual( Stem("ordensband"), "ordensband");});
test("ordentlig -> ordent", function() {deepEqual( Stem("ordentlig"), "ordent");});
test("ordentliga -> ordent", function() {deepEqual( Stem("ordentliga"), "ordent");});
test("ordentlighet -> ordent", function() {deepEqual( Stem("ordentlighet"), "ordent");});
test("ordentligt -> ordent", function() {deepEqual( Stem("ordentligt"), "ordent");});
test("order -> ord", function() {deepEqual( Stem("order"), "ord");});
test("ordet -> ordet", function() {deepEqual( Stem("ordet"), "ordet");});
test("ordets -> ordet", function() {deepEqual( Stem("ordets"), "ordet");});
test("ordflöde -> ordflöd", function() {deepEqual( Stem("ordflöde"), "ordflöd");});
test("ordföranden -> ordför", function() {deepEqual( Stem("ordföranden"), "ordför");});
test("ordinarier -> ordinari", function() {deepEqual( Stem("ordinarier"), "ordinari");});
test("ordinarierna -> ordinari", function() {deepEqual( Stem("ordinarierna"), "ordinari");});
test("ordination -> ordination", function() {deepEqual( Stem("ordination"), "ordination");});
test("ordinär -> ordinär", function() {deepEqual( Stem("ordinär"), "ordinär");});
test("ordlekarna -> ordlek", function() {deepEqual( Stem("ordlekarna"), "ordlek");});
test("ordna -> ordn", function() {deepEqual( Stem("ordna"), "ordn");});
test("ordnad -> ordn", function() {deepEqual( Stem("ordnad"), "ordn");});
test("ordnade -> ordn", function() {deepEqual( Stem("ordnade"), "ordn");});
test("ordnande -> ordn", function() {deepEqual( Stem("ordnande"), "ordn");});
test("ordnar -> ordn", function() {deepEqual( Stem("ordnar"), "ordn");});
test("ordnat -> ordn", function() {deepEqual( Stem("ordnat"), "ordn");});
test("ordning -> ordning", function() {deepEqual( Stem("ordning"), "ordning");});
test("ordningen -> ordning", function() {deepEqual( Stem("ordningen"), "ordning");});
test("ordrikhet -> ordrik", function() {deepEqual( Stem("ordrikhet"), "ordrik");});
test("ords -> ord", function() {deepEqual( Stem("ords"), "ord");});
test("ordspråk -> ordspråk", function() {deepEqual( Stem("ordspråk"), "ordspråk");});
test("ordspråket -> ordspråket", function() {deepEqual( Stem("ordspråket"), "ordspråket");});
test("ordspråksvisdom -> ordspråksvisdom", function() {deepEqual( Stem("ordspråksvisdom"), "ordspråksvisdom");});
test("ordström -> ordström", function() {deepEqual( Stem("ordström"), "ordström");});
test("oreda -> ored", function() {deepEqual( Stem("oreda"), "ored");});
test("oredan -> oredan", function() {deepEqual( Stem("oredan"), "oredan");});
test("oredig -> ored", function() {deepEqual( Stem("oredig"), "ored");});
test("orediga -> ored", function() {deepEqual( Stem("orediga"), "ored");});
test("oredighet -> ored", function() {deepEqual( Stem("oredighet"), "ored");});
test("oredigt -> ored", function() {deepEqual( Stem("oredigt"), "ored");});
test("oregelbunden -> oregelbund", function() {deepEqual( Stem("oregelbunden"), "oregelbund");});
test("oregelbundenhet -> oregelbunden", function() {deepEqual( Stem("oregelbundenhet"), "oregelbunden");});
test("oren -> oren", function() {deepEqual( Stem("oren"), "oren");});
test("orena -> oren", function() {deepEqual( Stem("orena"), "oren");});
test("orenhet -> oren", function() {deepEqual( Stem("orenhet"), "oren");});
test("orenhets -> orenhet", function() {deepEqual( Stem("orenhets"), "orenhet");});
test("orenlighet -> oren", function() {deepEqual( Stem("orenlighet"), "oren");});
test("orenom -> orenom", function() {deepEqual( Stem("orenom"), "orenom");});
test("orerade -> orer", function() {deepEqual( Stem("orerade"), "orer");});
test("oresonhga -> oresonhg", function() {deepEqual( Stem("oresonhga"), "oresonhg");});
test("oresonlig -> oreson", function() {deepEqual( Stem("oresonlig"), "oreson");});
test("organ -> organ", function() {deepEqual( Stem("organ"), "organ");});
test("organiserade -> organiser", function() {deepEqual( Stem("organiserade"), "organiser");});
test("organiskt -> organisk", function() {deepEqual( Stem("organiskt"), "organisk");});
test("organist -> organist", function() {deepEqual( Stem("organist"), "organist");});
test("orgel -> orgel", function() {deepEqual( Stem("orgel"), "orgel");});
test("orgelhus -> orgelhus", function() {deepEqual( Stem("orgelhus"), "orgelhus");});
test("orgelmusik -> orgelmusik", function() {deepEqual( Stem("orgelmusik"), "orgelmusik");});
test("orgelmusiken -> orgelmusik", function() {deepEqual( Stem("orgelmusiken"), "orgelmusik");});
test("orgeln -> orgeln", function() {deepEqual( Stem("orgeln"), "orgeln");});
test("orgelns -> orgeln", function() {deepEqual( Stem("orgelns"), "orgeln");});
test("orgelo -> orgelo", function() {deepEqual( Stem("orgelo"), "orgelo");});
test("orgelomsusade -> orgelomsus", function() {deepEqual( Stem("orgelomsusade"), "orgelomsus");});
test("orglar -> orgl", function() {deepEqual( Stem("orglar"), "orgl");});
test("orgorna -> org", function() {deepEqual( Stem("orgorna"), "org");});
test("orgverk -> orgverk", function() {deepEqual( Stem("orgverk"), "orgverk");});
test("orh -> orh", function() {deepEqual( Stem("orh"), "orh");});
test("orienterad -> orienter", function() {deepEqual( Stem("orienterad"), "orienter");});
test("original -> original", function() {deepEqual( Stem("original"), "original");});
test("originalspråket -> originalspråket", function() {deepEqual( Stem("originalspråket"), "originalspråket");});
test("originalutgåvan -> originalutgåvan", function() {deepEqual( Stem("originalutgåvan"), "originalutgåvan");});
test("originell -> originell", function() {deepEqual( Stem("originell"), "originell");});
test("oriktigt -> orikt", function() {deepEqual( Stem("oriktigt"), "orikt");});
test("orimlig -> orim", function() {deepEqual( Stem("orimlig"), "orim");});
test("orimlighet -> orim", function() {deepEqual( Stem("orimlighet"), "orim");});
test("orimligheter -> orim", function() {deepEqual( Stem("orimligheter"), "orim");});
test("orimligt -> orim", function() {deepEqual( Stem("orimligt"), "orim");});
test("orka -> ork", function() {deepEqual( Stem("orka"), "ork");});
test("orkade -> ork", function() {deepEqual( Stem("orkade"), "ork");});
test("orkan -> orkan", function() {deepEqual( Stem("orkan"), "orkan");});
test("orkanen -> orkan", function() {deepEqual( Stem("orkanen"), "orkan");});
test("orkanerna -> orkan", function() {deepEqual( Stem("orkanerna"), "orkan");});
test("orkar -> ork", function() {deepEqual( Stem("orkar"), "ork");});
test("orkat -> ork", function() {deepEqual( Stem("orkat"), "ork");});
test("orkestern -> orkest", function() {deepEqual( Stem("orkestern"), "orkest");});
test("orkesterns -> orkest", function() {deepEqual( Stem("orkesterns"), "orkest");});
test("orkide -> orkid", function() {deepEqual( Stem("orkide"), "orkid");});
test("orkideer -> orkide", function() {deepEqual( Stem("orkideer"), "orkide");});
test("orklös -> orklös", function() {deepEqual( Stem("orklös"), "orklös");});
test("orlofssedel -> orlofssedel", function() {deepEqual( Stem("orlofssedel"), "orlofssedel");});
test("orlov -> orlov", function() {deepEqual( Stem("orlov"), "orlov");});
test("orlovssedel -> orlovssedel", function() {deepEqual( Stem("orlovssedel"), "orlovssedel");});
test("orm -> orm", function() {deepEqual( Stem("orm"), "orm");});
test("ormar -> orm", function() {deepEqual( Stem("ormar"), "orm");});
test("ormdrömmar -> ormdrömm", function() {deepEqual( Stem("ormdrömmar"), "ormdrömm");});
test("ormen -> orm", function() {deepEqual( Stem("ormen"), "orm");});
test("ormligt -> orm", function() {deepEqual( Stem("ormligt"), "orm");});
test("ormskinn -> ormskin", function() {deepEqual( Stem("ormskinn"), "ormskin");});
test("ormständighet -> ormständ", function() {deepEqual( Stem("ormständighet"), "ormständ");});
test("ormständigheter -> ormständ", function() {deepEqual( Stem("ormständigheter"), "ormständ");});
test("oro -> oro", function() {deepEqual( Stem("oro"), "oro");});
test("oroa -> oro", function() {deepEqual( Stem("oroa"), "oro");});
test("oroad -> oro", function() {deepEqual( Stem("oroad"), "oro");});
test("oroade -> oro", function() {deepEqual( Stem("oroade"), "oro");});
test("oroades -> oro", function() {deepEqual( Stem("oroades"), "oro");});
test("oroande -> oro", function() {deepEqual( Stem("oroande"), "oro");});
test("oroar -> oro", function() {deepEqual( Stem("oroar"), "oro");});
test("oroas -> oro", function() {deepEqual( Stem("oroas"), "oro");});
test("oroat -> oro", function() {deepEqual( Stem("oroat"), "oro");});
test("oroats -> oroat", function() {deepEqual( Stem("oroats"), "oroat");});
test("orolig -> oro", function() {deepEqual( Stem("orolig"), "oro");});
test("oroliga -> oro", function() {deepEqual( Stem("oroliga"), "oro");});
test("oroligare -> oro", function() {deepEqual( Stem("oroligare"), "oro");});
test("orolige -> oro", function() {deepEqual( Stem("orolige"), "oro");});
test("oroligt -> oro", function() {deepEqual( Stem("oroligt"), "oro");});
test("oron -> oron", function() {deepEqual( Stem("oron"), "oron");});
test("orons -> oron", function() {deepEqual( Stem("orons"), "oron");});
test("orrspel -> orrspel", function() {deepEqual( Stem("orrspel"), "orrspel");});
test("orsak -> orsak", function() {deepEqual( Stem("orsak"), "orsak");});
test("orsakade -> orsak", function() {deepEqual( Stem("orsakade"), "orsak");});
test("orsaken -> orsak", function() {deepEqual( Stem("orsaken"), "orsak");});
test("orsaker -> orsak", function() {deepEqual( Stem("orsaker"), "orsak");});
test("orsakskedjan -> orsakskedjan", function() {deepEqual( Stem("orsakskedjan"), "orsakskedjan");});
test("ort -> ort", function() {deepEqual( Stem("ort"), "ort");});
test("orten -> ort", function() {deepEqual( Stem("orten"), "ort");});
test("ortodox -> ortodox", function() {deepEqual( Stem("ortodox"), "ortodox");});
test("ortstidning -> ortstidning", function() {deepEqual( Stem("ortstidning"), "ortstidning");});
test("orubbad -> orubb", function() {deepEqual( Stem("orubbad"), "orubb");});
test("orubbat -> orubb", function() {deepEqual( Stem("orubbat"), "orubb");});
test("orubbliga -> orubb", function() {deepEqual( Stem("orubbliga"), "orubb");});
test("orubbligt -> orubb", function() {deepEqual( Stem("orubbligt"), "orubb");});
test("oryggliga -> orygg", function() {deepEqual( Stem("oryggliga"), "orygg");});
test("oräkneliga -> oräkne", function() {deepEqual( Stem("oräkneliga"), "oräkne");});
test("orätt -> orät", function() {deepEqual( Stem("orätt"), "orät");});
test("orättvis -> orättvis", function() {deepEqual( Stem("orättvis"), "orättvis");});
test("orättvisa -> orättvis", function() {deepEqual( Stem("orättvisa"), "orättvis");});
test("orättvisan -> orättvisan", function() {deepEqual( Stem("orättvisan"), "orättvisan");});
test("orättvist -> orättvist", function() {deepEqual( Stem("orättvist"), "orättvist");});
test("oråd -> oråd", function() {deepEqual( Stem("oråd"), "oråd");});
test("orådet -> orådet", function() {deepEqual( Stem("orådet"), "orådet");});
test("orör -> orör", function() {deepEqual( Stem("orör"), "orör");});
test("orörd -> orörd", function() {deepEqual( Stem("orörd"), "orörd");});
test("orörda -> orörd", function() {deepEqual( Stem("orörda"), "orörd");});
test("orörlig -> orör", function() {deepEqual( Stem("orörlig"), "orör");});
test("orörliga -> orör", function() {deepEqual( Stem("orörliga"), "orör");});
test("orörligt -> orör", function() {deepEqual( Stem("orörligt"), "orör");});
test("osa -> osa", function() {deepEqual( Stem("osa"), "osa");});
test("osalig -> osa", function() {deepEqual( Stem("osalig"), "osa");});
test("osaligt -> osa", function() {deepEqual( Stem("osaligt"), "osa");});
test("osams -> osam", function() {deepEqual( Stem("osams"), "osam");});
test("osanning -> osanning", function() {deepEqual( Stem("osanning"), "osanning");});
test("osanningar -> osanning", function() {deepEqual( Stem("osanningar"), "osanning");});
test("osanningen -> osanning", function() {deepEqual( Stem("osanningen"), "osanning");});
test("osannolik -> osannolik", function() {deepEqual( Stem("osannolik"), "osannolik");});
test("osborn -> osborn", function() {deepEqual( Stem("osborn"), "osborn");});
test("osedd -> osed", function() {deepEqual( Stem("osedd"), "osed");});
test("osedda -> osed", function() {deepEqual( Stem("osedda"), "osed");});
test("osedligheten -> osed", function() {deepEqual( Stem("osedligheten"), "osed");});
test("oskadlig -> oskad", function() {deepEqual( Stem("oskadlig"), "oskad");});
test("oskadliga -> oskad", function() {deepEqual( Stem("oskadliga"), "oskad");});
test("oskalad -> oskal", function() {deepEqual( Stem("oskalad"), "oskal");});
test("oskattbara -> oskattbar", function() {deepEqual( Stem("oskattbara"), "oskattbar");});
test("oskicklig -> oskick", function() {deepEqual( Stem("oskicklig"), "oskick");});
test("oskiljaktiga -> oskiljakt", function() {deepEqual( Stem("oskiljaktiga"), "oskiljakt");});
test("oskrivna -> oskrivn", function() {deepEqual( Stem("oskrivna"), "oskrivn");});
test("oskuld -> oskuld", function() {deepEqual( Stem("oskuld"), "oskuld");});
test("oskulds -> oskuld", function() {deepEqual( Stem("oskulds"), "oskuld");});
test("oskyldig -> oskyld", function() {deepEqual( Stem("oskyldig"), "oskyld");});
test("oskyldiga -> oskyld", function() {deepEqual( Stem("oskyldiga"), "oskyld");});
test("oskyldighetens -> oskyld", function() {deepEqual( Stem("oskyldighetens"), "oskyld");});
test("oskyldigt -> oskyld", function() {deepEqual( Stem("oskyldigt"), "oskyld");});
test("oskönt -> oskönt", function() {deepEqual( Stem("oskönt"), "oskönt");});
test("osmakliga -> osmak", function() {deepEqual( Stem("osmakliga"), "osmak");});
test("osnygghet -> osnygg", function() {deepEqual( Stem("osnygghet"), "osnygg");});
test("ospard -> ospard", function() {deepEqual( Stem("ospard"), "ospard");});
test("ospätt -> ospät", function() {deepEqual( Stem("ospätt"), "ospät");});
test("oss -> oss", function() {deepEqual( Stem("oss"), "oss");});
test("ostindiska -> ostindisk", function() {deepEqual( Stem("ostindiska"), "ostindisk");});
test("ostkupa -> ostkup", function() {deepEqual( Stem("ostkupa"), "ostkup");});
test("ostron -> ostron", function() {deepEqual( Stem("ostron"), "ostron");});
test("osttransporten -> osttransport", function() {deepEqual( Stem("osttransporten"), "osttransport");});
test("ostyrig -> ostyr", function() {deepEqual( Stem("ostyrig"), "ostyr");});
test("ostyriga -> ostyr", function() {deepEqual( Stem("ostyriga"), "ostyr");});
test("ostyrige -> ostyr", function() {deepEqual( Stem("ostyrige"), "ostyr");});
test("ostörd -> ostörd", function() {deepEqual( Stem("ostörd"), "ostörd");});
test("ostörda -> ostörd", function() {deepEqual( Stem("ostörda"), "ostörd");});
test("ostört -> ostört", function() {deepEqual( Stem("ostört"), "ostört");});
test("osund -> osund", function() {deepEqual( Stem("osund"), "osund");});
test("osunda -> osund", function() {deepEqual( Stem("osunda"), "osund");});
test("osvald -> osvald", function() {deepEqual( Stem("osvald"), "osvald");});
test("osvikligt -> osvik", function() {deepEqual( Stem("osvikligt"), "osvik");});
test("osviva -> osviv", function() {deepEqual( Stem("osviva"), "osviv");});
test("osympatiskt -> osympatisk", function() {deepEqual( Stem("osympatiskt"), "osympatisk");});
test("osyn -> osyn", function() {deepEqual( Stem("osyn"), "osyn");});
test("osynlig -> osyn", function() {deepEqual( Stem("osynlig"), "osyn");});
test("osynliga -> osyn", function() {deepEqual( Stem("osynliga"), "osyn");});
test("osäkerhet -> osäker", function() {deepEqual( Stem("osäkerhet"), "osäker");});
test("osäkert -> osäkert", function() {deepEqual( Stem("osäkert"), "osäkert");});
test("osäkra -> osäkr", function() {deepEqual( Stem("osäkra"), "osäkr");});
test("otack -> otack", function() {deepEqual( Stem("otack"), "otack");});
test("otackad -> otack", function() {deepEqual( Stem("otackad"), "otack");});
test("otacksam -> otacksam", function() {deepEqual( Stem("otacksam"), "otacksam");});
test("otacksammaste -> otacksamm", function() {deepEqual( Stem("otacksammaste"), "otacksamm");});
test("otacksamme -> otacksamm", function() {deepEqual( Stem("otacksamme"), "otacksamm");});
test("otacksamt -> otacksamt", function() {deepEqual( Stem("otacksamt"), "otacksamt");});
test("otaheiti -> otaheiti", function() {deepEqual( Stem("otaheiti"), "otaheiti");});
test("otaliga -> ota", function() {deepEqual( Stem("otaliga"), "ota");});
test("otaligt -> ota", function() {deepEqual( Stem("otaligt"), "ota");});
test("otalt -> otalt", function() {deepEqual( Stem("otalt"), "otalt");});
test("otanes -> otan", function() {deepEqual( Stem("otanes"), "otan");});
test("otid -> otid", function() {deepEqual( Stem("otid"), "otid");});
test("otillbörliga -> otillbör", function() {deepEqual( Stem("otillbörliga"), "otillbör");});
test("otillbörligt -> otillbör", function() {deepEqual( Stem("otillbörligt"), "otillbör");});
test("otillfreds -> otillfred", function() {deepEqual( Stem("otillfreds"), "otillfred");});
test("otillfredsställd -> otillfredsställd", function() {deepEqual( Stem("otillfredsställd"), "otillfredsställd");});
test("otillfredsställda -> otillfredsställd", function() {deepEqual( Stem("otillfredsställda"), "otillfredsställd");});
test("otillfredsställt -> otillfredsställt", function() {deepEqual( Stem("otillfredsställt"), "otillfredsställt");});
test("otillgänglig -> otillgäng", function() {deepEqual( Stem("otillgänglig"), "otillgäng");});
test("otillgängliga -> otillgäng", function() {deepEqual( Stem("otillgängliga"), "otillgäng");});
test("otillgängligt -> otillgäng", function() {deepEqual( Stem("otillgängligt"), "otillgäng");});
test("otillräcklig -> otillräck", function() {deepEqual( Stem("otillräcklig"), "otillräck");});
test("otillräckligt -> otillräck", function() {deepEqual( Stem("otillräckligt"), "otillräck");});
test("otillständiga -> otillständ", function() {deepEqual( Stem("otillständiga"), "otillständ");});
test("otjenst -> otjenst", function() {deepEqual( Stem("otjenst"), "otjenst");});
test("otjensten -> otjenst", function() {deepEqual( Stem("otjensten"), "otjenst");});
test("otjänliga -> otjän", function() {deepEqual( Stem("otjänliga"), "otjän");});
test("otrevlig -> otrev", function() {deepEqual( Stem("otrevlig"), "otrev");});
test("otrevligaste -> otrev", function() {deepEqual( Stem("otrevligaste"), "otrev");});
test("otrevligt -> otrev", function() {deepEqual( Stem("otrevligt"), "otrev");});
test("otro -> otro", function() {deepEqual( Stem("otro"), "otro");});
test("otrogcn -> otrogcn", function() {deepEqual( Stem("otrogcn"), "otrogcn");});
test("otrogen -> otrog", function() {deepEqual( Stem("otrogen"), "otrog");});
test("otrogna -> otrogn", function() {deepEqual( Stem("otrogna"), "otrogn");});
test("otrogne -> otrogn", function() {deepEqual( Stem("otrogne"), "otrogn");});
test("otrohet -> otro", function() {deepEqual( Stem("otrohet"), "otro");});
test("otrolig -> otro", function() {deepEqual( Stem("otrolig"), "otro");});
test("otroliga -> otro", function() {deepEqual( Stem("otroliga"), "otro");});
test("otroligt -> otro", function() {deepEqual( Stem("otroligt"), "otro");});
test("otthard -> otthard", function() {deepEqual( Stem("otthard"), "otthard");});
test("ottomanen -> ottoman", function() {deepEqual( Stem("ottomanen"), "ottoman");});
test("otukten -> otuk", function() {deepEqual( Stem("otukten"), "otuk");});
test("otuktiga -> otukt", function() {deepEqual( Stem("otuktiga"), "otukt");});
test("otur -> otur", function() {deepEqual( Stem("otur"), "otur");});
test("oturen -> otur", function() {deepEqual( Stem("oturen"), "otur");});
test("otvifvelaktigt -> otvifvelakt", function() {deepEqual( Stem("otvifvelaktigt"), "otvifvelakt");});
test("otvivelaktigt -> otvivelakt", function() {deepEqual( Stem("otvivelaktigt"), "otvivelakt");});
test("otvungenhet -> otvungen", function() {deepEqual( Stem("otvungenhet"), "otvungen");});
test("otydbara -> otydbar", function() {deepEqual( Stem("otydbara"), "otydbar");});
test("otydlig -> otyd", function() {deepEqual( Stem("otydlig"), "otyd");});
test("otydliga -> otyd", function() {deepEqual( Stem("otydliga"), "otyd");});
test("otydligt -> otyd", function() {deepEqual( Stem("otydligt"), "otyd");});
test("otyg -> otyg", function() {deepEqual( Stem("otyg"), "otyg");});
test("otyget -> otyget", function() {deepEqual( Stem("otyget"), "otyget");});
test("otyglad -> otygl", function() {deepEqual( Stem("otyglad"), "otygl");});
test("otympligt -> otymp", function() {deepEqual( Stem("otympligt"), "otymp");});
test("otäck -> otäck", function() {deepEqual( Stem("otäck"), "otäck");});
test("otäcka -> otäck", function() {deepEqual( Stem("otäcka"), "otäck");});
test("otäckaste -> otäck", function() {deepEqual( Stem("otäckaste"), "otäck");});
test("otäckheter -> otäck", function() {deepEqual( Stem("otäckheter"), "otäck");});
test("otäckt -> otäck", function() {deepEqual( Stem("otäckt"), "otäck");});
test("otänkbara -> otänkbar", function() {deepEqual( Stem("otänkbara"), "otänkbar");});
test("otänkbart -> otänkbart", function() {deepEqual( Stem("otänkbart"), "otänkbart");});
test("otålig -> otå", function() {deepEqual( Stem("otålig"), "otå");});
test("otåliga -> otå", function() {deepEqual( Stem("otåliga"), "otå");});
test("otåligare -> otå", function() {deepEqual( Stem("otåligare"), "otå");});
test("otålige -> otå", function() {deepEqual( Stem("otålige"), "otå");});
test("otålighet -> otå", function() {deepEqual( Stem("otålighet"), "otå");});
test("otåligt -> otå", function() {deepEqual( Stem("otåligt"), "otå");});
test("otörstig -> otörst", function() {deepEqual( Stem("otörstig"), "otörst");});
test("otörstlg -> otörstlg", function() {deepEqual( Stem("otörstlg"), "otörstlg");});
test("oumbärligaste -> oumbär", function() {deepEqual( Stem("oumbärligaste"), "oumbär");});
test("oundgänglig -> oundgäng", function() {deepEqual( Stem("oundgänglig"), "oundgäng");});
test("oundgängliga -> oundgäng", function() {deepEqual( Stem("oundgängliga"), "oundgäng");});
test("oundgängligaste -> oundgäng", function() {deepEqual( Stem("oundgängligaste"), "oundgäng");});
test("oundvikliga -> oundvik", function() {deepEqual( Stem("oundvikliga"), "oundvik");});
test("oundvikligt -> oundvik", function() {deepEqual( Stem("oundvikligt"), "oundvik");});
test("oupphörligen -> oupphör", function() {deepEqual( Stem("oupphörligen"), "oupphör");});
test("oupphörligt -> oupphör", function() {deepEqual( Stem("oupphörligt"), "oupphör");});
test("oupptaget -> oupptaget", function() {deepEqual( Stem("oupptaget"), "oupptaget");});
test("outgrundlig -> outgrund", function() {deepEqual( Stem("outgrundlig"), "outgrund");});
test("outgrundligt -> outgrund", function() {deepEqual( Stem("outgrundligt"), "outgrund");});
test("outhärdlig -> outhärd", function() {deepEqual( Stem("outhärdlig"), "outhärd");});
test("outhärdliga -> outhärd", function() {deepEqual( Stem("outhärdliga"), "outhärd");});
test("outhärdligt -> outhärd", function() {deepEqual( Stem("outhärdligt"), "outhärd");});
test("outplånligt -> outplån", function() {deepEqual( Stem("outplånligt"), "outplån");});
test("outrannsakligt -> outrannsak", function() {deepEqual( Stem("outrannsakligt"), "outrannsak");});
test("outredda -> outred", function() {deepEqual( Stem("outredda"), "outred");});
test("outrotliga -> outrot", function() {deepEqual( Stem("outrotliga"), "outrot");});
test("outsläcklig -> outsläck", function() {deepEqual( Stem("outsläcklig"), "outsläck");});
test("outsläckligt -> outsläck", function() {deepEqual( Stem("outsläckligt"), "outsläck");});
test("outsäglig -> outsäg", function() {deepEqual( Stem("outsäglig"), "outsäg");});
test("outsägliga -> outsäg", function() {deepEqual( Stem("outsägliga"), "outsäg");});
test("outsägligt -> outsäg", function() {deepEqual( Stem("outsägligt"), "outsäg");});
test("outtröttlig -> outtrött", function() {deepEqual( Stem("outtröttlig"), "outtrött");});
test("outtröttliga -> outtrött", function() {deepEqual( Stem("outtröttliga"), "outtrött");});
test("outvecklad -> outveckl", function() {deepEqual( Stem("outvecklad"), "outveckl");});
test("ovad -> ovad", function() {deepEqual( Stem("ovad"), "ovad");});
test("oval -> oval", function() {deepEqual( Stem("oval"), "oval");});
test("ovala -> oval", function() {deepEqual( Stem("ovala"), "oval");});
test("ovan -> ovan", function() {deepEqual( Stem("ovan"), "ovan");});
test("ovana -> ovan", function() {deepEqual( Stem("ovana"), "ovan");});
test("ovanan -> ovanan", function() {deepEqual( Stem("ovanan"), "ovanan");});
test("ovanfor -> ovanf", function() {deepEqual( Stem("ovanfor"), "ovanf");});
test("ovanför -> ovanför", function() {deepEqual( Stem("ovanför"), "ovanför");});
test("ovanlig -> ovan", function() {deepEqual( Stem("ovanlig"), "ovan");});
test("ovanliga -> ovan", function() {deepEqual( Stem("ovanliga"), "ovan");});
test("ovanlighetens -> ovan", function() {deepEqual( Stem("ovanlighetens"), "ovan");});
test("ovanligt -> ovan", function() {deepEqual( Stem("ovanligt"), "ovan");});
test("ovannämnda -> ovannämnd", function() {deepEqual( Stem("ovannämnda"), "ovannämnd");});
test("ovanpå -> ovanpå", function() {deepEqual( Stem("ovanpå"), "ovanpå");});
test("ovansklig -> ovansk", function() {deepEqual( Stem("ovansklig"), "ovansk");});
test("ovant -> ovant", function() {deepEqual( Stem("ovant"), "ovant");});
test("ovaraktig -> ovarakt", function() {deepEqual( Stem("ovaraktig"), "ovarakt");});
test("ovarsam -> ovarsam", function() {deepEqual( Stem("ovarsam"), "ovarsam");});
test("ovarsamt -> ovarsamt", function() {deepEqual( Stem("ovarsamt"), "ovarsamt");});
test("over -> over", function() {deepEqual( Stem("over"), "over");});
test("overklig -> overk", function() {deepEqual( Stem("overklig"), "overk");});
test("overkligt -> overk", function() {deepEqual( Stem("overkligt"), "overk");});
test("overksam -> overksam", function() {deepEqual( Stem("overksam"), "overksam");});
test("overksamhet -> overksam", function() {deepEqual( Stem("overksamhet"), "overksam");});
test("overksamma -> overksamm", function() {deepEqual( Stem("overksamma"), "overksamm");});
test("overretade -> overret", function() {deepEqual( Stem("overretade"), "overret");});
test("overseende -> overseend", function() {deepEqual( Stem("overseende"), "overseend");});
test("ovetande -> ovet", function() {deepEqual( Stem("ovetande"), "ovet");});
test("ovett -> ovet", function() {deepEqual( Stem("ovett"), "ovet");});
test("ovidkommande -> ovidkomm", function() {deepEqual( Stem("ovidkommande"), "ovidkomm");});
test("ovigda -> ovig", function() {deepEqual( Stem("ovigda"), "ovig");});
test("oviktig -> ovikt", function() {deepEqual( Stem("oviktig"), "ovikt");});
test("ovilja -> ovilj", function() {deepEqual( Stem("ovilja"), "ovilj");});
test("ovilkorligt -> ovilkor", function() {deepEqual( Stem("ovilkorligt"), "ovilkor");});
test("ovill -> ovill", function() {deepEqual( Stem("ovill"), "ovill");});
test("ovillkoiliga -> ovillkoi", function() {deepEqual( Stem("ovillkoiliga"), "ovillkoi");});
test("ovillkorligen -> ovillkor", function() {deepEqual( Stem("ovillkorligen"), "ovillkor");});
test("ovillkorligt -> ovillkor", function() {deepEqual( Stem("ovillkorligt"), "ovillkor");});
test("ovisa -> ovis", function() {deepEqual( Stem("ovisa"), "ovis");});
test("oviss -> oviss", function() {deepEqual( Stem("oviss"), "oviss");});
test("ovisshet -> oviss", function() {deepEqual( Stem("ovisshet"), "oviss");});
test("ovissheten -> oviss", function() {deepEqual( Stem("ovissheten"), "oviss");});
test("ovisst -> ovisst", function() {deepEqual( Stem("ovisst"), "ovisst");});
test("oväder -> oväd", function() {deepEqual( Stem("oväder"), "oväd");});
test("oväderspiskade -> oväderspisk", function() {deepEqual( Stem("oväderspiskade"), "oväderspisk");});
test("ovädrets -> ovädret", function() {deepEqual( Stem("ovädrets"), "ovädret");});
test("ovälkomna -> ovälkomn", function() {deepEqual( Stem("ovälkomna"), "ovälkomn");});
test("ovälkomne -> ovälkomn", function() {deepEqual( Stem("ovälkomne"), "ovälkomn");});
test("ovän -> ovän", function() {deepEqual( Stem("ovän"), "ovän");});
test("ovänlig -> ovän", function() {deepEqual( Stem("ovänlig"), "ovän");});
test("ovänligt -> ovän", function() {deepEqual( Stem("ovänligt"), "ovän");});
test("ovänner -> ovän", function() {deepEqual( Stem("ovänner"), "ovän");});
test("oväntad -> ovänt", function() {deepEqual( Stem("oväntad"), "ovänt");});
test("oväntade -> ovänt", function() {deepEqual( Stem("oväntade"), "ovänt");});
test("oväntat -> ovänt", function() {deepEqual( Stem("oväntat"), "ovänt");});
test("ovärderlig -> ovärder", function() {deepEqual( Stem("ovärderlig"), "ovärder");});
test("ovärdig -> ovärd", function() {deepEqual( Stem("ovärdig"), "ovärd");});
test("ovärdige -> ovärd", function() {deepEqual( Stem("ovärdige"), "ovärd");});
test("ovärdigt -> ovärd", function() {deepEqual( Stem("ovärdigt"), "ovärd");});
test("oväsentligheter -> oväsent", function() {deepEqual( Stem("oväsentligheter"), "oväsent");});
test("oväsentligt -> oväsent", function() {deepEqual( Stem("oväsentligt"), "oväsent");});
test("oxar -> oxar", function() {deepEqual( Stem("oxar"), "oxar");});
test("oxars -> oxar", function() {deepEqual( Stem("oxars"), "oxar");});
test("oxbringan -> oxbringan", function() {deepEqual( Stem("oxbringan"), "oxbringan");});
test("oxe -> oxe", function() {deepEqual( Stem("oxe"), "oxe");});
test("oxel -> oxel", function() {deepEqual( Stem("oxel"), "oxel");});
test("oxköttet -> oxköttet", function() {deepEqual( Stem("oxköttet"), "oxköttet");});
test("oäkta -> oäkt", function() {deepEqual( Stem("oäkta"), "oäkt");});
test("oänd -> oänd", function() {deepEqual( Stem("oänd"), "oänd");});
test("oändlig -> oänd", function() {deepEqual( Stem("oändlig"), "oänd");});
test("oändliga -> oänd", function() {deepEqual( Stem("oändliga"), "oänd");});
test("oändlighet -> oänd", function() {deepEqual( Stem("oändlighet"), "oänd");});
test("oändligt -> oänd", function() {deepEqual( Stem("oändligt"), "oänd");});
test("oäven -> oäv", function() {deepEqual( Stem("oäven"), "oäv");});
test("oåterkalleliga -> oåterkalle", function() {deepEqual( Stem("oåterkalleliga"), "oåterkalle");});
test("oåterkalleligen -> oåterkalle", function() {deepEqual( Stem("oåterkalleligen"), "oåterkalle");});
test("oåtkomlig -> oåtkom", function() {deepEqual( Stem("oåtkomlig"), "oåtkom");});
test("oöfverlagda -> oöfverlag", function() {deepEqual( Stem("oöfverlagda"), "oöfverlag");});
test("oöfvervinnelig -> oöfvervinne", function() {deepEqual( Stem("oöfvervinnelig"), "oöfvervinne");});
test("oöfvervinneliga -> oöfvervinne", function() {deepEqual( Stem("oöfvervinneliga"), "oöfvervinne");});
test("oöverskådliga -> oöverskåd", function() {deepEqual( Stem("oöverskådliga"), "oöverskåd");});
test("oövervinneliga -> oövervinne", function() {deepEqual( Stem("oövervinneliga"), "oövervinne");});
test("oövervinneligt -> oövervinne", function() {deepEqual( Stem("oövervinneligt"), "oövervinne");});
test("p -> p", function() {deepEqual( Stem("p"), "p");});
test("pa -> pa", function() {deepEqual( Stem("pa"), "pa");});
test("paa -> paa", function() {deepEqual( Stem("paa"), "paa");});
test("pablen -> pabl", function() {deepEqual( Stem("pablen"), "pabl");});
test("pack -> pack", function() {deepEqual( Stem("pack"), "pack");});
test("packa -> pack", function() {deepEqual( Stem("packa"), "pack");});
test("packar -> pack", function() {deepEqual( Stem("packar"), "pack");});
test("packat -> pack", function() {deepEqual( Stem("packat"), "pack");});
test("packet -> packet", function() {deepEqual( Stem("packet"), "packet");});
test("packlår -> packlår", function() {deepEqual( Stem("packlår"), "packlår");});
test("packning -> packning", function() {deepEqual( Stem("packning"), "packning");});
test("packor -> pack", function() {deepEqual( Stem("packor"), "pack");});
test("packorna -> pack", function() {deepEqual( Stem("packorna"), "pack");});
test("padda -> padd", function() {deepEqual( Stem("padda"), "padd");});
test("paddan -> paddan", function() {deepEqual( Stem("paddan"), "paddan");});
test("pade -> pad", function() {deepEqual( Stem("pade"), "pad");});
test("pades -> pad", function() {deepEqual( Stem("pades"), "pad");});
test("pagatt -> pagat", function() {deepEqual( Stem("pagatt"), "pagat");});
test("page -> pag", function() {deepEqual( Stem("page"), "pag");});
test("pah -> pah", function() {deepEqual( Stem("pah"), "pah");});
test("pahittig -> pahitt", function() {deepEqual( Stem("pahittig"), "pahitt");});
test("pahlcn -> pahlcn", function() {deepEqual( Stem("pahlcn"), "pahlcn");});
test("pahle -> pahl", function() {deepEqual( Stem("pahle"), "pahl");});
test("pahlen -> pahl", function() {deepEqual( Stem("pahlen"), "pahl");});
test("pahleu -> pahleu", function() {deepEqual( Stem("pahleu"), "pahleu");});
test("pahlr -> pahlr", function() {deepEqual( Stem("pahlr"), "pahlr");});
test("pahlsn -> pahlsn", function() {deepEqual( Stem("pahlsn"), "pahlsn");});
test("paillen -> paill", function() {deepEqual( Stem("paillen"), "paill");});
test("pajasskratt -> pajasskrat", function() {deepEqual( Stem("pajasskratt"), "pajasskrat");});
test("pajrock -> pajrock", function() {deepEqual( Stem("pajrock"), "pajrock");});
test("paket -> paket", function() {deepEqual( Stem("paket"), "paket");});
test("palade -> pal", function() {deepEqual( Stem("palade"), "pal");});
test("palats -> palat", function() {deepEqual( Stem("palats"), "palat");});
test("pall -> pall", function() {deepEqual( Stem("pall"), "pall");});
test("pallen -> pall", function() {deepEqual( Stem("pallen"), "pall");});
test("palllen -> palll", function() {deepEqual( Stem("palllen"), "palll");});
test("palm -> palm", function() {deepEqual( Stem("palm"), "palm");});
test("palmaer -> palma", function() {deepEqual( Stem("palmaer"), "palma");});
test("palmer -> palm", function() {deepEqual( Stem("palmer"), "palm");});
test("palmqvist -> palmqvist", function() {deepEqual( Stem("palmqvist"), "palmqvist");});
test("palmsus -> palmsus", function() {deepEqual( Stem("palmsus"), "palmsus");});
test("paltiga -> palt", function() {deepEqual( Stem("paltiga"), "palt");});
test("paltlen -> paltl", function() {deepEqual( Stem("paltlen"), "paltl");});
test("pamparna -> pamp", function() {deepEqual( Stem("pamparna"), "pamp");});
test("pan -> pan", function() {deepEqual( Stem("pan"), "pan");});
test("pande -> pand", function() {deepEqual( Stem("pande"), "pand");});
test("panelen -> panel", function() {deepEqual( Stem("panelen"), "panel");});
test("paneler -> panel", function() {deepEqual( Stem("paneler"), "panel");});
test("pank -> pank", function() {deepEqual( Stem("pank"), "pank");});
test("panna -> pann", function() {deepEqual( Stem("panna"), "pann");});
test("pannan -> pannan", function() {deepEqual( Stem("pannan"), "pannan");});
test("pannkakor -> pannkak", function() {deepEqual( Stem("pannkakor"), "pannkak");});
test("pannorna -> pann", function() {deepEqual( Stem("pannorna"), "pann");});
test("pansar -> pans", function() {deepEqual( Stem("pansar"), "pans");});
test("pant -> pant", function() {deepEqual( Stem("pant"), "pant");});
test("pantomim -> pantomim", function() {deepEqual( Stem("pantomim"), "pantomim");});
test("pantomimen -> pantomim", function() {deepEqual( Stem("pantomimen"), "pantomim");});
test("pantomimer -> pantomim", function() {deepEqual( Stem("pantomimer"), "pantomim");});
test("pantomimiska -> pantomimisk", function() {deepEqual( Stem("pantomimiska"), "pantomimisk");});
test("pantomin -> pantomin", function() {deepEqual( Stem("pantomin"), "pantomin");});
test("pantsätta -> pantsät", function() {deepEqual( Stem("pantsätta"), "pantsät");});
test("papiljotter -> papiljot", function() {deepEqual( Stem("papiljotter"), "papiljot");});
test("papiljotterna -> papiljot", function() {deepEqual( Stem("papiljotterna"), "papiljot");});
test("papinianus -> papinianus", function() {deepEqual( Stem("papinianus"), "papinianus");});
test("pappa -> papp", function() {deepEqual( Stem("pappa"), "papp");});
test("pappas -> papp", function() {deepEqual( Stem("pappas"), "papp");});
test("pappask -> pappask", function() {deepEqual( Stem("pappask"), "pappask");});
test("pappenheimare -> pappenheim", function() {deepEqual( Stem("pappenheimare"), "pappenheim");});
test("papper -> papp", function() {deepEqual( Stem("papper"), "papp");});
test("papperen -> papper", function() {deepEqual( Stem("papperen"), "papper");});
test("papperet -> papperet", function() {deepEqual( Stem("papperet"), "papperet");});
test("papperskniv -> papperskniv", function() {deepEqual( Stem("papperskniv"), "papperskniv");});
test("papperslapp -> papperslapp", function() {deepEqual( Stem("papperslapp"), "papperslapp");});
test("papperslappar -> papperslapp", function() {deepEqual( Stem("papperslappar"), "papperslapp");});
test("pappersomslag -> pappersomslag", function() {deepEqual( Stem("pappersomslag"), "pappersomslag");});
test("pappersremsa -> pappersrems", function() {deepEqual( Stem("pappersremsa"), "pappersrems");});
test("pappersrosetter -> pappersroset", function() {deepEqual( Stem("pappersrosetter"), "pappersroset");});
test("pappersrullen -> pappersrull", function() {deepEqual( Stem("pappersrullen"), "pappersrull");});
test("pappersskärmar -> pappersskärm", function() {deepEqual( Stem("pappersskärmar"), "pappersskärm");});
test("pappersstadga -> pappersstadg", function() {deepEqual( Stem("pappersstadga"), "pappersstadg");});
test("papperstuss -> papperstuss", function() {deepEqual( Stem("papperstuss"), "papperstuss");});
test("par -> par", function() {deepEqual( Stem("par"), "par");});
test("para -> par", function() {deepEqual( Stem("para"), "par");});
test("parad -> par", function() {deepEqual( Stem("parad"), "par");});
test("paraden -> parad", function() {deepEqual( Stem("paraden"), "parad");});
test("paradigma -> paradigm", function() {deepEqual( Stem("paradigma"), "paradigm");});
test("paradis -> paradis", function() {deepEqual( Stem("paradis"), "paradis");});
test("paradiset -> paradiset", function() {deepEqual( Stem("paradiset"), "paradiset");});
test("parantes -> parant", function() {deepEqual( Stem("parantes"), "parant");});
test("paraply -> paraply", function() {deepEqual( Stem("paraply"), "paraply");});
test("paraplyet -> paraplyet", function() {deepEqual( Stem("paraplyet"), "paraplyet");});
test("paraplymakarna -> paraplymak", function() {deepEqual( Stem("paraplymakarna"), "paraplymak");});
test("paraplyn -> paraplyn", function() {deepEqual( Stem("paraplyn"), "paraplyn");});
test("parasolett -> parasolet", function() {deepEqual( Stem("parasolett"), "parasolet");});
test("parasoletten -> parasolet", function() {deepEqual( Stem("parasoletten"), "parasolet");});
test("parasoll -> parasoll", function() {deepEqual( Stem("parasoll"), "parasoll");});
test("parasollernas -> parasoll", function() {deepEqual( Stem("parasollernas"), "parasoll");});
test("parce -> parc", function() {deepEqual( Stem("parce"), "parc");});
test("paren -> par", function() {deepEqual( Stem("paren"), "par");});
test("parentes -> parent", function() {deepEqual( Stem("parentes"), "parent");});
test("paret -> paret", function() {deepEqual( Stem("paret"), "paret");});
test("parets -> paret", function() {deepEqual( Stem("parets"), "paret");});
test("parfym -> parfym", function() {deepEqual( Stem("parfym"), "parfym");});
test("parfymen -> parfym", function() {deepEqual( Stem("parfymen"), "parfym");});
test("paris -> paris", function() {deepEqual( Stem("paris"), "paris");});
test("parisiska -> parisisk", function() {deepEqual( Stem("parisiska"), "parisisk");});
test("parken -> park", function() {deepEqual( Stem("parken"), "park");});
test("parkens -> park", function() {deepEqual( Stem("parkens"), "park");});
test("parkernas -> park", function() {deepEqual( Stem("parkernas"), "park");});
test("parkett -> parket", function() {deepEqual( Stem("parkett"), "parket");});
test("parketten -> parket", function() {deepEqual( Stem("parketten"), "parket");});
test("parkettgolv -> parkettgolv", function() {deepEqual( Stem("parkettgolv"), "parkettgolv");});
test("parlament -> parlament", function() {deepEqual( Stem("parlament"), "parlament");});
test("parlement -> parlement", function() {deepEqual( Stem("parlement"), "parlement");});
test("parna -> parn", function() {deepEqual( Stem("parna"), "parn");});
test("paroit -> paroit", function() {deepEqual( Stem("paroit"), "paroit");});
test("paroxysmer -> paroxysm", function() {deepEqual( Stem("paroxysmer"), "paroxysm");});
test("pars -> par", function() {deepEqual( Stem("pars"), "par");});
test("parsifal -> parsifal", function() {deepEqual( Stem("parsifal"), "parsifal");});
test("parten -> part", function() {deepEqual( Stem("parten"), "part");});
test("parterna -> part", function() {deepEqual( Stem("parterna"), "part");});
test("parti -> parti", function() {deepEqual( Stem("parti"), "parti");});
test("partie -> parti", function() {deepEqual( Stem("partie"), "parti");});
test("partier -> parti", function() {deepEqual( Stem("partier"), "parti");});
test("partierna -> parti", function() {deepEqual( Stem("partierna"), "parti");});
test("partiet -> partiet", function() {deepEqual( Stem("partiet"), "partiet");});
test("partisk -> partisk", function() {deepEqual( Stem("partisk"), "partisk");});
test("partiska -> partisk", function() {deepEqual( Stem("partiska"), "partisk");});
test("partout -> partout", function() {deepEqual( Stem("partout"), "partout");});
test("partu -> partu", function() {deepEqual( Stem("partu"), "partu");});
test("parvis -> parvis", function() {deepEqual( Stem("parvis"), "parvis");});
test("pas -> pas", function() {deepEqual( Stem("pas"), "pas");});
test("pascal -> pascal", function() {deepEqual( Stem("pascal"), "pascal");});
test("pass -> pass", function() {deepEqual( Stem("pass"), "pass");});
test("passa -> pass", function() {deepEqual( Stem("passa"), "pass");});
test("passade -> pass", function() {deepEqual( Stem("passade"), "pass");});
test("passagerarna -> passager", function() {deepEqual( Stem("passagerarna"), "passager");});
test("passande -> pass", function() {deepEqual( Stem("passande"), "pass");});
test("passar -> pass", function() {deepEqual( Stem("passar"), "pass");});
test("passat -> pass", function() {deepEqual( Stem("passat"), "pass");});
test("passera -> passer", function() {deepEqual( Stem("passera"), "passer");});
test("passerade -> passer", function() {deepEqual( Stem("passerade"), "passer");});
test("passerat -> passer", function() {deepEqual( Stem("passerat"), "passer");});
test("passion -> passion", function() {deepEqual( Stem("passion"), "passion");});
test("passionens -> passion", function() {deepEqual( Stem("passionens"), "passion");});
test("passionerad -> passioner", function() {deepEqual( Stem("passionerad"), "passioner");});
test("passionerat -> passioner", function() {deepEqual( Stem("passionerat"), "passioner");});
test("passiv -> passiv", function() {deepEqual( Stem("passiv"), "passiv");});
test("passopp -> passopp", function() {deepEqual( Stem("passopp"), "passopp");});
test("past -> past", function() {deepEqual( Stem("past"), "past");});
test("pastor -> past", function() {deepEqual( Stem("pastor"), "past");});
test("pastorat -> pastor", function() {deepEqual( Stem("pastorat"), "pastor");});
test("pastoratets -> pastoratet", function() {deepEqual( Stem("pastoratets"), "pastoratet");});
test("pastorn -> pastorn", function() {deepEqual( Stem("pastorn"), "pastorn");});
test("pastorns -> pastorn", function() {deepEqual( Stem("pastorns"), "pastorn");});
test("pastorsadjunkt -> pastorsadjunk", function() {deepEqual( Stem("pastorsadjunkt"), "pastorsadjunk");});
test("pastorsadjunkten -> pastorsadjunk", function() {deepEqual( Stem("pastorsadjunkten"), "pastorsadjunk");});
test("patent -> patent", function() {deepEqual( Stem("patent"), "patent");});
test("pater -> pat", function() {deepEqual( Stem("pater"), "pat");});
test("paternoster -> paternost", function() {deepEqual( Stem("paternoster"), "paternost");});
test("paternosterskären -> paternosterskär", function() {deepEqual( Stem("paternosterskären"), "paternosterskär");});
test("patetisk -> patetisk", function() {deepEqual( Stem("patetisk"), "patetisk");});
test("patetiskt -> patetisk", function() {deepEqual( Stem("patetiskt"), "patetisk");});
test("patiens -> pati", function() {deepEqual( Stem("patiens"), "pati");});
test("patienskorten -> patienskort", function() {deepEqual( Stem("patienskorten"), "patienskort");});
test("patient -> patient", function() {deepEqual( Stem("patient"), "patient");});
test("patienten -> patient", function() {deepEqual( Stem("patienten"), "patient");});
test("patientens -> patient", function() {deepEqual( Stem("patientens"), "patient");});
test("patienter -> patient", function() {deepEqual( Stem("patienter"), "patient");});
test("patienterna -> patient", function() {deepEqual( Stem("patienterna"), "patient");});
test("patiramfes -> patiramf", function() {deepEqual( Stem("patiramfes"), "patiramf");});
test("patos -> pato", function() {deepEqual( Stem("patos"), "pato");});
test("patrask -> patrask", function() {deepEqual( Stem("patrask"), "patrask");});
test("patron -> patron", function() {deepEqual( Stem("patron"), "patron");});
test("patronen -> patron", function() {deepEqual( Stem("patronen"), "patron");});
test("patronessa -> patroness", function() {deepEqual( Stem("patronessa"), "patroness");});
test("patronessan -> patronessan", function() {deepEqual( Stem("patronessan"), "patronessan");});
test("patronessas -> patroness", function() {deepEqual( Stem("patronessas"), "patroness");});
test("patrons -> patron", function() {deepEqual( Stem("patrons"), "patron");});
test("patrull -> patrull", function() {deepEqual( Stem("patrull"), "patrull");});
test("paula -> paul", function() {deepEqual( Stem("paula"), "paul");});
test("pauli -> pauli", function() {deepEqual( Stem("pauli"), "pauli");});
test("paus -> paus", function() {deepEqual( Stem("paus"), "paus");});
test("pausen -> paus", function() {deepEqual( Stem("pausen"), "paus");});
test("pauvre -> pauvr", function() {deepEqual( Stem("pauvre"), "pauvr");});
test("paviljongen -> paviljong", function() {deepEqual( Stem("paviljongen"), "paviljong");});
test("pcka -> pcka", function() {deepEqual( Stem("pcka"), "pcka");});
test("pclargonia -> pclargoni", function() {deepEqual( Stem("pclargonia"), "pclargoni");});
test("pctra -> pctra", function() {deepEqual( Stem("pctra"), "pctra");});
test("pedalen -> pedal", function() {deepEqual( Stem("pedalen"), "pedal");});
test("pedantansikte -> pedantansik", function() {deepEqual( Stem("pedantansikte"), "pedantansik");});
test("pedantiskt -> pedantisk", function() {deepEqual( Stem("pedantiskt"), "pedantisk");});
test("peka -> pek", function() {deepEqual( Stem("peka"), "pek");});
test("pekade -> pek", function() {deepEqual( Stem("pekade"), "pek");});
test("pekande -> pek", function() {deepEqual( Stem("pekande"), "pek");});
test("pekar -> pek", function() {deepEqual( Stem("pekar"), "pek");});
test("pekat -> pek", function() {deepEqual( Stem("pekat"), "pek");});
test("pekfinger -> pekfing", function() {deepEqual( Stem("pekfinger"), "pekfing");});
test("pekfingerknoge -> pekfingerknog", function() {deepEqual( Stem("pekfingerknoge"), "pekfingerknog");});
test("pekfingret -> pekfingret", function() {deepEqual( Stem("pekfingret"), "pekfingret");});
test("pelarfasad -> pelarfas", function() {deepEqual( Stem("pelarfasad"), "pelarfas");});
test("pelargonia -> pelargoni", function() {deepEqual( Stem("pelargonia"), "pelargoni");});
test("pelarn -> pelarn", function() {deepEqual( Stem("pelarn"), "pelarn");});
test("pelham -> pelham", function() {deepEqual( Stem("pelham"), "pelham");});
test("pelra -> pelr", function() {deepEqual( Stem("pelra"), "pelr");});
test("pendang -> pendang", function() {deepEqual( Stem("pendang"), "pendang");});
test("pendangkomedi -> pendangkomedi", function() {deepEqual( Stem("pendangkomedi"), "pendangkomedi");});
test("pendel -> pendel", function() {deepEqual( Stem("pendel"), "pendel");});
test("pendylen -> pendyl", function() {deepEqual( Stem("pendylen"), "pendyl");});
test("pendyler -> pendyl", function() {deepEqual( Stem("pendyler"), "pendyl");});
test("pengar -> peng", function() {deepEqual( Stem("pengar"), "peng");});
test("pengarna -> peng", function() {deepEqual( Stem("pengarna"), "peng");});
test("pengarne -> peng", function() {deepEqual( Stem("pengarne"), "peng");});
test("penjoar -> penjo", function() {deepEqual( Stem("penjoar"), "penjo");});
test("penjoaren -> penjo", function() {deepEqual( Stem("penjoaren"), "penjo");});
test("penjoarens -> penjo", function() {deepEqual( Stem("penjoarens"), "penjo");});
test("penna -> penn", function() {deepEqual( Stem("penna"), "penn");});
test("pennan -> pennan", function() {deepEqual( Stem("pennan"), "pennan");});
test("penndrag -> penndrag", function() {deepEqual( Stem("penndrag"), "penndrag");});
test("pennfjädersviftningen -> pennfjädersviftning", function() {deepEqual( Stem("pennfjädersviftningen"), "pennfjädersviftning");});
test("pennfjädrar -> pennfjädr", function() {deepEqual( Stem("pennfjädrar"), "pennfjädr");});
test("penning -> penning", function() {deepEqual( Stem("penning"), "penning");});
test("penningar -> penning", function() {deepEqual( Stem("penningar"), "penning");});
test("penningarna -> penning", function() {deepEqual( Stem("penningarna"), "penning");});
test("penningbegäret -> penningbegäret", function() {deepEqual( Stem("penningbegäret"), "penningbegäret");});
test("penningeaffärer -> penningeaffär", function() {deepEqual( Stem("penningeaffärer"), "penningeaffär");});
test("penningeförlägenhet -> penningeförlägen", function() {deepEqual( Stem("penningeförlägenhet"), "penningeförlägen");});
test("penningen -> penning", function() {deepEqual( Stem("penningen"), "penning");});
test("penningens -> penning", function() {deepEqual( Stem("penningens"), "penning");});
test("penningeutgifter -> penningeutgift", function() {deepEqual( Stem("penningeutgifter"), "penningeutgift");});
test("penninghjälp -> penninghjälp", function() {deepEqual( Stem("penninghjälp"), "penninghjälp");});
test("penningpungen -> penningpung", function() {deepEqual( Stem("penningpungen"), "penningpung");});
test("penningsumman -> penningsumman", function() {deepEqual( Stem("penningsumman"), "penningsumman");});
test("penningälskande -> penningälsk", function() {deepEqual( Stem("penningälskande"), "penningälsk");});
test("pennkniv -> pennkniv", function() {deepEqual( Stem("pennkniv"), "pennkniv");});
test("pennor -> penn", function() {deepEqual( Stem("pennor"), "penn");});
test("pennorna -> penn", function() {deepEqual( Stem("pennorna"), "penn");});
test("pens -> pen", function() {deepEqual( Stem("pens"), "pen");});
test("pense -> pens", function() {deepEqual( Stem("pense"), "pens");});
test("penseer -> pense", function() {deepEqual( Stem("penseer"), "pense");});
test("penseldrag -> penseldrag", function() {deepEqual( Stem("penseldrag"), "penseldrag");});
test("penseln -> penseln", function() {deepEqual( Stem("penseln"), "penseln");});
test("penseögonen -> penseögon", function() {deepEqual( Stem("penseögonen"), "penseögon");});
test("penseögonens -> penseögon", function() {deepEqual( Stem("penseögonens"), "penseögon");});
test("pension -> pension", function() {deepEqual( Stem("pension"), "pension");});
test("pensionen -> pension", function() {deepEqual( Stem("pensionen"), "pension");});
test("pensionerad -> pensioner", function() {deepEqual( Stem("pensionerad"), "pensioner");});
test("pensionsbeloppet -> pensionsbeloppet", function() {deepEqual( Stem("pensionsbeloppet"), "pensionsbeloppet");});
test("pep -> pep", function() {deepEqual( Stem("pep"), "pep");});
test("peppar -> pepp", function() {deepEqual( Stem("peppar"), "pepp");});
test("pepparroten -> pepparrot", function() {deepEqual( Stem("pepparroten"), "pepparrot");});
test("pepprad -> peppr", function() {deepEqual( Stem("pepprad"), "peppr");});
test("pepprat -> peppr", function() {deepEqual( Stem("pepprat"), "peppr");});
test("per -> per", function() {deepEqual( Stem("per"), "per");});
test("period -> period", function() {deepEqual( Stem("period"), "period");});
test("periodiskt -> periodisk", function() {deepEqual( Stem("periodiskt"), "periodisk");});
test("perla -> perl", function() {deepEqual( Stem("perla"), "perl");});
test("perlrader -> perlrad", function() {deepEqual( Stem("perlrader"), "perlrad");});
test("permar -> perm", function() {deepEqual( Stem("permar"), "perm");});
test("permission -> permission", function() {deepEqual( Stem("permission"), "permission");});
test("perrongen -> perrong", function() {deepEqual( Stem("perrongen"), "perrong");});
test("pers -> per", function() {deepEqual( Stem("pers"), "per");});
test("persedlar -> persedl", function() {deepEqual( Stem("persedlar"), "persedl");});
test("persmässa -> persmäss", function() {deepEqual( Stem("persmässa"), "persmäss");});
test("person -> person", function() {deepEqual( Stem("person"), "person");});
test("personal -> personal", function() {deepEqual( Stem("personal"), "personal");});
test("personalen -> personal", function() {deepEqual( Stem("personalen"), "personal");});
test("personen -> person", function() {deepEqual( Stem("personen"), "person");});
test("personer -> person", function() {deepEqual( Stem("personer"), "person");});
test("personfierade -> personfier", function() {deepEqual( Stem("personfierade"), "personfier");});
test("personifierade -> personifier", function() {deepEqual( Stem("personifierade"), "personifier");});
test("personlig -> person", function() {deepEqual( Stem("personlig"), "person");});
test("personliga -> person", function() {deepEqual( Stem("personliga"), "person");});
test("personligen -> person", function() {deepEqual( Stem("personligen"), "person");});
test("personlighet -> person", function() {deepEqual( Stem("personlighet"), "person");});
test("personligheter -> person", function() {deepEqual( Stem("personligheter"), "person");});
test("personligt -> person", function() {deepEqual( Stem("personligt"), "person");});
test("perspektiv -> perspektiv", function() {deepEqual( Stem("perspektiv"), "perspektiv");});
test("persson -> persson", function() {deepEqual( Stem("persson"), "persson");});
test("peruk -> peruk", function() {deepEqual( Stem("peruk"), "peruk");});
test("perukstock -> perukstock", function() {deepEqual( Stem("perukstock"), "perukstock");});
test("perversa -> pervers", function() {deepEqual( Stem("perversa"), "pervers");});
test("pest -> pest", function() {deepEqual( Stem("pest"), "pest");});
test("pestartad -> pestart", function() {deepEqual( Stem("pestartad"), "pestart");});
test("pesten -> pest", function() {deepEqual( Stem("pesten"), "pest");});
test("pestilens -> pestil", function() {deepEqual( Stem("pestilens"), "pestil");});
test("pestsmittad -> pestsmit", function() {deepEqual( Stem("pestsmittad"), "pestsmit");});
test("petade -> pet", function() {deepEqual( Stem("petade"), "pet");});
test("petat -> pet", function() {deepEqual( Stem("petat"), "pet");});
test("peter -> pet", function() {deepEqual( Stem("peter"), "pet");});
test("peters -> peter", function() {deepEqual( Stem("peters"), "peter");});
test("petits -> petit", function() {deepEqual( Stem("petits"), "petit");});
test("petra -> petr", function() {deepEqual( Stem("petra"), "petr");});
test("petras -> petr", function() {deepEqual( Stem("petras"), "petr");});
test("petri -> petri", function() {deepEqual( Stem("petri"), "petri");});
test("petter -> pett", function() {deepEqual( Stem("petter"), "pett");});
test("petters -> petter", function() {deepEqual( Stem("petters"), "petter");});
test("pfa -> pfa", function() {deepEqual( Stem("pfa"), "pfa");});
test("pfalz -> pfalz", function() {deepEqual( Stem("pfalz"), "pfalz");});
test("pfalzgreves -> pfalzgrev", function() {deepEqual( Stem("pfalzgreves"), "pfalzgrev");});
test("phoebus -> phoebus", function() {deepEqual( Stem("phoebus"), "phoebus");});
test("pi -> pi", function() {deepEqual( Stem("pi"), "pi");});
test("piano -> piano", function() {deepEqual( Stem("piano"), "piano");});
test("pianolektioner -> pianolektion", function() {deepEqual( Stem("pianolektioner"), "pianolektion");});
test("pianot -> pianot", function() {deepEqual( Stem("pianot"), "pianot");});
test("picka -> pick", function() {deepEqual( Stem("picka"), "pick");});
test("pickade -> pick", function() {deepEqual( Stem("pickade"), "pick");});
test("pickande -> pick", function() {deepEqual( Stem("pickande"), "pick");});
test("pickandet -> pick", function() {deepEqual( Stem("pickandet"), "pick");});
test("pickar -> pick", function() {deepEqual( Stem("pickar"), "pick");});
test("pietistisk -> pietistisk", function() {deepEqual( Stem("pietistisk"), "pietistisk");});
test("piga -> pig", function() {deepEqual( Stem("piga"), "pig");});
test("pigan -> pigan", function() {deepEqual( Stem("pigan"), "pigan");});
test("pigans -> pigan", function() {deepEqual( Stem("pigans"), "pigan");});
test("pigg -> pigg", function() {deepEqual( Stem("pigg"), "pigg");});
test("pigga -> pigg", function() {deepEqual( Stem("pigga"), "pigg");});
test("piggar -> pigg", function() {deepEqual( Stem("piggar"), "pigg");});
test("piggare -> pigg", function() {deepEqual( Stem("piggare"), "pigg");});
test("pigor -> pig", function() {deepEqual( Stem("pigor"), "pig");});
test("pigslynorna -> pigslyn", function() {deepEqual( Stem("pigslynorna"), "pigslyn");});
test("pigtyp -> pigtyp", function() {deepEqual( Stem("pigtyp"), "pigtyp");});
test("pik -> pik", function() {deepEqual( Stem("pik"), "pik");});
test("pikant -> pikant", function() {deepEqual( Stem("pikant"), "pikant");});
test("pikanta -> pikant", function() {deepEqual( Stem("pikanta"), "pikant");});
test("pikar -> pik", function() {deepEqual( Stem("pikar"), "pik");});
test("pil -> pil", function() {deepEqual( Stem("pil"), "pil");});
test("pilar -> pil", function() {deepEqual( Stem("pilar"), "pil");});
test("pilarna -> pil", function() {deepEqual( Stem("pilarna"), "pil");});
test("pilarnas -> pil", function() {deepEqual( Stem("pilarnas"), "pil");});
test("pilastrar -> pilastr", function() {deepEqual( Stem("pilastrar"), "pilastr");});
test("pilen -> pil", function() {deepEqual( Stem("pilen"), "pil");});
test("pilgrim -> pilgrim", function() {deepEqual( Stem("pilgrim"), "pilgrim");});
test("pilgrimen -> pilgrim", function() {deepEqual( Stem("pilgrimen"), "pilgrim");});
test("pilgrimsvandring -> pilgrimsvandring", function() {deepEqual( Stem("pilgrimsvandring"), "pilgrimsvandring");});
test("pilkogret -> pilkogret", function() {deepEqual( Stem("pilkogret"), "pilkogret");});
test("piller -> pill", function() {deepEqual( Stem("piller"), "pill");});
test("pillerasken -> pillerask", function() {deepEqual( Stem("pillerasken"), "pillerask");});
test("pillerna -> pill", function() {deepEqual( Stem("pillerna"), "pill");});
test("pillertrillare -> pillertrill", function() {deepEqual( Stem("pillertrillare"), "pillertrill");});
test("pillman -> pillman", function() {deepEqual( Stem("pillman"), "pillman");});
test("pillret -> pillret", function() {deepEqual( Stem("pillret"), "pillret");});
test("pilskarp -> pilskarp", function() {deepEqual( Stem("pilskarp"), "pilskarp");});
test("pilsner -> pilsn", function() {deepEqual( Stem("pilsner"), "pilsn");});
test("pilt -> pilt", function() {deepEqual( Stem("pilt"), "pilt");});
test("pimplar -> pimpl", function() {deepEqual( Stem("pimplar"), "pimpl");});
test("pin -> pin", function() {deepEqual( Stem("pin"), "pin");});
test("pina -> pin", function() {deepEqual( Stem("pina"), "pin");});
test("pinade -> pin", function() {deepEqual( Stem("pinade"), "pin");});
test("pinades -> pin", function() {deepEqual( Stem("pinades"), "pin");});
test("pinan -> pinan", function() {deepEqual( Stem("pinan"), "pinan");});
test("pinar -> pin", function() {deepEqual( Stem("pinar"), "pin");});
test("pinas -> pin", function() {deepEqual( Stem("pinas"), "pin");});
test("pinat -> pin", function() {deepEqual( Stem("pinat"), "pin");});
test("pinats -> pinat", function() {deepEqual( Stem("pinats"), "pinat");});
test("pincene -> pincen", function() {deepEqual( Stem("pincene"), "pincen");});
test("pincenen -> pincen", function() {deepEqual( Stem("pincenen"), "pincen");});
test("pinglade -> pingl", function() {deepEqual( Stem("pinglade"), "pingl");});
test("pingstens -> pingst", function() {deepEqual( Stem("pingstens"), "pingst");});
test("pingstliljor -> pingstlilj", function() {deepEqual( Stem("pingstliljor"), "pingstlilj");});
test("pinliga -> pin", function() {deepEqual( Stem("pinliga"), "pin");});
test("pinnarna -> pinn", function() {deepEqual( Stem("pinnarna"), "pinn");});
test("pinsam -> pinsam", function() {deepEqual( Stem("pinsam"), "pinsam");});
test("pinsbacks -> pinsback", function() {deepEqual( Stem("pinsbacks"), "pinsback");});
test("pion -> pion", function() {deepEqual( Stem("pion"), "pion");});
test("pionen -> pion", function() {deepEqual( Stem("pionen"), "pion");});
test("pionröd -> pionröd", function() {deepEqual( Stem("pionröd"), "pionröd");});
test("pip -> pip", function() {deepEqual( Stem("pip"), "pip");});
test("pipa -> pip", function() {deepEqual( Stem("pipa"), "pip");});
test("pipan -> pipan", function() {deepEqual( Stem("pipan"), "pipan");});
test("pipande -> pip", function() {deepEqual( Stem("pipande"), "pip");});
test("piper -> pip", function() {deepEqual( Stem("piper"), "pip");});
test("piperska -> pipersk", function() {deepEqual( Stem("piperska"), "pipersk");});
test("pipig -> pip", function() {deepEqual( Stem("pipig"), "pip");});
test("pipor -> pip", function() {deepEqual( Stem("pipor"), "pip");});
test("piporna -> pip", function() {deepEqual( Stem("piporna"), "pip");});
test("pippa -> pipp", function() {deepEqual( Stem("pippa"), "pipp");});
test("pippor -> pipp", function() {deepEqual( Stem("pippor"), "pipp");});
test("pipporna -> pipp", function() {deepEqual( Stem("pipporna"), "pipp");});
test("pipstumpen -> pipstump", function() {deepEqual( Stem("pipstumpen"), "pipstump");});
test("pique -> piqu", function() {deepEqual( Stem("pique"), "piqu");});
test("piraten -> pirat", function() {deepEqual( Stem("piraten"), "pirat");});
test("piska -> pisk", function() {deepEqual( Stem("piska"), "pisk");});
test("piskade -> pisk", function() {deepEqual( Stem("piskade"), "pisk");});
test("piskan -> piskan", function() {deepEqual( Stem("piskan"), "piskan");});
test("piskas -> pisk", function() {deepEqual( Stem("piskas"), "pisk");});
test("piskat -> pisk", function() {deepEqual( Stem("piskat"), "pisk");});
test("piskslag -> piskslag", function() {deepEqual( Stem("piskslag"), "piskslag");});
test("pistol -> pistol", function() {deepEqual( Stem("pistol"), "pistol");});
test("pistolerna -> pistol", function() {deepEqual( Stem("pistolerna"), "pistol");});
test("pistolskott -> pistolskot", function() {deepEqual( Stem("pistolskott"), "pistolskot");});
test("pitscherstickarn -> pitscherstickarn", function() {deepEqual( Stem("pitscherstickarn"), "pitscherstickarn");});
test("pittoreskt -> pittoresk", function() {deepEqual( Stem("pittoreskt"), "pittoresk");});
test("pjattra -> pjattr", function() {deepEqual( Stem("pjattra"), "pjattr");});
test("pjes -> pjes", function() {deepEqual( Stem("pjes"), "pjes");});
test("pjesen -> pjes", function() {deepEqual( Stem("pjesen"), "pjes");});
test("pjoskas -> pjosk", function() {deepEqual( Stem("pjoskas"), "pjosk");});
test("pjunkeri -> pjunkeri", function() {deepEqual( Stem("pjunkeri"), "pjunkeri");});
test("pjunkiga -> pjunk", function() {deepEqual( Stem("pjunkiga"), "pjunk");});
test("pjäs -> pjäs", function() {deepEqual( Stem("pjäs"), "pjäs");});
test("pjäser -> pjäs", function() {deepEqual( Stem("pjäser"), "pjäs");});
test("pl -> pl", function() {deepEqual( Stem("pl"), "pl");});
test("placera -> placer", function() {deepEqual( Stem("placera"), "placer");});
test("placerad -> placer", function() {deepEqual( Stem("placerad"), "placer");});
test("placerade -> placer", function() {deepEqual( Stem("placerade"), "placer");});
test("placerat -> placer", function() {deepEqual( Stem("placerat"), "placer");});
test("pladask -> pladask", function() {deepEqual( Stem("pladask"), "pladask");});
test("pladder -> pladd", function() {deepEqual( Stem("pladder"), "pladd");});
test("pladdrade -> pladdr", function() {deepEqual( Stem("pladdrade"), "pladdr");});
test("pladdrande -> pladdr", function() {deepEqual( Stem("pladdrande"), "pladdr");});
test("plagg -> plagg", function() {deepEqual( Stem("plagg"), "plagg");});
test("plaggen -> plagg", function() {deepEqual( Stem("plaggen"), "plagg");});
test("plan -> plan", function() {deepEqual( Stem("plan"), "plan");});
test("planen -> plan", function() {deepEqual( Stem("planen"), "plan");});
test("planer -> plan", function() {deepEqual( Stem("planer"), "plan");});
test("planerad -> planer", function() {deepEqual( Stem("planerad"), "planer");});
test("planerat -> planer", function() {deepEqual( Stem("planerat"), "planer");});
test("planet -> planet", function() {deepEqual( Stem("planet"), "planet");});
test("planeter -> planet", function() {deepEqual( Stem("planeter"), "planet");});
test("plank -> plank", function() {deepEqual( Stem("plank"), "plank");});
test("planka -> plank", function() {deepEqual( Stem("planka"), "plank");});
test("planken -> plank", function() {deepEqual( Stem("planken"), "plank");});
test("planket -> planket", function() {deepEqual( Stem("planket"), "planket");});
test("plankhjärtat -> plankhjärt", function() {deepEqual( Stem("plankhjärtat"), "plankhjärt");});
test("planlagda -> planlag", function() {deepEqual( Stem("planlagda"), "planlag");});
test("planscher -> plansch", function() {deepEqual( Stem("planscher"), "plansch");});
test("planschverkshögarna -> planschverkshög", function() {deepEqual( Stem("planschverkshögarna"), "planschverkshög");});
test("planta -> plant", function() {deepEqual( Stem("planta"), "plant");});
test("plantan -> plantan", function() {deepEqual( Stem("plantan"), "plantan");});
test("plantar -> plant", function() {deepEqual( Stem("plantar"), "plant");});
test("planterade -> planter", function() {deepEqual( Stem("planterade"), "planter");});
test("planterar -> planter", function() {deepEqual( Stem("planterar"), "planter");});
test("planterat -> planter", function() {deepEqual( Stem("planterat"), "planter");});
test("plantering -> plantering", function() {deepEqual( Stem("plantering"), "plantering");});
test("planteringarne -> plantering", function() {deepEqual( Stem("planteringarne"), "plantering");});
test("planteringens -> plantering", function() {deepEqual( Stem("planteringens"), "plantering");});
test("plaskande -> plask", function() {deepEqual( Stem("plaskande"), "plask");});
test("plats -> plat", function() {deepEqual( Stem("plats"), "plat");});
test("platsen -> plats", function() {deepEqual( Stem("platsen"), "plats");});
test("platser -> plats", function() {deepEqual( Stem("platser"), "plats");});
test("platserna -> plats", function() {deepEqual( Stem("platserna"), "plats");});
test("platsombud -> platsombud", function() {deepEqual( Stem("platsombud"), "platsombud");});
test("platt -> platt", function() {deepEqual( Stem("platt"), "platt");});
test("plattade -> platt", function() {deepEqual( Stem("plattade"), "platt");});
test("plattnosansikte -> plattnosansik", function() {deepEqual( Stem("plattnosansikte"), "plattnosansik");});
test("pli -> pli", function() {deepEqual( Stem("pli"), "pli");});
test("pligt -> pligt", function() {deepEqual( Stem("pligt"), "pligt");});
test("pligten -> pligt", function() {deepEqual( Stem("pligten"), "pligt");});
test("pligter -> pligt", function() {deepEqual( Stem("pligter"), "pligt");});
test("plikt -> plikt", function() {deepEqual( Stem("plikt"), "plikt");});
test("plikta -> plikt", function() {deepEqual( Stem("plikta"), "plikt");});
test("pliktat -> plikt", function() {deepEqual( Stem("pliktat"), "plikt");});
test("plikten -> plikt", function() {deepEqual( Stem("plikten"), "plikt");});
test("plikter -> plikt", function() {deepEqual( Stem("plikter"), "plikt");});
test("pliktformulär -> pliktformulär", function() {deepEqual( Stem("pliktformulär"), "pliktformulär");});
test("pliktförgätna -> pliktförgätn", function() {deepEqual( Stem("pliktförgätna"), "pliktförgätn");});
test("pliktkänsla -> pliktkänsl", function() {deepEqual( Stem("pliktkänsla"), "pliktkänsl");});
test("pliktskyldiga -> pliktskyld", function() {deepEqual( Stem("pliktskyldiga"), "pliktskyld");});
test("plirade -> plir", function() {deepEqual( Stem("plirade"), "plir");});
test("plirande -> plir", function() {deepEqual( Stem("plirande"), "plir");});
test("plirar -> plir", function() {deepEqual( Stem("plirar"), "plir");});
test("pllkt -> pllkt", function() {deepEqual( Stem("pllkt"), "pllkt");});
test("plocka -> plock", function() {deepEqual( Stem("plocka"), "plock");});
test("plockade -> plock", function() {deepEqual( Stem("plockade"), "plock");});
test("plockar -> plock", function() {deepEqual( Stem("plockar"), "plock");});
test("plockat -> plock", function() {deepEqual( Stem("plockat"), "plock");});
test("plogen -> plog", function() {deepEqual( Stem("plogen"), "plog");});
test("plotsligt -> plots", function() {deepEqual( Stem("plotsligt"), "plots");});
test("plugga -> plugg", function() {deepEqual( Stem("plugga"), "plugg");});
test("pluggade -> plugg", function() {deepEqual( Stem("pluggade"), "plugg");});
test("plumpa -> plump", function() {deepEqual( Stem("plumpa"), "plump");});
test("pluralis -> pluralis", function() {deepEqual( Stem("pluralis"), "pluralis");});
test("plus -> plus", function() {deepEqual( Stem("plus"), "plus");});
test("plyet -> plyet", function() {deepEqual( Stem("plyet"), "plyet");});
test("plym -> plym", function() {deepEqual( Stem("plym"), "plym");});
test("plymbusken -> plymbusk", function() {deepEqual( Stem("plymbusken"), "plymbusk");});
test("plysch -> plysch", function() {deepEqual( Stem("plysch"), "plysch");});
test("plägade -> pläg", function() {deepEqual( Stem("plägade"), "pläg");});
test("plägar -> pläg", function() {deepEqual( Stem("plägar"), "pläg");});
test("plär -> plär", function() {deepEqual( Stem("plär"), "plär");});
test("plättar -> plätt", function() {deepEqual( Stem("plättar"), "plätt");});
test("plåeade -> plåead", function() {deepEqual( Stem("plåeade"), "plåead");});
test("plåga -> plåg", function() {deepEqual( Stem("plåga"), "plåg");});
test("plågad -> plåg", function() {deepEqual( Stem("plågad"), "plåg");});
test("plågade -> plåg", function() {deepEqual( Stem("plågade"), "plåg");});
test("plågan -> plågan", function() {deepEqual( Stem("plågan"), "plågan");});
test("plågans -> plågan", function() {deepEqual( Stem("plågans"), "plågan");});
test("plågar -> plåg", function() {deepEqual( Stem("plågar"), "plåg");});
test("plågas -> plåg", function() {deepEqual( Stem("plågas"), "plåg");});
test("plågat -> plåg", function() {deepEqual( Stem("plågat"), "plåg");});
test("plågoandar -> plågoand", function() {deepEqual( Stem("plågoandar"), "plågoand");});
test("plågoandars -> plågoandar", function() {deepEqual( Stem("plågoandars"), "plågoandar");});
test("plågoande -> plågo", function() {deepEqual( Stem("plågoande"), "plågo");});
test("plågor -> plåg", function() {deepEqual( Stem("plågor"), "plåg");});
test("plågoris -> plågoris", function() {deepEqual( Stem("plågoris"), "plågoris");});
test("plågorna -> plåg", function() {deepEqual( Stem("plågorna"), "plåg");});
test("plågorum -> plågorum", function() {deepEqual( Stem("plågorum"), "plågorum");});
test("plågsam -> plågsam", function() {deepEqual( Stem("plågsam"), "plågsam");});
test("plågsamma -> plågsamm", function() {deepEqual( Stem("plågsamma"), "plågsamm");});
test("plågsammaste -> plågsamm", function() {deepEqual( Stem("plågsammaste"), "plågsamm");});
test("plågsamt -> plågsamt", function() {deepEqual( Stem("plågsamt"), "plågsamt");});
test("plånades -> plån", function() {deepEqual( Stem("plånades"), "plån");});
test("plånas -> plån", function() {deepEqual( Stem("plånas"), "plån");});
test("plånat -> plån", function() {deepEqual( Stem("plånat"), "plån");});
test("plånbok -> plånbok", function() {deepEqual( Stem("plånbok"), "plånbok");});
test("plånboken -> plånbok", function() {deepEqual( Stem("plånboken"), "plånbok");});
test("plåtskorstenar -> plåtskorsten", function() {deepEqual( Stem("plåtskorstenar"), "plåtskorsten");});
test("plåtskärmar -> plåtskärm", function() {deepEqual( Stem("plåtskärmar"), "plåtskärm");});
test("plåttak -> plåttak", function() {deepEqual( Stem("plåttak"), "plåttak");});
test("plöja -> plöj", function() {deepEqual( Stem("plöja"), "plöj");});
test("plöjde -> plöjd", function() {deepEqual( Stem("plöjde"), "plöjd");});
test("plöjdes -> plöjd", function() {deepEqual( Stem("plöjdes"), "plöjd");});
test("plöts -> plöt", function() {deepEqual( Stem("plöts"), "plöt");});
test("plötslig -> plöts", function() {deepEqual( Stem("plötslig"), "plöts");});
test("plötsliga -> plöts", function() {deepEqual( Stem("plötsliga"), "plöts");});
test("plötsligt -> plöts", function() {deepEqual( Stem("plötsligt"), "plöts");});
test("pnhlen -> pnhlen", function() {deepEqual( Stem("pnhlen"), "pnhlen");});
test("pocka -> pock", function() {deepEqual( Stem("pocka"), "pock");});
test("pockade -> pock", function() {deepEqual( Stem("pockade"), "pock");});
test("pockern -> pock", function() {deepEqual( Stem("pockern"), "pock");});
test("poem -> poem", function() {deepEqual( Stem("poem"), "poem");});
test("poemet -> poemet", function() {deepEqual( Stem("poemet"), "poemet");});
test("poesi -> poesi", function() {deepEqual( Stem("poesi"), "poesi");});
test("poesibok -> poesibok", function() {deepEqual( Stem("poesibok"), "poesibok");});
test("poesierna -> poesi", function() {deepEqual( Stem("poesierna"), "poesi");});
test("poet -> poet", function() {deepEqual( Stem("poet"), "poet");});
test("poete -> poet", function() {deepEqual( Stem("poete"), "poet");});
test("poetens -> poet", function() {deepEqual( Stem("poetens"), "poet");});
test("poetisk -> poetisk", function() {deepEqual( Stem("poetisk"), "poetisk");});
test("poetiska -> poetisk", function() {deepEqual( Stem("poetiska"), "poetisk");});
test("poetiske -> poetisk", function() {deepEqual( Stem("poetiske"), "poetisk");});
test("poetiskt -> poetisk", function() {deepEqual( Stem("poetiskt"), "poetisk");});
test("pohle -> pohl", function() {deepEqual( Stem("pohle"), "pohl");});
test("pohls -> pohl", function() {deepEqual( Stem("pohls"), "pohl");});
test("pois -> pois", function() {deepEqual( Stem("pois"), "pois");});
test("poj -> poj", function() {deepEqual( Stem("poj"), "poj");});
test("pojkaktig -> pojkakt", function() {deepEqual( Stem("pojkaktig"), "pojkakt");});
test("pojkaktigt -> pojkakt", function() {deepEqual( Stem("pojkaktigt"), "pojkakt");});
test("pojkar -> pojk", function() {deepEqual( Stem("pojkar"), "pojk");});
test("pojkbytingen -> pojkbyting", function() {deepEqual( Stem("pojkbytingen"), "pojkbyting");});
test("pojke -> pojk", function() {deepEqual( Stem("pojke"), "pojk");});
test("pojken -> pojk", function() {deepEqual( Stem("pojken"), "pojk");});
test("pokaler -> pokal", function() {deepEqual( Stem("pokaler"), "pokal");});
test("poleja -> polej", function() {deepEqual( Stem("poleja"), "polej");});
test("polen -> pol", function() {deepEqual( Stem("polen"), "pol");});
test("polera -> poler", function() {deepEqual( Stem("polera"), "poler");});
test("polerade -> poler", function() {deepEqual( Stem("polerade"), "poler");});
test("polis -> polis", function() {deepEqual( Stem("polis"), "polis");});
test("polisen -> polis", function() {deepEqual( Stem("polisen"), "polis");});
test("poliskonstapel -> poliskonstapel", function() {deepEqual( Stem("poliskonstapel"), "poliskonstapel");});
test("poliskonstapeln -> poliskonstapeln", function() {deepEqual( Stem("poliskonstapeln"), "poliskonstapeln");});
test("polisonger -> polisong", function() {deepEqual( Stem("polisonger"), "polisong");});
test("polissongerna -> polissong", function() {deepEqual( Stem("polissongerna"), "polissong");});
test("politik -> politik", function() {deepEqual( Stem("politik"), "politik");});
test("politiken -> politik", function() {deepEqual( Stem("politiken"), "politik");});
test("politiker -> politik", function() {deepEqual( Stem("politiker"), "politik");});
test("politiska -> politisk", function() {deepEqual( Stem("politiska"), "politisk");});
test("polityr -> polityr", function() {deepEqual( Stem("polityr"), "polityr");});
test("polityrkärl -> polityrkärl", function() {deepEqual( Stem("polityrkärl"), "polityrkärl");});
test("pomril -> pomril", function() {deepEqual( Stem("pomril"), "pomril");});
test("ponerar -> poner", function() {deepEqual( Stem("ponerar"), "poner");});
test("ponken -> ponk", function() {deepEqual( Stem("ponken"), "ponk");});
test("poppelspiran -> poppelspiran", function() {deepEqual( Stem("poppelspiran"), "poppelspiran");});
test("popplar -> poppl", function() {deepEqual( Stem("popplar"), "poppl");});
test("popplarne -> poppl", function() {deepEqual( Stem("popplarne"), "poppl");});
test("popularitet -> popularitet", function() {deepEqual( Stem("popularitet"), "popularitet");});
test("populasen -> populas", function() {deepEqual( Stem("populasen"), "populas");});
test("populi -> populi", function() {deepEqual( Stem("populi"), "populi");});
test("populär -> populär", function() {deepEqual( Stem("populär"), "populär");});
test("populärt -> populärt", function() {deepEqual( Stem("populärt"), "populärt");});
test("porla -> porl", function() {deepEqual( Stem("porla"), "porl");});
test("porlade -> porl", function() {deepEqual( Stem("porlade"), "porl");});
test("porlande -> porl", function() {deepEqual( Stem("porlande"), "porl");});
test("porlar -> porl", function() {deepEqual( Stem("porlar"), "porl");});
test("porslin -> porslin", function() {deepEqual( Stem("porslin"), "porslin");});
test("porslinerna -> porslin", function() {deepEqual( Stem("porslinerna"), "porslin");});
test("porslinet -> porslinet", function() {deepEqual( Stem("porslinet"), "porslinet");});
test("porslinspröd -> porslinspröd", function() {deepEqual( Stem("porslinspröd"), "porslinspröd");});
test("porslinsvasen -> porslinsvas", function() {deepEqual( Stem("porslinsvasen"), "porslinsvas");});
test("port -> port", function() {deepEqual( Stem("port"), "port");});
test("portalen -> portal", function() {deepEqual( Stem("portalen"), "portal");});
test("portar -> port", function() {deepEqual( Stem("portar"), "port");});
test("portativ -> portativ", function() {deepEqual( Stem("portativ"), "portativ");});
test("portativa -> portativ", function() {deepEqual( Stem("portativa"), "portativ");});
test("porten -> port", function() {deepEqual( Stem("porten"), "port");});
test("portens -> port", function() {deepEqual( Stem("portens"), "port");});
test("porter -> port", function() {deepEqual( Stem("porter"), "port");});
test("portgång -> portgång", function() {deepEqual( Stem("portgång"), "portgång");});
test("portgången -> portgång", function() {deepEqual( Stem("portgången"), "portgång");});
test("portik -> portik", function() {deepEqual( Stem("portik"), "portik");});
test("portion -> portion", function() {deepEqual( Stem("portion"), "portion");});
test("portioner -> portion", function() {deepEqual( Stem("portioner"), "portion");});
test("portiären -> portiär", function() {deepEqual( Stem("portiären"), "portiär");});
test("portmonnä -> portmonnä", function() {deepEqual( Stem("portmonnä"), "portmonnä");});
test("porträtt -> porträt", function() {deepEqual( Stem("porträtt"), "porträt");});
test("porträttet -> porträttet", function() {deepEqual( Stem("porträttet"), "porträttet");});
test("portugalsvatten -> portugalsvat", function() {deepEqual( Stem("portugalsvatten"), "portugalsvat");});
test("portugisisk -> portugisisk", function() {deepEqual( Stem("portugisisk"), "portugisisk");});
test("portvalvet -> portvalvet", function() {deepEqual( Stem("portvalvet"), "portvalvet");});
test("portvin -> portvin", function() {deepEqual( Stem("portvin"), "portvin");});
test("portör -> portör", function() {deepEqual( Stem("portör"), "portör");});
test("portören -> portör", function() {deepEqual( Stem("portören"), "portör");});
test("pose -> pos", function() {deepEqual( Stem("pose"), "pos");});
test("poserande -> poser", function() {deepEqual( Stem("poserande"), "poser");});
test("poserar -> poser", function() {deepEqual( Stem("poserar"), "poser");});
test("position -> position", function() {deepEqual( Stem("position"), "position");});
test("post -> post", function() {deepEqual( Stem("post"), "post");});
test("postb -> postb", function() {deepEqual( Stem("postb"), "postb");});
test("postbäraren -> postbär", function() {deepEqual( Stem("postbäraren"), "postbär");});
test("postdag -> postdag", function() {deepEqual( Stem("postdag"), "postdag");});
test("posten -> post", function() {deepEqual( Stem("posten"), "post");});
test("poster -> post", function() {deepEqual( Stem("poster"), "post");});
test("posterad -> poster", function() {deepEqual( Stem("posterad"), "poster");});
test("posterade -> poster", function() {deepEqual( Stem("posterade"), "poster");});
test("postilla -> postill", function() {deepEqual( Stem("postilla"), "postill");});
test("postpengar -> postpeng", function() {deepEqual( Stem("postpengar"), "postpeng");});
test("potage -> potag", function() {deepEqual( Stem("potage"), "potag");});
test("potatis -> potatis", function() {deepEqual( Stem("potatis"), "potatis");});
test("potatisen -> potatis", function() {deepEqual( Stem("potatisen"), "potatis");});
test("potatislandet -> potatisl", function() {deepEqual( Stem("potatislandet"), "potatisl");});
test("potatisskal -> potatisskal", function() {deepEqual( Stem("potatisskal"), "potatisskal");});
test("potches -> potch", function() {deepEqual( Stem("potches"), "potch");});
test("potemkin -> potemkin", function() {deepEqual( Stem("potemkin"), "potemkin");});
test("potemkins -> potemkin", function() {deepEqual( Stem("potemkins"), "potemkin");});
test("pottkäsburken -> pottkäsburk", function() {deepEqual( Stem("pottkäsburken"), "pottkäsburk");});
test("pr -> pr", function() {deepEqual( Stem("pr"), "pr");});
test("prakt -> prakt", function() {deepEqual( Stem("prakt"), "prakt");});
test("praktartiklar -> praktartikl", function() {deepEqual( Stem("praktartiklar"), "praktartikl");});
test("prakten -> prakt", function() {deepEqual( Stem("prakten"), "prakt");});
test("praktfulla -> praktfull", function() {deepEqual( Stem("praktfulla"), "praktfull");});
test("praktfullt -> praktfull", function() {deepEqual( Stem("praktfullt"), "praktfull");});
test("praktgemak -> praktgemak", function() {deepEqual( Stem("praktgemak"), "praktgemak");});
test("praktik -> praktik", function() {deepEqual( Stem("praktik"), "praktik");});
test("praktiken -> praktik", function() {deepEqual( Stem("praktiken"), "praktik");});
test("praktisera -> praktiser", function() {deepEqual( Stem("praktisera"), "praktiser");});
test("praktisk -> praktisk", function() {deepEqual( Stem("praktisk"), "praktisk");});
test("praktiska -> praktisk", function() {deepEqual( Stem("praktiska"), "praktisk");});
test("prasslade -> prassl", function() {deepEqual( Stem("prasslade"), "prassl");});
test("prasslar -> prassl", function() {deepEqual( Stem("prasslar"), "prassl");});
test("prasslet -> prasslet", function() {deepEqual( Stem("prasslet"), "prasslet");});
test("prat -> prat", function() {deepEqual( Stem("prat"), "prat");});
test("prata -> prat", function() {deepEqual( Stem("prata"), "prat");});
test("pratade -> prat", function() {deepEqual( Stem("pratade"), "prat");});
test("pratades -> prat", function() {deepEqual( Stem("pratades"), "prat");});
test("pratar -> prat", function() {deepEqual( Stem("pratar"), "prat");});
test("pratat -> prat", function() {deepEqual( Stem("pratat"), "prat");});
test("pratets -> pratet", function() {deepEqual( Stem("pratets"), "pratet");});
test("pratlystna -> pratlystn", function() {deepEqual( Stem("pratlystna"), "pratlystn");});
test("pratsamma -> pratsamm", function() {deepEqual( Stem("pratsamma"), "pratsamm");});
test("prcdikan -> prcdikan", function() {deepEqual( Stem("prcdikan"), "prcdikan");});
test("pre -> pre", function() {deepEqual( Stem("pre"), "pre");});
test("precis -> precis", function() {deepEqual( Stem("precis"), "precis");});
test("precist -> precist", function() {deepEqual( Stem("precist"), "precist");});
test("predestination -> predestination", function() {deepEqual( Stem("predestination"), "predestination");});
test("predi -> predi", function() {deepEqual( Stem("predi"), "predi");});
test("predika -> predik", function() {deepEqual( Stem("predika"), "predik");});
test("predikade -> predik", function() {deepEqual( Stem("predikade"), "predik");});
test("predikament -> predikament", function() {deepEqual( Stem("predikament"), "predikament");});
test("predikan -> predikan", function() {deepEqual( Stem("predikan"), "predikan");});
test("predikant -> predikant", function() {deepEqual( Stem("predikant"), "predikant");});
test("predikanten -> predikant", function() {deepEqual( Stem("predikanten"), "predikant");});
test("predikantens -> predikant", function() {deepEqual( Stem("predikantens"), "predikant");});
test("predikanter -> predikant", function() {deepEqual( Stem("predikanter"), "predikant");});
test("predikaren -> predik", function() {deepEqual( Stem("predikaren"), "predik");});
test("predikat -> predik", function() {deepEqual( Stem("predikat"), "predik");});
test("predikningar -> predikning", function() {deepEqual( Stem("predikningar"), "predikning");});
test("predikningars -> predikningar", function() {deepEqual( Stem("predikningars"), "predikningar");});
test("predikstolen -> predikstol", function() {deepEqual( Stem("predikstolen"), "predikstol");});
test("pregel -> pregel", function() {deepEqual( Stem("pregel"), "pregel");});
test("pregeln -> pregeln", function() {deepEqual( Stem("pregeln"), "pregeln");});
test("prejade -> prej", function() {deepEqual( Stem("prejade"), "prej");});
test("prejar -> prej", function() {deepEqual( Stem("prejar"), "prej");});
test("preludier -> preludi", function() {deepEqual( Stem("preludier"), "preludi");});
test("premiäraktör -> premiäraktör", function() {deepEqual( Stem("premiäraktör"), "premiäraktör");});
test("premiäraktören -> premiäraktör", function() {deepEqual( Stem("premiäraktören"), "premiäraktör");});
test("pres -> pres", function() {deepEqual( Stem("pres"), "pres");});
test("present -> present", function() {deepEqual( Stem("present"), "present");});
test("presentabel -> presentabel", function() {deepEqual( Stem("presentabel"), "presentabel");});
test("presenter -> present", function() {deepEqual( Stem("presenter"), "present");});
test("presentera -> presenter", function() {deepEqual( Stem("presentera"), "presenter");});
test("presenterade -> presenter", function() {deepEqual( Stem("presenterade"), "presenter");});
test("presenterna -> present", function() {deepEqual( Stem("presenterna"), "present");});
test("press -> press", function() {deepEqual( Stem("press"), "press");});
test("pressa -> press", function() {deepEqual( Stem("pressa"), "press");});
test("pressade -> press", function() {deepEqual( Stem("pressade"), "press");});
test("pressande -> press", function() {deepEqual( Stem("pressande"), "press");});
test("pressat -> press", function() {deepEqual( Stem("pressat"), "press");});
test("presse -> press", function() {deepEqual( Stem("presse"), "press");});
test("pressen -> press", function() {deepEqual( Stem("pressen"), "press");});
test("prestbetyg -> prestbetyg", function() {deepEqual( Stem("prestbetyg"), "prestbetyg");});
test("prestdotter -> prestdot", function() {deepEqual( Stem("prestdotter"), "prestdot");});
test("presten -> prest", function() {deepEqual( Stem("presten"), "prest");});
test("pretention -> pretention", function() {deepEqual( Stem("pretention"), "pretention");});
test("pretentioner -> pretention", function() {deepEqual( Stem("pretentioner"), "pretention");});
test("pretentionerna -> pretention", function() {deepEqual( Stem("pretentionerna"), "pretention");});
test("pretentiösa -> pretentiös", function() {deepEqual( Stem("pretentiösa"), "pretentiös");});
test("preussen -> preuss", function() {deepEqual( Stem("preussen"), "preuss");});
test("preussisk -> preussisk", function() {deepEqual( Stem("preussisk"), "preussisk");});
test("prick -> prick", function() {deepEqual( Stem("prick"), "prick");});
test("pricka -> prick", function() {deepEqual( Stem("pricka"), "prick");});
test("prickad -> prick", function() {deepEqual( Stem("prickad"), "prick");});
test("pricken -> prick", function() {deepEqual( Stem("pricken"), "prick");});
test("primadolma -> primadolm", function() {deepEqual( Stem("primadolma"), "primadolm");});
test("primariiämbetet -> primariiämbetet", function() {deepEqual( Stem("primariiämbetet"), "primariiämbetet");});
test("primarius -> primarius", function() {deepEqual( Stem("primarius"), "primarius");});
test("primus -> primus", function() {deepEqual( Stem("primus"), "primus");});
test("princesse -> princess", function() {deepEqual( Stem("princesse"), "princess");});
test("principal -> principal", function() {deepEqual( Stem("principal"), "principal");});
test("prins -> prin", function() {deepEqual( Stem("prins"), "prin");});
test("prinsar -> prins", function() {deepEqual( Stem("prinsar"), "prins");});
test("prinsen -> prins", function() {deepEqual( Stem("prinsen"), "prins");});
test("prinsessa -> prinsess", function() {deepEqual( Stem("prinsessa"), "prinsess");});
test("prinsessan -> prinsessan", function() {deepEqual( Stem("prinsessan"), "prinsessan");});
test("prior -> prior", function() {deepEqual( Stem("prior"), "prior");});
test("pris -> pris", function() {deepEqual( Stem("pris"), "pris");});
test("prisa -> pris", function() {deepEqual( Stem("prisa"), "pris");});
test("prisade -> pris", function() {deepEqual( Stem("prisade"), "pris");});
test("prisande -> pris", function() {deepEqual( Stem("prisande"), "pris");});
test("prisar -> pris", function() {deepEqual( Stem("prisar"), "pris");});
test("prisat -> pris", function() {deepEqual( Stem("prisat"), "pris");});
test("prisen -> pris", function() {deepEqual( Stem("prisen"), "pris");});
test("priserna -> pris", function() {deepEqual( Stem("priserna"), "pris");});
test("priset -> priset", function() {deepEqual( Stem("priset"), "priset");});
test("privat -> priv", function() {deepEqual( Stem("privat"), "priv");});
test("privatbanker -> privatbank", function() {deepEqual( Stem("privatbanker"), "privatbank");});
test("privatdöpt -> privatdöpt", function() {deepEqual( Stem("privatdöpt"), "privatdöpt");});
test("privilegium -> privilegium", function() {deepEqual( Stem("privilegium"), "privilegium");});
test("pro -> pro", function() {deepEqual( Stem("pro"), "pro");});
test("problem -> problem", function() {deepEqual( Stem("problem"), "problem");});
test("problemet -> problemet", function() {deepEqual( Stem("problemet"), "problemet");});
test("procent -> procent", function() {deepEqual( Stem("procent"), "procent");});
test("procentar -> procent", function() {deepEqual( Stem("procentar"), "procent");});
test("procentarhänder -> procentarhänd", function() {deepEqual( Stem("procentarhänder"), "procentarhänd");});
test("processen -> process", function() {deepEqual( Stem("processen"), "process");});
test("procession -> procession", function() {deepEqual( Stem("procession"), "procession");});
test("producera -> producer", function() {deepEqual( Stem("producera"), "producer");});
test("produkter -> produk", function() {deepEqual( Stem("produkter"), "produk");});
test("prof -> prof", function() {deepEqual( Stem("prof"), "prof");});
test("profana -> profan", function() {deepEqual( Stem("profana"), "profan");});
test("profession -> profession", function() {deepEqual( Stem("profession"), "profession");});
test("professionell -> professionell", function() {deepEqual( Stem("professionell"), "professionell");});
test("professionella -> professionell", function() {deepEqual( Stem("professionella"), "professionell");});
test("professo -> professo", function() {deepEqual( Stem("professo"), "professo");});
test("professor -> profess", function() {deepEqual( Stem("professor"), "profess");});
test("professorers -> professorer", function() {deepEqual( Stem("professorers"), "professorer");});
test("professorn -> professorn", function() {deepEqual( Stem("professorn"), "professorn");});
test("professorns -> professorn", function() {deepEqual( Stem("professorns"), "professorn");});
test("professors -> professor", function() {deepEqual( Stem("professors"), "professor");});
test("profet -> profet", function() {deepEqual( Stem("profet"), "profet");});
test("profeten -> profet", function() {deepEqual( Stem("profeten"), "profet");});
test("profeter -> profet", function() {deepEqual( Stem("profeter"), "profet");});
test("profetera -> profeter", function() {deepEqual( Stem("profetera"), "profeter");});
test("profetia -> profeti", function() {deepEqual( Stem("profetia"), "profeti");});
test("profetisk -> profetisk", function() {deepEqual( Stem("profetisk"), "profetisk");});
test("profil -> profil", function() {deepEqual( Stem("profil"), "profil");});
test("profilen -> profil", function() {deepEqual( Stem("profilen"), "profil");});
test("profseglas -> profsegl", function() {deepEqual( Stem("profseglas"), "profsegl");});
test("profstycke -> profstyck", function() {deepEqual( Stem("profstycke"), "profstyck");});
test("profvets -> profvet", function() {deepEqual( Stem("profvets"), "profvet");});
test("programmen -> programm", function() {deepEqual( Stem("programmen"), "programm");});
test("programmet -> programmet", function() {deepEqual( Stem("programmet"), "programmet");});
test("projekt -> projek", function() {deepEqual( Stem("projekt"), "projek");});
test("prolongation -> prolongation", function() {deepEqual( Stem("prolongation"), "prolongation");});
test("promenad -> promen", function() {deepEqual( Stem("promenad"), "promen");});
test("promenaden -> promenad", function() {deepEqual( Stem("promenaden"), "promenad");});
test("promenader -> promenad", function() {deepEqual( Stem("promenader"), "promenad");});
test("promenadkängor -> promenadkäng", function() {deepEqual( Stem("promenadkängor"), "promenadkäng");});
test("promenadplats -> promenadplat", function() {deepEqual( Stem("promenadplats"), "promenadplat");});
test("promenadplatsen -> promenadplats", function() {deepEqual( Stem("promenadplatsen"), "promenadplats");});
test("promenera -> promener", function() {deepEqual( Stem("promenera"), "promener");});
test("promenerade -> promener", function() {deepEqual( Stem("promenerade"), "promener");});
test("promenerande -> promener", function() {deepEqual( Stem("promenerande"), "promener");});
test("promenerar -> promener", function() {deepEqual( Stem("promenerar"), "promener");});
test("promenerat -> promener", function() {deepEqual( Stem("promenerat"), "promener");});
test("prompt -> prompt", function() {deepEqual( Stem("prompt"), "prompt");});
test("proportion -> proportion", function() {deepEqual( Stem("proportion"), "proportion");});
test("proportionnees -> proportionne", function() {deepEqual( Stem("proportionnees"), "proportionne");});
test("propos -> propo", function() {deepEqual( Stem("propos"), "propo");});
test("proppade -> propp", function() {deepEqual( Stem("proppade"), "propp");});
test("proppar -> propp", function() {deepEqual( Stem("proppar"), "propp");});
test("prosaiska -> prosaisk", function() {deepEqual( Stem("prosaiska"), "prosaisk");});
test("prosan -> prosan", function() {deepEqual( Stem("prosan"), "prosan");});
test("prosans -> prosan", function() {deepEqual( Stem("prosans"), "prosan");});
test("prosceniet -> prosceniet", function() {deepEqual( Stem("prosceniet"), "prosceniet");});
test("prost -> prost", function() {deepEqual( Stem("prost"), "prost");});
test("prosten -> prost", function() {deepEqual( Stem("prosten"), "prost");});
test("prostens -> prost", function() {deepEqual( Stem("prostens"), "prost");});
test("prostfars -> prostfar", function() {deepEqual( Stem("prostfars"), "prostfar");});
test("prostgården -> prostgård", function() {deepEqual( Stem("prostgården"), "prostgård");});
test("prosthus -> prosthus", function() {deepEqual( Stem("prosthus"), "prosthus");});
test("prostinna -> prostin", function() {deepEqual( Stem("prostinna"), "prostin");});
test("prostinnan -> prostinnan", function() {deepEqual( Stem("prostinnan"), "prostinnan");});
test("prostitutionen -> prostitution", function() {deepEqual( Stem("prostitutionen"), "prostitution");});
test("prosttiteln -> prosttiteln", function() {deepEqual( Stem("prosttiteln"), "prosttiteln");});
test("protestanter -> protestant", function() {deepEqual( Stem("protestanter"), "protestant");});
test("protestera -> protester", function() {deepEqual( Stem("protestera"), "protester");});
test("protesterade -> protester", function() {deepEqual( Stem("protesterade"), "protester");});
test("prov -> prov", function() {deepEqual( Stem("prov"), "prov");});
test("provade -> prov", function() {deepEqual( Stem("provade"), "prov");});
test("provet -> provet", function() {deepEqual( Stem("provet"), "provet");});
test("provinser -> provins", function() {deepEqual( Stem("provinser"), "provins");});
test("provisorn -> provisorn", function() {deepEqual( Stem("provisorn"), "provisorn");});
test("provkandidat -> provkandid", function() {deepEqual( Stem("provkandidat"), "provkandid");});
test("prudentliga -> prudent", function() {deepEqual( Stem("prudentliga"), "prudent");});
test("prunkade -> prunk", function() {deepEqual( Stem("prunkade"), "prunk");});
test("prunkande -> prunk", function() {deepEqual( Stem("prunkande"), "prunk");});
test("prunkar -> prunk", function() {deepEqual( Stem("prunkar"), "prunk");});
test("prunkat -> prunk", function() {deepEqual( Stem("prunkat"), "prunk");});
test("prut -> prut", function() {deepEqual( Stem("prut"), "prut");});
test("pruta -> prut", function() {deepEqual( Stem("pruta"), "prut");});
test("prutade -> prut", function() {deepEqual( Stem("prutade"), "prut");});
test("prutar -> prut", function() {deepEqual( Stem("prutar"), "prut");});
test("prvda -> prvda", function() {deepEqual( Stem("prvda"), "prvda");});
test("pryda -> pryd", function() {deepEqual( Stem("pryda"), "pryd");});
test("prydas -> pryd", function() {deepEqual( Stem("prydas"), "pryd");});
test("prydd -> prydd", function() {deepEqual( Stem("prydd"), "prydd");});
test("prydde -> prydd", function() {deepEqual( Stem("prydde"), "prydd");});
test("pryddes -> prydd", function() {deepEqual( Stem("pryddes"), "prydd");});
test("pryder -> pryd", function() {deepEqual( Stem("pryder"), "pryd");});
test("prydlig -> pryd", function() {deepEqual( Stem("prydlig"), "pryd");});
test("prydliga -> pryd", function() {deepEqual( Stem("prydliga"), "pryd");});
test("prydligaste -> pryd", function() {deepEqual( Stem("prydligaste"), "pryd");});
test("prydlighet -> pryd", function() {deepEqual( Stem("prydlighet"), "pryd");});
test("prydligt -> pryd", function() {deepEqual( Stem("prydligt"), "pryd");});
test("prydnad -> prydn", function() {deepEqual( Stem("prydnad"), "prydn");});
test("prydnader -> prydnad", function() {deepEqual( Stem("prydnader"), "prydnad");});
test("prydt -> prydt", function() {deepEqual( Stem("prydt"), "prydt");});
test("prygel -> prygel", function() {deepEqual( Stem("prygel"), "prygel");});
test("pryrdlig -> pryrd", function() {deepEqual( Stem("pryrdlig"), "pryrd");});
test("prytt -> prytt", function() {deepEqual( Stem("prytt"), "prytt");});
test("prägel -> prägel", function() {deepEqual( Stem("prägel"), "prägel");});
test("prägeln -> prägeln", function() {deepEqual( Stem("prägeln"), "prägeln");});
test("präglat -> prägl", function() {deepEqual( Stem("präglat"), "prägl");});
test("präk -> präk", function() {deepEqual( Stem("präk"), "präk");});
test("präktig -> präkt", function() {deepEqual( Stem("präktig"), "präkt");});
test("präktiga -> präkt", function() {deepEqual( Stem("präktiga"), "präkt");});
test("präktigare -> präkt", function() {deepEqual( Stem("präktigare"), "präkt");});
test("präktigaste -> präkt", function() {deepEqual( Stem("präktigaste"), "präkt");});
test("präktigt -> präkt", function() {deepEqual( Stem("präktigt"), "präkt");});
test("pränt -> pränt", function() {deepEqual( Stem("pränt"), "pränt");});
test("präntad -> pränt", function() {deepEqual( Stem("präntad"), "pränt");});
test("präntat -> pränt", function() {deepEqual( Stem("präntat"), "pränt");});
test("präst -> präst", function() {deepEqual( Stem("präst"), "präst");});
test("prästdottern -> prästdot", function() {deepEqual( Stem("prästdottern"), "prästdot");});
test("prästen -> präst", function() {deepEqual( Stem("prästen"), "präst");});
test("prästens -> präst", function() {deepEqual( Stem("prästens"), "präst");});
test("präster -> präst", function() {deepEqual( Stem("präster"), "präst");});
test("prästerlig -> präster", function() {deepEqual( Stem("prästerlig"), "präster");});
test("prästerligt -> präster", function() {deepEqual( Stem("prästerligt"), "präster");});
test("prästernas -> präst", function() {deepEqual( Stem("prästernas"), "präst");});
test("prästexamen -> prästexam", function() {deepEqual( Stem("prästexamen"), "prästexam");});
test("prästgatan -> prästgatan", function() {deepEqual( Stem("prästgatan"), "prästgatan");});
test("prästgård -> prästgård", function() {deepEqual( Stem("prästgård"), "prästgård");});
test("prästgårdar -> prästgård", function() {deepEqual( Stem("prästgårdar"), "prästgård");});
test("prästgården -> prästgård", function() {deepEqual( Stem("prästgården"), "prästgård");});
test("prästgårdens -> prästgård", function() {deepEqual( Stem("prästgårdens"), "prästgård");});
test("prästgårdsbyggnaden -> prästgårdsbyggnad", function() {deepEqual( Stem("prästgårdsbyggnaden"), "prästgårdsbyggnad");});
test("prästgårdsbyggningarna -> prästgårdsbyggning", function() {deepEqual( Stem("prästgårdsbyggningarna"), "prästgårdsbyggning");});
test("prästgårdsgrinden -> prästgårdsgrind", function() {deepEqual( Stem("prästgårdsgrinden"), "prästgårdsgrind");});
test("prästhustru -> prästhustru", function() {deepEqual( Stem("prästhustru"), "prästhustru");});
test("prästkragar -> prästkrag", function() {deepEqual( Stem("prästkragar"), "prästkrag");});
test("prästkragen -> prästkrag", function() {deepEqual( Stem("prästkragen"), "prästkrag");});
test("prästkragens -> prästkrag", function() {deepEqual( Stem("prästkragens"), "prästkrag");});
test("prästman -> prästman", function() {deepEqual( Stem("prästman"), "prästman");});
test("prästs -> präst", function() {deepEqual( Stem("prästs"), "präst");});
test("prästvigd -> prästv", function() {deepEqual( Stem("prästvigd"), "prästv");});
test("prål -> prål", function() {deepEqual( Stem("prål"), "prål");});
test("prålade -> prål", function() {deepEqual( Stem("prålade"), "prål");});
test("prålande -> prål", function() {deepEqual( Stem("prålande"), "prål");});
test("prålar -> prål", function() {deepEqual( Stem("prålar"), "prål");});
test("pråligt -> prål", function() {deepEqual( Stem("pråligt"), "prål");});
test("prången -> prång", function() {deepEqual( Stem("prången"), "prång");});
test("pröfning -> pröfning", function() {deepEqual( Stem("pröfning"), "pröfning");});
test("pröfningen -> pröfning", function() {deepEqual( Stem("pröfningen"), "pröfning");});
test("pröfningsskola -> pröfningsskol", function() {deepEqual( Stem("pröfningsskola"), "pröfningsskol");});
test("pröfva -> pröfv", function() {deepEqual( Stem("pröfva"), "pröfv");});
test("pröfvade -> pröfv", function() {deepEqual( Stem("pröfvade"), "pröfv");});
test("pröfvades -> pröfv", function() {deepEqual( Stem("pröfvades"), "pröfv");});
test("pröfvat -> pröfv", function() {deepEqual( Stem("pröfvat"), "pröfv");});
test("pröva -> pröv", function() {deepEqual( Stem("pröva"), "pröv");});
test("prövade -> pröv", function() {deepEqual( Stem("prövade"), "pröv");});
test("prövande -> pröv", function() {deepEqual( Stem("prövande"), "pröv");});
test("prövar -> pröv", function() {deepEqual( Stem("prövar"), "pröv");});
test("prövat -> pröv", function() {deepEqual( Stem("prövat"), "pröv");});
test("prövning -> prövning", function() {deepEqual( Stem("prövning"), "prövning");});
test("prövotid -> prövotid", function() {deepEqual( Stem("prövotid"), "prövotid");});
test("psalm -> psalm", function() {deepEqual( Stem("psalm"), "psalm");});
test("psalmbok -> psalmbok", function() {deepEqual( Stem("psalmbok"), "psalmbok");});
test("psalmen -> psalm", function() {deepEqual( Stem("psalmen"), "psalm");});
test("psalmer -> psalm", function() {deepEqual( Stem("psalmer"), "psalm");});
test("psalmeu -> psalmeu", function() {deepEqual( Stem("psalmeu"), "psalmeu");});
test("psalmsångerskan -> psalmsångerskan", function() {deepEqual( Stem("psalmsångerskan"), "psalmsångerskan");});
test("psalmtoner -> psalmton", function() {deepEqual( Stem("psalmtoner"), "psalmton");});
test("psalmvers -> psalmver", function() {deepEqual( Stem("psalmvers"), "psalmver");});
test("psalmverser -> psalmvers", function() {deepEqual( Stem("psalmverser"), "psalmvers");});
test("pseudovetenskaplig -> pseudovetenskap", function() {deepEqual( Stem("pseudovetenskaplig"), "pseudovetenskap");});
test("psssa -> psssa", function() {deepEqual( Stem("psssa"), "psssa");});
test("psykiatrici -> psykiatrici", function() {deepEqual( Stem("psykiatrici"), "psykiatrici");});
test("psykiatrien -> psykiatri", function() {deepEqual( Stem("psykiatrien"), "psykiatri");});
test("psykiska -> psykisk", function() {deepEqual( Stem("psykiska"), "psykisk");});
test("psykofjanter -> psykofjant", function() {deepEqual( Stem("psykofjanter"), "psykofjant");});
test("ptockade -> ptock", function() {deepEqual( Stem("ptockade"), "ptock");});
test("pu -> pu", function() {deepEqual( Stem("pu"), "pu");});
test("publik -> publik", function() {deepEqual( Stem("publik"), "publik");});
test("publika -> publik", function() {deepEqual( Stem("publika"), "publik");});
test("publiken -> publik", function() {deepEqual( Stem("publiken"), "publik");});
test("publius -> publius", function() {deepEqual( Stem("publius"), "publius");});
test("puckelrygg -> puckelrygg", function() {deepEqual( Stem("puckelrygg"), "puckelrygg");});
test("puckelryggig -> puckelrygg", function() {deepEqual( Stem("puckelryggig"), "puckelrygg");});
test("puckelryggige -> puckelrygg", function() {deepEqual( Stem("puckelryggige"), "puckelrygg");});
test("puckelryggsleende -> puckelryggsleend", function() {deepEqual( Stem("puckelryggsleende"), "puckelryggsleend");});
test("puddingen -> pudding", function() {deepEqual( Stem("puddingen"), "pudding");});
test("pudel -> pudel", function() {deepEqual( Stem("pudel"), "pudel");});
test("pudeln -> pudeln", function() {deepEqual( Stem("pudeln"), "pudeln");});
test("puder -> pud", function() {deepEqual( Stem("puder"), "pud");});
test("pudra -> pudr", function() {deepEqual( Stem("pudra"), "pudr");});
test("pudrade -> pudr", function() {deepEqual( Stem("pudrade"), "pudr");});
test("pudrat -> pudr", function() {deepEqual( Stem("pudrat"), "pudr");});
test("pudret -> pudret", function() {deepEqual( Stem("pudret"), "pudret");});
test("puff -> puff", function() {deepEqual( Stem("puff"), "puff");});
test("pulcher -> pulch", function() {deepEqual( Stem("pulcher"), "pulch");});
test("pulla -> pull", function() {deepEqual( Stem("pulla"), "pull");});
test("pullan -> pullan", function() {deepEqual( Stem("pullan"), "pullan");});
test("pullor -> pull", function() {deepEqual( Stem("pullor"), "pull");});
test("pulpet -> pulpet", function() {deepEqual( Stem("pulpet"), "pulpet");});
test("pulpeten -> pulpet", function() {deepEqual( Stem("pulpeten"), "pulpet");});
test("pulpetlocket -> pulpetlocket", function() {deepEqual( Stem("pulpetlocket"), "pulpetlocket");});
test("pulpetrader -> pulpetrad", function() {deepEqual( Stem("pulpetrader"), "pulpetrad");});
test("pulsar -> puls", function() {deepEqual( Stem("pulsar"), "puls");});
test("pulsen -> puls", function() {deepEqual( Stem("pulsen"), "puls");});
test("pulserade -> pulser", function() {deepEqual( Stem("pulserade"), "pulser");});
test("pulsslagen -> pulsslag", function() {deepEqual( Stem("pulsslagen"), "pulsslag");});
test("pulvrisera -> pulvriser", function() {deepEqual( Stem("pulvrisera"), "pulvriser");});
test("pund -> pund", function() {deepEqual( Stem("pund"), "pund");});
test("pung -> pung", function() {deepEqual( Stem("pung"), "pung");});
test("punkt -> punk", function() {deepEqual( Stem("punkt"), "punk");});
test("punkten -> punk", function() {deepEqual( Stem("punkten"), "punk");});
test("punkter -> punk", function() {deepEqual( Stem("punkter"), "punk");});
test("punkterna -> punk", function() {deepEqual( Stem("punkterna"), "punk");});
test("punktlig -> punkt", function() {deepEqual( Stem("punktlig"), "punkt");});
test("punktlighet -> punkt", function() {deepEqual( Stem("punktlighet"), "punkt");});
test("punktligt -> punkt", function() {deepEqual( Stem("punktligt"), "punkt");});
test("punsch -> punsch", function() {deepEqual( Stem("punsch"), "punsch");});
test("punschbrickor -> punschbrick", function() {deepEqual( Stem("punschbrickor"), "punschbrick");});
test("punschbuteljer -> punschbutelj", function() {deepEqual( Stem("punschbuteljer"), "punschbutelj");});
test("punschen -> punsch", function() {deepEqual( Stem("punschen"), "punsch");});
test("punschglas -> punschgl", function() {deepEqual( Stem("punschglas"), "punschgl");});
test("punschglaset -> punschglaset", function() {deepEqual( Stem("punschglaset"), "punschglaset");});
test("punschhalvan -> punschhalvan", function() {deepEqual( Stem("punschhalvan"), "punschhalvan");});
test("punschorgierna -> punschorgi", function() {deepEqual( Stem("punschorgierna"), "punschorgi");});
test("pupillerna -> pupill", function() {deepEqual( Stem("pupillerna"), "pupill");});
test("pur -> pur", function() {deepEqual( Stem("pur"), "pur");});
test("pura -> pur", function() {deepEqual( Stem("pura"), "pur");});
test("purprade -> purpr", function() {deepEqual( Stem("purprade"), "purpr");});
test("purpur -> purpur", function() {deepEqual( Stem("purpur"), "purpur");});
test("purpuraltan -> purpuraltan", function() {deepEqual( Stem("purpuraltan"), "purpuraltan");});
test("purpurflammor -> purpurflamm", function() {deepEqual( Stem("purpurflammor"), "purpurflamm");});
test("purpurklädning -> purpurklädning", function() {deepEqual( Stem("purpurklädning"), "purpurklädning");});
test("purpurmörka -> purpurmörk", function() {deepEqual( Stem("purpurmörka"), "purpurmörk");});
test("purpurröd -> purpurröd", function() {deepEqual( Stem("purpurröd"), "purpurröd");});
test("purpurröda -> purpurröd", function() {deepEqual( Stem("purpurröda"), "purpurröd");});
test("pussigt -> puss", function() {deepEqual( Stem("pussigt"), "puss");});
test("pust -> pust", function() {deepEqual( Stem("pust"), "pust");});
test("pustade -> pust", function() {deepEqual( Stem("pustade"), "pust");});
test("pustande -> pust", function() {deepEqual( Stem("pustande"), "pust");});
test("pustar -> pust", function() {deepEqual( Stem("pustar"), "pust");});
test("pusten -> pust", function() {deepEqual( Stem("pusten"), "pust");});
test("put -> put", function() {deepEqual( Stem("put"), "put");});
test("putar -> put", function() {deepEqual( Stem("putar"), "put");});
test("puts -> put", function() {deepEqual( Stem("puts"), "put");});
test("putsa -> puts", function() {deepEqual( Stem("putsa"), "puts");});
test("putsade -> puts", function() {deepEqual( Stem("putsade"), "puts");});
test("putsat -> puts", function() {deepEqual( Stem("putsat"), "puts");});
test("puttrade -> puttr", function() {deepEqual( Stem("puttrade"), "puttr");});
test("puzzelarbete -> puzzelarbet", function() {deepEqual( Stem("puzzelarbete"), "puzzelarbet");});
test("puzzlet -> puzzlet", function() {deepEqual( Stem("puzzlet"), "puzzlet");});
test("puzzlets -> puzzlet", function() {deepEqual( Stem("puzzlets"), "puzzlet");});
test("pvhlcn -> pvhlcn", function() {deepEqual( Stem("pvhlcn"), "pvhlcn");});
test("pyjamas -> pyjam", function() {deepEqual( Stem("pyjamas"), "pyjam");});
test("pyngden -> pyng", function() {deepEqual( Stem("pyngden"), "pyng");});
test("pyre -> pyr", function() {deepEqual( Stem("pyre"), "pyr");});
test("pys -> pys", function() {deepEqual( Stem("pys"), "pys");});
test("pyssla -> pyssl", function() {deepEqual( Stem("pyssla"), "pyssl");});
test("pysslade -> pyssl", function() {deepEqual( Stem("pysslade"), "pyssl");});
test("pyttsan -> pyttsan", function() {deepEqual( Stem("pyttsan"), "pyttsan");});
test("päls -> päl", function() {deepEqual( Stem("päls"), "päl");});
test("pälsarna -> päls", function() {deepEqual( Stem("pälsarna"), "päls");});
test("pälsbrämad -> pälsbräm", function() {deepEqual( Stem("pälsbrämad"), "pälsbräm");});
test("pälsbrämade -> pälsbräm", function() {deepEqual( Stem("pälsbrämade"), "pälsbräm");});
test("pälsen -> päls", function() {deepEqual( Stem("pälsen"), "päls");});
test("pälsens -> päls", function() {deepEqual( Stem("pälsens"), "päls");});
test("pälsfoder -> pälsfod", function() {deepEqual( Stem("pälsfoder"), "pälsfod");});
test("pälskappa -> pälskapp", function() {deepEqual( Stem("pälskappa"), "pälskapp");});
test("pälskrage -> pälskrag", function() {deepEqual( Stem("pälskrage"), "pälskrag");});
test("pälsverk -> pälsverk", function() {deepEqual( Stem("pälsverk"), "pälsverk");});
test("pälsverkens -> pälsverk", function() {deepEqual( Stem("pälsverkens"), "pälsverk");});
test("pälsverket -> pälsverket", function() {deepEqual( Stem("pälsverket"), "pälsverket");});
test("pärl -> pärl", function() {deepEqual( Stem("pärl"), "pärl");});
test("pärlan -> pärlan", function() {deepEqual( Stem("pärlan"), "pärlan");});
test("pärlande -> pärl", function() {deepEqual( Stem("pärlande"), "pärl");});
test("pärlbandet -> pärlb", function() {deepEqual( Stem("pärlbandet"), "pärlb");});
test("pärlemo -> pärlemo", function() {deepEqual( Stem("pärlemo"), "pärlemo");});
test("pärlemor -> pärlem", function() {deepEqual( Stem("pärlemor"), "pärlem");});
test("pärlemosmycken -> pärlemosmyck", function() {deepEqual( Stem("pärlemosmycken"), "pärlemosmyck");});
test("pärlfärgade -> pärlfärg", function() {deepEqual( Stem("pärlfärgade"), "pärlfärg");});
test("pärlnät -> pärlnät", function() {deepEqual( Stem("pärlnät"), "pärlnät");});
test("pärlor -> pärl", function() {deepEqual( Stem("pärlor"), "pärl");});
test("pärlorna -> pärl", function() {deepEqual( Stem("pärlorna"), "pärl");});
test("pärlskum -> pärlskum", function() {deepEqual( Stem("pärlskum"), "pärlskum");});
test("pärlstickning -> pärlstickning", function() {deepEqual( Stem("pärlstickning"), "pärlstickning");});
test("pärmar -> pärm", function() {deepEqual( Stem("pärmar"), "pärm");});
test("päronet -> päronet", function() {deepEqual( Stem("päronet"), "päronet");});
test("päronträd -> päronträd", function() {deepEqual( Stem("päronträd"), "päronträd");});
test("på -> på", function() {deepEqual( Stem("på"), "på");});
test("påa -> påa", function() {deepEqual( Stem("påa"), "påa");});
test("påbjudit -> påbjudit", function() {deepEqual( Stem("påbjudit"), "påbjudit");});
test("påbrås -> påbrås", function() {deepEqual( Stem("påbrås"), "påbrås");});
test("påbygd -> påbyg", function() {deepEqual( Stem("påbygd"), "påbyg");});
test("påbygda -> påbyg", function() {deepEqual( Stem("påbygda"), "påbyg");});
test("påbyggnad -> påbyggn", function() {deepEqual( Stem("påbyggnad"), "påbyggn");});
test("påbyggnaden -> påbyggnad", function() {deepEqual( Stem("påbyggnaden"), "påbyggnad");});
test("påbördade -> påbörd", function() {deepEqual( Stem("påbördade"), "påbörd");});
test("påbörjade -> påbörj", function() {deepEqual( Stem("påbörjade"), "påbörj");});
test("pådragna -> pådragn", function() {deepEqual( Stem("pådragna"), "pådragn");});
test("pådrifva -> pådrifv", function() {deepEqual( Stem("pådrifva"), "pådrifv");});
test("påfallande -> påfall", function() {deepEqual( Stem("påfallande"), "påfall");});
test("påfann -> påfan", function() {deepEqual( Stem("påfann"), "påfan");});
test("påflugenhet -> påflugen", function() {deepEqual( Stem("påflugenhet"), "påflugen");});
test("påfluget -> påfluget", function() {deepEqual( Stem("påfluget"), "påfluget");});
test("påfogels -> påfogel", function() {deepEqual( Stem("påfogels"), "påfogel");});
test("påfordras -> påfordr", function() {deepEqual( Stem("påfordras"), "påfordr");});
test("påfund -> påfund", function() {deepEqual( Stem("påfund"), "påfund");});
test("påfågelsfjäder -> påfågelsfjäd", function() {deepEqual( Stem("påfågelsfjäder"), "påfågelsfjäd");});
test("påhitt -> påhit", function() {deepEqual( Stem("påhitt"), "påhit");});
test("påhittat -> påhit", function() {deepEqual( Stem("påhittat"), "påhit");});
test("påhälsa -> påhäls", function() {deepEqual( Stem("påhälsa"), "påhäls");});
test("påhänget -> påhänget", function() {deepEqual( Stem("påhänget"), "påhänget");});
test("påkommande -> påkomm", function() {deepEqual( Stem("påkommande"), "påkomm");});
test("påkommen -> påkomm", function() {deepEqual( Stem("påkommen"), "påkomm");});
test("påkommet -> påkommet", function() {deepEqual( Stem("påkommet"), "påkommet");});
test("påkostande -> påkost", function() {deepEqual( Stem("påkostande"), "påkost");});
test("påkörare -> påkör", function() {deepEqual( Stem("påkörare"), "påkör");});
test("pålagor -> pålag", function() {deepEqual( Stem("pålagor"), "pålag");});
test("påle -> pål", function() {deepEqual( Stem("påle"), "pål");});
test("pålen -> pål", function() {deepEqual( Stem("pålen"), "pål");});
test("pålitliga -> pålit", function() {deepEqual( Stem("pålitliga"), "pålit");});
test("pålitlighet -> pålit", function() {deepEqual( Stem("pålitlighet"), "pålit");});
test("påmind -> påmind", function() {deepEqual( Stem("påmind"), "påmind");});
test("påminde -> påmind", function() {deepEqual( Stem("påminde"), "påmind");});
test("påminn -> påmin", function() {deepEqual( Stem("påminn"), "påmin");});
test("påminna -> påmin", function() {deepEqual( Stem("påminna"), "påmin");});
test("påminnande -> påmin", function() {deepEqual( Stem("påminnande"), "påmin");});
test("påminnas -> påmin", function() {deepEqual( Stem("påminnas"), "påmin");});
test("påminnelse -> påminn", function() {deepEqual( Stem("påminnelse"), "påminn");});
test("påminner -> påmin", function() {deepEqual( Stem("påminner"), "påmin");});
test("påmint -> påmint", function() {deepEqual( Stem("påmint"), "påmint");});
test("pånytt -> pånyt", function() {deepEqual( Stem("pånytt"), "pånyt");});
test("pånyttfödd -> pånyttföd", function() {deepEqual( Stem("pånyttfödd"), "pånyttföd");});
test("påpasslig -> påpass", function() {deepEqual( Stem("påpasslig"), "påpass");});
test("påpeka -> påpek", function() {deepEqual( Stem("påpeka"), "påpek");});
test("påpekar -> påpek", function() {deepEqual( Stem("påpekar"), "påpek");});
test("påpekat -> påpek", function() {deepEqual( Stem("påpekat"), "påpek");});
test("påräknade -> påräkn", function() {deepEqual( Stem("påräknade"), "påräkn");});
test("påräknat -> påräkn", function() {deepEqual( Stem("påräknat"), "påräkn");});
test("påsatt -> påsat", function() {deepEqual( Stem("påsatt"), "påsat");});
test("påsatte -> påsat", function() {deepEqual( Stem("påsatte"), "påsat");});
test("påse -> pås", function() {deepEqual( Stem("påse"), "pås");});
test("påseende -> påseend", function() {deepEqual( Stem("påseende"), "påseend");});
test("påsen -> pås", function() {deepEqual( Stem("påsen"), "pås");});
test("påsens -> pås", function() {deepEqual( Stem("påsens"), "pås");});
test("påskina -> påskin", function() {deepEqual( Stem("påskina"), "påskin");});
test("påskyndade -> påskynd", function() {deepEqual( Stem("påskyndade"), "påskynd");});
test("påskyndat -> påskynd", function() {deepEqual( Stem("påskyndat"), "påskynd");});
test("påskägg -> påskägg", function() {deepEqual( Stem("påskägg"), "påskägg");});
test("påstod -> påstod", function() {deepEqual( Stem("påstod"), "påstod");});
test("påstode -> påstod", function() {deepEqual( Stem("påstode"), "påstod");});
test("påstods -> påstod", function() {deepEqual( Stem("påstods"), "påstod");});
test("påstå -> påstå", function() {deepEqual( Stem("påstå"), "påstå");});
test("påstående -> påståend", function() {deepEqual( Stem("påstående"), "påståend");});
test("påståendet -> påståendet", function() {deepEqual( Stem("påståendet"), "påståendet");});
test("påstår -> påstår", function() {deepEqual( Stem("påstår"), "påstår");});
test("påstås -> påstås", function() {deepEqual( Stem("påstås"), "påstås");});
test("påsätta -> påsät", function() {deepEqual( Stem("påsätta"), "påsät");});
test("påtaga -> påtag", function() {deepEqual( Stem("påtaga"), "påtag");});
test("påtagen -> påtag", function() {deepEqual( Stem("påtagen"), "påtag");});
test("påtagit -> påtagit", function() {deepEqual( Stem("påtagit"), "påtagit");});
test("påtaglig -> påtag", function() {deepEqual( Stem("påtaglig"), "påtag");});
test("påtagligare -> påtag", function() {deepEqual( Stem("påtagligare"), "påtag");});
test("påtagligen -> påtag", function() {deepEqual( Stem("påtagligen"), "påtag");});
test("påtagligt -> påtag", function() {deepEqual( Stem("påtagligt"), "påtag");});
test("påtruga -> påtrug", function() {deepEqual( Stem("påtruga"), "påtrug");});
test("påtryckning -> påtryckning", function() {deepEqual( Stem("påtryckning"), "påtryckning");});
test("påträdde -> påträd", function() {deepEqual( Stem("påträdde"), "påträd");});
test("påträffas -> påträff", function() {deepEqual( Stem("påträffas"), "påträff");});
test("påträffat -> påträff", function() {deepEqual( Stem("påträffat"), "påträff");});
test("påtänkt -> påtänk", function() {deepEqual( Stem("påtänkt"), "påtänk");});
test("påvar -> påv", function() {deepEqual( Stem("påvar"), "påv");});
test("påverka -> påverk", function() {deepEqual( Stem("påverka"), "påverk");});
test("påverkad -> påverk", function() {deepEqual( Stem("påverkad"), "påverk");});
test("påverkan -> påverkan", function() {deepEqual( Stem("påverkan"), "påverkan");});
test("pöbeln -> pöbeln", function() {deepEqual( Stem("pöbeln"), "pöbeln");});
test("pöbelvanan -> pöbelvanan", function() {deepEqual( Stem("pöbelvanan"), "pöbelvanan");});
test("pölar -> pöl", function() {deepEqual( Stem("pölar"), "pöl");});
test("pöser -> pös", function() {deepEqual( Stem("pöser"), "pös");});
test("pöste -> pöst", function() {deepEqual( Stem("pöste"), "pöst");});
test("qu -> qu", function() {deepEqual( Stem("qu"), "qu");});
test("qualis -> qualis", function() {deepEqual( Stem("qualis"), "qualis");});
test("que -> que", function() {deepEqual( Stem("que"), "que");});
test("quelqu -> quelqu", function() {deepEqual( Stem("quelqu"), "quelqu");});
test("qui -> qui", function() {deepEqual( Stem("qui"), "qui");});
test("quo -> quo", function() {deepEqual( Stem("quo"), "quo");});
test("qvad -> qvad", function() {deepEqual( Stem("qvad"), "qvad");});
test("qvaf -> qvaf", function() {deepEqual( Stem("qvaf"), "qvaf");});
test("qval -> qval", function() {deepEqual( Stem("qval"), "qval");});
test("qvald -> qvald", function() {deepEqual( Stem("qvald"), "qvald");});
test("qvalda -> qvald", function() {deepEqual( Stem("qvalda"), "qvald");});
test("qvalen -> qval", function() {deepEqual( Stem("qvalen"), "qval");});
test("qvalmig -> qvalm", function() {deepEqual( Stem("qvalmig"), "qvalm");});
test("qvar -> qvar", function() {deepEqual( Stem("qvar"), "qvar");});
test("qvarblef -> qvarblef", function() {deepEqual( Stem("qvarblef"), "qvarblef");});
test("qvarblifva -> qvarblifv", function() {deepEqual( Stem("qvarblifva"), "qvarblifv");});
test("qvardröja -> qvardröj", function() {deepEqual( Stem("qvardröja"), "qvardröj");});
test("qvarglömt -> qvarglömt", function() {deepEqual( Stem("qvarglömt"), "qvarglömt");});
test("qvarhålla -> qvarhåll", function() {deepEqual( Stem("qvarhålla"), "qvarhåll");});
test("qvarlemnat -> qvarlemn", function() {deepEqual( Stem("qvarlemnat"), "qvarlemn");});
test("qvarstanna -> qvarstan", function() {deepEqual( Stem("qvarstanna"), "qvarstan");});
test("qvarstannade -> qvarstan", function() {deepEqual( Stem("qvarstannade"), "qvarstan");});
test("qvarstod -> qvarstod", function() {deepEqual( Stem("qvarstod"), "qvarstod");});
test("qvarstodo -> qvarstodo", function() {deepEqual( Stem("qvarstodo"), "qvarstodo");});
test("qvart -> qvart", function() {deepEqual( Stem("qvart"), "qvart");});
test("qvinfolk -> qvinfolk", function() {deepEqual( Stem("qvinfolk"), "qvinfolk");});
test("qvinna -> qvinn", function() {deepEqual( Stem("qvinna"), "qvinn");});
test("qvinnan -> qvinnan", function() {deepEqual( Stem("qvinnan"), "qvinnan");});
test("qvinnans -> qvinnan", function() {deepEqual( Stem("qvinnans"), "qvinnan");});
test("qvinnas -> qvinn", function() {deepEqual( Stem("qvinnas"), "qvinn");});
test("qvinnfolk -> qvinnfolk", function() {deepEqual( Stem("qvinnfolk"), "qvinnfolk");});
test("qvinnor -> qvinn", function() {deepEqual( Stem("qvinnor"), "qvinn");});
test("qvinnorna -> qvinn", function() {deepEqual( Stem("qvinnorna"), "qvinn");});
test("qvist -> qvist", function() {deepEqual( Stem("qvist"), "qvist");});
test("qvitt -> qvitt", function() {deepEqual( Stem("qvitt"), "qvitt");});
test("qväfd -> qväfd", function() {deepEqual( Stem("qväfd"), "qväfd");});
test("qväfda -> qväfd", function() {deepEqual( Stem("qväfda"), "qväfd");});
test("qväfde -> qväfd", function() {deepEqual( Stem("qväfde"), "qväfd");});
test("qväfdt -> qväfd", function() {deepEqual( Stem("qväfdt"), "qväfd");});
test("qväfva -> qväfv", function() {deepEqual( Stem("qväfva"), "qväfv");});
test("qväljande -> qvälj", function() {deepEqual( Stem("qväljande"), "qvälj");});
test("qväll -> qväll", function() {deepEqual( Stem("qväll"), "qväll");});
test("qvällen -> qväll", function() {deepEqual( Stem("qvällen"), "qväll");});
test("qvällsbrasan -> qvällsbrasan", function() {deepEqual( Stem("qvällsbrasan"), "qvällsbrasan");});
test("qvällsvarden -> qvällsvard", function() {deepEqual( Stem("qvällsvarden"), "qvällsvard");});
test("qväsa -> qväs", function() {deepEqual( Stem("qväsa"), "qväs");});
test("qväser -> qväs", function() {deepEqual( Stem("qväser"), "qväs");});
test("qväses -> qväs", function() {deepEqual( Stem("qväses"), "qväs");});
test("r -> r", function() {deepEqual( Stem("r"), "r");});
test("ra -> ra", function() {deepEqual( Stem("ra"), "ra");});
test("rabatt -> rabat", function() {deepEqual( Stem("rabatt"), "rabat");});
test("rabatten -> rabat", function() {deepEqual( Stem("rabatten"), "rabat");});
test("rabatter -> rabat", function() {deepEqual( Stem("rabatter"), "rabat");});
test("rabatterna -> rabat", function() {deepEqual( Stem("rabatterna"), "rabat");});
test("rackare -> rack", function() {deepEqual( Stem("rackare"), "rack");});
test("rackartyg -> rackartyg", function() {deepEqual( Stem("rackartyg"), "rackartyg");});
test("racke -> rack", function() {deepEqual( Stem("racke"), "rack");});
test("rackte -> rack", function() {deepEqual( Stem("rackte"), "rack");});
test("rad -> rad", function() {deepEqual( Stem("rad"), "rad");});
test("rada -> rad", function() {deepEqual( Stem("rada"), "rad");});
test("radband -> radband", function() {deepEqual( Stem("radband"), "radband");});
test("rade -> rad", function() {deepEqual( Stem("rade"), "rad");});
test("raden -> rad", function() {deepEqual( Stem("raden"), "rad");});
test("radens -> rad", function() {deepEqual( Stem("radens"), "rad");});
test("rader -> rad", function() {deepEqual( Stem("rader"), "rad");});
test("raderna -> rad", function() {deepEqual( Stem("raderna"), "rad");});
test("radikalt -> radikalt", function() {deepEqual( Stem("radikalt"), "radikalt");});
test("radman -> radman", function() {deepEqual( Stem("radman"), "radman");});
test("radnde -> radnd", function() {deepEqual( Stem("radnde"), "radnd");});
test("rafael -> rafael", function() {deepEqual( Stem("rafael"), "rafael");});
test("rafaels -> rafael", function() {deepEqual( Stem("rafaels"), "rafael");});
test("raffinemang -> raffinemang", function() {deepEqual( Stem("raffinemang"), "raffinemang");});
test("raffinerat -> raffiner", function() {deepEqual( Stem("raffinerat"), "raffiner");});
test("rafsade -> rafs", function() {deepEqual( Stem("rafsade"), "rafs");});
test("ragla -> ragl", function() {deepEqual( Stem("ragla"), "ragl");});
test("raglade -> ragl", function() {deepEqual( Stem("raglade"), "ragl");});
test("rak -> rak", function() {deepEqual( Stem("rak"), "rak");});
test("raka -> rak", function() {deepEqual( Stem("raka"), "rak");});
test("rakade -> rak", function() {deepEqual( Stem("rakade"), "rak");});
test("rakare -> rak", function() {deepEqual( Stem("rakare"), "rak");});
test("rakaste -> rak", function() {deepEqual( Stem("rakaste"), "rak");});
test("raket -> raket", function() {deepEqual( Stem("raket"), "raket");});
test("raketer -> raket", function() {deepEqual( Stem("raketer"), "raket");});
test("raklång -> raklång", function() {deepEqual( Stem("raklång"), "raklång");});
test("rakna -> rakn", function() {deepEqual( Stem("rakna"), "rakn");});
test("rakningen -> rakning", function() {deepEqual( Stem("rakningen"), "rakning");});
test("rakt -> rakt", function() {deepEqual( Stem("rakt"), "rakt");});
test("ral -> ral", function() {deepEqual( Stem("ral"), "ral");});
test("ralade -> ral", function() {deepEqual( Stem("ralade"), "ral");});
test("ram -> ram", function() {deepEqual( Stem("ram"), "ram");});
test("rama -> ram", function() {deepEqual( Stem("rama"), "ram");});
test("ramandet -> ram", function() {deepEqual( Stem("ramandet"), "ram");});
test("ramar -> ram", function() {deepEqual( Stem("ramar"), "ram");});
test("ramen -> ram", function() {deepEqual( Stem("ramen"), "ram");});
test("ramför -> ramför", function() {deepEqual( Stem("ramför"), "ramför");});
test("ramlade -> raml", function() {deepEqual( Stem("ramlade"), "raml");});
test("ramlar -> raml", function() {deepEqual( Stem("ramlar"), "raml");});
test("rammet -> rammet", function() {deepEqual( Stem("rammet"), "rammet");});
test("ramna -> ramn", function() {deepEqual( Stem("ramna"), "ramn");});
test("ramper -> ramp", function() {deepEqual( Stem("ramper"), "ramp");});
test("ramsa -> rams", function() {deepEqual( Stem("ramsa"), "rams");});
test("ramshult -> ramshult", function() {deepEqual( Stem("ramshult"), "ramshult");});
test("ramundsson -> ramundsson", function() {deepEqual( Stem("ramundsson"), "ramundsson");});
test("ramåt -> ramåt", function() {deepEqual( Stem("ramåt"), "ramåt");});
test("ran -> ran", function() {deepEqual( Stem("ran"), "ran");});
test("rand -> rand", function() {deepEqual( Stem("rand"), "rand");});
test("rande -> rand", function() {deepEqual( Stem("rande"), "rand");});
test("randen -> rand", function() {deepEqual( Stem("randen"), "rand");});
test("randig -> rand", function() {deepEqual( Stem("randig"), "rand");});
test("randiga -> rand", function() {deepEqual( Stem("randiga"), "rand");});
test("rang -> rang", function() {deepEqual( Stem("rang"), "rang");});
test("rangera -> ranger", function() {deepEqual( Stem("rangera"), "ranger");});
test("rangerad -> ranger", function() {deepEqual( Stem("rangerad"), "ranger");});
test("rangklass -> rangklass", function() {deepEqual( Stem("rangklass"), "rangklass");});
test("ranglig -> rang", function() {deepEqual( Stem("ranglig"), "rang");});
test("rangliga -> rang", function() {deepEqual( Stem("rangliga"), "rang");});
test("rangordning -> rangordning", function() {deepEqual( Stem("rangordning"), "rangordning");});
test("rank -> rank", function() {deepEqual( Stem("rank"), "rank");});
test("rankan -> rankan", function() {deepEqual( Stem("rankan"), "rankan");});
test("rann -> rann", function() {deepEqual( Stem("rann"), "rann");});
test("ransakat -> ransak", function() {deepEqual( Stem("ransakat"), "ransak");});
test("ransakning -> ransakning", function() {deepEqual( Stem("ransakning"), "ransakning");});
test("ranta -> rant", function() {deepEqual( Stem("ranta"), "rant");});
test("rapitlet -> rapitlet", function() {deepEqual( Stem("rapitlet"), "rapitlet");});
test("rapp -> rapp", function() {deepEqual( Stem("rapp"), "rapp");});
test("rappat -> rapp", function() {deepEqual( Stem("rappat"), "rapp");});
test("rappen -> rapp", function() {deepEqual( Stem("rappen"), "rapp");});
test("rappet -> rappet", function() {deepEqual( Stem("rappet"), "rappet");});
test("raquin -> raquin", function() {deepEqual( Stem("raquin"), "raquin");});
test("rar -> rar", function() {deepEqual( Stem("rar"), "rar");});
test("rara -> rar", function() {deepEqual( Stem("rara"), "rar");});
test("rare -> rar", function() {deepEqual( Stem("rare"), "rar");});
test("rarna -> rarn", function() {deepEqual( Stem("rarna"), "rarn");});
test("rart -> rart", function() {deepEqual( Stem("rart"), "rart");});
test("ras -> ras", function() {deepEqual( Stem("ras"), "ras");});
test("rasa -> ras", function() {deepEqual( Stem("rasa"), "ras");});
test("rasade -> ras", function() {deepEqual( Stem("rasade"), "ras");});
test("rasande -> ras", function() {deepEqual( Stem("rasande"), "ras");});
test("rasansikte -> rasansik", function() {deepEqual( Stem("rasansikte"), "rasansik");});
test("rasat -> ras", function() {deepEqual( Stem("rasat"), "ras");});
test("rasen -> ras", function() {deepEqual( Stem("rasen"), "ras");});
test("rasens -> ras", function() {deepEqual( Stem("rasens"), "ras");});
test("raseri -> raseri", function() {deepEqual( Stem("raseri"), "raseri");});
test("rask -> rask", function() {deepEqual( Stem("rask"), "rask");});
test("raska -> rask", function() {deepEqual( Stem("raska"), "rask");});
test("raskare -> rask", function() {deepEqual( Stem("raskare"), "rask");});
test("raskaste -> rask", function() {deepEqual( Stem("raskaste"), "rask");});
test("raske -> rask", function() {deepEqual( Stem("raske"), "rask");});
test("raskhet -> rask", function() {deepEqual( Stem("raskhet"), "rask");});
test("raskolnikov -> raskolnikov", function() {deepEqual( Stem("raskolnikov"), "raskolnikov");});
test("raskt -> rask", function() {deepEqual( Stem("raskt"), "rask");});
test("rasmusson -> rasmusson", function() {deepEqual( Stem("rasmusson"), "rasmusson");});
test("raspade -> rasp", function() {deepEqual( Stem("raspade"), "rasp");});
test("raspandet -> rasp", function() {deepEqual( Stem("raspandet"), "rasp");});
test("rassla -> rassl", function() {deepEqual( Stem("rassla"), "rassl");});
test("rasslade -> rassl", function() {deepEqual( Stem("rasslade"), "rassl");});
test("rasslande -> rassl", function() {deepEqual( Stem("rasslande"), "rassl");});
test("rast -> rast", function() {deepEqual( Stem("rast"), "rast");});
test("rasta -> rast", function() {deepEqual( Stem("rasta"), "rast");});
test("rasterna -> rast", function() {deepEqual( Stem("rasterna"), "rast");});
test("rastestund -> rastestund", function() {deepEqual( Stem("rastestund"), "rastestund");});
test("rastlös -> rastlös", function() {deepEqual( Stem("rastlös"), "rastlös");});
test("rastlösa -> rastlös", function() {deepEqual( Stem("rastlösa"), "rastlös");});
test("rat -> rat", function() {deepEqual( Stem("rat"), "rat");});
test("ratat -> rat", function() {deepEqual( Stem("ratat"), "rat");});
test("raterna -> rat", function() {deepEqual( Stem("raterna"), "rat");});
test("ratt -> ratt", function() {deepEqual( Stem("ratt"), "ratt");});
test("ratten -> ratt", function() {deepEqual( Stem("ratten"), "ratt");});
test("razzia -> razzi", function() {deepEqual( Stem("razzia"), "razzi");});
test("rcste -> rcste", function() {deepEqual( Stem("rcste"), "rcste");});
test("rdr -> rdr", function() {deepEqual( Stem("rdr"), "rdr");});
test("re -> re", function() {deepEqual( Stem("re"), "re");});
test("reale -> real", function() {deepEqual( Stem("reale"), "real");});
test("recensera -> recenser", function() {deepEqual( Stem("recensera"), "recenser");});
test("recenserade -> recenser", function() {deepEqual( Stem("recenserade"), "recenser");});
test("recept -> recept", function() {deepEqual( Stem("recept"), "recept");});
test("receptet -> receptet", function() {deepEqual( Stem("receptet"), "receptet");});
test("recke -> reck", function() {deepEqual( Stem("recke"), "reck");});
test("reckes -> reck", function() {deepEqual( Stem("reckes"), "reck");});
test("red -> red", function() {deepEqual( Stem("red"), "red");});
test("reda -> red", function() {deepEqual( Stem("reda"), "red");});
test("redan -> redan", function() {deepEqual( Stem("redan"), "redan");});
test("redare -> red", function() {deepEqual( Stem("redare"), "red");});
test("redas -> red", function() {deepEqual( Stem("redas"), "red");});
test("redbarhet -> redbar", function() {deepEqual( Stem("redbarhet"), "redbar");});
test("redbart -> redbart", function() {deepEqual( Stem("redbart"), "redbart");});
test("redde -> redd", function() {deepEqual( Stem("redde"), "redd");});
test("reddes -> redd", function() {deepEqual( Stem("reddes"), "redd");});
test("reden -> red", function() {deepEqual( Stem("reden"), "red");});
test("reder -> red", function() {deepEqual( Stem("reder"), "red");});
test("rederi -> rederi", function() {deepEqual( Stem("rederi"), "rederi");});
test("redig -> red", function() {deepEqual( Stem("redig"), "red");});
test("rediga -> red", function() {deepEqual( Stem("rediga"), "red");});
test("redigare -> red", function() {deepEqual( Stem("redigare"), "red");});
test("redighet -> red", function() {deepEqual( Stem("redighet"), "red");});
test("redigt -> red", function() {deepEqual( Stem("redigt"), "red");});
test("redingotkostym -> redingotkostym", function() {deepEqual( Stem("redingotkostym"), "redingotkostym");});
test("redlich -> redlich", function() {deepEqual( Stem("redlich"), "redlich");});
test("redlichs -> redlich", function() {deepEqual( Stem("redlichs"), "redlich");});
test("redlig -> red", function() {deepEqual( Stem("redlig"), "red");});
test("redliga -> red", function() {deepEqual( Stem("redliga"), "red");});
test("redligaste -> red", function() {deepEqual( Stem("redligaste"), "red");});
test("redlige -> red", function() {deepEqual( Stem("redlige"), "red");});
test("redlighet -> red", function() {deepEqual( Stem("redlighet"), "red");});
test("redligt -> red", function() {deepEqual( Stem("redligt"), "red");});
test("redo -> redo", function() {deepEqual( Stem("redo"), "redo");});
test("redobogen -> redobog", function() {deepEqual( Stem("redobogen"), "redobog");});
test("redogör -> redogör", function() {deepEqual( Stem("redogör"), "redogör");});
test("redogöra -> redogör", function() {deepEqual( Stem("redogöra"), "redogör");});
test("redogörelse -> redogör", function() {deepEqual( Stem("redogörelse"), "redogör");});
test("reds -> red", function() {deepEqual( Stem("reds"), "red");});
test("redskap -> redskap", function() {deepEqual( Stem("redskap"), "redskap");});
test("redskapen -> redskap", function() {deepEqual( Stem("redskapen"), "redskap");});
test("reel -> reel", function() {deepEqual( Stem("reel"), "reel");});
test("ref -> ref", function() {deepEqual( Stem("ref"), "ref");});
test("refflade -> reffl", function() {deepEqual( Stem("refflade"), "reffl");});
test("reflekterade -> reflekter", function() {deepEqual( Stem("reflekterade"), "reflekter");});
test("reflex -> reflex", function() {deepEqual( Stem("reflex"), "reflex");});
test("reflexen -> reflex", function() {deepEqual( Stem("reflexen"), "reflex");});
test("reflexer -> reflex", function() {deepEqual( Stem("reflexer"), "reflex");});
test("reflexion -> reflexion", function() {deepEqual( Stem("reflexion"), "reflexion");});
test("reflexionen -> reflexion", function() {deepEqual( Stem("reflexionen"), "reflexion");});
test("reflexioner -> reflexion", function() {deepEqual( Stem("reflexioner"), "reflexion");});
test("reflexionsspegel -> reflexionsspegel", function() {deepEqual( Stem("reflexionsspegel"), "reflexionsspegel");});
test("reflexionsspegeln -> reflexionsspegeln", function() {deepEqual( Stem("reflexionsspegeln"), "reflexionsspegeln");});
test("reflexrörelser -> reflexrör", function() {deepEqual( Stem("reflexrörelser"), "reflexrör");});
test("reflexskenet -> reflexskenet", function() {deepEqual( Stem("reflexskenet"), "reflexskenet");});
test("reflexverkan -> reflexverkan", function() {deepEqual( Stem("reflexverkan"), "reflexverkan");});
test("refrängen -> refräng", function() {deepEqual( Stem("refrängen"), "refräng");});
test("refuge -> refug", function() {deepEqual( Stem("refuge"), "refug");});
test("refvat -> refv", function() {deepEqual( Stem("refvat"), "refv");});
test("regel -> regel", function() {deepEqual( Stem("regel"), "regel");});
test("regelbundet -> regelbundet", function() {deepEqual( Stem("regelbundet"), "regelbundet");});
test("regelbundna -> regelbundn", function() {deepEqual( Stem("regelbundna"), "regelbundn");});
test("regelmessiga -> regelmess", function() {deepEqual( Stem("regelmessiga"), "regelmess");});
test("regelmässigt -> regelmäss", function() {deepEqual( Stem("regelmässigt"), "regelmäss");});
test("regeln -> regeln", function() {deepEqual( Stem("regeln"), "regeln");});
test("regementschef -> regementschef", function() {deepEqual( Stem("regementschef"), "regementschef");});
test("regent -> regent", function() {deepEqual( Stem("regent"), "regent");});
test("regentinna -> regentin", function() {deepEqual( Stem("regentinna"), "regentin");});
test("regera -> reger", function() {deepEqual( Stem("regera"), "reger");});
test("regerad -> reger", function() {deepEqual( Stem("regerad"), "reger");});
test("regerade -> reger", function() {deepEqual( Stem("regerade"), "reger");});
test("regeringar -> regering", function() {deepEqual( Stem("regeringar"), "regering");});
test("regeringsgatan -> regeringsgatan", function() {deepEqual( Stem("regeringsgatan"), "regeringsgatan");});
test("regeringstömmarna -> regeringstömm", function() {deepEqual( Stem("regeringstömmarna"), "regeringstömm");});
test("regissören -> regissör", function() {deepEqual( Stem("regissören"), "regissör");});
test("registrator -> registrat", function() {deepEqual( Stem("registrator"), "registrat");});
test("registratorn -> registratorn", function() {deepEqual( Stem("registratorn"), "registratorn");});
test("registren -> registr", function() {deepEqual( Stem("registren"), "registr");});
test("reglad -> regl", function() {deepEqual( Stem("reglad"), "regl");});
test("reglade -> regl", function() {deepEqual( Stem("reglade"), "regl");});
test("reglera -> regler", function() {deepEqual( Stem("reglera"), "regler");});
test("reglerade -> regler", function() {deepEqual( Stem("reglerade"), "regler");});
test("reglerar -> regler", function() {deepEqual( Stem("reglerar"), "regler");});
test("regn -> regn", function() {deepEqual( Stem("regn"), "regn");});
test("regna -> regn", function() {deepEqual( Stem("regna"), "regn");});
test("regnadc -> regnadc", function() {deepEqual( Stem("regnadc"), "regnadc");});
test("regnade -> regn", function() {deepEqual( Stem("regnade"), "regn");});
test("regnar -> regn", function() {deepEqual( Stem("regnar"), "regn");});
test("regnat -> regn", function() {deepEqual( Stem("regnat"), "regn");});
test("regnbågsfärgad -> regnbågsfärg", function() {deepEqual( Stem("regnbågsfärgad"), "regnbågsfärg");});
test("regnbågsljus -> regnbågsljus", function() {deepEqual( Stem("regnbågsljus"), "regnbågsljus");});
test("regnbågsskyn -> regnbågsskyn", function() {deepEqual( Stem("regnbågsskyn"), "regnbågsskyn");});
test("regndag -> regndag", function() {deepEqual( Stem("regndag"), "regndag");});
test("regndroppe -> regndropp", function() {deepEqual( Stem("regndroppe"), "regndropp");});
test("regnens -> regn", function() {deepEqual( Stem("regnens"), "regn");});
test("regnet -> regnet", function() {deepEqual( Stem("regnet"), "regnet");});
test("regnig -> regn", function() {deepEqual( Stem("regnig"), "regn");});
test("regniga -> regn", function() {deepEqual( Stem("regniga"), "regn");});
test("regnkappa -> regnkapp", function() {deepEqual( Stem("regnkappa"), "regnkapp");});
test("regnskur -> regnskur", function() {deepEqual( Stem("regnskur"), "regnskur");});
test("regnväder -> regnväd", function() {deepEqual( Stem("regnväder"), "regnväd");});
test("regnvädersdagar -> regnvädersdag", function() {deepEqual( Stem("regnvädersdagar"), "regnvädersdag");});
test("rehabiliterad -> rehabiliter", function() {deepEqual( Stem("rehabiliterad"), "rehabiliter");});
test("rehnska -> rehnsk", function() {deepEqual( Stem("rehnska"), "rehnsk");});
test("reklam -> reklam", function() {deepEqual( Stem("reklam"), "reklam");});
test("reklamfönster -> reklamfönst", function() {deepEqual( Stem("reklamfönster"), "reklamfönst");});
test("rekommendation -> rekommendation", function() {deepEqual( Stem("rekommendation"), "rekommendation");});
test("rekommendera -> rekommender", function() {deepEqual( Stem("rekommendera"), "rekommender");});
test("rekommenderat -> rekommender", function() {deepEqual( Stem("rekommenderat"), "rekommender");});
test("rekryter -> rekryt", function() {deepEqual( Stem("rekryter"), "rekryt");});
test("rektor -> rekt", function() {deepEqual( Stem("rektor"), "rekt");});
test("rektorn -> rektorn", function() {deepEqual( Stem("rektorn"), "rektorn");});
test("rekvirerade -> rekvirer", function() {deepEqual( Stem("rekvirerade"), "rekvirer");});
test("rekvisitionen -> rekvisition", function() {deepEqual( Stem("rekvisitionen"), "rekvisition");});
test("relationer -> relation", function() {deepEqual( Stem("relationer"), "relation");});
test("relian -> relian", function() {deepEqual( Stem("relian"), "relian");});
test("religion -> religion", function() {deepEqual( Stem("religion"), "religion");});
test("religionen -> religion", function() {deepEqual( Stem("religionen"), "religion");});
test("religionsgrubbel -> religionsgrubbel", function() {deepEqual( Stem("religionsgrubbel"), "religionsgrubbel");});
test("religionsläraren -> religionslär", function() {deepEqual( Stem("religionsläraren"), "religionslär");});
test("religiositet -> religiositet", function() {deepEqual( Stem("religiositet"), "religiositet");});
test("religiös -> religiös", function() {deepEqual( Stem("religiös"), "religiös");});
test("religiösa -> religiös", function() {deepEqual( Stem("religiösa"), "religiös");});
test("religiöst -> religiöst", function() {deepEqual( Stem("religiöst"), "religiöst");});
test("reling -> reling", function() {deepEqual( Stem("reling"), "reling");});
test("relingarna -> reling", function() {deepEqual( Stem("relingarna"), "reling");});
test("relingarne -> reling", function() {deepEqual( Stem("relingarne"), "reling");});
test("relingen -> reling", function() {deepEqual( Stem("relingen"), "reling");});
test("rell -> rell", function() {deepEqual( Stem("rell"), "rell");});
test("rem -> rem", function() {deepEqual( Stem("rem"), "rem");});
test("remmar -> remm", function() {deepEqual( Stem("remmar"), "remm");});
test("remna -> remn", function() {deepEqual( Stem("remna"), "remn");});
test("remnar -> remn", function() {deepEqual( Stem("remnar"), "remn");});
test("remnorna -> remn", function() {deepEqual( Stem("remnorna"), "remn");});
test("remsan -> remsan", function() {deepEqual( Stem("remsan"), "remsan");});
test("ren -> ren", function() {deepEqual( Stem("ren"), "ren");});
test("rena -> ren", function() {deepEqual( Stem("rena"), "ren");});
test("renare -> ren", function() {deepEqual( Stem("renare"), "ren");});
test("rendez -> rendez", function() {deepEqual( Stem("rendez"), "rendez");});
test("renglänsande -> rengläns", function() {deepEqual( Stem("renglänsande"), "rengläns");});
test("rengöra -> rengör", function() {deepEqual( Stem("rengöra"), "rengör");});
test("rengöras -> rengör", function() {deepEqual( Stem("rengöras"), "rengör");});
test("renhet -> ren", function() {deepEqual( Stem("renhet"), "ren");});
test("renlighet -> ren", function() {deepEqual( Stem("renlighet"), "ren");});
test("renons -> renon", function() {deepEqual( Stem("renons"), "renon");});
test("rensa -> rens", function() {deepEqual( Stem("rensa"), "rens");});
test("rensade -> rens", function() {deepEqual( Stem("rensade"), "rens");});
test("renskrivning -> renskrivning", function() {deepEqual( Stem("renskrivning"), "renskrivning");});
test("renskurad -> renskur", function() {deepEqual( Stem("renskurad"), "renskur");});
test("renskurade -> renskur", function() {deepEqual( Stem("renskurade"), "renskur");});
test("rent -> rent", function() {deepEqual( Stem("rent"), "rent");});
test("rentav -> rentav", function() {deepEqual( Stem("rentav"), "rentav");});
test("rentvättad -> rentvät", function() {deepEqual( Stem("rentvättad"), "rentvät");});
test("rentvättadt -> rentvättad", function() {deepEqual( Stem("rentvättadt"), "rentvättad");});
test("rep -> rep", function() {deepEqual( Stem("rep"), "rep");});
test("reparation -> reparation", function() {deepEqual( Stem("reparation"), "reparation");});
test("reparationen -> reparation", function() {deepEqual( Stem("reparationen"), "reparation");});
test("reparerade -> reparer", function() {deepEqual( Stem("reparerade"), "reparer");});
test("reparerat -> reparer", function() {deepEqual( Stem("reparerat"), "reparer");});
test("repen -> rep", function() {deepEqual( Stem("repen"), "rep");});
test("repetitionen -> repetition", function() {deepEqual( Stem("repetitionen"), "repetition");});
test("replikerade -> repliker", function() {deepEqual( Stem("replikerade"), "repliker");});
test("representant -> representant", function() {deepEqual( Stem("representant"), "representant");});
test("representanterna -> representant", function() {deepEqual( Stem("representanterna"), "representant");});
test("representation -> representation", function() {deepEqual( Stem("representation"), "representation");});
test("representera -> representer", function() {deepEqual( Stem("representera"), "representer");});
test("representerade -> representer", function() {deepEqual( Stem("representerade"), "representer");});
test("representerar -> representer", function() {deepEqual( Stem("representerar"), "representer");});
test("reputation -> reputation", function() {deepEqual( Stem("reputation"), "reputation");});
test("rerna -> rern", function() {deepEqual( Stem("rerna"), "rern");});
test("res -> res", function() {deepEqual( Stem("res"), "res");});
test("resa -> res", function() {deepEqual( Stem("resa"), "res");});
test("resan -> resan", function() {deepEqual( Stem("resan"), "resan");});
test("resande -> res", function() {deepEqual( Stem("resande"), "res");});
test("resandes -> res", function() {deepEqual( Stem("resandes"), "res");});
test("rese -> res", function() {deepEqual( Stem("rese"), "res");});
test("reseda -> resed", function() {deepEqual( Stem("reseda"), "resed");});
test("resemåltid -> resemåltid", function() {deepEqual( Stem("resemåltid"), "resemåltid");});
test("resen -> res", function() {deepEqual( Stem("resen"), "res");});
test("resens -> res", function() {deepEqual( Stem("resens"), "res");});
test("resepredikant -> resepredikant", function() {deepEqual( Stem("resepredikant"), "resepredikant");});
test("resepredikanten -> resepredikant", function() {deepEqual( Stem("resepredikanten"), "resepredikant");});
test("reser -> res", function() {deepEqual( Stem("reser"), "res");});
test("reses -> res", function() {deepEqual( Stem("reses"), "res");});
test("reseskildringar -> reseskildring", function() {deepEqual( Stem("reseskildringar"), "reseskildring");});
test("reshatt -> reshat", function() {deepEqual( Stem("reshatt"), "reshat");});
test("resignation -> resignation", function() {deepEqual( Stem("resignation"), "resignation");});
test("resignerat -> resigner", function() {deepEqual( Stem("resignerat"), "resigner");});
test("reskassan -> reskassan", function() {deepEqual( Stem("reskassan"), "reskassan");});
test("resklädd -> reskläd", function() {deepEqual( Stem("resklädd"), "reskläd");});
test("resle -> resl", function() {deepEqual( Stem("resle"), "resl");});
test("reslig -> res", function() {deepEqual( Stem("reslig"), "res");});
test("resning -> resning", function() {deepEqual( Stem("resning"), "resning");});
test("resolverar -> resolver", function() {deepEqual( Stem("resolverar"), "resolver");});
test("reson -> reson", function() {deepEqual( Stem("reson"), "reson");});
test("resonemang -> resonemang", function() {deepEqual( Stem("resonemang"), "resonemang");});
test("resonemanget -> resonemanget", function() {deepEqual( Stem("resonemanget"), "resonemanget");});
test("resonera -> resoner", function() {deepEqual( Stem("resonera"), "resoner");});
test("resonerar -> resoner", function() {deepEqual( Stem("resonerar"), "resoner");});
test("resor -> res", function() {deepEqual( Stem("resor"), "res");});
test("respass -> respass", function() {deepEqual( Stem("respass"), "respass");});
test("respekt -> respek", function() {deepEqual( Stem("respekt"), "respek");});
test("respektabel -> respektabel", function() {deepEqual( Stem("respektabel"), "respektabel");});
test("respektabelt -> respektabelt", function() {deepEqual( Stem("respektabelt"), "respektabelt");});
test("respektabla -> respektabl", function() {deepEqual( Stem("respektabla"), "respektabl");});
test("respekten -> respek", function() {deepEqual( Stem("respekten"), "respek");});
test("respekterar -> respekter", function() {deepEqual( Stem("respekterar"), "respekter");});
test("respekteras -> respekter", function() {deepEqual( Stem("respekteras"), "respekter");});
test("respektfull -> respektfull", function() {deepEqual( Stem("respektfull"), "respektfull");});
test("respektlöst -> respektlös", function() {deepEqual( Stem("respektlöst"), "respektlös");});
test("respengarna -> respeng", function() {deepEqual( Stem("respengarna"), "respeng");});
test("respenningar -> respenning", function() {deepEqual( Stem("respenningar"), "respenning");});
test("respenningarna -> respenning", function() {deepEqual( Stem("respenningarna"), "respenning");});
test("resschatull -> resschatull", function() {deepEqual( Stem("resschatull"), "resschatull");});
test("rest -> rest", function() {deepEqual( Stem("rest"), "rest");});
test("restaurang -> restaurang", function() {deepEqual( Stem("restaurang"), "restaurang");});
test("restaurangbordet -> restaurangbordet", function() {deepEqual( Stem("restaurangbordet"), "restaurangbordet");});
test("restaurangen -> restaurang", function() {deepEqual( Stem("restaurangen"), "restaurang");});
test("restaurangernas -> restaurang", function() {deepEqual( Stem("restaurangernas"), "restaurang");});
test("restauranghörna -> restauranghörn", function() {deepEqual( Stem("restauranghörna"), "restauranghörn");});
test("restc -> restc", function() {deepEqual( Stem("restc"), "restc");});
test("reste -> rest", function() {deepEqual( Stem("reste"), "rest");});
test("resten -> rest", function() {deepEqual( Stem("resten"), "rest");});
test("rester -> rest", function() {deepEqual( Stem("rester"), "rest");});
test("resulster -> resulst", function() {deepEqual( Stem("resulster"), "resulst");});
test("resultat -> result", function() {deepEqual( Stem("resultat"), "result");});
test("resultatet -> resultatet", function() {deepEqual( Stem("resultatet"), "resultatet");});
test("resulterat -> resulter", function() {deepEqual( Stem("resulterat"), "resulter");});
test("resurs -> resur", function() {deepEqual( Stem("resurs"), "resur");});
test("resurser -> resurs", function() {deepEqual( Stem("resurser"), "resurs");});
test("resårbottnar -> resårbottn", function() {deepEqual( Stem("resårbottnar"), "resårbottn");});
test("ret -> ret", function() {deepEqual( Stem("ret"), "ret");});
test("reta -> ret", function() {deepEqual( Stem("reta"), "ret");});
test("retad -> ret", function() {deepEqual( Stem("retad"), "ret");});
test("retade -> ret", function() {deepEqual( Stem("retade"), "ret");});
test("retades -> ret", function() {deepEqual( Stem("retades"), "ret");});
test("retadt -> retad", function() {deepEqual( Stem("retadt"), "retad");});
test("retar -> ret", function() {deepEqual( Stem("retar"), "ret");});
test("retas -> ret", function() {deepEqual( Stem("retas"), "ret");});
test("retat -> ret", function() {deepEqual( Stem("retat"), "ret");});
test("retelse -> ret", function() {deepEqual( Stem("retelse"), "ret");});
test("retelser -> ret", function() {deepEqual( Stem("retelser"), "ret");});
test("retliga -> ret", function() {deepEqual( Stem("retliga"), "ret");});
test("retlige -> ret", function() {deepEqual( Stem("retlige"), "ret");});
test("retligheten -> ret", function() {deepEqual( Stem("retligheten"), "ret");});
test("retligt -> ret", function() {deepEqual( Stem("retligt"), "ret");});
test("retsam -> retsam", function() {deepEqual( Stem("retsam"), "retsam");});
test("retsamhet -> retsam", function() {deepEqual( Stem("retsamhet"), "retsam");});
test("retsamt -> retsamt", function() {deepEqual( Stem("retsamt"), "retsamt");});
test("rett -> rett", function() {deepEqual( Stem("rett"), "rett");});
test("retty -> retty", function() {deepEqual( Stem("retty"), "retty");});
test("reumatism -> reumatism", function() {deepEqual( Stem("reumatism"), "reumatism");});
test("rev -> rev", function() {deepEqual( Stem("rev"), "rev");});
test("revers -> rever", function() {deepEqual( Stem("revers"), "rever");});
test("reversen -> revers", function() {deepEqual( Stem("reversen"), "revers");});
test("reverser -> revers", function() {deepEqual( Stem("reverser"), "revers");});
test("revisor -> revis", function() {deepEqual( Stem("revisor"), "revis");});
test("revisorn -> revisorn", function() {deepEqual( Stem("revisorn"), "revisorn");});
test("revolvern -> revolv", function() {deepEqual( Stem("revolvern"), "revolv");});
test("ri -> ri", function() {deepEqual( Stem("ri"), "ri");});
test("richardt -> richard", function() {deepEqual( Stem("richardt"), "richard");});
test("ricinolja -> ricinolj", function() {deepEqual( Stem("ricinolja"), "ricinolj");});
test("rickrickettirack -> rickrickettirack", function() {deepEqual( Stem("rickrickettirack"), "rickrickettirack");});
test("rickrickettiratt -> rickrickettirat", function() {deepEqual( Stem("rickrickettiratt"), "rickrickettirat");});
test("rida -> rid", function() {deepEqual( Stem("rida"), "rid");});
test("ridan -> ridan", function() {deepEqual( Stem("ridan"), "ridan");});
test("ridande -> rid", function() {deepEqual( Stem("ridande"), "rid");});
test("riddare -> ridd", function() {deepEqual( Stem("riddare"), "ridd");});
test("riddaren -> ridd", function() {deepEqual( Stem("riddaren"), "ridd");});
test("riddarhustorget -> riddarhustorget", function() {deepEqual( Stem("riddarhustorget"), "riddarhustorget");});
test("ridderliga -> ridder", function() {deepEqual( Stem("ridderliga"), "ridder");});
test("rider -> rid", function() {deepEqual( Stem("rider"), "rid");});
test("ridit -> ridit", function() {deepEqual( Stem("ridit"), "ridit");});
test("ridtur -> ridtur", function() {deepEqual( Stem("ridtur"), "ridtur");});
test("ridå -> ridå", function() {deepEqual( Stem("ridå"), "ridå");});
test("ridån -> ridån", function() {deepEqual( Stem("ridån"), "ridån");});
test("rierna -> riern", function() {deepEqual( Stem("rierna"), "riern");});
test("rigeln -> rigeln", function() {deepEqual( Stem("rigeln"), "rigeln");});
test("riggad -> rigg", function() {deepEqual( Stem("riggad"), "rigg");});
test("rigla -> rigl", function() {deepEqual( Stem("rigla"), "rigl");});
test("rigtad -> rigt", function() {deepEqual( Stem("rigtad"), "rigt");});
test("rigtig -> rigt", function() {deepEqual( Stem("rigtig"), "rigt");});
test("rigtiga -> rigt", function() {deepEqual( Stem("rigtiga"), "rigt");});
test("rigtighet -> rigt", function() {deepEqual( Stem("rigtighet"), "rigt");});
test("rigtigt -> rigt", function() {deepEqual( Stem("rigtigt"), "rigt");});
test("rigtning -> rigtning", function() {deepEqual( Stem("rigtning"), "rigtning");});
test("rigtningar -> rigtning", function() {deepEqual( Stem("rigtningar"), "rigtning");});
test("rijster -> rijst", function() {deepEqual( Stem("rijster"), "rijst");});
test("rik -> rik", function() {deepEqual( Stem("rik"), "rik");});
test("rika -> rik", function() {deepEqual( Stem("rika"), "rik");});
test("rikare -> rik", function() {deepEqual( Stem("rikare"), "rik");});
test("rikaste -> rik", function() {deepEqual( Stem("rikaste"), "rik");});
test("rikc -> rikc", function() {deepEqual( Stem("rikc"), "rikc");});
test("rike -> rik", function() {deepEqual( Stem("rike"), "rik");});
test("rikedom -> rikedom", function() {deepEqual( Stem("rikedom"), "rikedom");});
test("rikedomar -> rikedom", function() {deepEqual( Stem("rikedomar"), "rikedom");});
test("rikedomen -> rikedom", function() {deepEqual( Stem("rikedomen"), "rikedom");});
test("rikeman -> rikeman", function() {deepEqual( Stem("rikeman"), "rikeman");});
test("riken -> rik", function() {deepEqual( Stem("riken"), "rik");});
test("rikens -> rik", function() {deepEqual( Stem("rikens"), "rik");});
test("rikes -> rik", function() {deepEqual( Stem("rikes"), "rik");});
test("rikhaltig -> rikhalt", function() {deepEqual( Stem("rikhaltig"), "rikhalt");});
test("rikligen -> rik", function() {deepEqual( Stem("rikligen"), "rik");});
test("rikligt -> rik", function() {deepEqual( Stem("rikligt"), "rik");});
test("riksdagen -> riksdag", function() {deepEqual( Stem("riksdagen"), "riksdag");});
test("riksdagshus -> riksdagshus", function() {deepEqual( Stem("riksdagshus"), "riksdagshus");});
test("riksdaler -> riksdal", function() {deepEqual( Stem("riksdaler"), "riksdal");});
test("riksdalernas -> riksdal", function() {deepEqual( Stem("riksdalernas"), "riksdal");});
test("riksdalers -> riksdaler", function() {deepEqual( Stem("riksdalers"), "riksdaler");});
test("riksgälds -> riksgäld", function() {deepEqual( Stem("riksgälds"), "riksgäld");});
test("rikt -> rikt", function() {deepEqual( Stem("rikt"), "rikt");});
test("rikta -> rikt", function() {deepEqual( Stem("rikta"), "rikt");});
test("riktad -> rikt", function() {deepEqual( Stem("riktad"), "rikt");});
test("riktade -> rikt", function() {deepEqual( Stem("riktade"), "rikt");});
test("riktades -> rikt", function() {deepEqual( Stem("riktades"), "rikt");});
test("riktas -> rikt", function() {deepEqual( Stem("riktas"), "rikt");});
test("riktat -> rikt", function() {deepEqual( Stem("riktat"), "rikt");});
test("riktats -> riktat", function() {deepEqual( Stem("riktats"), "riktat");});
test("riktig -> rikt", function() {deepEqual( Stem("riktig"), "rikt");});
test("riktiga -> rikt", function() {deepEqual( Stem("riktiga"), "rikt");});
test("riktigare -> rikt", function() {deepEqual( Stem("riktigare"), "rikt");});
test("riktigt -> rikt", function() {deepEqual( Stem("riktigt"), "rikt");});
test("riktning -> riktning", function() {deepEqual( Stem("riktning"), "riktning");});
test("riktningar -> riktning", function() {deepEqual( Stem("riktningar"), "riktning");});
test("riktningen -> riktning", function() {deepEqual( Stem("riktningen"), "riktning");});
test("rill -> rill", function() {deepEqual( Stem("rill"), "rill");});
test("rimligtvis -> rimligtvis", function() {deepEqual( Stem("rimligtvis"), "rimligtvis");});
test("rimma -> rimm", function() {deepEqual( Stem("rimma"), "rimm");});
test("rimmer -> rimm", function() {deepEqual( Stem("rimmer"), "rimm");});
test("rimnande -> rimn", function() {deepEqual( Stem("rimnande"), "rimn");});
test("rimrika -> rimrik", function() {deepEqual( Stem("rimrika"), "rimrik");});
test("ring -> ring", function() {deepEqual( Stem("ring"), "ring");});
test("ringa -> ring", function() {deepEqual( Stem("ringa"), "ring");});
test("ringakta -> ringak", function() {deepEqual( Stem("ringakta"), "ringak");});
test("ringaktning -> ringaktning", function() {deepEqual( Stem("ringaktning"), "ringaktning");});
test("ringande -> ring", function() {deepEqual( Stem("ringande"), "ring");});
test("ringar -> ring", function() {deepEqual( Stem("ringar"), "ring");});
test("ringare -> ring", function() {deepEqual( Stem("ringare"), "ring");});
test("ringarna -> ring", function() {deepEqual( Stem("ringarna"), "ring");});
test("ringas -> ring", function() {deepEqual( Stem("ringas"), "ring");});
test("ringaste -> ring", function() {deepEqual( Stem("ringaste"), "ring");});
test("ringde -> ring", function() {deepEqual( Stem("ringde"), "ring");});
test("ringen -> ring", function() {deepEqual( Stem("ringen"), "ring");});
test("ringer -> ring", function() {deepEqual( Stem("ringer"), "ring");});
test("ringfinger -> ringfing", function() {deepEqual( Stem("ringfinger"), "ringfing");});
test("ringhets -> ringhet", function() {deepEqual( Stem("ringhets"), "ringhet");});
test("ringlade -> ringl", function() {deepEqual( Stem("ringlade"), "ringl");});
test("ringlarne -> ringl", function() {deepEqual( Stem("ringlarne"), "ringl");});
test("ringlinjen -> ringlinj", function() {deepEqual( Stem("ringlinjen"), "ringlinj");});
test("ringning -> ringning", function() {deepEqual( Stem("ringning"), "ringning");});
test("ringt -> ring", function() {deepEqual( Stem("ringt"), "ring");});
test("rinna -> rinn", function() {deepEqual( Stem("rinna"), "rinn");});
test("rinnande -> rinn", function() {deepEqual( Stem("rinnande"), "rinn");});
test("ris -> ris", function() {deepEqual( Stem("ris"), "ris");});
test("riset -> riset", function() {deepEqual( Stem("riset"), "riset");});
test("risk -> risk", function() {deepEqual( Stem("risk"), "risk");});
test("risken -> risk", function() {deepEqual( Stem("risken"), "risk");});
test("risker -> risk", function() {deepEqual( Stem("risker"), "risk");});
test("riskera -> risker", function() {deepEqual( Stem("riskera"), "risker");});
test("rispor -> risp", function() {deepEqual( Stem("rispor"), "risp");});
test("ristad -> rist", function() {deepEqual( Stem("ristad"), "rist");});
test("ristade -> rist", function() {deepEqual( Stem("ristade"), "rist");});
test("ristat -> rist", function() {deepEqual( Stem("ristat"), "rist");});
test("riste -> rist", function() {deepEqual( Stem("riste"), "rist");});
test("rita -> rit", function() {deepEqual( Stem("rita"), "rit");});
test("ritade -> rit", function() {deepEqual( Stem("ritade"), "rit");});
test("ritat -> rit", function() {deepEqual( Stem("ritat"), "rit");});
test("rium -> rium", function() {deepEqual( Stem("rium"), "rium");});
test("riva -> riv", function() {deepEqual( Stem("riva"), "riv");});
test("rival -> rival", function() {deepEqual( Stem("rival"), "rival");});
test("rivande -> riv", function() {deepEqual( Stem("rivande"), "riv");});
test("river -> riv", function() {deepEqual( Stem("river"), "riv");});
test("rivilligt -> rivil", function() {deepEqual( Stem("rivilligt"), "rivil");});
test("rivit -> rivit", function() {deepEqual( Stem("rivit"), "rivit");});
test("rivits -> rivit", function() {deepEqual( Stem("rivits"), "rivit");});
test("rivna -> rivn", function() {deepEqual( Stem("rivna"), "rivn");});
test("rleltagande -> rleltag", function() {deepEqual( Stem("rleltagande"), "rleltag");});
test("rmed -> rmed", function() {deepEqual( Stem("rmed"), "rmed");});
test("rmuff -> rmuff", function() {deepEqual( Stem("rmuff"), "rmuff");});
test("rna -> rna", function() {deepEqual( Stem("rna"), "rna");});
test("rnaren -> rnar", function() {deepEqual( Stem("rnaren"), "rnar");});
test("rnt -> rnt", function() {deepEqual( Stem("rnt"), "rnt");});
test("rnu -> rnu", function() {deepEqual( Stem("rnu"), "rnu");});
test("ro -> ro", function() {deepEqual( Stem("ro"), "ro");});
test("roa -> roa", function() {deepEqual( Stem("roa"), "roa");});
test("road -> road", function() {deepEqual( Stem("road"), "road");});
test("roade -> road", function() {deepEqual( Stem("roade"), "road");});
test("roande -> roand", function() {deepEqual( Stem("roande"), "roand");});
test("roar -> roar", function() {deepEqual( Stem("roar"), "roar");});
test("roat -> roat", function() {deepEqual( Stem("roat"), "roat");});
test("rochefoucauld -> rochefoucauld", function() {deepEqual( Stem("rochefoucauld"), "rochefoucauld");});
test("rock -> rock", function() {deepEqual( Stem("rock"), "rock");});
test("rockar -> rock", function() {deepEqual( Stem("rockar"), "rock");});
test("rocken -> rock", function() {deepEqual( Stem("rocken"), "rock");});
test("rockhandeln -> rockhandeln", function() {deepEqual( Stem("rockhandeln"), "rockhandeln");});
test("rockor -> rock", function() {deepEqual( Stem("rockor"), "rock");});
test("rockskörten -> rockskört", function() {deepEqual( Stem("rockskörten"), "rockskört");});
test("rockskörtet -> rockskörtet", function() {deepEqual( Stem("rockskörtet"), "rockskörtet");});
test("rockslaget -> rockslaget", function() {deepEqual( Stem("rockslaget"), "rockslaget");});
test("rocksvarvare -> rocksvarv", function() {deepEqual( Stem("rocksvarvare"), "rocksvarv");});
test("rockärmarna -> rockärm", function() {deepEqual( Stem("rockärmarna"), "rockärm");});
test("rockärmen -> rockärm", function() {deepEqual( Stem("rockärmen"), "rockärm");});
test("rod -> rod", function() {deepEqual( Stem("rod"), "rod");});
test("rodd -> rodd", function() {deepEqual( Stem("rodd"), "rodd");});
test("roddarbåtarna -> roddarbåt", function() {deepEqual( Stem("roddarbåtarna"), "roddarbåt");});
test("roddarbåten -> roddarbåt", function() {deepEqual( Stem("roddarbåten"), "roddarbåt");});
test("roddare -> rodd", function() {deepEqual( Stem("roddare"), "rodd");});
test("roddarmadamens -> roddarmadam", function() {deepEqual( Stem("roddarmadamens"), "roddarmadam");});
test("roddarmadamer -> roddarmadam", function() {deepEqual( Stem("roddarmadamer"), "roddarmadam");});
test("roddbåt -> roddbåt", function() {deepEqual( Stem("roddbåt"), "roddbåt");});
test("rodde -> rodd", function() {deepEqual( Stem("rodde"), "rodd");});
test("rodden -> rodd", function() {deepEqual( Stem("rodden"), "rodd");});
test("rodin -> rodin", function() {deepEqual( Stem("rodin"), "rodin");});
test("rodna -> rodn", function() {deepEqual( Stem("rodna"), "rodn");});
test("rodnad -> rodn", function() {deepEqual( Stem("rodnad"), "rodn");});
test("rodnade -> rodn", function() {deepEqual( Stem("rodnade"), "rodn");});
test("rodnaden -> rodnad", function() {deepEqual( Stem("rodnaden"), "rodnad");});
test("rodnande -> rodn", function() {deepEqual( Stem("rodnande"), "rodn");});
test("rodnar -> rodn", function() {deepEqual( Stem("rodnar"), "rodn");});
test("rodnat -> rodn", function() {deepEqual( Stem("rodnat"), "rodn");});
test("rodret -> rodret", function() {deepEqual( Stem("rodret"), "rodret");});
test("rof -> rof", function() {deepEqual( Stem("rof"), "rof");});
test("roffar -> roff", function() {deepEqual( Stem("roffar"), "roff");});
test("rofgirigheten -> rofgir", function() {deepEqual( Stem("rofgirigheten"), "rofgir");});
test("roflysten -> roflyst", function() {deepEqual( Stem("roflysten"), "roflyst");});
test("roflystne -> roflystn", function() {deepEqual( Stem("roflystne"), "roflystn");});
test("roknar -> rokn", function() {deepEqual( Stem("roknar"), "rokn");});
test("rokoko -> rokoko", function() {deepEqual( Stem("rokoko"), "rokoko");});
test("rokokodams -> rokokodam", function() {deepEqual( Stem("rokokodams"), "rokokodam");});
test("rolf -> rolf", function() {deepEqual( Stem("rolf"), "rolf");});
test("rolig -> rol", function() {deepEqual( Stem("rolig"), "rol");});
test("roliga -> rol", function() {deepEqual( Stem("roliga"), "rol");});
test("roligare -> rol", function() {deepEqual( Stem("roligare"), "rol");});
test("roligast -> rol", function() {deepEqual( Stem("roligast"), "rol");});
test("roligaste -> rol", function() {deepEqual( Stem("roligaste"), "rol");});
test("rolighetsminister -> rolighetsminist", function() {deepEqual( Stem("rolighetsminister"), "rolighetsminist");});
test("roligt -> rol", function() {deepEqual( Stem("roligt"), "rol");});
test("roll -> roll", function() {deepEqual( Stem("roll"), "roll");});
test("rollen -> roll", function() {deepEqual( Stem("rollen"), "roll");});
test("roller -> roll", function() {deepEqual( Stem("roller"), "roll");});
test("rollerna -> roll", function() {deepEqual( Stem("rollerna"), "roll");});
test("rolösa -> rolös", function() {deepEqual( Stem("rolösa"), "rolös");});
test("rom -> rom", function() {deepEqual( Stem("rom"), "rom");});
test("roman -> roman", function() {deepEqual( Stem("roman"), "roman");});
test("romanaktiga -> romanakt", function() {deepEqual( Stem("romanaktiga"), "romanakt");});
test("romanen -> roman", function() {deepEqual( Stem("romanen"), "roman");});
test("romaner -> roman", function() {deepEqual( Stem("romaner"), "roman");});
test("romanord -> romanord", function() {deepEqual( Stem("romanord"), "romanord");});
test("romantik -> romantik", function() {deepEqual( Stem("romantik"), "romantik");});
test("romantikens -> romantik", function() {deepEqual( Stem("romantikens"), "romantik");});
test("romantiska -> romantisk", function() {deepEqual( Stem("romantiska"), "romantisk");});
test("romantiskt -> romantisk", function() {deepEqual( Stem("romantiskt"), "romantisk");});
test("romantisktkanske -> romantisktkansk", function() {deepEqual( Stem("romantisktkanske"), "romantisktkansk");});
test("romanvärlden -> romanvärld", function() {deepEqual( Stem("romanvärlden"), "romanvärld");});
test("romersk -> romersk", function() {deepEqual( Stem("romersk"), "romersk");});
test("ron -> ron", function() {deepEqual( Stem("ron"), "ron");});
test("rond -> rond", function() {deepEqual( Stem("rond"), "rond");});
test("ronden -> rond", function() {deepEqual( Stem("ronden"), "rond");});
test("ronneby -> ronneby", function() {deepEqual( Stem("ronneby"), "ronneby");});
test("rop -> rop", function() {deepEqual( Stem("rop"), "rop");});
test("ropa -> rop", function() {deepEqual( Stem("ropa"), "rop");});
test("ropadc -> ropadc", function() {deepEqual( Stem("ropadc"), "ropadc");});
test("ropade -> rop", function() {deepEqual( Stem("ropade"), "rop");});
test("ropande -> rop", function() {deepEqual( Stem("ropande"), "rop");});
test("ropar -> rop", function() {deepEqual( Stem("ropar"), "rop");});
test("ropat -> rop", function() {deepEqual( Stem("ropat"), "rop");});
test("ropet -> ropet", function() {deepEqual( Stem("ropet"), "ropet");});
test("rora -> ror", function() {deepEqual( Stem("rora"), "ror");});
test("rord -> rord", function() {deepEqual( Stem("rord"), "rord");});
test("rorde -> rord", function() {deepEqual( Stem("rorde"), "rord");});
test("rorta -> rort", function() {deepEqual( Stem("rorta"), "rort");});
test("rortaljan -> rortaljan", function() {deepEqual( Stem("rortaljan"), "rortaljan");});
test("ros -> ros", function() {deepEqual( Stem("ros"), "ros");});
test("rosa -> ros", function() {deepEqual( Stem("rosa"), "ros");});
test("rosafärgade -> rosafärg", function() {deepEqual( Stem("rosafärgade"), "rosafärg");});
test("rosas -> ros", function() {deepEqual( Stem("rosas"), "ros");});
test("roseil -> roseil", function() {deepEqual( Stem("roseil"), "roseil");});
test("rosell -> rosell", function() {deepEqual( Stem("rosell"), "rosell");});
test("rosells -> rosell", function() {deepEqual( Stem("rosells"), "rosell");});
test("rosen -> ros", function() {deepEqual( Stem("rosen"), "ros");});
test("rosenbad -> rosenb", function() {deepEqual( Stem("rosenbad"), "rosenb");});
test("rosenberg -> rosenberg", function() {deepEqual( Stem("rosenberg"), "rosenberg");});
test("rosenbergs -> rosenberg", function() {deepEqual( Stem("rosenbergs"), "rosenberg");});
test("rosenblad -> rosenbl", function() {deepEqual( Stem("rosenblad"), "rosenbl");});
test("rosenbladen -> rosenblad", function() {deepEqual( Stem("rosenbladen"), "rosenblad");});
test("rosenbuske -> rosenbusk", function() {deepEqual( Stem("rosenbuske"), "rosenbusk");});
test("rosendegång -> rosendegång", function() {deepEqual( Stem("rosendegång"), "rosendegång");});
test("rosendimmor -> rosendimm", function() {deepEqual( Stem("rosendimmor"), "rosendimm");});
test("rosengnista -> rosengnist", function() {deepEqual( Stem("rosengnista"), "rosengnist");});
test("rosenkindade -> rosenkind", function() {deepEqual( Stem("rosenkindade"), "rosenkind");});
test("rosenkransen -> rosenkrans", function() {deepEqual( Stem("rosenkransen"), "rosenkrans");});
test("rosenrauch -> rosenrauch", function() {deepEqual( Stem("rosenrauch"), "rosenrauch");});
test("rosenrauchs -> rosenrauch", function() {deepEqual( Stem("rosenrauchs"), "rosenrauch");});
test("rosenröda -> rosenröd", function() {deepEqual( Stem("rosenröda"), "rosenröd");});
test("rosenskymningen -> rosenskymning", function() {deepEqual( Stem("rosenskymningen"), "rosenskymning");});
test("rosenstandens -> rosenstand", function() {deepEqual( Stem("rosenstandens"), "rosenstand");});
test("rosentempel -> rosentempel", function() {deepEqual( Stem("rosentempel"), "rosentempel");});
test("rosiga -> ros", function() {deepEqual( Stem("rosiga"), "ros");});
test("rosigt -> ros", function() {deepEqual( Stem("rosigt"), "ros");});
test("rosor -> ros", function() {deepEqual( Stem("rosor"), "ros");});
test("rosorna -> ros", function() {deepEqual( Stem("rosorna"), "ros");});
test("rosornas -> ros", function() {deepEqual( Stem("rosornas"), "ros");});
test("rost -> rost", function() {deepEqual( Stem("rost"), "rost");});
test("rosten -> rost", function() {deepEqual( Stem("rosten"), "rost");});
test("roster -> rost", function() {deepEqual( Stem("roster"), "rost");});
test("rot -> rot", function() {deepEqual( Stem("rot"), "rot");});
test("rotat -> rot", function() {deepEqual( Stem("rotat"), "rot");});
test("rotfästa -> rotfäst", function() {deepEqual( Stem("rotfästa"), "rotfäst");});
test("rotsaker -> rotsak", function() {deepEqual( Stem("rotsaker"), "rotsak");});
test("rott -> rott", function() {deepEqual( Stem("rott"), "rott");});
test("rotter -> rott", function() {deepEqual( Stem("rotter"), "rott");});
test("rotting -> rotting", function() {deepEqual( Stem("rotting"), "rotting");});
test("rottingen -> rotting", function() {deepEqual( Stem("rottingen"), "rotting");});
test("rottingslag -> rottingslag", function() {deepEqual( Stem("rottingslag"), "rottingslag");});
test("rotundan -> rotundan", function() {deepEqual( Stem("rotundan"), "rotundan");});
test("rousseau -> rousseau", function() {deepEqual( Stem("rousseau"), "rousseau");});
test("rov -> rov", function() {deepEqual( Stem("rov"), "rov");});
test("rovdjurslikt -> rovdjurslik", function() {deepEqual( Stem("rovdjurslikt"), "rovdjurslik");});
test("rovdjurständer -> rovdjurständ", function() {deepEqual( Stem("rovdjurständer"), "rovdjurständ");});
test("rovfågelsansikte -> rovfågelsansik", function() {deepEqual( Stem("rovfågelsansikte"), "rovfågelsansik");});
test("rovfågelsansiktet -> rovfågelsansiktet", function() {deepEqual( Stem("rovfågelsansiktet"), "rovfågelsansiktet");});
test("rovtänder -> rovtänd", function() {deepEqual( Stem("rovtänder"), "rovtänd");});
test("rqd -> rqd", function() {deepEqual( Stem("rqd"), "rqd");});
test("rrohnarna -> rrohn", function() {deepEqual( Stem("rrohnarna"), "rrohn");});
test("rrök -> rrök", function() {deepEqual( Stem("rrök"), "rrök");});
test("rs -> rs", function() {deepEqual( Stem("rs"), "rs");});
test("rtom -> rtom", function() {deepEqual( Stem("rtom"), "rtom");});
test("rtsängarna -> rtsäng", function() {deepEqual( Stem("rtsängarna"), "rtsäng");});
test("rtt -> rtt", function() {deepEqual( Stem("rtt"), "rtt");});
test("rubba -> rubb", function() {deepEqual( Stem("rubba"), "rubb");});
test("rubbad -> rubb", function() {deepEqual( Stem("rubbad"), "rubb");});
test("rubbade -> rubb", function() {deepEqual( Stem("rubbade"), "rubb");});
test("rubbar -> rubb", function() {deepEqual( Stem("rubbar"), "rubb");});
test("rubbning -> rubbning", function() {deepEqual( Stem("rubbning"), "rubbning");});
test("rubbningen -> rubbning", function() {deepEqual( Stem("rubbningen"), "rubbning");});
test("rubin -> rubin", function() {deepEqual( Stem("rubin"), "rubin");});
test("rubiner -> rubin", function() {deepEqual( Stem("rubiner"), "rubin");});
test("rubins -> rubin", function() {deepEqual( Stem("rubins"), "rubin");});
test("rubriken -> rubrik", function() {deepEqual( Stem("rubriken"), "rubrik");});
test("rucklet -> rucklet", function() {deepEqual( Stem("rucklet"), "rucklet");});
test("ruckliga -> ruck", function() {deepEqual( Stem("ruckliga"), "ruck");});
test("rudekrona -> rudekron", function() {deepEqual( Stem("rudekrona"), "rudekron");});
test("rue -> rue", function() {deepEqual( Stem("rue"), "rue");});
test("ruffen -> ruff", function() {deepEqual( Stem("ruffen"), "ruff");});
test("rufsig -> rufs", function() {deepEqual( Stem("rufsig"), "rufs");});
test("rufsiga -> rufs", function() {deepEqual( Stem("rufsiga"), "rufs");});
test("rufsigt -> rufs", function() {deepEqual( Stem("rufsigt"), "rufs");});
test("rufvade -> rufv", function() {deepEqual( Stem("rufvade"), "rufv");});
test("rugg -> rugg", function() {deepEqual( Stem("rugg"), "rugg");});
test("ruggig -> rugg", function() {deepEqual( Stem("ruggig"), "rugg");});
test("ruinen -> ruin", function() {deepEqual( Stem("ruinen"), "ruin");});
test("ruiner -> ruin", function() {deepEqual( Stem("ruiner"), "ruin");});
test("ruinerad -> ruiner", function() {deepEqual( Stem("ruinerad"), "ruiner");});
test("ruinerar -> ruiner", function() {deepEqual( Stem("ruinerar"), "ruiner");});
test("rull -> rull", function() {deepEqual( Stem("rull"), "rull");});
test("rulla -> rull", function() {deepEqual( Stem("rulla"), "rull");});
test("rullade -> rull", function() {deepEqual( Stem("rullade"), "rull");});
test("rullande -> rull", function() {deepEqual( Stem("rullande"), "rull");});
test("rullar -> rull", function() {deepEqual( Stem("rullar"), "rull");});
test("rulle -> rull", function() {deepEqual( Stem("rulle"), "rull");});
test("rullgardin -> rullgardin", function() {deepEqual( Stem("rullgardin"), "rullgardin");});
test("rullgardinen -> rullgardin", function() {deepEqual( Stem("rullgardinen"), "rullgardin");});
test("rullgardiner -> rullgardin", function() {deepEqual( Stem("rullgardiner"), "rullgardin");});
test("rullgardinerna -> rullgardin", function() {deepEqual( Stem("rullgardinerna"), "rullgardin");});
test("rullt -> rullt", function() {deepEqual( Stem("rullt"), "rullt");});
test("rum -> rum", function() {deepEqual( Stem("rum"), "rum");});
test("rummen -> rumm", function() {deepEqual( Stem("rummen"), "rumm");});
test("rummens -> rumm", function() {deepEqual( Stem("rummens"), "rumm");});
test("rummet -> rummet", function() {deepEqual( Stem("rummet"), "rummet");});
test("rummets -> rummet", function() {deepEqual( Stem("rummets"), "rummet");});
test("rumskamrater -> rumskamrat", function() {deepEqual( Stem("rumskamrater"), "rumskamrat");});
test("rumsvåningen -> rumsvåning", function() {deepEqual( Stem("rumsvåningen"), "rumsvåning");});
test("rund -> rund", function() {deepEqual( Stem("rund"), "rund");});
test("runda -> rund", function() {deepEqual( Stem("runda"), "rund");});
test("rundade -> rund", function() {deepEqual( Stem("rundade"), "rund");});
test("rundning -> rundning", function() {deepEqual( Stem("rundning"), "rundning");});
test("rundt -> rund", function() {deepEqual( Stem("rundt"), "rund");});
test("rundvälvd -> rundvälvd", function() {deepEqual( Stem("rundvälvd"), "rundvälvd");});
test("runeberg -> runeberg", function() {deepEqual( Stem("runeberg"), "runeberg");});
test("runeskrift -> runeskrift", function() {deepEqual( Stem("runeskrift"), "runeskrift");});
test("rungande -> rung", function() {deepEqual( Stem("rungande"), "rung");});
test("runne -> runn", function() {deepEqual( Stem("runne"), "runn");});
test("runnit -> runnit", function() {deepEqual( Stem("runnit"), "runnit");});
test("runno -> runno", function() {deepEqual( Stem("runno"), "runno");});
test("runstycke -> runstyck", function() {deepEqual( Stem("runstycke"), "runstyck");});
test("runstycket -> runstycket", function() {deepEqual( Stem("runstycket"), "runstycket");});
test("runt -> runt", function() {deepEqual( Stem("runt"), "runt");});
test("runtom -> runtom", function() {deepEqual( Stem("runtom"), "runtom");});
test("runtomkring -> runtomkring", function() {deepEqual( Stem("runtomkring"), "runtomkring");});
test("rus -> rus", function() {deepEqual( Stem("rus"), "rus");});
test("rusa -> rus", function() {deepEqual( Stem("rusa"), "rus");});
test("rusade -> rus", function() {deepEqual( Stem("rusade"), "rus");});
test("rusande -> rus", function() {deepEqual( Stem("rusande"), "rus");});
test("rusar -> rus", function() {deepEqual( Stem("rusar"), "rus");});
test("rusat -> rus", function() {deepEqual( Stem("rusat"), "rus");});
test("ruset -> ruset", function() {deepEqual( Stem("ruset"), "ruset");});
test("rusets -> ruset", function() {deepEqual( Stem("rusets"), "ruset");});
test("rusig -> rus", function() {deepEqual( Stem("rusig"), "rus");});
test("rusiga -> rus", function() {deepEqual( Stem("rusiga"), "rus");});
test("ruskade -> rusk", function() {deepEqual( Stem("ruskade"), "rusk");});
test("ruskar -> rusk", function() {deepEqual( Stem("ruskar"), "rusk");});
test("ruskig -> rusk", function() {deepEqual( Stem("ruskig"), "rusk");});
test("ruskigt -> rusk", function() {deepEqual( Stem("ruskigt"), "rusk");});
test("russeberget -> russeberget", function() {deepEqual( Stem("russeberget"), "russeberget");});
test("russin -> russin", function() {deepEqual( Stem("russin"), "russin");});
test("rusta -> rust", function() {deepEqual( Stem("rusta"), "rust");});
test("rustade -> rust", function() {deepEqual( Stem("rustade"), "rust");});
test("rustas -> rust", function() {deepEqual( Stem("rustas"), "rust");});
test("rustibus -> rustibus", function() {deepEqual( Stem("rustibus"), "rustibus");});
test("rusticana -> rustican", function() {deepEqual( Stem("rusticana"), "rustican");});
test("rut -> rut", function() {deepEqual( Stem("rut"), "rut");});
test("ruta -> rut", function() {deepEqual( Stem("ruta"), "rut");});
test("rutan -> rutan", function() {deepEqual( Stem("rutan"), "rutan");});
test("ruter -> rut", function() {deepEqual( Stem("ruter"), "rut");});
test("rutig -> rut", function() {deepEqual( Stem("rutig"), "rut");});
test("rutor -> rut", function() {deepEqual( Stem("rutor"), "rut");});
test("rutorna -> rut", function() {deepEqual( Stem("rutorna"), "rut");});
test("rutsch -> rutsch", function() {deepEqual( Stem("rutsch"), "rutsch");});
test("rutten -> rutt", function() {deepEqual( Stem("rutten"), "rutt");});
test("ruttenhet -> rutten", function() {deepEqual( Stem("ruttenhet"), "rutten");});
test("ruttet -> ruttet", function() {deepEqual( Stem("ruttet"), "ruttet");});
test("ruttna -> ruttn", function() {deepEqual( Stem("ruttna"), "ruttn");});
test("ruttnade -> ruttn", function() {deepEqual( Stem("ruttnade"), "ruttn");});
test("ruvade -> ruv", function() {deepEqual( Stem("ruvade"), "ruv");});
test("ruvande -> ruv", function() {deepEqual( Stem("ruvande"), "ruv");});
test("ruvat -> ruv", function() {deepEqual( Stem("ruvat"), "ruv");});
test("rv -> rv", function() {deepEqual( Stem("rv"), "rv");});
test("rya -> rya", function() {deepEqual( Stem("rya"), "rya");});
test("rybte -> rybt", function() {deepEqual( Stem("rybte"), "rybt");});
test("ryck -> ryck", function() {deepEqual( Stem("ryck"), "ryck");});
test("rycka -> ryck", function() {deepEqual( Stem("rycka"), "ryck");});
test("ryckande -> ryck", function() {deepEqual( Stem("ryckande"), "ryck");});
test("rycker -> ryck", function() {deepEqual( Stem("rycker"), "ryck");});
test("ryckig -> ryck", function() {deepEqual( Stem("ryckig"), "ryck");});
test("ryckning -> ryckning", function() {deepEqual( Stem("ryckning"), "ryckning");});
test("ryckningar -> ryckning", function() {deepEqual( Stem("ryckningar"), "ryckning");});
test("ryckt -> ryck", function() {deepEqual( Stem("ryckt"), "ryck");});
test("rycktc -> rycktc", function() {deepEqual( Stem("rycktc"), "rycktc");});
test("ryckte -> ryck", function() {deepEqual( Stem("ryckte"), "ryck");});
test("rycktes -> ryck", function() {deepEqual( Stem("rycktes"), "ryck");});
test("ryckts -> ryck", function() {deepEqual( Stem("ryckts"), "ryck");});
test("rydberg -> rydberg", function() {deepEqual( Stem("rydberg"), "rydberg");});
test("rydbergs -> rydberg", function() {deepEqual( Stem("rydbergs"), "rydberg");});
test("rygg -> rygg", function() {deepEqual( Stem("rygg"), "rygg");});
test("ryggade -> rygg", function() {deepEqual( Stem("ryggade"), "rygg");});
test("ryggar -> rygg", function() {deepEqual( Stem("ryggar"), "rygg");});
test("ryggarna -> rygg", function() {deepEqual( Stem("ryggarna"), "rygg");});
test("ryggen -> rygg", function() {deepEqual( Stem("ryggen"), "rygg");});
test("ryggraden -> ryggrad", function() {deepEqual( Stem("ryggraden"), "ryggrad");});
test("ryggstöd -> ryggstöd", function() {deepEqual( Stem("ryggstöd"), "ryggstöd");});
test("ryggtavla -> ryggtavl", function() {deepEqual( Stem("ryggtavla"), "ryggtavl");});
test("rykande -> ryk", function() {deepEqual( Stem("rykande"), "ryk");});
test("ryktbar -> ryktb", function() {deepEqual( Stem("ryktbar"), "ryktb");});
test("ryktbara -> ryktbar", function() {deepEqual( Stem("ryktbara"), "ryktbar");});
test("ryktbarhet -> ryktbar", function() {deepEqual( Stem("ryktbarhet"), "ryktbar");});
test("ryktc -> ryktc", function() {deepEqual( Stem("ryktc"), "ryktc");});
test("rykte -> rykt", function() {deepEqual( Stem("rykte"), "rykt");});
test("rykten -> rykt", function() {deepEqual( Stem("rykten"), "rykt");});
test("ryktes -> rykt", function() {deepEqual( Stem("ryktes"), "rykt");});
test("ryktet -> ryktet", function() {deepEqual( Stem("ryktet"), "ryktet");});
test("rym -> rym", function() {deepEqual( Stem("rym"), "rym");});
test("rymd -> rymd", function() {deepEqual( Stem("rymd"), "rymd");});
test("rymde -> rymd", function() {deepEqual( Stem("rymde"), "rymd");});
test("rymden -> rymd", function() {deepEqual( Stem("rymden"), "rymd");});
test("rymdens -> rymd", function() {deepEqual( Stem("rymdens"), "rymd");});
test("rymder -> rymd", function() {deepEqual( Stem("rymder"), "rymd");});
test("rymlig -> rym", function() {deepEqual( Stem("rymlig"), "rym");});
test("rymliga -> rym", function() {deepEqual( Stem("rymliga"), "rym");});
test("rymma -> rymm", function() {deepEqual( Stem("rymma"), "rymm");});
test("rymmer -> rymm", function() {deepEqual( Stem("rymmer"), "rymm");});
test("rymplingen -> rympling", function() {deepEqual( Stem("rymplingen"), "rympling");});
test("ryn -> ryn", function() {deepEqual( Stem("ryn"), "ryn");});
test("rynkade -> rynk", function() {deepEqual( Stem("rynkade"), "rynk");});
test("rynkades -> rynk", function() {deepEqual( Stem("rynkades"), "rynk");});
test("rynkar -> rynk", function() {deepEqual( Stem("rynkar"), "rynk");});
test("rynkig -> rynk", function() {deepEqual( Stem("rynkig"), "rynk");});
test("rynkiga -> rynk", function() {deepEqual( Stem("rynkiga"), "rynk");});
test("rynkigt -> rynk", function() {deepEqual( Stem("rynkigt"), "rynk");});
test("rynkning -> rynkning", function() {deepEqual( Stem("rynkning"), "rynkning");});
test("rynkor -> rynk", function() {deepEqual( Stem("rynkor"), "rynk");});
test("rynkorna -> rynk", function() {deepEqual( Stem("rynkorna"), "rynk");});
test("rysa -> rys", function() {deepEqual( Stem("rysa"), "rys");});
test("rysande -> rys", function() {deepEqual( Stem("rysande"), "rys");});
test("ryser -> rys", function() {deepEqual( Stem("ryser"), "rys");});
test("ryslig -> rys", function() {deepEqual( Stem("ryslig"), "rys");});
test("rysliga -> rys", function() {deepEqual( Stem("rysliga"), "rys");});
test("rysligaste -> rys", function() {deepEqual( Stem("rysligaste"), "rys");});
test("ryslighet -> rys", function() {deepEqual( Stem("ryslighet"), "rys");});
test("rysligt -> rys", function() {deepEqual( Stem("rysligt"), "rys");});
test("rysning -> rysning", function() {deepEqual( Stem("rysning"), "rysning");});
test("ryssviks -> ryssvik", function() {deepEqual( Stem("ryssviks"), "ryssvik");});
test("ryst -> ryst", function() {deepEqual( Stem("ryst"), "ryst");});
test("ryste -> ryst", function() {deepEqual( Stem("ryste"), "ryst");});
test("ryter -> ryt", function() {deepEqual( Stem("ryter"), "ryt");});
test("rytmer -> rytm", function() {deepEqual( Stem("rytmer"), "rytm");});
test("ryttare -> rytt", function() {deepEqual( Stem("ryttare"), "rytt");});
test("ryttmästare -> ryttmäst", function() {deepEqual( Stem("ryttmästare"), "ryttmäst");});
test("ryttmästaren -> ryttmäst", function() {deepEqual( Stem("ryttmästaren"), "ryttmäst");});
test("ryttmästarens -> ryttmäst", function() {deepEqual( Stem("ryttmästarens"), "ryttmäst");});
test("räck -> räck", function() {deepEqual( Stem("räck"), "räck");});
test("räcka -> räck", function() {deepEqual( Stem("räcka"), "räck");});
test("räcke -> räck", function() {deepEqual( Stem("räcke"), "räck");});
test("räcken -> räck", function() {deepEqual( Stem("räcken"), "räck");});
test("räcker -> räck", function() {deepEqual( Stem("räcker"), "räck");});
test("räckes -> räck", function() {deepEqual( Stem("räckes"), "räck");});
test("räckhåll -> räckhåll", function() {deepEqual( Stem("räckhåll"), "räckhåll");});
test("räckt -> räck", function() {deepEqual( Stem("räckt"), "räck");});
test("räckte -> räck", function() {deepEqual( Stem("räckte"), "räck");});
test("räcktes -> räck", function() {deepEqual( Stem("räcktes"), "räck");});
test("räckts -> räck", function() {deepEqual( Stem("räckts"), "räck");});
test("räckvidden -> räckvid", function() {deepEqual( Stem("räckvidden"), "räckvid");});
test("rädcl -> rädcl", function() {deepEqual( Stem("rädcl"), "rädcl");});
test("rädd -> rädd", function() {deepEqual( Stem("rädd"), "rädd");});
test("rädda -> rädd", function() {deepEqual( Stem("rädda"), "rädd");});
test("räddad -> rädd", function() {deepEqual( Stem("räddad"), "rädd");});
test("räddade -> rädd", function() {deepEqual( Stem("räddade"), "rädd");});
test("räddare -> rädd", function() {deepEqual( Stem("räddare"), "rädd");});
test("räddat -> rädd", function() {deepEqual( Stem("räddat"), "rädd");});
test("räddhågad -> räddhåg", function() {deepEqual( Stem("räddhågad"), "räddhåg");});
test("räddning -> räddning", function() {deepEqual( Stem("räddning"), "räddning");});
test("räddsla -> räddsl", function() {deepEqual( Stem("räddsla"), "räddsl");});
test("rädens -> räd", function() {deepEqual( Stem("rädens"), "räd");});
test("rädisor -> rädis", function() {deepEqual( Stem("rädisor"), "rädis");});
test("rädisorna -> rädis", function() {deepEqual( Stem("rädisorna"), "rädis");});
test("räds -> räd", function() {deepEqual( Stem("räds"), "räd");});
test("rädsla -> rädsl", function() {deepEqual( Stem("rädsla"), "rädsl");});
test("rädslan -> rädslan", function() {deepEqual( Stem("rädslan"), "rädslan");});
test("räf -> räf", function() {deepEqual( Stem("räf"), "räf");});
test("räfvens -> räfv", function() {deepEqual( Stem("räfvens"), "räfv");});
test("räkna -> räkn", function() {deepEqual( Stem("räkna"), "räkn");});
test("räknade -> räkn", function() {deepEqual( Stem("räknade"), "räkn");});
test("räknades -> räkn", function() {deepEqual( Stem("räknades"), "räkn");});
test("räknar -> räkn", function() {deepEqual( Stem("räknar"), "räkn");});
test("räknat -> räkn", function() {deepEqual( Stem("räknat"), "räkn");});
test("räknetal -> räknetal", function() {deepEqual( Stem("räknetal"), "räknetal");});
test("räkning -> räkning", function() {deepEqual( Stem("räkning"), "räkning");});
test("räkningar -> räkning", function() {deepEqual( Stem("räkningar"), "räkning");});
test("räkningen -> räkning", function() {deepEqual( Stem("räkningen"), "räkning");});
test("rämnorna -> rämn", function() {deepEqual( Stem("rämnorna"), "rämn");});
test("ränder -> ränd", function() {deepEqual( Stem("ränder"), "ränd");});
test("ränderna -> ränd", function() {deepEqual( Stem("ränderna"), "ränd");});
test("rännan -> rännan", function() {deepEqual( Stem("rännan"), "rännan");});
test("rännil -> rännil", function() {deepEqual( Stem("rännil"), "rännil");});
test("rännor -> ränn", function() {deepEqual( Stem("rännor"), "ränn");});
test("rännsten -> rännst", function() {deepEqual( Stem("rännsten"), "rännst");});
test("rännstenarna -> rännsten", function() {deepEqual( Stem("rännstenarna"), "rännsten");});
test("rännstenen -> rännsten", function() {deepEqual( Stem("rännstenen"), "rännsten");});
test("ränseln -> ränseln", function() {deepEqual( Stem("ränseln"), "ränseln");});
test("ränta -> ränt", function() {deepEqual( Stem("ränta"), "ränt");});
test("räntan -> räntan", function() {deepEqual( Stem("räntan"), "räntan");});
test("räntor -> ränt", function() {deepEqual( Stem("räntor"), "ränt");});
test("räring -> räring", function() {deepEqual( Stem("räring"), "räring");});
test("rätade -> rät", function() {deepEqual( Stem("rätade"), "rät");});
test("rätt -> rätt", function() {deepEqual( Stem("rätt"), "rätt");});
test("rätta -> rätt", function() {deepEqual( Stem("rätta"), "rätt");});
test("rättade -> rätt", function() {deepEqual( Stem("rättade"), "rätt");});
test("rättan -> rättan", function() {deepEqual( Stem("rättan"), "rättan");});
test("rättar -> rätt", function() {deepEqual( Stem("rättar"), "rätt");});
test("rättare -> rätt", function() {deepEqual( Stem("rättare"), "rätt");});
test("rättas -> rätt", function() {deepEqual( Stem("rättas"), "rätt");});
test("rättast -> rätt", function() {deepEqual( Stem("rättast"), "rätt");});
test("rättat -> rätt", function() {deepEqual( Stem("rättat"), "rätt");});
test("rätte -> rätt", function() {deepEqual( Stem("rätte"), "rätt");});
test("rättegång -> rättegång", function() {deepEqual( Stem("rättegång"), "rättegång");});
test("rättegångshandlingar -> rättegångshandling", function() {deepEqual( Stem("rättegångshandlingar"), "rättegångshandling");});
test("rättegångsprotokoll -> rättegångsprotokoll", function() {deepEqual( Stem("rättegångsprotokoll"), "rättegångsprotokoll");});
test("rätteligen -> rätte", function() {deepEqual( Stem("rätteligen"), "rätte");});
test("rätten -> rätt", function() {deepEqual( Stem("rätten"), "rätt");});
test("rätter -> rätt", function() {deepEqual( Stem("rätter"), "rätt");});
test("rätterna -> rätt", function() {deepEqual( Stem("rätterna"), "rätt");});
test("rättesnöre -> rättesnör", function() {deepEqual( Stem("rättesnöre"), "rättesnör");});
test("rättfram -> rättfram", function() {deepEqual( Stem("rättfram"), "rättfram");});
test("rättfärdiga -> rättfärd", function() {deepEqual( Stem("rättfärdiga"), "rättfärd");});
test("rättfärdigar -> rättfärd", function() {deepEqual( Stem("rättfärdigar"), "rättfärd");});
test("rättfärdige -> rättfärd", function() {deepEqual( Stem("rättfärdige"), "rättfärd");});
test("rättfärdighet -> rättfärd", function() {deepEqual( Stem("rättfärdighet"), "rättfärd");});
test("rättighet -> rätt", function() {deepEqual( Stem("rättighet"), "rätt");});
test("rättigheten -> rätt", function() {deepEqual( Stem("rättigheten"), "rätt");});
test("rättigheter -> rätt", function() {deepEqual( Stem("rättigheter"), "rätt");});
test("rättmätiga -> rättmät", function() {deepEqual( Stem("rättmätiga"), "rättmät");});
test("rättrådighet -> rättråd", function() {deepEqual( Stem("rättrådighet"), "rättråd");});
test("rättsenliga -> rättsen", function() {deepEqual( Stem("rättsenliga"), "rättsen");});
test("rättsinniga -> rättsinn", function() {deepEqual( Stem("rättsinniga"), "rättsinn");});
test("rättsinnige -> rättsinn", function() {deepEqual( Stem("rättsinnige"), "rättsinn");});
test("rättskaffens -> rättskaff", function() {deepEqual( Stem("rättskaffens"), "rättskaff");});
test("rättskänsla -> rättskänsl", function() {deepEqual( Stem("rättskänsla"), "rättskänsl");});
test("rättsskipningen -> rättsskipning", function() {deepEqual( Stem("rättsskipningen"), "rättsskipning");});
test("rättsuppfattning -> rättsuppfattning", function() {deepEqual( Stem("rättsuppfattning"), "rättsuppfattning");});
test("rättvis -> rättvis", function() {deepEqual( Stem("rättvis"), "rättvis");});
test("rättvisa -> rättvis", function() {deepEqual( Stem("rättvisa"), "rättvis");});
test("rättvisan -> rättvisan", function() {deepEqual( Stem("rättvisan"), "rättvisan");});
test("rättvisaste -> rättvis", function() {deepEqual( Stem("rättvisaste"), "rättvis");});
test("rättvisligen -> rättvis", function() {deepEqual( Stem("rättvisligen"), "rättvis");});
test("rättvist -> rättvist", function() {deepEqual( Stem("rättvist"), "rättvist");});
test("räv -> räv", function() {deepEqual( Stem("räv"), "räv");});
test("räven -> räv", function() {deepEqual( Stem("räven"), "räv");});
test("rääf -> rääf", function() {deepEqual( Stem("rääf"), "rääf");});
test("rå -> rå", function() {deepEqual( Stem("rå"), "rå");});
test("råa -> råa", function() {deepEqual( Stem("råa"), "råa");});
test("råckor -> råck", function() {deepEqual( Stem("råckor"), "råck");});
test("råd -> råd", function() {deepEqual( Stem("råd"), "råd");});
test("råda -> råd", function() {deepEqual( Stem("råda"), "råd");});
test("rådande -> råd", function() {deepEqual( Stem("rådande"), "råd");});
test("rådbråka -> rådbråk", function() {deepEqual( Stem("rådbråka"), "rådbråk");});
test("rådde -> rådd", function() {deepEqual( Stem("rådde"), "rådd");});
test("råden -> råd", function() {deepEqual( Stem("råden"), "råd");});
test("råder -> råd", function() {deepEqual( Stem("råder"), "råd");});
test("rådet -> rådet", function() {deepEqual( Stem("rådet"), "rådet");});
test("rådfråga -> rådfråg", function() {deepEqual( Stem("rådfråga"), "rådfråg");});
test("rådfrågade -> rådfråg", function() {deepEqual( Stem("rådfrågade"), "rådfråg");});
test("rådfrågat -> rådfråg", function() {deepEqual( Stem("rådfrågat"), "rådfråg");});
test("rådgivare -> rådgiv", function() {deepEqual( Stem("rådgivare"), "rådgiv");});
test("rådgöra -> rådgör", function() {deepEqual( Stem("rådgöra"), "rådgör");});
test("rådhusets -> rådhuset", function() {deepEqual( Stem("rådhusets"), "rådhuset");});
test("rådligast -> råd", function() {deepEqual( Stem("rådligast"), "råd");});
test("rådlös -> rådlös", function() {deepEqual( Stem("rådlös"), "rådlös");});
test("rådlöshet -> rådlös", function() {deepEqual( Stem("rådlöshet"), "rådlös");});
test("rådman -> rådman", function() {deepEqual( Stem("rådman"), "rådman");});
test("rådplägning -> rådplägning", function() {deepEqual( Stem("rådplägning"), "rådplägning");});
test("rådplägningar -> rådplägning", function() {deepEqual( Stem("rådplägningar"), "rådplägning");});
test("rådrum -> rådrum", function() {deepEqual( Stem("rådrum"), "rådrum");});
test("råds -> råd", function() {deepEqual( Stem("råds"), "råd");});
test("rådsförsamling -> rådsförsamling", function() {deepEqual( Stem("rådsförsamling"), "rådsförsamling");});
test("rådslaget -> rådslaget", function() {deepEqual( Stem("rådslaget"), "rådslaget");});
test("rådt -> rådt", function() {deepEqual( Stem("rådt"), "rådt");});
test("rådvill -> rådvill", function() {deepEqual( Stem("rådvill"), "rådvill");});
test("råe -> råe", function() {deepEqual( Stem("råe"), "råe");});
test("råg -> råg", function() {deepEqual( Stem("råg"), "råg");});
test("råga -> råg", function() {deepEqual( Stem("råga"), "råg");});
test("rågade -> råg", function() {deepEqual( Stem("rågade"), "råg");});
test("rågadt -> rågad", function() {deepEqual( Stem("rågadt"), "rågad");});
test("rågen -> råg", function() {deepEqual( Stem("rågen"), "råg");});
test("rågfält -> rågfält", function() {deepEqual( Stem("rågfält"), "rågfält");});
test("råhet -> råhet", function() {deepEqual( Stem("råhet"), "råhet");});
test("råheten -> råhet", function() {deepEqual( Stem("råheten"), "råhet");});
test("råk -> råk", function() {deepEqual( Stem("råk"), "råk");});
test("råka -> råk", function() {deepEqual( Stem("råka"), "råk");});
test("råkade -> råk", function() {deepEqual( Stem("råkade"), "råk");});
test("råkar -> råk", function() {deepEqual( Stem("råkar"), "råk");});
test("råkas -> råk", function() {deepEqual( Stem("råkas"), "råk");});
test("råkat -> råk", function() {deepEqual( Stem("råkat"), "råk");});
test("råmade -> råm", function() {deepEqual( Stem("råmade"), "råm");});
test("råmandet -> råm", function() {deepEqual( Stem("råmandet"), "råm");});
test("råmar -> råm", function() {deepEqual( Stem("råmar"), "råm");});
test("rån -> rån", function() {deepEqual( Stem("rån"), "rån");});
test("rår -> rår", function() {deepEqual( Stem("rår"), "rår");});
test("rått -> rått", function() {deepEqual( Stem("rått"), "rått");});
test("råtta -> rått", function() {deepEqual( Stem("råtta"), "rått");});
test("råttan -> råttan", function() {deepEqual( Stem("råttan"), "råttan");});
test("råttbo -> råttbo", function() {deepEqual( Stem("råttbo"), "råttbo");});
test("råttfälla -> råttfäll", function() {deepEqual( Stem("råttfälla"), "råttfäll");});
test("råttor -> rått", function() {deepEqual( Stem("råttor"), "rått");});
test("råttsvansar -> råttsvans", function() {deepEqual( Stem("råttsvansar"), "råttsvans");});
test("råttögon -> råttögon", function() {deepEqual( Stem("råttögon"), "råttögon");});
test("rö -> rö", function() {deepEqual( Stem("rö"), "rö");});
test("röcko -> röcko", function() {deepEqual( Stem("röcko"), "röcko");});
test("röd -> röd", function() {deepEqual( Stem("röd"), "röd");});
test("röda -> röd", function() {deepEqual( Stem("röda"), "röd");});
test("rödaktiga -> rödakt", function() {deepEqual( Stem("rödaktiga"), "rödakt");});
test("rödare -> röd", function() {deepEqual( Stem("rödare"), "röd");});
test("rödblommig -> rödblomm", function() {deepEqual( Stem("rödblommig"), "rödblomm");});
test("rödblommiga -> rödblomm", function() {deepEqual( Stem("rödblommiga"), "rödblomm");});
test("rödblå -> rödblå", function() {deepEqual( Stem("rödblå"), "rödblå");});
test("rödbrusig -> rödbrus", function() {deepEqual( Stem("rödbrusig"), "rödbrus");});
test("rödbrusige -> rödbrus", function() {deepEqual( Stem("rödbrusige"), "rödbrus");});
test("röde -> röd", function() {deepEqual( Stem("röde"), "röd");});
test("rödflammiga -> rödflamm", function() {deepEqual( Stem("rödflammiga"), "rödflamm");});
test("rödfärgad -> rödfärg", function() {deepEqual( Stem("rödfärgad"), "rödfärg");});
test("rödgula -> rödgul", function() {deepEqual( Stem("rödgula"), "rödgul");});
test("rödkantade -> rödkant", function() {deepEqual( Stem("rödkantade"), "rödkant");});
test("rödletta -> rödlet", function() {deepEqual( Stem("rödletta"), "rödlet");});
test("rödlätta -> rödlät", function() {deepEqual( Stem("rödlätta"), "rödlät");});
test("rödmålade -> rödmål", function() {deepEqual( Stem("rödmålade"), "rödmål");});
test("rödrandig -> rödrand", function() {deepEqual( Stem("rödrandig"), "rödrand");});
test("rödrandiga -> rödrand", function() {deepEqual( Stem("rödrandiga"), "rödrand");});
test("rödskinn -> rödskin", function() {deepEqual( Stem("rödskinn"), "rödskin");});
test("rödviolett -> rödviolet", function() {deepEqual( Stem("rödviolett"), "rödviolet");});
test("röfvar -> röfv", function() {deepEqual( Stem("röfvar"), "röfv");});
test("röja -> röj", function() {deepEqual( Stem("röja"), "röj");});
test("röjas -> röj", function() {deepEqual( Stem("röjas"), "röj");});
test("röjde -> röjd", function() {deepEqual( Stem("röjde"), "röjd");});
test("röjdes -> röjd", function() {deepEqual( Stem("röjdes"), "röjd");});
test("röjer -> röj", function() {deepEqual( Stem("röjer"), "röj");});
test("röjt -> röjt", function() {deepEqual( Stem("röjt"), "röjt");});
test("rök -> rök", function() {deepEqual( Stem("rök"), "rök");});
test("röka -> rök", function() {deepEqual( Stem("röka"), "rök");});
test("rökade -> rök", function() {deepEqual( Stem("rökade"), "rök");});
test("rökande -> rök", function() {deepEqual( Stem("rökande"), "rök");});
test("rökare -> rök", function() {deepEqual( Stem("rökare"), "rök");});
test("rökelse -> rök", function() {deepEqual( Stem("rökelse"), "rök");});
test("rökelsekar -> rökelsek", function() {deepEqual( Stem("rökelsekar"), "rökelsek");});
test("rökelsemolnen -> rökelsemoln", function() {deepEqual( Stem("rökelsemolnen"), "rökelsemoln");});
test("rökelsen -> rök", function() {deepEqual( Stem("rökelsen"), "rök");});
test("röken -> rök", function() {deepEqual( Stem("röken"), "rök");});
test("röker -> rök", function() {deepEqual( Stem("röker"), "rök");});
test("rökhytten -> rökhyt", function() {deepEqual( Stem("rökhytten"), "rökhyt");});
test("rökmoln -> rökmoln", function() {deepEqual( Stem("rökmoln"), "rökmoln");});
test("rökmolnen -> rökmoln", function() {deepEqual( Stem("rökmolnen"), "rökmoln");});
test("rökn -> rökn", function() {deepEqual( Stem("rökn"), "rökn");});
test("röknarna -> rökn", function() {deepEqual( Stem("röknarna"), "rökn");});
test("röknarnn -> röknarn", function() {deepEqual( Stem("röknarnn"), "röknarn");});
test("röknonno -> röknonno", function() {deepEqual( Stem("röknonno"), "röknonno");});
test("rökoffer -> rökoff", function() {deepEqual( Stem("rökoffer"), "rökoff");});
test("rökpelare -> rökpel", function() {deepEqual( Stem("rökpelare"), "rökpel");});
test("rökpelaren -> rökpel", function() {deepEqual( Stem("rökpelaren"), "rökpel");});
test("rökring -> rökring", function() {deepEqual( Stem("rökring"), "rökring");});
test("rökringen -> rökring", function() {deepEqual( Stem("rökringen"), "rökring");});
test("rökrum -> rökrum", function() {deepEqual( Stem("rökrum"), "rökrum");});
test("rökrummet -> rökrummet", function() {deepEqual( Stem("rökrummet"), "rökrummet");});
test("rökt -> rökt", function() {deepEqual( Stem("rökt"), "rökt");});
test("rökte -> rökt", function() {deepEqual( Stem("rökte"), "rökt");});
test("rökunrnn -> rökunrn", function() {deepEqual( Stem("rökunrnn"), "rökunrn");});
test("röl -> röl", function() {deepEqual( Stem("röl"), "röl");});
test("römt -> römt", function() {deepEqual( Stem("römt"), "römt");});
test("rön -> rön", function() {deepEqual( Stem("rön"), "rön");});
test("röna -> rön", function() {deepEqual( Stem("röna"), "rön");});
test("rönet -> rönet", function() {deepEqual( Stem("rönet"), "rönet");});
test("rönl -> rönl", function() {deepEqual( Stem("rönl"), "rönl");});
test("rönnarnas -> rönn", function() {deepEqual( Stem("rönnarnas"), "rönn");});
test("rönnbären -> rönnbär", function() {deepEqual( Stem("rönnbären"), "rönnbär");});
test("rönt -> rönt", function() {deepEqual( Stem("rönt"), "rönt");});
test("rönte -> rönt", function() {deepEqual( Stem("rönte"), "rönt");});
test("röntgen -> röntg", function() {deepEqual( Stem("röntgen"), "röntg");});
test("röntgenfotograferats -> röntgenfotograferat", function() {deepEqual( Stem("röntgenfotograferats"), "röntgenfotograferat");});
test("rör -> rör", function() {deepEqual( Stem("rör"), "rör");});
test("röra -> rör", function() {deepEqual( Stem("röra"), "rör");});
test("rörande -> rör", function() {deepEqual( Stem("rörande"), "rör");});
test("röras -> rör", function() {deepEqual( Stem("röras"), "rör");});
test("rörd -> rörd", function() {deepEqual( Stem("rörd"), "rörd");});
test("rörda -> rörd", function() {deepEqual( Stem("rörda"), "rörd");});
test("rörde -> rörd", function() {deepEqual( Stem("rörde"), "rörd");});
test("rördes -> rörd", function() {deepEqual( Stem("rördes"), "rörd");});
test("rörelse -> rör", function() {deepEqual( Stem("rörelse"), "rör");});
test("rörelsegrader -> rörelsegrad", function() {deepEqual( Stem("rörelsegrader"), "rörelsegrad");});
test("rörelsen -> rör", function() {deepEqual( Stem("rörelsen"), "rör");});
test("rörelser -> rör", function() {deepEqual( Stem("rörelser"), "rör");});
test("rörelserna -> rör", function() {deepEqual( Stem("rörelserna"), "rör");});
test("rörer -> rör", function() {deepEqual( Stem("rörer"), "rör");});
test("röret -> röret", function() {deepEqual( Stem("röret"), "röret");});
test("rörlig -> rör", function() {deepEqual( Stem("rörlig"), "rör");});
test("rörliga -> rör", function() {deepEqual( Stem("rörliga"), "rör");});
test("rörlighet -> rör", function() {deepEqual( Stem("rörlighet"), "rör");});
test("rörligt -> rör", function() {deepEqual( Stem("rörligt"), "rör");});
test("rörsoffan -> rörsoffan", function() {deepEqual( Stem("rörsoffan"), "rörsoffan");});
test("rörstrand -> rörstrand", function() {deepEqual( Stem("rörstrand"), "rörstrand");});
test("rört -> rört", function() {deepEqual( Stem("rört"), "rört");});
test("rös -> rös", function() {deepEqual( Stem("rös"), "rös");});
test("röst -> röst", function() {deepEqual( Stem("röst"), "röst");});
test("rösten -> röst", function() {deepEqual( Stem("rösten"), "röst");});
test("röstens -> röst", function() {deepEqual( Stem("röstens"), "röst");});
test("röster -> röst", function() {deepEqual( Stem("röster"), "röst");});
test("rösterna -> röst", function() {deepEqual( Stem("rösterna"), "röst");});
test("rösts -> röst", function() {deepEqual( Stem("rösts"), "röst");});
test("röt -> röt", function() {deepEqual( Stem("röt"), "röt");});
test("röta -> röt", function() {deepEqual( Stem("röta"), "röt");});
test("rötmånadshetta -> rötmånadshet", function() {deepEqual( Stem("rötmånadshetta"), "rötmånadshet");});
test("rött -> rött", function() {deepEqual( Stem("rött"), "rött");});
test("rötta -> rött", function() {deepEqual( Stem("rötta"), "rött");});
test("rötter -> rött", function() {deepEqual( Stem("rötter"), "rött");});
test("rötägg -> rötägg", function() {deepEqual( Stem("rötägg"), "rötägg");});
test("röva -> röv", function() {deepEqual( Stem("röva"), "röv");});
test("s -> s", function() {deepEqual( Stem("s"), "s");});
test("sa -> sa", function() {deepEqual( Stem("sa"), "sa");});
test("saa -> saa", function() {deepEqual( Stem("saa"), "saa");});
test("sabbat -> sabb", function() {deepEqual( Stem("sabbat"), "sabb");});
test("sabbatsfärd -> sabbatsfärd", function() {deepEqual( Stem("sabbatsfärd"), "sabbatsfärd");});
test("sabina -> sabin", function() {deepEqual( Stem("sabina"), "sabin");});
test("sabinas -> sabin", function() {deepEqual( Stem("sabinas"), "sabin");});
test("sabiuas -> sabiu", function() {deepEqual( Stem("sabiuas"), "sabiu");});
test("sablar -> sabl", function() {deepEqual( Stem("sablar"), "sabl");});
test("sack -> sack", function() {deepEqual( Stem("sack"), "sack");});
test("sadan -> sadan", function() {deepEqual( Stem("sadan"), "sadan");});
test("sadana -> sadan", function() {deepEqual( Stem("sadana"), "sadan");});
test("sadant -> sadant", function() {deepEqual( Stem("sadant"), "sadant");});
test("sadc -> sadc", function() {deepEqual( Stem("sadc"), "sadc");});
test("sade -> sad", function() {deepEqual( Stem("sade"), "sad");});
test("sades -> sad", function() {deepEqual( Stem("sades"), "sad");});
test("saft -> saft", function() {deepEqual( Stem("saft"), "saft");});
test("saftade -> saft", function() {deepEqual( Stem("saftade"), "saft");});
test("saftig -> saft", function() {deepEqual( Stem("saftig"), "saft");});
test("saftiga -> saft", function() {deepEqual( Stem("saftiga"), "saft");});
test("saftigt -> saft", function() {deepEqual( Stem("saftigt"), "saft");});
test("sag -> sag", function() {deepEqual( Stem("sag"), "sag");});
test("saga -> sag", function() {deepEqual( Stem("saga"), "sag");});
test("sagan -> sagan", function() {deepEqual( Stem("sagan"), "sagan");});
test("sagans -> sagan", function() {deepEqual( Stem("sagans"), "sagan");});
test("sagbok -> sagbok", function() {deepEqual( Stem("sagbok"), "sagbok");});
test("sagboken -> sagbok", function() {deepEqual( Stem("sagboken"), "sagbok");});
test("sagdt -> sagd", function() {deepEqual( Stem("sagdt"), "sagd");});
test("sage -> sag", function() {deepEqual( Stem("sage"), "sag");});
test("sager -> sag", function() {deepEqual( Stem("sager"), "sag");});
test("sagogången -> sagogång", function() {deepEqual( Stem("sagogången"), "sagogång");});
test("sagokungen -> sagokung", function() {deepEqual( Stem("sagokungen"), "sagokung");});
test("sagolika -> sagolik", function() {deepEqual( Stem("sagolika"), "sagolik");});
test("sagolikt -> sagolik", function() {deepEqual( Stem("sagolikt"), "sagolik");});
test("sagoprins -> sagoprin", function() {deepEqual( Stem("sagoprins"), "sagoprin");});
test("sagor -> sag", function() {deepEqual( Stem("sagor"), "sag");});
test("sagorna -> sag", function() {deepEqual( Stem("sagorna"), "sag");});
test("sagoslott -> sagoslot", function() {deepEqual( Stem("sagoslott"), "sagoslot");});
test("sagotiden -> sagotid", function() {deepEqual( Stem("sagotiden"), "sagotid");});
test("sagspanen -> sagspan", function() {deepEqual( Stem("sagspanen"), "sagspan");});
test("sagt -> sagt", function() {deepEqual( Stem("sagt"), "sagt");});
test("sak -> sak", function() {deepEqual( Stem("sak"), "sak");});
test("sakar -> sak", function() {deepEqual( Stem("sakar"), "sak");});
test("saken -> sak", function() {deepEqual( Stem("saken"), "sak");});
test("sakens -> sak", function() {deepEqual( Stem("sakens"), "sak");});
test("saker -> sak", function() {deepEqual( Stem("saker"), "sak");});
test("sakerna -> sak", function() {deepEqual( Stem("sakerna"), "sak");});
test("sakernas -> sak", function() {deepEqual( Stem("sakernas"), "sak");});
test("sakert -> sakert", function() {deepEqual( Stem("sakert"), "sakert");});
test("sakligt -> sak", function() {deepEqual( Stem("sakligt"), "sak");});
test("sakna -> sakn", function() {deepEqual( Stem("sakna"), "sakn");});
test("saknad -> sakn", function() {deepEqual( Stem("saknad"), "sakn");});
test("saknade -> sakn", function() {deepEqual( Stem("saknade"), "sakn");});
test("saknaden -> saknad", function() {deepEqual( Stem("saknaden"), "saknad");});
test("saknades -> sakn", function() {deepEqual( Stem("saknades"), "sakn");});
test("saknar -> sakn", function() {deepEqual( Stem("saknar"), "sakn");});
test("saknas -> sakn", function() {deepEqual( Stem("saknas"), "sakn");});
test("saknat -> sakn", function() {deepEqual( Stem("saknat"), "sakn");});
test("sakramenskade -> sakramensk", function() {deepEqual( Stem("sakramenskade"), "sakramensk");});
test("sakrament -> sakrament", function() {deepEqual( Stem("sakrament"), "sakrament");});
test("sakristian -> sakristian", function() {deepEqual( Stem("sakristian"), "sakristian");});
test("sakristians -> sakristian", function() {deepEqual( Stem("sakristians"), "sakristian");});
test("sakta -> sakt", function() {deepEqual( Stem("sakta"), "sakt");});
test("saktade -> sakt", function() {deepEqual( Stem("saktade"), "sakt");});
test("saktar -> sakt", function() {deepEqual( Stem("saktar"), "sakt");});
test("saktare -> sakt", function() {deepEqual( Stem("saktare"), "sakt");});
test("saktat -> sakt", function() {deepEqual( Stem("saktat"), "sakt");});
test("saktmod -> saktmod", function() {deepEqual( Stem("saktmod"), "saktmod");});
test("saktmodig -> saktmod", function() {deepEqual( Stem("saktmodig"), "saktmod");});
test("saktmodigt -> saktmod", function() {deepEqual( Stem("saktmodigt"), "saktmod");});
test("sal -> sal", function() {deepEqual( Stem("sal"), "sal");});
test("salcional -> salcional", function() {deepEqual( Stem("salcional"), "salcional");});
test("salen -> sal", function() {deepEqual( Stem("salen"), "sal");});
test("salens -> sal", function() {deepEqual( Stem("salens"), "sal");});
test("salig -> sal", function() {deepEqual( Stem("salig"), "sal");});
test("saliga -> sal", function() {deepEqual( Stem("saliga"), "sal");});
test("salighet -> sal", function() {deepEqual( Stem("salighet"), "sal");});
test("saligheten -> sal", function() {deepEqual( Stem("saligheten"), "sal");});
test("saligheters -> saligheter", function() {deepEqual( Stem("saligheters"), "saligheter");});
test("saligt -> sal", function() {deepEqual( Stem("saligt"), "sal");});
test("saliven -> saliv", function() {deepEqual( Stem("saliven"), "saliv");});
test("sallan -> sallan", function() {deepEqual( Stem("sallan"), "sallan");});
test("sally -> sally", function() {deepEqual( Stem("sally"), "sally");});
test("sallys -> sally", function() {deepEqual( Stem("sallys"), "sally");});
test("saln -> saln", function() {deepEqual( Stem("saln"), "saln");});
test("salomo -> salomo", function() {deepEqual( Stem("salomo"), "salomo");});
test("salomos -> salomo", function() {deepEqual( Stem("salomos"), "salomo");});
test("salong -> salong", function() {deepEqual( Stem("salong"), "salong");});
test("salongen -> salong", function() {deepEqual( Stem("salongen"), "salong");});
test("salongsbordet -> salongsbordet", function() {deepEqual( Stem("salongsbordet"), "salongsbordet");});
test("salsbordet -> salsbordet", function() {deepEqual( Stem("salsbordet"), "salsbordet");});
test("salsdörren -> salsdörr", function() {deepEqual( Stem("salsdörren"), "salsdörr");});
test("salsfönstret -> salsfönstret", function() {deepEqual( Stem("salsfönstret"), "salsfönstret");});
test("salsgolvet -> salsgolvet", function() {deepEqual( Stem("salsgolvet"), "salsgolvet");});
test("salt -> salt", function() {deepEqual( Stem("salt"), "salt");});
test("salta -> salt", function() {deepEqual( Stem("salta"), "salt");});
test("saltet -> saltet", function() {deepEqual( Stem("saltet"), "saltet");});
test("saltkorn -> saltkorn", function() {deepEqual( Stem("saltkorn"), "saltkorn");});
test("saltvatten -> saltvat", function() {deepEqual( Stem("saltvatten"), "saltvat");});
test("salvan -> salvan", function() {deepEqual( Stem("salvan"), "salvan");});
test("sam -> sam", function() {deepEqual( Stem("sam"), "sam");});
test("samband -> samband", function() {deepEqual( Stem("samband"), "samband");});
test("samfund -> samfund", function() {deepEqual( Stem("samfund"), "samfund");});
test("samfundsförhållande -> samfundsförhåll", function() {deepEqual( Stem("samfundsförhållande"), "samfundsförhåll");});
test("samhet -> sam", function() {deepEqual( Stem("samhet"), "sam");});
test("samheten -> sam", function() {deepEqual( Stem("samheten"), "sam");});
test("samhälle -> samhäll", function() {deepEqual( Stem("samhälle"), "samhäll");});
test("samhället -> samhället", function() {deepEqual( Stem("samhället"), "samhället");});
test("samhällslivet -> samhällslivet", function() {deepEqual( Stem("samhällslivet"), "samhällslivet");});
test("samhällsorganisationens -> samhällsorganisation", function() {deepEqual( Stem("samhällsorganisationens"), "samhällsorganisation");});
test("samhällsvetenskapen -> samhällsvetenskap", function() {deepEqual( Stem("samhällsvetenskapen"), "samhällsvetenskap");});
test("samhörighet -> samhör", function() {deepEqual( Stem("samhörighet"), "samhör");});
test("samklang -> samklang", function() {deepEqual( Stem("samklang"), "samklang");});
test("samkväm -> samkväm", function() {deepEqual( Stem("samkväm"), "samkväm");});
test("samla -> saml", function() {deepEqual( Stem("samla"), "saml");});
test("samlad -> saml", function() {deepEqual( Stem("samlad"), "saml");});
test("samlade -> saml", function() {deepEqual( Stem("samlade"), "saml");});
test("samlades -> saml", function() {deepEqual( Stem("samlades"), "saml");});
test("samlag -> samlag", function() {deepEqual( Stem("samlag"), "samlag");});
test("samlalet -> samlalet", function() {deepEqual( Stem("samlalet"), "samlalet");});
test("samlar -> saml", function() {deepEqual( Stem("samlar"), "saml");});
test("samlare -> saml", function() {deepEqual( Stem("samlare"), "saml");});
test("samlas -> saml", function() {deepEqual( Stem("samlas"), "saml");});
test("samlat -> saml", function() {deepEqual( Stem("samlat"), "saml");});
test("samlats -> samlat", function() {deepEqual( Stem("samlats"), "samlat");});
test("samling -> samling", function() {deepEqual( Stem("samling"), "samling");});
test("samlingen -> samling", function() {deepEqual( Stem("samlingen"), "samling");});
test("samma -> samm", function() {deepEqual( Stem("samma"), "samm");});
test("samman -> samman", function() {deepEqual( Stem("samman"), "samman");});
test("sammanbinda -> sammanbind", function() {deepEqual( Stem("sammanbinda"), "sammanbind");});
test("sammanbinder -> sammanbind", function() {deepEqual( Stem("sammanbinder"), "sammanbind");});
test("sammanbitet -> sammanbitet", function() {deepEqual( Stem("sammanbitet"), "sammanbitet");});
test("sammanbitna -> sammanbitn", function() {deepEqual( Stem("sammanbitna"), "sammanbitn");});
test("sammanblandat -> sammanbland", function() {deepEqual( Stem("sammanblandat"), "sammanbland");});
test("sammanbrott -> sammanbrot", function() {deepEqual( Stem("sammanbrott"), "sammanbrot");});
test("sammandragna -> sammandragn", function() {deepEqual( Stem("sammandragna"), "sammandragn");});
test("sammandragning -> sammandragning", function() {deepEqual( Stem("sammandragning"), "sammandragning");});
test("sammandrog -> sammandrog", function() {deepEqual( Stem("sammandrog"), "sammandrog");});
test("sammanfattningen -> sammanfattning", function() {deepEqual( Stem("sammanfattningen"), "sammanfattning");});
test("sammanflöt -> sammanflöt", function() {deepEqual( Stem("sammanflöt"), "sammanflöt");});
test("sammanföll -> sammanföll", function() {deepEqual( Stem("sammanföll"), "sammanföll");});
test("sammanhang -> sammanhang", function() {deepEqual( Stem("sammanhang"), "sammanhang");});
test("sammanhanget -> sammanhanget", function() {deepEqual( Stem("sammanhanget"), "sammanhanget");});
test("sammanhängde -> sammanhäng", function() {deepEqual( Stem("sammanhängde"), "sammanhäng");});
test("sammanhölle -> sammanhöll", function() {deepEqual( Stem("sammanhölle"), "sammanhöll");});
test("sammanklistrade -> sammanklistr", function() {deepEqual( Stem("sammanklistrade"), "sammanklistr");});
test("sammanknipna -> sammanknipn", function() {deepEqual( Stem("sammanknipna"), "sammanknipn");});
test("sammanknuten -> sammanknut", function() {deepEqual( Stem("sammanknuten"), "sammanknut");});
test("sammanknycklat -> sammanknyckl", function() {deepEqual( Stem("sammanknycklat"), "sammanknyckl");});
test("sammanknäppta -> sammanknäppt", function() {deepEqual( Stem("sammanknäppta"), "sammanknäppt");});
test("sammankom -> sammankom", function() {deepEqual( Stem("sammankom"), "sammankom");});
test("sammankomma -> sammankomm", function() {deepEqual( Stem("sammankomma"), "sammankomm");});
test("sammankomst -> sammankomst", function() {deepEqual( Stem("sammankomst"), "sammankomst");});
test("sammankomster -> sammankomst", function() {deepEqual( Stem("sammankomster"), "sammankomst");});
test("sammanlagt -> sammanlag", function() {deepEqual( Stem("sammanlagt"), "sammanlag");});
test("sammanlevnad -> sammanlevn", function() {deepEqual( Stem("sammanlevnad"), "sammanlevn");});
test("sammanlänka -> sammanlänk", function() {deepEqual( Stem("sammanlänka"), "sammanlänk");});
test("sammanpressad -> sammanpress", function() {deepEqual( Stem("sammanpressad"), "sammanpress");});
test("sammanpressade -> sammanpress", function() {deepEqual( Stem("sammanpressade"), "sammanpress");});
test("sammanpressades -> sammanpress", function() {deepEqual( Stem("sammanpressades"), "sammanpress");});
test("sammanrafsat -> sammanrafs", function() {deepEqual( Stem("sammanrafsat"), "sammanrafs");});
test("sammans -> samman", function() {deepEqual( Stem("sammans"), "samman");});
test("sammanslagna -> sammanslagn", function() {deepEqual( Stem("sammanslagna"), "sammanslagn");});
test("sammanslingrade -> sammanslingr", function() {deepEqual( Stem("sammanslingrade"), "sammanslingr");});
test("sammansluten -> sammanslut", function() {deepEqual( Stem("sammansluten"), "sammanslut");});
test("sammanslutning -> sammanslutning", function() {deepEqual( Stem("sammanslutning"), "sammanslutning");});
test("sammanslå -> sammanslå", function() {deepEqual( Stem("sammanslå"), "sammanslå");});
test("sammansmälte -> sammansmält", function() {deepEqual( Stem("sammansmälte"), "sammansmält");});
test("sammansmälter -> sammansmält", function() {deepEqual( Stem("sammansmälter"), "sammansmält");});
test("sammansnörd -> sammansnörd", function() {deepEqual( Stem("sammansnörd"), "sammansnörd");});
test("sammanstämma -> sammanstämm", function() {deepEqual( Stem("sammanstämma"), "sammanstämm");});
test("sammansättning -> sammansättning", function() {deepEqual( Stem("sammansättning"), "sammansättning");});
test("sammansättningar -> sammansättning", function() {deepEqual( Stem("sammansättningar"), "sammansättning");});
test("sammantorkad -> sammantork", function() {deepEqual( Stem("sammantorkad"), "sammantork");});
test("sammantrasslat -> sammantrassl", function() {deepEqual( Stem("sammantrasslat"), "sammantrassl");});
test("sammantryckt -> sammantryck", function() {deepEqual( Stem("sammantryckt"), "sammantryck");});
test("sammantryckta -> sammantryck", function() {deepEqual( Stem("sammantryckta"), "sammantryck");});
test("sammanträde -> sammanträd", function() {deepEqual( Stem("sammanträde"), "sammanträd");});
test("sammanträden -> sammanträd", function() {deepEqual( Stem("sammanträden"), "sammanträd");});
test("sammanträffande -> sammanträff", function() {deepEqual( Stem("sammanträffande"), "sammanträff");});
test("sammanträtt -> sammanträt", function() {deepEqual( Stem("sammanträtt"), "sammanträt");});
test("sammanvaro -> sammanvaro", function() {deepEqual( Stem("sammanvaro"), "sammanvaro");});
test("samme -> samm", function() {deepEqual( Stem("samme"), "samm");});
test("sammet -> sammet", function() {deepEqual( Stem("sammet"), "sammet");});
test("sammetsblad -> sammetsbl", function() {deepEqual( Stem("sammetsblad"), "sammetsbl");});
test("sammetsblus -> sammetsblus", function() {deepEqual( Stem("sammetsblus"), "sammetsblus");});
test("sammetskind -> sammetskind", function() {deepEqual( Stem("sammetskind"), "sammetskind");});
test("sammetskorsett -> sammetskorset", function() {deepEqual( Stem("sammetskorsett"), "sammetskorset");});
test("sammetslen -> sammetsl", function() {deepEqual( Stem("sammetslen"), "sammetsl");});
test("sammetslena -> sammetslen", function() {deepEqual( Stem("sammetslena"), "sammetslen");});
test("sammetslent -> sammetslent", function() {deepEqual( Stem("sammetslent"), "sammetslent");});
test("sammetsmjukhet -> sammetsmjuk", function() {deepEqual( Stem("sammetsmjukhet"), "sammetsmjuk");});
test("samråd -> samråd", function() {deepEqual( Stem("samråd"), "samråd");});
test("samråda -> samråd", function() {deepEqual( Stem("samråda"), "samråd");});
test("sams -> sam", function() {deepEqual( Stem("sams"), "sam");});
test("samsas -> sams", function() {deepEqual( Stem("samsas"), "sams");});
test("samspråk -> samspråk", function() {deepEqual( Stem("samspråk"), "samspråk");});
test("samspråkat -> samspråk", function() {deepEqual( Stem("samspråkat"), "samspråk");});
test("samt -> samt", function() {deepEqual( Stem("samt"), "samt");});
test("samtal -> samtal", function() {deepEqual( Stem("samtal"), "samtal");});
test("samtalade -> samtal", function() {deepEqual( Stem("samtalade"), "samtal");});
test("samtalet -> samtalet", function() {deepEqual( Stem("samtalet"), "samtalet");});
test("samtalets -> samtalet", function() {deepEqual( Stem("samtalets"), "samtalet");});
test("samtalsform -> samtalsform", function() {deepEqual( Stem("samtalsform"), "samtalsform");});
test("samtalsämnet -> samtalsämnet", function() {deepEqual( Stem("samtalsämnet"), "samtalsämnet");});
test("samtida -> samtid", function() {deepEqual( Stem("samtida"), "samtid");});
test("samtidigt -> samtid", function() {deepEqual( Stem("samtidigt"), "samtid");});
test("samtliga -> samt", function() {deepEqual( Stem("samtliga"), "samt");});
test("samtycke -> samtyck", function() {deepEqual( Stem("samtycke"), "samtyck");});
test("samtycker -> samtyck", function() {deepEqual( Stem("samtycker"), "samtyck");});
test("samtyckt -> samtyck", function() {deepEqual( Stem("samtyckt"), "samtyck");});
test("samuels -> samuel", function() {deepEqual( Stem("samuels"), "samuel");});
test("samuelsgatan -> samuelsgatan", function() {deepEqual( Stem("samuelsgatan"), "samuelsgatan");});
test("samvaro -> samvaro", function() {deepEqual( Stem("samvaro"), "samvaro");});
test("samvete -> samvet", function() {deepEqual( Stem("samvete"), "samvet");});
test("samveten -> samvet", function() {deepEqual( Stem("samveten"), "samvet");});
test("samvetet -> samvetet", function() {deepEqual( Stem("samvetet"), "samvetet");});
test("samvetets -> samvetet", function() {deepEqual( Stem("samvetets"), "samvetet");});
test("samvetsagg -> samvetsagg", function() {deepEqual( Stem("samvetsagg"), "samvetsagg");});
test("samvetsgrann -> samvetsgran", function() {deepEqual( Stem("samvetsgrann"), "samvetsgran");});
test("samvetsgrant -> samvetsgrant", function() {deepEqual( Stem("samvetsgrant"), "samvetsgrant");});
test("samvetskval -> samvetskval", function() {deepEqual( Stem("samvetskval"), "samvetskval");});
test("samvetslösa -> samvetslös", function() {deepEqual( Stem("samvetslösa"), "samvetslös");});
test("samvetsqval -> samvetsqval", function() {deepEqual( Stem("samvetsqval"), "samvetsqval");});
test("samvetssak -> samvetssak", function() {deepEqual( Stem("samvetssak"), "samvetssak");});
test("san -> san", function() {deepEqual( Stem("san"), "san");});
test("sanatoriet -> sanatoriet", function() {deepEqual( Stem("sanatoriet"), "sanatoriet");});
test("sanatorium -> sanatorium", function() {deepEqual( Stem("sanatorium"), "sanatorium");});
test("sand -> sand", function() {deepEqual( Stem("sand"), "sand");});
test("sandbottnen -> sandbottn", function() {deepEqual( Stem("sandbottnen"), "sandbottn");});
test("sande -> sand", function() {deepEqual( Stem("sande"), "sand");});
test("sanden -> sand", function() {deepEqual( Stem("sanden"), "sand");});
test("sandgangen -> sandgang", function() {deepEqual( Stem("sandgangen"), "sandgang");});
test("sandgången -> sandgång", function() {deepEqual( Stem("sandgången"), "sandgång");});
test("sandhogen -> sandhog", function() {deepEqual( Stem("sandhogen"), "sandhog");});
test("sandkornen -> sandkorn", function() {deepEqual( Stem("sandkornen"), "sandkorn");});
test("sandplan -> sandplan", function() {deepEqual( Stem("sandplan"), "sandplan");});
test("sandstranden -> sandstr", function() {deepEqual( Stem("sandstranden"), "sandstr");});
test("sang -> sang", function() {deepEqual( Stem("sang"), "sang");});
test("sangen -> sang", function() {deepEqual( Stem("sangen"), "sang");});
test("sanger -> sang", function() {deepEqual( Stem("sanger"), "sang");});
test("sangren -> sangr", function() {deepEqual( Stem("sangren"), "sangr");});
test("sankta -> sank", function() {deepEqual( Stem("sankta"), "sank");});
test("sankte -> sank", function() {deepEqual( Stem("sankte"), "sank");});
test("sann -> sann", function() {deepEqual( Stem("sann"), "sann");});
test("sanna -> sann", function() {deepEqual( Stem("sanna"), "sann");});
test("sannerligen -> sanner", function() {deepEqual( Stem("sannerligen"), "sanner");});
test("sannfärdeligen -> sannfärde", function() {deepEqual( Stem("sannfärdeligen"), "sannfärde");});
test("sannfärdigheten -> sannfärd", function() {deepEqual( Stem("sannfärdigheten"), "sannfärd");});
test("sanning -> sanning", function() {deepEqual( Stem("sanning"), "sanning");});
test("sanningen -> sanning", function() {deepEqual( Stem("sanningen"), "sanning");});
test("sanningens -> sanning", function() {deepEqual( Stem("sanningens"), "sanning");});
test("sanningsdoser -> sanningsdos", function() {deepEqual( Stem("sanningsdoser"), "sanningsdos");});
test("sanningsenligt -> sanningsen", function() {deepEqual( Stem("sanningsenligt"), "sanningsen");});
test("sanningsjakt -> sanningsjak", function() {deepEqual( Stem("sanningsjakt"), "sanningsjak");});
test("sanningsmängd -> sanningsmäng", function() {deepEqual( Stem("sanningsmängd"), "sanningsmäng");});
test("sannolik -> sannolik", function() {deepEqual( Stem("sannolik"), "sannolik");});
test("sannolikhet -> sannolik", function() {deepEqual( Stem("sannolikhet"), "sannolik");});
test("sannolikheten -> sannolik", function() {deepEqual( Stem("sannolikheten"), "sannolik");});
test("sannolikt -> sannolik", function() {deepEqual( Stem("sannolikt"), "sannolik");});
test("sannskyldiga -> sannskyld", function() {deepEqual( Stem("sannskyldiga"), "sannskyld");});
test("sans -> san", function() {deepEqual( Stem("sans"), "san");});
test("sansa -> sans", function() {deepEqual( Stem("sansa"), "sans");});
test("sanslöse -> sanslös", function() {deepEqual( Stem("sanslöse"), "sanslös");});
test("sanslöshet -> sanslös", function() {deepEqual( Stem("sanslöshet"), "sanslös");});
test("sansning -> sansning", function() {deepEqual( Stem("sansning"), "sansning");});
test("sansningen -> sansning", function() {deepEqual( Stem("sansningen"), "sansning");});
test("sant -> sant", function() {deepEqual( Stem("sant"), "sant");});
test("sar -> sar", function() {deepEqual( Stem("sar"), "sar");});
test("sarade -> sar", function() {deepEqual( Stem("sarade"), "sar");});
test("sardiner -> sardin", function() {deepEqual( Stem("sardiner"), "sardin");});
test("sardoniskt -> sardonisk", function() {deepEqual( Stem("sardoniskt"), "sardonisk");});
test("sargad -> sarg", function() {deepEqual( Stem("sargad"), "sarg");});
test("sarkasmer -> sarkasm", function() {deepEqual( Stem("sarkasmer"), "sarkasm");});
test("sarkofag -> sarkofag", function() {deepEqual( Stem("sarkofag"), "sarkofag");});
test("sarkom -> sarkom", function() {deepEqual( Stem("sarkom"), "sarkom");});
test("saron -> saron", function() {deepEqual( Stem("saron"), "saron");});
test("sarskilt -> sarskilt", function() {deepEqual( Stem("sarskilt"), "sarskilt");});
test("sasom -> sasom", function() {deepEqual( Stem("sasom"), "sasom");});
test("satan -> satan", function() {deepEqual( Stem("satan"), "satan");});
test("sataniskt -> satanisk", function() {deepEqual( Stem("sataniskt"), "satanisk");});
test("satans -> satan", function() {deepEqual( Stem("satans"), "satan");});
test("satar -> sat", function() {deepEqual( Stem("satar"), "sat");});
test("satinturc -> satinturc", function() {deepEqual( Stem("satinturc"), "satinturc");});
test("satinturcklädningen -> satinturcklädning", function() {deepEqual( Stem("satinturcklädningen"), "satinturcklädning");});
test("satirisk -> satirisk", function() {deepEqual( Stem("satirisk"), "satirisk");});
test("sats -> sat", function() {deepEqual( Stem("sats"), "sat");});
test("satt -> satt", function() {deepEqual( Stem("satt"), "satt");});
test("satta -> satt", function() {deepEqual( Stem("satta"), "satt");});
test("satte -> satt", function() {deepEqual( Stem("satte"), "satt");});
test("satureja -> saturej", function() {deepEqual( Stem("satureja"), "saturej");});
test("satyrgrin -> satyrgrin", function() {deepEqual( Stem("satyrgrin"), "satyrgrin");});
test("saviga -> sav", function() {deepEqual( Stem("saviga"), "sav");});
test("sax -> sax", function() {deepEqual( Stem("sax"), "sax");});
test("saxen -> sax", function() {deepEqual( Stem("saxen"), "sax");});
test("saxofon -> saxofon", function() {deepEqual( Stem("saxofon"), "saxofon");});
test("sc -> sc", function() {deepEqual( Stem("sc"), "sc");});
test("scdan -> scdan", function() {deepEqual( Stem("scdan"), "scdan");});
test("scen -> scen", function() {deepEqual( Stem("scen"), "scen");});
test("scenen -> scen", function() {deepEqual( Stem("scenen"), "scen");});
test("scener -> scen", function() {deepEqual( Stem("scener"), "scen");});
test("scenerier -> sceneri", function() {deepEqual( Stem("scenerier"), "sceneri");});
test("scenerna -> scen", function() {deepEqual( Stem("scenerna"), "scen");});
test("scgra -> scgra", function() {deepEqual( Stem("scgra"), "scgra");});
test("sch -> sch", function() {deepEqual( Stem("sch"), "sch");});
test("schabrak -> schabrak", function() {deepEqual( Stem("schabrak"), "schabrak");});
test("schack -> schack", function() {deepEqual( Stem("schack"), "schack");});
test("schackbrädet -> schackbrädet", function() {deepEqual( Stem("schackbrädet"), "schackbrädet");});
test("schackproblem -> schackproblem", function() {deepEqual( Stem("schackproblem"), "schackproblem");});
test("schackspelarens -> schackspel", function() {deepEqual( Stem("schackspelarens"), "schackspel");});
test("schackspirs -> schackspir", function() {deepEqual( Stem("schackspirs"), "schackspir");});
test("schaggsoffan -> schaggsoffan", function() {deepEqual( Stem("schaggsoffan"), "schaggsoffan");});
test("schaggstolar -> schaggstol", function() {deepEqual( Stem("schaggstolar"), "schaggstol");});
test("schakt -> schakt", function() {deepEqual( Stem("schakt"), "schakt");});
test("schal -> schal", function() {deepEqual( Stem("schal"), "schal");});
test("schalar -> schal", function() {deepEqual( Stem("schalar"), "schal");});
test("schalarne -> schal", function() {deepEqual( Stem("schalarne"), "schal");});
test("schalen -> schal", function() {deepEqual( Stem("schalen"), "schal");});
test("schalett -> schalet", function() {deepEqual( Stem("schalett"), "schalet");});
test("schaletten -> schalet", function() {deepEqual( Stem("schaletten"), "schalet");});
test("schaletterna -> schalet", function() {deepEqual( Stem("schaletterna"), "schalet");});
test("scharlakanslängtan -> scharlakanslängtan", function() {deepEqual( Stem("scharlakanslängtan"), "scharlakanslängtan");});
test("schartaus -> schartaus", function() {deepEqual( Stem("schartaus"), "schartaus");});
test("schasa -> schas", function() {deepEqual( Stem("schasa"), "schas");});
test("schasar -> schas", function() {deepEqual( Stem("schasar"), "schas");});
test("schatterat -> schatter", function() {deepEqual( Stem("schatterat"), "schatter");});
test("schatull -> schatull", function() {deepEqual( Stem("schatull"), "schatull");});
test("schavott -> schavot", function() {deepEqual( Stem("schavott"), "schavot");});
test("scheeles -> scheel", function() {deepEqual( Stem("scheeles"), "scheel");});
test("scheurer -> scheur", function() {deepEqual( Stem("scheurer"), "scheur");});
test("schism -> schism", function() {deepEqual( Stem("schism"), "schism");});
test("schopenhauer -> schopenhau", function() {deepEqual( Stem("schopenhauer"), "schopenhau");});
test("schrader -> schrad", function() {deepEqual( Stem("schrader"), "schrad");});
test("schweitzeri -> schweitzeri", function() {deepEqual( Stem("schweitzeri"), "schweitzeri");});
test("schweiz -> schweiz", function() {deepEqual( Stem("schweiz"), "schweiz");});
test("schweizerierna -> schweizeri", function() {deepEqual( Stem("schweizerierna"), "schweizeri");});
test("schäs -> schäs", function() {deepEqual( Stem("schäs"), "schäs");});
test("schäskärran -> schäskärran", function() {deepEqual( Stem("schäskärran"), "schäskärran");});
test("schäslong -> schäslong", function() {deepEqual( Stem("schäslong"), "schäslong");});
test("schäslongen -> schäslong", function() {deepEqual( Stem("schäslongen"), "schäslong");});
test("scr -> scr", function() {deepEqual( Stem("scr"), "scr");});
test("sd -> sd", function() {deepEqual( Stem("sd"), "sd");});
test("sdong -> sdong", function() {deepEqual( Stem("sdong"), "sdong");});
test("se -> se", function() {deepEqual( Stem("se"), "se");});
test("sedan -> sedan", function() {deepEqual( Stem("sedan"), "sedan");});
test("sedd -> sedd", function() {deepEqual( Stem("sedd"), "sedd");});
test("sedel -> sedel", function() {deepEqual( Stem("sedel"), "sedel");});
test("sedelbok -> sedelbok", function() {deepEqual( Stem("sedelbok"), "sedelbok");});
test("sedeln -> sedeln", function() {deepEqual( Stem("sedeln"), "sedeln");});
test("seden -> sed", function() {deepEqual( Stem("seden"), "sed");});
test("seder -> sed", function() {deepEqual( Stem("seder"), "sed");});
test("sedermera -> sedermer", function() {deepEqual( Stem("sedermera"), "sedermer");});
test("sedesamt -> sedesamt", function() {deepEqual( Stem("sedesamt"), "sedesamt");});
test("sediga -> sed", function() {deepEqual( Stem("sediga"), "sed");});
test("sedigt -> sed", function() {deepEqual( Stem("sedigt"), "sed");});
test("sedlar -> sedl", function() {deepEqual( Stem("sedlar"), "sedl");});
test("sedlig -> sed", function() {deepEqual( Stem("sedlig"), "sed");});
test("sedliga -> sed", function() {deepEqual( Stem("sedliga"), "sed");});
test("sedligaste -> sed", function() {deepEqual( Stem("sedligaste"), "sed");});
test("sedlighet -> sed", function() {deepEqual( Stem("sedlighet"), "sed");});
test("sedlighetsbrott -> sedlighetsbrot", function() {deepEqual( Stem("sedlighetsbrott"), "sedlighetsbrot");});
test("sedligt -> sed", function() {deepEqual( Stem("sedligt"), "sed");});
test("sedvanligt -> sedvan", function() {deepEqual( Stem("sedvanligt"), "sedvan");});
test("seende -> seend", function() {deepEqual( Stem("seende"), "seend");});
test("sega -> seg", function() {deepEqual( Stem("sega"), "seg");});
test("segel -> segel", function() {deepEqual( Stem("segel"), "segel");});
test("segelbåt -> segelbåt", function() {deepEqual( Stem("segelbåt"), "segelbåt");});
test("segelbåten -> segelbåt", function() {deepEqual( Stem("segelbåten"), "segelbåt");});
test("segelduksbyxor -> segelduksbyx", function() {deepEqual( Stem("segelduksbyxor"), "segelduksbyx");});
test("segelfärdig -> segelfärd", function() {deepEqual( Stem("segelfärdig"), "segelfärd");});
test("segelfärdiga -> segelfärd", function() {deepEqual( Stem("segelfärdiga"), "segelfärd");});
test("segellapparne -> segellapp", function() {deepEqual( Stem("segellapparne"), "segellapp");});
test("segelleden -> segelled", function() {deepEqual( Stem("segelleden"), "segelled");});
test("segeltur -> segeltur", function() {deepEqual( Stem("segeltur"), "segeltur");});
test("segeltältet -> segeltältet", function() {deepEqual( Stem("segeltältet"), "segeltältet");});
test("seger -> seg", function() {deepEqual( Stem("seger"), "seg");});
test("segerkraft -> segerkraft", function() {deepEqual( Stem("segerkraft"), "segerkraft");});
test("segerkrans -> segerkran", function() {deepEqual( Stem("segerkrans"), "segerkran");});
test("segerstolt -> segerstolt", function() {deepEqual( Stem("segerstolt"), "segerstolt");});
test("seghet -> seg", function() {deepEqual( Stem("seghet"), "seg");});
test("segla -> segl", function() {deepEqual( Stem("segla"), "segl");});
test("seglade -> segl", function() {deepEqual( Stem("seglade"), "segl");});
test("seglar -> segl", function() {deepEqual( Stem("seglar"), "segl");});
test("seglare -> segl", function() {deepEqual( Stem("seglare"), "segl");});
test("seglarn -> seglarn", function() {deepEqual( Stem("seglarn"), "seglarn");});
test("seglat -> segl", function() {deepEqual( Stem("seglat"), "segl");});
test("seglen -> segl", function() {deepEqual( Stem("seglen"), "segl");});
test("seglet -> seglet", function() {deepEqual( Stem("seglet"), "seglet");});
test("segling -> segling", function() {deepEqual( Stem("segling"), "segling");});
test("segra -> segr", function() {deepEqual( Stem("segra"), "segr");});
test("segrade -> segr", function() {deepEqual( Stem("segrade"), "segr");});
test("segrande -> segr", function() {deepEqual( Stem("segrande"), "segr");});
test("segrar -> segr", function() {deepEqual( Stem("segrar"), "segr");});
test("segraren -> segr", function() {deepEqual( Stem("segraren"), "segr");});
test("segrat -> segr", function() {deepEqual( Stem("segrat"), "segr");});
test("sekelslutet -> sekelslutet", function() {deepEqual( Stem("sekelslutet"), "sekelslutet");});
test("sekler -> sekl", function() {deepEqual( Stem("sekler"), "sekl");});
test("seklet -> seklet", function() {deepEqual( Stem("seklet"), "seklet");});
test("seklets -> seklet", function() {deepEqual( Stem("seklets"), "seklet");});
test("sekretären -> sekretär", function() {deepEqual( Stem("sekretären"), "sekretär");});
test("sekter -> sekt", function() {deepEqual( Stem("sekter"), "sekt");});
test("sekterisk -> sekterisk", function() {deepEqual( Stem("sekterisk"), "sekterisk");});
test("sektern -> sekt", function() {deepEqual( Stem("sektern"), "sekt");});
test("sekterns -> sekt", function() {deepEqual( Stem("sekterns"), "sekt");});
test("sekun -> sekun", function() {deepEqual( Stem("sekun"), "sekun");});
test("sekund -> sekund", function() {deepEqual( Stem("sekund"), "sekund");});
test("sekunden -> sekund", function() {deepEqual( Stem("sekunden"), "sekund");});
test("sekunder -> sekund", function() {deepEqual( Stem("sekunder"), "sekund");});
test("sekunderna -> sekund", function() {deepEqual( Stem("sekunderna"), "sekund");});
test("sekunders -> sekunder", function() {deepEqual( Stem("sekunders"), "sekunder");});
test("sekunds -> sekund", function() {deepEqual( Stem("sekunds"), "sekund");});
test("sel -> sel", function() {deepEqual( Stem("sel"), "sel");});
test("seln -> seln", function() {deepEqual( Stem("seln"), "seln");});
test("semesterresor -> semesterres", function() {deepEqual( Stem("semesterresor"), "semesterres");});
test("seminariets -> seminariet", function() {deepEqual( Stem("seminariets"), "seminariet");});
test("semper -> semp", function() {deepEqual( Stem("semper"), "semp");});
test("sen -> sen", function() {deepEqual( Stem("sen"), "sen");});
test("sena -> sen", function() {deepEqual( Stem("sena"), "sen");});
test("senap -> senap", function() {deepEqual( Stem("senap"), "senap");});
test("senare -> sen", function() {deepEqual( Stem("senare"), "sen");});
test("senast -> sen", function() {deepEqual( Stem("senast"), "sen");});
test("senaste -> sen", function() {deepEqual( Stem("senaste"), "sen");});
test("senbösten -> senböst", function() {deepEqual( Stem("senbösten"), "senböst");});
test("sene -> sen", function() {deepEqual( Stem("sene"), "sen");});
test("seneca -> senec", function() {deepEqual( Stem("seneca"), "senec");});
test("senig -> sen", function() {deepEqual( Stem("senig"), "sen");});
test("senior -> seni", function() {deepEqual( Stem("senior"), "seni");});
test("sensation -> sensation", function() {deepEqual( Stem("sensation"), "sensation");});
test("sensationshistoria -> sensationshistori", function() {deepEqual( Stem("sensationshistoria"), "sensationshistori");});
test("sensationsutlovande -> sensationsutlov", function() {deepEqual( Stem("sensationsutlovande"), "sensationsutlov");});
test("sensommardag -> sensommardag", function() {deepEqual( Stem("sensommardag"), "sensommardag");});
test("sensommaren -> sensomm", function() {deepEqual( Stem("sensommaren"), "sensomm");});
test("sensommarmörkrets -> sensommarmörkret", function() {deepEqual( Stem("sensommarmörkrets"), "sensommarmörkret");});
test("sensommarsol -> sensommarsol", function() {deepEqual( Stem("sensommarsol"), "sensommarsol");});
test("sent -> sent", function() {deepEqual( Stem("sent"), "sent");});
test("sentimental -> sentimental", function() {deepEqual( Stem("sentimental"), "sentimental");});
test("sentimentala -> sentimental", function() {deepEqual( Stem("sentimentala"), "sentimental");});
test("sentimentalt -> sentimentalt", function() {deepEqual( Stem("sentimentalt"), "sentimentalt");});
test("september -> septemb", function() {deepEqual( Stem("september"), "septemb");});
test("septemberdag -> septemberdag", function() {deepEqual( Stem("septemberdag"), "septemberdag");});
test("ser -> ser", function() {deepEqual( Stem("ser"), "ser");});
test("sermo -> sermo", function() {deepEqual( Stem("sermo"), "sermo");});
test("servera -> server", function() {deepEqual( Stem("servera"), "server");});
test("serverade -> server", function() {deepEqual( Stem("serverade"), "server");});
test("serverades -> server", function() {deepEqual( Stem("serverades"), "server");});
test("serveringen -> servering", function() {deepEqual( Stem("serveringen"), "servering");});
test("serveringsflickan -> serveringsflickan", function() {deepEqual( Stem("serveringsflickan"), "serveringsflickan");});
test("serveten -> servet", function() {deepEqual( Stem("serveten"), "servet");});
test("servett -> servet", function() {deepEqual( Stem("servett"), "servet");});
test("servetten -> servet", function() {deepEqual( Stem("servetten"), "servet");});
test("servetter -> servet", function() {deepEqual( Stem("servetter"), "servet");});
test("servetterna -> servet", function() {deepEqual( Stem("servetterna"), "servet");});
test("servilt -> servilt", function() {deepEqual( Stem("servilt"), "servilt");});
test("servisen -> servis", function() {deepEqual( Stem("servisen"), "servis");});
test("serviser -> servis", function() {deepEqual( Stem("serviser"), "servis");});
test("ses -> ses", function() {deepEqual( Stem("ses"), "ses");});
test("seså -> seså", function() {deepEqual( Stem("seså"), "seså");});
test("sett -> sett", function() {deepEqual( Stem("sett"), "sett");});
test("seulement -> seulement", function() {deepEqual( Stem("seulement"), "seulement");});
test("sex -> sex", function() {deepEqual( Stem("sex"), "sex");});
test("sexa -> sex", function() {deepEqual( Stem("sexa"), "sex");});
test("sexstyverslant -> sexstyverslant", function() {deepEqual( Stem("sexstyverslant"), "sexstyverslant");});
test("sextiden -> sextid", function() {deepEqual( Stem("sextiden"), "sextid");});
test("sextio -> sextio", function() {deepEqual( Stem("sextio"), "sextio");});
test("sextiosex -> sextiosex", function() {deepEqual( Stem("sextiosex"), "sextiosex");});
test("sexton -> sexton", function() {deepEqual( Stem("sexton"), "sexton");});
test("sextonde -> sextond", function() {deepEqual( Stem("sextonde"), "sextond");});
test("sextonskilling -> sextonskilling", function() {deepEqual( Stem("sextonskilling"), "sextonskilling");});
test("sextonårig -> sextonår", function() {deepEqual( Stem("sextonårig"), "sextonår");});
test("sextonåriga -> sextonår", function() {deepEqual( Stem("sextonåriga"), "sextonår");});
test("sextonårigt -> sextonår", function() {deepEqual( Stem("sextonårigt"), "sextonår");});
test("sf -> sf", function() {deepEqual( Stem("sf"), "sf");});
test("sffälle -> sffäll", function() {deepEqual( Stem("sffälle"), "sffäll");});
test("sfi -> sfi", function() {deepEqual( Stem("sfi"), "sfi");});
test("sfinxens -> sfinx", function() {deepEqual( Stem("sfinxens"), "sfinx");});
test("sfär -> sfär", function() {deepEqual( Stem("sfär"), "sfär");});
test("sfärer -> sfär", function() {deepEqual( Stem("sfärer"), "sfär");});
test("shakespeares -> shakespear", function() {deepEqual( Stem("shakespeares"), "shakespear");});
test("shl -> shl", function() {deepEqual( Stem("shl"), "shl");});
test("shls -> shls", function() {deepEqual( Stem("shls"), "shls");});
test("shlta -> shlta", function() {deepEqual( Stem("shlta"), "shlta");});
test("shod -> shod", function() {deepEqual( Stem("shod"), "shod");});
test("si -> si", function() {deepEqual( Stem("si"), "si");});
test("siade -> siad", function() {deepEqual( Stem("siade"), "siad");});
test("siarskägg -> siarskägg", function() {deepEqual( Stem("siarskägg"), "siarskägg");});
test("sick -> sick", function() {deepEqual( Stem("sick"), "sick");});
test("sicksack -> sicksack", function() {deepEqual( Stem("sicksack"), "sicksack");});
test("sida -> sid", function() {deepEqual( Stem("sida"), "sid");});
test("sidan -> sidan", function() {deepEqual( Stem("sidan"), "sidan");});
test("siden -> sid", function() {deepEqual( Stem("siden"), "sid");});
test("sidenband -> sidenband", function() {deepEqual( Stem("sidenband"), "sidenband");});
test("sidenduk -> sidenduk", function() {deepEqual( Stem("sidenduk"), "sidenduk");});
test("sidenet -> sidenet", function() {deepEqual( Stem("sidenet"), "sidenet");});
test("sidenhatt -> sidenhat", function() {deepEqual( Stem("sidenhatt"), "sidenhat");});
test("sidenkappa -> sidenkapp", function() {deepEqual( Stem("sidenkappa"), "sidenkapp");});
test("sidenkläder -> sidenkläd", function() {deepEqual( Stem("sidenkläder"), "sidenkläd");});
test("sidenklänning -> sidenklänning", function() {deepEqual( Stem("sidenklänning"), "sidenklänning");});
test("sidenknä -> sidenknä", function() {deepEqual( Stem("sidenknä"), "sidenknä");});
test("sidenkofta -> sidenkoft", function() {deepEqual( Stem("sidenkofta"), "sidenkoft");});
test("sidenkramhandlare -> sidenkramhandl", function() {deepEqual( Stem("sidenkramhandlare"), "sidenkramhandl");});
test("sidennattrock -> sidennattrock", function() {deepEqual( Stem("sidennattrock"), "sidennattrock");});
test("sidennäsduk -> sidennäsduk", function() {deepEqual( Stem("sidennäsduk"), "sidennäsduk");});
test("sidenpaletå -> sidenpaletå", function() {deepEqual( Stem("sidenpaletå"), "sidenpaletå");});
test("sidenpäls -> sidenpäl", function() {deepEqual( Stem("sidenpäls"), "sidenpäl");});
test("sidenrock -> sidenrock", function() {deepEqual( Stem("sidenrock"), "sidenrock");});
test("sidenrosett -> sidenroset", function() {deepEqual( Stem("sidenrosett"), "sidenroset");});
test("sidenrosetter -> sidenroset", function() {deepEqual( Stem("sidenrosetter"), "sidenroset");});
test("sidenschal -> sidenschal", function() {deepEqual( Stem("sidenschal"), "sidenschal");});
test("sidentak -> sidentak", function() {deepEqual( Stem("sidentak"), "sidentak");});
test("sidentyger -> sidentyg", function() {deepEqual( Stem("sidentyger"), "sidentyg");});
test("sidentyget -> sidentyget", function() {deepEqual( Stem("sidentyget"), "sidentyget");});
test("sidentäckta -> sidentäck", function() {deepEqual( Stem("sidentäckta"), "sidentäck");});
test("sidlänt -> sidlänt", function() {deepEqual( Stem("sidlänt"), "sidlänt");});
test("sidoblick -> sidoblick", function() {deepEqual( Stem("sidoblick"), "sidoblick");});
test("sidogata -> sidogat", function() {deepEqual( Stem("sidogata"), "sidogat");});
test("sidokammarn -> sidokammarn", function() {deepEqual( Stem("sidokammarn"), "sidokammarn");});
test("sidolinjen -> sidolinj", function() {deepEqual( Stem("sidolinjen"), "sidolinj");});
test("sidor -> sid", function() {deepEqual( Stem("sidor"), "sid");});
test("sidorna -> sid", function() {deepEqual( Stem("sidorna"), "sid");});
test("sidorum -> sidorum", function() {deepEqual( Stem("sidorum"), "sidorum");});
test("sidotankar -> sidotank", function() {deepEqual( Stem("sidotankar"), "sidotank");});
test("sidoväg -> sidoväg", function() {deepEqual( Stem("sidoväg"), "sidoväg");});
test("sidstycket -> sidstycket", function() {deepEqual( Stem("sidstycket"), "sidstycket");});
test("siffror -> siffr", function() {deepEqual( Stem("siffror"), "siffr");});
test("sig -> sig", function() {deepEqual( Stem("sig"), "sig");});
test("sigill -> sigill", function() {deepEqual( Stem("sigill"), "sigill");});
test("sigillet -> sigillet", function() {deepEqual( Stem("sigillet"), "sigillet");});
test("signal -> signal", function() {deepEqual( Stem("signal"), "signal");});
test("signalen -> signal", function() {deepEqual( Stem("signalen"), "signal");});
test("signetring -> signetring", function() {deepEqual( Stem("signetring"), "signetring");});
test("sigra -> sigr", function() {deepEqual( Stem("sigra"), "sigr");});
test("sigretadtillnyfikenhet -> sigretadtillnyfiken", function() {deepEqual( Stem("sigretadtillnyfikenhet"), "sigretadtillnyfiken");});
test("sigte -> sigt", function() {deepEqual( Stem("sigte"), "sigt");});
test("siig -> siig", function() {deepEqual( Stem("siig"), "siig");});
test("siiverklart -> siiverklart", function() {deepEqual( Stem("siiverklart"), "siiverklart");});
test("sikta -> sikt", function() {deepEqual( Stem("sikta"), "sikt");});
test("siktade -> sikt", function() {deepEqual( Stem("siktade"), "sikt");});
test("sikte -> sikt", function() {deepEqual( Stem("sikte"), "sikt");});
test("sikten -> sikt", function() {deepEqual( Stem("sikten"), "sikt");});
test("siktena -> sikten", function() {deepEqual( Stem("siktena"), "sikten");});
test("siktet -> siktet", function() {deepEqual( Stem("siktet"), "siktet");});
test("siktiga -> sikt", function() {deepEqual( Stem("siktiga"), "sikt");});
test("siktigt -> sikt", function() {deepEqual( Stem("siktigt"), "sikt");});
test("sil -> sil", function() {deepEqual( Stem("sil"), "sil");});
test("sila -> sil", function() {deepEqual( Stem("sila"), "sil");});
test("silade -> sil", function() {deepEqual( Stem("silade"), "sil");});
test("silande -> sil", function() {deepEqual( Stem("silande"), "sil");});
test("silfret -> silfret", function() {deepEqual( Stem("silfret"), "silfret");});
test("silfverklockan -> silfverklockan", function() {deepEqual( Stem("silfverklockan"), "silfverklockan");});
test("silfverlampa -> silfverlamp", function() {deepEqual( Stem("silfverlampa"), "silfverlamp");});
test("silfverstjerna -> silfverstj", function() {deepEqual( Stem("silfverstjerna"), "silfverstj");});
test("silhuett -> silhuet", function() {deepEqual( Stem("silhuett"), "silhuet");});
test("silhuetten -> silhuet", function() {deepEqual( Stem("silhuetten"), "silhuet");});
test("silhuetter -> silhuet", function() {deepEqual( Stem("silhuetter"), "silhuet");});
test("siljan -> siljan", function() {deepEqual( Stem("siljan"), "siljan");});
test("silke -> silk", function() {deepEqual( Stem("silke"), "silk");});
test("silkes -> silk", function() {deepEqual( Stem("silkes"), "silk");});
test("silkesblommor -> silkesblomm", function() {deepEqual( Stem("silkesblommor"), "silkesblomm");});
test("silkesduken -> silkesduk", function() {deepEqual( Stem("silkesduken"), "silkesduk");});
test("silkesfloret -> silkesfloret", function() {deepEqual( Stem("silkesfloret"), "silkesfloret");});
test("silkeshalsduk -> silkeshalsduk", function() {deepEqual( Stem("silkeshalsduk"), "silkeshalsduk");});
test("silkeshåret -> silkeshåret", function() {deepEqual( Stem("silkeshåret"), "silkeshåret");});
test("silkeslen -> silkesl", function() {deepEqual( Stem("silkeslen"), "silkesl");});
test("silkeslena -> silkeslen", function() {deepEqual( Stem("silkeslena"), "silkeslen");});
test("silkeslent -> silkeslent", function() {deepEqual( Stem("silkeslent"), "silkeslent");});
test("silkesnäsduk -> silkesnäsduk", function() {deepEqual( Stem("silkesnäsduk"), "silkesnäsduk");});
test("silkespapper -> silkespapp", function() {deepEqual( Stem("silkespapper"), "silkespapp");});
test("silkesperuk -> silkesperuk", function() {deepEqual( Stem("silkesperuk"), "silkesperuk");});
test("silkesschal -> silkesschal", function() {deepEqual( Stem("silkesschal"), "silkesschal");});
test("silkesschalen -> silkesschal", function() {deepEqual( Stem("silkesschalen"), "silkesschal");});
test("silkessnodder -> silkessnod", function() {deepEqual( Stem("silkessnodder"), "silkessnod");});
test("silkesstrumporna -> silkesstrump", function() {deepEqual( Stem("silkesstrumporna"), "silkesstrump");});
test("silkesvirret -> silkesvirret", function() {deepEqual( Stem("silkesvirret"), "silkesvirret");});
test("silket -> silket", function() {deepEqual( Stem("silket"), "silket");});
test("silkets -> silket", function() {deepEqual( Stem("silkets"), "silket");});
test("sill -> sill", function() {deepEqual( Stem("sill"), "sill");});
test("sillstrypare -> sillstryp", function() {deepEqual( Stem("sillstrypare"), "sillstryp");});
test("sillstryparn -> sillstryparn", function() {deepEqual( Stem("sillstryparn"), "sillstryparn");});
test("silter -> silt", function() {deepEqual( Stem("silter"), "silt");});
test("silvanders -> silvander", function() {deepEqual( Stem("silvanders"), "silvander");});
test("silver -> silv", function() {deepEqual( Stem("silver"), "silv");});
test("silverax -> silverax", function() {deepEqual( Stem("silverax"), "silverax");});
test("silverbeslagen -> silverbeslag", function() {deepEqual( Stem("silverbeslagen"), "silverbeslag");});
test("silverboetten -> silverboet", function() {deepEqual( Stem("silverboetten"), "silverboet");});
test("silverbägare -> silverbäg", function() {deepEqual( Stem("silverbägare"), "silverbäg");});
test("silverfågel -> silverfågel", function() {deepEqual( Stem("silverfågel"), "silverfågel");});
test("silvergaffel -> silvergaffel", function() {deepEqual( Stem("silvergaffel"), "silvergaffel");});
test("silverglänsande -> silvergläns", function() {deepEqual( Stem("silverglänsande"), "silvergläns");});
test("silverklang -> silverklang", function() {deepEqual( Stem("silverklang"), "silverklang");});
test("silverklara -> silverklar", function() {deepEqual( Stem("silverklara"), "silverklar");});
test("silverklingande -> silverkling", function() {deepEqual( Stem("silverklingande"), "silverkling");});
test("silverkniv -> silverkniv", function() {deepEqual( Stem("silverkniv"), "silverkniv");});
test("silverpapper -> silverpapp", function() {deepEqual( Stem("silverpapper"), "silverpapp");});
test("silverpokaler -> silverpokal", function() {deepEqual( Stem("silverpokaler"), "silverpokal");});
test("silverrösten -> silverröst", function() {deepEqual( Stem("silverrösten"), "silverröst");});
test("silverskedar -> silversked", function() {deepEqual( Stem("silverskedar"), "silversked");});
test("silverskålen -> silverskål", function() {deepEqual( Stem("silverskålen"), "silverskål");});
test("silverslant -> silverslant", function() {deepEqual( Stem("silverslant"), "silverslant");});
test("silverslantar -> silverslant", function() {deepEqual( Stem("silverslantar"), "silverslant");});
test("silversprängda -> silverspräng", function() {deepEqual( Stem("silversprängda"), "silverspräng");});
test("silverstake -> silverstak", function() {deepEqual( Stem("silverstake"), "silverstak");});
test("silverstrimma -> silverstrimm", function() {deepEqual( Stem("silverstrimma"), "silverstrimm");});
test("simma -> simm", function() {deepEqual( Stem("simma"), "simm");});
test("simmade -> simm", function() {deepEqual( Stem("simmade"), "simm");});
test("simmande -> simm", function() {deepEqual( Stem("simmande"), "simm");});
test("simmar -> simm", function() {deepEqual( Stem("simmar"), "simm");});
test("simme -> simm", function() {deepEqual( Stem("simme"), "simm");});
test("simmerska -> simmersk", function() {deepEqual( Stem("simmerska"), "simmersk");});
test("simon -> simon", function() {deepEqual( Stem("simon"), "simon");});
test("simons -> simon", function() {deepEqual( Stem("simons"), "simon");});
test("simpel -> simpel", function() {deepEqual( Stem("simpel"), "simpel");});
test("simpelt -> simpelt", function() {deepEqual( Stem("simpelt"), "simpelt");});
test("simpla -> simpl", function() {deepEqual( Stem("simpla"), "simpl");});
test("simtag -> simtag", function() {deepEqual( Stem("simtag"), "simtag");});
test("simulerade -> simuler", function() {deepEqual( Stem("simulerade"), "simuler");});
test("sin -> sin", function() {deepEqual( Stem("sin"), "sin");});
test("sina -> sin", function() {deepEqual( Stem("sina"), "sin");});
test("sinas -> sin", function() {deepEqual( Stem("sinas"), "sin");});
test("sine -> sin", function() {deepEqual( Stem("sine"), "sin");});
test("sinistrement -> sinistrement", function() {deepEqual( Stem("sinistrement"), "sinistrement");});
test("sinnad -> sinn", function() {deepEqual( Stem("sinnad"), "sinn");});
test("sinnade -> sinn", function() {deepEqual( Stem("sinnade"), "sinn");});
test("sinne -> sinn", function() {deepEqual( Stem("sinne"), "sinn");});
test("sinnelag -> sinnelag", function() {deepEqual( Stem("sinnelag"), "sinnelag");});
test("sinnen -> sinn", function() {deepEqual( Stem("sinnen"), "sinn");});
test("sinnena -> sinnen", function() {deepEqual( Stem("sinnena"), "sinnen");});
test("sinnenas -> sinnen", function() {deepEqual( Stem("sinnenas"), "sinnen");});
test("sinnens -> sinn", function() {deepEqual( Stem("sinnens"), "sinn");});
test("sinnes -> sinn", function() {deepEqual( Stem("sinnes"), "sinn");});
test("sinnesbeskaffenhet -> sinnesbeskaffen", function() {deepEqual( Stem("sinnesbeskaffenhet"), "sinnesbeskaffen");});
test("sinnesförvirring -> sinnesförvirring", function() {deepEqual( Stem("sinnesförvirring"), "sinnesförvirring");});
test("sinnesförvirringen -> sinnesförvirring", function() {deepEqual( Stem("sinnesförvirringen"), "sinnesförvirring");});
test("sinnesnärvaro -> sinnesnärvaro", function() {deepEqual( Stem("sinnesnärvaro"), "sinnesnärvaro");});
test("sinnesoredan -> sinnesoredan", function() {deepEqual( Stem("sinnesoredan"), "sinnesoredan");});
test("sinnesoro -> sinnesoro", function() {deepEqual( Stem("sinnesoro"), "sinnesoro");});
test("sinnesrubbning -> sinnesrubbning", function() {deepEqual( Stem("sinnesrubbning"), "sinnesrubbning");});
test("sinnesrörelse -> sinnesrör", function() {deepEqual( Stem("sinnesrörelse"), "sinnesrör");});
test("sinnessjukdom -> sinnessjukdom", function() {deepEqual( Stem("sinnessjukdom"), "sinnessjukdom");});
test("sinnessjuke -> sinnessjuk", function() {deepEqual( Stem("sinnessjuke"), "sinnessjuk");});
test("sinnessjukhus -> sinnessjukhus", function() {deepEqual( Stem("sinnessjukhus"), "sinnessjukhus");});
test("sinnesskakning -> sinnesskakning", function() {deepEqual( Stem("sinnesskakning"), "sinnesskakning");});
test("sinnesstyrka -> sinnesstyrk", function() {deepEqual( Stem("sinnesstyrka"), "sinnesstyrk");});
test("sinnesstämning -> sinnesstämning", function() {deepEqual( Stem("sinnesstämning"), "sinnesstämning");});
test("sinnessvag -> sinnessvag", function() {deepEqual( Stem("sinnessvag"), "sinnessvag");});
test("sinnessvage -> sinnessvag", function() {deepEqual( Stem("sinnessvage"), "sinnessvag");});
test("sinnesuppbrusning -> sinnesuppbrusning", function() {deepEqual( Stem("sinnesuppbrusning"), "sinnesuppbrusning");});
test("sinnesyra -> sinnesyr", function() {deepEqual( Stem("sinnesyra"), "sinnesyr");});
test("sinnet -> sinnet", function() {deepEqual( Stem("sinnet"), "sinnet");});
test("sinnigt -> sinn", function() {deepEqual( Stem("sinnigt"), "sinn");});
test("sinnliga -> sinn", function() {deepEqual( Stem("sinnliga"), "sinn");});
test("sinnlighet -> sinn", function() {deepEqual( Stem("sinnlighet"), "sinn");});
test("sinnligt -> sinn", function() {deepEqual( Stem("sinnligt"), "sinn");});
test("sinnrik -> sinnrik", function() {deepEqual( Stem("sinnrik"), "sinnrik");});
test("sinnrika -> sinnrik", function() {deepEqual( Stem("sinnrika"), "sinnrik");});
test("sinom -> sinom", function() {deepEqual( Stem("sinom"), "sinom");});
test("sinsemellan -> sinsemellan", function() {deepEqual( Stem("sinsemellan"), "sinsemellan");});
test("sinstorakappa -> sinstorakapp", function() {deepEqual( Stem("sinstorakappa"), "sinstorakapp");});
test("sio -> sio", function() {deepEqual( Stem("sio"), "sio");});
test("sion -> sion", function() {deepEqual( Stem("sion"), "sion");});
test("sions -> sion", function() {deepEqual( Stem("sions"), "sion");});
test("sippare -> sipp", function() {deepEqual( Stem("sippare"), "sipp");});
test("sippor -> sipp", function() {deepEqual( Stem("sippor"), "sipp");});
test("sipprade -> sippr", function() {deepEqual( Stem("sipprade"), "sippr");});
test("sirap -> sirap", function() {deepEqual( Stem("sirap"), "sirap");});
test("siratens -> sirat", function() {deepEqual( Stem("siratens"), "sirat");});
test("sirenen -> siren", function() {deepEqual( Stem("sirenen"), "siren");});
test("sirlig -> sir", function() {deepEqual( Stem("sirlig"), "sir");});
test("sirliga -> sir", function() {deepEqual( Stem("sirliga"), "sir");});
test("sist -> sist", function() {deepEqual( Stem("sist"), "sist");});
test("sista -> sist", function() {deepEqual( Stem("sista"), "sist");});
test("siste -> sist", function() {deepEqual( Stem("siste"), "sist");});
test("sistone -> siston", function() {deepEqual( Stem("sistone"), "siston");});
test("sitt -> sitt", function() {deepEqual( Stem("sitt"), "sitt");});
test("sitta -> sitt", function() {deepEqual( Stem("sitta"), "sitt");});
test("sittande -> sitt", function() {deepEqual( Stem("sittande"), "sitt");});
test("sitter -> sitt", function() {deepEqual( Stem("sitter"), "sitt");});
test("situation -> situation", function() {deepEqual( Stem("situation"), "situation");});
test("situationen -> situation", function() {deepEqual( Stem("situationen"), "situation");});
test("situationer -> situation", function() {deepEqual( Stem("situationer"), "situation");});
test("siuta -> siut", function() {deepEqual( Stem("siuta"), "siut");});
test("sj -> sj", function() {deepEqual( Stem("sj"), "sj");});
test("sjal -> sjal", function() {deepEqual( Stem("sjal"), "sjal");});
test("sjalv -> sjalv", function() {deepEqual( Stem("sjalv"), "sjalv");});
test("sjelf -> sjelf", function() {deepEqual( Stem("sjelf"), "sjelf");});
test("sjelfbeherskning -> sjelfbeherskning", function() {deepEqual( Stem("sjelfbeherskning"), "sjelfbeherskning");});
test("sjelfförsvar -> sjelfförsv", function() {deepEqual( Stem("sjelfförsvar"), "sjelfförsv");});
test("sjelfförvillelsens -> sjelfförvill", function() {deepEqual( Stem("sjelfförvillelsens"), "sjelfförvill");});
test("sjelfkänsla -> sjelfkänsl", function() {deepEqual( Stem("sjelfkänsla"), "sjelfkänsl");});
test("sjelfkärlek -> sjelfkärlek", function() {deepEqual( Stem("sjelfkärlek"), "sjelfkärlek");});
test("sjelfmant -> sjelfmant", function() {deepEqual( Stem("sjelfmant"), "sjelfmant");});
test("sjelfständig -> sjelfständ", function() {deepEqual( Stem("sjelfständig"), "sjelfständ");});
test("sjelfsvåldig -> sjelfsvåld", function() {deepEqual( Stem("sjelfsvåldig"), "sjelfsvåld");});
test("sjelfsvåldiga -> sjelfsvåld", function() {deepEqual( Stem("sjelfsvåldiga"), "sjelfsvåld");});
test("sjelft -> sjelft", function() {deepEqual( Stem("sjelft"), "sjelft");});
test("sjelfva -> sjelfv", function() {deepEqual( Stem("sjelfva"), "sjelfv");});
test("sjelfvaste -> sjelfv", function() {deepEqual( Stem("sjelfvaste"), "sjelfv");});
test("sjette -> sjett", function() {deepEqual( Stem("sjette"), "sjett");});
test("sjiilv -> sjiilv", function() {deepEqual( Stem("sjiilv"), "sjiilv");});
test("sjll -> sjll", function() {deepEqual( Stem("sjll"), "sjll");});
test("sjmlga -> sjmlga", function() {deepEqual( Stem("sjmlga"), "sjmlga");});
test("sjongo -> sjongo", function() {deepEqual( Stem("sjongo"), "sjongo");});
test("sjonk -> sjonk", function() {deepEqual( Stem("sjonk"), "sjonk");});
test("sjtik -> sjtik", function() {deepEqual( Stem("sjtik"), "sjtik");});
test("sju -> sju", function() {deepEqual( Stem("sju"), "sju");});
test("sjuda -> sjud", function() {deepEqual( Stem("sjuda"), "sjud");});
test("sjudande -> sjud", function() {deepEqual( Stem("sjudande"), "sjud");});
test("sjugare -> sjug", function() {deepEqual( Stem("sjugare"), "sjug");});
test("sjuhundrade -> sjuhundr", function() {deepEqual( Stem("sjuhundrade"), "sjuhundr");});
test("sjuk -> sjuk", function() {deepEqual( Stem("sjuk"), "sjuk");});
test("sjuka -> sjuk", function() {deepEqual( Stem("sjuka"), "sjuk");});
test("sjukbesök -> sjukbesök", function() {deepEqual( Stem("sjukbesök"), "sjukbesök");});
test("sjukbädd -> sjukbäd", function() {deepEqual( Stem("sjukbädd"), "sjukbäd");});
test("sjukdom -> sjukdom", function() {deepEqual( Stem("sjukdom"), "sjukdom");});
test("sjukdomar -> sjukdom", function() {deepEqual( Stem("sjukdomar"), "sjukdom");});
test("sjukdomen -> sjukdom", function() {deepEqual( Stem("sjukdomen"), "sjukdom");});
test("sjukdomens -> sjukdom", function() {deepEqual( Stem("sjukdomens"), "sjukdom");});
test("sjukdomsfall -> sjukdomsfall", function() {deepEqual( Stem("sjukdomsfall"), "sjukdomsfall");});
test("sjukdomsmörkret -> sjukdomsmörkret", function() {deepEqual( Stem("sjukdomsmörkret"), "sjukdomsmörkret");});
test("sjuke -> sjuk", function() {deepEqual( Stem("sjuke"), "sjuk");});
test("sjukes -> sjuk", function() {deepEqual( Stem("sjukes"), "sjuk");});
test("sjukhem -> sjukhem", function() {deepEqual( Stem("sjukhem"), "sjukhem");});
test("sjukhemmet -> sjukhemmet", function() {deepEqual( Stem("sjukhemmet"), "sjukhemmet");});
test("sjukhus -> sjukhus", function() {deepEqual( Stem("sjukhus"), "sjukhus");});
test("sjuklig -> sjuk", function() {deepEqual( Stem("sjuklig"), "sjuk");});
test("sjukliga -> sjuk", function() {deepEqual( Stem("sjukliga"), "sjuk");});
test("sjuklige -> sjuk", function() {deepEqual( Stem("sjuklige"), "sjuk");});
test("sjuklighet -> sjuk", function() {deepEqual( Stem("sjuklighet"), "sjuk");});
test("sjukling -> sjukling", function() {deepEqual( Stem("sjukling"), "sjukling");});
test("sjuklingen -> sjukling", function() {deepEqual( Stem("sjuklingen"), "sjukling");});
test("sjuklägret -> sjuklägret", function() {deepEqual( Stem("sjuklägret"), "sjuklägret");});
test("sjuknade -> sjukn", function() {deepEqual( Stem("sjuknade"), "sjukn");});
test("sjuknat -> sjukn", function() {deepEqual( Stem("sjuknat"), "sjukn");});
test("sjukroll -> sjukroll", function() {deepEqual( Stem("sjukroll"), "sjukroll");});
test("sjukrummet -> sjukrummet", function() {deepEqual( Stem("sjukrummet"), "sjukrummet");});
test("sjuksköterska -> sjukskötersk", function() {deepEqual( Stem("sjuksköterska"), "sjukskötersk");});
test("sjuksköterskan -> sjuksköterskan", function() {deepEqual( Stem("sjuksköterskan"), "sjuksköterskan");});
test("sjuksköterskeelev -> sjuksköterskeelev", function() {deepEqual( Stem("sjuksköterskeelev"), "sjuksköterskeelev");});
test("sjuksystern -> sjuksyst", function() {deepEqual( Stem("sjuksystern"), "sjuksyst");});
test("sjuksäng -> sjuksäng", function() {deepEqual( Stem("sjuksäng"), "sjuksäng");});
test("sjukt -> sjukt", function() {deepEqual( Stem("sjukt"), "sjukt");});
test("sjukvård -> sjukvård", function() {deepEqual( Stem("sjukvård"), "sjukvård");});
test("sjunde -> sjund", function() {deepEqual( Stem("sjunde"), "sjund");});
test("sjung -> sjung", function() {deepEqual( Stem("sjung"), "sjung");});
test("sjunga -> sjung", function() {deepEqual( Stem("sjunga"), "sjung");});
test("sjungande -> sjung", function() {deepEqual( Stem("sjungande"), "sjung");});
test("sjungandes -> sjung", function() {deepEqual( Stem("sjungandes"), "sjung");});
test("sjunge -> sjung", function() {deepEqual( Stem("sjunge"), "sjung");});
test("sjunger -> sjung", function() {deepEqual( Stem("sjunger"), "sjung");});
test("sjunges -> sjung", function() {deepEqual( Stem("sjunges"), "sjung");});
test("sjungit -> sjungit", function() {deepEqual( Stem("sjungit"), "sjungit");});
test("sjunka -> sjunk", function() {deepEqual( Stem("sjunka"), "sjunk");});
test("sjunkandct -> sjunkandct", function() {deepEqual( Stem("sjunkandct"), "sjunkandct");});
test("sjunkande -> sjunk", function() {deepEqual( Stem("sjunkande"), "sjunk");});
test("sjunken -> sjunk", function() {deepEqual( Stem("sjunken"), "sjunk");});
test("sjunker -> sjunk", function() {deepEqual( Stem("sjunker"), "sjunk");});
test("sjunket -> sjunket", function() {deepEqual( Stem("sjunket"), "sjunket");});
test("sjunkit -> sjunkit", function() {deepEqual( Stem("sjunkit"), "sjunkit");});
test("sjuttio -> sjuttio", function() {deepEqual( Stem("sjuttio"), "sjuttio");});
test("sjutton -> sjutton", function() {deepEqual( Stem("sjutton"), "sjutton");});
test("sjuttonarig -> sjuttonar", function() {deepEqual( Stem("sjuttonarig"), "sjuttonar");});
test("sjuttonariga -> sjuttonar", function() {deepEqual( Stem("sjuttonariga"), "sjuttonar");});
test("sjuttonaring -> sjuttonaring", function() {deepEqual( Stem("sjuttonaring"), "sjuttonaring");});
test("sjuttonde -> sjuttond", function() {deepEqual( Stem("sjuttonde"), "sjuttond");});
test("sjuttonhundratalet -> sjuttonhundratalet", function() {deepEqual( Stem("sjuttonhundratalet"), "sjuttonhundratalet");});
test("sjuårig -> sjuår", function() {deepEqual( Stem("sjuårig"), "sjuår");});
test("sjuårigt -> sjuår", function() {deepEqual( Stem("sjuårigt"), "sjuår");});
test("sjä -> sjä", function() {deepEqual( Stem("sjä"), "sjä");});
test("sjäiv -> sjäiv", function() {deepEqual( Stem("sjäiv"), "sjäiv");});
test("själ -> själ", function() {deepEqual( Stem("själ"), "själ");});
test("själafrände -> själafränd", function() {deepEqual( Stem("själafrände"), "själafränd");});
test("själar -> själ", function() {deepEqual( Stem("själar"), "själ");});
test("själarna -> själ", function() {deepEqual( Stem("själarna"), "själ");});
test("själarne -> själ", function() {deepEqual( Stem("själarne"), "själ");});
test("själars -> själar", function() {deepEqual( Stem("själars"), "själar");});
test("själasörjare -> själasörj", function() {deepEqual( Stem("själasörjare"), "själasörj");});
test("själen -> själ", function() {deepEqual( Stem("själen"), "själ");});
test("själens -> själ", function() {deepEqual( Stem("själens"), "själ");});
test("själft -> själft", function() {deepEqual( Stem("själft"), "själft");});
test("själfulla -> själfull", function() {deepEqual( Stem("själfulla"), "själfull");});
test("själs -> själ", function() {deepEqual( Stem("själs"), "själ");});
test("själslidanden -> själslid", function() {deepEqual( Stem("själslidanden"), "själslid");});
test("själsläkekonstnärerna -> själsläkekonstnär", function() {deepEqual( Stem("själsläkekonstnärerna"), "själsläkekonstnär");});
test("själsnärvaro -> själsnärvaro", function() {deepEqual( Stem("själsnärvaro"), "själsnärvaro");});
test("själsstrid -> själsstrid", function() {deepEqual( Stem("själsstrid"), "själsstrid");});
test("själsstyrka -> själsstyrk", function() {deepEqual( Stem("själsstyrka"), "själsstyrk");});
test("själv -> själv", function() {deepEqual( Stem("själv"), "själv");});
test("själva -> själv", function() {deepEqual( Stem("själva"), "själv");});
test("självaste -> själv", function() {deepEqual( Stem("självaste"), "själv");});
test("självbe -> självb", function() {deepEqual( Stem("självbe"), "självb");});
test("självbehärskning -> självbehärskning", function() {deepEqual( Stem("självbehärskning"), "självbehärskning");});
test("självbelåtna -> självbelåtn", function() {deepEqual( Stem("självbelåtna"), "självbelåtn");});
test("självbelåtne -> självbelåtn", function() {deepEqual( Stem("självbelåtne"), "självbelåtn");});
test("självdyrkan -> självdyrkan", function() {deepEqual( Stem("självdyrkan"), "självdyrkan");});
test("självförakt -> självförak", function() {deepEqual( Stem("självförakt"), "självförak");});
test("självförebråelse -> självförebrå", function() {deepEqual( Stem("självförebråelse"), "självförebrå");});
test("självförtroende -> självförtroend", function() {deepEqual( Stem("självförtroende"), "självförtroend");});
test("självförtröstan -> självförtröstan", function() {deepEqual( Stem("självförtröstan"), "självförtröstan");});
test("självförvärvd -> självförvärvd", function() {deepEqual( Stem("självförvärvd"), "självförvärvd");});
test("själviska -> självisk", function() {deepEqual( Stem("själviska"), "självisk");});
test("själviskhet -> självisk", function() {deepEqual( Stem("själviskhet"), "självisk");});
test("självklart -> självklart", function() {deepEqual( Stem("självklart"), "självklart");});
test("självmant -> självmant", function() {deepEqual( Stem("självmant"), "självmant");});
test("självmedveten -> självmedvet", function() {deepEqual( Stem("självmedveten"), "självmedvet");});
test("självmord -> självmord", function() {deepEqual( Stem("självmord"), "självmord");});
test("självmordstankar -> självmordstank", function() {deepEqual( Stem("självmordstankar"), "självmordstank");});
test("självrådig -> självråd", function() {deepEqual( Stem("självrådig"), "självråd");});
test("självsvåldigt -> självsvåld", function() {deepEqual( Stem("självsvåldigt"), "självsvåld");});
test("självsäker -> självsäk", function() {deepEqual( Stem("självsäker"), "självsäk");});
test("självt -> självt", function() {deepEqual( Stem("självt"), "självt");});
test("sjätte -> sjätt", function() {deepEqual( Stem("sjätte"), "sjätt");});
test("sjålv -> sjålv", function() {deepEqual( Stem("sjålv"), "sjålv");});
test("sjålva -> sjålv", function() {deepEqual( Stem("sjålva"), "sjålv");});
test("sjö -> sjö", function() {deepEqual( Stem("sjö"), "sjö");});
test("sjöar -> sjöar", function() {deepEqual( Stem("sjöar"), "sjöar");});
test("sjöberg -> sjöberg", function() {deepEqual( Stem("sjöberg"), "sjöberg");});
test("sjöbodarne -> sjöbod", function() {deepEqual( Stem("sjöbodarne"), "sjöbod");});
test("sjöboden -> sjöbod", function() {deepEqual( Stem("sjöboden"), "sjöbod");});
test("sjöbottnen -> sjöbottn", function() {deepEqual( Stem("sjöbottnen"), "sjöbottn");});
test("sjöbussen -> sjöbuss", function() {deepEqual( Stem("sjöbussen"), "sjöbuss");});
test("sjöd -> sjöd", function() {deepEqual( Stem("sjöd"), "sjöd");});
test("sjöfarande -> sjöfar", function() {deepEqual( Stem("sjöfarande"), "sjöfar");});
test("sjöfarare -> sjöfar", function() {deepEqual( Stem("sjöfarare"), "sjöfar");});
test("sjöfoglar -> sjöfogl", function() {deepEqual( Stem("sjöfoglar"), "sjöfogl");});
test("sjöfoglarne -> sjöfogl", function() {deepEqual( Stem("sjöfoglarne"), "sjöfogl");});
test("sjöfåglarne -> sjöfågl", function() {deepEqual( Stem("sjöfåglarne"), "sjöfågl");});
test("sjöförklaring -> sjöförklaring", function() {deepEqual( Stem("sjöförklaring"), "sjöförklaring");});
test("sjögräs -> sjögräs", function() {deepEqual( Stem("sjögräs"), "sjögräs");});
test("sjögräset -> sjögräset", function() {deepEqual( Stem("sjögräset"), "sjögräset");});
test("sjögrönt -> sjögrönt", function() {deepEqual( Stem("sjögrönt"), "sjögrönt");});
test("sjögången -> sjögång", function() {deepEqual( Stem("sjögången"), "sjögång");});
test("sjöhistorier -> sjöhistori", function() {deepEqual( Stem("sjöhistorier"), "sjöhistori");});
test("sjöhistorierna -> sjöhistori", function() {deepEqual( Stem("sjöhistorierna"), "sjöhistori");});
test("sjöluften -> sjöluft", function() {deepEqual( Stem("sjöluften"), "sjöluft");});
test("sjöman -> sjöman", function() {deepEqual( Stem("sjöman"), "sjöman");});
test("sjömannen -> sjöman", function() {deepEqual( Stem("sjömannen"), "sjöman");});
test("sjömannens -> sjöman", function() {deepEqual( Stem("sjömannens"), "sjöman");});
test("sjömans -> sjöman", function() {deepEqual( Stem("sjömans"), "sjöman");});
test("sjömansgosse -> sjömansgoss", function() {deepEqual( Stem("sjömansgosse"), "sjömansgoss");});
test("sjömanskavaj -> sjömanskavaj", function() {deepEqual( Stem("sjömanskavaj"), "sjömanskavaj");});
test("sjömanskostym -> sjömanskostym", function() {deepEqual( Stem("sjömanskostym"), "sjömanskostym");});
test("sjömanssjälen -> sjömanssjäl", function() {deepEqual( Stem("sjömanssjälen"), "sjömanssjäl");});
test("sjömän -> sjömän", function() {deepEqual( Stem("sjömän"), "sjömän");});
test("sjömännen -> sjömän", function() {deepEqual( Stem("sjömännen"), "sjömän");});
test("sjön -> sjön", function() {deepEqual( Stem("sjön"), "sjön");});
test("sjöng -> sjöng", function() {deepEqual( Stem("sjöng"), "sjöng");});
test("sjöngo -> sjöngo", function() {deepEqual( Stem("sjöngo"), "sjöngo");});
test("sjönk -> sjönk", function() {deepEqual( Stem("sjönk"), "sjönk");});
test("sjönko -> sjönko", function() {deepEqual( Stem("sjönko"), "sjönko");});
test("sjöns -> sjön", function() {deepEqual( Stem("sjöns"), "sjön");});
test("sjöröfvaren -> sjöröfv", function() {deepEqual( Stem("sjöröfvaren"), "sjöröfv");});
test("sjöröfvarn -> sjöröfvarn", function() {deepEqual( Stem("sjöröfvarn"), "sjöröfvarn");});
test("sjös -> sjös", function() {deepEqual( Stem("sjös"), "sjös");});
test("sjösjuka -> sjösjuk", function() {deepEqual( Stem("sjösjuka"), "sjösjuk");});
test("sjöskumspipa -> sjöskumspip", function() {deepEqual( Stem("sjöskumspipa"), "sjöskumspip");});
test("sjöslag -> sjöslag", function() {deepEqual( Stem("sjöslag"), "sjöslag");});
test("sjöstranden -> sjöstr", function() {deepEqual( Stem("sjöstranden"), "sjöstr");});
test("sjötullstaxan -> sjötullstaxan", function() {deepEqual( Stem("sjötullstaxan"), "sjötullstaxan");});
test("sjötungsfilet -> sjötungsfilet", function() {deepEqual( Stem("sjötungsfilet"), "sjötungsfilet");});
test("sjöväsendet -> sjöväsendet", function() {deepEqual( Stem("sjöväsendet"), "sjöväsendet");});
test("sk -> sk", function() {deepEqual( Stem("sk"), "sk");});
test("ska -> ska", function() {deepEqual( Stem("ska"), "ska");});
test("skacklorna -> skackl", function() {deepEqual( Stem("skacklorna"), "skackl");});
test("skada -> skad", function() {deepEqual( Stem("skada"), "skad");});
test("skadad -> skad", function() {deepEqual( Stem("skadad"), "skad");});
test("skadade -> skad", function() {deepEqual( Stem("skadade"), "skad");});
test("skadan -> skadan", function() {deepEqual( Stem("skadan"), "skadan");});
test("skadar -> skad", function() {deepEqual( Stem("skadar"), "skad");});
test("skadat -> skad", function() {deepEqual( Stem("skadat"), "skad");});
test("skade -> skad", function() {deepEqual( Stem("skade"), "skad");});
test("skadeersättning -> skadeersättning", function() {deepEqual( Stem("skadeersättning"), "skadeersättning");});
test("skadeglatt -> skadeglat", function() {deepEqual( Stem("skadeglatt"), "skadeglat");});
test("skadeglädje -> skadeglädj", function() {deepEqual( Stem("skadeglädje"), "skadeglädj");});
test("skadeglädjen -> skadeglädj", function() {deepEqual( Stem("skadeglädjen"), "skadeglädj");});
test("skadegöraren -> skadegör", function() {deepEqual( Stem("skadegöraren"), "skadegör");});
test("skadespelet -> skadespelet", function() {deepEqual( Stem("skadespelet"), "skadespelet");});
test("skadlig -> skad", function() {deepEqual( Stem("skadlig"), "skad");});
test("skadligare -> skad", function() {deepEqual( Stem("skadligare"), "skad");});
test("skadlighet -> skad", function() {deepEqual( Stem("skadlighet"), "skad");});
test("skadligt -> skad", function() {deepEqual( Stem("skadligt"), "skad");});
test("skaf -> skaf", function() {deepEqual( Stem("skaf"), "skaf");});
test("skaffa -> skaff", function() {deepEqual( Stem("skaffa"), "skaff");});
test("skaffade -> skaff", function() {deepEqual( Stem("skaffade"), "skaff");});
test("skaffar -> skaff", function() {deepEqual( Stem("skaffar"), "skaff");});
test("skaffat -> skaff", function() {deepEqual( Stem("skaffat"), "skaff");});
test("skafferiet -> skafferiet", function() {deepEqual( Stem("skafferiet"), "skafferiet");});
test("skaft -> skaft", function() {deepEqual( Stem("skaft"), "skaft");});
test("skaftet -> skaftet", function() {deepEqual( Stem("skaftet"), "skaftet");});
test("skaftig -> skaft", function() {deepEqual( Stem("skaftig"), "skaft");});
test("skageraks -> skagerak", function() {deepEqual( Stem("skageraks"), "skagerak");});
test("skaji -> skaji", function() {deepEqual( Stem("skaji"), "skaji");});
test("skaka -> skak", function() {deepEqual( Stem("skaka"), "skak");});
test("skakad -> skak", function() {deepEqual( Stem("skakad"), "skak");});
test("skakade -> skak", function() {deepEqual( Stem("skakade"), "skak");});
test("skakades -> skak", function() {deepEqual( Stem("skakades"), "skak");});
test("skakande -> skak", function() {deepEqual( Stem("skakande"), "skak");});
test("skakar -> skak", function() {deepEqual( Stem("skakar"), "skak");});
test("skakas -> skak", function() {deepEqual( Stem("skakas"), "skak");});
test("skakat -> skak", function() {deepEqual( Stem("skakat"), "skak");});
test("skakning -> skakning", function() {deepEqual( Stem("skakning"), "skakning");});
test("skakningar -> skakning", function() {deepEqual( Stem("skakningar"), "skakning");});
test("skakningen -> skakning", function() {deepEqual( Stem("skakningen"), "skakning");});
test("skal -> skal", function() {deepEqual( Stem("skal"), "skal");});
test("skala -> skal", function() {deepEqual( Stem("skala"), "skal");});
test("skald -> skald", function() {deepEqual( Stem("skald"), "skald");});
test("skaldernas -> skald", function() {deepEqual( Stem("skaldernas"), "skald");});
test("skalds -> skald", function() {deepEqual( Stem("skalds"), "skald");});
test("skalen -> skal", function() {deepEqual( Stem("skalen"), "skal");});
test("skalet -> skalet", function() {deepEqual( Stem("skalet"), "skalet");});
test("skall -> skall", function() {deepEqual( Stem("skall"), "skall");});
test("skallade -> skall", function() {deepEqual( Stem("skallade"), "skall");});
test("skallande -> skall", function() {deepEqual( Stem("skallande"), "skall");});
test("skallar -> skall", function() {deepEqual( Stem("skallar"), "skall");});
test("skallarna -> skall", function() {deepEqual( Stem("skallarna"), "skall");});
test("skalle -> skall", function() {deepEqual( Stem("skalle"), "skall");});
test("skallet -> skallet", function() {deepEqual( Stem("skallet"), "skallet");});
test("skalv -> skalv", function() {deepEqual( Stem("skalv"), "skalv");});
test("skam -> skam", function() {deepEqual( Stem("skam"), "skam");});
test("skamliga -> skam", function() {deepEqual( Stem("skamliga"), "skam");});
test("skamlös -> skamlös", function() {deepEqual( Stem("skamlös"), "skamlös");});
test("skamlöst -> skamlös", function() {deepEqual( Stem("skamlöst"), "skamlös");});
test("skammen -> skamm", function() {deepEqual( Stem("skammen"), "skamm");});
test("skamrodnaden -> skamrodnad", function() {deepEqual( Stem("skamrodnaden"), "skamrodnad");});
test("skams -> skam", function() {deepEqual( Stem("skams"), "skam");});
test("skamsen -> skams", function() {deepEqual( Stem("skamsen"), "skams");});
test("skamsna -> skamsn", function() {deepEqual( Stem("skamsna"), "skamsn");});
test("skan -> skan", function() {deepEqual( Stem("skan"), "skan");});
test("skandal -> skandal", function() {deepEqual( Stem("skandal"), "skandal");});
test("skandalen -> skandal", function() {deepEqual( Stem("skandalen"), "skandal");});
test("skandalhistoria -> skandalhistori", function() {deepEqual( Stem("skandalhistoria"), "skandalhistori");});
test("skande -> skand", function() {deepEqual( Stem("skande"), "skand");});
test("skanklad -> skankl", function() {deepEqual( Stem("skanklad"), "skankl");});
test("skapa -> skap", function() {deepEqual( Stem("skapa"), "skap");});
test("skapad -> skap", function() {deepEqual( Stem("skapad"), "skap");});
test("skapade -> skap", function() {deepEqual( Stem("skapade"), "skap");});
test("skapar -> skap", function() {deepEqual( Stem("skapar"), "skap");});
test("skapare -> skap", function() {deepEqual( Stem("skapare"), "skap");});
test("skapat -> skap", function() {deepEqual( Stem("skapat"), "skap");});
test("skapelse -> skap", function() {deepEqual( Stem("skapelse"), "skap");});
test("skapelsens -> skap", function() {deepEqual( Stem("skapelsens"), "skap");});
test("skaplingar -> skapling", function() {deepEqual( Stem("skaplingar"), "skapling");});
test("skapnad -> skapn", function() {deepEqual( Stem("skapnad"), "skapn");});
test("skapnaden -> skapnad", function() {deepEqual( Stem("skapnaden"), "skapnad");});
test("skapt -> skapt", function() {deepEqual( Stem("skapt"), "skapt");});
test("skapta -> skapt", function() {deepEqual( Stem("skapta"), "skapt");});
test("skar -> skar", function() {deepEqual( Stem("skar"), "skar");});
test("skara -> skar", function() {deepEqual( Stem("skara"), "skar");});
test("skaran -> skaran", function() {deepEqual( Stem("skaran"), "skaran");});
test("skarens -> skar", function() {deepEqual( Stem("skarens"), "skar");});
test("skaror -> skar", function() {deepEqual( Stem("skaror"), "skar");});
test("skarp -> skarp", function() {deepEqual( Stem("skarp"), "skarp");});
test("skarpa -> skarp", function() {deepEqual( Stem("skarpa"), "skarp");});
test("skarpare -> skarp", function() {deepEqual( Stem("skarpare"), "skarp");});
test("skarpaste -> skarp", function() {deepEqual( Stem("skarpaste"), "skarp");});
test("skarpen -> skarp", function() {deepEqual( Stem("skarpen"), "skarp");});
test("skarpsinne -> skarpsin", function() {deepEqual( Stem("skarpsinne"), "skarpsin");});
test("skarpsinnig -> skarpsinn", function() {deepEqual( Stem("skarpsinnig"), "skarpsinn");});
test("skarpsinnighet -> skarpsinn", function() {deepEqual( Stem("skarpsinnighet"), "skarpsinn");});
test("skarpslipade -> skarpslip", function() {deepEqual( Stem("skarpslipade"), "skarpslip");});
test("skarpsynt -> skarpsynt", function() {deepEqual( Stem("skarpsynt"), "skarpsynt");});
test("skarpsynta -> skarpsynt", function() {deepEqual( Stem("skarpsynta"), "skarpsynt");});
test("skarpsyntare -> skarpsynt", function() {deepEqual( Stem("skarpsyntare"), "skarpsynt");});
test("skarpsynthet -> skarpsynt", function() {deepEqual( Stem("skarpsynthet"), "skarpsynt");});
test("skarpt -> skarpt", function() {deepEqual( Stem("skarpt"), "skarpt");});
test("skatbos -> skatbo", function() {deepEqual( Stem("skatbos"), "skatbo");});
test("skatt -> skatt", function() {deepEqual( Stem("skatt"), "skatt");});
test("skatta -> skatt", function() {deepEqual( Stem("skatta"), "skatt");});
test("skattade -> skatt", function() {deepEqual( Stem("skattade"), "skatt");});
test("skattande -> skatt", function() {deepEqual( Stem("skattande"), "skatt");});
test("skattar -> skatt", function() {deepEqual( Stem("skattar"), "skatt");});
test("skatter -> skatt", function() {deepEqual( Stem("skatter"), "skatt");});
test("skatterna -> skatt", function() {deepEqual( Stem("skatterna"), "skatt");});
test("skattkammaren -> skattkamm", function() {deepEqual( Stem("skattkammaren"), "skattkamm");});
test("skavanker -> skavank", function() {deepEqual( Stem("skavanker"), "skavank");});
test("skavde -> skavd", function() {deepEqual( Stem("skavde"), "skavd");});
test("skavit -> skavit", function() {deepEqual( Stem("skavit"), "skavit");});
test("ske -> ske", function() {deepEqual( Stem("ske"), "ske");});
test("skedde -> skedd", function() {deepEqual( Stem("skedde"), "skedd");});
test("skeden -> sked", function() {deepEqual( Stem("skeden"), "sked");});
test("skelett -> skelet", function() {deepEqual( Stem("skelett"), "skelet");});
test("skelettet -> skelettet", function() {deepEqual( Stem("skelettet"), "skelettet");});
test("sken -> sken", function() {deepEqual( Stem("sken"), "sken");});
test("skenar -> sken", function() {deepEqual( Stem("skenar"), "sken");});
test("skenbarligen -> skenbar", function() {deepEqual( Stem("skenbarligen"), "skenbar");});
test("skenbart -> skenbart", function() {deepEqual( Stem("skenbart"), "skenbart");});
test("skenet -> skenet", function() {deepEqual( Stem("skenet"), "skenet");});
test("skenhelig -> skenhe", function() {deepEqual( Stem("skenhelig"), "skenhe");});
test("skenheliga -> skenhe", function() {deepEqual( Stem("skenheliga"), "skenhe");});
test("skenliv -> skenliv", function() {deepEqual( Stem("skenliv"), "skenliv");});
test("skeno -> skeno", function() {deepEqual( Stem("skeno"), "skeno");});
test("skenorna -> sken", function() {deepEqual( Stem("skenorna"), "sken");});
test("skepelse -> skep", function() {deepEqual( Stem("skepelse"), "skep");});
test("skepelsen -> skep", function() {deepEqual( Stem("skepelsen"), "skep");});
test("skepnad -> skepn", function() {deepEqual( Stem("skepnad"), "skepn");});
test("skepnaden -> skepnad", function() {deepEqual( Stem("skepnaden"), "skepnad");});
test("skepnadendet -> skepnadendet", function() {deepEqual( Stem("skepnadendet"), "skepnadendet");});
test("skepnader -> skepnad", function() {deepEqual( Stem("skepnader"), "skepnad");});
test("skepp -> skepp", function() {deepEqual( Stem("skepp"), "skepp");});
test("skeppare -> skepp", function() {deepEqual( Stem("skeppare"), "skepp");});
test("skepparens -> skepp", function() {deepEqual( Stem("skepparens"), "skepp");});
test("skeppares -> skeppar", function() {deepEqual( Stem("skeppares"), "skeppar");});
test("skepparhistorier -> skepparhistori", function() {deepEqual( Stem("skepparhistorier"), "skepparhistori");});
test("skeppen -> skepp", function() {deepEqual( Stem("skeppen"), "skepp");});
test("skeppet -> skeppet", function() {deepEqual( Stem("skeppet"), "skeppet");});
test("skepps -> skepp", function() {deepEqual( Stem("skepps"), "skepp");});
test("skeppsbron -> skeppsbron", function() {deepEqual( Stem("skeppsbron"), "skeppsbron");});
test("skeppsbrott -> skeppsbrot", function() {deepEqual( Stem("skeppsbrott"), "skeppsbrot");});
test("skeppsbrotten -> skeppsbrot", function() {deepEqual( Stem("skeppsbrotten"), "skeppsbrot");});
test("skeppsbruten -> skeppsbrut", function() {deepEqual( Stem("skeppsbruten"), "skeppsbrut");});
test("skeppsbrutne -> skeppsbrutn", function() {deepEqual( Stem("skeppsbrutne"), "skeppsbrutn");});
test("skeppsgossen -> skeppsgoss", function() {deepEqual( Stem("skeppsgossen"), "skeppsgoss");});
test("skeppsgossens -> skeppsgoss", function() {deepEqual( Stem("skeppsgossens"), "skeppsgoss");});
test("skeppsholmen -> skeppsholm", function() {deepEqual( Stem("skeppsholmen"), "skeppsholm");});
test("skeppsordningen -> skeppsordning", function() {deepEqual( Stem("skeppsordningen"), "skeppsordning");});
test("skeppsstolarne -> skeppsstol", function() {deepEqual( Stem("skeppsstolarne"), "skeppsstol");});
test("skeptiskt -> skeptisk", function() {deepEqual( Stem("skeptiskt"), "skeptisk");});
test("sker -> sker", function() {deepEqual( Stem("sker"), "sker");});
test("skett -> skett", function() {deepEqual( Stem("skett"), "skett");});
test("skeva -> skev", function() {deepEqual( Stem("skeva"), "skev");});
test("skevt -> skevt", function() {deepEqual( Stem("skevt"), "skevt");});
test("skhnrande -> skhnrand", function() {deepEqual( Stem("skhnrande"), "skhnrand");});
test("skick -> skick", function() {deepEqual( Stem("skick"), "skick");});
test("skicka -> skick", function() {deepEqual( Stem("skicka"), "skick");});
test("skickade -> skick", function() {deepEqual( Stem("skickade"), "skick");});
test("skickades -> skick", function() {deepEqual( Stem("skickades"), "skick");});
test("skickande -> skick", function() {deepEqual( Stem("skickande"), "skick");});
test("skickar -> skick", function() {deepEqual( Stem("skickar"), "skick");});
test("skickat -> skick", function() {deepEqual( Stem("skickat"), "skick");});
test("skickelse -> skick", function() {deepEqual( Stem("skickelse"), "skick");});
test("skickelsen -> skick", function() {deepEqual( Stem("skickelsen"), "skick");});
test("skicklig -> skick", function() {deepEqual( Stem("skicklig"), "skick");});
test("skickliga -> skick", function() {deepEqual( Stem("skickliga"), "skick");});
test("skickligaste -> skick", function() {deepEqual( Stem("skickligaste"), "skick");});
test("skicklighet -> skick", function() {deepEqual( Stem("skicklighet"), "skick");});
test("skickligheten -> skick", function() {deepEqual( Stem("skickligheten"), "skick");});
test("skickligt -> skick", function() {deepEqual( Stem("skickligt"), "skick");});
test("skidor -> skid", function() {deepEqual( Stem("skidor"), "skid");});
test("skifta -> skift", function() {deepEqual( Stem("skifta"), "skift");});
test("skiftade -> skift", function() {deepEqual( Stem("skiftade"), "skift");});
test("skiftande -> skift", function() {deepEqual( Stem("skiftande"), "skift");});
test("skiftar -> skift", function() {deepEqual( Stem("skiftar"), "skift");});
test("skiften -> skift", function() {deepEqual( Stem("skiften"), "skift");});
test("skiftningen -> skiftning", function() {deepEqual( Stem("skiftningen"), "skiftning");});
test("skifvan -> skifvan", function() {deepEqual( Stem("skifvan"), "skifvan");});
test("skild -> skild", function() {deepEqual( Stem("skild"), "skild");});
test("skilda -> skild", function() {deepEqual( Stem("skilda"), "skild");});
test("skildcs -> skildc", function() {deepEqual( Stem("skildcs"), "skildc");});
test("skilde -> skild", function() {deepEqual( Stem("skilde"), "skild");});
test("skildes -> skild", function() {deepEqual( Stem("skildes"), "skild");});
test("skildra -> skildr", function() {deepEqual( Stem("skildra"), "skildr");});
test("skildrade -> skildr", function() {deepEqual( Stem("skildrade"), "skildr");});
test("skildringar -> skildring", function() {deepEqual( Stem("skildringar"), "skildring");});
test("skildringen -> skildring", function() {deepEqual( Stem("skildringen"), "skildring");});
test("skildt -> skild", function() {deepEqual( Stem("skildt"), "skild");});
test("skilja -> skilj", function() {deepEqual( Stem("skilja"), "skilj");});
test("skiljas -> skilj", function() {deepEqual( Stem("skiljas"), "skilj");});
test("skiljer -> skilj", function() {deepEqual( Stem("skiljer"), "skilj");});
test("skiljes -> skilj", function() {deepEqual( Stem("skiljes"), "skilj");});
test("skiljobrevet -> skiljobrevet", function() {deepEqual( Stem("skiljobrevet"), "skiljobrevet");});
test("skilling -> skilling", function() {deepEqual( Stem("skilling"), "skilling");});
test("skillnad -> skilln", function() {deepEqual( Stem("skillnad"), "skilln");});
test("skillnaden -> skillnad", function() {deepEqual( Stem("skillnaden"), "skillnad");});
test("skilnad -> skiln", function() {deepEqual( Stem("skilnad"), "skiln");});
test("skilsmessa -> skilsmess", function() {deepEqual( Stem("skilsmessa"), "skilsmess");});
test("skilsmessan -> skilsmessan", function() {deepEqual( Stem("skilsmessan"), "skilsmessan");});
test("skilsmässa -> skilsmäss", function() {deepEqual( Stem("skilsmässa"), "skilsmäss");});
test("skilsmässan -> skilsmässan", function() {deepEqual( Stem("skilsmässan"), "skilsmässan");});
test("skilt -> skilt", function() {deepEqual( Stem("skilt"), "skilt");});
test("skimmer -> skimm", function() {deepEqual( Stem("skimmer"), "skimm");});
test("skimra -> skimr", function() {deepEqual( Stem("skimra"), "skimr");});
test("skimrade -> skimr", function() {deepEqual( Stem("skimrade"), "skimr");});
test("skimrande -> skimr", function() {deepEqual( Stem("skimrande"), "skimr");});
test("skimrar -> skimr", function() {deepEqual( Stem("skimrar"), "skimr");});
test("skin -> skin", function() {deepEqual( Stem("skin"), "skin");});
test("skina -> skin", function() {deepEqual( Stem("skina"), "skin");});
test("skinande -> skin", function() {deepEqual( Stem("skinande"), "skin");});
test("skiner -> skin", function() {deepEqual( Stem("skiner"), "skin");});
test("skingra -> skingr", function() {deepEqual( Stem("skingra"), "skingr");});
test("skingrades -> skingr", function() {deepEqual( Stem("skingrades"), "skingr");});
test("skingras -> skingr", function() {deepEqual( Stem("skingras"), "skingr");});
test("skinka -> skink", function() {deepEqual( Stem("skinka"), "skink");});
test("skinliga -> skin", function() {deepEqual( Stem("skinliga"), "skin");});
test("skinn -> skinn", function() {deepEqual( Stem("skinn"), "skinn");});
test("skinnband -> skinnband", function() {deepEqual( Stem("skinnband"), "skinnband");});
test("skinnen -> skinn", function() {deepEqual( Stem("skinnen"), "skinn");});
test("skinnet -> skinnet", function() {deepEqual( Stem("skinnet"), "skinnet");});
test("skinnfoder -> skinnfod", function() {deepEqual( Stem("skinnfoder"), "skinnfod");});
test("skinnfällar -> skinnfäll", function() {deepEqual( Stem("skinnfällar"), "skinnfäll");});
test("skinnklädd -> skinnkläd", function() {deepEqual( Stem("skinnklädd"), "skinnkläd");});
test("skinnmadrassen -> skinnmadrass", function() {deepEqual( Stem("skinnmadrassen"), "skinnmadrass");});
test("skinnmössa -> skinnmöss", function() {deepEqual( Stem("skinnmössa"), "skinnmöss");});
test("skinnskoffert -> skinnskoffert", function() {deepEqual( Stem("skinnskoffert"), "skinnskoffert");});
test("skinnstol -> skinnstol", function() {deepEqual( Stem("skinnstol"), "skinnstol");});
test("skinnstolar -> skinnstol", function() {deepEqual( Stem("skinnstolar"), "skinnstol");});
test("skinnstolen -> skinnstol", function() {deepEqual( Stem("skinnstolen"), "skinnstol");});
test("skinntorra -> skinntorr", function() {deepEqual( Stem("skinntorra"), "skinntorr");});
test("skira -> skir", function() {deepEqual( Stem("skira"), "skir");});
test("skiss -> skiss", function() {deepEqual( Stem("skiss"), "skiss");});
test("skiva -> skiv", function() {deepEqual( Stem("skiva"), "skiv");});
test("skivan -> skivan", function() {deepEqual( Stem("skivan"), "skivan");});
test("skivorna -> skiv", function() {deepEqual( Stem("skivorna"), "skiv");});
test("skjorta -> skjort", function() {deepEqual( Stem("skjorta"), "skjort");});
test("skjortan -> skjortan", function() {deepEqual( Stem("skjortan"), "skjortan");});
test("skjortbröst -> skjortbröst", function() {deepEqual( Stem("skjortbröst"), "skjortbröst");});
test("skjortkragen -> skjortkrag", function() {deepEqual( Stem("skjortkragen"), "skjortkrag");});
test("skjortor -> skjort", function() {deepEqual( Stem("skjortor"), "skjort");});
test("skjortsöm -> skjortsöm", function() {deepEqual( Stem("skjortsöm"), "skjortsöm");});
test("skjortärmarna -> skjortärm", function() {deepEqual( Stem("skjortärmarna"), "skjortärm");});
test("skjortärmarne -> skjortärm", function() {deepEqual( Stem("skjortärmarne"), "skjortärm");});
test("skjul -> skjul", function() {deepEqual( Stem("skjul"), "skjul");});
test("skjut -> skjut", function() {deepEqual( Stem("skjut"), "skjut");});
test("skjuta -> skjut", function() {deepEqual( Stem("skjuta"), "skjut");});
test("skjuten -> skjut", function() {deepEqual( Stem("skjuten"), "skjut");});
test("skjuter -> skjut", function() {deepEqual( Stem("skjuter"), "skjut");});
test("skjutfönstret -> skjutfönstret", function() {deepEqual( Stem("skjutfönstret"), "skjutfönstret");});
test("skjutit -> skjutit", function() {deepEqual( Stem("skjutit"), "skjutit");});
test("skjuts -> skjut", function() {deepEqual( Stem("skjuts"), "skjut");});
test("skjutsa -> skjuts", function() {deepEqual( Stem("skjutsa"), "skjuts");});
test("skjutsbonde -> skjutsbond", function() {deepEqual( Stem("skjutsbonde"), "skjutsbond");});
test("skjutsbondens -> skjutsbond", function() {deepEqual( Stem("skjutsbondens"), "skjutsbond");});
test("skjutsen -> skjuts", function() {deepEqual( Stem("skjutsen"), "skjuts");});
test("skjutsens -> skjuts", function() {deepEqual( Stem("skjutsens"), "skjuts");});
test("sknlle -> sknlle", function() {deepEqual( Stem("sknlle"), "sknlle");});
test("sko -> sko", function() {deepEqual( Stem("sko"), "sko");});
test("skoband -> skoband", function() {deepEqual( Stem("skoband"), "skoband");});
test("skock -> skock", function() {deepEqual( Stem("skock"), "skock");});
test("skocka -> skock", function() {deepEqual( Stem("skocka"), "skock");});
test("skockade -> skock", function() {deepEqual( Stem("skockade"), "skock");});
test("skockades -> skock", function() {deepEqual( Stem("skockades"), "skock");});
test("skockar -> skock", function() {deepEqual( Stem("skockar"), "skock");});
test("skockat -> skock", function() {deepEqual( Stem("skockat"), "skock");});
test("skocken -> skock", function() {deepEqual( Stem("skocken"), "skock");});
test("skog -> skog", function() {deepEqual( Stem("skog"), "skog");});
test("skogar -> skog", function() {deepEqual( Stem("skogar"), "skog");});
test("skogarna -> skog", function() {deepEqual( Stem("skogarna"), "skog");});
test("skogarnas -> skog", function() {deepEqual( Stem("skogarnas"), "skog");});
test("skogen -> skog", function() {deepEqual( Stem("skogen"), "skog");});
test("skogens -> skog", function() {deepEqual( Stem("skogens"), "skog");});
test("skogig -> skog", function() {deepEqual( Stem("skogig"), "skog");});
test("skogsdungens -> skogsdung", function() {deepEqual( Stem("skogsdungens"), "skogsdung");});
test("skogsdunklet -> skogsdunklet", function() {deepEqual( Stem("skogsdunklet"), "skogsdunklet");});
test("skogsfrun -> skogsfrun", function() {deepEqual( Stem("skogsfrun"), "skogsfrun");});
test("skogskuliss -> skogskuliss", function() {deepEqual( Stem("skogskuliss"), "skogskuliss");});
test("skogssidan -> skogssidan", function() {deepEqual( Stem("skogssidan"), "skogssidan");});
test("skogssluttningen -> skogssluttning", function() {deepEqual( Stem("skogssluttningen"), "skogssluttning");});
test("skogsstigen -> skogsst", function() {deepEqual( Stem("skogsstigen"), "skogsst");});
test("skogsstigens -> skogsst", function() {deepEqual( Stem("skogsstigens"), "skogsst");});
test("skogsström -> skogsström", function() {deepEqual( Stem("skogsström"), "skogsström");});
test("skogstjärn -> skogstjärn", function() {deepEqual( Stem("skogstjärn"), "skogstjärn");});
test("skoj -> skoj", function() {deepEqual( Stem("skoj"), "skoj");});
test("skoja -> skoj", function() {deepEqual( Stem("skoja"), "skoj");});
test("skojare -> skoj", function() {deepEqual( Stem("skojare"), "skoj");});
test("skol -> skol", function() {deepEqual( Stem("skol"), "skol");});
test("skola -> skol", function() {deepEqual( Stem("skola"), "skol");});
test("skolan -> skolan", function() {deepEqual( Stem("skolan"), "skolan");});
test("skolans -> skolan", function() {deepEqual( Stem("skolans"), "skolan");});
test("skolas -> skol", function() {deepEqual( Stem("skolas"), "skol");});
test("skolbarn -> skolbarn", function() {deepEqual( Stem("skolbarn"), "skolbarn");});
test("skolböckerna -> skolböck", function() {deepEqual( Stem("skolböckerna"), "skolböck");});
test("skolen -> skol", function() {deepEqual( Stem("skolen"), "skol");});
test("skolflicka -> skolflick", function() {deepEqual( Stem("skolflicka"), "skolflick");});
test("skolflickan -> skolflickan", function() {deepEqual( Stem("skolflickan"), "skolflickan");});
test("skolflickorna -> skolflick", function() {deepEqual( Stem("skolflickorna"), "skolflick");});
test("skolföreståndarinnan -> skolföreståndarinnan", function() {deepEqual( Stem("skolföreståndarinnan"), "skolföreståndarinnan");});
test("skolgossarna -> skolgoss", function() {deepEqual( Stem("skolgossarna"), "skolgoss");});
test("skolgossens -> skolgoss", function() {deepEqual( Stem("skolgossens"), "skolgoss");});
test("skolgosses -> skolgoss", function() {deepEqual( Stem("skolgosses"), "skolgoss");});
test("skolgården -> skolgård", function() {deepEqual( Stem("skolgården"), "skolgård");});
test("skolhuset -> skolhuset", function() {deepEqual( Stem("skolhuset"), "skolhuset");});
test("skolkamrater -> skolkamrat", function() {deepEqual( Stem("skolkamrater"), "skolkamrat");});
test("skolkar -> skolk", function() {deepEqual( Stem("skolkar"), "skolk");});
test("skolklockan -> skolklockan", function() {deepEqual( Stem("skolklockan"), "skolklockan");});
test("skolläraren -> skollär", function() {deepEqual( Stem("skolläraren"), "skollär");});
test("skolmamsell -> skolmamsell", function() {deepEqual( Stem("skolmamsell"), "skolmamsell");});
test("skolpojke -> skolpojk", function() {deepEqual( Stem("skolpojke"), "skolpojk");});
test("skolpojkslivets -> skolpojkslivet", function() {deepEqual( Stem("skolpojkslivets"), "skolpojkslivet");});
test("skolpojkssättet -> skolpojkssättet", function() {deepEqual( Stem("skolpojkssättet"), "skolpojkssättet");});
test("skolrummet -> skolrummet", function() {deepEqual( Stem("skolrummet"), "skolrummet");});
test("skolsalen -> skolsal", function() {deepEqual( Stem("skolsalen"), "skolsal");});
test("skolsalens -> skolsal", function() {deepEqual( Stem("skolsalens"), "skolsal");});
test("skoltid -> skoltid", function() {deepEqual( Stem("skoltid"), "skoltid");});
test("skoltiden -> skoltid", function() {deepEqual( Stem("skoltiden"), "skoltid");});
test("skomakare -> skomak", function() {deepEqual( Stem("skomakare"), "skomak");});
test("skon -> skon", function() {deepEqual( Stem("skon"), "skon");});
test("skona -> skon", function() {deepEqual( Stem("skona"), "skon");});
test("skonande -> skon", function() {deepEqual( Stem("skonande"), "skon");});
test("skonare -> skon", function() {deepEqual( Stem("skonare"), "skon");});
test("skonarn -> skonarn", function() {deepEqual( Stem("skonarn"), "skonarn");});
test("skonerten -> skonert", function() {deepEqual( Stem("skonerten"), "skonert");});
test("skonsamt -> skonsamt", function() {deepEqual( Stem("skonsamt"), "skonsamt");});
test("skor -> skor", function() {deepEqual( Stem("skor"), "skor");});
test("skorna -> skorn", function() {deepEqual( Stem("skorna"), "skorn");});
test("skorpor -> skorp", function() {deepEqual( Stem("skorpor"), "skorp");});
test("skorporna -> skorp", function() {deepEqual( Stem("skorporna"), "skorp");});
test("skorrande -> skorr", function() {deepEqual( Stem("skorrande"), "skorr");});
test("skorrning -> skorrning", function() {deepEqual( Stem("skorrning"), "skorrning");});
test("skorsten -> skorst", function() {deepEqual( Stem("skorsten"), "skorst");});
test("skorstenar -> skorsten", function() {deepEqual( Stem("skorstenar"), "skorsten");});
test("skorstenen -> skorsten", function() {deepEqual( Stem("skorstenen"), "skorsten");});
test("skorstensfejaren -> skorstensfej", function() {deepEqual( Stem("skorstensfejaren"), "skorstensfej");});
test("skosmörja -> skosmörj", function() {deepEqual( Stem("skosmörja"), "skosmörj");});
test("skota -> skot", function() {deepEqual( Stem("skota"), "skot");});
test("skote -> skot", function() {deepEqual( Stem("skote"), "skot");});
test("skotet -> skotet", function() {deepEqual( Stem("skotet"), "skotet");});
test("skott -> skott", function() {deepEqual( Stem("skott"), "skott");});
test("skottet -> skottet", function() {deepEqual( Stem("skottet"), "skottet");});
test("skottkärran -> skottkärran", function() {deepEqual( Stem("skottkärran"), "skottkärran");});
test("skrackelse -> skrack", function() {deepEqual( Stem("skrackelse"), "skrack");});
test("skral -> skral", function() {deepEqual( Stem("skral"), "skral");});
test("skraltiga -> skralt", function() {deepEqual( Stem("skraltiga"), "skralt");});
test("skramd -> skramd", function() {deepEqual( Stem("skramd"), "skramd");});
test("skramla -> skraml", function() {deepEqual( Stem("skramla"), "skraml");});
test("skramlade -> skraml", function() {deepEqual( Stem("skramlade"), "skraml");});
test("skramlande -> skraml", function() {deepEqual( Stem("skramlande"), "skraml");});
test("skrammel -> skrammel", function() {deepEqual( Stem("skrammel"), "skrammel");});
test("skrankor -> skrank", function() {deepEqual( Stem("skrankor"), "skrank");});
test("skrap -> skrap", function() {deepEqual( Stem("skrap"), "skrap");});
test("skrapa -> skrap", function() {deepEqual( Stem("skrapa"), "skrap");});
test("skrapade -> skrap", function() {deepEqual( Stem("skrapade"), "skrap");});
test("skrapande -> skrap", function() {deepEqual( Stem("skrapande"), "skrap");});
test("skrapat -> skrap", function() {deepEqual( Stem("skrapat"), "skrap");});
test("skrapet -> skrapet", function() {deepEqual( Stem("skrapet"), "skrapet");});
test("skrapning -> skrapning", function() {deepEqual( Stem("skrapning"), "skrapning");});
test("skratt -> skratt", function() {deepEqual( Stem("skratt"), "skratt");});
test("skratta -> skratt", function() {deepEqual( Stem("skratta"), "skratt");});
test("skrattade -> skratt", function() {deepEqual( Stem("skrattade"), "skratt");});
test("skrattande -> skratt", function() {deepEqual( Stem("skrattande"), "skratt");});
test("skrattar -> skratt", function() {deepEqual( Stem("skrattar"), "skratt");});
test("skrattat -> skratt", function() {deepEqual( Stem("skrattat"), "skratt");});
test("skrattet -> skrattet", function() {deepEqual( Stem("skrattet"), "skrattet");});
test("skrattlust -> skrattlust", function() {deepEqual( Stem("skrattlust"), "skrattlust");});
test("skrattretande -> skrattret", function() {deepEqual( Stem("skrattretande"), "skrattret");});
test("skrattsalva -> skrattsalv", function() {deepEqual( Stem("skrattsalva"), "skrattsalv");});
test("skrattsalvor -> skrattsalv", function() {deepEqual( Stem("skrattsalvor"), "skrattsalv");});
test("skred -> skred", function() {deepEqual( Stem("skred"), "skred");});
test("skref -> skref", function() {deepEqual( Stem("skref"), "skref");});
test("skrek -> skrek", function() {deepEqual( Stem("skrek"), "skrek");});
test("skreko -> skreko", function() {deepEqual( Stem("skreko"), "skreko");});
test("skrev -> skrev", function() {deepEqual( Stem("skrev"), "skrev");});
test("skreve -> skrev", function() {deepEqual( Stem("skreve"), "skrev");});
test("skrevo -> skrevo", function() {deepEqual( Stem("skrevo"), "skrevo");});
test("skrevor -> skrev", function() {deepEqual( Stem("skrevor"), "skrev");});
test("skri -> skri", function() {deepEqual( Stem("skri"), "skri");});
test("skria -> skria", function() {deepEqual( Stem("skria"), "skria");});
test("skriden -> skrid", function() {deepEqual( Stem("skriden"), "skrid");});
test("skrider -> skrid", function() {deepEqual( Stem("skrider"), "skrid");});
test("skridit -> skridit", function() {deepEqual( Stem("skridit"), "skridit");});
test("skrifning -> skrifning", function() {deepEqual( Stem("skrifning"), "skrifning");});
test("skrifpulpet -> skrifpulpet", function() {deepEqual( Stem("skrifpulpet"), "skrifpulpet");});
test("skrift -> skrift", function() {deepEqual( Stem("skrift"), "skrift");});
test("skriften -> skrift", function() {deepEqual( Stem("skriften"), "skrift");});
test("skriftens -> skrift", function() {deepEqual( Stem("skriftens"), "skrift");});
test("skrifter -> skrift", function() {deepEqual( Stem("skrifter"), "skrift");});
test("skriftligen -> skrift", function() {deepEqual( Stem("skriftligen"), "skrift");});
test("skriftligt -> skrift", function() {deepEqual( Stem("skriftligt"), "skrift");});
test("skrifttecken -> skriftteck", function() {deepEqual( Stem("skrifttecken"), "skriftteck");});
test("skrifva -> skrifv", function() {deepEqual( Stem("skrifva"), "skrifv");});
test("skrifvare -> skrifv", function() {deepEqual( Stem("skrifvare"), "skrifv");});
test("skrifvarn -> skrifvarn", function() {deepEqual( Stem("skrifvarn"), "skrifvarn");});
test("skrifver -> skrifv", function() {deepEqual( Stem("skrifver"), "skrifv");});
test("skrifvet -> skrifvet", function() {deepEqual( Stem("skrifvet"), "skrifvet");});
test("skrifvit -> skrifvit", function() {deepEqual( Stem("skrifvit"), "skrifvit");});
test("skrik -> skrik", function() {deepEqual( Stem("skrik"), "skrik");});
test("skrika -> skrik", function() {deepEqual( Stem("skrika"), "skrik");});
test("skrikande -> skrik", function() {deepEqual( Stem("skrikande"), "skrik");});
test("skriken -> skrik", function() {deepEqual( Stem("skriken"), "skrik");});
test("skriker -> skrik", function() {deepEqual( Stem("skriker"), "skrik");});
test("skriket -> skriket", function() {deepEqual( Stem("skriket"), "skriket");});
test("skrikig -> skrik", function() {deepEqual( Stem("skrikig"), "skrik");});
test("skrikit -> skrikit", function() {deepEqual( Stem("skrikit"), "skrikit");});
test("skritt -> skritt", function() {deepEqual( Stem("skritt"), "skritt");});
test("skriv -> skriv", function() {deepEqual( Stem("skriv"), "skriv");});
test("skriva -> skriv", function() {deepEqual( Stem("skriva"), "skriv");});
test("skrivarens -> skriv", function() {deepEqual( Stem("skrivarens"), "skriv");});
test("skrivas -> skriv", function() {deepEqual( Stem("skrivas"), "skriv");});
test("skrivbord -> skrivbord", function() {deepEqual( Stem("skrivbord"), "skrivbord");});
test("skrivbordet -> skrivbordet", function() {deepEqual( Stem("skrivbordet"), "skrivbordet");});
test("skrivelse -> skriv", function() {deepEqual( Stem("skrivelse"), "skriv");});
test("skrivelsen -> skriv", function() {deepEqual( Stem("skrivelsen"), "skriv");});
test("skriven -> skriv", function() {deepEqual( Stem("skriven"), "skriv");});
test("skriver -> skriv", function() {deepEqual( Stem("skriver"), "skriv");});
test("skrivet -> skrivet", function() {deepEqual( Stem("skrivet"), "skrivet");});
test("skrivit -> skrivit", function() {deepEqual( Stem("skrivit"), "skrivit");});
test("skrivits -> skrivit", function() {deepEqual( Stem("skrivits"), "skrivit");});
test("skrivkonsten -> skrivkonst", function() {deepEqual( Stem("skrivkonsten"), "skrivkonst");});
test("skrivmaterialer -> skrivmaterial", function() {deepEqual( Stem("skrivmaterialer"), "skrivmaterial");});
test("skrivna -> skrivn", function() {deepEqual( Stem("skrivna"), "skrivn");});
test("skrivning -> skrivning", function() {deepEqual( Stem("skrivning"), "skrivning");});
test("skrivpulpet -> skrivpulpet", function() {deepEqual( Stem("skrivpulpet"), "skrivpulpet");});
test("skrivpulpeten -> skrivpulpet", function() {deepEqual( Stem("skrivpulpeten"), "skrivpulpet");});
test("skrivrum -> skrivrum", function() {deepEqual( Stem("skrivrum"), "skrivrum");});
test("skrockande -> skrock", function() {deepEqual( Stem("skrockande"), "skrock");});
test("skrockfull -> skrockfull", function() {deepEqual( Stem("skrockfull"), "skrockfull");});
test("skrodör -> skrodör", function() {deepEqual( Stem("skrodör"), "skrodör");});
test("skrofliga -> skrof", function() {deepEqual( Stem("skrofliga"), "skrof");});
test("skrofvets -> skrofvet", function() {deepEqual( Stem("skrofvets"), "skrofvet");});
test("skrot -> skrot", function() {deepEqual( Stem("skrot"), "skrot");});
test("skrovlig -> skrov", function() {deepEqual( Stem("skrovlig"), "skrov");});
test("skrovliga -> skrov", function() {deepEqual( Stem("skrovliga"), "skrov");});
test("skrubb -> skrubb", function() {deepEqual( Stem("skrubb"), "skrubb");});
test("skrubba -> skrubb", function() {deepEqual( Stem("skrubba"), "skrubb");});
test("skruden -> skrud", function() {deepEqual( Stem("skruden"), "skrud");});
test("skrumpet -> skrumpet", function() {deepEqual( Stem("skrumpet"), "skrumpet");});
test("skrumpnad -> skrumpn", function() {deepEqual( Stem("skrumpnad"), "skrumpn");});
test("skrumpnade -> skrumpn", function() {deepEqual( Stem("skrumpnade"), "skrumpn");});
test("skrupler -> skrupl", function() {deepEqual( Stem("skrupler"), "skrupl");});
test("skruv -> skruv", function() {deepEqual( Stem("skruv"), "skruv");});
test("skruvade -> skruv", function() {deepEqual( Stem("skruvade"), "skruv");});
test("skruvades -> skruv", function() {deepEqual( Stem("skruvades"), "skruv");});
test("skruven -> skruv", function() {deepEqual( Stem("skruven"), "skruv");});
test("skrymtar -> skrymt", function() {deepEqual( Stem("skrymtar"), "skrymt");});
test("skrymtare -> skrymt", function() {deepEqual( Stem("skrymtare"), "skrymt");});
test("skrynkla -> skrynkl", function() {deepEqual( Stem("skrynkla"), "skrynkl");});
test("skrynklade -> skrynkl", function() {deepEqual( Stem("skrynklade"), "skrynkl");});
test("skrynklat -> skrynkl", function() {deepEqual( Stem("skrynklat"), "skrynkl");});
test("skrynklig -> skrynk", function() {deepEqual( Stem("skrynklig"), "skrynk");});
test("skrynkliga -> skrynk", function() {deepEqual( Stem("skrynkliga"), "skrynk");});
test("skryt -> skryt", function() {deepEqual( Stem("skryt"), "skryt");});
test("skryta -> skryt", function() {deepEqual( Stem("skryta"), "skryt");});
test("skrytsamhet -> skrytsam", function() {deepEqual( Stem("skrytsamhet"), "skrytsam");});
test("skräck -> skräck", function() {deepEqual( Stem("skräck"), "skräck");});
test("skräckblandad -> skräckbland", function() {deepEqual( Stem("skräckblandad"), "skräckbland");});
test("skräckfulla -> skräckfull", function() {deepEqual( Stem("skräckfulla"), "skräckfull");});
test("skräckinjagandc -> skräckinjagandc", function() {deepEqual( Stem("skräckinjagandc"), "skräckinjagandc");});
test("skräckinjagande -> skräckinjag", function() {deepEqual( Stem("skräckinjagande"), "skräckinjag");});
test("skräddare -> skrädd", function() {deepEqual( Stem("skräddare"), "skrädd");});
test("skräddarräkningen -> skräddarräkning", function() {deepEqual( Stem("skräddarräkningen"), "skräddarräkning");});
test("skräll -> skräll", function() {deepEqual( Stem("skräll"), "skräll");});
test("skrällde -> skrälld", function() {deepEqual( Stem("skrällde"), "skrälld");});
test("skrämd -> skrämd", function() {deepEqual( Stem("skrämd"), "skrämd");});
test("skrämda -> skrämd", function() {deepEqual( Stem("skrämda"), "skrämd");});
test("skrämde -> skrämd", function() {deepEqual( Stem("skrämde"), "skrämd");});
test("skrämma -> skrämm", function() {deepEqual( Stem("skrämma"), "skrämm");});
test("skrämmande -> skrämm", function() {deepEqual( Stem("skrämmande"), "skrämm");});
test("skrämmas -> skrämm", function() {deepEqual( Stem("skrämmas"), "skrämm");});
test("skrämmer -> skrämm", function() {deepEqual( Stem("skrämmer"), "skrämm");});
test("skrämsel -> skrämsel", function() {deepEqual( Stem("skrämsel"), "skrämsel");});
test("skrämseln -> skrämseln", function() {deepEqual( Stem("skrämseln"), "skrämseln");});
test("skrämt -> skrämt", function() {deepEqual( Stem("skrämt"), "skrämt");});
test("skränets -> skränet", function() {deepEqual( Stem("skränets"), "skränet");});
test("skränpatriotisk -> skränpatriotisk", function() {deepEqual( Stem("skränpatriotisk"), "skränpatriotisk");});
test("skräp -> skräp", function() {deepEqual( Stem("skräp"), "skräp");});
test("skräpa -> skräp", function() {deepEqual( Stem("skräpa"), "skräp");});
test("skräpet -> skräpet", function() {deepEqual( Stem("skräpet"), "skräpet");});
test("skräpiga -> skräp", function() {deepEqual( Stem("skräpiga"), "skräp");});
test("skräpkammare -> skräpkamm", function() {deepEqual( Stem("skräpkammare"), "skräpkamm");});
test("skräpkamrar -> skräpkamr", function() {deepEqual( Stem("skräpkamrar"), "skräpkamr");});
test("skrävlande -> skrävl", function() {deepEqual( Stem("skrävlande"), "skrävl");});
test("skrået -> skrået", function() {deepEqual( Stem("skrået"), "skrået");});
test("skröplig -> skröp", function() {deepEqual( Stem("skröplig"), "skröp");});
test("skröt -> skröt", function() {deepEqual( Stem("skröt"), "skröt");});
test("sku -> sku", function() {deepEqual( Stem("sku"), "sku");});
test("skudda -> skudd", function() {deepEqual( Stem("skudda"), "skudd");});
test("skude -> skud", function() {deepEqual( Stem("skude"), "skud");});
test("skuderade -> skuder", function() {deepEqual( Stem("skuderade"), "skuder");});
test("skuffande -> skuff", function() {deepEqual( Stem("skuffande"), "skuff");});
test("skuffen -> skuff", function() {deepEqual( Stem("skuffen"), "skuff");});
test("skug -> skug", function() {deepEqual( Stem("skug"), "skug");});
test("skugfade -> skugf", function() {deepEqual( Stem("skugfade"), "skugf");});
test("skugga -> skugg", function() {deepEqual( Stem("skugga"), "skugg");});
test("skuggad -> skugg", function() {deepEqual( Stem("skuggad"), "skugg");});
test("skuggade -> skugg", function() {deepEqual( Stem("skuggade"), "skugg");});
test("skuggades -> skugg", function() {deepEqual( Stem("skuggades"), "skugg");});
test("skuggan -> skuggan", function() {deepEqual( Stem("skuggan"), "skuggan");});
test("skuggande -> skugg", function() {deepEqual( Stem("skuggande"), "skugg");});
test("skuggans -> skuggan", function() {deepEqual( Stem("skuggans"), "skuggan");});
test("skuggar -> skugg", function() {deepEqual( Stem("skuggar"), "skugg");});
test("skuggas -> skugg", function() {deepEqual( Stem("skuggas"), "skugg");});
test("skuggats -> skuggat", function() {deepEqual( Stem("skuggats"), "skuggat");});
test("skuggbarn -> skuggbarn", function() {deepEqual( Stem("skuggbarn"), "skuggbarn");});
test("skuggiga -> skugg", function() {deepEqual( Stem("skuggiga"), "skugg");});
test("skugglika -> skugglik", function() {deepEqual( Stem("skugglika"), "skugglik");});
test("skuggliv -> skuggliv", function() {deepEqual( Stem("skuggliv"), "skuggliv");});
test("skuggor -> skugg", function() {deepEqual( Stem("skuggor"), "skugg");});
test("skuggorna -> skugg", function() {deepEqual( Stem("skuggorna"), "skugg");});
test("skuggornas -> skugg", function() {deepEqual( Stem("skuggornas"), "skugg");});
test("skuggorra -> skuggorr", function() {deepEqual( Stem("skuggorra"), "skuggorr");});
test("skuggpartierna -> skuggparti", function() {deepEqual( Stem("skuggpartierna"), "skuggparti");});
test("skuggrikaste -> skuggrik", function() {deepEqual( Stem("skuggrikaste"), "skuggrik");});
test("skuggsidor -> skuggsid", function() {deepEqual( Stem("skuggsidor"), "skuggsid");});
test("skuggspel -> skuggspel", function() {deepEqual( Stem("skuggspel"), "skuggspel");});
test("skul -> skul", function() {deepEqual( Stem("skul"), "skul");});
test("skuld -> skuld", function() {deepEqual( Stem("skuld"), "skuld");});
test("skulda -> skuld", function() {deepEqual( Stem("skulda"), "skuld");});
test("skulden -> skuld", function() {deepEqual( Stem("skulden"), "skuld");});
test("skulder -> skuld", function() {deepEqual( Stem("skulder"), "skuld");});
test("skuldfritt -> skuldfrit", function() {deepEqual( Stem("skuldfritt"), "skuldfrit");});
test("skuldförbindelser -> skuldförbind", function() {deepEqual( Stem("skuldförbindelser"), "skuldförbind");});
test("skuldmedveten -> skuldmedvet", function() {deepEqual( Stem("skuldmedveten"), "skuldmedvet");});
test("skuldran -> skuldran", function() {deepEqual( Stem("skuldran"), "skuldran");});
test("skuldregister -> skuldregist", function() {deepEqual( Stem("skuldregister"), "skuldregist");});
test("skuldror -> skuldr", function() {deepEqual( Stem("skuldror"), "skuldr");});
test("skuldrorna -> skuldr", function() {deepEqual( Stem("skuldrorna"), "skuldr");});
test("skuldsedel -> skuldsedel", function() {deepEqual( Stem("skuldsedel"), "skuldsedel");});
test("skuli -> skuli", function() {deepEqual( Stem("skuli"), "skuli");});
test("skulie -> skuli", function() {deepEqual( Stem("skulie"), "skuli");});
test("skull -> skull", function() {deepEqual( Stem("skull"), "skull");});
test("skullc -> skullc", function() {deepEqual( Stem("skullc"), "skullc");});
test("skulle -> skull", function() {deepEqual( Stem("skulle"), "skull");});
test("skullen -> skull", function() {deepEqual( Stem("skullen"), "skull");});
test("skulptur -> skulptur", function() {deepEqual( Stem("skulptur"), "skulptur");});
test("skulpturverk -> skulpturverk", function() {deepEqual( Stem("skulpturverk"), "skulpturverk");});
test("skum -> skum", function() {deepEqual( Stem("skum"), "skum");});
test("skumhylt -> skumhylt", function() {deepEqual( Stem("skumhylt"), "skumhylt");});
test("skumma -> skumm", function() {deepEqual( Stem("skumma"), "skumm");});
test("skummande -> skumm", function() {deepEqual( Stem("skummande"), "skumm");});
test("skummaste -> skumm", function() {deepEqual( Stem("skummaste"), "skumm");});
test("skummet -> skummet", function() {deepEqual( Stem("skummet"), "skummet");});
test("skummig -> skumm", function() {deepEqual( Stem("skummig"), "skumm");});
test("skumpärlorna -> skumpärl", function() {deepEqual( Stem("skumpärlorna"), "skumpärl");});
test("skumt -> skumt", function() {deepEqual( Stem("skumt"), "skumt");});
test("skumögd -> skumög", function() {deepEqual( Stem("skumögd"), "skumög");});
test("skura -> skur", function() {deepEqual( Stem("skura"), "skur");});
test("skurade -> skur", function() {deepEqual( Stem("skurade"), "skur");});
test("skurborste -> skurborst", function() {deepEqual( Stem("skurborste"), "skurborst");});
test("skuren -> skur", function() {deepEqual( Stem("skuren"), "skur");});
test("skurit -> skurit", function() {deepEqual( Stem("skurit"), "skurit");});
test("skurk -> skurk", function() {deepEqual( Stem("skurk"), "skurk");});
test("skurken -> skurk", function() {deepEqual( Stem("skurken"), "skurk");});
test("skurna -> skurn", function() {deepEqual( Stem("skurna"), "skurn");});
test("skuro -> skuro", function() {deepEqual( Stem("skuro"), "skuro");});
test("skuta -> skut", function() {deepEqual( Stem("skuta"), "skut");});
test("skutan -> skutan", function() {deepEqual( Stem("skutan"), "skutan");});
test("skutans -> skutan", function() {deepEqual( Stem("skutans"), "skutan");});
test("skutt -> skutt", function() {deepEqual( Stem("skutt"), "skutt");});
test("skuzle -> skuzl", function() {deepEqual( Stem("skuzle"), "skuzl");});
test("skvalar -> skval", function() {deepEqual( Stem("skvalar"), "skval");});
test("skvallersjuka -> skvallersjuk", function() {deepEqual( Stem("skvallersjuka"), "skvallersjuk");});
test("skvallerspeglar -> skvallerspegl", function() {deepEqual( Stem("skvallerspeglar"), "skvallerspegl");});
test("skvallra -> skvallr", function() {deepEqual( Stem("skvallra"), "skvallr");});
test("skvallrade -> skvallr", function() {deepEqual( Stem("skvallrade"), "skvallr");});
test("skvallrar -> skvallr", function() {deepEqual( Stem("skvallrar"), "skvallr");});
test("skvalpade -> skvalp", function() {deepEqual( Stem("skvalpade"), "skvalp");});
test("skvaltar -> skvalt", function() {deepEqual( Stem("skvaltar"), "skvalt");});
test("skvdda -> skvdda", function() {deepEqual( Stem("skvdda"), "skvdda");});
test("sky -> sky", function() {deepEqual( Stem("sky"), "sky");});
test("skyar -> skyar", function() {deepEqual( Stem("skyar"), "skyar");});
test("skyarna -> skyarn", function() {deepEqual( Stem("skyarna"), "skyarn");});
test("skydd -> skydd", function() {deepEqual( Stem("skydd"), "skydd");});
test("skydda -> skydd", function() {deepEqual( Stem("skydda"), "skydd");});
test("skyddade -> skydd", function() {deepEqual( Stem("skyddade"), "skydd");});
test("skyddadt -> skyddad", function() {deepEqual( Stem("skyddadt"), "skyddad");});
test("skyddande -> skydd", function() {deepEqual( Stem("skyddande"), "skydd");});
test("skyddar -> skydd", function() {deepEqual( Stem("skyddar"), "skydd");});
test("skyddas -> skydd", function() {deepEqual( Stem("skyddas"), "skydd");});
test("skydde -> skydd", function() {deepEqual( Stem("skydde"), "skydd");});
test("skyddsengel -> skyddsengel", function() {deepEqual( Stem("skyddsengel"), "skyddsengel");});
test("skyddsling -> skyddsling", function() {deepEqual( Stem("skyddsling"), "skyddsling");});
test("skyddslingar -> skyddsling", function() {deepEqual( Stem("skyddslingar"), "skyddsling");});
test("skyddslings -> skyddsling", function() {deepEqual( Stem("skyddslings"), "skyddsling");});
test("skygg -> skygg", function() {deepEqual( Stem("skygg"), "skygg");});
test("skygga -> skygg", function() {deepEqual( Stem("skygga"), "skygg");});
test("skyggt -> skygg", function() {deepEqual( Stem("skyggt"), "skygg");});
test("skyhimmel -> skyhimmel", function() {deepEqual( Stem("skyhimmel"), "skyhimmel");});
test("skyhöga -> skyhög", function() {deepEqual( Stem("skyhöga"), "skyhög");});
test("skyla -> skyl", function() {deepEqual( Stem("skyla"), "skyl");});
test("skylde -> skyld", function() {deepEqual( Stem("skylde"), "skyld");});
test("skyldes -> skyld", function() {deepEqual( Stem("skyldes"), "skyld");});
test("skyldig -> skyld", function() {deepEqual( Stem("skyldig"), "skyld");});
test("skyldiga -> skyld", function() {deepEqual( Stem("skyldiga"), "skyld");});
test("skyldighet -> skyld", function() {deepEqual( Stem("skyldighet"), "skyld");});
test("skyldigheten -> skyld", function() {deepEqual( Stem("skyldigheten"), "skyld");});
test("skyldigheter -> skyld", function() {deepEqual( Stem("skyldigheter"), "skyld");});
test("skyldrade -> skyldr", function() {deepEqual( Stem("skyldrade"), "skyldr");});
test("skylla -> skyll", function() {deepEqual( Stem("skylla"), "skyll");});
test("skyllde -> skylld", function() {deepEqual( Stem("skyllde"), "skylld");});
test("skylt -> skylt", function() {deepEqual( Stem("skylt"), "skylt");});
test("skyltade -> skylt", function() {deepEqual( Stem("skyltade"), "skylt");});
test("skylten -> skylt", function() {deepEqual( Stem("skylten"), "skylt");});
test("skyltfönster -> skyltfönst", function() {deepEqual( Stem("skyltfönster"), "skyltfönst");});
test("skym -> skym", function() {deepEqual( Stem("skym"), "skym");});
test("skymassorna -> skymass", function() {deepEqual( Stem("skymassorna"), "skymass");});
test("skymd -> skymd", function() {deepEqual( Stem("skymd"), "skymd");});
test("skymde -> skymd", function() {deepEqual( Stem("skymde"), "skymd");});
test("skymf -> skymf", function() {deepEqual( Stem("skymf"), "skymf");});
test("skymfa -> skymf", function() {deepEqual( Stem("skymfa"), "skymf");});
test("skymfad -> skymf", function() {deepEqual( Stem("skymfad"), "skymf");});
test("skymfande -> skymf", function() {deepEqual( Stem("skymfande"), "skymf");});
test("skymfen -> skymf", function() {deepEqual( Stem("skymfen"), "skymf");});
test("skymflig -> skymf", function() {deepEqual( Stem("skymflig"), "skymf");});
test("skymfligt -> skymf", function() {deepEqual( Stem("skymfligt"), "skymf");});
test("skymlande -> skyml", function() {deepEqual( Stem("skymlande"), "skyml");});
test("skymma -> skymm", function() {deepEqual( Stem("skymma"), "skymm");});
test("skymmande -> skymm", function() {deepEqual( Stem("skymmande"), "skymm");});
test("skymning -> skymning", function() {deepEqual( Stem("skymning"), "skymning");});
test("skymningen -> skymning", function() {deepEqual( Stem("skymningen"), "skymning");});
test("skymningens -> skymning", function() {deepEqual( Stem("skymningens"), "skymning");});
test("skymningsalfernas -> skymningsalf", function() {deepEqual( Stem("skymningsalfernas"), "skymningsalf");});
test("skymningsdager -> skymningsdag", function() {deepEqual( Stem("skymningsdager"), "skymningsdag");});
test("skymningsstora -> skymningsstor", function() {deepEqual( Stem("skymningsstora"), "skymningsstor");});
test("skymningstärnan -> skymningstärnan", function() {deepEqual( Stem("skymningstärnan"), "skymningstärnan");});
test("skymt -> skymt", function() {deepEqual( Stem("skymt"), "skymt");});
test("skymta -> skymt", function() {deepEqual( Stem("skymta"), "skymt");});
test("skymtade -> skymt", function() {deepEqual( Stem("skymtade"), "skymt");});
test("skymtar -> skymt", function() {deepEqual( Stem("skymtar"), "skymt");});
test("skymtat -> skymt", function() {deepEqual( Stem("skymtat"), "skymt");});
test("skymten -> skymt", function() {deepEqual( Stem("skymten"), "skymt");});
test("skyn -> skyn", function() {deepEqual( Stem("skyn"), "skyn");});
test("skynda -> skynd", function() {deepEqual( Stem("skynda"), "skynd");});
test("skyndade -> skynd", function() {deepEqual( Stem("skyndade"), "skynd");});
test("skyndar -> skynd", function() {deepEqual( Stem("skyndar"), "skynd");});
test("skyndat -> skynd", function() {deepEqual( Stem("skyndat"), "skynd");});
test("skynden -> skynd", function() {deepEqual( Stem("skynden"), "skynd");});
test("skyndsamhet -> skyndsam", function() {deepEqual( Stem("skyndsamhet"), "skyndsam");});
test("skyndsamt -> skyndsamt", function() {deepEqual( Stem("skyndsamt"), "skyndsamt");});
test("skyr -> skyr", function() {deepEqual( Stem("skyr"), "skyr");});
test("skytrasorna -> skytras", function() {deepEqual( Stem("skytrasorna"), "skytras");});
test("skytt -> skytt", function() {deepEqual( Stem("skytt"), "skytt");});
test("skyttarne -> skytt", function() {deepEqual( Stem("skyttarne"), "skytt");});
test("skyttelen -> skyttel", function() {deepEqual( Stem("skyttelen"), "skyttel");});
test("skytten -> skytt", function() {deepEqual( Stem("skytten"), "skytt");});
test("skytteriet -> skytteriet", function() {deepEqual( Stem("skytteriet"), "skytteriet");});
test("skyvar -> skyv", function() {deepEqual( Stem("skyvar"), "skyv");});
test("skäckiga -> skäck", function() {deepEqual( Stem("skäckiga"), "skäck");});
test("skägg -> skägg", function() {deepEqual( Stem("skägg"), "skägg");});
test("skäggbotten -> skäggbot", function() {deepEqual( Stem("skäggbotten"), "skäggbot");});
test("skägget -> skägget", function() {deepEqual( Stem("skägget"), "skägget");});
test("skäggig -> skägg", function() {deepEqual( Stem("skäggig"), "skägg");});
test("skäl -> skäl", function() {deepEqual( Stem("skäl"), "skäl");});
test("skälet -> skälet", function() {deepEqual( Stem("skälet"), "skälet");});
test("skälfvande -> skälfv", function() {deepEqual( Stem("skälfvande"), "skälfv");});
test("skälla -> skäll", function() {deepEqual( Stem("skälla"), "skäll");});
test("skällande -> skäll", function() {deepEqual( Stem("skällande"), "skäll");});
test("skällde -> skälld", function() {deepEqual( Stem("skällde"), "skälld");});
test("skäller -> skäll", function() {deepEqual( Stem("skäller"), "skäll");});
test("skälles -> skäll", function() {deepEqual( Stem("skälles"), "skäll");});
test("skälm -> skälm", function() {deepEqual( Stem("skälm"), "skälm");});
test("skälmaktig -> skälmakt", function() {deepEqual( Stem("skälmaktig"), "skälmakt");});
test("skälmen -> skälm", function() {deepEqual( Stem("skälmen"), "skälm");});
test("skälmska -> skälmsk", function() {deepEqual( Stem("skälmska"), "skälmsk");});
test("skälmstycken -> skälmstyck", function() {deepEqual( Stem("skälmstycken"), "skälmstyck");});
test("skälva -> skälv", function() {deepEqual( Stem("skälva"), "skälv");});
test("skälvande -> skälv", function() {deepEqual( Stem("skälvande"), "skälv");});
test("skälvde -> skälvd", function() {deepEqual( Stem("skälvde"), "skälvd");});
test("skälver -> skälv", function() {deepEqual( Stem("skälver"), "skälv");});
test("skälvosot -> skälvosot", function() {deepEqual( Stem("skälvosot"), "skälvosot");});
test("skäm -> skäm", function() {deepEqual( Stem("skäm"), "skäm");});
test("skämda -> skämd", function() {deepEqual( Stem("skämda"), "skämd");});
test("skämde -> skämd", function() {deepEqual( Stem("skämde"), "skämd");});
test("skämdes -> skämd", function() {deepEqual( Stem("skämdes"), "skämd");});
test("skämmas -> skämm", function() {deepEqual( Stem("skämmas"), "skämm");});
test("skämmer -> skämm", function() {deepEqual( Stem("skämmer"), "skämm");});
test("skäms -> skäm", function() {deepEqual( Stem("skäms"), "skäm");});
test("skämt -> skämt", function() {deepEqual( Stem("skämt"), "skämt");});
test("skämta -> skämt", function() {deepEqual( Stem("skämta"), "skämt");});
test("skämtade -> skämt", function() {deepEqual( Stem("skämtade"), "skämt");});
test("skämtande -> skämt", function() {deepEqual( Stem("skämtande"), "skämt");});
test("skämtar -> skämt", function() {deepEqual( Stem("skämtar"), "skämt");});
test("skämtet -> skämtet", function() {deepEqual( Stem("skämtet"), "skämtet");});
test("skämtsam -> skämtsam", function() {deepEqual( Stem("skämtsam"), "skämtsam");});
test("skämtsamhet -> skämtsam", function() {deepEqual( Stem("skämtsamhet"), "skämtsam");});
test("skämtsamma -> skämtsamm", function() {deepEqual( Stem("skämtsamma"), "skämtsamm");});
test("skämtsamt -> skämtsamt", function() {deepEqual( Stem("skämtsamt"), "skämtsamt");});
test("skämttidningarnas -> skämttidning", function() {deepEqual( Stem("skämttidningarnas"), "skämttidning");});
test("skändar -> skänd", function() {deepEqual( Stem("skändar"), "skänd");});
test("skändas -> skänd", function() {deepEqual( Stem("skändas"), "skänd");});
test("skänk -> skänk", function() {deepEqual( Stem("skänk"), "skänk");});
test("skänka -> skänk", function() {deepEqual( Stem("skänka"), "skänk");});
test("skänken -> skänk", function() {deepEqual( Stem("skänken"), "skänk");});
test("skänker -> skänk", function() {deepEqual( Stem("skänker"), "skänk");});
test("skänks -> skänk", function() {deepEqual( Stem("skänks"), "skänk");});
test("skänkt -> skänk", function() {deepEqual( Stem("skänkt"), "skänk");});
test("skänkte -> skänk", function() {deepEqual( Stem("skänkte"), "skänk");});
test("skänkts -> skänk", function() {deepEqual( Stem("skänkts"), "skänk");});
test("skäppa -> skäpp", function() {deepEqual( Stem("skäppa"), "skäpp");});
test("skäppan -> skäppan", function() {deepEqual( Stem("skäppan"), "skäppan");});
test("skär -> skär", function() {deepEqual( Stem("skär"), "skär");});
test("skära -> skär", function() {deepEqual( Stem("skära"), "skär");});
test("skäran -> skäran", function() {deepEqual( Stem("skäran"), "skäran");});
test("skärande -> skär", function() {deepEqual( Stem("skärande"), "skär");});
test("skärat -> skär", function() {deepEqual( Stem("skärat"), "skär");});
test("skären -> skär", function() {deepEqual( Stem("skären"), "skär");});
test("skärgård -> skärgård", function() {deepEqual( Stem("skärgård"), "skärgård");});
test("skärgården -> skärgård", function() {deepEqual( Stem("skärgården"), "skärgård");});
test("skärgårdens -> skärgård", function() {deepEqual( Stem("skärgårdens"), "skärgård");});
test("skärgårds -> skärgård", function() {deepEqual( Stem("skärgårds"), "skärgård");});
test("skärgårdsbos -> skärgårdsbo", function() {deepEqual( Stem("skärgårdsbos"), "skärgårdsbo");});
test("skärgårdsbåtarna -> skärgårdsbåt", function() {deepEqual( Stem("skärgårdsbåtarna"), "skärgårdsbåt");});
test("skärgårdselände -> skärgårdseländ", function() {deepEqual( Stem("skärgårdselände"), "skärgårdseländ");});
test("skärgårdsflicka -> skärgårdsflick", function() {deepEqual( Stem("skärgårdsflicka"), "skärgårdsflick");});
test("skärgårdsfolkets -> skärgårdsfolket", function() {deepEqual( Stem("skärgårdsfolkets"), "skärgårdsfolket");});
test("skärgårdslifvet -> skärgårdslifvet", function() {deepEqual( Stem("skärgårdslifvet"), "skärgårdslifvet");});
test("skärgårdsmö -> skärgårdsmö", function() {deepEqual( Stem("skärgårdsmö"), "skärgårdsmö");});
test("skärgårdstärnan -> skärgårdstärnan", function() {deepEqual( Stem("skärgårdstärnan"), "skärgårdstärnan");});
test("skärhet -> skär", function() {deepEqual( Stem("skärhet"), "skär");});
test("skärm -> skärm", function() {deepEqual( Stem("skärm"), "skärm");});
test("skärmarne -> skärm", function() {deepEqual( Stem("skärmarne"), "skärm");});
test("skärmen -> skärm", function() {deepEqual( Stem("skärmen"), "skärm");});
test("skärmens -> skärm", function() {deepEqual( Stem("skärmens"), "skärm");});
test("skärpa -> skärp", function() {deepEqual( Stem("skärpa"), "skärp");});
test("skärper -> skärp", function() {deepEqual( Stem("skärper"), "skärp");});
test("skärpta -> skärpt", function() {deepEqual( Stem("skärpta"), "skärpt");});
test("skärpte -> skärpt", function() {deepEqual( Stem("skärpte"), "skärpt");});
test("skärseld -> skärseld", function() {deepEqual( Stem("skärseld"), "skärseld");});
test("skärt -> skärt", function() {deepEqual( Stem("skärt"), "skärt");});
test("skärv -> skärv", function() {deepEqual( Stem("skärv"), "skärv");});
test("skärvor -> skärv", function() {deepEqual( Stem("skärvor"), "skärv");});
test("skåda -> skåd", function() {deepEqual( Stem("skåda"), "skåd");});
test("skådad -> skåd", function() {deepEqual( Stem("skådad"), "skåd");});
test("skådade -> skåd", function() {deepEqual( Stem("skådade"), "skåd");});
test("skådande -> skåd", function() {deepEqual( Stem("skådande"), "skåd");});
test("skådat -> skåd", function() {deepEqual( Stem("skådat"), "skåd");});
test("skådespel -> skådespel", function() {deepEqual( Stem("skådespel"), "skådespel");});
test("skådespelare -> skådespel", function() {deepEqual( Stem("skådespelare"), "skådespel");});
test("skådespelaren -> skådespel", function() {deepEqual( Stem("skådespelaren"), "skådespel");});
test("skådespelarna -> skådespel", function() {deepEqual( Stem("skådespelarna"), "skådespel");});
test("skådespelerskor -> skådespelersk", function() {deepEqual( Stem("skådespelerskor"), "skådespelersk");});
test("skådespelet -> skådespelet", function() {deepEqual( Stem("skådespelet"), "skådespelet");});
test("skål -> skål", function() {deepEqual( Stem("skål"), "skål");});
test("skåla -> skål", function() {deepEqual( Stem("skåla"), "skål");});
test("skålen -> skål", function() {deepEqual( Stem("skålen"), "skål");});
test("skåll -> skåll", function() {deepEqual( Stem("skåll"), "skåll");});
test("skålpund -> skålpund", function() {deepEqual( Stem("skålpund"), "skålpund");});
test("skåmtade -> skåmt", function() {deepEqual( Stem("skåmtade"), "skåmt");});
test("skåne -> skån", function() {deepEqual( Stem("skåne"), "skån");});
test("skåp -> skåp", function() {deepEqual( Stem("skåp"), "skåp");});
test("skåpdörren -> skåpdörr", function() {deepEqual( Stem("skåpdörren"), "skåpdörr");});
test("skåpet -> skåpet", function() {deepEqual( Stem("skåpet"), "skåpet");});
test("skökor -> skök", function() {deepEqual( Stem("skökor"), "skök");});
test("sköld -> sköld", function() {deepEqual( Stem("sköld"), "sköld");});
test("sköldborg -> sköldborg", function() {deepEqual( Stem("sköldborg"), "sköldborg");});
test("skölj -> skölj", function() {deepEqual( Stem("skölj"), "skölj");});
test("skölja -> skölj", function() {deepEqual( Stem("skölja"), "skölj");});
test("sköljde -> sköljd", function() {deepEqual( Stem("sköljde"), "sköljd");});
test("sköljer -> skölj", function() {deepEqual( Stem("sköljer"), "skölj");});
test("sköljt -> sköljt", function() {deepEqual( Stem("sköljt"), "sköljt");});
test("skön -> skön", function() {deepEqual( Stem("skön"), "skön");});
test("sköna -> skön", function() {deepEqual( Stem("sköna"), "skön");});
test("skönare -> skön", function() {deepEqual( Stem("skönare"), "skön");});
test("skönaste -> skön", function() {deepEqual( Stem("skönaste"), "skön");});
test("skönhet -> skön", function() {deepEqual( Stem("skönhet"), "skön");});
test("skönheten -> skön", function() {deepEqual( Stem("skönheten"), "skön");});
test("skönhetens -> skön", function() {deepEqual( Stem("skönhetens"), "skön");});
test("skönheter -> skön", function() {deepEqual( Stem("skönheter"), "skön");});
test("skönhetssinne -> skönhetssin", function() {deepEqual( Stem("skönhetssinne"), "skönhetssin");});
test("skönja -> skönj", function() {deepEqual( Stem("skönja"), "skönj");});
test("skönjbara -> skönjbar", function() {deepEqual( Stem("skönjbara"), "skönjbar");});
test("skönjde -> skönjd", function() {deepEqual( Stem("skönjde"), "skönjd");});
test("skönjdes -> skönjd", function() {deepEqual( Stem("skönjdes"), "skönjd");});
test("skönjs -> skönj", function() {deepEqual( Stem("skönjs"), "skönj");});
test("sköns -> skön", function() {deepEqual( Stem("sköns"), "skön");});
test("skönt -> skönt", function() {deepEqual( Stem("skönt"), "skönt");});
test("skör -> skör", function() {deepEqual( Stem("skör"), "skör");});
test("skörd -> skörd", function() {deepEqual( Stem("skörd"), "skörd");});
test("skörda -> skörd", function() {deepEqual( Stem("skörda"), "skörd");});
test("skördar -> skörd", function() {deepEqual( Stem("skördar"), "skörd");});
test("skördat -> skörd", function() {deepEqual( Stem("skördat"), "skörd");});
test("skördemogna -> skördemogn", function() {deepEqual( Stem("skördemogna"), "skördemogn");});
test("skörlevnad -> skörlevn", function() {deepEqual( Stem("skörlevnad"), "skörlevn");});
test("skört -> skört", function() {deepEqual( Stem("skört"), "skört");});
test("sköt -> sköt", function() {deepEqual( Stem("sköt"), "sköt");});
test("sköta -> sköt", function() {deepEqual( Stem("sköta"), "sköt");});
test("sköte -> sköt", function() {deepEqual( Stem("sköte"), "sköt");});
test("sköter -> sköt", function() {deepEqual( Stem("sköter"), "sköt");});
test("sköterska -> skötersk", function() {deepEqual( Stem("sköterska"), "skötersk");});
test("sköterskam -> sköterskam", function() {deepEqual( Stem("sköterskam"), "sköterskam");});
test("sköterskan -> sköterskan", function() {deepEqual( Stem("sköterskan"), "sköterskan");});
test("sköterskorna -> skötersk", function() {deepEqual( Stem("sköterskorna"), "skötersk");});
test("skötet -> skötet", function() {deepEqual( Stem("skötet"), "skötet");});
test("sköto -> sköto", function() {deepEqual( Stem("sköto"), "sköto");});
test("sköts -> sköt", function() {deepEqual( Stem("sköts"), "sköt");});
test("skött -> skött", function() {deepEqual( Stem("skött"), "skött");});
test("skötte -> skött", function() {deepEqual( Stem("skötte"), "skött");});
test("sköttes -> skött", function() {deepEqual( Stem("sköttes"), "skött");});
test("skövla -> skövl", function() {deepEqual( Stem("skövla"), "skövl");});
test("sl -> sl", function() {deepEqual( Stem("sl"), "sl");});
test("sladder -> sladd", function() {deepEqual( Stem("sladder"), "sladd");});
test("sladdra -> sladdr", function() {deepEqual( Stem("sladdra"), "sladdr");});
test("sladdrar -> sladdr", function() {deepEqual( Stem("sladdrar"), "sladdr");});
test("slaflif -> slaflif", function() {deepEqual( Stem("slaflif"), "slaflif");});
test("slag -> slag", function() {deepEqual( Stem("slag"), "slag");});
test("slaganfall -> slaganfall", function() {deepEqual( Stem("slaganfall"), "slaganfall");});
test("slagattack -> slagattack", function() {deepEqual( Stem("slagattack"), "slagattack");});
test("slagbordet -> slagbordet", function() {deepEqual( Stem("slagbordet"), "slagbordet");});
test("slagdänga -> slagdäng", function() {deepEqual( Stem("slagdänga"), "slagdäng");});
test("slagdängor -> slagdäng", function() {deepEqual( Stem("slagdängor"), "slagdäng");});
test("slagen -> slag", function() {deepEqual( Stem("slagen"), "slag");});
test("slaget -> slaget", function() {deepEqual( Stem("slaget"), "slaget");});
test("slagfältet -> slagfältet", function() {deepEqual( Stem("slagfältet"), "slagfältet");});
test("slagit -> slagit", function() {deepEqual( Stem("slagit"), "slagit");});
test("slagits -> slagit", function() {deepEqual( Stem("slagits"), "slagit");});
test("slagna -> slagn", function() {deepEqual( Stem("slagna"), "slagn");});
test("slags -> slag", function() {deepEqual( Stem("slags"), "slag");});
test("slagskämpe -> slagskämp", function() {deepEqual( Stem("slagskämpe"), "slagskämp");});
test("slaka -> slak", function() {deepEqual( Stem("slaka"), "slak");});
test("slakt -> slakt", function() {deepEqual( Stem("slakt"), "slakt");});
test("slaktat -> slakt", function() {deepEqual( Stem("slaktat"), "slakt");});
test("slakthus -> slakthus", function() {deepEqual( Stem("slakthus"), "slakthus");});
test("slam -> slam", function() {deepEqual( Stem("slam"), "slam");});
test("slammer -> slamm", function() {deepEqual( Stem("slammer"), "slamm");});
test("slamrande -> slamr", function() {deepEqual( Stem("slamrande"), "slamr");});
test("slamret -> slamret", function() {deepEqual( Stem("slamret"), "slamret");});
test("slang -> slang", function() {deepEqual( Stem("slang"), "slang");});
test("slangbågar -> slangbåg", function() {deepEqual( Stem("slangbågar"), "slangbåg");});
test("slangbåge -> slangbåg", function() {deepEqual( Stem("slangbåge"), "slangbåg");});
test("slank -> slank", function() {deepEqual( Stem("slank"), "slank");});
test("slanka -> slank", function() {deepEqual( Stem("slanka"), "slank");});
test("slannade -> slann", function() {deepEqual( Stem("slannade"), "slann");});
test("slant -> slant", function() {deepEqual( Stem("slant"), "slant");});
test("slantar -> slant", function() {deepEqual( Stem("slantar"), "slant");});
test("slapp -> slapp", function() {deepEqual( Stem("slapp"), "slapp");});
test("slappa -> slapp", function() {deepEqual( Stem("slappa"), "slapp");});
test("slappfeta -> slappfet", function() {deepEqual( Stem("slappfeta"), "slappfet");});
test("slapphet -> slapp", function() {deepEqual( Stem("slapphet"), "slapp");});
test("slappna -> slappn", function() {deepEqual( Stem("slappna"), "slappn");});
test("slappt -> slappt", function() {deepEqual( Stem("slappt"), "slappt");});
test("slappte -> slappt", function() {deepEqual( Stem("slappte"), "slappt");});
test("slar -> slar", function() {deepEqual( Stem("slar"), "slar");});
test("slarf -> slarf", function() {deepEqual( Stem("slarf"), "slarf");});
test("slarfva -> slarfv", function() {deepEqual( Stem("slarfva"), "slarfv");});
test("slarvig -> slarv", function() {deepEqual( Stem("slarvig"), "slarv");});
test("slaskig -> slask", function() {deepEqual( Stem("slaskig"), "slask");});
test("slav -> slav", function() {deepEqual( Stem("slav"), "slav");});
test("slaveri -> slaveri", function() {deepEqual( Stem("slaveri"), "slaveri");});
test("slavinna -> slavin", function() {deepEqual( Stem("slavinna"), "slavin");});
test("slculle -> slcull", function() {deepEqual( Stem("slculle"), "slcull");});
test("sldgo -> sldgo", function() {deepEqual( Stem("sldgo"), "sldgo");});
test("slemmig -> slemm", function() {deepEqual( Stem("slemmig"), "slemm");});
test("slemmiga -> slemm", function() {deepEqual( Stem("slemmiga"), "slemm");});
test("slet -> slet", function() {deepEqual( Stem("slet"), "slet");});
test("sleto -> sleto", function() {deepEqual( Stem("sleto"), "sleto");});
test("sletos -> sleto", function() {deepEqual( Stem("sletos"), "sleto");});
test("slets -> slet", function() {deepEqual( Stem("slets"), "slet");});
test("slg -> slg", function() {deepEqual( Stem("slg"), "slg");});
test("slicka -> slick", function() {deepEqual( Stem("slicka"), "slick");});
test("slickadc -> slickadc", function() {deepEqual( Stem("slickadc"), "slickadc");});
test("slickade -> slick", function() {deepEqual( Stem("slickade"), "slick");});
test("slickande -> slick", function() {deepEqual( Stem("slickande"), "slick");});
test("slickar -> slick", function() {deepEqual( Stem("slickar"), "slick");});
test("slida -> slid", function() {deepEqual( Stem("slida"), "slid");});
test("slikt -> slikt", function() {deepEqual( Stem("slikt"), "slikt");});
test("slinga -> sling", function() {deepEqual( Stem("slinga"), "sling");});
test("slingor -> sling", function() {deepEqual( Stem("slingor"), "sling");});
test("slingorna -> sling", function() {deepEqual( Stem("slingorna"), "sling");});
test("slingra -> slingr", function() {deepEqual( Stem("slingra"), "slingr");});
test("slingrade -> slingr", function() {deepEqual( Stem("slingrade"), "slingr");});
test("slingrande -> slingr", function() {deepEqual( Stem("slingrande"), "slingr");});
test("slingrar -> slingr", function() {deepEqual( Stem("slingrar"), "slingr");});
test("slingrat -> slingr", function() {deepEqual( Stem("slingrat"), "slingr");});
test("slingriga -> slingr", function() {deepEqual( Stem("slingriga"), "slingr");});
test("slingringarne -> slingring", function() {deepEqual( Stem("slingringarne"), "slingring");});
test("slinh -> slinh", function() {deepEqual( Stem("slinh"), "slinh");});
test("slinka -> slink", function() {deepEqual( Stem("slinka"), "slink");});
test("slinker -> slink", function() {deepEqual( Stem("slinker"), "slink");});
test("slinta -> slint", function() {deepEqual( Stem("slinta"), "slint");});
test("slipad -> slip", function() {deepEqual( Stem("slipad"), "slip");});
test("slipade -> slip", function() {deepEqual( Stem("slipade"), "slip");});
test("slippa -> slipp", function() {deepEqual( Stem("slippa"), "slipp");});
test("slipper -> slipp", function() {deepEqual( Stem("slipper"), "slipp");});
test("slipprigt -> slippr", function() {deepEqual( Stem("slipprigt"), "slippr");});
test("slips -> slip", function() {deepEqual( Stem("slips"), "slip");});
test("sliskiga -> slisk", function() {deepEqual( Stem("sliskiga"), "slisk");});
test("sliskigaste -> slisk", function() {deepEqual( Stem("sliskigaste"), "slisk");});
test("slita -> slit", function() {deepEqual( Stem("slita"), "slit");});
test("slitande -> slit", function() {deepEqual( Stem("slitande"), "slit");});
test("slitas -> slit", function() {deepEqual( Stem("slitas"), "slit");});
test("sliten -> slit", function() {deepEqual( Stem("sliten"), "slit");});
test("slitit -> slitit", function() {deepEqual( Stem("slitit"), "slitit");});
test("slitits -> slitit", function() {deepEqual( Stem("slitits"), "slitit");});
test("slitna -> slitn", function() {deepEqual( Stem("slitna"), "slitn");});
test("slitningar -> slitning", function() {deepEqual( Stem("slitningar"), "slitning");});
test("slits -> slit", function() {deepEqual( Stem("slits"), "slit");});
test("slitstarkt -> slitstark", function() {deepEqual( Stem("slitstarkt"), "slitstark");});
test("slock -> slock", function() {deepEqual( Stem("slock"), "slock");});
test("slockna -> slockn", function() {deepEqual( Stem("slockna"), "slockn");});
test("slocknade -> slockn", function() {deepEqual( Stem("slocknade"), "slockn");});
test("slocknande -> slockn", function() {deepEqual( Stem("slocknande"), "slockn");});
test("slocknar -> slockn", function() {deepEqual( Stem("slocknar"), "slockn");});
test("slocknat -> slockn", function() {deepEqual( Stem("slocknat"), "slockn");});
test("slog -> slog", function() {deepEqual( Stem("slog"), "slog");});
test("sloge -> slog", function() {deepEqual( Stem("sloge"), "slog");});
test("slogo -> slogo", function() {deepEqual( Stem("slogo"), "slogo");});
test("slogos -> slogo", function() {deepEqual( Stem("slogos"), "slogo");});
test("slogs -> slog", function() {deepEqual( Stem("slogs"), "slog");});
test("sloka -> slok", function() {deepEqual( Stem("sloka"), "slok");});
test("slokad -> slok", function() {deepEqual( Stem("slokad"), "slok");});
test("slokande -> slok", function() {deepEqual( Stem("slokande"), "slok");});
test("slokar -> slok", function() {deepEqual( Stem("slokar"), "slok");});
test("slot -> slot", function() {deepEqual( Stem("slot"), "slot");});
test("slott -> slott", function() {deepEqual( Stem("slott"), "slott");});
test("slottet -> slottet", function() {deepEqual( Stem("slottet"), "slottet");});
test("slottsfasaden -> slottsfasad", function() {deepEqual( Stem("slottsfasaden"), "slottsfasad");});
test("slottskanslibetjänt -> slottskanslibetjänt", function() {deepEqual( Stem("slottskanslibetjänt"), "slottskanslibetjänt");});
test("slottskanslibetjänter -> slottskanslibetjänt", function() {deepEqual( Stem("slottskanslibetjänter"), "slottskanslibetjänt");});
test("slottskanslibetjänterna -> slottskanslibetjänt", function() {deepEqual( Stem("slottskanslibetjänterna"), "slottskanslibetjänt");});
test("slottskorridor -> slottskorrid", function() {deepEqual( Stem("slottskorridor"), "slottskorrid");});
test("slottsrätten -> slottsrät", function() {deepEqual( Stem("slottsrätten"), "slottsrät");});
test("slottstappning -> slottstappning", function() {deepEqual( Stem("slottstappning"), "slottstappning");});
test("sluddrade -> sluddr", function() {deepEqual( Stem("sluddrade"), "sluddr");});
test("slug -> slug", function() {deepEqual( Stem("slug"), "slug");});
test("slugare -> slug", function() {deepEqual( Stem("slugare"), "slug");});
test("slugt -> slugt", function() {deepEqual( Stem("slugt"), "slugt");});
test("sluka -> sluk", function() {deepEqual( Stem("sluka"), "sluk");});
test("slukade -> sluk", function() {deepEqual( Stem("slukade"), "sluk");});
test("slukades -> sluk", function() {deepEqual( Stem("slukades"), "sluk");});
test("slukar -> sluk", function() {deepEqual( Stem("slukar"), "sluk");});
test("slukat -> sluk", function() {deepEqual( Stem("slukat"), "sluk");});
test("slummer -> slumm", function() {deepEqual( Stem("slummer"), "slumm");});
test("slump -> slump", function() {deepEqual( Stem("slump"), "slump");});
test("slumpen -> slump", function() {deepEqual( Stem("slumpen"), "slump");});
test("slumra -> slumr", function() {deepEqual( Stem("slumra"), "slumr");});
test("slumrade -> slumr", function() {deepEqual( Stem("slumrade"), "slumr");});
test("slumrande -> slumr", function() {deepEqual( Stem("slumrande"), "slumr");});
test("slumrar -> slumr", function() {deepEqual( Stem("slumrar"), "slumr");});
test("slumrat -> slumr", function() {deepEqual( Stem("slumrat"), "slumr");});
test("slunga -> slung", function() {deepEqual( Stem("slunga"), "slung");});
test("slungade -> slung", function() {deepEqual( Stem("slungade"), "slung");});
test("slungat -> slung", function() {deepEqual( Stem("slungat"), "slung");});
test("slunko -> slunko", function() {deepEqual( Stem("slunko"), "slunko");});
test("slup -> slup", function() {deepEqual( Stem("slup"), "slup");});
test("slupen -> slup", function() {deepEqual( Stem("slupen"), "slup");});
test("sluppit -> sluppit", function() {deepEqual( Stem("sluppit"), "sluppit");});
test("sluring -> sluring", function() {deepEqual( Stem("sluring"), "sluring");});
test("slusk -> slusk", function() {deepEqual( Stem("slusk"), "slusk");});
test("slussen -> sluss", function() {deepEqual( Stem("slussen"), "sluss");});
test("slut -> slut", function() {deepEqual( Stem("slut"), "slut");});
test("sluta -> slut", function() {deepEqual( Stem("sluta"), "slut");});
test("slutad -> slut", function() {deepEqual( Stem("slutad"), "slut");});
test("slutade -> slut", function() {deepEqual( Stem("slutade"), "slut");});
test("slutades -> slut", function() {deepEqual( Stem("slutades"), "slut");});
test("slutadt -> slutad", function() {deepEqual( Stem("slutadt"), "slutad");});
test("slutande -> slut", function() {deepEqual( Stem("slutande"), "slut");});
test("slutar -> slut", function() {deepEqual( Stem("slutar"), "slut");});
test("slutas -> slut", function() {deepEqual( Stem("slutas"), "slut");});
test("slutat -> slut", function() {deepEqual( Stem("slutat"), "slut");});
test("sluten -> slut", function() {deepEqual( Stem("sluten"), "slut");});
test("slutenhet -> sluten", function() {deepEqual( Stem("slutenhet"), "sluten");});
test("sluter -> slut", function() {deepEqual( Stem("sluter"), "slut");});
test("slutet -> slutet", function() {deepEqual( Stem("slutet"), "slutet");});
test("slutit -> slutit", function() {deepEqual( Stem("slutit"), "slutit");});
test("slutits -> slutit", function() {deepEqual( Stem("slutits"), "slutit");});
test("slutkapitlet -> slutkapitlet", function() {deepEqual( Stem("slutkapitlet"), "slutkapitlet");});
test("slutli -> slutli", function() {deepEqual( Stem("slutli"), "slutli");});
test("slutlig -> slut", function() {deepEqual( Stem("slutlig"), "slut");});
test("slutliga -> slut", function() {deepEqual( Stem("slutliga"), "slut");});
test("slutligen -> slut", function() {deepEqual( Stem("slutligen"), "slut");});
test("slutligeu -> slutligeu", function() {deepEqual( Stem("slutligeu"), "slutligeu");});
test("slutligt -> slut", function() {deepEqual( Stem("slutligt"), "slut");});
test("slutmening -> slutmening", function() {deepEqual( Stem("slutmening"), "slutmening");});
test("slutmeningen -> slutmening", function() {deepEqual( Stem("slutmeningen"), "slutmening");});
test("slutna -> slutn", function() {deepEqual( Stem("slutna"), "slutn");});
test("slutpolerade -> slutpoler", function() {deepEqual( Stem("slutpolerade"), "slutpoler");});
test("slutsats -> slutsat", function() {deepEqual( Stem("slutsats"), "slutsat");});
test("slutsatsen -> slutsats", function() {deepEqual( Stem("slutsatsen"), "slutsats");});
test("slutsatser -> slutsats", function() {deepEqual( Stem("slutsatser"), "slutsats");});
test("sluttande -> slutt", function() {deepEqual( Stem("sluttande"), "slutt");});
test("sluttning -> sluttning", function() {deepEqual( Stem("sluttning"), "sluttning");});
test("sluttningar -> sluttning", function() {deepEqual( Stem("sluttningar"), "sluttning");});
test("sluttningen -> sluttning", function() {deepEqual( Stem("sluttningen"), "sluttning");});
test("slynan -> slynan", function() {deepEqual( Stem("slynan"), "slynan");});
test("slyng -> slyng", function() {deepEqual( Stem("slyng"), "slyng");});
test("slyngel -> slyngel", function() {deepEqual( Stem("slyngel"), "slyngel");});
test("slyngelåren -> slyngelår", function() {deepEqual( Stem("slyngelåren"), "slyngelår");});
test("slynåren -> slynår", function() {deepEqual( Stem("slynåren"), "slynår");});
test("släck -> släck", function() {deepEqual( Stem("släck"), "släck");});
test("släcka -> släck", function() {deepEqual( Stem("släcka"), "släck");});
test("släckande -> släck", function() {deepEqual( Stem("släckande"), "släck");});
test("släckt -> släck", function() {deepEqual( Stem("släckt"), "släck");});
test("släckta -> släck", function() {deepEqual( Stem("släckta"), "släck");});
test("släckte -> släck", function() {deepEqual( Stem("släckte"), "släck");});
test("släde -> släd", function() {deepEqual( Stem("släde"), "släd");});
test("slädpartier -> slädparti", function() {deepEqual( Stem("slädpartier"), "slädparti");});
test("slädspår -> slädspår", function() {deepEqual( Stem("slädspår"), "slädspår");});
test("slägt -> slägt", function() {deepEqual( Stem("slägt"), "slägt");});
test("slägten -> slägt", function() {deepEqual( Stem("slägten"), "slägt");});
test("slägting -> slägting", function() {deepEqual( Stem("slägting"), "slägting");});
test("slägtingar -> slägting", function() {deepEqual( Stem("slägtingar"), "slägting");});
test("släk -> släk", function() {deepEqual( Stem("släk"), "släk");});
test("släkt -> släkt", function() {deepEqual( Stem("släkt"), "släkt");});
test("släkte -> släkt", function() {deepEqual( Stem("släkte"), "släkt");});
test("släkten -> släkt", function() {deepEqual( Stem("släkten"), "släkt");});
test("släktens -> släkt", function() {deepEqual( Stem("släktens"), "släkt");});
test("släktes -> släkt", function() {deepEqual( Stem("släktes"), "släkt");});
test("släktförhållanden -> släktförhåll", function() {deepEqual( Stem("släktförhållanden"), "släktförhåll");});
test("släkting -> släkting", function() {deepEqual( Stem("släkting"), "släkting");});
test("släktingar -> släkting", function() {deepEqual( Stem("släktingar"), "släkting");});
test("släktingen -> släkting", function() {deepEqual( Stem("släktingen"), "släkting");});
test("släktkalendrar -> släktkalendr", function() {deepEqual( Stem("släktkalendrar"), "släktkalendr");});
test("släktled -> släktled", function() {deepEqual( Stem("släktled"), "släktled");});
test("släktleds -> släktled", function() {deepEqual( Stem("släktleds"), "släktled");});
test("släktskap -> släktskap", function() {deepEqual( Stem("släktskap"), "släktskap");});
test("släkttycket -> släkttycket", function() {deepEqual( Stem("släkttycket"), "släkttycket");});
test("släktvapnet -> släktvapnet", function() {deepEqual( Stem("släktvapnet"), "släktvapnet");});
test("sländas -> sländ", function() {deepEqual( Stem("sländas"), "sländ");});
test("släng -> släng", function() {deepEqual( Stem("släng"), "släng");});
test("slänga -> släng", function() {deepEqual( Stem("slänga"), "släng");});
test("slängar -> släng", function() {deepEqual( Stem("slängar"), "släng");});
test("slängde -> släng", function() {deepEqual( Stem("slängde"), "släng");});
test("slänger -> släng", function() {deepEqual( Stem("slänger"), "släng");});
test("slängkappa -> slängkapp", function() {deepEqual( Stem("slängkappa"), "slängkapp");});
test("slängkyss -> slängkyss", function() {deepEqual( Stem("slängkyss"), "slängkyss");});
test("slängt -> släng", function() {deepEqual( Stem("slängt"), "släng");});
test("släp -> släp", function() {deepEqual( Stem("släp"), "släp");});
test("släpa -> släp", function() {deepEqual( Stem("släpa"), "släp");});
test("släpade -> släp", function() {deepEqual( Stem("släpade"), "släp");});
test("släpande -> släp", function() {deepEqual( Stem("släpande"), "släp");});
test("släpar -> släp", function() {deepEqual( Stem("släpar"), "släp");});
test("släpat -> släp", function() {deepEqual( Stem("släpat"), "släp");});
test("släpigt -> släp", function() {deepEqual( Stem("släpigt"), "släp");});
test("släpp -> släpp", function() {deepEqual( Stem("släpp"), "släpp");});
test("släppa -> släpp", function() {deepEqual( Stem("släppa"), "släpp");});
test("släpper -> släpp", function() {deepEqual( Stem("släpper"), "släpp");});
test("släppt -> släppt", function() {deepEqual( Stem("släppt"), "släppt");});
test("släppte -> släppt", function() {deepEqual( Stem("släppte"), "släppt");});
test("släppts -> släppt", function() {deepEqual( Stem("släppts"), "släppt");});
test("släpstöfveln -> släpstöfveln", function() {deepEqual( Stem("släpstöfveln"), "släpstöfveln");});
test("slät -> slät", function() {deepEqual( Stem("slät"), "slät");});
test("släta -> slät", function() {deepEqual( Stem("släta"), "slät");});
test("slätade -> slät", function() {deepEqual( Stem("slätade"), "slät");});
test("slätkammade -> slätkamm", function() {deepEqual( Stem("slätkammade"), "slätkamm");});
test("slätrakad -> slätrak", function() {deepEqual( Stem("slätrakad"), "slätrak");});
test("slätrakade -> slätrak", function() {deepEqual( Stem("slätrakade"), "slätrak");});
test("slätt -> slätt", function() {deepEqual( Stem("slätt"), "slätt");});
test("slätten -> slätt", function() {deepEqual( Stem("slätten"), "slätt");});
test("slättens -> slätt", function() {deepEqual( Stem("slättens"), "slätt");});
test("slätter -> slätt", function() {deepEqual( Stem("slätter"), "slätt");});
test("slättäljda -> slättäljd", function() {deepEqual( Stem("slättäljda"), "slättäljd");});
test("slå -> slå", function() {deepEqual( Stem("slå"), "slå");});
test("slående -> slåend", function() {deepEqual( Stem("slående"), "slåend");});
test("slåkt -> slåkt", function() {deepEqual( Stem("slåkt"), "slåkt");});
test("slår -> slår", function() {deepEqual( Stem("slår"), "slår");});
test("slås -> slås", function() {deepEqual( Stem("slås"), "slås");});
test("slåss -> slåss", function() {deepEqual( Stem("slåss"), "slåss");});
test("slö -> slö", function() {deepEqual( Stem("slö"), "slö");});
test("slöa -> slöa", function() {deepEqual( Stem("slöa"), "slöa");});
test("slöhet -> slöhet", function() {deepEqual( Stem("slöhet"), "slöhet");});
test("slöja -> slöj", function() {deepEqual( Stem("slöja"), "slöj");});
test("slöjan -> slöjan", function() {deepEqual( Stem("slöjan"), "slöjan");});
test("slöjd -> slöjd", function() {deepEqual( Stem("slöjd"), "slöjd");});
test("slöjdares -> slöjdar", function() {deepEqual( Stem("slöjdares"), "slöjdar");});
test("slöjdbänk -> slöjdbänk", function() {deepEqual( Stem("slöjdbänk"), "slöjdbänk");});
test("slöjor -> slöj", function() {deepEqual( Stem("slöjor"), "slöj");});
test("slösa -> slös", function() {deepEqual( Stem("slösa"), "slös");});
test("slösade -> slös", function() {deepEqual( Stem("slösade"), "slös");});
test("slösaktig -> slösakt", function() {deepEqual( Stem("slösaktig"), "slösakt");});
test("slösaktiga -> slösakt", function() {deepEqual( Stem("slösaktiga"), "slösakt");});
test("slösar -> slös", function() {deepEqual( Stem("slösar"), "slös");});
test("slösarna -> slös", function() {deepEqual( Stem("slösarna"), "slös");});
test("slösat -> slös", function() {deepEqual( Stem("slösat"), "slös");});
test("slöseri -> slöseri", function() {deepEqual( Stem("slöseri"), "slöseri");});
test("slöserska -> slösersk", function() {deepEqual( Stem("slöserska"), "slösersk");});
test("slöt -> slöt", function() {deepEqual( Stem("slöt"), "slöt");});
test("slöto -> slöto", function() {deepEqual( Stem("slöto"), "slöto");});
test("slötos -> slöto", function() {deepEqual( Stem("slötos"), "slöto");});
test("slött -> slött", function() {deepEqual( Stem("slött"), "slött");});
test("sm -> sm", function() {deepEqual( Stem("sm"), "sm");});
test("sma -> sma", function() {deepEqual( Stem("sma"), "sma");});
test("smackade -> smack", function() {deepEqual( Stem("smackade"), "smack");});
test("smacker -> smack", function() {deepEqual( Stem("smacker"), "smack");});
test("smackningar -> smackning", function() {deepEqual( Stem("smackningar"), "smackning");});
test("smak -> smak", function() {deepEqual( Stem("smak"), "smak");});
test("smaka -> smak", function() {deepEqual( Stem("smaka"), "smak");});
test("smakade -> smak", function() {deepEqual( Stem("smakade"), "smak");});
test("smakar -> smak", function() {deepEqual( Stem("smakar"), "smak");});
test("smakat -> smak", function() {deepEqual( Stem("smakat"), "smak");});
test("smaken -> smak", function() {deepEqual( Stem("smaken"), "smak");});
test("smakfull -> smakfull", function() {deepEqual( Stem("smakfull"), "smakfull");});
test("smakfullare -> smakfull", function() {deepEqual( Stem("smakfullare"), "smakfull");});
test("smakfullt -> smakfull", function() {deepEqual( Stem("smakfullt"), "smakfull");});
test("smaklöst -> smaklös", function() {deepEqual( Stem("smaklöst"), "smaklös");});
test("smaksätta -> smaksät", function() {deepEqual( Stem("smaksätta"), "smaksät");});
test("smal -> smal", function() {deepEqual( Stem("smal"), "smal");});
test("smala -> smal", function() {deepEqual( Stem("smala"), "smal");});
test("smaleende -> smaleend", function() {deepEqual( Stem("smaleende"), "smaleend");});
test("small -> small", function() {deepEqual( Stem("small"), "small");});
test("smalnar -> smaln", function() {deepEqual( Stem("smalnar"), "smaln");});
test("smalog -> smalog", function() {deepEqual( Stem("smalog"), "smalog");});
test("smalt -> smalt", function() {deepEqual( Stem("smalt"), "smalt");});
test("smattra -> smattr", function() {deepEqual( Stem("smattra"), "smattr");});
test("smattrade -> smattr", function() {deepEqual( Stem("smattrade"), "smattr");});
test("smattrande -> smattr", function() {deepEqual( Stem("smattrande"), "smattr");});
test("smedja -> smedj", function() {deepEqual( Stem("smedja"), "smedj");});
test("smedjan -> smedjan", function() {deepEqual( Stem("smedjan"), "smedjan");});
test("smeka -> smek", function() {deepEqual( Stem("smeka"), "smek");});
test("smekande -> smek", function() {deepEqual( Stem("smekande"), "smek");});
test("smekas -> smek", function() {deepEqual( Stem("smekas"), "smek");});
test("smekmånaden -> smekmånad", function() {deepEqual( Stem("smekmånaden"), "smekmånad");});
test("smeknamn -> smeknamn", function() {deepEqual( Stem("smeknamn"), "smeknamn");});
test("smekning -> smekning", function() {deepEqual( Stem("smekning"), "smekning");});
test("smekningar -> smekning", function() {deepEqual( Stem("smekningar"), "smekning");});
test("smekningen -> smekning", function() {deepEqual( Stem("smekningen"), "smekning");});
test("smeksam -> smeksam", function() {deepEqual( Stem("smeksam"), "smeksam");});
test("smeksamma -> smeksamm", function() {deepEqual( Stem("smeksamma"), "smeksamm");});
test("smeksamt -> smeksamt", function() {deepEqual( Stem("smeksamt"), "smeksamt");});
test("smekt -> smekt", function() {deepEqual( Stem("smekt"), "smekt");});
test("smekte -> smekt", function() {deepEqual( Stem("smekte"), "smekt");});
test("smetade -> smet", function() {deepEqual( Stem("smetade"), "smet");});
test("smetat -> smet", function() {deepEqual( Stem("smetat"), "smet");});
test("smicker -> smick", function() {deepEqual( Stem("smicker"), "smick");});
test("smickrad -> smickr", function() {deepEqual( Stem("smickrad"), "smickr");});
test("smickrade -> smickr", function() {deepEqual( Stem("smickrade"), "smickr");});
test("smickrades -> smickr", function() {deepEqual( Stem("smickrades"), "smickr");});
test("smickrande -> smickr", function() {deepEqual( Stem("smickrande"), "smickr");});
test("smickrare -> smickr", function() {deepEqual( Stem("smickrare"), "smickr");});
test("smickrat -> smickr", function() {deepEqual( Stem("smickrat"), "smickr");});
test("smida -> smid", function() {deepEqual( Stem("smida"), "smid");});
test("smidig -> smid", function() {deepEqual( Stem("smidig"), "smid");});
test("smidiga -> smid", function() {deepEqual( Stem("smidiga"), "smid");});
test("smidigare -> smid", function() {deepEqual( Stem("smidigare"), "smid");});
test("smidigt -> smid", function() {deepEqual( Stem("smidigt"), "smid");});
test("smil -> smil", function() {deepEqual( Stem("smil"), "smil");});
test("smilande -> smil", function() {deepEqual( Stem("smilande"), "smil");});
test("smiles -> smil", function() {deepEqual( Stem("smiles"), "smil");});
test("smink -> smink", function() {deepEqual( Stem("smink"), "smink");});
test("sminka -> smink", function() {deepEqual( Stem("sminka"), "smink");});
test("smisk -> smisk", function() {deepEqual( Stem("smisk"), "smisk");});
test("smitta -> smitt", function() {deepEqual( Stem("smitta"), "smitt");});
test("smittade -> smitt", function() {deepEqual( Stem("smittade"), "smitt");});
test("smittat -> smitt", function() {deepEqual( Stem("smittat"), "smitt");});
test("smittoöverföring -> smittoöverföring", function() {deepEqual( Stem("smittoöverföring"), "smittoöverföring");});
test("smlsade -> smlsad", function() {deepEqual( Stem("smlsade"), "smlsad");});
test("smn -> smn", function() {deepEqual( Stem("smn"), "smn");});
test("smog -> smog", function() {deepEqual( Stem("smog"), "smog");});
test("smorde -> smord", function() {deepEqual( Stem("smorde"), "smord");});
test("smuggelgodset -> smuggelgodset", function() {deepEqual( Stem("smuggelgodset"), "smuggelgodset");});
test("smuggelhandel -> smuggelhandel", function() {deepEqual( Stem("smuggelhandel"), "smuggelhandel");});
test("smuggla -> smuggl", function() {deepEqual( Stem("smuggla"), "smuggl");});
test("smugglas -> smuggl", function() {deepEqual( Stem("smugglas"), "smuggl");});
test("smuggleriet -> smuggleriet", function() {deepEqual( Stem("smuggleriet"), "smuggleriet");});
test("smugit -> smugit", function() {deepEqual( Stem("smugit"), "smugit");});
test("smula -> smul", function() {deepEqual( Stem("smula"), "smul");});
test("smulade -> smul", function() {deepEqual( Stem("smulade"), "smul");});
test("smular -> smul", function() {deepEqual( Stem("smular"), "smul");});
test("smulat -> smul", function() {deepEqual( Stem("smulat"), "smul");});
test("smulor -> smul", function() {deepEqual( Stem("smulor"), "smul");});
test("smulorna -> smul", function() {deepEqual( Stem("smulorna"), "smul");});
test("smultit -> smultit", function() {deepEqual( Stem("smultit"), "smultit");});
test("smultron -> smultron", function() {deepEqual( Stem("smultron"), "smultron");});
test("smussla -> smussl", function() {deepEqual( Stem("smussla"), "smussl");});
test("smuts -> smut", function() {deepEqual( Stem("smuts"), "smut");});
test("smutsa -> smuts", function() {deepEqual( Stem("smutsa"), "smuts");});
test("smutsade -> smuts", function() {deepEqual( Stem("smutsade"), "smuts");});
test("smutsas -> smuts", function() {deepEqual( Stem("smutsas"), "smuts");});
test("smutsat -> smuts", function() {deepEqual( Stem("smutsat"), "smuts");});
test("smutsbruna -> smutsbrun", function() {deepEqual( Stem("smutsbruna"), "smutsbrun");});
test("smutsen -> smuts", function() {deepEqual( Stem("smutsen"), "smuts");});
test("smutsgrå -> smutsgrå", function() {deepEqual( Stem("smutsgrå"), "smutsgrå");});
test("smutsgula -> smutsgul", function() {deepEqual( Stem("smutsgula"), "smutsgul");});
test("smutsig -> smuts", function() {deepEqual( Stem("smutsig"), "smuts");});
test("smutsiga -> smuts", function() {deepEqual( Stem("smutsiga"), "smuts");});
test("smutsigt -> smuts", function() {deepEqual( Stem("smutsigt"), "smuts");});
test("smutspöl -> smutspöl", function() {deepEqual( Stem("smutspöl"), "smutspöl");});
test("smutsröda -> smutsröd", function() {deepEqual( Stem("smutsröda"), "smutsröd");});
test("smutta -> smutt", function() {deepEqual( Stem("smutta"), "smutt");});
test("smuttade -> smutt", function() {deepEqual( Stem("smuttade"), "smutt");});
test("smuttande -> smutt", function() {deepEqual( Stem("smuttande"), "smutt");});
test("smy -> smy", function() {deepEqual( Stem("smy"), "smy");});
test("smycka -> smyck", function() {deepEqual( Stem("smycka"), "smyck");});
test("smycken -> smyck", function() {deepEqual( Stem("smycken"), "smyck");});
test("smyg -> smyg", function() {deepEqual( Stem("smyg"), "smyg");});
test("smyga -> smyg", function() {deepEqual( Stem("smyga"), "smyg");});
test("smygande -> smyg", function() {deepEqual( Stem("smygande"), "smyg");});
test("smyger -> smyg", function() {deepEqual( Stem("smyger"), "smyg");});
test("smyghål -> smyghål", function() {deepEqual( Stem("smyghål"), "smyghål");});
test("smygvägar -> smygväg", function() {deepEqual( Stem("smygvägar"), "smygväg");});
test("smäck -> smäck", function() {deepEqual( Stem("smäck"), "smäck");});
test("smäcker -> smäck", function() {deepEqual( Stem("smäcker"), "smäck");});
test("smäckra -> smäckr", function() {deepEqual( Stem("smäckra"), "smäckr");});
test("smäda -> smäd", function() {deepEqual( Stem("smäda"), "smäd");});
test("smädar -> smäd", function() {deepEqual( Stem("smädar"), "smäd");});
test("smädliga -> smäd", function() {deepEqual( Stem("smädliga"), "smäd");});
test("smälek -> smälek", function() {deepEqual( Stem("smälek"), "smälek");});
test("smäll -> smäll", function() {deepEqual( Stem("smäll"), "smäll");});
test("smälla -> smäll", function() {deepEqual( Stem("smälla"), "smäll");});
test("smällande -> smäll", function() {deepEqual( Stem("smällande"), "smäll");});
test("smällar -> smäll", function() {deepEqual( Stem("smällar"), "smäll");});
test("smällde -> smälld", function() {deepEqual( Stem("smällde"), "smälld");});
test("smällen -> smäll", function() {deepEqual( Stem("smällen"), "smäll");});
test("smäller -> smäll", function() {deepEqual( Stem("smäller"), "smäll");});
test("smällt -> smällt", function() {deepEqual( Stem("smällt"), "smällt");});
test("smält -> smält", function() {deepEqual( Stem("smält"), "smält");});
test("smälta -> smält", function() {deepEqual( Stem("smälta"), "smält");});
test("smältande -> smält", function() {deepEqual( Stem("smältande"), "smält");});
test("smälte -> smält", function() {deepEqual( Stem("smälte"), "smält");});
test("smärt -> smärt", function() {deepEqual( Stem("smärt"), "smärt");});
test("smärta -> smärt", function() {deepEqual( Stem("smärta"), "smärt");});
test("smärtade -> smärt", function() {deepEqual( Stem("smärtade"), "smärt");});
test("smärtan -> smärtan", function() {deepEqual( Stem("smärtan"), "smärtan");});
test("smärtans -> smärtan", function() {deepEqual( Stem("smärtans"), "smärtan");});
test("smärtare -> smärt", function() {deepEqual( Stem("smärtare"), "smärt");});
test("smärtas -> smärt", function() {deepEqual( Stem("smärtas"), "smärt");});
test("smärtfulla -> smärtfull", function() {deepEqual( Stem("smärtfulla"), "smärtfull");});
test("smärtor -> smärt", function() {deepEqual( Stem("smärtor"), "smärt");});
test("smärtorna -> smärt", function() {deepEqual( Stem("smärtorna"), "smärt");});
test("smärtsam -> smärtsam", function() {deepEqual( Stem("smärtsam"), "smärtsam");});
test("smärtsamma -> smärtsamm", function() {deepEqual( Stem("smärtsamma"), "smärtsamm");});
test("smärtsamt -> smärtsamt", function() {deepEqual( Stem("smärtsamt"), "smärtsamt");});
test("små -> små", function() {deepEqual( Stem("små"), "små");});
test("småaktiga -> småakt", function() {deepEqual( Stem("småaktiga"), "småakt");});
test("småbarn -> småbarn", function() {deepEqual( Stem("småbarn"), "småbarn");});
test("småbarnskläder -> småbarnskläd", function() {deepEqual( Stem("småbarnskläder"), "småbarnskläd");});
test("småborgerligt -> småborger", function() {deepEqual( Stem("småborgerligt"), "småborger");});
test("småbrödet -> småbrödet", function() {deepEqual( Stem("småbrödet"), "småbrödet");});
test("småbåtarna -> småbåt", function() {deepEqual( Stem("småbåtarna"), "småbåt");});
test("småbåtarne -> småbåt", function() {deepEqual( Stem("småbåtarne"), "småbåt");});
test("smådda -> smådd", function() {deepEqual( Stem("smådda"), "smådd");});
test("småfä -> småfä", function() {deepEqual( Stem("småfä"), "småfä");});
test("småfåglars -> småfåglar", function() {deepEqual( Stem("småfåglars"), "småfåglar");});
test("smågnolade -> smågnol", function() {deepEqual( Stem("smågnolade"), "smågnol");});
test("smågnolande -> smågnol", function() {deepEqual( Stem("smågnolande"), "smågnol");});
test("smågräla -> smågräl", function() {deepEqual( Stem("smågräla"), "smågräl");});
test("småherrarne -> småherr", function() {deepEqual( Stem("småherrarne"), "småherr");});
test("småherrskapet -> småherrskapet", function() {deepEqual( Stem("småherrskapet"), "småherrskapet");});
test("småjagterna -> småjag", function() {deepEqual( Stem("småjagterna"), "småjag");});
test("småkräken -> småkräk", function() {deepEqual( Stem("småkräken"), "småkräk");});
test("småkrämaraffärer -> småkrämaraffär", function() {deepEqual( Stem("småkrämaraffärer"), "småkrämaraffär");});
test("småland -> småland", function() {deepEqual( Stem("småland"), "småland");});
test("småle -> smål", function() {deepEqual( Stem("småle"), "smål");});
test("småleende -> småleend", function() {deepEqual( Stem("småleende"), "småleend");});
test("småleenden -> småleend", function() {deepEqual( Stem("småleenden"), "småleend");});
test("småleendet -> småleendet", function() {deepEqual( Stem("småleendet"), "småleendet");});
test("småler -> smål", function() {deepEqual( Stem("småler"), "smål");});
test("smålett -> smålet", function() {deepEqual( Stem("smålett"), "smålet");});
test("smålog -> smålog", function() {deepEqual( Stem("smålog"), "smålog");});
test("smålogo -> smålogo", function() {deepEqual( Stem("smålogo"), "smålogo");});
test("småländska -> småländsk", function() {deepEqual( Stem("småländska"), "småländsk");});
test("smålådorna -> smålåd", function() {deepEqual( Stem("smålådorna"), "smålåd");});
test("småmynt -> småmynt", function() {deepEqual( Stem("småmynt"), "småmynt");});
test("småmyste -> småmyst", function() {deepEqual( Stem("småmyste"), "småmyst");});
test("småningom -> småningom", function() {deepEqual( Stem("småningom"), "småningom");});
test("småningorn -> småningorn", function() {deepEqual( Stem("småningorn"), "småningorn");});
test("småpojkar -> småpojk", function() {deepEqual( Stem("småpojkar"), "småpojk");});
test("småpratade -> småprat", function() {deepEqual( Stem("småpratade"), "småprat");});
test("smårum -> smårum", function() {deepEqual( Stem("smårum"), "smårum");});
test("smårummen -> smårumm", function() {deepEqual( Stem("smårummen"), "smårumm");});
test("småsak -> småsak", function() {deepEqual( Stem("småsak"), "småsak");});
test("småsaker -> småsak", function() {deepEqual( Stem("småsaker"), "småsak");});
test("småsinthet -> småsint", function() {deepEqual( Stem("småsinthet"), "småsint");});
test("småskrattade -> småskrat", function() {deepEqual( Stem("småskrattade"), "småskrat");});
test("småstad -> småst", function() {deepEqual( Stem("småstad"), "småst");});
test("småstaden -> småstad", function() {deepEqual( Stem("småstaden"), "småstad");});
test("småsten -> småst", function() {deepEqual( Stem("småsten"), "småst");});
test("småting -> småting", function() {deepEqual( Stem("småting"), "småting");});
test("småtrippande -> småtripp", function() {deepEqual( Stem("småtrippande"), "småtripp");});
test("småtråkiga -> småtråk", function() {deepEqual( Stem("småtråkiga"), "småtråk");});
test("smått -> smått", function() {deepEqual( Stem("smått"), "smått");});
test("småvisslande -> småvissl", function() {deepEqual( Stem("småvisslande"), "småvissl");});
test("småväxt -> småväxt", function() {deepEqual( Stem("småväxt"), "småväxt");});
test("smög -> smög", function() {deepEqual( Stem("smög"), "smög");});
test("smögo -> smögo", function() {deepEqual( Stem("smögo"), "smögo");});
test("smör -> smör", function() {deepEqual( Stem("smör"), "smör");});
test("smörbakelser -> smörbak", function() {deepEqual( Stem("smörbakelser"), "smörbak");});
test("smörbytta -> smörbyt", function() {deepEqual( Stem("smörbytta"), "smörbyt");});
test("smörbyttor -> smörbyt", function() {deepEqual( Stem("smörbyttor"), "smörbyt");});
test("smördukar -> smörduk", function() {deepEqual( Stem("smördukar"), "smörduk");});
test("smöret -> smöret", function() {deepEqual( Stem("smöret"), "smöret");});
test("smörgasar -> smörgas", function() {deepEqual( Stem("smörgasar"), "smörgas");});
test("smörgås -> smörgås", function() {deepEqual( Stem("smörgås"), "smörgås");});
test("smörgåsar -> smörgås", function() {deepEqual( Stem("smörgåsar"), "smörgås");});
test("smörgåsbiten -> smörgåsbit", function() {deepEqual( Stem("smörgåsbiten"), "smörgåsbit");});
test("smörgåsbordet -> smörgåsbordet", function() {deepEqual( Stem("smörgåsbordet"), "smörgåsbordet");});
test("smörgåsen -> smörgås", function() {deepEqual( Stem("smörgåsen"), "smörgås");});
test("smörj -> smörj", function() {deepEqual( Stem("smörj"), "smörj");});
test("smörja -> smörj", function() {deepEqual( Stem("smörja"), "smörj");});
test("smörjan -> smörjan", function() {deepEqual( Stem("smörjan"), "smörjan");});
test("sna -> sna", function() {deepEqual( Stem("sna"), "sna");});
test("snabb -> snabb", function() {deepEqual( Stem("snabb"), "snabb");});
test("snabba -> snabb", function() {deepEqual( Stem("snabba"), "snabb");});
test("snabbare -> snabb", function() {deepEqual( Stem("snabbare"), "snabb");});
test("snabbhet -> snabb", function() {deepEqual( Stem("snabbhet"), "snabb");});
test("snabblöpare -> snabblöp", function() {deepEqual( Stem("snabblöpare"), "snabblöp");});
test("snabbt -> snabbt", function() {deepEqual( Stem("snabbt"), "snabbt");});
test("snappat -> snapp", function() {deepEqual( Stem("snappat"), "snapp");});
test("snapsar -> snaps", function() {deepEqual( Stem("snapsar"), "snaps");});
test("snar -> snar", function() {deepEqual( Stem("snar"), "snar");});
test("snara -> snar", function() {deepEqual( Stem("snara"), "snar");});
test("snaran -> snaran", function() {deepEqual( Stem("snaran"), "snaran");});
test("snarare -> snar", function() {deepEqual( Stem("snarare"), "snar");});
test("snarast -> snar", function() {deepEqual( Stem("snarast"), "snar");});
test("snaraste -> snar", function() {deepEqual( Stem("snaraste"), "snar");});
test("snarfyndiga -> snarfynd", function() {deepEqual( Stem("snarfyndiga"), "snarfynd");});
test("snarka -> snark", function() {deepEqual( Stem("snarka"), "snark");});
test("snarkande -> snark", function() {deepEqual( Stem("snarkande"), "snark");});
test("snarkning -> snarkning", function() {deepEqual( Stem("snarkning"), "snarkning");});
test("snarlik -> snarlik", function() {deepEqual( Stem("snarlik"), "snarlik");});
test("snarlika -> snarlik", function() {deepEqual( Stem("snarlika"), "snarlik");});
test("snarlikt -> snarlik", function() {deepEqual( Stem("snarlikt"), "snarlik");});
test("snaror -> snar", function() {deepEqual( Stem("snaror"), "snar");});
test("snarr -> snarr", function() {deepEqual( Stem("snarr"), "snarr");});
test("snart -> snart", function() {deepEqual( Stem("snart"), "snart");});
test("snatta -> snatt", function() {deepEqual( Stem("snatta"), "snatt");});
test("snattrande -> snattr", function() {deepEqual( Stem("snattrande"), "snattr");});
test("snavade -> snav", function() {deepEqual( Stem("snavade"), "snav");});
test("sned -> sned", function() {deepEqual( Stem("sned"), "sned");});
test("sneddade -> snedd", function() {deepEqual( Stem("sneddade"), "snedd");});
test("snedsprång -> snedsprång", function() {deepEqual( Stem("snedsprång"), "snedsprång");});
test("sneglade -> snegl", function() {deepEqual( Stem("sneglade"), "snegl");});
test("sneglat -> snegl", function() {deepEqual( Stem("sneglat"), "snegl");});
test("snett -> snett", function() {deepEqual( Stem("snett"), "snett");});
test("snibben -> snibb", function() {deepEqual( Stem("snibben"), "snibb");});
test("snickare -> snick", function() {deepEqual( Stem("snickare"), "snick");});
test("snickaren -> snick", function() {deepEqual( Stem("snickaren"), "snick");});
test("snickaresåg -> snickaresåg", function() {deepEqual( Stem("snickaresåg"), "snickaresåg");});
test("snigeln -> snigeln", function() {deepEqual( Stem("snigeln"), "snigeln");});
test("snille -> snill", function() {deepEqual( Stem("snille"), "snill");});
test("snillets -> snillet", function() {deepEqual( Stem("snillets"), "snillet");});
test("snillrikt -> snillrik", function() {deepEqual( Stem("snillrikt"), "snillrik");});
test("snipigt -> snip", function() {deepEqual( Stem("snipigt"), "snip");});
test("snirklade -> snirkl", function() {deepEqual( Stem("snirklade"), "snirkl");});
test("snits -> snit", function() {deepEqual( Stem("snits"), "snit");});
test("snitt -> snitt", function() {deepEqual( Stem("snitt"), "snitt");});
test("snitten -> snitt", function() {deepEqual( Stem("snitten"), "snitt");});
test("snm -> snm", function() {deepEqual( Stem("snm"), "snm");});
test("snobbiga -> snobb", function() {deepEqual( Stem("snobbiga"), "snobb");});
test("snodde -> snodd", function() {deepEqual( Stem("snodde"), "snodd");});
test("snoka -> snok", function() {deepEqual( Stem("snoka"), "snok");});
test("snokande -> snok", function() {deepEqual( Stem("snokande"), "snok");});
test("snor -> snor", function() {deepEqual( Stem("snor"), "snor");});
test("snorungen -> snorung", function() {deepEqual( Stem("snorungen"), "snorung");});
test("sntto -> sntto", function() {deepEqual( Stem("sntto"), "sntto");});
test("snubbla -> snubbl", function() {deepEqual( Stem("snubbla"), "snubbl");});
test("snubblade -> snubbl", function() {deepEqual( Stem("snubblade"), "snubbl");});
test("snubblande -> snubbl", function() {deepEqual( Stem("snubblande"), "snubbl");});
test("snubbor -> snubb", function() {deepEqual( Stem("snubbor"), "snubb");});
test("snud -> snud", function() {deepEqual( Stem("snud"), "snud");});
test("snudda -> snudd", function() {deepEqual( Stem("snudda"), "snudd");});
test("snuddade -> snudd", function() {deepEqual( Stem("snuddade"), "snudd");});
test("snuddande -> snudd", function() {deepEqual( Stem("snuddande"), "snudd");});
test("snuddat -> snudd", function() {deepEqual( Stem("snuddat"), "snudd");});
test("snuffe -> snuff", function() {deepEqual( Stem("snuffe"), "snuff");});
test("snufva -> snufv", function() {deepEqual( Stem("snufva"), "snufv");});
test("snuggan -> snuggan", function() {deepEqual( Stem("snuggan"), "snuggan");});
test("snurra -> snurr", function() {deepEqual( Stem("snurra"), "snurr");});
test("snurrade -> snurr", function() {deepEqual( Stem("snurrade"), "snurr");});
test("snurrar -> snurr", function() {deepEqual( Stem("snurrar"), "snurr");});
test("snus -> snus", function() {deepEqual( Stem("snus"), "snus");});
test("snusa -> snus", function() {deepEqual( Stem("snusa"), "snus");});
test("snusade -> snus", function() {deepEqual( Stem("snusade"), "snus");});
test("snusburken -> snusburk", function() {deepEqual( Stem("snusburken"), "snusburk");});
test("snusbutelj -> snusbutelj", function() {deepEqual( Stem("snusbutelj"), "snusbutelj");});
test("snusbuteljer -> snusbutelj", function() {deepEqual( Stem("snusbuteljer"), "snusbutelj");});
test("snusdosa -> snusdos", function() {deepEqual( Stem("snusdosa"), "snusdos");});
test("snusdosan -> snusdosan", function() {deepEqual( Stem("snusdosan"), "snusdosan");});
test("snusige -> snus", function() {deepEqual( Stem("snusige"), "snus");});
test("snusningar -> snusning", function() {deepEqual( Stem("snusningar"), "snusning");});
test("snuspaket -> snuspaket", function() {deepEqual( Stem("snuspaket"), "snuspaket");});
test("snuva -> snuv", function() {deepEqual( Stem("snuva"), "snuv");});
test("snyft -> snyft", function() {deepEqual( Stem("snyft"), "snyft");});
test("snyfta -> snyft", function() {deepEqual( Stem("snyfta"), "snyft");});
test("snyftade -> snyft", function() {deepEqual( Stem("snyftade"), "snyft");});
test("snyftande -> snyft", function() {deepEqual( Stem("snyftande"), "snyft");});
test("snyftat -> snyft", function() {deepEqual( Stem("snyftat"), "snyft");});
test("snyftning -> snyftning", function() {deepEqual( Stem("snyftning"), "snyftning");});
test("snyftningar -> snyftning", function() {deepEqual( Stem("snyftningar"), "snyftning");});
test("snyftningarna -> snyftning", function() {deepEqual( Stem("snyftningarna"), "snyftning");});
test("snygg -> snygg", function() {deepEqual( Stem("snygg"), "snygg");});
test("snygga -> snygg", function() {deepEqual( Stem("snygga"), "snygg");});
test("snyggt -> snygg", function() {deepEqual( Stem("snyggt"), "snygg");});
test("snyta -> snyt", function() {deepEqual( Stem("snyta"), "snyt");});
test("snäc -> snäc", function() {deepEqual( Stem("snäc"), "snäc");});
test("snäcka -> snäck", function() {deepEqual( Stem("snäcka"), "snäck");});
test("snäckor -> snäck", function() {deepEqual( Stem("snäckor"), "snäck");});
test("snäckorna -> snäck", function() {deepEqual( Stem("snäckorna"), "snäck");});
test("snäll -> snäll", function() {deepEqual( Stem("snäll"), "snäll");});
test("snälla -> snäll", function() {deepEqual( Stem("snälla"), "snäll");});
test("snällaste -> snäll", function() {deepEqual( Stem("snällaste"), "snäll");});
test("snälle -> snäll", function() {deepEqual( Stem("snälle"), "snäll");});
test("snällt -> snällt", function() {deepEqual( Stem("snällt"), "snällt");});
test("snärja -> snärj", function() {deepEqual( Stem("snärja"), "snärj");});
test("snärjd -> snärjd", function() {deepEqual( Stem("snärjd"), "snärjd");});
test("snärjer -> snärj", function() {deepEqual( Stem("snärjer"), "snärj");});
test("snärjt -> snärjt", function() {deepEqual( Stem("snärjt"), "snärjt");});
test("snärt -> snärt", function() {deepEqual( Stem("snärt"), "snärt");});
test("snärtade -> snärt", function() {deepEqual( Stem("snärtade"), "snärt");});
test("snärtat -> snärt", function() {deepEqual( Stem("snärtat"), "snärt");});
test("snäsige -> snäs", function() {deepEqual( Stem("snäsige"), "snäs");});
test("snäsigt -> snäs", function() {deepEqual( Stem("snäsigt"), "snäs");});
test("snäste -> snäst", function() {deepEqual( Stem("snäste"), "snäst");});
test("snäv -> snäv", function() {deepEqual( Stem("snäv"), "snäv");});
test("snäva -> snäv", function() {deepEqual( Stem("snäva"), "snäv");});
test("snål -> snål", function() {deepEqual( Stem("snål"), "snål");});
test("snåla -> snål", function() {deepEqual( Stem("snåla"), "snål");});
test("snålhet -> snål", function() {deepEqual( Stem("snålhet"), "snål");});
test("snår -> snår", function() {deepEqual( Stem("snår"), "snår");});
test("snåren -> snår", function() {deepEqual( Stem("snåren"), "snår");});
test("snårets -> snåret", function() {deepEqual( Stem("snårets"), "snåret");});
test("snö -> snö", function() {deepEqual( Stem("snö"), "snö");});
test("snöa -> snöa", function() {deepEqual( Stem("snöa"), "snöa");});
test("snöade -> snöad", function() {deepEqual( Stem("snöade"), "snöad");});
test("snöar -> snöar", function() {deepEqual( Stem("snöar"), "snöar");});
test("snöat -> snöat", function() {deepEqual( Stem("snöat"), "snöat");});
test("snöberg -> snöberg", function() {deepEqual( Stem("snöberg"), "snöberg");});
test("snöduken -> snöduk", function() {deepEqual( Stem("snöduken"), "snöduk");});
test("snögatorna -> snögat", function() {deepEqual( Stem("snögatorna"), "snögat");});
test("snökorn -> snökorn", function() {deepEqual( Stem("snökorn"), "snökorn");});
test("snöliljan -> snöliljan", function() {deepEqual( Stem("snöliljan"), "snöliljan");});
test("snön -> snön", function() {deepEqual( Stem("snön"), "snön");});
test("snöping -> snöping", function() {deepEqual( Stem("snöping"), "snöping");});
test("snöplig -> snöp", function() {deepEqual( Stem("snöplig"), "snöp");});
test("snöpliga -> snöp", function() {deepEqual( Stem("snöpliga"), "snöp");});
test("snöpligt -> snöp", function() {deepEqual( Stem("snöpligt"), "snöp");});
test("snörde -> snörd", function() {deepEqual( Stem("snörde"), "snörd");});
test("snöre -> snör", function() {deepEqual( Stem("snöre"), "snör");});
test("snören -> snör", function() {deepEqual( Stem("snören"), "snör");});
test("snöret -> snöret", function() {deepEqual( Stem("snöret"), "snöret");});
test("snörpte -> snörpt", function() {deepEqual( Stem("snörpte"), "snörpt");});
test("snörräta -> snörrät", function() {deepEqual( Stem("snörräta"), "snörrät");});
test("snörvlar -> snörvl", function() {deepEqual( Stem("snörvlar"), "snörvl");});
test("snösmältningsdag -> snösmältningsdag", function() {deepEqual( Stem("snösmältningsdag"), "snösmältningsdag");});
test("snöt -> snöt", function() {deepEqual( Stem("snöt"), "snöt");});
test("snövind -> snövind", function() {deepEqual( Stem("snövind"), "snövind");});
test("snövit -> snövit", function() {deepEqual( Stem("snövit"), "snövit");});
test("soare -> soar", function() {deepEqual( Stem("soare"), "soar");});
test("soareer -> soare", function() {deepEqual( Stem("soareer"), "soare");});
test("sociala -> social", function() {deepEqual( Stem("sociala"), "social");});
test("societet -> societet", function() {deepEqual( Stem("societet"), "societet");});
test("societeten -> societet", function() {deepEqual( Stem("societeten"), "societet");});
test("societetens -> societet", function() {deepEqual( Stem("societetens"), "societet");});
test("societeter -> societet", function() {deepEqual( Stem("societeter"), "societet");});
test("societetsdam -> societetsdam", function() {deepEqual( Stem("societetsdam"), "societetsdam");});
test("societetsnöjena -> societetsnöjen", function() {deepEqual( Stem("societetsnöjena"), "societetsnöjen");});
test("societetsskönheterna -> societetsskön", function() {deepEqual( Stem("societetsskönheterna"), "societetsskön");});
test("socken -> sock", function() {deepEqual( Stem("socken"), "sock");});
test("sockenbor -> sockenb", function() {deepEqual( Stem("sockenbor"), "sockenb");});
test("sockenkyrkan -> sockenkyrkan", function() {deepEqual( Stem("sockenkyrkan"), "sockenkyrkan");});
test("socker -> sock", function() {deepEqual( Stem("socker"), "sock");});
test("sockerbarn -> sockerbarn", function() {deepEqual( Stem("sockerbarn"), "sockerbarn");});
test("sockerbit -> sockerbit", function() {deepEqual( Stem("sockerbit"), "sockerbit");});
test("sockerbitarna -> sockerbit", function() {deepEqual( Stem("sockerbitarna"), "sockerbit");});
test("sockerdocka -> sockerdock", function() {deepEqual( Stem("sockerdocka"), "sockerdock");});
test("sockerdricka -> sockerdrick", function() {deepEqual( Stem("sockerdricka"), "sockerdrick");});
test("sockerhjärta -> sockerhjärt", function() {deepEqual( Stem("sockerhjärta"), "sockerhjärt");});
test("sockers -> socker", function() {deepEqual( Stem("sockers"), "socker");});
test("sockersöta -> sockersöt", function() {deepEqual( Stem("sockersöta"), "sockersöt");});
test("sockertopp -> sockertopp", function() {deepEqual( Stem("sockertopp"), "sockertopp");});
test("sockerurnorna -> sockerurn", function() {deepEqual( Stem("sockerurnorna"), "sockerurn");});
test("socknarna -> sockn", function() {deepEqual( Stem("socknarna"), "sockn");});
test("socknen -> sockn", function() {deepEqual( Stem("socknen"), "sockn");});
test("socknens -> sockn", function() {deepEqual( Stem("socknens"), "sockn");});
test("sof -> sof", function() {deepEqual( Stem("sof"), "sof");});
test("soffa -> soff", function() {deepEqual( Stem("soffa"), "soff");});
test("soffan -> soffan", function() {deepEqual( Stem("soffan"), "soffan");});
test("soffdynan -> soffdynan", function() {deepEqual( Stem("soffdynan"), "soffdynan");});
test("soffhörn -> soffhörn", function() {deepEqual( Stem("soffhörn"), "soffhörn");});
test("soffhörnet -> soffhörnet", function() {deepEqual( Stem("soffhörnet"), "soffhörnet");});
test("soffkarmen -> soffkarm", function() {deepEqual( Stem("soffkarmen"), "soffkarm");});
test("sofflock -> sofflock", function() {deepEqual( Stem("sofflock"), "sofflock");});
test("sofforna -> soff", function() {deepEqual( Stem("sofforna"), "soff");});
test("sofföverdraget -> sofföverdraget", function() {deepEqual( Stem("sofföverdraget"), "sofföverdraget");});
test("sofi -> sofi", function() {deepEqual( Stem("sofi"), "sofi");});
test("sofia -> sofi", function() {deepEqual( Stem("sofia"), "sofi");});
test("sofie -> sofi", function() {deepEqual( Stem("sofie"), "sofi");});
test("sofielund -> sofielund", function() {deepEqual( Stem("sofielund"), "sofielund");});
test("sofies -> sofi", function() {deepEqual( Stem("sofies"), "sofi");});
test("sofismer -> sofism", function() {deepEqual( Stem("sofismer"), "sofism");});
test("sofisterier -> sofisteri", function() {deepEqual( Stem("sofisterier"), "sofisteri");});
test("sofva -> sofv", function() {deepEqual( Stem("sofva"), "sofv");});
test("sofver -> sofv", function() {deepEqual( Stem("sofver"), "sofv");});
test("soien -> soien", function() {deepEqual( Stem("soien"), "soien");});
test("soker -> sok", function() {deepEqual( Stem("soker"), "sok");});
test("sokrates -> sokrat", function() {deepEqual( Stem("sokrates"), "sokrat");});
test("sokt -> sokt", function() {deepEqual( Stem("sokt"), "sokt");});
test("soktc -> soktc", function() {deepEqual( Stem("soktc"), "soktc");});
test("sokte -> sokt", function() {deepEqual( Stem("sokte"), "sokt");});
test("sol -> sol", function() {deepEqual( Stem("sol"), "sol");});
test("sola -> sol", function() {deepEqual( Stem("sola"), "sol");});
test("solade -> sol", function() {deepEqual( Stem("solade"), "sol");});
test("solar -> sol", function() {deepEqual( Stem("solar"), "sol");});
test("solbelyst -> solbelyst", function() {deepEqual( Stem("solbelyst"), "solbelyst");});
test("solblixt -> solblixt", function() {deepEqual( Stem("solblixt"), "solblixt");});
test("solbränd -> solbränd", function() {deepEqual( Stem("solbränd"), "solbränd");});
test("soldat -> sold", function() {deepEqual( Stem("soldat"), "sold");});
test("soldatens -> soldat", function() {deepEqual( Stem("soldatens"), "soldat");});
test("soldater -> soldat", function() {deepEqual( Stem("soldater"), "soldat");});
test("soldaterna -> soldat", function() {deepEqual( Stem("soldaterna"), "soldat");});
test("soldatfilosofi -> soldatfilosofi", function() {deepEqual( Stem("soldatfilosofi"), "soldatfilosofi");});
test("solen -> sol", function() {deepEqual( Stem("solen"), "sol");});
test("solens -> sol", function() {deepEqual( Stem("solens"), "sol");});
test("solglimtarna -> solglimt", function() {deepEqual( Stem("solglimtarna"), "solglimt");});
test("solid -> solid", function() {deepEqual( Stem("solid"), "solid");});
test("soliditet -> soliditet", function() {deepEqual( Stem("soliditet"), "soliditet");});
test("solig -> sol", function() {deepEqual( Stem("solig"), "sol");});
test("soliga -> sol", function() {deepEqual( Stem("soliga"), "sol");});
test("soligare -> sol", function() {deepEqual( Stem("soligare"), "sol");});
test("soligt -> sol", function() {deepEqual( Stem("soligt"), "sol");});
test("solkiga -> solk", function() {deepEqual( Stem("solkiga"), "solk");});
test("solljuset -> solljuset", function() {deepEqual( Stem("solljuset"), "solljuset");});
test("solnedgångarna -> solnedgång", function() {deepEqual( Stem("solnedgångarna"), "solnedgång");});
test("solnedgången -> solnedgång", function() {deepEqual( Stem("solnedgången"), "solnedgång");});
test("solsidan -> solsidan", function() {deepEqual( Stem("solsidan"), "solsidan");});
test("solsken -> solsk", function() {deepEqual( Stem("solsken"), "solsk");});
test("solskenet -> solskenet", function() {deepEqual( Stem("solskenet"), "solskenet");});
test("solskensdag -> solskensdag", function() {deepEqual( Stem("solskensdag"), "solskensdag");});
test("solskensdagar -> solskensdag", function() {deepEqual( Stem("solskensdagar"), "solskensdag");});
test("solskensdagarna -> solskensdag", function() {deepEqual( Stem("solskensdagarna"), "solskensdag");});
test("solskensvarma -> solskensvarm", function() {deepEqual( Stem("solskensvarma"), "solskensvarm");});
test("solskimmer -> solskimm", function() {deepEqual( Stem("solskimmer"), "solskimm");});
test("solstrimma -> solstrimm", function() {deepEqual( Stem("solstrimma"), "solstrimm");});
test("solstrimman -> solstrimman", function() {deepEqual( Stem("solstrimman"), "solstrimman");});
test("solstrålar -> solstrål", function() {deepEqual( Stem("solstrålar"), "solstrål");});
test("solstrålarna -> solstrål", function() {deepEqual( Stem("solstrålarna"), "solstrål");});
test("solstrålarnas -> solstrål", function() {deepEqual( Stem("solstrålarnas"), "solstrål");});
test("solstrålarne -> solstrål", function() {deepEqual( Stem("solstrålarne"), "solstrål");});
test("solstråle -> solstrål", function() {deepEqual( Stem("solstråle"), "solstrål");});
test("soltorka -> soltork", function() {deepEqual( Stem("soltorka"), "soltork");});
test("soltorkad -> soltork", function() {deepEqual( Stem("soltorkad"), "soltork");});
test("solupp -> solupp", function() {deepEqual( Stem("solupp"), "solupp");});
test("soluppgång -> soluppgång", function() {deepEqual( Stem("soluppgång"), "soluppgång");});
test("soluppgången -> soluppgång", function() {deepEqual( Stem("soluppgången"), "soluppgång");});
test("som -> som", function() {deepEqual( Stem("som"), "som");});
test("somliga -> som", function() {deepEqual( Stem("somliga"), "som");});
test("sommar -> somm", function() {deepEqual( Stem("sommar"), "somm");});
test("sommaraftnarna -> sommaraftn", function() {deepEqual( Stem("sommaraftnarna"), "sommaraftn");});
test("sommarafton -> sommarafton", function() {deepEqual( Stem("sommarafton"), "sommarafton");});
test("sommarblå -> sommarblå", function() {deepEqual( Stem("sommarblå"), "sommarblå");});
test("sommarbyxor -> sommarbyx", function() {deepEqual( Stem("sommarbyxor"), "sommarbyx");});
test("sommardag -> sommardag", function() {deepEqual( Stem("sommardag"), "sommardag");});
test("sommardagens -> sommardag", function() {deepEqual( Stem("sommardagens"), "sommardag");});
test("sommaren -> somm", function() {deepEqual( Stem("sommaren"), "somm");});
test("sommarens -> somm", function() {deepEqual( Stem("sommarens"), "somm");});
test("sommarfarväl -> sommarfarväl", function() {deepEqual( Stem("sommarfarväl"), "sommarfarväl");});
test("sommarfjäril -> sommarfjäril", function() {deepEqual( Stem("sommarfjäril"), "sommarfjäril");});
test("sommarfloret -> sommarfloret", function() {deepEqual( Stem("sommarfloret"), "sommarfloret");});
test("sommargrönskan -> sommargrönskan", function() {deepEqual( Stem("sommargrönskan"), "sommargrönskan");});
test("sommarhem -> sommarhem", function() {deepEqual( Stem("sommarhem"), "sommarhem");});
test("sommarhettan -> sommarhettan", function() {deepEqual( Stem("sommarhettan"), "sommarhettan");});
test("sommarklänning -> sommarklänning", function() {deepEqual( Stem("sommarklänning"), "sommarklänning");});
test("sommarklänningar -> sommarklänning", function() {deepEqual( Stem("sommarklänningar"), "sommarklänning");});
test("sommarkostym -> sommarkostym", function() {deepEqual( Stem("sommarkostym"), "sommarkostym");});
test("sommarkvällen -> sommarkväll", function() {deepEqual( Stem("sommarkvällen"), "sommarkväll");});
test("sommarlovet -> sommarlovet", function() {deepEqual( Stem("sommarlovet"), "sommarlovet");});
test("sommarmoln -> sommarmoln", function() {deepEqual( Stem("sommarmoln"), "sommarmoln");});
test("sommarmorgnarna -> sommarmorgn", function() {deepEqual( Stem("sommarmorgnarna"), "sommarmorgn");});
test("sommarmorgonen -> sommarmorgon", function() {deepEqual( Stem("sommarmorgonen"), "sommarmorgon");});
test("sommarn -> sommarn", function() {deepEqual( Stem("sommarn"), "sommarn");});
test("sommarnattsmörkret -> sommarnattsmörkret", function() {deepEqual( Stem("sommarnattsmörkret"), "sommarnattsmörkret");});
test("sommarnattsskymningen -> sommarnattsskymning", function() {deepEqual( Stem("sommarnattsskymningen"), "sommarnattsskymning");});
test("sommarns -> sommarn", function() {deepEqual( Stem("sommarns"), "sommarn");});
test("sommarnätter -> sommarnät", function() {deepEqual( Stem("sommarnätter"), "sommarnät");});
test("sommarnöje -> sommarnöj", function() {deepEqual( Stem("sommarnöje"), "sommarnöj");});
test("sommarnöjet -> sommarnöjet", function() {deepEqual( Stem("sommarnöjet"), "sommarnöjet");});
test("sommarrestaurangerna -> sommarrestaurang", function() {deepEqual( Stem("sommarrestaurangerna"), "sommarrestaurang");});
test("sommarrum -> sommarrum", function() {deepEqual( Stem("sommarrum"), "sommarrum");});
test("sommarsöndag -> sommarsöndag", function() {deepEqual( Stem("sommarsöndag"), "sommarsöndag");});
test("sommartiden -> sommartid", function() {deepEqual( Stem("sommartiden"), "sommartid");});
test("sommarvindem -> sommarvindem", function() {deepEqual( Stem("sommarvindem"), "sommarvindem");});
test("sommarvinden -> sommarvind", function() {deepEqual( Stem("sommarvinden"), "sommarvind");});
test("somna -> somn", function() {deepEqual( Stem("somna"), "somn");});
test("somnade -> somn", function() {deepEqual( Stem("somnade"), "somn");});
test("somnar -> somn", function() {deepEqual( Stem("somnar"), "somn");});
test("somnat -> somn", function() {deepEqual( Stem("somnat"), "somn");});
test("somnen -> somn", function() {deepEqual( Stem("somnen"), "somn");});
test("somrarna -> somr", function() {deepEqual( Stem("somrarna"), "somr");});
test("somras -> somr", function() {deepEqual( Stem("somras"), "somr");});
test("somrnaren -> somrn", function() {deepEqual( Stem("somrnaren"), "somrn");});
test("son -> son", function() {deepEqual( Stem("son"), "son");});
test("sonderna -> sond", function() {deepEqual( Stem("sonderna"), "sond");});
test("sonen -> son", function() {deepEqual( Stem("sonen"), "son");});
test("sonens -> son", function() {deepEqual( Stem("sonens"), "son");});
test("sonett -> sonet", function() {deepEqual( Stem("sonett"), "sonet");});
test("sonhustru -> sonhustru", function() {deepEqual( Stem("sonhustru"), "sonhustru");});
test("sonn -> sonn", function() {deepEqual( Stem("sonn"), "sonn");});
test("sons -> son", function() {deepEqual( Stem("sons"), "son");});
test("sonson -> sonson", function() {deepEqual( Stem("sonson"), "sonson");});
test("sont -> sont", function() {deepEqual( Stem("sont"), "sont");});
test("sop -> sop", function() {deepEqual( Stem("sop"), "sop");});
test("sopa -> sop", function() {deepEqual( Stem("sopa"), "sop");});
test("sopade -> sop", function() {deepEqual( Stem("sopade"), "sop");});
test("soppa -> sopp", function() {deepEqual( Stem("soppa"), "sopp");});
test("soppan -> soppan", function() {deepEqual( Stem("soppan"), "soppan");});
test("soppor -> sopp", function() {deepEqual( Stem("soppor"), "sopp");});
test("soppskålen -> soppskål", function() {deepEqual( Stem("soppskålen"), "soppskål");});
test("sorg -> sorg", function() {deepEqual( Stem("sorg"), "sorg");});
test("sorgbrev -> sorgbrev", function() {deepEqual( Stem("sorgbrev"), "sorgbrev");});
test("sorgbundenhet -> sorgbunden", function() {deepEqual( Stem("sorgbundenhet"), "sorgbunden");});
test("sorgdräkt -> sorgdräk", function() {deepEqual( Stem("sorgdräkt"), "sorgdräk");});
test("sorgefärd -> sorgefärd", function() {deepEqual( Stem("sorgefärd"), "sorgefärd");});
test("sorgehuset -> sorgehuset", function() {deepEqual( Stem("sorgehuset"), "sorgehuset");});
test("sorgen -> sorg", function() {deepEqual( Stem("sorgen"), "sorg");});
test("sorgens -> sorg", function() {deepEqual( Stem("sorgens"), "sorg");});
test("sorger -> sorg", function() {deepEqual( Stem("sorger"), "sorg");});
test("sorgesam -> sorgesam", function() {deepEqual( Stem("sorgesam"), "sorgesam");});
test("sorgfälliga -> sorgfäl", function() {deepEqual( Stem("sorgfälliga"), "sorgfäl");});
test("sorgfälligare -> sorgfäl", function() {deepEqual( Stem("sorgfälligare"), "sorgfäl");});
test("sorgfälligaste -> sorgfäl", function() {deepEqual( Stem("sorgfälligaste"), "sorgfäl");});
test("sorgfällighet -> sorgfäl", function() {deepEqual( Stem("sorgfällighet"), "sorgfäl");});
test("sorgfälligt -> sorgfäl", function() {deepEqual( Stem("sorgfälligt"), "sorgfäl");});
test("sorglig -> sorg", function() {deepEqual( Stem("sorglig"), "sorg");});
test("sorgliga -> sorg", function() {deepEqual( Stem("sorgliga"), "sorg");});
test("sorgligt -> sorg", function() {deepEqual( Stem("sorgligt"), "sorg");});
test("sorgmodigaste -> sorgmod", function() {deepEqual( Stem("sorgmodigaste"), "sorgmod");});
test("sorgmodigt -> sorgmod", function() {deepEqual( Stem("sorgmodigt"), "sorgmod");});
test("sorgse -> sorgs", function() {deepEqual( Stem("sorgse"), "sorgs");});
test("sorgsen -> sorgs", function() {deepEqual( Stem("sorgsen"), "sorgs");});
test("sorgsenhet -> sorgsen", function() {deepEqual( Stem("sorgsenhet"), "sorgsen");});
test("sorgset -> sorgset", function() {deepEqual( Stem("sorgset"), "sorgset");});
test("sorgsna -> sorgsn", function() {deepEqual( Stem("sorgsna"), "sorgsn");});
test("sorl -> sorl", function() {deepEqual( Stem("sorl"), "sorl");});
test("sorlade -> sorl", function() {deepEqual( Stem("sorlade"), "sorl");});
test("sorlande -> sorl", function() {deepEqual( Stem("sorlande"), "sorl");});
test("sorlet -> sorlet", function() {deepEqual( Stem("sorlet"), "sorlet");});
test("sorm -> sorm", function() {deepEqual( Stem("sorm"), "sorm");});
test("sorn -> sorn", function() {deepEqual( Stem("sorn"), "sorn");});
test("sort -> sort", function() {deepEqual( Stem("sort"), "sort");});
test("sorten -> sort", function() {deepEqual( Stem("sorten"), "sort");});
test("sortens -> sort", function() {deepEqual( Stem("sortens"), "sort");});
test("sorter -> sort", function() {deepEqual( Stem("sorter"), "sort");});
test("sorterade -> sorter", function() {deepEqual( Stem("sorterade"), "sorter");});
test("sorters -> sorter", function() {deepEqual( Stem("sorters"), "sorter");});
test("sorts -> sort", function() {deepEqual( Stem("sorts"), "sort");});
test("sot -> sot", function() {deepEqual( Stem("sot"), "sot");});
test("sotar -> sot", function() {deepEqual( Stem("sotar"), "sot");});
test("sotarfrun -> sotarfrun", function() {deepEqual( Stem("sotarfrun"), "sotarfrun");});
test("sotenäs -> sotenäs", function() {deepEqual( Stem("sotenäs"), "sotenäs");});
test("sotflammiga -> sotflamm", function() {deepEqual( Stem("sotflammiga"), "sotflamm");});
test("sottiser -> sottis", function() {deepEqual( Stem("sottiser"), "sottis");});
test("sov -> sov", function() {deepEqual( Stem("sov"), "sov");});
test("sova -> sov", function() {deepEqual( Stem("sova"), "sov");});
test("sovande -> sov", function() {deepEqual( Stem("sovande"), "sov");});
test("sover -> sov", function() {deepEqual( Stem("sover"), "sov");});
test("sovit -> sovit", function() {deepEqual( Stem("sovit"), "sovit");});
test("sovo -> sovo", function() {deepEqual( Stem("sovo"), "sovo");});
test("sovrum -> sovrum", function() {deepEqual( Stem("sovrum"), "sovrum");});
test("sovrummen -> sovrumm", function() {deepEqual( Stem("sovrummen"), "sovrumm");});
test("sovrummet -> sovrummet", function() {deepEqual( Stem("sovrummet"), "sovrummet");});
test("spad -> spad", function() {deepEqual( Stem("spad"), "spad");});
test("spada -> spad", function() {deepEqual( Stem("spada"), "spad");});
test("spadar -> spad", function() {deepEqual( Stem("spadar"), "spad");});
test("spade -> spad", function() {deepEqual( Stem("spade"), "spad");});
test("spader -> spad", function() {deepEqual( Stem("spader"), "spad");});
test("spaderdam -> spaderdam", function() {deepEqual( Stem("spaderdam"), "spaderdam");});
test("spak -> spak", function() {deepEqual( Stem("spak"), "spak");});
test("spakt -> spakt", function() {deepEqual( Stem("spakt"), "spakt");});
test("spana -> span", function() {deepEqual( Stem("spana"), "span");});
test("spanade -> span", function() {deepEqual( Stem("spanade"), "span");});
test("spanande -> span", function() {deepEqual( Stem("spanande"), "span");});
test("spanat -> span", function() {deepEqual( Stem("spanat"), "span");});
test("spaning -> spaning", function() {deepEqual( Stem("spaning"), "spaning");});
test("spaningen -> spaning", function() {deepEqual( Stem("spaningen"), "spaning");});
test("spanmål -> spanmål", function() {deepEqual( Stem("spanmål"), "spanmål");});
test("spann -> spann", function() {deepEqual( Stem("spann"), "spann");});
test("spannmålen -> spannmål", function() {deepEqual( Stem("spannmålen"), "spannmål");});
test("spansk -> spansk", function() {deepEqual( Stem("spansk"), "spansk");});
test("spanska -> spansk", function() {deepEqual( Stem("spanska"), "spansk");});
test("spar -> spar", function() {deepEqual( Stem("spar"), "spar");});
test("spara -> spar", function() {deepEqual( Stem("spara"), "spar");});
test("sparade -> spar", function() {deepEqual( Stem("sparade"), "spar");});
test("sparar -> spar", function() {deepEqual( Stem("sparar"), "spar");});
test("sparat -> spar", function() {deepEqual( Stem("sparat"), "spar");});
test("sparka -> spark", function() {deepEqual( Stem("sparka"), "spark");});
test("sparkad -> spark", function() {deepEqual( Stem("sparkad"), "spark");});
test("sparkade -> spark", function() {deepEqual( Stem("sparkade"), "spark");});
test("sparkar -> spark", function() {deepEqual( Stem("sparkar"), "spark");});
test("sparkassa -> sparkass", function() {deepEqual( Stem("sparkassa"), "sparkass");});
test("sparkassorna -> sparkass", function() {deepEqual( Stem("sparkassorna"), "sparkass");});
test("sparkat -> spark", function() {deepEqual( Stem("sparkat"), "spark");});
test("sparlakan -> sparlakan", function() {deepEqual( Stem("sparlakan"), "sparlakan");});
test("sparsamhet -> sparsam", function() {deepEqual( Stem("sparsamhet"), "sparsam");});
test("sparsamhetsskäl -> sparsamhetsskäl", function() {deepEqual( Stem("sparsamhetsskäl"), "sparsamhetsskäl");});
test("sparsamt -> sparsamt", function() {deepEqual( Stem("sparsamt"), "sparsamt");});
test("sparstyfver -> sparstyfv", function() {deepEqual( Stem("sparstyfver"), "sparstyfv");});
test("spartanskt -> spartansk", function() {deepEqual( Stem("spartanskt"), "spartansk");});
test("sparv -> sparv", function() {deepEqual( Stem("sparv"), "sparv");});
test("sparvar -> sparv", function() {deepEqual( Stem("sparvar"), "sparv");});
test("sparvarna -> sparv", function() {deepEqual( Stem("sparvarna"), "sparv");});
test("spasmer -> spasm", function() {deepEqual( Stem("spasmer"), "spasm");});
test("spasmodiskt -> spasmodisk", function() {deepEqual( Stem("spasmodiskt"), "spasmodisk");});
test("spatsera -> spatser", function() {deepEqual( Stem("spatsera"), "spatser");});
test("spatserade -> spatser", function() {deepEqual( Stem("spatserade"), "spatser");});
test("spatserat -> spatser", function() {deepEqual( Stem("spatserat"), "spatser");});
test("spatserfärd -> spatserfärd", function() {deepEqual( Stem("spatserfärd"), "spatserfärd");});
test("spatserrock -> spatserrock", function() {deepEqual( Stem("spatserrock"), "spatserrock");});
test("spcgel -> spcgel", function() {deepEqual( Stem("spcgel"), "spcgel");});
test("spcjadc -> spcjadc", function() {deepEqual( Stem("spcjadc"), "spcjadc");});
test("spe -> spe", function() {deepEqual( Stem("spe"), "spe");});
test("specerihandlare -> specerihandl", function() {deepEqual( Stem("specerihandlare"), "specerihandl");});
test("specialisera -> specialiser", function() {deepEqual( Stem("specialisera"), "specialiser");});
test("specialisten -> specialist", function() {deepEqual( Stem("specialisten"), "specialist");});
test("specialitet -> specialitet", function() {deepEqual( Stem("specialitet"), "specialitet");});
test("specialstudier -> specialstudi", function() {deepEqual( Stem("specialstudier"), "specialstudi");});
test("specie -> speci", function() {deepEqual( Stem("specie"), "speci");});
test("speciella -> speciell", function() {deepEqual( Stem("speciella"), "speciell");});
test("speg -> speg", function() {deepEqual( Stem("speg"), "speg");});
test("spege -> speg", function() {deepEqual( Stem("spege"), "speg");});
test("spegehl -> spegehl", function() {deepEqual( Stem("spegehl"), "spegehl");});
test("spegel -> spegel", function() {deepEqual( Stem("spegel"), "spegel");});
test("spegelbilden -> spegelbild", function() {deepEqual( Stem("spegelbilden"), "spegelbild");});
test("spegelbordet -> spegelbordet", function() {deepEqual( Stem("spegelbordet"), "spegelbordet");});
test("spegelglaset -> spegelglaset", function() {deepEqual( Stem("spegelglaset"), "spegelglaset");});
test("spegellåda -> spegellåd", function() {deepEqual( Stem("spegellåda"), "spegellåd");});
test("spegeln -> spegeln", function() {deepEqual( Stem("spegeln"), "spegeln");});
test("spegelyta -> spegelyt", function() {deepEqual( Stem("spegelyta"), "spegelyt");});
test("spegla -> spegl", function() {deepEqual( Stem("spegla"), "spegl");});
test("speglade -> spegl", function() {deepEqual( Stem("speglade"), "spegl");});
test("speglades -> spegl", function() {deepEqual( Stem("speglades"), "spegl");});
test("speglande -> spegl", function() {deepEqual( Stem("speglande"), "spegl");});
test("speglar -> spegl", function() {deepEqual( Stem("speglar"), "spegl");});
test("speja -> spej", function() {deepEqual( Stem("speja"), "spej");});
test("spejade -> spej", function() {deepEqual( Stem("spejade"), "spej");});
test("spejande -> spej", function() {deepEqual( Stem("spejande"), "spej");});
test("spejeri -> spejeri", function() {deepEqual( Stem("spejeri"), "spejeri");});
test("spektakel -> spektakel", function() {deepEqual( Stem("spektakel"), "spektakel");});
test("spektakelbiljett -> spektakelbiljet", function() {deepEqual( Stem("spektakelbiljett"), "spektakelbiljet");});
test("spektakeldagen -> spektakeldag", function() {deepEqual( Stem("spektakeldagen"), "spektakeldag");});
test("spektakeltiden -> spektakeltid", function() {deepEqual( Stem("spektakeltiden"), "spektakeltid");});
test("spektakler -> spektakl", function() {deepEqual( Stem("spektakler"), "spektakl");});
test("spektaklet -> spektaklet", function() {deepEqual( Stem("spektaklet"), "spektaklet");});
test("spektoren -> spektor", function() {deepEqual( Stem("spektoren"), "spektor");});
test("spekulant -> spekulant", function() {deepEqual( Stem("spekulant"), "spekulant");});
test("spekulation -> spekulation", function() {deepEqual( Stem("spekulation"), "spekulation");});
test("spekulationer -> spekulation", function() {deepEqual( Stem("spekulationer"), "spekulation");});
test("spekulationerna -> spekulation", function() {deepEqual( Stem("spekulationerna"), "spekulation");});
test("spekulera -> spekuler", function() {deepEqual( Stem("spekulera"), "spekuler");});
test("spekulerade -> spekuler", function() {deepEqual( Stem("spekulerade"), "spekuler");});
test("spel -> spel", function() {deepEqual( Stem("spel"), "spel");});
test("spela -> spel", function() {deepEqual( Stem("spela"), "spel");});
test("spelade -> spel", function() {deepEqual( Stem("spelade"), "spel");});
test("spelande -> spel", function() {deepEqual( Stem("spelande"), "spel");});
test("spelar -> spel", function() {deepEqual( Stem("spelar"), "spel");});
test("spelat -> spel", function() {deepEqual( Stem("spelat"), "spel");});
test("spelbordet -> spelbordet", function() {deepEqual( Stem("spelbordet"), "spelbordet");});
test("spelct -> spelct", function() {deepEqual( Stem("spelct"), "spelct");});
test("spelen -> spel", function() {deepEqual( Stem("spelen"), "spel");});
test("spelet -> spelet", function() {deepEqual( Stem("spelet"), "spelet");});
test("spelevink -> spelevink", function() {deepEqual( Stem("spelevink"), "spelevink");});
test("spelfåglar -> spelfågl", function() {deepEqual( Stem("spelfåglar"), "spelfågl");});
test("spelkort -> spelkort", function() {deepEqual( Stem("spelkort"), "spelkort");});
test("spelman -> spelman", function() {deepEqual( Stem("spelman"), "spelman");});
test("spelmän -> spelmän", function() {deepEqual( Stem("spelmän"), "spelmän");});
test("spelpartier -> spelparti", function() {deepEqual( Stem("spelpartier"), "spelparti");});
test("spelsen -> spels", function() {deepEqual( Stem("spelsen"), "spels");});
test("spelte -> spelt", function() {deepEqual( Stem("spelte"), "spelt");});
test("spelvärdarna -> spelvärd", function() {deepEqual( Stem("spelvärdarna"), "spelvärd");});
test("spenaten -> spenat", function() {deepEqual( Stem("spenaten"), "spenat");});
test("spenatkarotten -> spenatkarot", function() {deepEqual( Stem("spenatkarotten"), "spenatkarot");});
test("spencer -> spenc", function() {deepEqual( Stem("spencer"), "spenc");});
test("spens -> spen", function() {deepEqual( Stem("spens"), "spen");});
test("spenslig -> spens", function() {deepEqual( Stem("spenslig"), "spens");});
test("spensliga -> spens", function() {deepEqual( Stem("spensliga"), "spens");});
test("spets -> spet", function() {deepEqual( Stem("spets"), "spet");});
test("spetsade -> spets", function() {deepEqual( Stem("spetsade"), "spets");});
test("spetsades -> spets", function() {deepEqual( Stem("spetsades"), "spets");});
test("spetsar -> spets", function() {deepEqual( Stem("spetsar"), "spets");});
test("spetsen -> spets", function() {deepEqual( Stem("spetsen"), "spets");});
test("spetsglas -> spetsgl", function() {deepEqual( Stem("spetsglas"), "spetsgl");});
test("spetsig -> spets", function() {deepEqual( Stem("spetsig"), "spets");});
test("spetsiga -> spets", function() {deepEqual( Stem("spetsiga"), "spets");});
test("spetsigaste -> spets", function() {deepEqual( Stem("spetsigaste"), "spets");});
test("spetsigt -> spets", function() {deepEqual( Stem("spetsigt"), "spets");});
test("spetskantade -> spetskant", function() {deepEqual( Stem("spetskantade"), "spetskant");});
test("spetskrage -> spetskrag", function() {deepEqual( Stem("spetskrage"), "spetskrag");});
test("spickeskinkan -> spickeskinkan", function() {deepEqual( Stem("spickeskinkan"), "spickeskinkan");});
test("spik -> spik", function() {deepEqual( Stem("spik"), "spik");});
test("spiken -> spik", function() {deepEqual( Stem("spiken"), "spik");});
test("spilla -> spill", function() {deepEqual( Stem("spilla"), "spill");});
test("spilld -> spilld", function() {deepEqual( Stem("spilld"), "spilld");});
test("spillda -> spilld", function() {deepEqual( Stem("spillda"), "spilld");});
test("spilles -> spill", function() {deepEqual( Stem("spilles"), "spill");});
test("spillning -> spillning", function() {deepEqual( Stem("spillning"), "spillning");});
test("spillror -> spillr", function() {deepEqual( Stem("spillror"), "spillr");});
test("spillrorna -> spillr", function() {deepEqual( Stem("spillrorna"), "spillr");});
test("spiltorna -> spilt", function() {deepEqual( Stem("spiltorna"), "spilt");});
test("spindel -> spindel", function() {deepEqual( Stem("spindel"), "spindel");});
test("spindellika -> spindellik", function() {deepEqual( Stem("spindellika"), "spindellik");});
test("spindeln -> spindeln", function() {deepEqual( Stem("spindeln"), "spindeln");});
test("spindelnät -> spindelnät", function() {deepEqual( Stem("spindelnät"), "spindelnät");});
test("spindelväv -> spindelväv", function() {deepEqual( Stem("spindelväv"), "spindelväv");});
test("spindelvävar -> spindelväv", function() {deepEqual( Stem("spindelvävar"), "spindelväv");});
test("spindlar -> spindl", function() {deepEqual( Stem("spindlar"), "spindl");});
test("spindlarnas -> spindl", function() {deepEqual( Stem("spindlarnas"), "spindl");});
test("spinna -> spinn", function() {deepEqual( Stem("spinna"), "spinn");});
test("spinnas -> spinn", function() {deepEqual( Stem("spinnas"), "spinn");});
test("spinner -> spinn", function() {deepEqual( Stem("spinner"), "spinn");});
test("spinnerskans -> spinnerskan", function() {deepEqual( Stem("spinnerskans"), "spinnerskan");});
test("spinnrock -> spinnrock", function() {deepEqual( Stem("spinnrock"), "spinnrock");});
test("spinnrocken -> spinnrock", function() {deepEqual( Stem("spinnrocken"), "spinnrock");});
test("spion -> spion", function() {deepEqual( Stem("spion"), "spion");});
test("spionera -> spioner", function() {deepEqual( Stem("spionera"), "spioner");});
test("spionerade -> spioner", function() {deepEqual( Stem("spionerade"), "spioner");});
test("spionerat -> spioner", function() {deepEqual( Stem("spionerat"), "spioner");});
test("spira -> spir", function() {deepEqual( Stem("spira"), "spir");});
test("spirade -> spir", function() {deepEqual( Stem("spirade"), "spir");});
test("spiralfjädrar -> spiralfjädr", function() {deepEqual( Stem("spiralfjädrar"), "spiralfjädr");});
test("spirande -> spir", function() {deepEqual( Stem("spirande"), "spir");});
test("spirat -> spir", function() {deepEqual( Stem("spirat"), "spir");});
test("spirituosa -> spirituos", function() {deepEqual( Stem("spirituosa"), "spirituos");});
test("spis -> spis", function() {deepEqual( Stem("spis"), "spis");});
test("spisade -> spis", function() {deepEqual( Stem("spisade"), "spis");});
test("spisat -> spis", function() {deepEqual( Stem("spisat"), "spis");});
test("spiseln -> spiseln", function() {deepEqual( Stem("spiseln"), "spiseln");});
test("spiselvärmen -> spiselvärm", function() {deepEqual( Stem("spiselvärmen"), "spiselvärm");});
test("spisen -> spis", function() {deepEqual( Stem("spisen"), "spis");});
test("spiskanten -> spiskant", function() {deepEqual( Stem("spiskanten"), "spiskant");});
test("spisvrån -> spisvrån", function() {deepEqual( Stem("spisvrån"), "spisvrån");});
test("spjerna -> spjern", function() {deepEqual( Stem("spjerna"), "spjern");});
test("spjernade -> spjern", function() {deepEqual( Stem("spjernade"), "spjern");});
test("spjut -> spjut", function() {deepEqual( Stem("spjut"), "spjut");});
test("spjutsäng -> spjutsäng", function() {deepEqual( Stem("spjutsäng"), "spjutsäng");});
test("spjäll -> spjäll", function() {deepEqual( Stem("spjäll"), "spjäll");});
test("spjärnade -> spjärn", function() {deepEqual( Stem("spjärnade"), "spjärn");});
test("spleen -> spleen", function() {deepEqual( Stem("spleen"), "spleen");});
test("splitter -> splitt", function() {deepEqual( Stem("splitter"), "splitt");});
test("spolen -> spol", function() {deepEqual( Stem("spolen"), "spol");});
test("spoling -> spoling", function() {deepEqual( Stem("spoling"), "spoling");});
test("spord -> spord", function() {deepEqual( Stem("spord"), "spord");});
test("sporer -> spor", function() {deepEqual( Stem("sporer"), "spor");});
test("sporra -> sporr", function() {deepEqual( Stem("sporra"), "sporr");});
test("sporrar -> sporr", function() {deepEqual( Stem("sporrar"), "sporr");});
test("sporre -> sporr", function() {deepEqual( Stem("sporre"), "sporr");});
test("sport -> sport", function() {deepEqual( Stem("sport"), "sport");});
test("spotsk -> spotsk", function() {deepEqual( Stem("spotsk"), "spotsk");});
test("spotskt -> spotsk", function() {deepEqual( Stem("spotskt"), "spotsk");});
test("spotta -> spott", function() {deepEqual( Stem("spotta"), "spott");});
test("spottade -> spott", function() {deepEqual( Stem("spottade"), "spott");});
test("spottstyfver -> spottstyfv", function() {deepEqual( Stem("spottstyfver"), "spottstyfv");});
test("sprack -> sprack", function() {deepEqual( Stem("sprack"), "sprack");});
test("sprakade -> sprak", function() {deepEqual( Stem("sprakade"), "sprak");});
test("sprakande -> sprak", function() {deepEqual( Stem("sprakande"), "sprak");});
test("sprang -> sprang", function() {deepEqual( Stem("sprang"), "sprang");});
test("spratt -> spratt", function() {deepEqual( Stem("spratt"), "spratt");});
test("sprattlade -> sprattl", function() {deepEqual( Stem("sprattlade"), "sprattl");});
test("spred -> spred", function() {deepEqual( Stem("spred"), "spred");});
test("spredo -> spredo", function() {deepEqual( Stem("spredo"), "spredo");});
test("spredos -> spredo", function() {deepEqual( Stem("spredos"), "spredo");});
test("spretade -> spret", function() {deepEqual( Stem("spretade"), "spret");});
test("spretande -> spret", function() {deepEqual( Stem("spretande"), "spret");});
test("spricka -> sprick", function() {deepEqual( Stem("spricka"), "sprick");});
test("spricker -> sprick", function() {deepEqual( Stem("spricker"), "sprick");});
test("sprid -> sprid", function() {deepEqual( Stem("sprid"), "sprid");});
test("sprida -> sprid", function() {deepEqual( Stem("sprida"), "sprid");});
test("spridas -> sprid", function() {deepEqual( Stem("spridas"), "sprid");});
test("spridd -> spridd", function() {deepEqual( Stem("spridd"), "spridd");});
test("spridda -> spridd", function() {deepEqual( Stem("spridda"), "spridd");});
test("spridt -> spridt", function() {deepEqual( Stem("spridt"), "spridt");});
test("spring -> spring", function() {deepEqual( Stem("spring"), "spring");});
test("springa -> spring", function() {deepEqual( Stem("springa"), "spring");});
test("springande -> spring", function() {deepEqual( Stem("springande"), "spring");});
test("springandes -> spring", function() {deepEqual( Stem("springandes"), "spring");});
test("springare -> spring", function() {deepEqual( Stem("springare"), "spring");});
test("springbrunn -> springbrun", function() {deepEqual( Stem("springbrunn"), "springbrun");});
test("springer -> spring", function() {deepEqual( Stem("springer"), "spring");});
test("springet -> springet", function() {deepEqual( Stem("springet"), "springet");});
test("springkäringar -> springkäring", function() {deepEqual( Stem("springkäringar"), "springkäring");});
test("springorna -> spring", function() {deepEqual( Stem("springorna"), "spring");});
test("springpojke -> springpojk", function() {deepEqual( Stem("springpojke"), "springpojk");});
test("springrer -> springr", function() {deepEqual( Stem("springrer"), "springr");});
test("spriseglet -> spriseglet", function() {deepEqual( Stem("spriseglet"), "spriseglet");});
test("sprit -> sprit", function() {deepEqual( Stem("sprit"), "sprit");});
test("sprita -> sprit", function() {deepEqual( Stem("sprita"), "sprit");});
test("spriten -> sprit", function() {deepEqual( Stem("spriten"), "sprit");});
test("spritt -> spritt", function() {deepEqual( Stem("spritt"), "spritt");});
test("spritta -> spritt", function() {deepEqual( Stem("spritta"), "spritt");});
test("sprittande -> spritt", function() {deepEqual( Stem("sprittande"), "spritt");});
test("spritter -> spritt", function() {deepEqual( Stem("spritter"), "spritt");});
test("sprittning -> sprittning", function() {deepEqual( Stem("sprittning"), "sprittning");});
test("sprittningen -> sprittning", function() {deepEqual( Stem("sprittningen"), "sprittning");});
test("sprucken -> spruck", function() {deepEqual( Stem("sprucken"), "spruck");});
test("sprucket -> sprucket", function() {deepEqual( Stem("sprucket"), "sprucket");});
test("spruckit -> spruckit", function() {deepEqual( Stem("spruckit"), "spruckit");});
test("spruckna -> spruckn", function() {deepEqual( Stem("spruckna"), "spruckn");});
test("sprungit -> sprungit", function() {deepEqual( Stem("sprungit"), "sprungit");});
test("sprungo -> sprungo", function() {deepEqual( Stem("sprungo"), "sprungo");});
test("spruta -> sprut", function() {deepEqual( Stem("spruta"), "sprut");});
test("sprutade -> sprut", function() {deepEqual( Stem("sprutade"), "sprut");});
test("sprutto -> sprutto", function() {deepEqual( Stem("sprutto"), "sprutto");});
test("spräcklig -> spräck", function() {deepEqual( Stem("spräcklig"), "spräck");});
test("spräckliga -> spräck", function() {deepEqual( Stem("spräckliga"), "spräck");});
test("spräckt -> spräck", function() {deepEqual( Stem("spräckt"), "spräck");});
test("spräcktes -> spräck", function() {deepEqual( Stem("spräcktes"), "spräck");});
test("spränga -> spräng", function() {deepEqual( Stem("spränga"), "spräng");});
test("sprängande -> spräng", function() {deepEqual( Stem("sprängande"), "spräng");});
test("sprängas -> spräng", function() {deepEqual( Stem("sprängas"), "spräng");});
test("sprängd -> spräng", function() {deepEqual( Stem("sprängd"), "spräng");});
test("sprängda -> spräng", function() {deepEqual( Stem("sprängda"), "spräng");});
test("sprängdes -> spräng", function() {deepEqual( Stem("sprängdes"), "spräng");});
test("sprängs -> spräng", function() {deepEqual( Stem("sprängs"), "spräng");});
test("sprätt -> sprätt", function() {deepEqual( Stem("sprätt"), "sprätt");});
test("sprättar -> sprätt", function() {deepEqual( Stem("sprättar"), "sprätt");});
test("språk -> språk", function() {deepEqual( Stem("språk"), "språk");});
test("språka -> språk", function() {deepEqual( Stem("språka"), "språk");});
test("språkade -> språk", function() {deepEqual( Stem("språkade"), "språk");});
test("språkas -> språk", function() {deepEqual( Stem("språkas"), "språk");});
test("språkbruk -> språkbruk", function() {deepEqual( Stem("språkbruk"), "språkbruk");});
test("språket -> språket", function() {deepEqual( Stem("språket"), "språket");});
test("språkets -> språket", function() {deepEqual( Stem("språkets"), "språket");});
test("språklig -> språk", function() {deepEqual( Stem("språklig"), "språk");});
test("språkliga -> språk", function() {deepEqual( Stem("språkliga"), "språk");});
test("språklärare -> språklär", function() {deepEqual( Stem("språklärare"), "språklär");});
test("språklåda -> språklåd", function() {deepEqual( Stem("språklåda"), "språklåd");});
test("språksam -> språksam", function() {deepEqual( Stem("språksam"), "språksam");});
test("språng -> språng", function() {deepEqual( Stem("språng"), "språng");});
test("språnget -> språnget", function() {deepEqual( Stem("språnget"), "språnget");});
test("spröd -> spröd", function() {deepEqual( Stem("spröd"), "spröd");});
test("spröda -> spröd", function() {deepEqual( Stem("spröda"), "spröd");});
test("spröt -> spröt", function() {deepEqual( Stem("spröt"), "spröt");});
test("sprött -> sprött", function() {deepEqual( Stem("sprött"), "sprött");});
test("spunnet -> spunnet", function() {deepEqual( Stem("spunnet"), "spunnet");});
test("spydigt -> spyd", function() {deepEqual( Stem("spydigt"), "spyd");});
test("späd -> späd", function() {deepEqual( Stem("späd"), "späd");});
test("späda -> späd", function() {deepEqual( Stem("späda"), "späd");});
test("spädare -> späd", function() {deepEqual( Stem("spädare"), "späd");});
test("spädaste -> späd", function() {deepEqual( Stem("spädaste"), "späd");});
test("spädde -> spädd", function() {deepEqual( Stem("spädde"), "spädd");});
test("späder -> späd", function() {deepEqual( Stem("späder"), "späd");});
test("spädes -> späd", function() {deepEqual( Stem("spädes"), "späd");});
test("späka -> späk", function() {deepEqual( Stem("späka"), "späk");});
test("spänd -> spänd", function() {deepEqual( Stem("spänd"), "spänd");});
test("spända -> spänd", function() {deepEqual( Stem("spända"), "spänd");});
test("spände -> spänd", function() {deepEqual( Stem("spände"), "spänd");});
test("spändes -> spänd", function() {deepEqual( Stem("spändes"), "spänd");});
test("spändt -> spänd", function() {deepEqual( Stem("spändt"), "spänd");});
test("spänn -> spänn", function() {deepEqual( Stem("spänn"), "spänn");});
test("spänna -> spänn", function() {deepEqual( Stem("spänna"), "spänn");});
test("spännande -> spänn", function() {deepEqual( Stem("spännande"), "spänn");});
test("spänner -> spänn", function() {deepEqual( Stem("spänner"), "spänn");});
test("spänning -> spänning", function() {deepEqual( Stem("spänning"), "spänning");});
test("spänningen -> spänning", function() {deepEqual( Stem("spänningen"), "spänning");});
test("spänstig -> spänst", function() {deepEqual( Stem("spänstig"), "spänst");});
test("spänstighet -> spänst", function() {deepEqual( Stem("spänstighet"), "spänst");});
test("spänt -> spänt", function() {deepEqual( Stem("spänt"), "spänt");});
test("spänts -> spänt", function() {deepEqual( Stem("spänts"), "spänt");});
test("spärrad -> spärr", function() {deepEqual( Stem("spärrad"), "spärr");});
test("spärrade -> spärr", function() {deepEqual( Stem("spärrade"), "spärr");});
test("spärras -> spärr", function() {deepEqual( Stem("spärras"), "spärr");});
test("spådde -> spådd", function() {deepEqual( Stem("spådde"), "spådd");});
test("spånadsgummor -> spånadsgumm", function() {deepEqual( Stem("spånadsgummor"), "spånadsgumm");});
test("spår -> spår", function() {deepEqual( Stem("spår"), "spår");});
test("spåra -> spår", function() {deepEqual( Stem("spåra"), "spår");});
test("spårat -> spår", function() {deepEqual( Stem("spårat"), "spår");});
test("spåren -> spår", function() {deepEqual( Stem("spåren"), "spår");});
test("spåret -> spåret", function() {deepEqual( Stem("spåret"), "spåret");});
test("spårhund -> spårhund", function() {deepEqual( Stem("spårhund"), "spårhund");});
test("spårhundar -> spårhund", function() {deepEqual( Stem("spårhundar"), "spårhund");});
test("spårvagn -> spårvagn", function() {deepEqual( Stem("spårvagn"), "spårvagn");});
test("spårvagnarna -> spårvagn", function() {deepEqual( Stem("spårvagnarna"), "spårvagn");});
test("spårvagnarnas -> spårvagn", function() {deepEqual( Stem("spårvagnarnas"), "spårvagn");});
test("spårvagnen -> spårvagn", function() {deepEqual( Stem("spårvagnen"), "spårvagn");});
test("spått -> spått", function() {deepEqual( Stem("spått"), "spått");});
test("spö -> spö", function() {deepEqual( Stem("spö"), "spö");});
test("spöet -> spöet", function() {deepEqual( Stem("spöet"), "spöet");});
test("spöka -> spök", function() {deepEqual( Stem("spöka"), "spök");});
test("spökade -> spök", function() {deepEqual( Stem("spökade"), "spök");});
test("spökande -> spök", function() {deepEqual( Stem("spökande"), "spök");});
test("spöke -> spök", function() {deepEqual( Stem("spöke"), "spök");});
test("spökelse -> spök", function() {deepEqual( Stem("spökelse"), "spök");});
test("spöken -> spök", function() {deepEqual( Stem("spöken"), "spök");});
test("spökeri -> spökeri", function() {deepEqual( Stem("spökeri"), "spökeri");});
test("spöklikt -> spöklik", function() {deepEqual( Stem("spöklikt"), "spöklik");});
test("spökskepp -> spökskepp", function() {deepEqual( Stem("spökskepp"), "spökskepp");});
test("spörjande -> spörj", function() {deepEqual( Stem("spörjande"), "spörj");});
test("sqm -> sqm", function() {deepEqual( Stem("sqm"), "sqm");});
test("sqvallersjuka -> sqvallersjuk", function() {deepEqual( Stem("sqvallersjuka"), "sqvallersjuk");});
test("sqvallra -> sqvallr", function() {deepEqual( Stem("sqvallra"), "sqvallr");});
test("sqvalpa -> sqvalp", function() {deepEqual( Stem("sqvalpa"), "sqvalp");});
test("sqvalpande -> sqvalp", function() {deepEqual( Stem("sqvalpande"), "sqvalp");});
test("srapplar -> srappl", function() {deepEqual( Stem("srapplar"), "srappl");});
test("sräste -> sräst", function() {deepEqual( Stem("sräste"), "sräst");});
test("ssterrikeochomexpedi -> ssterrikeochomexpedi", function() {deepEqual( Stem("ssterrikeochomexpedi"), "ssterrikeochomexpedi");});
test("st -> st", function() {deepEqual( Stem("st"), "st");});
test("sta -> sta", function() {deepEqual( Stem("sta"), "sta");});
test("staaff -> staaff", function() {deepEqual( Stem("staaff"), "staaff");});
test("staaffs -> staaff", function() {deepEqual( Stem("staaffs"), "staaff");});
test("stack -> stack", function() {deepEqual( Stem("stack"), "stack");});
test("stackare -> stack", function() {deepEqual( Stem("stackare"), "stack");});
test("stackaren -> stack", function() {deepEqual( Stem("stackaren"), "stack");});
test("stackarn -> stackarn", function() {deepEqual( Stem("stackarn"), "stackarn");});
test("stackarna -> stack", function() {deepEqual( Stem("stackarna"), "stack");});
test("stackars -> stackar", function() {deepEqual( Stem("stackars"), "stackar");});
test("stacken -> stack", function() {deepEqual( Stem("stacken"), "stack");});
test("stackrarna -> stackr", function() {deepEqual( Stem("stackrarna"), "stackr");});
test("stad -> stad", function() {deepEqual( Stem("stad"), "stad");});
test("stadd -> stadd", function() {deepEqual( Stem("stadd"), "stadd");});
test("stadda -> stadd", function() {deepEqual( Stem("stadda"), "stadd");});
test("staden -> stad", function() {deepEqual( Stem("staden"), "stad");});
test("stadens -> stad", function() {deepEqual( Stem("stadens"), "stad");});
test("stadfäst -> stadfäst", function() {deepEqual( Stem("stadfäst"), "stadfäst");});
test("stadfästa -> stadfäst", function() {deepEqual( Stem("stadfästa"), "stadfäst");});
test("stadfästelsen -> stadfäst", function() {deepEqual( Stem("stadfästelsen"), "stadfäst");});
test("stadgade -> stadg", function() {deepEqual( Stem("stadgade"), "stadg");});
test("stadgadt -> stadgad", function() {deepEqual( Stem("stadgadt"), "stadgad");});
test("stadgar -> stadg", function() {deepEqual( Stem("stadgar"), "stadg");});
test("stadgat -> stadg", function() {deepEqual( Stem("stadgat"), "stadg");});
test("stadig -> stad", function() {deepEqual( Stem("stadig"), "stad");});
test("stadiga -> stad", function() {deepEqual( Stem("stadiga"), "stad");});
test("stadigt -> stad", function() {deepEqual( Stem("stadigt"), "stad");});
test("stadigvarande -> stadigvar", function() {deepEqual( Stem("stadigvarande"), "stadigvar");});
test("stadium -> stadium", function() {deepEqual( Stem("stadium"), "stadium");});
test("stadsbo -> stadsbo", function() {deepEqual( Stem("stadsbo"), "stadsbo");});
test("stadsbor -> stadsb", function() {deepEqual( Stem("stadsbor"), "stadsb");});
test("stadsdelarna -> stadsdel", function() {deepEqual( Stem("stadsdelarna"), "stadsdel");});
test("stadsflickan -> stadsflickan", function() {deepEqual( Stem("stadsflickan"), "stadsflickan");});
test("stadsflickorna -> stadsflick", function() {deepEqual( Stem("stadsflickorna"), "stadsflick");});
test("stadsfullmäktig -> stadsfullmäkt", function() {deepEqual( Stem("stadsfullmäktig"), "stadsfullmäkt");});
test("stadsfullmäktige -> stadsfullmäkt", function() {deepEqual( Stem("stadsfullmäktige"), "stadsfullmäkt");});
test("stadspark -> stadspark", function() {deepEqual( Stem("stadspark"), "stadspark");});
test("stadsporten -> stadsport", function() {deepEqual( Stem("stadsporten"), "stadsport");});
test("stadsvåning -> stadsvåning", function() {deepEqual( Stem("stadsvåning"), "stadsvåning");});
test("staende -> staend", function() {deepEqual( Stem("staende"), "staend");});
test("stafvade -> stafv", function() {deepEqual( Stem("stafvade"), "stafv");});
test("stagnelius -> stagnelius", function() {deepEqual( Stem("stagnelius"), "stagnelius");});
test("staken -> stak", function() {deepEqual( Stem("staken"), "stak");});
test("staket -> staket", function() {deepEqual( Stem("staket"), "staket");});
test("staketet -> staketet", function() {deepEqual( Stem("staketet"), "staketet");});
test("stal -> stal", function() {deepEqual( Stem("stal"), "stal");});
test("stall -> stall", function() {deepEqual( Stem("stall"), "stall");});
test("stallbroder -> stallbrod", function() {deepEqual( Stem("stallbroder"), "stallbrod");});
test("stallbröder -> stallbröd", function() {deepEqual( Stem("stallbröder"), "stallbröd");});
test("stallet -> stallet", function() {deepEqual( Stem("stallet"), "stallet");});
test("stallgårdens -> stallgård", function() {deepEqual( Stem("stallgårdens"), "stallgård");});
test("stallmng -> stallmng", function() {deepEqual( Stem("stallmng"), "stallmng");});
test("stallmästargården -> stallmästargård", function() {deepEqual( Stem("stallmästargården"), "stallmästargård");});
test("stam -> stam", function() {deepEqual( Stem("stam"), "stam");});
test("stamfränderna -> stamfränd", function() {deepEqual( Stem("stamfränderna"), "stamfränd");});
test("stamhåll -> stamhåll", function() {deepEqual( Stem("stamhåll"), "stamhåll");});
test("stamma -> stamm", function() {deepEqual( Stem("stamma"), "stamm");});
test("stammade -> stamm", function() {deepEqual( Stem("stammade"), "stamm");});
test("stammande -> stamm", function() {deepEqual( Stem("stammande"), "stamm");});
test("stammar -> stamm", function() {deepEqual( Stem("stammar"), "stamm");});
test("stammarna -> stamm", function() {deepEqual( Stem("stammarna"), "stamm");});
test("stammarnas -> stamm", function() {deepEqual( Stem("stammarnas"), "stamm");});
test("stammen -> stamm", function() {deepEqual( Stem("stammen"), "stamm");});
test("stammoder -> stammod", function() {deepEqual( Stem("stammoder"), "stammod");});
test("stammors -> stammor", function() {deepEqual( Stem("stammors"), "stammor");});
test("stammy -> stammy", function() {deepEqual( Stem("stammy"), "stammy");});
test("stampade -> stamp", function() {deepEqual( Stem("stampade"), "stamp");});
test("stan -> stan", function() {deepEqual( Stem("stan"), "stan");});
test("stand -> stand", function() {deepEqual( Stem("stand"), "stand");});
test("standigt -> stand", function() {deepEqual( Stem("standigt"), "stand");});
test("stank -> stank", function() {deepEqual( Stem("stank"), "stank");});
test("stanna -> stann", function() {deepEqual( Stem("stanna"), "stann");});
test("stannade -> stann", function() {deepEqual( Stem("stannade"), "stann");});
test("stannande -> stann", function() {deepEqual( Stem("stannande"), "stann");});
test("stannar -> stann", function() {deepEqual( Stem("stannar"), "stann");});
test("stannat -> stann", function() {deepEqual( Stem("stannat"), "stann");});
test("stanny -> stanny", function() {deepEqual( Stem("stanny"), "stanny");});
test("stannys -> stanny", function() {deepEqual( Stem("stannys"), "stanny");});
test("stapel -> stapel", function() {deepEqual( Stem("stapel"), "stapel");});
test("stapeln -> stapeln", function() {deepEqual( Stem("stapeln"), "stapeln");});
test("stapplande -> stappl", function() {deepEqual( Stem("stapplande"), "stappl");});
test("star -> star", function() {deepEqual( Stem("star"), "star");});
test("stark -> stark", function() {deepEqual( Stem("stark"), "stark");});
test("starka -> stark", function() {deepEqual( Stem("starka"), "stark");});
test("starkare -> stark", function() {deepEqual( Stem("starkare"), "stark");});
test("starkast -> stark", function() {deepEqual( Stem("starkast"), "stark");});
test("starkaste -> stark", function() {deepEqual( Stem("starkaste"), "stark");});
test("starkl -> starkl", function() {deepEqual( Stem("starkl"), "starkl");});
test("starkt -> stark", function() {deepEqual( Stem("starkt"), "stark");});
test("stassen -> stass", function() {deepEqual( Stem("stassen"), "stass");});
test("stat -> stat", function() {deepEqual( Stem("stat"), "stat");});
test("statardottern -> statardot", function() {deepEqual( Stem("statardottern"), "statardot");});
test("statarflickan -> statarflickan", function() {deepEqual( Stem("statarflickan"), "statarflickan");});
test("staten -> stat", function() {deepEqual( Stem("staten"), "stat");});
test("statens -> stat", function() {deepEqual( Stem("statens"), "stat");});
test("station -> station", function() {deepEqual( Stem("station"), "station");});
test("stationen -> station", function() {deepEqual( Stem("stationen"), "station");});
test("stationer -> station", function() {deepEqual( Stem("stationer"), "station");});
test("stationerna -> station", function() {deepEqual( Stem("stationerna"), "station");});
test("stations -> station", function() {deepEqual( Stem("stations"), "station");});
test("stationshuset -> stationshuset", function() {deepEqual( Stem("stationshuset"), "stationshuset");});
test("stationshållet -> stationshållet", function() {deepEqual( Stem("stationshållet"), "stationshållet");});
test("stationsinspek -> stationsinspek", function() {deepEqual( Stem("stationsinspek"), "stationsinspek");});
test("stationsinspektor -> stationsinspek", function() {deepEqual( Stem("stationsinspektor"), "stationsinspek");});
test("stationsinspektoren -> stationsinspektor", function() {deepEqual( Stem("stationsinspektoren"), "stationsinspektor");});
test("statistiken -> statistik", function() {deepEqual( Stem("statistiken"), "statistik");});
test("statsråd -> statsråd", function() {deepEqual( Stem("statsråd"), "statsråd");});
test("statstidningen -> statstidning", function() {deepEqual( Stem("statstidningen"), "statstidning");});
test("statt -> statt", function() {deepEqual( Stem("statt"), "statt");});
test("staty -> staty", function() {deepEqual( Stem("staty"), "staty");});
test("stav -> stav", function() {deepEqual( Stem("stav"), "stav");});
test("stava -> stav", function() {deepEqual( Stem("stava"), "stav");});
test("stavad -> stav", function() {deepEqual( Stem("stavad"), "stav");});
test("stavade -> stav", function() {deepEqual( Stem("stavade"), "stav");});
test("stavarna -> stav", function() {deepEqual( Stem("stavarna"), "stav");});
test("stavning -> stavning", function() {deepEqual( Stem("stavning"), "stavning");});
test("stavningsukas -> stavningsuk", function() {deepEqual( Stem("stavningsukas"), "stavningsuk");});
test("stcekars -> stcekar", function() {deepEqual( Stem("stcekars"), "stcekar");});
test("stearin -> stearin", function() {deepEqual( Stem("stearin"), "stearin");});
test("stearinen -> stearin", function() {deepEqual( Stem("stearinen"), "stearin");});
test("steg -> steg", function() {deepEqual( Stem("steg"), "steg");});
test("stege -> steg", function() {deepEqual( Stem("stege"), "steg");});
test("stegem -> stegem", function() {deepEqual( Stem("stegem"), "stegem");});
test("stegen -> steg", function() {deepEqual( Stem("stegen"), "steg");});
test("steget -> steget", function() {deepEqual( Stem("steget"), "steget");});
test("stego -> stego", function() {deepEqual( Stem("stego"), "stego");});
test("stegrade -> stegr", function() {deepEqual( Stem("stegrade"), "stegr");});
test("stegrades -> stegr", function() {deepEqual( Stem("stegrades"), "stegr");});
test("stegrar -> stegr", function() {deepEqual( Stem("stegrar"), "stegr");});
test("stegras -> stegr", function() {deepEqual( Stem("stegras"), "stegr");});
test("stegs -> steg", function() {deepEqual( Stem("stegs"), "steg");});
test("steinlens -> steinl", function() {deepEqual( Stem("steinlens"), "steinl");});
test("stek -> stek", function() {deepEqual( Stem("stek"), "stek");});
test("steken -> stek", function() {deepEqual( Stem("steken"), "stek");});
test("stekos -> steko", function() {deepEqual( Stem("stekos"), "steko");});
test("stekt -> stekt", function() {deepEqual( Stem("stekt"), "stekt");});
test("stekta -> stekt", function() {deepEqual( Stem("stekta"), "stekt");});
test("stekte -> stekt", function() {deepEqual( Stem("stekte"), "stekt");});
test("stel -> stel", function() {deepEqual( Stem("stel"), "stel");});
test("stela -> stel", function() {deepEqual( Stem("stela"), "stel");});
test("stelbent -> stelbent", function() {deepEqual( Stem("stelbent"), "stelbent");});
test("stelfrusna -> stelfrusn", function() {deepEqual( Stem("stelfrusna"), "stelfrusn");});
test("stelfrusne -> stelfrusn", function() {deepEqual( Stem("stelfrusne"), "stelfrusn");});
test("stellan -> stellan", function() {deepEqual( Stem("stellan"), "stellan");});
test("stellans -> stellan", function() {deepEqual( Stem("stellans"), "stellan");});
test("stelnad -> steln", function() {deepEqual( Stem("stelnad"), "steln");});
test("stelnade -> steln", function() {deepEqual( Stem("stelnade"), "steln");});
test("stelnat -> steln", function() {deepEqual( Stem("stelnat"), "steln");});
test("stelt -> stelt", function() {deepEqual( Stem("stelt"), "stelt");});
test("sten -> sten", function() {deepEqual( Stem("sten"), "sten");});
test("stenad -> sten", function() {deepEqual( Stem("stenad"), "sten");});
test("stenade -> sten", function() {deepEqual( Stem("stenade"), "sten");});
test("stenar -> sten", function() {deepEqual( Stem("stenar"), "sten");});
test("stenarna -> sten", function() {deepEqual( Stem("stenarna"), "sten");});
test("stenarne -> sten", function() {deepEqual( Stem("stenarne"), "sten");});
test("stenbilden -> stenbild", function() {deepEqual( Stem("stenbilden"), "stenbild");});
test("stenbord -> stenbord", function() {deepEqual( Stem("stenbord"), "stenbord");});
test("stenbänkar -> stenbänk", function() {deepEqual( Stem("stenbänkar"), "stenbänk");});
test("stenen -> sten", function() {deepEqual( Stem("stenen"), "sten");});
test("stenhammar -> stenhamm", function() {deepEqual( Stem("stenhammar"), "stenhamm");});
test("stenig -> sten", function() {deepEqual( Stem("stenig"), "sten");});
test("steniga -> sten", function() {deepEqual( Stem("steniga"), "sten");});
test("stenlagd -> stenlag", function() {deepEqual( Stem("stenlagd"), "stenlag");});
test("stenläggning -> stenläggning", function() {deepEqual( Stem("stenläggning"), "stenläggning");});
test("stenläggningen -> stenläggning", function() {deepEqual( Stem("stenläggningen"), "stenläggning");});
test("stenrik -> stenrik", function() {deepEqual( Stem("stenrik"), "stenrik");});
test("stentrappan -> stentrappan", function() {deepEqual( Stem("stentrappan"), "stentrappan");});
test("stentrappstegen -> stentrappsteg", function() {deepEqual( Stem("stentrappstegen"), "stentrappsteg");});
test("ster -> ster", function() {deepEqual( Stem("ster"), "ster");});
test("steril -> steril", function() {deepEqual( Stem("steril"), "steril");});
test("sterila -> steril", function() {deepEqual( Stem("sterila"), "steril");});
test("stetoskop -> stetoskop", function() {deepEqual( Stem("stetoskop"), "stetoskop");});
test("stetoskopet -> stetoskopet", function() {deepEqual( Stem("stetoskopet"), "stetoskopet");});
test("sti -> sti", function() {deepEqual( Stem("sti"), "sti");});
test("stia -> stia", function() {deepEqual( Stem("stia"), "stia");});
test("stick -> stick", function() {deepEqual( Stem("stick"), "stick");});
test("sticka -> stick", function() {deepEqual( Stem("sticka"), "stick");});
test("stickade -> stick", function() {deepEqual( Stem("stickade"), "stick");});
test("stickan -> stickan", function() {deepEqual( Stem("stickan"), "stickan");});
test("stickande -> stick", function() {deepEqual( Stem("stickande"), "stick");});
test("sticker -> stick", function() {deepEqual( Stem("sticker"), "stick");});
test("sticket -> sticket", function() {deepEqual( Stem("sticket"), "sticket");});
test("stickor -> stick", function() {deepEqual( Stem("stickor"), "stick");});
test("stickord -> stickord", function() {deepEqual( Stem("stickord"), "stickord");});
test("stickstrumpan -> stickstrumpan", function() {deepEqual( Stem("stickstrumpan"), "stickstrumpan");});
test("stiernhielm -> stiernhielm", function() {deepEqual( Stem("stiernhielm"), "stiernhielm");});
test("stif -> stif", function() {deepEqual( Stem("stif"), "stif");});
test("stifta -> stift", function() {deepEqual( Stem("stifta"), "stift");});
test("stiftandet -> stift", function() {deepEqual( Stem("stiftandet"), "stift");});
test("stiftar -> stift", function() {deepEqual( Stem("stiftar"), "stift");});
test("stiftare -> stift", function() {deepEqual( Stem("stiftare"), "stift");});
test("stiftat -> stift", function() {deepEqual( Stem("stiftat"), "stift");});
test("stiftelse -> stift", function() {deepEqual( Stem("stiftelse"), "stift");});
test("stig -> stig", function() {deepEqual( Stem("stig"), "stig");});
test("stiga -> stig", function() {deepEqual( Stem("stiga"), "stig");});
test("stigande -> stig", function() {deepEqual( Stem("stigande"), "stig");});
test("stigar -> stig", function() {deepEqual( Stem("stigar"), "stig");});
test("stigen -> stig", function() {deepEqual( Stem("stigen"), "stig");});
test("stiger -> stig", function() {deepEqual( Stem("stiger"), "stig");});
test("stigit -> stigit", function() {deepEqual( Stem("stigit"), "stigit");});
test("stiktat -> stikt", function() {deepEqual( Stem("stiktat"), "stikt");});
test("stil -> stil", function() {deepEqual( Stem("stil"), "stil");});
test("stilen -> stil", function() {deepEqual( Stem("stilen"), "stil");});
test("still -> still", function() {deepEqual( Stem("still"), "still");});
test("stilla -> still", function() {deepEqual( Stem("stilla"), "still");});
test("stillade -> still", function() {deepEqual( Stem("stillade"), "still");});
test("stillande -> still", function() {deepEqual( Stem("stillande"), "still");});
test("stillas -> still", function() {deepEqual( Stem("stillas"), "still");});
test("stillastående -> stillaståend", function() {deepEqual( Stem("stillastående"), "stillaståend");});
test("stillat -> still", function() {deepEqual( Stem("stillat"), "still");});
test("stillhet -> still", function() {deepEqual( Stem("stillhet"), "still");});
test("stillheten -> still", function() {deepEqual( Stem("stillheten"), "still");});
test("stillhrt -> stillhrt", function() {deepEqual( Stem("stillhrt"), "stillhrt");});
test("stillsam -> stillsam", function() {deepEqual( Stem("stillsam"), "stillsam");});
test("stillsamma -> stillsamm", function() {deepEqual( Stem("stillsamma"), "stillsamm");});
test("stillsamt -> stillsamt", function() {deepEqual( Stem("stillsamt"), "stillsamt");});
test("stiltje -> stiltj", function() {deepEqual( Stem("stiltje"), "stiltj");});
test("stim -> stim", function() {deepEqual( Stem("stim"), "stim");});
test("stimma -> stimm", function() {deepEqual( Stem("stimma"), "stimm");});
test("stimulera -> stimuler", function() {deepEqual( Stem("stimulera"), "stimuler");});
test("stimulerar -> stimuler", function() {deepEqual( Stem("stimulerar"), "stimuler");});
test("stina -> stin", function() {deepEqual( Stem("stina"), "stin");});
test("sting -> sting", function() {deepEqual( Stem("sting"), "sting");});
test("stinger -> sting", function() {deepEqual( Stem("stinger"), "sting");});
test("stinkande -> stink", function() {deepEqual( Stem("stinkande"), "stink");});
test("stinn -> stinn", function() {deepEqual( Stem("stinn"), "stinn");});
test("stir -> stir", function() {deepEqual( Stem("stir"), "stir");});
test("stirra -> stirr", function() {deepEqual( Stem("stirra"), "stirr");});
test("stirrade -> stirr", function() {deepEqual( Stem("stirrade"), "stirr");});
test("stirrande -> stirr", function() {deepEqual( Stem("stirrande"), "stirr");});
test("stirrar -> stirr", function() {deepEqual( Stem("stirrar"), "stirr");});
test("stj -> stj", function() {deepEqual( Stem("stj"), "stj");});
test("stjarna -> stjarn", function() {deepEqual( Stem("stjarna"), "stjarn");});
test("stjarnall -> stjarnall", function() {deepEqual( Stem("stjarnall"), "stjarnall");});
test("stjarnor -> stjarn", function() {deepEqual( Stem("stjarnor"), "stjarn");});
test("stjerna -> stjern", function() {deepEqual( Stem("stjerna"), "stjern");});
test("stjufson -> stjufson", function() {deepEqual( Stem("stjufson"), "stjufson");});
test("stjäl -> stjäl", function() {deepEqual( Stem("stjäl"), "stjäl");});
test("stjäla -> stjäl", function() {deepEqual( Stem("stjäla"), "stjäl");});
test("stjälkar -> stjälk", function() {deepEqual( Stem("stjälkar"), "stjälk");});
test("stjälkarna -> stjälk", function() {deepEqual( Stem("stjälkarna"), "stjälk");});
test("stjälpa -> stjälp", function() {deepEqual( Stem("stjälpa"), "stjälp");});
test("stjärna -> stjärn", function() {deepEqual( Stem("stjärna"), "stjärn");});
test("stjärnan -> stjärnan", function() {deepEqual( Stem("stjärnan"), "stjärnan");});
test("stjärnans -> stjärnan", function() {deepEqual( Stem("stjärnans"), "stjärnan");});
test("stjärnblommor -> stjärnblomm", function() {deepEqual( Stem("stjärnblommor"), "stjärnblomm");});
test("stjärneljusen -> stjärneljus", function() {deepEqual( Stem("stjärneljusen"), "stjärneljus");});
test("stjärnhimmel -> stjärnhimmel", function() {deepEqual( Stem("stjärnhimmel"), "stjärnhimmel");});
test("stjärnhimmeln -> stjärnhimmeln", function() {deepEqual( Stem("stjärnhimmeln"), "stjärnhimmeln");});
test("stjärnklar -> stjärnkl", function() {deepEqual( Stem("stjärnklar"), "stjärnkl");});
test("stjärnljus -> stjärnljus", function() {deepEqual( Stem("stjärnljus"), "stjärnljus");});
test("stjärnor -> stjärn", function() {deepEqual( Stem("stjärnor"), "stjärn");});
test("stjärnorna -> stjärn", function() {deepEqual( Stem("stjärnorna"), "stjärn");});
test("stjärnornas -> stjärn", function() {deepEqual( Stem("stjärnornas"), "stjärn");});
test("stjärnors -> stjärnor", function() {deepEqual( Stem("stjärnors"), "stjärnor");});
test("stjärnögon -> stjärnögon", function() {deepEqual( Stem("stjärnögon"), "stjärnögon");});
test("stock -> stock", function() {deepEqual( Stem("stock"), "stock");});
test("stockade -> stock", function() {deepEqual( Stem("stockade"), "stock");});
test("stockbolm -> stockbolm", function() {deepEqual( Stem("stockbolm"), "stockbolm");});
test("stocken -> stock", function() {deepEqual( Stem("stocken"), "stock");});
test("stockhohn -> stockhohn", function() {deepEqual( Stem("stockhohn"), "stockhohn");});
test("stockholm -> stockholm", function() {deepEqual( Stem("stockholm"), "stockholm");});
test("stockholms -> stockholm", function() {deepEqual( Stem("stockholms"), "stockholm");});
test("stockholmsbekant -> stockholmsbekant", function() {deepEqual( Stem("stockholmsbekant"), "stockholmsbekant");});
test("stockholmsbo -> stockholmsbo", function() {deepEqual( Stem("stockholmsbo"), "stockholmsbo");});
test("stockholmsflickornas -> stockholmsflick", function() {deepEqual( Stem("stockholmsflickornas"), "stockholmsflick");});
test("stockholmsgästen -> stockholmsgäst", function() {deepEqual( Stem("stockholmsgästen"), "stockholmsgäst");});
test("stockholmsregemente -> stockholmsregement", function() {deepEqual( Stem("stockholmsregemente"), "stockholmsregement");});
test("stockholmsresan -> stockholmsresan", function() {deepEqual( Stem("stockholmsresan"), "stockholmsresan");});
test("stockholmsrummet -> stockholmsrummet", function() {deepEqual( Stem("stockholmsrummet"), "stockholmsrummet");});
test("stockholmssocieteten -> stockholmssocietet", function() {deepEqual( Stem("stockholmssocieteten"), "stockholmssocietet");});
test("stockholmsvistelse -> stockholmsvist", function() {deepEqual( Stem("stockholmsvistelse"), "stockholmsvist");});
test("stockkonservativa -> stockkonservativ", function() {deepEqual( Stem("stockkonservativa"), "stockkonservativ");});
test("stod -> stod", function() {deepEqual( Stem("stod"), "stod");});
test("stodde -> stodd", function() {deepEqual( Stem("stodde"), "stodd");});
test("stode -> stod", function() {deepEqual( Stem("stode"), "stod");});
test("stoder -> stod", function() {deepEqual( Stem("stoder"), "stod");});
test("stodo -> stodo", function() {deepEqual( Stem("stodo"), "stodo");});
test("stodod -> stodod", function() {deepEqual( Stem("stodod"), "stodod");});
test("stoff -> stoff", function() {deepEqual( Stem("stoff"), "stoff");});
test("stoffet -> stoffet", function() {deepEqual( Stem("stoffet"), "stoffet");});
test("stoft -> stoft", function() {deepEqual( Stem("stoft"), "stoft");});
test("stoftet -> stoftet", function() {deepEqual( Stem("stoftet"), "stoftet");});
test("stofthyddans -> stofthyddan", function() {deepEqual( Stem("stofthyddans"), "stofthyddan");});
test("stoftskyarna -> stoftsky", function() {deepEqual( Stem("stoftskyarna"), "stoftsky");});
test("stoj -> stoj", function() {deepEqual( Stem("stoj"), "stoj");});
test("stol -> stol", function() {deepEqual( Stem("stol"), "stol");});
test("stolar -> stol", function() {deepEqual( Stem("stolar"), "stol");});
test("stolarna -> stol", function() {deepEqual( Stem("stolarna"), "stol");});
test("stolen -> stol", function() {deepEqual( Stem("stolen"), "stol");});
test("stollen -> stoll", function() {deepEqual( Stem("stollen"), "stoll");});
test("stolpar -> stolp", function() {deepEqual( Stem("stolpar"), "stolp");});
test("stolparna -> stolp", function() {deepEqual( Stem("stolparna"), "stolp");});
test("stolpen -> stolp", function() {deepEqual( Stem("stolpen"), "stolp");});
test("stolskarmen -> stolskarm", function() {deepEqual( Stem("stolskarmen"), "stolskarm");});
test("stolt -> stolt", function() {deepEqual( Stem("stolt"), "stolt");});
test("stolta -> stolt", function() {deepEqual( Stem("stolta"), "stolt");});
test("stoltaste -> stolt", function() {deepEqual( Stem("stoltaste"), "stolt");});
test("stolte -> stolt", function() {deepEqual( Stem("stolte"), "stolt");});
test("stolthet -> stolt", function() {deepEqual( Stem("stolthet"), "stolt");});
test("stoltheten -> stolt", function() {deepEqual( Stem("stoltheten"), "stolt");});
test("stoltserade -> stoltser", function() {deepEqual( Stem("stoltserade"), "stoltser");});
test("stoltserande -> stoltser", function() {deepEqual( Stem("stoltserande"), "stoltser");});
test("stoltserar -> stoltser", function() {deepEqual( Stem("stoltserar"), "stoltser");});
test("stommen -> stomm", function() {deepEqual( Stem("stommen"), "stomm");});
test("stonade -> ston", function() {deepEqual( Stem("stonade"), "ston");});
test("stonande -> ston", function() {deepEqual( Stem("stonande"), "ston");});
test("stop -> stop", function() {deepEqual( Stem("stop"), "stop");});
test("stopen -> stop", function() {deepEqual( Stem("stopen"), "stop");});
test("stopp -> stopp", function() {deepEqual( Stem("stopp"), "stopp");});
test("stoppa -> stopp", function() {deepEqual( Stem("stoppa"), "stopp");});
test("stoppade -> stopp", function() {deepEqual( Stem("stoppade"), "stopp");});
test("stoppadt -> stoppad", function() {deepEqual( Stem("stoppadt"), "stoppad");});
test("stoppar -> stopp", function() {deepEqual( Stem("stoppar"), "stopp");});
test("stoppat -> stopp", function() {deepEqual( Stem("stoppat"), "stopp");});
test("stor -> stor", function() {deepEqual( Stem("stor"), "stor");});
test("stora -> stor", function() {deepEqual( Stem("stora"), "stor");});
test("storartad -> storart", function() {deepEqual( Stem("storartad"), "storart");});
test("storartade -> storart", function() {deepEqual( Stem("storartade"), "storart");});
test("storartat -> storart", function() {deepEqual( Stem("storartat"), "storart");});
test("storbladiga -> storblad", function() {deepEqual( Stem("storbladiga"), "storblad");});
test("storbåten -> storbåt", function() {deepEqual( Stem("storbåten"), "storbåt");});
test("storbåtens -> storbåt", function() {deepEqual( Stem("storbåtens"), "storbåt");});
test("stordjur -> stordjur", function() {deepEqual( Stem("stordjur"), "stordjur");});
test("store -> stor", function() {deepEqual( Stem("store"), "stor");});
test("storgubbar -> storgubb", function() {deepEqual( Stem("storgubbar"), "storgubb");});
test("storhet -> stor", function() {deepEqual( Stem("storhet"), "stor");});
test("storheten -> stor", function() {deepEqual( Stem("storheten"), "stor");});
test("storheter -> stor", function() {deepEqual( Stem("storheter"), "stor");});
test("storhets -> storhet", function() {deepEqual( Stem("storhets"), "storhet");});
test("storkonungens -> storkonung", function() {deepEqual( Stem("storkonungens"), "storkonung");});
test("storkyrkan -> storkyrkan", function() {deepEqual( Stem("storkyrkan"), "storkyrkan");});
test("storkyrkobrinken -> storkyrkobrink", function() {deepEqual( Stem("storkyrkobrinken"), "storkyrkobrink");});
test("storlek -> storlek", function() {deepEqual( Stem("storlek"), "storlek");});
test("storm -> storm", function() {deepEqual( Stem("storm"), "storm");});
test("stormade -> storm", function() {deepEqual( Stem("stormade"), "storm");});
test("stormande -> storm", function() {deepEqual( Stem("stormande"), "storm");});
test("stormar -> storm", function() {deepEqual( Stem("stormar"), "storm");});
test("stormarne -> storm", function() {deepEqual( Stem("stormarne"), "storm");});
test("stormars -> stormar", function() {deepEqual( Stem("stormars"), "stormar");});
test("stormasten -> stormast", function() {deepEqual( Stem("stormasten"), "stormast");});
test("stormat -> storm", function() {deepEqual( Stem("stormat"), "storm");});
test("stormbyn -> stormbyn", function() {deepEqual( Stem("stormbyn"), "stormbyn");});
test("stormen -> storm", function() {deepEqual( Stem("stormen"), "storm");});
test("stormens -> storm", function() {deepEqual( Stem("stormens"), "storm");});
test("stormförtjusta -> stormförtjust", function() {deepEqual( Stem("stormförtjusta"), "stormförtjust");});
test("stormig -> storm", function() {deepEqual( Stem("stormig"), "storm");});
test("stormiga -> storm", function() {deepEqual( Stem("stormiga"), "storm");});
test("stormigt -> storm", function() {deepEqual( Stem("stormigt"), "storm");});
test("stormodig -> stormod", function() {deepEqual( Stem("stormodig"), "stormod");});
test("stormodighet -> stormod", function() {deepEqual( Stem("stormodighet"), "stormod");});
test("stormvanda -> stormvand", function() {deepEqual( Stem("stormvanda"), "stormvand");});
test("storsjöodjuret -> storsjöodjuret", function() {deepEqual( Stem("storsjöodjuret"), "storsjöodjuret");});
test("storskärmad -> storskärm", function() {deepEqual( Stem("storskärmad"), "storskärm");});
test("storståtlig -> storståt", function() {deepEqual( Stem("storståtlig"), "storståt");});
test("stort -> stort", function() {deepEqual( Stem("stort"), "stort");});
test("stortvätt -> stortvät", function() {deepEqual( Stem("stortvätt"), "stortvät");});
test("storvaxt -> storvaxt", function() {deepEqual( Stem("storvaxt"), "storvaxt");});
test("storverket -> storverket", function() {deepEqual( Stem("storverket"), "storverket");});
test("storvuxna -> storvuxn", function() {deepEqual( Stem("storvuxna"), "storvuxn");});
test("storvuxne -> storvuxn", function() {deepEqual( Stem("storvuxne"), "storvuxn");});
test("storväxt -> storväxt", function() {deepEqual( Stem("storväxt"), "storväxt");});
test("storätande -> storät", function() {deepEqual( Stem("storätande"), "storät");});
test("stota -> stot", function() {deepEqual( Stem("stota"), "stot");});
test("stotrad -> stotr", function() {deepEqual( Stem("stotrad"), "stotr");});
test("stra -> stra", function() {deepEqual( Stem("stra"), "stra");});
test("strackta -> strack", function() {deepEqual( Stem("strackta"), "strack");});
test("strackte -> strack", function() {deepEqual( Stem("strackte"), "strack");});
test("straff -> straff", function() {deepEqual( Stem("straff"), "straff");});
test("straffa -> straff", function() {deepEqual( Stem("straffa"), "straff");});
test("straffad -> straff", function() {deepEqual( Stem("straffad"), "straff");});
test("straffade -> straff", function() {deepEqual( Stem("straffade"), "straff");});
test("straffande -> straff", function() {deepEqual( Stem("straffande"), "straff");});
test("straffas -> straff", function() {deepEqual( Stem("straffas"), "straff");});
test("straffat -> straff", function() {deepEqual( Stem("straffat"), "straff");});
test("straffdom -> straffdom", function() {deepEqual( Stem("straffdom"), "straffdom");});
test("straffdomar -> straffdom", function() {deepEqual( Stem("straffdomar"), "straffdom");});
test("straffet -> straffet", function() {deepEqual( Stem("straffet"), "straffet");});
test("straffpredikan -> straffpredikan", function() {deepEqual( Stem("straffpredikan"), "straffpredikan");});
test("strafftal -> strafftal", function() {deepEqual( Stem("strafftal"), "strafftal");});
test("strala -> stral", function() {deepEqual( Stem("strala"), "stral");});
test("stralade -> stral", function() {deepEqual( Stem("stralade"), "stral");});
test("stralande -> stral", function() {deepEqual( Stem("stralande"), "stral");});
test("stralar -> stral", function() {deepEqual( Stem("stralar"), "stral");});
test("stramt -> stramt", function() {deepEqual( Stem("stramt"), "stramt");});
test("stran -> stran", function() {deepEqual( Stem("stran"), "stran");});
test("strand -> strand", function() {deepEqual( Stem("strand"), "strand");});
test("strandade -> strand", function() {deepEqual( Stem("strandade"), "strand");});
test("strandat -> strand", function() {deepEqual( Stem("strandat"), "strand");});
test("strandbo -> strandbo", function() {deepEqual( Stem("strandbo"), "strandbo");});
test("strandbons -> strandbon", function() {deepEqual( Stem("strandbons"), "strandbon");});
test("strandbor -> strandb", function() {deepEqual( Stem("strandbor"), "strandb");});
test("stranden -> strand", function() {deepEqual( Stem("stranden"), "strand");});
test("strandens -> strand", function() {deepEqual( Stem("strandens"), "strand");});
test("strandmarken -> strandmark", function() {deepEqual( Stem("strandmarken"), "strandmark");});
test("strandsätta -> strandsät", function() {deepEqual( Stem("strandsätta"), "strandsät");});
test("strandvägen -> strandväg", function() {deepEqual( Stem("strandvägen"), "strandväg");});
test("strax -> strax", function() {deepEqual( Stem("strax"), "strax");});
test("straxt -> straxt", function() {deepEqual( Stem("straxt"), "straxt");});
test("streber -> streb", function() {deepEqual( Stem("streber"), "streb");});
test("streck -> streck", function() {deepEqual( Stem("streck"), "streck");});
test("strecken -> streck", function() {deepEqual( Stem("strecken"), "streck");});
test("strecket -> strecket", function() {deepEqual( Stem("strecket"), "strecket");});
test("stred -> stred", function() {deepEqual( Stem("stred"), "stred");});
test("stretade -> stret", function() {deepEqual( Stem("stretade"), "stret");});
test("stretande -> stret", function() {deepEqual( Stem("stretande"), "stret");});
test("strid -> strid", function() {deepEqual( Stem("strid"), "strid");});
test("strida -> strid", function() {deepEqual( Stem("strida"), "strid");});
test("stridande -> strid", function() {deepEqual( Stem("stridande"), "strid");});
test("stridde -> stridd", function() {deepEqual( Stem("stridde"), "stridd");});
test("striden -> strid", function() {deepEqual( Stem("striden"), "strid");});
test("stridens -> strid", function() {deepEqual( Stem("stridens"), "strid");});
test("strider -> strid", function() {deepEqual( Stem("strider"), "strid");});
test("stridig -> strid", function() {deepEqual( Stem("stridig"), "strid");});
test("stridiga -> strid", function() {deepEqual( Stem("stridiga"), "strid");});
test("stridigheter -> strid", function() {deepEqual( Stem("stridigheter"), "strid");});
test("strids -> strid", function() {deepEqual( Stem("strids"), "strid");});
test("stridsbloss -> stridsbloss", function() {deepEqual( Stem("stridsbloss"), "stridsbloss");});
test("stridslust -> stridslust", function() {deepEqual( Stem("stridslust"), "stridslust");});
test("stridsämne -> stridsämn", function() {deepEqual( Stem("stridsämne"), "stridsämn");});
test("strimma -> strimm", function() {deepEqual( Stem("strimma"), "strimm");});
test("strimman -> strimman", function() {deepEqual( Stem("strimman"), "strimman");});
test("strimmat -> strimm", function() {deepEqual( Stem("strimmat"), "strimm");});
test("strimmiga -> strimm", function() {deepEqual( Stem("strimmiga"), "strimm");});
test("strimmor -> strimm", function() {deepEqual( Stem("strimmor"), "strimm");});
test("strimmorna -> strimm", function() {deepEqual( Stem("strimmorna"), "strimm");});
test("strindbergs -> strindberg", function() {deepEqual( Stem("strindbergs"), "strindberg");});
test("stripiga -> strip", function() {deepEqual( Stem("stripiga"), "strip");});
test("stripigt -> strip", function() {deepEqual( Stem("stripigt"), "strip");});
test("stritt -> stritt", function() {deepEqual( Stem("stritt"), "stritt");});
test("strlpe -> strlpe", function() {deepEqual( Stem("strlpe"), "strlpe");});
test("strofer -> strof", function() {deepEqual( Stem("strofer"), "strof");});
test("strukit -> strukit", function() {deepEqual( Stem("strukit"), "strukit");});
test("struktur -> struktur", function() {deepEqual( Stem("struktur"), "struktur");});
test("strumahals -> strumahal", function() {deepEqual( Stem("strumahals"), "strumahal");});
test("strumpeband -> strumpeband", function() {deepEqual( Stem("strumpeband"), "strumpeband");});
test("strumpfötterna -> strumpföt", function() {deepEqual( Stem("strumpfötterna"), "strumpföt");});
test("strumpor -> strump", function() {deepEqual( Stem("strumpor"), "strump");});
test("strumporna -> strump", function() {deepEqual( Stem("strumporna"), "strump");});
test("strunt -> strunt", function() {deepEqual( Stem("strunt"), "strunt");});
test("struntgevär -> struntgevär", function() {deepEqual( Stem("struntgevär"), "struntgevär");});
test("struntplank -> struntplank", function() {deepEqual( Stem("struntplank"), "struntplank");});
test("struntviktiga -> struntvikt", function() {deepEqual( Stem("struntviktiga"), "struntvikt");});
test("strupar -> strup", function() {deepEqual( Stem("strupar"), "strup");});
test("strupe -> strup", function() {deepEqual( Stem("strupe"), "strup");});
test("strupen -> strup", function() {deepEqual( Stem("strupen"), "strup");});
test("strussenhielm -> strussenhielm", function() {deepEqual( Stem("strussenhielm"), "strussenhielm");});
test("strussenhielms -> strussenhielm", function() {deepEqual( Stem("strussenhielms"), "strussenhielm");});
test("strut -> strut", function() {deepEqual( Stem("strut"), "strut");});
test("strutsarna -> struts", function() {deepEqual( Stem("strutsarna"), "struts");});
test("strutsarnas -> struts", function() {deepEqual( Stem("strutsarnas"), "struts");});
test("strutsen -> struts", function() {deepEqual( Stem("strutsen"), "struts");});
test("strutsens -> struts", function() {deepEqual( Stem("strutsens"), "struts");});
test("stryk -> stryk", function() {deepEqual( Stem("stryk"), "stryk");});
test("stryka -> stryk", function() {deepEqual( Stem("stryka"), "stryk");});
test("strykande -> stryk", function() {deepEqual( Stem("strykande"), "stryk");});
test("strykas -> stryk", function() {deepEqual( Stem("strykas"), "stryk");});
test("stryker -> stryk", function() {deepEqual( Stem("stryker"), "stryk");});
test("strykning -> strykning", function() {deepEqual( Stem("strykning"), "strykning");});
test("strypsjuka -> strypsjuk", function() {deepEqual( Stem("strypsjuka"), "strypsjuk");});
test("strä -> strä", function() {deepEqual( Stem("strä"), "strä");});
test("sträck -> sträck", function() {deepEqual( Stem("sträck"), "sträck");});
test("sträcka -> sträck", function() {deepEqual( Stem("sträcka"), "sträck");});
test("sträckande -> sträck", function() {deepEqual( Stem("sträckande"), "sträck");});
test("sträcker -> sträck", function() {deepEqual( Stem("sträcker"), "sträck");});
test("sträckes -> sträck", function() {deepEqual( Stem("sträckes"), "sträck");});
test("sträcket -> sträcket", function() {deepEqual( Stem("sträcket"), "sträcket");});
test("sträckor -> sträck", function() {deepEqual( Stem("sträckor"), "sträck");});
test("sträckt -> sträck", function() {deepEqual( Stem("sträckt"), "sträck");});
test("sträckta -> sträck", function() {deepEqual( Stem("sträckta"), "sträck");});
test("sträckte -> sträck", function() {deepEqual( Stem("sträckte"), "sträck");});
test("sträcktes -> sträck", function() {deepEqual( Stem("sträcktes"), "sträck");});
test("sträf -> sträf", function() {deepEqual( Stem("sträf"), "sträf");});
test("sträft -> sträft", function() {deepEqual( Stem("sträft"), "sträft");});
test("sträfva -> sträfv", function() {deepEqual( Stem("sträfva"), "sträfv");});
test("sträfvade -> sträfv", function() {deepEqual( Stem("sträfvade"), "sträfv");});
test("sträfvan -> sträfvan", function() {deepEqual( Stem("sträfvan"), "sträfvan");});
test("sträfvar -> sträfv", function() {deepEqual( Stem("sträfvar"), "sträfv");});
test("stränder -> stränd", function() {deepEqual( Stem("stränder"), "stränd");});
test("stränderna -> stränd", function() {deepEqual( Stem("stränderna"), "stränd");});
test("strändernas -> stränd", function() {deepEqual( Stem("strändernas"), "stränd");});
test("sträng -> sträng", function() {deepEqual( Stem("sträng"), "sträng");});
test("stränga -> sträng", function() {deepEqual( Stem("stränga"), "sträng");});
test("strängar -> sträng", function() {deepEqual( Stem("strängar"), "sträng");});
test("strängare -> sträng", function() {deepEqual( Stem("strängare"), "sträng");});
test("strängarna -> sträng", function() {deepEqual( Stem("strängarna"), "sträng");});
test("strängaste -> sträng", function() {deepEqual( Stem("strängaste"), "sträng");});
test("stränge -> sträng", function() {deepEqual( Stem("stränge"), "sträng");});
test("stränghet -> sträng", function() {deepEqual( Stem("stränghet"), "sträng");});
test("strängnäs -> strängnäs", function() {deepEqual( Stem("strängnäs"), "strängnäs");});
test("strängt -> sträng", function() {deepEqual( Stem("strängt"), "sträng");});
test("sträv -> sträv", function() {deepEqual( Stem("sträv"), "sträv");});
test("sträva -> sträv", function() {deepEqual( Stem("sträva"), "sträv");});
test("strävade -> sträv", function() {deepEqual( Stem("strävade"), "sträv");});
test("strävan -> strävan", function() {deepEqual( Stem("strävan"), "strävan");});
test("strävande -> sträv", function() {deepEqual( Stem("strävande"), "sträv");});
test("strävar -> sträv", function() {deepEqual( Stem("strävar"), "sträv");});
test("strävat -> sträv", function() {deepEqual( Stem("strävat"), "sträv");});
test("strävpelare -> strävpel", function() {deepEqual( Stem("strävpelare"), "strävpel");});
test("strävsamhet -> strävsam", function() {deepEqual( Stem("strävsamhet"), "strävsam");});
test("strävsamma -> strävsamm", function() {deepEqual( Stem("strävsamma"), "strävsamm");});
test("strävsinta -> strävsint", function() {deepEqual( Stem("strävsinta"), "strävsint");});
test("strävt -> strävt", function() {deepEqual( Stem("strävt"), "strävt");});
test("strå -> strå", function() {deepEqual( Stem("strå"), "strå");});
test("stråkars -> stråkar", function() {deepEqual( Stem("stråkars"), "stråkar");});
test("stråken -> stråk", function() {deepEqual( Stem("stråken"), "stråk");});
test("stråla -> strål", function() {deepEqual( Stem("stråla"), "strål");});
test("strålade -> strål", function() {deepEqual( Stem("strålade"), "strål");});
test("strålande -> strål", function() {deepEqual( Stem("strålande"), "strål");});
test("strålar -> strål", function() {deepEqual( Stem("strålar"), "strål");});
test("strålat -> strål", function() {deepEqual( Stem("strålat"), "strål");});
test("strålbrytning -> strålbrytning", function() {deepEqual( Stem("strålbrytning"), "strålbrytning");});
test("stråle -> strål", function() {deepEqual( Stem("stråle"), "strål");});
test("strån -> strån", function() {deepEqual( Stem("strån"), "strån");});
test("stråt -> stråt", function() {deepEqual( Stem("stråt"), "stråt");});
test("strö -> strö", function() {deepEqual( Stem("strö"), "strö");});
test("strödd -> strödd", function() {deepEqual( Stem("strödd"), "strödd");});
test("strödda -> strödd", function() {deepEqual( Stem("strödda"), "strödd");});
test("strödde -> strödd", function() {deepEqual( Stem("strödde"), "strödd");});
test("ströftåg -> ströftåg", function() {deepEqual( Stem("ströftåg"), "ströftåg");});
test("ströfva -> ströfv", function() {deepEqual( Stem("ströfva"), "ströfv");});
test("strök -> strök", function() {deepEqual( Stem("strök"), "strök");});
test("ströko -> ströko", function() {deepEqual( Stem("ströko"), "ströko");});
test("ströks -> strök", function() {deepEqual( Stem("ströks"), "strök");});
test("ström -> ström", function() {deepEqual( Stem("ström"), "ström");});
test("strömma -> strömm", function() {deepEqual( Stem("strömma"), "strömm");});
test("strömmade -> strömm", function() {deepEqual( Stem("strömmade"), "strömm");});
test("strömmar -> strömm", function() {deepEqual( Stem("strömmar"), "strömm");});
test("strömmarna -> strömm", function() {deepEqual( Stem("strömmarna"), "strömm");});
test("strömmarnas -> strömm", function() {deepEqual( Stem("strömmarnas"), "strömm");});
test("strömmen -> strömm", function() {deepEqual( Stem("strömmen"), "strömm");});
test("strömmens -> strömm", function() {deepEqual( Stem("strömmens"), "strömm");});
test("strömparterren -> strömparterr", function() {deepEqual( Stem("strömparterren"), "strömparterr");});
test("strör -> strör", function() {deepEqual( Stem("strör"), "strör");});
test("strött -> strött", function() {deepEqual( Stem("strött"), "strött");});
test("ströva -> ströv", function() {deepEqual( Stem("ströva"), "ströv");});
test("strövade -> ströv", function() {deepEqual( Stem("strövade"), "ströv");});
test("strövat -> ströv", function() {deepEqual( Stem("strövat"), "ströv");});
test("strövtåg -> strövtåg", function() {deepEqual( Stem("strövtåg"), "strövtåg");});
test("stubbe -> stubb", function() {deepEqual( Stem("stubbe"), "stubb");});
test("stucken -> stuck", function() {deepEqual( Stem("stucken"), "stuck");});
test("stuckit -> stuckit", function() {deepEqual( Stem("stuckit"), "stuckit");});
test("stuckna -> stuckn", function() {deepEqual( Stem("stuckna"), "stuckn");});
test("stucko -> stucko", function() {deepEqual( Stem("stucko"), "stucko");});
test("student -> student", function() {deepEqual( Stem("student"), "student");});
test("studenten -> student", function() {deepEqual( Stem("studenten"), "student");});
test("studenter -> student", function() {deepEqual( Stem("studenter"), "student");});
test("studentkula -> studentkul", function() {deepEqual( Stem("studentkula"), "studentkul");});
test("studera -> studer", function() {deepEqual( Stem("studera"), "studer");});
test("studerade -> studer", function() {deepEqual( Stem("studerade"), "studer");});
test("studerat -> studer", function() {deepEqual( Stem("studerat"), "studer");});
test("studier -> studi", function() {deepEqual( Stem("studier"), "studi");});
test("studiet -> studiet", function() {deepEqual( Stem("studiet"), "studiet");});
test("studiosi -> studiosi", function() {deepEqual( Stem("studiosi"), "studiosi");});
test("studsa -> studs", function() {deepEqual( Stem("studsa"), "studs");});
test("studsade -> studs", function() {deepEqual( Stem("studsade"), "studs");});
test("studsare -> studs", function() {deepEqual( Stem("studsare"), "studs");});
test("studsaren -> studs", function() {deepEqual( Stem("studsaren"), "studs");});
test("stufvade -> stufv", function() {deepEqual( Stem("stufvade"), "stufv");});
test("stufvar -> stufv", function() {deepEqual( Stem("stufvar"), "stufv");});
test("stuga -> stug", function() {deepEqual( Stem("stuga"), "stug");});
test("stugan -> stugan", function() {deepEqual( Stem("stugan"), "stugan");});
test("stugans -> stugan", function() {deepEqual( Stem("stugans"), "stugan");});
test("stugas -> stug", function() {deepEqual( Stem("stugas"), "stug");});
test("stugor -> stug", function() {deepEqual( Stem("stugor"), "stug");});
test("stugorna -> stug", function() {deepEqual( Stem("stugorna"), "stug");});
test("stugudörren -> stugudörr", function() {deepEqual( Stem("stugudörren"), "stugudörr");});
test("stuka -> stuk", function() {deepEqual( Stem("stuka"), "stuk");});
test("stulit -> stulit", function() {deepEqual( Stem("stulit"), "stulit");});
test("stultade -> stult", function() {deepEqual( Stem("stultade"), "stult");});
test("stultat -> stult", function() {deepEqual( Stem("stultat"), "stult");});
test("stum -> stum", function() {deepEqual( Stem("stum"), "stum");});
test("stumd -> stumd", function() {deepEqual( Stem("stumd"), "stumd");});
test("stumma -> stumm", function() {deepEqual( Stem("stumma"), "stumm");});
test("stump -> stump", function() {deepEqual( Stem("stump"), "stump");});
test("stumpar -> stump", function() {deepEqual( Stem("stumpar"), "stump");});
test("stumpen -> stump", function() {deepEqual( Stem("stumpen"), "stump");});
test("stumt -> stumt", function() {deepEqual( Stem("stumt"), "stumt");});
test("stund -> stund", function() {deepEqual( Stem("stund"), "stund");});
test("stundade -> stund", function() {deepEqual( Stem("stundade"), "stund");});
test("stundande -> stund", function() {deepEqual( Stem("stundande"), "stund");});
test("stunden -> stund", function() {deepEqual( Stem("stunden"), "stund");});
test("stundens -> stund", function() {deepEqual( Stem("stundens"), "stund");});
test("stunder -> stund", function() {deepEqual( Stem("stunder"), "stund");});
test("stunderna -> stund", function() {deepEqual( Stem("stunderna"), "stund");});
test("stundligen -> stund", function() {deepEqual( Stem("stundligen"), "stund");});
test("stundom -> stundom", function() {deepEqual( Stem("stundom"), "stundom");});
test("stundorm -> stundorm", function() {deepEqual( Stem("stundorm"), "stundorm");});
test("stunds -> stund", function() {deepEqual( Stem("stunds"), "stund");});
test("stungit -> stungit", function() {deepEqual( Stem("stungit"), "stungit");});
test("stungo -> stungo", function() {deepEqual( Stem("stungo"), "stungo");});
test("stunkit -> stunkit", function() {deepEqual( Stem("stunkit"), "stunkit");});
test("stupa -> stup", function() {deepEqual( Stem("stupa"), "stup");});
test("stupade -> stup", function() {deepEqual( Stem("stupade"), "stup");});
test("stupande -> stup", function() {deepEqual( Stem("stupande"), "stup");});
test("stupar -> stup", function() {deepEqual( Stem("stupar"), "stup");});
test("stupfulle -> stupfull", function() {deepEqual( Stem("stupfulle"), "stupfull");});
test("stursk -> stursk", function() {deepEqual( Stem("stursk"), "stursk");});
test("stut -> stut", function() {deepEqual( Stem("stut"), "stut");});
test("stuvade -> stuv", function() {deepEqual( Stem("stuvade"), "stuv");});
test("stycke -> styck", function() {deepEqual( Stem("stycke"), "styck");});
test("styckegods -> styckegod", function() {deepEqual( Stem("styckegods"), "styckegod");});
test("stycken -> styck", function() {deepEqual( Stem("stycken"), "styck");});
test("stycket -> stycket", function() {deepEqual( Stem("stycket"), "stycket");});
test("stycketl -> stycketl", function() {deepEqual( Stem("stycketl"), "stycketl");});
test("styf -> styf", function() {deepEqual( Stem("styf"), "styf");});
test("styfmunt -> styfmunt", function() {deepEqual( Stem("styfmunt"), "styfmunt");});
test("styfrar -> styfr", function() {deepEqual( Stem("styfrar"), "styfr");});
test("styfsinte -> styfsint", function() {deepEqual( Stem("styfsinte"), "styfsint");});
test("styfva -> styfv", function() {deepEqual( Stem("styfva"), "styfv");});
test("styfvern -> styfv", function() {deepEqual( Stem("styfvern"), "styfv");});
test("stygg -> stygg", function() {deepEqual( Stem("stygg"), "stygg");});
test("stygga -> stygg", function() {deepEqual( Stem("stygga"), "stygg");});
test("stygge -> stygg", function() {deepEqual( Stem("stygge"), "stygg");});
test("styggelse -> stygg", function() {deepEqual( Stem("styggelse"), "stygg");});
test("styggt -> stygg", function() {deepEqual( Stem("styggt"), "stygg");});
test("stygn -> stygn", function() {deepEqual( Stem("stygn"), "stygn");});
test("stympa -> stymp", function() {deepEqual( Stem("stympa"), "stymp");});
test("stympad -> stymp", function() {deepEqual( Stem("stympad"), "stymp");});
test("stympare -> stymp", function() {deepEqual( Stem("stympare"), "stymp");});
test("styng -> styng", function() {deepEqual( Stem("styng"), "styng");});
test("styr -> styr", function() {deepEqual( Stem("styr"), "styr");});
test("styra -> styr", function() {deepEqual( Stem("styra"), "styr");});
test("styrande -> styr", function() {deepEqual( Stem("styrande"), "styr");});
test("styrde -> styrd", function() {deepEqual( Stem("styrde"), "styrd");});
test("styre -> styr", function() {deepEqual( Stem("styre"), "styr");});
test("styrelsen -> styr", function() {deepEqual( Stem("styrelsen"), "styr");});
test("styret -> styret", function() {deepEqual( Stem("styret"), "styret");});
test("styrka -> styrk", function() {deepEqual( Stem("styrka"), "styrk");});
test("styrkande -> styrk", function() {deepEqual( Stem("styrkande"), "styrk");});
test("styrker -> styrk", function() {deepEqual( Stem("styrker"), "styrk");});
test("styrketår -> styrketår", function() {deepEqual( Stem("styrketår"), "styrketår");});
test("styrkt -> styrk", function() {deepEqual( Stem("styrkt"), "styrk");});
test("styrkte -> styrk", function() {deepEqual( Stem("styrkte"), "styrk");});
test("styrktes -> styrk", function() {deepEqual( Stem("styrktes"), "styrk");});
test("styrman -> styrman", function() {deepEqual( Stem("styrman"), "styrman");});
test("styrmans -> styrman", function() {deepEqual( Stem("styrmans"), "styrman");});
test("styrrummet -> styrrummet", function() {deepEqual( Stem("styrrummet"), "styrrummet");});
test("styrstång -> styrstång", function() {deepEqual( Stem("styrstång"), "styrstång");});
test("styrstången -> styrstång", function() {deepEqual( Stem("styrstången"), "styrstång");});
test("styrt -> styrt", function() {deepEqual( Stem("styrt"), "styrt");});
test("styv -> styv", function() {deepEqual( Stem("styv"), "styv");});
test("styva -> styv", function() {deepEqual( Stem("styva"), "styv");});
test("styvbarn -> styvbarn", function() {deepEqual( Stem("styvbarn"), "styvbarn");});
test("styvdotter -> styvdot", function() {deepEqual( Stem("styvdotter"), "styvdot");});
test("styvdottern -> styvdot", function() {deepEqual( Stem("styvdottern"), "styvdot");});
test("styver -> styv", function() {deepEqual( Stem("styver"), "styv");});
test("styverhandeln -> styverhandeln", function() {deepEqual( Stem("styverhandeln"), "styverhandeln");});
test("styvfader -> styvfad", function() {deepEqual( Stem("styvfader"), "styvfad");});
test("styvfadern -> styvfad", function() {deepEqual( Stem("styvfadern"), "styvfad");});
test("styvfar -> styvf", function() {deepEqual( Stem("styvfar"), "styvf");});
test("styvmodern -> styvmod", function() {deepEqual( Stem("styvmodern"), "styvmod");});
test("styvmor -> styvm", function() {deepEqual( Stem("styvmor"), "styvm");});
test("styvmorsblom -> styvmorsblom", function() {deepEqual( Stem("styvmorsblom"), "styvmorsblom");});
test("styvna -> styvn", function() {deepEqual( Stem("styvna"), "styvn");});
test("styvnade -> styvn", function() {deepEqual( Stem("styvnade"), "styvn");});
test("styvrarna -> styvr", function() {deepEqual( Stem("styvrarna"), "styvr");});
test("styvson -> styvson", function() {deepEqual( Stem("styvson"), "styvson");});
test("styx -> styx", function() {deepEqual( Stem("styx"), "styx");});
test("stä -> stä", function() {deepEqual( Stem("stä"), "stä");});
test("stäckta -> stäck", function() {deepEqual( Stem("stäckta"), "stäck");});
test("städ -> städ", function() {deepEqual( Stem("städ"), "städ");});
test("städa -> städ", function() {deepEqual( Stem("städa"), "städ");});
test("städad -> städ", function() {deepEqual( Stem("städad"), "städ");});
test("städade -> städ", function() {deepEqual( Stem("städade"), "städ");});
test("städadt -> städad", function() {deepEqual( Stem("städadt"), "städad");});
test("städar -> städ", function() {deepEqual( Stem("städar"), "städ");});
test("städat -> städ", function() {deepEqual( Stem("städat"), "städ");});
test("städer -> städ", function() {deepEqual( Stem("städer"), "städ");});
test("städerna -> städ", function() {deepEqual( Stem("städerna"), "städ");});
test("städes -> städ", function() {deepEqual( Stem("städes"), "städ");});
test("städja -> städj", function() {deepEqual( Stem("städja"), "städj");});
test("städning -> städning", function() {deepEqual( Stem("städning"), "städning");});
test("städningen -> städning", function() {deepEqual( Stem("städningen"), "städning");});
test("städs -> städ", function() {deepEqual( Stem("städs"), "städ");});
test("städse -> städs", function() {deepEqual( Stem("städse"), "städs");});
test("stälde -> stäld", function() {deepEqual( Stem("stälde"), "stäld");});
test("ställ -> ställ", function() {deepEqual( Stem("ställ"), "ställ");});
test("ställa -> ställ", function() {deepEqual( Stem("ställa"), "ställ");});
test("ställd -> ställd", function() {deepEqual( Stem("ställd"), "ställd");});
test("ställda -> ställd", function() {deepEqual( Stem("ställda"), "ställd");});
test("ställde -> ställd", function() {deepEqual( Stem("ställde"), "ställd");});
test("ställe -> ställ", function() {deepEqual( Stem("ställe"), "ställ");});
test("ställen -> ställ", function() {deepEqual( Stem("ställen"), "ställ");});
test("ställer -> ställ", function() {deepEqual( Stem("ställer"), "ställ");});
test("stället -> stället", function() {deepEqual( Stem("stället"), "stället");});
test("ställning -> ställning", function() {deepEqual( Stem("ställning"), "ställning");});
test("ställningar -> ställning", function() {deepEqual( Stem("ställningar"), "ställning");});
test("ställningen -> ställning", function() {deepEqual( Stem("ställningen"), "ställning");});
test("ställt -> ställt", function() {deepEqual( Stem("ställt"), "ställt");});
test("stält -> stält", function() {deepEqual( Stem("stält"), "stält");});
test("stäm -> stäm", function() {deepEqual( Stem("stäm"), "stäm");});
test("stämd -> stämd", function() {deepEqual( Stem("stämd"), "stämd");});
test("stämde -> stämd", function() {deepEqual( Stem("stämde"), "stämd");});
test("stämma -> stämm", function() {deepEqual( Stem("stämma"), "stämm");});
test("stämmas -> stämm", function() {deepEqual( Stem("stämmas"), "stämm");});
test("stämmer -> stämm", function() {deepEqual( Stem("stämmer"), "stämm");});
test("stämmor -> stämm", function() {deepEqual( Stem("stämmor"), "stämm");});
test("stämmornas -> stämm", function() {deepEqual( Stem("stämmornas"), "stämm");});
test("stämning -> stämning", function() {deepEqual( Stem("stämning"), "stämning");});
test("stämningen -> stämning", function() {deepEqual( Stem("stämningen"), "stämning");});
test("stämpla -> stämpl", function() {deepEqual( Stem("stämpla"), "stämpl");});
test("stämplad -> stämpl", function() {deepEqual( Stem("stämplad"), "stämpl");});
test("stämplade -> stämpl", function() {deepEqual( Stem("stämplade"), "stämpl");});
test("stämplades -> stämpl", function() {deepEqual( Stem("stämplades"), "stämpl");});
test("stämt -> stämt", function() {deepEqual( Stem("stämt"), "stämt");});
test("stän -> stän", function() {deepEqual( Stem("stän"), "stän");});
test("ständig -> ständ", function() {deepEqual( Stem("ständig"), "ständ");});
test("ständiga -> ständ", function() {deepEqual( Stem("ständiga"), "ständ");});
test("ständigt -> ständ", function() {deepEqual( Stem("ständigt"), "ständ");});
test("stäng -> stäng", function() {deepEqual( Stem("stäng"), "stäng");});
test("stänga -> stäng", function() {deepEqual( Stem("stänga"), "stäng");});
test("stängas -> stäng", function() {deepEqual( Stem("stängas"), "stäng");});
test("stängd -> stäng", function() {deepEqual( Stem("stängd"), "stäng");});
test("stängda -> stäng", function() {deepEqual( Stem("stängda"), "stäng");});
test("stängde -> stäng", function() {deepEqual( Stem("stängde"), "stäng");});
test("stängdes -> stäng", function() {deepEqual( Stem("stängdes"), "stäng");});
test("stängel -> stängel", function() {deepEqual( Stem("stängel"), "stängel");});
test("stänger -> stäng", function() {deepEqual( Stem("stänger"), "stäng");});
test("stänglar -> stängl", function() {deepEqual( Stem("stänglar"), "stängl");});
test("stängsel -> stängsel", function() {deepEqual( Stem("stängsel"), "stängsel");});
test("stängseltagg -> stängseltagg", function() {deepEqual( Stem("stängseltagg"), "stängseltagg");});
test("stängt -> stäng", function() {deepEqual( Stem("stängt"), "stäng");});
test("stänk -> stänk", function() {deepEqual( Stem("stänk"), "stänk");});
test("stänker -> stänk", function() {deepEqual( Stem("stänker"), "stänk");});
test("stänkt -> stänk", function() {deepEqual( Stem("stänkt"), "stänk");});
test("stänkte -> stänk", function() {deepEqual( Stem("stänkte"), "stänk");});
test("stärkande -> stärk", function() {deepEqual( Stem("stärkande"), "stärk");});
test("stärkkragen -> stärkkrag", function() {deepEqual( Stem("stärkkragen"), "stärkkrag");});
test("stärkt -> stärk", function() {deepEqual( Stem("stärkt"), "stärk");});
test("stärkta -> stärk", function() {deepEqual( Stem("stärkta"), "stärk");});
test("stå -> stå", function() {deepEqual( Stem("stå"), "stå");});
test("stående -> ståend", function() {deepEqual( Stem("stående"), "ståend");});
test("stål -> stål", function() {deepEqual( Stem("stål"), "stål");});
test("stålklang -> stålklang", function() {deepEqual( Stem("stålklang"), "stålklang");});
test("stålvisp -> stålvisp", function() {deepEqual( Stem("stålvisp"), "stålvisp");});
test("stålvispen -> stålvisp", function() {deepEqual( Stem("stålvispen"), "stålvisp");});
test("stån -> stån", function() {deepEqual( Stem("stån"), "stån");});
test("stånd -> stånd", function() {deepEqual( Stem("stånd"), "stånd");});
test("ståndaktiga -> ståndakt", function() {deepEqual( Stem("ståndaktiga"), "ståndakt");});
test("ståndaktighet -> ståndakt", function() {deepEqual( Stem("ståndaktighet"), "ståndakt");});
test("ståndar -> stånd", function() {deepEqual( Stem("ståndar"), "stånd");});
test("stånden -> stånd", function() {deepEqual( Stem("stånden"), "stånd");});
test("ståndet -> ståndet", function() {deepEqual( Stem("ståndet"), "ståndet");});
test("ståndpunkt -> ståndpunk", function() {deepEqual( Stem("ståndpunkt"), "ståndpunk");});
test("ståndpunkter -> ståndpunk", function() {deepEqual( Stem("ståndpunkter"), "ståndpunk");});
test("stånds -> stånd", function() {deepEqual( Stem("stånds"), "stånd");});
test("stång -> stång", function() {deepEqual( Stem("stång"), "stång");});
test("stångas -> stång", function() {deepEqual( Stem("stångas"), "stång");});
test("stången -> stång", function() {deepEqual( Stem("stången"), "stång");});
test("stånkande -> stånk", function() {deepEqual( Stem("stånkande"), "stånk");});
test("står -> står", function() {deepEqual( Stem("står"), "står");});
test("stårkkrage -> stårkkrag", function() {deepEqual( Stem("stårkkrage"), "stårkkrag");});
test("stås -> stås", function() {deepEqual( Stem("stås"), "stås");});
test("ståt -> ståt", function() {deepEqual( Stem("ståt"), "ståt");});
test("ståtar -> ståt", function() {deepEqual( Stem("ståtar"), "ståt");});
test("ståten -> ståt", function() {deepEqual( Stem("ståten"), "ståt");});
test("ståtlig -> ståt", function() {deepEqual( Stem("ståtlig"), "ståt");});
test("ståtliga -> ståt", function() {deepEqual( Stem("ståtliga"), "ståt");});
test("ståtligt -> ståt", function() {deepEqual( Stem("ståtligt"), "ståt");});
test("stått -> stått", function() {deepEqual( Stem("stått"), "stått");});
test("stöd -> stöd", function() {deepEqual( Stem("stöd"), "stöd");});
test("stödd -> stödd", function() {deepEqual( Stem("stödd"), "stödd");});
test("stödda -> stödd", function() {deepEqual( Stem("stödda"), "stödd");});
test("stödde -> stödd", function() {deepEqual( Stem("stödde"), "stödd");});
test("stödet -> stödet", function() {deepEqual( Stem("stödet"), "stödet");});
test("stödja -> stödj", function() {deepEqual( Stem("stödja"), "stödj");});
test("stödjande -> stödj", function() {deepEqual( Stem("stödjande"), "stödj");});
test("stödjas -> stödj", function() {deepEqual( Stem("stödjas"), "stödj");});
test("stödt -> stödt", function() {deepEqual( Stem("stödt"), "stödt");});
test("stöflar -> stöfl", function() {deepEqual( Stem("stöflar"), "stöfl");});
test("stöflarne -> stöfl", function() {deepEqual( Stem("stöflarne"), "stöfl");});
test("stöka -> stök", function() {deepEqual( Stem("stöka"), "stök");});
test("stökade -> stök", function() {deepEqual( Stem("stökade"), "stök");});
test("stöket -> stöket", function() {deepEqual( Stem("stöket"), "stöket");});
test("stöld -> stöld", function() {deepEqual( Stem("stöld"), "stöld");});
test("stöna -> stön", function() {deepEqual( Stem("stöna"), "stön");});
test("stönade -> stön", function() {deepEqual( Stem("stönade"), "stön");});
test("stönande -> stön", function() {deepEqual( Stem("stönande"), "stön");});
test("stöper -> stöp", function() {deepEqual( Stem("stöper"), "stöp");});
test("stör -> stör", function() {deepEqual( Stem("stör"), "stör");});
test("störa -> stör", function() {deepEqual( Stem("störa"), "stör");});
test("störande -> stör", function() {deepEqual( Stem("störande"), "stör");});
test("störas -> stör", function() {deepEqual( Stem("störas"), "stör");});
test("störd -> störd", function() {deepEqual( Stem("störd"), "störd");});
test("störda -> störd", function() {deepEqual( Stem("störda"), "störd");});
test("störde -> störd", function() {deepEqual( Stem("störde"), "störd");});
test("stördes -> störd", function() {deepEqual( Stem("stördes"), "störd");});
test("störes -> stör", function() {deepEqual( Stem("störes"), "stör");});
test("större -> störr", function() {deepEqual( Stem("större"), "störr");});
test("störsh -> störsh", function() {deepEqual( Stem("störsh"), "störsh");});
test("största -> störst", function() {deepEqual( Stem("största"), "störst");});
test("stört -> stört", function() {deepEqual( Stem("stört"), "stört");});
test("störta -> stört", function() {deepEqual( Stem("störta"), "stört");});
test("störtade -> stört", function() {deepEqual( Stem("störtade"), "stört");});
test("störtat -> stört", function() {deepEqual( Stem("störtat"), "stört");});
test("störtsjö -> störtsjö", function() {deepEqual( Stem("störtsjö"), "störtsjö");});
test("störtsjöarne -> störtsjö", function() {deepEqual( Stem("störtsjöarne"), "störtsjö");});
test("störtskurar -> störtskur", function() {deepEqual( Stem("störtskurar"), "störtskur");});
test("stöt -> stöt", function() {deepEqual( Stem("stöt"), "stöt");});
test("stöta -> stöt", function() {deepEqual( Stem("stöta"), "stöt");});
test("stötande -> stöt", function() {deepEqual( Stem("stötande"), "stöt");});
test("stötar -> stöt", function() {deepEqual( Stem("stötar"), "stöt");});
test("stöten -> stöt", function() {deepEqual( Stem("stöten"), "stöt");});
test("stöter -> stöt", function() {deepEqual( Stem("stöter"), "stöt");});
test("stött -> stött", function() {deepEqual( Stem("stött"), "stött");});
test("stötta -> stött", function() {deepEqual( Stem("stötta"), "stött");});
test("stötte -> stött", function() {deepEqual( Stem("stötte"), "stött");});
test("stöttes -> stött", function() {deepEqual( Stem("stöttes"), "stött");});
test("stötvir -> stötvir", function() {deepEqual( Stem("stötvir"), "stötvir");});
test("stötvis -> stötvis", function() {deepEqual( Stem("stötvis"), "stötvis");});
test("stövare -> stöv", function() {deepEqual( Stem("stövare"), "stöv");});
test("stövla -> stövl", function() {deepEqual( Stem("stövla"), "stövl");});
test("stövlar -> stövl", function() {deepEqual( Stem("stövlar"), "stövl");});
test("stövlarna -> stövl", function() {deepEqual( Stem("stövlarna"), "stövl");});
test("sub -> sub", function() {deepEqual( Stem("sub"), "sub");});
test("subtila -> subtil", function() {deepEqual( Stem("subtila"), "subtil");});
test("suc -> suc", function() {deepEqual( Stem("suc"), "suc");});
test("suck -> suck", function() {deepEqual( Stem("suck"), "suck");});
test("sucka -> suck", function() {deepEqual( Stem("sucka"), "suck");});
test("suckadc -> suckadc", function() {deepEqual( Stem("suckadc"), "suckadc");});
test("suckade -> suck", function() {deepEqual( Stem("suckade"), "suck");});
test("suckande -> suck", function() {deepEqual( Stem("suckande"), "suck");});
test("suckar -> suck", function() {deepEqual( Stem("suckar"), "suck");});
test("suckarna -> suck", function() {deepEqual( Stem("suckarna"), "suck");});
test("suckat -> suck", function() {deepEqual( Stem("suckat"), "suck");});
test("sudda -> sudd", function() {deepEqual( Stem("sudda"), "sudd");});
test("suddande -> sudd", function() {deepEqual( Stem("suddande"), "sudd");});
test("suddar -> sudd", function() {deepEqual( Stem("suddar"), "sudd");});
test("suddats -> suddat", function() {deepEqual( Stem("suddats"), "suddat");});
test("suddiga -> sudd", function() {deepEqual( Stem("suddiga"), "sudd");});
test("sudlade -> sudl", function() {deepEqual( Stem("sudlade"), "sudl");});
test("sudlades -> sudl", function() {deepEqual( Stem("sudlades"), "sudl");});
test("sudlats -> sudlat", function() {deepEqual( Stem("sudlats"), "sudlat");});
test("sufflör -> sufflör", function() {deepEqual( Stem("sufflör"), "sufflör");});
test("suga -> sug", function() {deepEqual( Stem("suga"), "sug");});
test("sugande -> sug", function() {deepEqual( Stem("sugande"), "sug");});
test("sugen -> sug", function() {deepEqual( Stem("sugen"), "sug");});
test("suger -> sug", function() {deepEqual( Stem("suger"), "sug");});
test("suggskaft -> suggskaft", function() {deepEqual( Stem("suggskaft"), "suggskaft");});
test("suit -> suit", function() {deepEqual( Stem("suit"), "suit");});
test("sujetter -> sujet", function() {deepEqual( Stem("sujetter"), "sujet");});
test("sukade -> suk", function() {deepEqual( Stem("sukade"), "suk");});
test("sulor -> sul", function() {deepEqual( Stem("sulor"), "sul");});
test("sum -> sum", function() {deepEqual( Stem("sum"), "sum");});
test("summa -> summ", function() {deepEqual( Stem("summa"), "summ");});
test("summan -> summan", function() {deepEqual( Stem("summan"), "summan");});
test("summo -> summo", function() {deepEqual( Stem("summo"), "summo");});
test("sund -> sund", function() {deepEqual( Stem("sund"), "sund");});
test("sunda -> sund", function() {deepEqual( Stem("sunda"), "sund");});
test("sunden -> sund", function() {deepEqual( Stem("sunden"), "sund");});
test("sundt -> sund", function() {deepEqual( Stem("sundt"), "sund");});
test("sunnansuckar -> sunnansuck", function() {deepEqual( Stem("sunnansuckar"), "sunnansuck");});
test("sunnanvinden -> sunnanvind", function() {deepEqual( Stem("sunnanvinden"), "sunnanvind");});
test("sunt -> sunt", function() {deepEqual( Stem("sunt"), "sunt");});
test("suntältet -> suntältet", function() {deepEqual( Stem("suntältet"), "suntältet");});
test("supa -> sup", function() {deepEqual( Stem("supa"), "sup");});
test("suparna -> sup", function() {deepEqual( Stem("suparna"), "sup");});
test("supe -> sup", function() {deepEqual( Stem("supe"), "sup");});
test("supeen -> supe", function() {deepEqual( Stem("supeen"), "supe");});
test("supeer -> supe", function() {deepEqual( Stem("supeer"), "supe");});
test("supen -> sup", function() {deepEqual( Stem("supen"), "sup");});
test("supera -> super", function() {deepEqual( Stem("supera"), "super");});
test("supige -> sup", function() {deepEqual( Stem("supige"), "sup");});
test("supit -> supit", function() {deepEqual( Stem("supit"), "supit");});
test("suput -> suput", function() {deepEqual( Stem("suput"), "suput");});
test("sur -> sur", function() {deepEqual( Stem("sur"), "sur");});
test("sura -> sur", function() {deepEqual( Stem("sura"), "sur");});
test("sure -> sur", function() {deepEqual( Stem("sure"), "sur");});
test("surmulen -> surmul", function() {deepEqual( Stem("surmulen"), "surmul");});
test("surrade -> surr", function() {deepEqual( Stem("surrade"), "surr");});
test("surrande -> surr", function() {deepEqual( Stem("surrande"), "surr");});
test("surrar -> surr", function() {deepEqual( Stem("surrar"), "surr");});
test("surrat -> surr", function() {deepEqual( Stem("surrat"), "surr");});
test("surt -> surt", function() {deepEqual( Stem("surt"), "surt");});
test("sus -> sus", function() {deepEqual( Stem("sus"), "sus");});
test("susa -> sus", function() {deepEqual( Stem("susa"), "sus");});
test("susade -> sus", function() {deepEqual( Stem("susade"), "sus");});
test("susande -> sus", function() {deepEqual( Stem("susande"), "sus");});
test("susar -> sus", function() {deepEqual( Stem("susar"), "sus");});
test("suset -> suset", function() {deepEqual( Stem("suset"), "suset");});
test("sutinera -> sutiner", function() {deepEqual( Stem("sutinera"), "sutiner");});
test("sutte -> sutt", function() {deepEqual( Stem("sutte"), "sutt");});
test("suttit -> suttit", function() {deepEqual( Stem("suttit"), "suttit");});
test("sutto -> sutto", function() {deepEqual( Stem("sutto"), "sutto");});
test("svada -> svad", function() {deepEqual( Stem("svada"), "svad");});
test("svag -> svag", function() {deepEqual( Stem("svag"), "svag");});
test("svaga -> svag", function() {deepEqual( Stem("svaga"), "svag");});
test("svagare -> svag", function() {deepEqual( Stem("svagare"), "svag");});
test("svagas -> svag", function() {deepEqual( Stem("svagas"), "svag");});
test("svagaste -> svag", function() {deepEqual( Stem("svagaste"), "svag");});
test("svage -> svag", function() {deepEqual( Stem("svage"), "svag");});
test("svaghet -> svag", function() {deepEqual( Stem("svaghet"), "svag");});
test("svagheten -> svag", function() {deepEqual( Stem("svagheten"), "svag");});
test("svagheter -> svag", function() {deepEqual( Stem("svagheter"), "svag");});
test("svaghetstillstånd -> svaghetstillstånd", function() {deepEqual( Stem("svaghetstillstånd"), "svaghetstillstånd");});
test("svagsint -> svagsint", function() {deepEqual( Stem("svagsint"), "svagsint");});
test("svagsinte -> svagsint", function() {deepEqual( Stem("svagsinte"), "svagsint");});
test("svagt -> svagt", function() {deepEqual( Stem("svagt"), "svagt");});
test("svajar -> svaj", function() {deepEqual( Stem("svajar"), "svaj");});
test("sval -> sval", function() {deepEqual( Stem("sval"), "sval");});
test("svala -> sval", function() {deepEqual( Stem("svala"), "sval");});
test("svalan -> svalan", function() {deepEqual( Stem("svalan"), "svalan");});
test("svalare -> sval", function() {deepEqual( Stem("svalare"), "sval");});
test("svalde -> svald", function() {deepEqual( Stem("svalde"), "svald");});
test("svalen -> sval", function() {deepEqual( Stem("svalen"), "sval");});
test("svalg -> svalg", function() {deepEqual( Stem("svalg"), "svalg");});
test("svalget -> svalget", function() {deepEqual( Stem("svalget"), "svalget");});
test("svalka -> svalk", function() {deepEqual( Stem("svalka"), "svalk");});
test("svalkad -> svalk", function() {deepEqual( Stem("svalkad"), "svalk");});
test("svalkade -> svalk", function() {deepEqual( Stem("svalkade"), "svalk");});
test("svalkan -> svalkan", function() {deepEqual( Stem("svalkan"), "svalkan");});
test("svalkar -> svalk", function() {deepEqual( Stem("svalkar"), "svalk");});
test("svalkas -> svalk", function() {deepEqual( Stem("svalkas"), "svalk");});
test("svall -> svall", function() {deepEqual( Stem("svall"), "svall");});
test("svalla -> svall", function() {deepEqual( Stem("svalla"), "svall");});
test("svallade -> svall", function() {deepEqual( Stem("svallade"), "svall");});
test("svallande -> svall", function() {deepEqual( Stem("svallande"), "svall");});
test("svallvågorna -> svallvåg", function() {deepEqual( Stem("svallvågorna"), "svallvåg");});
test("svalna -> svaln", function() {deepEqual( Stem("svalna"), "svaln");});
test("svalnande -> svaln", function() {deepEqual( Stem("svalnande"), "svaln");});
test("svalnar -> svaln", function() {deepEqual( Stem("svalnar"), "svaln");});
test("svalor -> sval", function() {deepEqual( Stem("svalor"), "sval");});
test("svalorna -> sval", function() {deepEqual( Stem("svalorna"), "sval");});
test("svalornas -> sval", function() {deepEqual( Stem("svalornas"), "sval");});
test("svalpar -> svalp", function() {deepEqual( Stem("svalpar"), "svalp");});
test("svalt -> svalt", function() {deepEqual( Stem("svalt"), "svalt");});
test("svamp -> svamp", function() {deepEqual( Stem("svamp"), "svamp");});
test("svampar -> svamp", function() {deepEqual( Stem("svampar"), "svamp");});
test("svampen -> svamp", function() {deepEqual( Stem("svampen"), "svamp");});
test("svampiga -> svamp", function() {deepEqual( Stem("svampiga"), "svamp");});
test("svan -> svan", function() {deepEqual( Stem("svan"), "svan");});
test("svanar -> svan", function() {deepEqual( Stem("svanar"), "svan");});
test("svandun -> svandun", function() {deepEqual( Stem("svandun"), "svandun");});
test("svanen -> svan", function() {deepEqual( Stem("svanen"), "svan");});
test("svanger -> svang", function() {deepEqual( Stem("svanger"), "svang");});
test("svanklang -> svanklang", function() {deepEqual( Stem("svanklang"), "svanklang");});
test("svann -> svann", function() {deepEqual( Stem("svann"), "svann");});
test("svans -> svan", function() {deepEqual( Stem("svans"), "svan");});
test("svansar -> svans", function() {deepEqual( Stem("svansar"), "svans");});
test("svansarna -> svans", function() {deepEqual( Stem("svansarna"), "svans");});
test("svansen -> svans", function() {deepEqual( Stem("svansen"), "svans");});
test("svanslik -> svanslik", function() {deepEqual( Stem("svanslik"), "svanslik");});
test("svar -> svar", function() {deepEqual( Stem("svar"), "svar");});
test("svara -> svar", function() {deepEqual( Stem("svara"), "svar");});
test("svarade -> svar", function() {deepEqual( Stem("svarade"), "svar");});
test("svarar -> svar", function() {deepEqual( Stem("svarar"), "svar");});
test("svararle -> svararl", function() {deepEqual( Stem("svararle"), "svararl");});
test("svarat -> svar", function() {deepEqual( Stem("svarat"), "svar");});
test("svarata -> svarat", function() {deepEqual( Stem("svarata"), "svarat");});
test("svaren -> svar", function() {deepEqual( Stem("svaren"), "svar");});
test("svaret -> svaret", function() {deepEqual( Stem("svaret"), "svaret");});
test("svarh -> svarh", function() {deepEqual( Stem("svarh"), "svarh");});
test("svarl -> svarl", function() {deepEqual( Stem("svarl"), "svarl");});
test("svars -> svar", function() {deepEqual( Stem("svars"), "svar");});
test("svarslös -> svarslös", function() {deepEqual( Stem("svarslös"), "svarslös");});
test("svart -> svart", function() {deepEqual( Stem("svart"), "svart");});
test("svarta -> svart", function() {deepEqual( Stem("svarta"), "svart");});
test("svartare -> svart", function() {deepEqual( Stem("svartare"), "svart");});
test("svartaste -> svart", function() {deepEqual( Stem("svartaste"), "svart");});
test("svartens -> svart", function() {deepEqual( Stem("svartens"), "svart");});
test("svartglänsande -> svartgläns", function() {deepEqual( Stem("svartglänsande"), "svartgläns");});
test("svartgrå -> svartgrå", function() {deepEqual( Stem("svartgrå"), "svartgrå");});
test("svartgråa -> svartgrå", function() {deepEqual( Stem("svartgråa"), "svartgrå");});
test("svartgröna -> svartgrön", function() {deepEqual( Stem("svartgröna"), "svartgrön");});
test("svarthårig -> svarthår", function() {deepEqual( Stem("svarthårig"), "svarthår");});
test("svartklädd -> svartkläd", function() {deepEqual( Stem("svartklädd"), "svartkläd");});
test("svartklädda -> svartkläd", function() {deepEqual( Stem("svartklädda"), "svartkläd");});
test("svartkritsförstoring -> svartkritsförstoring", function() {deepEqual( Stem("svartkritsförstoring"), "svartkritsförstoring");});
test("svartmältat -> svartmält", function() {deepEqual( Stem("svartmältat"), "svartmält");});
test("svartmålade -> svartmål", function() {deepEqual( Stem("svartmålade"), "svartmål");});
test("svartnad -> svartn", function() {deepEqual( Stem("svartnad"), "svartn");});
test("svartnat -> svartn", function() {deepEqual( Stem("svartnat"), "svartn");});
test("svartrock -> svartrock", function() {deepEqual( Stem("svartrock"), "svartrock");});
test("svartrökt -> svartrök", function() {deepEqual( Stem("svartrökt"), "svartrök");});
test("svartsjuk -> svartsjuk", function() {deepEqual( Stem("svartsjuk"), "svartsjuk");});
test("svartsjuka -> svartsjuk", function() {deepEqual( Stem("svartsjuka"), "svartsjuk");});
test("svartsjukan -> svartsjukan", function() {deepEqual( Stem("svartsjukan"), "svartsjukan");});
test("svartsjuke -> svartsjuk", function() {deepEqual( Stem("svartsjuke"), "svartsjuk");});
test("svartsjö -> svartsjö", function() {deepEqual( Stem("svartsjö"), "svartsjö");});
test("svarv -> svarv", function() {deepEqual( Stem("svarv"), "svarv");});
test("svarvade -> svarv", function() {deepEqual( Stem("svarvade"), "svarv");});
test("svarvstol -> svarvstol", function() {deepEqual( Stem("svarvstol"), "svarvstol");});
test("svassande -> svass", function() {deepEqual( Stem("svassande"), "svass");});
test("svcn -> svcn", function() {deepEqual( Stem("svcn"), "svcn");});
test("svcrige -> svcrig", function() {deepEqual( Stem("svcrige"), "svcrig");});
test("svea -> svea", function() {deepEqual( Stem("svea"), "svea");});
test("sved -> sved", function() {deepEqual( Stem("sved"), "sved");});
test("sveda -> sved", function() {deepEqual( Stem("sveda"), "sved");});
test("svedan -> svedan", function() {deepEqual( Stem("svedan"), "svedan");});
test("svedd -> svedd", function() {deepEqual( Stem("svedd"), "svedd");});
test("svedda -> svedd", function() {deepEqual( Stem("svedda"), "svedd");});
test("sveddes -> svedd", function() {deepEqual( Stem("sveddes"), "svedd");});
test("svedo -> svedo", function() {deepEqual( Stem("svedo"), "svedo");});
test("svek -> svek", function() {deepEqual( Stem("svek"), "svek");});
test("sveko -> sveko", function() {deepEqual( Stem("sveko"), "sveko");});
test("sveks -> svek", function() {deepEqual( Stem("sveks"), "svek");});
test("sven -> sven", function() {deepEqual( Stem("sven"), "sven");});
test("svennen -> svenn", function() {deepEqual( Stem("svennen"), "svenn");});
test("svens -> sven", function() {deepEqual( Stem("svens"), "sven");});
test("svensk -> svensk", function() {deepEqual( Stem("svensk"), "svensk");});
test("svenska -> svensk", function() {deepEqual( Stem("svenska"), "svensk");});
test("svenskar -> svensk", function() {deepEqual( Stem("svenskar"), "svensk");});
test("svenskarna -> svensk", function() {deepEqual( Stem("svenskarna"), "svensk");});
test("svenskt -> svensk", function() {deepEqual( Stem("svenskt"), "svensk");});
test("svepa -> svep", function() {deepEqual( Stem("svepa"), "svep");});
test("svepande -> svep", function() {deepEqual( Stem("svepande"), "svep");});
test("svepning -> svepning", function() {deepEqual( Stem("svepning"), "svepning");});
test("svept -> svept", function() {deepEqual( Stem("svept"), "svept");});
test("svepte -> svept", function() {deepEqual( Stem("svepte"), "svept");});
test("sverige -> sver", function() {deepEqual( Stem("sverige"), "sver");});
test("sveriges -> sver", function() {deepEqual( Stem("sveriges"), "sver");});
test("svett -> svett", function() {deepEqual( Stem("svett"), "svett");});
test("svettas -> svett", function() {deepEqual( Stem("svettas"), "svett");});
test("svettats -> svettat", function() {deepEqual( Stem("svettats"), "svettat");});
test("svettdunster -> svettdunst", function() {deepEqual( Stem("svettdunster"), "svettdunst");});
test("svetten -> svett", function() {deepEqual( Stem("svetten"), "svett");});
test("svida -> svid", function() {deepEqual( Stem("svida"), "svid");});
test("svidande -> svid", function() {deepEqual( Stem("svidande"), "svid");});
test("svider -> svid", function() {deepEqual( Stem("svider"), "svid");});
test("svigta -> svigt", function() {deepEqual( Stem("svigta"), "svigt");});
test("svigtande -> svigt", function() {deepEqual( Stem("svigtande"), "svigt");});
test("svika -> svik", function() {deepEqual( Stem("svika"), "svik");});
test("sviken -> svik", function() {deepEqual( Stem("sviken"), "svik");});
test("sviker -> svik", function() {deepEqual( Stem("sviker"), "svik");});
test("svikit -> svikit", function() {deepEqual( Stem("svikit"), "svikit");});
test("svikt -> svikt", function() {deepEqual( Stem("svikt"), "svikt");});
test("sviktande -> svikt", function() {deepEqual( Stem("sviktande"), "svikt");});
test("svimma -> svimm", function() {deepEqual( Stem("svimma"), "svimm");});
test("svimmat -> svimm", function() {deepEqual( Stem("svimmat"), "svimm");});
test("svimningsanfall -> svimningsanfall", function() {deepEqual( Stem("svimningsanfall"), "svimningsanfall");});
test("svinaktiga -> svinakt", function() {deepEqual( Stem("svinaktiga"), "svinakt");});
test("svindel -> svindel", function() {deepEqual( Stem("svindel"), "svindel");});
test("svindlade -> svindl", function() {deepEqual( Stem("svindlade"), "svindl");});
test("svindlande -> svindl", function() {deepEqual( Stem("svindlande"), "svindl");});
test("sving -> sving", function() {deepEqual( Stem("sving"), "sving");});
test("svinga -> sving", function() {deepEqual( Stem("svinga"), "sving");});
test("svingade -> sving", function() {deepEqual( Stem("svingade"), "sving");});
test("svinna -> svinn", function() {deepEqual( Stem("svinna"), "svinn");});
test("svinner -> svinn", function() {deepEqual( Stem("svinner"), "svinn");});
test("sviskon -> sviskon", function() {deepEqual( Stem("sviskon"), "sviskon");});
test("svit -> svit", function() {deepEqual( Stem("svit"), "svit");});
test("svor -> svor", function() {deepEqual( Stem("svor"), "svor");});
test("svullen -> svull", function() {deepEqual( Stem("svullen"), "svull");});
test("svullna -> svulln", function() {deepEqual( Stem("svullna"), "svulln");});
test("svullnade -> svulln", function() {deepEqual( Stem("svullnade"), "svulln");});
test("svulst -> svulst", function() {deepEqual( Stem("svulst"), "svulst");});
test("svultit -> svultit", function() {deepEqual( Stem("svultit"), "svultit");});
test("svunna -> svunn", function() {deepEqual( Stem("svunna"), "svunn");});
test("svunnit -> svunnit", function() {deepEqual( Stem("svunnit"), "svunnit");});
test("svunno -> svunno", function() {deepEqual( Stem("svunno"), "svunno");});
test("svuro -> svuro", function() {deepEqual( Stem("svuro"), "svuro");});
test("svä -> svä", function() {deepEqual( Stem("svä"), "svä");});
test("sväfvade -> sväfv", function() {deepEqual( Stem("sväfvade"), "sväfv");});
test("svägerska -> svägersk", function() {deepEqual( Stem("svägerska"), "svägersk");});
test("svägerskan -> svägerskan", function() {deepEqual( Stem("svägerskan"), "svägerskan");});
test("svägerskas -> svägersk", function() {deepEqual( Stem("svägerskas"), "svägersk");});
test("svälde -> sväld", function() {deepEqual( Stem("svälde"), "sväld");});
test("svälja -> svälj", function() {deepEqual( Stem("svälja"), "svälj");});
test("sväljde -> sväljd", function() {deepEqual( Stem("sväljde"), "sväljd");});
test("svälla -> sväll", function() {deepEqual( Stem("svälla"), "sväll");});
test("svällamde -> svällamd", function() {deepEqual( Stem("svällamde"), "svällamd");});
test("svällande -> sväll", function() {deepEqual( Stem("svällande"), "sväll");});
test("svällaren -> sväll", function() {deepEqual( Stem("svällaren"), "sväll");});
test("svälld -> svälld", function() {deepEqual( Stem("svälld"), "svälld");});
test("svällda -> svälld", function() {deepEqual( Stem("svällda"), "svälld");});
test("svällde -> svälld", function() {deepEqual( Stem("svällde"), "svälld");});
test("sväller -> sväll", function() {deepEqual( Stem("sväller"), "sväll");});
test("svält -> svält", function() {deepEqual( Stem("svält"), "svält");});
test("svälta -> svält", function() {deepEqual( Stem("svälta"), "svält");});
test("sväng -> sväng", function() {deepEqual( Stem("sväng"), "sväng");});
test("svänga -> sväng", function() {deepEqual( Stem("svänga"), "sväng");});
test("svängandc -> svängandc", function() {deepEqual( Stem("svängandc"), "svängandc");});
test("svängande -> sväng", function() {deepEqual( Stem("svängande"), "sväng");});
test("svängd -> sväng", function() {deepEqual( Stem("svängd"), "sväng");});
test("svängda -> sväng", function() {deepEqual( Stem("svängda"), "sväng");});
test("svängde -> sväng", function() {deepEqual( Stem("svängde"), "sväng");});
test("svängeln -> svängeln", function() {deepEqual( Stem("svängeln"), "svängeln");});
test("svänger -> sväng", function() {deepEqual( Stem("svänger"), "sväng");});
test("svängningar -> svängning", function() {deepEqual( Stem("svängningar"), "svängning");});
test("svängningstiderna -> svängningstid", function() {deepEqual( Stem("svängningstiderna"), "svängningstid");});
test("svängt -> sväng", function() {deepEqual( Stem("svängt"), "sväng");});
test("svär -> svär", function() {deepEqual( Stem("svär"), "svär");});
test("svära -> svär", function() {deepEqual( Stem("svära"), "svär");});
test("svärd -> svärd", function() {deepEqual( Stem("svärd"), "svärd");});
test("svärden -> svärd", function() {deepEqual( Stem("svärden"), "svärd");});
test("svärdet -> svärdet", function() {deepEqual( Stem("svärdet"), "svärdet");});
test("svärdotter -> svärdot", function() {deepEqual( Stem("svärdotter"), "svärdot");});
test("svärdsliljan -> svärdsliljan", function() {deepEqual( Stem("svärdsliljan"), "svärdsliljan");});
test("svärfär -> svärfär", function() {deepEqual( Stem("svärfär"), "svärfär");});
test("svärligt -> svär", function() {deepEqual( Stem("svärligt"), "svär");});
test("svärm -> svärm", function() {deepEqual( Stem("svärm"), "svärm");});
test("svärma -> svärm", function() {deepEqual( Stem("svärma"), "svärm");});
test("svärmade -> svärm", function() {deepEqual( Stem("svärmade"), "svärm");});
test("svärmande -> svärm", function() {deepEqual( Stem("svärmande"), "svärm");});
test("svärmar -> svärm", function() {deepEqual( Stem("svärmar"), "svärm");});
test("svärmat -> svärm", function() {deepEqual( Stem("svärmat"), "svärm");});
test("svärmeri -> svärmeri", function() {deepEqual( Stem("svärmeri"), "svärmeri");});
test("svärmisk -> svärmisk", function() {deepEqual( Stem("svärmisk"), "svärmisk");});
test("svärmiskt -> svärmisk", function() {deepEqual( Stem("svärmiskt"), "svärmisk");});
test("svärmoder -> svärmod", function() {deepEqual( Stem("svärmoder"), "svärmod");});
test("svärmor -> svärm", function() {deepEqual( Stem("svärmor"), "svärm");});
test("svärmors -> svärmor", function() {deepEqual( Stem("svärmors"), "svärmor");});
test("svärntiskt -> svärntisk", function() {deepEqual( Stem("svärntiskt"), "svärntisk");});
test("svärson -> svärson", function() {deepEqual( Stem("svärson"), "svärson");});
test("svärta -> svärt", function() {deepEqual( Stem("svärta"), "svärt");});
test("svärtad -> svärt", function() {deepEqual( Stem("svärtad"), "svärt");});
test("svärtat -> svärt", function() {deepEqual( Stem("svärtat"), "svärt");});
test("sväva -> sväv", function() {deepEqual( Stem("sväva"), "sväv");});
test("svävade -> sväv", function() {deepEqual( Stem("svävade"), "sväv");});
test("svävande -> sväv", function() {deepEqual( Stem("svävande"), "sväv");});
test("svävar -> sväv", function() {deepEqual( Stem("svävar"), "sväv");});
test("svävat -> sväv", function() {deepEqual( Stem("svävat"), "sväv");});
test("svåger -> svåg", function() {deepEqual( Stem("svåger"), "svåg");});
test("svågern -> svåg", function() {deepEqual( Stem("svågern"), "svåg");});
test("svågerskap -> svågerskap", function() {deepEqual( Stem("svågerskap"), "svågerskap");});
test("svångde -> svång", function() {deepEqual( Stem("svångde"), "svång");});
test("svångrem -> svångrem", function() {deepEqual( Stem("svångrem"), "svångrem");});
test("svångremmen -> svångremm", function() {deepEqual( Stem("svångremmen"), "svångremm");});
test("svår -> svår", function() {deepEqual( Stem("svår"), "svår");});
test("svåra -> svår", function() {deepEqual( Stem("svåra"), "svår");});
test("svårare -> svår", function() {deepEqual( Stem("svårare"), "svår");});
test("svårast -> svår", function() {deepEqual( Stem("svårast"), "svår");});
test("svårhanterligt -> svårhanter", function() {deepEqual( Stem("svårhanterligt"), "svårhanter");});
test("svårighet -> svår", function() {deepEqual( Stem("svårighet"), "svår");});
test("svårigheten -> svår", function() {deepEqual( Stem("svårigheten"), "svår");});
test("svårigheter -> svår", function() {deepEqual( Stem("svårigheter"), "svår");});
test("svårigheterna -> svår", function() {deepEqual( Stem("svårigheterna"), "svår");});
test("svårligen -> svår", function() {deepEqual( Stem("svårligen"), "svår");});
test("svårmod -> svårmod", function() {deepEqual( Stem("svårmod"), "svårmod");});
test("svårmodig -> svårmod", function() {deepEqual( Stem("svårmodig"), "svårmod");});
test("svårt -> svårt", function() {deepEqual( Stem("svårt"), "svårt");});
test("sy -> sy", function() {deepEqual( Stem("sy"), "sy");});
test("sybord -> sybord", function() {deepEqual( Stem("sybord"), "sybord");});
test("sybågar -> sybåg", function() {deepEqual( Stem("sybågar"), "sybåg");});
test("sybågen -> sybåg", function() {deepEqual( Stem("sybågen"), "sybåg");});
test("sydamerika -> sydamerik", function() {deepEqual( Stem("sydamerika"), "sydamerik");});
test("sydde -> sydd", function() {deepEqual( Stem("sydde"), "sydd");});
test("sydhavspalm -> sydhavspalm", function() {deepEqual( Stem("sydhavspalm"), "sydhavspalm");});
test("syfilidologi -> syfilidologi", function() {deepEqual( Stem("syfilidologi"), "syfilidologi");});
test("syforening -> syforening", function() {deepEqual( Stem("syforening"), "syforening");});
test("syforeningens -> syforening", function() {deepEqual( Stem("syforeningens"), "syforening");});
test("syftar -> syft", function() {deepEqual( Stem("syftar"), "syft");});
test("syfte -> syft", function() {deepEqual( Stem("syfte"), "syft");});
test("syförening -> syförening", function() {deepEqual( Stem("syförening"), "syförening");});
test("sykorg -> sykorg", function() {deepEqual( Stem("sykorg"), "sykorg");});
test("sykorgen -> sykorg", function() {deepEqual( Stem("sykorgen"), "sykorg");});
test("sylf -> sylf", function() {deepEqual( Stem("sylf"), "sylf");});
test("sylfers -> sylfer", function() {deepEqual( Stem("sylfers"), "sylfer");});
test("sylt -> sylt", function() {deepEqual( Stem("sylt"), "sylt");});
test("syltburkar -> syltburk", function() {deepEqual( Stem("syltburkar"), "syltburk");});
test("syltburks -> syltburk", function() {deepEqual( Stem("syltburks"), "syltburk");});
test("sylvia -> sylvi", function() {deepEqual( Stem("sylvia"), "sylvi");});
test("symaskinen -> symaskin", function() {deepEqual( Stem("symaskinen"), "symaskin");});
test("symaskinerna -> symaskin", function() {deepEqual( Stem("symaskinerna"), "symaskin");});
test("symbol -> symbol", function() {deepEqual( Stem("symbol"), "symbol");});
test("symbolen -> symbol", function() {deepEqual( Stem("symbolen"), "symbol");});
test("symboliska -> symbolisk", function() {deepEqual( Stem("symboliska"), "symbolisk");});
test("symfoni -> symfoni", function() {deepEqual( Stem("symfoni"), "symfoni");});
test("symmetriska -> symmetrisk", function() {deepEqual( Stem("symmetriska"), "symmetrisk");});
test("sympati -> sympati", function() {deepEqual( Stem("sympati"), "sympati");});
test("sympatien -> sympati", function() {deepEqual( Stem("sympatien"), "sympati");});
test("sympatier -> sympati", function() {deepEqual( Stem("sympatier"), "sympati");});
test("sympatiserande -> sympatiser", function() {deepEqual( Stem("sympatiserande"), "sympatiser");});
test("sympatisk -> sympatisk", function() {deepEqual( Stem("sympatisk"), "sympatisk");});
test("sympatiske -> sympatisk", function() {deepEqual( Stem("sympatiske"), "sympatisk");});
test("symptom -> symptom", function() {deepEqual( Stem("symptom"), "symptom");});
test("symtom -> symtom", function() {deepEqual( Stem("symtom"), "symtom");});
test("syn -> syn", function() {deepEqual( Stem("syn"), "syn");});
test("syna -> syn", function() {deepEqual( Stem("syna"), "syn");});
test("synade -> syn", function() {deepEqual( Stem("synade"), "syn");});
test("synagogan -> synagogan", function() {deepEqual( Stem("synagogan"), "synagogan");});
test("synas -> syn", function() {deepEqual( Stem("synas"), "syn");});
test("synbar -> synb", function() {deepEqual( Stem("synbar"), "synb");});
test("synbara -> synbar", function() {deepEqual( Stem("synbara"), "synbar");});
test("synbarligen -> synbar", function() {deepEqual( Stem("synbarligen"), "synbar");});
test("synbart -> synbart", function() {deepEqual( Stem("synbart"), "synbart");});
test("synd -> synd", function() {deepEqual( Stem("synd"), "synd");});
test("synda -> synd", function() {deepEqual( Stem("synda"), "synd");});
test("syndabikt -> syndabik", function() {deepEqual( Stem("syndabikt"), "syndabik");});
test("syndade -> synd", function() {deepEqual( Stem("syndade"), "synd");});
test("syndaflod -> syndaflod", function() {deepEqual( Stem("syndaflod"), "syndaflod");});
test("syndare -> synd", function() {deepEqual( Stem("syndare"), "synd");});
test("syndat -> synd", function() {deepEqual( Stem("syndat"), "synd");});
test("syndedag -> syndedag", function() {deepEqual( Stem("syndedag"), "syndedag");});
test("synden -> synd", function() {deepEqual( Stem("synden"), "synd");});
test("syndens -> synd", function() {deepEqual( Stem("syndens"), "synd");});
test("synder -> synd", function() {deepEqual( Stem("synder"), "synd");});
test("syndfulla -> syndfull", function() {deepEqual( Stem("syndfulla"), "syndfull");});
test("syndig -> synd", function() {deepEqual( Stem("syndig"), "synd");});
test("syndiga -> synd", function() {deepEqual( Stem("syndiga"), "synd");});
test("syndigt -> synd", function() {deepEqual( Stem("syndigt"), "synd");});
test("synen -> syn", function() {deepEqual( Stem("synen"), "syn");});
test("syner -> syn", function() {deepEqual( Stem("syner"), "syn");});
test("synes -> syn", function() {deepEqual( Stem("synes"), "syn");});
test("synförmåga -> synförmåg", function() {deepEqual( Stem("synförmåga"), "synförmåg");});
test("synglas -> syngl", function() {deepEqual( Stem("synglas"), "syngl");});
test("synlig -> syn", function() {deepEqual( Stem("synlig"), "syn");});
test("synliga -> syn", function() {deepEqual( Stem("synliga"), "syn");});
test("synmamsellen -> synmamsell", function() {deepEqual( Stem("synmamsellen"), "synmamsell");});
test("synnerhet -> synner", function() {deepEqual( Stem("synnerhet"), "synner");});
test("synnerliga -> synner", function() {deepEqual( Stem("synnerliga"), "synner");});
test("synnerligast -> synner", function() {deepEqual( Stem("synnerligast"), "synner");});
test("synnerligen -> synner", function() {deepEqual( Stem("synnerligen"), "synner");});
test("synnerligt -> synner", function() {deepEqual( Stem("synnerligt"), "synner");});
test("synpunkt -> synpunk", function() {deepEqual( Stem("synpunkt"), "synpunk");});
test("synpunkten -> synpunk", function() {deepEqual( Stem("synpunkten"), "synpunk");});
test("synpunkter -> synpunk", function() {deepEqual( Stem("synpunkter"), "synpunk");});
test("syns -> syn", function() {deepEqual( Stem("syns"), "syn");});
test("synslös -> synslös", function() {deepEqual( Stem("synslös"), "synslös");});
test("syntes -> synt", function() {deepEqual( Stem("syntes"), "synt");});
test("syntetiskt -> syntetisk", function() {deepEqual( Stem("syntetiskt"), "syntetisk");});
test("synts -> synt", function() {deepEqual( Stem("synts"), "synt");});
test("synvilla -> synvill", function() {deepEqual( Stem("synvilla"), "synvill");});
test("synvinkel -> synvinkel", function() {deepEqual( Stem("synvinkel"), "synvinkel");});
test("syperb -> syperb", function() {deepEqual( Stem("syperb"), "syperb");});
test("syperbt -> syperbt", function() {deepEqual( Stem("syperbt"), "syperbt");});
test("syr -> syr", function() {deepEqual( Stem("syr"), "syr");});
test("syra -> syr", function() {deepEqual( Stem("syra"), "syr");});
test("syraks -> syrak", function() {deepEqual( Stem("syraks"), "syrak");});
test("syrener -> syren", function() {deepEqual( Stem("syrener"), "syren");});
test("syrenerna -> syren", function() {deepEqual( Stem("syrenerna"), "syren");});
test("syrenhäck -> syrenhäck", function() {deepEqual( Stem("syrenhäck"), "syrenhäck");});
test("syrenträden -> syrenträd", function() {deepEqual( Stem("syrenträden"), "syrenträd");});
test("syrinx -> syrinx", function() {deepEqual( Stem("syrinx"), "syrinx");});
test("syrliga -> syr", function() {deepEqual( Stem("syrliga"), "syr");});
test("syrligt -> syr", function() {deepEqual( Stem("syrligt"), "syr");});
test("syrmerhet -> syrmer", function() {deepEqual( Stem("syrmerhet"), "syrmer");});
test("syrprisen -> syrpris", function() {deepEqual( Stem("syrprisen"), "syrpris");});
test("syrpriser -> syrpris", function() {deepEqual( Stem("syrpriser"), "syrpris");});
test("syrtut -> syrtut", function() {deepEqual( Stem("syrtut"), "syrtut");});
test("syrtuten -> syrtut", function() {deepEqual( Stem("syrtuten"), "syrtut");});
test("sys -> sys", function() {deepEqual( Stem("sys"), "sys");});
test("sysaker -> sysak", function() {deepEqual( Stem("sysaker"), "sysak");});
test("syskon -> syskon", function() {deepEqual( Stem("syskon"), "syskon");});
test("syskonen -> syskon", function() {deepEqual( Stem("syskonen"), "syskon");});
test("syskonkärlek -> syskonkärlek", function() {deepEqual( Stem("syskonkärlek"), "syskonkärlek");});
test("syskonringen -> syskonring", function() {deepEqual( Stem("syskonringen"), "syskonring");});
test("syskonsjäl -> syskonsjäl", function() {deepEqual( Stem("syskonsjäl"), "syskonsjäl");});
test("syskonskara -> syskonskar", function() {deepEqual( Stem("syskonskara"), "syskonskar");});
test("syskontycke -> syskontyck", function() {deepEqual( Stem("syskontycke"), "syskontyck");});
test("syskrin -> syskrin", function() {deepEqual( Stem("syskrin"), "syskrin");});
test("syssel -> syssel", function() {deepEqual( Stem("syssel"), "syssel");});
test("sysselsatt -> sysselsat", function() {deepEqual( Stem("sysselsatt"), "sysselsat");});
test("sysselsatta -> sysselsat", function() {deepEqual( Stem("sysselsatta"), "sysselsat");});
test("sysselsatte -> sysselsat", function() {deepEqual( Stem("sysselsatte"), "sysselsat");});
test("sysselsätt -> sysselsät", function() {deepEqual( Stem("sysselsätt"), "sysselsät");});
test("sysselsätta -> sysselsät", function() {deepEqual( Stem("sysselsätta"), "sysselsät");});
test("sysselsätter -> sysselsät", function() {deepEqual( Stem("sysselsätter"), "sysselsät");});
test("sysselsättning -> sysselsättning", function() {deepEqual( Stem("sysselsättning"), "sysselsättning");});
test("sysselsättningar -> sysselsättning", function() {deepEqual( Stem("sysselsättningar"), "sysselsättning");});
test("syssla -> syssl", function() {deepEqual( Stem("syssla"), "syssl");});
test("sysslade -> syssl", function() {deepEqual( Stem("sysslade"), "syssl");});
test("sysslar -> syssl", function() {deepEqual( Stem("sysslar"), "syssl");});
test("sysslat -> syssl", function() {deepEqual( Stem("sysslat"), "syssl");});
test("syssling -> syssling", function() {deepEqual( Stem("syssling"), "syssling");});
test("sysslo -> sysslo", function() {deepEqual( Stem("sysslo"), "sysslo");});
test("sysslolös -> sysslolös", function() {deepEqual( Stem("sysslolös"), "sysslolös");});
test("sysslolöshet -> sysslolös", function() {deepEqual( Stem("sysslolöshet"), "sysslolös");});
test("sysslolöst -> sysslolös", function() {deepEqual( Stem("sysslolöst"), "sysslolös");});
test("sysslor -> syssl", function() {deepEqual( Stem("sysslor"), "syssl");});
test("systemet -> systemet", function() {deepEqual( Stem("systemet"), "systemet");});
test("syster -> syst", function() {deepEqual( Stem("syster"), "syst");});
test("systerdotter -> systerdot", function() {deepEqual( Stem("systerdotter"), "systerdot");});
test("systerhovmästarinnan -> systerhovmästarinnan", function() {deepEqual( Stem("systerhovmästarinnan"), "systerhovmästarinnan");});
test("systerliga -> syster", function() {deepEqual( Stem("systerliga"), "syster");});
test("systern -> syst", function() {deepEqual( Stem("systern"), "syst");});
test("systerns -> syst", function() {deepEqual( Stem("systerns"), "syst");});
test("systers -> syster", function() {deepEqual( Stem("systers"), "syster");});
test("systerson -> systerson", function() {deepEqual( Stem("systerson"), "systerson");});
test("systrar -> systr", function() {deepEqual( Stem("systrar"), "systr");});
test("systrarna -> systr", function() {deepEqual( Stem("systrarna"), "systr");});
test("sytt -> sytt", function() {deepEqual( Stem("sytt"), "sytt");});
test("sä -> sä", function() {deepEqual( Stem("sä"), "sä");});
test("säck -> säck", function() {deepEqual( Stem("säck"), "säck");});
test("säd -> säd", function() {deepEqual( Stem("säd"), "säd");});
test("säden -> säd", function() {deepEqual( Stem("säden"), "säd");});
test("sädesfält -> sädesfält", function() {deepEqual( Stem("sädesfält"), "sädesfält");});
test("säea -> säea", function() {deepEqual( Stem("säea"), "säea");});
test("säg -> säg", function() {deepEqual( Stem("säg"), "säg");});
test("säga -> säg", function() {deepEqual( Stem("säga"), "säg");});
test("sägandes -> säg", function() {deepEqual( Stem("sägandes"), "säg");});
test("sägas -> säg", function() {deepEqual( Stem("sägas"), "säg");});
test("sägen -> säg", function() {deepEqual( Stem("sägen"), "säg");});
test("säger -> säg", function() {deepEqual( Stem("säger"), "säg");});
test("sägerl -> sägerl", function() {deepEqual( Stem("sägerl"), "sägerl");});
test("säges -> säg", function() {deepEqual( Stem("säges"), "säg");});
test("sägnerna -> sägn", function() {deepEqual( Stem("sägnerna"), "sägn");});
test("sägs -> säg", function() {deepEqual( Stem("sägs"), "säg");});
test("säkcr -> säkcr", function() {deepEqual( Stem("säkcr"), "säkcr");});
test("säker -> säk", function() {deepEqual( Stem("säker"), "säk");});
test("säkerhet -> säker", function() {deepEqual( Stem("säkerhet"), "säker");});
test("säkerhets -> säkerhet", function() {deepEqual( Stem("säkerhets"), "säkerhet");});
test("säkerligen -> säker", function() {deepEqual( Stem("säkerligen"), "säker");});
test("säkert -> säkert", function() {deepEqual( Stem("säkert"), "säkert");});
test("säkra -> säkr", function() {deepEqual( Stem("säkra"), "säkr");});
test("säkrare -> säkr", function() {deepEqual( Stem("säkrare"), "säkr");});
test("säkrast -> säkr", function() {deepEqual( Stem("säkrast"), "säkr");});
test("säkraste -> säkr", function() {deepEqual( Stem("säkraste"), "säkr");});
test("sälar -> säl", function() {deepEqual( Stem("sälar"), "säl");});
test("sälarna -> säl", function() {deepEqual( Stem("sälarna"), "säl");});
test("sälarne -> säl", function() {deepEqual( Stem("sälarne"), "säl");});
test("sälen -> säl", function() {deepEqual( Stem("sälen"), "säl");});
test("sälhund -> sälhund", function() {deepEqual( Stem("sälhund"), "sälhund");});
test("sälhunden -> sälhund", function() {deepEqual( Stem("sälhunden"), "sälhund");});
test("sälja -> sälj", function() {deepEqual( Stem("sälja"), "sälj");});
test("säljagt -> säljag", function() {deepEqual( Stem("säljagt"), "säljag");});
test("säljagten -> säljag", function() {deepEqual( Stem("säljagten"), "säljag");});
test("säljer -> sälj", function() {deepEqual( Stem("säljer"), "sälj");});
test("säljerskans -> säljerskan", function() {deepEqual( Stem("säljerskans"), "säljerskan");});
test("säll -> säll", function() {deepEqual( Stem("säll"), "säll");});
test("sälla -> säll", function() {deepEqual( Stem("sälla"), "säll");});
test("sällan -> sällan", function() {deepEqual( Stem("sällan"), "sällan");});
test("sällar -> säll", function() {deepEqual( Stem("sällar"), "säll");});
test("sällhet -> säll", function() {deepEqual( Stem("sällhet"), "säll");});
test("sällheten -> säll", function() {deepEqual( Stem("sällheten"), "säll");});
test("sällhets -> sällhet", function() {deepEqual( Stem("sällhets"), "sällhet");});
test("sällhetsdagar -> sällhetsdag", function() {deepEqual( Stem("sällhetsdagar"), "sällhetsdag");});
test("sällsam -> sällsam", function() {deepEqual( Stem("sällsam"), "sällsam");});
test("sällsamma -> sällsamm", function() {deepEqual( Stem("sällsamma"), "sällsamm");});
test("sällsamt -> sällsamt", function() {deepEqual( Stem("sällsamt"), "sällsamt");});
test("sällskap -> sällskap", function() {deepEqual( Stem("sällskap"), "sällskap");});
test("sällskapandet -> sällskap", function() {deepEqual( Stem("sällskapandet"), "sällskap");});
test("sällskapet -> sällskapet", function() {deepEqual( Stem("sällskapet"), "sällskapet");});
test("sällskapets -> sällskapet", function() {deepEqual( Stem("sällskapets"), "sällskapet");});
test("sällskapsbroder -> sällskapsbrod", function() {deepEqual( Stem("sällskapsbroder"), "sällskapsbrod");});
test("sällskapsbröder -> sällskapsbröd", function() {deepEqual( Stem("sällskapsbröder"), "sällskapsbröd");});
test("sällskapsgåfvor -> sällskapsgåfv", function() {deepEqual( Stem("sällskapsgåfvor"), "sällskapsgåfv");});
test("sällskapskrets -> sällskapskret", function() {deepEqual( Stem("sällskapskrets"), "sällskapskret");});
test("sällskapslifvets -> sällskapslifvet", function() {deepEqual( Stem("sällskapslifvets"), "sällskapslifvet");});
test("sällskapslivet -> sällskapslivet", function() {deepEqual( Stem("sällskapslivet"), "sällskapslivet");});
test("sällskapslivets -> sällskapslivet", function() {deepEqual( Stem("sällskapslivets"), "sällskapslivet");});
test("sällskapsmannen -> sällskapsman", function() {deepEqual( Stem("sällskapsmannen"), "sällskapsman");});
test("sällskapsnöje -> sällskapsnöj", function() {deepEqual( Stem("sällskapsnöje"), "sällskapsnöj");});
test("sällskapsnöjet -> sällskapsnöjet", function() {deepEqual( Stem("sällskapsnöjet"), "sällskapsnöjet");});
test("sällsynt -> sällsynt", function() {deepEqual( Stem("sällsynt"), "sällsynt");});
test("sällsynta -> sällsynt", function() {deepEqual( Stem("sällsynta"), "sällsynt");});
test("sällsyntare -> sällsynt", function() {deepEqual( Stem("sällsyntare"), "sällsynt");});
test("sällsyntheter -> sällsynt", function() {deepEqual( Stem("sällsyntheter"), "sällsynt");});
test("sälsand -> sälsand", function() {deepEqual( Stem("sälsand"), "sälsand");});
test("sälskinn -> sälskin", function() {deepEqual( Stem("sälskinn"), "sälskin");});
test("sälskinns -> sälskin", function() {deepEqual( Stem("sälskinns"), "sälskin");});
test("sälskins -> sälskin", function() {deepEqual( Stem("sälskins"), "sälskin");});
test("sälskinsmössa -> sälskinsmöss", function() {deepEqual( Stem("sälskinsmössa"), "sälskinsmöss");});
test("sälskytt -> sälskyt", function() {deepEqual( Stem("sälskytt"), "sälskyt");});
test("sälskyttarne -> sälskyt", function() {deepEqual( Stem("sälskyttarne"), "sälskyt");});
test("sälskyttarnes -> sälskyttarn", function() {deepEqual( Stem("sälskyttarnes"), "sälskyttarn");});
test("sälskytten -> sälskyt", function() {deepEqual( Stem("sälskytten"), "sälskyt");});
test("sälskytteri -> sälskytteri", function() {deepEqual( Stem("sälskytteri"), "sälskytteri");});
test("sälskytteriet -> sälskytteriet", function() {deepEqual( Stem("sälskytteriet"), "sälskytteriet");});
test("sälta -> sält", function() {deepEqual( Stem("sälta"), "sält");});
test("sämre -> sämr", function() {deepEqual( Stem("sämre"), "sämr");});
test("sämsta -> sämst", function() {deepEqual( Stem("sämsta"), "sämst");});
test("sänd -> sänd", function() {deepEqual( Stem("sänd"), "sänd");});
test("sända -> sänd", function() {deepEqual( Stem("sända"), "sänd");});
test("sände -> sänd", function() {deepEqual( Stem("sände"), "sänd");});
test("sändebud -> sändebud", function() {deepEqual( Stem("sändebud"), "sändebud");});
test("sänder -> sänd", function() {deepEqual( Stem("sänder"), "sänd");});
test("sändes -> sänd", function() {deepEqual( Stem("sändes"), "sänd");});
test("säng -> säng", function() {deepEqual( Stem("säng"), "säng");});
test("sängar -> säng", function() {deepEqual( Stem("sängar"), "säng");});
test("sängarna -> säng", function() {deepEqual( Stem("sängarna"), "säng");});
test("sängarne -> säng", function() {deepEqual( Stem("sängarne"), "säng");});
test("sängbottnar -> sängbottn", function() {deepEqual( Stem("sängbottnar"), "sängbottn");});
test("sängen -> säng", function() {deepEqual( Stem("sängen"), "säng");});
test("sängens -> säng", function() {deepEqual( Stem("sängens"), "säng");});
test("sänggaflarne -> sänggafl", function() {deepEqual( Stem("sänggaflarne"), "sänggafl");});
test("sänghalm -> sänghalm", function() {deepEqual( Stem("sänghalm"), "sänghalm");});
test("sänghimlen -> sänghiml", function() {deepEqual( Stem("sänghimlen"), "sänghiml");});
test("sänghirnlen -> sänghirnl", function() {deepEqual( Stem("sänghirnlen"), "sänghirnl");});
test("sängkammardörren -> sängkammardörr", function() {deepEqual( Stem("sängkammardörren"), "sängkammardörr");});
test("sängkammare -> sängkamm", function() {deepEqual( Stem("sängkammare"), "sängkamm");});
test("sängkammaren -> sängkamm", function() {deepEqual( Stem("sängkammaren"), "sängkamm");});
test("sängkammarlif -> sängkammarlif", function() {deepEqual( Stem("sängkammarlif"), "sängkammarlif");});
test("sängkant -> sängkant", function() {deepEqual( Stem("sängkant"), "sängkant");});
test("sängkanten -> sängkant", function() {deepEqual( Stem("sängkanten"), "sängkant");});
test("sängkläder -> sängkläd", function() {deepEqual( Stem("sängkläder"), "sängkläd");});
test("sängkläderna -> sängkläd", function() {deepEqual( Stem("sängkläderna"), "sängkläd");});
test("sängknapp -> sängknapp", function() {deepEqual( Stem("sängknapp"), "sängknapp");});
test("sängknapparne -> sängknapp", function() {deepEqual( Stem("sängknapparne"), "sängknapp");});
test("sängknappen -> sängknapp", function() {deepEqual( Stem("sängknappen"), "sängknapp");});
test("sängliggande -> sängligg", function() {deepEqual( Stem("sängliggande"), "sängligg");});
test("sängomhänget -> sängomhänget", function() {deepEqual( Stem("sängomhänget"), "sängomhänget");});
test("sängs -> säng", function() {deepEqual( Stem("sängs"), "säng");});
test("sängstolpar -> sängstolp", function() {deepEqual( Stem("sängstolpar"), "sängstolp");});
test("sängtäcket -> sängtäcket", function() {deepEqual( Stem("sängtäcket"), "sängtäcket");});
test("sänka -> sänk", function() {deepEqual( Stem("sänka"), "sänk");});
test("sänker -> sänk", function() {deepEqual( Stem("sänker"), "sänk");});
test("sänkes -> sänk", function() {deepEqual( Stem("sänkes"), "sänk");});
test("sänkt -> sänk", function() {deepEqual( Stem("sänkt"), "sänk");});
test("sänkta -> sänk", function() {deepEqual( Stem("sänkta"), "sänk");});
test("sänktc -> sänktc", function() {deepEqual( Stem("sänktc"), "sänktc");});
test("sänkte -> sänk", function() {deepEqual( Stem("sänkte"), "sänk");});
test("sänktes -> sänk", function() {deepEqual( Stem("sänktes"), "sänk");});
test("sänt -> sänt", function() {deepEqual( Stem("sänt"), "sänt");});
test("särdeles -> särdel", function() {deepEqual( Stem("särdeles"), "särdel");});
test("säregen -> säreg", function() {deepEqual( Stem("säregen"), "säreg");});
test("särskihl -> särskihl", function() {deepEqual( Stem("särskihl"), "särskihl");});
test("särskil -> särskil", function() {deepEqual( Stem("särskil"), "särskil");});
test("särskild -> särskild", function() {deepEqual( Stem("särskild"), "särskild");});
test("särskilda -> särskild", function() {deepEqual( Stem("särskilda"), "särskild");});
test("särskildt -> särskild", function() {deepEqual( Stem("särskildt"), "särskild");});
test("särskilja -> särskilj", function() {deepEqual( Stem("särskilja"), "särskilj");});
test("särskilt -> särskilt", function() {deepEqual( Stem("särskilt"), "särskilt");});
test("särskilta -> särskilt", function() {deepEqual( Stem("särskilta"), "särskilt");});
test("sätherberg -> sätherberg", function() {deepEqual( Stem("sätherberg"), "sätherberg");});
test("sätt -> sätt", function() {deepEqual( Stem("sätt"), "sätt");});
test("sätta -> sätt", function() {deepEqual( Stem("sätta"), "sätt");});
test("sättande -> sätt", function() {deepEqual( Stem("sättande"), "sätt");});
test("sättas -> sätt", function() {deepEqual( Stem("sättas"), "sätt");});
test("sätte -> sätt", function() {deepEqual( Stem("sätte"), "sätt");});
test("sätter -> sätt", function() {deepEqual( Stem("sätter"), "sätt");});
test("sättet -> sättet", function() {deepEqual( Stem("sättet"), "sättet");});
test("sävliga -> säv", function() {deepEqual( Stem("sävliga"), "säv");});
test("sävligheten -> säv", function() {deepEqual( Stem("sävligheten"), "säv");});
test("så -> så", function() {deepEqual( Stem("så"), "så");});
test("sådan -> sådan", function() {deepEqual( Stem("sådan"), "sådan");});
test("sådana -> sådan", function() {deepEqual( Stem("sådana"), "sådan");});
test("sådant -> sådant", function() {deepEqual( Stem("sådant"), "sådant");});
test("sådarnt -> sådarnt", function() {deepEqual( Stem("sådarnt"), "sådarnt");});
test("sådd -> sådd", function() {deepEqual( Stem("sådd"), "sådd");});
test("sådde -> sådd", function() {deepEqual( Stem("sådde"), "sådd");});
test("såg -> såg", function() {deepEqual( Stem("såg"), "såg");});
test("sågar -> såg", function() {deepEqual( Stem("sågar"), "såg");});
test("såge -> såg", function() {deepEqual( Stem("såge"), "såg");});
test("sågo -> sågo", function() {deepEqual( Stem("sågo"), "sågo");});
test("sågos -> sågo", function() {deepEqual( Stem("sågos"), "sågo");});
test("sågs -> såg", function() {deepEqual( Stem("sågs"), "såg");});
test("sågspån -> sågspån", function() {deepEqual( Stem("sågspån"), "sågspån");});
test("såld -> såld", function() {deepEqual( Stem("såld"), "såld");});
test("sålde -> såld", function() {deepEqual( Stem("sålde"), "såld");});
test("således -> såled", function() {deepEqual( Stem("således"), "såled");});
test("sålt -> sålt", function() {deepEqual( Stem("sålt"), "sålt");});
test("sålts -> sålt", function() {deepEqual( Stem("sålts"), "sålt");});
test("sålunda -> sålund", function() {deepEqual( Stem("sålunda"), "sålund");});
test("sålurlda -> sålurld", function() {deepEqual( Stem("sålurlda"), "sålurld");});
test("sång -> sång", function() {deepEqual( Stem("sång"), "sång");});
test("sångare -> sång", function() {deepEqual( Stem("sångare"), "sång");});
test("sångaren -> sång", function() {deepEqual( Stem("sångaren"), "sång");});
test("sångarkor -> sångark", function() {deepEqual( Stem("sångarkor"), "sångark");});
test("sångarkrans -> sångarkran", function() {deepEqual( Stem("sångarkrans"), "sångarkran");});
test("sångbok -> sångbok", function() {deepEqual( Stem("sångbok"), "sångbok");});
test("sångböcker -> sångböck", function() {deepEqual( Stem("sångböcker"), "sångböck");});
test("sången -> sång", function() {deepEqual( Stem("sången"), "sång");});
test("sångens -> sång", function() {deepEqual( Stem("sångens"), "sång");});
test("sånger -> sång", function() {deepEqual( Stem("sånger"), "sång");});
test("sångerna -> sång", function() {deepEqual( Stem("sångerna"), "sång");});
test("sångerska -> sångersk", function() {deepEqual( Stem("sångerska"), "sångersk");});
test("sångfar -> sångf", function() {deepEqual( Stem("sångfar"), "sångf");});
test("sångfågel -> sångfågel", function() {deepEqual( Stem("sångfågel"), "sångfågel");});
test("sångfågeln -> sångfågeln", function() {deepEqual( Stem("sångfågeln"), "sångfågeln");});
test("sångfåglarna -> sångfågl", function() {deepEqual( Stem("sångfåglarna"), "sångfågl");});
test("sångmö -> sångmö", function() {deepEqual( Stem("sångmö"), "sångmö");});
test("såpbubbla -> såpbubbl", function() {deepEqual( Stem("såpbubbla"), "såpbubbl");});
test("såpbubblekarlarna -> såpbubblekarl", function() {deepEqual( Stem("såpbubblekarlarna"), "såpbubblekarl");});
test("sår -> sår", function() {deepEqual( Stem("sår"), "sår");});
test("såra -> sår", function() {deepEqual( Stem("såra"), "sår");});
test("sårad -> sår", function() {deepEqual( Stem("sårad"), "sår");});
test("sårade -> sår", function() {deepEqual( Stem("sårade"), "sår");});
test("sårar -> sår", function() {deepEqual( Stem("sårar"), "sår");});
test("sårat -> sår", function() {deepEqual( Stem("sårat"), "sår");});
test("sårbar -> sårb", function() {deepEqual( Stem("sårbar"), "sårb");});
test("såren -> sår", function() {deepEqual( Stem("såren"), "sår");});
test("såret -> såret", function() {deepEqual( Stem("såret"), "såret");});
test("sårtid -> sårtid", function() {deepEqual( Stem("sårtid"), "sårtid");});
test("såser -> sås", function() {deepEqual( Stem("såser"), "sås");});
test("såsom -> såsom", function() {deepEqual( Stem("såsom"), "såsom");});
test("såta -> såt", function() {deepEqual( Stem("såta"), "såt");});
test("sått -> sått", function() {deepEqual( Stem("sått"), "sått");});
test("såvida -> såvid", function() {deepEqual( Stem("såvida"), "såvid");});
test("såvitt -> såvit", function() {deepEqual( Stem("såvitt"), "såvit");});
test("såväl -> såväl", function() {deepEqual( Stem("såväl"), "såväl");});
test("söckendagar -> söckendag", function() {deepEqual( Stem("söckendagar"), "söckendag");});
test("söder -> söd", function() {deepEqual( Stem("söder"), "söd");});
test("söderberg -> söderberg", function() {deepEqual( Stem("söderberg"), "söderberg");});
test("södern -> söd", function() {deepEqual( Stem("södern"), "söd");});
test("söderut -> söderut", function() {deepEqual( Stem("söderut"), "söderut");});
test("södra -> södr", function() {deepEqual( Stem("södra"), "södr");});
test("sög -> sög", function() {deepEqual( Stem("sög"), "sög");});
test("sögo -> sögo", function() {deepEqual( Stem("sögo"), "sögo");});
test("sök -> sök", function() {deepEqual( Stem("sök"), "sök");});
test("söka -> sök", function() {deepEqual( Stem("söka"), "sök");});
test("sökande -> sök", function() {deepEqual( Stem("sökande"), "sök");});
test("sökandet -> sök", function() {deepEqual( Stem("sökandet"), "sök");});
test("sökas -> sök", function() {deepEqual( Stem("sökas"), "sök");});
test("söken -> sök", function() {deepEqual( Stem("söken"), "sök");});
test("söker -> sök", function() {deepEqual( Stem("söker"), "sök");});
test("sökt -> sökt", function() {deepEqual( Stem("sökt"), "sökt");});
test("sökta -> sökt", function() {deepEqual( Stem("sökta"), "sökt");});
test("sökte -> sökt", function() {deepEqual( Stem("sökte"), "sökt");});
test("söla -> söl", function() {deepEqual( Stem("söla"), "söl");});
test("söm -> söm", function() {deepEqual( Stem("söm"), "söm");});
test("sömlinghågna -> sömlinghågn", function() {deepEqual( Stem("sömlinghågna"), "sömlinghågn");});
test("sömmarna -> sömm", function() {deepEqual( Stem("sömmarna"), "sömm");});
test("sömmen -> sömm", function() {deepEqual( Stem("sömmen"), "sömm");});
test("sömmerska -> sömmersk", function() {deepEqual( Stem("sömmerska"), "sömmersk");});
test("sömn -> sömn", function() {deepEqual( Stem("sömn"), "sömn");});
test("sömnad -> sömn", function() {deepEqual( Stem("sömnad"), "sömn");});
test("sömndrucken -> sömndruck", function() {deepEqual( Stem("sömndrucken"), "sömndruck");});
test("sömnen -> sömn", function() {deepEqual( Stem("sömnen"), "sömn");});
test("sömnens -> sömn", function() {deepEqual( Stem("sömnens"), "sömn");});
test("sömngivande -> sömngiv", function() {deepEqual( Stem("sömngivande"), "sömngiv");});
test("sömngångerska -> sömngångersk", function() {deepEqual( Stem("sömngångerska"), "sömngångersk");});
test("sömngångerskas -> sömngångersk", function() {deepEqual( Stem("sömngångerskas"), "sömngångersk");});
test("sömnig -> sömn", function() {deepEqual( Stem("sömnig"), "sömn");});
test("sömnigt -> sömn", function() {deepEqual( Stem("sömnigt"), "sömn");});
test("sömnlös -> sömnlös", function() {deepEqual( Stem("sömnlös"), "sömnlös");});
test("sömnlösa -> sömnlös", function() {deepEqual( Stem("sömnlösa"), "sömnlös");});
test("sömnlöses -> sömnlös", function() {deepEqual( Stem("sömnlöses"), "sömnlös");});
test("sön -> sön", function() {deepEqual( Stem("sön"), "sön");});
test("sönda -> sönd", function() {deepEqual( Stem("sönda"), "sönd");});
test("söndag -> söndag", function() {deepEqual( Stem("söndag"), "söndag");});
test("söndagar -> söndag", function() {deepEqual( Stem("söndagar"), "söndag");});
test("söndagarna -> söndag", function() {deepEqual( Stem("söndagarna"), "söndag");});
test("söndagen -> söndag", function() {deepEqual( Stem("söndagen"), "söndag");});
test("söndagens -> söndag", function() {deepEqual( Stem("söndagens"), "söndag");});
test("söndags -> söndag", function() {deepEqual( Stem("söndags"), "söndag");});
test("söndagsförmiddag -> söndagsförmiddag", function() {deepEqual( Stem("söndagsförmiddag"), "söndagsförmiddag");});
test("söndagsförmiddagen -> söndagsförmiddag", function() {deepEqual( Stem("söndagsförmiddagen"), "söndagsförmiddag");});
test("söndagskväll -> söndagskväll", function() {deepEqual( Stem("söndagskväll"), "söndagskväll");});
test("söndagsmiddagen -> söndagsmiddag", function() {deepEqual( Stem("söndagsmiddagen"), "söndagsmiddag");});
test("söndagsmorgon -> söndagsmorgon", function() {deepEqual( Stem("söndagsmorgon"), "söndagsmorgon");});
test("söndagsmorgonen -> söndagsmorgon", function() {deepEqual( Stem("söndagsmorgonen"), "söndagsmorgon");});
test("söndagsmorgonens -> söndagsmorgon", function() {deepEqual( Stem("söndagsmorgonens"), "söndagsmorgon");});
test("söndagspredikningar -> söndagspredikning", function() {deepEqual( Stem("söndagspredikningar"), "söndagspredikning");});
test("sönder -> sönd", function() {deepEqual( Stem("sönder"), "sönd");});
test("sönderbrutna -> sönderbrutn", function() {deepEqual( Stem("sönderbrutna"), "sönderbrutn");});
test("sönderbråka -> sönderbråk", function() {deepEqual( Stem("sönderbråka"), "sönderbråk");});
test("sönderbrötos -> sönderbröto", function() {deepEqual( Stem("sönderbrötos"), "sönderbröto");});
test("sönderklämde -> sönderklämd", function() {deepEqual( Stem("sönderklämde"), "sönderklämd");});
test("sönderplockad -> sönderplock", function() {deepEqual( Stem("sönderplockad"), "sönderplock");});
test("sönderrivna -> sönderrivn", function() {deepEqual( Stem("sönderrivna"), "sönderrivn");});
test("sönderskuren -> sönderskur", function() {deepEqual( Stem("sönderskuren"), "sönderskur");});
test("sönderslagen -> sönderslag", function() {deepEqual( Stem("sönderslagen"), "sönderslag");});
test("sönderslaget -> sönderslaget", function() {deepEqual( Stem("sönderslaget"), "sönderslaget");});
test("söndersleto -> söndersleto", function() {deepEqual( Stem("söndersleto"), "söndersleto");});
test("sönderslitande -> sönderslit", function() {deepEqual( Stem("sönderslitande"), "sönderslit");});
test("sönderslites -> sönderslit", function() {deepEqual( Stem("sönderslites"), "sönderslit");});
test("söndertryckte -> söndertryck", function() {deepEqual( Stem("söndertryckte"), "söndertryck");});
test("söndriga -> söndr", function() {deepEqual( Stem("söndriga"), "söndr");});
test("söner -> sön", function() {deepEqual( Stem("söner"), "sön");});
test("söp -> söp", function() {deepEqual( Stem("söp"), "söp");});
test("sörj -> sörj", function() {deepEqual( Stem("sörj"), "sörj");});
test("sörja -> sörj", function() {deepEqual( Stem("sörja"), "sörj");});
test("sörjande -> sörj", function() {deepEqual( Stem("sörjande"), "sörj");});
test("sörjd -> sörjd", function() {deepEqual( Stem("sörjd"), "sörjd");});
test("sörjde -> sörjd", function() {deepEqual( Stem("sörjde"), "sörjd");});
test("sörjekläder -> sörjekläd", function() {deepEqual( Stem("sörjekläder"), "sörjekläd");});
test("sörjen -> sörj", function() {deepEqual( Stem("sörjen"), "sörj");});
test("sörjer -> sörj", function() {deepEqual( Stem("sörjer"), "sörj");});
test("sörjt -> sörjt", function() {deepEqual( Stem("sörjt"), "sörjt");});
test("sörmland -> sörmland", function() {deepEqual( Stem("sörmland"), "sörmland");});
test("sörmlandsgodset -> sörmlandsgodset", function() {deepEqual( Stem("sörmlandsgodset"), "sörmlandsgodset");});
test("sörplar -> sörpl", function() {deepEqual( Stem("sörplar"), "sörpl");});
test("söt -> söt", function() {deepEqual( Stem("söt"), "söt");});
test("söta -> söt", function() {deepEqual( Stem("söta"), "söt");});
test("sötaktig -> sötakt", function() {deepEqual( Stem("sötaktig"), "sötakt");});
test("sötaste -> söt", function() {deepEqual( Stem("sötaste"), "söt");});
test("söte -> söt", function() {deepEqual( Stem("söte"), "söt");});
test("sötma -> sötm", function() {deepEqual( Stem("sötma"), "sötm");});
test("sötnos -> sötno", function() {deepEqual( Stem("sötnos"), "sötno");});
test("sötsaker -> sötsak", function() {deepEqual( Stem("sötsaker"), "sötsak");});
test("sötsurt -> sötsurt", function() {deepEqual( Stem("sötsurt"), "sötsurt");});
test("sött -> sött", function() {deepEqual( Stem("sött"), "sött");});
test("sövde -> sövd", function() {deepEqual( Stem("sövde"), "sövd");});
test("sövdes -> sövd", function() {deepEqual( Stem("sövdes"), "sövd");});
test("t -> t", function() {deepEqual( Stem("t"), "t");});
test("ta -> ta", function() {deepEqual( Stem("ta"), "ta");});
test("tableau -> tableau", function() {deepEqual( Stem("tableau"), "tableau");});
test("tablå -> tablå", function() {deepEqual( Stem("tablå"), "tablå");});
test("tablån -> tablån", function() {deepEqual( Stem("tablån"), "tablån");});
test("taburett -> taburet", function() {deepEqual( Stem("taburett"), "taburet");});
test("tack -> tack", function() {deepEqual( Stem("tack"), "tack");});
test("tacka -> tack", function() {deepEqual( Stem("tacka"), "tack");});
test("tackad -> tack", function() {deepEqual( Stem("tackad"), "tack");});
test("tackade -> tack", function() {deepEqual( Stem("tackade"), "tack");});
test("tackar -> tack", function() {deepEqual( Stem("tackar"), "tack");});
test("tackars -> tackar", function() {deepEqual( Stem("tackars"), "tackar");});
test("tackat -> tack", function() {deepEqual( Stem("tackat"), "tack");});
test("tackel -> tackel", function() {deepEqual( Stem("tackel"), "tackel");});
test("tackladt -> tacklad", function() {deepEqual( Stem("tackladt"), "tacklad");});
test("tacklaget -> tacklaget", function() {deepEqual( Stem("tacklaget"), "tacklaget");});
test("tackling -> tackling", function() {deepEqual( Stem("tackling"), "tackling");});
test("tacklös -> tacklös", function() {deepEqual( Stem("tacklös"), "tacklös");});
test("tacksam -> tacksam", function() {deepEqual( Stem("tacksam"), "tacksam");});
test("tacksamhen -> tacksamh", function() {deepEqual( Stem("tacksamhen"), "tacksamh");});
test("tacksamhet -> tacksam", function() {deepEqual( Stem("tacksamhet"), "tacksam");});
test("tacksamheten -> tacksam", function() {deepEqual( Stem("tacksamheten"), "tacksam");});
test("tacksamhetsförbindelse -> tacksamhetsförbind", function() {deepEqual( Stem("tacksamhetsförbindelse"), "tacksamhetsförbind");});
test("tacksamma -> tacksamm", function() {deepEqual( Stem("tacksamma"), "tacksamm");});
test("tacksammaste -> tacksamm", function() {deepEqual( Stem("tacksammaste"), "tacksamm");});
test("tacksamme -> tacksamm", function() {deepEqual( Stem("tacksamme"), "tacksamm");});
test("tacksamt -> tacksamt", function() {deepEqual( Stem("tacksamt"), "tacksamt");});
test("tacksägelse -> tacksäg", function() {deepEqual( Stem("tacksägelse"), "tacksäg");});
test("tacksägelser -> tacksäg", function() {deepEqual( Stem("tacksägelser"), "tacksäg");});
test("tad -> tad", function() {deepEqual( Stem("tad"), "tad");});
test("tade -> tad", function() {deepEqual( Stem("tade"), "tad");});
test("tadel -> tadel", function() {deepEqual( Stem("tadel"), "tadel");});
test("tadelfritt -> tadelfrit", function() {deepEqual( Stem("tadelfritt"), "tadelfrit");});
test("tadlade -> tadl", function() {deepEqual( Stem("tadlade"), "tadl");});
test("tadlar -> tadl", function() {deepEqual( Stem("tadlar"), "tadl");});
test("tafatt -> tafat", function() {deepEqual( Stem("tafatt"), "tafat");});
test("tafatta -> tafat", function() {deepEqual( Stem("tafatta"), "tafat");});
test("tafatte -> tafat", function() {deepEqual( Stem("tafatte"), "tafat");});
test("tafattheten -> tafat", function() {deepEqual( Stem("tafattheten"), "tafat");});
test("tafla -> tafl", function() {deepEqual( Stem("tafla"), "tafl");});
test("taflan -> taflan", function() {deepEqual( Stem("taflan"), "taflan");});
test("taflor -> tafl", function() {deepEqual( Stem("taflor"), "tafl");});
test("tafvelsamlingen -> tafvelsamling", function() {deepEqual( Stem("tafvelsamlingen"), "tafvelsamling");});
test("tag -> tag", function() {deepEqual( Stem("tag"), "tag");});
test("taga -> tag", function() {deepEqual( Stem("taga"), "tag");});
test("tagas -> tag", function() {deepEqual( Stem("tagas"), "tag");});
test("tage -> tag", function() {deepEqual( Stem("tage"), "tag");});
test("tagel -> tagel", function() {deepEqual( Stem("tagel"), "tagel");});
test("tageldynor -> tageldyn", function() {deepEqual( Stem("tageldynor"), "tageldyn");});
test("tagen -> tag", function() {deepEqual( Stem("tagen"), "tag");});
test("tager -> tag", function() {deepEqual( Stem("tager"), "tag");});
test("tages -> tag", function() {deepEqual( Stem("tages"), "tag");});
test("taget -> taget", function() {deepEqual( Stem("taget"), "taget");});
test("tagg -> tagg", function() {deepEqual( Stem("tagg"), "tagg");});
test("taggar -> tagg", function() {deepEqual( Stem("taggar"), "tagg");});
test("tagit -> tagit", function() {deepEqual( Stem("tagit"), "tagit");});
test("tagits -> tagit", function() {deepEqual( Stem("tagits"), "tagit");});
test("taglet -> taglet", function() {deepEqual( Stem("taglet"), "taglet");});
test("tagna -> tagn", function() {deepEqual( Stem("tagna"), "tagn");});
test("tags -> tag", function() {deepEqual( Stem("tags"), "tag");});
test("tak -> tak", function() {deepEqual( Stem("tak"), "tak");});
test("takdroppet -> takdroppet", function() {deepEqual( Stem("takdroppet"), "takdroppet");});
test("taken -> tak", function() {deepEqual( Stem("taken"), "tak");});
test("taket -> taket", function() {deepEqual( Stem("taket"), "taket");});
test("takets -> taket", function() {deepEqual( Stem("takets"), "taket");});
test("takfönstret -> takfönstret", function() {deepEqual( Stem("takfönstret"), "takfönstret");});
test("taklampan -> taklampan", function() {deepEqual( Stem("taklampan"), "taklampan");});
test("takränna -> takrän", function() {deepEqual( Stem("takränna"), "takrän");});
test("takrännan -> takrännan", function() {deepEqual( Stem("takrännan"), "takrännan");});
test("takrännoma -> takrännom", function() {deepEqual( Stem("takrännoma"), "takrännom");});
test("takstolar -> takstol", function() {deepEqual( Stem("takstolar"), "takstol");});
test("takt -> takt", function() {deepEqual( Stem("takt"), "takt");});
test("takten -> takt", function() {deepEqual( Stem("takten"), "takt");});
test("taktpinnen -> taktpin", function() {deepEqual( Stem("taktpinnen"), "taktpin");});
test("takåsen -> takås", function() {deepEqual( Stem("takåsen"), "takås");});
test("tal -> tal", function() {deepEqual( Stem("tal"), "tal");});
test("tala -> tal", function() {deepEqual( Stem("tala"), "tal");});
test("talade -> tal", function() {deepEqual( Stem("talade"), "tal");});
test("talades -> tal", function() {deepEqual( Stem("talades"), "tal");});
test("taladt -> talad", function() {deepEqual( Stem("taladt"), "talad");});
test("talande -> tal", function() {deepEqual( Stem("talande"), "tal");});
test("talang -> talang", function() {deepEqual( Stem("talang"), "talang");});
test("talanger -> talang", function() {deepEqual( Stem("talanger"), "talang");});
test("talar -> tal", function() {deepEqual( Stem("talar"), "tal");});
test("talare -> tal", function() {deepEqual( Stem("talare"), "tal");});
test("talas -> tal", function() {deepEqual( Stem("talas"), "tal");});
test("talat -> tal", function() {deepEqual( Stem("talat"), "tal");});
test("talen -> tal", function() {deepEqual( Stem("talen"), "tal");});
test("talesätt -> talesät", function() {deepEqual( Stem("talesätt"), "talesät");});
test("talet -> talet", function() {deepEqual( Stem("talet"), "talet");});
test("talets -> talet", function() {deepEqual( Stem("talets"), "talet");});
test("talg -> talg", function() {deepEqual( Stem("talg"), "talg");});
test("talgiga -> talg", function() {deepEqual( Stem("talgiga"), "talg");});
test("taligt -> tal", function() {deepEqual( Stem("taligt"), "tal");});
test("talis -> talis", function() {deepEqual( Stem("talis"), "talis");});
test("talisman -> talisman", function() {deepEqual( Stem("talisman"), "talisman");});
test("talismanen -> talisman", function() {deepEqual( Stem("talismanen"), "talisman");});
test("tallar -> tall", function() {deepEqual( Stem("tallar"), "tall");});
test("tallarna -> tall", function() {deepEqual( Stem("tallarna"), "tall");});
test("tallen -> tall", function() {deepEqual( Stem("tallen"), "tall");});
test("tallrik -> tallrik", function() {deepEqual( Stem("tallrik"), "tallrik");});
test("tallrikar -> tallrik", function() {deepEqual( Stem("tallrikar"), "tallrik");});
test("tallriken -> tallrik", function() {deepEqual( Stem("tallriken"), "tallrik");});
test("tallskog -> tallskog", function() {deepEqual( Stem("tallskog"), "tallskog");});
test("talmikärlek -> talmikärlek", function() {deepEqual( Stem("talmikärlek"), "talmikärlek");});
test("talorgan -> talorgan", function() {deepEqual( Stem("talorgan"), "talorgan");});
test("talrika -> talrik", function() {deepEqual( Stem("talrika"), "talrik");});
test("talriken -> talrik", function() {deepEqual( Stem("talriken"), "talrik");});
test("talrikhet -> talrik", function() {deepEqual( Stem("talrikhet"), "talrik");});
test("talt -> talt", function() {deepEqual( Stem("talt"), "talt");});
test("talte -> talt", function() {deepEqual( Stem("talte"), "talt");});
test("taltes -> talt", function() {deepEqual( Stem("taltes"), "talt");});
test("tam -> tam", function() {deepEqual( Stem("tam"), "tam");});
test("tamburdörren -> tamburdörr", function() {deepEqual( Stem("tamburdörren"), "tamburdörr");});
test("tamburen -> tambur", function() {deepEqual( Stem("tamburen"), "tambur");});
test("tamburens -> tambur", function() {deepEqual( Stem("tamburens"), "tambur");});
test("tan -> tan", function() {deepEqual( Stem("tan"), "tan");});
test("tand -> tand", function() {deepEqual( Stem("tand"), "tand");});
test("tande -> tand", function() {deepEqual( Stem("tande"), "tand");});
test("tandlösa -> tandlös", function() {deepEqual( Stem("tandlösa"), "tandlös");});
test("tandvärk -> tandvärk", function() {deepEqual( Stem("tandvärk"), "tandvärk");});
test("tangenterna -> tangent", function() {deepEqual( Stem("tangenterna"), "tangent");});
test("tanka -> tank", function() {deepEqual( Stem("tanka"), "tank");});
test("tankar -> tank", function() {deepEqual( Stem("tankar"), "tank");});
test("tankarna -> tank", function() {deepEqual( Stem("tankarna"), "tank");});
test("tankarne -> tank", function() {deepEqual( Stem("tankarne"), "tank");});
test("tanke -> tank", function() {deepEqual( Stem("tanke"), "tank");});
test("tankeföljd -> tankeföljd", function() {deepEqual( Stem("tankeföljd"), "tankeföljd");});
test("tankegång -> tankegång", function() {deepEqual( Stem("tankegång"), "tankegång");});
test("tankekrets -> tankekret", function() {deepEqual( Stem("tankekrets"), "tankekret");});
test("tanken -> tank", function() {deepEqual( Stem("tanken"), "tank");});
test("tankeruset -> tankeruset", function() {deepEqual( Stem("tankeruset"), "tankeruset");});
test("tankeverksamhet -> tankeverksam", function() {deepEqual( Stem("tankeverksamhet"), "tankeverksam");});
test("tankfull -> tankfull", function() {deepEqual( Stem("tankfull"), "tankfull");});
test("tankfulla -> tankfull", function() {deepEqual( Stem("tankfulla"), "tankfull");});
test("tankfullt -> tankfull", function() {deepEqual( Stem("tankfullt"), "tankfull");});
test("tanklösa -> tanklös", function() {deepEqual( Stem("tanklösa"), "tanklös");});
test("tanklöshet -> tanklös", function() {deepEqual( Stem("tanklöshet"), "tanklös");});
test("tanklöst -> tanklös", function() {deepEqual( Stem("tanklöst"), "tanklös");});
test("tankspridd -> tanksprid", function() {deepEqual( Stem("tankspridd"), "tanksprid");});
test("tankspridt -> tanksprid", function() {deepEqual( Stem("tankspridt"), "tanksprid");});
test("tankspritt -> tanksprit", function() {deepEqual( Stem("tankspritt"), "tanksprit");});
test("tankte -> tank", function() {deepEqual( Stem("tankte"), "tank");});
test("tant -> tant", function() {deepEqual( Stem("tant"), "tant");});
test("tants -> tant", function() {deepEqual( Stem("tants"), "tant");});
test("tapeten -> tapet", function() {deepEqual( Stem("tapeten"), "tapet");});
test("tapeter -> tapet", function() {deepEqual( Stem("tapeter"), "tapet");});
test("tapetstycken -> tapetstyck", function() {deepEqual( Stem("tapetstycken"), "tapetstyck");});
test("tappa -> tapp", function() {deepEqual( Stem("tappa"), "tapp");});
test("tappade -> tapp", function() {deepEqual( Stem("tappade"), "tapp");});
test("tappadt -> tappad", function() {deepEqual( Stem("tappadt"), "tappad");});
test("tappar -> tapp", function() {deepEqual( Stem("tappar"), "tapp");});
test("tappat -> tapp", function() {deepEqual( Stem("tappat"), "tapp");});
test("tapper -> tapp", function() {deepEqual( Stem("tapper"), "tapp");});
test("tappert -> tappert", function() {deepEqual( Stem("tappert"), "tappert");});
test("tappra -> tappr", function() {deepEqual( Stem("tappra"), "tappr");});
test("tapprare -> tappr", function() {deepEqual( Stem("tapprare"), "tappr");});
test("tar -> tar", function() {deepEqual( Stem("tar"), "tar");});
test("tarar -> tar", function() {deepEqual( Stem("tarar"), "tar");});
test("tarfliga -> tarf", function() {deepEqual( Stem("tarfliga"), "tarf");});
test("tarflighet -> tarf", function() {deepEqual( Stem("tarflighet"), "tarf");});
test("tarfyllda -> tarfylld", function() {deepEqual( Stem("tarfyllda"), "tarfylld");});
test("tarkar -> tark", function() {deepEqual( Stem("tarkar"), "tark");});
test("tarm -> tarm", function() {deepEqual( Stem("tarm"), "tarm");});
test("tarvar -> tarv", function() {deepEqual( Stem("tarvar"), "tarv");});
test("tarvlig -> tarv", function() {deepEqual( Stem("tarvlig"), "tarv");});
test("tarvliga -> tarv", function() {deepEqual( Stem("tarvliga"), "tarv");});
test("tarvligare -> tarv", function() {deepEqual( Stem("tarvligare"), "tarv");});
test("tarvligaste -> tarv", function() {deepEqual( Stem("tarvligaste"), "tarv");});
test("tarvligt -> tarv", function() {deepEqual( Stem("tarvligt"), "tarv");});
test("tas -> tas", function() {deepEqual( Stem("tas"), "tas");});
test("tass -> tass", function() {deepEqual( Stem("tass"), "tass");});
test("tassa -> tass", function() {deepEqual( Stem("tassa"), "tass");});
test("tassade -> tass", function() {deepEqual( Stem("tassade"), "tass");});
test("tassande -> tass", function() {deepEqual( Stem("tassande"), "tass");});
test("tassandet -> tass", function() {deepEqual( Stem("tassandet"), "tass");});
test("tassar -> tass", function() {deepEqual( Stem("tassar"), "tass");});
test("tassarna -> tass", function() {deepEqual( Stem("tassarna"), "tass");});
test("tassla -> tassl", function() {deepEqual( Stem("tassla"), "tassl");});
test("tatt -> tatt", function() {deepEqual( Stem("tatt"), "tatt");});
test("taverna -> tav", function() {deepEqual( Stem("taverna"), "tav");});
test("tavernens -> tavern", function() {deepEqual( Stem("tavernens"), "tavern");});
test("tavla -> tavl", function() {deepEqual( Stem("tavla"), "tavl");});
test("tavlan -> tavlan", function() {deepEqual( Stem("tavlan"), "tavlan");});
test("tavlor -> tavl", function() {deepEqual( Stem("tavlor"), "tavl");});
test("tavlorna -> tavl", function() {deepEqual( Stem("tavlorna"), "tavl");});
test("taxameter -> taxamet", function() {deepEqual( Stem("taxameter"), "taxamet");});
test("taxerades -> taxer", function() {deepEqual( Stem("taxerades"), "taxer");});
test("te -> te", function() {deepEqual( Stem("te"), "te");});
test("teater -> teat", function() {deepEqual( Stem("teater"), "teat");});
test("teaterbiljetter -> teaterbiljet", function() {deepEqual( Stem("teaterbiljetter"), "teaterbiljet");});
test("teaterkvällen -> teaterkväll", function() {deepEqual( Stem("teaterkvällen"), "teaterkväll");});
test("teatern -> teat", function() {deepEqual( Stem("teatern"), "teat");});
test("teaterns -> teat", function() {deepEqual( Stem("teaterns"), "teat");});
test("teaterpjes -> teaterpj", function() {deepEqual( Stem("teaterpjes"), "teaterpj");});
test("teaterpjäs -> teaterpjäs", function() {deepEqual( Stem("teaterpjäs"), "teaterpjäs");});
test("teaterpjäser -> teaterpjäs", function() {deepEqual( Stem("teaterpjäser"), "teaterpjäs");});
test("teatersalong -> teatersalong", function() {deepEqual( Stem("teatersalong"), "teatersalong");});
test("teatersalongen -> teatersalong", function() {deepEqual( Stem("teatersalongen"), "teatersalong");});
test("teaterscenerna -> teaterscen", function() {deepEqual( Stem("teaterscenerna"), "teaterscen");});
test("teaterstycke -> teaterstyck", function() {deepEqual( Stem("teaterstycke"), "teaterstyck");});
test("teaterväsende -> teaterväsend", function() {deepEqual( Stem("teaterväsende"), "teaterväsend");});
test("teatrarnas -> teatr", function() {deepEqual( Stem("teatrarnas"), "teatr");});
test("tebordet -> tebordet", function() {deepEqual( Stem("tebordet"), "tebordet");});
test("tecken -> teck", function() {deepEqual( Stem("tecken"), "teck");});
test("teckna -> teckn", function() {deepEqual( Stem("teckna"), "teckn");});
test("tecknad -> teckn", function() {deepEqual( Stem("tecknad"), "teckn");});
test("tecknade -> teckn", function() {deepEqual( Stem("tecknade"), "teckn");});
test("tecknadt -> tecknad", function() {deepEqual( Stem("tecknadt"), "tecknad");});
test("tecknar -> teckn", function() {deepEqual( Stem("tecknar"), "teckn");});
test("tecknat -> teckn", function() {deepEqual( Stem("tecknat"), "teckn");});
test("tecknen -> teckn", function() {deepEqual( Stem("tecknen"), "teckn");});
test("tecknet -> tecknet", function() {deepEqual( Stem("tecknet"), "tecknet");});
test("teckning -> teckning", function() {deepEqual( Stem("teckning"), "teckning");});
test("teckningar -> teckning", function() {deepEqual( Stem("teckningar"), "teckning");});
test("teckningen -> teckning", function() {deepEqual( Stem("teckningen"), "teckning");});
test("tedde -> tedd", function() {deepEqual( Stem("tedde"), "tedd");});
test("teddybjörn -> teddybjörn", function() {deepEqual( Stem("teddybjörn"), "teddybjörn");});
test("teddybjörnen -> teddybjörn", function() {deepEqual( Stem("teddybjörnen"), "teddybjörn");});
test("teet -> teet", function() {deepEqual( Stem("teet"), "teet");});
test("tefat -> tef", function() {deepEqual( Stem("tefat"), "tef");});
test("tefatet -> tefatet", function() {deepEqual( Stem("tefatet"), "tefatet");});
test("teg -> teg", function() {deepEqual( Stem("teg"), "teg");});
test("tegat -> teg", function() {deepEqual( Stem("tegat"), "teg");});
test("tegel -> tegel", function() {deepEqual( Stem("tegel"), "tegel");});
test("tegelrött -> tegelröt", function() {deepEqual( Stem("tegelrött"), "tegelröt");});
test("tegeltorn -> tegeltorn", function() {deepEqual( Stem("tegeltorn"), "tegeltorn");});
test("teglen -> tegl", function() {deepEqual( Stem("teglen"), "tegl");});
test("tegner -> tegn", function() {deepEqual( Stem("tegner"), "tegn");});
test("tego -> tego", function() {deepEqual( Stem("tego"), "tego");});
test("tekanistern -> tekanist", function() {deepEqual( Stem("tekanistern"), "tekanist");});
test("tekopp -> tekopp", function() {deepEqual( Stem("tekopp"), "tekopp");});
test("tekoppar -> tekopp", function() {deepEqual( Stem("tekoppar"), "tekopp");});
test("tekoppen -> tekopp", function() {deepEqual( Stem("tekoppen"), "tekopp");});
test("tekök -> tekök", function() {deepEqual( Stem("tekök"), "tekök");});
test("telefon -> telefon", function() {deepEqual( Stem("telefon"), "telefon");});
test("telefonen -> telefon", function() {deepEqual( Stem("telefonen"), "telefon");});
test("telefonera -> telefoner", function() {deepEqual( Stem("telefonera"), "telefoner");});
test("telefonerade -> telefoner", function() {deepEqual( Stem("telefonerade"), "telefoner");});
test("telefonerar -> telefoner", function() {deepEqual( Stem("telefonerar"), "telefoner");});
test("telefonstationen -> telefonstation", function() {deepEqual( Stem("telefonstationen"), "telefonstation");});
test("telefontrad -> telefontr", function() {deepEqual( Stem("telefontrad"), "telefontr");});
test("telefontråd -> telefontråd", function() {deepEqual( Stem("telefontråd"), "telefontråd");});
test("telefontrådarna -> telefontråd", function() {deepEqual( Stem("telefontrådarna"), "telefontråd");});
test("telegramstil -> telegramstil", function() {deepEqual( Stem("telegramstil"), "telegramstil");});
test("telning -> telning", function() {deepEqual( Stem("telning"), "telning");});
test("telsen -> tels", function() {deepEqual( Stem("telsen"), "tels");});
test("tema -> tem", function() {deepEqual( Stem("tema"), "tem");});
test("temligen -> tem", function() {deepEqual( Stem("temligen"), "tem");});
test("temligt -> tem", function() {deepEqual( Stem("temligt"), "tem");});
test("tempel -> tempel", function() {deepEqual( Stem("tempel"), "tempel");});
test("tempeltjänares -> tempeltjänar", function() {deepEqual( Stem("tempeltjänares"), "tempeltjänar");});
test("tempeltun -> tempeltun", function() {deepEqual( Stem("tempeltun"), "tempeltun");});
test("templet -> templet", function() {deepEqual( Stem("templet"), "templet");});
test("tempo -> tempo", function() {deepEqual( Stem("tempo"), "tempo");});
test("temps -> temp", function() {deepEqual( Stem("temps"), "temp");});
test("ten -> ten", function() {deepEqual( Stem("ten"), "ten");});
test("tendens -> tend", function() {deepEqual( Stem("tendens"), "tend");});
test("tenn -> tenn", function() {deepEqual( Stem("tenn"), "tenn");});
test("tennsoldat -> tennsold", function() {deepEqual( Stem("tennsoldat"), "tennsold");});
test("tennsoldaten -> tennsoldat", function() {deepEqual( Stem("tennsoldaten"), "tennsoldat");});
test("tenntallrikar -> tenntallrik", function() {deepEqual( Stem("tenntallrikar"), "tenntallrik");});
test("tens -> ten", function() {deepEqual( Stem("tens"), "ten");});
test("teodor -> teod", function() {deepEqual( Stem("teodor"), "teod");});
test("teofilius -> teofilius", function() {deepEqual( Stem("teofilius"), "teofilius");});
test("teologer -> teolog", function() {deepEqual( Stem("teologer"), "teolog");});
test("teologiska -> teologisk", function() {deepEqual( Stem("teologiska"), "teologisk");});
test("teoretiska -> teoretisk", function() {deepEqual( Stem("teoretiska"), "teoretisk");});
test("teosofi -> teosofi", function() {deepEqual( Stem("teosofi"), "teosofi");});
test("ter -> ter", function() {deepEqual( Stem("ter"), "ter");});
test("teresa -> teres", function() {deepEqual( Stem("teresa"), "teres");});
test("teresas -> teres", function() {deepEqual( Stem("teresas"), "teres");});
test("terlosaren -> terlos", function() {deepEqual( Stem("terlosaren"), "terlos");});
test("term -> term", function() {deepEqual( Stem("term"), "term");});
test("termer -> term", function() {deepEqual( Stem("termer"), "term");});
test("terminen -> termin", function() {deepEqual( Stem("terminen"), "termin");});
test("termometern -> termomet", function() {deepEqual( Stem("termometern"), "termomet");});
test("ternström -> ternström", function() {deepEqual( Stem("ternström"), "ternström");});
test("ternströms -> ternström", function() {deepEqual( Stem("ternströms"), "ternström");});
test("ternströrm -> ternströrm", function() {deepEqual( Stem("ternströrm"), "ternströrm");});
test("terrassen -> terrass", function() {deepEqual( Stem("terrassen"), "terrass");});
test("terrier -> terri", function() {deepEqual( Stem("terrier"), "terri");});
test("terriern -> terri", function() {deepEqual( Stem("terriern"), "terri");});
test("terrierns -> terri", function() {deepEqual( Stem("terrierns"), "terri");});
test("tesen -> tes", function() {deepEqual( Stem("tesen"), "tes");});
test("tesked -> tesked", function() {deepEqual( Stem("tesked"), "tesked");});
test("test -> test", function() {deepEqual( Stem("test"), "test");});
test("testa -> test", function() {deepEqual( Stem("testa"), "test");});
test("testamente -> testament", function() {deepEqual( Stem("testamente"), "testament");});
test("testamentel -> testamentel", function() {deepEqual( Stem("testamentel"), "testamentel");});
test("testamentera -> testamenter", function() {deepEqual( Stem("testamentera"), "testamenter");});
test("testamentet -> testamentet", function() {deepEqual( Stem("testamentet"), "testamentet");});
test("testamentets -> testamentet", function() {deepEqual( Stem("testamentets"), "testamentet");});
test("testamentsaffären -> testamentsaffär", function() {deepEqual( Stem("testamentsaffären"), "testamentsaffär");});
test("testamentsfrågan -> testamentsfrågan", function() {deepEqual( Stem("testamentsfrågan"), "testamentsfrågan");});
test("tet -> tet", function() {deepEqual( Stem("tet"), "tet");});
test("tete -> tet", function() {deepEqual( Stem("tete"), "tet");});
test("tetimmen -> tetimm", function() {deepEqual( Stem("tetimmen"), "tetimm");});
test("tevattnet -> tevattnet", function() {deepEqual( Stem("tevattnet"), "tevattnet");});
test("texten -> text", function() {deepEqual( Stem("texten"), "text");});
test("thanatophilander -> thanatophiland", function() {deepEqual( Stem("thanatophilander"), "thanatophiland");});
test("theol -> theol", function() {deepEqual( Stem("theol"), "theol");});
test("therese -> theres", function() {deepEqual( Stem("therese"), "theres");});
test("thomas -> thom", function() {deepEqual( Stem("thomas"), "thom");});
test("thyren -> thyr", function() {deepEqual( Stem("thyren"), "thyr");});
test("ti -> ti", function() {deepEqual( Stem("ti"), "ti");});
test("tia -> tia", function() {deepEqual( Stem("tia"), "tia");});
test("tibastgren -> tibastgr", function() {deepEqual( Stem("tibastgren"), "tibastgr");});
test("tiber -> tib", function() {deepEqual( Stem("tiber"), "tib");});
test("ticka -> tick", function() {deepEqual( Stem("ticka"), "tick");});
test("tickade -> tick", function() {deepEqual( Stem("tickade"), "tick");});
test("tickan -> tickan", function() {deepEqual( Stem("tickan"), "tickan");});
test("tickande -> tick", function() {deepEqual( Stem("tickande"), "tick");});
test("tickar -> tick", function() {deepEqual( Stem("tickar"), "tick");});
test("tid -> tid", function() {deepEqual( Stem("tid"), "tid");});
test("tidcns -> tidcn", function() {deepEqual( Stem("tidcns"), "tidcn");});
test("tiden -> tid", function() {deepEqual( Stem("tiden"), "tid");});
test("tidender -> tidend", function() {deepEqual( Stem("tidender"), "tidend");});
test("tidens -> tid", function() {deepEqual( Stem("tidens"), "tid");});
test("tider -> tid", function() {deepEqual( Stem("tider"), "tid");});
test("tiderna -> tid", function() {deepEqual( Stem("tiderna"), "tid");});
test("tidernas -> tid", function() {deepEqual( Stem("tidernas"), "tid");});
test("tiders -> tider", function() {deepEqual( Stem("tiders"), "tider");});
test("tidevarv -> tidevarv", function() {deepEqual( Stem("tidevarv"), "tidevarv");});
test("tidevarvs -> tidevarv", function() {deepEqual( Stem("tidevarvs"), "tidevarv");});
test("tidig -> tid", function() {deepEqual( Stem("tidig"), "tid");});
test("tidiga -> tid", function() {deepEqual( Stem("tidiga"), "tid");});
test("tidigare -> tid", function() {deepEqual( Stem("tidigare"), "tid");});
test("tidigast -> tid", function() {deepEqual( Stem("tidigast"), "tid");});
test("tidigt -> tid", function() {deepEqual( Stem("tidigt"), "tid");});
test("tidlös -> tidlös", function() {deepEqual( Stem("tidlös"), "tidlös");});
test("tidning -> tidning", function() {deepEqual( Stem("tidning"), "tidning");});
test("tidningar -> tidning", function() {deepEqual( Stem("tidningar"), "tidning");});
test("tidningarna -> tidning", function() {deepEqual( Stem("tidningarna"), "tidning");});
test("tidningarnas -> tidning", function() {deepEqual( Stem("tidningarnas"), "tidning");});
test("tidningen -> tidning", function() {deepEqual( Stem("tidningen"), "tidning");});
test("tidningsblad -> tidningsbl", function() {deepEqual( Stem("tidningsblad"), "tidningsbl");});
test("tidningskanten -> tidningskant", function() {deepEqual( Stem("tidningskanten"), "tidningskant");});
test("tidningskontoret -> tidningskontoret", function() {deepEqual( Stem("tidningskontoret"), "tidningskontoret");});
test("tidningspacken -> tidningspack", function() {deepEqual( Stem("tidningspacken"), "tidningspack");});
test("tidningspojke -> tidningspojk", function() {deepEqual( Stem("tidningspojke"), "tidningspojk");});
test("tidningsurklipp -> tidningsurklipp", function() {deepEqual( Stem("tidningsurklipp"), "tidningsurklipp");});
test("tidpunkt -> tidpunk", function() {deepEqual( Stem("tidpunkt"), "tidpunk");});
test("tidrn -> tidrn", function() {deepEqual( Stem("tidrn"), "tidrn");});
test("tids -> tid", function() {deepEqual( Stem("tids"), "tid");});
test("tidsfördriv -> tidsfördriv", function() {deepEqual( Stem("tidsfördriv"), "tidsfördriv");});
test("tidskrift -> tidskrift", function() {deepEqual( Stem("tidskrift"), "tidskrift");});
test("tidskrifterna -> tidskrift", function() {deepEqual( Stem("tidskrifterna"), "tidskrift");});
test("tidspillan -> tidspillan", function() {deepEqual( Stem("tidspillan"), "tidspillan");});
test("tidsutsikter -> tidsutsik", function() {deepEqual( Stem("tidsutsikter"), "tidsutsik");});
test("tidtals -> tidtal", function() {deepEqual( Stem("tidtals"), "tidtal");});
test("tig -> tig", function() {deepEqual( Stem("tig"), "tig");});
test("tiga -> tig", function() {deepEqual( Stem("tiga"), "tig");});
test("tigande -> tig", function() {deepEqual( Stem("tigande"), "tig");});
test("tiger -> tig", function() {deepEqual( Stem("tiger"), "tig");});
test("tigern -> tig", function() {deepEqual( Stem("tigern"), "tig");});
test("tigga -> tigg", function() {deepEqual( Stem("tigga"), "tigg");});
test("tiggande -> tigg", function() {deepEqual( Stem("tiggande"), "tigg");});
test("tiggaraktig -> tiggarakt", function() {deepEqual( Stem("tiggaraktig"), "tiggarakt");});
test("tiggare -> tigg", function() {deepEqual( Stem("tiggare"), "tigg");});
test("tiggarländ -> tiggarländ", function() {deepEqual( Stem("tiggarländ"), "tiggarländ");});
test("tiggde -> tigg", function() {deepEqual( Stem("tiggde"), "tigg");});
test("tigger -> tigg", function() {deepEqual( Stem("tigger"), "tigg");});
test("tiggt -> tigg", function() {deepEqual( Stem("tiggt"), "tigg");});
test("tigt -> tigt", function() {deepEqual( Stem("tigt"), "tigt");});
test("tiil -> tiil", function() {deepEqual( Stem("tiil"), "tiil");});
test("tiitt -> tiitt", function() {deepEqual( Stem("tiitt"), "tiitt");});
test("tik -> tik", function() {deepEqual( Stem("tik"), "tik");});
test("til -> til", function() {deepEqual( Stem("til"), "til");});
test("tili -> tili", function() {deepEqual( Stem("tili"), "tili");});
test("till -> till", function() {deepEqual( Stem("till"), "till");});
test("tillade -> till", function() {deepEqual( Stem("tillade"), "till");});
test("tillades -> till", function() {deepEqual( Stem("tillades"), "till");});
test("tillaga -> tillag", function() {deepEqual( Stem("tillaga"), "tillag");});
test("tillagat -> tillag", function() {deepEqual( Stem("tillagat"), "tillag");});
test("tillagda -> tillag", function() {deepEqual( Stem("tillagda"), "tillag");});
test("tillbaka -> tillbak", function() {deepEqual( Stem("tillbaka"), "tillbak");});
test("tillbakahålla -> tillbakahåll", function() {deepEqual( Stem("tillbakahålla"), "tillbakahåll");});
test("tillbakalutad -> tillbakalut", function() {deepEqual( Stem("tillbakalutad"), "tillbakalut");});
test("tillbakalutat -> tillbakalut", function() {deepEqual( Stem("tillbakalutat"), "tillbakalut");});
test("tillbakaskjuten -> tillbakaskjut", function() {deepEqual( Stem("tillbakaskjuten"), "tillbakaskjut");});
test("tillbakastruket -> tillbakastruket", function() {deepEqual( Stem("tillbakastruket"), "tillbakastruket");});
test("tillbakasänd -> tillbakasänd", function() {deepEqual( Stem("tillbakasänd"), "tillbakasänd");});
test("tillbakavisa -> tillbakavis", function() {deepEqual( Stem("tillbakavisa"), "tillbakavis");});
test("tillbalka -> tillbalk", function() {deepEqual( Stem("tillbalka"), "tillbalk");});
test("tillbedjan -> tillbedjan", function() {deepEqual( Stem("tillbedjan"), "tillbedjan");});
test("tillbedjande -> tillbedj", function() {deepEqual( Stem("tillbedjande"), "tillbedj");});
test("tillbedjare -> tillbedj", function() {deepEqual( Stem("tillbedjare"), "tillbedj");});
test("tillbedjares -> tillbedjar", function() {deepEqual( Stem("tillbedjares"), "tillbedjar");});
test("tillbehöret -> tillbehöret", function() {deepEqual( Stem("tillbehöret"), "tillbehöret");});
test("tillber -> tillb", function() {deepEqual( Stem("tillber"), "tillb");});
test("tillbett -> tillbet", function() {deepEqual( Stem("tillbett"), "tillbet");});
test("tillbragt -> tillbrag", function() {deepEqual( Stem("tillbragt"), "tillbrag");});
test("tillbragte -> tillbrag", function() {deepEqual( Stem("tillbragte"), "tillbrag");});
test("tillbragtes -> tillbrag", function() {deepEqual( Stem("tillbragtes"), "tillbrag");});
test("tillbringa -> tillbring", function() {deepEqual( Stem("tillbringa"), "tillbring");});
test("tillbringade -> tillbring", function() {deepEqual( Stem("tillbringade"), "tillbring");});
test("tillbringare -> tillbring", function() {deepEqual( Stem("tillbringare"), "tillbring");});
test("tillbud -> tillbud", function() {deepEqual( Stem("tillbud"), "tillbud");});
test("tillbättre -> tillbättr", function() {deepEqual( Stem("tillbättre"), "tillbättr");});
test("tillbörlig -> tillbör", function() {deepEqual( Stem("tillbörlig"), "tillbör");});
test("tillbörligt -> tillbör", function() {deepEqual( Stem("tillbörligt"), "tillbör");});
test("tilldelad -> tilldel", function() {deepEqual( Stem("tilldelad"), "tilldel");});
test("tilldess -> tilldess", function() {deepEqual( Stem("tilldess"), "tilldess");});
test("tilldraga -> tilldrag", function() {deepEqual( Stem("tilldraga"), "tilldrag");});
test("tilldragande -> tilldrag", function() {deepEqual( Stem("tilldragande"), "tilldrag");});
test("tilldragelse -> tilldrag", function() {deepEqual( Stem("tilldragelse"), "tilldrag");});
test("tilldragelser -> tilldrag", function() {deepEqual( Stem("tilldragelser"), "tilldrag");});
test("tilldrog -> tilldrog", function() {deepEqual( Stem("tilldrog"), "tilldrog");});
test("tillfaller -> tillfall", function() {deepEqual( Stem("tillfaller"), "tillfall");});
test("tillflykt -> tillflyk", function() {deepEqual( Stem("tillflykt"), "tillflyk");});
test("tillflyktsort -> tillflyktsort", function() {deepEqual( Stem("tillflyktsort"), "tillflyktsort");});
test("tillfogad -> tillfog", function() {deepEqual( Stem("tillfogad"), "tillfog");});
test("tillfogade -> tillfog", function() {deepEqual( Stem("tillfogade"), "tillfog");});
test("tillfogat -> tillfog", function() {deepEqual( Stem("tillfogat"), "tillfog");});
test("tillfreds -> tillfred", function() {deepEqual( Stem("tillfreds"), "tillfred");});
test("tillfredss -> tillfredss", function() {deepEqual( Stem("tillfredss"), "tillfredss");});
test("tillfredsstallt -> tillfredsstallt", function() {deepEqual( Stem("tillfredsstallt"), "tillfredsstallt");});
test("tillfredsstäld -> tillfredsstäld", function() {deepEqual( Stem("tillfredsstäld"), "tillfredsstäld");});
test("tillfredsstälda -> tillfredsstäld", function() {deepEqual( Stem("tillfredsstälda"), "tillfredsstäld");});
test("tillfredsställa -> tillfredsställ", function() {deepEqual( Stem("tillfredsställa"), "tillfredsställ");});
test("tillfredsställande -> tillfredsställ", function() {deepEqual( Stem("tillfredsställande"), "tillfredsställ");});
test("tillfredsställd -> tillfredsställd", function() {deepEqual( Stem("tillfredsställd"), "tillfredsställd");});
test("tillfredsställde -> tillfredsställd", function() {deepEqual( Stem("tillfredsställde"), "tillfredsställd");});
test("tillfredsställdes -> tillfredsställd", function() {deepEqual( Stem("tillfredsställdes"), "tillfredsställd");});
test("tillfredsställelse -> tillfredsställ", function() {deepEqual( Stem("tillfredsställelse"), "tillfredsställ");});
test("tillfredsställelsen -> tillfredsställ", function() {deepEqual( Stem("tillfredsställelsen"), "tillfredsställ");});
test("tillfrisknad -> tillfriskn", function() {deepEqual( Stem("tillfrisknad"), "tillfriskn");});
test("tillfrisknade -> tillfriskn", function() {deepEqual( Stem("tillfrisknade"), "tillfriskn");});
test("tillfälle -> tillfäll", function() {deepEqual( Stem("tillfälle"), "tillfäll");});
test("tillfällen -> tillfäll", function() {deepEqual( Stem("tillfällen"), "tillfäll");});
test("tillfället -> tillfället", function() {deepEqual( Stem("tillfället"), "tillfället");});
test("tillfällig -> tillfäl", function() {deepEqual( Stem("tillfällig"), "tillfäl");});
test("tillfälliga -> tillfäl", function() {deepEqual( Stem("tillfälliga"), "tillfäl");});
test("tillfällighet -> tillfäl", function() {deepEqual( Stem("tillfällighet"), "tillfäl");});
test("tillfälligheten -> tillfäl", function() {deepEqual( Stem("tillfälligheten"), "tillfäl");});
test("tillfälligheter -> tillfäl", function() {deepEqual( Stem("tillfälligheter"), "tillfäl");});
test("tillfälligt -> tillfäl", function() {deepEqual( Stem("tillfälligt"), "tillfäl");});
test("tillfälligtvis -> tillfälligtvis", function() {deepEqual( Stem("tillfälligtvis"), "tillfälligtvis");});
test("tillföll -> tillföll", function() {deepEqual( Stem("tillföll"), "tillföll");});
test("tillförordnad -> tillförordn", function() {deepEqual( Stem("tillförordnad"), "tillförordn");});
test("tillförsigt -> tillförs", function() {deepEqual( Stem("tillförsigt"), "tillförs");});
test("tillgifne -> tillgifn", function() {deepEqual( Stem("tillgifne"), "tillgifn");});
test("tillgifva -> tillgifv", function() {deepEqual( Stem("tillgifva"), "tillgifv");});
test("tillgifvenhet -> tillgifven", function() {deepEqual( Stem("tillgifvenhet"), "tillgifven");});
test("tillgivenhet -> tillgiven", function() {deepEqual( Stem("tillgivenhet"), "tillgiven");});
test("tillgjord -> tillgjord", function() {deepEqual( Stem("tillgjord"), "tillgjord");});
test("tillgjorda -> tillgjord", function() {deepEqual( Stem("tillgjorda"), "tillgjord");});
test("tillgjort -> tillgjort", function() {deepEqual( Stem("tillgjort"), "tillgjort");});
test("tillgodonjuta -> tillgodonjut", function() {deepEqual( Stem("tillgodonjuta"), "tillgodonjut");});
test("tillgänglig -> tillgäng", function() {deepEqual( Stem("tillgänglig"), "tillgäng");});
test("tillgå -> tillgå", function() {deepEqual( Stem("tillgå"), "tillgå");});
test("tillgång -> tillgång", function() {deepEqual( Stem("tillgång"), "tillgång");});
test("tillgångar -> tillgång", function() {deepEqual( Stem("tillgångar"), "tillgång");});
test("tillhanda -> tillhand", function() {deepEqual( Stem("tillhanda"), "tillhand");});
test("tillhandakommet -> tillhandakommet", function() {deepEqual( Stem("tillhandakommet"), "tillhandakommet");});
test("tillhjälp -> tillhjälp", function() {deepEqual( Stem("tillhjälp"), "tillhjälp");});
test("tillhka -> tillhk", function() {deepEqual( Stem("tillhka"), "tillhk");});
test("tillhopa -> tillhop", function() {deepEqual( Stem("tillhopa"), "tillhop");});
test("tillhorde -> tillhord", function() {deepEqual( Stem("tillhorde"), "tillhord");});
test("tillhort -> tillhort", function() {deepEqual( Stem("tillhort"), "tillhort");});
test("tillhugget -> tillhugget", function() {deepEqual( Stem("tillhugget"), "tillhugget");});
test("tillhygge -> tillhygg", function() {deepEqual( Stem("tillhygge"), "tillhygg");});
test("tillhåll -> tillhåll", function() {deepEqual( Stem("tillhåll"), "tillhåll");});
test("tillhör -> tillhör", function() {deepEqual( Stem("tillhör"), "tillhör");});
test("tillhöra -> tillhör", function() {deepEqual( Stem("tillhöra"), "tillhör");});
test("tillhörcle -> tillhörcl", function() {deepEqual( Stem("tillhörcle"), "tillhörcl");});
test("tillhörde -> tillhörd", function() {deepEqual( Stem("tillhörde"), "tillhörd");});
test("tillhörighet -> tillhör", function() {deepEqual( Stem("tillhörighet"), "tillhör");});
test("tillhörigt -> tillhör", function() {deepEqual( Stem("tillhörigt"), "tillhör");});
test("tillhört -> tillhört", function() {deepEqual( Stem("tillhört"), "tillhört");});
test("tillika -> tillik", function() {deepEqual( Stem("tillika"), "tillik");});
test("tillintetgjord -> tillintetgjord", function() {deepEqual( Stem("tillintetgjord"), "tillintetgjord");});
test("tillintetgöra -> tillintetgör", function() {deepEqual( Stem("tillintetgöra"), "tillintetgör");});
test("tillit -> tillit", function() {deepEqual( Stem("tillit"), "tillit");});
test("tillitsfullt -> tillitsfull", function() {deepEqual( Stem("tillitsfullt"), "tillitsfull");});
test("tillkalla -> tillkall", function() {deepEqual( Stem("tillkalla"), "tillkall");});
test("tillkallandet -> tillkall", function() {deepEqual( Stem("tillkallandet"), "tillkall");});
test("tillkom -> tillkom", function() {deepEqual( Stem("tillkom"), "tillkom");});
test("tillkommande -> tillkomm", function() {deepEqual( Stem("tillkommande"), "tillkomm");});
test("tillkommit -> tillkommit", function() {deepEqual( Stem("tillkommit"), "tillkommit");});
test("tillkommo -> tillkommo", function() {deepEqual( Stem("tillkommo"), "tillkommo");});
test("tillkänna -> tillkän", function() {deepEqual( Stem("tillkänna"), "tillkän");});
test("tillkännagav -> tillkännagav", function() {deepEqual( Stem("tillkännagav"), "tillkännagav");});
test("tillkännager -> tillkännag", function() {deepEqual( Stem("tillkännager"), "tillkännag");});
test("tillkännagifva -> tillkännagifv", function() {deepEqual( Stem("tillkännagifva"), "tillkännagifv");});
test("tillkännagiva -> tillkännagiv", function() {deepEqual( Stem("tillkännagiva"), "tillkännagiv");});
test("tillkännagåfvo -> tillkännagåfvo", function() {deepEqual( Stem("tillkännagåfvo"), "tillkännagåfvo");});
test("tillkännagåvo -> tillkännagåvo", function() {deepEqual( Stem("tillkännagåvo"), "tillkännagåvo");});
test("tilllagas -> tilllag", function() {deepEqual( Stem("tilllagas"), "tilllag");});
test("tilllaglt -> tilllaglt", function() {deepEqual( Stem("tilllaglt"), "tilllaglt");});
test("tillmäten -> tillmät", function() {deepEqual( Stem("tillmäten"), "tillmät");});
test("tillmäter -> tillmät", function() {deepEqual( Stem("tillmäter"), "tillmät");});
test("tillmötesgående -> tillmötesgåend", function() {deepEqual( Stem("tillmötesgående"), "tillmötesgåend");});
test("tillnamnet -> tillnamnet", function() {deepEqual( Stem("tillnamnet"), "tillnamnet");});
test("tilloaka -> tilloak", function() {deepEqual( Stem("tilloaka"), "tilloak");});
test("tillreda -> tillred", function() {deepEqual( Stem("tillreda"), "tillred");});
test("tillredd -> tillred", function() {deepEqual( Stem("tillredd"), "tillred");});
test("tillredelser -> tillred", function() {deepEqual( Stem("tillredelser"), "tillred");});
test("tillredelserna -> tillred", function() {deepEqual( Stem("tillredelserna"), "tillred");});
test("tillreder -> tillred", function() {deepEqual( Stem("tillreder"), "tillred");});
test("tillrop -> tillrop", function() {deepEqual( Stem("tillrop"), "tillrop");});
test("tillrustningar -> tillrustning", function() {deepEqual( Stem("tillrustningar"), "tillrustning");});
test("tillrustningen -> tillrustning", function() {deepEqual( Stem("tillrustningen"), "tillrustning");});
test("tillryggalagt -> tillryggalag", function() {deepEqual( Stem("tillryggalagt"), "tillryggalag");});
test("tillräcklig -> tillräck", function() {deepEqual( Stem("tillräcklig"), "tillräck");});
test("tillräckliga -> tillräck", function() {deepEqual( Stem("tillräckliga"), "tillräck");});
test("tillräckligt -> tillräck", function() {deepEqual( Stem("tillräckligt"), "tillräck");});
test("tillräknade -> tillräkn", function() {deepEqual( Stem("tillräknade"), "tillräkn");});
test("tillräkne -> tillräkn", function() {deepEqual( Stem("tillräkne"), "tillräkn");});
test("tillrättavisning -> tillrättavisning", function() {deepEqual( Stem("tillrättavisning"), "tillrättavisning");});
test("tillråna -> tillrån", function() {deepEqual( Stem("tillråna"), "tillrån");});
test("tills -> till", function() {deepEqual( Stem("tills"), "till");});
test("tillsade -> tills", function() {deepEqual( Stem("tillsade"), "tills");});
test("tillsades -> tills", function() {deepEqual( Stem("tillsades"), "tills");});
test("tillsagt -> tillsag", function() {deepEqual( Stem("tillsagt"), "tillsag");});
test("tillsam -> tillsam", function() {deepEqual( Stem("tillsam"), "tillsam");});
test("tillsamman -> tillsamman", function() {deepEqual( Stem("tillsamman"), "tillsamman");});
test("tillsammans -> tillsamman", function() {deepEqual( Stem("tillsammans"), "tillsamman");});
test("tillsats -> tillsat", function() {deepEqual( Stem("tillsats"), "tillsat");});
test("tillse -> tills", function() {deepEqual( Stem("tillse"), "tills");});
test("tillskapade -> tillskap", function() {deepEqual( Stem("tillskapade"), "tillskap");});
test("tillskott -> tillskot", function() {deepEqual( Stem("tillskott"), "tillskot");});
test("tillskrev -> tillskrev", function() {deepEqual( Stem("tillskrev"), "tillskrev");});
test("tillskriv -> tillskriv", function() {deepEqual( Stem("tillskriv"), "tillskriv");});
test("tillskriva -> tillskriv", function() {deepEqual( Stem("tillskriva"), "tillskriv");});
test("tillskrivas -> tillskriv", function() {deepEqual( Stem("tillskrivas"), "tillskriv");});
test("tillsluter -> tillslut", function() {deepEqual( Stem("tillsluter"), "tillslut");});
test("tillslutit -> tillslutit", function() {deepEqual( Stem("tillslutit"), "tillslutit");});
test("tillslutna -> tillslutn", function() {deepEqual( Stem("tillslutna"), "tillslutn");});
test("tillslöt -> tillslöt", function() {deepEqual( Stem("tillslöt"), "tillslöt");});
test("tillslöts -> tillslöt", function() {deepEqual( Stem("tillslöts"), "tillslöt");});
test("tillsnörpta -> tillsnörpt", function() {deepEqual( Stem("tillsnörpta"), "tillsnörpt");});
test("tillspetsade -> tillspets", function() {deepEqual( Stem("tillspetsade"), "tillspets");});
test("tillstod -> tillstod", function() {deepEqual( Stem("tillstod"), "tillstod");});
test("tillstyrkt -> tillstyrk", function() {deepEqual( Stem("tillstyrkt"), "tillstyrk");});
test("tillstyrkte -> tillstyrk", function() {deepEqual( Stem("tillstyrkte"), "tillstyrk");});
test("tillstyrt -> tillstyrt", function() {deepEqual( Stem("tillstyrt"), "tillstyrt");});
test("tillstädes -> tillstäd", function() {deepEqual( Stem("tillstädes"), "tillstäd");});
test("tillstädja -> tillstädj", function() {deepEqual( Stem("tillstädja"), "tillstädj");});
test("tillställd -> tillställd", function() {deepEqual( Stem("tillställd"), "tillställd");});
test("tillställning -> tillställning", function() {deepEqual( Stem("tillställning"), "tillställning");});
test("tillställningar -> tillställning", function() {deepEqual( Stem("tillställningar"), "tillställning");});
test("tillställningen -> tillställning", function() {deepEqual( Stem("tillställningen"), "tillställning");});
test("tillställt -> tillställt", function() {deepEqual( Stem("tillställt"), "tillställt");});
test("tillständigt -> tillständ", function() {deepEqual( Stem("tillständigt"), "tillständ");});
test("tillstå -> tillstå", function() {deepEqual( Stem("tillstå"), "tillstå");});
test("tillstånd -> tillstånd", function() {deepEqual( Stem("tillstånd"), "tillstånd");});
test("tillståndet -> tillståndet", function() {deepEqual( Stem("tillståndet"), "tillståndet");});
test("tillstår -> tillstår", function() {deepEqual( Stem("tillstår"), "tillstår");});
test("tillstötande -> tillstöt", function() {deepEqual( Stem("tillstötande"), "tillstöt");});
test("tillsvidare -> tillsvid", function() {deepEqual( Stem("tillsvidare"), "tillsvid");});
test("tillsyn -> tillsyn", function() {deepEqual( Stem("tillsyn"), "tillsyn");});
test("tillsäg -> tillsäg", function() {deepEqual( Stem("tillsäg"), "tillsäg");});
test("tillsäga -> tillsäg", function() {deepEqual( Stem("tillsäga"), "tillsäg");});
test("tillsägelse -> tillsäg", function() {deepEqual( Stem("tillsägelse"), "tillsäg");});
test("tillsändas -> tillsänd", function() {deepEqual( Stem("tillsändas"), "tillsänd");});
test("tillsändt -> tillsänd", function() {deepEqual( Stem("tillsändt"), "tillsänd");});
test("tilltagande -> tilltag", function() {deepEqual( Stem("tilltagande"), "tilltag");});
test("tilltagen -> tilltag", function() {deepEqual( Stem("tilltagen"), "tilltag");});
test("tilltaget -> tilltaget", function() {deepEqual( Stem("tilltaget"), "tilltaget");});
test("tilltagsenhet -> tilltagsen", function() {deepEqual( Stem("tilltagsenhet"), "tilltagsen");});
test("tilltala -> tilltal", function() {deepEqual( Stem("tilltala"), "tilltal");});
test("tilltalade -> tilltal", function() {deepEqual( Stem("tilltalade"), "tilltal");});
test("tilltalande -> tilltal", function() {deepEqual( Stem("tilltalande"), "tilltal");});
test("tilltog -> tilltog", function() {deepEqual( Stem("tilltog"), "tilltog");});
test("tilltogo -> tilltogo", function() {deepEqual( Stem("tilltogo"), "tilltogo");});
test("tilltrott -> tilltrot", function() {deepEqual( Stem("tilltrott"), "tilltrot");});
test("tilltygad -> tilltyg", function() {deepEqual( Stem("tilltygad"), "tilltyg");});
test("tilltänkta -> tilltänk", function() {deepEqual( Stem("tilltänkta"), "tilltänk");});
test("tilltänkte -> tilltänk", function() {deepEqual( Stem("tilltänkte"), "tilltänk");});
test("tilltäppt -> tilltäppt", function() {deepEqual( Stem("tilltäppt"), "tilltäppt");});
test("tillvaro -> tillvaro", function() {deepEqual( Stem("tillvaro"), "tillvaro");});
test("tillvaron -> tillvaron", function() {deepEqual( Stem("tillvaron"), "tillvaron");});
test("tillvarons -> tillvaron", function() {deepEqual( Stem("tillvarons"), "tillvaron");});
test("tillverkad -> tillverk", function() {deepEqual( Stem("tillverkad"), "tillverk");});
test("tillvridet -> tillvridet", function() {deepEqual( Stem("tillvridet"), "tillvridet");});
test("tillväxt -> tillväxt", function() {deepEqual( Stem("tillväxt"), "tillväxt");});
test("tillägg -> tillägg", function() {deepEqual( Stem("tillägg"), "tillägg");});
test("tillägga -> tillägg", function() {deepEqual( Stem("tillägga"), "tillägg");});
test("tilläggas -> tillägg", function() {deepEqual( Stem("tilläggas"), "tillägg");});
test("tillägger -> tillägg", function() {deepEqual( Stem("tillägger"), "tillägg");});
test("tillägget -> tillägget", function() {deepEqual( Stem("tillägget"), "tillägget");});
test("tillämnade -> tillämn", function() {deepEqual( Stem("tillämnade"), "tillämn");});
test("tillämpade -> tillämp", function() {deepEqual( Stem("tillämpade"), "tillämp");});
test("tillämpas -> tillämp", function() {deepEqual( Stem("tillämpas"), "tillämp");});
test("tilländalupna -> tilländalupn", function() {deepEqual( Stem("tilländalupna"), "tilländalupn");});
test("tillärnade -> tillärn", function() {deepEqual( Stem("tillärnade"), "tillärn");});
test("tillärnar -> tillärn", function() {deepEqual( Stem("tillärnar"), "tillärn");});
test("tillät -> tillät", function() {deepEqual( Stem("tillät"), "tillät");});
test("tilläte -> tillät", function() {deepEqual( Stem("tilläte"), "tillät");});
test("tilläto -> tilläto", function() {deepEqual( Stem("tilläto"), "tilläto");});
test("tillåt -> tillåt", function() {deepEqual( Stem("tillåt"), "tillåt");});
test("tillåta -> tillåt", function() {deepEqual( Stem("tillåta"), "tillåt");});
test("tillåtas -> tillåt", function() {deepEqual( Stem("tillåtas"), "tillåt");});
test("tillåtelse -> tillåt", function() {deepEqual( Stem("tillåtelse"), "tillåt");});
test("tillåtelsen -> tillåt", function() {deepEqual( Stem("tillåtelsen"), "tillåt");});
test("tillåten -> tillåt", function() {deepEqual( Stem("tillåten"), "tillåt");});
test("tillåter -> tillåt", function() {deepEqual( Stem("tillåter"), "tillåt");});
test("tillåtet -> tillåtet", function() {deepEqual( Stem("tillåtet"), "tillåtet");});
test("tillåtit -> tillåtit", function() {deepEqual( Stem("tillåtit"), "tillåtit");});
test("tillåtna -> tillåtn", function() {deepEqual( Stem("tillåtna"), "tillåtn");});
test("tillökning -> tillökning", function() {deepEqual( Stem("tillökning"), "tillökning");});
test("tillökta -> tillök", function() {deepEqual( Stem("tillökta"), "tillök");});
test("tilt -> tilt", function() {deepEqual( Stem("tilt"), "tilt");});
test("timglaset -> timglaset", function() {deepEqual( Stem("timglaset"), "timglaset");});
test("timjan -> timjan", function() {deepEqual( Stem("timjan"), "timjan");});
test("timliga -> tim", function() {deepEqual( Stem("timliga"), "tim");});
test("timligheten -> tim", function() {deepEqual( Stem("timligheten"), "tim");});
test("timma -> timm", function() {deepEqual( Stem("timma"), "timm");});
test("timmai -> timmai", function() {deepEqual( Stem("timmai"), "timmai");});
test("timmar -> timm", function() {deepEqual( Stem("timmar"), "timm");});
test("timmarna -> timm", function() {deepEqual( Stem("timmarna"), "timm");});
test("timmarne -> timm", function() {deepEqual( Stem("timmarne"), "timm");});
test("timmars -> timmar", function() {deepEqual( Stem("timmars"), "timmar");});
test("timme -> timm", function() {deepEqual( Stem("timme"), "timm");});
test("timmen -> timm", function() {deepEqual( Stem("timmen"), "timm");});
test("timmergesäll -> timmergesäll", function() {deepEqual( Stem("timmergesäll"), "timmergesäll");});
test("timmerstockar -> timmerstock", function() {deepEqual( Stem("timmerstockar"), "timmerstock");});
test("timmes -> timm", function() {deepEqual( Stem("timmes"), "timm");});
test("timrades -> timr", function() {deepEqual( Stem("timrades"), "timr");});
test("timrar -> timr", function() {deepEqual( Stem("timrar"), "timr");});
test("tinade -> tin", function() {deepEqual( Stem("tinade"), "tin");});
test("tinan -> tinan", function() {deepEqual( Stem("tinan"), "tinan");});
test("tinande -> tin", function() {deepEqual( Stem("tinande"), "tin");});
test("tindra -> tindr", function() {deepEqual( Stem("tindra"), "tindr");});
test("tindrade -> tindr", function() {deepEqual( Stem("tindrade"), "tindr");});
test("tindrande -> tindr", function() {deepEqual( Stem("tindrande"), "tindr");});
test("tindrar -> tindr", function() {deepEqual( Stem("tindrar"), "tindr");});
test("ting -> ting", function() {deepEqual( Stem("ting"), "ting");});
test("tingar -> ting", function() {deepEqual( Stem("tingar"), "ting");});
test("tingen -> ting", function() {deepEqual( Stem("tingen"), "ting");});
test("tingens -> ting", function() {deepEqual( Stem("tingens"), "ting");});
test("tingestar -> tingest", function() {deepEqual( Stem("tingestar"), "tingest");});
test("tingesten -> tingest", function() {deepEqual( Stem("tingesten"), "tingest");});
test("tingsgöromålen -> tingsgöromål", function() {deepEqual( Stem("tingsgöromålen"), "tingsgöromål");});
test("tinktur -> tinktur", function() {deepEqual( Stem("tinktur"), "tinktur");});
test("tinning -> tinning", function() {deepEqual( Stem("tinning"), "tinning");});
test("tinningar -> tinning", function() {deepEqual( Stem("tinningar"), "tinning");});
test("tinningarna -> tinning", function() {deepEqual( Stem("tinningarna"), "tinning");});
test("tinningen -> tinning", function() {deepEqual( Stem("tinningen"), "tinning");});
test("tintomara -> tintomar", function() {deepEqual( Stem("tintomara"), "tintomar");});
test("tio -> tio", function() {deepEqual( Stem("tio"), "tio");});
test("tiobedjande -> tiobedj", function() {deepEqual( Stem("tiobedjande"), "tiobedj");});
test("tiodubbelt -> tiodubbelt", function() {deepEqual( Stem("tiodubbelt"), "tiodubbelt");});
test("tiodubblades -> tiodubbl", function() {deepEqual( Stem("tiodubblades"), "tiodubbl");});
test("tiofaldigt -> tiofald", function() {deepEqual( Stem("tiofaldigt"), "tiofald");});
test("tiokamp -> tiokamp", function() {deepEqual( Stem("tiokamp"), "tiokamp");});
test("tion -> tion", function() {deepEqual( Stem("tion"), "tion");});
test("tionde -> tiond", function() {deepEqual( Stem("tionde"), "tiond");});
test("tioner -> tion", function() {deepEqual( Stem("tioner"), "tion");});
test("tior -> tior", function() {deepEqual( Stem("tior"), "tior");});
test("tiotal -> tiotal", function() {deepEqual( Stem("tiotal"), "tiotal");});
test("tiotiden -> tiotid", function() {deepEqual( Stem("tiotiden"), "tiotid");});
test("tiotusental -> tiotusental", function() {deepEqual( Stem("tiotusental"), "tiotusental");});
test("tir -> tir", function() {deepEqual( Stem("tir"), "tir");});
test("tisdag -> tisdag", function() {deepEqual( Stem("tisdag"), "tisdag");});
test("tisdagen -> tisdag", function() {deepEqual( Stem("tisdagen"), "tisdag");});
test("tisdagsaftnar -> tisdagsaftn", function() {deepEqual( Stem("tisdagsaftnar"), "tisdagsaftn");});
test("tisdagsaftnarna -> tisdagsaftn", function() {deepEqual( Stem("tisdagsaftnarna"), "tisdagsaftn");});
test("tiska -> tisk", function() {deepEqual( Stem("tiska"), "tisk");});
test("tiskt -> tisk", function() {deepEqual( Stem("tiskt"), "tisk");});
test("tissla -> tissl", function() {deepEqual( Stem("tissla"), "tissl");});
test("tistelöborna -> tistelöb", function() {deepEqual( Stem("tistelöborna"), "tistelöb");});
test("tistelöherrskapet -> tistelöherrskapet", function() {deepEqual( Stem("tistelöherrskapet"), "tistelöherrskapet");});
test("tistelön -> tistelön", function() {deepEqual( Stem("tistelön"), "tistelön");});
test("tistelöns -> tistelön", function() {deepEqual( Stem("tistelöns"), "tistelön");});
test("tistelöpacket -> tistelöpacket", function() {deepEqual( Stem("tistelöpacket"), "tistelöpacket");});
test("tistelörosen -> tistelöros", function() {deepEqual( Stem("tistelörosen"), "tistelöros");});
test("titel -> titel", function() {deepEqual( Stem("titel"), "titel");});
test("titelbladet -> titelbladet", function() {deepEqual( Stem("titelbladet"), "titelbladet");});
test("titeln -> titeln", function() {deepEqual( Stem("titeln"), "titeln");});
test("titelsidan -> titelsidan", function() {deepEqual( Stem("titelsidan"), "titelsidan");});
test("titet -> titet", function() {deepEqual( Stem("titet"), "titet");});
test("titlarna -> titl", function() {deepEqual( Stem("titlarna"), "titl");});
test("titta -> titt", function() {deepEqual( Stem("titta"), "titt");});
test("tittade -> titt", function() {deepEqual( Stem("tittade"), "titt");});
test("tittande -> titt", function() {deepEqual( Stem("tittande"), "titt");});
test("tittar -> titt", function() {deepEqual( Stem("tittar"), "titt");});
test("tittat -> titt", function() {deepEqual( Stem("tittat"), "titt");});
test("titulerades -> tituler", function() {deepEqual( Stem("titulerades"), "tituler");});
test("tjenade -> tjen", function() {deepEqual( Stem("tjenade"), "tjen");});
test("tjenar -> tjen", function() {deepEqual( Stem("tjenar"), "tjen");});
test("tjenare -> tjen", function() {deepEqual( Stem("tjenare"), "tjen");});
test("tjenarinnan -> tjenarinnan", function() {deepEqual( Stem("tjenarinnan"), "tjenarinnan");});
test("tjenat -> tjen", function() {deepEqual( Stem("tjenat"), "tjen");});
test("tjenligast -> tjen", function() {deepEqual( Stem("tjenligast"), "tjen");});
test("tjenst -> tjenst", function() {deepEqual( Stem("tjenst"), "tjenst");});
test("tjenstaktig -> tjenstakt", function() {deepEqual( Stem("tjenstaktig"), "tjenstakt");});
test("tjenstaktighet -> tjenstakt", function() {deepEqual( Stem("tjenstaktighet"), "tjenstakt");});
test("tjenstaktigt -> tjenstakt", function() {deepEqual( Stem("tjenstaktigt"), "tjenstakt");});
test("tjenstebefattning -> tjenstebefattning", function() {deepEqual( Stem("tjenstebefattning"), "tjenstebefattning");});
test("tjenstefolk -> tjenstefolk", function() {deepEqual( Stem("tjenstefolk"), "tjenstefolk");});
test("tjenstefolket -> tjenstefolket", function() {deepEqual( Stem("tjenstefolket"), "tjenstefolket");});
test("tjensteman -> tjensteman", function() {deepEqual( Stem("tjensteman"), "tjensteman");});
test("tjenstemannen -> tjensteman", function() {deepEqual( Stem("tjenstemannen"), "tjensteman");});
test("tjensten -> tjenst", function() {deepEqual( Stem("tjensten"), "tjenst");});
test("tjenstepligt -> tjenstep", function() {deepEqual( Stem("tjenstepligt"), "tjenstep");});
test("tjenster -> tjenst", function() {deepEqual( Stem("tjenster"), "tjenst");});
test("tjenstflicka -> tjenstflick", function() {deepEqual( Stem("tjenstflicka"), "tjenstflick");});
test("tjenstfolk -> tjenstfolk", function() {deepEqual( Stem("tjenstfolk"), "tjenstfolk");});
test("tjenstfolket -> tjenstfolket", function() {deepEqual( Stem("tjenstfolket"), "tjenstfolket");});
test("tjenstgörande -> tjenstgör", function() {deepEqual( Stem("tjenstgörande"), "tjenstgör");});
test("tjenstgöromål -> tjenstgöromål", function() {deepEqual( Stem("tjenstgöromål"), "tjenstgöromål");});
test("tjent -> tjent", function() {deepEqual( Stem("tjent"), "tjent");});
test("tjock -> tjock", function() {deepEqual( Stem("tjock"), "tjock");});
test("tjocka -> tjock", function() {deepEqual( Stem("tjocka"), "tjock");});
test("tjockare -> tjock", function() {deepEqual( Stem("tjockare"), "tjock");});
test("tjocknar -> tjockn", function() {deepEqual( Stem("tjocknar"), "tjockn");});
test("tjockt -> tjock", function() {deepEqual( Stem("tjockt"), "tjock");});
test("tjog -> tjog", function() {deepEqual( Stem("tjog"), "tjog");});
test("tjugo -> tjugo", function() {deepEqual( Stem("tjugo"), "tjugo");});
test("tjugonde -> tjugond", function() {deepEqual( Stem("tjugonde"), "tjugond");});
test("tjugu -> tjugu", function() {deepEqual( Stem("tjugu"), "tjugu");});
test("tjuguandra -> tjuguandr", function() {deepEqual( Stem("tjuguandra"), "tjuguandr");});
test("tjuguett -> tjuguet", function() {deepEqual( Stem("tjuguett"), "tjuguet");});
test("tjugufem -> tjugufem", function() {deepEqual( Stem("tjugufem"), "tjugufem");});
test("tjugufemte -> tjugufemt", function() {deepEqual( Stem("tjugufemte"), "tjugufemt");});
test("tjugufjerde -> tjugufjerd", function() {deepEqual( Stem("tjugufjerde"), "tjugufjerd");});
test("tjugufyra -> tjugufyr", function() {deepEqual( Stem("tjugufyra"), "tjugufyr");});
test("tjugufyraskilling -> tjugufyraskilling", function() {deepEqual( Stem("tjugufyraskilling"), "tjugufyraskilling");});
test("tjuguförsta -> tjuguförst", function() {deepEqual( Stem("tjuguförsta"), "tjuguförst");});
test("tjugunio -> tjugunio", function() {deepEqual( Stem("tjugunio"), "tjugunio");});
test("tjugutre -> tjugutr", function() {deepEqual( Stem("tjugutre"), "tjugutr");});
test("tjugutredje -> tjugutredj", function() {deepEqual( Stem("tjugutredje"), "tjugutredj");});
test("tjugutvå -> tjugutvå", function() {deepEqual( Stem("tjugutvå"), "tjugutvå");});
test("tjuguåren -> tjuguår", function() {deepEqual( Stem("tjuguåren"), "tjuguår");});
test("tjuguårig -> tjuguår", function() {deepEqual( Stem("tjuguårig"), "tjuguår");});
test("tjuguårige -> tjuguår", function() {deepEqual( Stem("tjuguårige"), "tjuguår");});
test("tjuguåtta -> tjuguåt", function() {deepEqual( Stem("tjuguåtta"), "tjuguåt");});
test("tjurpannan -> tjurpannan", function() {deepEqual( Stem("tjurpannan"), "tjurpannan");});
test("tjusad -> tjus", function() {deepEqual( Stem("tjusad"), "tjus");});
test("tjusade -> tjus", function() {deepEqual( Stem("tjusade"), "tjus");});
test("tjusande -> tjus", function() {deepEqual( Stem("tjusande"), "tjus");});
test("tjusats -> tjusat", function() {deepEqual( Stem("tjusats"), "tjusat");});
test("tjuserska -> tjusersk", function() {deepEqual( Stem("tjuserska"), "tjusersk");});
test("tjust -> tjust", function() {deepEqual( Stem("tjust"), "tjust");});
test("tjusta -> tjust", function() {deepEqual( Stem("tjusta"), "tjust");});
test("tjut -> tjut", function() {deepEqual( Stem("tjut"), "tjut");});
test("tjutande -> tjut", function() {deepEqual( Stem("tjutande"), "tjut");});
test("tjuter -> tjut", function() {deepEqual( Stem("tjuter"), "tjut");});
test("tjuv -> tjuv", function() {deepEqual( Stem("tjuv"), "tjuv");});
test("tjuvar -> tjuv", function() {deepEqual( Stem("tjuvar"), "tjuv");});
test("tjäll -> tjäll", function() {deepEqual( Stem("tjäll"), "tjäll");});
test("tjäna -> tjän", function() {deepEqual( Stem("tjäna"), "tjän");});
test("tjänade -> tjän", function() {deepEqual( Stem("tjänade"), "tjän");});
test("tjänande -> tjän", function() {deepEqual( Stem("tjänande"), "tjän");});
test("tjänar -> tjän", function() {deepEqual( Stem("tjänar"), "tjän");});
test("tjänare -> tjän", function() {deepEqual( Stem("tjänare"), "tjän");});
test("tjänaren -> tjän", function() {deepEqual( Stem("tjänaren"), "tjän");});
test("tjänares -> tjänar", function() {deepEqual( Stem("tjänares"), "tjänar");});
test("tjänarinna -> tjänarin", function() {deepEqual( Stem("tjänarinna"), "tjänarin");});
test("tjänarna -> tjän", function() {deepEqual( Stem("tjänarna"), "tjän");});
test("tjänat -> tjän", function() {deepEqual( Stem("tjänat"), "tjän");});
test("tjänlig -> tjän", function() {deepEqual( Stem("tjänlig"), "tjän");});
test("tjänliga -> tjän", function() {deepEqual( Stem("tjänliga"), "tjän");});
test("tjänligt -> tjän", function() {deepEqual( Stem("tjänligt"), "tjän");});
test("tjänst -> tjänst", function() {deepEqual( Stem("tjänst"), "tjänst");});
test("tjänstaktig -> tjänstakt", function() {deepEqual( Stem("tjänstaktig"), "tjänstakt");});
test("tjänstaktighet -> tjänstakt", function() {deepEqual( Stem("tjänstaktighet"), "tjänstakt");});
test("tjänsteande -> tjänste", function() {deepEqual( Stem("tjänsteande"), "tjänste");});
test("tjänsteflicka -> tjänsteflick", function() {deepEqual( Stem("tjänsteflicka"), "tjänsteflick");});
test("tjänsteflickans -> tjänsteflickan", function() {deepEqual( Stem("tjänsteflickans"), "tjänsteflickan");});
test("tjänstehjon -> tjänstehjon", function() {deepEqual( Stem("tjänstehjon"), "tjänstehjon");});
test("tjänsteman -> tjänsteman", function() {deepEqual( Stem("tjänsteman"), "tjänsteman");});
test("tjänstens -> tjänst", function() {deepEqual( Stem("tjänstens"), "tjänst");});
test("tjänsteplikter -> tjänsteplik", function() {deepEqual( Stem("tjänsteplikter"), "tjänsteplik");});
test("tjänstetid -> tjänstetid", function() {deepEqual( Stem("tjänstetid"), "tjänstetid");});
test("tjänstflic -> tjänstflic", function() {deepEqual( Stem("tjänstflic"), "tjänstflic");});
test("tjänstflicka -> tjänstflick", function() {deepEqual( Stem("tjänstflicka"), "tjänstflick");});
test("tjänstflickan -> tjänstflickan", function() {deepEqual( Stem("tjänstflickan"), "tjänstflickan");});
test("tjänstfolk -> tjänstfolk", function() {deepEqual( Stem("tjänstfolk"), "tjänstfolk");});
test("tjänstfolket -> tjänstfolket", function() {deepEqual( Stem("tjänstfolket"), "tjänstfolket");});
test("tjänstgjorde -> tjänstgjord", function() {deepEqual( Stem("tjänstgjorde"), "tjänstgjord");});
test("tjänstgör -> tjänstgör", function() {deepEqual( Stem("tjänstgör"), "tjänstgör");});
test("tjänstgöra -> tjänstgör", function() {deepEqual( Stem("tjänstgöra"), "tjänstgör");});
test("tjänstgöring -> tjänstgöring", function() {deepEqual( Stem("tjänstgöring"), "tjänstgöring");});
test("tjänstvilliga -> tjänstvil", function() {deepEqual( Stem("tjänstvilliga"), "tjänstvil");});
test("tjänstvilligt -> tjänstvil", function() {deepEqual( Stem("tjänstvilligt"), "tjänstvil");});
test("tjänte -> tjänt", function() {deepEqual( Stem("tjänte"), "tjänt");});
test("tjära -> tjär", function() {deepEqual( Stem("tjära"), "tjär");});
test("tjärn -> tjärn", function() {deepEqual( Stem("tjärn"), "tjärn");});
test("tjärnan -> tjärnan", function() {deepEqual( Stem("tjärnan"), "tjärnan");});
test("tjärnen -> tjärn", function() {deepEqual( Stem("tjärnen"), "tjärn");});
test("tjöt -> tjöt", function() {deepEqual( Stem("tjöt"), "tjöt");});
test("tjöto -> tjöto", function() {deepEqual( Stem("tjöto"), "tjöto");});
test("tmdvek -> tmdvek", function() {deepEqual( Stem("tmdvek"), "tmdvek");});
test("tnmma -> tnmma", function() {deepEqual( Stem("tnmma"), "tnmma");});
test("tnmt -> tnmt", function() {deepEqual( Stem("tnmt"), "tnmt");});
test("to -> to", function() {deepEqual( Stem("to"), "to");});
test("toalett -> toalet", function() {deepEqual( Stem("toalett"), "toalet");});
test("toalettbordet -> toalettbordet", function() {deepEqual( Stem("toalettbordet"), "toalettbordet");});
test("toaletten -> toalet", function() {deepEqual( Stem("toaletten"), "toalet");});
test("toalettens -> toalet", function() {deepEqual( Stem("toalettens"), "toalet");});
test("tobak -> tobak", function() {deepEqual( Stem("tobak"), "tobak");});
test("tobaksindustrien -> tobaksindustri", function() {deepEqual( Stem("tobaksindustrien"), "tobaksindustri");});
test("tobaksrullen -> tobaksrull", function() {deepEqual( Stem("tobaksrullen"), "tobaksrull");});
test("tobaksröken -> tobaksrök", function() {deepEqual( Stem("tobaksröken"), "tobaksrök");});
test("tocke -> tock", function() {deepEqual( Stem("tocke"), "tock");});
test("tocken -> tock", function() {deepEqual( Stem("tocken"), "tock");});
test("tockholm -> tockholm", function() {deepEqual( Stem("tockholm"), "tockholm");});
test("tockna -> tockn", function() {deepEqual( Stem("tockna"), "tockn");});
test("toddar -> todd", function() {deepEqual( Stem("toddar"), "todd");});
test("toddy -> toddy", function() {deepEqual( Stem("toddy"), "toddy");});
test("toddyar -> toddy", function() {deepEqual( Stem("toddyar"), "toddy");});
test("toddyglas -> toddygl", function() {deepEqual( Stem("toddyglas"), "toddygl");});
test("toffel -> toffel", function() {deepEqual( Stem("toffel"), "toffel");});
test("toffelklädda -> toffelkläd", function() {deepEqual( Stem("toffelklädda"), "toffelkläd");});
test("toffeln -> toffeln", function() {deepEqual( Stem("toffeln"), "toffeln");});
test("tofflor -> toffl", function() {deepEqual( Stem("tofflor"), "toffl");});
test("tofflorna -> toffl", function() {deepEqual( Stem("tofflorna"), "toffl");});
test("tofs -> tof", function() {deepEqual( Stem("tofs"), "tof");});
test("tofterna -> toft", function() {deepEqual( Stem("tofterna"), "toft");});
test("tofvade -> tofv", function() {deepEqual( Stem("tofvade"), "tofv");});
test("tog -> tog", function() {deepEqual( Stem("tog"), "tog");});
test("toga -> tog", function() {deepEqual( Stem("toga"), "tog");});
test("toge -> tog", function() {deepEqual( Stem("toge"), "tog");});
test("togo -> togo", function() {deepEqual( Stem("togo"), "togo");});
test("togs -> tog", function() {deepEqual( Stem("togs"), "tog");});
test("tok -> tok", function() {deepEqual( Stem("tok"), "tok");});
test("tokig -> tok", function() {deepEqual( Stem("tokig"), "tok");});
test("tokiga -> tok", function() {deepEqual( Stem("tokiga"), "tok");});
test("tokigt -> tok", function() {deepEqual( Stem("tokigt"), "tok");});
test("tokorna -> tok", function() {deepEqual( Stem("tokorna"), "tok");});
test("tokroligheter -> tokro", function() {deepEqual( Stem("tokroligheter"), "tokro");});
test("tolf -> tolf", function() {deepEqual( Stem("tolf"), "tolf");});
test("tolfte -> tolft", function() {deepEqual( Stem("tolfte"), "tolft");});
test("tolfva -> tolfv", function() {deepEqual( Stem("tolfva"), "tolfv");});
test("tolfvor -> tolfv", function() {deepEqual( Stem("tolfvor"), "tolfv");});
test("tolka -> tolk", function() {deepEqual( Stem("tolka"), "tolk");});
test("tolkade -> tolk", function() {deepEqual( Stem("tolkade"), "tolk");});
test("tolv -> tolv", function() {deepEqual( Stem("tolv"), "tolv");});
test("tolvskilling -> tolvskilling", function() {deepEqual( Stem("tolvskilling"), "tolvskilling");});
test("tom -> tom", function() {deepEqual( Stem("tom"), "tom");});
test("tomernas -> tom", function() {deepEqual( Stem("tomernas"), "tom");});
test("tomhet -> tom", function() {deepEqual( Stem("tomhet"), "tom");});
test("tomhetens -> tom", function() {deepEqual( Stem("tomhetens"), "tom");});
test("tomhänta -> tomhänt", function() {deepEqual( Stem("tomhänta"), "tomhänt");});
test("tomma -> tomm", function() {deepEqual( Stem("tomma"), "tomm");});
test("tomrum -> tomrum", function() {deepEqual( Stem("tomrum"), "tomrum");});
test("tomrummet -> tomrummet", function() {deepEqual( Stem("tomrummet"), "tomrummet");});
test("tomt -> tomt", function() {deepEqual( Stem("tomt"), "tomt");});
test("tomte -> tomt", function() {deepEqual( Stem("tomte"), "tomt");});
test("tomten -> tomt", function() {deepEqual( Stem("tomten"), "tomt");});
test("tomter -> tomt", function() {deepEqual( Stem("tomter"), "tomt");});
test("tomtormar -> tomtorm", function() {deepEqual( Stem("tomtormar"), "tomtorm");});
test("ton -> ton", function() {deepEqual( Stem("ton"), "ton");});
test("tona -> ton", function() {deepEqual( Stem("tona"), "ton");});
test("tonade -> ton", function() {deepEqual( Stem("tonade"), "ton");});
test("tonart -> tonart", function() {deepEqual( Stem("tonart"), "tonart");});
test("tonen -> ton", function() {deepEqual( Stem("tonen"), "ton");});
test("toner -> ton", function() {deepEqual( Stem("toner"), "ton");});
test("tonerna -> ton", function() {deepEqual( Stem("tonerna"), "ton");});
test("tonfall -> tonfall", function() {deepEqual( Stem("tonfall"), "tonfall");});
test("tonfallen -> tonfall", function() {deepEqual( Stem("tonfallen"), "tonfall");});
test("tonfallet -> tonfallet", function() {deepEqual( Stem("tonfallet"), "tonfallet");});
test("tongivande -> tongiv", function() {deepEqual( Stem("tongivande"), "tongiv");});
test("tongångar -> tongång", function() {deepEqual( Stem("tongångar"), "tongång");});
test("tonigt -> ton", function() {deepEqual( Stem("tonigt"), "ton");});
test("tons -> ton", function() {deepEqual( Stem("tons"), "ton");});
test("tonserie -> tonseri", function() {deepEqual( Stem("tonserie"), "tonseri");});
test("tonåren -> tonår", function() {deepEqual( Stem("tonåren"), "tonår");});
test("topp -> topp", function() {deepEqual( Stem("topp"), "topp");});
test("topparna -> topp", function() {deepEqual( Stem("topparna"), "topp");});
test("toquen -> toqu", function() {deepEqual( Stem("toquen"), "toqu");});
test("tor -> tor", function() {deepEqual( Stem("tor"), "tor");});
test("tora -> tor", function() {deepEqual( Stem("tora"), "tor");});
test("torblad -> torbl", function() {deepEqual( Stem("torblad"), "torbl");});
test("torblads -> torblad", function() {deepEqual( Stem("torblads"), "torblad");});
test("torcl -> torcl", function() {deepEqual( Stem("torcl"), "torcl");});
test("tord -> tord", function() {deepEqual( Stem("tord"), "tord");});
test("torde -> tord", function() {deepEqual( Stem("torde"), "tord");});
test("tordes -> tord", function() {deepEqual( Stem("tordes"), "tord");});
test("tords -> tord", function() {deepEqual( Stem("tords"), "tord");});
test("torens -> tor", function() {deepEqual( Stem("torens"), "tor");});
test("torfbänk -> torfbänk", function() {deepEqual( Stem("torfbänk"), "torfbänk");});
test("torftiga -> torft", function() {deepEqual( Stem("torftiga"), "torft");});
test("torftigt -> torft", function() {deepEqual( Stem("torftigt"), "torft");});
test("torfvorna -> torfv", function() {deepEqual( Stem("torfvorna"), "torfv");});
test("torg -> torg", function() {deepEqual( Stem("torg"), "torg");});
test("torgen -> torg", function() {deepEqual( Stem("torgen"), "torg");});
test("torget -> torget", function() {deepEqual( Stem("torget"), "torget");});
test("torgets -> torget", function() {deepEqual( Stem("torgets"), "torget");});
test("torgpriserna -> torgpris", function() {deepEqual( Stem("torgpriserna"), "torgpris");});
test("torka -> tork", function() {deepEqual( Stem("torka"), "tork");});
test("torkade -> tork", function() {deepEqual( Stem("torkade"), "tork");});
test("torkades -> tork", function() {deepEqual( Stem("torkades"), "tork");});
test("torkvinden -> torkvind", function() {deepEqual( Stem("torkvinden"), "torkvind");});
test("torn -> torn", function() {deepEqual( Stem("torn"), "torn");});
test("torna -> torn", function() {deepEqual( Stem("torna"), "torn");});
test("tornas -> torn", function() {deepEqual( Stem("tornas"), "torn");});
test("tornbergs -> tornberg", function() {deepEqual( Stem("tornbergs"), "tornberg");});
test("tornet -> tornet", function() {deepEqual( Stem("tornet"), "tornet");});
test("tornets -> tornet", function() {deepEqual( Stem("tornets"), "tornet");});
test("tornrum -> tornrum", function() {deepEqual( Stem("tornrum"), "tornrum");});
test("torns -> torn", function() {deepEqual( Stem("torns"), "torn");});
test("torp -> torp", function() {deepEqual( Stem("torp"), "torp");});
test("torparkök -> torparkök", function() {deepEqual( Stem("torparkök"), "torparkök");});
test("torparson -> torparson", function() {deepEqual( Stem("torparson"), "torparson");});
test("torr -> torr", function() {deepEqual( Stem("torr"), "torr");});
test("torra -> torr", function() {deepEqual( Stem("torra"), "torr");});
test("torrare -> torr", function() {deepEqual( Stem("torrare"), "torr");});
test("torrhosta -> torrhost", function() {deepEqual( Stem("torrhosta"), "torrhost");});
test("torrt -> torrt", function() {deepEqual( Stem("torrt"), "torrt");});
test("torsdag -> torsdag", function() {deepEqual( Stem("torsdag"), "torsdag");});
test("torsdagen -> torsdag", function() {deepEqual( Stem("torsdagen"), "torsdag");});
test("torsdags -> torsdag", function() {deepEqual( Stem("torsdags"), "torsdag");});
test("torsk -> torsk", function() {deepEqual( Stem("torsk"), "torsk");});
test("tortyr -> tortyr", function() {deepEqual( Stem("tortyr"), "tortyr");});
test("torv -> torv", function() {deepEqual( Stem("torv"), "torv");});
test("torva -> torv", function() {deepEqual( Stem("torva"), "torv");});
test("torvbänken -> torvbänk", function() {deepEqual( Stem("torvbänken"), "torvbänk");});
test("tosing -> tosing", function() {deepEqual( Stem("tosing"), "tosing");});
test("tosingen -> tosing", function() {deepEqual( Stem("tosingen"), "tosing");});
test("tossene -> tossen", function() {deepEqual( Stem("tossene"), "tossen");});
test("total -> total", function() {deepEqual( Stem("total"), "total");});
test("totalt -> totalt", function() {deepEqual( Stem("totalt"), "totalt");});
test("tous -> tous", function() {deepEqual( Stem("tous"), "tous");});
test("toute -> tout", function() {deepEqual( Stem("toute"), "tout");});
test("tovsjunga -> tovsjung", function() {deepEqual( Stem("tovsjunga"), "tovsjung");});
test("tra -> tra", function() {deepEqual( Stem("tra"), "tra");});
test("trad -> trad", function() {deepEqual( Stem("trad"), "trad");});
test("tradens -> trad", function() {deepEqual( Stem("tradens"), "trad");});
test("tradition -> tradition", function() {deepEqual( Stem("tradition"), "tradition");});
test("traditionens -> tradition", function() {deepEqual( Stem("traditionens"), "tradition");});
test("traditioner -> tradition", function() {deepEqual( Stem("traditioner"), "tradition");});
test("tradrötter -> tradröt", function() {deepEqual( Stem("tradrötter"), "tradröt");});
test("traffa -> traff", function() {deepEqual( Stem("traffa"), "traff");});
test("trafiken -> trafik", function() {deepEqual( Stem("trafiken"), "trafik");});
test("trage -> trag", function() {deepEqual( Stem("trage"), "trag");});
test("tragisk -> tragisk", function() {deepEqual( Stem("tragisk"), "tragisk");});
test("tragiska -> tragisk", function() {deepEqual( Stem("tragiska"), "tragisk");});
test("tragiskt -> tragisk", function() {deepEqual( Stem("tragiskt"), "tragisk");});
test("trak -> trak", function() {deepEqual( Stem("trak"), "trak");});
test("trakassera -> trakasser", function() {deepEqual( Stem("trakassera"), "trakasser");});
test("trakigt -> trak", function() {deepEqual( Stem("trakigt"), "trak");});
test("trakt -> trakt", function() {deepEqual( Stem("trakt"), "trakt");});
test("traktade -> trakt", function() {deepEqual( Stem("traktade"), "trakt");});
test("traktar -> trakt", function() {deepEqual( Stem("traktar"), "trakt");});
test("traktater -> traktat", function() {deepEqual( Stem("traktater"), "traktat");});
test("trakten -> trakt", function() {deepEqual( Stem("trakten"), "trakt");});
test("traktens -> trakt", function() {deepEqual( Stem("traktens"), "trakt");});
test("trakter -> trakt", function() {deepEqual( Stem("trakter"), "trakt");});
test("traktera -> trakter", function() {deepEqual( Stem("traktera"), "trakter");});
test("trakterade -> trakter", function() {deepEqual( Stem("trakterade"), "trakter");});
test("trakterna -> trakt", function() {deepEqual( Stem("trakterna"), "trakt");});
test("trampa -> tramp", function() {deepEqual( Stem("trampa"), "tramp");});
test("trampade -> tramp", function() {deepEqual( Stem("trampade"), "tramp");});
test("trampan -> trampan", function() {deepEqual( Stem("trampan"), "trampan");});
test("trampar -> tramp", function() {deepEqual( Stem("trampar"), "tramp");});
test("trampas -> tramp", function() {deepEqual( Stem("trampas"), "tramp");});
test("trampat -> tramp", function() {deepEqual( Stem("trampat"), "tramp");});
test("trampats -> trampat", function() {deepEqual( Stem("trampats"), "trampat");});
test("trampet -> trampet", function() {deepEqual( Stem("trampet"), "trampet");});
test("tran -> tran", function() {deepEqual( Stem("tran"), "tran");});
test("tranad -> tran", function() {deepEqual( Stem("tranad"), "tran");});
test("tranande -> tran", function() {deepEqual( Stem("tranande"), "tran");});
test("trancherade -> trancher", function() {deepEqual( Stem("trancherade"), "trancher");});
test("tranebergsbro -> tranebergsbro", function() {deepEqual( Stem("tranebergsbro"), "tranebergsbro");});
test("tranen -> tran", function() {deepEqual( Stem("tranen"), "tran");});
test("tranga -> trang", function() {deepEqual( Stem("tranga"), "trang");});
test("trankilisera -> trankiliser", function() {deepEqual( Stem("trankilisera"), "trankiliser");});
test("trankiliserad -> trankiliser", function() {deepEqual( Stem("trankiliserad"), "trankiliser");});
test("tranlampas -> tranlamp", function() {deepEqual( Stem("tranlampas"), "tranlamp");});
test("transport -> transport", function() {deepEqual( Stem("transport"), "transport");});
test("transporterad -> transporter", function() {deepEqual( Stem("transporterad"), "transporter");});
test("trap -> trap", function() {deepEqual( Stem("trap"), "trap");});
test("trapp -> trapp", function() {deepEqual( Stem("trapp"), "trapp");});
test("trappa -> trapp", function() {deepEqual( Stem("trappa"), "trapp");});
test("trappam -> trappam", function() {deepEqual( Stem("trappam"), "trappam");});
test("trappan -> trappan", function() {deepEqual( Stem("trappan"), "trappan");});
test("trappans -> trappan", function() {deepEqual( Stem("trappans"), "trappan");});
test("trappfönstren -> trappfönstr", function() {deepEqual( Stem("trappfönstren"), "trappfönstr");});
test("trappfönstret -> trappfönstret", function() {deepEqual( Stem("trappfönstret"), "trappfönstret");});
test("trappor -> trapp", function() {deepEqual( Stem("trappor"), "trapp");});
test("trapporna -> trapp", function() {deepEqual( Stem("trapporna"), "trapp");});
test("trapprummet -> trapprummet", function() {deepEqual( Stem("trapprummet"), "trapprummet");});
test("trapprummets -> trapprummet", function() {deepEqual( Stem("trapprummets"), "trapprummet");});
test("trappsteg -> trappsteg", function() {deepEqual( Stem("trappsteg"), "trappsteg");});
test("trappstegen -> trappsteg", function() {deepEqual( Stem("trappstegen"), "trappsteg");});
test("trappsteget -> trappsteget", function() {deepEqual( Stem("trappsteget"), "trappsteget");});
test("trasa -> tras", function() {deepEqual( Stem("trasa"), "tras");});
test("trasig -> tras", function() {deepEqual( Stem("trasig"), "tras");});
test("trasiga -> tras", function() {deepEqual( Stem("trasiga"), "tras");});
test("trasigt -> tras", function() {deepEqual( Stem("trasigt"), "tras");});
test("trask -> trask", function() {deepEqual( Stem("trask"), "trask");});
test("traskade -> trask", function() {deepEqual( Stem("traskade"), "trask");});
test("trasmatta -> trasmat", function() {deepEqual( Stem("trasmatta"), "trasmat");});
test("trasmattorna -> trasmat", function() {deepEqual( Stem("trasmattorna"), "trasmat");});
test("trasor -> tras", function() {deepEqual( Stem("trasor"), "tras");});
test("trasorna -> tras", function() {deepEqual( Stem("trasorna"), "tras");});
test("trassel -> trassel", function() {deepEqual( Stem("trassel"), "trassel");});
test("trassla -> trassl", function() {deepEqual( Stem("trassla"), "trassl");});
test("trasslade -> trassl", function() {deepEqual( Stem("trasslade"), "trassl");});
test("trasslar -> trassl", function() {deepEqual( Stem("trasslar"), "trassl");});
test("trassligt -> trass", function() {deepEqual( Stem("trassligt"), "trass");});
test("trast -> trast", function() {deepEqual( Stem("trast"), "trast");});
test("tratten -> tratt", function() {deepEqual( Stem("tratten"), "tratt");});
test("trav -> trav", function() {deepEqual( Stem("trav"), "trav");});
test("tre -> tre", function() {deepEqual( Stem("tre"), "tre");});
test("tredje -> tredj", function() {deepEqual( Stem("tredje"), "tredj");});
test("tredjedelar -> tredjedel", function() {deepEqual( Stem("tredjedelar"), "tredjedel");});
test("tredubbelt -> tredubbelt", function() {deepEqual( Stem("tredubbelt"), "tredubbelt");});
test("tredubbla -> tredubbl", function() {deepEqual( Stem("tredubbla"), "tredubbl");});
test("trefalt -> trefalt", function() {deepEqual( Stem("trefalt"), "trefalt");});
test("treflig -> tref", function() {deepEqual( Stem("treflig"), "tref");});
test("trefliga -> tref", function() {deepEqual( Stem("trefliga"), "tref");});
test("trefligare -> tref", function() {deepEqual( Stem("trefligare"), "tref");});
test("treflige -> tref", function() {deepEqual( Stem("treflige"), "tref");});
test("trefligt -> tref", function() {deepEqual( Stem("trefligt"), "tref");});
test("trefnad -> trefn", function() {deepEqual( Stem("trefnad"), "trefn");});
test("trehundra -> trehundr", function() {deepEqual( Stem("trehundra"), "trehundr");});
test("trekarl -> trekarl", function() {deepEqual( Stem("trekarl"), "trekarl");});
test("trekarlsvänner -> trekarlsvän", function() {deepEqual( Stem("trekarlsvänner"), "trekarlsvän");});
test("trenne -> trenn", function() {deepEqual( Stem("trenne"), "trenn");});
test("treriksdalerssedel -> treriksdalerssedel", function() {deepEqual( Stem("treriksdalerssedel"), "treriksdalerssedel");});
test("treskilling -> treskilling", function() {deepEqual( Stem("treskilling"), "treskilling");});
test("tresse -> tress", function() {deepEqual( Stem("tresse"), "tress");});
test("tretal -> tretal", function() {deepEqual( Stem("tretal"), "tretal");});
test("tretiden -> tretid", function() {deepEqual( Stem("tretiden"), "tretid");});
test("trettio -> trettio", function() {deepEqual( Stem("trettio"), "trettio");});
test("trettioarsaldern -> trettioarsald", function() {deepEqual( Stem("trettioarsaldern"), "trettioarsald");});
test("trettiofem -> trettiofem", function() {deepEqual( Stem("trettiofem"), "trettiofem");});
test("trettiofemte -> trettiofemt", function() {deepEqual( Stem("trettiofemte"), "trettiofemt");});
test("trettiosex -> trettiosex", function() {deepEqual( Stem("trettiosex"), "trettiosex");});
test("trettiotre -> trettiotr", function() {deepEqual( Stem("trettiotre"), "trettiotr");});
test("trettiotreåriga -> trettiotreår", function() {deepEqual( Stem("trettiotreåriga"), "trettiotreår");});
test("trettiotvå -> trettiotvå", function() {deepEqual( Stem("trettiotvå"), "trettiotvå");});
test("trettioårsåldern -> trettioårsåld", function() {deepEqual( Stem("trettioårsåldern"), "trettioårsåld");});
test("trettitre -> trettitr", function() {deepEqual( Stem("trettitre"), "trettitr");});
test("tretton -> tretton", function() {deepEqual( Stem("tretton"), "tretton");});
test("trettonde -> trettond", function() {deepEqual( Stem("trettonde"), "trettond");});
test("tretumsspik -> tretumsspik", function() {deepEqual( Stem("tretumsspik"), "tretumsspik");});
test("treva -> trev", function() {deepEqual( Stem("treva"), "trev");});
test("trevade -> trev", function() {deepEqual( Stem("trevade"), "trev");});
test("trevande -> trev", function() {deepEqual( Stem("trevande"), "trev");});
test("trevar -> trev", function() {deepEqual( Stem("trevar"), "trev");});
test("trevlig -> trev", function() {deepEqual( Stem("trevlig"), "trev");});
test("trevliga -> trev", function() {deepEqual( Stem("trevliga"), "trev");});
test("trevligare -> trev", function() {deepEqual( Stem("trevligare"), "trev");});
test("trevligaste -> trev", function() {deepEqual( Stem("trevligaste"), "trev");});
test("trevlige -> trev", function() {deepEqual( Stem("trevlige"), "trev");});
test("trevligheten -> trev", function() {deepEqual( Stem("trevligheten"), "trev");});
test("trevligt -> trev", function() {deepEqual( Stem("trevligt"), "trev");});
test("trevnad -> trevn", function() {deepEqual( Stem("trevnad"), "trevn");});
test("treåriga -> treår", function() {deepEqual( Stem("treåriga"), "treår");});
test("treårsgamla -> treårsgaml", function() {deepEqual( Stem("treårsgamla"), "treårsgaml");});
test("triangel -> triangel", function() {deepEqual( Stem("triangel"), "triangel");});
test("triangeln -> triangeln", function() {deepEqual( Stem("triangeln"), "triangeln");});
test("triangelns -> triangeln", function() {deepEqual( Stem("triangelns"), "triangeln");});
test("tribun -> tribun", function() {deepEqual( Stem("tribun"), "tribun");});
test("trifdes -> trifd", function() {deepEqual( Stem("trifdes"), "trifd");});
test("trifs -> trif", function() {deepEqual( Stem("trifs"), "trif");});
test("trifvas -> trifv", function() {deepEqual( Stem("trifvas"), "trifv");});
test("trikå -> trikå", function() {deepEqual( Stem("trikå"), "trikå");});
test("trikåer -> trikå", function() {deepEqual( Stem("trikåer"), "trikå");});
test("trilla -> trill", function() {deepEqual( Stem("trilla"), "trill");});
test("trillade -> trill", function() {deepEqual( Stem("trillade"), "trill");});
test("trinde -> trind", function() {deepEqual( Stem("trinde"), "trind");});
test("trippa -> tripp", function() {deepEqual( Stem("trippa"), "tripp");});
test("trippade -> tripp", function() {deepEqual( Stem("trippade"), "tripp");});
test("trippande -> tripp", function() {deepEqual( Stem("trippande"), "tripp");});
test("trippat -> tripp", function() {deepEqual( Stem("trippat"), "tripp");});
test("trist -> trist", function() {deepEqual( Stem("trist"), "trist");});
test("triste -> trist", function() {deepEqual( Stem("triste"), "trist");});
test("triumf -> triumf", function() {deepEqual( Stem("triumf"), "triumf");});
test("triumfer -> triumf", function() {deepEqual( Stem("triumfer"), "triumf");});
test("triumferade -> triumfer", function() {deepEqual( Stem("triumferade"), "triumfer");});
test("triumferande -> triumfer", function() {deepEqual( Stem("triumferande"), "triumfer");});
test("trivas -> triv", function() {deepEqual( Stem("trivas"), "triv");});
test("trivdes -> trivd", function() {deepEqual( Stem("trivdes"), "trivd");});
test("trivs -> triv", function() {deepEqual( Stem("trivs"), "triv");});
test("trivsamt -> trivsamt", function() {deepEqual( Stem("trivsamt"), "trivsamt");});
test("trivts -> trivt", function() {deepEqual( Stem("trivts"), "trivt");});
test("trn -> trn", function() {deepEqual( Stem("trn"), "trn");});
test("tro -> tro", function() {deepEqual( Stem("tro"), "tro");});
test("troddc -> troddc", function() {deepEqual( Stem("troddc"), "troddc");});
test("trodde -> trodd", function() {deepEqual( Stem("trodde"), "trodd");});
test("troddes -> trodd", function() {deepEqual( Stem("troddes"), "trodd");});
test("troende -> troend", function() {deepEqual( Stem("troende"), "troend");});
test("troenden -> troend", function() {deepEqual( Stem("troenden"), "troend");});
test("trofast -> trof", function() {deepEqual( Stem("trofast"), "trof");});
test("trofasta -> trofast", function() {deepEqual( Stem("trofasta"), "trofast");});
test("trofaste -> trof", function() {deepEqual( Stem("trofaste"), "trof");});
test("trofasu -> trofasu", function() {deepEqual( Stem("trofasu"), "trofasu");});
test("trogen -> trog", function() {deepEqual( Stem("trogen"), "trog");});
test("troget -> troget", function() {deepEqual( Stem("troget"), "troget");});
test("trogna -> trogn", function() {deepEqual( Stem("trogna"), "trogn");});
test("trogne -> trogn", function() {deepEqual( Stem("trogne"), "trogn");});
test("trohet -> trohet", function() {deepEqual( Stem("trohet"), "trohet");});
test("troheten -> trohet", function() {deepEqual( Stem("troheten"), "trohet");});
test("trohjertade -> trohjert", function() {deepEqual( Stem("trohjertade"), "trohjert");});
test("trohjärtade -> trohjärt", function() {deepEqual( Stem("trohjärtade"), "trohjärt");});
test("trohjärtat -> trohjärt", function() {deepEqual( Stem("trohjärtat"), "trohjärt");});
test("troligaste -> trol", function() {deepEqual( Stem("troligaste"), "trol");});
test("troligen -> trol", function() {deepEqual( Stem("troligen"), "trol");});
test("troligt -> trol", function() {deepEqual( Stem("troligt"), "trol");});
test("troligtvis -> troligtvis", function() {deepEqual( Stem("troligtvis"), "troligtvis");});
test("troll -> troll", function() {deepEqual( Stem("troll"), "troll");});
test("trolla -> troll", function() {deepEqual( Stem("trolla"), "troll");});
test("trollade -> troll", function() {deepEqual( Stem("trollade"), "troll");});
test("trollats -> trollat", function() {deepEqual( Stem("trollats"), "trollat");});
test("trolleri -> trolleri", function() {deepEqual( Stem("trolleri"), "trolleri");});
test("trolleriprofessorernas -> trolleriprofessor", function() {deepEqual( Stem("trolleriprofessorernas"), "trolleriprofessor");});
test("trollet -> trollet", function() {deepEqual( Stem("trollet"), "trollet");});
test("trollgubben -> trollgubb", function() {deepEqual( Stem("trollgubben"), "trollgubb");});
test("trollguldet -> trollguldet", function() {deepEqual( Stem("trollguldet"), "trollguldet");});
test("trollkarl -> trollkarl", function() {deepEqual( Stem("trollkarl"), "trollkarl");});
test("trollmans -> trollman", function() {deepEqual( Stem("trollmans"), "trollman");});
test("trollmor -> trollm", function() {deepEqual( Stem("trollmor"), "trollm");});
test("trollpacka -> trollpack", function() {deepEqual( Stem("trollpacka"), "trollpack");});
test("trollsagan -> trollsagan", function() {deepEqual( Stem("trollsagan"), "trollsagan");});
test("trollspegel -> trollspegel", function() {deepEqual( Stem("trollspegel"), "trollspegel");});
test("trolofning -> trolofning", function() {deepEqual( Stem("trolofning"), "trolofning");});
test("trolofvad -> trolofv", function() {deepEqual( Stem("trolofvad"), "trolofv");});
test("trolos -> trolo", function() {deepEqual( Stem("trolos"), "trolo");});
test("trolsk -> trolsk", function() {deepEqual( Stem("trolsk"), "trolsk");});
test("trolska -> trolsk", function() {deepEqual( Stem("trolska"), "trolsk");});
test("trolskt -> trolsk", function() {deepEqual( Stem("trolskt"), "trolsk");});
test("tron -> tron", function() {deepEqual( Stem("tron"), "tron");});
test("trona -> tron", function() {deepEqual( Stem("trona"), "tron");});
test("tronade -> tron", function() {deepEqual( Stem("tronade"), "tron");});
test("tronen -> tron", function() {deepEqual( Stem("tronen"), "tron");});
test("tronens -> tron", function() {deepEqual( Stem("tronens"), "tron");});
test("tronföljare -> tronfölj", function() {deepEqual( Stem("tronföljare"), "tronfölj");});
test("trons -> tron", function() {deepEqual( Stem("trons"), "tron");});
test("tror -> tror", function() {deepEqual( Stem("tror"), "tror");});
test("tros -> tros", function() {deepEqual( Stem("tros"), "tros");});
test("trosartikel -> trosartikel", function() {deepEqual( Stem("trosartikel"), "trosartikel");});
test("trosartiklar -> trosartikl", function() {deepEqual( Stem("trosartiklar"), "trosartikl");});
test("trostande -> trost", function() {deepEqual( Stem("trostande"), "trost");});
test("trotjänaren -> trotjän", function() {deepEqual( Stem("trotjänaren"), "trotjän");});
test("trots -> trot", function() {deepEqual( Stem("trots"), "trot");});
test("trotsa -> trots", function() {deepEqual( Stem("trotsa"), "trots");});
test("trotsande -> trots", function() {deepEqual( Stem("trotsande"), "trots");});
test("trotsat -> trots", function() {deepEqual( Stem("trotsat"), "trots");});
test("trotsig -> trots", function() {deepEqual( Stem("trotsig"), "trots");});
test("trotsiga -> trots", function() {deepEqual( Stem("trotsiga"), "trots");});
test("trotsigt -> trots", function() {deepEqual( Stem("trotsigt"), "trots");});
test("trott -> trott", function() {deepEqual( Stem("trott"), "trott");});
test("trottoaren -> trotto", function() {deepEqual( Stem("trottoaren"), "trotto");});
test("trottoarerna -> trottoar", function() {deepEqual( Stem("trottoarerna"), "trottoar");});
test("trottoarkanten -> trottoarkant", function() {deepEqual( Stem("trottoarkanten"), "trottoarkant");});
test("trovärdig -> trovärd", function() {deepEqual( Stem("trovärdig"), "trovärd");});
test("trovärdiga -> trovärd", function() {deepEqual( Stem("trovärdiga"), "trovärd");});
test("trovärdigheten -> trovärd", function() {deepEqual( Stem("trovärdigheten"), "trovärd");});
test("trovärdigt -> trovärd", function() {deepEqual( Stem("trovärdigt"), "trovärd");});
test("trubbig -> trubb", function() {deepEqual( Stem("trubbig"), "trubb");});
test("trubbiga -> trubb", function() {deepEqual( Stem("trubbiga"), "trubb");});
test("trubbigt -> trubb", function() {deepEqual( Stem("trubbigt"), "trubb");});
test("trubbnäsa -> trubbnäs", function() {deepEqual( Stem("trubbnäsa"), "trubbnäs");});
test("trugade -> trug", function() {deepEqual( Stem("trugade"), "trug");});
test("trugat -> trug", function() {deepEqual( Stem("trugat"), "trug");});
test("trumma -> trumm", function() {deepEqual( Stem("trumma"), "trumm");});
test("trummade -> trumm", function() {deepEqual( Stem("trummade"), "trumm");});
test("trumman -> trumman", function() {deepEqual( Stem("trumman"), "trumman");});
test("trummar -> trumm", function() {deepEqual( Stem("trummar"), "trumm");});
test("trumpen -> trump", function() {deepEqual( Stem("trumpen"), "trump");});
test("trumpet -> trumpet", function() {deepEqual( Stem("trumpet"), "trumpet");});
test("trumpeten -> trumpet", function() {deepEqual( Stem("trumpeten"), "trumpet");});
test("trumslag -> trumslag", function() {deepEqual( Stem("trumslag"), "trumslag");});
test("trupp -> trupp", function() {deepEqual( Stem("trupp"), "trupp");});
test("truppen -> trupp", function() {deepEqual( Stem("truppen"), "trupp");});
test("trupper -> trupp", function() {deepEqual( Stem("trupper"), "trupp");});
test("trut -> trut", function() {deepEqual( Stem("trut"), "trut");});
test("truten -> trut", function() {deepEqual( Stem("truten"), "trut");});
test("trvckning -> trvckning", function() {deepEqual( Stem("trvckning"), "trvckning");});
test("try -> try", function() {deepEqual( Stem("try"), "try");});
test("tryck -> tryck", function() {deepEqual( Stem("tryck"), "tryck");});
test("trycka -> tryck", function() {deepEqual( Stem("trycka"), "tryck");});
test("tryckande -> tryck", function() {deepEqual( Stem("tryckande"), "tryck");});
test("trycker -> tryck", function() {deepEqual( Stem("trycker"), "tryck");});
test("trycket -> trycket", function() {deepEqual( Stem("trycket"), "trycket");});
test("tryckning -> tryckning", function() {deepEqual( Stem("tryckning"), "tryckning");});
test("trycksvärta -> trycksvärt", function() {deepEqual( Stem("trycksvärta"), "trycksvärt");});
test("tryckt -> tryck", function() {deepEqual( Stem("tryckt"), "tryck");});
test("tryckta -> tryck", function() {deepEqual( Stem("tryckta"), "tryck");});
test("tryckte -> tryck", function() {deepEqual( Stem("tryckte"), "tryck");});
test("trycktes -> tryck", function() {deepEqual( Stem("trycktes"), "tryck");});
test("trygg -> trygg", function() {deepEqual( Stem("trygg"), "trygg");});
test("trygga -> trygg", function() {deepEqual( Stem("trygga"), "trygg");});
test("tryggad -> trygg", function() {deepEqual( Stem("tryggad"), "trygg");});
test("tryggaste -> trygg", function() {deepEqual( Stem("tryggaste"), "trygg");});
test("trygghet -> trygg", function() {deepEqual( Stem("trygghet"), "trygg");});
test("tryggt -> trygg", function() {deepEqual( Stem("tryggt"), "trygg");});
test("tryta -> tryt", function() {deepEqual( Stem("tryta"), "tryt");});
test("trä -> trä", function() {deepEqual( Stem("trä"), "trä");});
test("träarkitektur -> träarkitektur", function() {deepEqual( Stem("träarkitektur"), "träarkitektur");});
test("träben -> träb", function() {deepEqual( Stem("träben"), "träb");});
test("träbryggan -> träbryggan", function() {deepEqual( Stem("träbryggan"), "träbryggan");});
test("träbänk -> träbänk", function() {deepEqual( Stem("träbänk"), "träbänk");});
test("träck -> träck", function() {deepEqual( Stem("träck"), "träck");});
test("träd -> träd", function() {deepEqual( Stem("träd"), "träd");});
test("träda -> träd", function() {deepEqual( Stem("träda"), "träd");});
test("trädde -> trädd", function() {deepEqual( Stem("trädde"), "trädd");});
test("träden -> träd", function() {deepEqual( Stem("träden"), "träd");});
test("trädens -> träd", function() {deepEqual( Stem("trädens"), "träd");});
test("trädet -> trädet", function() {deepEqual( Stem("trädet"), "trädet");});
test("trädgarden -> trädgard", function() {deepEqual( Stem("trädgarden"), "trädgard");});
test("trädgren -> trädgr", function() {deepEqual( Stem("trädgren"), "trädgr");});
test("trädgrenar -> trädgren", function() {deepEqual( Stem("trädgrenar"), "trädgren");});
test("trädgård -> trädgård", function() {deepEqual( Stem("trädgård"), "trädgård");});
test("trädgårdarna -> trädgård", function() {deepEqual( Stem("trädgårdarna"), "trädgård");});
test("trädgården -> trädgård", function() {deepEqual( Stem("trädgården"), "trädgård");});
test("trädgårdens -> trädgård", function() {deepEqual( Stem("trädgårdens"), "trädgård");});
test("trädgårdsfönster -> trädgårdsfönst", function() {deepEqual( Stem("trädgårdsfönster"), "trädgårdsfönst");});
test("trädgårdsmästarebvggningen -> trädgårdsmästarebvggning", function() {deepEqual( Stem("trädgårdsmästarebvggningen"), "trädgårdsmästarebvggning");});
test("trädgårdsmäster -> trädgårdsmäst", function() {deepEqual( Stem("trädgårdsmäster"), "trädgårdsmäst");});
test("trädgårdssoffa -> trädgårdssoff", function() {deepEqual( Stem("trädgårdssoffa"), "trädgårdssoff");});
test("trädgårdstäppa -> trädgårdstäpp", function() {deepEqual( Stem("trädgårdstäppa"), "trädgårdstäpp");});
test("trädgårdstäppan -> trädgårdstäppan", function() {deepEqual( Stem("trädgårdstäppan"), "trädgårdstäppan");});
test("trädknapparne -> trädknapp", function() {deepEqual( Stem("trädknapparne"), "trädknapp");});
test("trädkrona -> trädkron", function() {deepEqual( Stem("trädkrona"), "trädkron");});
test("trädkronorna -> trädkron", function() {deepEqual( Stem("trädkronorna"), "trädkron");});
test("trädkronornas -> trädkron", function() {deepEqual( Stem("trädkronornas"), "trädkron");});
test("trädrot -> trädrot", function() {deepEqual( Stem("trädrot"), "trädrot");});
test("trädstam -> trädstam", function() {deepEqual( Stem("trädstam"), "trädstam");});
test("trädstammen -> trädstamm", function() {deepEqual( Stem("trädstammen"), "trädstamm");});
test("trädt -> trädt", function() {deepEqual( Stem("trädt"), "trädt");});
test("trädtopparna -> trädtopp", function() {deepEqual( Stem("trädtopparna"), "trädtopp");});
test("träffa -> träff", function() {deepEqual( Stem("träffa"), "träff");});
test("träffad -> träff", function() {deepEqual( Stem("träffad"), "träff");});
test("träffade -> träff", function() {deepEqual( Stem("träffade"), "träff");});
test("träffades -> träff", function() {deepEqual( Stem("träffades"), "träff");});
test("träffar -> träff", function() {deepEqual( Stem("träffar"), "träff");});
test("träffas -> träff", function() {deepEqual( Stem("träffas"), "träff");});
test("träffat -> träff", function() {deepEqual( Stem("träffat"), "träff");});
test("träffats -> träffat", function() {deepEqual( Stem("träffats"), "träffat");});
test("träfiade -> träfi", function() {deepEqual( Stem("träfiade"), "träfi");});
test("trägen -> träg", function() {deepEqual( Stem("trägen"), "träg");});
test("träget -> träget", function() {deepEqual( Stem("träget"), "träget");});
test("trägna -> trägn", function() {deepEqual( Stem("trägna"), "trägn");});
test("trägnast -> trägn", function() {deepEqual( Stem("trägnast"), "trägn");});
test("trähinken -> trähink", function() {deepEqual( Stem("trähinken"), "trähink");});
test("trähus -> trähus", function() {deepEqual( Stem("trähus"), "trähus");});
test("träla -> träl", function() {deepEqual( Stem("träla"), "träl");});
test("trälar -> träl", function() {deepEqual( Stem("trälar"), "träl");});
test("trälinna -> trälin", function() {deepEqual( Stem("trälinna"), "trälin");});
test("trällif -> trällif", function() {deepEqual( Stem("trällif"), "trällif");});
test("trälåda -> trälåd", function() {deepEqual( Stem("trälåda"), "trälåd");});
test("trälådan -> trälådan", function() {deepEqual( Stem("trälådan"), "trälådan");});
test("trän -> trän", function() {deepEqual( Stem("trän"), "trän");});
test("tränga -> träng", function() {deepEqual( Stem("tränga"), "träng");});
test("trängande -> träng", function() {deepEqual( Stem("trängande"), "träng");});
test("trängde -> träng", function() {deepEqual( Stem("trängde"), "träng");});
test("trängdes -> träng", function() {deepEqual( Stem("trängdes"), "träng");});
test("tränger -> träng", function() {deepEqual( Stem("tränger"), "träng");});
test("trängre -> trängr", function() {deepEqual( Stem("trängre"), "trängr");});
test("trängs -> träng", function() {deepEqual( Stem("trängs"), "träng");});
test("trängseln -> trängseln", function() {deepEqual( Stem("trängseln"), "trängseln");});
test("trängt -> träng", function() {deepEqual( Stem("trängt"), "träng");});
test("tränkbar -> tränkb", function() {deepEqual( Stem("tränkbar"), "tränkb");});
test("träsk -> träsk", function() {deepEqual( Stem("träsk"), "träsk");});
test("träsnitt -> träsnit", function() {deepEqual( Stem("träsnitt"), "träsnit");});
test("trästubbe -> trästubb", function() {deepEqual( Stem("trästubbe"), "trästubb");});
test("träta -> trät", function() {deepEqual( Stem("träta"), "trät");});
test("trätobroder -> trätobrod", function() {deepEqual( Stem("trätobroder"), "trätobrod");});
test("trätt -> trätt", function() {deepEqual( Stem("trätt"), "trätt");});
test("tråd -> tråd", function() {deepEqual( Stem("tråd"), "tråd");});
test("trådar -> tråd", function() {deepEqual( Stem("trådar"), "tråd");});
test("trådarna -> tråd", function() {deepEqual( Stem("trådarna"), "tråd");});
test("tråden -> tråd", function() {deepEqual( Stem("tråden"), "tråd");});
test("trådgårdar -> trådgård", function() {deepEqual( Stem("trådgårdar"), "trådgård");});
test("trådnystan -> trådnystan", function() {deepEqual( Stem("trådnystan"), "trådnystan");});
test("trådsliten -> trådslit", function() {deepEqual( Stem("trådsliten"), "trådslit");});
test("trådsmala -> trådsmal", function() {deepEqual( Stem("trådsmala"), "trådsmal");});
test("tråget -> tråget", function() {deepEqual( Stem("tråget"), "tråget");});
test("tråka -> tråk", function() {deepEqual( Stem("tråka"), "tråk");});
test("tråkig -> tråk", function() {deepEqual( Stem("tråkig"), "tråk");});
test("tråkiga -> tråk", function() {deepEqual( Stem("tråkiga"), "tråk");});
test("tråkigaste -> tråk", function() {deepEqual( Stem("tråkigaste"), "tråk");});
test("tråkigt -> tråk", function() {deepEqual( Stem("tråkigt"), "tråk");});
test("tråna -> trån", function() {deepEqual( Stem("tråna"), "trån");});
test("trånad -> trån", function() {deepEqual( Stem("trånad"), "trån");});
test("trånade -> trån", function() {deepEqual( Stem("trånade"), "trån");});
test("trånande -> trån", function() {deepEqual( Stem("trånande"), "trån");});
test("trång -> trång", function() {deepEqual( Stem("trång"), "trång");});
test("trånga -> trång", function() {deepEqual( Stem("trånga"), "trång");});
test("trångaste -> trång", function() {deepEqual( Stem("trångaste"), "trång");});
test("trångmål -> trångmål", function() {deepEqual( Stem("trångmål"), "trångmål");});
test("trångt -> trång", function() {deepEqual( Stem("trångt"), "trång");});
test("trånmatta -> trånmat", function() {deepEqual( Stem("trånmatta"), "trånmat");});
test("trånsjuk -> trånsjuk", function() {deepEqual( Stem("trånsjuk"), "trånsjuk");});
test("trög -> trög", function() {deepEqual( Stem("trög"), "trög");});
test("tröga -> trög", function() {deepEqual( Stem("tröga"), "trög");});
test("tröge -> trög", function() {deepEqual( Stem("tröge"), "trög");});
test("tröghet -> trög", function() {deepEqual( Stem("tröghet"), "trög");});
test("trögtänkt -> trögtänk", function() {deepEqual( Stem("trögtänkt"), "trögtänk");});
test("tröja -> tröj", function() {deepEqual( Stem("tröja"), "tröj");});
test("tröjan -> tröjan", function() {deepEqual( Stem("tröjan"), "tröjan");});
test("tröjor -> tröj", function() {deepEqual( Stem("tröjor"), "tröj");});
test("tröska -> trösk", function() {deepEqual( Stem("tröska"), "trösk");});
test("tröskaren -> trösk", function() {deepEqual( Stem("tröskaren"), "trösk");});
test("tröskel -> tröskel", function() {deepEqual( Stem("tröskel"), "tröskel");});
test("tröskeln -> tröskeln", function() {deepEqual( Stem("tröskeln"), "tröskeln");});
test("tröst -> tröst", function() {deepEqual( Stem("tröst"), "tröst");});
test("trösta -> tröst", function() {deepEqual( Stem("trösta"), "tröst");});
test("tröstad -> tröst", function() {deepEqual( Stem("tröstad"), "tröst");});
test("tröstade -> tröst", function() {deepEqual( Stem("tröstade"), "tröst");});
test("tröstande -> tröst", function() {deepEqual( Stem("tröstande"), "tröst");});
test("tröstar -> tröst", function() {deepEqual( Stem("tröstar"), "tröst");});
test("tröstat -> tröst", function() {deepEqual( Stem("tröstat"), "tröst");});
test("trösten -> tröst", function() {deepEqual( Stem("trösten"), "tröst");});
test("tröstfull -> tröstfull", function() {deepEqual( Stem("tröstfull"), "tröstfull");});
test("tröstfulla -> tröstfull", function() {deepEqual( Stem("tröstfulla"), "tröstfull");});
test("tröstlös -> tröstlös", function() {deepEqual( Stem("tröstlös"), "tröstlös");});
test("tröstlösa -> tröstlös", function() {deepEqual( Stem("tröstlösa"), "tröstlös");});
test("tröstlöst -> tröstlös", function() {deepEqual( Stem("tröstlöst"), "tröstlös");});
test("tröstrika -> tröstrik", function() {deepEqual( Stem("tröstrika"), "tröstrik");});
test("tröstrike -> tröstrik", function() {deepEqual( Stem("tröstrike"), "tröstrik");});
test("tröstrikt -> tröstrik", function() {deepEqual( Stem("tröstrikt"), "tröstrik");});
test("trött -> trött", function() {deepEqual( Stem("trött"), "trött");});
test("trötta -> trött", function() {deepEqual( Stem("trötta"), "trött");});
test("tröttade -> trött", function() {deepEqual( Stem("tröttade"), "trött");});
test("tröttande -> trött", function() {deepEqual( Stem("tröttande"), "trött");});
test("tröttar -> trött", function() {deepEqual( Stem("tröttar"), "trött");});
test("tröttat -> trött", function() {deepEqual( Stem("tröttat"), "trött");});
test("trötte -> trött", function() {deepEqual( Stem("trötte"), "trött");});
test("tröttflugen -> tröttflug", function() {deepEqual( Stem("tröttflugen"), "tröttflug");});
test("trötthet -> trött", function() {deepEqual( Stem("trötthet"), "trött");});
test("tröttna -> tröttn", function() {deepEqual( Stem("tröttna"), "tröttn");});
test("tröttnade -> tröttn", function() {deepEqual( Stem("tröttnade"), "tröttn");});
test("tröttnande -> tröttn", function() {deepEqual( Stem("tröttnande"), "tröttn");});
test("tröttnat -> tröttn", function() {deepEqual( Stem("tröttnat"), "tröttn");});
test("tröttsam -> tröttsam", function() {deepEqual( Stem("tröttsam"), "tröttsam");});
test("tröttsamma -> tröttsamm", function() {deepEqual( Stem("tröttsamma"), "tröttsamm");});
test("tröttsamt -> tröttsamt", function() {deepEqual( Stem("tröttsamt"), "tröttsamt");});
test("ts -> ts", function() {deepEqual( Stem("ts"), "ts");});
test("tt -> tt", function() {deepEqual( Stem("tt"), "tt");});
test("tta -> tta", function() {deepEqual( Stem("tta"), "tta");});
test("ttm -> ttm", function() {deepEqual( Stem("ttm"), "ttm");});
test("tu -> tu", function() {deepEqual( Stem("tu"), "tu");});
test("tug -> tug", function() {deepEqual( Stem("tug"), "tug");});
test("tugga -> tugg", function() {deepEqual( Stem("tugga"), "tugg");});
test("tuggade -> tugg", function() {deepEqual( Stem("tuggade"), "tugg");});
test("tuggan -> tuggan", function() {deepEqual( Stem("tuggan"), "tuggan");});
test("tuggande -> tugg", function() {deepEqual( Stem("tuggande"), "tugg");});
test("tuggar -> tugg", function() {deepEqual( Stem("tuggar"), "tugg");});
test("tukt -> tukt", function() {deepEqual( Stem("tukt"), "tukt");});
test("tukta -> tukt", function() {deepEqual( Stem("tukta"), "tukt");});
test("tuktade -> tukt", function() {deepEqual( Stem("tuktade"), "tukt");});
test("tuktar -> tukt", function() {deepEqual( Stem("tuktar"), "tukt");});
test("tuktodikten -> tuktodik", function() {deepEqual( Stem("tuktodikten"), "tuktodik");});
test("tuktomästare -> tuktomäst", function() {deepEqual( Stem("tuktomästare"), "tuktomäst");});
test("tull -> tull", function() {deepEqual( Stem("tull"), "tull");});
test("tullar -> tull", function() {deepEqual( Stem("tullar"), "tull");});
test("tullen -> tull", function() {deepEqual( Stem("tullen"), "tull");});
test("tullfri -> tullfri", function() {deepEqual( Stem("tullfri"), "tullfri");});
test("tullförsnillning -> tullförsnillning", function() {deepEqual( Stem("tullförsnillning"), "tullförsnillning");});
test("tullförvaltare -> tullförvalt", function() {deepEqual( Stem("tullförvaltare"), "tullförvalt");});
test("tullförvaltaren -> tullförvalt", function() {deepEqual( Stem("tullförvaltaren"), "tullförvalt");});
test("tullförvaltarens -> tullförvalt", function() {deepEqual( Stem("tullförvaltarens"), "tullförvalt");});
test("tullförvaltarn -> tullförvaltarn", function() {deepEqual( Stem("tullförvaltarn"), "tullförvaltarn");});
test("tullförvaltarns -> tullförvaltarn", function() {deepEqual( Stem("tullförvaltarns"), "tullförvaltarn");});
test("tullförvalterskan -> tullförvalterskan", function() {deepEqual( Stem("tullförvalterskan"), "tullförvalterskan");});
test("tullförvalterskans -> tullförvalterskan", function() {deepEqual( Stem("tullförvalterskans"), "tullförvalterskan");});
test("tulljakt -> tulljak", function() {deepEqual( Stem("tulljakt"), "tulljak");});
test("tulljakten -> tulljak", function() {deepEqual( Stem("tulljakten"), "tulljak");});
test("tulljaktens -> tulljak", function() {deepEqual( Stem("tulljaktens"), "tulljak");});
test("tullkammare -> tullkamm", function() {deepEqual( Stem("tullkammare"), "tullkamm");});
test("tullkammaren -> tullkamm", function() {deepEqual( Stem("tullkammaren"), "tullkamm");});
test("tullkammarn -> tullkammarn", function() {deepEqual( Stem("tullkammarn"), "tullkammarn");});
test("tullskrifvare -> tullskrifv", function() {deepEqual( Stem("tullskrifvare"), "tullskrifv");});
test("tullskrifvaren -> tullskrifv", function() {deepEqual( Stem("tullskrifvaren"), "tullskrifv");});
test("tullsnok -> tullsnok", function() {deepEqual( Stem("tullsnok"), "tullsnok");});
test("tullsnokarne -> tullsnok", function() {deepEqual( Stem("tullsnokarne"), "tullsnok");});
test("tullstyrelsen -> tullstyr", function() {deepEqual( Stem("tullstyrelsen"), "tullstyr");});
test("tulltjensteman -> tulltjensteman", function() {deepEqual( Stem("tulltjensteman"), "tulltjensteman");});
test("tullvaktmästare -> tullvaktmäst", function() {deepEqual( Stem("tullvaktmästare"), "tullvaktmäst");});
test("tullvaktmästarens -> tullvaktmäst", function() {deepEqual( Stem("tullvaktmästarens"), "tullvaktmäst");});
test("tullväsendet -> tullväsendet", function() {deepEqual( Stem("tullväsendet"), "tullväsendet");});
test("tulma -> tulm", function() {deepEqual( Stem("tulma"), "tulm");});
test("tulpaner -> tulpan", function() {deepEqual( Stem("tulpaner"), "tulpan");});
test("tultade -> tult", function() {deepEqual( Stem("tultade"), "tult");});
test("tulubb -> tulubb", function() {deepEqual( Stem("tulubb"), "tulubb");});
test("tulubben -> tulubb", function() {deepEqual( Stem("tulubben"), "tulubb");});
test("tum -> tum", function() {deepEqual( Stem("tum"), "tum");});
test("tumla -> tuml", function() {deepEqual( Stem("tumla"), "tuml");});
test("tumlade -> tuml", function() {deepEqual( Stem("tumlade"), "tuml");});
test("tumlar -> tuml", function() {deepEqual( Stem("tumlar"), "tuml");});
test("tumlare -> tuml", function() {deepEqual( Stem("tumlare"), "tuml");});
test("tumlat -> tuml", function() {deepEqual( Stem("tumlat"), "tuml");});
test("tummen -> tumm", function() {deepEqual( Stem("tummen"), "tumm");});
test("tung -> tung", function() {deepEqual( Stem("tung"), "tung");});
test("tunga -> tung", function() {deepEqual( Stem("tunga"), "tung");});
test("tungan -> tungan", function() {deepEqual( Stem("tungan"), "tungan");});
test("tungas -> tung", function() {deepEqual( Stem("tungas"), "tung");});
test("tungel -> tungel", function() {deepEqual( Stem("tungel"), "tungel");});
test("tungor -> tung", function() {deepEqual( Stem("tungor"), "tung");});
test("tungsinta -> tungsint", function() {deepEqual( Stem("tungsinta"), "tungsint");});
test("tungsinthet -> tungsint", function() {deepEqual( Stem("tungsinthet"), "tungsint");});
test("tungt -> tung", function() {deepEqual( Stem("tungt"), "tung");});
test("tungus -> tungus", function() {deepEqual( Stem("tungus"), "tungus");});
test("tunn -> tunn", function() {deepEqual( Stem("tunn"), "tunn");});
test("tunna -> tunn", function() {deepEqual( Stem("tunna"), "tunn");});
test("tunnan -> tunnan", function() {deepEqual( Stem("tunnan"), "tunnan");});
test("tunnare -> tunn", function() {deepEqual( Stem("tunnare"), "tunn");});
test("tunnas -> tunn", function() {deepEqual( Stem("tunnas"), "tunn");});
test("tunnbindare -> tunnbind", function() {deepEqual( Stem("tunnbindare"), "tunnbind");});
test("tunnbindars -> tunnbindar", function() {deepEqual( Stem("tunnbindars"), "tunnbindar");});
test("tunnbröds -> tunnbröd", function() {deepEqual( Stem("tunnbröds"), "tunnbröd");});
test("tunnor -> tunn", function() {deepEqual( Stem("tunnor"), "tunn");});
test("tunnorna -> tunn", function() {deepEqual( Stem("tunnorna"), "tunn");});
test("tunnvalv -> tunnvalv", function() {deepEqual( Stem("tunnvalv"), "tunnvalv");});
test("tunt -> tunt", function() {deepEqual( Stem("tunt"), "tunt");});
test("tupp -> tupp", function() {deepEqual( Stem("tupp"), "tupp");});
test("tur -> tur", function() {deepEqual( Stem("tur"), "tur");});
test("turade -> tur", function() {deepEqual( Stem("turade"), "tur");});
test("turen -> tur", function() {deepEqual( Stem("turen"), "tur");});
test("turer -> tur", function() {deepEqual( Stem("turer"), "tur");});
test("turistsmaken -> turistsmak", function() {deepEqual( Stem("turistsmaken"), "turistsmak");});
test("turken -> turk", function() {deepEqual( Stem("turken"), "turk");});
test("turkisk -> turkisk", function() {deepEqual( Stem("turkisk"), "turkisk");});
test("turkiska -> turkisk", function() {deepEqual( Stem("turkiska"), "turkisk");});
test("turmmen -> turmm", function() {deepEqual( Stem("turmmen"), "turmm");});
test("turturduvor -> turturduv", function() {deepEqual( Stem("turturduvor"), "turturduv");});
test("turvis -> turvis", function() {deepEqual( Stem("turvis"), "turvis");});
test("tusan -> tusan", function() {deepEqual( Stem("tusan"), "tusan");});
test("tusch -> tusch", function() {deepEqual( Stem("tusch"), "tusch");});
test("tuschritningen -> tuschritning", function() {deepEqual( Stem("tuschritningen"), "tuschritning");});
test("tusen -> tus", function() {deepEqual( Stem("tusen"), "tus");});
test("tusenfalt -> tusenfalt", function() {deepEqual( Stem("tusenfalt"), "tusenfalt");});
test("tusentals -> tusental", function() {deepEqual( Stem("tusentals"), "tusental");});
test("tutade -> tut", function() {deepEqual( Stem("tutade"), "tut");});
test("tutande -> tut", function() {deepEqual( Stem("tutande"), "tut");});
test("tuva -> tuv", function() {deepEqual( Stem("tuva"), "tuv");});
test("tuvahisto -> tuvahisto", function() {deepEqual( Stem("tuvahisto"), "tuvahisto");});
test("tuvan -> tuvan", function() {deepEqual( Stem("tuvan"), "tuvan");});
test("tuvig -> tuv", function() {deepEqual( Stem("tuvig"), "tuv");});
test("tuvor -> tuv", function() {deepEqual( Stem("tuvor"), "tuv");});
test("tva -> tva", function() {deepEqual( Stem("tva"), "tva");});
test("tvagen -> tvag", function() {deepEqual( Stem("tvagen"), "tvag");});
test("tvagning -> tvagning", function() {deepEqual( Stem("tvagning"), "tvagning");});
test("tvang -> tvang", function() {deepEqual( Stem("tvang"), "tvang");});
test("tvehågsenhet -> tvehågsen", function() {deepEqual( Stem("tvehågsenhet"), "tvehågsen");});
test("tveka -> tvek", function() {deepEqual( Stem("tveka"), "tvek");});
test("tvekade -> tvek", function() {deepEqual( Stem("tvekade"), "tvek");});
test("tvekan -> tvekan", function() {deepEqual( Stem("tvekan"), "tvekan");});
test("tvekande -> tvek", function() {deepEqual( Stem("tvekande"), "tvek");});
test("tvekat -> tvek", function() {deepEqual( Stem("tvekat"), "tvek");});
test("tveksam -> tveksam", function() {deepEqual( Stem("tveksam"), "tveksam");});
test("tveksamt -> tveksamt", function() {deepEqual( Stem("tveksamt"), "tveksamt");});
test("tvenne -> tvenn", function() {deepEqual( Stem("tvenne"), "tvenn");});
test("tver -> tver", function() {deepEqual( Stem("tver"), "tver");});
test("tvetydig -> tvetyd", function() {deepEqual( Stem("tvetydig"), "tvetyd");});
test("tvetydiga -> tvetyd", function() {deepEqual( Stem("tvetydiga"), "tvetyd");});
test("tvetydigheter -> tvetyd", function() {deepEqual( Stem("tvetydigheter"), "tvetyd");});
test("tvetydigt -> tvetyd", function() {deepEqual( Stem("tvetydigt"), "tvetyd");});
test("tvifla -> tvifl", function() {deepEqual( Stem("tvifla"), "tvifl");});
test("tviflande -> tvifl", function() {deepEqual( Stem("tviflande"), "tvifl");});
test("tviflar -> tvifl", function() {deepEqual( Stem("tviflar"), "tvifl");});
test("tviflets -> tviflet", function() {deepEqual( Stem("tviflets"), "tviflet");});
test("tvifvel -> tvifvel", function() {deepEqual( Stem("tvifvel"), "tvifvel");});
test("tvillingsjäl -> tvillingsjäl", function() {deepEqual( Stem("tvillingsjäl"), "tvillingsjäl");});
test("tvillingsyster -> tvillingsyst", function() {deepEqual( Stem("tvillingsyster"), "tvillingsyst");});
test("tvina -> tvin", function() {deepEqual( Stem("tvina"), "tvin");});
test("tvinade -> tvin", function() {deepEqual( Stem("tvinade"), "tvin");});
test("tvinande -> tvin", function() {deepEqual( Stem("tvinande"), "tvin");});
test("tvinga -> tving", function() {deepEqual( Stem("tvinga"), "tving");});
test("tvingad -> tving", function() {deepEqual( Stem("tvingad"), "tving");});
test("tvingade -> tving", function() {deepEqual( Stem("tvingade"), "tving");});
test("tvingades -> tving", function() {deepEqual( Stem("tvingades"), "tving");});
test("tvingar -> tving", function() {deepEqual( Stem("tvingar"), "tving");});
test("tvingas -> tving", function() {deepEqual( Stem("tvingas"), "tving");});
test("tvingat -> tving", function() {deepEqual( Stem("tvingat"), "tving");});
test("tvinsjuka -> tvinsjuk", function() {deepEqual( Stem("tvinsjuka"), "tvinsjuk");});
test("tvinsjukt -> tvinsjuk", function() {deepEqual( Stem("tvinsjukt"), "tvinsjuk");});
test("tvinsot -> tvinsot", function() {deepEqual( Stem("tvinsot"), "tvinsot");});
test("tvist -> tvist", function() {deepEqual( Stem("tvist"), "tvist");});
test("tvista -> tvist", function() {deepEqual( Stem("tvista"), "tvist");});
test("tvisten -> tvist", function() {deepEqual( Stem("tvisten"), "tvist");});
test("tvivel -> tvivel", function() {deepEqual( Stem("tvivel"), "tvivel");});
test("tvivelaktigt -> tvivelakt", function() {deepEqual( Stem("tvivelaktigt"), "tvivelakt");});
test("tvivla -> tvivl", function() {deepEqual( Stem("tvivla"), "tvivl");});
test("tvivlade -> tvivl", function() {deepEqual( Stem("tvivlade"), "tvivl");});
test("tvivlande -> tvivl", function() {deepEqual( Stem("tvivlande"), "tvivl");});
test("tvivlar -> tvivl", function() {deepEqual( Stem("tvivlar"), "tvivl");});
test("tvivlet -> tvivlet", function() {deepEqual( Stem("tvivlet"), "tvivlet");});
test("tvungen -> tvung", function() {deepEqual( Stem("tvungen"), "tvung");});
test("tvunget -> tvunget", function() {deepEqual( Stem("tvunget"), "tvunget");});
test("tvungna -> tvungn", function() {deepEqual( Stem("tvungna"), "tvungn");});
test("tvänne -> tvänn", function() {deepEqual( Stem("tvänne"), "tvänn");});
test("tvär -> tvär", function() {deepEqual( Stem("tvär"), "tvär");});
test("tvärbjälkar -> tvärbjälk", function() {deepEqual( Stem("tvärbjälkar"), "tvärbjälk");});
test("tvären -> tvär", function() {deepEqual( Stem("tvären"), "tvär");});
test("tvärs -> tvär", function() {deepEqual( Stem("tvärs"), "tvär");});
test("tvärsigenom -> tvärsigenom", function() {deepEqual( Stem("tvärsigenom"), "tvärsigenom");});
test("tvärstannade -> tvärstan", function() {deepEqual( Stem("tvärstannade"), "tvärstan");});
test("tvärsäkert -> tvärsäkert", function() {deepEqual( Stem("tvärsäkert"), "tvärsäkert");});
test("tvärsöver -> tvärsöv", function() {deepEqual( Stem("tvärsöver"), "tvärsöv");});
test("tvärsövet -> tvärsövet", function() {deepEqual( Stem("tvärsövet"), "tvärsövet");});
test("tvärt -> tvärt", function() {deepEqual( Stem("tvärt"), "tvärt");});
test("tvärtemot -> tvärtemot", function() {deepEqual( Stem("tvärtemot"), "tvärtemot");});
test("tvärtom -> tvärtom", function() {deepEqual( Stem("tvärtom"), "tvärtom");});
test("tvärtystnade -> tvärtystn", function() {deepEqual( Stem("tvärtystnade"), "tvärtystn");});
test("tvätt -> tvätt", function() {deepEqual( Stem("tvätt"), "tvätt");});
test("tvätta -> tvätt", function() {deepEqual( Stem("tvätta"), "tvätt");});
test("tvättad -> tvätt", function() {deepEqual( Stem("tvättad"), "tvätt");});
test("tvättade -> tvätt", function() {deepEqual( Stem("tvättade"), "tvätt");});
test("tvättas -> tvätt", function() {deepEqual( Stem("tvättas"), "tvätt");});
test("tvättat -> tvätt", function() {deepEqual( Stem("tvättat"), "tvätt");});
test("tvättbalja -> tvättbalj", function() {deepEqual( Stem("tvättbalja"), "tvättbalj");});
test("tvättbunken -> tvättbunk", function() {deepEqual( Stem("tvättbunken"), "tvättbunk");});
test("tvätten -> tvätt", function() {deepEqual( Stem("tvätten"), "tvätt");});
test("tvättfat -> tvättf", function() {deepEqual( Stem("tvättfat"), "tvättf");});
test("tvätträkningen -> tvätträkning", function() {deepEqual( Stem("tvätträkningen"), "tvätträkning");});
test("tvättstallet -> tvättstallet", function() {deepEqual( Stem("tvättstallet"), "tvättstallet");});
test("tvättstugan -> tvättstugan", function() {deepEqual( Stem("tvättstugan"), "tvättstugan");});
test("två -> två", function() {deepEqual( Stem("två"), "två");});
test("tvåa -> tvåa", function() {deepEqual( Stem("tvåa"), "tvåa");});
test("tvådubbla -> tvådubbl", function() {deepEqual( Stem("tvådubbla"), "tvådubbl");});
test("tvål -> tvål", function() {deepEqual( Stem("tvål"), "tvål");});
test("tvålfatet -> tvålfatet", function() {deepEqual( Stem("tvålfatet"), "tvålfatet");});
test("tvång -> tvång", function() {deepEqual( Stem("tvång"), "tvång");});
test("tvånget -> tvånget", function() {deepEqual( Stem("tvånget"), "tvånget");});
test("tvångsarbete -> tvångsarbet", function() {deepEqual( Stem("tvångsarbete"), "tvångsarbet");});
test("tvåriksdalers -> tvåriksdaler", function() {deepEqual( Stem("tvåriksdalers"), "tvåriksdaler");});
test("tvåriksdalersedel -> tvåriksdalersedel", function() {deepEqual( Stem("tvåriksdalersedel"), "tvåriksdalersedel");});
test("tvåriksdalerssedel -> tvåriksdalerssedel", function() {deepEqual( Stem("tvåriksdalerssedel"), "tvåriksdalerssedel");});
test("tvåvåningshus -> tvåvåningshus", function() {deepEqual( Stem("tvåvåningshus"), "tvåvåningshus");});
test("ty -> ty", function() {deepEqual( Stem("ty"), "ty");});
test("tyck -> tyck", function() {deepEqual( Stem("tyck"), "tyck");});
test("tycka -> tyck", function() {deepEqual( Stem("tycka"), "tyck");});
test("tyckas -> tyck", function() {deepEqual( Stem("tyckas"), "tyck");});
test("tycke -> tyck", function() {deepEqual( Stem("tycke"), "tyck");});
test("tycken -> tyck", function() {deepEqual( Stem("tycken"), "tyck");});
test("tycker -> tyck", function() {deepEqual( Stem("tycker"), "tyck");});
test("tyckes -> tyck", function() {deepEqual( Stem("tyckes"), "tyck");});
test("tyckles -> tyckl", function() {deepEqual( Stem("tyckles"), "tyckl");});
test("tycks -> tyck", function() {deepEqual( Stem("tycks"), "tyck");});
test("tyckt -> tyck", function() {deepEqual( Stem("tyckt"), "tyck");});
test("tycktc -> tycktc", function() {deepEqual( Stem("tycktc"), "tycktc");});
test("tyckte -> tyck", function() {deepEqual( Stem("tyckte"), "tyck");});
test("tycktes -> tyck", function() {deepEqual( Stem("tycktes"), "tyck");});
test("tyd -> tyd", function() {deepEqual( Stem("tyd"), "tyd");});
test("tyda -> tyd", function() {deepEqual( Stem("tyda"), "tyd");});
test("tydande -> tyd", function() {deepEqual( Stem("tydande"), "tyd");});
test("tydde -> tydd", function() {deepEqual( Stem("tydde"), "tydd");});
test("tydelse -> tyd", function() {deepEqual( Stem("tydelse"), "tyd");});
test("tyder -> tyd", function() {deepEqual( Stem("tyder"), "tyd");});
test("tydlig -> tyd", function() {deepEqual( Stem("tydlig"), "tyd");});
test("tydliga -> tyd", function() {deepEqual( Stem("tydliga"), "tyd");});
test("tydligare -> tyd", function() {deepEqual( Stem("tydligare"), "tyd");});
test("tydligen -> tyd", function() {deepEqual( Stem("tydligen"), "tyd");});
test("tydlighet -> tyd", function() {deepEqual( Stem("tydlighet"), "tyd");});
test("tydligt -> tyd", function() {deepEqual( Stem("tydligt"), "tyd");});
test("tydt -> tydt", function() {deepEqual( Stem("tydt"), "tydt");});
test("tyg -> tyg", function() {deepEqual( Stem("tyg"), "tyg");});
test("tygel -> tygel", function() {deepEqual( Stem("tygel"), "tygel");});
test("tygellost -> tygellost", function() {deepEqual( Stem("tygellost"), "tygellost");});
test("tygeln -> tygeln", function() {deepEqual( Stem("tygeln"), "tygeln");});
test("tyger -> tyg", function() {deepEqual( Stem("tyger"), "tyg");});
test("tygerna -> tyg", function() {deepEqual( Stem("tygerna"), "tyg");});
test("tyget -> tyget", function() {deepEqual( Stem("tyget"), "tyget");});
test("tyglade -> tygl", function() {deepEqual( Stem("tyglade"), "tygl");});
test("tyglar -> tygl", function() {deepEqual( Stem("tyglar"), "tygl");});
test("tygstuvar -> tygstuv", function() {deepEqual( Stem("tygstuvar"), "tygstuv");});
test("tygstycken -> tygstyck", function() {deepEqual( Stem("tygstycken"), "tygstyck");});
test("tygstövlar -> tygstövl", function() {deepEqual( Stem("tygstövlar"), "tygstövl");});
test("tyko -> tyko", function() {deepEqual( Stem("tyko"), "tyko");});
test("tynga -> tyng", function() {deepEqual( Stem("tynga"), "tyng");});
test("tyngd -> tyng", function() {deepEqual( Stem("tyngd"), "tyng");});
test("tyngda -> tyng", function() {deepEqual( Stem("tyngda"), "tyng");});
test("tyngden -> tyng", function() {deepEqual( Stem("tyngden"), "tyng");});
test("tynger -> tyng", function() {deepEqual( Stem("tynger"), "tyng");});
test("tyngre -> tyngr", function() {deepEqual( Stem("tyngre"), "tyngr");});
test("typ -> typ", function() {deepEqual( Stem("typ"), "typ");});
test("typiske -> typisk", function() {deepEqual( Stem("typiske"), "typisk");});
test("tyrann -> tyran", function() {deepEqual( Stem("tyrann"), "tyran");});
test("tyrus -> tyrus", function() {deepEqual( Stem("tyrus"), "tyrus");});
test("tysk -> tysk", function() {deepEqual( Stem("tysk"), "tysk");});
test("tyska -> tysk", function() {deepEqual( Stem("tyska"), "tysk");});
test("tyskarna -> tysk", function() {deepEqual( Stem("tyskarna"), "tysk");});
test("tyskland -> tyskland", function() {deepEqual( Stem("tyskland"), "tyskland");});
test("tyskt -> tysk", function() {deepEqual( Stem("tyskt"), "tysk");});
test("tyst -> tyst", function() {deepEqual( Stem("tyst"), "tyst");});
test("tysta -> tyst", function() {deepEqual( Stem("tysta"), "tyst");});
test("tystade -> tyst", function() {deepEqual( Stem("tystade"), "tyst");});
test("tystare -> tyst", function() {deepEqual( Stem("tystare"), "tyst");});
test("tysthet -> tyst", function() {deepEqual( Stem("tysthet"), "tyst");});
test("tysthetslöfte -> tysthetslöft", function() {deepEqual( Stem("tysthetslöfte"), "tysthetslöft");});
test("tystlåten -> tystlåt", function() {deepEqual( Stem("tystlåten"), "tystlåt");});
test("tystlåtenhet -> tystlåten", function() {deepEqual( Stem("tystlåtenhet"), "tystlåten");});
test("tystna -> tystn", function() {deepEqual( Stem("tystna"), "tystn");});
test("tystnad -> tystn", function() {deepEqual( Stem("tystnad"), "tystn");});
test("tystnade -> tystn", function() {deepEqual( Stem("tystnade"), "tystn");});
test("tystnaden -> tystnad", function() {deepEqual( Stem("tystnaden"), "tystnad");});
test("tystnadens -> tystnad", function() {deepEqual( Stem("tystnadens"), "tystnad");});
test("tystnar -> tystn", function() {deepEqual( Stem("tystnar"), "tystn");});
test("tystnat -> tystn", function() {deepEqual( Stem("tystnat"), "tystn");});
test("tyvärr -> tyvärr", function() {deepEqual( Stem("tyvärr"), "tyvärr");});
test("täck -> täck", function() {deepEqual( Stem("täck"), "täck");});
test("täcka -> täck", function() {deepEqual( Stem("täcka"), "täck");});
test("täckare -> täck", function() {deepEqual( Stem("täckare"), "täck");});
test("täckas -> täck", function() {deepEqual( Stem("täckas"), "täck");});
test("täckelset -> täckelset", function() {deepEqual( Stem("täckelset"), "täckelset");});
test("täcken -> täck", function() {deepEqual( Stem("täcken"), "täck");});
test("täckes -> täck", function() {deepEqual( Stem("täckes"), "täck");});
test("täcket -> täcket", function() {deepEqual( Stem("täcket"), "täcket");});
test("täcks -> täck", function() {deepEqual( Stem("täcks"), "täck");});
test("täckt -> täck", function() {deepEqual( Stem("täckt"), "täck");});
test("täcktes -> täck", function() {deepEqual( Stem("täcktes"), "täck");});
test("täckts -> täck", function() {deepEqual( Stem("täckts"), "täck");});
test("tädkte -> tädk", function() {deepEqual( Stem("tädkte"), "tädk");});
test("täget -> täget", function() {deepEqual( Stem("täget"), "täget");});
test("tägga -> tägg", function() {deepEqual( Stem("tägga"), "tägg");});
test("täljande -> tälj", function() {deepEqual( Stem("täljande"), "tälj");});
test("tälla -> täll", function() {deepEqual( Stem("tälla"), "täll");});
test("tält -> tält", function() {deepEqual( Stem("tält"), "tält");});
test("tämlig -> täm", function() {deepEqual( Stem("tämlig"), "täm");});
test("tämligen -> täm", function() {deepEqual( Stem("tämligen"), "täm");});
test("tän -> tän", function() {deepEqual( Stem("tän"), "tän");});
test("tänd -> tänd", function() {deepEqual( Stem("tänd"), "tänd");});
test("tända -> tänd", function() {deepEqual( Stem("tända"), "tänd");});
test("tändande -> tänd", function() {deepEqual( Stem("tändande"), "tänd");});
test("tändas -> tänd", function() {deepEqual( Stem("tändas"), "tänd");});
test("tände -> tänd", function() {deepEqual( Stem("tände"), "tänd");});
test("tänder -> tänd", function() {deepEqual( Stem("tänder"), "tänd");});
test("tänderna -> tänd", function() {deepEqual( Stem("tänderna"), "tänd");});
test("tändes -> tänd", function() {deepEqual( Stem("tändes"), "tänd");});
test("tändsticka -> tändstick", function() {deepEqual( Stem("tändsticka"), "tändstick");});
test("tänger -> täng", function() {deepEqual( Stem("tänger"), "täng");});
test("tängerna -> täng", function() {deepEqual( Stem("tängerna"), "täng");});
test("tänjas -> tänj", function() {deepEqual( Stem("tänjas"), "tänj");});
test("tänk -> tänk", function() {deepEqual( Stem("tänk"), "tänk");});
test("tänka -> tänk", function() {deepEqual( Stem("tänka"), "tänk");});
test("tänkande -> tänk", function() {deepEqual( Stem("tänkande"), "tänk");});
test("tänkare -> tänk", function() {deepEqual( Stem("tänkare"), "tänk");});
test("tänkaren -> tänk", function() {deepEqual( Stem("tänkaren"), "tänk");});
test("tänkarna -> tänk", function() {deepEqual( Stem("tänkarna"), "tänk");});
test("tänkarnas -> tänk", function() {deepEqual( Stem("tänkarnas"), "tänk");});
test("tänkas -> tänk", function() {deepEqual( Stem("tänkas"), "tänk");});
test("tänkbar -> tänkb", function() {deepEqual( Stem("tänkbar"), "tänkb");});
test("tänkbart -> tänkbart", function() {deepEqual( Stem("tänkbart"), "tänkbart");});
test("tänke -> tänk", function() {deepEqual( Stem("tänke"), "tänk");});
test("tänker -> tänk", function() {deepEqual( Stem("tänker"), "tänk");});
test("tänkesätt -> tänkesät", function() {deepEqual( Stem("tänkesätt"), "tänkesät");});
test("tänksamt -> tänksamt", function() {deepEqual( Stem("tänksamt"), "tänksamt");});
test("tänkt -> tänk", function() {deepEqual( Stem("tänkt"), "tänk");});
test("tänktc -> tänktc", function() {deepEqual( Stem("tänktc"), "tänktc");});
test("tänkte -> tänk", function() {deepEqual( Stem("tänkte"), "tänk");});
test("tänt -> tänt", function() {deepEqual( Stem("tänt"), "tänt");});
test("tänts -> tänt", function() {deepEqual( Stem("tänts"), "tänt");});
test("täppa -> täpp", function() {deepEqual( Stem("täppa"), "täpp");});
test("täppan -> täppan", function() {deepEqual( Stem("täppan"), "täppan");});
test("tära -> tär", function() {deepEqual( Stem("tära"), "tär");});
test("tärande -> tär", function() {deepEqual( Stem("tärande"), "tär");});
test("tärd -> tärd", function() {deepEqual( Stem("tärd"), "tärd");});
test("tärde -> tärd", function() {deepEqual( Stem("tärde"), "tärd");});
test("tärna -> tärn", function() {deepEqual( Stem("tärna"), "tärn");});
test("tärnan -> tärnan", function() {deepEqual( Stem("tärnan"), "tärnan");});
test("tärnor -> tärn", function() {deepEqual( Stem("tärnor"), "tärn");});
test("tärt -> tärt", function() {deepEqual( Stem("tärt"), "tärt");});
test("tät -> tät", function() {deepEqual( Stem("tät"), "tät");});
test("täta -> tät", function() {deepEqual( Stem("täta"), "tät");});
test("tätare -> tät", function() {deepEqual( Stem("tätare"), "tät");});
test("tätaste -> tät", function() {deepEqual( Stem("tätaste"), "tät");});
test("täten -> tät", function() {deepEqual( Stem("täten"), "tät");});
test("tätnade -> tätn", function() {deepEqual( Stem("tätnade"), "tätn");});
test("tätt -> tätt", function() {deepEqual( Stem("tätt"), "tätt");});
test("tättomslutande -> tättomslut", function() {deepEqual( Stem("tättomslutande"), "tättomslut");});
test("tävlan -> tävlan", function() {deepEqual( Stem("tävlan"), "tävlan");});
test("tävlas -> tävl", function() {deepEqual( Stem("tävlas"), "tävl");});
test("tå -> tå", function() {deepEqual( Stem("tå"), "tå");});
test("tåg -> tåg", function() {deepEqual( Stem("tåg"), "tåg");});
test("tåga -> tåg", function() {deepEqual( Stem("tåga"), "tåg");});
test("tågbygnaden -> tågbygnad", function() {deepEqual( Stem("tågbygnaden"), "tågbygnad");});
test("tågen -> tåg", function() {deepEqual( Stem("tågen"), "tåg");});
test("tåget -> tåget", function() {deepEqual( Stem("tåget"), "tåget");});
test("tågpassagerare -> tågpassager", function() {deepEqual( Stem("tågpassagerare"), "tågpassager");});
test("tågverket -> tågverket", function() {deepEqual( Stem("tågverket"), "tågverket");});
test("tågändan -> tågändan", function() {deepEqual( Stem("tågändan"), "tågändan");});
test("tål -> tål", function() {deepEqual( Stem("tål"), "tål");});
test("tåla -> tål", function() {deepEqual( Stem("tåla"), "tål");});
test("tålamod -> tålamod", function() {deepEqual( Stem("tålamod"), "tålamod");});
test("tålamodet -> tålamodet", function() {deepEqual( Stem("tålamodet"), "tålamodet");});
test("tålde -> tåld", function() {deepEqual( Stem("tålde"), "tåld");});
test("tålig -> tål", function() {deepEqual( Stem("tålig"), "tål");});
test("tåliga -> tål", function() {deepEqual( Stem("tåliga"), "tål");});
test("tålige -> tål", function() {deepEqual( Stem("tålige"), "tål");});
test("tåligt -> tål", function() {deepEqual( Stem("tåligt"), "tål");});
test("tålmodig -> tålmod", function() {deepEqual( Stem("tålmodig"), "tålmod");});
test("tåls -> tål", function() {deepEqual( Stem("tåls"), "tål");});
test("tålt -> tålt", function() {deepEqual( Stem("tålt"), "tålt");});
test("tålte -> tålt", function() {deepEqual( Stem("tålte"), "tålt");});
test("tång -> tång", function() {deepEqual( Stem("tång"), "tång");});
test("tången -> tång", function() {deepEqual( Stem("tången"), "tång");});
test("tånk -> tånk", function() {deepEqual( Stem("tånk"), "tånk");});
test("tånkte -> tånk", function() {deepEqual( Stem("tånkte"), "tånk");});
test("tår -> tår", function() {deepEqual( Stem("tår"), "tår");});
test("tårade -> tår", function() {deepEqual( Stem("tårade"), "tår");});
test("tårades -> tår", function() {deepEqual( Stem("tårades"), "tår");});
test("tårar -> tår", function() {deepEqual( Stem("tårar"), "tår");});
test("tårarna -> tår", function() {deepEqual( Stem("tårarna"), "tår");});
test("tårarne -> tår", function() {deepEqual( Stem("tårarne"), "tår");});
test("tåren -> tår", function() {deepEqual( Stem("tåren"), "tår");});
test("tårens -> tår", function() {deepEqual( Stem("tårens"), "tår");});
test("tårfuktade -> tårfuk", function() {deepEqual( Stem("tårfuktade"), "tårfuk");});
test("tårfylda -> tårfyld", function() {deepEqual( Stem("tårfylda"), "tårfyld");});
test("tårfyllda -> tårfylld", function() {deepEqual( Stem("tårfyllda"), "tårfylld");});
test("tårlöst -> tårlös", function() {deepEqual( Stem("tårlöst"), "tårlös");});
test("tårna -> tårn", function() {deepEqual( Stem("tårna"), "tårn");});
test("tårta -> tårt", function() {deepEqual( Stem("tårta"), "tårt");});
test("tårtask -> tårtask", function() {deepEqual( Stem("tårtask"), "tårtask");});
test("tårtbitarna -> tårtbit", function() {deepEqual( Stem("tårtbitarna"), "tårtbit");});
test("tårtor -> tårt", function() {deepEqual( Stem("tårtor"), "tårt");});
test("tårtorna -> tårt", function() {deepEqual( Stem("tårtorna"), "tårt");});
test("tårvätt -> tårvät", function() {deepEqual( Stem("tårvätt"), "tårvät");});
test("tårögd -> tårög", function() {deepEqual( Stem("tårögd"), "tårög");});
test("tårögda -> tårög", function() {deepEqual( Stem("tårögda"), "tårög");});
test("tåspetsarne -> tåspets", function() {deepEqual( Stem("tåspetsarne"), "tåspets");});
test("tö -> tö", function() {deepEqual( Stem("tö"), "tö");});
test("töar -> töar", function() {deepEqual( Stem("töar"), "töar");});
test("töcken -> töck", function() {deepEqual( Stem("töcken"), "töck");});
test("töcknet -> töcknet", function() {deepEqual( Stem("töcknet"), "töcknet");});
test("tölpaktigheten -> tölpakt", function() {deepEqual( Stem("tölpaktigheten"), "tölpakt");});
test("tölpen -> tölp", function() {deepEqual( Stem("tölpen"), "tölp");});
test("töm -> töm", function() {deepEqual( Stem("töm"), "töm");});
test("tömda -> tömd", function() {deepEqual( Stem("tömda"), "tömd");});
test("tömde -> tömd", function() {deepEqual( Stem("tömde"), "tömd");});
test("tömma -> tömm", function() {deepEqual( Stem("tömma"), "tömm");});
test("tömmer -> tömm", function() {deepEqual( Stem("tömmer"), "tömm");});
test("tömt -> tömt", function() {deepEqual( Stem("tömt"), "tömt");});
test("tör -> tör", function() {deepEqual( Stem("tör"), "tör");});
test("tören -> tör", function() {deepEqual( Stem("tören"), "tör");});
test("törhända -> törhänd", function() {deepEqual( Stem("törhända"), "törhänd");});
test("törnet -> törnet", function() {deepEqual( Stem("törnet"), "törnet");});
test("törnig -> törn", function() {deepEqual( Stem("törnig"), "törn");});
test("törnroskrans -> törnroskran", function() {deepEqual( Stem("törnroskrans"), "törnroskran");});
test("törnrosor -> törnros", function() {deepEqual( Stem("törnrosor"), "törnros");});
test("törs -> tör", function() {deepEqual( Stem("törs"), "tör");});
test("törst -> törst", function() {deepEqual( Stem("törst"), "törst");});
test("törstade -> törst", function() {deepEqual( Stem("törstade"), "törst");});
test("törstig -> törst", function() {deepEqual( Stem("törstig"), "törst");});
test("törstigt -> törst", function() {deepEqual( Stem("törstigt"), "törst");});
test("tös -> tös", function() {deepEqual( Stem("tös"), "tös");});
test("töväder -> töväd", function() {deepEqual( Stem("töväder"), "töväd");});
test("u -> u", function() {deepEqual( Stem("u"), "u");});
test("uch -> uch", function() {deepEqual( Stem("uch"), "uch");});
test("udda -> udd", function() {deepEqual( Stem("udda"), "udd");});
test("uddas -> udd", function() {deepEqual( Stem("uddas"), "udd");});
test("udde -> udd", function() {deepEqual( Stem("udde"), "udd");});
test("udden -> udd", function() {deepEqual( Stem("udden"), "udd");});
test("uddvassa -> uddvass", function() {deepEqual( Stem("uddvassa"), "uddvass");});
test("udergår -> udergår", function() {deepEqual( Stem("udergår"), "udergår");});
test("uderhålla -> uderhåll", function() {deepEqual( Stem("uderhålla"), "uderhåll");});
test("uff -> uff", function() {deepEqual( Stem("uff"), "uff");});
test("ugglor -> uggl", function() {deepEqual( Stem("ugglor"), "uggl");});
test("ugn -> ugn", function() {deepEqual( Stem("ugn"), "ugn");});
test("ugnen -> ugn", function() {deepEqual( Stem("ugnen"), "ugn");});
test("uilla -> uill", function() {deepEqual( Stem("uilla"), "uill");});
test("ukulele -> ukulel", function() {deepEqual( Stem("ukulele"), "ukulel");});
test("ull -> ull", function() {deepEqual( Stem("ull"), "ull");});
test("ulla -> ull", function() {deepEqual( Stem("ulla"), "ull");});
test("ullderkläder -> ullderkläd", function() {deepEqual( Stem("ullderkläder"), "ullderkläd");});
test("ulle -> ull", function() {deepEqual( Stem("ulle"), "ull");});
test("ullen -> ull", function() {deepEqual( Stem("ullen"), "ull");});
test("ulliga -> ull", function() {deepEqual( Stem("ulliga"), "ull");});
test("ullsockar -> ullsock", function() {deepEqual( Stem("ullsockar"), "ullsock");});
test("ullt -> ullt", function() {deepEqual( Stem("ullt"), "ullt");});
test("ulrik -> ulrik", function() {deepEqual( Stem("ulrik"), "ulrik");});
test("ulster -> ulst", function() {deepEqual( Stem("ulster"), "ulst");});
test("ultra -> ultr", function() {deepEqual( Stem("ultra"), "ultr");});
test("ulvar -> ulv", function() {deepEqual( Stem("ulvar"), "ulv");});
test("umbrien -> umbri", function() {deepEqual( Stem("umbrien"), "umbri");});
test("umbriens -> umbri", function() {deepEqual( Stem("umbriens"), "umbri");});
test("umbäranden -> umbär", function() {deepEqual( Stem("umbäranden"), "umbär");});
test("umdrande -> umdr", function() {deepEqual( Stem("umdrande"), "umdr");});
test("umgicks -> umgick", function() {deepEqual( Stem("umgicks"), "umgick");});
test("umgälla -> umgäll", function() {deepEqual( Stem("umgälla"), "umgäll");});
test("umgänge -> umgäng", function() {deepEqual( Stem("umgänge"), "umgäng");});
test("umgängeslivet -> umgängeslivet", function() {deepEqual( Stem("umgängeslivet"), "umgängeslivet");});
test("umgängesvänner -> umgängesvän", function() {deepEqual( Stem("umgängesvänner"), "umgängesvän");});
test("umgänget -> umgänget", function() {deepEqual( Stem("umgänget"), "umgänget");});
test("umgås -> umgås", function() {deepEqual( Stem("umgås"), "umgås");});
test("umgåtts -> umgåt", function() {deepEqual( Stem("umgåtts"), "umgåt");});
test("umler -> uml", function() {deepEqual( Stem("umler"), "uml");});
test("un -> un", function() {deepEqual( Stem("un"), "un");});
test("undades -> und", function() {deepEqual( Stem("undades"), "und");});
test("undan -> undan", function() {deepEqual( Stem("undan"), "undan");});
test("undanber -> undanb", function() {deepEqual( Stem("undanber"), "undanb");});
test("undandraga -> undandrag", function() {deepEqual( Stem("undandraga"), "undandrag");});
test("undandrar -> undandr", function() {deepEqual( Stem("undandrar"), "undandr");});
test("undandrog -> undandrog", function() {deepEqual( Stem("undandrog"), "undandrog");});
test("undanflykter -> undanflyk", function() {deepEqual( Stem("undanflykter"), "undanflyk");});
test("undangömd -> undangömd", function() {deepEqual( Stem("undangömd"), "undangömd");});
test("undangömda -> undangömd", function() {deepEqual( Stem("undangömda"), "undangömd");});
test("undanrödja -> undanrödj", function() {deepEqual( Stem("undanrödja"), "undanrödj");});
test("undanröjt -> undanröjt", function() {deepEqual( Stem("undanröjt"), "undanröjt");});
test("undansparkade -> undanspark", function() {deepEqual( Stem("undansparkade"), "undanspark");});
test("undantag -> undantag", function() {deepEqual( Stem("undantag"), "undantag");});
test("undantaget -> undantaget", function() {deepEqual( Stem("undantaget"), "undantaget");});
test("undcrbart -> undcrbart", function() {deepEqual( Stem("undcrbart"), "undcrbart");});
test("unde -> und", function() {deepEqual( Stem("unde"), "und");});
test("under -> und", function() {deepEqual( Stem("under"), "und");});
test("underbar -> underb", function() {deepEqual( Stem("underbar"), "underb");});
test("underbara -> underbar", function() {deepEqual( Stem("underbara"), "underbar");});
test("underbart -> underbart", function() {deepEqual( Stem("underbart"), "underbart");});
test("underbyggnad -> underbyggn", function() {deepEqual( Stem("underbyggnad"), "underbyggn");});
test("underfund -> underfund", function() {deepEqual( Stem("underfund"), "underfund");});
test("underfundig -> underfund", function() {deepEqual( Stem("underfundig"), "underfund");});
test("underfundigt -> underfund", function() {deepEqual( Stem("underfundigt"), "underfund");});
test("undergifven -> undergifv", function() {deepEqual( Stem("undergifven"), "undergifv");});
test("undergifvenhet -> undergifven", function() {deepEqual( Stem("undergifvenhet"), "undergifven");});
test("undergifvet -> undergifvet", function() {deepEqual( Stem("undergifvet"), "undergifvet");});
test("undergingo -> undergingo", function() {deepEqual( Stem("undergingo"), "undergingo");});
test("undergivenhet -> undergiven", function() {deepEqual( Stem("undergivenhet"), "undergiven");});
test("undergivna -> undergivn", function() {deepEqual( Stem("undergivna"), "undergivn");});
test("undergång -> undergång", function() {deepEqual( Stem("undergång"), "undergång");});
test("undergången -> undergång", function() {deepEqual( Stem("undergången"), "undergång");});
test("undergått -> undergåt", function() {deepEqual( Stem("undergått"), "undergåt");});
test("undergörande -> undergör", function() {deepEqual( Stem("undergörande"), "undergör");});
test("underhalla -> underhall", function() {deepEqual( Stem("underhalla"), "underhall");});
test("underhandlingar -> underhandling", function() {deepEqual( Stem("underhandlingar"), "underhandling");});
test("underhandlingen -> underhandling", function() {deepEqual( Stem("underhandlingen"), "underhandling");});
test("underhåll -> underhåll", function() {deepEqual( Stem("underhåll"), "underhåll");});
test("underhålla -> underhåll", function() {deepEqual( Stem("underhålla"), "underhåll");});
test("underhållande -> underhåll", function() {deepEqual( Stem("underhållande"), "underhåll");});
test("underhållen -> underhåll", function() {deepEqual( Stem("underhållen"), "underhåll");});
test("underhållit -> underhållit", function() {deepEqual( Stem("underhållit"), "underhållit");});
test("underhållningen -> underhållning", function() {deepEqual( Stem("underhållningen"), "underhållning");});
test("underhöll -> underhöll", function() {deepEqual( Stem("underhöll"), "underhöll");});
test("underhöllo -> underhöllo", function() {deepEqual( Stem("underhöllo"), "underhöllo");});
test("underjordisk -> underjordisk", function() {deepEqual( Stem("underjordisk"), "underjordisk");});
test("underjordiska -> underjordisk", function() {deepEqual( Stem("underjordiska"), "underjordisk");});
test("underkasta -> underkast", function() {deepEqual( Stem("underkasta"), "underkast");});
test("underkastad -> underkast", function() {deepEqual( Stem("underkastad"), "underkast");});
test("underkastade -> underkast", function() {deepEqual( Stem("underkastade"), "underkast");});
test("underkjol -> underkjol", function() {deepEqual( Stem("underkjol"), "underkjol");});
test("underklass -> underklass", function() {deepEqual( Stem("underklass"), "underklass");});
test("underkläder -> underkläd", function() {deepEqual( Stem("underkläder"), "underkläd");});
test("underkurer -> underkur", function() {deepEqual( Stem("underkurer"), "underkur");});
test("underkuvades -> underkuv", function() {deepEqual( Stem("underkuvades"), "underkuv");});
test("underlig -> under", function() {deepEqual( Stem("underlig"), "under");});
test("underliga -> under", function() {deepEqual( Stem("underliga"), "under");});
test("underligare -> under", function() {deepEqual( Stem("underligare"), "under");});
test("underligt -> under", function() {deepEqual( Stem("underligt"), "under");});
test("underliv -> underliv", function() {deepEqual( Stem("underliv"), "underliv");});
test("underlivslidande -> underlivslid", function() {deepEqual( Stem("underlivslidande"), "underlivslid");});
test("underlägsen -> underlägs", function() {deepEqual( Stem("underlägsen"), "underlägs");});
test("underläpp -> underläpp", function() {deepEqual( Stem("underläpp"), "underläpp");});
test("underläppen -> underläpp", function() {deepEqual( Stem("underläppen"), "underläpp");});
test("underlärarinna -> underlärarin", function() {deepEqual( Stem("underlärarinna"), "underlärarin");});
test("underlärarinnan -> underlärarinnan", function() {deepEqual( Stem("underlärarinnan"), "underlärarinnan");});
test("underlätta -> underlät", function() {deepEqual( Stem("underlätta"), "underlät");});
test("underlåta -> underlåt", function() {deepEqual( Stem("underlåta"), "underlåt");});
test("underlåtit -> underlåtit", function() {deepEqual( Stem("underlåtit"), "underlåtit");});
test("underlöjtnant -> underlöjtnant", function() {deepEqual( Stem("underlöjtnant"), "underlöjtnant");});
test("underlöjtnanten -> underlöjtnant", function() {deepEqual( Stem("underlöjtnanten"), "underlöjtnant");});
test("undermedvetna -> undermedvetn", function() {deepEqual( Stem("undermedvetna"), "undermedvetn");});
test("underordnad -> underordn", function() {deepEqual( Stem("underordnad"), "underordn");});
test("underordnade -> underordn", function() {deepEqual( Stem("underordnade"), "underordn");});
test("underordnar -> underordn", function() {deepEqual( Stem("underordnar"), "underordn");});
test("underredet -> underredet", function() {deepEqual( Stem("underredet"), "underredet");});
test("underrätta -> underrät", function() {deepEqual( Stem("underrätta"), "underrät");});
test("underrättad -> underrät", function() {deepEqual( Stem("underrättad"), "underrät");});
test("underrättade -> underrät", function() {deepEqual( Stem("underrättade"), "underrät");});
test("underrättar -> underrät", function() {deepEqual( Stem("underrättar"), "underrät");});
test("underrättat -> underrät", function() {deepEqual( Stem("underrättat"), "underrät");});
test("underrättelse -> underrätt", function() {deepEqual( Stem("underrättelse"), "underrätt");});
test("underrättelsen -> underrätt", function() {deepEqual( Stem("underrättelsen"), "underrätt");});
test("underrättelser -> underrätt", function() {deepEqual( Stem("underrättelser"), "underrätt");});
test("unders -> under", function() {deepEqual( Stem("unders"), "under");});
test("underskattar -> underskat", function() {deepEqual( Stem("underskattar"), "underskat");});
test("underskrift -> underskrift", function() {deepEqual( Stem("underskrift"), "underskrift");});
test("underskriften -> underskrift", function() {deepEqual( Stem("underskriften"), "underskrift");});
test("understrukna -> understrukn", function() {deepEqual( Stem("understrukna"), "understrukn");});
test("understryk -> understryk", function() {deepEqual( Stem("understryk"), "understryk");});
test("understrykningar -> understrykning", function() {deepEqual( Stem("understrykningar"), "understrykning");});
test("understundom -> understundom", function() {deepEqual( Stem("understundom"), "understundom");});
test("understyrmannen -> understyrman", function() {deepEqual( Stem("understyrmannen"), "understyrman");});
test("understå -> understå", function() {deepEqual( Stem("understå"), "understå");});
test("understöd -> understöd", function() {deepEqual( Stem("understöd"), "understöd");});
test("undersätsig -> undersäts", function() {deepEqual( Stem("undersätsig"), "undersäts");});
test("undersåt -> undersåt", function() {deepEqual( Stem("undersåt"), "undersåt");});
test("undersöka -> undersök", function() {deepEqual( Stem("undersöka"), "undersök");});
test("undersökas -> undersök", function() {deepEqual( Stem("undersökas"), "undersök");});
test("undersökning -> undersökning", function() {deepEqual( Stem("undersökning"), "undersökning");});
test("undersökningar -> undersökning", function() {deepEqual( Stem("undersökningar"), "undersökning");});
test("undersökningen -> undersökning", function() {deepEqual( Stem("undersökningen"), "undersökning");});
test("undersökningsbord -> undersökningsbord", function() {deepEqual( Stem("undersökningsbord"), "undersökningsbord");});
test("undersökningsbordet -> undersökningsbordet", function() {deepEqual( Stem("undersökningsbordet"), "undersökningsbordet");});
test("undersökningsrum -> undersökningsrum", function() {deepEqual( Stem("undersökningsrum"), "undersökningsrum");});
test("undersökningsrummet -> undersökningsrummet", function() {deepEqual( Stem("undersökningsrummet"), "undersökningsrummet");});
test("undersökt -> undersök", function() {deepEqual( Stem("undersökt"), "undersök");});
test("undersökte -> undersök", function() {deepEqual( Stem("undersökte"), "undersök");});
test("underton -> underton", function() {deepEqual( Stem("underton"), "underton");});
test("undertrycka -> undertryck", function() {deepEqual( Stem("undertrycka"), "undertryck");});
test("undertryckas -> undertryck", function() {deepEqual( Stem("undertryckas"), "undertryck");});
test("undertryckt -> undertryck", function() {deepEqual( Stem("undertryckt"), "undertryck");});
test("underverk -> underverk", function() {deepEqual( Stem("underverk"), "underverk");});
test("undervisa -> undervis", function() {deepEqual( Stem("undervisa"), "undervis");});
test("undervisade -> undervis", function() {deepEqual( Stem("undervisade"), "undervis");});
test("undervisat -> undervis", function() {deepEqual( Stem("undervisat"), "undervis");});
test("undervisning -> undervisning", function() {deepEqual( Stem("undervisning"), "undervisning");});
test("undfalla -> undfall", function() {deepEqual( Stem("undfalla"), "undfall");});
test("undfallande -> undfall", function() {deepEqual( Stem("undfallande"), "undfall");});
test("undfallit -> undfallit", function() {deepEqual( Stem("undfallit"), "undfallit");});
test("undfly -> undfly", function() {deepEqual( Stem("undfly"), "undfly");});
test("undföll -> undföll", function() {deepEqual( Stem("undföll"), "undföll");});
test("undgick -> undgick", function() {deepEqual( Stem("undgick"), "undgick");});
test("undgingo -> undgingo", function() {deepEqual( Stem("undgingo"), "undgingo");});
test("undgå -> undgå", function() {deepEqual( Stem("undgå"), "undgå");});
test("undkomma -> undkomm", function() {deepEqual( Stem("undkomma"), "undkomm");});
test("undkommo -> undkommo", function() {deepEqual( Stem("undkommo"), "undkommo");});
test("undra -> undr", function() {deepEqual( Stem("undra"), "undr");});
test("undrade -> undr", function() {deepEqual( Stem("undrade"), "undr");});
test("undran -> undran", function() {deepEqual( Stem("undran"), "undran");});
test("undrande -> undr", function() {deepEqual( Stem("undrande"), "undr");});
test("undransvärda -> undransvärd", function() {deepEqual( Stem("undransvärda"), "undransvärd");});
test("undransvärt -> undransvärt", function() {deepEqual( Stem("undransvärt"), "undransvärt");});
test("undrar -> undr", function() {deepEqual( Stem("undrar"), "undr");});
test("undrat -> undr", function() {deepEqual( Stem("undrat"), "undr");});
test("undseende -> undseend", function() {deepEqual( Stem("undseende"), "undseend");});
test("undslapp -> undslapp", function() {deepEqual( Stem("undslapp"), "undslapp");});
test("undsluppit -> undsluppit", function() {deepEqual( Stem("undsluppit"), "undsluppit");});
test("undsluppna -> undsluppn", function() {deepEqual( Stem("undsluppna"), "undsluppn");});
test("undsättning -> undsättning", function() {deepEqual( Stem("undsättning"), "undsättning");});
test("undvara -> undvar", function() {deepEqual( Stem("undvara"), "undvar");});
test("undvarit -> undvarit", function() {deepEqual( Stem("undvarit"), "undvarit");});
test("undvek -> undvek", function() {deepEqual( Stem("undvek"), "undvek");});
test("undvik -> undvik", function() {deepEqual( Stem("undvik"), "undvik");});
test("undvika -> undvik", function() {deepEqual( Stem("undvika"), "undvik");});
test("undvikande -> undvik", function() {deepEqual( Stem("undvikande"), "undvik");});
test("undvikas -> undvik", function() {deepEqual( Stem("undvikas"), "undvik");});
test("undvikes -> undvik", function() {deepEqual( Stem("undvikes"), "undvik");});
test("ung -> ung", function() {deepEqual( Stem("ung"), "ung");});
test("unga -> ung", function() {deepEqual( Stem("unga"), "ung");});
test("ungar -> ung", function() {deepEqual( Stem("ungar"), "ung");});
test("ungarna -> ung", function() {deepEqual( Stem("ungarna"), "ung");});
test("ungas -> ung", function() {deepEqual( Stem("ungas"), "ung");});
test("ungdom -> ungdom", function() {deepEqual( Stem("ungdom"), "ungdom");});
test("ungdomar -> ungdom", function() {deepEqual( Stem("ungdomar"), "ungdom");});
test("ungdomarna -> ungdom", function() {deepEqual( Stem("ungdomarna"), "ungdom");});
test("ungdomen -> ungdom", function() {deepEqual( Stem("ungdomen"), "ungdom");});
test("ungdomens -> ungdom", function() {deepEqual( Stem("ungdomens"), "ungdom");});
test("ungdomlig -> ungdom", function() {deepEqual( Stem("ungdomlig"), "ungdom");});
test("ungdomliga -> ungdom", function() {deepEqual( Stem("ungdomliga"), "ungdom");});
test("ungdomligt -> ungdom", function() {deepEqual( Stem("ungdomligt"), "ungdom");});
test("ungdoms -> ungdom", function() {deepEqual( Stem("ungdoms"), "ungdom");});
test("ungdomsaren -> ungdoms", function() {deepEqual( Stem("ungdomsaren"), "ungdoms");});
test("ungdomsblomman -> ungdomsblomman", function() {deepEqual( Stem("ungdomsblomman"), "ungdomsblomman");});
test("ungdomsfröjders -> ungdomsfröjder", function() {deepEqual( Stem("ungdomsfröjders"), "ungdomsfröjder");});
test("ungdomskraft -> ungdomskraft", function() {deepEqual( Stem("ungdomskraft"), "ungdomskraft");});
test("ungdomskraften -> ungdomskraft", function() {deepEqual( Stem("ungdomskraften"), "ungdomskraft");});
test("ungdomskärlek -> ungdomskärlek", function() {deepEqual( Stem("ungdomskärlek"), "ungdomskärlek");});
test("ungdomslättsinne -> ungdomslättsin", function() {deepEqual( Stem("ungdomslättsinne"), "ungdomslättsin");});
test("ungdomsminnen -> ungdomsmin", function() {deepEqual( Stem("ungdomsminnen"), "ungdomsmin");});
test("ungdomsrosorna -> ungdomsros", function() {deepEqual( Stem("ungdomsrosorna"), "ungdomsros");});
test("ungdomssinnet -> ungdomssinnet", function() {deepEqual( Stem("ungdomssinnet"), "ungdomssinnet");});
test("ungdomsskaran -> ungdomsskaran", function() {deepEqual( Stem("ungdomsskaran"), "ungdomsskaran");});
test("ungdomstid -> ungdomstid", function() {deepEqual( Stem("ungdomstid"), "ungdomstid");});
test("ungdomsväninna -> ungdomsvänin", function() {deepEqual( Stem("ungdomsväninna"), "ungdomsvänin");});
test("ungdomsvår -> ungdomsvår", function() {deepEqual( Stem("ungdomsvår"), "ungdomsvår");});
test("ungdomsvörten -> ungdomsvört", function() {deepEqual( Stem("ungdomsvörten"), "ungdomsvört");});
test("ungdomsyran -> ungdomsyran", function() {deepEqual( Stem("ungdomsyran"), "ungdomsyran");});
test("ungdomsår -> ungdomsår", function() {deepEqual( Stem("ungdomsår"), "ungdomsår");});
test("ungdomsåren -> ungdomsår", function() {deepEqual( Stem("ungdomsåren"), "ungdomsår");});
test("unge -> ung", function() {deepEqual( Stem("unge"), "ung");});
test("ungefär -> ungefär", function() {deepEqual( Stem("ungefär"), "ungefär");});
test("ungefärligen -> ungefär", function() {deepEqual( Stem("ungefärligen"), "ungefär");});
test("ungen -> ung", function() {deepEqual( Stem("ungen"), "ung");});
test("ungersven -> ungersv", function() {deepEqual( Stem("ungersven"), "ungersv");});
test("ungherrar -> ungherr", function() {deepEqual( Stem("ungherrar"), "ungherr");});
test("ungherrarna -> ungherr", function() {deepEqual( Stem("ungherrarna"), "ungherr");});
test("unghjort -> unghjort", function() {deepEqual( Stem("unghjort"), "unghjort");});
test("ungicks -> ungick", function() {deepEqual( Stem("ungicks"), "ungick");});
test("ungkarl -> ungkarl", function() {deepEqual( Stem("ungkarl"), "ungkarl");});
test("ungkarlar -> ungkarl", function() {deepEqual( Stem("ungkarlar"), "ungkarl");});
test("ungkarlarna -> ungkarl", function() {deepEqual( Stem("ungkarlarna"), "ungkarl");});
test("ungkarlars -> ungkarlar", function() {deepEqual( Stem("ungkarlars"), "ungkarlar");});
test("ungkarlen -> ungkarl", function() {deepEqual( Stem("ungkarlen"), "ungkarl");});
test("ungkarls -> ungkarl", function() {deepEqual( Stem("ungkarls"), "ungkarl");});
test("ungkarlsbostad -> ungkarlsbost", function() {deepEqual( Stem("ungkarlsbostad"), "ungkarlsbost");});
test("ungkarlsliv -> ungkarlsliv", function() {deepEqual( Stem("ungkarlsliv"), "ungkarlsliv");});
test("ungkarlslivet -> ungkarlslivet", function() {deepEqual( Stem("ungkarlslivet"), "ungkarlslivet");});
test("ungkarlslivets -> ungkarlslivet", function() {deepEqual( Stem("ungkarlslivets"), "ungkarlslivet");});
test("ungkarlsrum -> ungkarlsrum", function() {deepEqual( Stem("ungkarlsrum"), "ungkarlsrum");});
test("ungkarlssoffa -> ungkarlssoff", function() {deepEqual( Stem("ungkarlssoffa"), "ungkarlssoff");});
test("ungkarlsståndet -> ungkarlsståndet", function() {deepEqual( Stem("ungkarlsståndet"), "ungkarlsståndet");});
test("ungkarlssäng -> ungkarlssäng", function() {deepEqual( Stem("ungkarlssäng"), "ungkarlssäng");});
test("ungkärliga -> ungkär", function() {deepEqual( Stem("ungkärliga"), "ungkär");});
test("ungmö -> ungmö", function() {deepEqual( Stem("ungmö"), "ungmö");});
test("ungmön -> ungmön", function() {deepEqual( Stem("ungmön"), "ungmön");});
test("ungmöns -> ungmön", function() {deepEqual( Stem("ungmöns"), "ungmön");});
test("ungskogen -> ungskog", function() {deepEqual( Stem("ungskogen"), "ungskog");});
test("ungt -> ungt", function() {deepEqual( Stem("ungt"), "ungt");});
test("uniform -> uniform", function() {deepEqual( Stem("uniform"), "uniform");});
test("uniformen -> uniform", function() {deepEqual( Stem("uniformen"), "uniform");});
test("uniformer -> uniform", function() {deepEqual( Stem("uniformer"), "uniform");});
test("uniformerna -> uniform", function() {deepEqual( Stem("uniformerna"), "uniform");});
test("uniformsmössa -> uniformsmöss", function() {deepEqual( Stem("uniformsmössa"), "uniformsmöss");});
test("uniformsrocken -> uniformsrock", function() {deepEqual( Stem("uniformsrocken"), "uniformsrock");});
test("unionens -> union", function() {deepEqual( Stem("unionens"), "union");});
test("universitetet -> universitetet", function() {deepEqual( Stem("universitetet"), "universitetet");});
test("unken -> unk", function() {deepEqual( Stem("unken"), "unk");});
test("unkna -> unkn", function() {deepEqual( Stem("unkna"), "unkn");});
test("unna -> unn", function() {deepEqual( Stem("unna"), "unn");});
test("unnade -> unn", function() {deepEqual( Stem("unnade"), "unn");});
test("unnar -> unn", function() {deepEqual( Stem("unnar"), "unn");});
test("uns -> uns", function() {deepEqual( Stem("uns"), "uns");});
test("upmann -> upman", function() {deepEqual( Stem("upmann"), "upman");});
test("upmerksamhet -> upmerksam", function() {deepEqual( Stem("upmerksamhet"), "upmerksam");});
test("upp -> upp", function() {deepEqual( Stem("upp"), "upp");});
test("uppackning -> uppackning", function() {deepEqual( Stem("uppackning"), "uppackning");});
test("uppasser -> uppass", function() {deepEqual( Stem("uppasser"), "uppass");});
test("uppasserskan -> uppasserskan", function() {deepEqual( Stem("uppasserskan"), "uppasserskan");});
test("uppasserskorna -> uppassersk", function() {deepEqual( Stem("uppasserskorna"), "uppassersk");});
test("uppassningen -> uppassning", function() {deepEqual( Stem("uppassningen"), "uppassning");});
test("uppblossande -> uppbloss", function() {deepEqual( Stem("uppblossande"), "uppbloss");});
test("uppblåst -> uppblåst", function() {deepEqual( Stem("uppblåst"), "uppblåst");});
test("uppbrott -> uppbrot", function() {deepEqual( Stem("uppbrott"), "uppbrot");});
test("uppbyggelse -> uppbygg", function() {deepEqual( Stem("uppbyggelse"), "uppbygg");});
test("uppbyggelseböcker -> uppbyggelseböck", function() {deepEqual( Stem("uppbyggelseböcker"), "uppbyggelseböck");});
test("uppbyggelsestun -> uppbyggelsestun", function() {deepEqual( Stem("uppbyggelsestun"), "uppbyggelsestun");});
test("uppbyggliga -> uppbygg", function() {deepEqual( Stem("uppbyggliga"), "uppbygg");});
test("uppbyggligt -> uppbygg", function() {deepEqual( Stem("uppbyggligt"), "uppbygg");});
test("uppbäddad -> uppbäd", function() {deepEqual( Stem("uppbäddad"), "uppbäd");});
test("uppbära -> uppbär", function() {deepEqual( Stem("uppbära"), "uppbär");});
test("uppdelats -> uppdelat", function() {deepEqual( Stem("uppdelats"), "uppdelat");});
test("uppdiktad -> uppdik", function() {deepEqual( Stem("uppdiktad"), "uppdik");});
test("uppdrag -> uppdrag", function() {deepEqual( Stem("uppdrag"), "uppdrag");});
test("uppdraga -> uppdrag", function() {deepEqual( Stem("uppdraga"), "uppdrag");});
test("uppdragen -> uppdrag", function() {deepEqual( Stem("uppdragen"), "uppdrag");});
test("uppdrager -> uppdrag", function() {deepEqual( Stem("uppdrager"), "uppdrag");});
test("uppdraget -> uppdraget", function() {deepEqual( Stem("uppdraget"), "uppdraget");});
test("uppdragit -> uppdragit", function() {deepEqual( Stem("uppdragit"), "uppdragit");});
test("uppdragna -> uppdragn", function() {deepEqual( Stem("uppdragna"), "uppdragn");});
test("uppdrivet -> uppdrivet", function() {deepEqual( Stem("uppdrivet"), "uppdrivet");});
test("uppdrog -> uppdrog", function() {deepEqual( Stem("uppdrog"), "uppdrog");});
test("uppdukad -> uppduk", function() {deepEqual( Stem("uppdukad"), "uppduk");});
test("uppdyka -> uppdyk", function() {deepEqual( Stem("uppdyka"), "uppdyk");});
test("uppdykande -> uppdyk", function() {deepEqual( Stem("uppdykande"), "uppdyk");});
test("uppe -> upp", function() {deepEqual( Stem("uppe"), "upp");});
test("uppehälle -> uppehäll", function() {deepEqual( Stem("uppehälle"), "uppehäll");});
test("uppehåll -> uppehåll", function() {deepEqual( Stem("uppehåll"), "uppehåll");});
test("uppehålla -> uppehåll", function() {deepEqual( Stem("uppehålla"), "uppehåll");});
test("uppehållande -> uppehåll", function() {deepEqual( Stem("uppehållande"), "uppehåll");});
test("uppehållit -> uppehållit", function() {deepEqual( Stem("uppehållit"), "uppehållit");});
test("uppehöll -> uppehöll", function() {deepEqual( Stem("uppehöll"), "uppehöll");});
test("uppenbar -> uppenb", function() {deepEqual( Stem("uppenbar"), "uppenb");});
test("uppenbarade -> uppenbar", function() {deepEqual( Stem("uppenbarade"), "uppenbar");});
test("uppenbarar -> uppenbar", function() {deepEqual( Stem("uppenbarar"), "uppenbar");});
test("uppenbarat -> uppenbar", function() {deepEqual( Stem("uppenbarat"), "uppenbar");});
test("uppenbarelse -> uppenbar", function() {deepEqual( Stem("uppenbarelse"), "uppenbar");});
test("uppenbarelser -> uppenbar", function() {deepEqual( Stem("uppenbarelser"), "uppenbar");});
test("uppenbart -> uppenbart", function() {deepEqual( Stem("uppenbart"), "uppenbart");});
test("uppendagat -> uppendag", function() {deepEqual( Stem("uppendagat"), "uppendag");});
test("uppfann -> uppfan", function() {deepEqual( Stem("uppfann"), "uppfan");});
test("uppfarande -> uppfar", function() {deepEqual( Stem("uppfarande"), "uppfar");});
test("uppfatta -> uppfat", function() {deepEqual( Stem("uppfatta"), "uppfat");});
test("uppfattade -> uppfat", function() {deepEqual( Stem("uppfattade"), "uppfat");});
test("uppfattar -> uppfat", function() {deepEqual( Stem("uppfattar"), "uppfat");});
test("uppfattat -> uppfat", function() {deepEqual( Stem("uppfattat"), "uppfat");});
test("uppfattning -> uppfattning", function() {deepEqual( Stem("uppfattning"), "uppfattning");});
test("uppfinna -> uppfin", function() {deepEqual( Stem("uppfinna"), "uppfin");});
test("uppfinningsrikt -> uppfinningsrik", function() {deepEqual( Stem("uppfinningsrikt"), "uppfinningsrik");});
test("uppfiskades -> uppfisk", function() {deepEqual( Stem("uppfiskades"), "uppfisk");});
test("uppflamma -> uppflamm", function() {deepEqual( Stem("uppflamma"), "uppflamm");});
test("uppflammande -> uppflamm", function() {deepEqual( Stem("uppflammande"), "uppflamm");});
test("uppflugen -> uppflug", function() {deepEqual( Stem("uppflugen"), "uppflug");});
test("uppflyttade -> uppflyt", function() {deepEqual( Stem("uppflyttade"), "uppflyt");});
test("uppfor -> uppf", function() {deepEqual( Stem("uppfor"), "uppf");});
test("uppfordrar -> uppfordr", function() {deepEqual( Stem("uppfordrar"), "uppfordr");});
test("uppfostra -> uppfostr", function() {deepEqual( Stem("uppfostra"), "uppfostr");});
test("uppfostrad -> uppfostr", function() {deepEqual( Stem("uppfostrad"), "uppfostr");});
test("uppfostrade -> uppfostr", function() {deepEqual( Stem("uppfostrade"), "uppfostr");});
test("uppfostran -> uppfostran", function() {deepEqual( Stem("uppfostran"), "uppfostran");});
test("uppfostrans -> uppfostran", function() {deepEqual( Stem("uppfostrans"), "uppfostran");});
test("uppfostrarinna -> uppfostrarin", function() {deepEqual( Stem("uppfostrarinna"), "uppfostrarin");});
test("uppfostras -> uppfostr", function() {deepEqual( Stem("uppfostras"), "uppfostr");});
test("uppfostrat -> uppfostr", function() {deepEqual( Stem("uppfostrat"), "uppfostr");});
test("uppfostrats -> uppfostrat", function() {deepEqual( Stem("uppfostrats"), "uppfostrat");});
test("uppfriska -> uppfrisk", function() {deepEqual( Stem("uppfriska"), "uppfrisk");});
test("uppfriskade -> uppfrisk", function() {deepEqual( Stem("uppfriskade"), "uppfrisk");});
test("uppfriskande -> uppfrisk", function() {deepEqual( Stem("uppfriskande"), "uppfrisk");});
test("uppfriskar -> uppfrisk", function() {deepEqual( Stem("uppfriskar"), "uppfrisk");});
test("uppfriskat -> uppfrisk", function() {deepEqual( Stem("uppfriskat"), "uppfrisk");});
test("uppfriskningar -> uppfriskning", function() {deepEqual( Stem("uppfriskningar"), "uppfriskning");});
test("uppfrätta -> uppfrät", function() {deepEqual( Stem("uppfrätta"), "uppfrät");});
test("uppfunna -> uppfun", function() {deepEqual( Stem("uppfunna"), "uppfun");});
test("uppfunnit -> uppfunnit", function() {deepEqual( Stem("uppfunnit"), "uppfunnit");});
test("uppfylde -> uppfyld", function() {deepEqual( Stem("uppfylde"), "uppfyld");});
test("uppfylla -> uppfyll", function() {deepEqual( Stem("uppfylla"), "uppfyll");});
test("uppfyllande -> uppfyll", function() {deepEqual( Stem("uppfyllande"), "uppfyll");});
test("uppfyllandet -> uppfyll", function() {deepEqual( Stem("uppfyllandet"), "uppfyll");});
test("uppfyllas -> uppfyll", function() {deepEqual( Stem("uppfyllas"), "uppfyll");});
test("uppfylld -> uppfylld", function() {deepEqual( Stem("uppfylld"), "uppfylld");});
test("uppfyllda -> uppfylld", function() {deepEqual( Stem("uppfyllda"), "uppfylld");});
test("uppfyllde -> uppfylld", function() {deepEqual( Stem("uppfyllde"), "uppfylld");});
test("uppfyllelse -> uppfyll", function() {deepEqual( Stem("uppfyllelse"), "uppfyll");});
test("uppfyller -> uppfyll", function() {deepEqual( Stem("uppfyller"), "uppfyll");});
test("uppfyllt -> uppfyllt", function() {deepEqual( Stem("uppfyllt"), "uppfyllt");});
test("uppfästade -> uppfäst", function() {deepEqual( Stem("uppfästade"), "uppfäst");});
test("uppfånga -> uppfång", function() {deepEqual( Stem("uppfånga"), "uppfång");});
test("uppfångade -> uppfång", function() {deepEqual( Stem("uppfångade"), "uppfång");});
test("uppfångades -> uppfång", function() {deepEqual( Stem("uppfångades"), "uppfång");});
test("uppfångat -> uppfång", function() {deepEqual( Stem("uppfångat"), "uppfång");});
test("uppfödd -> uppföd", function() {deepEqual( Stem("uppfödd"), "uppföd");});
test("uppfödda -> uppföd", function() {deepEqual( Stem("uppfödda"), "uppföd");});
test("uppfödt -> uppföd", function() {deepEqual( Stem("uppfödt"), "uppföd");});
test("uppför -> uppför", function() {deepEqual( Stem("uppför"), "uppför");});
test("uppföra -> uppför", function() {deepEqual( Stem("uppföra"), "uppför");});
test("uppförande -> uppför", function() {deepEqual( Stem("uppförande"), "uppför");});
test("uppförd -> uppförd", function() {deepEqual( Stem("uppförd"), "uppförd");});
test("uppförda -> uppförd", function() {deepEqual( Stem("uppförda"), "uppförd");});
test("uppförde -> uppförd", function() {deepEqual( Stem("uppförde"), "uppförd");});
test("uppfördes -> uppförd", function() {deepEqual( Stem("uppfördes"), "uppförd");});
test("uppfört -> uppfört", function() {deepEqual( Stem("uppfört"), "uppfört");});
test("uppgaf -> uppgaf", function() {deepEqual( Stem("uppgaf"), "uppgaf");});
test("uppgav -> uppgav", function() {deepEqual( Stem("uppgav"), "uppgav");});
test("uppgett -> uppget", function() {deepEqual( Stem("uppgett"), "uppget");});
test("uppgick -> uppgick", function() {deepEqual( Stem("uppgick"), "uppgick");});
test("uppgifna -> uppgifn", function() {deepEqual( Stem("uppgifna"), "uppgifn");});
test("uppgift -> uppgift", function() {deepEqual( Stem("uppgift"), "uppgift");});
test("uppgiften -> uppgift", function() {deepEqual( Stem("uppgiften"), "uppgift");});
test("uppgifter -> uppgift", function() {deepEqual( Stem("uppgifter"), "uppgift");});
test("uppgingo -> uppgingo", function() {deepEqual( Stem("uppgingo"), "uppgingo");});
test("uppgiven -> uppgiv", function() {deepEqual( Stem("uppgiven"), "uppgiv");});
test("uppgivit -> uppgivit", function() {deepEqual( Stem("uppgivit"), "uppgivit");});
test("uppgjorda -> uppgjord", function() {deepEqual( Stem("uppgjorda"), "uppgjord");});
test("uppgjorde -> uppgjord", function() {deepEqual( Stem("uppgjorde"), "uppgjord");});
test("uppgjort -> uppgjort", function() {deepEqual( Stem("uppgjort"), "uppgjort");});
test("uppgräfde -> uppgräfd", function() {deepEqual( Stem("uppgräfde"), "uppgräfd");});
test("uppgående -> uppgåend", function() {deepEqual( Stem("uppgående"), "uppgåend");});
test("uppgåvo -> uppgåvo", function() {deepEqual( Stem("uppgåvo"), "uppgåvo");});
test("uppgöra -> uppgör", function() {deepEqual( Stem("uppgöra"), "uppgör");});
test("uppgörande -> uppgör", function() {deepEqual( Stem("uppgörande"), "uppgör");});
test("upphandlingar -> upphandling", function() {deepEqual( Stem("upphandlingar"), "upphandling");});
test("upphet -> upp", function() {deepEqual( Stem("upphet"), "upp");});
test("upphetsad -> upphets", function() {deepEqual( Stem("upphetsad"), "upphets");});
test("upphetsade -> upphets", function() {deepEqual( Stem("upphetsade"), "upphets");});
test("upphetsning -> upphetsning", function() {deepEqual( Stem("upphetsning"), "upphetsning");});
test("upphettade -> upphet", function() {deepEqual( Stem("upphettade"), "upphet");});
test("upphettat -> upphet", function() {deepEqual( Stem("upphettat"), "upphet");});
test("upphitta -> upphit", function() {deepEqual( Stem("upphitta"), "upphit");});
test("upphjelpa -> upphjelp", function() {deepEqual( Stem("upphjelpa"), "upphjelp");});
test("upphofvet -> upphofvet", function() {deepEqual( Stem("upphofvet"), "upphofvet");});
test("upphov -> upphov", function() {deepEqual( Stem("upphov"), "upphov");});
test("upphuggen -> upphugg", function() {deepEqual( Stem("upphuggen"), "upphugg");});
test("upphäfde -> upphäfd", function() {deepEqual( Stem("upphäfde"), "upphäfd");});
test("upphällningen -> upphällning", function() {deepEqual( Stem("upphällningen"), "upphällning");});
test("upphänga -> upphäng", function() {deepEqual( Stem("upphänga"), "upphäng");});
test("upphängda -> upphäng", function() {deepEqual( Stem("upphängda"), "upphäng");});
test("upphängde -> upphäng", function() {deepEqual( Stem("upphängde"), "upphäng");});
test("upphängdes -> upphäng", function() {deepEqual( Stem("upphängdes"), "upphäng");});
test("upphävd -> upphävd", function() {deepEqual( Stem("upphävd"), "upphävd");});
test("upphöja -> upphöj", function() {deepEqual( Stem("upphöja"), "upphöj");});
test("upphöjd -> upphöjd", function() {deepEqual( Stem("upphöjd"), "upphöjd");});
test("upphöjda -> upphöjd", function() {deepEqual( Stem("upphöjda"), "upphöjd");});
test("upphöjelse -> upphöj", function() {deepEqual( Stem("upphöjelse"), "upphöj");});
test("upphöjning -> upphöjning", function() {deepEqual( Stem("upphöjning"), "upphöjning");});
test("upphöjt -> upphöjt", function() {deepEqual( Stem("upphöjt"), "upphöjt");});
test("upphöra -> upphör", function() {deepEqual( Stem("upphöra"), "upphör");});
test("upphörande -> upphör", function() {deepEqual( Stem("upphörande"), "upphör");});
test("upphörde -> upphörd", function() {deepEqual( Stem("upphörde"), "upphörd");});
test("upphört -> upphört", function() {deepEqual( Stem("upphört"), "upphört");});
test("uppifrån -> uppifrån", function() {deepEqual( Stem("uppifrån"), "uppifrån");});
test("uppiggad -> uppigg", function() {deepEqual( Stem("uppiggad"), "uppigg");});
test("uppjagade -> uppjag", function() {deepEqual( Stem("uppjagade"), "uppjag");});
test("uppkalla -> uppkall", function() {deepEqual( Stem("uppkalla"), "uppkall");});
test("uppkallade -> uppkall", function() {deepEqual( Stem("uppkallade"), "uppkall");});
test("uppkastad -> uppkast", function() {deepEqual( Stem("uppkastad"), "uppkast");});
test("uppkastade -> uppkast", function() {deepEqual( Stem("uppkastade"), "uppkast");});
test("uppkastades -> uppkast", function() {deepEqual( Stem("uppkastades"), "uppkast");});
test("uppklev -> uppklev", function() {deepEqual( Stem("uppklev"), "uppklev");});
test("uppklättra -> uppklättr", function() {deepEqual( Stem("uppklättra"), "uppklättr");});
test("uppkom -> uppkom", function() {deepEqual( Stem("uppkom"), "uppkom");});
test("uppkomma -> uppkomm", function() {deepEqual( Stem("uppkomma"), "uppkomm");});
test("uppkommen -> uppkomm", function() {deepEqual( Stem("uppkommen"), "uppkomm");});
test("uppkommit -> uppkommit", function() {deepEqual( Stem("uppkommit"), "uppkommit");});
test("uppkrupen -> uppkrup", function() {deepEqual( Stem("uppkrupen"), "uppkrup");});
test("uppköp -> uppköp", function() {deepEqual( Stem("uppköp"), "uppköp");});
test("upplaga -> upplag", function() {deepEqual( Stem("upplaga"), "upplag");});
test("upplagd -> upplag", function() {deepEqual( Stem("upplagd"), "upplag");});
test("uppland -> uppland", function() {deepEqual( Stem("uppland"), "uppland");});
test("upplands -> uppland", function() {deepEqual( Stem("upplands"), "uppland");});
test("uppledsen -> uppleds", function() {deepEqual( Stem("uppledsen"), "uppleds");});
test("upplefde -> upplefd", function() {deepEqual( Stem("upplefde"), "upplefd");});
test("upplefva -> upplefv", function() {deepEqual( Stem("upplefva"), "upplefv");});
test("upplefvadt -> upplefvad", function() {deepEqual( Stem("upplefvadt"), "upplefvad");});
test("upplefvat -> upplefv", function() {deepEqual( Stem("upplefvat"), "upplefv");});
test("uppleva -> upplev", function() {deepEqual( Stem("uppleva"), "upplev");});
test("upplevat -> upplev", function() {deepEqual( Stem("upplevat"), "upplev");});
test("upplevde -> upplevd", function() {deepEqual( Stem("upplevde"), "upplevd");});
test("uppleve -> upplev", function() {deepEqual( Stem("uppleve"), "upplev");});
test("upplevelse -> upplev", function() {deepEqual( Stem("upplevelse"), "upplev");});
test("upplevelsen -> upplev", function() {deepEqual( Stem("upplevelsen"), "upplev");});
test("upplevelser -> upplev", function() {deepEqual( Stem("upplevelser"), "upplev");});
test("upplifva -> upplifv", function() {deepEqual( Stem("upplifva"), "upplifv");});
test("uppliva -> uppliv", function() {deepEqual( Stem("uppliva"), "uppliv");});
test("upplivad -> uppliv", function() {deepEqual( Stem("upplivad"), "uppliv");});
test("upplivade -> uppliv", function() {deepEqual( Stem("upplivade"), "uppliv");});
test("upplivande -> uppliv", function() {deepEqual( Stem("upplivande"), "uppliv");});
test("upplyft -> upplyft", function() {deepEqual( Stem("upplyft"), "upplyft");});
test("upplyfta -> upplyft", function() {deepEqual( Stem("upplyfta"), "upplyft");});
test("upplyftade -> upplyft", function() {deepEqual( Stem("upplyftade"), "upplyft");});
test("upplyftande -> upplyft", function() {deepEqual( Stem("upplyftande"), "upplyft");});
test("upplyfte -> upplyft", function() {deepEqual( Stem("upplyfte"), "upplyft");});
test("upplyftes -> upplyft", function() {deepEqual( Stem("upplyftes"), "upplyft");});
test("upplysa -> upplys", function() {deepEqual( Stem("upplysa"), "upplys");});
test("upplysning -> upplysning", function() {deepEqual( Stem("upplysning"), "upplysning");});
test("upplysningar -> upplysning", function() {deepEqual( Stem("upplysningar"), "upplysning");});
test("upplysningen -> upplysning", function() {deepEqual( Stem("upplysningen"), "upplysning");});
test("upplyst -> upplyst", function() {deepEqual( Stem("upplyst"), "upplyst");});
test("upplysta -> upplyst", function() {deepEqual( Stem("upplysta"), "upplyst");});
test("upplyste -> upplyst", function() {deepEqual( Stem("upplyste"), "upplyst");});
test("upplystes -> upplyst", function() {deepEqual( Stem("upplystes"), "upplyst");});
test("upplägga -> upplägg", function() {deepEqual( Stem("upplägga"), "upplägg");});
test("uppläsa -> uppläs", function() {deepEqual( Stem("uppläsa"), "uppläs");});
test("uppläsningen -> uppläsning", function() {deepEqual( Stem("uppläsningen"), "uppläsning");});
test("uppläst -> uppläst", function() {deepEqual( Stem("uppläst"), "uppläst");});
test("upplästes -> uppläst", function() {deepEqual( Stem("upplästes"), "uppläst");});
test("upplät -> upplät", function() {deepEqual( Stem("upplät"), "upplät");});
test("upplågade -> upplåg", function() {deepEqual( Stem("upplågade"), "upplåg");});
test("upplågande -> upplåg", function() {deepEqual( Stem("upplågande"), "upplåg");});
test("upplåste -> upplåst", function() {deepEqual( Stem("upplåste"), "upplåst");});
test("upplåta -> upplåt", function() {deepEqual( Stem("upplåta"), "upplåt");});
test("upplåtit -> upplåtit", function() {deepEqual( Stem("upplåtit"), "upplåtit");});
test("upplösande -> upplös", function() {deepEqual( Stem("upplösande"), "upplös");});
test("upplösas -> upplös", function() {deepEqual( Stem("upplösas"), "upplös");});
test("upplösning -> upplösning", function() {deepEqual( Stem("upplösning"), "upplösning");});
test("upplöst -> upplös", function() {deepEqual( Stem("upplöst"), "upplös");});
test("upplösta -> upplös", function() {deepEqual( Stem("upplösta"), "upplös");});
test("uppmana -> uppman", function() {deepEqual( Stem("uppmana"), "uppman");});
test("uppmanad -> uppman", function() {deepEqual( Stem("uppmanad"), "uppman");});
test("uppmanade -> uppman", function() {deepEqual( Stem("uppmanade"), "uppman");});
test("uppmanades -> uppman", function() {deepEqual( Stem("uppmanades"), "uppman");});
test("uppmanande -> uppman", function() {deepEqual( Stem("uppmanande"), "uppman");});
test("uppmanar -> uppman", function() {deepEqual( Stem("uppmanar"), "uppman");});
test("uppmanat -> uppman", function() {deepEqual( Stem("uppmanat"), "uppman");});
test("uppmaning -> uppmaning", function() {deepEqual( Stem("uppmaning"), "uppmaning");});
test("uppmaningar -> uppmaning", function() {deepEqual( Stem("uppmaningar"), "uppmaning");});
test("uppmaningen -> uppmaning", function() {deepEqual( Stem("uppmaningen"), "uppmaning");});
test("uppmjukad -> uppmjuk", function() {deepEqual( Stem("uppmjukad"), "uppmjuk");});
test("uppmuntra -> uppmuntr", function() {deepEqual( Stem("uppmuntra"), "uppmuntr");});
test("uppmuntrad -> uppmuntr", function() {deepEqual( Stem("uppmuntrad"), "uppmuntr");});
test("uppmuntrade -> uppmuntr", function() {deepEqual( Stem("uppmuntrade"), "uppmuntr");});
test("uppmuntran -> uppmuntran", function() {deepEqual( Stem("uppmuntran"), "uppmuntran");});
test("uppmuntrande -> uppmuntr", function() {deepEqual( Stem("uppmuntrande"), "uppmuntr");});
test("uppmuntrar -> uppmuntr", function() {deepEqual( Stem("uppmuntrar"), "uppmuntr");});
test("uppmuntringar -> uppmuntring", function() {deepEqual( Stem("uppmuntringar"), "uppmuntring");});
test("uppmärk -> uppmärk", function() {deepEqual( Stem("uppmärk"), "uppmärk");});
test("uppmärksam -> uppmärksam", function() {deepEqual( Stem("uppmärksam"), "uppmärksam");});
test("uppmärksamhet -> uppmärksam", function() {deepEqual( Stem("uppmärksamhet"), "uppmärksam");});
test("uppmärksamheten -> uppmärksam", function() {deepEqual( Stem("uppmärksamheten"), "uppmärksam");});
test("uppmärksamheter -> uppmärksam", function() {deepEqual( Stem("uppmärksamheter"), "uppmärksam");});
test("uppmärksamma -> uppmärksamm", function() {deepEqual( Stem("uppmärksamma"), "uppmärksamm");});
test("uppmärksammad -> uppmärksamm", function() {deepEqual( Stem("uppmärksammad"), "uppmärksamm");});
test("uppmärksamme -> uppmärksamm", function() {deepEqual( Stem("uppmärksamme"), "uppmärksamm");});
test("uppmärksamt -> uppmärksamt", function() {deepEqual( Stem("uppmärksamt"), "uppmärksamt");});
test("uppmärksarnt -> uppmärksarnt", function() {deepEqual( Stem("uppmärksarnt"), "uppmärksarnt");});
test("uppnäsa -> uppnäs", function() {deepEqual( Stem("uppnäsa"), "uppnäs");});
test("uppnådde -> uppnåd", function() {deepEqual( Stem("uppnådde"), "uppnåd");});
test("uppnått -> uppnåt", function() {deepEqual( Stem("uppnått"), "uppnåt");});
test("uppoffra -> uppoffr", function() {deepEqual( Stem("uppoffra"), "uppoffr");});
test("uppoffrade -> uppoffr", function() {deepEqual( Stem("uppoffrade"), "uppoffr");});
test("uppoffrande -> uppoffr", function() {deepEqual( Stem("uppoffrande"), "uppoffr");});
test("uppoffrar -> uppoffr", function() {deepEqual( Stem("uppoffrar"), "uppoffr");});
test("uppoffras -> uppoffr", function() {deepEqual( Stem("uppoffras"), "uppoffr");});
test("uppoffrat -> uppoffr", function() {deepEqual( Stem("uppoffrat"), "uppoffr");});
test("uppoffring -> uppoffring", function() {deepEqual( Stem("uppoffring"), "uppoffring");});
test("uppoffringar -> uppoffring", function() {deepEqual( Stem("uppoffringar"), "uppoffring");});
test("upprepa -> upprep", function() {deepEqual( Stem("upprepa"), "upprep");});
test("upprepad -> upprep", function() {deepEqual( Stem("upprepad"), "upprep");});
test("upprepade -> upprep", function() {deepEqual( Stem("upprepade"), "upprep");});
test("upprepande -> upprep", function() {deepEqual( Stem("upprepande"), "upprep");});
test("upprepar -> upprep", function() {deepEqual( Stem("upprepar"), "upprep");});
test("upprepas -> upprep", function() {deepEqual( Stem("upprepas"), "upprep");});
test("uppreste -> upprest", function() {deepEqual( Stem("uppreste"), "upprest");});
test("uppretad -> uppret", function() {deepEqual( Stem("uppretad"), "uppret");});
test("uppretade -> uppret", function() {deepEqual( Stem("uppretade"), "uppret");});
test("upprifva -> upprifv", function() {deepEqual( Stem("upprifva"), "upprifv");});
test("upprigtig -> upprigt", function() {deepEqual( Stem("upprigtig"), "upprigt");});
test("upprigtiga -> upprigt", function() {deepEqual( Stem("upprigtiga"), "upprigt");});
test("upprigtigt -> upprigt", function() {deepEqual( Stem("upprigtigt"), "upprigt");});
test("uppriktig -> upprikt", function() {deepEqual( Stem("uppriktig"), "upprikt");});
test("uppriktiga -> upprikt", function() {deepEqual( Stem("uppriktiga"), "upprikt");});
test("uppriktigare -> upprikt", function() {deepEqual( Stem("uppriktigare"), "upprikt");});
test("uppriktigaste -> upprikt", function() {deepEqual( Stem("uppriktigaste"), "upprikt");});
test("uppriktighet -> upprikt", function() {deepEqual( Stem("uppriktighet"), "upprikt");});
test("uppriktigt -> upprikt", function() {deepEqual( Stem("uppriktigt"), "upprikt");});
test("upprivna -> upprivn", function() {deepEqual( Stem("upprivna"), "upprivn");});
test("uppror -> uppr", function() {deepEqual( Stem("uppror"), "uppr");});
test("upprorisk -> upprorisk", function() {deepEqual( Stem("upprorisk"), "upprorisk");});
test("upproriska -> upprorisk", function() {deepEqual( Stem("upproriska"), "upprorisk");});
test("upproriske -> upprorisk", function() {deepEqual( Stem("upproriske"), "upprorisk");});
test("upprycka -> uppryck", function() {deepEqual( Stem("upprycka"), "uppryck");});
test("uppryckande -> uppryck", function() {deepEqual( Stem("uppryckande"), "uppryck");});
test("uppryckas -> uppryck", function() {deepEqual( Stem("uppryckas"), "uppryck");});
test("uppryckt -> uppryck", function() {deepEqual( Stem("uppryckt"), "uppryck");});
test("uppryckta -> uppryck", function() {deepEqual( Stem("uppryckta"), "uppryck");});
test("upprymd -> upprymd", function() {deepEqual( Stem("upprymd"), "upprymd");});
test("uppräkna -> uppräkn", function() {deepEqual( Stem("uppräkna"), "uppräkn");});
test("upprätade -> upprät", function() {deepEqual( Stem("upprätade"), "upprät");});
test("upprätt -> upprät", function() {deepEqual( Stem("upprätt"), "upprät");});
test("upprätta -> upprät", function() {deepEqual( Stem("upprätta"), "upprät");});
test("upprättad -> upprät", function() {deepEqual( Stem("upprättad"), "upprät");});
test("upprättelse -> upprätt", function() {deepEqual( Stem("upprättelse"), "upprätt");});
test("upprätthålla -> upprätthåll", function() {deepEqual( Stem("upprätthålla"), "upprätthåll");});
test("upprör -> upprör", function() {deepEqual( Stem("upprör"), "upprör");});
test("upprörande -> upprör", function() {deepEqual( Stem("upprörande"), "upprör");});
test("upprörd -> upprörd", function() {deepEqual( Stem("upprörd"), "upprörd");});
test("upprörda -> upprörd", function() {deepEqual( Stem("upprörda"), "upprörd");});
test("upprördbet -> upprördbet", function() {deepEqual( Stem("upprördbet"), "upprördbet");});
test("upprörde -> upprörd", function() {deepEqual( Stem("upprörde"), "upprörd");});
test("upprördes -> upprörd", function() {deepEqual( Stem("upprördes"), "upprörd");});
test("upprördt -> upprörd", function() {deepEqual( Stem("upprördt"), "upprörd");});
test("upprört -> upprört", function() {deepEqual( Stem("upprört"), "upprört");});
test("uppsagd -> uppsag", function() {deepEqual( Stem("uppsagd"), "uppsag");});
test("uppsala -> uppsal", function() {deepEqual( Stem("uppsala"), "uppsal");});
test("uppsalakamrat -> uppsalakamr", function() {deepEqual( Stem("uppsalakamrat"), "uppsalakamr");});
test("uppsalamåne -> uppsalamån", function() {deepEqual( Stem("uppsalamåne"), "uppsalamån");});
test("uppsalapoesien -> uppsalapoesi", function() {deepEqual( Stem("uppsalapoesien"), "uppsalapoesi");});
test("uppsatt -> uppsat", function() {deepEqual( Stem("uppsatt"), "uppsat");});
test("uppsatte -> uppsat", function() {deepEqual( Stem("uppsatte"), "uppsat");});
test("uppseende -> uppseend", function() {deepEqual( Stem("uppseende"), "uppseend");});
test("uppsikt -> uppsik", function() {deepEqual( Stem("uppsikt"), "uppsik");});
test("uppskakad -> uppskak", function() {deepEqual( Stem("uppskakad"), "uppskak");});
test("uppskakande -> uppskak", function() {deepEqual( Stem("uppskakande"), "uppskak");});
test("uppskatta -> uppskat", function() {deepEqual( Stem("uppskatta"), "uppskat");});
test("uppskjuta -> uppskjut", function() {deepEqual( Stem("uppskjuta"), "uppskjut");});
test("uppskjutande -> uppskjut", function() {deepEqual( Stem("uppskjutande"), "uppskjut");});
test("uppskjutas -> uppskjut", function() {deepEqual( Stem("uppskjutas"), "uppskjut");});
test("uppskjutet -> uppskjutet", function() {deepEqual( Stem("uppskjutet"), "uppskjutet");});
test("uppskjutna -> uppskjutn", function() {deepEqual( Stem("uppskjutna"), "uppskjutn");});
test("uppskriva -> uppskriv", function() {deepEqual( Stem("uppskriva"), "uppskriv");});
test("uppskriven -> uppskriv", function() {deepEqual( Stem("uppskriven"), "uppskriv");});
test("uppskrämd -> uppskrämd", function() {deepEqual( Stem("uppskrämd"), "uppskrämd");});
test("uppskrämda -> uppskrämd", function() {deepEqual( Stem("uppskrämda"), "uppskrämd");});
test("uppslag -> uppslag", function() {deepEqual( Stem("uppslag"), "uppslag");});
test("uppslagen -> uppslag", function() {deepEqual( Stem("uppslagen"), "uppslag");});
test("uppslaget -> uppslaget", function() {deepEqual( Stem("uppslaget"), "uppslaget");});
test("uppslagna -> uppslagn", function() {deepEqual( Stem("uppslagna"), "uppslagn");});
test("uppslitna -> uppslitn", function() {deepEqual( Stem("uppslitna"), "uppslitn");});
test("uppslitsade -> uppslits", function() {deepEqual( Stem("uppslitsade"), "uppslits");});
test("uppslog -> uppslog", function() {deepEqual( Stem("uppslog"), "uppslog");});
test("uppsluka -> uppsluk", function() {deepEqual( Stem("uppsluka"), "uppsluk");});
test("uppslukade -> uppsluk", function() {deepEqual( Stem("uppslukade"), "uppsluk");});
test("uppslukades -> uppsluk", function() {deepEqual( Stem("uppslukades"), "uppsluk");});
test("uppslukar -> uppsluk", function() {deepEqual( Stem("uppslukar"), "uppsluk");});
test("uppslukas -> uppsluk", function() {deepEqual( Stem("uppslukas"), "uppsluk");});
test("uppsluppen -> uppslupp", function() {deepEqual( Stem("uppsluppen"), "uppslupp");});
test("uppsluppet -> uppsluppet", function() {deepEqual( Stem("uppsluppet"), "uppsluppet");});
test("uppsnappa -> uppsnapp", function() {deepEqual( Stem("uppsnappa"), "uppsnapp");});
test("uppsnappat -> uppsnapp", function() {deepEqual( Stem("uppsnappat"), "uppsnapp");});
test("uppsprang -> uppsprang", function() {deepEqual( Stem("uppsprang"), "uppsprang");});
test("uppspringande -> uppspring", function() {deepEqual( Stem("uppspringande"), "uppspring");});
test("uppspädd -> uppspäd", function() {deepEqual( Stem("uppspädd"), "uppspäd");});
test("uppspändt -> uppspänd", function() {deepEqual( Stem("uppspändt"), "uppspänd");});
test("uppspärrade -> uppspärr", function() {deepEqual( Stem("uppspärrade"), "uppspärr");});
test("uppsteg -> uppsteg", function() {deepEqual( Stem("uppsteg"), "uppsteg");});
test("uppstego -> uppstego", function() {deepEqual( Stem("uppstego"), "uppstego");});
test("uppstigande -> uppst", function() {deepEqual( Stem("uppstigande"), "uppst");});
test("uppstigit -> uppstigit", function() {deepEqual( Stem("uppstigit"), "uppstigit");});
test("uppstigning -> uppstigning", function() {deepEqual( Stem("uppstigning"), "uppstigning");});
test("uppstod -> uppstod", function() {deepEqual( Stem("uppstod"), "uppstod");});
test("uppstodo -> uppstodo", function() {deepEqual( Stem("uppstodo"), "uppstodo");});
test("uppstofferad -> uppstoffer", function() {deepEqual( Stem("uppstofferad"), "uppstoffer");});
test("uppstruket -> uppstruket", function() {deepEqual( Stem("uppstruket"), "uppstruket");});
test("uppställa -> uppställ", function() {deepEqual( Stem("uppställa"), "uppställ");});
test("uppställda -> uppställd", function() {deepEqual( Stem("uppställda"), "uppställd");});
test("uppställt -> uppställt", function() {deepEqual( Stem("uppställt"), "uppställt");});
test("uppstämma -> uppstämm", function() {deepEqual( Stem("uppstämma"), "uppstämm");});
test("uppstå -> uppstå", function() {deepEqual( Stem("uppstå"), "uppstå");});
test("uppståndelse -> uppstånd", function() {deepEqual( Stem("uppståndelse"), "uppstånd");});
test("uppstår -> uppstår", function() {deepEqual( Stem("uppstår"), "uppstår");});
test("uppstått -> uppståt", function() {deepEqual( Stem("uppstått"), "uppståt");});
test("uppsvälld -> uppsvälld", function() {deepEqual( Stem("uppsvälld"), "uppsvälld");});
test("uppsvällda -> uppsvälld", function() {deepEqual( Stem("uppsvällda"), "uppsvälld");});
test("uppsvällt -> uppsvällt", function() {deepEqual( Stem("uppsvällt"), "uppsvällt");});
test("uppsyn -> uppsyn", function() {deepEqual( Stem("uppsyn"), "uppsyn");});
test("uppsäga -> uppsäg", function() {deepEqual( Stem("uppsäga"), "uppsäg");});
test("uppsägningstid -> uppsägningstid", function() {deepEqual( Stem("uppsägningstid"), "uppsägningstid");});
test("uppsände -> uppsänd", function() {deepEqual( Stem("uppsände"), "uppsänd");});
test("uppsändt -> uppsänd", function() {deepEqual( Stem("uppsändt"), "uppsänd");});
test("uppsätta -> uppsät", function() {deepEqual( Stem("uppsätta"), "uppsät");});
test("uppsätter -> uppsät", function() {deepEqual( Stem("uppsätter"), "uppsät");});
test("uppsåt -> uppsåt", function() {deepEqual( Stem("uppsåt"), "uppsåt");});
test("uppsöka -> uppsök", function() {deepEqual( Stem("uppsöka"), "uppsök");});
test("uppsökte -> uppsök", function() {deepEqual( Stem("uppsökte"), "uppsök");});
test("uppt -> uppt", function() {deepEqual( Stem("uppt"), "uppt");});
test("upptackt -> upptack", function() {deepEqual( Stem("upptackt"), "upptack");});
test("upptaga -> upptag", function() {deepEqual( Stem("upptaga"), "upptag");});
test("upptagen -> upptag", function() {deepEqual( Stem("upptagen"), "upptag");});
test("upptages -> upptag", function() {deepEqual( Stem("upptages"), "upptag");});
test("upptaget -> upptaget", function() {deepEqual( Stem("upptaget"), "upptaget");});
test("upptagit -> upptagit", function() {deepEqual( Stem("upptagit"), "upptagit");});
test("upptagits -> upptagit", function() {deepEqual( Stem("upptagits"), "upptagit");});
test("upptagna -> upptagn", function() {deepEqual( Stem("upptagna"), "upptagn");});
test("upptecknade -> uppteckn", function() {deepEqual( Stem("upptecknade"), "uppteckn");});
test("upptecknat -> uppteckn", function() {deepEqual( Stem("upptecknat"), "uppteckn");});
test("upptill -> upptill", function() {deepEqual( Stem("upptill"), "upptill");});
test("upptog -> upptog", function() {deepEqual( Stem("upptog"), "upptog");});
test("upptogo -> upptogo", function() {deepEqual( Stem("upptogo"), "upptogo");});
test("upptogos -> upptogo", function() {deepEqual( Stem("upptogos"), "upptogo");});
test("upptogs -> upptog", function() {deepEqual( Stem("upptogs"), "upptog");});
test("upptornade -> upptorn", function() {deepEqual( Stem("upptornade"), "upptorn");});
test("uppträda -> uppträd", function() {deepEqual( Stem("uppträda"), "uppträd");});
test("uppträdande -> uppträd", function() {deepEqual( Stem("uppträdande"), "uppträd");});
test("uppträdda -> uppträd", function() {deepEqual( Stem("uppträdda"), "uppträd");});
test("uppträdde -> uppträd", function() {deepEqual( Stem("uppträdde"), "uppträd");});
test("uppträde -> uppträd", function() {deepEqual( Stem("uppträde"), "uppträd");});
test("uppträden -> uppträd", function() {deepEqual( Stem("uppträden"), "uppträd");});
test("uppträder -> uppträd", function() {deepEqual( Stem("uppträder"), "uppträd");});
test("uppträdet -> uppträdet", function() {deepEqual( Stem("uppträdet"), "uppträdet");});
test("uppträtt -> uppträt", function() {deepEqual( Stem("uppträtt"), "uppträt");});
test("upptäcka -> upptäck", function() {deepEqual( Stem("upptäcka"), "upptäck");});
test("upptäckande -> upptäck", function() {deepEqual( Stem("upptäckande"), "upptäck");});
test("upptäckas -> upptäck", function() {deepEqual( Stem("upptäckas"), "upptäck");});
test("upptäcker -> upptäck", function() {deepEqual( Stem("upptäcker"), "upptäck");});
test("upptäcks -> upptäck", function() {deepEqual( Stem("upptäcks"), "upptäck");});
test("upptäckt -> upptäck", function() {deepEqual( Stem("upptäckt"), "upptäck");});
test("upptäckta -> upptäck", function() {deepEqual( Stem("upptäckta"), "upptäck");});
test("upptäckte -> upptäck", function() {deepEqual( Stem("upptäckte"), "upptäck");});
test("upptäckten -> upptäck", function() {deepEqual( Stem("upptäckten"), "upptäck");});
test("upptäckter -> upptäck", function() {deepEqual( Stem("upptäckter"), "upptäck");});
test("upptäcktsfärd -> upptäcktsfärd", function() {deepEqual( Stem("upptäcktsfärd"), "upptäcktsfärd");});
test("upptänkligt -> upptänk", function() {deepEqual( Stem("upptänkligt"), "upptänk");});
test("upptåckt -> upptåck", function() {deepEqual( Stem("upptåckt"), "upptåck");});
test("uppvakna -> uppvakn", function() {deepEqual( Stem("uppvakna"), "uppvakn");});
test("uppvaknande -> uppvakn", function() {deepEqual( Stem("uppvaknande"), "uppvakn");});
test("uppvaknandet -> uppvakn", function() {deepEqual( Stem("uppvaknandet"), "uppvakn");});
test("uppvakta -> uppvak", function() {deepEqual( Stem("uppvakta"), "uppvak");});
test("uppvaktad -> uppvak", function() {deepEqual( Stem("uppvaktad"), "uppvak");});
test("uppvaktningsdräkt -> uppvaktningsdräk", function() {deepEqual( Stem("uppvaktningsdräkt"), "uppvaktningsdräk");});
test("uppvecklades -> uppveckl", function() {deepEqual( Stem("uppvecklades"), "uppveckl");});
test("uppvikt -> uppvik", function() {deepEqual( Stem("uppvikt"), "uppvik");});
test("uppvikta -> uppvik", function() {deepEqual( Stem("uppvikta"), "uppvik");});
test("uppvisa -> uppvis", function() {deepEqual( Stem("uppvisa"), "uppvis");});
test("uppväckt -> uppväck", function() {deepEqual( Stem("uppväckt"), "uppväck");});
test("uppväckte -> uppväck", function() {deepEqual( Stem("uppväckte"), "uppväck");});
test("uppväcktes -> uppväck", function() {deepEqual( Stem("uppväcktes"), "uppväck");});
test("uppvägde -> uppväg", function() {deepEqual( Stem("uppvägde"), "uppväg");});
test("uppvärmd -> uppvärmd", function() {deepEqual( Stem("uppvärmd"), "uppvärmd");});
test("uppvärmt -> uppvärmt", function() {deepEqual( Stem("uppvärmt"), "uppvärmt");});
test("uppväxande -> uppväx", function() {deepEqual( Stem("uppväxande"), "uppväx");});
test("uppväxt -> uppväxt", function() {deepEqual( Stem("uppväxt"), "uppväxt");});
test("uppväxtår -> uppväxtår", function() {deepEqual( Stem("uppväxtår"), "uppväxtår");});
test("uppätna -> uppätn", function() {deepEqual( Stem("uppätna"), "uppätn");});
test("uppå -> uppå", function() {deepEqual( Stem("uppå"), "uppå");});
test("uppåt -> uppåt", function() {deepEqual( Stem("uppåt"), "uppåt");});
test("uppåtvända -> uppåtvänd", function() {deepEqual( Stem("uppåtvända"), "uppåtvänd");});
test("ur -> ur", function() {deepEqual( Stem("ur"), "ur");});
test("urarta -> urart", function() {deepEqual( Stem("urarta"), "urart");});
test("urblekt -> urblek", function() {deepEqual( Stem("urblekt"), "urblek");});
test("urblekta -> urblek", function() {deepEqual( Stem("urblekta"), "urblek");});
test("urblåst -> urblåst", function() {deepEqual( Stem("urblåst"), "urblåst");});
test("urboetten -> urboet", function() {deepEqual( Stem("urboetten"), "urboet");});
test("uren -> uren", function() {deepEqual( Stem("uren"), "uren");});
test("urens -> uren", function() {deepEqual( Stem("urens"), "uren");});
test("urer -> urer", function() {deepEqual( Stem("urer"), "urer");});
test("uret -> uret", function() {deepEqual( Stem("uret"), "uret");});
test("urgamla -> urgaml", function() {deepEqual( Stem("urgamla"), "urgaml");});
test("urgammal -> urgammal", function() {deepEqual( Stem("urgammal"), "urgammal");});
test("urholka -> urholk", function() {deepEqual( Stem("urholka"), "urholk");});
test("urladdade -> urlad", function() {deepEqual( Stem("urladdade"), "urlad");});
test("urmakarebaronen -> urmakarebaron", function() {deepEqual( Stem("urmakarebaronen"), "urmakarebaron");});
test("urmakaren -> urmak", function() {deepEqual( Stem("urmakaren"), "urmak");});
test("urmakarens -> urmak", function() {deepEqual( Stem("urmakarens"), "urmak");});
test("urmakartrall -> urmakartrall", function() {deepEqual( Stem("urmakartrall"), "urmakartrall");});
test("urmakeriet -> urmakeriet", function() {deepEqual( Stem("urmakeriet"), "urmakeriet");});
test("urmakeriprofessionen -> urmakeriprofession", function() {deepEqual( Stem("urmakeriprofessionen"), "urmakeriprofession");});
test("urmodig -> urmod", function() {deepEqual( Stem("urmodig"), "urmod");});
test("urmodiga -> urmod", function() {deepEqual( Stem("urmodiga"), "urmod");});
test("urmodigt -> urmod", function() {deepEqual( Stem("urmodigt"), "urmod");});
test("urna -> urn", function() {deepEqual( Stem("urna"), "urn");});
test("urringad -> urring", function() {deepEqual( Stem("urringad"), "urring");});
test("ursakta -> ursak", function() {deepEqual( Stem("ursakta"), "ursak");});
test("ursinne -> ursin", function() {deepEqual( Stem("ursinne"), "ursin");});
test("ursinnig -> ursinn", function() {deepEqual( Stem("ursinnig"), "ursinn");});
test("ursinniga -> ursinn", function() {deepEqual( Stem("ursinniga"), "ursinn");});
test("urskilde -> urskild", function() {deepEqual( Stem("urskilde"), "urskild");});
test("urskildes -> urskild", function() {deepEqual( Stem("urskildes"), "urskild");});
test("urskilja -> urskilj", function() {deepEqual( Stem("urskilja"), "urskilj");});
test("urskiljas -> urskilj", function() {deepEqual( Stem("urskiljas"), "urskilj");});
test("urskiljbara -> urskiljbar", function() {deepEqual( Stem("urskiljbara"), "urskiljbar");});
test("urskiljer -> urskilj", function() {deepEqual( Stem("urskiljer"), "urskilj");});
test("urskillning -> urskillning", function() {deepEqual( Stem("urskillning"), "urskillning");});
test("urskilning -> urskilning", function() {deepEqual( Stem("urskilning"), "urskilning");});
test("ursprungligcn -> ursprungligcn", function() {deepEqual( Stem("ursprungligcn"), "ursprungligcn");});
test("ursprungligen -> ursprung", function() {deepEqual( Stem("ursprungligen"), "ursprung");});
test("ursprungligt -> ursprung", function() {deepEqual( Stem("ursprungligt"), "ursprung");});
test("ursäkt -> ursäk", function() {deepEqual( Stem("ursäkt"), "ursäk");});
test("ursäkta -> ursäk", function() {deepEqual( Stem("ursäkta"), "ursäk");});
test("ursäktade -> ursäk", function() {deepEqual( Stem("ursäktade"), "ursäk");});
test("ursäktar -> ursäk", function() {deepEqual( Stem("ursäktar"), "ursäk");});
test("ursäkten -> ursäk", function() {deepEqual( Stem("ursäkten"), "ursäk");});
test("ursäkter -> ursäk", function() {deepEqual( Stem("ursäkter"), "ursäk");});
test("urtavla -> urtavl", function() {deepEqual( Stem("urtavla"), "urtavl");});
test("urtiden -> urtid", function() {deepEqual( Stem("urtiden"), "urtid");});
test("urtypen -> urtyp", function() {deepEqual( Stem("urtypen"), "urtyp");});
test("urval -> urval", function() {deepEqual( Stem("urval"), "urval");});
test("urverk -> urverk", function() {deepEqual( Stem("urverk"), "urverk");});
test("uråldrig -> uråldr", function() {deepEqual( Stem("uråldrig"), "uråldr");});
test("uråldriga -> uråldr", function() {deepEqual( Stem("uråldriga"), "uråldr");});
test("usa -> usa", function() {deepEqual( Stem("usa"), "usa");});
test("usel -> usel", function() {deepEqual( Stem("usel"), "usel");});
test("uselhet -> usel", function() {deepEqual( Stem("uselhet"), "usel");});
test("uselt -> uselt", function() {deepEqual( Stem("uselt"), "uselt");});
test("usla -> usl", function() {deepEqual( Stem("usla"), "usl");});
test("usling -> usling", function() {deepEqual( Stem("usling"), "usling");});
test("uslingarna -> usling", function() {deepEqual( Stem("uslingarna"), "usling");});
test("uslingen -> usling", function() {deepEqual( Stem("uslingen"), "usling");});
test("ut -> ut", function() {deepEqual( Stem("ut"), "ut");});
test("utaf -> utaf", function() {deepEqual( Stem("utaf"), "utaf");});
test("utan -> utan", function() {deepEqual( Stem("utan"), "utan");});
test("utandades -> utand", function() {deepEqual( Stem("utandades"), "utand");});
test("utandas -> utand", function() {deepEqual( Stem("utandas"), "utand");});
test("utanf -> utanf", function() {deepEqual( Stem("utanf"), "utanf");});
test("utanfflr -> utanfflr", function() {deepEqual( Stem("utanfflr"), "utanfflr");});
test("utanför -> utanför", function() {deepEqual( Stem("utanför"), "utanför");});
test("utanföre -> utanför", function() {deepEqual( Stem("utanföre"), "utanför");});
test("utanläxan -> utanläxan", function() {deepEqual( Stem("utanläxan"), "utanläxan");});
test("utanskrifterna -> utanskrift", function() {deepEqual( Stem("utanskrifterna"), "utanskrift");});
test("utantill -> utantill", function() {deepEqual( Stem("utantill"), "utantill");});
test("utas -> utas", function() {deepEqual( Stem("utas"), "utas");});
test("utav -> utav", function() {deepEqual( Stem("utav"), "utav");});
test("utbe -> utb", function() {deepEqual( Stem("utbe"), "utb");});
test("utbedja -> utbedj", function() {deepEqual( Stem("utbedja"), "utbedj");});
test("utbekomma -> utbekomm", function() {deepEqual( Stem("utbekomma"), "utbekomm");});
test("utbilda -> utbild", function() {deepEqual( Stem("utbilda"), "utbild");});
test("utbildad -> utbild", function() {deepEqual( Stem("utbildad"), "utbild");});
test("utbildadt -> utbildad", function() {deepEqual( Stem("utbildadt"), "utbildad");});
test("utbildat -> utbild", function() {deepEqual( Stem("utbildat"), "utbild");});
test("utbjuden -> utbjud", function() {deepEqual( Stem("utbjuden"), "utbjud");});
test("utblottade -> utblot", function() {deepEqual( Stem("utblottade"), "utblot");});
test("utblottat -> utblot", function() {deepEqual( Stem("utblottat"), "utblot");});
test("utbrast -> utbr", function() {deepEqual( Stem("utbrast"), "utbr");});
test("utbredd -> utbred", function() {deepEqual( Stem("utbredd"), "utbred");});
test("utbredda -> utbred", function() {deepEqual( Stem("utbredda"), "utbred");});
test("utbredde -> utbred", function() {deepEqual( Stem("utbredde"), "utbred");});
test("utbrista -> utbrist", function() {deepEqual( Stem("utbrista"), "utbrist");});
test("utbristande -> utbrist", function() {deepEqual( Stem("utbristande"), "utbrist");});
test("utbrott -> utbrot", function() {deepEqual( Stem("utbrott"), "utbrot");});
test("utbrotten -> utbrot", function() {deepEqual( Stem("utbrotten"), "utbrot");});
test("utbrunna -> utbrun", function() {deepEqual( Stem("utbrunna"), "utbrun");});
test("utbrunnen -> utbrun", function() {deepEqual( Stem("utbrunnen"), "utbrun");});
test("utbryta -> utbryt", function() {deepEqual( Stem("utbryta"), "utbryt");});
test("utbröt -> utbröt", function() {deepEqual( Stem("utbröt"), "utbröt");});
test("utbygda -> utbyg", function() {deepEqual( Stem("utbygda"), "utbyg");});
test("utbyggnaden -> utbyggnad", function() {deepEqual( Stem("utbyggnaden"), "utbyggnad");});
test("utbyta -> utbyt", function() {deepEqual( Stem("utbyta"), "utbyt");});
test("utbyte -> utbyt", function() {deepEqual( Stem("utbyte"), "utbyt");});
test("utbytt -> utbyt", function() {deepEqual( Stem("utbytt"), "utbyt");});
test("utbytte -> utbyt", function() {deepEqual( Stem("utbytte"), "utbyt");});
test("utbyttes -> utbyt", function() {deepEqual( Stem("utbyttes"), "utbyt");});
test("utdela -> utdel", function() {deepEqual( Stem("utdela"), "utdel");});
test("utdelade -> utdel", function() {deepEqual( Stem("utdelade"), "utdel");});
test("utdelaren -> utdel", function() {deepEqual( Stem("utdelaren"), "utdel");});
test("utdelning -> utdelning", function() {deepEqual( Stem("utdelning"), "utdelning");});
test("utdet -> utdet", function() {deepEqual( Stem("utdet"), "utdet");});
test("utdrag -> utdrag", function() {deepEqual( Stem("utdrag"), "utdrag");});
test("utdraget -> utdraget", function() {deepEqual( Stem("utdraget"), "utdraget");});
test("utdrog -> utdrog", function() {deepEqual( Stem("utdrog"), "utdrog");});
test("utdunstningen -> utdunstning", function() {deepEqual( Stem("utdunstningen"), "utdunstning");});
test("utdöd -> utdöd", function() {deepEqual( Stem("utdöd"), "utdöd");});
test("utdömd -> utdömd", function() {deepEqual( Stem("utdömd"), "utdömd");});
test("ute -> ute", function() {deepEqual( Stem("ute"), "ute");});
test("uteblef -> uteblef", function() {deepEqual( Stem("uteblef"), "uteblef");});
test("uteblev -> uteblev", function() {deepEqual( Stem("uteblev"), "uteblev");});
test("uteblifva -> uteblifv", function() {deepEqual( Stem("uteblifva"), "uteblifv");});
test("uteblir -> uteblir", function() {deepEqual( Stem("uteblir"), "uteblir");});
test("uteblivande -> utebliv", function() {deepEqual( Stem("uteblivande"), "utebliv");});
test("uteftcr -> uteftcr", function() {deepEqual( Stem("uteftcr"), "uteftcr");});
test("utefter -> uteft", function() {deepEqual( Stem("utefter"), "uteft");});
test("uteglömt -> uteglömt", function() {deepEqual( Stem("uteglömt"), "uteglömt");});
test("utesluta -> uteslut", function() {deepEqual( Stem("utesluta"), "uteslut");});
test("uteslutande -> uteslut", function() {deepEqual( Stem("uteslutande"), "uteslut");});
test("utestänga -> utestäng", function() {deepEqual( Stem("utestänga"), "utestäng");});
test("utestängd -> utestäng", function() {deepEqual( Stem("utestängd"), "utestäng");});
test("utexaminerad -> utexaminer", function() {deepEqual( Stem("utexaminerad"), "utexaminer");});
test("utfall -> utfall", function() {deepEqual( Stem("utfall"), "utfall");});
test("utfaller -> utfall", function() {deepEqual( Stem("utfaller"), "utfall");});
test("utfarande -> utfar", function() {deepEqual( Stem("utfarande"), "utfar");});
test("utfart -> utfart", function() {deepEqual( Stem("utfart"), "utfart");});
test("utfarten -> utfart", function() {deepEqual( Stem("utfarten"), "utfart");});
test("utfattig -> utfatt", function() {deepEqual( Stem("utfattig"), "utfatt");});
test("utflugen -> utflug", function() {deepEqual( Stem("utflugen"), "utflug");});
test("utflykt -> utflyk", function() {deepEqual( Stem("utflykt"), "utflyk");});
test("utflykter -> utflyk", function() {deepEqual( Stem("utflykter"), "utflyk");});
test("utflyttad -> utflyt", function() {deepEqual( Stem("utflyttad"), "utflyt");});
test("utflyttade -> utflyt", function() {deepEqual( Stem("utflyttade"), "utflyt");});
test("utforska -> utforsk", function() {deepEqual( Stem("utforska"), "utforsk");});
test("utforskat -> utforsk", function() {deepEqual( Stem("utforskat"), "utforsk");});
test("utfrågades -> utfråg", function() {deepEqual( Stem("utfrågades"), "utfråg");});
test("utfärd -> utfärd", function() {deepEqual( Stem("utfärd"), "utfärd");});
test("utfärdad -> utfärd", function() {deepEqual( Stem("utfärdad"), "utfärd");});
test("utfärdade -> utfärd", function() {deepEqual( Stem("utfärdade"), "utfärd");});
test("utfäst -> utfäst", function() {deepEqual( Stem("utfäst"), "utfäst");});
test("utför -> utför", function() {deepEqual( Stem("utför"), "utför");});
test("utföra -> utför", function() {deepEqual( Stem("utföra"), "utför");});
test("utförandet -> utför", function() {deepEqual( Stem("utförandet"), "utför");});
test("utföras -> utför", function() {deepEqual( Stem("utföras"), "utför");});
test("utförd -> utförd", function() {deepEqual( Stem("utförd"), "utförd");});
test("utförda -> utförd", function() {deepEqual( Stem("utförda"), "utförd");});
test("utförde -> utförd", function() {deepEqual( Stem("utförde"), "utförd");});
test("utförligt -> utför", function() {deepEqual( Stem("utförligt"), "utför");});
test("utförsel -> utförsel", function() {deepEqual( Stem("utförsel"), "utförsel");});
test("utfört -> utfört", function() {deepEqual( Stem("utfört"), "utfört");});
test("utgav -> utgav", function() {deepEqual( Stem("utgav"), "utgav");});
test("utgett -> utget", function() {deepEqual( Stem("utgett"), "utget");});
test("utgick -> utgick", function() {deepEqual( Stem("utgick"), "utgick");});
test("utgift -> utgift", function() {deepEqual( Stem("utgift"), "utgift");});
test("utgifter -> utgift", function() {deepEqual( Stem("utgifter"), "utgift");});
test("utgifterna -> utgift", function() {deepEqual( Stem("utgifterna"), "utgift");});
test("utgingo -> utgingo", function() {deepEqual( Stem("utgingo"), "utgingo");});
test("utgivit -> utgivit", function() {deepEqual( Stem("utgivit"), "utgivit");});
test("utgjorde -> utgjord", function() {deepEqual( Stem("utgjorde"), "utgjord");});
test("utgjordes -> utgjord", function() {deepEqual( Stem("utgjordes"), "utgjord");});
test("utgjort -> utgjort", function() {deepEqual( Stem("utgjort"), "utgjort");});
test("utgjuta -> utgjut", function() {deepEqual( Stem("utgjuta"), "utgjut");});
test("utgjutelse -> utgjut", function() {deepEqual( Stem("utgjutelse"), "utgjut");});
test("utgjutelser -> utgjut", function() {deepEqual( Stem("utgjutelser"), "utgjut");});
test("utgjutit -> utgjutit", function() {deepEqual( Stem("utgjutit"), "utgjutit");});
test("utgora -> utgor", function() {deepEqual( Stem("utgora"), "utgor");});
test("utgrunda -> utgrund", function() {deepEqual( Stem("utgrunda"), "utgrund");});
test("utgående -> utgåend", function() {deepEqual( Stem("utgående"), "utgåend");});
test("utgång -> utgång", function() {deepEqual( Stem("utgång"), "utgång");});
test("utgången -> utgång", function() {deepEqual( Stem("utgången"), "utgång");});
test("utgångna -> utgångn", function() {deepEqual( Stem("utgångna"), "utgångn");});
test("utgångspunkt -> utgångspunk", function() {deepEqual( Stem("utgångspunkt"), "utgångspunk");});
test("utgår -> utgår", function() {deepEqual( Stem("utgår"), "utgår");});
test("utgåva -> utgåv", function() {deepEqual( Stem("utgåva"), "utgåv");});
test("utgåvan -> utgåvan", function() {deepEqual( Stem("utgåvan"), "utgåvan");});
test("utgör -> utgör", function() {deepEqual( Stem("utgör"), "utgör");});
test("utgöra -> utgör", function() {deepEqual( Stem("utgöra"), "utgör");});
test("utgöt -> utgöt", function() {deepEqual( Stem("utgöt"), "utgöt");});
test("uthärda -> uthärd", function() {deepEqual( Stem("uthärda"), "uthärd");});
test("uthärdade -> uthärd", function() {deepEqual( Stem("uthärdade"), "uthärd");});
test("uthärdar -> uthärd", function() {deepEqual( Stem("uthärdar"), "uthärd");});
test("uthärdas -> uthärd", function() {deepEqual( Stem("uthärdas"), "uthärd");});
test("uthärdat -> uthärd", function() {deepEqual( Stem("uthärdat"), "uthärd");});
test("uthärdligt -> uthärd", function() {deepEqual( Stem("uthärdligt"), "uthärd");});
test("uthållande -> uthåll", function() {deepEqual( Stem("uthållande"), "uthåll");});
test("uti -> uti", function() {deepEqual( Stem("uti"), "uti");});
test("utifrån -> utifrån", function() {deepEqual( Stem("utifrån"), "utifrån");});
test("utkallade -> utkall", function() {deepEqual( Stem("utkallade"), "utkall");});
test("utkasta -> utkast", function() {deepEqual( Stem("utkasta"), "utkast");});
test("utkastad -> utkast", function() {deepEqual( Stem("utkastad"), "utkast");});
test("utkastade -> utkast", function() {deepEqual( Stem("utkastade"), "utkast");});
test("utkik -> utkik", function() {deepEqual( Stem("utkik"), "utkik");});
test("utkiksögon -> utkiksögon", function() {deepEqual( Stem("utkiksögon"), "utkiksögon");});
test("utkom -> utkom", function() {deepEqual( Stem("utkom"), "utkom");});
test("utkämpad -> utkämp", function() {deepEqual( Stem("utkämpad"), "utkämp");});
test("utlagt -> utlag", function() {deepEqual( Stem("utlagt"), "utlag");});
test("utlandet -> utl", function() {deepEqual( Stem("utlandet"), "utl");});
test("utledsen -> utleds", function() {deepEqual( Stem("utledsen"), "utleds");});
test("utlofvade -> utlofv", function() {deepEqual( Stem("utlofvade"), "utlofv");});
test("utlopp -> utlopp", function() {deepEqual( Stem("utlopp"), "utlopp");});
test("utlovade -> utlov", function() {deepEqual( Stem("utlovade"), "utlov");});
test("utlupen -> utlup", function() {deepEqual( Stem("utlupen"), "utlup");});
test("utländska -> utländsk", function() {deepEqual( Stem("utländska"), "utländsk");});
test("utlänning -> utlänning", function() {deepEqual( Stem("utlänning"), "utlänning");});
test("utlät -> utlät", function() {deepEqual( Stem("utlät"), "utlät");});
test("utlåna -> utlån", function() {deepEqual( Stem("utlåna"), "utlån");});
test("utlånade -> utlån", function() {deepEqual( Stem("utlånade"), "utlån");});
test("utlånta -> utlånt", function() {deepEqual( Stem("utlånta"), "utlånt");});
test("utlåtandet -> utlåt", function() {deepEqual( Stem("utlåtandet"), "utlåt");});
test("utlåter -> utlåt", function() {deepEqual( Stem("utlåter"), "utlåt");});
test("utlösning -> utlösning", function() {deepEqual( Stem("utlösning"), "utlösning");});
test("utlöst -> utlöst", function() {deepEqual( Stem("utlöst"), "utlöst");});
test("utmanande -> utman", function() {deepEqual( Stem("utmanande"), "utman");});
test("utmark -> utmark", function() {deepEqual( Stem("utmark"), "utmark");});
test("utmarscherande -> utmarscher", function() {deepEqual( Stem("utmarscherande"), "utmarscher");});
test("utmattad -> utmat", function() {deepEqual( Stem("utmattad"), "utmat");});
test("utmed -> utmed", function() {deepEqual( Stem("utmed"), "utmed");});
test("utminutera -> utminuter", function() {deepEqual( Stem("utminutera"), "utminuter");});
test("utminuterades -> utminuter", function() {deepEqual( Stem("utminuterades"), "utminuter");});
test("utmärglade -> utmärgl", function() {deepEqual( Stem("utmärglade"), "utmärgl");});
test("utmärka -> utmärk", function() {deepEqual( Stem("utmärka"), "utmärk");});
test("utmärkelse -> utmärk", function() {deepEqual( Stem("utmärkelse"), "utmärk");});
test("utmärker -> utmärk", function() {deepEqual( Stem("utmärker"), "utmärk");});
test("utmärkt -> utmärk", function() {deepEqual( Stem("utmärkt"), "utmärk");});
test("utmärkta -> utmärk", function() {deepEqual( Stem("utmärkta"), "utmärk");});
test("utmärkte -> utmärk", function() {deepEqual( Stem("utmärkte"), "utmärk");});
test("utmätas -> utmät", function() {deepEqual( Stem("utmätas"), "utmät");});
test("utnyttjar -> utnyttj", function() {deepEqual( Stem("utnyttjar"), "utnyttj");});
test("utnämdes -> utnämd", function() {deepEqual( Stem("utnämdes"), "utnämd");});
test("utnämnd -> utnämnd", function() {deepEqual( Stem("utnämnd"), "utnämnd");});
test("utnämner -> utnämn", function() {deepEqual( Stem("utnämner"), "utnämn");});
test("utnött -> utnöt", function() {deepEqual( Stem("utnött"), "utnöt");});
test("utom -> utom", function() {deepEqual( Stem("utom"), "utom");});
test("utomdess -> utomdess", function() {deepEqual( Stem("utomdess"), "utomdess");});
test("utomhus -> utomhus", function() {deepEqual( Stem("utomhus"), "utomhus");});
test("utomordentlig -> utomordent", function() {deepEqual( Stem("utomordentlig"), "utomordent");});
test("utomordentliga -> utomordent", function() {deepEqual( Stem("utomordentliga"), "utomordent");});
test("utomordentligt -> utomordent", function() {deepEqual( Stem("utomordentligt"), "utomordent");});
test("utomstående -> utomståend", function() {deepEqual( Stem("utomstående"), "utomståend");});
test("utpeka -> utpek", function() {deepEqual( Stem("utpeka"), "utpek");});
test("utpekad -> utpek", function() {deepEqual( Stem("utpekad"), "utpek");});
test("utpekat -> utpek", function() {deepEqual( Stem("utpekat"), "utpek");});
test("utpinad -> utpin", function() {deepEqual( Stem("utpinad"), "utpin");});
test("utplåna -> utplån", function() {deepEqual( Stem("utplåna"), "utplån");});
test("utplånade -> utplån", function() {deepEqual( Stem("utplånade"), "utplån");});
test("utplånar -> utplån", function() {deepEqual( Stem("utplånar"), "utplån");});
test("utplånas -> utplån", function() {deepEqual( Stem("utplånas"), "utplån");});
test("utplånat -> utplån", function() {deepEqual( Stem("utplånat"), "utplån");});
test("utpresserska -> utpressersk", function() {deepEqual( Stem("utpresserska"), "utpressersk");});
test("utreda -> utred", function() {deepEqual( Stem("utreda"), "utred");});
test("utrikes -> utrik", function() {deepEqual( Stem("utrikes"), "utrik");});
test("utrikesminister -> utrikesminist", function() {deepEqual( Stem("utrikesminister"), "utrikesminist");});
test("utrop -> utrop", function() {deepEqual( Stem("utrop"), "utrop");});
test("utropa -> utrop", function() {deepEqual( Stem("utropa"), "utrop");});
test("utropade -> utrop", function() {deepEqual( Stem("utropade"), "utrop");});
test("utropet -> utropet", function() {deepEqual( Stem("utropet"), "utropet");});
test("utropstecken -> utropsteck", function() {deepEqual( Stem("utropstecken"), "utropsteck");});
test("utrusande -> utrus", function() {deepEqual( Stem("utrusande"), "utrus");});
test("utrustad -> utrust", function() {deepEqual( Stem("utrustad"), "utrust");});
test("utrustat -> utrust", function() {deepEqual( Stem("utrustat"), "utrust");});
test("utrycka -> utryck", function() {deepEqual( Stem("utrycka"), "utryck");});
test("utrymda -> utrymd", function() {deepEqual( Stem("utrymda"), "utrymd");});
test("utrymme -> utrymm", function() {deepEqual( Stem("utrymme"), "utrymm");});
test("utrymmet -> utrymmet", function() {deepEqual( Stem("utrymmet"), "utrymmet");});
test("uträknad -> uträkn", function() {deepEqual( Stem("uträknad"), "uträkn");});
test("uträknade -> uträkn", function() {deepEqual( Stem("uträknade"), "uträkn");});
test("uträknat -> uträkn", function() {deepEqual( Stem("uträknat"), "uträkn");});
test("uträkning -> uträkning", function() {deepEqual( Stem("uträkning"), "uträkning");});
test("uträkningar -> uträkning", function() {deepEqual( Stem("uträkningar"), "uträkning");});
test("uträtta -> uträt", function() {deepEqual( Stem("uträtta"), "uträt");});
test("uträttade -> uträt", function() {deepEqual( Stem("uträttade"), "uträt");});
test("uträttat -> uträt", function() {deepEqual( Stem("uträttat"), "uträt");});
test("utrökt -> utrök", function() {deepEqual( Stem("utrökt"), "utrök");});
test("utröna -> utrön", function() {deepEqual( Stem("utröna"), "utrön");});
test("utrönt -> utrönt", function() {deepEqual( Stem("utrönt"), "utrönt");});
test("utsago -> utsago", function() {deepEqual( Stem("utsago"), "utsago");});
test("utsagt -> utsag", function() {deepEqual( Stem("utsagt"), "utsag");});
test("utsatt -> utsat", function() {deepEqual( Stem("utsatt"), "utsat");});
test("utsatta -> utsat", function() {deepEqual( Stem("utsatta"), "utsat");});
test("utscende -> utscend", function() {deepEqual( Stem("utscende"), "utscend");});
test("utsedd -> utsed", function() {deepEqual( Stem("utsedd"), "utsed");});
test("utsedda -> utsed", function() {deepEqual( Stem("utsedda"), "utsed");});
test("utseende -> utseend", function() {deepEqual( Stem("utseende"), "utseend");});
test("utseendet -> utseendet", function() {deepEqual( Stem("utseendet"), "utseendet");});
test("utseendets -> utseendet", function() {deepEqual( Stem("utseendets"), "utseendet");});
test("utsigt -> uts", function() {deepEqual( Stem("utsigt"), "uts");});
test("utsigten -> uts", function() {deepEqual( Stem("utsigten"), "uts");});
test("utsigter -> uts", function() {deepEqual( Stem("utsigter"), "uts");});
test("utsikt -> utsik", function() {deepEqual( Stem("utsikt"), "utsik");});
test("utsikten -> utsik", function() {deepEqual( Stem("utsikten"), "utsik");});
test("utsikter -> utsik", function() {deepEqual( Stem("utsikter"), "utsik");});
test("utsikterna -> utsik", function() {deepEqual( Stem("utsikterna"), "utsik");});
test("utsiktsplats -> utsiktsplat", function() {deepEqual( Stem("utsiktsplats"), "utsiktsplat");});
test("utsirad -> utsir", function() {deepEqual( Stem("utsirad"), "utsir");});
test("utsirade -> utsir", function() {deepEqual( Stem("utsirade"), "utsir");});
test("utsirat -> utsir", function() {deepEqual( Stem("utsirat"), "utsir");});
test("utskickad -> utskick", function() {deepEqual( Stem("utskickad"), "utskick");});
test("utskjutande -> utskjut", function() {deepEqual( Stem("utskjutande"), "utskjut");});
test("utskratta -> utskrat", function() {deepEqual( Stem("utskratta"), "utskrat");});
test("utskrattad -> utskrat", function() {deepEqual( Stem("utskrattad"), "utskrat");});
test("utskriken -> utskrik", function() {deepEqual( Stem("utskriken"), "utskrik");});
test("utskyndande -> utskynd", function() {deepEqual( Stem("utskyndande"), "utskynd");});
test("utskämmas -> utskämm", function() {deepEqual( Stem("utskämmas"), "utskämm");});
test("utslag -> utslag", function() {deepEqual( Stem("utslag"), "utslag");});
test("utslagen -> utslag", function() {deepEqual( Stem("utslagen"), "utslag");});
test("utslaget -> utslaget", function() {deepEqual( Stem("utslaget"), "utslaget");});
test("utslagna -> utslagn", function() {deepEqual( Stem("utslagna"), "utslagn");});
test("utsliten -> utslit", function() {deepEqual( Stem("utsliten"), "utslit");});
test("utslitet -> utslitet", function() {deepEqual( Stem("utslitet"), "utslitet");});
test("utslitna -> utslitn", function() {deepEqual( Stem("utslitna"), "utslitn");});
test("utslockna -> utslockn", function() {deepEqual( Stem("utslockna"), "utslockn");});
test("utsläckt -> utsläck", function() {deepEqual( Stem("utsläckt"), "utsläck");});
test("utslätat -> utslät", function() {deepEqual( Stem("utslätat"), "utslät");});
test("utslår -> utslår", function() {deepEqual( Stem("utslår"), "utslår");});
test("utspana -> utspan", function() {deepEqual( Stem("utspana"), "utspan");});
test("utspanat -> utspan", function() {deepEqual( Stem("utspanat"), "utspan");});
test("utsparkad -> utspark", function() {deepEqual( Stem("utsparkad"), "utspark");});
test("utspelats -> utspelat", function() {deepEqual( Stem("utspelats"), "utspelat");});
test("utspridt -> utsprid", function() {deepEqual( Stem("utspridt"), "utsprid");});
test("utspringande -> utspring", function() {deepEqual( Stem("utspringande"), "utspring");});
test("utspritt -> utsprit", function() {deepEqual( Stem("utspritt"), "utsprit");});
test("utspunnen -> utspun", function() {deepEqual( Stem("utspunnen"), "utspun");});
test("utspända -> utspänd", function() {deepEqual( Stem("utspända"), "utspänd");});
test("utspärrade -> utspärr", function() {deepEqual( Stem("utspärrade"), "utspärr");});
test("utspökade -> utspök", function() {deepEqual( Stem("utspökade"), "utspök");});
test("utstaende -> utstaend", function() {deepEqual( Stem("utstaende"), "utstaend");});
test("utstickande -> utstick", function() {deepEqual( Stem("utstickande"), "utstick");});
test("utstod -> utstod", function() {deepEqual( Stem("utstod"), "utstod");});
test("utsträckas -> utsträck", function() {deepEqual( Stem("utsträckas"), "utsträck");});
test("utsträckt -> utsträck", function() {deepEqual( Stem("utsträckt"), "utsträck");});
test("utsträckta -> utsträck", function() {deepEqual( Stem("utsträckta"), "utsträck");});
test("utsträckte -> utsträck", function() {deepEqual( Stem("utsträckte"), "utsträck");});
test("utstråladc -> utstråladc", function() {deepEqual( Stem("utstråladc"), "utstråladc");});
test("utstrålade -> utstrål", function() {deepEqual( Stem("utstrålade"), "utstrål");});
test("utströddes -> utströd", function() {deepEqual( Stem("utströddes"), "utströd");});
test("utströmmar -> utströmm", function() {deepEqual( Stem("utströmmar"), "utströmm");});
test("utströmmat -> utströmm", function() {deepEqual( Stem("utströmmat"), "utströmm");});
test("utstuckit -> utstuckit", function() {deepEqual( Stem("utstuckit"), "utstuckit");});
test("utstyrd -> utstyrd", function() {deepEqual( Stem("utstyrd"), "utstyrd");});
test("utstyrda -> utstyrd", function() {deepEqual( Stem("utstyrda"), "utstyrd");});
test("utstyrt -> utstyrt", function() {deepEqual( Stem("utstyrt"), "utstyrt");});
test("utställd -> utställd", function() {deepEqual( Stem("utställd"), "utställd");});
test("utstående -> utståend", function() {deepEqual( Stem("utstående"), "utståend");});
test("utståndna -> utståndn", function() {deepEqual( Stem("utståndna"), "utståndn");});
test("utstått -> utståt", function() {deepEqual( Stem("utstått"), "utståt");});
test("utstött -> utstöt", function() {deepEqual( Stem("utstött"), "utstöt");});
test("utstötta -> utstöt", function() {deepEqual( Stem("utstötta"), "utstöt");});
test("utstöttes -> utstöt", function() {deepEqual( Stem("utstöttes"), "utstöt");});
test("utsvulten -> utsvult", function() {deepEqual( Stem("utsvulten"), "utsvult");});
test("utsvält -> utsvält", function() {deepEqual( Stem("utsvält"), "utsvält");});
test("utsvävande -> utsväv", function() {deepEqual( Stem("utsvävande"), "utsväv");});
test("utsäde -> utsäd", function() {deepEqual( Stem("utsäde"), "utsäd");});
test("utsäga -> utsäg", function() {deepEqual( Stem("utsäga"), "utsäg");});
test("utsätta -> utsät", function() {deepEqual( Stem("utsätta"), "utsät");});
test("utsått -> utsåt", function() {deepEqual( Stem("utsått"), "utsåt");});
test("utsökt -> utsök", function() {deepEqual( Stem("utsökt"), "utsök");});
test("utsökta -> utsök", function() {deepEqual( Stem("utsökta"), "utsök");});
test("uttaga -> uttag", function() {deepEqual( Stem("uttaga"), "uttag");});
test("uttages -> uttag", function() {deepEqual( Stem("uttages"), "uttag");});
test("uttagna -> uttagn", function() {deepEqual( Stem("uttagna"), "uttagn");});
test("uttal -> uttal", function() {deepEqual( Stem("uttal"), "uttal");});
test("uttala -> uttal", function() {deepEqual( Stem("uttala"), "uttal");});
test("uttalade -> uttal", function() {deepEqual( Stem("uttalade"), "uttal");});
test("uttalades -> uttal", function() {deepEqual( Stem("uttalades"), "uttal");});
test("uttalandet -> uttal", function() {deepEqual( Stem("uttalandet"), "uttal");});
test("uttalar -> uttal", function() {deepEqual( Stem("uttalar"), "uttal");});
test("uttalas -> uttal", function() {deepEqual( Stem("uttalas"), "uttal");});
test("uttalat -> uttal", function() {deepEqual( Stem("uttalat"), "uttal");});
test("uttalet -> uttalet", function() {deepEqual( Stem("uttalet"), "uttalet");});
test("uttog -> uttog", function() {deepEqual( Stem("uttog"), "uttog");});
test("uttorkade -> uttork", function() {deepEqual( Stem("uttorkade"), "uttork");});
test("uttorkat -> uttork", function() {deepEqual( Stem("uttorkat"), "uttork");});
test("uttryck -> uttryck", function() {deepEqual( Stem("uttryck"), "uttryck");});
test("uttrycka -> uttryck", function() {deepEqual( Stem("uttrycka"), "uttryck");});
test("uttrycker -> uttryck", function() {deepEqual( Stem("uttrycker"), "uttryck");});
test("uttrycket -> uttrycket", function() {deepEqual( Stem("uttrycket"), "uttrycket");});
test("uttryckligen -> uttryck", function() {deepEqual( Stem("uttryckligen"), "uttryck");});
test("uttrycksfull -> uttrycksfull", function() {deepEqual( Stem("uttrycksfull"), "uttrycksfull");});
test("uttrycksfulla -> uttrycksfull", function() {deepEqual( Stem("uttrycksfulla"), "uttrycksfull");});
test("uttrycksfullare -> uttrycksfull", function() {deepEqual( Stem("uttrycksfullare"), "uttrycksfull");});
test("uttrycksfullt -> uttrycksfull", function() {deepEqual( Stem("uttrycksfullt"), "uttrycksfull");});
test("uttrycksfylla -> uttrycksfyll", function() {deepEqual( Stem("uttrycksfylla"), "uttrycksfyll");});
test("uttryckssätt -> uttryckssät", function() {deepEqual( Stem("uttryckssätt"), "uttryckssät");});
test("uttryckt -> uttryck", function() {deepEqual( Stem("uttryckt"), "uttryck");});
test("uttryckte -> uttryck", function() {deepEqual( Stem("uttryckte"), "uttryck");});
test("uttrötta -> uttröt", function() {deepEqual( Stem("uttrötta"), "uttröt");});
test("uttröttad -> uttröt", function() {deepEqual( Stem("uttröttad"), "uttröt");});
test("uttyda -> uttyd", function() {deepEqual( Stem("uttyda"), "uttyd");});
test("uttydas -> uttyd", function() {deepEqual( Stem("uttydas"), "uttyd");});
test("uttämt -> uttämt", function() {deepEqual( Stem("uttämt"), "uttämt");});
test("uttänjda -> uttänjd", function() {deepEqual( Stem("uttänjda"), "uttänjd");});
test("uttänka -> uttänk", function() {deepEqual( Stem("uttänka"), "uttänk");});
test("uttänkt -> uttänk", function() {deepEqual( Stem("uttänkt"), "uttänk");});
test("uttömda -> uttömd", function() {deepEqual( Stem("uttömda"), "uttömd");});
test("uttömt -> uttömt", function() {deepEqual( Stem("uttömt"), "uttömt");});
test("utur -> utur", function() {deepEqual( Stem("utur"), "utur");});
test("utvald -> utvald", function() {deepEqual( Stem("utvald"), "utvald");});
test("utvalda -> utvald", function() {deepEqual( Stem("utvalda"), "utvald");});
test("utvandring -> utvandring", function() {deepEqual( Stem("utvandring"), "utvandring");});
test("utvandringar -> utvandring", function() {deepEqual( Stem("utvandringar"), "utvandring");});
test("utvandringarna -> utvandring", function() {deepEqual( Stem("utvandringarna"), "utvandring");});
test("utveckla -> utveckl", function() {deepEqual( Stem("utveckla"), "utveckl");});
test("utvecklad -> utveckl", function() {deepEqual( Stem("utvecklad"), "utveckl");});
test("utvecklade -> utveckl", function() {deepEqual( Stem("utvecklade"), "utveckl");});
test("utvecklades -> utveckl", function() {deepEqual( Stem("utvecklades"), "utveckl");});
test("utvecklar -> utveckl", function() {deepEqual( Stem("utvecklar"), "utveckl");});
test("utvecklat -> utveckl", function() {deepEqual( Stem("utvecklat"), "utveckl");});
test("utvecklingen -> utveckling", function() {deepEqual( Stem("utvecklingen"), "utveckling");});
test("utverka -> utverk", function() {deepEqual( Stem("utverka"), "utverk");});
test("utvidga -> utvidg", function() {deepEqual( Stem("utvidga"), "utvidg");});
test("utvidgas -> utvidg", function() {deepEqual( Stem("utvidgas"), "utvidg");});
test("utvidgningar -> utvidgning", function() {deepEqual( Stem("utvidgningar"), "utvidgning");});
test("utvisade -> utvis", function() {deepEqual( Stem("utvisade"), "utvis");});
test("utvisar -> utvis", function() {deepEqual( Stem("utvisar"), "utvis");});
test("utväg -> utväg", function() {deepEqual( Stem("utväg"), "utväg");});
test("utvägar -> utväg", function() {deepEqual( Stem("utvägar"), "utväg");});
test("utvägen -> utväg", function() {deepEqual( Stem("utvägen"), "utväg");});
test("utvälja -> utvälj", function() {deepEqual( Stem("utvälja"), "utvälj");});
test("utvända -> utvänd", function() {deepEqual( Stem("utvända"), "utvänd");});
test("utvärdshus -> utvärdshus", function() {deepEqual( Stem("utvärdshus"), "utvärdshus");});
test("utvärdshusen -> utvärdshus", function() {deepEqual( Stem("utvärdshusen"), "utvärdshus");});
test("utvärtes -> utvärt", function() {deepEqual( Stem("utvärtes"), "utvärt");});
test("utäcklat -> utäckl", function() {deepEqual( Stem("utäcklat"), "utäckl");});
test("utåt -> utåt", function() {deepEqual( Stem("utåt"), "utåt");});
test("utöfva -> utöfv", function() {deepEqual( Stem("utöfva"), "utöfv");});
test("utöfvade -> utöfv", function() {deepEqual( Stem("utöfvade"), "utöfv");});
test("utöfvandet -> utöfv", function() {deepEqual( Stem("utöfvandet"), "utöfv");});
test("utöfvat -> utöfv", function() {deepEqual( Stem("utöfvat"), "utöfv");});
test("utöfver -> utöfv", function() {deepEqual( Stem("utöfver"), "utöfv");});
test("utöva -> utöv", function() {deepEqual( Stem("utöva"), "utöv");});
test("utövade -> utöv", function() {deepEqual( Stem("utövade"), "utöv");});
test("utövar -> utöv", function() {deepEqual( Stem("utövar"), "utöv");});
test("utövat -> utöv", function() {deepEqual( Stem("utövat"), "utöv");});
test("utöver -> utöv", function() {deepEqual( Stem("utöver"), "utöv");});
test("v -> v", function() {deepEqual( Stem("v"), "v");});
test("va -> va", function() {deepEqual( Stem("va"), "va");});
test("vackar -> vack", function() {deepEqual( Stem("vackar"), "vack");});
test("vacker -> vack", function() {deepEqual( Stem("vacker"), "vack");});
test("vackert -> vackert", function() {deepEqual( Stem("vackert"), "vackert");});
test("vackla -> vackl", function() {deepEqual( Stem("vackla"), "vackl");});
test("vacklade -> vackl", function() {deepEqual( Stem("vacklade"), "vackl");});
test("vacklande -> vackl", function() {deepEqual( Stem("vacklande"), "vackl");});
test("vacklar -> vackl", function() {deepEqual( Stem("vacklar"), "vackl");});
test("vackra -> vackr", function() {deepEqual( Stem("vackra"), "vackr");});
test("vackrare -> vackr", function() {deepEqual( Stem("vackrare"), "vackr");});
test("vackrast -> vackr", function() {deepEqual( Stem("vackrast"), "vackr");});
test("vackraste -> vackr", function() {deepEqual( Stem("vackraste"), "vackr");});
test("vackre -> vackr", function() {deepEqual( Stem("vackre"), "vackr");});
test("vad -> vad", function() {deepEqual( Stem("vad"), "vad");});
test("vadade -> vad", function() {deepEqual( Stem("vadade"), "vad");});
test("vadan -> vadan", function() {deepEqual( Stem("vadan"), "vadan");});
test("vadar -> vad", function() {deepEqual( Stem("vadar"), "vad");});
test("vadat -> vad", function() {deepEqual( Stem("vadat"), "vad");});
test("vade -> vad", function() {deepEqual( Stem("vade"), "vad");});
test("vaden -> vad", function() {deepEqual( Stem("vaden"), "vad");});
test("vaderetrosalva -> vaderetrosalv", function() {deepEqual( Stem("vaderetrosalva"), "vaderetrosalv");});
test("vaderna -> vad", function() {deepEqual( Stem("vaderna"), "vad");});
test("vadis -> vadis", function() {deepEqual( Stem("vadis"), "vadis");});
test("vadmal -> vadmal", function() {deepEqual( Stem("vadmal"), "vadmal");});
test("vadmals -> vadmal", function() {deepEqual( Stem("vadmals"), "vadmal");});
test("vadmalsöverdrag -> vadmalsöverdrag", function() {deepEqual( Stem("vadmalsöverdrag"), "vadmalsöverdrag");});
test("vador -> vad", function() {deepEqual( Stem("vador"), "vad");});
test("vadstenaliljan -> vadstenaliljan", function() {deepEqual( Stem("vadstenaliljan"), "vadstenaliljan");});
test("vadstenaätt -> vadstenaät", function() {deepEqual( Stem("vadstenaätt"), "vadstenaät");});
test("vaff -> vaff", function() {deepEqual( Stem("vaff"), "vaff");});
test("vag -> vag", function() {deepEqual( Stem("vag"), "vag");});
test("vagade -> vag", function() {deepEqual( Stem("vagade"), "vag");});
test("vagant -> vagant", function() {deepEqual( Stem("vagant"), "vagant");});
test("vagarna -> vag", function() {deepEqual( Stem("vagarna"), "vag");});
test("vagat -> vag", function() {deepEqual( Stem("vagat"), "vag");});
test("vagen -> vag", function() {deepEqual( Stem("vagen"), "vag");});
test("vagga -> vagg", function() {deepEqual( Stem("vagga"), "vagg");});
test("vaggade -> vagg", function() {deepEqual( Stem("vaggade"), "vagg");});
test("vaggamde -> vaggamd", function() {deepEqual( Stem("vaggamde"), "vaggamd");});
test("vaggan -> vaggan", function() {deepEqual( Stem("vaggan"), "vaggan");});
test("vaggande -> vagg", function() {deepEqual( Stem("vaggande"), "vagg");});
test("vaggar -> vagg", function() {deepEqual( Stem("vaggar"), "vagg");});
test("vaggarna -> vagg", function() {deepEqual( Stem("vaggarna"), "vagg");});
test("vaggat -> vagg", function() {deepEqual( Stem("vaggat"), "vagg");});
test("vaggen -> vagg", function() {deepEqual( Stem("vaggen"), "vagg");});
test("vaggfast -> vaggf", function() {deepEqual( Stem("vaggfast"), "vaggf");});
test("vagn -> vagn", function() {deepEqual( Stem("vagn"), "vagn");});
test("vagnar -> vagn", function() {deepEqual( Stem("vagnar"), "vagn");});
test("vagnarna -> vagn", function() {deepEqual( Stem("vagnarna"), "vagn");});
test("vagnen -> vagn", function() {deepEqual( Stem("vagnen"), "vagn");});
test("vagnshjul -> vagnshjul", function() {deepEqual( Stem("vagnshjul"), "vagnshjul");});
test("vagor -> vag", function() {deepEqual( Stem("vagor"), "vag");});
test("vagorna -> vag", function() {deepEqual( Stem("vagorna"), "vag");});
test("vagskål -> vagskål", function() {deepEqual( Stem("vagskål"), "vagskål");});
test("vaja -> vaj", function() {deepEqual( Stem("vaja"), "vaj");});
test("vajade -> vaj", function() {deepEqual( Stem("vajade"), "vaj");});
test("vajande -> vaj", function() {deepEqual( Stem("vajande"), "vaj");});
test("vajar -> vaj", function() {deepEqual( Stem("vajar"), "vaj");});
test("vaka -> vak", function() {deepEqual( Stem("vaka"), "vak");});
test("vakade -> vak", function() {deepEqual( Stem("vakade"), "vak");});
test("vakan -> vakan", function() {deepEqual( Stem("vakan"), "vakan");});
test("vakandet -> vak", function() {deepEqual( Stem("vakandet"), "vak");});
test("vakar -> vak", function() {deepEqual( Stem("vakar"), "vak");});
test("vakas -> vak", function() {deepEqual( Stem("vakas"), "vak");});
test("vakat -> vak", function() {deepEqual( Stem("vakat"), "vak");});
test("vaken -> vak", function() {deepEqual( Stem("vaken"), "vak");});
test("vaket -> vaket", function() {deepEqual( Stem("vaket"), "vaket");});
test("vakllen -> vakll", function() {deepEqual( Stem("vakllen"), "vakll");});
test("vakna -> vakn", function() {deepEqual( Stem("vakna"), "vakn");});
test("vaknade -> vakn", function() {deepEqual( Stem("vaknade"), "vakn");});
test("vaknar -> vakn", function() {deepEqual( Stem("vaknar"), "vakn");});
test("vaknat -> vakn", function() {deepEqual( Stem("vaknat"), "vakn");});
test("vakne -> vakn", function() {deepEqual( Stem("vakne"), "vakn");});
test("vaksamhet -> vaksam", function() {deepEqual( Stem("vaksamhet"), "vaksam");});
test("vaksamma -> vaksamm", function() {deepEqual( Stem("vaksamma"), "vaksamm");});
test("vaksamme -> vaksamm", function() {deepEqual( Stem("vaksamme"), "vaksamm");});
test("vaksamt -> vaksamt", function() {deepEqual( Stem("vaksamt"), "vaksamt");});
test("vakt -> vakt", function() {deepEqual( Stem("vakt"), "vakt");});
test("vakta -> vakt", function() {deepEqual( Stem("vakta"), "vakt");});
test("vaktande -> vakt", function() {deepEqual( Stem("vaktande"), "vakt");});
test("vaktar -> vakt", function() {deepEqual( Stem("vaktar"), "vakt");});
test("vaktare -> vakt", function() {deepEqual( Stem("vaktare"), "vakt");});
test("vaktarinna -> vaktarin", function() {deepEqual( Stem("vaktarinna"), "vaktarin");});
test("vaktarinnan -> vaktarinnan", function() {deepEqual( Stem("vaktarinnan"), "vaktarinnan");});
test("vaktas -> vakt", function() {deepEqual( Stem("vaktas"), "vakt");});
test("vaktel -> vaktel", function() {deepEqual( Stem("vaktel"), "vaktel");});
test("vakten -> vakt", function() {deepEqual( Stem("vakten"), "vakt");});
test("vakter -> vakt", function() {deepEqual( Stem("vakter"), "vakt");});
test("vaktmästare -> vaktmäst", function() {deepEqual( Stem("vaktmästare"), "vaktmäst");});
test("vaktmästaren -> vaktmäst", function() {deepEqual( Stem("vaktmästaren"), "vaktmäst");});
test("vaktmästarn -> vaktmästarn", function() {deepEqual( Stem("vaktmästarn"), "vaktmästarn");});
test("vaktparad -> vaktpar", function() {deepEqual( Stem("vaktparad"), "vaktpar");});
test("vaktpatrull -> vaktpatrull", function() {deepEqual( Stem("vaktpatrull"), "vaktpatrull");});
test("val -> val", function() {deepEqual( Stem("val"), "val");});
test("valbekanta -> valbekant", function() {deepEqual( Stem("valbekanta"), "valbekant");});
test("valborg -> valborg", function() {deepEqual( Stem("valborg"), "valborg");});
test("valborgselden -> valborgseld", function() {deepEqual( Stem("valborgselden"), "valborgseld");});
test("vald -> vald", function() {deepEqual( Stem("vald"), "vald");});
test("valda -> vald", function() {deepEqual( Stem("valda"), "vald");});
test("valdaste -> vald", function() {deepEqual( Stem("valdaste"), "vald");});
test("valde -> vald", function() {deepEqual( Stem("valde"), "vald");});
test("valdsamt -> valdsamt", function() {deepEqual( Stem("valdsamt"), "valdsamt");});
test("valdt -> vald", function() {deepEqual( Stem("valdt"), "vald");});
test("valerius -> valerius", function() {deepEqual( Stem("valerius"), "valerius");});
test("valet -> valet", function() {deepEqual( Stem("valet"), "valet");});
test("valhänt -> valhänt", function() {deepEqual( Stem("valhänt"), "valhänt");});
test("valkar -> valk", function() {deepEqual( Stem("valkar"), "valk");});
test("vall -> vall", function() {deepEqual( Stem("vall"), "vall");});
test("vallack -> vallack", function() {deepEqual( Stem("vallack"), "vallack");});
test("vallar -> vall", function() {deepEqual( Stem("vallar"), "vall");});
test("vallerskans -> vallerskan", function() {deepEqual( Stem("vallerskans"), "vallerskan");});
test("vallgossen -> vallgoss", function() {deepEqual( Stem("vallgossen"), "vallgoss");});
test("vallmo -> vallmo", function() {deepEqual( Stem("vallmo"), "vallmo");});
test("vallmoklanning -> vallmoklanning", function() {deepEqual( Stem("vallmoklanning"), "vallmoklanning");});
test("vallmorött -> vallmoröt", function() {deepEqual( Stem("vallmorött"), "vallmoröt");});
test("valmöten -> valmöt", function() {deepEqual( Stem("valmöten"), "valmöt");});
test("valnöt -> valnöt", function() {deepEqual( Stem("valnöt"), "valnöt");});
test("valnötskåp -> valnötskåp", function() {deepEqual( Stem("valnötskåp"), "valnötskåp");});
test("valp -> valp", function() {deepEqual( Stem("valp"), "valp");});
test("valpar -> valp", function() {deepEqual( Stem("valpar"), "valp");});
test("valplatsen -> valplats", function() {deepEqual( Stem("valplatsen"), "valplats");});
test("vals -> val", function() {deepEqual( Stem("vals"), "val");});
test("valt -> valt", function() {deepEqual( Stem("valt"), "valt");});
test("valthorn -> valthorn", function() {deepEqual( Stem("valthorn"), "valthorn");});
test("valthornet -> valthornet", function() {deepEqual( Stem("valthornet"), "valthornet");});
test("valurnan -> valurnan", function() {deepEqual( Stem("valurnan"), "valurnan");});
test("valuta -> valut", function() {deepEqual( Stem("valuta"), "valut");});
test("valv -> valv", function() {deepEqual( Stem("valv"), "valv");});
test("valven -> valv", function() {deepEqual( Stem("valven"), "valv");});
test("valvsegel -> valvsegel", function() {deepEqual( Stem("valvsegel"), "valvsegel");});
test("van -> van", function() {deepEqual( Stem("van"), "van");});
test("vana -> van", function() {deepEqual( Stem("vana"), "van");});
test("vanan -> vanan", function() {deepEqual( Stem("vanan"), "vanan");});
test("vanartig -> vanart", function() {deepEqual( Stem("vanartig"), "vanart");});
test("vand -> vand", function() {deepEqual( Stem("vand"), "vand");});
test("vanda -> vand", function() {deepEqual( Stem("vanda"), "vand");});
test("vande -> vand", function() {deepEqual( Stem("vande"), "vand");});
test("vandel -> vandel", function() {deepEqual( Stem("vandel"), "vandel");});
test("vandla -> vandl", function() {deepEqual( Stem("vandla"), "vandl");});
test("vandra -> vandr", function() {deepEqual( Stem("vandra"), "vandr");});
test("vandrade -> vandr", function() {deepEqual( Stem("vandrade"), "vandr");});
test("vandrande -> vandr", function() {deepEqual( Stem("vandrande"), "vandr");});
test("vandrar -> vandr", function() {deepEqual( Stem("vandrar"), "vandr");});
test("vandrare -> vandr", function() {deepEqual( Stem("vandrare"), "vandr");});
test("vandrarn -> vandrarn", function() {deepEqual( Stem("vandrarn"), "vandrarn");});
test("vandrat -> vandr", function() {deepEqual( Stem("vandrat"), "vandr");});
test("vandring -> vandring", function() {deepEqual( Stem("vandring"), "vandring");});
test("vandringar -> vandring", function() {deepEqual( Stem("vandringar"), "vandring");});
test("vandringarne -> vandring", function() {deepEqual( Stem("vandringarne"), "vandring");});
test("vandringen -> vandring", function() {deepEqual( Stem("vandringen"), "vandring");});
test("vandringsmannen -> vandringsman", function() {deepEqual( Stem("vandringsmannen"), "vandringsman");});
test("vandringsmän -> vandringsmän", function() {deepEqual( Stem("vandringsmän"), "vandringsmän");});
test("vandringsstaven -> vandringsstav", function() {deepEqual( Stem("vandringsstaven"), "vandringsstav");});
test("vane -> van", function() {deepEqual( Stem("vane"), "van");});
test("vanför -> vanför", function() {deepEqual( Stem("vanför"), "vanför");});
test("vanhederligt -> vanheder", function() {deepEqual( Stem("vanhederligt"), "vanheder");});
test("vaningen -> vaning", function() {deepEqual( Stem("vaningen"), "vaning");});
test("vanka -> vank", function() {deepEqual( Stem("vanka"), "vank");});
test("vankade -> vank", function() {deepEqual( Stem("vankade"), "vank");});
test("vankades -> vank", function() {deepEqual( Stem("vankades"), "vank");});
test("vankas -> vank", function() {deepEqual( Stem("vankas"), "vank");});
test("vankelmod -> vankelmod", function() {deepEqual( Stem("vankelmod"), "vankelmod");});
test("vankfri -> vankfri", function() {deepEqual( Stem("vankfri"), "vankfri");});
test("vanlig -> van", function() {deepEqual( Stem("vanlig"), "van");});
test("vanliga -> van", function() {deepEqual( Stem("vanliga"), "van");});
test("vanlige -> van", function() {deepEqual( Stem("vanlige"), "van");});
test("vanligen -> van", function() {deepEqual( Stem("vanligen"), "van");});
test("vanligt -> van", function() {deepEqual( Stem("vanligt"), "van");});
test("vanligtvis -> vanligtvis", function() {deepEqual( Stem("vanligtvis"), "vanligtvis");});
test("vann -> vann", function() {deepEqual( Stem("vann"), "vann");});
test("vanor -> van", function() {deepEqual( Stem("vanor"), "van");});
test("vans -> van", function() {deepEqual( Stem("vans"), "van");});
test("vansinne -> vansin", function() {deepEqual( Stem("vansinne"), "vansin");});
test("vansinnig -> vansinn", function() {deepEqual( Stem("vansinnig"), "vansinn");});
test("vansinniga -> vansinn", function() {deepEqual( Stem("vansinniga"), "vansinn");});
test("vansinnige -> vansinn", function() {deepEqual( Stem("vansinnige"), "vansinn");});
test("vansinnigt -> vansinn", function() {deepEqual( Stem("vansinnigt"), "vansinn");});
test("vansinning -> vansinning", function() {deepEqual( Stem("vansinning"), "vansinning");});
test("vanskapligt -> vanskap", function() {deepEqual( Stem("vanskapligt"), "vanskap");});
test("vanskapt -> vanskapt", function() {deepEqual( Stem("vanskapt"), "vanskapt");});
test("vanskapte -> vanskapt", function() {deepEqual( Stem("vanskapte"), "vanskapt");});
test("vansklig -> vansk", function() {deepEqual( Stem("vansklig"), "vansk");});
test("vanskliga -> vansk", function() {deepEqual( Stem("vanskliga"), "vansk");});
test("vanslägtas -> vansläg", function() {deepEqual( Stem("vanslägtas"), "vansläg");});
test("vanstälde -> vanstäld", function() {deepEqual( Stem("vanstälde"), "vanstäld");});
test("vanställa -> vanställ", function() {deepEqual( Stem("vanställa"), "vanställ");});
test("vanställd -> vanställd", function() {deepEqual( Stem("vanställd"), "vanställd");});
test("vanställda -> vanställd", function() {deepEqual( Stem("vanställda"), "vanställd");});
test("vant -> vant", function() {deepEqual( Stem("vant"), "vant");});
test("vanta -> vant", function() {deepEqual( Stem("vanta"), "vant");});
test("vantade -> vant", function() {deepEqual( Stem("vantade"), "vant");});
test("vantarne -> vant", function() {deepEqual( Stem("vantarne"), "vant");});
test("vanvett -> vanvet", function() {deepEqual( Stem("vanvett"), "vanvet");});
test("vanvettig -> vanvett", function() {deepEqual( Stem("vanvettig"), "vanvett");});
test("vanvettigt -> vanvett", function() {deepEqual( Stem("vanvettigt"), "vanvett");});
test("vanvördigt -> vanvörd", function() {deepEqual( Stem("vanvördigt"), "vanvörd");});
test("vanärans -> vanäran", function() {deepEqual( Stem("vanärans"), "vanäran");});
test("vanäras -> vanär", function() {deepEqual( Stem("vanäras"), "vanär");});
test("vapen -> vap", function() {deepEqual( Stem("vapen"), "vap");});
test("vapnen -> vapn", function() {deepEqual( Stem("vapnen"), "vapn");});
test("var -> var", function() {deepEqual( Stem("var"), "var");});
test("vara -> var", function() {deepEqual( Stem("vara"), "var");});
test("varade -> var", function() {deepEqual( Stem("varade"), "var");});
test("varaktiga -> varakt", function() {deepEqual( Stem("varaktiga"), "varakt");});
test("varaktighet -> varakt", function() {deepEqual( Stem("varaktighet"), "varakt");});
test("varan -> varan", function() {deepEqual( Stem("varan"), "varan");});
test("varande -> var", function() {deepEqual( Stem("varande"), "var");});
test("varandr -> varandr", function() {deepEqual( Stem("varandr"), "varandr");});
test("varandra -> varandr", function() {deepEqual( Stem("varandra"), "varandr");});
test("varandras -> varandr", function() {deepEqual( Stem("varandras"), "varandr");});
test("varann -> varan", function() {deepEqual( Stem("varann"), "varan");});
test("varar -> var", function() {deepEqual( Stem("varar"), "var");});
test("varardra -> varardr", function() {deepEqual( Stem("varardra"), "varardr");});
test("varas -> var", function() {deepEqual( Stem("varas"), "var");});
test("varat -> var", function() {deepEqual( Stem("varat"), "var");});
test("varav -> varav", function() {deepEqual( Stem("varav"), "varav");});
test("varda -> vard", function() {deepEqual( Stem("varda"), "vard");});
test("vardagarna -> vardag", function() {deepEqual( Stem("vardagarna"), "vardag");});
test("vardagen -> vardag", function() {deepEqual( Stem("vardagen"), "vardag");});
test("vardagens -> vardag", function() {deepEqual( Stem("vardagens"), "vardag");});
test("vardaglig -> vardag", function() {deepEqual( Stem("vardaglig"), "vardag");});
test("vardagliga -> vardag", function() {deepEqual( Stem("vardagliga"), "vardag");});
test("vardagligt -> vardag", function() {deepEqual( Stem("vardagligt"), "vardag");});
test("vardags -> vardag", function() {deepEqual( Stem("vardags"), "vardag");});
test("vardagsklänning -> vardagsklänning", function() {deepEqual( Stem("vardagsklänning"), "vardagsklänning");});
test("vardagslag -> vardagslag", function() {deepEqual( Stem("vardagslag"), "vardagslag");});
test("vardagsliv -> vardagsliv", function() {deepEqual( Stem("vardagsliv"), "vardagsliv");});
test("vardagsmuntert -> vardagsmuntert", function() {deepEqual( Stem("vardagsmuntert"), "vardagsmuntert");});
test("vardagsrum -> vardagsrum", function() {deepEqual( Stem("vardagsrum"), "vardagsrum");});
test("vardagsrummet -> vardagsrummet", function() {deepEqual( Stem("vardagsrummet"), "vardagsrummet");});
test("vardagssaker -> vardagssak", function() {deepEqual( Stem("vardagssaker"), "vardagssak");});
test("vardagsskjortan -> vardagsskjortan", function() {deepEqual( Stem("vardagsskjortan"), "vardagsskjortan");});
test("varde -> vard", function() {deepEqual( Stem("varde"), "vard");});
test("varden -> vard", function() {deepEqual( Stem("varden"), "vard");});
test("vardera -> varder", function() {deepEqual( Stem("vardera"), "varder");});
test("vardetmöjligt -> vardetmöj", function() {deepEqual( Stem("vardetmöjligt"), "vardetmöj");});
test("vare -> var", function() {deepEqual( Stem("vare"), "var");});
test("varefter -> vareft", function() {deepEqual( Stem("varefter"), "vareft");});
test("varelse -> var", function() {deepEqual( Stem("varelse"), "var");});
test("varelsedrift -> varelsedrift", function() {deepEqual( Stem("varelsedrift"), "varelsedrift");});
test("varelsen -> var", function() {deepEqual( Stem("varelsen"), "var");});
test("varelsens -> var", function() {deepEqual( Stem("varelsens"), "var");});
test("varelser -> var", function() {deepEqual( Stem("varelser"), "var");});
test("varelserna -> var", function() {deepEqual( Stem("varelserna"), "var");});
test("varelsernas -> var", function() {deepEqual( Stem("varelsernas"), "var");});
test("varemot -> varemot", function() {deepEqual( Stem("varemot"), "varemot");});
test("varen -> var", function() {deepEqual( Stem("varen"), "var");});
test("varenda -> varend", function() {deepEqual( Stem("varenda"), "varend");});
test("varer -> var", function() {deepEqual( Stem("varer"), "var");});
test("varest -> varest", function() {deepEqual( Stem("varest"), "varest");});
test("varf -> varf", function() {deepEqual( Stem("varf"), "varf");});
test("varfor -> varf", function() {deepEqual( Stem("varfor"), "varf");});
test("varför -> varför", function() {deepEqual( Stem("varför"), "varför");});
test("vari -> vari", function() {deepEqual( Stem("vari"), "vari");});
test("variant -> variant", function() {deepEqual( Stem("variant"), "variant");});
test("varibland -> varibland", function() {deepEqual( Stem("varibland"), "varibland");});
test("variden -> varid", function() {deepEqual( Stem("variden"), "varid");});
test("varie -> vari", function() {deepEqual( Stem("varie"), "vari");});
test("varierade -> varier", function() {deepEqual( Stem("varierade"), "varier");});
test("varifran -> varifran", function() {deepEqual( Stem("varifran"), "varifran");});
test("varifrån -> varifrån", function() {deepEqual( Stem("varifrån"), "varifrån");});
test("varigenom -> varigenom", function() {deepEqual( Stem("varigenom"), "varigenom");});
test("varit -> varit", function() {deepEqual( Stem("varit"), "varit");});
test("varje -> varj", function() {deepEqual( Stem("varje"), "varj");});
test("varjehanda -> varjehand", function() {deepEqual( Stem("varjehanda"), "varjehand");});
test("vark -> vark", function() {deepEqual( Stem("vark"), "vark");});
test("varken -> vark", function() {deepEqual( Stem("varken"), "vark");});
test("varkeo -> varkeo", function() {deepEqual( Stem("varkeo"), "varkeo");});
test("varld -> varld", function() {deepEqual( Stem("varld"), "varld");});
test("varldar -> varld", function() {deepEqual( Stem("varldar"), "varld");});
test("varligt -> var", function() {deepEqual( Stem("varligt"), "var");});
test("varm -> varm", function() {deepEqual( Stem("varm"), "varm");});
test("varma -> varm", function() {deepEqual( Stem("varma"), "varm");});
test("varmare -> varm", function() {deepEqual( Stem("varmare"), "varm");});
test("varmaste -> varm", function() {deepEqual( Stem("varmaste"), "varm");});
test("varmed -> varmed", function() {deepEqual( Stem("varmed"), "varmed");});
test("varmt -> varmt", function() {deepEqual( Stem("varmt"), "varmt");});
test("varna -> varn", function() {deepEqual( Stem("varna"), "varn");});
test("varnagel -> varnagel", function() {deepEqual( Stem("varnagel"), "varnagel");});
test("varnar -> varn", function() {deepEqual( Stem("varnar"), "varn");});
test("varnat -> varn", function() {deepEqual( Stem("varnat"), "varn");});
test("varning -> varning", function() {deepEqual( Stem("varning"), "varning");});
test("varningar -> varning", function() {deepEqual( Stem("varningar"), "varning");});
test("varningen -> varning", function() {deepEqual( Stem("varningen"), "varning");});
test("varom -> varom", function() {deepEqual( Stem("varom"), "varom");});
test("varor -> var", function() {deepEqual( Stem("varor"), "var");});
test("varorna -> var", function() {deepEqual( Stem("varorna"), "var");});
test("varpå -> varpå", function() {deepEqual( Stem("varpå"), "varpå");});
test("vars -> var", function() {deepEqual( Stem("vars"), "var");});
test("varsam -> varsam", function() {deepEqual( Stem("varsam"), "varsam");});
test("varsamma -> varsamm", function() {deepEqual( Stem("varsamma"), "varsamm");});
test("varsamt -> varsamt", function() {deepEqual( Stem("varsamt"), "varsamt");});
test("varse -> vars", function() {deepEqual( Stem("varse"), "vars");});
test("varseblef -> varseblef", function() {deepEqual( Stem("varseblef"), "varseblef");});
test("varseblefvo -> varseblefvo", function() {deepEqual( Stem("varseblefvo"), "varseblefvo");});
test("varseblev -> varseblev", function() {deepEqual( Stem("varseblev"), "varseblev");});
test("varsebli -> varsebli", function() {deepEqual( Stem("varsebli"), "varsebli");});
test("varseblir -> varseblir", function() {deepEqual( Stem("varseblir"), "varseblir");});
test("varseblivit -> varseblivit", function() {deepEqual( Stem("varseblivit"), "varseblivit");});
test("varsel -> varsel", function() {deepEqual( Stem("varsel"), "varsel");});
test("varsnade -> varsn", function() {deepEqual( Stem("varsnade"), "varsn");});
test("varsnat -> varsn", function() {deepEqual( Stem("varsnat"), "varsn");});
test("vart -> vart", function() {deepEqual( Stem("vart"), "vart");});
test("vartannat -> vartan", function() {deepEqual( Stem("vartannat"), "vartan");});
test("vartdera -> vartder", function() {deepEqual( Stem("vartdera"), "vartder");});
test("vartenda -> vartend", function() {deepEqual( Stem("vartenda"), "vartend");});
test("varthän -> varthän", function() {deepEqual( Stem("varthän"), "varthän");});
test("vartill -> vartill", function() {deepEqual( Stem("vartill"), "vartill");});
test("varulager -> varulag", function() {deepEqual( Stem("varulager"), "varulag");});
test("varunder -> varund", function() {deepEqual( Stem("varunder"), "varund");});
test("varuti -> varuti", function() {deepEqual( Stem("varuti"), "varuti");});
test("varv -> varv", function() {deepEqual( Stem("varv"), "varv");});
test("varvid -> varvid", function() {deepEqual( Stem("varvid"), "varvid");});
test("vas -> vas", function() {deepEqual( Stem("vas"), "vas");});
test("vasabron -> vasabron", function() {deepEqual( Stem("vasabron"), "vasabron");});
test("vasaprinsens -> vasaprins", function() {deepEqual( Stem("vasaprinsens"), "vasaprins");});
test("vasar -> vas", function() {deepEqual( Stem("vasar"), "vas");});
test("vasasvenskt -> vasasvensk", function() {deepEqual( Stem("vasasvenskt"), "vasasvensk");});
test("vasen -> vas", function() {deepEqual( Stem("vasen"), "vas");});
test("vasenla -> vasenl", function() {deepEqual( Stem("vasenla"), "vasenl");});
test("vaser -> vas", function() {deepEqual( Stem("vaser"), "vas");});
test("vaserna -> vas", function() {deepEqual( Stem("vaserna"), "vas");});
test("vasken -> vask", function() {deepEqual( Stem("vasken"), "vask");});
test("vass -> vass", function() {deepEqual( Stem("vass"), "vass");});
test("vassa -> vass", function() {deepEqual( Stem("vassa"), "vass");});
test("vassen -> vass", function() {deepEqual( Stem("vassen"), "vass");});
test("vassrör -> vassrör", function() {deepEqual( Stem("vassrör"), "vassrör");});
test("vasst -> vasst", function() {deepEqual( Stem("vasst"), "vasst");});
test("vatt -> vatt", function() {deepEqual( Stem("vatt"), "vatt");});
test("vatten -> vatt", function() {deepEqual( Stem("vatten"), "vatt");});
test("vattenbutiken -> vattenbutik", function() {deepEqual( Stem("vattenbutiken"), "vattenbutik");});
test("vattendroppar -> vattendropp", function() {deepEqual( Stem("vattendroppar"), "vattendropp");});
test("vattenglas -> vattengl", function() {deepEqual( Stem("vattenglas"), "vattengl");});
test("vattenglaset -> vattenglaset", function() {deepEqual( Stem("vattenglaset"), "vattenglaset");});
test("vattenhink -> vattenhink", function() {deepEqual( Stem("vattenhink"), "vattenhink");});
test("vattenkamla -> vattenkaml", function() {deepEqual( Stem("vattenkamla"), "vattenkaml");});
test("vattenkannan -> vattenkannan", function() {deepEqual( Stem("vattenkannan"), "vattenkannan");});
test("vattenkaraffin -> vattenkaraffin", function() {deepEqual( Stem("vattenkaraffin"), "vattenkaraffin");});
test("vattenkaraffinen -> vattenkaraffin", function() {deepEqual( Stem("vattenkaraffinen"), "vattenkaraffin");});
test("vattenledning -> vattenledning", function() {deepEqual( Stem("vattenledning"), "vattenledning");});
test("vattensoppa -> vattensopp", function() {deepEqual( Stem("vattensoppa"), "vattensopp");});
test("vattentunna -> vattentun", function() {deepEqual( Stem("vattentunna"), "vattentun");});
test("vattentäta -> vattentät", function() {deepEqual( Stem("vattentäta"), "vattentät");});
test("vattenyta -> vattenyt", function() {deepEqual( Stem("vattenyta"), "vattenyt");});
test("vattenytan -> vattenytan", function() {deepEqual( Stem("vattenytan"), "vattenytan");});
test("vattna -> vattn", function() {deepEqual( Stem("vattna"), "vattn");});
test("vattnade -> vattn", function() {deepEqual( Stem("vattnade"), "vattn");});
test("vattnar -> vattn", function() {deepEqual( Stem("vattnar"), "vattn");});
test("vattnas -> vattn", function() {deepEqual( Stem("vattnas"), "vattn");});
test("vattnat -> vattn", function() {deepEqual( Stem("vattnat"), "vattn");});
test("vattnen -> vattn", function() {deepEqual( Stem("vattnen"), "vattn");});
test("vattnet -> vattnet", function() {deepEqual( Stem("vattnet"), "vattnet");});
test("vattnets -> vattnet", function() {deepEqual( Stem("vattnets"), "vattnet");});
test("vattniga -> vattn", function() {deepEqual( Stem("vattniga"), "vattn");});
test("vattningen -> vattning", function() {deepEqual( Stem("vattningen"), "vattning");});
test("vattrad -> vattr", function() {deepEqual( Stem("vattrad"), "vattr");});
test("vaxade -> vax", function() {deepEqual( Stem("vaxade"), "vax");});
test("vaxdocka -> vaxdock", function() {deepEqual( Stem("vaxdocka"), "vaxdock");});
test("vaxduken -> vaxduk", function() {deepEqual( Stem("vaxduken"), "vaxduk");});
test("vaxgult -> vaxgult", function() {deepEqual( Stem("vaxgult"), "vaxgult");});
test("vaxte -> vaxt", function() {deepEqual( Stem("vaxte"), "vaxt");});
test("vcck -> vcck", function() {deepEqual( Stem("vcck"), "vcck");});
test("vcttig -> vcttig", function() {deepEqual( Stem("vcttig"), "vcttig");});
test("vd -> vd", function() {deepEqual( Stem("vd"), "vd");});
test("vdelse -> vdels", function() {deepEqual( Stem("vdelse"), "vdels");});
test("ve -> ve", function() {deepEqual( Stem("ve"), "ve");});
test("veck -> veck", function() {deepEqual( Stem("veck"), "veck");});
test("vecka -> veck", function() {deepEqual( Stem("vecka"), "veck");});
test("veckade -> veck", function() {deepEqual( Stem("veckade"), "veck");});
test("veckan -> veckan", function() {deepEqual( Stem("veckan"), "veckan");});
test("veckas -> veck", function() {deepEqual( Stem("veckas"), "veck");});
test("vecken -> veck", function() {deepEqual( Stem("vecken"), "veck");});
test("vecklade -> veckl", function() {deepEqual( Stem("vecklade"), "veckl");});
test("vecklas -> veckl", function() {deepEqual( Stem("vecklas"), "veckl");});
test("vecklat -> veckl", function() {deepEqual( Stem("vecklat"), "veckl");});
test("vecko -> vecko", function() {deepEqual( Stem("vecko"), "vecko");});
test("veckodagarna -> veckodag", function() {deepEqual( Stem("veckodagarna"), "veckodag");});
test("veckor -> veck", function() {deepEqual( Stem("veckor"), "veck");});
test("veckorna -> veck", function() {deepEqual( Stem("veckorna"), "veck");});
test("veckors -> veckor", function() {deepEqual( Stem("veckors"), "veckor");});
test("veckoräfst -> veckoräfst", function() {deepEqual( Stem("veckoräfst"), "veckoräfst");});
test("ved -> ved", function() {deepEqual( Stem("ved"), "ved");});
test("veden -> ved", function() {deepEqual( Stem("veden"), "ved");});
test("vederbörlig -> vederbör", function() {deepEqual( Stem("vederbörlig"), "vederbör");});
test("vederbörligen -> vederbör", function() {deepEqual( Stem("vederbörligen"), "vederbör");});
test("vederfående -> vederfåend", function() {deepEqual( Stem("vederfående"), "vederfåend");});
test("vedergälla -> vedergäll", function() {deepEqual( Stem("vedergälla"), "vedergäll");});
test("vederkvickelse -> vederkvick", function() {deepEqual( Stem("vederkvickelse"), "vederkvick");});
test("vederlägga -> vederlägg", function() {deepEqual( Stem("vederlägga"), "vederlägg");});
test("vederläggning -> vederläggning", function() {deepEqual( Stem("vederläggning"), "vederläggning");});
test("vedermälen -> vedermäl", function() {deepEqual( Stem("vedermälen"), "vedermäl");});
test("vedermöda -> vedermöd", function() {deepEqual( Stem("vedermöda"), "vedermöd");});
test("vedermödor -> vedermöd", function() {deepEqual( Stem("vedermödor"), "vedermöd");});
test("vederqvicka -> vederqvick", function() {deepEqual( Stem("vederqvicka"), "vederqvick");});
test("vederstyggligaste -> vederstygg", function() {deepEqual( Stem("vederstyggligaste"), "vederstygg");});
test("vederstyggligt -> vederstygg", function() {deepEqual( Stem("vederstyggligt"), "vederstygg");});
test("vedervärdigt -> vedervärd", function() {deepEqual( Stem("vedervärdigt"), "vedervärd");});
test("vedkorg -> vedkorg", function() {deepEqual( Stem("vedkorg"), "vedkorg");});
test("vedkubbarna -> vedkubb", function() {deepEqual( Stem("vedkubbarna"), "vedkubb");});
test("vedskutorna -> vedskut", function() {deepEqual( Stem("vedskutorna"), "vedskut");});
test("vedträ -> vedträ", function() {deepEqual( Stem("vedträ"), "vedträ");});
test("vegetation -> vegetation", function() {deepEqual( Stem("vegetation"), "vegetation");});
test("veitsdans -> veitsdan", function() {deepEqual( Stem("veitsdans"), "veitsdan");});
test("vek -> vek", function() {deepEqual( Stem("vek"), "vek");});
test("veka -> vek", function() {deepEqual( Stem("veka"), "vek");});
test("vekar -> vek", function() {deepEqual( Stem("vekar"), "vek");});
test("veke -> vek", function() {deepEqual( Stem("veke"), "vek");});
test("veklig -> vek", function() {deepEqual( Stem("veklig"), "vek");});
test("veknande -> vekn", function() {deepEqual( Stem("veknande"), "vekn");});
test("veknar -> vekn", function() {deepEqual( Stem("veknar"), "vekn");});
test("vekt -> vekt", function() {deepEqual( Stem("vekt"), "vekt");});
test("velade -> vel", function() {deepEqual( Stem("velade"), "vel");});
test("velat -> vel", function() {deepEqual( Stem("velat"), "vel");});
test("velin -> velin", function() {deepEqual( Stem("velin"), "velin");});
test("velocipedtävlan -> velocipedtävlan", function() {deepEqual( Stem("velocipedtävlan"), "velocipedtävlan");});
test("velom -> velom", function() {deepEqual( Stem("velom"), "velom");});
test("vem -> vem", function() {deepEqual( Stem("vem"), "vem");});
test("vember -> vemb", function() {deepEqual( Stem("vember"), "vemb");});
test("vemodig -> vemod", function() {deepEqual( Stem("vemodig"), "vemod");});
test("vemodiga -> vemod", function() {deepEqual( Stem("vemodiga"), "vemod");});
test("vemodigt -> vemod", function() {deepEqual( Stem("vemodigt"), "vemod");});
test("vemodsvår -> vemodsvår", function() {deepEqual( Stem("vemodsvår"), "vemodsvår");});
test("vems -> vem", function() {deepEqual( Stem("vems"), "vem");});
test("ven -> ven", function() {deepEqual( Stem("ven"), "ven");});
test("veno -> veno", function() {deepEqual( Stem("veno"), "veno");});
test("venster -> venst", function() {deepEqual( Stem("venster"), "venst");});
test("venstra -> venstr", function() {deepEqual( Stem("venstra"), "venstr");});
test("venus -> venus", function() {deepEqual( Stem("venus"), "venus");});
test("ver -> ver", function() {deepEqual( Stem("ver"), "ver");});
test("verallt -> verallt", function() {deepEqual( Stem("verallt"), "verallt");});
test("veranda -> verand", function() {deepEqual( Stem("veranda"), "verand");});
test("verandan -> verandan", function() {deepEqual( Stem("verandan"), "verandan");});
test("verandaräcket -> verandaräcket", function() {deepEqual( Stem("verandaräcket"), "verandaräcket");});
test("verb -> verb", function() {deepEqual( Stem("verb"), "verb");});
test("verbena -> verben", function() {deepEqual( Stem("verbena"), "verben");});
test("verbum -> verbum", function() {deepEqual( Stem("verbum"), "verbum");});
test("verdslig -> verds", function() {deepEqual( Stem("verdslig"), "verds");});
test("verdsligt -> verds", function() {deepEqual( Stem("verdsligt"), "verds");});
test("verk -> verk", function() {deepEqual( Stem("verk"), "verk");});
test("verka -> verk", function() {deepEqual( Stem("verka"), "verk");});
test("verkade -> verk", function() {deepEqual( Stem("verkade"), "verk");});
test("verkan -> verkan", function() {deepEqual( Stem("verkan"), "verkan");});
test("verkande -> verk", function() {deepEqual( Stem("verkande"), "verk");});
test("verkar -> verk", function() {deepEqual( Stem("verkar"), "verk");});
test("verkat -> verk", function() {deepEqual( Stem("verkat"), "verk");});
test("verken -> verk", function() {deepEqual( Stem("verken"), "verk");});
test("verket -> verket", function() {deepEqual( Stem("verket"), "verket");});
test("verkhgen -> verkhg", function() {deepEqual( Stem("verkhgen"), "verkhg");});
test("verklig -> verk", function() {deepEqual( Stem("verklig"), "verk");});
test("verkliga -> verk", function() {deepEqual( Stem("verkliga"), "verk");});
test("verkligare -> verk", function() {deepEqual( Stem("verkligare"), "verk");});
test("verkligaste -> verk", function() {deepEqual( Stem("verkligaste"), "verk");});
test("verkligen -> verk", function() {deepEqual( Stem("verkligen"), "verk");});
test("verklighet -> verk", function() {deepEqual( Stem("verklighet"), "verk");});
test("verkligheten -> verk", function() {deepEqual( Stem("verkligheten"), "verk");});
test("verklighetens -> verk", function() {deepEqual( Stem("verklighetens"), "verk");});
test("verkligt -> verk", function() {deepEqual( Stem("verkligt"), "verk");});
test("verksam -> verksam", function() {deepEqual( Stem("verksam"), "verksam");});
test("verksamhet -> verksam", function() {deepEqual( Stem("verksamhet"), "verksam");});
test("verksamheten -> verksam", function() {deepEqual( Stem("verksamheten"), "verksam");});
test("verksamhetsraseri -> verksamhetsraseri", function() {deepEqual( Stem("verksamhetsraseri"), "verksamhetsraseri");});
test("verksamma -> verksamm", function() {deepEqual( Stem("verksamma"), "verksamm");});
test("verksammaste -> verksamm", function() {deepEqual( Stem("verksammaste"), "verksamm");});
test("verkstad -> verkst", function() {deepEqual( Stem("verkstad"), "verkst");});
test("verkstaden -> verkstad", function() {deepEqual( Stem("verkstaden"), "verkstad");});
test("verkställa -> verkställ", function() {deepEqual( Stem("verkställa"), "verkställ");});
test("verkställande -> verkställ", function() {deepEqual( Stem("verkställande"), "verkställ");});
test("verkställare -> verkställ", function() {deepEqual( Stem("verkställare"), "verkställ");});
test("verkställer -> verkställ", function() {deepEqual( Stem("verkställer"), "verkställ");});
test("verkställighet -> verkstäl", function() {deepEqual( Stem("verkställighet"), "verkstäl");});
test("verkstält -> verkstält", function() {deepEqual( Stem("verkstält"), "verkstält");});
test("verksäm -> verksäm", function() {deepEqual( Stem("verksäm"), "verksäm");});
test("verktyg -> verktyg", function() {deepEqual( Stem("verktyg"), "verktyg");});
test("verld -> verld", function() {deepEqual( Stem("verld"), "verld");});
test("verlden -> verld", function() {deepEqual( Stem("verlden"), "verld");});
test("verldens -> verld", function() {deepEqual( Stem("verldens"), "verld");});
test("verldsliga -> verlds", function() {deepEqual( Stem("verldsliga"), "verlds");});
test("verläppen -> verläpp", function() {deepEqual( Stem("verläppen"), "verläpp");});
test("vers -> ver", function() {deepEqual( Stem("vers"), "ver");});
test("versen -> vers", function() {deepEqual( Stem("versen"), "vers");});
test("verser -> vers", function() {deepEqual( Stem("verser"), "vers");});
test("versrad -> versr", function() {deepEqual( Stem("versrad"), "versr");});
test("versrader -> versrad", function() {deepEqual( Stem("versrader"), "versrad");});
test("vester -> vest", function() {deepEqual( Stem("vester"), "vest");});
test("vesterut -> vesterut", function() {deepEqual( Stem("vesterut"), "vesterut");});
test("vestindiefarare -> vestindiefar", function() {deepEqual( Stem("vestindiefarare"), "vestindiefar");});
test("vestindiefararen -> vestindiefar", function() {deepEqual( Stem("vestindiefararen"), "vestindiefar");});
test("vestlig -> vest", function() {deepEqual( Stem("vestlig"), "vest");});
test("vestliga -> vest", function() {deepEqual( Stem("vestliga"), "vest");});
test("vestra -> vestr", function() {deepEqual( Stem("vestra"), "vestr");});
test("vestvart -> vestvart", function() {deepEqual( Stem("vestvart"), "vestvart");});
test("vet -> vet", function() {deepEqual( Stem("vet"), "vet");});
test("veta -> vet", function() {deepEqual( Stem("veta"), "vet");});
test("vetande -> vet", function() {deepEqual( Stem("vetande"), "vet");});
test("vetat -> vet", function() {deepEqual( Stem("vetat"), "vet");});
test("vetdithanfordendårgången -> vetdithanfordendårgång", function() {deepEqual( Stem("vetdithanfordendårgången"), "vetdithanfordendårgång");});
test("vete -> vet", function() {deepEqual( Stem("vete"), "vet");});
test("vetebulle -> vetebull", function() {deepEqual( Stem("vetebulle"), "vetebull");});
test("vetenskapen -> vetenskap", function() {deepEqual( Stem("vetenskapen"), "vetenskap");});
test("vetenskapens -> vetenskap", function() {deepEqual( Stem("vetenskapens"), "vetenskap");});
test("vetenskaperna -> vetenskap", function() {deepEqual( Stem("vetenskaperna"), "vetenskap");});
test("vetenskaplig -> vetenskap", function() {deepEqual( Stem("vetenskaplig"), "vetenskap");});
test("vetenskapliga -> vetenskap", function() {deepEqual( Stem("vetenskapliga"), "vetenskap");});
test("vetenskapsakademien -> vetenskapsakademi", function() {deepEqual( Stem("vetenskapsakademien"), "vetenskapsakademi");});
test("vetenskapsman -> vetenskapsman", function() {deepEqual( Stem("vetenskapsman"), "vetenskapsman");});
test("vetgirigare -> vetgir", function() {deepEqual( Stem("vetgirigare"), "vetgir");});
test("vetgirighet -> vetgir", function() {deepEqual( Stem("vetgirighet"), "vetgir");});
test("vetgirigt -> vetgir", function() {deepEqual( Stem("vetgirigt"), "vetgir");});
test("vetskap -> vetskap", function() {deepEqual( Stem("vetskap"), "vetskap");});
test("vett -> vett", function() {deepEqual( Stem("vett"), "vett");});
test("vettet -> vettet", function() {deepEqual( Stem("vettet"), "vettet");});
test("vettig -> vett", function() {deepEqual( Stem("vettig"), "vett");});
test("vettigt -> vett", function() {deepEqual( Stem("vettigt"), "vett");});
test("vettlös -> vettlös", function() {deepEqual( Stem("vettlös"), "vettlös");});
test("vettlöst -> vettlös", function() {deepEqual( Stem("vettlöst"), "vettlös");});
test("vev -> vev", function() {deepEqual( Stem("vev"), "vev");});
test("vexelvis -> vexelvis", function() {deepEqual( Stem("vexelvis"), "vexelvis");});
test("vexlat -> vexl", function() {deepEqual( Stem("vexlat"), "vexl");});
test("vhl -> vhl", function() {deepEqual( Stem("vhl"), "vhl");});
test("vhlgar -> vhlgar", function() {deepEqual( Stem("vhlgar"), "vhlgar");});
test("vi -> vi", function() {deepEqual( Stem("vi"), "vi");});
test("vice -> vic", function() {deepEqual( Stem("vice"), "vic");});
test("vichyvatten -> vichyvat", function() {deepEqual( Stem("vichyvatten"), "vichyvat");});
test("vicka -> vick", function() {deepEqual( Stem("vicka"), "vick");});
test("vickan -> vickan", function() {deepEqual( Stem("vickan"), "vickan");});
test("vickningar -> vickning", function() {deepEqual( Stem("vickningar"), "vickning");});
test("vid -> vid", function() {deepEqual( Stem("vid"), "vid");});
test("vida -> vid", function() {deepEqual( Stem("vida"), "vid");});
test("vidare -> vid", function() {deepEqual( Stem("vidare"), "vid");});
test("vidblev -> vidblev", function() {deepEqual( Stem("vidblev"), "vidblev");});
test("vidbliva -> vidbliv", function() {deepEqual( Stem("vidbliva"), "vidbliv");});
test("vidblivit -> vidblivit", function() {deepEqual( Stem("vidblivit"), "vidblivit");});
test("vidden -> vidd", function() {deepEqual( Stem("vidden"), "vidd");});
test("vidgad -> vidg", function() {deepEqual( Stem("vidgad"), "vidg");});
test("vidgade -> vidg", function() {deepEqual( Stem("vidgade"), "vidg");});
test("vidgades -> vidg", function() {deepEqual( Stem("vidgades"), "vidg");});
test("vidgande -> vidg", function() {deepEqual( Stem("vidgande"), "vidg");});
test("vidgar -> vidg", function() {deepEqual( Stem("vidgar"), "vidg");});
test("vidgår -> vidgår", function() {deepEqual( Stem("vidgår"), "vidgår");});
test("vidhjärtad -> vidhjärt", function() {deepEqual( Stem("vidhjärtad"), "vidhjärt");});
test("vidhänga -> vidhäng", function() {deepEqual( Stem("vidhänga"), "vidhäng");});
test("vidhålla -> vidhåll", function() {deepEqual( Stem("vidhålla"), "vidhåll");});
test("vidhåller -> vidhåll", function() {deepEqual( Stem("vidhåller"), "vidhåll");});
test("vidkom -> vidkom", function() {deepEqual( Stem("vidkom"), "vidkom");});
test("vidkommer -> vidkomm", function() {deepEqual( Stem("vidkommer"), "vidkomm");});
test("vidlyftig -> vidlyft", function() {deepEqual( Stem("vidlyftig"), "vidlyft");});
test("vidlyftiga -> vidlyft", function() {deepEqual( Stem("vidlyftiga"), "vidlyft");});
test("vidlyftigare -> vidlyft", function() {deepEqual( Stem("vidlyftigare"), "vidlyft");});
test("vidlyftigaste -> vidlyft", function() {deepEqual( Stem("vidlyftigaste"), "vidlyft");});
test("vidrig -> vidr", function() {deepEqual( Stem("vidrig"), "vidr");});
test("vidriga -> vidr", function() {deepEqual( Stem("vidriga"), "vidr");});
test("vidrigt -> vidr", function() {deepEqual( Stem("vidrigt"), "vidr");});
test("vidrör -> vidrör", function() {deepEqual( Stem("vidrör"), "vidrör");});
test("vidröra -> vidrör", function() {deepEqual( Stem("vidröra"), "vidrör");});
test("vidrörde -> vidrörd", function() {deepEqual( Stem("vidrörde"), "vidrörd");});
test("vidskepelse -> vidskep", function() {deepEqual( Stem("vidskepelse"), "vidskep");});
test("vidt -> vidt", function() {deepEqual( Stem("vidt"), "vidt");});
test("vidtaga -> vidtag", function() {deepEqual( Stem("vidtaga"), "vidtag");});
test("vidtalade -> vidtal", function() {deepEqual( Stem("vidtalade"), "vidtal");});
test("vidtalat -> vidtal", function() {deepEqual( Stem("vidtalat"), "vidtal");});
test("vidtogo -> vidtogo", function() {deepEqual( Stem("vidtogo"), "vidtogo");});
test("vidunder -> vidund", function() {deepEqual( Stem("vidunder"), "vidund");});
test("vidunderligt -> vidunder", function() {deepEqual( Stem("vidunderligt"), "vidunder");});
test("vidåhörandet -> vidåhör", function() {deepEqual( Stem("vidåhörandet"), "vidåhör");});
test("vidöppen -> vidöpp", function() {deepEqual( Stem("vidöppen"), "vidöpp");});
test("vidöppna -> vidöppn", function() {deepEqual( Stem("vidöppna"), "vidöppn");});
test("vie -> vie", function() {deepEqual( Stem("vie"), "vie");});
test("vieillissant -> vieillissant", function() {deepEqual( Stem("vieillissant"), "vieillissant");});
test("vieux -> vieux", function() {deepEqual( Stem("vieux"), "vieux");});
test("vifta -> vift", function() {deepEqual( Stem("vifta"), "vift");});
test("viftade -> vift", function() {deepEqual( Stem("viftade"), "vift");});
test("viftande -> vift", function() {deepEqual( Stem("viftande"), "vift");});
test("viftning -> viftning", function() {deepEqual( Stem("viftning"), "viftning");});
test("viftningar -> viftning", function() {deepEqual( Stem("viftningar"), "viftning");});
test("vig -> vig", function() {deepEqual( Stem("vig"), "vig");});
test("vigas -> vig", function() {deepEqual( Stem("vigas"), "vig");});
test("vighet -> vig", function() {deepEqual( Stem("vighet"), "vig");});
test("vigilans -> vigilan", function() {deepEqual( Stem("vigilans"), "vigilan");});
test("vigilansen -> vigilans", function() {deepEqual( Stem("vigilansen"), "vigilans");});
test("vigselattest -> vigselattest", function() {deepEqual( Stem("vigselattest"), "vigselattest");});
test("vigseln -> vigseln", function() {deepEqual( Stem("vigseln"), "vigseln");});
test("vigselringen -> vigselring", function() {deepEqual( Stem("vigselringen"), "vigselring");});
test("vigtig -> vigt", function() {deepEqual( Stem("vigtig"), "vigt");});
test("vigtiga -> vigt", function() {deepEqual( Stem("vigtiga"), "vigt");});
test("vigtigt -> vigt", function() {deepEqual( Stem("vigtigt"), "vigt");});
test("vii -> vii", function() {deepEqual( Stem("vii"), "vii");});
test("viii -> viii", function() {deepEqual( Stem("viii"), "viii");});
test("viile -> viil", function() {deepEqual( Stem("viile"), "viil");});
test("vik -> vik", function() {deepEqual( Stem("vik"), "vik");});
test("vika -> vik", function() {deepEqual( Stem("vika"), "vik");});
test("vikarna -> vik", function() {deepEqual( Stem("vikarna"), "vik");});
test("viker -> vik", function() {deepEqual( Stem("viker"), "vik");});
test("vikingarne -> viking", function() {deepEqual( Stem("vikingarne"), "viking");});
test("vikit -> vikit", function() {deepEqual( Stem("vikit"), "vikit");});
test("vikt -> vikt", function() {deepEqual( Stem("vikt"), "vikt");});
test("vikten -> vikt", function() {deepEqual( Stem("vikten"), "vikt");});
test("viktig -> vikt", function() {deepEqual( Stem("viktig"), "vikt");});
test("viktiga -> vikt", function() {deepEqual( Stem("viktiga"), "vikt");});
test("viktigare -> vikt", function() {deepEqual( Stem("viktigare"), "vikt");});
test("viktigaste -> vikt", function() {deepEqual( Stem("viktigaste"), "vikt");});
test("viktigt -> vikt", function() {deepEqual( Stem("viktigt"), "vikt");});
test("viktor -> vikt", function() {deepEqual( Stem("viktor"), "vikt");});
test("vil -> vil", function() {deepEqual( Stem("vil"), "vil");});
test("vila -> vil", function() {deepEqual( Stem("vila"), "vil");});
test("vilade -> vil", function() {deepEqual( Stem("vilade"), "vil");});
test("vilan -> vilan", function() {deepEqual( Stem("vilan"), "vilan");});
test("vilande -> vil", function() {deepEqual( Stem("vilande"), "vil");});
test("vilar -> vil", function() {deepEqual( Stem("vilar"), "vil");});
test("vilat -> vil", function() {deepEqual( Stem("vilat"), "vil");});
test("vild -> vild", function() {deepEqual( Stem("vild"), "vild");});
test("vilda -> vild", function() {deepEqual( Stem("vilda"), "vild");});
test("vildand -> vildand", function() {deepEqual( Stem("vildand"), "vildand");});
test("vildare -> vild", function() {deepEqual( Stem("vildare"), "vild");});
test("vildarne -> vild", function() {deepEqual( Stem("vildarne"), "vild");});
test("vildaste -> vild", function() {deepEqual( Stem("vildaste"), "vild");});
test("vilddjur -> vilddjur", function() {deepEqual( Stem("vilddjur"), "vilddjur");});
test("vilde -> vild", function() {deepEqual( Stem("vilde"), "vild");});
test("vildhet -> vild", function() {deepEqual( Stem("vildhet"), "vild");});
test("vildheten -> vild", function() {deepEqual( Stem("vildheten"), "vild");});
test("vildmarkens -> vildmark", function() {deepEqual( Stem("vildmarkens"), "vildmark");});
test("vildt -> vild", function() {deepEqual( Stem("vildt"), "vild");});
test("vildvin -> vildvin", function() {deepEqual( Stem("vildvin"), "vildvin");});
test("vildänder -> vildänd", function() {deepEqual( Stem("vildänder"), "vildänd");});
test("vili -> vili", function() {deepEqual( Stem("vili"), "vili");});
test("vilie -> vili", function() {deepEqual( Stem("vilie"), "vili");});
test("vilja -> vilj", function() {deepEqual( Stem("vilja"), "vilj");});
test("viljan -> viljan", function() {deepEqual( Stem("viljan"), "viljan");});
test("viljas -> vilj", function() {deepEqual( Stem("viljas"), "vilj");});
test("viljeakt -> viljeak", function() {deepEqual( Stem("viljeakt"), "viljeak");});
test("viljes -> vilj", function() {deepEqual( Stem("viljes"), "vilj");});
test("vilka -> vilk", function() {deepEqual( Stem("vilka"), "vilk");});
test("vilkas -> vilk", function() {deepEqual( Stem("vilkas"), "vilk");});
test("vilken -> vilk", function() {deepEqual( Stem("vilken"), "vilk");});
test("vilkens -> vilk", function() {deepEqual( Stem("vilkens"), "vilk");});
test("vilket -> vilket", function() {deepEqual( Stem("vilket"), "vilket");});
test("vilkets -> vilket", function() {deepEqual( Stem("vilkets"), "vilket");});
test("vilkor -> vilk", function() {deepEqual( Stem("vilkor"), "vilk");});
test("vilkoren -> vilkor", function() {deepEqual( Stem("vilkoren"), "vilkor");});
test("vill -> vill", function() {deepEqual( Stem("vill"), "vill");});
test("villa -> vill", function() {deepEqual( Stem("villa"), "vill");});
test("villan -> villan", function() {deepEqual( Stem("villan"), "villan");});
test("villande -> vill", function() {deepEqual( Stem("villande"), "vill");});
test("villastäderna -> villastäd", function() {deepEqual( Stem("villastäderna"), "villastäd");});
test("villc -> villc", function() {deepEqual( Stem("villc"), "villc");});
test("ville -> vill", function() {deepEqual( Stem("ville"), "vill");});
test("villebradet -> villebradet", function() {deepEqual( Stem("villebradet"), "villebradet");});
test("villebråd -> villebråd", function() {deepEqual( Stem("villebråd"), "villebråd");});
test("villervalla -> villervall", function() {deepEqual( Stem("villervalla"), "villervall");});
test("villfarelse -> villfar", function() {deepEqual( Stem("villfarelse"), "villfar");});
test("villfarelser -> villfar", function() {deepEqual( Stem("villfarelser"), "villfar");});
test("villfarit -> villfarit", function() {deepEqual( Stem("villfarit"), "villfarit");});
test("villig -> vil", function() {deepEqual( Stem("villig"), "vil");});
test("villigt -> vil", function() {deepEqual( Stem("villigt"), "vil");});
test("villkor -> villk", function() {deepEqual( Stem("villkor"), "villk");});
test("villkoren -> villkor", function() {deepEqual( Stem("villkoren"), "villkor");});
test("villkoret -> villkoret", function() {deepEqual( Stem("villkoret"), "villkoret");});
test("villor -> vill", function() {deepEqual( Stem("villor"), "vill");});
test("villornas -> vill", function() {deepEqual( Stem("villornas"), "vill");});
test("villovägar -> villoväg", function() {deepEqual( Stem("villovägar"), "villoväg");});
test("villrådig -> villråd", function() {deepEqual( Stem("villrådig"), "villråd");});
test("villrådiga -> villråd", function() {deepEqual( Stem("villrådiga"), "villråd");});
test("viloplats -> viloplat", function() {deepEqual( Stem("viloplats"), "viloplat");});
test("vilse -> vils", function() {deepEqual( Stem("vilse"), "vils");});
test("vilsekommen -> vilsekomm", function() {deepEqual( Stem("vilsekommen"), "vilsekomm");});
test("vilsen -> vils", function() {deepEqual( Stem("vilsen"), "vils");});
test("vilsna -> vilsn", function() {deepEqual( Stem("vilsna"), "vilsn");});
test("vilt -> vilt", function() {deepEqual( Stem("vilt"), "vilt");});
test("vimla -> viml", function() {deepEqual( Stem("vimla"), "viml");});
test("vimlad -> viml", function() {deepEqual( Stem("vimlad"), "viml");});
test("vimlade -> viml", function() {deepEqual( Stem("vimlade"), "viml");});
test("vimmelkantig -> vimmelkant", function() {deepEqual( Stem("vimmelkantig"), "vimmelkant");});
test("vin -> vin", function() {deepEqual( Stem("vin"), "vin");});
test("vinberg -> vinberg", function() {deepEqual( Stem("vinberg"), "vinberg");});
test("vinbuteljen -> vinbutelj", function() {deepEqual( Stem("vinbuteljen"), "vinbutelj");});
test("vinbären -> vinbär", function() {deepEqual( Stem("vinbären"), "vinbär");});
test("vind -> vind", function() {deepEqual( Stem("vind"), "vind");});
test("vindande -> vind", function() {deepEqual( Stem("vindande"), "vind");});
test("vindar -> vind", function() {deepEqual( Stem("vindar"), "vind");});
test("vindarnas -> vind", function() {deepEqual( Stem("vindarnas"), "vind");});
test("vindarne -> vind", function() {deepEqual( Stem("vindarne"), "vind");});
test("vinddrag -> vinddrag", function() {deepEqual( Stem("vinddrag"), "vinddrag");});
test("vinddraget -> vinddraget", function() {deepEqual( Stem("vinddraget"), "vinddraget");});
test("vinden -> vind", function() {deepEqual( Stem("vinden"), "vind");});
test("vindens -> vind", function() {deepEqual( Stem("vindens"), "vind");});
test("vindfläkt -> vindfläk", function() {deepEqual( Stem("vindfläkt"), "vindfläk");});
test("vindil -> vindil", function() {deepEqual( Stem("vindil"), "vindil");});
test("vindlar -> vindl", function() {deepEqual( Stem("vindlar"), "vindl");});
test("vindsdörr -> vindsdörr", function() {deepEqual( Stem("vindsdörr"), "vindsdörr");});
test("vindsdörren -> vindsdörr", function() {deepEqual( Stem("vindsdörren"), "vindsdörr");});
test("vindsgluggen -> vindsglugg", function() {deepEqual( Stem("vindsgluggen"), "vindsglugg");});
test("vindskamma -> vindskamm", function() {deepEqual( Stem("vindskamma"), "vindskamm");});
test("vindskammare -> vindskamm", function() {deepEqual( Stem("vindskammare"), "vindskamm");});
test("vindskammaren -> vindskamm", function() {deepEqual( Stem("vindskammaren"), "vindskamm");});
test("vindskupa -> vindskup", function() {deepEqual( Stem("vindskupa"), "vindskup");});
test("vindskupans -> vindskupan", function() {deepEqual( Stem("vindskupans"), "vindskupan");});
test("vindslitet -> vindslitet", function() {deepEqual( Stem("vindslitet"), "vindslitet");});
test("vindsrummet -> vindsrummet", function() {deepEqual( Stem("vindsrummet"), "vindsrummet");});
test("vindstilla -> vindstill", function() {deepEqual( Stem("vindstilla"), "vindstill");});
test("vindstrappan -> vindstrappan", function() {deepEqual( Stem("vindstrappan"), "vindstrappan");});
test("vindstöt -> vindstöt", function() {deepEqual( Stem("vindstöt"), "vindstöt");});
test("vinens -> vin", function() {deepEqual( Stem("vinens"), "vin");});
test("viner -> vin", function() {deepEqual( Stem("viner"), "vin");});
test("vinet -> vinet", function() {deepEqual( Stem("vinet"), "vinet");});
test("vinets -> vinet", function() {deepEqual( Stem("vinets"), "vinet");});
test("vinflaskan -> vinflaskan", function() {deepEqual( Stem("vinflaskan"), "vinflaskan");});
test("ving -> ving", function() {deepEqual( Stem("ving"), "ving");});
test("vingar -> ving", function() {deepEqual( Stem("vingar"), "ving");});
test("vingarna -> ving", function() {deepEqual( Stem("vingarna"), "ving");});
test("vingarnas -> ving", function() {deepEqual( Stem("vingarnas"), "ving");});
test("vingarne -> ving", function() {deepEqual( Stem("vingarne"), "ving");});
test("vingars -> vingar", function() {deepEqual( Stem("vingars"), "vingar");});
test("vingen -> ving", function() {deepEqual( Stem("vingen"), "ving");});
test("vinglade -> vingl", function() {deepEqual( Stem("vinglade"), "vingl");});
test("vingslag -> vingslag", function() {deepEqual( Stem("vingslag"), "vingslag");});
test("vingsus -> vingsus", function() {deepEqual( Stem("vingsus"), "vingsus");});
test("vinhandeln -> vinhandeln", function() {deepEqual( Stem("vinhandeln"), "vinhandeln");});
test("vink -> vink", function() {deepEqual( Stem("vink"), "vink");});
test("vinka -> vink", function() {deepEqual( Stem("vinka"), "vink");});
test("vinkade -> vink", function() {deepEqual( Stem("vinkade"), "vink");});
test("vinkades -> vink", function() {deepEqual( Stem("vinkades"), "vink");});
test("vinkande -> vink", function() {deepEqual( Stem("vinkande"), "vink");});
test("vinkar -> vink", function() {deepEqual( Stem("vinkar"), "vink");});
test("vinkat -> vink", function() {deepEqual( Stem("vinkat"), "vink");});
test("vinkel -> vinkel", function() {deepEqual( Stem("vinkel"), "vinkel");});
test("vinkeln -> vinkeln", function() {deepEqual( Stem("vinkeln"), "vinkeln");});
test("vinken -> vink", function() {deepEqual( Stem("vinken"), "vink");});
test("vinklar -> vinkl", function() {deepEqual( Stem("vinklar"), "vinkl");});
test("vinklarna -> vinkl", function() {deepEqual( Stem("vinklarna"), "vinkl");});
test("vinkning -> vinkning", function() {deepEqual( Stem("vinkning"), "vinkning");});
test("vinlistan -> vinlistan", function() {deepEqual( Stem("vinlistan"), "vinlistan");});
test("vinn -> vinn", function() {deepEqual( Stem("vinn"), "vinn");});
test("vinna -> vinn", function() {deepEqual( Stem("vinna"), "vinn");});
test("vinnas -> vinn", function() {deepEqual( Stem("vinnas"), "vinn");});
test("vinner -> vinn", function() {deepEqual( Stem("vinner"), "vinn");});
test("vinning -> vinning", function() {deepEqual( Stem("vinning"), "vinning");});
test("vinnlaggandet -> vinnlagg", function() {deepEqual( Stem("vinnlaggandet"), "vinnlagg");});
test("vinslankar -> vinslank", function() {deepEqual( Stem("vinslankar"), "vinslank");});
test("vinst -> vinst", function() {deepEqual( Stem("vinst"), "vinst");});
test("vinsten -> vinst", function() {deepEqual( Stem("vinsten"), "vinst");});
test("vinstgivandc -> vinstgivandc", function() {deepEqual( Stem("vinstgivandc"), "vinstgivandc");});
test("vinter -> vint", function() {deepEqual( Stem("vinter"), "vint");});
test("vinteraftnarna -> vinteraftn", function() {deepEqual( Stem("vinteraftnarna"), "vinteraftn");});
test("vintergatans -> vintergatan", function() {deepEqual( Stem("vintergatans"), "vintergatan");});
test("vinterhvila -> vinterhvil", function() {deepEqual( Stem("vinterhvila"), "vinterhvil");});
test("vinterhvilan -> vinterhvilan", function() {deepEqual( Stem("vinterhvilan"), "vinterhvilan");});
test("vinterkusen -> vinterkus", function() {deepEqual( Stem("vinterkusen"), "vinterkus");});
test("vinterkväll -> vinterkväll", function() {deepEqual( Stem("vinterkväll"), "vinterkväll");});
test("vinterkvällar -> vinterkväll", function() {deepEqual( Stem("vinterkvällar"), "vinterkväll");});
test("vinterlig -> vinter", function() {deepEqual( Stem("vinterlig"), "vinter");});
test("vinterliggare -> vinterligg", function() {deepEqual( Stem("vinterliggare"), "vinterligg");});
test("vintermat -> vinterm", function() {deepEqual( Stem("vintermat"), "vinterm");});
test("vintermånaderna -> vintermånad", function() {deepEqual( Stem("vintermånaderna"), "vintermånad");});
test("vintern -> vint", function() {deepEqual( Stem("vintern"), "vint");});
test("vinternatt -> vinternat", function() {deepEqual( Stem("vinternatt"), "vinternat");});
test("vinterns -> vint", function() {deepEqual( Stem("vinterns"), "vint");});
test("vinterorgel -> vinterorgel", function() {deepEqual( Stem("vinterorgel"), "vinterorgel");});
test("vinterqvarter -> vinterqvart", function() {deepEqual( Stem("vinterqvarter"), "vinterqvart");});
test("vinterresa -> vinterres", function() {deepEqual( Stem("vinterresa"), "vinterres");});
test("vinterskymning -> vinterskymning", function() {deepEqual( Stem("vinterskymning"), "vinterskymning");});
test("vintersnön -> vintersnön", function() {deepEqual( Stem("vintersnön"), "vintersnön");});
test("vintertiden -> vintertid", function() {deepEqual( Stem("vintertiden"), "vintertid");});
test("vintervärld -> vintervärld", function() {deepEqual( Stem("vintervärld"), "vintervärld");});
test("vintrar -> vintr", function() {deepEqual( Stem("vintrar"), "vintr");});
test("vintrarna -> vintr", function() {deepEqual( Stem("vintrarna"), "vintr");});
test("vintras -> vintr", function() {deepEqual( Stem("vintras"), "vintr");});
test("vintriga -> vintr", function() {deepEqual( Stem("vintriga"), "vintr");});
test("vintrigt -> vintr", function() {deepEqual( Stem("vintrigt"), "vintr");});
test("viola -> viol", function() {deepEqual( Stem("viola"), "viol");});
test("violas -> viol", function() {deepEqual( Stem("violas"), "viol");});
test("violbrun -> violbrun", function() {deepEqual( Stem("violbrun"), "violbrun");});
test("viole -> viol", function() {deepEqual( Stem("viole"), "viol");});
test("violer -> viol", function() {deepEqual( Stem("violer"), "viol");});
test("violerna -> viol", function() {deepEqual( Stem("violerna"), "viol");});
test("violernas -> viol", function() {deepEqual( Stem("violernas"), "viol");});
test("violett -> violet", function() {deepEqual( Stem("violett"), "violet");});
test("violetta -> violet", function() {deepEqual( Stem("violetta"), "violet");});
test("violiner -> violin", function() {deepEqual( Stem("violiner"), "violin");});
test("violoncell -> violoncell", function() {deepEqual( Stem("violoncell"), "violoncell");});
test("vippade -> vipp", function() {deepEqual( Stem("vippade"), "vipp");});
test("vippstjärten -> vippstjärt", function() {deepEqual( Stem("vippstjärten"), "vippstjärt");});
test("vips -> vip", function() {deepEqual( Stem("vips"), "vip");});
test("vira -> vir", function() {deepEqual( Stem("vira"), "vir");});
test("virade -> vir", function() {deepEqual( Stem("virade"), "vir");});
test("virriga -> virr", function() {deepEqual( Stem("virriga"), "virr");});
test("virrvarr -> virrvarr", function() {deepEqual( Stem("virrvarr"), "virrvarr");});
test("virvel -> virvel", function() {deepEqual( Stem("virvel"), "virvel");});
test("virvlade -> virvl", function() {deepEqual( Stem("virvlade"), "virvl");});
test("virvlande -> virvl", function() {deepEqual( Stem("virvlande"), "virvl");});
test("virvlar -> virvl", function() {deepEqual( Stem("virvlar"), "virvl");});
test("virvlat -> virvl", function() {deepEqual( Stem("virvlat"), "virvl");});
test("vis -> vis", function() {deepEqual( Stem("vis"), "vis");});
test("visa -> vis", function() {deepEqual( Stem("visa"), "vis");});
test("visad -> vis", function() {deepEqual( Stem("visad"), "vis");});
test("visade -> vis", function() {deepEqual( Stem("visade"), "vis");});
test("visan -> visan", function() {deepEqual( Stem("visan"), "visan");});
test("visande -> vis", function() {deepEqual( Stem("visande"), "vis");});
test("visans -> visan", function() {deepEqual( Stem("visans"), "visan");});
test("visar -> vis", function() {deepEqual( Stem("visar"), "vis");});
test("visare -> vis", function() {deepEqual( Stem("visare"), "vis");});
test("visarna -> vis", function() {deepEqual( Stem("visarna"), "vis");});
test("visat -> vis", function() {deepEqual( Stem("visat"), "vis");});
test("visdom -> visdom", function() {deepEqual( Stem("visdom"), "visdom");});
test("visdomens -> visdom", function() {deepEqual( Stem("visdomens"), "visdom");});
test("visdomstiden -> visdomstid", function() {deepEqual( Stem("visdomstiden"), "visdomstid");});
test("vise -> vis", function() {deepEqual( Stem("vise"), "vis");});
test("vises -> vis", function() {deepEqual( Stem("vises"), "vis");});
test("viset -> viset", function() {deepEqual( Stem("viset"), "viset");});
test("vishet -> vis", function() {deepEqual( Stem("vishet"), "vis");});
test("vishetsspråk -> vishetsspråk", function() {deepEqual( Stem("vishetsspråk"), "vishetsspråk");});
test("vision -> vision", function() {deepEqual( Stem("vision"), "vision");});
test("visit -> visit", function() {deepEqual( Stem("visit"), "visit");});
test("visitationer -> visitation", function() {deepEqual( Stem("visitationer"), "visitation");});
test("visiten -> visit", function() {deepEqual( Stem("visiten"), "visit");});
test("visiter -> visit", function() {deepEqual( Stem("visiter"), "visit");});
test("visiterna -> visit", function() {deepEqual( Stem("visiterna"), "visit");});
test("visitkort -> visitkort", function() {deepEqual( Stem("visitkort"), "visitkort");});
test("visitkortet -> visitkortet", function() {deepEqual( Stem("visitkortet"), "visitkortet");});
test("viska -> visk", function() {deepEqual( Stem("viska"), "visk");});
test("viskadc -> viskadc", function() {deepEqual( Stem("viskadc"), "viskadc");});
test("viskade -> visk", function() {deepEqual( Stem("viskade"), "visk");});
test("viskades -> visk", function() {deepEqual( Stem("viskades"), "visk");});
test("viskande -> visk", function() {deepEqual( Stem("viskande"), "visk");});
test("viskar -> visk", function() {deepEqual( Stem("viskar"), "visk");});
test("viskas -> visk", function() {deepEqual( Stem("viskas"), "visk");});
test("viskat -> visk", function() {deepEqual( Stem("viskat"), "visk");});
test("viskning -> viskning", function() {deepEqual( Stem("viskning"), "viskning");});
test("viskningar -> viskning", function() {deepEqual( Stem("viskningar"), "viskning");});
test("viskningarna -> viskning", function() {deepEqual( Stem("viskningarna"), "viskning");});
test("viskningen -> viskning", function() {deepEqual( Stem("viskningen"), "viskning");});
test("visky -> visky", function() {deepEqual( Stem("visky"), "visky");});
test("visligen -> vis", function() {deepEqual( Stem("visligen"), "vis");});
test("visor -> vis", function() {deepEqual( Stem("visor"), "vis");});
test("visorna -> vis", function() {deepEqual( Stem("visorna"), "vis");});
test("vispa -> visp", function() {deepEqual( Stem("vispa"), "visp");});
test("vispade -> visp", function() {deepEqual( Stem("vispade"), "visp");});
test("vispen -> visp", function() {deepEqual( Stem("vispen"), "visp");});
test("viss -> viss", function() {deepEqual( Stem("viss"), "viss");});
test("vissa -> viss", function() {deepEqual( Stem("vissa"), "viss");});
test("vissen -> viss", function() {deepEqual( Stem("vissen"), "viss");});
test("visserligen -> visser", function() {deepEqual( Stem("visserligen"), "visser");});
test("visset -> visset", function() {deepEqual( Stem("visset"), "visset");});
test("visshet -> viss", function() {deepEqual( Stem("visshet"), "viss");});
test("vissheten -> viss", function() {deepEqual( Stem("vissheten"), "viss");});
test("visslade -> vissl", function() {deepEqual( Stem("visslade"), "vissl");});
test("visslande -> vissl", function() {deepEqual( Stem("visslande"), "vissl");});
test("visslar -> vissl", function() {deepEqual( Stem("visslar"), "vissl");});
test("visslet -> visslet", function() {deepEqual( Stem("visslet"), "visslet");});
test("vissling -> vissling", function() {deepEqual( Stem("vissling"), "vissling");});
test("visslingen -> vissling", function() {deepEqual( Stem("visslingen"), "vissling");});
test("vissna -> vissn", function() {deepEqual( Stem("vissna"), "vissn");});
test("vissnade -> vissn", function() {deepEqual( Stem("vissnade"), "vissn");});
test("vissnande -> vissn", function() {deepEqual( Stem("vissnande"), "vissn");});
test("vissnar -> vissn", function() {deepEqual( Stem("vissnar"), "vissn");});
test("vissnat -> vissn", function() {deepEqual( Stem("vissnat"), "vissn");});
test("vissne -> vissn", function() {deepEqual( Stem("vissne"), "vissn");});
test("visso -> visso", function() {deepEqual( Stem("visso"), "visso");});
test("visst -> visst", function() {deepEqual( Stem("visst"), "visst");});
test("visstc -> visstc", function() {deepEqual( Stem("visstc"), "visstc");});
test("visste -> visst", function() {deepEqual( Stem("visste"), "visst");});
test("vissten -> visst", function() {deepEqual( Stem("vissten"), "visst");});
test("visstump -> visstump", function() {deepEqual( Stem("visstump"), "visstump");});
test("visstumpar -> visstump", function() {deepEqual( Stem("visstumpar"), "visstump");});
test("vist -> vist", function() {deepEqual( Stem("vist"), "vist");});
test("vistades -> vist", function() {deepEqual( Stem("vistades"), "vist");});
test("vistande -> vist", function() {deepEqual( Stem("vistande"), "vist");});
test("vistandet -> vist", function() {deepEqual( Stem("vistandet"), "vist");});
test("vistas -> vist", function() {deepEqual( Stem("vistas"), "vist");});
test("vistats -> vistat", function() {deepEqual( Stem("vistats"), "vistat");});
test("vistelse -> vist", function() {deepEqual( Stem("vistelse"), "vist");});
test("vistelseort -> vistelseort", function() {deepEqual( Stem("vistelseort"), "vistelseort");});
test("visthusdörren -> visthusdörr", function() {deepEqual( Stem("visthusdörren"), "visthusdörr");});
test("visthuset -> visthuset", function() {deepEqual( Stem("visthuset"), "visthuset");});
test("vit -> vit", function() {deepEqual( Stem("vit"), "vit");});
test("vita -> vit", function() {deepEqual( Stem("vita"), "vit");});
test("vitalis -> vitalis", function() {deepEqual( Stem("vitalis"), "vitalis");});
test("vitas -> vit", function() {deepEqual( Stem("vitas"), "vit");});
test("vitdukat -> vitduk", function() {deepEqual( Stem("vitdukat"), "vitduk");});
test("vithet -> vit", function() {deepEqual( Stem("vithet"), "vit");});
test("vithårig -> vithår", function() {deepEqual( Stem("vithårig"), "vithår");});
test("vitklädda -> vitkläd", function() {deepEqual( Stem("vitklädda"), "vitkläd");});
test("vitnade -> vitn", function() {deepEqual( Stem("vitnade"), "vitn");});
test("vitnande -> vitn", function() {deepEqual( Stem("vitnande"), "vitn");});
test("vitprickig -> vitprick", function() {deepEqual( Stem("vitprickig"), "vitprick");});
test("vitriol -> vitriol", function() {deepEqual( Stem("vitriol"), "vitriol");});
test("vitskimrande -> vitskimr", function() {deepEqual( Stem("vitskimrande"), "vitskimr");});
test("vitskurade -> vitskur", function() {deepEqual( Stem("vitskurade"), "vitskur");});
test("vitsord -> vitsord", function() {deepEqual( Stem("vitsord"), "vitsord");});
test("vitt -> vitt", function() {deepEqual( Stem("vitt"), "vitt");});
test("vitten -> vitt", function() {deepEqual( Stem("vitten"), "vitt");});
test("vittert -> vittert", function() {deepEqual( Stem("vittert"), "vittert");});
test("vittna -> vittn", function() {deepEqual( Stem("vittna"), "vittn");});
test("vittnade -> vittn", function() {deepEqual( Stem("vittnade"), "vittn");});
test("vittnande -> vittn", function() {deepEqual( Stem("vittnande"), "vittn");});
test("vittnar -> vittn", function() {deepEqual( Stem("vittnar"), "vittn");});
test("vittne -> vittn", function() {deepEqual( Stem("vittne"), "vittn");});
test("vittnen -> vittn", function() {deepEqual( Stem("vittnen"), "vittn");});
test("vittnesmål -> vittnesmål", function() {deepEqual( Stem("vittnesmål"), "vittnesmål");});
test("vittutseende -> vittutseend", function() {deepEqual( Stem("vittutseende"), "vittutseend");});
test("vivant -> vivant", function() {deepEqual( Stem("vivant"), "vivant");});
test("vivendi -> vivendi", function() {deepEqual( Stem("vivendi"), "vivendi");});
test("vivo -> vivo", function() {deepEqual( Stem("vivo"), "vivo");});
test("vivör -> vivör", function() {deepEqual( Stem("vivör"), "vivör");});
test("vjta -> vjta", function() {deepEqual( Stem("vjta"), "vjta");});
test("vlsst -> vlsst", function() {deepEqual( Stem("vlsst"), "vlsst");});
test("vo -> vo", function() {deepEqual( Stem("vo"), "vo");});
test("voa -> voa", function() {deepEqual( Stem("voa"), "voa");});
test("voila -> voil", function() {deepEqual( Stem("voila"), "voil");});
test("voix -> voix", function() {deepEqual( Stem("voix"), "voix");});
test("voll -> voll", function() {deepEqual( Stem("voll"), "voll");});
test("volym -> volym", function() {deepEqual( Stem("volym"), "volym");});
test("volymer -> volym", function() {deepEqual( Stem("volymer"), "volym");});
test("von -> von", function() {deepEqual( Stem("von"), "von");});
test("vor -> vor", function() {deepEqual( Stem("vor"), "vor");});
test("vorden -> vord", function() {deepEqual( Stem("vorden"), "vord");});
test("vore -> vor", function() {deepEqual( Stem("vore"), "vor");});
test("voro -> voro", function() {deepEqual( Stem("voro"), "voro");});
test("vot -> vot", function() {deepEqual( Stem("vot"), "vot");});
test("vou -> vou", function() {deepEqual( Stem("vou"), "vou");});
test("vous -> vous", function() {deepEqual( Stem("vous"), "vous");});
test("vov -> vov", function() {deepEqual( Stem("vov"), "vov");});
test("vox -> vox", function() {deepEqual( Stem("vox"), "vox");});
test("vpa -> vpa", function() {deepEqual( Stem("vpa"), "vpa");});
test("vraarna -> vraarn", function() {deepEqual( Stem("vraarna"), "vraarn");});
test("vrak -> vrak", function() {deepEqual( Stem("vrak"), "vrak");});
test("vraket -> vraket", function() {deepEqual( Stem("vraket"), "vraket");});
test("vrakplundraren -> vrakplundr", function() {deepEqual( Stem("vrakplundraren"), "vrakplundr");});
test("vred -> vred", function() {deepEqual( Stem("vred"), "vred");});
test("vrede -> vred", function() {deepEqual( Stem("vrede"), "vred");});
test("vreden -> vred", function() {deepEqual( Stem("vreden"), "vred");});
test("vredens -> vred", function() {deepEqual( Stem("vredens"), "vred");});
test("vredgade -> vredg", function() {deepEqual( Stem("vredgade"), "vredg");});
test("vredo -> vredo", function() {deepEqual( Stem("vredo"), "vredo");});
test("vresig -> vres", function() {deepEqual( Stem("vresig"), "vres");});
test("vresigheten -> vres", function() {deepEqual( Stem("vresigheten"), "vres");});
test("vresigt -> vres", function() {deepEqual( Stem("vresigt"), "vres");});
test("vrestörnets -> vrestörnet", function() {deepEqual( Stem("vrestörnets"), "vrestörnet");});
test("vret -> vret", function() {deepEqual( Stem("vret"), "vret");});
test("vreten -> vret", function() {deepEqual( Stem("vreten"), "vret");});
test("vrida -> vrid", function() {deepEqual( Stem("vrida"), "vrid");});
test("vridande -> vrid", function() {deepEqual( Stem("vridande"), "vrid");});
test("vriden -> vrid", function() {deepEqual( Stem("vriden"), "vrid");});
test("vrider -> vrid", function() {deepEqual( Stem("vrider"), "vrid");});
test("vridit -> vridit", function() {deepEqual( Stem("vridit"), "vridit");});
test("vridning -> vridning", function() {deepEqual( Stem("vridning"), "vridning");});
test("vristen -> vrist", function() {deepEqual( Stem("vristen"), "vrist");});
test("vristerna -> vrist", function() {deepEqual( Stem("vristerna"), "vrist");});
test("vroks -> vrok", function() {deepEqual( Stem("vroks"), "vrok");});
test("vräka -> vräk", function() {deepEqual( Stem("vräka"), "vräk");});
test("vräker -> vräk", function() {deepEqual( Stem("vräker"), "vräk");});
test("vräkte -> vräkt", function() {deepEqual( Stem("vräkte"), "vräkt");});
test("vrå -> vrå", function() {deepEqual( Stem("vrå"), "vrå");});
test("vrål -> vrål", function() {deepEqual( Stem("vrål"), "vrål");});
test("vrålade -> vrål", function() {deepEqual( Stem("vrålade"), "vrål");});
test("vrån -> vrån", function() {deepEqual( Stem("vrån"), "vrån");});
test("vrår -> vrår", function() {deepEqual( Stem("vrår"), "vrår");});
test("vudare -> vud", function() {deepEqual( Stem("vudare"), "vud");});
test("vulgär -> vulgär", function() {deepEqual( Stem("vulgär"), "vulgär");});
test("vulgära -> vulgär", function() {deepEqual( Stem("vulgära"), "vulgär");});
test("vulkan -> vulkan", function() {deepEqual( Stem("vulkan"), "vulkan");});
test("vunna -> vunn", function() {deepEqual( Stem("vunna"), "vunn");});
test("vunne -> vunn", function() {deepEqual( Stem("vunne"), "vunn");});
test("vunnet -> vunnet", function() {deepEqual( Stem("vunnet"), "vunnet");});
test("vunnit -> vunnit", function() {deepEqual( Stem("vunnit"), "vunnit");});
test("vurm -> vurm", function() {deepEqual( Stem("vurm"), "vurm");});
test("vurmerier -> vurmeri", function() {deepEqual( Stem("vurmerier"), "vurmeri");});
test("vuxen -> vux", function() {deepEqual( Stem("vuxen"), "vux");});
test("vuxit -> vuxit", function() {deepEqual( Stem("vuxit"), "vuxit");});
test("vuxna -> vuxn", function() {deepEqual( Stem("vuxna"), "vuxn");});
test("vuxne -> vuxn", function() {deepEqual( Stem("vuxne"), "vuxn");});
test("vyssa -> vyss", function() {deepEqual( Stem("vyssa"), "vyss");});
test("vyssjat -> vyssj", function() {deepEqual( Stem("vyssjat"), "vyssj");});
test("vä -> vä", function() {deepEqual( Stem("vä"), "vä");});
test("väck -> väck", function() {deepEqual( Stem("väck"), "väck");});
test("väcka -> väck", function() {deepEqual( Stem("väcka"), "väck");});
test("väckarklocka -> väckarklock", function() {deepEqual( Stem("väckarklocka"), "väckarklock");});
test("väckarklockan -> väckarklockan", function() {deepEqual( Stem("väckarklockan"), "väckarklockan");});
test("väckas -> väck", function() {deepEqual( Stem("väckas"), "väck");});
test("väckelse -> väck", function() {deepEqual( Stem("väckelse"), "väck");});
test("väckelsen -> väck", function() {deepEqual( Stem("väckelsen"), "väck");});
test("väcker -> väck", function() {deepEqual( Stem("väcker"), "väck");});
test("väckes -> väck", function() {deepEqual( Stem("väckes"), "väck");});
test("väckt -> väck", function() {deepEqual( Stem("väckt"), "väck");});
test("väckta -> väck", function() {deepEqual( Stem("väckta"), "väck");});
test("väckte -> väck", function() {deepEqual( Stem("väckte"), "väck");});
test("väcktes -> väck", function() {deepEqual( Stem("väcktes"), "väck");});
test("väder -> väd", function() {deepEqual( Stem("väder"), "väd");});
test("väderbitet -> väderbitet", function() {deepEqual( Stem("väderbitet"), "väderbitet");});
test("väderbitna -> väderbitn", function() {deepEqual( Stem("väderbitna"), "väderbitn");});
test("väderhanen -> väderhan", function() {deepEqual( Stem("väderhanen"), "väderhan");});
test("väderhorn -> väderhorn", function() {deepEqual( Stem("väderhorn"), "väderhorn");});
test("väderil -> väderil", function() {deepEqual( Stem("väderil"), "väderil");});
test("väderkistan -> väderkistan", function() {deepEqual( Stem("väderkistan"), "väderkistan");});
test("väderkorn -> väderkorn", function() {deepEqual( Stem("väderkorn"), "väderkorn");});
test("väderkvarn -> väderkvarn", function() {deepEqual( Stem("väderkvarn"), "väderkvarn");});
test("väderkvarns -> väderkvarn", function() {deepEqual( Stem("väderkvarns"), "väderkvarn");});
test("väderstreck -> väderstreck", function() {deepEqual( Stem("väderstreck"), "väderstreck");});
test("vädja -> vädj", function() {deepEqual( Stem("vädja"), "vädj");});
test("vädjande -> vädj", function() {deepEqual( Stem("vädjande"), "vädj");});
test("vädra -> vädr", function() {deepEqual( Stem("vädra"), "vädr");});
test("vädrade -> vädr", function() {deepEqual( Stem("vädrade"), "vädr");});
test("vädrande -> vädr", function() {deepEqual( Stem("vädrande"), "vädr");});
test("vädrars -> vädrar", function() {deepEqual( Stem("vädrars"), "vädrar");});
test("vädras -> vädr", function() {deepEqual( Stem("vädras"), "vädr");});
test("vädret -> vädret", function() {deepEqual( Stem("vädret"), "vädret");});
test("vädring -> vädring", function() {deepEqual( Stem("vädring"), "vädring");});
test("vädur -> vädur", function() {deepEqual( Stem("vädur"), "vädur");});
test("väfen -> väf", function() {deepEqual( Stem("väfen"), "väf");});
test("väfnaden -> väfnad", function() {deepEqual( Stem("väfnaden"), "väfnad");});
test("väfva -> väfv", function() {deepEqual( Stem("väfva"), "väfv");});
test("väg -> väg", function() {deepEqual( Stem("väg"), "väg");});
test("väga -> väg", function() {deepEqual( Stem("väga"), "väg");});
test("vägar -> väg", function() {deepEqual( Stem("vägar"), "väg");});
test("vägarna -> väg", function() {deepEqual( Stem("vägarna"), "väg");});
test("vägde -> vägd", function() {deepEqual( Stem("vägde"), "vägd");});
test("vägdes -> vägd", function() {deepEqual( Stem("vägdes"), "vägd");});
test("vägen -> väg", function() {deepEqual( Stem("vägen"), "väg");});
test("väger -> väg", function() {deepEqual( Stem("väger"), "väg");});
test("vägfolk -> vägfolk", function() {deepEqual( Stem("vägfolk"), "vägfolk");});
test("vägg -> vägg", function() {deepEqual( Stem("vägg"), "vägg");});
test("väggar -> vägg", function() {deepEqual( Stem("väggar"), "vägg");});
test("väggarna -> vägg", function() {deepEqual( Stem("väggarna"), "vägg");});
test("väggarne -> vägg", function() {deepEqual( Stem("väggarne"), "vägg");});
test("väggen -> vägg", function() {deepEqual( Stem("väggen"), "vägg");});
test("väggfast -> väggf", function() {deepEqual( Stem("väggfast"), "väggf");});
test("väggklockan -> väggklockan", function() {deepEqual( Stem("väggklockan"), "väggklockan");});
test("väggskåp -> väggskåp", function() {deepEqual( Stem("väggskåp"), "väggskåp");});
test("väggskåpet -> väggskåpet", function() {deepEqual( Stem("väggskåpet"), "väggskåpet");});
test("vägkanten -> vägkant", function() {deepEqual( Stem("vägkanten"), "vägkant");});
test("vägnar -> vägn", function() {deepEqual( Stem("vägnar"), "vägn");});
test("vägra -> vägr", function() {deepEqual( Stem("vägra"), "vägr");});
test("vägrade -> vägr", function() {deepEqual( Stem("vägrade"), "vägr");});
test("vägran -> vägran", function() {deepEqual( Stem("vägran"), "vägran");});
test("vägrat -> vägr", function() {deepEqual( Stem("vägrat"), "vägr");});
test("vägt -> vägt", function() {deepEqual( Stem("vägt"), "vägt");});
test("vägvill -> vägvill", function() {deepEqual( Stem("vägvill"), "vägvill");});
test("väi -> väi", function() {deepEqual( Stem("väi"), "väi");});
test("väja -> väj", function() {deepEqual( Stem("väja"), "väj");});
test("väjde -> väjd", function() {deepEqual( Stem("väjde"), "väjd");});
test("väkt -> väkt", function() {deepEqual( Stem("väkt"), "väkt");});
test("väktar -> väkt", function() {deepEqual( Stem("väktar"), "väkt");});
test("väl -> väl", function() {deepEqual( Stem("väl"), "väl");});
test("välan -> välan", function() {deepEqual( Stem("välan"), "välan");});
test("välartad -> välart", function() {deepEqual( Stem("välartad"), "välart");});
test("välbefinnande -> välbefin", function() {deepEqual( Stem("välbefinnande"), "välbefin");});
test("välbehag -> välbehag", function() {deepEqual( Stem("välbehag"), "välbehag");});
test("välbehagligt -> välbehag", function() {deepEqual( Stem("välbehagligt"), "välbehag");});
test("välbehållen -> välbehåll", function() {deepEqual( Stem("välbehållen"), "välbehåll");});
test("välbehövlig -> välbehöv", function() {deepEqual( Stem("välbehövlig"), "välbehöv");});
test("välbekant -> välbekant", function() {deepEqual( Stem("välbekant"), "välbekant");});
test("välbekanta -> välbekant", function() {deepEqual( Stem("välbekanta"), "välbekant");});
test("välbestäld -> välbestäld", function() {deepEqual( Stem("välbestäld"), "välbestäld");});
test("välbetänkta -> välbetänk", function() {deepEqual( Stem("välbetänkta"), "välbetänk");});
test("välbildad -> välbild", function() {deepEqual( Stem("välbildad"), "välbild");});
test("välborstade -> välborst", function() {deepEqual( Stem("välborstade"), "välborst");});
test("välbärgad -> välbärg", function() {deepEqual( Stem("välbärgad"), "välbärg");});
test("välde -> väld", function() {deepEqual( Stem("välde"), "väld");});
test("väldig -> väld", function() {deepEqual( Stem("väldig"), "väld");});
test("väldiga -> väld", function() {deepEqual( Stem("väldiga"), "väld");});
test("väldige -> väld", function() {deepEqual( Stem("väldige"), "väld");});
test("väldigt -> väld", function() {deepEqual( Stem("väldigt"), "väld");});
test("välfägnad -> välfägn", function() {deepEqual( Stem("välfägnad"), "välfägn");});
test("välfärd -> välfärd", function() {deepEqual( Stem("välfärd"), "välfärd");});
test("välförhållande -> välförhåll", function() {deepEqual( Stem("välförhållande"), "välförhåll");});
test("välförståndiga -> välförstånd", function() {deepEqual( Stem("välförståndiga"), "välförstånd");});
test("välgerning -> välgerning", function() {deepEqual( Stem("välgerning"), "välgerning");});
test("välgerningar -> välgerning", function() {deepEqual( Stem("välgerningar"), "välgerning");});
test("välgerningen -> välgerning", function() {deepEqual( Stem("välgerningen"), "välgerning");});
test("välgrundade -> välgrund", function() {deepEqual( Stem("välgrundade"), "välgrund");});
test("välgärning -> välgärning", function() {deepEqual( Stem("välgärning"), "välgärning");});
test("välgång -> välgång", function() {deepEqual( Stem("välgång"), "välgång");});
test("välgörande -> välgör", function() {deepEqual( Stem("välgörande"), "välgör");});
test("välgörare -> välgör", function() {deepEqual( Stem("välgörare"), "välgör");});
test("välgörares -> välgörar", function() {deepEqual( Stem("välgörares"), "välgörar");});
test("välgörenheten -> välgören", function() {deepEqual( Stem("välgörenheten"), "välgören");});
test("välgörenhetsinrättning -> välgörenhetsinrättning", function() {deepEqual( Stem("välgörenhetsinrättning"), "välgörenhetsinrättning");});
test("välja -> välj", function() {deepEqual( Stem("välja"), "välj");});
test("väljande -> välj", function() {deepEqual( Stem("väljande"), "välj");});
test("välklädd -> välkläd", function() {deepEqual( Stem("välklädd"), "välkläd");});
test("välkommande -> välkomm", function() {deepEqual( Stem("välkommande"), "välkomm");});
test("välkommen -> välkomm", function() {deepEqual( Stem("välkommen"), "välkomm");});
test("välkomna -> välkomn", function() {deepEqual( Stem("välkomna"), "välkomn");});
test("välkomnade -> välkomn", function() {deepEqual( Stem("välkomnade"), "välkomn");});
test("välkomnande -> välkomn", function() {deepEqual( Stem("välkomnande"), "välkomn");});
test("välkänd -> välkänd", function() {deepEqual( Stem("välkänd"), "välkänd");});
test("välkända -> välkänd", function() {deepEqual( Stem("välkända"), "välkänd");});
test("väll -> väll", function() {deepEqual( Stem("väll"), "väll");});
test("välla -> väll", function() {deepEqual( Stem("välla"), "väll");});
test("vällagade -> vällag", function() {deepEqual( Stem("vällagade"), "vällag");});
test("vällde -> välld", function() {deepEqual( Stem("vällde"), "välld");});
test("välling -> välling", function() {deepEqual( Stem("välling"), "välling");});
test("vällingen -> välling", function() {deepEqual( Stem("vällingen"), "välling");});
test("välljudande -> välljud", function() {deepEqual( Stem("välljudande"), "välljud");});
test("vällukt -> välluk", function() {deepEqual( Stem("vällukt"), "välluk");});
test("vällust -> vällust", function() {deepEqual( Stem("vällust"), "vällust");});
test("vällusten -> vällust", function() {deepEqual( Stem("vällusten"), "vällust");});
test("vällustens -> vällust", function() {deepEqual( Stem("vällustens"), "vällust");});
test("välmanikurefade -> välmanikuref", function() {deepEqual( Stem("välmanikurefade"), "välmanikuref");});
test("välmanikurerade -> välmanikurer", function() {deepEqual( Stem("välmanikurerade"), "välmanikurer");});
test("välmenade -> välmen", function() {deepEqual( Stem("välmenade"), "välmen");});
test("välmenande -> välmen", function() {deepEqual( Stem("välmenande"), "välmen");});
test("välmening -> välmening", function() {deepEqual( Stem("välmening"), "välmening");});
test("välmeningen -> välmening", function() {deepEqual( Stem("välmeningen"), "välmening");});
test("välmenings -> välmening", function() {deepEqual( Stem("välmenings"), "välmening");});
test("välment -> välment", function() {deepEqual( Stem("välment"), "välment");});
test("välmenta -> välment", function() {deepEqual( Stem("välmenta"), "välment");});
test("välmående -> välmåend", function() {deepEqual( Stem("välmående"), "välmåend");});
test("välmåga -> välmåg", function() {deepEqual( Stem("välmåga"), "välmåg");});
test("välsigna -> välsign", function() {deepEqual( Stem("välsigna"), "välsign");});
test("välsignad -> välsign", function() {deepEqual( Stem("välsignad"), "välsign");});
test("välsignade -> välsign", function() {deepEqual( Stem("välsignade"), "välsign");});
test("välsignande -> välsign", function() {deepEqual( Stem("välsignande"), "välsign");});
test("välsignar -> välsign", function() {deepEqual( Stem("välsignar"), "välsign");});
test("välsignat -> välsign", function() {deepEqual( Stem("välsignat"), "välsign");});
test("välsigne -> välsign", function() {deepEqual( Stem("välsigne"), "välsign");});
test("välsignelse -> välsign", function() {deepEqual( Stem("välsignelse"), "välsign");});
test("välsignelsen -> välsign", function() {deepEqual( Stem("välsignelsen"), "välsign");});
test("välstånd -> välstånd", function() {deepEqual( Stem("välstånd"), "välstånd");});
test("välståndet -> välståndet", function() {deepEqual( Stem("välståndet"), "välståndet");});
test("vält -> vält", function() {deepEqual( Stem("vält"), "vält");});
test("välta -> vält", function() {deepEqual( Stem("välta"), "vält");});
test("vältalare -> vältal", function() {deepEqual( Stem("vältalare"), "vältal");});
test("vältalig -> välta", function() {deepEqual( Stem("vältalig"), "välta");});
test("vältaliga -> välta", function() {deepEqual( Stem("vältaliga"), "välta");});
test("vältalighet -> välta", function() {deepEqual( Stem("vältalighet"), "välta");});
test("vältra -> vältr", function() {deepEqual( Stem("vältra"), "vältr");});
test("vältrade -> vältr", function() {deepEqual( Stem("vältrade"), "vältr");});
test("vältrat -> vältr", function() {deepEqual( Stem("vältrat"), "vältr");});
test("vältänkande -> vältänk", function() {deepEqual( Stem("vältänkande"), "vältänk");});
test("välva -> välv", function() {deepEqual( Stem("välva"), "välv");});
test("välvand -> välvand", function() {deepEqual( Stem("välvand"), "välvand");});
test("välvda -> välvd", function() {deepEqual( Stem("välvda"), "välvd");});
test("välvde -> välvd", function() {deepEqual( Stem("välvde"), "välvd");});
test("välvilja -> välvilj", function() {deepEqual( Stem("välvilja"), "välvilj");});
test("välviljans -> välviljan", function() {deepEqual( Stem("välviljans"), "välviljan");});
test("välvillig -> välvil", function() {deepEqual( Stem("välvillig"), "välvil");});
test("välvilliga -> välvil", function() {deepEqual( Stem("välvilliga"), "välvil");});
test("välvilligt -> välvil", function() {deepEqual( Stem("välvilligt"), "välvil");});
test("välvt -> välvt", function() {deepEqual( Stem("välvt"), "välvt");});
test("välvägnad -> välvägn", function() {deepEqual( Stem("välvägnad"), "välvägn");});
test("välväxt -> välväxt", function() {deepEqual( Stem("välväxt"), "välväxt");});
test("väm -> väm", function() {deepEqual( Stem("väm"), "väm");});
test("vämjelse -> vämj", function() {deepEqual( Stem("vämjelse"), "vämj");});
test("vämjelsen -> vämj", function() {deepEqual( Stem("vämjelsen"), "vämj");});
test("vän -> vän", function() {deepEqual( Stem("vän"), "vän");});
test("vänd -> vänd", function() {deepEqual( Stem("vänd"), "vänd");});
test("vända -> vänd", function() {deepEqual( Stem("vända"), "vänd");});
test("vändande -> vänd", function() {deepEqual( Stem("vändande"), "vänd");});
test("vände -> vänd", function() {deepEqual( Stem("vände"), "vänd");});
test("vänder -> vänd", function() {deepEqual( Stem("vänder"), "vänd");});
test("vändes -> vänd", function() {deepEqual( Stem("vändes"), "vänd");});
test("vändning -> vändning", function() {deepEqual( Stem("vändning"), "vändning");});
test("vändningar -> vändning", function() {deepEqual( Stem("vändningar"), "vändning");});
test("vändningen -> vändning", function() {deepEqual( Stem("vändningen"), "vändning");});
test("vändpunkten -> vändpunk", function() {deepEqual( Stem("vändpunkten"), "vändpunk");});
test("vändt -> vänd", function() {deepEqual( Stem("vändt"), "vänd");});
test("vänfasta -> vänfast", function() {deepEqual( Stem("vänfasta"), "vänfast");});
test("väninna -> vänin", function() {deepEqual( Stem("väninna"), "vänin");});
test("väninnas -> vänin", function() {deepEqual( Stem("väninnas"), "vänin");});
test("väninnor -> vänin", function() {deepEqual( Stem("väninnor"), "vänin");});
test("vänja -> vänj", function() {deepEqual( Stem("vänja"), "vänj");});
test("vänjer -> vänj", function() {deepEqual( Stem("vänjer"), "vänj");});
test("vänlig -> vän", function() {deepEqual( Stem("vänlig"), "vän");});
test("vänliga -> vän", function() {deepEqual( Stem("vänliga"), "vän");});
test("vänligare -> vän", function() {deepEqual( Stem("vänligare"), "vän");});
test("vänligaste -> vän", function() {deepEqual( Stem("vänligaste"), "vän");});
test("vänlige -> vän", function() {deepEqual( Stem("vänlige"), "vän");});
test("vänlighet -> vän", function() {deepEqual( Stem("vänlighet"), "vän");});
test("vänligheten -> vän", function() {deepEqual( Stem("vänligheten"), "vän");});
test("vänligt -> vän", function() {deepEqual( Stem("vänligt"), "vän");});
test("vännen -> vänn", function() {deepEqual( Stem("vännen"), "vänn");});
test("vännens -> vänn", function() {deepEqual( Stem("vännens"), "vänn");});
test("vänner -> vänn", function() {deepEqual( Stem("vänner"), "vänn");});
test("vännerna -> vänn", function() {deepEqual( Stem("vännerna"), "vänn");});
test("vännernas -> vänn", function() {deepEqual( Stem("vännernas"), "vänn");});
test("vänners -> vänner", function() {deepEqual( Stem("vänners"), "vänner");});
test("väns -> vän", function() {deepEqual( Stem("väns"), "vän");});
test("vänskap -> vänskap", function() {deepEqual( Stem("vänskap"), "vänskap");});
test("vänskapens -> vänskap", function() {deepEqual( Stem("vänskapens"), "vänskap");});
test("vänskaplig -> vänskap", function() {deepEqual( Stem("vänskaplig"), "vänskap");});
test("vänskapliga -> vänskap", function() {deepEqual( Stem("vänskapliga"), "vänskap");});
test("vänskapligaste -> vänskap", function() {deepEqual( Stem("vänskapligaste"), "vänskap");});
test("vänskapligt -> vänskap", function() {deepEqual( Stem("vänskapligt"), "vänskap");});
test("vänskaps -> vänskap", function() {deepEqual( Stem("vänskaps"), "vänskap");});
test("vänskapsbefattning -> vänskapsbefattning", function() {deepEqual( Stem("vänskapsbefattning"), "vänskapsbefattning");});
test("vänskapsfulla -> vänskapsfull", function() {deepEqual( Stem("vänskapsfulla"), "vänskapsfull");});
test("vänskapsfullt -> vänskapsfull", function() {deepEqual( Stem("vänskapsfullt"), "vänskapsfull");});
test("vänskapsförbindelse -> vänskapsförbind", function() {deepEqual( Stem("vänskapsförbindelse"), "vänskapsförbind");});
test("vänskapsförhållande -> vänskapsförhåll", function() {deepEqual( Stem("vänskapsförhållande"), "vänskapsförhåll");});
test("vänskapstjänsten -> vänskapstjänst", function() {deepEqual( Stem("vänskapstjänsten"), "vänskapstjänst");});
test("vänster -> vänst", function() {deepEqual( Stem("vänster"), "vänst");});
test("vänstra -> vänstr", function() {deepEqual( Stem("vänstra"), "vänstr");});
test("vänt -> vänt", function() {deepEqual( Stem("vänt"), "vänt");});
test("vänta -> vänt", function() {deepEqual( Stem("vänta"), "vänt");});
test("väntade -> vänt", function() {deepEqual( Stem("väntade"), "vänt");});
test("väntades -> vänt", function() {deepEqual( Stem("väntades"), "vänt");});
test("väntan -> väntan", function() {deepEqual( Stem("väntan"), "väntan");});
test("väntande -> vänt", function() {deepEqual( Stem("väntande"), "vänt");});
test("väntans -> väntan", function() {deepEqual( Stem("väntans"), "väntan");});
test("väntar -> vänt", function() {deepEqual( Stem("väntar"), "vänt");});
test("väntat -> vänt", function() {deepEqual( Stem("väntat"), "vänt");});
test("väntetiden -> väntetid", function() {deepEqual( Stem("väntetiden"), "väntetid");});
test("väntjenst -> väntjenst", function() {deepEqual( Stem("väntjenst"), "väntjenst");});
test("väntpengar -> väntpeng", function() {deepEqual( Stem("väntpengar"), "väntpeng");});
test("väntrummet -> väntrummet", function() {deepEqual( Stem("väntrummet"), "väntrummet");});
test("vär -> vär", function() {deepEqual( Stem("vär"), "vär");});
test("värd -> värd", function() {deepEqual( Stem("värd"), "värd");});
test("värda -> värd", function() {deepEqual( Stem("värda"), "värd");});
test("värdat -> värd", function() {deepEqual( Stem("värdat"), "värd");});
test("värde -> värd", function() {deepEqual( Stem("värde"), "värd");});
test("värdefull -> värdefull", function() {deepEqual( Stem("värdefull"), "värdefull");});
test("värdefulla -> värdefull", function() {deepEqual( Stem("värdefulla"), "värdefull");});
test("värdefullare -> värdefull", function() {deepEqual( Stem("värdefullare"), "värdefull");});
test("värdelös -> värdelös", function() {deepEqual( Stem("värdelös"), "värdelös");});
test("värdelöst -> värdelös", function() {deepEqual( Stem("värdelöst"), "värdelös");});
test("värden -> värd", function() {deepEqual( Stem("värden"), "värd");});
test("värdepapper -> värdepapp", function() {deepEqual( Stem("värdepapper"), "värdepapp");});
test("värdera -> värder", function() {deepEqual( Stem("värdera"), "värder");});
test("värderad -> värder", function() {deepEqual( Stem("värderad"), "värder");});
test("värderade -> värder", function() {deepEqual( Stem("värderade"), "värder");});
test("värderar -> värder", function() {deepEqual( Stem("värderar"), "värder");});
test("värdet -> värdet", function() {deepEqual( Stem("värdet"), "värdet");});
test("värdfolket -> värdfolket", function() {deepEqual( Stem("värdfolket"), "värdfolket");});
test("värdig -> värd", function() {deepEqual( Stem("värdig"), "värd");});
test("värdiga -> värd", function() {deepEqual( Stem("värdiga"), "värd");});
test("värdige -> värd", function() {deepEqual( Stem("värdige"), "värd");});
test("värdighet -> värd", function() {deepEqual( Stem("värdighet"), "värd");});
test("värdigllet -> värdigllet", function() {deepEqual( Stem("värdigllet"), "värdigllet");});
test("värdigt -> värd", function() {deepEqual( Stem("värdigt"), "värd");});
test("värdinna -> värdin", function() {deepEqual( Stem("värdinna"), "värdin");});
test("värdinnan -> värdinnan", function() {deepEqual( Stem("värdinnan"), "värdinnan");});
test("värdinnans -> värdinnan", function() {deepEqual( Stem("värdinnans"), "värdinnan");});
test("värdshus -> värdshus", function() {deepEqual( Stem("värdshus"), "värdshus");});
test("värdshusen -> värdshus", function() {deepEqual( Stem("värdshusen"), "värdshus");});
test("värdshuset -> värdshuset", function() {deepEqual( Stem("värdshuset"), "värdshuset");});
test("värdskapet -> värdskapet", function() {deepEqual( Stem("värdskapet"), "värdskapet");});
test("värdslig -> värds", function() {deepEqual( Stem("värdslig"), "värds");});
test("värdt -> värd", function() {deepEqual( Stem("värdt"), "värd");});
test("värja -> värj", function() {deepEqual( Stem("värja"), "värj");});
test("värjan -> värjan", function() {deepEqual( Stem("värjan"), "värjan");});
test("värjde -> värjd", function() {deepEqual( Stem("värjde"), "värjd");});
test("värk -> värk", function() {deepEqual( Stem("värk"), "värk");});
test("värka -> värk", function() {deepEqual( Stem("värka"), "värk");});
test("värkarna -> värk", function() {deepEqual( Stem("värkarna"), "värk");});
test("värken -> värk", function() {deepEqual( Stem("värken"), "värk");});
test("värkte -> värk", function() {deepEqual( Stem("värkte"), "värk");});
test("värld -> värld", function() {deepEqual( Stem("värld"), "värld");});
test("världarna -> värld", function() {deepEqual( Stem("världarna"), "värld");});
test("världarnas -> värld", function() {deepEqual( Stem("världarnas"), "värld");});
test("världen -> värld", function() {deepEqual( Stem("världen"), "värld");});
test("världenes -> världen", function() {deepEqual( Stem("världenes"), "världen");});
test("världens -> värld", function() {deepEqual( Stem("världens"), "värld");});
test("världsberömdhet -> världsberömd", function() {deepEqual( Stem("världsberömdhet"), "världsberömd");});
test("världshaven -> världshav", function() {deepEqual( Stem("världshaven"), "världshav");});
test("världshistoria -> världshistori", function() {deepEqual( Stem("världshistoria"), "världshistori");});
test("världshistoriens -> världshistori", function() {deepEqual( Stem("världshistoriens"), "världshistori");});
test("världslig -> världs", function() {deepEqual( Stem("världslig"), "världs");});
test("världsliga -> världs", function() {deepEqual( Stem("världsliga"), "världs");});
test("världslighet -> världs", function() {deepEqual( Stem("världslighet"), "världs");});
test("världsmannens -> världsman", function() {deepEqual( Stem("världsmannens"), "världsman");});
test("världsmaskineriet -> världsmaskineriet", function() {deepEqual( Stem("världsmaskineriet"), "världsmaskineriet");});
test("världsmedborgaren -> världsmedborg", function() {deepEqual( Stem("världsmedborgaren"), "världsmedborg");});
test("världsordningen -> världsordning", function() {deepEqual( Stem("världsordningen"), "världsordning");});
test("världsvimlet -> världsvimlet", function() {deepEqual( Stem("världsvimlet"), "världsvimlet");});
test("världsåskådning -> världsåskådning", function() {deepEqual( Stem("världsåskådning"), "världsåskådning");});
test("värma -> värm", function() {deepEqual( Stem("värma"), "värm");});
test("värmande -> värm", function() {deepEqual( Stem("värmande"), "värm");});
test("värmas -> värm", function() {deepEqual( Stem("värmas"), "värm");});
test("värmc -> värmc", function() {deepEqual( Stem("värmc"), "värmc");});
test("värmde -> värmd", function() {deepEqual( Stem("värmde"), "värmd");});
test("värmdes -> värmd", function() {deepEqual( Stem("värmdes"), "värmd");});
test("värme -> värm", function() {deepEqual( Stem("värme"), "värm");});
test("värmen -> värm", function() {deepEqual( Stem("värmen"), "värm");});
test("värmens -> värm", function() {deepEqual( Stem("värmens"), "värm");});
test("värmer -> värm", function() {deepEqual( Stem("värmer"), "värm");});
test("värmt -> värmt", function() {deepEqual( Stem("värmt"), "värmt");});
test("värn -> värn", function() {deepEqual( Stem("värn"), "värn");});
test("värna -> värn", function() {deepEqual( Stem("värna"), "värn");});
test("värnande -> värn", function() {deepEqual( Stem("värnande"), "värn");});
test("värnlösa -> värnlös", function() {deepEqual( Stem("värnlösa"), "värnlös");});
test("värr -> värr", function() {deepEqual( Stem("värr"), "värr");});
test("värre -> värr", function() {deepEqual( Stem("värre"), "värr");});
test("värst -> värst", function() {deepEqual( Stem("värst"), "värst");});
test("värsta -> värst", function() {deepEqual( Stem("värsta"), "värst");});
test("värt -> värt", function() {deepEqual( Stem("värt"), "värt");});
test("värv -> värv", function() {deepEqual( Stem("värv"), "värv");});
test("värvar -> värv", function() {deepEqual( Stem("värvar"), "värv");});
test("värvas -> värv", function() {deepEqual( Stem("värvas"), "värv");});
test("väsande -> väs", function() {deepEqual( Stem("väsande"), "väs");});
test("väsen -> väs", function() {deepEqual( Stem("väsen"), "väs");});
test("väsende -> väsend", function() {deepEqual( Stem("väsende"), "väsend");});
test("väsendet -> väsendet", function() {deepEqual( Stem("väsendet"), "väsendet");});
test("väsens -> väs", function() {deepEqual( Stem("väsens"), "väs");});
test("väsentlig -> väsent", function() {deepEqual( Stem("väsentlig"), "väsent");});
test("väsentliga -> väsent", function() {deepEqual( Stem("väsentliga"), "väsent");});
test("väsentligen -> väsent", function() {deepEqual( Stem("väsentligen"), "väsent");});
test("väsentligt -> väsent", function() {deepEqual( Stem("väsentligt"), "väsent");});
test("väska -> väsk", function() {deepEqual( Stem("väska"), "väsk");});
test("väskan -> väskan", function() {deepEqual( Stem("väskan"), "väskan");});
test("väsnades -> väsn", function() {deepEqual( Stem("väsnades"), "väsn");});
test("vässade -> väss", function() {deepEqual( Stem("vässade"), "väss");});
test("väst -> väst", function() {deepEqual( Stem("väst"), "väst");});
test("västar -> väst", function() {deepEqual( Stem("västar"), "väst");});
test("väste -> väst", function() {deepEqual( Stem("väste"), "väst");});
test("västen -> väst", function() {deepEqual( Stem("västen"), "väst");});
test("väster -> väst", function() {deepEqual( Stem("väster"), "väst");});
test("västergötland -> västergötland", function() {deepEqual( Stem("västergötland"), "västergötland");});
test("västerns -> väst", function() {deepEqual( Stem("västerns"), "väst");});
test("västficka -> västfick", function() {deepEqual( Stem("västficka"), "västfick");});
test("västfickan -> västfickan", function() {deepEqual( Stem("västfickan"), "västfickan");});
test("västgötaturen -> västgötatur", function() {deepEqual( Stem("västgötaturen"), "västgötatur");});
test("västkustprästens -> västkustpräst", function() {deepEqual( Stem("västkustprästens"), "västkustpräst");});
test("väta -> vät", function() {deepEqual( Stem("väta"), "vät");});
test("vätte -> vätt", function() {deepEqual( Stem("vätte"), "vätt");});
test("vättern -> vätt", function() {deepEqual( Stem("vättern"), "vätt");});
test("väva -> väv", function() {deepEqual( Stem("väva"), "väv");});
test("vävarna -> väv", function() {deepEqual( Stem("vävarna"), "väv");});
test("vävd -> vävd", function() {deepEqual( Stem("vävd"), "vävd");});
test("väven -> väv", function() {deepEqual( Stem("väven"), "väv");});
test("väver -> väv", function() {deepEqual( Stem("väver"), "väv");});
test("väverskan -> väverskan", function() {deepEqual( Stem("väverskan"), "väverskan");});
test("vävning -> vävning", function() {deepEqual( Stem("vävning"), "vävning");});
test("vävsalen -> vävsal", function() {deepEqual( Stem("vävsalen"), "vävsal");});
test("vävstol -> vävstol", function() {deepEqual( Stem("vävstol"), "vävstol");});
test("vävstolar -> vävstol", function() {deepEqual( Stem("vävstolar"), "vävstol");});
test("vävstolen -> vävstol", function() {deepEqual( Stem("vävstolen"), "vävstol");});
test("vävstycken -> vävstyck", function() {deepEqual( Stem("vävstycken"), "vävstyck");});
test("vävts -> vävt", function() {deepEqual( Stem("vävts"), "vävt");});
test("växa -> väx", function() {deepEqual( Stem("växa"), "väx");});
test("växande -> väx", function() {deepEqual( Stem("växande"), "väx");});
test("växel -> växel", function() {deepEqual( Stem("växel"), "växel");});
test("växelmyntet -> växelmyntet", function() {deepEqual( Stem("växelmyntet"), "växelmyntet");});
test("växelomsättning -> växelomsättning", function() {deepEqual( Stem("växelomsättning"), "växelomsättning");});
test("växelvis -> växelvis", function() {deepEqual( Stem("växelvis"), "växelvis");});
test("växer -> väx", function() {deepEqual( Stem("växer"), "väx");});
test("växla -> växl", function() {deepEqual( Stem("växla"), "växl");});
test("växlad -> växl", function() {deepEqual( Stem("växlad"), "växl");});
test("växlade -> växl", function() {deepEqual( Stem("växlade"), "växl");});
test("växlades -> växl", function() {deepEqual( Stem("växlades"), "växl");});
test("växlande -> växl", function() {deepEqual( Stem("växlande"), "växl");});
test("växlar -> växl", function() {deepEqual( Stem("växlar"), "växl");});
test("växlat -> växl", function() {deepEqual( Stem("växlat"), "växl");});
test("växlingar -> växling", function() {deepEqual( Stem("växlingar"), "växling");});
test("växt -> växt", function() {deepEqual( Stem("växt"), "växt");});
test("växte -> växt", function() {deepEqual( Stem("växte"), "växt");});
test("växten -> växt", function() {deepEqual( Stem("växten"), "växt");});
test("växter -> växt", function() {deepEqual( Stem("växter"), "växt");});
test("växtslag -> växtslag", function() {deepEqual( Stem("växtslag"), "växtslag");});
test("vådlig -> våd", function() {deepEqual( Stem("vådlig"), "våd");});
test("vådliga -> våd", function() {deepEqual( Stem("vådliga"), "våd");});
test("våg -> våg", function() {deepEqual( Stem("våg"), "våg");});
test("våga -> våg", function() {deepEqual( Stem("våga"), "våg");});
test("vågade -> våg", function() {deepEqual( Stem("vågade"), "våg");});
test("vågar -> våg", function() {deepEqual( Stem("vågar"), "våg");});
test("vågat -> våg", function() {deepEqual( Stem("vågat"), "våg");});
test("vågform -> vågform", function() {deepEqual( Stem("vågform"), "vågform");});
test("våghalsiga -> våghals", function() {deepEqual( Stem("våghalsiga"), "våghals");});
test("vågigt -> våg", function() {deepEqual( Stem("vågigt"), "våg");});
test("vågor -> våg", function() {deepEqual( Stem("vågor"), "våg");});
test("vågorna -> våg", function() {deepEqual( Stem("vågorna"), "våg");});
test("vågornas -> våg", function() {deepEqual( Stem("vågornas"), "våg");});
test("vågsamma -> vågsamm", function() {deepEqual( Stem("vågsamma"), "vågsamm");});
test("vågskalen -> vågskal", function() {deepEqual( Stem("vågskalen"), "vågskal");});
test("vågskålar -> vågskål", function() {deepEqual( Stem("vågskålar"), "vågskål");});
test("vågskålen -> vågskål", function() {deepEqual( Stem("vågskålen"), "vågskål");});
test("vågspel -> vågspel", function() {deepEqual( Stem("vågspel"), "vågspel");});
test("vågstycke -> vågstyck", function() {deepEqual( Stem("vågstycke"), "vågstyck");});
test("våknade -> våkn", function() {deepEqual( Stem("våknade"), "våkn");});
test("våld -> våld", function() {deepEqual( Stem("våld"), "våld");});
test("våldföra -> våldför", function() {deepEqual( Stem("våldföra"), "våldför");});
test("våldsam -> våldsam", function() {deepEqual( Stem("våldsam"), "våldsam");});
test("våldsamma -> våldsamm", function() {deepEqual( Stem("våldsamma"), "våldsamm");});
test("våldsamt -> våldsamt", function() {deepEqual( Stem("våldsamt"), "våldsamt");});
test("våldsmannen -> våldsman", function() {deepEqual( Stem("våldsmannen"), "våldsman");});
test("våldtäkt -> våldtäk", function() {deepEqual( Stem("våldtäkt"), "våldtäk");});
test("vållat -> våll", function() {deepEqual( Stem("vållat"), "våll");});
test("vålnad -> våln", function() {deepEqual( Stem("vålnad"), "våln");});
test("vålnader -> vålnad", function() {deepEqual( Stem("vålnader"), "vålnad");});
test("vånda -> vånd", function() {deepEqual( Stem("vånda"), "vånd");});
test("våndades -> vånd", function() {deepEqual( Stem("våndades"), "vånd");});
test("våndas -> vånd", function() {deepEqual( Stem("våndas"), "vånd");});
test("våning -> våning", function() {deepEqual( Stem("våning"), "våning");});
test("våningar -> våning", function() {deepEqual( Stem("våningar"), "våning");});
test("våningen -> våning", function() {deepEqual( Stem("våningen"), "våning");});
test("vånnar -> vånn", function() {deepEqual( Stem("vånnar"), "vånn");});
test("våpet -> våpet", function() {deepEqual( Stem("våpet"), "våpet");});
test("vår -> vår", function() {deepEqual( Stem("vår"), "vår");});
test("våra -> vår", function() {deepEqual( Stem("våra"), "vår");});
test("vårar -> vår", function() {deepEqual( Stem("vårar"), "vår");});
test("vårarna -> vår", function() {deepEqual( Stem("vårarna"), "vår");});
test("vårars -> vårar", function() {deepEqual( Stem("vårars"), "vårar");});
test("våras -> vår", function() {deepEqual( Stem("våras"), "vår");});
test("vårblommor -> vårblomm", function() {deepEqual( Stem("vårblommor"), "vårblomm");});
test("vårbäcken -> vårbäck", function() {deepEqual( Stem("vårbäcken"), "vårbäck");});
test("vård -> vård", function() {deepEqual( Stem("vård"), "vård");});
test("vårda -> vård", function() {deepEqual( Stem("vårda"), "vård");});
test("vårdad -> vård", function() {deepEqual( Stem("vårdad"), "vård");});
test("vårdade -> vård", function() {deepEqual( Stem("vårdade"), "vård");});
test("vårdai -> vårdai", function() {deepEqual( Stem("vårdai"), "vårdai");});
test("vårdande -> vård", function() {deepEqual( Stem("vårdande"), "vård");});
test("vårdanstalt -> vårdanstalt", function() {deepEqual( Stem("vårdanstalt"), "vårdanstalt");});
test("vårdar -> vård", function() {deepEqual( Stem("vårdar"), "vård");});
test("vårdarinna -> vårdarin", function() {deepEqual( Stem("vårdarinna"), "vårdarin");});
test("vårdarinnans -> vårdarinnan", function() {deepEqual( Stem("vårdarinnans"), "vårdarinnan");});
test("vårdarinnas -> vårdarin", function() {deepEqual( Stem("vårdarinnas"), "vårdarin");});
test("vårdat -> vård", function() {deepEqual( Stem("vårdat"), "vård");});
test("vården -> vård", function() {deepEqual( Stem("vården"), "vård");});
test("vårdman -> vårdman", function() {deepEqual( Stem("vårdman"), "vårdman");});
test("vårdmans -> vårdman", function() {deepEqual( Stem("vårdmans"), "vårdman");});
test("vårdslös -> vårdslös", function() {deepEqual( Stem("vårdslös"), "vårdslös");});
test("vårdslösa -> vårdslös", function() {deepEqual( Stem("vårdslösa"), "vårdslös");});
test("vårdslösad -> vårdslös", function() {deepEqual( Stem("vårdslösad"), "vårdslös");});
test("vårdslösat -> vårdslös", function() {deepEqual( Stem("vårdslösat"), "vårdslös");});
test("vårdslöshet -> vårdslös", function() {deepEqual( Stem("vårdslöshet"), "vårdslös");});
test("vårdslösheten -> vårdslös", function() {deepEqual( Stem("vårdslösheten"), "vårdslös");});
test("vårdslöst -> vårdslös", function() {deepEqual( Stem("vårdslöst"), "vårdslös");});
test("vårdtecken -> vårdteck", function() {deepEqual( Stem("vårdtecken"), "vårdteck");});
test("våren -> vår", function() {deepEqual( Stem("våren"), "vår");});
test("vårens -> vår", function() {deepEqual( Stem("vårens"), "vår");});
test("vårfloder -> vårflod", function() {deepEqual( Stem("vårfloder"), "vårflod");});
test("vårfrusälg -> vårfrusälg", function() {deepEqual( Stem("vårfrusälg"), "vårfrusälg");});
test("vårhimmel -> vårhimmel", function() {deepEqual( Stem("vårhimmel"), "vårhimmel");});
test("vårhimmeln -> vårhimmeln", function() {deepEqual( Stem("vårhimmeln"), "vårhimmeln");});
test("vårkvällar -> vårkväll", function() {deepEqual( Stem("vårkvällar"), "vårkväll");});
test("vårkök -> vårkök", function() {deepEqual( Stem("vårkök"), "vårkök");});
test("vårliga -> vår", function() {deepEqual( Stem("vårliga"), "vår");});
test("vårluften -> vårluft", function() {deepEqual( Stem("vårluften"), "vårluft");});
test("vårlöksgul -> vårlöksgul", function() {deepEqual( Stem("vårlöksgul"), "vårlöksgul");});
test("vårmorgon -> vårmorgon", function() {deepEqual( Stem("vårmorgon"), "vårmorgon");});
test("vårsidan -> vårsidan", function() {deepEqual( Stem("vårsidan"), "vårsidan");});
test("vårskuggor -> vårskugg", function() {deepEqual( Stem("vårskuggor"), "vårskugg");});
test("vårsälg -> vårsälg", function() {deepEqual( Stem("vårsälg"), "vårsälg");});
test("vårt -> vårt", function() {deepEqual( Stem("vårt"), "vårt");});
test("vårtid -> vårtid", function() {deepEqual( Stem("vårtid"), "vårtid");});
test("vårvind -> vårvind", function() {deepEqual( Stem("vårvind"), "vårvind");});
test("våt -> våt", function() {deepEqual( Stem("våt"), "våt");});
test("våta -> våt", function() {deepEqual( Stem("våta"), "våt");});
test("vått -> vått", function() {deepEqual( Stem("vått"), "vått");});
test("vörda -> vörd", function() {deepEqual( Stem("vörda"), "vörd");});
test("vördad -> vörd", function() {deepEqual( Stem("vördad"), "vörd");});
test("vördade -> vörd", function() {deepEqual( Stem("vördade"), "vörd");});
test("vördig -> vörd", function() {deepEqual( Stem("vördig"), "vörd");});
test("vördnad -> vördn", function() {deepEqual( Stem("vördnad"), "vördn");});
test("vördnaden -> vördnad", function() {deepEqual( Stem("vördnaden"), "vördnad");});
test("vördnadsbjudande -> vördnadsbjud", function() {deepEqual( Stem("vördnadsbjudande"), "vördnadsbjud");});
test("vördnadsfull -> vördnadsfull", function() {deepEqual( Stem("vördnadsfull"), "vördnadsfull");});
test("vördnadsfulla -> vördnadsfull", function() {deepEqual( Stem("vördnadsfulla"), "vördnadsfull");});
test("vördnadsfulle -> vördnadsfull", function() {deepEqual( Stem("vördnadsfulle"), "vördnadsfull");});
test("vördsam -> vördsam", function() {deepEqual( Stem("vördsam"), "vördsam");});
test("vörtbrödsskivor -> vörtbrödsskiv", function() {deepEqual( Stem("vörtbrödsskivor"), "vörtbrödsskiv");});
test("vösa -> vös", function() {deepEqual( Stem("vösa"), "vös");});
test("w -> w", function() {deepEqual( Stem("w"), "w");});
test("wagnerian -> wagnerian", function() {deepEqual( Stem("wagnerian"), "wagnerian");});
test("wahl -> wahl", function() {deepEqual( Stem("wahl"), "wahl");});
test("wahlbom -> wahlbom", function() {deepEqual( Stem("wahlbom"), "wahlbom");});
test("wahlboms -> wahlbom", function() {deepEqual( Stem("wahlboms"), "wahlbom");});
test("wahlhom -> wahlhom", function() {deepEqual( Stem("wahlhom"), "wahlhom");});
test("waller -> wall", function() {deepEqual( Stem("waller"), "wall");});
test("wallin -> wallin", function() {deepEqual( Stem("wallin"), "wallin");});
test("wenden -> wend", function() {deepEqual( Stem("wenden"), "wend");});
test("wendens -> wend", function() {deepEqual( Stem("wendens"), "wend");});
test("westervik -> westervik", function() {deepEqual( Stem("westervik"), "westervik");});
test("wette -> wett", function() {deepEqual( Stem("wette"), "wett");});
test("wetterkranz -> wetterkranz", function() {deepEqual( Stem("wetterkranz"), "wetterkranz");});
test("wetterkvist -> wetterkvist", function() {deepEqual( Stem("wetterkvist"), "wetterkvist");});
test("wetterkvists -> wetterkvist", function() {deepEqual( Stem("wetterkvists"), "wetterkvist");});
test("wetzmann -> wetzman", function() {deepEqual( Stem("wetzmann"), "wetzman");});
test("wetzmanns -> wetzman", function() {deepEqual( Stem("wetzmanns"), "wetzman");});
test("whisky -> whisky", function() {deepEqual( Stem("whisky"), "whisky");});
test("whiskytoddar -> whiskytod", function() {deepEqual( Stem("whiskytoddar"), "whiskytod");});
test("wie -> wie", function() {deepEqual( Stem("wie"), "wie");});
test("wien -> wien", function() {deepEqual( Stem("wien"), "wien");});
test("wienervalsen -> wienervals", function() {deepEqual( Stem("wienervalsen"), "wienervals");});
test("wilhelm -> wilhelm", function() {deepEqual( Stem("wilhelm"), "wilhelm");});
test("willblad -> willbl", function() {deepEqual( Stem("willblad"), "willbl");});
test("wille -> will", function() {deepEqual( Stem("wille"), "will");});
test("winblad -> winbl", function() {deepEqual( Stem("winblad"), "winbl");});
test("winblads -> winblad", function() {deepEqual( Stem("winblads"), "winblad");});
test("winters -> winter", function() {deepEqual( Stem("winters"), "winter");});
test("wuhlbom -> wuhlbom", function() {deepEqual( Stem("wuhlbom"), "wuhlbom");});
test("wunderhorn -> wunderhorn", function() {deepEqual( Stem("wunderhorn"), "wunderhorn");});
test("wålbergs -> wålberg", function() {deepEqual( Stem("wålbergs"), "wålberg");});
test("x -> x", function() {deepEqual( Stem("x"), "x");});
test("xerxes -> xerx", function() {deepEqual( Stem("xerxes"), "xerx");});
test("xi -> xi", function() {deepEqual( Stem("xi"), "xi");});
test("xii -> xii", function() {deepEqual( Stem("xii"), "xii");});
test("xiii -> xiii", function() {deepEqual( Stem("xiii"), "xiii");});
test("xiv -> xiv", function() {deepEqual( Stem("xiv"), "xiv");});
test("xix -> xix", function() {deepEqual( Stem("xix"), "xix");});
test("xolvet -> xolvet", function() {deepEqual( Stem("xolvet"), "xolvet");});
test("xv -> xv", function() {deepEqual( Stem("xv"), "xv");});
test("xvi -> xvi", function() {deepEqual( Stem("xvi"), "xvi");});
test("xvii -> xvii", function() {deepEqual( Stem("xvii"), "xvii");});
test("xviii -> xviii", function() {deepEqual( Stem("xviii"), "xviii");});
test("xx -> xx", function() {deepEqual( Stem("xx"), "xx");});
test("xxi -> xxi", function() {deepEqual( Stem("xxi"), "xxi");});
test("xxii -> xxii", function() {deepEqual( Stem("xxii"), "xxii");});
test("xxiii -> xxiii", function() {deepEqual( Stem("xxiii"), "xxiii");});
test("xxiv -> xxiv", function() {deepEqual( Stem("xxiv"), "xxiv");});
test("xxix -> xxix", function() {deepEqual( Stem("xxix"), "xxix");});
test("xxv -> xxv", function() {deepEqual( Stem("xxv"), "xxv");});
test("xxvi -> xxvi", function() {deepEqual( Stem("xxvi"), "xxvi");});
test("xxvii -> xxvii", function() {deepEqual( Stem("xxvii"), "xxvii");});
test("xxviii -> xxviii", function() {deepEqual( Stem("xxviii"), "xxviii");});
test("xxx -> xxx", function() {deepEqual( Stem("xxx"), "xxx");});
test("xxxi -> xxxi", function() {deepEqual( Stem("xxxi"), "xxxi");});
test("xxxii -> xxxii", function() {deepEqual( Stem("xxxii"), "xxxii");});
test("xxxiii -> xxxiii", function() {deepEqual( Stem("xxxiii"), "xxxiii");});
test("y -> y", function() {deepEqual( Stem("y"), "y");});
test("yaket -> yaket", function() {deepEqual( Stem("yaket"), "yaket");});
test("yankees -> yanke", function() {deepEqual( Stem("yankees"), "yanke");});
test("yar -> yar", function() {deepEqual( Stem("yar"), "yar");});
test("yarta -> yart", function() {deepEqual( Stem("yarta"), "yart");});
test("ydre -> ydr", function() {deepEqual( Stem("ydre"), "ydr");});
test("yfdes -> yfd", function() {deepEqual( Stem("yfdes"), "yfd");});
test("yfviga -> yfv", function() {deepEqual( Stem("yfviga"), "yfv");});
test("yktan -> yktan", function() {deepEqual( Stem("yktan"), "yktan");});
test("ylldes -> ylld", function() {deepEqual( Stem("ylldes"), "ylld");});
test("ylle -> yll", function() {deepEqual( Stem("ylle"), "yll");});
test("yllestrumpor -> yllestrump", function() {deepEqual( Stem("yllestrumpor"), "yllestrump");});
test("ympas -> ymp", function() {deepEqual( Stem("ympas"), "ymp");});
test("yngling -> yngling", function() {deepEqual( Stem("yngling"), "yngling");});
test("ynglingar -> yngling", function() {deepEqual( Stem("ynglingar"), "yngling");});
test("ynglingaår -> ynglingaår", function() {deepEqual( Stem("ynglingaår"), "ynglingaår");});
test("ynglingen -> yngling", function() {deepEqual( Stem("ynglingen"), "yngling");});
test("ynglingens -> yngling", function() {deepEqual( Stem("ynglingens"), "yngling");});
test("ynglings -> yngling", function() {deepEqual( Stem("ynglings"), "yngling");});
test("yngre -> yngr", function() {deepEqual( Stem("yngre"), "yngr");});
test("yngs -> yng", function() {deepEqual( Stem("yngs"), "yng");});
test("yngst -> yngst", function() {deepEqual( Stem("yngst"), "yngst");});
test("yngsta -> yngst", function() {deepEqual( Stem("yngsta"), "yngst");});
test("yngste -> yngst", function() {deepEqual( Stem("yngste"), "yngst");});
test("ynk -> ynk", function() {deepEqual( Stem("ynk"), "ynk");});
test("ynklig -> ynk", function() {deepEqual( Stem("ynklig"), "ynk");});
test("ynkliga -> ynk", function() {deepEqual( Stem("ynkliga"), "ynk");});
test("ynkligt -> ynk", function() {deepEqual( Stem("ynkligt"), "ynk");});
test("ynnest -> ynnest", function() {deepEqual( Stem("ynnest"), "ynnest");});
test("ynnestbevis -> ynnestbevis", function() {deepEqual( Stem("ynnestbevis"), "ynnestbevis");});
test("yppa -> ypp", function() {deepEqual( Stem("yppa"), "ypp");});
test("yppat -> ypp", function() {deepEqual( Stem("yppat"), "ypp");});
test("ypperlig -> ypper", function() {deepEqual( Stem("ypperlig"), "ypper");});
test("ypperligt -> ypper", function() {deepEqual( Stem("ypperligt"), "ypper");});
test("yppersta -> ypperst", function() {deepEqual( Stem("yppersta"), "ypperst");});
test("yppig -> ypp", function() {deepEqual( Stem("yppig"), "ypp");});
test("yppigt -> ypp", function() {deepEqual( Stem("yppigt"), "ypp");});
test("ypplyfte -> ypplyft", function() {deepEqual( Stem("ypplyfte"), "ypplyft");});
test("yr -> yr", function() {deepEqual( Stem("yr"), "yr");});
test("yra -> yra", function() {deepEqual( Stem("yra"), "yra");});
test("yrade -> yrad", function() {deepEqual( Stem("yrade"), "yrad");});
test("yrar -> yrar", function() {deepEqual( Stem("yrar"), "yrar");});
test("yraste -> yrast", function() {deepEqual( Stem("yraste"), "yrast");});
test("yrde -> yrd", function() {deepEqual( Stem("yrde"), "yrd");});
test("yrke -> yrk", function() {deepEqual( Stem("yrke"), "yrk");});
test("yrken -> yrk", function() {deepEqual( Stem("yrken"), "yrk");});
test("yrkesförbindlighet -> yrkesförbind", function() {deepEqual( Stem("yrkesförbindlighet"), "yrkesförbind");});
test("yrket -> yrket", function() {deepEqual( Stem("yrket"), "yrket");});
test("yrsel -> yrsel", function() {deepEqual( Stem("yrsel"), "yrsel");});
test("yrseln -> yrseln", function() {deepEqual( Stem("yrseln"), "yrseln");});
test("yrvaken -> yrvak", function() {deepEqual( Stem("yrvaken"), "yrvak");});
test("yrvaket -> yrvaket", function() {deepEqual( Stem("yrvaket"), "yrvaket");});
test("yrvakna -> yrvakn", function() {deepEqual( Stem("yrvakna"), "yrvakn");});
test("ys -> ys", function() {deepEqual( Stem("ys"), "ys");});
test("yt -> yt", function() {deepEqual( Stem("yt"), "yt");});
test("yta -> yta", function() {deepEqual( Stem("yta"), "yta");});
test("ytan -> ytan", function() {deepEqual( Stem("ytan"), "ytan");});
test("ytlig -> ytl", function() {deepEqual( Stem("ytlig"), "ytl");});
test("ytliga -> ytl", function() {deepEqual( Stem("ytliga"), "ytl");});
test("ytligt -> ytl", function() {deepEqual( Stem("ytligt"), "ytl");});
test("ytter -> ytt", function() {deepEqual( Stem("ytter"), "ytt");});
test("ytterkläder -> ytterkläd", function() {deepEqual( Stem("ytterkläder"), "ytterkläd");});
test("ytterliga -> ytter", function() {deepEqual( Stem("ytterliga"), "ytter");});
test("ytterligarc -> ytterligarc", function() {deepEqual( Stem("ytterligarc"), "ytterligarc");});
test("ytterligare -> ytter", function() {deepEqual( Stem("ytterligare"), "ytter");});
test("ytterlighet -> ytter", function() {deepEqual( Stem("ytterlighet"), "ytter");});
test("ytterst -> ytterst", function() {deepEqual( Stem("ytterst"), "ytterst");});
test("yttersta -> ytterst", function() {deepEqual( Stem("yttersta"), "ytterst");});
test("yttra -> yttr", function() {deepEqual( Stem("yttra"), "yttr");});
test("yttrade -> yttr", function() {deepEqual( Stem("yttrade"), "yttr");});
test("yttrades -> yttr", function() {deepEqual( Stem("yttrades"), "yttr");});
test("yttrande -> yttr", function() {deepEqual( Stem("yttrande"), "yttr");});
test("yttranden -> yttr", function() {deepEqual( Stem("yttranden"), "yttr");});
test("yttrandet -> yttr", function() {deepEqual( Stem("yttrandet"), "yttr");});
test("yttrar -> yttr", function() {deepEqual( Stem("yttrar"), "yttr");});
test("yttras -> yttr", function() {deepEqual( Stem("yttras"), "yttr");});
test("yttrat -> yttr", function() {deepEqual( Stem("yttrat"), "yttr");});
test("yttre -> yttr", function() {deepEqual( Stem("yttre"), "yttr");});
test("yttryckte -> yttryck", function() {deepEqual( Stem("yttryckte"), "yttryck");});
test("yuvaste -> yuv", function() {deepEqual( Stem("yuvaste"), "yuv");});
test("yvas -> yvas", function() {deepEqual( Stem("yvas"), "yvas");});
test("yvig -> yvig", function() {deepEqual( Stem("yvig"), "yvig");});
test("yviga -> yvig", function() {deepEqual( Stem("yviga"), "yvig");});
test("yvigt -> yvig", function() {deepEqual( Stem("yvigt"), "yvig");});
test("yxa -> yxa", function() {deepEqual( Stem("yxa"), "yxa");});
test("yände -> yänd", function() {deepEqual( Stem("yände"), "yänd");});
test("yå -> yå", function() {deepEqual( Stem("yå"), "yå");});
test("z -> z", function() {deepEqual( Stem("z"), "z");});
test("zarathustra -> zarathustr", function() {deepEqual( Stem("zarathustra"), "zarathustr");});
test("zolo -> zolo", function() {deepEqual( Stem("zolo"), "zolo");});
test("zuaver -> zuav", function() {deepEqual( Stem("zuaver"), "zuav");});
test("ä -> ä", function() {deepEqual( Stem("ä"), "ä");});
test("äckel -> äckel", function() {deepEqual( Stem("äckel"), "äckel");});
test("äcken -> äck", function() {deepEqual( Stem("äcken"), "äck");});
test("äckliga -> äck", function() {deepEqual( Stem("äckliga"), "äck");});
test("ädel -> ädel", function() {deepEqual( Stem("ädel"), "ädel");});
test("ädelboren -> ädelbor", function() {deepEqual( Stem("ädelboren"), "ädelbor");});
test("ädelmod -> ädelmod", function() {deepEqual( Stem("ädelmod"), "ädelmod");});
test("ädelmodig -> ädelmod", function() {deepEqual( Stem("ädelmodig"), "ädelmod");});
test("ädelstenar -> ädelsten", function() {deepEqual( Stem("ädelstenar"), "ädelsten");});
test("ädelt -> ädelt", function() {deepEqual( Stem("ädelt"), "ädelt");});
test("ädla -> ädl", function() {deepEqual( Stem("ädla"), "ädl");});
test("ädlingarna -> ädling", function() {deepEqual( Stem("ädlingarna"), "ädling");});
test("ädlingen -> ädling", function() {deepEqual( Stem("ädlingen"), "ädling");});
test("äfven -> äfv", function() {deepEqual( Stem("äfven"), "äfv");});
test("äfvensom -> äfvensom", function() {deepEqual( Stem("äfvensom"), "äfvensom");});
test("äfventyr -> äfventyr", function() {deepEqual( Stem("äfventyr"), "äfventyr");});
test("äfventyra -> äfventyr", function() {deepEqual( Stem("äfventyra"), "äfventyr");});
test("äfventyret -> äfventyret", function() {deepEqual( Stem("äfventyret"), "äfventyret");});
test("äga -> äga", function() {deepEqual( Stem("äga"), "äga");});
test("äganderätten -> äganderät", function() {deepEqual( Stem("äganderätten"), "äganderät");});
test("ägare -> ägar", function() {deepEqual( Stem("ägare"), "ägar");});
test("ägaren -> ägar", function() {deepEqual( Stem("ägaren"), "ägar");});
test("ägarens -> ägar", function() {deepEqual( Stem("ägarens"), "ägar");});
test("ägarinna -> ägarin", function() {deepEqual( Stem("ägarinna"), "ägarin");});
test("ägarinnan -> ägarinnan", function() {deepEqual( Stem("ägarinnan"), "ägarinnan");});
test("ägde -> ägd", function() {deepEqual( Stem("ägde"), "ägd");});
test("ägdes -> ägd", function() {deepEqual( Stem("ägdes"), "ägd");});
test("äger -> äger", function() {deepEqual( Stem("äger"), "äger");});
test("ägg -> ägg", function() {deepEqual( Stem("ägg"), "ägg");});
test("ägghyllor -> ägghyll", function() {deepEqual( Stem("ägghyllor"), "ägghyll");});
test("äggklyftorna -> äggklyft", function() {deepEqual( Stem("äggklyftorna"), "äggklyft");});
test("ägna -> ägn", function() {deepEqual( Stem("ägna"), "ägn");});
test("ägnade -> ägn", function() {deepEqual( Stem("ägnade"), "ägn");});
test("ägnades -> ägn", function() {deepEqual( Stem("ägnades"), "ägn");});
test("ägnat -> ägn", function() {deepEqual( Stem("ägnat"), "ägn");});
test("ägo -> ägo", function() {deepEqual( Stem("ägo"), "ägo");});
test("ägodelar -> ägodel", function() {deepEqual( Stem("ägodelar"), "ägodel");});
test("ägor -> ägor", function() {deepEqual( Stem("ägor"), "ägor");});
test("ägorna -> ägorn", function() {deepEqual( Stem("ägorna"), "ägorn");});
test("ägrett -> ägret", function() {deepEqual( Stem("ägrett"), "ägret");});
test("ägt -> ägt", function() {deepEqual( Stem("ägt"), "ägt");});
test("äh -> äh", function() {deepEqual( Stem("äh"), "äh");});
test("äidre -> äidr", function() {deepEqual( Stem("äidre"), "äidr");});
test("äintligen -> äint", function() {deepEqual( Stem("äintligen"), "äint");});
test("äkta -> äkt", function() {deepEqual( Stem("äkta"), "äkt");});
test("äktenskap -> äktenskap", function() {deepEqual( Stem("äktenskap"), "äktenskap");});
test("äktenskapet -> äktenskapet", function() {deepEqual( Stem("äktenskapet"), "äktenskapet");});
test("äktenskapets -> äktenskapet", function() {deepEqual( Stem("äktenskapets"), "äktenskapet");});
test("äktenskapliga -> äktenskap", function() {deepEqual( Stem("äktenskapliga"), "äktenskap");});
test("äktenskapsförbindelse -> äktenskapsförbind", function() {deepEqual( Stem("äktenskapsförbindelse"), "äktenskapsförbind");});
test("äktenskapsskillnad -> äktenskapsskilln", function() {deepEqual( Stem("äktenskapsskillnad"), "äktenskapsskilln");});
test("äl -> äl", function() {deepEqual( Stem("äl"), "äl");});
test("äldre -> äldr", function() {deepEqual( Stem("äldre"), "äldr");});
test("äldsta -> äldst", function() {deepEqual( Stem("äldsta"), "äldst");});
test("äldste -> äldst", function() {deepEqual( Stem("äldste"), "äldst");});
test("älghuvud -> älghuvud", function() {deepEqual( Stem("älghuvud"), "älghuvud");});
test("älghuvudet -> älghuvudet", function() {deepEqual( Stem("älghuvudet"), "älghuvudet");});
test("älsk -> älsk", function() {deepEqual( Stem("älsk"), "älsk");});
test("älska -> älsk", function() {deepEqual( Stem("älska"), "älsk");});
test("älskad -> älsk", function() {deepEqual( Stem("älskad"), "älsk");});
test("älskade -> älsk", function() {deepEqual( Stem("älskade"), "älsk");});
test("älskades -> älsk", function() {deepEqual( Stem("älskades"), "älsk");});
test("älskadt -> älskad", function() {deepEqual( Stem("älskadt"), "älskad");});
test("älskande -> älsk", function() {deepEqual( Stem("älskande"), "älsk");});
test("älskar -> älsk", function() {deepEqual( Stem("älskar"), "älsk");});
test("älskare -> älsk", function() {deepEqual( Stem("älskare"), "älsk");});
test("älskaren -> älsk", function() {deepEqual( Stem("älskaren"), "älsk");});
test("älskarens -> älsk", function() {deepEqual( Stem("älskarens"), "älsk");});
test("älskares -> älskar", function() {deepEqual( Stem("älskares"), "älskar");});
test("älskarinna -> älskarin", function() {deepEqual( Stem("älskarinna"), "älskarin");});
test("älskat -> älsk", function() {deepEqual( Stem("älskat"), "älsk");});
test("älsklig -> älsk", function() {deepEqual( Stem("älsklig"), "älsk");});
test("älskliga -> älsk", function() {deepEqual( Stem("älskliga"), "älsk");});
test("älsklige -> älsk", function() {deepEqual( Stem("älsklige"), "älsk");});
test("älskligt -> älsk", function() {deepEqual( Stem("älskligt"), "älsk");});
test("älskling -> älskling", function() {deepEqual( Stem("älskling"), "älskling");});
test("älsklingar -> älskling", function() {deepEqual( Stem("älsklingar"), "älskling");});
test("älsklingsbarn -> älsklingsbarn", function() {deepEqual( Stem("älsklingsbarn"), "älsklingsbarn");});
test("älsklingsbarnet -> älsklingsbarnet", function() {deepEqual( Stem("älsklingsbarnet"), "älsklingsbarnet");});
test("älsklingsdotter -> älsklingsdot", function() {deepEqual( Stem("älsklingsdotter"), "älsklingsdot");});
test("älsklingsdryck -> älsklingsdryck", function() {deepEqual( Stem("älsklingsdryck"), "älsklingsdryck");});
test("älsklingsdräkt -> älsklingsdräk", function() {deepEqual( Stem("älsklingsdräkt"), "älsklingsdräk");});
test("älsklingsplats -> älsklingsplat", function() {deepEqual( Stem("älsklingsplats"), "älsklingsplat");});
test("älsklingsrock -> älsklingsrock", function() {deepEqual( Stem("älsklingsrock"), "älsklingsrock");});
test("älsklingssång -> älsklingssång", function() {deepEqual( Stem("älsklingssång"), "älsklingssång");});
test("älsklingssånger -> älsklingssång", function() {deepEqual( Stem("älsklingssånger"), "älsklingssång");});
test("älsklingsväg -> älsklingsväg", function() {deepEqual( Stem("älsklingsväg"), "älsklingsväg");});
test("älskogs -> älskog", function() {deepEqual( Stem("älskogs"), "älskog");});
test("älskogskrank -> älskogskrank", function() {deepEqual( Stem("älskogskrank"), "älskogskrank");});
test("älskogssälle -> älskogssäll", function() {deepEqual( Stem("älskogssälle"), "älskogssäll");});
test("älskvärd -> älskvärd", function() {deepEqual( Stem("älskvärd"), "älskvärd");});
test("älskvärda -> älskvärd", function() {deepEqual( Stem("älskvärda"), "älskvärd");});
test("älskvärdare -> älskvärd", function() {deepEqual( Stem("älskvärdare"), "älskvärd");});
test("älskvärdhet -> älskvärd", function() {deepEqual( Stem("älskvärdhet"), "älskvärd");});
test("ältandet -> ält", function() {deepEqual( Stem("ältandet"), "ält");});
test("ältar -> ält", function() {deepEqual( Stem("ältar"), "ält");});
test("älvarna -> älv", function() {deepEqual( Stem("älvarna"), "älv");});
test("äm -> äm", function() {deepEqual( Stem("äm"), "äm");});
test("ämabla -> ämabl", function() {deepEqual( Stem("ämabla"), "ämabl");});
test("ämade -> ämad", function() {deepEqual( Stem("ämade"), "ämad");});
test("ämar -> ämar", function() {deepEqual( Stem("ämar"), "ämar");});
test("ämbetets -> ämbetet", function() {deepEqual( Stem("ämbetets"), "ämbetet");});
test("ämbets -> ämbet", function() {deepEqual( Stem("ämbets"), "ämbet");});
test("ämbetsberk -> ämbetsberk", function() {deepEqual( Stem("ämbetsberk"), "ämbetsberk");});
test("ämbetsbroders -> ämbetsbroder", function() {deepEqual( Stem("ämbetsbroders"), "ämbetsbroder");});
test("ämbetsbröderna -> ämbetsbröd", function() {deepEqual( Stem("ämbetsbröderna"), "ämbetsbröd");});
test("ämbetsmanna -> ämbetsman", function() {deepEqual( Stem("ämbetsmanna"), "ämbetsman");});
test("ämbetsmannabanan -> ämbetsmannabanan", function() {deepEqual( Stem("ämbetsmannabanan"), "ämbetsmannabanan");});
test("ämbetsmän -> ämbetsmän", function() {deepEqual( Stem("ämbetsmän"), "ämbetsmän");});
test("ämbetsmännen -> ämbetsmän", function() {deepEqual( Stem("ämbetsmännen"), "ämbetsmän");});
test("ämbetsverk -> ämbetsverk", function() {deepEqual( Stem("ämbetsverk"), "ämbetsverk");});
test("ämbetsåligganden -> ämbetsåligg", function() {deepEqual( Stem("ämbetsåligganden"), "ämbetsåligg");});
test("ämnad -> ämn", function() {deepEqual( Stem("ämnad"), "ämn");});
test("ämnade -> ämn", function() {deepEqual( Stem("ämnade"), "ämn");});
test("ämnar -> ämn", function() {deepEqual( Stem("ämnar"), "ämn");});
test("ämnat -> ämn", function() {deepEqual( Stem("ämnat"), "ämn");});
test("ämne -> ämn", function() {deepEqual( Stem("ämne"), "ämn");});
test("ämnen -> ämn", function() {deepEqual( Stem("ämnen"), "ämn");});
test("ämnet -> ämnet", function() {deepEqual( Stem("ämnet"), "ämnet");});
test("ämret -> ämret", function() {deepEqual( Stem("ämret"), "ämret");});
test("ämrnet -> ämrnet", function() {deepEqual( Stem("ämrnet"), "ämrnet");});
test("än -> än", function() {deepEqual( Stem("än"), "än");});
test("ända -> änd", function() {deepEqual( Stem("ända"), "änd");});
test("ändalmål -> ändalmål", function() {deepEqual( Stem("ändalmål"), "ändalmål");});
test("ändamål -> ändamål", function() {deepEqual( Stem("ändamål"), "ändamål");});
test("ändamålet -> ändamålet", function() {deepEqual( Stem("ändamålet"), "ändamålet");});
test("ändamålets -> ändamålet", function() {deepEqual( Stem("ändamålets"), "ändamålet");});
test("ändamålslös -> ändamålslös", function() {deepEqual( Stem("ändamålslös"), "ändamålslös");});
test("ändan -> ändan", function() {deepEqual( Stem("ändan"), "ändan");});
test("ändas -> änd", function() {deepEqual( Stem("ändas"), "änd");});
test("ände -> änd", function() {deepEqual( Stem("ände"), "änd");});
test("änden -> änd", function() {deepEqual( Stem("änden"), "änd");});
test("änder -> änd", function() {deepEqual( Stem("änder"), "änd");});
test("änderna -> änd", function() {deepEqual( Stem("änderna"), "änd");});
test("ändlös -> ändlös", function() {deepEqual( Stem("ändlös"), "ändlös");});
test("ändlösa -> ändlös", function() {deepEqual( Stem("ändlösa"), "ändlös");});
test("ändock -> ändock", function() {deepEqual( Stem("ändock"), "ändock");});
test("ändra -> ändr", function() {deepEqual( Stem("ändra"), "ändr");});
test("ändrad -> ändr", function() {deepEqual( Stem("ändrad"), "ändr");});
test("ändrade -> ändr", function() {deepEqual( Stem("ändrade"), "ändr");});
test("ändrades -> ändr", function() {deepEqual( Stem("ändrades"), "ändr");});
test("ändrar -> ändr", function() {deepEqual( Stem("ändrar"), "ändr");});
test("ändras -> ändr", function() {deepEqual( Stem("ändras"), "ändr");});
test("ändrat -> ändr", function() {deepEqual( Stem("ändrat"), "ändr");});
test("ändring -> ändring", function() {deepEqual( Stem("ändring"), "ändring");});
test("ändtligen -> ändt", function() {deepEqual( Stem("ändtligen"), "ändt");});
test("ändå -> ändå", function() {deepEqual( Stem("ändå"), "ändå");});
test("äng -> äng", function() {deepEqual( Stem("äng"), "äng");});
test("ängar -> äng", function() {deepEqual( Stem("ängar"), "äng");});
test("ängarna -> äng", function() {deepEqual( Stem("ängarna"), "äng");});
test("ängarnas -> äng", function() {deepEqual( Stem("ängarnas"), "äng");});
test("ängars -> ängar", function() {deepEqual( Stem("ängars"), "ängar");});
test("ängd -> ängd", function() {deepEqual( Stem("ängd"), "ängd");});
test("ängden -> ängd", function() {deepEqual( Stem("ängden"), "ängd");});
test("ängderna -> ängd", function() {deepEqual( Stem("ängderna"), "ängd");});
test("ängel -> ängel", function() {deepEqual( Stem("ängel"), "ängel");});
test("ängeln -> ängeln", function() {deepEqual( Stem("ängeln"), "ängeln");});
test("ängen -> äng", function() {deepEqual( Stem("ängen"), "äng");});
test("ängens -> äng", function() {deepEqual( Stem("ängens"), "äng");});
test("änglar -> ängl", function() {deepEqual( Stem("änglar"), "ängl");});
test("änglarna -> ängl", function() {deepEqual( Stem("änglarna"), "ängl");});
test("änglars -> änglar", function() {deepEqual( Stem("änglars"), "änglar");});
test("änglavingar -> änglaving", function() {deepEqual( Stem("änglavingar"), "änglaving");});
test("ängslade -> ängsl", function() {deepEqual( Stem("ängslade"), "ängsl");});
test("ängslan -> ängslan", function() {deepEqual( Stem("ängslan"), "ängslan");});
test("ängslande -> ängsl", function() {deepEqual( Stem("ängslande"), "ängsl");});
test("ängslas -> ängsl", function() {deepEqual( Stem("ängslas"), "ängsl");});
test("ängslig -> ängs", function() {deepEqual( Stem("ängslig"), "ängs");});
test("ängsliga -> ängs", function() {deepEqual( Stem("ängsliga"), "ängs");});
test("ängslige -> ängs", function() {deepEqual( Stem("ängslige"), "ängs");});
test("ängsligt -> ängs", function() {deepEqual( Stem("ängsligt"), "ängs");});
test("änka -> änk", function() {deepEqual( Stem("änka"), "änk");});
test("änkan -> änkan", function() {deepEqual( Stem("änkan"), "änkan");});
test("änkefru -> änkefru", function() {deepEqual( Stem("änkefru"), "änkefru");});
test("änkenåd -> änkenåd", function() {deepEqual( Stem("änkenåd"), "änkenåd");});
test("änkestand -> änkestand", function() {deepEqual( Stem("änkestand"), "änkestand");});
test("änkling -> änkling", function() {deepEqual( Stem("änkling"), "änkling");});
test("änklingen -> änkling", function() {deepEqual( Stem("änklingen"), "änkling");});
test("änklingstid -> änklingstid", function() {deepEqual( Stem("änklingstid"), "änklingstid");});
test("änkor -> änk", function() {deepEqual( Stem("änkor"), "änk");});
test("ännu -> ännu", function() {deepEqual( Stem("ännu"), "ännu");});
test("änrlå -> änrlå", function() {deepEqual( Stem("änrlå"), "änrlå");});
test("änsande -> äns", function() {deepEqual( Stem("änsande"), "äns");});
test("änt -> änt", function() {deepEqual( Stem("änt"), "änt");});
test("äntligen -> änt", function() {deepEqual( Stem("äntligen"), "änt");});
test("äntligt -> änt", function() {deepEqual( Stem("äntligt"), "änt");});
test("äppelgårdens -> äppelgård", function() {deepEqual( Stem("äppelgårdens"), "äppelgård");});
test("äpple -> äppl", function() {deepEqual( Stem("äpple"), "äppl");});
test("äppleansikte -> äppleansik", function() {deepEqual( Stem("äppleansikte"), "äppleansik");});
test("äppleansiktet -> äppleansiktet", function() {deepEqual( Stem("äppleansiktet"), "äppleansiktet");});
test("äpplen -> äppl", function() {deepEqual( Stem("äpplen"), "äppl");});
test("äppleträd -> äppleträd", function() {deepEqual( Stem("äppleträd"), "äppleträd");});
test("är -> är", function() {deepEqual( Stem("är"), "är");});
test("ära -> ära", function() {deepEqual( Stem("ära"), "ära");});
test("ärade -> ärad", function() {deepEqual( Stem("ärade"), "ärad");});
test("äran -> äran", function() {deepEqual( Stem("äran"), "äran");});
test("ärans -> äran", function() {deepEqual( Stem("ärans"), "äran");});
test("äras -> äras", function() {deepEqual( Stem("äras"), "äras");});
test("ärat -> ärat", function() {deepEqual( Stem("ärat"), "ärat");});
test("ärbar -> ärb", function() {deepEqual( Stem("ärbar"), "ärb");});
test("ärbara -> ärbar", function() {deepEqual( Stem("ärbara"), "ärbar");});
test("ärbarhet -> ärbar", function() {deepEqual( Stem("ärbarhet"), "ärbar");});
test("ärbart -> ärbart", function() {deepEqual( Stem("ärbart"), "ärbart");});
test("äregirighet -> äregir", function() {deepEqual( Stem("äregirighet"), "äregir");});
test("äregirigheten -> äregir", function() {deepEqual( Stem("äregirigheten"), "äregir");});
test("ärelysten -> ärelyst", function() {deepEqual( Stem("ärelysten"), "ärelyst");});
test("ärelystna -> ärelystn", function() {deepEqual( Stem("ärelystna"), "ärelystn");});
test("ärelystnad -> ärelystn", function() {deepEqual( Stem("ärelystnad"), "ärelystn");});
test("ärende -> ärend", function() {deepEqual( Stem("ärende"), "ärend");});
test("ärenden -> ärend", function() {deepEqual( Stem("ärenden"), "ärend");});
test("ärendet -> ärendet", function() {deepEqual( Stem("ärendet"), "ärendet");});
test("ärft -> ärft", function() {deepEqual( Stem("ärft"), "ärft");});
test("ärg -> ärg", function() {deepEqual( Stem("ärg"), "ärg");});
test("ärgigt -> ärg", function() {deepEqual( Stem("ärgigt"), "ärg");});
test("ärgstrimmor -> ärgstrimm", function() {deepEqual( Stem("ärgstrimmor"), "ärgstrimm");});
test("äring -> äring", function() {deepEqual( Stem("äring"), "äring");});
test("ärkebiskop -> ärkebiskop", function() {deepEqual( Stem("ärkebiskop"), "ärkebiskop");});
test("ärkenarr -> ärkenarr", function() {deepEqual( Stem("ärkenarr"), "ärkenarr");});
test("ärlig -> ärl", function() {deepEqual( Stem("ärlig"), "ärl");});
test("ärliga -> ärl", function() {deepEqual( Stem("ärliga"), "ärl");});
test("ärlige -> ärl", function() {deepEqual( Stem("ärlige"), "ärl");});
test("ärligen -> ärl", function() {deepEqual( Stem("ärligen"), "ärl");});
test("ärligt -> ärl", function() {deepEqual( Stem("ärligt"), "ärl");});
test("ärm -> ärm", function() {deepEqual( Stem("ärm"), "ärm");});
test("ärmar -> ärm", function() {deepEqual( Stem("ärmar"), "ärm");});
test("ärmarne -> ärm", function() {deepEqual( Stem("ärmarne"), "ärm");});
test("ärmu -> ärmu", function() {deepEqual( Stem("ärmu"), "ärmu");});
test("ärna -> ärn", function() {deepEqual( Stem("ärna"), "ärn");});
test("ärnade -> ärn", function() {deepEqual( Stem("ärnade"), "ärn");});
test("ärnar -> ärn", function() {deepEqual( Stem("ärnar"), "ärn");});
test("ärnat -> ärn", function() {deepEqual( Stem("ärnat"), "ärn");});
test("äro -> äro", function() {deepEqual( Stem("äro"), "äro");});
test("ärones -> äron", function() {deepEqual( Stem("ärones"), "äron");});
test("ärr -> ärr", function() {deepEqual( Stem("ärr"), "ärr");});
test("ärter -> ärt", function() {deepEqual( Stem("ärter"), "ärt");});
test("ärtskidor -> ärtskid", function() {deepEqual( Stem("ärtskidor"), "ärtskid");});
test("ärtsängarna -> ärtsäng", function() {deepEqual( Stem("ärtsängarna"), "ärtsäng");});
test("ärva -> ärv", function() {deepEqual( Stem("ärva"), "ärv");});
test("ärvd -> ärvd", function() {deepEqual( Stem("ärvd"), "ärvd");});
test("ärvda -> ärvd", function() {deepEqual( Stem("ärvda"), "ärvd");});
test("ärvde -> ärvd", function() {deepEqual( Stem("ärvde"), "ärvd");});
test("ärver -> ärv", function() {deepEqual( Stem("ärver"), "ärv");});
test("ärvt -> ärvt", function() {deepEqual( Stem("ärvt"), "ärvt");});
test("äsch -> äsch", function() {deepEqual( Stem("äsch"), "äsch");});
test("äskade -> äsk", function() {deepEqual( Stem("äskade"), "äsk");});
test("äskar -> äsk", function() {deepEqual( Stem("äskar"), "äsk");});
test("ät -> ät", function() {deepEqual( Stem("ät"), "ät");});
test("äta -> äta", function() {deepEqual( Stem("äta"), "äta");});
test("ätbart -> ätbart", function() {deepEqual( Stem("ätbart"), "ätbart");});
test("äter -> äter", function() {deepEqual( Stem("äter"), "äter");});
test("ätit -> ätit", function() {deepEqual( Stem("ätit"), "ätit");});
test("ätlt -> ätlt", function() {deepEqual( Stem("ätlt"), "ätlt");});
test("ätningen -> ätning", function() {deepEqual( Stem("ätningen"), "ätning");});
test("ätt -> ätt", function() {deepEqual( Stem("ätt"), "ätt");});
test("ätten -> ätt", function() {deepEqual( Stem("ätten"), "ätt");});
test("ättika -> ättik", function() {deepEqual( Stem("ättika"), "ättik");});
test("ättikan -> ättikan", function() {deepEqual( Stem("ättikan"), "ättikan");});
test("äu -> äu", function() {deepEqual( Stem("äu"), "äu");});
test("ävcn -> ävcn", function() {deepEqual( Stem("ävcn"), "ävcn");});
test("även -> även", function() {deepEqual( Stem("även"), "även");});
test("ävensom -> ävensom", function() {deepEqual( Stem("ävensom"), "ävensom");});
test("äventyr -> äventyr", function() {deepEqual( Stem("äventyr"), "äventyr");});
test("äventyrens -> äventyr", function() {deepEqual( Stem("äventyrens"), "äventyr");});
test("äventyret -> äventyret", function() {deepEqual( Stem("äventyret"), "äventyret");});
test("äventyrligheter -> äventyr", function() {deepEqual( Stem("äventyrligheter"), "äventyr");});
test("äventyrslysten -> äventyrslyst", function() {deepEqual( Stem("äventyrslysten"), "äventyrslyst");});
test("ävlan -> ävlan", function() {deepEqual( Stem("ävlan"), "ävlan");});
test("å -> å", function() {deepEqual( Stem("å"), "å");});
test("åar -> åar", function() {deepEqual( Stem("åar"), "åar");});
test("åberopa -> åberop", function() {deepEqual( Stem("åberopa"), "åberop");});
test("åberopade -> åberop", function() {deepEqual( Stem("åberopade"), "åberop");});
test("ådagalade -> ådagal", function() {deepEqual( Stem("ådagalade"), "ådagal");});
test("ådagalagt -> ådagalag", function() {deepEqual( Stem("ådagalagt"), "ådagalag");});
test("ådagalägger -> ådagalägg", function() {deepEqual( Stem("ådagalägger"), "ådagalägg");});
test("åder -> åder", function() {deepEqual( Stem("åder"), "åder");});
test("åderman -> åderman", function() {deepEqual( Stem("åderman"), "åderman");});
test("ådermans -> åderman", function() {deepEqual( Stem("ådermans"), "åderman");});
test("ådraga -> ådrag", function() {deepEqual( Stem("ådraga"), "ådrag");});
test("ådragit -> ådragit", function() {deepEqual( Stem("ådragit"), "ådragit");});
test("ådrog -> ådrog", function() {deepEqual( Stem("ådrog"), "ådrog");});
test("ådror -> ådr", function() {deepEqual( Stem("ådror"), "ådr");});
test("ådrorna -> ådr", function() {deepEqual( Stem("ådrorna"), "ådr");});
test("åg -> åg", function() {deepEqual( Stem("åg"), "åg");});
test("åh -> åh", function() {deepEqual( Stem("åh"), "åh");});
test("åhörande -> åhör", function() {deepEqual( Stem("åhörande"), "åhör");});
test("åhörare -> åhör", function() {deepEqual( Stem("åhörare"), "åhör");});
test("åhörarinna -> åhörarin", function() {deepEqual( Stem("åhörarinna"), "åhörarin");});
test("åhörarinnan -> åhörarinnan", function() {deepEqual( Stem("åhörarinnan"), "åhörarinnan");});
test("åhörarna -> åhör", function() {deepEqual( Stem("åhörarna"), "åhör");});
test("åhörarnas -> åhör", function() {deepEqual( Stem("åhörarnas"), "åhör");});
test("åhörarskaran -> åhörarskaran", function() {deepEqual( Stem("åhörarskaran"), "åhörarskaran");});
test("åhörde -> åhörd", function() {deepEqual( Stem("åhörde"), "åhörd");});
test("åhört -> åhört", function() {deepEqual( Stem("åhört"), "åhört");});
test("åj -> åj", function() {deepEqual( Stem("åj"), "åj");});
test("åja -> åja", function() {deepEqual( Stem("åja"), "åja");});
test("åjo -> åjo", function() {deepEqual( Stem("åjo"), "åjo");});
test("åka -> åka", function() {deepEqual( Stem("åka"), "åka");});
test("åkdon -> åkdon", function() {deepEqual( Stem("åkdon"), "åkdon");});
test("åkdonet -> åkdonet", function() {deepEqual( Stem("åkdonet"), "åkdonet");});
test("åker -> åker", function() {deepEqual( Stem("åker"), "åker");});
test("åkermans -> åkerman", function() {deepEqual( Stem("åkermans"), "åkerman");});
test("åkern -> åkern", function() {deepEqual( Stem("åkern"), "åkern");});
test("åkerns -> åkern", function() {deepEqual( Stem("åkerns"), "åkern");});
test("åklagare -> åklag", function() {deepEqual( Stem("åklagare"), "åklag");});
test("åkomma -> åkomm", function() {deepEqual( Stem("åkomma"), "åkomm");});
test("åkomman -> åkomman", function() {deepEqual( Stem("åkomman"), "åkomman");});
test("åkrar -> åkr", function() {deepEqual( Stem("åkrar"), "åkr");});
test("åkrarna -> åkr", function() {deepEqual( Stem("åkrarna"), "åkr");});
test("åkrarnas -> åkr", function() {deepEqual( Stem("åkrarnas"), "åkr");});
test("åkt -> åkt", function() {deepEqual( Stem("åkt"), "åkt");});
test("åkte -> åkt", function() {deepEqual( Stem("åkte"), "åkt");});
test("ål -> ål", function() {deepEqual( Stem("ål"), "ål");});
test("ålade -> ålad", function() {deepEqual( Stem("ålade"), "ålad");});
test("ålande -> åland", function() {deepEqual( Stem("ålande"), "åland");});
test("ålder -> åld", function() {deepEqual( Stem("ålder"), "åld");});
test("ålderdom -> ålderdom", function() {deepEqual( Stem("ålderdom"), "ålderdom");});
test("ålderdomen -> ålderdom", function() {deepEqual( Stem("ålderdomen"), "ålderdom");});
test("ålderdoms -> ålderdom", function() {deepEqual( Stem("ålderdoms"), "ålderdom");});
test("åldern -> åld", function() {deepEqual( Stem("åldern"), "åld");});
test("ålders -> ålder", function() {deepEqual( Stem("ålders"), "ålder");});
test("ålderstigna -> ålderstign", function() {deepEqual( Stem("ålderstigna"), "ålderstign");});
test("åldrad -> åldr", function() {deepEqual( Stem("åldrad"), "åldr");});
test("åldrade -> åldr", function() {deepEqual( Stem("åldrade"), "åldr");});
test("åldrades -> åldr", function() {deepEqual( Stem("åldrades"), "åldr");});
test("åldrat -> åldr", function() {deepEqual( Stem("åldrat"), "åldr");});
test("åldrats -> åldrat", function() {deepEqual( Stem("åldrats"), "åldrat");});
test("åldrig -> åldr", function() {deepEqual( Stem("åldrig"), "åldr");});
test("åldrigaste -> åldr", function() {deepEqual( Stem("åldrigaste"), "åldr");});
test("åldring -> åldring", function() {deepEqual( Stem("åldring"), "åldring");});
test("åliggande -> åligg", function() {deepEqual( Stem("åliggande"), "åligg");});
test("åliggandet -> åligg", function() {deepEqual( Stem("åliggandet"), "åligg");});
test("ålägger -> ålägg", function() {deepEqual( Stem("ålägger"), "ålägg");});
test("ån -> ån", function() {deepEqual( Stem("ån"), "ån");});
test("ånga -> ång", function() {deepEqual( Stem("ånga"), "ång");});
test("ångade -> ång", function() {deepEqual( Stem("ångade"), "ång");});
test("ångan -> ångan", function() {deepEqual( Stem("ångan"), "ångan");});
test("ångande -> ång", function() {deepEqual( Stem("ångande"), "ång");});
test("ångares -> ångar", function() {deepEqual( Stem("ångares"), "ångar");});
test("ångbåten -> ångbåt", function() {deepEqual( Stem("ångbåten"), "ångbåt");});
test("ångbåtsfärd -> ångbåtsfärd", function() {deepEqual( Stem("ångbåtsfärd"), "ångbåtsfärd");});
test("ångbåtslustfärder -> ångbåtslustfärd", function() {deepEqual( Stem("ångbåtslustfärder"), "ångbåtslustfärd");});
test("ånger -> ång", function() {deepEqual( Stem("ånger"), "ång");});
test("ångerfulle -> ångerfull", function() {deepEqual( Stem("ångerfulle"), "ångerfull");});
test("ångerfullt -> ångerfull", function() {deepEqual( Stem("ångerfullt"), "ångerfull");});
test("ångern -> ång", function() {deepEqual( Stem("ångern"), "ång");});
test("ångerns -> ång", function() {deepEqual( Stem("ångerns"), "ång");});
test("ångest -> ångest", function() {deepEqual( Stem("ångest"), "ångest");});
test("ångesten -> ångest", function() {deepEqual( Stem("ångesten"), "ångest");});
test("ångestfull -> ångestfull", function() {deepEqual( Stem("ångestfull"), "ångestfull");});
test("ångestfulla -> ångestfull", function() {deepEqual( Stem("ångestfulla"), "ångestfull");});
test("ångestfullt -> ångestfull", function() {deepEqual( Stem("ångestfullt"), "ångestfull");});
test("ångfartyg -> ångfartyg", function() {deepEqual( Stem("ångfartyg"), "ångfartyg");});
test("ångfartygen -> ångfartyg", function() {deepEqual( Stem("ångfartygen"), "ångfartyg");});
test("ångor -> ång", function() {deepEqual( Stem("ångor"), "ång");});
test("ångra -> ångr", function() {deepEqual( Stem("ångra"), "ångr");});
test("ångrade -> ångr", function() {deepEqual( Stem("ångrade"), "ångr");});
test("ångrar -> ångr", function() {deepEqual( Stem("ångrar"), "ångr");});
test("ångrat -> ångr", function() {deepEqual( Stem("ångrat"), "ångr");});
test("ångslup -> ångslup", function() {deepEqual( Stem("ångslup"), "ångslup");});
test("ångst -> ångst", function() {deepEqual( Stem("ångst"), "ångst");});
test("ångsten -> ångst", function() {deepEqual( Stem("ångsten"), "ångst");});
test("ånyo -> ånyo", function() {deepEqual( Stem("ånyo"), "ånyo");});
test("år -> år", function() {deepEqual( Stem("år"), "år");});
test("åratal -> åratal", function() {deepEqual( Stem("åratal"), "åratal");});
test("åren -> åren", function() {deepEqual( Stem("åren"), "åren");});
test("årens -> åren", function() {deepEqual( Stem("årens"), "åren");});
test("året -> året", function() {deepEqual( Stem("året"), "året");});
test("årets -> året", function() {deepEqual( Stem("årets"), "året");});
test("århundrade -> århundr", function() {deepEqual( Stem("århundrade"), "århundr");});
test("århundrades -> århundr", function() {deepEqual( Stem("århundrades"), "århundr");});
test("århundradets -> århundradet", function() {deepEqual( Stem("århundradets"), "århundradet");});
test("årlig -> årl", function() {deepEqual( Stem("årlig"), "årl");});
test("årliga -> årl", function() {deepEqual( Stem("årliga"), "årl");});
test("årligen -> årl", function() {deepEqual( Stem("årligen"), "årl");});
test("årligt -> årl", function() {deepEqual( Stem("årligt"), "årl");});
test("årorna -> årorn", function() {deepEqual( Stem("årorna"), "årorn");});
test("års -> års", function() {deepEqual( Stem("års"), "års");});
test("årspremierna -> årspremi", function() {deepEqual( Stem("årspremierna"), "årspremi");});
test("årsuppköp -> årsuppköp", function() {deepEqual( Stem("årsuppköp"), "årsuppköp");});
test("årtag -> årtag", function() {deepEqual( Stem("årtag"), "årtag");});
test("årtal -> årtal", function() {deepEqual( Stem("årtal"), "årtal");});
test("årtionden -> årtiond", function() {deepEqual( Stem("årtionden"), "årtiond");});
test("årtusenden -> årtusend", function() {deepEqual( Stem("årtusenden"), "årtusend");});
test("åsar -> åsar", function() {deepEqual( Stem("åsar"), "åsar");});
test("åse -> åse", function() {deepEqual( Stem("åse"), "åse");});
test("åsen -> åsen", function() {deepEqual( Stem("åsen"), "åsen");});
test("åsett -> åset", function() {deepEqual( Stem("åsett"), "åset");});
test("åsigt -> åsig", function() {deepEqual( Stem("åsigt"), "åsig");});
test("åsigter -> åsig", function() {deepEqual( Stem("åsigter"), "åsig");});
test("åsikt -> åsik", function() {deepEqual( Stem("åsikt"), "åsik");});
test("åsikten -> åsik", function() {deepEqual( Stem("åsikten"), "åsik");});
test("åsikter -> åsik", function() {deepEqual( Stem("åsikter"), "åsik");});
test("åska -> åsk", function() {deepEqual( Stem("åska"), "åsk");});
test("åskan -> åskan", function() {deepEqual( Stem("åskan"), "åskan");});
test("åskor -> åsk", function() {deepEqual( Stem("åskor"), "åsk");});
test("åskstråle -> åskstrål", function() {deepEqual( Stem("åskstråle"), "åskstrål");});
test("åskådandets -> åskådandet", function() {deepEqual( Stem("åskådandets"), "åskådandet");});
test("åskådare -> åskåd", function() {deepEqual( Stem("åskådare"), "åskåd");});
test("åskådareplatsen -> åskådareplats", function() {deepEqual( Stem("åskådareplatsen"), "åskådareplats");});
test("åskådares -> åskådar", function() {deepEqual( Stem("åskådares"), "åskådar");});
test("åskådarna -> åskåd", function() {deepEqual( Stem("åskådarna"), "åskåd");});
test("åskådarnas -> åskåd", function() {deepEqual( Stem("åskådarnas"), "åskåd");});
test("åskådlig -> åskåd", function() {deepEqual( Stem("åskådlig"), "åskåd");});
test("åskådliga -> åskåd", function() {deepEqual( Stem("åskådliga"), "åskåd");});
test("åstad -> åst", function() {deepEqual( Stem("åstad"), "åst");});
test("åstadkomma -> åstadkomm", function() {deepEqual( Stem("åstadkomma"), "åstadkomm");});
test("åstadkommit -> åstadkommit", function() {deepEqual( Stem("åstadkommit"), "åstadkommit");});
test("åstundar -> åstund", function() {deepEqual( Stem("åstundar"), "åstund");});
test("åsyftade -> åsyft", function() {deepEqual( Stem("åsyftade"), "åsyft");});
test("åsyn -> åsyn", function() {deepEqual( Stem("åsyn"), "åsyn");});
test("åsynen -> åsyn", function() {deepEqual( Stem("åsynen"), "åsyn");});
test("åt -> åt", function() {deepEqual( Stem("åt"), "åt");});
test("åtaga -> åtag", function() {deepEqual( Stem("åtaga"), "åtag");});
test("åtager -> åtag", function() {deepEqual( Stem("åtager"), "åtag");});
test("åtagit -> åtagit", function() {deepEqual( Stem("åtagit"), "åtagit");});
test("åtar -> åtar", function() {deepEqual( Stem("åtar"), "åtar");});
test("åtbörd -> åtbörd", function() {deepEqual( Stem("åtbörd"), "åtbörd");});
test("åtbörder -> åtbörd", function() {deepEqual( Stem("åtbörder"), "åtbörd");});
test("åtcr -> åtcr", function() {deepEqual( Stem("åtcr"), "åtcr");});
test("åtdragen -> åtdrag", function() {deepEqual( Stem("åtdragen"), "åtdrag");});
test("åter -> åter", function() {deepEqual( Stem("åter"), "åter");});
test("återbetalningen -> återbetalning", function() {deepEqual( Stem("återbetalningen"), "återbetalning");});
test("återbjudande -> återbjud", function() {deepEqual( Stem("återbjudande"), "återbjud");});
test("återbringa -> återbring", function() {deepEqual( Stem("återbringa"), "återbring");});
test("återbud -> återbud", function() {deepEqual( Stem("återbud"), "återbud");});
test("återfalla -> återfall", function() {deepEqual( Stem("återfalla"), "återfall");});
test("återfann -> återfan", function() {deepEqual( Stem("återfann"), "återfan");});
test("återfick -> återfick", function() {deepEqual( Stem("återfick"), "återfick");});
test("återfingo -> återfingo", function() {deepEqual( Stem("återfingo"), "återfingo");});
test("återfinna -> återfin", function() {deepEqual( Stem("återfinna"), "återfin");});
test("återfinner -> återfin", function() {deepEqual( Stem("återfinner"), "återfin");});
test("återfunnit -> återfunnit", function() {deepEqual( Stem("återfunnit"), "återfunnit");});
test("återfärden -> återfärd", function() {deepEqual( Stem("återfärden"), "återfärd");});
test("återfå -> återfå", function() {deepEqual( Stem("återfå"), "återfå");});
test("återfår -> återfår", function() {deepEqual( Stem("återfår"), "återfår");});
test("återfått -> återfåt", function() {deepEqual( Stem("återfått"), "återfåt");});
test("återfödd -> återföd", function() {deepEqual( Stem("återfödd"), "återföd");});
test("återföll -> återföll", function() {deepEqual( Stem("återföll"), "återföll");});
test("återföra -> återför", function() {deepEqual( Stem("återföra"), "återför");});
test("återförsätta -> återförsät", function() {deepEqual( Stem("återförsätta"), "återförsät");});
test("återgaf -> återgaf", function() {deepEqual( Stem("återgaf"), "återgaf");});
test("återgav -> återgav", function() {deepEqual( Stem("återgav"), "återgav");});
test("återgavs -> återgav", function() {deepEqual( Stem("återgavs"), "återgav");});
test("återgivit -> återgivit", function() {deepEqual( Stem("återgivit"), "återgivit");});
test("återglansen -> återglans", function() {deepEqual( Stem("återglansen"), "återglans");});
test("återgälda -> återgäld", function() {deepEqual( Stem("återgälda"), "återgäld");});
test("återgäldade -> återgäld", function() {deepEqual( Stem("återgäldade"), "återgäld");});
test("återgåvo -> återgåvo", function() {deepEqual( Stem("återgåvo"), "återgåvo");});
test("återgåvos -> återgåvo", function() {deepEqual( Stem("återgåvos"), "återgåvo");});
test("återhålla -> återhåll", function() {deepEqual( Stem("återhålla"), "återhåll");});
test("återhållen -> återhåll", function() {deepEqual( Stem("återhållen"), "återhåll");});
test("återhållsam -> återhållsam", function() {deepEqual( Stem("återhållsam"), "återhållsam");});
test("återigen -> åter", function() {deepEqual( Stem("återigen"), "åter");});
test("återkalla -> återkall", function() {deepEqual( Stem("återkalla"), "återkall");});
test("återkallade -> återkall", function() {deepEqual( Stem("återkallade"), "återkall");});
test("återkallandet -> återkall", function() {deepEqual( Stem("återkallandet"), "återkall");});
test("återklingat -> återkling", function() {deepEqual( Stem("återklingat"), "återkling");});
test("återkom -> återkom", function() {deepEqual( Stem("återkom"), "återkom");});
test("återkomma -> återkomm", function() {deepEqual( Stem("återkomma"), "återkomm");});
test("återkommande -> återkomm", function() {deepEqual( Stem("återkommande"), "återkomm");});
test("återkommen -> återkomm", function() {deepEqual( Stem("återkommen"), "återkomm");});
test("återkommer -> återkomm", function() {deepEqual( Stem("återkommer"), "återkomm");});
test("återkommo -> återkommo", function() {deepEqual( Stem("återkommo"), "återkommo");});
test("återkomst -> återkomst", function() {deepEqual( Stem("återkomst"), "återkomst");});
test("återkomsten -> återkomst", function() {deepEqual( Stem("återkomsten"), "återkomst");});
test("återkomsteu -> återkomsteu", function() {deepEqual( Stem("återkomsteu"), "återkomsteu");});
test("återräckte -> återräck", function() {deepEqual( Stem("återräckte"), "återräck");});
test("återse -> åters", function() {deepEqual( Stem("återse"), "åters");});
test("återseende -> återseend", function() {deepEqual( Stem("återseende"), "återseend");});
test("återseendet -> återseendet", function() {deepEqual( Stem("återseendet"), "återseendet");});
test("återsett -> återset", function() {deepEqual( Stem("återsett"), "återset");});
test("återsken -> återsk", function() {deepEqual( Stem("återsken"), "återsk");});
test("återspeglade -> återspegl", function() {deepEqual( Stem("återspeglade"), "återspegl");});
test("återstar -> återst", function() {deepEqual( Stem("återstar"), "återst");});
test("återstod -> återstod", function() {deepEqual( Stem("återstod"), "återstod");});
test("återstoden -> återstod", function() {deepEqual( Stem("återstoden"), "återstod");});
test("återstodo -> återstodo", function() {deepEqual( Stem("återstodo"), "återstodo");});
test("återställa -> återställ", function() {deepEqual( Stem("återställa"), "återställ");});
test("återställande -> återställ", function() {deepEqual( Stem("återställande"), "återställ");});
test("återställt -> återställt", function() {deepEqual( Stem("återställt"), "återställt");});
test("återstå -> återstå", function() {deepEqual( Stem("återstå"), "återstå");});
test("återståen -> återstå", function() {deepEqual( Stem("återståen"), "återstå");});
test("återstående -> återståend", function() {deepEqual( Stem("återstående"), "återståend");});
test("återstår -> återstår", function() {deepEqual( Stem("återstår"), "återstår");});
test("återsvar -> återsv", function() {deepEqual( Stem("återsvar"), "återsv");});
test("återsågo -> återsågo", function() {deepEqual( Stem("återsågo"), "återsågo");});
test("återtaga -> återtag", function() {deepEqual( Stem("återtaga"), "återtag");});
test("återtagen -> återtag", function() {deepEqual( Stem("återtagen"), "återtag");});
test("återtagit -> återtagit", function() {deepEqual( Stem("återtagit"), "återtagit");});
test("återtog -> återtog", function() {deepEqual( Stem("återtog"), "återtog");});
test("återtogo -> återtogo", function() {deepEqual( Stem("återtogo"), "återtogo");});
test("återtogs -> återtog", function() {deepEqual( Stem("återtogs"), "återtog");});
test("återuppliva -> återuppliv", function() {deepEqual( Stem("återuppliva"), "återuppliv");});
test("återupprepandet -> återupprep", function() {deepEqual( Stem("återupprepandet"), "återupprep");});
test("återuppstå -> återuppstå", function() {deepEqual( Stem("återuppstå"), "återuppstå");});
test("återupptages -> återupptag", function() {deepEqual( Stem("återupptages"), "återupptag");});
test("återupptagit -> återupptagit", function() {deepEqual( Stem("återupptagit"), "återupptagit");});
test("återvaknat -> återvakn", function() {deepEqual( Stem("återvaknat"), "återvakn");});
test("återvanda -> återvand", function() {deepEqual( Stem("återvanda"), "återvand");});
test("återvann -> återvan", function() {deepEqual( Stem("återvann"), "återvan");});
test("återvunna -> återvun", function() {deepEqual( Stem("återvunna"), "återvun");});
test("återväcka -> återväck", function() {deepEqual( Stem("återväcka"), "återväck");});
test("återvägen -> återväg", function() {deepEqual( Stem("återvägen"), "återväg");});
test("återvända -> återvänd", function() {deepEqual( Stem("återvända"), "återvänd");});
test("återvändande -> återvänd", function() {deepEqual( Stem("återvändande"), "återvänd");});
test("återvände -> återvänd", function() {deepEqual( Stem("återvände"), "återvänd");});
test("återvänder -> återvänd", function() {deepEqual( Stem("återvänder"), "återvänd");});
test("återvändo -> återvändo", function() {deepEqual( Stem("återvändo"), "återvändo");});
test("återvänt -> återvänt", function() {deepEqual( Stem("återvänt"), "återvänt");});
test("återväntades -> återvänt", function() {deepEqual( Stem("återväntades"), "återvänt");});
test("åtfölja -> åtfölj", function() {deepEqual( Stem("åtfölja"), "åtfölj");});
test("åtföljas -> åtfölj", function() {deepEqual( Stem("åtföljas"), "åtfölj");});
test("åtföljd -> åtföljd", function() {deepEqual( Stem("åtföljd"), "åtföljd");});
test("åtföljda -> åtföljd", function() {deepEqual( Stem("åtföljda"), "åtföljd");});
test("åtföljde -> åtföljd", function() {deepEqual( Stem("åtföljde"), "åtföljd");});
test("åtföljdes -> åtföljd", function() {deepEqual( Stem("åtföljdes"), "åtföljd");});
test("åtgick -> åtgick", function() {deepEqual( Stem("åtgick"), "åtgick");});
test("åtgingo -> åtgingo", function() {deepEqual( Stem("åtgingo"), "åtgingo");});
test("åtgå -> åtgå", function() {deepEqual( Stem("åtgå"), "åtgå");});
test("åtgångna -> åtgångn", function() {deepEqual( Stem("åtgångna"), "åtgångn");});
test("åtknäppt -> åtknäppt", function() {deepEqual( Stem("åtknäppt"), "åtknäppt");});
test("åtlutade -> åtlut", function() {deepEqual( Stem("åtlutade"), "åtlut");});
test("åtlydd -> åtlyd", function() {deepEqual( Stem("åtlydd"), "åtlyd");});
test("åtlydde -> åtlyd", function() {deepEqual( Stem("åtlydde"), "åtlyd");});
test("åtlöje -> åtlöj", function() {deepEqual( Stem("åtlöje"), "åtlöj");});
test("åtminstone -> åtminston", function() {deepEqual( Stem("åtminstone"), "åtminston");});
test("åtnjutande -> åtnjut", function() {deepEqual( Stem("åtnjutande"), "åtnjut");});
test("åtnjutit -> åtnjutit", function() {deepEqual( Stem("åtnjutit"), "åtnjutit");});
test("åtnjutna -> åtnjutn", function() {deepEqual( Stem("åtnjutna"), "åtnjutn");});
test("åtnjöt -> åtnjöt", function() {deepEqual( Stem("åtnjöt"), "åtnjöt");});
test("åtnöj -> åtnöj", function() {deepEqual( Stem("åtnöj"), "åtnöj");});
test("åto -> åto", function() {deepEqual( Stem("åto"), "åto");});
test("åtog -> åtog", function() {deepEqual( Stem("åtog"), "åtog");});
test("åtrå -> åtrå", function() {deepEqual( Stem("åtrå"), "åtrå");});
test("åtrådda -> åtråd", function() {deepEqual( Stem("åtrådda"), "åtråd");});
test("åtråfyllt -> åtråfyllt", function() {deepEqual( Stem("åtråfyllt"), "åtråfyllt");});
test("åtrån -> åtrån", function() {deepEqual( Stem("åtrån"), "åtrån");});
test("åtsittande -> åtsit", function() {deepEqual( Stem("åtsittande"), "åtsit");});
test("åtskildes -> åtskild", function() {deepEqual( Stem("åtskildes"), "åtskild");});
test("åtskilliga -> åtskil", function() {deepEqual( Stem("åtskilliga"), "åtskil");});
test("åtskilligt -> åtskil", function() {deepEqual( Stem("åtskilligt"), "åtskil");});
test("åtsmetat -> åtsmet", function() {deepEqual( Stem("åtsmetat"), "åtsmet");});
test("åtsnurrade -> åtsnurr", function() {deepEqual( Stem("åtsnurrade"), "åtsnurr");});
test("åtstramade -> åtstram", function() {deepEqual( Stem("åtstramade"), "åtstram");});
test("åtstruket -> åtstruket", function() {deepEqual( Stem("åtstruket"), "åtstruket");});
test("ått -> ått", function() {deepEqual( Stem("ått"), "ått");});
test("åtta -> ått", function() {deepEqual( Stem("åtta"), "ått");});
test("åttiofjerde -> åttiofjerd", function() {deepEqual( Stem("åttiofjerde"), "åttiofjerd");});
test("åttkantigt -> åttkant", function() {deepEqual( Stem("åttkantigt"), "åttkant");});
test("åttonde -> åttond", function() {deepEqual( Stem("åttonde"), "åttond");});
test("åtvridna -> åtvridn", function() {deepEqual( Stem("åtvridna"), "åtvridn");});
test("ö -> ö", function() {deepEqual( Stem("ö"), "ö");});
test("öar -> öar", function() {deepEqual( Stem("öar"), "öar");});
test("öd -> öd", function() {deepEqual( Stem("öd"), "öd");});
test("öda -> öda", function() {deepEqual( Stem("öda"), "öda");});
test("ödas -> ödas", function() {deepEqual( Stem("ödas"), "ödas");});
test("ödda -> ödd", function() {deepEqual( Stem("ödda"), "ödd");});
test("öde -> öde", function() {deepEqual( Stem("öde"), "öde");});
test("öden -> öden", function() {deepEqual( Stem("öden"), "öden");});
test("ödesbestämda -> ödesbestämd", function() {deepEqual( Stem("ödesbestämda"), "ödesbestämd");});
test("ödesbestämt -> ödesbestämt", function() {deepEqual( Stem("ödesbestämt"), "ödesbestämt");});
test("ödesdigert -> ödesdigert", function() {deepEqual( Stem("ödesdigert"), "ödesdigert");});
test("ödeshemman -> ödeshemman", function() {deepEqual( Stem("ödeshemman"), "ödeshemman");});
test("ödeshemmanet -> ödeshemmanet", function() {deepEqual( Stem("ödeshemmanet"), "ödeshemmanet");});
test("ödet -> ödet", function() {deepEqual( Stem("ödet"), "ödet");});
test("ödets -> ödet", function() {deepEqual( Stem("ödets"), "ödet");});
test("ödipus -> ödipus", function() {deepEqual( Stem("ödipus"), "ödipus");});
test("ödmjaka -> ödmjak", function() {deepEqual( Stem("ödmjaka"), "ödmjak");});
test("ödmjuk -> ödmjuk", function() {deepEqual( Stem("ödmjuk"), "ödmjuk");});
test("ödmjuka -> ödmjuk", function() {deepEqual( Stem("ödmjuka"), "ödmjuk");});
test("ödmjukas -> ödmjuk", function() {deepEqual( Stem("ödmjukas"), "ödmjuk");});
test("ödmjukast -> ödmjuk", function() {deepEqual( Stem("ödmjukast"), "ödmjuk");});
test("ödmjukaste -> ödmjuk", function() {deepEqual( Stem("ödmjukaste"), "ödmjuk");});
test("ödmjukat -> ödmjuk", function() {deepEqual( Stem("ödmjukat"), "ödmjuk");});
test("ödmjukhet -> ödmjuk", function() {deepEqual( Stem("ödmjukhet"), "ödmjuk");});
test("ödmjukt -> ödmjuk", function() {deepEqual( Stem("ödmjukt"), "ödmjuk");});
test("ödsla -> ödsl", function() {deepEqual( Stem("ödsla"), "ödsl");});
test("ödslig -> öds", function() {deepEqual( Stem("ödslig"), "öds");});
test("ödsliga -> öds", function() {deepEqual( Stem("ödsliga"), "öds");});
test("ödsligare -> öds", function() {deepEqual( Stem("ödsligare"), "öds");});
test("ödslighet -> öds", function() {deepEqual( Stem("ödslighet"), "öds");});
test("ödslighetens -> öds", function() {deepEqual( Stem("ödslighetens"), "öds");});
test("ödsligt -> öds", function() {deepEqual( Stem("ödsligt"), "öds");});
test("öfriga -> öfr", function() {deepEqual( Stem("öfriga"), "öfr");});
test("öfrigt -> öfr", function() {deepEqual( Stem("öfrigt"), "öfr");});
test("öfvade -> öfv", function() {deepEqual( Stem("öfvade"), "öfv");});
test("öfvadt -> öfvad", function() {deepEqual( Stem("öfvadt"), "öfvad");});
test("öfvat -> öfv", function() {deepEqual( Stem("öfvat"), "öfv");});
test("öfver -> öfv", function() {deepEqual( Stem("öfver"), "öfv");});
test("öfverallt -> öfverallt", function() {deepEqual( Stem("öfverallt"), "öfverallt");});
test("öfverbrytande -> öfverbryt", function() {deepEqual( Stem("öfverbrytande"), "öfverbryt");});
test("öfverdrag -> öfverdrag", function() {deepEqual( Stem("öfverdrag"), "öfverdrag");});
test("öfverdrifven -> öfverdrifv", function() {deepEqual( Stem("öfverdrifven"), "öfverdrifv");});
test("öfverdrifvet -> öfverdrifvet", function() {deepEqual( Stem("öfverdrifvet"), "öfverdrifvet");});
test("öfverdrogs -> öfverdrog", function() {deepEqual( Stem("öfverdrogs"), "öfverdrog");});
test("öfverduktig -> öfverdukt", function() {deepEqual( Stem("öfverduktig"), "öfverdukt");});
test("öfverdådig -> öfverdåd", function() {deepEqual( Stem("öfverdådig"), "öfverdåd");});
test("öfverdådiga -> öfverdåd", function() {deepEqual( Stem("öfverdådiga"), "öfverdåd");});
test("öfverenskommit -> öfverenskommit", function() {deepEqual( Stem("öfverenskommit"), "öfverenskommit");});
test("öfverensstämde -> öfverensstämd", function() {deepEqual( Stem("öfverensstämde"), "öfverensstämd");});
test("öfverensstämmande -> öfverensstämm", function() {deepEqual( Stem("öfverensstämmande"), "öfverensstämm");});
test("öfverensstämmelse -> öfverensstämm", function() {deepEqual( Stem("öfverensstämmelse"), "öfverensstämm");});
test("öfverflyttade -> öfverflyt", function() {deepEqual( Stem("öfverflyttade"), "öfverflyt");});
test("öfverflödiga -> öfverflöd", function() {deepEqual( Stem("öfverflödiga"), "öfverflöd");});
test("öfverflödigt -> öfverflöd", function() {deepEqual( Stem("öfverflödigt"), "öfverflöd");});
test("öfvergaf -> öfvergaf", function() {deepEqual( Stem("öfvergaf"), "öfvergaf");});
test("öfverge -> öfverg", function() {deepEqual( Stem("öfverge"), "öfverg");});
test("öfvergifna -> öfvergifn", function() {deepEqual( Stem("öfvergifna"), "öfvergifn");});
test("öfvergifnas -> öfvergifn", function() {deepEqual( Stem("öfvergifnas"), "öfvergifn");});
test("öfvergifva -> öfvergifv", function() {deepEqual( Stem("öfvergifva"), "öfvergifv");});
test("öfvergifven -> öfvergifv", function() {deepEqual( Stem("öfvergifven"), "öfvergifv");});
test("öfvergifver -> öfvergifv", function() {deepEqual( Stem("öfvergifver"), "öfvergifv");});
test("öfvergåfvo -> öfvergåfvo", function() {deepEqual( Stem("öfvergåfvo"), "öfvergåfvo");});
test("öfvergår -> öfvergår", function() {deepEqual( Stem("öfvergår"), "öfvergår");});
test("öfvergått -> öfvergåt", function() {deepEqual( Stem("öfvergått"), "öfvergåt");});
test("öfverhalning -> öfverhalning", function() {deepEqual( Stem("öfverhalning"), "öfverhalning");});
test("öfverhufvud -> öfverhufvud", function() {deepEqual( Stem("öfverhufvud"), "öfverhufvud");});
test("öfverhängande -> öfverhäng", function() {deepEqual( Stem("öfverhängande"), "öfverhäng");});
test("öfverlade -> öfverl", function() {deepEqual( Stem("öfverlade"), "öfverl");});
test("öfverlagt -> öfverlag", function() {deepEqual( Stem("öfverlagt"), "öfverlag");});
test("öfverlastad -> öfverlast", function() {deepEqual( Stem("öfverlastad"), "öfverlast");});
test("öfverlefva -> öfverlefv", function() {deepEqual( Stem("öfverlefva"), "öfverlefv");});
test("öfverlefvat -> öfverlefv", function() {deepEqual( Stem("öfverlefvat"), "öfverlefv");});
test("öfverlemna -> öfverlemn", function() {deepEqual( Stem("öfverlemna"), "öfverlemn");});
test("öfverlemnade -> öfverlemn", function() {deepEqual( Stem("öfverlemnade"), "öfverlemn");});
test("öfverlemnar -> öfverlemn", function() {deepEqual( Stem("öfverlemnar"), "öfverlemn");});
test("öfverlemnas -> öfverlemn", function() {deepEqual( Stem("öfverlemnas"), "öfverlemn");});
test("öfverlyckliga -> öfverlyck", function() {deepEqual( Stem("öfverlyckliga"), "öfverlyck");});
test("öfverlägga -> öfverlägg", function() {deepEqual( Stem("öfverlägga"), "öfverlägg");});
test("öfverläggning -> öfverläggning", function() {deepEqual( Stem("öfverläggning"), "öfverläggning");});
test("öfverläggningar -> öfverläggning", function() {deepEqual( Stem("öfverläggningar"), "öfverläggning");});
test("öfverlägsenhet -> öfverlägsen", function() {deepEqual( Stem("öfverlägsenhet"), "öfverlägsen");});
test("öfverlät -> öfverlät", function() {deepEqual( Stem("öfverlät"), "öfverlät");});
test("öfverlåtande -> öfverlåt", function() {deepEqual( Stem("öfverlåtande"), "öfverlåt");});
test("öfverman -> öfverman", function() {deepEqual( Stem("öfverman"), "öfverman");});
test("öfvermod -> öfvermod", function() {deepEqual( Stem("öfvermod"), "öfvermod");});
test("öfvermorgon -> öfvermorgon", function() {deepEqual( Stem("öfvermorgon"), "öfvermorgon");});
test("öfvermåttan -> öfvermåttan", function() {deepEqual( Stem("öfvermåttan"), "öfvermåttan");});
test("öfverraska -> öfverrask", function() {deepEqual( Stem("öfverraska"), "öfverrask");});
test("öfverraskad -> öfverrask", function() {deepEqual( Stem("öfverraskad"), "öfverrask");});
test("öfverraskade -> öfverrask", function() {deepEqual( Stem("öfverraskade"), "öfverrask");});
test("öfverraskades -> öfverrask", function() {deepEqual( Stem("öfverraskades"), "öfverrask");});
test("öfverraskat -> öfverrask", function() {deepEqual( Stem("öfverraskat"), "öfverrask");});
test("öfverraskning -> öfverraskning", function() {deepEqual( Stem("öfverraskning"), "öfverraskning");});
test("öfverraskningen -> öfverraskning", function() {deepEqual( Stem("öfverraskningen"), "öfverraskning");});
test("öfverräknat -> öfverräkn", function() {deepEqual( Stem("öfverräknat"), "öfverräkn");});
test("öfversittare -> öfversit", function() {deepEqual( Stem("öfversittare"), "öfversit");});
test("öfverslogo -> öfverslogo", function() {deepEqual( Stem("öfverslogo"), "öfverslogo");});
test("öfversta -> öfverst", function() {deepEqual( Stem("öfversta"), "öfverst");});
test("öfversteg -> öfversteg", function() {deepEqual( Stem("öfversteg"), "öfversteg");});
test("öfverstånden -> öfverstånd", function() {deepEqual( Stem("öfverstånden"), "öfverstånd");});
test("öfverståndna -> öfverståndn", function() {deepEqual( Stem("öfverståndna"), "öfverståndn");});
test("öfvertaga -> öfvertag", function() {deepEqual( Stem("öfvertaga"), "öfvertag");});
test("öfvertala -> öfvertal", function() {deepEqual( Stem("öfvertala"), "öfvertal");});
test("öfvertalat -> öfvertal", function() {deepEqual( Stem("öfvertalat"), "öfvertal");});
test("öfvertyga -> öfvertyg", function() {deepEqual( Stem("öfvertyga"), "öfvertyg");});
test("öfvertygad -> öfvertyg", function() {deepEqual( Stem("öfvertygad"), "öfvertyg");});
test("öfvertygade -> öfvertyg", function() {deepEqual( Stem("öfvertygade"), "öfvertyg");});
test("öfvertygande -> öfvertyg", function() {deepEqual( Stem("öfvertygande"), "öfvertyg");});
test("öfvertygar -> öfvertyg", function() {deepEqual( Stem("öfvertygar"), "öfvertyg");});
test("öfvertygas -> öfvertyg", function() {deepEqual( Stem("öfvertygas"), "öfvertyg");});
test("öfvertygat -> öfvertyg", function() {deepEqual( Stem("öfvertygat"), "öfvertyg");});
test("öfvertygelse -> öfvertyg", function() {deepEqual( Stem("öfvertygelse"), "öfvertyg");});
test("öfvertygelsen -> öfvertyg", function() {deepEqual( Stem("öfvertygelsen"), "öfvertyg");});
test("öfvertänkt -> öfvertänk", function() {deepEqual( Stem("öfvertänkt"), "öfvertänk");});
test("öfvertänkte -> öfvertänk", function() {deepEqual( Stem("öfvertänkte"), "öfvertänk");});
test("öfvervann -> öfvervan", function() {deepEqual( Stem("öfvervann"), "öfvervan");});
test("öfvervinna -> öfvervin", function() {deepEqual( Stem("öfvervinna"), "öfvervin");});
test("öfvervunnen -> öfvervun", function() {deepEqual( Stem("öfvervunnen"), "öfvervun");});
test("öfverväg -> öfverväg", function() {deepEqual( Stem("öfverväg"), "öfverväg");});
test("öfvervägande -> öfverväg", function() {deepEqual( Stem("öfvervägande"), "öfverväg");});
test("öfverändakastar -> öfverändakast", function() {deepEqual( Stem("öfverändakastar"), "öfverändakast");});
test("öga -> öga", function() {deepEqual( Stem("öga"), "öga");});
test("ögat -> ögat", function() {deepEqual( Stem("ögat"), "ögat");});
test("ögats -> ögat", function() {deepEqual( Stem("ögats"), "ögat");});
test("ögmlell -> ögmlell", function() {deepEqual( Stem("ögmlell"), "ögmlell");});
test("ögna -> ögn", function() {deepEqual( Stem("ögna"), "ögn");});
test("ögnade -> ögn", function() {deepEqual( Stem("ögnade"), "ögn");});
test("ögo -> ögo", function() {deepEqual( Stem("ögo"), "ögo");});
test("ögon -> ögon", function() {deepEqual( Stem("ögon"), "ögon");});
test("ögona -> ögon", function() {deepEqual( Stem("ögona"), "ögon");});
test("ögonblick -> ögonblick", function() {deepEqual( Stem("ögonblick"), "ögonblick");});
test("ögonblicken -> ögonblick", function() {deepEqual( Stem("ögonblicken"), "ögonblick");});
test("ögonblicket -> ögonblicket", function() {deepEqual( Stem("ögonblicket"), "ögonblicket");});
test("ögonblickets -> ögonblicket", function() {deepEqual( Stem("ögonblickets"), "ögonblicket");});
test("ögonblickliga -> ögonblick", function() {deepEqual( Stem("ögonblickliga"), "ögonblick");});
test("ögonblickligen -> ögonblick", function() {deepEqual( Stem("ögonblickligen"), "ögonblick");});
test("ögonblickligt -> ögonblick", function() {deepEqual( Stem("ögonblickligt"), "ögonblick");});
test("ögonblicks -> ögonblick", function() {deepEqual( Stem("ögonblicks"), "ögonblick");});
test("ögonbryn -> ögonbryn", function() {deepEqual( Stem("ögonbryn"), "ögonbryn");});
test("ögonbrynen -> ögonbryn", function() {deepEqual( Stem("ögonbrynen"), "ögonbryn");});
test("ögonbrynens -> ögonbryn", function() {deepEqual( Stem("ögonbrynens"), "ögonbryn");});
test("ögonbryrl -> ögonbryrl", function() {deepEqual( Stem("ögonbryrl"), "ögonbryrl");});
test("ögoncn -> ögoncn", function() {deepEqual( Stem("ögoncn"), "ögoncn");});
test("ögonem -> ögonem", function() {deepEqual( Stem("ögonem"), "ögonem");});
test("ögonen -> ögon", function() {deepEqual( Stem("ögonen"), "ögon");});
test("ögonens -> ögon", function() {deepEqual( Stem("ögonens"), "ögon");});
test("ögonfransar -> ögonfrans", function() {deepEqual( Stem("ögonfransar"), "ögonfrans");});
test("ögonfägnad -> ögonfägn", function() {deepEqual( Stem("ögonfägnad"), "ögonfägn");});
test("ögonhar -> ögonh", function() {deepEqual( Stem("ögonhar"), "ögonh");});
test("ögonhålorna -> ögonhål", function() {deepEqual( Stem("ögonhålorna"), "ögonhål");});
test("ögonhår -> ögonhår", function() {deepEqual( Stem("ögonhår"), "ögonhår");});
test("ögonhåren -> ögonhår", function() {deepEqual( Stem("ögonhåren"), "ögonhår");});
test("ögonkast -> ögonk", function() {deepEqual( Stem("ögonkast"), "ögonk");});
test("ögonkastet -> ögonkastet", function() {deepEqual( Stem("ögonkastet"), "ögonkastet");});
test("ögonlock -> ögonlock", function() {deepEqual( Stem("ögonlock"), "ögonlock");});
test("ögonlocken -> ögonlock", function() {deepEqual( Stem("ögonlocken"), "ögonlock");});
test("ögonmick -> ögonmick", function() {deepEqual( Stem("ögonmick"), "ögonmick");});
test("ögonmyster -> ögonmyst", function() {deepEqual( Stem("ögonmyster"), "ögonmyst");});
test("ögonsigte -> ögons", function() {deepEqual( Stem("ögonsigte"), "ögons");});
test("ögonsikte -> ögonsik", function() {deepEqual( Stem("ögonsikte"), "ögonsik");});
test("ögonskenligen -> ögonsken", function() {deepEqual( Stem("ögonskenligen"), "ögonsken");});
test("ögonsten -> ögonst", function() {deepEqual( Stem("ögonsten"), "ögonst");});
test("ögonsvärta -> ögonsvärt", function() {deepEqual( Stem("ögonsvärta"), "ögonsvärt");});
test("ögonvatten -> ögonvat", function() {deepEqual( Stem("ögonvatten"), "ögonvat");});
test("ögonvitor -> ögonvit", function() {deepEqual( Stem("ögonvitor"), "ögonvit");});
test("öjan -> öjan", function() {deepEqual( Stem("öjan"), "öjan");});
test("ök -> ök", function() {deepEqual( Stem("ök"), "ök");});
test("öka -> öka", function() {deepEqual( Stem("öka"), "öka");});
test("ökad -> ökad", function() {deepEqual( Stem("ökad"), "ökad");});
test("ökade -> ökad", function() {deepEqual( Stem("ökade"), "ökad");});
test("ökades -> ökad", function() {deepEqual( Stem("ökades"), "ökad");});
test("ökar -> ökar", function() {deepEqual( Stem("ökar"), "ökar");});
test("öken -> öken", function() {deepEqual( Stem("öken"), "öken");});
test("ökentorrt -> ökentorrt", function() {deepEqual( Stem("ökentorrt"), "ökentorrt");});
test("ökn -> ökn", function() {deepEqual( Stem("ökn"), "ökn");});
test("öknamn -> öknamn", function() {deepEqual( Stem("öknamn"), "öknamn");});
test("öknen -> ökn", function() {deepEqual( Stem("öknen"), "ökn");});
test("öknens -> ökn", function() {deepEqual( Stem("öknens"), "ökn");});
test("ökniga -> ökn", function() {deepEqual( Stem("ökniga"), "ökn");});
test("öl -> öl", function() {deepEqual( Stem("öl"), "öl");});
test("ölet -> ölet", function() {deepEqual( Stem("ölet"), "ölet");});
test("ölost -> ölost", function() {deepEqual( Stem("ölost"), "ölost");});
test("ölostskålen -> ölostskål", function() {deepEqual( Stem("ölostskålen"), "ölostskål");});
test("ölsupa -> ölsup", function() {deepEqual( Stem("ölsupa"), "ölsup");});
test("öltunnor -> öltun", function() {deepEqual( Stem("öltunnor"), "öltun");});
test("öm -> öm", function() {deepEqual( Stem("öm"), "öm");});
test("ömhet -> ömhet", function() {deepEqual( Stem("ömhet"), "ömhet");});
test("ömhjärtade -> ömhjärt", function() {deepEqual( Stem("ömhjärtade"), "ömhjärt");});
test("ömkade -> ömk", function() {deepEqual( Stem("ömkade"), "ömk");});
test("ömkande -> ömk", function() {deepEqual( Stem("ömkande"), "ömk");});
test("ömkilig -> ömki", function() {deepEqual( Stem("ömkilig"), "ömki");});
test("ömklig -> ömk", function() {deepEqual( Stem("ömklig"), "ömk");});
test("ömkliga -> ömk", function() {deepEqual( Stem("ömkliga"), "ömk");});
test("ömkligt -> ömk", function() {deepEqual( Stem("ömkligt"), "ömk");});
test("ömma -> ömm", function() {deepEqual( Stem("ömma"), "ömm");});
test("ömmade -> ömm", function() {deepEqual( Stem("ömmade"), "ömm");});
test("ömmande -> ömm", function() {deepEqual( Stem("ömmande"), "ömm");});
test("ömmare -> ömm", function() {deepEqual( Stem("ömmare"), "ömm");});
test("ömmaste -> ömm", function() {deepEqual( Stem("ömmaste"), "ömm");});
test("ömme -> ömm", function() {deepEqual( Stem("ömme"), "ömm");});
test("ömse -> öms", function() {deepEqual( Stem("ömse"), "öms");});
test("ömsesidig -> ömsesid", function() {deepEqual( Stem("ömsesidig"), "ömsesid");});
test("ömsesidiga -> ömsesid", function() {deepEqual( Stem("ömsesidiga"), "ömsesid");});
test("ömsesidigt -> ömsesid", function() {deepEqual( Stem("ömsesidigt"), "ömsesid");});
test("ömsinta -> ömsint", function() {deepEqual( Stem("ömsinta"), "ömsint");});
test("ömsom -> ömsom", function() {deepEqual( Stem("ömsom"), "ömsom");});
test("ömt -> ömt", function() {deepEqual( Stem("ömt"), "ömt");});
test("ömtålig -> ömtå", function() {deepEqual( Stem("ömtålig"), "ömtå");});
test("ömtåliga -> ömtå", function() {deepEqual( Stem("ömtåliga"), "ömtå");});
test("ön -> ön", function() {deepEqual( Stem("ön"), "ön");});
test("öns -> öns", function() {deepEqual( Stem("öns"), "öns");});
test("önska -> önsk", function() {deepEqual( Stem("önska"), "önsk");});
test("önskade -> önsk", function() {deepEqual( Stem("önskade"), "önsk");});
test("önskan -> önskan", function() {deepEqual( Stem("önskan"), "önskan");});
test("önskar -> önsk", function() {deepEqual( Stem("önskar"), "önsk");});
test("önskat -> önsk", function() {deepEqual( Stem("önskat"), "önsk");});
test("önskligt -> önsk", function() {deepEqual( Stem("önskligt"), "önsk");});
test("önskningar -> önskning", function() {deepEqual( Stem("önskningar"), "önskning");});
test("önskningarna -> önskning", function() {deepEqual( Stem("önskningarna"), "önskning");});
test("önskningars -> önskningar", function() {deepEqual( Stem("önskningars"), "önskningar");});
test("önskvärd -> önskvärd", function() {deepEqual( Stem("önskvärd"), "önskvärd");});
test("önskvärdt -> önskvärd", function() {deepEqual( Stem("önskvärdt"), "önskvärd");});
test("önskvärt -> önskvärt", function() {deepEqual( Stem("önskvärt"), "önskvärt");});
test("öpp -> öpp", function() {deepEqual( Stem("öpp"), "öpp");});
test("öppen -> öpp", function() {deepEqual( Stem("öppen"), "öpp");});
test("öppenhet -> öppen", function() {deepEqual( Stem("öppenhet"), "öppen");});
test("öppenhjertig -> öppenhjert", function() {deepEqual( Stem("öppenhjertig"), "öppenhjert");});
test("öppenhjärtig -> öppenhjärt", function() {deepEqual( Stem("öppenhjärtig"), "öppenhjärt");});
test("öppenhjärtigt -> öppenhjärt", function() {deepEqual( Stem("öppenhjärtigt"), "öppenhjärt");});
test("öppet -> öppet", function() {deepEqual( Stem("öppet"), "öppet");});
test("öppna -> öppn", function() {deepEqual( Stem("öppna"), "öppn");});
test("öppnad -> öppn", function() {deepEqual( Stem("öppnad"), "öppn");});
test("öppnade -> öppn", function() {deepEqual( Stem("öppnade"), "öppn");});
test("öppnades -> öppn", function() {deepEqual( Stem("öppnades"), "öppn");});
test("öppnar -> öppn", function() {deepEqual( Stem("öppnar"), "öppn");});
test("öppnas -> öppn", function() {deepEqual( Stem("öppnas"), "öppn");});
test("öppnat -> öppn", function() {deepEqual( Stem("öppnat"), "öppn");});
test("öppnats -> öppnat", function() {deepEqual( Stem("öppnats"), "öppnat");});
test("öppnen -> öppn", function() {deepEqual( Stem("öppnen"), "öppn");});
test("öppningar -> öppning", function() {deepEqual( Stem("öppningar"), "öppning");});
test("öppningen -> öppning", function() {deepEqual( Stem("öppningen"), "öppning");});
test("ör -> ör", function() {deepEqual( Stem("ör"), "ör");});
test("öra -> öra", function() {deepEqual( Stem("öra"), "öra");});
test("örat -> örat", function() {deepEqual( Stem("örat"), "örat");});
test("öre -> öre", function() {deepEqual( Stem("öre"), "öre");});
test("öregrund -> öregrund", function() {deepEqual( Stem("öregrund"), "öregrund");});
test("öresund -> öresund", function() {deepEqual( Stem("öresund"), "öresund");});
test("örfilar -> örfil", function() {deepEqual( Stem("örfilar"), "örfil");});
test("örhinnor -> örhin", function() {deepEqual( Stem("örhinnor"), "örhin");});
test("örklarligt -> örklar", function() {deepEqual( Stem("örklarligt"), "örklar");});
test("örmåga -> örmåg", function() {deepEqual( Stem("örmåga"), "örmåg");});
test("örn -> örn", function() {deepEqual( Stem("örn"), "örn");});
test("örnar -> örn", function() {deepEqual( Stem("örnar"), "örn");});
test("örnens -> örn", function() {deepEqual( Stem("örnens"), "örn");});
test("örnungen -> örnung", function() {deepEqual( Stem("örnungen"), "örnung");});
test("öro -> öro", function() {deepEqual( Stem("öro"), "öro");});
test("öron -> öron", function() {deepEqual( Stem("öron"), "öron");});
test("öronen -> öron", function() {deepEqual( Stem("öronen"), "öron");});
test("örsnibbarna -> örsnibb", function() {deepEqual( Stem("örsnibbarna"), "örsnibb");});
test("örtagård -> örtagård", function() {deepEqual( Stem("örtagård"), "örtagård");});
test("örter -> ört", function() {deepEqual( Stem("örter"), "ört");});
test("örternas -> ört", function() {deepEqual( Stem("örternas"), "ört");});
test("örvitlig -> örvit", function() {deepEqual( Stem("örvitlig"), "örvit");});
test("ösa -> ösa", function() {deepEqual( Stem("ösa"), "ösa");});
test("ösregn -> ösregn", function() {deepEqual( Stem("ösregn"), "ösregn");});
test("ösregna -> ösregn", function() {deepEqual( Stem("ösregna"), "ösregn");});
test("östan -> östan", function() {deepEqual( Stem("östan"), "östan");});
test("östanvinden -> östanvind", function() {deepEqual( Stem("östanvinden"), "östanvind");});
test("öste -> öst", function() {deepEqual( Stem("öste"), "öst");});
test("öster -> öst", function() {deepEqual( Stem("öster"), "öst");});
test("östergötland -> östergötland", function() {deepEqual( Stem("östergötland"), "östergötland");});
test("österlandet -> österl", function() {deepEqual( Stem("österlandet"), "österl");});
test("östermalm -> östermalm", function() {deepEqual( Stem("östermalm"), "östermalm");});
test("österrike -> österrik", function() {deepEqual( Stem("österrike"), "österrik");});
test("östersjön -> östersjön", function() {deepEqual( Stem("östersjön"), "östersjön");});
test("östersjöprovinsernas -> östersjöprovins", function() {deepEqual( Stem("östersjöprovinsernas"), "östersjöprovins");});
test("östligt -> öst", function() {deepEqual( Stem("östligt"), "öst");});
test("östra -> östr", function() {deepEqual( Stem("östra"), "östr");});
test("öt -> öt", function() {deepEqual( Stem("öt"), "öt");});
test("öva -> öva", function() {deepEqual( Stem("öva"), "öva");});
test("övade -> övad", function() {deepEqual( Stem("övade"), "övad");});
test("övar -> övar", function() {deepEqual( Stem("övar"), "övar");});
test("övat -> övat", function() {deepEqual( Stem("övat"), "övat");});
test("övcr -> övcr", function() {deepEqual( Stem("övcr"), "övcr");});
test("över -> över", function() {deepEqual( Stem("över"), "över");});
test("överallt -> överallt", function() {deepEqual( Stem("överallt"), "överallt");});
test("överbefolkades -> överbefolk", function() {deepEqual( Stem("överbefolkades"), "överbefolk");});
test("överbevisa -> överbevis", function() {deepEqual( Stem("överbevisa"), "överbevis");});
test("överbevisar -> överbevis", function() {deepEqual( Stem("överbevisar"), "överbevis");});
test("överblivna -> överblivn", function() {deepEqual( Stem("överblivna"), "överblivn");});
test("överbryggad -> överbrygg", function() {deepEqual( Stem("överbryggad"), "överbrygg");});
test("överdrag -> överdrag", function() {deepEqual( Stem("överdrag"), "överdrag");});
test("överdraget -> överdraget", function() {deepEqual( Stem("överdraget"), "överdraget");});
test("överdriven -> överdriv", function() {deepEqual( Stem("överdriven"), "överdriv");});
test("överdriver -> överdriv", function() {deepEqual( Stem("överdriver"), "överdriv");});
test("överdrivet -> överdrivet", function() {deepEqual( Stem("överdrivet"), "överdrivet");});
test("överdrivna -> överdrivn", function() {deepEqual( Stem("överdrivna"), "överdrivn");});
test("överdrogs -> överdrog", function() {deepEqual( Stem("överdrogs"), "överdrog");});
test("överdådig -> överdåd", function() {deepEqual( Stem("överdådig"), "överdåd");});
test("överdådigt -> överdåd", function() {deepEqual( Stem("överdådigt"), "överdåd");});
test("överens -> över", function() {deepEqual( Stem("överens"), "över");});
test("överenskommelse -> överenskomm", function() {deepEqual( Stem("överenskommelse"), "överenskomm");});
test("överenskommelsen -> överenskomm", function() {deepEqual( Stem("överenskommelsen"), "överenskomm");});
test("överenskommet -> överenskommet", function() {deepEqual( Stem("överenskommet"), "överenskommet");});
test("överenskommit -> överenskommit", function() {deepEqual( Stem("överenskommit"), "överenskommit");});
test("överensstämde -> överensstämd", function() {deepEqual( Stem("överensstämde"), "överensstämd");});
test("överensstämma -> överensstämm", function() {deepEqual( Stem("överensstämma"), "överensstämm");});
test("överensstämmande -> överensstämm", function() {deepEqual( Stem("överensstämmande"), "överensstämm");});
test("överensstämmelse -> överensstämm", function() {deepEqual( Stem("överensstämmelse"), "överensstämm");});
test("överensstämmer -> överensstämm", function() {deepEqual( Stem("överensstämmer"), "överensstämm");});
test("överfallit -> överfallit", function() {deepEqual( Stem("överfallit"), "överfallit");});
test("överfarten -> överfart", function() {deepEqual( Stem("överfarten"), "överfart");});
test("överfarter -> överfart", function() {deepEqual( Stem("överfarter"), "överfart");});
test("överflyglad -> överflygl", function() {deepEqual( Stem("överflyglad"), "överflygl");});
test("överflöd -> överflöd", function() {deepEqual( Stem("överflöd"), "överflöd");});
test("överflödande -> överflöd", function() {deepEqual( Stem("överflödande"), "överflöd");});
test("överflödig -> överflöd", function() {deepEqual( Stem("överflödig"), "överflöd");});
test("överflödiga -> överflöd", function() {deepEqual( Stem("överflödiga"), "överflöd");});
test("överflödigt -> överflöd", function() {deepEqual( Stem("överflödigt"), "överflöd");});
test("överfor -> överf", function() {deepEqual( Stem("överfor"), "överf");});
test("överfull -> överfull", function() {deepEqual( Stem("överfull"), "överfull");});
test("överfullt -> överfull", function() {deepEqual( Stem("överfullt"), "överfull");});
test("överfölls -> överföll", function() {deepEqual( Stem("överfölls"), "överföll");});
test("övergav -> övergav", function() {deepEqual( Stem("övergav"), "övergav");});
test("överge -> överg", function() {deepEqual( Stem("överge"), "överg");});
test("överger -> överg", function() {deepEqual( Stem("överger"), "överg");});
test("övergick -> övergick", function() {deepEqual( Stem("övergick"), "övergick");});
test("övergiva -> övergiv", function() {deepEqual( Stem("övergiva"), "övergiv");});
test("övergiven -> övergiv", function() {deepEqual( Stem("övergiven"), "övergiv");});
test("övergivet -> övergivet", function() {deepEqual( Stem("övergivet"), "övergivet");});
test("övergivit -> övergivit", function() {deepEqual( Stem("övergivit"), "övergivit");});
test("övergivna -> övergivn", function() {deepEqual( Stem("övergivna"), "övergivn");});
test("övergjutas -> övergjut", function() {deepEqual( Stem("övergjutas"), "övergjut");});
test("övergjutits -> övergjutit", function() {deepEqual( Stem("övergjutits"), "övergjutit");});
test("övergula -> övergul", function() {deepEqual( Stem("övergula"), "övergul");});
test("övergå -> övergå", function() {deepEqual( Stem("övergå"), "övergå");});
test("övergångar -> övergång", function() {deepEqual( Stem("övergångar"), "övergång");});
test("övergår -> övergår", function() {deepEqual( Stem("övergår"), "övergår");});
test("övergått -> övergåt", function() {deepEqual( Stem("övergått"), "övergåt");});
test("överhopad -> överhop", function() {deepEqual( Stem("överhopad"), "överhop");});
test("överhopades -> överhop", function() {deepEqual( Stem("överhopades"), "överhop");});
test("överhopar -> överhop", function() {deepEqual( Stem("överhopar"), "överhop");});
test("överhängande -> överhäng", function() {deepEqual( Stem("överhängande"), "överhäng");});
test("överhöljda -> överhöljd", function() {deepEqual( Stem("överhöljda"), "överhöljd");});
test("överhöljt -> överhöljt", function() {deepEqual( Stem("överhöljt"), "överhöljt");});
test("överkäken -> överkäk", function() {deepEqual( Stem("överkäken"), "överkäk");});
test("överkörd -> överkörd", function() {deepEqual( Stem("överkörd"), "överkörd");});
test("överlagt -> överlag", function() {deepEqual( Stem("överlagt"), "överlag");});
test("överlapp -> överlapp", function() {deepEqual( Stem("överlapp"), "överlapp");});
test("överlastad -> överlast", function() {deepEqual( Stem("överlastad"), "överlast");});
test("överleva -> överlev", function() {deepEqual( Stem("överleva"), "överlev");});
test("överlyckliga -> överlyck", function() {deepEqual( Stem("överlyckliga"), "överlyck");});
test("överlägga -> överlägg", function() {deepEqual( Stem("överlägga"), "överlägg");});
test("överläggning -> överläggning", function() {deepEqual( Stem("överläggning"), "överläggning");});
test("överläggningar -> överläggning", function() {deepEqual( Stem("överläggningar"), "överläggning");});
test("överlägsenhet -> överlägsen", function() {deepEqual( Stem("överlägsenhet"), "överlägsen");});
test("överlägsna -> överlägsn", function() {deepEqual( Stem("överlägsna"), "överlägsn");});
test("överläkarens -> överläk", function() {deepEqual( Stem("överläkarens"), "överläk");});
test("överlämna -> överlämn", function() {deepEqual( Stem("överlämna"), "överlämn");});
test("överlämnad -> överlämn", function() {deepEqual( Stem("överlämnad"), "överlämn");});
test("överlämnade -> överlämn", function() {deepEqual( Stem("överlämnade"), "överlämn");});
test("överlämnar -> överlämn", function() {deepEqual( Stem("överlämnar"), "överlämn");});
test("överlämnat -> överlämn", function() {deepEqual( Stem("överlämnat"), "överlämn");});
test("överlämnats -> överlämnat", function() {deepEqual( Stem("överlämnats"), "överlämnat");});
test("överläpp -> överläpp", function() {deepEqual( Stem("överläpp"), "överläpp");});
test("överläppen -> överläpp", function() {deepEqual( Stem("överläppen"), "överläpp");});
test("överlåtit -> överlåtit", function() {deepEqual( Stem("överlåtit"), "överlåtit");});
test("överman -> överman", function() {deepEqual( Stem("överman"), "överman");});
test("övermannad -> överman", function() {deepEqual( Stem("övermannad"), "överman");});
test("övermod -> övermod", function() {deepEqual( Stem("övermod"), "övermod");});
test("övermäktiga -> övermäkt", function() {deepEqual( Stem("övermäktiga"), "övermäkt");});
test("övermäktigt -> övermäkt", function() {deepEqual( Stem("övermäktigt"), "övermäkt");});
test("övermålat -> övermål", function() {deepEqual( Stem("övermålat"), "övermål");});
test("övermåttan -> övermåttan", function() {deepEqual( Stem("övermåttan"), "övermåttan");});
test("överordnade -> överordn", function() {deepEqual( Stem("överordnade"), "överordn");});
test("överraska -> överrask", function() {deepEqual( Stem("överraska"), "överrask");});
test("överraskad -> överrask", function() {deepEqual( Stem("överraskad"), "överrask");});
test("överraskadc -> överraskadc", function() {deepEqual( Stem("överraskadc"), "överraskadc");});
test("överraskade -> överrask", function() {deepEqual( Stem("överraskade"), "överrask");});
test("överraskades -> överrask", function() {deepEqual( Stem("överraskades"), "överrask");});
test("överraskande -> överrask", function() {deepEqual( Stem("överraskande"), "överrask");});
test("överraskat -> överrask", function() {deepEqual( Stem("överraskat"), "överrask");});
test("överraskning -> överraskning", function() {deepEqual( Stem("överraskning"), "överraskning");});
test("överraskningar -> överraskning", function() {deepEqual( Stem("överraskningar"), "överraskning");});
test("överraskningen -> överraskning", function() {deepEqual( Stem("överraskningen"), "överraskning");});
test("överraskningspappor -> överraskningspapp", function() {deepEqual( Stem("överraskningspappor"), "överraskningspapp");});
test("överrock -> överrock", function() {deepEqual( Stem("överrock"), "överrock");});
test("överräknade -> överräkn", function() {deepEqual( Stem("överräknade"), "överräkn");});
test("överräknandet -> överräkn", function() {deepEqual( Stem("överräknandet"), "överräkn");});
test("överrösta -> överröst", function() {deepEqual( Stem("överrösta"), "överröst");});
test("översatta -> översat", function() {deepEqual( Stem("översatta"), "översat");});
test("överseendets -> överseendet", function() {deepEqual( Stem("överseendets"), "överseendet");});
test("översh -> översh", function() {deepEqual( Stem("översh"), "översh");});
test("översittarmin -> översittarmin", function() {deepEqual( Stem("översittarmin"), "översittarmin");});
test("överskattar -> överskat", function() {deepEqual( Stem("överskattar"), "överskat");});
test("överskott -> överskot", function() {deepEqual( Stem("överskott"), "överskot");});
test("överskrider -> överskrid", function() {deepEqual( Stem("överskrider"), "överskrid");});
test("överskridit -> överskridit", function() {deepEqual( Stem("överskridit"), "överskridit");});
test("överskrift -> överskrift", function() {deepEqual( Stem("överskrift"), "överskrift");});
test("överskådande -> överskåd", function() {deepEqual( Stem("överskådande"), "överskåd");});
test("översta -> överst", function() {deepEqual( Stem("översta"), "överst");});
test("översteg -> översteg", function() {deepEqual( Stem("översteg"), "översteg");});
test("överstelöjtnant -> överstelöjtnant", function() {deepEqual( Stem("överstelöjtnant"), "överstelöjtnant");});
test("överstelöjtnanten -> överstelöjtnant", function() {deepEqual( Stem("överstelöjtnanten"), "överstelöjtnant");});
test("överstiger -> överst", function() {deepEqual( Stem("överstiger"), "överst");});
test("överstinnan -> överstinnan", function() {deepEqual( Stem("överstinnan"), "överstinnan");});
test("överströmmande -> överströmm", function() {deepEqual( Stem("överströmmande"), "överströmm");});
test("överstrött -> överströt", function() {deepEqual( Stem("överstrött"), "överströt");});
test("översvalla -> översvall", function() {deepEqual( Stem("översvalla"), "översvall");});
test("översvallande -> översvall", function() {deepEqual( Stem("översvallande"), "översvall");});
test("översvämmades -> översvämm", function() {deepEqual( Stem("översvämmades"), "översvämm");});
test("översvämning -> översvämning", function() {deepEqual( Stem("översvämning"), "översvämning");});
test("översättning -> översättning", function() {deepEqual( Stem("översättning"), "översättning");});
test("övertaga -> övertag", function() {deepEqual( Stem("övertaga"), "övertag");});
test("övertala -> övertal", function() {deepEqual( Stem("övertala"), "övertal");});
test("övertalade -> övertal", function() {deepEqual( Stem("övertalade"), "övertal");});
test("övertalande -> övertal", function() {deepEqual( Stem("övertalande"), "övertal");});
test("överträffar -> överträff", function() {deepEqual( Stem("överträffar"), "överträff");});
test("övertvgade -> övertvg", function() {deepEqual( Stem("övertvgade"), "övertvg");});
test("övertvgelse -> övertvg", function() {deepEqual( Stem("övertvgelse"), "övertvg");});
test("övertyg -> övertyg", function() {deepEqual( Stem("övertyg"), "övertyg");});
test("övertyga -> övertyg", function() {deepEqual( Stem("övertyga"), "övertyg");});
test("övertygad -> övertyg", function() {deepEqual( Stem("övertygad"), "övertyg");});
test("övertygade -> övertyg", function() {deepEqual( Stem("övertygade"), "övertyg");});
test("övertygat -> övertyg", function() {deepEqual( Stem("övertygat"), "övertyg");});
test("övertygelse -> övertyg", function() {deepEqual( Stem("övertygelse"), "övertyg");});
test("övertygelsen -> övertyg", function() {deepEqual( Stem("övertygelsen"), "övertyg");});
test("övertänkt -> övertänk", function() {deepEqual( Stem("övertänkt"), "övertänk");});
test("övervann -> övervan", function() {deepEqual( Stem("övervann"), "övervan");});
test("övervar -> överv", function() {deepEqual( Stem("övervar"), "överv");});
test("övervikt -> övervik", function() {deepEqual( Stem("övervikt"), "övervik");});
test("övervinna -> övervin", function() {deepEqual( Stem("övervinna"), "övervin");});
test("övervinnande -> övervin", function() {deepEqual( Stem("övervinnande"), "övervin");});
test("övervunna -> övervun", function() {deepEqual( Stem("övervunna"), "övervun");});
test("övervunnen -> övervun", function() {deepEqual( Stem("övervunnen"), "övervun");});
test("övervunnit -> övervunnit", function() {deepEqual( Stem("övervunnit"), "övervunnit");});
test("överväga -> överväg", function() {deepEqual( Stem("överväga"), "överväg");});
test("övervägande -> överväg", function() {deepEqual( Stem("övervägande"), "överväg");});
test("övervägde -> överväg", function() {deepEqual( Stem("övervägde"), "överväg");});
test("övervägt -> överväg", function() {deepEqual( Stem("övervägt"), "överväg");});
test("överväldigad -> överväld", function() {deepEqual( Stem("överväldigad"), "överväld");});
test("överändakastad -> överändakast", function() {deepEqual( Stem("överändakastad"), "överändakast");});
test("överändakastade -> överändakast", function() {deepEqual( Stem("överändakastade"), "överändakast");});
test("övning -> övning", function() {deepEqual( Stem("övning"), "övning");});
test("övningen -> övning", function() {deepEqual( Stem("övningen"), "övning");});
test("övre -> övr", function() {deepEqual( Stem("övre"), "övr");});
test("övriga -> övr", function() {deepEqual( Stem("övriga"), "övr");});
test("övrigt -> övr", function() {deepEqual( Stem("övrigt"), "övr");});
test("öändligt -> öänd", function() {deepEqual( Stem("öändligt"), "öänd");});
