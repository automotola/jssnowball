QUnit.config.hidepassed = true;
var Stem = snowballFactory.newStemmer('danish').stem;
test("a -> a", function() {deepEqual( Stem("a"), "a");});
test("aab -> aab", function() {deepEqual( Stem("aab"), "aab");});
test("aabenbaringen -> aabenbaring", function() {deepEqual( Stem("aabenbaringen"), "aabenbaring");});
test("ab -> ab", function() {deepEqual( Stem("ab"), "ab");});
test("abaddon -> abaddon", function() {deepEqual( Stem("abaddon"), "abaddon");});
test("abagta -> abagta", function() {deepEqual( Stem("abagta"), "abagta");});
test("aban -> aban", function() {deepEqual( Stem("aban"), "aban");});
test("abana -> abana", function() {deepEqual( Stem("abana"), "abana");});
test("abarim -> abarim", function() {deepEqual( Stem("abarim"), "abarim");});
test("abarimbjergene -> abarimbjerg", function() {deepEqual( Stem("abarimbjergene"), "abarimbjerg");});
test("abarimbjerget -> abarimbjerg", function() {deepEqual( Stem("abarimbjerget"), "abarimbjerg");});
test("abba -> abba", function() {deepEqual( Stem("abba"), "abba");});
test("abda -> abda", function() {deepEqual( Stem("abda"), "abda");});
test("abdas -> abda", function() {deepEqual( Stem("abdas"), "abda");});
test("abdeels -> abdeel", function() {deepEqual( Stem("abdeels"), "abdeel");});
test("abdi -> abdi", function() {deepEqual( Stem("abdi"), "abdi");});
test("abdiel -> abdiel", function() {deepEqual( Stem("abdiel"), "abdiel");});
test("abdis -> abdis", function() {deepEqual( Stem("abdis"), "abdis");});
test("abdon -> abdon", function() {deepEqual( Stem("abdon"), "abdon");});
test("abed -> abed", function() {deepEqual( Stem("abed"), "abed");});
test("abel -> abel", function() {deepEqual( Stem("abel"), "abel");});
test("abels -> abel", function() {deepEqual( Stem("abels"), "abel");});
test("aber -> aber", function() {deepEqual( Stem("aber"), "aber");});
test("abi -> abi", function() {deepEqual( Stem("abi"), "abi");});
test("abia -> abia", function() {deepEqual( Stem("abia"), "abia");});
test("abias -> abia", function() {deepEqual( Stem("abias"), "abia");});
test("abiasaf -> abiasaf", function() {deepEqual( Stem("abiasaf"), "abiasaf");});
test("abiathar -> abiathar", function() {deepEqual( Stem("abiathar"), "abiathar");});
test("abib -> abib", function() {deepEqual( Stem("abib"), "abib");});
test("abiba -> abiba", function() {deepEqual( Stem("abiba"), "abiba");});
test("abibajils -> abibajil", function() {deepEqual( Stem("abibajils"), "abibajil");});
test("abibu -> abibu", function() {deepEqual( Stem("abibu"), "abibu");});
test("abida -> abida", function() {deepEqual( Stem("abida"), "abida");});
test("abidan -> abidan", function() {deepEqual( Stem("abidan"), "abidan");});
test("abidans -> abidan", function() {deepEqual( Stem("abidans"), "abidan");});
test("abiel -> abiel", function() {deepEqual( Stem("abiel"), "abiel");});
test("abiezer -> abiez", function() {deepEqual( Stem("abiezer"), "abiez");});
test("abiezers -> abiez", function() {deepEqual( Stem("abiezers"), "abiez");});
test("abiezriten -> abiezrit", function() {deepEqual( Stem("abiezriten"), "abiezrit");});
test("abiezriterne -> abiezrit", function() {deepEqual( Stem("abiezriterne"), "abiezrit");});
test("abiezriternes -> abiezrit", function() {deepEqual( Stem("abiezriternes"), "abiezrit");});
test("abigajil -> abigajil", function() {deepEqual( Stem("abigajil"), "abigajil");});
test("abih -> abih", function() {deepEqual( Stem("abih"), "abih");});
test("abihajil -> abihajil", function() {deepEqual( Stem("abihajil"), "abihajil");});
test("abihajils -> abihajil", function() {deepEqual( Stem("abihajils"), "abihajil");});
test("abihu -> abihu", function() {deepEqual( Stem("abihu"), "abihu");});
test("abija -> abija", function() {deepEqual( Stem("abija"), "abija");});
test("abijas -> abija", function() {deepEqual( Stem("abijas"), "abija");});
test("abilene -> abil", function() {deepEqual( Stem("abilene"), "abil");});
test("abimael -> abimael", function() {deepEqual( Stem("abimael"), "abimael");});
test("abiman -> abiman", function() {deepEqual( Stem("abiman"), "abiman");});
test("abimelek -> abimelek", function() {deepEqual( Stem("abimelek"), "abimelek");});
test("abimeleks -> abimelek", function() {deepEqual( Stem("abimeleks"), "abimelek");});
test("abimelelk -> abimelelk", function() {deepEqual( Stem("abimelelk"), "abimelelk");});
test("abinadab -> abinadab", function() {deepEqual( Stem("abinadab"), "abinadab");});
test("abinadabs -> abinadab", function() {deepEqual( Stem("abinadabs"), "abinadab");});
test("abiner -> abin", function() {deepEqual( Stem("abiner"), "abin");});
test("abinoams -> abinoam", function() {deepEqual( Stem("abinoams"), "abinoam");});
test("abiram -> abiram", function() {deepEqual( Stem("abiram"), "abiram");});
test("abirams -> abiram", function() {deepEqual( Stem("abirams"), "abiram");});
test("abisj -> abisj", function() {deepEqual( Stem("abisj"), "abisj");});
test("abisjag -> abisjag", function() {deepEqual( Stem("abisjag"), "abisjag");});
test("abisjaj -> abisjaj", function() {deepEqual( Stem("abisjaj"), "abisjaj");});
test("abisjajog -> abisjajog", function() {deepEqual( Stem("abisjajog"), "abisjajog");});
test("abisjua -> abisjua", function() {deepEqual( Stem("abisjua"), "abisjua");});
test("abisjur -> abisjur", function() {deepEqual( Stem("abisjur"), "abisjur");});
test("abisjurs -> abisjur", function() {deepEqual( Stem("abisjurs"), "abisjur");});
test("abital -> abital", function() {deepEqual( Stem("abital"), "abital");});
test("abitub -> abitub", function() {deepEqual( Stem("abitub"), "abitub");});
test("abitubs -> abitub", function() {deepEqual( Stem("abitubs"), "abitub");});
test("abiud -> abiud", function() {deepEqual( Stem("abiud"), "abiud");});
test("abne -> abn", function() {deepEqual( Stem("abne"), "abn");});
test("abner -> abn", function() {deepEqual( Stem("abner"), "abn");});
test("abners -> abn", function() {deepEqual( Stem("abners"), "abn");});
test("abrabams -> abrabam", function() {deepEqual( Stem("abrabams"), "abrabam");});
test("abraham -> abraham", function() {deepEqual( Stem("abraham"), "abraham");});
test("abrahams -> abraham", function() {deepEqual( Stem("abrahams"), "abraham");});
test("abram -> abram", function() {deepEqual( Stem("abram"), "abram");});
test("abrams -> abram", function() {deepEqual( Stem("abrams"), "abram");});
test("abrek -> abrek", function() {deepEqual( Stem("abrek"), "abrek");});
test("abrimelek -> abrimelek", function() {deepEqual( Stem("abrimelek"), "abrimelek");});
test("abrona -> abrona", function() {deepEqual( Stem("abrona"), "abrona");});
test("abrændes -> abrænd", function() {deepEqual( Stem("abrændes"), "abrænd");});
test("absalom -> absalom", function() {deepEqual( Stem("absalom"), "absalom");});
test("absaloms -> absalom", function() {deepEqual( Stem("absaloms"), "absalom");});
test("absalon -> absalon", function() {deepEqual( Stem("absalon"), "absalon");});
test("absalons -> absalon", function() {deepEqual( Stem("absalons"), "absalon");});
test("absjaj -> absjaj", function() {deepEqual( Stem("absjaj"), "absjaj");});
test("ad -> ad", function() {deepEqual( Stem("ad"), "ad");});
test("ada -> ada", function() {deepEqual( Stem("ada"), "ada");});
test("adad -> adad", function() {deepEqual( Stem("adad"), "adad");});
test("adaj -> adaj", function() {deepEqual( Stem("adaj"), "adaj");});
test("adaja -> adaja", function() {deepEqual( Stem("adaja"), "adaja");});
test("adajas -> adaja", function() {deepEqual( Stem("adajas"), "adaja");});
test("adalja -> adalja", function() {deepEqual( Stem("adalja"), "adalja");});
test("adam -> adam", function() {deepEqual( Stem("adam"), "adam");});
test("adama -> adama", function() {deepEqual( Stem("adama"), "adama");});
test("adamas -> adama", function() {deepEqual( Stem("adamas"), "adama");});
test("adami -> adami", function() {deepEqual( Stem("adami"), "adami");});
test("adams -> adam", function() {deepEqual( Stem("adams"), "adam");});
test("adan -> adan", function() {deepEqual( Stem("adan"), "adan");});
test("adans -> adan", function() {deepEqual( Stem("adans"), "adan");});
test("adar -> adar", function() {deepEqual( Stem("adar"), "adar");});
test("adas -> ada", function() {deepEqual( Stem("adas"), "ada");});
test("adbe -> adb", function() {deepEqual( Stem("adbe"), "adb");});
test("addan -> addan", function() {deepEqual( Stem("addan"), "addan");});
test("addar -> addar", function() {deepEqual( Stem("addar"), "addar");});
test("addis -> addis", function() {deepEqual( Stem("addis"), "addis");});
test("addon -> addon", function() {deepEqual( Stem("addon"), "addon");});
test("adel -> adel", function() {deepEqual( Stem("adel"), "adel");});
test("adelig -> ade", function() {deepEqual( Stem("adelig"), "ade");});
test("adfærd -> adfærd", function() {deepEqual( Stem("adfærd"), "adfærd");});
test("adgang -> adgang", function() {deepEqual( Stem("adgang"), "adgang");});
test("adgangen -> adgang", function() {deepEqual( Stem("adgangen"), "adgang");});
test("adiel -> adiel", function() {deepEqual( Stem("adiel"), "adiel");});
test("adiels -> adiel", function() {deepEqual( Stem("adiels"), "adiel");});
test("adin -> adin", function() {deepEqual( Stem("adin"), "adin");});
test("adina -> adina", function() {deepEqual( Stem("adina"), "adina");});
test("adins -> adin", function() {deepEqual( Stem("adins"), "adin");});
test("aditajim -> aditajim", function() {deepEqual( Stem("aditajim"), "aditajim");});
test("adja -> adja", function() {deepEqual( Stem("adja"), "adja");});
test("adlajs -> adlaj", function() {deepEqual( Stem("adlajs"), "adlaj");});
test("adlyd -> adlyd", function() {deepEqual( Stem("adlyd"), "adlyd");});
test("adlyde -> adlyd", function() {deepEqual( Stem("adlyde"), "adlyd");});
test("adlyder -> adlyd", function() {deepEqual( Stem("adlyder"), "adlyd");});
test("adlydt -> adlyd", function() {deepEqual( Stem("adlydt"), "adlyd");});
test("adlød -> adlød", function() {deepEqual( Stem("adlød"), "adlød");});
test("adløde -> adlød", function() {deepEqual( Stem("adløde"), "adlød");});
test("adma -> adma", function() {deepEqual( Stem("adma"), "adma");});
test("admas -> adma", function() {deepEqual( Stem("admas"), "adma");});
test("admata -> admata", function() {deepEqual( Stem("admata"), "admata");});
test("adna -> adna", function() {deepEqual( Stem("adna"), "adna");});
test("adonibezek -> adonibezek", function() {deepEqual( Stem("adonibezek"), "adonibezek");});
test("adonija -> adonija", function() {deepEqual( Stem("adonija"), "adonija");});
test("adonijas -> adonija", function() {deepEqual( Stem("adonijas"), "adonija");});
test("adonikams -> adonikam", function() {deepEqual( Stem("adonikams"), "adonikam");});
test("adoniram -> adoniram", function() {deepEqual( Stem("adoniram"), "adoniram");});
test("adonizedek -> adonizedek", function() {deepEqual( Stem("adonizedek"), "adonizedek");});
test("adorajim -> adorajim", function() {deepEqual( Stem("adorajim"), "adorajim");});
test("adrammelek -> adrammelek", function() {deepEqual( Stem("adrammelek"), "adrammelek");});
test("adramyttisk -> adramyttisk", function() {deepEqual( Stem("adramyttisk"), "adramyttisk");});
test("adriatiske -> adriatisk", function() {deepEqual( Stem("adriatiske"), "adriatisk");});
test("adriel -> adriel", function() {deepEqual( Stem("adriel"), "adriel");});
test("adskille -> adskil", function() {deepEqual( Stem("adskille"), "adskil");});
test("adskilt -> adskilt", function() {deepEqual( Stem("adskilt"), "adskilt");});
test("adsplit -> adsplit", function() {deepEqual( Stem("adsplit"), "adsplit");});
test("adsplitte -> adsplit", function() {deepEqual( Stem("adsplitte"), "adsplit");});
test("adsplittede -> adsplitted", function() {deepEqual( Stem("adsplittede"), "adsplitted");});
test("adsplittedes -> adsplitted", function() {deepEqual( Stem("adsplittedes"), "adsplitted");});
test("adsplitter -> adsplit", function() {deepEqual( Stem("adsplitter"), "adsplit");});
test("adsplittet -> adsplit", function() {deepEqual( Stem("adsplittet"), "adsplit");});
test("adspredelse -> adspred", function() {deepEqual( Stem("adspredelse"), "adspred");});
test("adspredelsen -> adspred", function() {deepEqual( Stem("adspredelsen"), "adspred");});
test("adspreder -> adspred", function() {deepEqual( Stem("adspreder"), "adspred");});
test("adspredes -> adspred", function() {deepEqual( Stem("adspredes"), "adspred");});
test("adspredt -> adspred", function() {deepEqual( Stem("adspredt"), "adspred");});
test("adspredte -> adspred", function() {deepEqual( Stem("adspredte"), "adspred");});
test("adspredtes -> adspred", function() {deepEqual( Stem("adspredtes"), "adspred");});
test("adspurgt -> adspurg", function() {deepEqual( Stem("adspurgt"), "adspurg");});
test("adspurgte -> adspurg", function() {deepEqual( Stem("adspurgte"), "adspurg");});
test("adspørg -> adspørg", function() {deepEqual( Stem("adspørg"), "adspørg");});
test("adspørge -> adspørg", function() {deepEqual( Stem("adspørge"), "adspørg");});
test("adullam -> adullam", function() {deepEqual( Stem("adullam"), "adullam");});
test("adullams -> adullam", function() {deepEqual( Stem("adullams"), "adullam");});
test("adummimpasset -> adummimpas", function() {deepEqual( Stem("adummimpasset"), "adummimpas");});
test("advare -> advar", function() {deepEqual( Stem("advare"), "advar");});
test("advarede -> advared", function() {deepEqual( Stem("advarede"), "advared");});
test("advarer -> advar", function() {deepEqual( Stem("advarer"), "advar");});
test("advares -> advar", function() {deepEqual( Stem("advares"), "advar");});
test("advaret -> advar", function() {deepEqual( Stem("advaret"), "advar");});
test("advarsel -> advarsel", function() {deepEqual( Stem("advarsel"), "advarsel");});
test("aetaxerxes -> aetaxerx", function() {deepEqual( Stem("aetaxerxes"), "aetaxerx");});
test("aezin -> aezin", function() {deepEqual( Stem("aezin"), "aezin");});
test("af -> af", function() {deepEqual( Stem("af"), "af");});
test("afaldskornet -> afaldskorn", function() {deepEqual( Stem("afaldskornet"), "afaldskorn");});
test("afaresiterne -> afaresit", function() {deepEqual( Stem("afaresiterne"), "afaresit");});
test("afarsatkiterne -> afarsatkit", function() {deepEqual( Stem("afarsatkiterne"), "afarsatkit");});
test("afarsekiterne -> afarsekit", function() {deepEqual( Stem("afarsekiterne"), "afarsekit");});
test("afbarked -> afbarked", function() {deepEqual( Stem("afbarked"), "afbarked");});
test("afbildede -> afbilded", function() {deepEqual( Stem("afbildede"), "afbilded");});
test("afbilder -> afbild", function() {deepEqual( Stem("afbilder"), "afbild");});
test("afbildning -> afbildning", function() {deepEqual( Stem("afbildning"), "afbildning");});
test("afbildningerne -> afbildning", function() {deepEqual( Stem("afbildningerne"), "afbildning");});
test("afbillede -> afbilled", function() {deepEqual( Stem("afbillede"), "afbilled");});
test("afbrudte -> afbrud", function() {deepEqual( Stem("afbrudte"), "afbrud");});
test("afbrænde -> afbrænd", function() {deepEqual( Stem("afbrænde"), "afbrænd");});
test("afbrændes -> afbrænd", function() {deepEqual( Stem("afbrændes"), "afbrænd");});
test("afdeling -> afdeling", function() {deepEqual( Stem("afdeling"), "afdeling");});
test("afdelinger -> afdeling", function() {deepEqual( Stem("afdelinger"), "afdeling");});
test("afdækker -> afdæk", function() {deepEqual( Stem("afdækker"), "afdæk");});
test("afdød -> afdød", function() {deepEqual( Stem("afdød"), "afdød");});
test("afdøde -> afdød", function() {deepEqual( Stem("afdøde"), "afdød");});
test("afdødes -> afdød", function() {deepEqual( Stem("afdødes"), "afdød");});
test("afefterkommerne -> afefterkom", function() {deepEqual( Stem("afefterkommerne"), "afefterkom");});
test("afek -> afek", function() {deepEqual( Stem("afek"), "afek");});
test("afeka -> afeka", function() {deepEqual( Stem("afeka"), "afeka");});
test("affalde -> affald", function() {deepEqual( Stem("affalde"), "affald");});
test("affat -> affat", function() {deepEqual( Stem("affat"), "affat");});
test("affatte -> affat", function() {deepEqual( Stem("affatte"), "affat");});
test("affattede -> affatted", function() {deepEqual( Stem("affattede"), "affatted");});
test("affattedes -> affatted", function() {deepEqual( Stem("affattedes"), "affatted");});
test("affattet -> affat", function() {deepEqual( Stem("affattet"), "affat");});
test("affen -> aff", function() {deepEqual( Stem("affen"), "aff");});
test("affenerne -> affen", function() {deepEqual( Stem("affenerne"), "affen");});
test("affolke -> affolk", function() {deepEqual( Stem("affolke"), "affolk");});
test("affolkede -> affolked", function() {deepEqual( Stem("affolkede"), "affolked");});
test("affældig -> affæld", function() {deepEqual( Stem("affældig"), "affæld");});
test("affør -> affør", function() {deepEqual( Stem("affør"), "affør");});
test("afføre -> affør", function() {deepEqual( Stem("afføre"), "affør");});
test("afførelsen -> affør", function() {deepEqual( Stem("afførelsen"), "affør");});
test("afført -> afført", function() {deepEqual( Stem("afført"), "afført");});
test("afførte -> afført", function() {deepEqual( Stem("afførte"), "afført");});
test("afgav -> afgav", function() {deepEqual( Stem("afgav"), "afgav");});
test("afgave -> afgav", function() {deepEqual( Stem("afgave"), "afgav");});
test("afgift -> afgift", function() {deepEqual( Stem("afgift"), "afgift");});
test("afgiften -> afgift", function() {deepEqual( Stem("afgiften"), "afgift");});
test("afgifter -> afgift", function() {deepEqual( Stem("afgifter"), "afgift");});
test("afgifterne -> afgift", function() {deepEqual( Stem("afgifterne"), "afgift");});
test("afgiv -> afgiv", function() {deepEqual( Stem("afgiv"), "afgiv");});
test("afgive -> afgiv", function() {deepEqual( Stem("afgive"), "afgiv");});
test("afgjorde -> afgjord", function() {deepEqual( Stem("afgjorde"), "afgjord");});
test("afgjort -> afgjort", function() {deepEqual( Stem("afgjort"), "afgjort");});
test("afgmødeoffer -> afgmødeof", function() {deepEqual( Stem("afgmødeoffer"), "afgmødeof");});
test("afgnaver -> afgnav", function() {deepEqual( Stem("afgnaver"), "afgnav");});
test("afgrund -> afgrund", function() {deepEqual( Stem("afgrund"), "afgrund");});
test("afgrunden -> afgrund", function() {deepEqual( Stem("afgrunden"), "afgrund");});
test("afgrundens -> afgrund", function() {deepEqual( Stem("afgrundens"), "afgrund");});
test("afgræsser -> afgræs", function() {deepEqual( Stem("afgræsser"), "afgræs");});
test("afgrøde -> afgrød", function() {deepEqual( Stem("afgrøde"), "afgrød");});
test("afgrøden -> afgrød", function() {deepEqual( Stem("afgrøden"), "afgrød");});
test("afgrødens -> afgrød", function() {deepEqual( Stem("afgrødens"), "afgrød");});
test("afgrødeoffer -> afgrødeof", function() {deepEqual( Stem("afgrødeoffer"), "afgrødeof");});
test("afgrødeofferet -> afgrødeof", function() {deepEqual( Stem("afgrødeofferet"), "afgrødeof");});
test("afgrødeofferets -> afgrødeof", function() {deepEqual( Stem("afgrødeofferets"), "afgrødeof");});
test("afgrødeoffergave -> afgrødeoffergav", function() {deepEqual( Stem("afgrødeoffergave"), "afgrødeoffergav");});
test("afgrødeoffret -> afgrødeoffr", function() {deepEqual( Stem("afgrødeoffret"), "afgrødeoffr");});
test("afgrødeofre -> afgrødeofr", function() {deepEqual( Stem("afgrødeofre"), "afgrødeofr");});
test("afgrødeofrene -> afgrødeofr", function() {deepEqual( Stem("afgrødeofrene"), "afgrødeofr");});
test("afgrøder -> afgrød", function() {deepEqual( Stem("afgrøder"), "afgrød");});
test("afgrøderne -> afgrød", function() {deepEqual( Stem("afgrøderne"), "afgrød");});
test("afgud -> afgud", function() {deepEqual( Stem("afgud"), "afgud");});
test("afguder -> afgud", function() {deepEqual( Stem("afguder"), "afgud");});
test("afguderne -> afgud", function() {deepEqual( Stem("afguderne"), "afgud");});
test("afgudernes -> afgud", function() {deepEqual( Stem("afgudernes"), "afgud");});
test("afgudsbillede -> afgudsbilled", function() {deepEqual( Stem("afgudsbillede"), "afgudsbilled");});
test("afgudsbilleder -> afgudsbilled", function() {deepEqual( Stem("afgudsbilleder"), "afgudsbilled");});
test("afgudsbillederne -> afgudsbilled", function() {deepEqual( Stem("afgudsbillederne"), "afgudsbilled");});
test("afgudsbilleders -> afgudsbilled", function() {deepEqual( Stem("afgudsbilleders"), "afgudsbilled");});
test("afgudsbrøde -> afgudsbrød", function() {deepEqual( Stem("afgudsbrøde"), "afgudsbrød");});
test("afgudsdyrkelse -> afgudsdyrk", function() {deepEqual( Stem("afgudsdyrkelse"), "afgudsdyrk");});
test("afgudsdyrkelsen -> afgudsdyrk", function() {deepEqual( Stem("afgudsdyrkelsen"), "afgudsdyrk");});
test("afgudsdyrker -> afgudsdyrk", function() {deepEqual( Stem("afgudsdyrker"), "afgudsdyrk");});
test("afgudsdyrkere -> afgudsdyrk", function() {deepEqual( Stem("afgudsdyrkere"), "afgudsdyrk");});
test("afgudsdyrkerne -> afgudsdyrk", function() {deepEqual( Stem("afgudsdyrkerne"), "afgudsdyrk");});
test("afgudshus -> afgudshus", function() {deepEqual( Stem("afgudshus"), "afgudshus");});
test("afgudshøjene -> afgudshøj", function() {deepEqual( Stem("afgudshøjene"), "afgudshøj");});
test("afgudsofferkød -> afgudsofferkød", function() {deepEqual( Stem("afgudsofferkød"), "afgudsofferkød");});
test("afgudsofferkødet -> afgudsofferkød", function() {deepEqual( Stem("afgudsofferkødet"), "afgudsofferkød");});
test("afgudsofrene -> afgudsofr", function() {deepEqual( Stem("afgudsofrene"), "afgudsofr");});
test("afgudspræsterne -> afgudspræst", function() {deepEqual( Stem("afgudspræsterne"), "afgudspræst");});
test("afgudspræsternes -> afgudspræst", function() {deepEqual( Stem("afgudspræsternes"), "afgudspræst");});
test("afgudsvane -> afgudsvan", function() {deepEqual( Stem("afgudsvane"), "afgudsvan");});
test("afgøre -> afgør", function() {deepEqual( Stem("afgøre"), "afgør");});
test("afgørelse -> afgør", function() {deepEqual( Stem("afgørelse"), "afgør");});
test("afgørende -> afgør", function() {deepEqual( Stem("afgørende"), "afgør");});
test("afgøres -> afgør", function() {deepEqual( Stem("afgøres"), "afgør");});
test("afhjalp -> afhjalp", function() {deepEqual( Stem("afhjalp"), "afhjalp");});
test("afhjælper -> afhjælp", function() {deepEqual( Stem("afhjælper"), "afhjælp");});
test("afhold -> afhold", function() {deepEqual( Stem("afhold"), "afhold");});
test("afholde -> afhold", function() {deepEqual( Stem("afholde"), "afhold");});
test("afholdende -> afhold", function() {deepEqual( Stem("afholdende"), "afhold");});
test("afholdenhed -> afholden", function() {deepEqual( Stem("afholdenhed"), "afholden");});
test("afholdenheden -> afholden", function() {deepEqual( Stem("afholdenheden"), "afholden");});
test("afholder -> afhold", function() {deepEqual( Stem("afholder"), "afhold");});
test("afholdt -> afhold", function() {deepEqual( Stem("afholdt"), "afhold");});
test("afhugged -> afhugged", function() {deepEqual( Stem("afhugged"), "afhugged");});
test("afhuggede -> afhugged", function() {deepEqual( Stem("afhuggede"), "afhugged");});
test("afhugger -> afhug", function() {deepEqual( Stem("afhugger"), "afhug");});
test("afhugges -> afhug", function() {deepEqual( Stem("afhugges"), "afhug");});
test("afhugget -> afhug", function() {deepEqual( Stem("afhugget"), "afhug");});
test("afhugne -> afhugn", function() {deepEqual( Stem("afhugne"), "afhugn");});
test("afhænger -> afhæng", function() {deepEqual( Stem("afhænger"), "afhæng");});
test("afia -> afia", function() {deepEqual( Stem("afia"), "afia");});
test("afik -> afik", function() {deepEqual( Stem("afik"), "afik");});
test("afjibleam -> afjibleam", function() {deepEqual( Stem("afjibleam"), "afjibleam");});
test("afkald -> afkald", function() {deepEqual( Stem("afkald"), "afkald");});
test("afklip -> afklip", function() {deepEqual( Stem("afklip"), "afklip");});
test("afklippet -> afklip", function() {deepEqual( Stem("afklippet"), "afklip");});
test("afklædes -> afklæd", function() {deepEqual( Stem("afklædes"), "afklæd");});
test("afklædte -> afklæd", function() {deepEqual( Stem("afklædte"), "afklæd");});
test("afkom -> afkom", function() {deepEqual( Stem("afkom"), "afkom");});
test("afkommet -> afkom", function() {deepEqual( Stem("afkommet"), "afkom");});
test("afkoms -> afkom", function() {deepEqual( Stem("afkoms"), "afkom");});
test("afkorted -> afkorted", function() {deepEqual( Stem("afkorted"), "afkorted");});
test("afkortede -> afkorted", function() {deepEqual( Stem("afkortede"), "afkorted");});
test("afkortes -> afkort", function() {deepEqual( Stem("afkortes"), "afkort");});
test("afkortet -> afkort", function() {deepEqual( Stem("afkortet"), "afkort");});
test("afkortning -> afkortning", function() {deepEqual( Stem("afkortning"), "afkortning");});
test("afkroge -> afkrog", function() {deepEqual( Stem("afkroge"), "afkrog");});
test("afkræftes -> afkræft", function() {deepEqual( Stem("afkræftes"), "afkræft");});
test("afkræftet -> afkræft", function() {deepEqual( Stem("afkræftet"), "afkræft");});
test("afkræve -> afkræv", function() {deepEqual( Stem("afkræve"), "afkræv");});
test("afkrævede -> afkræved", function() {deepEqual( Stem("afkrævede"), "afkræved");});
test("afkræver -> afkræv", function() {deepEqual( Stem("afkræver"), "afkræv");});
test("aflagde -> aflag", function() {deepEqual( Stem("aflagde"), "aflag");});
test("aflagt -> aflag", function() {deepEqual( Stem("aflagt"), "aflag");});
test("aflevere -> aflev", function() {deepEqual( Stem("aflevere"), "aflev");});
test("afleverede -> aflev", function() {deepEqual( Stem("afleverede"), "aflev");});
test("aflive -> afliv", function() {deepEqual( Stem("aflive"), "afliv");});
test("aflives -> afliv", function() {deepEqual( Stem("aflives"), "afliv");});
test("aflæg -> aflæg", function() {deepEqual( Stem("aflæg"), "aflæg");});
test("aflægge -> aflæg", function() {deepEqual( Stem("aflægge"), "aflæg");});
test("aflæggelsen -> aflæg", function() {deepEqual( Stem("aflæggelsen"), "aflæg");});
test("aflægger -> aflæg", function() {deepEqual( Stem("aflægger"), "aflæg");});
test("aflægs -> aflæg", function() {deepEqual( Stem("aflægs"), "aflæg");});
test("afløsning -> afløsning", function() {deepEqual( Stem("afløsning"), "afløsning");});
test("afmagt -> afmag", function() {deepEqual( Stem("afmagt"), "afmag");});
test("afmed -> afmed", function() {deepEqual( Stem("afmed"), "afmed");});
test("afmåle -> afmål", function() {deepEqual( Stem("afmåle"), "afmål");});
test("afmålte -> afmålt", function() {deepEqual( Stem("afmålte"), "afmålt");});
test("afmægtig -> afmæg", function() {deepEqual( Stem("afmægtig"), "afmæg");});
test("afmægtige -> afmæg", function() {deepEqual( Stem("afmægtige"), "afmæg");});
test("afmærke -> afmærk", function() {deepEqual( Stem("afmærke"), "afmærk");});
test("afmærked -> afmærked", function() {deepEqual( Stem("afmærked"), "afmærked");});
test("afmærker -> afmærk", function() {deepEqual( Stem("afmærker"), "afmærk");});
test("afolde -> afold", function() {deepEqual( Stem("afolde"), "afold");});
test("afrage -> afrag", function() {deepEqual( Stem("afrage"), "afrag");});
test("afrager -> afrag", function() {deepEqual( Stem("afrager"), "afrag");});
test("afraget -> afrag", function() {deepEqual( Stem("afraget"), "afrag");});
test("afrejse -> afrejs", function() {deepEqual( Stem("afrejse"), "afrejs");});
test("afrevne -> afrevn", function() {deepEqual( Stem("afrevne"), "afrevn");});
test("afriv -> afriv", function() {deepEqual( Stem("afriv"), "afriv");});
test("afriver -> afriv", function() {deepEqual( Stem("afriver"), "afriv");});
test("afryste -> afryst", function() {deepEqual( Stem("afryste"), "afryst");});
test("afsagde -> afsag", function() {deepEqual( Stem("afsagde"), "afsag");});
test("afsatte -> afsat", function() {deepEqual( Stem("afsatte"), "afsat");});
test("afsejle -> afsejl", function() {deepEqual( Stem("afsejle"), "afsejl");});
test("afsejlede -> afsejled", function() {deepEqual( Stem("afsejlede"), "afsejled");});
test("afsides -> afsid", function() {deepEqual( Stem("afsides"), "afsid");});
test("afsige -> afs", function() {deepEqual( Stem("afsige"), "afs");});
test("afsiger -> afs", function() {deepEqual( Stem("afsiger"), "afs");});
test("afsind -> afsind", function() {deepEqual( Stem("afsind"), "afsind");});
test("afsindig -> afsind", function() {deepEqual( Stem("afsindig"), "afsind");});
test("afsindige -> afsind", function() {deepEqual( Stem("afsindige"), "afsind");});
test("afskaf -> afskaf", function() {deepEqual( Stem("afskaf"), "afskaf");});
test("afskaffe -> afskaf", function() {deepEqual( Stem("afskaffe"), "afskaf");});
test("afskaffede -> afskaffed", function() {deepEqual( Stem("afskaffede"), "afskaffed");});
test("afskar -> afskar", function() {deepEqual( Stem("afskar"), "afskar");});
test("afskare -> afskar", function() {deepEqual( Stem("afskare"), "afskar");});
test("afsked -> afsked", function() {deepEqual( Stem("afsked"), "afsked");});
test("afskrift -> afskrift", function() {deepEqual( Stem("afskrift"), "afskrift");});
test("afskriften -> afskrift", function() {deepEqual( Stem("afskriften"), "afskrift");});
test("afskrællede -> afskrælled", function() {deepEqual( Stem("afskrællede"), "afskrælled");});
test("afskudt -> afskud", function() {deepEqual( Stem("afskudt"), "afskud");});
test("afsky -> afsky", function() {deepEqual( Stem("afsky"), "afsky");});
test("afskyede -> afskyed", function() {deepEqual( Stem("afskyede"), "afskyed");});
test("afskyeligt -> afsky", function() {deepEqual( Stem("afskyeligt"), "afsky");});
test("afskyer -> afsky", function() {deepEqual( Stem("afskyer"), "afsky");});
test("afskyr -> afskyr", function() {deepEqual( Stem("afskyr"), "afskyr");});
test("afskåret -> afskår", function() {deepEqual( Stem("afskåret"), "afskår");});
test("afskær -> afskær", function() {deepEqual( Stem("afskær"), "afskær");});
test("afskære -> afskær", function() {deepEqual( Stem("afskære"), "afskær");});
test("afskærer -> afskær", function() {deepEqual( Stem("afskærer"), "afskær");});
test("afslog -> afslog", function() {deepEqual( Stem("afslog"), "afslog");});
test("afslutter -> afslut", function() {deepEqual( Stem("afslutter"), "afslut");});
test("afslå -> afslå", function() {deepEqual( Stem("afslå"), "afslå");});
test("afslået -> afslå", function() {deepEqual( Stem("afslået"), "afslå");});
test("afsløred -> afsløred", function() {deepEqual( Stem("afsløred"), "afsløred");});
test("afslører -> afslør", function() {deepEqual( Stem("afslører"), "afslør");});
test("afsløret -> afslør", function() {deepEqual( Stem("afsløret"), "afslør");});
test("afspærre -> afspær", function() {deepEqual( Stem("afspærre"), "afspær");});
test("afspærrede -> afspærred", function() {deepEqual( Stem("afspærrede"), "afspærred");});
test("afspærret -> afspær", function() {deepEqual( Stem("afspærret"), "afspær");});
test("afstand -> afstand", function() {deepEqual( Stem("afstand"), "afstand");});
test("afstanden -> afstand", function() {deepEqual( Stem("afstanden"), "afstand");});
test("afstod -> afstod", function() {deepEqual( Stem("afstod"), "afstod");});
test("afstraffelse -> afstraf", function() {deepEqual( Stem("afstraffelse"), "afstraf");});
test("afstå -> afstå", function() {deepEqual( Stem("afstå"), "afstå");});
test("afsved -> afsved", function() {deepEqual( Stem("afsved"), "afsved");});
test("afsvedet -> afsved", function() {deepEqual( Stem("afsvedet"), "afsved");});
test("afsvider -> afsvid", function() {deepEqual( Stem("afsvider"), "afsvid");});
test("afsæt -> afsæt", function() {deepEqual( Stem("afsæt"), "afsæt");});
test("afsætter -> afsæt", function() {deepEqual( Stem("afsætter"), "afsæt");});
test("aftale -> aftal", function() {deepEqual( Stem("aftale"), "aftal");});
test("aftalen -> aftal", function() {deepEqual( Stem("aftalen"), "aftal");});
test("aftalt -> aftalt", function() {deepEqual( Stem("aftalt"), "aftalt");});
test("aftalte -> aftalt", function() {deepEqual( Stem("aftalte"), "aftalt");});
test("aften -> aft", function() {deepEqual( Stem("aften"), "aft");});
test("aftenafgrødeofferets -> aftenafgrødeof", function() {deepEqual( Stem("aftenafgrødeofferets"), "aftenafgrødeof");});
test("aftenafgrødeofrene -> aftenafgrødeofr", function() {deepEqual( Stem("aftenafgrødeofrene"), "aftenafgrødeofr");});
test("aftenbrændofre -> aftenbrændofr", function() {deepEqual( Stem("aftenbrændofre"), "aftenbrændofr");});
test("aftenbrændofrene -> aftenbrændofr", function() {deepEqual( Stem("aftenbrændofrene"), "aftenbrændofr");});
test("aftenen -> aften", function() {deepEqual( Stem("aftenen"), "aften");});
test("aftener -> aften", function() {deepEqual( Stem("aftener"), "aften");});
test("aftenoffer -> aftenof", function() {deepEqual( Stem("aftenoffer"), "aftenof");});
test("aftenofferets -> aftenof", function() {deepEqual( Stem("aftenofferets"), "aftenof");});
test("aftenskyggerne -> aftenskyg", function() {deepEqual( Stem("aftenskyggerne"), "aftenskyg");});
test("aftensmåltid -> aftensmåltid", function() {deepEqual( Stem("aftensmåltid"), "aftensmåltid");});
test("aftensmåltidet -> aftensmåltid", function() {deepEqual( Stem("aftensmåltidet"), "aftensmåltid");});
test("aftenstid -> aftenstid", function() {deepEqual( Stem("aftenstid"), "aftenstid");});
test("aftenstjemen -> aftenstjem", function() {deepEqual( Stem("aftenstjemen"), "aftenstjem");});
test("aftenstund -> aftenstund", function() {deepEqual( Stem("aftenstund"), "aftenstund");});
test("aftentide -> aftentid", function() {deepEqual( Stem("aftentide"), "aftentid");});
test("aftoede -> aftoed", function() {deepEqual( Stem("aftoede"), "aftoed");});
test("aftvinge -> aftving", function() {deepEqual( Stem("aftvinge"), "aftving");});
test("aftvinger -> aftving", function() {deepEqual( Stem("aftvinger"), "aftving");});
test("aftvunget -> aftvung", function() {deepEqual( Stem("aftvunget"), "aftvung");});
test("aftvætte -> aftvæt", function() {deepEqual( Stem("aftvætte"), "aftvæt");});
test("aftvættet -> aftvæt", function() {deepEqual( Stem("aftvættet"), "aftvæt");});
test("aftørre -> aftør", function() {deepEqual( Stem("aftørre"), "aftør");});
test("aftørrede -> aftørred", function() {deepEqual( Stem("aftørrede"), "aftørred");});
test("aftørrer -> aftør", function() {deepEqual( Stem("aftørrer"), "aftør");});
test("afudsbilleder -> afudsbilled", function() {deepEqual( Stem("afudsbilleder"), "afudsbilled");});
test("afvant -> afvant", function() {deepEqual( Stem("afvant"), "afvant");});
test("afvante -> afvant", function() {deepEqual( Stem("afvante"), "afvant");});
test("afveget -> afveg", function() {deepEqual( Stem("afveget"), "afveg");});
test("afvegne -> afvegn", function() {deepEqual( Stem("afvegne"), "afvegn");});
test("afveje -> afvej", function() {deepEqual( Stem("afveje"), "afvej");});
test("afvejede -> afvejed", function() {deepEqual( Stem("afvejede"), "afvejed");});
test("afvejet -> afvej", function() {deepEqual( Stem("afvejet"), "afvej");});
test("afvende -> afv", function() {deepEqual( Stem("afvende"), "afv");});
test("afvis -> afvis", function() {deepEqual( Stem("afvis"), "afvis");});
test("afvise -> afvis", function() {deepEqual( Stem("afvise"), "afvis");});
test("afviser -> afvis", function() {deepEqual( Stem("afviser"), "afvis");});
test("afvises -> afvis", function() {deepEqual( Stem("afvises"), "afvis");});
test("afviske -> afvisk", function() {deepEqual( Stem("afviske"), "afvisk");});
test("afvisker -> afvisk", function() {deepEqual( Stem("afvisker"), "afvisk");});
test("afvist -> afvist", function() {deepEqual( Stem("afvist"), "afvist");});
test("afvæbnet -> afvæbn", function() {deepEqual( Stem("afvæbnet"), "afvæbn");});
test("afværge -> afværg", function() {deepEqual( Stem("afværge"), "afværg");});
test("afæde -> afæd", function() {deepEqual( Stem("afæde"), "afæd");});
test("ag -> ag", function() {deepEqual( Stem("ag"), "ag");});
test("agabus -> agabus", function() {deepEqual( Stem("agabus"), "agabus");});
test("agag -> agag", function() {deepEqual( Stem("agag"), "agag");});
test("agagerdets -> agagerd", function() {deepEqual( Stem("agagerdets"), "agagerd");});
test("agagiten -> agagit", function() {deepEqual( Stem("agagiten"), "agagit");});
test("agat -> agat", function() {deepEqual( Stem("agat"), "agat");});
test("ager -> ager", function() {deepEqual( Stem("ager"), "ager");});
test("agerbrug -> agerbrug", function() {deepEqual( Stem("agerbrug"), "agerbrug");});
test("agerdyrker -> agerdyrk", function() {deepEqual( Stem("agerdyrker"), "agerdyrk");});
test("agerdyrkere -> agerdyrk", function() {deepEqual( Stem("agerdyrkere"), "agerdyrk");});
test("agerdyrkerne -> agerdyrk", function() {deepEqual( Stem("agerdyrkerne"), "agerdyrk");});
test("ageren -> ager", function() {deepEqual( Stem("ageren"), "ager");});
test("agerhømme -> agerhøm", function() {deepEqual( Stem("agerhømme"), "agerhøm");});
test("agerhøne -> agerhøn", function() {deepEqual( Stem("agerhøne"), "agerhøn");});
test("agerjord -> agerjord", function() {deepEqual( Stem("agerjord"), "agerjord");});
test("agerjorden -> agerjord", function() {deepEqual( Stem("agerjorden"), "agerjord");});
test("agerjordens -> agerjord", function() {deepEqual( Stem("agerjordens"), "agerjord");});
test("agerland -> agerland", function() {deepEqual( Stem("agerland"), "agerland");});
test("agerlandet -> agerland", function() {deepEqual( Stem("agerlandet"), "agerland");});
test("ages -> ages", function() {deepEqual( Stem("ages"), "ages");});
test("agre -> agr", function() {deepEqual( Stem("agre"), "agr");});
test("agrippa -> agrippa", function() {deepEqual( Stem("agrippa"), "agrippa");});
test("agt -> agt", function() {deepEqual( Stem("agt"), "agt");});
test("agte -> agt", function() {deepEqual( Stem("agte"), "agt");});
test("agted -> agted", function() {deepEqual( Stem("agted"), "agted");});
test("agtede -> agted", function() {deepEqual( Stem("agtede"), "agted");});
test("agtelse -> agt", function() {deepEqual( Stem("agtelse"), "agt");});
test("agter -> agt", function() {deepEqual( Stem("agter"), "agt");});
test("agtes -> agt", function() {deepEqual( Stem("agtes"), "agt");});
test("agtet -> agt", function() {deepEqual( Stem("agtet"), "agt");});
test("agur -> agur", function() {deepEqual( Stem("agur"), "agur");});
test("agurker -> agurk", function() {deepEqual( Stem("agurker"), "agurk");});
test("agurkerne -> agurk", function() {deepEqual( Stem("agurkerne"), "agurk");});
test("agurkhaven -> agurkhav", function() {deepEqual( Stem("agurkhaven"), "agurkhav");});
test("agurklignende -> agurklign", function() {deepEqual( Stem("agurklignende"), "agurklign");});
test("ah -> ah", function() {deepEqual( Stem("ah"), "ah");});
test("aharhels -> aharhel", function() {deepEqual( Stem("aharhels"), "aharhel");});
test("ahasjtariteme -> ahasjtaritem", function() {deepEqual( Stem("ahasjtariteme"), "ahasjtaritem");});
test("ahasverus -> ahasverus", function() {deepEqual( Stem("ahasverus"), "ahasverus");});
test("ahasveruses -> ahasverus", function() {deepEqual( Stem("ahasveruses"), "ahasverus");});
test("ahava -> ahava", function() {deepEqual( Stem("ahava"), "ahava");});
test("ahaz -> ahaz", function() {deepEqual( Stem("ahaz"), "ahaz");});
test("ahazbajs -> ahazbaj", function() {deepEqual( Stem("ahazbajs"), "ahazbaj");});
test("ahazja -> ahazja", function() {deepEqual( Stem("ahazja"), "ahazja");});
test("ahazjas -> ahazja", function() {deepEqual( Stem("ahazjas"), "ahazja");});
test("ahers -> aher", function() {deepEqual( Stem("ahers"), "aher");});
test("ahi -> ahi", function() {deepEqual( Stem("ahi"), "ahi");});
test("ahida -> ahida", function() {deepEqual( Stem("ahida"), "ahida");});
test("ahiezer -> ahiez", function() {deepEqual( Stem("ahiezer"), "ahiez");});
test("ahiezers -> ahiez", function() {deepEqual( Stem("ahiezers"), "ahiez");});
test("ahihud -> ahihud", function() {deepEqual( Stem("ahihud"), "ahihud");});
test("ahija -> ahija", function() {deepEqual( Stem("ahija"), "ahija");});
test("ahijas -> ahija", function() {deepEqual( Stem("ahijas"), "ahija");});
test("ahikam -> ahikam", function() {deepEqual( Stem("ahikam"), "ahikam");});
test("ahikams -> ahikam", function() {deepEqual( Stem("ahikams"), "ahikam");});
test("ahikas -> ahika", function() {deepEqual( Stem("ahikas"), "ahika");});
test("ahiluds -> ahilud", function() {deepEqual( Stem("ahiluds"), "ahilud");});
test("ahima -> ahima", function() {deepEqual( Stem("ahima"), "ahima");});
test("ahiman -> ahiman", function() {deepEqual( Stem("ahiman"), "ahiman");});
test("ahimelek -> ahimelek", function() {deepEqual( Stem("ahimelek"), "ahimelek");});
test("ahimeleks -> ahimelek", function() {deepEqual( Stem("ahimeleks"), "ahimelek");});
test("ahimot -> ahimot", function() {deepEqual( Stem("ahimot"), "ahimot");});
test("ahimåz -> ahimåz", function() {deepEqual( Stem("ahimåz"), "ahimåz");});
test("ahinadab -> ahinadab", function() {deepEqual( Stem("ahinadab"), "ahinadab");});
test("ahinoam -> ahinoam", function() {deepEqual( Stem("ahinoam"), "ahinoam");});
test("ahira -> ahira", function() {deepEqual( Stem("ahira"), "ahira");});
test("ahiram -> ahiram", function() {deepEqual( Stem("ahiram"), "ahiram");});
test("ahiramiternes -> ahiramit", function() {deepEqual( Stem("ahiramiternes"), "ahiramit");});
test("ahiras -> ahira", function() {deepEqual( Stem("ahiras"), "ahira");});
test("ahisamaks -> ahisamak", function() {deepEqual( Stem("ahisamaks"), "ahisamak");});
test("ahisjahar -> ahisjahar", function() {deepEqual( Stem("ahisjahar"), "ahisjahar");});
test("ahisjar -> ahisjar", function() {deepEqual( Stem("ahisjar"), "ahisjar");});
test("ahitub -> ahitub", function() {deepEqual( Stem("ahitub"), "ahitub");});
test("ahitubs -> ahitub", function() {deepEqual( Stem("ahitubs"), "ahitub");});
test("ahoa -> ahoa", function() {deepEqual( Stem("ahoa"), "ahoa");});
test("ahohiten -> ahohit", function() {deepEqual( Stem("ahohiten"), "ahohit");});
test("ahumaj -> ahumaj", function() {deepEqual( Stem("ahumaj"), "ahumaj");});
test("ahuzzam -> ahuzzam", function() {deepEqual( Stem("ahuzzam"), "ahuzzam");});
test("ahuzzat -> ahuzzat", function() {deepEqual( Stem("ahuzzat"), "ahuzzat");});
test("aissa -> aissa", function() {deepEqual( Stem("aissa"), "aissa");});
test("aiterets -> ait", function() {deepEqual( Stem("aiterets"), "ait");});
test("aiternes -> ait", function() {deepEqual( Stem("aiternes"), "ait");});
test("aj -> aj", function() {deepEqual( Stem("aj"), "aj");});
test("aja -> aja", function() {deepEqual( Stem("aja"), "aja");});
test("ajan -> ajan", function() {deepEqual( Stem("ajan"), "ajan");});
test("ajin -> ajin", function() {deepEqual( Stem("ajin"), "ajin");});
test("ajja -> ajja", function() {deepEqual( Stem("ajja"), "ajja");});
test("ajjalon -> ajjalon", function() {deepEqual( Stem("ajjalon"), "ajjalon");});
test("ajjalons -> ajjalon", function() {deepEqual( Stem("ajjalons"), "ajjalon");});
test("ajjas -> ajja", function() {deepEqual( Stem("ajjas"), "ajja");});
test("ajjat -> ajjat", function() {deepEqual( Stem("ajjat"), "ajjat");});
test("ajjiterne -> ajjit", function() {deepEqual( Stem("ajjiterne"), "ajjit");});
test("ajo -> ajo", function() {deepEqual( Stem("ajo"), "ajo");});
test("ajs -> ajs", function() {deepEqual( Stem("ajs"), "ajs");});
test("ak -> ak", function() {deepEqual( Stem("ak"), "ak");});
test("aka -> aka", function() {deepEqual( Stem("aka"), "aka");});
test("akab -> akab", function() {deepEqual( Stem("akab"), "akab");});
test("akabs -> akab", function() {deepEqual( Stem("akabs"), "akab");});
test("akaciedalen -> akaciedal", function() {deepEqual( Stem("akaciedalen"), "akaciedal");});
test("akacier -> akaci", function() {deepEqual( Stem("akacier"), "akaci");});
test("akacietræ -> akacietræ", function() {deepEqual( Stem("akacietræ"), "akacietræ");});
test("akafiten -> akafit", function() {deepEqual( Stem("akafiten"), "akafit");});
test("akaikus -> akaikus", function() {deepEqual( Stem("akaikus"), "akaikus");});
test("akaja -> akaja", function() {deepEqual( Stem("akaja"), "akaja");});
test("akajas -> akaja", function() {deepEqual( Stem("akajas"), "akaja");});
test("akan -> akan", function() {deepEqual( Stem("akan"), "akan");});
test("akar -> akar", function() {deepEqual( Stem("akar"), "akar");});
test("akas -> aka", function() {deepEqual( Stem("akas"), "aka");});
test("akat -> akat", function() {deepEqual( Stem("akat"), "akat");});
test("akatitens -> akatit", function() {deepEqual( Stem("akatitens"), "akatit");});
test("akatiterne -> akatit", function() {deepEqual( Stem("akatiterne"), "akatit");});
test("akatiternes -> akatit", function() {deepEqual( Stem("akatiternes"), "akatit");});
test("akaz -> akaz", function() {deepEqual( Stem("akaz"), "akaz");});
test("akaza -> akaza", function() {deepEqual( Stem("akaza"), "akaza");});
test("akazblev -> akazblev", function() {deepEqual( Stem("akazblev"), "akazblev");});
test("akbor -> akbor", function() {deepEqual( Stem("akbor"), "akbor");});
test("akbors -> akbor", function() {deepEqual( Stem("akbors"), "akbor");});
test("akim -> akim", function() {deepEqual( Stem("akim"), "akim");});
test("akisj -> akisj", function() {deepEqual( Stem("akisj"), "akisj");});
test("akitofel -> akitofel", function() {deepEqual( Stem("akitofel"), "akitofel");});
test("akitofels -> akitofel", function() {deepEqual( Stem("akitofels"), "akitofel");});
test("akkad -> akkad", function() {deepEqual( Stem("akkad"), "akkad");});
test("akko -> akko", function() {deepEqual( Stem("akko"), "akko");});
test("akkub -> akkub", function() {deepEqual( Stem("akkub"), "akkub");});
test("akkubs -> akkub", function() {deepEqual( Stem("akkubs"), "akkub");});
test("akoba -> akoba", function() {deepEqual( Stem("akoba"), "akoba");});
test("akors -> akor", function() {deepEqual( Stem("akors"), "akor");});
test("akrabbimpasset -> akrabbimpas", function() {deepEqual( Stem("akrabbimpasset"), "akrabbimpas");});
test("aks -> aks", function() {deepEqual( Stem("aks"), "aks");});
test("aksa -> aksa", function() {deepEqual( Stem("aksa"), "aksa");});
test("akselholdere -> akselhold", function() {deepEqual( Stem("akselholdere"), "akselhold");});
test("aksene -> aks", function() {deepEqual( Stem("aksene"), "aks");});
test("aksenes -> aks", function() {deepEqual( Stem("aksenes"), "aks");});
test("akset -> aks", function() {deepEqual( Stem("akset"), "aks");});
test("aksjaf -> aksjaf", function() {deepEqual( Stem("aksjaf"), "aksjaf");});
test("akvila -> akvila", function() {deepEqual( Stem("akvila"), "akvila");});
test("akzib -> akzib", function() {deepEqual( Stem("akzib"), "akzib");});
test("akzibs -> akzib", function() {deepEqual( Stem("akzibs"), "akzib");});
test("al -> al", function() {deepEqual( Stem("al"), "al");});
test("ala -> ala", function() {deepEqual( Stem("ala"), "ala");});
test("alabastkrukke -> alabastkruk", function() {deepEqual( Stem("alabastkrukke"), "alabastkruk");});
test("alabastkrukken -> alabastkruk", function() {deepEqual( Stem("alabastkrukken"), "alabastkruk");});
test("alabbin -> alabbin", function() {deepEqual( Stem("alabbin"), "alabbin");});
test("alabjerget -> alabjerg", function() {deepEqual( Stem("alabjerget"), "alabjerg");});
test("alaj -> alaj", function() {deepEqual( Stem("alaj"), "alaj");});
test("alajs -> alaj", function() {deepEqual( Stem("alajs"), "alaj");});
test("alammelek -> alammelek", function() {deepEqual( Stem("alammelek"), "alammelek");});
test("alamot -> alamot", function() {deepEqual( Stem("alamot"), "alamot");});
test("alarm -> alarm", function() {deepEqual( Stem("alarm"), "alarm");});
test("alarmhornet -> alarmhorn", function() {deepEqual( Stem("alarmhornet"), "alarmhorn");});
test("alarmtrompeterne -> alarmtrompet", function() {deepEqual( Stem("alarmtrompeterne"), "alarmtrompet");});
test("alas -> ala", function() {deepEqual( Stem("alas"), "ala");});
test("alat -> alat", function() {deepEqual( Stem("alat"), "alat");});
test("albim -> albim", function() {deepEqual( Stem("albim"), "albim");});
test("alboniten -> albonit", function() {deepEqual( Stem("alboniten"), "albonit");});
test("aldeles -> aldel", function() {deepEqual( Stem("aldeles"), "aldel");});
test("alder -> ald", function() {deepEqual( Stem("alder"), "ald");});
test("alderdom -> alderdom", function() {deepEqual( Stem("alderdom"), "alderdom");});
test("alderdommen -> alderdom", function() {deepEqual( Stem("alderdommen"), "alderdom");});
test("alderdommens -> alderdom", function() {deepEqual( Stem("alderdommens"), "alderdom");});
test("alderdoms -> alderdom", function() {deepEqual( Stem("alderdoms"), "alderdom");});
test("alderen -> ald", function() {deepEqual( Stem("alderen"), "ald");});
test("alders -> ald", function() {deepEqual( Stem("alders"), "ald");});
test("aldersfølge -> aldersfølg", function() {deepEqual( Stem("aldersfølge"), "aldersfølg");});
test("aldrig -> aldr", function() {deepEqual( Stem("aldrig"), "aldr");});
test("ale -> ale", function() {deepEqual( Stem("ale"), "ale");});
test("aleksander -> aleksand", function() {deepEqual( Stem("aleksander"), "aleksand");});
test("aleksanders -> aleksand", function() {deepEqual( Stem("aleksanders"), "aleksand");});
test("aleksandria -> aleksandria", function() {deepEqual( Stem("aleksandria"), "aleksandria");});
test("aleksandrinernes -> aleksandrin", function() {deepEqual( Stem("aleksandrinernes"), "aleksandrin");});
test("aleksandrinsk -> aleksandrinsk", function() {deepEqual( Stem("aleksandrinsk"), "aleksandrinsk");});
test("alemet -> alem", function() {deepEqual( Stem("alemet"), "alem");});
test("alen -> alen", function() {deepEqual( Stem("alen"), "alen");});
test("alenbrede -> alenbred", function() {deepEqual( Stem("alenbrede"), "alenbred");});
test("alene -> alen", function() {deepEqual( Stem("alene"), "alen");});
test("alens -> alen", function() {deepEqual( Stem("alens"), "alen");});
test("alerden -> alerd", function() {deepEqual( Stem("alerden"), "alerd");});
test("alerne -> alern", function() {deepEqual( Stem("alerne"), "alern");});
test("alernes -> alern", function() {deepEqual( Stem("alernes"), "alern");});
test("alexander -> alexand", function() {deepEqual( Stem("alexander"), "alexand");});
test("alf -> alf", function() {deepEqual( Stem("alf"), "alf");});
test("alfa -> alfa", function() {deepEqual( Stem("alfa"), "alfa");});
test("alfer -> alf", function() {deepEqual( Stem("alfer"), "alf");});
test("alfæus -> alfæus", function() {deepEqual( Stem("alfæus"), "alfæus");});
test("algummimtræ -> algummimtræ", function() {deepEqual( Stem("algummimtræ"), "algummimtræ");});
test("algummimtræet -> algummimtræ", function() {deepEqual( Stem("algummimtræet"), "algummimtræ");});
test("alimegnen -> alimegn", function() {deepEqual( Stem("alimegnen"), "alimegn");});
test("alja -> alja", function() {deepEqual( Stem("alja"), "alja");});
test("aljada -> aljada", function() {deepEqual( Stem("aljada"), "aljada");});
test("alkacietræ -> alkacietræ", function() {deepEqual( Stem("alkacietræ"), "alkacietræ");});
test("alkahs -> alkah", function() {deepEqual( Stem("alkahs"), "alkah");});
test("alle -> all", function() {deepEqual( Stem("alle"), "all");});
test("allerbedste -> allerbedst", function() {deepEqual( Stem("allerbedste"), "allerbedst");});
test("allerede -> all", function() {deepEqual( Stem("allerede"), "all");});
test("allerfineste -> allerfinest", function() {deepEqual( Stem("allerfineste"), "allerfinest");});
test("allerhelligste -> allerhel", function() {deepEqual( Stem("allerhelligste"), "allerhel");});
test("allerhelst -> allerhelst", function() {deepEqual( Stem("allerhelst"), "allerhelst");});
test("allerhøjeste -> allerhøjest", function() {deepEqual( Stem("allerhøjeste"), "allerhøjest");});
test("allerhøjestes -> allerhøjest", function() {deepEqual( Stem("allerhøjestes"), "allerhøjest");});
test("allerltelligste -> allerltel", function() {deepEqual( Stem("allerltelligste"), "allerltel");});
test("allermægtigst -> allermæg", function() {deepEqual( Stem("allermægtigst"), "allermæg");});
test("allerringeste -> allerringest", function() {deepEqual( Stem("allerringeste"), "allerringest");});
test("alles -> all", function() {deepEqual( Stem("alles"), "all");});
test("allevar -> allevar", function() {deepEqual( Stem("allevar"), "allevar");});
test("alligevel -> alligevel", function() {deepEqual( Stem("alligevel"), "alligevel");});
test("allon -> allon", function() {deepEqual( Stem("allon"), "allon");});
test("almagt -> almag", function() {deepEqual( Stem("almagt"), "almag");});
test("almindelig -> almind", function() {deepEqual( Stem("almindelig"), "almind");});
test("almindelige -> almind", function() {deepEqual( Stem("almindelige"), "almind");});
test("almindelighed -> almind", function() {deepEqual( Stem("almindelighed"), "almind");});
test("almindeligt -> almind", function() {deepEqual( Stem("almindeligt"), "almind");});
test("almisse -> almis", function() {deepEqual( Stem("almisse"), "almis");});
test("almisser -> almis", function() {deepEqual( Stem("almisser"), "almis");});
test("almodad -> almodad", function() {deepEqual( Stem("almodad"), "almodad");});
test("almon -> almon", function() {deepEqual( Stem("almon"), "almon");});
test("almuen -> almu", function() {deepEqual( Stem("almuen"), "almu");});
test("almuens -> almu", function() {deepEqual( Stem("almuens"), "almu");});
test("almug -> almug", function() {deepEqual( Stem("almug"), "almug");});
test("almuggimtræ -> almuggimtræ", function() {deepEqual( Stem("almuggimtræ"), "almuggimtræ");});
test("almuggimtræet -> almuggimtræ", function() {deepEqual( Stem("almuggimtræet"), "almuggimtræ");});
test("almægtig -> almæg", function() {deepEqual( Stem("almægtig"), "almæg");});
test("almægtige -> almæg", function() {deepEqual( Stem("almægtige"), "almæg");});
test("almægtiges -> almæg", function() {deepEqual( Stem("almægtiges"), "almæg");});
test("aloe -> alo", function() {deepEqual( Stem("aloe"), "alo");});
test("aloetræer -> aloetræ", function() {deepEqual( Stem("aloetræer"), "aloetræ");});
test("alog -> alog", function() {deepEqual( Stem("alog"), "alog");});
test("als -> als", function() {deepEqual( Stem("als"), "als");});
test("alsalter -> alsalt", function() {deepEqual( Stem("alsalter"), "alsalt");});
test("alsalteret -> alsalt", function() {deepEqual( Stem("alsalteret"), "alsalt");});
test("alsdyrkeme -> alsdyrkem", function() {deepEqual( Stem("alsdyrkeme"), "alsdyrkem");});
test("alsdyrkere -> alsdyrk", function() {deepEqual( Stem("alsdyrkere"), "alsdyrk");});
test("alsdyrkerne -> alsdyrk", function() {deepEqual( Stem("alsdyrkerne"), "alsdyrk");});
test("alshusets -> alshus", function() {deepEqual( Stem("alshusets"), "alshus");});
test("alskens -> alsk", function() {deepEqual( Stem("alskens"), "alsk");});
test("alsprofeter -> alsprofet", function() {deepEqual( Stem("alsprofeter"), "alsprofet");});
test("alstemplet -> alstempl", function() {deepEqual( Stem("alstemplet"), "alstempl");});
test("alt -> alt", function() {deepEqual( Stem("alt"), "alt");});
test("alter -> alt", function() {deepEqual( Stem("alter"), "alt");});
test("alteret -> alt", function() {deepEqual( Stem("alteret"), "alt");});
test("alterets -> alt", function() {deepEqual( Stem("alterets"), "alt");});
test("alterflammen -> alterflam", function() {deepEqual( Stem("alterflammen"), "alterflam");});
test("alterfod -> alterfod", function() {deepEqual( Stem("alterfod"), "alterfod");});
test("alterfremspringets -> alterfremspring", function() {deepEqual( Stem("alterfremspringets"), "alterfremspring");});
test("alterilden -> alterild", function() {deepEqual( Stem("alterilden"), "alterild");});
test("alterporten -> alterport", function() {deepEqual( Stem("alterporten"), "alterport");});
test("altersten -> alterst", function() {deepEqual( Stem("altersten"), "alterst");});
test("altid -> altid", function() {deepEqual( Stem("altid"), "altid");});
test("alting -> alting", function() {deepEqual( Stem("alting"), "alting");});
test("altre -> altr", function() {deepEqual( Stem("altre"), "altr");});
test("altrene -> altr", function() {deepEqual( Stem("altrene"), "altr");});
test("altres -> altr", function() {deepEqual( Stem("altres"), "altr");});
test("altså -> altså", function() {deepEqual( Stem("altså"), "altså");});
test("alusj -> alusj", function() {deepEqual( Stem("alusj"), "alusj");});
test("alva -> alva", function() {deepEqual( Stem("alva"), "alva");});
test("alvan -> alvan", function() {deepEqual( Stem("alvan"), "alvan");});
test("alverden -> alverd", function() {deepEqual( Stem("alverden"), "alverd");});
test("alverdens -> alverd", function() {deepEqual( Stem("alverdens"), "alverd");});
test("alvises -> alvis", function() {deepEqual( Stem("alvises"), "alvis");});
test("alvor -> alvor", function() {deepEqual( Stem("alvor"), "alvor");});
test("alvorlig -> alvor", function() {deepEqual( Stem("alvorlig"), "alvor");});
test("alvorligt -> alvor", function() {deepEqual( Stem("alvorligt"), "alvor");});
test("am -> am", function() {deepEqual( Stem("am"), "am");});
test("ama -> ama", function() {deepEqual( Stem("ama"), "ama");});
test("amal -> amal", function() {deepEqual( Stem("amal"), "amal");});
test("amalek -> amalek", function() {deepEqual( Stem("amalek"), "amalek");});
test("amalekit -> amalekit", function() {deepEqual( Stem("amalekit"), "amalekit");});
test("amalekiter -> amalekit", function() {deepEqual( Stem("amalekiter"), "amalekit");});
test("amalekiterbjerget -> amalekiterbjerg", function() {deepEqual( Stem("amalekiterbjerget"), "amalekiterbjerg");});
test("amalekiterne -> amalekit", function() {deepEqual( Stem("amalekiterne"), "amalekit");});
test("amalekiternes -> amalekit", function() {deepEqual( Stem("amalekiternes"), "amalekit");});
test("amaleks -> amalek", function() {deepEqual( Stem("amaleks"), "amalek");});
test("amam -> amam", function() {deepEqual( Stem("amam"), "amam");});
test("aman -> aman", function() {deepEqual( Stem("aman"), "aman");});
test("amanas -> amana", function() {deepEqual( Stem("amanas"), "amana");});
test("amans -> aman", function() {deepEqual( Stem("amans"), "aman");});
test("amarja -> amarja", function() {deepEqual( Stem("amarja"), "amarja");});
test("amasa -> amasa", function() {deepEqual( Stem("amasa"), "amasa");});
test("amasaj -> amasaj", function() {deepEqual( Stem("amasaj"), "amasaj");});
test("amasajs -> amasaj", function() {deepEqual( Stem("amasajs"), "amasaj");});
test("amasas -> amasa", function() {deepEqual( Stem("amasas"), "amasa");});
test("amasja -> amasja", function() {deepEqual( Stem("amasja"), "amasja");});
test("amasjsaj -> amasjsaj", function() {deepEqual( Stem("amasjsaj"), "amasjsaj");});
test("amatiten -> amatit", function() {deepEqual( Stem("amatiten"), "amatit");});
test("amazja -> amazja", function() {deepEqual( Stem("amazja"), "amazja");});
test("amazjablev -> amazjablev", function() {deepEqual( Stem("amazjablev"), "amazjablev");});
test("amazjas -> amazja", function() {deepEqual( Stem("amazjas"), "amazja");});
test("amen -> amen", function() {deepEqual( Stem("amen"), "amen");});
test("ameta -> ameta", function() {deepEqual( Stem("ameta"), "ameta");});
test("ametyst -> ametyst", function() {deepEqual( Stem("ametyst"), "ametyst");});
test("amfipolis -> amfipolis", function() {deepEqual( Stem("amfipolis"), "amfipolis");});
test("aminadab -> aminadab", function() {deepEqual( Stem("aminadab"), "aminadab");});
test("aminadabs -> aminadab", function() {deepEqual( Stem("aminadabs"), "aminadab");});
test("amis -> amis", function() {deepEqual( Stem("amis"), "amis");});
test("amiteroes -> amitero", function() {deepEqual( Stem("amiteroes"), "amitero");});
test("amittajs -> amittaj", function() {deepEqual( Stem("amittajs"), "amittaj");});
test("amja -> amja", function() {deepEqual( Stem("amja"), "amja");});
test("amma -> amma", function() {deepEqual( Stem("amma"), "amma");});
test("amme -> amm", function() {deepEqual( Stem("amme"), "amm");});
test("ammede -> ammed", function() {deepEqual( Stem("ammede"), "ammed");});
test("ammer -> amm", function() {deepEqual( Stem("ammer"), "amm");});
test("ammi -> ammi", function() {deepEqual( Stem("ammi"), "ammi");});
test("ammibuds -> ammibud", function() {deepEqual( Stem("ammibuds"), "ammibud");});
test("ammiel -> ammiel", function() {deepEqual( Stem("ammiel"), "ammiel");});
test("ammiels -> ammiel", function() {deepEqual( Stem("ammiels"), "ammiel");});
test("ammihud -> ammihud", function() {deepEqual( Stem("ammihud"), "ammihud");});
test("ammihuds -> ammihud", function() {deepEqual( Stem("ammihuds"), "ammihud");});
test("amminadab -> amminadab", function() {deepEqual( Stem("amminadab"), "amminadab");});
test("amminadabs -> amminadab", function() {deepEqual( Stem("amminadabs"), "amminadab");});
test("ammisjaddajs -> ammisjaddaj", function() {deepEqual( Stem("ammisjaddajs"), "ammisjaddaj");});
test("ammizabad -> ammizabad", function() {deepEqual( Stem("ammizabad"), "ammizabad");});
test("ammomiternes -> ammomit", function() {deepEqual( Stem("ammomiternes"), "ammomit");});
test("ammon -> ammon", function() {deepEqual( Stem("ammon"), "ammon");});
test("ammoni -> ammoni", function() {deepEqual( Stem("ammoni"), "ammoni");});
test("ammonifemes -> ammonifem", function() {deepEqual( Stem("ammonifemes"), "ammonifem");});
test("ammonit -> ammonit", function() {deepEqual( Stem("ammonit"), "ammonit");});
test("ammoniten -> ammonit", function() {deepEqual( Stem("ammoniten"), "ammonit");});
test("ammoniter -> ammonit", function() {deepEqual( Stem("ammoniter"), "ammonit");});
test("ammoniterkongen -> ammoniterkong", function() {deepEqual( Stem("ammoniterkongen"), "ammoniterkong");});
test("ammoniterkvinden -> ammoniterkvind", function() {deepEqual( Stem("ammoniterkvinden"), "ammoniterkvind");});
test("ammoniterne -> ammonit", function() {deepEqual( Stem("ammoniterne"), "ammonit");});
test("ammoniternes -> ammonit", function() {deepEqual( Stem("ammoniternes"), "ammonit");});
test("ammoniteroes -> ammonitero", function() {deepEqual( Stem("ammoniteroes"), "ammonitero");});
test("ammonitisk -> ammonitisk", function() {deepEqual( Stem("ammonitisk"), "ammonitisk");});
test("ammonitiske -> ammonitisk", function() {deepEqual( Stem("ammonitiske"), "ammonitisk");});
test("ammonitterne -> ammonit", function() {deepEqual( Stem("ammonitterne"), "ammonit");});
test("ammons -> ammon", function() {deepEqual( Stem("ammons"), "ammon");});
test("amnon -> amnon", function() {deepEqual( Stem("amnon"), "amnon");});
test("amnons -> amnon", function() {deepEqual( Stem("amnons"), "amnon");});
test("amok -> amok", function() {deepEqual( Stem("amok"), "amok");});
test("amon -> amon", function() {deepEqual( Stem("amon"), "amon");});
test("amonflodens -> amonflod", function() {deepEqual( Stem("amonflodens"), "amonflod");});
test("amons -> amon", function() {deepEqual( Stem("amons"), "amon");});
test("amonterne -> amont", function() {deepEqual( Stem("amonterne"), "amont");});
test("amoriiterkongen -> amoriiterkong", function() {deepEqual( Stem("amoriiterkongen"), "amoriiterkong");});
test("amorit -> amorit", function() {deepEqual( Stem("amorit"), "amorit");});
test("amoritemes -> amoritem", function() {deepEqual( Stem("amoritemes"), "amoritem");});
test("amoriten -> amorit", function() {deepEqual( Stem("amoriten"), "amorit");});
test("amoriter -> amorit", function() {deepEqual( Stem("amoriter"), "amorit");});
test("amoriterkongen -> amoriterkong", function() {deepEqual( Stem("amoriterkongen"), "amoriterkong");});
test("amoriterkonger -> amoriterkong", function() {deepEqual( Stem("amoriterkonger"), "amoriterkong");});
test("amoriterkongerne -> amoriterkong", function() {deepEqual( Stem("amoriterkongerne"), "amoriterkong");});
test("amoriterne -> amorit", function() {deepEqual( Stem("amoriterne"), "amorit");});
test("amoriternes -> amorit", function() {deepEqual( Stem("amoriternes"), "amorit");});
test("amos -> amo", function() {deepEqual( Stem("amos"), "amo");});
test("amoz -> amoz", function() {deepEqual( Stem("amoz"), "amoz");});
test("ampliatus -> ampliatus", function() {deepEqual( Stem("ampliatus"), "ampliatus");});
test("amrafel -> amrafel", function() {deepEqual( Stem("amrafel"), "amrafel");});
test("amram -> amram", function() {deepEqual( Stem("amram"), "amram");});
test("amramiterne -> amramit", function() {deepEqual( Stem("amramiterne"), "amramit");});
test("amramiternes -> amramit", function() {deepEqual( Stem("amramiternes"), "amramit");});
test("amrams -> amram", function() {deepEqual( Stem("amrams"), "amram");});
test("ams -> ams", function() {deepEqual( Stem("ams"), "ams");});
test("amses -> ams", function() {deepEqual( Stem("amses"), "ams");});
test("amzi -> amzi", function() {deepEqual( Stem("amzi"), "amzi");});
test("an -> an", function() {deepEqual( Stem("an"), "an");});
test("ana -> ana", function() {deepEqual( Stem("ana"), "ana");});
test("anab -> anab", function() {deepEqual( Stem("anab"), "anab");});
test("anabarat -> anabarat", function() {deepEqual( Stem("anabarat"), "anabarat");});
test("anaja -> anaja", function() {deepEqual( Stem("anaja"), "anaja");});
test("anak -> anak", function() {deepEqual( Stem("anak"), "anak");});
test("anakaen -> anaka", function() {deepEqual( Stem("anakaen"), "anaka");});
test("anakiter -> anakit", function() {deepEqual( Stem("anakiter"), "anakit");});
test("anakiterne -> anakit", function() {deepEqual( Stem("anakiterne"), "anakit");});
test("anakiternes -> anakit", function() {deepEqual( Stem("anakiternes"), "anakit");});
test("anaks -> anak", function() {deepEqual( Stem("anaks"), "anak");});
test("anaksønner -> anaksøn", function() {deepEqual( Stem("anaksønner"), "anaksøn");});
test("anamerne -> anam", function() {deepEqual( Stem("anamerne"), "anam");});
test("anammelek -> anammelek", function() {deepEqual( Stem("anammelek"), "anammelek");});
test("anan -> anan", function() {deepEqual( Stem("anan"), "anan");});
test("anani -> anani", function() {deepEqual( Stem("anani"), "anani");});
test("ananias -> anania", function() {deepEqual( Stem("ananias"), "anania");});
test("ananja -> ananja", function() {deepEqual( Stem("ananja"), "ananja");});
test("anannim -> anannim", function() {deepEqual( Stem("anannim"), "anannim");});
test("anans -> anan", function() {deepEqual( Stem("anans"), "anan");});
test("anas -> ana", function() {deepEqual( Stem("anas"), "ana");});
test("anat -> anat", function() {deepEqual( Stem("anat"), "anat");});
test("anatot -> anatot", function() {deepEqual( Stem("anatot"), "anatot");});
test("anats -> anat", function() {deepEqual( Stem("anats"), "anat");});
test("anbefale -> anbefal", function() {deepEqual( Stem("anbefale"), "anbefal");});
test("anbefaler -> anbefal", function() {deepEqual( Stem("anbefaler"), "anbefal");});
test("anbefales -> anbefal", function() {deepEqual( Stem("anbefales"), "anbefal");});
test("anbefalet -> anbefal", function() {deepEqual( Stem("anbefalet"), "anbefal");});
test("anbefalingsbreve -> anbefalingsbrev", function() {deepEqual( Stem("anbefalingsbreve"), "anbefalingsbrev");});
test("anbragte -> anbrag", function() {deepEqual( Stem("anbragte"), "anbrag");});
test("anbringe -> anbring", function() {deepEqual( Stem("anbringe"), "anbring");});
test("and -> and", function() {deepEqual( Stem("and"), "and");});
test("anden -> and", function() {deepEqual( Stem("anden"), "and");});
test("andenmands -> andenmand", function() {deepEqual( Stem("andenmands"), "andenmand");});
test("andenpræsten -> andenpræst", function() {deepEqual( Stem("andenpræsten"), "andenpræst");});
test("andens -> and", function() {deepEqual( Stem("andens"), "and");});
test("andensteds -> andensted", function() {deepEqual( Stem("andensteds"), "andensted");});
test("anderledes -> anderled", function() {deepEqual( Stem("anderledes"), "anderled");});
test("andet -> and", function() {deepEqual( Stem("andet"), "and");});
test("andetsteds -> andetsted", function() {deepEqual( Stem("andetsteds"), "andetsted");});
test("andre -> andr", function() {deepEqual( Stem("andre"), "andr");});
test("andreas -> andrea", function() {deepEqual( Stem("andreas"), "andrea");});
test("andres -> andr", function() {deepEqual( Stem("andres"), "andr");});
test("andronikus -> andronikus", function() {deepEqual( Stem("andronikus"), "andronikus");});
test("andt -> andt", function() {deepEqual( Stem("andt"), "andt");});
test("anede -> aned", function() {deepEqual( Stem("anede"), "aned");});
test("aner -> aner", function() {deepEqual( Stem("aner"), "aner");});
test("anerkende -> anerk", function() {deepEqual( Stem("anerkende"), "anerk");});
test("anerkender -> anerkend", function() {deepEqual( Stem("anerkender"), "anerkend");});
test("anerkendt -> anerkend", function() {deepEqual( Stem("anerkendt"), "anerkend");});
test("anfører -> anfør", function() {deepEqual( Stem("anfører"), "anfør");});
test("anførere -> anfør", function() {deepEqual( Stem("anførere"), "anfør");});
test("anføreren -> anfør", function() {deepEqual( Stem("anføreren"), "anfør");});
test("anførsel -> anførsel", function() {deepEqual( Stem("anførsel"), "anførsel");});
test("ang -> ang", function() {deepEqual( Stem("ang"), "ang");});
test("anger -> ang", function() {deepEqual( Stem("anger"), "ang");});
test("angerløse -> angerløs", function() {deepEqual( Stem("angerløse"), "angerløs");});
test("angersord -> angersord", function() {deepEqual( Stem("angersord"), "angersord");});
test("angiv -> angiv", function() {deepEqual( Stem("angiv"), "angiv");});
test("angive -> angiv", function() {deepEqual( Stem("angive"), "angiv");});
test("angiven -> angiv", function() {deepEqual( Stem("angiven"), "angiv");});
test("angre -> angr", function() {deepEqual( Stem("angre"), "angr");});
test("angreb -> angreb", function() {deepEqual( Stem("angreb"), "angreb");});
test("angrebet -> angreb", function() {deepEqual( Stem("angrebet"), "angreb");});
test("angrebne -> angrebn", function() {deepEqual( Stem("angrebne"), "angrebn");});
test("angrebnes -> angrebn", function() {deepEqual( Stem("angrebnes"), "angrebn");});
test("angrede -> angred", function() {deepEqual( Stem("angrede"), "angred");});
test("angrer -> angr", function() {deepEqual( Stem("angrer"), "angr");});
test("angribe -> angrib", function() {deepEqual( Stem("angribe"), "angrib");});
test("angribende -> angrib", function() {deepEqual( Stem("angribende"), "angrib");});
test("angriber -> angrib", function() {deepEqual( Stem("angriber"), "angrib");});
test("angriberens -> angrib", function() {deepEqual( Stem("angriberens"), "angrib");});
test("angribes -> angrib", function() {deepEqual( Stem("angribes"), "angrib");});
test("angst -> angst", function() {deepEqual( Stem("angst"), "angst");});
test("angsten -> angst", function() {deepEqual( Stem("angsten"), "angst");});
test("angstens -> angst", function() {deepEqual( Stem("angstens"), "angst");});
test("angster -> angst", function() {deepEqual( Stem("angster"), "angst");});
test("angående -> angå", function() {deepEqual( Stem("angående"), "angå");});
test("angår -> angår", function() {deepEqual( Stem("angår"), "angår");});
test("ani -> ani", function() {deepEqual( Stem("ani"), "ani");});
test("anim -> anim", function() {deepEqual( Stem("anim"), "anim");});
test("ankelkæder -> ankelkæd", function() {deepEqual( Stem("ankelkæder"), "ankelkæd");});
test("ankelringe -> ankelring", function() {deepEqual( Stem("ankelringe"), "ankelring");});
test("anker -> ank", function() {deepEqual( Stem("anker"), "ank");});
test("anklage -> anklag", function() {deepEqual( Stem("anklage"), "anklag");});
test("anklagede -> anklaged", function() {deepEqual( Stem("anklagede"), "anklaged");});
test("anklagedes -> anklaged", function() {deepEqual( Stem("anklagedes"), "anklaged");});
test("anklager -> anklag", function() {deepEqual( Stem("anklager"), "anklag");});
test("anklagere -> anklag", function() {deepEqual( Stem("anklagere"), "anklag");});
test("anklagerne -> anklag", function() {deepEqual( Stem("anklagerne"), "anklag");});
test("anklages -> anklag", function() {deepEqual( Stem("anklages"), "anklag");});
test("anklaget -> anklag", function() {deepEqual( Stem("anklaget"), "anklag");});
test("ankler -> ankl", function() {deepEqual( Stem("ankler"), "ankl");});
test("anklerne -> ankl", function() {deepEqual( Stem("anklerne"), "ankl");});
test("ankomst -> ankomst", function() {deepEqual( Stem("ankomst"), "ankomst");});
test("ankre -> ankr", function() {deepEqual( Stem("ankre"), "ankr");});
test("ankrene -> ankr", function() {deepEqual( Stem("ankrene"), "ankr");});
test("anlagde -> anlag", function() {deepEqual( Stem("anlagde"), "anlag");});
test("anledning -> anledning", function() {deepEqual( Stem("anledning"), "anledning");});
test("anlægge -> anlæg", function() {deepEqual( Stem("anlægge"), "anlæg");});
test("anløb -> anløb", function() {deepEqual( Stem("anløb"), "anløb");});
test("anmeldte -> anmeld", function() {deepEqual( Stem("anmeldte"), "anmeld");});
test("anna -> anna", function() {deepEqual( Stem("anna"), "anna");});
test("annas -> anna", function() {deepEqual( Stem("annas"), "anna");});
test("annordninger -> annordning", function() {deepEqual( Stem("annordninger"), "annordning");});
test("anon -> anon", function() {deepEqual( Stem("anon"), "anon");});
test("anordnet -> anordn", function() {deepEqual( Stem("anordnet"), "anordn");});
test("anordning -> anordning", function() {deepEqual( Stem("anordning"), "anordning");});
test("anordninger -> anordning", function() {deepEqual( Stem("anordninger"), "anordning");});
test("anordningerne -> anordning", function() {deepEqual( Stem("anordningerne"), "anordning");});
test("anordnioger -> anordniog", function() {deepEqual( Stem("anordnioger"), "anordniog");});
test("anrettet -> anret", function() {deepEqual( Stem("anrettet"), "anret");});
test("anråbe -> anråb", function() {deepEqual( Stem("anråbe"), "anråb");});
test("ans -> ans", function() {deepEqual( Stem("ans"), "ans");});
test("ansat -> ansat", function() {deepEqual( Stem("ansat"), "ansat");});
test("ansatte -> ansat", function() {deepEqual( Stem("ansatte"), "ansat");});
test("anse -> ans", function() {deepEqual( Stem("anse"), "ans");});
test("anseelse -> anse", function() {deepEqual( Stem("anseelse"), "anse");});
test("anselig -> ans", function() {deepEqual( Stem("anselig"), "ans");});
test("anseligt -> ans", function() {deepEqual( Stem("anseligt"), "ans");});
test("anser -> ans", function() {deepEqual( Stem("anser"), "ans");});
test("anset -> ans", function() {deepEqual( Stem("anset"), "ans");});
test("ansete -> anset", function() {deepEqual( Stem("ansete"), "anset");});
test("ansigt -> ans", function() {deepEqual( Stem("ansigt"), "ans");});
test("ansigter -> ans", function() {deepEqual( Stem("ansigter"), "ans");});
test("ansigterne -> ans", function() {deepEqual( Stem("ansigterne"), "ans");});
test("ansigters -> ans", function() {deepEqual( Stem("ansigters"), "ans");});
test("ansigtervendt -> ansigtervend", function() {deepEqual( Stem("ansigtervendt"), "ansigtervend");});
test("ansigtet -> ans", function() {deepEqual( Stem("ansigtet"), "ans");});
test("ansigts -> ans", function() {deepEqual( Stem("ansigts"), "ans");});
test("ansigtsudtryk -> ansigtsudtryk", function() {deepEqual( Stem("ansigtsudtryk"), "ansigtsudtryk");});
test("anskaffede -> anskaffed", function() {deepEqual( Stem("anskaffede"), "anskaffed");});
test("anslag -> anslag", function() {deepEqual( Stem("anslag"), "anslag");});
test("anstillede -> anstilled", function() {deepEqual( Stem("anstillede"), "anstilled");});
test("anstrengelse -> anstreng", function() {deepEqual( Stem("anstrengelse"), "anstreng");});
test("anstrengende -> anstreng", function() {deepEqual( Stem("anstrengende"), "anstreng");});
test("anstød -> anstød", function() {deepEqual( Stem("anstød"), "anstød");});
test("anstødssten -> anstødsst", function() {deepEqual( Stem("anstødssten"), "anstødsst");});
test("anstødsstenen -> anstødssten", function() {deepEqual( Stem("anstødsstenen"), "anstødssten");});
test("ansvaret -> ansvar", function() {deepEqual( Stem("ansvaret"), "ansvar");});
test("ansås -> anså", function() {deepEqual( Stem("ansås"), "anså");});
test("antage -> antag", function() {deepEqual( Stem("antage"), "antag");});
test("antagelse -> antag", function() {deepEqual( Stem("antagelse"), "antag");});
test("antaget -> antag", function() {deepEqual( Stem("antaget"), "antag");});
test("antal -> antal", function() {deepEqual( Stem("antal"), "antal");});
test("antallet -> antal", function() {deepEqual( Stem("antallet"), "antal");});
test("antikrist -> antikrist", function() {deepEqual( Stem("antikrist"), "antikrist");});
test("antikristen -> antikrist", function() {deepEqual( Stem("antikristen"), "antikrist");});
test("antikrister -> antikrist", function() {deepEqual( Stem("antikrister"), "antikrist");});
test("antikrists -> antikrist", function() {deepEqual( Stem("antikrists"), "antikrist");});
test("antiloper -> antilop", function() {deepEqual( Stem("antiloper"), "antilop");});
test("antiokia -> antiokia", function() {deepEqual( Stem("antiokia"), "antiokia");});
test("antipas -> antipa", function() {deepEqual( Stem("antipas"), "antipa");});
test("antipatris -> antipatris", function() {deepEqual( Stem("antipatris"), "antipatris");});
test("antog -> antog", function() {deepEqual( Stem("antog"), "antog");});
test("antotija -> antotija", function() {deepEqual( Stem("antotija"), "antotija");});
test("antænde -> antænd", function() {deepEqual( Stem("antænde"), "antænd");});
test("antænder -> antænd", function() {deepEqual( Stem("antænder"), "antænd");});
test("antændes -> antænd", function() {deepEqual( Stem("antændes"), "antænd");});
test("antændt -> antænd", function() {deepEqual( Stem("antændt"), "antænd");});
test("antændte -> antænd", function() {deepEqual( Stem("antændte"), "antænd");});
test("anub -> anub", function() {deepEqual( Stem("anub"), "anub");});
test("anvender -> anvend", function() {deepEqual( Stem("anvender"), "anvend");});
test("anvendt -> anvend", function() {deepEqual( Stem("anvendt"), "anvend");});
test("anvendte -> anvend", function() {deepEqual( Stem("anvendte"), "anvend");});
test("anvendtes -> anvend", function() {deepEqual( Stem("anvendtes"), "anvend");});
test("anvise -> anvis", function() {deepEqual( Stem("anvise"), "anvis");});
test("anviser -> anvis", function() {deepEqual( Stem("anviser"), "anvis");});
test("anvisning -> anvisning", function() {deepEqual( Stem("anvisning"), "anvisning");});
test("anvisninger -> anvisning", function() {deepEqual( Stem("anvisninger"), "anvisning");});
test("anvist -> anvist", function() {deepEqual( Stem("anvist"), "anvist");});
test("anviste -> anvist", function() {deepEqual( Stem("anviste"), "anvist");});
test("anæer -> anæ", function() {deepEqual( Stem("anæer"), "anæ");});
test("anæeren -> anæ", function() {deepEqual( Stem("anæeren"), "anæ");});
test("anæerkongen -> anæerkong", function() {deepEqual( Stem("anæerkongen"), "anæerkong");});
test("anæerkongerne -> anæerkong", function() {deepEqual( Stem("anæerkongerne"), "anæerkong");});
test("anæerkvindens -> anæerkvind", function() {deepEqual( Stem("anæerkvindens"), "anæerkvind");});
test("anæerlandet -> anæerland", function() {deepEqual( Stem("anæerlandet"), "anæerland");});
test("anæerne -> anæ", function() {deepEqual( Stem("anæerne"), "anæ");});
test("anæernes -> anæ", function() {deepEqual( Stem("anæernes"), "anæ");});
test("anærerne -> anær", function() {deepEqual( Stem("anærerne"), "anær");});
test("aos -> aos", function() {deepEqual( Stem("aos"), "aos");});
test("apelles -> apel", function() {deepEqual( Stem("apelles"), "apel");});
test("apis -> apis", function() {deepEqual( Stem("apis"), "apis");});
test("apollonia -> apollonia", function() {deepEqual( Stem("apollonia"), "apollonia");});
test("apollos -> apollo", function() {deepEqual( Stem("apollos"), "apollo");});
test("apollyon -> apollyon", function() {deepEqual( Stem("apollyon"), "apollyon");});
test("apostel -> apostel", function() {deepEqual( Stem("apostel"), "apostel");});
test("apostelene -> apostel", function() {deepEqual( Stem("apostelene"), "apostel");});
test("apostelenes -> apostel", function() {deepEqual( Stem("apostelenes"), "apostel");});
test("apostelgerning -> apostelgerning", function() {deepEqual( Stem("apostelgerning"), "apostelgerning");});
test("apostelgernings -> apostelgerning", function() {deepEqual( Stem("apostelgernings"), "apostelgerning");});
test("apostels -> apostel", function() {deepEqual( Stem("apostels"), "apostel");});
test("apostle -> apostl", function() {deepEqual( Stem("apostle"), "apostl");});
test("apostlene -> apostl", function() {deepEqual( Stem("apostlene"), "apostl");});
test("apostlenes -> apostl", function() {deepEqual( Stem("apostlenes"), "apostl");});
test("apostles -> apostl", function() {deepEqual( Stem("apostles"), "apostl");});
test("appajim -> appajim", function() {deepEqual( Stem("appajim"), "appajim");});
test("appajims -> appajim", function() {deepEqual( Stem("appajims"), "appajim");});
test("appia -> appia", function() {deepEqual( Stem("appia"), "appia");});
test("appius -> appius", function() {deepEqual( Stem("appius"), "appius");});
test("ar -> ar", function() {deepEqual( Stem("ar"), "ar");});
test("ara -> ara", function() {deepEqual( Stem("ara"), "ara");});
test("arab -> arab", function() {deepEqual( Stem("arab"), "arab");});
test("araba -> araba", function() {deepEqual( Stem("araba"), "araba");});
test("arababækken -> arababæk", function() {deepEqual( Stem("arababækken"), "arababæk");});
test("arabaeller -> arabael", function() {deepEqual( Stem("arabaeller"), "arabael");});
test("arabahavet -> arabahav", function() {deepEqual( Stem("arabahavet"), "arabahav");});
test("arabahavets -> arabahav", function() {deepEqual( Stem("arabahavets"), "arabahav");});
test("arabalavningen -> arabalavning", function() {deepEqual( Stem("arabalavningen"), "arabalavning");});
test("arabalavningens -> arabalavning", function() {deepEqual( Stem("arabalavningens"), "arabalavning");});
test("arabasøen -> arabasø", function() {deepEqual( Stem("arabasøen"), "arabasø");});
test("arabavejen -> arabavej", function() {deepEqual( Stem("arabavejen"), "arabavej");});
test("araber -> arab", function() {deepEqual( Stem("araber"), "arab");});
test("arabere -> arab", function() {deepEqual( Stem("arabere"), "arab");});
test("araberen -> arab", function() {deepEqual( Stem("araberen"), "arab");});
test("araberne -> arab", function() {deepEqual( Stem("araberne"), "arab");});
test("arabernes -> arab", function() {deepEqual( Stem("arabernes"), "arab");});
test("arabien -> arabi", function() {deepEqual( Stem("arabien"), "arabi");});
test("arabiens -> arabi", function() {deepEqual( Stem("arabiens"), "arabi");});
test("arad -> arad", function() {deepEqual( Stem("arad"), "arad");});
test("arads -> arad", function() {deepEqual( Stem("arads"), "arad");});
test("araj -> araj", function() {deepEqual( Stem("araj"), "araj");});
test("arajim -> arajim", function() {deepEqual( Stem("arajim"), "arajim");});
test("aram -> aram", function() {deepEqual( Stem("aram"), "aram");});
test("aramaisk -> aramaisk", function() {deepEqual( Stem("aramaisk"), "aramaisk");});
test("aramaiske -> aramaisk", function() {deepEqual( Stem("aramaiske"), "aramaisk");});
test("aramernes -> aram", function() {deepEqual( Stem("aramernes"), "aram");});
test("arams -> aram", function() {deepEqual( Stem("arams"), "aram");});
test("aramæeme -> aramæem", function() {deepEqual( Stem("aramæeme"), "aramæem");});
test("aramæer -> aramæ", function() {deepEqual( Stem("aramæer"), "aramæ");});
test("aramæeren -> aramæ", function() {deepEqual( Stem("aramæeren"), "aramæ");});
test("aramæerkongen -> aramæerkong", function() {deepEqual( Stem("aramæerkongen"), "aramæerkong");});
test("aramæerkongens -> aramæerkong", function() {deepEqual( Stem("aramæerkongens"), "aramæerkong");});
test("aramæerkongernes -> aramæerkong", function() {deepEqual( Stem("aramæerkongernes"), "aramæerkong");});
test("aramæerne -> aramæ", function() {deepEqual( Stem("aramæerne"), "aramæ");});
test("aramæernes -> aramæ", function() {deepEqual( Stem("aramæernes"), "aramæ");});
test("aramæisk -> aramæisk", function() {deepEqual( Stem("aramæisk"), "aramæisk");});
test("aran -> aran", function() {deepEqual( Stem("aran"), "aran");});
test("arara -> arara", function() {deepEqual( Stem("arara"), "arara");});
test("ararats -> ararat", function() {deepEqual( Stem("ararats"), "ararat");});
test("aras -> ara", function() {deepEqual( Stem("aras"), "ara");});
test("arat -> arat", function() {deepEqual( Stem("arat"), "arat");});
test("aravna -> aravna", function() {deepEqual( Stem("aravna"), "aravna");});
test("aravnas -> aravna", function() {deepEqual( Stem("aravnas"), "aravna");});
test("arba -> arba", function() {deepEqual( Stem("arba"), "arba");});
test("arbas -> arba", function() {deepEqual( Stem("arbas"), "arba");});
test("arbejd -> arbejd", function() {deepEqual( Stem("arbejd"), "arbejd");});
test("arbejde -> arbejd", function() {deepEqual( Stem("arbejde"), "arbejd");});
test("arbejdede -> arbejded", function() {deepEqual( Stem("arbejdede"), "arbejded");});
test("arbejdende -> arbejd", function() {deepEqual( Stem("arbejdende"), "arbejd");});
test("arbejder -> arbejd", function() {deepEqual( Stem("arbejder"), "arbejd");});
test("arbejdere -> arbejd", function() {deepEqual( Stem("arbejdere"), "arbejd");});
test("arbejderen -> arbejd", function() {deepEqual( Stem("arbejderen"), "arbejd");});
test("arbejderens -> arbejd", function() {deepEqual( Stem("arbejderens"), "arbejd");});
test("arbejderes -> arbejd", function() {deepEqual( Stem("arbejderes"), "arbejd");});
test("arbejderne -> arbejd", function() {deepEqual( Stem("arbejderne"), "arbejd");});
test("arbejders -> arbejd", function() {deepEqual( Stem("arbejders"), "arbejd");});
test("arbejdes -> arbejd", function() {deepEqual( Stem("arbejdes"), "arbejd");});
test("arbejdet -> arbejd", function() {deepEqual( Stem("arbejdet"), "arbejd");});
test("arbejdsflokken -> arbejdsflok", function() {deepEqual( Stem("arbejdsflokken"), "arbejdsflok");});
test("arbejdshammeren -> arbejdsham", function() {deepEqual( Stem("arbejdshammeren"), "arbejdsham");});
test("arbejdsstyrken -> arbejdsstyrk", function() {deepEqual( Stem("arbejdsstyrken"), "arbejdsstyrk");});
test("arbejdstid -> arbejdstid", function() {deepEqual( Stem("arbejdstid"), "arbejdstid");});
test("arbejdstrælle -> arbejdstræl", function() {deepEqual( Stem("arbejdstrælle"), "arbejdstræl");});
test("arbel -> arbel", function() {deepEqual( Stem("arbel"), "arbel");});
test("ard -> ard", function() {deepEqual( Stem("ard"), "ard");});
test("arditernes -> ardit", function() {deepEqual( Stem("arditernes"), "ardit");});
test("ardon -> ardon", function() {deepEqual( Stem("ardon"), "ardon");});
test("areli -> areli", function() {deepEqual( Stem("areli"), "areli");});
test("areopagiten -> areopagit", function() {deepEqual( Stem("areopagiten"), "areopagit");});
test("areopagus -> areopagus", function() {deepEqual( Stem("areopagus"), "areopagus");});
test("aresjja -> aresjja", function() {deepEqual( Stem("aresjja"), "aresjja");});
test("aretas -> areta", function() {deepEqual( Stem("aretas"), "areta");});
test("arfaksads -> arfaksad", function() {deepEqual( Stem("arfaksads"), "arfaksad");});
test("arg -> arg", function() {deepEqual( Stem("arg"), "arg");});
test("argob -> argob", function() {deepEqual( Stem("argob"), "argob");});
test("argoblandet -> argobland", function() {deepEqual( Stem("argoblandet"), "argobland");});
test("aridaj -> aridaj", function() {deepEqual( Stem("aridaj"), "aridaj");});
test("aridata -> aridata", function() {deepEqual( Stem("aridata"), "aridata");});
test("ariel -> ariel", function() {deepEqual( Stem("ariel"), "ariel");});
test("arielsønner -> arielsøn", function() {deepEqual( Stem("arielsønner"), "arielsøn");});
test("arilds -> arild", function() {deepEqual( Stem("arilds"), "arild");});
test("arimathæa -> arimathæa", function() {deepEqual( Stem("arimathæa"), "arimathæa");});
test("arisaj -> arisaj", function() {deepEqual( Stem("arisaj"), "arisaj");});
test("aristarkus -> aristarkus", function() {deepEqual( Stem("aristarkus"), "aristarkus");});
test("aristobulus -> aristobulus", function() {deepEqual( Stem("aristobulus"), "aristobulus");});
test("arjok -> arjok", function() {deepEqual( Stem("arjok"), "arjok");});
test("ark -> ark", function() {deepEqual( Stem("ark"), "ark");});
test("arkelaus -> arkelaus", function() {deepEqual( Stem("arkelaus"), "arkelaus");});
test("arken -> ark", function() {deepEqual( Stem("arken"), "ark");});
test("arkens -> ark", function() {deepEqual( Stem("arkens"), "ark");});
test("arkippus -> arkippus", function() {deepEqual( Stem("arkippus"), "arkippus");});
test("arkiten -> arkit", function() {deepEqual( Stem("arkiten"), "arkit");});
test("arkiterne -> arkit", function() {deepEqual( Stem("arkiterne"), "arkit");});
test("arkiternes -> arkit", function() {deepEqual( Stem("arkiternes"), "arkit");});
test("arks -> ark", function() {deepEqual( Stem("arks"), "ark");});
test("arm -> arm", function() {deepEqual( Stem("arm"), "arm");});
test("armbånd -> armbånd", function() {deepEqual( Stem("armbånd"), "armbånd");});
test("armbåndene -> armbånd", function() {deepEqual( Stem("armbåndene"), "armbånd");});
test("arme -> arm", function() {deepEqual( Stem("arme"), "arm");});
test("armen -> arm", function() {deepEqual( Stem("armen"), "arm");});
test("armene -> arm", function() {deepEqual( Stem("armene"), "arm");});
test("armens -> arm", function() {deepEqual( Stem("armens"), "arm");});
test("armes -> arm", function() {deepEqual( Stem("armes"), "arm");});
test("armod -> armod", function() {deepEqual( Stem("armod"), "armod");});
test("armoni -> armoni", function() {deepEqual( Stem("armoni"), "armoni");});
test("arms -> arm", function() {deepEqual( Stem("arms"), "arm");});
test("armspangene -> armspang", function() {deepEqual( Stem("armspangene"), "armspang");});
test("arnan -> arnan", function() {deepEqual( Stem("arnan"), "arnan");});
test("arnon -> arnon", function() {deepEqual( Stem("arnon"), "arnon");});
test("arnonfloden -> arnonflod", function() {deepEqual( Stem("arnonfloden"), "arnonflod");});
test("arnonflodens -> arnonflod", function() {deepEqual( Stem("arnonflodens"), "arnonflod");});
test("arnons -> arnon", function() {deepEqual( Stem("arnons"), "arnon");});
test("arod -> arod", function() {deepEqual( Stem("arod"), "arod");});
test("arodi -> arodi", function() {deepEqual( Stem("arodi"), "arodi");});
test("aroditernes -> arodit", function() {deepEqual( Stem("aroditernes"), "arodit");});
test("aroer -> aro", function() {deepEqual( Stem("aroer"), "aro");});
test("aroeriten -> aroerit", function() {deepEqual( Stem("aroeriten"), "aroerit");});
test("aron -> aron", function() {deepEqual( Stem("aron"), "aron");});
test("arons -> aron", function() {deepEqual( Stem("arons"), "aron");});
test("aronsson -> aronsson", function() {deepEqual( Stem("aronsson"), "aronsson");});
test("arpad -> arpad", function() {deepEqual( Stem("arpad"), "arpad");});
test("arpads -> arpad", function() {deepEqual( Stem("arpads"), "arpad");});
test("arpaksjad -> arpaksjad", function() {deepEqual( Stem("arpaksjad"), "arpaksjad");});
test("arrig -> arr", function() {deepEqual( Stem("arrig"), "arr");});
test("ars -> ars", function() {deepEqual( Stem("ars"), "ars");});
test("art -> art", function() {deepEqual( Stem("art"), "art");});
test("artaxerxes -> artaxerx", function() {deepEqual( Stem("artaxerxes"), "artaxerx");});
test("artemas -> artema", function() {deepEqual( Stem("artemas"), "artema");});
test("artemis -> artemis", function() {deepEqual( Stem("artemis"), "artemis");});
test("artemistempler -> artemistempl", function() {deepEqual( Stem("artemistempler"), "artemistempl");});
test("arter -> art", function() {deepEqual( Stem("arter"), "art");});
test("arubbot -> arubbot", function() {deepEqual( Stem("arubbot"), "arubbot");});
test("aruma -> aruma", function() {deepEqual( Stem("aruma"), "aruma");});
test("arv -> arv", function() {deepEqual( Stem("arv"), "arv");});
test("arvaditerne -> arvadit", function() {deepEqual( Stem("arvaditerne"), "arvadit");});
test("arvads -> arvad", function() {deepEqual( Stem("arvads"), "arvad");});
test("arve -> arv", function() {deepEqual( Stem("arve"), "arv");});
test("arved -> arved", function() {deepEqual( Stem("arved"), "arved");});
test("arvejord -> arvejord", function() {deepEqual( Stem("arvejord"), "arvejord");});
test("arvelige -> arv", function() {deepEqual( Stem("arvelige"), "arv");});
test("arvelod -> arvelod", function() {deepEqual( Stem("arvelod"), "arvelod");});
test("arvelodden -> arvelod", function() {deepEqual( Stem("arvelodden"), "arvelod");});
test("arvelodder -> arvelod", function() {deepEqual( Stem("arvelodder"), "arvelod");});
test("arvelods -> arvelod", function() {deepEqual( Stem("arvelods"), "arvelod");});
test("arven -> arv", function() {deepEqual( Stem("arven"), "arv");});
test("arvepagt -> arvepag", function() {deepEqual( Stem("arvepagt"), "arvepag");});
test("arver -> arv", function() {deepEqual( Stem("arver"), "arv");});
test("arveretten -> arveret", function() {deepEqual( Stem("arveretten"), "arveret");});
test("arvet -> arv", function() {deepEqual( Stem("arvet"), "arv");});
test("arving -> arving", function() {deepEqual( Stem("arving"), "arving");});
test("arvingen -> arving", function() {deepEqual( Stem("arvingen"), "arving");});
test("arvinger -> arving", function() {deepEqual( Stem("arvinger"), "arving");});
test("arvs -> arv", function() {deepEqual( Stem("arvs"), "arv");});
test("arzas -> arza", function() {deepEqual( Stem("arzas"), "arza");});
test("as -> as", function() {deepEqual( Stem("as"), "as");});
test("asa -> asa", function() {deepEqual( Stem("asa"), "asa");});
test("asaf -> asaf", function() {deepEqual( Stem("asaf"), "asaf");});
test("asafs -> asaf", function() {deepEqual( Stem("asafs"), "asaf");});
test("asaj -> asaj", function() {deepEqual( Stem("asaj"), "asaj");});
test("asaja -> asaja", function() {deepEqual( Stem("asaja"), "asaja");});
test("asar -> asar", function() {deepEqual( Stem("asar"), "asar");});
test("asarhaddon -> asarhaddon", function() {deepEqual( Stem("asarhaddon"), "asarhaddon");});
test("asas -> asa", function() {deepEqual( Stem("asas"), "asa");});
test("asdod -> asdod", function() {deepEqual( Stem("asdod"), "asdod");});
test("asdoditerne -> asdodit", function() {deepEqual( Stem("asdoditerne"), "asdodit");});
test("asdoditisk -> asdoditisk", function() {deepEqual( Stem("asdoditisk"), "asdoditisk");});
test("asdoditiske -> asdoditisk", function() {deepEqual( Stem("asdoditiske"), "asdoditisk");});
test("asdods -> asdod", function() {deepEqual( Stem("asdods"), "asdod");});
test("asdodsiden -> asdodsid", function() {deepEqual( Stem("asdodsiden"), "asdodsid");});
test("aseja -> aseja", function() {deepEqual( Stem("aseja"), "aseja");});
test("asen -> asen", function() {deepEqual( Stem("asen"), "asen");});
test("asenappar -> asenappar", function() {deepEqual( Stem("asenappar"), "asenappar");});
test("asenat -> asenat", function() {deepEqual( Stem("asenat"), "asenat");});
test("aseninde -> asenind", function() {deepEqual( Stem("aseninde"), "asenind");});
test("aseninden -> asenind", function() {deepEqual( Stem("aseninden"), "asenind");});
test("asenindens -> asenind", function() {deepEqual( Stem("asenindens"), "asenind");});
test("aseninder -> asenind", function() {deepEqual( Stem("aseninder"), "asenind");});
test("aseninderne -> asenind", function() {deepEqual( Stem("aseninderne"), "asenind");});
test("asenindes -> asenind", function() {deepEqual( Stem("asenindes"), "asenind");});
test("aser -> aser", function() {deepEqual( Stem("aser"), "aser");});
test("aseriterne -> aserit", function() {deepEqual( Stem("aseriterne"), "aserit");});
test("aseriternes -> aserit", function() {deepEqual( Stem("aseriternes"), "aserit");});
test("asers -> aser", function() {deepEqual( Stem("asers"), "aser");});
test("asiarkerne -> asiark", function() {deepEqual( Stem("asiarkerne"), "asiark");});
test("asiaterne -> asiat", function() {deepEqual( Stem("asiaterne"), "asiat");});
test("asiel -> asiel", function() {deepEqual( Stem("asiel"), "asiel");});
test("asien -> asi", function() {deepEqual( Stem("asien"), "asi");});
test("asiens -> asi", function() {deepEqual( Stem("asiens"), "asi");});
test("asj -> asj", function() {deepEqual( Stem("asj"), "asj");});
test("asjan -> asjan", function() {deepEqual( Stem("asjan"), "asjan");});
test("asjbeas -> asjbea", function() {deepEqual( Stem("asjbeas"), "asjbea");});
test("asjbel -> asjbel", function() {deepEqual( Stem("asjbel"), "asjbel");});
test("asjbeliternes -> asjbelit", function() {deepEqual( Stem("asjbeliternes"), "asjbelit");});
test("asjera -> asjera", function() {deepEqual( Stem("asjera"), "asjera");});
test("asjeraprofeter -> asjeraprofet", function() {deepEqual( Stem("asjeraprofeter"), "asjeraprofet");});
test("asjerastøtte -> asjerastøt", function() {deepEqual( Stem("asjerastøtte"), "asjerastøt");});
test("asjerastøtten -> asjerastøt", function() {deepEqual( Stem("asjerastøtten"), "asjerastøt");});
test("asjerastøtter -> asjerastøt", function() {deepEqual( Stem("asjerastøtter"), "asjerastøt");});
test("asjerastøtterne -> asjerastøt", function() {deepEqual( Stem("asjerastøtterne"), "asjerastøt");});
test("asjerer -> asj", function() {deepEqual( Stem("asjerer"), "asj");});
test("asjererne -> asjer", function() {deepEqual( Stem("asjererne"), "asjer");});
test("asjgaz -> asjgaz", function() {deepEqual( Stem("asjgaz"), "asjgaz");});
test("asjhur -> asjhur", function() {deepEqual( Stem("asjhur"), "asjhur");});
test("asjima -> asjima", function() {deepEqual( Stem("asjima"), "asjima");});
test("asjkenaz -> asjkenaz", function() {deepEqual( Stem("asjkenaz"), "asjkenaz");});
test("asjkenazs -> asjkenaz", function() {deepEqual( Stem("asjkenazs"), "asjkenaz");});
test("asjna -> asjna", function() {deepEqual( Stem("asjna"), "asjna");});
test("asjpenaz -> asjpenaz", function() {deepEqual( Stem("asjpenaz"), "asjpenaz");});
test("asjtarot -> asjtarot", function() {deepEqual( Stem("asjtarot"), "asjtarot");});
test("asjtatot -> asjtatot", function() {deepEqual( Stem("asjtatot"), "asjtatot");});
test("asjvat -> asjvat", function() {deepEqual( Stem("asjvat"), "asjvat");});
test("askalon -> askalon", function() {deepEqual( Stem("askalon"), "askalon");});
test("askalons -> askalon", function() {deepEqual( Stem("askalons"), "askalon");});
test("aske -> ask", function() {deepEqual( Stem("aske"), "ask");});
test("askedyngen -> askedyng", function() {deepEqual( Stem("askedyngen"), "askedyng");});
test("asken -> ask", function() {deepEqual( Stem("asken"), "ask");});
test("askesprog -> askesprog", function() {deepEqual( Stem("askesprog"), "askesprog");});
test("asnas -> asna", function() {deepEqual( Stem("asnas"), "asna");});
test("aspata -> aspata", function() {deepEqual( Stem("aspata"), "aspata");});
test("asriel -> asriel", function() {deepEqual( Stem("asriel"), "asriel");});
test("asrieliternes -> asrielit", function() {deepEqual( Stem("asrieliternes"), "asrielit");});
test("asriels -> asriel", function() {deepEqual( Stem("asriels"), "asriel");});
test("assir -> assir", function() {deepEqual( Stem("assir"), "assir");});
test("assjur -> assjur", function() {deepEqual( Stem("assjur"), "assjur");});
test("assjuriterne -> assjurit", function() {deepEqual( Stem("assjuriterne"), "assjurit");});
test("assur -> assur", function() {deepEqual( Stem("assur"), "assur");});
test("assurs -> assur", function() {deepEqual( Stem("assurs"), "assur");});
test("assus -> assus", function() {deepEqual( Stem("assus"), "assus");});
test("assyrer -> assyr", function() {deepEqual( Stem("assyrer"), "assyr");});
test("assyrerkongen -> assyrerkong", function() {deepEqual( Stem("assyrerkongen"), "assyrerkong");});
test("assyrerkongens -> assyrerkong", function() {deepEqual( Stem("assyrerkongens"), "assyrerkong");});
test("assyrerkongerne -> assyrerkong", function() {deepEqual( Stem("assyrerkongerne"), "assyrerkong");});
test("assyrerkongernes -> assyrerkong", function() {deepEqual( Stem("assyrerkongernes"), "assyrerkong");});
test("assyrerkoogen -> assyrerkoog", function() {deepEqual( Stem("assyrerkoogen"), "assyrerkoog");});
test("assyrerne -> assyr", function() {deepEqual( Stem("assyrerne"), "assyr");});
test("assyrernes -> assyr", function() {deepEqual( Stem("assyrernes"), "assyr");});
test("assyrien -> assyri", function() {deepEqual( Stem("assyrien"), "assyri");});
test("astarte -> astart", function() {deepEqual( Stem("astarte"), "astart");});
test("astarterne -> astart", function() {deepEqual( Stem("astarterne"), "astart");});
test("astartes -> astart", function() {deepEqual( Stem("astartes"), "astart");});
test("asynkritus -> asynkritus", function() {deepEqual( Stem("asynkritus"), "asynkritus");});
test("at -> at", function() {deepEqual( Stem("at"), "at");});
test("ataja -> ataja", function() {deepEqual( Stem("ataja"), "ataja");});
test("atak -> atak", function() {deepEqual( Stem("atak"), "atak");});
test("atalja -> atalja", function() {deepEqual( Stem("atalja"), "atalja");});
test("ataljas -> atalja", function() {deepEqual( Stem("ataljas"), "atalja");});
test("atara -> atara", function() {deepEqual( Stem("atara"), "atara");});
test("atarimvejen -> atarimvej", function() {deepEqual( Stem("atarimvejen"), "atarimvej");});
test("atarot -> atarot", function() {deepEqual( Stem("atarot"), "atarot");});
test("atbejde -> atbejd", function() {deepEqual( Stem("atbejde"), "atbejd");});
test("atek -> atek", function() {deepEqual( Stem("atek"), "atek");});
test("ater -> ater", function() {deepEqual( Stem("ater"), "ater");});
test("aters -> ater", function() {deepEqual( Stem("aters"), "ater");});
test("atfrå -> atfrå", function() {deepEqual( Stem("atfrå"), "atfrå");});
test("atha -> atha", function() {deepEqual( Stem("atha"), "atha");});
test("athemiensiske -> athemiensisk", function() {deepEqual( Stem("athemiensiske"), "athemiensisk");});
test("athen -> ath", function() {deepEqual( Stem("athen"), "ath");});
test("atheniensere -> atheniens", function() {deepEqual( Stem("atheniensere"), "atheniens");});
test("atitemes -> atitem", function() {deepEqual( Stem("atitemes"), "atitem");});
test("atiterne -> atit", function() {deepEqual( Stem("atiterne"), "atit");});
test("atiternes -> atit", function() {deepEqual( Stem("atiternes"), "atit");});
test("atjeg -> atjeg", function() {deepEqual( Stem("atjeg"), "atjeg");});
test("atlaj -> atlaj", function() {deepEqual( Stem("atlaj"), "atlaj");});
test("atnmoniterne -> atnmonit", function() {deepEqual( Stem("atnmoniterne"), "atnmonit");});
test("atnmoniternes -> atnmonit", function() {deepEqual( Stem("atnmoniternes"), "atnmonit");});
test("aton -> aton", function() {deepEqual( Stem("aton"), "aton");});
test("atpaksjad -> atpaksjad", function() {deepEqual( Stem("atpaksjad"), "atpaksjad");});
test("attaj -> attaj", function() {deepEqual( Stem("attaj"), "attaj");});
test("attalia -> attalia", function() {deepEqual( Stem("attalia"), "attalia");});
test("atten -> att", function() {deepEqual( Stem("atten"), "att");});
test("attende -> att", function() {deepEqual( Stem("attende"), "att");});
test("atter -> att", function() {deepEqual( Stem("atter"), "att");});
test("attorestå -> attorestå", function() {deepEqual( Stem("attorestå"), "attorestå");});
test("attrå -> attrå", function() {deepEqual( Stem("attrå"), "attrå");});
test("attråede -> attråed", function() {deepEqual( Stem("attråede"), "attråed");});
test("attrår -> attrår", function() {deepEqual( Stem("attrår"), "attrår");});
test("attus -> attus", function() {deepEqual( Stem("attus"), "attus");});
test("augustus -> augustus", function() {deepEqual( Stem("augustus"), "augustus");});
test("aum -> aum", function() {deepEqual( Stem("aum"), "aum");});
test("ava -> ava", function() {deepEqual( Stem("ava"), "ava");});
test("avan -> avan", function() {deepEqual( Stem("avan"), "avan");});
test("aven -> aven", function() {deepEqual( Stem("aven"), "aven");});
test("avens -> aven", function() {deepEqual( Stem("avens"), "aven");});
test("avind -> avind", function() {deepEqual( Stem("avind"), "avind");});
test("avinds -> avind", function() {deepEqual( Stem("avinds"), "avind");});
test("avindsmand -> avindsmand", function() {deepEqual( Stem("avindsmand"), "avindsmand");});
test("avindsmands -> avindsmand", function() {deepEqual( Stem("avindsmands"), "avindsmand");});
test("avindsmænd -> avindsmænd", function() {deepEqual( Stem("avindsmænd"), "avindsmænd");});
test("avindsmænds -> avindsmænd", function() {deepEqual( Stem("avindsmænds"), "avindsmænd");});
test("avit -> avit", function() {deepEqual( Stem("avit"), "avit");});
test("avl -> avl", function() {deepEqual( Stem("avl"), "avl");});
test("avle -> avl", function() {deepEqual( Stem("avle"), "avl");});
test("avled -> avled", function() {deepEqual( Stem("avled"), "avled");});
test("avlede -> avled", function() {deepEqual( Stem("avlede"), "avled");});
test("avledes -> avled", function() {deepEqual( Stem("avledes"), "avled");});
test("avler -> avl", function() {deepEqual( Stem("avler"), "avl");});
test("avlet -> avl", function() {deepEqual( Stem("avlet"), "avl");});
test("avner -> avn", function() {deepEqual( Stem("avner"), "avn");});
test("avnerne -> avn", function() {deepEqual( Stem("avnerne"), "avn");});
test("avva -> avva", function() {deepEqual( Stem("avva"), "avva");});
test("avvijiterne -> avvijit", function() {deepEqual( Stem("avvijiterne"), "avvijit");});
test("avvim -> avvim", function() {deepEqual( Stem("avvim"), "avvim");});
test("avviterne -> avvit", function() {deepEqual( Stem("avviterne"), "avvit");});
test("az -> az", function() {deepEqual( Stem("az"), "az");});
test("azaj -> azaj", function() {deepEqual( Stem("azaj"), "azaj");});
test("azal -> azal", function() {deepEqual( Stem("azal"), "azal");});
test("azalja -> azalja", function() {deepEqual( Stem("azalja"), "azalja");});
test("azaljas -> azalja", function() {deepEqual( Stem("azaljas"), "azalja");});
test("azanja -> azanja", function() {deepEqual( Stem("azanja"), "azanja");});
test("azanjas -> azanja", function() {deepEqual( Stem("azanjas"), "azanja");});
test("azar -> azar", function() {deepEqual( Stem("azar"), "azar");});
test("azarja -> azarja", function() {deepEqual( Stem("azarja"), "azarja");});
test("azarjahu -> azarjahu", function() {deepEqual( Stem("azarjahu"), "azarjahu");});
test("azarjas -> azarja", function() {deepEqual( Stem("azarjas"), "azarja");});
test("azaz -> azaz", function() {deepEqual( Stem("azaz"), "azaz");});
test("azazel -> azazel", function() {deepEqual( Stem("azazel"), "azazel");});
test("azazjas -> azazja", function() {deepEqual( Stem("azazjas"), "azazja");});
test("azbuks -> azbuk", function() {deepEqual( Stem("azbuks"), "azbuk");});
test("azeka -> azeka", function() {deepEqual( Stem("azeka"), "azeka");});
test("azel -> azel", function() {deepEqual( Stem("azel"), "azel");});
test("azels -> azel", function() {deepEqual( Stem("azels"), "azel");});
test("azgad -> azgad", function() {deepEqual( Stem("azgad"), "azgad");});
test("azgads -> azgad", function() {deepEqual( Stem("azgads"), "azgad");});
test("aziza -> aziza", function() {deepEqual( Stem("aziza"), "aziza");});
test("azja -> azja", function() {deepEqual( Stem("azja"), "azja");});
test("azmavet -> azmav", function() {deepEqual( Stem("azmavet"), "azmav");});
test("azmavets -> azmav", function() {deepEqual( Stem("azmavets"), "azmav");});
test("azmon -> azmon", function() {deepEqual( Stem("azmon"), "azmon");});
test("aznot -> aznot", function() {deepEqual( Stem("aznot"), "aznot");});
test("azor -> azor", function() {deepEqual( Stem("azor"), "azor");});
test("azriel -> azriel", function() {deepEqual( Stem("azriel"), "azriel");});
test("azriels -> azriel", function() {deepEqual( Stem("azriels"), "azriel");});
test("azrikam -> azrikam", function() {deepEqual( Stem("azrikam"), "azrikam");});
test("azuba -> azuba", function() {deepEqual( Stem("azuba"), "azuba");});
test("azzans -> azzan", function() {deepEqual( Stem("azzans"), "azzan");});
test("azzar -> azzar", function() {deepEqual( Stem("azzar"), "azzar");});
test("azzur -> azzur", function() {deepEqual( Stem("azzur"), "azzur");});
test("azzurs -> azzur", function() {deepEqual( Stem("azzurs"), "azzur");});
test("aøgelsen -> aøg", function() {deepEqual( Stem("aøgelsen"), "aøg");});
test("b -> b", function() {deepEqual( Stem("b"), "b");});
test("ba -> ba", function() {deepEqual( Stem("ba"), "ba");});
test("baal -> baal", function() {deepEqual( Stem("baal"), "baal");});
test("baaler -> baal", function() {deepEqual( Stem("baaler"), "baal");});
test("baalerne -> baal", function() {deepEqual( Stem("baalerne"), "baal");});
test("baalernes -> baal", function() {deepEqual( Stem("baalernes"), "baal");});
test("baalis -> baalis", function() {deepEqual( Stem("baalis"), "baalis");});
test("baals -> baal", function() {deepEqual( Stem("baals"), "baal");});
test("baalshøjene -> baalshøj", function() {deepEqual( Stem("baalshøjene"), "baalshøj");});
test("baalsnavnene -> baalsnavn", function() {deepEqual( Stem("baalsnavnene"), "baalsnavn");});
test("babel -> babel", function() {deepEqual( Stem("babel"), "babel");});
test("babels -> babel", function() {deepEqual( Stem("babels"), "babel");});
test("babylon -> babylon", function() {deepEqual( Stem("babylon"), "babylon");});
test("babylonerne -> babylon", function() {deepEqual( Stem("babylonerne"), "babylon");});
test("babylonisk -> babylonisk", function() {deepEqual( Stem("babylonisk"), "babylonisk");});
test("bad -> bad", function() {deepEqual( Stem("bad"), "bad");});
test("bade -> bad", function() {deepEqual( Stem("bade"), "bad");});
test("badede -> baded", function() {deepEqual( Stem("badede"), "baded");});
test("bader -> bad", function() {deepEqual( Stem("bader"), "bad");});
test("badet -> bad", function() {deepEqual( Stem("badet"), "bad");});
test("bael -> bael", function() {deepEqual( Stem("bael"), "bael");});
test("bag -> bag", function() {deepEqual( Stem("bag"), "bag");});
test("bagbygningen -> bagbygning", function() {deepEqual( Stem("bagbygningen"), "bagbygning");});
test("bage -> bag", function() {deepEqual( Stem("bage"), "bag");});
test("bagefter -> bageft", function() {deepEqual( Stem("bagefter"), "bageft");});
test("bager -> bag", function() {deepEqual( Stem("bager"), "bag");});
test("bageren -> bag", function() {deepEqual( Stem("bageren"), "bag");});
test("bagerens -> bag", function() {deepEqual( Stem("bagerens"), "bag");});
test("bagerovn -> bagerovn", function() {deepEqual( Stem("bagerovn"), "bagerovn");});
test("bagerovne -> bagerovn", function() {deepEqual( Stem("bagerovne"), "bagerovn");});
test("bagerovnen -> bagerovn", function() {deepEqual( Stem("bagerovnen"), "bagerovn");});
test("bages -> bag", function() {deepEqual( Stem("bages"), "bag");});
test("bagest -> bagest", function() {deepEqual( Stem("bagest"), "bagest");});
test("bageste -> bagest", function() {deepEqual( Stem("bageste"), "bagest");});
test("bagfra -> bagfra", function() {deepEqual( Stem("bagfra"), "bagfra");});
test("baghjørner -> baghjørn", function() {deepEqual( Stem("baghjørner"), "baghjørn");});
test("baghold -> baghold", function() {deepEqual( Stem("baghold"), "baghold");});
test("bagholdet -> baghold", function() {deepEqual( Stem("bagholdet"), "baghold");});
test("baghovedet -> baghoved", function() {deepEqual( Stem("baghovedet"), "baghoved");});
test("bagkroppen -> bagkrop", function() {deepEqual( Stem("bagkroppen"), "bagkrop");});
test("baglæns -> baglæn", function() {deepEqual( Stem("baglæns"), "baglæn");});
test("bagover -> bagov", function() {deepEqual( Stem("bagover"), "bagov");});
test("bagside -> bagsid", function() {deepEqual( Stem("bagside"), "bagsid");});
test("bagsiden -> bagsid", function() {deepEqual( Stem("bagsiden"), "bagsid");});
test("bagsrejse -> bagsrejs", function() {deepEqual( Stem("bagsrejse"), "bagsrejs");});
test("bagstavnen -> bagstavn", function() {deepEqual( Stem("bagstavnen"), "bagstavn");});
test("bagt -> bagt", function() {deepEqual( Stem("bagt"), "bagt");});
test("bagtal -> bagtal", function() {deepEqual( Stem("bagtal"), "bagtal");});
test("bagtale -> bagtal", function() {deepEqual( Stem("bagtale"), "bagtal");});
test("bagtalelse -> bagtal", function() {deepEqual( Stem("bagtalelse"), "bagtal");});
test("bagtalelser -> bagtal", function() {deepEqual( Stem("bagtalelser"), "bagtal");});
test("bagtalende -> bagtal", function() {deepEqual( Stem("bagtalende"), "bagtal");});
test("bagtaler -> bagtal", function() {deepEqual( Stem("bagtaler"), "bagtal");});
test("bagtaleren -> bagtal", function() {deepEqual( Stem("bagtaleren"), "bagtal");});
test("bagtalerens -> bagtal", function() {deepEqual( Stem("bagtalerens"), "bagtal");});
test("bagtaleriske -> bagtalerisk", function() {deepEqual( Stem("bagtaleriske"), "bagtalerisk");});
test("bagtalt -> bagtalt", function() {deepEqual( Stem("bagtalt"), "bagtalt");});
test("bagtalte -> bagtalt", function() {deepEqual( Stem("bagtalte"), "bagtalt");});
test("bagte -> bagt", function() {deepEqual( Stem("bagte"), "bagt");});
test("bagtil -> bagtil", function() {deepEqual( Stem("bagtil"), "bagtil");});
test("bagtrop -> bagtrop", function() {deepEqual( Stem("bagtrop"), "bagtrop");});
test("bagud -> bagud", function() {deepEqual( Stem("bagud"), "bagud");});
test("bagvaske -> bagvask", function() {deepEqual( Stem("bagvaske"), "bagvask");});
test("bagvasker -> bagvask", function() {deepEqual( Stem("bagvasker"), "bagvask");});
test("bagvaskere -> bagvask", function() {deepEqual( Stem("bagvaskere"), "bagvask");});
test("bagved -> bagved", function() {deepEqual( Stem("bagved"), "bagved");});
test("bagvendt -> bagvend", function() {deepEqual( Stem("bagvendt"), "bagvend");});
test("bagværk -> bagværk", function() {deepEqual( Stem("bagværk"), "bagværk");});
test("bagværket -> bagværk", function() {deepEqual( Stem("bagværket"), "bagværk");});
test("bahurim -> bahurim", function() {deepEqual( Stem("bahurim"), "bahurim");});
test("bakabuskene -> bakabusk", function() {deepEqual( Stem("bakabuskene"), "bakabusk");});
test("bakabuskenes -> bakabusk", function() {deepEqual( Stem("bakabuskenes"), "bakabusk");});
test("bakadalen -> bakadal", function() {deepEqual( Stem("bakadalen"), "bakadal");});
test("bakbakkar -> bakbakkar", function() {deepEqual( Stem("bakbakkar"), "bakbakkar");});
test("bakbukja -> bakbukja", function() {deepEqual( Stem("bakbukja"), "bakbukja");});
test("bakbuks -> bakbuk", function() {deepEqual( Stem("bakbuks"), "bakbuk");});
test("bakke -> bak", function() {deepEqual( Stem("bakke"), "bak");});
test("bakkelandet -> bakkeland", function() {deepEqual( Stem("bakkelandet"), "bakkeland");});
test("bakker -> bak", function() {deepEqual( Stem("bakker"), "bak");});
test("bakkerne -> bak", function() {deepEqual( Stem("bakkerne"), "bak");});
test("bakket -> bak", function() {deepEqual( Stem("bakket"), "bak");});
test("bal -> bal", function() {deepEqual( Stem("bal"), "bal");});
test("bala -> bala", function() {deepEqual( Stem("bala"), "bala");});
test("balak -> balak", function() {deepEqual( Stem("balak"), "balak");});
test("balaks -> balak", function() {deepEqual( Stem("balaks"), "balak");});
test("balel -> balel", function() {deepEqual( Stem("balel"), "balel");});
test("balgen -> balg", function() {deepEqual( Stem("balgen"), "balg");});
test("balsam -> balsam", function() {deepEqual( Stem("balsam"), "balsam");});
test("balsambede -> balsambed", function() {deepEqual( Stem("balsambede"), "balsambed");});
test("balsambjerge -> balsambjerg", function() {deepEqual( Stem("balsambjerge"), "balsambjerg");});
test("balsamere -> balsam", function() {deepEqual( Stem("balsamere"), "balsam");});
test("balsamerede -> balsam", function() {deepEqual( Stem("balsamerede"), "balsam");});
test("balsameringen -> balsamering", function() {deepEqual( Stem("balsameringen"), "balsamering");});
test("bam -> bam", function() {deepEqual( Stem("bam"), "bam");});
test("bamot -> bamot", function() {deepEqual( Stem("bamot"), "bamot");});
test("ban -> ban", function() {deepEqual( Stem("ban"), "ban");});
test("band -> band", function() {deepEqual( Stem("band"), "band");});
test("bande -> band", function() {deepEqual( Stem("bande"), "band");});
test("banden -> band", function() {deepEqual( Stem("banden"), "band");});
test("bandende -> band", function() {deepEqual( Stem("bandende"), "band");});
test("bander -> band", function() {deepEqual( Stem("bander"), "band");});
test("bandes -> band", function() {deepEqual( Stem("bandes"), "band");});
test("bandet -> band", function() {deepEqual( Stem("bandet"), "band");});
test("bandlyst -> bandlyst", function() {deepEqual( Stem("bandlyst"), "bandlyst");});
test("bandlyste -> bandlyst", function() {deepEqual( Stem("bandlyste"), "bandlyst");});
test("bandt -> band", function() {deepEqual( Stem("bandt"), "band");});
test("bane -> ban", function() {deepEqual( Stem("bane"), "ban");});
test("banede -> baned", function() {deepEqual( Stem("banede"), "baned");});
test("banen -> ban", function() {deepEqual( Stem("banen"), "ban");});
test("baner -> ban", function() {deepEqual( Stem("baner"), "ban");});
test("banet -> ban", function() {deepEqual( Stem("banet"), "ban");});
test("bange -> bang", function() {deepEqual( Stem("bange"), "bang");});
test("bani -> bani", function() {deepEqual( Stem("bani"), "bani");});
test("banis -> banis", function() {deepEqual( Stem("banis"), "banis");});
test("banke -> bank", function() {deepEqual( Stem("banke"), "bank");});
test("banked -> banked", function() {deepEqual( Stem("banked"), "banked");});
test("bankede -> banked", function() {deepEqual( Stem("bankede"), "banked");});
test("banker -> bank", function() {deepEqual( Stem("banker"), "bank");});
test("banner -> ban", function() {deepEqual( Stem("banner"), "ban");});
test("banneret -> ban", function() {deepEqual( Stem("banneret"), "ban");});
test("bans -> ban", function() {deepEqual( Stem("bans"), "ban");});
test("bar -> bar", function() {deepEqual( Stem("bar"), "bar");});
test("bara -> bara", function() {deepEqual( Stem("bara"), "bara");});
test("barabas -> baraba", function() {deepEqual( Stem("barabas"), "baraba");});
test("barabbas -> barabba", function() {deepEqual( Stem("barabbas"), "barabba");});
test("barak -> barak", function() {deepEqual( Stem("barak"), "barak");});
test("barakias -> barakia", function() {deepEqual( Stem("barakias"), "barakia");});
test("baraks -> barak", function() {deepEqual( Stem("baraks"), "barak");});
test("barbar -> barbar", function() {deepEqual( Stem("barbar"), "barbar");});
test("barbarer -> barbar", function() {deepEqual( Stem("barbarer"), "barbar");});
test("barbarerne -> barbar", function() {deepEqual( Stem("barbarerne"), "barbar");});
test("bare -> bar", function() {deepEqual( Stem("bare"), "bar");});
test("bareas -> barea", function() {deepEqual( Stem("bareas"), "barea");});
test("barfodede -> barfoded", function() {deepEqual( Stem("barfodede"), "barfoded");});
test("barfodedes -> barfoded", function() {deepEqual( Stem("barfodedes"), "barfoded");});
test("barfodet -> barfod", function() {deepEqual( Stem("barfodet"), "barfod");});
test("baria -> baria", function() {deepEqual( Stem("baria"), "baria");});
test("barimbjerget -> barimbjerg", function() {deepEqual( Stem("barimbjerget"), "barimbjerg");});
test("barjesus -> barjesus", function() {deepEqual( Stem("barjesus"), "barjesus");});
test("barken -> bark", function() {deepEqual( Stem("barken"), "bark");});
test("barkos -> barko", function() {deepEqual( Stem("barkos"), "barko");});
test("barm -> barm", function() {deepEqual( Stem("barm"), "barm");});
test("barmbjertighed -> barmbjert", function() {deepEqual( Stem("barmbjertighed"), "barmbjert");});
test("barmhjerlighed -> barmhjer", function() {deepEqual( Stem("barmhjerlighed"), "barmhjer");});
test("barmhjertig -> barmhjert", function() {deepEqual( Stem("barmhjertig"), "barmhjert");});
test("barmhjertige -> barmhjert", function() {deepEqual( Stem("barmhjertige"), "barmhjert");});
test("barmhjertighed -> barmhjert", function() {deepEqual( Stem("barmhjertighed"), "barmhjert");});
test("barmhjertigheden -> barmhjert", function() {deepEqual( Stem("barmhjertigheden"), "barmhjert");});
test("barmhjertighedens -> barmhjert", function() {deepEqual( Stem("barmhjertighedens"), "barmhjert");});
test("barmhjertigheds -> barmhjert", function() {deepEqual( Stem("barmhjertigheds"), "barmhjert");});
test("barmhjertigt -> barmhjert", function() {deepEqual( Stem("barmhjertigt"), "barmhjert");});
test("barn -> barn", function() {deepEqual( Stem("barn"), "barn");});
test("barnabas -> barnaba", function() {deepEqual( Stem("barnabas"), "barnaba");});
test("barnagtige -> barnag", function() {deepEqual( Stem("barnagtige"), "barnag");});
test("barndommen -> barndom", function() {deepEqual( Stem("barndommen"), "barndom");});
test("barnea -> barnea", function() {deepEqual( Stem("barnea"), "barnea");});
test("barnefødsel -> barnefødsel", function() {deepEqual( Stem("barnefødsel"), "barnefødsel");});
test("barnemoder -> barnemod", function() {deepEqual( Stem("barnemoder"), "barnemod");});
test("barnet -> barn", function() {deepEqual( Stem("barnet"), "barn");});
test("barnets -> barn", function() {deepEqual( Stem("barnets"), "barn");});
test("barnk -> barnk", function() {deepEqual( Stem("barnk"), "barnk");});
test("barnlille -> barnlil", function() {deepEqual( Stem("barnlille"), "barnlil");});
test("barnløs -> barnløs", function() {deepEqual( Stem("barnløs"), "barnløs");});
test("barnløse -> barnløs", function() {deepEqual( Stem("barnløse"), "barnløs");});
test("barnløshed -> barnløs", function() {deepEqual( Stem("barnløshed"), "barnløs");});
test("barnløsheds -> barnløs", function() {deepEqual( Stem("barnløsheds"), "barnløs");});
test("barnløst -> barnløs", function() {deepEqual( Stem("barnløst"), "barnløs");});
test("barns -> barn", function() {deepEqual( Stem("barns"), "barn");});
test("barnsben -> barnsb", function() {deepEqual( Stem("barnsben"), "barnsb");});
test("barnsnød -> barnsnød", function() {deepEqual( Stem("barnsnød"), "barnsnød");});
test("barsabbas -> barsabba", function() {deepEqual( Stem("barsabbas"), "barsabba");});
test("bart -> bart", function() {deepEqual( Stem("bart"), "bart");});
test("bartholomæus -> bartholomæus", function() {deepEqual( Stem("bartholomæus"), "bartholomæus");});
test("bartimæus -> bartimæus", function() {deepEqual( Stem("bartimæus"), "bartimæus");});
test("baruk -> baruk", function() {deepEqual( Stem("baruk"), "baruk");});
test("barzillaj -> barzillaj", function() {deepEqual( Stem("barzillaj"), "barzillaj");});
test("barzillajs -> barzillaj", function() {deepEqual( Stem("barzillajs"), "barzillaj");});
test("basan -> basan", function() {deepEqual( Stem("basan"), "basan");});
test("basankøer -> basankø", function() {deepEqual( Stem("basankøer"), "basankø");});
test("basans -> basan", function() {deepEqual( Stem("basans"), "basan");});
test("basemat -> basemat", function() {deepEqual( Stem("basemat"), "basemat");});
test("basemats -> basemat", function() {deepEqual( Stem("basemats"), "basemat");});
test("basilisker -> basilisk", function() {deepEqual( Stem("basilisker"), "basilisk");});
test("basja -> basja", function() {deepEqual( Stem("basja"), "basja");});
test("basjas -> basja", function() {deepEqual( Stem("basjas"), "basja");});
test("baster -> bast", function() {deepEqual( Stem("baster"), "bast");});
test("basun -> basun", function() {deepEqual( Stem("basun"), "basun");});
test("basunblæsere -> basunblæs", function() {deepEqual( Stem("basunblæsere"), "basunblæs");});
test("basune -> basun", function() {deepEqual( Stem("basune"), "basun");});
test("basunede -> basuned", function() {deepEqual( Stem("basunede"), "basuned");});
test("basunen -> basun", function() {deepEqual( Stem("basunen"), "basun");});
test("basunens -> basun", function() {deepEqual( Stem("basunens"), "basun");});
test("basuner -> basun", function() {deepEqual( Stem("basuner"), "basun");});
test("basunrøster -> basunrøst", function() {deepEqual( Stem("basunrøster"), "basunrøst");});
test("basusnede -> basusned", function() {deepEqual( Stem("basusnede"), "basusned");});
test("bat -> bat", function() {deepEqual( Stem("bat"), "bat");});
test("batseba -> batseba", function() {deepEqual( Stem("batseba"), "batseba");});
test("batsjua -> batsjua", function() {deepEqual( Stem("batsjua"), "batsjua");});
test("bavde -> bavd", function() {deepEqual( Stem("bavde"), "bavd");});
test("bazluts -> bazlut", function() {deepEqual( Stem("bazluts"), "bazlut");});
test("bdellium -> bdellium", function() {deepEqual( Stem("bdellium"), "bdellium");});
test("be -> be", function() {deepEqual( Stem("be"), "be");});
test("bealja -> bealja", function() {deepEqual( Stem("bealja"), "bealja");});
test("bealot -> bealot", function() {deepEqual( Stem("bealot"), "bealot");});
test("bebaj -> bebaj", function() {deepEqual( Stem("bebaj"), "bebaj");});
test("bebajs -> bebaj", function() {deepEqual( Stem("bebajs"), "bebaj");});
test("bebo -> bebo", function() {deepEqual( Stem("bebo"), "bebo");});
test("beboede -> beboed", function() {deepEqual( Stem("beboede"), "beboed");});
test("beboedes -> beboed", function() {deepEqual( Stem("beboedes"), "beboed");});
test("beboelseshus -> beboelseshus", function() {deepEqual( Stem("beboelseshus"), "beboelseshus");});
test("beboere -> bebo", function() {deepEqual( Stem("beboere"), "bebo");});
test("beboerne -> bebo", function() {deepEqual( Stem("beboerne"), "bebo");});
test("beboet -> bebo", function() {deepEqual( Stem("beboet"), "bebo");});
test("bebor -> bebor", function() {deepEqual( Stem("bebor"), "bebor");});
test("bebos -> bebo", function() {deepEqual( Stem("bebos"), "bebo");});
test("bebov -> bebov", function() {deepEqual( Stem("bebov"), "bebov");});
test("bebrejde -> bebrejd", function() {deepEqual( Stem("bebrejde"), "bebrejd");});
test("bebrejdede -> bebrejded", function() {deepEqual( Stem("bebrejdede"), "bebrejded");});
test("bebrejdelse -> bebrejd", function() {deepEqual( Stem("bebrejdelse"), "bebrejd");});
test("bebygges -> bebyg", function() {deepEqual( Stem("bebygges"), "bebyg");});
test("bebyrdes -> bebyrd", function() {deepEqual( Stem("bebyrdes"), "bebyrd");});
test("bed -> bed", function() {deepEqual( Stem("bed"), "bed");});
test("bedads -> bedad", function() {deepEqual( Stem("bedads"), "bedad");});
test("bedan -> bedan", function() {deepEqual( Stem("bedan"), "bedan");});
test("bede -> bed", function() {deepEqual( Stem("bede"), "bed");});
test("bedehus -> bedehus", function() {deepEqual( Stem("bedehus"), "bedehus");});
test("bedeja -> bedeja", function() {deepEqual( Stem("bedeja"), "bedeja");});
test("bedende -> bed", function() {deepEqual( Stem("bedende"), "bed");});
test("beder -> bed", function() {deepEqual( Stem("beder"), "bed");});
test("bederemme -> bederem", function() {deepEqual( Stem("bederemme"), "bederem");});
test("bedes -> bed", function() {deepEqual( Stem("bedes"), "bed");});
test("bedesj -> bedesj", function() {deepEqual( Stem("bedesj"), "bedesj");});
test("bedested -> bedested", function() {deepEqual( Stem("bedested"), "bedested");});
test("bedestedet -> bedested", function() {deepEqual( Stem("bedestedet"), "bedested");});
test("bedet -> bed", function() {deepEqual( Stem("bedet"), "bed");});
test("bedetimen -> bedetim", function() {deepEqual( Stem("bedetimen"), "bedetim");});
test("bedrag -> bedrag", function() {deepEqual( Stem("bedrag"), "bedrag");});
test("bedrage -> bedrag", function() {deepEqual( Stem("bedrage"), "bedrag");});
test("bedrager -> bedrag", function() {deepEqual( Stem("bedrager"), "bedrag");});
test("bedragere -> bedrag", function() {deepEqual( Stem("bedragere"), "bedrag");});
test("bedragerier -> bedrageri", function() {deepEqual( Stem("bedragerier"), "bedrageri");});
test("bedrageriske -> bedragerisk", function() {deepEqual( Stem("bedrageriske"), "bedragerisk");});
test("bedrages -> bedrag", function() {deepEqual( Stem("bedrages"), "bedrag");});
test("bedraget -> bedrag", function() {deepEqual( Stem("bedraget"), "bedrag");});
test("bedre -> bedr", function() {deepEqual( Stem("bedre"), "bedr");});
test("bedrer -> bedr", function() {deepEqual( Stem("bedrer"), "bedr");});
test("bedrev -> bedrev", function() {deepEqual( Stem("bedrev"), "bedrev");});
test("bedreve -> bedrev", function() {deepEqual( Stem("bedreve"), "bedrev");});
test("bedrevet -> bedrev", function() {deepEqual( Stem("bedrevet"), "bedrev");});
test("bedrift -> bedrift", function() {deepEqual( Stem("bedrift"), "bedrift");});
test("bedrive -> bedriv", function() {deepEqual( Stem("bedrive"), "bedriv");});
test("bedriver -> bedriv", function() {deepEqual( Stem("bedriver"), "bedriv");});
test("bedrives -> bedriv", function() {deepEqual( Stem("bedrives"), "bedriv");});
test("bedrog -> bedrog", function() {deepEqual( Stem("bedrog"), "bedrog");});
test("bedrøved -> bedrøved", function() {deepEqual( Stem("bedrøved"), "bedrøved");});
test("bedrøvede -> bedrøved", function() {deepEqual( Stem("bedrøvede"), "bedrøved");});
test("bedrøvelse -> bedrøv", function() {deepEqual( Stem("bedrøvelse"), "bedrøv");});
test("bedrøvelsen -> bedrøv", function() {deepEqual( Stem("bedrøvelsen"), "bedrøv");});
test("bedrøver -> bedrøv", function() {deepEqual( Stem("bedrøver"), "bedrøv");});
test("bedrøves -> bedrøv", function() {deepEqual( Stem("bedrøves"), "bedrøv");});
test("bedrøvet -> bedrøv", function() {deepEqual( Stem("bedrøvet"), "bedrøv");});
test("bedst -> bedst", function() {deepEqual( Stem("bedst"), "bedst");});
test("bedste -> bedst", function() {deepEqual( Stem("bedste"), "bedst");});
test("bedt -> bedt", function() {deepEqual( Stem("bedt"), "bedt");});
test("bedækker -> bedæk", function() {deepEqual( Stem("bedækker"), "bedæk");});
test("bedømme -> bedøm", function() {deepEqual( Stem("bedømme"), "bedøm");});
test("bedømmer -> bedøm", function() {deepEqual( Stem("bedømmer"), "bedøm");});
test("bedømmes -> bedøm", function() {deepEqual( Stem("bedømmes"), "bedøm");});
test("bedømte -> bedømt", function() {deepEqual( Stem("bedømte"), "bedømt");});
test("bedøvet -> bedøv", function() {deepEqual( Stem("bedøvet"), "bedøv");});
test("beelzebul -> beelzebul", function() {deepEqual( Stem("beelzebul"), "beelzebul");});
test("beer -> beer", function() {deepEqual( Stem("beer"), "beer");});
test("beerot -> beerot", function() {deepEqual( Stem("beerot"), "beerot");});
test("beerotbene -> beerotb", function() {deepEqual( Stem("beerotbene"), "beerotb");});
test("beersjeba -> beersjeba", function() {deepEqual( Stem("beersjeba"), "beersjeba");});
test("bef -> bef", function() {deepEqual( Stem("bef"), "bef");});
test("befal -> befal", function() {deepEqual( Stem("befal"), "befal");});
test("befale -> befal", function() {deepEqual( Stem("befale"), "befal");});
test("befalede -> befaled", function() {deepEqual( Stem("befalede"), "befaled");});
test("befaler -> befal", function() {deepEqual( Stem("befaler"), "befal");});
test("befalet -> befal", function() {deepEqual( Stem("befalet"), "befal");});
test("befaling -> befaling", function() {deepEqual( Stem("befaling"), "befaling");});
test("befalingen -> befaling", function() {deepEqual( Stem("befalingen"), "befaling");});
test("befalinger -> befaling", function() {deepEqual( Stem("befalinger"), "befaling");});
test("befalingers -> befaling", function() {deepEqual( Stem("befalingers"), "befaling");});
test("befalingsmand -> befalingsmand", function() {deepEqual( Stem("befalingsmand"), "befalingsmand");});
test("befalingsmænd -> befalingsmænd", function() {deepEqual( Stem("befalingsmænd"), "befalingsmænd");});
test("befandt -> befand", function() {deepEqual( Stem("befandt"), "befand");});
test("befarne -> befarn", function() {deepEqual( Stem("befarne"), "befarn");});
test("befat -> befat", function() {deepEqual( Stem("befat"), "befat");});
test("befinder -> befind", function() {deepEqual( Stem("befinder"), "befind");});
test("beflehemiten -> beflehemit", function() {deepEqual( Stem("beflehemiten"), "beflehemit");});
test("befolket -> befolk", function() {deepEqual( Stem("befolket"), "befolk");});
test("befolkning -> befolkning", function() {deepEqual( Stem("befolkning"), "befolkning");});
test("befolkningen -> befolkning", function() {deepEqual( Stem("befolkningen"), "befolkning");});
test("befordre -> befordr", function() {deepEqual( Stem("befordre"), "befordr");});
test("befordrer -> befordr", function() {deepEqual( Stem("befordrer"), "befordr");});
test("befordret -> befordr", function() {deepEqual( Stem("befordret"), "befordr");});
test("befordringsmiddel -> befordringsmiddel", function() {deepEqual( Stem("befordringsmiddel"), "befordringsmiddel");});
test("befri -> befri", function() {deepEqual( Stem("befri"), "befri");});
test("befriede -> befried", function() {deepEqual( Stem("befriede"), "befried");});
test("befrielse -> befri", function() {deepEqual( Stem("befrielse"), "befri");});
test("befrier -> befri", function() {deepEqual( Stem("befrier"), "befri");});
test("befriere -> befri", function() {deepEqual( Stem("befriere"), "befri");});
test("befrieren -> befri", function() {deepEqual( Stem("befrieren"), "befri");});
test("befæsfede -> befæsfed", function() {deepEqual( Stem("befæsfede"), "befæsfed");});
test("befæste -> befæst", function() {deepEqual( Stem("befæste"), "befæst");});
test("befæstede -> befæsted", function() {deepEqual( Stem("befæstede"), "befæsted");});
test("befæstet -> befæst", function() {deepEqual( Stem("befæstet"), "befæst");});
test("befæstningen -> befæstning", function() {deepEqual( Stem("befæstningen"), "befæstning");});
test("beg -> beg", function() {deepEqual( Stem("beg"), "beg");});
test("begav -> begav", function() {deepEqual( Stem("begav"), "begav");});
test("begge -> beg", function() {deepEqual( Stem("begge"), "beg");});
test("begges -> beg", function() {deepEqual( Stem("begges"), "beg");});
test("begik -> begik", function() {deepEqual( Stem("begik"), "begik");});
test("begiv -> begiv", function() {deepEqual( Stem("begiv"), "begiv");});
test("begive -> begiv", function() {deepEqual( Stem("begive"), "begiv");});
test("begivenhed -> begiven", function() {deepEqual( Stem("begivenhed"), "begiven");});
test("begivenheder -> begiven", function() {deepEqual( Stem("begivenheder"), "begiven");});
test("begiver -> begiv", function() {deepEqual( Stem("begiver"), "begiv");});
test("begrave -> begrav", function() {deepEqual( Stem("begrave"), "begrav");});
test("begravede -> begraved", function() {deepEqual( Stem("begravede"), "begraved");});
test("begravelsen -> begrav", function() {deepEqual( Stem("begravelsen"), "begrav");});
test("begravelsesdag -> begravelsesdag", function() {deepEqual( Stem("begravelsesdag"), "begravelsesdag");});
test("begraven -> begrav", function() {deepEqual( Stem("begraven"), "begrav");});
test("begraves -> begrav", function() {deepEqual( Stem("begraves"), "begrav");});
test("begravet -> begrav", function() {deepEqual( Stem("begravet"), "begrav");});
test("begravne -> begravn", function() {deepEqual( Stem("begravne"), "begravn");});
test("begreb -> begreb", function() {deepEqual( Stem("begreb"), "begreb");});
test("begribe -> begrib", function() {deepEqual( Stem("begribe"), "begrib");});
test("begræd -> begræd", function() {deepEqual( Stem("begræd"), "begræd");});
test("begræde -> begræd", function() {deepEqual( Stem("begræde"), "begræd");});
test("begræder -> begræd", function() {deepEqual( Stem("begræder"), "begræd");});
test("begunstige -> begunst", function() {deepEqual( Stem("begunstige"), "begunst");});
test("begynd -> begynd", function() {deepEqual( Stem("begynd"), "begynd");});
test("begynde -> begynd", function() {deepEqual( Stem("begynde"), "begynd");});
test("begyndelse -> begynd", function() {deepEqual( Stem("begyndelse"), "begynd");});
test("begyndelsen -> begynd", function() {deepEqual( Stem("begyndelsen"), "begynd");});
test("begyndelsers -> begynd", function() {deepEqual( Stem("begyndelsers"), "begynd");});
test("begyndelsesgrundene -> begyndelsesgrund", function() {deepEqual( Stem("begyndelsesgrundene"), "begyndelsesgrund");});
test("begyndelsesmåneden -> begyndelsesmåned", function() {deepEqual( Stem("begyndelsesmåneden"), "begyndelsesmåned");});
test("begyndelsesordet -> begyndelsesord", function() {deepEqual( Stem("begyndelsesordet"), "begyndelsesord");});
test("begynder -> begynd", function() {deepEqual( Stem("begynder"), "begynd");});
test("begyndes -> begynd", function() {deepEqual( Stem("begyndes"), "begynd");});
test("begyndt -> begynd", function() {deepEqual( Stem("begyndt"), "begynd");});
test("begyndte -> begynd", function() {deepEqual( Stem("begyndte"), "begynd");});
test("begå -> begå", function() {deepEqual( Stem("begå"), "begå");});
test("begåede -> begåed", function() {deepEqual( Stem("begåede"), "begåed");});
test("begået -> begå", function() {deepEqual( Stem("begået"), "begå");});
test("begår -> begår", function() {deepEqual( Stem("begår"), "begår");});
test("begær -> begær", function() {deepEqual( Stem("begær"), "begær");});
test("begære -> begær", function() {deepEqual( Stem("begære"), "begær");});
test("begæred -> begæred", function() {deepEqual( Stem("begæred"), "begæred");});
test("begærede -> begæred", function() {deepEqual( Stem("begærede"), "begæred");});
test("begærer -> begær", function() {deepEqual( Stem("begærer"), "begær");});
test("begæret -> begær", function() {deepEqual( Stem("begæret"), "begær");});
test("begæring -> begæring", function() {deepEqual( Stem("begæring"), "begæring");});
test("begæringen -> begæring", function() {deepEqual( Stem("begæringen"), "begæring");});
test("begæringer -> begæring", function() {deepEqual( Stem("begæringer"), "begæring");});
test("begæringerne -> begæring", function() {deepEqual( Stem("begæringerne"), "begæring");});
test("begærings -> begæring", function() {deepEqual( Stem("begærings"), "begæring");});
test("begærligt -> begær", function() {deepEqual( Stem("begærligt"), "begær");});
test("behag -> behag", function() {deepEqual( Stem("behag"), "behag");});
test("behage -> behag", function() {deepEqual( Stem("behage"), "behag");});
test("behagede -> behaged", function() {deepEqual( Stem("behagede"), "behaged");});
test("behagelig -> behag", function() {deepEqual( Stem("behagelig"), "behag");});
test("behager -> behag", function() {deepEqual( Stem("behager"), "behag");});
test("behaget -> behag", function() {deepEqual( Stem("behaget"), "behag");});
test("behandle -> behandl", function() {deepEqual( Stem("behandle"), "behandl");});
test("behandlede -> behandled", function() {deepEqual( Stem("behandlede"), "behandled");});
test("behandles -> behandl", function() {deepEqual( Stem("behandles"), "behandl");});
test("behandlet -> behandl", function() {deepEqual( Stem("behandlet"), "behandl");});
test("behandling -> behandling", function() {deepEqual( Stem("behandling"), "behandling");});
test("beherske -> behersk", function() {deepEqual( Stem("beherske"), "behersk");});
test("beherskede -> behersked", function() {deepEqual( Stem("beherskede"), "behersked");});
test("behold -> behold", function() {deepEqual( Stem("behold"), "behold");});
test("beholde -> behold", function() {deepEqual( Stem("beholde"), "behold");});
test("beholder -> behold", function() {deepEqual( Stem("beholder"), "behold");});
test("beholdt -> behold", function() {deepEqual( Stem("beholdt"), "behold");});
test("behov -> behov", function() {deepEqual( Stem("behov"), "behov");});
test("behøve -> behøv", function() {deepEqual( Stem("behøve"), "behøv");});
test("behøvede -> behøved", function() {deepEqual( Stem("behøvede"), "behøved");});
test("behøver -> behøv", function() {deepEqual( Stem("behøver"), "behøv");});
test("bejle -> bejl", function() {deepEqual( Stem("bejle"), "bejl");});
test("bejlede -> bejled", function() {deepEqual( Stem("bejlede"), "bejled");});
test("bejler -> bejl", function() {deepEqual( Stem("bejler"), "bejl");});
test("beka -> beka", function() {deepEqual( Stem("beka"), "beka");});
test("bekapolis -> bekapolis", function() {deepEqual( Stem("bekapolis"), "bekapolis");});
test("bekend -> bekend", function() {deepEqual( Stem("bekend"), "bekend");});
test("bekende -> bek", function() {deepEqual( Stem("bekende"), "bek");});
test("bekendelse -> bekend", function() {deepEqual( Stem("bekendelse"), "bekend");});
test("bekendelsen -> bekend", function() {deepEqual( Stem("bekendelsen"), "bekend");});
test("bekendelses -> bekend", function() {deepEqual( Stem("bekendelses"), "bekend");});
test("bekender -> bekend", function() {deepEqual( Stem("bekender"), "bekend");});
test("bekendes -> bek", function() {deepEqual( Stem("bekendes"), "bek");});
test("bekendt -> bekend", function() {deepEqual( Stem("bekendt"), "bekend");});
test("bekendte -> bekend", function() {deepEqual( Stem("bekendte"), "bekend");});
test("beker -> bek", function() {deepEqual( Stem("beker"), "bek");});
test("bekeriternes -> bekerit", function() {deepEqual( Stem("bekeriternes"), "bekerit");});
test("bekers -> bek", function() {deepEqual( Stem("bekers"), "bek");});
test("beklag -> beklag", function() {deepEqual( Stem("beklag"), "beklag");});
test("beklemthed -> beklemt", function() {deepEqual( Stem("beklemthed"), "beklemt");});
test("beklædt -> beklæd", function() {deepEqual( Stem("beklædt"), "beklæd");});
test("bekorat -> bekorat", function() {deepEqual( Stem("bekorat"), "bekorat");});
test("bekranset -> bekrans", function() {deepEqual( Stem("bekranset"), "bekrans");});
test("bekræfte -> bekræft", function() {deepEqual( Stem("bekræfte"), "bekræft");});
test("bekræfter -> bekræft", function() {deepEqual( Stem("bekræfter"), "bekræft");});
test("bekymre -> bekymr", function() {deepEqual( Stem("bekymre"), "bekymr");});
test("bekymrede -> bekymred", function() {deepEqual( Stem("bekymrede"), "bekymred");});
test("bekymrer -> bekymr", function() {deepEqual( Stem("bekymrer"), "bekymr");});
test("bekymret -> bekymr", function() {deepEqual( Stem("bekymret"), "bekymr");});
test("bekymring -> bekymring", function() {deepEqual( Stem("bekymring"), "bekymring");});
test("bekymringen -> bekymring", function() {deepEqual( Stem("bekymringen"), "bekymring");});
test("bekymringer -> bekymring", function() {deepEqual( Stem("bekymringer"), "bekymring");});
test("bekæmpe -> bekæmp", function() {deepEqual( Stem("bekæmpe"), "bekæmp");});
test("bekæmped -> bekæmped", function() {deepEqual( Stem("bekæmped"), "bekæmped");});
test("bekæmper -> bekæmp", function() {deepEqual( Stem("bekæmper"), "bekæmp");});
test("bel -> bel", function() {deepEqual( Stem("bel"), "bel");});
test("bela -> bela", function() {deepEqual( Stem("bela"), "bela");});
test("belaiternes -> belait", function() {deepEqual( Stem("belaiternes"), "belait");});
test("belas -> bela", function() {deepEqual( Stem("belas"), "bela");});
test("bele -> bel", function() {deepEqual( Stem("bele"), "bel");});
test("belejlig -> belej", function() {deepEqual( Stem("belejlig"), "belej");});
test("belejlige -> belej", function() {deepEqual( Stem("belejlige"), "belej");});
test("belejre -> belejr", function() {deepEqual( Stem("belejre"), "belejr");});
test("belejrede -> belejred", function() {deepEqual( Stem("belejrede"), "belejred");});
test("belejrer -> belejr", function() {deepEqual( Stem("belejrer"), "belejr");});
test("belejrere -> belejr", function() {deepEqual( Stem("belejrere"), "belejr");});
test("belejres -> belejr", function() {deepEqual( Stem("belejres"), "belejr");});
test("belejret -> belejr", function() {deepEqual( Stem("belejret"), "belejr");});
test("belejring -> belejring", function() {deepEqual( Stem("belejring"), "belejring");});
test("belejringen -> belejring", function() {deepEqual( Stem("belejringen"), "belejring");});
test("belejringens -> belejring", function() {deepEqual( Stem("belejringens"), "belejring");});
test("belejrings -> belejring", function() {deepEqual( Stem("belejrings"), "belejring");});
test("belejringstårne -> belejringstårn", function() {deepEqual( Stem("belejringstårne"), "belejringstårn");});
test("belejringsværker -> belejringsværk", function() {deepEqual( Stem("belejringsværker"), "belejringsværk");});
test("belial -> belial", function() {deepEqual( Stem("belial"), "belial");});
test("bellige -> bel", function() {deepEqual( Stem("bellige"), "bel");});
test("belliget -> bel", function() {deepEqual( Stem("belliget"), "bel");});
test("bellium -> bellium", function() {deepEqual( Stem("bellium"), "bellium");});
test("belsazzar -> belsazzar", function() {deepEqual( Stem("belsazzar"), "belsazzar");});
test("belsazzars -> belsazzar", function() {deepEqual( Stem("belsazzars"), "belsazzar");});
test("belst -> belst", function() {deepEqual( Stem("belst"), "belst");});
test("belte -> belt", function() {deepEqual( Stem("belte"), "belt");});
test("beltsazzar -> beltsazzar", function() {deepEqual( Stem("beltsazzar"), "beltsazzar");});
test("belære -> belær", function() {deepEqual( Stem("belære"), "belær");});
test("belæring -> belæring", function() {deepEqual( Stem("belæring"), "belæring");});
test("belæssede -> belæssed", function() {deepEqual( Stem("belæssede"), "belæssed");});
test("belønner -> beløn", function() {deepEqual( Stem("belønner"), "beløn");});
test("belønning -> belønning", function() {deepEqual( Stem("belønning"), "belønning");});
test("belønningen -> belønning", function() {deepEqual( Stem("belønningen"), "belønning");});
test("bemandede -> bemanded", function() {deepEqual( Stem("bemandede"), "bemanded");});
test("bemægtige -> bemæg", function() {deepEqual( Stem("bemægtige"), "bemæg");});
test("bemærkede -> bemærked", function() {deepEqual( Stem("bemærkede"), "bemærked");});
test("ben -> ben", function() {deepEqual( Stem("ben"), "ben");});
test("benaja -> benaja", function() {deepEqual( Stem("benaja"), "benaja");});
test("benajas -> benaja", function() {deepEqual( Stem("benajas"), "benaja");});
test("benbadad -> benbadad", function() {deepEqual( Stem("benbadad"), "benbadad");});
test("benbarelse -> benbar", function() {deepEqual( Stem("benbarelse"), "benbar");});
test("benbarelser -> benbar", function() {deepEqual( Stem("benbarelser"), "benbar");});
test("benbarelses -> benbar", function() {deepEqual( Stem("benbarelses"), "benbar");});
test("benbares -> benbar", function() {deepEqual( Stem("benbares"), "benbar");});
test("benbaring -> benbaring", function() {deepEqual( Stem("benbaring"), "benbaring");});
test("benbaringen -> benbaring", function() {deepEqual( Stem("benbaringen"), "benbaring");});
test("benbaringer -> benbaring", function() {deepEqual( Stem("benbaringer"), "benbaring");});
test("benbaringstelt -> benbaringstelt", function() {deepEqual( Stem("benbaringstelt"), "benbaringstelt");});
test("benbaringsteltet -> benbaringstelt", function() {deepEqual( Stem("benbaringsteltet"), "benbaringstelt");});
test("benbaringsteltets -> benbaringstelt", function() {deepEqual( Stem("benbaringsteltets"), "benbaringstelt");});
test("benbaringsteltett -> benbaringsteltet", function() {deepEqual( Stem("benbaringsteltett"), "benbaringsteltet");});
test("benbariogsteltet -> benbariogstelt", function() {deepEqual( Stem("benbariogsteltet"), "benbariogstelt");});
test("bene -> ben", function() {deepEqual( Stem("bene"), "ben");});
test("benene -> ben", function() {deepEqual( Stem("benene"), "ben");});
test("benha -> benha", function() {deepEqual( Stem("benha"), "benha");});
test("benhadad -> benhadad", function() {deepEqual( Stem("benhadad"), "benhadad");});
test("benhadads -> benhadad", function() {deepEqual( Stem("benhadads"), "benhadad");});
test("benhajil -> benhajil", function() {deepEqual( Stem("benhajil"), "benhajil");});
test("benhanan -> benhanan", function() {deepEqual( Stem("benhanan"), "benhanan");});
test("beninu -> beninu", function() {deepEqual( Stem("beninu"), "beninu");});
test("benizziten -> benizzit", function() {deepEqual( Stem("benizziten"), "benizzit");});
test("benjamin -> benjamin", function() {deepEqual( Stem("benjamin"), "benjamin");});
test("benjaminit -> benjaminit", function() {deepEqual( Stem("benjaminit"), "benjaminit");});
test("benjaminiten -> benjaminit", function() {deepEqual( Stem("benjaminiten"), "benjaminit");});
test("benjaminiter -> benjaminit", function() {deepEqual( Stem("benjaminiter"), "benjaminit");});
test("benjaminiterne -> benjaminit", function() {deepEqual( Stem("benjaminiterne"), "benjaminit");});
test("benjaminiternes -> benjaminit", function() {deepEqual( Stem("benjaminiternes"), "benjaminit");});
test("benjaminitiske -> benjaminitisk", function() {deepEqual( Stem("benjaminitiske"), "benjaminitisk");});
test("benjamins -> benjamin", function() {deepEqual( Stem("benjamins"), "benjamin");});
test("benjaminsport -> benjaminsport", function() {deepEqual( Stem("benjaminsport"), "benjaminsport");});
test("benjaminsporten -> benjaminsport", function() {deepEqual( Stem("benjaminsporten"), "benjaminsport");});
test("benjammmin -> benjammmin", function() {deepEqual( Stem("benjammmin"), "benjammmin");});
test("benjomins -> benjomin", function() {deepEqual( Stem("benjomins"), "benjomin");});
test("benot -> benot", function() {deepEqual( Stem("benot"), "benot");});
test("bentede -> bented", function() {deepEqual( Stem("bentede"), "bented");});
test("benådede -> benåded", function() {deepEqual( Stem("benådede"), "benåded");});
test("beon -> beon", function() {deepEqual( Stem("beon"), "beon");});
test("beors -> beor", function() {deepEqual( Stem("beors"), "beor");});
test("bera -> bera", function() {deepEqual( Stem("bera"), "bera");});
test("beraja -> beraja", function() {deepEqual( Stem("beraja"), "beraja");});
test("berak -> berak", function() {deepEqual( Stem("berak"), "berak");});
test("beraka -> beraka", function() {deepEqual( Stem("beraka"), "beraka");});
test("berakadalen -> berakadal", function() {deepEqual( Stem("berakadalen"), "berakadal");});
test("bered -> bered", function() {deepEqual( Stem("bered"), "bered");});
test("berede -> bered", function() {deepEqual( Stem("berede"), "bered");});
test("beredelse -> bered", function() {deepEqual( Stem("beredelse"), "bered");});
test("beredelsens -> bered", function() {deepEqual( Stem("beredelsens"), "bered");});
test("beredelses -> bered", function() {deepEqual( Stem("beredelses"), "bered");});
test("beredelsesdag -> beredelsesdag", function() {deepEqual( Stem("beredelsesdag"), "beredelsesdag");});
test("beredelsesdagen -> beredelsesdag", function() {deepEqual( Stem("beredelsesdagen"), "beredelsesdag");});
test("bereder -> bered", function() {deepEqual( Stem("bereder"), "bered");});
test("beredes -> bered", function() {deepEqual( Stem("beredes"), "bered");});
test("beredt -> bered", function() {deepEqual( Stem("beredt"), "bered");});
test("beredte -> bered", function() {deepEqual( Stem("beredte"), "bered");});
test("beregne -> beregn", function() {deepEqual( Stem("beregne"), "beregn");});
test("beregnede -> beregned", function() {deepEqual( Stem("beregnede"), "beregned");});
test("beregner -> beregn", function() {deepEqual( Stem("beregner"), "beregn");});
test("berejste -> berejst", function() {deepEqual( Stem("berejste"), "berejst");});
test("berekja -> berekja", function() {deepEqual( Stem("berekja"), "berekja");});
test("berekjas -> berekja", function() {deepEqual( Stem("berekjas"), "berekja");});
test("berenike -> berenik", function() {deepEqual( Stem("berenike"), "berenik");});
test("beretning -> beretning", function() {deepEqual( Stem("beretning"), "beretning");});
test("beretningen -> beretning", function() {deepEqual( Stem("beretningen"), "beretning");});
test("berette -> beret", function() {deepEqual( Stem("berette"), "beret");});
test("beri -> beri", function() {deepEqual( Stem("beri"), "beri");});
test("beria -> beria", function() {deepEqual( Stem("beria"), "beria");});
test("berias -> beria", function() {deepEqual( Stem("berias"), "beria");});
test("berigedes -> beriged", function() {deepEqual( Stem("berigedes"), "beriged");});
test("berit -> berit", function() {deepEqual( Stem("berit"), "berit");});
test("berits -> berit", function() {deepEqual( Stem("berits"), "berit");});
test("bero -> bero", function() {deepEqual( Stem("bero"), "bero");});
test("beroliget -> bero", function() {deepEqual( Stem("beroliget"), "bero");});
test("beror -> beror", function() {deepEqual( Stem("beror"), "beror");});
test("berot -> berot", function() {deepEqual( Stem("berot"), "berot");});
test("berota -> berota", function() {deepEqual( Stem("berota"), "berota");});
test("berotaj -> berotaj", function() {deepEqual( Stem("berotaj"), "berotaj");});
test("berus -> berus", function() {deepEqual( Stem("berus"), "berus");});
test("beruse -> berus", function() {deepEqual( Stem("beruse"), "berus");});
test("berusede -> berused", function() {deepEqual( Stem("berusede"), "berused");});
test("berusedes -> berused", function() {deepEqual( Stem("berusedes"), "berused");});
test("beruselse -> berus", function() {deepEqual( Stem("beruselse"), "berus");});
test("berusende -> berus", function() {deepEqual( Stem("berusende"), "berus");});
test("beruser -> berus", function() {deepEqual( Stem("beruser"), "berus");});
test("beruset -> berus", function() {deepEqual( Stem("beruset"), "berus");});
test("berygtet -> beryg", function() {deepEqual( Stem("berygtet"), "beryg");});
test("beryl -> beryl", function() {deepEqual( Stem("beryl"), "beryl");});
test("berøa -> berøa", function() {deepEqual( Stem("berøa"), "berøa");});
test("berømmede -> berømmed", function() {deepEqual( Stem("berømmede"), "berømmed");});
test("berømmelse -> berøm", function() {deepEqual( Stem("berømmelse"), "berøm");});
test("berører -> berør", function() {deepEqual( Stem("berører"), "berør");});
test("berøring -> berøring", function() {deepEqual( Stem("berøring"), "berøring");});
test("berørte -> berørt", function() {deepEqual( Stem("berørte"), "berørt");});
test("berøve -> berøv", function() {deepEqual( Stem("berøve"), "berøv");});
test("berøved -> berøved", function() {deepEqual( Stem("berøved"), "berøved");});
test("berøvede -> berøved", function() {deepEqual( Stem("berøvede"), "berøved");});
test("besade -> besad", function() {deepEqual( Stem("besade"), "besad");});
test("besajs -> besaj", function() {deepEqual( Stem("besajs"), "besaj");});
test("besat -> besat", function() {deepEqual( Stem("besat"), "besat");});
test("besatte -> besat", function() {deepEqual( Stem("besatte"), "besat");});
test("beseglede -> besegled", function() {deepEqual( Stem("beseglede"), "besegled");});
test("beseglet -> besegl", function() {deepEqual( Stem("beseglet"), "besegl");});
test("besejre -> besejr", function() {deepEqual( Stem("besejre"), "besejr");});
test("beset -> bes", function() {deepEqual( Stem("beset"), "bes");});
test("besidde -> besid", function() {deepEqual( Stem("besidde"), "besid");});
test("besiddelse -> besid", function() {deepEqual( Stem("besiddelse"), "besid");});
test("besiddelsen -> besid", function() {deepEqual( Stem("besiddelsen"), "besid");});
test("besiddelser -> besid", function() {deepEqual( Stem("besiddelser"), "besid");});
test("besinde -> besind", function() {deepEqual( Stem("besinde"), "besind");});
test("besindelse -> besind", function() {deepEqual( Stem("besindelse"), "besind");});
test("besindet -> besind", function() {deepEqual( Stem("besindet"), "besind");});
test("besindige -> besind", function() {deepEqual( Stem("besindige"), "besind");});
test("besk -> besk", function() {deepEqual( Stem("besk"), "besk");});
test("beske -> besk", function() {deepEqual( Stem("beske"), "besk");});
test("besked -> besked", function() {deepEqual( Stem("besked"), "besked");});
test("beskeing -> beskeing", function() {deepEqual( Stem("beskeing"), "beskeing");});
test("beskere -> besk", function() {deepEqual( Stem("beskere"), "besk");});
test("beskhed -> besk", function() {deepEqual( Stem("beskhed"), "besk");});
test("beskik -> beskik", function() {deepEqual( Stem("beskik"), "beskik");});
test("beskikkede -> beskikked", function() {deepEqual( Stem("beskikkede"), "beskikked");});
test("beskikket -> beskik", function() {deepEqual( Stem("beskikket"), "beskik");});
test("beskreven -> beskrev", function() {deepEqual( Stem("beskreven"), "beskrev");});
test("beskrevet -> beskrev", function() {deepEqual( Stem("beskrevet"), "beskrev");});
test("beskrevne -> beskrevn", function() {deepEqual( Stem("beskrevne"), "beskrevn");});
test("beskrivelse -> beskriv", function() {deepEqual( Stem("beskrivelse"), "beskriv");});
test("beskt -> besk", function() {deepEqual( Stem("beskt"), "besk");});
test("beskuelse -> besku", function() {deepEqual( Stem("beskuelse"), "besku");});
test("beskues -> besku", function() {deepEqual( Stem("beskues"), "besku");});
test("beskylder -> beskyld", function() {deepEqual( Stem("beskylder"), "beskyld");});
test("beskyldning -> beskyldning", function() {deepEqual( Stem("beskyldning"), "beskyldning");});
test("beskyldningen -> beskyldning", function() {deepEqual( Stem("beskyldningen"), "beskyldning");});
test("beskyldningerne -> beskyldning", function() {deepEqual( Stem("beskyldningerne"), "beskyldning");});
test("beskyldte -> beskyld", function() {deepEqual( Stem("beskyldte"), "beskyld");});
test("beskæftiget -> beskæft", function() {deepEqual( Stem("beskæftiget"), "beskæft");});
test("beskæmme -> beskæm", function() {deepEqual( Stem("beskæmme"), "beskæm");});
test("beskæmmede -> beskæmmed", function() {deepEqual( Stem("beskæmmede"), "beskæmmed");});
test("beskæmmer -> beskæm", function() {deepEqual( Stem("beskæmmer"), "beskæm");});
test("beskæmmes -> beskæm", function() {deepEqual( Stem("beskæmmes"), "beskæm");});
test("beskæmmet -> beskæm", function() {deepEqual( Stem("beskæmmet"), "beskæm");});
test("beskære -> beskær", function() {deepEqual( Stem("beskære"), "beskær");});
test("beskæres -> beskær", function() {deepEqual( Stem("beskæres"), "beskær");});
test("beslutning -> beslutning", function() {deepEqual( Stem("beslutning"), "beslutning");});
test("beslutninger -> beslutning", function() {deepEqual( Stem("beslutninger"), "beslutning");});
test("beslutte -> beslut", function() {deepEqual( Stem("beslutte"), "beslut");});
test("besluttede -> beslutted", function() {deepEqual( Stem("besluttede"), "beslutted");});
test("beslutter -> beslut", function() {deepEqual( Stem("beslutter"), "beslut");});
test("besluttet -> beslut", function() {deepEqual( Stem("besluttet"), "beslut");});
test("besmitte -> besmit", function() {deepEqual( Stem("besmitte"), "besmit");});
test("besmittede -> besmitted", function() {deepEqual( Stem("besmittede"), "besmitted");});
test("besmittelse -> besmit", function() {deepEqual( Stem("besmittelse"), "besmit");});
test("besmittelser -> besmit", function() {deepEqual( Stem("besmittelser"), "besmit");});
test("besmitter -> besmit", function() {deepEqual( Stem("besmitter"), "besmit");});
test("besmittes -> besmit", function() {deepEqual( Stem("besmittes"), "besmit");});
test("besmittet -> besmit", function() {deepEqual( Stem("besmittet"), "besmit");});
test("besnære -> besnær", function() {deepEqual( Stem("besnære"), "besnær");});
test("besnærede -> besnæred", function() {deepEqual( Stem("besnærede"), "besnæred");});
test("besodejas -> besodeja", function() {deepEqual( Stem("besodejas"), "besodeja");});
test("besorbækken -> besorbæk", function() {deepEqual( Stem("besorbækken"), "besorbæk");});
test("bespotte -> bespot", function() {deepEqual( Stem("bespotte"), "bespot");});
test("bespottede -> bespotted", function() {deepEqual( Stem("bespottede"), "bespotted");});
test("bespottelige -> bespot", function() {deepEqual( Stem("bespottelige"), "bespot");});
test("bespotteligt -> bespot", function() {deepEqual( Stem("bespotteligt"), "bespot");});
test("bespottelse -> bespot", function() {deepEqual( Stem("bespottelse"), "bespot");});
test("bespottelsen -> bespot", function() {deepEqual( Stem("bespottelsen"), "bespot");});
test("bespottelsens -> bespot", function() {deepEqual( Stem("bespottelsens"), "bespot");});
test("bespottelser -> bespot", function() {deepEqual( Stem("bespottelser"), "bespot");});
test("bespottelsesdom -> bespottelsesdom", function() {deepEqual( Stem("bespottelsesdom"), "bespottelsesdom");});
test("bespottende -> bespot", function() {deepEqual( Stem("bespottende"), "bespot");});
test("bespotter -> bespot", function() {deepEqual( Stem("bespotter"), "bespot");});
test("bespottes -> bespot", function() {deepEqual( Stem("bespottes"), "bespot");});
test("bespottet -> bespot", function() {deepEqual( Stem("bespottet"), "bespot");});
test("bespyttes -> bespyt", function() {deepEqual( Stem("bespyttes"), "bespyt");});
test("bestandig -> bestand", function() {deepEqual( Stem("bestandig"), "bestand");});
test("besteg -> besteg", function() {deepEqual( Stem("besteg"), "besteg");});
test("besteget -> besteg", function() {deepEqual( Stem("besteget"), "besteg");});
test("bestem -> bestem", function() {deepEqual( Stem("bestem"), "bestem");});
test("bestemme -> bestem", function() {deepEqual( Stem("bestemme"), "bestem");});
test("bestemmelse -> bestem", function() {deepEqual( Stem("bestemmelse"), "bestem");});
test("bestemmelser -> bestem", function() {deepEqual( Stem("bestemmelser"), "bestem");});
test("bestemmer -> bestem", function() {deepEqual( Stem("bestemmer"), "bestem");});
test("bestemt -> bestemt", function() {deepEqual( Stem("bestemt"), "bestemt");});
test("bestemte -> bestemt", function() {deepEqual( Stem("bestemte"), "bestemt");});
test("bestiger -> best", function() {deepEqual( Stem("bestiger"), "best");});
test("bestikkelse -> bestik", function() {deepEqual( Stem("bestikkelse"), "bestik");});
test("bestikkelsens -> bestik", function() {deepEqual( Stem("bestikkelsens"), "bestik");});
test("bestille -> bestil", function() {deepEqual( Stem("bestille"), "bestil");});
test("bestod -> bestod", function() {deepEqual( Stem("bestod"), "bestod");});
test("bestråler -> bestrål", function() {deepEqual( Stem("bestråler"), "bestrål");});
test("bestræbt -> bestræbt", function() {deepEqual( Stem("bestræbt"), "bestræbt");});
test("bestyrtelse -> bestyrt", function() {deepEqual( Stem("bestyrtelse"), "bestyrt");});
test("bestyrtet -> bestyrt", function() {deepEqual( Stem("bestyrtet"), "bestyrt");});
test("bestå -> bestå", function() {deepEqual( Stem("bestå"), "bestå");});
test("består -> består", function() {deepEqual( Stem("består"), "består");});
test("bestænke -> bestænk", function() {deepEqual( Stem("bestænke"), "bestænk");});
test("bestænkede -> bestænked", function() {deepEqual( Stem("bestænkede"), "bestænked");});
test("bestænkelse -> bestænk", function() {deepEqual( Stem("bestænkelse"), "bestænk");});
test("bestænkelsen -> bestænk", function() {deepEqual( Stem("bestænkelsen"), "bestænk");});
test("bestænkelsens -> bestænk", function() {deepEqual( Stem("bestænkelsens"), "bestænk");});
test("bestænkning -> bestænkning", function() {deepEqual( Stem("bestænkning"), "bestænkning");});
test("besudlede -> besudled", function() {deepEqual( Stem("besudlede"), "besudled");});
test("besvarede -> besvared", function() {deepEqual( Stem("besvarede"), "besvared");});
test("besveget -> besveg", function() {deepEqual( Stem("besveget"), "besveg");});
test("besvige -> besv", function() {deepEqual( Stem("besvige"), "besv");});
test("besvogre -> besvogr", function() {deepEqual( Stem("besvogre"), "besvogr");});
test("besvogrede -> besvogred", function() {deepEqual( Stem("besvogrede"), "besvogred");});
test("besvogrer -> besvogr", function() {deepEqual( Stem("besvogrer"), "besvogr");});
test("besvogret -> besvogr", function() {deepEqual( Stem("besvogret"), "besvogr");});
test("besvor -> besvor", function() {deepEqual( Stem("besvor"), "besvor");});
test("besvore -> besvor", function() {deepEqual( Stem("besvore"), "besvor");});
test("besvæger -> besvæg", function() {deepEqual( Stem("besvæger"), "besvæg");});
test("besvær -> besvær", function() {deepEqual( Stem("besvær"), "besvær");});
test("besvære -> besvær", function() {deepEqual( Stem("besvære"), "besvær");});
test("besværede -> besværed", function() {deepEqual( Stem("besværede"), "besværed");});
test("besværes -> besvær", function() {deepEqual( Stem("besværes"), "besvær");});
test("besværet -> besvær", function() {deepEqual( Stem("besværet"), "besvær");});
test("besværge -> besværg", function() {deepEqual( Stem("besværge"), "besværg");});
test("besværgelse -> besværg", function() {deepEqual( Stem("besværgelse"), "besværg");});
test("besværger -> besværg", function() {deepEqual( Stem("besværger"), "besværg");});
test("besværgere -> besværg", function() {deepEqual( Stem("besværgere"), "besværg");});
test("besværgeren -> besværg", function() {deepEqual( Stem("besværgeren"), "besværg");});
test("besværgerne -> besværg", function() {deepEqual( Stem("besværgerne"), "besværg");});
test("besværges -> besværg", function() {deepEqual( Stem("besværges"), "besværg");});
test("besværlige -> besvær", function() {deepEqual( Stem("besværlige"), "besvær");});
test("besværligheder -> besvær", function() {deepEqual( Stem("besværligheder"), "besvær");});
test("beså -> beså", function() {deepEqual( Stem("beså"), "beså");});
test("besåes -> beså", function() {deepEqual( Stem("besåes"), "beså");});
test("besætning -> besætning", function() {deepEqual( Stem("besætning"), "besætning");});
test("besætningen -> besætning", function() {deepEqual( Stem("besætningen"), "besætning");});
test("besætte -> besæt", function() {deepEqual( Stem("besætte"), "besæt");});
test("besøg -> besøg", function() {deepEqual( Stem("besøg"), "besøg");});
test("besøge -> besøg", function() {deepEqual( Stem("besøge"), "besøg");});
test("besøgelsens -> besøg", function() {deepEqual( Stem("besøgelsens"), "besøg");});
test("besøgelses -> besøg", function() {deepEqual( Stem("besøgelses"), "besøg");});
test("besøgt -> besøg", function() {deepEqual( Stem("besøgt"), "besøg");});
test("besøgte -> besøg", function() {deepEqual( Stem("besøgte"), "besøg");});
test("besørgelse -> besørg", function() {deepEqual( Stem("besørgelse"), "besørg");});
test("besørges -> besørg", function() {deepEqual( Stem("besørges"), "besørg");});
test("besørget -> besørg", function() {deepEqual( Stem("besørget"), "besørg");});
test("bet -> bet", function() {deepEqual( Stem("bet"), "bet");});
test("betage -> betag", function() {deepEqual( Stem("betage"), "betag");});
test("betaget -> betag", function() {deepEqual( Stem("betaget"), "betag");});
test("betagne -> betagn", function() {deepEqual( Stem("betagne"), "betagn");});
test("betal -> betal", function() {deepEqual( Stem("betal"), "betal");});
test("betale -> betal", function() {deepEqual( Stem("betale"), "betal");});
test("betaler -> betal", function() {deepEqual( Stem("betaler"), "betal");});
test("betales -> betal", function() {deepEqual( Stem("betales"), "betal");});
test("betaling -> betaling", function() {deepEqual( Stem("betaling"), "betaling");});
test("betalt -> betalt", function() {deepEqual( Stem("betalt"), "betalt");});
test("betalte -> betalt", function() {deepEqual( Stem("betalte"), "betalt");});
test("betania -> betania", function() {deepEqual( Stem("betania"), "betania");});
test("betbagon -> betbagon", function() {deepEqual( Stem("betbagon"), "betbagon");});
test("betedt -> beted", function() {deepEqual( Stem("betedt"), "beted");});
test("betegne -> betegn", function() {deepEqual( Stem("betegne"), "betegn");});
test("betel -> betel", function() {deepEqual( Stem("betel"), "betel");});
test("beteliten -> betelit", function() {deepEqual( Stem("beteliten"), "betelit");});
test("betels -> betel", function() {deepEqual( Stem("betels"), "betel");});
test("beten -> bet", function() {deepEqual( Stem("beten"), "bet");});
test("beter -> bet", function() {deepEqual( Stem("beter"), "bet");});
test("bethagan -> bethagan", function() {deepEqual( Stem("bethagan"), "bethagan");});
test("bethania -> bethania", function() {deepEqual( Stem("bethania"), "bethania");});
test("bethesda -> bethesda", function() {deepEqual( Stem("bethesda"), "bethesda");});
test("bethfage -> bethfag", function() {deepEqual( Stem("bethfage"), "bethfag");});
test("bethlehem -> bethlehem", function() {deepEqual( Stem("bethlehem"), "bethlehem");});
test("bethsajda -> bethsajda", function() {deepEqual( Stem("bethsajda"), "bethsajda");});
test("betimelig -> betim", function() {deepEqual( Stem("betimelig"), "betim");});
test("betjene -> betj", function() {deepEqual( Stem("betjene"), "betj");});
test("betjener -> betjen", function() {deepEqual( Stem("betjener"), "betjen");});
test("betjeningen -> betjening", function() {deepEqual( Stem("betjeningen"), "betjening");});
test("betlehem -> betlehem", function() {deepEqual( Stem("betlehem"), "betlehem");});
test("betlehemiten -> betlehemit", function() {deepEqual( Stem("betlehemiten"), "betlehemit");});
test("betlehems -> betlehem", function() {deepEqual( Stem("betlehems"), "betlehem");});
test("betlehemsnabolag -> betlehemsnabolag", function() {deepEqual( Stem("betlehemsnabolag"), "betlehemsnabolag");});
test("betog -> betog", function() {deepEqual( Stem("betog"), "betog");});
test("betoges -> betog", function() {deepEqual( Stem("betoges"), "betog");});
test("betonim -> betonim", function() {deepEqual( Stem("betonim"), "betonim");});
test("betragte -> betrag", function() {deepEqual( Stem("betragte"), "betrag");});
test("betragtede -> betragted", function() {deepEqual( Stem("betragtede"), "betragted");});
test("betragter -> betrag", function() {deepEqual( Stem("betragter"), "betrag");});
test("betro -> betro", function() {deepEqual( Stem("betro"), "betro");});
test("betroede -> betroed", function() {deepEqual( Stem("betroede"), "betroed");});
test("betroet -> betro", function() {deepEqual( Stem("betroet"), "betro");});
test("betror -> betror", function() {deepEqual( Stem("betror"), "betror");});
test("betryggende -> betryg", function() {deepEqual( Stem("betryggende"), "betryg");});
test("betrådt -> betråd", function() {deepEqual( Stem("betrådt"), "betråd");});
test("betrådte -> betråd", function() {deepEqual( Stem("betrådte"), "betråd");});
test("betræde -> betræd", function() {deepEqual( Stem("betræde"), "betræd");});
test("betræder -> betræd", function() {deepEqual( Stem("betræder"), "betræd");});
test("betrængte -> betræng", function() {deepEqual( Stem("betrængte"), "betræng");});
test("betsjemesj -> betsjemesj", function() {deepEqual( Stem("betsjemesj"), "betsjemesj");});
test("betuel -> betuel", function() {deepEqual( Stem("betuel"), "betuel");});
test("betuels -> betuel", function() {deepEqual( Stem("betuels"), "betuel");});
test("betul -> betul", function() {deepEqual( Stem("betul"), "betul");});
test("betyde -> betyd", function() {deepEqual( Stem("betyde"), "betyd");});
test("betydelige -> betyd", function() {deepEqual( Stem("betydelige"), "betyd");});
test("betyder -> betyd", function() {deepEqual( Stem("betyder"), "betyd");});
test("betydet -> betyd", function() {deepEqual( Stem("betydet"), "betyd");});
test("betydning -> betydning", function() {deepEqual( Stem("betydning"), "betydning");});
test("betyngede -> betynged", function() {deepEqual( Stem("betyngede"), "betynged");});
test("betynget -> betyng", function() {deepEqual( Stem("betynget"), "betyng");});
test("betændelse -> betænd", function() {deepEqual( Stem("betændelse"), "betænd");});
test("betændelsen -> betænd", function() {deepEqual( Stem("betændelsen"), "betænd");});
test("betændt -> betænd", function() {deepEqual( Stem("betændt"), "betænd");});
test("betænk -> betænk", function() {deepEqual( Stem("betænk"), "betænk");});
test("betænke -> betænk", function() {deepEqual( Stem("betænke"), "betænk");});
test("betænkeligheder -> betænk", function() {deepEqual( Stem("betænkeligheder"), "betænk");});
test("betænkelighederne -> betænkelighed", function() {deepEqual( Stem("betænkelighederne"), "betænkelighed");});
test("betænksomhed -> betænksom", function() {deepEqual( Stem("betænksomhed"), "betænksom");});
test("betænksomme -> betænksom", function() {deepEqual( Stem("betænksomme"), "betænksom");});
test("betænkt -> betænk", function() {deepEqual( Stem("betænkt"), "betænk");});
test("betænkte -> betænk", function() {deepEqual( Stem("betænkte"), "betænk");});
test("betæstede -> betæsted", function() {deepEqual( Stem("betæstede"), "betæsted");});
test("beundrere -> beundr", function() {deepEqual( Stem("beundrere"), "beundr");});
test("beundres -> beundr", function() {deepEqual( Stem("beundres"), "beundr");});
test("beundret -> beundr", function() {deepEqual( Stem("beundret"), "beundr");});
test("beundring -> beundring", function() {deepEqual( Stem("beundring"), "beundring");});
test("bevandrede -> bevandred", function() {deepEqual( Stem("bevandrede"), "bevandred");});
test("bevar -> bevar", function() {deepEqual( Stem("bevar"), "bevar");});
test("bevare -> bevar", function() {deepEqual( Stem("bevare"), "bevar");});
test("bevarede -> bevared", function() {deepEqual( Stem("bevarede"), "bevared");});
test("bevarende -> bevar", function() {deepEqual( Stem("bevarende"), "bevar");});
test("bevarer -> bevar", function() {deepEqual( Stem("bevarer"), "bevar");});
test("bevares -> bevar", function() {deepEqual( Stem("bevares"), "bevar");});
test("bevaret -> bevar", function() {deepEqual( Stem("bevaret"), "bevar");});
test("bevidne -> bevidn", function() {deepEqual( Stem("bevidne"), "bevidn");});
test("bevidnede -> bevidned", function() {deepEqual( Stem("bevidnede"), "bevidned");});
test("bevidst -> bevidst", function() {deepEqual( Stem("bevidst"), "bevidst");});
test("bevidsthed -> bevidst", function() {deepEqual( Stem("bevidsthed"), "bevidst");});
test("bevis -> bevis", function() {deepEqual( Stem("bevis"), "bevis");});
test("bevise -> bevis", function() {deepEqual( Stem("bevise"), "bevis");});
test("beviser -> bevis", function() {deepEqual( Stem("beviser"), "bevis");});
test("beviset -> bevis", function() {deepEqual( Stem("beviset"), "bevis");});
test("bevisning -> bevisning", function() {deepEqual( Stem("bevisning"), "bevisning");});
test("bevist -> bevist", function() {deepEqual( Stem("bevist"), "bevist");});
test("beviste -> bevist", function() {deepEqual( Stem("beviste"), "bevist");});
test("bevogte -> bevog", function() {deepEqual( Stem("bevogte"), "bevog");});
test("bevogtede -> bevogted", function() {deepEqual( Stem("bevogtede"), "bevogted");});
test("bevogter -> bevog", function() {deepEqual( Stem("bevogter"), "bevog");});
test("bevogtes -> bevog", function() {deepEqual( Stem("bevogtes"), "bevog");});
test("bevogtet -> bevog", function() {deepEqual( Stem("bevogtet"), "bevog");});
test("bevogtning -> bevogtning", function() {deepEqual( Stem("bevogtning"), "bevogtning");});
test("bevæbnet -> bevæbn", function() {deepEqual( Stem("bevæbnet"), "bevæbn");});
test("bevæge -> bevæg", function() {deepEqual( Stem("bevæge"), "bevæg");});
test("bevægede -> bevæged", function() {deepEqual( Stem("bevægede"), "bevæged");});
test("bevægelige -> bevæg", function() {deepEqual( Stem("bevægelige"), "bevæg");});
test("bevægelse -> bevæg", function() {deepEqual( Stem("bevægelse"), "bevæg");});
test("bevæger -> bevæg", function() {deepEqual( Stem("bevæger"), "bevæg");});
test("bevæges -> bevæg", function() {deepEqual( Stem("bevæges"), "bevæg");});
test("bevæget -> bevæg", function() {deepEqual( Stem("bevæget"), "bevæg");});
test("beza -> beza", function() {deepEqual( Stem("beza"), "beza");});
test("bezaj -> bezaj", function() {deepEqual( Stem("bezaj"), "bezaj");});
test("bezajs -> bezaj", function() {deepEqual( Stem("bezajs"), "bezaj");});
test("bezal -> bezal", function() {deepEqual( Stem("bezal"), "bezal");});
test("bezalel -> bezalel", function() {deepEqual( Stem("bezalel"), "bezalel");});
test("bezek -> bezek", function() {deepEqual( Stem("bezek"), "bezek");});
test("bezer -> bez", function() {deepEqual( Stem("bezer"), "bez");});
test("bezin -> bezin", function() {deepEqual( Stem("bezin"), "bezin");});
test("bi -> bi", function() {deepEqual( Stem("bi"), "bi");});
test("bid -> bid", function() {deepEqual( Stem("bid"), "bid");});
test("bidder -> bid", function() {deepEqual( Stem("bidder"), "bid");});
test("bide -> bid", function() {deepEqual( Stem("bide"), "bid");});
test("bider -> bid", function() {deepEqual( Stem("bider"), "bid");});
test("bides -> bid", function() {deepEqual( Stem("bides"), "bid");});
test("bidkar -> bidkar", function() {deepEqual( Stem("bidkar"), "bidkar");});
test("bidsel -> bidsel", function() {deepEqual( Stem("bidsel"), "bidsel");});
test("bidsler -> bidsl", function() {deepEqual( Stem("bidsler"), "bidsl");});
test("bidt -> bidt", function() {deepEqual( Stem("bidt"), "bidt");});
test("bie -> bie", function() {deepEqual( Stem("bie"), "bie");});
test("bied -> bied", function() {deepEqual( Stem("bied"), "bied");});
test("biede -> bied", function() {deepEqual( Stem("biede"), "bied");});
test("bier -> bier", function() {deepEqual( Stem("bier"), "bier");});
test("bierne -> biern", function() {deepEqual( Stem("bierne"), "biern");});
test("biet -> biet", function() {deepEqual( Stem("biet"), "biet");});
test("bifald -> bifald", function() {deepEqual( Stem("bifald"), "bifald");});
test("bigta -> bigta", function() {deepEqual( Stem("bigta"), "bigta");});
test("bigtan -> bigtan", function() {deepEqual( Stem("bigtan"), "bigtan");});
test("bigtana -> bigtana", function() {deepEqual( Stem("bigtana"), "bigtana");});
test("bigvaj -> bigvaj", function() {deepEqual( Stem("bigvaj"), "bigvaj");});
test("bigvajs -> bigvaj", function() {deepEqual( Stem("bigvajs"), "bigvaj");});
test("bikage -> bikag", function() {deepEqual( Stem("bikage"), "bikag");});
test("bikager -> bikag", function() {deepEqual( Stem("bikager"), "bikag");});
test("bikagerne -> bikag", function() {deepEqual( Stem("bikagerne"), "bikag");});
test("bikat -> bikat", function() {deepEqual( Stem("bikat"), "bikat");});
test("bikris -> bikris", function() {deepEqual( Stem("bikris"), "bikris");});
test("bikriterne -> bikrit", function() {deepEqual( Stem("bikriterne"), "bikrit");});
test("bildad -> bildad", function() {deepEqual( Stem("bildad"), "bildad");});
test("bilde -> bild", function() {deepEqual( Stem("bilde"), "bild");});
test("bileam -> bileam", function() {deepEqual( Stem("bileam"), "bileam");});
test("bileams -> bileam", function() {deepEqual( Stem("bileams"), "bileam");});
test("bilga -> bilga", function() {deepEqual( Stem("bilga"), "bilga");});
test("bilgaj -> bilgaj", function() {deepEqual( Stem("bilgaj"), "bilgaj");});
test("bilha -> bilha", function() {deepEqual( Stem("bilha"), "bilha");});
test("bilhan -> bilhan", function() {deepEqual( Stem("bilhan"), "bilhan");});
test("bilhans -> bilhan", function() {deepEqual( Stem("bilhans"), "bilhan");});
test("bilhas -> bilha", function() {deepEqual( Stem("bilhas"), "bilha");});
test("billed -> billed", function() {deepEqual( Stem("billed"), "billed");});
test("billede -> billed", function() {deepEqual( Stem("billede"), "billed");});
test("billeder -> billed", function() {deepEqual( Stem("billeder"), "billed");});
test("billederne -> billed", function() {deepEqual( Stem("billederne"), "billed");});
test("billedet -> billed", function() {deepEqual( Stem("billedet"), "billed");});
test("billedkamre -> billedkamr", function() {deepEqual( Stem("billedkamre"), "billedkamr");});
test("billedlig -> billed", function() {deepEqual( Stem("billedlig"), "billed");});
test("billedskærer -> billedskær", function() {deepEqual( Stem("billedskærer"), "billedskær");});
test("billedskærerarbejde -> billedskærerarbejd", function() {deepEqual( Stem("billedskærerarbejde"), "billedskærerarbejd");});
test("billedstøtte -> billedstøt", function() {deepEqual( Stem("billedstøtte"), "billedstøt");});
test("billedstøtten -> billedstøt", function() {deepEqual( Stem("billedstøtten"), "billedstøt");});
test("billedstøttens -> billedstøt", function() {deepEqual( Stem("billedstøttens"), "billedstøt");});
test("billedtale -> billedtal", function() {deepEqual( Stem("billedtale"), "billedtal");});
test("billedværk -> billedværk", function() {deepEqual( Stem("billedværk"), "billedværk");});
test("billedværker -> billedværk", function() {deepEqual( Stem("billedværker"), "billedværk");});
test("billigede -> billiged", function() {deepEqual( Stem("billigede"), "billiged");});
test("billiget -> bil", function() {deepEqual( Stem("billiget"), "bil");});
test("billigt -> bil", function() {deepEqual( Stem("billigt"), "bil");});
test("bilsjan -> bilsjan", function() {deepEqual( Stem("bilsjan"), "bilsjan");});
test("bilægge -> bilæg", function() {deepEqual( Stem("bilægge"), "bilæg");});
test("bimhal -> bimhal", function() {deepEqual( Stem("bimhal"), "bimhal");});
test("bin -> bin", function() {deepEqual( Stem("bin"), "bin");});
test("bind -> bind", function() {deepEqual( Stem("bind"), "bind");});
test("binde -> bind", function() {deepEqual( Stem("binde"), "bind");});
test("bindeled -> bindeled", function() {deepEqual( Stem("bindeled"), "bindeled");});
test("bindende -> bind", function() {deepEqual( Stem("bindende"), "bind");});
test("binder -> bind", function() {deepEqual( Stem("binder"), "bind");});
test("bindes -> bind", function() {deepEqual( Stem("bindes"), "bind");});
test("bindet -> bind", function() {deepEqual( Stem("bindet"), "bind");});
test("binjamin -> binjamin", function() {deepEqual( Stem("binjamin"), "binjamin");});
test("binnuj -> binnuj", function() {deepEqual( Stem("binnuj"), "binnuj");});
test("binnujs -> binnuj", function() {deepEqual( Stem("binnujs"), "binnuj");});
test("binsides -> binsid", function() {deepEqual( Stem("binsides"), "binsid");});
test("bir -> bir", function() {deepEqual( Stem("bir"), "bir");});
test("birjat -> birjat", function() {deepEqual( Stem("birjat"), "birjat");});
test("birsja -> birsja", function() {deepEqual( Stem("birsja"), "birsja");});
test("birzajits -> birzajit", function() {deepEqual( Stem("birzajits"), "birzajit");});
test("bisjlam -> bisjlam", function() {deepEqual( Stem("bisjlam"), "bisjlam");});
test("bismer -> bism", function() {deepEqual( Stem("bismer"), "bism");});
test("bistand -> bistand", function() {deepEqual( Stem("bistand"), "bistand");});
test("bisværm -> bisværm", function() {deepEqual( Stem("bisværm"), "bisværm");});
test("bithynien -> bithyni", function() {deepEqual( Stem("bithynien"), "bithyni");});
test("bitja -> bitja", function() {deepEqual( Stem("bitja"), "bitja");});
test("bitre -> bitr", function() {deepEqual( Stem("bitre"), "bitr");});
test("bitter -> bit", function() {deepEqual( Stem("bitter"), "bit");});
test("bitterhed -> bitter", function() {deepEqual( Stem("bitterhed"), "bitter");});
test("bitterhedens -> bitter", function() {deepEqual( Stem("bitterhedens"), "bitter");});
test("bitterheds -> bitter", function() {deepEqual( Stem("bitterheds"), "bitter");});
test("bitterlig -> bitter", function() {deepEqual( Stem("bitterlig"), "bitter");});
test("bitterligt -> bitter", function() {deepEqual( Stem("bitterligt"), "bitter");});
test("bittert -> bittert", function() {deepEqual( Stem("bittert"), "bittert");});
test("bizta -> bizta", function() {deepEqual( Stem("bizta"), "bizta");});
test("bjemført -> bjemført", function() {deepEqual( Stem("bjemført"), "bjemført");});
test("bjemsøge -> bjemsøg", function() {deepEqual( Stem("bjemsøge"), "bjemsøg");});
test("bjemsøgte -> bjemsøg", function() {deepEqual( Stem("bjemsøgte"), "bjemsøg");});
test("bjerg -> bjerg", function() {deepEqual( Stem("bjerg"), "bjerg");});
test("bjergdalen -> bjergdal", function() {deepEqual( Stem("bjergdalen"), "bjergdal");});
test("bjergdrag -> bjergdrag", function() {deepEqual( Stem("bjergdrag"), "bjergdrag");});
test("bjerge -> bjerg", function() {deepEqual( Stem("bjerge"), "bjerg");});
test("bjergegn -> bjergegn", function() {deepEqual( Stem("bjergegn"), "bjergegn");});
test("bjergegnen -> bjergegn", function() {deepEqual( Stem("bjergegnen"), "bjergegn");});
test("bjergene -> bjerg", function() {deepEqual( Stem("bjergene"), "bjerg");});
test("bjergenes -> bjerg", function() {deepEqual( Stem("bjergenes"), "bjerg");});
test("bjerges -> bjerg", function() {deepEqual( Stem("bjerges"), "bjerg");});
test("bjerget -> bjerg", function() {deepEqual( Stem("bjerget"), "bjerg");});
test("bjergets -> bjerg", function() {deepEqual( Stem("bjergets"), "bjerg");});
test("bjerggud -> bjerggud", function() {deepEqual( Stem("bjerggud"), "bjerggud");});
test("bjerghøjder -> bjerghøjd", function() {deepEqual( Stem("bjerghøjder"), "bjerghøjd");});
test("bjergland -> bjergland", function() {deepEqual( Stem("bjergland"), "bjergland");});
test("bjerglandet -> bjergland", function() {deepEqual( Stem("bjerglandet"), "bjergland");});
test("bjerglandets -> bjergland", function() {deepEqual( Stem("bjerglandets"), "bjergland");});
test("bjergryg -> bjergryg", function() {deepEqual( Stem("bjergryg"), "bjergryg");});
test("bjergryggen -> bjergryg", function() {deepEqual( Stem("bjergryggen"), "bjergryg");});
test("bjergs -> bjerg", function() {deepEqual( Stem("bjergs"), "bjerg");});
test("bjergsiden -> bjergsid", function() {deepEqual( Stem("bjergsiden"), "bjergsid");});
test("bjergskråningen -> bjergskråning", function() {deepEqual( Stem("bjergskråningen"), "bjergskråning");});
test("bjergskråningerne -> bjergskråning", function() {deepEqual( Stem("bjergskråningerne"), "bjergskråning");});
test("bjergskrænten -> bjergskrænt", function() {deepEqual( Stem("bjergskrænten"), "bjergskrænt");});
test("bjergtoppene -> bjergtop", function() {deepEqual( Stem("bjergtoppene"), "bjergtop");});
test("bjergvæggens -> bjergvæg", function() {deepEqual( Stem("bjergvæggens"), "bjergvæg");});
test("bjæffe -> bjæf", function() {deepEqual( Stem("bjæffe"), "bjæf");});
test("bjælde -> bjæld", function() {deepEqual( Stem("bjælde"), "bjæld");});
test("bjælder -> bjæld", function() {deepEqual( Stem("bjælder"), "bjæld");});
test("bjælke -> bjælk", function() {deepEqual( Stem("bjælke"), "bjælk");});
test("bjælkelaget -> bjælkelag", function() {deepEqual( Stem("bjælkelaget"), "bjælkelag");});
test("bjælken -> bjælk", function() {deepEqual( Stem("bjælken"), "bjælk");});
test("bjælker -> bjælk", function() {deepEqual( Stem("bjælker"), "bjælk");});
test("bjælkerammer -> bjælkeram", function() {deepEqual( Stem("bjælkerammer"), "bjælkeram");});
test("bjælkerne -> bjælk", function() {deepEqual( Stem("bjælkerne"), "bjælk");});
test("bjælkeværk -> bjælkeværk", function() {deepEqual( Stem("bjælkeværk"), "bjælkeværk");});
test("bjælkeværket -> bjælkeværk", function() {deepEqual( Stem("bjælkeværket"), "bjælkeværk");});
test("bjærg -> bjærg", function() {deepEqual( Stem("bjærg"), "bjærg");});
test("bjærge -> bjærg", function() {deepEqual( Stem("bjærge"), "bjærg");});
test("bjærged -> bjærged", function() {deepEqual( Stem("bjærged"), "bjærged");});
test("bjærgede -> bjærged", function() {deepEqual( Stem("bjærgede"), "bjærged");});
test("bjærger -> bjærg", function() {deepEqual( Stem("bjærger"), "bjærg");});
test("bjærges -> bjærg", function() {deepEqual( Stem("bjærges"), "bjærg");});
test("bjærgested -> bjærgested", function() {deepEqual( Stem("bjærgested"), "bjærgested");});
test("bjærget -> bjærg", function() {deepEqual( Stem("bjærget"), "bjærg");});
test("bjørn -> bjørn", function() {deepEqual( Stem("bjørn"), "bjørn");});
test("bjørne -> bjørn", function() {deepEqual( Stem("bjørne"), "bjørn");});
test("bjørnen -> bjørn", function() {deepEqual( Stem("bjørnen"), "bjørn");});
test("bjørnes -> bjørn", function() {deepEqual( Stem("bjørnes"), "bjørn");});
test("bjørns -> bjørn", function() {deepEqual( Stem("bjørns"), "bjørn");});
test("blad -> blad", function() {deepEqual( Stem("blad"), "blad");});
test("blade -> blad", function() {deepEqual( Stem("blade"), "blad");});
test("bladene -> blad", function() {deepEqual( Stem("bladene"), "blad");});
test("bladløse -> bladløs", function() {deepEqual( Stem("bladløse"), "bladløs");});
test("blakkede -> blakked", function() {deepEqual( Stem("blakkede"), "blakked");});
test("blakket -> blak", function() {deepEqual( Stem("blakket"), "blak");});
test("blande -> bland", function() {deepEqual( Stem("blande"), "bland");});
test("blanded -> blanded", function() {deepEqual( Stem("blanded"), "blanded");});
test("blandede -> blanded", function() {deepEqual( Stem("blandede"), "blanded");});
test("blander -> bland", function() {deepEqual( Stem("blander"), "bland");});
test("blandes -> bland", function() {deepEqual( Stem("blandes"), "bland");});
test("blandet -> bland", function() {deepEqual( Stem("blandet"), "bland");});
test("blandfoder -> blandfod", function() {deepEqual( Stem("blandfoder"), "blandfod");});
test("blanding -> blanding", function() {deepEqual( Stem("blanding"), "blanding");});
test("blandingsfolket -> blandingsfolk", function() {deepEqual( Stem("blandingsfolket"), "blandingsfolk");});
test("blandingsfolkets -> blandingsfolk", function() {deepEqual( Stem("blandingsfolkets"), "blandingsfolk");});
test("blandt -> bland", function() {deepEqual( Stem("blandt"), "bland");});
test("blanke -> blank", function() {deepEqual( Stem("blanke"), "blank");});
test("blankt -> blank", function() {deepEqual( Stem("blankt"), "blank");});
test("blastus -> blastus", function() {deepEqual( Stem("blastus"), "blastus");});
test("ble -> ble", function() {deepEqual( Stem("ble"), "ble");});
test("bleduft -> bleduft", function() {deepEqual( Stem("bleduft"), "bleduft");});
test("blegemand -> blegemand", function() {deepEqual( Stem("blegemand"), "blegemand");});
test("blegepladsen -> blegeplads", function() {deepEqual( Stem("blegepladsen"), "blegeplads");});
test("blegne -> blegn", function() {deepEqual( Stem("blegne"), "blegn");});
test("blegner -> blegn", function() {deepEqual( Stem("blegner"), "blegn");});
test("bler -> bler", function() {deepEqual( Stem("bler"), "bler");});
test("bletræ -> bletræ", function() {deepEqual( Stem("bletræ"), "bletræ");});
test("bletræet -> bletræ", function() {deepEqual( Stem("bletræet"), "bletræ");});
test("blev -> blev", function() {deepEqual( Stem("blev"), "blev");});
test("bleve -> blev", function() {deepEqual( Stem("bleve"), "blev");});
test("bleven -> blev", function() {deepEqual( Stem("bleven"), "blev");});
test("blevet -> blev", function() {deepEqual( Stem("blevet"), "blev");});
test("blevne -> blevn", function() {deepEqual( Stem("blevne"), "blevn");});
test("blide -> blid", function() {deepEqual( Stem("blide"), "blid");});
test("blik -> blik", function() {deepEqual( Stem("blik"), "blik");});
test("blikke -> blik", function() {deepEqual( Stem("blikke"), "blik");});
test("blikket -> blik", function() {deepEqual( Stem("blikket"), "blik");});
test("blikstille -> blikstil", function() {deepEqual( Stem("blikstille"), "blikstil");});
test("blind -> blind", function() {deepEqual( Stem("blind"), "blind");});
test("blinde -> blind", function() {deepEqual( Stem("blinde"), "blind");});
test("blindes -> blind", function() {deepEqual( Stem("blindes"), "blind");});
test("blindet -> blind", function() {deepEqual( Stem("blindet"), "blind");});
test("blindfødt -> blindfød", function() {deepEqual( Stem("blindfødt"), "blindfød");});
test("blindhed -> blind", function() {deepEqual( Stem("blindhed"), "blind");});
test("blindt -> blind", function() {deepEqual( Stem("blindt"), "blind");});
test("blinker -> blink", function() {deepEqual( Stem("blinker"), "blink");});
test("bliv -> bliv", function() {deepEqual( Stem("bliv"), "bliv");});
test("blive -> bliv", function() {deepEqual( Stem("blive"), "bliv");});
test("blivende -> bliv", function() {deepEqual( Stem("blivende"), "bliv");});
test("bliver -> bliv", function() {deepEqual( Stem("bliver"), "bliv");});
test("blod -> blod", function() {deepEqual( Stem("blod"), "blod");});
test("blodager -> blodag", function() {deepEqual( Stem("blodager"), "blodag");});
test("blodbad -> blodbad", function() {deepEqual( Stem("blodbad"), "blodbad");});
test("blodbadets -> blodbad", function() {deepEqual( Stem("blodbadets"), "blodbad");});
test("blodbads -> blodbad", function() {deepEqual( Stem("blodbads"), "blodbad");});
test("blodbrudgom -> blodbrudgom", function() {deepEqual( Stem("blodbrudgom"), "blodbrudgom");});
test("blodbyen -> blodby", function() {deepEqual( Stem("blodbyen"), "blodby");});
test("blodet -> blod", function() {deepEqual( Stem("blodet"), "blod");});
test("blodets -> blod", function() {deepEqual( Stem("blodets"), "blod");});
test("blodflod -> blodflod", function() {deepEqual( Stem("blodflod"), "blodflod");});
test("blodflåd -> blodflåd", function() {deepEqual( Stem("blodflåd"), "blodflåd");});
test("blodgang -> blodgang", function() {deepEqual( Stem("blodgang"), "blodgang");});
test("blodhund -> blodhund", function() {deepEqual( Stem("blodhund"), "blodhund");});
test("blodhævneren -> blodhævn", function() {deepEqual( Stem("blodhævneren"), "blodhævn");});
test("blodhævnerens -> blodhævn", function() {deepEqual( Stem("blodhævnerens"), "blodhævn");});
test("blodige -> blod", function() {deepEqual( Stem("blodige"), "blod");});
test("blodiglen -> blodigl", function() {deepEqual( Stem("blodiglen"), "blodigl");});
test("blodmarken -> blodmark", function() {deepEqual( Stem("blodmarken"), "blodmark");});
test("blodofre -> blodofr", function() {deepEqual( Stem("blodofre"), "blodofr");});
test("blodpenge -> blodpeng", function() {deepEqual( Stem("blodpenge"), "blodpeng");});
test("blodråd -> blodråd", function() {deepEqual( Stem("blodråd"), "blodråd");});
test("blods -> blod", function() {deepEqual( Stem("blods"), "blod");});
test("blodsdråber -> blodsdråb", function() {deepEqual( Stem("blodsdråber"), "blodsdråb");});
test("blodskyld -> blodskyld", function() {deepEqual( Stem("blodskyld"), "blodskyld");});
test("blodskylden -> blodskyld", function() {deepEqual( Stem("blodskylden"), "blodskyld");});
test("blodstænkt -> blodstænk", function() {deepEqual( Stem("blodstænkt"), "blodstænk");});
test("blodstænkte -> blodstænk", function() {deepEqual( Stem("blodstænkte"), "blodstænk");});
test("blodsudgydelse -> blodsudgyd", function() {deepEqual( Stem("blodsudgydelse"), "blodsudgyd");});
test("blodsuger -> blodsug", function() {deepEqual( Stem("blodsuger"), "blodsug");});
test("blodtab -> blodtab", function() {deepEqual( Stem("blodtab"), "blodtab");});
test("blodtørstige -> blodtørst", function() {deepEqual( Stem("blodtørstige"), "blodtørst");});
test("bloes -> bloes", function() {deepEqual( Stem("bloes"), "bloes");});
test("blok -> blok", function() {deepEqual( Stem("blok"), "blok");});
test("blokken -> blok", function() {deepEqual( Stem("blokken"), "blok");});
test("blomst -> blomst", function() {deepEqual( Stem("blomst"), "blomst");});
test("blomsten -> blomst", function() {deepEqual( Stem("blomsten"), "blomst");});
test("blomster -> blomst", function() {deepEqual( Stem("blomster"), "blomst");});
test("blomsterbægrene -> blomsterbægr", function() {deepEqual( Stem("blomsterbægrene"), "blomsterbægr");});
test("blomsterkranse -> blomsterkrans", function() {deepEqual( Stem("blomsterkranse"), "blomsterkrans");});
test("blomsterne -> blomst", function() {deepEqual( Stem("blomsterne"), "blomst");});
test("blomstre -> blomstr", function() {deepEqual( Stem("blomstre"), "blomstr");});
test("blomstrende -> blomstr", function() {deepEqual( Stem("blomstrende"), "blomstr");});
test("blomstrer -> blomstr", function() {deepEqual( Stem("blomstrer"), "blomstr");});
test("blomstret -> blomstr", function() {deepEqual( Stem("blomstret"), "blomstr");});
test("blomstring -> blomstring", function() {deepEqual( Stem("blomstring"), "blomstring");});
test("blot -> blot", function() {deepEqual( Stem("blot"), "blot");});
test("blotte -> blot", function() {deepEqual( Stem("blotte"), "blot");});
test("blotted -> blotted", function() {deepEqual( Stem("blotted"), "blotted");});
test("blottede -> blotted", function() {deepEqual( Stem("blottede"), "blotted");});
test("blottedes -> blotted", function() {deepEqual( Stem("blottedes"), "blotted");});
test("blotter -> blot", function() {deepEqual( Stem("blotter"), "blot");});
test("blottes -> blot", function() {deepEqual( Stem("blottes"), "blot");});
test("blottet -> blot", function() {deepEqual( Stem("blottet"), "blot");});
test("bluedes -> blued", function() {deepEqual( Stem("bluedes"), "blued");});
test("blues -> blues", function() {deepEqual( Stem("blues"), "blues");});
test("blufærdighed -> blufærd", function() {deepEqual( Stem("blufærdighed"), "blufærd");});
test("blund -> blund", function() {deepEqual( Stem("blund"), "blund");});
test("blunded -> blunded", function() {deepEqual( Stem("blunded"), "blunded");});
test("blunder -> blund", function() {deepEqual( Stem("blunder"), "blund");});
test("blus -> blus", function() {deepEqual( Stem("blus"), "blus");});
test("blusel -> blusel", function() {deepEqual( Stem("blusel"), "blusel");});
test("blusse -> blus", function() {deepEqual( Stem("blusse"), "blus");});
test("blussed -> blussed", function() {deepEqual( Stem("blussed"), "blussed");});
test("blussede -> blussed", function() {deepEqual( Stem("blussede"), "blussed");});
test("blussel -> blussel", function() {deepEqual( Stem("blussel"), "blussel");});
test("blussende -> blus", function() {deepEqual( Stem("blussende"), "blus");});
test("blusser -> blus", function() {deepEqual( Stem("blusser"), "blus");});
test("blusset -> blus", function() {deepEqual( Stem("blusset"), "blus");});
test("bly -> bly", function() {deepEqual( Stem("bly"), "bly");});
test("blylod -> blylod", function() {deepEqual( Stem("blylod"), "blylod");});
test("blylåg -> blylåg", function() {deepEqual( Stem("blylåg"), "blylåg");});
test("blylåget -> blylåg", function() {deepEqual( Stem("blylåget"), "blylåg");});
test("blystenen -> blysten", function() {deepEqual( Stem("blystenen"), "blysten");});
test("blår -> blår", function() {deepEqual( Stem("blår"), "blår");});
test("blårgarn -> blårgarn", function() {deepEqual( Stem("blårgarn"), "blårgarn");});
test("blåt -> blåt", function() {deepEqual( Stem("blåt"), "blåt");});
test("blæder -> blæd", function() {deepEqual( Stem("blæder"), "blæd");});
test("blæk -> blæk", function() {deepEqual( Stem("blæk"), "blæk");});
test("blænde -> blænd", function() {deepEqual( Stem("blænde"), "blænd");});
test("blændværk -> blændværk", function() {deepEqual( Stem("blændværk"), "blændværk");});
test("blæs -> blæs", function() {deepEqual( Stem("blæs"), "blæs");});
test("blæse -> blæs", function() {deepEqual( Stem("blæse"), "blæs");});
test("blæser -> blæs", function() {deepEqual( Stem("blæser"), "blæs");});
test("blæses -> blæs", function() {deepEqual( Stem("blæses"), "blæs");});
test("blæst -> blæst", function() {deepEqual( Stem("blæst"), "blæst");});
test("blæste -> blæst", function() {deepEqual( Stem("blæste"), "blæst");});
test("blæstes -> blæst", function() {deepEqual( Stem("blæstes"), "blæst");});
test("blød -> blød", function() {deepEqual( Stem("blød"), "blød");});
test("blødagtige -> blødag", function() {deepEqual( Stem("blødagtige"), "blødag");});
test("blødagtighed -> blødag", function() {deepEqual( Stem("blødagtighed"), "blødag");});
test("bløde -> blød", function() {deepEqual( Stem("bløde"), "blød");});
test("bløder -> blød", function() {deepEqual( Stem("bløder"), "blød");});
test("blødere -> blød", function() {deepEqual( Stem("blødere"), "blød");});
test("bner -> bner", function() {deepEqual( Stem("bner"), "bner");});
test("bning -> bning", function() {deepEqual( Stem("bning"), "bning");});
test("bningen -> bning", function() {deepEqual( Stem("bningen"), "bning");});
test("bo -> bo", function() {deepEqual( Stem("bo"), "bo");});
test("boanerges -> boanerg", function() {deepEqual( Stem("boanerges"), "boanerg");});
test("boas -> boas", function() {deepEqual( Stem("boas"), "boas");});
test("boaz -> boaz", function() {deepEqual( Stem("boaz"), "boaz");});
test("boazs -> boaz", function() {deepEqual( Stem("boazs"), "boaz");});
test("bod -> bod", function() {deepEqual( Stem("bod"), "bod");});
test("boede -> boed", function() {deepEqual( Stem("boede"), "boed");});
test("boedei -> boedei", function() {deepEqual( Stem("boedei"), "boedei");});
test("boende -> boend", function() {deepEqual( Stem("boende"), "boend");});
test("boet -> boet", function() {deepEqual( Stem("boet"), "boet");});
test("bog -> bog", function() {deepEqual( Stem("bog"), "bog");});
test("bogen -> bog", function() {deepEqual( Stem("bogen"), "bog");});
test("bogrulle -> bogrul", function() {deepEqual( Stem("bogrulle"), "bogrul");});
test("bogrullen -> bogrul", function() {deepEqual( Stem("bogrullen"), "bogrul");});
test("bogs -> bog", function() {deepEqual( Stem("bogs"), "bog");});
test("bogstav -> bogstav", function() {deepEqual( Stem("bogstav"), "bogstav");});
test("bogstaven -> bogstav", function() {deepEqual( Stem("bogstaven"), "bogstav");});
test("bogstavens -> bogstav", function() {deepEqual( Stem("bogstavens"), "bogstav");});
test("bogstaver -> bogstav", function() {deepEqual( Stem("bogstaver"), "bogstav");});
test("bohans -> bohan", function() {deepEqual( Stem("bohans"), "bohan");});
test("bohave -> bohav", function() {deepEqual( Stem("bohave"), "bohav");});
test("bokeru -> bokeru", function() {deepEqual( Stem("bokeru"), "bokeru");});
test("bokim -> bokim", function() {deepEqual( Stem("bokim"), "bokim");});
test("bolde -> bold", function() {deepEqual( Stem("bolde"), "bold");});
test("bolder -> bold", function() {deepEqual( Stem("bolder"), "bold");});
test("boldt -> bold", function() {deepEqual( Stem("boldt"), "bold");});
test("bole -> bol", function() {deepEqual( Stem("bole"), "bol");});
test("boled -> boled", function() {deepEqual( Stem("boled"), "boled");});
test("bolede -> boled", function() {deepEqual( Stem("bolede"), "boled");});
test("bolemærket -> bolemærk", function() {deepEqual( Stem("bolemærket"), "bolemærk");});
test("bolen -> bol", function() {deepEqual( Stem("bolen"), "bol");});
test("boler -> bol", function() {deepEqual( Stem("boler"), "bol");});
test("bolere -> bol", function() {deepEqual( Stem("bolere"), "bol");});
test("boleres -> bol", function() {deepEqual( Stem("boleres"), "bol");});
test("bolerske -> bolersk", function() {deepEqual( Stem("bolerske"), "bolersk");});
test("bolet -> bol", function() {deepEqual( Stem("bolet"), "bol");});
test("bolig -> bol", function() {deepEqual( Stem("bolig"), "bol");});
test("boligen -> bol", function() {deepEqual( Stem("boligen"), "bol");});
test("boligens -> bol", function() {deepEqual( Stem("boligens"), "bol");});
test("boliger -> bol", function() {deepEqual( Stem("boliger"), "bol");});
test("boligi -> boligi", function() {deepEqual( Stem("boligi"), "boligi");});
test("boligs -> bol", function() {deepEqual( Stem("boligs"), "bol");});
test("bolster -> bolst", function() {deepEqual( Stem("bolster"), "bolst");});
test("boltre -> boltr", function() {deepEqual( Stem("boltre"), "boltr");});
test("boltrer -> boltr", function() {deepEqual( Stem("boltrer"), "boltr");});
test("bolværk -> bolværk", function() {deepEqual( Stem("bolværk"), "bolværk");});
test("bolværker -> bolværk", function() {deepEqual( Stem("bolværker"), "bolværk");});
test("bomærke -> bomærk", function() {deepEqual( Stem("bomærke"), "bomærk");});
test("bonde -> bond", function() {deepEqual( Stem("bonde"), "bond");});
test("bonden -> bond", function() {deepEqual( Stem("bonden"), "bond");});
test("bonge -> bong", function() {deepEqual( Stem("bonge"), "bong");});
test("bongens -> bong", function() {deepEqual( Stem("bongens"), "bong");});
test("boos -> boos", function() {deepEqual( Stem("boos"), "boos");});
test("bopæl -> bopæl", function() {deepEqual( Stem("bopæl"), "bopæl");});
test("bor -> bor", function() {deepEqual( Stem("bor"), "bor");});
test("bord -> bord", function() {deepEqual( Stem("bord"), "bord");});
test("borde -> bord", function() {deepEqual( Stem("borde"), "bord");});
test("bordene -> bord", function() {deepEqual( Stem("bordene"), "bord");});
test("bordet -> bord", function() {deepEqual( Stem("bordet"), "bord");});
test("bordfæller -> bordfæl", function() {deepEqual( Stem("bordfæller"), "bordfæl");});
test("bords -> bord", function() {deepEqual( Stem("bords"), "bord");});
test("bore -> bor", function() {deepEqual( Stem("bore"), "bor");});
test("bored -> bored", function() {deepEqual( Stem("bored"), "bored");});
test("borede -> bored", function() {deepEqual( Stem("borede"), "bored");});
test("borer -> bor", function() {deepEqual( Stem("borer"), "bor");});
test("boret -> bor", function() {deepEqual( Stem("boret"), "bor");});
test("borf -> borf", function() {deepEqual( Stem("borf"), "borf");});
test("borg -> borg", function() {deepEqual( Stem("borg"), "borg");});
test("borge -> borg", function() {deepEqual( Stem("borge"), "borg");});
test("borged -> borged", function() {deepEqual( Stem("borged"), "borged");});
test("borgen -> borg", function() {deepEqual( Stem("borgen"), "borg");});
test("borgene -> borg", function() {deepEqual( Stem("borgene"), "borg");});
test("borger -> borg", function() {deepEqual( Stem("borger"), "borg");});
test("borgere -> borg", function() {deepEqual( Stem("borgere"), "borg");});
test("borgeres -> borg", function() {deepEqual( Stem("borgeres"), "borg");});
test("borgerne -> borg", function() {deepEqual( Stem("borgerne"), "borg");});
test("borgerret -> borger", function() {deepEqual( Stem("borgerret"), "borger");});
test("borgerskab -> borgerskab", function() {deepEqual( Stem("borgerskab"), "borgerskab");});
test("borget -> borg", function() {deepEqual( Stem("borget"), "borg");});
test("borgøversten -> borgøverst", function() {deepEqual( Stem("borgøversten"), "borgøverst");});
test("bort -> bort", function() {deepEqual( Stem("bort"), "bort");});
test("bortbytte -> bortbyt", function() {deepEqual( Stem("bortbytte"), "bortbyt");});
test("bortdragende -> bortdrag", function() {deepEqual( Stem("bortdragende"), "bortdrag");});
test("bortdrevet -> bortdrev", function() {deepEqual( Stem("bortdrevet"), "bortdrev");});
test("bortdrevne -> bortdrevn", function() {deepEqual( Stem("bortdrevne"), "bortdrevn");});
test("bortdrive -> bortdriv", function() {deepEqual( Stem("bortdrive"), "bortdriv");});
test("bortdøde -> bortdød", function() {deepEqual( Stem("bortdøde"), "bortdød");});
test("borte -> bort", function() {deepEqual( Stem("borte"), "bort");});
test("bortfalder -> bortfald", function() {deepEqual( Stem("bortfalder"), "bortfald");});
test("bortfejer -> bortfej", function() {deepEqual( Stem("bortfejer"), "bortfej");});
test("bortfra -> bortfra", function() {deepEqual( Stem("bortfra"), "bortfra");});
test("bortføre -> bortfør", function() {deepEqual( Stem("bortføre"), "bortfør");});
test("bortførelse -> bortfør", function() {deepEqual( Stem("bortførelse"), "bortfør");});
test("bortførelsen -> bortfør", function() {deepEqual( Stem("bortførelsen"), "bortfør");});
test("bortføres -> bortfør", function() {deepEqual( Stem("bortføres"), "bortfør");});
test("bortført -> bortført", function() {deepEqual( Stem("bortført"), "bortført");});
test("bortførte -> bortført", function() {deepEqual( Stem("bortførte"), "bortført");});
test("bortførtes -> bortført", function() {deepEqual( Stem("bortførtes"), "bortført");});
test("bortgang -> bortgang", function() {deepEqual( Stem("bortgang"), "bortgang");});
test("bortgift -> bortgift", function() {deepEqual( Stem("bortgift"), "bortgift");});
test("bortgiftede -> bortgifted", function() {deepEqual( Stem("bortgiftede"), "bortgifted");});
test("bortgifter -> bortgift", function() {deepEqual( Stem("bortgifter"), "bortgift");});
test("bortgiftes -> bortgift", function() {deepEqual( Stem("bortgiftes"), "bortgift");});
test("bortgiftet -> bortgift", function() {deepEqual( Stem("bortgiftet"), "bortgift");});
test("bortjage -> bortjag", function() {deepEqual( Stem("bortjage"), "bortjag");});
test("bortkaste -> bortkast", function() {deepEqual( Stem("bortkaste"), "bortkast");});
test("bortkastede -> bortkasted", function() {deepEqual( Stem("bortkastede"), "bortkasted");});
test("bortkomme -> bortkom", function() {deepEqual( Stem("bortkomme"), "bortkom");});
test("bortkommen -> bortkom", function() {deepEqual( Stem("bortkommen"), "bortkom");});
test("bortkomne -> bortkomn", function() {deepEqual( Stem("bortkomne"), "bortkomn");});
test("bortriv -> bortriv", function() {deepEqual( Stem("bortriv"), "bortriv");});
test("bortrive -> bortriv", function() {deepEqual( Stem("bortrive"), "bortriv");});
test("bortriver -> bortriv", function() {deepEqual( Stem("bortriver"), "bortriv");});
test("bortrives -> bortriv", function() {deepEqual( Stem("bortrives"), "bortriv");});
test("bortrydde -> bortryd", function() {deepEqual( Stem("bortrydde"), "bortryd");});
test("bortrydder -> bortryd", function() {deepEqual( Stem("bortrydder"), "bortryd");});
test("bortryddes -> bortryd", function() {deepEqual( Stem("bortryddes"), "bortryd");});
test("bortryddet -> bortryd", function() {deepEqual( Stem("bortryddet"), "bortryd");});
test("bortrykkede -> bortrykked", function() {deepEqual( Stem("bortrykkede"), "bortrykked");});
test("bortrykkes -> bortryk", function() {deepEqual( Stem("bortrykkes"), "bortryk");});
test("bortrykket -> bortryk", function() {deepEqual( Stem("bortrykket"), "bortryk");});
test("bortset -> borts", function() {deepEqual( Stem("bortset"), "borts");});
test("bortskaffe -> bortskaf", function() {deepEqual( Stem("bortskaffe"), "bortskaf");});
test("bortskaffer -> bortskaf", function() {deepEqual( Stem("bortskaffer"), "bortskaf");});
test("bortskylle -> bortskyl", function() {deepEqual( Stem("bortskylle"), "bortskyl");});
test("bortskyller -> bortskyl", function() {deepEqual( Stem("bortskyller"), "bortskyl");});
test("bortskylles -> bortskyl", function() {deepEqual( Stem("bortskylles"), "bortskyl");});
test("bortskyllet -> bortskyl", function() {deepEqual( Stem("bortskyllet"), "bortskyl");});
test("bortskårne -> bortskårn", function() {deepEqual( Stem("bortskårne"), "bortskårn");});
test("bortskærer -> bortskær", function() {deepEqual( Stem("bortskærer"), "bortskær");});
test("bortstød -> bortstød", function() {deepEqual( Stem("bortstød"), "bortstød");});
test("bortstøde -> bortstød", function() {deepEqual( Stem("bortstøde"), "bortstød");});
test("bortstøder -> bortstød", function() {deepEqual( Stem("bortstøder"), "bortstød");});
test("bortstødt -> bortstød", function() {deepEqual( Stem("bortstødt"), "bortstød");});
test("bortstødte -> bortstød", function() {deepEqual( Stem("bortstødte"), "bortstød");});
test("borttag -> borttag", function() {deepEqual( Stem("borttag"), "borttag");});
test("borttage -> borttag", function() {deepEqual( Stem("borttage"), "borttag");});
test("borttagelsen -> borttag", function() {deepEqual( Stem("borttagelsen"), "borttag");});
test("borttagen -> borttag", function() {deepEqual( Stem("borttagen"), "borttag");});
test("borttager -> borttag", function() {deepEqual( Stem("borttager"), "borttag");});
test("borttages -> borttag", function() {deepEqual( Stem("borttages"), "borttag");});
test("borttaget -> borttag", function() {deepEqual( Stem("borttaget"), "borttag");});
test("borttog -> borttog", function() {deepEqual( Stem("borttog"), "borttog");});
test("borttørredes -> borttørred", function() {deepEqual( Stem("borttørredes"), "borttørred");});
test("bortvejred -> bortvejred", function() {deepEqual( Stem("bortvejred"), "bortvejred");});
test("bortvejrer -> bortvejr", function() {deepEqual( Stem("bortvejrer"), "bortvejr");});
test("bortvendte -> bortvend", function() {deepEqual( Stem("bortvendte"), "bortvend");});
test("bortviser -> bortvis", function() {deepEqual( Stem("bortviser"), "bortvis");});
test("bortvæltet -> bortvælt", function() {deepEqual( Stem("bortvæltet"), "bortvælt");});
test("bortødsler -> bortødsl", function() {deepEqual( Stem("bortødsler"), "bortødsl");});
test("bos -> bos", function() {deepEqual( Stem("bos"), "bos");});
test("bosat -> bosat", function() {deepEqual( Stem("bosat"), "bosat");});
test("bosate -> bosat", function() {deepEqual( Stem("bosate"), "bosat");});
test("bosatte -> bosat", function() {deepEqual( Stem("bosatte"), "bosat");});
test("bosiddende -> bosid", function() {deepEqual( Stem("bosiddende"), "bosid");});
test("bosteder -> bosted", function() {deepEqual( Stem("bosteder"), "bosted");});
test("bosæt -> bosæt", function() {deepEqual( Stem("bosæt"), "bosæt");});
test("bosætte -> bosæt", function() {deepEqual( Stem("bosætte"), "bosæt");});
test("bosætter -> bosæt", function() {deepEqual( Stem("bosætter"), "bosæt");});
test("bov -> bov", function() {deepEqual( Stem("bov"), "bov");});
test("boven -> bov", function() {deepEqual( Stem("boven"), "bov");});
test("bovens -> bov", function() {deepEqual( Stem("bovens"), "bov");});
test("bozenaj -> bozenaj", function() {deepEqual( Stem("bozenaj"), "bozenaj");});
test("bozez -> bozez", function() {deepEqual( Stem("bozez"), "bozez");});
test("bozkaf -> bozkaf", function() {deepEqual( Stem("bozkaf"), "bozkaf");});
test("bozkat -> bozkat", function() {deepEqual( Stem("bozkat"), "bozkat");});
test("bozra -> bozra", function() {deepEqual( Stem("bozra"), "bozra");});
test("bozras -> bozra", function() {deepEqual( Stem("bozras"), "bozra");});
test("brag -> brag", function() {deepEqual( Stem("brag"), "brag");});
test("bragen -> brag", function() {deepEqual( Stem("bragen"), "brag");});
test("bragende -> brag", function() {deepEqual( Stem("bragende"), "brag");});
test("brager -> brag", function() {deepEqual( Stem("brager"), "brag");});
test("braget -> brag", function() {deepEqual( Stem("braget"), "brag");});
test("bragt -> bragt", function() {deepEqual( Stem("bragt"), "bragt");});
test("bragte -> bragt", function() {deepEqual( Stem("bragte"), "bragt");});
test("bragtes -> bragt", function() {deepEqual( Stem("bragtes"), "bragt");});
test("brammer -> bram", function() {deepEqual( Stem("brammer"), "bram");});
test("brand -> brand", function() {deepEqual( Stem("brand"), "brand");});
test("branden -> brand", function() {deepEqual( Stem("branden"), "brand");});
test("brandlugt -> brandlug", function() {deepEqual( Stem("brandlugt"), "brandlug");});
test("brandstumper -> brandstump", function() {deepEqual( Stem("brandstumper"), "brandstump");});
test("brandsår -> brandsår", function() {deepEqual( Stem("brandsår"), "brandsår");});
test("brandsåret -> brandsår", function() {deepEqual( Stem("brandsåret"), "brandsår");});
test("brast -> brast", function() {deepEqual( Stem("brast"), "brast");});
test("brat -> brat", function() {deepEqual( Stem("brat"), "brat");});
test("brav -> brav", function() {deepEqual( Stem("brav"), "brav");});
test("bred -> bred", function() {deepEqual( Stem("bred"), "bred");});
test("bredde -> bred", function() {deepEqual( Stem("bredde"), "bred");});
test("bredden -> bred", function() {deepEqual( Stem("bredden"), "bred");});
test("bredder -> bred", function() {deepEqual( Stem("bredder"), "bred");});
test("brede -> bred", function() {deepEqual( Stem("brede"), "bred");});
test("breder -> bred", function() {deepEqual( Stem("breder"), "bred");});
test("bredere -> bred", function() {deepEqual( Stem("bredere"), "bred");});
test("bredes -> bred", function() {deepEqual( Stem("bredes"), "bred");});
test("bredfuldt -> bredfuld", function() {deepEqual( Stem("bredfuldt"), "bredfuld");});
test("bredside -> bredsid", function() {deepEqual( Stem("bredside"), "bredsid");});
test("bredskaldet -> bredskald", function() {deepEqual( Stem("bredskaldet"), "bredskald");});
test("bredt -> bredt", function() {deepEqual( Stem("bredt"), "bredt");});
test("bredte -> bredt", function() {deepEqual( Stem("bredte"), "bredt");});
test("bremse -> brems", function() {deepEqual( Stem("bremse"), "brems");});
test("bremser -> brems", function() {deepEqual( Stem("bremser"), "brems");});
test("bremserne -> brems", function() {deepEqual( Stem("bremserne"), "brems");});
test("bremsesværme -> bremsesværm", function() {deepEqual( Stem("bremsesværme"), "bremsesværm");});
test("breng -> breng", function() {deepEqual( Stem("breng"), "breng");});
test("brev -> brev", function() {deepEqual( Stem("brev"), "brev");});
test("breve -> brev", function() {deepEqual( Stem("breve"), "brev");});
test("brevene -> brev", function() {deepEqual( Stem("brevene"), "brev");});
test("brevet -> brev", function() {deepEqual( Stem("brevet"), "brev");});
test("brige -> brig", function() {deepEqual( Stem("brige"), "brig");});
test("brikke -> brik", function() {deepEqual( Stem("brikke"), "brik");});
test("bring -> bring", function() {deepEqual( Stem("bring"), "bring");});
test("bringe -> bring", function() {deepEqual( Stem("bringe"), "bring");});
test("bringer -> bring", function() {deepEqual( Stem("bringer"), "bring");});
test("bringes -> bring", function() {deepEqual( Stem("bringes"), "bring");});
test("brinken -> brink", function() {deepEqual( Stem("brinken"), "brink");});
test("brist -> brist", function() {deepEqual( Stem("brist"), "brist");});
test("briste -> brist", function() {deepEqual( Stem("briste"), "brist");});
test("brister -> brist", function() {deepEqual( Stem("brister"), "brist");});
test("bristet -> brist", function() {deepEqual( Stem("bristet"), "brist");});
test("brnabas -> brnaba", function() {deepEqual( Stem("brnabas"), "brnaba");});
test("brod -> brod", function() {deepEqual( Stem("brod"), "brod");});
test("brodde -> brod", function() {deepEqual( Stem("brodde"), "brod");});
test("brodden -> brod", function() {deepEqual( Stem("brodden"), "brod");});
test("broder -> brod", function() {deepEqual( Stem("broder"), "brod");});
test("broderdatter -> broderdat", function() {deepEqual( Stem("broderdatter"), "broderdat");});
test("broderen -> brod", function() {deepEqual( Stem("broderen"), "brod");});
test("broderkærlighed -> broderkær", function() {deepEqual( Stem("broderkærlighed"), "broderkær");});
test("broderkærligheden -> broderkær", function() {deepEqual( Stem("broderkærligheden"), "broderkær");});
test("brodermorderen -> brodermord", function() {deepEqual( Stem("brodermorderen"), "brodermord");});
test("broderpagt -> broderpag", function() {deepEqual( Stem("broderpagt"), "broderpag");});
test("broders -> brod", function() {deepEqual( Stem("broders"), "brod");});
test("broderskabet -> broderskab", function() {deepEqual( Stem("broderskabet"), "broderskab");});
test("brodersøn -> brodersøn", function() {deepEqual( Stem("brodersøn"), "brodersøn");});
test("brodersønner -> brodersøn", function() {deepEqual( Stem("brodersønner"), "brodersøn");});
test("brogede -> broged", function() {deepEqual( Stem("brogede"), "broged");});
test("broget -> brog", function() {deepEqual( Stem("broget"), "brog");});
test("brolagt -> brolag", function() {deepEqual( Stem("brolagt"), "brolag");});
test("bronning -> bronning", function() {deepEqual( Stem("bronning"), "bronning");});
test("brovtende -> brovt", function() {deepEqual( Stem("brovtende"), "brovt");});
test("brovter -> brovt", function() {deepEqual( Stem("brovter"), "brovt");});
test("brud -> brud", function() {deepEqual( Stem("brud"), "brud");});
test("brudefærds -> brudefærd", function() {deepEqual( Stem("brudefærds"), "brudefærd");});
test("brudefører -> brudefør", function() {deepEqual( Stem("brudefører"), "brudefør");});
test("brudekøb -> brudekøb", function() {deepEqual( Stem("brudekøb"), "brudekøb");});
test("brudekøbesum -> brudekøbesum", function() {deepEqual( Stem("brudekøbesum"), "brudekøbesum");});
test("brudekøbesummen -> brudekøbesum", function() {deepEqual( Stem("brudekøbesummen"), "brudekøbesum");});
test("bruden -> brud", function() {deepEqual( Stem("bruden"), "brud");});
test("brudesum -> brudesum", function() {deepEqual( Stem("brudesum"), "brudesum");});
test("brudesvend -> brudesvend", function() {deepEqual( Stem("brudesvend"), "brudesvend");});
test("brudesvende -> brudesv", function() {deepEqual( Stem("brudesvende"), "brudesv");});
test("brudesvendene -> brudesvend", function() {deepEqual( Stem("brudesvendene"), "brudesvend");});
test("brudgom -> brudgom", function() {deepEqual( Stem("brudgom"), "brudgom");});
test("brudgommen -> brudgom", function() {deepEqual( Stem("brudgommen"), "brudgom");});
test("brudgommens -> brudgom", function() {deepEqual( Stem("brudgommens"), "brudgom");});
test("brudgoms -> brudgom", function() {deepEqual( Stem("brudgoms"), "brudgom");});
test("bruds -> brud", function() {deepEqual( Stem("bruds"), "brud");});
test("brudt -> brudt", function() {deepEqual( Stem("brudt"), "brudt");});
test("brudte -> brudt", function() {deepEqual( Stem("brudte"), "brudt");});
test("brue -> brue", function() {deepEqual( Stem("brue"), "brue");});
test("brug -> brug", function() {deepEqual( Stem("brug"), "brug");});
test("bruge -> brug", function() {deepEqual( Stem("bruge"), "brug");});
test("brugelige -> brug", function() {deepEqual( Stem("brugelige"), "brug");});
test("bruger -> brug", function() {deepEqual( Stem("bruger"), "brug");});
test("bruges -> brug", function() {deepEqual( Stem("bruges"), "brug");});
test("brugt -> brugt", function() {deepEqual( Stem("brugt"), "brugt");});
test("brugte -> brugt", function() {deepEqual( Stem("brugte"), "brugt");});
test("brugtes -> brugt", function() {deepEqual( Stem("brugtes"), "brugt");});
test("brummen -> brum", function() {deepEqual( Stem("brummen"), "brum");});
test("brummende -> brum", function() {deepEqual( Stem("brummende"), "brum");});
test("brummer -> brum", function() {deepEqual( Stem("brummer"), "brum");});
test("brunst -> brunst", function() {deepEqual( Stem("brunst"), "brunst");});
test("brus -> brus", function() {deepEqual( Stem("brus"), "brus");});
test("bruse -> brus", function() {deepEqual( Stem("bruse"), "brus");});
test("brusede -> brused", function() {deepEqual( Stem("brusede"), "brused");});
test("brusen -> brus", function() {deepEqual( Stem("brusen"), "brus");});
test("brusende -> brus", function() {deepEqual( Stem("brusende"), "brus");});
test("bruser -> brus", function() {deepEqual( Stem("bruser"), "brus");});
test("bryd -> bryd", function() {deepEqual( Stem("bryd"), "bryd");});
test("bryde -> bryd", function() {deepEqual( Stem("bryde"), "bryd");});
test("brydelse -> bryd", function() {deepEqual( Stem("brydelse"), "bryd");});
test("bryder -> bryd", function() {deepEqual( Stem("bryder"), "bryd");});
test("brydes -> bryd", function() {deepEqual( Stem("brydes"), "bryd");});
test("bryllup -> bryllup", function() {deepEqual( Stem("bryllup"), "bryllup");});
test("brylluppet -> bryllup", function() {deepEqual( Stem("brylluppet"), "bryllup");});
test("bryllups -> bryllup", function() {deepEqual( Stem("bryllups"), "bryllup");});
test("bryllupshuset -> bryllupshus", function() {deepEqual( Stem("bryllupshuset"), "bryllupshus");});
test("bryllupsklædning -> bryllupsklædning", function() {deepEqual( Stem("bryllupsklædning"), "bryllupsklædning");});
test("bryllupssange -> bryllupssang", function() {deepEqual( Stem("bryllupssange"), "bryllupssang");});
test("bryllupsugen -> bryllupsug", function() {deepEqual( Stem("bryllupsugen"), "bryllupsug");});
test("brynde -> brynd", function() {deepEqual( Stem("brynde"), "brynd");});
test("brynje -> brynj", function() {deepEqual( Stem("brynje"), "brynj");});
test("brynjeme -> brynjem", function() {deepEqual( Stem("brynjeme"), "brynjem");});
test("brynjen -> brynj", function() {deepEqual( Stem("brynjen"), "brynj");});
test("brynjer -> brynj", function() {deepEqual( Stem("brynjer"), "brynj");});
test("bryst -> bryst", function() {deepEqual( Stem("bryst"), "bryst");});
test("bryste -> bryst", function() {deepEqual( Stem("bryste"), "bryst");});
test("bryster -> bryst", function() {deepEqual( Stem("bryster"), "bryst");});
test("brysters -> bryst", function() {deepEqual( Stem("brysters"), "bryst");});
test("brystet -> bryst", function() {deepEqual( Stem("brystet"), "bryst");});
test("brystfold -> brystfold", function() {deepEqual( Stem("brystfold"), "brystfold");});
test("brystfolden -> brystfold", function() {deepEqual( Stem("brystfolden"), "brystfold");});
test("brystskjold -> brystskjold", function() {deepEqual( Stem("brystskjold"), "brystskjold");});
test("brystskjoldet -> brystskjold", function() {deepEqual( Stem("brystskjoldet"), "brystskjold");});
test("brystskjoldets -> brystskjold", function() {deepEqual( Stem("brystskjoldets"), "brystskjold");});
test("bryststykkerne -> bryststyk", function() {deepEqual( Stem("bryststykkerne"), "bryststyk");});
test("brædder -> bræd", function() {deepEqual( Stem("brædder"), "bræd");});
test("brædderne -> bræd", function() {deepEqual( Stem("brædderne"), "bræd");});
test("brægen -> bræg", function() {deepEqual( Stem("brægen"), "bræg");});
test("brækkede -> brækked", function() {deepEqual( Stem("brækkede"), "brækked");});
test("brænd -> brænd", function() {deepEqual( Stem("brænd"), "brænd");});
test("brænde -> brænd", function() {deepEqual( Stem("brænde"), "brænd");});
test("brændehuggere -> brændehug", function() {deepEqual( Stem("brændehuggere"), "brændehug");});
test("brændeknippet -> brændeknip", function() {deepEqual( Stem("brændeknippet"), "brændeknip");});
test("brændemærke -> brændemærk", function() {deepEqual( Stem("brændemærke"), "brændemærk");});
test("brændemærkede -> brændemærked", function() {deepEqual( Stem("brændemærkede"), "brændemærked");});
test("brændende -> brænd", function() {deepEqual( Stem("brændende"), "brænd");});
test("brænder -> brænd", function() {deepEqual( Stem("brænder"), "brænd");});
test("brændes -> brænd", function() {deepEqual( Stem("brændes"), "brænd");});
test("brændestabelen -> brændestabel", function() {deepEqual( Stem("brændestabelen"), "brændestabel");});
test("brændestykker -> brændestyk", function() {deepEqual( Stem("brændestykker"), "brændestyk");});
test("brændet -> brænd", function() {deepEqual( Stem("brændet"), "brænd");});
test("brændinger -> brænding", function() {deepEqual( Stem("brændinger"), "brænding");});
test("brændoffer -> brændof", function() {deepEqual( Stem("brændoffer"), "brændof");});
test("brændofferalter -> brændofferalt", function() {deepEqual( Stem("brændofferalter"), "brændofferalt");});
test("brændofferalteret -> brændofferalt", function() {deepEqual( Stem("brændofferalteret"), "brændofferalt");});
test("brændofferalterets -> brændofferalt", function() {deepEqual( Stem("brændofferalterets"), "brændofferalt");});
test("brændofferdyret -> brændofferdyr", function() {deepEqual( Stem("brændofferdyret"), "brændofferdyr");});
test("brændofferdyrets -> brændofferdyr", function() {deepEqual( Stem("brændofferdyrets"), "brændofferdyr");});
test("brændofferet -> brændof", function() {deepEqual( Stem("brændofferet"), "brændof");});
test("brændofferlam -> brændofferlam", function() {deepEqual( Stem("brændofferlam"), "brændofferlam");});
test("brændoffervæderen -> brændoffervæd", function() {deepEqual( Stem("brændoffervæderen"), "brændoffervæd");});
test("brændoffet -> brændof", function() {deepEqual( Stem("brændoffet"), "brændof");});
test("brændofre -> brændofr", function() {deepEqual( Stem("brændofre"), "brændofr");});
test("brændofrene -> brændofr", function() {deepEqual( Stem("brændofrene"), "brændofr");});
test("brændsel -> brændsel", function() {deepEqual( Stem("brændsel"), "brændsel");});
test("brændt -> brænd", function() {deepEqual( Stem("brændt"), "brænd");});
test("brændte -> brænd", function() {deepEqual( Stem("brændte"), "brænd");});
test("brændtes -> brænd", function() {deepEqual( Stem("brændtes"), "brænd");});
test("bræt -> bræt", function() {deepEqual( Stem("bræt"), "bræt");});
test("brød -> brød", function() {deepEqual( Stem("brød"), "brød");});
test("brøde -> brød", function() {deepEqual( Stem("brøde"), "brød");});
test("brødefri -> brødefri", function() {deepEqual( Stem("brødefri"), "brødefri");});
test("brøden -> brød", function() {deepEqual( Stem("brøden"), "brød");});
test("brødene -> brød", function() {deepEqual( Stem("brødene"), "brød");});
test("brødenes -> brød", function() {deepEqual( Stem("brødenes"), "brød");});
test("brødens -> brød", function() {deepEqual( Stem("brødens"), "brød");});
test("brødes -> brød", function() {deepEqual( Stem("brødes"), "brød");});
test("brødet -> brød", function() {deepEqual( Stem("brødet"), "brød");});
test("brødets -> brød", function() {deepEqual( Stem("brødets"), "brød");});
test("brødetynget -> brødetyng", function() {deepEqual( Stem("brødetynget"), "brødetyng");});
test("brødkager -> brødkag", function() {deepEqual( Stem("brødkager"), "brødkag");});
test("brødkorn -> brødkorn", function() {deepEqual( Stem("brødkorn"), "brødkorn");});
test("brødmangel -> brødmangel", function() {deepEqual( Stem("brødmangel"), "brødmangel");});
test("brødre -> brødr", function() {deepEqual( Stem("brødre"), "brødr");});
test("brødrene -> brødr", function() {deepEqual( Stem("brødrene"), "brødr");});
test("brødres -> brødr", function() {deepEqual( Stem("brødres"), "brødr");});
test("brøds -> brød", function() {deepEqual( Stem("brøds"), "brød");});
test("brødskive -> brødskiv", function() {deepEqual( Stem("brødskive"), "brødskiv");});
test("brødsmuler -> brødsmul", function() {deepEqual( Stem("brødsmuler"), "brødsmul");});
test("brødte -> brødt", function() {deepEqual( Stem("brødte"), "brødt");});
test("brøl -> brøl", function() {deepEqual( Stem("brøl"), "brøl");});
test("brøled -> brøled", function() {deepEqual( Stem("brøled"), "brøled");});
test("brølen -> brøl", function() {deepEqual( Stem("brølen"), "brøl");});
test("brølende -> brøl", function() {deepEqual( Stem("brølende"), "brøl");});
test("brøler -> brøl", function() {deepEqual( Stem("brøler"), "brøl");});
test("brønd -> brønd", function() {deepEqual( Stem("brønd"), "brønd");});
test("brønde -> brønd", function() {deepEqual( Stem("brønde"), "brønd");});
test("brønden -> brønd", function() {deepEqual( Stem("brønden"), "brønd");});
test("brøndene -> brønd", function() {deepEqual( Stem("brøndene"), "brønd");});
test("brøndens -> brønd", function() {deepEqual( Stem("brøndens"), "brønd");});
test("brøndhullet -> brøndhul", function() {deepEqual( Stem("brøndhullet"), "brøndhul");});
test("brøst -> brøst", function() {deepEqual( Stem("brøst"), "brøst");});
test("brøstfældige -> brøstfæld", function() {deepEqual( Stem("brøstfældige"), "brøstfæld");});
test("bud -> bud", function() {deepEqual( Stem("bud"), "bud");});
test("budbringer -> budbring", function() {deepEqual( Stem("budbringer"), "budbring");});
test("budbringeren -> budbring", function() {deepEqual( Stem("budbringeren"), "budbring");});
test("buden -> bud", function() {deepEqual( Stem("buden"), "bud");});
test("budene -> bud", function() {deepEqual( Stem("budene"), "bud");});
test("budenes -> bud", function() {deepEqual( Stem("budenes"), "bud");});
test("budet -> bud", function() {deepEqual( Stem("budet"), "bud");});
test("budløn -> budløn", function() {deepEqual( Stem("budløn"), "budløn");});
test("budne -> budn", function() {deepEqual( Stem("budne"), "budn");});
test("buds -> bud", function() {deepEqual( Stem("buds"), "bud");});
test("budskab -> budskab", function() {deepEqual( Stem("budskab"), "budskab");});
test("budskabs -> budskab", function() {deepEqual( Stem("budskabs"), "budskab");});
test("budt -> budt", function() {deepEqual( Stem("budt"), "budt");});
test("bue -> bue", function() {deepEqual( Stem("bue"), "bue");});
test("buede -> bued", function() {deepEqual( Stem("buede"), "bued");});
test("buen -> buen", function() {deepEqual( Stem("buen"), "buen");});
test("buens -> buen", function() {deepEqual( Stem("buens"), "buen");});
test("buer -> buer", function() {deepEqual( Stem("buer"), "buer");});
test("buerne -> buern", function() {deepEqual( Stem("buerne"), "buern");});
test("bueskytte -> bueskyt", function() {deepEqual( Stem("bueskytte"), "bueskyt");});
test("bueskytten -> bueskyt", function() {deepEqual( Stem("bueskytten"), "bueskyt");});
test("bueskytter -> bueskyt", function() {deepEqual( Stem("bueskytter"), "bueskyt");});
test("bueskytterne -> bueskyt", function() {deepEqual( Stem("bueskytterne"), "bueskyt");});
test("buestreng -> buestreng", function() {deepEqual( Stem("buestreng"), "buestreng");});
test("bug -> bug", function() {deepEqual( Stem("bug"), "bug");});
test("buge -> bug", function() {deepEqual( Stem("buge"), "bug");});
test("bugen -> bug", function() {deepEqual( Stem("bugen"), "bug");});
test("bugens -> bug", function() {deepEqual( Stem("bugens"), "bug");});
test("bugne -> bugn", function() {deepEqual( Stem("bugne"), "bugn");});
test("bugnende -> bugn", function() {deepEqual( Stem("bugnende"), "bugn");});
test("bugt -> bugt", function() {deepEqual( Stem("bugt"), "bugt");});
test("bugtede -> bugted", function() {deepEqual( Stem("bugtede"), "bugted");});
test("bugter -> bugt", function() {deepEqual( Stem("bugter"), "bugt");});
test("bugtet -> bugt", function() {deepEqual( Stem("bugtet"), "bugt");});
test("buk -> buk", function() {deepEqual( Stem("buk"), "buk");});
test("bukke -> buk", function() {deepEqual( Stem("bukke"), "buk");});
test("bukkeblod -> bukkeblod", function() {deepEqual( Stem("bukkeblod"), "bukkeblod");});
test("bukkede -> bukked", function() {deepEqual( Stem("bukkede"), "bukked");});
test("bukken -> buk", function() {deepEqual( Stem("bukken"), "buk");});
test("bukkene -> buk", function() {deepEqual( Stem("bukkene"), "buk");});
test("bukkens -> buk", function() {deepEqual( Stem("bukkens"), "buk");});
test("bukker -> buk", function() {deepEqual( Stem("bukker"), "buk");});
test("bukkes -> buk", function() {deepEqual( Stem("bukkes"), "buk");});
test("bukketrolde -> bukketrold", function() {deepEqual( Stem("bukketrolde"), "bukketrold");});
test("bukketroldene -> bukketrold", function() {deepEqual( Stem("bukketroldene"), "bukketrold");});
test("bukki -> bukki", function() {deepEqual( Stem("bukki"), "bukki");});
test("bukkija -> bukkija", function() {deepEqual( Stem("bukkija"), "bukkija");});
test("bul -> bul", function() {deepEqual( Stem("bul"), "bul");});
test("bulder -> buld", function() {deepEqual( Stem("bulder"), "buld");});
test("bulderet -> buld", function() {deepEqual( Stem("bulderet"), "buld");});
test("buldrede -> buldred", function() {deepEqual( Stem("buldrede"), "buldred");});
test("buldren -> buldr", function() {deepEqual( Stem("buldren"), "buldr");});
test("buldrer -> buldr", function() {deepEqual( Stem("buldrer"), "buldr");});
test("bun -> bun", function() {deepEqual( Stem("bun"), "bun");});
test("buna -> buna", function() {deepEqual( Stem("buna"), "buna");});
test("bund -> bund", function() {deepEqual( Stem("bund"), "bund");});
test("bunden -> bund", function() {deepEqual( Stem("bunden"), "bund");});
test("bundet -> bund", function() {deepEqual( Stem("bundet"), "bund");});
test("bundfalsk -> bundfalsk", function() {deepEqual( Stem("bundfalsk"), "bundfalsk");});
test("bundløs -> bundløs", function() {deepEqual( Stem("bundløs"), "bundløs");});
test("bundløst -> bundløs", function() {deepEqual( Stem("bundløst"), "bundløs");});
test("bundne -> bundn", function() {deepEqual( Stem("bundne"), "bundn");});
test("bunds -> bund", function() {deepEqual( Stem("bunds"), "bund");});
test("bunke -> bunk", function() {deepEqual( Stem("bunke"), "bunk");});
test("bunker -> bunk", function() {deepEqual( Stem("bunker"), "bunk");});
test("bunkerne -> bunk", function() {deepEqual( Stem("bunkerne"), "bunk");});
test("bunni -> bunni", function() {deepEqual( Stem("bunni"), "bunni");});
test("bur -> bur", function() {deepEqual( Stem("bur"), "bur");});
test("burde -> burd", function() {deepEqual( Stem("burde"), "burd");});
test("buser -> bus", function() {deepEqual( Stem("buser"), "bus");});
test("buske -> busk", function() {deepEqual( Stem("buske"), "busk");});
test("buskene -> busk", function() {deepEqual( Stem("buskene"), "busk");});
test("buz -> buz", function() {deepEqual( Stem("buz"), "buz");});
test("buzis -> buzis", function() {deepEqual( Stem("buzis"), "buzis");});
test("buziten -> buzit", function() {deepEqual( Stem("buziten"), "buzit");});
test("bvilket -> bvilk", function() {deepEqual( Stem("bvilket"), "bvilk");});
test("bvor -> bvor", function() {deepEqual( Stem("bvor"), "bvor");});
test("by -> by", function() {deepEqual( Stem("by"), "by");});
test("byd -> byd", function() {deepEqual( Stem("byd"), "byd");});
test("byde -> byd", function() {deepEqual( Stem("byde"), "byd");});
test("bydel -> bydel", function() {deepEqual( Stem("bydel"), "bydel");});
test("byder -> byd", function() {deepEqual( Stem("byder"), "byd");});
test("bydet -> byd", function() {deepEqual( Stem("bydet"), "byd");});
test("byen -> byen", function() {deepEqual( Stem("byen"), "byen");});
test("byens -> byen", function() {deepEqual( Stem("byens"), "byen");});
test("byer -> byer", function() {deepEqual( Stem("byer"), "byer");});
test("byerne -> byern", function() {deepEqual( Stem("byerne"), "byern");});
test("byernes -> byern", function() {deepEqual( Stem("byernes"), "byern");});
test("byers -> byer", function() {deepEqual( Stem("byers"), "byer");});
test("byg -> byg", function() {deepEqual( Stem("byg"), "byg");});
test("bygbrød -> bygbrød", function() {deepEqual( Stem("bygbrød"), "bygbrød");});
test("bygbrødet -> bygbrød", function() {deepEqual( Stem("bygbrødet"), "bygbrød");});
test("byger -> byg", function() {deepEqual( Stem("byger"), "byg");});
test("bygge -> byg", function() {deepEqual( Stem("bygge"), "byg");});
test("byggearbejdet -> byggearbejd", function() {deepEqual( Stem("byggearbejdet"), "byggearbejd");});
test("bygged -> bygged", function() {deepEqual( Stem("bygged"), "bygged");});
test("byggede -> bygged", function() {deepEqual( Stem("byggede"), "bygged");});
test("byggedes -> bygged", function() {deepEqual( Stem("byggedes"), "bygged");});
test("byggen -> byg", function() {deepEqual( Stem("byggen"), "byg");});
test("bygger -> byg", function() {deepEqual( Stem("bygger"), "byg");});
test("bygges -> byg", function() {deepEqual( Stem("bygges"), "byg");});
test("byggesummen -> byggesum", function() {deepEqual( Stem("byggesummen"), "byggesum");});
test("bygget -> byg", function() {deepEqual( Stem("bygget"), "byg");});
test("bygggede -> byggged", function() {deepEqual( Stem("bygggede"), "byggged");});
test("byghøsten -> byghøst", function() {deepEqual( Stem("byghøsten"), "byghøst");});
test("byghøstens -> byghøst", function() {deepEqual( Stem("byghøstens"), "byghøst");});
test("bygkager -> bygkag", function() {deepEqual( Stem("bygkager"), "bygkag");});
test("bygkorn -> bygkorn", function() {deepEqual( Stem("bygkorn"), "bygkorn");});
test("bygmark -> bygmark", function() {deepEqual( Stem("bygmark"), "bygmark");});
test("bygmel -> bygmel", function() {deepEqual( Stem("bygmel"), "bygmel");});
test("bygmester -> bygmest", function() {deepEqual( Stem("bygmester"), "bygmest");});
test("bygmestre -> bygmestr", function() {deepEqual( Stem("bygmestre"), "bygmestr");});
test("bygmestrene -> bygmestr", function() {deepEqual( Stem("bygmestrene"), "bygmestr");});
test("bygmestrenes -> bygmestr", function() {deepEqual( Stem("bygmestrenes"), "bygmestr");});
test("bygning -> bygning", function() {deepEqual( Stem("bygning"), "bygning");});
test("bygningen -> bygning", function() {deepEqual( Stem("bygningen"), "bygning");});
test("bygningens -> bygning", function() {deepEqual( Stem("bygningens"), "bygning");});
test("bygninger -> bygning", function() {deepEqual( Stem("bygninger"), "bygning");});
test("bygningernes -> bygning", function() {deepEqual( Stem("bygningernes"), "bygning");});
test("bygningsmænd -> bygningsmænd", function() {deepEqual( Stem("bygningsmænd"), "bygningsmænd");});
test("bygningsmændene -> bygningsmænd", function() {deepEqual( Stem("bygningsmændene"), "bygningsmænd");});
test("bylarmen -> bylarm", function() {deepEqual( Stem("bylarmen"), "bylarm");});
test("byld -> byld", function() {deepEqual( Stem("byld"), "byld");});
test("bylder -> byld", function() {deepEqual( Stem("bylder"), "byld");});
test("bylderne -> byld", function() {deepEqual( Stem("bylderne"), "byld");});
test("bylt -> bylt", function() {deepEqual( Stem("bylt"), "bylt");});
test("bymarker -> bymark", function() {deepEqual( Stem("bymarker"), "bymark");});
test("bymuren -> bymur", function() {deepEqual( Stem("bymuren"), "bymur");});
test("bymurene -> bymur", function() {deepEqual( Stem("bymurene"), "bymur");});
test("bymændenes -> bymænd", function() {deepEqual( Stem("bymændenes"), "bymænd");});
test("byporten -> byport", function() {deepEqual( Stem("byporten"), "byport");});
test("byportens -> byport", function() {deepEqual( Stem("byportens"), "byport");});
test("byr -> byr", function() {deepEqual( Stem("byr"), "byr");});
test("byrd -> byrd", function() {deepEqual( Stem("byrd"), "byrd");});
test("byrde -> byrd", function() {deepEqual( Stem("byrde"), "byrd");});
test("byrden -> byrd", function() {deepEqual( Stem("byrden"), "byrd");});
test("byrder -> byrd", function() {deepEqual( Stem("byrder"), "byrd");});
test("byrderne -> byrd", function() {deepEqual( Stem("byrderne"), "byrd");});
test("byret -> byr", function() {deepEqual( Stem("byret"), "byr");});
test("bys -> bys", function() {deepEqual( Stem("bys"), "bys");});
test("bysbørn -> bysbørn", function() {deepEqual( Stem("bysbørn"), "bysbørn");});
test("byskriveren -> byskriv", function() {deepEqual( Stem("byskriveren"), "byskriv");});
test("byssus -> byssus", function() {deepEqual( Stem("byssus"), "byssus");});
test("byssusklæde -> byssusklæd", function() {deepEqual( Stem("byssusklæde"), "byssusklæd");});
test("byst -> byst", function() {deepEqual( Stem("byst"), "byst");});
test("bysvendene -> bysvend", function() {deepEqual( Stem("bysvendene"), "bysvend");});
test("bytte -> byt", function() {deepEqual( Stem("bytte"), "byt");});
test("byttede -> bytted", function() {deepEqual( Stem("byttede"), "bytted");});
test("byttehandel -> byttehandel", function() {deepEqual( Stem("byttehandel"), "byttehandel");});
test("byttet -> byt", function() {deepEqual( Stem("byttet"), "byt");});
test("byveje -> byvej", function() {deepEqual( Stem("byveje"), "byvej");});
test("byøversten -> byøverst", function() {deepEqual( Stem("byøversten"), "byøverst");});
test("båd -> båd", function() {deepEqual( Stem("båd"), "båd");});
test("både -> båd", function() {deepEqual( Stem("både"), "båd");});
test("båden -> båd", function() {deepEqual( Stem("båden"), "båd");});
test("bådens -> båd", function() {deepEqual( Stem("bådens"), "båd");});
test("båder -> båd", function() {deepEqual( Stem("båder"), "båd");});
test("bål -> bål", function() {deepEqual( Stem("bål"), "bål");});
test("bålat -> bålat", function() {deepEqual( Stem("bålat"), "bålat");});
test("bålet -> bål", function() {deepEqual( Stem("bålet"), "bål");});
test("bånd -> bånd", function() {deepEqual( Stem("bånd"), "bånd");});
test("båndene -> bånd", function() {deepEqual( Stem("båndene"), "bånd");});
test("bårdnakket -> bårdnak", function() {deepEqual( Stem("bårdnakket"), "bårdnak");});
test("båren -> bår", function() {deepEqual( Stem("båren"), "bår");});
test("bårer -> bår", function() {deepEqual( Stem("bårer"), "bår");});
test("båret -> bår", function() {deepEqual( Stem("båret"), "bår");});
test("bæger -> bæg", function() {deepEqual( Stem("bæger"), "bæg");});
test("bægere -> bæg", function() {deepEqual( Stem("bægere"), "bæg");});
test("bægeret -> bæg", function() {deepEqual( Stem("bægeret"), "bæg");});
test("bægre -> bægr", function() {deepEqual( Stem("bægre"), "bægr");});
test("bægrene -> bægr", function() {deepEqual( Stem("bægrene"), "bægr");});
test("bæk -> bæk", function() {deepEqual( Stem("bæk"), "bæk");});
test("bække -> bæk", function() {deepEqual( Stem("bække"), "bæk");});
test("bækken -> bæk", function() {deepEqual( Stem("bækken"), "bæk");});
test("bækkene -> bæk", function() {deepEqual( Stem("bækkene"), "bæk");});
test("bækkener -> bækken", function() {deepEqual( Stem("bækkener"), "bækken");});
test("bækkenerne -> bækken", function() {deepEqual( Stem("bækkenerne"), "bækken");});
test("bækkenes -> bæk", function() {deepEqual( Stem("bækkenes"), "bæk");});
test("bækkenet -> bækken", function() {deepEqual( Stem("bækkenet"), "bækken");});
test("bækkens -> bæk", function() {deepEqual( Stem("bækkens"), "bæk");});
test("bælgen -> bælg", function() {deepEqual( Stem("bælgen"), "bælg");});
test("bælgmørke -> bælgmørk", function() {deepEqual( Stem("bælgmørke"), "bælgmørk");});
test("bælgmørkt -> bælgmørk", function() {deepEqual( Stem("bælgmørkt"), "bælgmørk");});
test("bælte -> bælt", function() {deepEqual( Stem("bælte"), "bælt");});
test("bælter -> bælt", function() {deepEqual( Stem("bælter"), "bælt");});
test("bæltet -> bælt", function() {deepEqual( Stem("bæltet"), "bælt");});
test("bænk -> bænk", function() {deepEqual( Stem("bænk"), "bænk");});
test("bænke -> bænk", function() {deepEqual( Stem("bænke"), "bænk");});
test("bænken -> bænk", function() {deepEqual( Stem("bænken"), "bænk");});
test("bænkens -> bænk", function() {deepEqual( Stem("bænkens"), "bænk");});
test("bænket -> bænk", function() {deepEqual( Stem("bænket"), "bænk");});
test("bær -> bær", function() {deepEqual( Stem("bær"), "bær");});
test("bære -> bær", function() {deepEqual( Stem("bære"), "bær");});
test("bæream -> bæream", function() {deepEqual( Stem("bæream"), "bæream");});
test("bærearme -> bærearm", function() {deepEqual( Stem("bærearme"), "bærearm");});
test("bærearmene -> bærearm", function() {deepEqual( Stem("bærearmene"), "bærearm");});
test("bærebøren -> bærebør", function() {deepEqual( Stem("bærebøren"), "bærebør");});
test("bærekarm -> bærekarm", function() {deepEqual( Stem("bærekarm"), "bærekarm");});
test("bærende -> bær", function() {deepEqual( Stem("bærende"), "bær");});
test("bærer -> bær", function() {deepEqual( Stem("bærer"), "bær");});
test("bæres -> bær", function() {deepEqual( Stem("bæres"), "bær");});
test("bærestang -> bærestang", function() {deepEqual( Stem("bærestang"), "bærestang");});
test("bærestol -> bærestol", function() {deepEqual( Stem("bærestol"), "bærestol");});
test("bærestænger -> bærestæng", function() {deepEqual( Stem("bærestænger"), "bærestæng");});
test("bærestængerne -> bærestæng", function() {deepEqual( Stem("bærestængerne"), "bærestæng");});
test("bærme -> bærm", function() {deepEqual( Stem("bærme"), "bærm");});
test("bærmen -> bærm", function() {deepEqual( Stem("bærmen"), "bærm");});
test("bæv -> bæv", function() {deepEqual( Stem("bæv"), "bæv");});
test("bæve -> bæv", function() {deepEqual( Stem("bæve"), "bæv");});
test("bæved -> bæved", function() {deepEqual( Stem("bæved"), "bæved");});
test("bævede -> bæved", function() {deepEqual( Stem("bævede"), "bæved");});
test("bæven -> bæv", function() {deepEqual( Stem("bæven"), "bæv");});
test("bævende -> bæv", function() {deepEqual( Stem("bævende"), "bæv");});
test("bæver -> bæv", function() {deepEqual( Stem("bæver"), "bæv");});
test("bød -> bød", function() {deepEqual( Stem("bød"), "bød");});
test("bøddelen -> bøddel", function() {deepEqual( Stem("bøddelen"), "bøddel");});
test("bøde -> bød", function() {deepEqual( Stem("bøde"), "bød");});
test("bøded -> bøded", function() {deepEqual( Stem("bøded"), "bøded");});
test("bødens -> bød", function() {deepEqual( Stem("bødens"), "bød");});
test("bøder -> bød", function() {deepEqual( Stem("bøder"), "bød");});
test("bødes -> bød", function() {deepEqual( Stem("bødes"), "bød");});
test("bødet -> bød", function() {deepEqual( Stem("bødet"), "bød");});
test("bødlen -> bødl", function() {deepEqual( Stem("bødlen"), "bødl");});
test("bødler -> bødl", function() {deepEqual( Stem("bødler"), "bødl");});
test("bødlerne -> bødl", function() {deepEqual( Stem("bødlerne"), "bødl");});
test("bøger -> bøg", function() {deepEqual( Stem("bøger"), "bøg");});
test("bøgerne -> bøg", function() {deepEqual( Stem("bøgerne"), "bøg");});
test("bøj -> bøj", function() {deepEqual( Stem("bøj"), "bøj");});
test("bøje -> bøj", function() {deepEqual( Stem("bøje"), "bøj");});
test("bøjed -> bøjed", function() {deepEqual( Stem("bøjed"), "bøjed");});
test("bøjede -> bøjed", function() {deepEqual( Stem("bøjede"), "bøjed");});
test("bøjedes -> bøjed", function() {deepEqual( Stem("bøjedes"), "bøjed");});
test("bøjer -> bøj", function() {deepEqual( Stem("bøjer"), "bøj");});
test("bøjerne -> bøj", function() {deepEqual( Stem("bøjerne"), "bøj");});
test("bøjes -> bøj", function() {deepEqual( Stem("bøjes"), "bøj");});
test("bøjet -> bøj", function() {deepEqual( Stem("bøjet"), "bøj");});
test("bølge -> bølg", function() {deepEqual( Stem("bølge"), "bølg");});
test("bølgede -> bølged", function() {deepEqual( Stem("bølgede"), "bølged");});
test("bølgende -> bølg", function() {deepEqual( Stem("bølgende"), "bølg");});
test("bølger -> bølg", function() {deepEqual( Stem("bølger"), "bølg");});
test("bølgerne -> bølg", function() {deepEqual( Stem("bølgerne"), "bølg");});
test("bølgernes -> bølg", function() {deepEqual( Stem("bølgernes"), "bølg");});
test("bølgers -> bølg", function() {deepEqual( Stem("bølgers"), "bølg");});
test("bøm -> bøm", function() {deepEqual( Stem("bøm"), "bøm");});
test("bøn -> bøn", function() {deepEqual( Stem("bøn"), "bøn");});
test("bønbørte -> bønbørt", function() {deepEqual( Stem("bønbørte"), "bønbørt");});
test("bønder -> bønd", function() {deepEqual( Stem("bønder"), "bønd");});
test("bønderne -> bønd", function() {deepEqual( Stem("bønderne"), "bønd");});
test("bønfalde -> bønfald", function() {deepEqual( Stem("bønfalde"), "bønfald");});
test("bønfaldt -> bønfald", function() {deepEqual( Stem("bønfaldt"), "bønfald");});
test("bønhør -> bønhør", function() {deepEqual( Stem("bønhør"), "bønhør");});
test("bønhøre -> bønhør", function() {deepEqual( Stem("bønhøre"), "bønhør");});
test("bønhørelse -> bønhør", function() {deepEqual( Stem("bønhørelse"), "bønhør");});
test("bønhører -> bønhør", function() {deepEqual( Stem("bønhører"), "bønhør");});
test("bønhørt -> bønhørt", function() {deepEqual( Stem("bønhørt"), "bønhørt");});
test("bønhørte -> bønhørt", function() {deepEqual( Stem("bønhørte"), "bønhørt");});
test("bønnen -> bøn", function() {deepEqual( Stem("bønnen"), "bøn");});
test("bønnens -> bøn", function() {deepEqual( Stem("bønnens"), "bøn");});
test("bønner -> bøn", function() {deepEqual( Stem("bønner"), "bøn");});
test("bønnerne -> bøn", function() {deepEqual( Stem("bønnerne"), "bøn");});
test("bør -> bør", function() {deepEqual( Stem("bør"), "bør");});
test("børe -> bør", function() {deepEqual( Stem("børe"), "bør");});
test("bører -> bør", function() {deepEqual( Stem("bører"), "bør");});
test("børn -> børn", function() {deepEqual( Stem("børn"), "børn");});
test("børnebrn -> børnebrn", function() {deepEqual( Stem("børnebrn"), "børnebrn");});
test("børnebørn -> børnebørn", function() {deepEqual( Stem("børnebørn"), "børnebørn");});
test("børneflok -> børneflok", function() {deepEqual( Stem("børneflok"), "børneflok");});
test("børnelærdom -> børnelærdom", function() {deepEqual( Stem("børnelærdom"), "børnelærdom");});
test("børnene -> børn", function() {deepEqual( Stem("børnene"), "børn");});
test("børnenes -> børn", function() {deepEqual( Stem("børnenes"), "børn");});
test("børnlill -> børnlil", function() {deepEqual( Stem("børnlill"), "børnlil");});
test("børnlille -> børnlil", function() {deepEqual( Stem("børnlille"), "børnlil");});
test("børns -> børn", function() {deepEqual( Stem("børns"), "børn");});
test("børte -> børt", function() {deepEqual( Stem("børte"), "børt");});
test("c -> c", function() {deepEqual( Stem("c"), "c");});
test("ceder -> ced", function() {deepEqual( Stem("ceder"), "ced");});
test("cederbjælker -> cederbjælk", function() {deepEqual( Stem("cederbjælker"), "cederbjælk");});
test("cederbrædder -> cederbræd", function() {deepEqual( Stem("cederbrædder"), "cederbræd");});
test("cederen -> ced", function() {deepEqual( Stem("cederen"), "ced");});
test("cederens -> ced", function() {deepEqual( Stem("cederens"), "ced");});
test("cederplanke -> cederplank", function() {deepEqual( Stem("cederplanke"), "cederplank");});
test("cederstammer -> cederstam", function() {deepEqual( Stem("cederstammer"), "cederstam");});
test("cedersøjler -> cedersøjl", function() {deepEqual( Stem("cedersøjler"), "cedersøjl");});
test("cedertræ -> cedertræ", function() {deepEqual( Stem("cedertræ"), "cedertræ");});
test("cedertræer -> cedertræ", function() {deepEqual( Stem("cedertræer"), "cedertræ");});
test("cedertræet -> cedertræ", function() {deepEqual( Stem("cedertræet"), "cedertræ");});
test("cedertræshus -> cedertræshus", function() {deepEqual( Stem("cedertræshus"), "cedertræshus");});
test("cedre -> cedr", function() {deepEqual( Stem("cedre"), "cedr");});
test("cedren -> cedr", function() {deepEqual( Stem("cedren"), "cedr");});
test("cedrene -> cedr", function() {deepEqual( Stem("cedrene"), "cedr");});
test("cedres -> cedr", function() {deepEqual( Stem("cedres"), "cedr");});
test("centnertung -> centnertung", function() {deepEqual( Stem("centnertung"), "centnertung");});
test("ciesterner -> ciestern", function() {deepEqual( Stem("ciesterner"), "ciestern");});
test("cirkelen -> cirkel", function() {deepEqual( Stem("cirkelen"), "cirkel");});
test("cisterne -> cist", function() {deepEqual( Stem("cisterne"), "cist");});
test("cisternen -> cistern", function() {deepEqual( Stem("cisternen"), "cistern");});
test("cisterner -> cistern", function() {deepEqual( Stem("cisterner"), "cistern");});
test("cistusharpiks -> cistusharpik", function() {deepEqual( Stem("cistusharpiks"), "cistusharpik");});
test("citer -> cit", function() {deepEqual( Stem("citer"), "cit");});
test("citernen -> citern", function() {deepEqual( Stem("citernen"), "citern");});
test("citerspil -> citerspil", function() {deepEqual( Stem("citerspil"), "citerspil");});
test("citre -> citr", function() {deepEqual( Stem("citre"), "citr");});
test("citren -> citr", function() {deepEqual( Stem("citren"), "citr");});
test("citrens -> citr", function() {deepEqual( Stem("citrens"), "citr");});
test("citres -> citr", function() {deepEqual( Stem("citres"), "citr");});
test("cymbler -> cymbl", function() {deepEqual( Stem("cymbler"), "cymbl");});
test("cymblerne -> cymbl", function() {deepEqual( Stem("cymblerne"), "cymbl");});
test("cymblernes -> cymbl", function() {deepEqual( Stem("cymblernes"), "cymbl");});
test("cypres -> cypr", function() {deepEqual( Stem("cypres"), "cypr");});
test("cypresbrædder -> cypresbræd", function() {deepEqual( Stem("cypresbrædder"), "cypresbræd");});
test("cypresser -> cypres", function() {deepEqual( Stem("cypresser"), "cypres");});
test("cypresserne -> cypres", function() {deepEqual( Stem("cypresserne"), "cypres");});
test("cyprestræ -> cyprestræ", function() {deepEqual( Stem("cyprestræ"), "cyprestræ");});
test("cyprestræer -> cyprestræ", function() {deepEqual( Stem("cyprestræer"), "cyprestræ");});
test("d -> d", function() {deepEqual( Stem("d"), "d");});
test("da -> da", function() {deepEqual( Stem("da"), "da");});
test("dabbesjet -> dabbesj", function() {deepEqual( Stem("dabbesjet"), "dabbesj");});
test("daberat -> daberat", function() {deepEqual( Stem("daberat"), "daberat");});
test("dad -> dad", function() {deepEqual( Stem("dad"), "dad");});
test("dadel -> dadel", function() {deepEqual( Stem("dadel"), "dadel");});
test("dadlende -> dadl", function() {deepEqual( Stem("dadlende"), "dadl");});
test("dag -> dag", function() {deepEqual( Stem("dag"), "dag");});
test("dagdrivernes -> dagdriv", function() {deepEqual( Stem("dagdrivernes"), "dagdriv");});
test("dage -> dag", function() {deepEqual( Stem("dage"), "dag");});
test("dagedes -> daged", function() {deepEqual( Stem("dagedes"), "daged");});
test("dagen -> dag", function() {deepEqual( Stem("dagen"), "dag");});
test("dagene -> dag", function() {deepEqual( Stem("dagene"), "dag");});
test("dagenes -> dag", function() {deepEqual( Stem("dagenes"), "dag");});
test("dagens -> dag", function() {deepEqual( Stem("dagens"), "dag");});
test("dages -> dag", function() {deepEqual( Stem("dages"), "dag");});
test("dagetal -> dagetal", function() {deepEqual( Stem("dagetal"), "dagetal");});
test("daggry -> daggry", function() {deepEqual( Stem("daggry"), "daggry");});
test("dagi -> dagi", function() {deepEqual( Stem("dagi"), "dagi");});
test("daglejer -> daglej", function() {deepEqual( Stem("daglejer"), "daglej");});
test("daglejere -> daglej", function() {deepEqual( Stem("daglejere"), "daglej");});
test("daglejeren -> daglej", function() {deepEqual( Stem("daglejeren"), "daglej");});
test("daglejerens -> daglej", function() {deepEqual( Stem("daglejerens"), "daglej");});
test("daglejers -> daglej", function() {deepEqual( Stem("daglejers"), "daglej");});
test("daglig -> dag", function() {deepEqual( Stem("daglig"), "dag");});
test("dagligdags -> dagligdag", function() {deepEqual( Stem("dagligdags"), "dagligdag");});
test("daglige -> dag", function() {deepEqual( Stem("daglige"), "dag");});
test("dagligt -> dag", function() {deepEqual( Stem("dagligt"), "dag");});
test("dagløn -> dagløn", function() {deepEqual( Stem("dagløn"), "dagløn");});
test("dagning -> dagning", function() {deepEqual( Stem("dagning"), "dagning");});
test("dagningen -> dagning", function() {deepEqual( Stem("dagningen"), "dagning");});
test("dagon -> dagon", function() {deepEqual( Stem("dagon"), "dagon");});
test("dagons -> dagon", function() {deepEqual( Stem("dagons"), "dagon");});
test("dags -> dag", function() {deepEqual( Stem("dags"), "dag");});
test("dagsrejse -> dagsrejs", function() {deepEqual( Stem("dagsrejse"), "dagsrejs");});
test("dagsrejser -> dagsrejs", function() {deepEqual( Stem("dagsrejser"), "dagsrejs");});
test("dagværk -> dagværk", function() {deepEqual( Stem("dagværk"), "dagværk");});
test("dahadad -> dahadad", function() {deepEqual( Stem("dahadad"), "dahadad");});
test("dal -> dal", function() {deepEqual( Stem("dal"), "dal");});
test("dalbjerget -> dalbjerg", function() {deepEqual( Stem("dalbjerget"), "dalbjerg");});
test("dalboerne -> dalbo", function() {deepEqual( Stem("dalboerne"), "dalbo");});
test("dalbunden -> dalbund", function() {deepEqual( Stem("dalbunden"), "dalbund");});
test("dale -> dal", function() {deepEqual( Stem("dale"), "dal");});
test("dalede -> daled", function() {deepEqual( Stem("dalede"), "daled");});
test("dalen -> dal", function() {deepEqual( Stem("dalen"), "dal");});
test("dalene -> dal", function() {deepEqual( Stem("dalene"), "dal");});
test("dalenes -> dal", function() {deepEqual( Stem("dalenes"), "dal");});
test("dalens -> dal", function() {deepEqual( Stem("dalens"), "dal");});
test("dalfon -> dalfon", function() {deepEqual( Stem("dalfon"), "dalfon");});
test("dalgud -> dalgud", function() {deepEqual( Stem("dalgud"), "dalgud");});
test("dalila -> dalila", function() {deepEqual( Stem("dalila"), "dalila");});
test("dalkløfter -> dalkløft", function() {deepEqual( Stem("dalkløfter"), "dalkløft");});
test("dalmanuthas -> dalmanutha", function() {deepEqual( Stem("dalmanuthas"), "dalmanutha");});
test("dalmatien -> dalmati", function() {deepEqual( Stem("dalmatien"), "dalmati");});
test("dalporten -> dalport", function() {deepEqual( Stem("dalporten"), "dalport");});
test("dalsletten -> dalslet", function() {deepEqual( Stem("dalsletten"), "dalslet");});
test("dam -> dam", function() {deepEqual( Stem("dam"), "dam");});
test("damaris -> damaris", function() {deepEqual( Stem("damaris"), "damaris");});
test("damaskenernes -> damasken", function() {deepEqual( Stem("damaskenernes"), "damasken");});
test("damaskenske -> damaskensk", function() {deepEqual( Stem("damaskenske"), "damaskensk");});
test("damaskus -> damaskus", function() {deepEqual( Stem("damaskus"), "damaskus");});
test("damaskuss -> damaskus", function() {deepEqual( Stem("damaskuss"), "damaskus");});
test("damme -> dam", function() {deepEqual( Stem("damme"), "dam");});
test("dammen -> dam", function() {deepEqual( Stem("dammen"), "dam");});
test("dammene -> dam", function() {deepEqual( Stem("dammene"), "dam");});
test("dammim -> dammim", function() {deepEqual( Stem("dammim"), "dammim");});
test("damp -> damp", function() {deepEqual( Stem("damp"), "damp");});
test("dams -> dam", function() {deepEqual( Stem("dams"), "dam");});
test("dan -> dan", function() {deepEqual( Stem("dan"), "dan");});
test("daniel -> daniel", function() {deepEqual( Stem("daniel"), "daniel");});
test("daniels -> daniel", function() {deepEqual( Stem("daniels"), "daniel");});
test("daniterne -> danit", function() {deepEqual( Stem("daniterne"), "danit");});
test("daniternes -> danit", function() {deepEqual( Stem("daniternes"), "danit");});
test("danitiske -> danitisk", function() {deepEqual( Stem("danitiske"), "danitisk");});
test("danna -> danna", function() {deepEqual( Stem("danna"), "danna");});
test("danne -> dan", function() {deepEqual( Stem("danne"), "dan");});
test("danned -> danned", function() {deepEqual( Stem("danned"), "danned");});
test("dannede -> danned", function() {deepEqual( Stem("dannede"), "danned");});
test("dannedes -> danned", function() {deepEqual( Stem("dannedes"), "danned");});
test("danner -> dan", function() {deepEqual( Stem("danner"), "dan");});
test("dannet -> dan", function() {deepEqual( Stem("dannet"), "dan");});
test("dans -> dan", function() {deepEqual( Stem("dans"), "dan");});
test("danse -> dans", function() {deepEqual( Stem("danse"), "dans");});
test("dansede -> dansed", function() {deepEqual( Stem("dansede"), "dansed");});
test("dansen -> dans", function() {deepEqual( Stem("dansen"), "dans");});
test("dansende -> dans", function() {deepEqual( Stem("dansende"), "dans");});
test("darda -> darda", function() {deepEqual( Stem("darda"), "darda");});
test("darejker -> darejk", function() {deepEqual( Stem("darejker"), "darejk");});
test("dariun -> dariun", function() {deepEqual( Stem("dariun"), "dariun");});
test("darius -> darius", function() {deepEqual( Stem("darius"), "darius");});
test("dariuss -> darius", function() {deepEqual( Stem("dariuss"), "darius");});
test("darkons -> darkon", function() {deepEqual( Stem("darkons"), "darkon");});
test("darmaskenske -> darmaskensk", function() {deepEqual( Stem("darmaskenske"), "darmaskensk");});
test("darmaskus -> darmaskus", function() {deepEqual( Stem("darmaskus"), "darmaskus");});
test("datan -> datan", function() {deepEqual( Stem("datan"), "datan");});
test("datans -> datan", function() {deepEqual( Stem("datans"), "datan");});
test("datter -> dat", function() {deepEqual( Stem("datter"), "dat");});
test("datterdatter -> datterdat", function() {deepEqual( Stem("datterdatter"), "datterdat");});
test("datterdatters -> datterdat", function() {deepEqual( Stem("datterdatters"), "datterdat");});
test("datteren -> dat", function() {deepEqual( Stem("datteren"), "dat");});
test("datters -> dat", function() {deepEqual( Stem("datters"), "dat");});
test("david -> david", function() {deepEqual( Stem("david"), "david");});
test("davids -> david", function() {deepEqual( Stem("davids"), "david");});
test("davidsbyen -> davidsby", function() {deepEqual( Stem("davidsbyen"), "davidsby");});
test("daværende -> davær", function() {deepEqual( Stem("daværende"), "davær");});
test("de -> de", function() {deepEqual( Stem("de"), "de");});
test("debir -> debir", function() {deepEqual( Stem("debir"), "debir");});
test("debirs -> debir", function() {deepEqual( Stem("debirs"), "debir");});
test("debora -> debora", function() {deepEqual( Stem("debora"), "debora");});
test("deborapalmen -> deborapalm", function() {deepEqual( Stem("deborapalmen"), "deborapalm");});
test("dedan -> dedan", function() {deepEqual( Stem("dedan"), "dedan");});
test("dedaniterne -> dedanit", function() {deepEqual( Stem("dedaniterne"), "dedanit");});
test("dedans -> dedan", function() {deepEqual( Stem("dedans"), "dedan");});
test("def -> def", function() {deepEqual( Stem("def"), "def");});
test("deforan -> deforan", function() {deepEqual( Stem("deforan"), "deforan");});
test("defte -> deft", function() {deepEqual( Stem("defte"), "deft");});
test("dehaviterne -> dehavit", function() {deepEqual( Stem("dehaviterne"), "dehavit");});
test("dei -> dei", function() {deepEqual( Stem("dei"), "dei");});
test("dejen -> dej", function() {deepEqual( Stem("dejen"), "dej");});
test("dejg -> dejg", function() {deepEqual( Stem("dejg"), "dejg");});
test("dejgen -> dejg", function() {deepEqual( Stem("dejgen"), "dejg");});
test("dejgtrug -> dejgtrug", function() {deepEqual( Stem("dejgtrug"), "dejgtrug");});
test("dejgtruge -> dejgtrug", function() {deepEqual( Stem("dejgtruge"), "dejgtrug");});
test("dejlig -> dej", function() {deepEqual( Stem("dejlig"), "dej");});
test("dejlige -> dej", function() {deepEqual( Stem("dejlige"), "dej");});
test("dejlighed -> dej", function() {deepEqual( Stem("dejlighed"), "dej");});
test("dejligheds -> dej", function() {deepEqual( Stem("dejligheds"), "dej");});
test("dejligste -> dej", function() {deepEqual( Stem("dejligste"), "dej");});
test("dejligt -> dej", function() {deepEqual( Stem("dejligt"), "dej");});
test("dejtrug -> dejtrug", function() {deepEqual( Stem("dejtrug"), "dejtrug");});
test("dejtrugene -> dejtrug", function() {deepEqual( Stem("dejtrugene"), "dejtrug");});
test("dekapolis -> dekapolis", function() {deepEqual( Stem("dekapolis"), "dekapolis");});
test("dekers -> dek", function() {deepEqual( Stem("dekers"), "dek");});
test("del -> del", function() {deepEqual( Stem("del"), "del");});
test("delagtig -> delag", function() {deepEqual( Stem("delagtig"), "delag");});
test("delagtige -> delag", function() {deepEqual( Stem("delagtige"), "delag");});
test("delagtighed -> delag", function() {deepEqual( Stem("delagtighed"), "delag");});
test("delaja -> delaja", function() {deepEqual( Stem("delaja"), "delaja");});
test("delajas -> delaja", function() {deepEqual( Stem("delajas"), "delaja");});
test("deland -> deland", function() {deepEqual( Stem("deland"), "deland");});
test("dele -> del", function() {deepEqual( Stem("dele"), "del");});
test("delene -> del", function() {deepEqual( Stem("delene"), "del");});
test("deler -> del", function() {deepEqual( Stem("deler"), "del");});
test("deles -> del", function() {deepEqual( Stem("deles"), "del");});
test("deling -> deling", function() {deepEqual( Stem("deling"), "deling");});
test("delranke -> delrank", function() {deepEqual( Stem("delranke"), "delrank");});
test("dels -> del", function() {deepEqual( Stem("dels"), "del");});
test("delsten -> delst", function() {deepEqual( Stem("delsten"), "delst");});
test("delstenene -> delsten", function() {deepEqual( Stem("delstenene"), "delsten");});
test("delt -> delt", function() {deepEqual( Stem("delt"), "delt");});
test("deltagelse -> deltag", function() {deepEqual( Stem("deltagelse"), "deltag");});
test("deltager -> deltag", function() {deepEqual( Stem("deltager"), "deltag");});
test("delte -> delt", function() {deepEqual( Stem("delte"), "delt");});
test("deltog -> deltog", function() {deepEqual( Stem("deltog"), "deltog");});
test("delvis -> delvis", function() {deepEqual( Stem("delvis"), "delvis");});
test("delæggelse -> delæg", function() {deepEqual( Stem("delæggelse"), "delæg");});
test("delæggelsen -> delæg", function() {deepEqual( Stem("delæggelsen"), "delæg");});
test("delæggelsens -> delæg", function() {deepEqual( Stem("delæggelsens"), "delæg");});
test("delæggelses -> delæg", function() {deepEqual( Stem("delæggelses"), "delæg");});
test("delægger -> delæg", function() {deepEqual( Stem("delægger"), "delæg");});
test("delæggeren -> delæg", function() {deepEqual( Stem("delæggeren"), "delæg");});
test("dem -> dem", function() {deepEqual( Stem("dem"), "dem");});
test("demark -> demark", function() {deepEqual( Stem("demark"), "demark");});
test("demarken -> demark", function() {deepEqual( Stem("demarken"), "demark");});
test("demarkens -> demark", function() {deepEqual( Stem("demarkens"), "demark");});
test("demarker -> demark", function() {deepEqual( Stem("demarker"), "demark");});
test("demas -> dema", function() {deepEqual( Stem("demas"), "dema");});
test("demen -> dem", function() {deepEqual( Stem("demen"), "dem");});
test("demetrius -> demetrius", function() {deepEqual( Stem("demetrius"), "demetrius");});
test("den -> den", function() {deepEqual( Stem("den"), "den");});
test("denar -> denar", function() {deepEqual( Stem("denar"), "denar");});
test("denarer -> denar", function() {deepEqual( Stem("denarer"), "denar");});
test("dengang -> dengang", function() {deepEqual( Stem("dengang"), "dengang");});
test("denne -> den", function() {deepEqual( Stem("denne"), "den");});
test("dennes -> den", function() {deepEqual( Stem("dennes"), "den");});
test("dens -> den", function() {deepEqual( Stem("dens"), "den");});
test("denved -> denved", function() {deepEqual( Stem("denved"), "denved");});
test("deo -> deo", function() {deepEqual( Stem("deo"), "deo");});
test("der -> der", function() {deepEqual( Stem("der"), "der");});
test("derad -> derad", function() {deepEqual( Stem("derad"), "derad");});
test("deraf -> deraf", function() {deepEqual( Stem("deraf"), "deraf");});
test("derbe -> derb", function() {deepEqual( Stem("derbe"), "derb");});
test("dere -> der", function() {deepEqual( Stem("dere"), "der");});
test("derefter -> dereft", function() {deepEqual( Stem("derefter"), "dereft");});
test("deren -> der", function() {deepEqual( Stem("deren"), "der");});
test("derer -> der", function() {deepEqual( Stem("derer"), "der");});
test("deres -> der", function() {deepEqual( Stem("deres"), "der");});
test("deresherreshus -> deresherreshus", function() {deepEqual( Stem("deresherreshus"), "deresherreshus");});
test("derfor -> derfor", function() {deepEqual( Stem("derfor"), "derfor");});
test("derforog -> derforog", function() {deepEqual( Stem("derforog"), "derforog");});
test("derfra -> derfra", function() {deepEqual( Stem("derfra"), "derfra");});
test("derhar -> derhar", function() {deepEqual( Stem("derhar"), "derhar");});
test("derhen -> derh", function() {deepEqual( Stem("derhen"), "derh");});
test("derhenne -> derhen", function() {deepEqual( Stem("derhenne"), "derhen");});
test("derhos -> derho", function() {deepEqual( Stem("derhos"), "derho");});
test("deri -> deri", function() {deepEqual( Stem("deri"), "deri");});
test("derigennem -> derigennem", function() {deepEqual( Stem("derigennem"), "derigennem");});
test("derimellem -> derimellem", function() {deepEqual( Stem("derimellem"), "derimellem");});
test("derimod -> derimod", function() {deepEqual( Stem("derimod"), "derimod");});
test("derind -> derind", function() {deepEqual( Stem("derind"), "derind");});
test("derinde -> derind", function() {deepEqual( Stem("derinde"), "derind");});
test("dermed -> dermed", function() {deepEqual( Stem("dermed"), "dermed");});
test("derne -> dern", function() {deepEqual( Stem("derne"), "dern");});
test("derned -> derned", function() {deepEqual( Stem("derned"), "derned");});
test("dernede -> derned", function() {deepEqual( Stem("dernede"), "derned");});
test("dernæst -> dernæst", function() {deepEqual( Stem("dernæst"), "dernæst");});
test("derom -> derom", function() {deepEqual( Stem("derom"), "derom");});
test("deromkring -> deromkring", function() {deepEqual( Stem("deromkring"), "deromkring");});
test("derop -> derop", function() {deepEqual( Stem("derop"), "derop");});
test("deroppe -> derop", function() {deepEqual( Stem("deroppe"), "derop");});
test("derover -> derov", function() {deepEqual( Stem("derover"), "derov");});
test("derovre -> derovr", function() {deepEqual( Stem("derovre"), "derovr");});
test("derpå -> derpå", function() {deepEqual( Stem("derpå"), "derpå");});
test("dersom -> dersom", function() {deepEqual( Stem("dersom"), "dersom");});
test("dertil -> dertil", function() {deepEqual( Stem("dertil"), "dertil");});
test("derud -> derud", function() {deepEqual( Stem("derud"), "derud");});
test("derude -> derud", function() {deepEqual( Stem("derude"), "derud");});
test("derudgydes -> derudgyd", function() {deepEqual( Stem("derudgydes"), "derudgyd");});
test("derunder -> derund", function() {deepEqual( Stem("derunder"), "derund");});
test("dervar -> dervar", function() {deepEqual( Stem("dervar"), "dervar");});
test("derved -> derved", function() {deepEqual( Stem("derved"), "derved");});
test("dervære -> dervær", function() {deepEqual( Stem("dervære"), "dervær");});
test("derværende -> dervær", function() {deepEqual( Stem("derværende"), "dervær");});
test("des -> des", function() {deepEqual( Stem("des"), "des");});
test("deskal -> deskal", function() {deepEqual( Stem("deskal"), "deskal");});
test("deslige -> des", function() {deepEqual( Stem("deslige"), "des");});
test("desto -> desto", function() {deepEqual( Stem("desto"), "desto");});
test("desuden -> desud", function() {deepEqual( Stem("desuden"), "desud");});
test("desårsag -> desårsag", function() {deepEqual( Stem("desårsag"), "desårsag");});
test("det -> det", function() {deepEqual( Stem("det"), "det");});
test("detergudsrøstog -> detergudsrøstog", function() {deepEqual( Stem("detergudsrøstog"), "detergudsrøstog");});
test("detiternes -> detit", function() {deepEqual( Stem("detiternes"), "detit");});
test("detop -> detop", function() {deepEqual( Stem("detop"), "detop");});
test("dets -> det", function() {deepEqual( Stem("dets"), "det");});
test("dette -> det", function() {deepEqual( Stem("dette"), "det");});
test("detvar -> detvar", function() {deepEqual( Stem("detvar"), "detvar");});
test("deuels -> deuel", function() {deepEqual( Stem("deuels"), "deuel");});
test("di -> di", function() {deepEqual( Stem("di"), "di");});
test("diadem -> diadem", function() {deepEqual( Stem("diadem"), "diadem");});
test("diademet -> diadem", function() {deepEqual( Stem("diademet"), "diadem");});
test("diamant -> diamant", function() {deepEqual( Stem("diamant"), "diamant");});
test("diamantspids -> diamantspid", function() {deepEqual( Stem("diamantspids"), "diamantspid");});
test("diblajims -> diblajim", function() {deepEqual( Stem("diblajims"), "diblajim");});
test("diblatajim -> diblatajim", function() {deepEqual( Stem("diblatajim"), "diblatajim");});
test("dibon -> dibon", function() {deepEqual( Stem("dibon"), "dibon");});
test("dibons -> dibon", function() {deepEqual( Stem("dibons"), "dibon");});
test("dibri -> dibri", function() {deepEqual( Stem("dibri"), "dibri");});
test("did -> did", function() {deepEqual( Stem("did"), "did");});
test("die -> die", function() {deepEqual( Stem("die"), "die");});
test("died -> died", function() {deepEqual( Stem("died"), "died");});
test("diede -> died", function() {deepEqual( Stem("diede"), "died");});
test("diegivende -> diegiv", function() {deepEqual( Stem("diegivende"), "diegiv");});
test("diende -> diend", function() {deepEqual( Stem("diende"), "diend");});
test("diendes -> diend", function() {deepEqual( Stem("diendes"), "diend");});
test("dier -> dier", function() {deepEqual( Stem("dier"), "dier");});
test("dig -> dig", function() {deepEqual( Stem("dig"), "dig");});
test("digel -> digel", function() {deepEqual( Stem("digel"), "digel");});
test("diger -> dig", function() {deepEqual( Stem("diger"), "dig");});
test("dighævn -> dighævn", function() {deepEqual( Stem("dighævn"), "dighævn");});
test("digtere -> digt", function() {deepEqual( Stem("digtere"), "digt");});
test("dikla -> dikla", function() {deepEqual( Stem("dikla"), "dikla");});
test("dilan -> dilan", function() {deepEqual( Stem("dilan"), "dilan");});
test("dild -> dild", function() {deepEqual( Stem("dild"), "dild");});
test("dilden -> dild", function() {deepEqual( Stem("dilden"), "dild");});
test("dimon -> dimon", function() {deepEqual( Stem("dimon"), "dimon");});
test("dimona -> dimona", function() {deepEqual( Stem("dimona"), "dimona");});
test("dimons -> dimon", function() {deepEqual( Stem("dimons"), "dimon");});
test("din -> din", function() {deepEqual( Stem("din"), "din");});
test("dina -> dina", function() {deepEqual( Stem("dina"), "dina");});
test("dinas -> dina", function() {deepEqual( Stem("dinas"), "dina");});
test("dinbaba -> dinbaba", function() {deepEqual( Stem("dinbaba"), "dinbaba");});
test("dine -> din", function() {deepEqual( Stem("dine"), "din");});
test("dinefolk -> dinefolk", function() {deepEqual( Stem("dinefolk"), "dinefolk");});
test("ding -> ding", function() {deepEqual( Stem("ding"), "ding");});
test("dinhaba -> dinhaba", function() {deepEqual( Stem("dinhaba"), "dinhaba");});
test("diniterne -> dinit", function() {deepEqual( Stem("diniterne"), "dinit");});
test("dinjener -> dinjen", function() {deepEqual( Stem("dinjener"), "dinjen");});
test("dionysius -> dionysius", function() {deepEqual( Stem("dionysius"), "dionysius");});
test("diotrefes -> diotref", function() {deepEqual( Stem("diotrefes"), "diotref");});
test("discipel -> discipel", function() {deepEqual( Stem("discipel"), "discipel");});
test("discipelinde -> discipelind", function() {deepEqual( Stem("discipelinde"), "discipelind");});
test("disciple -> discipl", function() {deepEqual( Stem("disciple"), "discipl");});
test("disciplen -> discipl", function() {deepEqual( Stem("disciplen"), "discipl");});
test("disciplene -> discipl", function() {deepEqual( Stem("disciplene"), "discipl");});
test("disciplenes -> discipl", function() {deepEqual( Stem("disciplenes"), "discipl");});
test("disciples -> discipl", function() {deepEqual( Stem("disciples"), "discipl");});
test("disjan -> disjan", function() {deepEqual( Stem("disjan"), "disjan");});
test("disjans -> disjan", function() {deepEqual( Stem("disjans"), "disjan");});
test("disjon -> disjon", function() {deepEqual( Stem("disjon"), "disjon");});
test("disjonantiloper -> disjonantilop", function() {deepEqual( Stem("disjonantiloper"), "disjonantilop");});
test("disjons -> disjon", function() {deepEqual( Stem("disjons"), "disjon");});
test("disse -> dis", function() {deepEqual( Stem("disse"), "dis");});
test("disses -> dis", function() {deepEqual( Stem("disses"), "dis");});
test("dit -> dit", function() {deepEqual( Stem("dit"), "dit");});
test("divanen -> divan", function() {deepEqual( Stem("divanen"), "divan");});
test("djærve -> djærv", function() {deepEqual( Stem("djærve"), "djærv");});
test("djævel -> djævel", function() {deepEqual( Stem("djævel"), "djævel");});
test("djævelen -> djævel", function() {deepEqual( Stem("djævelen"), "djævel");});
test("djævelens -> djævel", function() {deepEqual( Stem("djævelens"), "djævel");});
test("djævelsk -> djævelsk", function() {deepEqual( Stem("djævelsk"), "djævelsk");});
test("dobbelt -> dobbelt", function() {deepEqual( Stem("dobbelt"), "dobbelt");});
test("dobbelte -> dobbelt", function() {deepEqual( Stem("dobbelte"), "dobbelt");});
test("dobrat -> dobrat", function() {deepEqual( Stem("dobrat"), "dobrat");});
test("dod -> dod", function() {deepEqual( Stem("dod"), "dod");});
test("dodajs -> dodaj", function() {deepEqual( Stem("dodajs"), "dodaj");});
test("dodavahus -> dodavahus", function() {deepEqual( Stem("dodavahus"), "dodavahus");});
test("dodis -> dodis", function() {deepEqual( Stem("dodis"), "dodis");});
test("dodos -> dodo", function() {deepEqual( Stem("dodos"), "dodo");});
test("doeg -> doeg", function() {deepEqual( Stem("doeg"), "doeg");});
test("dofka -> dofka", function() {deepEqual( Stem("dofka"), "dofka");});
test("dog -> dog", function() {deepEqual( Stem("dog"), "dog");});
test("dogikke -> dogik", function() {deepEqual( Stem("dogikke"), "dogik");});
test("dokumenterne -> dokument", function() {deepEqual( Stem("dokumenterne"), "dokument");});
test("dom -> dom", function() {deepEqual( Stem("dom"), "dom");});
test("domfælder -> domfæld", function() {deepEqual( Stem("domfælder"), "domfæld");});
test("domfældt -> domfæld", function() {deepEqual( Stem("domfældt"), "domfæld");});
test("domfældte -> domfæld", function() {deepEqual( Stem("domfældte"), "domfæld");});
test("domhallen -> domhal", function() {deepEqual( Stem("domhallen"), "domhal");});
test("domme -> dom", function() {deepEqual( Stem("domme"), "dom");});
test("dommen -> dom", function() {deepEqual( Stem("dommen"), "dom");});
test("dommens -> dom", function() {deepEqual( Stem("dommens"), "dom");});
test("dommer -> dom", function() {deepEqual( Stem("dommer"), "dom");});
test("dommere -> dom", function() {deepEqual( Stem("dommere"), "dom");});
test("dommeren -> dom", function() {deepEqual( Stem("dommeren"), "dom");});
test("dommeres -> dom", function() {deepEqual( Stem("dommeres"), "dom");});
test("dommermagt -> dommermag", function() {deepEqual( Stem("dommermagt"), "dommermag");});
test("dommerne -> dom", function() {deepEqual( Stem("dommerne"), "dom");});
test("dommernes -> dom", function() {deepEqual( Stem("dommernes"), "dom");});
test("dommersæder -> dommersæd", function() {deepEqual( Stem("dommersæder"), "dommersæd");});
test("dommersædet -> dommersæd", function() {deepEqual( Stem("dommersædet"), "dommersæd");});
test("dommes -> dom", function() {deepEqual( Stem("dommes"), "dom");});
test("doms -> dom", function() {deepEqual( Stem("doms"), "dom");});
test("domsord -> domsord", function() {deepEqual( Stem("domsord"), "domsord");});
test("domstol -> domstol", function() {deepEqual( Stem("domstol"), "domstol");});
test("domstolen -> domstol", function() {deepEqual( Stem("domstolen"), "domstol");});
test("domstolene -> domstol", function() {deepEqual( Stem("domstolene"), "domstol");});
test("dons -> don", function() {deepEqual( Stem("dons"), "don");});
test("dor -> dor", function() {deepEqual( Stem("dor"), "dor");});
test("dors -> dor", function() {deepEqual( Stem("dors"), "dor");});
test("dorskt -> dorsk", function() {deepEqual( Stem("dorskt"), "dorsk");});
test("dotan -> dotan", function() {deepEqual( Stem("dotan"), "dotan");});
test("doven -> dov", function() {deepEqual( Stem("doven"), "dov");});
test("dovenskab -> dovenskab", function() {deepEqual( Stem("dovenskab"), "dovenskab");});
test("dovent -> dovent", function() {deepEqual( Stem("dovent"), "dovent");});
test("dovne -> dovn", function() {deepEqual( Stem("dovne"), "dovn");});
test("drab -> drab", function() {deepEqual( Stem("drab"), "drab");});
test("drabet -> drab", function() {deepEqual( Stem("drabet"), "drab");});
test("drabsmand -> drabsmand", function() {deepEqual( Stem("drabsmand"), "drabsmand");});
test("drabsmanden -> drabsmand", function() {deepEqual( Stem("drabsmanden"), "drabsmand");});
test("drag -> drag", function() {deepEqual( Stem("drag"), "drag");});
test("drage -> drag", function() {deepEqual( Stem("drage"), "drag");});
test("dragegift -> dragegift", function() {deepEqual( Stem("dragegift"), "dragegift");});
test("dragekilden -> dragekild", function() {deepEqual( Stem("dragekilden"), "dragekild");});
test("dragen -> drag", function() {deepEqual( Stem("dragen"), "drag");});
test("dragens -> drag", function() {deepEqual( Stem("dragens"), "drag");});
test("drager -> drag", function() {deepEqual( Stem("drager"), "drag");});
test("dragernes -> drag", function() {deepEqual( Stem("dragernes"), "drag");});
test("drages -> drag", function() {deepEqual( Stem("drages"), "drag");});
test("draget -> drag", function() {deepEqual( Stem("draget"), "drag");});
test("dragne -> dragn", function() {deepEqual( Stem("dragne"), "dragn");});
test("dragt -> dragt", function() {deepEqual( Stem("dragt"), "dragt");});
test("drak -> drak", function() {deepEqual( Stem("drak"), "drak");});
test("drakme -> drakm", function() {deepEqual( Stem("drakme"), "drakm");});
test("drakmer -> drakm", function() {deepEqual( Stem("drakmer"), "drakm");});
test("dranker -> drank", function() {deepEqual( Stem("dranker"), "drank");});
test("drankere -> drank", function() {deepEqual( Stem("drankere"), "drank");});
test("drankeres -> drank", function() {deepEqual( Stem("drankeres"), "drank");});
test("drankerne -> drank", function() {deepEqual( Stem("drankerne"), "drank");});
test("dreje -> drej", function() {deepEqual( Stem("dreje"), "drej");});
test("drejede -> drejed", function() {deepEqual( Stem("drejede"), "drejed");});
test("drejer -> drej", function() {deepEqual( Stem("drejer"), "drej");});
test("drejes -> drej", function() {deepEqual( Stem("drejes"), "drej");});
test("drejeskiven -> drejeskiv", function() {deepEqual( Stem("drejeskiven"), "drejeskiv");});
test("dreng -> dreng", function() {deepEqual( Stem("dreng"), "dreng");});
test("drenge -> dreng", function() {deepEqual( Stem("drenge"), "dreng");});
test("drengebarn -> drengebarn", function() {deepEqual( Stem("drengebarn"), "drengebarn");});
test("drengebarnet -> drengebarn", function() {deepEqual( Stem("drengebarnet"), "drengebarn");});
test("drengebørn -> drengebørn", function() {deepEqual( Stem("drengebørn"), "drengebørn");});
test("drengebørnene -> drengebørn", function() {deepEqual( Stem("drengebørnene"), "drengebørn");});
test("drengekådhed -> drengekåd", function() {deepEqual( Stem("drengekådhed"), "drengekåd");});
test("drengen -> dreng", function() {deepEqual( Stem("drengen"), "dreng");});
test("drengene -> dreng", function() {deepEqual( Stem("drengene"), "dreng");});
test("drengens -> dreng", function() {deepEqual( Stem("drengens"), "dreng");});
test("drev -> drev", function() {deepEqual( Stem("drev"), "drev");});
test("dreve -> drev", function() {deepEqual( Stem("dreve"), "drev");});
test("dreven -> drev", function() {deepEqual( Stem("dreven"), "drev");});
test("dreves -> drev", function() {deepEqual( Stem("dreves"), "drev");});
test("drevet -> drev", function() {deepEqual( Stem("drevet"), "drev");});
test("drevne -> drevn", function() {deepEqual( Stem("drevne"), "drevn");});
test("drift -> drift", function() {deepEqual( Stem("drift"), "drift");});
test("drik -> drik", function() {deepEqual( Stem("drik"), "drik");});
test("drikke -> drik", function() {deepEqual( Stem("drikke"), "drik");});
test("drikkekar -> drikkekar", function() {deepEqual( Stem("drikkekar"), "drikkekar");});
test("drikkelag -> drikkelag", function() {deepEqual( Stem("drikkelag"), "drikkelag");});
test("drikkelagene -> drikkelag", function() {deepEqual( Stem("drikkelagene"), "drikkelag");});
test("drikkelaget -> drikkelag", function() {deepEqual( Stem("drikkelaget"), "drikkelag");});
test("drikkeligt -> drik", function() {deepEqual( Stem("drikkeligt"), "drik");});
test("drikken -> drik", function() {deepEqual( Stem("drikken"), "drik");});
test("drikkene -> drik", function() {deepEqual( Stem("drikkene"), "drik");});
test("drikker -> drik", function() {deepEqual( Stem("drikker"), "drik");});
test("drikkevand -> drikkevand", function() {deepEqual( Stem("drikkevand"), "drikkevand");});
test("drikkevarer -> drikkevar", function() {deepEqual( Stem("drikkevarer"), "drikkevar");});
test("drikofer -> drikof", function() {deepEqual( Stem("drikofer"), "drikof");});
test("drikoffer -> drikof", function() {deepEqual( Stem("drikoffer"), "drikof");});
test("drikofferet -> drikof", function() {deepEqual( Stem("drikofferet"), "drikof");});
test("drikofre -> drikofr", function() {deepEqual( Stem("drikofre"), "drikofr");});
test("drikofrene -> drikofr", function() {deepEqual( Stem("drikofrene"), "drikofr");});
test("drikofres -> drikofr", function() {deepEqual( Stem("drikofres"), "drikofr");});
test("drillet -> dril", function() {deepEqual( Stem("drillet"), "dril");});
test("driste -> drist", function() {deepEqual( Stem("driste"), "drist");});
test("dristede -> dristed", function() {deepEqual( Stem("dristede"), "dristed");});
test("drister -> drist", function() {deepEqual( Stem("drister"), "drist");});
test("dristet -> drist", function() {deepEqual( Stem("dristet"), "drist");});
test("dristigere -> drist", function() {deepEqual( Stem("dristigere"), "drist");});
test("dristighed -> drist", function() {deepEqual( Stem("dristighed"), "drist");});
test("dristigt -> drist", function() {deepEqual( Stem("dristigt"), "drist");});
test("driv -> driv", function() {deepEqual( Stem("driv"), "driv");});
test("drive -> driv", function() {deepEqual( Stem("drive"), "driv");});
test("driver -> driv", function() {deepEqual( Stem("driver"), "driv");});
test("driverens -> driv", function() {deepEqual( Stem("driverens"), "driv");});
test("drivers -> driv", function() {deepEqual( Stem("drivers"), "driv");});
test("drives -> driv", function() {deepEqual( Stem("drives"), "driv");});
test("drog -> drog", function() {deepEqual( Stem("drog"), "drog");});
test("droge -> drog", function() {deepEqual( Stem("droge"), "drog");});
test("droges -> drog", function() {deepEqual( Stem("droges"), "drog");});
test("dronning -> dronning", function() {deepEqual( Stem("dronning"), "dronning");});
test("dronningen -> dronning", function() {deepEqual( Stem("dronningen"), "dronning");});
test("dronningens -> dronning", function() {deepEqual( Stem("dronningens"), "dronning");});
test("dronninger -> dronning", function() {deepEqual( Stem("dronninger"), "dronning");});
test("dronningernes -> dronning", function() {deepEqual( Stem("dronningernes"), "dronning");});
test("drot -> drot", function() {deepEqual( Stem("drot"), "drot");});
test("drue -> drue", function() {deepEqual( Stem("drue"), "drue");});
test("drueblod -> drueblod", function() {deepEqual( Stem("drueblod"), "drueblod");});
test("drueklase -> drueklas", function() {deepEqual( Stem("drueklase"), "drueklas");});
test("druen -> druen", function() {deepEqual( Stem("druen"), "druen");});
test("drueperser -> druepers", function() {deepEqual( Stem("drueperser"), "druepers");});
test("druer -> druer", function() {deepEqual( Stem("druer"), "druer");});
test("druerne -> druern", function() {deepEqual( Stem("druerne"), "druern");});
test("druesaften -> druesaft", function() {deepEqual( Stem("druesaften"), "druesaft");});
test("drukken -> druk", function() {deepEqual( Stem("drukken"), "druk");});
test("drukkenbolt -> drukkenbolt", function() {deepEqual( Stem("drukkenbolt"), "drukkenbolt");});
test("drukkenskab -> drukkenskab", function() {deepEqual( Stem("drukkenskab"), "drukkenskab");});
test("drukkent -> drukkent", function() {deepEqual( Stem("drukkent"), "drukkent");});
test("drukket -> druk", function() {deepEqual( Stem("drukket"), "druk");});
test("drukne -> drukn", function() {deepEqual( Stem("drukne"), "drukn");});
test("drukned -> drukned", function() {deepEqual( Stem("drukned"), "drukned");});
test("druknede -> drukned", function() {deepEqual( Stem("druknede"), "drukned");});
test("druknende -> drukn", function() {deepEqual( Stem("druknende"), "drukn");});
test("druknes -> drukn", function() {deepEqual( Stem("druknes"), "drukn");});
test("drusilla -> drusilla", function() {deepEqual( Stem("drusilla"), "drusilla");});
test("dryppe -> dryp", function() {deepEqual( Stem("dryppe"), "dryp");});
test("drypped -> drypped", function() {deepEqual( Stem("drypped"), "drypped");});
test("dryppede -> drypped", function() {deepEqual( Stem("dryppede"), "drypped");});
test("drypper -> dryp", function() {deepEqual( Stem("drypper"), "dryp");});
test("dråbe -> dråb", function() {deepEqual( Stem("dråbe"), "dråb");});
test("dråber -> dråb", function() {deepEqual( Stem("dråber"), "dråb");});
test("dræb -> dræb", function() {deepEqual( Stem("dræb"), "dræb");});
test("dræbe -> dræb", function() {deepEqual( Stem("dræbe"), "dræb");});
test("dræbende -> dræb", function() {deepEqual( Stem("dræbende"), "dræb");});
test("dræber -> dræb", function() {deepEqual( Stem("dræber"), "dræb");});
test("dræbes -> dræb", function() {deepEqual( Stem("dræbes"), "dræb");});
test("dræbt -> dræbt", function() {deepEqual( Stem("dræbt"), "dræbt");});
test("dræbte -> dræbt", function() {deepEqual( Stem("dræbte"), "dræbt");});
test("dræbteham -> dræbteham", function() {deepEqual( Stem("dræbteham"), "dræbteham");});
test("dræbtes -> dræbt", function() {deepEqual( Stem("dræbtes"), "dræbt");});
test("drægtigheds -> drægt", function() {deepEqual( Stem("drægtigheds"), "drægt");});
test("dræt -> dræt", function() {deepEqual( Stem("dræt"), "dræt");});
test("drøm -> drøm", function() {deepEqual( Stem("drøm"), "drøm");});
test("drømme -> drøm", function() {deepEqual( Stem("drømme"), "drøm");});
test("drømmemester -> drømmemest", function() {deepEqual( Stem("drømmemester"), "drømmemest");});
test("drømmen -> drøm", function() {deepEqual( Stem("drømmen"), "drøm");});
test("drømmende -> drøm", function() {deepEqual( Stem("drømmende"), "drøm");});
test("drømmer -> drøm", function() {deepEqual( Stem("drømmer"), "drøm");});
test("drømmere -> drøm", function() {deepEqual( Stem("drømmere"), "drøm");});
test("drømmesyn -> drømmesyn", function() {deepEqual( Stem("drømmesyn"), "drømmesyn");});
test("drømmetyder -> drømmetyd", function() {deepEqual( Stem("drømmetyder"), "drømmetyd");});
test("drømmetydere -> drømmetyd", function() {deepEqual( Stem("drømmetydere"), "drømmetyd");});
test("drømmetyderne -> drømmetyd", function() {deepEqual( Stem("drømmetyderne"), "drømmetyd");});
test("drømt -> drømt", function() {deepEqual( Stem("drømt"), "drømt");});
test("drømte -> drømt", function() {deepEqual( Stem("drømte"), "drømt");});
test("drøn -> drøn", function() {deepEqual( Stem("drøn"), "drøn");});
test("drønede -> drøned", function() {deepEqual( Stem("drønede"), "drøned");});
test("drønende -> drøn", function() {deepEqual( Stem("drønende"), "drøn");});
test("drøner -> drøn", function() {deepEqual( Stem("drøner"), "drøn");});
test("drønet -> drøn", function() {deepEqual( Stem("drønet"), "drøn");});
test("drøv -> drøv", function() {deepEqual( Stem("drøv"), "drøv");});
test("dsel -> dsel", function() {deepEqual( Stem("dsel"), "dsel");});
test("dselet -> dsel", function() {deepEqual( Stem("dselet"), "dsel");});
test("dselgribben -> dselgrib", function() {deepEqual( Stem("dselgribben"), "dselgrib");});
test("dsler -> dsler", function() {deepEqual( Stem("dsler"), "dsler");});
test("dslerne -> dslern", function() {deepEqual( Stem("dslerne"), "dslern");});
test("du -> du", function() {deepEqual( Stem("du"), "du");});
test("due -> due", function() {deepEqual( Stem("due"), "due");});
test("duede -> dued", function() {deepEqual( Stem("duede"), "dued");});
test("duegødning -> duegødning", function() {deepEqual( Stem("duegødning"), "duegødning");});
test("duekræmmernes -> duekræm", function() {deepEqual( Stem("duekræmmernes"), "duekræm");});
test("duelig -> duel", function() {deepEqual( Stem("duelig"), "duel");});
test("duelige -> duel", function() {deepEqual( Stem("duelige"), "duel");});
test("duen -> duen", function() {deepEqual( Stem("duen"), "duen");});
test("duens -> duen", function() {deepEqual( Stem("duens"), "duen");});
test("duer -> duer", function() {deepEqual( Stem("duer"), "duer");});
test("dueslag -> dueslag", function() {deepEqual( Stem("dueslag"), "dueslag");});
test("dueunge -> dueung", function() {deepEqual( Stem("dueunge"), "dueung");});
test("dueunger -> dueung", function() {deepEqual( Stem("dueunger"), "dueung");});
test("dueungerne -> dueung", function() {deepEqual( Stem("dueungerne"), "dueung");});
test("duft -> duft", function() {deepEqual( Stem("duft"), "duft");});
test("dufte -> duft", function() {deepEqual( Stem("dufte"), "duft");});
test("duften -> duft", function() {deepEqual( Stem("duften"), "duft");});
test("duftende -> duft", function() {deepEqual( Stem("duftende"), "duft");});
test("dufter -> duft", function() {deepEqual( Stem("dufter"), "duft");});
test("dug -> dug", function() {deepEqual( Stem("dug"), "dug");});
test("dugen -> dug", function() {deepEqual( Stem("dugen"), "dug");});
test("duggen -> dug", function() {deepEqual( Stem("duggen"), "dug");});
test("duggens -> dug", function() {deepEqual( Stem("duggens"), "dug");});
test("dugsky -> dugsky", function() {deepEqual( Stem("dugsky"), "dugsky");});
test("dukkede -> dukked", function() {deepEqual( Stem("dukkede"), "dukked");});
test("dukker -> duk", function() {deepEqual( Stem("dukker"), "duk");});
test("dulgt -> dulg", function() {deepEqual( Stem("dulgt"), "dulg");});
test("dulgte -> dulg", function() {deepEqual( Stem("dulgte"), "dulg");});
test("dum -> dum", function() {deepEqual( Stem("dum"), "dum");});
test("duma -> duma", function() {deepEqual( Stem("duma"), "duma");});
test("dumme -> dum", function() {deepEqual( Stem("dumme"), "dum");});
test("dumt -> dumt", function() {deepEqual( Stem("dumt"), "dumt");});
test("dun -> dun", function() {deepEqual( Stem("dun"), "dun");});
test("dunk -> dunk", function() {deepEqual( Stem("dunk"), "dunk");});
test("dunke -> dunk", function() {deepEqual( Stem("dunke"), "dunk");});
test("dunkelhed -> dunkel", function() {deepEqual( Stem("dunkelhed"), "dunkel");});
test("dunken -> dunk", function() {deepEqual( Stem("dunken"), "dunk");});
test("dunkene -> dunk", function() {deepEqual( Stem("dunkene"), "dunk");});
test("dunkle -> dunkl", function() {deepEqual( Stem("dunkle"), "dunkl");});
test("dur -> dur", function() {deepEqual( Stem("dur"), "dur");});
test("dura -> dura", function() {deepEqual( Stem("dura"), "dura");});
test("dut -> dut", function() {deepEqual( Stem("dut"), "dut");});
test("dvale -> dval", function() {deepEqual( Stem("dvale"), "dval");});
test("dvalens -> dval", function() {deepEqual( Stem("dvalens"), "dval");});
test("dvæle -> dvæl", function() {deepEqual( Stem("dvæle"), "dvæl");});
test("dvælede -> dvæled", function() {deepEqual( Stem("dvælede"), "dvæled");});
test("dvæler -> dvæl", function() {deepEqual( Stem("dvæler"), "dvæl");});
test("dyb -> dyb", function() {deepEqual( Stem("dyb"), "dyb");});
test("dybde -> dybd", function() {deepEqual( Stem("dybde"), "dybd");});
test("dybden -> dybd", function() {deepEqual( Stem("dybden"), "dybd");});
test("dybder -> dybd", function() {deepEqual( Stem("dybder"), "dybd");});
test("dybe -> dyb", function() {deepEqual( Stem("dybe"), "dyb");});
test("dybere -> dyb", function() {deepEqual( Stem("dybere"), "dyb");});
test("dybeste -> dybest", function() {deepEqual( Stem("dybeste"), "dybest");});
test("dybet -> dyb", function() {deepEqual( Stem("dybet"), "dyb");});
test("dybets -> dyb", function() {deepEqual( Stem("dybets"), "dyb");});
test("dybt -> dybt", function() {deepEqual( Stem("dybt"), "dybt");});
test("dyd -> dyd", function() {deepEqual( Stem("dyd"), "dyd");});
test("dyden -> dyd", function() {deepEqual( Stem("dyden"), "dyd");});
test("dyder -> dyd", function() {deepEqual( Stem("dyder"), "dyd");});
test("dygfige -> dygf", function() {deepEqual( Stem("dygfige"), "dygf");});
test("dygtig -> dygt", function() {deepEqual( Stem("dygtig"), "dygt");});
test("dygtige -> dygt", function() {deepEqual( Stem("dygtige"), "dygt");});
test("dygtigere -> dygt", function() {deepEqual( Stem("dygtigere"), "dygt");});
test("dygtiges -> dygt", function() {deepEqual( Stem("dygtiges"), "dygt");});
test("dygtiggjort -> dygtiggjort", function() {deepEqual( Stem("dygtiggjort"), "dygtiggjort");});
test("dygtighed -> dygt", function() {deepEqual( Stem("dygtighed"), "dygt");});
test("dygtigste -> dygt", function() {deepEqual( Stem("dygtigste"), "dygt");});
test("dygtigt -> dygt", function() {deepEqual( Stem("dygtigt"), "dygt");});
test("dykkede -> dykked", function() {deepEqual( Stem("dykkede"), "dykked");});
test("dynd -> dynd", function() {deepEqual( Stem("dynd"), "dynd");});
test("dyndet -> dynd", function() {deepEqual( Stem("dyndet"), "dynd");});
test("dyng -> dyng", function() {deepEqual( Stem("dyng"), "dyng");});
test("dynge -> dyng", function() {deepEqual( Stem("dynge"), "dyng");});
test("dyngede -> dynged", function() {deepEqual( Stem("dyngede"), "dynged");});
test("dyngedes -> dynged", function() {deepEqual( Stem("dyngedes"), "dynged");});
test("dyngen -> dyng", function() {deepEqual( Stem("dyngen"), "dyng");});
test("dynger -> dyng", function() {deepEqual( Stem("dynger"), "dyng");});
test("dyp -> dyp", function() {deepEqual( Stem("dyp"), "dyp");});
test("dyppe -> dyp", function() {deepEqual( Stem("dyppe"), "dyp");});
test("dypped -> dypped", function() {deepEqual( Stem("dypped"), "dypped");});
test("dyppede -> dypped", function() {deepEqual( Stem("dyppede"), "dypped");});
test("dypper -> dyp", function() {deepEqual( Stem("dypper"), "dyp");});
test("dyppet -> dyp", function() {deepEqual( Stem("dyppet"), "dyp");});
test("dyr -> dyr", function() {deepEqual( Stem("dyr"), "dyr");});
test("dyre -> dyr", function() {deepEqual( Stem("dyre"), "dyr");});
test("dyrebar -> dyrebar", function() {deepEqual( Stem("dyrebar"), "dyrebar");});
test("dyrebare -> dyrebar", function() {deepEqual( Stem("dyrebare"), "dyrebar");});
test("dyrebarere -> dyrebar", function() {deepEqual( Stem("dyrebarere"), "dyrebar");});
test("dyrebarl -> dyrebarl", function() {deepEqual( Stem("dyrebarl"), "dyrebarl");});
test("dyrebart -> dyrebart", function() {deepEqual( Stem("dyrebart"), "dyrebart");});
test("dyrehjerte -> dyrehjert", function() {deepEqual( Stem("dyrehjerte"), "dyrehjert");});
test("dyreklov -> dyreklov", function() {deepEqual( Stem("dyreklov"), "dyreklov");});
test("dyrene -> dyr", function() {deepEqual( Stem("dyrene"), "dyr");});
test("dyrenes -> dyr", function() {deepEqual( Stem("dyrenes"), "dyr");});
test("dyret -> dyr", function() {deepEqual( Stem("dyret"), "dyr");});
test("dyrets -> dyr", function() {deepEqual( Stem("dyrets"), "dyr");});
test("dyrk -> dyrk", function() {deepEqual( Stem("dyrk"), "dyrk");});
test("dyrke -> dyrk", function() {deepEqual( Stem("dyrke"), "dyrk");});
test("dyrkede -> dyrked", function() {deepEqual( Stem("dyrkede"), "dyrked");});
test("dyrkedes -> dyrked", function() {deepEqual( Stem("dyrkedes"), "dyrked");});
test("dyrkelse -> dyrk", function() {deepEqual( Stem("dyrkelse"), "dyrk");});
test("dyrker -> dyrk", function() {deepEqual( Stem("dyrker"), "dyrk");});
test("dyrkerne -> dyrk", function() {deepEqual( Stem("dyrkerne"), "dyrk");});
test("dyrkes -> dyrk", function() {deepEqual( Stem("dyrkes"), "dyrk");});
test("dyrket -> dyrk", function() {deepEqual( Stem("dyrket"), "dyrk");});
test("dyrkning -> dyrkning", function() {deepEqual( Stem("dyrkning"), "dyrkning");});
test("dyrs -> dyr", function() {deepEqual( Stem("dyrs"), "dyr");});
test("dyrt -> dyrt", function() {deepEqual( Stem("dyrt"), "dyrt");});
test("dysse -> dys", function() {deepEqual( Stem("dysse"), "dys");});
test("dyssede -> dyssed", function() {deepEqual( Stem("dyssede"), "dyssed");});
test("dåb -> dåb", function() {deepEqual( Stem("dåb"), "dåb");});
test("dåben -> dåb", function() {deepEqual( Stem("dåben"), "dåb");});
test("dåd -> dåd", function() {deepEqual( Stem("dåd"), "dåd");});
test("dåerne -> dåern", function() {deepEqual( Stem("dåerne"), "dåern");});
test("dåre -> dår", function() {deepEqual( Stem("dåre"), "dår");});
test("dåren -> dår", function() {deepEqual( Stem("dåren"), "dår");});
test("dårende -> dår", function() {deepEqual( Stem("dårende"), "dår");});
test("dårens -> dår", function() {deepEqual( Stem("dårens"), "dår");});
test("dårer -> dår", function() {deepEqual( Stem("dårer"), "dår");});
test("dårerne -> dår", function() {deepEqual( Stem("dårerne"), "dår");});
test("dårers -> dår", function() {deepEqual( Stem("dårers"), "dår");});
test("dåres -> dår", function() {deepEqual( Stem("dåres"), "dår");});
test("dåret -> dår", function() {deepEqual( Stem("dåret"), "dår");});
test("dåretale -> dåretal", function() {deepEqual( Stem("dåretale"), "dåretal");});
test("dårlig -> dår", function() {deepEqual( Stem("dårlig"), "dår");});
test("dårlige -> dår", function() {deepEqual( Stem("dårlige"), "dår");});
test("dårligt -> dår", function() {deepEqual( Stem("dårligt"), "dår");});
test("dårskab -> dårskab", function() {deepEqual( Stem("dårskab"), "dårskab");});
test("dårskaben -> dårskab", function() {deepEqual( Stem("dårskaben"), "dårskab");});
test("dårskabs -> dårskab", function() {deepEqual( Stem("dårskabs"), "dårskab");});
test("dæk -> dæk", function() {deepEqual( Stem("dæk"), "dæk");});
test("dækfjer -> dækfj", function() {deepEqual( Stem("dækfjer"), "dækfj");});
test("dække -> dæk", function() {deepEqual( Stem("dække"), "dæk");});
test("dækked -> dækked", function() {deepEqual( Stem("dækked"), "dækked");});
test("dækkede -> dækked", function() {deepEqual( Stem("dækkede"), "dækked");});
test("dækkedes -> dækked", function() {deepEqual( Stem("dækkedes"), "dækked");});
test("dækker -> dæk", function() {deepEqual( Stem("dækker"), "dæk");});
test("dækkes -> dæk", function() {deepEqual( Stem("dækkes"), "dæk");});
test("dækket -> dæk", function() {deepEqual( Stem("dækket"), "dæk");});
test("dæmmer -> dæm", function() {deepEqual( Stem("dæmmer"), "dæm");});
test("dæmoner -> dæmon", function() {deepEqual( Stem("dæmoner"), "dæmon");});
test("dæmonerne -> dæmon", function() {deepEqual( Stem("dæmonerne"), "dæmon");});
test("dæmoners -> dæmon", function() {deepEqual( Stem("dæmoners"), "dæmon");});
test("dæmpedes -> dæmped", function() {deepEqual( Stem("dæmpedes"), "dæmped");});
test("dæmper -> dæmp", function() {deepEqual( Stem("dæmper"), "dæmp");});
test("dæmpes -> dæmp", function() {deepEqual( Stem("dæmpes"), "dæmp");});
test("dæmpet -> dæmp", function() {deepEqual( Stem("dæmpet"), "dæmp");});
test("dæmring -> dæmring", function() {deepEqual( Stem("dæmring"), "dæmring");});
test("dænger -> dæng", function() {deepEqual( Stem("dænger"), "dæng");});
test("dænges -> dæng", function() {deepEqual( Stem("dænges"), "dæng");});
test("dø -> dø", function() {deepEqual( Stem("dø"), "dø");});
test("døbe -> døb", function() {deepEqual( Stem("døbe"), "døb");});
test("døbelser -> døb", function() {deepEqual( Stem("døbelser"), "døb");});
test("døber -> døb", function() {deepEqual( Stem("døber"), "døb");});
test("døberen -> døb", function() {deepEqual( Stem("døberen"), "døb");});
test("døberens -> døb", function() {deepEqual( Stem("døberens"), "døb");});
test("døbes -> døb", function() {deepEqual( Stem("døbes"), "døb");});
test("døbt -> døbt", function() {deepEqual( Stem("døbt"), "døbt");});
test("døbte -> døbt", function() {deepEqual( Stem("døbte"), "døbt");});
test("død -> død", function() {deepEqual( Stem("død"), "død");});
test("dødbringende -> dødbring", function() {deepEqual( Stem("dødbringende"), "dødbring");});
test("døde -> død", function() {deepEqual( Stem("døde"), "død");});
test("dødedag -> dødedag", function() {deepEqual( Stem("dødedag"), "dødedag");});
test("dødeklage -> dødeklag", function() {deepEqual( Stem("dødeklage"), "dødeklag");});
test("dødeklagen -> dødeklag", function() {deepEqual( Stem("dødeklagen"), "dødeklag");});
test("dødelig -> død", function() {deepEqual( Stem("dødelig"), "død");});
test("dødelige -> død", function() {deepEqual( Stem("dødelige"), "død");});
test("dødelse -> død", function() {deepEqual( Stem("dødelse"), "død");});
test("dødemanere -> dødeman", function() {deepEqual( Stem("dødemanere"), "dødeman");});
test("dødemanerne -> dødeman", function() {deepEqual( Stem("dødemanerne"), "dødeman");});
test("døden -> død", function() {deepEqual( Stem("døden"), "død");});
test("dødens -> død", function() {deepEqual( Stem("dødens"), "død");});
test("døder -> død", function() {deepEqual( Stem("døder"), "død");});
test("dødes -> død", function() {deepEqual( Stem("dødes"), "død");});
test("dødfødt -> dødfød", function() {deepEqual( Stem("dødfødt"), "dødfød");});
test("dødfødte -> dødfød", function() {deepEqual( Stem("dødfødte"), "dødfød");});
test("dødninger -> dødning", function() {deepEqual( Stem("dødninger"), "dødning");});
test("døds -> død", function() {deepEqual( Stem("døds"), "død");});
test("dødsangst -> dødsangst", function() {deepEqual( Stem("dødsangst"), "dødsangst");});
test("dødsdag -> dødsdag", function() {deepEqual( Stem("dødsdag"), "dødsdag");});
test("dødsdom -> dødsdom", function() {deepEqual( Stem("dødsdom"), "dødsdom");});
test("dødsdommen -> dødsdom", function() {deepEqual( Stem("dødsdommen"), "dødsdom");});
test("dødsdømte -> dødsdømt", function() {deepEqual( Stem("dødsdømte"), "dødsdømt");});
test("dødsens -> døds", function() {deepEqual( Stem("dødsens"), "døds");});
test("dødsfare -> dødsfar", function() {deepEqual( Stem("dødsfare"), "dødsfar");});
test("dødsfrygt -> dødsfryg", function() {deepEqual( Stem("dødsfrygt"), "dødsfryg");});
test("dødsramte -> dødsramt", function() {deepEqual( Stem("dødsramte"), "dødsramt");});
test("dødsrige -> dødsr", function() {deepEqual( Stem("dødsrige"), "dødsr");});
test("dødsriget -> dødsr", function() {deepEqual( Stem("dødsriget"), "dødsr");});
test("dødsrigets -> dødsr", function() {deepEqual( Stem("dødsrigets"), "dødsr");});
test("dødsråd -> dødsråd", function() {deepEqual( Stem("dødsråd"), "dødsråd");});
test("dødsskyggens -> dødsskyg", function() {deepEqual( Stem("dødsskyggens"), "dødsskyg");});
test("dødsskyld -> dødsskyld", function() {deepEqual( Stem("dødsskyld"), "dødsskyld");});
test("dødsstødet -> dødsstød", function() {deepEqual( Stem("dødsstødet"), "dødsstød");});
test("dødssyg -> dødssyg", function() {deepEqual( Stem("dødssyg"), "dødssyg");});
test("dødsår -> dødsår", function() {deepEqual( Stem("dødsår"), "dødsår");});
test("dødt -> dødt", function() {deepEqual( Stem("dødt"), "dødt");});
test("døende -> døend", function() {deepEqual( Stem("døende"), "døend");});
test("døgn -> døgn", function() {deepEqual( Stem("døgn"), "døgn");});
test("døgnet -> døgn", function() {deepEqual( Stem("døgnet"), "døgn");});
test("døjet -> døj", function() {deepEqual( Stem("døjet"), "døj");});
test("dølg -> dølg", function() {deepEqual( Stem("dølg"), "dølg");});
test("dølge -> dølg", function() {deepEqual( Stem("dølge"), "dølg");});
test("dølger -> dølg", function() {deepEqual( Stem("dølger"), "dølg");});
test("dølges -> dølg", function() {deepEqual( Stem("dølges"), "dølg");});
test("døm -> døm", function() {deepEqual( Stem("døm"), "døm");});
test("dømme -> døm", function() {deepEqual( Stem("dømme"), "døm");});
test("dømmer -> døm", function() {deepEqual( Stem("dømmer"), "døm");});
test("dømmes -> døm", function() {deepEqual( Stem("dømmes"), "døm");});
test("dømt -> dømt", function() {deepEqual( Stem("dømt"), "dømt");});
test("dømte -> dømt", function() {deepEqual( Stem("dømte"), "dømt");});
test("dør -> dør", function() {deepEqual( Stem("dør"), "dør");});
test("døre -> dør", function() {deepEqual( Stem("døre"), "dør");});
test("døren -> dør", function() {deepEqual( Stem("døren"), "dør");});
test("dørene -> dør", function() {deepEqual( Stem("dørene"), "dør");});
test("dørenes -> dør", function() {deepEqual( Stem("dørenes"), "dør");});
test("dørens -> dør", function() {deepEqual( Stem("dørens"), "dør");});
test("dørerne -> dør", function() {deepEqual( Stem("dørerne"), "dør");});
test("dørflader -> dørflad", function() {deepEqual( Stem("dørflader"), "dørflad");});
test("dørfløje -> dørfløj", function() {deepEqual( Stem("dørfløje"), "dørfløj");});
test("dørfløjene -> dørfløj", function() {deepEqual( Stem("dørfløjene"), "dørfløj");});
test("dørhængslerne -> dørhængsl", function() {deepEqual( Stem("dørhængslerne"), "dørhængsl");});
test("dørposterne -> dørpost", function() {deepEqual( Stem("dørposterne"), "dørpost");});
test("dørstolpe -> dørstolp", function() {deepEqual( Stem("dørstolpe"), "dørstolp");});
test("dørstolpen -> dørstolp", function() {deepEqual( Stem("dørstolpen"), "dørstolp");});
test("dørstolper -> dørstolp", function() {deepEqual( Stem("dørstolper"), "dørstolp");});
test("dørstolperne -> dørstolp", function() {deepEqual( Stem("dørstolperne"), "dørstolp");});
test("dørstolpernes -> dørstolp", function() {deepEqual( Stem("dørstolpernes"), "dørstolp");});
test("dørtærskelen -> dørtærskel", function() {deepEqual( Stem("dørtærskelen"), "dørtærskel");});
test("dørtærsklerne -> dørtærskl", function() {deepEqual( Stem("dørtærsklerne"), "dørtærskl");});
test("dørvogter -> dørvog", function() {deepEqual( Stem("dørvogter"), "dørvog");});
test("dørvogtere -> dørvog", function() {deepEqual( Stem("dørvogtere"), "dørvog");});
test("dørvogteren -> dørvog", function() {deepEqual( Stem("dørvogteren"), "dørvog");});
test("dørvogterne -> dørvog", function() {deepEqual( Stem("dørvogterne"), "dørvog");});
test("dørvogternes -> dørvog", function() {deepEqual( Stem("dørvogternes"), "dørvog");});
test("dørvogterske -> dørvogtersk", function() {deepEqual( Stem("dørvogterske"), "dørvogtersk");});
test("dørvogtersken -> dørvogtersk", function() {deepEqual( Stem("dørvogtersken"), "dørvogtersk");});
test("døser -> døs", function() {deepEqual( Stem("døser"), "døs");});
test("døtre -> døtr", function() {deepEqual( Stem("døtre"), "døtr");});
test("døtrene -> døtr", function() {deepEqual( Stem("døtrene"), "døtr");});
test("døtrenes -> døtr", function() {deepEqual( Stem("døtrenes"), "døtr");});
test("døtres -> døtr", function() {deepEqual( Stem("døtres"), "døtr");});
test("døtte -> døt", function() {deepEqual( Stem("døtte"), "døt");});
test("døv -> døv", function() {deepEqual( Stem("døv"), "døv");});
test("døve -> døv", function() {deepEqual( Stem("døve"), "døv");});
test("døvende -> døv", function() {deepEqual( Stem("døvende"), "døv");});
test("døver -> døv", function() {deepEqual( Stem("døver"), "døv");});
test("døves -> døv", function() {deepEqual( Stem("døves"), "døv");});
test("døvet -> døv", function() {deepEqual( Stem("døvet"), "døv");});
test("e -> e", function() {deepEqual( Stem("e"), "e");});
test("eb -> eb", function() {deepEqual( Stem("eb"), "eb");});
test("ebal -> ebal", function() {deepEqual( Stem("ebal"), "ebal");});
test("ebals -> ebal", function() {deepEqual( Stem("ebals"), "ebal");});
test("ebber -> ebb", function() {deepEqual( Stem("ebber"), "ebb");});
test("ebed -> ebed", function() {deepEqual( Stem("ebed"), "ebed");});
test("ebeds -> ebed", function() {deepEqual( Stem("ebeds"), "ebed");});
test("eben -> eben", function() {deepEqual( Stem("eben"), "eben");});
test("eber -> eber", function() {deepEqual( Stem("eber"), "eber");});
test("ebers -> eber", function() {deepEqual( Stem("ebers"), "eber");});
test("ebersønnernes -> ebersøn", function() {deepEqual( Stem("ebersønnernes"), "ebersøn");});
test("ebez -> ebez", function() {deepEqual( Stem("ebez"), "ebez");});
test("ebi -> ebi", function() {deepEqual( Stem("ebi"), "ebi");});
test("ebjasaf -> ebjasaf", function() {deepEqual( Stem("ebjasaf"), "ebjasaf");});
test("ebjatar -> ebjatar", function() {deepEqual( Stem("ebjatar"), "ebjatar");});
test("ebjatars -> ebjatar", function() {deepEqual( Stem("ebjatars"), "ebjatar");});
test("ebs -> ebs", function() {deepEqual( Stem("ebs"), "ebs");});
test("ed -> ed", function() {deepEqual( Stem("ed"), "ed");});
test("edder -> edd", function() {deepEqual( Stem("edder"), "edd");});
test("edderkops -> edderkop", function() {deepEqual( Stem("edderkops"), "edderkop");});
test("eddike -> eddik", function() {deepEqual( Stem("eddike"), "eddik");});
test("eddiken -> eddik", function() {deepEqual( Stem("eddiken"), "eddik");});
test("eden -> eden", function() {deepEqual( Stem("eden"), "eden");});
test("edens -> eden", function() {deepEqual( Stem("edens"), "eden");});
test("eder -> eder", function() {deepEqual( Stem("eder"), "eder");});
test("ederne -> edern", function() {deepEqual( Stem("ederne"), "edern");});
test("edernes -> edern", function() {deepEqual( Stem("edernes"), "edern");});
test("eders -> eder", function() {deepEqual( Stem("eders"), "eder");});
test("edom -> edom", function() {deepEqual( Stem("edom"), "edom");});
test("edomit -> edomit", function() {deepEqual( Stem("edomit"), "edomit");});
test("edomiten -> edomit", function() {deepEqual( Stem("edomiten"), "edomit");});
test("edomiterne -> edomit", function() {deepEqual( Stem("edomiterne"), "edomit");});
test("edomiternes -> edomit", function() {deepEqual( Stem("edomiternes"), "edomit");});
test("edomitiske -> edomitisk", function() {deepEqual( Stem("edomitiske"), "edomitisk");});
test("edoms -> edom", function() {deepEqual( Stem("edoms"), "edom");});
test("edre -> edr", function() {deepEqual( Stem("edre"), "edr");});
test("edrei -> edrei", function() {deepEqual( Stem("edrei"), "edrei");});
test("edsforbund -> edsforbund", function() {deepEqual( Stem("edsforbund"), "edsforbund");});
test("edsforbunds -> edsforbund", function() {deepEqual( Stem("edsforbunds"), "edsforbund");});
test("een -> een", function() {deepEqual( Stem("een"), "een");});
test("eens -> een", function() {deepEqual( Stem("eens"), "een");});
test("eet -> eet", function() {deepEqual( Stem("eet"), "eet");});
test("efa -> efa", function() {deepEqual( Stem("efa"), "efa");});
test("efaen -> efa", function() {deepEqual( Stem("efaen"), "efa");});
test("efaer -> efa", function() {deepEqual( Stem("efaer"), "efa");});
test("efajs -> efaj", function() {deepEqual( Stem("efajs"), "efaj");});
test("efas -> efa", function() {deepEqual( Stem("efas"), "efa");});
test("efer -> efer", function() {deepEqual( Stem("efer"), "efer");});
test("efes -> efes", function() {deepEqual( Stem("efes"), "efes");});
test("efeserne -> efes", function() {deepEqual( Stem("efeserne"), "efes");});
test("efesieren -> efesi", function() {deepEqual( Stem("efesieren"), "efesi");});
test("efesiernes -> efesi", function() {deepEqual( Stem("efesiernes"), "efesi");});
test("efesus -> efesus", function() {deepEqual( Stem("efesus"), "efesus");});
test("effata -> effata", function() {deepEqual( Stem("effata"), "effata");});
test("efferkommerne -> efferkom", function() {deepEqual( Stem("efferkommerne"), "efferkom");});
test("effersom -> effersom", function() {deepEqual( Stem("effersom"), "effersom");});
test("eflal -> eflal", function() {deepEqual( Stem("eflal"), "eflal");});
test("efod -> efod", function() {deepEqual( Stem("efod"), "efod");});
test("efoden -> efod", function() {deepEqual( Stem("efoden"), "efod");});
test("efodens -> efod", function() {deepEqual( Stem("efodens"), "efod");});
test("efodkåben -> efodkåb", function() {deepEqual( Stem("efodkåben"), "efodkåb");});
test("efods -> efod", function() {deepEqual( Stem("efods"), "efod");});
test("efraim -> efraim", function() {deepEqual( Stem("efraim"), "efraim");});
test("efraimierne -> efraimi", function() {deepEqual( Stem("efraimierne"), "efraimi");});
test("efraimit -> efraimit", function() {deepEqual( Stem("efraimit"), "efraimit");});
test("efraimiten -> efraimit", function() {deepEqual( Stem("efraimiten"), "efraimit");});
test("efraimiter -> efraimit", function() {deepEqual( Stem("efraimiter"), "efraimit");});
test("efraimiterne -> efraimit", function() {deepEqual( Stem("efraimiterne"), "efraimit");});
test("efraimiternes -> efraimit", function() {deepEqual( Stem("efraimiternes"), "efraimit");});
test("efraimitiske -> efraimitisk", function() {deepEqual( Stem("efraimitiske"), "efraimitisk");});
test("efraims -> efraim", function() {deepEqual( Stem("efraims"), "efraim");});
test("efraimsporfen -> efraimsporf", function() {deepEqual( Stem("efraimsporfen"), "efraimsporf");});
test("efraimsporten -> efraimsport", function() {deepEqual( Stem("efraimsporten"), "efraimsport");});
test("efrainms -> efrainm", function() {deepEqual( Stem("efrainms"), "efrainm");});
test("efrajin -> efrajin", function() {deepEqual( Stem("efrajin"), "efrajin");});
test("efrat -> efrat", function() {deepEqual( Stem("efrat"), "efrat");});
test("efrata -> efrata", function() {deepEqual( Stem("efrata"), "efrata");});
test("efratas -> efrata", function() {deepEqual( Stem("efratas"), "efrata");});
test("efratit -> efratit", function() {deepEqual( Stem("efratit"), "efratit");});
test("efratiter -> efratit", function() {deepEqual( Stem("efratiter"), "efratit");});
test("efrims -> efrim", function() {deepEqual( Stem("efrims"), "efrim");});
test("efron -> efron", function() {deepEqual( Stem("efron"), "efron");});
test("efronbjerget -> efronbjerg", function() {deepEqual( Stem("efronbjerget"), "efronbjerg");});
test("efrons -> efron", function() {deepEqual( Stem("efrons"), "efron");});
test("efter -> eft", function() {deepEqual( Stem("efter"), "eft");});
test("efterbyrden -> efterbyrd", function() {deepEqual( Stem("efterbyrden"), "efterbyrd");});
test("efterdavids -> efterdavid", function() {deepEqual( Stem("efterdavids"), "efterdavid");});
test("efterdi -> efterdi", function() {deepEqual( Stem("efterdi"), "efterdi");});
test("efterforske -> efterforsk", function() {deepEqual( Stem("efterforske"), "efterforsk");});
test("efterfulgt -> efterfulg", function() {deepEqual( Stem("efterfulgt"), "efterfulg");});
test("efterfølg -> efterfølg", function() {deepEqual( Stem("efterfølg"), "efterfølg");});
test("efterfølge -> efterfølg", function() {deepEqual( Stem("efterfølge"), "efterfølg");});
test("efterfølger -> efterfølg", function() {deepEqual( Stem("efterfølger"), "efterfølg");});
test("efterfølgere -> efterfølg", function() {deepEqual( Stem("efterfølgere"), "efterfølg");});
test("eftergav -> eftergav", function() {deepEqual( Stem("eftergav"), "eftergav");});
test("eftergiv -> eftergiv", function() {deepEqual( Stem("eftergiv"), "eftergiv");});
test("eftergive -> eftergiv", function() {deepEqual( Stem("eftergive"), "eftergiv");});
test("eftergivenhed -> eftergiven", function() {deepEqual( Stem("eftergivenhed"), "eftergiven");});
test("eftergives -> eftergiv", function() {deepEqual( Stem("eftergives"), "eftergiv");});
test("eftergivet -> eftergiv", function() {deepEqual( Stem("eftergivet"), "eftergiv");});
test("eftergøre -> eftergør", function() {deepEqual( Stem("eftergøre"), "eftergør");});
test("efterhøst -> efterhøst", function() {deepEqual( Stem("efterhøst"), "efterhøst");});
test("efterkomme -> efterkom", function() {deepEqual( Stem("efterkomme"), "efterkom");});
test("efterkommeme -> efterkommem", function() {deepEqual( Stem("efterkommeme"), "efterkommem");});
test("efterkommer -> efterkom", function() {deepEqual( Stem("efterkommer"), "efterkom");});
test("efterkommere -> efterkom", function() {deepEqual( Stem("efterkommere"), "efterkom");});
test("efterkommeres -> efterkom", function() {deepEqual( Stem("efterkommeres"), "efterkom");});
test("efterkommerne -> efterkom", function() {deepEqual( Stem("efterkommerne"), "efterkom");});
test("efterlade -> efterlad", function() {deepEqual( Stem("efterlade"), "efterlad");});
test("efterladen -> efterlad", function() {deepEqual( Stem("efterladen"), "efterlad");});
test("efterladende -> efterlad", function() {deepEqual( Stem("efterladende"), "efterlad");});
test("efterladenhed -> efterladen", function() {deepEqual( Stem("efterladenhed"), "efterladen");});
test("efterlader -> efterlad", function() {deepEqual( Stem("efterlader"), "efterlad");});
test("efterladt -> efterlad", function() {deepEqual( Stem("efterladt"), "efterlad");});
test("efterligne -> efterlign", function() {deepEqual( Stem("efterligne"), "efterlign");});
test("efterlignede -> efterligned", function() {deepEqual( Stem("efterlignede"), "efterligned");});
test("efterligner -> efterlign", function() {deepEqual( Stem("efterligner"), "efterlign");});
test("efterlignere -> efterlign", function() {deepEqual( Stem("efterlignere"), "efterlign");});
test("efterlod -> efterlod", function() {deepEqual( Stem("efterlod"), "efterlod");});
test("efterlode -> efterlod", function() {deepEqual( Stem("efterlode"), "efterlod");});
test("eftermand -> eftermand", function() {deepEqual( Stem("eftermand"), "eftermand");});
test("eftermæle -> eftermæl", function() {deepEqual( Stem("eftermæle"), "eftermæl");});
test("efternølere -> efternøl", function() {deepEqual( Stem("efternølere"), "efternøl");});
test("efternølerne -> efternøl", function() {deepEqual( Stem("efternølerne"), "efternøl");});
test("efterretning -> efterretning", function() {deepEqual( Stem("efterretning"), "efterretning");});
test("efterretningen -> efterretning", function() {deepEqual( Stem("efterretningen"), "efterretning");});
test("efterrettelig -> efterret", function() {deepEqual( Stem("efterrettelig"), "efterret");});
test("efterslægten -> efterslæg", function() {deepEqual( Stem("efterslægten"), "efterslæg");});
test("efterslæt -> efterslæt", function() {deepEqual( Stem("efterslæt"), "efterslæt");});
test("efterslætten -> efterslæt", function() {deepEqual( Stem("efterslætten"), "efterslæt");});
test("eftersmagen -> eftersmag", function() {deepEqual( Stem("eftersmagen"), "eftersmag");});
test("eftersom -> eftersom", function() {deepEqual( Stem("eftersom"), "eftersom");});
test("efterstræbe -> efterstræb", function() {deepEqual( Stem("efterstræbe"), "efterstræb");});
test("efterstræbelser -> efterstræb", function() {deepEqual( Stem("efterstræbelser"), "efterstræb");});
test("efterstræbte -> efterstræbt", function() {deepEqual( Stem("efterstræbte"), "efterstræbt");});
test("eftersøge -> eftersøg", function() {deepEqual( Stem("eftersøge"), "eftersøg");});
test("eftertrykkelig -> eftertryk", function() {deepEqual( Stem("eftertrykkelig"), "eftertryk");});
test("efteråret -> efterår", function() {deepEqual( Stem("efteråret"), "efterår");});
test("eg -> eg", function() {deepEqual( Stem("eg"), "eg");});
test("ege -> ege", function() {deepEqual( Stem("ege"), "ege");});
test("egen -> egen", function() {deepEqual( Stem("egen"), "egen");});
test("egenkærlige -> egenkær", function() {deepEqual( Stem("egenkærlige"), "egenkær");});
test("egenmægtig -> egenmæg", function() {deepEqual( Stem("egenmægtig"), "egenmæg");});
test("egenmægtigt -> egenmæg", function() {deepEqual( Stem("egenmægtigt"), "egenmæg");});
test("egennytte -> egennyt", function() {deepEqual( Stem("egennytte"), "egennyt");});
test("egenrådighed -> egenråd", function() {deepEqual( Stem("egenrådighed"), "egenråd");});
test("egenrådigt -> egenråd", function() {deepEqual( Stem("egenrådigt"), "egenråd");});
test("egensind -> egensind", function() {deepEqual( Stem("egensind"), "egensind");});
test("egensindigt -> egensind", function() {deepEqual( Stem("egensindigt"), "egensind");});
test("egentlig -> egent", function() {deepEqual( Stem("egentlig"), "egent");});
test("eger -> eger", function() {deepEqual( Stem("eger"), "eger");});
test("eget -> eget", function() {deepEqual( Stem("eget"), "eget");});
test("egetræer -> egetræ", function() {deepEqual( Stem("egetræer"), "egetræ");});
test("egetræet -> egetræ", function() {deepEqual( Stem("egetræet"), "egetræ");});
test("egla -> egla", function() {deepEqual( Stem("egla"), "egla");});
test("eglajim -> eglajim", function() {deepEqual( Stem("eglajim"), "eglajim");});
test("eglat -> eglat", function() {deepEqual( Stem("eglat"), "eglat");});
test("eglon -> eglon", function() {deepEqual( Stem("eglon"), "eglon");});
test("egn -> egn", function() {deepEqual( Stem("egn"), "egn");});
test("egne -> egn", function() {deepEqual( Stem("egne"), "egn");});
test("egnede -> egned", function() {deepEqual( Stem("egnede"), "egned");});
test("egnen -> egn", function() {deepEqual( Stem("egnen"), "egn");});
test("egnene -> egn", function() {deepEqual( Stem("egnene"), "egn");});
test("egnens -> egn", function() {deepEqual( Stem("egnens"), "egn");});
test("egner -> egn", function() {deepEqual( Stem("egner"), "egn");});
test("eher -> eher", function() {deepEqual( Stem("eher"), "eher");});
test("ehud -> ehud", function() {deepEqual( Stem("ehud"), "ehud");});
test("ehuds -> ehud", function() {deepEqual( Stem("ehuds"), "ehud");});
test("ej -> ej", function() {deepEqual( Stem("ej"), "ej");});
test("eje -> eje", function() {deepEqual( Stem("eje"), "eje");});
test("ejede -> ejed", function() {deepEqual( Stem("ejede"), "ejed");});
test("ejendele -> ejendel", function() {deepEqual( Stem("ejendele"), "ejendel");});
test("ejendom -> ejendom", function() {deepEqual( Stem("ejendom"), "ejendom");});
test("ejendomme -> ejendom", function() {deepEqual( Stem("ejendomme"), "ejendom");});
test("ejendommens -> ejendom", function() {deepEqual( Stem("ejendommens"), "ejendom");});
test("ejendoms -> ejendom", function() {deepEqual( Stem("ejendoms"), "ejendom");});
test("ejendomsfolk -> ejendomsfolk", function() {deepEqual( Stem("ejendomsfolk"), "ejendomsfolk");});
test("ejendomsland -> ejendomsland", function() {deepEqual( Stem("ejendomsland"), "ejendomsland");});
test("ejendomsspørgsmål -> ejendomsspørgsmål", function() {deepEqual( Stem("ejendomsspørgsmål"), "ejendomsspørgsmål");});
test("ejer -> ejer", function() {deepEqual( Stem("ejer"), "ejer");});
test("ejere -> ejer", function() {deepEqual( Stem("ejere"), "ejer");});
test("ejeren -> ejer", function() {deepEqual( Stem("ejeren"), "ejer");});
test("ejeres -> ejer", function() {deepEqual( Stem("ejeres"), "ejer");});
test("ejerindes -> ejerind", function() {deepEqual( Stem("ejerindes"), "ejerind");});
test("ejermand -> ejermand", function() {deepEqual( Stem("ejermand"), "ejermand");});
test("ejes -> ejes", function() {deepEqual( Stem("ejes"), "ejes");});
test("ejesammen -> ejesam", function() {deepEqual( Stem("ejesammen"), "ejesam");});
test("ejet -> ejet", function() {deepEqual( Stem("ejet"), "ejet");});
test("ejiab -> ejiab", function() {deepEqual( Stem("ejiab"), "ejiab");});
test("eked -> eked", function() {deepEqual( Stem("eked"), "eked");});
test("ekeds -> eked", function() {deepEqual( Stem("ekeds"), "eked");});
test("eker -> eker", function() {deepEqual( Stem("eker"), "eker");});
test("ekron -> ekron", function() {deepEqual( Stem("ekron"), "ekron");});
test("ekroniterne -> ekronit", function() {deepEqual( Stem("ekroniterne"), "ekronit");});
test("ekrons -> ekron", function() {deepEqual( Stem("ekrons"), "ekron");});
test("eksempel -> eksempel", function() {deepEqual( Stem("eksempel"), "eksempel");});
test("el -> el", function() {deepEqual( Stem("el"), "el");});
test("ela -> ela", function() {deepEqual( Stem("ela"), "ela");});
test("elaja -> elaja", function() {deepEqual( Stem("elaja"), "elaja");});
test("elale -> elal", function() {deepEqual( Stem("elale"), "elal");});
test("elam -> elam", function() {deepEqual( Stem("elam"), "elam");});
test("elamiter -> elamit", function() {deepEqual( Stem("elamiter"), "elamit");});
test("elamiterne -> elamit", function() {deepEqual( Stem("elamiterne"), "elamit");});
test("elams -> elam", function() {deepEqual( Stem("elams"), "elam");});
test("elas -> ela", function() {deepEqual( Stem("elas"), "ela");});
test("elasa -> elasa", function() {deepEqual( Stem("elasa"), "elasa");});
test("elat -> elat", function() {deepEqual( Stem("elat"), "elat");});
test("elbanan -> elbanan", function() {deepEqual( Stem("elbanan"), "elbanan");});
test("elda -> elda", function() {deepEqual( Stem("elda"), "elda");});
test("eldad -> eldad", function() {deepEqual( Stem("eldad"), "eldad");});
test("eleazar -> eleazar", function() {deepEqual( Stem("eleazar"), "eleazar");});
test("eleazars -> eleazar", function() {deepEqual( Stem("eleazars"), "eleazar");});
test("elef -> elef", function() {deepEqual( Stem("elef"), "elef");});
test("elementer -> element", function() {deepEqual( Stem("elementer"), "element");});
test("elementerne -> element", function() {deepEqual( Stem("elementerne"), "element");});
test("elende -> elend", function() {deepEqual( Stem("elende"), "elend");});
test("elendig -> elend", function() {deepEqual( Stem("elendig"), "elend");});
test("elendige -> elend", function() {deepEqual( Stem("elendige"), "elend");});
test("elendighed -> elend", function() {deepEqual( Stem("elendighed"), "elend");});
test("elendigheds -> elend", function() {deepEqual( Stem("elendigheds"), "elend");});
test("elevte -> elevt", function() {deepEqual( Stem("elevte"), "elevt");});
test("elfenben -> elfenb", function() {deepEqual( Stem("elfenben"), "elfenb");});
test("elfenbenshaller -> elfenbenshal", function() {deepEqual( Stem("elfenbenshaller"), "elfenbenshal");});
test("elfenbenshusene -> elfenbenshus", function() {deepEqual( Stem("elfenbenshusene"), "elfenbenshus");});
test("elfenbenshuset -> elfenbenshus", function() {deepEqual( Stem("elfenbenshuset"), "elfenbenshus");});
test("elfenbenslejer -> elfenbenslej", function() {deepEqual( Stem("elfenbenslejer"), "elfenbenslej");});
test("elfenbensplade -> elfenbensplad", function() {deepEqual( Stem("elfenbensplade"), "elfenbensplad");});
test("elfenbenstrone -> elfenbenstron", function() {deepEqual( Stem("elfenbenstrone"), "elfenbenstron");});
test("elfenbenstårnet -> elfenbenstårn", function() {deepEqual( Stem("elfenbenstårnet"), "elfenbenstårn");});
test("elhanan -> elhanan", function() {deepEqual( Stem("elhanan"), "elhanan");});
test("eli -> eli", function() {deepEqual( Stem("eli"), "eli");});
test("eliab -> eliab", function() {deepEqual( Stem("eliab"), "eliab");});
test("eliabs -> eliab", function() {deepEqual( Stem("eliabs"), "eliab");});
test("eliakim -> eliakim", function() {deepEqual( Stem("eliakim"), "eliakim");});
test("eliakims -> eliakim", function() {deepEqual( Stem("eliakims"), "eliakim");});
test("eliam -> eliam", function() {deepEqual( Stem("eliam"), "eliam");});
test("eliams -> eliam", function() {deepEqual( Stem("eliams"), "eliam");});
test("elias -> elia", function() {deepEqual( Stem("elias"), "elia");});
test("eliass -> elias", function() {deepEqual( Stem("eliass"), "elias");});
test("eliata -> eliata", function() {deepEqual( Stem("eliata"), "eliata");});
test("elibu -> elibu", function() {deepEqual( Stem("elibu"), "elibu");});
test("elidad -> elidad", function() {deepEqual( Stem("elidad"), "elidad");});
test("eliel -> eliel", function() {deepEqual( Stem("eliel"), "eliel");});
test("eliezer -> eliez", function() {deepEqual( Stem("eliezer"), "eliez");});
test("eliezers -> eliez", function() {deepEqual( Stem("eliezers"), "eliez");});
test("elifal -> elifal", function() {deepEqual( Stem("elifal"), "elifal");});
test("elifaz -> elifaz", function() {deepEqual( Stem("elifaz"), "elifaz");});
test("elifazs -> elifaz", function() {deepEqual( Stem("elifazs"), "elifaz");});
test("elifelef -> elifelef", function() {deepEqual( Stem("elifelef"), "elifelef");});
test("elifelet -> elifel", function() {deepEqual( Stem("elifelet"), "elifel");});
test("elihoref -> elihoref", function() {deepEqual( Stem("elihoref"), "elihoref");});
test("elihu -> elihu", function() {deepEqual( Stem("elihu"), "elihu");});
test("elija -> elija", function() {deepEqual( Stem("elija"), "elija");});
test("elika -> elika", function() {deepEqual( Stem("elika"), "elika");});
test("elim -> elim", function() {deepEqual( Stem("elim"), "elim");});
test("elimas -> elima", function() {deepEqual( Stem("elimas"), "elima");});
test("elimelek -> elimelek", function() {deepEqual( Stem("elimelek"), "elimelek");});
test("elimeleks -> elimelek", function() {deepEqual( Stem("elimeleks"), "elimelek");});
test("elipelehu -> elipelehu", function() {deepEqual( Stem("elipelehu"), "elipelehu");});
test("elis -> elis", function() {deepEqual( Stem("elis"), "elis");});
test("elisa -> elisa", function() {deepEqual( Stem("elisa"), "elisa");});
test("elisabeth -> elisabeth", function() {deepEqual( Stem("elisabeth"), "elisabeth");});
test("elisas -> elisa", function() {deepEqual( Stem("elisas"), "elisa");});
test("elisja -> elisja", function() {deepEqual( Stem("elisja"), "elisja");});
test("elisjafat -> elisjafat", function() {deepEqual( Stem("elisjafat"), "elisjafat");});
test("elisjama -> elisjama", function() {deepEqual( Stem("elisjama"), "elisjama");});
test("elisjamas -> elisjama", function() {deepEqual( Stem("elisjamas"), "elisjama");});
test("elisjas -> elisja", function() {deepEqual( Stem("elisjas"), "elisja");});
test("elisjeba -> elisjeba", function() {deepEqual( Stem("elisjeba"), "elisjeba");});
test("elisjema -> elisjema", function() {deepEqual( Stem("elisjema"), "elisjema");});
test("elisjua -> elisjua", function() {deepEqual( Stem("elisjua"), "elisjua");});
test("eliten -> elit", function() {deepEqual( Stem("eliten"), "elit");});
test("eliternes -> elit", function() {deepEqual( Stem("eliternes"), "elit");});
test("elitiske -> elitisk", function() {deepEqual( Stem("elitiske"), "elitisk");});
test("eliud -> eliud", function() {deepEqual( Stem("eliud"), "eliud");});
test("elizafan -> elizafan", function() {deepEqual( Stem("elizafan"), "elizafan");});
test("elizafans -> elizafan", function() {deepEqual( Stem("elizafans"), "elizafan");});
test("elizur -> elizur", function() {deepEqual( Stem("elizur"), "elizur");});
test("elizurs -> elizur", function() {deepEqual( Stem("elizurs"), "elizur");});
test("eljaba -> eljaba", function() {deepEqual( Stem("eljaba"), "eljaba");});
test("eljada -> eljada", function() {deepEqual( Stem("eljada"), "eljada");});
test("eljadas -> eljada", function() {deepEqual( Stem("eljadas"), "eljada");});
test("eljakim -> eljakim", function() {deepEqual( Stem("eljakim"), "eljakim");});
test("eljasaf -> eljasaf", function() {deepEqual( Stem("eljasaf"), "eljasaf");});
test("eljasafs -> eljasaf", function() {deepEqual( Stem("eljasafs"), "eljasaf");});
test("eljasar -> eljasar", function() {deepEqual( Stem("eljasar"), "eljasar");});
test("eljasjib -> eljasjib", function() {deepEqual( Stem("eljasjib"), "eljasjib");});
test("eljasjibs -> eljasjib", function() {deepEqual( Stem("eljasjibs"), "eljasjib");});
test("eljoenaj -> eljoenaj", function() {deepEqual( Stem("eljoenaj"), "eljoenaj");});
test("eljoenajs -> eljoenaj", function() {deepEqual( Stem("eljoenajs"), "eljoenaj");});
test("elkana -> elkana", function() {deepEqual( Stem("elkana"), "elkana");});
test("elkanas -> elkana", function() {deepEqual( Stem("elkanas"), "elkana");});
test("elkaoa -> elkaoa", function() {deepEqual( Stem("elkaoa"), "elkaoa");});
test("elkosjiten -> elkosjit", function() {deepEqual( Stem("elkosjiten"), "elkosjit");});
test("ellasar -> ellasar", function() {deepEqual( Stem("ellasar"), "ellasar");});
test("eller -> ell", function() {deepEqual( Stem("eller"), "ell");});
test("ellers -> ell", function() {deepEqual( Stem("ellers"), "ell");});
test("elleve -> ellev", function() {deepEqual( Stem("elleve"), "ellev");});
test("ellevte -> ellevt", function() {deepEqual( Stem("ellevte"), "ellevt");});
test("elm -> elm", function() {deepEqual( Stem("elm"), "elm");});
test("elmadams -> elmadam", function() {deepEqual( Stem("elmadams"), "elmadam");});
test("elna -> elna", function() {deepEqual( Stem("elna"), "elna");});
test("elnafan -> elnafan", function() {deepEqual( Stem("elnafan"), "elnafan");});
test("elnatan -> elnatan", function() {deepEqual( Stem("elnatan"), "elnatan");});
test("eloi -> eloi", function() {deepEqual( Stem("eloi"), "eloi");});
test("elon -> elon", function() {deepEqual( Stem("elon"), "elon");});
test("eloniternes -> elonit", function() {deepEqual( Stem("eloniternes"), "elonit");});
test("eloo -> eloo", function() {deepEqual( Stem("eloo"), "eloo");});
test("elot -> elot", function() {deepEqual( Stem("elot"), "elot");});
test("elpa -> elpa", function() {deepEqual( Stem("elpa"), "elpa");});
test("elpelet -> elpel", function() {deepEqual( Stem("elpelet"), "elpel");});
test("els -> els", function() {deepEqual( Stem("els"), "els");});
test("elsk -> elsk", function() {deepEqual( Stem("elsk"), "elsk");});
test("elske -> elsk", function() {deepEqual( Stem("elske"), "elsk");});
test("elsked -> elsked", function() {deepEqual( Stem("elsked"), "elsked");});
test("elskede -> elsked", function() {deepEqual( Stem("elskede"), "elsked");});
test("elskedes -> elsked", function() {deepEqual( Stem("elskedes"), "elsked");});
test("elskelig -> elsk", function() {deepEqual( Stem("elskelig"), "elsk");});
test("elskelige -> elsk", function() {deepEqual( Stem("elskelige"), "elsk");});
test("elskeligt -> elsk", function() {deepEqual( Stem("elskeligt"), "elsk");});
test("elskende -> elsk", function() {deepEqual( Stem("elskende"), "elsk");});
test("elsker -> elsk", function() {deepEqual( Stem("elsker"), "elsk");});
test("elskere -> elsk", function() {deepEqual( Stem("elskere"), "elsk");});
test("elskeres -> elsk", function() {deepEqual( Stem("elskeres"), "elsk");});
test("elskerne -> elsk", function() {deepEqual( Stem("elskerne"), "elsk");});
test("elskernes -> elsk", function() {deepEqual( Stem("elskernes"), "elsk");});
test("elskes -> elsk", function() {deepEqual( Stem("elskes"), "elsk");});
test("elsket -> elsk", function() {deepEqual( Stem("elsket"), "elsk");});
test("elskov -> elskov", function() {deepEqual( Stem("elskov"), "elskov");});
test("elskovs -> elskov", function() {deepEqual( Stem("elskovs"), "elskov");});
test("elskovsgaver -> elskovsgav", function() {deepEqual( Stem("elskovsgaver"), "elskovsgav");});
test("elskovssang -> elskovssang", function() {deepEqual( Stem("elskovssang"), "elskovssang");});
test("elskovstid -> elskovstid", function() {deepEqual( Stem("elskovstid"), "elskovstid");});
test("elsletten -> elslet", function() {deepEqual( Stem("elsletten"), "elslet");});
test("elteke -> eltek", function() {deepEqual( Stem("elteke"), "eltek");});
test("eltekon -> eltekon", function() {deepEqual( Stem("eltekon"), "eltekon");});
test("eltolad -> eltolad", function() {deepEqual( Stem("eltolad"), "eltolad");});
test("eltårnet -> eltårn", function() {deepEqual( Stem("eltårnet"), "eltårn");});
test("elul -> elul", function() {deepEqual( Stem("elul"), "elul");});
test("elzabad -> elzabad", function() {deepEqual( Stem("elzabad"), "elzabad");});
test("elzafan -> elzafan", function() {deepEqual( Stem("elzafan"), "elzafan");});
test("em -> em", function() {deepEqual( Stem("em"), "em");});
test("embeddsbrødre -> embeddsbrødr", function() {deepEqual( Stem("embeddsbrødre"), "embeddsbrødr");});
test("embede -> embed", function() {deepEqual( Stem("embede"), "embed");});
test("embedsbrødre -> embedsbrødr", function() {deepEqual( Stem("embedsbrødre"), "embedsbrødr");});
test("embedsdragt -> embedsdrag", function() {deepEqual( Stem("embedsdragt"), "embedsdrag");});
test("embedsførelse -> embedsfør", function() {deepEqual( Stem("embedsførelse"), "embedsfør");});
test("embedsgerning -> embedsgerning", function() {deepEqual( Stem("embedsgerning"), "embedsgerning");});
test("embedshuerne -> embedshu", function() {deepEqual( Stem("embedshuerne"), "embedshu");});
test("embedsmand -> embedsmand", function() {deepEqual( Stem("embedsmand"), "embedsmand");});
test("embedsmanden -> embedsmand", function() {deepEqual( Stem("embedsmanden"), "embedsmand");});
test("embedsmænd -> embedsmænd", function() {deepEqual( Stem("embedsmænd"), "embedsmænd");});
test("embedsmændene -> embedsmænd", function() {deepEqual( Stem("embedsmændene"), "embedsmænd");});
test("embedspligter -> embedsp", function() {deepEqual( Stem("embedspligter"), "embedsp");});
test("embedsskifte -> embedsskift", function() {deepEqual( Stem("embedsskifte"), "embedsskift");});
test("embedsskifter -> embedsskift", function() {deepEqual( Stem("embedsskifter"), "embedsskift");});
test("emek -> emek", function() {deepEqual( Stem("emek"), "emek");});
test("emhedsbrødre -> emhedsbrødr", function() {deepEqual( Stem("emhedsbrødre"), "emhedsbrødr");});
test("emiter -> emit", function() {deepEqual( Stem("emiter"), "emit");});
test("emiterne -> emit", function() {deepEqual( Stem("emiterne"), "emit");});
test("emmaus -> emmaus", function() {deepEqual( Stem("emmaus"), "emmaus");});
test("en -> en", function() {deepEqual( Stem("en"), "en");});
test("enajim -> enajim", function() {deepEqual( Stem("enajim"), "enajim");});
test("enam -> enam", function() {deepEqual( Stem("enam"), "enam");});
test("enan -> enan", function() {deepEqual( Stem("enan"), "enan");});
test("enans -> enan", function() {deepEqual( Stem("enans"), "enan");});
test("enbåren -> enbår", function() {deepEqual( Stem("enbåren"), "enbår");});
test("enbårne -> enbårn", function() {deepEqual( Stem("enbårne"), "enbårn");});
test("end -> end", function() {deepEqual( Stem("end"), "end");});
test("endda -> endda", function() {deepEqual( Stem("endda"), "endda");});
test("ende -> end", function() {deepEqual( Stem("ende"), "end");});
test("endelig -> end", function() {deepEqual( Stem("endelig"), "end");});
test("endeligt -> end", function() {deepEqual( Stem("endeligt"), "end");});
test("endeløs -> endeløs", function() {deepEqual( Stem("endeløs"), "endeløs");});
test("endeløse -> endeløs", function() {deepEqual( Stem("endeløse"), "endeløs");});
test("endeløst -> endeløs", function() {deepEqual( Stem("endeløst"), "endeløs");});
test("endemål -> endemål", function() {deepEqual( Stem("endemål"), "endemål");});
test("enden -> end", function() {deepEqual( Stem("enden"), "end");});
test("endens -> end", function() {deepEqual( Stem("endens"), "end");});
test("endepå -> endepå", function() {deepEqual( Stem("endepå"), "endepå");});
test("ender -> end", function() {deepEqual( Stem("ender"), "end");});
test("enderne -> end", function() {deepEqual( Stem("enderne"), "end");});
test("endnu -> endnu", function() {deepEqual( Stem("endnu"), "endnu");});
test("endog -> endog", function() {deepEqual( Stem("endog"), "endog");});
test("endogså -> endogså", function() {deepEqual( Stem("endogså"), "endogså");});
test("endrægtelig -> endræg", function() {deepEqual( Stem("endrægtelig"), "endræg");});
test("endrægtighed -> endræg", function() {deepEqual( Stem("endrægtighed"), "endræg");});
test("endrægtigt -> endræg", function() {deepEqual( Stem("endrægtigt"), "endræg");});
test("endsige -> ends", function() {deepEqual( Stem("endsige"), "ends");});
test("endskønt -> endskønt", function() {deepEqual( Stem("endskønt"), "endskønt");});
test("endt -> endt", function() {deepEqual( Stem("endt"), "endt");});
test("endte -> endt", function() {deepEqual( Stem("endte"), "endt");});
test("endvidere -> endvid", function() {deepEqual( Stem("endvidere"), "endvid");});
test("ene -> ene", function() {deepEqual( Stem("ene"), "ene");});
test("enebærbusk -> enebærbusk", function() {deepEqual( Stem("enebærbusk"), "enebærbusk");});
test("enedes -> ened", function() {deepEqual( Stem("enedes"), "ened");});
test("enemærke -> enemærk", function() {deepEqual( Stem("enemærke"), "enemærk");});
test("enemærker -> enemærk", function() {deepEqual( Stem("enemærker"), "enemærk");});
test("enerum -> enerum", function() {deepEqual( Stem("enerum"), "enerum");});
test("enes -> enes", function() {deepEqual( Stem("enes"), "enes");});
test("eneste -> enest", function() {deepEqual( Stem("eneste"), "enest");});
test("enfold -> enfold", function() {deepEqual( Stem("enfold"), "enfold");});
test("enfoldig -> enfold", function() {deepEqual( Stem("enfoldig"), "enfold");});
test("enfoldige -> enfold", function() {deepEqual( Stem("enfoldige"), "enfold");});
test("engang -> engang", function() {deepEqual( Stem("engang"), "engang");});
test("enge -> eng", function() {deepEqual( Stem("enge"), "eng");});
test("engel -> engel", function() {deepEqual( Stem("engel"), "engel");});
test("engelen -> engel", function() {deepEqual( Stem("engelen"), "engel");});
test("engelens -> engel", function() {deepEqual( Stem("engelens"), "engel");});
test("engels -> engel", function() {deepEqual( Stem("engels"), "engel");});
test("engen -> eng", function() {deepEqual( Stem("engen"), "eng");});
test("engene -> eng", function() {deepEqual( Stem("engene"), "eng");});
test("engenes -> eng", function() {deepEqual( Stem("engenes"), "eng");});
test("engle -> engl", function() {deepEqual( Stem("engle"), "engl");});
test("englebrød -> englebrød", function() {deepEqual( Stem("englebrød"), "englebrød");});
test("englemål -> englemål", function() {deepEqual( Stem("englemål"), "englemål");});
test("englene -> engl", function() {deepEqual( Stem("englene"), "engl");});
test("englenes -> engl", function() {deepEqual( Stem("englenes"), "engl");});
test("engles -> engl", function() {deepEqual( Stem("engles"), "engl");});
test("enhed -> enhed", function() {deepEqual( Stem("enhed"), "enhed");});
test("enheden -> enhed", function() {deepEqual( Stem("enheden"), "enhed");});
test("enhver -> enhv", function() {deepEqual( Stem("enhver"), "enhv");});
test("enhvers -> enhv", function() {deepEqual( Stem("enhvers"), "enhv");});
test("enig -> enig", function() {deepEqual( Stem("enig"), "enig");});
test("enige -> enig", function() {deepEqual( Stem("enige"), "enig");});
test("enighed -> enig", function() {deepEqual( Stem("enighed"), "enig");});
test("enke -> enk", function() {deepEqual( Stem("enke"), "enk");});
test("enkeklæder -> enkeklæd", function() {deepEqual( Stem("enkeklæder"), "enkeklæd");});
test("enkelt -> enkelt", function() {deepEqual( Stem("enkelt"), "enkelt");});
test("enkelte -> enkelt", function() {deepEqual( Stem("enkelte"), "enkelt");});
test("enkeltes -> enkelt", function() {deepEqual( Stem("enkeltes"), "enkelt");});
test("enkeltheder -> enkelt", function() {deepEqual( Stem("enkeltheder"), "enkelt");});
test("enkelts -> enkelt", function() {deepEqual( Stem("enkelts"), "enkelt");});
test("enkeltvis -> enkeltvis", function() {deepEqual( Stem("enkeltvis"), "enkeltvis");});
test("enken -> enk", function() {deepEqual( Stem("enken"), "enk");});
test("enkens -> enk", function() {deepEqual( Stem("enkens"), "enk");});
test("enker -> enk", function() {deepEqual( Stem("enker"), "enk");});
test("enkerne -> enk", function() {deepEqual( Stem("enkerne"), "enk");});
test("enkers -> enk", function() {deepEqual( Stem("enkers"), "enk");});
test("enkes -> enk", function() {deepEqual( Stem("enkes"), "enk");});
test("enkestand -> enkestand", function() {deepEqual( Stem("enkestand"), "enkestand");});
test("enkestands -> enkestand", function() {deepEqual( Stem("enkestands"), "enkestand");});
test("enliges -> enl", function() {deepEqual( Stem("enliges"), "enl");});
test("enligt -> enl", function() {deepEqual( Stem("enligt"), "enl");});
test("enogtyve -> enogtyv", function() {deepEqual( Stem("enogtyve"), "enogtyv");});
test("enok -> enok", function() {deepEqual( Stem("enok"), "enok");});
test("enoks -> enok", function() {deepEqual( Stem("enoks"), "enok");});
test("enon -> enon", function() {deepEqual( Stem("enon"), "enon");});
test("enos -> eno", function() {deepEqual( Stem("enos"), "eno");});
test("enosj -> enosj", function() {deepEqual( Stem("enosj"), "enosj");});
test("enosjs -> enosj", function() {deepEqual( Stem("enosjs"), "enosj");});
test("enrum -> enrum", function() {deepEqual( Stem("enrum"), "enrum");});
test("ens -> ens", function() {deepEqual( Stem("ens"), "ens");});
test("ensfarvet -> ensfarv", function() {deepEqual( Stem("ensfarvet"), "ensfarv");});
test("ensom -> ensom", function() {deepEqual( Stem("ensom"), "ensom");});
test("ensomme -> ensom", function() {deepEqual( Stem("ensomme"), "ensom");});
test("enssindede -> enssinded", function() {deepEqual( Stem("enssindede"), "enssinded");});
test("enstemmigt -> enstem", function() {deepEqual( Stem("enstemmigt"), "enstem");});
test("enten -> ent", function() {deepEqual( Stem("enten"), "ent");});
test("entling -> entling", function() {deepEqual( Stem("entling"), "entling");});
test("enøjet -> enøj", function() {deepEqual( Stem("enøjet"), "enøj");});
test("epafras -> epafra", function() {deepEqual( Stem("epafras"), "epafra");});
test("epafroditus -> epafroditus", function() {deepEqual( Stem("epafroditus"), "epafroditus");});
test("epikuræiske -> epikuræisk", function() {deepEqual( Stem("epikuræiske"), "epikuræisk");});
test("epænetus -> epænetus", function() {deepEqual( Stem("epænetus"), "epænetus");});
test("er -> er", function() {deepEqual( Stem("er"), "er");});
test("era -> era", function() {deepEqual( Stem("era"), "era");});
test("eran -> eran", function() {deepEqual( Stem("eran"), "eran");});
test("eraniternes -> eranit", function() {deepEqual( Stem("eraniternes"), "eranit");});
test("erastus -> erastus", function() {deepEqual( Stem("erastus"), "erastus");});
test("ere -> ere", function() {deepEqual( Stem("ere"), "ere");});
test("erefrygt -> erefryg", function() {deepEqual( Stem("erefrygt"), "erefryg");});
test("erelk -> erelk", function() {deepEqual( Stem("erelk"), "erelk");});
test("erfare -> erfar", function() {deepEqual( Stem("erfare"), "erfar");});
test("erfarede -> erfared", function() {deepEqual( Stem("erfarede"), "erfared");});
test("erfaret -> erfar", function() {deepEqual( Stem("erfaret"), "erfar");});
test("erfaring -> erfaring", function() {deepEqual( Stem("erfaring"), "erfaring");});
test("erfarne -> erfarn", function() {deepEqual( Stem("erfarne"), "erfarn");});
test("erhans -> erhan", function() {deepEqual( Stem("erhans"), "erhan");});
test("erhverve -> erhverv", function() {deepEqual( Stem("erhverve"), "erhverv");});
test("erhvervede -> erhverved", function() {deepEqual( Stem("erhvervede"), "erhverved");});
test("erhverver -> erhverv", function() {deepEqual( Stem("erhverver"), "erhverv");});
test("erhvervet -> erhverv", function() {deepEqual( Stem("erhvervet"), "erhverv");});
test("eri -> eri", function() {deepEqual( Stem("eri"), "eri");});
test("erindre -> erindr", function() {deepEqual( Stem("erindre"), "erindr");});
test("erindring -> erindring", function() {deepEqual( Stem("erindring"), "erindring");});
test("erindringsmærke -> erindringsmærk", function() {deepEqual( Stem("erindringsmærke"), "erindringsmærk");});
test("eris -> eris", function() {deepEqual( Stem("eris"), "eris");});
test("eriternes -> erit", function() {deepEqual( Stem("eriternes"), "erit");});
test("erjeg -> erjeg", function() {deepEqual( Stem("erjeg"), "erjeg");});
test("erjo -> erjo", function() {deepEqual( Stem("erjo"), "erjo");});
test("erkend -> erkend", function() {deepEqual( Stem("erkend"), "erkend");});
test("erkende -> erk", function() {deepEqual( Stem("erkende"), "erk");});
test("erkendelse -> erkend", function() {deepEqual( Stem("erkendelse"), "erkend");});
test("erkendelsen -> erkend", function() {deepEqual( Stem("erkendelsen"), "erkend");});
test("erkender -> erkend", function() {deepEqual( Stem("erkender"), "erkend");});
test("erkendt -> erkend", function() {deepEqual( Stem("erkendt"), "erkend");});
test("erkendte -> erkend", function() {deepEqual( Stem("erkendte"), "erkend");});
test("erklære -> erklær", function() {deepEqual( Stem("erklære"), "erklær");});
test("erklærer -> erklær", function() {deepEqual( Stem("erklærer"), "erklær");});
test("erklæres -> erklær", function() {deepEqual( Stem("erklæres"), "erklær");});
test("erklæret -> erklær", function() {deepEqual( Stem("erklæret"), "erklær");});
test("erlahajro -> erlahajro", function() {deepEqual( Stem("erlahajro"), "erlahajro");});
test("erlægge -> erlæg", function() {deepEqual( Stem("erlægge"), "erlæg");});
test("ernære -> ernær", function() {deepEqual( Stem("ernære"), "ernær");});
test("erobrede -> erobred", function() {deepEqual( Stem("erobrede"), "erobred");});
test("erobret -> erobr", function() {deepEqual( Stem("erobret"), "erobr");});
test("erot -> erot", function() {deepEqual( Stem("erot"), "erot");});
test("erotiten -> erotit", function() {deepEqual( Stem("erotiten"), "erotit");});
test("erotiterne -> erotit", function() {deepEqual( Stem("erotiterne"), "erotit");});
test("erots -> erot", function() {deepEqual( Stem("erots"), "erot");});
test("ers -> ers", function() {deepEqual( Stem("ers"), "ers");});
test("ersjeba -> ersjeba", function() {deepEqual( Stem("ersjeba"), "ersjeba");});
test("ersjebas -> ersjeba", function() {deepEqual( Stem("ersjebas"), "ersjeba");});
test("erstatning -> erstatning", function() {deepEqual( Stem("erstatning"), "erstatning");});
test("erstatningen -> erstatning", function() {deepEqual( Stem("erstatningen"), "erstatning");});
test("erstatte -> erstat", function() {deepEqual( Stem("erstatte"), "erstat");});
test("erstattede -> erstatted", function() {deepEqual( Stem("erstattede"), "erstatted");});
test("ervej -> ervej", function() {deepEqual( Stem("ervej"), "ervej");});
test("esajas -> esaja", function() {deepEqual( Stem("esajas"), "esaja");});
test("esau -> esau", function() {deepEqual( Stem("esau"), "esau");});
test("esaus -> esaus", function() {deepEqual( Stem("esaus"), "esaus");});
test("esek -> esek", function() {deepEqual( Stem("esek"), "esek");});
test("esjan -> esjan", function() {deepEqual( Stem("esjan"), "esjan");});
test("esjba -> esjba", function() {deepEqual( Stem("esjba"), "esjba");});
test("esjban -> esjban", function() {deepEqual( Stem("esjban"), "esjban");});
test("esjeks -> esjek", function() {deepEqual( Stem("esjeks"), "esjek");});
test("esjkol -> esjkol", function() {deepEqual( Stem("esjkol"), "esjkol");});
test("esjkoldalen -> esjkoldal", function() {deepEqual( Stem("esjkoldalen"), "esjkoldal");});
test("esjtaol -> esjtaol", function() {deepEqual( Stem("esjtaol"), "esjtaol");});
test("esjtaoliterne -> esjtaolit", function() {deepEqual( Stem("esjtaoliterne"), "esjtaolit");});
test("esjtemo -> esjtemo", function() {deepEqual( Stem("esjtemo"), "esjtemo");});
test("esjtemoa -> esjtemoa", function() {deepEqual( Stem("esjtemoa"), "esjtemoa");});
test("esjtemoas -> esjtemoa", function() {deepEqual( Stem("esjtemoas"), "esjtemoa");});
test("esjton -> esjton", function() {deepEqual( Stem("esjton"), "esjton");});
test("esjtons -> esjton", function() {deepEqual( Stem("esjtons"), "esjton");});
test("eslis -> eslis", function() {deepEqual( Stem("eslis"), "eslis");});
test("esrom -> esrom", function() {deepEqual( Stem("esrom"), "esrom");});
test("esroms -> esrom", function() {deepEqual( Stem("esroms"), "esrom");});
test("ester -> est", function() {deepEqual( Stem("ester"), "est");});
test("esters -> est", function() {deepEqual( Stem("esters"), "est");});
test("et -> et", function() {deepEqual( Stem("et"), "et");});
test("eta -> eta", function() {deepEqual( Stem("eta"), "eta");});
test("etam -> etam", function() {deepEqual( Stem("etam"), "etam");});
test("etams -> etam", function() {deepEqual( Stem("etams"), "etam");});
test("etan -> etan", function() {deepEqual( Stem("etan"), "etan");});
test("etanim -> etanim", function() {deepEqual( Stem("etanim"), "etanim");});
test("etans -> etan", function() {deepEqual( Stem("etans"), "etan");});
test("etba -> etba", function() {deepEqual( Stem("etba"), "etba");});
test("etbrevmed -> etbrevmed", function() {deepEqual( Stem("etbrevmed"), "etbrevmed");});
test("eter -> eter", function() {deepEqual( Stem("eter"), "eter");});
test("ethvert -> ethvert", function() {deepEqual( Stem("ethvert"), "ethvert");});
test("eti -> eti", function() {deepEqual( Stem("eti"), "eti");});
test("etii -> etii", function() {deepEqual( Stem("etii"), "etii");});
test("etiopieren -> etiopi", function() {deepEqual( Stem("etiopieren"), "etiopi");});
test("etnan -> etnan", function() {deepEqual( Stem("etnan"), "etnan");});
test("etni -> etni", function() {deepEqual( Stem("etni"), "etni");});
test("eu -> eu", function() {deepEqual( Stem("eu"), "eu");});
test("eubulus -> eubulus", function() {deepEqual( Stem("eubulus"), "eubulus");});
test("eufrat -> eufrat", function() {deepEqual( Stem("eufrat"), "eufrat");});
test("eufratfloden -> eufratflod", function() {deepEqual( Stem("eufratfloden"), "eufratflod");});
test("eufrats -> eufrat", function() {deepEqual( Stem("eufrats"), "eufrat");});
test("eunike -> eunik", function() {deepEqual( Stem("eunike"), "eunik");});
test("eurakvilo -> eurakvilo", function() {deepEqual( Stem("eurakvilo"), "eurakvilo");});
test("eutykus -> eutykus", function() {deepEqual( Stem("eutykus"), "eutykus");});
test("eva -> eva", function() {deepEqual( Stem("eva"), "eva");});
test("evangeliet -> evangeli", function() {deepEqual( Stem("evangeliet"), "evangeli");});
test("evangeliets -> evangeli", function() {deepEqual( Stem("evangeliets"), "evangeli");});
test("evangelisten -> evangelist", function() {deepEqual( Stem("evangelisten"), "evangelist");});
test("evangelister -> evangelist", function() {deepEqual( Stem("evangelister"), "evangelist");});
test("evangelists -> evangelist", function() {deepEqual( Stem("evangelists"), "evangelist");});
test("evangelium -> evangelium", function() {deepEqual( Stem("evangelium"), "evangelium");});
test("evangeliums -> evangelium", function() {deepEqual( Stem("evangeliums"), "evangelium");});
test("evi -> evi", function() {deepEqual( Stem("evi"), "evi");});
test("evig -> evig", function() {deepEqual( Stem("evig"), "evig");});
test("evige -> evig", function() {deepEqual( Stem("evige"), "evig");});
test("evighed -> evig", function() {deepEqual( Stem("evighed"), "evig");});
test("evigheden -> evig", function() {deepEqual( Stem("evigheden"), "evig");});
test("evighedens -> evig", function() {deepEqual( Stem("evighedens"), "evig");});
test("evigheder -> evig", function() {deepEqual( Stem("evigheder"), "evig");});
test("evighedernes -> evighed", function() {deepEqual( Stem("evighedernes"), "evighed");});
test("evigheders -> evighed", function() {deepEqual( Stem("evigheders"), "evighed");});
test("evigheds -> evig", function() {deepEqual( Stem("evigheds"), "evig");});
test("evigt -> evig", function() {deepEqual( Stem("evigt"), "evig");});
test("eviig -> evi", function() {deepEqual( Stem("eviig"), "evi");});
test("evil -> evil", function() {deepEqual( Stem("evil"), "evil");});
test("evindelig -> evind", function() {deepEqual( Stem("evindelig"), "evind");});
test("evindeligt -> evind", function() {deepEqual( Stem("evindeligt"), "evind");});
test("evne -> evn", function() {deepEqual( Stem("evne"), "evn");});
test("evnede -> evned", function() {deepEqual( Stem("evnede"), "evned");});
test("evner -> evn", function() {deepEqual( Stem("evner"), "evn");});
test("evnerikke -> evnerik", function() {deepEqual( Stem("evnerikke"), "evnerik");});
test("evnet -> evn", function() {deepEqual( Stem("evnet"), "evn");});
test("evodia -> evodia", function() {deepEqual( Stem("evodia"), "evodia");});
test("exp -> exp", function() {deepEqual( Stem("exp"), "exp");});
test("ezbajs -> ezbaj", function() {deepEqual( Stem("ezbajs"), "ezbaj");});
test("ezbon -> ezbon", function() {deepEqual( Stem("ezbon"), "ezbon");});
test("ezekias -> ezekia", function() {deepEqual( Stem("ezekias"), "ezekia");});
test("ezekiass -> ezekias", function() {deepEqual( Stem("ezekiass"), "ezekias");});
test("ezekiel -> ezekiel", function() {deepEqual( Stem("ezekiel"), "ezekiel");});
test("ezels -> ezel", function() {deepEqual( Stem("ezels"), "ezel");});
test("ezem -> ezem", function() {deepEqual( Stem("ezem"), "ezem");});
test("ezer -> ezer", function() {deepEqual( Stem("ezer"), "ezer");});
test("ezers -> ezer", function() {deepEqual( Stem("ezers"), "ezer");});
test("ezjongeber -> ezjongeb", function() {deepEqual( Stem("ezjongeber"), "ezjongeb");});
test("ezra -> ezra", function() {deepEqual( Stem("ezra"), "ezra");});
test("ezraiten -> ezrait", function() {deepEqual( Stem("ezraiten"), "ezrait");});
test("ezras -> ezra", function() {deepEqual( Stem("ezras"), "ezra");});
test("ezri -> ezri", function() {deepEqual( Stem("ezri"), "ezri");});
test("f -> f", function() {deepEqual( Stem("f"), "f");});
test("fabler -> fabl", function() {deepEqual( Stem("fabler"), "fabl");});
test("fablerne -> fabl", function() {deepEqual( Stem("fablerne"), "fabl");});
test("fad -> fad", function() {deepEqual( Stem("fad"), "fad");});
test("fade -> fad", function() {deepEqual( Stem("fade"), "fad");});
test("fadene -> fad", function() {deepEqual( Stem("fadene"), "fad");});
test("fader -> fad", function() {deepEqual( Stem("fader"), "fad");});
test("faderen -> fad", function() {deepEqual( Stem("faderen"), "fad");});
test("faderens -> fad", function() {deepEqual( Stem("faderens"), "fad");});
test("faderlighed -> fader", function() {deepEqual( Stem("faderlighed"), "fader");});
test("faderløs -> faderløs", function() {deepEqual( Stem("faderløs"), "faderløs");});
test("faderløse -> faderløs", function() {deepEqual( Stem("faderløse"), "faderløs");});
test("faderløses -> faderløs", function() {deepEqual( Stem("faderløses"), "faderløs");});
test("faders -> fad", function() {deepEqual( Stem("faders"), "fad");});
test("fadet -> fad", function() {deepEqual( Stem("fadet"), "fad");});
test("fage -> fag", function() {deepEqual( Stem("fage"), "fag");});
test("fager -> fag", function() {deepEqual( Stem("fager"), "fag");});
test("fagert -> fagert", function() {deepEqual( Stem("fagert"), "fagert");});
test("fagre -> fagr", function() {deepEqual( Stem("fagre"), "fagr");});
test("fagreste -> fagrest", function() {deepEqual( Stem("fagreste"), "fagrest");});
test("fakkel -> fakkel", function() {deepEqual( Stem("fakkel"), "fakkel");});
test("fakler -> fakl", function() {deepEqual( Stem("fakler"), "fakl");});
test("faklerne -> fakl", function() {deepEqual( Stem("faklerne"), "fakl");});
test("falbyder -> falbyd", function() {deepEqual( Stem("falbyder"), "falbyd");});
test("fald -> fald", function() {deepEqual( Stem("fald"), "fald");});
test("falde -> fald", function() {deepEqual( Stem("falde"), "fald");});
test("faldefærdige -> faldefærd", function() {deepEqual( Stem("faldefærdige"), "faldefærd");});
test("falden -> fald", function() {deepEqual( Stem("falden"), "fald");});
test("faldende -> fald", function() {deepEqual( Stem("faldende"), "fald");});
test("falder -> fald", function() {deepEqual( Stem("falder"), "fald");});
test("faldet -> fald", function() {deepEqual( Stem("faldet"), "fald");});
test("faldgrube -> faldgrub", function() {deepEqual( Stem("faldgrube"), "faldgrub");});
test("faldgruben -> faldgrub", function() {deepEqual( Stem("faldgruben"), "faldgrub");});
test("faldne -> faldn", function() {deepEqual( Stem("faldne"), "faldn");});
test("faldnes -> faldn", function() {deepEqual( Stem("faldnes"), "faldn");});
test("faldt -> fald", function() {deepEqual( Stem("faldt"), "fald");});
test("faleks -> falek", function() {deepEqual( Stem("faleks"), "falek");});
test("faler -> fal", function() {deepEqual( Stem("faler"), "fal");});
test("falke -> falk", function() {deepEqual( Stem("falke"), "falk");});
test("falken -> falk", function() {deepEqual( Stem("falken"), "falk");});
test("falkens -> falk", function() {deepEqual( Stem("falkens"), "falk");});
test("falsk -> falsk", function() {deepEqual( Stem("falsk"), "falsk");});
test("falske -> falsk", function() {deepEqual( Stem("falske"), "falsk");});
test("falskelig -> falsk", function() {deepEqual( Stem("falskelig"), "falsk");});
test("falskhed -> falsk", function() {deepEqual( Stem("falskhed"), "falsk");});
test("falskheds -> falsk", function() {deepEqual( Stem("falskheds"), "falsk");});
test("falskt -> falsk", function() {deepEqual( Stem("falskt"), "falsk");});
test("familie -> famili", function() {deepEqual( Stem("familie"), "famili");});
test("familiefader -> familiefad", function() {deepEqual( Stem("familiefader"), "familiefad");});
test("familielisterne -> familielist", function() {deepEqual( Stem("familielisterne"), "familielist");});
test("familier -> famili", function() {deepEqual( Stem("familier"), "famili");});
test("famle -> faml", function() {deepEqual( Stem("famle"), "faml");});
test("famled -> famled", function() {deepEqual( Stem("famled"), "famled");});
test("famler -> faml", function() {deepEqual( Stem("famler"), "faml");});
test("fandfes -> fandf", function() {deepEqual( Stem("fandfes"), "fandf");});
test("fandt -> fand", function() {deepEqual( Stem("fandt"), "fand");});
test("fandtes -> fand", function() {deepEqual( Stem("fandtes"), "fand");});
test("fanen -> fan", function() {deepEqual( Stem("fanen"), "fan");});
test("fang -> fang", function() {deepEqual( Stem("fang"), "fang");});
test("fange -> fang", function() {deepEqual( Stem("fange"), "fang");});
test("fanged -> fanged", function() {deepEqual( Stem("fanged"), "fanged");});
test("fangede -> fanged", function() {deepEqual( Stem("fangede"), "fanged");});
test("fangedes -> fanged", function() {deepEqual( Stem("fangedes"), "fanged");});
test("fangedragt -> fangedrag", function() {deepEqual( Stem("fangedragt"), "fangedrag");});
test("fangegarn -> fangegarn", function() {deepEqual( Stem("fangegarn"), "fangegarn");});
test("fangehullet -> fangehul", function() {deepEqual( Stem("fangehullet"), "fangehul");});
test("fangehuset -> fangehus", function() {deepEqual( Stem("fangehuset"), "fangehus");});
test("fangen -> fang", function() {deepEqual( Stem("fangen"), "fang");});
test("fangenskab -> fangenskab", function() {deepEqual( Stem("fangenskab"), "fangenskab");});
test("fangenskabet -> fangenskab", function() {deepEqual( Stem("fangenskabet"), "fangenskab");});
test("fangenskabets -> fangenskab", function() {deepEqual( Stem("fangenskabets"), "fangenskab");});
test("fangenskabs -> fangenskab", function() {deepEqual( Stem("fangenskabs"), "fangenskab");});
test("fanger -> fang", function() {deepEqual( Stem("fanger"), "fang");});
test("fangerne -> fang", function() {deepEqual( Stem("fangerne"), "fang");});
test("fangers -> fang", function() {deepEqual( Stem("fangers"), "fang");});
test("fangerummet -> fangerum", function() {deepEqual( Stem("fangerummet"), "fangerum");});
test("fanges -> fang", function() {deepEqual( Stem("fanges"), "fang");});
test("fanget -> fang", function() {deepEqual( Stem("fanget"), "fang");});
test("fangevogteren -> fangevog", function() {deepEqual( Stem("fangevogteren"), "fangevog");});
test("fangne -> fangn", function() {deepEqual( Stem("fangne"), "fangn");});
test("fangnes -> fangn", function() {deepEqual( Stem("fangnes"), "fangn");});
test("fangst -> fangst", function() {deepEqual( Stem("fangst"), "fangst");});
test("fanuels -> fanuel", function() {deepEqual( Stem("fanuels"), "fanuel");});
test("far -> far", function() {deepEqual( Stem("far"), "far");});
test("farao -> farao", function() {deepEqual( Stem("farao"), "farao");});
test("faraos -> farao", function() {deepEqual( Stem("faraos"), "farao");});
test("farbare -> farbar", function() {deepEqual( Stem("farbare"), "farbar");});
test("farbroder -> farbrod", function() {deepEqual( Stem("farbroder"), "farbrod");});
test("farbroders -> farbrod", function() {deepEqual( Stem("farbroders"), "farbrod");});
test("farbrødre -> farbrødr", function() {deepEqual( Stem("farbrødre"), "farbrødr");});
test("farbrødres -> farbrødr", function() {deepEqual( Stem("farbrødres"), "farbrødr");});
test("fare -> far", function() {deepEqual( Stem("fare"), "far");});
test("faren -> far", function() {deepEqual( Stem("faren"), "far");});
test("farende -> far", function() {deepEqual( Stem("farende"), "far");});
test("farer -> far", function() {deepEqual( Stem("farer"), "far");});
test("fares -> far", function() {deepEqual( Stem("fares"), "far");});
test("faret -> far", function() {deepEqual( Stem("faret"), "far");});
test("farisæer -> farisæ", function() {deepEqual( Stem("farisæer"), "farisæ");});
test("farisæere -> farisæ", function() {deepEqual( Stem("farisæere"), "farisæ");});
test("farisæeren -> farisæ", function() {deepEqual( Stem("farisæeren"), "farisæ");});
test("farisæerens -> farisæ", function() {deepEqual( Stem("farisæerens"), "farisæ");});
test("farisæeres -> farisæ", function() {deepEqual( Stem("farisæeres"), "farisæ");});
test("farisæerne -> farisæ", function() {deepEqual( Stem("farisæerne"), "farisæ");});
test("farisæernes -> farisæ", function() {deepEqual( Stem("farisæernes"), "farisæ");});
test("farlig -> far", function() {deepEqual( Stem("farlig"), "far");});
test("farligere -> far", function() {deepEqual( Stem("farligere"), "far");});
test("farligt -> far", function() {deepEqual( Stem("farligt"), "far");});
test("farne -> farn", function() {deepEqual( Stem("farne"), "farn");});
test("farsoter -> farsot", function() {deepEqual( Stem("farsoter"), "farsot");});
test("fart -> fart", function() {deepEqual( Stem("fart"), "fart");});
test("farten -> fart", function() {deepEqual( Stem("farten"), "fart");});
test("farvandet -> farvand", function() {deepEqual( Stem("farvandet"), "farvand");});
test("farve -> farv", function() {deepEqual( Stem("farve"), "farv");});
test("farvede -> farved", function() {deepEqual( Stem("farvede"), "farved");});
test("farver -> farv", function() {deepEqual( Stem("farver"), "farv");});
test("fast -> fast", function() {deepEqual( Stem("fast"), "fast");});
test("faste -> fast", function() {deepEqual( Stem("faste"), "fast");});
test("fastedag -> fastedag", function() {deepEqual( Stem("fastedag"), "fastedag");});
test("fastede -> fasted", function() {deepEqual( Stem("fastede"), "fasted");});
test("fasten -> fast", function() {deepEqual( Stem("fasten"), "fast");});
test("fastende -> fast", function() {deepEqual( Stem("fastende"), "fast");});
test("faster -> fast", function() {deepEqual( Stem("faster"), "fast");});
test("fasters -> fast", function() {deepEqual( Stem("fasters"), "fast");});
test("fastet -> fast", function() {deepEqual( Stem("fastet"), "fast");});
test("fastgjorde -> fastgjord", function() {deepEqual( Stem("fastgjorde"), "fastgjord");});
test("fastgøre -> fastgør", function() {deepEqual( Stem("fastgøre"), "fastgør");});
test("fasthed -> fast", function() {deepEqual( Stem("fasthed"), "fast");});
test("fastheden -> fast", function() {deepEqual( Stem("fastheden"), "fast");});
test("fastholde -> fasthold", function() {deepEqual( Stem("fastholde"), "fasthold");});
test("fastholder -> fasthold", function() {deepEqual( Stem("fastholder"), "fasthold");});
test("fastholdes -> fasthold", function() {deepEqual( Stem("fastholdes"), "fasthold");});
test("fastholdt -> fasthold", function() {deepEqual( Stem("fastholdt"), "fasthold");});
test("fastlandet -> fastland", function() {deepEqual( Stem("fastlandet"), "fastland");});
test("fastsat -> fastsat", function() {deepEqual( Stem("fastsat"), "fastsat");});
test("fastsatte -> fastsat", function() {deepEqual( Stem("fastsatte"), "fastsat");});
test("fastsattes -> fastsat", function() {deepEqual( Stem("fastsattes"), "fastsat");});
test("fastslået -> fastslå", function() {deepEqual( Stem("fastslået"), "fastslå");});
test("fastslås -> fastslå", function() {deepEqual( Stem("fastslås"), "fastslå");});
test("fastsnoet -> fastsno", function() {deepEqual( Stem("fastsnoet"), "fastsno");});
test("faststøbt -> faststøbt", function() {deepEqual( Stem("faststøbt"), "faststøbt");});
test("fastsætte -> fastsæt", function() {deepEqual( Stem("fastsætte"), "fastsæt");});
test("fastsættelse -> fastsæt", function() {deepEqual( Stem("fastsættelse"), "fastsæt");});
test("fastsættelsen -> fastsæt", function() {deepEqual( Stem("fastsættelsen"), "fastsæt");});
test("fastsætter -> fastsæt", function() {deepEqual( Stem("fastsætter"), "fastsæt");});
test("fat -> fat", function() {deepEqual( Stem("fat"), "fat");});
test("fatning -> fatning", function() {deepEqual( Stem("fatning"), "fatning");});
test("fatte -> fat", function() {deepEqual( Stem("fatte"), "fat");});
test("fattede -> fatted", function() {deepEqual( Stem("fattede"), "fatted");});
test("fatter -> fat", function() {deepEqual( Stem("fatter"), "fat");});
test("fattes -> fat", function() {deepEqual( Stem("fattes"), "fat");});
test("fattet -> fat", function() {deepEqual( Stem("fattet"), "fat");});
test("fattig -> fat", function() {deepEqual( Stem("fattig"), "fat");});
test("fattigdom -> fattigdom", function() {deepEqual( Stem("fattigdom"), "fattigdom");});
test("fattige -> fat", function() {deepEqual( Stem("fattige"), "fat");});
test("fattiges -> fat", function() {deepEqual( Stem("fattiges"), "fat");});
test("fattigfolk -> fattigfolk", function() {deepEqual( Stem("fattigfolk"), "fattigfolk");});
test("fattigfolks -> fattigfolk", function() {deepEqual( Stem("fattigfolks"), "fattigfolk");});
test("fattigmand -> fattigmand", function() {deepEqual( Stem("fattigmand"), "fattigmand");});
test("fattigmands -> fattigmand", function() {deepEqual( Stem("fattigmands"), "fattigmand");});
test("fattigste -> fat", function() {deepEqual( Stem("fattigste"), "fat");});
test("favn -> favn", function() {deepEqual( Stem("favn"), "favn");});
test("favne -> favn", function() {deepEqual( Stem("favne"), "favn");});
test("favnede -> favned", function() {deepEqual( Stem("favnede"), "favned");});
test("favnen -> favn", function() {deepEqual( Stem("favnen"), "favn");});
test("favner -> favn", function() {deepEqual( Stem("favner"), "favn");});
test("feber -> feb", function() {deepEqual( Stem("feber"), "feb");});
test("feberen -> feb", function() {deepEqual( Stem("feberen"), "feb");});
test("feberglød -> feberglød", function() {deepEqual( Stem("feberglød"), "feberglød");});
test("fed -> fed", function() {deepEqual( Stem("fed"), "fed");});
test("fede -> fed", function() {deepEqual( Stem("fede"), "fed");});
test("fedekalv -> fedekalv", function() {deepEqual( Stem("fedekalv"), "fedekalv");});
test("fedekalve -> fedekalv", function() {deepEqual( Stem("fedekalve"), "fedekalv");});
test("fedekalven -> fedekalv", function() {deepEqual( Stem("fedekalven"), "fedekalv");});
test("fedekalves -> fedekalv", function() {deepEqual( Stem("fedekalves"), "fedekalv");});
test("fedekvæg -> fedekvæg", function() {deepEqual( Stem("fedekvæg"), "fedekvæg");});
test("fedekvæget -> fedekvæg", function() {deepEqual( Stem("fedekvæget"), "fedekvæg");});
test("fedekvægs -> fedekvæg", function() {deepEqual( Stem("fedekvægs"), "fedekvæg");});
test("fedesti -> fedesti", function() {deepEqual( Stem("fedesti"), "fedesti");});
test("fedet -> fed", function() {deepEqual( Stem("fedet"), "fed");});
test("fedme -> fedm", function() {deepEqual( Stem("fedme"), "fedm");});
test("fedt -> fedt", function() {deepEqual( Stem("fedt"), "fedt");});
test("fedtdele -> fedtdel", function() {deepEqual( Stem("fedtdele"), "fedtdel");});
test("fedtet -> fedt", function() {deepEqual( Stem("fedtet"), "fedt");});
test("fedthalen -> fedthal", function() {deepEqual( Stem("fedthalen"), "fedthal");});
test("fedtstykkerne -> fedtstyk", function() {deepEqual( Stem("fedtstykkerne"), "fedtstyk");});
test("fejder -> fejd", function() {deepEqual( Stem("fejder"), "fejd");});
test("feje -> fej", function() {deepEqual( Stem("feje"), "fej");});
test("fejed -> fejed", function() {deepEqual( Stem("fejed"), "fejed");});
test("fejer -> fej", function() {deepEqual( Stem("fejer"), "fej");});
test("fejeskarn -> fejeskarn", function() {deepEqual( Stem("fejeskarn"), "fejeskarn");});
test("fejet -> fej", function() {deepEqual( Stem("fejet"), "fej");});
test("fejge -> fejg", function() {deepEqual( Stem("fejge"), "fejg");});
test("fejgheds -> fejg", function() {deepEqual( Stem("fejgheds"), "fejg");});
test("fejl -> fejl", function() {deepEqual( Stem("fejl"), "fejl");});
test("fejle -> fejl", function() {deepEqual( Stem("fejle"), "fejl");});
test("fejlen -> fejl", function() {deepEqual( Stem("fejlen"), "fejl");});
test("fejler -> fejl", function() {deepEqual( Stem("fejler"), "fejl");});
test("fejlet -> fejl", function() {deepEqual( Stem("fejlet"), "fejl");});
test("fejltagelse -> fejltag", function() {deepEqual( Stem("fejltagelse"), "fejltag");});
test("fejltrin -> fejltrin", function() {deepEqual( Stem("fejltrin"), "fejltrin");});
test("fejr -> fejr", function() {deepEqual( Stem("fejr"), "fejr");});
test("fejre -> fejr", function() {deepEqual( Stem("fejre"), "fejr");});
test("fejrede -> fejred", function() {deepEqual( Stem("fejrede"), "fejred");});
test("fejrer -> fejr", function() {deepEqual( Stem("fejrer"), "fejr");});
test("fejres -> fejr", function() {deepEqual( Stem("fejres"), "fejr");});
test("fejret -> fejr", function() {deepEqual( Stem("fejret"), "fejr");});
test("feliks -> felik", function() {deepEqual( Stem("feliks"), "felik");});
test("felttegn -> felttegn", function() {deepEqual( Stem("felttegn"), "felttegn");});
test("fem -> fem", function() {deepEqual( Stem("fem"), "fem");});
test("femkant -> femkant", function() {deepEqual( Stem("femkant"), "femkant");});
test("femmede -> femmed", function() {deepEqual( Stem("femmede"), "femmed");});
test("femogfirsindstyve -> femogfirsindstyv", function() {deepEqual( Stem("femogfirsindstyve"), "femogfirsindstyv");});
test("femogtyveårsalderen -> femogtyveårsald", function() {deepEqual( Stem("femogtyveårsalderen"), "femogtyveårsald");});
test("fems -> fem", function() {deepEqual( Stem("fems"), "fem");});
test("femte -> femt", function() {deepEqual( Stem("femte"), "femt");});
test("femtedel -> femtedel", function() {deepEqual( Stem("femtedel"), "femtedel");});
test("femtedele -> femtedel", function() {deepEqual( Stem("femtedele"), "femtedel");});
test("femtedelen -> femtedel", function() {deepEqual( Stem("femtedelen"), "femtedel");});
test("femten -> femt", function() {deepEqual( Stem("femten"), "femt");});
test("femtende -> femt", function() {deepEqual( Stem("femtende"), "femt");});
test("fersk -> fersk", function() {deepEqual( Stem("fersk"), "fersk");});
test("ferskt -> fersk", function() {deepEqual( Stem("ferskt"), "fersk");});
test("fest -> fest", function() {deepEqual( Stem("fest"), "fest");});
test("festdag -> festdag", function() {deepEqual( Stem("festdag"), "festdag");});
test("festdage -> festdag", function() {deepEqual( Stem("festdage"), "festdag");});
test("festen -> fest", function() {deepEqual( Stem("festen"), "fest");});
test("festens -> fest", function() {deepEqual( Stem("festens"), "fest");});
test("fester -> fest", function() {deepEqual( Stem("fester"), "fest");});
test("festerne -> fest", function() {deepEqual( Stem("festerne"), "fest");});
test("festernes -> fest", function() {deepEqual( Stem("festernes"), "fest");});
test("festforsamlinger -> festforsamling", function() {deepEqual( Stem("festforsamlinger"), "festforsamling");});
test("festglæde -> festglæd", function() {deepEqual( Stem("festglæde"), "festglæd");});
test("festjubel -> festjubel", function() {deepEqual( Stem("festjubel"), "festjubel");});
test("festklæder -> festklæd", function() {deepEqual( Stem("festklæder"), "festklæd");});
test("festlig -> fest", function() {deepEqual( Stem("festlig"), "fest");});
test("festlige -> fest", function() {deepEqual( Stem("festlige"), "fest");});
test("festligt -> fest", function() {deepEqual( Stem("festligt"), "fest");});
test("feststed -> feststed", function() {deepEqual( Stem("feststed"), "feststed");});
test("festtider -> festtid", function() {deepEqual( Stem("festtider"), "festtid");});
test("festtoget -> festtog", function() {deepEqual( Stem("festtoget"), "festtog");});
test("festus -> festus", function() {deepEqual( Stem("festus"), "festus");});
test("ffivet -> ffiv", function() {deepEqual( Stem("ffivet"), "ffiv");});
test("fi -> fi", function() {deepEqual( Stem("fi"), "fi");});
test("fides -> fid", function() {deepEqual( Stem("fides"), "fid");});
test("figen -> fig", function() {deepEqual( Stem("figen"), "fig");});
test("figenblade -> figenblad", function() {deepEqual( Stem("figenblade"), "figenblad");});
test("figener -> figen", function() {deepEqual( Stem("figener"), "figen");});
test("figenfræ -> figenfræ", function() {deepEqual( Stem("figenfræ"), "figenfræ");});
test("figenkage -> figenkag", function() {deepEqual( Stem("figenkage"), "figenkag");});
test("figenkager -> figenkag", function() {deepEqual( Stem("figenkager"), "figenkag");});
test("figenkar -> figenkar", function() {deepEqual( Stem("figenkar"), "figenkar");});
test("figenplaster -> figenplast", function() {deepEqual( Stem("figenplaster"), "figenplast");});
test("figentid -> figentid", function() {deepEqual( Stem("figentid"), "figentid");});
test("figentræ -> figentræ", function() {deepEqual( Stem("figentræ"), "figentræ");});
test("figentræer -> figentræ", function() {deepEqual( Stem("figentræer"), "figentræ");});
test("figentræet -> figentræ", function() {deepEqual( Stem("figentræet"), "figentræ");});
test("figentræets -> figentræ", function() {deepEqual( Stem("figentræets"), "figentræ");});
test("figner -> fign", function() {deepEqual( Stem("figner"), "fign");});
test("figurer -> figur", function() {deepEqual( Stem("figurer"), "figur");});
test("fiilisterne -> fiilist", function() {deepEqual( Stem("fiilisterne"), "fiilist");});
test("fik -> fik", function() {deepEqual( Stem("fik"), "fik");});
test("fil -> fil", function() {deepEqual( Stem("fil"), "fil");});
test("filadelfia -> filadelfia", function() {deepEqual( Stem("filadelfia"), "filadelfia");});
test("filbad -> filbad", function() {deepEqual( Stem("filbad"), "filbad");});
test("filemon -> filemon", function() {deepEqual( Stem("filemon"), "filemon");});
test("filetus -> filetus", function() {deepEqual( Stem("filetus"), "filetus");});
test("filidelfia -> filidelfia", function() {deepEqual( Stem("filidelfia"), "filidelfia");});
test("filip -> filip", function() {deepEqual( Stem("filip"), "filip");});
test("filippensere -> filippens", function() {deepEqual( Stem("filippensere"), "filippens");});
test("filipperne -> filip", function() {deepEqual( Stem("filipperne"), "filip");});
test("filippi -> filippi", function() {deepEqual( Stem("filippi"), "filippi");});
test("filips -> filip", function() {deepEqual( Stem("filips"), "filip");});
test("filis -> filis", function() {deepEqual( Stem("filis"), "filis");});
test("filister -> filist", function() {deepEqual( Stem("filister"), "filist");});
test("filisterbyerne -> filisterby", function() {deepEqual( Stem("filisterbyerne"), "filisterby");});
test("filistere -> filist", function() {deepEqual( Stem("filistere"), "filist");});
test("filisteren -> filist", function() {deepEqual( Stem("filisteren"), "filist");});
test("filisterens -> filist", function() {deepEqual( Stem("filisterens"), "filist");});
test("filisterforhuder -> filisterforhud", function() {deepEqual( Stem("filisterforhuder"), "filisterforhud");});
test("filisterfyrster -> filisterfyrst", function() {deepEqual( Stem("filisterfyrster"), "filisterfyrst");});
test("filisterfyrsterne -> filisterfyrst", function() {deepEqual( Stem("filisterfyrsterne"), "filisterfyrst");});
test("filisterhærens -> filisterhær", function() {deepEqual( Stem("filisterhærens"), "filisterhær");});
test("filisterindernes -> filisterind", function() {deepEqual( Stem("filisterindernes"), "filisterind");});
test("filisterkongen -> filisterkong", function() {deepEqual( Stem("filisterkongen"), "filisterkong");});
test("filisterland -> filisterland", function() {deepEqual( Stem("filisterland"), "filisterland");});
test("filisterlandet -> filisterland", function() {deepEqual( Stem("filisterlandet"), "filisterland");});
test("filisterlandets -> filisterland", function() {deepEqual( Stem("filisterlandets"), "filisterland");});
test("filisterlands -> filisterland", function() {deepEqual( Stem("filisterlands"), "filisterland");});
test("filisterne -> filist", function() {deepEqual( Stem("filisterne"), "filist");});
test("filisternes -> filist", function() {deepEqual( Stem("filisternes"), "filist");});
test("filisters -> filist", function() {deepEqual( Stem("filisters"), "filist");});
test("filisterskaren -> filisterskar", function() {deepEqual( Stem("filisterskaren"), "filisterskar");});
test("filistertiden -> filistertid", function() {deepEqual( Stem("filistertiden"), "filistertid");});
test("filistre -> filistr", function() {deepEqual( Stem("filistre"), "filistr");});
test("filistrene -> filistr", function() {deepEqual( Stem("filistrene"), "filistr");});
test("fillige -> fil", function() {deepEqual( Stem("fillige"), "fil");});
test("filologus -> filologus", function() {deepEqual( Stem("filologus"), "filologus");});
test("filosoffer -> filosof", function() {deepEqual( Stem("filosoffer"), "filosof");});
test("fin -> fin", function() {deepEqual( Stem("fin"), "fin");});
test("find -> find", function() {deepEqual( Stem("find"), "find");});
test("finde -> find", function() {deepEqual( Stem("finde"), "find");});
test("finder -> find", function() {deepEqual( Stem("finder"), "find");});
test("findes -> find", function() {deepEqual( Stem("findes"), "find");});
test("fine -> fin", function() {deepEqual( Stem("fine"), "fin");});
test("fineste -> finest", function() {deepEqual( Stem("fineste"), "finest");});
test("finger -> fing", function() {deepEqual( Stem("finger"), "fing");});
test("fingerbredder -> fingerbred", function() {deepEqual( Stem("fingerbredder"), "fingerbred");});
test("fingeren -> fing", function() {deepEqual( Stem("fingeren"), "fing");});
test("fingerringe -> fingerring", function() {deepEqual( Stem("fingerringe"), "fingerring");});
test("fingerspand -> fingerspand", function() {deepEqual( Stem("fingerspand"), "fingerspand");});
test("fingre -> fingr", function() {deepEqual( Stem("fingre"), "fingr");});
test("fingrene -> fingr", function() {deepEqual( Stem("fingrene"), "fingr");});
test("fingres -> fingr", function() {deepEqual( Stem("fingres"), "fingr");});
test("finner -> fin", function() {deepEqual( Stem("finner"), "fin");});
test("fint -> fint", function() {deepEqual( Stem("fint"), "fint");});
test("fir -> fir", function() {deepEqual( Stem("fir"), "fir");});
test("firben -> firb", function() {deepEqual( Stem("firben"), "firb");});
test("firbenet -> firben", function() {deepEqual( Stem("firbenet"), "firben");});
test("fire -> fir", function() {deepEqual( Stem("fire"), "fir");});
test("firede -> fired", function() {deepEqual( Stem("firede"), "fired");});
test("firet -> fir", function() {deepEqual( Stem("firet"), "fir");});
test("firføddede -> firfødded", function() {deepEqual( Stem("firføddede"), "firfødded");});
test("firføddet -> firfød", function() {deepEqual( Stem("firføddet"), "firfød");});
test("firkant -> firkant", function() {deepEqual( Stem("firkant"), "firkant");});
test("firkantede -> firkanted", function() {deepEqual( Stem("firkantede"), "firkanted");});
test("firkantet -> firkant", function() {deepEqual( Stem("firkantet"), "firkant");});
test("firsindstyve -> firsindstyv", function() {deepEqual( Stem("firsindstyve"), "firsindstyv");});
test("fisk -> fisk", function() {deepEqual( Stem("fisk"), "fisk");});
test("fiske -> fisk", function() {deepEqual( Stem("fiske"), "fisk");});
test("fiskedræt -> fiskedræt", function() {deepEqual( Stem("fiskedræt"), "fiskedræt");});
test("fiskegarn -> fiskegarn", function() {deepEqual( Stem("fiskegarn"), "fiskegarn");});
test("fisken -> fisk", function() {deepEqual( Stem("fisken"), "fisk");});
test("fiskene -> fisk", function() {deepEqual( Stem("fiskene"), "fisk");});
test("fiskenes -> fisk", function() {deepEqual( Stem("fiskenes"), "fisk");});
test("fiskens -> fisk", function() {deepEqual( Stem("fiskens"), "fisk");});
test("fiskepelikanen -> fiskepelikan", function() {deepEqual( Stem("fiskepelikanen"), "fiskepelikan");});
test("fiskeporten -> fiskeport", function() {deepEqual( Stem("fiskeporten"), "fiskeport");});
test("fisker -> fisk", function() {deepEqual( Stem("fisker"), "fisk");});
test("fiskere -> fisk", function() {deepEqual( Stem("fiskere"), "fisk");});
test("fiskerkjortel -> fiskerkjortel", function() {deepEqual( Stem("fiskerkjortel"), "fiskerkjortel");});
test("fiskerlauget -> fiskerlaug", function() {deepEqual( Stem("fiskerlauget"), "fiskerlaug");});
test("fiskerne -> fisk", function() {deepEqual( Stem("fiskerne"), "fisk");});
test("fisks -> fisk", function() {deepEqual( Stem("fisks"), "fisk");});
test("fitnt -> fitnt", function() {deepEqual( Stem("fitnt"), "fitnt");});
test("fjed -> fjed", function() {deepEqual( Stem("fjed"), "fjed");});
test("fjederham -> fjederham", function() {deepEqual( Stem("fjederham"), "fjederham");});
test("fjedre -> fjedr", function() {deepEqual( Stem("fjedre"), "fjedr");});
test("fjelde -> fjeld", function() {deepEqual( Stem("fjelde"), "fjeld");});
test("fjeldene -> fjeld", function() {deepEqual( Stem("fjeldene"), "fjeld");});
test("fjeldets -> fjeld", function() {deepEqual( Stem("fjeldets"), "fjeld");});
test("fjeldkløften -> fjeldkløft", function() {deepEqual( Stem("fjeldkløften"), "fjeldkløft");});
test("fjeldkløfter -> fjeldkløft", function() {deepEqual( Stem("fjeldkløfter"), "fjeldkløft");});
test("fjeldtop -> fjeldtop", function() {deepEqual( Stem("fjeldtop"), "fjeldtop");});
test("fjeldvæg -> fjeldvæg", function() {deepEqual( Stem("fjeldvæg"), "fjeldvæg");});
test("fjende -> fjend", function() {deepEqual( Stem("fjende"), "fjend");});
test("fjendehånd -> fjendehånd", function() {deepEqual( Stem("fjendehånd"), "fjendehånd");});
test("fjendeland -> fjendeland", function() {deepEqual( Stem("fjendeland"), "fjendeland");});
test("fjenden -> fjend", function() {deepEqual( Stem("fjenden"), "fjend");});
test("fjendens -> fjend", function() {deepEqual( Stem("fjendens"), "fjend");});
test("fjender -> fjend", function() {deepEqual( Stem("fjender"), "fjend");});
test("fjenderne -> fjend", function() {deepEqual( Stem("fjenderne"), "fjend");});
test("fjendernes -> fjend", function() {deepEqual( Stem("fjendernes"), "fjend");});
test("fjenderog -> fjenderog", function() {deepEqual( Stem("fjenderog"), "fjenderog");});
test("fjenders -> fjend", function() {deepEqual( Stem("fjenders"), "fjend");});
test("fjendervoldte -> fjendervold", function() {deepEqual( Stem("fjendervoldte"), "fjendervold");});
test("fjendes -> fjend", function() {deepEqual( Stem("fjendes"), "fjend");});
test("fjendeskaren -> fjendeskar", function() {deepEqual( Stem("fjendeskaren"), "fjendeskar");});
test("fjendeslag -> fjendeslag", function() {deepEqual( Stem("fjendeslag"), "fjendeslag");});
test("fjendevis -> fjendevis", function() {deepEqual( Stem("fjendevis"), "fjendevis");});
test("fjendevold -> fjendevold", function() {deepEqual( Stem("fjendevold"), "fjendevold");});
test("fjendsk -> fjendsk", function() {deepEqual( Stem("fjendsk"), "fjendsk");});
test("fjendskab -> fjendskab", function() {deepEqual( Stem("fjendskab"), "fjendskab");});
test("fjendskaber -> fjendskab", function() {deepEqual( Stem("fjendskaber"), "fjendskab");});
test("fjendskabet -> fjendskab", function() {deepEqual( Stem("fjendskabet"), "fjendskab");});
test("fjendske -> fjendsk", function() {deepEqual( Stem("fjendske"), "fjendsk");});
test("fjendtlig -> fjend", function() {deepEqual( Stem("fjendtlig"), "fjend");});
test("fjendtlige -> fjend", function() {deepEqual( Stem("fjendtlige"), "fjend");});
test("fjerde -> fjerd", function() {deepEqual( Stem("fjerde"), "fjerd");});
test("fjerdedel -> fjerdedel", function() {deepEqual( Stem("fjerdedel"), "fjerdedel");});
test("fjerdedelen -> fjerdedel", function() {deepEqual( Stem("fjerdedelen"), "fjerdedel");});
test("fjerdingsfyrste -> fjerdingsfyrst", function() {deepEqual( Stem("fjerdingsfyrste"), "fjerdingsfyrst");});
test("fjerdingsfyrsten -> fjerdingsfyrst", function() {deepEqual( Stem("fjerdingsfyrsten"), "fjerdingsfyrst");});
test("fjerkræ -> fjerkræ", function() {deepEqual( Stem("fjerkræ"), "fjerkræ");});
test("fjern -> fjern", function() {deepEqual( Stem("fjern"), "fjern");});
test("fjerne -> fjern", function() {deepEqual( Stem("fjerne"), "fjern");});
test("fjerned -> fjerned", function() {deepEqual( Stem("fjerned"), "fjerned");});
test("fjernede -> fjerned", function() {deepEqual( Stem("fjernede"), "fjerned");});
test("fjernelse -> fjern", function() {deepEqual( Stem("fjernelse"), "fjern");});
test("fjerner -> fjern", function() {deepEqual( Stem("fjerner"), "fjern");});
test("fjernes -> fjern", function() {deepEqual( Stem("fjernes"), "fjern");});
test("fjerneste -> fjernest", function() {deepEqual( Stem("fjerneste"), "fjernest");});
test("fjernet -> fjern", function() {deepEqual( Stem("fjernet"), "fjern");});
test("fjernt -> fjernt", function() {deepEqual( Stem("fjernt"), "fjernt");});
test("fjert -> fjert", function() {deepEqual( Stem("fjert"), "fjert");});
test("fjor -> fjor", function() {deepEqual( Stem("fjor"), "fjor");});
test("fjorten -> fjort", function() {deepEqual( Stem("fjorten"), "fjort");});
test("fjortende -> fjort", function() {deepEqual( Stem("fjortende"), "fjort");});
test("fk -> fk", function() {deepEqual( Stem("fk"), "fk");});
test("fladbrød -> fladbrød", function() {deepEqual( Stem("fladbrød"), "fladbrød");});
test("flade -> flad", function() {deepEqual( Stem("flade"), "flad");});
test("fladerne -> flad", function() {deepEqual( Stem("fladerne"), "flad");});
test("fladt -> fladt", function() {deepEqual( Stem("fladt"), "fladt");});
test("flagermus -> flagermus", function() {deepEqual( Stem("flagermus"), "flagermus");});
test("flagermusen -> flagermus", function() {deepEqual( Stem("flagermusen"), "flagermus");});
test("flagrende -> flagr", function() {deepEqual( Stem("flagrende"), "flagr");});
test("flakke -> flak", function() {deepEqual( Stem("flakke"), "flak");});
test("flakkede -> flakked", function() {deepEqual( Stem("flakkede"), "flakked");});
test("flakken -> flak", function() {deepEqual( Stem("flakken"), "flak");});
test("flakker -> flak", function() {deepEqual( Stem("flakker"), "flak");});
test("flamme -> flam", function() {deepEqual( Stem("flamme"), "flam");});
test("flammen -> flam", function() {deepEqual( Stem("flammen"), "flam");});
test("flammende -> flam", function() {deepEqual( Stem("flammende"), "flam");});
test("flammer -> flam", function() {deepEqual( Stem("flammer"), "flam");});
test("flammesværd -> flammesværd", function() {deepEqual( Stem("flammesværd"), "flammesværd");});
test("flaske -> flask", function() {deepEqual( Stem("flaske"), "flask");});
test("flegon -> flegon", function() {deepEqual( Stem("flegon"), "flegon");});
test("fler -> fler", function() {deepEqual( Stem("fler"), "fler");});
test("flere -> fler", function() {deepEqual( Stem("flere"), "fler");});
test("flesfe -> flesf", function() {deepEqual( Stem("flesfe"), "flesf");});
test("fleste -> flest", function() {deepEqual( Stem("fleste"), "flest");});
test("fletninger -> fletning", function() {deepEqual( Stem("fletninger"), "fletning");});
test("flette -> flet", function() {deepEqual( Stem("flette"), "flet");});
test("fletted -> fletted", function() {deepEqual( Stem("fletted"), "fletted");});
test("flettede -> fletted", function() {deepEqual( Stem("flettede"), "fletted");});
test("fletter -> flet", function() {deepEqual( Stem("fletter"), "flet");});
test("flettet -> flet", function() {deepEqual( Stem("flettet"), "flet");});
test("fletværk -> fletværk", function() {deepEqual( Stem("fletværk"), "fletværk");});
test("fletværker -> fletværk", function() {deepEqual( Stem("fletværker"), "fletværk");});
test("fletværket -> fletværk", function() {deepEqual( Stem("fletværket"), "fletværk");});
test("flid -> flid", function() {deepEqual( Stem("flid"), "flid");});
test("flige -> flig", function() {deepEqual( Stem("flige"), "flig");});
test("fligen -> flig", function() {deepEqual( Stem("fligen"), "flig");});
test("fligene -> flig", function() {deepEqual( Stem("fligene"), "flig");});
test("flinke -> flink", function() {deepEqual( Stem("flinke"), "flink");});
test("flint -> flint", function() {deepEqual( Stem("flint"), "flint");});
test("flinten -> flint", function() {deepEqual( Stem("flinten"), "flint");});
test("flinthårde -> flinthård", function() {deepEqual( Stem("flinthårde"), "flinthård");});
test("flitteges -> flitteg", function() {deepEqual( Stem("flitteges"), "flitteg");});
test("flittige -> flit", function() {deepEqual( Stem("flittige"), "flit");});
test("flittiges -> flit", function() {deepEqual( Stem("flittiges"), "flit");});
test("fljoenaj -> fljoenaj", function() {deepEqual( Stem("fljoenaj"), "fljoenaj");});
test("flod -> flod", function() {deepEqual( Stem("flod"), "flod");});
test("floddalen -> floddal", function() {deepEqual( Stem("floddalen"), "floddal");});
test("floden -> flod", function() {deepEqual( Stem("floden"), "flod");});
test("flodens -> flod", function() {deepEqual( Stem("flodens"), "flod");});
test("floder -> flod", function() {deepEqual( Stem("floder"), "flod");});
test("floderne -> flod", function() {deepEqual( Stem("floderne"), "flod");});
test("floders -> flod", function() {deepEqual( Stem("floders"), "flod");});
test("flodlejet -> flodlej", function() {deepEqual( Stem("flodlejet"), "flodlej");});
test("flodportene -> flodport", function() {deepEqual( Stem("flodportene"), "flodport");});
test("flok -> flok", function() {deepEqual( Stem("flok"), "flok");});
test("flokke -> flok", function() {deepEqual( Stem("flokke"), "flok");});
test("flokkede -> flokked", function() {deepEqual( Stem("flokkede"), "flokked");});
test("flokkedes -> flokked", function() {deepEqual( Stem("flokkedes"), "flokked");});
test("flokken -> flok", function() {deepEqual( Stem("flokken"), "flok");});
test("flokker -> flok", function() {deepEqual( Stem("flokker"), "flok");});
test("flokkes -> flok", function() {deepEqual( Stem("flokkes"), "flok");});
test("flom -> flom", function() {deepEqual( Stem("flom"), "flom");});
test("flor -> flor", function() {deepEqual( Stem("flor"), "flor");});
test("fluer -> fluer", function() {deepEqual( Stem("fluer"), "fluer");});
test("fluerne -> fluern", function() {deepEqual( Stem("fluerne"), "fluern");});
test("flugt -> flugt", function() {deepEqual( Stem("flugt"), "flugt");});
test("flugten -> flugt", function() {deepEqual( Stem("flugten"), "flugt");});
test("flugtsnare -> flugtsnar", function() {deepEqual( Stem("flugtsnare"), "flugtsnar");});
test("fly -> fly", function() {deepEqual( Stem("fly"), "fly");});
test("flyde -> flyd", function() {deepEqual( Stem("flyde"), "flyd");});
test("flydende -> flyd", function() {deepEqual( Stem("flydende"), "flyd");});
test("flyder -> flyd", function() {deepEqual( Stem("flyder"), "flyd");});
test("flydler -> flydl", function() {deepEqual( Stem("flydler"), "flydl");});
test("flyed -> flyed", function() {deepEqual( Stem("flyed"), "flyed");});
test("flyede -> flyed", function() {deepEqual( Stem("flyede"), "flyed");});
test("flyende -> flyend", function() {deepEqual( Stem("flyende"), "flyend");});
test("flygt -> flygt", function() {deepEqual( Stem("flygt"), "flygt");});
test("flygte -> flygt", function() {deepEqual( Stem("flygte"), "flygt");});
test("flygted -> flygted", function() {deepEqual( Stem("flygted"), "flygted");});
test("flygtede -> flygted", function() {deepEqual( Stem("flygtede"), "flygted");});
test("flygtedefor -> flygtedefor", function() {deepEqual( Stem("flygtedefor"), "flygtedefor");});
test("flygtende -> flygt", function() {deepEqual( Stem("flygtende"), "flygt");});
test("flygter -> flygt", function() {deepEqual( Stem("flygter"), "flygt");});
test("flygtet -> flygt", function() {deepEqual( Stem("flygtet"), "flygt");});
test("flygtig -> flygt", function() {deepEqual( Stem("flygtig"), "flygt");});
test("flygtigheden -> flygt", function() {deepEqual( Stem("flygtigheden"), "flygt");});
test("flygtning -> flygtning", function() {deepEqual( Stem("flygtning"), "flygtning");});
test("flygtninge -> flygtning", function() {deepEqual( Stem("flygtninge"), "flygtning");});
test("flygtningen -> flygtning", function() {deepEqual( Stem("flygtningen"), "flygtning");});
test("flygtningene -> flygtning", function() {deepEqual( Stem("flygtningene"), "flygtning");});
test("flyr -> flyr", function() {deepEqual( Stem("flyr"), "flyr");});
test("flyt -> flyt", function() {deepEqual( Stem("flyt"), "flyt");});
test("flytte -> flyt", function() {deepEqual( Stem("flytte"), "flyt");});
test("flyttede -> flytted", function() {deepEqual( Stem("flyttede"), "flytted");});
test("flyttedes -> flytted", function() {deepEqual( Stem("flyttedes"), "flytted");});
test("flytter -> flyt", function() {deepEqual( Stem("flytter"), "flyt");});
test("flyttes -> flyt", function() {deepEqual( Stem("flyttes"), "flyt");});
test("flyttet -> flyt", function() {deepEqual( Stem("flyttet"), "flyt");});
test("flyve -> flyv", function() {deepEqual( Stem("flyve"), "flyv");});
test("flyvende -> flyv", function() {deepEqual( Stem("flyvende"), "flyv");});
test("flyver -> flyv", function() {deepEqual( Stem("flyver"), "flyv");});
test("flå -> flå", function() {deepEqual( Stem("flå"), "flå");});
test("flåd -> flåd", function() {deepEqual( Stem("flåd"), "flåd");});
test("flåddet -> flåd", function() {deepEqual( Stem("flåddet"), "flåd");});
test("flåede -> flåed", function() {deepEqual( Stem("flåede"), "flåed");});
test("flået -> flået", function() {deepEqual( Stem("flået"), "flået");});
test("flår -> flår", function() {deepEqual( Stem("flår"), "flår");});
test("flås -> flås", function() {deepEqual( Stem("flås"), "flås");});
test("flænge -> flæng", function() {deepEqual( Stem("flænge"), "flæng");});
test("flænged -> flænged", function() {deepEqual( Stem("flænged"), "flænged");});
test("flænger -> flæng", function() {deepEqual( Stem("flænger"), "flæng");});
test("flød -> flød", function() {deepEqual( Stem("flød"), "flød");});
test("fløde -> flød", function() {deepEqual( Stem("fløde"), "flød");});
test("flødeost -> flødeost", function() {deepEqual( Stem("flødeost"), "flødeost");});
test("fløj -> fløj", function() {deepEqual( Stem("fløj"), "fløj");});
test("fløje -> fløj", function() {deepEqual( Stem("fløje"), "fløj");});
test("fløjet -> fløj", function() {deepEqual( Stem("fløjet"), "fløj");});
test("fløjt -> fløjt", function() {deepEqual( Stem("fløjt"), "fløjt");});
test("fløjte -> fløjt", function() {deepEqual( Stem("fløjte"), "fløjt");});
test("fløjted -> fløjted", function() {deepEqual( Stem("fløjted"), "fløjted");});
test("fløjten -> fløjt", function() {deepEqual( Stem("fløjten"), "fløjt");});
test("fløjtens -> fløjt", function() {deepEqual( Stem("fløjtens"), "fløjt");});
test("fløjter -> fløjt", function() {deepEqual( Stem("fløjter"), "fløjt");});
test("fløjters -> fløjt", function() {deepEqual( Stem("fløjters"), "fløjt");});
test("fløjtespillere -> fløjtespil", function() {deepEqual( Stem("fløjtespillere"), "fløjtespil");});
test("fløjtespillerne -> fløjtespil", function() {deepEqual( Stem("fløjtespillerne"), "fløjtespil");});
test("fma -> fma", function() {deepEqual( Stem("fma"), "fma");});
test("fmde -> fmde", function() {deepEqual( Stem("fmde"), "fmde");});
test("fmmers -> fmmer", function() {deepEqual( Stem("fmmers"), "fmmer");});
test("fnder -> fnder", function() {deepEqual( Stem("fnder"), "fnder");});
test("fnug -> fnug", function() {deepEqual( Stem("fnug"), "fnug");});
test("fnysen -> fnys", function() {deepEqual( Stem("fnysen"), "fnys");});
test("fnysende -> fnys", function() {deepEqual( Stem("fnysende"), "fnys");});
test("fnyser -> fnys", function() {deepEqual( Stem("fnyser"), "fnys");});
test("fnyste -> fnyst", function() {deepEqual( Stem("fnyste"), "fnyst");});
test("fnøs -> fnøs", function() {deepEqual( Stem("fnøs"), "fnøs");});
test("fo -> fo", function() {deepEqual( Stem("fo"), "fo");});
test("fod -> fod", function() {deepEqual( Stem("fod"), "fod");});
test("fode -> fod", function() {deepEqual( Stem("fode"), "fod");});
test("foden -> fod", function() {deepEqual( Stem("foden"), "fod");});
test("foder -> fod", function() {deepEqual( Stem("foder"), "fod");});
test("fodfolk -> fodfolk", function() {deepEqual( Stem("fodfolk"), "fodfolk");});
test("fodfæste -> fodfæst", function() {deepEqual( Stem("fodfæste"), "fodfæst");});
test("fodgængere -> fodgæng", function() {deepEqual( Stem("fodgængere"), "fodgæng");});
test("fods -> fod", function() {deepEqual( Stem("fods"), "fod");});
test("fodsbred -> fodsbred", function() {deepEqual( Stem("fodsbred"), "fodsbred");});
test("fodsid -> fodsid", function() {deepEqual( Stem("fodsid"), "fodsid");});
test("fodside -> fodsid", function() {deepEqual( Stem("fodside"), "fodsid");});
test("fodskammel -> fodskammel", function() {deepEqual( Stem("fodskammel"), "fodskammel");});
test("fodspor -> fodspor", function() {deepEqual( Stem("fodspor"), "fodspor");});
test("fodstykke -> fodstyk", function() {deepEqual( Stem("fodstykke"), "fodstyk");});
test("fodstykker -> fodstyk", function() {deepEqual( Stem("fodstykker"), "fodstyk");});
test("fodstykkerne -> fodstyk", function() {deepEqual( Stem("fodstykkerne"), "fodstyk");});
test("fodstykket -> fodstyk", function() {deepEqual( Stem("fodstykket"), "fodstyk");});
test("fodsål -> fodsål", function() {deepEqual( Stem("fodsål"), "fodsål");});
test("fodsåler -> fodsål", function() {deepEqual( Stem("fodsåler"), "fodsål");});
test("fodsålers -> fodsål", function() {deepEqual( Stem("fodsålers"), "fodsål");});
test("fodtrin -> fodtrin", function() {deepEqual( Stem("fodtrin"), "fodtrin");});
test("fodtvæt -> fodtvæt", function() {deepEqual( Stem("fodtvæt"), "fodtvæt");});
test("foged -> foged", function() {deepEqual( Stem("foged"), "foged");});
test("fogedens -> foged", function() {deepEqual( Stem("fogedens"), "foged");});
test("fogeder -> foged", function() {deepEqual( Stem("fogeder"), "foged");});
test("fogederne -> foged", function() {deepEqual( Stem("fogederne"), "foged");});
test("fogedernes -> foged", function() {deepEqual( Stem("fogedernes"), "foged");});
test("fold -> fold", function() {deepEqual( Stem("fold"), "fold");});
test("folde -> fold", function() {deepEqual( Stem("folde"), "fold");});
test("folden -> fold", function() {deepEqual( Stem("folden"), "fold");});
test("foldene -> fold", function() {deepEqual( Stem("foldene"), "fold");});
test("fole -> fol", function() {deepEqual( Stem("fole"), "fol");});
test("foler -> fol", function() {deepEqual( Stem("foler"), "fol");});
test("folk -> folk", function() {deepEqual( Stem("folk"), "folk");});
test("folkebetvinger -> folkebetving", function() {deepEqual( Stem("folkebetvinger"), "folkebetving");});
test("folkef -> folkef", function() {deepEqual( Stem("folkef"), "folkef");});
test("folkeflokken -> folkeflok", function() {deepEqual( Stem("folkeflokken"), "folkeflok");});
test("folkeforsamling -> folkeforsamling", function() {deepEqual( Stem("folkeforsamling"), "folkeforsamling");});
test("folkeforsamlingen -> folkeforsamling", function() {deepEqual( Stem("folkeforsamlingen"), "folkeforsamling");});
test("folkefs -> folkef", function() {deepEqual( Stem("folkefs"), "folkef");});
test("folkefærd -> folkefærd", function() {deepEqual( Stem("folkefærd"), "folkefærd");});
test("folkefærdene -> folkefærd", function() {deepEqual( Stem("folkefærdene"), "folkefærd");});
test("folkefærds -> folkefærd", function() {deepEqual( Stem("folkefærds"), "folkefærd");});
test("folkehærger -> folkehærg", function() {deepEqual( Stem("folkehærger"), "folkehærg");});
test("folkekampe -> folkekamp", function() {deepEqual( Stem("folkekampe"), "folkekamp");});
test("folkel -> folkel", function() {deepEqual( Stem("folkel"), "folkel");});
test("folkemunde -> folkemund", function() {deepEqual( Stem("folkemunde"), "folkemund");});
test("folkemængden -> folkemæng", function() {deepEqual( Stem("folkemængden"), "folkemæng");});
test("folkene -> folk", function() {deepEqual( Stem("folkene"), "folk");});
test("folkenes -> folk", function() {deepEqual( Stem("folkenes"), "folk");});
test("folkeopløb -> folkeopløb", function() {deepEqual( Stem("folkeopløb"), "folkeopløb");});
test("folkepagt -> folkepag", function() {deepEqual( Stem("folkepagt"), "folkepag");});
test("folkerig -> folker", function() {deepEqual( Stem("folkerig"), "folker");});
test("folkeskare -> folkeskar", function() {deepEqual( Stem("folkeskare"), "folkeskar");});
test("folkeskaren -> folkeskar", function() {deepEqual( Stem("folkeskaren"), "folkeskar");});
test("folkeslag -> folkeslag", function() {deepEqual( Stem("folkeslag"), "folkeslag");});
test("folkeslagene -> folkeslag", function() {deepEqual( Stem("folkeslagene"), "folkeslag");});
test("folkeslagenes -> folkeslag", function() {deepEqual( Stem("folkeslagenes"), "folkeslag");});
test("folkeslags -> folkeslag", function() {deepEqual( Stem("folkeslags"), "folkeslag");});
test("folkestammer -> folkestam", function() {deepEqual( Stem("folkestammer"), "folkestam");});
test("folkesværm -> folkesværm", function() {deepEqual( Stem("folkesværm"), "folkesværm");});
test("folket -> folk", function() {deepEqual( Stem("folket"), "folk");});
test("folketomme -> folketom", function() {deepEqual( Stem("folketomme"), "folketom");});
test("folketomt -> folketomt", function() {deepEqual( Stem("folketomt"), "folketomt");});
test("folkets -> folk", function() {deepEqual( Stem("folkets"), "folk");});
test("folkett -> folket", function() {deepEqual( Stem("folkett"), "folket");});
test("folketællingen -> folketælling", function() {deepEqual( Stem("folketællingen"), "folketælling");});
test("folks -> folk", function() {deepEqual( Stem("folks"), "folk");});
test("folktællingen -> folktælling", function() {deepEqual( Stem("folktællingen"), "folktælling");});
test("for -> for", function() {deepEqual( Stem("for"), "for");});
test("foragt -> forag", function() {deepEqual( Stem("foragt"), "forag");});
test("foragte -> forag", function() {deepEqual( Stem("foragte"), "forag");});
test("foragtede -> foragted", function() {deepEqual( Stem("foragtede"), "foragted");});
test("foragter -> forag", function() {deepEqual( Stem("foragter"), "forag");});
test("foragtere -> forag", function() {deepEqual( Stem("foragtere"), "forag");});
test("foragtes -> forag", function() {deepEqual( Stem("foragtes"), "forag");});
test("foragtet -> forag", function() {deepEqual( Stem("foragtet"), "forag");});
test("foran -> foran", function() {deepEqual( Stem("foran"), "foran");});
test("forandre -> forandr", function() {deepEqual( Stem("forandre"), "forandr");});
test("forandrede -> forandred", function() {deepEqual( Stem("forandrede"), "forandred");});
test("forandret -> forandr", function() {deepEqual( Stem("forandret"), "forandr");});
test("forandring -> forandring", function() {deepEqual( Stem("forandring"), "forandring");});
test("forarbejdet -> forarbejd", function() {deepEqual( Stem("forarbejdet"), "forarbejd");});
test("forarge -> forarg", function() {deepEqual( Stem("forarge"), "forarg");});
test("forargede -> forarged", function() {deepEqual( Stem("forargede"), "forarged");});
test("forargedes -> forarged", function() {deepEqual( Stem("forargedes"), "forarged");});
test("forargelse -> forarg", function() {deepEqual( Stem("forargelse"), "forarg");});
test("forargelseme -> forargelsem", function() {deepEqual( Stem("forargelseme"), "forargelsem");});
test("forargelsen -> forarg", function() {deepEqual( Stem("forargelsen"), "forarg");});
test("forargelser -> forarg", function() {deepEqual( Stem("forargelser"), "forarg");});
test("forargelserne -> forarg", function() {deepEqual( Stem("forargelserne"), "forarg");});
test("forargelses -> forarg", function() {deepEqual( Stem("forargelses"), "forarg");});
test("forarger -> forarg", function() {deepEqual( Stem("forarger"), "forarg");});
test("forarges -> forarg", function() {deepEqual( Stem("forarges"), "forarg");});
test("forarget -> forarg", function() {deepEqual( Stem("forarget"), "forarg");});
test("forarmes -> forarm", function() {deepEqual( Stem("forarmes"), "forarm");});
test("forarmet -> forarm", function() {deepEqual( Stem("forarmet"), "forarm");});
test("forband -> forband", function() {deepEqual( Stem("forband"), "forband");});
test("forbande -> forband", function() {deepEqual( Stem("forbande"), "forband");});
test("forbandede -> forbanded", function() {deepEqual( Stem("forbandede"), "forbanded");});
test("forbandelse -> forband", function() {deepEqual( Stem("forbandelse"), "forband");});
test("forbandelsen -> forband", function() {deepEqual( Stem("forbandelsen"), "forband");});
test("forbandelsens -> forband", function() {deepEqual( Stem("forbandelsens"), "forband");});
test("forbandelser -> forband", function() {deepEqual( Stem("forbandelser"), "forband");});
test("forbandelsesord -> forbandelsesord", function() {deepEqual( Stem("forbandelsesord"), "forbandelsesord");});
test("forbandelsesvand -> forbandelsesvand", function() {deepEqual( Stem("forbandelsesvand"), "forbandelsesvand");});
test("forbandelsesvandet -> forbandelsesvand", function() {deepEqual( Stem("forbandelsesvandet"), "forbandelsesvand");});
test("forbander -> forband", function() {deepEqual( Stem("forbander"), "forband");});
test("forbandes -> forband", function() {deepEqual( Stem("forbandes"), "forband");});
test("forbandet -> forband", function() {deepEqual( Stem("forbandet"), "forband");});
test("forbandt -> forband", function() {deepEqual( Stem("forbandt"), "forband");});
test("forbarm -> forbarm", function() {deepEqual( Stem("forbarm"), "forbarm");});
test("forbarme -> forbarm", function() {deepEqual( Stem("forbarme"), "forbarm");});
test("forbarmede -> forbarmed", function() {deepEqual( Stem("forbarmede"), "forbarmed");});
test("forbarmer -> forbarm", function() {deepEqual( Stem("forbarmer"), "forbarm");});
test("forbarmet -> forbarm", function() {deepEqual( Stem("forbarmet"), "forbarm");});
test("forbavsede -> forbavsed", function() {deepEqual( Stem("forbavsede"), "forbavsed");});
test("forbavsedes -> forbavsed", function() {deepEqual( Stem("forbavsedes"), "forbavsed");});
test("forbavselse -> forbavs", function() {deepEqual( Stem("forbavselse"), "forbavs");});
test("forbedring -> forbedring", function() {deepEqual( Stem("forbedring"), "forbedring");});
test("forbedringer -> forbedring", function() {deepEqual( Stem("forbedringer"), "forbedring");});
test("forberedelse -> forbered", function() {deepEqual( Stem("forberedelse"), "forbered");});
test("forberedelser -> forbered", function() {deepEqual( Stem("forberedelser"), "forbered");});
test("forbi -> forbi", function() {deepEqual( Stem("forbi"), "forbi");});
test("forbigangent -> forbigangent", function() {deepEqual( Stem("forbigangent"), "forbigangent");});
test("forbigangne -> forbigangn", function() {deepEqual( Stem("forbigangne"), "forbigangn");});
test("forbigå -> forbigå", function() {deepEqual( Stem("forbigå"), "forbigå");});
test("forbillede -> forbilled", function() {deepEqual( Stem("forbillede"), "forbilled");});
test("forbilleder -> forbilled", function() {deepEqual( Stem("forbilleder"), "forbilled");});
test("forbilledligt -> forbilled", function() {deepEqual( Stem("forbilledligt"), "forbilled");});
test("forbinde -> forbind", function() {deepEqual( Stem("forbinde"), "forbind");});
test("forbindelse -> forbind", function() {deepEqual( Stem("forbindelse"), "forbind");});
test("forbinder -> forbind", function() {deepEqual( Stem("forbinder"), "forbind");});
test("forbindes -> forbind", function() {deepEqual( Stem("forbindes"), "forbind");});
test("forbitrelse -> forbitr", function() {deepEqual( Stem("forbitrelse"), "forbitr");});
test("forbitrelsen -> forbitr", function() {deepEqual( Stem("forbitrelsen"), "forbitr");});
test("forbitres -> forbitr", function() {deepEqual( Stem("forbitres"), "forbitr");});
test("forblev -> forblev", function() {deepEqual( Stem("forblev"), "forblev");});
test("forblindet -> forblind", function() {deepEqual( Stem("forblindet"), "forblind");});
test("forblive -> forbliv", function() {deepEqual( Stem("forblive"), "forbliv");});
test("forbliver -> forbliv", function() {deepEqual( Stem("forbliver"), "forbliv");});
test("forblæste -> forblæst", function() {deepEqual( Stem("forblæste"), "forblæst");});
test("forbrudt -> forbrud", function() {deepEqual( Stem("forbrudt"), "forbrud");});
test("forbruges -> forbrug", function() {deepEqual( Stem("forbruges"), "forbrug");});
test("forbrydelse -> forbryd", function() {deepEqual( Stem("forbrydelse"), "forbryd");});
test("forbryder -> forbryd", function() {deepEqual( Stem("forbryder"), "forbryd");});
test("forbryderisk -> forbryderisk", function() {deepEqual( Stem("forbryderisk"), "forbryderisk");});
test("forbrændt -> forbrænd", function() {deepEqual( Stem("forbrændt"), "forbrænd");});
test("forbrød -> forbrød", function() {deepEqual( Stem("forbrød"), "forbrød");});
test("forbud -> forbud", function() {deepEqual( Stem("forbud"), "forbud");});
test("forbudet -> forbud", function() {deepEqual( Stem("forbudet"), "forbud");});
test("forbudt -> forbud", function() {deepEqual( Stem("forbudt"), "forbud");});
test("forbund -> forbund", function() {deepEqual( Stem("forbund"), "forbund");});
test("forbunden -> forbund", function() {deepEqual( Stem("forbunden"), "forbund");});
test("forbundet -> forbund", function() {deepEqual( Stem("forbundet"), "forbund");});
test("forbundne -> forbundn", function() {deepEqual( Stem("forbundne"), "forbundn");});
test("forbundsfæller -> forbundsfæl", function() {deepEqual( Stem("forbundsfæller"), "forbundsfæl");});
test("forbyde -> forbyd", function() {deepEqual( Stem("forbyde"), "forbyd");});
test("forbyder -> forbyd", function() {deepEqual( Stem("forbyder"), "forbyd");});
test("forbød -> forbød", function() {deepEqual( Stem("forbød"), "forbød");});
test("forbøde -> forbød", function() {deepEqual( Stem("forbøde"), "forbød");});
test("forbøn -> forbøn", function() {deepEqual( Stem("forbøn"), "forbøn");});
test("forbønner -> forbøn", function() {deepEqual( Stem("forbønner"), "forbøn");});
test("fordel -> fordel", function() {deepEqual( Stem("fordel"), "fordel");});
test("fordels -> fordel", function() {deepEqual( Stem("fordels"), "fordel");});
test("fordelt -> fordelt", function() {deepEqual( Stem("fordelt"), "fordelt");});
test("fordelte -> fordelt", function() {deepEqual( Stem("fordelte"), "fordelt");});
test("fordi -> fordi", function() {deepEqual( Stem("fordi"), "fordi");});
test("fordin -> fordin", function() {deepEqual( Stem("fordin"), "fordin");});
test("fordrage -> fordrag", function() {deepEqual( Stem("fordrage"), "fordrag");});
test("fordre -> fordr", function() {deepEqual( Stem("fordre"), "fordr");});
test("fordreje -> fordrej", function() {deepEqual( Stem("fordreje"), "fordrej");});
test("fordrejer -> fordrej", function() {deepEqual( Stem("fordrejer"), "fordrej");});
test("fordrev -> fordrev", function() {deepEqual( Stem("fordrev"), "fordrev");});
test("fordrevet -> fordrev", function() {deepEqual( Stem("fordrevet"), "fordrev");});
test("fordrevne -> fordrevn", function() {deepEqual( Stem("fordrevne"), "fordrevn");});
test("fordring -> fordring", function() {deepEqual( Stem("fordring"), "fordring");});
test("fordum -> fordum", function() {deepEqual( Stem("fordum"), "fordum");});
test("fordums -> fordum", function() {deepEqual( Stem("fordums"), "fordum");});
test("fordunkler -> fordunkl", function() {deepEqual( Stem("fordunkler"), "fordunkl");});
test("fordybning -> fordybning", function() {deepEqual( Stem("fordybning"), "fordybning");});
test("fordybninger -> fordybning", function() {deepEqual( Stem("fordybninger"), "fordybning");});
test("fordærv -> fordærv", function() {deepEqual( Stem("fordærv"), "fordærv");});
test("fordærve -> fordærv", function() {deepEqual( Stem("fordærve"), "fordærv");});
test("fordærvede -> fordærved", function() {deepEqual( Stem("fordærvede"), "fordærved");});
test("fordærvedes -> fordærved", function() {deepEqual( Stem("fordærvedes"), "fordærved");});
test("fordærvelige -> fordærv", function() {deepEqual( Stem("fordærvelige"), "fordærv");});
test("fordærveligt -> fordærv", function() {deepEqual( Stem("fordærveligt"), "fordærv");});
test("fordærvelse -> fordærv", function() {deepEqual( Stem("fordærvelse"), "fordærv");});
test("fordærvelsen -> fordærv", function() {deepEqual( Stem("fordærvelsen"), "fordærv");});
test("fordærvelsens -> fordærv", function() {deepEqual( Stem("fordærvelsens"), "fordærv");});
test("fordærver -> fordærv", function() {deepEqual( Stem("fordærver"), "fordærv");});
test("fordærves -> fordærv", function() {deepEqual( Stem("fordærves"), "fordærv");});
test("fordærvet -> fordærv", function() {deepEqual( Stem("fordærvet"), "fordærv");});
test("fordøm -> fordøm", function() {deepEqual( Stem("fordøm"), "fordøm");});
test("fordømme -> fordøm", function() {deepEqual( Stem("fordømme"), "fordøm");});
test("fordømmelse -> fordøm", function() {deepEqual( Stem("fordømmelse"), "fordøm");});
test("fordømmelsens -> fordøm", function() {deepEqual( Stem("fordømmelsens"), "fordøm");});
test("fordømmer -> fordøm", function() {deepEqual( Stem("fordømmer"), "fordøm");});
test("fordømmes -> fordøm", function() {deepEqual( Stem("fordømmes"), "fordøm");});
test("fordømt -> fordømt", function() {deepEqual( Stem("fordømt"), "fordømt");});
test("fordømte -> fordømt", function() {deepEqual( Stem("fordømte"), "fordømt");});
test("fore -> for", function() {deepEqual( Stem("fore"), "for");});
test("forebragte -> forebrag", function() {deepEqual( Stem("forebragte"), "forebrag");});
test("forebringe -> forebring", function() {deepEqual( Stem("forebringe"), "forebring");});
test("forebringer -> forebring", function() {deepEqual( Stem("forebringer"), "forebring");});
test("forefaldende -> forefald", function() {deepEqual( Stem("forefaldende"), "forefald");});
test("foregik -> foregik", function() {deepEqual( Stem("foregik"), "foregik");});
test("foregivende -> foregiv", function() {deepEqual( Stem("foregivende"), "foregiv");});
test("forehavende -> forehav", function() {deepEqual( Stem("forehavende"), "forehav");});
test("forehold -> forehold", function() {deepEqual( Stem("forehold"), "forehold");});
test("foreholder -> forehold", function() {deepEqual( Stem("foreholder"), "forehold");});
test("forekom -> forekom", function() {deepEqual( Stem("forekom"), "forekom");});
test("forekomme -> forekom", function() {deepEqual( Stem("forekomme"), "forekom");});
test("forekommer -> forekom", function() {deepEqual( Stem("forekommer"), "forekom");});
test("forelagde -> forelag", function() {deepEqual( Stem("forelagde"), "forelag");});
test("forelagt -> forelag", function() {deepEqual( Stem("forelagt"), "forelag");});
test("forelå -> forelå", function() {deepEqual( Stem("forelå"), "forelå");});
test("forelægge -> forelæg", function() {deepEqual( Stem("forelægge"), "forelæg");});
test("forelægger -> forelæg", function() {deepEqual( Stem("forelægger"), "forelæg");});
test("forelægges -> forelæg", function() {deepEqual( Stem("forelægges"), "forelæg");});
test("forelæse -> forelæs", function() {deepEqual( Stem("forelæse"), "forelæs");});
test("forelæses -> forelæs", function() {deepEqual( Stem("forelæses"), "forelæs");});
test("forelæsningen -> forelæsning", function() {deepEqual( Stem("forelæsningen"), "forelæsning");});
test("forelæst -> forelæst", function() {deepEqual( Stem("forelæst"), "forelæst");});
test("forelæste -> forelæst", function() {deepEqual( Stem("forelæste"), "forelæst");});
test("forene -> for", function() {deepEqual( Stem("forene"), "for");});
test("forenede -> forened", function() {deepEqual( Stem("forenede"), "forened");});
test("forenet -> foren", function() {deepEqual( Stem("forenet"), "foren");});
test("forening -> forening", function() {deepEqual( Stem("forening"), "forening");});
test("foresagde -> foresag", function() {deepEqual( Stem("foresagde"), "foresag");});
test("foresatte -> foresat", function() {deepEqual( Stem("foresatte"), "foresat");});
test("foreskrev -> foreskrev", function() {deepEqual( Stem("foreskrev"), "foreskrev");});
test("foreskreven -> foreskrev", function() {deepEqual( Stem("foreskreven"), "foreskrev");});
test("foreskrevet -> foreskrev", function() {deepEqual( Stem("foreskrevet"), "foreskrev");});
test("foreskrevne -> foreskrevn", function() {deepEqual( Stem("foreskrevne"), "foreskrevn");});
test("foreskriver -> foreskriv", function() {deepEqual( Stem("foreskriver"), "foreskriv");});
test("foreslog -> foreslog", function() {deepEqual( Stem("foreslog"), "foreslog");});
test("foreslår -> foreslår", function() {deepEqual( Stem("foreslår"), "foreslår");});
test("forestillede -> forestilled", function() {deepEqual( Stem("forestillede"), "forestilled");});
test("forestod -> forestod", function() {deepEqual( Stem("forestod"), "forestod");});
test("forestå -> forestå", function() {deepEqual( Stem("forestå"), "forestå");});
test("forestående -> forestå", function() {deepEqual( Stem("forestående"), "forestå");});
test("forestået -> forestå", function() {deepEqual( Stem("forestået"), "forestå");});
test("forestår -> forestår", function() {deepEqual( Stem("forestår"), "forestår");});
test("foretage -> foretag", function() {deepEqual( Stem("foretage"), "foretag");});
test("foretagender -> foretagend", function() {deepEqual( Stem("foretagender"), "foretagend");});
test("foretager -> foretag", function() {deepEqual( Stem("foretager"), "foretag");});
test("foretog -> foretog", function() {deepEqual( Stem("foretog"), "foretog");});
test("foretrak -> foretrak", function() {deepEqual( Stem("foretrak"), "foretrak");});
test("foretræde -> foretræd", function() {deepEqual( Stem("foretræde"), "foretræd");});
test("foretrækker -> foretræk", function() {deepEqual( Stem("foretrækker"), "foretræk");});
test("foretrækkes -> foretræk", function() {deepEqual( Stem("foretrækkes"), "foretræk");});
test("forfalde -> forfald", function() {deepEqual( Stem("forfalde"), "forfald");});
test("forfaldne -> forfaldn", function() {deepEqual( Stem("forfaldne"), "forfaldn");});
test("forfalske -> forfalsk", function() {deepEqual( Stem("forfalske"), "forfalsk");});
test("forfalte -> forfalt", function() {deepEqual( Stem("forfalte"), "forfalt");});
test("forfatte -> forfat", function() {deepEqual( Stem("forfatte"), "forfat");});
test("forfra -> forfra", function() {deepEqual( Stem("forfra"), "forfra");});
test("forfremmedes -> forfremmed", function() {deepEqual( Stem("forfremmedes"), "forfremmed");});
test("forfulgt -> forfulg", function() {deepEqual( Stem("forfulgt"), "forfulg");});
test("forfulgte -> forfulg", function() {deepEqual( Stem("forfulgte"), "forfulg");});
test("forfædre -> forfædr", function() {deepEqual( Stem("forfædre"), "forfædr");});
test("forfædres -> forfædr", function() {deepEqual( Stem("forfædres"), "forfædr");});
test("forfængelige -> forfæng", function() {deepEqual( Stem("forfængelige"), "forfæng");});
test("forfængeligheden -> forfæng", function() {deepEqual( Stem("forfængeligheden"), "forfæng");});
test("forfængeligt -> forfæng", function() {deepEqual( Stem("forfængeligt"), "forfæng");});
test("forfærde -> forfærd", function() {deepEqual( Stem("forfærde"), "forfærd");});
test("forfærdede -> forfærded", function() {deepEqual( Stem("forfærdede"), "forfærded");});
test("forfærdedes -> forfærded", function() {deepEqual( Stem("forfærdedes"), "forfærded");});
test("forfærdelig -> forfærd", function() {deepEqual( Stem("forfærdelig"), "forfærd");});
test("forfærdelige -> forfærd", function() {deepEqual( Stem("forfærdelige"), "forfærd");});
test("forfærdeligt -> forfærd", function() {deepEqual( Stem("forfærdeligt"), "forfærd");});
test("forfærdelse -> forfærd", function() {deepEqual( Stem("forfærdelse"), "forfærd");});
test("forfærdende -> forfærd", function() {deepEqual( Stem("forfærdende"), "forfærd");});
test("forfærder -> forfærd", function() {deepEqual( Stem("forfærder"), "forfærd");});
test("forfærdes -> forfærd", function() {deepEqual( Stem("forfærdes"), "forfærd");});
test("forfærdet -> forfærd", function() {deepEqual( Stem("forfærdet"), "forfærd");});
test("forfølg -> forfølg", function() {deepEqual( Stem("forfølg"), "forfølg");});
test("forfølge -> forfølg", function() {deepEqual( Stem("forfølge"), "forfølg");});
test("forfølgelse -> forfølg", function() {deepEqual( Stem("forfølgelse"), "forfølg");});
test("forfølgelsen -> forfølg", function() {deepEqual( Stem("forfølgelsen"), "forfølg");});
test("forfølgelser -> forfølg", function() {deepEqual( Stem("forfølgelser"), "forfølg");});
test("forfølger -> forfølg", function() {deepEqual( Stem("forfølger"), "forfølg");});
test("forfølgere -> forfølg", function() {deepEqual( Stem("forfølgere"), "forfølg");});
test("forfølgerne -> forfølg", function() {deepEqual( Stem("forfølgerne"), "forfølg");});
test("forfølgernes -> forfølg", function() {deepEqual( Stem("forfølgernes"), "forfølg");});
test("forfølges -> forfølg", function() {deepEqual( Stem("forfølges"), "forfølg");});
test("forfømte -> forfømt", function() {deepEqual( Stem("forfømte"), "forfømt");});
test("forføre -> forfør", function() {deepEqual( Stem("forføre"), "forfør");});
test("forførelse -> forfør", function() {deepEqual( Stem("forførelse"), "forfør");});
test("forførende -> forfør", function() {deepEqual( Stem("forførende"), "forfør");});
test("forfører -> forfør", function() {deepEqual( Stem("forfører"), "forfør");});
test("forførere -> forfør", function() {deepEqual( Stem("forførere"), "forfør");});
test("forføreren -> forfør", function() {deepEqual( Stem("forføreren"), "forfør");});
test("forføres -> forfør", function() {deepEqual( Stem("forføres"), "forfør");});
test("forført -> forført", function() {deepEqual( Stem("forført"), "forført");});
test("forførte -> forført", function() {deepEqual( Stem("forførte"), "forført");});
test("forgang -> forgang", function() {deepEqual( Stem("forgang"), "forgang");});
test("forgik -> forgik", function() {deepEqual( Stem("forgik"), "forgik");});
test("forgreb -> forgreb", function() {deepEqual( Stem("forgreb"), "forgreb");});
test("forgrebet -> forgreb", function() {deepEqual( Stem("forgrebet"), "forgreb");});
test("forgræmmet -> forgræm", function() {deepEqual( Stem("forgræmmet"), "forgræm");});
test("forgyldes -> forgyld", function() {deepEqual( Stem("forgyldes"), "forgyld");});
test("forgå -> forgå", function() {deepEqual( Stem("forgå"), "forgå");});
test("forgår -> forgår", function() {deepEqual( Stem("forgår"), "forgår");});
test("forgård -> forgård", function() {deepEqual( Stem("forgård"), "forgård");});
test("forgårde -> forgård", function() {deepEqual( Stem("forgårde"), "forgård");});
test("forgården -> forgård", function() {deepEqual( Stem("forgården"), "forgård");});
test("forgårdene -> forgård", function() {deepEqual( Stem("forgårdene"), "forgård");});
test("forgårdens -> forgård", function() {deepEqual( Stem("forgårdens"), "forgård");});
test("forgårds -> forgård", function() {deepEqual( Stem("forgårds"), "forgård");});
test("forgårdsomhæng -> forgårdsomhæng", function() {deepEqual( Stem("forgårdsomhæng"), "forgårdsomhæng");});
test("forgårs -> forgår", function() {deepEqual( Stem("forgårs"), "forgår");});
test("forgældede -> forgælded", function() {deepEqual( Stem("forgældede"), "forgælded");});
test("forgængelig -> forgæng", function() {deepEqual( Stem("forgængelig"), "forgæng");});
test("forgængelige -> forgæng", function() {deepEqual( Stem("forgængelige"), "forgæng");});
test("forgænger -> forgæng", function() {deepEqual( Stem("forgænger"), "forgæng");});
test("forgængere -> forgæng", function() {deepEqual( Stem("forgængere"), "forgæng");});
test("forgæves -> forgæv", function() {deepEqual( Stem("forgæves"), "forgæv");});
test("forhadt -> forhad", function() {deepEqual( Stem("forhadt"), "forhad");});
test("forhadte -> forhad", function() {deepEqual( Stem("forhadte"), "forhad");});
test("forhal -> forhal", function() {deepEqual( Stem("forhal"), "forhal");});
test("forhaler -> forhal", function() {deepEqual( Stem("forhaler"), "forhal");});
test("forhaling -> forhaling", function() {deepEqual( Stem("forhaling"), "forhaling");});
test("forhallen -> forhal", function() {deepEqual( Stem("forhallen"), "forhal");});
test("forhallens -> forhal", function() {deepEqual( Stem("forhallens"), "forhal");});
test("forhaller -> forhal", function() {deepEqual( Stem("forhaller"), "forhal");});
test("forham -> forham", function() {deepEqual( Stem("forham"), "forham");});
test("forhandelse -> forhand", function() {deepEqual( Stem("forhandelse"), "forhand");});
test("forhandlede -> forhandled", function() {deepEqual( Stem("forhandlede"), "forhandled");});
test("forhandlet -> forhandl", function() {deepEqual( Stem("forhandlet"), "forhandl");});
test("forhans -> forhan", function() {deepEqual( Stem("forhans"), "forhan");});
test("forhast -> forhast", function() {deepEqual( Stem("forhast"), "forhast");});
test("forhastet -> forhast", function() {deepEqual( Stem("forhastet"), "forhast");});
test("forhebroniterne -> forhebronit", function() {deepEqual( Stem("forhebroniterne"), "forhebronit");});
test("forhen -> forh", function() {deepEqual( Stem("forhen"), "forh");});
test("forherlige -> forher", function() {deepEqual( Stem("forherlige"), "forher");});
test("forherligelse -> forherlig", function() {deepEqual( Stem("forherligelse"), "forherlig");});
test("forherliger -> forher", function() {deepEqual( Stem("forherliger"), "forher");});
test("forherliges -> forher", function() {deepEqual( Stem("forherliges"), "forher");});
test("forherliget -> forher", function() {deepEqual( Stem("forherliget"), "forher");});
test("forherren -> forher", function() {deepEqual( Stem("forherren"), "forher");});
test("forhindre -> forhindr", function() {deepEqual( Stem("forhindre"), "forhindr");});
test("forhindrede -> forhindred", function() {deepEqual( Stem("forhindrede"), "forhindred");});
test("forhindrer -> forhindr", function() {deepEqual( Stem("forhindrer"), "forhindr");});
test("forhindret -> forhindr", function() {deepEqual( Stem("forhindret"), "forhindr");});
test("forhold -> forhold", function() {deepEqual( Stem("forhold"), "forhold");});
test("forholde -> forhold", function() {deepEqual( Stem("forholde"), "forhold");});
test("forholdene -> forhold", function() {deepEqual( Stem("forholdene"), "forhold");});
test("forholder -> forhold", function() {deepEqual( Stem("forholder"), "forhold");});
test("forholdet -> forhold", function() {deepEqual( Stem("forholdet"), "forhold");});
test("forholdt -> forhold", function() {deepEqual( Stem("forholdt"), "forhold");});
test("forhud -> forhud", function() {deepEqual( Stem("forhud"), "forhud");});
test("forhuden -> forhud", function() {deepEqual( Stem("forhuden"), "forhud");});
test("forhuder -> forhud", function() {deepEqual( Stem("forhuder"), "forhud");});
test("forhudshøjen -> forhudshøj", function() {deepEqual( Stem("forhudshøjen"), "forhudshøj");});
test("forhåndenværende -> forhåndenvær", function() {deepEqual( Stem("forhåndenværende"), "forhåndenvær");});
test("forhåne -> forhån", function() {deepEqual( Stem("forhåne"), "forhån");});
test("forhånede -> forhåned", function() {deepEqual( Stem("forhånede"), "forhåned");});
test("forhånelse -> forhån", function() {deepEqual( Stem("forhånelse"), "forhån");});
test("forhånelser -> forhån", function() {deepEqual( Stem("forhånelser"), "forhån");});
test("forhåner -> forhån", function() {deepEqual( Stem("forhåner"), "forhån");});
test("forhånes -> forhån", function() {deepEqual( Stem("forhånes"), "forhån");});
test("forhånet -> forhån", function() {deepEqual( Stem("forhånet"), "forhån");});
test("forhæng -> forhæng", function() {deepEqual( Stem("forhæng"), "forhæng");});
test("forhænget -> forhæng", function() {deepEqual( Stem("forhænget"), "forhæng");});
test("forhængets -> forhæng", function() {deepEqual( Stem("forhængets"), "forhæng");});
test("forhærde -> forhærd", function() {deepEqual( Stem("forhærde"), "forhærd");});
test("forhærdede -> forhærded", function() {deepEqual( Stem("forhærdede"), "forhærded");});
test("forhærdelse -> forhærd", function() {deepEqual( Stem("forhærdelse"), "forhærd");});
test("forhærder -> forhærd", function() {deepEqual( Stem("forhærder"), "forhærd");});
test("forhærdes -> forhærd", function() {deepEqual( Stem("forhærdes"), "forhærd");});
test("forhærdet -> forhærd", function() {deepEqual( Stem("forhærdet"), "forhærd");});
test("forhøjning -> forhøjning", function() {deepEqual( Stem("forhøjning"), "forhøjning");});
test("forhør -> forhør", function() {deepEqual( Stem("forhør"), "forhør");});
test("forhøre -> forhør", function() {deepEqual( Stem("forhøre"), "forhør");});
test("forhører -> forhør", function() {deepEqual( Stem("forhører"), "forhør");});
test("forhøres -> forhør", function() {deepEqual( Stem("forhøres"), "forhør");});
test("forhørssalen -> forhørssal", function() {deepEqual( Stem("forhørssalen"), "forhørssal");});
test("forhørt -> forhørt", function() {deepEqual( Stem("forhørt"), "forhørt");});
test("forhørte -> forhørt", function() {deepEqual( Stem("forhørte"), "forhørt");});
test("forjæftelse -> forjæft", function() {deepEqual( Stem("forjæftelse"), "forjæft");});
test("forjættede -> forjætted", function() {deepEqual( Stem("forjættede"), "forjætted");});
test("forjættelse -> forjæt", function() {deepEqual( Stem("forjættelse"), "forjæt");});
test("forjættelsen -> forjæt", function() {deepEqual( Stem("forjættelsen"), "forjæt");});
test("forjættelsens -> forjæt", function() {deepEqual( Stem("forjættelsens"), "forjæt");});
test("forjættelser -> forjæt", function() {deepEqual( Stem("forjættelser"), "forjæt");});
test("forjættelserne -> forjæt", function() {deepEqual( Stem("forjættelserne"), "forjæt");});
test("forjættelsesord -> forjættelsesord", function() {deepEqual( Stem("forjættelsesord"), "forjættelsesord");});
test("forjættet -> forjæt", function() {deepEqual( Stem("forjættet"), "forjæt");});
test("fork -> fork", function() {deepEqual( Stem("fork"), "fork");});
test("forkast -> forkast", function() {deepEqual( Stem("forkast"), "forkast");});
test("forkaste -> forkast", function() {deepEqual( Stem("forkaste"), "forkast");});
test("forkasted -> forkasted", function() {deepEqual( Stem("forkasted"), "forkasted");});
test("forkastede -> forkasted", function() {deepEqual( Stem("forkastede"), "forkasted");});
test("forkastelige -> forkast", function() {deepEqual( Stem("forkastelige"), "forkast");});
test("forkasteligt -> forkast", function() {deepEqual( Stem("forkasteligt"), "forkast");});
test("forkastelse -> forkast", function() {deepEqual( Stem("forkastelse"), "forkast");});
test("forkaster -> forkast", function() {deepEqual( Stem("forkaster"), "forkast");});
test("forkastes -> forkast", function() {deepEqual( Stem("forkastes"), "forkast");});
test("forkastet -> forkast", function() {deepEqual( Stem("forkastet"), "forkast");});
test("forklar -> forklar", function() {deepEqual( Stem("forklar"), "forklar");});
test("forklare -> forklar", function() {deepEqual( Stem("forklare"), "forklar");});
test("forklarede -> forklared", function() {deepEqual( Stem("forklarede"), "forklared");});
test("forklæd -> forklæd", function() {deepEqual( Stem("forklæd"), "forklæd");});
test("forklæde -> forklæd", function() {deepEqual( Stem("forklæde"), "forklæd");});
test("forklædt -> forklæd", function() {deepEqual( Stem("forklædt"), "forklæd");});
test("forklædte -> forklæd", function() {deepEqual( Stem("forklædte"), "forklæd");});
test("forknytte -> forknyt", function() {deepEqual( Stem("forknytte"), "forknyt");});
test("forkomne -> forkomn", function() {deepEqual( Stem("forkomne"), "forkomn");});
test("forkorted -> forkorted", function() {deepEqual( Stem("forkorted"), "forkorted");});
test("forkrænkelig -> forkrænk", function() {deepEqual( Stem("forkrænkelig"), "forkrænk");});
test("forkrænkelige -> forkrænk", function() {deepEqual( Stem("forkrænkelige"), "forkrænk");});
test("forkrænkelighed -> forkrænk", function() {deepEqual( Stem("forkrænkelighed"), "forkrænk");});
test("forkrænkeligheden -> forkrænk", function() {deepEqual( Stem("forkrænkeligheden"), "forkrænk");});
test("forkrænkelighedens -> forkrænk", function() {deepEqual( Stem("forkrænkelighedens"), "forkrænk");});
test("forkrænkeligt -> forkrænk", function() {deepEqual( Stem("forkrænkeligt"), "forkrænk");});
test("forkrøblet -> forkrøbl", function() {deepEqual( Stem("forkrøblet"), "forkrøbl");});
test("forkynd -> forkynd", function() {deepEqual( Stem("forkynd"), "forkynd");});
test("forkynde -> forkynd", function() {deepEqual( Stem("forkynde"), "forkynd");});
test("forkyndelsen -> forkynd", function() {deepEqual( Stem("forkyndelsen"), "forkynd");});
test("forkynder -> forkynd", function() {deepEqual( Stem("forkynder"), "forkynd");});
test("forkyndes -> forkynd", function() {deepEqual( Stem("forkyndes"), "forkynd");});
test("forkyndt -> forkynd", function() {deepEqual( Stem("forkyndt"), "forkynd");});
test("forkyndte -> forkynd", function() {deepEqual( Stem("forkyndte"), "forkynd");});
test("forkynnde -> forkynnd", function() {deepEqual( Stem("forkynnde"), "forkynnd");});
test("forkøbet -> forkøb", function() {deepEqual( Stem("forkøbet"), "forkøb");});
test("forlad -> forlad", function() {deepEqual( Stem("forlad"), "forlad");});
test("forlade -> forlad", function() {deepEqual( Stem("forlade"), "forlad");});
test("forladelse -> forlad", function() {deepEqual( Stem("forladelse"), "forlad");});
test("forladelsens -> forlad", function() {deepEqual( Stem("forladelsens"), "forlad");});
test("forlader -> forlad", function() {deepEqual( Stem("forlader"), "forlad");});
test("forlades -> forlad", function() {deepEqual( Stem("forlades"), "forlad");});
test("forladt -> forlad", function() {deepEqual( Stem("forladt"), "forlad");});
test("forladte -> forlad", function() {deepEqual( Stem("forladte"), "forlad");});
test("forladtes -> forlad", function() {deepEqual( Stem("forladtes"), "forlad");});
test("forlang -> forlang", function() {deepEqual( Stem("forlang"), "forlang");});
test("forlange -> forlang", function() {deepEqual( Stem("forlange"), "forlang");});
test("forlangende -> forlang", function() {deepEqual( Stem("forlangende"), "forlang");});
test("forlanger -> forlang", function() {deepEqual( Stem("forlanger"), "forlang");});
test("forlangt -> forlang", function() {deepEqual( Stem("forlangt"), "forlang");});
test("forlangte -> forlang", function() {deepEqual( Stem("forlangte"), "forlang");});
test("forlede -> forled", function() {deepEqual( Stem("forlede"), "forled");});
test("forleden -> forled", function() {deepEqual( Stem("forleden"), "forled");});
test("forledes -> forled", function() {deepEqual( Stem("forledes"), "forled");});
test("forledt -> forled", function() {deepEqual( Stem("forledt"), "forled");});
test("forledte -> forled", function() {deepEqual( Stem("forledte"), "forled");});
test("forlener -> forlen", function() {deepEqual( Stem("forlener"), "forlen");});
test("forlig -> for", function() {deepEqual( Stem("forlig"), "for");});
test("forlige -> for", function() {deepEqual( Stem("forlige"), "for");});
test("forligelse -> forlig", function() {deepEqual( Stem("forligelse"), "forlig");});
test("forligelsen -> forlig", function() {deepEqual( Stem("forligelsen"), "forlig");});
test("forligelsens -> forlig", function() {deepEqual( Stem("forligelsens"), "forlig");});
test("forligt -> for", function() {deepEqual( Stem("forligt"), "for");});
test("forligte -> for", function() {deepEqual( Stem("forligte"), "for");});
test("forlod -> forlod", function() {deepEqual( Stem("forlod"), "forlod");});
test("forlode -> forlod", function() {deepEqual( Stem("forlode"), "forlod");});
test("forlodhantærskepladsen -> forlodhantærskeplads", function() {deepEqual( Stem("forlodhantærskepladsen"), "forlodhantærskeplads");});
test("forlodsdel -> forlodsdel", function() {deepEqual( Stem("forlodsdel"), "forlodsdel");});
test("forlængsel -> forlængsel", function() {deepEqual( Stem("forlængsel"), "forlængsel");});
test("forlængst -> forlængst", function() {deepEqual( Stem("forlængst"), "forlængst");});
test("forløb -> forløb", function() {deepEqual( Stem("forløb"), "forløb");});
test("forløben -> forløb", function() {deepEqual( Stem("forløben"), "forløb");});
test("forløber -> forløb", function() {deepEqual( Stem("forløber"), "forløb");});
test("forløbere -> forløb", function() {deepEqual( Stem("forløbere"), "forløb");});
test("forløbne -> forløbn", function() {deepEqual( Stem("forløbne"), "forløbn");});
test("forløs -> forløs", function() {deepEqual( Stem("forløs"), "forløs");});
test("forløse -> forløs", function() {deepEqual( Stem("forløse"), "forløs");});
test("forløser -> forløs", function() {deepEqual( Stem("forløser"), "forløs");});
test("forløsning -> forløsning", function() {deepEqual( Stem("forløsning"), "forløsning");});
test("forløsningen -> forløsning", function() {deepEqual( Stem("forløsningen"), "forløsning");});
test("forløsningens -> forløsning", function() {deepEqual( Stem("forløsningens"), "forløsning");});
test("forløst -> forløs", function() {deepEqual( Stem("forløst"), "forløs");});
test("forløste -> forløs", function() {deepEqual( Stem("forløste"), "forløs");});
test("form -> form", function() {deepEqual( Stem("form"), "form");});
test("forman -> forman", function() {deepEqual( Stem("forman"), "forman");});
test("formane -> forman", function() {deepEqual( Stem("formane"), "forman");});
test("formanede -> formaned", function() {deepEqual( Stem("formanede"), "formaned");});
test("formaner -> forman", function() {deepEqual( Stem("formaner"), "forman");});
test("formanet -> forman", function() {deepEqual( Stem("formanet"), "forman");});
test("formaning -> formaning", function() {deepEqual( Stem("formaning"), "formaning");});
test("formaningen -> formaning", function() {deepEqual( Stem("formaningen"), "formaning");});
test("formaningsord -> formaningsord", function() {deepEqual( Stem("formaningsord"), "formaningsord");});
test("formastede -> formasted", function() {deepEqual( Stem("formastede"), "formasted");});
test("formastelige -> formast", function() {deepEqual( Stem("formastelige"), "formast");});
test("formastelighed -> formast", function() {deepEqual( Stem("formastelighed"), "formast");});
test("formasteligt -> formast", function() {deepEqual( Stem("formasteligt"), "formast");});
test("formaster -> formast", function() {deepEqual( Stem("formaster"), "formast");});
test("format -> format", function() {deepEqual( Stem("format"), "format");});
test("formede -> formed", function() {deepEqual( Stem("formede"), "formed");});
test("formen -> form", function() {deepEqual( Stem("formen"), "form");});
test("formene -> form", function() {deepEqual( Stem("formene"), "form");});
test("formener -> formen", function() {deepEqual( Stem("formener"), "formen");});
test("forment -> forment", function() {deepEqual( Stem("forment"), "forment");});
test("formente -> forment", function() {deepEqual( Stem("formente"), "forment");});
test("formerede -> form", function() {deepEqual( Stem("formerede"), "form");});
test("formeredes -> formered", function() {deepEqual( Stem("formeredes"), "formered");});
test("formet -> form", function() {deepEqual( Stem("formet"), "form");});
test("formindskes -> formindsk", function() {deepEqual( Stem("formindskes"), "formindsk");});
test("formit -> formit", function() {deepEqual( Stem("formit"), "formit");});
test("formodet -> formod", function() {deepEqual( Stem("formodet"), "formod");});
test("formue -> formu", function() {deepEqual( Stem("formue"), "formu");});
test("formuen -> formu", function() {deepEqual( Stem("formuen"), "formu");});
test("formuende -> formu", function() {deepEqual( Stem("formuende"), "formu");});
test("formuren -> formur", function() {deepEqual( Stem("formuren"), "formur");});
test("formyndere -> formynd", function() {deepEqual( Stem("formyndere"), "formynd");});
test("formå -> formå", function() {deepEqual( Stem("formå"), "formå");});
test("formåede -> formåed", function() {deepEqual( Stem("formåede"), "formåed");});
test("formået -> formå", function() {deepEqual( Stem("formået"), "formå");});
test("formår -> formår", function() {deepEqual( Stem("formår"), "formår");});
test("formørkede -> formørked", function() {deepEqual( Stem("formørkede"), "formørked");});
test("formørkedes -> formørked", function() {deepEqual( Stem("formørkedes"), "formørked");});
test("formørkelser -> formørk", function() {deepEqual( Stem("formørkelser"), "formørk");});
test("formørkes -> formørk", function() {deepEqual( Stem("formørkes"), "formørk");});
test("formørket -> formørk", function() {deepEqual( Stem("formørket"), "formørk");});
test("fornam -> fornam", function() {deepEqual( Stem("fornam"), "fornam");});
test("forneden -> forned", function() {deepEqual( Stem("forneden"), "forned");});
test("fornedre -> fornedr", function() {deepEqual( Stem("fornedre"), "fornedr");});
test("fornedrede -> fornedred", function() {deepEqual( Stem("fornedrede"), "fornedred");});
test("fornedrelsen -> fornedr", function() {deepEqual( Stem("fornedrelsen"), "fornedr");});
test("fornedrelses -> fornedr", function() {deepEqual( Stem("fornedrelses"), "fornedr");});
test("fornedrer -> fornedr", function() {deepEqual( Stem("fornedrer"), "fornedr");});
test("fornedres -> fornedr", function() {deepEqual( Stem("fornedres"), "fornedr");});
test("fornemme -> fornem", function() {deepEqual( Stem("fornemme"), "fornem");});
test("fornemmelig -> fornem", function() {deepEqual( Stem("fornemmelig"), "fornem");});
test("fornemmere -> fornem", function() {deepEqual( Stem("fornemmere"), "fornem");});
test("fornemste -> fornemst", function() {deepEqual( Stem("fornemste"), "fornemst");});
test("fornuft -> fornuft", function() {deepEqual( Stem("fornuft"), "fornuft");});
test("fornuftige -> fornuft", function() {deepEqual( Stem("fornuftige"), "fornuft");});
test("forny -> forny", function() {deepEqual( Stem("forny"), "forny");});
test("fornyelse -> forny", function() {deepEqual( Stem("fornyelse"), "forny");});
test("fornyelsen -> forny", function() {deepEqual( Stem("fornyelsen"), "forny");});
test("fornyer -> forny", function() {deepEqual( Stem("fornyer"), "forny");});
test("fornyes -> forny", function() {deepEqual( Stem("fornyes"), "forny");});
test("fornægte -> fornæg", function() {deepEqual( Stem("fornægte"), "fornæg");});
test("fornægted -> fornægted", function() {deepEqual( Stem("fornægted"), "fornægted");});
test("fornægtede -> fornægted", function() {deepEqual( Stem("fornægtede"), "fornægted");});
test("fornægter -> fornæg", function() {deepEqual( Stem("fornægter"), "fornæg");});
test("fornægtes -> fornæg", function() {deepEqual( Stem("fornægtes"), "fornæg");});
test("fornægtet -> fornæg", function() {deepEqual( Stem("fornægtet"), "fornæg");});
test("fornærm -> fornærm", function() {deepEqual( Stem("fornærm"), "fornærm");});
test("fornærmet -> fornærm", function() {deepEqual( Stem("fornærmet"), "fornærm");});
test("fornøden -> fornød", function() {deepEqual( Stem("fornøden"), "fornød");});
test("fornødenheder -> fornøden", function() {deepEqual( Stem("fornødenheder"), "fornøden");});
test("fornødent -> fornødent", function() {deepEqual( Stem("fornødent"), "fornødent");});
test("fornødne -> fornødn", function() {deepEqual( Stem("fornødne"), "fornødn");});
test("fornøje -> fornøj", function() {deepEqual( Stem("fornøje"), "fornøj");});
test("forordne -> forordn", function() {deepEqual( Stem("forordne"), "forordn");});
test("forordnede -> forordned", function() {deepEqual( Stem("forordnede"), "forordned");});
test("forordner -> forordn", function() {deepEqual( Stem("forordner"), "forordn");});
test("forordnet -> forordn", function() {deepEqual( Stem("forordnet"), "forordn");});
test("forordning -> forordning", function() {deepEqual( Stem("forordning"), "forordning");});
test("forordningen -> forordning", function() {deepEqual( Stem("forordningen"), "forordning");});
test("forordninger -> forordning", function() {deepEqual( Stem("forordninger"), "forordning");});
test("foroven -> forov", function() {deepEqual( Stem("foroven"), "forov");});
test("forplante -> forplant", function() {deepEqual( Stem("forplante"), "forplant");});
test("forpligtede -> forpligted", function() {deepEqual( Stem("forpligtede"), "forpligted");});
test("forpligtelse -> forplig", function() {deepEqual( Stem("forpligtelse"), "forplig");});
test("forpligtelser -> forplig", function() {deepEqual( Stem("forpligtelser"), "forplig");});
test("forpligter -> forp", function() {deepEqual( Stem("forpligter"), "forp");});
test("forpligtet -> forp", function() {deepEqual( Stem("forpligtet"), "forp");});
test("forplumrer -> forplumr", function() {deepEqual( Stem("forplumrer"), "forplumr");});
test("forpost -> forpost", function() {deepEqual( Stem("forpost"), "forpost");});
test("forposten -> forpost", function() {deepEqual( Stem("forposten"), "forpost");});
test("forposter -> forpost", function() {deepEqual( Stem("forposter"), "forpost");});
test("forrest -> forrest", function() {deepEqual( Stem("forrest"), "forrest");});
test("forreste -> forrest", function() {deepEqual( Stem("forreste"), "forrest");});
test("forret -> for", function() {deepEqual( Stem("forret"), "for");});
test("forretning -> forretning", function() {deepEqual( Stem("forretning"), "forretning");});
test("forrette -> forret", function() {deepEqual( Stem("forrette"), "forret");});
test("forretter -> forret", function() {deepEqual( Stem("forretter"), "forret");});
test("forrige -> for", function() {deepEqual( Stem("forrige"), "for");});
test("forringede -> forringed", function() {deepEqual( Stem("forringede"), "forringed");});
test("forringes -> forring", function() {deepEqual( Stem("forringes"), "forring");});
test("forrkynd -> forrkynd", function() {deepEqual( Stem("forrkynd"), "forrkynd");});
test("forrykt -> forryk", function() {deepEqual( Stem("forrykt"), "forryk");});
test("forråd -> forråd", function() {deepEqual( Stem("forråd"), "forråd");});
test("forråde -> forråd", function() {deepEqual( Stem("forråde"), "forråd");});
test("forrådene -> forråd", function() {deepEqual( Stem("forrådene"), "forråd");});
test("forråder -> forråd", function() {deepEqual( Stem("forråder"), "forråd");});
test("forrådes -> forråd", function() {deepEqual( Stem("forrådes"), "forråd");});
test("forrådnelse -> forrådn", function() {deepEqual( Stem("forrådnelse"), "forrådn");});
test("forrådnelsen -> forrådn", function() {deepEqual( Stem("forrådnelsen"), "forrådn");});
test("forrådsbyer -> forrådsby", function() {deepEqual( Stem("forrådsbyer"), "forrådsby");});
test("forrådshuse -> forrådshus", function() {deepEqual( Stem("forrådshuse"), "forrådshus");});
test("forrådshusene -> forrådshus", function() {deepEqual( Stem("forrådshusene"), "forrådshus");});
test("forrådshuset -> forrådshus", function() {deepEqual( Stem("forrådshuset"), "forrådshus");});
test("forrådshusets -> forrådshus", function() {deepEqual( Stem("forrådshusets"), "forrådshus");});
test("forrådskammer -> forrådskam", function() {deepEqual( Stem("forrådskammer"), "forrådskam");});
test("forrådskamre -> forrådskamr", function() {deepEqual( Stem("forrådskamre"), "forrådskamr");});
test("forrådskamrene -> forrådskamr", function() {deepEqual( Stem("forrådskamrene"), "forrådskamr");});
test("forrådsrummene -> forrådsrum", function() {deepEqual( Stem("forrådsrummene"), "forrådsrum");});
test("forrådt -> forråd", function() {deepEqual( Stem("forrådt"), "forråd");});
test("forrådte -> forråd", function() {deepEqual( Stem("forrådte"), "forråd");});
test("forræder -> forræd", function() {deepEqual( Stem("forræder"), "forræd");});
test("forrædere -> forræd", function() {deepEqual( Stem("forrædere"), "forræd");});
test("forræderi -> forræderi", function() {deepEqual( Stem("forræderi"), "forræderi");});
test("forræderske -> forrædersk", function() {deepEqual( Stem("forræderske"), "forrædersk");});
test("forsabbat -> forsabbat", function() {deepEqual( Stem("forsabbat"), "forsabbat");});
test("forsage -> forsag", function() {deepEqual( Stem("forsage"), "forsag");});
test("forsager -> forsag", function() {deepEqual( Stem("forsager"), "forsag");});
test("forsagt -> forsag", function() {deepEqual( Stem("forsagt"), "forsag");});
test("forsagte -> forsag", function() {deepEqual( Stem("forsagte"), "forsag");});
test("forsamled -> forsamled", function() {deepEqual( Stem("forsamled"), "forsamled");});
test("forsamlede -> forsamled", function() {deepEqual( Stem("forsamlede"), "forsamled");});
test("forsamledes -> forsamled", function() {deepEqual( Stem("forsamledes"), "forsamled");});
test("forsamlet -> forsaml", function() {deepEqual( Stem("forsamlet"), "forsaml");});
test("forsamling -> forsamling", function() {deepEqual( Stem("forsamling"), "forsamling");});
test("forsamlingen -> forsamling", function() {deepEqual( Stem("forsamlingen"), "forsamling");});
test("forsamlingens -> forsamling", function() {deepEqual( Stem("forsamlingens"), "forsamling");});
test("forsamlinger -> forsamling", function() {deepEqual( Stem("forsamlinger"), "forsamling");});
test("forsamlingerne -> forsamling", function() {deepEqual( Stem("forsamlingerne"), "forsamling");});
test("forsamlings -> forsamling", function() {deepEqual( Stem("forsamlings"), "forsamling");});
test("forse -> fors", function() {deepEqual( Stem("forse"), "fors");});
test("forseelse -> forse", function() {deepEqual( Stem("forseelse"), "forse");});
test("forseelser -> forse", function() {deepEqual( Stem("forseelser"), "forse");});
test("forsegl -> forsegl", function() {deepEqual( Stem("forsegl"), "forsegl");});
test("forsegle -> forsegl", function() {deepEqual( Stem("forsegle"), "forsegl");});
test("forseglede -> forsegled", function() {deepEqual( Stem("forseglede"), "forsegled");});
test("forsegledes -> forsegled", function() {deepEqual( Stem("forsegledes"), "forsegled");});
test("forseglet -> forsegl", function() {deepEqual( Stem("forseglet"), "forsegl");});
test("forser -> fors", function() {deepEqual( Stem("forser"), "fors");});
test("forset -> fors", function() {deepEqual( Stem("forset"), "fors");});
test("forside -> forsid", function() {deepEqual( Stem("forside"), "forsid");});
test("forsiden -> forsid", function() {deepEqual( Stem("forsiden"), "forsid");});
test("forsikre -> forsikr", function() {deepEqual( Stem("forsikre"), "forsikr");});
test("forsikrede -> forsikred", function() {deepEqual( Stem("forsikrede"), "forsikred");});
test("forskel -> forskel", function() {deepEqual( Stem("forskel"), "forskel");});
test("forskellen -> forskel", function() {deepEqual( Stem("forskellen"), "forskel");});
test("forskellig -> forskel", function() {deepEqual( Stem("forskellig"), "forskel");});
test("forskellige -> forskel", function() {deepEqual( Stem("forskellige"), "forskel");});
test("forskelligt -> forskel", function() {deepEqual( Stem("forskelligt"), "forskel");});
test("forskrift -> forskrift", function() {deepEqual( Stem("forskrift"), "forskrift");});
test("forskriften -> forskrift", function() {deepEqual( Stem("forskriften"), "forskrift");});
test("forskrifter -> forskrift", function() {deepEqual( Stem("forskrifter"), "forskrift");});
test("forskrifterne -> forskrift", function() {deepEqual( Stem("forskrifterne"), "forskrift");});
test("forskrække -> forskræk", function() {deepEqual( Stem("forskrække"), "forskræk");});
test("forskrækkedes -> forskrækked", function() {deepEqual( Stem("forskrækkedes"), "forskrækked");});
test("forskrækkes -> forskræk", function() {deepEqual( Stem("forskrækkes"), "forskræk");});
test("forskudt -> forskud", function() {deepEqual( Stem("forskudt"), "forskud");});
test("forskyldt -> forskyld", function() {deepEqual( Stem("forskyldt"), "forskyld");});
test("forskød -> forskød", function() {deepEqual( Stem("forskød"), "forskød");});
test("forslag -> forslag", function() {deepEqual( Stem("forslag"), "forslag");});
test("forslaget -> forslag", function() {deepEqual( Stem("forslaget"), "forslag");});
test("forslår -> forslår", function() {deepEqual( Stem("forslår"), "forslår");});
test("forsmåede -> forsmåed", function() {deepEqual( Stem("forsmåede"), "forsmåed");});
test("forsmår -> forsmår", function() {deepEqual( Stem("forsmår"), "forsmår");});
test("forsmædelse -> forsmæd", function() {deepEqual( Stem("forsmædelse"), "forsmæd");});
test("forsmædelsens -> forsmæd", function() {deepEqual( Stem("forsmædelsens"), "forsmæd");});
test("forsmægte -> forsmæg", function() {deepEqual( Stem("forsmægte"), "forsmæg");});
test("forsmægter -> forsmæg", function() {deepEqual( Stem("forsmægter"), "forsmæg");});
test("forsone -> forson", function() {deepEqual( Stem("forsone"), "forson");});
test("forsoning -> forsoning", function() {deepEqual( Stem("forsoning"), "forsoning");});
test("forsoningsdagen -> forsoningsdag", function() {deepEqual( Stem("forsoningsdagen"), "forsoningsdag");});
test("forsoningssyndofferets -> forsoningssyndof", function() {deepEqual( Stem("forsoningssyndofferets"), "forsoningssyndof");});
test("forspand -> forspand", function() {deepEqual( Stem("forspand"), "forspand");});
test("forspandene -> forspand", function() {deepEqual( Stem("forspandene"), "forspand");});
test("forspands -> forspand", function() {deepEqual( Stem("forspands"), "forspand");});
test("forstand -> forstand", function() {deepEqual( Stem("forstand"), "forstand");});
test("forstanden -> forstand", function() {deepEqual( Stem("forstanden"), "forstand");});
test("forstandens -> forstand", function() {deepEqual( Stem("forstandens"), "forstand");});
test("forstander -> forstand", function() {deepEqual( Stem("forstander"), "forstand");});
test("forstandere -> forstand", function() {deepEqual( Stem("forstandere"), "forstand");});
test("forstanderens -> forstand", function() {deepEqual( Stem("forstanderens"), "forstand");});
test("forstanderne -> forstand", function() {deepEqual( Stem("forstanderne"), "forstand");});
test("forstandig -> forstand", function() {deepEqual( Stem("forstandig"), "forstand");});
test("forstandige -> forstand", function() {deepEqual( Stem("forstandige"), "forstand");});
test("forstandiges -> forstand", function() {deepEqual( Stem("forstandiges"), "forstand");});
test("forstandigt -> forstand", function() {deepEqual( Stem("forstandigt"), "forstand");});
test("forstands -> forstand", function() {deepEqual( Stem("forstands"), "forstand");});
test("forstavnen -> forstavn", function() {deepEqual( Stem("forstavnen"), "forstavn");});
test("forstod -> forstod", function() {deepEqual( Stem("forstod"), "forstod");});
test("forstode -> forstod", function() {deepEqual( Stem("forstode"), "forstod");});
test("forstokket -> forstok", function() {deepEqual( Stem("forstokket"), "forstok");});
test("forstrand -> forstrand", function() {deepEqual( Stem("forstrand"), "forstrand");});
test("forstumme -> forstum", function() {deepEqual( Stem("forstumme"), "forstum");});
test("forstummed -> forstummed", function() {deepEqual( Stem("forstummed"), "forstummed");});
test("forstyrre -> forstyr", function() {deepEqual( Stem("forstyrre"), "forstyr");});
test("forstyrres -> forstyr", function() {deepEqual( Stem("forstyrres"), "forstyr");});
test("forstyrret -> forstyr", function() {deepEqual( Stem("forstyrret"), "forstyr");});
test("forstå -> forstå", function() {deepEqual( Stem("forstå"), "forstå");});
test("forstået -> forstå", function() {deepEqual( Stem("forstået"), "forstå");});
test("forstår -> forstår", function() {deepEqual( Stem("forstår"), "forstår");});
test("forstås -> forstå", function() {deepEqual( Stem("forstås"), "forstå");});
test("forstærk -> forstærk", function() {deepEqual( Stem("forstærk"), "forstærk");});
test("forstød -> forstød", function() {deepEqual( Stem("forstød"), "forstød");});
test("forstøde -> forstød", function() {deepEqual( Stem("forstøde"), "forstød");});
test("forstøder -> forstød", function() {deepEqual( Stem("forstøder"), "forstød");});
test("forstødes -> forstød", function() {deepEqual( Stem("forstødes"), "forstød");});
test("forstødt -> forstød", function() {deepEqual( Stem("forstødt"), "forstød");});
test("forstødte -> forstød", function() {deepEqual( Stem("forstødte"), "forstød");});
test("forsvandt -> forsvand", function() {deepEqual( Stem("forsvandt"), "forsvand");});
test("forsvar -> forsvar", function() {deepEqual( Stem("forsvar"), "forsvar");});
test("forsvare -> forsvar", function() {deepEqual( Stem("forsvare"), "forsvar");});
test("forsvarede -> forsvared", function() {deepEqual( Stem("forsvarede"), "forsvared");});
test("forsvarer -> forsvar", function() {deepEqual( Stem("forsvarer"), "forsvar");});
test("forsvaret -> forsvar", function() {deepEqual( Stem("forsvaret"), "forsvar");});
test("forsvarligt -> forsvar", function() {deepEqual( Stem("forsvarligt"), "forsvar");});
test("forsvarstale -> forsvarstal", function() {deepEqual( Stem("forsvarstale"), "forsvarstal");});
test("forsvinde -> forsvind", function() {deepEqual( Stem("forsvinde"), "forsvind");});
test("forsvinder -> forsvind", function() {deepEqual( Stem("forsvinder"), "forsvind");});
test("forsvundet -> forsvund", function() {deepEqual( Stem("forsvundet"), "forsvund");});
test("forsynd -> forsynd", function() {deepEqual( Stem("forsynd"), "forsynd");});
test("forsynde -> forsynd", function() {deepEqual( Stem("forsynde"), "forsynd");});
test("forsyndede -> forsynded", function() {deepEqual( Stem("forsyndede"), "forsynded");});
test("forsyndelse -> forsynd", function() {deepEqual( Stem("forsyndelse"), "forsynd");});
test("forsynder -> forsynd", function() {deepEqual( Stem("forsynder"), "forsynd");});
test("forsyndet -> forsynd", function() {deepEqual( Stem("forsyndet"), "forsynd");});
test("forsynede -> forsyned", function() {deepEqual( Stem("forsynede"), "forsyned");});
test("forsynet -> forsyn", function() {deepEqual( Stem("forsynet"), "forsyn");});
test("forsædet -> forsæd", function() {deepEqual( Stem("forsædet"), "forsæd");});
test("forsæt -> forsæt", function() {deepEqual( Stem("forsæt"), "forsæt");});
test("forsøg -> forsøg", function() {deepEqual( Stem("forsøg"), "forsøg");});
test("forsøget -> forsøg", function() {deepEqual( Stem("forsøget"), "forsøg");});
test("forsøgt -> forsøg", function() {deepEqual( Stem("forsøgt"), "forsøg");});
test("forsøgte -> forsøg", function() {deepEqual( Stem("forsøgte"), "forsøg");});
test("forsølves -> forsølv", function() {deepEqual( Stem("forsølves"), "forsølv");});
test("forsøm -> forsøm", function() {deepEqual( Stem("forsøm"), "forsøm");});
test("forsømme -> forsøm", function() {deepEqual( Stem("forsømme"), "forsøm");});
test("forsømmelighed -> forsøm", function() {deepEqual( Stem("forsømmelighed"), "forsøm");});
test("forsømt -> forsømt", function() {deepEqual( Stem("forsømt"), "forsømt");});
test("forsørgede -> forsørged", function() {deepEqual( Stem("forsørgede"), "forsørged");});
test("forsørger -> forsørg", function() {deepEqual( Stem("forsørger"), "forsørg");});
test("fortabelse -> fortab", function() {deepEqual( Stem("fortabelse"), "fortab");});
test("fortabelsen -> fortab", function() {deepEqual( Stem("fortabelsen"), "fortab");});
test("fortabelsens -> fortab", function() {deepEqual( Stem("fortabelsens"), "fortab");});
test("fortabes -> fortab", function() {deepEqual( Stem("fortabes"), "fortab");});
test("fortabt -> fortabt", function() {deepEqual( Stem("fortabt"), "fortabt");});
test("fortabte -> fortabt", function() {deepEqual( Stem("fortabte"), "fortabt");});
test("fortalt -> fortalt", function() {deepEqual( Stem("fortalt"), "fortalt");});
test("fortalte -> fortalt", function() {deepEqual( Stem("fortalte"), "fortalt");});
test("fortaltes -> fortalt", function() {deepEqual( Stem("fortaltes"), "fortalt");});
test("fortegnelse -> fortegn", function() {deepEqual( Stem("fortegnelse"), "fortegn");});
test("fortegnelserne -> fortegn", function() {deepEqual( Stem("fortegnelserne"), "fortegn");});
test("fortiden -> fortid", function() {deepEqual( Stem("fortiden"), "fortid");});
test("fortidens -> fortid", function() {deepEqual( Stem("fortidens"), "fortid");});
test("fortids -> fortid", function() {deepEqual( Stem("fortids"), "fortid");});
test("fortidsruiner -> fortidsruin", function() {deepEqual( Stem("fortidsruiner"), "fortidsruin");});
test("fortiet -> forti", function() {deepEqual( Stem("fortiet"), "forti");});
test("fortil -> fortil", function() {deepEqual( Stem("fortil"), "fortil");});
test("fortjene -> fortj", function() {deepEqual( Stem("fortjene"), "fortj");});
test("fortjener -> fortjen", function() {deepEqual( Stem("fortjener"), "fortjen");});
test("fortjeneste -> fortjenest", function() {deepEqual( Stem("fortjeneste"), "fortjenest");});
test("fortjent -> fortjent", function() {deepEqual( Stem("fortjent"), "fortjent");});
test("fortjente -> fortjent", function() {deepEqual( Stem("fortjente"), "fortjent");});
test("fortrin -> fortrin", function() {deepEqual( Stem("fortrin"), "fortrin");});
test("fortrolig -> fortro", function() {deepEqual( Stem("fortrolig"), "fortro");});
test("fortrolige -> fortro", function() {deepEqual( Stem("fortrolige"), "fortro");});
test("fortrolighed -> fortro", function() {deepEqual( Stem("fortrolighed"), "fortro");});
test("fortroligt -> fortro", function() {deepEqual( Stem("fortroligt"), "fortro");});
test("fortrop -> fortrop", function() {deepEqual( Stem("fortrop"), "fortrop");});
test("fortrudt -> fortrud", function() {deepEqual( Stem("fortrudt"), "fortrud");});
test("fortryde -> fortryd", function() {deepEqual( Stem("fortryde"), "fortryd");});
test("fortrydelig -> fortryd", function() {deepEqual( Stem("fortrydelig"), "fortryd");});
test("fortrydeligt -> fortryd", function() {deepEqual( Stem("fortrydeligt"), "fortryd");});
test("fortryder -> fortryd", function() {deepEqual( Stem("fortryder"), "fortryd");});
test("fortrydes -> fortryd", function() {deepEqual( Stem("fortrydes"), "fortryd");});
test("fortrykte -> fortryk", function() {deepEqual( Stem("fortrykte"), "fortryk");});
test("fortryktes -> fortryk", function() {deepEqual( Stem("fortryktes"), "fortryk");});
test("fortryllet -> fortryl", function() {deepEqual( Stem("fortryllet"), "fortryl");});
test("fortræd -> fortræd", function() {deepEqual( Stem("fortræd"), "fortræd");});
test("fortrædeligheder -> fortræd", function() {deepEqual( Stem("fortrædeligheder"), "fortræd");});
test("fortrædeligt -> fortræd", function() {deepEqual( Stem("fortrædeligt"), "fortræd");});
test("fortrædige -> fortræd", function() {deepEqual( Stem("fortrædige"), "fortræd");});
test("fortrød -> fortrød", function() {deepEqual( Stem("fortrød"), "fortrød");});
test("fortrøde -> fortrød", function() {deepEqual( Stem("fortrøde"), "fortrød");});
test("fortrøsfning -> fortrøsfning", function() {deepEqual( Stem("fortrøsfning"), "fortrøsfning");});
test("fortrøster -> fortrøst", function() {deepEqual( Stem("fortrøster"), "fortrøst");});
test("fortrøstning -> fortrøstning", function() {deepEqual( Stem("fortrøstning"), "fortrøstning");});
test("fortsatte -> fortsat", function() {deepEqual( Stem("fortsatte"), "fortsat");});
test("fortsattes -> fortsat", function() {deepEqual( Stem("fortsattes"), "fortsat");});
test("fortsæt -> fortsæt", function() {deepEqual( Stem("fortsæt"), "fortsæt");});
test("fortsætter -> fortsæt", function() {deepEqual( Stem("fortsætter"), "fortsæt");});
test("fortunatus -> fortunatus", function() {deepEqual( Stem("fortunatus"), "fortunatus");});
test("fortvivle -> fortvivl", function() {deepEqual( Stem("fortvivle"), "fortvivl");});
test("fortvivlede -> fortvivled", function() {deepEqual( Stem("fortvivlede"), "fortvivled");});
test("fortvivledes -> fortvivled", function() {deepEqual( Stem("fortvivledes"), "fortvivled");});
test("fortvivlelse -> fortvivl", function() {deepEqual( Stem("fortvivlelse"), "fortvivl");});
test("fortæl -> fortæl", function() {deepEqual( Stem("fortæl"), "fortæl");});
test("fortælle -> fortæl", function() {deepEqual( Stem("fortælle"), "fortæl");});
test("fortæller -> fortæl", function() {deepEqual( Stem("fortæller"), "fortæl");});
test("fortære -> fortær", function() {deepEqual( Stem("fortære"), "fortær");});
test("fortæred -> fortæred", function() {deepEqual( Stem("fortæred"), "fortæred");});
test("fortærede -> fortæred", function() {deepEqual( Stem("fortærede"), "fortæred");});
test("fortærende -> fortær", function() {deepEqual( Stem("fortærende"), "fortær");});
test("fortærer -> fortær", function() {deepEqual( Stem("fortærer"), "fortær");});
test("fortæres -> fortær", function() {deepEqual( Stem("fortæres"), "fortær");});
test("fortæret -> fortær", function() {deepEqual( Stem("fortæret"), "fortær");});
test("fortørnede -> fortørned", function() {deepEqual( Stem("fortørnede"), "fortørned");});
test("fortørnelse -> fortørn", function() {deepEqual( Stem("fortørnelse"), "fortørn");});
test("fortørner -> fortørn", function() {deepEqual( Stem("fortørner"), "fortørn");});
test("fortørnet -> fortørn", function() {deepEqual( Stem("fortørnet"), "fortørn");});
test("forud -> forud", function() {deepEqual( Stem("forud"), "forud");});
test("forudbestemte -> forudbestemt", function() {deepEqual( Stem("forudbestemte"), "forudbestemt");});
test("foruden -> forud", function() {deepEqual( Stem("foruden"), "forud");});
test("forudgående -> forudgå", function() {deepEqual( Stem("forudgående"), "forudgå");});
test("forudsagde -> forudsag", function() {deepEqual( Stem("forudsagde"), "forudsag");});
test("forudsagt -> forudsag", function() {deepEqual( Stem("forudsagt"), "forudsag");});
test("forudseende -> forudse", function() {deepEqual( Stem("forudseende"), "forudse");});
test("forudså -> forudså", function() {deepEqual( Stem("forudså"), "forudså");});
test("forudviden -> forudvid", function() {deepEqual( Stem("forudviden"), "forudvid");});
test("foruente -> foruent", function() {deepEqual( Stem("foruente"), "foruent");});
test("forulempe -> forulemp", function() {deepEqual( Stem("forulempe"), "forulemp");});
test("forum -> forum", function() {deepEqual( Stem("forum"), "forum");});
test("forundre -> forundr", function() {deepEqual( Stem("forundre"), "forundr");});
test("forundrede -> forundred", function() {deepEqual( Stem("forundrede"), "forundred");});
test("forundrer -> forundr", function() {deepEqual( Stem("forundrer"), "forundr");});
test("forundring -> forundring", function() {deepEqual( Stem("forundring"), "forundring");});
test("forundt -> forund", function() {deepEqual( Stem("forundt"), "forund");});
test("forurette -> foruret", function() {deepEqual( Stem("forurette"), "foruret");});
test("foruretter -> foruret", function() {deepEqual( Stem("foruretter"), "foruret");});
test("forvandle -> forvandl", function() {deepEqual( Stem("forvandle"), "forvandl");});
test("forvandlede -> forvandled", function() {deepEqual( Stem("forvandlede"), "forvandled");});
test("forvandledes -> forvandled", function() {deepEqual( Stem("forvandledes"), "forvandled");});
test("forvandles -> forvandl", function() {deepEqual( Stem("forvandles"), "forvandl");});
test("forvandlet -> forvandl", function() {deepEqual( Stem("forvandlet"), "forvandl");});
test("forvarede -> forvared", function() {deepEqual( Stem("forvarede"), "forvared");});
test("forvaret -> forvar", function() {deepEqual( Stem("forvaret"), "forvar");});
test("forvaring -> forvaring", function() {deepEqual( Stem("forvaring"), "forvaring");});
test("forvejen -> forvej", function() {deepEqual( Stem("forvejen"), "forvej");});
test("forvende -> forv", function() {deepEqual( Stem("forvende"), "forv");});
test("forvendt -> forvend", function() {deepEqual( Stem("forvendt"), "forvend");});
test("forvendte -> forvend", function() {deepEqual( Stem("forvendte"), "forvend");});
test("forvent -> forvent", function() {deepEqual( Stem("forvent"), "forvent");});
test("forvente -> forvent", function() {deepEqual( Stem("forvente"), "forvent");});
test("forventede -> forvented", function() {deepEqual( Stem("forventede"), "forvented");});
test("forventelse -> forvent", function() {deepEqual( Stem("forventelse"), "forvent");});
test("forventende -> forvent", function() {deepEqual( Stem("forventende"), "forvent");});
test("forventning -> forventning", function() {deepEqual( Stem("forventning"), "forventning");});
test("forvildes -> forvild", function() {deepEqual( Stem("forvildes"), "forvild");});
test("forvir -> forvir", function() {deepEqual( Stem("forvir"), "forvir");});
test("forvirre -> forvir", function() {deepEqual( Stem("forvirre"), "forvir");});
test("forvirrede -> forvirred", function() {deepEqual( Stem("forvirrede"), "forvirred");});
test("forvirrer -> forvir", function() {deepEqual( Stem("forvirrer"), "forvir");});
test("forvirres -> forvir", function() {deepEqual( Stem("forvirres"), "forvir");});
test("forvirret -> forvir", function() {deepEqual( Stem("forvirret"), "forvir");});
test("forvirring -> forvirring", function() {deepEqual( Stem("forvirring"), "forvirring");});
test("forvirringen -> forvirring", function() {deepEqual( Stem("forvirringen"), "forvirring");});
test("forvirringens -> forvirring", function() {deepEqual( Stem("forvirringens"), "forvirring");});
test("forvises -> forvis", function() {deepEqual( Stem("forvises"), "forvis");});
test("forvisning -> forvisning", function() {deepEqual( Stem("forvisning"), "forvisning");});
test("forvisse -> forvis", function() {deepEqual( Stem("forvisse"), "forvis");});
test("forvissede -> forvissed", function() {deepEqual( Stem("forvissede"), "forvissed");});
test("forvisset -> forvis", function() {deepEqual( Stem("forvisset"), "forvis");});
test("forvist -> forvist", function() {deepEqual( Stem("forvist"), "forvist");});
test("forviste -> forvist", function() {deepEqual( Stem("forviste"), "forvist");});
test("forvænner -> forvæn", function() {deepEqual( Stem("forvænner"), "forvæn");});
test("forvænte -> forvænt", function() {deepEqual( Stem("forvænte"), "forvænt");});
test("forvænthed -> forvænt", function() {deepEqual( Stem("forvænthed"), "forvænt");});
test("forældre -> forældr", function() {deepEqual( Stem("forældre"), "forældr");});
test("forældreløse -> forældreløs", function() {deepEqual( Stem("forældreløse"), "forældreløs");});
test("forældrene -> forældr", function() {deepEqual( Stem("forældrene"), "forældr");});
test("forældres -> forældr", function() {deepEqual( Stem("forældres"), "forældr");});
test("foræringer -> foræring", function() {deepEqual( Stem("foræringer"), "foræring");});
test("forætlle -> forætl", function() {deepEqual( Stem("forætlle"), "forætl");});
test("forøge -> forøg", function() {deepEqual( Stem("forøge"), "forøg");});
test("forøgedes -> forøged", function() {deepEqual( Stem("forøgedes"), "forøged");});
test("forøges -> forøg", function() {deepEqual( Stem("forøges"), "forøg");});
test("foster -> fost", function() {deepEqual( Stem("foster"), "fost");});
test("fosterbarn -> fosterbarn", function() {deepEqual( Stem("fosterbarn"), "fosterbarn");});
test("fosterbroder -> fosterbrod", function() {deepEqual( Stem("fosterbroder"), "fosterbrod");});
test("fosteret -> fost", function() {deepEqual( Stem("fosteret"), "fost");});
test("fosterfader -> fosterfad", function() {deepEqual( Stem("fosterfader"), "fosterfad");});
test("fosterfædre -> fosterfædr", function() {deepEqual( Stem("fosterfædre"), "fosterfædr");});
test("fosterfædrene -> fosterfædr", function() {deepEqual( Stem("fosterfædrene"), "fosterfædr");});
test("fostermoder -> fostermod", function() {deepEqual( Stem("fostermoder"), "fostermod");});
test("fostred -> fostred", function() {deepEqual( Stem("fostred"), "fostred");});
test("fostrede -> fostred", function() {deepEqual( Stem("fostrede"), "fostred");});
test("fostrer -> fostr", function() {deepEqual( Stem("fostrer"), "fostr");});
test("fostret -> fostr", function() {deepEqual( Stem("fostret"), "fostr");});
test("fot -> fot", function() {deepEqual( Stem("fot"), "fot");});
test("fra -> fra", function() {deepEqual( Stem("fra"), "fra");});
test("fraadede -> fraaded", function() {deepEqual( Stem("fraadede"), "fraaded");});
test("fradrag -> fradrag", function() {deepEqual( Stem("fradrag"), "fradrag");});
test("frafald -> frafald", function() {deepEqual( Stem("frafald"), "frafald");});
test("frafalden -> frafald", function() {deepEqual( Stem("frafalden"), "frafald");});
test("frafaldet -> frafald", function() {deepEqual( Stem("frafaldet"), "frafald");});
test("frafaldne -> frafaldn", function() {deepEqual( Stem("frafaldne"), "frafaldn");});
test("frajordens -> frajord", function() {deepEqual( Stem("frajordens"), "frajord");});
test("frak -> frak", function() {deepEqual( Stem("frak"), "frak");});
test("frakender -> frakend", function() {deepEqual( Stem("frakender"), "frakend");});
test("frakken -> frak", function() {deepEqual( Stem("frakken"), "frak");});
test("fraregnet -> fraregn", function() {deepEqual( Stem("fraregnet"), "fraregn");});
test("frarev -> frarev", function() {deepEqual( Stem("frarev"), "frarev");});
test("frarøve -> frarøv", function() {deepEqual( Stem("frarøve"), "frarøv");});
test("frasagt -> frasag", function() {deepEqual( Stem("frasagt"), "frasag");});
test("fraskille -> fraskil", function() {deepEqual( Stem("fraskille"), "fraskil");});
test("fraskilt -> fraskilt", function() {deepEqual( Stem("fraskilt"), "fraskilt");});
test("frastand -> frastand", function() {deepEqual( Stem("frastand"), "frastand");});
test("frastødende -> frastød", function() {deepEqual( Stem("frastødende"), "frastød");});
test("frastøder -> frastød", function() {deepEqual( Stem("frastøder"), "frastød");});
test("frat -> frat", function() {deepEqual( Stem("frat"), "frat");});
test("fratager -> fratag", function() {deepEqual( Stem("fratager"), "fratag");});
test("fratages -> fratag", function() {deepEqual( Stem("fratages"), "fratag");});
test("frataget -> fratag", function() {deepEqual( Stem("frataget"), "fratag");});
test("fratog -> fratog", function() {deepEqual( Stem("fratog"), "fratog");});
test("fratoges -> fratog", function() {deepEqual( Stem("fratoges"), "fratog");});
test("fraveg -> fraveg", function() {deepEqual( Stem("fraveg"), "fraveg");});
test("fravristet -> fravrist", function() {deepEqual( Stem("fravristet"), "fravrist");});
test("fraværelse -> fravær", function() {deepEqual( Stem("fraværelse"), "fravær");});
test("fraværende -> fravær", function() {deepEqual( Stem("fraværende"), "fravær");});
test("fre -> fre", function() {deepEqual( Stem("fre"), "fre");});
test("fred -> fred", function() {deepEqual( Stem("fred"), "fred");});
test("fredelig -> fred", function() {deepEqual( Stem("fredelig"), "fred");});
test("fredelige -> fred", function() {deepEqual( Stem("fredelige"), "fred");});
test("fredeligt -> fred", function() {deepEqual( Stem("fredeligt"), "fred");});
test("freden -> fred", function() {deepEqual( Stem("freden"), "fred");});
test("fredens -> fred", function() {deepEqual( Stem("fredens"), "fred");});
test("freds -> fred", function() {deepEqual( Stem("freds"), "fred");});
test("fredsfyrste -> fredsfyrst", function() {deepEqual( Stem("fredsfyrste"), "fredsfyrst");});
test("fredskoven -> fredskov", function() {deepEqual( Stem("fredskoven"), "fredskov");});
test("fredsommelig -> fredsom", function() {deepEqual( Stem("fredsommelig"), "fredsom");});
test("fredsommelige -> fredsom", function() {deepEqual( Stem("fredsommelige"), "fredsom");});
test("fredspagt -> fredspag", function() {deepEqual( Stem("fredspagt"), "fredspag");});
test("fredssyner -> fredssyn", function() {deepEqual( Stem("fredssyner"), "fredssyn");});
test("fredstid -> fredstid", function() {deepEqual( Stem("fredstid"), "fredstid");});
test("fredstilbudet -> fredstilbud", function() {deepEqual( Stem("fredstilbudet"), "fredstilbud");});
test("frejdigt -> frejd", function() {deepEqual( Stem("frejdigt"), "frejd");});
test("frels -> frel", function() {deepEqual( Stem("frels"), "frel");});
test("frelse -> frels", function() {deepEqual( Stem("frelse"), "frels");});
test("frelsen -> frels", function() {deepEqual( Stem("frelsen"), "frels");});
test("frelsende -> frels", function() {deepEqual( Stem("frelsende"), "frels");});
test("frelsens -> frels", function() {deepEqual( Stem("frelsens"), "frels");});
test("frelser -> frels", function() {deepEqual( Stem("frelser"), "frels");});
test("frelseren -> frels", function() {deepEqual( Stem("frelseren"), "frels");});
test("frelsers -> frels", function() {deepEqual( Stem("frelsers"), "frels");});
test("frelses -> frels", function() {deepEqual( Stem("frelses"), "frels");});
test("frelseshorn -> frelseshorn", function() {deepEqual( Stem("frelseshorn"), "frelseshorn");});
test("frelsesjubel -> frelsesjubel", function() {deepEqual( Stem("frelsesjubel"), "frelsesjubel");});
test("frelsesrigdom -> frelsesrigdom", function() {deepEqual( Stem("frelsesrigdom"), "frelsesrigdom");});
test("frelsesværk -> frelsesværk", function() {deepEqual( Stem("frelsesværk"), "frelsesværk");});
test("frelst -> frelst", function() {deepEqual( Stem("frelst"), "frelst");});
test("frelste -> frelst", function() {deepEqual( Stem("frelste"), "frelst");});
test("frelstes -> frelst", function() {deepEqual( Stem("frelstes"), "frelst");});
test("frem -> frem", function() {deepEqual( Stem("frem"), "frem");});
test("fremad -> fremad", function() {deepEqual( Stem("fremad"), "fremad");});
test("frembar -> frembar", function() {deepEqual( Stem("frembar"), "frembar");});
test("frembragt -> frembrag", function() {deepEqual( Stem("frembragt"), "frembrag");});
test("frembragte -> frembrag", function() {deepEqual( Stem("frembragte"), "frembrag");});
test("frembringe -> frembring", function() {deepEqual( Stem("frembringe"), "frembring");});
test("frembringer -> frembring", function() {deepEqual( Stem("frembringer"), "frembring");});
test("frembrud -> frembrud", function() {deepEqual( Stem("frembrud"), "frembrud");});
test("frembrydende -> frembryd", function() {deepEqual( Stem("frembrydende"), "frembryd");});
test("frembyder -> frembyd", function() {deepEqual( Stem("frembyder"), "frembyd");});
test("frembåret -> frembår", function() {deepEqual( Stem("frembåret"), "frembår");});
test("frembære -> frembær", function() {deepEqual( Stem("frembære"), "frembær");});
test("frembærer -> frembær", function() {deepEqual( Stem("frembærer"), "frembær");});
test("frembæres -> frembær", function() {deepEqual( Stem("frembæres"), "frembær");});
test("fremdeles -> fremdel", function() {deepEqual( Stem("fremdeles"), "fremdel");});
test("fremfarende -> fremfar", function() {deepEqual( Stem("fremfarende"), "fremfar");});
test("fremfor -> fremfor", function() {deepEqual( Stem("fremfor"), "fremfor");});
test("fremfusende -> fremfus", function() {deepEqual( Stem("fremfusende"), "fremfus");});
test("fremfusenhed -> fremfusen", function() {deepEqual( Stem("fremfusenhed"), "fremfusen");});
test("fremfør -> fremfør", function() {deepEqual( Stem("fremfør"), "fremfør");});
test("fremføre -> fremfør", function() {deepEqual( Stem("fremføre"), "fremfør");});
test("fremfører -> fremfør", function() {deepEqual( Stem("fremfører"), "fremfør");});
test("fremført -> fremført", function() {deepEqual( Stem("fremført"), "fremført");});
test("fremførte -> fremført", function() {deepEqual( Stem("fremførte"), "fremført");});
test("fremgang -> fremgang", function() {deepEqual( Stem("fremgang"), "fremgang");});
test("fremgik -> fremgik", function() {deepEqual( Stem("fremgik"), "fremgik");});
test("fremholde -> fremhold", function() {deepEqual( Stem("fremholde"), "fremhold");});
test("fremkalde -> fremkald", function() {deepEqual( Stem("fremkalde"), "fremkald");});
test("fremkalder -> fremkald", function() {deepEqual( Stem("fremkalder"), "fremkald");});
test("fremkaldte -> fremkald", function() {deepEqual( Stem("fremkaldte"), "fremkald");});
test("fremkom -> fremkom", function() {deepEqual( Stem("fremkom"), "fremkom");});
test("fremkommer -> fremkom", function() {deepEqual( Stem("fremkommer"), "fremkom");});
test("fremlagde -> fremlag", function() {deepEqual( Stem("fremlagde"), "fremlag");});
test("fremlokker -> fremlok", function() {deepEqual( Stem("fremlokker"), "fremlok");});
test("fremlæg -> fremlæg", function() {deepEqual( Stem("fremlæg"), "fremlæg");});
test("fremme -> frem", function() {deepEqual( Stem("fremme"), "frem");});
test("fremmed -> fremmed", function() {deepEqual( Stem("fremmed"), "fremmed");});
test("fremmede -> fremmed", function() {deepEqual( Stem("fremmede"), "fremmed");});
test("fremmedes -> fremmed", function() {deepEqual( Stem("fremmedes"), "fremmed");});
test("fremmedgjorte -> fremmedgjort", function() {deepEqual( Stem("fremmedgjorte"), "fremmedgjort");});
test("fremmeds -> fremmed", function() {deepEqual( Stem("fremmeds"), "fremmed");});
test("fremmest -> fremmest", function() {deepEqual( Stem("fremmest"), "fremmest");});
test("fremrykkede -> fremrykked", function() {deepEqual( Stem("fremrykkede"), "fremrykked");});
test("fremrykket -> fremryk", function() {deepEqual( Stem("fremrykket"), "fremryk");});
test("fremrykning -> fremrykning", function() {deepEqual( Stem("fremrykning"), "fremrykning");});
test("fremsagde -> fremsag", function() {deepEqual( Stem("fremsagde"), "fremsag");});
test("fremsat -> fremsat", function() {deepEqual( Stem("fremsat"), "fremsat");});
test("fremsatte -> fremsat", function() {deepEqual( Stem("fremsatte"), "fremsat");});
test("fremsige -> frems", function() {deepEqual( Stem("fremsige"), "frems");});
test("fremskynde -> fremskynd", function() {deepEqual( Stem("fremskynde"), "fremskynd");});
test("fremspire -> fremspir", function() {deepEqual( Stem("fremspire"), "fremspir");});
test("fremspirer -> fremspir", function() {deepEqual( Stem("fremspirer"), "fremspir");});
test("fremspring -> fremspring", function() {deepEqual( Stem("fremspring"), "fremspring");});
test("fremspringende -> fremspring", function() {deepEqual( Stem("fremspringende"), "fremspring");});
test("fremspringets -> fremspring", function() {deepEqual( Stem("fremspringets"), "fremspring");});
test("fremstil -> fremstil", function() {deepEqual( Stem("fremstil"), "fremstil");});
test("fremstille -> fremstil", function() {deepEqual( Stem("fremstille"), "fremstil");});
test("fremstillede -> fremstilled", function() {deepEqual( Stem("fremstillede"), "fremstilled");});
test("fremstiller -> fremstil", function() {deepEqual( Stem("fremstiller"), "fremstil");});
test("fremstilles -> fremstil", function() {deepEqual( Stem("fremstilles"), "fremstil");});
test("fremstillet -> fremstil", function() {deepEqual( Stem("fremstillet"), "fremstil");});
test("fremstilling -> fremstilling", function() {deepEqual( Stem("fremstilling"), "fremstilling");});
test("fremstillingen -> fremstilling", function() {deepEqual( Stem("fremstillingen"), "fremstilling");});
test("fremstod -> fremstod", function() {deepEqual( Stem("fremstod"), "fremstod");});
test("fremstråled -> fremstråled", function() {deepEqual( Stem("fremstråled"), "fremstråled");});
test("fremstå -> fremstå", function() {deepEqual( Stem("fremstå"), "fremstå");});
test("fremstået -> fremstå", function() {deepEqual( Stem("fremstået"), "fremstå");});
test("fremstår -> fremstår", function() {deepEqual( Stem("fremstår"), "fremstår");});
test("fremsynte -> fremsynt", function() {deepEqual( Stem("fremsynte"), "fremsynt");});
test("fremsæt -> fremsæt", function() {deepEqual( Stem("fremsæt"), "fremsæt");});
test("fremsætte -> fremsæt", function() {deepEqual( Stem("fremsætte"), "fremsæt");});
test("fremtager -> fremtag", function() {deepEqual( Stem("fremtager"), "fremtag");});
test("fremtid -> fremtid", function() {deepEqual( Stem("fremtid"), "fremtid");});
test("fremtiden -> fremtid", function() {deepEqual( Stem("fremtiden"), "fremtid");});
test("fremtidens -> fremtid", function() {deepEqual( Stem("fremtidens"), "fremtid");});
test("fremtidig -> fremtid", function() {deepEqual( Stem("fremtidig"), "fremtid");});
test("fremtog -> fremtog", function() {deepEqual( Stem("fremtog"), "fremtog");});
test("fremtrådte -> fremtråd", function() {deepEqual( Stem("fremtrådte"), "fremtråd");});
test("fremtræden -> fremtræd", function() {deepEqual( Stem("fremtræden"), "fremtræd");});
test("fremturede -> fremtured", function() {deepEqual( Stem("fremturede"), "fremtured");});
test("fremvokse -> fremvoks", function() {deepEqual( Stem("fremvokse"), "fremvoks");});
test("fremvokser -> fremvoks", function() {deepEqual( Stem("fremvokser"), "fremvoks");});
test("fremvælder -> fremvæld", function() {deepEqual( Stem("fremvælder"), "fremvæld");});
test("frenm -> frenm", function() {deepEqual( Stem("frenm"), "frenm");});
test("fretillet -> fretil", function() {deepEqual( Stem("fretillet"), "fretil");});
test("fri -> fri", function() {deepEqual( Stem("fri"), "fri");});
test("frie -> frie", function() {deepEqual( Stem("frie"), "frie");});
test("fried -> fried", function() {deepEqual( Stem("fried"), "fried");});
test("friede -> fried", function() {deepEqual( Stem("friede"), "fried");});
test("frier -> frier", function() {deepEqual( Stem("frier"), "frier");});
test("fries -> fries", function() {deepEqual( Stem("fries"), "fries");});
test("friet -> friet", function() {deepEqual( Stem("friet"), "friet");});
test("frigivelse -> frigiv", function() {deepEqual( Stem("frigivelse"), "frigiv");});
test("frigives -> frigiv", function() {deepEqual( Stem("frigives"), "frigiv");});
test("frigivet -> frigiv", function() {deepEqual( Stem("frigivet"), "frigiv");});
test("frigivne -> frigivn", function() {deepEqual( Stem("frigivne"), "frigivn");});
test("frigivnes -> frigivn", function() {deepEqual( Stem("frigivnes"), "frigivn");});
test("frigivningsåret -> frigivningsår", function() {deepEqual( Stem("frigivningsåret"), "frigivningsår");});
test("frigjorde -> frigjord", function() {deepEqual( Stem("frigjorde"), "frigjord");});
test("frigjort -> frigjort", function() {deepEqual( Stem("frigjort"), "frigjort");});
test("frigøre -> frigør", function() {deepEqual( Stem("frigøre"), "frigør");});
test("frihed -> frihed", function() {deepEqual( Stem("frihed"), "frihed");});
test("friheden -> frihed", function() {deepEqual( Stem("friheden"), "frihed");});
test("frihedens -> frihed", function() {deepEqual( Stem("frihedens"), "frihed");});
test("frikende -> frik", function() {deepEqual( Stem("frikende"), "frik");});
test("frikender -> frikend", function() {deepEqual( Stem("frikender"), "frikend");});
test("frikendes -> frik", function() {deepEqual( Stem("frikendes"), "frik");});
test("frikendt -> frikend", function() {deepEqual( Stem("frikendt"), "frikend");});
test("frikendte -> frikend", function() {deepEqual( Stem("frikendte"), "frikend");});
test("frikøbt -> frikøbt", function() {deepEqual( Stem("frikøbt"), "frikøbt");});
test("frimodig -> frimod", function() {deepEqual( Stem("frimodig"), "frimod");});
test("frimodige -> frimod", function() {deepEqual( Stem("frimodige"), "frimod");});
test("frimodighed -> frimod", function() {deepEqual( Stem("frimodighed"), "frimod");});
test("frimodigheden -> frimod", function() {deepEqual( Stem("frimodigheden"), "frimod");});
test("frimodigt -> frimod", function() {deepEqual( Stem("frimodigt"), "frimod");});
test("frisk -> frisk", function() {deepEqual( Stem("frisk"), "frisk");});
test("friskare -> friskar", function() {deepEqual( Stem("friskare"), "friskar");});
test("friske -> frisk", function() {deepEqual( Stem("friske"), "frisk");});
test("friskeste -> friskest", function() {deepEqual( Stem("friskeste"), "friskest");});
test("friskhed -> frisk", function() {deepEqual( Stem("friskhed"), "frisk");});
test("friskt -> frisk", function() {deepEqual( Stem("friskt"), "frisk");});
test("frist -> frist", function() {deepEqual( Stem("frist"), "frist");});
test("friste -> frist", function() {deepEqual( Stem("friste"), "frist");});
test("fristed -> fristed", function() {deepEqual( Stem("fristed"), "fristed");});
test("fristede -> fristed", function() {deepEqual( Stem("fristede"), "fristed");});
test("fristedes -> fristed", function() {deepEqual( Stem("fristedes"), "fristed");});
test("fristelse -> frist", function() {deepEqual( Stem("fristelse"), "frist");});
test("fristelsen -> frist", function() {deepEqual( Stem("fristelsen"), "frist");});
test("fristelsens -> frist", function() {deepEqual( Stem("fristelsens"), "frist");});
test("fristelser -> frist", function() {deepEqual( Stem("fristelser"), "frist");});
test("fristen -> frist", function() {deepEqual( Stem("fristen"), "frist");});
test("frister -> frist", function() {deepEqual( Stem("frister"), "frist");});
test("fristeren -> frist", function() {deepEqual( Stem("fristeren"), "frist");});
test("fristes -> frist", function() {deepEqual( Stem("fristes"), "frist");});
test("fristet -> frist", function() {deepEqual( Stem("fristet"), "frist");});
test("frit -> frit", function() {deepEqual( Stem("frit"), "frit");});
test("fritage -> fritag", function() {deepEqual( Stem("fritage"), "fritag");});
test("frivillig -> frivil", function() {deepEqual( Stem("frivillig"), "frivil");});
test("frivillige -> frivil", function() {deepEqual( Stem("frivillige"), "frivil");});
test("frivilligoffer -> frivilligof", function() {deepEqual( Stem("frivilligoffer"), "frivilligof");});
test("frivilligofre -> frivilligofr", function() {deepEqual( Stem("frivilligofre"), "frivilligofr");});
test("frivilligt -> frivil", function() {deepEqual( Stem("frivilligt"), "frivil");});
test("friår -> friår", function() {deepEqual( Stem("friår"), "friår");});
test("friåret -> friår", function() {deepEqual( Stem("friåret"), "friår");});
test("fro -> fro", function() {deepEqual( Stem("fro"), "fro");});
test("frodig -> frod", function() {deepEqual( Stem("frodig"), "frod");});
test("frodigt -> frod", function() {deepEqual( Stem("frodigt"), "frod");});
test("froding -> froding", function() {deepEqual( Stem("froding"), "froding");});
test("froløse -> froløs", function() {deepEqual( Stem("froløse"), "froløs");});
test("from -> from", function() {deepEqual( Stem("from"), "from");});
test("fromhed -> from", function() {deepEqual( Stem("fromhed"), "from");});
test("fromme -> from", function() {deepEqual( Stem("fromme"), "from");});
test("frommes -> from", function() {deepEqual( Stem("frommes"), "from");});
test("fromt -> fromt", function() {deepEqual( Stem("fromt"), "fromt");});
test("frost -> frost", function() {deepEqual( Stem("frost"), "frost");});
test("frue -> frue", function() {deepEqual( Stem("frue"), "frue");});
test("fruer -> fruer", function() {deepEqual( Stem("fruer"), "fruer");});
test("fruerstue -> fruerstu", function() {deepEqual( Stem("fruerstue"), "fruerstu");});
test("fruerstuen -> fruerstu", function() {deepEqual( Stem("fruerstuen"), "fruerstu");});
test("fruerstuens -> fruerstu", function() {deepEqual( Stem("fruerstuens"), "fruerstu");});
test("frues -> frues", function() {deepEqual( Stem("frues"), "frues");});
test("frugt -> frugt", function() {deepEqual( Stem("frugt"), "frugt");});
test("frugtbar -> frugtbar", function() {deepEqual( Stem("frugtbar"), "frugtbar");});
test("frugtbare -> frugtbar", function() {deepEqual( Stem("frugtbare"), "frugtbar");});
test("frugtbareste -> frugtbarest", function() {deepEqual( Stem("frugtbareste"), "frugtbarest");});
test("frugtbart -> frugtbart", function() {deepEqual( Stem("frugtbart"), "frugtbart");});
test("frugten -> frugt", function() {deepEqual( Stem("frugten"), "frugt");});
test("frugter -> frugt", function() {deepEqual( Stem("frugter"), "frugt");});
test("frugterne -> frugt", function() {deepEqual( Stem("frugterne"), "frugt");});
test("frugtesløse -> frugtesløs", function() {deepEqual( Stem("frugtesløse"), "frugtesløs");});
test("frugthave -> frugthav", function() {deepEqual( Stem("frugthave"), "frugthav");});
test("frugthaven -> frugthav", function() {deepEqual( Stem("frugthaven"), "frugthav");});
test("frugthavens -> frugthav", function() {deepEqual( Stem("frugthavens"), "frugthav");});
test("frugthaver -> frugthav", function() {deepEqual( Stem("frugthaver"), "frugthav");});
test("frugthaves -> frugthav", function() {deepEqual( Stem("frugthaves"), "frugthav");});
test("frugthøst -> frugthøst", function() {deepEqual( Stem("frugthøst"), "frugthøst");});
test("frugthøsten -> frugthøst", function() {deepEqual( Stem("frugthøsten"), "frugthøst");});
test("frugthøsthøjtid -> frugthøsthøjtid", function() {deepEqual( Stem("frugthøsthøjtid"), "frugthøsthøjtid");});
test("frugtlandet -> frugtland", function() {deepEqual( Stem("frugtlandet"), "frugtland");});
test("frugtsommelig -> frugtsom", function() {deepEqual( Stem("frugtsommelig"), "frugtsom");});
test("frugtsommelige -> frugtsom", function() {deepEqual( Stem("frugtsommelige"), "frugtsom");});
test("frugttiden -> frugttid", function() {deepEqual( Stem("frugttiden"), "frugttid");});
test("frugttræer -> frugttræ", function() {deepEqual( Stem("frugttræer"), "frugttræ");});
test("frugttræets -> frugttræ", function() {deepEqual( Stem("frugttræets"), "frugttræ");});
test("fryd -> fryd", function() {deepEqual( Stem("fryd"), "fryd");});
test("fryde -> fryd", function() {deepEqual( Stem("fryde"), "fryd");});
test("frydede -> fryded", function() {deepEqual( Stem("frydede"), "fryded");});
test("fryden -> fryd", function() {deepEqual( Stem("fryden"), "fryd");});
test("fryder -> fryd", function() {deepEqual( Stem("fryder"), "fryd");});
test("fryderåb -> fryderåb", function() {deepEqual( Stem("fryderåb"), "fryderåb");});
test("frydes -> fryd", function() {deepEqual( Stem("frydes"), "fryd");});
test("frydesang -> frydesang", function() {deepEqual( Stem("frydesang"), "frydesang");});
test("frydeskrig -> frydeskr", function() {deepEqual( Stem("frydeskrig"), "frydeskr");});
test("frygien -> frygi", function() {deepEqual( Stem("frygien"), "frygi");});
test("frygt -> frygt", function() {deepEqual( Stem("frygt"), "frygt");});
test("frygte -> frygt", function() {deepEqual( Stem("frygte"), "frygt");});
test("frygted -> frygted", function() {deepEqual( Stem("frygted"), "frygted");});
test("frygtede -> frygted", function() {deepEqual( Stem("frygtede"), "frygted");});
test("frygtelig -> frygt", function() {deepEqual( Stem("frygtelig"), "frygt");});
test("frygtelige -> frygt", function() {deepEqual( Stem("frygtelige"), "frygt");});
test("frygteligt -> frygt", function() {deepEqual( Stem("frygteligt"), "frygt");});
test("frygten -> frygt", function() {deepEqual( Stem("frygten"), "frygt");});
test("frygtende -> frygt", function() {deepEqual( Stem("frygtende"), "frygt");});
test("frygter -> frygt", function() {deepEqual( Stem("frygter"), "frygt");});
test("frygtes -> frygt", function() {deepEqual( Stem("frygtes"), "frygt");});
test("frygtet -> frygt", function() {deepEqual( Stem("frygtet"), "frygt");});
test("frygtindgydende -> frygtindgyd", function() {deepEqual( Stem("frygtindgydende"), "frygtindgyd");});
test("frygts -> frygt", function() {deepEqual( Stem("frygts"), "frygt");});
test("fråder -> fråd", function() {deepEqual( Stem("fråder"), "fråd");});
test("frådse -> fråds", function() {deepEqual( Stem("frådse"), "fråds");});
test("frådser -> fråds", function() {deepEqual( Stem("frådser"), "fråds");});
test("fræk -> fræk", function() {deepEqual( Stem("fræk"), "fræk");});
test("frækhed -> fræk", function() {deepEqual( Stem("frækhed"), "fræk");});
test("frække -> fræk", function() {deepEqual( Stem("frække"), "fræk");});
test("frækkes -> fræk", function() {deepEqual( Stem("frækkes"), "fræk");});
test("frækkeste -> frækkest", function() {deepEqual( Stem("frækkeste"), "frækkest");});
test("frækt -> frækt", function() {deepEqual( Stem("frækt"), "frækt");});
test("frænde -> frænd", function() {deepEqual( Stem("frænde"), "frænd");});
test("frænder -> frænd", function() {deepEqual( Stem("frænder"), "frænd");});
test("frænders -> frænd", function() {deepEqual( Stem("frænders"), "frænd");});
test("fræne -> fræn", function() {deepEqual( Stem("fræne"), "fræn");});
test("frænke -> frænk", function() {deepEqual( Stem("frænke"), "frænk");});
test("frættekær -> frættekær", function() {deepEqual( Stem("frættekær"), "frættekær");});
test("frø -> frø", function() {deepEqual( Stem("frø"), "frø");});
test("frøer -> frøer", function() {deepEqual( Stem("frøer"), "frøer");});
test("frøerne -> frøern", function() {deepEqual( Stem("frøerne"), "frøern");});
test("ftnder -> ftnder", function() {deepEqual( Stem("ftnder"), "ftnder");});
test("fuger -> fug", function() {deepEqual( Stem("fuger"), "fug");});
test("fugl -> fugl", function() {deepEqual( Stem("fugl"), "fugl");});
test("fugle -> fugl", function() {deepEqual( Stem("fugle"), "fugl");});
test("fuglefængere -> fuglefæng", function() {deepEqual( Stem("fuglefængere"), "fuglefæng");});
test("fuglefængerens -> fuglefæng", function() {deepEqual( Stem("fuglefængerens"), "fuglefæng");});
test("fuglefængernes -> fuglefæng", function() {deepEqual( Stem("fuglefængernes"), "fuglefæng");});
test("fuglekløer -> fugleklø", function() {deepEqual( Stem("fuglekløer"), "fugleklø");});
test("fuglene -> fugl", function() {deepEqual( Stem("fuglene"), "fugl");});
test("fuglens -> fugl", function() {deepEqual( Stem("fuglens"), "fugl");});
test("fuglerede -> fugl", function() {deepEqual( Stem("fuglerede"), "fugl");});
test("fugles -> fugl", function() {deepEqual( Stem("fugles"), "fugl");});
test("fugleskræmsel -> fugleskræmsel", function() {deepEqual( Stem("fugleskræmsel"), "fugleskræmsel");});
test("fuglevinger -> fugleving", function() {deepEqual( Stem("fuglevinger"), "fugleving");});
test("fugte -> fugt", function() {deepEqual( Stem("fugte"), "fugt");});
test("fuld -> fuld", function() {deepEqual( Stem("fuld"), "fuld");});
test("fuldbragt -> fuldbrag", function() {deepEqual( Stem("fuldbragt"), "fuldbrag");});
test("fuldbragte -> fuldbrag", function() {deepEqual( Stem("fuldbragte"), "fuldbrag");});
test("fuldbringe -> fuldbring", function() {deepEqual( Stem("fuldbringe"), "fuldbring");});
test("fuldbringer -> fuldbring", function() {deepEqual( Stem("fuldbringer"), "fuldbring");});
test("fuldbyrd -> fuldbyrd", function() {deepEqual( Stem("fuldbyrd"), "fuldbyrd");});
test("fuldbyrde -> fuldbyrd", function() {deepEqual( Stem("fuldbyrde"), "fuldbyrd");});
test("fuldbyrdede -> fuldbyrded", function() {deepEqual( Stem("fuldbyrdede"), "fuldbyrded");});
test("fuldbyrdedes -> fuldbyrded", function() {deepEqual( Stem("fuldbyrdedes"), "fuldbyrded");});
test("fuldbyrder -> fuldbyrd", function() {deepEqual( Stem("fuldbyrder"), "fuldbyrd");});
test("fuldbyrdes -> fuldbyrd", function() {deepEqual( Stem("fuldbyrdes"), "fuldbyrd");});
test("fuldbyrdet -> fuldbyrd", function() {deepEqual( Stem("fuldbyrdet"), "fuldbyrd");});
test("fulde -> fuld", function() {deepEqual( Stem("fulde"), "fuld");});
test("fuldelig -> fuld", function() {deepEqual( Stem("fuldelig"), "fuld");});
test("fuldende -> fuld", function() {deepEqual( Stem("fuldende"), "fuld");});
test("fuldendelse -> fuldend", function() {deepEqual( Stem("fuldendelse"), "fuldend");});
test("fuldender -> fuldend", function() {deepEqual( Stem("fuldender"), "fuldend");});
test("fuldendes -> fuld", function() {deepEqual( Stem("fuldendes"), "fuld");});
test("fuldendt -> fuldend", function() {deepEqual( Stem("fuldendt"), "fuldend");});
test("fuldendte -> fuldend", function() {deepEqual( Stem("fuldendte"), "fuldend");});
test("fuldendtes -> fuldend", function() {deepEqual( Stem("fuldendtes"), "fuldend");});
test("fuldeste -> fuldest", function() {deepEqual( Stem("fuldeste"), "fuldest");});
test("fuldfør -> fuldfør", function() {deepEqual( Stem("fuldfør"), "fuldfør");});
test("fuldføre -> fuldfør", function() {deepEqual( Stem("fuldføre"), "fuldfør");});
test("fuldfører -> fuldfør", function() {deepEqual( Stem("fuldfører"), "fuldfør");});
test("fuldførfe -> fuldførf", function() {deepEqual( Stem("fuldførfe"), "fuldførf");});
test("fuldført -> fuldført", function() {deepEqual( Stem("fuldført"), "fuldført");});
test("fuldførte -> fuldført", function() {deepEqual( Stem("fuldførte"), "fuldført");});
test("fuldførtes -> fuldført", function() {deepEqual( Stem("fuldførtes"), "fuldført");});
test("fuldgod -> fuldgod", function() {deepEqual( Stem("fuldgod"), "fuldgod");});
test("fuldkomme -> fuldkom", function() {deepEqual( Stem("fuldkomme"), "fuldkom");});
test("fuldkommede -> fuldkommed", function() {deepEqual( Stem("fuldkommede"), "fuldkommed");});
test("fuldkommedes -> fuldkommed", function() {deepEqual( Stem("fuldkommedes"), "fuldkommed");});
test("fuldkommelse -> fuldkom", function() {deepEqual( Stem("fuldkommelse"), "fuldkom");});
test("fuldkommen -> fuldkom", function() {deepEqual( Stem("fuldkommen"), "fuldkom");});
test("fuldkommengjorte -> fuldkommengjort", function() {deepEqual( Stem("fuldkommengjorte"), "fuldkommengjort");});
test("fuldkommenhed -> fuldkommen", function() {deepEqual( Stem("fuldkommenhed"), "fuldkommen");});
test("fuldkommenhedens -> fuldkommen", function() {deepEqual( Stem("fuldkommenhedens"), "fuldkommen");});
test("fuldkomment -> fuldkomment", function() {deepEqual( Stem("fuldkomment"), "fuldkomment");});
test("fuldkommer -> fuldkom", function() {deepEqual( Stem("fuldkommer"), "fuldkom");});
test("fuldkommes -> fuldkom", function() {deepEqual( Stem("fuldkommes"), "fuldkom");});
test("fuldkommet -> fuldkom", function() {deepEqual( Stem("fuldkommet"), "fuldkom");});
test("fuldkomne -> fuldkomn", function() {deepEqual( Stem("fuldkomne"), "fuldkomn");});
test("fuldkomnere -> fuldkomn", function() {deepEqual( Stem("fuldkomnere"), "fuldkomn");});
test("fuldmagt -> fuldmag", function() {deepEqual( Stem("fuldmagt"), "fuldmag");});
test("fuldmoden -> fuldmod", function() {deepEqual( Stem("fuldmoden"), "fuldmod");});
test("fuldmåne -> fuldmån", function() {deepEqual( Stem("fuldmåne"), "fuldmån");});
test("fuldmåneskin -> fuldmåneskin", function() {deepEqual( Stem("fuldmåneskin"), "fuldmåneskin");});
test("fuldstændig -> fuldstænd", function() {deepEqual( Stem("fuldstændig"), "fuldstænd");});
test("fuldt -> fuld", function() {deepEqual( Stem("fuldt"), "fuld");});
test("fuldtallige -> fuldtal", function() {deepEqual( Stem("fuldtallige"), "fuldtal");});
test("fuldtalligt -> fuldtal", function() {deepEqual( Stem("fuldtalligt"), "fuldtal");});
test("fuldtud -> fuldtud", function() {deepEqual( Stem("fuldtud"), "fuldtud");});
test("fuldvisse -> fuldvis", function() {deepEqual( Stem("fuldvisse"), "fuldvis");});
test("fuldvoksen -> fuldvoks", function() {deepEqual( Stem("fuldvoksen"), "fuldvoks");});
test("fuldvoksne -> fuldvoksn", function() {deepEqual( Stem("fuldvoksne"), "fuldvoksn");});
test("fuldvvægtigt -> fuldvvæg", function() {deepEqual( Stem("fuldvvægtigt"), "fuldvvæg");});
test("fuldvægtige -> fuldvæg", function() {deepEqual( Stem("fuldvægtige"), "fuldvæg");});
test("fulgle -> fulgl", function() {deepEqual( Stem("fulgle"), "fulgl");});
test("fulgt -> fulg", function() {deepEqual( Stem("fulgt"), "fulg");});
test("fulgte -> fulg", function() {deepEqual( Stem("fulgte"), "fulg");});
test("fulgtes -> fulg", function() {deepEqual( Stem("fulgtes"), "fulg");});
test("funden -> fund", function() {deepEqual( Stem("funden"), "fund");});
test("fundet -> fund", function() {deepEqual( Stem("fundet"), "fund");});
test("fundne -> fundn", function() {deepEqual( Stem("fundne"), "fundn");});
test("funkle -> funkl", function() {deepEqual( Stem("funkle"), "funkl");});
test("funklende -> funkl", function() {deepEqual( Stem("funklende"), "funkl");});
test("funkler -> funkl", function() {deepEqual( Stem("funkler"), "funkl");});
test("furer -> fur", function() {deepEqual( Stem("furer"), "fur");});
test("furerne -> fur", function() {deepEqual( Stem("furerne"), "fur");});
test("fygelus -> fygelus", function() {deepEqual( Stem("fygelus"), "fygelus");});
test("fyld -> fyld", function() {deepEqual( Stem("fyld"), "fyld");});
test("fylde -> fyld", function() {deepEqual( Stem("fylde"), "fyld");});
test("fylden -> fyld", function() {deepEqual( Stem("fylden"), "fyld");});
test("fylder -> fyld", function() {deepEqual( Stem("fylder"), "fyld");});
test("fylderi -> fylderi", function() {deepEqual( Stem("fylderi"), "fylderi");});
test("fyldes -> fyld", function() {deepEqual( Stem("fyldes"), "fyld");});
test("fyldt -> fyld", function() {deepEqual( Stem("fyldt"), "fyld");});
test("fyldte -> fyld", function() {deepEqual( Stem("fyldte"), "fyld");});
test("fyldtes -> fyld", function() {deepEqual( Stem("fyldtes"), "fyld");});
test("fylkede -> fylked", function() {deepEqual( Stem("fylkede"), "fylked");});
test("fyndord -> fyndord", function() {deepEqual( Stem("fyndord"), "fyndord");});
test("fyr -> fyr", function() {deepEqual( Stem("fyr"), "fyr");});
test("fyrretyve -> fyrretyv", function() {deepEqual( Stem("fyrretyve"), "fyrretyv");});
test("fyrretyvears -> fyrretyvear", function() {deepEqual( Stem("fyrretyvears"), "fyrretyvear");});
test("fyrretyvende -> fyrretyv", function() {deepEqual( Stem("fyrretyvende"), "fyrretyv");});
test("fyrretyves -> fyrretyv", function() {deepEqual( Stem("fyrretyves"), "fyrretyv");});
test("fyrsfelige -> fyrsf", function() {deepEqual( Stem("fyrsfelige"), "fyrsf");});
test("fyrste -> fyrst", function() {deepEqual( Stem("fyrste"), "fyrst");});
test("fyrsted -> fyrsted", function() {deepEqual( Stem("fyrsted"), "fyrsted");});
test("fyrstelige -> fyrst", function() {deepEqual( Stem("fyrstelige"), "fyrst");});
test("fyrsten -> fyrst", function() {deepEqual( Stem("fyrsten"), "fyrst");});
test("fyrstens -> fyrst", function() {deepEqual( Stem("fyrstens"), "fyrst");});
test("fyrster -> fyrst", function() {deepEqual( Stem("fyrster"), "fyrst");});
test("fyrsterne -> fyrst", function() {deepEqual( Stem("fyrsterne"), "fyrst");});
test("fyrsternes -> fyrst", function() {deepEqual( Stem("fyrsternes"), "fyrst");});
test("fyrsters -> fyrst", function() {deepEqual( Stem("fyrsters"), "fyrst");});
test("fyrstes -> fyrst", function() {deepEqual( Stem("fyrstes"), "fyrst");});
test("fyrstevis -> fyrstevis", function() {deepEqual( Stem("fyrstevis"), "fyrstevis");});
test("fyrstinden -> fyrstind", function() {deepEqual( Stem("fyrstinden"), "fyrstind");});
test("fyrstinder -> fyrstind", function() {deepEqual( Stem("fyrstinder"), "fyrstind");});
test("få -> få", function() {deepEqual( Stem("få"), "få");});
test("fået -> fået", function() {deepEqual( Stem("fået"), "fået");});
test("fåfængt -> fåfæng", function() {deepEqual( Stem("fåfængt"), "fåfæng");});
test("får -> får", function() {deepEqual( Stem("får"), "får");});
test("fåre -> får", function() {deepEqual( Stem("fåre"), "får");});
test("fåreflok -> fåreflok", function() {deepEqual( Stem("fåreflok"), "fåreflok");});
test("fårefolden -> fårefold", function() {deepEqual( Stem("fårefolden"), "fårefold");});
test("fårefoldene -> fårefold", function() {deepEqual( Stem("fårefoldene"), "fårefold");});
test("fårehjorde -> fårehjord", function() {deepEqual( Stem("fårehjorde"), "fårehjord");});
test("fårehjorden -> fårehjord", function() {deepEqual( Stem("fårehjorden"), "fårehjord");});
test("fårehyrde -> fårehyrd", function() {deepEqual( Stem("fårehyrde"), "fårehyrd");});
test("fårehyrderne -> fårehyrd", function() {deepEqual( Stem("fårehyrderne"), "fårehyrd");});
test("fåreklipning -> fåreklipning", function() {deepEqual( Stem("fåreklipning"), "fåreklipning");});
test("fåreklipningen -> fåreklipning", function() {deepEqual( Stem("fåreklipningen"), "fåreklipning");});
test("fåreklippere -> fåreklip", function() {deepEqual( Stem("fåreklippere"), "fåreklip");});
test("fåreklæder -> fåreklæd", function() {deepEqual( Stem("fåreklæder"), "fåreklæd");});
test("fårene -> får", function() {deepEqual( Stem("fårene"), "får");});
test("fårenes -> får", function() {deepEqual( Stem("fårenes"), "får");});
test("fåreporten -> fåreport", function() {deepEqual( Stem("fåreporten"), "fåreport");});
test("fåreprangerne -> fåreprang", function() {deepEqual( Stem("fåreprangerne"), "fåreprang");});
test("fåreskind -> fåreskind", function() {deepEqual( Stem("fåreskind"), "fåreskind");});
test("fåret -> får", function() {deepEqual( Stem("fåret"), "får");});
test("fårs -> får", function() {deepEqual( Stem("fårs"), "får");});
test("fås -> fås", function() {deepEqual( Stem("fås"), "fås");});
test("fåt -> fåt", function() {deepEqual( Stem("fåt"), "fåt");});
test("fåtalligt -> fåtal", function() {deepEqual( Stem("fåtalligt"), "fåtal");});
test("fæ -> fæ", function() {deepEqual( Stem("fæ"), "fæ");});
test("fædre -> fædr", function() {deepEqual( Stem("fædre"), "fædr");});
test("fædreland -> fædreland", function() {deepEqual( Stem("fædreland"), "fædreland");});
test("fædrene -> fædr", function() {deepEqual( Stem("fædrene"), "fædr");});
test("fædrenearv -> fædrenearv", function() {deepEqual( Stem("fædrenearv"), "fædrenearv");});
test("fædrenebuse -> fædrenebus", function() {deepEqual( Stem("fædrenebuse"), "fædrenebus");});
test("fædreneby -> fædreneby", function() {deepEqual( Stem("fædreneby"), "fædreneby");});
test("fædrenehsene -> fædrenehs", function() {deepEqual( Stem("fædrenehsene"), "fædrenehs");});
test("fædrenehus -> fædrenehus", function() {deepEqual( Stem("fædrenehus"), "fædrenehus");});
test("fædrenehuse -> fædrenehus", function() {deepEqual( Stem("fædrenehuse"), "fædrenehus");});
test("fædrenehusene -> fædrenehus", function() {deepEqual( Stem("fædrenehusene"), "fædrenehus");});
test("fædrenehusenes -> fædrenehus", function() {deepEqual( Stem("fædrenehusenes"), "fædrenehus");});
test("fædrenehuses -> fædrenehus", function() {deepEqual( Stem("fædrenehuses"), "fædrenehus");});
test("fædrenelovs -> fædrenelov", function() {deepEqual( Stem("fædrenelovs"), "fædrenelov");});
test("fædrenes -> fædr", function() {deepEqual( Stem("fædrenes"), "fædr");});
test("fædrenestamme -> fædrenestam", function() {deepEqual( Stem("fædrenestamme"), "fædrenestam");});
test("fædrenestammer -> fædrenestam", function() {deepEqual( Stem("fædrenestammer"), "fædrenestam");});
test("fædres -> fædr", function() {deepEqual( Stem("fædres"), "fædr");});
test("fægter -> fægt", function() {deepEqual( Stem("fægter"), "fægt");});
test("fæld -> fæld", function() {deepEqual( Stem("fæld"), "fæld");});
test("fælde -> fæld", function() {deepEqual( Stem("fælde"), "fæld");});
test("fælded -> fælded", function() {deepEqual( Stem("fælded"), "fælded");});
test("fældede -> fælded", function() {deepEqual( Stem("fældede"), "fælded");});
test("fælden -> fæld", function() {deepEqual( Stem("fælden"), "fæld");});
test("fælder -> fæld", function() {deepEqual( Stem("fælder"), "fæld");});
test("fældes -> fæld", function() {deepEqual( Stem("fældes"), "fæld");});
test("fældet -> fæld", function() {deepEqual( Stem("fældet"), "fæld");});
test("fældte -> fæld", function() {deepEqual( Stem("fældte"), "fæld");});
test("fælge -> fælg", function() {deepEqual( Stem("fælge"), "fælg");});
test("fælgene -> fælg", function() {deepEqual( Stem("fælgene"), "fælg");});
test("fælle -> fæl", function() {deepEqual( Stem("fælle"), "fæl");});
test("fæller -> fæl", function() {deepEqual( Stem("fæller"), "fæl");});
test("fællers -> fæl", function() {deepEqual( Stem("fællers"), "fæl");});
test("fælles -> fæl", function() {deepEqual( Stem("fælles"), "fæl");});
test("fællesskab -> fællesskab", function() {deepEqual( Stem("fællesskab"), "fællesskab");});
test("fællig -> fæl", function() {deepEqual( Stem("fællig"), "fæl");});
test("fængsel -> fængsel", function() {deepEqual( Stem("fængsel"), "fængsel");});
test("fængselet -> fængsel", function() {deepEqual( Stem("fængselet"), "fængsel");});
test("fængselets -> fængsel", function() {deepEqual( Stem("fængselets"), "fængsel");});
test("fængsels -> fængsel", function() {deepEqual( Stem("fængsels"), "fængsel");});
test("fængselsdrik -> fængselsdrik", function() {deepEqual( Stem("fængselsdrik"), "fængselsdrik");});
test("fængselsgården -> fængselsgård", function() {deepEqual( Stem("fængselsgården"), "fængselsgård");});
test("fængselsporten -> fængselsport", function() {deepEqual( Stem("fængselsporten"), "fængselsport");});
test("fængsle -> fængsl", function() {deepEqual( Stem("fængsle"), "fængsl");});
test("fængslede -> fængsled", function() {deepEqual( Stem("fængslede"), "fængsled");});
test("fængsler -> fængsl", function() {deepEqual( Stem("fængsler"), "fængsl");});
test("fængslet -> fængsl", function() {deepEqual( Stem("fængslet"), "fængsl");});
test("færd -> færd", function() {deepEqual( Stem("færd"), "færd");});
test("færde -> færd", function() {deepEqual( Stem("færde"), "færd");});
test("færdedes -> færded", function() {deepEqual( Stem("færdedes"), "færded");});
test("færdes -> færd", function() {deepEqual( Stem("færdes"), "færd");});
test("færdig -> færd", function() {deepEqual( Stem("færdig"), "færd");});
test("færdige -> færd", function() {deepEqual( Stem("færdige"), "færd");});
test("færdiges -> færd", function() {deepEqual( Stem("færdiges"), "færd");});
test("færdigt -> færd", function() {deepEqual( Stem("færdigt"), "færd");});
test("færre -> fær", function() {deepEqual( Stem("færre"), "fær");});
test("fæst -> fæst", function() {deepEqual( Stem("fæst"), "fæst");});
test("fæste -> fæst", function() {deepEqual( Stem("fæste"), "fæst");});
test("fæsted -> fæsted", function() {deepEqual( Stem("fæsted"), "fæsted");});
test("fæstede -> fæsted", function() {deepEqual( Stem("fæstede"), "fæsted");});
test("fæster -> fæst", function() {deepEqual( Stem("fæster"), "fæst");});
test("fæstet -> fæst", function() {deepEqual( Stem("fæstet"), "fæst");});
test("fæstned -> fæstned", function() {deepEqual( Stem("fæstned"), "fæstned");});
test("fæstner -> fæstn", function() {deepEqual( Stem("fæstner"), "fæstn");});
test("fæstnes -> fæstn", function() {deepEqual( Stem("fæstnes"), "fæstn");});
test("fæstnet -> fæstn", function() {deepEqual( Stem("fæstnet"), "fæstn");});
test("fæstning -> fæstning", function() {deepEqual( Stem("fæstning"), "fæstning");});
test("fæstningen -> fæstning", function() {deepEqual( Stem("fæstningen"), "fæstning");});
test("fæstninger -> fæstning", function() {deepEqual( Stem("fæstninger"), "fæstning");});
test("fæstningerne -> fæstning", function() {deepEqual( Stem("fæstningerne"), "fæstning");});
test("fæstningernes -> fæstning", function() {deepEqual( Stem("fæstningernes"), "fæstning");});
test("fæstningers -> fæstning", function() {deepEqual( Stem("fæstningers"), "fæstning");});
test("fæstningsværker -> fæstningsværk", function() {deepEqual( Stem("fæstningsværker"), "fæstningsværk");});
test("fætter -> fæt", function() {deepEqual( Stem("fætter"), "fæt");});
test("føbe -> føb", function() {deepEqual( Stem("føbe"), "føb");});
test("fødder -> fød", function() {deepEqual( Stem("fødder"), "fød");});
test("fødderne -> fød", function() {deepEqual( Stem("fødderne"), "fød");});
test("fødders -> fød", function() {deepEqual( Stem("fødders"), "fød");});
test("føde -> fød", function() {deepEqual( Stem("føde"), "fød");});
test("fødeby -> fødeby", function() {deepEqual( Stem("fødeby"), "fødeby");});
test("fødeland -> fødeland", function() {deepEqual( Stem("fødeland"), "fødeland");});
test("fødemidler -> fødemidl", function() {deepEqual( Stem("fødemidler"), "fødemidl");});
test("føden -> fød", function() {deepEqual( Stem("føden"), "fød");});
test("fødende -> fød", function() {deepEqual( Stem("fødende"), "fød");});
test("fødendes -> fød", function() {deepEqual( Stem("fødendes"), "fød");});
test("føder -> fød", function() {deepEqual( Stem("føder"), "fød");});
test("fødes -> fød", function() {deepEqual( Stem("fødes"), "fød");});
test("fødevarer -> fødevar", function() {deepEqual( Stem("fødevarer"), "fødevar");});
test("fødfe -> fødf", function() {deepEqual( Stem("fødfe"), "fødf");});
test("fødfes -> fødf", function() {deepEqual( Stem("fødfes"), "fødf");});
test("fødsel -> fødsel", function() {deepEqual( Stem("fødsel"), "fødsel");});
test("fødselen -> fødsel", function() {deepEqual( Stem("fødselen"), "fødsel");});
test("fødselsdag -> fødselsdag", function() {deepEqual( Stem("fødselsdag"), "fødselsdag");});
test("fødselsstunds -> fødselsstund", function() {deepEqual( Stem("fødselsstunds"), "fødselsstund");});
test("fødselsveer -> fødselsve", function() {deepEqual( Stem("fødselsveer"), "fødselsve");});
test("fødsler -> fødsl", function() {deepEqual( Stem("fødsler"), "fødsl");});
test("født -> født", function() {deepEqual( Stem("født"), "født");});
test("fødte -> født", function() {deepEqual( Stem("fødte"), "født");});
test("fødtes -> født", function() {deepEqual( Stem("fødtes"), "født");});
test("føer -> føer", function() {deepEqual( Stem("føer"), "føer");});
test("føj -> føj", function() {deepEqual( Stem("føj"), "føj");});
test("føje -> føj", function() {deepEqual( Stem("føje"), "føj");});
test("føjede -> føjed", function() {deepEqual( Stem("føjede"), "føjed");});
test("føjedes -> føjed", function() {deepEqual( Stem("føjedes"), "føjed");});
test("føjelig -> føj", function() {deepEqual( Stem("føjelig"), "føj");});
test("føjer -> føj", function() {deepEqual( Stem("føjer"), "føj");});
test("føjes -> føj", function() {deepEqual( Stem("føjes"), "føj");});
test("føjet -> føj", function() {deepEqual( Stem("føjet"), "føj");});
test("føl -> føl", function() {deepEqual( Stem("føl"), "føl");});
test("føle -> føl", function() {deepEqual( Stem("føle"), "føl");});
test("føler -> føl", function() {deepEqual( Stem("føler"), "føl");});
test("følesløse -> følesløs", function() {deepEqual( Stem("følesløse"), "følesløs");});
test("følg -> følg", function() {deepEqual( Stem("følg"), "følg");});
test("følge -> følg", function() {deepEqual( Stem("følge"), "følg");});
test("følgen -> følg", function() {deepEqual( Stem("følgen"), "følg");});
test("følgende -> følg", function() {deepEqual( Stem("følgende"), "følg");});
test("følger -> følg", function() {deepEqual( Stem("følger"), "følg");});
test("følges -> følg", function() {deepEqual( Stem("følges"), "følg");});
test("følglende -> følgl", function() {deepEqual( Stem("følglende"), "følgl");});
test("føllet -> føl", function() {deepEqual( Stem("føllet"), "føl");});
test("følt -> følt", function() {deepEqual( Stem("følt"), "følt");});
test("følte -> følt", function() {deepEqual( Stem("følte"), "følt");});
test("fønikien -> føniki", function() {deepEqual( Stem("fønikien"), "føniki");});
test("føniks -> fønik", function() {deepEqual( Stem("føniks"), "fønik");});
test("føniksfuglen -> føniksfugl", function() {deepEqual( Stem("føniksfuglen"), "føniksfugl");});
test("før -> før", function() {deepEqual( Stem("før"), "før");});
test("førdømmes -> førdøm", function() {deepEqual( Stem("førdømmes"), "førdøm");});
test("føre -> før", function() {deepEqual( Stem("føre"), "før");});
test("førend -> førend", function() {deepEqual( Stem("førend"), "førend");});
test("fører -> før", function() {deepEqual( Stem("fører"), "før");});
test("førere -> før", function() {deepEqual( Stem("førere"), "før");});
test("føreren -> før", function() {deepEqual( Stem("føreren"), "før");});
test("førerne -> før", function() {deepEqual( Stem("førerne"), "før");});
test("førernes -> før", function() {deepEqual( Stem("førernes"), "før");});
test("føres -> før", function() {deepEqual( Stem("føres"), "før");});
test("førlighed -> før", function() {deepEqual( Stem("førlighed"), "før");});
test("førløb -> førløb", function() {deepEqual( Stem("førløb"), "førløb");});
test("førreste -> førrest", function() {deepEqual( Stem("førreste"), "førrest");});
test("førsfe -> førsf", function() {deepEqual( Stem("førsfe"), "førsf");});
test("først -> først", function() {deepEqual( Stem("først"), "først");});
test("første -> først", function() {deepEqual( Stem("første"), "først");});
test("førstefødfe -> førstefødf", function() {deepEqual( Stem("førstefødfe"), "førstefødf");});
test("førstefødsel -> førstefødsel", function() {deepEqual( Stem("førstefødsel"), "førstefødsel");});
test("førstefødselsret -> førstefødselsr", function() {deepEqual( Stem("førstefødselsret"), "førstefødselsr");});
test("førstefødselsretten -> førstefødselsret", function() {deepEqual( Stem("førstefødselsretten"), "førstefødselsret");});
test("førstefødt -> førstefød", function() {deepEqual( Stem("førstefødt"), "førstefød");});
test("førstefødte -> førstefød", function() {deepEqual( Stem("førstefødte"), "førstefød");});
test("førstefødtes -> førstefød", function() {deepEqual( Stem("førstefødtes"), "førstefød");});
test("førstegrøde -> førstegrød", function() {deepEqual( Stem("førstegrøde"), "førstegrød");});
test("førstegrødebrødet -> førstegrødebrød", function() {deepEqual( Stem("førstegrødebrødet"), "førstegrødebrød");});
test("førstegrødefolket -> førstegrødefolk", function() {deepEqual( Stem("førstegrødefolket"), "førstegrødefolk");});
test("førstegrødegave -> førstegrødegav", function() {deepEqual( Stem("førstegrødegave"), "førstegrødegav");});
test("førstegrødegaver -> førstegrødegav", function() {deepEqual( Stem("førstegrødegaver"), "førstegrødegav");});
test("førstegrøden -> førstegrød", function() {deepEqual( Stem("førstegrøden"), "førstegrød");});
test("førstegrødeneget -> førstegrødeneg", function() {deepEqual( Stem("førstegrødeneget"), "førstegrødeneg");});
test("førstegrødens -> førstegrød", function() {deepEqual( Stem("førstegrødens"), "førstegrød");});
test("førstegrøderne -> førstegrød", function() {deepEqual( Stem("førstegrøderne"), "førstegrød");});
test("førstfødte -> førstfød", function() {deepEqual( Stem("førstfødte"), "førstfød");});
test("ført -> ført", function() {deepEqual( Stem("ført"), "ført");});
test("førte -> ført", function() {deepEqual( Stem("førte"), "ført");});
test("førtes -> ført", function() {deepEqual( Stem("førtes"), "ført");});
test("g -> g", function() {deepEqual( Stem("g"), "g");});
test("ga -> ga", function() {deepEqual( Stem("ga"), "ga");});
test("gab -> gab", function() {deepEqual( Stem("gab"), "gab");});
test("gabbatha -> gabbatha", function() {deepEqual( Stem("gabbatha"), "gabbatha");});
test("gabende -> gab", function() {deepEqual( Stem("gabende"), "gab");});
test("gabestok -> gabestok", function() {deepEqual( Stem("gabestok"), "gabestok");});
test("gabet -> gab", function() {deepEqual( Stem("gabet"), "gab");});
test("gabriel -> gabriel", function() {deepEqual( Stem("gabriel"), "gabriel");});
test("gad -> gad", function() {deepEqual( Stem("gad"), "gad");});
test("gadarenernes -> gadaren", function() {deepEqual( Stem("gadarenernes"), "gadaren");});
test("gadda -> gadda", function() {deepEqual( Stem("gadda"), "gadda");});
test("gaddi -> gaddi", function() {deepEqual( Stem("gaddi"), "gaddi");});
test("gaddiel -> gaddiel", function() {deepEqual( Stem("gaddiel"), "gaddiel");});
test("gade -> gad", function() {deepEqual( Stem("gade"), "gad");});
test("gadebjørner -> gadebjørn", function() {deepEqual( Stem("gadebjørner"), "gadebjørn");});
test("gadedørene -> gadedør", function() {deepEqual( Stem("gadedørene"), "gadedør");});
test("gadehjørne -> gadehjørn", function() {deepEqual( Stem("gadehjørne"), "gadehjørn");});
test("gadehjørner -> gadehjørn", function() {deepEqual( Stem("gadehjørner"), "gadehjørn");});
test("gadehjørnerne -> gadehjørn", function() {deepEqual( Stem("gadehjørnerne"), "gadehjørn");});
test("gaden -> gad", function() {deepEqual( Stem("gaden"), "gad");});
test("gadens -> gad", function() {deepEqual( Stem("gadens"), "gad");});
test("gader -> gad", function() {deepEqual( Stem("gader"), "gad");});
test("gaderne -> gad", function() {deepEqual( Stem("gaderne"), "gad");});
test("gadernes -> gad", function() {deepEqual( Stem("gadernes"), "gad");});
test("gaders -> gad", function() {deepEqual( Stem("gaders"), "gad");});
test("gadeskarn -> gadeskarn", function() {deepEqual( Stem("gadeskarn"), "gadeskarn");});
test("gadiferne -> gadif", function() {deepEqual( Stem("gadiferne"), "gadif");});
test("gadis -> gadis", function() {deepEqual( Stem("gadis"), "gadis");});
test("gaditen -> gadit", function() {deepEqual( Stem("gaditen"), "gadit");});
test("gaditer -> gadit", function() {deepEqual( Stem("gaditer"), "gadit");});
test("gaditerne -> gadit", function() {deepEqual( Stem("gaditerne"), "gadit");});
test("gaditernes -> gadit", function() {deepEqual( Stem("gaditernes"), "gadit");});
test("gaditiske -> gaditisk", function() {deepEqual( Stem("gaditiske"), "gaditisk");});
test("gads -> gad", function() {deepEqual( Stem("gads"), "gad");});
test("gaf -> gaf", function() {deepEqual( Stem("gaf"), "gaf");});
test("gaffel -> gaffel", function() {deepEqual( Stem("gaffel"), "gaffel");});
test("gaffelen -> gaffel", function() {deepEqual( Stem("gaffelen"), "gaffel");});
test("gafler -> gafl", function() {deepEqual( Stem("gafler"), "gafl");});
test("gaflerne -> gafl", function() {deepEqual( Stem("gaflerne"), "gafl");});
test("gaham -> gaham", function() {deepEqual( Stem("gaham"), "gaham");});
test("gahars -> gahar", function() {deepEqual( Stem("gahars"), "gahar");});
test("gal -> gal", function() {deepEqual( Stem("gal"), "gal");});
test("galal -> galal", function() {deepEqual( Stem("galal"), "galal");});
test("galatere -> galat", function() {deepEqual( Stem("galatere"), "galat");});
test("galaterne -> galat", function() {deepEqual( Stem("galaterne"), "galat");});
test("galatien -> galati", function() {deepEqual( Stem("galatien"), "galati");});
test("galatiske -> galatisk", function() {deepEqual( Stem("galatiske"), "galatisk");});
test("galbanum -> galbanum", function() {deepEqual( Stem("galbanum"), "galbanum");});
test("galde -> gald", function() {deepEqual( Stem("galde"), "gald");});
test("galder -> gald", function() {deepEqual( Stem("galder"), "gald");});
test("gale -> gal", function() {deepEqual( Stem("gale"), "gal");});
test("galed -> galed", function() {deepEqual( Stem("galed"), "galed");});
test("galede -> galed", function() {deepEqual( Stem("galede"), "galed");});
test("galer -> gal", function() {deepEqual( Stem("galer"), "gal");});
test("galgal -> galgal", function() {deepEqual( Stem("galgal"), "galgal");});
test("galge -> galg", function() {deepEqual( Stem("galge"), "galg");});
test("galgen -> galg", function() {deepEqual( Stem("galgen"), "galg");});
test("galger -> galg", function() {deepEqual( Stem("galger"), "galg");});
test("galilæa -> galilæa", function() {deepEqual( Stem("galilæa"), "galilæa");});
test("galilæas -> galilæa", function() {deepEqual( Stem("galilæas"), "galilæa");});
test("galilæer -> galilæ", function() {deepEqual( Stem("galilæer"), "galilæ");});
test("galilæere -> galilæ", function() {deepEqual( Stem("galilæere"), "galilæ");});
test("galilæeren -> galilæ", function() {deepEqual( Stem("galilæeren"), "galilæ");});
test("galilæerne -> galilæ", function() {deepEqual( Stem("galilæerne"), "galilæ");});
test("galilæiske -> galilæisk", function() {deepEqual( Stem("galilæiske"), "galilæisk");});
test("gallim -> gallim", function() {deepEqual( Stem("gallim"), "gallim");});
test("gallims -> gallim", function() {deepEqual( Stem("gallims"), "gallim");});
test("gallio -> gallio", function() {deepEqual( Stem("gallio"), "gallio");});
test("galne -> galn", function() {deepEqual( Stem("galne"), "galn");});
test("galskab -> galskab", function() {deepEqual( Stem("galskab"), "galskab");});
test("galt -> galt", function() {deepEqual( Stem("galt"), "galt");});
test("gamaliel -> gamaliel", function() {deepEqual( Stem("gamaliel"), "gamaliel");});
test("gamaliels -> gamaliel", function() {deepEqual( Stem("gamaliels"), "gamaliel");});
test("gamle -> gaml", function() {deepEqual( Stem("gamle"), "gaml");});
test("gamles -> gaml", function() {deepEqual( Stem("gamles"), "gaml");});
test("gamliel -> gamliel", function() {deepEqual( Stem("gamliel"), "gamliel");});
test("gamliels -> gamliel", function() {deepEqual( Stem("gamliels"), "gamliel");});
test("gammaditerne -> gammadit", function() {deepEqual( Stem("gammaditerne"), "gammadit");});
test("gammel -> gammel", function() {deepEqual( Stem("gammel"), "gammel");});
test("gammelt -> gammelt", function() {deepEqual( Stem("gammelt"), "gammelt");});
test("gammle -> gamml", function() {deepEqual( Stem("gammle"), "gamml");});
test("gamul -> gamul", function() {deepEqual( Stem("gamul"), "gamul");});
test("gan -> gan", function() {deepEqual( Stem("gan"), "gan");});
test("gane -> gan", function() {deepEqual( Stem("gane"), "gan");});
test("ganen -> gan", function() {deepEqual( Stem("ganen"), "gan");});
test("gang -> gang", function() {deepEqual( Stem("gang"), "gang");});
test("gangbar -> gangbar", function() {deepEqual( Stem("gangbar"), "gangbar");});
test("gange -> gang", function() {deepEqual( Stem("gange"), "gang");});
test("gangeme -> gangem", function() {deepEqual( Stem("gangeme"), "gangem");});
test("gangen -> gang", function() {deepEqual( Stem("gangen"), "gang");});
test("ganger -> gang", function() {deepEqual( Stem("ganger"), "gang");});
test("gangere -> gang", function() {deepEqual( Stem("gangere"), "gang");});
test("ganges -> gang", function() {deepEqual( Stem("ganges"), "gang");});
test("gangestænke -> gangestænk", function() {deepEqual( Stem("gangestænke"), "gangestænk");});
test("gannim -> gannim", function() {deepEqual( Stem("gannim"), "gannim");});
test("ganske -> gansk", function() {deepEqual( Stem("ganske"), "gansk");});
test("gareb -> gareb", function() {deepEqual( Stem("gareb"), "gareb");});
test("garebs -> gareb", function() {deepEqual( Stem("garebs"), "gareb");});
test("garizims -> garizim", function() {deepEqual( Stem("garizims"), "garizim");});
test("garmiten -> garmit", function() {deepEqual( Stem("garmiten"), "garmit");});
test("garn -> garn", function() {deepEqual( Stem("garn"), "garn");});
test("garnene -> garn", function() {deepEqual( Stem("garnene"), "garn");});
test("garnet -> garn", function() {deepEqual( Stem("garnet"), "garn");});
test("garver -> garv", function() {deepEqual( Stem("garver"), "garv");});
test("garveren -> garv", function() {deepEqual( Stem("garveren"), "garv");});
test("gasjmut -> gasjmut", function() {deepEqual( Stem("gasjmut"), "gasjmut");});
test("gat -> gat", function() {deepEqual( Stem("gat"), "gat");});
test("gatam -> gatam", function() {deepEqual( Stem("gatam"), "gatam");});
test("gatiten -> gatit", function() {deepEqual( Stem("gatiten"), "gatit");});
test("gav -> gav", function() {deepEqual( Stem("gav"), "gav");});
test("gave -> gav", function() {deepEqual( Stem("gave"), "gav");});
test("gaven -> gav", function() {deepEqual( Stem("gaven"), "gav");});
test("gaver -> gav", function() {deepEqual( Stem("gaver"), "gav");});
test("gaverne -> gav", function() {deepEqual( Stem("gaverne"), "gav");});
test("gaves -> gav", function() {deepEqual( Stem("gaves"), "gav");});
test("gavlen -> gavl", function() {deepEqual( Stem("gavlen"), "gavl");});
test("gavmild -> gavmild", function() {deepEqual( Stem("gavmild"), "gavmild");});
test("gavmildhed -> gavmild", function() {deepEqual( Stem("gavmildhed"), "gavmild");});
test("gavmildheds -> gavmild", function() {deepEqual( Stem("gavmildheds"), "gavmild");});
test("gavn -> gavn", function() {deepEqual( Stem("gavn"), "gavn");});
test("gavne -> gavn", function() {deepEqual( Stem("gavne"), "gavn");});
test("gavner -> gavn", function() {deepEqual( Stem("gavner"), "gavn");});
test("gavnet -> gavn", function() {deepEqual( Stem("gavnet"), "gavn");});
test("gavnlig -> gavn", function() {deepEqual( Stem("gavnlig"), "gavn");});
test("gavnligt -> gavn", function() {deepEqual( Stem("gavnligt"), "gavn");});
test("gavnløs -> gavnløs", function() {deepEqual( Stem("gavnløs"), "gavnløs");});
test("gavns -> gavn", function() {deepEqual( Stem("gavns"), "gavn");});
test("gavntræ -> gavntræ", function() {deepEqual( Stem("gavntræ"), "gavntræ");});
test("gaza -> gaza", function() {deepEqual( Stem("gaza"), "gaza");});
test("gazas -> gaza", function() {deepEqual( Stem("gazas"), "gaza");});
test("gazel -> gazel", function() {deepEqual( Stem("gazel"), "gazel");});
test("gazelle -> gazel", function() {deepEqual( Stem("gazelle"), "gazel");});
test("gazellen -> gazel", function() {deepEqual( Stem("gazellen"), "gazel");});
test("gazeller -> gazel", function() {deepEqual( Stem("gazeller"), "gazel");});
test("gazellerne -> gazel", function() {deepEqual( Stem("gazellerne"), "gazel");});
test("gazelletvillinger -> gazelletvilling", function() {deepEqual( Stem("gazelletvillinger"), "gazelletvilling");});
test("gazez -> gazez", function() {deepEqual( Stem("gazez"), "gazez");});
test("gazzams -> gazzam", function() {deepEqual( Stem("gazzams"), "gazzam");});
test("ge -> ge", function() {deepEqual( Stem("ge"), "ge");});
test("geba -> geba", function() {deepEqual( Stem("geba"), "geba");});
test("gebal -> gebal", function() {deepEqual( Stem("gebal"), "gebal");});
test("gebas -> geba", function() {deepEqual( Stem("gebas"), "geba");});
test("geber -> geb", function() {deepEqual( Stem("geber"), "geb");});
test("gebers -> geb", function() {deepEqual( Stem("gebers"), "geb");});
test("gebims -> gebim", function() {deepEqual( Stem("gebims"), "gebim");});
test("ged -> ged", function() {deepEqual( Stem("ged"), "ged");});
test("gedalja -> gedalja", function() {deepEqual( Stem("gedalja"), "gedalja");});
test("gedaljas -> gedalja", function() {deepEqual( Stem("gedaljas"), "gedalja");});
test("gedebuk -> gedebuk", function() {deepEqual( Stem("gedebuk"), "gedebuk");});
test("gedebukke -> gedebuk", function() {deepEqual( Stem("gedebukke"), "gedebuk");});
test("gedebukken -> gedebuk", function() {deepEqual( Stem("gedebukken"), "gedebuk");});
test("gedeflok -> gedeflok", function() {deepEqual( Stem("gedeflok"), "gedeflok");});
test("gedehamse -> gedehams", function() {deepEqual( Stem("gedehamse"), "gedehams");});
test("gedehjorde -> gedehjord", function() {deepEqual( Stem("gedehjorde"), "gedehjord");});
test("gedehår -> gedehår", function() {deepEqual( Stem("gedehår"), "gedehår");});
test("gedehårene -> gedehår", function() {deepEqual( Stem("gedehårene"), "gedehår");});
test("gedehårsnet -> gedehårsn", function() {deepEqual( Stem("gedehårsnet"), "gedehårsn");});
test("gedehårsnettet -> gedehårsnet", function() {deepEqual( Stem("gedehårsnettet"), "gedehårsnet");});
test("gedekid -> gedekid", function() {deepEqual( Stem("gedekid"), "gedekid");});
test("gedekiddene -> gedekid", function() {deepEqual( Stem("gedekiddene"), "gedekid");});
test("gedekiddet -> gedekid", function() {deepEqual( Stem("gedekiddet"), "gedekid");});
test("gedemælk -> gedemælk", function() {deepEqual( Stem("gedemælk"), "gedemælk");});
test("gedens -> ged", function() {deepEqual( Stem("gedens"), "ged");});
test("geder -> ged", function() {deepEqual( Stem("geder"), "ged");});
test("gedera -> gedera", function() {deepEqual( Stem("gedera"), "gedera");});
test("gederne -> ged", function() {deepEqual( Stem("gederne"), "ged");});
test("gederot -> gederot", function() {deepEqual( Stem("gederot"), "gederot");});
test("gederotajim -> gederotajim", function() {deepEqual( Stem("gederotajim"), "gederotajim");});
test("gedeskind -> gedeskind", function() {deepEqual( Stem("gedeskind"), "gedeskind");});
test("gedi -> gedi", function() {deepEqual( Stem("gedi"), "gedi");});
test("gedis -> gedis", function() {deepEqual( Stem("gedis"), "gedis");});
test("gedolims -> gedolim", function() {deepEqual( Stem("gedolims"), "gedolim");});
test("gedor -> gedor", function() {deepEqual( Stem("gedor"), "gedor");});
test("gedors -> gedor", function() {deepEqual( Stem("gedors"), "gedor");});
test("gehazi -> gehazi", function() {deepEqual( Stem("gehazi"), "gehazi");});
test("gejle -> gejl", function() {deepEqual( Stem("gejle"), "gejl");});
test("gelilot -> gelilot", function() {deepEqual( Stem("gelilot"), "gelilot");});
test("gem -> gem", function() {deepEqual( Stem("gem"), "gem");});
test("gemarja -> gemarja", function() {deepEqual( Stem("gemarja"), "gemarja");});
test("gemarjahu -> gemarjahu", function() {deepEqual( Stem("gemarjahu"), "gemarjahu");});
test("gemarjahus -> gemarjahus", function() {deepEqual( Stem("gemarjahus"), "gemarjahus");});
test("geming -> geming", function() {deepEqual( Stem("geming"), "geming");});
test("gemme -> gem", function() {deepEqual( Stem("gemme"), "gem");});
test("gemmer -> gem", function() {deepEqual( Stem("gemmer"), "gem");});
test("gemmes -> gem", function() {deepEqual( Stem("gemmes"), "gem");});
test("gemmestedet -> gemmested", function() {deepEqual( Stem("gemmestedet"), "gemmested");});
test("gemt -> gemt", function() {deepEqual( Stem("gemt"), "gemt");});
test("gemte -> gemt", function() {deepEqual( Stem("gemte"), "gemt");});
test("gen -> gen", function() {deepEqual( Stem("gen"), "gen");});
test("genbo -> genbo", function() {deepEqual( Stem("genbo"), "genbo");});
test("gendrev -> gendrev", function() {deepEqual( Stem("gendrev"), "gendrev");});
test("gendrive -> gendriv", function() {deepEqual( Stem("gendrive"), "gendriv");});
test("genezareth -> genezareth", function() {deepEqual( Stem("genezareth"), "genezareth");});
test("genezareths -> genezareth", function() {deepEqual( Stem("genezareths"), "genezareth");});
test("genfærd -> genfærd", function() {deepEqual( Stem("genfærd"), "genfærd");});
test("genfærdene -> genfærd", function() {deepEqual( Stem("genfærdene"), "genfærd");});
test("genfærds -> genfærd", function() {deepEqual( Stem("genfærds"), "genfærd");});
test("genfærdsånd -> genfærdsånd", function() {deepEqual( Stem("genfærdsånd"), "genfærdsånd");});
test("genfødt -> genfød", function() {deepEqual( Stem("genfødt"), "genfød");});
test("genfødte -> genfød", function() {deepEqual( Stem("genfødte"), "genfød");});
test("gengav -> gengav", function() {deepEqual( Stem("gengav"), "gengav");});
test("gengiv -> gengiv", function() {deepEqual( Stem("gengiv"), "gengiv");});
test("gengiver -> gengiv", function() {deepEqual( Stem("gengiver"), "gengiv");});
test("gengæld -> gengæld", function() {deepEqual( Stem("gengæld"), "gengæld");});
test("gengælde -> gengæld", function() {deepEqual( Stem("gengælde"), "gengæld");});
test("gengældelse -> gengæld", function() {deepEqual( Stem("gengældelse"), "gengæld");});
test("gengældelsen -> gengæld", function() {deepEqual( Stem("gengældelsen"), "gengæld");});
test("gengældelsens -> gengæld", function() {deepEqual( Stem("gengældelsens"), "gengæld");});
test("gengælder -> gengæld", function() {deepEqual( Stem("gengælder"), "gengæld");});
test("gengældes -> gengæld", function() {deepEqual( Stem("gengældes"), "gengæld");});
test("gengælds -> gengæld", function() {deepEqual( Stem("gengælds"), "gengæld");});
test("gengældsår -> gengældsår", function() {deepEqual( Stem("gengældsår"), "gengældsår");});
test("gengældt -> gengæld", function() {deepEqual( Stem("gengældt"), "gengæld");});
test("gengældte -> gengæld", function() {deepEqual( Stem("gengældte"), "gengæld");});
test("genindsat -> genindsat", function() {deepEqual( Stem("genindsat"), "genindsat");});
test("genindsatte -> genindsat", function() {deepEqual( Stem("genindsatte"), "genindsat");});
test("genindsætte -> genindsæt", function() {deepEqual( Stem("genindsætte"), "genindsæt");});
test("genkende -> genk", function() {deepEqual( Stem("genkende"), "genk");});
test("genkendt -> genkend", function() {deepEqual( Stem("genkendt"), "genkend");});
test("genkendte -> genkend", function() {deepEqual( Stem("genkendte"), "genkend");});
test("genløse -> genløs", function() {deepEqual( Stem("genløse"), "genløs");});
test("genløser -> genløs", function() {deepEqual( Stem("genløser"), "genløs");});
test("genløses -> genløs", function() {deepEqual( Stem("genløses"), "genløs");});
test("genløsning -> genløsning", function() {deepEqual( Stem("genløsning"), "genløsning");});
test("genløsnings -> genløsning", function() {deepEqual( Stem("genløsnings"), "genløsning");});
test("genløsningsår -> genløsningsår", function() {deepEqual( Stem("genløsningsår"), "genløsningsår");});
test("genløst -> genløs", function() {deepEqual( Stem("genløst"), "genløs");});
test("genløste -> genløs", function() {deepEqual( Stem("genløste"), "genløs");});
test("genmmem -> genmmem", function() {deepEqual( Stem("genmmem"), "genmmem");});
test("gennem -> gennem", function() {deepEqual( Stem("gennem"), "gennem");});
test("gennembor -> gennembor", function() {deepEqual( Stem("gennembor"), "gennembor");});
test("gennembore -> gennembor", function() {deepEqual( Stem("gennembore"), "gennembor");});
test("gennembored -> gennembored", function() {deepEqual( Stem("gennembored"), "gennembored");});
test("gennemborede -> gennembored", function() {deepEqual( Stem("gennemborede"), "gennembored");});
test("gennemborer -> gennembor", function() {deepEqual( Stem("gennemborer"), "gennembor");});
test("gennemboret -> gennembor", function() {deepEqual( Stem("gennemboret"), "gennembor");});
test("gennembrudt -> gennembrud", function() {deepEqual( Stem("gennembrudt"), "gennembrud");});
test("gennemdrukne -> gennemdrukn", function() {deepEqual( Stem("gennemdrukne"), "gennemdrukn");});
test("gennemføre -> gennemfør", function() {deepEqual( Stem("gennemføre"), "gennemfør");});
test("gennemgå -> gennemgå", function() {deepEqual( Stem("gennemgå"), "gennemgå");});
test("gennemgået -> gennemgå", function() {deepEqual( Stem("gennemgået"), "gennemgå");});
test("gennemløbe -> gennemløb", function() {deepEqual( Stem("gennemløbe"), "gennemløb");});
test("gennemrejse -> gennemrejs", function() {deepEqual( Stem("gennemrejse"), "gennemrejs");});
test("gennemrejsen -> gennemrejs", function() {deepEqual( Stem("gennemrejsen"), "gennemrejs");});
test("gennemrense -> gennemrens", function() {deepEqual( Stem("gennemrense"), "gennemrens");});
test("gennemryster -> gennemryst", function() {deepEqual( Stem("gennemryster"), "gennemryst");});
test("gennemsavede -> gennemsaved", function() {deepEqual( Stem("gennemsavede"), "gennemsaved");});
test("gennemsigtigt -> gennemsig", function() {deepEqual( Stem("gennemsigtigt"), "gennemsig");});
test("gennemskuer -> gennemsku", function() {deepEqual( Stem("gennemskuer"), "gennemsku");});
test("gennemstrømmes -> gennemstrøm", function() {deepEqual( Stem("gennemstrømmes"), "gennemstrøm");});
test("gennemstunget -> gennemstung", function() {deepEqual( Stem("gennemstunget"), "gennemstung");});
test("gennemsøg -> gennemsøg", function() {deepEqual( Stem("gennemsøg"), "gennemsøg");});
test("gennemsøge -> gennemsøg", function() {deepEqual( Stem("gennemsøge"), "gennemsøg");});
test("gennemsøgt -> gennemsøg", function() {deepEqual( Stem("gennemsøgt"), "gennemsøg");});
test("gennemtroløs -> gennemtroløs", function() {deepEqual( Stem("gennemtroløs"), "gennemtroløs");});
test("gennemtrænge -> gennemtræng", function() {deepEqual( Stem("gennemtrænge"), "gennemtræng");});
test("gennemtænkt -> gennemtænk", function() {deepEqual( Stem("gennemtænkt"), "gennemtænk");});
test("gennemtænkte -> gennemtænk", function() {deepEqual( Stem("gennemtænkte"), "gennemtænk");});
test("gennemvandre -> gennemvandr", function() {deepEqual( Stem("gennemvandre"), "gennemvandr");});
test("gennemvanket -> gennemvank", function() {deepEqual( Stem("gennemvanket"), "gennemvank");});
test("gennenm -> gennenm", function() {deepEqual( Stem("gennenm"), "gennenm");});
test("genopbygge -> genopbyg", function() {deepEqual( Stem("genopbygge"), "genopbyg");});
test("genopbyggede -> genopbygged", function() {deepEqual( Stem("genopbyggede"), "genopbygged");});
test("genopbyggedehan -> genopbyggedehan", function() {deepEqual( Stem("genopbyggedehan"), "genopbyggedehan");});
test("genopbygges -> genopbyg", function() {deepEqual( Stem("genopbygges"), "genopbyg");});
test("genopbygget -> genopbyg", function() {deepEqual( Stem("genopbygget"), "genopbyg");});
test("genopføre -> genopfør", function() {deepEqual( Stem("genopføre"), "genopfør");});
test("genopfører -> genopfør", function() {deepEqual( Stem("genopfører"), "genopfør");});
test("genopføres -> genopfør", function() {deepEqual( Stem("genopføres"), "genopfør");});
test("genopførte -> genopført", function() {deepEqual( Stem("genopførte"), "genopført");});
test("genoprette -> genopret", function() {deepEqual( Stem("genoprette"), "genopret");});
test("genoprettelses -> genopret", function() {deepEqual( Stem("genoprettelses"), "genopret");});
test("genopretter -> genopret", function() {deepEqual( Stem("genopretter"), "genopret");});
test("genrejse -> genrejs", function() {deepEqual( Stem("genrejse"), "genrejs");});
test("genrejser -> genrejs", function() {deepEqual( Stem("genrejser"), "genrejs");});
test("genrejses -> genrejs", function() {deepEqual( Stem("genrejses"), "genrejs");});
test("genrejsning -> genrejsning", function() {deepEqual( Stem("genrejsning"), "genrejsning");});
test("gense -> gens", function() {deepEqual( Stem("gense"), "gens");});
test("genser -> gens", function() {deepEqual( Stem("genser"), "gens");});
test("genskaber -> genskab", function() {deepEqual( Stem("genskaber"), "genskab");});
test("genstridig -> genstrid", function() {deepEqual( Stem("genstridig"), "genstrid");});
test("genstridigbed -> genstridigbed", function() {deepEqual( Stem("genstridigbed"), "genstridigbed");});
test("genstridige -> genstrid", function() {deepEqual( Stem("genstridige"), "genstrid");});
test("genstridighed -> genstrid", function() {deepEqual( Stem("genstridighed"), "genstrid");});
test("genstridighedens -> genstrid", function() {deepEqual( Stem("genstridighedens"), "genstrid");});
test("genstridigheds -> genstrid", function() {deepEqual( Stem("genstridigheds"), "genstrid");});
test("genstridigt -> genstrid", function() {deepEqual( Stem("genstridigt"), "genstrid");});
test("gensvar -> gensvar", function() {deepEqual( Stem("gensvar"), "gensvar");});
test("gentag -> gentag", function() {deepEqual( Stem("gentag"), "gentag");});
test("gentage -> gentag", function() {deepEqual( Stem("gentage"), "gentag");});
test("gentager -> gentag", function() {deepEqual( Stem("gentager"), "gentag");});
test("gentog -> gentog", function() {deepEqual( Stem("gentog"), "gentog");});
test("genubat -> genubat", function() {deepEqual( Stem("genubat"), "genubat");});
test("genvordigheder -> genvord", function() {deepEqual( Stem("genvordigheder"), "genvord");});
test("ger -> ger", function() {deepEqual( Stem("ger"), "ger");});
test("gera -> gera", function() {deepEqual( Stem("gera"), "gera");});
test("gerar -> gerar", function() {deepEqual( Stem("gerar"), "gerar");});
test("gerars -> gerar", function() {deepEqual( Stem("gerars"), "gerar");});
test("geras -> gera", function() {deepEqual( Stem("geras"), "gera");});
test("gerasenernes -> gerasen", function() {deepEqual( Stem("gerasenernes"), "gerasen");});
test("gere -> ger", function() {deepEqual( Stem("gere"), "ger");});
test("geringer -> gering", function() {deepEqual( Stem("geringer"), "gering");});
test("gerkarl -> gerkarl", function() {deepEqual( Stem("gerkarl"), "gerkarl");});
test("gerkarlen -> gerkarl", function() {deepEqual( Stem("gerkarlen"), "gerkarl");});
test("gerne -> gern", function() {deepEqual( Stem("gerne"), "gern");});
test("gerning -> gerning", function() {deepEqual( Stem("gerning"), "gerning");});
test("gerningen -> gerning", function() {deepEqual( Stem("gerningen"), "gerning");});
test("gerningens -> gerning", function() {deepEqual( Stem("gerningens"), "gerning");});
test("gerninger -> gerning", function() {deepEqual( Stem("gerninger"), "gerning");});
test("gerningerne -> gerning", function() {deepEqual( Stem("gerningerne"), "gerning");});
test("gerningernes -> gerning", function() {deepEqual( Stem("gerningernes"), "gerning");});
test("gerningers -> gerning", function() {deepEqual( Stem("gerningers"), "gerning");});
test("gernings -> gerning", function() {deepEqual( Stem("gernings"), "gerning");});
test("gerningsmanden -> gerningsmand", function() {deepEqual( Stem("gerningsmanden"), "gerningsmand");});
test("gersjan -> gersjan", function() {deepEqual( Stem("gersjan"), "gersjan");});
test("gersom -> gersom", function() {deepEqual( Stem("gersom"), "gersom");});
test("gersoms -> gersom", function() {deepEqual( Stem("gersoms"), "gersom");});
test("gerson -> gerson", function() {deepEqual( Stem("gerson"), "gerson");});
test("gersoniten -> gersonit", function() {deepEqual( Stem("gersoniten"), "gersonit");});
test("gersoniterne -> gersonit", function() {deepEqual( Stem("gersoniterne"), "gersonit");});
test("gersoniternes -> gersonit", function() {deepEqual( Stem("gersoniternes"), "gersonit");});
test("gersons -> gerson", function() {deepEqual( Stem("gersons"), "gerson");});
test("gerå -> gerå", function() {deepEqual( Stem("gerå"), "gerå");});
test("gesjem -> gesjem", function() {deepEqual( Stem("gesjem"), "gesjem");});
test("gesjur -> gesjur", function() {deepEqual( Stem("gesjur"), "gesjur");});
test("gesjuriterne -> gesjurit", function() {deepEqual( Stem("gesjuriterne"), "gesjurit");});
test("gesjuriternes -> gesjurit", function() {deepEqual( Stem("gesjuriternes"), "gesjurit");});
test("gesjurs -> gesjur", function() {deepEqual( Stem("gesjurs"), "gesjur");});
test("get -> get", function() {deepEqual( Stem("get"), "get");});
test("geter -> get", function() {deepEqual( Stem("geter"), "get");});
test("gethsemane -> gethseman", function() {deepEqual( Stem("gethsemane"), "gethseman");});
test("gets -> get", function() {deepEqual( Stem("gets"), "get");});
test("geuel -> geuel", function() {deepEqual( Stem("geuel"), "geuel");});
test("gezer -> gez", function() {deepEqual( Stem("gezer"), "gez");});
test("ggehvide -> ggehvid", function() {deepEqual( Stem("ggehvide"), "ggehvid");});
test("ggene -> ggen", function() {deepEqual( Stem("ggene"), "ggen");});
test("gia -> gia", function() {deepEqual( Stem("gia"), "gia");});
test("gibbars -> gibbar", function() {deepEqual( Stem("gibbars"), "gibbar");});
test("gibbeton -> gibbeton", function() {deepEqual( Stem("gibbeton"), "gibbeton");});
test("gibea -> gibea", function() {deepEqual( Stem("gibea"), "gibea");});
test("gibeas -> gibea", function() {deepEqual( Stem("gibeas"), "gibea");});
test("gibeat -> gibeat", function() {deepEqual( Stem("gibeat"), "gibeat");});
test("gibeon -> gibeon", function() {deepEqual( Stem("gibeon"), "gibeon");});
test("gibeoniten -> gibeonit", function() {deepEqual( Stem("gibeoniten"), "gibeonit");});
test("gibeoniterne -> gibeonit", function() {deepEqual( Stem("gibeoniterne"), "gibeonit");});
test("gibeons -> gibeon", function() {deepEqual( Stem("gibeons"), "gibeon");});
test("gid -> gid", function() {deepEqual( Stem("gid"), "gid");});
test("giddalti -> giddalti", function() {deepEqual( Stem("giddalti"), "giddalti");});
test("giddels -> giddel", function() {deepEqual( Stem("giddels"), "giddel");});
test("gideon -> gideon", function() {deepEqual( Stem("gideon"), "gideon");});
test("gideons -> gideon", function() {deepEqual( Stem("gideons"), "gideon");});
test("gider -> gid", function() {deepEqual( Stem("gider"), "gid");});
test("gidonis -> gidonis", function() {deepEqual( Stem("gidonis"), "gidonis");});
test("gidrot -> gidrot", function() {deepEqual( Stem("gidrot"), "gidrot");});
test("gidsler -> gidsl", function() {deepEqual( Stem("gidsler"), "gidsl");});
test("gift -> gift", function() {deepEqual( Stem("gift"), "gift");});
test("gifte -> gift", function() {deepEqual( Stem("gifte"), "gift");});
test("giftede -> gifted", function() {deepEqual( Stem("giftede"), "gifted");});
test("gifter -> gift", function() {deepEqual( Stem("gifter"), "gift");});
test("giftes -> gift", function() {deepEqual( Stem("giftes"), "gift");});
test("giftig -> gift", function() {deepEqual( Stem("giftig"), "gift");});
test("giftige -> gift", function() {deepEqual( Stem("giftige"), "gift");});
test("giftslangens -> giftslang", function() {deepEqual( Stem("giftslangens"), "giftslang");});
test("giftslanger -> giftslang", function() {deepEqual( Stem("giftslanger"), "giftslang");});
test("giftsnog -> giftsnog", function() {deepEqual( Stem("giftsnog"), "giftsnog");});
test("gifturt -> gifturt", function() {deepEqual( Stem("gifturt"), "gifturt");});
test("giftvand -> giftvand", function() {deepEqual( Stem("giftvand"), "giftvand");});
test("gihon -> gihon", function() {deepEqual( Stem("gihon"), "gihon");});
test("gihons -> gihon", function() {deepEqual( Stem("gihons"), "gihon");});
test("gijeaditernes -> gijeadit", function() {deepEqual( Stem("gijeaditernes"), "gijeadit");});
test("gik -> gik", function() {deepEqual( Stem("gik"), "gik");});
test("giki -> giki", function() {deepEqual( Stem("giki"), "giki");});
test("gilalaj -> gilalaj", function() {deepEqual( Stem("gilalaj"), "gilalaj");});
test("gilboa -> gilboa", function() {deepEqual( Stem("gilboa"), "gilboa");});
test("gilboas -> gilboa", function() {deepEqual( Stem("gilboas"), "gilboa");});
test("gilde -> gild", function() {deepEqual( Stem("gilde"), "gild");});
test("gildedage -> gildedag", function() {deepEqual( Stem("gildedage"), "gildedag");});
test("gildede -> gilded", function() {deepEqual( Stem("gildede"), "gilded");});
test("gildehus -> gildehus", function() {deepEqual( Stem("gildehus"), "gildehus");});
test("gildesalen -> gildesal", function() {deepEqual( Stem("gildesalen"), "gildesal");});
test("gildet -> gild", function() {deepEqual( Stem("gildet"), "gild");});
test("gildingen -> gilding", function() {deepEqual( Stem("gildingen"), "gilding");});
test("gildinger -> gilding", function() {deepEqual( Stem("gildinger"), "gilding");});
test("gilead -> gilead", function() {deepEqual( Stem("gilead"), "gilead");});
test("gileaditen -> gileadit", function() {deepEqual( Stem("gileaditen"), "gileadit");});
test("gileaditerne -> gileadit", function() {deepEqual( Stem("gileaditerne"), "gileadit");});
test("gileaditernes -> gileadit", function() {deepEqual( Stem("gileaditernes"), "gileadit");});
test("gileaditiske -> gileaditisk", function() {deepEqual( Stem("gileaditiske"), "gileaditisk");});
test("gileads -> gilead", function() {deepEqual( Stem("gileads"), "gilead");});
test("gilgal -> gilgal", function() {deepEqual( Stem("gilgal"), "gilgal");});
test("gilo -> gilo", function() {deepEqual( Stem("gilo"), "gilo");});
test("giloniten -> gilonit", function() {deepEqual( Stem("giloniten"), "gilonit");});
test("gimzo -> gimzo", function() {deepEqual( Stem("gimzo"), "gimzo");});
test("ginats -> ginat", function() {deepEqual( Stem("ginats"), "ginat");});
test("ginnetoj -> ginnetoj", function() {deepEqual( Stem("ginnetoj"), "ginnetoj");});
test("ginneton -> ginneton", function() {deepEqual( Stem("ginneton"), "ginneton");});
test("girgasjiterne -> girgasjit", function() {deepEqual( Stem("girgasjiterne"), "girgasjit");});
test("girgasjiternes -> girgasjit", function() {deepEqual( Stem("girgasjiternes"), "girgasjit");});
test("gisjpa -> gisjpa", function() {deepEqual( Stem("gisjpa"), "gisjpa");});
test("gitrede -> gitred", function() {deepEqual( Stem("gitrede"), "gitred");});
test("gittajim -> gittajim", function() {deepEqual( Stem("gittajim"), "gittajim");});
test("gitter -> git", function() {deepEqual( Stem("gitter"), "git");});
test("gitteret -> git", function() {deepEqual( Stem("gitteret"), "git");});
test("gittervinduer -> gittervindu", function() {deepEqual( Stem("gittervinduer"), "gittervindu");});
test("giv -> giv", function() {deepEqual( Stem("giv"), "giv");});
test("give -> giv", function() {deepEqual( Stem("give"), "giv");});
test("given -> giv", function() {deepEqual( Stem("given"), "giv");});
test("giver -> giv", function() {deepEqual( Stem("giver"), "giv");});
test("giverens -> giv", function() {deepEqual( Stem("giverens"), "giv");});
test("gives -> giv", function() {deepEqual( Stem("gives"), "giv");});
test("givet -> giv", function() {deepEqual( Stem("givet"), "giv");});
test("givhid -> givhid", function() {deepEqual( Stem("givhid"), "givhid");});
test("givne -> givn", function() {deepEqual( Stem("givne"), "givn");});
test("gizriterne -> gizrit", function() {deepEqual( Stem("gizriterne"), "gizrit");});
test("gjalde -> gjald", function() {deepEqual( Stem("gjalde"), "gjald");});
test("gjaldede -> gjalded", function() {deepEqual( Stem("gjaldede"), "gjalded");});
test("gjaldende -> gjald", function() {deepEqual( Stem("gjaldende"), "gjald");});
test("gjaldt -> gjald", function() {deepEqual( Stem("gjaldt"), "gjald");});
test("gjoet -> gjoet", function() {deepEqual( Stem("gjoet"), "gjoet");});
test("gjord -> gjord", function() {deepEqual( Stem("gjord"), "gjord");});
test("gjorde -> gjord", function() {deepEqual( Stem("gjorde"), "gjord");});
test("gjordes -> gjord", function() {deepEqual( Stem("gjordes"), "gjord");});
test("gjort -> gjort", function() {deepEqual( Stem("gjort"), "gjort");});
test("gjorte -> gjort", function() {deepEqual( Stem("gjorte"), "gjort");});
test("glad -> glad", function() {deepEqual( Stem("glad"), "glad");});
test("glade -> glad", function() {deepEqual( Stem("glade"), "glad");});
test("glades -> glad", function() {deepEqual( Stem("glades"), "glad");});
test("glalans -> glalan", function() {deepEqual( Stem("glalans"), "glalan");});
test("glam -> glam", function() {deepEqual( Stem("glam"), "glam");});
test("glans -> glan", function() {deepEqual( Stem("glans"), "glan");});
test("glansen -> glans", function() {deepEqual( Stem("glansen"), "glans");});
test("glar -> glar", function() {deepEqual( Stem("glar"), "glar");});
test("glarhav -> glarhav", function() {deepEqual( Stem("glarhav"), "glarhav");});
test("glarhavet -> glarhav", function() {deepEqual( Stem("glarhavet"), "glarhav");});
test("glat -> glat", function() {deepEqual( Stem("glat"), "glat");});
test("glatte -> glat", function() {deepEqual( Stem("glatte"), "glat");});
test("glattere -> glat", function() {deepEqual( Stem("glattere"), "glat");});
test("glatteren -> glat", function() {deepEqual( Stem("glatteren"), "glat");});
test("glatteste -> glattest", function() {deepEqual( Stem("glatteste"), "glattest");});
test("gle -> gle", function() {deepEqual( Stem("gle"), "gle");});
test("gled -> gled", function() {deepEqual( Stem("gled"), "gled");});
test("glegift -> glegift", function() {deepEqual( Stem("glegift"), "glegift");});
test("glem -> glem", function() {deepEqual( Stem("glem"), "glem");});
test("glemme -> glem", function() {deepEqual( Stem("glemme"), "glem");});
test("glemmende -> glem", function() {deepEqual( Stem("glemmende"), "glem");});
test("glemmer -> glem", function() {deepEqual( Stem("glemmer"), "glem");});
test("glemmes -> glem", function() {deepEqual( Stem("glemmes"), "glem");});
test("glemselens -> glemsel", function() {deepEqual( Stem("glemselens"), "glemsel");});
test("glemsom -> glemsom", function() {deepEqual( Stem("glemsom"), "glemsom");});
test("glemt -> glemt", function() {deepEqual( Stem("glemt"), "glemt");});
test("glemte -> glemt", function() {deepEqual( Stem("glemte"), "glemt");});
test("glemtes -> glemt", function() {deepEqual( Stem("glemtes"), "glemt");});
test("glens -> glen", function() {deepEqual( Stem("glens"), "glen");});
test("glenten -> glent", function() {deepEqual( Stem("glenten"), "glent");});
test("gler -> gler", function() {deepEqual( Stem("gler"), "gler");});
test("glers -> gler", function() {deepEqual( Stem("glers"), "gler");});
test("gleungen -> gleung", function() {deepEqual( Stem("gleungen"), "gleung");});
test("gleunger -> gleung", function() {deepEqual( Stem("gleunger"), "gleung");});
test("glide -> glid", function() {deepEqual( Stem("glide"), "glid");});
test("glider -> glid", function() {deepEqual( Stem("glider"), "glid");});
test("glimrende -> glimr", function() {deepEqual( Stem("glimrende"), "glimr");});
test("glimt -> glimt", function() {deepEqual( Stem("glimt"), "glimt");});
test("glimtede -> glimted", function() {deepEqual( Stem("glimtede"), "glimted");});
test("glimtende -> glimt", function() {deepEqual( Stem("glimtende"), "glimt");});
test("glinse -> glins", function() {deepEqual( Stem("glinse"), "glins");});
test("glinsende -> glins", function() {deepEqual( Stem("glinsende"), "glins");});
test("glip -> glip", function() {deepEqual( Stem("glip"), "glip");});
test("glippe -> glip", function() {deepEqual( Stem("glippe"), "glip");});
test("glipper -> glip", function() {deepEqual( Stem("glipper"), "glip");});
test("glippet -> glip", function() {deepEqual( Stem("glippet"), "glip");});
test("gloende -> gloend", function() {deepEqual( Stem("gloende"), "gloend");});
test("glubende -> glub", function() {deepEqual( Stem("glubende"), "glub");});
test("glubsk -> glubsk", function() {deepEqual( Stem("glubsk"), "glubsk");});
test("glubske -> glubsk", function() {deepEqual( Stem("glubske"), "glubsk");});
test("glubskhed -> glubsk", function() {deepEqual( Stem("glubskhed"), "glubsk");});
test("gluggen -> glug", function() {deepEqual( Stem("gluggen"), "glug");});
test("gluggerne -> glug", function() {deepEqual( Stem("gluggerne"), "glug");});
test("glæd -> glæd", function() {deepEqual( Stem("glæd"), "glæd");});
test("glæde -> glæd", function() {deepEqual( Stem("glæde"), "glæd");});
test("glæded -> glæded", function() {deepEqual( Stem("glæded"), "glæded");});
test("glædede -> glæded", function() {deepEqual( Stem("glædede"), "glæded");});
test("glæden -> glæd", function() {deepEqual( Stem("glæden"), "glæd");});
test("glædens -> glæd", function() {deepEqual( Stem("glædens"), "glæd");});
test("glæder -> glæd", function() {deepEqual( Stem("glæder"), "glæd");});
test("glædes -> glæd", function() {deepEqual( Stem("glædes"), "glæd");});
test("glædesbud -> glædesbud", function() {deepEqual( Stem("glædesbud"), "glædesbud");});
test("glædesbudet -> glædesbud", function() {deepEqual( Stem("glædesbudet"), "glædesbud");});
test("glædesbudets -> glædesbud", function() {deepEqual( Stem("glædesbudets"), "glædesbud");});
test("glædesbudskab -> glædesbudskab", function() {deepEqual( Stem("glædesbudskab"), "glædesbudskab");});
test("glædesdag -> glædesdag", function() {deepEqual( Stem("glædesdag"), "glædesdag");});
test("glædesdage -> glædesdag", function() {deepEqual( Stem("glædesdage"), "glædesdag");});
test("glædesfest -> glædesfest", function() {deepEqual( Stem("glædesfest"), "glædesfest");});
test("glædeshuset -> glædeshus", function() {deepEqual( Stem("glædeshuset"), "glædeshus");});
test("glædesjubelen -> glædesjubel", function() {deepEqual( Stem("glædesjubelen"), "glædesjubel");});
test("glædesråb -> glædesråb", function() {deepEqual( Stem("glædesråb"), "glædesråb");});
test("glædet -> glæd", function() {deepEqual( Stem("glædet"), "glæd");});
test("glædsesbudet -> glædsesbud", function() {deepEqual( Stem("glædsesbudet"), "glædsesbud");});
test("glød -> glød", function() {deepEqual( Stem("glød"), "glød");});
test("glødende -> glød", function() {deepEqual( Stem("glødende"), "glød");});
test("gløder -> glød", function() {deepEqual( Stem("gløder"), "glød");});
test("gløderne -> glød", function() {deepEqual( Stem("gløderne"), "glød");});
test("gmallis -> gmallis", function() {deepEqual( Stem("gmallis"), "gmallis");});
test("gnave -> gnav", function() {deepEqual( Stem("gnave"), "gnav");});
test("gnaved -> gnaved", function() {deepEqual( Stem("gnaved"), "gnaved");});
test("gnaver -> gnav", function() {deepEqual( Stem("gnaver"), "gnav");});
test("gnaveren -> gnav", function() {deepEqual( Stem("gnaveren"), "gnav");});
test("gnavet -> gnav", function() {deepEqual( Stem("gnavet"), "gnav");});
test("gned -> gned", function() {deepEqual( Stem("gned"), "gned");});
test("gnedet -> gned", function() {deepEqual( Stem("gnedet"), "gned");});
test("gnidsel -> gnidsel", function() {deepEqual( Stem("gnidsel"), "gnidsel");});
test("gnist -> gnist", function() {deepEqual( Stem("gnist"), "gnist");});
test("gnisterne -> gnist", function() {deepEqual( Stem("gnisterne"), "gnist");});
test("gnistrede -> gnistred", function() {deepEqual( Stem("gnistrede"), "gnistred");});
test("goa -> goa", function() {deepEqual( Stem("goa"), "goa");});
test("gob -> gob", function() {deepEqual( Stem("gob"), "gob");});
test("god -> god", function() {deepEqual( Stem("god"), "god");});
test("gode -> god", function() {deepEqual( Stem("gode"), "god");});
test("goder -> god", function() {deepEqual( Stem("goder"), "god");});
test("godes -> god", function() {deepEqual( Stem("godes"), "god");});
test("godhed -> god", function() {deepEqual( Stem("godhed"), "god");});
test("godheds -> god", function() {deepEqual( Stem("godheds"), "god");});
test("godkendt -> godkend", function() {deepEqual( Stem("godkendt"), "godkend");});
test("gods -> god", function() {deepEqual( Stem("gods"), "god");});
test("godser -> gods", function() {deepEqual( Stem("godser"), "gods");});
test("godset -> gods", function() {deepEqual( Stem("godset"), "gods");});
test("godt -> godt", function() {deepEqual( Stem("godt"), "godt");});
test("godtede -> godted", function() {deepEqual( Stem("godtede"), "godted");});
test("godtgjort -> godtgjort", function() {deepEqual( Stem("godtgjort"), "godtgjort");});
test("godtgør -> godtgør", function() {deepEqual( Stem("godtgør"), "godtgør");});
test("godtgøre -> godtgør", function() {deepEqual( Stem("godtgøre"), "godtgør");});
test("godtgørelse -> godtgør", function() {deepEqual( Stem("godtgørelse"), "godtgør");});
test("godtgøres -> godtgør", function() {deepEqual( Stem("godtgøres"), "godtgør");});
test("gofertræ -> gofertræ", function() {deepEqual( Stem("gofertræ"), "gofertræ");});
test("gog -> gog", function() {deepEqual( Stem("gog"), "gog");});
test("gogs -> gog", function() {deepEqual( Stem("gogs"), "gog");});
test("gojim -> gojim", function() {deepEqual( Stem("gojim"), "gojim");});
test("golan -> golan", function() {deepEqual( Stem("golan"), "golan");});
test("gold -> gold", function() {deepEqual( Stem("gold"), "gold");});
test("golde -> gold", function() {deepEqual( Stem("golde"), "gold");});
test("goldt -> gold", function() {deepEqual( Stem("goldt"), "gold");});
test("golgatha -> golgatha", function() {deepEqual( Stem("golgatha"), "golgatha");});
test("goliat -> goliat", function() {deepEqual( Stem("goliat"), "goliat");});
test("goliats -> goliat", function() {deepEqual( Stem("goliats"), "goliat");});
test("gomed -> gomed", function() {deepEqual( Stem("gomed"), "gomed");});
test("gomer -> gom", function() {deepEqual( Stem("gomer"), "gom");});
test("gomers -> gom", function() {deepEqual( Stem("gomers"), "gom");});
test("gomorra -> gomorra", function() {deepEqual( Stem("gomorra"), "gomorra");});
test("gomorrafolk -> gomorrafolk", function() {deepEqual( Stem("gomorrafolk"), "gomorrafolk");});
test("gomorras -> gomorra", function() {deepEqual( Stem("gomorras"), "gomorra");});
test("gorenhåtad -> gorenhåtad", function() {deepEqual( Stem("gorenhåtad"), "gorenhåtad");});
test("gosen -> gos", function() {deepEqual( Stem("gosen"), "gos");});
test("gosens -> gos", function() {deepEqual( Stem("gosens"), "gos");});
test("gosjen -> gosj", function() {deepEqual( Stem("gosjen"), "gosj");});
test("gozan -> gozan", function() {deepEqual( Stem("gozan"), "gozan");});
test("gozans -> gozan", function() {deepEqual( Stem("gozans"), "gozan");});
test("grad -> grad", function() {deepEqual( Stem("grad"), "grad");});
test("gram -> gram", function() {deepEqual( Stem("gram"), "gram");});
test("gran -> gran", function() {deepEqual( Stem("gran"), "gran");});
test("granattræer -> granattræ", function() {deepEqual( Stem("granattræer"), "granattræ");});
test("granattræet -> granattræ", function() {deepEqual( Stem("granattræet"), "granattræ");});
test("granatæble -> granatæbl", function() {deepEqual( Stem("granatæble"), "granatæbl");});
test("granatæbler -> granatæbl", function() {deepEqual( Stem("granatæbler"), "granatæbl");});
test("granatæblerne -> granatæbl", function() {deepEqual( Stem("granatæblerne"), "granatæbl");});
test("granatæblers -> granatæbl", function() {deepEqual( Stem("granatæblers"), "granatæbl");});
test("granatæbletræer -> granatæbletræ", function() {deepEqual( Stem("granatæbletræer"), "granatæbletræ");});
test("granatæbletræet -> granatæbletræ", function() {deepEqual( Stem("granatæbletræet"), "granatæbletræ");});
test("grander -> grand", function() {deepEqual( Stem("grander"), "grand");});
test("gransk -> gransk", function() {deepEqual( Stem("gransk"), "gransk");});
test("granske -> gransk", function() {deepEqual( Stem("granske"), "gransk");});
test("granskede -> gransked", function() {deepEqual( Stem("granskede"), "gransked");});
test("gransken -> gransk", function() {deepEqual( Stem("gransken"), "gransk");});
test("gransker -> gransk", function() {deepEqual( Stem("gransker"), "gransk");});
test("gransket -> gransk", function() {deepEqual( Stem("gransket"), "gransk");});
test("granskning -> granskning", function() {deepEqual( Stem("granskning"), "granskning");});
test("grant -> grant", function() {deepEqual( Stem("grant"), "grant");});
test("granvoksne -> granvoksn", function() {deepEqual( Stem("granvoksne"), "granvoksn");});
test("grav -> grav", function() {deepEqual( Stem("grav"), "grav");});
test("grave -> grav", function() {deepEqual( Stem("grave"), "grav");});
test("gravede -> graved", function() {deepEqual( Stem("gravede"), "graved");});
test("graven -> grav", function() {deepEqual( Stem("graven"), "grav");});
test("gravene -> grav", function() {deepEqual( Stem("gravene"), "grav");});
test("gravens -> grav", function() {deepEqual( Stem("gravens"), "grav");});
test("graver -> grav", function() {deepEqual( Stem("graver"), "grav");});
test("gravere -> grav", function() {deepEqual( Stem("gravere"), "grav");});
test("graverede -> grav", function() {deepEqual( Stem("graverede"), "grav");});
test("graverer -> grav", function() {deepEqual( Stem("graverer"), "grav");});
test("graveret -> grav", function() {deepEqual( Stem("graveret"), "grav");});
test("gravering -> gravering", function() {deepEqual( Stem("gravering"), "gravering");});
test("graverne -> grav", function() {deepEqual( Stem("graverne"), "grav");});
test("graves -> grav", function() {deepEqual( Stem("graves"), "grav");});
test("gravet -> grav", function() {deepEqual( Stem("gravet"), "grav");});
test("gravhøj -> gravhøj", function() {deepEqual( Stem("gravhøj"), "gravhøj");});
test("gravkammer -> gravkam", function() {deepEqual( Stem("gravkammer"), "gravkam");});
test("gravlejet -> gravlej", function() {deepEqual( Stem("gravlejet"), "gravlej");});
test("gravmæle -> gravmæl", function() {deepEqual( Stem("gravmæle"), "gravmæl");});
test("gravpaladser -> gravpalads", function() {deepEqual( Stem("gravpaladser"), "gravpalads");});
test("gravsted -> gravsted", function() {deepEqual( Stem("gravsted"), "gravsted");});
test("gravsteder -> gravsted", function() {deepEqual( Stem("gravsteder"), "gravsted");});
test("gravstikken -> gravstik", function() {deepEqual( Stem("gravstikken"), "gravstik");});
test("gravstøtte -> gravstøt", function() {deepEqual( Stem("gravstøtte"), "gravstøt");});
test("greb -> greb", function() {deepEqual( Stem("greb"), "greb");});
test("grebe -> greb", function() {deepEqual( Stem("grebe"), "greb");});
test("greben -> greb", function() {deepEqual( Stem("greben"), "greb");});
test("grebes -> greb", function() {deepEqual( Stem("grebes"), "greb");});
test("grebet -> greb", function() {deepEqual( Stem("grebet"), "greb");});
test("grebne -> grebn", function() {deepEqual( Stem("grebne"), "grebn");});
test("gren -> gren", function() {deepEqual( Stem("gren"), "gren");});
test("grene -> gren", function() {deepEqual( Stem("grene"), "gren");});
test("grenen -> gren", function() {deepEqual( Stem("grenen"), "gren");});
test("grenene -> gren", function() {deepEqual( Stem("grenene"), "gren");});
test("grenes -> gren", function() {deepEqual( Stem("grenes"), "gren");});
test("grib -> grib", function() {deepEqual( Stem("grib"), "grib");});
test("gribbe -> grib", function() {deepEqual( Stem("gribbe"), "grib");});
test("gribbene -> grib", function() {deepEqual( Stem("gribbene"), "grib");});
test("gribe -> grib", function() {deepEqual( Stem("gribe"), "grib");});
test("griber -> grib", function() {deepEqual( Stem("griber"), "grib");});
test("gribes -> grib", function() {deepEqual( Stem("gribes"), "grib");});
test("gridske -> gridsk", function() {deepEqual( Stem("gridske"), "gridsk");});
test("gridskhed -> gridsk", function() {deepEqual( Stem("gridskhed"), "gridsk");});
test("gridskheds -> gridsk", function() {deepEqual( Stem("gridskheds"), "gridsk");});
test("griffel -> griffel", function() {deepEqual( Stem("griffel"), "griffel");});
test("grimme -> grim", function() {deepEqual( Stem("grimme"), "grim");});
test("gro -> gro", function() {deepEqual( Stem("gro"), "gro");});
test("gror -> gror", function() {deepEqual( Stem("gror"), "gror");});
test("grov -> grov", function() {deepEqual( Stem("grov"), "grov");});
test("grove -> grov", function() {deepEqual( Stem("grove"), "grov");});
test("grovelig -> grov", function() {deepEqual( Stem("grovelig"), "grov");});
test("grovmel -> grovmel", function() {deepEqual( Stem("grovmel"), "grovmel");});
test("grovsmede -> grovsmed", function() {deepEqual( Stem("grovsmede"), "grovsmed");});
test("grovsmedene -> grovsmed", function() {deepEqual( Stem("grovsmedene"), "grovsmed");});
test("gru -> gru", function() {deepEqual( Stem("gru"), "gru");});
test("grube -> grub", function() {deepEqual( Stem("grube"), "grub");});
test("gruben -> grub", function() {deepEqual( Stem("gruben"), "grub");});
test("grubens -> grub", function() {deepEqual( Stem("grubens"), "grub");});
test("gruber -> grub", function() {deepEqual( Stem("gruber"), "grub");});
test("grublede -> grubled", function() {deepEqual( Stem("grublede"), "grubled");});
test("grubler -> grubl", function() {deepEqual( Stem("grubler"), "grubl");});
test("grue -> grue", function() {deepEqual( Stem("grue"), "grue");});
test("grued -> grued", function() {deepEqual( Stem("grued"), "grued");});
test("gruede -> grued", function() {deepEqual( Stem("gruede"), "grued");});
test("gruelige -> gruel", function() {deepEqual( Stem("gruelige"), "gruel");});
test("gruer -> gruer", function() {deepEqual( Stem("gruer"), "gruer");});
test("grufuld -> grufuld", function() {deepEqual( Stem("grufuld"), "grufuld");});
test("grufulde -> grufuld", function() {deepEqual( Stem("grufulde"), "grufuld");});
test("grum -> grum", function() {deepEqual( Stem("grum"), "grum");});
test("grumhed -> grum", function() {deepEqual( Stem("grumhed"), "grum");});
test("grumme -> grum", function() {deepEqual( Stem("grumme"), "grum");});
test("grummeste -> grummest", function() {deepEqual( Stem("grummeste"), "grummest");});
test("grumset -> grums", function() {deepEqual( Stem("grumset"), "grums");});
test("grumt -> grumt", function() {deepEqual( Stem("grumt"), "grumt");});
test("grund -> grund", function() {deepEqual( Stem("grund"), "grund");});
test("grunde -> grund", function() {deepEqual( Stem("grunde"), "grund");});
test("grunded -> grunded", function() {deepEqual( Stem("grunded"), "grunded");});
test("grundede -> grunded", function() {deepEqual( Stem("grundede"), "grunded");});
test("grundejendom -> grundejendom", function() {deepEqual( Stem("grundejendom"), "grundejendom");});
test("grunden -> grund", function() {deepEqual( Stem("grunden"), "grund");});
test("grunder -> grund", function() {deepEqual( Stem("grunder"), "grund");});
test("grundes -> grund", function() {deepEqual( Stem("grundes"), "grund");});
test("grundet -> grund", function() {deepEqual( Stem("grundet"), "grund");});
test("grundfæste -> grundfæst", function() {deepEqual( Stem("grundfæste"), "grundfæst");});
test("grundfæsted -> grundfæsted", function() {deepEqual( Stem("grundfæsted"), "grundfæsted");});
test("grundfæstede -> grundfæsted", function() {deepEqual( Stem("grundfæstede"), "grundfæsted");});
test("grundfæster -> grundfæst", function() {deepEqual( Stem("grundfæster"), "grundfæst");});
test("grundfæstes -> grundfæst", function() {deepEqual( Stem("grundfæstes"), "grundfæst");});
test("grundfæstet -> grundfæst", function() {deepEqual( Stem("grundfæstet"), "grundfæst");});
test("grundig -> grund", function() {deepEqual( Stem("grundig"), "grund");});
test("grundige -> grund", function() {deepEqual( Stem("grundige"), "grund");});
test("grundigt -> grund", function() {deepEqual( Stem("grundigt"), "grund");});
test("grundlag -> grundlag", function() {deepEqual( Stem("grundlag"), "grundlag");});
test("grundlagde -> grundlag", function() {deepEqual( Stem("grundlagde"), "grundlag");});
test("grundlagt -> grundlag", function() {deepEqual( Stem("grundlagt"), "grundlag");});
test("grundlæggelse -> grundlæg", function() {deepEqual( Stem("grundlæggelse"), "grundlæg");});
test("grundlægger -> grundlæg", function() {deepEqual( Stem("grundlægger"), "grundlæg");});
test("grundløst -> grundløs", function() {deepEqual( Stem("grundløst"), "grundløs");});
test("grundmure -> grundmur", function() {deepEqual( Stem("grundmure"), "grundmur");});
test("grundpillerne -> grundpil", function() {deepEqual( Stem("grundpillerne"), "grundpil");});
test("grundsten -> grundst", function() {deepEqual( Stem("grundsten"), "grundst");});
test("grundstøtter -> grundstøt", function() {deepEqual( Stem("grundstøtter"), "grundstøt");});
test("grundvold -> grundvold", function() {deepEqual( Stem("grundvold"), "grundvold");});
test("grundvolde -> grundvold", function() {deepEqual( Stem("grundvolde"), "grundvold");});
test("grundvolden -> grundvold", function() {deepEqual( Stem("grundvolden"), "grundvold");});
test("grus -> grus", function() {deepEqual( Stem("grus"), "grus");});
test("grusdynge -> grusdyng", function() {deepEqual( Stem("grusdynge"), "grusdyng");});
test("grusdynger -> grusdyng", function() {deepEqual( Stem("grusdynger"), "grusdyng");});
test("grusdyngerne -> grusdyng", function() {deepEqual( Stem("grusdyngerne"), "grusdyng");});
test("grushob -> grushob", function() {deepEqual( Stem("grushob"), "grushob");});
test("grushobe -> grushob", function() {deepEqual( Stem("grushobe"), "grushob");});
test("grusom -> grusom", function() {deepEqual( Stem("grusom"), "grusom");});
test("gry -> gry", function() {deepEqual( Stem("gry"), "gry");});
test("gryde -> gryd", function() {deepEqual( Stem("gryde"), "gryd");});
test("gryden -> gryd", function() {deepEqual( Stem("gryden"), "gryd");});
test("gryder -> gryd", function() {deepEqual( Stem("gryder"), "gryd");});
test("gryderne -> gryd", function() {deepEqual( Stem("gryderne"), "gryd");});
test("gryede -> gryed", function() {deepEqual( Stem("gryede"), "gryed");});
test("gryn -> gryn", function() {deepEqual( Stem("gryn"), "gryn");});
test("gryr -> gryr", function() {deepEqual( Stem("gryr"), "gryr");});
test("grå -> grå", function() {deepEqual( Stem("grå"), "grå");});
test("gråd -> gråd", function() {deepEqual( Stem("gråd"), "gråd");});
test("gråden -> gråd", function() {deepEqual( Stem("gråden"), "gråd");});
test("grådig -> gråd", function() {deepEqual( Stem("grådig"), "gråd");});
test("grådige -> gråd", function() {deepEqual( Stem("grådige"), "gråd");});
test("grånende -> grån", function() {deepEqual( Stem("grånende"), "grån");});
test("gråner -> grån", function() {deepEqual( Stem("gråner"), "grån");});
test("grånet -> grån", function() {deepEqual( Stem("grånet"), "grån");});
test("græd -> græd", function() {deepEqual( Stem("græd"), "græd");});
test("græde -> græd", function() {deepEqual( Stem("græde"), "græd");});
test("grædeegen -> grædeeg", function() {deepEqual( Stem("grædeegen"), "grædeeg");});
test("grædende -> græd", function() {deepEqual( Stem("grædende"), "græd");});
test("græder -> græd", function() {deepEqual( Stem("græder"), "græd");});
test("grædes -> græd", function() {deepEqual( Stem("grædes"), "græd");});
test("grædetiden -> grædetid", function() {deepEqual( Stem("grædetiden"), "grædetid");});
test("grædt -> grædt", function() {deepEqual( Stem("grædt"), "grædt");});
test("grækenland -> grækenland", function() {deepEqual( Stem("grækenland"), "grækenland");});
test("grækenlands -> grækenland", function() {deepEqual( Stem("grækenlands"), "grækenland");});
test("græker -> græk", function() {deepEqual( Stem("græker"), "græk");});
test("grækere -> græk", function() {deepEqual( Stem("grækere"), "græk");});
test("grækerne -> græk", function() {deepEqual( Stem("grækerne"), "græk");});
test("grækers -> græk", function() {deepEqual( Stem("grækers"), "græk");});
test("græm -> græm", function() {deepEqual( Stem("græm"), "græm");});
test("græmme -> græm", function() {deepEqual( Stem("græmme"), "græm");});
test("græmmed -> græmmed", function() {deepEqual( Stem("græmmed"), "græmmed");});
test("græmmede -> græmmed", function() {deepEqual( Stem("græmmede"), "græmmed");});
test("græmmelse -> græm", function() {deepEqual( Stem("græmmelse"), "græm");});
test("græmmer -> græm", function() {deepEqual( Stem("græmmer"), "græm");});
test("græmmes -> græm", function() {deepEqual( Stem("græmmes"), "græm");});
test("grænse -> græns", function() {deepEqual( Stem("grænse"), "græns");});
test("grænseegne -> grænseegn", function() {deepEqual( Stem("grænseegne"), "grænseegn");});
test("grænselinie -> grænselini", function() {deepEqual( Stem("grænselinie"), "grænselini");});
test("grænsen -> græns", function() {deepEqual( Stem("grænsen"), "græns");});
test("grænser -> græns", function() {deepEqual( Stem("grænser"), "græns");});
test("grænserne -> græns", function() {deepEqual( Stem("grænserne"), "græns");});
test("grænseskel -> grænseskel", function() {deepEqual( Stem("grænseskel"), "grænseskel");});
test("græs -> græs", function() {deepEqual( Stem("græs"), "græs");});
test("græsgang -> græsgang", function() {deepEqual( Stem("græsgang"), "græsgang");});
test("græsgange -> græsgang", function() {deepEqual( Stem("græsgange"), "græsgang");});
test("græsgangen -> græsgang", function() {deepEqual( Stem("græsgangen"), "græsgang");});
test("græsgangene -> græsgang", function() {deepEqual( Stem("græsgangene"), "græsgang");});
test("græsgangens -> græsgang", function() {deepEqual( Stem("græsgangens"), "græsgang");});
test("græshoppe -> græshop", function() {deepEqual( Stem("græshoppe"), "græshop");});
test("græshoppen -> græshop", function() {deepEqual( Stem("græshoppen"), "græshop");});
test("græshoppens -> græshop", function() {deepEqual( Stem("græshoppens"), "græshop");});
test("græshopper -> græshop", function() {deepEqual( Stem("græshopper"), "græshop");});
test("græshopperne -> græshop", function() {deepEqual( Stem("græshopperne"), "græshop");});
test("græshoppeskikkelserne -> græshoppeskik", function() {deepEqual( Stem("græshoppeskikkelserne"), "græshoppeskik");});
test("græshoppesværme -> græshoppesværm", function() {deepEqual( Stem("græshoppesværme"), "græshoppesværm");});
test("græsk -> græsk", function() {deepEqual( Stem("græsk"), "græsk");});
test("græskarmark -> græskarmark", function() {deepEqual( Stem("græskarmark"), "græskarmark");});
test("græske -> græsk", function() {deepEqual( Stem("græske"), "græsk");});
test("græskvæg -> græskvæg", function() {deepEqual( Stem("græskvæg"), "græskvæg");});
test("græsmark -> græsmark", function() {deepEqual( Stem("græsmark"), "græsmark");});
test("græsmarker -> græsmark", function() {deepEqual( Stem("græsmarker"), "græsmark");});
test("græsmarkerne -> græsmark", function() {deepEqual( Stem("græsmarkerne"), "græsmark");});
test("græsning -> græsning", function() {deepEqual( Stem("græsning"), "græsning");});
test("græsse -> græs", function() {deepEqual( Stem("græsse"), "græs");});
test("græssede -> græssed", function() {deepEqual( Stem("græssede"), "græssed");});
test("græsser -> græs", function() {deepEqual( Stem("græsser"), "græs");});
test("græsset -> græs", function() {deepEqual( Stem("græsset"), "græs");});
test("græssets -> græs", function() {deepEqual( Stem("græssets"), "græs");});
test("græsstrå -> græsstrå", function() {deepEqual( Stem("græsstrå"), "græsstrå");});
test("grævlingens -> grævling", function() {deepEqual( Stem("grævlingens"), "grævling");});
test("grøde -> grød", function() {deepEqual( Stem("grøde"), "grød");});
test("grøft -> grøft", function() {deepEqual( Stem("grøft"), "grøft");});
test("grøn -> grøn", function() {deepEqual( Stem("grøn"), "grøn");});
test("grøngul -> grøngul", function() {deepEqual( Stem("grøngul"), "grøngul");});
test("grønlige -> grøn", function() {deepEqual( Stem("grønlige"), "grøn");});
test("grønligt -> grøn", function() {deepEqual( Stem("grønligt"), "grøn");});
test("grønne -> grøn", function() {deepEqual( Stem("grønne"), "grøn");});
test("grønnedes -> grønned", function() {deepEqual( Stem("grønnedes"), "grønned");});
test("grønnes -> grøn", function() {deepEqual( Stem("grønnes"), "grøn");});
test("grønsværet -> grønsvær", function() {deepEqual( Stem("grønsværet"), "grønsvær");});
test("grønt -> grønt", function() {deepEqual( Stem("grønt"), "grønt");});
test("grøntsager -> grøntsag", function() {deepEqual( Stem("grøntsager"), "grøntsag");});
test("gstænger -> gstæng", function() {deepEqual( Stem("gstænger"), "gstæng");});
test("gstængerne -> gstæng", function() {deepEqual( Stem("gstængerne"), "gstæng");});
test("gså -> gså", function() {deepEqual( Stem("gså"), "gså");});
test("gte -> gte", function() {deepEqual( Stem("gte"), "gte");});
test("gtefælle -> gtefæl", function() {deepEqual( Stem("gtefælle"), "gtefæl");});
test("gtehustru -> gtehustru", function() {deepEqual( Stem("gtehustru"), "gtehustru");});
test("gtemand -> gtemand", function() {deepEqual( Stem("gtemand"), "gtemand");});
test("gtemands -> gtemand", function() {deepEqual( Stem("gtemands"), "gtemand");});
test("gtesengen -> gteseng", function() {deepEqual( Stem("gtesengen"), "gteseng");});
test("gteskab -> gteskab", function() {deepEqual( Stem("gteskab"), "gteskab");});
test("gteskaber -> gteskab", function() {deepEqual( Stem("gteskaber"), "gteskab");});
test("gteskabet -> gteskab", function() {deepEqual( Stem("gteskabet"), "gteskab");});
test("gteskabsbrud -> gteskabsbrud", function() {deepEqual( Stem("gteskabsbrud"), "gteskabsbrud");});
test("gteskabsbryderne -> gteskabsbryd", function() {deepEqual( Stem("gteskabsbryderne"), "gteskabsbryd");});
test("gteskabsbryderskers -> gteskabsbrydersk", function() {deepEqual( Stem("gteskabsbryderskers"), "gteskabsbrydersk");});
test("gteskabsbryderskes -> gteskabsbrydersk", function() {deepEqual( Stem("gteskabsbryderskes"), "gteskabsbrydersk");});
test("gthed -> gthed", function() {deepEqual( Stem("gthed"), "gthed");});
test("gtyde -> gtyd", function() {deepEqual( Stem("gtyde"), "gtyd");});
test("gud -> gud", function() {deepEqual( Stem("gud"), "gud");});
test("guddomme -> guddom", function() {deepEqual( Stem("guddomme"), "guddom");});
test("guddommelig -> guddom", function() {deepEqual( Stem("guddommelig"), "guddom");});
test("guddommelige -> guddom", function() {deepEqual( Stem("guddommelige"), "guddom");});
test("guddommelighed -> guddom", function() {deepEqual( Stem("guddommelighed"), "guddom");});
test("guddommen -> guddom", function() {deepEqual( Stem("guddommen"), "guddom");});
test("guddommens -> guddom", function() {deepEqual( Stem("guddommens"), "guddom");});
test("guddomsord -> guddomsord", function() {deepEqual( Stem("guddomsord"), "guddomsord");});
test("gudebillede -> gudebilled", function() {deepEqual( Stem("gudebillede"), "gudebilled");});
test("gudebilleder -> gudebilled", function() {deepEqual( Stem("gudebilleder"), "gudebilled");});
test("gudebillederne -> gudebilled", function() {deepEqual( Stem("gudebillederne"), "gudebilled");});
test("gudebilledet -> gudebilled", function() {deepEqual( Stem("gudebilledet"), "gudebilled");});
test("gudebjerg -> gudebjerg", function() {deepEqual( Stem("gudebjerg"), "gudebjerg");});
test("gudebjerget -> gudebjerg", function() {deepEqual( Stem("gudebjerget"), "gudebjerg");});
test("gudeflok -> gudeflok", function() {deepEqual( Stem("gudeflok"), "gudeflok");});
test("gudehuse -> gudehus", function() {deepEqual( Stem("gudehuse"), "gudehus");});
test("gudemagerne -> gudemag", function() {deepEqual( Stem("gudemagerne"), "gudemag");});
test("guden -> gud", function() {deepEqual( Stem("guden"), "gud");});
test("guder -> gud", function() {deepEqual( Stem("guder"), "gud");});
test("guderne -> gud", function() {deepEqual( Stem("guderne"), "gud");});
test("gudernes -> gud", function() {deepEqual( Stem("gudernes"), "gud");});
test("guders -> gud", function() {deepEqual( Stem("guders"), "gud");});
test("gudestjerne -> gudestj", function() {deepEqual( Stem("gudestjerne"), "gudestj");});
test("gudesæde -> gudesæd", function() {deepEqual( Stem("gudesæde"), "gudesæd");});
test("gudesøn -> gudesøn", function() {deepEqual( Stem("gudesøn"), "gudesøn");});
test("gudfrygtig -> gudfryg", function() {deepEqual( Stem("gudfrygtig"), "gudfryg");});
test("gudfrygtige -> gudfryg", function() {deepEqual( Stem("gudfrygtige"), "gudfryg");});
test("gudfrygtighed -> gudfryg", function() {deepEqual( Stem("gudfrygtighed"), "gudfryg");});
test("gudfrygtigheds -> gudfryg", function() {deepEqual( Stem("gudfrygtigheds"), "gudfryg");});
test("gudfrygtigt -> gudfryg", function() {deepEqual( Stem("gudfrygtigt"), "gudfryg");});
test("gudgoda -> gudgoda", function() {deepEqual( Stem("gudgoda"), "gudgoda");});
test("gudinde -> gudind", function() {deepEqual( Stem("gudinde"), "gudind");});
test("gudindes -> gudind", function() {deepEqual( Stem("gudindes"), "gudind");});
test("gudløs -> gudløs", function() {deepEqual( Stem("gudløs"), "gudløs");});
test("gudløse -> gudløs", function() {deepEqual( Stem("gudløse"), "gudløs");});
test("gudløses -> gudløs", function() {deepEqual( Stem("gudløses"), "gudløs");});
test("gudløshed -> gudløs", function() {deepEqual( Stem("gudløshed"), "gudløs");});
test("gudløsheden -> gudløs", function() {deepEqual( Stem("gudløsheden"), "gudløs");});
test("gudløsheds -> gudløs", function() {deepEqual( Stem("gudløsheds"), "gudløs");});
test("gudløst -> gudløs", function() {deepEqual( Stem("gudløst"), "gudløs");});
test("guds -> gud", function() {deepEqual( Stem("guds"), "gud");});
test("gudsbespottelse -> gudsbespot", function() {deepEqual( Stem("gudsbespottelse"), "gudsbespot");});
test("gudsbespottelsen -> gudsbespot", function() {deepEqual( Stem("gudsbespottelsen"), "gudsbespot");});
test("gudsbespottelser -> gudsbespot", function() {deepEqual( Stem("gudsbespottelser"), "gudsbespot");});
test("gudsbjerg -> gudsbjerg", function() {deepEqual( Stem("gudsbjerg"), "gudsbjerg");});
test("gudsbuset -> gudsbus", function() {deepEqual( Stem("gudsbuset"), "gudsbus");});
test("gudsdom -> gudsdom", function() {deepEqual( Stem("gudsdom"), "gudsdom");});
test("gudsdyrkelse -> gudsdyrk", function() {deepEqual( Stem("gudsdyrkelse"), "gudsdyrk");});
test("gudsed -> gudsed", function() {deepEqual( Stem("gudsed"), "gudsed");});
test("gudsfrygt -> gudsfryg", function() {deepEqual( Stem("gudsfrygt"), "gudsfryg");});
test("gudsfrygten -> gudsfryg", function() {deepEqual( Stem("gudsfrygten"), "gudsfryg");});
test("gudsfrygtens -> gudsfryg", function() {deepEqual( Stem("gudsfrygtens"), "gudsfryg");});
test("gudshadere -> gudshad", function() {deepEqual( Stem("gudshadere"), "gudshad");});
test("gudshus -> gudshus", function() {deepEqual( Stem("gudshus"), "gudshus");});
test("gudshusef -> gudshusef", function() {deepEqual( Stem("gudshusef"), "gudshusef");});
test("gudshuset -> gudshus", function() {deepEqual( Stem("gudshuset"), "gudshus");});
test("gudshusets -> gudshus", function() {deepEqual( Stem("gudshusets"), "gudshus");});
test("gudskampe -> gudskamp", function() {deepEqual( Stem("gudskampe"), "gudskamp");});
test("gudsord -> gudsord", function() {deepEqual( Stem("gudsord"), "gudsord");});
test("gudspagten -> gudspag", function() {deepEqual( Stem("gudspagten"), "gudspag");});
test("gudssønner -> gudssøn", function() {deepEqual( Stem("gudssønner"), "gudssøn");});
test("gudssønnerne -> gudssøn", function() {deepEqual( Stem("gudssønnerne"), "gudssøn");});
test("gudstjeneste -> gudstjenest", function() {deepEqual( Stem("gudstjeneste"), "gudstjenest");});
test("gudstjenesten -> gudstjenest", function() {deepEqual( Stem("gudstjenesten"), "gudstjenest");});
test("guld -> guld", function() {deepEqual( Stem("guld"), "guld");});
test("guldalteret -> guldalt", function() {deepEqual( Stem("guldalteret"), "guldalt");});
test("guldbilleders -> guldbilled", function() {deepEqual( Stem("guldbilleders"), "guldbilled");});
test("guldbilledstøtten -> guldbilledstøt", function() {deepEqual( Stem("guldbilledstøtten"), "guldbilledstøt");});
test("guldbjælder -> guldbjæld", function() {deepEqual( Stem("guldbjælder"), "guldbjæld");});
test("guldbordet -> guldbord", function() {deepEqual( Stem("guldbordet"), "guldbord");});
test("guldbylder -> guldbyld", function() {deepEqual( Stem("guldbylder"), "guldbyld");});
test("guldbæger -> guldbæg", function() {deepEqual( Stem("guldbæger"), "guldbæg");});
test("guldbægre -> guldbægr", function() {deepEqual( Stem("guldbægre"), "guldbægr");});
test("guldbægrene -> guldbægr", function() {deepEqual( Stem("guldbægrene"), "guldbægr");});
test("guldbækkener -> guldbækken", function() {deepEqual( Stem("guldbækkener"), "guldbækken");});
test("guldbælte -> guldbælt", function() {deepEqual( Stem("guldbælte"), "guldbælt");});
test("guldbælter -> guldbælt", function() {deepEqual( Stem("guldbælter"), "guldbælt");});
test("gulddiadem -> gulddiadem", function() {deepEqual( Stem("gulddiadem"), "gulddiadem");});
test("guldet -> guld", function() {deepEqual( Stem("guldet"), "guld");});
test("guldfletværk -> guldfletværk", function() {deepEqual( Stem("guldfletværk"), "guldfletværk");});
test("guldfletværker -> guldfletværk", function() {deepEqual( Stem("guldfletværker"), "guldfletværk");});
test("guldglinsende -> guldglins", function() {deepEqual( Stem("guldglinsende"), "guldglins");});
test("guldgule -> guldgul", function() {deepEqual( Stem("guldgule"), "guldgul");});
test("guldkalve -> guldkalv", function() {deepEqual( Stem("guldkalve"), "guldkalv");});
test("guldkalvene -> guldkalv", function() {deepEqual( Stem("guldkalvene"), "guldkalv");});
test("guldkander -> guldkand", function() {deepEqual( Stem("guldkander"), "guldkand");});
test("guldkar -> guldkar", function() {deepEqual( Stem("guldkar"), "guldkar");});
test("guldkeruberoe -> guldkerubero", function() {deepEqual( Stem("guldkeruberoe"), "guldkerubero");});
test("guldkrans -> guldkran", function() {deepEqual( Stem("guldkrans"), "guldkran");});
test("guldkranse -> guldkrans", function() {deepEqual( Stem("guldkranse"), "guldkrans");});
test("guldkroge -> guldkrog", function() {deepEqual( Stem("guldkroge"), "guldkrog");});
test("guldkrone -> guldkron", function() {deepEqual( Stem("guldkrone"), "guldkron");});
test("guldkrukke -> guldkruk", function() {deepEqual( Stem("guldkrukke"), "guldkruk");});
test("guldkæden -> guldkæd", function() {deepEqual( Stem("guldkæden"), "guldkæd");});
test("guldkæder -> guldkæd", function() {deepEqual( Stem("guldkæder"), "guldkæd");});
test("guldlamper -> guldlamp", function() {deepEqual( Stem("guldlamper"), "guldlamp");});
test("guldlysestagen -> guldlysestag", function() {deepEqual( Stem("guldlysestagen"), "guldlysestag");});
test("guldlysestager -> guldlysestag", function() {deepEqual( Stem("guldlysestager"), "guldlysestag");});
test("guldlysestagerne -> guldlysestag", function() {deepEqual( Stem("guldlysestagerne"), "guldlysestag");});
test("guldmus -> guldmus", function() {deepEqual( Stem("guldmus"), "guldmus");});
test("guldmusene -> guldmus", function() {deepEqual( Stem("guldmusene"), "guldmus");});
test("guldpladen -> guldplad", function() {deepEqual( Stem("guldpladen"), "guldplad");});
test("guldprøver -> guldprøv", function() {deepEqual( Stem("guldprøver"), "guldprøv");});
test("guldring -> guldring", function() {deepEqual( Stem("guldring"), "guldring");});
test("guldringe -> guldring", function() {deepEqual( Stem("guldringe"), "guldring");});
test("guldringene -> guldring", function() {deepEqual( Stem("guldringene"), "guldring");});
test("guldrøgelsekar -> guldrøgelsekar", function() {deepEqual( Stem("guldrøgelsekar"), "guldrøgelsekar");});
test("guldrør -> guldrør", function() {deepEqual( Stem("guldrør"), "guldrør");});
test("guldsager -> guldsag", function() {deepEqual( Stem("guldsager"), "guldsag");});
test("guldsekel -> guldsekel", function() {deepEqual( Stem("guldsekel"), "guldsekel");});
test("guldskjolde -> guldskjold", function() {deepEqual( Stem("guldskjolde"), "guldskjold");});
test("guldskåle -> guldskål", function() {deepEqual( Stem("guldskåle"), "guldskål");});
test("guldskålen -> guldskål", function() {deepEqual( Stem("guldskålen"), "guldskål");});
test("guldsmed -> guldsmed", function() {deepEqual( Stem("guldsmed"), "guldsmed");});
test("guldsmeden -> guldsmed", function() {deepEqual( Stem("guldsmeden"), "guldsmed");});
test("guldsmedene -> guldsmed", function() {deepEqual( Stem("guldsmedene"), "guldsmed");});
test("guldsmedens -> guldsmed", function() {deepEqual( Stem("guldsmedens"), "guldsmed");});
test("guldsmykker -> guldsmyk", function() {deepEqual( Stem("guldsmykker"), "guldsmyk");});
test("guldsnore -> guldsnor", function() {deepEqual( Stem("guldsnore"), "guldsnor");});
test("guldstøv -> guldstøv", function() {deepEqual( Stem("guldstøv"), "guldstøv");});
test("guldtalenter -> guldtalent", function() {deepEqual( Stem("guldtalenter"), "guldtalent");});
test("guldting -> guldting", function() {deepEqual( Stem("guldting"), "guldting");});
test("guldtingene -> guldting", function() {deepEqual( Stem("guldtingene"), "guldting");});
test("guldtråd -> guldtråd", function() {deepEqual( Stem("guldtråd"), "guldtråd");});
test("guldtunge -> guldtung", function() {deepEqual( Stem("guldtunge"), "guldtung");});
test("guldtungen -> guldtung", function() {deepEqual( Stem("guldtungen"), "guldtung");});
test("guldørenringe -> guldørenring", function() {deepEqual( Stem("guldørenringe"), "guldørenring");});
test("gulgrønt -> gulgrønt", function() {deepEqual( Stem("gulgrønt"), "gulgrønt");});
test("gulv -> gulv", function() {deepEqual( Stem("gulv"), "gulv");});
test("gulvet -> gulv", function() {deepEqual( Stem("gulvet"), "gulv");});
test("gummerne -> gum", function() {deepEqual( Stem("gummerne"), "gum");});
test("gumtræ -> gumtræ", function() {deepEqual( Stem("gumtræ"), "gumtræ");});
test("gungrende -> gungr", function() {deepEqual( Stem("gungrende"), "gungr");});
test("guni -> guni", function() {deepEqual( Stem("guni"), "guni");});
test("guniten -> gunit", function() {deepEqual( Stem("guniten"), "gunit");});
test("guniternes -> gunit", function() {deepEqual( Stem("guniternes"), "gunit");});
test("gunst -> gunst", function() {deepEqual( Stem("gunst"), "gunst");});
test("gunstig -> gunst", function() {deepEqual( Stem("gunstig"), "gunst");});
test("gunstigt -> gunst", function() {deepEqual( Stem("gunstigt"), "gunst");});
test("gur -> gur", function() {deepEqual( Stem("gur"), "gur");});
test("gurpasset -> gurpas", function() {deepEqual( Stem("gurpasset"), "gurpas");});
test("gus -> gus", function() {deepEqual( Stem("gus"), "gus");});
test("gutd -> gutd", function() {deepEqual( Stem("gutd"), "gutd");});
test("gyd -> gyd", function() {deepEqual( Stem("gyd"), "gyd");});
test("gyden -> gyd", function() {deepEqual( Stem("gyden"), "gyd");});
test("gyder -> gyd", function() {deepEqual( Stem("gyder"), "gyd");});
test("gydt -> gydt", function() {deepEqual( Stem("gydt"), "gydt");});
test("gylden -> gyld", function() {deepEqual( Stem("gylden"), "gyld");});
test("gyldent -> gyldent", function() {deepEqual( Stem("gyldent"), "gyldent");});
test("gyldig -> gyld", function() {deepEqual( Stem("gyldig"), "gyld");});
test("gyldige -> gyld", function() {deepEqual( Stem("gyldige"), "gyld");});
test("gyldigt -> gyld", function() {deepEqual( Stem("gyldigt"), "gyld");});
test("gyldne -> gyldn", function() {deepEqual( Stem("gyldne"), "gyldn");});
test("gynger -> gyng", function() {deepEqual( Stem("gynger"), "gyng");});
test("gypten -> gypt", function() {deepEqual( Stem("gypten"), "gypt");});
test("gyptens -> gypt", function() {deepEqual( Stem("gyptens"), "gypt");});
test("gypter -> gypt", function() {deepEqual( Stem("gypter"), "gypt");});
test("gyptere -> gypt", function() {deepEqual( Stem("gyptere"), "gypt");});
test("gypteren -> gypt", function() {deepEqual( Stem("gypteren"), "gypt");});
test("gypterens -> gypt", function() {deepEqual( Stem("gypterens"), "gypt");});
test("gypterhavets -> gypterhav", function() {deepEqual( Stem("gypterhavets"), "gypterhav");});
test("gypterinden -> gypterind", function() {deepEqual( Stem("gypterinden"), "gypterind");});
test("gypterkongen -> gypterkong", function() {deepEqual( Stem("gypterkongen"), "gypterkong");});
test("gypterkongens -> gypterkong", function() {deepEqual( Stem("gypterkongens"), "gypterkong");});
test("gypterkoogen -> gypterkoog", function() {deepEqual( Stem("gypterkoogen"), "gypterkoog");});
test("gypterne -> gypt", function() {deepEqual( Stem("gypterne"), "gypt");});
test("gypternes -> gypt", function() {deepEqual( Stem("gypternes"), "gypt");});
test("gyptisk -> gyptisk", function() {deepEqual( Stem("gyptisk"), "gyptisk");});
test("gyptiske -> gyptisk", function() {deepEqual( Stem("gyptiske"), "gyptisk");});
test("gys -> gys", function() {deepEqual( Stem("gys"), "gys");});
test("gyse -> gys", function() {deepEqual( Stem("gyse"), "gys");});
test("gyselige -> gys", function() {deepEqual( Stem("gyselige"), "gys");});
test("gyser -> gys", function() {deepEqual( Stem("gyser"), "gys");});
test("gyvel -> gyvel", function() {deepEqual( Stem("gyvel"), "gyvel");});
test("gyvelbusk -> gyvelbusk", function() {deepEqual( Stem("gyvelbusk"), "gyvelbusk");});
test("gyvelrødder -> gyvelrød", function() {deepEqual( Stem("gyvelrødder"), "gyvelrød");});
test("gå -> gå", function() {deepEqual( Stem("gå"), "gå");});
test("gåde -> gåd", function() {deepEqual( Stem("gåde"), "gåd");});
test("gåden -> gåd", function() {deepEqual( Stem("gåden"), "gåd");});
test("gådens -> gåd", function() {deepEqual( Stem("gådens"), "gåd");});
test("gåder -> gåd", function() {deepEqual( Stem("gåder"), "gåd");});
test("gåede -> gåed", function() {deepEqual( Stem("gåede"), "gåed");});
test("gående -> gåend", function() {deepEqual( Stem("gående"), "gåend");});
test("gået -> gået", function() {deepEqual( Stem("gået"), "gået");});
test("går -> går", function() {deepEqual( Stem("går"), "går");});
test("gård -> gård", function() {deepEqual( Stem("gård"), "gård");});
test("gårde -> gård", function() {deepEqual( Stem("gårde"), "gård");});
test("gården -> gård", function() {deepEqual( Stem("gården"), "gård");});
test("gårdene -> gård", function() {deepEqual( Stem("gårdene"), "gård");});
test("gårdsrum -> gårdsrum", function() {deepEqual( Stem("gårdsrum"), "gårdsrum");});
test("gæld -> gæld", function() {deepEqual( Stem("gæld"), "gæld");});
test("gælde -> gæld", function() {deepEqual( Stem("gælde"), "gæld");});
test("gælden -> gæld", function() {deepEqual( Stem("gælden"), "gæld");});
test("gældende -> gæld", function() {deepEqual( Stem("gældende"), "gæld");});
test("gælder -> gæld", function() {deepEqual( Stem("gælder"), "gæld");});
test("gældsbrev -> gældsbrev", function() {deepEqual( Stem("gældsbrev"), "gældsbrev");});
test("gænge -> gæng", function() {deepEqual( Stem("gænge"), "gæng");});
test("gærde -> gærd", function() {deepEqual( Stem("gærde"), "gærd");});
test("gærderne -> gærd", function() {deepEqual( Stem("gærderne"), "gærd");});
test("gærdets -> gærd", function() {deepEqual( Stem("gærdets"), "gærd");});
test("gæs -> gæs", function() {deepEqual( Stem("gæs"), "gæs");});
test("gæst -> gæst", function() {deepEqual( Stem("gæst"), "gæst");});
test("gæste -> gæst", function() {deepEqual( Stem("gæste"), "gæst");});
test("gæstebud -> gæstebud", function() {deepEqual( Stem("gæstebud"), "gæstebud");});
test("gæstebudet -> gæstebud", function() {deepEqual( Stem("gæstebudet"), "gæstebud");});
test("gæstebuds -> gæstebud", function() {deepEqual( Stem("gæstebuds"), "gæstebud");});
test("gæstebudsalen -> gæstebudsal", function() {deepEqual( Stem("gæstebudsalen"), "gæstebudsal");});
test("gæstebudsdagene -> gæstebudsdag", function() {deepEqual( Stem("gæstebudsdagene"), "gæstebudsdag");});
test("gæster -> gæst", function() {deepEqual( Stem("gæster"), "gæst");});
test("gæsterne -> gæst", function() {deepEqual( Stem("gæsterne"), "gæst");});
test("gæsternes -> gæst", function() {deepEqual( Stem("gæsternes"), "gæst");});
test("gæstes -> gæst", function() {deepEqual( Stem("gæstes"), "gæst");});
test("gæstfri -> gæstfri", function() {deepEqual( Stem("gæstfri"), "gæstfri");});
test("gæstfrihed -> gæstfri", function() {deepEqual( Stem("gæstfrihed"), "gæstfri");});
test("gæstfriheden -> gæstfri", function() {deepEqual( Stem("gæstfriheden"), "gæstfri");});
test("gætte -> gæt", function() {deepEqual( Stem("gætte"), "gæt");});
test("gættet -> gæt", function() {deepEqual( Stem("gættet"), "gæt");});
test("gø -> gø", function() {deepEqual( Stem("gø"), "gø");});
test("gød -> gød", function() {deepEqual( Stem("gød"), "gød");});
test("gødet -> gød", function() {deepEqual( Stem("gødet"), "gød");});
test("gødning -> gødning", function() {deepEqual( Stem("gødning"), "gødning");});
test("gøgl -> gøgl", function() {deepEqual( Stem("gøgl"), "gøgl");});
test("gør -> gør", function() {deepEqual( Stem("gør"), "gør");});
test("gøre -> gør", function() {deepEqual( Stem("gøre"), "gør");});
test("gører -> gør", function() {deepEqual( Stem("gører"), "gør");});
test("gørere -> gør", function() {deepEqual( Stem("gørere"), "gør");});
test("gøres -> gør", function() {deepEqual( Stem("gøres"), "gør");});
test("gørvitterligt -> gørvitter", function() {deepEqual( Stem("gørvitterligt"), "gørvitter");});
test("gøs -> gøs", function() {deepEqual( Stem("gøs"), "gøs");});
test("ha -> ha", function() {deepEqual( Stem("ha"), "ha");});
test("habaj -> habaj", function() {deepEqual( Stem("habaj"), "habaj");});
test("habajas -> habaja", function() {deepEqual( Stem("habajas"), "habaja");});
test("habakkuk -> habakkuk", function() {deepEqual( Stem("habakkuk"), "habakkuk");});
test("habazzinjas -> habazzinja", function() {deepEqual( Stem("habazzinjas"), "habazzinja");});
test("habor -> habor", function() {deepEqual( Stem("habor"), "habor");});
test("habsjake -> habsjak", function() {deepEqual( Stem("habsjake"), "habsjak");});
test("habullandet -> habulland", function() {deepEqual( Stem("habullandet"), "habulland");});
test("had -> had", function() {deepEqual( Stem("had"), "had");});
test("hadad -> hadad", function() {deepEqual( Stem("hadad"), "hadad");});
test("hadadezer -> hadadez", function() {deepEqual( Stem("hadadezer"), "hadadez");});
test("hadadrimmon -> hadadrimmon", function() {deepEqual( Stem("hadadrimmon"), "hadadrimmon");});
test("hadar -> hadar", function() {deepEqual( Stem("hadar"), "hadar");});
test("hadasja -> hadasja", function() {deepEqual( Stem("hadasja"), "hadasja");});
test("hadassa -> hadassa", function() {deepEqual( Stem("hadassa"), "hadassa");});
test("hadatta -> hadatta", function() {deepEqual( Stem("hadatta"), "hadatta");});
test("hadda -> hadda", function() {deepEqual( Stem("hadda"), "hadda");});
test("hade -> had", function() {deepEqual( Stem("hade"), "had");});
test("hadede -> haded", function() {deepEqual( Stem("hadede"), "haded");});
test("hadefuldt -> hadefuld", function() {deepEqual( Stem("hadefuldt"), "hadefuld");});
test("hader -> had", function() {deepEqual( Stem("hader"), "had");});
test("hades -> had", function() {deepEqual( Stem("hades"), "had");});
test("hadesj -> hadesj", function() {deepEqual( Stem("hadesj"), "hadesj");});
test("hadet -> had", function() {deepEqual( Stem("hadet"), "had");});
test("hadid -> hadid", function() {deepEqual( Stem("hadid"), "hadid");});
test("hadids -> hadid", function() {deepEqual( Stem("hadids"), "hadid");});
test("hadlajs -> hadlaj", function() {deepEqual( Stem("hadlajs"), "hadlaj");});
test("hadoram -> hadoram", function() {deepEqual( Stem("hadoram"), "hadoram");});
test("hadraks -> hadrak", function() {deepEqual( Stem("hadraks"), "hadrak");});
test("hadske -> hadsk", function() {deepEqual( Stem("hadske"), "hadsk");});
test("hafarajim -> hafarajim", function() {deepEqual( Stem("hafarajim"), "hafarajim");});
test("haft -> haft", function() {deepEqual( Stem("haft"), "haft");});
test("hagabas -> hagaba", function() {deepEqual( Stem("hagabas"), "hagaba");});
test("hagabgræshopper -> hagabgræshop", function() {deepEqual( Stem("hagabgræshopper"), "hagabgræshop");});
test("hagabs -> hagab", function() {deepEqual( Stem("hagabs"), "hagab");});
test("hagar -> hagar", function() {deepEqual( Stem("hagar"), "hagar");});
test("hagars -> hagar", function() {deepEqual( Stem("hagars"), "hagar");});
test("hagelen -> hagel", function() {deepEqual( Stem("hagelen"), "hagel");});
test("hager -> hag", function() {deepEqual( Stem("hager"), "hag");});
test("haggaj -> haggaj", function() {deepEqual( Stem("haggaj"), "haggaj");});
test("haggajs -> haggaj", function() {deepEqual( Stem("haggajs"), "haggaj");});
test("haggi -> haggi", function() {deepEqual( Stem("haggi"), "haggi");});
test("haggidgad -> haggidgad", function() {deepEqual( Stem("haggidgad"), "haggidgad");});
test("haggija -> haggija", function() {deepEqual( Stem("haggija"), "haggija");});
test("haggit -> haggit", function() {deepEqual( Stem("haggit"), "haggit");});
test("haggiternes -> haggit", function() {deepEqual( Stem("haggiternes"), "haggit");});
test("haggits -> haggit", function() {deepEqual( Stem("haggits"), "haggit");});
test("haggojim -> haggojim", function() {deepEqual( Stem("haggojim"), "haggojim");});
test("hagl -> hagl", function() {deepEqual( Stem("hagl"), "hagl");});
test("haglen -> hagl", function() {deepEqual( Stem("haglen"), "hagl");});
test("haglens -> hagl", function() {deepEqual( Stem("haglens"), "hagl");});
test("haglsten -> haglst", function() {deepEqual( Stem("haglsten"), "haglst");});
test("haglstenene -> haglsten", function() {deepEqual( Stem("haglstenene"), "haglsten");});
test("haglvejr -> haglvejr", function() {deepEqual( Stem("haglvejr"), "haglvejr");});
test("haglvejret -> haglvejr", function() {deepEqual( Stem("haglvejret"), "haglvejr");});
test("hagriten -> hagrit", function() {deepEqual( Stem("hagriten"), "hagrit");});
test("hagritens -> hagrit", function() {deepEqual( Stem("hagritens"), "hagrit");});
test("hagriterne -> hagrit", function() {deepEqual( Stem("hagriterne"), "hagrit");});
test("hahakkuk -> hahakkuk", function() {deepEqual( Stem("hahakkuk"), "hahakkuk");});
test("haheres -> hah", function() {deepEqual( Stem("haheres"), "hah");});
test("hain -> hain", function() {deepEqual( Stem("hain"), "hain");});
test("hajus -> hajus", function() {deepEqual( Stem("hajus"), "hajus");});
test("hakaljas -> hakalja", function() {deepEqual( Stem("hakaljas"), "hakalja");});
test("hakeldama -> hakeldama", function() {deepEqual( Stem("hakeldama"), "hakeldama");});
test("hakila -> hakila", function() {deepEqual( Stem("hakila"), "hakila");});
test("hakirot -> hakirot", function() {deepEqual( Stem("hakirot"), "hakirot");});
test("hakkatans -> hakkatan", function() {deepEqual( Stem("hakkatans"), "hakkatan");});
test("hakke -> hak", function() {deepEqual( Stem("hakke"), "hak");});
test("hakkebræfter -> hakkebræft", function() {deepEqual( Stem("hakkebræfter"), "hakkebræft");});
test("hakkebrætter -> hakkebræt", function() {deepEqual( Stem("hakkebrætter"), "hakkebræt");});
test("hakker -> hak", function() {deepEqual( Stem("hakker"), "hak");});
test("hakkore -> hakkor", function() {deepEqual( Stem("hakkore"), "hakkor");});
test("hakkoz -> hakkoz", function() {deepEqual( Stem("hakkoz"), "hakkoz");});
test("hakmonis -> hakmonis", function() {deepEqual( Stem("hakmonis"), "hakmonis");});
test("hakmoniten -> hakmonit", function() {deepEqual( Stem("hakmoniten"), "hakmonit");});
test("hakoz -> hakoz", function() {deepEqual( Stem("hakoz"), "hakoz");});
test("hakufas -> hakufa", function() {deepEqual( Stem("hakufas"), "hakufa");});
test("hal -> hal", function() {deepEqual( Stem("hal"), "hal");});
test("hala -> hala", function() {deepEqual( Stem("hala"), "hala");});
test("halak -> halak", function() {deepEqual( Stem("halak"), "halak");});
test("hale -> hal", function() {deepEqual( Stem("hale"), "hal");});
test("haleb -> haleb", function() {deepEqual( Stem("haleb"), "haleb");});
test("halebs -> haleb", function() {deepEqual( Stem("halebs"), "haleb");});
test("halen -> hal", function() {deepEqual( Stem("halen"), "hal");});
test("haler -> hal", function() {deepEqual( Stem("haler"), "hal");});
test("halerne -> hal", function() {deepEqual( Stem("halerne"), "hal");});
test("halhul -> halhul", function() {deepEqual( Stem("halhul"), "halhul");});
test("hali -> hali", function() {deepEqual( Stem("hali"), "hali");});
test("hallel -> hallel", function() {deepEqual( Stem("hallel"), "hallel");});
test("halleluja -> halleluja", function() {deepEqual( Stem("halleluja"), "halleluja");});
test("hallen -> hal", function() {deepEqual( Stem("hallen"), "hal");});
test("hallens -> hal", function() {deepEqual( Stem("hallens"), "hal");});
test("hallohesj -> hallohesj", function() {deepEqual( Stem("hallohesj"), "hallohesj");});
test("hallok -> hallok", function() {deepEqual( Stem("hallok"), "hallok");});
test("halm -> halm", function() {deepEqual( Stem("halm"), "halm");});
test("halmstrå -> halmstrå", function() {deepEqual( Stem("halmstrå"), "halmstrå");});
test("hals -> hal", function() {deepEqual( Stem("hals"), "hal");});
test("halsbånd -> halsbånd", function() {deepEqual( Stem("halsbånd"), "halsbånd");});
test("halse -> hals", function() {deepEqual( Stem("halse"), "hals");});
test("halsen -> hals", function() {deepEqual( Stem("halsen"), "hals");});
test("halses -> hals", function() {deepEqual( Stem("halses"), "hals");});
test("halshugge -> halshug", function() {deepEqual( Stem("halshugge"), "halshug");});
test("halshuggede -> halshugged", function() {deepEqual( Stem("halshuggede"), "halshugged");});
test("halsjern -> halsjern", function() {deepEqual( Stem("halsjern"), "halsjern");});
test("halskæde -> halskæd", function() {deepEqual( Stem("halskæde"), "halskæd");});
test("halslinning -> halslinning", function() {deepEqual( Stem("halslinning"), "halslinning");});
test("halslænken -> halslænk", function() {deepEqual( Stem("halslænken"), "halslænk");});
test("halsløs -> halsløs", function() {deepEqual( Stem("halsløs"), "halsløs");});
test("halssmykke -> halssmyk", function() {deepEqual( Stem("halssmykke"), "halssmyk");});
test("halssmykker -> halssmyk", function() {deepEqual( Stem("halssmykker"), "halssmyk");});
test("halsstarrig -> halsstar", function() {deepEqual( Stem("halsstarrig"), "halsstar");});
test("halsstarrige -> halsstar", function() {deepEqual( Stem("halsstarrige"), "halsstar");});
test("halsstarrighed -> halsstar", function() {deepEqual( Stem("halsstarrighed"), "halsstar");});
test("halsstarrigt -> halsstar", function() {deepEqual( Stem("halsstarrigt"), "halsstar");});
test("halsåbning -> halsåbning", function() {deepEqual( Stem("halsåbning"), "halsåbning");});
test("halsåbningen -> halsåbning", function() {deepEqual( Stem("halsåbningen"), "halsåbning");});
test("halt -> halt", function() {deepEqual( Stem("halt"), "halt");});
test("halte -> halt", function() {deepEqual( Stem("halte"), "halt");});
test("haltede -> halted", function() {deepEqual( Stem("haltede"), "halted");});
test("haltende -> halt", function() {deepEqual( Stem("haltende"), "halt");});
test("halter -> halt", function() {deepEqual( Stem("halter"), "halt");});
test("halv -> halv", function() {deepEqual( Stem("halv"), "halv");});
test("halvanden -> halvand", function() {deepEqual( Stem("halvanden"), "halvand");});
test("halvbroder -> halvbrod", function() {deepEqual( Stem("halvbroder"), "halvbrod");});
test("halvdel -> halvdel", function() {deepEqual( Stem("halvdel"), "halvdel");});
test("halvdelen -> halvdel", function() {deepEqual( Stem("halvdelen"), "halvdel");});
test("halvdelene -> halvdel", function() {deepEqual( Stem("halvdelene"), "halvdel");});
test("halvdød -> halvdød", function() {deepEqual( Stem("halvdød"), "halvdød");});
test("halve -> halv", function() {deepEqual( Stem("halve"), "halv");});
test("halvfemsindstyve -> halvfemsindstyv", function() {deepEqual( Stem("halvfemsindstyve"), "halvfemsindstyv");});
test("halvfjerdsindsfyve -> halvfjerdsindsfyv", function() {deepEqual( Stem("halvfjerdsindsfyve"), "halvfjerdsindsfyv");});
test("halvfjerdsindstyve -> halvfjerdsindstyv", function() {deepEqual( Stem("halvfjerdsindstyve"), "halvfjerdsindstyv");});
test("halvhundredfører -> halvhundredfør", function() {deepEqual( Stem("halvhundredfører"), "halvhundredfør");});
test("halvhundredførere -> halvhundredfør", function() {deepEqual( Stem("halvhundredførere"), "halvhundredfør");});
test("halvhundredføreren -> halvhundredfør", function() {deepEqual( Stem("halvhundredføreren"), "halvhundredfør");});
test("halvmåner -> halvmån", function() {deepEqual( Stem("halvmåner"), "halvmån");});
test("halvmånerne -> halvmån", function() {deepEqual( Stem("halvmånerne"), "halvmån");});
test("halvt -> halvt", function() {deepEqual( Stem("halvt"), "halvt");});
test("halvtiende -> halvti", function() {deepEqual( Stem("halvtiende"), "halvti");});
test("halvtredje -> halvtredj", function() {deepEqual( Stem("halvtredje"), "halvtredj");});
test("halvtreds -> halvtred", function() {deepEqual( Stem("halvtreds"), "halvtred");});
test("halvtredsinds -> halvtredsind", function() {deepEqual( Stem("halvtredsinds"), "halvtredsind");});
test("halvtredsindstyve -> halvtredsindstyv", function() {deepEqual( Stem("halvtredsindstyve"), "halvtredsindstyv");});
test("halvtredsindstyvende -> halvtredsindstyv", function() {deepEqual( Stem("halvtredsindstyvende"), "halvtredsindstyv");});
test("halvtredsårsalderen -> halvtredsårsald", function() {deepEqual( Stem("halvtredsårsalderen"), "halvtredsårsald");});
test("halvtresindstyve -> halvtresindstyv", function() {deepEqual( Stem("halvtresindstyve"), "halvtresindstyv");});
test("ham -> ham", function() {deepEqual( Stem("ham"), "ham");});
test("haman -> haman", function() {deepEqual( Stem("haman"), "haman");});
test("hamans -> haman", function() {deepEqual( Stem("hamans"), "haman");});
test("hamat -> hamat", function() {deepEqual( Stem("hamat"), "hamat");});
test("hamatiterne -> hamatit", function() {deepEqual( Stem("hamatiterne"), "hamatit");});
test("hamats -> hamat", function() {deepEqual( Stem("hamats"), "hamat");});
test("hamital -> hamital", function() {deepEqual( Stem("hamital"), "hamital");});
test("hammat -> hammat", function() {deepEqual( Stem("hammat"), "hammat");});
test("hammedatas -> hammedata", function() {deepEqual( Stem("hammedatas"), "hammedata");});
test("hammer -> ham", function() {deepEqual( Stem("hammer"), "ham");});
test("hammoleket -> hammolek", function() {deepEqual( Stem("hammoleket"), "hammolek");});
test("hammon -> hammon", function() {deepEqual( Stem("hammon"), "hammon");});
test("hammot -> hammot", function() {deepEqual( Stem("hammot"), "hammot");});
test("hammuel -> hammuel", function() {deepEqual( Stem("hammuel"), "hammuel");});
test("hamon -> hamon", function() {deepEqual( Stem("hamon"), "hamon");});
test("hamona -> hamona", function() {deepEqual( Stem("hamona"), "hamona");});
test("hamor -> hamor", function() {deepEqual( Stem("hamor"), "hamor");});
test("hamors -> hamor", function() {deepEqual( Stem("hamors"), "hamor");});
test("hamp -> hamp", function() {deepEqual( Stem("hamp"), "hamp");});
test("hamre -> hamr", function() {deepEqual( Stem("hamre"), "hamr");});
test("hamrede -> hamred", function() {deepEqual( Stem("hamrede"), "hamred");});
test("hamrer -> hamr", function() {deepEqual( Stem("hamrer"), "hamr");});
test("hamret -> hamr", function() {deepEqual( Stem("hamret"), "hamr");});
test("hamul -> hamul", function() {deepEqual( Stem("hamul"), "hamul");});
test("hamuliternes -> hamulit", function() {deepEqual( Stem("hamuliternes"), "hamulit");});
test("hamutal -> hamutal", function() {deepEqual( Stem("hamutal"), "hamutal");});
test("han -> han", function() {deepEqual( Stem("han"), "han");});
test("hana -> hana", function() {deepEqual( Stem("hana"), "hana");});
test("hanamel -> hanamel", function() {deepEqual( Stem("hanamel"), "hanamel");});
test("hanan -> hanan", function() {deepEqual( Stem("hanan"), "hanan");});
test("hananeltårnet -> hananeltårn", function() {deepEqual( Stem("hananeltårnet"), "hananeltårn");});
test("hanani -> hanani", function() {deepEqual( Stem("hanani"), "hanani");});
test("hananis -> hananis", function() {deepEqual( Stem("hananis"), "hananis");});
test("hananja -> hananja", function() {deepEqual( Stem("hananja"), "hananja");});
test("hananjas -> hananja", function() {deepEqual( Stem("hananjas"), "hananja");});
test("hanans -> hanan", function() {deepEqual( Stem("hanans"), "hanan");});
test("handel -> handel", function() {deepEqual( Stem("handel"), "handel");});
test("handelen -> handel", function() {deepEqual( Stem("handelen"), "handel");});
test("handeler -> handel", function() {deepEqual( Stem("handeler"), "handel");});
test("handelsby -> handelsby", function() {deepEqual( Stem("handelsby"), "handelsby");});
test("handelsfolk -> handelsfolk", function() {deepEqual( Stem("handelsfolk"), "handelsfolk");});
test("handelsfolkene -> handelsfolk", function() {deepEqual( Stem("handelsfolkene"), "handelsfolk");});
test("handelsfolkenes -> handelsfolk", function() {deepEqual( Stem("handelsfolkenes"), "handelsfolk");});
test("handelssnilde -> handelssnild", function() {deepEqual( Stem("handelssnilde"), "handelssnild");});
test("handelsvarer -> handelsvar", function() {deepEqual( Stem("handelsvarer"), "handelsvar");});
test("handelsven -> handelsv", function() {deepEqual( Stem("handelsven"), "handelsv");});
test("handelsvenner -> handelsven", function() {deepEqual( Stem("handelsvenner"), "handelsven");});
test("handle -> handl", function() {deepEqual( Stem("handle"), "handl");});
test("handled -> handled", function() {deepEqual( Stem("handled"), "handled");});
test("handlede -> handled", function() {deepEqual( Stem("handlede"), "handled");});
test("handlende -> handl", function() {deepEqual( Stem("handlende"), "handl");});
test("handler -> handl", function() {deepEqual( Stem("handler"), "handl");});
test("handles -> handl", function() {deepEqual( Stem("handles"), "handl");});
test("handlet -> handl", function() {deepEqual( Stem("handlet"), "handl");});
test("handling -> handling", function() {deepEqual( Stem("handling"), "handling");});
test("handyr -> handyr", function() {deepEqual( Stem("handyr"), "handyr");});
test("handyrene -> handyr", function() {deepEqual( Stem("handyrene"), "handyr");});
test("hanegal -> hanegal", function() {deepEqual( Stem("hanegal"), "hanegal");});
test("hanen -> han", function() {deepEqual( Stem("hanen"), "han");});
test("haner -> han", function() {deepEqual( Stem("haner"), "han");});
test("hanes -> han", function() {deepEqual( Stem("hanes"), "han");});
test("hang -> hang", function() {deepEqual( Stem("hang"), "hang");});
test("hanna -> hanna", function() {deepEqual( Stem("hanna"), "hanna");});
test("hannaton -> hannaton", function() {deepEqual( Stem("hannaton"), "hannaton");});
test("hanniel -> hanniel", function() {deepEqual( Stem("hanniel"), "hanniel");});
test("hanok -> hanok", function() {deepEqual( Stem("hanok"), "hanok");});
test("hanokiternes -> hanokit", function() {deepEqual( Stem("hanokiternes"), "hanokit");});
test("hanoks -> hanok", function() {deepEqual( Stem("hanoks"), "hanok");});
test("hans -> han", function() {deepEqual( Stem("hans"), "han");});
test("hanter -> hant", function() {deepEqual( Stem("hanter"), "hant");});
test("hanun -> hanun", function() {deepEqual( Stem("hanun"), "hanun");});
test("hanundfanger -> hanundfang", function() {deepEqual( Stem("hanundfanger"), "hanundfang");});
test("haodlede -> haodled", function() {deepEqual( Stem("haodlede"), "haodled");});
test("happadokien -> happadoki", function() {deepEqual( Stem("happadokien"), "happadoki");});
test("happizzez -> happizzez", function() {deepEqual( Stem("happizzez"), "happizzez");});
test("happuk -> happuk", function() {deepEqual( Stem("happuk"), "happuk");});
test("har -> har", function() {deepEqual( Stem("har"), "har");});
test("hara -> hara", function() {deepEqual( Stem("hara"), "hara");});
test("harada -> harada", function() {deepEqual( Stem("harada"), "harada");});
test("haram -> haram", function() {deepEqual( Stem("haram"), "haram");});
test("haran -> haran", function() {deepEqual( Stem("haran"), "haran");});
test("harans -> haran", function() {deepEqual( Stem("harans"), "haran");});
test("harariten -> hararit", function() {deepEqual( Stem("harariten"), "hararit");});
test("harasjim -> harasjim", function() {deepEqual( Stem("harasjim"), "harasjim");});
test("harbona -> harbona", function() {deepEqual( Stem("harbona"), "harbona");});
test("hardelsvenner -> hardelsven", function() {deepEqual( Stem("hardelsvenner"), "hardelsven");});
test("haref -> haref", function() {deepEqual( Stem("haref"), "haref");});
test("haren -> har", function() {deepEqual( Stem("haren"), "har");});
test("harernel -> harernel", function() {deepEqual( Stem("harernel"), "harernel");});
test("hareset -> hares", function() {deepEqual( Stem("hareset"), "hares");});
test("haresets -> hares", function() {deepEqual( Stem("haresets"), "hares");});
test("hargolgræshopper -> hargolgræshop", function() {deepEqual( Stem("hargolgræshopper"), "hargolgræshop");});
test("harhaja -> harhaja", function() {deepEqual( Stem("harhaja"), "harhaja");});
test("harhas -> harha", function() {deepEqual( Stem("harhas"), "harha");});
test("harhurs -> harhur", function() {deepEqual( Stem("harhurs"), "harhur");});
test("harif -> harif", function() {deepEqual( Stem("harif"), "harif");});
test("harifs -> harif", function() {deepEqual( Stem("harifs"), "harif");});
test("harim -> harim", function() {deepEqual( Stem("harim"), "harim");});
test("harims -> harim", function() {deepEqual( Stem("harims"), "harim");});
test("harm -> harm", function() {deepEqual( Stem("harm"), "harm");});
test("harmagedon -> harmagedon", function() {deepEqual( Stem("harmagedon"), "harmagedon");});
test("harme -> harm", function() {deepEqual( Stem("harme"), "harm");});
test("harmede -> harmed", function() {deepEqual( Stem("harmede"), "harmed");});
test("harmedes -> harmed", function() {deepEqual( Stem("harmedes"), "harmed");});
test("harmel -> harmel", function() {deepEqual( Stem("harmel"), "harmel");});
test("harmeliten -> harmelit", function() {deepEqual( Stem("harmeliten"), "harmelit");});
test("harmen -> harm", function() {deepEqual( Stem("harmen"), "harm");});
test("harmes -> harm", function() {deepEqual( Stem("harmes"), "harm");});
test("harmfuld -> harmfuld", function() {deepEqual( Stem("harmfuld"), "harmfuld");});
test("harmglød -> harmglød", function() {deepEqual( Stem("harmglød"), "harmglød");});
test("harmi -> harmi", function() {deepEqual( Stem("harmi"), "harmi");});
test("harnefer -> harnef", function() {deepEqual( Stem("harnefer"), "harnef");});
test("harneol -> harneol", function() {deepEqual( Stem("harneol"), "harneol");});
test("harnløst -> harnløs", function() {deepEqual( Stem("harnløst"), "harnløs");});
test("harnor -> harnor", function() {deepEqual( Stem("harnor"), "harnor");});
test("haro -> haro", function() {deepEqual( Stem("haro"), "haro");});
test("haroditen -> harodit", function() {deepEqual( Stem("haroditen"), "harodit");});
test("harodkilden -> harodkild", function() {deepEqual( Stem("harodkilden"), "harodkild");});
test("haroriten -> harorit", function() {deepEqual( Stem("haroriten"), "harorit");});
test("harosjet -> harosj", function() {deepEqual( Stem("harosjet"), "harosj");});
test("harpe -> harp", function() {deepEqual( Stem("harpe"), "harp");});
test("harpeklang -> harpeklang", function() {deepEqual( Stem("harpeklang"), "harpeklang");});
test("harpen -> harp", function() {deepEqual( Stem("harpen"), "harp");});
test("harper -> harp", function() {deepEqual( Stem("harper"), "harp");});
test("harpers -> harp", function() {deepEqual( Stem("harpers"), "harp");});
test("harpespil -> harpespil", function() {deepEqual( Stem("harpespil"), "harpespil");});
test("harpespillere -> harpespil", function() {deepEqual( Stem("harpespillere"), "harpespil");});
test("harpuner -> harpun", function() {deepEqual( Stem("harpuner"), "harpun");});
test("harsja -> harsja", function() {deepEqual( Stem("harsja"), "harsja");});
test("harsjas -> harsja", function() {deepEqual( Stem("harsjas"), "harsja");});
test("hartan -> hartan", function() {deepEqual( Stem("hartan"), "hartan");});
test("harudført -> harudført", function() {deepEqual( Stem("harudført"), "harudført");});
test("harumafs -> harumaf", function() {deepEqual( Stem("harumafs"), "harumaf");});
test("harums -> harum", function() {deepEqual( Stem("harums"), "harum");});
test("haruz -> haruz", function() {deepEqual( Stem("haruz"), "haruz");});
test("harve -> harv", function() {deepEqual( Stem("harve"), "harv");});
test("harven -> harv", function() {deepEqual( Stem("harven"), "harv");});
test("hasadja -> hasadja", function() {deepEqual( Stem("hasadja"), "hasadja");});
test("hasjabja -> hasjabja", function() {deepEqual( Stem("hasjabja"), "hasjabja");});
test("hasjabna -> hasjabna", function() {deepEqual( Stem("hasjabna"), "hasjabna");});
test("hasjabneja -> hasjabneja", function() {deepEqual( Stem("hasjabneja"), "hasjabneja");});
test("hasjabnejas -> hasjabneja", function() {deepEqual( Stem("hasjabnejas"), "hasjabneja");});
test("hasjbaddana -> hasjbaddana", function() {deepEqual( Stem("hasjbaddana"), "hasjbaddana");});
test("hasjmona -> hasjmona", function() {deepEqual( Stem("hasjmona"), "hasjmona");});
test("hasjuba -> hasjuba", function() {deepEqual( Stem("hasjuba"), "hasjuba");});
test("hasjum -> hasjum", function() {deepEqual( Stem("hasjum"), "hasjum");});
test("hasjums -> hasjum", function() {deepEqual( Stem("hasjums"), "hasjum");});
test("hasras -> hasra", function() {deepEqual( Stem("hasras"), "hasra");});
test("hassenua -> hassenua", function() {deepEqual( Stem("hassenua"), "hassenua");});
test("hassenuas -> hassenua", function() {deepEqual( Stem("hassenuas"), "hassenua");});
test("hassia -> hassia", function() {deepEqual( Stem("hassia"), "hassia");});
test("hassjeminit -> hassjeminit", function() {deepEqual( Stem("hassjeminit"), "hassjeminit");});
test("hassjub -> hassjub", function() {deepEqual( Stem("hassjub"), "hassjub");});
test("hast -> hast", function() {deepEqual( Stem("hast"), "hast");});
test("haste -> hast", function() {deepEqual( Stem("haste"), "hast");});
test("hasted -> hasted", function() {deepEqual( Stem("hasted"), "hasted");});
test("hastede -> hasted", function() {deepEqual( Stem("hastede"), "hasted");});
test("hastelig -> hast", function() {deepEqual( Stem("hastelig"), "hast");});
test("haster -> hast", function() {deepEqual( Stem("haster"), "hast");});
test("hastig -> hast", function() {deepEqual( Stem("hastig"), "hast");});
test("hastige -> hast", function() {deepEqual( Stem("hastige"), "hast");});
test("hastigt -> hast", function() {deepEqual( Stem("hastigt"), "hast");});
test("hastværk -> hastværk", function() {deepEqual( Stem("hastværk"), "hastværk");});
test("hasufas -> hasufa", function() {deepEqual( Stem("hasufas"), "hasufa");});
test("hatak -> hatak", function() {deepEqual( Stem("hatak"), "hatak");});
test("hatat -> hatat", function() {deepEqual( Stem("hatat"), "hatat");});
test("hatifas -> hatifa", function() {deepEqual( Stem("hatifas"), "hatifa");});
test("hatitas -> hatita", function() {deepEqual( Stem("hatitas"), "hatita");});
test("hatta -> hatta", function() {deepEqual( Stem("hatta"), "hatta");});
test("hattils -> hattil", function() {deepEqual( Stem("hattils"), "hattil");});
test("hattusj -> hattusj", function() {deepEqual( Stem("hattusj"), "hattusj");});
test("hattåva -> hattåva", function() {deepEqual( Stem("hattåva"), "hattåva");});
test("hauran -> hauran", function() {deepEqual( Stem("hauran"), "hauran");});
test("haurans -> hauran", function() {deepEqual( Stem("haurans"), "hauran");});
test("hav -> hav", function() {deepEqual( Stem("hav"), "hav");});
test("havd -> havd", function() {deepEqual( Stem("havd"), "havd");});
test("havde -> havd", function() {deepEqual( Stem("havde"), "havd");});
test("havdepræsten -> havdepræst", function() {deepEqual( Stem("havdepræsten"), "havdepræst");});
test("havdepålagt -> havdepålag", function() {deepEqual( Stem("havdepålagt"), "havdepålag");});
test("havdyr -> havdyr", function() {deepEqual( Stem("havdyr"), "havdyr");});
test("havdyrets -> havdyr", function() {deepEqual( Stem("havdyrets"), "havdyr");});
test("havdyrs -> havdyr", function() {deepEqual( Stem("havdyrs"), "havdyr");});
test("have -> hav", function() {deepEqual( Stem("have"), "hav");});
test("havemanden -> havemand", function() {deepEqual( Stem("havemanden"), "havemand");});
test("haven -> hav", function() {deepEqual( Stem("haven"), "hav");});
test("havene -> hav", function() {deepEqual( Stem("havene"), "hav");});
test("havenes -> hav", function() {deepEqual( Stem("havenes"), "hav");});
test("havens -> hav", function() {deepEqual( Stem("havens"), "hav");});
test("haver -> hav", function() {deepEqual( Stem("haver"), "hav");});
test("haverne -> hav", function() {deepEqual( Stem("haverne"), "hav");});
test("havers -> hav", function() {deepEqual( Stem("havers"), "hav");});
test("haves -> hav", function() {deepEqual( Stem("haves"), "hav");});
test("havesyg -> havesyg", function() {deepEqual( Stem("havesyg"), "havesyg");});
test("havesyge -> havesyg", function() {deepEqual( Stem("havesyge"), "havesyg");});
test("havesygen -> havesyg", function() {deepEqual( Stem("havesygen"), "havesyg");});
test("havet -> hav", function() {deepEqual( Stem("havet"), "hav");});
test("havets -> hav", function() {deepEqual( Stem("havets"), "hav");});
test("havila -> havila", function() {deepEqual( Stem("havila"), "havila");});
test("havn -> havn", function() {deepEqual( Stem("havn"), "havn");});
test("havne -> havn", function() {deepEqual( Stem("havne"), "havn");});
test("havnen -> havn", function() {deepEqual( Stem("havnen"), "havn");});
test("havs -> hav", function() {deepEqual( Stem("havs"), "hav");});
test("havsandets -> havsand", function() {deepEqual( Stem("havsandets"), "havsand");});
test("havsens -> havs", function() {deepEqual( Stem("havsens"), "havs");});
test("havvandet -> havvand", function() {deepEqual( Stem("havvandet"), "havvand");});
test("havørknen -> havørkn", function() {deepEqual( Stem("havørknen"), "havørkn");});
test("havørnen -> havørn", function() {deepEqual( Stem("havørnen"), "havørn");});
test("haz -> haz", function() {deepEqual( Stem("haz"), "haz");});
test("hazael -> hazael", function() {deepEqual( Stem("hazael"), "hazael");});
test("hazaels -> hazael", function() {deepEqual( Stem("hazaels"), "hazael");});
test("hazaja -> hazaja", function() {deepEqual( Stem("hazaja"), "hazaja");});
test("hazar -> hazar", function() {deepEqual( Stem("hazar"), "hazar");});
test("hazarmavet -> hazarmav", function() {deepEqual( Stem("hazarmavet"), "hazarmav");});
test("hazazon -> hazazon", function() {deepEqual( Stem("hazazon"), "hazazon");});
test("hazerot -> hazerot", function() {deepEqual( Stem("hazerot"), "hazerot");});
test("haziel -> haziel", function() {deepEqual( Stem("haziel"), "haziel");});
test("hazim -> hazim", function() {deepEqual( Stem("hazim"), "hazim");});
test("hazlelponi -> hazlelponi", function() {deepEqual( Stem("hazlelponi"), "hazlelponi");});
test("hazo -> hazo", function() {deepEqual( Stem("hazo"), "hazo");});
test("hazor -> hazor", function() {deepEqual( Stem("hazor"), "hazor");});
test("hazors -> hazor", function() {deepEqual( Stem("hazors"), "hazor");});
test("hazot -> hazot", function() {deepEqual( Stem("hazot"), "hazot");});
test("hazzebajims -> hazzebajim", function() {deepEqual( Stem("hazzebajims"), "hazzebajim");});
test("hazziz -> hazziz", function() {deepEqual( Stem("hazziz"), "hazziz");});
test("hazzobeba -> hazzobeba", function() {deepEqual( Stem("hazzobeba"), "hazzobeba");});
test("hazzurim -> hazzurim", function() {deepEqual( Stem("hazzurim"), "hazzurim");});
test("heber -> heb", function() {deepEqual( Stem("heber"), "heb");});
test("hebers -> heb", function() {deepEqual( Stem("hebers"), "heb");});
test("hebon -> hebon", function() {deepEqual( Stem("hebon"), "hebon");});
test("hebraisk -> hebraisk", function() {deepEqual( Stem("hebraisk"), "hebraisk");});
test("hebraiske -> hebraisk", function() {deepEqual( Stem("hebraiske"), "hebraisk");});
test("hebriternes -> hebrit", function() {deepEqual( Stem("hebriternes"), "hebrit");});
test("hebron -> hebron", function() {deepEqual( Stem("hebron"), "hebron");});
test("hebroniterne -> hebronit", function() {deepEqual( Stem("hebroniterne"), "hebronit");});
test("hebroniternes -> hebronit", function() {deepEqual( Stem("hebroniternes"), "hebronit");});
test("hebrons -> hebron", function() {deepEqual( Stem("hebrons"), "hebron");});
test("hebræer -> hebræ", function() {deepEqual( Stem("hebræer"), "hebræ");});
test("hebræere -> hebræ", function() {deepEqual( Stem("hebræere"), "hebræ");});
test("hebræeren -> hebræ", function() {deepEqual( Stem("hebræeren"), "hebræ");});
test("hebræerkvinderne -> hebræerkvind", function() {deepEqual( Stem("hebræerkvinderne"), "hebræerkvind");});
test("hebræerkvindernes -> hebræerkvind", function() {deepEqual( Stem("hebræerkvindernes"), "hebræerkvind");});
test("hebræerne -> hebræ", function() {deepEqual( Stem("hebræerne"), "hebræ");});
test("hebræernes -> hebræ", function() {deepEqual( Stem("hebræernes"), "hebræ");});
test("hebræisk -> hebræisk", function() {deepEqual( Stem("hebræisk"), "hebræisk");});
test("hed -> hed", function() {deepEqual( Stem("hed"), "hed");});
test("hedde -> hed", function() {deepEqual( Stem("hedde"), "hed");});
test("hedder -> hed", function() {deepEqual( Stem("hedder"), "hed");});
test("hede -> hed", function() {deepEqual( Stem("hede"), "hed");});
test("hedemel -> hedemel", function() {deepEqual( Stem("hedemel"), "hedemel");});
test("heden -> hed", function() {deepEqual( Stem("heden"), "hed");});
test("hedensk -> hedensk", function() {deepEqual( Stem("hedensk"), "hedensk");});
test("hedere -> hed", function() {deepEqual( Stem("hedere"), "hed");});
test("hedesj -> hedesj", function() {deepEqual( Stem("hedesj"), "hedesj");});
test("hedeste -> hedest", function() {deepEqual( Stem("hedeste"), "hedest");});
test("hedma -> hedma", function() {deepEqual( Stem("hedma"), "hedma");});
test("hedning -> hedning", function() {deepEqual( Stem("hedning"), "hedning");});
test("hedningeapostel -> hedningeapostel", function() {deepEqual( Stem("hedningeapostel"), "hedningeapostel");});
test("hedningefolk -> hedningefolk", function() {deepEqual( Stem("hedningefolk"), "hedningefolk");});
test("hedningefolkene -> hedningefolk", function() {deepEqual( Stem("hedningefolkene"), "hedningefolk");});
test("hedningefolkenes -> hedningefolk", function() {deepEqual( Stem("hedningefolkenes"), "hedningefolk");});
test("hedningeguderne -> hedningegud", function() {deepEqual( Stem("hedningeguderne"), "hedningegud");});
test("hedningelys -> hedningely", function() {deepEqual( Stem("hedningelys"), "hedningely");});
test("hedningemagterne -> hedningemag", function() {deepEqual( Stem("hedningemagterne"), "hedningemag");});
test("hedningemes -> hedningem", function() {deepEqual( Stem("hedningemes"), "hedningem");});
test("hedninger -> hedning", function() {deepEqual( Stem("hedninger"), "hedning");});
test("hedningerigerne -> hedninger", function() {deepEqual( Stem("hedningerigerne"), "hedninger");});
test("hedningerigernes -> hedninger", function() {deepEqual( Stem("hedningerigernes"), "hedninger");});
test("hedningerne -> hedning", function() {deepEqual( Stem("hedningerne"), "hedning");});
test("hedningernes -> hedning", function() {deepEqual( Stem("hedningernes"), "hedning");});
test("hedningers -> hedning", function() {deepEqual( Stem("hedningers"), "hedning");});
test("hednings -> hedning", function() {deepEqual( Stem("hednings"), "hedning");});
test("hedron -> hedron", function() {deepEqual( Stem("hedron"), "hedron");});
test("hedt -> hedt", function() {deepEqual( Stem("hedt"), "hedt");});
test("heeren -> heer", function() {deepEqual( Stem("heeren"), "heer");});
test("heerrens -> heer", function() {deepEqual( Stem("heerrens"), "heer");});
test("hefer -> hef", function() {deepEqual( Stem("hefer"), "hef");});
test("heferiternes -> heferit", function() {deepEqual( Stem("heferiternes"), "heferit");});
test("hefers -> hef", function() {deepEqual( Stem("hefers"), "hef");});
test("heftig -> heft", function() {deepEqual( Stem("heftig"), "heft");});
test("heftige -> heft", function() {deepEqual( Stem("heftige"), "heft");});
test("heftigere -> heft", function() {deepEqual( Stem("heftigere"), "heft");});
test("heftigt -> heft", function() {deepEqual( Stem("heftigt"), "heft");});
test("hefziba -> hefziba", function() {deepEqual( Stem("hefziba"), "hefziba");});
test("hegaj -> hegaj", function() {deepEqual( Stem("hegaj"), "hegaj");});
test("heglersker -> heglersk", function() {deepEqual( Stem("heglersker"), "heglersk");});
test("hegn -> hegn", function() {deepEqual( Stem("hegn"), "hegn");});
test("hegner -> hegn", function() {deepEqual( Stem("hegner"), "hegn");});
test("hegnet -> hegn", function() {deepEqual( Stem("hegnet"), "hegn");});
test("hehatiter -> hehatit", function() {deepEqual( Stem("hehatiter"), "hehatit");});
test("hehatiterne -> hehatit", function() {deepEqual( Stem("hehatiterne"), "hehatit");});
test("hehatiters -> hehatit", function() {deepEqual( Stem("hehatiters"), "hehatit");});
test("hehats -> hehat", function() {deepEqual( Stem("hehats"), "hehat");});
test("hejrer -> hejr", function() {deepEqual( Stem("hejrer"), "hejr");});
test("hejs -> hej", function() {deepEqual( Stem("hejs"), "hej");});
test("hejsede -> hejsed", function() {deepEqual( Stem("hejsede"), "hejsed");});
test("hejst -> hejst", function() {deepEqual( Stem("hejst"), "hejst");});
test("hejste -> hejst", function() {deepEqual( Stem("hejste"), "hejst");});
test("hel -> hel", function() {deepEqual( Stem("hel"), "hel");});
test("helam -> helam", function() {deepEqual( Stem("helam"), "helam");});
test("helbon -> helbon", function() {deepEqual( Stem("helbon"), "helbon");});
test("helbred -> helbred", function() {deepEqual( Stem("helbred"), "helbred");});
test("helbrede -> helbred", function() {deepEqual( Stem("helbrede"), "helbred");});
test("helbredede -> helbreded", function() {deepEqual( Stem("helbredede"), "helbreded");});
test("helbredelse -> helbred", function() {deepEqual( Stem("helbredelse"), "helbred");});
test("helbredelser -> helbred", function() {deepEqual( Stem("helbredelser"), "helbred");});
test("helbredelsestegn -> helbredelsestegn", function() {deepEqual( Stem("helbredelsestegn"), "helbredelsestegn");});
test("helbreder -> helbred", function() {deepEqual( Stem("helbreder"), "helbred");});
test("helbredes -> helbred", function() {deepEqual( Stem("helbredes"), "helbred");});
test("helbredt -> helbred", function() {deepEqual( Stem("helbredt"), "helbred");});
test("helbredte -> helbred", function() {deepEqual( Stem("helbredte"), "helbred");});
test("held -> held", function() {deepEqual( Stem("held"), "held");});
test("heldaj -> heldaj", function() {deepEqual( Stem("heldaj"), "heldaj");});
test("heldet -> held", function() {deepEqual( Stem("heldet"), "held");});
test("hele -> hel", function() {deepEqual( Stem("hele"), "hel");});
test("heled -> heled", function() {deepEqual( Stem("heled"), "heled");});
test("helek -> helek", function() {deepEqual( Stem("helek"), "helek");});
test("helekiternes -> helekit", function() {deepEqual( Stem("helekiternes"), "helekit");});
test("heleks -> helek", function() {deepEqual( Stem("heleks"), "helek");});
test("heler -> hel", function() {deepEqual( Stem("heler"), "hel");});
test("heles -> hel", function() {deepEqual( Stem("heles"), "hel");});
test("helet -> hel", function() {deepEqual( Stem("helet"), "hel");});
test("helez -> helez", function() {deepEqual( Stem("helez"), "helez");});
test("helhed -> hel", function() {deepEqual( Stem("helhed"), "hel");});
test("helkajtor -> helkajtor", function() {deepEqual( Stem("helkajtor"), "helkajtor");});
test("helkat -> helkat", function() {deepEqual( Stem("helkat"), "helkat");});
test("hellenisterne -> hellenist", function() {deepEqual( Stem("hellenisterne"), "hellenist");});
test("heller -> hel", function() {deepEqual( Stem("heller"), "hel");});
test("hellere -> hel", function() {deepEqual( Stem("hellere"), "hel");});
test("hellig -> hel", function() {deepEqual( Stem("hellig"), "hel");});
test("helligdag -> helligdag", function() {deepEqual( Stem("helligdag"), "helligdag");});
test("helligdom -> helligdom", function() {deepEqual( Stem("helligdom"), "helligdom");});
test("helligdomme -> helligdom", function() {deepEqual( Stem("helligdomme"), "helligdom");});
test("helligdommen -> helligdom", function() {deepEqual( Stem("helligdommen"), "helligdom");});
test("helligdommens -> helligdom", function() {deepEqual( Stem("helligdommens"), "helligdom");});
test("helligdomn -> helligdomn", function() {deepEqual( Stem("helligdomn"), "helligdomn");});
test("helligdoms -> helligdom", function() {deepEqual( Stem("helligdoms"), "helligdom");});
test("hellige -> hel", function() {deepEqual( Stem("hellige"), "hel");});
test("helligede -> helliged", function() {deepEqual( Stem("helligede"), "helliged");});
test("helligelse -> hellig", function() {deepEqual( Stem("helligelse"), "hellig");});
test("helliger -> hel", function() {deepEqual( Stem("helliger"), "hel");});
test("helliges -> hel", function() {deepEqual( Stem("helliges"), "hel");});
test("helliget -> hel", function() {deepEqual( Stem("helliget"), "hel");});
test("helliggave -> helliggav", function() {deepEqual( Stem("helliggave"), "helliggav");});
test("helliggaver -> helliggav", function() {deepEqual( Stem("helliggaver"), "helliggav");});
test("helliggaverne -> helliggav", function() {deepEqual( Stem("helliggaverne"), "helliggav");});
test("helliggjort -> helliggjort", function() {deepEqual( Stem("helliggjort"), "helliggjort");});
test("helliggøre -> helliggør", function() {deepEqual( Stem("helliggøre"), "helliggør");});
test("helliggørelse -> helliggør", function() {deepEqual( Stem("helliggørelse"), "helliggør");});
test("helliggørelsen -> helliggør", function() {deepEqual( Stem("helliggørelsen"), "helliggør");});
test("hellighed -> hel", function() {deepEqual( Stem("hellighed"), "hel");});
test("helligheds -> hel", function() {deepEqual( Stem("helligheds"), "hel");});
test("helligholde -> hellighold", function() {deepEqual( Stem("helligholde"), "hellighold");});
test("helligholder -> hellighold", function() {deepEqual( Stem("helligholder"), "hellighold");});
test("helligofrene -> helligofr", function() {deepEqual( Stem("helligofrene"), "helligofr");});
test("helligste -> hel", function() {deepEqual( Stem("helligste"), "hel");});
test("helligt -> hel", function() {deepEqual( Stem("helligt"), "hel");});
test("helligånd -> helligånd", function() {deepEqual( Stem("helligånd"), "helligånd");});
test("helligånds -> helligånd", function() {deepEqual( Stem("helligånds"), "helligånd");});
test("heloffer -> helof", function() {deepEqual( Stem("heloffer"), "helof");});
test("helofre -> helofr", function() {deepEqual( Stem("helofre"), "helofr");});
test("helons -> helon", function() {deepEqual( Stem("helons"), "helon");});
test("helse -> hels", function() {deepEqual( Stem("helse"), "hels");});
test("helst -> helst", function() {deepEqual( Stem("helst"), "helst");});
test("helt -> helt", function() {deepEqual( Stem("helt"), "helt");});
test("helte -> helt", function() {deepEqual( Stem("helte"), "helt");});
test("heltegeminger -> heltegeming", function() {deepEqual( Stem("heltegeminger"), "heltegeming");});
test("heltegerninger -> heltegerning", function() {deepEqual( Stem("heltegerninger"), "heltegerning");});
test("heltekonge -> heltekong", function() {deepEqual( Stem("heltekonge"), "heltekong");});
test("heltekraft -> heltekraft", function() {deepEqual( Stem("heltekraft"), "heltekraft");});
test("heltemodig -> heltemod", function() {deepEqual( Stem("heltemodig"), "heltemod");});
test("helten -> helt", function() {deepEqual( Stem("helten"), "helt");});
test("heltene -> helt", function() {deepEqual( Stem("heltene"), "helt");});
test("heltenes -> helt", function() {deepEqual( Stem("heltenes"), "helt");});
test("heltens -> helt", function() {deepEqual( Stem("heltens"), "helt");});
test("heltes -> helt", function() {deepEqual( Stem("heltes"), "helt");});
test("helteskjolde -> helteskjold", function() {deepEqual( Stem("helteskjolde"), "helteskjold");});
test("helts -> helt", function() {deepEqual( Stem("helts"), "helt");});
test("helvede -> helved", function() {deepEqual( Stem("helvede"), "helved");});
test("helvedes -> helved", function() {deepEqual( Stem("helvedes"), "helved");});
test("hem -> hem", function() {deepEqual( Stem("hem"), "hem");});
test("hemam -> hemam", function() {deepEqual( Stem("hemam"), "hemam");});
test("heman -> heman", function() {deepEqual( Stem("heman"), "heman");});
test("hemans -> heman", function() {deepEqual( Stem("hemans"), "heman");});
test("hemdan -> hemdan", function() {deepEqual( Stem("hemdan"), "hemdan");});
test("hemmelig -> hem", function() {deepEqual( Stem("hemmelig"), "hem");});
test("hemmelige -> hem", function() {deepEqual( Stem("hemmelige"), "hem");});
test("hemmelighed -> hem", function() {deepEqual( Stem("hemmelighed"), "hem");});
test("hemmeligheden -> hem", function() {deepEqual( Stem("hemmeligheden"), "hem");});
test("hemmeligheder -> hem", function() {deepEqual( Stem("hemmeligheder"), "hem");});
test("hemmelighederne -> hemmelighed", function() {deepEqual( Stem("hemmelighederne"), "hemmelighed");});
test("hemmeligt -> hem", function() {deepEqual( Stem("hemmeligt"), "hem");});
test("hemors -> hemor", function() {deepEqual( Stem("hemors"), "hemor");});
test("hemuels -> hemuel", function() {deepEqual( Stem("hemuels"), "hemuel");});
test("hen -> hen", function() {deepEqual( Stem("hen"), "hen");});
test("hena -> hena", function() {deepEqual( Stem("hena"), "hena");});
test("henadads -> henadad", function() {deepEqual( Stem("henadads"), "henadad");});
test("henan -> henan", function() {deepEqual( Stem("henan"), "henan");});
test("henas -> hena", function() {deepEqual( Stem("henas"), "hena");});
test("henaz -> henaz", function() {deepEqual( Stem("henaz"), "henaz");});
test("henblik -> henblik", function() {deepEqual( Stem("henblik"), "henblik");});
test("henbåren -> henbår", function() {deepEqual( Stem("henbåren"), "henbår");});
test("hende -> hend", function() {deepEqual( Stem("hende"), "hend");});
test("hendelser -> hend", function() {deepEqual( Stem("hendelser"), "hend");});
test("hendes -> hend", function() {deepEqual( Stem("hendes"), "hend");});
test("hendinge -> hending", function() {deepEqual( Stem("hendinge"), "hending");});
test("henfaldne -> henfaldn", function() {deepEqual( Stem("henfaldne"), "henfaldn");});
test("henfarne -> henfarn", function() {deepEqual( Stem("henfarne"), "henfarn");});
test("hengav -> hengav", function() {deepEqual( Stem("hengav"), "hengav");});
test("hengemmer -> hengem", function() {deepEqual( Stem("hengemmer"), "hengem");});
test("hengemte -> hengemt", function() {deepEqual( Stem("hengemte"), "hengemt");});
test("hengiven -> hengiv", function() {deepEqual( Stem("hengiven"), "hengiv");});
test("hengiver -> hengiv", function() {deepEqual( Stem("hengiver"), "hengiv");});
test("hengivet -> hengiv", function() {deepEqual( Stem("hengivet"), "hengiv");});
test("hengivne -> hengivn", function() {deepEqual( Stem("hengivne"), "hengivn");});
test("henhold -> henhold", function() {deepEqual( Stem("henhold"), "henhold");});
test("henimod -> henimod", function() {deepEqual( Stem("henimod"), "henimod");});
test("henizziterne -> henizzit", function() {deepEqual( Stem("henizziterne"), "henizzit");});
test("henkastet -> henkast", function() {deepEqual( Stem("henkastet"), "henkast");});
test("henlagde -> henlag", function() {deepEqual( Stem("henlagde"), "henlag");});
test("henlagt -> henlag", function() {deepEqual( Stem("henlagt"), "henlag");});
test("henlever -> henlev", function() {deepEqual( Stem("henlever"), "henlev");});
test("henligger -> henlig", function() {deepEqual( Stem("henligger"), "henlig");});
test("henlægge -> henlæg", function() {deepEqual( Stem("henlægge"), "henlæg");});
test("henne -> hen", function() {deepEqual( Stem("henne"), "hen");});
test("henregnes -> henregn", function() {deepEqual( Stem("henregnes"), "henregn");});
test("henret -> henr", function() {deepEqual( Stem("henret"), "henr");});
test("henrette -> henret", function() {deepEqual( Stem("henrette"), "henret");});
test("henrettes -> henret", function() {deepEqual( Stem("henrettes"), "henret");});
test("henrettet -> henret", function() {deepEqual( Stem("henrettet"), "henret");});
test("henrundne -> henrundn", function() {deepEqual( Stem("henrundne"), "henrundn");});
test("henrykkelse -> henryk", function() {deepEqual( Stem("henrykkelse"), "henryk");});
test("henryktes -> henryk", function() {deepEqual( Stem("henryktes"), "henryk");});
test("henseende -> hense", function() {deepEqual( Stem("henseende"), "hense");});
test("hensigt -> hens", function() {deepEqual( Stem("hensigt"), "hens");});
test("henslængt -> henslæng", function() {deepEqual( Stem("henslængt"), "henslæng");});
test("henslængte -> henslæng", function() {deepEqual( Stem("henslængte"), "henslæng");});
test("henslængtes -> henslæng", function() {deepEqual( Stem("henslængtes"), "henslæng");});
test("hensmægte -> hensmæg", function() {deepEqual( Stem("hensmægte"), "hensmæg");});
test("hensove -> hensov", function() {deepEqual( Stem("hensove"), "hensov");});
test("hensovede -> hensoved", function() {deepEqual( Stem("hensovede"), "hensoved");});
test("henstrakt -> henstrak", function() {deepEqual( Stem("henstrakt"), "henstrak");});
test("hensunken -> hensunk", function() {deepEqual( Stem("hensunken"), "hensunk");});
test("hensvinder -> hensvind", function() {deepEqual( Stem("hensvinder"), "hensvind");});
test("hensygner -> hensygn", function() {deepEqual( Stem("hensygner"), "hensygn");});
test("hensyn -> hensyn", function() {deepEqual( Stem("hensyn"), "hensyn");});
test("hensynsløs -> hensynsløs", function() {deepEqual( Stem("hensynsløs"), "hensynsløs");});
test("hensættes -> hensæt", function() {deepEqual( Stem("hensættes"), "hensæt");});
test("hent -> hent", function() {deepEqual( Stem("hent"), "hent");});
test("hente -> hent", function() {deepEqual( Stem("hente"), "hent");});
test("hented -> hented", function() {deepEqual( Stem("hented"), "hented");});
test("hentede -> hented", function() {deepEqual( Stem("hentede"), "hented");});
test("henter -> hent", function() {deepEqual( Stem("henter"), "hent");});
test("hentes -> hent", function() {deepEqual( Stem("hentes"), "hent");});
test("hentet -> hent", function() {deepEqual( Stem("hentet"), "hent");});
test("hentydede -> hentyded", function() {deepEqual( Stem("hentydede"), "hentyded");});
test("hentydning -> hentydning", function() {deepEqual( Stem("hentydning"), "hentydning");});
test("hentydninger -> hentydning", function() {deepEqual( Stem("hentydninger"), "hentydning");});
test("hentæres -> hentær", function() {deepEqual( Stem("hentæres"), "hentær");});
test("hentørrer -> hentør", function() {deepEqual( Stem("hentørrer"), "hentør");});
test("hentørres -> hentør", function() {deepEqual( Stem("hentørres"), "hentør");});
test("henved -> henved", function() {deepEqual( Stem("henved"), "henved");});
test("henvejres -> henvejr", function() {deepEqual( Stem("henvejres"), "henvejr");});
test("henvejret -> henvejr", function() {deepEqual( Stem("henvejret"), "henvejr");});
test("henvend -> henvend", function() {deepEqual( Stem("henvend"), "henvend");});
test("henvende -> henv", function() {deepEqual( Stem("henvende"), "henv");});
test("henvender -> henvend", function() {deepEqual( Stem("henvender"), "henvend");});
test("henvendt -> henvend", function() {deepEqual( Stem("henvendt"), "henvend");});
test("henvendte -> henvend", function() {deepEqual( Stem("henvendte"), "henvend");});
test("henviste -> henvist", function() {deepEqual( Stem("henviste"), "henvist");});
test("her -> her", function() {deepEqual( Stem("her"), "her");});
test("heraf -> heraf", function() {deepEqual( Stem("heraf"), "heraf");});
test("herberg -> herberg", function() {deepEqual( Stem("herberg"), "herberg");});
test("herberge -> herberg", function() {deepEqual( Stem("herberge"), "herberg");});
test("herberget -> herberg", function() {deepEqual( Stem("herberget"), "herberg");});
test("herefter -> hereft", function() {deepEqual( Stem("herefter"), "hereft");});
test("heres -> her", function() {deepEqual( Stem("heres"), "her");});
test("heresj -> heresj", function() {deepEqual( Stem("heresj"), "heresj");});
test("herespasset -> herespas", function() {deepEqual( Stem("herespasset"), "herespas");});
test("heress -> heres", function() {deepEqual( Stem("heress"), "heres");});
test("heret -> her", function() {deepEqual( Stem("heret"), "her");});
test("herfor -> herfor", function() {deepEqual( Stem("herfor"), "herfor");});
test("herfra -> herfra", function() {deepEqual( Stem("herfra"), "herfra");});
test("herhen -> herh", function() {deepEqual( Stem("herhen"), "herh");});
test("heri -> heri", function() {deepEqual( Stem("heri"), "heri");});
test("herijots -> herijot", function() {deepEqual( Stem("herijots"), "herijot");});
test("herind -> herind", function() {deepEqual( Stem("herind"), "herind");});
test("herinde -> herind", function() {deepEqual( Stem("herinde"), "herind");});
test("herkomst -> herkomst", function() {deepEqual( Stem("herkomst"), "herkomst");});
test("herlig -> her", function() {deepEqual( Stem("herlig"), "her");});
test("herlige -> her", function() {deepEqual( Stem("herlige"), "her");});
test("herligere -> her", function() {deepEqual( Stem("herligere"), "her");});
test("herliggjorde -> herliggjord", function() {deepEqual( Stem("herliggjorde"), "herliggjord");});
test("herliggjort -> herliggjort", function() {deepEqual( Stem("herliggjort"), "herliggjort");});
test("herliggjorte -> herliggjort", function() {deepEqual( Stem("herliggjorte"), "herliggjort");});
test("herliggør -> herliggør", function() {deepEqual( Stem("herliggør"), "herliggør");});
test("herliggøre -> herliggør", function() {deepEqual( Stem("herliggøre"), "herliggør");});
test("herliggøres -> herliggør", function() {deepEqual( Stem("herliggøres"), "herliggør");});
test("herlighed -> her", function() {deepEqual( Stem("herlighed"), "her");});
test("herligheden -> her", function() {deepEqual( Stem("herligheden"), "her");});
test("herlighedens -> her", function() {deepEqual( Stem("herlighedens"), "her");});
test("herligheder -> her", function() {deepEqual( Stem("herligheder"), "her");});
test("herligheds -> her", function() {deepEqual( Stem("herligheds"), "her");});
test("herlighedstrone -> herlighedstron", function() {deepEqual( Stem("herlighedstrone"), "herlighedstron");});
test("herlighedsåbenbarelse -> herlighedsåbenbar", function() {deepEqual( Stem("herlighedsåbenbarelse"), "herlighedsåbenbar");});
test("herligste -> her", function() {deepEqual( Stem("herligste"), "her");});
test("herligt -> her", function() {deepEqual( Stem("herligt"), "her");});
test("hermas -> herma", function() {deepEqual( Stem("hermas"), "herma");});
test("hermed -> hermed", function() {deepEqual( Stem("hermed"), "hermed");});
test("hermes -> herm", function() {deepEqual( Stem("hermes"), "herm");});
test("hermogenes -> hermog", function() {deepEqual( Stem("hermogenes"), "hermog");});
test("hermon -> hermon", function() {deepEqual( Stem("hermon"), "hermon");});
test("hermonbjerget -> hermonbjerg", function() {deepEqual( Stem("hermonbjerget"), "hermonbjerg");});
test("hermonbjergets -> hermonbjerg", function() {deepEqual( Stem("hermonbjergets"), "hermonbjerg");});
test("hermons -> hermon", function() {deepEqual( Stem("hermons"), "hermon");});
test("hermontindernes -> hermontind", function() {deepEqual( Stem("hermontindernes"), "hermontind");});
test("herned -> herned", function() {deepEqual( Stem("herned"), "herned");});
test("hernede -> herned", function() {deepEqual( Stem("hernede"), "herned");});
test("herodes -> herod", function() {deepEqual( Stem("herodes"), "herod");});
test("herodianerne -> herodian", function() {deepEqual( Stem("herodianerne"), "herodian");});
test("herodias -> herodia", function() {deepEqual( Stem("herodias"), "herodia");});
test("herodion -> herodion", function() {deepEqual( Stem("herodion"), "herodion");});
test("herold -> herold", function() {deepEqual( Stem("herold"), "herold");});
test("herom -> herom", function() {deepEqual( Stem("herom"), "herom");});
test("heromkring -> heromkring", function() {deepEqual( Stem("heromkring"), "heromkring");});
test("herop -> herop", function() {deepEqual( Stem("herop"), "herop");});
test("heropl -> heropl", function() {deepEqual( Stem("heropl"), "heropl");});
test("herovenfra -> herovenfra", function() {deepEqual( Stem("herovenfra"), "herovenfra");});
test("heroventil -> heroventil", function() {deepEqual( Stem("heroventil"), "heroventil");});
test("herover -> herov", function() {deepEqual( Stem("herover"), "herov");});
test("herpå -> herpå", function() {deepEqual( Stem("herpå"), "herpå");});
test("herr -> her", function() {deepEqual( Stem("herr"), "her");});
test("herre -> her", function() {deepEqual( Stem("herre"), "her");});
test("herredom -> herredom", function() {deepEqual( Stem("herredom"), "herredom");});
test("herredømme -> herredøm", function() {deepEqual( Stem("herredømme"), "herredøm");});
test("herredømmer -> herredøm", function() {deepEqual( Stem("herredømmer"), "herredøm");});
test("herredømmes -> herredøm", function() {deepEqual( Stem("herredømmes"), "herredøm");});
test("herredømmet -> herredøm", function() {deepEqual( Stem("herredømmet"), "herredøm");});
test("herren -> her", function() {deepEqual( Stem("herren"), "her");});
test("herrens -> her", function() {deepEqual( Stem("herrens"), "her");});
test("herrensjeneres -> herrensjen", function() {deepEqual( Stem("herrensjeneres"), "herrensjen");});
test("herrer -> her", function() {deepEqual( Stem("herrer"), "her");});
test("herrernes -> her", function() {deepEqual( Stem("herrernes"), "her");});
test("herrers -> her", function() {deepEqual( Stem("herrers"), "her");});
test("herres -> her", function() {deepEqual( Stem("herres"), "her");});
test("herress -> herres", function() {deepEqual( Stem("herress"), "herres");});
test("herrn -> herrn", function() {deepEqual( Stem("herrn"), "herrn");});
test("herrns -> herrn", function() {deepEqual( Stem("herrns"), "herrn");});
test("herrren -> herr", function() {deepEqual( Stem("herrren"), "herr");});
test("herrrns -> herrrn", function() {deepEqual( Stem("herrrns"), "herrrn");});
test("hersk -> hersk", function() {deepEqual( Stem("hersk"), "hersk");});
test("herskab -> herskab", function() {deepEqual( Stem("herskab"), "herskab");});
test("herske -> hersk", function() {deepEqual( Stem("herske"), "hersk");});
test("herskede -> hersked", function() {deepEqual( Stem("herskede"), "hersked");});
test("hersker -> hersk", function() {deepEqual( Stem("hersker"), "hersk");});
test("herskere -> hersk", function() {deepEqual( Stem("herskere"), "hersk");});
test("herskerinde -> herskerind", function() {deepEqual( Stem("herskerinde"), "herskerind");});
test("herskerinden -> herskerind", function() {deepEqual( Stem("herskerinden"), "herskerind");});
test("herskerne -> hersk", function() {deepEqual( Stem("herskerne"), "hersk");});
test("herskernes -> hersk", function() {deepEqual( Stem("herskernes"), "hersk");});
test("herskers -> hersk", function() {deepEqual( Stem("herskers"), "hersk");});
test("herskerskerstav -> herskerskerstav", function() {deepEqual( Stem("herskerskerstav"), "herskerskerstav");});
test("herskerspir -> herskerspir", function() {deepEqual( Stem("herskerspir"), "herskerspir");});
test("herskerstav -> herskerstav", function() {deepEqual( Stem("herskerstav"), "herskerstav");});
test("hersket -> hersk", function() {deepEqual( Stem("hersket"), "hersk");});
test("hersltede -> herslted", function() {deepEqual( Stem("hersltede"), "herslted");});
test("hertil -> hertil", function() {deepEqual( Stem("hertil"), "hertil");});
test("heruberne -> herub", function() {deepEqual( Stem("heruberne"), "herub");});
test("herud -> herud", function() {deepEqual( Stem("herud"), "herud");});
test("herude -> herud", function() {deepEqual( Stem("herude"), "herud");});
test("herved -> herved", function() {deepEqual( Stem("herved"), "herved");});
test("hesed -> hesed", function() {deepEqual( Stem("hesed"), "hesed");});
test("heseds -> hesed", function() {deepEqual( Stem("heseds"), "hesed");});
test("hesjbon -> hesjbon", function() {deepEqual( Stem("hesjbon"), "hesjbon");});
test("hesjbons -> hesjbon", function() {deepEqual( Stem("hesjbons"), "hesjbon");});
test("hesjmon -> hesjmon", function() {deepEqual( Stem("hesjmon"), "hesjmon");});
test("hest -> hest", function() {deepEqual( Stem("hest"), "hest");});
test("heste -> hest", function() {deepEqual( Stem("heste"), "hest");});
test("hesteindgangen -> hesteindgang", function() {deepEqual( Stem("hesteindgangen"), "hesteindgang");});
test("hesten -> hest", function() {deepEqual( Stem("hesten"), "hest");});
test("hestene -> hest", function() {deepEqual( Stem("hestene"), "hest");});
test("hestenes -> hest", function() {deepEqual( Stem("hestenes"), "hest");});
test("hesteporten -> hesteport", function() {deepEqual( Stem("hesteporten"), "hesteport");});
test("hesteportens -> hesteport", function() {deepEqual( Stem("hesteportens"), "hesteport");});
test("hestes -> hest", function() {deepEqual( Stem("hestes"), "hest");});
test("het -> het", function() {deepEqual( Stem("het"), "het");});
test("hetiten -> hetit", function() {deepEqual( Stem("hetiten"), "hetit");});
test("hetiterinde -> hetiterind", function() {deepEqual( Stem("hetiterinde"), "hetiterind");});
test("hetiterne -> hetit", function() {deepEqual( Stem("hetiterne"), "hetit");});
test("hetiternes -> hetit", function() {deepEqual( Stem("hetiternes"), "hetit");});
test("hetiterte -> hetitert", function() {deepEqual( Stem("hetiterte"), "hetitert");});
test("hetitisk -> hetitisk", function() {deepEqual( Stem("hetitisk"), "hetitisk");});
test("hetitiske -> hetitisk", function() {deepEqual( Stem("hetitiske"), "hetitisk");});
test("hetlon -> hetlon", function() {deepEqual( Stem("hetlon"), "hetlon");});
test("hets -> het", function() {deepEqual( Stem("hets"), "het");});
test("hetura -> hetura", function() {deepEqual( Stem("hetura"), "hetura");});
test("hezir -> hezir", function() {deepEqual( Stem("hezir"), "hezir");});
test("hezjons -> hezjon", function() {deepEqual( Stem("hezjons"), "hezjon");});
test("hezro -> hezro", function() {deepEqual( Stem("hezro"), "hezro");});
test("hezron -> hezron", function() {deepEqual( Stem("hezron"), "hezron");});
test("hezroniternes -> hezronit", function() {deepEqual( Stem("hezroniternes"), "hezronit");});
test("hezrons -> hezron", function() {deepEqual( Stem("hezrons"), "hezron");});
test("heztoniternes -> heztonit", function() {deepEqual( Stem("heztoniternes"), "heztonit");});
test("hherren -> hher", function() {deepEqual( Stem("hherren"), "hher");});
test("hibrot -> hibrot", function() {deepEqual( Stem("hibrot"), "hibrot");});
test("hid -> hid", function() {deepEqual( Stem("hid"), "hid");});
test("hiddaj -> hiddaj", function() {deepEqual( Stem("hiddaj"), "hiddaj");});
test("hiddekel -> hiddekel", function() {deepEqual( Stem("hiddekel"), "hiddekel");});
test("hidført -> hidført", function() {deepEqual( Stem("hidført"), "hidført");});
test("hidindtil -> hidindtil", function() {deepEqual( Stem("hidindtil"), "hidindtil");});
test("hidkalder -> hidkald", function() {deepEqual( Stem("hidkalder"), "hidkald");});
test("hidkaldte -> hidkald", function() {deepEqual( Stem("hidkaldte"), "hidkald");});
test("hidse -> hids", function() {deepEqual( Stem("hidse"), "hids");});
test("hidser -> hids", function() {deepEqual( Stem("hidser"), "hids");});
test("hidsig -> hids", function() {deepEqual( Stem("hidsig"), "hids");});
test("hidsige -> hids", function() {deepEqual( Stem("hidsige"), "hids");});
test("hidsighed -> hids", function() {deepEqual( Stem("hidsighed"), "hids");});
test("hidtidige -> hidtid", function() {deepEqual( Stem("hidtidige"), "hidtid");});
test("hidtil -> hidtil", function() {deepEqual( Stem("hidtil"), "hidtil");});
test("hiel -> hiel", function() {deepEqual( Stem("hiel"), "hiel");});
test("hier -> hier", function() {deepEqual( Stem("hier"), "hier");});
test("hierapolis -> hierapolis", function() {deepEqual( Stem("hierapolis"), "hierapolis");});
test("hige -> hig", function() {deepEqual( Stem("hige"), "hig");});
test("higede -> higed", function() {deepEqual( Stem("higede"), "higed");});
test("higen -> hig", function() {deepEqual( Stem("higen"), "hig");});
test("higende -> hig", function() {deepEqual( Stem("higende"), "hig");});
test("higer -> hig", function() {deepEqual( Stem("higer"), "hig");});
test("higet -> hig", function() {deepEqual( Stem("higet"), "hig");});
test("higgajon -> higgajon", function() {deepEqual( Stem("higgajon"), "higgajon");});
test("hiiterne -> hiit", function() {deepEqual( Stem("hiiterne"), "hiit");});
test("hil -> hil", function() {deepEqual( Stem("hil"), "hil");});
test("hilde -> hild", function() {deepEqual( Stem("hilde"), "hild");});
test("hildedes -> hilded", function() {deepEqual( Stem("hildedes"), "hilded");});
test("hilder -> hild", function() {deepEqual( Stem("hilder"), "hild");});
test("hildes -> hild", function() {deepEqual( Stem("hildes"), "hild");});
test("hildet -> hild", function() {deepEqual( Stem("hildet"), "hild");});
test("hilen -> hil", function() {deepEqual( Stem("hilen"), "hil");});
test("hiljon -> hiljon", function() {deepEqual( Stem("hiljon"), "hiljon");});
test("hilkija -> hilkija", function() {deepEqual( Stem("hilkija"), "hilkija");});
test("hilkijas -> hilkija", function() {deepEqual( Stem("hilkijas"), "hilkija");});
test("hillels -> hillel", function() {deepEqual( Stem("hillels"), "hillel");});
test("hils -> hil", function() {deepEqual( Stem("hils"), "hil");});
test("hilse -> hils", function() {deepEqual( Stem("hilse"), "hils");});
test("hilsede -> hilsed", function() {deepEqual( Stem("hilsede"), "hilsed");});
test("hilsen -> hils", function() {deepEqual( Stem("hilsen"), "hils");});
test("hilsenen -> hilsen", function() {deepEqual( Stem("hilsenen"), "hilsen");});
test("hilsenerne -> hilsen", function() {deepEqual( Stem("hilsenerne"), "hilsen");});
test("hilsens -> hils", function() {deepEqual( Stem("hilsens"), "hils");});
test("hilser -> hils", function() {deepEqual( Stem("hilser"), "hils");});
test("hilst -> hilst", function() {deepEqual( Stem("hilst"), "hilst");});
test("hilste -> hilst", function() {deepEqual( Stem("hilste"), "hilst");});
test("himle -> himl", function() {deepEqual( Stem("himle"), "himl");});
test("himlen -> himl", function() {deepEqual( Stem("himlen"), "himl");});
test("himlene -> himl", function() {deepEqual( Stem("himlene"), "himl");});
test("himlenes -> himl", function() {deepEqual( Stem("himlenes"), "himl");});
test("himlens -> himl", function() {deepEqual( Stem("himlens"), "himl");});
test("himmel -> himmel", function() {deepEqual( Stem("himmel"), "himmel");});
test("himmelbrød -> himmelbrød", function() {deepEqual( Stem("himmelbrød"), "himmelbrød");});
test("himmelen -> himmel", function() {deepEqual( Stem("himmelen"), "himmel");});
test("himmelens -> himmel", function() {deepEqual( Stem("himmelens"), "himmel");});
test("himmelfaldne -> himmelfaldn", function() {deepEqual( Stem("himmelfaldne"), "himmelfaldn");});
test("himmelgranskerne -> himmelgransk", function() {deepEqual( Stem("himmelgranskerne"), "himmelgransk");});
test("himmelhvælving -> himmelhvælving", function() {deepEqual( Stem("himmelhvælving"), "himmelhvælving");});
test("himmelhvælvingen -> himmelhvælving", function() {deepEqual( Stem("himmelhvælvingen"), "himmelhvælving");});
test("himmelhvælvingens -> himmelhvælving", function() {deepEqual( Stem("himmelhvælvingens"), "himmelhvælving");});
test("himmelhøje -> himmelhøj", function() {deepEqual( Stem("himmelhøje"), "himmelhøj");});
test("himmelhøjt -> himmelhøjt", function() {deepEqual( Stem("himmelhøjt"), "himmelhøjt");});
test("himmelkorn -> himmelkorn", function() {deepEqual( Stem("himmelkorn"), "himmelkorn");});
test("himmellys -> himmelly", function() {deepEqual( Stem("himmellys"), "himmelly");});
test("himmelsk -> himmelsk", function() {deepEqual( Stem("himmelsk"), "himmelsk");});
test("himmelske -> himmelsk", function() {deepEqual( Stem("himmelske"), "himmelsk");});
test("himmelskes -> himmelsk", function() {deepEqual( Stem("himmelskes"), "himmelsk");});
test("himmeriges -> himmer", function() {deepEqual( Stem("himmeriges"), "himmer");});
test("hin -> hin", function() {deepEqual( Stem("hin"), "hin");});
test("hinanden -> hinand", function() {deepEqual( Stem("hinanden"), "hinand");});
test("hinandens -> hinand", function() {deepEqual( Stem("hinandens"), "hinand");});
test("hind -> hind", function() {deepEqual( Stem("hind"), "hind");});
test("hinden -> hind", function() {deepEqual( Stem("hinden"), "hind");});
test("hindenes -> hind", function() {deepEqual( Stem("hindenes"), "hind");});
test("hindens -> hind", function() {deepEqual( Stem("hindens"), "hind");});
test("hindre -> hindr", function() {deepEqual( Stem("hindre"), "hindr");});
test("hindrede -> hindred", function() {deepEqual( Stem("hindrede"), "hindred");});
test("hindredes -> hindred", function() {deepEqual( Stem("hindredes"), "hindred");});
test("hindrer -> hindr", function() {deepEqual( Stem("hindrer"), "hindr");});
test("hindres -> hindr", function() {deepEqual( Stem("hindres"), "hindr");});
test("hindret -> hindr", function() {deepEqual( Stem("hindret"), "hindr");});
test("hindringer -> hindring", function() {deepEqual( Stem("hindringer"), "hindring");});
test("hine -> hin", function() {deepEqual( Stem("hine"), "hin");});
test("hines -> hin", function() {deepEqual( Stem("hines"), "hin");});
test("hingste -> hingst", function() {deepEqual( Stem("hingste"), "hingst");});
test("hingstes -> hingst", function() {deepEqual( Stem("hingstes"), "hingst");});
test("hinmmmmelens -> hinmmmmel", function() {deepEqual( Stem("hinmmmmelens"), "hinmmmmel");});
test("hinnoms -> hinnom", function() {deepEqual( Stem("hinnoms"), "hinnom");});
test("hins -> hin", function() {deepEqual( Stem("hins"), "hin");});
test("hinsides -> hinsid", function() {deepEqual( Stem("hinsides"), "hinsid");});
test("hint -> hint", function() {deepEqual( Stem("hint"), "hint");});
test("hira -> hira", function() {deepEqual( Stem("hira"), "hira");});
test("hiram -> hiram", function() {deepEqual( Stem("hiram"), "hiram");});
test("hirams -> hiram", function() {deepEqual( Stem("hirams"), "hiram");});
test("hirjat -> hirjat", function() {deepEqual( Stem("hirjat"), "hirjat");});
test("hirjatajim -> hirjatajim", function() {deepEqual( Stem("hirjatajim"), "hirjatajim");});
test("hirom -> hirom", function() {deepEqual( Stem("hirom"), "hirom");});
test("hiroms -> hirom", function() {deepEqual( Stem("hiroms"), "hirom");});
test("hirse -> hirs", function() {deepEqual( Stem("hirse"), "hirs");});
test("hist -> hist", function() {deepEqual( Stem("hist"), "hist");});
test("historie -> histori", function() {deepEqual( Stem("historie"), "histori");});
test("hitlisj -> hitlisj", function() {deepEqual( Stem("hitlisj"), "hitlisj");});
test("hiv -> hiv", function() {deepEqual( Stem("hiv"), "hiv");});
test("hivviten -> hivvit", function() {deepEqual( Stem("hivviten"), "hivvit");});
test("hivviter -> hivvit", function() {deepEqual( Stem("hivviter"), "hivvit");});
test("hivviterne -> hivvit", function() {deepEqual( Stem("hivviterne"), "hivvit");});
test("hivviternes -> hivvit", function() {deepEqual( Stem("hivviternes"), "hivvit");});
test("hizki -> hizki", function() {deepEqual( Stem("hizki"), "hizki");});
test("hizkija -> hizkija", function() {deepEqual( Stem("hizkija"), "hizkija");});
test("hjalp -> hjalp", function() {deepEqual( Stem("hjalp"), "hjalp");});
test("hje -> hje", function() {deepEqual( Stem("hje"), "hje");});
test("hjelm -> hjelm", function() {deepEqual( Stem("hjelm"), "hjelm");});
test("hjelme -> hjelm", function() {deepEqual( Stem("hjelme"), "hjelm");});
test("hjelmene -> hjelm", function() {deepEqual( Stem("hjelmene"), "hjelm");});
test("hjem -> hjem", function() {deepEqual( Stem("hjem"), "hjem");});
test("hjemad -> hjemad", function() {deepEqual( Stem("hjemad"), "hjemad");});
test("hjemfalde -> hjemfald", function() {deepEqual( Stem("hjemfalde"), "hjemfald");});
test("hjemfalden -> hjemfald", function() {deepEqual( Stem("hjemfalden"), "hjemfald");});
test("hjemfalder -> hjemfald", function() {deepEqual( Stem("hjemfalder"), "hjemfald");});
test("hjemfaldet -> hjemfald", function() {deepEqual( Stem("hjemfaldet"), "hjemfald");});
test("hjemfaldne -> hjemfaldn", function() {deepEqual( Stem("hjemfaldne"), "hjemfaldn");});
test("hjemfærd -> hjemfærd", function() {deepEqual( Stem("hjemfærd"), "hjemfærd");});
test("hjemføre -> hjemfør", function() {deepEqual( Stem("hjemføre"), "hjemfør");});
test("hjemført -> hjemført", function() {deepEqual( Stem("hjemført"), "hjemført");});
test("hjemførte -> hjemført", function() {deepEqual( Stem("hjemførte"), "hjemført");});
test("hjemkomst -> hjemkomst", function() {deepEqual( Stem("hjemkomst"), "hjemkomst");});
test("hjemløs -> hjemløs", function() {deepEqual( Stem("hjemløs"), "hjemløs");});
test("hjemløse -> hjemløs", function() {deepEqual( Stem("hjemløse"), "hjemløs");});
test("hjemme -> hjem", function() {deepEqual( Stem("hjemme"), "hjem");});
test("hjemmefra -> hjemmefra", function() {deepEqual( Stem("hjemmefra"), "hjemmefra");});
test("hjemmefødt -> hjemmefød", function() {deepEqual( Stem("hjemmefødt"), "hjemmefød");});
test("hjemmefødte -> hjemmefød", function() {deepEqual( Stem("hjemmefødte"), "hjemmefød");});
test("hjemmet -> hjem", function() {deepEqual( Stem("hjemmet"), "hjem");});
test("hjemmets -> hjem", function() {deepEqual( Stem("hjemmets"), "hjem");});
test("hjemstavn -> hjemstavn", function() {deepEqual( Stem("hjemstavn"), "hjemstavn");});
test("hjemstavns -> hjemstavn", function() {deepEqual( Stem("hjemstavns"), "hjemstavn");});
test("hjemsteder -> hjemsted", function() {deepEqual( Stem("hjemsteder"), "hjemsted");});
test("hjemsøg -> hjemsøg", function() {deepEqual( Stem("hjemsøg"), "hjemsøg");});
test("hjemsøge -> hjemsøg", function() {deepEqual( Stem("hjemsøge"), "hjemsøg");});
test("hjemsøgelse -> hjemsøg", function() {deepEqual( Stem("hjemsøgelse"), "hjemsøg");});
test("hjemsøgelsens -> hjemsøg", function() {deepEqual( Stem("hjemsøgelsens"), "hjemsøg");});
test("hjemsøgelses -> hjemsøg", function() {deepEqual( Stem("hjemsøgelses"), "hjemsøg");});
test("hjemsøger -> hjemsøg", function() {deepEqual( Stem("hjemsøger"), "hjemsøg");});
test("hjemsøges -> hjemsøg", function() {deepEqual( Stem("hjemsøges"), "hjemsøg");});
test("hjemsøget -> hjemsøg", function() {deepEqual( Stem("hjemsøget"), "hjemsøg");});
test("hjemsøgt -> hjemsøg", function() {deepEqual( Stem("hjemsøgt"), "hjemsøg");});
test("hjemsøgte -> hjemsøg", function() {deepEqual( Stem("hjemsøgte"), "hjemsøg");});
test("hjemvejen -> hjemvej", function() {deepEqual( Stem("hjemvejen"), "hjemvej");});
test("hjemvendte -> hjemvend", function() {deepEqual( Stem("hjemvendte"), "hjemvend");});
test("hjemvjen -> hjemvj", function() {deepEqual( Stem("hjemvjen"), "hjemvj");});
test("hjerfe -> hjerf", function() {deepEqual( Stem("hjerfe"), "hjerf");});
test("hjerneskal -> hjerneskal", function() {deepEqual( Stem("hjerneskal"), "hjerneskal");});
test("hjerneskallen -> hjerneskal", function() {deepEqual( Stem("hjerneskallen"), "hjerneskal");});
test("hjerte -> hjert", function() {deepEqual( Stem("hjerte"), "hjert");});
test("hjertedybet -> hjertedyb", function() {deepEqual( Stem("hjertedybet"), "hjertedyb");});
test("hjertekval -> hjertekval", function() {deepEqual( Stem("hjertekval"), "hjertekval");});
test("hjertelag -> hjertelag", function() {deepEqual( Stem("hjertelag"), "hjertelag");});
test("hjerteligt -> hjert", function() {deepEqual( Stem("hjerteligt"), "hjert");});
test("hjerteløst -> hjerteløs", function() {deepEqual( Stem("hjerteløst"), "hjerteløs");});
test("hjertens -> hjert", function() {deepEqual( Stem("hjertens"), "hjert");});
test("hjertensglade -> hjertensglad", function() {deepEqual( Stem("hjertensglade"), "hjertensglad");});
test("hjerter -> hjert", function() {deepEqual( Stem("hjerter"), "hjert");});
test("hjerterne -> hjert", function() {deepEqual( Stem("hjerterne"), "hjert");});
test("hjerternes -> hjert", function() {deepEqual( Stem("hjerternes"), "hjert");});
test("hjerters -> hjert", function() {deepEqual( Stem("hjerters"), "hjert");});
test("hjertes -> hjert", function() {deepEqual( Stem("hjertes"), "hjert");});
test("hjerteskærende -> hjerteskær", function() {deepEqual( Stem("hjerteskærende"), "hjerteskær");});
test("hjertesorg -> hjertesorg", function() {deepEqual( Stem("hjertesorg"), "hjertesorg");});
test("hjertesår -> hjertesår", function() {deepEqual( Stem("hjertesår"), "hjertesår");});
test("hjertet -> hjert", function() {deepEqual( Stem("hjertet"), "hjert");});
test("hjertets -> hjert", function() {deepEqual( Stem("hjertets"), "hjert");});
test("hjerteve -> hjertev", function() {deepEqual( Stem("hjerteve"), "hjertev");});
test("hjord -> hjord", function() {deepEqual( Stem("hjord"), "hjord");});
test("hjorde -> hjord", function() {deepEqual( Stem("hjorde"), "hjord");});
test("hjorden -> hjord", function() {deepEqual( Stem("hjorden"), "hjord");});
test("hjordene -> hjord", function() {deepEqual( Stem("hjordene"), "hjord");});
test("hjordenes -> hjord", function() {deepEqual( Stem("hjordenes"), "hjord");});
test("hjordens -> hjord", function() {deepEqual( Stem("hjordens"), "hjord");});
test("hjordes -> hjord", function() {deepEqual( Stem("hjordes"), "hjord");});
test("hjords -> hjord", function() {deepEqual( Stem("hjords"), "hjord");});
test("hjort -> hjort", function() {deepEqual( Stem("hjort"), "hjort");});
test("hjorte -> hjort", function() {deepEqual( Stem("hjorte"), "hjort");});
test("hjortekalve -> hjortekalv", function() {deepEqual( Stem("hjortekalve"), "hjortekalv");});
test("hjorten -> hjort", function() {deepEqual( Stem("hjorten"), "hjort");});
test("hjul -> hjul", function() {deepEqual( Stem("hjul"), "hjul");});
test("hjulene -> hjul", function() {deepEqual( Stem("hjulene"), "hjul");});
test("hjulenes -> hjul", function() {deepEqual( Stem("hjulenes"), "hjul");});
test("hjulpen -> hjulp", function() {deepEqual( Stem("hjulpen"), "hjulp");});
test("hjulpet -> hjulp", function() {deepEqual( Stem("hjulpet"), "hjulp");});
test("hjulpne -> hjulpn", function() {deepEqual( Stem("hjulpne"), "hjulpn");});
test("hjælp -> hjælp", function() {deepEqual( Stem("hjælp"), "hjælp");});
test("hjælpe -> hjælp", function() {deepEqual( Stem("hjælpe"), "hjælp");});
test("hjælpeløses -> hjælpeløs", function() {deepEqual( Stem("hjælpeløses"), "hjælpeløs");});
test("hjælpen -> hjælp", function() {deepEqual( Stem("hjælpen"), "hjælp");});
test("hjælpende -> hjælp", function() {deepEqual( Stem("hjælpende"), "hjælp");});
test("hjælper -> hjælp", function() {deepEqual( Stem("hjælper"), "hjælp");});
test("hjælpere -> hjælp", function() {deepEqual( Stem("hjælpere"), "hjælp");});
test("hjælperen -> hjælp", function() {deepEqual( Stem("hjælperen"), "hjælp");});
test("hjælperske -> hjælpersk", function() {deepEqual( Stem("hjælperske"), "hjælpersk");});
test("hjælpes -> hjælp", function() {deepEqual( Stem("hjælpes"), "hjælp");});
test("hjørne -> hjørn", function() {deepEqual( Stem("hjørne"), "hjørn");});
test("hjørneporten -> hjørneport", function() {deepEqual( Stem("hjørneporten"), "hjørneport");});
test("hjørner -> hjørn", function() {deepEqual( Stem("hjørner"), "hjørn");});
test("hjørnesten -> hjørnest", function() {deepEqual( Stem("hjørnesten"), "hjørnest");});
test("hjørnet -> hjørn", function() {deepEqual( Stem("hjørnet"), "hjørn");});
test("hlandt -> hland", function() {deepEqual( Stem("hlandt"), "hland");});
test("hlippeborgen -> hlippeborg", function() {deepEqual( Stem("hlippeborgen"), "hlippeborg");});
test("hlippen -> hlip", function() {deepEqual( Stem("hlippen"), "hlip");});
test("hliver -> hliv", function() {deepEqual( Stem("hliver"), "hliv");});
test("hnivene -> hniv", function() {deepEqual( Stem("hnivene"), "hniv");});
test("hob -> hob", function() {deepEqual( Stem("hob"), "hob");});
test("hoba -> hoba", function() {deepEqual( Stem("hoba"), "hoba");});
test("hobab -> hobab", function() {deepEqual( Stem("hobab"), "hobab");});
test("hobabs -> hobab", function() {deepEqual( Stem("hobabs"), "hobab");});
test("hobam -> hobam", function() {deepEqual( Stem("hobam"), "hobam");});
test("hobber -> hob", function() {deepEqual( Stem("hobber"), "hob");});
test("hobe -> hob", function() {deepEqual( Stem("hobe"), "hob");});
test("hoben -> hob", function() {deepEqual( Stem("hoben"), "hob");});
test("hober -> hob", function() {deepEqual( Stem("hober"), "hob");});
test("hobetal -> hobetal", function() {deepEqual( Stem("hobetal"), "hobetal");});
test("hobs -> hob", function() {deepEqual( Stem("hobs"), "hob");});
test("hod -> hod", function() {deepEqual( Stem("hod"), "hod");});
test("hodavja -> hodavja", function() {deepEqual( Stem("hodavja"), "hodavja");});
test("hodavjas -> hodavja", function() {deepEqual( Stem("hodavjas"), "hodavja");});
test("hodesj -> hodesj", function() {deepEqual( Stem("hodesj"), "hodesj");});
test("hodija -> hodija", function() {deepEqual( Stem("hodija"), "hodija");});
test("hof -> hof", function() {deepEqual( Stem("hof"), "hof");});
test("hoffets -> hof", function() {deepEqual( Stem("hoffets"), "hof");});
test("hoffolk -> hoffolk", function() {deepEqual( Stem("hoffolk"), "hoffolk");});
test("hoffærdige -> hoffærd", function() {deepEqual( Stem("hoffærdige"), "hoffærd");});
test("hoffærdighed -> hoffærd", function() {deepEqual( Stem("hoffærdighed"), "hoffærd");});
test("hofmand -> hofmand", function() {deepEqual( Stem("hofmand"), "hofmand");});
test("hofmanden -> hofmand", function() {deepEqual( Stem("hofmanden"), "hofmand");});
test("hofmænd -> hofmænd", function() {deepEqual( Stem("hofmænd"), "hofmænd");});
test("hofmændene -> hofmænd", function() {deepEqual( Stem("hofmændene"), "hofmænd");});
test("hofni -> hofni", function() {deepEqual( Stem("hofni"), "hofni");});
test("hofra -> hofra", function() {deepEqual( Stem("hofra"), "hofra");});
test("hofte -> hoft", function() {deepEqual( Stem("hofte"), "hoft");});
test("hoften -> hoft", function() {deepEqual( Stem("hoften"), "hoft");});
test("hoftenerven -> hoftenerv", function() {deepEqual( Stem("hoftenerven"), "hoftenerv");});
test("hofter -> hoft", function() {deepEqual( Stem("hofter"), "hoft");});
test("hofterne -> hoft", function() {deepEqual( Stem("hofterne"), "hoft");});
test("hofternes -> hoft", function() {deepEqual( Stem("hofternes"), "hoft");});
test("hofters -> hoft", function() {deepEqual( Stem("hofters"), "hoft");});
test("hofteskål -> hofteskål", function() {deepEqual( Stem("hofteskål"), "hofteskål");});
test("hofteskålen -> hofteskål", function() {deepEqual( Stem("hofteskålen"), "hofteskål");});
test("hogla -> hogla", function() {deepEqual( Stem("hogla"), "hogla");});
test("hold -> hold", function() {deepEqual( Stem("hold"), "hold");});
test("holde -> hold", function() {deepEqual( Stem("holde"), "hold");});
test("holden -> hold", function() {deepEqual( Stem("holden"), "hold");});
test("holdende -> hold", function() {deepEqual( Stem("holdende"), "hold");});
test("holdent -> holdent", function() {deepEqual( Stem("holdent"), "holdent");});
test("holder -> hold", function() {deepEqual( Stem("holder"), "hold");});
test("holdes -> hold", function() {deepEqual( Stem("holdes"), "hold");});
test("holdt -> hold", function() {deepEqual( Stem("holdt"), "hold");});
test("holdtes -> hold", function() {deepEqual( Stem("holdtes"), "hold");});
test("holon -> holon", function() {deepEqual( Stem("holon"), "holon");});
test("hom -> hom", function() {deepEqual( Stem("hom"), "hom");});
test("homan -> homan", function() {deepEqual( Stem("homan"), "homan");});
test("homedyret -> homedyr", function() {deepEqual( Stem("homedyret"), "homedyr");});
test("homer -> hom", function() {deepEqual( Stem("homer"), "hom");});
test("homers -> hom", function() {deepEqual( Stem("homers"), "hom");});
test("homets -> hom", function() {deepEqual( Stem("homets"), "hom");});
test("honanja -> honanja", function() {deepEqual( Stem("honanja"), "honanja");});
test("hongens -> hong", function() {deepEqual( Stem("hongens"), "hong");});
test("honning -> honning", function() {deepEqual( Stem("honning"), "honning");});
test("honningen -> honning", function() {deepEqual( Stem("honningen"), "honning");});
test("honningkager -> honningkag", function() {deepEqual( Stem("honningkager"), "honningkag");});
test("hoppe -> hop", function() {deepEqual( Stem("hoppe"), "hop");});
test("hopped -> hopped", function() {deepEqual( Stem("hopped"), "hopped");});
test("hopper -> hop", function() {deepEqual( Stem("hopper"), "hop");});
test("hor -> hor", function() {deepEqual( Stem("hor"), "hor");});
test("hora -> hora", function() {deepEqual( Stem("hora"), "hora");});
test("horam -> horam", function() {deepEqual( Stem("horam"), "horam");});
test("horas -> hora", function() {deepEqual( Stem("horas"), "hora");});
test("hore -> hor", function() {deepEqual( Stem("hore"), "hor");});
test("horeb -> horeb", function() {deepEqual( Stem("horeb"), "horeb");});
test("horebs -> horeb", function() {deepEqual( Stem("horebs"), "horeb");});
test("horebørn -> horebørn", function() {deepEqual( Stem("horebørn"), "horebørn");});
test("horede -> hored", function() {deepEqual( Stem("horede"), "hored");});
test("horem -> horem", function() {deepEqual( Stem("horem"), "horem");});
test("horer -> hor", function() {deepEqual( Stem("horer"), "hor");});
test("horeri -> horeri", function() {deepEqual( Stem("horeri"), "horeri");});
test("horesj -> horesj", function() {deepEqual( Stem("horesj"), "horesj");});
test("horet -> hor", function() {deepEqual( Stem("horet"), "hor");});
test("horeånd -> horeånd", function() {deepEqual( Stem("horeånd"), "horeånd");});
test("hori -> hori", function() {deepEqual( Stem("hori"), "hori");});
test("horianderfrø -> horianderfrø", function() {deepEqual( Stem("horianderfrø"), "horianderfrø");});
test("horis -> horis", function() {deepEqual( Stem("horis"), "horis");});
test("horiten -> horit", function() {deepEqual( Stem("horiten"), "horit");});
test("horiterne -> horit", function() {deepEqual( Stem("horiterne"), "horit");});
test("horiternes -> horit", function() {deepEqual( Stem("horiternes"), "horit");});
test("horkarle -> horkarl", function() {deepEqual( Stem("horkarle"), "horkarl");});
test("horkarlen -> horkarl", function() {deepEqual( Stem("horkarlen"), "horkarl");});
test("horkarlens -> horkarl", function() {deepEqual( Stem("horkarlens"), "horkarl");});
test("horkarls -> horkarl", function() {deepEqual( Stem("horkarls"), "horkarl");});
test("horkvinde -> horkvind", function() {deepEqual( Stem("horkvinde"), "horkvind");});
test("horkvinden -> horkvind", function() {deepEqual( Stem("horkvinden"), "horkvind");});
test("horkvinders -> horkvind", function() {deepEqual( Stem("horkvinders"), "horkvind");});
test("horkvindes -> horkvind", function() {deepEqual( Stem("horkvindes"), "horkvind");});
test("horma -> horma", function() {deepEqual( Stem("horma"), "horma");});
test("hormærket -> hormærk", function() {deepEqual( Stem("hormærket"), "hormærk");});
test("horn -> horn", function() {deepEqual( Stem("horn"), "horn");});
test("hornblæseren -> hornblæs", function() {deepEqual( Stem("hornblæseren"), "hornblæs");});
test("hornblæsning -> hornblæsning", function() {deepEqual( Stem("hornblæsning"), "hornblæsning");});
test("hornblæsningsdag -> hornblæsningsdag", function() {deepEqual( Stem("hornblæsningsdag"), "hornblæsningsdag");});
test("hornbrand -> hornbrand", function() {deepEqual( Stem("hornbrand"), "hornbrand");});
test("hornene -> horn", function() {deepEqual( Stem("hornene"), "horn");});
test("hornet -> horn", function() {deepEqual( Stem("hornet"), "horn");});
test("hornets -> horn", function() {deepEqual( Stem("hornets"), "horn");});
test("hornkvæg -> hornkvæg", function() {deepEqual( Stem("hornkvæg"), "hornkvæg");});
test("hornkvæget -> hornkvæg", function() {deepEqual( Stem("hornkvæget"), "hornkvæg");});
test("horns -> horn", function() {deepEqual( Stem("horns"), "horn");});
test("hornuglen -> hornugl", function() {deepEqual( Stem("hornuglen"), "hornugl");});
test("horon -> horon", function() {deepEqual( Stem("horon"), "horon");});
test("horonajim -> horonajim", function() {deepEqual( Stem("horonajim"), "horonajim");});
test("horoniten -> horonit", function() {deepEqual( Stem("horoniten"), "horonit");});
test("horons -> horon", function() {deepEqual( Stem("horons"), "horon");});
test("hors -> hor", function() {deepEqual( Stem("hors"), "hor");});
test("hos -> hos", function() {deepEqual( Stem("hos"), "hos");});
test("hosa -> hosa", function() {deepEqual( Stem("hosa"), "hosa");});
test("hosanna -> hosanna", function() {deepEqual( Stem("hosanna"), "hosanna");});
test("hosas -> hosa", function() {deepEqual( Stem("hosas"), "hosa");});
test("hosea -> hosea", function() {deepEqual( Stem("hosea"), "hosea");});
test("hoseas -> hosea", function() {deepEqual( Stem("hoseas"), "hosea");});
test("hosjaja -> hosjaja", function() {deepEqual( Stem("hosjaja"), "hosjaja");});
test("hosjama -> hosjama", function() {deepEqual( Stem("hosjama"), "hosjama");});
test("hosstående -> hosstå", function() {deepEqual( Stem("hosstående"), "hosstå");});
test("hotam -> hotam", function() {deepEqual( Stem("hotam"), "hotam");});
test("hotams -> hotam", function() {deepEqual( Stem("hotams"), "hotam");});
test("hotir -> hotir", function() {deepEqual( Stem("hotir"), "hotir");});
test("hove -> hov", function() {deepEqual( Stem("hove"), "hov");});
test("hoved -> hoved", function() {deepEqual( Stem("hoved"), "hoved");});
test("hovedbind -> hovedbind", function() {deepEqual( Stem("hovedbind"), "hovedbind");});
test("hovedbindet -> hovedbind", function() {deepEqual( Stem("hovedbindet"), "hovedbind");});
test("hovedbånd -> hovedbånd", function() {deepEqual( Stem("hovedbånd"), "hovedbånd");});
test("hoveder -> hoved", function() {deepEqual( Stem("hoveder"), "hoved");});
test("hovederne -> hoved", function() {deepEqual( Stem("hovederne"), "hoved");});
test("hovedet -> hoved", function() {deepEqual( Stem("hovedet"), "hoved");});
test("hovedets -> hoved", function() {deepEqual( Stem("hovedets"), "hoved");});
test("hovedgærde -> hovedgærd", function() {deepEqual( Stem("hovedgærde"), "hovedgærd");});
test("hovedhjørnesten -> hovedhjørnest", function() {deepEqual( Stem("hovedhjørnesten"), "hovedhjørnest");});
test("hovedhjørnestenen -> hovedhjørnesten", function() {deepEqual( Stem("hovedhjørnestenen"), "hovedhjørnesten");});
test("hovedhår -> hovedhår", function() {deepEqual( Stem("hovedhår"), "hovedhår");});
test("hovedhåret -> hovedhår", function() {deepEqual( Stem("hovedhåret"), "hovedhår");});
test("hovedindholdet -> hovedindhold", function() {deepEqual( Stem("hovedindholdet"), "hovedindhold");});
test("hovedklæde -> hovedklæd", function() {deepEqual( Stem("hovedklæde"), "hovedklæd");});
test("hovedklædet -> hovedklæd", function() {deepEqual( Stem("hovedklædet"), "hovedklæd");});
test("hovedkulds -> hovedkuld", function() {deepEqual( Stem("hovedkulds"), "hovedkuld");});
test("hovedlokker -> hovedlok", function() {deepEqual( Stem("hovedlokker"), "hovedlok");});
test("hovedpude -> hovedpud", function() {deepEqual( Stem("hovedpude"), "hovedpud");});
test("hovedpunktet -> hovedpunk", function() {deepEqual( Stem("hovedpunktet"), "hovedpunk");});
test("hovedragning -> hovedragning", function() {deepEqual( Stem("hovedragning"), "hovedragning");});
test("hovedrig -> hovedr", function() {deepEqual( Stem("hovedrig"), "hovedr");});
test("hoveds -> hoved", function() {deepEqual( Stem("hoveds"), "hoved");});
test("hovedskal -> hovedskal", function() {deepEqual( Stem("hovedskal"), "hovedskal");});
test("hovedskallen -> hovedskal", function() {deepEqual( Stem("hovedskallen"), "hovedskal");});
test("hovedskalsted -> hovedskalsted", function() {deepEqual( Stem("hovedskalsted"), "hovedskalsted");});
test("hovedsmykker -> hovedsmyk", function() {deepEqual( Stem("hovedsmykker"), "hovedsmyk");});
test("hovedstad -> hovedstad", function() {deepEqual( Stem("hovedstad"), "hovedstad");});
test("hovedstaden -> hovedstad", function() {deepEqual( Stem("hovedstaden"), "hovedstad");});
test("hovedstrømme -> hovedstrøm", function() {deepEqual( Stem("hovedstrømme"), "hovedstrøm");});
test("hoven -> hov", function() {deepEqual( Stem("hoven"), "hov");});
test("hovent -> hovent", function() {deepEqual( Stem("hovent"), "hovent");});
test("hoverer -> hov", function() {deepEqual( Stem("hoverer"), "hov");});
test("hoveriarbejde -> hoveriarbejd", function() {deepEqual( Stem("hoveriarbejde"), "hoveriarbejd");});
test("hoveriarbejdere -> hoveriarbejd", function() {deepEqual( Stem("hoveriarbejdere"), "hoveriarbejd");});
test("hoveriarbejderne -> hoveriarbejd", function() {deepEqual( Stem("hoveriarbejderne"), "hoveriarbejd");});
test("hoveriarbejdet -> hoveriarbejd", function() {deepEqual( Stem("hoveriarbejdet"), "hoveriarbejd");});
test("hovmestre -> hovmestr", function() {deepEqual( Stem("hovmestre"), "hovmestr");});
test("hovmod -> hovmod", function() {deepEqual( Stem("hovmod"), "hovmod");});
test("hovmode -> hovmod", function() {deepEqual( Stem("hovmode"), "hovmod");});
test("hovmoded -> hovmoded", function() {deepEqual( Stem("hovmoded"), "hovmoded");});
test("hovmodede -> hovmoded", function() {deepEqual( Stem("hovmodede"), "hovmoded");});
test("hovmoder -> hovmod", function() {deepEqual( Stem("hovmoder"), "hovmod");});
test("hovmodet -> hovmod", function() {deepEqual( Stem("hovmodet"), "hovmod");});
test("hovmodets -> hovmod", function() {deepEqual( Stem("hovmodets"), "hovmod");});
test("hovmodig -> hovmod", function() {deepEqual( Stem("hovmodig"), "hovmod");});
test("hovmodige -> hovmod", function() {deepEqual( Stem("hovmodige"), "hovmod");});
test("hovmodiges -> hovmod", function() {deepEqual( Stem("hovmodiges"), "hovmod");});
test("hovmodigt -> hovmod", function() {deepEqual( Stem("hovmodigt"), "hovmod");});
test("hovmods -> hovmod", function() {deepEqual( Stem("hovmods"), "hovmod");});
test("hovmodsfrugt -> hovmodsfrug", function() {deepEqual( Stem("hovmodsfrugt"), "hovmodsfrug");});
test("hovmodstale -> hovmodstal", function() {deepEqual( Stem("hovmodstale"), "hovmodstal");});
test("hovne -> hovn", function() {deepEqual( Stem("hovne"), "hovn");});
test("hovnede -> hovned", function() {deepEqual( Stem("hovnede"), "hovned");});
test("hovslag -> hovslag", function() {deepEqual( Stem("hovslag"), "hovslag");});
test("hozbi -> hozbi", function() {deepEqual( Stem("hozbi"), "hozbi");});
test("hoze -> hoz", function() {deepEqual( Stem("hoze"), "hoz");});
test("hozes -> hoz", function() {deepEqual( Stem("hozes"), "hoz");});
test("hragte -> hragt", function() {deepEqual( Stem("hragte"), "hragt");});
test("hro -> hro", function() {deepEqual( Stem("hro"), "hro");});
test("hrrens -> hrren", function() {deepEqual( Stem("hrrens"), "hrren");});
test("hrænder -> hrænd", function() {deepEqual( Stem("hrænder"), "hrænd");});
test("hrød -> hrød", function() {deepEqual( Stem("hrød"), "hrød");});
test("hu -> hu", function() {deepEqual( Stem("hu"), "hu");});
test("hubba -> hubba", function() {deepEqual( Stem("hubba"), "hubba");});
test("hud -> hud", function() {deepEqual( Stem("hud"), "hud");});
test("huden -> hud", function() {deepEqual( Stem("huden"), "hud");});
test("hudstryge -> hudstryg", function() {deepEqual( Stem("hudstryge"), "hudstryg");});
test("hudstrygelser -> hudstryg", function() {deepEqual( Stem("hudstrygelser"), "hudstryg");});
test("hudstryges -> hudstryg", function() {deepEqual( Stem("hudstryges"), "hudstryg");});
test("hudstrygning -> hudstrygning", function() {deepEqual( Stem("hudstrygning"), "hudstrygning");});
test("huen -> huen", function() {deepEqual( Stem("huen"), "huen");});
test("huer -> huer", function() {deepEqual( Stem("huer"), "huer");});
test("huerne -> huern", function() {deepEqual( Stem("huerne"), "huern");});
test("hufam -> hufam", function() {deepEqual( Stem("hufam"), "hufam");});
test("hufamiternes -> hufamit", function() {deepEqual( Stem("hufamiternes"), "hufamit");});
test("hug -> hug", function() {deepEqual( Stem("hug"), "hug");});
test("hugge -> hug", function() {deepEqual( Stem("hugge"), "hug");});
test("hugged -> hugged", function() {deepEqual( Stem("hugged"), "hugged");});
test("huggede -> hugged", function() {deepEqual( Stem("huggede"), "hugged");});
test("huggedes -> hugged", function() {deepEqual( Stem("huggedes"), "hugged");});
test("hugger -> hug", function() {deepEqual( Stem("hugger"), "hug");});
test("hugges -> hug", function() {deepEqual( Stem("hugges"), "hug");});
test("hugget -> hug", function() {deepEqual( Stem("hugget"), "hug");});
test("huj -> huj", function() {deepEqual( Stem("huj"), "huj");});
test("hukkok -> hukkok", function() {deepEqual( Stem("hukkok"), "hukkok");});
test("hukok -> hukok", function() {deepEqual( Stem("hukok"), "hukok");});
test("hul -> hul", function() {deepEqual( Stem("hul"), "hul");});
test("huld -> huld", function() {deepEqual( Stem("huld"), "huld");});
test("hulda -> hulda", function() {deepEqual( Stem("hulda"), "hulda");});
test("hulde -> huld", function() {deepEqual( Stem("hulde"), "huld");});
test("hulden -> huld", function() {deepEqual( Stem("hulden"), "huld");});
test("huldet -> huld", function() {deepEqual( Stem("huldet"), "huld");});
test("hule -> hul", function() {deepEqual( Stem("hule"), "hul");});
test("huled -> huled", function() {deepEqual( Stem("huled"), "huled");});
test("hulen -> hul", function() {deepEqual( Stem("hulen"), "hul");});
test("hulens -> hul", function() {deepEqual( Stem("hulens"), "hul");});
test("huler -> hul", function() {deepEqual( Stem("huler"), "hul");});
test("hulerne -> hul", function() {deepEqual( Stem("hulerne"), "hul");});
test("hulkende -> hulk", function() {deepEqual( Stem("hulkende"), "hulk");});
test("huller -> hul", function() {deepEqual( Stem("huller"), "hul");});
test("hullerne -> hul", function() {deepEqual( Stem("hullerne"), "hul");});
test("hullet -> hul", function() {deepEqual( Stem("hullet"), "hul");});
test("hult -> hult", function() {deepEqual( Stem("hult"), "hult");});
test("hulvejen -> hulvej", function() {deepEqual( Stem("hulvejen"), "hulvej");});
test("humta -> humta", function() {deepEqual( Stem("humta"), "humta");});
test("hun -> hun", function() {deepEqual( Stem("hun"), "hun");});
test("hund -> hund", function() {deepEqual( Stem("hund"), "hund");});
test("hunde -> hund", function() {deepEqual( Stem("hunde"), "hund");});
test("hundehoved -> hundehoved", function() {deepEqual( Stem("hundehoved"), "hundehoved");});
test("hundeløn -> hundeløn", function() {deepEqual( Stem("hundeløn"), "hundeløn");});
test("hundemorder -> hundemord", function() {deepEqual( Stem("hundemorder"), "hundemord");});
test("hunden -> hund", function() {deepEqual( Stem("hunden"), "hund");});
test("hundene -> hund", function() {deepEqual( Stem("hundene"), "hund");});
test("hundes -> hund", function() {deepEqual( Stem("hundes"), "hund");});
test("hundred -> hundred", function() {deepEqual( Stem("hundred"), "hundred");});
test("hundrede -> hundred", function() {deepEqual( Stem("hundrede"), "hundred");});
test("hundredeførerne -> hundredefør", function() {deepEqual( Stem("hundredeførerne"), "hundredefør");});
test("hundreder -> hundred", function() {deepEqual( Stem("hundreder"), "hundred");});
test("hundredfold -> hundredfold", function() {deepEqual( Stem("hundredfold"), "hundredfold");});
test("hundredfø -> hundredfø", function() {deepEqual( Stem("hundredfø"), "hundredfø");});
test("hundredførere -> hundredfør", function() {deepEqual( Stem("hundredførere"), "hundredfør");});
test("hundredførerne -> hundredfør", function() {deepEqual( Stem("hundredførerne"), "hundredfør");});
test("hundredvis -> hundredvis", function() {deepEqual( Stem("hundredvis"), "hundredvis");});
test("hundredårig -> hundredår", function() {deepEqual( Stem("hundredårig"), "hundredår");});
test("hundyr -> hundyr", function() {deepEqual( Stem("hundyr"), "hundyr");});
test("hunger -> hung", function() {deepEqual( Stem("hunger"), "hung");});
test("hungeren -> hung", function() {deepEqual( Stem("hungeren"), "hung");});
test("hungerens -> hung", function() {deepEqual( Stem("hungerens"), "hung");});
test("hungersnød -> hungersnød", function() {deepEqual( Stem("hungersnød"), "hungersnød");});
test("hungersnøden -> hungersnød", function() {deepEqual( Stem("hungersnøden"), "hungersnød");});
test("hungersnødens -> hungersnød", function() {deepEqual( Stem("hungersnødens"), "hungersnød");});
test("hungersnøds -> hungersnød", function() {deepEqual( Stem("hungersnøds"), "hungersnød");});
test("hungersnødsår -> hungersnødsår", function() {deepEqual( Stem("hungersnødsår"), "hungersnødsår");});
test("hungre -> hungr", function() {deepEqual( Stem("hungre"), "hungr");});
test("hungred -> hungred", function() {deepEqual( Stem("hungred"), "hungred");});
test("hungrede -> hungred", function() {deepEqual( Stem("hungrede"), "hungred");});
test("hungrer -> hungr", function() {deepEqual( Stem("hungrer"), "hungr");});
test("hungrig -> hungr", function() {deepEqual( Stem("hungrig"), "hungr");});
test("hungrige -> hungr", function() {deepEqual( Stem("hungrige"), "hungr");});
test("hunlam -> hunlam", function() {deepEqual( Stem("hunlam"), "hunlam");});
test("huppa -> huppa", function() {deepEqual( Stem("huppa"), "huppa");});
test("huppim -> huppim", function() {deepEqual( Stem("huppim"), "huppim");});
test("hur -> hur", function() {deepEqual( Stem("hur"), "hur");});
test("huraj -> huraj", function() {deepEqual( Stem("huraj"), "huraj");});
test("huram -> huram", function() {deepEqual( Stem("huram"), "huram");});
test("hurams -> huram", function() {deepEqual( Stem("hurams"), "huram");});
test("hurfig -> hurf", function() {deepEqual( Stem("hurfig"), "hurf");});
test("huri -> huri", function() {deepEqual( Stem("huri"), "huri");});
test("hurs -> hur", function() {deepEqual( Stem("hurs"), "hur");});
test("hurtig -> hurt", function() {deepEqual( Stem("hurtig"), "hurt");});
test("hurtige -> hurt", function() {deepEqual( Stem("hurtige"), "hurt");});
test("hurtigere -> hurt", function() {deepEqual( Stem("hurtigere"), "hurt");});
test("hurtigløberen -> hurtigløb", function() {deepEqual( Stem("hurtigløberen"), "hurtigløb");});
test("hurtigskriverens -> hurtigskriv", function() {deepEqual( Stem("hurtigskriverens"), "hurtigskriv");});
test("hurtigt -> hurt", function() {deepEqual( Stem("hurtigt"), "hurt");});
test("hus -> hus", function() {deepEqual( Stem("hus"), "hus");});
test("husbond -> husbond", function() {deepEqual( Stem("husbond"), "husbond");});
test("husbonden -> husbond", function() {deepEqual( Stem("husbonden"), "husbond");});
test("husbondens -> husbond", function() {deepEqual( Stem("husbondens"), "husbond");});
test("husbonds -> husbond", function() {deepEqual( Stem("husbonds"), "husbond");});
test("husdør -> husdør", function() {deepEqual( Stem("husdør"), "husdør");});
test("husdørene -> husdør", function() {deepEqual( Stem("husdørene"), "husdør");});
test("huse -> hus", function() {deepEqual( Stem("huse"), "hus");});
test("husene -> hus", function() {deepEqual( Stem("husene"), "hus");});
test("huser -> hus", function() {deepEqual( Stem("huser"), "hus");});
test("huses -> hus", function() {deepEqual( Stem("huses"), "hus");});
test("huset -> hus", function() {deepEqual( Stem("huset"), "hus");});
test("husets -> hus", function() {deepEqual( Stem("husets"), "hus");});
test("husfoged -> husfoged", function() {deepEqual( Stem("husfoged"), "husfoged");});
test("husfolk -> husfolk", function() {deepEqual( Stem("husfolk"), "husfolk");});
test("husfolkene -> husfolk", function() {deepEqual( Stem("husfolkene"), "husfolk");});
test("husfolks -> husfolk", function() {deepEqual( Stem("husfolks"), "husfolk");});
test("husfælle -> husfæl", function() {deepEqual( Stem("husfælle"), "husfæl");});
test("husfæller -> husfæl", function() {deepEqual( Stem("husfæller"), "husfæl");});
test("husgud -> husgud", function() {deepEqual( Stem("husgud"), "husgud");});
test("husguden -> husgud", function() {deepEqual( Stem("husguden"), "husgud");});
test("husgudens -> husgud", function() {deepEqual( Stem("husgudens"), "husgud");});
test("husguderne -> husgud", function() {deepEqual( Stem("husguderne"), "husgud");});
test("husholder -> hushold", function() {deepEqual( Stem("husholder"), "hushold");});
test("husholdere -> hushold", function() {deepEqual( Stem("husholdere"), "hushold");});
test("husholderen -> hushold", function() {deepEqual( Stem("husholderen"), "hushold");});
test("husholdning -> husholdning", function() {deepEqual( Stem("husholdning"), "husholdning");});
test("husholdningen -> husholdning", function() {deepEqual( Stem("husholdningen"), "husholdning");});
test("hushovmester -> hushovmest", function() {deepEqual( Stem("hushovmester"), "hushovmest");});
test("husjaj -> husjaj", function() {deepEqual( Stem("husjaj"), "husjaj");});
test("husjajas -> husjaja", function() {deepEqual( Stem("husjajas"), "husjaja");});
test("husjajs -> husjaj", function() {deepEqual( Stem("husjajs"), "husjaj");});
test("husjam -> husjam", function() {deepEqual( Stem("husjam"), "husjam");});
test("husjas -> husja", function() {deepEqual( Stem("husjas"), "husja");});
test("husjatiten -> husjatit", function() {deepEqual( Stem("husjatiten"), "husjatit");});
test("husjim -> husjim", function() {deepEqual( Stem("husjim"), "husjim");});
test("husk -> husk", function() {deepEqual( Stem("husk"), "husk");});
test("huske -> husk", function() {deepEqual( Stem("huske"), "husk");});
test("husker -> husk", function() {deepEqual( Stem("husker"), "husk");});
test("huskes -> husk", function() {deepEqual( Stem("huskes"), "husk");});
test("huslige -> hus", function() {deepEqual( Stem("huslige"), "hus");});
test("huss -> hus", function() {deepEqual( Stem("huss"), "hus");});
test("husstand -> husstand", function() {deepEqual( Stem("husstand"), "husstand");});
test("hustag -> hustag", function() {deepEqual( Stem("hustag"), "hustag");});
test("hustru -> hustru", function() {deepEqual( Stem("hustru"), "hustru");});
test("hustruen -> hustru", function() {deepEqual( Stem("hustruen"), "hustru");});
test("hustruens -> hustru", function() {deepEqual( Stem("hustruens"), "hustru");});
test("hustruer -> hustru", function() {deepEqual( Stem("hustruer"), "hustru");});
test("hustruerne -> hustru", function() {deepEqual( Stem("hustruerne"), "hustru");});
test("hustruernes -> hustru", function() {deepEqual( Stem("hustruernes"), "hustru");});
test("hustruers -> hustru", function() {deepEqual( Stem("hustruers"), "hustru");});
test("hustrus -> hustrus", function() {deepEqual( Stem("hustrus"), "hustrus");});
test("hustræl -> hustræl", function() {deepEqual( Stem("hustræl"), "hustræl");});
test("husvaled -> husvaled", function() {deepEqual( Stem("husvaled"), "husvaled");});
test("husvalende -> husval", function() {deepEqual( Stem("husvalende"), "husval");});
test("husvales -> husval", function() {deepEqual( Stem("husvales"), "husval");});
test("husvild -> husvild", function() {deepEqual( Stem("husvild"), "husvild");});
test("huzot -> huzot", function() {deepEqual( Stem("huzot"), "huzot");});
test("hvad -> hvad", function() {deepEqual( Stem("hvad"), "hvad");});
test("hvas -> hvas", function() {deepEqual( Stem("hvas"), "hvas");});
test("hvassen -> hvas", function() {deepEqual( Stem("hvassen"), "hvas");});
test("hvede -> hved", function() {deepEqual( Stem("hvede"), "hved");});
test("hvedebrød -> hvedebrød", function() {deepEqual( Stem("hvedebrød"), "hvedebrød");});
test("hvededynge -> hvededyng", function() {deepEqual( Stem("hvededynge"), "hvededyng");});
test("hvedehøst -> hvedehøst", function() {deepEqual( Stem("hvedehøst"), "hvedehøst");});
test("hvedehøsten -> hvedehøst", function() {deepEqual( Stem("hvedehøsten"), "hvedehøst");});
test("hvedehøstens -> hvedehøst", function() {deepEqual( Stem("hvedehøstens"), "hvedehøst");});
test("hvedekornet -> hvedekorn", function() {deepEqual( Stem("hvedekornet"), "hvedekorn");});
test("hvedemel -> hvedemel", function() {deepEqual( Stem("hvedemel"), "hvedemel");});
test("hvedemelet -> hvedemel", function() {deepEqual( Stem("hvedemelet"), "hvedemel");});
test("hveden -> hved", function() {deepEqual( Stem("hveden"), "hved");});
test("hvedens -> hved", function() {deepEqual( Stem("hvedens"), "hved");});
test("hvem -> hvem", function() {deepEqual( Stem("hvem"), "hvem");});
test("hver -> hver", function() {deepEqual( Stem("hver"), "hver");});
test("hverandre -> hverandr", function() {deepEqual( Stem("hverandre"), "hverandr");});
test("hverandres -> hverandr", function() {deepEqual( Stem("hverandres"), "hverandr");});
test("hverdage -> hverdag", function() {deepEqual( Stem("hverdage"), "hverdag");});
test("hvergang -> hvergang", function() {deepEqual( Stem("hvergang"), "hvergang");});
test("hverken -> hverk", function() {deepEqual( Stem("hverken"), "hverk");});
test("hvers -> hver", function() {deepEqual( Stem("hvers"), "hver");});
test("hvert -> hvert", function() {deepEqual( Stem("hvert"), "hvert");});
test("hverttredje -> hverttredj", function() {deepEqual( Stem("hverttredje"), "hverttredj");});
test("hverv -> hverv", function() {deepEqual( Stem("hverv"), "hverv");});
test("hvervet -> hverv", function() {deepEqual( Stem("hvervet"), "hverv");});
test("hvi -> hvi", function() {deepEqual( Stem("hvi"), "hvi");});
test("hvid -> hvid", function() {deepEqual( Stem("hvid"), "hvid");});
test("hvide -> hvid", function() {deepEqual( Stem("hvide"), "hvid");});
test("hvidere -> hvid", function() {deepEqual( Stem("hvidere"), "hvid");});
test("hvidløgene -> hvidløg", function() {deepEqual( Stem("hvidløgene"), "hvidløg");});
test("hvidpopler -> hvidpopl", function() {deepEqual( Stem("hvidpopler"), "hvidpopl");});
test("hvidt -> hvidt", function() {deepEqual( Stem("hvidt"), "hvidt");});
test("hvie -> hvie", function() {deepEqual( Stem("hvie"), "hvie");});
test("hvier -> hvier", function() {deepEqual( Stem("hvier"), "hvier");});
test("hvil -> hvil", function() {deepEqual( Stem("hvil"), "hvil");});
test("hvile -> hvil", function() {deepEqual( Stem("hvile"), "hvil");});
test("hviled -> hviled", function() {deepEqual( Stem("hviled"), "hviled");});
test("hviledag -> hviledag", function() {deepEqual( Stem("hviledag"), "hviledag");});
test("hviledagen -> hviledag", function() {deepEqual( Stem("hviledagen"), "hviledag");});
test("hvilede -> hviled", function() {deepEqual( Stem("hvilede"), "hviled");});
test("hvileløst -> hvileløs", function() {deepEqual( Stem("hvileløst"), "hvileløs");});
test("hvilen -> hvil", function() {deepEqual( Stem("hvilen"), "hvil");});
test("hvilende -> hvil", function() {deepEqual( Stem("hvilende"), "hvil");});
test("hvilens -> hvil", function() {deepEqual( Stem("hvilens"), "hvil");});
test("hviler -> hvil", function() {deepEqual( Stem("hviler"), "hvil");});
test("hviles -> hvil", function() {deepEqual( Stem("hviles"), "hvil");});
test("hvilested -> hvilested", function() {deepEqual( Stem("hvilested"), "hvilested");});
test("hvilet -> hvil", function() {deepEqual( Stem("hvilet"), "hvil");});
test("hvilke -> hvilk", function() {deepEqual( Stem("hvilke"), "hvilk");});
test("hvilken -> hvilk", function() {deepEqual( Stem("hvilken"), "hvilk");});
test("hvilket -> hvilk", function() {deepEqual( Stem("hvilket"), "hvilk");});
test("hvirvelvind -> hvirvelvind", function() {deepEqual( Stem("hvirvelvind"), "hvirvelvind");});
test("hvirvlende -> hvirvl", function() {deepEqual( Stem("hvirvlende"), "hvirvl");});
test("hvirvler -> hvirvl", function() {deepEqual( Stem("hvirvler"), "hvirvl");});
test("hvis -> hvis", function() {deepEqual( Stem("hvis"), "hvis");});
test("hviske -> hvisk", function() {deepEqual( Stem("hviske"), "hvisk");});
test("hviskede -> hvisked", function() {deepEqual( Stem("hviskede"), "hvisked");});
test("hvisken -> hvisk", function() {deepEqual( Stem("hvisken"), "hvisk");});
test("hviskende -> hvisk", function() {deepEqual( Stem("hviskende"), "hvisk");});
test("hvisker -> hvisk", function() {deepEqual( Stem("hvisker"), "hvisk");});
test("hvislende -> hvisl", function() {deepEqual( Stem("hvislende"), "hvisl");});
test("hvo -> hvo", function() {deepEqual( Stem("hvo"), "hvo");});
test("hvor -> hvor", function() {deepEqual( Stem("hvor"), "hvor");});
test("hvoraf -> hvoraf", function() {deepEqual( Stem("hvoraf"), "hvoraf");});
test("hvordan -> hvordan", function() {deepEqual( Stem("hvordan"), "hvordan");});
test("hvorefter -> hvoreft", function() {deepEqual( Stem("hvorefter"), "hvoreft");});
test("hvorfor -> hvorfor", function() {deepEqual( Stem("hvorfor"), "hvorfor");});
test("hvorfra -> hvorfra", function() {deepEqual( Stem("hvorfra"), "hvorfra");});
test("hvorhen -> hvorh", function() {deepEqual( Stem("hvorhen"), "hvorh");});
test("hvori -> hvori", function() {deepEqual( Stem("hvori"), "hvori");});
test("hvorimod -> hvorimod", function() {deepEqual( Stem("hvorimod"), "hvorimod");});
test("hvorledes -> hvorled", function() {deepEqual( Stem("hvorledes"), "hvorled");});
test("hvormed -> hvormed", function() {deepEqual( Stem("hvormed"), "hvormed");});
test("hvornår -> hvornår", function() {deepEqual( Stem("hvornår"), "hvornår");});
test("hvorom -> hvorom", function() {deepEqual( Stem("hvorom"), "hvorom");});
test("hvorpå -> hvorpå", function() {deepEqual( Stem("hvorpå"), "hvorpå");});
test("hvortil -> hvortil", function() {deepEqual( Stem("hvortil"), "hvortil");});
test("hvorved -> hvorved", function() {deepEqual( Stem("hvorved"), "hvorved");});
test("hvorvidt -> hvorvid", function() {deepEqual( Stem("hvorvidt"), "hvorvid");});
test("hvælv -> hvælv", function() {deepEqual( Stem("hvælv"), "hvælv");});
test("hvælver -> hvælv", function() {deepEqual( Stem("hvælver"), "hvælv");});
test("hvælving -> hvælving", function() {deepEqual( Stem("hvælving"), "hvælving");});
test("hvælvingen -> hvælving", function() {deepEqual( Stem("hvælvingen"), "hvælving");});
test("hvæs -> hvæs", function() {deepEqual( Stem("hvæs"), "hvæs");});
test("hvæsse -> hvæs", function() {deepEqual( Stem("hvæsse"), "hvæs");});
test("hvæssede -> hvæssed", function() {deepEqual( Stem("hvæssede"), "hvæssed");});
test("hvæsser -> hvæs", function() {deepEqual( Stem("hvæsser"), "hvæs");});
test("hvæsses -> hvæs", function() {deepEqual( Stem("hvæsses"), "hvæs");});
test("hvæsset -> hvæs", function() {deepEqual( Stem("hvæsset"), "hvæs");});
test("hyacint -> hyacint", function() {deepEqual( Stem("hyacint"), "hyacint");});
test("hyklede -> hykled", function() {deepEqual( Stem("hyklede"), "hykled");});
test("hykler -> hykl", function() {deepEqual( Stem("hykler"), "hykl");});
test("hyklere -> hykl", function() {deepEqual( Stem("hyklere"), "hykl");});
test("hykleri -> hykleri", function() {deepEqual( Stem("hykleri"), "hykleri");});
test("hyklerisk -> hyklerisk", function() {deepEqual( Stem("hyklerisk"), "hyklerisk");});
test("hyklerne -> hykl", function() {deepEqual( Stem("hyklerne"), "hykl");});
test("hyklersk -> hyklersk", function() {deepEqual( Stem("hyklersk"), "hyklersk");});
test("hyl -> hyl", function() {deepEqual( Stem("hyl"), "hyl");});
test("hyld -> hyld", function() {deepEqual( Stem("hyld"), "hyld");});
test("hylde -> hyld", function() {deepEqual( Stem("hylde"), "hyld");});
test("hylded -> hylded", function() {deepEqual( Stem("hylded"), "hylded");});
test("hyldede -> hylded", function() {deepEqual( Stem("hyldede"), "hylded");});
test("hylder -> hyld", function() {deepEqual( Stem("hylder"), "hyld");});
test("hyldes -> hyld", function() {deepEqual( Stem("hyldes"), "hyld");});
test("hyldest -> hyldest", function() {deepEqual( Stem("hyldest"), "hyldest");});
test("hyldingsgave -> hyldingsgav", function() {deepEqual( Stem("hyldingsgave"), "hyldingsgav");});
test("hyle -> hyl", function() {deepEqual( Stem("hyle"), "hyl");});
test("hylede -> hyled", function() {deepEqual( Stem("hylede"), "hyled");});
test("hyler -> hyl", function() {deepEqual( Stem("hyler"), "hyl");});
test("hylet -> hyl", function() {deepEqual( Stem("hylet"), "hyl");});
test("hylled -> hylled", function() {deepEqual( Stem("hylled"), "hylled");});
test("hyllede -> hylled", function() {deepEqual( Stem("hyllede"), "hylled");});
test("hylledes -> hylled", function() {deepEqual( Stem("hylledes"), "hylled");});
test("hyller -> hyl", function() {deepEqual( Stem("hyller"), "hyl");});
test("hylles -> hyl", function() {deepEqual( Stem("hylles"), "hyl");});
test("hyllet -> hyl", function() {deepEqual( Stem("hyllet"), "hyl");});
test("hymenæus -> hymenæus", function() {deepEqual( Stem("hymenæus"), "hymenæus");});
test("hynde -> hynd", function() {deepEqual( Stem("hynde"), "hynd");});
test("hynder -> hynd", function() {deepEqual( Stem("hynder"), "hynd");});
test("hyppigt -> hyp", function() {deepEqual( Stem("hyppigt"), "hyp");});
test("hyrd -> hyrd", function() {deepEqual( Stem("hyrd"), "hyrd");});
test("hyrde -> hyrd", function() {deepEqual( Stem("hyrde"), "hyrd");});
test("hyrdehunde -> hyrdehund", function() {deepEqual( Stem("hyrdehunde"), "hyrdehund");});
test("hyrdeme -> hyrdem", function() {deepEqual( Stem("hyrdeme"), "hyrdem");});
test("hyrden -> hyrd", function() {deepEqual( Stem("hyrden"), "hyrd");});
test("hyrder -> hyrd", function() {deepEqual( Stem("hyrder"), "hyrd");});
test("hyrderne -> hyrd", function() {deepEqual( Stem("hyrderne"), "hyrd");});
test("hyrdernes -> hyrd", function() {deepEqual( Stem("hyrdernes"), "hyrd");});
test("hyrdes -> hyrd", function() {deepEqual( Stem("hyrdes"), "hyrd");});
test("hyrdestav -> hyrdestav", function() {deepEqual( Stem("hyrdestav"), "hyrdestav");});
test("hyrdetaske -> hyrdetask", function() {deepEqual( Stem("hyrdetaske"), "hyrdetask");});
test("hyrdetårn -> hyrdetårn", function() {deepEqual( Stem("hyrdetårn"), "hyrdetårn");});
test("hyre -> hyr", function() {deepEqual( Stem("hyre"), "hyr");});
test("hytte -> hyt", function() {deepEqual( Stem("hytte"), "hyt");});
test("hytten -> hyt", function() {deepEqual( Stem("hytten"), "hyt");});
test("hytter -> hyt", function() {deepEqual( Stem("hytter"), "hyt");});
test("hyæner -> hyæn", function() {deepEqual( Stem("hyæner"), "hyæn");});
test("håb -> håb", function() {deepEqual( Stem("håb"), "håb");});
test("håbarim -> håbarim", function() {deepEqual( Stem("håbarim"), "håbarim");});
test("håbe -> håb", function() {deepEqual( Stem("håbe"), "håb");});
test("håbed -> håbed", function() {deepEqual( Stem("håbed"), "håbed");});
test("håbede -> håbed", function() {deepEqual( Stem("håbede"), "håbed");});
test("håber -> håb", function() {deepEqual( Stem("håber"), "håb");});
test("håbes -> håb", function() {deepEqual( Stem("håbes"), "håb");});
test("håbet -> håb", function() {deepEqual( Stem("håbet"), "håb");});
test("håbets -> håb", function() {deepEqual( Stem("håbets"), "håb");});
test("håbs -> håb", function() {deepEqual( Stem("håbs"), "håb");});
test("håd -> håd", function() {deepEqual( Stem("håd"), "håd");});
test("hån -> hån", function() {deepEqual( Stem("hån"), "hån");});
test("hånd -> hånd", function() {deepEqual( Stem("hånd"), "hånd");});
test("hånde -> hånd", function() {deepEqual( Stem("hånde"), "hånd");});
test("hånden -> hånd", function() {deepEqual( Stem("hånden"), "hånd");});
test("håndfaste -> håndfast", function() {deepEqual( Stem("håndfaste"), "håndfast");});
test("håndfuld -> håndfuld", function() {deepEqual( Stem("håndfuld"), "håndfuld");});
test("håndfulde -> håndfuld", function() {deepEqual( Stem("håndfulde"), "håndfuld");});
test("håndgangne -> håndgangn", function() {deepEqual( Stem("håndgangne"), "håndgangn");});
test("håndgribelig -> håndgrib", function() {deepEqual( Stem("håndgribelig"), "håndgrib");});
test("håndkværn -> håndkværn", function() {deepEqual( Stem("håndkværn"), "håndkværn");});
test("håndkværne -> håndkværn", function() {deepEqual( Stem("håndkværne"), "håndkværn");});
test("håndkværnen -> håndkværn", function() {deepEqual( Stem("håndkværnen"), "håndkværn");});
test("håndled -> håndled", function() {deepEqual( Stem("håndled"), "håndled");});
test("håndpant -> håndpant", function() {deepEqual( Stem("håndpant"), "håndpant");});
test("håndpauke -> håndpauk", function() {deepEqual( Stem("håndpauke"), "håndpauk");});
test("håndpaukens -> håndpauk", function() {deepEqual( Stem("håndpaukens"), "håndpauk");});
test("håndpauker -> håndpauk", function() {deepEqual( Stem("håndpauker"), "håndpauk");});
test("hånds -> hånd", function() {deepEqual( Stem("hånds"), "hånd");});
test("håndsbred -> håndsbred", function() {deepEqual( Stem("håndsbred"), "håndsbred");});
test("håndsbredder -> håndsbred", function() {deepEqual( Stem("håndsbredder"), "håndsbred");});
test("håndslag -> håndslag", function() {deepEqual( Stem("håndslag"), "håndslag");});
test("håndspålæggelse -> håndspålæg", function() {deepEqual( Stem("håndspålæggelse"), "håndspålæg");});
test("håndstave -> håndstav", function() {deepEqual( Stem("håndstave"), "håndstav");});
test("håndtag -> håndtag", function() {deepEqual( Stem("håndtag"), "håndtag");});
test("håndtering -> håndtering", function() {deepEqual( Stem("håndtering"), "håndtering");});
test("håndværk -> håndværk", function() {deepEqual( Stem("håndværk"), "håndværk");});
test("håndværker -> håndværk", function() {deepEqual( Stem("håndværker"), "håndværk");});
test("håndværkerdalen -> håndværkerdal", function() {deepEqual( Stem("håndværkerdalen"), "håndværkerdal");});
test("håndværkere -> håndværk", function() {deepEqual( Stem("håndværkere"), "håndværk");});
test("håndværkerhænder -> håndværkerhænd", function() {deepEqual( Stem("håndværkerhænder"), "håndværkerhænd");});
test("håndværkerne -> håndværk", function() {deepEqual( Stem("håndværkerne"), "håndværk");});
test("håndværkernes -> håndværk", function() {deepEqual( Stem("håndværkernes"), "håndværk");});
test("håndværkers -> håndværk", function() {deepEqual( Stem("håndværkers"), "håndværk");});
test("håndværksmester -> håndværksmest", function() {deepEqual( Stem("håndværksmester"), "håndværksmest");});
test("håne -> hån", function() {deepEqual( Stem("håne"), "hån");});
test("håned -> håned", function() {deepEqual( Stem("håned"), "håned");});
test("hånede -> håned", function() {deepEqual( Stem("hånede"), "håned");});
test("hånen -> hån", function() {deepEqual( Stem("hånen"), "hån");});
test("hånende -> hån", function() {deepEqual( Stem("hånende"), "hån");});
test("håner -> hån", function() {deepEqual( Stem("håner"), "hån");});
test("hånes -> hån", function() {deepEqual( Stem("hånes"), "hån");});
test("hånet -> hån", function() {deepEqual( Stem("hånet"), "hån");});
test("hånfløjte -> hånfløjt", function() {deepEqual( Stem("hånfløjte"), "hånfløjt");});
test("hånfløjted -> hånfløjted", function() {deepEqual( Stem("hånfløjted"), "hånfløjted");});
test("hånfløjter -> hånfløjt", function() {deepEqual( Stem("hånfløjter"), "hånfløjt");});
test("hånligt -> hån", function() {deepEqual( Stem("hånligt"), "hån");});
test("hånsang -> hånsang", function() {deepEqual( Stem("hånsang"), "hånsang");});
test("hånt -> hånt", function() {deepEqual( Stem("hånt"), "hånt");});
test("hår -> hår", function() {deepEqual( Stem("hår"), "hår");});
test("hård -> hård", function() {deepEqual( Stem("hård"), "hård");});
test("hårde -> hård", function() {deepEqual( Stem("hårde"), "hård");});
test("hårdelig -> hård", function() {deepEqual( Stem("hårdelig"), "hård");});
test("hården -> hård", function() {deepEqual( Stem("hården"), "hård");});
test("hårdere -> hård", function() {deepEqual( Stem("hårdere"), "hård");});
test("hårdest -> hårdest", function() {deepEqual( Stem("hårdest"), "hårdest");});
test("hårdhed -> hård", function() {deepEqual( Stem("hårdhed"), "hård");});
test("hårdheds -> hård", function() {deepEqual( Stem("hårdheds"), "hård");});
test("hårdhjertet -> hårdhjert", function() {deepEqual( Stem("hårdhjertet"), "hårdhjert");});
test("hårdt -> hård", function() {deepEqual( Stem("hårdt"), "hård");});
test("hårede -> håred", function() {deepEqual( Stem("hårede"), "håred");});
test("hårene -> hår", function() {deepEqual( Stem("hårene"), "hår");});
test("håret -> hår", function() {deepEqual( Stem("håret"), "hår");});
test("hårfletning -> hårfletning", function() {deepEqual( Stem("hårfletning"), "hårfletning");});
test("hårsalve -> hårsalv", function() {deepEqual( Stem("hårsalve"), "hårsalv");});
test("hårsæk -> hårsæk", function() {deepEqual( Stem("hårsæk"), "hårsæk");});
test("håvde -> håvd", function() {deepEqual( Stem("håvde"), "håvd");});
test("hæder -> hæd", function() {deepEqual( Stem("hæder"), "hæd");});
test("hæderskrans -> hæderskran", function() {deepEqual( Stem("hæderskrans"), "hæderskran");});
test("hædersmand -> hædersmand", function() {deepEqual( Stem("hædersmand"), "hædersmand");});
test("hædre -> hædr", function() {deepEqual( Stem("hædre"), "hædr");});
test("hædrede -> hædred", function() {deepEqual( Stem("hædrede"), "hædred");});
test("hædrende -> hædr", function() {deepEqual( Stem("hædrende"), "hædr");});
test("hædrer -> hædr", function() {deepEqual( Stem("hædrer"), "hædr");});
test("hædres -> hædr", function() {deepEqual( Stem("hædres"), "hædr");});
test("hædret -> hædr", function() {deepEqual( Stem("hædret"), "hædr");});
test("hæfte -> hæft", function() {deepEqual( Stem("hæfte"), "hæft");});
test("hæftes -> hæft", function() {deepEqual( Stem("hæftes"), "hæft");});
test("hæftet -> hæft", function() {deepEqual( Stem("hæftet"), "hæft");});
test("hæl -> hæl", function() {deepEqual( Stem("hæl"), "hæl");});
test("hæld -> hæld", function() {deepEqual( Stem("hæld"), "hæld");});
test("hælde -> hæld", function() {deepEqual( Stem("hælde"), "hæld");});
test("hældede -> hælded", function() {deepEqual( Stem("hældede"), "hælded");});
test("hældende -> hæld", function() {deepEqual( Stem("hældende"), "hæld");});
test("hælder -> hæld", function() {deepEqual( Stem("hælder"), "hæld");});
test("hældes -> hæld", function() {deepEqual( Stem("hældes"), "hæld");});
test("hældt -> hæld", function() {deepEqual( Stem("hældt"), "hæld");});
test("hældte -> hæld", function() {deepEqual( Stem("hældte"), "hæld");});
test("hældtes -> hæld", function() {deepEqual( Stem("hældtes"), "hæld");});
test("hæle -> hæl", function() {deepEqual( Stem("hæle"), "hæl");});
test("hælen -> hæl", function() {deepEqual( Stem("hælen"), "hæl");});
test("hælene -> hæl", function() {deepEqual( Stem("hælene"), "hæl");});
test("hæleren -> hæl", function() {deepEqual( Stem("hæleren"), "hæl");});
test("hælvt -> hælvt", function() {deepEqual( Stem("hælvt"), "hælvt");});
test("hælvten -> hælvt", function() {deepEqual( Stem("hælvten"), "hælvt");});
test("hæmmes -> hæm", function() {deepEqual( Stem("hæmmes"), "hæm");});
test("hænde -> hænd", function() {deepEqual( Stem("hænde"), "hænd");});
test("hændelse -> hænd", function() {deepEqual( Stem("hændelse"), "hænd");});
test("hænder -> hænd", function() {deepEqual( Stem("hænder"), "hænd");});
test("hænderne -> hænd", function() {deepEqual( Stem("hænderne"), "hænd");});
test("hændernes -> hænd", function() {deepEqual( Stem("hændernes"), "hænd");});
test("hænders -> hænd", function() {deepEqual( Stem("hænders"), "hænd");});
test("hændes -> hænd", function() {deepEqual( Stem("hændes"), "hænd");});
test("hændet -> hænd", function() {deepEqual( Stem("hændet"), "hænd");});
test("hændt -> hænd", function() {deepEqual( Stem("hændt"), "hænd");});
test("hændte -> hænd", function() {deepEqual( Stem("hændte"), "hænd");});
test("hændtes -> hænd", function() {deepEqual( Stem("hændtes"), "hænd");});
test("hæng -> hæng", function() {deepEqual( Stem("hæng"), "hæng");});
test("hænge -> hæng", function() {deepEqual( Stem("hænge"), "hæng");});
test("hængende -> hæng", function() {deepEqual( Stem("hængende"), "hæng");});
test("hænger -> hæng", function() {deepEqual( Stem("hænger"), "hæng");});
test("hænges -> hæng", function() {deepEqual( Stem("hænges"), "hæng");});
test("hængsel -> hængsel", function() {deepEqual( Stem("hængsel"), "hængsel");});
test("hængsler -> hængsl", function() {deepEqual( Stem("hængsler"), "hængsl");});
test("hængslerne -> hængsl", function() {deepEqual( Stem("hængslerne"), "hængsl");});
test("hængt -> hæng", function() {deepEqual( Stem("hængt"), "hæng");});
test("hængte -> hæng", function() {deepEqual( Stem("hængte"), "hæng");});
test("hængtes -> hæng", function() {deepEqual( Stem("hængtes"), "hæng");});
test("hær -> hær", function() {deepEqual( Stem("hær"), "hær");});
test("hærafdeling -> hærafdeling", function() {deepEqual( Stem("hærafdeling"), "hærafdeling");});
test("hære -> hær", function() {deepEqual( Stem("hære"), "hær");});
test("hæren -> hær", function() {deepEqual( Stem("hæren"), "hær");});
test("hærene -> hær", function() {deepEqual( Stem("hærene"), "hær");});
test("hærenes -> hær", function() {deepEqual( Stem("hærenes"), "hær");});
test("hærens -> hær", function() {deepEqual( Stem("hærens"), "hær");});
test("hærfuglen -> hærfugl", function() {deepEqual( Stem("hærfuglen"), "hærfugl");});
test("hærfølge -> hærfølg", function() {deepEqual( Stem("hærfølge"), "hærfølg");});
test("hærføreme -> hærførem", function() {deepEqual( Stem("hærføreme"), "hærførem");});
test("hærfører -> hærfør", function() {deepEqual( Stem("hærfører"), "hærfør");});
test("hærførere -> hærfør", function() {deepEqual( Stem("hærførere"), "hærfør");});
test("hærføreren -> hærfør", function() {deepEqual( Stem("hærføreren"), "hærfør");});
test("hærførerene -> hærfører", function() {deepEqual( Stem("hærførerene"), "hærfører");});
test("hærførerens -> hærfør", function() {deepEqual( Stem("hærførerens"), "hærfør");});
test("hærførerne -> hærfør", function() {deepEqual( Stem("hærførerne"), "hærfør");});
test("hærge -> hærg", function() {deepEqual( Stem("hærge"), "hærg");});
test("hærgede -> hærged", function() {deepEqual( Stem("hærgede"), "hærged");});
test("hærgedes -> hærged", function() {deepEqual( Stem("hærgedes"), "hærged");});
test("hærgende -> hærg", function() {deepEqual( Stem("hærgende"), "hærg");});
test("hærger -> hærg", function() {deepEqual( Stem("hærger"), "hærg");});
test("hærgeren -> hærg", function() {deepEqual( Stem("hærgeren"), "hærg");});
test("hærges -> hærg", function() {deepEqual( Stem("hærges"), "hærg");});
test("hærget -> hærg", function() {deepEqual( Stem("hærget"), "hærg");});
test("hærlighed -> hær", function() {deepEqual( Stem("hærlighed"), "hær");});
test("hærmagt -> hærmag", function() {deepEqual( Stem("hærmagt"), "hærmag");});
test("hærmænd -> hærmænd", function() {deepEqual( Stem("hærmænd"), "hærmænd");});
test("hærs -> hær", function() {deepEqual( Stem("hærs"), "hær");});
test("hærskare -> hærskar", function() {deepEqual( Stem("hærskare"), "hærskar");});
test("hærskarer -> hærskar", function() {deepEqual( Stem("hærskarer"), "hærskar");});
test("hærskarers -> hærskar", function() {deepEqual( Stem("hærskarers"), "hærskar");});
test("hærskares -> hærskar", function() {deepEqual( Stem("hærskares"), "hærskar");});
test("hærstyrke -> hærstyrk", function() {deepEqual( Stem("hærstyrke"), "hærstyrk");});
test("hærtørere -> hærtør", function() {deepEqual( Stem("hærtørere"), "hærtør");});
test("hærværk -> hærværk", function() {deepEqual( Stem("hærværk"), "hærværk");});
test("hærværksmand -> hærværksmand", function() {deepEqual( Stem("hærværksmand"), "hærværksmand");});
test("hærværksmanden -> hærværksmand", function() {deepEqual( Stem("hærværksmanden"), "hærværksmand");});
test("hærværksmænd -> hærværksmænd", function() {deepEqual( Stem("hærværksmænd"), "hærværksmænd");});
test("hævd -> hævd", function() {deepEqual( Stem("hævd"), "hævd");});
test("hævde -> hævd", function() {deepEqual( Stem("hævde"), "hævd");});
test("hævded -> hævded", function() {deepEqual( Stem("hævded"), "hævded");});
test("hævdede -> hævded", function() {deepEqual( Stem("hævdede"), "hævded");});
test("hævder -> hævd", function() {deepEqual( Stem("hævder"), "hævd");});
test("hæve -> hæv", function() {deepEqual( Stem("hæve"), "hæv");});
test("hævede -> hæved", function() {deepEqual( Stem("hævede"), "hæved");});
test("hævedes -> hæved", function() {deepEqual( Stem("hævedes"), "hæved");});
test("hævelse -> hæv", function() {deepEqual( Stem("hævelse"), "hæv");});
test("hævelsen -> hæv", function() {deepEqual( Stem("hævelsen"), "hæv");});
test("hævelser -> hæv", function() {deepEqual( Stem("hævelser"), "hæv");});
test("hævet -> hæv", function() {deepEqual( Stem("hævet"), "hæv");});
test("hævn -> hævn", function() {deepEqual( Stem("hævn"), "hævn");});
test("hævndag -> hævndag", function() {deepEqual( Stem("hævndag"), "hævndag");});
test("hævne -> hævn", function() {deepEqual( Stem("hævne"), "hævn");});
test("hævnede -> hævned", function() {deepEqual( Stem("hævnede"), "hævned");});
test("hævnen -> hævn", function() {deepEqual( Stem("hævnen"), "hævn");});
test("hævnens -> hævn", function() {deepEqual( Stem("hævnens"), "hævn");});
test("hævner -> hævn", function() {deepEqual( Stem("hævner"), "hævn");});
test("hævnes -> hævn", function() {deepEqual( Stem("hævnes"), "hævn");});
test("hævnet -> hævn", function() {deepEqual( Stem("hævnet"), "hævn");});
test("hævngerriges -> hævnger", function() {deepEqual( Stem("hævngerriges"), "hævnger");});
test("hævngerrigt -> hævnger", function() {deepEqual( Stem("hævngerrigt"), "hævnger");});
test("hævnlyst -> hævnlyst", function() {deepEqual( Stem("hævnlyst"), "hævnlyst");});
test("hø -> hø", function() {deepEqual( Stem("hø"), "hø");});
test("høge -> høg", function() {deepEqual( Stem("høge"), "høg");});
test("høgelsestoffer -> høgelsestof", function() {deepEqual( Stem("høgelsestoffer"), "høgelsestof");});
test("høj -> høj", function() {deepEqual( Stem("høj"), "høj");});
test("højbåren -> højbår", function() {deepEqual( Stem("højbåren"), "højbår");});
test("højde -> højd", function() {deepEqual( Stem("højde"), "højd");});
test("højdedrag -> højdedrag", function() {deepEqual( Stem("højdedrag"), "højdedrag");});
test("højdedraget -> højdedrag", function() {deepEqual( Stem("højdedraget"), "højdedrag");});
test("højden -> højd", function() {deepEqual( Stem("højden"), "højd");});
test("højder -> højd", function() {deepEqual( Stem("højder"), "højd");});
test("højderne -> højd", function() {deepEqual( Stem("højderne"), "højd");});
test("højderyg -> højderyg", function() {deepEqual( Stem("højderyg"), "højderyg");});
test("høje -> høj", function() {deepEqual( Stem("høje"), "høj");});
test("højen -> høj", function() {deepEqual( Stem("højen"), "høj");});
test("højene -> høj", function() {deepEqual( Stem("højene"), "høj");});
test("højenes -> høj", function() {deepEqual( Stem("højenes"), "høj");});
test("højere -> høj", function() {deepEqual( Stem("højere"), "høj");});
test("højereliggende -> højerelig", function() {deepEqual( Stem("højereliggende"), "højerelig");});
test("højes -> høj", function() {deepEqual( Stem("højes"), "høj");});
test("højeste -> højest", function() {deepEqual( Stem("højeste"), "højest");});
test("højestes -> højest", function() {deepEqual( Stem("højestes"), "højest");});
test("højfjeldet -> højfjeld", function() {deepEqual( Stem("højfjeldet"), "højfjeld");});
test("højhed -> høj", function() {deepEqual( Stem("højhed"), "høj");});
test("højhedens -> høj", function() {deepEqual( Stem("højhedens"), "høj");});
test("højheds -> høj", function() {deepEqual( Stem("højheds"), "høj");});
test("højhellig -> højhel", function() {deepEqual( Stem("højhellig"), "højhel");});
test("højhellige -> højhel", function() {deepEqual( Stem("højhellige"), "højhel");});
test("højhelligt -> højhel", function() {deepEqual( Stem("højhelligt"), "højhel");});
test("højland -> højland", function() {deepEqual( Stem("højland"), "højland");});
test("højlig -> høj", function() {deepEqual( Stem("højlig"), "høj");});
test("højlige -> høj", function() {deepEqual( Stem("højlige"), "høj");});
test("højligen -> høj", function() {deepEqual( Stem("højligen"), "høj");});
test("højligt -> høj", function() {deepEqual( Stem("højligt"), "høj");});
test("højlovede -> højloved", function() {deepEqual( Stem("højlovede"), "højloved");});
test("højlovedes -> højloved", function() {deepEqual( Stem("højlovedes"), "højloved");});
test("højlovet -> højlov", function() {deepEqual( Stem("højlovet"), "højlov");});
test("højlydt -> højlyd", function() {deepEqual( Stem("højlydt"), "højlyd");});
test("højlys -> højly", function() {deepEqual( Stem("højlys"), "højly");});
test("højne -> højn", function() {deepEqual( Stem("højne"), "højn");});
test("højner -> højn", function() {deepEqual( Stem("højner"), "højn");});
test("højnes -> højn", function() {deepEqual( Stem("højnes"), "højn");});
test("højnet -> højn", function() {deepEqual( Stem("højnet"), "højn");});
test("højre -> højr", function() {deepEqual( Stem("højre"), "højr");});
test("højres -> højr", function() {deepEqual( Stem("højres"), "højr");});
test("højrøde -> højrød", function() {deepEqual( Stem("højrøde"), "højrød");});
test("højrøstede -> højrøsted", function() {deepEqual( Stem("højrøstede"), "højrøsted");});
test("højsal -> højsal", function() {deepEqual( Stem("højsal"), "højsal");});
test("højsang -> højsang", function() {deepEqual( Stem("højsang"), "højsang");});
test("højsangen -> højsang", function() {deepEqual( Stem("højsangen"), "højsang");});
test("højsindet -> højsind", function() {deepEqual( Stem("højsindet"), "højsind");});
test("højskov -> højskov", function() {deepEqual( Stem("højskov"), "højskov");});
test("højslette -> højslet", function() {deepEqual( Stem("højslette"), "højslet");});
test("højslettelandet -> højsletteland", function() {deepEqual( Stem("højslettelandet"), "højsletteland");});
test("højsletten -> højslet", function() {deepEqual( Stem("højsletten"), "højslet");});
test("højsæde -> højsæd", function() {deepEqual( Stem("højsæde"), "højsæd");});
test("højsædet -> højsæd", function() {deepEqual( Stem("højsædet"), "højsæd");});
test("højt -> højt", function() {deepEqual( Stem("højt"), "højt");});
test("højtid -> højtid", function() {deepEqual( Stem("højtid"), "højtid");});
test("højtidelig -> højtid", function() {deepEqual( Stem("højtidelig"), "højtid");});
test("højtideligholde -> højtidelighold", function() {deepEqual( Stem("højtideligholde"), "højtidelighold");});
test("højtiden -> højtid", function() {deepEqual( Stem("højtiden"), "højtid");});
test("højtidens -> højtid", function() {deepEqual( Stem("højtidens"), "højtid");});
test("højtider -> højtid", function() {deepEqual( Stem("højtider"), "højtid");});
test("højtiderne -> højtid", function() {deepEqual( Stem("højtiderne"), "højtid");});
test("højtiders -> højtid", function() {deepEqual( Stem("højtiders"), "højtid");});
test("højtids -> højtid", function() {deepEqual( Stem("højtids"), "højtid");});
test("højtidsdag -> højtidsdag", function() {deepEqual( Stem("højtidsdag"), "højtidsdag");});
test("højtidsdage -> højtidsdag", function() {deepEqual( Stem("højtidsdage"), "højtidsdag");});
test("højtidsdagen -> højtidsdag", function() {deepEqual( Stem("højtidsdagen"), "højtidsdag");});
test("højtidsgæster -> højtidsgæst", function() {deepEqual( Stem("højtidsgæster"), "højtidsgæst");});
test("højtidsklæder -> højtidsklæd", function() {deepEqual( Stem("højtidsklæder"), "højtidsklæd");});
test("højtidspragt -> højtidsprag", function() {deepEqual( Stem("højtidspragt"), "højtidsprag");});
test("højtidsrejser -> højtidsrejs", function() {deepEqual( Stem("højtidsrejser"), "højtidsrejs");});
test("højtidsskare -> højtidsskar", function() {deepEqual( Stem("højtidsskare"), "højtidsskar");});
test("højtidsskaren -> højtidsskar", function() {deepEqual( Stem("højtidsskaren"), "højtidsskar");});
test("højtidsskrud -> højtidsskrud", function() {deepEqual( Stem("højtidsskrud"), "højtidsskrud");});
test("højtidsstævne -> højtidsstævn", function() {deepEqual( Stem("højtidsstævne"), "højtidsstævn");});
test("højtidsstævner -> højtidsstævn", function() {deepEqual( Stem("højtidsstævner"), "højtidsstævn");});
test("højtidstog -> højtidstog", function() {deepEqual( Stem("højtidstog"), "højtidstog");});
test("højtsatte -> højtsat", function() {deepEqual( Stem("højtsatte"), "højtsat");});
test("højtstående -> højtstå", function() {deepEqual( Stem("højtstående"), "højtstå");});
test("højtæret -> højtær", function() {deepEqual( Stem("højtæret"), "højtær");});
test("højvej -> højvej", function() {deepEqual( Stem("højvej"), "højvej");});
test("højvejen -> højvej", function() {deepEqual( Stem("højvejen"), "højvej");});
test("højvoksne -> højvoksn", function() {deepEqual( Stem("højvoksne"), "højvoksn");});
test("høne -> høn", function() {deepEqual( Stem("høne"), "høn");});
test("hør -> hør", function() {deepEqual( Stem("hør"), "hør");});
test("høre -> hør", function() {deepEqual( Stem("høre"), "hør");});
test("hørelse -> hør", function() {deepEqual( Stem("hørelse"), "hør");});
test("hørelsen -> hør", function() {deepEqual( Stem("hørelsen"), "hør");});
test("hørende -> hør", function() {deepEqual( Stem("hørende"), "hør");});
test("hørendes -> hør", function() {deepEqual( Stem("hørendes"), "hør");});
test("hører -> hør", function() {deepEqual( Stem("hører"), "hør");});
test("hørere -> hør", function() {deepEqual( Stem("hørere"), "hør");});
test("høres -> hør", function() {deepEqual( Stem("høres"), "hør");});
test("hørfes -> hørf", function() {deepEqual( Stem("hørfes"), "hørf");});
test("hørgarnssnor -> hørgarnssnor", function() {deepEqual( Stem("hørgarnssnor"), "hørgarnssnor");});
test("hørren -> hør", function() {deepEqual( Stem("hørren"), "hør");});
test("hørstænglerne -> hørstængl", function() {deepEqual( Stem("hørstænglerne"), "hørstængl");});
test("hørt -> hørt", function() {deepEqual( Stem("hørt"), "hørt");});
test("hørte -> hørt", function() {deepEqual( Stem("hørte"), "hørt");});
test("hørtes -> hørt", function() {deepEqual( Stem("hørtes"), "hørt");});
test("høst -> høst", function() {deepEqual( Stem("høst"), "høst");});
test("høste -> høst", function() {deepEqual( Stem("høste"), "høst");});
test("høstede -> høsted", function() {deepEqual( Stem("høstede"), "høsted");});
test("høsten -> høst", function() {deepEqual( Stem("høsten"), "høst");});
test("høstens -> høst", function() {deepEqual( Stem("høstens"), "høst");});
test("høster -> høst", function() {deepEqual( Stem("høster"), "høst");});
test("høstes -> høst", function() {deepEqual( Stem("høstes"), "høst");});
test("høstet -> høst", function() {deepEqual( Stem("høstet"), "høst");});
test("høstfolkene -> høstfolk", function() {deepEqual( Stem("høstfolkene"), "høstfolk");});
test("høstfolkenes -> høstfolk", function() {deepEqual( Stem("høstfolkenes"), "høstfolk");});
test("høstjubel -> høstjubel", function() {deepEqual( Stem("høstjubel"), "høstjubel");});
test("høstkarlen -> høstkarl", function() {deepEqual( Stem("høstkarlen"), "høstkarl");});
test("høstkarlens -> høstkarl", function() {deepEqual( Stem("høstkarlens"), "høstkarl");});
test("høstmand -> høstmand", function() {deepEqual( Stem("høstmand"), "høstmand");});
test("høstmanden -> høstmand", function() {deepEqual( Stem("høstmanden"), "høstmand");});
test("høstmænd -> høstmænd", function() {deepEqual( Stem("høstmænd"), "høstmænd");});
test("høsttiden -> høsttid", function() {deepEqual( Stem("høsttiden"), "høsttid");});
test("høvding -> høvding", function() {deepEqual( Stem("høvding"), "høvding");});
test("høvdingen -> høvding", function() {deepEqual( Stem("høvdingen"), "høvding");});
test("høvdinger -> høvding", function() {deepEqual( Stem("høvdinger"), "høvding");});
test("høvdingerne -> høvding", function() {deepEqual( Stem("høvdingerne"), "høvding");});
test("høvdingeroe -> høvdingero", function() {deepEqual( Stem("høvdingeroe"), "høvdingero");});
test("høvdingers -> høvding", function() {deepEqual( Stem("høvdingers"), "høvding");});
test("høvdings -> høvding", function() {deepEqual( Stem("høvdings"), "høvding");});
test("høvedsmand -> høvedsmand", function() {deepEqual( Stem("høvedsmand"), "høvedsmand");});
test("høvedsmanden -> høvedsmand", function() {deepEqual( Stem("høvedsmanden"), "høvedsmand");});
test("høvedsmands -> høvedsmand", function() {deepEqual( Stem("høvedsmands"), "høvedsmand");});
test("høvedsmænd -> høvedsmænd", function() {deepEqual( Stem("høvedsmænd"), "høvedsmænd");});
test("høvedsmændene -> høvedsmænd", function() {deepEqual( Stem("høvedsmændene"), "høvedsmænd");});
test("høvisk -> høvisk", function() {deepEqual( Stem("høvisk"), "høvisk");});
test("i -> i", function() {deepEqual( Stem("i"), "i");});
test("iagttage -> iagttag", function() {deepEqual( Stem("iagttage"), "iagttag");});
test("iagttages -> iagttag", function() {deepEqual( Stem("iagttages"), "iagttag");});
test("iagttaget -> iagttag", function() {deepEqual( Stem("iagttaget"), "iagttag");});
test("iagttog -> iagttog", function() {deepEqual( Stem("iagttog"), "iagttog");});
test("ianoa -> ianoa", function() {deepEqual( Stem("ianoa"), "ianoa");});
test("ibaghold -> ibaghold", function() {deepEqual( Stem("ibaghold"), "ibaghold");});
test("ibenholt -> ibenholt", function() {deepEqual( Stem("ibenholt"), "ibenholt");});
test("ibjel -> ibjel", function() {deepEqual( Stem("ibjel"), "ibjel");});
test("iblandt -> ibland", function() {deepEqual( Stem("iblandt"), "ibland");});
test("ibri -> ibri", function() {deepEqual( Stem("ibri"), "ibri");});
test("ibzan -> ibzan", function() {deepEqual( Stem("ibzan"), "ibzan");});
test("id -> id", function() {deepEqual( Stem("id"), "id");});
test("iddo -> iddo", function() {deepEqual( Stem("iddo"), "iddo");});
test("iddos -> iddo", function() {deepEqual( Stem("iddos"), "iddo");});
test("idel -> idel", function() {deepEqual( Stem("idel"), "idel");});
test("idelige -> ide", function() {deepEqual( Stem("idelige"), "ide");});
test("ideres -> ider", function() {deepEqual( Stem("ideres"), "ider");});
test("idet -> idet", function() {deepEqual( Stem("idet"), "idet");});
test("idræt -> idræt", function() {deepEqual( Stem("idræt"), "idræt");});
test("idrætter -> idræt", function() {deepEqual( Stem("idrætter"), "idræt");});
test("idt -> idt", function() {deepEqual( Stem("idt"), "idt");});
test("idtage -> idtag", function() {deepEqual( Stem("idtage"), "idtag");});
test("idumæa -> idumæa", function() {deepEqual( Stem("idumæa"), "idumæa");});
test("idømmes -> idøm", function() {deepEqual( Stem("idømmes"), "idøm");});
test("iel -> iel", function() {deepEqual( Stem("iel"), "iel");});
test("ifølge -> ifølg", function() {deepEqual( Stem("ifølge"), "ifølg");});
test("ifør -> ifør", function() {deepEqual( Stem("ifør"), "ifør");});
test("iføre -> ifør", function() {deepEqual( Stem("iføre"), "ifør");});
test("ifører -> ifør", function() {deepEqual( Stem("ifører"), "ifør");});
test("iføres -> ifør", function() {deepEqual( Stem("iføres"), "ifør");});
test("iført -> iført", function() {deepEqual( Stem("iført"), "iført");});
test("iførte -> iført", function() {deepEqual( Stem("iførte"), "iført");});
test("igen -> igen", function() {deepEqual( Stem("igen"), "igen");});
test("igenfødelsen -> igenfød", function() {deepEqual( Stem("igenfødelsen"), "igenfød");});
test("igenfødelsens -> igenfød", function() {deepEqual( Stem("igenfødelsens"), "igenfød");});
test("igennem -> igennem", function() {deepEqual( Stem("igennem"), "igennem");});
test("ihjel -> ihjel", function() {deepEqual( Stem("ihjel"), "ihjel");});
test("ihjelslagne -> ihjelslagn", function() {deepEqual( Stem("ihjelslagne"), "ihjelslagn");});
test("ihjelslagnemænd -> ihjelslagnemænd", function() {deepEqual( Stem("ihjelslagnemænd"), "ihjelslagnemænd");});
test("ihjelslagnes -> ihjelslagn", function() {deepEqual( Stem("ihjelslagnes"), "ihjelslagn");});
test("ihjelslog -> ihjelslog", function() {deepEqual( Stem("ihjelslog"), "ihjelslog");});
test("ihjelsloge -> ihjelslog", function() {deepEqual( Stem("ihjelsloge"), "ihjelslog");});
test("ihjelslå -> ihjelslå", function() {deepEqual( Stem("ihjelslå"), "ihjelslå");});
test("ihjelslåede -> ihjelslåed", function() {deepEqual( Stem("ihjelslåede"), "ihjelslåed");});
test("ihjelslået -> ihjelslå", function() {deepEqual( Stem("ihjelslået"), "ihjelslå");});
test("ihjelslår -> ihjelslår", function() {deepEqual( Stem("ihjelslår"), "ihjelslår");});
test("ihjelslås -> ihjelslå", function() {deepEqual( Stem("ihjelslås"), "ihjelslå");});
test("ihukom -> ihukom", function() {deepEqual( Stem("ihukom"), "ihukom");});
test("ihukomme -> ihukom", function() {deepEqual( Stem("ihukomme"), "ihukom");});
test("ihukommede -> ihukommed", function() {deepEqual( Stem("ihukommede"), "ihukommed");});
test("ihukommelse -> ihukom", function() {deepEqual( Stem("ihukommelse"), "ihukom");});
test("ihukommer -> ihukom", function() {deepEqual( Stem("ihukommer"), "ihukom");});
test("ihukommes -> ihukom", function() {deepEqual( Stem("ihukommes"), "ihukom");});
test("ihvorvel -> ihvorvel", function() {deepEqual( Stem("ihvorvel"), "ihvorvel");});
test("ihærdigt -> ihærd", function() {deepEqual( Stem("ihærdigt"), "ihærd");});
test("iilisternes -> iilist", function() {deepEqual( Stem("iilisternes"), "iilist");});
test("ijje -> ijj", function() {deepEqual( Stem("ijje"), "ijj");});
test("ijjim -> ijjim", function() {deepEqual( Stem("ijjim"), "ijjim");});
test("ijjon -> ijjon", function() {deepEqual( Stem("ijjon"), "ijjon");});
test("ikabod -> ikabod", function() {deepEqual( Stem("ikabod"), "ikabod");});
test("ikke -> ikk", function() {deepEqual( Stem("ikke"), "ikk");});
test("ikkesj -> ikkesj", function() {deepEqual( Stem("ikkesj"), "ikkesj");});
test("ikkesjs -> ikkesj", function() {deepEqual( Stem("ikkesjs"), "ikkesj");});
test("ikkun -> ikkun", function() {deepEqual( Stem("ikkun"), "ikkun");});
test("iklæder -> iklæd", function() {deepEqual( Stem("iklæder"), "iklæd");});
test("iklædt -> iklæd", function() {deepEqual( Stem("iklædt"), "iklæd");});
test("iklædte -> iklæd", function() {deepEqual( Stem("iklædte"), "iklæd");});
test("ikonium -> ikonium", function() {deepEqual( Stem("ikonium"), "ikonium");});
test("il -> il", function() {deepEqual( Stem("il"), "il");});
test("ila -> ila", function() {deepEqual( Stem("ila"), "ila");});
test("ilaj -> ilaj", function() {deepEqual( Stem("ilaj"), "ilaj");});
test("ilas -> ila", function() {deepEqual( Stem("ilas"), "ila");});
test("ilbud -> ilbud", function() {deepEqual( Stem("ilbud"), "ilbud");});
test("ilbudene -> ilbud", function() {deepEqual( Stem("ilbudene"), "ilbud");});
test("ild -> ild", function() {deepEqual( Stem("ild"), "ild");});
test("ilde -> ild", function() {deepEqual( Stem("ilde"), "ild");});
test("ilden -> ild", function() {deepEqual( Stem("ilden"), "ild");});
test("ildens -> ild", function() {deepEqual( Stem("ildens"), "ild");});
test("ildesindede -> ildesinded", function() {deepEqual( Stem("ildesindede"), "ildesinded");});
test("ildesindet -> ildesind", function() {deepEqual( Stem("ildesindet"), "ildesind");});
test("ildfakler -> ildfakl", function() {deepEqual( Stem("ildfakler"), "ildfakl");});
test("ildfang -> ildfang", function() {deepEqual( Stem("ildfang"), "ildfang");});
test("ildgløder -> ildglød", function() {deepEqual( Stem("ildgløder"), "ildglød");});
test("ildgnister -> ildgnist", function() {deepEqual( Stem("ildgnister"), "ildgnist");});
test("ildgryde -> ildgryd", function() {deepEqual( Stem("ildgryde"), "ildgryd");});
test("ildheste -> ildhest", function() {deepEqual( Stem("ildheste"), "ildhest");});
test("ildmur -> ildmur", function() {deepEqual( Stem("ildmur"), "ildmur");});
test("ildoffer -> ildof", function() {deepEqual( Stem("ildoffer"), "ildof");});
test("ildoffergave -> ildoffergav", function() {deepEqual( Stem("ildoffergave"), "ildoffergav");});
test("ildofferspise -> ildofferspis", function() {deepEqual( Stem("ildofferspise"), "ildofferspis");});
test("ildofre -> ildofr", function() {deepEqual( Stem("ildofre"), "ildofr");});
test("ildovnen -> ildovn", function() {deepEqual( Stem("ildovnen"), "ildovn");});
test("ildrød -> ildrød", function() {deepEqual( Stem("ildrød"), "ildrød");});
test("ildrøde -> ildrød", function() {deepEqual( Stem("ildrøde"), "ildrød");});
test("ilds -> ild", function() {deepEqual( Stem("ilds"), "ild");});
test("ildskær -> ildskær", function() {deepEqual( Stem("ildskær"), "ildskær");});
test("ildskæret -> ildskær", function() {deepEqual( Stem("ildskæret"), "ildskær");});
test("ildslue -> ildslu", function() {deepEqual( Stem("ildslue"), "ildslu");});
test("ildsluefra -> ildsluefra", function() {deepEqual( Stem("ildsluefra"), "ildsluefra");});
test("ildsluer -> ildslu", function() {deepEqual( Stem("ildsluer"), "ildslu");});
test("ildsteder -> ildsted", function() {deepEqual( Stem("ildsteder"), "ildsted");});
test("ildstedet -> ildsted", function() {deepEqual( Stem("ildstedet"), "ildsted");});
test("ildstøtte -> ildstøt", function() {deepEqual( Stem("ildstøtte"), "ildstøt");});
test("ildstøtten -> ildstøt", function() {deepEqual( Stem("ildstøtten"), "ildstøt");});
test("ildsøen -> ildsø", function() {deepEqual( Stem("ildsøen"), "ildsø");});
test("ildsøjler -> ildsøjl", function() {deepEqual( Stem("ildsøjler"), "ildsøjl");});
test("ildvogne -> ildvogn", function() {deepEqual( Stem("ildvogne"), "ildvogn");});
test("ile -> ile", function() {deepEqual( Stem("ile"), "ile");});
test("ilede -> iled", function() {deepEqual( Stem("ilede"), "iled");});
test("ilende -> ilend", function() {deepEqual( Stem("ilende"), "ilend");});
test("iler -> iler", function() {deepEqual( Stem("iler"), "iler");});
test("ilet -> ilet", function() {deepEqual( Stem("ilet"), "ilet");});
test("illyrien -> illyri", function() {deepEqual( Stem("illyrien"), "illyri");});
test("ilsomme -> ilsom", function() {deepEqual( Stem("ilsomme"), "ilsom");});
test("im -> im", function() {deepEqual( Stem("im"), "im");});
test("imedens -> imed", function() {deepEqual( Stem("imedens"), "imed");});
test("imellem -> imellem", function() {deepEqual( Stem("imellem"), "imellem");});
test("imens -> imen", function() {deepEqual( Stem("imens"), "imen");});
test("imidlertid -> imidlertid", function() {deepEqual( Stem("imidlertid"), "imidlertid");});
test("immanuel -> immanuel", function() {deepEqual( Stem("immanuel"), "immanuel");});
test("immer -> imm", function() {deepEqual( Stem("immer"), "imm");});
test("immers -> imm", function() {deepEqual( Stem("immers"), "imm");});
test("imod -> imod", function() {deepEqual( Stem("imod"), "imod");});
test("imodham -> imodham", function() {deepEqual( Stem("imodham"), "imodham");});
test("imodsiges -> imods", function() {deepEqual( Stem("imodsiges"), "imods");});
test("imri -> imri", function() {deepEqual( Stem("imri"), "imri");});
test("imris -> imris", function() {deepEqual( Stem("imris"), "imris");});
test("ind -> ind", function() {deepEqual( Stem("ind"), "ind");});
test("indad -> indad", function() {deepEqual( Stem("indad"), "indad");});
test("indadtil -> indadtil", function() {deepEqual( Stem("indadtil"), "indadtil");});
test("indbragt -> indbrag", function() {deepEqual( Stem("indbragt"), "indbrag");});
test("indbrud -> indbrud", function() {deepEqual( Stem("indbrud"), "indbrud");});
test("indbudne -> indbudn", function() {deepEqual( Stem("indbudne"), "indbudn");});
test("indbudt -> indbud", function() {deepEqual( Stem("indbudt"), "indbud");});
test("indbyd -> indbyd", function() {deepEqual( Stem("indbyd"), "indbyd");});
test("indbyde -> indbyd", function() {deepEqual( Stem("indbyde"), "indbyd");});
test("indbyder -> indbyd", function() {deepEqual( Stem("indbyder"), "indbyd");});
test("indbyg -> indbyg", function() {deepEqual( Stem("indbyg"), "indbyg");});
test("indbygere -> indbyg", function() {deepEqual( Stem("indbygere"), "indbyg");});
test("indbygger -> indbyg", function() {deepEqual( Stem("indbygger"), "indbyg");});
test("indbyggere -> indbyg", function() {deepEqual( Stem("indbyggere"), "indbyg");});
test("indbyggeres -> indbyg", function() {deepEqual( Stem("indbyggeres"), "indbyg");});
test("indbyggerne -> indbyg", function() {deepEqual( Stem("indbyggerne"), "indbyg");});
test("indbyggernes -> indbyg", function() {deepEqual( Stem("indbyggernes"), "indbyg");});
test("indbyrdes -> indbyrd", function() {deepEqual( Stem("indbyrdes"), "indbyrd");});
test("indbød -> indbød", function() {deepEqual( Stem("indbød"), "indbød");});
test("inddelte -> inddelt", function() {deepEqual( Stem("inddelte"), "inddelt");});
test("inddrev -> inddrev", function() {deepEqual( Stem("inddrev"), "inddrev");});
test("inddrevne -> inddrevn", function() {deepEqual( Stem("inddrevne"), "inddrevn");});
test("inddrikker -> inddrik", function() {deepEqual( Stem("inddrikker"), "inddrik");});
test("inde -> ind", function() {deepEqual( Stem("inde"), "ind");});
test("indefter -> indeft", function() {deepEqual( Stem("indefter"), "indeft");});
test("indeholdt -> indehold", function() {deepEqual( Stem("indeholdt"), "indehold");});
test("indelukkede -> indelukked", function() {deepEqual( Stem("indelukkede"), "indelukked");});
test("inden -> ind", function() {deepEqual( Stem("inden"), "ind");});
test("indenfor -> indenfor", function() {deepEqual( Stem("indenfor"), "indenfor");});
test("indeni -> indeni", function() {deepEqual( Stem("indeni"), "indeni");});
test("indenunder -> indenund", function() {deepEqual( Stem("indenunder"), "indenund");});
test("inderdørene -> inderdør", function() {deepEqual( Stem("inderdørene"), "inderdør");});
test("inderhal -> inderhal", function() {deepEqual( Stem("inderhal"), "inderhal");});
test("inderhallen -> inderhal", function() {deepEqual( Stem("inderhallen"), "inderhal");});
test("inderhallens -> inderhal", function() {deepEqual( Stem("inderhallens"), "inderhal");});
test("inderlig -> inder", function() {deepEqual( Stem("inderlig"), "inder");});
test("inderlige -> inder", function() {deepEqual( Stem("inderlige"), "inder");});
test("inderligere -> inder", function() {deepEqual( Stem("inderligere"), "inder");});
test("inderligt -> inder", function() {deepEqual( Stem("inderligt"), "inder");});
test("indersiden -> indersid", function() {deepEqual( Stem("indersiden"), "indersid");});
test("inderst -> inderst", function() {deepEqual( Stem("inderst"), "inderst");});
test("inderste -> inderst", function() {deepEqual( Stem("inderste"), "inderst");});
test("indervæggen -> indervæg", function() {deepEqual( Stem("indervæggen"), "indervæg");});
test("inderværelset -> indervær", function() {deepEqual( Stem("inderværelset"), "indervær");});
test("indesluttede -> indeslutted", function() {deepEqual( Stem("indesluttede"), "indeslutted");});
test("indesluttet -> indeslut", function() {deepEqual( Stem("indesluttet"), "indeslut");});
test("indespærrede -> indespærred", function() {deepEqual( Stem("indespærrede"), "indespærred");});
test("indespærret -> indespær", function() {deepEqual( Stem("indespærret"), "indespær");});
test("indestår -> indestår", function() {deepEqual( Stem("indestår"), "indestår");});
test("indestængt -> indestæng", function() {deepEqual( Stem("indestængt"), "indestæng");});
test("indfage -> indfag", function() {deepEqual( Stem("indfage"), "indfag");});
test("indfaget -> indfag", function() {deepEqual( Stem("indfaget"), "indfag");});
test("indfald -> indfald", function() {deepEqual( Stem("indfald"), "indfald");});
test("indfandt -> indfand", function() {deepEqual( Stem("indfandt"), "indfand");});
test("indfanger -> indfang", function() {deepEqual( Stem("indfanger"), "indfang");});
test("indfatning -> indfatning", function() {deepEqual( Stem("indfatning"), "indfatning");});
test("indfatningen -> indfatning", function() {deepEqual( Stem("indfatningen"), "indfatning");});
test("indfatninger -> indfatning", function() {deepEqual( Stem("indfatninger"), "indfatning");});
test("indfatningssten -> indfatningsst", function() {deepEqual( Stem("indfatningssten"), "indfatningsst");});
test("indfatte -> indfat", function() {deepEqual( Stem("indfatte"), "indfat");});
test("indfattede -> indfatted", function() {deepEqual( Stem("indfattede"), "indfatted");});
test("indfattet -> indfat", function() {deepEqual( Stem("indfattet"), "indfat");});
test("indfind -> indfind", function() {deepEqual( Stem("indfind"), "indfind");});
test("indfinde -> indfind", function() {deepEqual( Stem("indfinde"), "indfind");});
test("indfri -> indfri", function() {deepEqual( Stem("indfri"), "indfri");});
test("indfrier -> indfri", function() {deepEqual( Stem("indfrier"), "indfri");});
test("indfødfe -> indfødf", function() {deepEqual( Stem("indfødfe"), "indfødf");});
test("indfødt -> indfød", function() {deepEqual( Stem("indfødt"), "indfød");});
test("indfødte -> indfød", function() {deepEqual( Stem("indfødte"), "indfød");});
test("indføre -> indfør", function() {deepEqual( Stem("indføre"), "indfør");});
test("indførelse -> indfør", function() {deepEqual( Stem("indførelse"), "indfør");});
test("indfører -> indfør", function() {deepEqual( Stem("indfører"), "indfør");});
test("indført -> indført", function() {deepEqual( Stem("indført"), "indført");});
test("indførte -> indført", function() {deepEqual( Stem("indførte"), "indført");});
test("indførtes -> indført", function() {deepEqual( Stem("indførtes"), "indført");});
test("indgang -> indgang", function() {deepEqual( Stem("indgang"), "indgang");});
test("indgange -> indgang", function() {deepEqual( Stem("indgange"), "indgang");});
test("indgangen -> indgang", function() {deepEqual( Stem("indgangen"), "indgang");});
test("indgangens -> indgang", function() {deepEqual( Stem("indgangens"), "indgang");});
test("indgav -> indgav", function() {deepEqual( Stem("indgav"), "indgav");});
test("indgik -> indgik", function() {deepEqual( Stem("indgik"), "indgik");});
test("indgive -> indgiv", function() {deepEqual( Stem("indgive"), "indgiv");});
test("indgiver -> indgiv", function() {deepEqual( Stem("indgiver"), "indgiv");});
test("indgivet -> indgiv", function() {deepEqual( Stem("indgivet"), "indgiv");});
test("indgravere -> indgrav", function() {deepEqual( Stem("indgravere"), "indgrav");});
test("indgraverede -> indgrav", function() {deepEqual( Stem("indgraverede"), "indgrav");});
test("indgyder -> indgyd", function() {deepEqual( Stem("indgyder"), "indgyd");});
test("indgå -> indgå", function() {deepEqual( Stem("indgå"), "indgå");});
test("indgået -> indgå", function() {deepEqual( Stem("indgået"), "indgå");});
test("indgår -> indgår", function() {deepEqual( Stem("indgår"), "indgår");});
test("indhegninger -> indhegning", function() {deepEqual( Stem("indhegninger"), "indhegning");});
test("indhente -> indhent", function() {deepEqual( Stem("indhente"), "indhent");});
test("indhentede -> indhented", function() {deepEqual( Stem("indhentede"), "indhented");});
test("indhenter -> indhent", function() {deepEqual( Stem("indhenter"), "indhent");});
test("indhentes -> indhent", function() {deepEqual( Stem("indhentes"), "indhent");});
test("indhentet -> indhent", function() {deepEqual( Stem("indhentet"), "indhent");});
test("indhold -> indhold", function() {deepEqual( Stem("indhold"), "indhold");});
test("indholdet -> indhold", function() {deepEqual( Stem("indholdet"), "indhold");});
test("indhug -> indhug", function() {deepEqual( Stem("indhug"), "indhug");});
test("indhylled -> indhylled", function() {deepEqual( Stem("indhylled"), "indhylled");});
test("indhyllede -> indhylled", function() {deepEqual( Stem("indhyllede"), "indhylled");});
test("indhøste -> indhøst", function() {deepEqual( Stem("indhøste"), "indhøst");});
test("indien -> indi", function() {deepEqual( Stem("indien"), "indi");});
test("indjag -> indjag", function() {deepEqual( Stem("indjag"), "indjag");});
test("indjage -> indjag", function() {deepEqual( Stem("indjage"), "indjag");});
test("indjager -> indjag", function() {deepEqual( Stem("indjager"), "indjag");});
test("indjog -> indjog", function() {deepEqual( Stem("indjog"), "indjog");});
test("indkom -> indkom", function() {deepEqual( Stem("indkom"), "indkom");});
test("indkommer -> indkom", function() {deepEqual( Stem("indkommer"), "indkom");});
test("indkommet -> indkom", function() {deepEqual( Stem("indkommet"), "indkom");});
test("indkomne -> indkomn", function() {deepEqual( Stem("indkomne"), "indkomn");});
test("indkomst -> indkomst", function() {deepEqual( Stem("indkomst"), "indkomst");});
test("indkredser -> indkreds", function() {deepEqual( Stem("indkredser"), "indkreds");});
test("indkøb -> indkøb", function() {deepEqual( Stem("indkøb"), "indkøb");});
test("indlad -> indlad", function() {deepEqual( Stem("indlad"), "indlad");});
test("indlade -> indlad", function() {deepEqual( Stem("indlade"), "indlad");});
test("indlader -> indlad", function() {deepEqual( Stem("indlader"), "indlad");});
test("indlagt -> indlag", function() {deepEqual( Stem("indlagt"), "indlag");});
test("indlod -> indlod", function() {deepEqual( Stem("indlod"), "indlod");});
test("indlode -> indlod", function() {deepEqual( Stem("indlode"), "indlod");});
test("indlæg -> indlæg", function() {deepEqual( Stem("indlæg"), "indlæg");});
test("indløse -> indløs", function() {deepEqual( Stem("indløse"), "indløs");});
test("indløser -> indløs", function() {deepEqual( Stem("indløser"), "indløs");});
test("indløses -> indløs", function() {deepEqual( Stem("indløses"), "indløs");});
test("indløsning -> indløsning", function() {deepEqual( Stem("indløsning"), "indløsning");});
test("indløsningsret -> indløsningsr", function() {deepEqual( Stem("indløsningsret"), "indløsningsr");});
test("indløsningsretten -> indløsningsret", function() {deepEqual( Stem("indløsningsretten"), "indløsningsret");});
test("indmad -> indmad", function() {deepEqual( Stem("indmad"), "indmad");});
test("indplantet -> indplant", function() {deepEqual( Stem("indplantet"), "indplant");});
test("indpode -> indpod", function() {deepEqual( Stem("indpode"), "indpod");});
test("indpodes -> indpod", function() {deepEqual( Stem("indpodes"), "indpod");});
test("indpodet -> indpod", function() {deepEqual( Stem("indpodet"), "indpod");});
test("indprente -> indprent", function() {deepEqual( Stem("indprente"), "indprent");});
test("indre -> indr", function() {deepEqual( Stem("indre"), "indr");});
test("indres -> indr", function() {deepEqual( Stem("indres"), "indr");});
test("indretning -> indretning", function() {deepEqual( Stem("indretning"), "indretning");});
test("indrette -> indret", function() {deepEqual( Stem("indrette"), "indret");});
test("indrettede -> indretted", function() {deepEqual( Stem("indrettede"), "indretted");});
test("indrettes -> indret", function() {deepEqual( Stem("indrettes"), "indret");});
test("indrettet -> indret", function() {deepEqual( Stem("indrettet"), "indret");});
test("indrids -> indrid", function() {deepEqual( Stem("indrids"), "indrid");});
test("indridse -> indrids", function() {deepEqual( Stem("indridse"), "indrids");});
test("indridset -> indrids", function() {deepEqual( Stem("indridset"), "indrids");});
test("indristet -> indrist", function() {deepEqual( Stem("indristet"), "indrist");});
test("indrømmelse -> indrøm", function() {deepEqual( Stem("indrømmelse"), "indrøm");});
test("indsamle -> indsaml", function() {deepEqual( Stem("indsamle"), "indsaml");});
test("indsamlede -> indsamled", function() {deepEqual( Stem("indsamlede"), "indsamled");});
test("indsamler -> indsaml", function() {deepEqual( Stem("indsamler"), "indsaml");});
test("indsamlet -> indsaml", function() {deepEqual( Stem("indsamlet"), "indsaml");});
test("indsamlingen -> indsamling", function() {deepEqual( Stem("indsamlingen"), "indsamling");});
test("indsamlinger -> indsamling", function() {deepEqual( Stem("indsamlinger"), "indsamling");});
test("indsat -> indsat", function() {deepEqual( Stem("indsat"), "indsat");});
test("indsatte -> indsat", function() {deepEqual( Stem("indsatte"), "indsat");});
test("indsattes -> indsat", function() {deepEqual( Stem("indsattes"), "indsat");});
test("indse -> inds", function() {deepEqual( Stem("indse"), "inds");});
test("indser -> inds", function() {deepEqual( Stem("indser"), "inds");});
test("indset -> inds", function() {deepEqual( Stem("indset"), "inds");});
test("indsigelse -> indsig", function() {deepEqual( Stem("indsigelse"), "indsig");});
test("indsigt -> inds", function() {deepEqual( Stem("indsigt"), "inds");});
test("indsigten -> inds", function() {deepEqual( Stem("indsigten"), "inds");});
test("indsigtens -> inds", function() {deepEqual( Stem("indsigtens"), "inds");});
test("indsigts -> inds", function() {deepEqual( Stem("indsigts"), "inds");});
test("indsigtsfuld -> indsigtsfuld", function() {deepEqual( Stem("indsigtsfuld"), "indsigtsfuld");});
test("indsigtsfulde -> indsigtsfuld", function() {deepEqual( Stem("indsigtsfulde"), "indsigtsfuld");});
test("indskrevet -> indskrev", function() {deepEqual( Stem("indskrevet"), "indskrev");});
test("indskrevne -> indskrevn", function() {deepEqual( Stem("indskrevne"), "indskrevn");});
test("indskrift -> indskrift", function() {deepEqual( Stem("indskrift"), "indskrift");});
test("indskrive -> indskriv", function() {deepEqual( Stem("indskrive"), "indskriv");});
test("indskrivning -> indskrivning", function() {deepEqual( Stem("indskrivning"), "indskrivning");});
test("indskudt -> indskud", function() {deepEqual( Stem("indskudt"), "indskud");});
test("indskærp -> indskærp", function() {deepEqual( Stem("indskærp"), "indskærp");});
test("indskærpe -> indskærp", function() {deepEqual( Stem("indskærpe"), "indskærp");});
test("indskærpet -> indskærp", function() {deepEqual( Stem("indskærpet"), "indskærp");});
test("indsneget -> indsneg", function() {deepEqual( Stem("indsneget"), "indsneg");});
test("indsnegne -> indsnegn", function() {deepEqual( Stem("indsnegne"), "indsnegn");});
test("indsnit -> indsnit", function() {deepEqual( Stem("indsnit"), "indsnit");});
test("indstiftet -> indstift", function() {deepEqual( Stem("indstiftet"), "indstift");});
test("indsuge -> indsug", function() {deepEqual( Stem("indsuge"), "indsug");});
test("indsuger -> indsug", function() {deepEqual( Stem("indsuger"), "indsug");});
test("indsvøbte -> indsvøbt", function() {deepEqual( Stem("indsvøbte"), "indsvøbt");});
test("indså -> indså", function() {deepEqual( Stem("indså"), "indså");});
test("indsæt -> indsæt", function() {deepEqual( Stem("indsæt"), "indsæt");});
test("indsætte -> indsæt", function() {deepEqual( Stem("indsætte"), "indsæt");});
test("indsættelse -> indsæt", function() {deepEqual( Stem("indsættelse"), "indsæt");});
test("indsættelsen -> indsæt", function() {deepEqual( Stem("indsættelsen"), "indsæt");});
test("indsættelsesdage -> indsættelsesdag", function() {deepEqual( Stem("indsættelsesdage"), "indsættelsesdag");});
test("indsættelseskurven -> indsættelseskurv", function() {deepEqual( Stem("indsættelseskurven"), "indsættelseskurv");});
test("indsættelseskødet -> indsættelseskød", function() {deepEqual( Stem("indsættelseskødet"), "indsættelseskød");});
test("indsættelsesoffer -> indsættelsesof", function() {deepEqual( Stem("indsættelsesoffer"), "indsættelsesof");});
test("indsættelsesofferet -> indsættelsesof", function() {deepEqual( Stem("indsættelsesofferet"), "indsættelsesof");});
test("indsættelsesvæder -> indsættelsesvæd", function() {deepEqual( Stem("indsættelsesvæder"), "indsættelsesvæd");});
test("indsættelsesvæderen -> indsættelsesvæd", function() {deepEqual( Stem("indsættelsesvæderen"), "indsættelsesvæd");});
test("indsætter -> indsæt", function() {deepEqual( Stem("indsætter"), "indsæt");});
test("indsættes -> indsæt", function() {deepEqual( Stem("indsættes"), "indsæt");});
test("indtage -> indtag", function() {deepEqual( Stem("indtage"), "indtag");});
test("indtagelse -> indtag", function() {deepEqual( Stem("indtagelse"), "indtag");});
test("indtager -> indtag", function() {deepEqual( Stem("indtager"), "indtag");});
test("indtages -> indtag", function() {deepEqual( Stem("indtages"), "indtag");});
test("indtaget -> indtag", function() {deepEqual( Stem("indtaget"), "indtag");});
test("indtil -> indtil", function() {deepEqual( Stem("indtil"), "indtil");});
test("indtog -> indtog", function() {deepEqual( Stem("indtog"), "indtog");});
test("indtraf -> indtraf", function() {deepEqual( Stem("indtraf"), "indtraf");});
test("indtryk -> indtryk", function() {deepEqual( Stem("indtryk"), "indtryk");});
test("indtræde -> indtræd", function() {deepEqual( Stem("indtræde"), "indtræd");});
test("indtræder -> indtræd", function() {deepEqual( Stem("indtræder"), "indtræd");});
test("indtræffe -> indtræf", function() {deepEqual( Stem("indtræffe"), "indtræf");});
test("indtræffer -> indtræf", function() {deepEqual( Stem("indtræffer"), "indtræf");});
test("indtrængende -> indtræng", function() {deepEqual( Stem("indtrængende"), "indtræng");});
test("indtægt -> indtæg", function() {deepEqual( Stem("indtægt"), "indtæg");});
test("indtægter -> indtæg", function() {deepEqual( Stem("indtægter"), "indtæg");});
test("indvandrede -> indvandred", function() {deepEqual( Stem("indvandrede"), "indvandred");});
test("indvandret -> indvandr", function() {deepEqual( Stem("indvandret"), "indvandr");});
test("indvender -> indvend", function() {deepEqual( Stem("indvender"), "indvend");});
test("indvendig -> indvend", function() {deepEqual( Stem("indvendig"), "indvend");});
test("indvendige -> indvend", function() {deepEqual( Stem("indvendige"), "indvend");});
test("indvendigt -> indvend", function() {deepEqual( Stem("indvendigt"), "indvend");});
test("indvending -> indvending", function() {deepEqual( Stem("indvending"), "indvending");});
test("indvendingerne -> indvending", function() {deepEqual( Stem("indvendingerne"), "indvending");});
test("indvie -> indvi", function() {deepEqual( Stem("indvie"), "indvi");});
test("indviede -> indvied", function() {deepEqual( Stem("indviede"), "indvied");});
test("indvielse -> indvi", function() {deepEqual( Stem("indvielse"), "indvi");});
test("indvielsen -> indvi", function() {deepEqual( Stem("indvielsen"), "indvi");});
test("indvielsesløfte -> indvielsesløft", function() {deepEqual( Stem("indvielsesløfte"), "indvielsesløft");});
test("indvielsestid -> indvielsestid", function() {deepEqual( Stem("indvielsestid"), "indvielsestid");});
test("indvier -> indvi", function() {deepEqual( Stem("indvier"), "indvi");});
test("indvies -> indvi", function() {deepEqual( Stem("indvies"), "indvi");});
test("indviet -> indvi", function() {deepEqual( Stem("indviet"), "indvi");});
test("indvikle -> indvikl", function() {deepEqual( Stem("indvikle"), "indvikl");});
test("indvikler -> indvikl", function() {deepEqual( Stem("indvikler"), "indvikl");});
test("indvolde -> indvold", function() {deepEqual( Stem("indvolde"), "indvold");});
test("indvoldene -> indvold", function() {deepEqual( Stem("indvoldene"), "indvold");});
test("indvortes -> indvort", function() {deepEqual( Stem("indvortes"), "indvort");});
test("indånde -> indånd", function() {deepEqual( Stem("indånde"), "indånd");});
test("indåndede -> indånded", function() {deepEqual( Stem("indåndede"), "indånded");});
test("indåndet -> indånd", function() {deepEqual( Stem("indåndet"), "indånd");});
test("ingen -> ing", function() {deepEqual( Stem("ingen"), "ing");});
test("ingenlunde -> ingenlund", function() {deepEqual( Stem("ingenlunde"), "ingenlund");});
test("ingens -> ing", function() {deepEqual( Stem("ingens"), "ing");});
test("ingensteds -> ingensted", function() {deepEqual( Stem("ingensteds"), "ingensted");});
test("ingenting -> ingenting", function() {deepEqual( Stem("ingenting"), "ingenting");});
test("insekterne -> insek", function() {deepEqual( Stem("insekterne"), "insek");});
test("instrumenter -> instrument", function() {deepEqual( Stem("instrumenter"), "instrument");});
test("intet -> int", function() {deepEqual( Stem("intet"), "int");});
test("intetsigende -> intets", function() {deepEqual( Stem("intetsigende"), "intets");});
test("io -> io", function() {deepEqual( Stem("io"), "io");});
test("iod -> iod", function() {deepEqual( Stem("iod"), "iod");});
test("iotans -> iotan", function() {deepEqual( Stem("iotans"), "iotan");});
test("iozabad -> iozabad", function() {deepEqual( Stem("iozabad"), "iozabad");});
test("ir -> ir", function() {deepEqual( Stem("ir"), "ir");});
test("ira -> ira", function() {deepEqual( Stem("ira"), "ira");});
test("irad -> irad", function() {deepEqual( Stem("irad"), "irad");});
test("iraeliterne -> iraelit", function() {deepEqual( Stem("iraeliterne"), "iraelit");});
test("iram -> iram", function() {deepEqual( Stem("iram"), "iram");});
test("irettesat -> irettesat", function() {deepEqual( Stem("irettesat"), "irettesat");});
test("irettesatte -> irettesat", function() {deepEqual( Stem("irettesatte"), "irettesat");});
test("irettesæt -> irettesæt", function() {deepEqual( Stem("irettesæt"), "irettesæt");});
test("irettesættelse -> irettesæt", function() {deepEqual( Stem("irettesættelse"), "irettesæt");});
test("irettesættende -> irettesæt", function() {deepEqual( Stem("irettesættende"), "irettesæt");});
test("iri -> iri", function() {deepEqual( Stem("iri"), "iri");});
test("iriten -> irit", function() {deepEqual( Stem("iriten"), "irit");});
test("iriterne -> irit", function() {deepEqual( Stem("iriterne"), "irit");});
test("iriternes -> irit", function() {deepEqual( Stem("iriternes"), "irit");});
test("irs -> irs", function() {deepEqual( Stem("irs"), "irs");});
test("is -> is", function() {deepEqual( Stem("is"), "is");});
test("isaj -> isaj", function() {deepEqual( Stem("isaj"), "isaj");});
test("isajs -> isaj", function() {deepEqual( Stem("isajs"), "isaj");});
test("isak -> isak", function() {deepEqual( Stem("isak"), "isak");});
test("isaks -> isak", function() {deepEqual( Stem("isaks"), "isak");});
test("isen -> isen", function() {deepEqual( Stem("isen"), "isen");});
test("isjba -> isjba", function() {deepEqual( Stem("isjba"), "isjba");});
test("isjbosjet -> isjbosj", function() {deepEqual( Stem("isjbosjet"), "isjbosj");});
test("isjbosjets -> isjbosj", function() {deepEqual( Stem("isjbosjets"), "isjbosj");});
test("isjhod -> isjhod", function() {deepEqual( Stem("isjhod"), "isjhod");});
test("iskariot -> iskariot", function() {deepEqual( Stem("iskariot"), "iskariot");});
test("iskariots -> iskariot", function() {deepEqual( Stem("iskariots"), "iskariot");});
test("iskænked -> iskænked", function() {deepEqual( Stem("iskænked"), "iskænked");});
test("iskænket -> iskænk", function() {deepEqual( Stem("iskænket"), "iskænk");});
test("ismael -> ismael", function() {deepEqual( Stem("ismael"), "ismael");});
test("ismaelit -> ismaelit", function() {deepEqual( Stem("ismaelit"), "ismaelit");});
test("ismaelitem -> ismaelitem", function() {deepEqual( Stem("ismaelitem"), "ismaelitem");});
test("ismaeliten -> ismaelit", function() {deepEqual( Stem("ismaeliten"), "ismaelit");});
test("ismaeliter -> ismaelit", function() {deepEqual( Stem("ismaeliter"), "ismaelit");});
test("ismaeliterne -> ismaelit", function() {deepEqual( Stem("ismaeliterne"), "ismaelit");});
test("ismaels -> ismael", function() {deepEqual( Stem("ismaels"), "ismael");});
test("isnende -> isn", function() {deepEqual( Stem("isnende"), "isn");});
test("isop -> isop", function() {deepEqual( Stem("isop"), "isop");});
test("isopstængel -> isopstængel", function() {deepEqual( Stem("isopstængel"), "isopstængel");});
test("israeals -> israeal", function() {deepEqual( Stem("israeals"), "israeal");});
test("israel -> israel", function() {deepEqual( Stem("israel"), "israel");});
test("israelit -> israelit", function() {deepEqual( Stem("israelit"), "israelit");});
test("israeliteme -> israelitem", function() {deepEqual( Stem("israeliteme"), "israelitem");});
test("israeliter -> israelit", function() {deepEqual( Stem("israeliter"), "israelit");});
test("israeliterne -> israelit", function() {deepEqual( Stem("israeliterne"), "israelit");});
test("israeliternes -> israelit", function() {deepEqual( Stem("israeliternes"), "israelit");});
test("israeliters -> israelit", function() {deepEqual( Stem("israeliters"), "israelit");});
test("israelitisk -> israelitisk", function() {deepEqual( Stem("israelitisk"), "israelitisk");});
test("israelitiske -> israelitisk", function() {deepEqual( Stem("israelitiske"), "israelitisk");});
test("israelitten -> israelit", function() {deepEqual( Stem("israelitten"), "israelit");});
test("israelitter -> israelit", function() {deepEqual( Stem("israelitter"), "israelit");});
test("israelitterne -> israelit", function() {deepEqual( Stem("israelitterne"), "israelit");});
test("israelitternes -> israelit", function() {deepEqual( Stem("israelitternes"), "israelit");});
test("israels -> israel", function() {deepEqual( Stem("israels"), "israel");});
test("israelskonge -> israelskong", function() {deepEqual( Stem("israelskonge"), "israelskong");});
test("israelstrone -> israelstron", function() {deepEqual( Stem("israelstrone"), "israelstron");});
test("israeslitene -> israeslit", function() {deepEqual( Stem("israeslitene"), "israeslit");});
test("isralitter -> isralit", function() {deepEqual( Stem("isralitter"), "isralit");});
test("isreaeliter -> isreaelit", function() {deepEqual( Stem("isreaeliter"), "isreaelit");});
test("isrrael -> isrrael", function() {deepEqual( Stem("isrrael"), "isrrael");});
test("issakar -> issakar", function() {deepEqual( Stem("issakar"), "issakar");});
test("issakariterne -> issakarit", function() {deepEqual( Stem("issakariterne"), "issakarit");});
test("issakariternes -> issakarit", function() {deepEqual( Stem("issakariternes"), "issakarit");});
test("issakars -> issakar", function() {deepEqual( Stem("issakars"), "issakar");});
test("issakas -> issaka", function() {deepEqual( Stem("issakas"), "issaka");});
test("isse -> iss", function() {deepEqual( Stem("isse"), "iss");});
test("issen -> iss", function() {deepEqual( Stem("issen"), "iss");});
test("isseskaldet -> isseskald", function() {deepEqual( Stem("isseskaldet"), "isseskald");});
test("isstykker -> isstyk", function() {deepEqual( Stem("isstykker"), "isstyk");});
test("istandsat -> istandsat", function() {deepEqual( Stem("istandsat"), "istandsat");});
test("istandsatte -> istandsat", function() {deepEqual( Stem("istandsatte"), "istandsat");});
test("istandsætte -> istandsæt", function() {deepEqual( Stem("istandsætte"), "istandsæt");});
test("istandsættelse -> istandsæt", function() {deepEqual( Stem("istandsættelse"), "istandsæt");});
test("istandsættelsen -> istandsæt", function() {deepEqual( Stem("istandsættelsen"), "istandsæt");});
test("istandsættelsesarbejdet -> istandsættelsesarbejd", function() {deepEqual( Stem("istandsættelsesarbejdet"), "istandsættelsesarbejd");});
test("istandsætter -> istandsæt", function() {deepEqual( Stem("istandsætter"), "istandsæt");});
test("istem -> istem", function() {deepEqual( Stem("istem"), "istem");});
test("istemme -> istem", function() {deepEqual( Stem("istemme"), "istem");});
test("istemmer -> istem", function() {deepEqual( Stem("istemmer"), "istem");});
test("istemte -> istemt", function() {deepEqual( Stem("istemte"), "istemt");});
test("istemtner -> istemtn", function() {deepEqual( Stem("istemtner"), "istemtn");});
test("især -> især", function() {deepEqual( Stem("især"), "især");});
test("itaft -> itaft", function() {deepEqual( Stem("itaft"), "itaft");});
test("itaj -> itaj", function() {deepEqual( Stem("itaj"), "itaj");});
test("italien -> itali", function() {deepEqual( Stem("italien"), "itali");});
test("italienske -> italiensk", function() {deepEqual( Stem("italienske"), "italiensk");});
test("itamar -> itamar", function() {deepEqual( Stem("itamar"), "itamar");});
test("itamars -> itamar", function() {deepEqual( Stem("itamars"), "itamar");});
test("iterne -> itern", function() {deepEqual( Stem("iterne"), "itern");});
test("iternes -> itern", function() {deepEqual( Stem("iternes"), "itern");});
test("itiel -> itiel", function() {deepEqual( Stem("itiel"), "itiel");});
test("itnod -> itnod", function() {deepEqual( Stem("itnod"), "itnod");});
test("ittaj -> ittaj", function() {deepEqual( Stem("ittaj"), "ittaj");});
test("ittajs -> ittaj", function() {deepEqual( Stem("ittajs"), "ittaj");});
test("itu -> itu", function() {deepEqual( Stem("itu"), "itu");});
test("iturevne -> iturevn", function() {deepEqual( Stem("iturevne"), "iturevn");});
test("ituræa -> ituræa", function() {deepEqual( Stem("ituræa"), "ituræa");});
test("iver -> iver", function() {deepEqual( Stem("iver"), "iver");});
test("ivrig -> ivr", function() {deepEqual( Stem("ivrig"), "ivr");});
test("ivrige -> ivr", function() {deepEqual( Stem("ivrige"), "ivr");});
test("ivrigere -> ivr", function() {deepEqual( Stem("ivrigere"), "ivr");});
test("ivrigt -> ivr", function() {deepEqual( Stem("ivrigt"), "ivr");});
test("ivva -> ivva", function() {deepEqual( Stem("ivva"), "ivva");});
test("ivvas -> ivva", function() {deepEqual( Stem("ivvas"), "ivva");});
test("iværksat -> iværksat", function() {deepEqual( Stem("iværksat"), "iværksat");});
test("iægger -> iæg", function() {deepEqual( Stem("iægger"), "iæg");});
test("j -> j", function() {deepEqual( Stem("j"), "j");});
test("ja -> ja", function() {deepEqual( Stem("ja"), "ja");});
test("jaazanja -> jaazanja", function() {deepEqual( Stem("jaazanja"), "jaazanja");});
test("jabal -> jabal", function() {deepEqual( Stem("jabal"), "jabal");});
test("jabaziel -> jabaziel", function() {deepEqual( Stem("jabaziel"), "jabaziel");});
test("jabbok -> jabbok", function() {deepEqual( Stem("jabbok"), "jabbok");});
test("jabbokfloden -> jabbokflod", function() {deepEqual( Stem("jabbokfloden"), "jabbokflod");});
test("jabesj -> jabesj", function() {deepEqual( Stem("jabesj"), "jabesj");});
test("jabesjs -> jabesj", function() {deepEqual( Stem("jabesjs"), "jabesj");});
test("jabez -> jabez", function() {deepEqual( Stem("jabez"), "jabez");});
test("jabin -> jabin", function() {deepEqual( Stem("jabin"), "jabin");});
test("jabins -> jabin", function() {deepEqual( Stem("jabins"), "jabin");});
test("jabne -> jabn", function() {deepEqual( Stem("jabne"), "jabn");});
test("jada -> jada", function() {deepEqual( Stem("jada"), "jada");});
test("jadajs -> jadaj", function() {deepEqual( Stem("jadajs"), "jadaj");});
test("jadas -> jada", function() {deepEqual( Stem("jadas"), "jada");});
test("jaddaj -> jaddaj", function() {deepEqual( Stem("jaddaj"), "jaddaj");});
test("jaddua -> jaddua", function() {deepEqual( Stem("jaddua"), "jaddua");});
test("jadduas -> jaddua", function() {deepEqual( Stem("jadduas"), "jaddua");});
test("jadiel -> jadiel", function() {deepEqual( Stem("jadiel"), "jadiel");});
test("jado -> jado", function() {deepEqual( Stem("jado"), "jado");});
test("jadon -> jadon", function() {deepEqual( Stem("jadon"), "jadon");});
test("jael -> jael", function() {deepEqual( Stem("jael"), "jael");});
test("jaels -> jael", function() {deepEqual( Stem("jaels"), "jael");});
test("jaf -> jaf", function() {deepEqual( Stem("jaf"), "jaf");});
test("jafet -> jaf", function() {deepEqual( Stem("jafet"), "jaf");});
test("jafets -> jaf", function() {deepEqual( Stem("jafets"), "jaf");});
test("jafia -> jafia", function() {deepEqual( Stem("jafia"), "jafia");});
test("jaflet -> jafl", function() {deepEqual( Stem("jaflet"), "jafl");});
test("jaflets -> jafl", function() {deepEqual( Stem("jaflets"), "jafl");});
test("jafo -> jafo", function() {deepEqual( Stem("jafo"), "jafo");});
test("jag -> jag", function() {deepEqual( Stem("jag"), "jag");});
test("jagde -> jagd", function() {deepEqual( Stem("jagde"), "jagd");});
test("jage -> jag", function() {deepEqual( Stem("jage"), "jag");});
test("jagede -> jaged", function() {deepEqual( Stem("jagede"), "jaged");});
test("jagende -> jag", function() {deepEqual( Stem("jagende"), "jag");});
test("jager -> jag", function() {deepEqual( Stem("jager"), "jag");});
test("jages -> jag", function() {deepEqual( Stem("jages"), "jag");});
test("jaget -> jag", function() {deepEqual( Stem("jaget"), "jag");});
test("jagt -> jagt", function() {deepEqual( Stem("jagt"), "jagt");});
test("jagten -> jagt", function() {deepEqual( Stem("jagten"), "jagt");});
test("jagtredskaber -> jagtredskab", function() {deepEqual( Stem("jagtredskaber"), "jagtredskab");});
test("jagur -> jagur", function() {deepEqual( Stem("jagur"), "jagur");});
test("jahat -> jahat", function() {deepEqual( Stem("jahat"), "jahat");});
test("jahaz -> jahaz", function() {deepEqual( Stem("jahaz"), "jahaz");});
test("jahaziel -> jahaziel", function() {deepEqual( Stem("jahaziel"), "jahaziel");});
test("jahaziels -> jahaziel", function() {deepEqual( Stem("jahaziels"), "jahaziel");});
test("jair -> jair", function() {deepEqual( Stem("jair"), "jair");});
test("jairs -> jair", function() {deepEqual( Stem("jairs"), "jair");});
test("jairus -> jairus", function() {deepEqual( Stem("jairus"), "jairus");});
test("jakan -> jakan", function() {deepEqual( Stem("jakan"), "jakan");});
test("jakes -> jak", function() {deepEqual( Stem("jakes"), "jak");});
test("jakim -> jakim", function() {deepEqual( Stem("jakim"), "jakim");});
test("jakin -> jakin", function() {deepEqual( Stem("jakin"), "jakin");});
test("jakiniternes -> jakinit", function() {deepEqual( Stem("jakiniternes"), "jakinit");});
test("jakob -> jakob", function() {deepEqual( Stem("jakob"), "jakob");});
test("jakobkilden -> jakobkild", function() {deepEqual( Stem("jakobkilden"), "jakobkild");});
test("jakobs -> jakob", function() {deepEqual( Stem("jakobs"), "jakob");});
test("jakobsønner -> jakobsøn", function() {deepEqual( Stem("jakobsønner"), "jakobsøn");});
test("jalam -> jalam", function() {deepEqual( Stem("jalam"), "jalam");});
test("jale -> jal", function() {deepEqual( Stem("jale"), "jal");});
test("jalel -> jalel", function() {deepEqual( Stem("jalel"), "jalel");});
test("jamaj -> jamaj", function() {deepEqual( Stem("jamaj"), "jamaj");});
test("jambres -> jambr", function() {deepEqual( Stem("jambres"), "jambr");});
test("jamin -> jamin", function() {deepEqual( Stem("jamin"), "jamin");});
test("jaminiternes -> jaminit", function() {deepEqual( Stem("jaminiternes"), "jaminit");});
test("jamlek -> jamlek", function() {deepEqual( Stem("jamlek"), "jamlek");});
test("jammer -> jam", function() {deepEqual( Stem("jammer"), "jam");});
test("jammerlige -> jammer", function() {deepEqual( Stem("jammerlige"), "jammer");});
test("jammerskrig -> jammerskr", function() {deepEqual( Stem("jammerskrig"), "jammerskr");});
test("jamre -> jamr", function() {deepEqual( Stem("jamre"), "jamr");});
test("jamrede -> jamred", function() {deepEqual( Stem("jamrede"), "jamred");});
test("jamren -> jamr", function() {deepEqual( Stem("jamren"), "jamr");});
test("jamrende -> jamr", function() {deepEqual( Stem("jamrende"), "jamr");});
test("jamrer -> jamr", function() {deepEqual( Stem("jamrer"), "jamr");});
test("jannajs -> jannaj", function() {deepEqual( Stem("jannajs"), "jannaj");});
test("jannes -> jan", function() {deepEqual( Stem("jannes"), "jan");});
test("janoa -> janoa", function() {deepEqual( Stem("janoa"), "janoa");});
test("janum -> janum", function() {deepEqual( Stem("janum"), "janum");});
test("jareds -> jared", function() {deepEqual( Stem("jareds"), "jared");});
test("jarha -> jarha", function() {deepEqual( Stem("jarha"), "jarha");});
test("jarib -> jarib", function() {deepEqual( Stem("jarib"), "jarib");});
test("jarmut -> jarmut", function() {deepEqual( Stem("jarmut"), "jarmut");});
test("jaroa -> jaroa", function() {deepEqual( Stem("jaroa"), "jaroa");});
test("jasjen -> jasj", function() {deepEqual( Stem("jasjen"), "jasj");});
test("jasjibs -> jasjib", function() {deepEqual( Stem("jasjibs"), "jasjib");});
test("jasjobam -> jasjobam", function() {deepEqual( Stem("jasjobam"), "jasjobam");});
test("jasjub -> jasjub", function() {deepEqual( Stem("jasjub"), "jasjub");});
test("jasjubiternes -> jasjubit", function() {deepEqual( Stem("jasjubiternes"), "jasjubit");});
test("jason -> jason", function() {deepEqual( Stem("jason"), "jason");});
test("jasons -> jason", function() {deepEqual( Stem("jasons"), "jason");});
test("jaspis -> jaspis", function() {deepEqual( Stem("jaspis"), "jaspis");});
test("jaspissten -> jaspisst", function() {deepEqual( Stem("jaspissten"), "jaspisst");});
test("jatniel -> jatniel", function() {deepEqual( Stem("jatniel"), "jatniel");});
test("jattir -> jattir", function() {deepEqual( Stem("jattir"), "jattir");});
test("javan -> javan", function() {deepEqual( Stem("javan"), "javan");});
test("javans -> javan", function() {deepEqual( Stem("javans"), "javan");});
test("jaza -> jaza", function() {deepEqual( Stem("jaza"), "jaza");});
test("jazabad -> jazabad", function() {deepEqual( Stem("jazabad"), "jazabad");});
test("jaze -> jaz", function() {deepEqual( Stem("jaze"), "jaz");});
test("jazeel -> jazeel", function() {deepEqual( Stem("jazeel"), "jazeel");});
test("jazeja -> jazeja", function() {deepEqual( Stem("jazeja"), "jazeja");});
test("jazer -> jaz", function() {deepEqual( Stem("jazer"), "jaz");});
test("jazera -> jazera", function() {deepEqual( Stem("jazera"), "jazera");});
test("jazers -> jaz", function() {deepEqual( Stem("jazers"), "jaz");});
test("jaziz -> jaziz", function() {deepEqual( Stem("jaziz"), "jaziz");});
test("je -> je", function() {deepEqual( Stem("je"), "je");});
test("jearim -> jearim", function() {deepEqual( Stem("jearim"), "jearim");});
test("jearimbjergets -> jearimbjerg", function() {deepEqual( Stem("jearimbjergets"), "jearimbjerg");});
test("jearims -> jearim", function() {deepEqual( Stem("jearims"), "jearim");});
test("jeateraj -> jeateraj", function() {deepEqual( Stem("jeateraj"), "jeateraj");});
test("jeberekjahus -> jeberekjahus", function() {deepEqual( Stem("jeberekjahus"), "jeberekjahus");});
test("jeblik -> jeblik", function() {deepEqual( Stem("jeblik"), "jeblik");});
test("jeblikkelig -> jeblik", function() {deepEqual( Stem("jeblikkelig"), "jeblik");});
test("jeblikket -> jeblik", function() {deepEqual( Stem("jeblikket"), "jeblik");});
test("jebliks -> jeblik", function() {deepEqual( Stem("jebliks"), "jeblik");});
test("jebu -> jebu", function() {deepEqual( Stem("jebu"), "jebu");});
test("jebus -> jebus", function() {deepEqual( Stem("jebus"), "jebus");});
test("jebusit -> jebusit", function() {deepEqual( Stem("jebusit"), "jebusit");});
test("jebusiteme -> jebusitem", function() {deepEqual( Stem("jebusiteme"), "jebusitem");});
test("jebusiten -> jebusit", function() {deepEqual( Stem("jebusiten"), "jebusit");});
test("jebusiterne -> jebusit", function() {deepEqual( Stem("jebusiterne"), "jebusit");});
test("jebusiternes -> jebusit", function() {deepEqual( Stem("jebusiternes"), "jebusit");});
test("jedaja -> jedaja", function() {deepEqual( Stem("jedaja"), "jedaja");});
test("jedajas -> jedaja", function() {deepEqual( Stem("jedajas"), "jedaja");});
test("jedeja -> jedeja", function() {deepEqual( Stem("jedeja"), "jedeja");});
test("jediael -> jediael", function() {deepEqual( Stem("jediael"), "jediael");});
test("jediaels -> jediael", function() {deepEqual( Stem("jediaels"), "jediael");});
test("jedida -> jedida", function() {deepEqual( Stem("jedida"), "jedida");});
test("jedidja -> jedidja", function() {deepEqual( Stem("jedidja"), "jedidja");});
test("jedituns -> jeditun", function() {deepEqual( Stem("jedituns"), "jeditun");});
test("jedos -> jedo", function() {deepEqual( Stem("jedos"), "jedo");});
test("jedutun -> jedutun", function() {deepEqual( Stem("jedutun"), "jedutun");});
test("jedutuns -> jedutun", function() {deepEqual( Stem("jedutuns"), "jedutun");});
test("jeffa -> jeffa", function() {deepEqual( Stem("jeffa"), "jeffa");});
test("jefta -> jefta", function() {deepEqual( Stem("jefta"), "jefta");});
test("jeftas -> jefta", function() {deepEqual( Stem("jeftas"), "jefta");});
test("jefunne -> jefun", function() {deepEqual( Stem("jefunne"), "jefun");});
test("jefunnes -> jefun", function() {deepEqual( Stem("jefunnes"), "jefun");});
test("jeg -> jeg", function() {deepEqual( Stem("jeg"), "jeg");});
test("jegar -> jegar", function() {deepEqual( Stem("jegar"), "jegar");});
test("jegudrækkerhåndenmodjuda -> jegudrækkerhåndenmodjuda", function() {deepEqual( Stem("jegudrækkerhåndenmodjuda"), "jegudrækkerhåndenmodjuda");});
test("jehallel -> jehallel", function() {deepEqual( Stem("jehallel"), "jehallel");});
test("jehezkel -> jehezkel", function() {deepEqual( Stem("jehezkel"), "jehezkel");});
test("jehiel -> jehiel", function() {deepEqual( Stem("jehiel"), "jehiel");});
test("jehieliterne -> jehielit", function() {deepEqual( Stem("jehieliterne"), "jehielit");});
test("jehieliternes -> jehielit", function() {deepEqual( Stem("jehieliternes"), "jehielit");});
test("jehiels -> jehiel", function() {deepEqual( Stem("jehiels"), "jehiel");});
test("jehija -> jehija", function() {deepEqual( Stem("jehija"), "jehija");});
test("jehoadda -> jehoadda", function() {deepEqual( Stem("jehoadda"), "jehoadda");});
test("jehoaddan -> jehoaddan", function() {deepEqual( Stem("jehoaddan"), "jehoaddan");});
test("jehosjuas -> jehosjua", function() {deepEqual( Stem("jehosjuas"), "jehosjua");});
test("jehu -> jehu", function() {deepEqual( Stem("jehu"), "jehu");});
test("jehud -> jehud", function() {deepEqual( Stem("jehud"), "jehud");});
test("jehudi -> jehudi", function() {deepEqual( Stem("jehudi"), "jehudi");});
test("jehus -> jehus", function() {deepEqual( Stem("jehus"), "jehus");});
test("jekabze -> jekabz", function() {deepEqual( Stem("jekabze"), "jekabz");});
test("jekam -> jekam", function() {deepEqual( Stem("jekam"), "jekam");});
test("jekamja -> jekamja", function() {deepEqual( Stem("jekamja"), "jekamja");});
test("jekolja -> jekolja", function() {deepEqual( Stem("jekolja"), "jekolja");});
test("jekonias -> jekonia", function() {deepEqual( Stem("jekonias"), "jekonia");});
test("jekonja -> jekonja", function() {deepEqual( Stem("jekonja"), "jekonja");});
test("jekonjas -> jekonja", function() {deepEqual( Stem("jekonjas"), "jekonja");});
test("jekutiel -> jekutiel", function() {deepEqual( Stem("jekutiel"), "jekutiel");});
test("jem -> jem", function() {deepEqual( Stem("jem"), "jem");});
test("jemed -> jemed", function() {deepEqual( Stem("jemed"), "jemed");});
test("jemima -> jemima", function() {deepEqual( Stem("jemima"), "jemima");});
test("jemuel -> jemuel", function() {deepEqual( Stem("jemuel"), "jemuel");});
test("jenbryn -> jenbryn", function() {deepEqual( Stem("jenbryn"), "jenbryn");});
test("jenhuler -> jenhul", function() {deepEqual( Stem("jenhuler"), "jenhul");});
test("jenlåg -> jenlåg", function() {deepEqual( Stem("jenlåg"), "jenlåg");});
test("jensalve -> jensalv", function() {deepEqual( Stem("jensalve"), "jensalv");});
test("jentjeneste -> jentjenest", function() {deepEqual( Stem("jentjeneste"), "jentjenest");});
test("jenvidne -> jenvidn", function() {deepEqual( Stem("jenvidne"), "jenvidn");});
test("jenvidner -> jenvidn", function() {deepEqual( Stem("jenvidner"), "jenvidn");});
test("jer -> jer", function() {deepEqual( Stem("jer"), "jer");});
test("jera -> jera", function() {deepEqual( Stem("jera"), "jera");});
test("jerame -> jeram", function() {deepEqual( Stem("jerame"), "jeram");});
test("jerameel -> jerameel", function() {deepEqual( Stem("jerameel"), "jerameel");});
test("jeramias -> jeramia", function() {deepEqual( Stem("jeramias"), "jeramia");});
test("jered -> jered", function() {deepEqual( Stem("jered"), "jered");});
test("jereds -> jered", function() {deepEqual( Stem("jereds"), "jered");});
test("jeremaj -> jeremaj", function() {deepEqual( Stem("jeremaj"), "jeremaj");});
test("jeremas -> jerema", function() {deepEqual( Stem("jeremas"), "jerema");});
test("jeremias -> jeremia", function() {deepEqual( Stem("jeremias"), "jeremia");});
test("jeremiass -> jeremias", function() {deepEqual( Stem("jeremiass"), "jeremias");});
test("jeremmas -> jeremma", function() {deepEqual( Stem("jeremmas"), "jeremma");});
test("jeremot -> jeremot", function() {deepEqual( Stem("jeremot"), "jeremot");});
test("jerenmias -> jerenmia", function() {deepEqual( Stem("jerenmias"), "jerenmia");});
test("jerhams -> jerham", function() {deepEqual( Stem("jerhams"), "jerham");});
test("jeribaj -> jeribaj", function() {deepEqual( Stem("jeribaj"), "jeribaj");});
test("jeriel -> jeriel", function() {deepEqual( Stem("jeriel"), "jeriel");});
test("jerija -> jerija", function() {deepEqual( Stem("jerija"), "jerija");});
test("jeriko -> jeriko", function() {deepEqual( Stem("jeriko"), "jeriko");});
test("jerikolandet -> jerikoland", function() {deepEqual( Stem("jerikolandet"), "jerikoland");});
test("jerikos -> jeriko", function() {deepEqual( Stem("jerikos"), "jeriko");});
test("jerikosletten -> jerikoslet", function() {deepEqual( Stem("jerikosletten"), "jerikoslet");});
test("jerim -> jerim", function() {deepEqual( Stem("jerim"), "jerim");});
test("jerimot -> jerimot", function() {deepEqual( Stem("jerimot"), "jerimot");});
test("jeriot -> jeriot", function() {deepEqual( Stem("jeriot"), "jeriot");});
test("jern -> jern", function() {deepEqual( Stem("jern"), "jern");});
test("jernbeslagne -> jernbeslagn", function() {deepEqual( Stem("jernbeslagne"), "jernbeslagn");});
test("jernbånd -> jernbånd", function() {deepEqual( Stem("jernbånd"), "jernbånd");});
test("jernet -> jern", function() {deepEqual( Stem("jernet"), "jern");});
test("jernets -> jern", function() {deepEqual( Stem("jernets"), "jern");});
test("jernhakkerne -> jernhak", function() {deepEqual( Stem("jernhakkerne"), "jernhak");});
test("jernkiste -> jernkist", function() {deepEqual( Stem("jernkiste"), "jernkist");});
test("jernovnen -> jernovn", function() {deepEqual( Stem("jernovnen"), "jernovn");});
test("jernpande -> jernpand", function() {deepEqual( Stem("jernpande"), "jernpand");});
test("jernpansere -> jernpans", function() {deepEqual( Stem("jernpansere"), "jernpans");});
test("jernport -> jernport", function() {deepEqual( Stem("jernport"), "jernport");});
test("jernredskab -> jernredskab", function() {deepEqual( Stem("jernredskab"), "jernredskab");});
test("jernsager -> jernsag", function() {deepEqual( Stem("jernsager"), "jernsag");});
test("jernsagerne -> jernsag", function() {deepEqual( Stem("jernsagerne"), "jernsag");});
test("jernspir -> jernspir", function() {deepEqual( Stem("jernspir"), "jernspir");});
test("jernstav -> jernstav", function() {deepEqual( Stem("jernstav"), "jernstav");});
test("jernstøtte -> jernstøt", function() {deepEqual( Stem("jernstøtte"), "jernstøt");});
test("jerntænder -> jerntænd", function() {deepEqual( Stem("jerntænder"), "jerntænd");});
test("jernvogne -> jernvogn", function() {deepEqual( Stem("jernvogne"), "jernvogn");});
test("jernvæg -> jernvæg", function() {deepEqual( Stem("jernvæg"), "jernvæg");});
test("jernværktøj -> jernværktøj", function() {deepEqual( Stem("jernværktøj"), "jernværktøj");});
test("jernåg -> jernåg", function() {deepEqual( Stem("jernåg"), "jernåg");});
test("jernøkserne -> jernøks", function() {deepEqual( Stem("jernøkserne"), "jernøks");});
test("jerobam -> jerobam", function() {deepEqual( Stem("jerobam"), "jerobam");});
test("jerobams -> jerobam", function() {deepEqual( Stem("jerobams"), "jerobam");});
test("jerobeams -> jerobeam", function() {deepEqual( Stem("jerobeams"), "jerobeam");});
test("jeroboam -> jeroboam", function() {deepEqual( Stem("jeroboam"), "jeroboam");});
test("jeroboams -> jeroboam", function() {deepEqual( Stem("jeroboams"), "jeroboam");});
test("jeroham -> jeroham", function() {deepEqual( Stem("jeroham"), "jeroham");});
test("jerohatns -> jerohatn", function() {deepEqual( Stem("jerohatns"), "jerohatn");});
test("jerubba -> jerubba", function() {deepEqual( Stem("jerubba"), "jerubba");});
test("jeruels -> jeruel", function() {deepEqual( Stem("jeruels"), "jeruel");});
test("jerusalem -> jerusalem", function() {deepEqual( Stem("jerusalem"), "jerusalem");});
test("jerusalemns -> jerusalemn", function() {deepEqual( Stem("jerusalemns"), "jerusalemn");});
test("jerusalems -> jerusalem", function() {deepEqual( Stem("jerusalems"), "jerusalem");});
test("jerusja -> jerusja", function() {deepEqual( Stem("jerusja"), "jerusja");});
test("jerusålem -> jerusålem", function() {deepEqual( Stem("jerusålem"), "jerusålem");});
test("jerøboam -> jerøboam", function() {deepEqual( Stem("jerøboam"), "jerøboam");});
test("jesabel -> jesabel", function() {deepEqual( Stem("jesabel"), "jesabel");});
test("jesabels -> jesabel", function() {deepEqual( Stem("jesabels"), "jesabel");});
test("jesar -> jesar", function() {deepEqual( Stem("jesar"), "jesar");});
test("jesimiel -> jesimiel", function() {deepEqual( Stem("jesimiel"), "jesimiel");});
test("jesja -> jesja", function() {deepEqual( Stem("jesja"), "jesja");});
test("jesjaja -> jesjaja", function() {deepEqual( Stem("jesjaja"), "jesjaja");});
test("jesjana -> jesjana", function() {deepEqual( Stem("jesjana"), "jesjana");});
test("jesjanaporten -> jesjanaport", function() {deepEqual( Stem("jesjanaporten"), "jesjanaport");});
test("jesjer -> jesj", function() {deepEqual( Stem("jesjer"), "jesj");});
test("jesjimon -> jesjimon", function() {deepEqual( Stem("jesjimon"), "jesjimon");});
test("jesjimot -> jesjimot", function() {deepEqual( Stem("jesjimot"), "jesjimot");});
test("jesjisjaj -> jesjisjaj", function() {deepEqual( Stem("jesjisjaj"), "jesjisjaj");});
test("jesjjimot -> jesjjimot", function() {deepEqual( Stem("jesjjimot"), "jesjjimot");});
test("jesjohaja -> jesjohaja", function() {deepEqual( Stem("jesjohaja"), "jesjohaja");});
test("jesjurun -> jesjurun", function() {deepEqual( Stem("jesjurun"), "jesjurun");});
test("jesjuruns -> jesjurun", function() {deepEqual( Stem("jesjuruns"), "jesjurun");});
test("jesodporten -> jesodport", function() {deepEqual( Stem("jesodporten"), "jesodport");});
test("jesten -> jest", function() {deepEqual( Stem("jesten"), "jest");});
test("jestenen -> jesten", function() {deepEqual( Stem("jestenen"), "jesten");});
test("jesu -> jesu", function() {deepEqual( Stem("jesu"), "jesu");});
test("jesua -> jesua", function() {deepEqual( Stem("jesua"), "jesua");});
test("jesuas -> jesua", function() {deepEqual( Stem("jesuas"), "jesua");});
test("jesus -> jesus", function() {deepEqual( Stem("jesus"), "jesus");});
test("jesyn -> jesyn", function() {deepEqual( Stem("jesyn"), "jesyn");});
test("jet -> jet", function() {deepEqual( Stem("jet"), "jet");});
test("jeter -> jet", function() {deepEqual( Stem("jeter"), "jet");});
test("jeters -> jet", function() {deepEqual( Stem("jeters"), "jet");});
test("jetet -> jet", function() {deepEqual( Stem("jetet"), "jet");});
test("jetro -> jetro", function() {deepEqual( Stem("jetro"), "jetro");});
test("jetunnes -> jetun", function() {deepEqual( Stem("jetunnes"), "jetun");});
test("jetur -> jetur", function() {deepEqual( Stem("jetur"), "jetur");});
test("jeusj -> jeusj", function() {deepEqual( Stem("jeusj"), "jeusj");});
test("jezanja -> jezanja", function() {deepEqual( Stem("jezanja"), "jezanja");});
test("jezer -> jez", function() {deepEqual( Stem("jezer"), "jez");});
test("jezeriternes -> jezerit", function() {deepEqual( Stem("jezeriternes"), "jezerit");});
test("jeziel -> jeziel", function() {deepEqual( Stem("jeziel"), "jeziel");});
test("jiakob -> jiakob", function() {deepEqual( Stem("jiakob"), "jiakob");});
test("jibhar -> jibhar", function() {deepEqual( Stem("jibhar"), "jibhar");});
test("jibleam -> jibleam", function() {deepEqual( Stem("jibleam"), "jibleam");});
test("jibneja -> jibneja", function() {deepEqual( Stem("jibneja"), "jibneja");});
test("jibsam -> jibsam", function() {deepEqual( Stem("jibsam"), "jibsam");});
test("jid -> jid", function() {deepEqual( Stem("jid"), "jid");});
test("jidbasj -> jidbasj", function() {deepEqual( Stem("jidbasj"), "jidbasj");});
test("jiddo -> jiddo", function() {deepEqual( Stem("jiddo"), "jiddo");});
test("jidlaf -> jidlaf", function() {deepEqual( Stem("jidlaf"), "jidlaf");});
test("jifdeja -> jifdeja", function() {deepEqual( Stem("jifdeja"), "jifdeja");});
test("jifta -> jifta", function() {deepEqual( Stem("jifta"), "jifta");});
test("jig -> jig", function() {deepEqual( Stem("jig"), "jig");});
test("jigal -> jigal", function() {deepEqual( Stem("jigal"), "jigal");});
test("jigdaljahus -> jigdaljahus", function() {deepEqual( Stem("jigdaljahus"), "jigdaljahus");});
test("jimlas -> jimla", function() {deepEqual( Stem("jimlas"), "jimla");});
test("jimna -> jimna", function() {deepEqual( Stem("jimna"), "jimna");});
test("jimnas -> jimna", function() {deepEqual( Stem("jimnas"), "jimna");});
test("jimniternes -> jimnit", function() {deepEqual( Stem("jimniternes"), "jimnit");});
test("jimra -> jimra", function() {deepEqual( Stem("jimra"), "jimra");});
test("jir -> jir", function() {deepEqual( Stem("jir"), "jir");});
test("jirija -> jirija", function() {deepEqual( Stem("jirija"), "jirija");});
test("jirme -> jirm", function() {deepEqual( Stem("jirme"), "jirm");});
test("jirmeja -> jirmeja", function() {deepEqual( Stem("jirmeja"), "jirmeja");});
test("jirpe -> jirp", function() {deepEqual( Stem("jirpe"), "jirp");});
test("jisj -> jisj", function() {deepEqual( Stem("jisj"), "jisj");});
test("jisjba -> jisjba", function() {deepEqual( Stem("jisjba"), "jisjba");});
test("jisjbak -> jisjbak", function() {deepEqual( Stem("jisjbak"), "jisjbak");});
test("jisjma -> jisjma", function() {deepEqual( Stem("jisjma"), "jisjma");});
test("jisjmael -> jisjmael", function() {deepEqual( Stem("jisjmael"), "jisjmael");});
test("jisjmaels -> jisjmael", function() {deepEqual( Stem("jisjmaels"), "jisjmael");});
test("jisjmaja -> jisjmaja", function() {deepEqual( Stem("jisjmaja"), "jisjmaja");});
test("jisjmeraj -> jisjmeraj", function() {deepEqual( Stem("jisjmeraj"), "jisjmeraj");});
test("jisjpa -> jisjpa", function() {deepEqual( Stem("jisjpa"), "jisjpa");});
test("jisjpan -> jisjpan", function() {deepEqual( Stem("jisjpan"), "jisjpan");});
test("jisjva -> jisjva", function() {deepEqual( Stem("jisjva"), "jisjva");});
test("jisjvi -> jisjvi", function() {deepEqual( Stem("jisjvi"), "jisjvi");});
test("jisjviternes -> jisjvit", function() {deepEqual( Stem("jisjviternes"), "jisjvit");});
test("jiskas -> jiska", function() {deepEqual( Stem("jiskas"), "jiska");});
test("jismakjahu -> jismakjahu", function() {deepEqual( Stem("jismakjahu"), "jismakjahu");});
test("jissjija -> jissjija", function() {deepEqual( Stem("jissjija"), "jissjija");});
test("jissjijas -> jissjija", function() {deepEqual( Stem("jissjijas"), "jissjija");});
test("jitla -> jitla", function() {deepEqual( Stem("jitla"), "jitla");});
test("jitma -> jitma", function() {deepEqual( Stem("jitma"), "jitma");});
test("jitnan -> jitnan", function() {deepEqual( Stem("jitnan"), "jitnan");});
test("jitra -> jitra", function() {deepEqual( Stem("jitra"), "jitra");});
test("jitran -> jitran", function() {deepEqual( Stem("jitran"), "jitran");});
test("jitream -> jitream", function() {deepEqual( Stem("jitream"), "jitream");});
test("jitriterne -> jitrit", function() {deepEqual( Stem("jitriterne"), "jitrit");});
test("jizhar -> jizhar", function() {deepEqual( Stem("jizhar"), "jizhar");});
test("jizhariteme -> jizharitem", function() {deepEqual( Stem("jizhariteme"), "jizharitem");});
test("jizhariterne -> jizharit", function() {deepEqual( Stem("jizhariterne"), "jizharit");});
test("jizhariternes -> jizharit", function() {deepEqual( Stem("jizhariternes"), "jizharit");});
test("jizhars -> jizhar", function() {deepEqual( Stem("jizhars"), "jizhar");});
test("jizli -> jizli", function() {deepEqual( Stem("jizli"), "jizli");});
test("jizrae -> jizra", function() {deepEqual( Stem("jizrae"), "jizra");});
test("jizraja -> jizraja", function() {deepEqual( Stem("jizraja"), "jizraja");});
test("jizrajas -> jizraja", function() {deepEqual( Stem("jizrajas"), "jizraja");});
test("jizre -> jizr", function() {deepEqual( Stem("jizre"), "jizr");});
test("jizreel -> jizreel", function() {deepEqual( Stem("jizreel"), "jizreel");});
test("jizreeliten -> jizreelit", function() {deepEqual( Stem("jizreeliten"), "jizreelit");});
test("jizreels -> jizreel", function() {deepEqual( Stem("jizreels"), "jizreel");});
test("jizri -> jizri", function() {deepEqual( Stem("jizri"), "jizri");});
test("jizzija -> jizzija", function() {deepEqual( Stem("jizzija"), "jizzija");});
test("jne -> jne", function() {deepEqual( Stem("jne"), "jne");});
test("jnene -> jnen", function() {deepEqual( Stem("jnene"), "jnen");});
test("jnenes -> jnen", function() {deepEqual( Stem("jnenes"), "jnen");});
test("jnes -> jnes", function() {deepEqual( Stem("jnes"), "jnes");});
test("jo -> jo", function() {deepEqual( Stem("jo"), "jo");});
test("joa -> joa", function() {deepEqual( Stem("joa"), "joa");});
test("joab -> joab", function() {deepEqual( Stem("joab"), "joab");});
test("joabaz -> joabaz", function() {deepEqual( Stem("joabaz"), "joabaz");});
test("joabs -> joab", function() {deepEqual( Stem("joabs"), "joab");});
test("joahaz -> joahaz", function() {deepEqual( Stem("joahaz"), "joahaz");});
test("joakim -> joakim", function() {deepEqual( Stem("joakim"), "joakim");});
test("joanans -> joanan", function() {deepEqual( Stem("joanans"), "joanan");});
test("joas -> joas", function() {deepEqual( Stem("joas"), "joas");});
test("joasias -> joasia", function() {deepEqual( Stem("joasias"), "joasia");});
test("joasiases -> joasias", function() {deepEqual( Stem("joasiases"), "joasias");});
test("joasiasses -> joasias", function() {deepEqual( Stem("joasiasses"), "joasias");});
test("joasj -> joasj", function() {deepEqual( Stem("joasj"), "joasj");});
test("joasjs -> joasj", function() {deepEqual( Stem("joasjs"), "joasj");});
test("joass -> joas", function() {deepEqual( Stem("joass"), "joas");});
test("joatham -> joatham", function() {deepEqual( Stem("joatham"), "joatham");});
test("job -> job", function() {deepEqual( Stem("job"), "job");});
test("jobab -> jobab", function() {deepEqual( Stem("jobab"), "jobab");});
test("jobs -> job", function() {deepEqual( Stem("jobs"), "job");});
test("joed -> joed", function() {deepEqual( Stem("joed"), "joed");});
test("joel -> joel", function() {deepEqual( Stem("joel"), "joel");});
test("joela -> joela", function() {deepEqual( Stem("joela"), "joela");});
test("joels -> joel", function() {deepEqual( Stem("joels"), "joel");});
test("jofbata -> jofbata", function() {deepEqual( Stem("jofbata"), "jofbata");});
test("jog -> jog", function() {deepEqual( Stem("jog"), "jog");});
test("jogbeba -> jogbeba", function() {deepEqual( Stem("jogbeba"), "jogbeba");});
test("jogbeha -> jogbeha", function() {deepEqual( Stem("jogbeha"), "jogbeha");});
test("joge -> jog", function() {deepEqual( Stem("joge"), "jog");});
test("joges -> jog", function() {deepEqual( Stem("joges"), "jog");});
test("joglis -> joglis", function() {deepEqual( Stem("joglis"), "joglis");});
test("joha -> joha", function() {deepEqual( Stem("joha"), "joha");});
test("johanan -> johanan", function() {deepEqual( Stem("johanan"), "johanan");});
test("johanans -> johanan", function() {deepEqual( Stem("johanans"), "johanan");});
test("johanna -> johanna", function() {deepEqual( Stem("johanna"), "johanna");});
test("johannes -> johan", function() {deepEqual( Stem("johannes"), "johan");});
test("johaoan -> johaoan", function() {deepEqual( Stem("johaoan"), "johaoan");});
test("jojada -> jojada", function() {deepEqual( Stem("jojada"), "jojada");});
test("jojadas -> jojada", function() {deepEqual( Stem("jojadas"), "jojada");});
test("jojakim -> jojakim", function() {deepEqual( Stem("jojakim"), "jojakim");});
test("jojakims -> jojakim", function() {deepEqual( Stem("jojakims"), "jojakim");});
test("jojakin -> jojakin", function() {deepEqual( Stem("jojakin"), "jojakin");});
test("jojakins -> jojakin", function() {deepEqual( Stem("jojakins"), "jojakin");});
test("jojarib -> jojarib", function() {deepEqual( Stem("jojarib"), "jojarib");});
test("jokdeam -> jokdeam", function() {deepEqual( Stem("jokdeam"), "jokdeam");});
test("jokebed -> jokebed", function() {deepEqual( Stem("jokebed"), "jokebed");});
test("jokim -> jokim", function() {deepEqual( Stem("jokim"), "jokim");});
test("jokmeam -> jokmeam", function() {deepEqual( Stem("jokmeam"), "jokmeam");});
test("jokneam -> jokneam", function() {deepEqual( Stem("jokneam"), "jokneam");});
test("joksjan -> joksjan", function() {deepEqual( Stem("joksjan"), "joksjan");});
test("joksjans -> joksjan", function() {deepEqual( Stem("joksjans"), "joksjan");});
test("joktan -> joktan", function() {deepEqual( Stem("joktan"), "joktan");});
test("joktans -> joktan", function() {deepEqual( Stem("joktans"), "joktan");});
test("jokte -> jokt", function() {deepEqual( Stem("jokte"), "jokt");});
test("jomfru -> jomfru", function() {deepEqual( Stem("jomfru"), "jomfru");});
test("jomfrubarm -> jomfrubarm", function() {deepEqual( Stem("jomfrubarm"), "jomfrubarm");});
test("jomfruelige -> jomfru", function() {deepEqual( Stem("jomfruelige"), "jomfru");});
test("jomfruen -> jomfru", function() {deepEqual( Stem("jomfruen"), "jomfru");});
test("jomfruens -> jomfru", function() {deepEqual( Stem("jomfruens"), "jomfru");});
test("jomfruer -> jomfru", function() {deepEqual( Stem("jomfruer"), "jomfru");});
test("jomfruerne -> jomfru", function() {deepEqual( Stem("jomfruerne"), "jomfru");});
test("jomfrustand -> jomfrustand", function() {deepEqual( Stem("jomfrustand"), "jomfrustand");});
test("jomfrutegn -> jomfrutegn", function() {deepEqual( Stem("jomfrutegn"), "jomfrutegn");});
test("jomfrutegnet -> jomfrutegn", function() {deepEqual( Stem("jomfrutegnet"), "jomfrutegn");});
test("jonadab -> jonadab", function() {deepEqual( Stem("jonadab"), "jonadab");});
test("jonadabs -> jonadab", function() {deepEqual( Stem("jonadabs"), "jonadab");});
test("jonams -> jonam", function() {deepEqual( Stem("jonams"), "jonam");});
test("jonas -> jona", function() {deepEqual( Stem("jonas"), "jona");});
test("jonatan -> jonatan", function() {deepEqual( Stem("jonatan"), "jonatan");});
test("jonatans -> jonatan", function() {deepEqual( Stem("jonatans"), "jonatan");});
test("joppe -> jop", function() {deepEqual( Stem("joppe"), "jop");});
test("joraj -> joraj", function() {deepEqual( Stem("joraj"), "joraj");});
test("joram -> joram", function() {deepEqual( Stem("joram"), "joram");});
test("jorams -> joram", function() {deepEqual( Stem("jorams"), "joram");});
test("joras -> jora", function() {deepEqual( Stem("joras"), "jora");});
test("jord -> jord", function() {deepEqual( Stem("jord"), "jord");});
test("jordan -> jordan", function() {deepEqual( Stem("jordan"), "jordan");});
test("jordandalen -> jordandal", function() {deepEqual( Stem("jordandalen"), "jordandal");});
test("jordanegnen -> jordanegn", function() {deepEqual( Stem("jordanegnen"), "jordanegn");});
test("jordanegnens -> jordanegn", function() {deepEqual( Stem("jordanegnens"), "jordanegn");});
test("jordans -> jordan", function() {deepEqual( Stem("jordans"), "jordan");});
test("jordansletten -> jordanslet", function() {deepEqual( Stem("jordansletten"), "jordanslet");});
test("jordbeg -> jordbeg", function() {deepEqual( Stem("jordbeg"), "jordbeg");});
test("jordbeggruber -> jordbeggrub", function() {deepEqual( Stem("jordbeggruber"), "jordbeggrub");});
test("jordboere -> jordbo", function() {deepEqual( Stem("jordboere"), "jordbo");});
test("jordboernes -> jordbo", function() {deepEqual( Stem("jordboernes"), "jordbo");});
test("jorddyngen -> jorddyng", function() {deepEqual( Stem("jorddyngen"), "jorddyng");});
test("jorde -> jord", function() {deepEqual( Stem("jorde"), "jord");});
test("jordede -> jorded", function() {deepEqual( Stem("jordede"), "jorded");});
test("jordedes -> jorded", function() {deepEqual( Stem("jordedes"), "jorded");});
test("jordefærd -> jordefærd", function() {deepEqual( Stem("jordefærd"), "jordefærd");});
test("jordegods -> jordegod", function() {deepEqual( Stem("jordegods"), "jordegod");});
test("jordegodset -> jordegods", function() {deepEqual( Stem("jordegodset"), "jordegods");});
test("jordeklæder -> jordeklæd", function() {deepEqual( Stem("jordeklæder"), "jordeklæd");});
test("jordemoderen -> jordemod", function() {deepEqual( Stem("jordemoderen"), "jordemod");});
test("jordemødre -> jordemødr", function() {deepEqual( Stem("jordemødre"), "jordemødr");});
test("jordemødrene -> jordemødr", function() {deepEqual( Stem("jordemødrene"), "jordemødr");});
test("jorden -> jord", function() {deepEqual( Stem("jorden"), "jord");});
test("jordens -> jord", function() {deepEqual( Stem("jordens"), "jord");});
test("jorder -> jord", function() {deepEqual( Stem("jorder"), "jord");});
test("jorderig -> jorder", function() {deepEqual( Stem("jorderig"), "jorder");});
test("jorderige -> jorder", function() {deepEqual( Stem("jorderige"), "jorder");});
test("jorderiges -> jorder", function() {deepEqual( Stem("jorderiges"), "jorder");});
test("jorderigs -> jorder", function() {deepEqual( Stem("jorderigs"), "jorder");});
test("jordes -> jord", function() {deepEqual( Stem("jordes"), "jord");});
test("jordet -> jord", function() {deepEqual( Stem("jordet"), "jord");});
test("jordhuller -> jordhul", function() {deepEqual( Stem("jordhuller"), "jordhul");});
test("jordisk -> jordisk", function() {deepEqual( Stem("jordisk"), "jordisk");});
test("jordiske -> jordisk", function() {deepEqual( Stem("jordiske"), "jordisk");});
test("jordiskes -> jordisk", function() {deepEqual( Stem("jordiskes"), "jordisk");});
test("jordlod -> jordlod", function() {deepEqual( Stem("jordlod"), "jordlod");});
test("jords -> jord", function() {deepEqual( Stem("jords"), "jord");});
test("jordskælv -> jordskælv", function() {deepEqual( Stem("jordskælv"), "jordskælv");});
test("jordskælvet -> jordskælv", function() {deepEqual( Stem("jordskælvet"), "jordskælv");});
test("jordsmonnets -> jordsmon", function() {deepEqual( Stem("jordsmonnets"), "jordsmon");});
test("jordstykker -> jordstyk", function() {deepEqual( Stem("jordstykker"), "jordstyk");});
test("jordstykket -> jordstyk", function() {deepEqual( Stem("jordstykket"), "jordstyk");});
test("jorims -> jorim", function() {deepEqual( Stem("jorims"), "jorim");});
test("jorke -> jork", function() {deepEqual( Stem("jorke"), "jork");});
test("josafaf -> josafaf", function() {deepEqual( Stem("josafaf"), "josafaf");});
test("josafat -> josafat", function() {deepEqual( Stem("josafat"), "josafat");});
test("josafats -> josafat", function() {deepEqual( Stem("josafats"), "josafat");});
test("josatat -> josatat", function() {deepEqual( Stem("josatat"), "josatat");});
test("josef -> josef", function() {deepEqual( Stem("josef"), "josef");});
test("josefs -> josef", function() {deepEqual( Stem("josefs"), "josef");});
test("joses -> jos", function() {deepEqual( Stem("joses"), "jos");});
test("josets -> jos", function() {deepEqual( Stem("josets"), "jos");});
test("josias -> josia", function() {deepEqual( Stem("josias"), "josia");});
test("josiases -> josias", function() {deepEqual( Stem("josiases"), "josias");});
test("josiass -> josias", function() {deepEqual( Stem("josiass"), "josias");});
test("josifjas -> josifja", function() {deepEqual( Stem("josifjas"), "josifja");});
test("josja -> josja", function() {deepEqual( Stem("josja"), "josja");});
test("josjab -> josjab", function() {deepEqual( Stem("josjab"), "josjab");});
test("josjafat -> josjafat", function() {deepEqual( Stem("josjafat"), "josjafat");});
test("josjafats -> josjafat", function() {deepEqual( Stem("josjafats"), "josjafat");});
test("josjavja -> josjavja", function() {deepEqual( Stem("josjavja"), "josjavja");});
test("josjbekasja -> josjbekasja", function() {deepEqual( Stem("josjbekasja"), "josjbekasja");});
test("josjeba -> josjeba", function() {deepEqual( Stem("josjeba"), "josjeba");});
test("josjebai -> josjebai", function() {deepEqual( Stem("josjebai"), "josjebai");});
test("josjibja -> josjibja", function() {deepEqual( Stem("josjibja"), "josjibja");});
test("josjija -> josjija", function() {deepEqual( Stem("josjija"), "josjija");});
test("josua -> josua", function() {deepEqual( Stem("josua"), "josua");});
test("josuas -> josua", function() {deepEqual( Stem("josuas"), "josua");});
test("josva -> josva", function() {deepEqual( Stem("josva"), "josva");});
test("jotam -> jotam", function() {deepEqual( Stem("jotam"), "jotam");});
test("jotams -> jotam", function() {deepEqual( Stem("jotams"), "jotam");});
test("jotba -> jotba", function() {deepEqual( Stem("jotba"), "jotba");});
test("jotbata -> jotbata", function() {deepEqual( Stem("jotbata"), "jotbata");});
test("jozabad -> jozabad", function() {deepEqual( Stem("jozabad"), "jozabad");});
test("jozadak -> jozadak", function() {deepEqual( Stem("jozadak"), "jozadak");});
test("jozadaks -> jozadak", function() {deepEqual( Stem("jozadaks"), "jozadak");});
test("jozahad -> jozahad", function() {deepEqual( Stem("jozahad"), "jozahad");});
test("jozakar -> jozakar", function() {deepEqual( Stem("jozakar"), "jozakar");});
test("jubal -> jubal", function() {deepEqual( Stem("jubal"), "jubal");});
test("jubel -> jubel", function() {deepEqual( Stem("jubel"), "jubel");});
test("jubelofre -> jubelofr", function() {deepEqual( Stem("jubelofre"), "jubelofr");});
test("jubelråb -> jubelråb", function() {deepEqual( Stem("jubelråb"), "jubelråb");});
test("jubelråbet -> jubelråb", function() {deepEqual( Stem("jubelråbet"), "jubelråb");});
test("jubelskrig -> jubelskr", function() {deepEqual( Stem("jubelskrig"), "jubelskr");});
test("jubeltoner -> jubelton", function() {deepEqual( Stem("jubeltoner"), "jubelton");});
test("jubelår -> jubelår", function() {deepEqual( Stem("jubelår"), "jubelår");});
test("jubelåret -> jubelår", function() {deepEqual( Stem("jubelåret"), "jubelår");});
test("jubl -> jubl", function() {deepEqual( Stem("jubl"), "jubl");});
test("juble -> jubl", function() {deepEqual( Stem("juble"), "jubl");});
test("jubled -> jubled", function() {deepEqual( Stem("jubled"), "jubled");});
test("jublede -> jubled", function() {deepEqual( Stem("jublede"), "jubled");});
test("jublende -> jubl", function() {deepEqual( Stem("jublende"), "jubl");});
test("jublendes -> jubl", function() {deepEqual( Stem("jublendes"), "jubl");});
test("jubler -> jubl", function() {deepEqual( Stem("jubler"), "jubl");});
test("jubles -> jubl", function() {deepEqual( Stem("jubles"), "jubl");});
test("juda -> juda", function() {deepEqual( Stem("juda"), "juda");});
test("judas -> juda", function() {deepEqual( Stem("judas"), "juda");});
test("judases -> judas", function() {deepEqual( Stem("judases"), "judas");});
test("judit -> judit", function() {deepEqual( Stem("judit"), "judit");});
test("judos -> judo", function() {deepEqual( Stem("judos"), "judo");});
test("judæa -> judæa", function() {deepEqual( Stem("judæa"), "judæa");});
test("judæas -> judæa", function() {deepEqual( Stem("judæas"), "judæa");});
test("judæee -> judæe", function() {deepEqual( Stem("judæee"), "judæe");});
test("judæere -> judæ", function() {deepEqual( Stem("judæere"), "judæ");});
test("judæerne -> judæ", function() {deepEqual( Stem("judæerne"), "judæ");});
test("judæernes -> judæ", function() {deepEqual( Stem("judæernes"), "judæ");});
test("judæisk -> judæisk", function() {deepEqual( Stem("judæisk"), "judæisk");});
test("judæiske -> judæisk", function() {deepEqual( Stem("judæiske"), "judæisk");});
test("judærere -> judær", function() {deepEqual( Stem("judærere"), "judær");});
test("jukal -> jukal", function() {deepEqual( Stem("jukal"), "jukal");});
test("julia -> julia", function() {deepEqual( Stem("julia"), "julia");});
test("julius -> julius", function() {deepEqual( Stem("julius"), "julius");});
test("junias -> junia", function() {deepEqual( Stem("junias"), "junia");});
test("jusjab -> jusjab", function() {deepEqual( Stem("jusjab"), "jusjab");});
test("just -> just", function() {deepEqual( Stem("just"), "just");});
test("justus -> justus", function() {deepEqual( Stem("justus"), "justus");});
test("jutta -> jutta", function() {deepEqual( Stem("jutta"), "jutta");});
test("jåkan -> jåkan", function() {deepEqual( Stem("jåkan"), "jåkan");});
test("jæger -> jæg", function() {deepEqual( Stem("jæger"), "jæg");});
test("jægere -> jæg", function() {deepEqual( Stem("jægere"), "jæg");});
test("jæget -> jæg", function() {deepEqual( Stem("jæget"), "jæg");});
test("jærtegn -> jærtegn", function() {deepEqual( Stem("jærtegn"), "jærtegn");});
test("jævn -> jævn", function() {deepEqual( Stem("jævn"), "jævn");});
test("jævnaldrende -> jævnaldr", function() {deepEqual( Stem("jævnaldrende"), "jævnaldr");});
test("jævndøgnstide -> jævndøgnstid", function() {deepEqual( Stem("jævndøgnstide"), "jævndøgnstid");});
test("jævne -> jævn", function() {deepEqual( Stem("jævne"), "jævn");});
test("jævnede -> jævned", function() {deepEqual( Stem("jævnede"), "jævned");});
test("jævner -> jævn", function() {deepEqual( Stem("jævner"), "jævn");});
test("jævnes -> jævn", function() {deepEqual( Stem("jævnes"), "jævn");});
test("jævnet -> jævn", function() {deepEqual( Stem("jævnet"), "jævn");});
test("jævnlige -> jævn", function() {deepEqual( Stem("jævnlige"), "jævn");});
test("jævnstille -> jævnstil", function() {deepEqual( Stem("jævnstille"), "jævnstil");});
test("jævnt -> jævnt", function() {deepEqual( Stem("jævnt"), "jævnt");});
test("jøde -> jød", function() {deepEqual( Stem("jøde"), "jød");});
test("jødedommen -> jødedom", function() {deepEqual( Stem("jødedommen"), "jødedom");});
test("jødeme -> jødem", function() {deepEqual( Stem("jødeme"), "jødem");});
test("jødemes -> jødem", function() {deepEqual( Stem("jødemes"), "jødem");});
test("jøden -> jød", function() {deepEqual( Stem("jøden"), "jød");});
test("jødens -> jød", function() {deepEqual( Stem("jødens"), "jød");});
test("jøder -> jød", function() {deepEqual( Stem("jøder"), "jød");});
test("jøderne -> jød", function() {deepEqual( Stem("jøderne"), "jød");});
test("jødernes -> jød", function() {deepEqual( Stem("jødernes"), "jød");});
test("jøders -> jød", function() {deepEqual( Stem("jøders"), "jød");});
test("jødes -> jød", function() {deepEqual( Stem("jødes"), "jød");});
test("jødinde -> jødind", function() {deepEqual( Stem("jødinde"), "jødind");});
test("jødisk -> jødisk", function() {deepEqual( Stem("jødisk"), "jødisk");});
test("jødiske -> jødisk", function() {deepEqual( Stem("jødiske"), "jødisk");});
test("k -> k", function() {deepEqual( Stem("k"), "k");});
test("kab -> kab", function() {deepEqual( Stem("kab"), "kab");});
test("kabbon -> kabbon", function() {deepEqual( Stem("kabbon"), "kabbon");});
test("kabul -> kabul", function() {deepEqual( Stem("kabul"), "kabul");});
test("kabze -> kabz", function() {deepEqual( Stem("kabze"), "kabz");});
test("kabzeel -> kabzeel", function() {deepEqual( Stem("kabzeel"), "kabzeel");});
test("kadesj -> kadesj", function() {deepEqual( Stem("kadesj"), "kadesj");});
test("kadesjs -> kadesj", function() {deepEqual( Stem("kadesjs"), "kadesj");});
test("kadmiel -> kadmiel", function() {deepEqual( Stem("kadmiel"), "kadmiel");});
test("kadmiels -> kadmiel", function() {deepEqual( Stem("kadmiels"), "kadmiel");});
test("kadmoniterne -> kadmonit", function() {deepEqual( Stem("kadmoniterne"), "kadmonit");});
test("kaft -> kaft", function() {deepEqual( Stem("kaft"), "kaft");});
test("kaftor -> kaftor", function() {deepEqual( Stem("kaftor"), "kaftor");});
test("kaftorerne -> kaftor", function() {deepEqual( Stem("kaftorerne"), "kaftor");});
test("kaftors -> kaftor", function() {deepEqual( Stem("kaftors"), "kaftor");});
test("kage -> kag", function() {deepEqual( Stem("kage"), "kag");});
test("kager -> kag", function() {deepEqual( Stem("kager"), "kag");});
test("kagerne -> kag", function() {deepEqual( Stem("kagerne"), "kag");});
test("kain -> kain", function() {deepEqual( Stem("kain"), "kain");});
test("kains -> kain", function() {deepEqual( Stem("kains"), "kain");});
test("kajfas -> kajfa", function() {deepEqual( Stem("kajfas"), "kajfa");});
test("kajin -> kajin", function() {deepEqual( Stem("kajin"), "kajin");});
test("kajins -> kajin", function() {deepEqual( Stem("kajins"), "kajin");});
test("kajnans -> kajnan", function() {deepEqual( Stem("kajnans"), "kajnan");});
test("kajus -> kajus", function() {deepEqual( Stem("kajus"), "kajus");});
test("kald -> kald", function() {deepEqual( Stem("kald"), "kald");});
test("kalde -> kald", function() {deepEqual( Stem("kalde"), "kald");});
test("kaldede -> kalded", function() {deepEqual( Stem("kaldede"), "kalded");});
test("kaldelse -> kald", function() {deepEqual( Stem("kaldelse"), "kald");});
test("kaldelsen -> kald", function() {deepEqual( Stem("kaldelsen"), "kald");});
test("kalder -> kald", function() {deepEqual( Stem("kalder"), "kald");});
test("kaldes -> kald", function() {deepEqual( Stem("kaldes"), "kald");});
test("kaldet -> kald", function() {deepEqual( Stem("kaldet"), "kald");});
test("kaldt -> kald", function() {deepEqual( Stem("kaldt"), "kald");});
test("kaldte -> kald", function() {deepEqual( Stem("kaldte"), "kald");});
test("kaldtes -> kald", function() {deepEqual( Stem("kaldtes"), "kald");});
test("kaldæa -> kaldæa", function() {deepEqual( Stem("kaldæa"), "kaldæa");});
test("kaldæas -> kaldæa", function() {deepEqual( Stem("kaldæas"), "kaldæa");});
test("kaldæer -> kaldæ", function() {deepEqual( Stem("kaldæer"), "kaldæ");});
test("kaldæere -> kaldæ", function() {deepEqual( Stem("kaldæere"), "kaldæ");});
test("kaldæeren -> kaldæ", function() {deepEqual( Stem("kaldæeren"), "kaldæ");});
test("kaldæeres -> kaldæ", function() {deepEqual( Stem("kaldæeres"), "kaldæ");});
test("kaldæerne -> kaldæ", function() {deepEqual( Stem("kaldæerne"), "kaldæ");});
test("kaldæernes -> kaldæ", function() {deepEqual( Stem("kaldæernes"), "kaldæ");});
test("kaldæiske -> kaldæisk", function() {deepEqual( Stem("kaldæiske"), "kaldæisk");});
test("kaldærenes -> kaldær", function() {deepEqual( Stem("kaldærenes"), "kaldær");});
test("kaleb -> kaleb", function() {deepEqual( Stem("kaleb"), "kaleb");});
test("kalebit -> kalebit", function() {deepEqual( Stem("kalebit"), "kalebit");});
test("kalebs -> kaleb", function() {deepEqual( Stem("kalebs"), "kaleb");});
test("kaljunet -> kaljun", function() {deepEqual( Stem("kaljunet"), "kaljun");});
test("kalk -> kalk", function() {deepEqual( Stem("kalk"), "kalk");});
test("kalke -> kalk", function() {deepEqual( Stem("kalke"), "kalk");});
test("kalkede -> kalked", function() {deepEqual( Stem("kalkede"), "kalked");});
test("kalkedon -> kalkedon", function() {deepEqual( Stem("kalkedon"), "kalkedon");});
test("kalken -> kalk", function() {deepEqual( Stem("kalken"), "kalk");});
test("kalkol -> kalkol", function() {deepEqual( Stem("kalkol"), "kalkol");});
test("kalksten -> kalkst", function() {deepEqual( Stem("kalksten"), "kalkst");});
test("kallaj -> kallaj", function() {deepEqual( Stem("kallaj"), "kallaj");});
test("kalmus -> kalmus", function() {deepEqual( Stem("kalmus"), "kalmus");});
test("kalne -> kaln", function() {deepEqual( Stem("kalne"), "kaln");});
test("kalno -> kalno", function() {deepEqual( Stem("kalno"), "kalno");});
test("kalv -> kalv", function() {deepEqual( Stem("kalv"), "kalv");});
test("kalve -> kalv", function() {deepEqual( Stem("kalve"), "kalv");});
test("kalven -> kalv", function() {deepEqual( Stem("kalven"), "kalv");});
test("kalvene -> kalv", function() {deepEqual( Stem("kalvene"), "kalv");});
test("kalvs -> kalv", function() {deepEqual( Stem("kalvs"), "kalv");});
test("kam -> kam", function() {deepEqual( Stem("kam"), "kam");});
test("kamel -> kamel", function() {deepEqual( Stem("kamel"), "kamel");});
test("kamelen -> kamel", function() {deepEqual( Stem("kamelen"), "kamel");});
test("kameler -> kamel", function() {deepEqual( Stem("kameler"), "kamel");});
test("kamelerne -> kamel", function() {deepEqual( Stem("kamelerne"), "kamel");});
test("kamelernes -> kamel", function() {deepEqual( Stem("kamelernes"), "kamel");});
test("kamelers -> kamel", function() {deepEqual( Stem("kamelers"), "kamel");});
test("kamelhoppe -> kamelhop", function() {deepEqual( Stem("kamelhoppe"), "kamelhop");});
test("kamelhopper -> kamelhop", function() {deepEqual( Stem("kamelhopper"), "kamelhop");});
test("kamelhår -> kamelhår", function() {deepEqual( Stem("kamelhår"), "kamelhår");});
test("kamelladninger -> kamelladning", function() {deepEqual( Stem("kamelladninger"), "kamelladning");});
test("kamels -> kamel", function() {deepEqual( Stem("kamels"), "kamel");});
test("kamelsadlen -> kamelsadl", function() {deepEqual( Stem("kamelsadlen"), "kamelsadl");});
test("kamiternes -> kamit", function() {deepEqual( Stem("kamiternes"), "kamit");});
test("kamme -> kam", function() {deepEqual( Stem("kamme"), "kam");});
test("kammer -> kam", function() {deepEqual( Stem("kammer"), "kam");});
test("kammeret -> kam", function() {deepEqual( Stem("kammeret"), "kam");});
test("kammerherre -> kammerher", function() {deepEqual( Stem("kammerherre"), "kammerher");});
test("kamoisinrøde -> kamoisinrød", function() {deepEqual( Stem("kamoisinrøde"), "kamoisinrød");});
test("kamon -> kamon", function() {deepEqual( Stem("kamon"), "kamon");});
test("kamp -> kamp", function() {deepEqual( Stem("kamp"), "kamp");});
test("kampberedthed -> kampbered", function() {deepEqual( Stem("kampberedthed"), "kampbered");});
test("kampdygtige -> kampdyg", function() {deepEqual( Stem("kampdygtige"), "kampdyg");});
test("kampe -> kamp", function() {deepEqual( Stem("kampe"), "kamp");});
test("kampen -> kamp", function() {deepEqual( Stem("kampen"), "kamp");});
test("kampene -> kamp", function() {deepEqual( Stem("kampene"), "kamp");});
test("kampens -> kamp", function() {deepEqual( Stem("kampens"), "kamp");});
test("kampgny -> kampgny", function() {deepEqual( Stem("kampgny"), "kampgny");});
test("kamplegene -> kampleg", function() {deepEqual( Stem("kamplegene"), "kampleg");});
test("kamplyst -> kamplyst", function() {deepEqual( Stem("kamplyst"), "kamplyst");});
test("kamppladsen -> kampplads", function() {deepEqual( Stem("kamppladsen"), "kampplads");});
test("kamprustede -> kamprusted", function() {deepEqual( Stem("kamprustede"), "kamprusted");});
test("kampråb -> kampråb", function() {deepEqual( Stem("kampråb"), "kampråb");});
test("kampråbet -> kampråb", function() {deepEqual( Stem("kampråbet"), "kampråb");});
test("kampskrig -> kampskr", function() {deepEqual( Stem("kampskrig"), "kampskr");});
test("kamre -> kamr", function() {deepEqual( Stem("kamre"), "kamr");});
test("kamrene -> kamr", function() {deepEqual( Stem("kamrene"), "kamr");});
test("kams -> kam", function() {deepEqual( Stem("kams"), "kam");});
test("kan -> kan", function() {deepEqual( Stem("kan"), "kan");});
test("kana -> kana", function() {deepEqual( Stem("kana"), "kana");});
test("kanaanæernes -> kanaanæ", function() {deepEqual( Stem("kanaanæernes"), "kanaanæ");});
test("kanabækken -> kanabæk", function() {deepEqual( Stem("kanabækken"), "kanabæk");});
test("kanaler -> kanal", function() {deepEqual( Stem("kanaler"), "kanal");});
test("kanalerne -> kanal", function() {deepEqual( Stem("kanalerne"), "kanal");});
test("kananæeren -> kananæ", function() {deepEqual( Stem("kananæeren"), "kananæ");});
test("kananæisk -> kananæisk", function() {deepEqual( Stem("kananæisk"), "kananæisk");});
test("kandake -> kandak", function() {deepEqual( Stem("kandake"), "kandak");});
test("kande -> kand", function() {deepEqual( Stem("kande"), "kand");});
test("kander -> kand", function() {deepEqual( Stem("kander"), "kand");});
test("kanderne -> kand", function() {deepEqual( Stem("kanderne"), "kand");});
test("kanel -> kanel", function() {deepEqual( Stem("kanel"), "kanel");});
test("kanelbark -> kanelbark", function() {deepEqual( Stem("kanelbark"), "kanelbark");});
test("kanjas -> kanja", function() {deepEqual( Stem("kanjas"), "kanja");});
test("kanne -> kan", function() {deepEqual( Stem("kanne"), "kan");});
test("kanske -> kansk", function() {deepEqual( Stem("kanske"), "kansk");});
test("kansler -> kansl", function() {deepEqual( Stem("kansler"), "kansl");});
test("kansleren -> kansl", function() {deepEqual( Stem("kansleren"), "kansl");});
test("kant -> kant", function() {deepEqual( Stem("kant"), "kant");});
test("kanten -> kant", function() {deepEqual( Stem("kanten"), "kant");});
test("kanter -> kant", function() {deepEqual( Stem("kanter"), "kant");});
test("kantlisten -> kantlist", function() {deepEqual( Stem("kantlisten"), "kantlist");});
test("kanån -> kanån", function() {deepEqual( Stem("kanån"), "kanån");});
test("kanåns -> kanån", function() {deepEqual( Stem("kanåns"), "kanån");});
test("kanånæere -> kanånæ", function() {deepEqual( Stem("kanånæere"), "kanånæ");});
test("kanånæeres -> kanånæ", function() {deepEqual( Stem("kanånæeres"), "kanånæ");});
test("kanånæerne -> kanånæ", function() {deepEqual( Stem("kanånæerne"), "kanånæ");});
test("kao -> kao", function() {deepEqual( Stem("kao"), "kao");});
test("kap -> kap", function() {deepEqual( Stem("kap"), "kap");});
test("kapernaum -> kapernaum", function() {deepEqual( Stem("kapernaum"), "kapernaum");});
test("kapersbærret -> kapersbær", function() {deepEqual( Stem("kapersbærret"), "kapersbær");});
test("kappadokien -> kappadoki", function() {deepEqual( Stem("kappadokien"), "kappadoki");});
test("kappe -> kap", function() {deepEqual( Stem("kappe"), "kap");});
test("kappede -> kapped", function() {deepEqual( Stem("kappede"), "kapped");});
test("kappeflig -> kappef", function() {deepEqual( Stem("kappeflig"), "kappef");});
test("kappen -> kap", function() {deepEqual( Stem("kappen"), "kap");});
test("kappens -> kap", function() {deepEqual( Stem("kappens"), "kap");});
test("kapper -> kap", function() {deepEqual( Stem("kapper"), "kap");});
test("kapperne -> kap", function() {deepEqual( Stem("kapperne"), "kap");});
test("kappes -> kap", function() {deepEqual( Stem("kappes"), "kap");});
test("kar -> kar", function() {deepEqual( Stem("kar"), "kar");});
test("karan -> karan", function() {deepEqual( Stem("karan"), "karan");});
test("karavane -> karavan", function() {deepEqual( Stem("karavane"), "karavan");});
test("karavaner -> karavan", function() {deepEqual( Stem("karavaner"), "karavan");});
test("kareas -> karea", function() {deepEqual( Stem("kareas"), "karea");});
test("karens -> kar", function() {deepEqual( Stem("karens"), "kar");});
test("karerne -> kar", function() {deepEqual( Stem("karerne"), "kar");});
test("karfunkler -> karfunkl", function() {deepEqual( Stem("karfunkler"), "karfunkl");});
test("karka -> karka", function() {deepEqual( Stem("karka"), "karka");});
test("karkas -> karka", function() {deepEqual( Stem("karkas"), "karka");});
test("karkemisj -> karkemisj", function() {deepEqual( Stem("karkemisj"), "karkemisj");});
test("karkor -> karkor", function() {deepEqual( Stem("karkor"), "karkor");});
test("karl -> karl", function() {deepEqual( Stem("karl"), "karl");});
test("karle -> karl", function() {deepEqual( Stem("karle"), "karl");});
test("karlen -> karl", function() {deepEqual( Stem("karlen"), "karl");});
test("karlene -> karl", function() {deepEqual( Stem("karlene"), "karl");});
test("karmel -> karmel", function() {deepEqual( Stem("karmel"), "karmel");});
test("karmeliten -> karmelit", function() {deepEqual( Stem("karmeliten"), "karmelit");});
test("karmels -> karmel", function() {deepEqual( Stem("karmels"), "karmel");});
test("karmi -> karmi", function() {deepEqual( Stem("karmi"), "karmi");});
test("karmis -> karmis", function() {deepEqual( Stem("karmis"), "karmis");});
test("karmiternes -> karmit", function() {deepEqual( Stem("karmiternes"), "karmit");});
test("karmoisin -> karmoisin", function() {deepEqual( Stem("karmoisin"), "karmoisin");});
test("karmoisinfarvet -> karmoisinfarv", function() {deepEqual( Stem("karmoisinfarvet"), "karmoisinfarv");});
test("karmoisinrøde -> karmoisinrød", function() {deepEqual( Stem("karmoisinrøde"), "karmoisinrød");});
test("karmoisinrødt -> karmoisinrød", function() {deepEqual( Stem("karmoisinrødt"), "karmoisinrød");});
test("karnajim -> karnajim", function() {deepEqual( Stem("karnajim"), "karnajim");});
test("karneol -> karneol", function() {deepEqual( Stem("karneol"), "karneol");});
test("karpus -> karpus", function() {deepEqual( Stem("karpus"), "karpus");});
test("karrene -> kar", function() {deepEqual( Stem("karrene"), "kar");});
test("karret -> kar", function() {deepEqual( Stem("karret"), "kar");});
test("karrige -> kar", function() {deepEqual( Stem("karrige"), "kar");});
test("karrighed -> kar", function() {deepEqual( Stem("karrighed"), "kar");});
test("karsjena -> karsjena", function() {deepEqual( Stem("karsjena"), "karsjena");});
test("karsk -> karsk", function() {deepEqual( Stem("karsk"), "karsk");});
test("karskt -> karsk", function() {deepEqual( Stem("karskt"), "karsk");});
test("karta -> karta", function() {deepEqual( Stem("karta"), "karta");});
test("kasdim -> kasdim", function() {deepEqual( Stem("kasdim"), "kasdim");});
test("kasifja -> kasifja", function() {deepEqual( Stem("kasifja"), "kasifja");});
test("kasluherne -> kasluh", function() {deepEqual( Stem("kasluherne"), "kasluh");});
test("kassia -> kassia", function() {deepEqual( Stem("kassia"), "kassia");});
test("kast -> kast", function() {deepEqual( Stem("kast"), "kast");});
test("kaste -> kast", function() {deepEqual( Stem("kaste"), "kast");});
test("kasted -> kasted", function() {deepEqual( Stem("kasted"), "kasted");});
test("kastede -> kasted", function() {deepEqual( Stem("kastede"), "kasted");});
test("kastedes -> kasted", function() {deepEqual( Stem("kastedes"), "kasted");});
test("kaster -> kast", function() {deepEqual( Stem("kaster"), "kast");});
test("kastere -> kast", function() {deepEqual( Stem("kastere"), "kast");});
test("kastes -> kast", function() {deepEqual( Stem("kastes"), "kast");});
test("kasteskovl -> kasteskovl", function() {deepEqual( Stem("kasteskovl"), "kasteskovl");});
test("kastet -> kast", function() {deepEqual( Stem("kastet"), "kast");});
test("kastevåben -> kastevåb", function() {deepEqual( Stem("kastevåben"), "kastevåb");});
test("kastning -> kastning", function() {deepEqual( Stem("kastning"), "kastning");});
test("kattat -> kattat", function() {deepEqual( Stem("kattat"), "kattat");});
test("kazin -> kazin", function() {deepEqual( Stem("kazin"), "kazin");});
test("ke -> ke", function() {deepEqual( Stem("ke"), "ke");});
test("kebar -> kebar", function() {deepEqual( Stem("kebar"), "kebar");});
test("kebatiterne -> kebatit", function() {deepEqual( Stem("kebatiterne"), "kebatit");});
test("kebelata -> kebelata", function() {deepEqual( Stem("kebelata"), "kebelata");});
test("ked -> ked", function() {deepEqual( Stem("ked"), "ked");});
test("kedar -> kedar", function() {deepEqual( Stem("kedar"), "kedar");});
test("kedars -> kedar", function() {deepEqual( Stem("kedars"), "kedar");});
test("kede -> ked", function() {deepEqual( Stem("kede"), "ked");});
test("kedel -> kedel", function() {deepEqual( Stem("kedel"), "kedel");});
test("kedelen -> kedel", function() {deepEqual( Stem("kedelen"), "kedel");});
test("kedemot -> kedemot", function() {deepEqual( Stem("kedemot"), "kedemot");});
test("kedemots -> kedemot", function() {deepEqual( Stem("kedemots"), "kedemot");});
test("keder -> ked", function() {deepEqual( Stem("keder"), "ked");});
test("kedesj -> kedesj", function() {deepEqual( Stem("kedesj"), "kedesj");});
test("kedler -> kedl", function() {deepEqual( Stem("kedler"), "kedl");});
test("kedma -> kedma", function() {deepEqual( Stem("kedma"), "kedma");});
test("kedorlaomer -> kedorlaom", function() {deepEqual( Stem("kedorlaomer"), "kedorlaom");});
test("kedrons -> kedron", function() {deepEqual( Stem("kedrons"), "kedron");});
test("kefar -> kefar", function() {deepEqual( Stem("kefar"), "kefar");});
test("kefas -> kefa", function() {deepEqual( Stem("kefas"), "kefa");});
test("kefira -> kefira", function() {deepEqual( Stem("kefira"), "kefira");});
test("kefiras -> kefira", function() {deepEqual( Stem("kefiras"), "kefira");});
test("kefirim -> kefirim", function() {deepEqual( Stem("kefirim"), "kefirim");});
test("kefra -> kefra", function() {deepEqual( Stem("kefra"), "kefra");});
test("keh -> keh", function() {deepEqual( Stem("keh"), "keh");});
test("kehat -> kehat", function() {deepEqual( Stem("kehat"), "kehat");});
test("kehatiter -> kehatit", function() {deepEqual( Stem("kehatiter"), "kehatit");});
test("kehatiterne -> kehatit", function() {deepEqual( Stem("kehatiterne"), "kehatit");});
test("kehatiternes -> kehatit", function() {deepEqual( Stem("kehatiternes"), "kehatit");});
test("kehatiters -> kehatit", function() {deepEqual( Stem("kehatiters"), "kehatit");});
test("kehats -> kehat", function() {deepEqual( Stem("kehats"), "kehat");});
test("kehelata -> kehelata", function() {deepEqual( Stem("kehelata"), "kehelata");});
test("keila -> keila", function() {deepEqual( Stem("keila"), "keila");});
test("kejser -> kejs", function() {deepEqual( Stem("kejser"), "kejs");});
test("kejseren -> kejs", function() {deepEqual( Stem("kejseren"), "kejs");});
test("kejserens -> kejs", function() {deepEqual( Stem("kejserens"), "kejs");});
test("kejserlige -> kejser", function() {deepEqual( Stem("kejserlige"), "kejser");});
test("kejthåndede -> kejthånded", function() {deepEqual( Stem("kejthåndede"), "kejthånded");});
test("kejthåndet -> kejthånd", function() {deepEqual( Stem("kejthåndet"), "kejthånd");});
test("kela -> kela", function() {deepEqual( Stem("kela"), "kela");});
test("kelaja -> kelaja", function() {deepEqual( Stem("kelaja"), "kelaja");});
test("kelal -> kelal", function() {deepEqual( Stem("kelal"), "kelal");});
test("kelita -> kelita", function() {deepEqual( Stem("kelita"), "kelita");});
test("kelub -> kelub", function() {deepEqual( Stem("kelub"), "kelub");});
test("kelubaj -> kelubaj", function() {deepEqual( Stem("kelubaj"), "kelubaj");});
test("kelubs -> kelub", function() {deepEqual( Stem("kelubs"), "kelub");});
test("keluhu -> keluhu", function() {deepEqual( Stem("keluhu"), "keluhu");});
test("kemosj -> kemosj", function() {deepEqual( Stem("kemosj"), "kemosj");});
test("kemosjs -> kemosj", function() {deepEqual( Stem("kemosjs"), "kemosj");});
test("kemuel -> kemuel", function() {deepEqual( Stem("kemuel"), "kemuel");});
test("kena -> kena", function() {deepEqual( Stem("kena"), "kena");});
test("kenan -> kenan", function() {deepEqual( Stem("kenan"), "kenan");});
test("kenani -> kenani", function() {deepEqual( Stem("kenani"), "kenani");});
test("kenans -> kenan", function() {deepEqual( Stem("kenans"), "kenan");});
test("kenat -> kenat", function() {deepEqual( Stem("kenat"), "kenat");});
test("kenaz -> kenaz", function() {deepEqual( Stem("kenaz"), "kenaz");});
test("kend -> kend", function() {deepEqual( Stem("kend"), "kend");});
test("kende -> kend", function() {deepEqual( Stem("kende"), "kend");});
test("kendelig -> kend", function() {deepEqual( Stem("kendelig"), "kend");});
test("kendeligt -> kend", function() {deepEqual( Stem("kendeligt"), "kend");});
test("kendelse -> kend", function() {deepEqual( Stem("kendelse"), "kend");});
test("kender -> kend", function() {deepEqual( Stem("kender"), "kend");});
test("kendes -> kend", function() {deepEqual( Stem("kendes"), "kend");});
test("kendinge -> kending", function() {deepEqual( Stem("kendinge"), "kending");});
test("kendskab -> kendskab", function() {deepEqual( Stem("kendskab"), "kendskab");});
test("kendt -> kend", function() {deepEqual( Stem("kendt"), "kend");});
test("kendte -> kend", function() {deepEqual( Stem("kendte"), "kend");});
test("kendtes -> kend", function() {deepEqual( Stem("kendtes"), "kend");});
test("keniten -> kenit", function() {deepEqual( Stem("keniten"), "kenit");});
test("keniterne -> kenit", function() {deepEqual( Stem("keniterne"), "kenit");});
test("keniternes -> kenit", function() {deepEqual( Stem("keniternes"), "kenit");});
test("kenitiske -> kenitisk", function() {deepEqual( Stem("kenitiske"), "kenitisk");});
test("kenizziten -> kenizzit", function() {deepEqual( Stem("kenizziten"), "kenizzit");});
test("kenkreæ -> kenkreæ", function() {deepEqual( Stem("kenkreæ"), "kenkreæ");});
test("keodinges -> keoding", function() {deepEqual( Stem("keodinges"), "keoding");});
test("keramim -> keramim", function() {deepEqual( Stem("keramim"), "keramim");});
test("keran -> keran", function() {deepEqual( Stem("keran"), "keran");});
test("kerem -> kerem", function() {deepEqual( Stem("kerem"), "kerem");});
test("kerems -> kerem", function() {deepEqual( Stem("kerems"), "kerem");});
test("keren -> ker", function() {deepEqual( Stem("keren"), "ker");});
test("kerijjot -> kerijjot", function() {deepEqual( Stem("kerijjot"), "kerijjot");});
test("kerijot -> kerijot", function() {deepEqual( Stem("kerijot"), "kerijot");});
test("keros -> kero", function() {deepEqual( Stem("keros"), "kero");});
test("kerub -> kerub", function() {deepEqual( Stem("kerub"), "kerub");});
test("kerubansigt -> kerubans", function() {deepEqual( Stem("kerubansigt"), "kerubans");});
test("keruber -> kerub", function() {deepEqual( Stem("keruber"), "kerub");});
test("keruberne -> kerub", function() {deepEqual( Stem("keruberne"), "kerub");});
test("kerubernes -> kerub", function() {deepEqual( Stem("kerubernes"), "kerub");});
test("kerubers -> kerub", function() {deepEqual( Stem("kerubers"), "kerub");});
test("kerubs -> kerub", function() {deepEqual( Stem("kerubs"), "kerub");});
test("kesalon -> kesalon", function() {deepEqual( Stem("kesalon"), "kesalon");});
test("kesed -> kesed", function() {deepEqual( Stem("kesed"), "kesed");});
test("kesita -> kesita", function() {deepEqual( Stem("kesita"), "kesita");});
test("kesullot -> kesullot", function() {deepEqual( Stem("kesullot"), "kesullot");});
test("ketura -> ketura", function() {deepEqual( Stem("ketura"), "ketura");});
test("keturas -> ketura", function() {deepEqual( Stem("keturas"), "ketura");});
test("kevan -> kevan", function() {deepEqual( Stem("kevan"), "kevan");});
test("kezia -> kezia", function() {deepEqual( Stem("kezia"), "kezia");});
test("kezib -> kezib", function() {deepEqual( Stem("kezib"), "kezib");});
test("keziz -> keziz", function() {deepEqual( Stem("keziz"), "keziz");});
test("kibrot -> kibrot", function() {deepEqual( Stem("kibrot"), "kibrot");});
test("kibzajim -> kibzajim", function() {deepEqual( Stem("kibzajim"), "kibzajim");});
test("kid -> kid", function() {deepEqual( Stem("kid"), "kid");});
test("kiddet -> kid", function() {deepEqual( Stem("kiddet"), "kid");});
test("kidons -> kidon", function() {deepEqual( Stem("kidons"), "kidon");});
test("kigged -> kigged", function() {deepEqual( Stem("kigged"), "kigged");});
test("kiggede -> kigged", function() {deepEqual( Stem("kiggede"), "kigged");});
test("kigger -> kig", function() {deepEqual( Stem("kigger"), "kig");});
test("kijat -> kijat", function() {deepEqual( Stem("kijat"), "kijat");});
test("kil -> kil", function() {deepEqual( Stem("kil"), "kil");});
test("kilde -> kild", function() {deepEqual( Stem("kilde"), "kild");});
test("kilden -> kild", function() {deepEqual( Stem("kilden"), "kild");});
test("kildeporten -> kildeport", function() {deepEqual( Stem("kildeporten"), "kildeport");});
test("kilder -> kild", function() {deepEqual( Stem("kilder"), "kild");});
test("kilderne -> kild", function() {deepEqual( Stem("kilderne"), "kild");});
test("kildevang -> kildevang", function() {deepEqual( Stem("kildevang"), "kildevang");});
test("kildevæld -> kildevæld", function() {deepEqual( Stem("kildevæld"), "kildevæld");});
test("kildevældet -> kildevæld", function() {deepEqual( Stem("kildevældet"), "kildevæld");});
test("kildrer -> kildr", function() {deepEqual( Stem("kildrer"), "kildr");});
test("kilikien -> kiliki", function() {deepEqual( Stem("kilikien"), "kiliki");});
test("kilikiens -> kiliki", function() {deepEqual( Stem("kilikiens"), "kiliki");});
test("kiljon -> kiljon", function() {deepEqual( Stem("kiljon"), "kiljon");});
test("kimham -> kimham", function() {deepEqual( Stem("kimham"), "kimham");});
test("kina -> kina", function() {deepEqual( Stem("kina"), "kina");});
test("kind -> kind", function() {deepEqual( Stem("kind"), "kind");});
test("kinden -> kind", function() {deepEqual( Stem("kinden"), "kind");});
test("kinder -> kind", function() {deepEqual( Stem("kinder"), "kind");});
test("kindtænder -> kindtænd", function() {deepEqual( Stem("kindtænder"), "kindtænd");});
test("kiniterne -> kinit", function() {deepEqual( Stem("kiniterne"), "kinit");});
test("kinneret -> kin", function() {deepEqual( Stem("kinneret"), "kin");});
test("kinnerets -> kin", function() {deepEqual( Stem("kinnerets"), "kin");});
test("kinneretsøen -> kinneretsø", function() {deepEqual( Stem("kinneretsøen"), "kinneretsø");});
test("kinnerot -> kinnerot", function() {deepEqual( Stem("kinnerot"), "kinnerot");});
test("kionerotsøens -> kionerotsø", function() {deepEqual( Stem("kionerotsøens"), "kionerotsø");});
test("kios -> kios", function() {deepEqual( Stem("kios"), "kios");});
test("kir -> kir", function() {deepEqual( Stem("kir"), "kir");});
test("kirjaf -> kirjaf", function() {deepEqual( Stem("kirjaf"), "kirjaf");});
test("kirjat -> kirjat", function() {deepEqual( Stem("kirjat"), "kirjat");});
test("kirjatajim -> kirjatajim", function() {deepEqual( Stem("kirjatajim"), "kirjatajim");});
test("kis -> kis", function() {deepEqual( Stem("kis"), "kis");});
test("kisj -> kisj", function() {deepEqual( Stem("kisj"), "kisj");});
test("kisji -> kisji", function() {deepEqual( Stem("kisji"), "kisji");});
test("kisjjon -> kisjjon", function() {deepEqual( Stem("kisjjon"), "kisjjon");});
test("kisjon -> kisjon", function() {deepEqual( Stem("kisjon"), "kisjon");});
test("kisjonbækken -> kisjonbæk", function() {deepEqual( Stem("kisjonbækken"), "kisjonbæk");});
test("kisjons -> kisjon", function() {deepEqual( Stem("kisjons"), "kisjon");});
test("kisjs -> kisj", function() {deepEqual( Stem("kisjs"), "kisj");});
test("kislev -> kislev", function() {deepEqual( Stem("kislev"), "kislev");});
test("kislons -> kislon", function() {deepEqual( Stem("kislons"), "kislon");});
test("kiste -> kist", function() {deepEqual( Stem("kiste"), "kist");});
test("kisten -> kist", function() {deepEqual( Stem("kisten"), "kist");});
test("kitron -> kitron", function() {deepEqual( Stem("kitron"), "kitron");});
test("kittæerne -> kittæ", function() {deepEqual( Stem("kittæerne"), "kittæ");});
test("kittæernes -> kittæ", function() {deepEqual( Stem("kittæernes"), "kittæ");});
test("kittæiske -> kittæisk", function() {deepEqual( Stem("kittæiske"), "kittæisk");});
test("kitæerne -> kitæ", function() {deepEqual( Stem("kitæerne"), "kitæ");});
test("kiv -> kiv", function() {deepEqual( Stem("kiv"), "kiv");});
test("kivagtig -> kivag", function() {deepEqual( Stem("kivagtig"), "kivag");});
test("kivedes -> kived", function() {deepEqual( Stem("kivedes"), "kived");});
test("kivens -> kiv", function() {deepEqual( Stem("kivens"), "kiv");});
test("kives -> kiv", function() {deepEqual( Stem("kives"), "kiv");});
test("kivs -> kiv", function() {deepEqual( Stem("kivs"), "kiv");});
test("kjortel -> kjortel", function() {deepEqual( Stem("kjortel"), "kjortel");});
test("kjortelen -> kjortel", function() {deepEqual( Stem("kjortelen"), "kjortel");});
test("kjortelens -> kjortel", function() {deepEqual( Stem("kjortelens"), "kjortel");});
test("kjortler -> kjortl", function() {deepEqual( Stem("kjortler"), "kjortl");});
test("kjortlerne -> kjortl", function() {deepEqual( Stem("kjortlerne"), "kjortl");});
test("klag -> klag", function() {deepEqual( Stem("klag"), "klag");});
test("klage -> klag", function() {deepEqual( Stem("klage"), "klag");});
test("klagede -> klaged", function() {deepEqual( Stem("klagede"), "klaged");});
test("klagefest -> klagefest", function() {deepEqual( Stem("klagefest"), "klagefest");});
test("klagekvinder -> klagekvind", function() {deepEqual( Stem("klagekvinder"), "klagekvind");});
test("klagemål -> klagemål", function() {deepEqual( Stem("klagemål"), "klagemål");});
test("klagemænd -> klagemænd", function() {deepEqual( Stem("klagemænd"), "klagemænd");});
test("klagende -> klag", function() {deepEqual( Stem("klagende"), "klag");});
test("klager -> klag", function() {deepEqual( Stem("klager"), "klag");});
test("klageråb -> klageråb", function() {deepEqual( Stem("klageråb"), "klageråb");});
test("klageråbet -> klageråb", function() {deepEqual( Stem("klageråbet"), "klageråb");});
test("klagerøst -> klagerøst", function() {deepEqual( Stem("klagerøst"), "klagerøst");});
test("klages -> klag", function() {deepEqual( Stem("klages"), "klag");});
test("klagesang -> klagesang", function() {deepEqual( Stem("klagesang"), "klagesang");});
test("klagesange -> klagesang", function() {deepEqual( Stem("klagesange"), "klagesang");});
test("klagesangene -> klagesang", function() {deepEqual( Stem("klagesangene"), "klagesang");});
test("klageskrig -> klageskr", function() {deepEqual( Stem("klageskrig"), "klageskr");});
test("klaget -> klag", function() {deepEqual( Stem("klaget"), "klag");});
test("klammeri -> klammeri", function() {deepEqual( Stem("klammeri"), "klammeri");});
test("klammerier -> klammeri", function() {deepEqual( Stem("klammerier"), "klammeri");});
test("klamrede -> klamred", function() {deepEqual( Stem("klamrede"), "klamred");});
test("klamrer -> klamr", function() {deepEqual( Stem("klamrer"), "klamr");});
test("klang -> klang", function() {deepEqual( Stem("klang"), "klang");});
test("klap -> klap", function() {deepEqual( Stem("klap"), "klap");});
test("klappe -> klap", function() {deepEqual( Stem("klappe"), "klap");});
test("klappede -> klapped", function() {deepEqual( Stem("klappede"), "klapped");});
test("klapper -> klap", function() {deepEqual( Stem("klapper"), "klap");});
test("klar -> klar", function() {deepEqual( Stem("klar"), "klar");});
test("klare -> klar", function() {deepEqual( Stem("klare"), "klar");});
test("klarede -> klared", function() {deepEqual( Stem("klarede"), "klared");});
test("klares -> klar", function() {deepEqual( Stem("klares"), "klar");});
test("klaret -> klar", function() {deepEqual( Stem("klaret"), "klar");});
test("klarlig -> klar", function() {deepEqual( Stem("klarlig"), "klar");});
test("klarsynet -> klarsyn", function() {deepEqual( Stem("klarsynet"), "klarsyn");});
test("klart -> klart", function() {deepEqual( Stem("klart"), "klart");});
test("klaser -> klas", function() {deepEqual( Stem("klaser"), "klas");});
test("klaserne -> klas", function() {deepEqual( Stem("klaserne"), "klas");});
test("klatrede -> klatred", function() {deepEqual( Stem("klatrede"), "klatred");});
test("klaudia -> klaudia", function() {deepEqual( Stem("klaudia"), "klaudia");});
test("klaudius -> klaudius", function() {deepEqual( Stem("klaudius"), "klaudius");});
test("klavde -> klavd", function() {deepEqual( Stem("klavde"), "klavd");});
test("klemens -> klem", function() {deepEqual( Stem("klemens"), "klem");});
test("klenodier -> klenodi", function() {deepEqual( Stem("klenodier"), "klenodi");});
test("kleodie -> kleodi", function() {deepEqual( Stem("kleodie"), "kleodi");});
test("kleofas -> kleofa", function() {deepEqual( Stem("kleofas"), "kleofa");});
test("klinge -> kling", function() {deepEqual( Stem("klinge"), "kling");});
test("klingen -> kling", function() {deepEqual( Stem("klingen"), "kling");});
test("klingende -> kling", function() {deepEqual( Stem("klingende"), "kling");});
test("klingre -> klingr", function() {deepEqual( Stem("klingre"), "klingr");});
test("klip -> klip", function() {deepEqual( Stem("klip"), "klip");});
test("klippe -> klip", function() {deepEqual( Stem("klippe"), "klip");});
test("klippeboerne -> klippebo", function() {deepEqual( Stem("klippeboerne"), "klippebo");});
test("klippeborg -> klippeborg", function() {deepEqual( Stem("klippeborg"), "klippeborg");});
test("klippeborge -> klippeborg", function() {deepEqual( Stem("klippeborge"), "klippeborg");});
test("klippeborgen -> klippeborg", function() {deepEqual( Stem("klippeborgen"), "klippeborg");});
test("klippeborgene -> klippeborg", function() {deepEqual( Stem("klippeborgene"), "klippeborg");});
test("klippede -> klipped", function() {deepEqual( Stem("klippede"), "klipped");});
test("klippegrævlingen -> klippegrævling", function() {deepEqual( Stem("klippegrævlingen"), "klippegrævling");});
test("klippegrævlinger -> klippegrævling", function() {deepEqual( Stem("klippegrævlinger"), "klippegrævling");});
test("klippehule -> klippehul", function() {deepEqual( Stem("klippehule"), "klippehul");});
test("klippehulen -> klippehul", function() {deepEqual( Stem("klippehulen"), "klippehul");});
test("klippehuler -> klippehul", function() {deepEqual( Stem("klippehuler"), "klippehul");});
test("klippehøjderne -> klippehøjd", function() {deepEqual( Stem("klippehøjderne"), "klippehøjd");});
test("klippekløft -> klippekløft", function() {deepEqual( Stem("klippekløft"), "klippekløft");});
test("klippen -> klip", function() {deepEqual( Stem("klippen"), "klip");});
test("klippens -> klip", function() {deepEqual( Stem("klippens"), "klip");});
test("klipper -> klip", function() {deepEqual( Stem("klipper"), "klip");});
test("klipperevne -> klipperevn", function() {deepEqual( Stem("klipperevne"), "klipperevn");});
test("klipperevner -> klipperevn", function() {deepEqual( Stem("klipperevner"), "klipperevn");});
test("klipperne -> klip", function() {deepEqual( Stem("klipperne"), "klip");});
test("klippernes -> klip", function() {deepEqual( Stem("klippernes"), "klip");});
test("klippes -> klip", function() {deepEqual( Stem("klippes"), "klip");});
test("klippespids -> klippespid", function() {deepEqual( Stem("klippespids"), "klippespid");});
test("klippetop -> klippetop", function() {deepEqual( Stem("klippetop"), "klippetop");});
test("klippevæggene -> klippevæg", function() {deepEqual( Stem("klippevæggene"), "klippevæg");});
test("klirrer -> klir", function() {deepEqual( Stem("klirrer"), "klir");});
test("klog -> klog", function() {deepEqual( Stem("klog"), "klog");});
test("kloge -> klog", function() {deepEqual( Stem("kloge"), "klog");});
test("klogelig -> klog", function() {deepEqual( Stem("klogelig"), "klog");});
test("klogere -> klog", function() {deepEqual( Stem("klogere"), "klog");});
test("kloges -> klog", function() {deepEqual( Stem("kloges"), "klog");});
test("klogeste -> klogest", function() {deepEqual( Stem("klogeste"), "klogest");});
test("klogskab -> klogskab", function() {deepEqual( Stem("klogskab"), "klogskab");});
test("klogskabs -> klogskab", function() {deepEqual( Stem("klogskabs"), "klogskab");});
test("klogt -> klogt", function() {deepEqual( Stem("klogt"), "klogt");});
test("klogtigt -> klogt", function() {deepEqual( Stem("klogtigt"), "klogt");});
test("klopas -> klopa", function() {deepEqual( Stem("klopas"), "klopa");});
test("klov -> klov", function() {deepEqual( Stem("klov"), "klov");});
test("klove -> klov", function() {deepEqual( Stem("klove"), "klov");});
test("klovene -> klov", function() {deepEqual( Stem("klovene"), "klov");});
test("klude -> klud", function() {deepEqual( Stem("klude"), "klud");});
test("kludene -> klud", function() {deepEqual( Stem("kludene"), "klud");});
test("klumpede -> klumped", function() {deepEqual( Stem("klumpede"), "klumped");});
test("klumper -> klump", function() {deepEqual( Stem("klumper"), "klump");});
test("klynge -> klyng", function() {deepEqual( Stem("klynge"), "klyng");});
test("klyngede -> klynged", function() {deepEqual( Stem("klyngede"), "klynged");});
test("klynger -> klyng", function() {deepEqual( Stem("klynger"), "klyng");});
test("klynker -> klynk", function() {deepEqual( Stem("klynker"), "klynk");});
test("klæbed -> klæbed", function() {deepEqual( Stem("klæbed"), "klæbed");});
test("klæbede -> klæbed", function() {deepEqual( Stem("klæbede"), "klæbed");});
test("klæber -> klæb", function() {deepEqual( Stem("klæber"), "klæb");});
test("klæd -> klæd", function() {deepEqual( Stem("klæd"), "klæd");});
test("klæde -> klæd", function() {deepEqual( Stem("klæde"), "klæd");});
test("klædebon -> klædebon", function() {deepEqual( Stem("klædebon"), "klædebon");});
test("klædebonnet -> klædebon", function() {deepEqual( Stem("klædebonnet"), "klædebon");});
test("klædedragt -> klædedrag", function() {deepEqual( Stem("klædedragt"), "klædedrag");});
test("klædekammeret -> klædekam", function() {deepEqual( Stem("klædekammeret"), "klædekam");});
test("klæder -> klæd", function() {deepEqual( Stem("klæder"), "klæd");});
test("klæderne -> klæd", function() {deepEqual( Stem("klæderne"), "klæd");});
test("klæders -> klæd", function() {deepEqual( Stem("klæders"), "klæd");});
test("klædes -> klæd", function() {deepEqual( Stem("klædes"), "klæd");});
test("klædet -> klæd", function() {deepEqual( Stem("klædet"), "klæd");});
test("klædning -> klædning", function() {deepEqual( Stem("klædning"), "klædning");});
test("klædningen -> klædning", function() {deepEqual( Stem("klædningen"), "klædning");});
test("klædningerne -> klædning", function() {deepEqual( Stem("klædningerne"), "klædning");});
test("klædningsstykker -> klædningsstyk", function() {deepEqual( Stem("klædningsstykker"), "klædningsstyk");});
test("klædningvarhvid -> klædningvarhvid", function() {deepEqual( Stem("klædningvarhvid"), "klædningvarhvid");});
test("klædt -> klædt", function() {deepEqual( Stem("klædt"), "klædt");});
test("klædte -> klædt", function() {deepEqual( Stem("klædte"), "klædt");});
test("kløer -> kløer", function() {deepEqual( Stem("kløer"), "kløer");});
test("kløft -> kløft", function() {deepEqual( Stem("kløft"), "kløft");});
test("kløfteme -> kløftem", function() {deepEqual( Stem("kløfteme"), "kløftem");});
test("kløften -> kløft", function() {deepEqual( Stem("kløften"), "kløft");});
test("kløfter -> kløft", function() {deepEqual( Stem("kløfter"), "kløft");});
test("kløfterne -> kløft", function() {deepEqual( Stem("kløfterne"), "kløft");});
test("kløfternes -> kløft", function() {deepEqual( Stem("kløfternes"), "kløft");});
test("kløgt -> kløgt", function() {deepEqual( Stem("kløgt"), "kløgt");});
test("kløgtens -> kløgt", function() {deepEqual( Stem("kløgtens"), "kløgt");});
test("kløgtige -> kløgt", function() {deepEqual( Stem("kløgtige"), "kløgt");});
test("kløved -> kløved", function() {deepEqual( Stem("kløved"), "kløved");});
test("kløvede -> kløved", function() {deepEqual( Stem("kløvede"), "kløved");});
test("kløver -> kløv", function() {deepEqual( Stem("kløver"), "kløv");});
test("kløvet -> kløv", function() {deepEqual( Stem("kløvet"), "kløv");});
test("knag -> knag", function() {deepEqual( Stem("knag"), "knag");});
test("knager -> knag", function() {deepEqual( Stem("knager"), "knag");});
test("knagerne -> knag", function() {deepEqual( Stem("knagerne"), "knag");});
test("knap -> knap", function() {deepEqual( Stem("knap"), "knap");});
test("knejse -> knejs", function() {deepEqual( Stem("knejse"), "knejs");});
test("knejsed -> knejsed", function() {deepEqual( Stem("knejsed"), "knejsed");});
test("knejsende -> knejs", function() {deepEqual( Stem("knejsende"), "knejs");});
test("kni -> kni", function() {deepEqual( Stem("kni"), "kni");});
test("knibes -> knib", function() {deepEqual( Stem("knibes"), "knib");});
test("knidus -> knidus", function() {deepEqual( Stem("knidus"), "knidus");});
test("knipler -> knipl", function() {deepEqual( Stem("knipler"), "knipl");});
test("knippe -> knip", function() {deepEqual( Stem("knippe"), "knip");});
test("knipper -> knip", function() {deepEqual( Stem("knipper"), "knip");});
test("knipperne -> knip", function() {deepEqual( Stem("knipperne"), "knip");});
test("knitren -> knitr", function() {deepEqual( Stem("knitren"), "knitr");});
test("knitrende -> knitr", function() {deepEqual( Stem("knitrende"), "knitr");});
test("kniv -> kniv", function() {deepEqual( Stem("kniv"), "kniv");});
test("knive -> kniv", function() {deepEqual( Stem("knive"), "kniv");});
test("kniven -> kniv", function() {deepEqual( Stem("kniven"), "kniv");});
test("knivene -> kniv", function() {deepEqual( Stem("knivene"), "kniv");});
test("knoglede -> knogled", function() {deepEqual( Stem("knoglede"), "knogled");});
test("knogler -> knogl", function() {deepEqual( Stem("knogler"), "knogl");});
test("knoglerne -> knogl", function() {deepEqual( Stem("knoglerne"), "knogl");});
test("knoldene -> knold", function() {deepEqual( Stem("knoldene"), "knold");});
test("knopperne -> knop", function() {deepEqual( Stem("knopperne"), "knop");});
test("knuder -> knud", function() {deepEqual( Stem("knuder"), "knud");});
test("knugende -> knug", function() {deepEqual( Stem("knugende"), "knug");});
test("knuges -> knug", function() {deepEqual( Stem("knuges"), "knug");});
test("knuget -> knug", function() {deepEqual( Stem("knuget"), "knug");});
test("knurre -> knur", function() {deepEqual( Stem("knurre"), "knur");});
test("knurrede -> knurred", function() {deepEqual( Stem("knurrede"), "knurred");});
test("knurren -> knur", function() {deepEqual( Stem("knurren"), "knur");});
test("knurrende -> knur", function() {deepEqual( Stem("knurrende"), "knur");});
test("knurrer -> knur", function() {deepEqual( Stem("knurrer"), "knur");});
test("knurret -> knur", function() {deepEqual( Stem("knurret"), "knur");});
test("knus -> knus", function() {deepEqual( Stem("knus"), "knus");});
test("knuse -> knus", function() {deepEqual( Stem("knuse"), "knus");});
test("knuser -> knus", function() {deepEqual( Stem("knuser"), "knus");});
test("knuses -> knus", function() {deepEqual( Stem("knuses"), "knus");});
test("knusning -> knusning", function() {deepEqual( Stem("knusning"), "knusning");});
test("knust -> knust", function() {deepEqual( Stem("knust"), "knust");});
test("knuste -> knust", function() {deepEqual( Stem("knuste"), "knust");});
test("knustes -> knust", function() {deepEqual( Stem("knustes"), "knust");});
test("knyt -> knyt", function() {deepEqual( Stem("knyt"), "knyt");});
test("knytte -> knyt", function() {deepEqual( Stem("knytte"), "knyt");});
test("knyttede -> knytted", function() {deepEqual( Stem("knyttede"), "knytted");});
test("knytter -> knyt", function() {deepEqual( Stem("knytter"), "knyt");});
test("knyttet -> knyt", function() {deepEqual( Stem("knyttet"), "knyt");});
test("knæ -> knæ", function() {deepEqual( Stem("knæ"), "knæ");});
test("knæene -> knæen", function() {deepEqual( Stem("knæene"), "knæen");});
test("knække -> knæk", function() {deepEqual( Stem("knække"), "knæk");});
test("knækked -> knækked", function() {deepEqual( Stem("knækked"), "knækked");});
test("knækkede -> knækked", function() {deepEqual( Stem("knækkede"), "knækked");});
test("knækkedes -> knækked", function() {deepEqual( Stem("knækkedes"), "knækked");});
test("knækker -> knæk", function() {deepEqual( Stem("knækker"), "knæk");});
test("knækkes -> knæk", function() {deepEqual( Stem("knækkes"), "knæk");});
test("knækket -> knæk", function() {deepEqual( Stem("knækket"), "knæk");});
test("knæle -> knæl", function() {deepEqual( Stem("knæle"), "knæl");});
test("knælede -> knæled", function() {deepEqual( Stem("knælede"), "knæled");});
test("knæler -> knæl", function() {deepEqual( Stem("knæler"), "knæl");});
test("knælet -> knæl", function() {deepEqual( Stem("knælet"), "knæl");});
test("ko -> ko", function() {deepEqual( Stem("ko"), "ko");});
test("koa -> koa", function() {deepEqual( Stem("koa"), "koa");});
test("koadyret -> koadyr", function() {deepEqual( Stem("koadyret"), "koadyr");});
test("kobabs -> kobab", function() {deepEqual( Stem("kobabs"), "kobab");});
test("kobber -> kob", function() {deepEqual( Stem("kobber"), "kob");});
test("kobberaksler -> kobberaksl", function() {deepEqual( Stem("kobberaksler"), "kobberaksl");});
test("kobberalter -> kobberalt", function() {deepEqual( Stem("kobberalter"), "kobberalt");});
test("kobberalteret -> kobberalt", function() {deepEqual( Stem("kobberalteret"), "kobberalt");});
test("kobberarbejde -> kobberarbejd", function() {deepEqual( Stem("kobberarbejde"), "kobberarbejd");});
test("kobberbuen -> kobberbu", function() {deepEqual( Stem("kobberbuen"), "kobberbu");});
test("kobberbækkener -> kobberbækken", function() {deepEqual( Stem("kobberbækkener"), "kobberbækken");});
test("kobbercymbler -> kobbercymbl", function() {deepEqual( Stem("kobbercymbler"), "kobbercymbl");});
test("kobberet -> kob", function() {deepEqual( Stem("kobberet"), "kob");});
test("kobbergitter -> kobbergit", function() {deepEqual( Stem("kobbergitter"), "kobbergit");});
test("kobbergitteret -> kobbergit", function() {deepEqual( Stem("kobbergitteret"), "kobbergit");});
test("kobbergitterets -> kobbergit", function() {deepEqual( Stem("kobbergitterets"), "kobbergit");});
test("kobberhavet -> kobberhav", function() {deepEqual( Stem("kobberhavet"), "kobberhav");});
test("kobberhjelm -> kobberhjelm", function() {deepEqual( Stem("kobberhjelm"), "kobberhjelm");});
test("kobberkar -> kobberkar", function() {deepEqual( Stem("kobberkar"), "kobberkar");});
test("kobberkløer -> kobberklø", function() {deepEqual( Stem("kobberkløer"), "kobberklø");});
test("kobberkroge -> kobberkrog", function() {deepEqual( Stem("kobberkroge"), "kobberkrog");});
test("kobberlænker -> kobberlænk", function() {deepEqual( Stem("kobberlænker"), "kobberlænk");});
test("kobbermur -> kobbermur", function() {deepEqual( Stem("kobbermur"), "kobbermur");});
test("kobberokser -> kobberoks", function() {deepEqual( Stem("kobberokser"), "kobberoks");});
test("kobberokserne -> kobberoks", function() {deepEqual( Stem("kobberokserne"), "kobberoks");});
test("kobberpaladerne -> kobberpalad", function() {deepEqual( Stem("kobberpaladerne"), "kobberpalad");});
test("kobberportstænger -> kobberportstæng", function() {deepEqual( Stem("kobberportstænger"), "kobberportstæng");});
test("kobberringe -> kobberring", function() {deepEqual( Stem("kobberringe"), "kobberring");});
test("kobbersager -> kobbersag", function() {deepEqual( Stem("kobbersager"), "kobbersag");});
test("kobbersagerne -> kobbersag", function() {deepEqual( Stem("kobbersagerne"), "kobbersag");});
test("kobberskinner -> kobberskin", function() {deepEqual( Stem("kobberskinner"), "kobberskin");});
test("kobberskjolde -> kobberskjold", function() {deepEqual( Stem("kobberskjolde"), "kobberskjold");});
test("kobberslange -> kobberslang", function() {deepEqual( Stem("kobberslange"), "kobberslang");});
test("kobberslangen -> kobberslang", function() {deepEqual( Stem("kobberslangen"), "kobberslang");});
test("kobbersmed -> kobbersmed", function() {deepEqual( Stem("kobbersmed"), "kobbersmed");});
test("kobbersmede -> kobbersmed", function() {deepEqual( Stem("kobbersmede"), "kobbersmed");});
test("kobberspyd -> kobberspyd", function() {deepEqual( Stem("kobberspyd"), "kobberspyd");});
test("kobbersøjler -> kobbersøjl", function() {deepEqual( Stem("kobbersøjler"), "kobbersøjl");});
test("kobbersøjlerne -> kobbersøjl", function() {deepEqual( Stem("kobbersøjlerne"), "kobbersøjl");});
test("koen -> koen", function() {deepEqual( Stem("koen"), "koen");});
test("kofer -> kof", function() {deepEqual( Stem("kofer"), "kof");});
test("koferklase -> koferklas", function() {deepEqual( Stem("koferklase"), "koferklas");});
test("kog -> kog", function() {deepEqual( Stem("kog"), "kog");});
test("koge -> kog", function() {deepEqual( Stem("koge"), "kog");});
test("kogende -> kog", function() {deepEqual( Stem("kogende"), "kog");});
test("koger -> kog", function() {deepEqual( Stem("koger"), "kog");});
test("koges -> kog", function() {deepEqual( Stem("koges"), "kog");});
test("kogger -> kog", function() {deepEqual( Stem("kogger"), "kog");});
test("koggeret -> kog", function() {deepEqual( Stem("koggeret"), "kog");});
test("koggers -> kog", function() {deepEqual( Stem("koggers"), "kog");});
test("koglere -> kogl", function() {deepEqual( Stem("koglere"), "kogl");});
test("koglerne -> kogl", function() {deepEqual( Stem("koglerne"), "kogl");});
test("kogt -> kogt", function() {deepEqual( Stem("kogt"), "kogt");});
test("kogte -> kogt", function() {deepEqual( Stem("kogte"), "kogt");});
test("kokken -> kok", function() {deepEqual( Stem("kokken"), "kok");});
test("kol -> kol", function() {deepEqual( Stem("kol"), "kol");});
test("kolaja -> kolaja", function() {deepEqual( Stem("kolaja"), "kolaja");});
test("kolajas -> kolaja", function() {deepEqual( Stem("kolajas"), "kolaja");});
test("kold -> kold", function() {deepEqual( Stem("kold"), "kold");});
test("koldblodig -> koldblod", function() {deepEqual( Stem("koldblodig"), "koldblod");});
test("kolde -> kold", function() {deepEqual( Stem("kolde"), "kold");});
test("koldt -> kold", function() {deepEqual( Stem("koldt"), "kold");});
test("koloni -> koloni", function() {deepEqual( Stem("koloni"), "koloni");});
test("kolossenserne -> kolossens", function() {deepEqual( Stem("kolossenserne"), "kolossens");});
test("kolossæ -> kolossæ", function() {deepEqual( Stem("kolossæ"), "kolossæ");});
test("kom -> kom", function() {deepEqual( Stem("kom"), "kom");});
test("komme -> kom", function() {deepEqual( Stem("komme"), "kom");});
test("kommen -> kom", function() {deepEqual( Stem("kommen"), "kom");});
test("kommende -> kom", function() {deepEqual( Stem("kommende"), "kom");});
test("kommer -> kom", function() {deepEqual( Stem("kommer"), "kom");});
test("kommes -> kom", function() {deepEqual( Stem("kommes"), "kom");});
test("kommet -> kom", function() {deepEqual( Stem("kommet"), "kom");});
test("kommner -> kommn", function() {deepEqual( Stem("kommner"), "kommn");});
test("komne -> komn", function() {deepEqual( Stem("komne"), "komn");});
test("komnmer -> komnm", function() {deepEqual( Stem("komnmer"), "komnm");});
test("komælksost -> komælksost", function() {deepEqual( Stem("komælksost"), "komælksost");});
test("kon -> kon", function() {deepEqual( Stem("kon"), "kon");});
test("konanja -> konanja", function() {deepEqual( Stem("konanja"), "konanja");});
test("konelius -> konelius", function() {deepEqual( Stem("konelius"), "konelius");});
test("konen -> kon", function() {deepEqual( Stem("konen"), "kon");});
test("kong -> kong", function() {deepEqual( Stem("kong"), "kong");});
test("konge -> kong", function() {deepEqual( Stem("konge"), "kong");});
test("kongebog -> kongebog", function() {deepEqual( Stem("kongebog"), "kongebog");});
test("kongeborg -> kongeborg", function() {deepEqual( Stem("kongeborg"), "kongeborg");});
test("kongeborgen -> kongeborg", function() {deepEqual( Stem("kongeborgen"), "kongeborg");});
test("kongebud -> kongebud", function() {deepEqual( Stem("kongebud"), "kongebud");});
test("kongedalen -> kongedal", function() {deepEqual( Stem("kongedalen"), "kongedal");});
test("kongedammen -> kongedam", function() {deepEqual( Stem("kongedammen"), "kongedam");});
test("kongedatter -> kongedat", function() {deepEqual( Stem("kongedatter"), "kongedat");});
test("kongedatteren -> kongedat", function() {deepEqual( Stem("kongedatteren"), "kongedat");});
test("kongedragt -> kongedrag", function() {deepEqual( Stem("kongedragt"), "kongedrag");});
test("kongedømme -> kongedøm", function() {deepEqual( Stem("kongedømme"), "kongedøm");});
test("kongedømmes -> kongedøm", function() {deepEqual( Stem("kongedømmes"), "kongedøm");});
test("kongedømmet -> kongedøm", function() {deepEqual( Stem("kongedømmet"), "kongedøm");});
test("kongedømmets -> kongedøm", function() {deepEqual( Stem("kongedømmets"), "kongedøm");});
test("kongedøtre -> kongedøtr", function() {deepEqual( Stem("kongedøtre"), "kongedøtr");});
test("kongedøtrene -> kongedøtr", function() {deepEqual( Stem("kongedøtrene"), "kongedøtr");});
test("kongegrave -> kongegrav", function() {deepEqual( Stem("kongegrave"), "kongegrav");});
test("kongegravene -> kongegrav", function() {deepEqual( Stem("kongegravene"), "kongegrav");});
test("kongehus -> kongehus", function() {deepEqual( Stem("kongehus"), "kongehus");});
test("kongehuset -> kongehus", function() {deepEqual( Stem("kongehuset"), "kongehus");});
test("kongei -> kongei", function() {deepEqual( Stem("kongei"), "kongei");});
test("kongejubel -> kongejubel", function() {deepEqual( Stem("kongejubel"), "kongejubel");});
test("kongelig -> kong", function() {deepEqual( Stem("kongelig"), "kong");});
test("kongelige -> kong", function() {deepEqual( Stem("kongelige"), "kong");});
test("kongeligen -> kong", function() {deepEqual( Stem("kongeligen"), "kong");});
test("kongeligt -> kong", function() {deepEqual( Stem("kongeligt"), "kong");});
test("kongemagt -> kongemag", function() {deepEqual( Stem("kongemagt"), "kongemag");});
test("kongemagten -> kongemag", function() {deepEqual( Stem("kongemagten"), "kongemag");});
test("kongemoderen -> kongemod", function() {deepEqual( Stem("kongemoderen"), "kongemod");});
test("kongemoderens -> kongemod", function() {deepEqual( Stem("kongemoderens"), "kongemod");});
test("kongemorder -> kongemord", function() {deepEqual( Stem("kongemorder"), "kongemord");});
test("kongen -> kong", function() {deepEqual( Stem("kongen"), "kong");});
test("kongens -> kong", function() {deepEqual( Stem("kongens"), "kong");});
test("kongeos -> kongeo", function() {deepEqual( Stem("kongeos"), "kongeo");});
test("kongepaladsets -> kongepalads", function() {deepEqual( Stem("kongepaladsets"), "kongepalads");});
test("kongeporten -> kongeport", function() {deepEqual( Stem("kongeporten"), "kongeport");});
test("konger -> kong", function() {deepEqual( Stem("konger"), "kong");});
test("kongerige -> konger", function() {deepEqual( Stem("kongerige"), "konger");});
test("kongerigers -> konger", function() {deepEqual( Stem("kongerigers"), "konger");});
test("kongerne -> kong", function() {deepEqual( Stem("kongerne"), "kong");});
test("kongernes -> kong", function() {deepEqual( Stem("kongernes"), "kong");});
test("kongers -> kong", function() {deepEqual( Stem("kongers"), "kong");});
test("konges -> kong", function() {deepEqual( Stem("konges"), "kong");});
test("kongeslægten -> kongeslæg", function() {deepEqual( Stem("kongeslægten"), "kongeslæg");});
test("kongespir -> kongespir", function() {deepEqual( Stem("kongespir"), "kongespir");});
test("kongestav -> kongestav", function() {deepEqual( Stem("kongestav"), "kongestav");});
test("kongesæde -> kongesæd", function() {deepEqual( Stem("kongesæde"), "kongesæd");});
test("kongesøn -> kongesøn", function() {deepEqual( Stem("kongesøn"), "kongesøn");});
test("kongesønnen -> kongesøn", function() {deepEqual( Stem("kongesønnen"), "kongesøn");});
test("kongesønner -> kongesøn", function() {deepEqual( Stem("kongesønner"), "kongesøn");});
test("kongesønnerne -> kongesøn", function() {deepEqual( Stem("kongesønnerne"), "kongesøn");});
test("kongesønnernes -> kongesøn", function() {deepEqual( Stem("kongesønnernes"), "kongesøn");});
test("kongetrone -> kongetron", function() {deepEqual( Stem("kongetrone"), "kongetron");});
test("kongetronen -> kongetron", function() {deepEqual( Stem("kongetronen"), "kongetron");});
test("kongevalg -> kongevalg", function() {deepEqual( Stem("kongevalg"), "kongevalg");});
test("kongevalget -> kongevalg", function() {deepEqual( Stem("kongevalget"), "kongevalg");});
test("kongevejen -> kongevej", function() {deepEqual( Stem("kongevejen"), "kongevej");});
test("kongeværdigbeden -> kongeværdigbed", function() {deepEqual( Stem("kongeværdigbeden"), "kongeværdigbed");});
test("kongeværdigheden -> kongeværd", function() {deepEqual( Stem("kongeværdigheden"), "kongeværd");});
test("kongsbyer -> kongsby", function() {deepEqual( Stem("kongsbyer"), "kongsby");});
test("kongsbyerne -> kongsby", function() {deepEqual( Stem("kongsbyerne"), "kongsby");});
test("kongsgården -> kongsgård", function() {deepEqual( Stem("kongsgården"), "kongsgård");});
test("kongsgårdene -> kongsgård", function() {deepEqual( Stem("kongsgårdene"), "kongsgård");});
test("konja -> konja", function() {deepEqual( Stem("konja"), "konja");});
test("konjas -> konja", function() {deepEqual( Stem("konjas"), "konja");});
test("konmme -> konm", function() {deepEqual( Stem("konmme"), "konm");});
test("konmmer -> konm", function() {deepEqual( Stem("konmmer"), "konm");});
test("koog -> koog", function() {deepEqual( Stem("koog"), "koog");});
test("kooge -> koog", function() {deepEqual( Stem("kooge"), "koog");});
test("koogen -> koog", function() {deepEqual( Stem("koogen"), "koog");});
test("kor -> kor", function() {deepEqual( Stem("kor"), "kor");});
test("kora -> kora", function() {deepEqual( Stem("kora"), "kora");});
test("koraiten -> korait", function() {deepEqual( Stem("koraiten"), "korait");});
test("koraiterne -> korait", function() {deepEqual( Stem("koraiterne"), "korait");});
test("koraiternes -> korait", function() {deepEqual( Stem("koraiternes"), "korait");});
test("koral -> koral", function() {deepEqual( Stem("koral"), "koral");});
test("koraller -> koral", function() {deepEqual( Stem("koraller"), "koral");});
test("koras -> kora", function() {deepEqual( Stem("koras"), "kora");});
test("korazin -> korazin", function() {deepEqual( Stem("korazin"), "korazin");});
test("korban -> korban", function() {deepEqual( Stem("korban"), "korban");});
test("kore -> kor", function() {deepEqual( Stem("kore"), "kor");});
test("korianderfrø -> korianderfrø", function() {deepEqual( Stem("korianderfrø"), "korianderfrø");});
test("korinterne -> korint", function() {deepEqual( Stem("korinterne"), "korint");});
test("korinth -> korinth", function() {deepEqual( Stem("korinth"), "korinth");});
test("korinthiere -> korinthi", function() {deepEqual( Stem("korinthiere"), "korinthi");});
test("korinthierne -> korinthi", function() {deepEqual( Stem("korinthierne"), "korinthi");});
test("korn -> korn", function() {deepEqual( Stem("korn"), "korn");});
test("kornbrand -> kornbrand", function() {deepEqual( Stem("kornbrand"), "kornbrand");});
test("korndyngen -> korndyng", function() {deepEqual( Stem("korndyngen"), "korndyng");});
test("kornelius -> kornelius", function() {deepEqual( Stem("kornelius"), "kornelius");});
test("kornet -> korn", function() {deepEqual( Stem("kornet"), "korn");});
test("kornhøst -> kornhøst", function() {deepEqual( Stem("kornhøst"), "kornhøst");});
test("kornlagrene -> kornlagr", function() {deepEqual( Stem("kornlagrene"), "kornlagr");});
test("kornneg -> kornneg", function() {deepEqual( Stem("kornneg"), "kornneg");});
test("korns -> korn", function() {deepEqual( Stem("korns"), "korn");});
test("kornsalg -> kornsalg", function() {deepEqual( Stem("kornsalg"), "kornsalg");});
test("kors -> kor", function() {deepEqual( Stem("kors"), "kor");});
test("korsdøden -> korsdød", function() {deepEqual( Stem("korsdøden"), "korsdød");});
test("korset -> kors", function() {deepEqual( Stem("korset"), "kors");});
test("korsets -> kors", function() {deepEqual( Stem("korsets"), "kors");});
test("korsfæst -> korsfæst", function() {deepEqual( Stem("korsfæst"), "korsfæst");});
test("korsfæste -> korsfæst", function() {deepEqual( Stem("korsfæste"), "korsfæst");});
test("korsfæstede -> korsfæsted", function() {deepEqual( Stem("korsfæstede"), "korsfæsted");});
test("korsfæster -> korsfæst", function() {deepEqual( Stem("korsfæster"), "korsfæst");});
test("korsfæstes -> korsfæst", function() {deepEqual( Stem("korsfæstes"), "korsfæst");});
test("korsfæstet -> korsfæst", function() {deepEqual( Stem("korsfæstet"), "korsfæst");});
test("korsveje -> korsvej", function() {deepEqual( Stem("korsveje"), "korsvej");});
test("kort -> kort", function() {deepEqual( Stem("kort"), "kort");});
test("korte -> kort", function() {deepEqual( Stem("korte"), "kort");});
test("kortelig -> kort", function() {deepEqual( Stem("kortelig"), "kort");});
test("kortes -> kort", function() {deepEqual( Stem("kortes"), "kort");});
test("korthed -> kort", function() {deepEqual( Stem("korthed"), "kort");});
test("kortvarig -> kortvar", function() {deepEqual( Stem("kortvarig"), "kortvar");});
test("kos -> kos", function() {deepEqual( Stem("kos"), "kos");});
test("kosams -> kosam", function() {deepEqual( Stem("kosams"), "kosam");});
test("koslelige -> kosl", function() {deepEqual( Stem("koslelige"), "kosl");});
test("kost -> kost", function() {deepEqual( Stem("kost"), "kost");});
test("kostbar -> kostbar", function() {deepEqual( Stem("kostbar"), "kostbar");});
test("kostbare -> kostbar", function() {deepEqual( Stem("kostbare"), "kostbar");});
test("kostbareste -> kostbarest", function() {deepEqual( Stem("kostbareste"), "kostbarest");});
test("kostbarheder -> kostbar", function() {deepEqual( Stem("kostbarheder"), "kostbar");});
test("kostbart -> kostbart", function() {deepEqual( Stem("kostbart"), "kostbart");});
test("koste -> kost", function() {deepEqual( Stem("koste"), "kost");});
test("kostede -> kosted", function() {deepEqual( Stem("kostede"), "kosted");});
test("kostelig -> kost", function() {deepEqual( Stem("kostelig"), "kost");});
test("kostelige -> kost", function() {deepEqual( Stem("kostelige"), "kost");});
test("kosteligst -> kost", function() {deepEqual( Stem("kosteligst"), "kost");});
test("kosteligste -> kost", function() {deepEqual( Stem("kosteligste"), "kost");});
test("kosteligt -> kost", function() {deepEqual( Stem("kosteligt"), "kost");});
test("kosten -> kost", function() {deepEqual( Stem("kosten"), "kost");});
test("koster -> kost", function() {deepEqual( Stem("koster"), "kost");});
test("kostet -> kost", function() {deepEqual( Stem("kostet"), "kost");});
test("kove -> kov", function() {deepEqual( Stem("kove"), "kov");});
test("koz -> koz", function() {deepEqual( Stem("koz"), "koz");});
test("kozebas -> kozeba", function() {deepEqual( Stem("kozebas"), "kozeba");});
test("kraft -> kraft", function() {deepEqual( Stem("kraft"), "kraft");});
test("kraftelig -> kraft", function() {deepEqual( Stem("kraftelig"), "kraft");});
test("kraften -> kraft", function() {deepEqual( Stem("kraften"), "kraft");});
test("kraftens -> kraft", function() {deepEqual( Stem("kraftens"), "kraft");});
test("kraftesløs -> kraftesløs", function() {deepEqual( Stem("kraftesløs"), "kraftesløs");});
test("kraftesløse -> kraftesløs", function() {deepEqual( Stem("kraftesløse"), "kraftesløs");});
test("kraftig -> kraft", function() {deepEqual( Stem("kraftig"), "kraft");});
test("kraftige -> kraft", function() {deepEqual( Stem("kraftige"), "kraft");});
test("kraftigste -> kraft", function() {deepEqual( Stem("kraftigste"), "kraft");});
test("kraftigt -> kraft", function() {deepEqual( Stem("kraftigt"), "kraft");});
test("kraftkarl -> kraftkarl", function() {deepEqual( Stem("kraftkarl"), "kraftkarl");});
test("kraftløs -> kraftløs", function() {deepEqual( Stem("kraftløs"), "kraftløs");});
test("kraftløse -> kraftløs", function() {deepEqual( Stem("kraftløse"), "kraftløs");});
test("krafts -> kraft", function() {deepEqual( Stem("krafts"), "kraft");});
test("krammede -> krammed", function() {deepEqual( Stem("krammede"), "krammed");});
test("krammedes -> krammed", function() {deepEqual( Stem("krammedes"), "krammed");});
test("krampen -> kramp", function() {deepEqual( Stem("krampen"), "kramp");});
test("kramper -> kramp", function() {deepEqual( Stem("kramper"), "kramp");});
test("krans -> kran", function() {deepEqual( Stem("krans"), "kran");});
test("kranse -> krans", function() {deepEqual( Stem("kranse"), "krans");});
test("kransed -> kransed", function() {deepEqual( Stem("kransed"), "kransed");});
test("kransen -> krans", function() {deepEqual( Stem("kransen"), "krans");});
test("kransene -> krans", function() {deepEqual( Stem("kransene"), "krans");});
test("krat -> krat", function() {deepEqual( Stem("krat"), "krat");});
test("krathøj -> krathøj", function() {deepEqual( Stem("krathøj"), "krathøj");});
test("krattet -> krat", function() {deepEqual( Stem("krattet"), "krat");});
test("krav -> krav", function() {deepEqual( Stem("krav"), "krav");});
test("kravle -> kravl", function() {deepEqual( Stem("kravle"), "kravl");});
test("kravlede -> kravled", function() {deepEqual( Stem("kravlede"), "kravled");});
test("kreds -> kred", function() {deepEqual( Stem("kreds"), "kred");});
test("kredse -> kreds", function() {deepEqual( Stem("kredse"), "kreds");});
test("kredser -> kreds", function() {deepEqual( Stem("kredser"), "kreds");});
test("kredsløb -> kredsløb", function() {deepEqual( Stem("kredsløb"), "kredsløb");});
test("kreskens -> kresk", function() {deepEqual( Stem("kreskens"), "kresk");});
test("kreta -> kreta", function() {deepEqual( Stem("kreta"), "kreta");});
test("kretere -> kret", function() {deepEqual( Stem("kretere"), "kret");});
test("kreterne -> kret", function() {deepEqual( Stem("kreterne"), "kret");});
test("kreternes -> kret", function() {deepEqual( Stem("kreternes"), "kret");});
test("kretiske -> kretisk", function() {deepEqual( Stem("kretiske"), "kretisk");});
test("krig -> krig", function() {deepEqual( Stem("krig"), "krig");});
test("krige -> krig", function() {deepEqual( Stem("krige"), "krig");});
test("krigen -> krig", function() {deepEqual( Stem("krigen"), "krig");});
test("krigens -> krig", function() {deepEqual( Stem("krigens"), "krig");});
test("kriger -> krig", function() {deepEqual( Stem("kriger"), "krig");});
test("krigere -> krig", function() {deepEqual( Stem("krigere"), "krig");});
test("krigerens -> krig", function() {deepEqual( Stem("krigerens"), "krig");});
test("krigerkår -> krigerkår", function() {deepEqual( Stem("krigerkår"), "krigerkår");});
test("krigerne -> krig", function() {deepEqual( Stem("krigerne"), "krig");});
test("krigerskaren -> krigerskar", function() {deepEqual( Stem("krigerskaren"), "krigerskar");});
test("krigerskarer -> krigerskar", function() {deepEqual( Stem("krigerskarer"), "krigerskar");});
test("kriges -> krig", function() {deepEqual( Stem("kriges"), "krig");});
test("krigs -> krig", function() {deepEqual( Stem("krigs"), "krig");});
test("krigsbyttet -> krigsbyt", function() {deepEqual( Stem("krigsbyttet"), "krigsbyt");});
test("krigsdygtig -> krigsdyg", function() {deepEqual( Stem("krigsdygtig"), "krigsdyg");});
test("krigsdygtige -> krigsdyg", function() {deepEqual( Stem("krigsdygtige"), "krigsdyg");});
test("krigsfanger -> krigsfang", function() {deepEqual( Stem("krigsfanger"), "krigsfang");});
test("krigsfod -> krigsfod", function() {deepEqual( Stem("krigsfod"), "krigsfod");});
test("krigsfolk -> krigsfolk", function() {deepEqual( Stem("krigsfolk"), "krigsfolk");});
test("krigsfolkene -> krigsfolk", function() {deepEqual( Stem("krigsfolkene"), "krigsfolk");});
test("krigsfolket -> krigsfolk", function() {deepEqual( Stem("krigsfolket"), "krigsfolk");});
test("krigshelt -> krigshelt", function() {deepEqual( Stem("krigshelt"), "krigshelt");});
test("krigshelte -> krigshelt", function() {deepEqual( Stem("krigshelte"), "krigshelt");});
test("krigshær -> krigshær", function() {deepEqual( Stem("krigshær"), "krigshær");});
test("krigshære -> krigshær", function() {deepEqual( Stem("krigshære"), "krigshær");});
test("krigshæren -> krigshær", function() {deepEqual( Stem("krigshæren"), "krigshær");});
test("krigslarm -> krigslarm", function() {deepEqual( Stem("krigslarm"), "krigslarm");});
test("krigsmagt -> krigsmag", function() {deepEqual( Stem("krigsmagt"), "krigsmag");});
test("krigsmand -> krigsmand", function() {deepEqual( Stem("krigsmand"), "krigsmand");});
test("krigsmaskiner -> krigsmaskin", function() {deepEqual( Stem("krigsmaskiner"), "krigsmaskin");});
test("krigsmænd -> krigsmænd", function() {deepEqual( Stem("krigsmænd"), "krigsmænd");});
test("krigsmændene -> krigsmænd", function() {deepEqual( Stem("krigsmændene"), "krigsmænd");});
test("krigsredskaber -> krigsredskab", function() {deepEqual( Stem("krigsredskaber"), "krigsredskab");});
test("krigsrustede -> krigsrusted", function() {deepEqual( Stem("krigsrustede"), "krigsrusted");});
test("krigsrygter -> krigsryg", function() {deepEqual( Stem("krigsrygter"), "krigsryg");});
test("krigsråb -> krigsråb", function() {deepEqual( Stem("krigsråb"), "krigsråb");});
test("krigsskrig -> krigsskr", function() {deepEqual( Stem("krigsskrig"), "krigsskr");});
test("krigsskriget -> krigsskr", function() {deepEqual( Stem("krigsskriget"), "krigsskr");});
test("krigsskrigets -> krigsskr", function() {deepEqual( Stem("krigsskrigets"), "krigsskr");});
test("krigsstyrke -> krigsstyrk", function() {deepEqual( Stem("krigsstyrke"), "krigsstyrk");});
test("krigstjeneste -> krigstjenest", function() {deepEqual( Stem("krigstjeneste"), "krigstjenest");});
test("krigstog -> krigstog", function() {deepEqual( Stem("krigstog"), "krigstog");});
test("krigstoget -> krigstog", function() {deepEqual( Stem("krigstoget"), "krigstog");});
test("krigsvante -> krigsvant", function() {deepEqual( Stem("krigsvante"), "krigsvant");});
test("krigsvogne -> krigsvogn", function() {deepEqual( Stem("krigsvogne"), "krigsvogn");});
test("krigsvåben -> krigsvåb", function() {deepEqual( Stem("krigsvåben"), "krigsvåb");});
test("krigsværn -> krigsværn", function() {deepEqual( Stem("krigsværn"), "krigsværn");});
test("krigsøversten -> krigsøverst", function() {deepEqual( Stem("krigsøversten"), "krigsøverst");});
test("krigsøverstene -> krigsøverst", function() {deepEqual( Stem("krigsøverstene"), "krigsøverst");});
test("krigsøverster -> krigsøverst", function() {deepEqual( Stem("krigsøverster"), "krigsøverst");});
test("krigsøversterne -> krigsøverst", function() {deepEqual( Stem("krigsøversterne"), "krigsøverst");});
test("krispus -> krispus", function() {deepEqual( Stem("krispus"), "krispus");});
test("krist -> krist", function() {deepEqual( Stem("krist"), "krist");});
test("kristen -> krist", function() {deepEqual( Stem("kristen"), "krist");});
test("krister -> krist", function() {deepEqual( Stem("krister"), "krist");});
test("kristi -> kristi", function() {deepEqual( Stem("kristi"), "kristi");});
test("kristne -> kristn", function() {deepEqual( Stem("kristne"), "kristn");});
test("kristus -> kristus", function() {deepEqual( Stem("kristus"), "kristus");});
test("krit -> krit", function() {deepEqual( Stem("krit"), "krit");});
test("kriti -> kriti", function() {deepEqual( Stem("kriti"), "kriti");});
test("kroen -> kroen", function() {deepEqual( Stem("kroen"), "kroen");});
test("krog -> krog", function() {deepEqual( Stem("krog"), "krog");});
test("kroge -> krog", function() {deepEqual( Stem("kroge"), "krog");});
test("krogede -> kroged", function() {deepEqual( Stem("krogede"), "kroged");});
test("krogen -> krog", function() {deepEqual( Stem("krogen"), "krog");});
test("krogene -> krog", function() {deepEqual( Stem("krogene"), "krog");});
test("kroget -> krog", function() {deepEqual( Stem("kroget"), "krog");});
test("krogveje -> krogvej", function() {deepEqual( Stem("krogveje"), "krogvej");});
test("krokodillen -> krokodil", function() {deepEqual( Stem("krokodillen"), "krokodil");});
test("krone -> kron", function() {deepEqual( Stem("krone"), "kron");});
test("kroned -> kroned", function() {deepEqual( Stem("kroned"), "kroned");});
test("kronede -> kroned", function() {deepEqual( Stem("kronede"), "kroned");});
test("kronen -> kron", function() {deepEqual( Stem("kronen"), "kron");});
test("kroner -> kron", function() {deepEqual( Stem("kroner"), "kron");});
test("kronerne -> kron", function() {deepEqual( Stem("kronerne"), "kron");});
test("kronesten -> kronest", function() {deepEqual( Stem("kronesten"), "kronest");});
test("kronet -> kron", function() {deepEqual( Stem("kronet"), "kron");});
test("krop -> krop", function() {deepEqual( Stem("krop"), "krop");});
test("kroppe -> krop", function() {deepEqual( Stem("kroppe"), "krop");});
test("kroppen -> krop", function() {deepEqual( Stem("kroppen"), "krop");});
test("kroppens -> krop", function() {deepEqual( Stem("kroppens"), "krop");});
test("krukke -> kruk", function() {deepEqual( Stem("krukke"), "kruk");});
test("krukken -> kruk", function() {deepEqual( Stem("krukken"), "kruk");});
test("krukker -> kruk", function() {deepEqual( Stem("krukker"), "kruk");});
test("krukkerne -> kruk", function() {deepEqual( Stem("krukkerne"), "kruk");});
test("krumme -> krum", function() {deepEqual( Stem("krumme"), "krum");});
test("krummer -> krum", function() {deepEqual( Stem("krummer"), "krum");});
test("krummes -> krum", function() {deepEqual( Stem("krummes"), "krum");});
test("krumsluttede -> krumslutted", function() {deepEqual( Stem("krumsluttede"), "krumslutted");});
test("krumt -> krumt", function() {deepEqual( Stem("krumt"), "krumt");});
test("krus -> krus", function() {deepEqual( Stem("krus"), "krus");});
test("kruset -> krus", function() {deepEqual( Stem("kruset"), "krus");});
test("kryb -> kryb", function() {deepEqual( Stem("kryb"), "kryb");});
test("krybbe -> kryb", function() {deepEqual( Stem("krybbe"), "kryb");});
test("krybben -> kryb", function() {deepEqual( Stem("krybben"), "kryb");});
test("krybdyr -> krybdyr", function() {deepEqual( Stem("krybdyr"), "krybdyr");});
test("krybdyrene -> krybdyr", function() {deepEqual( Stem("krybdyrene"), "krybdyr");});
test("krybdyrs -> krybdyr", function() {deepEqual( Stem("krybdyrs"), "krybdyr");});
test("krybe -> kryb", function() {deepEqual( Stem("krybe"), "kryb");});
test("krybende -> kryb", function() {deepEqual( Stem("krybende"), "kryb");});
test("kryber -> kryb", function() {deepEqual( Stem("kryber"), "kryb");});
test("krybet -> kryb", function() {deepEqual( Stem("krybet"), "kryb");});
test("krydet -> kryd", function() {deepEqual( Stem("krydet"), "kryd");});
test("krydret -> krydr", function() {deepEqual( Stem("krydret"), "krydr");});
test("kryds -> kryd", function() {deepEqual( Stem("kryds"), "kryd");});
test("krydser -> kryds", function() {deepEqual( Stem("krydser"), "kryds");});
test("krykke -> kryk", function() {deepEqual( Stem("krykke"), "kryk");});
test("krysolit -> krysolit", function() {deepEqual( Stem("krysolit"), "krysolit");});
test("krysopras -> krysopra", function() {deepEqual( Stem("krysopras"), "krysopra");});
test("krystal -> krystal", function() {deepEqual( Stem("krystal"), "krystal");});
test("krystalklar -> krystalklar", function() {deepEqual( Stem("krystalklar"), "krystalklar");});
test("kræft -> kræft", function() {deepEqual( Stem("kræft"), "kræft");});
test("kræfter -> kræft", function() {deepEqual( Stem("kræfter"), "kræft");});
test("kræfterne -> kræft", function() {deepEqual( Stem("kræfterne"), "kræft");});
test("kræmmeme -> kræmmem", function() {deepEqual( Stem("kræmmeme"), "kræmmem");});
test("kræmmere -> kræm", function() {deepEqual( Stem("kræmmere"), "kræm");});
test("kræmmeren -> kræm", function() {deepEqual( Stem("kræmmeren"), "kræm");});
test("kræmmerfolket -> kræmmerfolk", function() {deepEqual( Stem("kræmmerfolket"), "kræmmerfolk");});
test("kræmmerland -> kræmmerland", function() {deepEqual( Stem("kræmmerland"), "kræmmerland");});
test("kræmmerlandet -> kræmmerland", function() {deepEqual( Stem("kræmmerlandet"), "kræmmerland");});
test("kræmmerne -> kræm", function() {deepEqual( Stem("kræmmerne"), "kræm");});
test("krænk -> krænk", function() {deepEqual( Stem("krænk"), "krænk");});
test("krænke -> krænk", function() {deepEqual( Stem("krænke"), "krænk");});
test("krænked -> krænked", function() {deepEqual( Stem("krænked"), "krænked");});
test("krænkede -> krænked", function() {deepEqual( Stem("krænkede"), "krænked");});
test("krænkelse -> krænk", function() {deepEqual( Stem("krænkelse"), "krænk");});
test("krænkelser -> krænk", function() {deepEqual( Stem("krænkelser"), "krænk");});
test("krænkende -> krænk", function() {deepEqual( Stem("krænkende"), "krænk");});
test("krænker -> krænk", function() {deepEqual( Stem("krænker"), "krænk");});
test("krænkes -> krænk", function() {deepEqual( Stem("krænkes"), "krænk");});
test("krænket -> krænk", function() {deepEqual( Stem("krænket"), "krænk");});
test("kræv -> kræv", function() {deepEqual( Stem("kræv"), "kræv");});
test("kræve -> kræv", function() {deepEqual( Stem("kræve"), "kræv");});
test("kræved -> kræved", function() {deepEqual( Stem("kræved"), "kræved");});
test("krævede -> kræved", function() {deepEqual( Stem("krævede"), "kræved");});
test("krævedes -> kræved", function() {deepEqual( Stem("krævedes"), "kræved");});
test("kræver -> kræv", function() {deepEqual( Stem("kræver"), "kræv");});
test("kræves -> kræv", function() {deepEqual( Stem("kræves"), "kræv");});
test("krævet -> kræv", function() {deepEqual( Stem("krævet"), "kræv");});
test("krøb -> krøb", function() {deepEqual( Stem("krøb"), "krøb");});
test("krøbling -> krøbling", function() {deepEqual( Stem("krøbling"), "krøbling");});
test("krøblinge -> krøbling", function() {deepEqual( Stem("krøblinge"), "krøbling");});
test("krøget -> krøg", function() {deepEqual( Stem("krøget"), "krøg");});
test("krønike -> krønik", function() {deepEqual( Stem("krønike"), "krønik");});
test("krønikebog -> krønikebog", function() {deepEqual( Stem("krønikebog"), "krønikebog");});
test("krønikebogen -> krønikebog", function() {deepEqual( Stem("krønikebogen"), "krønikebog");});
test("krøniken -> krønik", function() {deepEqual( Stem("krøniken"), "krønik");});
test("kse -> kse", function() {deepEqual( Stem("kse"), "kse");});
test("ksejern -> ksejern", function() {deepEqual( Stem("ksejern"), "ksejern");});
test("ksen -> ksen", function() {deepEqual( Stem("ksen"), "ksen");});
test("kser -> kser", function() {deepEqual( Stem("kser"), "kser");});
test("kserne -> ksern", function() {deepEqual( Stem("kserne"), "ksern");});
test("kub -> kub", function() {deepEqual( Stem("kub"), "kub");});
test("kubens -> kub", function() {deepEqual( Stem("kubens"), "kub");});
test("kue -> kue", function() {deepEqual( Stem("kue"), "kue");});
test("kued -> kued", function() {deepEqual( Stem("kued"), "kued");});
test("kuede -> kued", function() {deepEqual( Stem("kuede"), "kued");});
test("kuedes -> kued", function() {deepEqual( Stem("kuedes"), "kued");});
test("kuer -> kuer", function() {deepEqual( Stem("kuer"), "kuer");});
test("kues -> kues", function() {deepEqual( Stem("kues"), "kues");});
test("kugleformede -> kugleformed", function() {deepEqual( Stem("kugleformede"), "kugleformed");});
test("kuglefornede -> kugleforned", function() {deepEqual( Stem("kuglefornede"), "kugleforned");});
test("kugler -> kugl", function() {deepEqual( Stem("kugler"), "kugl");});
test("kul -> kul", function() {deepEqual( Stem("kul"), "kul");});
test("kulbækken -> kulbæk", function() {deepEqual( Stem("kulbækken"), "kulbæk");});
test("kulde -> kuld", function() {deepEqual( Stem("kulde"), "kuld");});
test("kulden -> kuld", function() {deepEqual( Stem("kulden"), "kuld");});
test("kuldens -> kuld", function() {deepEqual( Stem("kuldens"), "kuld");});
test("kuldet -> kuld", function() {deepEqual( Stem("kuldet"), "kuld");});
test("kuldkasted -> kuldkasted", function() {deepEqual( Stem("kuldkasted"), "kuldkasted");});
test("kuldkaster -> kuldkast", function() {deepEqual( Stem("kuldkaster"), "kuldkast");});
test("kulen -> kul", function() {deepEqual( Stem("kulen"), "kul");});
test("kulens -> kul", function() {deepEqual( Stem("kulens"), "kul");});
test("kulild -> kulild", function() {deepEqual( Stem("kulild"), "kulild");});
test("kulon -> kulon", function() {deepEqual( Stem("kulon"), "kulon");});
test("kumi -> kumi", function() {deepEqual( Stem("kumi"), "kumi");});
test("kummen -> kum", function() {deepEqual( Stem("kummen"), "kum");});
test("kummer -> kum", function() {deepEqual( Stem("kummer"), "kum");});
test("kummers -> kum", function() {deepEqual( Stem("kummers"), "kum");});
test("kun -> kun", function() {deepEqual( Stem("kun"), "kun");});
test("kunde -> kund", function() {deepEqual( Stem("kunde"), "kund");});
test("kundgjorde -> kundgjord", function() {deepEqual( Stem("kundgjorde"), "kundgjord");});
test("kundgjordes -> kundgjord", function() {deepEqual( Stem("kundgjordes"), "kundgjord");});
test("kundgjort -> kundgjort", function() {deepEqual( Stem("kundgjort"), "kundgjort");});
test("kundgjorte -> kundgjort", function() {deepEqual( Stem("kundgjorte"), "kundgjort");});
test("kundgør -> kundgør", function() {deepEqual( Stem("kundgør"), "kundgør");});
test("kundgøre -> kundgør", function() {deepEqual( Stem("kundgøre"), "kundgør");});
test("kundgørelse -> kundgør", function() {deepEqual( Stem("kundgørelse"), "kundgør");});
test("kundskab -> kundskab", function() {deepEqual( Stem("kundskab"), "kundskab");});
test("kundskaben -> kundskab", function() {deepEqual( Stem("kundskaben"), "kundskab");});
test("kundskabens -> kundskab", function() {deepEqual( Stem("kundskabens"), "kundskab");});
test("kundskabs -> kundskab", function() {deepEqual( Stem("kundskabs"), "kundskab");});
test("kundskabslæber -> kundskabslæb", function() {deepEqual( Stem("kundskabslæber"), "kundskabslæb");});
test("kundskabsord -> kundskabsord", function() {deepEqual( Stem("kundskabsord"), "kundskabsord");});
test("kundskabsrige -> kundskabsr", function() {deepEqual( Stem("kundskabsrige"), "kundskabsr");});
test("kunne -> kun", function() {deepEqual( Stem("kunne"), "kun");});
test("kunnet -> kun", function() {deepEqual( Stem("kunnet"), "kun");});
test("kunst -> kunst", function() {deepEqual( Stem("kunst"), "kunst");});
test("kunstarbejde -> kunstarbejd", function() {deepEqual( Stem("kunstarbejde"), "kunstarbejd");});
test("kunster -> kunst", function() {deepEqual( Stem("kunster"), "kunst");});
test("kunstforstandige -> kunstforstand", function() {deepEqual( Stem("kunstforstandige"), "kunstforstand");});
test("kunstfærdigheds -> kunstfærd", function() {deepEqual( Stem("kunstfærdigheds"), "kunstfærd");});
test("kunstgreb -> kunstgreb", function() {deepEqual( Stem("kunstgreb"), "kunstgreb");});
test("kunsthåndværkerne -> kunsthåndværk", function() {deepEqual( Stem("kunsthåndværkerne"), "kunsthåndværk");});
test("kunstner -> kunstn", function() {deepEqual( Stem("kunstner"), "kunstn");});
test("kunstnere -> kunstn", function() {deepEqual( Stem("kunstnere"), "kunstn");});
test("kunstnerhånds -> kunstnerhånd", function() {deepEqual( Stem("kunstnerhånds"), "kunstnerhånd");});
test("kunstnerne -> kunstn", function() {deepEqual( Stem("kunstnerne"), "kunstn");});
test("kunstsnilde -> kunstsnild", function() {deepEqual( Stem("kunstsnilde"), "kunstsnild");});
test("kunstværk -> kunstværk", function() {deepEqual( Stem("kunstværk"), "kunstværk");});
test("kunstværker -> kunstværk", function() {deepEqual( Stem("kunstværker"), "kunstværk");});
test("kunstvævning -> kunstvævning", function() {deepEqual( Stem("kunstvævning"), "kunstvævning");});
test("kunstvævningen -> kunstvævning", function() {deepEqual( Stem("kunstvævningen"), "kunstvævning");});
test("kurren -> kur", function() {deepEqual( Stem("kurren"), "kur");});
test("kurrende -> kur", function() {deepEqual( Stem("kurrende"), "kur");});
test("kurrer -> kur", function() {deepEqual( Stem("kurrer"), "kur");});
test("kurv -> kurv", function() {deepEqual( Stem("kurv"), "kurv");});
test("kurve -> kurv", function() {deepEqual( Stem("kurve"), "kurv");});
test("kurven -> kurv", function() {deepEqual( Stem("kurven"), "kurv");});
test("kusj -> kusj", function() {deepEqual( Stem("kusj"), "kusj");});
test("kusjan -> kusjan", function() {deepEqual( Stem("kusjan"), "kusjan");});
test("kusjans -> kusjan", function() {deepEqual( Stem("kusjans"), "kusjan");});
test("kusji -> kusji", function() {deepEqual( Stem("kusji"), "kusji");});
test("kusjiten -> kusjit", function() {deepEqual( Stem("kusjiten"), "kusjit");});
test("kusjiterne -> kusjit", function() {deepEqual( Stem("kusjiterne"), "kusjit");});
test("kusjitisk -> kusjitisk", function() {deepEqual( Stem("kusjitisk"), "kusjitisk");});
test("kusjitiske -> kusjitisk", function() {deepEqual( Stem("kusjitiske"), "kusjitisk");});
test("kuta -> kuta", function() {deepEqual( Stem("kuta"), "kuta");});
test("kuzas -> kuza", function() {deepEqual( Stem("kuzas"), "kuza");});
test("kvad -> kvad", function() {deepEqual( Stem("kvad"), "kvad");});
test("kvader -> kvad", function() {deepEqual( Stem("kvader"), "kvad");});
test("kvadersten -> kvaderst", function() {deepEqual( Stem("kvadersten"), "kvaderst");});
test("kvaderstensborde -> kvaderstensbord", function() {deepEqual( Stem("kvaderstensborde"), "kvaderstensbord");});
test("kvaderstenshuse -> kvaderstenshus", function() {deepEqual( Stem("kvaderstenshuse"), "kvaderstenshus");});
test("kval -> kval", function() {deepEqual( Stem("kval"), "kval");});
test("kvaler -> kval", function() {deepEqual( Stem("kvaler"), "kval");});
test("kvalfulde -> kvalfuld", function() {deepEqual( Stem("kvalfulde"), "kvalfuld");});
test("kvalte -> kvalt", function() {deepEqual( Stem("kvalte"), "kvalt");});
test("kvart -> kvart", function() {deepEqual( Stem("kvart"), "kvart");});
test("kvartus -> kvartus", function() {deepEqual( Stem("kvartus"), "kvartus");});
test("kvast -> kvast", function() {deepEqual( Stem("kvast"), "kvast");});
test("kvaster -> kvast", function() {deepEqual( Stem("kvaster"), "kvast");});
test("kvasterne -> kvast", function() {deepEqual( Stem("kvasterne"), "kvast");});
test("kvidder -> kvid", function() {deepEqual( Stem("kvidder"), "kvid");});
test("kvide -> kvid", function() {deepEqual( Stem("kvide"), "kvid");});
test("kvidrer -> kvidr", function() {deepEqual( Stem("kvidrer"), "kvidr");});
test("kvie -> kvie", function() {deepEqual( Stem("kvie"), "kvie");});
test("kvien -> kvien", function() {deepEqual( Stem("kvien"), "kvien");});
test("kviens -> kvien", function() {deepEqual( Stem("kviens"), "kvien");});
test("kvinde -> kvind", function() {deepEqual( Stem("kvinde"), "kvind");});
test("kvindefødt -> kvindefød", function() {deepEqual( Stem("kvindefødt"), "kvindefød");});
test("kvindekiv -> kvindekiv", function() {deepEqual( Stem("kvindekiv"), "kvindekiv");});
test("kvindeklæder -> kvindeklæd", function() {deepEqual( Stem("kvindeklæder"), "kvindeklæd");});
test("kvinden -> kvind", function() {deepEqual( Stem("kvinden"), "kvind");});
test("kvindens -> kvind", function() {deepEqual( Stem("kvindens"), "kvind");});
test("kvinder -> kvind", function() {deepEqual( Stem("kvinder"), "kvind");});
test("kvinderne -> kvind", function() {deepEqual( Stem("kvinderne"), "kvind");});
test("kvindernes -> kvind", function() {deepEqual( Stem("kvindernes"), "kvind");});
test("kvinders -> kvind", function() {deepEqual( Stem("kvinders"), "kvind");});
test("kvindes -> kvind", function() {deepEqual( Stem("kvindes"), "kvind");});
test("kvindfolk -> kvindfolk", function() {deepEqual( Stem("kvindfolk"), "kvindfolk");});
test("kvirinius -> kvirinius", function() {deepEqual( Stem("kvirinius"), "kvirinius");});
test("kvist -> kvist", function() {deepEqual( Stem("kvist"), "kvist");});
test("kviste -> kvist", function() {deepEqual( Stem("kviste"), "kvist");});
test("kvistene -> kvist", function() {deepEqual( Stem("kvistene"), "kvist");});
test("kvæde -> kvæd", function() {deepEqual( Stem("kvæde"), "kvæd");});
test("kvæder -> kvæd", function() {deepEqual( Stem("kvæder"), "kvæd");});
test("kvæg -> kvæg", function() {deepEqual( Stem("kvæg"), "kvæg");});
test("kvægavl -> kvægavl", function() {deepEqual( Stem("kvægavl"), "kvægavl");});
test("kvæge -> kvæg", function() {deepEqual( Stem("kvæge"), "kvæg");});
test("kvæged -> kvæged", function() {deepEqual( Stem("kvæged"), "kvæged");});
test("kvægende -> kvæg", function() {deepEqual( Stem("kvægende"), "kvæg");});
test("kvæger -> kvæg", function() {deepEqual( Stem("kvæger"), "kvæg");});
test("kvæges -> kvæg", function() {deepEqual( Stem("kvæges"), "kvæg");});
test("kvæget -> kvæg", function() {deepEqual( Stem("kvæget"), "kvæg");});
test("kvægfolde -> kvægfold", function() {deepEqual( Stem("kvægfolde"), "kvægfold");});
test("kvæghjorde -> kvæghjord", function() {deepEqual( Stem("kvæghjorde"), "kvæghjord");});
test("kvægs -> kvæg", function() {deepEqual( Stem("kvægs"), "kvæg");});
test("kvæld -> kvæld", function() {deepEqual( Stem("kvæld"), "kvæld");});
test("kvæle -> kvæl", function() {deepEqual( Stem("kvæle"), "kvæl");});
test("kvæler -> kvæl", function() {deepEqual( Stem("kvæler"), "kvæl");});
test("kvæles -> kvæl", function() {deepEqual( Stem("kvæles"), "kvæl");});
test("kværn -> kværn", function() {deepEqual( Stem("kværn"), "kværn");});
test("kværnen -> kværn", function() {deepEqual( Stem("kværnen"), "kværn");});
test("kværnens -> kværn", function() {deepEqual( Stem("kværnens"), "kværn");});
test("kvæstes -> kvæst", function() {deepEqual( Stem("kvæstes"), "kvæst");});
test("kyllinger -> kylling", function() {deepEqual( Stem("kyllinger"), "kylling");});
test("kyndig -> kynd", function() {deepEqual( Stem("kyndig"), "kynd");});
test("kyndige -> kynd", function() {deepEqual( Stem("kyndige"), "kynd");});
test("kyndigste -> kynd", function() {deepEqual( Stem("kyndigste"), "kynd");});
test("kyndinge -> kynding", function() {deepEqual( Stem("kyndinge"), "kynding");});
test("kypern -> kypern", function() {deepEqual( Stem("kypern"), "kypern");});
test("kyperns -> kypern", function() {deepEqual( Stem("kyperns"), "kypern");});
test("kyprioternes -> kypriot", function() {deepEqual( Stem("kyprioternes"), "kypriot");});
test("kyrene -> kyr", function() {deepEqual( Stem("kyrene"), "kyr");});
test("kyrenæeren -> kyrenæ", function() {deepEqual( Stem("kyrenæeren"), "kyrenæ");});
test("kyrenæernes -> kyrenæ", function() {deepEqual( Stem("kyrenæernes"), "kyrenæ");});
test("kyros -> kyro", function() {deepEqual( Stem("kyros"), "kyro");});
test("kyroses -> kyros", function() {deepEqual( Stem("kyroses"), "kyros");});
test("kyross -> kyros", function() {deepEqual( Stem("kyross"), "kyros");});
test("kys -> kys", function() {deepEqual( Stem("kys"), "kys");});
test("kyser -> kys", function() {deepEqual( Stem("kyser"), "kys");});
test("kyske -> kysk", function() {deepEqual( Stem("kyske"), "kysk");});
test("kysse -> kys", function() {deepEqual( Stem("kysse"), "kys");});
test("kyssed -> kyssed", function() {deepEqual( Stem("kyssed"), "kyssed");});
test("kyssede -> kyssed", function() {deepEqual( Stem("kyssede"), "kyssed");});
test("kysser -> kys", function() {deepEqual( Stem("kysser"), "kys");});
test("kysset -> kys", function() {deepEqual( Stem("kysset"), "kys");});
test("kyst -> kyst", function() {deepEqual( Stem("kyst"), "kyst");});
test("kysten -> kyst", function() {deepEqual( Stem("kysten"), "kyst");});
test("kyster -> kyst", function() {deepEqual( Stem("kyster"), "kyst");});
test("kystlandene -> kystland", function() {deepEqual( Stem("kystlandene"), "kystland");});
test("kystlandets -> kystland", function() {deepEqual( Stem("kystlandets"), "kystland");});
test("kåbe -> kåb", function() {deepEqual( Stem("kåbe"), "kåb");});
test("kåben -> kåb", function() {deepEqual( Stem("kåben"), "kåb");});
test("kåbens -> kåb", function() {deepEqual( Stem("kåbens"), "kåb");});
test("kår -> kår", function() {deepEqual( Stem("kår"), "kår");});
test("kårer -> kår", function() {deepEqual( Stem("kårer"), "kår");});
test("kæbebenet -> kæbeben", function() {deepEqual( Stem("kæbebenet"), "kæbeben");});
test("kæben -> kæb", function() {deepEqual( Stem("kæben"), "kæb");});
test("kæber -> kæb", function() {deepEqual( Stem("kæber"), "kæb");});
test("kæberne -> kæb", function() {deepEqual( Stem("kæberne"), "kæb");});
test("kæde -> kæd", function() {deepEqual( Stem("kæde"), "kæd");});
test("kædeformet -> kædeform", function() {deepEqual( Stem("kædeformet"), "kædeform");});
test("kæder -> kæd", function() {deepEqual( Stem("kæder"), "kæd");});
test("kæderne -> kæd", function() {deepEqual( Stem("kæderne"), "kæd");});
test("kække -> kæk", function() {deepEqual( Stem("kække"), "kæk");});
test("kækkeste -> kækkest", function() {deepEqual( Stem("kækkeste"), "kækkest");});
test("kælderen -> kæld", function() {deepEqual( Stem("kælderen"), "kæld");});
test("kælderrum -> kælderrum", function() {deepEqual( Stem("kælderrum"), "kælderrum");});
test("kælderrummet -> kælderrum", function() {deepEqual( Stem("kælderrummet"), "kælderrum");});
test("kælebarn -> kælebarn", function() {deepEqual( Stem("kælebarn"), "kælebarn");});
test("kælede -> kæled", function() {deepEqual( Stem("kælede"), "kæled");});
test("kælingagtige -> kælingag", function() {deepEqual( Stem("kælingagtige"), "kælingag");});
test("kælne -> kæln", function() {deepEqual( Stem("kælne"), "kæln");});
test("kælver -> kælv", function() {deepEqual( Stem("kælver"), "kælv");});
test("kæmp -> kæmp", function() {deepEqual( Stem("kæmp"), "kæmp");});
test("kæmpe -> kæmp", function() {deepEqual( Stem("kæmpe"), "kæmp");});
test("kæmped -> kæmped", function() {deepEqual( Stem("kæmped"), "kæmped");});
test("kæmpede -> kæmped", function() {deepEqual( Stem("kæmpede"), "kæmped");});
test("kæmpekraft -> kæmpekraft", function() {deepEqual( Stem("kæmpekraft"), "kæmpekraft");});
test("kæmper -> kæmp", function() {deepEqual( Stem("kæmper"), "kæmp");});
test("kæmperne -> kæmp", function() {deepEqual( Stem("kæmperne"), "kæmp");});
test("kæmpeslægten -> kæmpeslæg", function() {deepEqual( Stem("kæmpeslægten"), "kæmpeslæg");});
test("kæmpestor -> kæmpestor", function() {deepEqual( Stem("kæmpestor"), "kæmpestor");});
test("kæmpestore -> kæmpestor", function() {deepEqual( Stem("kæmpestore"), "kæmpestor");});
test("kæmpet -> kæmp", function() {deepEqual( Stem("kæmpet"), "kæmp");});
test("kæp -> kæp", function() {deepEqual( Stem("kæp"), "kæp");});
test("kæppen -> kæp", function() {deepEqual( Stem("kæppen"), "kæp");});
test("kær -> kær", function() {deepEqual( Stem("kær"), "kær");});
test("kære -> kær", function() {deepEqual( Stem("kære"), "kær");});
test("kærere -> kær", function() {deepEqual( Stem("kærere"), "kær");});
test("kærkomment -> kærkomment", function() {deepEqual( Stem("kærkomment"), "kærkomment");});
test("kærlig -> kær", function() {deepEqual( Stem("kærlig"), "kær");});
test("kærlige -> kær", function() {deepEqual( Stem("kærlige"), "kær");});
test("kærlighed -> kær", function() {deepEqual( Stem("kærlighed"), "kær");});
test("kærligheden -> kær", function() {deepEqual( Stem("kærligheden"), "kær");});
test("kærlighedens -> kær", function() {deepEqual( Stem("kærlighedens"), "kær");});
test("kærligheds -> kær", function() {deepEqual( Stem("kærligheds"), "kær");});
test("kærlighedsgerninger -> kærlighedsgerning", function() {deepEqual( Stem("kærlighedsgerninger"), "kærlighedsgerning");});
test("kærlighedsmåltider -> kærlighedsmåltid", function() {deepEqual( Stem("kærlighedsmåltider"), "kærlighedsmåltid");});
test("kærlighedssang -> kærlighedssang", function() {deepEqual( Stem("kærlighedssang"), "kærlighedssang");});
test("kærlighedsæbler -> kærlighedsæbl", function() {deepEqual( Stem("kærlighedsæbler"), "kærlighedsæbl");});
test("kærlighedsæblerne -> kærlighedsæbl", function() {deepEqual( Stem("kærlighedsæblerne"), "kærlighedsæbl");});
test("kærligt -> kær", function() {deepEqual( Stem("kærligt"), "kær");});
test("kærne -> kærn", function() {deepEqual( Stem("kærne"), "kærn");});
test("kærnetropper -> kærnetrop", function() {deepEqual( Stem("kærnetropper"), "kærnetrop");});
test("kærnetropperne -> kærnetrop", function() {deepEqual( Stem("kærnetropperne"), "kærnetrop");});
test("kærnetroppernes -> kærnetrop", function() {deepEqual( Stem("kærnetroppernes"), "kærnetrop");});
test("kærtegn -> kærtegn", function() {deepEqual( Stem("kærtegn"), "kærtegn");});
test("kærtegne -> kærtegn", function() {deepEqual( Stem("kærtegne"), "kærtegn");});
test("kæsarea -> kæsarea", function() {deepEqual( Stem("kæsarea"), "kæsarea");});
test("kættersk -> kættersk", function() {deepEqual( Stem("kættersk"), "kættersk");});
test("køb -> køb", function() {deepEqual( Stem("køb"), "køb");});
test("købe -> køb", function() {deepEqual( Stem("købe"), "køb");});
test("køber -> køb", function() {deepEqual( Stem("køber"), "køb");});
test("køberen -> køb", function() {deepEqual( Stem("køberen"), "køb");});
test("køberens -> køb", function() {deepEqual( Stem("køberens"), "køb");});
test("købes -> køb", function() {deepEqual( Stem("købes"), "køb");});
test("købesummen -> købesum", function() {deepEqual( Stem("købesummen"), "købesum");});
test("købet -> køb", function() {deepEqual( Stem("købet"), "køb");});
test("købmand -> købmand", function() {deepEqual( Stem("købmand"), "købmand");});
test("købmands -> købmand", function() {deepEqual( Stem("købmands"), "købmand");});
test("købmandsbod -> købmandsbod", function() {deepEqual( Stem("købmandsbod"), "købmandsbod");});
test("købmandsskab -> købmandsskab", function() {deepEqual( Stem("købmandsskab"), "købmandsskab");});
test("købmænd -> købmænd", function() {deepEqual( Stem("købmænd"), "købmænd");});
test("købmændene -> købmænd", function() {deepEqual( Stem("købmændene"), "købmænd");});
test("købmændenes -> købmænd", function() {deepEqual( Stem("købmændenes"), "købmænd");});
test("købslog -> købslog", function() {deepEqual( Stem("købslog"), "købslog");});
test("købslå -> købslå", function() {deepEqual( Stem("købslå"), "købslå");});
test("købslår -> købslår", function() {deepEqual( Stem("købslår"), "købslår");});
test("købt -> købt", function() {deepEqual( Stem("købt"), "købt");});
test("købte -> købt", function() {deepEqual( Stem("købte"), "købt");});
test("købtes -> købt", function() {deepEqual( Stem("købtes"), "købt");});
test("kød -> kød", function() {deepEqual( Stem("kød"), "kød");});
test("kødef -> kødef", function() {deepEqual( Stem("kødef"), "kødef");});
test("kødelig -> kød", function() {deepEqual( Stem("kødelig"), "kød");});
test("kødelige -> kød", function() {deepEqual( Stem("kødelige"), "kød");});
test("kødeligt -> kød", function() {deepEqual( Stem("kødeligt"), "kød");});
test("kødet -> kød", function() {deepEqual( Stem("kødet"), "kød");});
test("kødets -> kød", function() {deepEqual( Stem("kødets"), "kød");});
test("kødgryderne -> kødgryd", function() {deepEqual( Stem("kødgryderne"), "kødgryd");});
test("kødhjerte -> kødhjert", function() {deepEqual( Stem("kødhjerte"), "kødhjert");});
test("køds -> kød", function() {deepEqual( Stem("køds"), "kød");});
test("kødspise -> kødspis", function() {deepEqual( Stem("kødspise"), "kødspis");});
test("kødstykker -> kødstyk", function() {deepEqual( Stem("kødstykker"), "kødstyk");});
test("kødtavler -> kødtavl", function() {deepEqual( Stem("kødtavler"), "kødtavl");});
test("køer -> køer", function() {deepEqual( Stem("køer"), "køer");});
test("køerne -> køern", function() {deepEqual( Stem("køerne"), "køern");});
test("køgemesteren -> køgemest", function() {deepEqual( Stem("køgemesteren"), "køgemest");});
test("køkkener -> køkken", function() {deepEqual( Stem("køkkener"), "køkken");});
test("køkkenerne -> køkken", function() {deepEqual( Stem("køkkenerne"), "køkken");});
test("køkkenhave -> køkkenhav", function() {deepEqual( Stem("køkkenhave"), "køkkenhav");});
test("køle -> køl", function() {deepEqual( Stem("køle"), "køl");});
test("køled -> køled", function() {deepEqual( Stem("køled"), "køled");});
test("kølende -> køl", function() {deepEqual( Stem("kølende"), "køl");});
test("kølet -> køl", function() {deepEqual( Stem("kølet"), "køl");});
test("kølige -> køl", function() {deepEqual( Stem("kølige"), "køl");});
test("kølle -> køl", function() {deepEqual( Stem("kølle"), "køl");});
test("køllen -> køl", function() {deepEqual( Stem("køllen"), "køl");});
test("kønslig -> køns", function() {deepEqual( Stem("kønslig"), "køns");});
test("kønt -> kønt", function() {deepEqual( Stem("kønt"), "kønt");});
test("kør -> kør", function() {deepEqual( Stem("kør"), "kør");});
test("køre -> kør", function() {deepEqual( Stem("køre"), "kør");});
test("køreheste -> kørehest", function() {deepEqual( Stem("køreheste"), "kørehest");});
test("kørte -> kørt", function() {deepEqual( Stem("kørte"), "kørt");});
test("l -> l", function() {deepEqual( Stem("l"), "l");});
test("la -> la", function() {deepEqual( Stem("la"), "la");});
test("laban -> laban", function() {deepEqual( Stem("laban"), "laban");});
test("labans -> laban", function() {deepEqual( Stem("labans"), "laban");});
test("labede -> labed", function() {deepEqual( Stem("labede"), "labed");});
test("laber -> lab", function() {deepEqual( Stem("laber"), "lab");});
test("lad -> lad", function() {deepEqual( Stem("lad"), "lad");});
test("lada -> lada", function() {deepEqual( Stem("lada"), "lada");});
test("ladan -> ladan", function() {deepEqual( Stem("ladan"), "ladan");});
test("ladans -> ladan", function() {deepEqual( Stem("ladans"), "ladan");});
test("lade -> lad", function() {deepEqual( Stem("lade"), "lad");});
test("laden -> lad", function() {deepEqual( Stem("laden"), "lad");});
test("lader -> lad", function() {deepEqual( Stem("lader"), "lad");});
test("laderne -> lad", function() {deepEqual( Stem("laderne"), "lad");});
test("lades -> lad", function() {deepEqual( Stem("lades"), "lad");});
test("ladet -> lad", function() {deepEqual( Stem("ladet"), "lad");});
test("ladhed -> lad", function() {deepEqual( Stem("ladhed"), "lad");});
test("ladheds -> lad", function() {deepEqual( Stem("ladheds"), "lad");});
test("ladning -> ladning", function() {deepEqual( Stem("ladning"), "ladning");});
test("ladt -> ladt", function() {deepEqual( Stem("ladt"), "ladt");});
test("laels -> lael", function() {deepEqual( Stem("laels"), "lael");});
test("lag -> lag", function() {deepEqual( Stem("lag"), "lag");});
test("lagde -> lagd", function() {deepEqual( Stem("lagde"), "lagd");});
test("lagdes -> lagd", function() {deepEqual( Stem("lagdes"), "lagd");});
test("lager -> lag", function() {deepEqual( Stem("lager"), "lag");});
test("lagt -> lagt", function() {deepEqual( Stem("lagt"), "lagt");});
test("lagte -> lagt", function() {deepEqual( Stem("lagte"), "lagt");});
test("lahad -> lahad", function() {deepEqual( Stem("lahad"), "lahad");});
test("lajisj -> lajisj", function() {deepEqual( Stem("lajisj"), "lajisj");});
test("lajsja -> lajsja", function() {deepEqual( Stem("lajsja"), "lajsja");});
test("lakisj -> lakisj", function() {deepEqual( Stem("lakisj"), "lakisj");});
test("lakkede -> lakked", function() {deepEqual( Stem("lakkede"), "lakked");});
test("lakker -> lak", function() {deepEqual( Stem("lakker"), "lak");});
test("lakkum -> lakkum", function() {deepEqual( Stem("lakkum"), "lakkum");});
test("lallende -> lal", function() {deepEqual( Stem("lallende"), "lal");});
test("lam -> lam", function() {deepEqual( Stem("lam"), "lam");});
test("lama -> lama", function() {deepEqual( Stem("lama"), "lama");});
test("lamas -> lama", function() {deepEqual( Stem("lamas"), "lama");});
test("lameks -> lamek", function() {deepEqual( Stem("lameks"), "lamek");});
test("lami -> lami", function() {deepEqual( Stem("lami"), "lami");});
test("lamme -> lam", function() {deepEqual( Stem("lamme"), "lam");});
test("lammed -> lammed", function() {deepEqual( Stem("lammed"), "lammed");});
test("lammede -> lammed", function() {deepEqual( Stem("lammede"), "lammed");});
test("lammedes -> lammed", function() {deepEqual( Stem("lammedes"), "lammed");});
test("lammegribben -> lammegrib", function() {deepEqual( Stem("lammegribben"), "lammegrib");});
test("lammene -> lam", function() {deepEqual( Stem("lammene"), "lam");});
test("lammes -> lam", function() {deepEqual( Stem("lammes"), "lam");});
test("lammet -> lam", function() {deepEqual( Stem("lammet"), "lam");});
test("lammets -> lam", function() {deepEqual( Stem("lammets"), "lam");});
test("lampe -> lamp", function() {deepEqual( Stem("lampe"), "lamp");});
test("lampens -> lamp", function() {deepEqual( Stem("lampens"), "lamp");});
test("lamper -> lamp", function() {deepEqual( Stem("lamper"), "lamp");});
test("lamperne -> lamp", function() {deepEqual( Stem("lamperne"), "lamp");});
test("lampesakse -> lampesaks", function() {deepEqual( Stem("lampesakse"), "lampesaks");});
test("lampesaksene -> lampesaks", function() {deepEqual( Stem("lampesaksene"), "lampesaks");});
test("lams -> lam", function() {deepEqual( Stem("lams"), "lam");});
test("lamslog -> lamslog", function() {deepEqual( Stem("lamslog"), "lamslog");});
test("land -> land", function() {deepEqual( Stem("land"), "land");});
test("landboernes -> landbo", function() {deepEqual( Stem("landboernes"), "landbo");});
test("lande -> land", function() {deepEqual( Stem("lande"), "land");});
test("landede -> landed", function() {deepEqual( Stem("landede"), "landed");});
test("landejendom -> landejendom", function() {deepEqual( Stem("landejendom"), "landejendom");});
test("landejendomme -> landejendom", function() {deepEqual( Stem("landejendomme"), "landejendom");});
test("landemærke -> landemærk", function() {deepEqual( Stem("landemærke"), "landemærk");});
test("landemærker -> landemærk", function() {deepEqual( Stem("landemærker"), "landemærk");});
test("landene -> land", function() {deepEqual( Stem("landene"), "land");});
test("landenes -> land", function() {deepEqual( Stem("landenes"), "land");});
test("landes -> land", function() {deepEqual( Stem("landes"), "land");});
test("landet -> land", function() {deepEqual( Stem("landet"), "land");});
test("landets -> land", function() {deepEqual( Stem("landets"), "land");});
test("landevej -> landevej", function() {deepEqual( Stem("landevej"), "landevej");});
test("landflyggige -> landflyg", function() {deepEqual( Stem("landflyggige"), "landflyg");});
test("landflygtig -> landflyg", function() {deepEqual( Stem("landflygtig"), "landflyg");});
test("landflygtigbed -> landflygtigbed", function() {deepEqual( Stem("landflygtigbed"), "landflygtigbed");});
test("landflygtige -> landflyg", function() {deepEqual( Stem("landflygtige"), "landflyg");});
test("landflygtiges -> landflyg", function() {deepEqual( Stem("landflygtiges"), "landflyg");});
test("landflygtighed -> landflyg", function() {deepEqual( Stem("landflygtighed"), "landflyg");});
test("landflygtigheden -> landflyg", function() {deepEqual( Stem("landflygtigheden"), "landflyg");});
test("landflygtigheds -> landflyg", function() {deepEqual( Stem("landflygtigheds"), "landflyg");});
test("landjorden -> landjord", function() {deepEqual( Stem("landjorden"), "landjord");});
test("landmand -> landmand", function() {deepEqual( Stem("landmand"), "landmand");});
test("landområd -> landområd", function() {deepEqual( Stem("landområd"), "landområd");});
test("landområde -> landområd", function() {deepEqual( Stem("landområde"), "landområd");});
test("lands -> land", function() {deepEqual( Stem("lands"), "land");});
test("landsby -> landsby", function() {deepEqual( Stem("landsby"), "landsby");});
test("landsbyen -> landsby", function() {deepEqual( Stem("landsbyen"), "landsby");});
test("landsbyer -> landsby", function() {deepEqual( Stem("landsbyer"), "landsby");});
test("landsbyerne -> landsby", function() {deepEqual( Stem("landsbyerne"), "landsby");});
test("landsdel -> landsdel", function() {deepEqual( Stem("landsdel"), "landsdel");});
test("landsdele -> landsdel", function() {deepEqual( Stem("landsdele"), "landsdel");});
test("landsdelen -> landsdel", function() {deepEqual( Stem("landsdelen"), "landsdel");});
test("landsdelenes -> landsdel", function() {deepEqual( Stem("landsdelenes"), "landsdel");});
test("landsforvisning -> landsforvisning", function() {deepEqual( Stem("landsforvisning"), "landsforvisning");});
test("landshøvding -> landshøvding", function() {deepEqual( Stem("landshøvding"), "landshøvding");});
test("landshøvdingembede -> landshøvdingembed", function() {deepEqual( Stem("landshøvdingembede"), "landshøvdingembed");});
test("landshøvdingen -> landshøvding", function() {deepEqual( Stem("landshøvdingen"), "landshøvding");});
test("landshøvdingens -> landshøvding", function() {deepEqual( Stem("landshøvdingens"), "landshøvding");});
test("landshøvdinger -> landshøvding", function() {deepEqual( Stem("landshøvdinger"), "landshøvding");});
test("landshøvdingerne -> landshøvding", function() {deepEqual( Stem("landshøvdingerne"), "landshøvding");});
test("landskabet -> landskab", function() {deepEqual( Stem("landskabet"), "landskab");});
test("landsmand -> landsmand", function() {deepEqual( Stem("landsmand"), "landsmand");});
test("landsmandinde -> landsmandind", function() {deepEqual( Stem("landsmandinde"), "landsmandind");});
test("landsmands -> landsmand", function() {deepEqual( Stem("landsmands"), "landsmand");});
test("landsmænd -> landsmænd", function() {deepEqual( Stem("landsmænd"), "landsmænd");});
test("landsmænds -> landsmænd", function() {deepEqual( Stem("landsmænds"), "landsmænd");});
test("landstryger -> landstryg", function() {deepEqual( Stem("landstryger"), "landstryg");});
test("landstrækninger -> landstrækning", function() {deepEqual( Stem("landstrækninger"), "landstrækning");});
test("lang -> lang", function() {deepEqual( Stem("lang"), "lang");});
test("langdrag -> langdrag", function() {deepEqual( Stem("langdrag"), "langdrag");});
test("lange -> lang", function() {deepEqual( Stem("lange"), "lang");});
test("langfærd -> langfærd", function() {deepEqual( Stem("langfærd"), "langfærd");});
test("langmodig -> langmod", function() {deepEqual( Stem("langmodig"), "langmod");});
test("langmodige -> langmod", function() {deepEqual( Stem("langmodige"), "langmod");});
test("langmodighed -> langmod", function() {deepEqual( Stem("langmodighed"), "langmod");});
test("langmodigheds -> langmod", function() {deepEqual( Stem("langmodigheds"), "langmod");});
test("langs -> lang", function() {deepEqual( Stem("langs"), "lang");});
test("langside -> langsid", function() {deepEqual( Stem("langside"), "langsid");});
test("langskib -> langskib", function() {deepEqual( Stem("langskib"), "langskib");});
test("langsom -> langsom", function() {deepEqual( Stem("langsom"), "langsom");});
test("langsomt -> langsomt", function() {deepEqual( Stem("langsomt"), "langsomt");});
test("langt -> lang", function() {deepEqual( Stem("langt"), "lang");});
test("langtfra -> langtfra", function() {deepEqual( Stem("langtfra"), "langtfra");});
test("langvejs -> langvej", function() {deepEqual( Stem("langvejs"), "langvej");});
test("langvejsfra -> langvejsfra", function() {deepEqual( Stem("langvejsfra"), "langvejsfra");});
test("laod -> laod", function() {deepEqual( Stem("laod"), "laod");});
test("laodikea -> laodikea", function() {deepEqual( Stem("laodikea"), "laodikea");});
test("laodikensernes -> laodikens", function() {deepEqual( Stem("laodikensernes"), "laodikens");});
test("laodsdel -> laodsdel", function() {deepEqual( Stem("laodsdel"), "laodsdel");});
test("lap -> lap", function() {deepEqual( Stem("lap"), "lap");});
test("lappede -> lapped", function() {deepEqual( Stem("lappede"), "lapped");});
test("lappen -> lap", function() {deepEqual( Stem("lappen"), "lap");});
test("lappidots -> lappidot", function() {deepEqual( Stem("lappidots"), "lappidot");});
test("larm -> larm", function() {deepEqual( Stem("larm"), "larm");});
test("larme -> larm", function() {deepEqual( Stem("larme"), "larm");});
test("larmed -> larmed", function() {deepEqual( Stem("larmed"), "larmed");});
test("larmede -> larmed", function() {deepEqual( Stem("larmede"), "larmed");});
test("larmen -> larm", function() {deepEqual( Stem("larmen"), "larm");});
test("larmende -> larm", function() {deepEqual( Stem("larmende"), "larm");});
test("larmer -> larm", function() {deepEqual( Stem("larmer"), "larm");});
test("lasede -> lased", function() {deepEqual( Stem("lasede"), "lased");});
test("lasja -> lasja", function() {deepEqual( Stem("lasja"), "lasja");});
test("lassjaron -> lassjaron", function() {deepEqual( Stem("lassjaron"), "lassjaron");});
test("last -> last", function() {deepEqual( Stem("last"), "last");});
test("lastdragere -> lastdrag", function() {deepEqual( Stem("lastdragere"), "lastdrag");});
test("lastdragerne -> lastdrag", function() {deepEqual( Stem("lastdragerne"), "lastdrag");});
test("lastdragernes -> lastdrag", function() {deepEqual( Stem("lastdragernes"), "lastdrag");});
test("lastdyr -> lastdyr", function() {deepEqual( Stem("lastdyr"), "lastdyr");});
test("laste -> last", function() {deepEqual( Stem("laste"), "last");});
test("laster -> last", function() {deepEqual( Stem("laster"), "last");});
test("lastet -> last", function() {deepEqual( Stem("lastet"), "last");});
test("lasæa -> lasæa", function() {deepEqual( Stem("lasæa"), "lasæa");});
test("latin -> latin", function() {deepEqual( Stem("latin"), "latin");});
test("latn -> latn", function() {deepEqual( Stem("latn"), "latn");});
test("latter -> lat", function() {deepEqual( Stem("latter"), "lat");});
test("latteren -> lat", function() {deepEqual( Stem("latteren"), "lat");});
test("lav -> lav", function() {deepEqual( Stem("lav"), "lav");});
test("lave -> lav", function() {deepEqual( Stem("lave"), "lav");});
test("laved -> laved", function() {deepEqual( Stem("laved"), "laved");});
test("lavede -> laved", function() {deepEqual( Stem("lavede"), "laved");});
test("lavedes -> laved", function() {deepEqual( Stem("lavedes"), "laved");});
test("laver -> lav", function() {deepEqual( Stem("laver"), "lav");});
test("lavere -> lav", function() {deepEqual( Stem("lavere"), "lav");});
test("laves -> lav", function() {deepEqual( Stem("laves"), "lav");});
test("laveste -> lavest", function() {deepEqual( Stem("laveste"), "lavest");});
test("lavet -> lav", function() {deepEqual( Stem("lavet"), "lav");});
test("lavland -> lavland", function() {deepEqual( Stem("lavland"), "lavland");});
test("lavlandet -> lavland", function() {deepEqual( Stem("lavlandet"), "lavland");});
test("lavlandets -> lavland", function() {deepEqual( Stem("lavlandets"), "lavland");});
test("lavlandetvar -> lavlandetvar", function() {deepEqual( Stem("lavlandetvar"), "lavlandetvar");});
test("lavning -> lavning", function() {deepEqual( Stem("lavning"), "lavning");});
test("lavningen -> lavning", function() {deepEqual( Stem("lavningen"), "lavning");});
test("lavslette -> lavslet", function() {deepEqual( Stem("lavslette"), "lavslet");});
test("lavstammet -> lavstam", function() {deepEqual( Stem("lavstammet"), "lavstam");});
test("lazarus -> lazarus", function() {deepEqual( Stem("lazarus"), "lazarus");});
test("lbalsambedene -> lbalsambed", function() {deepEqual( Stem("lbalsambedene"), "lbalsambed");});
test("ldes -> ldes", function() {deepEqual( Stem("ldes"), "ldes");});
test("ldste -> ldste", function() {deepEqual( Stem("ldste"), "ldste");});
test("ldsterådet -> ldsteråd", function() {deepEqual( Stem("ldsterådet"), "ldsteråd");});
test("ldstes -> ldstes", function() {deepEqual( Stem("ldstes"), "ldstes");});
test("le -> le", function() {deepEqual( Stem("le"), "le");});
test("lea -> lea", function() {deepEqual( Stem("lea"), "lea");});
test("leafra -> leafra", function() {deepEqual( Stem("leafra"), "leafra");});
test("leas -> leas", function() {deepEqual( Stem("leas"), "leas");});
test("lebanas -> lebana", function() {deepEqual( Stem("lebanas"), "lebana");});
test("lebaot -> lebaot", function() {deepEqual( Stem("lebaot"), "lebaot");});
test("lebbæus -> lebbæus", function() {deepEqual( Stem("lebbæus"), "lebbæus");});
test("lebona -> lebona", function() {deepEqual( Stem("lebona"), "lebona");});
test("led -> led", function() {deepEqual( Stem("led"), "led");});
test("lede -> led", function() {deepEqual( Stem("lede"), "led");});
test("leded -> leded", function() {deepEqual( Stem("leded"), "leded");});
test("ledede -> leded", function() {deepEqual( Stem("ledede"), "leded");});
test("lededes -> leded", function() {deepEqual( Stem("lededes"), "leded");});
test("ledelse -> led", function() {deepEqual( Stem("ledelse"), "led");});
test("ledemod -> ledemod", function() {deepEqual( Stem("ledemod"), "ledemod");});
test("ledende -> led", function() {deepEqual( Stem("ledende"), "led");});
test("leder -> led", function() {deepEqual( Stem("leder"), "led");});
test("ledere -> led", function() {deepEqual( Stem("ledere"), "led");});
test("lederen -> led", function() {deepEqual( Stem("lederen"), "led");});
test("ledes -> led", function() {deepEqual( Stem("ledes"), "led");});
test("ledet -> led", function() {deepEqual( Stem("ledet"), "led");});
test("ledige -> led", function() {deepEqual( Stem("ledige"), "led");});
test("lediggængerne -> lediggæng", function() {deepEqual( Stem("lediggængerne"), "lediggæng");});
test("ledigt -> led", function() {deepEqual( Stem("ledigt"), "led");});
test("leding -> leding", function() {deepEqual( Stem("leding"), "leding");});
test("ledmod -> ledmod", function() {deepEqual( Stem("ledmod"), "ledmod");});
test("ledsage -> ledsag", function() {deepEqual( Stem("ledsage"), "ledsag");});
test("ledsagede -> ledsaged", function() {deepEqual( Stem("ledsagede"), "ledsaged");});
test("ledsager -> ledsag", function() {deepEqual( Stem("ledsager"), "ledsag");});
test("ledsagere -> ledsag", function() {deepEqual( Stem("ledsagere"), "ledsag");});
test("ledsaget -> ledsag", function() {deepEqual( Stem("ledsaget"), "ledsag");});
test("ledt -> ledt", function() {deepEqual( Stem("ledt"), "ledt");});
test("ledte -> ledt", function() {deepEqual( Stem("ledte"), "ledt");});
test("ledtog -> ledtog", function() {deepEqual( Stem("ledtog"), "ledtog");});
test("leende -> leend", function() {deepEqual( Stem("leende"), "leend");});
test("leg -> leg", function() {deepEqual( Stem("leg"), "leg");});
test("lege -> leg", function() {deepEqual( Stem("lege"), "leg");});
test("leged -> leged", function() {deepEqual( Stem("leged"), "leged");});
test("legede -> leged", function() {deepEqual( Stem("legede"), "leged");});
test("legem -> legem", function() {deepEqual( Stem("legem"), "legem");});
test("legeme -> legem", function() {deepEqual( Stem("legeme"), "legem");});
test("legemer -> legem", function() {deepEqual( Stem("legemer"), "legem");});
test("legemerne -> legem", function() {deepEqual( Stem("legemerne"), "legem");});
test("legemes -> legem", function() {deepEqual( Stem("legemes"), "legem");});
test("legemet -> legem", function() {deepEqual( Stem("legemet"), "legem");});
test("legemets -> legem", function() {deepEqual( Stem("legemets"), "legem");});
test("legemlig -> legem", function() {deepEqual( Stem("legemlig"), "legem");});
test("legemlige -> legem", function() {deepEqual( Stem("legemlige"), "legem");});
test("legemsdel -> legemsdel", function() {deepEqual( Stem("legemsdel"), "legemsdel");});
test("legemsfejl -> legemsfejl", function() {deepEqual( Stem("legemsfejl"), "legemsfejl");});
test("legemshøjde -> legemshøjd", function() {deepEqual( Stem("legemshøjde"), "legemshøjd");});
test("legemsskade -> legemsskad", function() {deepEqual( Stem("legemsskade"), "legemsskad");});
test("legende -> leg", function() {deepEqual( Stem("legende"), "leg");});
test("legendes -> leg", function() {deepEqual( Stem("legendes"), "leg");});
test("legenet -> legen", function() {deepEqual( Stem("legenet"), "legen");});
test("legeplads -> legeplad", function() {deepEqual( Stem("legeplads"), "legeplad");});
test("legion -> legion", function() {deepEqual( Stem("legion"), "legion");});
test("legionen -> legion", function() {deepEqual( Stem("legionen"), "legion");});
test("legioner -> legion", function() {deepEqual( Stem("legioner"), "legion");});
test("lehaberne -> lehab", function() {deepEqual( Stem("lehaberne"), "lehab");});
test("lehi -> lehi", function() {deepEqual( Stem("lehi"), "lehi");});
test("leion -> leion", function() {deepEqual( Stem("leion"), "leion");});
test("leje -> lej", function() {deepEqual( Stem("leje"), "lej");});
test("lejede -> lejed", function() {deepEqual( Stem("lejede"), "lejed");});
test("lejer -> lej", function() {deepEqual( Stem("lejer"), "lej");});
test("lejesummen -> lejesum", function() {deepEqual( Stem("lejesummen"), "lejesum");});
test("lejesvend -> lejesvend", function() {deepEqual( Stem("lejesvend"), "lejesvend");});
test("lejesvende -> lejesv", function() {deepEqual( Stem("lejesvende"), "lejesv");});
test("lejesvenden -> lejesvend", function() {deepEqual( Stem("lejesvenden"), "lejesvend");});
test("lejesvendene -> lejesvend", function() {deepEqual( Stem("lejesvendene"), "lejesvend");});
test("lejet -> lej", function() {deepEqual( Stem("lejet"), "lej");});
test("lejets -> lej", function() {deepEqual( Stem("lejets"), "lej");});
test("lejlighed -> lej", function() {deepEqual( Stem("lejlighed"), "lej");});
test("lejligheden -> lej", function() {deepEqual( Stem("lejligheden"), "lej");});
test("lejr -> lejr", function() {deepEqual( Stem("lejr"), "lejr");});
test("lejrafdeling -> lejrafdeling", function() {deepEqual( Stem("lejrafdeling"), "lejrafdeling");});
test("lejre -> lejr", function() {deepEqual( Stem("lejre"), "lejr");});
test("lejrede -> lejred", function() {deepEqual( Stem("lejrede"), "lejred");});
test("lejren -> lejr", function() {deepEqual( Stem("lejren"), "lejr");});
test("lejrene -> lejr", function() {deepEqual( Stem("lejrene"), "lejr");});
test("lejrens -> lejr", function() {deepEqual( Stem("lejrens"), "lejr");});
test("lejrer -> lejr", function() {deepEqual( Stem("lejrer"), "lejr");});
test("lejret -> lejr", function() {deepEqual( Stem("lejret"), "lejr");});
test("lejrplads -> lejrplad", function() {deepEqual( Stem("lejrplads"), "lejrplad");});
test("lejrpladser -> lejrplads", function() {deepEqual( Stem("lejrpladser"), "lejrplads");});
test("lejrs -> lejr", function() {deepEqual( Stem("lejrs"), "lejr");});
test("lejrsted -> lejrsted", function() {deepEqual( Stem("lejrsted"), "lejrsted");});
test("lejrtoget -> lejrtog", function() {deepEqual( Stem("lejrtoget"), "lejrtog");});
test("lekas -> leka", function() {deepEqual( Stem("lekas"), "leka");});
test("leks -> lek", function() {deepEqual( Stem("leks"), "lek");});
test("lem -> lem", function() {deepEqual( Stem("lem"), "lem");});
test("lemek -> lemek", function() {deepEqual( Stem("lemek"), "lemek");});
test("lemeks -> lemek", function() {deepEqual( Stem("lemeks"), "lemek");});
test("lemelk -> lemelk", function() {deepEqual( Stem("lemelk"), "lemelk");});
test("lemlæste -> lemlæst", function() {deepEqual( Stem("lemlæste"), "lemlæst");});
test("lemlæstet -> lemlæst", function() {deepEqual( Stem("lemlæstet"), "lemlæst");});
test("lemmer -> lem", function() {deepEqual( Stem("lemmer"), "lem");});
test("lemmerne -> lem", function() {deepEqual( Stem("lemmerne"), "lem");});
test("lempeligt -> lemp", function() {deepEqual( Stem("lempeligt"), "lemp");});
test("lempelse -> lemp", function() {deepEqual( Stem("lempelse"), "lemp");});
test("lemuel -> lemuel", function() {deepEqual( Stem("lemuel"), "lemuel");});
test("leois -> leois", function() {deepEqual( Stem("leois"), "leois");});
test("leos -> leos", function() {deepEqual( Stem("leos"), "leos");});
test("ler -> ler", function() {deepEqual( Stem("ler"), "ler");});
test("leret -> ler", function() {deepEqual( Stem("leret"), "ler");});
test("lerfødder -> lerfød", function() {deepEqual( Stem("lerfødder"), "lerfød");});
test("lerkar -> lerkar", function() {deepEqual( Stem("lerkar"), "lerkar");});
test("lerkrukke -> lerkruk", function() {deepEqual( Stem("lerkrukke"), "lerkruk");});
test("lerpudset -> lerpuds", function() {deepEqual( Stem("lerpudset"), "lerpuds");});
test("lesjem -> lesjem", function() {deepEqual( Stem("lesjem"), "lesjem");});
test("let -> let", function() {deepEqual( Stem("let"), "let");});
test("letek -> letek", function() {deepEqual( Stem("letek"), "letek");});
test("letfærd -> letfærd", function() {deepEqual( Stem("letfærd"), "letfærd");});
test("letfærdig -> letfærd", function() {deepEqual( Stem("letfærdig"), "letfærd");});
test("letfærdige -> letfærd", function() {deepEqual( Stem("letfærdige"), "letfærd");});
test("letsindig -> letsind", function() {deepEqual( Stem("letsindig"), "letsind");});
test("letsindige -> letsind", function() {deepEqual( Stem("letsindige"), "letsind");});
test("letsindiges -> letsind", function() {deepEqual( Stem("letsindiges"), "letsind");});
test("letsindighed -> letsind", function() {deepEqual( Stem("letsindighed"), "letsind");});
test("lette -> let", function() {deepEqual( Stem("lette"), "let");});
test("lettede -> letted", function() {deepEqual( Stem("lettede"), "letted");});
test("lettelig -> let", function() {deepEqual( Stem("lettelig"), "let");});
test("lettelse -> let", function() {deepEqual( Stem("lettelse"), "let");});
test("letten -> let", function() {deepEqual( Stem("letten"), "let");});
test("lettere -> let", function() {deepEqual( Stem("lettere"), "let");});
test("lettest -> lettest", function() {deepEqual( Stem("lettest"), "lettest");});
test("letusjiterne -> letusjit", function() {deepEqual( Stem("letusjiterne"), "letusjit");});
test("letåen -> letå", function() {deepEqual( Stem("letåen"), "letå");});
test("lev -> lev", function() {deepEqual( Stem("lev"), "lev");});
test("leve -> lev", function() {deepEqual( Stem("leve"), "lev");});
test("leved -> leved", function() {deepEqual( Stem("leved"), "leved");});
test("levedage -> levedag", function() {deepEqual( Stem("levedage"), "levedag");});
test("levede -> leved", function() {deepEqual( Stem("levede"), "leved");});
test("levekunst -> levekunst", function() {deepEqual( Stem("levekunst"), "levekunst");});
test("levende -> lev", function() {deepEqual( Stem("levende"), "lev");});
test("levendegjort -> levendegjort", function() {deepEqual( Stem("levendegjort"), "levendegjort");});
test("levendegør -> levendegør", function() {deepEqual( Stem("levendegør"), "levendegør");});
test("levendegøre -> levendegør", function() {deepEqual( Stem("levendegøre"), "levendegør");});
test("levendegørende -> levendegør", function() {deepEqual( Stem("levendegørende"), "levendegør");});
test("levendegøres -> levendegør", function() {deepEqual( Stem("levendegøres"), "levendegør");});
test("levendes -> lev", function() {deepEqual( Stem("levendes"), "lev");});
test("lever -> lev", function() {deepEqual( Stem("lever"), "lev");});
test("levere -> lev", function() {deepEqual( Stem("levere"), "lev");});
test("leverede -> lev", function() {deepEqual( Stem("leverede"), "lev");});
test("leveren -> lev", function() {deepEqual( Stem("leveren"), "lev");});
test("leveret -> lev", function() {deepEqual( Stem("leveret"), "lev");});
test("leverlap -> leverlap", function() {deepEqual( Stem("leverlap"), "leverlap");});
test("leverlappen -> leverlap", function() {deepEqual( Stem("leverlappen"), "leverlap");});
test("levet -> lev", function() {deepEqual( Stem("levet"), "lev");});
test("levetid -> levetid", function() {deepEqual( Stem("levetid"), "levetid");});
test("leveår -> leveår", function() {deepEqual( Stem("leveår"), "leveår");});
test("levi -> levi", function() {deepEqual( Stem("levi"), "levi");});
test("leviferne -> levif", function() {deepEqual( Stem("leviferne"), "levif");});
test("levis -> levis", function() {deepEqual( Stem("levis"), "levis");});
test("levisønner -> levisøn", function() {deepEqual( Stem("levisønner"), "levisøn");});
test("levisønnerne -> levisøn", function() {deepEqual( Stem("levisønnerne"), "levisøn");});
test("levit -> levit", function() {deepEqual( Stem("levit"), "levit");});
test("levitbyerne -> levitby", function() {deepEqual( Stem("levitbyerne"), "levitby");});
test("leviteme -> levitem", function() {deepEqual( Stem("leviteme"), "levitem");});
test("leviten -> levit", function() {deepEqual( Stem("leviten"), "levit");});
test("leviter -> levit", function() {deepEqual( Stem("leviter"), "levit");});
test("leviterne -> levit", function() {deepEqual( Stem("leviterne"), "levit");});
test("leviternes -> levit", function() {deepEqual( Stem("leviternes"), "levit");});
test("levitisk -> levitisk", function() {deepEqual( Stem("levitisk"), "levitisk");});
test("levitiske -> levitisk", function() {deepEqual( Stem("levitiske"), "levitisk");});
test("levitpræster -> levitpræst", function() {deepEqual( Stem("levitpræster"), "levitpræst");});
test("levitpræsterne -> levitpræst", function() {deepEqual( Stem("levitpræsterne"), "levitpræst");});
test("levits -> levit", function() {deepEqual( Stem("levits"), "levit");});
test("levitslægter -> levitslæg", function() {deepEqual( Stem("levitslægter"), "levitslæg");});
test("levne -> levn", function() {deepEqual( Stem("levne"), "levn");});
test("levned -> levned", function() {deepEqual( Stem("levned"), "levned");});
test("levnede -> levned", function() {deepEqual( Stem("levnede"), "levned");});
test("levnedes -> levned", function() {deepEqual( Stem("levnedes"), "levned");});
test("levnedsmidler -> levnedsmidl", function() {deepEqual( Stem("levnedsmidler"), "levnedsmidl");});
test("levnedsmidlerne -> levnedsmidl", function() {deepEqual( Stem("levnedsmidlerne"), "levnedsmidl");});
test("levner -> levn", function() {deepEqual( Stem("levner"), "levn");});
test("levnes -> levn", function() {deepEqual( Stem("levnes"), "levn");});
test("levnet -> levn", function() {deepEqual( Stem("levnet"), "levn");});
test("levnin -> levnin", function() {deepEqual( Stem("levnin"), "levnin");});
test("levning -> levning", function() {deepEqual( Stem("levning"), "levning");});
test("levningen -> levning", function() {deepEqual( Stem("levningen"), "levning");});
test("levninger -> levning", function() {deepEqual( Stem("levninger"), "levning");});
test("levningerne -> levning", function() {deepEqual( Stem("levningerne"), "levning");});
test("libanon -> libanon", function() {deepEqual( Stem("libanon"), "libanon");});
test("libanonceder -> libanonced", function() {deepEqual( Stem("libanonceder"), "libanonced");});
test("libanons -> libanon", function() {deepEqual( Stem("libanons"), "libanon");});
test("libanonskovhuset -> libanonskovhus", function() {deepEqual( Stem("libanonskovhuset"), "libanonskovhus");});
test("libna -> libna", function() {deepEqual( Stem("libna"), "libna");});
test("libnat -> libnat", function() {deepEqual( Stem("libnat"), "libnat");});
test("libni -> libni", function() {deepEqual( Stem("libni"), "libni");});
test("libniternes -> libnit", function() {deepEqual( Stem("libniternes"), "libnit");});
test("libyens -> liby", function() {deepEqual( Stem("libyens"), "liby");});
test("libyer -> liby", function() {deepEqual( Stem("libyer"), "liby");});
test("libyere -> liby", function() {deepEqual( Stem("libyere"), "liby");});
test("libyerne -> liby", function() {deepEqual( Stem("libyerne"), "liby");});
test("lid -> lid", function() {deepEqual( Stem("lid"), "lid");});
test("lide -> lid", function() {deepEqual( Stem("lide"), "lid");});
test("lidelse -> lid", function() {deepEqual( Stem("lidelse"), "lid");});
test("lidelsens -> lid", function() {deepEqual( Stem("lidelsens"), "lid");});
test("lidelser -> lid", function() {deepEqual( Stem("lidelser"), "lid");});
test("lidelserne -> lid", function() {deepEqual( Stem("lidelserne"), "lid");});
test("lidelsers -> lid", function() {deepEqual( Stem("lidelsers"), "lid");});
test("liden -> lid", function() {deepEqual( Stem("liden"), "lid");});
test("lidende -> lid", function() {deepEqual( Stem("lidende"), "lid");});
test("lidendes -> lid", function() {deepEqual( Stem("lidendes"), "lid");});
test("lidenskaber -> lidenskab", function() {deepEqual( Stem("lidenskaber"), "lidenskab");});
test("lider -> lid", function() {deepEqual( Stem("lider"), "lid");});
test("lides -> lid", function() {deepEqual( Stem("lides"), "lid");});
test("lidet -> lid", function() {deepEqual( Stem("lidet"), "lid");});
test("lidettroende -> lidettro", function() {deepEqual( Stem("lidettroende"), "lidettro");});
test("lidt -> lidt", function() {deepEqual( Stem("lidt"), "lidt");});
test("liflig -> lif", function() {deepEqual( Stem("liflig"), "lif");});
test("liflige -> lif", function() {deepEqual( Stem("liflige"), "lif");});
test("lifligere -> lif", function() {deepEqual( Stem("lifligere"), "lif");});
test("liflighed -> lif", function() {deepEqual( Stem("liflighed"), "lif");});
test("lifligheds -> lif", function() {deepEqual( Stem("lifligheds"), "lif");});
test("lifligt -> lif", function() {deepEqual( Stem("lifligt"), "lif");});
test("lig -> lig", function() {deepEqual( Stem("lig"), "lig");});
test("ligblegt -> ligbleg", function() {deepEqual( Stem("ligblegt"), "ligbleg");});
test("lige -> lig", function() {deepEqual( Stem("lige"), "lig");});
test("ligedan -> ligedan", function() {deepEqual( Stem("ligedan"), "ligedan");});
test("ligedannede -> ligedanned", function() {deepEqual( Stem("ligedannede"), "ligedanned");});
test("ligedannet -> ligedan", function() {deepEqual( Stem("ligedannet"), "ligedan");});
test("ligefrem -> ligefrem", function() {deepEqual( Stem("ligefrem"), "ligefrem");});
test("ligeledes -> ligeled", function() {deepEqual( Stem("ligeledes"), "ligeled");});
test("ligelighed -> lig", function() {deepEqual( Stem("ligelighed"), "lig");});
test("ligeligt -> lig", function() {deepEqual( Stem("ligeligt"), "lig");});
test("ligemand -> ligemand", function() {deepEqual( Stem("ligemand"), "ligemand");});
test("ligene -> lig", function() {deepEqual( Stem("ligene"), "lig");});
test("ligesidet -> ligesid", function() {deepEqual( Stem("ligesidet"), "ligesid");});
test("ligesindet -> ligesind", function() {deepEqual( Stem("ligesindet"), "ligesind");});
test("ligesom -> ligesom", function() {deepEqual( Stem("ligesom"), "ligesom");});
test("ligestilles -> ligestil", function() {deepEqual( Stem("ligestilles"), "ligestil");});
test("ligestillet -> ligestil", function() {deepEqual( Stem("ligestillet"), "ligestil");});
test("ligeså -> ligeså", function() {deepEqual( Stem("ligeså"), "ligeså");});
test("liget -> lig", function() {deepEqual( Stem("liget"), "lig");});
test("ligetil -> ligetil", function() {deepEqual( Stem("ligetil"), "ligetil");});
test("ligge -> lig", function() {deepEqual( Stem("ligge"), "lig");});
test("liggende -> lig", function() {deepEqual( Stem("liggende"), "lig");});
test("liggendefæ -> liggendefæ", function() {deepEqual( Stem("liggendefæ"), "liggendefæ");});
test("ligger -> lig", function() {deepEqual( Stem("ligger"), "lig");});
test("ligget -> lig", function() {deepEqual( Stem("ligget"), "lig");});
test("lighed -> lig", function() {deepEqual( Stem("lighed"), "lig");});
test("ligklage -> ligklag", function() {deepEqual( Stem("ligklage"), "ligklag");});
test("ligne -> lign", function() {deepEqual( Stem("ligne"), "lign");});
test("ligned -> ligned", function() {deepEqual( Stem("ligned"), "ligned");});
test("lignede -> ligned", function() {deepEqual( Stem("lignede"), "ligned");});
test("lignelse -> lign", function() {deepEqual( Stem("lignelse"), "lign");});
test("lignelsen -> lign", function() {deepEqual( Stem("lignelsen"), "lign");});
test("lignelser -> lign", function() {deepEqual( Stem("lignelser"), "lign");});
test("lignelserne -> lign", function() {deepEqual( Stem("lignelserne"), "lign");});
test("lignelsesvis -> lignelsesvis", function() {deepEqual( Stem("lignelsesvis"), "lignelsesvis");});
test("lignende -> lign", function() {deepEqual( Stem("lignende"), "lign");});
test("ligner -> lign", function() {deepEqual( Stem("ligner"), "lign");});
test("lignes -> lign", function() {deepEqual( Stem("lignes"), "lign");});
test("ligt -> ligt", function() {deepEqual( Stem("ligt"), "ligt");});
test("likhi -> likhi", function() {deepEqual( Stem("likhi"), "likhi");});
test("lil -> lil", function() {deepEqual( Stem("lil"), "lil");});
test("lilje -> lilj", function() {deepEqual( Stem("lilje"), "lilj");});
test("liljeformet -> liljeform", function() {deepEqual( Stem("liljeformet"), "liljeform");});
test("liljen -> lilj", function() {deepEqual( Stem("liljen"), "lilj");});
test("liljer -> lilj", function() {deepEqual( Stem("liljer"), "lilj");});
test("lille -> lil", function() {deepEqual( Stem("lille"), "lil");});
test("lillefinger -> lillefing", function() {deepEqual( Stem("lillefinger"), "lillefing");});
test("lilles -> lil", function() {deepEqual( Stem("lilles"), "lil");});
test("lillierne -> lilli", function() {deepEqual( Stem("lillierne"), "lilli");});
test("lin -> lin", function() {deepEqual( Stem("lin"), "lin");});
test("lindre -> lindr", function() {deepEqual( Stem("lindre"), "lindr");});
test("lindret -> lindr", function() {deepEqual( Stem("lindret"), "lindr");});
test("lindring -> lindring", function() {deepEqual( Stem("lindring"), "lindring");});
test("linie -> lini", function() {deepEqual( Stem("linie"), "lini");});
test("linklæde -> linklæd", function() {deepEqual( Stem("linklæde"), "linklæd");});
test("linklæder -> linklæd", function() {deepEqual( Stem("linklæder"), "linklæd");});
test("linklæderne -> linklæd", function() {deepEqual( Stem("linklæderne"), "linklæd");});
test("linklædet -> linklæd", function() {deepEqual( Stem("linklædet"), "linklæd");});
test("linned -> linned", function() {deepEqual( Stem("linned"), "linned");});
test("linnedbenklæder -> linnedbenklæd", function() {deepEqual( Stem("linnedbenklæder"), "linnedbenklæd");});
test("linnedbenklæderne -> linnedbenklæd", function() {deepEqual( Stem("linnedbenklæderne"), "linnedbenklæd");});
test("linnedbælte -> linnedbælt", function() {deepEqual( Stem("linnedbælte"), "linnedbælt");});
test("linnede -> linned", function() {deepEqual( Stem("linnede"), "linned");});
test("linnedhuer -> linnedhu", function() {deepEqual( Stem("linnedhuer"), "linnedhu");});
test("linnedkjortel -> linnedkjortel", function() {deepEqual( Stem("linnedkjortel"), "linnedkjortel");});
test("linnedkjortler -> linnedkjortl", function() {deepEqual( Stem("linnedkjortler"), "linnedkjortl");});
test("linnedklæder -> linnedklæd", function() {deepEqual( Stem("linnedklæder"), "linnedklæd");});
test("linnedklæderne -> linnedklæd", function() {deepEqual( Stem("linnedklæderne"), "linnedklæd");});
test("linnedklædning -> linnedklædning", function() {deepEqual( Stem("linnedklædning"), "linnedklædning");});
test("linnedvæveriets -> linnedvæveri", function() {deepEqual( Stem("linnedvæveriets"), "linnedvæveri");});
test("linning -> linning", function() {deepEqual( Stem("linning"), "linning");});
test("linser -> lins", function() {deepEqual( Stem("linser"), "lins");});
test("linus -> linus", function() {deepEqual( Stem("linus"), "linus");});
test("list -> list", function() {deepEqual( Stem("list"), "list");});
test("liste -> list", function() {deepEqual( Stem("liste"), "list");});
test("listede -> listed", function() {deepEqual( Stem("listede"), "listed");});
test("listen -> list", function() {deepEqual( Stem("listen"), "list");});
test("listet -> list", function() {deepEqual( Stem("listet"), "list");});
test("listiges -> list", function() {deepEqual( Stem("listiges"), "list");});
test("listigt -> list", function() {deepEqual( Stem("listigt"), "list");});
test("liv -> liv", function() {deepEqual( Stem("liv"), "liv");});
test("live -> liv", function() {deepEqual( Stem("live"), "liv");});
test("livegne -> livegn", function() {deepEqual( Stem("livegne"), "livegn");});
test("livet -> liv", function() {deepEqual( Stem("livet"), "liv");});
test("livets -> liv", function() {deepEqual( Stem("livets"), "liv");});
test("livjatan -> livjatan", function() {deepEqual( Stem("livjatan"), "livjatan");});
test("livløse -> livløs", function() {deepEqual( Stem("livløse"), "livløs");});
test("livs -> liv", function() {deepEqual( Stem("livs"), "liv");});
test("livsalige -> livsa", function() {deepEqual( Stem("livsalige"), "livsa");});
test("livsalighed -> livsa", function() {deepEqual( Stem("livsalighed"), "livsa");});
test("livsdage -> livsdag", function() {deepEqual( Stem("livsdage"), "livsdag");});
test("livsens -> livs", function() {deepEqual( Stem("livsens"), "livs");});
test("livsfare -> livsfar", function() {deepEqual( Stem("livsfare"), "livsfar");});
test("livsfrugt -> livsfrug", function() {deepEqual( Stem("livsfrugt"), "livsfrug");});
test("livsglad -> livsglad", function() {deepEqual( Stem("livsglad"), "livsglad");});
test("livsgry -> livsgry", function() {deepEqual( Stem("livsgry"), "livsgry");});
test("livskraft -> livskraft", function() {deepEqual( Stem("livskraft"), "livskraft");});
test("livssaft -> livssaft", function() {deepEqual( Stem("livssaft"), "livssaft");});
test("livstegn -> livstegn", function() {deepEqual( Stem("livstegn"), "livstegn");});
test("livstid -> livstid", function() {deepEqual( Stem("livstid"), "livstid");});
test("livsånde -> livsånd", function() {deepEqual( Stem("livsånde"), "livsånd");});
test("livsårs -> livsår", function() {deepEqual( Stem("livsårs"), "livsår");});
test("livvagt -> livvag", function() {deepEqual( Stem("livvagt"), "livvag");});
test("livvagten -> livvag", function() {deepEqual( Stem("livvagten"), "livvag");});
test("livvagtens -> livvag", function() {deepEqual( Stem("livvagtens"), "livvag");});
test("livvagts -> livvag", function() {deepEqual( Stem("livvagts"), "livvag");});
test("lldvogn -> lldvogn", function() {deepEqual( Stem("lldvogn"), "lldvogn");});
test("lo -> lo", function() {deepEqual( Stem("lo"), "lo");});
test("lod -> lod", function() {deepEqual( Stem("lod"), "lod");});
test("lodbyggere -> lodbyg", function() {deepEqual( Stem("lodbyggere"), "lodbyg");});
test("lodded -> lodded", function() {deepEqual( Stem("lodded"), "lodded");});
test("loddede -> lodded", function() {deepEqual( Stem("loddede"), "lodded");});
test("lodden -> lod", function() {deepEqual( Stem("lodden"), "lod");});
test("lodder -> lod", function() {deepEqual( Stem("lodder"), "lod");});
test("loddet -> lod", function() {deepEqual( Stem("loddet"), "lod");});
test("lode -> lod", function() {deepEqual( Stem("lode"), "lod");});
test("lodebar -> lodebar", function() {deepEqual( Stem("lodebar"), "lodebar");});
test("lodebars -> lodebar", function() {deepEqual( Stem("lodebars"), "lodebar");});
test("lodkastning -> lodkastning", function() {deepEqual( Stem("lodkastning"), "lodkastning");});
test("lodkastningen -> lodkastning", function() {deepEqual( Stem("lodkastningen"), "lodkastning");});
test("lodne -> lodn", function() {deepEqual( Stem("lodne"), "lodn");});
test("lodningen -> lodning", function() {deepEqual( Stem("lodningen"), "lodning");});
test("lods -> lod", function() {deepEqual( Stem("lods"), "lod");});
test("loen -> loen", function() {deepEqual( Stem("loen"), "loen");});
test("loft -> loft", function() {deepEqual( Stem("loft"), "loft");});
test("loftsbjælkerne -> loftsbjælk", function() {deepEqual( Stem("loftsbjælkerne"), "loftsbjælk");});
test("log -> log", function() {deepEqual( Stem("log"), "log");});
test("logrer -> logr", function() {deepEqual( Stem("logrer"), "logr");});
test("lois -> lois", function() {deepEqual( Stem("lois"), "lois");});
test("lok -> lok", function() {deepEqual( Stem("lok"), "lok");});
test("lokke -> lok", function() {deepEqual( Stem("lokke"), "lok");});
test("lokked -> lokked", function() {deepEqual( Stem("lokked"), "lokked");});
test("lokkede -> lokked", function() {deepEqual( Stem("lokkede"), "lokked");});
test("lokkende -> lok", function() {deepEqual( Stem("lokkende"), "lok");});
test("lokker -> lok", function() {deepEqual( Stem("lokker"), "lok");});
test("lokkes -> lok", function() {deepEqual( Stem("lokkes"), "lok");});
test("lokket -> lok", function() {deepEqual( Stem("lokket"), "lok");});
test("loppe -> lop", function() {deepEqual( Stem("loppe"), "lop");});
test("losse -> los", function() {deepEqual( Stem("losse"), "los");});
test("lot -> lot", function() {deepEqual( Stem("lot"), "lot");});
test("lotan -> lotan", function() {deepEqual( Stem("lotan"), "lotan");});
test("lotans -> lotan", function() {deepEqual( Stem("lotans"), "lotan");});
test("loth -> loth", function() {deepEqual( Stem("loth"), "loth");});
test("loths -> loth", function() {deepEqual( Stem("loths"), "loth");});
test("lots -> lot", function() {deepEqual( Stem("lots"), "lot");});
test("lotusbuske -> lotusbusk", function() {deepEqual( Stem("lotusbuske"), "lotusbusk");});
test("lotusbuskene -> lotusbusk", function() {deepEqual( Stem("lotusbuskene"), "lotusbusk");});
test("lov -> lov", function() {deepEqual( Stem("lov"), "lov");});
test("lovbog -> lovbog", function() {deepEqual( Stem("lovbog"), "lovbog");});
test("lovbogen -> lovbog", function() {deepEqual( Stem("lovbogen"), "lovbog");});
test("lovbogens -> lovbog", function() {deepEqual( Stem("lovbogens"), "lovbog");});
test("lovbrud -> lovbrud", function() {deepEqual( Stem("lovbrud"), "lovbrud");});
test("lovbud -> lovbud", function() {deepEqual( Stem("lovbud"), "lovbud");});
test("lovbudene -> lovbud", function() {deepEqual( Stem("lovbudene"), "lovbud");});
test("love -> lov", function() {deepEqual( Stem("love"), "lov");});
test("loved -> loved", function() {deepEqual( Stem("loved"), "loved");});
test("lovede -> loved", function() {deepEqual( Stem("lovede"), "loved");});
test("loven -> lov", function() {deepEqual( Stem("loven"), "lov");});
test("lovene -> lov", function() {deepEqual( Stem("lovene"), "lov");});
test("lovens -> lov", function() {deepEqual( Stem("lovens"), "lov");});
test("lover -> lov", function() {deepEqual( Stem("lover"), "lov");});
test("lovet -> lov", function() {deepEqual( Stem("lovet"), "lov");});
test("lovgiveren -> lovgiv", function() {deepEqual( Stem("lovgiveren"), "lovgiv");});
test("lovgivningen -> lovgivning", function() {deepEqual( Stem("lovgivningen"), "lovgivning");});
test("lovkyndig -> lovkynd", function() {deepEqual( Stem("lovkyndig"), "lovkynd");});
test("lovkyndige -> lovkynd", function() {deepEqual( Stem("lovkyndige"), "lovkynd");});
test("lovlige -> lov", function() {deepEqual( Stem("lovlige"), "lov");});
test("lovlærer -> lovlær", function() {deepEqual( Stem("lovlærer"), "lovlær");});
test("lovlærere -> lovlær", function() {deepEqual( Stem("lovlærere"), "lovlær");});
test("lovløse -> lovløs", function() {deepEqual( Stem("lovløse"), "lovløs");});
test("lovløses -> lovløs", function() {deepEqual( Stem("lovløses"), "lovløs");});
test("lovløshed -> lovløs", function() {deepEqual( Stem("lovløshed"), "lovløs");});
test("lovløsheden -> lovløs", function() {deepEqual( Stem("lovløsheden"), "lovløs");});
test("lovløshedens -> lovløs", function() {deepEqual( Stem("lovløshedens"), "lovløs");});
test("lovmæssigt -> lovmæs", function() {deepEqual( Stem("lovmæssigt"), "lovmæs");});
test("lovpris -> lovpris", function() {deepEqual( Stem("lovpris"), "lovpris");});
test("lovprise -> lovpris", function() {deepEqual( Stem("lovprise"), "lovpris");});
test("lovpriser -> lovpris", function() {deepEqual( Stem("lovpriser"), "lovpris");});
test("lovpriset -> lovpris", function() {deepEqual( Stem("lovpriset"), "lovpris");});
test("lovprisnings -> lovprisning", function() {deepEqual( Stem("lovprisnings"), "lovprisning");});
test("lovprisningsoffer -> lovprisningsof", function() {deepEqual( Stem("lovprisningsoffer"), "lovprisningsof");});
test("lovprisningsofre -> lovprisningsofr", function() {deepEqual( Stem("lovprisningsofre"), "lovprisningsofr");});
test("lovprisningstakoffer -> lovprisningstakof", function() {deepEqual( Stem("lovprisningstakoffer"), "lovprisningstakof");});
test("lovprisningstog -> lovprisningstog", function() {deepEqual( Stem("lovprisningstog"), "lovprisningstog");});
test("lovprist -> lovprist", function() {deepEqual( Stem("lovprist"), "lovprist");});
test("lovpriste -> lovprist", function() {deepEqual( Stem("lovpriste"), "lovprist");});
test("lovs -> lov", function() {deepEqual( Stem("lovs"), "lov");});
test("lovsang -> lovsang", function() {deepEqual( Stem("lovsang"), "lovsang");});
test("lovsange -> lovsang", function() {deepEqual( Stem("lovsange"), "lovsang");});
test("lovsangen -> lovsang", function() {deepEqual( Stem("lovsangen"), "lovsang");});
test("lovsangs -> lovsang", function() {deepEqual( Stem("lovsangs"), "lovsang");});
test("lovstridigt -> lovstrid", function() {deepEqual( Stem("lovstridigt"), "lovstrid");});
test("lovsyng -> lovsyng", function() {deepEqual( Stem("lovsyng"), "lovsyng");});
test("lovsynge -> lovsyng", function() {deepEqual( Stem("lovsynge"), "lovsyng");});
test("lovsynger -> lovsyng", function() {deepEqual( Stem("lovsynger"), "lovsyng");});
test("lovudlægning -> lovudlægning", function() {deepEqual( Stem("lovudlægning"), "lovudlægning");});
test("lsraels -> lsrael", function() {deepEqual( Stem("lsraels"), "lsrael");});
test("lte -> lte", function() {deepEqual( Stem("lte"), "lte");});
test("ltning -> ltning", function() {deepEqual( Stem("ltning"), "ltning");});
test("lud -> lud", function() {deepEqual( Stem("lud"), "lud");});
test("luderne -> lud", function() {deepEqual( Stem("luderne"), "lud");});
test("lue -> lue", function() {deepEqual( Stem("lue"), "lue");});
test("lued -> lued", function() {deepEqual( Stem("lued"), "lued");});
test("luede -> lued", function() {deepEqual( Stem("luede"), "lued");});
test("lueild -> lueild", function() {deepEqual( Stem("lueild"), "lueild");});
test("luen -> luen", function() {deepEqual( Stem("luen"), "luen");});
test("luende -> luend", function() {deepEqual( Stem("luende"), "luend");});
test("luens -> luen", function() {deepEqual( Stem("luens"), "luen");});
test("luer -> luer", function() {deepEqual( Stem("luer"), "luer");});
test("luernes -> luern", function() {deepEqual( Stem("luernes"), "luern");});
test("luft -> luft", function() {deepEqual( Stem("luft"), "luft");});
test("luften -> luft", function() {deepEqual( Stem("luften"), "luft");});
test("luftens -> luft", function() {deepEqual( Stem("luftens"), "luft");});
test("lufter -> luft", function() {deepEqual( Stem("lufter"), "luft");});
test("luftige -> luft", function() {deepEqual( Stem("luftige"), "luft");});
test("luftsynet -> luftsyn", function() {deepEqual( Stem("luftsynet"), "luftsyn");});
test("luge -> lug", function() {deepEqual( Stem("luge"), "lug");});
test("lugt -> lugt", function() {deepEqual( Stem("lugt"), "lugt");});
test("lugte -> lugt", function() {deepEqual( Stem("lugte"), "lugt");});
test("lugtede -> lugted", function() {deepEqual( Stem("lugtede"), "lugted");});
test("lugtedåser -> lugtedås", function() {deepEqual( Stem("lugtedåser"), "lugtedås");});
test("lugten -> lugt", function() {deepEqual( Stem("lugten"), "lugt");});
test("lugter -> lugt", function() {deepEqual( Stem("lugter"), "lugt");});
test("luhits -> luhit", function() {deepEqual( Stem("luhits"), "luhit");});
test("luk -> luk", function() {deepEqual( Stem("luk"), "luk");});
test("lukas -> luka", function() {deepEqual( Stem("lukas"), "luka");});
test("lukius -> lukius", function() {deepEqual( Stem("lukius"), "lukius");});
test("lukke -> luk", function() {deepEqual( Stem("lukke"), "luk");});
test("lukked -> lukked", function() {deepEqual( Stem("lukked"), "lukked");});
test("lukkede -> lukked", function() {deepEqual( Stem("lukkede"), "lukked");});
test("lukkedes -> lukked", function() {deepEqual( Stem("lukkedes"), "lukked");});
test("lukker -> luk", function() {deepEqual( Stem("lukker"), "luk");});
test("lukkes -> luk", function() {deepEqual( Stem("lukkes"), "luk");});
test("lukket -> luk", function() {deepEqual( Stem("lukket"), "luk");});
test("lullet -> lul", function() {deepEqual( Stem("lullet"), "lul");});
test("lumske -> lumsk", function() {deepEqual( Stem("lumske"), "lumsk");});
test("lumskelig -> lumsk", function() {deepEqual( Stem("lumskelig"), "lumsk");});
test("lund -> lund", function() {deepEqual( Stem("lund"), "lund");});
test("lunde -> lund", function() {deepEqual( Stem("lunde"), "lund");});
test("lundene -> lund", function() {deepEqual( Stem("lundene"), "lund");});
test("lune -> lun", function() {deepEqual( Stem("lune"), "lun");});
test("lunken -> lunk", function() {deepEqual( Stem("lunken"), "lunk");});
test("lunkne -> lunkn", function() {deepEqual( Stem("lunkne"), "lunkn");});
test("lur -> lur", function() {deepEqual( Stem("lur"), "lur");});
test("lure -> lur", function() {deepEqual( Stem("lure"), "lur");});
test("lured -> lured", function() {deepEqual( Stem("lured"), "lured");});
test("lurede -> lured", function() {deepEqual( Stem("lurede"), "lured");});
test("lurende -> lur", function() {deepEqual( Stem("lurende"), "lur");});
test("lurer -> lur", function() {deepEqual( Stem("lurer"), "lur");});
test("lurere -> lur", function() {deepEqual( Stem("lurere"), "lur");});
test("luret -> lur", function() {deepEqual( Stem("luret"), "lur");});
test("luthiths -> luthith", function() {deepEqual( Stem("luthiths"), "luthith");});
test("lutrede -> lutred", function() {deepEqual( Stem("lutrede"), "lutred");});
test("lutrer -> lutr", function() {deepEqual( Stem("lutrer"), "lutr");});
test("lutres -> lutr", function() {deepEqual( Stem("lutres"), "lutr");});
test("lutret -> lutr", function() {deepEqual( Stem("lutret"), "lutr");});
test("lutter -> lut", function() {deepEqual( Stem("lutter"), "lut");});
test("luz -> luz", function() {deepEqual( Stem("luz"), "luz");});
test("ly -> ly", function() {deepEqual( Stem("ly"), "ly");});
test("lyd -> lyd", function() {deepEqual( Stem("lyd"), "lyd");});
test("lydda -> lydda", function() {deepEqual( Stem("lydda"), "lydda");});
test("lyde -> lyd", function() {deepEqual( Stem("lyde"), "lyd");});
test("lydefri -> lydefri", function() {deepEqual( Stem("lydefri"), "lydefri");});
test("lydefrif -> lydefrif", function() {deepEqual( Stem("lydefrif"), "lydefrif");});
test("lydefris -> lydefris", function() {deepEqual( Stem("lydefris"), "lydefris");});
test("lydefrit -> lydefrit", function() {deepEqual( Stem("lydefrit"), "lydefrit");});
test("lydelig -> lyd", function() {deepEqual( Stem("lydelig"), "lyd");});
test("lydeløs -> lydeløs", function() {deepEqual( Stem("lydeløs"), "lydeløs");});
test("lydeløst -> lydeløs", function() {deepEqual( Stem("lydeløst"), "lydeløs");});
test("lyden -> lyd", function() {deepEqual( Stem("lyden"), "lyd");});
test("lydende -> lyd", function() {deepEqual( Stem("lydende"), "lyd");});
test("lyder -> lyd", function() {deepEqual( Stem("lyder"), "lyd");});
test("lydet -> lyd", function() {deepEqual( Stem("lydet"), "lyd");});
test("lydhør -> lydhør", function() {deepEqual( Stem("lydhør"), "lydhør");});
test("lydhørt -> lydhørt", function() {deepEqual( Stem("lydhørt"), "lydhørt");});
test("lydia -> lydia", function() {deepEqual( Stem("lydia"), "lydia");});
test("lydien -> lydi", function() {deepEqual( Stem("lydien"), "lydi");});
test("lydig -> lyd", function() {deepEqual( Stem("lydig"), "lyd");});
test("lydige -> lyd", function() {deepEqual( Stem("lydige"), "lyd");});
test("lydighed -> lyd", function() {deepEqual( Stem("lydighed"), "lyd");});
test("lydigheden -> lyd", function() {deepEqual( Stem("lydigheden"), "lyd");});
test("lydighedens -> lyd", function() {deepEqual( Stem("lydighedens"), "lyd");});
test("lydigt -> lyd", function() {deepEqual( Stem("lydigt"), "lyd");});
test("lydkonger -> lydkong", function() {deepEqual( Stem("lydkonger"), "lydkong");});
test("lydland -> lydland", function() {deepEqual( Stem("lydland"), "lydland");});
test("lydt -> lydt", function() {deepEqual( Stem("lydt"), "lydt");});
test("lyet -> lyet", function() {deepEqual( Stem("lyet"), "lyet");});
test("lygte -> lygt", function() {deepEqual( Stem("lygte"), "lygt");});
test("lygter -> lygt", function() {deepEqual( Stem("lygter"), "lygt");});
test("lykaonien -> lykaoni", function() {deepEqual( Stem("lykaonien"), "lykaoni");});
test("lykaonisk -> lykaonisk", function() {deepEqual( Stem("lykaonisk"), "lykaonisk");});
test("lykien -> lyki", function() {deepEqual( Stem("lykien"), "lyki");});
test("lykke -> lyk", function() {deepEqual( Stem("lykke"), "lyk");});
test("lykkedes -> lykked", function() {deepEqual( Stem("lykkedes"), "lykked");});
test("lykkeguden -> lykkegud", function() {deepEqual( Stem("lykkeguden"), "lykkegud");});
test("lykkelig -> lyk", function() {deepEqual( Stem("lykkelig"), "lyk");});
test("lykkelige -> lyk", function() {deepEqual( Stem("lykkelige"), "lyk");});
test("lykkeligere -> lyk", function() {deepEqual( Stem("lykkeligere"), "lyk");});
test("lykkeligt -> lyk", function() {deepEqual( Stem("lykkeligt"), "lyk");});
test("lykken -> lyk", function() {deepEqual( Stem("lykken"), "lyk");});
test("lykkens -> lyk", function() {deepEqual( Stem("lykkens"), "lyk");});
test("lykkes -> lyk", function() {deepEqual( Stem("lykkes"), "lyk");});
test("lykønske -> lykønsk", function() {deepEqual( Stem("lykønske"), "lykønsk");});
test("lykønskede -> lykønsked", function() {deepEqual( Stem("lykønskede"), "lykønsked");});
test("lyn -> lyn", function() {deepEqual( Stem("lyn"), "lyn");});
test("lyne -> lyn", function() {deepEqual( Stem("lyne"), "lyn");});
test("lynende -> lyn", function() {deepEqual( Stem("lynende"), "lyn");});
test("lynene -> lyn", function() {deepEqual( Stem("lynene"), "lyn");});
test("lyner -> lyn", function() {deepEqual( Stem("lyner"), "lyn");});
test("lynet -> lyn", function() {deepEqual( Stem("lynet"), "lyn");});
test("lynglimt -> lynglimt", function() {deepEqual( Stem("lynglimt"), "lynglimt");});
test("lyre -> lyr", function() {deepEqual( Stem("lyre"), "lyr");});
test("lys -> lys", function() {deepEqual( Stem("lys"), "lys");});
test("lysanias -> lysania", function() {deepEqual( Stem("lysanias"), "lysania");});
test("lyse -> lys", function() {deepEqual( Stem("lyse"), "lys");});
test("lysende -> lys", function() {deepEqual( Stem("lysende"), "lys");});
test("lysenes -> lys", function() {deepEqual( Stem("lysenes"), "lys");});
test("lyser -> lys", function() {deepEqual( Stem("lyser"), "lys");});
test("lyses -> lys", function() {deepEqual( Stem("lyses"), "lys");});
test("lysesaksene -> lysesaks", function() {deepEqual( Stem("lysesaksene"), "lysesaks");});
test("lysestage -> lysestag", function() {deepEqual( Stem("lysestage"), "lysestag");});
test("lysestagen -> lysestag", function() {deepEqual( Stem("lysestagen"), "lysestag");});
test("lysestagens -> lysestag", function() {deepEqual( Stem("lysestagens"), "lysestag");});
test("lysestager -> lysestag", function() {deepEqual( Stem("lysestager"), "lysestag");});
test("lysestagerne -> lysestag", function() {deepEqual( Stem("lysestagerne"), "lysestag");});
test("lysestages -> lysestag", function() {deepEqual( Stem("lysestages"), "lysestag");});
test("lyset -> lys", function() {deepEqual( Stem("lyset"), "lys");});
test("lysets -> lys", function() {deepEqual( Stem("lysets"), "lys");});
test("lysglans -> lysglan", function() {deepEqual( Stem("lysglans"), "lysglan");});
test("lysias -> lysia", function() {deepEqual( Stem("lysias"), "lysia");});
test("lysne -> lysn", function() {deepEqual( Stem("lysne"), "lysn");});
test("lysnede -> lysned", function() {deepEqual( Stem("lysnede"), "lysned");});
test("lysner -> lysn", function() {deepEqual( Stem("lysner"), "lysn");});
test("lysning -> lysning", function() {deepEqual( Stem("lysning"), "lysning");});
test("lysskæret -> lysskær", function() {deepEqual( Stem("lysskæret"), "lysskær");});
test("lyst -> lyst", function() {deepEqual( Stem("lyst"), "lyst");});
test("lyste -> lyst", function() {deepEqual( Stem("lyste"), "lyst");});
test("lystede -> lysted", function() {deepEqual( Stem("lystede"), "lysted");});
test("lystedes -> lysted", function() {deepEqual( Stem("lystedes"), "lysted");});
test("lysten -> lyst", function() {deepEqual( Stem("lysten"), "lyst");});
test("lyster -> lyst", function() {deepEqual( Stem("lyster"), "lyst");});
test("lystig -> lyst", function() {deepEqual( Stem("lystig"), "lyst");});
test("lystige -> lyst", function() {deepEqual( Stem("lystige"), "lyst");});
test("lystighed -> lyst", function() {deepEqual( Stem("lystighed"), "lyst");});
test("lystne -> lystn", function() {deepEqual( Stem("lystne"), "lystn");});
test("lystra -> lystra", function() {deepEqual( Stem("lystra"), "lystra");});
test("lysåbning -> lysåbning", function() {deepEqual( Stem("lysåbning"), "lysåbning");});
test("lysåbninger -> lysåbning", function() {deepEqual( Stem("lysåbninger"), "lysåbning");});
test("lyt -> lyt", function() {deepEqual( Stem("lyt"), "lyt");});
test("lytt -> lyt", function() {deepEqual( Stem("lytt"), "lyt");});
test("lytte -> lyt", function() {deepEqual( Stem("lytte"), "lyt");});
test("lytted -> lytted", function() {deepEqual( Stem("lytted"), "lytted");});
test("lyttede -> lytted", function() {deepEqual( Stem("lyttede"), "lytted");});
test("lyttende -> lyt", function() {deepEqual( Stem("lyttende"), "lyt");});
test("lytter -> lyt", function() {deepEqual( Stem("lytter"), "lyt");});
test("lyttet -> lyt", function() {deepEqual( Stem("lyttet"), "lyt");});
test("lyve -> lyv", function() {deepEqual( Stem("lyve"), "lyv");});
test("lyver -> lyv", function() {deepEqual( Stem("lyver"), "lyv");});
test("lå -> lå", function() {deepEqual( Stem("lå"), "lå");});
test("lådden -> låd", function() {deepEqual( Stem("lådden"), "låd");});
test("lådne -> lådn", function() {deepEqual( Stem("lådne"), "lådn");});
test("låget -> låg", function() {deepEqual( Stem("låget"), "låg");});
test("lån -> lån", function() {deepEqual( Stem("lån"), "lån");});
test("låne -> lån", function() {deepEqual( Stem("låne"), "lån");});
test("låner -> lån", function() {deepEqual( Stem("låner"), "lån");});
test("lånet -> lån", function() {deepEqual( Stem("lånet"), "lån");});
test("långiver -> långiv", function() {deepEqual( Stem("långiver"), "långiv");});
test("långivers -> långiv", function() {deepEqual( Stem("långivers"), "långiv");});
test("lånt -> lånt", function() {deepEqual( Stem("lånt"), "lånt");});
test("låntager -> låntag", function() {deepEqual( Stem("låntager"), "låntag");});
test("lånte -> lånt", function() {deepEqual( Stem("lånte"), "lånt");});
test("lårene -> lår", function() {deepEqual( Stem("lårene"), "lår");});
test("lås -> lås", function() {deepEqual( Stem("lås"), "lås");});
test("låsede -> låsed", function() {deepEqual( Stem("låsede"), "låsed");});
test("låsens -> lås", function() {deepEqual( Stem("låsens"), "lås");});
test("låsesmede -> låsesmed", function() {deepEqual( Stem("låsesmede"), "låsesmed");});
test("låsesmedene -> låsesmed", function() {deepEqual( Stem("låsesmedene"), "låsesmed");});
test("låset -> lås", function() {deepEqual( Stem("låset"), "lås");});
test("læ -> læ", function() {deepEqual( Stem("læ"), "læ");});
test("læbe -> læb", function() {deepEqual( Stem("læbe"), "læb");});
test("læben -> læb", function() {deepEqual( Stem("læben"), "læb");});
test("læber -> læb", function() {deepEqual( Stem("læber"), "læb");});
test("læberne -> læb", function() {deepEqual( Stem("læberne"), "læb");});
test("læbernes -> læb", function() {deepEqual( Stem("læbernes"), "læb");});
test("læbers -> læb", function() {deepEqual( Stem("læbers"), "læb");});
test("læder -> læd", function() {deepEqual( Stem("læder"), "læd");});
test("læderbælte -> læderbælt", function() {deepEqual( Stem("læderbælte"), "læderbælt");});
test("læderet -> læd", function() {deepEqual( Stem("læderet"), "læd");});
test("læderflasker -> læderflask", function() {deepEqual( Stem("læderflasker"), "læderflask");});
test("læderflaskerne -> læderflask", function() {deepEqual( Stem("læderflaskerne"), "læderflask");});
test("læderling -> læderling", function() {deepEqual( Stem("læderling"), "læderling");});
test("lædersæk -> lædersæk", function() {deepEqual( Stem("lædersæk"), "lædersæk");});
test("læderting -> læderting", function() {deepEqual( Stem("læderting"), "læderting");});
test("lædertingene -> læderting", function() {deepEqual( Stem("lædertingene"), "læderting");});
test("læg -> læg", function() {deepEqual( Stem("læg"), "læg");});
test("læge -> læg", function() {deepEqual( Stem("læge"), "læg");});
test("lægede -> læged", function() {deepEqual( Stem("lægede"), "læged");});
test("lægedom -> lægedom", function() {deepEqual( Stem("lægedom"), "lægedom");});
test("lægedoms -> lægedom", function() {deepEqual( Stem("lægedoms"), "lægedom");});
test("lægekyndige -> lægekynd", function() {deepEqual( Stem("lægekyndige"), "lægekynd");});
test("lægemidler -> lægemidl", function() {deepEqual( Stem("lægemidler"), "lægemidl");});
test("lægen -> læg", function() {deepEqual( Stem("lægen"), "læg");});
test("læger -> læg", function() {deepEqual( Stem("læger"), "læg");});
test("lægerne -> læg", function() {deepEqual( Stem("lægerne"), "læg");});
test("læges -> læg", function() {deepEqual( Stem("læges"), "læg");});
test("lægfolk -> lægfolk", function() {deepEqual( Stem("lægfolk"), "lægfolk");});
test("lægge -> læg", function() {deepEqual( Stem("lægge"), "læg");});
test("lægger -> læg", function() {deepEqual( Stem("lægger"), "læg");});
test("lægges -> læg", function() {deepEqual( Stem("lægges"), "læg");});
test("lægmand -> lægmand", function() {deepEqual( Stem("lægmand"), "lægmand");});
test("lægt -> lægt", function() {deepEqual( Stem("lægt"), "lægt");});
test("lægte -> lægt", function() {deepEqual( Stem("lægte"), "lægt");});
test("læk -> læk", function() {deepEqual( Stem("læk"), "læk");});
test("lækker -> læk", function() {deepEqual( Stem("lækker"), "læk");});
test("lækkerbidskener -> lækkerbidsken", function() {deepEqual( Stem("lækkerbidskener"), "lækkerbidsken");});
test("lækkerier -> lækkeri", function() {deepEqual( Stem("lækkerier"), "lækkeri");});
test("lækkert -> lækkert", function() {deepEqual( Stem("lækkert"), "lækkert");});
test("lækre -> lækr", function() {deepEqual( Stem("lækre"), "lækr");});
test("lænd -> lænd", function() {deepEqual( Stem("lænd"), "lænd");});
test("lændeme -> lændem", function() {deepEqual( Stem("lændeme"), "lændem");});
test("lændemusklerne -> lændemuskl", function() {deepEqual( Stem("lændemusklerne"), "lændemuskl");});
test("lænden -> lænd", function() {deepEqual( Stem("lænden"), "lænd");});
test("lænder -> lænd", function() {deepEqual( Stem("lænder"), "lænd");});
test("lænderne -> lænd", function() {deepEqual( Stem("lænderne"), "lænd");});
test("lænds -> lænd", function() {deepEqual( Stem("lænds"), "lænd");});
test("læne -> læn", function() {deepEqual( Stem("læne"), "læn");});
test("lænede -> læned", function() {deepEqual( Stem("lænede"), "læned");});
test("lænende -> læn", function() {deepEqual( Stem("lænende"), "læn");});
test("læner -> læn", function() {deepEqual( Stem("læner"), "læn");});
test("lænet -> læn", function() {deepEqual( Stem("lænet"), "læn");});
test("længde -> læng", function() {deepEqual( Stem("længde"), "læng");});
test("længdemål -> længdemål", function() {deepEqual( Stem("længdemål"), "længdemål");});
test("længden -> læng", function() {deepEqual( Stem("længden"), "læng");});
test("længder -> læng", function() {deepEqual( Stem("længder"), "læng");});
test("længe -> læng", function() {deepEqual( Stem("længe"), "læng");});
test("længer -> læng", function() {deepEqual( Stem("længer"), "læng");});
test("længere -> læng", function() {deepEqual( Stem("længere"), "læng");});
test("længes -> læng", function() {deepEqual( Stem("længes"), "læng");});
test("længsel -> længsel", function() {deepEqual( Stem("længsel"), "længsel");});
test("længselsfulde -> længselsfuld", function() {deepEqual( Stem("længselsfulde"), "længselsfuld");});
test("længst -> længst", function() {deepEqual( Stem("længst"), "længst");});
test("længtes -> læng", function() {deepEqual( Stem("længtes"), "læng");});
test("lænk -> lænk", function() {deepEqual( Stem("lænk"), "lænk");});
test("lænke -> lænk", function() {deepEqual( Stem("lænke"), "lænk");});
test("lænker -> lænk", function() {deepEqual( Stem("lænker"), "lænk");});
test("lænkerne -> lænk", function() {deepEqual( Stem("lænkerne"), "lænk");});
test("lær -> lær", function() {deepEqual( Stem("lær"), "lær");});
test("lærdom -> lærdom", function() {deepEqual( Stem("lærdom"), "lærdom");});
test("lærdomme -> lærdom", function() {deepEqual( Stem("lærdomme"), "lærdom");});
test("lærdommens -> lærdom", function() {deepEqual( Stem("lærdommens"), "lærdom");});
test("lære -> lær", function() {deepEqual( Stem("lære"), "lær");});
test("læreform -> læreform", function() {deepEqual( Stem("læreform"), "læreform");});
test("læren -> lær", function() {deepEqual( Stem("læren"), "lær");});
test("lærenemme -> lærenem", function() {deepEqual( Stem("lærenemme"), "lærenem");});
test("lærer -> lær", function() {deepEqual( Stem("lærer"), "lær");});
test("lærere -> lær", function() {deepEqual( Stem("lærere"), "lær");});
test("læreres -> lær", function() {deepEqual( Stem("læreres"), "lær");});
test("lærergerningen -> lærergerning", function() {deepEqual( Stem("lærergerningen"), "lærergerning");});
test("lærerne -> lær", function() {deepEqual( Stem("lærerne"), "lær");});
test("læres -> lær", function() {deepEqual( Stem("læres"), "lær");});
test("lærlinge -> lærling", function() {deepEqual( Stem("lærlinge"), "lærling");});
test("lærlinges -> lærling", function() {deepEqual( Stem("lærlinges"), "lærling");});
test("lærred -> lærred", function() {deepEqual( Stem("lærred"), "lærred");});
test("lært -> lært", function() {deepEqual( Stem("lært"), "lært");});
test("lærte -> lært", function() {deepEqual( Stem("lærte"), "lært");});
test("læs -> læs", function() {deepEqual( Stem("læs"), "læs");});
test("læse -> læs", function() {deepEqual( Stem("læse"), "læs");});
test("læser -> læs", function() {deepEqual( Stem("læser"), "læs");});
test("læses -> læs", function() {deepEqual( Stem("læses"), "læs");});
test("læske -> læsk", function() {deepEqual( Stem("læske"), "læsk");});
test("læsker -> læsk", function() {deepEqual( Stem("læsker"), "læsk");});
test("læsse -> læs", function() {deepEqual( Stem("læsse"), "læs");});
test("læssede -> læssed", function() {deepEqual( Stem("læssede"), "læssed");});
test("læsser -> læs", function() {deepEqual( Stem("læsser"), "læs");});
test("læsses -> læs", function() {deepEqual( Stem("læsses"), "læs");});
test("læsset -> læs", function() {deepEqual( Stem("læsset"), "læs");});
test("læst -> læst", function() {deepEqual( Stem("læst"), "læst");});
test("læste -> læst", function() {deepEqual( Stem("læste"), "læst");});
test("løb -> løb", function() {deepEqual( Stem("løb"), "løb");});
test("løbe -> løb", function() {deepEqual( Stem("løbe"), "løb");});
test("løbende -> løb", function() {deepEqual( Stem("løbende"), "løb");});
test("løber -> løb", function() {deepEqual( Stem("løber"), "løb");});
test("løberen -> løb", function() {deepEqual( Stem("løberen"), "løb");});
test("løbet -> løb", function() {deepEqual( Stem("løbet"), "løb");});
test("lød -> lød", function() {deepEqual( Stem("lød"), "lød");});
test("løde -> lød", function() {deepEqual( Stem("løde"), "lød");});
test("løft -> løft", function() {deepEqual( Stem("løft"), "løft");});
test("løfte -> løft", function() {deepEqual( Stem("løfte"), "løft");});
test("løfted -> løfted", function() {deepEqual( Stem("løfted"), "løfted");});
test("løftede -> løfted", function() {deepEqual( Stem("løftede"), "løfted");});
test("løftedes -> løfted", function() {deepEqual( Stem("løftedes"), "løfted");});
test("løfteoffer -> løfteof", function() {deepEqual( Stem("løfteoffer"), "løfteof");});
test("løfteofre -> løfteofr", function() {deepEqual( Stem("løfteofre"), "løfteofr");});
test("løfter -> løft", function() {deepEqual( Stem("løfter"), "løft");});
test("løfters -> løft", function() {deepEqual( Stem("løfters"), "løft");});
test("løftes -> løft", function() {deepEqual( Stem("løftes"), "løft");});
test("løftesten -> løftest", function() {deepEqual( Stem("løftesten"), "løftest");});
test("løftet -> løft", function() {deepEqual( Stem("løftet"), "løft");});
test("løftofre -> løftofr", function() {deepEqual( Stem("løftofre"), "løftofr");});
test("løgn -> løgn", function() {deepEqual( Stem("løgn"), "løgn");});
test("løgnagtige -> løgnag", function() {deepEqual( Stem("løgnagtige"), "løgnag");});
test("løgnagtigt -> løgnag", function() {deepEqual( Stem("løgnagtigt"), "løgnag");});
test("løgne -> løgn", function() {deepEqual( Stem("løgne"), "løgn");});
test("løgnedrømme -> løgnedrøm", function() {deepEqual( Stem("løgnedrømme"), "løgnedrøm");});
test("løgnegriffel -> løgnegriffel", function() {deepEqual( Stem("løgnegriffel"), "løgnegriffel");});
test("løgneguder -> løgnegud", function() {deepEqual( Stem("løgneguder"), "løgnegud");});
test("løgnehånd -> løgnehånd", function() {deepEqual( Stem("løgnehånd"), "løgnehånd");});
test("løgnelyet -> løgnely", function() {deepEqual( Stem("løgnelyet"), "løgnely");});
test("løgnelæber -> løgnelæb", function() {deepEqual( Stem("løgnelæber"), "løgnelæb");});
test("løgnen -> løgn", function() {deepEqual( Stem("løgnen"), "løgn");});
test("løgnens -> løgn", function() {deepEqual( Stem("løgnens"), "løgn");});
test("løgneord -> løgneord", function() {deepEqual( Stem("løgneord"), "løgneord");});
test("løgner -> løgn", function() {deepEqual( Stem("løgner"), "løgn");});
test("løgnere -> løgn", function() {deepEqual( Stem("løgnere"), "løgn");});
test("løgneren -> løgn", function() {deepEqual( Stem("løgneren"), "løgn");});
test("løgnerne -> løgn", function() {deepEqual( Stem("løgnerne"), "løgn");});
test("løgnernes -> løgn", function() {deepEqual( Stem("løgnernes"), "løgn");});
test("løgnespådomme -> løgnespådom", function() {deepEqual( Stem("løgnespådomme"), "løgnespådom");});
test("løgnesyn -> løgnesyn", function() {deepEqual( Stem("løgnesyn"), "løgnesyn");});
test("løgnesyner -> løgnesyn", function() {deepEqual( Stem("løgnesyner"), "løgnesyn");});
test("løgnetale -> løgnetal", function() {deepEqual( Stem("løgnetale"), "løgnetal");});
test("løgnetunge -> løgnetung", function() {deepEqual( Stem("løgnetunge"), "løgnetung");});
test("løgnfor -> løgnfor", function() {deepEqual( Stem("løgnfor"), "løgnfor");});
test("løgnlæreres -> løgnlær", function() {deepEqual( Stem("løgnlæreres"), "løgnlær");});
test("løgnprofeten -> løgnprofet", function() {deepEqual( Stem("løgnprofeten"), "løgnprofet");});
test("løgntunge -> løgntung", function() {deepEqual( Stem("løgntunge"), "løgntung");});
test("løj -> løj", function() {deepEqual( Stem("løj"), "løj");});
test("løjbænke -> løjbænk", function() {deepEqual( Stem("løjbænke"), "løjbænk");});
test("løjet -> løj", function() {deepEqual( Stem("løjet"), "løj");});
test("løkke -> løk", function() {deepEqual( Stem("løkke"), "løk");});
test("løkker -> løk", function() {deepEqual( Stem("løkker"), "løk");});
test("løkkerne -> løk", function() {deepEqual( Stem("løkkerne"), "løk");});
test("løn -> løn", function() {deepEqual( Stem("løn"), "løn");});
test("løndom -> løndom", function() {deepEqual( Stem("løndom"), "løndom");});
test("lønlig -> løn", function() {deepEqual( Stem("lønlig"), "løn");});
test("lønlige -> løn", function() {deepEqual( Stem("lønlige"), "løn");});
test("lønligt -> løn", function() {deepEqual( Stem("lønligt"), "løn");});
test("lønne -> løn", function() {deepEqual( Stem("lønne"), "løn");});
test("lønned -> lønned", function() {deepEqual( Stem("lønned"), "lønned");});
test("lønnen -> løn", function() {deepEqual( Stem("lønnen"), "løn");});
test("lønner -> løn", function() {deepEqual( Stem("lønner"), "løn");});
test("lønnet -> løn", function() {deepEqual( Stem("lønnet"), "løn");});
test("løs -> løs", function() {deepEqual( Stem("løs"), "løs");});
test("løsagtighed -> løsag", function() {deepEqual( Stem("løsagtighed"), "løsag");});
test("løse -> løs", function() {deepEqual( Stem("løse"), "løs");});
test("løsepenge -> løsepeng", function() {deepEqual( Stem("løsepenge"), "løsepeng");});
test("løsepengene -> løsepeng", function() {deepEqual( Stem("løsepengene"), "løsepeng");});
test("løser -> løs", function() {deepEqual( Stem("løser"), "løs");});
test("løsere -> løs", function() {deepEqual( Stem("løsere"), "løs");});
test("løseren -> løs", function() {deepEqual( Stem("løseren"), "løs");});
test("løses -> løs", function() {deepEqual( Stem("løses"), "løs");});
test("løsesum -> løsesum", function() {deepEqual( Stem("løsesum"), "løsesum");});
test("løskøbe -> løskøb", function() {deepEqual( Stem("løskøbe"), "løskøb");});
test("løskøbes -> løskøb", function() {deepEqual( Stem("løskøbes"), "løskøb");});
test("løskøbt -> løskøbt", function() {deepEqual( Stem("løskøbt"), "løskøbt");});
test("løskøbte -> løskøbt", function() {deepEqual( Stem("løskøbte"), "løskøbt");});
test("løslad -> løslad", function() {deepEqual( Stem("løslad"), "løslad");});
test("løslade -> løslad", function() {deepEqual( Stem("løslade"), "løslad");});
test("løslader -> løslad", function() {deepEqual( Stem("løslader"), "løslad");});
test("løslades -> løslad", function() {deepEqual( Stem("løslades"), "løslad");});
test("løsladt -> løslad", function() {deepEqual( Stem("løsladt"), "løslad");});
test("løsladte -> løslad", function() {deepEqual( Stem("løsladte"), "løslad");});
test("løslod -> løslod", function() {deepEqual( Stem("løslod"), "løslod");});
test("løslode -> løslod", function() {deepEqual( Stem("løslode"), "løslod");});
test("løsne -> løsn", function() {deepEqual( Stem("løsne"), "løsn");});
test("løsner -> løsn", function() {deepEqual( Stem("løsner"), "løsn");});
test("løsnes -> løsn", function() {deepEqual( Stem("løsnes"), "løsn");});
test("løsning -> løsning", function() {deepEqual( Stem("løsning"), "løsning");});
test("løsningen -> løsning", function() {deepEqual( Stem("løsningen"), "løsning");});
test("løssluppen -> løsslup", function() {deepEqual( Stem("løssluppen"), "løsslup");});
test("løst -> løst", function() {deepEqual( Stem("løst"), "løst");});
test("løste -> løst", function() {deepEqual( Stem("løste"), "løst");});
test("løstes -> løst", function() {deepEqual( Stem("løstes"), "løst");});
test("løv -> løv", function() {deepEqual( Stem("løv"), "løv");});
test("løvbytter -> løvbyt", function() {deepEqual( Stem("løvbytter"), "løvbyt");});
test("løve -> løv", function() {deepEqual( Stem("løve"), "løv");});
test("løveansigt -> løveans", function() {deepEqual( Stem("løveansigt"), "løveans");});
test("løveansigtet -> løveans", function() {deepEqual( Stem("løveansigtet"), "løveans");});
test("løvebrøl -> løvebrøl", function() {deepEqual( Stem("løvebrøl"), "løvebrøl");});
test("løvekulen -> løvekul", function() {deepEqual( Stem("løvekulen"), "løvekul");});
test("løven -> løv", function() {deepEqual( Stem("løven"), "løv");});
test("løvens -> løv", function() {deepEqual( Stem("løvens"), "løv");});
test("løver -> løv", function() {deepEqual( Stem("løver"), "løv");});
test("løverne -> løv", function() {deepEqual( Stem("løverne"), "løv");});
test("løvernes -> løv", function() {deepEqual( Stem("løvernes"), "løv");});
test("løvers -> løv", function() {deepEqual( Stem("løvers"), "løv");});
test("løves -> løv", function() {deepEqual( Stem("løves"), "løv");});
test("løvet -> løv", function() {deepEqual( Stem("løvet"), "løv");});
test("løvetænder -> løvetænd", function() {deepEqual( Stem("løvetænder"), "løvetænd");});
test("løveunge -> løveung", function() {deepEqual( Stem("løveunge"), "løveung");});
test("løveunger -> løveung", function() {deepEqual( Stem("løveunger"), "løveung");});
test("løveungerne -> løveung", function() {deepEqual( Stem("løveungerne"), "løveung");});
test("løvhytte -> løvhyt", function() {deepEqual( Stem("løvhytte"), "løvhyt");});
test("løvhyttefest -> løvhyttefest", function() {deepEqual( Stem("løvhyttefest"), "løvhyttefest");});
test("løvhyttefesten -> løvhyttefest", function() {deepEqual( Stem("løvhyttefesten"), "løvhyttefest");});
test("løvhytter -> løvhyt", function() {deepEqual( Stem("løvhytter"), "løvhyt");});
test("løvhytterne -> løvhyt", function() {deepEqual( Stem("løvhytterne"), "løvhyt");});
test("løvhytternes -> løvhyt", function() {deepEqual( Stem("løvhytternes"), "løvhyt");});
test("løvinde -> løvind", function() {deepEqual( Stem("løvinde"), "løvind");});
test("løvinden -> løvind", function() {deepEqual( Stem("løvinden"), "løvind");});
test("løvinder -> løvind", function() {deepEqual( Stem("løvinder"), "løvind");});
test("løvinderne -> løvind", function() {deepEqual( Stem("løvinderne"), "løvind");});
test("løvrig -> løvr", function() {deepEqual( Stem("løvrig"), "løvr");});
test("løvrigt -> løvr", function() {deepEqual( Stem("løvrigt"), "løvr");});
test("løvsalsfesten -> løvsalsfest", function() {deepEqual( Stem("løvsalsfesten"), "løvsalsfest");});
test("løvtræer -> løvtræ", function() {deepEqual( Stem("løvtræer"), "løvtræ");});
test("m -> m", function() {deepEqual( Stem("m"), "m");});
test("ma -> ma", function() {deepEqual( Stem("ma"), "ma");});
test("maakatitens -> maakatit", function() {deepEqual( Stem("maakatitens"), "maakatit");});
test("maasejas -> maaseja", function() {deepEqual( Stem("maasejas"), "maaseja");});
test("mabols -> mabol", function() {deepEqual( Stem("mabols"), "mabol");});
test("mad -> mad", function() {deepEqual( Stem("mad"), "mad");});
test("madaj -> madaj", function() {deepEqual( Stem("madaj"), "madaj");});
test("maden -> mad", function() {deepEqual( Stem("maden"), "mad");});
test("madmanna -> madmanna", function() {deepEqual( Stem("madmanna"), "madmanna");});
test("madmannasader -> madmannasad", function() {deepEqual( Stem("madmannasader"), "madmannasad");});
test("madmen -> madm", function() {deepEqual( Stem("madmen"), "madm");});
test("madmena -> madmena", function() {deepEqual( Stem("madmena"), "madmena");});
test("madoffer -> madof", function() {deepEqual( Stem("madoffer"), "madof");});
test("madofre -> madofr", function() {deepEqual( Stem("madofre"), "madofr");});
test("madon -> madon", function() {deepEqual( Stem("madon"), "madon");});
test("mads -> mad", function() {deepEqual( Stem("mads"), "mad");});
test("mag -> mag", function() {deepEqual( Stem("mag"), "mag");});
test("magadans -> magadan", function() {deepEqual( Stem("magadans"), "magadan");});
test("magbisj -> magbisj", function() {deepEqual( Stem("magbisj"), "magbisj");});
test("magdalene -> magdal", function() {deepEqual( Stem("magdalene"), "magdal");});
test("magdiel -> magdiel", function() {deepEqual( Stem("magdiel"), "magdiel");});
test("mage -> mag", function() {deepEqual( Stem("mage"), "mag");});
test("magerhed -> mager", function() {deepEqual( Stem("magerhed"), "mager");});
test("magernes -> mag", function() {deepEqual( Stem("magernes"), "mag");});
test("magert -> magert", function() {deepEqual( Stem("magert"), "magert");});
test("magog -> magog", function() {deepEqual( Stem("magog"), "magog");});
test("magogs -> magog", function() {deepEqual( Stem("magogs"), "magog");});
test("magpiasj -> magpiasj", function() {deepEqual( Stem("magpiasj"), "magpiasj");});
test("magre -> magr", function() {deepEqual( Stem("magre"), "magr");});
test("magt -> magt", function() {deepEqual( Stem("magt"), "magt");});
test("magte -> magt", function() {deepEqual( Stem("magte"), "magt");});
test("magted -> magted", function() {deepEqual( Stem("magted"), "magted");});
test("magtede -> magted", function() {deepEqual( Stem("magtede"), "magted");});
test("magten -> magt", function() {deepEqual( Stem("magten"), "magt");});
test("magter -> magt", function() {deepEqual( Stem("magter"), "magt");});
test("magterne -> magt", function() {deepEqual( Stem("magterne"), "magt");});
test("magtesløs -> magtesløs", function() {deepEqual( Stem("magtesløs"), "magtesløs");});
test("magtesløse -> magtesløs", function() {deepEqual( Stem("magtesløse"), "magtesløs");});
test("magtesløshed -> magtesløs", function() {deepEqual( Stem("magtesløshed"), "magtesløs");});
test("magthavere -> magthav", function() {deepEqual( Stem("magthavere"), "magthav");});
test("magts -> magt", function() {deepEqual( Stem("magts"), "magt");});
test("magtsprog -> magtsprog", function() {deepEqual( Stem("magtsprog"), "magtsprog");});
test("mahalab -> mahalab", function() {deepEqual( Stem("mahalab"), "mahalab");});
test("mahalal -> mahalal", function() {deepEqual( Stem("mahalal"), "mahalal");});
test("mahalat -> mahalat", function() {deepEqual( Stem("mahalat"), "mahalat");});
test("mahanajim -> mahanajim", function() {deepEqual( Stem("mahanajim"), "mahanajim");});
test("mahaoajim -> mahaoajim", function() {deepEqual( Stem("mahaoajim"), "mahaoajim");});
test("maharaj -> maharaj", function() {deepEqual( Stem("maharaj"), "maharaj");});
test("mahat -> mahat", function() {deepEqual( Stem("mahat"), "mahat");});
test("mahaviten -> mahavit", function() {deepEqual( Stem("mahaviten"), "mahavit");});
test("mahaziot -> mahaziot", function() {deepEqual( Stem("mahaziot"), "mahaziot");});
test("majestæt -> majestæt", function() {deepEqual( Stem("majestæt"), "majestæt");});
test("majestætens -> majestæt", function() {deepEqual( Stem("majestætens"), "majestæt");});
test("majestætiske -> majestætisk", function() {deepEqual( Stem("majestætiske"), "majestætisk");});
test("majim -> majim", function() {deepEqual( Stem("majim"), "majim");});
test("makaz -> makaz", function() {deepEqual( Stem("makaz"), "makaz");});
test("makbannaj -> makbannaj", function() {deepEqual( Stem("makbannaj"), "makbannaj");});
test("makbenas -> makbena", function() {deepEqual( Stem("makbenas"), "makbena");});
test("makedonien -> makedoni", function() {deepEqual( Stem("makedonien"), "makedoni");});
test("makedoniens -> makedoni", function() {deepEqual( Stem("makedoniens"), "makedoni");});
test("makedonier -> makedoni", function() {deepEqual( Stem("makedonier"), "makedoni");});
test("makedoniere -> makedoni", function() {deepEqual( Stem("makedoniere"), "makedoni");});
test("makedonierne -> makedoni", function() {deepEqual( Stem("makedonierne"), "makedoni");});
test("makedonisk -> makedonisk", function() {deepEqual( Stem("makedonisk"), "makedonisk");});
test("makhelot -> makhelot", function() {deepEqual( Stem("makhelot"), "makhelot");});
test("makir -> makir", function() {deepEqual( Stem("makir"), "makir");});
test("makiriternes -> makirit", function() {deepEqual( Stem("makiriternes"), "makirit");});
test("makirs -> makir", function() {deepEqual( Stem("makirs"), "makir");});
test("makkeda -> makkeda", function() {deepEqual( Stem("makkeda"), "makkeda");});
test("makkedas -> makkeda", function() {deepEqual( Stem("makkedas"), "makkeda");});
test("maknadbaj -> maknadbaj", function() {deepEqual( Stem("maknadbaj"), "maknadbaj");});
test("makpela -> makpela", function() {deepEqual( Stem("makpela"), "makpela");});
test("makpelas -> makpela", function() {deepEqual( Stem("makpelas"), "makpela");});
test("mal -> mal", function() {deepEqual( Stem("mal"), "mal");});
test("mala -> mala", function() {deepEqual( Stem("mala"), "mala");});
test("malakias -> malakia", function() {deepEqual( Stem("malakias"), "malakia");});
test("male -> mal", function() {deepEqual( Stem("male"), "mal");});
test("malede -> maled", function() {deepEqual( Stem("malede"), "maled");});
test("malekots -> malekot", function() {deepEqual( Stem("malekots"), "malekot");});
test("maleleels -> maleleel", function() {deepEqual( Stem("maleleels"), "maleleel");});
test("maler -> mal", function() {deepEqual( Stem("maler"), "mal");});
test("malet -> mal", function() {deepEqual( Stem("malet"), "mal");});
test("mali -> mali", function() {deepEqual( Stem("mali"), "mali");});
test("malis -> malis", function() {deepEqual( Stem("malis"), "malis");});
test("maliternes -> malit", function() {deepEqual( Stem("maliternes"), "malit");});
test("malkam -> malkam", function() {deepEqual( Stem("malkam"), "malkam");});
test("malkias -> malkia", function() {deepEqual( Stem("malkias"), "malkia");});
test("malkiel -> malkiel", function() {deepEqual( Stem("malkiel"), "malkiel");});
test("malkieliternes -> malkielit", function() {deepEqual( Stem("malkieliternes"), "malkielit");});
test("malkija -> malkija", function() {deepEqual( Stem("malkija"), "malkija");});
test("malkijas -> malkija", function() {deepEqual( Stem("malkijas"), "malkija");});
test("malkiram -> malkiram", function() {deepEqual( Stem("malkiram"), "malkiram");});
test("malkisjua -> malkisjua", function() {deepEqual( Stem("malkisjua"), "malkisjua");});
test("malkus -> malkus", function() {deepEqual( Stem("malkus"), "malkus");});
test("mallkiel -> mallkiel", function() {deepEqual( Stem("mallkiel"), "mallkiel");});
test("malloti -> malloti", function() {deepEqual( Stem("malloti"), "malloti");});
test("malluk -> malluk", function() {deepEqual( Stem("malluk"), "malluk");});
test("malm -> malm", function() {deepEqual( Stem("malm"), "malm");});
test("malme -> malm", function() {deepEqual( Stem("malme"), "malm");});
test("malon -> malon", function() {deepEqual( Stem("malon"), "malon");});
test("malons -> malon", function() {deepEqual( Stem("malons"), "malon");});
test("malta -> malta", function() {deepEqual( Stem("malta"), "malta");});
test("malurt -> malurt", function() {deepEqual( Stem("malurt"), "malurt");});
test("mammon -> mammon", function() {deepEqual( Stem("mammon"), "mammon");});
test("mamre -> mamr", function() {deepEqual( Stem("mamre"), "mamr");});
test("mamres -> mamr", function() {deepEqual( Stem("mamres"), "mamr");});
test("man -> man", function() {deepEqual( Stem("man"), "man");});
test("manaen -> mana", function() {deepEqual( Stem("manaen"), "mana");});
test("manahat -> manahat", function() {deepEqual( Stem("manahat"), "manahat");});
test("manahatiterne -> manahatit", function() {deepEqual( Stem("manahatiterne"), "manahatit");});
test("manasse -> manas", function() {deepEqual( Stem("manasse"), "manas");});
test("manasses -> manas", function() {deepEqual( Stem("manasses"), "manas");});
test("manassiter -> manassit", function() {deepEqual( Stem("manassiter"), "manassit");});
test("manassiterne -> manassit", function() {deepEqual( Stem("manassiterne"), "manassit");});
test("manassiternes -> manassit", function() {deepEqual( Stem("manassiternes"), "manassit");});
test("mand -> mand", function() {deepEqual( Stem("mand"), "mand");});
test("manddom -> manddom", function() {deepEqual( Stem("manddom"), "manddom");});
test("manddomskraft -> manddomskraft", function() {deepEqual( Stem("manddomskraft"), "manddomskraft");});
test("manddraber -> manddrab", function() {deepEqual( Stem("manddraber"), "manddrab");});
test("manddrabere -> manddrab", function() {deepEqual( Stem("manddrabere"), "manddrab");});
test("manddraberen -> manddrab", function() {deepEqual( Stem("manddraberen"), "manddrab");});
test("mandefald -> mandefald", function() {deepEqual( Stem("mandefald"), "mandefald");});
test("mandelblomstlignende -> mandelblomstlign", function() {deepEqual( Stem("mandelblomstlignende"), "mandelblomstlign");});
test("mandelgren -> mandelgr", function() {deepEqual( Stem("mandelgren"), "mandelgr");});
test("mandeltræer -> mandeltræ", function() {deepEqual( Stem("mandeltræer"), "mandeltræ");});
test("mandeltræet -> mandeltræ", function() {deepEqual( Stem("mandeltræet"), "mandeltræ");});
test("manden -> mand", function() {deepEqual( Stem("manden"), "mand");});
test("mandens -> mand", function() {deepEqual( Stem("mandens"), "mand");});
test("mandige -> mand", function() {deepEqual( Stem("mandige"), "mand");});
test("mandkøn -> mandkøn", function() {deepEqual( Stem("mandkøn"), "mandkøn");});
test("mandler -> mandl", function() {deepEqual( Stem("mandler"), "mandl");});
test("mandlige -> mand", function() {deepEqual( Stem("mandlige"), "mand");});
test("mandligt -> mand", function() {deepEqual( Stem("mandligt"), "mand");});
test("mands -> mand", function() {deepEqual( Stem("mands"), "mand");});
test("mandsbilleder -> mandsbilled", function() {deepEqual( Stem("mandsbilleder"), "mandsbilled");});
test("mandsdragt -> mandsdrag", function() {deepEqual( Stem("mandsdragt"), "mandsdrag");});
test("mandskab -> mandskab", function() {deepEqual( Stem("mandskab"), "mandskab");});
test("mandskabet -> mandskab", function() {deepEqual( Stem("mandskabet"), "mandskab");});
test("mandskraftens -> mandskraft", function() {deepEqual( Stem("mandskraftens"), "mandskraft");});
test("mandskrafts -> mandskraft", function() {deepEqual( Stem("mandskrafts"), "mandskraft");});
test("mandspersoner -> mandsperson", function() {deepEqual( Stem("mandspersoner"), "mandsperson");});
test("mandsskøge -> mandsskøg", function() {deepEqual( Stem("mandsskøge"), "mandsskøg");});
test("mandsskøger -> mandsskøg", function() {deepEqual( Stem("mandsskøger"), "mandsskøg");});
test("mandsskøgerne -> mandsskøg", function() {deepEqual( Stem("mandsskøgerne"), "mandsskøg");});
test("mandsskøgernes -> mandsskøg", function() {deepEqual( Stem("mandsskøgernes"), "mandsskøg");});
test("mandsskøgers -> mandsskøg", function() {deepEqual( Stem("mandsskøgers"), "mandsskøg");});
test("mandtal -> mandtal", function() {deepEqual( Stem("mandtal"), "mandtal");});
test("mandtalsbog -> mandtalsbog", function() {deepEqual( Stem("mandtalsbog"), "mandtalsbog");});
test("mane -> man", function() {deepEqual( Stem("mane"), "man");});
test("manende -> man", function() {deepEqual( Stem("manende"), "man");});
test("maner -> man", function() {deepEqual( Stem("maner"), "man");});
test("manere -> man", function() {deepEqual( Stem("manere"), "man");});
test("manerne -> man", function() {deepEqual( Stem("manerne"), "man");});
test("mange -> mang", function() {deepEqual( Stem("mange"), "mang");});
test("mangefold -> mangefold", function() {deepEqual( Stem("mangefold"), "mangefold");});
test("mangel -> mangel", function() {deepEqual( Stem("mangel"), "mangel");});
test("mangen -> mang", function() {deepEqual( Stem("mangen"), "mang");});
test("mangens -> mang", function() {deepEqual( Stem("mangens"), "mang");});
test("manges -> mang", function() {deepEqual( Stem("manges"), "mang");});
test("mangfoldig -> mangfold", function() {deepEqual( Stem("mangfoldig"), "mangfold");});
test("mangfoldige -> mangfold", function() {deepEqual( Stem("mangfoldige"), "mangfold");});
test("mangfoldiggjort -> mangfoldiggjort", function() {deepEqual( Stem("mangfoldiggjort"), "mangfoldiggjort");});
test("mangfoldiggør -> mangfoldiggør", function() {deepEqual( Stem("mangfoldiggør"), "mangfoldiggør");});
test("mangfoldiggøre -> mangfoldiggør", function() {deepEqual( Stem("mangfoldiggøre"), "mangfoldiggør");});
test("mangfoldighed -> mangfold", function() {deepEqual( Stem("mangfoldighed"), "mangfold");});
test("mangle -> mangl", function() {deepEqual( Stem("mangle"), "mangl");});
test("manglede -> mangled", function() {deepEqual( Stem("manglede"), "mangled");});
test("mangler -> mangl", function() {deepEqual( Stem("mangler"), "mangl");});
test("manglet -> mangl", function() {deepEqual( Stem("manglet"), "mangl");});
test("manke -> mank", function() {deepEqual( Stem("manke"), "mank");});
test("manna -> manna", function() {deepEqual( Stem("manna"), "manna");});
test("mannaen -> manna", function() {deepEqual( Stem("mannaen"), "manna");});
test("mannassiternes -> mannassit", function() {deepEqual( Stem("mannassiternes"), "mannassit");});
test("manoa -> manoa", function() {deepEqual( Stem("manoa"), "manoa");});
test("manoas -> manoa", function() {deepEqual( Stem("manoas"), "manoa");});
test("maoks -> maok", function() {deepEqual( Stem("maoks"), "maok");});
test("maon -> maon", function() {deepEqual( Stem("maon"), "maon");});
test("maons -> maon", function() {deepEqual( Stem("maons"), "maon");});
test("mar -> mar", function() {deepEqual( Stem("mar"), "mar");});
test("mara -> mara", function() {deepEqual( Stem("mara"), "mara");});
test("maran -> maran", function() {deepEqual( Stem("maran"), "maran");});
test("maresj -> maresj", function() {deepEqual( Stem("maresj"), "maresj");});
test("maresja -> maresja", function() {deepEqual( Stem("maresja"), "maresja");});
test("maresjas -> maresja", function() {deepEqual( Stem("maresjas"), "maresja");});
test("maria -> maria", function() {deepEqual( Stem("maria"), "maria");});
test("marias -> maria", function() {deepEqual( Stem("marias"), "maria");});
test("mark -> mark", function() {deepEqual( Stem("mark"), "mark");});
test("markabot -> markabot", function() {deepEqual( Stem("markabot"), "markabot");});
test("markarbejde -> markarbejd", function() {deepEqual( Stem("markarbejde"), "markarbejd");});
test("markarbejderne -> markarbejd", function() {deepEqual( Stem("markarbejderne"), "markarbejd");});
test("markeder -> marked", function() {deepEqual( Stem("markeder"), "marked");});
test("marken -> mark", function() {deepEqual( Stem("marken"), "mark");});
test("markene -> mark", function() {deepEqual( Stem("markene"), "mark");});
test("markens -> mark", function() {deepEqual( Stem("markens"), "mark");});
test("marker -> mark", function() {deepEqual( Stem("marker"), "mark");});
test("markerne -> mark", function() {deepEqual( Stem("markerne"), "mark");});
test("markfurer -> markfur", function() {deepEqual( Stem("markfurer"), "markfur");});
test("marklandet -> markland", function() {deepEqual( Stem("marklandet"), "markland");});
test("marklod -> marklod", function() {deepEqual( Stem("marklod"), "marklod");});
test("markskel -> markskel", function() {deepEqual( Stem("markskel"), "markskel");});
test("markus -> markus", function() {deepEqual( Stem("markus"), "markus");});
test("marmor -> marmor", function() {deepEqual( Stem("marmor"), "marmor");});
test("marmorsten -> marmorst", function() {deepEqual( Stem("marmorsten"), "marmorst");});
test("marmorsøjler -> marmorsøjl", function() {deepEqual( Stem("marmorsøjler"), "marmorsøjl");});
test("marots -> marot", function() {deepEqual( Stem("marots"), "marot");});
test("marsena -> marsena", function() {deepEqual( Stem("marsena"), "marsena");});
test("martha -> martha", function() {deepEqual( Stem("martha"), "martha");});
test("marv -> marv", function() {deepEqual( Stem("marv"), "marv");});
test("marvfulde -> marvfuld", function() {deepEqual( Stem("marvfulde"), "marvfuld");});
test("mas -> mas", function() {deepEqual( Stem("mas"), "mas");});
test("masaj -> masaj", function() {deepEqual( Stem("masaj"), "masaj");});
test("masejas -> maseja", function() {deepEqual( Stem("masejas"), "maseja");});
test("masj -> masj", function() {deepEqual( Stem("masj"), "masj");});
test("masjal -> masjal", function() {deepEqual( Stem("masjal"), "masjal");});
test("masjmanna -> masjmanna", function() {deepEqual( Stem("masjmanna"), "masjmanna");});
test("maske -> mask", function() {deepEqual( Stem("maske"), "mask");});
test("masreka -> masreka", function() {deepEqual( Stem("masreka"), "masreka");});
test("massa -> massa", function() {deepEqual( Stem("massa"), "massa");});
test("massaiten -> massait", function() {deepEqual( Stem("massaiten"), "massait");});
test("massas -> massa", function() {deepEqual( Stem("massas"), "massa");});
test("masse -> mas", function() {deepEqual( Stem("masse"), "mas");});
test("masser -> mas", function() {deepEqual( Stem("masser"), "mas");});
test("mast -> mast", function() {deepEqual( Stem("mast"), "mast");});
test("mastetop -> mastetop", function() {deepEqual( Stem("mastetop"), "mastetop");});
test("mastiksbalsam -> mastiksbalsam", function() {deepEqual( Stem("mastiksbalsam"), "mastiksbalsam");});
test("mat -> mat", function() {deepEqual( Stem("mat"), "mat");});
test("matred -> matred", function() {deepEqual( Stem("matred"), "matred");});
test("matris -> matris", function() {deepEqual( Stem("matris"), "matris");});
test("matt -> mat", function() {deepEqual( Stem("matt"), "mat");});
test("mattan -> mattan", function() {deepEqual( Stem("mattan"), "mattan");});
test("mattana -> mattana", function() {deepEqual( Stem("mattana"), "mattana");});
test("mattanja -> mattanja", function() {deepEqual( Stem("mattanja"), "mattanja");});
test("mattans -> mattan", function() {deepEqual( Stem("mattans"), "mattan");});
test("mattathas -> mattatha", function() {deepEqual( Stem("mattathas"), "mattatha");});
test("mattathias -> mattathia", function() {deepEqual( Stem("mattathias"), "mattathia");});
test("mattatta -> mattatta", function() {deepEqual( Stem("mattatta"), "mattatta");});
test("matte -> mat", function() {deepEqual( Stem("matte"), "mat");});
test("mattenaj -> mattenaj", function() {deepEqual( Stem("mattenaj"), "mattenaj");});
test("mattes -> mat", function() {deepEqual( Stem("mattes"), "mat");});
test("matthan -> matthan", function() {deepEqual( Stem("matthan"), "matthan");});
test("matthats -> matthat", function() {deepEqual( Stem("matthats"), "matthat");});
test("matthias -> matthia", function() {deepEqual( Stem("matthias"), "matthia");});
test("matthæus -> matthæus", function() {deepEqual( Stem("matthæus"), "matthæus");});
test("mattitja -> mattitja", function() {deepEqual( Stem("mattitja"), "mattitja");});
test("mave -> mav", function() {deepEqual( Stem("mave"), "mav");});
test("md -> md", function() {deepEqual( Stem("md"), "md");});
test("me -> me", function() {deepEqual( Stem("me"), "me");});
test("meara -> meara", function() {deepEqual( Stem("meara"), "meara");});
test("meatårnet -> meatårn", function() {deepEqual( Stem("meatårnet"), "meatårn");});
test("med -> med", function() {deepEqual( Stem("med"), "med");});
test("medad -> medad", function() {deepEqual( Stem("medad"), "medad");});
test("medan -> medan", function() {deepEqual( Stem("medan"), "medan");});
test("medarbejder -> medarbejd", function() {deepEqual( Stem("medarbejder"), "medarbejd");});
test("medarbejdere -> medarbejd", function() {deepEqual( Stem("medarbejdere"), "medarbejd");});
test("medarvinger -> medarving", function() {deepEqual( Stem("medarvinger"), "medarving");});
test("medbejler -> medbejl", function() {deepEqual( Stem("medbejler"), "medbejl");});
test("medbejlerske -> medbejlersk", function() {deepEqual( Stem("medbejlerske"), "medbejlersk");});
test("medborger -> medborg", function() {deepEqual( Stem("medborger"), "medborg");});
test("medborgere -> medborg", function() {deepEqual( Stem("medborgere"), "medborg");});
test("medbragt -> medbrag", function() {deepEqual( Stem("medbragt"), "medbrag");});
test("medbragte -> medbrag", function() {deepEqual( Stem("medbragte"), "medbrag");});
test("medbringe -> medbring", function() {deepEqual( Stem("medbringe"), "medbring");});
test("medbroder -> medbrod", function() {deepEqual( Stem("medbroder"), "medbrod");});
test("medbrødre -> medbrødr", function() {deepEqual( Stem("medbrødre"), "medbrødr");});
test("meddelagtig -> meddelag", function() {deepEqual( Stem("meddelagtig"), "meddelag");});
test("meddelagtige -> meddelag", function() {deepEqual( Stem("meddelagtige"), "meddelag");});
test("meddele -> meddel", function() {deepEqual( Stem("meddele"), "meddel");});
test("meddelelse -> meddel", function() {deepEqual( Stem("meddelelse"), "meddel");});
test("meddelelsen -> meddel", function() {deepEqual( Stem("meddelelsen"), "meddel");});
test("meddeler -> meddel", function() {deepEqual( Stem("meddeler"), "meddel");});
test("meddeles -> meddel", function() {deepEqual( Stem("meddeles"), "meddel");});
test("meddelt -> meddelt", function() {deepEqual( Stem("meddelt"), "meddelt");});
test("meddelte -> meddelt", function() {deepEqual( Stem("meddelte"), "meddelt");});
test("meddisciple -> meddiscipl", function() {deepEqual( Stem("meddisciple"), "meddiscipl");});
test("medeba -> medeba", function() {deepEqual( Stem("medeba"), "medeba");});
test("meden -> med", function() {deepEqual( Stem("meden"), "med");});
test("medens -> med", function() {deepEqual( Stem("medens"), "med");});
test("meder -> med", function() {deepEqual( Stem("meder"), "med");});
test("medere -> med", function() {deepEqual( Stem("medere"), "med");});
test("mederen -> med", function() {deepEqual( Stem("mederen"), "med");});
test("mederkongen -> mederkong", function() {deepEqual( Stem("mederkongen"), "mederkong");});
test("mederkongens -> mederkong", function() {deepEqual( Stem("mederkongens"), "mederkong");});
test("mederne -> med", function() {deepEqual( Stem("mederne"), "med");});
test("medernes -> med", function() {deepEqual( Stem("medernes"), "med");});
test("medfange -> medfang", function() {deepEqual( Stem("medfange"), "medfang");});
test("medfanger -> medfang", function() {deepEqual( Stem("medfanger"), "medfang");});
test("medfangne -> medfangn", function() {deepEqual( Stem("medfangne"), "medfangn");});
test("medfølelse -> medføl", function() {deepEqual( Stem("medfølelse"), "medføl");});
test("medfølgende -> medfølg", function() {deepEqual( Stem("medfølgende"), "medfølg");});
test("medføre -> medfør", function() {deepEqual( Stem("medføre"), "medfør");});
test("medførte -> medført", function() {deepEqual( Stem("medførte"), "medført");});
test("medgangen -> medgang", function() {deepEqual( Stem("medgangen"), "medgang");});
test("medgav -> medgav", function() {deepEqual( Stem("medgav"), "medgav");});
test("medgift -> medgift", function() {deepEqual( Stem("medgift"), "medgift");});
test("medgik -> medgik", function() {deepEqual( Stem("medgik"), "medgik");});
test("medhjælp -> medhjælp", function() {deepEqual( Stem("medhjælp"), "medhjælp");});
test("medhjælper -> medhjælp", function() {deepEqual( Stem("medhjælper"), "medhjælp");});
test("medhold -> medhold", function() {deepEqual( Stem("medhold"), "medhold");});
test("medhustru -> medhustru", function() {deepEqual( Stem("medhustru"), "medhustru");});
test("medhustruen -> medhustru", function() {deepEqual( Stem("medhustruen"), "medhustru");});
test("medhustruer -> medhustru", function() {deepEqual( Stem("medhustruer"), "medhustru");});
test("medhustruerne -> medhustru", function() {deepEqual( Stem("medhustruerne"), "medhustru");});
test("medhustruernes -> medhustru", function() {deepEqual( Stem("medhustruernes"), "medhustru");});
test("medhustruers -> medhustru", function() {deepEqual( Stem("medhustruers"), "medhustru");});
test("medhustu -> medhustu", function() {deepEqual( Stem("medhustu"), "medhustu");});
test("medien -> medi", function() {deepEqual( Stem("medien"), "medi");});
test("mediens -> medi", function() {deepEqual( Stem("mediens"), "medi");});
test("medindlemmede -> medindlemmed", function() {deepEqual( Stem("medindlemmede"), "medindlemmed");});
test("medisk -> medisk", function() {deepEqual( Stem("medisk"), "medisk");});
test("mediske -> medisk", function() {deepEqual( Stem("mediske"), "medisk");});
test("medlidende -> medlid", function() {deepEqual( Stem("medlidende"), "medlid");});
test("medlidenhed -> medliden", function() {deepEqual( Stem("medlidenhed"), "medliden");});
test("medmindre -> medmindr", function() {deepEqual( Stem("medmindre"), "medmindr");});
test("medopbyggede -> medopbygged", function() {deepEqual( Stem("medopbyggede"), "medopbygged");});
test("medoprejst -> medoprejst", function() {deepEqual( Stem("medoprejst"), "medoprejst");});
test("medoprejste -> medoprejst", function() {deepEqual( Stem("medoprejste"), "medoprejst");});
test("medregnet -> medregn", function() {deepEqual( Stem("medregnet"), "medregn");});
test("medstrider -> medstrid", function() {deepEqual( Stem("medstrider"), "medstrid");});
test("medtjener -> medtjen", function() {deepEqual( Stem("medtjener"), "medtjen");});
test("medtjenere -> medtjen", function() {deepEqual( Stem("medtjenere"), "medtjen");});
test("medudvalgte -> medudvalg", function() {deepEqual( Stem("medudvalgte"), "medudvalg");});
test("medynk -> medynk", function() {deepEqual( Stem("medynk"), "medynk");});
test("medældste -> medældst", function() {deepEqual( Stem("medældste"), "medældst");});
test("mefa -> mefa", function() {deepEqual( Stem("mefa"), "mefa");});
test("mefaat -> mefaat", function() {deepEqual( Stem("mefaat"), "mefaat");});
test("mefibosjet -> mefibosj", function() {deepEqual( Stem("mefibosjet"), "mefibosj");});
test("mefibosjets -> mefibosj", function() {deepEqual( Stem("mefibosjets"), "mefibosj");});
test("megel -> megel", function() {deepEqual( Stem("megel"), "megel");});
test("megen -> meg", function() {deepEqual( Stem("megen"), "meg");});
test("meget -> meg", function() {deepEqual( Stem("meget"), "meg");});
test("megiddo -> megiddo", function() {deepEqual( Stem("megiddo"), "megiddo");});
test("megiddos -> megiddo", function() {deepEqual( Stem("megiddos"), "megiddo");});
test("mehetab -> mehetab", function() {deepEqual( Stem("mehetab"), "mehetab");});
test("mehetabel -> mehetabel", function() {deepEqual( Stem("mehetabel"), "mehetabel");});
test("mehidas -> mehida", function() {deepEqual( Stem("mehidas"), "mehida");});
test("mehir -> mehir", function() {deepEqual( Stem("mehir"), "mehir");});
test("mehol -> mehol", function() {deepEqual( Stem("mehol"), "mehol");});
test("mehola -> mehola", function() {deepEqual( Stem("mehola"), "mehola");});
test("mehujael -> mehujael", function() {deepEqual( Stem("mehujael"), "mehujael");});
test("mehuman -> mehuman", function() {deepEqual( Stem("mehuman"), "mehuman");});
test("mejede -> mejed", function() {deepEqual( Stem("mejede"), "mejed");});
test("mejsel -> mejsel", function() {deepEqual( Stem("mejsel"), "mejsel");});
test("mejsler -> mejsl", function() {deepEqual( Stem("mejsler"), "mejsl");});
test("mekeratiten -> mekeratit", function() {deepEqual( Stem("mekeratiten"), "mekeratit");});
test("mekona -> mekona", function() {deepEqual( Stem("mekona"), "mekona");});
test("mel -> mel", function() {deepEqual( Stem("mel"), "mel");});
test("mela -> mela", function() {deepEqual( Stem("mela"), "mela");});
test("melatja -> melatja", function() {deepEqual( Stem("melatja"), "melatja");});
test("meld -> meld", function() {deepEqual( Stem("meld"), "meld");});
test("melde -> meld", function() {deepEqual( Stem("melde"), "meld");});
test("melder -> meld", function() {deepEqual( Stem("melder"), "meld");});
test("meldes -> meld", function() {deepEqual( Stem("meldes"), "meld");});
test("melding -> melding", function() {deepEqual( Stem("melding"), "melding");});
test("meldt -> meld", function() {deepEqual( Stem("meldt"), "meld");});
test("meldte -> meld", function() {deepEqual( Stem("meldte"), "meld");});
test("meldtes -> meld", function() {deepEqual( Stem("meldtes"), "meld");});
test("meleas -> melea", function() {deepEqual( Stem("meleas"), "melea");});
test("melek -> melek", function() {deepEqual( Stem("melek"), "melek");});
test("melet -> mel", function() {deepEqual( Stem("melet"), "mel");});
test("melkis -> melkis", function() {deepEqual( Stem("melkis"), "melkis");});
test("melkisedek -> melkisedek", function() {deepEqual( Stem("melkisedek"), "melkisedek");});
test("melkisedeks -> melkisedek", function() {deepEqual( Stem("melkisedeks"), "melkisedek");});
test("melkizedek -> melkizedek", function() {deepEqual( Stem("melkizedek"), "melkizedek");});
test("melkizedeks -> melkizedek", function() {deepEqual( Stem("melkizedeks"), "melkizedek");});
test("melkrukken -> melkruk", function() {deepEqual( Stem("melkrukken"), "melkruk");});
test("mellem -> mellem", function() {deepEqual( Stem("mellem"), "mellem");});
test("mellemmand -> mellemmand", function() {deepEqual( Stem("mellemmand"), "mellemmand");});
test("mellemmands -> mellemmand", function() {deepEqual( Stem("mellemmands"), "mellemmand");});
test("mellemste -> mellemst", function() {deepEqual( Stem("mellemste"), "mellemst");});
test("mellemstykker -> mellemstyk", function() {deepEqual( Stem("mellemstykker"), "mellemstyk");});
test("mellemstykkerne -> mellemstyk", function() {deepEqual( Stem("mellemstykkerne"), "mellemstyk");});
test("memfis -> memfis", function() {deepEqual( Stem("memfis"), "memfis");});
test("memukan -> memukan", function() {deepEqual( Stem("memukan"), "memukan");});
test("memukans -> memukan", function() {deepEqual( Stem("memukans"), "memukan");});
test("men -> men", function() {deepEqual( Stem("men"), "men");});
test("menahem -> menahem", function() {deepEqual( Stem("menahem"), "menahem");});
test("menahems -> menahem", function() {deepEqual( Stem("menahems"), "menahem");});
test("menassje -> menassj", function() {deepEqual( Stem("menassje"), "menassj");});
test("mene -> men", function() {deepEqual( Stem("mene"), "men");});
test("mened -> mened", function() {deepEqual( Stem("mened"), "mened");});
test("menedere -> mened", function() {deepEqual( Stem("menedere"), "mened");});
test("menederne -> mened", function() {deepEqual( Stem("menederne"), "mened");});
test("mener -> men", function() {deepEqual( Stem("mener"), "men");});
test("meneskesøn -> meneskesøn", function() {deepEqual( Stem("meneskesøn"), "meneskesøn");});
test("menige -> men", function() {deepEqual( Stem("menige"), "men");});
test("menighed -> men", function() {deepEqual( Stem("menighed"), "men");});
test("menigheden -> men", function() {deepEqual( Stem("menigheden"), "men");});
test("menighedens -> men", function() {deepEqual( Stem("menighedens"), "men");});
test("menigheder -> men", function() {deepEqual( Stem("menigheder"), "men");});
test("menighederne -> menighed", function() {deepEqual( Stem("menighederne"), "menighed");});
test("menighedernes -> menighed", function() {deepEqual( Stem("menighedernes"), "menighed");});
test("menigheders -> menighed", function() {deepEqual( Stem("menigheders"), "menighed");});
test("menigheds -> men", function() {deepEqual( Stem("menigheds"), "men");});
test("menighedsforsamling -> menighedsforsamling", function() {deepEqual( Stem("menighedsforsamling"), "menighedsforsamling");});
test("menighedstjener -> menighedstjen", function() {deepEqual( Stem("menighedstjener"), "menighedstjen");});
test("menighedstjenere -> menighedstjen", function() {deepEqual( Stem("menighedstjenere"), "menighedstjen");});
test("menighedsudsendinge -> menighedsudsending", function() {deepEqual( Stem("menighedsudsendinge"), "menighedsudsending");});
test("mening -> mening", function() {deepEqual( Stem("mening"), "mening");});
test("meningen -> mening", function() {deepEqual( Stem("meningen"), "mening");});
test("meninger -> mening", function() {deepEqual( Stem("meninger"), "mening");});
test("menjeg -> menjeg", function() {deepEqual( Stem("menjeg"), "menjeg");});
test("menn -> men", function() {deepEqual( Stem("menn"), "men");});
test("mennas -> menna", function() {deepEqual( Stem("mennas"), "menna");});
test("menneske -> mennesk", function() {deepEqual( Stem("menneske"), "mennesk");});
test("menneskeansigt -> menneskeans", function() {deepEqual( Stem("menneskeansigt"), "menneskeans");});
test("menneskeansigtet -> menneskeans", function() {deepEqual( Stem("menneskeansigtet"), "menneskeans");});
test("menneskebarn -> menneskebarn", function() {deepEqual( Stem("menneskebarn"), "menneskebarn");});
test("menneskeblods -> menneskeblod", function() {deepEqual( Stem("menneskeblods"), "menneskeblod");});
test("menneskebud -> menneskebud", function() {deepEqual( Stem("menneskebud"), "menneskebud");});
test("menneskebørn -> menneskebørn", function() {deepEqual( Stem("menneskebørn"), "menneskebørn");});
test("menneskebørnene -> menneskebørn", function() {deepEqual( Stem("menneskebørnene"), "menneskebørn");});
test("menneskebørnenes -> menneskebørn", function() {deepEqual( Stem("menneskebørnenes"), "menneskebørn");});
test("menneskedøtrene -> menneskedøtr", function() {deepEqual( Stem("menneskedøtrene"), "menneskedøtr");});
test("menneskedøtrenes -> menneskedøtr", function() {deepEqual( Stem("menneskedøtrenes"), "menneskedøtr");});
test("menneskefiskere -> menneskefisk", function() {deepEqual( Stem("menneskefiskere"), "menneskefisk");});
test("menneskefod -> menneskefod", function() {deepEqual( Stem("menneskefod"), "menneskefod");});
test("menneskeheden -> menneske", function() {deepEqual( Stem("menneskeheden"), "menneske");});
test("menneskehjerte -> menneskehjert", function() {deepEqual( Stem("menneskehjerte"), "menneskehjert");});
test("menneskehjertets -> menneskehjert", function() {deepEqual( Stem("menneskehjertets"), "menneskehjert");});
test("menneskehjorde -> menneskehjord", function() {deepEqual( Stem("menneskehjorde"), "menneskehjord");});
test("menneskehånd -> menneskehånd", function() {deepEqual( Stem("menneskehånd"), "menneskehånd");});
test("menneskehænder -> menneskehænd", function() {deepEqual( Stem("menneskehænder"), "menneskehænd");});
test("menneskehænders -> menneskehænd", function() {deepEqual( Stem("menneskehænders"), "menneskehænd");});
test("menneskeknogler -> menneskeknogl", function() {deepEqual( Stem("menneskeknogler"), "menneskeknogl");});
test("menneskeknoglerne -> menneskeknogl", function() {deepEqual( Stem("menneskeknoglerne"), "menneskeknogl");});
test("menneskekærlighed -> menneskekær", function() {deepEqual( Stem("menneskekærlighed"), "menneskekær");});
test("menneskekødets -> menneskekød", function() {deepEqual( Stem("menneskekødets"), "menneskekød");});
test("menneskelig -> mennesk", function() {deepEqual( Stem("menneskelig"), "mennesk");});
test("menneskelige -> mennesk", function() {deepEqual( Stem("menneskelige"), "mennesk");});
test("menneskeliv -> menneskeliv", function() {deepEqual( Stem("menneskeliv"), "menneskeliv");});
test("menneskemasse -> menneskemas", function() {deepEqual( Stem("menneskemasse"), "menneskemas");});
test("menneskemål -> menneskemål", function() {deepEqual( Stem("menneskemål"), "menneskemål");});
test("menneskemængde -> menneskemæng", function() {deepEqual( Stem("menneskemængde"), "menneskemæng");});
test("menneskemængden -> menneskemæng", function() {deepEqual( Stem("menneskemængden"), "menneskemæng");});
test("menneskene -> mennesk", function() {deepEqual( Stem("menneskene"), "mennesk");});
test("menneskenes -> mennesk", function() {deepEqual( Stem("menneskenes"), "mennesk");});
test("menneskens -> mennesk", function() {deepEqual( Stem("menneskens"), "mennesk");});
test("mennesker -> mennesk", function() {deepEqual( Stem("mennesker"), "mennesk");});
test("menneskers -> mennesk", function() {deepEqual( Stem("menneskers"), "mennesk");});
test("menneskerøvere -> menneskerøv", function() {deepEqual( Stem("menneskerøvere"), "menneskerøv");});
test("menneskes -> mennesk", function() {deepEqual( Stem("menneskes"), "mennesk");});
test("menneskesjæle -> menneskesjæl", function() {deepEqual( Stem("menneskesjæle"), "menneskesjæl");});
test("menneskeskarn -> menneskeskarn", function() {deepEqual( Stem("menneskeskarn"), "menneskeskarn");});
test("menneskeskrift -> menneskeskrift", function() {deepEqual( Stem("menneskeskrift"), "menneskeskrift");});
test("menneskesnore -> menneskesnor", function() {deepEqual( Stem("menneskesnore"), "menneskesnor");});
test("menneskestok -> menneskestok", function() {deepEqual( Stem("menneskestok"), "menneskestok");});
test("menneskesøn -> menneskesøn", function() {deepEqual( Stem("menneskesøn"), "menneskesøn");});
test("menneskesønnen -> menneskesøn", function() {deepEqual( Stem("menneskesønnen"), "menneskesøn");});
test("menneskesønnens -> menneskesøn", function() {deepEqual( Stem("menneskesønnens"), "menneskesøn");});
test("mennesket -> mennesk", function() {deepEqual( Stem("mennesket"), "mennesk");});
test("mennesketomme -> mennesketom", function() {deepEqual( Stem("mennesketomme"), "mennesketom");});
test("mennesketomt -> mennesketomt", function() {deepEqual( Stem("mennesketomt"), "mennesketomt");});
test("menneskets -> mennesk", function() {deepEqual( Stem("menneskets"), "mennesk");});
test("menneskevis -> menneskevis", function() {deepEqual( Stem("menneskevis"), "menneskevis");});
test("menneskeværk -> menneskeværk", function() {deepEqual( Stem("menneskeværk"), "menneskeværk");});
test("menneskeæder -> menneskeæd", function() {deepEqual( Stem("menneskeæder"), "menneskeæd");});
test("mennesskesøn -> mennesskesøn", function() {deepEqual( Stem("mennesskesøn"), "mennesskesøn");});
test("mennessket -> mennessk", function() {deepEqual( Stem("mennessket"), "mennessk");});
test("mennneskesøn -> mennneskesøn", function() {deepEqual( Stem("mennneskesøn"), "mennneskesøn");});
test("menoho -> menoho", function() {deepEqual( Stem("menoho"), "menoho");});
test("mens -> men", function() {deepEqual( Stem("mens"), "men");});
test("ment -> ment", function() {deepEqual( Stem("ment"), "ment");});
test("mente -> ment", function() {deepEqual( Stem("mente"), "ment");});
test("meon -> meon", function() {deepEqual( Stem("meon"), "meon");});
test("meonotaj -> meonotaj", function() {deepEqual( Stem("meonotaj"), "meonotaj");});
test("mer -> mer", function() {deepEqual( Stem("mer"), "mer");});
test("merab -> merab", function() {deepEqual( Stem("merab"), "merab");});
test("meraiterne -> merait", function() {deepEqual( Stem("meraiterne"), "merait");});
test("meraja -> meraja", function() {deepEqual( Stem("meraja"), "meraja");});
test("merajot -> merajot", function() {deepEqual( Stem("merajot"), "merajot");});
test("merari -> merari", function() {deepEqual( Stem("merari"), "merari");});
test("meraris -> meraris", function() {deepEqual( Stem("meraris"), "meraris");});
test("merariterne -> merarit", function() {deepEqual( Stem("merariterne"), "merarit");});
test("merariternes -> merarit", function() {deepEqual( Stem("merariternes"), "merarit");});
test("meratajims -> meratajim", function() {deepEqual( Stem("meratajims"), "meratajim");});
test("mere -> mer", function() {deepEqual( Stem("mere"), "mer");});
test("mered -> mered", function() {deepEqual( Stem("mered"), "mered");});
test("mereindløses -> mereindløs", function() {deepEqual( Stem("mereindløses"), "mereindløs");});
test("meremot -> meremot", function() {deepEqual( Stem("meremot"), "meremot");});
test("meres -> mer", function() {deepEqual( Stem("meres"), "mer");});
test("meriba -> meriba", function() {deepEqual( Stem("meriba"), "meriba");});
test("meribas -> meriba", function() {deepEqual( Stem("meribas"), "meriba");});
test("meribat -> meribat", function() {deepEqual( Stem("meribat"), "meribat");});
test("meribba -> meribba", function() {deepEqual( Stem("meribba"), "meribba");});
test("merihat -> merihat", function() {deepEqual( Stem("merihat"), "merihat");});
test("merodak -> merodak", function() {deepEqual( Stem("merodak"), "merodak");});
test("meroms -> merom", function() {deepEqual( Stem("meroms"), "merom");});
test("meron -> meron", function() {deepEqual( Stem("meron"), "meron");});
test("meronot -> meronot", function() {deepEqual( Stem("meronot"), "meronot");});
test("meronotiten -> meronotit", function() {deepEqual( Stem("meronotiten"), "meronotit");});
test("meroz -> meroz", function() {deepEqual( Stem("meroz"), "meroz");});
test("meses -> mes", function() {deepEqual( Stem("meses"), "mes");});
test("mesja -> mesja", function() {deepEqual( Stem("mesja"), "mesja");});
test("mesjak -> mesjak", function() {deepEqual( Stem("mesjak"), "mesjak");});
test("mesjaks -> mesjak", function() {deepEqual( Stem("mesjaks"), "mesjak");});
test("mesjek -> mesjek", function() {deepEqual( Stem("mesjek"), "mesjek");});
test("mesjelemja -> mesjelemja", function() {deepEqual( Stem("mesjelemja"), "mesjelemja");});
test("mesjelemjas -> mesjelemja", function() {deepEqual( Stem("mesjelemjas"), "mesjelemja");});
test("mesjezab -> mesjezab", function() {deepEqual( Stem("mesjezab"), "mesjezab");});
test("mesjillemit -> mesjillemit", function() {deepEqual( Stem("mesjillemit"), "mesjillemit");});
test("mesjillemot -> mesjillemot", function() {deepEqual( Stem("mesjillemot"), "mesjillemot");});
test("mesjillemots -> mesjillemot", function() {deepEqual( Stem("mesjillemots"), "mesjillemot");});
test("mesjobab -> mesjobab", function() {deepEqual( Stem("mesjobab"), "mesjobab");});
test("mesjullam -> mesjullam", function() {deepEqual( Stem("mesjullam"), "mesjullam");});
test("mesjullams -> mesjullam", function() {deepEqual( Stem("mesjullams"), "mesjullam");});
test("mesjullemet -> mesjullem", function() {deepEqual( Stem("mesjullemet"), "mesjullem");});
test("mesopotamien -> mesopotami", function() {deepEqual( Stem("mesopotamien"), "mesopotami");});
test("messias -> messia", function() {deepEqual( Stem("messias"), "messia");});
test("mest -> mest", function() {deepEqual( Stem("mest"), "mest");});
test("mester -> mest", function() {deepEqual( Stem("mester"), "mest");});
test("mesteren -> mest", function() {deepEqual( Stem("mesteren"), "mest");});
test("mestre -> mestr", function() {deepEqual( Stem("mestre"), "mestr");});
test("mestrene -> mestr", function() {deepEqual( Stem("mestrene"), "mestr");});
test("mestrer -> mestr", function() {deepEqual( Stem("mestrer"), "mestr");});
test("metal -> metal", function() {deepEqual( Stem("metal"), "metal");});
test("metalprøver -> metalprøv", function() {deepEqual( Stem("metalprøver"), "metalprøv");});
test("metalsmelterens -> metalsmelt", function() {deepEqual( Stem("metalsmelterens"), "metalsmelt");});
test("meteg -> meteg", function() {deepEqual( Stem("meteg"), "meteg");});
test("methusalas -> methusala", function() {deepEqual( Stem("methusalas"), "methusala");});
test("metusalem -> metusalem", function() {deepEqual( Stem("metusalem"), "metusalem");});
test("metusalems -> metusalem", function() {deepEqual( Stem("metusalems"), "metusalem");});
test("metusjael -> metusjael", function() {deepEqual( Stem("metusjael"), "metusjael");});
test("mezahab -> mezahab", function() {deepEqual( Stem("mezahab"), "mezahab");});
test("mibhar -> mibhar", function() {deepEqual( Stem("mibhar"), "mibhar");});
test("mibsam -> mibsam", function() {deepEqual( Stem("mibsam"), "mibsam");});
test("mibzar -> mibzar", function() {deepEqual( Stem("mibzar"), "mibzar");});
test("middag -> middag", function() {deepEqual( Stem("middag"), "middag");});
test("middagens -> middag", function() {deepEqual( Stem("middagens"), "middag");});
test("middags -> middag", function() {deepEqual( Stem("middags"), "middag");});
test("middagsmåltid -> middagsmåltid", function() {deepEqual( Stem("middagsmåltid"), "middagsmåltid");});
test("middagssolen -> middagssol", function() {deepEqual( Stem("middagssolen"), "middagssol");});
test("middagstid -> middagstid", function() {deepEqual( Stem("middagstid"), "middagstid");});
test("middagstide -> middagstid", function() {deepEqual( Stem("middagstide"), "middagstid");});
test("middin -> middin", function() {deepEqual( Stem("middin"), "middin");});
test("midians -> midian", function() {deepEqual( Stem("midians"), "midian");});
test("midjan -> midjan", function() {deepEqual( Stem("midjan"), "midjan");});
test("midjaniten -> midjanit", function() {deepEqual( Stem("midjaniten"), "midjanit");});
test("midjaniterkonger -> midjaniterkong", function() {deepEqual( Stem("midjaniterkonger"), "midjaniterkong");});
test("midjaniterkongerne -> midjaniterkong", function() {deepEqual( Stem("midjaniterkongerne"), "midjaniterkong");});
test("midjaniterne -> midjanit", function() {deepEqual( Stem("midjaniterne"), "midjanit");});
test("midjaniternes -> midjanit", function() {deepEqual( Stem("midjaniternes"), "midjanit");});
test("midjanitisk -> midjanitisk", function() {deepEqual( Stem("midjanitisk"), "midjanitisk");});
test("midjanitiske -> midjanitisk", function() {deepEqual( Stem("midjanitiske"), "midjanitisk");});
test("midjans -> midjan", function() {deepEqual( Stem("midjans"), "midjan");});
test("midler -> midl", function() {deepEqual( Stem("midler"), "midl");});
test("midnat -> midnat", function() {deepEqual( Stem("midnat"), "midnat");});
test("midnatstid -> midnatstid", function() {deepEqual( Stem("midnatstid"), "midnatstid");});
test("midnatstide -> midnatstid", function() {deepEqual( Stem("midnatstide"), "midnatstid");});
test("midt -> midt", function() {deepEqual( Stem("midt"), "midt");});
test("midte -> midt", function() {deepEqual( Stem("midte"), "midt");});
test("midten -> midt", function() {deepEqual( Stem("midten"), "midt");});
test("midterporten -> midterport", function() {deepEqual( Stem("midterporten"), "midterport");});
test("midterste -> midterst", function() {deepEqual( Stem("midterste"), "midterst");});
test("midtersøjler -> midtersøjl", function() {deepEqual( Stem("midtersøjler"), "midtersøjl");});
test("midti -> midti", function() {deepEqual( Stem("midti"), "midti");});
test("midtlinie -> midtlini", function() {deepEqual( Stem("midtlinie"), "midtlini");});
test("mifkadporten -> mifkadport", function() {deepEqual( Stem("mifkadporten"), "mifkadport");});
test("mig -> mig", function() {deepEqual( Stem("mig"), "mig");});
test("migdal -> migdal", function() {deepEqual( Stem("migdal"), "migdal");});
test("migdol -> migdol", function() {deepEqual( Stem("migdol"), "migdol");});
test("migron -> migron", function() {deepEqual( Stem("migron"), "migron");});
test("mijjamin -> mijjamin", function() {deepEqual( Stem("mijjamin"), "mijjamin");});
test("mika -> mika", function() {deepEqual( Stem("mika"), "mika");});
test("mikael -> mikael", function() {deepEqual( Stem("mikael"), "mikael");});
test("mikaels -> mikael", function() {deepEqual( Stem("mikaels"), "mikael");});
test("mikaja -> mikaja", function() {deepEqual( Stem("mikaja"), "mikaja");});
test("mikal -> mikal", function() {deepEqual( Stem("mikal"), "mikal");});
test("mikas -> mika", function() {deepEqual( Stem("mikas"), "mika");});
test("miklot -> miklot", function() {deepEqual( Stem("miklot"), "miklot");});
test("mikmas -> mikma", function() {deepEqual( Stem("mikmas"), "mikma");});
test("mikmaspasset -> mikmaspas", function() {deepEqual( Stem("mikmaspasset"), "mikmaspas");});
test("mikmetat -> mikmetat", function() {deepEqual( Stem("mikmetat"), "mikmetat");});
test("miknejahu -> miknejahu", function() {deepEqual( Stem("miknejahu"), "miknejahu");});
test("mikris -> mikris", function() {deepEqual( Stem("mikris"), "mikris");});
test("mil -> mil", function() {deepEqual( Stem("mil"), "mil");});
test("milalaj -> milalaj", function() {deepEqual( Stem("milalaj"), "milalaj");});
test("mild -> mild", function() {deepEqual( Stem("mild"), "mild");});
test("milde -> mild", function() {deepEqual( Stem("milde"), "mild");});
test("mildelig -> mild", function() {deepEqual( Stem("mildelig"), "mild");});
test("mildhed -> mild", function() {deepEqual( Stem("mildhed"), "mild");});
test("mildne -> mildn", function() {deepEqual( Stem("mildne"), "mildn");});
test("mildner -> mildn", function() {deepEqual( Stem("mildner"), "mildn");});
test("mildnes -> mildn", function() {deepEqual( Stem("mildnes"), "mildn");});
test("mildt -> mild", function() {deepEqual( Stem("mildt"), "mild");});
test("milet -> mil", function() {deepEqual( Stem("milet"), "mil");});
test("milka -> milka", function() {deepEqual( Stem("milka"), "milka");});
test("milkas -> milka", function() {deepEqual( Stem("milkas"), "milka");});
test("milkom -> milkom", function() {deepEqual( Stem("milkom"), "milkom");});
test("milkoms -> milkom", function() {deepEqual( Stem("milkoms"), "milkom");});
test("million -> million", function() {deepEqual( Stem("million"), "million");});
test("millo -> millo", function() {deepEqual( Stem("millo"), "millo");});
test("millos -> millo", function() {deepEqual( Stem("millos"), "millo");});
test("min -> min", function() {deepEqual( Stem("min"), "min");});
test("mind -> mind", function() {deepEqual( Stem("mind"), "mind");});
test("minde -> mind", function() {deepEqual( Stem("minde"), "mind");});
test("mindedag -> mindedag", function() {deepEqual( Stem("mindedag"), "mindedag");});
test("mindede -> minded", function() {deepEqual( Stem("mindede"), "minded");});
test("mindedes -> minded", function() {deepEqual( Stem("mindedes"), "minded");});
test("minder -> mind", function() {deepEqual( Stem("minder"), "mind");});
test("mindes -> mind", function() {deepEqual( Stem("mindes"), "mind");});
test("mindesmærke -> mindesmærk", function() {deepEqual( Stem("mindesmærke"), "mindesmærk");});
test("mindet -> mind", function() {deepEqual( Stem("mindet"), "mind");});
test("mindetegn -> mindetegn", function() {deepEqual( Stem("mindetegn"), "mindetegn");});
test("mindeværdige -> mindeværd", function() {deepEqual( Stem("mindeværdige"), "mindeværd");});
test("mindre -> mindr", function() {deepEqual( Stem("mindre"), "mindr");});
test("mindske -> mindsk", function() {deepEqual( Stem("mindske"), "mindsk");});
test("mindst -> mindst", function() {deepEqual( Stem("mindst"), "mindst");});
test("mindste -> mindst", function() {deepEqual( Stem("mindste"), "mindst");});
test("mine -> min", function() {deepEqual( Stem("mine"), "min");});
test("miner -> min", function() {deepEqual( Stem("miner"), "min");});
test("minerne -> min", function() {deepEqual( Stem("minerne"), "min");});
test("minjamin -> minjamin", function() {deepEqual( Stem("minjamin"), "minjamin");});
test("minnis -> minnis", function() {deepEqual( Stem("minnis"), "minnis");});
test("minnit -> minnit", function() {deepEqual( Stem("minnit"), "minnit");});
test("mirjam -> mirjam", function() {deepEqual( Stem("mirjam"), "mirjam");});
test("mirma -> mirma", function() {deepEqual( Stem("mirma"), "mirma");});
test("misbrug -> misbrug", function() {deepEqual( Stem("misbrug"), "misbrug");});
test("misbruge -> misbrug", function() {deepEqual( Stem("misbruge"), "misbrug");});
test("misbruger -> misbrug", function() {deepEqual( Stem("misbruger"), "misbrug");});
test("misdæder -> misdæd", function() {deepEqual( Stem("misdæder"), "misdæd");});
test("misdædere -> misdæd", function() {deepEqual( Stem("misdædere"), "misdæd");});
test("misdæderne -> misdæd", function() {deepEqual( Stem("misdæderne"), "misdæd");});
test("misfornøjet -> misfornøj", function() {deepEqual( Stem("misfornøjet"), "misfornøj");});
test("misgeming -> misgeming", function() {deepEqual( Stem("misgeming"), "misgeming");});
test("misgerning -> misgerning", function() {deepEqual( Stem("misgerning"), "misgerning");});
test("misgerningen -> misgerning", function() {deepEqual( Stem("misgerningen"), "misgerning");});
test("misgerninger -> misgerning", function() {deepEqual( Stem("misgerninger"), "misgerning");});
test("misgerningers -> misgerning", function() {deepEqual( Stem("misgerningers"), "misgerning");});
test("misgernings -> misgerning", function() {deepEqual( Stem("misgernings"), "misgerning");});
test("misgreb -> misgreb", function() {deepEqual( Stem("misgreb"), "misgreb");});
test("mishag -> mishag", function() {deepEqual( Stem("mishag"), "mishag");});
test("mishagede -> mishaged", function() {deepEqual( Stem("mishagede"), "mishaged");});
test("mishager -> mishag", function() {deepEqual( Stem("mishager"), "mishag");});
test("mishandle -> mishandl", function() {deepEqual( Stem("mishandle"), "mishandl");});
test("mishandlede -> mishandled", function() {deepEqual( Stem("mishandlede"), "mishandled");});
test("mishandler -> mishandl", function() {deepEqual( Stem("mishandler"), "mishandl");});
test("mishandles -> mishandl", function() {deepEqual( Stem("mishandles"), "mishandl");});
test("mishandlet -> mishandl", function() {deepEqual( Stem("mishandlet"), "mishandl");});
test("mishandling -> mishandling", function() {deepEqual( Stem("mishandling"), "mishandling");});
test("misj -> misj", function() {deepEqual( Stem("misj"), "misj");});
test("misjael -> misjael", function() {deepEqual( Stem("misjael"), "misjael");});
test("misjma -> misjma", function() {deepEqual( Stem("misjma"), "misjma");});
test("misjmas -> misjma", function() {deepEqual( Stem("misjmas"), "misjma");});
test("misjpatkilden -> misjpatkild", function() {deepEqual( Stem("misjpatkilden"), "misjpatkild");});
test("misjraiterne -> misjrait", function() {deepEqual( Stem("misjraiterne"), "misjrait");});
test("miskundbed -> miskundbed", function() {deepEqual( Stem("miskundbed"), "miskundbed");});
test("miskundelig -> miskund", function() {deepEqual( Stem("miskundelig"), "miskund");});
test("miskundhed -> miskund", function() {deepEqual( Stem("miskundhed"), "miskund");});
test("miskundheden -> miskund", function() {deepEqual( Stem("miskundheden"), "miskund");});
test("miskundheds -> miskund", function() {deepEqual( Stem("miskundheds"), "miskund");});
test("mislykkedes -> mislykked", function() {deepEqual( Stem("mislykkedes"), "mislykked");});
test("mislykkes -> mislyk", function() {deepEqual( Stem("mislykkes"), "mislyk");});
test("mismod -> mismod", function() {deepEqual( Stem("mismod"), "mismod");});
test("mismodig -> mismod", function() {deepEqual( Stem("mismodig"), "mismod");});
test("mismodige -> mismod", function() {deepEqual( Stem("mismodige"), "mismod");});
test("mispar -> mispar", function() {deepEqual( Stem("mispar"), "mispar");});
test("misperet -> misp", function() {deepEqual( Stem("misperet"), "misp");});
test("misrefot -> misrefot", function() {deepEqual( Stem("misrefot"), "misrefot");});
test("mistanke -> mistank", function() {deepEqual( Stem("mistanke"), "mistank");});
test("miste -> mist", function() {deepEqual( Stem("miste"), "mist");});
test("mistede -> misted", function() {deepEqual( Stem("mistede"), "misted");});
test("mister -> mist", function() {deepEqual( Stem("mister"), "mist");});
test("mistet -> mist", function() {deepEqual( Stem("mistet"), "mist");});
test("mistrøstige -> mistrøst", function() {deepEqual( Stem("mistrøstige"), "mistrøst");});
test("mistvivlede -> mistvivled", function() {deepEqual( Stem("mistvivlede"), "mistvivled");});
test("mistænkeligt -> mistænk", function() {deepEqual( Stem("mistænkeligt"), "mistænk");});
test("misund -> misund", function() {deepEqual( Stem("misund"), "misund");});
test("misunde -> misund", function() {deepEqual( Stem("misunde"), "misund");});
test("misundelig -> misund", function() {deepEqual( Stem("misundelig"), "misund");});
test("misundeliges -> misund", function() {deepEqual( Stem("misundeliges"), "misund");});
test("misundelse -> misund", function() {deepEqual( Stem("misundelse"), "misund");});
test("misundte -> misund", function() {deepEqual( Stem("misundte"), "misund");});
test("mit -> mit", function() {deepEqual( Stem("mit"), "mit");});
test("mitka -> mitka", function() {deepEqual( Stem("mitka"), "mitka");});
test("mitniten -> mitnit", function() {deepEqual( Stem("mitniten"), "mitnit");});
test("mitredat -> mitredat", function() {deepEqual( Stem("mitredat"), "mitredat");});
test("mitylene -> mityl", function() {deepEqual( Stem("mitylene"), "mityl");});
test("mizars -> mizar", function() {deepEqual( Stem("mizars"), "mizar");});
test("mizpa -> mizpa", function() {deepEqual( Stem("mizpa"), "mizpa");});
test("mizpas -> mizpa", function() {deepEqual( Stem("mizpas"), "mizpa");});
test("mizpe -> mizp", function() {deepEqual( Stem("mizpe"), "mizp");});
test("mizpes -> mizp", function() {deepEqual( Stem("mizpes"), "mizp");});
test("mizrajim -> mizrajim", function() {deepEqual( Stem("mizrajim"), "mizrajim");});
test("mizrajims -> mizrajim", function() {deepEqual( Stem("mizrajims"), "mizrajim");});
test("mizza -> mizza", function() {deepEqual( Stem("mizza"), "mizza");});
test("mlesjullam -> mlesjullam", function() {deepEqual( Stem("mlesjullam"), "mlesjullam");});
test("mlizrajim -> mlizrajim", function() {deepEqual( Stem("mlizrajim"), "mlizrajim");});
test("mnason -> mnason", function() {deepEqual( Stem("mnason"), "mnason");});
test("mned -> mned", function() {deepEqual( Stem("mned"), "mned");});
test("mnålte -> mnålt", function() {deepEqual( Stem("mnålte"), "mnålt");});
test("mnønstrede -> mnønstred", function() {deepEqual( Stem("mnønstrede"), "mnønstred");});
test("moab -> moab", function() {deepEqual( Stem("moab"), "moab");});
test("moabit -> moabit", function() {deepEqual( Stem("moabit"), "moabit");});
test("moabiten -> moabit", function() {deepEqual( Stem("moabiten"), "moabit");});
test("moabiter -> moabit", function() {deepEqual( Stem("moabiter"), "moabit");});
test("moabiterinden -> moabiterind", function() {deepEqual( Stem("moabiterinden"), "moabiterind");});
test("moabiterkvinden -> moabiterkvind", function() {deepEqual( Stem("moabiterkvinden"), "moabiterkvind");});
test("moabiterne -> moabit", function() {deepEqual( Stem("moabiterne"), "moabit");});
test("moabiternes -> moabit", function() {deepEqual( Stem("moabiternes"), "moabit");});
test("moabitisk -> moabitisk", function() {deepEqual( Stem("moabitisk"), "moabitisk");});
test("moabitiske -> moabitisk", function() {deepEqual( Stem("moabitiske"), "moabitisk");});
test("moabs -> moab", function() {deepEqual( Stem("moabs"), "moab");});
test("moah -> moah", function() {deepEqual( Stem("moah"), "moah");});
test("mod -> mod", function() {deepEqual( Stem("mod"), "mod");});
test("modarbejde -> modarbejd", function() {deepEqual( Stem("modarbejde"), "modarbejd");});
test("modbillede -> modbilled", function() {deepEqual( Stem("modbillede"), "modbilled");});
test("modbydelig -> modbyd", function() {deepEqual( Stem("modbydelig"), "modbyd");});
test("mode -> mod", function() {deepEqual( Stem("mode"), "mod");});
test("moden -> mod", function() {deepEqual( Stem("moden"), "mod");});
test("modenhed -> moden", function() {deepEqual( Stem("modenhed"), "moden");});
test("modent -> modent", function() {deepEqual( Stem("modent"), "modent");});
test("moder -> mod", function() {deepEqual( Stem("moder"), "mod");});
test("moderen -> mod", function() {deepEqual( Stem("moderen"), "mod");});
test("moderens -> mod", function() {deepEqual( Stem("moderens"), "mod");});
test("moderliv -> moderliv", function() {deepEqual( Stem("moderliv"), "moderliv");});
test("moderlivets -> moderliv", function() {deepEqual( Stem("moderlivets"), "moderliv");});
test("moderlivs -> moderliv", function() {deepEqual( Stem("moderlivs"), "moderliv");});
test("moders -> mod", function() {deepEqual( Stem("moders"), "mod");});
test("moderskød -> moderskød", function() {deepEqual( Stem("moderskød"), "moderskød");});
test("modet -> mod", function() {deepEqual( Stem("modet"), "mod");});
test("modfalden -> modfald", function() {deepEqual( Stem("modfalden"), "modfald");});
test("modfaldent -> modfaldent", function() {deepEqual( Stem("modfaldent"), "modfaldent");});
test("modfaldne -> modfaldn", function() {deepEqual( Stem("modfaldne"), "modfaldn");});
test("modgang -> modgang", function() {deepEqual( Stem("modgang"), "modgang");});
test("modgangs -> modgang", function() {deepEqual( Stem("modgangs"), "modgang");});
test("modham -> modham", function() {deepEqual( Stem("modham"), "modham");});
test("modig -> mod", function() {deepEqual( Stem("modig"), "mod");});
test("modige -> mod", function() {deepEqual( Stem("modige"), "mod");});
test("modløse -> modløs", function() {deepEqual( Stem("modløse"), "modløs");});
test("modløshed -> modløs", function() {deepEqual( Stem("modløshed"), "modløs");});
test("modløst -> modløs", function() {deepEqual( Stem("modløst"), "modløs");});
test("modne -> modn", function() {deepEqual( Stem("modne"), "modn");});
test("modnende -> modn", function() {deepEqual( Stem("modnende"), "modn");});
test("modnes -> modn", function() {deepEqual( Stem("modnes"), "modn");});
test("modpart -> modpart", function() {deepEqual( Stem("modpart"), "modpart");});
test("modparten -> modpart", function() {deepEqual( Stem("modparten"), "modpart");});
test("modparts -> modpart", function() {deepEqual( Stem("modparts"), "modpart");});
test("modsagde -> modsag", function() {deepEqual( Stem("modsagde"), "modsag");});
test("modsat -> modsat", function() {deepEqual( Stem("modsat"), "modsat");});
test("modsatte -> modsat", function() {deepEqual( Stem("modsatte"), "modsat");});
test("modsige -> mods", function() {deepEqual( Stem("modsige"), "mods");});
test("modsigelse -> modsig", function() {deepEqual( Stem("modsigelse"), "modsig");});
test("modstander -> modstand", function() {deepEqual( Stem("modstander"), "modstand");});
test("modstandere -> modstand", function() {deepEqual( Stem("modstandere"), "modstand");});
test("modstanderen -> modstand", function() {deepEqual( Stem("modstanderen"), "modstand");});
test("modstanderes -> modstand", function() {deepEqual( Stem("modstanderes"), "modstand");});
test("modstanderne -> modstand", function() {deepEqual( Stem("modstanderne"), "modstand");});
test("modstands -> modstand", function() {deepEqual( Stem("modstands"), "modstand");});
test("modstod -> modstod", function() {deepEqual( Stem("modstod"), "modstod");});
test("modstå -> modstå", function() {deepEqual( Stem("modstå"), "modstå");});
test("modstår -> modstår", function() {deepEqual( Stem("modstår"), "modstår");});
test("modsætte -> modsæt", function() {deepEqual( Stem("modsætte"), "modsæt");});
test("modtag -> modtag", function() {deepEqual( Stem("modtag"), "modtag");});
test("modtage -> modtag", function() {deepEqual( Stem("modtage"), "modtag");});
test("modtagelse -> modtag", function() {deepEqual( Stem("modtagelse"), "modtag");});
test("modtager -> modtag", function() {deepEqual( Stem("modtager"), "modtag");});
test("modtaget -> modtag", function() {deepEqual( Stem("modtaget"), "modtag");});
test("modtagne -> modtagn", function() {deepEqual( Stem("modtagne"), "modtagn");});
test("modtog -> modtog", function() {deepEqual( Stem("modtog"), "modtog");});
test("modtoge -> modtog", function() {deepEqual( Stem("modtoge"), "modtog");});
test("modtræk -> modtræk", function() {deepEqual( Stem("modtræk"), "modtræk");});
test("molada -> molada", function() {deepEqual( Stem("molada"), "molada");});
test("molid -> molid", function() {deepEqual( Stem("molid"), "molid");});
test("molok -> molok", function() {deepEqual( Stem("molok"), "molok");});
test("moloks -> molok", function() {deepEqual( Stem("moloks"), "molok");});
test("mon -> mon", function() {deepEqual( Stem("mon"), "mon");});
test("monne -> mon", function() {deepEqual( Stem("monne"), "mon");});
test("morbroder -> morbrod", function() {deepEqual( Stem("morbroder"), "morbrod");});
test("morbrødere -> morbrød", function() {deepEqual( Stem("morbrødere"), "morbrød");});
test("morbrødre -> morbrødr", function() {deepEqual( Stem("morbrødre"), "morbrødr");});
test("morbær -> morbær", function() {deepEqual( Stem("morbær"), "morbær");});
test("morbærfigen -> morbærf", function() {deepEqual( Stem("morbærfigen"), "morbærf");});
test("morbærfigentræ -> morbærfigentræ", function() {deepEqual( Stem("morbærfigentræ"), "morbærfigentræ");});
test("morbærfigentræerne -> morbærfigentræ", function() {deepEqual( Stem("morbærfigentræerne"), "morbærfigentræ");});
test("morbærtræer -> morbærtræ", function() {deepEqual( Stem("morbærtræer"), "morbærtræ");});
test("mord -> mord", function() {deepEqual( Stem("mord"), "mord");});
test("mordbande -> mordband", function() {deepEqual( Stem("mordbande"), "mordband");});
test("morddalen -> morddal", function() {deepEqual( Stem("morddalen"), "morddal");});
test("morder -> mord", function() {deepEqual( Stem("morder"), "mord");});
test("mordere -> mord", function() {deepEqual( Stem("mordere"), "mord");});
test("morderen -> mord", function() {deepEqual( Stem("morderen"), "mord");});
test("morderne -> mord", function() {deepEqual( Stem("morderne"), "mord");});
test("mordernes -> mord", function() {deepEqual( Stem("mordernes"), "mord");});
test("morders -> mord", function() {deepEqual( Stem("morders"), "mord");});
test("mordersjæl -> mordersjæl", function() {deepEqual( Stem("mordersjæl"), "mordersjæl");});
test("morderskers -> mordersk", function() {deepEqual( Stem("morderskers"), "mordersk");});
test("mordet -> mord", function() {deepEqual( Stem("mordet"), "mord");});
test("mordokaj -> mordokaj", function() {deepEqual( Stem("mordokaj"), "mordokaj");});
test("mordokajs -> mordokaj", function() {deepEqual( Stem("mordokajs"), "mordokaj");});
test("mordvåben -> mordvåb", function() {deepEqual( Stem("mordvåben"), "mordvåb");});
test("more -> mor", function() {deepEqual( Stem("more"), "mor");});
test("morede -> mored", function() {deepEqual( Stem("morede"), "mored");});
test("morehøjen -> morehøj", function() {deepEqual( Stem("morehøjen"), "morehøj");});
test("moresjet -> moresj", function() {deepEqual( Stem("moresjet"), "moresj");});
test("morfader -> morfad", function() {deepEqual( Stem("morfader"), "morfad");});
test("morgen -> morg", function() {deepEqual( Stem("morgen"), "morg");});
test("morgenbrændoffer -> morgenbrændof", function() {deepEqual( Stem("morgenbrændoffer"), "morgenbrændof");});
test("morgenbrændofrene -> morgenbrændofr", function() {deepEqual( Stem("morgenbrændofrene"), "morgenbrændofr");});
test("morgendagen -> morgendag", function() {deepEqual( Stem("morgendagen"), "morgendag");});
test("morgenen -> morgen", function() {deepEqual( Stem("morgenen"), "morgen");});
test("morgenens -> morgen", function() {deepEqual( Stem("morgenens"), "morgen");});
test("morgener -> morgen", function() {deepEqual( Stem("morgener"), "morgen");});
test("morgenerne -> morgen", function() {deepEqual( Stem("morgenerne"), "morgen");});
test("morgengry -> morgengry", function() {deepEqual( Stem("morgengry"), "morgengry");});
test("morgenrøde -> morgenrød", function() {deepEqual( Stem("morgenrøde"), "morgenrød");});
test("morgenrøden -> morgenrød", function() {deepEqual( Stem("morgenrøden"), "morgenrød");});
test("morgenrødens -> morgenrød", function() {deepEqual( Stem("morgenrødens"), "morgenrød");});
test("morgensol -> morgensol", function() {deepEqual( Stem("morgensol"), "morgensol");});
test("morgenstjerne -> morgenstj", function() {deepEqual( Stem("morgenstjerne"), "morgenstj");});
test("morgenstjernen -> morgenstjern", function() {deepEqual( Stem("morgenstjernen"), "morgenstjern");});
test("morgenstjerner -> morgenstjern", function() {deepEqual( Stem("morgenstjerner"), "morgenstjern");});
test("morgenstjernerne -> morgenstjern", function() {deepEqual( Stem("morgenstjernerne"), "morgenstjern");});
test("morgentåge -> morgentåg", function() {deepEqual( Stem("morgentåge"), "morgentåg");});
test("morgenvagten -> morgenvag", function() {deepEqual( Stem("morgenvagten"), "morgenvag");});
test("morgenvagtens -> morgenvag", function() {deepEqual( Stem("morgenvagtens"), "morgenvag");});
test("morges -> morg", function() {deepEqual( Stem("morges"), "morg");});
test("morija -> morija", function() {deepEqual( Stem("morija"), "morija");});
test("morkodaj -> morkodaj", function() {deepEqual( Stem("morkodaj"), "morkodaj");});
test("mormoder -> mormod", function() {deepEqual( Stem("mormoder"), "mormod");});
test("morskab -> morskab", function() {deepEqual( Stem("morskab"), "morskab");});
test("morter -> mort", function() {deepEqual( Stem("morter"), "mort");});
test("mortere -> mort", function() {deepEqual( Stem("mortere"), "mort");});
test("morteren -> mort", function() {deepEqual( Stem("morteren"), "mort");});
test("mose -> mos", function() {deepEqual( Stem("mose"), "mos");});
test("mosebog -> mosebog", function() {deepEqual( Stem("mosebog"), "mosebog");});
test("mosera -> mosera", function() {deepEqual( Stem("mosera"), "mosera");});
test("moserot -> moserot", function() {deepEqual( Stem("moserot"), "moserot");});
test("moses -> mos", function() {deepEqual( Stem("moses"), "mos");});
test("mosess -> moses", function() {deepEqual( Stem("mosess"), "moses");});
test("moslen -> mosl", function() {deepEqual( Stem("moslen"), "mosl");});
test("most -> most", function() {deepEqual( Stem("most"), "most");});
test("mosten -> most", function() {deepEqual( Stem("mosten"), "most");});
test("mosters -> most", function() {deepEqual( Stem("mosters"), "most");});
test("moza -> moza", function() {deepEqual( Stem("moza"), "moza");});
test("mtakis -> mtakis", function() {deepEqual( Stem("mtakis"), "mtakis");});
test("mtidte -> mtidt", function() {deepEqual( Stem("mtidte"), "mtidt");});
test("mudder -> mud", function() {deepEqual( Stem("mudder"), "mud");});
test("muld -> muld", function() {deepEqual( Stem("muld"), "muld");});
test("mulddyr -> mulddyr", function() {deepEqual( Stem("mulddyr"), "mulddyr");});
test("mulde -> muld", function() {deepEqual( Stem("mulde"), "muld");});
test("mulden -> muld", function() {deepEqual( Stem("mulden"), "muld");});
test("muldet -> muld", function() {deepEqual( Stem("muldet"), "muld");});
test("muldvarpe -> muldvarp", function() {deepEqual( Stem("muldvarpe"), "muldvarp");});
test("muldyr -> muldyr", function() {deepEqual( Stem("muldyr"), "muldyr");});
test("muldyrene -> muldyr", function() {deepEqual( Stem("muldyrene"), "muldyr");});
test("muldyret -> muldyr", function() {deepEqual( Stem("muldyret"), "muldyr");});
test("mulen -> mul", function() {deepEqual( Stem("mulen"), "mul");});
test("mulig -> mul", function() {deepEqual( Stem("mulig"), "mul");});
test("mulige -> mul", function() {deepEqual( Stem("mulige"), "mul");});
test("mulighed -> mul", function() {deepEqual( Stem("mulighed"), "mul");});
test("muligt -> mul", function() {deepEqual( Stem("muligt"), "mul");});
test("mullent -> mullent", function() {deepEqual( Stem("mullent"), "mullent");});
test("mulm -> mulm", function() {deepEqual( Stem("mulm"), "mulm");});
test("mulmet -> mulm", function() {deepEqual( Stem("mulmet"), "mulm");});
test("mulmets -> mulm", function() {deepEqual( Stem("mulmets"), "mulm");});
test("mulms -> mulm", function() {deepEqual( Stem("mulms"), "mulm");});
test("mumlede -> mumled", function() {deepEqual( Stem("mumlede"), "mumled");});
test("mumlen -> muml", function() {deepEqual( Stem("mumlen"), "muml");});
test("mumler -> muml", function() {deepEqual( Stem("mumler"), "muml");});
test("mumlet -> muml", function() {deepEqual( Stem("mumlet"), "muml");});
test("mund -> mund", function() {deepEqual( Stem("mund"), "mund");});
test("mundbæger -> mundbæg", function() {deepEqual( Stem("mundbæger"), "mundbæg");});
test("munde -> mund", function() {deepEqual( Stem("munde"), "mund");});
test("munden -> mund", function() {deepEqual( Stem("munden"), "mund");});
test("mundens -> mund", function() {deepEqual( Stem("mundens"), "mund");});
test("mundheld -> mundheld", function() {deepEqual( Stem("mundheld"), "mundheld");});
test("mundhuggedes -> mundhugged", function() {deepEqual( Stem("mundhuggedes"), "mundhugged");});
test("munding -> munding", function() {deepEqual( Stem("munding"), "munding");});
test("munds -> mund", function() {deepEqual( Stem("munds"), "mund");});
test("mundskænk -> mundskænk", function() {deepEqual( Stem("mundskænk"), "mundskænk");});
test("mundskænke -> mundskænk", function() {deepEqual( Stem("mundskænke"), "mundskænk");});
test("mundskænken -> mundskænk", function() {deepEqual( Stem("mundskænken"), "mundskænk");});
test("mundsvejr -> mundsvejr", function() {deepEqual( Stem("mundsvejr"), "mundsvejr");});
test("mundsvejret -> mundsvejr", function() {deepEqual( Stem("mundsvejret"), "mundsvejr");});
test("mundtligt -> mund", function() {deepEqual( Stem("mundtligt"), "mund");});
test("muntert -> muntert", function() {deepEqual( Stem("muntert"), "muntert");});
test("muppim -> muppim", function() {deepEqual( Stem("muppim"), "muppim");});
test("mur -> mur", function() {deepEqual( Stem("mur"), "mur");});
test("murbrud -> murbrud", function() {deepEqual( Stem("murbrud"), "murbrud");});
test("murbruddet -> murbrud", function() {deepEqual( Stem("murbruddet"), "murbrud");});
test("murbrudsbøder -> murbrudsbød", function() {deepEqual( Stem("murbrudsbøder"), "murbrudsbød");});
test("murbrækkers -> murbræk", function() {deepEqual( Stem("murbrækkers"), "murbræk");});
test("mure -> mur", function() {deepEqual( Stem("mure"), "mur");});
test("mured -> mured", function() {deepEqual( Stem("mured"), "mured");});
test("muren -> mur", function() {deepEqual( Stem("muren"), "mur");});
test("murene -> mur", function() {deepEqual( Stem("murene"), "mur");});
test("murens -> mur", function() {deepEqual( Stem("murens"), "mur");});
test("murer -> mur", function() {deepEqual( Stem("murer"), "mur");});
test("murere -> mur", function() {deepEqual( Stem("murere"), "mur");});
test("murerne -> mur", function() {deepEqual( Stem("murerne"), "mur");});
test("mures -> mur", function() {deepEqual( Stem("mures"), "mur");});
test("murhjørnet -> murhjørn", function() {deepEqual( Stem("murhjørnet"), "murhjørn");});
test("murkanten -> murkant", function() {deepEqual( Stem("murkanten"), "murkant");});
test("murpiller -> murpil", function() {deepEqual( Stem("murpiller"), "murpil");});
test("murpillerne -> murpil", function() {deepEqual( Stem("murpillerne"), "murpil");});
test("murstærke -> murstærk", function() {deepEqual( Stem("murstærke"), "murstærk");});
test("murtinderne -> murtind", function() {deepEqual( Stem("murtinderne"), "murtind");});
test("murværk -> murværk", function() {deepEqual( Stem("murværk"), "murværk");});
test("mus -> mus", function() {deepEqual( Stem("mus"), "mus");});
test("musen -> mus", function() {deepEqual( Stem("musen"), "mus");});
test("musene -> mus", function() {deepEqual( Stem("musene"), "mus");});
test("musik -> musik", function() {deepEqual( Stem("musik"), "musik");});
test("musikinstrumenter -> musikinstrument", function() {deepEqual( Stem("musikinstrumenter"), "musikinstrument");});
test("musikinstrumenterne -> musikinstrument", function() {deepEqual( Stem("musikinstrumenterne"), "musikinstrument");});
test("musji -> musji", function() {deepEqual( Stem("musji"), "musji");});
test("musjis -> musjis", function() {deepEqual( Stem("musjis"), "musjis");});
test("musjiternes -> musjit", function() {deepEqual( Stem("musjiternes"), "musjit");});
test("muskler -> muskl", function() {deepEqual( Stem("muskler"), "muskl");});
test("myg -> myg", function() {deepEqual( Stem("myg"), "myg");});
test("myggen -> myg", function() {deepEqual( Stem("myggen"), "myg");});
test("myggene -> myg", function() {deepEqual( Stem("myggene"), "myg");});
test("myldre -> myldr", function() {deepEqual( Stem("myldre"), "myldr");});
test("myndighed -> mynd", function() {deepEqual( Stem("myndighed"), "mynd");});
test("myndigheder -> mynd", function() {deepEqual( Stem("myndigheder"), "mynd");});
test("myndighederne -> myndighed", function() {deepEqual( Stem("myndighederne"), "myndighed");});
test("mynte -> mynt", function() {deepEqual( Stem("mynte"), "mynt");});
test("myra -> myra", function() {deepEqual( Stem("myra"), "myra");});
test("myrde -> myrd", function() {deepEqual( Stem("myrde"), "myrd");});
test("myrded -> myrded", function() {deepEqual( Stem("myrded"), "myrded");});
test("myrdede -> myrded", function() {deepEqual( Stem("myrdede"), "myrded");});
test("myrdedes -> myrded", function() {deepEqual( Stem("myrdedes"), "myrded");});
test("myrden -> myrd", function() {deepEqual( Stem("myrden"), "myrd");});
test("myrder -> myrd", function() {deepEqual( Stem("myrder"), "myrd");});
test("myrdes -> myrd", function() {deepEqual( Stem("myrdes"), "myrd");});
test("myrdet -> myrd", function() {deepEqual( Stem("myrdet"), "myrd");});
test("myren -> myr", function() {deepEqual( Stem("myren"), "myr");});
test("myrerne -> myr", function() {deepEqual( Stem("myrerne"), "myr");});
test("myrra -> myrra", function() {deepEqual( Stem("myrra"), "myrra");});
test("myrrabjerget -> myrrabjerg", function() {deepEqual( Stem("myrrabjerget"), "myrrabjerg");});
test("myrraolie -> myrraoli", function() {deepEqual( Stem("myrraolie"), "myrraoli");});
test("myrrapose -> myrrapos", function() {deepEqual( Stem("myrrapose"), "myrrapos");});
test("myrter -> myrt", function() {deepEqual( Stem("myrter"), "myrt");});
test("mysien -> mysi", function() {deepEqual( Stem("mysien"), "mysi");});
test("må -> må", function() {deepEqual( Stem("må"), "må");});
test("måddraberen -> måddrab", function() {deepEqual( Stem("måddraberen"), "måddrab");});
test("måde -> måd", function() {deepEqual( Stem("måde"), "måd");});
test("måder -> måd", function() {deepEqual( Stem("måder"), "måd");});
test("mågen -> måg", function() {deepEqual( Stem("mågen"), "måg");});
test("måkatiternes -> måkatit", function() {deepEqual( Stem("måkatiternes"), "måkatit");});
test("mål -> mål", function() {deepEqual( Stem("mål"), "mål");});
test("måle -> mål", function() {deepEqual( Stem("måle"), "mål");});
test("målene -> mål", function() {deepEqual( Stem("målene"), "mål");});
test("måler -> mål", function() {deepEqual( Stem("måler"), "mål");});
test("måles -> mål", function() {deepEqual( Stem("måles"), "mål");});
test("målesnor -> målesnor", function() {deepEqual( Stem("målesnor"), "målesnor");});
test("målesnoren -> målesnor", function() {deepEqual( Stem("målesnoren"), "målesnor");});
test("målestang -> målestang", function() {deepEqual( Stem("målestang"), "målestang");});
test("målestangen -> målestang", function() {deepEqual( Stem("målestangen"), "målestang");});
test("målestok -> målestok", function() {deepEqual( Stem("målestok"), "målestok");});
test("målet -> mål", function() {deepEqual( Stem("målet"), "mål");});
test("målfuldt -> målfuld", function() {deepEqual( Stem("målfuldt"), "målfuld");});
test("målløs -> målløs", function() {deepEqual( Stem("målløs"), "målløs");});
test("målløse -> målløs", function() {deepEqual( Stem("målløse"), "målløs");});
test("måls -> mål", function() {deepEqual( Stem("måls"), "mål");});
test("målt -> målt", function() {deepEqual( Stem("målt"), "målt");});
test("målte -> målt", function() {deepEqual( Stem("målte"), "målt");});
test("måltid -> måltid", function() {deepEqual( Stem("måltid"), "måltid");});
test("måltiderne -> måltid", function() {deepEqual( Stem("måltiderne"), "måltid");});
test("måltidet -> måltid", function() {deepEqual( Stem("måltidet"), "måltid");});
test("månde -> månd", function() {deepEqual( Stem("månde"), "månd");});
test("måne -> mån", function() {deepEqual( Stem("måne"), "mån");});
test("måned -> måned", function() {deepEqual( Stem("måned"), "måned");});
test("månede -> måned", function() {deepEqual( Stem("månede"), "måned");});
test("måneden -> måned", function() {deepEqual( Stem("måneden"), "måned");});
test("månedens -> måned", function() {deepEqual( Stem("månedens"), "måned");});
test("måneder -> måned", function() {deepEqual( Stem("måneder"), "måned");});
test("måneders -> måned", function() {deepEqual( Stem("måneders"), "måned");});
test("månedlige -> måned", function() {deepEqual( Stem("månedlige"), "måned");});
test("måneds -> måned", function() {deepEqual( Stem("måneds"), "måned");});
test("månedstid -> månedstid", function() {deepEqual( Stem("månedstid"), "månedstid");});
test("månen -> mån", function() {deepEqual( Stem("månen"), "mån");});
test("månens -> mån", function() {deepEqual( Stem("månens"), "mån");});
test("måneskifterne -> måneskift", function() {deepEqual( Stem("måneskifterne"), "måneskift");});
test("månesyg -> månesyg", function() {deepEqual( Stem("månesyg"), "månesyg");});
test("månesyge -> månesyg", function() {deepEqual( Stem("månesyge"), "månesyg");});
test("måoeden -> måoed", function() {deepEqual( Stem("måoeden"), "måoed");});
test("måske -> måsk", function() {deepEqual( Stem("måske"), "måsk");});
test("måths -> måth", function() {deepEqual( Stem("måths"), "måth");});
test("måtte -> måt", function() {deepEqual( Stem("måtte"), "måt");});
test("måttet -> måt", function() {deepEqual( Stem("måttet"), "måt");});
test("mægter -> mægt", function() {deepEqual( Stem("mægter"), "mægt");});
test("mægtig -> mægt", function() {deepEqual( Stem("mægtig"), "mægt");});
test("mægtige -> mægt", function() {deepEqual( Stem("mægtige"), "mægt");});
test("mægtigere -> mægt", function() {deepEqual( Stem("mægtigere"), "mægt");});
test("mægtiges -> mægt", function() {deepEqual( Stem("mægtiges"), "mægt");});
test("mægtigste -> mægt", function() {deepEqual( Stem("mægtigste"), "mægt");});
test("mægtigt -> mægt", function() {deepEqual( Stem("mægtigt"), "mægt");});
test("mæle -> mæl", function() {deepEqual( Stem("mæle"), "mæl");});
test("mælede -> mæled", function() {deepEqual( Stem("mælede"), "mæled");});
test("mælet -> mæl", function() {deepEqual( Stem("mælet"), "mæl");});
test("mælk -> mælk", function() {deepEqual( Stem("mælk"), "mælk");});
test("mælken -> mælk", function() {deepEqual( Stem("mælken"), "mælk");});
test("mælkesækken -> mælkesæk", function() {deepEqual( Stem("mælkesækken"), "mælkesæk");});
test("mænd -> mænd", function() {deepEqual( Stem("mænd"), "mænd");});
test("mændene -> mænd", function() {deepEqual( Stem("mændene"), "mænd");});
test("mændenes -> mænd", function() {deepEqual( Stem("mændenes"), "mænd");});
test("mænds -> mænd", function() {deepEqual( Stem("mænds"), "mænd");});
test("mængde -> mæng", function() {deepEqual( Stem("mængde"), "mæng");});
test("mængden -> mæng", function() {deepEqual( Stem("mængden"), "mæng");});
test("mængdens -> mæng", function() {deepEqual( Stem("mængdens"), "mæng");});
test("mængder -> mæng", function() {deepEqual( Stem("mængder"), "mæng");});
test("mærk -> mærk", function() {deepEqual( Stem("mærk"), "mærk");});
test("mærke -> mærk", function() {deepEqual( Stem("mærke"), "mærk");});
test("mærked -> mærked", function() {deepEqual( Stem("mærked"), "mærked");});
test("mærkede -> mærked", function() {deepEqual( Stem("mærkede"), "mærked");});
test("mærker -> mærk", function() {deepEqual( Stem("mærker"), "mærk");});
test("mærkesten -> mærkest", function() {deepEqual( Stem("mærkesten"), "mærkest");});
test("mærket -> mærk", function() {deepEqual( Stem("mærket"), "mærk");});
test("mærketegn -> mærketegn", function() {deepEqual( Stem("mærketegn"), "mærketegn");});
test("mæsket -> mæsk", function() {deepEqual( Stem("mæsket"), "mæsk");});
test("mæt -> mæt", function() {deepEqual( Stem("mæt"), "mæt");});
test("mæthed -> mæt", function() {deepEqual( Stem("mæthed"), "mæt");});
test("mætte -> mæt", function() {deepEqual( Stem("mætte"), "mæt");});
test("mætted -> mætted", function() {deepEqual( Stem("mætted"), "mætted");});
test("mættede -> mætted", function() {deepEqual( Stem("mættede"), "mætted");});
test("mættedes -> mætted", function() {deepEqual( Stem("mættedes"), "mætted");});
test("mættelse -> mæt", function() {deepEqual( Stem("mættelse"), "mæt");});
test("mætter -> mæt", function() {deepEqual( Stem("mætter"), "mæt");});
test("mættes -> mæt", function() {deepEqual( Stem("mættes"), "mæt");});
test("mættet -> mæt", function() {deepEqual( Stem("mættet"), "mæt");});
test("mød -> mød", function() {deepEqual( Stem("mød"), "mød");});
test("mødding -> mødding", function() {deepEqual( Stem("mødding"), "mødding");});
test("møddingpølen -> møddingpøl", function() {deepEqual( Stem("møddingpølen"), "møddingpøl");});
test("møde -> mød", function() {deepEqual( Stem("møde"), "mød");});
test("møder -> mød", function() {deepEqual( Stem("møder"), "mød");});
test("mødes -> mød", function() {deepEqual( Stem("mødes"), "mød");});
test("mødre -> mødr", function() {deepEqual( Stem("mødre"), "mødr");});
test("mødrene -> mødr", function() {deepEqual( Stem("mødrene"), "mødr");});
test("mødt -> mødt", function() {deepEqual( Stem("mødt"), "mødt");});
test("mødte -> mødt", function() {deepEqual( Stem("mødte"), "mødt");});
test("mødtes -> mødt", function() {deepEqual( Stem("mødtes"), "mødt");});
test("møer -> møer", function() {deepEqual( Stem("møer"), "møer");});
test("møgporten -> møgport", function() {deepEqual( Stem("møgporten"), "møgport");});
test("møje -> møj", function() {deepEqual( Stem("møje"), "møj");});
test("møjefulde -> møjefuld", function() {deepEqual( Stem("møjefulde"), "møjefuld");});
test("møjsommeligt -> møjsom", function() {deepEqual( Stem("møjsommeligt"), "møjsom");});
test("møl -> møl", function() {deepEqual( Stem("møl"), "møl");});
test("mølle -> møl", function() {deepEqual( Stem("mølle"), "møl");});
test("møllen -> møl", function() {deepEqual( Stem("møllen"), "møl");});
test("møllepigerne -> møllep", function() {deepEqual( Stem("møllepigerne"), "møllep");});
test("møllesten -> møllest", function() {deepEqual( Stem("møllesten"), "møllest");});
test("mølædte -> mølæd", function() {deepEqual( Stem("mølædte"), "mølæd");});
test("mønstedes -> mønsted", function() {deepEqual( Stem("mønstedes"), "mønsted");});
test("mønstre -> mønstr", function() {deepEqual( Stem("mønstre"), "mønstr");});
test("mønstred -> mønstred", function() {deepEqual( Stem("mønstred"), "mønstred");});
test("mønstrede -> mønstred", function() {deepEqual( Stem("mønstrede"), "mønstred");});
test("mønstredes -> mønstred", function() {deepEqual( Stem("mønstredes"), "mønstred");});
test("mønstrer -> mønstr", function() {deepEqual( Stem("mønstrer"), "mønstr");});
test("mønstres -> mønstr", function() {deepEqual( Stem("mønstres"), "mønstr");});
test("mønstret -> mønstr", function() {deepEqual( Stem("mønstret"), "mønstr");});
test("mønstring -> mønstring", function() {deepEqual( Stem("mønstring"), "mønstring");});
test("mønstringen -> mønstring", function() {deepEqual( Stem("mønstringen"), "mønstring");});
test("mønsttedes -> mønstted", function() {deepEqual( Stem("mønsttedes"), "mønstted");});
test("mønt -> mønt", function() {deepEqual( Stem("mønt"), "mønt");});
test("mørk -> mørk", function() {deepEqual( Stem("mørk"), "mørk");});
test("mørke -> mørk", function() {deepEqual( Stem("mørke"), "mørk");});
test("mørkes -> mørk", function() {deepEqual( Stem("mørkes"), "mørk");});
test("mørket -> mørk", function() {deepEqual( Stem("mørket"), "mørk");});
test("mørkets -> mørk", function() {deepEqual( Stem("mørkets"), "mørk");});
test("mørkner -> mørkn", function() {deepEqual( Stem("mørkner"), "mørkn");});
test("mørkningen -> mørkning", function() {deepEqual( Stem("mørkningen"), "mørkning");});
test("mørkt -> mørk", function() {deepEqual( Stem("mørkt"), "mørk");});
test("mørt -> mørt", function() {deepEqual( Stem("mørt"), "mørt");});
test("n -> n", function() {deepEqual( Stem("n"), "n");});
test("na -> na", function() {deepEqual( Stem("na"), "na");});
test("nabal -> nabal", function() {deepEqual( Stem("nabal"), "nabal");});
test("nabalal -> nabalal", function() {deepEqual( Stem("nabalal"), "nabalal");});
test("nabals -> nabal", function() {deepEqual( Stem("nabals"), "nabal");});
test("nabarajim -> nabarajim", function() {deepEqual( Stem("nabarajim"), "nabarajim");});
test("nabi -> nabi", function() {deepEqual( Stem("nabi"), "nabi");});
test("nabo -> nabo", function() {deepEqual( Stem("nabo"), "nabo");});
test("nabobyerne -> naboby", function() {deepEqual( Stem("nabobyerne"), "naboby");});
test("naboer -> nabo", function() {deepEqual( Stem("naboer"), "nabo");});
test("naboerne -> nabo", function() {deepEqual( Stem("naboerne"), "nabo");});
test("naboers -> nabo", function() {deepEqual( Stem("naboers"), "nabo");});
test("naboerske -> naboersk", function() {deepEqual( Stem("naboerske"), "naboersk");});
test("naboersker -> naboersk", function() {deepEqual( Stem("naboersker"), "naboersk");});
test("naboerskerne -> naboersk", function() {deepEqual( Stem("naboerskerne"), "naboersk");});
test("nabofolks -> nabofolk", function() {deepEqual( Stem("nabofolks"), "nabofolk");});
test("nabolag -> nabolag", function() {deepEqual( Stem("nabolag"), "nabolag");});
test("nabot -> nabot", function() {deepEqual( Stem("nabot"), "nabot");});
test("nabots -> nabot", function() {deepEqual( Stem("nabots"), "nabot");});
test("nadab -> nadab", function() {deepEqual( Stem("nadab"), "nadab");});
test("nadabs -> nadab", function() {deepEqual( Stem("nadabs"), "nadab");});
test("nadver -> nadv", function() {deepEqual( Stem("nadver"), "nadv");});
test("nadveren -> nadv", function() {deepEqual( Stem("nadveren"), "nadv");});
test("nadverens -> nadv", function() {deepEqual( Stem("nadverens"), "nadv");});
test("naf -> naf", function() {deepEqual( Stem("naf"), "naf");});
test("nafesj -> nafesj", function() {deepEqual( Stem("nafesj"), "nafesj");});
test("nafisj -> nafisj", function() {deepEqual( Stem("nafisj"), "nafisj");});
test("naftali -> naftali", function() {deepEqual( Stem("naftali"), "naftali");});
test("naftalis -> naftalis", function() {deepEqual( Stem("naftalis"), "naftalis");});
test("naftalitemes -> naftalitem", function() {deepEqual( Stem("naftalitemes"), "naftalitem");});
test("naftaliterne -> naftalit", function() {deepEqual( Stem("naftaliterne"), "naftalit");});
test("naftaliternes -> naftalit", function() {deepEqual( Stem("naftaliternes"), "naftalit");});
test("nafthalis -> nafthalis", function() {deepEqual( Stem("nafthalis"), "nafthalis");});
test("naftuherne -> naftuh", function() {deepEqual( Stem("naftuherne"), "naftuh");});
test("nag -> nag", function() {deepEqual( Stem("nag"), "nag");});
test("naged -> naged", function() {deepEqual( Stem("naged"), "naged");});
test("nagede -> naged", function() {deepEqual( Stem("nagede"), "naged");});
test("nagende -> nag", function() {deepEqual( Stem("nagende"), "nag");});
test("naggajs -> naggaj", function() {deepEqual( Stem("naggajs"), "naggaj");});
test("nagle -> nagl", function() {deepEqual( Stem("nagle"), "nagl");});
test("naglegabet -> naglegab", function() {deepEqual( Stem("naglegabet"), "naglegab");});
test("naglen -> nagl", function() {deepEqual( Stem("naglen"), "nagl");});
test("nagler -> nagl", function() {deepEqual( Stem("nagler"), "nagl");});
test("naglerne -> nagl", function() {deepEqual( Stem("naglerne"), "nagl");});
test("nagles -> nagl", function() {deepEqual( Stem("nagles"), "nagl");});
test("nahalal -> nahalal", function() {deepEqual( Stem("nahalal"), "nahalal");});
test("nahale -> nahal", function() {deepEqual( Stem("nahale"), "nahal");});
test("nahaliel -> nahaliel", function() {deepEqual( Stem("nahaliel"), "nahaliel");});
test("nahalol -> nahalol", function() {deepEqual( Stem("nahalol"), "nahalol");});
test("nahamani -> nahamani", function() {deepEqual( Stem("nahamani"), "nahamani");});
test("nahams -> naham", function() {deepEqual( Stem("nahams"), "naham");});
test("naharaj -> naharaj", function() {deepEqual( Stem("naharaj"), "naharaj");});
test("naharajim -> naharajim", function() {deepEqual( Stem("naharajim"), "naharajim");});
test("nahasj -> nahasj", function() {deepEqual( Stem("nahasj"), "nahasj");});
test("nahasjon -> nahasjon", function() {deepEqual( Stem("nahasjon"), "nahasjon");});
test("nahasjons -> nahasjon", function() {deepEqual( Stem("nahasjons"), "nahasjon");});
test("nahasjs -> nahasj", function() {deepEqual( Stem("nahasjs"), "nahasj");});
test("nahat -> nahat", function() {deepEqual( Stem("nahat"), "nahat");});
test("nahum -> nahum", function() {deepEqual( Stem("nahum"), "nahum");});
test("nahums -> nahum", function() {deepEqual( Stem("nahums"), "nahum");});
test("nain -> nain", function() {deepEqual( Stem("nain"), "nain");});
test("naj -> naj", function() {deepEqual( Stem("naj"), "naj");});
test("najot -> najot", function() {deepEqual( Stem("najot"), "najot");});
test("nakke -> nak", function() {deepEqual( Stem("nakke"), "nak");});
test("nakken -> nak", function() {deepEqual( Stem("nakken"), "nak");});
test("nakker -> nak", function() {deepEqual( Stem("nakker"), "nak");});
test("nako -> nako", function() {deepEqual( Stem("nako"), "nako");});
test("nakon -> nakon", function() {deepEqual( Stem("nakon"), "nakon");});
test("nakons -> nakon", function() {deepEqual( Stem("nakons"), "nakon");});
test("nakor -> nakor", function() {deepEqual( Stem("nakor"), "nakor");});
test("nakors -> nakor", function() {deepEqual( Stem("nakors"), "nakor");});
test("naman -> naman", function() {deepEqual( Stem("naman"), "naman");});
test("nardus -> nardus", function() {deepEqual( Stem("nardus"), "nardus");});
test("nardussalve -> nardussalv", function() {deepEqual( Stem("nardussalve"), "nardussalv");});
test("narkissus -> narkissus", function() {deepEqual( Stem("narkissus"), "narkissus");});
test("narre -> nar", function() {deepEqual( Stem("narre"), "nar");});
test("narrede -> narred", function() {deepEqual( Stem("narrede"), "narred");});
test("narrer -> nar", function() {deepEqual( Stem("narrer"), "nar");});
test("narret -> nar", function() {deepEqual( Stem("narret"), "nar");});
test("nasiræer -> nasiræ", function() {deepEqual( Stem("nasiræer"), "nasiræ");});
test("nasiræere -> nasiræ", function() {deepEqual( Stem("nasiræere"), "nasiræ");});
test("nasiræeren -> nasiræ", function() {deepEqual( Stem("nasiræeren"), "nasiræ");});
test("nasiræerens -> nasiræ", function() {deepEqual( Stem("nasiræerens"), "nasiræ");});
test("nasiræerløfte -> nasiræerløft", function() {deepEqual( Stem("nasiræerløfte"), "nasiræerløft");});
test("nasiræerne -> nasiræ", function() {deepEqual( Stem("nasiræerne"), "nasiræ");});
test("nasson -> nasson", function() {deepEqual( Stem("nasson"), "nasson");});
test("nassons -> nasson", function() {deepEqual( Stem("nassons"), "nasson");});
test("nat -> nat", function() {deepEqual( Stem("nat"), "nat");});
test("natan -> natan", function() {deepEqual( Stem("natan"), "natan");});
test("natans -> natan", function() {deepEqual( Stem("natans"), "natan");});
test("nathanael -> nathanael", function() {deepEqual( Stem("nathanael"), "nathanael");});
test("nathans -> nathan", function() {deepEqual( Stem("nathans"), "nathan");});
test("natlig -> nat", function() {deepEqual( Stem("natlig"), "nat");});
test("natlige -> nat", function() {deepEqual( Stem("natlige"), "nat");});
test("natligt -> nat", function() {deepEqual( Stem("natligt"), "nat");});
test("natron -> natron", function() {deepEqual( Stem("natron"), "natron");});
test("natteheksen -> natteheks", function() {deepEqual( Stem("natteheksen"), "natteheks");});
test("natteherberge -> natteherberg", function() {deepEqual( Stem("natteherberge"), "natteherberg");});
test("natteherberget -> natteherberg", function() {deepEqual( Stem("natteherberget"), "natteherberg");});
test("nattely -> nattely", function() {deepEqual( Stem("nattely"), "nattely");});
test("nattemørke -> nattemørk", function() {deepEqual( Stem("nattemørke"), "nattemørk");});
test("natten -> nat", function() {deepEqual( Stem("natten"), "nat");});
test("nattens -> nat", function() {deepEqual( Stem("nattens"), "nat");});
test("natterast -> natterast", function() {deepEqual( Stem("natterast"), "natterast");});
test("nattesyn -> nattesyn", function() {deepEqual( Stem("nattesyn"), "nattesyn");});
test("nattesynerne -> nattesyn", function() {deepEqual( Stem("nattesynerne"), "nattesyn");});
test("nattesynernes -> nattesyn", function() {deepEqual( Stem("nattesynernes"), "nattesyn");});
test("nattetid -> nattetid", function() {deepEqual( Stem("nattetid"), "nattetid");});
test("nattetide -> nattetid", function() {deepEqual( Stem("nattetide"), "nattetid");});
test("nattevagt -> nattevag", function() {deepEqual( Stem("nattevagt"), "nattevag");});
test("nattevagterne -> nattevag", function() {deepEqual( Stem("nattevagterne"), "nattevag");});
test("nattevagtstimerne -> nattevagtstim", function() {deepEqual( Stem("nattevagtstimerne"), "nattevagtstim");});
test("nattevågen -> nattevåg", function() {deepEqual( Stem("nattevågen"), "nattevåg");});
test("natur -> natur", function() {deepEqual( Stem("natur"), "natur");});
test("naturen -> natur", function() {deepEqual( Stem("naturen"), "natur");});
test("naturlige -> natur", function() {deepEqual( Stem("naturlige"), "natur");});
test("naums -> naum", function() {deepEqual( Stem("naums"), "naum");});
test("nav -> nav", function() {deepEqual( Stem("nav"), "nav");});
test("navle -> navl", function() {deepEqual( Stem("navle"), "navl");});
test("navlestreng -> navlestreng", function() {deepEqual( Stem("navlestreng"), "navlestreng");});
test("navn -> navn", function() {deepEqual( Stem("navn"), "navn");});
test("navne -> navn", function() {deepEqual( Stem("navne"), "navn");});
test("navnene -> navn", function() {deepEqual( Stem("navnene"), "navn");});
test("navnet -> navn", function() {deepEqual( Stem("navnet"), "navn");});
test("navnets -> navn", function() {deepEqual( Stem("navnets"), "navn");});
test("navngivne -> navngivn", function() {deepEqual( Stem("navngivne"), "navngivn");});
test("navnkundig -> navnkund", function() {deepEqual( Stem("navnkundig"), "navnkund");});
test("navnkundigbed -> navnkundigbed", function() {deepEqual( Stem("navnkundigbed"), "navnkundigbed");});
test("navnkundige -> navnkund", function() {deepEqual( Stem("navnkundige"), "navnkund");});
test("navnkundighed -> navnkund", function() {deepEqual( Stem("navnkundighed"), "navnkund");});
test("navnlig -> navn", function() {deepEqual( Stem("navnlig"), "navn");});
test("navnløs -> navnløs", function() {deepEqual( Stem("navnløs"), "navnløs");});
test("navns -> navn", function() {deepEqual( Stem("navns"), "navn");});
test("nazareth -> nazareth", function() {deepEqual( Stem("nazareth"), "nazareth");});
test("nazaræer -> nazaræ", function() {deepEqual( Stem("nazaræer"), "nazaræ");});
test("nazaræeren -> nazaræ", function() {deepEqual( Stem("nazaræeren"), "nazaræ");});
test("nazaræerens -> nazaræ", function() {deepEqual( Stem("nazaræerens"), "nazaræ");});
test("nazaræernes -> nazaræ", function() {deepEqual( Stem("nazaræernes"), "nazaræ");});
test("nd -> nd", function() {deepEqual( Stem("nd"), "nd");});
test("nde -> nde", function() {deepEqual( Stem("nde"), "nde");});
test("ndedræt -> ndedræt", function() {deepEqual( Stem("ndedræt"), "ndedræt");});
test("ndemagter -> ndemag", function() {deepEqual( Stem("ndemagter"), "ndemag");});
test("nden -> nden", function() {deepEqual( Stem("nden"), "nden");});
test("ndens -> nden", function() {deepEqual( Stem("ndens"), "nden");});
test("ndepust -> ndepust", function() {deepEqual( Stem("ndepust"), "ndepust");});
test("nder -> nder", function() {deepEqual( Stem("nder"), "nder");});
test("nderne -> ndern", function() {deepEqual( Stem("nderne"), "ndern");});
test("ndernes -> ndern", function() {deepEqual( Stem("ndernes"), "ndern");});
test("nders -> nder", function() {deepEqual( Stem("nders"), "nder");});
test("ndring -> ndring", function() {deepEqual( Stem("ndring"), "ndring");});
test("nds -> nds", function() {deepEqual( Stem("nds"), "nds");});
test("ne -> ne", function() {deepEqual( Stem("ne"), "ne");});
test("nea -> nea", function() {deepEqual( Stem("nea"), "nea");});
test("neanels -> neanel", function() {deepEqual( Stem("neanels"), "neanel");});
test("neapolis -> neapolis", function() {deepEqual( Stem("neapolis"), "neapolis");});
test("nearj -> nearj", function() {deepEqual( Stem("nearj"), "nearj");});
test("nearja -> nearja", function() {deepEqual( Stem("nearja"), "nearja");});
test("nearjas -> nearja", function() {deepEqual( Stem("nearjas"), "nearja");});
test("neas -> neas", function() {deepEqual( Stem("neas"), "neas");});
test("nebaj -> nebaj", function() {deepEqual( Stem("nebaj"), "nebaj");});
test("nebajot -> nebajot", function() {deepEqual( Stem("nebajot"), "nebajot");});
test("nebajots -> nebajot", function() {deepEqual( Stem("nebajots"), "nebajot");});
test("neballat -> neballat", function() {deepEqual( Stem("neballat"), "neballat");});
test("nebats -> nebat", function() {deepEqual( Stem("nebats"), "nebat");});
test("nebdryde -> nebdryd", function() {deepEqual( Stem("nebdryde"), "nebdryd");});
test("nebo -> nebo", function() {deepEqual( Stem("nebo"), "nebo");});
test("nebobjerget -> nebobjerg", function() {deepEqual( Stem("nebobjerget"), "nebobjerg");});
test("nebos -> nebo", function() {deepEqual( Stem("nebos"), "nebo");});
test("nebudkadnezar -> nebudkadnezar", function() {deepEqual( Stem("nebudkadnezar"), "nebudkadnezar");});
test("nebudkadrezar -> nebudkadrezar", function() {deepEqual( Stem("nebudkadrezar"), "nebudkadrezar");});
test("nebudkanezar -> nebudkanezar", function() {deepEqual( Stem("nebudkanezar"), "nebudkanezar");});
test("nebukadnezar -> nebukadnezar", function() {deepEqual( Stem("nebukadnezar"), "nebukadnezar");});
test("nebukadnezars -> nebukadnezar", function() {deepEqual( Stem("nebukadnezars"), "nebukadnezar");});
test("nebukadnezer -> nebukadnez", function() {deepEqual( Stem("nebukadnezer"), "nebukadnez");});
test("nebukadrezar -> nebukadrezar", function() {deepEqual( Stem("nebukadrezar"), "nebukadrezar");});
test("nebukadrezars -> nebukadrezar", function() {deepEqual( Stem("nebukadrezars"), "nebukadrezar");});
test("nebusjazban -> nebusjazban", function() {deepEqual( Stem("nebusjazban"), "nebusjazban");});
test("nebuzaradan -> nebuzaradan", function() {deepEqual( Stem("nebuzaradan"), "nebuzaradan");});
test("ned -> ned", function() {deepEqual( Stem("ned"), "ned");});
test("nedabja -> nedabja", function() {deepEqual( Stem("nedabja"), "nedabja");});
test("nedad -> nedad", function() {deepEqual( Stem("nedad"), "nedad");});
test("nedbrudt -> nedbrud", function() {deepEqual( Stem("nedbrudt"), "nedbrud");});
test("nedbrudte -> nedbrud", function() {deepEqual( Stem("nedbrudte"), "nedbrud");});
test("nedbryd -> nedbryd", function() {deepEqual( Stem("nedbryd"), "nedbryd");});
test("nedbryde -> nedbryd", function() {deepEqual( Stem("nedbryde"), "nedbryd");});
test("nedbrydelse -> nedbryd", function() {deepEqual( Stem("nedbrydelse"), "nedbryd");});
test("nedbryder -> nedbryd", function() {deepEqual( Stem("nedbryder"), "nedbryd");});
test("nedbrydes -> nedbryd", function() {deepEqual( Stem("nedbrydes"), "nedbryd");});
test("nedbrændt -> nedbrænd", function() {deepEqual( Stem("nedbrændt"), "nedbrænd");});
test("nedbrød -> nedbrød", function() {deepEqual( Stem("nedbrød"), "nedbrød");});
test("nedbrødes -> nedbrød", function() {deepEqual( Stem("nedbrødes"), "nedbrød");});
test("nedbøjede -> nedbøjed", function() {deepEqual( Stem("nedbøjede"), "nedbøjed");});
test("nedbøjer -> nedbøj", function() {deepEqual( Stem("nedbøjer"), "nedbøj");});
test("nedbøjet -> nedbøj", function() {deepEqual( Stem("nedbøjet"), "nedbøj");});
test("nedbør -> nedbør", function() {deepEqual( Stem("nedbør"), "nedbør");});
test("nede -> ned", function() {deepEqual( Stem("nede"), "ned");});
test("nedefter -> nedeft", function() {deepEqual( Stem("nedefter"), "nedeft");});
test("neden -> ned", function() {deepEqual( Stem("neden"), "ned");});
test("nedenfor -> nedenfor", function() {deepEqual( Stem("nedenfor"), "nedenfor");});
test("nedenfra -> nedenfra", function() {deepEqual( Stem("nedenfra"), "nedenfra");});
test("nedentil -> nedentil", function() {deepEqual( Stem("nedentil"), "nedentil");});
test("nederlag -> nederlag", function() {deepEqual( Stem("nederlag"), "nederlag");});
test("nederlaget -> nederlag", function() {deepEqual( Stem("nederlaget"), "nederlag");});
test("nederst -> nederst", function() {deepEqual( Stem("nederst"), "nederst");});
test("nederste -> nederst", function() {deepEqual( Stem("nederste"), "nederst");});
test("nedeste -> nedest", function() {deepEqual( Stem("nedeste"), "nedest");});
test("nedfaldne -> nedfaldn", function() {deepEqual( Stem("nedfaldne"), "nedfaldn");});
test("nedfor -> nedfor", function() {deepEqual( Stem("nedfor"), "nedfor");});
test("nedgang -> nedgang", function() {deepEqual( Stem("nedgang"), "nedgang");});
test("nedgangen -> nedgang", function() {deepEqual( Stem("nedgangen"), "nedgang");});
test("nedgangs -> nedgang", function() {deepEqual( Stem("nedgangs"), "nedgang");});
test("nedgravet -> nedgrav", function() {deepEqual( Stem("nedgravet"), "nedgrav");});
test("nedhugge -> nedhug", function() {deepEqual( Stem("nedhugge"), "nedhug");});
test("nedhuggede -> nedhugged", function() {deepEqual( Stem("nedhuggede"), "nedhugged");});
test("nedhugger -> nedhug", function() {deepEqual( Stem("nedhugger"), "nedhug");});
test("nedhængende -> nedhæng", function() {deepEqual( Stem("nedhængende"), "nedhæng");});
test("nedkalde -> nedkald", function() {deepEqual( Stem("nedkalde"), "nedkald");});
test("nedkalder -> nedkald", function() {deepEqual( Stem("nedkalder"), "nedkald");});
test("nedkaster -> nedkast", function() {deepEqual( Stem("nedkaster"), "nedkast");});
test("nedkom -> nedkom", function() {deepEqual( Stem("nedkom"), "nedkom");});
test("nedkommer -> nedkom", function() {deepEqual( Stem("nedkommer"), "nedkom");});
test("nedkomst -> nedkomst", function() {deepEqual( Stem("nedkomst"), "nedkomst");});
test("nedladelse -> nedlad", function() {deepEqual( Stem("nedladelse"), "nedlad");});
test("nedlagt -> nedlag", function() {deepEqual( Stem("nedlagt"), "nedlag");});
test("nedlbrydes -> nedlbryd", function() {deepEqual( Stem("nedlbrydes"), "nedlbryd");});
test("nedlod -> nedlod", function() {deepEqual( Stem("nedlod"), "nedlod");});
test("nedlægge -> nedlæg", function() {deepEqual( Stem("nedlægge"), "nedlæg");});
test("nedlægger -> nedlæg", function() {deepEqual( Stem("nedlægger"), "nedlæg");});
test("nedre -> nedr", function() {deepEqual( Stem("nedre"), "nedr");});
test("nedredammens -> nedredam", function() {deepEqual( Stem("nedredammens"), "nedredam");});
test("nedrev -> nedrev", function() {deepEqual( Stem("nedrev"), "nedrev");});
test("nedrevet -> nedrev", function() {deepEqual( Stem("nedrevet"), "nedrev");});
test("nedrevne -> nedrevn", function() {deepEqual( Stem("nedrevne"), "nedrevn");});
test("nedrig -> nedr", function() {deepEqual( Stem("nedrig"), "nedr");});
test("nedrive -> nedriv", function() {deepEqual( Stem("nedrive"), "nedriv");});
test("nedrives -> nedriv", function() {deepEqual( Stem("nedrives"), "nedriv");});
test("nedsat -> nedsat", function() {deepEqual( Stem("nedsat"), "nedsat");});
test("nedsend -> nedsend", function() {deepEqual( Stem("nedsend"), "nedsend");});
test("nedsender -> nedsend", function() {deepEqual( Stem("nedsender"), "nedsend");});
test("nedskrev -> nedskrev", function() {deepEqual( Stem("nedskrev"), "nedskrev");});
test("nedskrevet -> nedskrev", function() {deepEqual( Stem("nedskrevet"), "nedskrev");});
test("nedskriv -> nedskriv", function() {deepEqual( Stem("nedskriv"), "nedskriv");});
test("nedskrive -> nedskriv", function() {deepEqual( Stem("nedskrive"), "nedskriv");});
test("nedslagne -> nedslagn", function() {deepEqual( Stem("nedslagne"), "nedslagn");});
test("nedslagte -> nedslag", function() {deepEqual( Stem("nedslagte"), "nedslag");});
test("nedsluge -> nedslug", function() {deepEqual( Stem("nedsluge"), "nedslug");});
test("nedslåede -> nedslåed", function() {deepEqual( Stem("nedslåede"), "nedslåed");});
test("nedslået -> nedslå", function() {deepEqual( Stem("nedslået"), "nedslå");});
test("nedstamme -> nedstam", function() {deepEqual( Stem("nedstamme"), "nedstam");});
test("nedstammede -> nedstammed", function() {deepEqual( Stem("nedstammede"), "nedstammed");});
test("nedstammende -> nedstam", function() {deepEqual( Stem("nedstammende"), "nedstam");});
test("nedstammer -> nedstam", function() {deepEqual( Stem("nedstammer"), "nedstam");});
test("nedstamning -> nedstamning", function() {deepEqual( Stem("nedstamning"), "nedstamning");});
test("nedsteg -> nedsteg", function() {deepEqual( Stem("nedsteg"), "nedsteg");});
test("nedstegen -> nedsteg", function() {deepEqual( Stem("nedstegen"), "nedsteg");});
test("nedstyrt -> nedstyrt", function() {deepEqual( Stem("nedstyrt"), "nedstyrt");});
test("nedstyrte -> nedstyrt", function() {deepEqual( Stem("nedstyrte"), "nedstyrt");});
test("nedstyrtede -> nedstyrted", function() {deepEqual( Stem("nedstyrtede"), "nedstyrted");});
test("nedstyrter -> nedstyrt", function() {deepEqual( Stem("nedstyrter"), "nedstyrt");});
test("nedstyrtes -> nedstyrt", function() {deepEqual( Stem("nedstyrtes"), "nedstyrt");});
test("nedstyrtet -> nedstyrt", function() {deepEqual( Stem("nedstyrtet"), "nedstyrt");});
test("nedstøde -> nedstød", function() {deepEqual( Stem("nedstøde"), "nedstød");});
test("nedstøder -> nedstød", function() {deepEqual( Stem("nedstøder"), "nedstød");});
test("nedstødes -> nedstød", function() {deepEqual( Stem("nedstødes"), "nedstød");});
test("nedstødt -> nedstød", function() {deepEqual( Stem("nedstødt"), "nedstød");});
test("nedsvælg -> nedsvælg", function() {deepEqual( Stem("nedsvælg"), "nedsvælg");});
test("nedsvælgede -> nedsvælged", function() {deepEqual( Stem("nedsvælgede"), "nedsvælged");});
test("nedsvælget -> nedsvælg", function() {deepEqual( Stem("nedsvælget"), "nedsvælg");});
test("nedsænke -> nedsænk", function() {deepEqual( Stem("nedsænke"), "nedsænk");});
test("nedsæt -> nedsæt", function() {deepEqual( Stem("nedsæt"), "nedsæt");});
test("nedsættende -> nedsæt", function() {deepEqual( Stem("nedsættende"), "nedsæt");});
test("nedtagne -> nedtagn", function() {deepEqual( Stem("nedtagne"), "nedtagn");});
test("nedtrampe -> nedtramp", function() {deepEqual( Stem("nedtrampe"), "nedtramp");});
test("nedtrampede -> nedtramped", function() {deepEqual( Stem("nedtrampede"), "nedtramped");});
test("nedtramper -> nedtramp", function() {deepEqual( Stem("nedtramper"), "nedtramp");});
test("nedtrampes -> nedtramp", function() {deepEqual( Stem("nedtrampes"), "nedtramp");});
test("nedtrampet -> nedtramp", function() {deepEqual( Stem("nedtrampet"), "nedtramp");});
test("nedtrykkes -> nedtryk", function() {deepEqual( Stem("nedtrykkes"), "nedtryk");});
test("nedtrykt -> nedtryk", function() {deepEqual( Stem("nedtrykt"), "nedtryk");});
test("nedtrådt -> nedtråd", function() {deepEqual( Stem("nedtrådt"), "nedtråd");});
test("nedtrådte -> nedtråd", function() {deepEqual( Stem("nedtrådte"), "nedtråd");});
test("nedtræde -> nedtræd", function() {deepEqual( Stem("nedtræde"), "nedtræd");});
test("nedtrædes -> nedtræd", function() {deepEqual( Stem("nedtrædes"), "nedtræd");});
test("nedvejen -> nedvej", function() {deepEqual( Stem("nedvejen"), "nedvej");});
test("nedværdiges -> nedværd", function() {deepEqual( Stem("nedværdiges"), "nedværd");});
test("nefeg -> nefeg", function() {deepEqual( Stem("nefeg"), "nefeg");});
test("nefofa -> nefofa", function() {deepEqual( Stem("nefofa"), "nefofa");});
test("neftoas -> neftoa", function() {deepEqual( Stem("neftoas"), "neftoa");});
test("nefusifernes -> nefusif", function() {deepEqual( Stem("nefusifernes"), "nefusif");});
test("nefusiternes -> nefusit", function() {deepEqual( Stem("nefusiternes"), "nefusit");});
test("neg -> neg", function() {deepEqual( Stem("neg"), "neg");});
test("negene -> neg", function() {deepEqual( Stem("negene"), "neg");});
test("neger -> neg", function() {deepEqual( Stem("neger"), "neg");});
test("neget -> neg", function() {deepEqual( Stem("neget"), "neg");});
test("negle -> negl", function() {deepEqual( Stem("negle"), "negl");});
test("nego -> nego", function() {deepEqual( Stem("nego"), "nego");});
test("negos -> nego", function() {deepEqual( Stem("negos"), "nego");});
test("nehelamiten -> nehelamit", function() {deepEqual( Stem("nehelamiten"), "nehelamit");});
test("nehemias -> nehemia", function() {deepEqual( Stem("nehemias"), "nehemia");});
test("nehemja -> nehemja", function() {deepEqual( Stem("nehemja"), "nehemja");});
test("nehum -> nehum", function() {deepEqual( Stem("nehum"), "nehum");});
test("nehusjta -> nehusjta", function() {deepEqual( Stem("nehusjta"), "nehusjta");});
test("nehusjtan -> nehusjtan", function() {deepEqual( Stem("nehusjtan"), "nehusjtan");});
test("nej -> nej", function() {deepEqual( Stem("nej"), "nej");});
test("nekeb -> nekeb", function() {deepEqual( Stem("nekeb"), "nekeb");});
test("neko -> neko", function() {deepEqual( Stem("neko"), "neko");});
test("nekodas -> nekoda", function() {deepEqual( Stem("nekodas"), "nekoda");});
test("nekos -> neko", function() {deepEqual( Stem("nekos"), "neko");});
test("neldtes -> neld", function() {deepEqual( Stem("neldtes"), "neld");});
test("nemlig -> nem", function() {deepEqual( Stem("nemlig"), "nem");});
test("nemme -> nem", function() {deepEqual( Stem("nemme"), "nem");});
test("nemmer -> nem", function() {deepEqual( Stem("nemmer"), "nem");});
test("nemuel -> nemuel", function() {deepEqual( Stem("nemuel"), "nemuel");});
test("nemueliternes -> nemuelit", function() {deepEqual( Stem("nemueliternes"), "nemuelit");});
test("neppe -> nep", function() {deepEqual( Stem("neppe"), "nep");});
test("ner -> ner", function() {deepEqual( Stem("ner"), "ner");});
test("nereus -> nereus", function() {deepEqual( Stem("nereus"), "nereus");});
test("nergal -> nergal", function() {deepEqual( Stem("nergal"), "nergal");});
test("nerija -> nerija", function() {deepEqual( Stem("nerija"), "nerija");});
test("nerijas -> nerija", function() {deepEqual( Stem("nerijas"), "nerija");});
test("neris -> neris", function() {deepEqual( Stem("neris"), "neris");});
test("ners -> ner", function() {deepEqual( Stem("ners"), "ner");});
test("net -> net", function() {deepEqual( Stem("net"), "net");});
test("netaim -> netaim", function() {deepEqual( Stem("netaim"), "netaim");});
test("netan -> netan", function() {deepEqual( Stem("netan"), "netan");});
test("netanel -> netanel", function() {deepEqual( Stem("netanel"), "netanel");});
test("netanja -> netanja", function() {deepEqual( Stem("netanja"), "netanja");});
test("netanjas -> netanja", function() {deepEqual( Stem("netanjas"), "netanja");});
test("netofa -> netofa", function() {deepEqual( Stem("netofa"), "netofa");});
test("netofatifernes -> netofatif", function() {deepEqual( Stem("netofatifernes"), "netofatif");});
test("netofatiten -> netofatit", function() {deepEqual( Stem("netofatiten"), "netofatit");});
test("netofatiterne -> netofatit", function() {deepEqual( Stem("netofatiterne"), "netofatit");});
test("netofatiternes -> netofatit", function() {deepEqual( Stem("netofatiternes"), "netofatit");});
test("netop -> netop", function() {deepEqual( Stem("netop"), "netop");});
test("nettet -> net", function() {deepEqual( Stem("nettet"), "net");});
test("nettop -> nettop", function() {deepEqual( Stem("nettop"), "nettop");});
test("nezias -> nezia", function() {deepEqual( Stem("nezias"), "nezia");});
test("nezib -> nezib", function() {deepEqual( Stem("nezib"), "nezib");});
test("ngstelse -> ngstels", function() {deepEqual( Stem("ngstelse"), "ngstels");});
test("ni -> ni", function() {deepEqual( Stem("ni"), "ni");});
test("nibhaz -> nibhaz", function() {deepEqual( Stem("nibhaz"), "nibhaz");});
test("nibsjan -> nibsjan", function() {deepEqual( Stem("nibsjan"), "nibsjan");});
test("nid -> nid", function() {deepEqual( Stem("nid"), "nid");});
test("nidding -> nidding", function() {deepEqual( Stem("nidding"), "nidding");});
test("niddingen -> nidding", function() {deepEqual( Stem("niddingen"), "nidding");});
test("niddinger -> nidding", function() {deepEqual( Stem("niddinger"), "nidding");});
test("niddingers -> nidding", function() {deepEqual( Stem("niddingers"), "nidding");});
test("niddingeråd -> niddingeråd", function() {deepEqual( Stem("niddingeråd"), "niddingeråd");});
test("niddingevidne -> niddingevidn", function() {deepEqual( Stem("niddingevidne"), "niddingevidn");});
test("niddings -> nidding", function() {deepEqual( Stem("niddings"), "nidding");});
test("niddingsdåd -> niddingsdåd", function() {deepEqual( Stem("niddingsdåd"), "niddingsdåd");});
test("niddingsværk -> niddingsværk", function() {deepEqual( Stem("niddingsværk"), "niddingsværk");});
test("nidkær -> nidkær", function() {deepEqual( Stem("nidkær"), "nidkær");});
test("nidkære -> nidkær", function() {deepEqual( Stem("nidkære"), "nidkær");});
test("nidkærhed -> nidkær", function() {deepEqual( Stem("nidkærhed"), "nidkær");});
test("nidkærheden -> nidkær", function() {deepEqual( Stem("nidkærheden"), "nidkær");});
test("nidkærheds -> nidkær", function() {deepEqual( Stem("nidkærheds"), "nidkær");});
test("nidkærhedsbilledet -> nidkærhedsbilled", function() {deepEqual( Stem("nidkærhedsbilledet"), "nidkærhedsbilled");});
test("nidkært -> nidkært", function() {deepEqual( Stem("nidkært"), "nidkært");});
test("nidvise -> nidvis", function() {deepEqual( Stem("nidvise"), "nidvis");});
test("nidvisens -> nidvis", function() {deepEqual( Stem("nidvisens"), "nidvis");});
test("niende -> niend", function() {deepEqual( Stem("niende"), "niend");});
test("niene -> nien", function() {deepEqual( Stem("niene"), "nien");});
test("niger -> nig", function() {deepEqual( Stem("niger"), "nig");});
test("nikaels -> nikael", function() {deepEqual( Stem("nikaels"), "nikael");});
test("nikaiior -> nikaiior", function() {deepEqual( Stem("nikaiior"), "nikaiior");});
test("nikker -> nik", function() {deepEqual( Stem("nikker"), "nik");});
test("nikodemus -> nikodemus", function() {deepEqual( Stem("nikodemus"), "nikodemus");});
test("nikolaiternes -> nikolait", function() {deepEqual( Stem("nikolaiternes"), "nikolait");});
test("nikolaus -> nikolaus", function() {deepEqual( Stem("nikolaus"), "nikolaus");});
test("nikopolis -> nikopolis", function() {deepEqual( Stem("nikopolis"), "nikopolis");});
test("nilbredden -> nilbred", function() {deepEqual( Stem("nilbredden"), "nilbred");});
test("nilen -> nil", function() {deepEqual( Stem("nilen"), "nil");});
test("nilens -> nil", function() {deepEqual( Stem("nilens"), "nil");});
test("nilgræs -> nilgræs", function() {deepEqual( Stem("nilgræs"), "nilgræs");});
test("nilhesten -> nilhest", function() {deepEqual( Stem("nilhesten"), "nilhest");});
test("nilstrømme -> nilstrøm", function() {deepEqual( Stem("nilstrømme"), "nilstrøm");});
test("nilvandet -> nilvand", function() {deepEqual( Stem("nilvandet"), "nilvand");});
test("nimra -> nimra", function() {deepEqual( Stem("nimra"), "nimra");});
test("nimrims -> nimrim", function() {deepEqual( Stem("nimrims"), "nimrim");});
test("nimrod -> nimrod", function() {deepEqual( Stem("nimrod"), "nimrod");});
test("nimrods -> nimrod", function() {deepEqual( Stem("nimrods"), "nimrod");});
test("nimsjis -> nimsjis", function() {deepEqual( Stem("nimsjis"), "nimsjis");});
test("nineve -> ninev", function() {deepEqual( Stem("nineve"), "ninev");});
test("nineves -> ninev", function() {deepEqual( Stem("nineves"), "ninev");});
test("ninive -> niniv", function() {deepEqual( Stem("ninive"), "niniv");});
test("niniviterne -> ninivit", function() {deepEqual( Stem("niniviterne"), "ninivit");});
test("nisan -> nisan", function() {deepEqual( Stem("nisan"), "nisan");});
test("nisroks -> nisrok", function() {deepEqual( Stem("nisroks"), "nisrok");});
test("nitten -> nit", function() {deepEqual( Stem("nitten"), "nit");});
test("nittende -> nit", function() {deepEqual( Stem("nittende"), "nit");});
test("no -> no", function() {deepEqual( Stem("no"), "no");});
test("noa -> noa", function() {deepEqual( Stem("noa"), "noa");});
test("noadja -> noadja", function() {deepEqual( Stem("noadja"), "noadja");});
test("noas -> noas", function() {deepEqual( Stem("noas"), "noas");});
test("nob -> nob", function() {deepEqual( Stem("nob"), "nob");});
test("noba -> noba", function() {deepEqual( Stem("noba"), "noba");});
test("nod -> nod", function() {deepEqual( Stem("nod"), "nod");});
test("nodab -> nodab", function() {deepEqual( Stem("nodab"), "nodab");});
test("nof -> nof", function() {deepEqual( Stem("nof"), "nof");});
test("nofa -> nofa", function() {deepEqual( Stem("nofa"), "nofa");});
test("noffolis -> noffolis", function() {deepEqual( Stem("noffolis"), "noffolis");});
test("nofs -> nof", function() {deepEqual( Stem("nofs"), "nof");});
test("noga -> noga", function() {deepEqual( Stem("noga"), "noga");});
test("nogen -> nog", function() {deepEqual( Stem("nogen"), "nog");});
test("nogens -> nog", function() {deepEqual( Stem("nogens"), "nog");});
test("nogensteds -> nogensted", function() {deepEqual( Stem("nogensteds"), "nogensted");});
test("noget -> nog", function() {deepEqual( Stem("noget"), "nog");});
test("nogetsteds -> nogetsted", function() {deepEqual( Stem("nogetsteds"), "nogetsted");});
test("nogle -> nogl", function() {deepEqual( Stem("nogle"), "nogl");});
test("noha -> noha", function() {deepEqual( Stem("noha"), "noha");});
test("nok -> nok", function() {deepEqual( Stem("nok"), "nok");});
test("non -> non", function() {deepEqual( Stem("non"), "non");});
test("nord -> nord", function() {deepEqual( Stem("nord"), "nord");});
test("norden -> nord", function() {deepEqual( Stem("norden"), "nord");});
test("nordende -> nord", function() {deepEqual( Stem("nordende"), "nord");});
test("nordenfra -> nordenfra", function() {deepEqual( Stem("nordenfra"), "nordenfra");});
test("nordens -> nord", function() {deepEqual( Stem("nordens"), "nord");});
test("nordenvind -> nordenvind", function() {deepEqual( Stem("nordenvind"), "nordenvind");});
test("nordfolkets -> nordfolk", function() {deepEqual( Stem("nordfolkets"), "nordfolk");});
test("nordfra -> nordfra", function() {deepEqual( Stem("nordfra"), "nordfra");});
test("nordgrænse -> nordgræns", function() {deepEqual( Stem("nordgrænse"), "nordgræns");});
test("nordgrænsen -> nordgræns", function() {deepEqual( Stem("nordgrænsen"), "nordgræns");});
test("nordlandet -> nordland", function() {deepEqual( Stem("nordlandet"), "nordland");});
test("nordlig -> nord", function() {deepEqual( Stem("nordlig"), "nord");});
test("nordport -> nordport", function() {deepEqual( Stem("nordport"), "nordport");});
test("nordporten -> nordport", function() {deepEqual( Stem("nordporten"), "nordport");});
test("nordportens -> nordport", function() {deepEqual( Stem("nordportens"), "nordport");});
test("nordpå -> nordpå", function() {deepEqual( Stem("nordpå"), "nordpå");});
test("nordre -> nordr", function() {deepEqual( Stem("nordre"), "nordr");});
test("nordside -> nordsid", function() {deepEqual( Stem("nordside"), "nordsid");});
test("nordsiden -> nordsid", function() {deepEqual( Stem("nordsiden"), "nordsid");});
test("nordvest -> nordvest", function() {deepEqual( Stem("nordvest"), "nordvest");});
test("nos -> nos", function() {deepEqual( Stem("nos"), "nos");});
test("nske -> nske", function() {deepEqual( Stem("nske"), "nske");});
test("nsker -> nsker", function() {deepEqual( Stem("nsker"), "nsker");});
test("nu -> nu", function() {deepEqual( Stem("nu"), "nu");});
test("nun -> nun", function() {deepEqual( Stem("nun"), "nun");});
test("nuns -> nun", function() {deepEqual( Stem("nuns"), "nun");});
test("nusji -> nusji", function() {deepEqual( Stem("nusji"), "nusji");});
test("nuværende -> nuvær", function() {deepEqual( Stem("nuværende"), "nuvær");});
test("ny -> ny", function() {deepEqual( Stem("ny"), "ny");});
test("nybyggede -> nybygged", function() {deepEqual( Stem("nybyggede"), "nybygged");});
test("nyd -> nyd", function() {deepEqual( Stem("nyd"), "nyd");});
test("nyde -> nyd", function() {deepEqual( Stem("nyde"), "nyd");});
test("nydelse -> nyd", function() {deepEqual( Stem("nydelse"), "nyd");});
test("nydelser -> nyd", function() {deepEqual( Stem("nydelser"), "nyd");});
test("nyder -> nyd", function() {deepEqual( Stem("nyder"), "nyd");});
test("nydes -> nyd", function() {deepEqual( Stem("nydes"), "nyd");});
test("nydt -> nydt", function() {deepEqual( Stem("nydt"), "nydt");});
test("nye -> nye", function() {deepEqual( Stem("nye"), "nye");});
test("nyfyldte -> nyfyld", function() {deepEqual( Stem("nyfyldte"), "nyfyld");});
test("nyfødte -> nyfød", function() {deepEqual( Stem("nyfødte"), "nyfød");});
test("nyhøstet -> nyhøst", function() {deepEqual( Stem("nyhøstet"), "nyhøst");});
test("nyjord -> nyjord", function() {deepEqual( Stem("nyjord"), "nyjord");});
test("nyklippet -> nyklip", function() {deepEqual( Stem("nyklippet"), "nyklip");});
test("nylig -> nyl", function() {deepEqual( Stem("nylig"), "nyl");});
test("nymfas -> nymfa", function() {deepEqual( Stem("nymfas"), "nymfa");});
test("nymåne -> nymån", function() {deepEqual( Stem("nymåne"), "nymån");});
test("nymånebrændofferet -> nymånebrændof", function() {deepEqual( Stem("nymånebrændofferet"), "nymånebrændof");});
test("nymånedag -> nymånedag", function() {deepEqual( Stem("nymånedag"), "nymånedag");});
test("nymånedage -> nymånedag", function() {deepEqual( Stem("nymånedage"), "nymånedag");});
test("nymånedagen -> nymånedag", function() {deepEqual( Stem("nymånedagen"), "nymånedag");});
test("nymånedagene -> nymånedag", function() {deepEqual( Stem("nymånedagene"), "nymånedag");});
test("nymånefest -> nymånefest", function() {deepEqual( Stem("nymånefest"), "nymånefest");});
test("nymånefester -> nymånefest", function() {deepEqual( Stem("nymånefester"), "nymånefest");});
test("nymånefesterne -> nymånefest", function() {deepEqual( Stem("nymånefesterne"), "nymånefest");});
test("nymånen -> nymån", function() {deepEqual( Stem("nymånen"), "nymån");});
test("nymåner -> nymån", function() {deepEqual( Stem("nymåner"), "nymån");});
test("nymånerne -> nymån", function() {deepEqual( Stem("nymånerne"), "nymån");});
test("nyplantet -> nyplant", function() {deepEqual( Stem("nyplantet"), "nyplant");});
test("nyrer -> nyr", function() {deepEqual( Stem("nyrer"), "nyr");});
test("nyrerne -> nyr", function() {deepEqual( Stem("nyrerne"), "nyr");});
test("nys -> nys", function() {deepEqual( Stem("nys"), "nys");});
test("nysen -> nys", function() {deepEqual( Stem("nysen"), "nys");});
test("nyste -> nyst", function() {deepEqual( Stem("nyste"), "nyst");});
test("nyt -> nyt", function() {deepEqual( Stem("nyt"), "nyt");});
test("nytte -> nyt", function() {deepEqual( Stem("nytte"), "nyt");});
test("nyttig -> nyt", function() {deepEqual( Stem("nyttig"), "nyt");});
test("nyttigt -> nyt", function() {deepEqual( Stem("nyttigt"), "nyt");});
test("nytårstide -> nytårstid", function() {deepEqual( Stem("nytårstide"), "nytårstid");});
test("nå -> nå", function() {deepEqual( Stem("nå"), "nå");});
test("nåde -> nåd", function() {deepEqual( Stem("nåde"), "nåd");});
test("nådegave -> nådegav", function() {deepEqual( Stem("nådegave"), "nådegav");});
test("nådegaven -> nådegav", function() {deepEqual( Stem("nådegaven"), "nådegav");});
test("nådegaver -> nådegav", function() {deepEqual( Stem("nådegaver"), "nådegav");});
test("nådegaverne -> nådegav", function() {deepEqual( Stem("nådegaverne"), "nådegav");});
test("nådeløfter -> nådeløft", function() {deepEqual( Stem("nådeløfter"), "nådeløft");});
test("nådeløs -> nådeløs", function() {deepEqual( Stem("nådeløs"), "nådeløs");});
test("nåden -> nåd", function() {deepEqual( Stem("nåden"), "nåd");});
test("nådens -> nåd", function() {deepEqual( Stem("nådens"), "nåd");});
test("nåderig -> nåder", function() {deepEqual( Stem("nåderig"), "nåder");});
test("nådes -> nåd", function() {deepEqual( Stem("nådes"), "nåd");});
test("nådestolen -> nådestol", function() {deepEqual( Stem("nådestolen"), "nådestol");});
test("nådeår -> nådeår", function() {deepEqual( Stem("nådeår"), "nådeår");});
test("nådig -> nåd", function() {deepEqual( Stem("nådig"), "nåd");});
test("nådige -> nåd", function() {deepEqual( Stem("nådige"), "nåd");});
test("nåed -> nåed", function() {deepEqual( Stem("nåed"), "nåed");});
test("nåede -> nåed", function() {deepEqual( Stem("nåede"), "nåed");});
test("nået -> nået", function() {deepEqual( Stem("nået"), "nået");});
test("nåleøje -> nåleøj", function() {deepEqual( Stem("nåleøje"), "nåleøj");});
test("nåman -> nåman", function() {deepEqual( Stem("nåman"), "nåman");});
test("når -> når", function() {deepEqual( Stem("når"), "når");});
test("næbbet -> næb", function() {deepEqual( Stem("næbbet"), "næb");});
test("nægt -> nægt", function() {deepEqual( Stem("nægt"), "nægt");});
test("nægte -> nægt", function() {deepEqual( Stem("nægte"), "nægt");});
test("nægted -> nægted", function() {deepEqual( Stem("nægted"), "nægted");});
test("nægtede -> nægted", function() {deepEqual( Stem("nægtede"), "nægted");});
test("nægter -> nægt", function() {deepEqual( Stem("nægter"), "nægt");});
test("nægtet -> nægt", function() {deepEqual( Stem("nægtet"), "nægt");});
test("nælde -> næld", function() {deepEqual( Stem("nælde"), "næld");});
test("nælder -> næld", function() {deepEqual( Stem("nælder"), "næld");});
test("nænsomt -> nænsomt", function() {deepEqual( Stem("nænsomt"), "nænsomt");});
test("næppe -> næp", function() {deepEqual( Stem("næppe"), "næp");});
test("nær -> nær", function() {deepEqual( Stem("nær"), "nær");});
test("nære -> nær", function() {deepEqual( Stem("nære"), "nær");});
test("nærede -> næred", function() {deepEqual( Stem("nærede"), "næred");});
test("nærende -> nær", function() {deepEqual( Stem("nærende"), "nær");});
test("nærer -> nær", function() {deepEqual( Stem("nærer"), "nær");});
test("næres -> nær", function() {deepEqual( Stem("næres"), "nær");});
test("nærhed -> nær", function() {deepEqual( Stem("nærhed"), "nær");});
test("nærheden -> nær", function() {deepEqual( Stem("nærheden"), "nær");});
test("næring -> næring", function() {deepEqual( Stem("næring"), "næring");});
test("næringsmidler -> næringsmidl", function() {deepEqual( Stem("næringsmidler"), "næringsmidl");});
test("nærme -> nærm", function() {deepEqual( Stem("nærme"), "nærm");});
test("nærmed -> nærmed", function() {deepEqual( Stem("nærmed"), "nærmed");});
test("nærmede -> nærmed", function() {deepEqual( Stem("nærmede"), "nærmed");});
test("nærmer -> nærm", function() {deepEqual( Stem("nærmer"), "nærm");});
test("nærmere -> nærm", function() {deepEqual( Stem("nærmere"), "nærm");});
test("nærmest -> nærmest", function() {deepEqual( Stem("nærmest"), "nærmest");});
test("nærmeste -> nærmest", function() {deepEqual( Stem("nærmeste"), "nærmest");});
test("nært -> nært", function() {deepEqual( Stem("nært"), "nært");});
test("nærværelse -> nærvær", function() {deepEqual( Stem("nærværelse"), "nærvær");});
test("nærværende -> nærvær", function() {deepEqual( Stem("nærværende"), "nærvær");});
test("næse -> næs", function() {deepEqual( Stem("næse"), "næs");});
test("næsebor -> næsebor", function() {deepEqual( Stem("næsebor"), "næsebor");});
test("næsegrus -> næsegrus", function() {deepEqual( Stem("næsegrus"), "næsegrus");});
test("næsen -> næs", function() {deepEqual( Stem("næsen"), "næs");});
test("næsering -> næsering", function() {deepEqual( Stem("næsering"), "næsering");});
test("næseringe -> næsering", function() {deepEqual( Stem("næseringe"), "næsering");});
test("næseringen -> næsering", function() {deepEqual( Stem("næseringen"), "næsering");});
test("næses -> næs", function() {deepEqual( Stem("næses"), "næs");});
test("næst -> næst", function() {deepEqual( Stem("næst"), "næst");});
test("næstbedste -> næstbedst", function() {deepEqual( Stem("næstbedste"), "næstbedst");});
test("næste -> næst", function() {deepEqual( Stem("næste"), "næst");});
test("næsten -> næst", function() {deepEqual( Stem("næsten"), "næst");});
test("næstens -> næst", function() {deepEqual( Stem("næstens"), "næst");});
test("næstes -> næst", function() {deepEqual( Stem("næstes"), "næst");});
test("næstførste -> næstførst", function() {deepEqual( Stem("næstførste"), "næstførst");});
test("næstældste -> næstældst", function() {deepEqual( Stem("næstældste"), "næstældst");});
test("næstøverste -> næstøverst", function() {deepEqual( Stem("næstøverste"), "næstøverst");});
test("nætter -> næt", function() {deepEqual( Stem("nætter"), "næt");});
test("nætterne -> næt", function() {deepEqual( Stem("nætterne"), "næt");});
test("næven -> næv", function() {deepEqual( Stem("næven"), "næv");});
test("næver -> næv", function() {deepEqual( Stem("næver"), "næv");});
test("næveslag -> næveslag", function() {deepEqual( Stem("næveslag"), "næveslag");});
test("nævne -> nævn", function() {deepEqual( Stem("nævne"), "nævn");});
test("nævned -> nævned", function() {deepEqual( Stem("nævned"), "nævned");});
test("nævnede -> nævned", function() {deepEqual( Stem("nævnede"), "nævned");});
test("nævnelse -> nævn", function() {deepEqual( Stem("nævnelse"), "nævn");});
test("nævner -> nævn", function() {deepEqual( Stem("nævner"), "nævn");});
test("nævnes -> nævn", function() {deepEqual( Stem("nævnes"), "nævn");});
test("nævnet -> nævn", function() {deepEqual( Stem("nævnet"), "nævn");});
test("nævnt -> nævnt", function() {deepEqual( Stem("nævnt"), "nævnt");});
test("nævnte -> nævnt", function() {deepEqual( Stem("nævnte"), "nævnt");});
test("næværelse -> nævær", function() {deepEqual( Stem("næværelse"), "nævær");});
test("nød -> nød", function() {deepEqual( Stem("nød"), "nød");});
test("nøddehaven -> nøddehav", function() {deepEqual( Stem("nøddehaven"), "nøddehav");});
test("nøden -> nød", function() {deepEqual( Stem("nøden"), "nød");});
test("nødens -> nød", function() {deepEqual( Stem("nødens"), "nød");});
test("nødes -> nød", function() {deepEqual( Stem("nødes"), "nød");});
test("nødig -> nød", function() {deepEqual( Stem("nødig"), "nød");});
test("nødlidende -> nødlid", function() {deepEqual( Stem("nødlidende"), "nødlid");});
test("nødmidler -> nødmidl", function() {deepEqual( Stem("nødmidler"), "nødmidl");});
test("nødråb -> nødråb", function() {deepEqual( Stem("nødråb"), "nødråb");});
test("nødråbet -> nødråb", function() {deepEqual( Stem("nødråbet"), "nødråb");});
test("nødstedt -> nødsted", function() {deepEqual( Stem("nødstedt"), "nødsted");});
test("nødstedte -> nødsted", function() {deepEqual( Stem("nødstedte"), "nødsted");});
test("nødt -> nødt", function() {deepEqual( Stem("nødt"), "nødt");});
test("nødte -> nødt", function() {deepEqual( Stem("nødte"), "nødt");});
test("nødtes -> nødt", function() {deepEqual( Stem("nødtes"), "nødt");});
test("nødtørftssteder -> nødtørftssted", function() {deepEqual( Stem("nødtørftssteder"), "nødtørftssted");});
test("nødtørst -> nødtørst", function() {deepEqual( Stem("nødtørst"), "nødtørst");});
test("nødvendige -> nødvend", function() {deepEqual( Stem("nødvendige"), "nødvend");});
test("nødvendighed -> nødvend", function() {deepEqual( Stem("nødvendighed"), "nødvend");});
test("nødvendigt -> nødvend", function() {deepEqual( Stem("nødvendigt"), "nødvend");});
test("nøgen -> nøg", function() {deepEqual( Stem("nøgen"), "nøg");});
test("nøgenhed -> nøgen", function() {deepEqual( Stem("nøgenhed"), "nøgen");});
test("nøgenheds -> nøgen", function() {deepEqual( Stem("nøgenheds"), "nøgen");});
test("nøgent -> nøgent", function() {deepEqual( Stem("nøgent"), "nøgent");});
test("nøgle -> nøgl", function() {deepEqual( Stem("nøgle"), "nøgl");});
test("nøglen -> nøgl", function() {deepEqual( Stem("nøglen"), "nøgl");});
test("nøgler -> nøgl", function() {deepEqual( Stem("nøgler"), "nøgl");});
test("nøgne -> nøgn", function() {deepEqual( Stem("nøgne"), "nøgn");});
test("nøjagtig -> nøjag", function() {deepEqual( Stem("nøjagtig"), "nøjag");});
test("nøjagtigt -> nøjag", function() {deepEqual( Stem("nøjagtigt"), "nøjag");});
test("nøje -> nøj", function() {deepEqual( Stem("nøje"), "nøj");});
test("nøjere -> nøj", function() {deepEqual( Stem("nøjere"), "nøj");});
test("nøjes -> nøj", function() {deepEqual( Stem("nøjes"), "nøj");});
test("nøjsomhed -> nøjsom", function() {deepEqual( Stem("nøjsomhed"), "nøjsom");});
test("nøl -> nøl", function() {deepEqual( Stem("nøl"), "nøl");});
test("nøle -> nøl", function() {deepEqual( Stem("nøle"), "nøl");});
test("nøler -> nøl", function() {deepEqual( Stem("nøler"), "nøl");});
test("o -> o", function() {deepEqual( Stem("o"), "o");});
test("obadias -> obadia", function() {deepEqual( Stem("obadias"), "obadia");});
test("obadja -> obadja", function() {deepEqual( Stem("obadja"), "obadja");});
test("obadjas -> obadja", function() {deepEqual( Stem("obadjas"), "obadja");});
test("obal -> obal", function() {deepEqual( Stem("obal"), "obal");});
test("obed -> obed", function() {deepEqual( Stem("obed"), "obed");});
test("obeds -> obed", function() {deepEqual( Stem("obeds"), "obed");});
test("obil -> obil", function() {deepEqual( Stem("obil"), "obil");});
test("obolibama -> obolibama", function() {deepEqual( Stem("obolibama"), "obolibama");});
test("obot -> obot", function() {deepEqual( Stem("obot"), "obot");});
test("od -> od", function() {deepEqual( Stem("od"), "od");});
test("oded -> oded", function() {deepEqual( Stem("oded"), "oded");});
test("odeds -> oded", function() {deepEqual( Stem("odeds"), "oded");});
test("oer -> oer", function() {deepEqual( Stem("oer"), "oer");});
test("oergaver -> oergav", function() {deepEqual( Stem("oergaver"), "oergav");});
test("oerhøjen -> oerhøj", function() {deepEqual( Stem("oerhøjen"), "oerhøj");});
test("ofel -> ofel", function() {deepEqual( Stem("ofel"), "ofel");});
test("ofels -> ofel", function() {deepEqual( Stem("ofels"), "ofel");});
test("ofer -> ofer", function() {deepEqual( Stem("ofer"), "ofer");});
test("offentlig -> offent", function() {deepEqual( Stem("offentlig"), "offent");});
test("offentligt -> offent", function() {deepEqual( Stem("offentligt"), "offent");});
test("offer -> off", function() {deepEqual( Stem("offer"), "off");});
test("offerbrænde -> offerbrænd", function() {deepEqual( Stem("offerbrænde"), "offerbrænd");});
test("offerdag -> offerdag", function() {deepEqual( Stem("offerdag"), "offerdag");});
test("offerdagen -> offerdag", function() {deepEqual( Stem("offerdagen"), "offerdag");});
test("offerdel -> offerdel", function() {deepEqual( Stem("offerdel"), "offerdel");});
test("offerduft -> offerduft", function() {deepEqual( Stem("offerduft"), "offerduft");});
test("offerdyr -> offerdyr", function() {deepEqual( Stem("offerdyr"), "offerdyr");});
test("offeret -> off", function() {deepEqual( Stem("offeret"), "off");});
test("offerfest -> offerfest", function() {deepEqual( Stem("offerfest"), "offerfest");});
test("offergave -> offergav", function() {deepEqual( Stem("offergave"), "offergav");});
test("offergaven -> offergav", function() {deepEqual( Stem("offergaven"), "offergav");});
test("offergaver -> offergav", function() {deepEqual( Stem("offergaver"), "offergav");});
test("offergaves -> offergav", function() {deepEqual( Stem("offergaves"), "offergav");});
test("offerhuse -> offerhus", function() {deepEqual( Stem("offerhuse"), "offerhus");});
test("offerhusene -> offerhus", function() {deepEqual( Stem("offerhusene"), "offerhus");});
test("offerhøj -> offerhøj", function() {deepEqual( Stem("offerhøj"), "offerhøj");});
test("offerhøje -> offerhøj", function() {deepEqual( Stem("offerhøje"), "offerhøj");});
test("offerhøjen -> offerhøj", function() {deepEqual( Stem("offerhøjen"), "offerhøj");});
test("offerhøjene -> offerhøj", function() {deepEqual( Stem("offerhøjene"), "offerhøj");});
test("offerhøjeneikke -> offerhøjeneik", function() {deepEqual( Stem("offerhøjeneikke"), "offerhøjeneik");});
test("offerild -> offerild", function() {deepEqual( Stem("offerild"), "offerild");});
test("offerkager -> offerkag", function() {deepEqual( Stem("offerkager"), "offerkag");});
test("offerkniven -> offerkniv", function() {deepEqual( Stem("offerkniven"), "offerkniv");});
test("offerkød -> offerkød", function() {deepEqual( Stem("offerkød"), "offerkød");});
test("offerkødet -> offerkød", function() {deepEqual( Stem("offerkødet"), "offerkød");});
test("offerrøg -> offerrøg", function() {deepEqual( Stem("offerrøg"), "offerrøg");});
test("offerskålen -> offerskål", function() {deepEqual( Stem("offerskålen"), "offerskål");});
test("offerskålene -> offerskål", function() {deepEqual( Stem("offerskålene"), "offerskål");});
test("offerslagtning -> offerslagtning", function() {deepEqual( Stem("offerslagtning"), "offerslagtning");});
test("offersted -> offersted", function() {deepEqual( Stem("offersted"), "offersted");});
test("offertjener -> offertjen", function() {deepEqual( Stem("offertjener"), "offertjen");});
test("offertjenestes -> offertjenest", function() {deepEqual( Stem("offertjenestes"), "offertjenest");});
test("offerydelse -> offeryd", function() {deepEqual( Stem("offerydelse"), "offeryd");});
test("offerydelsen -> offeryd", function() {deepEqual( Stem("offerydelsen"), "offeryd");});
test("offerydelsens -> offeryd", function() {deepEqual( Stem("offerydelsens"), "offeryd");});
test("offerydelser -> offeryd", function() {deepEqual( Stem("offerydelser"), "offeryd");});
test("offerydelserne -> offeryd", function() {deepEqual( Stem("offerydelserne"), "offeryd");});
test("offerydelsesguldet -> offerydelsesguld", function() {deepEqual( Stem("offerydelsesguldet"), "offerydelsesguld");});
test("offerydelseskøllen -> offerydelseskøl", function() {deepEqual( Stem("offerydelseskøllen"), "offerydelseskøl");});
test("offrguld -> offrguld", function() {deepEqual( Stem("offrguld"), "offrguld");});
test("ofir -> ofir", function() {deepEqual( Stem("ofir"), "ofir");});
test("ofirguld -> ofirguld", function() {deepEqual( Stem("ofirguld"), "ofirguld");});
test("ofirguldet -> ofirguld", function() {deepEqual( Stem("ofirguldet"), "ofirguld");});
test("ofirs -> ofir", function() {deepEqual( Stem("ofirs"), "ofir");});
test("ofni -> ofni", function() {deepEqual( Stem("ofni"), "ofni");});
test("ofra -> ofra", function() {deepEqual( Stem("ofra"), "ofra");});
test("ofre -> ofr", function() {deepEqual( Stem("ofre"), "ofr");});
test("ofred -> ofred", function() {deepEqual( Stem("ofred"), "ofred");});
test("ofrede -> ofred", function() {deepEqual( Stem("ofrede"), "ofred");});
test("ofredes -> ofred", function() {deepEqual( Stem("ofredes"), "ofred");});
test("ofrende -> ofr", function() {deepEqual( Stem("ofrende"), "ofr");});
test("ofrene -> ofr", function() {deepEqual( Stem("ofrene"), "ofr");});
test("ofrer -> ofr", function() {deepEqual( Stem("ofrer"), "ofr");});
test("ofres -> ofr", function() {deepEqual( Stem("ofres"), "ofr");});
test("ofret -> ofr", function() {deepEqual( Stem("ofret"), "ofr");});
test("ofrguldets -> ofrguld", function() {deepEqual( Stem("ofrguldets"), "ofrguld");});
test("ofringen -> ofring", function() {deepEqual( Stem("ofringen"), "ofring");});
test("ofte -> oft", function() {deepEqual( Stem("ofte"), "oft");});
test("oftere -> oft", function() {deepEqual( Stem("oftere"), "oft");});
test("og -> og", function() {deepEqual( Stem("og"), "og");});
test("ogbragte -> ogbrag", function() {deepEqual( Stem("ogbragte"), "ogbrag");});
test("ogbyen -> ogby", function() {deepEqual( Stem("ogbyen"), "ogby");});
test("oggiver -> oggiv", function() {deepEqual( Stem("oggiver"), "oggiv");});
test("oghan -> oghan", function() {deepEqual( Stem("oghan"), "oghan");});
test("oghans -> oghan", function() {deepEqual( Stem("oghans"), "oghan");});
test("oghøste -> oghøst", function() {deepEqual( Stem("oghøste"), "oghøst");});
test("ogjerusalem -> ogjerusalem", function() {deepEqual( Stem("ogjerusalem"), "ogjerusalem");});
test("ogknuste -> ogknust", function() {deepEqual( Stem("ogknuste"), "ogknust");});
test("ogs -> ogs", function() {deepEqual( Stem("ogs"), "ogs");});
test("ogsom -> ogsom", function() {deepEqual( Stem("ogsom"), "ogsom");});
test("også -> også", function() {deepEqual( Stem("også"), "også");});
test("oh -> oh", function() {deepEqual( Stem("oh"), "oh");});
test("ohad -> ohad", function() {deepEqual( Stem("ohad"), "ohad");});
test("ohel -> ohel", function() {deepEqual( Stem("ohel"), "ohel");});
test("ohola -> ohola", function() {deepEqual( Stem("ohola"), "ohola");});
test("oholiab -> oholiab", function() {deepEqual( Stem("oholiab"), "oholiab");});
test("oholiba -> oholiba", function() {deepEqual( Stem("oholiba"), "oholiba");});
test("oholibama -> oholibama", function() {deepEqual( Stem("oholibama"), "oholibama");});
test("oholibamas -> oholibama", function() {deepEqual( Stem("oholibamas"), "oholibama");});
test("okrans -> okran", function() {deepEqual( Stem("okrans"), "okran");});
test("okse -> oks", function() {deepEqual( Stem("okse"), "oks");});
test("okseansigt -> okseans", function() {deepEqual( Stem("okseansigt"), "okseans");});
test("oksedriverstav -> oksedriverstav", function() {deepEqual( Stem("oksedriverstav"), "oksedriverstav");});
test("oksegødning -> oksegødning", function() {deepEqual( Stem("oksegødning"), "oksegødning");});
test("oksen -> oks", function() {deepEqual( Stem("oksen"), "oks");});
test("okser -> oks", function() {deepEqual( Stem("okser"), "oks");});
test("okserne -> oks", function() {deepEqual( Stem("okserne"), "oks");});
test("oksernes -> oks", function() {deepEqual( Stem("oksernes"), "oks");});
test("okses -> oks", function() {deepEqual( Stem("okses"), "oks");});
test("oksespand -> oksespand", function() {deepEqual( Stem("oksespand"), "oksespand");});
test("oksespandet -> oksespand", function() {deepEqual( Stem("oksespandet"), "oksespand");});
test("okset -> oks", function() {deepEqual( Stem("okset"), "oks");});
test("olding -> olding", function() {deepEqual( Stem("olding"), "olding");});
test("oldinge -> olding", function() {deepEqual( Stem("oldinge"), "olding");});
test("oldingen -> olding", function() {deepEqual( Stem("oldingen"), "olding");});
test("oldingens -> olding", function() {deepEqual( Stem("oldingens"), "olding");});
test("olie -> oli", function() {deepEqual( Stem("olie"), "oli");});
test("oliebjerget -> oliebjerg", function() {deepEqual( Stem("oliebjerget"), "oliebjerg");});
test("olieblad -> olieblad", function() {deepEqual( Stem("olieblad"), "olieblad");});
test("oliebrødkage -> oliebrødkag", function() {deepEqual( Stem("oliebrødkage"), "oliebrødkag");});
test("olieflasken -> olieflask", function() {deepEqual( Stem("olieflasken"), "olieflask");});
test("olieforrådene -> olieforråd", function() {deepEqual( Stem("olieforrådene"), "olieforråd");});
test("oliegrene -> oliegr", function() {deepEqual( Stem("oliegrene"), "oliegr");});
test("oliehornet -> oliehorn", function() {deepEqual( Stem("oliehornet"), "oliehorn");});
test("oliekar -> oliekar", function() {deepEqual( Stem("oliekar"), "oliekar");});
test("oliekarret -> oliekar", function() {deepEqual( Stem("oliekarret"), "oliekar");});
test("oliekrukkerne -> oliekruk", function() {deepEqual( Stem("oliekrukkerne"), "oliekruk");});
test("oliekvist -> oliekvist", function() {deepEqual( Stem("oliekvist"), "oliekvist");});
test("oliekviste -> oliekvist", function() {deepEqual( Stem("oliekviste"), "oliekvist");});
test("olien -> oli", function() {deepEqual( Stem("olien"), "oli");});
test("olieplante -> olieplant", function() {deepEqual( Stem("olieplante"), "olieplant");});
test("olieplanten -> olieplant", function() {deepEqual( Stem("olieplanten"), "olieplant");});
test("olieplantens -> olieplant", function() {deepEqual( Stem("olieplantens"), "olieplant");});
test("oliestrømme -> oliestrøm", function() {deepEqual( Stem("oliestrømme"), "oliestrøm");});
test("olietræ -> olietræ", function() {deepEqual( Stem("olietræ"), "olietræ");});
test("olietræer -> olietræ", function() {deepEqual( Stem("olietræer"), "olietræ");});
test("olietræet -> olietræ", function() {deepEqual( Stem("olietræet"), "olietræ");});
test("olietræets -> olietræ", function() {deepEqual( Stem("olietræets"), "olietræ");});
test("oliven -> oliv", function() {deepEqual( Stem("oliven"), "oliv");});
test("olivenhaver -> olivenhav", function() {deepEqual( Stem("olivenhaver"), "olivenhav");});
test("olivenlunde -> olivenlund", function() {deepEqual( Stem("olivenlunde"), "olivenlund");});
test("olivenoli -> olivenoli", function() {deepEqual( Stem("olivenoli"), "olivenoli");});
test("olivenolie -> olivenoli", function() {deepEqual( Stem("olivenolie"), "olivenoli");});
test("oliventræ -> oliventræ", function() {deepEqual( Stem("oliventræ"), "oliventræ");});
test("oliventræer -> oliventræ", function() {deepEqual( Stem("oliventræer"), "oliventræ");});
test("oliventræerne -> oliventræ", function() {deepEqual( Stem("oliventræerne"), "oliventræ");});
test("oliventræet -> oliventræ", function() {deepEqual( Stem("oliventræet"), "oliventræ");});
test("oliventræsfløje -> oliventræsfløj", function() {deepEqual( Stem("oliventræsfløje"), "oliventræsfløj");});
test("olympas -> olympa", function() {deepEqual( Stem("olympas"), "olympa");});
test("om -> om", function() {deepEqual( Stem("om"), "om");});
test("omar -> omar", function() {deepEqual( Stem("omar"), "omar");});
test("omboende -> ombo", function() {deepEqual( Stem("omboende"), "ombo");});
test("ombunden -> ombund", function() {deepEqual( Stem("ombunden"), "ombund");});
test("ombundne -> ombundn", function() {deepEqual( Stem("ombundne"), "ombundn");});
test("ombytning -> ombytning", function() {deepEqual( Stem("ombytning"), "ombytning");});
test("ombytte -> ombyt", function() {deepEqual( Stem("ombytte"), "ombyt");});
test("ombytted -> ombytted", function() {deepEqual( Stem("ombytted"), "ombytted");});
test("ombyttede -> ombytted", function() {deepEqual( Stem("ombyttede"), "ombytted");});
test("ombytter -> ombyt", function() {deepEqual( Stem("ombytter"), "ombyt");});
test("ombyttes -> ombyt", function() {deepEqual( Stem("ombyttes"), "ombyt");});
test("omdrives -> omdriv", function() {deepEqual( Stem("omdrives"), "omdriv");});
test("omduftet -> omduft", function() {deepEqual( Stem("omduftet"), "omduft");});
test("omega -> omega", function() {deepEqual( Stem("omega"), "omega");});
test("omegn -> omegn", function() {deepEqual( Stem("omegn"), "omegn");});
test("omegnen -> omegn", function() {deepEqual( Stem("omegnen"), "omegn");});
test("omendskønt -> omendskønt", function() {deepEqual( Stem("omendskønt"), "omendskønt");});
test("omer -> omer", function() {deepEqual( Stem("omer"), "omer");});
test("omeren -> omer", function() {deepEqual( Stem("omeren"), "omer");});
test("omfattede -> omfatted", function() {deepEqual( Stem("omfattede"), "omfatted");});
test("omfattende -> omfat", function() {deepEqual( Stem("omfattende"), "omfat");});
test("omfatter -> omfat", function() {deepEqual( Stem("omfatter"), "omfat");});
test("omfavnede -> omfavned", function() {deepEqual( Stem("omfavnede"), "omfavned");});
test("omflakken -> omflak", function() {deepEqual( Stem("omflakken"), "omflak");});
test("omgang -> omgang", function() {deepEqual( Stem("omgang"), "omgang");});
test("omgangen -> omgang", function() {deepEqual( Stem("omgangen"), "omgang");});
test("omgav -> omgav", function() {deepEqual( Stem("omgav"), "omgav");});
test("omgikkes -> omgik", function() {deepEqual( Stem("omgikkes"), "omgik");});
test("omgive -> omgiv", function() {deepEqual( Stem("omgive"), "omgiv");});
test("omgivelser -> omgiv", function() {deepEqual( Stem("omgivelser"), "omgiv");});
test("omgiver -> omgiv", function() {deepEqual( Stem("omgiver"), "omgiv");});
test("omgives -> omgiv", function() {deepEqual( Stem("omgives"), "omgiv");});
test("omgivet -> omgiv", function() {deepEqual( Stem("omgivet"), "omgiv");});
test("omgivne -> omgivn", function() {deepEqual( Stem("omgivne"), "omgivn");});
test("omgjord -> omgjord", function() {deepEqual( Stem("omgjord"), "omgjord");});
test("omgjorde -> omgjord", function() {deepEqual( Stem("omgjorde"), "omgjord");});
test("omgjorded -> omgjorded", function() {deepEqual( Stem("omgjorded"), "omgjorded");});
test("omgjordede -> omgjorded", function() {deepEqual( Stem("omgjordede"), "omgjorded");});
test("omgjorder -> omgjord", function() {deepEqual( Stem("omgjorder"), "omgjord");});
test("omgjordes -> omgjord", function() {deepEqual( Stem("omgjordes"), "omgjord");});
test("omgjordet -> omgjord", function() {deepEqual( Stem("omgjordet"), "omgjord");});
test("omgå -> omgå", function() {deepEqual( Stem("omgå"), "omgå");});
test("omgåede -> omgåed", function() {deepEqual( Stem("omgåede"), "omgåed");});
test("omgående -> omgå", function() {deepEqual( Stem("omgående"), "omgå");});
test("omgås -> omgå", function() {deepEqual( Stem("omgås"), "omgå");});
test("omgængelse -> omgæng", function() {deepEqual( Stem("omgængelse"), "omgæng");});
test("omgærdet -> omgærd", function() {deepEqual( Stem("omgærdet"), "omgærd");});
test("omhu -> omhu", function() {deepEqual( Stem("omhu"), "omhu");});
test("omhugge -> omhug", function() {deepEqual( Stem("omhugge"), "omhug");});
test("omhuggede -> omhugged", function() {deepEqual( Stem("omhuggede"), "omhugged");});
test("omhugges -> omhug", function() {deepEqual( Stem("omhugges"), "omhug");});
test("omhugget -> omhug", function() {deepEqual( Stem("omhugget"), "omhug");});
test("omhyggelige -> omhyg", function() {deepEqual( Stem("omhyggelige"), "omhyg");});
test("omhyggeligt -> omhyg", function() {deepEqual( Stem("omhyggeligt"), "omhyg");});
test("omhyller -> omhyl", function() {deepEqual( Stem("omhyller"), "omhyl");});
test("omhæng -> omhæng", function() {deepEqual( Stem("omhæng"), "omhæng");});
test("omhængene -> omhæng", function() {deepEqual( Stem("omhængene"), "omhæng");});
test("omhænget -> omhæng", function() {deepEqual( Stem("omhænget"), "omhæng");});
test("omi -> omi", function() {deepEqual( Stem("omi"), "omi");});
test("omis -> omis", function() {deepEqual( Stem("omis"), "omis");});
test("omkom -> omkom", function() {deepEqual( Stem("omkom"), "omkom");});
test("omkomme -> omkom", function() {deepEqual( Stem("omkomme"), "omkom");});
test("omkommer -> omkom", function() {deepEqual( Stem("omkommer"), "omkom");});
test("omkommet -> omkom", function() {deepEqual( Stem("omkommet"), "omkom");});
test("omkomnes -> omkomn", function() {deepEqual( Stem("omkomnes"), "omkomn");});
test("omkostningen -> omkostning", function() {deepEqual( Stem("omkostningen"), "omkostning");});
test("omkostningerne -> omkostning", function() {deepEqual( Stem("omkostningerne"), "omkostning");});
test("omkreds -> omkred", function() {deepEqual( Stem("omkreds"), "omkred");});
test("omkredsen -> omkreds", function() {deepEqual( Stem("omkredsen"), "omkreds");});
test("omkring -> omkring", function() {deepEqual( Stem("omkring"), "omkring");});
test("omkuld -> omkuld", function() {deepEqual( Stem("omkuld"), "omkuld");});
test("omliggende -> omlig", function() {deepEqual( Stem("omliggende"), "omlig");});
test("omløb -> omløb", function() {deepEqual( Stem("omløb"), "omløb");});
test("omløbende -> omløb", function() {deepEqual( Stem("omløbende"), "omløb");});
test("omme -> omm", function() {deepEqual( Stem("omme"), "omm");});
test("omri -> omri", function() {deepEqual( Stem("omri"), "omri");});
test("omrids -> omrid", function() {deepEqual( Stem("omrids"), "omrid");});
test("omridset -> omrids", function() {deepEqual( Stem("omridset"), "omrids");});
test("omringe -> omring", function() {deepEqual( Stem("omringe"), "omring");});
test("omringede -> omringed", function() {deepEqual( Stem("omringede"), "omringed");});
test("omringer -> omring", function() {deepEqual( Stem("omringer"), "omring");});
test("omringes -> omring", function() {deepEqual( Stem("omringes"), "omring");});
test("omringet -> omring", function() {deepEqual( Stem("omringet"), "omring");});
test("omris -> omris", function() {deepEqual( Stem("omris"), "omris");});
test("område -> områd", function() {deepEqual( Stem("område"), "områd");});
test("områder -> områd", function() {deepEqual( Stem("områder"), "områd");});
test("omsider -> omsid", function() {deepEqual( Stem("omsider"), "omsid");});
test("omskar -> omskar", function() {deepEqual( Stem("omskar"), "omskar");});
test("omskifte -> omskift", function() {deepEqual( Stem("omskifte"), "omskift");});
test("omskiftede -> omskifted", function() {deepEqual( Stem("omskiftede"), "omskifted");});
test("omskiftelse -> omskift", function() {deepEqual( Stem("omskiftelse"), "omskift");});
test("omskiftes -> omskift", function() {deepEqual( Stem("omskiftes"), "omskift");});
test("omskåren -> omskår", function() {deepEqual( Stem("omskåren"), "omskår");});
test("omskåret -> omskår", function() {deepEqual( Stem("omskåret"), "omskår");});
test("omskårne -> omskårn", function() {deepEqual( Stem("omskårne"), "omskårn");});
test("omskær -> omskær", function() {deepEqual( Stem("omskær"), "omskær");});
test("omskære -> omskær", function() {deepEqual( Stem("omskære"), "omskær");});
test("omskærelse -> omskær", function() {deepEqual( Stem("omskærelse"), "omskær");});
test("omskærelsen -> omskær", function() {deepEqual( Stem("omskærelsen"), "omskær");});
test("omskærelsens -> omskær", function() {deepEqual( Stem("omskærelsens"), "omskær");});
test("omskæres -> omskær", function() {deepEqual( Stem("omskæres"), "omskær");});
test("omsluttede -> omslutted", function() {deepEqual( Stem("omsluttede"), "omslutted");});
test("omslutter -> omslut", function() {deepEqual( Stem("omslutter"), "omslut");});
test("omsorg -> omsorg", function() {deepEqual( Stem("omsorg"), "omsorg");});
test("omspender -> omspend", function() {deepEqual( Stem("omspender"), "omspend");});
test("omspænder -> omspænd", function() {deepEqual( Stem("omspænder"), "omspænd");});
test("omspændt -> omspænd", function() {deepEqual( Stem("omspændt"), "omspænd");});
test("omspændte -> omspænd", function() {deepEqual( Stem("omspændte"), "omspænd");});
test("omstråle -> omstrål", function() {deepEqual( Stem("omstråle"), "omstrål");});
test("omstrålede -> omstråled", function() {deepEqual( Stem("omstrålede"), "omstråled");});
test("omstyrte -> omstyrt", function() {deepEqual( Stem("omstyrte"), "omstyrt");});
test("omstyrted -> omstyrted", function() {deepEqual( Stem("omstyrted"), "omstyrted");});
test("omstyrtede -> omstyrted", function() {deepEqual( Stem("omstyrtede"), "omstyrted");});
test("omstyrtedes -> omstyrted", function() {deepEqual( Stem("omstyrtedes"), "omstyrted");});
test("omstyrter -> omstyrt", function() {deepEqual( Stem("omstyrter"), "omstyrt");});
test("omstyrtet -> omstyrt", function() {deepEqual( Stem("omstyrtet"), "omstyrt");});
test("omstående -> omstå", function() {deepEqual( Stem("omstående"), "omstå");});
test("omstændigheder -> omstænd", function() {deepEqual( Stem("omstændigheder"), "omstænd");});
test("omsurrede -> omsurred", function() {deepEqual( Stem("omsurrede"), "omsurred");});
test("omsætning -> omsætning", function() {deepEqual( Stem("omsætning"), "omsætning");});
test("omsætte -> omsæt", function() {deepEqual( Stem("omsætte"), "omsæt");});
test("omtale -> omtal", function() {deepEqual( Stem("omtale"), "omtal");});
test("omtaler -> omtal", function() {deepEqual( Stem("omtaler"), "omtal");});
test("omtales -> omtal", function() {deepEqual( Stem("omtales"), "omtal");});
test("omtrent -> omtrent", function() {deepEqual( Stem("omtrent"), "omtrent");});
test("omtumles -> omtuml", function() {deepEqual( Stem("omtumles"), "omtuml");});
test("omvankende -> omvank", function() {deepEqual( Stem("omvankende"), "omvank");});
test("omvej -> omvej", function() {deepEqual( Stem("omvej"), "omvej");});
test("omvend -> omvend", function() {deepEqual( Stem("omvend"), "omvend");});
test("omvende -> omv", function() {deepEqual( Stem("omvende"), "omv");});
test("omvendelse -> omvend", function() {deepEqual( Stem("omvendelse"), "omvend");});
test("omvendelsen -> omvend", function() {deepEqual( Stem("omvendelsen"), "omvend");});
test("omvendelses -> omvend", function() {deepEqual( Stem("omvendelses"), "omvend");});
test("omvender -> omvend", function() {deepEqual( Stem("omvender"), "omvend");});
test("omvendt -> omvend", function() {deepEqual( Stem("omvendt"), "omvend");});
test("omvendte -> omvend", function() {deepEqual( Stem("omvendte"), "omvend");});
test("omvælter -> omvælt", function() {deepEqual( Stem("omvælter"), "omvælt");});
test("omvæltes -> omvælt", function() {deepEqual( Stem("omvæltes"), "omvælt");});
test("on -> on", function() {deepEqual( Stem("on"), "on");});
test("onam -> onam", function() {deepEqual( Stem("onam"), "onam");});
test("onams -> onam", function() {deepEqual( Stem("onams"), "onam");});
test("onan -> onan", function() {deepEqual( Stem("onan"), "onan");});
test("ond -> ond", function() {deepEqual( Stem("ond"), "ond");});
test("ondartede -> ondarted", function() {deepEqual( Stem("ondartede"), "ondarted");});
test("ondartet -> ondart", function() {deepEqual( Stem("ondartet"), "ondart");});
test("onde -> ond", function() {deepEqual( Stem("onde"), "ond");});
test("ondes -> ond", function() {deepEqual( Stem("ondes"), "ond");});
test("ondet -> ond", function() {deepEqual( Stem("ondet"), "ond");});
test("ondsindet -> ondsind", function() {deepEqual( Stem("ondsindet"), "ondsind");});
test("ondsindethed -> ondsind", function() {deepEqual( Stem("ondsindethed"), "ondsind");});
test("ondskab -> ondskab", function() {deepEqual( Stem("ondskab"), "ondskab");});
test("ondskaben -> ondskab", function() {deepEqual( Stem("ondskaben"), "ondskab");});
test("ondskabens -> ondskab", function() {deepEqual( Stem("ondskabens"), "ondskab");});
test("ondskabs -> ondskab", function() {deepEqual( Stem("ondskabs"), "ondskab");});
test("ondt -> ondt", function() {deepEqual( Stem("ondt"), "ondt");});
test("onesiforus -> onesiforus", function() {deepEqual( Stem("onesiforus"), "onesiforus");});
test("onesimus -> onesimus", function() {deepEqual( Stem("onesimus"), "onesimus");});
test("oni -> oni", function() {deepEqual( Stem("oni"), "oni");});
test("ono -> ono", function() {deepEqual( Stem("ono"), "ono");});
test("onodalen -> onodal", function() {deepEqual( Stem("onodalen"), "onodal");});
test("onos -> ono", function() {deepEqual( Stem("onos"), "ono");});
test("ons -> ons", function() {deepEqual( Stem("ons"), "ons");});
test("onyks -> onyk", function() {deepEqual( Stem("onyks"), "onyk");});
test("onyksmusling -> onyksmusling", function() {deepEqual( Stem("onyksmusling"), "onyksmusling");});
test("oo -> oo", function() {deepEqual( Stem("oo"), "oo");});
test("ooo -> ooo", function() {deepEqual( Stem("ooo"), "ooo");});
test("op -> op", function() {deepEqual( Stem("op"), "op");});
test("opad -> opad", function() {deepEqual( Stem("opad"), "opad");});
test("opbevares -> opbevar", function() {deepEqual( Stem("opbevares"), "opbevar");});
test("opbinderens -> opbind", function() {deepEqual( Stem("opbinderens"), "opbind");});
test("opblæse -> opblæs", function() {deepEqual( Stem("opblæse"), "opblæs");});
test("opblæser -> opblæs", function() {deepEqual( Stem("opblæser"), "opblæs");});
test("opblæses -> opblæs", function() {deepEqual( Stem("opblæses"), "opblæs");});
test("opblæst -> opblæst", function() {deepEqual( Stem("opblæst"), "opblæst");});
test("opblæste -> opblæst", function() {deepEqual( Stem("opblæste"), "opblæst");});
test("opblæstes -> opblæst", function() {deepEqual( Stem("opblæstes"), "opblæst");});
test("opblæsthed -> opblæst", function() {deepEqual( Stem("opblæsthed"), "opblæst");});
test("opbragt -> opbrag", function() {deepEqual( Stem("opbragt"), "opbrag");});
test("opbragte -> opbrag", function() {deepEqual( Stem("opbragte"), "opbrag");});
test("opbrud -> opbrud", function() {deepEqual( Stem("opbrud"), "opbrud");});
test("opbruddet -> opbrud", function() {deepEqual( Stem("opbruddet"), "opbrud");});
test("opbrudt -> opbrud", function() {deepEqual( Stem("opbrudt"), "opbrud");});
test("opbruger -> opbrug", function() {deepEqual( Stem("opbruger"), "opbrug");});
test("opbrænde -> opbrænd", function() {deepEqual( Stem("opbrænde"), "opbrænd");});
test("opbrændes -> opbrænd", function() {deepEqual( Stem("opbrændes"), "opbrænd");});
test("opbrændt -> opbrænd", function() {deepEqual( Stem("opbrændt"), "opbrænd");});
test("opbrændte -> opbrænd", function() {deepEqual( Stem("opbrændte"), "opbrænd");});
test("opbrændtes -> opbrænd", function() {deepEqual( Stem("opbrændtes"), "opbrænd");});
test("opbud -> opbud", function() {deepEqual( Stem("opbud"), "opbud");});
test("opbudt -> opbud", function() {deepEqual( Stem("opbudt"), "opbud");});
test("opbyd -> opbyd", function() {deepEqual( Stem("opbyd"), "opbyd");});
test("opbyde -> opbyd", function() {deepEqual( Stem("opbyde"), "opbyd");});
test("opbyder -> opbyd", function() {deepEqual( Stem("opbyder"), "opbyd");});
test("opbyg -> opbyg", function() {deepEqual( Stem("opbyg"), "opbyg");});
test("opbygge -> opbyg", function() {deepEqual( Stem("opbygge"), "opbyg");});
test("opbyggede -> opbygged", function() {deepEqual( Stem("opbyggede"), "opbygged");});
test("opbyggedes -> opbygged", function() {deepEqual( Stem("opbyggedes"), "opbygged");});
test("opbyggelse -> opbyg", function() {deepEqual( Stem("opbyggelse"), "opbyg");});
test("opbyggelses -> opbyg", function() {deepEqual( Stem("opbyggelses"), "opbyg");});
test("opbygger -> opbyg", function() {deepEqual( Stem("opbygger"), "opbyg");});
test("opbygges -> opbyg", function() {deepEqual( Stem("opbygges"), "opbyg");});
test("opbygget -> opbyg", function() {deepEqual( Stem("opbygget"), "opbyg");});
test("opbød -> opbød", function() {deepEqual( Stem("opbød"), "opbød");});
test("opdage -> opdag", function() {deepEqual( Stem("opdage"), "opdag");});
test("opdagede -> opdaged", function() {deepEqual( Stem("opdagede"), "opdaged");});
test("opdager -> opdag", function() {deepEqual( Stem("opdager"), "opdag");});
test("opdaget -> opdag", function() {deepEqual( Stem("opdaget"), "opdag");});
test("opdigtede -> opdigted", function() {deepEqual( Stem("opdigtede"), "opdigted");});
test("opdrage -> opdrag", function() {deepEqual( Stem("opdrage"), "opdrag");});
test("opdrager -> opdrag", function() {deepEqual( Stem("opdrager"), "opdrag");});
test("opdragere -> opdrag", function() {deepEqual( Stem("opdragere"), "opdrag");});
test("opdrog -> opdrog", function() {deepEqual( Stem("opdrog"), "opdrog");});
test("opdrættet -> opdræt", function() {deepEqual( Stem("opdrættet"), "opdræt");});
test("opdynged -> opdynged", function() {deepEqual( Stem("opdynged"), "opdynged");});
test("opdyngede -> opdynged", function() {deepEqual( Stem("opdyngede"), "opdynged");});
test("opdynger -> opdyng", function() {deepEqual( Stem("opdynger"), "opdyng");});
test("opdækket -> opdæk", function() {deepEqual( Stem("opdækket"), "opdæk");});
test("opefter -> opeft", function() {deepEqual( Stem("opefter"), "opeft");});
test("opelsket -> opelsk", function() {deepEqual( Stem("opelsket"), "opelsk");});
test("opfange -> opfang", function() {deepEqual( Stem("opfange"), "opfang");});
test("opfanged -> opfanged", function() {deepEqual( Stem("opfanged"), "opfanged");});
test("opfaren -> opfar", function() {deepEqual( Stem("opfaren"), "opfar");});
test("opfinder -> opfind", function() {deepEqual( Stem("opfinder"), "opfind");});
test("opfindsomhed -> opfindsom", function() {deepEqual( Stem("opfindsomhed"), "opfindsom");});
test("opfindsomme -> opfindsom", function() {deepEqual( Stem("opfindsomme"), "opfindsom");});
test("opflamme -> opflam", function() {deepEqual( Stem("opflamme"), "opflam");});
test("opflammer -> opflam", function() {deepEqual( Stem("opflammer"), "opflam");});
test("opfor -> opfor", function() {deepEqual( Stem("opfor"), "opfor");});
test("opfordre -> opfordr", function() {deepEqual( Stem("opfordre"), "opfordr");});
test("opfordrede -> opfordred", function() {deepEqual( Stem("opfordrede"), "opfordred");});
test("opfordrer -> opfordr", function() {deepEqual( Stem("opfordrer"), "opfordr");});
test("opfordret -> opfordr", function() {deepEqual( Stem("opfordret"), "opfordr");});
test("opfordring -> opfordring", function() {deepEqual( Stem("opfordring"), "opfordring");});
test("opfostred -> opfostred", function() {deepEqual( Stem("opfostred"), "opfostred");});
test("opfostrede -> opfostred", function() {deepEqual( Stem("opfostrede"), "opfostred");});
test("opfostrer -> opfostr", function() {deepEqual( Stem("opfostrer"), "opfostr");});
test("opfostret -> opfostr", function() {deepEqual( Stem("opfostret"), "opfostr");});
test("opfyld -> opfyld", function() {deepEqual( Stem("opfyld"), "opfyld");});
test("opfylde -> opfyld", function() {deepEqual( Stem("opfylde"), "opfyld");});
test("opfyldelse -> opfyld", function() {deepEqual( Stem("opfyldelse"), "opfyld");});
test("opfylder -> opfyld", function() {deepEqual( Stem("opfylder"), "opfyld");});
test("opfyldes -> opfyld", function() {deepEqual( Stem("opfyldes"), "opfyld");});
test("opfyldt -> opfyld", function() {deepEqual( Stem("opfyldt"), "opfyld");});
test("opfyldte -> opfyld", function() {deepEqual( Stem("opfyldte"), "opfyld");});
test("opfyldtes -> opfyld", function() {deepEqual( Stem("opfyldtes"), "opfyld");});
test("opfødt -> opfød", function() {deepEqual( Stem("opfødt"), "opfød");});
test("opføre -> opfør", function() {deepEqual( Stem("opføre"), "opfør");});
test("opførelse -> opfør", function() {deepEqual( Stem("opførelse"), "opfør");});
test("opførelsebyggede -> opførelsebygged", function() {deepEqual( Stem("opførelsebyggede"), "opførelsebygged");});
test("opførelsen -> opfør", function() {deepEqual( Stem("opførelsen"), "opfør");});
test("opfører -> opfør", function() {deepEqual( Stem("opfører"), "opfør");});
test("opføres -> opfør", function() {deepEqual( Stem("opføres"), "opfør");});
test("opførf -> opførf", function() {deepEqual( Stem("opførf"), "opførf");});
test("opførsel -> opførsel", function() {deepEqual( Stem("opførsel"), "opførsel");});
test("opført -> opført", function() {deepEqual( Stem("opført"), "opført");});
test("opførte -> opført", function() {deepEqual( Stem("opførte"), "opført");});
test("opgang -> opgang", function() {deepEqual( Stem("opgang"), "opgang");});
test("opgangen -> opgang", function() {deepEqual( Stem("opgangen"), "opgang");});
test("opgangs -> opgang", function() {deepEqual( Stem("opgangs"), "opgang");});
test("opgav -> opgav", function() {deepEqual( Stem("opgav"), "opgav");});
test("opgave -> opgav", function() {deepEqual( Stem("opgave"), "opgav");});
test("opgiv -> opgiv", function() {deepEqual( Stem("opgiv"), "opgiv");});
test("opgive -> opgiv", function() {deepEqual( Stem("opgive"), "opgiv");});
test("opgivende -> opgiv", function() {deepEqual( Stem("opgivende"), "opgiv");});
test("opgiver -> opgiv", function() {deepEqual( Stem("opgiver"), "opgiv");});
test("opgivet -> opgiv", function() {deepEqual( Stem("opgivet"), "opgiv");});
test("opgivne -> opgivn", function() {deepEqual( Stem("opgivne"), "opgivn");});
test("opgjort -> opgjort", function() {deepEqual( Stem("opgjort"), "opgjort");});
test("opgå -> opgå", function() {deepEqual( Stem("opgå"), "opgå");});
test("opgået -> opgå", function() {deepEqual( Stem("opgået"), "opgå");});
test("opgår -> opgår", function() {deepEqual( Stem("opgår"), "opgår");});
test("opgæld -> opgæld", function() {deepEqual( Stem("opgæld"), "opgæld");});
test("opgør -> opgør", function() {deepEqual( Stem("opgør"), "opgør");});
test("opgøre -> opgør", function() {deepEqual( Stem("opgøre"), "opgør");});
test("opgørets -> opgør", function() {deepEqual( Stem("opgørets"), "opgør");});
test("ophav -> ophav", function() {deepEqual( Stem("ophav"), "ophav");});
test("ophavsmand -> ophavsmand", function() {deepEqual( Stem("ophavsmand"), "ophavsmand");});
test("ophedes -> ophed", function() {deepEqual( Stem("ophedes"), "ophed");});
test("ophedet -> ophed", function() {deepEqual( Stem("ophedet"), "ophed");});
test("ophidsede -> ophidsed", function() {deepEqual( Stem("ophidsede"), "ophidsed");});
test("ophidselse -> ophids", function() {deepEqual( Stem("ophidselse"), "ophids");});
test("ophidser -> ophids", function() {deepEqual( Stem("ophidser"), "ophids");});
test("ophidset -> ophids", function() {deepEqual( Stem("ophidset"), "ophids");});
test("ophobe -> ophob", function() {deepEqual( Stem("ophobe"), "ophob");});
test("ophobed -> ophobed", function() {deepEqual( Stem("ophobed"), "ophobed");});
test("ophobede -> ophobed", function() {deepEqual( Stem("ophobede"), "ophobed");});
test("ophobet -> ophob", function() {deepEqual( Stem("ophobet"), "ophob");});
test("ophold -> ophold", function() {deepEqual( Stem("ophold"), "ophold");});
test("opholde -> ophold", function() {deepEqual( Stem("opholde"), "ophold");});
test("opholder -> ophold", function() {deepEqual( Stem("opholder"), "ophold");});
test("opholdsted -> opholdsted", function() {deepEqual( Stem("opholdsted"), "opholdsted");});
test("opholdt -> ophold", function() {deepEqual( Stem("opholdt"), "ophold");});
test("ophænge -> ophæng", function() {deepEqual( Stem("ophænge"), "ophæng");});
test("ophænger -> ophæng", function() {deepEqual( Stem("ophænger"), "ophæng");});
test("ophængte -> ophæng", function() {deepEqual( Stem("ophængte"), "ophæng");});
test("ophæve -> ophæv", function() {deepEqual( Stem("ophæve"), "ophæv");});
test("ophævelse -> ophæv", function() {deepEqual( Stem("ophævelse"), "ophæv");});
test("ophæver -> ophæv", function() {deepEqual( Stem("ophæver"), "ophæv");});
test("ophæves -> ophæv", function() {deepEqual( Stem("ophæves"), "ophæv");});
test("ophævet -> ophæv", function() {deepEqual( Stem("ophævet"), "ophæv");});
test("ophøj -> ophøj", function() {deepEqual( Stem("ophøj"), "ophøj");});
test("ophøje -> ophøj", function() {deepEqual( Stem("ophøje"), "ophøj");});
test("ophøjed -> ophøjed", function() {deepEqual( Stem("ophøjed"), "ophøjed");});
test("ophøjede -> ophøjed", function() {deepEqual( Stem("ophøjede"), "ophøjed");});
test("ophøjer -> ophøj", function() {deepEqual( Stem("ophøjer"), "ophøj");});
test("ophøjes -> ophøj", function() {deepEqual( Stem("ophøjes"), "ophøj");});
test("ophøjet -> ophøj", function() {deepEqual( Stem("ophøjet"), "ophøj");});
test("ophør -> ophør", function() {deepEqual( Stem("ophør"), "ophør");});
test("ophøre -> ophør", function() {deepEqual( Stem("ophøre"), "ophør");});
test("ophører -> ophør", function() {deepEqual( Stem("ophører"), "ophør");});
test("ophørt -> ophørt", function() {deepEqual( Stem("ophørt"), "ophørt");});
test("ophørte -> ophørt", function() {deepEqual( Stem("ophørte"), "ophørt");});
test("opirre -> opir", function() {deepEqual( Stem("opirre"), "opir");});
test("opirrer -> opir", function() {deepEqual( Stem("opirrer"), "opir");});
test("opkaldes -> opkald", function() {deepEqual( Stem("opkaldes"), "opkald");});
test("opkaldt -> opkald", function() {deepEqual( Stem("opkaldt"), "opkald");});
test("opkaldte -> opkald", function() {deepEqual( Stem("opkaldte"), "opkald");});
test("opkast -> opkast", function() {deepEqual( Stem("opkast"), "opkast");});
test("opkaste -> opkast", function() {deepEqual( Stem("opkaste"), "opkast");});
test("opkastede -> opkasted", function() {deepEqual( Stem("opkastede"), "opkasted");});
test("opkaster -> opkast", function() {deepEqual( Stem("opkaster"), "opkast");});
test("opkastes -> opkast", function() {deepEqual( Stem("opkastes"), "opkast");});
test("opkastet -> opkast", function() {deepEqual( Stem("opkastet"), "opkast");});
test("opklarer -> opklar", function() {deepEqual( Stem("opklarer"), "opklar");});
test("opkom -> opkom", function() {deepEqual( Stem("opkom"), "opkom");});
test("opkomme -> opkom", function() {deepEqual( Stem("opkomme"), "opkom");});
test("opkommet -> opkom", function() {deepEqual( Stem("opkommet"), "opkom");});
test("opkræve -> opkræv", function() {deepEqual( Stem("opkræve"), "opkræv");});
test("opkrævede -> opkræved", function() {deepEqual( Stem("opkrævede"), "opkræved");});
test("oplad -> oplad", function() {deepEqual( Stem("oplad"), "oplad");});
test("oplade -> oplad", function() {deepEqual( Stem("oplade"), "oplad");});
test("oplader -> oplad", function() {deepEqual( Stem("oplader"), "oplad");});
test("oplades -> oplad", function() {deepEqual( Stem("oplades"), "oplad");});
test("opladt -> oplad", function() {deepEqual( Stem("opladt"), "oplad");});
test("oplagde -> oplag", function() {deepEqual( Stem("oplagde"), "oplag");});
test("oplagre -> oplagr", function() {deepEqual( Stem("oplagre"), "oplagr");});
test("oplagt -> oplag", function() {deepEqual( Stem("oplagt"), "oplag");});
test("opleve -> oplev", function() {deepEqual( Stem("opleve"), "oplev");});
test("oplever -> oplev", function() {deepEqual( Stem("oplever"), "oplev");});
test("oplevet -> oplev", function() {deepEqual( Stem("oplevet"), "oplev");});
test("opliv -> opliv", function() {deepEqual( Stem("opliv"), "opliv");});
test("oplivedes -> oplived", function() {deepEqual( Stem("oplivedes"), "oplived");});
test("oplives -> opliv", function() {deepEqual( Stem("oplives"), "opliv");});
test("oplod -> oplod", function() {deepEqual( Stem("oplod"), "oplod");});
test("oplode -> oplod", function() {deepEqual( Stem("oplode"), "oplod");});
test("oplodes -> oplod", function() {deepEqual( Stem("oplodes"), "oplod");});
test("oplyse -> oplys", function() {deepEqual( Stem("oplyse"), "oplys");});
test("oplyser -> oplys", function() {deepEqual( Stem("oplyser"), "oplys");});
test("oplysning -> oplysning", function() {deepEqual( Stem("oplysning"), "oplysning");});
test("oplyst -> oplyst", function() {deepEqual( Stem("oplyst"), "oplyst");});
test("oplyste -> oplyst", function() {deepEqual( Stem("oplyste"), "oplyst");});
test("oplægge -> oplæg", function() {deepEqual( Stem("oplægge"), "oplæg");});
test("oplægger -> oplæg", function() {deepEqual( Stem("oplægger"), "oplæg");});
test("oplærer -> oplær", function() {deepEqual( Stem("oplærer"), "oplær");});
test("oplært -> oplært", function() {deepEqual( Stem("oplært"), "oplært");});
test("oplærte -> oplært", function() {deepEqual( Stem("oplærte"), "oplært");});
test("oplæse -> oplæs", function() {deepEqual( Stem("oplæse"), "oplæs");});
test("oplæser -> oplæs", function() {deepEqual( Stem("oplæser"), "oplæs");});
test("oplæses -> oplæs", function() {deepEqual( Stem("oplæses"), "oplæs");});
test("oplæsningen -> oplæsning", function() {deepEqual( Stem("oplæsningen"), "oplæsning");});
test("oplæst -> oplæst", function() {deepEqual( Stem("oplæst"), "oplæst");});
test("oplæste -> oplæst", function() {deepEqual( Stem("oplæste"), "oplæst");});
test("opløb -> opløb", function() {deepEqual( Stem("opløb"), "opløb");});
test("opløft -> opløft", function() {deepEqual( Stem("opløft"), "opløft");});
test("opløfte -> opløft", function() {deepEqual( Stem("opløfte"), "opløft");});
test("opløftede -> opløfted", function() {deepEqual( Stem("opløftede"), "opløfted");});
test("opløftedes -> opløfted", function() {deepEqual( Stem("opløftedes"), "opløfted");});
test("opløfter -> opløft", function() {deepEqual( Stem("opløfter"), "opløft");});
test("opløftet -> opløft", function() {deepEqual( Stem("opløftet"), "opløft");});
test("opløser -> opløs", function() {deepEqual( Stem("opløser"), "opløs");});
test("opløses -> opløs", function() {deepEqual( Stem("opløses"), "opløs");});
test("opløsning -> opløsning", function() {deepEqual( Stem("opløsning"), "opløsning");});
test("opløst -> opløst", function() {deepEqual( Stem("opløst"), "opløst");});
test("opmod -> opmod", function() {deepEqual( Stem("opmod"), "opmod");});
test("opmuntre -> opmuntr", function() {deepEqual( Stem("opmuntre"), "opmuntr");});
test("opmuntrede -> opmuntred", function() {deepEqual( Stem("opmuntrede"), "opmuntred");});
test("opmuntrende -> opmuntr", function() {deepEqual( Stem("opmuntrende"), "opmuntr");});
test("opmuntrer -> opmuntr", function() {deepEqual( Stem("opmuntrer"), "opmuntr");});
test("opmuntres -> opmuntr", function() {deepEqual( Stem("opmuntres"), "opmuntr");});
test("opmuntring -> opmuntring", function() {deepEqual( Stem("opmuntring"), "opmuntring");});
test("opmåle -> opmål", function() {deepEqual( Stem("opmåle"), "opmål");});
test("opmærksomhed -> opmærksom", function() {deepEqual( Stem("opmærksomhed"), "opmærksom");});
test("opmærksomt -> opmærksomt", function() {deepEqual( Stem("opmærksomt"), "opmærksomt");});
test("opnå -> opnå", function() {deepEqual( Stem("opnå"), "opnå");});
test("opnåede -> opnåed", function() {deepEqual( Stem("opnåede"), "opnåed");});
test("opnået -> opnå", function() {deepEqual( Stem("opnået"), "opnå");});
test("opnår -> opnår", function() {deepEqual( Stem("opnår"), "opnår");});
test("opofrelser -> opofr", function() {deepEqual( Stem("opofrelser"), "opofr");});
test("opofres -> opofr", function() {deepEqual( Stem("opofres"), "opofr");});
test("oppakning -> oppakning", function() {deepEqual( Stem("oppakning"), "oppakning");});
test("oppe -> opp", function() {deepEqual( Stem("oppe"), "opp");});
test("oppebie -> oppebi", function() {deepEqual( Stem("oppebie"), "oppebi");});
test("oprakte -> oprak", function() {deepEqual( Stem("oprakte"), "oprak");});
test("opregne -> opregn", function() {deepEqual( Stem("opregne"), "opregn");});
test("opregnes -> opregn", function() {deepEqual( Stem("opregnes"), "opregn");});
test("oprejs -> oprej", function() {deepEqual( Stem("oprejs"), "oprej");});
test("oprejse -> oprejs", function() {deepEqual( Stem("oprejse"), "oprejs");});
test("oprejser -> oprejs", function() {deepEqual( Stem("oprejser"), "oprejs");});
test("oprejses -> oprejs", function() {deepEqual( Stem("oprejses"), "oprejs");});
test("oprejsning -> oprejsning", function() {deepEqual( Stem("oprejsning"), "oprejsning");});
test("oprejst -> oprejst", function() {deepEqual( Stem("oprejst"), "oprejst");});
test("oprejste -> oprejst", function() {deepEqual( Stem("oprejste"), "oprejst");});
test("opretholde -> oprethold", function() {deepEqual( Stem("opretholde"), "oprethold");});
test("oprette -> opret", function() {deepEqual( Stem("oprette"), "opret");});
test("opretter -> opret", function() {deepEqual( Stem("opretter"), "opret");});
test("oprettet -> opret", function() {deepEqual( Stem("oprettet"), "opret");});
test("oprev -> oprev", function() {deepEqual( Stem("oprev"), "oprev");});
test("oprevet -> oprev", function() {deepEqual( Stem("oprevet"), "oprev");});
test("oprigtig -> oprig", function() {deepEqual( Stem("oprigtig"), "oprig");});
test("oprigtige -> oprig", function() {deepEqual( Stem("oprigtige"), "oprig");});
test("oprigtiges -> oprig", function() {deepEqual( Stem("oprigtiges"), "oprig");});
test("oprigtighed -> oprig", function() {deepEqual( Stem("oprigtighed"), "oprig");});
test("oprigtigheden -> oprig", function() {deepEqual( Stem("oprigtigheden"), "oprig");});
test("oprigtigt -> oprig", function() {deepEqual( Stem("oprigtigt"), "oprig");});
test("oprinde -> oprind", function() {deepEqual( Stem("oprinde"), "oprind");});
test("oprindelige -> oprind", function() {deepEqual( Stem("oprindelige"), "oprind");});
test("oprindelse -> oprind", function() {deepEqual( Stem("oprindelse"), "oprind");});
test("oprinder -> oprind", function() {deepEqual( Stem("oprinder"), "oprind");});
test("oproded -> oproded", function() {deepEqual( Stem("oproded"), "oproded");});
test("oprunden -> oprund", function() {deepEqual( Stem("oprunden"), "oprund");});
test("oprundet -> oprund", function() {deepEqual( Stem("oprundet"), "oprund");});
test("oprykke -> opryk", function() {deepEqual( Stem("oprykke"), "opryk");});
test("oprykked -> oprykked", function() {deepEqual( Stem("oprykked"), "oprykked");});
test("oprykkede -> oprykked", function() {deepEqual( Stem("oprykkede"), "oprykked");});
test("oprykkedes -> oprykked", function() {deepEqual( Stem("oprykkedes"), "oprykked");});
test("oprykkes -> opryk", function() {deepEqual( Stem("oprykkes"), "opryk");});
test("oprykt -> opryk", function() {deepEqual( Stem("oprykt"), "opryk");});
test("opråb -> opråb", function() {deepEqual( Stem("opråb"), "opråb");});
test("oprømt -> oprømt", function() {deepEqual( Stem("oprømt"), "oprømt");});
test("oprør -> oprør", function() {deepEqual( Stem("oprør"), "oprør");});
test("oprører -> oprør", function() {deepEqual( Stem("oprører"), "oprør");});
test("oprørere -> oprør", function() {deepEqual( Stem("oprørere"), "oprør");});
test("oprøret -> oprør", function() {deepEqual( Stem("oprøret"), "oprør");});
test("oprørsk -> oprørsk", function() {deepEqual( Stem("oprørsk"), "oprørsk");});
test("oprørske -> oprørsk", function() {deepEqual( Stem("oprørske"), "oprørsk");});
test("oprørsstifter -> oprørsstift", function() {deepEqual( Stem("oprørsstifter"), "oprørsstift");});
test("oprørt -> oprørt", function() {deepEqual( Stem("oprørt"), "oprørt");});
test("oprørte -> oprørt", function() {deepEqual( Stem("oprørte"), "oprørt");});
test("opsadlede -> opsadled", function() {deepEqual( Stem("opsadlede"), "opsadled");});
test("opsamle -> opsaml", function() {deepEqual( Stem("opsamle"), "opsaml");});
test("opsamlede -> opsamled", function() {deepEqual( Stem("opsamlede"), "opsamled");});
test("opsamler -> opsaml", function() {deepEqual( Stem("opsamler"), "opsaml");});
test("opsamlet -> opsaml", function() {deepEqual( Stem("opsamlet"), "opsaml");});
test("opsanke -> opsank", function() {deepEqual( Stem("opsanke"), "opsank");});
test("opsankes -> opsank", function() {deepEqual( Stem("opsankes"), "opsank");});
test("opsender -> opsend", function() {deepEqual( Stem("opsender"), "opsend");});
test("opsendt -> opsend", function() {deepEqual( Stem("opsendt"), "opsend");});
test("opsendte -> opsend", function() {deepEqual( Stem("opsendte"), "opsend");});
test("opskrev -> opskrev", function() {deepEqual( Stem("opskrev"), "opskrev");});
test("opskrevet -> opskrev", function() {deepEqual( Stem("opskrevet"), "opskrev");});
test("opskriv -> opskriv", function() {deepEqual( Stem("opskriv"), "opskriv");});
test("opskræmmer -> opskræm", function() {deepEqual( Stem("opskræmmer"), "opskræm");});
test("opskræmt -> opskræmt", function() {deepEqual( Stem("opskræmt"), "opskræmt");});
test("opskyller -> opskyl", function() {deepEqual( Stem("opskyller"), "opskyl");});
test("opslidt -> opslid", function() {deepEqual( Stem("opslidt"), "opslid");});
test("opslog -> opslog", function() {deepEqual( Stem("opslog"), "opslog");});
test("opsluge -> opslug", function() {deepEqual( Stem("opsluge"), "opslug");});
test("opsluger -> opslug", function() {deepEqual( Stem("opsluger"), "opslug");});
test("opsluges -> opslug", function() {deepEqual( Stem("opsluges"), "opslug");});
test("opslugt -> opslug", function() {deepEqual( Stem("opslugt"), "opslug");});
test("opslugte -> opslug", function() {deepEqual( Stem("opslugte"), "opslug");});
test("opslå -> opslå", function() {deepEqual( Stem("opslå"), "opslå");});
test("opslået -> opslå", function() {deepEqual( Stem("opslået"), "opslå");});
test("opslår -> opslår", function() {deepEqual( Stem("opslår"), "opslår");});
test("opsparet -> opspar", function() {deepEqual( Stem("opsparet"), "opspar");});
test("opspiler -> opspil", function() {deepEqual( Stem("opspiler"), "opspil");});
test("opspilet -> opspil", function() {deepEqual( Stem("opspilet"), "opspil");});
test("opspind -> opspind", function() {deepEqual( Stem("opspind"), "opspind");});
test("opspor -> opspor", function() {deepEqual( Stem("opspor"), "opspor");});
test("opspore -> opspor", function() {deepEqual( Stem("opspore"), "opspor");});
test("opsporet -> opspor", function() {deepEqual( Stem("opsporet"), "opspor");});
test("opspurgt -> opspurg", function() {deepEqual( Stem("opspurgt"), "opspurg");});
test("opspærre -> opspær", function() {deepEqual( Stem("opspærre"), "opspær");});
test("opspærred -> opspærred", function() {deepEqual( Stem("opspærred"), "opspærred");});
test("opstande -> opstand", function() {deepEqual( Stem("opstande"), "opstand");});
test("opstandelse -> opstand", function() {deepEqual( Stem("opstandelse"), "opstand");});
test("opstandelsen -> opstand", function() {deepEqual( Stem("opstandelsen"), "opstand");});
test("opstandelsens -> opstand", function() {deepEqual( Stem("opstandelsens"), "opstand");});
test("opstandelses -> opstand", function() {deepEqual( Stem("opstandelses"), "opstand");});
test("opstanden -> opstand", function() {deepEqual( Stem("opstanden"), "opstand");});
test("opsteg -> opsteg", function() {deepEqual( Stem("opsteg"), "opsteg");});
test("opstegne -> opstegn", function() {deepEqual( Stem("opstegne"), "opstegn");});
test("opstiger -> opst", function() {deepEqual( Stem("opstiger"), "opst");});
test("opstil -> opstil", function() {deepEqual( Stem("opstil"), "opstil");});
test("opstille -> opstil", function() {deepEqual( Stem("opstille"), "opstil");});
test("opstillede -> opstilled", function() {deepEqual( Stem("opstillede"), "opstilled");});
test("opstilledes -> opstilled", function() {deepEqual( Stem("opstilledes"), "opstilled");});
test("opstilles -> opstil", function() {deepEqual( Stem("opstilles"), "opstil");});
test("opstillet -> opstil", function() {deepEqual( Stem("opstillet"), "opstil");});
test("opstod -> opstod", function() {deepEqual( Stem("opstod"), "opstod");});
test("opstå -> opstå", function() {deepEqual( Stem("opstå"), "opstå");});
test("opståede -> opståed", function() {deepEqual( Stem("opståede"), "opståed");});
test("opstår -> opstår", function() {deepEqual( Stem("opstår"), "opstår");});
test("opsyn -> opsyn", function() {deepEqual( Stem("opsyn"), "opsyn");});
test("opsynet -> opsyn", function() {deepEqual( Stem("opsynet"), "opsyn");});
test("opsynsman -> opsynsman", function() {deepEqual( Stem("opsynsman"), "opsynsman");});
test("opsynsmand -> opsynsmand", function() {deepEqual( Stem("opsynsmand"), "opsynsmand");});
test("opsynsmanden -> opsynsmand", function() {deepEqual( Stem("opsynsmanden"), "opsynsmand");});
test("opsynsmænd -> opsynsmænd", function() {deepEqual( Stem("opsynsmænd"), "opsynsmænd");});
test("opsætter -> opsæt", function() {deepEqual( Stem("opsætter"), "opsæt");});
test("opsøg -> opsøg", function() {deepEqual( Stem("opsøg"), "opsøg");});
test("opsøge -> opsøg", function() {deepEqual( Stem("opsøge"), "opsøg");});
test("opsøger -> opsøg", function() {deepEqual( Stem("opsøger"), "opsøg");});
test("opsøgte -> opsøg", function() {deepEqual( Stem("opsøgte"), "opsøg");});
test("optag -> optag", function() {deepEqual( Stem("optag"), "optag");});
test("optage -> optag", function() {deepEqual( Stem("optage"), "optag");});
test("optagelses -> optag", function() {deepEqual( Stem("optagelses"), "optag");});
test("optagen -> optag", function() {deepEqual( Stem("optagen"), "optag");});
test("optages -> optag", function() {deepEqual( Stem("optages"), "optag");});
test("optaget -> optag", function() {deepEqual( Stem("optaget"), "optag");});
test("optalt -> optalt", function() {deepEqual( Stem("optalt"), "optalt");});
test("optalte -> optalt", function() {deepEqual( Stem("optalte"), "optalt");});
test("optaltes -> optalt", function() {deepEqual( Stem("optaltes"), "optalt");});
test("optegn -> optegn", function() {deepEqual( Stem("optegn"), "optegn");});
test("optegne -> optegn", function() {deepEqual( Stem("optegne"), "optegn");});
test("optegned -> optegned", function() {deepEqual( Stem("optegned"), "optegned");});
test("optegnede -> optegned", function() {deepEqual( Stem("optegnede"), "optegned");});
test("optegnedes -> optegned", function() {deepEqual( Stem("optegnedes"), "optegned");});
test("optegnes -> optegn", function() {deepEqual( Stem("optegnes"), "optegn");});
test("optegnet -> optegn", function() {deepEqual( Stem("optegnet"), "optegn");});
test("optegoet -> optego", function() {deepEqual( Stem("optegoet"), "optego");});
test("optog -> optog", function() {deepEqual( Stem("optog"), "optog");});
test("optoge -> optog", function() {deepEqual( Stem("optoge"), "optog");});
test("optrådt -> optråd", function() {deepEqual( Stem("optrådt"), "optråd");});
test("optrådte -> optråd", function() {deepEqual( Stem("optrådte"), "optråd");});
test("optræde -> optræd", function() {deepEqual( Stem("optræde"), "optræd");});
test("optræden -> optræd", function() {deepEqual( Stem("optræden"), "optræd");});
test("optræder -> optræd", function() {deepEqual( Stem("optræder"), "optræd");});
test("optræk -> optræk", function() {deepEqual( Stem("optræk"), "optræk");});
test("optugtelse -> optug", function() {deepEqual( Stem("optugtelse"), "optug");});
test("optugter -> optug", function() {deepEqual( Stem("optugter"), "optug");});
test("optugtere -> optug", function() {deepEqual( Stem("optugtere"), "optug");});
test("optælling -> optælling", function() {deepEqual( Stem("optælling"), "optælling");});
test("optænde -> optænd", function() {deepEqual( Stem("optænde"), "optænd");});
test("optænder -> optænd", function() {deepEqual( Stem("optænder"), "optænd");});
test("optændt -> optænd", function() {deepEqual( Stem("optændt"), "optænd");});
test("optændtes -> optænd", function() {deepEqual( Stem("optændtes"), "optænd");});
test("optænker -> optænk", function() {deepEqual( Stem("optænker"), "optænk");});
test("opvakt -> opvak", function() {deepEqual( Stem("opvakt"), "opvak");});
test("opvarte -> opvart", function() {deepEqual( Stem("opvarte"), "opvart");});
test("opvartning -> opvartning", function() {deepEqual( Stem("opvartning"), "opvartning");});
test("opvejed -> opvejed", function() {deepEqual( Stem("opvejed"), "opvejed");});
test("opvejer -> opvej", function() {deepEqual( Stem("opvejer"), "opvej");});
test("opvejes -> opvej", function() {deepEqual( Stem("opvejes"), "opvej");});
test("opvokse -> opvoks", function() {deepEqual( Stem("opvokse"), "opvoks");});
test("opvække -> opvæk", function() {deepEqual( Stem("opvække"), "opvæk");});
test("opvækker -> opvæk", function() {deepEqual( Stem("opvækker"), "opvæk");});
test("opvækst -> opvækst", function() {deepEqual( Stem("opvækst"), "opvækst");});
test("opåd -> opåd", function() {deepEqual( Stem("opåd"), "opåd");});
test("opæde -> opæd", function() {deepEqual( Stem("opæde"), "opæd");});
test("opæder -> opæd", function() {deepEqual( Stem("opæder"), "opæd");});
test("opædt -> opæd", function() {deepEqual( Stem("opædt"), "opæd");});
test("ord -> ord", function() {deepEqual( Stem("ord"), "ord");});
test("orde -> ord", function() {deepEqual( Stem("orde"), "ord");});
test("orden -> ord", function() {deepEqual( Stem("orden"), "ord");});
test("ordene -> ord", function() {deepEqual( Stem("ordene"), "ord");});
test("ordens -> ord", function() {deepEqual( Stem("ordens"), "ord");});
test("ordet -> ord", function() {deepEqual( Stem("ordet"), "ord");});
test("ordets -> ord", function() {deepEqual( Stem("ordets"), "ord");});
test("ordgyder -> ordgyd", function() {deepEqual( Stem("ordgyder"), "ordgyd");});
test("ordkampe -> ordkamp", function() {deepEqual( Stem("ordkampe"), "ordkamp");});
test("ordkæmper -> ordkæmp", function() {deepEqual( Stem("ordkæmper"), "ordkæmp");});
test("ordne -> ordn", function() {deepEqual( Stem("ordne"), "ordn");});
test("ordnede -> ordned", function() {deepEqual( Stem("ordnede"), "ordned");});
test("ordnedes -> ordned", function() {deepEqual( Stem("ordnedes"), "ordned");});
test("ordning -> ordning", function() {deepEqual( Stem("ordning"), "ordning");});
test("ordningen -> ordning", function() {deepEqual( Stem("ordningen"), "ordning");});
test("ordninger -> ordning", function() {deepEqual( Stem("ordninger"), "ordning");});
test("ordnings -> ordning", function() {deepEqual( Stem("ordnings"), "ordning");});
test("ordre -> ordr", function() {deepEqual( Stem("ordre"), "ordr");});
test("ords -> ord", function() {deepEqual( Stem("ords"), "ord");});
test("ordskifte -> ordskift", function() {deepEqual( Stem("ordskifte"), "ordskift");});
test("ordsprog -> ordsprog", function() {deepEqual( Stem("ordsprog"), "ordsprog");});
test("ordsprogene -> ordsprog", function() {deepEqual( Stem("ordsprogene"), "ordsprog");});
test("ordstrid -> ordstrid", function() {deepEqual( Stem("ordstrid"), "ordstrid");});
test("ordveksel -> ordveksel", function() {deepEqual( Stem("ordveksel"), "ordveksel");});
test("oreb -> oreb", function() {deepEqual( Stem("oreb"), "oreb");});
test("orebs -> oreb", function() {deepEqual( Stem("orebs"), "oreb");});
test("oren -> oren", function() {deepEqual( Stem("oren"), "oren");});
test("orion -> orion", function() {deepEqual( Stem("orion"), "orion");});
test("orions -> orion", function() {deepEqual( Stem("orions"), "orion");});
test("orlov -> orlov", function() {deepEqual( Stem("orlov"), "orlov");});
test("orm -> orm", function() {deepEqual( Stem("orm"), "orm");});
test("orme -> orm", function() {deepEqual( Stem("orme"), "orm");});
test("ormene -> orm", function() {deepEqual( Stem("ormene"), "orm");});
test("ormstukken -> ormstuk", function() {deepEqual( Stem("ormstukken"), "ormstuk");});
test("ornan -> ornan", function() {deepEqual( Stem("ornan"), "ornan");});
test("ornans -> ornan", function() {deepEqual( Stem("ornans"), "ornan");});
test("oroan -> oroan", function() {deepEqual( Stem("oroan"), "oroan");});
test("orpa -> orpa", function() {deepEqual( Stem("orpa"), "orpa");});
test("oryksantiloper -> oryksantilop", function() {deepEqual( Stem("oryksantiloper"), "oryksantilop");});
test("os -> os", function() {deepEqual( Stem("os"), "os");});
test("osj -> osj", function() {deepEqual( Stem("osj"), "osj");});
test("ost -> ost", function() {deepEqual( Stem("ost"), "ost");});
test("otni -> otni", function() {deepEqual( Stem("otni"), "otni");});
test("otniel -> otniel", function() {deepEqual( Stem("otniel"), "otniel");});
test("otniels -> otniel", function() {deepEqual( Stem("otniels"), "otniel");});
test("otte -> ott", function() {deepEqual( Stem("otte"), "ott");});
test("ottende -> ott", function() {deepEqual( Stem("ottende"), "ott");});
test("ottendedagen -> ottendedag", function() {deepEqual( Stem("ottendedagen"), "ottendedag");});
test("oven -> oven", function() {deepEqual( Stem("oven"), "oven");});
test("ovenfor -> ovenfor", function() {deepEqual( Stem("ovenfor"), "ovenfor");});
test("ovenfra -> ovenfra", function() {deepEqual( Stem("ovenfra"), "ovenfra");});
test("ovenover -> ovenov", function() {deepEqual( Stem("ovenover"), "ovenov");});
test("ovenpå -> ovenpå", function() {deepEqual( Stem("ovenpå"), "ovenpå");});
test("oventil -> oventil", function() {deepEqual( Stem("oventil"), "oventil");});
test("ovenud -> ovenud", function() {deepEqual( Stem("ovenud"), "ovenud");});
test("over -> over", function() {deepEqual( Stem("over"), "over");});
test("overalt -> overalt", function() {deepEqual( Stem("overalt"), "overalt");});
test("overanstrenger -> overanstreng", function() {deepEqual( Stem("overanstrenger"), "overanstreng");});
test("overbageren -> overbag", function() {deepEqual( Stem("overbageren"), "overbag");});
test("overbagerens -> overbag", function() {deepEqual( Stem("overbagerens"), "overbag");});
test("overbefalingen -> overbefaling", function() {deepEqual( Stem("overbefalingen"), "overbefaling");});
test("overbevise -> overbevis", function() {deepEqual( Stem("overbevise"), "overbevis");});
test("overbevises -> overbevis", function() {deepEqual( Stem("overbevises"), "overbevis");});
test("overbevisning -> overbevisning", function() {deepEqual( Stem("overbevisning"), "overbevisning");});
test("overbevist -> overbevist", function() {deepEqual( Stem("overbevist"), "overbevist");});
test("overbeviste -> overbevist", function() {deepEqual( Stem("overbeviste"), "overbevist");});
test("overblevne -> overblevn", function() {deepEqual( Stem("overblevne"), "overblevn");});
test("overbragte -> overbrag", function() {deepEqual( Stem("overbragte"), "overbrag");});
test("overdommere -> overdom", function() {deepEqual( Stem("overdommere"), "overdom");});
test("overdommerne -> overdom", function() {deepEqual( Stem("overdommerne"), "overdom");});
test("overdrag -> overdrag", function() {deepEqual( Stem("overdrag"), "overdrag");});
test("overdrage -> overdrag", function() {deepEqual( Stem("overdrage"), "overdrag");});
test("overdrager -> overdrag", function() {deepEqual( Stem("overdrager"), "overdrag");});
test("overdrages -> overdrag", function() {deepEqual( Stem("overdrages"), "overdrag");});
test("overdraget -> overdrag", function() {deepEqual( Stem("overdraget"), "overdrag");});
test("overdrev -> overdrev", function() {deepEqual( Stem("overdrev"), "overdrev");});
test("overdrog -> overdrog", function() {deepEqual( Stem("overdrog"), "overdrog");});
test("overdtrærdselser -> overdtrærds", function() {deepEqual( Stem("overdtrærdselser"), "overdtrærds");});
test("overdækkede -> overdækked", function() {deepEqual( Stem("overdækkede"), "overdækked");});
test("overengelen -> overengel", function() {deepEqual( Stem("overengelen"), "overengel");});
test("overengels -> overengel", function() {deepEqual( Stem("overengels"), "overengel");});
test("overens -> over", function() {deepEqual( Stem("overens"), "over");});
test("overenskomst -> overenskomst", function() {deepEqual( Stem("overenskomst"), "overenskomst");});
test("overenskomsten -> overenskomst", function() {deepEqual( Stem("overenskomsten"), "overenskomst");});
test("overensstemmelse -> overensstem", function() {deepEqual( Stem("overensstemmelse"), "overensstem");});
test("overensstemmende -> overensstem", function() {deepEqual( Stem("overensstemmende"), "overensstem");});
test("overfald -> overfald", function() {deepEqual( Stem("overfald"), "overfald");});
test("overfalde -> overfald", function() {deepEqual( Stem("overfalde"), "overfald");});
test("overfalder -> overfald", function() {deepEqual( Stem("overfalder"), "overfald");});
test("overfaldt -> overfald", function() {deepEqual( Stem("overfaldt"), "overfald");});
test("overflade -> overflad", function() {deepEqual( Stem("overflade"), "overflad");});
test("overfladen -> overflad", function() {deepEqual( Stem("overfladen"), "overflad");});
test("overflod -> overflod", function() {deepEqual( Stem("overflod"), "overflod");});
test("overfloden -> overflod", function() {deepEqual( Stem("overfloden"), "overflod");});
test("overflodens -> overflod", function() {deepEqual( Stem("overflodens"), "overflod");});
test("overflødig -> overflød", function() {deepEqual( Stem("overflødig"), "overflød");});
test("overflødige -> overflød", function() {deepEqual( Stem("overflødige"), "overflød");});
test("overflødighed -> overflød", function() {deepEqual( Stem("overflødighed"), "overflød");});
test("overflødigt -> overflød", function() {deepEqual( Stem("overflødigt"), "overflød");});
test("overfoged -> overfoged", function() {deepEqual( Stem("overfoged"), "overfoged");});
test("overfogeder -> overfoged", function() {deepEqual( Stem("overfogeder"), "overfoged");});
test("overfogederne -> overfoged", function() {deepEqual( Stem("overfogederne"), "overfoged");});
test("overfor -> overfor", function() {deepEqual( Stem("overfor"), "overfor");});
test("overfusede -> overfused", function() {deepEqual( Stem("overfusede"), "overfused");});
test("overgangen -> overgang", function() {deepEqual( Stem("overgangen"), "overgang");});
test("overgangsstederne -> overgangssted", function() {deepEqual( Stem("overgangsstederne"), "overgangssted");});
test("overgav -> overgav", function() {deepEqual( Stem("overgav"), "overgav");});
test("overgave -> overgav", function() {deepEqual( Stem("overgave"), "overgav");});
test("overgaves -> overgav", function() {deepEqual( Stem("overgaves"), "overgav");});
test("overgik -> overgik", function() {deepEqual( Stem("overgik"), "overgik");});
test("overgiv -> overgiv", function() {deepEqual( Stem("overgiv"), "overgiv");});
test("overgive -> overgiv", function() {deepEqual( Stem("overgive"), "overgiv");});
test("overgiven -> overgiv", function() {deepEqual( Stem("overgiven"), "overgiv");});
test("overgiver -> overgiv", function() {deepEqual( Stem("overgiver"), "overgiv");});
test("overgives -> overgiv", function() {deepEqual( Stem("overgives"), "overgiv");});
test("overgivet -> overgiv", function() {deepEqual( Stem("overgivet"), "overgiv");});
test("overgivne -> overgivn", function() {deepEqual( Stem("overgivne"), "overgivn");});
test("overgreb -> overgreb", function() {deepEqual( Stem("overgreb"), "overgreb");});
test("overgroet -> overgro", function() {deepEqual( Stem("overgroet"), "overgro");});
test("overgå -> overgå", function() {deepEqual( Stem("overgå"), "overgå");});
test("overgået -> overgå", function() {deepEqual( Stem("overgået"), "overgå");});
test("overgår -> overgår", function() {deepEqual( Stem("overgår"), "overgår");});
test("overhans -> overhan", function() {deepEqual( Stem("overhans"), "overhan");});
test("overherre -> overher", function() {deepEqual( Stem("overherre"), "overher");});
test("overherredømme -> overherredøm", function() {deepEqual( Stem("overherredømme"), "overherredøm");});
test("overhofmanden -> overhofmand", function() {deepEqual( Stem("overhofmanden"), "overhofmand");});
test("overhofmester -> overhofmest", function() {deepEqual( Stem("overhofmester"), "overhofmest");});
test("overhofmesteren -> overhofmest", function() {deepEqual( Stem("overhofmesteren"), "overhofmest");});
test("overholde -> overhold", function() {deepEqual( Stem("overholde"), "overhold");});
test("overholder -> overhold", function() {deepEqual( Stem("overholder"), "overhold");});
test("overholdt -> overhold", function() {deepEqual( Stem("overholdt"), "overhold");});
test("overhoved -> overhoved", function() {deepEqual( Stem("overhoved"), "overhoved");});
test("overhoveder -> overhoved", function() {deepEqual( Stem("overhoveder"), "overhoved");});
test("overhovederfor -> overhovederfor", function() {deepEqual( Stem("overhovederfor"), "overhovederfor");});
test("overhovederne -> overhoved", function() {deepEqual( Stem("overhovederne"), "overhoved");});
test("overhovedet -> overhoved", function() {deepEqual( Stem("overhovedet"), "overhoved");});
test("overhyrden -> overhyrd", function() {deepEqual( Stem("overhyrden"), "overhyrd");});
test("overhånd -> overhånd", function() {deepEqual( Stem("overhånd"), "overhånd");});
test("overhøre -> overhør", function() {deepEqual( Stem("overhøre"), "overhør");});
test("overhørig -> overhør", function() {deepEqual( Stem("overhørig"), "overhør");});
test("overilet -> overil", function() {deepEqual( Stem("overilet"), "overil");});
test("overkjortel -> overkjortel", function() {deepEqual( Stem("overkjortel"), "overkjortel");});
test("overklædes -> overklæd", function() {deepEqual( Stem("overklædes"), "overklæd");});
test("overkomme -> overkom", function() {deepEqual( Stem("overkomme"), "overkom");});
test("overlad -> overlad", function() {deepEqual( Stem("overlad"), "overlad");});
test("overlade -> overlad", function() {deepEqual( Stem("overlade"), "overlad");});
test("overlader -> overlad", function() {deepEqual( Stem("overlader"), "overlad");});
test("overlades -> overlad", function() {deepEqual( Stem("overlades"), "overlad");});
test("overladt -> overlad", function() {deepEqual( Stem("overladt"), "overlad");});
test("overlast -> overlast", function() {deepEqual( Stem("overlast"), "overlast");});
test("overlegne -> overlegn", function() {deepEqual( Stem("overlegne"), "overlegn");});
test("overlevede -> overleved", function() {deepEqual( Stem("overlevede"), "overleved");});
test("overleverede -> overlev", function() {deepEqual( Stem("overleverede"), "overlev");});
test("overleveret -> overlev", function() {deepEqual( Stem("overleveret"), "overlev");});
test("overlevering -> overlevering", function() {deepEqual( Stem("overlevering"), "overlevering");});
test("overleveringer -> overlevering", function() {deepEqual( Stem("overleveringer"), "overlevering");});
test("overleveringerne -> overlevering", function() {deepEqual( Stem("overleveringerne"), "overlevering");});
test("overleverings -> overlevering", function() {deepEqual( Stem("overleverings"), "overlevering");});
test("overliggeren -> overlig", function() {deepEqual( Stem("overliggeren"), "overlig");});
test("overliste -> overlist", function() {deepEqual( Stem("overliste"), "overlist");});
test("overlisted -> overlisted", function() {deepEqual( Stem("overlisted"), "overlisted");});
test("overlod -> overlod", function() {deepEqual( Stem("overlod"), "overlod");});
test("overlodes -> overlod", function() {deepEqual( Stem("overlodes"), "overlod");});
test("overlæg -> overlæg", function() {deepEqual( Stem("overlæg"), "overlæg");});
test("overlægge -> overlæg", function() {deepEqual( Stem("overlægge"), "overlæg");});
test("overløb -> overløb", function() {deepEqual( Stem("overløb"), "overløb");});
test("overløberne -> overløb", function() {deepEqual( Stem("overløberne"), "overløb");});
test("overmand -> overmand", function() {deepEqual( Stem("overmand"), "overmand");});
test("overmande -> overmand", function() {deepEqual( Stem("overmande"), "overmand");});
test("overmandede -> overmanded", function() {deepEqual( Stem("overmandede"), "overmanded");});
test("overmod -> overmod", function() {deepEqual( Stem("overmod"), "overmod");});
test("overmodet -> overmod", function() {deepEqual( Stem("overmodet"), "overmod");});
test("overmodig -> overmod", function() {deepEqual( Stem("overmodig"), "overmod");});
test("overmodige -> overmod", function() {deepEqual( Stem("overmodige"), "overmod");});
test("overmodigt -> overmod", function() {deepEqual( Stem("overmodigt"), "overmod");});
test("overmods -> overmod", function() {deepEqual( Stem("overmods"), "overmod");});
test("overmorgen -> overmorg", function() {deepEqual( Stem("overmorgen"), "overmorg");});
test("overmundskænken -> overmundskænk", function() {deepEqual( Stem("overmundskænken"), "overmundskænk");});
test("overmundskænkens -> overmundskænk", function() {deepEqual( Stem("overmundskænkens"), "overmundskænk");});
test("overmåde -> overmåd", function() {deepEqual( Stem("overmåde"), "overmåd");});
test("overmål -> overmål", function() {deepEqual( Stem("overmål"), "overmål");});
test("overmæt -> overmæt", function() {deepEqual( Stem("overmæt"), "overmæt");});
test("overmætte -> overmæt", function() {deepEqual( Stem("overmætte"), "overmæt");});
test("overnat -> overnat", function() {deepEqual( Stem("overnat"), "overnat");});
test("overnatte -> overnat", function() {deepEqual( Stem("overnatte"), "overnat");});
test("overnattede -> overnatted", function() {deepEqual( Stem("overnattede"), "overnatted");});
test("overopsynsmand -> overopsynsmand", function() {deepEqual( Stem("overopsynsmand"), "overopsynsmand");});
test("overopsynsmænd -> overopsynsmænd", function() {deepEqual( Stem("overopsynsmænd"), "overopsynsmænd");});
test("overopsynsmændene -> overopsynsmænd", function() {deepEqual( Stem("overopsynsmændene"), "overopsynsmænd");});
test("overordnede -> overordned", function() {deepEqual( Stem("overordnede"), "overordned");});
test("overraske -> overrask", function() {deepEqual( Stem("overraske"), "overrask");});
test("overrasket -> overrask", function() {deepEqual( Stem("overrasket"), "overrask");});
test("oversat -> oversat", function() {deepEqual( Stem("oversat"), "oversat");});
test("overse -> overs", function() {deepEqual( Stem("overse"), "overs");});
test("overses -> overs", function() {deepEqual( Stem("overses"), "overs");});
test("oversete -> overset", function() {deepEqual( Stem("oversete"), "overset");});
test("overskar -> overskar", function() {deepEqual( Stem("overskar"), "overskar");});
test("overskred -> overskred", function() {deepEqual( Stem("overskred"), "overskred");});
test("overskride -> overskrid", function() {deepEqual( Stem("overskride"), "overskrid");});
test("overskrider -> overskrid", function() {deepEqual( Stem("overskrider"), "overskrid");});
test("overskrift -> overskrift", function() {deepEqual( Stem("overskrift"), "overskrift");});
test("overskriften -> overskrift", function() {deepEqual( Stem("overskriften"), "overskrift");});
test("overskud -> overskud", function() {deepEqual( Stem("overskud"), "overskud");});
test("overskuede -> overskued", function() {deepEqual( Stem("overskuede"), "overskued");});
test("overskydende -> overskyd", function() {deepEqual( Stem("overskydende"), "overskyd");});
test("overskygge -> overskyg", function() {deepEqual( Stem("overskygge"), "overskyg");});
test("overskyggede -> overskygged", function() {deepEqual( Stem("overskyggede"), "overskygged");});
test("overskyllede -> overskylled", function() {deepEqual( Stem("overskyllede"), "overskylled");});
test("overskyller -> overskyl", function() {deepEqual( Stem("overskyller"), "overskyl");});
test("overskyllet -> overskyl", function() {deepEqual( Stem("overskyllet"), "overskyl");});
test("overstiger -> overst", function() {deepEqual( Stem("overstiger"), "overst");});
test("overstryge -> overstryg", function() {deepEqual( Stem("overstryge"), "overstryg");});
test("overstråle -> overstrål", function() {deepEqual( Stem("overstråle"), "overstrål");});
test("overstrømmende -> overstrøm", function() {deepEqual( Stem("overstrømmende"), "overstrøm");});
test("oversvømme -> oversvøm", function() {deepEqual( Stem("oversvømme"), "oversvøm");});
test("oversvømmede -> oversvømmed", function() {deepEqual( Stem("oversvømmede"), "oversvømmed");});
test("oversvømmelse -> oversvøm", function() {deepEqual( Stem("oversvømmelse"), "oversvøm");});
test("oversvømmer -> oversvøm", function() {deepEqual( Stem("oversvømmer"), "oversvøm");});
test("oversvømmet -> oversvøm", function() {deepEqual( Stem("oversvømmet"), "oversvøm");});
test("overtage -> overtag", function() {deepEqual( Stem("overtage"), "overtag");});
test("overtaget -> overtag", function() {deepEqual( Stem("overtaget"), "overtag");});
test("overtale -> overtal", function() {deepEqual( Stem("overtale"), "overtal");});
test("overtalelse -> overtal", function() {deepEqual( Stem("overtalelse"), "overtal");});
test("overtalende -> overtal", function() {deepEqual( Stem("overtalende"), "overtal");});
test("overtaler -> overtal", function() {deepEqual( Stem("overtaler"), "overtal");});
test("overtales -> overtal", function() {deepEqual( Stem("overtales"), "overtal");});
test("overtalt -> overtalt", function() {deepEqual( Stem("overtalt"), "overtalt");});
test("overtalte -> overtalt", function() {deepEqual( Stem("overtalte"), "overtalt");});
test("overtog -> overtog", function() {deepEqual( Stem("overtog"), "overtog");});
test("overtolder -> overtold", function() {deepEqual( Stem("overtolder"), "overtold");});
test("overtrak -> overtrak", function() {deepEqual( Stem("overtrak"), "overtrak");});
test("overtrukket -> overtruk", function() {deepEqual( Stem("overtrukket"), "overtruk");});
test("overtrukne -> overtrukn", function() {deepEqual( Stem("overtrukne"), "overtrukn");});
test("overtrådt -> overtråd", function() {deepEqual( Stem("overtrådt"), "overtråd");});
test("overtrådte -> overtråd", function() {deepEqual( Stem("overtrådte"), "overtråd");});
test("overtræde -> overtræd", function() {deepEqual( Stem("overtræde"), "overtræd");});
test("overtrædelse -> overtræd", function() {deepEqual( Stem("overtrædelse"), "overtræd");});
test("overtrædelsen -> overtræd", function() {deepEqual( Stem("overtrædelsen"), "overtræd");});
test("overtrædelser -> overtræd", function() {deepEqual( Stem("overtrædelser"), "overtræd");});
test("overtrædelserne -> overtræd", function() {deepEqual( Stem("overtrædelserne"), "overtræd");});
test("overtrædelsernes -> overtræd", function() {deepEqual( Stem("overtrædelsernes"), "overtræd");});
test("overtrædelsers -> overtræd", function() {deepEqual( Stem("overtrædelsers"), "overtræd");});
test("overtræder -> overtræd", function() {deepEqual( Stem("overtræder"), "overtræd");});
test("overtrædere -> overtræd", function() {deepEqual( Stem("overtrædere"), "overtræd");});
test("overtræderne -> overtræd", function() {deepEqual( Stem("overtræderne"), "overtræd");});
test("overtræk -> overtræk", function() {deepEqual( Stem("overtræk"), "overtræk");});
test("overtrække -> overtræk", function() {deepEqual( Stem("overtrække"), "overtræk");});
test("overtrækker -> overtræk", function() {deepEqual( Stem("overtrækker"), "overtræk");});
test("overtrækket -> overtræk", function() {deepEqual( Stem("overtrækket"), "overtræk");});
test("overtænke -> overtænk", function() {deepEqual( Stem("overtænke"), "overtænk");});
test("overtænker -> overtænk", function() {deepEqual( Stem("overtænker"), "overtænk");});
test("overtænkt -> overtænk", function() {deepEqual( Stem("overtænkt"), "overtænk");});
test("overtænkte -> overtænk", function() {deepEqual( Stem("overtænkte"), "overtænk");});
test("overvandt -> overvand", function() {deepEqual( Stem("overvandt"), "overvand");});
test("overvej -> overvej", function() {deepEqual( Stem("overvej"), "overvej");});
test("overvejede -> overvejed", function() {deepEqual( Stem("overvejede"), "overvejed");});
test("overvejet -> overvej", function() {deepEqual( Stem("overvejet"), "overvej");});
test("overvind -> overvind", function() {deepEqual( Stem("overvind"), "overvind");});
test("overvinde -> overvind", function() {deepEqual( Stem("overvinde"), "overvind");});
test("overvinder -> overvind", function() {deepEqual( Stem("overvinder"), "overvind");});
test("overvindes -> overvind", function() {deepEqual( Stem("overvindes"), "overvind");});
test("overvintre -> overvintr", function() {deepEqual( Stem("overvintre"), "overvintr");});
test("overvunden -> overvund", function() {deepEqual( Stem("overvunden"), "overvund");});
test("overvundet -> overvund", function() {deepEqual( Stem("overvundet"), "overvund");});
test("overvælde -> overvæld", function() {deepEqual( Stem("overvælde"), "overvæld");});
test("overvældede -> overvælded", function() {deepEqual( Stem("overvældede"), "overvælded");});
test("overvældedes -> overvælded", function() {deepEqual( Stem("overvældedes"), "overvælded");});
test("overvældet -> overvæld", function() {deepEqual( Stem("overvældet"), "overvæld");});
test("overværelse -> overvær", function() {deepEqual( Stem("overværelse"), "overvær");});
test("overvættes -> overvæt", function() {deepEqual( Stem("overvættes"), "overvæt");});
test("overøser -> overøs", function() {deepEqual( Stem("overøser"), "overøs");});
test("ovn -> ovn", function() {deepEqual( Stem("ovn"), "ovn");});
test("ovne -> ovn", function() {deepEqual( Stem("ovne"), "ovn");});
test("ovnen -> ovn", function() {deepEqual( Stem("ovnen"), "ovn");});
test("ovns -> ovn", function() {deepEqual( Stem("ovns"), "ovn");});
test("ovntårnet -> ovntårn", function() {deepEqual( Stem("ovntårnet"), "ovntårn");});
test("ovre -> ovr", function() {deepEqual( Stem("ovre"), "ovr");});
test("ozem -> ozem", function() {deepEqual( Stem("ozem"), "ozem");});
test("ozias -> ozia", function() {deepEqual( Stem("ozias"), "ozia");});
test("ozni -> ozni", function() {deepEqual( Stem("ozni"), "ozni");});
test("ozniternes -> oznit", function() {deepEqual( Stem("ozniternes"), "oznit");});
test("p -> p", function() {deepEqual( Stem("p"), "p");});
test("pa -> pa", function() {deepEqual( Stem("pa"), "pa");});
test("paddan -> paddan", function() {deepEqual( Stem("paddan"), "paddan");});
test("padder -> pad", function() {deepEqual( Stem("padder"), "pad");});
test("pader -> pad", function() {deepEqual( Stem("pader"), "pad");});
test("padons -> padon", function() {deepEqual( Stem("padons"), "padon");});
test("pafus -> pafus", function() {deepEqual( Stem("pafus"), "pafus");});
test("pagiel -> pagiel", function() {deepEqual( Stem("pagiel"), "pagiel");});
test("pagiels -> pagiel", function() {deepEqual( Stem("pagiels"), "pagiel");});
test("pagt -> pagt", function() {deepEqual( Stem("pagt"), "pagt");});
test("pagtblodets -> pagtblod", function() {deepEqual( Stem("pagtblodets"), "pagtblod");});
test("pagten -> pagt", function() {deepEqual( Stem("pagten"), "pagt");});
test("pagtens -> pagt", function() {deepEqual( Stem("pagtens"), "pagt");});
test("pagter -> pagt", function() {deepEqual( Stem("pagter"), "pagt");});
test("pagterne -> pagt", function() {deepEqual( Stem("pagterne"), "pagt");});
test("pagts -> pagt", function() {deepEqual( Stem("pagts"), "pagt");});
test("pagtsbogen -> pagtsbog", function() {deepEqual( Stem("pagtsbogen"), "pagtsbog");});
test("pagtsfyrste -> pagtsfyrst", function() {deepEqual( Stem("pagtsfyrste"), "pagtsfyrst");});
test("pagtsfæller -> pagtsfæl", function() {deepEqual( Stem("pagtsfæller"), "pagtsfæl");});
test("pagtsordene -> pagtsord", function() {deepEqual( Stem("pagtsordene"), "pagtsord");});
test("pagtspligt -> pagtsp", function() {deepEqual( Stem("pagtspligt"), "pagtsp");});
test("pagtstegn -> pagtstegn", function() {deepEqual( Stem("pagtstegn"), "pagtstegn");});
test("pahat -> pahat", function() {deepEqual( Stem("pahat"), "pahat");});
test("pakke -> pak", function() {deepEqual( Stem("pakke"), "pak");});
test("palads -> palad", function() {deepEqual( Stem("palads"), "palad");});
test("paladser -> palads", function() {deepEqual( Stem("paladser"), "palads");});
test("paladserne -> palads", function() {deepEqual( Stem("paladserne"), "palads");});
test("paladsers -> palads", function() {deepEqual( Stem("paladsers"), "palads");});
test("paladset -> palads", function() {deepEqual( Stem("paladset"), "palads");});
test("paladsets -> palads", function() {deepEqual( Stem("paladsets"), "palads");});
test("paladstelte -> paladstelt", function() {deepEqual( Stem("paladstelte"), "paladstelt");});
test("paladsøverste -> paladsøverst", function() {deepEqual( Stem("paladsøverste"), "paladsøverst");});
test("paladsøversten -> paladsøverst", function() {deepEqual( Stem("paladsøversten"), "paladsøverst");});
test("palal -> palal", function() {deepEqual( Stem("palal"), "palal");});
test("pallu -> pallu", function() {deepEqual( Stem("pallu"), "pallu");});
test("palluiternes -> palluit", function() {deepEqual( Stem("palluiternes"), "palluit");});
test("pallus -> pallus", function() {deepEqual( Stem("pallus"), "pallus");});
test("palme -> palm", function() {deepEqual( Stem("palme"), "palm");});
test("palmegren -> palmegr", function() {deepEqual( Stem("palmegren"), "palmegr");});
test("palmegrene -> palmegr", function() {deepEqual( Stem("palmegrene"), "palmegr");});
test("palmen -> palm", function() {deepEqual( Stem("palmen"), "palm");});
test("palmer -> palm", function() {deepEqual( Stem("palmer"), "palm");});
test("palmestaden -> palmestad", function() {deepEqual( Stem("palmestaden"), "palmestad");});
test("palmetræer -> palmetræ", function() {deepEqual( Stem("palmetræer"), "palmetræ");});
test("palti -> palti", function() {deepEqual( Stem("palti"), "palti");});
test("paltiel -> paltiel", function() {deepEqual( Stem("paltiel"), "paltiel");});
test("paltiten -> paltit", function() {deepEqual( Stem("paltiten"), "paltit");});
test("pamfylien -> pamfyli", function() {deepEqual( Stem("pamfylien"), "pamfyli");});
test("pande -> pand", function() {deepEqual( Stem("pande"), "pand");});
test("pandebånd -> pandebånd", function() {deepEqual( Stem("pandebånd"), "pandebånd");});
test("pandefuld -> pandefuld", function() {deepEqual( Stem("pandefuld"), "pandefuld");});
test("panden -> pand", function() {deepEqual( Stem("panden"), "pand");});
test("pandeplade -> pandeplad", function() {deepEqual( Stem("pandeplade"), "pandeplad");});
test("pandepladen -> pandeplad", function() {deepEqual( Stem("pandepladen"), "pandeplad");});
test("pander -> pand", function() {deepEqual( Stem("pander"), "pand");});
test("panderne -> pand", function() {deepEqual( Stem("panderne"), "pand");});
test("pandeskaldet -> pandeskald", function() {deepEqual( Stem("pandeskaldet"), "pandeskald");});
test("panea -> panea", function() {deepEqual( Stem("panea"), "panea");});
test("panelet -> panel", function() {deepEqual( Stem("panelet"), "panel");});
test("panser -> pans", function() {deepEqual( Stem("panser"), "pans");});
test("pansere -> pans", function() {deepEqual( Stem("pansere"), "pans");});
test("panserskjorte -> panserskjort", function() {deepEqual( Stem("panserskjorte"), "panserskjort");});
test("pant -> pant", function() {deepEqual( Stem("pant"), "pant");});
test("pantede -> panted", function() {deepEqual( Stem("pantede"), "panted");});
test("pantegods -> pantegod", function() {deepEqual( Stem("pantegods"), "pantegod");});
test("panter -> pant", function() {deepEqual( Stem("panter"), "pant");});
test("pantere -> pant", function() {deepEqual( Stem("pantere"), "pant");});
test("panteren -> pant", function() {deepEqual( Stem("panteren"), "pant");});
test("panteres -> pant", function() {deepEqual( Stem("panteres"), "pant");});
test("pantet -> pant", function() {deepEqual( Stem("pantet"), "pant");});
test("papir -> papir", function() {deepEqual( Stem("papir"), "papir");});
test("papyrusrør -> papyrusrør", function() {deepEqual( Stem("papyrusrør"), "papyrusrør");});
test("par -> par", function() {deepEqual( Stem("par"), "par");});
test("para -> para", function() {deepEqual( Stem("para"), "para");});
test("paradis -> paradis", function() {deepEqual( Stem("paradis"), "paradis");});
test("paradiset -> paradis", function() {deepEqual( Stem("paradiset"), "paradis");});
test("paran -> paran", function() {deepEqual( Stem("paran"), "paran");});
test("parans -> paran", function() {deepEqual( Stem("parans"), "paran");});
test("parao -> parao", function() {deepEqual( Stem("parao"), "parao");});
test("parbar -> parbar", function() {deepEqual( Stem("parbar"), "parbar");});
test("park -> park", function() {deepEqual( Stem("park"), "park");});
test("parken -> park", function() {deepEqual( Stem("parken"), "park");});
test("parmasjta -> parmasjta", function() {deepEqual( Stem("parmasjta"), "parmasjta");});
test("parmenas -> parmena", function() {deepEqual( Stem("parmenas"), "parmena");});
test("parnaks -> parnak", function() {deepEqual( Stem("parnaks"), "parnak");});
test("parpar -> parpar", function() {deepEqual( Stem("parpar"), "parpar");});
test("parre -> par", function() {deepEqual( Stem("parre"), "par");});
test("parrede -> parred", function() {deepEqual( Stem("parrede"), "parred");});
test("parsjandata -> parsjandata", function() {deepEqual( Stem("parsjandata"), "parsjandata");});
test("part -> part", function() {deepEqual( Stem("part"), "part");});
test("parter -> part", function() {deepEqual( Stem("parter"), "part");});
test("parterne -> part", function() {deepEqual( Stem("parterne"), "part");});
test("parters -> part", function() {deepEqual( Stem("parters"), "part");});
test("parthere -> parth", function() {deepEqual( Stem("parthere"), "parth");});
test("parti -> parti", function() {deepEqual( Stem("parti"), "parti");});
test("partier -> parti", function() {deepEqual( Stem("partier"), "parti");});
test("partisk -> partisk", function() {deepEqual( Stem("partisk"), "partisk");});
test("partiske -> partisk", function() {deepEqual( Stem("partiske"), "partisk");});
test("partiskhed -> partisk", function() {deepEqual( Stem("partiskhed"), "partisk");});
test("paruas -> parua", function() {deepEqual( Stem("paruas"), "parua");});
test("parvajimguld -> parvajimguld", function() {deepEqual( Stem("parvajimguld"), "parvajimguld");});
test("parvarim -> parvarim", function() {deepEqual( Stem("parvarim"), "parvarim");});
test("pas -> pas", function() {deepEqual( Stem("pas"), "pas");});
test("pasak -> pasak", function() {deepEqual( Stem("pasak"), "pasak");});
test("pasdammim -> pasdammim", function() {deepEqual( Stem("pasdammim"), "pasdammim");});
test("pasea -> pasea", function() {deepEqual( Stem("pasea"), "pasea");});
test("paseas -> pasea", function() {deepEqual( Stem("paseas"), "pasea");});
test("pasjhur -> pasjhur", function() {deepEqual( Stem("pasjhur"), "pasjhur");});
test("pasjhurs -> pasjhur", function() {deepEqual( Stem("pasjhurs"), "pasjhur");});
test("passe -> pas", function() {deepEqual( Stem("passe"), "pas");});
test("passede -> passed", function() {deepEqual( Stem("passede"), "passed");});
test("passer -> pas", function() {deepEqual( Stem("passer"), "pas");});
test("passet -> pas", function() {deepEqual( Stem("passet"), "pas");});
test("patara -> patara", function() {deepEqual( Stem("patara"), "patara");});
test("patmos -> patmo", function() {deepEqual( Stem("patmos"), "patmo");});
test("patriarken -> patriark", function() {deepEqual( Stem("patriarken"), "patriark");});
test("patriarker -> patriark", function() {deepEqual( Stem("patriarker"), "patriark");});
test("patriarkerne -> patriark", function() {deepEqual( Stem("patriarkerne"), "patriark");});
test("patrobas -> patroba", function() {deepEqual( Stem("patrobas"), "patroba");});
test("patros -> patro", function() {deepEqual( Stem("patros"), "patro");});
test("patruserne -> patrus", function() {deepEqual( Stem("patruserne"), "patrus");});
test("pau -> pau", function() {deepEqual( Stem("pau"), "pau");});
test("pauke -> pauk", function() {deepEqual( Stem("pauke"), "pauk");});
test("pauken -> pauk", function() {deepEqual( Stem("pauken"), "pauk");});
test("pauker -> pauk", function() {deepEqual( Stem("pauker"), "pauk");});
test("paukers -> pauk", function() {deepEqual( Stem("paukers"), "pauk");});
test("pauluner -> paulun", function() {deepEqual( Stem("pauluner"), "paulun");});
test("paulus -> paulus", function() {deepEqual( Stem("paulus"), "paulus");});
test("pazzez -> pazzez", function() {deepEqual( Stem("pazzez"), "pazzez");});
test("pe -> pe", function() {deepEqual( Stem("pe"), "pe");});
test("peb -> peb", function() {deepEqual( Stem("peb"), "peb");});
test("pedael -> pedael", function() {deepEqual( Stem("pedael"), "pedael");});
test("pedaja -> pedaja", function() {deepEqual( Stem("pedaja"), "pedaja");});
test("pedajas -> pedaja", function() {deepEqual( Stem("pedajas"), "pedaja");});
test("pedazurs -> pedazur", function() {deepEqual( Stem("pedazurs"), "pedazur");});
test("pege -> peg", function() {deepEqual( Stem("pege"), "peg");});
test("pegefinger -> pegefing", function() {deepEqual( Stem("pegefinger"), "pegefing");});
test("peka -> peka", function() {deepEqual( Stem("peka"), "peka");});
test("pekaja -> pekaja", function() {deepEqual( Stem("pekaja"), "pekaja");});
test("pekas -> peka", function() {deepEqual( Stem("pekas"), "peka");});
test("pekod -> pekod", function() {deepEqual( Stem("pekod"), "pekod");});
test("pelaja -> pelaja", function() {deepEqual( Stem("pelaja"), "pelaja");});
test("pelalja -> pelalja", function() {deepEqual( Stem("pelalja"), "pelalja");});
test("pelatja -> pelatja", function() {deepEqual( Stem("pelatja"), "pelatja");});
test("peleg -> peleg", function() {deepEqual( Stem("peleg"), "peleg");});
test("pelet -> pel", function() {deepEqual( Stem("pelet"), "pel");});
test("pelikan -> pelikan", function() {deepEqual( Stem("pelikan"), "pelikan");});
test("pelikanen -> pelikan", function() {deepEqual( Stem("pelikanen"), "pelikan");});
test("peloniten -> pelonit", function() {deepEqual( Stem("peloniten"), "pelonit");});
test("pen -> pen", function() {deepEqual( Stem("pen"), "pen");});
test("penge -> peng", function() {deepEqual( Stem("penge"), "peng");});
test("pengebeløb -> pengebeløb", function() {deepEqual( Stem("pengebeløb"), "pengebeløb");});
test("pengebøde -> pengebød", function() {deepEqual( Stem("pengebøde"), "pengebød");});
test("pengegerrige -> pengeger", function() {deepEqual( Stem("pengegerrige"), "pengeger");});
test("pengegridsk -> pengegridsk", function() {deepEqual( Stem("pengegridsk"), "pengegridsk");});
test("pengegridske -> pengegridsk", function() {deepEqual( Stem("pengegridske"), "pengegridsk");});
test("pengegridskhed -> pengegridsk", function() {deepEqual( Stem("pengegridskhed"), "pengegridsk");});
test("pengegridskheden -> pengegridsk", function() {deepEqual( Stem("pengegridskheden"), "pengegridsk");});
test("pengene -> peng", function() {deepEqual( Stem("pengene"), "peng");});
test("pengeneefter -> pengeneeft", function() {deepEqual( Stem("pengeneefter"), "pengeneeft");});
test("pengepose -> pengepos", function() {deepEqual( Stem("pengepose"), "pengepos");});
test("pengeposerne -> pengepos", function() {deepEqual( Stem("pengeposerne"), "pengepos");});
test("pengepungen -> pengepung", function() {deepEqual( Stem("pengepungen"), "pengepung");});
test("penges -> peng", function() {deepEqual( Stem("penges"), "peng");});
test("pengesum -> pengesum", function() {deepEqual( Stem("pengesum"), "pengesum");});
test("peniel -> peniel", function() {deepEqual( Stem("peniel"), "peniel");});
test("peninna -> peninna", function() {deepEqual( Stem("peninna"), "peninna");});
test("pennekniv -> pennekniv", function() {deepEqual( Stem("pennekniv"), "pennekniv");});
test("penning -> penning", function() {deepEqual( Stem("penning"), "penning");});
test("penninge -> penning", function() {deepEqual( Stem("penninge"), "penning");});
test("penuel -> penuel", function() {deepEqual( Stem("penuel"), "penuel");});
test("peor -> peor", function() {deepEqual( Stem("peor"), "peor");});
test("peors -> peor", function() {deepEqual( Stem("peors"), "peor");});
test("per -> per", function() {deepEqual( Stem("per"), "per");});
test("perazim -> perazim", function() {deepEqual( Stem("perazim"), "perazim");});
test("perazims -> perazim", function() {deepEqual( Stem("perazims"), "perazim");});
test("peresj -> peresj", function() {deepEqual( Stem("peresj"), "peresj");});
test("perez -> perez", function() {deepEqual( Stem("perez"), "perez");});
test("pereziternes -> perezit", function() {deepEqual( Stem("pereziternes"), "perezit");});
test("perezs -> perez", function() {deepEqual( Stem("perezs"), "perez");});
test("pergament -> pergament", function() {deepEqual( Stem("pergament"), "pergament");});
test("pergamus -> pergamus", function() {deepEqual( Stem("pergamus"), "pergamus");});
test("perge -> perg", function() {deepEqual( Stem("perge"), "perg");});
test("peridas -> perida", function() {deepEqual( Stem("peridas"), "perida");});
test("periiterne -> periit", function() {deepEqual( Stem("periiterne"), "periit");});
test("perizzitemes -> perizzitem", function() {deepEqual( Stem("perizzitemes"), "perizzitem");});
test("perizziterne -> perizzit", function() {deepEqual( Stem("perizziterne"), "perizzit");});
test("perizziternes -> perizzit", function() {deepEqual( Stem("perizziternes"), "perizzit");});
test("perle -> perl", function() {deepEqual( Stem("perle"), "perl");});
test("perlemor -> perlemor", function() {deepEqual( Stem("perlemor"), "perlemor");});
test("perler -> perl", function() {deepEqual( Stem("perler"), "perl");});
test("perlers -> perl", function() {deepEqual( Stem("perlers"), "perl");});
test("perse -> pers", function() {deepEqual( Stem("perse"), "pers");});
test("persekar -> persekar", function() {deepEqual( Stem("persekar"), "persekar");});
test("persekarrene -> persekar", function() {deepEqual( Stem("persekarrene"), "persekar");});
test("persekarret -> persekar", function() {deepEqual( Stem("persekarret"), "persekar");});
test("persekummen -> persekum", function() {deepEqual( Stem("persekummen"), "persekum");});
test("persekummerne -> persekum", function() {deepEqual( Stem("persekummerne"), "persekum");});
test("persen -> pers", function() {deepEqual( Stem("persen"), "pers");});
test("perser -> pers", function() {deepEqual( Stem("perser"), "pers");});
test("persere -> pers", function() {deepEqual( Stem("persere"), "pers");});
test("perseren -> pers", function() {deepEqual( Stem("perseren"), "pers");});
test("perserkongen -> perserkong", function() {deepEqual( Stem("perserkongen"), "perserkong");});
test("perserkongernes -> perserkong", function() {deepEqual( Stem("perserkongernes"), "perserkong");});
test("persernes -> pers", function() {deepEqual( Stem("persernes"), "pers");});
test("perserriget -> perser", function() {deepEqual( Stem("perserriget"), "perser");});
test("perserrigets -> perser", function() {deepEqual( Stem("perserrigets"), "perser");});
test("persetræders -> persetræd", function() {deepEqual( Stem("persetræders"), "persetræd");});
test("persien -> persi", function() {deepEqual( Stem("persien"), "persi");});
test("persiens -> persi", function() {deepEqual( Stem("persiens"), "persi");});
test("persis -> persis", function() {deepEqual( Stem("persis"), "persis");});
test("persisk -> persisk", function() {deepEqual( Stem("persisk"), "persisk");});
test("persiske -> persisk", function() {deepEqual( Stem("persiske"), "persisk");});
test("person -> person", function() {deepEqual( Stem("person"), "person");});
test("personer -> person", function() {deepEqual( Stem("personer"), "person");});
test("personernes -> person", function() {deepEqual( Stem("personernes"), "person");});
test("personlig -> person", function() {deepEqual( Stem("personlig"), "person");});
test("personligt -> person", function() {deepEqual( Stem("personligt"), "person");});
test("persons -> person", function() {deepEqual( Stem("persons"), "person");});
test("personsanseelse -> personsanse", function() {deepEqual( Stem("personsanseelse"), "personsanse");});
test("perudas -> peruda", function() {deepEqual( Stem("perudas"), "peruda");});
test("pesilim -> pesilim", function() {deepEqual( Stem("pesilim"), "pesilim");});
test("pest -> pest", function() {deepEqual( Stem("pest"), "pest");});
test("pestbylder -> pestbyld", function() {deepEqual( Stem("pestbylder"), "pestbyld");});
test("pesten -> pest", function() {deepEqual( Stem("pesten"), "pest");});
test("pestglød -> pestglød", function() {deepEqual( Stem("pestglød"), "pestglød");});
test("petaja -> petaja", function() {deepEqual( Stem("petaja"), "petaja");});
test("peter -> pet", function() {deepEqual( Stem("peter"), "pet");});
test("peters -> pet", function() {deepEqual( Stem("peters"), "pet");});
test("petor -> petor", function() {deepEqual( Stem("petor"), "petor");});
test("petrus -> petrus", function() {deepEqual( Stem("petrus"), "petrus");});
test("petuels -> petuel", function() {deepEqual( Stem("petuels"), "petuel");});
test("pi -> pi", function() {deepEqual( Stem("pi"), "pi");});
test("piber -> pib", function() {deepEqual( Stem("piber"), "pib");});
test("pibeset -> pibes", function() {deepEqual( Stem("pibeset"), "pibes");});
test("pig -> pig", function() {deepEqual( Stem("pig"), "pig");});
test("pige -> pig", function() {deepEqual( Stem("pige"), "pig");});
test("pigebarn -> pigebarn", function() {deepEqual( Stem("pigebarn"), "pigebarn");});
test("pigebørn -> pigebørn", function() {deepEqual( Stem("pigebørn"), "pigebørn");});
test("pigebørnene -> pigebørn", function() {deepEqual( Stem("pigebørnene"), "pigebørn");});
test("pigen -> pig", function() {deepEqual( Stem("pigen"), "pig");});
test("pigens -> pig", function() {deepEqual( Stem("pigens"), "pig");});
test("piger -> pig", function() {deepEqual( Stem("piger"), "pig");});
test("pigerne -> pig", function() {deepEqual( Stem("pigerne"), "pig");});
test("pigers -> pig", function() {deepEqual( Stem("pigers"), "pig");});
test("pigkæppe -> pigkæp", function() {deepEqual( Stem("pigkæppe"), "pigkæp");});
test("pikol -> pikol", function() {deepEqual( Stem("pikol"), "pikol");});
test("pil -> pil", function() {deepEqual( Stem("pil"), "pil");});
test("pilatus -> pilatus", function() {deepEqual( Stem("pilatus"), "pilatus");});
test("pildasj -> pildasj", function() {deepEqual( Stem("pildasj"), "pildasj");});
test("pile -> pil", function() {deepEqual( Stem("pile"), "pil");});
test("pilekogger -> pilekog", function() {deepEqual( Stem("pilekogger"), "pilekog");});
test("pilen -> pil", function() {deepEqual( Stem("pilen"), "pil");});
test("pilene -> pil", function() {deepEqual( Stem("pilene"), "pil");});
test("pileser -> piles", function() {deepEqual( Stem("pileser"), "piles");});
test("pileskuds -> pileskud", function() {deepEqual( Stem("pileskuds"), "pileskud");});
test("pileskydning -> pileskydning", function() {deepEqual( Stem("pileskydning"), "pileskydning");});
test("pilha -> pilha", function() {deepEqual( Stem("pilha"), "pilha");});
test("piller -> pil", function() {deepEqual( Stem("piller"), "pil");});
test("pillerne -> pil", function() {deepEqual( Stem("pillerne"), "pil");});
test("pillernes -> pil", function() {deepEqual( Stem("pillernes"), "pil");});
test("pilneser -> pilnes", function() {deepEqual( Stem("pilneser"), "pilnes");});
test("pilnesers -> pilnes", function() {deepEqual( Stem("pilnesers"), "pilnes");});
test("pilslangen -> pilslang", function() {deepEqual( Stem("pilslangen"), "pilslang");});
test("piltaj -> piltaj", function() {deepEqual( Stem("piltaj"), "piltaj");});
test("pim -> pim", function() {deepEqual( Stem("pim"), "pim");});
test("pind -> pind", function() {deepEqual( Stem("pind"), "pind");});
test("pine -> pin", function() {deepEqual( Stem("pine"), "pin");});
test("pinebænk -> pinebænk", function() {deepEqual( Stem("pinebænk"), "pinebænk");});
test("pinehas -> pineha", function() {deepEqual( Stem("pinehas"), "pineha");});
test("pinehass -> pinehas", function() {deepEqual( Stem("pinehass"), "pinehas");});
test("pinen -> pin", function() {deepEqual( Stem("pinen"), "pin");});
test("piner -> pin", function() {deepEqual( Stem("piner"), "pin");});
test("pines -> pin", function() {deepEqual( Stem("pines"), "pin");});
test("pinested -> pinested", function() {deepEqual( Stem("pinested"), "pinested");});
test("pinon -> pinon", function() {deepEqual( Stem("pinon"), "pinon");});
test("pinsedagen -> pinsedag", function() {deepEqual( Stem("pinsedagen"), "pinsedag");});
test("pinsefestens -> pinsefest", function() {deepEqual( Stem("pinsefestens"), "pinsefest");});
test("pinsel -> pinsel", function() {deepEqual( Stem("pinsel"), "pinsel");});
test("pinsen -> pins", function() {deepEqual( Stem("pinsen"), "pins");});
test("pinte -> pint", function() {deepEqual( Stem("pinte"), "pint");});
test("pintes -> pint", function() {deepEqual( Stem("pintes"), "pint");});
test("pioon -> pioon", function() {deepEqual( Stem("pioon"), "pioon");});
test("pir -> pir", function() {deepEqual( Stem("pir"), "pir");});
test("piram -> piram", function() {deepEqual( Stem("piram"), "piram");});
test("piraton -> piraton", function() {deepEqual( Stem("piraton"), "piraton");});
test("pisga -> pisga", function() {deepEqual( Stem("pisga"), "pisga");});
test("pisgas -> pisga", function() {deepEqual( Stem("pisgas"), "pisga");});
test("pisidien -> pisidi", function() {deepEqual( Stem("pisidien"), "pisidi");});
test("pisjon -> pisjon", function() {deepEqual( Stem("pisjon"), "pisjon");});
test("piske -> pisk", function() {deepEqual( Stem("piske"), "pisk");});
test("piskede -> pisked", function() {deepEqual( Stem("piskede"), "pisked");});
test("pisker -> pisk", function() {deepEqual( Stem("pisker"), "pisk");});
test("piskes -> pisk", function() {deepEqual( Stem("piskes"), "pisk");});
test("pisket -> pisk", function() {deepEqual( Stem("pisket"), "pisk");});
test("pispa -> pispa", function() {deepEqual( Stem("pispa"), "pispa");});
test("pistacienødder -> pistacienød", function() {deepEqual( Stem("pistacienødder"), "pistacienød");});
test("pitom -> pitom", function() {deepEqual( Stem("pitom"), "pitom");});
test("piton -> piton", function() {deepEqual( Stem("piton"), "piton");});
test("plade -> plad", function() {deepEqual( Stem("plade"), "plad");});
test("pladen -> plad", function() {deepEqual( Stem("pladen"), "plad");});
test("plader -> plad", function() {deepEqual( Stem("plader"), "plad");});
test("pladerne -> plad", function() {deepEqual( Stem("pladerne"), "plad");});
test("plads -> plad", function() {deepEqual( Stem("plads"), "plad");});
test("pladsen -> plads", function() {deepEqual( Stem("pladsen"), "plads");});
test("pladser -> plads", function() {deepEqual( Stem("pladser"), "plads");});
test("plage -> plag", function() {deepEqual( Stem("plage"), "plag");});
test("plaged -> plaged", function() {deepEqual( Stem("plaged"), "plaged");});
test("plagede -> plaged", function() {deepEqual( Stem("plagede"), "plaged");});
test("plagedes -> plaged", function() {deepEqual( Stem("plagedes"), "plaged");});
test("plagen -> plag", function() {deepEqual( Stem("plagen"), "plag");});
test("plager -> plag", function() {deepEqual( Stem("plager"), "plag");});
test("plagere -> plag", function() {deepEqual( Stem("plagere"), "plag");});
test("plages -> plag", function() {deepEqual( Stem("plages"), "plag");});
test("plaget -> plag", function() {deepEqual( Stem("plaget"), "plag");});
test("plan -> plan", function() {deepEqual( Stem("plan"), "plan");});
test("plandte -> pland", function() {deepEqual( Stem("plandte"), "pland");});
test("planen -> plan", function() {deepEqual( Stem("planen"), "plan");});
test("planer -> plan", function() {deepEqual( Stem("planer"), "plan");});
test("planke -> plank", function() {deepEqual( Stem("planke"), "plank");});
test("planker -> plank", function() {deepEqual( Stem("planker"), "plank");});
test("planle -> planl", function() {deepEqual( Stem("planle"), "planl");});
test("plant -> plant", function() {deepEqual( Stem("plant"), "plant");});
test("plante -> plant", function() {deepEqual( Stem("plante"), "plant");});
test("planted -> planted", function() {deepEqual( Stem("planted"), "planted");});
test("plantede -> planted", function() {deepEqual( Stem("plantede"), "planted");});
test("planter -> plant", function() {deepEqual( Stem("planter"), "plant");});
test("plantet -> plant", function() {deepEqual( Stem("plantet"), "plant");});
test("plantning -> plantning", function() {deepEqual( Stem("plantning"), "plantning");});
test("plantninger -> plantning", function() {deepEqual( Stem("plantninger"), "plantning");});
test("plaskregn -> plaskregn", function() {deepEqual( Stem("plaskregn"), "plaskregn");});
test("plaster -> plast", function() {deepEqual( Stem("plaster"), "plast");});
test("plasteret -> plast", function() {deepEqual( Stem("plasteret"), "plast");});
test("platan -> platan", function() {deepEqual( Stem("platan"), "platan");});
test("plataner -> platan", function() {deepEqual( Stem("plataner"), "platan");});
test("plej -> plej", function() {deepEqual( Stem("plej"), "plej");});
test("pleje -> plej", function() {deepEqual( Stem("pleje"), "plej");});
test("plejed -> plejed", function() {deepEqual( Stem("plejed"), "plejed");});
test("plejede -> plejed", function() {deepEqual( Stem("plejede"), "plejed");});
test("plejefader -> plejefad", function() {deepEqual( Stem("plejefader"), "plejefad");});
test("plejer -> plej", function() {deepEqual( Stem("plejer"), "plej");});
test("plejet -> plej", function() {deepEqual( Stem("plejet"), "plej");});
test("plet -> plet", function() {deepEqual( Stem("plet"), "plet");});
test("pleterne -> plet", function() {deepEqual( Stem("pleterne"), "plet");});
test("pletten -> plet", function() {deepEqual( Stem("pletten"), "plet");});
test("pletter -> plet", function() {deepEqual( Stem("pletter"), "plet");});
test("pligt -> pligt", function() {deepEqual( Stem("pligt"), "pligt");});
test("pligtige -> pligt", function() {deepEqual( Stem("pligtige"), "pligt");});
test("ploven -> plov", function() {deepEqual( Stem("ploven"), "plov");});
test("plovjem -> plovjem", function() {deepEqual( Stem("plovjem"), "plovjem");});
test("plovjern -> plovjern", function() {deepEqual( Stem("plovjern"), "plovjern");});
test("plovmand -> plovmand", function() {deepEqual( Stem("plovmand"), "plovmand");});
test("plovmanden -> plovmand", function() {deepEqual( Stem("plovmanden"), "plovmand");});
test("plovmænd -> plovmænd", function() {deepEqual( Stem("plovmænd"), "plovmænd");});
test("pludselig -> pluds", function() {deepEqual( Stem("pludselig"), "pluds");});
test("pludseligt -> pluds", function() {deepEqual( Stem("pludseligt"), "pluds");});
test("plukke -> pluk", function() {deepEqual( Stem("plukke"), "pluk");});
test("plukkede -> plukked", function() {deepEqual( Stem("plukkede"), "plukked");});
test("plukker -> pluk", function() {deepEqual( Stem("plukker"), "pluk");});
test("plumre -> plumr", function() {deepEqual( Stem("plumre"), "plumr");});
test("plumred -> plumred", function() {deepEqual( Stem("plumred"), "plumred");});
test("plumrer -> plumr", function() {deepEqual( Stem("plumrer"), "plumr");});
test("plumret -> plumr", function() {deepEqual( Stem("plumret"), "plumr");});
test("plyndre -> plyndr", function() {deepEqual( Stem("plyndre"), "plyndr");});
test("plyndrede -> plyndred", function() {deepEqual( Stem("plyndrede"), "plyndred");});
test("plyndredes -> plyndred", function() {deepEqual( Stem("plyndredes"), "plyndred");});
test("plyndrer -> plyndr", function() {deepEqual( Stem("plyndrer"), "plyndr");});
test("plyndreres -> plyndr", function() {deepEqual( Stem("plyndreres"), "plyndr");});
test("plyndres -> plyndr", function() {deepEqual( Stem("plyndres"), "plyndr");});
test("plyndret -> plyndr", function() {deepEqual( Stem("plyndret"), "plyndr");});
test("plyndring -> plyndring", function() {deepEqual( Stem("plyndring"), "plyndring");});
test("pløje -> pløj", function() {deepEqual( Stem("pløje"), "pløj");});
test("pløjed -> pløjed", function() {deepEqual( Stem("pløjed"), "pløjed");});
test("pløjede -> pløjed", function() {deepEqual( Stem("pløjede"), "pløjed");});
test("pløjeland -> pløjeland", function() {deepEqual( Stem("pløjeland"), "pløjeland");});
test("pløjer -> pløj", function() {deepEqual( Stem("pløjer"), "pløj");});
test("pløjes -> pløj", function() {deepEqual( Stem("pløjes"), "pløj");});
test("pløjet -> pløj", function() {deepEqual( Stem("pløjet"), "pløj");});
test("pokeret -> pok", function() {deepEqual( Stem("pokeret"), "pok");});
test("pontius -> pontius", function() {deepEqual( Stem("pontius"), "pontius");});
test("pontus -> pontus", function() {deepEqual( Stem("pontus"), "pontus");});
test("poppel -> poppel", function() {deepEqual( Stem("poppel"), "poppel");});
test("por -> por", function() {deepEqual( Stem("por"), "por");});
test("porata -> porata", function() {deepEqual( Stem("porata"), "porata");});
test("porkius -> porkius", function() {deepEqual( Stem("porkius"), "porkius");});
test("porle -> porl", function() {deepEqual( Stem("porle"), "porl");});
test("porrerne -> por", function() {deepEqual( Stem("porrerne"), "por");});
test("port -> port", function() {deepEqual( Stem("port"), "port");});
test("porte -> port", function() {deepEqual( Stem("porte"), "port");});
test("porten -> port", function() {deepEqual( Stem("porten"), "port");});
test("portene -> port", function() {deepEqual( Stem("portene"), "port");});
test("portenes -> port", function() {deepEqual( Stem("portenes"), "port");});
test("portens -> port", function() {deepEqual( Stem("portens"), "port");});
test("portfløje -> portfløj", function() {deepEqual( Stem("portfløje"), "portfløj");});
test("portfløjene -> portfløj", function() {deepEqual( Stem("portfløjene"), "portfløj");});
test("portforhallens -> portforhal", function() {deepEqual( Stem("portforhallens"), "portforhal");});
test("portgangens -> portgang", function() {deepEqual( Stem("portgangens"), "portgang");});
test("portindgangen -> portindgang", function() {deepEqual( Stem("portindgangen"), "portindgang");});
test("portindgangene -> portindgang", function() {deepEqual( Stem("portindgangene"), "portindgang");});
test("portindgangens -> portindgang", function() {deepEqual( Stem("portindgangens"), "portindgang");});
test("portofferhøjen -> portofferhøj", function() {deepEqual( Stem("portofferhøjen"), "portofferhøj");});
test("portrummet -> portrum", function() {deepEqual( Stem("portrummet"), "portrum");});
test("ports -> port", function() {deepEqual( Stem("ports"), "port");});
test("portslå -> portslå", function() {deepEqual( Stem("portslå"), "portslå");});
test("portslåen -> portslå", function() {deepEqual( Stem("portslåen"), "portslå");});
test("portslåer -> portslå", function() {deepEqual( Stem("portslåer"), "portslå");});
test("portstolper -> portstolp", function() {deepEqual( Stem("portstolper"), "portstolp");});
test("portstænger -> portstæng", function() {deepEqual( Stem("portstænger"), "portstæng");});
test("porttaget -> porttag", function() {deepEqual( Stem("porttaget"), "porttag");});
test("portvejen -> portvej", function() {deepEqual( Stem("portvejen"), "portvej");});
test("portvægtere -> portvæg", function() {deepEqual( Stem("portvægtere"), "portvæg");});
test("portvægterne -> portvæg", function() {deepEqual( Stem("portvægterne"), "portvæg");});
test("portåbning -> portåbning", function() {deepEqual( Stem("portåbning"), "portåbning");});
test("posen -> pos", function() {deepEqual( Stem("posen"), "pos");});
test("posens -> pos", function() {deepEqual( Stem("posens"), "pos");});
test("post -> post", function() {deepEqual( Stem("post"), "post");});
test("poter -> pot", function() {deepEqual( Stem("poter"), "pot");});
test("potifar -> potifar", function() {deepEqual( Stem("potifar"), "potifar");});
test("potifera -> potifera", function() {deepEqual( Stem("potifera"), "potifera");});
test("potiferas -> potifera", function() {deepEqual( Stem("potiferas"), "potifera");});
test("pottemager -> pottemag", function() {deepEqual( Stem("pottemager"), "pottemag");});
test("pottemageren -> pottemag", function() {deepEqual( Stem("pottemageren"), "pottemag");});
test("pottemagerens -> pottemag", function() {deepEqual( Stem("pottemagerens"), "pottemag");});
test("pottemagerhænders -> pottemagerhænd", function() {deepEqual( Stem("pottemagerhænders"), "pottemagerhænd");});
test("pottemagerler -> pottemagerl", function() {deepEqual( Stem("pottemagerler"), "pottemagerl");});
test("pottemagermarken -> pottemagermark", function() {deepEqual( Stem("pottemagermarken"), "pottemagermark");});
test("pottemagerne -> pottemag", function() {deepEqual( Stem("pottemagerne"), "pottemag");});
test("pottemagers -> pottemag", function() {deepEqual( Stem("pottemagers"), "pottemag");});
test("potteskår -> potteskår", function() {deepEqual( Stem("potteskår"), "potteskår");});
test("potteskårporten -> potteskårport", function() {deepEqual( Stem("potteskårporten"), "potteskårport");});
test("pragt -> pragt", function() {deepEqual( Stem("pragt"), "pragt");});
test("pragtklæderne -> pragtklæd", function() {deepEqual( Stem("pragtklæderne"), "pragtklæd");});
test("pral -> pral", function() {deepEqual( Stem("pral"), "pral");});
test("pralen -> pral", function() {deepEqual( Stem("pralen"), "pral");});
test("praler -> pral", function() {deepEqual( Stem("praler"), "pral");});
test("pralere -> pral", function() {deepEqual( Stem("pralere"), "pral");});
test("praleriske -> pralerisk", function() {deepEqual( Stem("praleriske"), "pralerisk");});
test("preller -> prel", function() {deepEqual( Stem("preller"), "prel");});
test("pressede -> pressed", function() {deepEqual( Stem("pressede"), "pressed");});
test("presser -> pres", function() {deepEqual( Stem("presser"), "pres");});
test("pris -> pris", function() {deepEqual( Stem("pris"), "pris");});
test("prise -> pris", function() {deepEqual( Stem("prise"), "pris");});
test("prisen -> pris", function() {deepEqual( Stem("prisen"), "pris");});
test("prisende -> pris", function() {deepEqual( Stem("prisende"), "pris");});
test("priser -> pris", function() {deepEqual( Stem("priser"), "pris");});
test("prises -> pris", function() {deepEqual( Stem("prises"), "pris");});
test("priset -> pris", function() {deepEqual( Stem("priset"), "pris");});
test("prisgav -> prisgav", function() {deepEqual( Stem("prisgav"), "prisgav");});
test("prisgave -> prisgav", function() {deepEqual( Stem("prisgave"), "prisgav");});
test("prisgive -> prisgiv", function() {deepEqual( Stem("prisgive"), "prisgiv");});
test("prisgiver -> prisgiv", function() {deepEqual( Stem("prisgiver"), "prisgiv");});
test("prisgives -> prisgiv", function() {deepEqual( Stem("prisgives"), "prisgiv");});
test("priska -> priska", function() {deepEqual( Stem("priska"), "priska");});
test("priskilla -> priskilla", function() {deepEqual( Stem("priskilla"), "priskilla");});
test("prist -> prist", function() {deepEqual( Stem("prist"), "prist");});
test("priste -> prist", function() {deepEqual( Stem("priste"), "prist");});
test("profe -> prof", function() {deepEqual( Stem("profe"), "prof");});
test("profefen -> profef", function() {deepEqual( Stem("profefen"), "profef");});
test("profefer -> profef", function() {deepEqual( Stem("profefer"), "profef");});
test("profefers -> profef", function() {deepEqual( Stem("profefers"), "profef");});
test("profet -> prof", function() {deepEqual( Stem("profet"), "prof");});
test("profeten -> profet", function() {deepEqual( Stem("profeten"), "profet");});
test("profetens -> profet", function() {deepEqual( Stem("profetens"), "profet");});
test("profeter -> profet", function() {deepEqual( Stem("profeter"), "profet");});
test("profetere -> profet", function() {deepEqual( Stem("profetere"), "profet");});
test("profetered -> profet", function() {deepEqual( Stem("profetered"), "profet");});
test("profeterede -> profet", function() {deepEqual( Stem("profeterede"), "profet");});
test("profeterer -> profet", function() {deepEqual( Stem("profeterer"), "profet");});
test("profeteret -> profet", function() {deepEqual( Stem("profeteret"), "profet");});
test("profeterne -> profet", function() {deepEqual( Stem("profeterne"), "profet");});
test("profeternes -> profet", function() {deepEqual( Stem("profeternes"), "profet");});
test("profeters -> profet", function() {deepEqual( Stem("profeters"), "profet");});
test("profeti -> profeti", function() {deepEqual( Stem("profeti"), "profeti");});
test("profetiens -> profeti", function() {deepEqual( Stem("profetiens"), "profeti");});
test("profetier -> profeti", function() {deepEqual( Stem("profetier"), "profeti");});
test("profetinde -> profetind", function() {deepEqual( Stem("profetinde"), "profetind");});
test("profetinden -> profetind", function() {deepEqual( Stem("profetinden"), "profetind");});
test("profetis -> profetis", function() {deepEqual( Stem("profetis"), "profetis");});
test("profetisk -> profetisk", function() {deepEqual( Stem("profetisk"), "profetisk");});
test("profetiske -> profetisk", function() {deepEqual( Stem("profetiske"), "profetisk");});
test("profetlærling -> profetlærling", function() {deepEqual( Stem("profetlærling"), "profetlærling");});
test("profets -> prof", function() {deepEqual( Stem("profets"), "prof");});
test("profetskaren -> profetskar", function() {deepEqual( Stem("profetskaren"), "profetskar");});
test("profetsønnen -> profetsøn", function() {deepEqual( Stem("profetsønnen"), "profetsøn");});
test("profetsønnerne -> profetsøn", function() {deepEqual( Stem("profetsønnerne"), "profetsøn");});
test("prokorus -> prokorus", function() {deepEqual( Stem("prokorus"), "prokorus");});
test("proselyt -> proselyt", function() {deepEqual( Stem("proselyt"), "proselyt");});
test("proselyter -> proselyt", function() {deepEqual( Stem("proselyter"), "proselyt");});
test("provins -> provin", function() {deepEqual( Stem("provins"), "provin");});
test("prusten -> prust", function() {deepEqual( Stem("prusten"), "prust");});
test("prustende -> prust", function() {deepEqual( Stem("prustende"), "prust");});
test("prvdede -> prvded", function() {deepEqual( Stem("prvdede"), "prvded");});
test("pryd -> pryd", function() {deepEqual( Stem("pryd"), "pryd");});
test("pryde -> pryd", function() {deepEqual( Stem("pryde"), "pryd");});
test("prydede -> pryded", function() {deepEqual( Stem("prydede"), "pryded");});
test("prydelse -> pryd", function() {deepEqual( Stem("prydelse"), "pryd");});
test("prydelser -> pryd", function() {deepEqual( Stem("prydelser"), "pryd");});
test("prydet -> pryd", function() {deepEqual( Stem("prydet"), "pryd");});
test("prygl -> prygl", function() {deepEqual( Stem("prygl"), "prygl");});
test("prædike -> prædik", function() {deepEqual( Stem("prædike"), "prædik");});
test("prædikede -> prædiked", function() {deepEqual( Stem("prædikede"), "prædiked");});
test("prædiken -> prædik", function() {deepEqual( Stem("prædiken"), "prædik");});
test("prædikenens -> prædiken", function() {deepEqual( Stem("prædikenens"), "prædiken");});
test("prædiker -> prædik", function() {deepEqual( Stem("prædiker"), "prædik");});
test("prædikeren -> prædik", function() {deepEqual( Stem("prædikeren"), "prædik");});
test("prædikes -> prædik", function() {deepEqual( Stem("prædikes"), "prædik");});
test("prædiket -> prædik", function() {deepEqual( Stem("prædiket"), "prædik");});
test("prægtig -> prægt", function() {deepEqual( Stem("prægtig"), "prægt");});
test("prægtige -> prægt", function() {deepEqual( Stem("prægtige"), "prægt");});
test("prægtigt -> prægt", function() {deepEqual( Stem("prægtigt"), "prægt");});
test("præk -> præk", function() {deepEqual( Stem("præk"), "præk");});
test("præke -> præk", function() {deepEqual( Stem("præke"), "præk");});
test("præker -> præk", function() {deepEqual( Stem("præker"), "præk");});
test("præsferne -> præsf", function() {deepEqual( Stem("præsferne"), "præsf");});
test("præslerne -> præsl", function() {deepEqual( Stem("præslerne"), "præsl");});
test("præst -> præst", function() {deepEqual( Stem("præst"), "præst");});
test("præstebyerne -> præsteby", function() {deepEqual( Stem("præstebyerne"), "præsteby");});
test("præstedatter -> præstedat", function() {deepEqual( Stem("præstedatter"), "præstedat");});
test("præstedømme -> præstedøm", function() {deepEqual( Stem("præstedømme"), "præstedøm");});
test("præstedømmes -> præstedøm", function() {deepEqual( Stem("præstedømmes"), "præstedøm");});
test("præstedømmet -> præstedøm", function() {deepEqual( Stem("præstedømmet"), "præstedøm");});
test("præstegerning -> præstegerning", function() {deepEqual( Stem("præstegerning"), "præstegerning");});
test("præstekjortler -> præstekjortl", function() {deepEqual( Stem("præstekjortler"), "præstekjortl");});
test("præsteme -> præstem", function() {deepEqual( Stem("præsteme"), "præstem");});
test("præsten -> præst", function() {deepEqual( Stem("præsten"), "præst");});
test("præstens -> præst", function() {deepEqual( Stem("præstens"), "præst");});
test("præster -> præst", function() {deepEqual( Stem("præster"), "præst");});
test("præsterne -> præst", function() {deepEqual( Stem("præsterne"), "præst");});
test("præsternes -> præst", function() {deepEqual( Stem("præsternes"), "præst");});
test("præsteskab -> præsteskab", function() {deepEqual( Stem("præsteskab"), "præsteskab");});
test("præsteskaber -> præsteskab", function() {deepEqual( Stem("præsteskaber"), "præsteskab");});
test("præstestanden -> præstestand", function() {deepEqual( Stem("præstestanden"), "præstestand");});
test("præstetjenest -> præstetjenest", function() {deepEqual( Stem("præstetjenest"), "præstetjenest");});
test("præstetjeneste -> præstetjenest", function() {deepEqual( Stem("præstetjeneste"), "præstetjenest");});
test("præstetjenesten -> præstetjenest", function() {deepEqual( Stem("præstetjenesten"), "præstetjenest");});
test("præstetjenestens -> præstetjenest", function() {deepEqual( Stem("præstetjenestens"), "præstetjenest");});
test("præsteværdigheden -> præsteværd", function() {deepEqual( Stem("præsteværdigheden"), "præsteværd");});
test("præstr -> præstr", function() {deepEqual( Stem("præstr"), "præstr");});
test("prøv -> prøv", function() {deepEqual( Stem("prøv"), "prøv");});
test("prøve -> prøv", function() {deepEqual( Stem("prøve"), "prøv");});
test("prøved -> prøved", function() {deepEqual( Stem("prøved"), "prøved");});
test("prøvede -> prøved", function() {deepEqual( Stem("prøvede"), "prøved");});
test("prøvelse -> prøv", function() {deepEqual( Stem("prøvelse"), "prøv");});
test("prøvelser -> prøv", function() {deepEqual( Stem("prøvelser"), "prøv");});
test("prøven -> prøv", function() {deepEqual( Stem("prøven"), "prøv");});
test("prøver -> prøv", function() {deepEqual( Stem("prøver"), "prøv");});
test("prøves -> prøv", function() {deepEqual( Stem("prøves"), "prøv");});
test("prøvet -> prøv", function() {deepEqual( Stem("prøvet"), "prøv");});
test("prøvethed -> prøv", function() {deepEqual( Stem("prøvethed"), "prøv");});
test("prøvetheden -> prøvet", function() {deepEqual( Stem("prøvetheden"), "prøvet");});
test("ptofeterne -> ptofet", function() {deepEqual( Stem("ptofeterne"), "ptofet");});
test("ptolemais -> ptolemais", function() {deepEqual( Stem("ptolemais"), "ptolemais");});
test("pu -> pu", function() {deepEqual( Stem("pu"), "pu");});
test("pua -> pua", function() {deepEqual( Stem("pua"), "pua");});
test("publius -> publius", function() {deepEqual( Stem("publius"), "publius");});
test("pudens -> pud", function() {deepEqual( Stem("pudens"), "pud");});
test("puds -> pud", function() {deepEqual( Stem("puds"), "pud");});
test("pudse -> puds", function() {deepEqual( Stem("pudse"), "puds");});
test("pudset -> puds", function() {deepEqual( Stem("pudset"), "puds");});
test("pukkel -> pukkel", function() {deepEqual( Stem("pukkel"), "pukkel");});
test("pukkelrygget -> pukkelryg", function() {deepEqual( Stem("pukkelrygget"), "pukkelryg");});
test("pul -> pul", function() {deepEqual( Stem("pul"), "pul");});
test("puls -> pul", function() {deepEqual( Stem("puls"), "pul");});
test("pulver -> pulv", function() {deepEqual( Stem("pulver"), "pulv");});
test("pund -> pund", function() {deepEqual( Stem("pund"), "pund");});
test("pundet -> pund", function() {deepEqual( Stem("pundet"), "pund");});
test("pung -> pung", function() {deepEqual( Stem("pung"), "pung");});
test("punge -> pung", function() {deepEqual( Stem("punge"), "pung");});
test("pungen -> pung", function() {deepEqual( Stem("pungen"), "pung");});
test("puniternes -> punit", function() {deepEqual( Stem("puniternes"), "punit");});
test("punktligt -> punk", function() {deepEqual( Stem("punktligt"), "punk");});
test("punon -> punon", function() {deepEqual( Stem("punon"), "punon");});
test("pur -> pur", function() {deepEqual( Stem("pur"), "pur");});
test("pura -> pura", function() {deepEqual( Stem("pura"), "pura");});
test("pure -> pur", function() {deepEqual( Stem("pure"), "pur");});
test("purim -> purim", function() {deepEqual( Stem("purim"), "purim");});
test("purimsdage -> purimsdag", function() {deepEqual( Stem("purimsdage"), "purimsdag");});
test("purimsforskrifter -> purimsforskrift", function() {deepEqual( Stem("purimsforskrifter"), "purimsforskrift");});
test("purpur -> purpur", function() {deepEqual( Stem("purpur"), "purpur");});
test("purpurgarn -> purpurgarn", function() {deepEqual( Stem("purpurgarn"), "purpurgarn");});
test("purpurgatn -> purpurgatn", function() {deepEqual( Stem("purpurgatn"), "purpurgatn");});
test("purpurkappe -> purpurkap", function() {deepEqual( Stem("purpurkappe"), "purpurkap");});
test("purpurkappen -> purpurkap", function() {deepEqual( Stem("purpurkappen"), "purpurkap");});
test("purpurkapper -> purpurkap", function() {deepEqual( Stem("purpurkapper"), "purpurkap");});
test("purpurklæde -> purpurklæd", function() {deepEqual( Stem("purpurklæde"), "purpurklæd");});
test("purpurklæderne -> purpurklæd", function() {deepEqual( Stem("purpurklæderne"), "purpurklæd");});
test("purpurkræmmerske -> purpurkræmmersk", function() {deepEqual( Stem("purpurkræmmerske"), "purpurkræmmersk");});
test("purpursnor -> purpursnor", function() {deepEqual( Stem("purpursnor"), "purpursnor");});
test("purrer -> pur", function() {deepEqual( Stem("purrer"), "pur");});
test("purt -> purt", function() {deepEqual( Stem("purt"), "purt");});
test("pust -> pust", function() {deepEqual( Stem("pust"), "pust");});
test("put -> put", function() {deepEqual( Stem("put"), "put");});
test("puteoli -> puteoli", function() {deepEqual( Stem("puteoli"), "puteoli");});
test("putiels -> putiel", function() {deepEqual( Stem("putiels"), "putiel");});
test("putiterne -> putit", function() {deepEqual( Stem("putiterne"), "putit");});
test("putæere -> putæ", function() {deepEqual( Stem("putæere"), "putæ");});
test("pynt -> pynt", function() {deepEqual( Stem("pynt"), "pynt");});
test("pyrrus -> pyrrus", function() {deepEqual( Stem("pyrrus"), "pyrrus");});
test("på -> på", function() {deepEqual( Stem("på"), "på");});
test("påbud -> påbud", function() {deepEqual( Stem("påbud"), "påbud");});
test("påbudets -> påbud", function() {deepEqual( Stem("påbudets"), "påbud");});
test("påbudt -> påbud", function() {deepEqual( Stem("påbudt"), "påbud");});
test("påbyd -> påbyd", function() {deepEqual( Stem("påbyd"), "påbyd");});
test("påbyde -> påbyd", function() {deepEqual( Stem("påbyde"), "påbyd");});
test("påbyder -> påbyd", function() {deepEqual( Stem("påbyder"), "påbyd");});
test("påbød -> påbød", function() {deepEqual( Stem("påbød"), "påbød");});
test("påde -> påd", function() {deepEqual( Stem("påde"), "påd");});
test("pådrage -> pådrag", function() {deepEqual( Stem("pådrage"), "pådrag");});
test("pådrager -> pådrag", function() {deepEqual( Stem("pådrager"), "pådrag");});
test("pådrages -> pådrag", function() {deepEqual( Stem("pådrages"), "pådrag");});
test("pådraget -> pådrag", function() {deepEqual( Stem("pådraget"), "pådrag");});
test("pådrog -> pådrog", function() {deepEqual( Stem("pådrog"), "pådrog");});
test("pådømme -> pådøm", function() {deepEqual( Stem("pådømme"), "pådøm");});
test("påfugle -> påfugl", function() {deepEqual( Stem("påfugle"), "påfugl");});
test("påfund -> påfund", function() {deepEqual( Stem("påfund"), "påfund");});
test("påfølgende -> påfølg", function() {deepEqual( Stem("påfølgende"), "påfølg");});
test("påføre -> påfør", function() {deepEqual( Stem("påføre"), "påfør");});
test("påførte -> påført", function() {deepEqual( Stem("påførte"), "påført");});
test("pågud -> pågud", function() {deepEqual( Stem("pågud"), "pågud");});
test("pågældende -> pågæld", function() {deepEqual( Stem("pågældende"), "pågæld");});
test("påhverandre -> påhverandr", function() {deepEqual( Stem("påhverandre"), "påhverandr");});
test("påhvile -> påhvil", function() {deepEqual( Stem("påhvile"), "påhvil");});
test("påhviler -> påhvil", function() {deepEqual( Stem("påhviler"), "påhvil");});
test("påhængte -> påhæng", function() {deepEqual( Stem("påhængte"), "påhæng");});
test("påhør -> påhør", function() {deepEqual( Stem("påhør"), "påhør");});
test("påkald -> påkald", function() {deepEqual( Stem("påkald"), "påkald");});
test("påkalde -> påkald", function() {deepEqual( Stem("påkalde"), "påkald");});
test("påkaldelse -> påkald", function() {deepEqual( Stem("påkaldelse"), "påkald");});
test("påkaldelser -> påkald", function() {deepEqual( Stem("påkaldelser"), "påkald");});
test("påkalder -> påkald", function() {deepEqual( Stem("påkalder"), "påkald");});
test("påkaldt -> påkald", function() {deepEqual( Stem("påkaldt"), "påkald");});
test("påkaldte -> påkald", function() {deepEqual( Stem("påkaldte"), "påkald");});
test("påkende -> påk", function() {deepEqual( Stem("påkende"), "påk");});
test("påklædt -> påklæd", function() {deepEqual( Stem("påklædt"), "påklæd");});
test("påkom -> påkom", function() {deepEqual( Stem("påkom"), "påkom");});
test("påkommen -> påkom", function() {deepEqual( Stem("påkommen"), "påkom");});
test("pålagde -> pålag", function() {deepEqual( Stem("pålagde"), "pålag");});
test("pålagt -> pålag", function() {deepEqual( Stem("pålagt"), "pålag");});
test("pålagte -> pålag", function() {deepEqual( Stem("pålagte"), "pålag");});
test("pålidelig -> pålid", function() {deepEqual( Stem("pålidelig"), "pålid");});
test("pålidelige -> pålid", function() {deepEqual( Stem("pålidelige"), "pålid");});
test("pålideligheden -> pålid", function() {deepEqual( Stem("pålideligheden"), "pålid");});
test("pålideligt -> pålid", function() {deepEqual( Stem("pålideligt"), "pålid");});
test("påligger -> pålig", function() {deepEqual( Stem("påligger"), "pålig");});
test("pålå -> pålå", function() {deepEqual( Stem("pålå"), "pålå");});
test("pålæg -> pålæg", function() {deepEqual( Stem("pålæg"), "pålæg");});
test("pålægge -> pålæg", function() {deepEqual( Stem("pålægge"), "pålæg");});
test("pålæggelse -> pålæg", function() {deepEqual( Stem("pålæggelse"), "pålæg");});
test("pålægger -> pålæg", function() {deepEqual( Stem("pålægger"), "pålæg");});
test("pålægges -> pålæg", function() {deepEqual( Stem("pålægges"), "pålæg");});
test("påmind -> påmind", function() {deepEqual( Stem("påmind"), "påmind");});
test("påminde -> påmind", function() {deepEqual( Stem("påminde"), "påmind");});
test("påmindede -> påminded", function() {deepEqual( Stem("påmindede"), "påminded");});
test("påmindelse -> påmind", function() {deepEqual( Stem("påmindelse"), "påmind");});
test("påminder -> påmind", function() {deepEqual( Stem("påminder"), "påmind");});
test("påny -> påny", function() {deepEqual( Stem("påny"), "påny");});
test("påsk -> påsk", function() {deepEqual( Stem("påsk"), "påsk");});
test("påske -> påsk", function() {deepEqual( Stem("påske"), "påsk");});
test("påskedyr -> påskedyr", function() {deepEqual( Stem("påskedyr"), "påskedyr");});
test("påskedyrene -> påskedyr", function() {deepEqual( Stem("påskedyrene"), "påskedyr");});
test("påskefesten -> påskefest", function() {deepEqual( Stem("påskefesten"), "påskefest");});
test("påskehøjtiden -> påskehøjtid", function() {deepEqual( Stem("påskehøjtiden"), "påskehøjtid");});
test("påskehøjtidens -> påskehøjtid", function() {deepEqual( Stem("påskehøjtidens"), "påskehøjtid");});
test("påskelam -> påskelam", function() {deepEqual( Stem("påskelam"), "påskelam");});
test("påskelammene -> påskelam", function() {deepEqual( Stem("påskelammene"), "påskelam");});
test("påskelammet -> påskelam", function() {deepEqual( Stem("påskelammet"), "påskelam");});
test("påsken -> påsk", function() {deepEqual( Stem("påsken"), "påsk");});
test("påskeoffer -> påskeof", function() {deepEqual( Stem("påskeoffer"), "påskeof");});
test("påskeofferdyr -> påskeofferdyr", function() {deepEqual( Stem("påskeofferdyr"), "påskeofferdyr");});
test("påskeofferdyrene -> påskeofferdyr", function() {deepEqual( Stem("påskeofferdyrene"), "påskeofferdyr");});
test("påskeofferet -> påskeof", function() {deepEqual( Stem("påskeofferet"), "påskeof");});
test("påskreven -> påskrev", function() {deepEqual( Stem("påskreven"), "påskrev");});
test("påskrevne -> påskrevn", function() {deepEqual( Stem("påskrevne"), "påskrevn");});
test("påskud -> påskud", function() {deepEqual( Stem("påskud"), "påskud");});
test("påskynde -> påskynd", function() {deepEqual( Stem("påskynde"), "påskynd");});
test("påstand -> påstand", function() {deepEqual( Stem("påstand"), "påstand");});
test("påstod -> påstod", function() {deepEqual( Stem("påstod"), "påstod");});
test("påstode -> påstod", function() {deepEqual( Stem("påstode"), "påstod");});
test("påstrygelsen -> påstryg", function() {deepEqual( Stem("påstrygelsen"), "påstryg");});
test("påstår -> påstår", function() {deepEqual( Stem("påstår"), "påstår");});
test("påsyn -> påsyn", function() {deepEqual( Stem("påsyn"), "påsyn");});
test("påtage -> påtag", function() {deepEqual( Stem("påtage"), "påtag");});
test("påtagen -> påtag", function() {deepEqual( Stem("påtagen"), "påtag");});
test("påtager -> påtag", function() {deepEqual( Stem("påtager"), "påtag");});
test("påtaget -> påtag", function() {deepEqual( Stem("påtaget"), "påtag");});
test("påtagne -> påtagn", function() {deepEqual( Stem("påtagne"), "påtagn");});
test("påtrængenheds -> påtrængen", function() {deepEqual( Stem("påtrængenheds"), "påtrængen");});
test("påtugt -> påtug", function() {deepEqual( Stem("påtugt"), "påtug");});
test("påvirket -> påvirk", function() {deepEqual( Stem("påvirket"), "påvirk");});
test("påvise -> påvis", function() {deepEqual( Stem("påvise"), "påvis");});
test("pædres -> pædr", function() {deepEqual( Stem("pædres"), "pædr");});
test("pæl -> pæl", function() {deepEqual( Stem("pæl"), "pæl");});
test("pæle -> pæl", function() {deepEqual( Stem("pæle"), "pæl");});
test("pælen -> pæl", function() {deepEqual( Stem("pælen"), "pæl");});
test("pælene -> pæl", function() {deepEqual( Stem("pælene"), "pæl");});
test("pøl -> pøl", function() {deepEqual( Stem("pøl"), "pøl");});
test("pølen -> pøl", function() {deepEqual( Stem("pølen"), "pøl");});
test("pønsede -> pønsed", function() {deepEqual( Stem("pønsede"), "pønsed");});
test("pønser -> pøns", function() {deepEqual( Stem("pønser"), "pøns");});
test("pønset -> pøns", function() {deepEqual( Stem("pønset"), "pøns");});
test("r -> r", function() {deepEqual( Stem("r"), "r");});
test("ra -> ra", function() {deepEqual( Stem("ra"), "ra");});
test("rabab -> rabab", function() {deepEqual( Stem("rabab"), "rabab");});
test("rabba -> rabba", function() {deepEqual( Stem("rabba"), "rabba");});
test("rabbas -> rabba", function() {deepEqual( Stem("rabbas"), "rabba");});
test("rabbi -> rabbi", function() {deepEqual( Stem("rabbi"), "rabbi");});
test("rabbims -> rabbim", function() {deepEqual( Stem("rabbims"), "rabbim");});
test("rabbit -> rabbit", function() {deepEqual( Stem("rabbit"), "rabbit");});
test("rabbuni -> rabbuni", function() {deepEqual( Stem("rabbuni"), "rabbuni");});
test("rabsaris -> rabsaris", function() {deepEqual( Stem("rabsaris"), "rabsaris");});
test("rabsjake -> rabsjak", function() {deepEqual( Stem("rabsjake"), "rabsjak");});
test("rad -> rad", function() {deepEqual( Stem("rad"), "rad");});
test("raddaj -> raddaj", function() {deepEqual( Stem("raddaj"), "raddaj");});
test("rafa -> rafa", function() {deepEqual( Stem("rafa"), "rafa");});
test("rafaslægten -> rafaslæg", function() {deepEqual( Stem("rafaslægten"), "rafaslæg");});
test("rafus -> rafus", function() {deepEqual( Stem("rafus"), "rafus");});
test("ragaus -> ragaus", function() {deepEqual( Stem("ragaus"), "ragaus");});
test("rage -> rag", function() {deepEqual( Stem("rage"), "rag");});
test("raged -> raged", function() {deepEqual( Stem("raged"), "raged");});
test("ragede -> raged", function() {deepEqual( Stem("ragede"), "raged");});
test("ragekniv -> ragekniv", function() {deepEqual( Stem("ragekniv"), "ragekniv");});
test("rager -> rag", function() {deepEqual( Stem("rager"), "rag");});
test("rages -> rag", function() {deepEqual( Stem("rages"), "rag");});
test("raget -> rag", function() {deepEqual( Stem("raget"), "rag");});
test("rahab -> rahab", function() {deepEqual( Stem("rahab"), "rahab");});
test("rahabs -> rahab", function() {deepEqual( Stem("rahabs"), "rahab");});
test("raham -> raham", function() {deepEqual( Stem("raham"), "raham");});
test("raka -> raka", function() {deepEqual( Stem("raka"), "raka");});
test("rakab -> rakab", function() {deepEqual( Stem("rakab"), "rakab");});
test("rakel -> rakel", function() {deepEqual( Stem("rakel"), "rakel");});
test("rakels -> rakel", function() {deepEqual( Stem("rakels"), "rakel");});
test("rakkat -> rakkat", function() {deepEqual( Stem("rakkat"), "rakkat");});
test("rakke -> rak", function() {deepEqual( Stem("rakke"), "rak");});
test("rakkon -> rakkon", function() {deepEqual( Stem("rakkon"), "rakkon");});
test("rakt -> rakt", function() {deepEqual( Stem("rakt"), "rakt");});
test("rakte -> rakt", function() {deepEqual( Stem("rakte"), "rakt");});
test("ram -> ram", function() {deepEqual( Stem("ram"), "ram");});
test("rama -> rama", function() {deepEqual( Stem("rama"), "rama");});
test("ramas -> rama", function() {deepEqual( Stem("ramas"), "rama");});
test("ramat -> ramat", function() {deepEqual( Stem("ramat"), "ramat");});
test("ramatajim -> ramatajim", function() {deepEqual( Stem("ramatajim"), "ramatajim");});
test("rameses -> rames", function() {deepEqual( Stem("rameses"), "rames");});
test("ramja -> ramja", function() {deepEqual( Stem("ramja"), "ramja");});
test("ramme -> ram", function() {deepEqual( Stem("ramme"), "ram");});
test("rammende -> ram", function() {deepEqual( Stem("rammende"), "ram");});
test("rammer -> ram", function() {deepEqual( Stem("rammer"), "ram");});
test("rammes -> ram", function() {deepEqual( Stem("rammes"), "ram");});
test("rammestykkerne -> rammestyk", function() {deepEqual( Stem("rammestykkerne"), "rammestyk");});
test("ramot -> ramot", function() {deepEqual( Stem("ramot"), "ramot");});
test("rams -> ram", function() {deepEqual( Stem("rams"), "ram");});
test("ramt -> ramt", function() {deepEqual( Stem("ramt"), "ramt");});
test("ramte -> ramt", function() {deepEqual( Stem("ramte"), "ramt");});
test("ramtes -> ramt", function() {deepEqual( Stem("ramtes"), "ramt");});
test("ran -> ran", function() {deepEqual( Stem("ran"), "ran");});
test("rand -> rand", function() {deepEqual( Stem("rand"), "rand");});
test("rande -> rand", function() {deepEqual( Stem("rande"), "rand");});
test("randen -> rand", function() {deepEqual( Stem("randen"), "rand");});
test("randt -> rand", function() {deepEqual( Stem("randt"), "rand");});
test("rane -> ran", function() {deepEqual( Stem("rane"), "ran");});
test("raned -> raned", function() {deepEqual( Stem("raned"), "raned");});
test("ranede -> raned", function() {deepEqual( Stem("ranede"), "raned");});
test("ranen -> ran", function() {deepEqual( Stem("ranen"), "ran");});
test("raner -> ran", function() {deepEqual( Stem("raner"), "ran");});
test("ranes -> ran", function() {deepEqual( Stem("ranes"), "ran");});
test("ranet -> ran", function() {deepEqual( Stem("ranet"), "ran");});
test("rang -> rang", function() {deepEqual( Stem("rang"), "rang");});
test("rank -> rank", function() {deepEqual( Stem("rank"), "rank");});
test("ranke -> rank", function() {deepEqual( Stem("ranke"), "rank");});
test("ranken -> rank", function() {deepEqual( Stem("ranken"), "rank");});
test("ranker -> rank", function() {deepEqual( Stem("ranker"), "rank");});
test("rankerne -> rank", function() {deepEqual( Stem("rankerne"), "rank");});
test("rankt -> rank", function() {deepEqual( Stem("rankt"), "rank");});
test("ransag -> ransag", function() {deepEqual( Stem("ransag"), "ransag");});
test("ransage -> ransag", function() {deepEqual( Stem("ransage"), "ransag");});
test("ransaged -> ransaged", function() {deepEqual( Stem("ransaged"), "ransaged");});
test("ransagede -> ransaged", function() {deepEqual( Stem("ransagede"), "ransaged");});
test("ransager -> ransag", function() {deepEqual( Stem("ransager"), "ransag");});
test("ransages -> ransag", function() {deepEqual( Stem("ransages"), "ransag");});
test("ransaget -> ransag", function() {deepEqual( Stem("ransaget"), "ransag");});
test("ransel -> ransel", function() {deepEqual( Stem("ransel"), "ransel");});
test("ransmand -> ransmand", function() {deepEqual( Stem("ransmand"), "ransmand");});
test("ransmænd -> ransmænd", function() {deepEqual( Stem("ransmænd"), "ransmænd");});
test("ransmænds -> ransmænd", function() {deepEqual( Stem("ransmænds"), "ransmænd");});
test("rapfod -> rapfod", function() {deepEqual( Stem("rapfod"), "rapfod");});
test("rapfodede -> rapfoded", function() {deepEqual( Stem("rapfodede"), "rapfoded");});
test("rapfodet -> rapfod", function() {deepEqual( Stem("rapfodet"), "rapfod");});
test("rappe -> rap", function() {deepEqual( Stem("rappe"), "rap");});
test("rappere -> rap", function() {deepEqual( Stem("rappere"), "rap");});
test("rari -> rari", function() {deepEqual( Stem("rari"), "rari");});
test("rase -> ras", function() {deepEqual( Stem("rase"), "ras");});
test("rasede -> rased", function() {deepEqual( Stem("rasede"), "rased");});
test("rasende -> ras", function() {deepEqual( Stem("rasende"), "ras");});
test("raser -> ras", function() {deepEqual( Stem("raser"), "ras");});
test("raseri -> raseri", function() {deepEqual( Stem("raseri"), "raseri");});
test("rasjake -> rasjak", function() {deepEqual( Stem("rasjake"), "rasjak");});
test("rask -> rask", function() {deepEqual( Stem("rask"), "rask");});
test("raske -> rask", function() {deepEqual( Stem("raske"), "rask");});
test("raskere -> rask", function() {deepEqual( Stem("raskere"), "rask");});
test("raslen -> rasl", function() {deepEqual( Stem("raslen"), "rasl");});
test("raslende -> rasl", function() {deepEqual( Stem("raslende"), "rasl");});
test("rast -> rast", function() {deepEqual( Stem("rast"), "rast");});
test("raste -> rast", function() {deepEqual( Stem("raste"), "rast");});
test("raststed -> raststed", function() {deepEqual( Stem("raststed"), "raststed");});
test("rav -> rav", function() {deepEqual( Stem("rav"), "rav");});
test("rave -> rav", function() {deepEqual( Stem("rave"), "rav");});
test("raved -> raved", function() {deepEqual( Stem("raved"), "raved");});
test("raver -> rav", function() {deepEqual( Stem("raver"), "rav");});
test("ravn -> ravn", function() {deepEqual( Stem("ravn"), "ravn");});
test("ravne -> ravn", function() {deepEqual( Stem("ravne"), "ravn");});
test("ravnen -> ravn", function() {deepEqual( Stem("ravnen"), "ravn");});
test("ravnene -> ravn", function() {deepEqual( Stem("ravnene"), "ravn");});
test("ravneunger -> ravneung", function() {deepEqual( Stem("ravneunger"), "ravneung");});
test("rbarhed -> rbar", function() {deepEqual( Stem("rbarhed"), "rbar");});
test("rbødighed -> rbød", function() {deepEqual( Stem("rbødighed"), "rbød");});
test("rbødighedstegn -> rbødighedstegn", function() {deepEqual( Stem("rbødighedstegn"), "rbødighedstegn");});
test("re -> re", function() {deepEqual( Stem("re"), "re");});
test("rea -> rea", function() {deepEqual( Stem("rea"), "rea");});
test("reaja -> reaja", function() {deepEqual( Stem("reaja"), "reaja");});
test("reajas -> reaja", function() {deepEqual( Stem("reajas"), "reaja");});
test("reb -> reb", function() {deepEqual( Stem("reb"), "reb");});
test("reba -> reba", function() {deepEqual( Stem("reba"), "reba");});
test("rebabeam -> rebabeam", function() {deepEqual( Stem("rebabeam"), "rebabeam");});
test("rebabeams -> rebabeam", function() {deepEqual( Stem("rebabeams"), "rebabeam");});
test("rebekka -> rebekka", function() {deepEqual( Stem("rebekka"), "rebekka");});
test("rebekkas -> rebekka", function() {deepEqual( Stem("rebekkas"), "rebekka");});
test("rebene -> reb", function() {deepEqual( Stem("rebene"), "reb");});
test("rebet -> reb", function() {deepEqual( Stem("rebet"), "reb");});
test("rebob -> rebob", function() {deepEqual( Stem("rebob"), "rebob");});
test("red -> red", function() {deepEqual( Stem("red"), "red");});
test("redde -> red", function() {deepEqual( Stem("redde"), "red");});
test("redded -> redded", function() {deepEqual( Stem("redded"), "redded");});
test("reddede -> redded", function() {deepEqual( Stem("reddede"), "redded");});
test("redder -> red", function() {deepEqual( Stem("redder"), "red");});
test("reddes -> red", function() {deepEqual( Stem("reddes"), "red");});
test("reddet -> red", function() {deepEqual( Stem("reddet"), "red");});
test("rede -> red", function() {deepEqual( Stem("rede"), "red");});
test("redebon -> redebon", function() {deepEqual( Stem("redebon"), "redebon");});
test("redebonhed -> redebon", function() {deepEqual( Stem("redebonhed"), "redebon");});
test("redebonheden -> redebon", function() {deepEqual( Stem("redebonheden"), "redebon");});
test("redebonne -> redebon", function() {deepEqual( Stem("redebonne"), "redebon");});
test("redelig -> red", function() {deepEqual( Stem("redelig"), "red");});
test("redeligere -> red", function() {deepEqual( Stem("redeligere"), "red");});
test("redelighed -> red", function() {deepEqual( Stem("redelighed"), "red");});
test("redeligt -> red", function() {deepEqual( Stem("redeligt"), "red");});
test("reder -> red", function() {deepEqual( Stem("reder"), "red");});
test("redet -> red", function() {deepEqual( Stem("redet"), "red");});
test("redning -> redning", function() {deepEqual( Stem("redning"), "redning");});
test("redningsløst -> redningsløs", function() {deepEqual( Stem("redningsløst"), "redningsløs");});
test("redningsmænd -> redningsmænd", function() {deepEqual( Stem("redningsmænd"), "redningsmænd");});
test("redskab -> redskab", function() {deepEqual( Stem("redskab"), "redskab");});
test("redskaber -> redskab", function() {deepEqual( Stem("redskaber"), "redskab");});
test("redskaberne -> redskab", function() {deepEqual( Stem("redskaberne"), "redskab");});
test("redt -> redt", function() {deepEqual( Stem("redt"), "redt");});
test("redte -> redt", function() {deepEqual( Stem("redte"), "redt");});
test("refa -> refa", function() {deepEqual( Stem("refa"), "refa");});
test("refaimdalen -> refaimdal", function() {deepEqual( Stem("refaimdalen"), "refaimdal");});
test("refaimdalens -> refaimdal", function() {deepEqual( Stem("refaimdalens"), "refaimdal");});
test("refaims -> refaim", function() {deepEqual( Stem("refaims"), "refaim");});
test("refaiter -> refait", function() {deepEqual( Stem("refaiter"), "refait");});
test("refaiterland -> refaiterland", function() {deepEqual( Stem("refaiterland"), "refaiterland");});
test("refaiterne -> refait", function() {deepEqual( Stem("refaiterne"), "refait");});
test("refaiternes -> refait", function() {deepEqual( Stem("refaiternes"), "refait");});
test("refaja -> refaja", function() {deepEqual( Stem("refaja"), "refaja");});
test("refdim -> refdim", function() {deepEqual( Stem("refdim"), "refdim");});
test("refidim -> refidim", function() {deepEqual( Stem("refidim"), "refidim");});
test("reflip -> reflip", function() {deepEqual( Stem("reflip"), "reflip");});
test("refrygt -> refryg", function() {deepEqual( Stem("refrygt"), "refryg");});
test("regel -> regel", function() {deepEqual( Stem("regel"), "regel");});
test("regem -> regem", function() {deepEqual( Stem("regem"), "regem");});
test("regering -> regering", function() {deepEqual( Stem("regering"), "regering");});
test("regeringen -> regering", function() {deepEqual( Stem("regeringen"), "regering");});
test("regerings -> regering", function() {deepEqual( Stem("regerings"), "regering");});
test("regeringstid -> regeringstid", function() {deepEqual( Stem("regeringstid"), "regeringstid");});
test("regeringsår -> regeringsår", function() {deepEqual( Stem("regeringsår"), "regeringsår");});
test("regeringsårs -> regeringsår", function() {deepEqual( Stem("regeringsårs"), "regeringsår");});
test("regerinsgår -> regerinsgår", function() {deepEqual( Stem("regerinsgår"), "regerinsgår");});
test("regeriogsår -> regeriogsår", function() {deepEqual( Stem("regeriogsår"), "regeriogsår");});
test("regium -> regium", function() {deepEqual( Stem("regium"), "regium");});
test("regn -> regn", function() {deepEqual( Stem("regn"), "regn");});
test("regnbue -> regnbu", function() {deepEqual( Stem("regnbue"), "regnbu");});
test("regnbuen -> regnbu", function() {deepEqual( Stem("regnbuen"), "regnbu");});
test("regne -> regn", function() {deepEqual( Stem("regne"), "regn");});
test("regned -> regned", function() {deepEqual( Stem("regned"), "regned");});
test("regnede -> regned", function() {deepEqual( Stem("regnede"), "regned");});
test("regnedes -> regned", function() {deepEqual( Stem("regnedes"), "regned");});
test("regnen -> regn", function() {deepEqual( Stem("regnen"), "regn");});
test("regnens -> regn", function() {deepEqual( Stem("regnens"), "regn");});
test("regner -> regn", function() {deepEqual( Stem("regner"), "regn");});
test("regnes -> regn", function() {deepEqual( Stem("regnes"), "regn");});
test("regnet -> regn", function() {deepEqual( Stem("regnet"), "regn");});
test("regning -> regning", function() {deepEqual( Stem("regning"), "regning");});
test("regns -> regn", function() {deepEqual( Stem("regns"), "regn");});
test("regnskab -> regnskab", function() {deepEqual( Stem("regnskab"), "regnskab");});
test("regnskabet -> regnskab", function() {deepEqual( Stem("regnskabet"), "regnskab");});
test("regnskabets -> regnskab", function() {deepEqual( Stem("regnskabets"), "regnskab");});
test("regnskyl -> regnskyl", function() {deepEqual( Stem("regnskyl"), "regnskyl");});
test("regnskyllene -> regnskyl", function() {deepEqual( Stem("regnskyllene"), "regnskyl");});
test("regntiden -> regntid", function() {deepEqual( Stem("regntiden"), "regntid");});
test("regnvejrsdag -> regnvejrsdag", function() {deepEqual( Stem("regnvejrsdag"), "regnvejrsdag");});
test("rehabeam -> rehabeam", function() {deepEqual( Stem("rehabeam"), "rehabeam");});
test("rehabeams -> rehabeam", function() {deepEqual( Stem("rehabeams"), "rehabeam");});
test("rehabja -> rehabja", function() {deepEqual( Stem("rehabja"), "rehabja");});
test("rehabjas -> rehabja", function() {deepEqual( Stem("rehabjas"), "rehabja");});
test("rehob -> rehob", function() {deepEqual( Stem("rehob"), "rehob");});
test("rehobot -> rehobot", function() {deepEqual( Stem("rehobot"), "rehobot");});
test("rehobs -> rehob", function() {deepEqual( Stem("rehobs"), "rehob");});
test("rehum -> rehum", function() {deepEqual( Stem("rehum"), "rehum");});
test("rejese -> rejes", function() {deepEqual( Stem("rejese"), "rejes");});
test("rejs -> rej", function() {deepEqual( Stem("rejs"), "rej");});
test("rejse -> rejs", function() {deepEqual( Stem("rejse"), "rejs");});
test("rejsebrød -> rejsebrød", function() {deepEqual( Stem("rejsebrød"), "rejsebrød");});
test("rejsefæller -> rejsefæl", function() {deepEqual( Stem("rejsefæller"), "rejsefæl");});
test("rejsefølget -> rejsefølg", function() {deepEqual( Stem("rejsefølget"), "rejsefølg");});
test("rejsekjortel -> rejsekjortel", function() {deepEqual( Stem("rejsekjortel"), "rejsekjortel");});
test("rejsekost -> rejsekost", function() {deepEqual( Stem("rejsekost"), "rejsekost");});
test("rejsen -> rejs", function() {deepEqual( Stem("rejsen"), "rejs");});
test("rejser -> rejs", function() {deepEqual( Stem("rejser"), "rejs");});
test("rejses -> rejs", function() {deepEqual( Stem("rejses"), "rejs");});
test("rejsetog -> rejsetog", function() {deepEqual( Stem("rejsetog"), "rejsetog");});
test("rejsetæring -> rejsetæring", function() {deepEqual( Stem("rejsetæring"), "rejsetæring");});
test("rejsetøj -> rejsetøj", function() {deepEqual( Stem("rejsetøj"), "rejsetøj");});
test("rejst -> rejst", function() {deepEqual( Stem("rejst"), "rejst");});
test("rejste -> rejst", function() {deepEqual( Stem("rejste"), "rejst");});
test("rejstes -> rejst", function() {deepEqual( Stem("rejstes"), "rejst");});
test("reka -> reka", function() {deepEqual( Stem("reka"), "reka");});
test("rekab -> rekab", function() {deepEqual( Stem("rekab"), "rekab");});
test("rekabiternes -> rekabit", function() {deepEqual( Stem("rekabiternes"), "rekabit");});
test("rekabs -> rekab", function() {deepEqual( Stem("rekabs"), "rekab");});
test("rekem -> rekem", function() {deepEqual( Stem("rekem"), "rekem");});
test("relap -> relap", function() {deepEqual( Stem("relap"), "relap");});
test("reljser -> reljs", function() {deepEqual( Stem("reljser"), "reljs");});
test("rem -> rem", function() {deepEqual( Stem("rem"), "rem");});
test("remaljas -> remalja", function() {deepEqual( Stem("remaljas"), "remalja");});
test("remet -> rem", function() {deepEqual( Stem("remet"), "rem");});
test("remfans -> remfan", function() {deepEqual( Stem("remfans"), "remfan");});
test("remmene -> rem", function() {deepEqual( Stem("remmene"), "rem");});
test("remål -> remål", function() {deepEqual( Stem("remål"), "remål");});
test("ren -> ren", function() {deepEqual( Stem("ren"), "ren");});
test("rende -> rend", function() {deepEqual( Stem("rende"), "rend");});
test("rendegarnet -> rendegarn", function() {deepEqual( Stem("rendegarnet"), "rendegarn");});
test("renden -> rend", function() {deepEqual( Stem("renden"), "rend");});
test("rene -> ren", function() {deepEqual( Stem("rene"), "ren");});
test("renere -> ren", function() {deepEqual( Stem("renere"), "ren");});
test("renes -> ren", function() {deepEqual( Stem("renes"), "ren");});
test("renhed -> ren", function() {deepEqual( Stem("renhed"), "ren");});
test("renheds -> ren", function() {deepEqual( Stem("renheds"), "ren");});
test("renholdelsen -> renhold", function() {deepEqual( Stem("renholdelsen"), "renhold");});
test("renhåndet -> renhånd", function() {deepEqual( Stem("renhåndet"), "renhånd");});
test("renringe -> renring", function() {deepEqual( Stem("renringe"), "renring");});
test("renringene -> renring", function() {deepEqual( Stem("renringene"), "renring");});
test("rens -> ren", function() {deepEqual( Stem("rens"), "ren");});
test("rense -> rens", function() {deepEqual( Stem("rense"), "rens");});
test("rensed -> rensed", function() {deepEqual( Stem("rensed"), "rensed");});
test("rensede -> rensed", function() {deepEqual( Stem("rensede"), "rensed");});
test("renselse -> rens", function() {deepEqual( Stem("renselse"), "rens");});
test("renselsen -> rens", function() {deepEqual( Stem("renselsen"), "rens");});
test("renselsesblod -> renselsesblod", function() {deepEqual( Stem("renselsesblod"), "renselsesblod");});
test("renselsesdage -> renselsesdag", function() {deepEqual( Stem("renselsesdage"), "renselsesdag");});
test("renselsesdagenes -> renselsesdag", function() {deepEqual( Stem("renselsesdagenes"), "renselsesdag");});
test("renselsesskik -> renselsesskik", function() {deepEqual( Stem("renselsesskik"), "renselsesskik");});
test("renselsestid -> renselsestid", function() {deepEqual( Stem("renselsestid"), "renselsestid");});
test("renselsesvand -> renselsesvand", function() {deepEqual( Stem("renselsesvand"), "renselsesvand");});
test("renselsesvandet -> renselsesvand", function() {deepEqual( Stem("renselsesvandet"), "renselsesvand");});
test("renser -> rens", function() {deepEqual( Stem("renser"), "rens");});
test("renses -> rens", function() {deepEqual( Stem("renses"), "rens");});
test("renset -> rens", function() {deepEqual( Stem("renset"), "rens");});
test("rensning -> rensning", function() {deepEqual( Stem("rensning"), "rensning");});
test("rent -> rent", function() {deepEqual( Stem("rent"), "rent");});
test("rente -> rent", function() {deepEqual( Stem("rente"), "rent");});
test("rentemester -> rentemest", function() {deepEqual( Stem("rentemester"), "rentemest");});
test("renter -> rent", function() {deepEqual( Stem("renter"), "rent");});
test("rer -> rer", function() {deepEqual( Stem("rer"), "rer");});
test("rerne -> rern", function() {deepEqual( Stem("rerne"), "rern");});
test("res -> res", function() {deepEqual( Stem("res"), "res");});
test("resas -> resa", function() {deepEqual( Stem("resas"), "resa");});
test("resen -> res", function() {deepEqual( Stem("resen"), "res");});
test("resjef -> resjef", function() {deepEqual( Stem("resjef"), "resjef");});
test("reskib -> reskib", function() {deepEqual( Stem("reskib"), "reskib");});
test("reskændere -> reskænd", function() {deepEqual( Stem("reskændere"), "reskænd");});
test("resminde -> resmind", function() {deepEqual( Stem("resminde"), "resmind");});
test("resnavn -> resnavn", function() {deepEqual( Stem("resnavn"), "resnavn");});
test("respladsen -> resplads", function() {deepEqual( Stem("respladsen"), "resplads");});
test("ressædet -> ressæd", function() {deepEqual( Stem("ressædet"), "ressæd");});
test("rest -> rest", function() {deepEqual( Stem("rest"), "rest");});
test("resten -> rest", function() {deepEqual( Stem("resten"), "rest");});
test("resvogn -> resvogn", function() {deepEqual( Stem("resvogn"), "resvogn");});
test("ret -> ret", function() {deepEqual( Stem("ret"), "ret");});
test("retael -> retael", function() {deepEqual( Stem("retael"), "retael");});
test("retfærd -> retfærd", function() {deepEqual( Stem("retfærd"), "retfærd");});
test("retfærdig -> retfærd", function() {deepEqual( Stem("retfærdig"), "retfærd");});
test("retfærdige -> retfærd", function() {deepEqual( Stem("retfærdige"), "retfærd");});
test("retfærdigere -> retfærd", function() {deepEqual( Stem("retfærdigere"), "retfærd");});
test("retfærdiges -> retfærd", function() {deepEqual( Stem("retfærdiges"), "retfærd");});
test("retfærdiggjorde -> retfærdiggjord", function() {deepEqual( Stem("retfærdiggjorde"), "retfærdiggjord");});
test("retfærdiggjort -> retfærdiggjort", function() {deepEqual( Stem("retfærdiggjort"), "retfærdiggjort");});
test("retfærdiggjorte -> retfærdiggjort", function() {deepEqual( Stem("retfærdiggjorte"), "retfærdiggjort");});
test("retfærdiggør -> retfærdiggør", function() {deepEqual( Stem("retfærdiggør"), "retfærdiggør");});
test("retfærdiggøre -> retfærdiggør", function() {deepEqual( Stem("retfærdiggøre"), "retfærdiggør");});
test("retfærdiggørelse -> retfærdiggør", function() {deepEqual( Stem("retfærdiggørelse"), "retfærdiggør");});
test("retfærdiggørelses -> retfærdiggør", function() {deepEqual( Stem("retfærdiggørelses"), "retfærdiggør");});
test("retfærdiggører -> retfærdiggør", function() {deepEqual( Stem("retfærdiggører"), "retfærdiggør");});
test("retfærdiggøres -> retfærdiggør", function() {deepEqual( Stem("retfærdiggøres"), "retfærdiggør");});
test("retfærdighed -> retfærd", function() {deepEqual( Stem("retfærdighed"), "retfærd");});
test("retfærdigheden -> retfærd", function() {deepEqual( Stem("retfærdigheden"), "retfærd");});
test("retfærdighedens -> retfærd", function() {deepEqual( Stem("retfærdighedens"), "retfærd");});
test("retfærdigheds -> retfærd", function() {deepEqual( Stem("retfærdigheds"), "retfærd");});
test("retfærdigher -> retfærdigh", function() {deepEqual( Stem("retfærdigher"), "retfærdigh");});
test("retfærdigs -> retfærd", function() {deepEqual( Stem("retfærdigs"), "retfærd");});
test("retfærdigt -> retfærd", function() {deepEqual( Stem("retfærdigt"), "retfærd");});
test("retfærds -> retfærd", function() {deepEqual( Stem("retfærds"), "retfærd");});
test("retfærdsgerninger -> retfærdsgerning", function() {deepEqual( Stem("retfærdsgerninger"), "retfærdsgerning");});
test("retfærdshandlinger -> retfærdshandling", function() {deepEqual( Stem("retfærdshandlinger"), "retfærdshandling");});
test("retmæssig -> retmæs", function() {deepEqual( Stem("retmæssig"), "retmæs");});
test("retmæssige -> retmæs", function() {deepEqual( Stem("retmæssige"), "retmæs");});
test("retning -> retning", function() {deepEqual( Stem("retning"), "retning");});
test("retninger -> retning", function() {deepEqual( Stem("retninger"), "retning");});
test("rets -> ret", function() {deepEqual( Stem("rets"), "ret");});
test("retsbetjente -> retsbetjent", function() {deepEqual( Stem("retsbetjente"), "retsbetjent");});
test("retsbrud -> retsbrud", function() {deepEqual( Stem("retsbrud"), "retsbrud");});
test("retsgyldig -> retsgyld", function() {deepEqual( Stem("retsgyldig"), "retsgyld");});
test("retsind -> retsind", function() {deepEqual( Stem("retsind"), "retsind");});
test("retsindig -> retsind", function() {deepEqual( Stem("retsindig"), "retsind");});
test("retsindige -> retsind", function() {deepEqual( Stem("retsindige"), "retsind");});
test("retsindiges -> retsind", function() {deepEqual( Stem("retsindiges"), "retsind");});
test("retskendelse -> retskend", function() {deepEqual( Stem("retskendelse"), "retskend");});
test("retskendelsens -> retskend", function() {deepEqual( Stem("retskendelsens"), "retskend");});
test("retskyndige -> retskynd", function() {deepEqual( Stem("retskyndige"), "retskynd");});
test("retssag -> retssag", function() {deepEqual( Stem("retssag"), "retssag");});
test("retssager -> retssag", function() {deepEqual( Stem("retssager"), "retssag");});
test("retsskrivere -> retsskriv", function() {deepEqual( Stem("retsskrivere"), "retsskriv");});
test("retsskriveren -> retsskriv", function() {deepEqual( Stem("retsskriveren"), "retsskriv");});
test("retstrætte -> retstræt", function() {deepEqual( Stem("retstrætte"), "retstræt");});
test("retstrætter -> retstræt", function() {deepEqual( Stem("retstrætter"), "retstræt");});
test("rette -> ret", function() {deepEqual( Stem("rette"), "ret");});
test("rettede -> retted", function() {deepEqual( Stem("rettede"), "retted");});
test("rettelig -> ret", function() {deepEqual( Stem("rettelig"), "ret");});
test("retten -> ret", function() {deepEqual( Stem("retten"), "ret");});
test("rettens -> ret", function() {deepEqual( Stem("rettens"), "ret");});
test("retter -> ret", function() {deepEqual( Stem("retter"), "ret");});
test("rettergang -> rettergang", function() {deepEqual( Stem("rettergang"), "rettergang");});
test("rettes -> ret", function() {deepEqual( Stem("rettes"), "ret");});
test("rettesnor -> rettesnor", function() {deepEqual( Stem("rettesnor"), "rettesnor");});
test("rettet -> ret", function() {deepEqual( Stem("rettet"), "ret");});
test("rettighed -> ret", function() {deepEqual( Stem("rettighed"), "ret");});
test("retudere -> retud", function() {deepEqual( Stem("retudere"), "retud");});
test("retuderier -> retuderi", function() {deepEqual( Stem("retuderier"), "retuderi");});
test("retvis -> retvis", function() {deepEqual( Stem("retvis"), "retvis");});
test("retvise -> retvis", function() {deepEqual( Stem("retvise"), "retvis");});
test("reuel -> reuel", function() {deepEqual( Stem("reuel"), "reuel");});
test("reuels -> reuel", function() {deepEqual( Stem("reuels"), "reuel");});
test("rev -> rev", function() {deepEqual( Stem("rev"), "rev");});
test("reve -> rev", function() {deepEqual( Stem("reve"), "rev");});
test("reves -> rev", function() {deepEqual( Stem("reves"), "rev");});
test("revet -> rev", function() {deepEqual( Stem("revet"), "rev");});
test("revne -> revn", function() {deepEqual( Stem("revne"), "revn");});
test("revnede -> revned", function() {deepEqual( Stem("revnede"), "revned");});
test("revner -> revn", function() {deepEqual( Stem("revner"), "revn");});
test("revs -> rev", function() {deepEqual( Stem("revs"), "rev");});
test("revse -> revs", function() {deepEqual( Stem("revse"), "revs");});
test("revsede -> revsed", function() {deepEqual( Stem("revsede"), "revsed");});
test("revselse -> revs", function() {deepEqual( Stem("revselse"), "revs");});
test("revsende -> revs", function() {deepEqual( Stem("revsende"), "revs");});
test("revser -> revs", function() {deepEqual( Stem("revser"), "revs");});
test("revses -> revs", function() {deepEqual( Stem("revses"), "revs");});
test("revset -> revs", function() {deepEqual( Stem("revset"), "revs");});
test("rezef -> rezef", function() {deepEqual( Stem("rezef"), "rezef");});
test("rezin -> rezin", function() {deepEqual( Stem("rezin"), "rezin");});
test("rezins -> rezin", function() {deepEqual( Stem("rezins"), "rezin");});
test("rezon -> rezon", function() {deepEqual( Stem("rezon"), "rezon");});
test("rgrer -> rgrer", function() {deepEqual( Stem("rgrer"), "rgrer");});
test("rias -> rias", function() {deepEqual( Stem("rias"), "rias");});
test("ribajs -> ribaj", function() {deepEqual( Stem("ribajs"), "ribaj");});
test("ribben -> rib", function() {deepEqual( Stem("ribben"), "rib");});
test("ribbenet -> ribben", function() {deepEqual( Stem("ribbenet"), "ribben");});
test("ribla -> ribla", function() {deepEqual( Stem("ribla"), "ribla");});
test("rid -> rid", function() {deepEqual( Stem("rid"), "rid");});
test("ride -> rid", function() {deepEqual( Stem("ride"), "rid");});
test("ridedyr -> ridedyr", function() {deepEqual( Stem("ridedyr"), "ridedyr");});
test("rideheste -> ridehest", function() {deepEqual( Stem("rideheste"), "ridehest");});
test("ridende -> rid", function() {deepEqual( Stem("ridende"), "rid");});
test("rider -> rid", function() {deepEqual( Stem("rider"), "rid");});
test("ridning -> ridning", function() {deepEqual( Stem("ridning"), "ridning");});
test("ridse -> rids", function() {deepEqual( Stem("ridse"), "rids");});
test("ridset -> rids", function() {deepEqual( Stem("ridset"), "rids");});
test("rifaf -> rifaf", function() {deepEqual( Stem("rifaf"), "rifaf");});
test("rifat -> rifat", function() {deepEqual( Stem("rifat"), "rifat");});
test("rifter -> rift", function() {deepEqual( Stem("rifter"), "rift");});
test("rig -> rig", function() {deepEqual( Stem("rig"), "rig");});
test("rigdom -> rigdom", function() {deepEqual( Stem("rigdom"), "rigdom");});
test("rigdomme -> rigdom", function() {deepEqual( Stem("rigdomme"), "rigdom");});
test("rigdommen -> rigdom", function() {deepEqual( Stem("rigdommen"), "rigdom");});
test("rigdommene -> rigdom", function() {deepEqual( Stem("rigdommene"), "rigdom");});
test("rigdommens -> rigdom", function() {deepEqual( Stem("rigdommens"), "rigdom");});
test("rige -> rig", function() {deepEqual( Stem("rige"), "rig");});
test("rigelig -> rig", function() {deepEqual( Stem("rigelig"), "rig");});
test("rigelige -> rig", function() {deepEqual( Stem("rigelige"), "rig");});
test("rigeligt -> rig", function() {deepEqual( Stem("rigeligt"), "rig");});
test("riger -> rig", function() {deepEqual( Stem("riger"), "rig");});
test("rigere -> rig", function() {deepEqual( Stem("rigere"), "rig");});
test("rigerne -> rig", function() {deepEqual( Stem("rigerne"), "rig");});
test("rigernes -> rig", function() {deepEqual( Stem("rigernes"), "rig");});
test("riges -> rig", function() {deepEqual( Stem("riges"), "rig");});
test("riget -> rig", function() {deepEqual( Stem("riget"), "rig");});
test("rigets -> rig", function() {deepEqual( Stem("rigets"), "rig");});
test("rigmand -> rigmand", function() {deepEqual( Stem("rigmand"), "rigmand");});
test("rigmandens -> rigmand", function() {deepEqual( Stem("rigmandens"), "rigmand");});
test("rigmands -> rigmand", function() {deepEqual( Stem("rigmands"), "rigmand");});
test("rigmænd -> rigmænd", function() {deepEqual( Stem("rigmænd"), "rigmænd");});
test("rigsråder -> rigsråd", function() {deepEqual( Stem("rigsråder"), "rigsråd");});
test("rigsråderne -> rigsråd", function() {deepEqual( Stem("rigsråderne"), "rigsråd");});
test("rigt -> rigt", function() {deepEqual( Stem("rigt"), "rigt");});
test("rigtig -> rigt", function() {deepEqual( Stem("rigtig"), "rigt");});
test("rigtige -> rigt", function() {deepEqual( Stem("rigtige"), "rigt");});
test("rigtighed -> rigt", function() {deepEqual( Stem("rigtighed"), "rigt");});
test("rigtigt -> rigt", function() {deepEqual( Stem("rigtigt"), "rigt");});
test("rim -> rim", function() {deepEqual( Stem("rim"), "rim");});
test("rimmon -> rimmon", function() {deepEqual( Stem("rimmon"), "rimmon");});
test("rimmona -> rimmona", function() {deepEqual( Stem("rimmona"), "rimmona");});
test("rimmons -> rimmon", function() {deepEqual( Stem("rimmons"), "rimmon");});
test("rimmox -> rimmox", function() {deepEqual( Stem("rimmox"), "rimmox");});
test("rinde -> rind", function() {deepEqual( Stem("rinde"), "rind");});
test("rindende -> rind", function() {deepEqual( Stem("rindende"), "rind");});
test("rinder -> rind", function() {deepEqual( Stem("rinder"), "rind");});
test("ring -> ring", function() {deepEqual( Stem("ring"), "ring");});
test("ringe -> ring", function() {deepEqual( Stem("ringe"), "ring");});
test("ringeagt -> ringeag", function() {deepEqual( Stem("ringeagt"), "ringeag");});
test("ringeagte -> ringeag", function() {deepEqual( Stem("ringeagte"), "ringeag");});
test("ringeagted -> ringeagted", function() {deepEqual( Stem("ringeagted"), "ringeagted");});
test("ringeagtede -> ringeagted", function() {deepEqual( Stem("ringeagtede"), "ringeagted");});
test("ringeagter -> ringeag", function() {deepEqual( Stem("ringeagter"), "ringeag");});
test("ringeagtes -> ringeag", function() {deepEqual( Stem("ringeagtes"), "ringeag");});
test("ringeagtet -> ringeag", function() {deepEqual( Stem("ringeagtet"), "ringeag");});
test("ringen -> ring", function() {deepEqual( Stem("ringen"), "ring");});
test("ringene -> ring", function() {deepEqual( Stem("ringene"), "ring");});
test("ringere -> ring", function() {deepEqual( Stem("ringere"), "ring");});
test("ringes -> ring", function() {deepEqual( Stem("ringes"), "ring");});
test("ringeste -> ringest", function() {deepEqual( Stem("ringeste"), "ringest");});
test("ringhed -> ring", function() {deepEqual( Stem("ringhed"), "ring");});
test("ringmur -> ringmur", function() {deepEqual( Stem("ringmur"), "ringmur");});
test("ringorm -> ringorm", function() {deepEqual( Stem("ringorm"), "ringorm");});
test("rinna -> rinna", function() {deepEqual( Stem("rinna"), "rinna");});
test("ripper -> rip", function() {deepEqual( Stem("ripper"), "rip");});
test("ris -> ris", function() {deepEqual( Stem("ris"), "ris");});
test("riset -> ris", function() {deepEqual( Stem("riset"), "ris");});
test("risjatajim -> risjatajim", function() {deepEqual( Stem("risjatajim"), "risjatajim");});
test("risjon -> risjon", function() {deepEqual( Stem("risjon"), "risjon");});
test("risjons -> risjon", function() {deepEqual( Stem("risjons"), "risjon");});
test("rislede -> risled", function() {deepEqual( Stem("rislede"), "risled");});
test("rislende -> risl", function() {deepEqual( Stem("rislende"), "risl");});
test("rist -> rist", function() {deepEqual( Stem("rist"), "rist");});
test("ristede -> risted", function() {deepEqual( Stem("ristede"), "risted");});
test("rister -> rist", function() {deepEqual( Stem("rister"), "rist");});
test("ristet -> rist", function() {deepEqual( Stem("ristet"), "rist");});
test("ritma -> ritma", function() {deepEqual( Stem("ritma"), "ritma");});
test("riv -> riv", function() {deepEqual( Stem("riv"), "riv");});
test("rive -> riv", function() {deepEqual( Stem("rive"), "riv");});
test("rivende -> riv", function() {deepEqual( Stem("rivende"), "riv");});
test("river -> riv", function() {deepEqual( Stem("river"), "riv");});
test("rives -> riv", function() {deepEqual( Stem("rives"), "riv");});
test("rivninger -> rivning", function() {deepEqual( Stem("rivninger"), "rivning");});
test("rizja -> rizja", function() {deepEqual( Stem("rizja"), "rizja");});
test("rizpa -> rizpa", function() {deepEqual( Stem("rizpa"), "rizpa");});
test("rk -> rk", function() {deepEqual( Stem("rk"), "rk");});
test("rken -> rken", function() {deepEqual( Stem("rken"), "rken");});
test("rkenboere -> rkenbo", function() {deepEqual( Stem("rkenboere"), "rkenbo");});
test("rkendyr -> rkendyr", function() {deepEqual( Stem("rkendyr"), "rkendyr");});
test("rkenegnene -> rkenegn", function() {deepEqual( Stem("rkenegnene"), "rkenegn");});
test("rkenen -> rken", function() {deepEqual( Stem("rkenen"), "rken");});
test("rkenens -> rken", function() {deepEqual( Stem("rkenens"), "rken");});
test("rkenensgræsgang -> rkenensgræsgang", function() {deepEqual( Stem("rkenensgræsgang"), "rkenensgræsgang");});
test("rkener -> rken", function() {deepEqual( Stem("rkener"), "rken");});
test("rkenerne -> rken", function() {deepEqual( Stem("rkenerne"), "rken");});
test("rkenland -> rkenland", function() {deepEqual( Stem("rkenland"), "rkenland");});
test("rkenlandet -> rkenland", function() {deepEqual( Stem("rkenlandet"), "rkenland");});
test("rkentorne -> rkentorn", function() {deepEqual( Stem("rkentorne"), "rkentorn");});
test("rkenår -> rkenår", function() {deepEqual( Stem("rkenår"), "rkenår");});
test("rknen -> rknen", function() {deepEqual( Stem("rknen"), "rknen");});
test("rknerne -> rknern", function() {deepEqual( Stem("rknerne"), "rknern");});
test("rle -> rle", function() {deepEqual( Stem("rle"), "rle");});
test("rlig -> rlig", function() {deepEqual( Stem("rlig"), "rlig");});
test("rlighed -> rlig", function() {deepEqual( Stem("rlighed"), "rlig");});
test("rmekjortelen -> rmekjortel", function() {deepEqual( Stem("rmekjortelen"), "rmekjortel");});
test("rmer -> rmer", function() {deepEqual( Stem("rmer"), "rmer");});
test("rn -> rn", function() {deepEqual( Stem("rn"), "rn");});
test("rne -> rne", function() {deepEqual( Stem("rne"), "rne");});
test("rneansigt -> rneans", function() {deepEqual( Stem("rneansigt"), "rneans");});
test("rnefjer -> rnefj", function() {deepEqual( Stem("rnefjer"), "rnefj");});
test("rnen -> rnen", function() {deepEqual( Stem("rnen"), "rnen");});
test("rnene -> rnen", function() {deepEqual( Stem("rnene"), "rnen");});
test("rnens -> rnen", function() {deepEqual( Stem("rnens"), "rnen");});
test("rneunger -> rneung", function() {deepEqual( Stem("rneunger"), "rneung");});
test("rnevinger -> rneving", function() {deepEqual( Stem("rnevinger"), "rneving");});
test("rns -> rns", function() {deepEqual( Stem("rns"), "rns");});
test("ro -> ro", function() {deepEqual( Stem("ro"), "ro");});
test("roabte -> roabt", function() {deepEqual( Stem("roabte"), "roabt");});
test("roboam -> roboam", function() {deepEqual( Stem("roboam"), "roboam");});
test("rod -> rod", function() {deepEqual( Stem("rod"), "rod");});
test("rode -> rod", function() {deepEqual( Stem("rode"), "rod");});
test("roden -> rod", function() {deepEqual( Stem("roden"), "rod");});
test("rodfæstede -> rodfæsted", function() {deepEqual( Stem("rodfæstede"), "rodfæsted");});
test("rodosboerne -> rodosbo", function() {deepEqual( Stem("rodosboerne"), "rodosbo");});
test("rodskud -> rodskud", function() {deepEqual( Stem("rodskud"), "rodskud");});
test("rodus -> rodus", function() {deepEqual( Stem("rodus"), "rodus");});
test("roende -> roend", function() {deepEqual( Stem("roende"), "roend");});
test("roet -> roet", function() {deepEqual( Stem("roet"), "roet");});
test("roga -> roga", function() {deepEqual( Stem("roga"), "roga");});
test("rogelim -> rogelim", function() {deepEqual( Stem("rogelim"), "rogelim");});
test("rogelkilden -> rogelkild", function() {deepEqual( Stem("rogelkilden"), "rogelkild");});
test("rokke -> rok", function() {deepEqual( Stem("rokke"), "rok");});
test("rokken -> rok", function() {deepEqual( Stem("rokken"), "rok");});
test("rokkes -> rok", function() {deepEqual( Stem("rokkes"), "rok");});
test("rolig -> rol", function() {deepEqual( Stem("rolig"), "rol");});
test("rolige -> rol", function() {deepEqual( Stem("rolige"), "rol");});
test("roligt -> rol", function() {deepEqual( Stem("roligt"), "rol");});
test("rom -> rom", function() {deepEqual( Stem("rom"), "rom");});
test("romamti -> romamti", function() {deepEqual( Stem("romamti"), "romamti");});
test("romer -> rom", function() {deepEqual( Stem("romer"), "rom");});
test("romere -> rom", function() {deepEqual( Stem("romere"), "rom");});
test("romerne -> rom", function() {deepEqual( Stem("romerne"), "rom");});
test("romernes -> rom", function() {deepEqual( Stem("romernes"), "rom");});
test("romersk -> romersk", function() {deepEqual( Stem("romersk"), "romersk");});
test("romerske -> romersk", function() {deepEqual( Stem("romerske"), "romersk");});
test("ror -> ror", function() {deepEqual( Stem("ror"), "ror");});
test("rorkarle -> rorkarl", function() {deepEqual( Stem("rorkarle"), "rorkarl");});
test("rortovene -> rortov", function() {deepEqual( Stem("rortovene"), "rortov");});
test("ros -> ros", function() {deepEqual( Stem("ros"), "ros");});
test("rose -> ros", function() {deepEqual( Stem("rose"), "ros");});
test("rosen -> ros", function() {deepEqual( Stem("rosen"), "ros");});
test("roser -> ros", function() {deepEqual( Stem("roser"), "ros");});
test("roses -> ros", function() {deepEqual( Stem("roses"), "ros");});
test("rosinkage -> rosinkag", function() {deepEqual( Stem("rosinkage"), "rosinkag");});
test("rosinkager -> rosinkag", function() {deepEqual( Stem("rosinkager"), "rosinkag");});
test("rosj -> rosj", function() {deepEqual( Stem("rosj"), "rosj");});
test("rost -> rost", function() {deepEqual( Stem("rost"), "rost");});
test("roste -> rost", function() {deepEqual( Stem("roste"), "rost");});
test("rottede -> rotted", function() {deepEqual( Stem("rottede"), "rotted");});
test("rottet -> rot", function() {deepEqual( Stem("rottet"), "rot");});
test("rov -> rov", function() {deepEqual( Stem("rov"), "rov");});
test("rovdyr -> rovdyr", function() {deepEqual( Stem("rovdyr"), "rovdyr");});
test("rovet -> rov", function() {deepEqual( Stem("rovet"), "rov");});
test("rovfugle -> rovfugl", function() {deepEqual( Stem("rovfugle"), "rovfugl");});
test("rovfuglen -> rovfugl", function() {deepEqual( Stem("rovfuglen"), "rovfugl");});
test("rovgridske -> rovgridsk", function() {deepEqual( Stem("rovgridske"), "rovgridsk");});
test("rovlystne -> rovlystn", function() {deepEqual( Stem("rovlystne"), "rovlystn");});
test("rs -> rs", function() {deepEqual( Stem("rs"), "rs");});
test("rsabbater -> rsabbat", function() {deepEqual( Stem("rsabbater"), "rsabbat");});
test("rsag -> rsag", function() {deepEqual( Stem("rsag"), "rsag");});
test("rsagen -> rsag", function() {deepEqual( Stem("rsagen"), "rsag");});
test("rub -> rub", function() {deepEqual( Stem("rub"), "rub");});
test("ruben -> rub", function() {deepEqual( Stem("ruben"), "rub");});
test("rubeniteme -> rubenitem", function() {deepEqual( Stem("rubeniteme"), "rubenitem");});
test("rubeniten -> rubenit", function() {deepEqual( Stem("rubeniten"), "rubenit");});
test("rubeniter -> rubenit", function() {deepEqual( Stem("rubeniter"), "rubenit");});
test("rubeniterne -> rubenit", function() {deepEqual( Stem("rubeniterne"), "rubenit");});
test("rubeniternes -> rubenit", function() {deepEqual( Stem("rubeniternes"), "rubenit");});
test("rubens -> rub", function() {deepEqual( Stem("rubens"), "rub");});
test("rubin -> rubin", function() {deepEqual( Stem("rubin"), "rubin");});
test("rubiner -> rubin", function() {deepEqual( Stem("rubiner"), "rubin");});
test("rude -> rud", function() {deepEqual( Stem("rude"), "rud");});
test("rufus -> rufus", function() {deepEqual( Stem("rufus"), "rufus");});
test("ruger -> rug", function() {deepEqual( Stem("ruger"), "rug");});
test("ruindynge -> ruindyng", function() {deepEqual( Stem("ruindynge"), "ruindyng");});
test("ruiner -> ruin", function() {deepEqual( Stem("ruiner"), "ruin");});
test("ruinerne -> ruin", function() {deepEqual( Stem("ruinerne"), "ruin");});
test("ruinhob -> ruinhob", function() {deepEqual( Stem("ruinhob"), "ruinhob");});
test("ruinhobe -> ruinhob", function() {deepEqual( Stem("ruinhobe"), "ruinhob");});
test("rulle -> rul", function() {deepEqual( Stem("rulle"), "rul");});
test("rullede -> rulled", function() {deepEqual( Stem("rullede"), "rulled");});
test("rullende -> rul", function() {deepEqual( Stem("rullende"), "rul");});
test("ruller -> rul", function() {deepEqual( Stem("ruller"), "rul");});
test("rulles -> rul", function() {deepEqual( Stem("rulles"), "rul");});
test("rum -> rum", function() {deepEqual( Stem("rum"), "rum");});
test("ruma -> ruma", function() {deepEqual( Stem("ruma"), "ruma");});
test("rumme -> rum", function() {deepEqual( Stem("rumme"), "rum");});
test("rummede -> rummed", function() {deepEqual( Stem("rummede"), "rummed");});
test("rummeligt -> rum", function() {deepEqual( Stem("rummeligt"), "rum");});
test("rummene -> rum", function() {deepEqual( Stem("rummene"), "rum");});
test("rummer -> rum", function() {deepEqual( Stem("rummer"), "rum");});
test("rummet -> rum", function() {deepEqual( Stem("rummet"), "rum");});
test("rummål -> rummål", function() {deepEqual( Stem("rummål"), "rummål");});
test("rund -> rund", function() {deepEqual( Stem("rund"), "rund");});
test("runde -> rund", function() {deepEqual( Stem("runde"), "rund");});
test("rundet -> rund", function() {deepEqual( Stem("rundet"), "rund");});
test("rundgang -> rundgang", function() {deepEqual( Stem("rundgang"), "rundgang");});
test("rundhåndet -> rundhånd", function() {deepEqual( Stem("rundhåndet"), "rundhånd");});
test("runding -> runding", function() {deepEqual( Stem("runding"), "runding");});
test("rundklippet -> rundklip", function() {deepEqual( Stem("rundklippet"), "rundklip");});
test("rundt -> rund", function() {deepEqual( Stem("rundt"), "rund");});
test("runge -> rung", function() {deepEqual( Stem("runge"), "rung");});
test("rungende -> rung", function() {deepEqual( Stem("rungende"), "rung");});
test("rus -> rus", function() {deepEqual( Stem("rus"), "rus");});
test("rust -> rust", function() {deepEqual( Stem("rust"), "rust");});
test("ruste -> rust", function() {deepEqual( Stem("ruste"), "rust");});
test("rustede -> rusted", function() {deepEqual( Stem("rustede"), "rusted");});
test("rusten -> rust", function() {deepEqual( Stem("rusten"), "rust");});
test("ruster -> rust", function() {deepEqual( Stem("ruster"), "rust");});
test("rustet -> rust", function() {deepEqual( Stem("rustet"), "rust");});
test("rustkammer -> rustkam", function() {deepEqual( Stem("rustkammer"), "rustkam");});
test("rustne -> rustn", function() {deepEqual( Stem("rustne"), "rustn");});
test("rustning -> rustning", function() {deepEqual( Stem("rustning"), "rustning");});
test("rustninger -> rustning", function() {deepEqual( Stem("rustninger"), "rustning");});
test("rustningerne -> rustning", function() {deepEqual( Stem("rustningerne"), "rustning");});
test("rut -> rut", function() {deepEqual( Stem("rut"), "rut");});
test("ruth -> ruth", function() {deepEqual( Stem("ruth"), "ruth");});
test("ry -> ry", function() {deepEqual( Stem("ry"), "ry");});
test("ryd -> ryd", function() {deepEqual( Stem("ryd"), "ryd");});
test("rydde -> ryd", function() {deepEqual( Stem("rydde"), "ryd");});
test("rydded -> rydded", function() {deepEqual( Stem("rydded"), "rydded");});
test("ryddede -> rydded", function() {deepEqual( Stem("ryddede"), "rydded");});
test("rydder -> ryd", function() {deepEqual( Stem("rydder"), "ryd");});
test("ryddes -> ryd", function() {deepEqual( Stem("ryddes"), "ryd");});
test("ryddet -> ryd", function() {deepEqual( Stem("ryddet"), "ryd");});
test("ryg -> ryg", function() {deepEqual( Stem("ryg"), "ryg");});
test("rygende -> ryg", function() {deepEqual( Stem("rygende"), "ryg");});
test("ryger -> ryg", function() {deepEqual( Stem("ryger"), "ryg");});
test("ryggen -> ryg", function() {deepEqual( Stem("ryggen"), "ryg");});
test("ryggesløse -> ryggesløs", function() {deepEqual( Stem("ryggesløse"), "ryggesløs");});
test("ryggesløses -> ryggesløs", function() {deepEqual( Stem("ryggesløses"), "ryggesløs");});
test("ryggesløshed -> ryggesløs", function() {deepEqual( Stem("ryggesløshed"), "ryggesløs");});
test("ryggesløshedens -> ryggesløs", function() {deepEqual( Stem("ryggesløshedens"), "ryggesløs");});
test("ryggesløst -> ryggesløs", function() {deepEqual( Stem("ryggesløst"), "ryggesløs");});
test("rygraden -> rygrad", function() {deepEqual( Stem("rygraden"), "rygrad");});
test("rygte -> rygt", function() {deepEqual( Stem("rygte"), "rygt");});
test("rygtedes -> rygted", function() {deepEqual( Stem("rygtedes"), "rygted");});
test("rygter -> rygt", function() {deepEqual( Stem("rygter"), "rygt");});
test("rygtes -> rygt", function() {deepEqual( Stem("rygtes"), "rygt");});
test("rygtet -> rygt", function() {deepEqual( Stem("rygtet"), "rygt");});
test("ryk -> ryk", function() {deepEqual( Stem("ryk"), "ryk");});
test("rykke -> ryk", function() {deepEqual( Stem("rykke"), "ryk");});
test("rykked -> rykked", function() {deepEqual( Stem("rykked"), "rykked");});
test("rykkede -> rykked", function() {deepEqual( Stem("rykkede"), "rykked");});
test("rykkende -> ryk", function() {deepEqual( Stem("rykkende"), "ryk");});
test("rykker -> ryk", function() {deepEqual( Stem("rykker"), "ryk");});
test("rykkes -> ryk", function() {deepEqual( Stem("rykkes"), "ryk");});
test("rykket -> ryk", function() {deepEqual( Stem("rykket"), "ryk");});
test("rynke -> rynk", function() {deepEqual( Stem("rynke"), "rynk");});
test("ryst -> ryst", function() {deepEqual( Stem("ryst"), "ryst");});
test("ryste -> ryst", function() {deepEqual( Stem("ryste"), "ryst");});
test("rysted -> rysted", function() {deepEqual( Stem("rysted"), "rysted");});
test("rystede -> rysted", function() {deepEqual( Stem("rystede"), "rysted");});
test("rystedes -> rysted", function() {deepEqual( Stem("rystedes"), "rysted");});
test("rystende -> ryst", function() {deepEqual( Stem("rystende"), "ryst");});
test("ryster -> ryst", function() {deepEqual( Stem("ryster"), "ryst");});
test("rystes -> ryst", function() {deepEqual( Stem("rystes"), "ryst");});
test("rystet -> ryst", function() {deepEqual( Stem("rystet"), "ryst");});
test("rytter -> ryt", function() {deepEqual( Stem("rytter"), "ryt");});
test("rytterbyerne -> rytterby", function() {deepEqual( Stem("rytterbyerne"), "rytterby");});
test("ryttere -> ryt", function() {deepEqual( Stem("ryttere"), "ryt");});
test("rytteren -> ryt", function() {deepEqual( Stem("rytteren"), "ryt");});
test("rytterheste -> rytterhest", function() {deepEqual( Stem("rytterheste"), "rytterhest");});
test("rytterhærene -> rytterhær", function() {deepEqual( Stem("rytterhærene"), "rytterhær");});
test("rytteri -> rytteri", function() {deepEqual( Stem("rytteri"), "rytteri");});
test("rytterne -> ryt", function() {deepEqual( Stem("rytterne"), "ryt");});
test("rytternes -> ryt", function() {deepEqual( Stem("rytternes"), "ryt");});
test("rå -> rå", function() {deepEqual( Stem("rå"), "rå");});
test("råb -> råb", function() {deepEqual( Stem("råb"), "råb");});
test("råbe -> råb", function() {deepEqual( Stem("råbe"), "råb");});
test("råben -> råb", function() {deepEqual( Stem("råben"), "råb");});
test("råbende -> råb", function() {deepEqual( Stem("råbende"), "råb");});
test("råber -> råb", function() {deepEqual( Stem("råber"), "råb");});
test("råbes -> råb", function() {deepEqual( Stem("råbes"), "råb");});
test("råbet -> råb", function() {deepEqual( Stem("råbet"), "råb");});
test("råbt -> råbt", function() {deepEqual( Stem("råbt"), "råbt");});
test("råbte -> råbt", function() {deepEqual( Stem("råbte"), "råbt");});
test("råd -> råd", function() {deepEqual( Stem("råd"), "råd");});
test("rådden -> råd", function() {deepEqual( Stem("rådden"), "råd");});
test("råddenskab -> råddenskab", function() {deepEqual( Stem("råddenskab"), "råddenskab");});
test("råddent -> råddent", function() {deepEqual( Stem("råddent"), "råddent");});
test("råde -> råd", function() {deepEqual( Stem("råde"), "råd");});
test("rådede -> råded", function() {deepEqual( Stem("rådede"), "råded");});
test("råder -> råd", function() {deepEqual( Stem("råder"), "råd");});
test("rådet -> råd", function() {deepEqual( Stem("rådet"), "råd");});
test("rådets -> råd", function() {deepEqual( Stem("rådets"), "råd");});
test("rådført -> rådført", function() {deepEqual( Stem("rådført"), "rådført");});
test("rådførte -> rådført", function() {deepEqual( Stem("rådførte"), "rådført");});
test("rådgiver -> rådgiv", function() {deepEqual( Stem("rådgiver"), "rådgiv");});
test("rådgivere -> rådgiv", function() {deepEqual( Stem("rådgivere"), "rådgiv");});
test("rådgiverhoben -> rådgiverhob", function() {deepEqual( Stem("rådgiverhoben"), "rådgiverhob");});
test("rådighed -> råd", function() {deepEqual( Stem("rådighed"), "råd");});
test("rådmænd -> rådmænd", function() {deepEqual( Stem("rådmænd"), "rådmænd");});
test("rådne -> rådn", function() {deepEqual( Stem("rådne"), "rådn");});
test("rådner -> rådn", function() {deepEqual( Stem("rådner"), "rådn");});
test("rådnet -> rådn", function() {deepEqual( Stem("rådnet"), "rådn");});
test("råds -> råd", function() {deepEqual( Stem("råds"), "råd");});
test("rådsforsamlinger -> rådsforsamling", function() {deepEqual( Stem("rådsforsamlinger"), "rådsforsamling");});
test("rådsherre -> rådsher", function() {deepEqual( Stem("rådsherre"), "rådsher");});
test("rådsherrer -> rådsher", function() {deepEqual( Stem("rådsherrer"), "rådsher");});
test("rådsherrerne -> rådsher", function() {deepEqual( Stem("rådsherrerne"), "rådsher");});
test("rådslagning -> rådslagning", function() {deepEqual( Stem("rådslagning"), "rådslagning");});
test("rådslog -> rådslog", function() {deepEqual( Stem("rådslog"), "rådslog");});
test("rådsloge -> rådslog", function() {deepEqual( Stem("rådsloge"), "rådslog");});
test("rådslutning -> rådslutning", function() {deepEqual( Stem("rådslutning"), "rådslutning");});
test("rådslå -> rådslå", function() {deepEqual( Stem("rådslå"), "rådslå");});
test("rådslår -> rådslår", function() {deepEqual( Stem("rådslår"), "rådslår");});
test("rådspurgt -> rådspurg", function() {deepEqual( Stem("rådspurgt"), "rådspurg");});
test("rådspurgte -> rådspurg", function() {deepEqual( Stem("rådspurgte"), "rådspurg");});
test("rådspørg -> rådspørg", function() {deepEqual( Stem("rådspørg"), "rådspørg");});
test("rådspørge -> rådspørg", function() {deepEqual( Stem("rådspørge"), "rådspørg");});
test("rådspørger -> rådspørg", function() {deepEqual( Stem("rådspørger"), "rådspørg");});
test("rådvild -> rådvild", function() {deepEqual( Stem("rådvild"), "rådvild");});
test("rådvilde -> rådvild", function() {deepEqual( Stem("rådvilde"), "rådvild");});
test("rådvildt -> rådvild", function() {deepEqual( Stem("rådvildt"), "rådvild");});
test("råen -> råen", function() {deepEqual( Stem("råen"), "råen");});
test("råsejlet -> råsejl", function() {deepEqual( Stem("råsejlet"), "råsejl");});
test("råt -> råt", function() {deepEqual( Stem("råt"), "råt");});
test("ræd -> ræd", function() {deepEqual( Stem("ræd"), "ræd");});
test("rædde -> ræd", function() {deepEqual( Stem("rædde"), "ræd");});
test("ræddelige -> ræd", function() {deepEqual( Stem("ræddelige"), "ræd");});
test("ræddes -> ræd", function() {deepEqual( Stem("ræddes"), "ræd");});
test("rædsel -> rædsel", function() {deepEqual( Stem("rædsel"), "rædsel");});
test("rædselen -> rædsel", function() {deepEqual( Stem("rædselen"), "rædsel");});
test("rædselens -> rædsel", function() {deepEqual( Stem("rædselens"), "rædsel");});
test("rædselslagen -> rædselslag", function() {deepEqual( Stem("rædselslagen"), "rædselslag");});
test("rædselslagne -> rædselslagn", function() {deepEqual( Stem("rædselslagne"), "rædselslagn");});
test("rædselslyde -> rædselslyd", function() {deepEqual( Stem("rædselslyde"), "rædselslyd");});
test("rædselsslagen -> rædselsslag", function() {deepEqual( Stem("rædselsslagen"), "rædselsslag");});
test("rædselsslagent -> rædselsslagent", function() {deepEqual( Stem("rædselsslagent"), "rædselsslagent");});
test("rædselsslagne -> rædselsslagn", function() {deepEqual( Stem("rædselsslagne"), "rædselsslagn");});
test("rædslen -> rædsl", function() {deepEqual( Stem("rædslen"), "rædsl");});
test("rædsler -> rædsl", function() {deepEqual( Stem("rædsler"), "rædsl");});
test("rædslernes -> rædsl", function() {deepEqual( Stem("rædslernes"), "rædsl");});
test("rædsomme -> rædsom", function() {deepEqual( Stem("rædsomme"), "rædsom");});
test("ræk -> ræk", function() {deepEqual( Stem("ræk"), "ræk");});
test("række -> ræk", function() {deepEqual( Stem("række"), "ræk");});
test("rækkefølge -> rækkefølg", function() {deepEqual( Stem("rækkefølge"), "rækkefølg");});
test("rækken -> ræk", function() {deepEqual( Stem("rækken"), "ræk");});
test("rækkende -> ræk", function() {deepEqual( Stem("rækkende"), "ræk");});
test("rækker -> ræk", function() {deepEqual( Stem("rækker"), "ræk");});
test("rækkerne -> ræk", function() {deepEqual( Stem("rækkerne"), "ræk");});
test("rækkevidde -> rækkevid", function() {deepEqual( Stem("rækkevidde"), "rækkevid");});
test("rækværk -> rækværk", function() {deepEqual( Stem("rækværk"), "rækværk");});
test("rænkefuld -> rænkefuld", function() {deepEqual( Stem("rænkefuld"), "rænkefuld");});
test("rænkefulde -> rænkefuld", function() {deepEqual( Stem("rænkefulde"), "rænkefuld");});
test("rænker -> rænk", function() {deepEqual( Stem("rænker"), "rænk");});
test("rænkesmed -> rænkesmed", function() {deepEqual( Stem("rænkesmed"), "rænkesmed");});
test("rænkespind -> rænkespind", function() {deepEqual( Stem("rænkespind"), "rænkespind");});
test("rænkesyge -> rænkesyg", function() {deepEqual( Stem("rænkesyge"), "rænkesyg");});
test("ræv -> ræv", function() {deepEqual( Stem("ræv"), "ræv");});
test("ræve -> ræv", function() {deepEqual( Stem("ræve"), "ræv");});
test("rævene -> ræv", function() {deepEqual( Stem("rævene"), "ræv");});
test("røb -> røb", function() {deepEqual( Stem("røb"), "røb");});
test("røbe -> røb", function() {deepEqual( Stem("røbe"), "røb");});
test("røbede -> røbed", function() {deepEqual( Stem("røbede"), "røbed");});
test("røber -> røb", function() {deepEqual( Stem("røber"), "røb");});
test("røbet -> røb", function() {deepEqual( Stem("røbet"), "røb");});
test("rød -> rød", function() {deepEqual( Stem("rød"), "rød");});
test("rødder -> rød", function() {deepEqual( Stem("rødder"), "rød");});
test("rødderne -> rød", function() {deepEqual( Stem("rødderne"), "rød");});
test("røde -> rød", function() {deepEqual( Stem("røde"), "rød");});
test("rødere -> rød", function() {deepEqual( Stem("rødere"), "rød");});
test("rødfarvede -> rødfarved", function() {deepEqual( Stem("rødfarvede"), "rødfarved");});
test("rødgrå -> rødgrå", function() {deepEqual( Stem("rødgrå"), "rødgrå");});
test("rødlig -> rød", function() {deepEqual( Stem("rødlig"), "rød");});
test("rødlige -> rød", function() {deepEqual( Stem("rødlige"), "rød");});
test("rødlighvid -> rødlighvid", function() {deepEqual( Stem("rødlighvid"), "rødlighvid");});
test("rødlighvidt -> rødlighvid", function() {deepEqual( Stem("rødlighvidt"), "rødlighvid");});
test("rødligt -> rød", function() {deepEqual( Stem("rødligt"), "rød");});
test("rødme -> rødm", function() {deepEqual( Stem("rødme"), "rødm");});
test("rødmende -> rødm", function() {deepEqual( Stem("rødmende"), "rødm");});
test("rødmosset -> rødmos", function() {deepEqual( Stem("rødmosset"), "rødmos");});
test("rødt -> rødt", function() {deepEqual( Stem("rødt"), "rødt");});
test("røer -> røer", function() {deepEqual( Stem("røer"), "røer");});
test("røg -> røg", function() {deepEqual( Stem("røg"), "røg");});
test("røgelse -> røg", function() {deepEqual( Stem("røgelse"), "røg");});
test("røgelsealter -> røgelsealt", function() {deepEqual( Stem("røgelsealter"), "røgelsealt");});
test("røgelsealteret -> røgelsealt", function() {deepEqual( Stem("røgelsealteret"), "røgelsealt");});
test("røgelsealterets -> røgelsealt", function() {deepEqual( Stem("røgelsealterets"), "røgelsealt");});
test("røgelsekar -> røgelsekar", function() {deepEqual( Stem("røgelsekar"), "røgelsekar");});
test("røgelsekarrene -> røgelsekar", function() {deepEqual( Stem("røgelsekarrene"), "røgelsekar");});
test("røgelsekarret -> røgelsekar", function() {deepEqual( Stem("røgelsekarret"), "røgelsekar");});
test("røgelsen -> røg", function() {deepEqual( Stem("røgelsen"), "røg");});
test("røgelseoffer -> røgelseof", function() {deepEqual( Stem("røgelseoffer"), "røgelseof");});
test("røgelseofferet -> røgelseof", function() {deepEqual( Stem("røgelseofferet"), "røgelseof");});
test("røgelseofferets -> røgelseof", function() {deepEqual( Stem("røgelseofferets"), "røgelseof");});
test("røgelser -> røg", function() {deepEqual( Stem("røgelser"), "røg");});
test("røgelsesalteret -> røgelsesalt", function() {deepEqual( Stem("røgelsesalteret"), "røgelsesalt");});
test("røgelseskyens -> røgelsesky", function() {deepEqual( Stem("røgelseskyens"), "røgelsesky");});
test("røgelsesskyen -> røgelsessky", function() {deepEqual( Stem("røgelsesskyen"), "røgelsessky");});
test("røgelsesskåle -> røgelsesskål", function() {deepEqual( Stem("røgelsesskåle"), "røgelsesskål");});
test("røgelsestofferne -> røgelsestof", function() {deepEqual( Stem("røgelsestofferne"), "røgelsestof");});
test("røgen -> røg", function() {deepEqual( Stem("røgen"), "røg");});
test("røghul -> røghul", function() {deepEqual( Stem("røghul"), "røghul");});
test("røgoffer -> røgof", function() {deepEqual( Stem("røgoffer"), "røgof");});
test("røgofferalteret -> røgofferalt", function() {deepEqual( Stem("røgofferalteret"), "røgofferalt");});
test("røgofre -> røgofr", function() {deepEqual( Stem("røgofre"), "røgofr");});
test("røgstøtten -> røgstøt", function() {deepEqual( Stem("røgstøtten"), "røgstøt");});
test("røgstøtter -> røgstøt", function() {deepEqual( Stem("røgstøtter"), "røgstøt");});
test("røgsøjle -> røgsøjl", function() {deepEqual( Stem("røgsøjle"), "røgsøjl");});
test("røgt -> røgt", function() {deepEqual( Stem("røgt"), "røgt");});
test("røgte -> røgt", function() {deepEqual( Stem("røgte"), "røgt");});
test("røgtede -> røgted", function() {deepEqual( Stem("røgtede"), "røgted");});
test("røgter -> røgt", function() {deepEqual( Stem("røgter"), "røgt");});
test("røgtet -> røgt", function() {deepEqual( Stem("røgtet"), "røgt");});
test("røme -> røm", function() {deepEqual( Stem("røme"), "røm");});
test("rømme -> røm", function() {deepEqual( Stem("rømme"), "røm");});
test("rør -> rør", function() {deepEqual( Stem("rør"), "rør");});
test("rørdrum -> rørdrum", function() {deepEqual( Stem("rørdrum"), "rørdrum");});
test("rørdrummers -> rørdrum", function() {deepEqual( Stem("rørdrummers"), "rørdrum");});
test("røre -> rør", function() {deepEqual( Stem("røre"), "rør");});
test("rører -> rør", function() {deepEqual( Stem("rører"), "rør");});
test("røres -> rør", function() {deepEqual( Stem("røres"), "rør");});
test("røret -> rør", function() {deepEqual( Stem("røret"), "rør");});
test("rørig -> rør", function() {deepEqual( Stem("rørig"), "rør");});
test("rørkæp -> rørkæp", function() {deepEqual( Stem("rørkæp"), "rørkæp");});
test("rørt -> rørt", function() {deepEqual( Stem("rørt"), "rørt");});
test("rørte -> rørt", function() {deepEqual( Stem("rørte"), "rørt");});
test("rørtes -> rørt", function() {deepEqual( Stem("rørtes"), "rørt");});
test("røst -> røst", function() {deepEqual( Stem("røst"), "røst");});
test("røsten -> røst", function() {deepEqual( Stem("røsten"), "røst");});
test("røster -> røst", function() {deepEqual( Stem("røster"), "røst");});
test("røv -> røv", function() {deepEqual( Stem("røv"), "røv");});
test("røve -> røv", function() {deepEqual( Stem("røve"), "røv");});
test("røved -> røved", function() {deepEqual( Stem("røved"), "røved");});
test("røvede -> røved", function() {deepEqual( Stem("røvede"), "røved");});
test("røvedes -> røved", function() {deepEqual( Stem("røvedes"), "røved");});
test("røver -> røv", function() {deepEqual( Stem("røver"), "røv");});
test("røvere -> røv", function() {deepEqual( Stem("røvere"), "røv");});
test("røveren -> røv", function() {deepEqual( Stem("røveren"), "røv");});
test("røveres -> røv", function() {deepEqual( Stem("røveres"), "røv");});
test("røverfærd -> røverfærd", function() {deepEqual( Stem("røverfærd"), "røverfærd");});
test("røverkule -> røverkul", function() {deepEqual( Stem("røverkule"), "røverkul");});
test("røverne -> røv", function() {deepEqual( Stem("røverne"), "røv");});
test("røvernes -> røv", function() {deepEqual( Stem("røvernes"), "røv");});
test("røverskare -> røverskar", function() {deepEqual( Stem("røverskare"), "røverskar");});
test("røverskaren -> røverskar", function() {deepEqual( Stem("røverskaren"), "røverskar");});
test("røves -> røv", function() {deepEqual( Stem("røves"), "røv");});
test("røvet -> røv", function() {deepEqual( Stem("røvet"), "røv");});
test("s -> s", function() {deepEqual( Stem("s"), "s");});
test("sa -> sa", function() {deepEqual( Stem("sa"), "sa");});
test("saba -> saba", function() {deepEqual( Stem("saba"), "saba");});
test("sabaktani -> sabaktani", function() {deepEqual( Stem("sabaktani"), "sabaktani");});
test("sabas -> saba", function() {deepEqual( Stem("sabas"), "saba");});
test("sabbalsdagen -> sabbalsdag", function() {deepEqual( Stem("sabbalsdagen"), "sabbalsdag");});
test("sabbat -> sabbat", function() {deepEqual( Stem("sabbat"), "sabbat");});
test("sabbaten -> sabbat", function() {deepEqual( Stem("sabbaten"), "sabbat");});
test("sabbatens -> sabbat", function() {deepEqual( Stem("sabbatens"), "sabbat");});
test("sabbater -> sabbat", function() {deepEqual( Stem("sabbater"), "sabbat");});
test("sabbaterne -> sabbat", function() {deepEqual( Stem("sabbaterne"), "sabbat");});
test("sabbatsbrændoffer -> sabbatsbrændof", function() {deepEqual( Stem("sabbatsbrændoffer"), "sabbatsbrændof");});
test("sabbatsdag -> sabbatsdag", function() {deepEqual( Stem("sabbatsdag"), "sabbatsdag");});
test("sabbatsdagen -> sabbatsdag", function() {deepEqual( Stem("sabbatsdagen"), "sabbatsdag");});
test("sabbatsgang -> sabbatsgang", function() {deepEqual( Stem("sabbatsgang"), "sabbatsgang");});
test("sabbatshvile -> sabbatshvil", function() {deepEqual( Stem("sabbatshvile"), "sabbatshvil");});
test("sabbatsvej -> sabbatsvej", function() {deepEqual( Stem("sabbatsvej"), "sabbatsvej");});
test("sabbatsår -> sabbatsår", function() {deepEqual( Stem("sabbatsår"), "sabbatsår");});
test("sabbatten -> sabbat", function() {deepEqual( Stem("sabbatten"), "sabbat");});
test("sabbatter -> sabbat", function() {deepEqual( Stem("sabbatter"), "sabbat");});
test("sabta -> sabta", function() {deepEqual( Stem("sabta"), "sabta");});
test("sabteka -> sabteka", function() {deepEqual( Stem("sabteka"), "sabteka");});
test("sabæerne -> sabæ", function() {deepEqual( Stem("sabæerne"), "sabæ");});
test("sad -> sad", function() {deepEqual( Stem("sad"), "sad");});
test("saddukæere -> saddukæ", function() {deepEqual( Stem("saddukæere"), "saddukæ");});
test("saddukæerne -> saddukæ", function() {deepEqual( Stem("saddukæerne"), "saddukæ");});
test("saddukæernes -> saddukæ", function() {deepEqual( Stem("saddukæernes"), "saddukæ");});
test("sade -> sad", function() {deepEqual( Stem("sade"), "sad");});
test("sadeldækkener -> sadeldækken", function() {deepEqual( Stem("sadeldækkener"), "sadeldækken");});
test("sadelen -> sadel", function() {deepEqual( Stem("sadelen"), "sadel");});
test("sadle -> sadl", function() {deepEqual( Stem("sadle"), "sadl");});
test("sadlede -> sadled", function() {deepEqual( Stem("sadlede"), "sadled");});
test("sadlet -> sadl", function() {deepEqual( Stem("sadlet"), "sadl");});
test("sadok -> sadok", function() {deepEqual( Stem("sadok"), "sadok");});
test("saf -> saf", function() {deepEqual( Stem("saf"), "saf");});
test("safir -> safir", function() {deepEqual( Stem("safir"), "safir");});
test("safira -> safira", function() {deepEqual( Stem("safira"), "safira");});
test("safiren -> safir", function() {deepEqual( Stem("safiren"), "safir");});
test("safirer -> safir", function() {deepEqual( Stem("safirer"), "safir");});
test("safirfliser -> safirflis", function() {deepEqual( Stem("safirfliser"), "safirflis");});
test("safran -> safran", function() {deepEqual( Stem("safran"), "safran");});
test("saft -> saft", function() {deepEqual( Stem("saft"), "saft");});
test("saftig -> saft", function() {deepEqual( Stem("saftig"), "saft");});
test("sag -> sag", function() {deepEqual( Stem("sag"), "sag");});
test("sagde -> sagd", function() {deepEqual( Stem("sagde"), "sagd");});
test("sagdes -> sagd", function() {deepEqual( Stem("sagdes"), "sagd");});
test("sagen -> sag", function() {deepEqual( Stem("sagen"), "sag");});
test("sagens -> sag", function() {deepEqual( Stem("sagens"), "sag");});
test("sager -> sag", function() {deepEqual( Stem("sager"), "sag");});
test("sagerne -> sag", function() {deepEqual( Stem("sagerne"), "sag");});
test("sagesløs -> sagesløs", function() {deepEqual( Stem("sagesløs"), "sagesløs");});
test("sagesløse -> sagesløs", function() {deepEqual( Stem("sagesløse"), "sagesløs");});
test("saghde -> saghd", function() {deepEqual( Stem("saghde"), "saghd");});
test("sags -> sag", function() {deepEqual( Stem("sags"), "sag");});
test("sagt -> sagt", function() {deepEqual( Stem("sagt"), "sagt");});
test("sagte -> sagt", function() {deepEqual( Stem("sagte"), "sagt");});
test("sagtelig -> sagt", function() {deepEqual( Stem("sagtelig"), "sagt");});
test("sagtmodig -> sagtmod", function() {deepEqual( Stem("sagtmodig"), "sagtmod");});
test("sagtmodige -> sagtmod", function() {deepEqual( Stem("sagtmodige"), "sagtmod");});
test("sagtmodigere -> sagtmod", function() {deepEqual( Stem("sagtmodigere"), "sagtmod");});
test("sagtmodighed -> sagtmod", function() {deepEqual( Stem("sagtmodighed"), "sagtmod");});
test("sagtmodigheds -> sagtmod", function() {deepEqual( Stem("sagtmodigheds"), "sagtmod");});
test("sagtmodigt -> sagtmod", function() {deepEqual( Stem("sagtmodigt"), "sagtmod");});
test("sahaduta -> sahaduta", function() {deepEqual( Stem("sahaduta"), "sahaduta");});
test("sakar -> sakar", function() {deepEqual( Stem("sakar"), "sakar");});
test("sakarias -> sakaria", function() {deepEqual( Stem("sakarias"), "sakaria");});
test("sakars -> sakar", function() {deepEqual( Stem("sakars"), "sakar");});
test("sakeja -> sakeja", function() {deepEqual( Stem("sakeja"), "sakeja");});
test("sakkut -> sakkut", function() {deepEqual( Stem("sakkut"), "sakkut");});
test("sakse -> saks", function() {deepEqual( Stem("sakse"), "saks");});
test("saksen -> saks", function() {deepEqual( Stem("saksen"), "saks");});
test("sal -> sal", function() {deepEqual( Stem("sal"), "sal");});
test("salamis -> salamis", function() {deepEqual( Stem("salamis"), "salamis");});
test("salas -> sala", function() {deepEqual( Stem("salas"), "sala");});
test("salathiel -> salathiel", function() {deepEqual( Stem("salathiel"), "salathiel");});
test("salathiels -> salathiel", function() {deepEqual( Stem("salathiels"), "salathiel");});
test("sale -> sal", function() {deepEqual( Stem("sale"), "sal");});
test("salem -> salem", function() {deepEqual( Stem("salem"), "salem");});
test("salems -> salem", function() {deepEqual( Stem("salems"), "salem");});
test("salen -> sal", function() {deepEqual( Stem("salen"), "sal");});
test("salg -> salg", function() {deepEqual( Stem("salg"), "salg");});
test("salget -> salg", function() {deepEqual( Stem("salget"), "salg");});
test("salgssummerne -> salgssum", function() {deepEqual( Stem("salgssummerne"), "salgssum");});
test("salig -> sal", function() {deepEqual( Stem("salig"), "sal");});
test("salige -> sal", function() {deepEqual( Stem("salige"), "sal");});
test("saligere -> sal", function() {deepEqual( Stem("saligere"), "sal");});
test("saligprisning -> saligprisning", function() {deepEqual( Stem("saligprisning"), "saligprisning");});
test("saligt -> sal", function() {deepEqual( Stem("saligt"), "sal");});
test("salka -> salka", function() {deepEqual( Stem("salka"), "salka");});
test("sallu -> sallu", function() {deepEqual( Stem("sallu"), "sallu");});
test("salma -> salma", function() {deepEqual( Stem("salma"), "salma");});
test("salmajs -> salmaj", function() {deepEqual( Stem("salmajs"), "salmaj");});
test("salmanassar -> salmanassar", function() {deepEqual( Stem("salmanassar"), "salmanassar");});
test("salmas -> salma", function() {deepEqual( Stem("salmas"), "salma");});
test("salme -> salm", function() {deepEqual( Stem("salme"), "salm");});
test("salmer -> salm", function() {deepEqual( Stem("salmer"), "salm");});
test("salmerne -> salm", function() {deepEqual( Stem("salmerne"), "salm");});
test("salmernes -> salm", function() {deepEqual( Stem("salmernes"), "salm");});
test("salmon -> salmon", function() {deepEqual( Stem("salmon"), "salmon");});
test("salmone -> salmon", function() {deepEqual( Stem("salmone"), "salmon");});
test("salmons -> salmon", function() {deepEqual( Stem("salmons"), "salmon");});
test("salome -> salom", function() {deepEqual( Stem("salome"), "salom");});
test("salomno -> salomno", function() {deepEqual( Stem("salomno"), "salomno");});
test("salomo -> salomo", function() {deepEqual( Stem("salomo"), "salomo");});
test("salomon -> salomon", function() {deepEqual( Stem("salomon"), "salomon");});
test("salomons -> salomon", function() {deepEqual( Stem("salomons"), "salomon");});
test("salomos -> salomo", function() {deepEqual( Stem("salomos"), "salomo");});
test("salt -> salt", function() {deepEqual( Stem("salt"), "salt");});
test("saltdalen -> saltdal", function() {deepEqual( Stem("saltdalen"), "saltdal");});
test("salte -> salt", function() {deepEqual( Stem("salte"), "salt");});
test("saltes -> salt", function() {deepEqual( Stem("saltes"), "salt");});
test("saltet -> salt", function() {deepEqual( Stem("saltet"), "salt");});
test("salthavet -> salthav", function() {deepEqual( Stem("salthavet"), "salthav");});
test("salthavets -> salthav", function() {deepEqual( Stem("salthavets"), "salthav");});
test("salthul -> salthul", function() {deepEqual( Stem("salthul"), "salthul");});
test("saltland -> saltland", function() {deepEqual( Stem("saltland"), "saltland");});
test("saltløst -> saltløs", function() {deepEqual( Stem("saltløst"), "saltløs");});
test("saltpagt -> saltpag", function() {deepEqual( Stem("saltpagt"), "saltpag");});
test("saltsteppe -> saltstep", function() {deepEqual( Stem("saltsteppe"), "saltstep");});
test("saltstøtte -> saltstøt", function() {deepEqual( Stem("saltstøtte"), "saltstøt");});
test("salus -> salus", function() {deepEqual( Stem("salus"), "salus");});
test("salv -> salv", function() {deepEqual( Stem("salv"), "salv");});
test("salve -> salv", function() {deepEqual( Stem("salve"), "salv");});
test("salveblanderens -> salvebland", function() {deepEqual( Stem("salveblanderens"), "salvebland");});
test("salveblanderne -> salvebland", function() {deepEqual( Stem("salveblanderne"), "salvebland");});
test("salved -> salved", function() {deepEqual( Stem("salved"), "salved");});
test("salvede -> salved", function() {deepEqual( Stem("salvede"), "salved");});
test("salvedes -> salved", function() {deepEqual( Stem("salvedes"), "salved");});
test("salvehandlerne -> salvehandl", function() {deepEqual( Stem("salvehandlerne"), "salvehandl");});
test("salvekedel -> salvekedel", function() {deepEqual( Stem("salvekedel"), "salvekedel");});
test("salvelse -> salv", function() {deepEqual( Stem("salvelse"), "salv");});
test("salven -> salv", function() {deepEqual( Stem("salven"), "salv");});
test("salvens -> salv", function() {deepEqual( Stem("salvens"), "salv");});
test("salveolie -> salveoli", function() {deepEqual( Stem("salveolie"), "salveoli");});
test("salveolien -> salveoli", function() {deepEqual( Stem("salveolien"), "salveoli");});
test("salveolies -> salveoli", function() {deepEqual( Stem("salveolies"), "salveoli");});
test("salver -> salv", function() {deepEqual( Stem("salver"), "salv");});
test("salvers -> salv", function() {deepEqual( Stem("salvers"), "salv");});
test("salves -> salv", function() {deepEqual( Stem("salves"), "salv");});
test("salvet -> salv", function() {deepEqual( Stem("salvet"), "salv");});
test("salvning -> salvning", function() {deepEqual( Stem("salvning"), "salvning");});
test("samada -> samada", function() {deepEqual( Stem("samada"), "samada");});
test("samaria -> samaria", function() {deepEqual( Stem("samaria"), "samaria");});
test("samarias -> samaria", function() {deepEqual( Stem("samarias"), "samaria");});
test("samaritan -> samaritan", function() {deepEqual( Stem("samaritan"), "samaritan");});
test("samaritanere -> samaritan", function() {deepEqual( Stem("samaritanere"), "samaritan");});
test("samaritanerlandsby -> samaritanerlandsby", function() {deepEqual( Stem("samaritanerlandsby"), "samaritanerlandsby");});
test("samaritanerne -> samaritan", function() {deepEqual( Stem("samaritanerne"), "samaritan");});
test("samaritanernes -> samaritan", function() {deepEqual( Stem("samaritanernes"), "samaritan");});
test("samaritaners -> samaritan", function() {deepEqual( Stem("samaritaners"), "samaritan");});
test("samaritansk -> samaritansk", function() {deepEqual( Stem("samaritansk"), "samaritansk");});
test("samaritanske -> samaritansk", function() {deepEqual( Stem("samaritanske"), "samaritansk");});
test("samfund -> samfund", function() {deepEqual( Stem("samfund"), "samfund");});
test("samfundet -> samfund", function() {deepEqual( Stem("samfundet"), "samfund");});
test("samfundshånd -> samfundshånd", function() {deepEqual( Stem("samfundshånd"), "samfundshånd");});
test("samklang -> samklang", function() {deepEqual( Stem("samklang"), "samklang");});
test("samkvem -> samkvem", function() {deepEqual( Stem("samkvem"), "samkvem");});
test("saml -> saml", function() {deepEqual( Stem("saml"), "saml");});
test("samla -> samla", function() {deepEqual( Stem("samla"), "samla");});
test("samlagte -> samlag", function() {deepEqual( Stem("samlagte"), "samlag");});
test("samle -> saml", function() {deepEqual( Stem("samle"), "saml");});
test("samled -> samled", function() {deepEqual( Stem("samled"), "samled");});
test("samlede -> samled", function() {deepEqual( Stem("samlede"), "samled");});
test("samledes -> samled", function() {deepEqual( Stem("samledes"), "samled");});
test("samleje -> samlej", function() {deepEqual( Stem("samleje"), "samlej");});
test("samlejets -> samlej", function() {deepEqual( Stem("samlejets"), "samlej");});
test("samler -> saml", function() {deepEqual( Stem("samler"), "saml");});
test("samles -> saml", function() {deepEqual( Stem("samles"), "saml");});
test("samlet -> saml", function() {deepEqual( Stem("samlet"), "saml");});
test("samling -> samling", function() {deepEqual( Stem("samling"), "samling");});
test("samlinger -> samling", function() {deepEqual( Stem("samlinger"), "samling");});
test("samlingshus -> samlingshus", function() {deepEqual( Stem("samlingshus"), "samlingshus");});
test("samlingshuse -> samlingshus", function() {deepEqual( Stem("samlingshuse"), "samlingshus");});
test("samme -> sam", function() {deepEqual( Stem("samme"), "sam");});
test("sammen -> sam", function() {deepEqual( Stem("sammen"), "sam");});
test("sammenbrud -> sammenbrud", function() {deepEqual( Stem("sammenbrud"), "sammenbrud");});
test("sammenbruds -> sammenbrud", function() {deepEqual( Stem("sammenbruds"), "sammenbrud");});
test("sammenbøjet -> sammenbøj", function() {deepEqual( Stem("sammenbøjet"), "sammenbøj");});
test("sammenfatte -> sammenfat", function() {deepEqual( Stem("sammenfatte"), "sammenfat");});
test("sammenfattes -> sammenfat", function() {deepEqual( Stem("sammenfattes"), "sammenfat");});
test("sammenflettet -> sammenflet", function() {deepEqual( Stem("sammenflettet"), "sammenflet");});
test("sammenføje -> sammenføj", function() {deepEqual( Stem("sammenføje"), "sammenføj");});
test("sammenføjes -> sammenføj", function() {deepEqual( Stem("sammenføjes"), "sammenføj");});
test("sammenføjet -> sammenføj", function() {deepEqual( Stem("sammenføjet"), "sammenføj");});
test("sammenhold -> sammenhold", function() {deepEqual( Stem("sammenhold"), "sammenhold");});
test("sammenhæng -> sammenhæng", function() {deepEqual( Stem("sammenhæng"), "sammenhæng");});
test("sammenhængen -> sammenhæng", function() {deepEqual( Stem("sammenhængen"), "sammenhæng");});
test("sammenkalde -> sammenkald", function() {deepEqual( Stem("sammenkalde"), "sammenkald");});
test("sammenkalder -> sammenkald", function() {deepEqual( Stem("sammenkalder"), "sammenkald");});
test("sammenkaldes -> sammenkald", function() {deepEqual( Stem("sammenkaldes"), "sammenkald");});
test("sammenkaldt -> sammenkald", function() {deepEqual( Stem("sammenkaldt"), "sammenkald");});
test("sammenkaldte -> sammenkald", function() {deepEqual( Stem("sammenkaldte"), "sammenkald");});
test("sammenknyttes -> sammenknyt", function() {deepEqual( Stem("sammenknyttes"), "sammenknyt");});
test("sammenkomst -> sammenkomst", function() {deepEqual( Stem("sammenkomst"), "sammenkomst");});
test("sammenlign -> sammenlign", function() {deepEqual( Stem("sammenlign"), "sammenlign");});
test("sammenligne -> sammenlign", function() {deepEqual( Stem("sammenligne"), "sammenlign");});
test("sammenligning -> sammenligning", function() {deepEqual( Stem("sammenligning"), "sammenligning");});
test("sammenløbet -> sammenløb", function() {deepEqual( Stem("sammenløbet"), "sammenløb");});
test("sammenløbne -> sammenløbn", function() {deepEqual( Stem("sammenløbne"), "sammenløbn");});
test("sammenmed -> sammenmed", function() {deepEqual( Stem("sammenmed"), "sammenmed");});
test("sammenregnet -> sammenregn", function() {deepEqual( Stem("sammenregnet"), "sammenregn");});
test("sammenrulle -> sammenrul", function() {deepEqual( Stem("sammenrulle"), "sammenrul");});
test("sammenrulled -> sammenrulled", function() {deepEqual( Stem("sammenrulled"), "sammenrulled");});
test("sammenrulles -> sammenrul", function() {deepEqual( Stem("sammenrulles"), "sammenrul");});
test("sammenrullet -> sammenrul", function() {deepEqual( Stem("sammenrullet"), "sammenrul");});
test("sammenskud -> sammenskud", function() {deepEqual( Stem("sammenskud"), "sammenskud");});
test("sammensvor -> sammensvor", function() {deepEqual( Stem("sammensvor"), "sammensvor");});
test("sammensvoret -> sammensvor", function() {deepEqual( Stem("sammensvoret"), "sammensvor");});
test("sammensvorne -> sammensvorn", function() {deepEqual( Stem("sammensvorne"), "sammensvorn");});
test("sammensværgelse -> sammensværg", function() {deepEqual( Stem("sammensværgelse"), "sammensværg");});
test("sammensværgelsen -> sammensværg", function() {deepEqual( Stem("sammensværgelsen"), "sammensværg");});
test("sammensyede -> sammensyed", function() {deepEqual( Stem("sammensyede"), "sammensyed");});
test("sammensærgelse -> sammensærg", function() {deepEqual( Stem("sammensærgelse"), "sammensærg");});
test("sammensættes -> sammensæt", function() {deepEqual( Stem("sammensættes"), "sammensæt");});
test("sammenvoksede -> sammenvoksed", function() {deepEqual( Stem("sammenvoksede"), "sammenvoksed");});
test("sammer -> sam", function() {deepEqual( Stem("sammer"), "sam");});
test("sammesteds -> sammested", function() {deepEqual( Stem("sammesteds"), "sammested");});
test("sammnenkaldt -> sammnenkald", function() {deepEqual( Stem("sammnenkaldt"), "sammnenkald");});
test("samnme -> samnm", function() {deepEqual( Stem("samnme"), "samnm");});
test("samoels -> samoel", function() {deepEqual( Stem("samoels"), "samoel");});
test("samos -> samo", function() {deepEqual( Stem("samos"), "samo");});
test("samothrake -> samothrak", function() {deepEqual( Stem("samothrake"), "samothrak");});
test("samson -> samson", function() {deepEqual( Stem("samson"), "samson");});
test("samsons -> samson", function() {deepEqual( Stem("samsons"), "samson");});
test("samstemmer -> samstem", function() {deepEqual( Stem("samstemmer"), "samstem");});
test("samstemning -> samstemning", function() {deepEqual( Stem("samstemning"), "samstemning");});
test("samt -> samt", function() {deepEqual( Stem("samt"), "samt");});
test("samtale -> samtal", function() {deepEqual( Stem("samtale"), "samtal");});
test("samtalede -> samtaled", function() {deepEqual( Stem("samtalede"), "samtaled");});
test("samtaleemne -> samtaleemn", function() {deepEqual( Stem("samtaleemne"), "samtaleemn");});
test("samtalen -> samtal", function() {deepEqual( Stem("samtalen"), "samtal");});
test("samtaler -> samtal", function() {deepEqual( Stem("samtaler"), "samtal");});
test("samtid -> samtid", function() {deepEqual( Stem("samtid"), "samtid");});
test("samtidig -> samtid", function() {deepEqual( Stem("samtidig"), "samtid");});
test("samtidige -> samtid", function() {deepEqual( Stem("samtidige"), "samtid");});
test("samtykke -> samtyk", function() {deepEqual( Stem("samtykke"), "samtyk");});
test("samtykkede -> samtykked", function() {deepEqual( Stem("samtykkede"), "samtykked");});
test("samtykker -> samtyk", function() {deepEqual( Stem("samtykker"), "samtyk");});
test("samtykket -> samtyk", function() {deepEqual( Stem("samtykket"), "samtyk");});
test("samuel -> samuel", function() {deepEqual( Stem("samuel"), "samuel");});
test("samuels -> samuel", function() {deepEqual( Stem("samuels"), "samuel");});
test("samvirke -> samvirk", function() {deepEqual( Stem("samvirke"), "samvirk");});
test("samvittighed -> samvit", function() {deepEqual( Stem("samvittighed"), "samvit");});
test("samvittigheden -> samvit", function() {deepEqual( Stem("samvittigheden"), "samvit");});
test("samvittighedens -> samvit", function() {deepEqual( Stem("samvittighedens"), "samvit");});
test("samvittigheder -> samvit", function() {deepEqual( Stem("samvittigheder"), "samvit");});
test("samvittigheds -> samvit", function() {deepEqual( Stem("samvittigheds"), "samvit");});
test("samvittighedsfuldt -> samvittighedsfuld", function() {deepEqual( Stem("samvittighedsfuldt"), "samvittighedsfuld");});
test("samvittighedsnag -> samvittighedsnag", function() {deepEqual( Stem("samvittighedsnag"), "samvittighedsnag");});
test("samvittighedstuldt -> samvittighedstuld", function() {deepEqual( Stem("samvittighedstuldt"), "samvittighedstuld");});
test("samværets -> samvær", function() {deepEqual( Stem("samværets"), "samvær");});
test("sanballat -> sanballat", function() {deepEqual( Stem("sanballat"), "sanballat");});
test("sanballats -> sanballat", function() {deepEqual( Stem("sanballats"), "sanballat");});
test("sand -> sand", function() {deepEqual( Stem("sand"), "sand");});
test("sandaler -> sandal", function() {deepEqual( Stem("sandaler"), "sandal");});
test("sandalrem -> sandalrem", function() {deepEqual( Stem("sandalrem"), "sandalrem");});
test("sanddru -> sanddru", function() {deepEqual( Stem("sanddru"), "sanddru");});
test("sanddruhbed -> sanddruhbed", function() {deepEqual( Stem("sanddruhbed"), "sanddruhbed");});
test("sanddruhed -> sanddru", function() {deepEqual( Stem("sanddruhed"), "sanddru");});
test("sanddruheds -> sanddru", function() {deepEqual( Stem("sanddruheds"), "sanddru");});
test("sande -> sand", function() {deepEqual( Stem("sande"), "sand");});
test("sandelig -> sand", function() {deepEqual( Stem("sandelig"), "sand");});
test("sander -> sand", function() {deepEqual( Stem("sander"), "sand");});
test("sandet -> sand", function() {deepEqual( Stem("sandet"), "sand");});
test("sandhed -> sand", function() {deepEqual( Stem("sandhed"), "sand");});
test("sandheden -> sand", function() {deepEqual( Stem("sandheden"), "sand");});
test("sandhedens -> sand", function() {deepEqual( Stem("sandhedens"), "sand");});
test("sandheds -> sand", function() {deepEqual( Stem("sandheds"), "sand");});
test("sandhedsord -> sandhedsord", function() {deepEqual( Stem("sandhedsord"), "sandhedsord");});
test("sandsiger -> sands", function() {deepEqual( Stem("sandsiger"), "sands");});
test("sandsigere -> sands", function() {deepEqual( Stem("sandsigere"), "sands");});
test("sandsigeren -> sands", function() {deepEqual( Stem("sandsigeren"), "sands");});
test("sandsigerens -> sands", function() {deepEqual( Stem("sandsigerens"), "sands");});
test("sandsigeres -> sands", function() {deepEqual( Stem("sandsigeres"), "sands");});
test("sandsigeri -> sandsigeri", function() {deepEqual( Stem("sandsigeri"), "sandsigeri");});
test("sandsigerne -> sands", function() {deepEqual( Stem("sandsigerne"), "sands");});
test("sandsigernes -> sands", function() {deepEqual( Stem("sandsigernes"), "sands");});
test("sandsigerånd -> sandsigerånd", function() {deepEqual( Stem("sandsigerånd"), "sandsigerånd");});
test("sandsigerånder -> sandsigerånd", function() {deepEqual( Stem("sandsigerånder"), "sandsigerånd");});
test("sandskorn -> sandskorn", function() {deepEqual( Stem("sandskorn"), "sandskorn");});
test("sandstøv -> sandstøv", function() {deepEqual( Stem("sandstøv"), "sandstøv");});
test("sandt -> sand", function() {deepEqual( Stem("sandt"), "sand");});
test("sandtjeg -> sandtjeg", function() {deepEqual( Stem("sandtjeg"), "sandtjeg");});
test("sang -> sang", function() {deepEqual( Stem("sang"), "sang");});
test("sange -> sang", function() {deepEqual( Stem("sange"), "sang");});
test("sangen -> sang", function() {deepEqual( Stem("sangen"), "sang");});
test("sangene -> sang", function() {deepEqual( Stem("sangene"), "sang");});
test("sangenes -> sang", function() {deepEqual( Stem("sangenes"), "sang");});
test("sangens -> sang", function() {deepEqual( Stem("sangens"), "sang");});
test("sangere -> sang", function() {deepEqual( Stem("sangere"), "sang");});
test("sangeren -> sang", function() {deepEqual( Stem("sangeren"), "sang");});
test("sangeres -> sang", function() {deepEqual( Stem("sangeres"), "sang");});
test("sangerinder -> sangerind", function() {deepEqual( Stem("sangerinder"), "sangerind");});
test("sangerinderne -> sangerind", function() {deepEqual( Stem("sangerinderne"), "sangerind");});
test("sangerinders -> sangerind", function() {deepEqual( Stem("sangerinders"), "sangerind");});
test("sangerne -> sang", function() {deepEqual( Stem("sangerne"), "sang");});
test("sangmesteren -> sangmest", function() {deepEqual( Stem("sangmesteren"), "sangmest");});
test("sank -> sank", function() {deepEqual( Stem("sank"), "sank");});
test("sanke -> sank", function() {deepEqual( Stem("sanke"), "sank");});
test("sankede -> sanked", function() {deepEqual( Stem("sankede"), "sanked");});
test("sanker -> sank", function() {deepEqual( Stem("sanker"), "sank");});
test("sankerib -> sankerib", function() {deepEqual( Stem("sankerib"), "sankerib");});
test("sankeribs -> sankerib", function() {deepEqual( Stem("sankeribs"), "sankerib");});
test("sankes -> sank", function() {deepEqual( Stem("sankes"), "sank");});
test("sanket -> sank", function() {deepEqual( Stem("sanket"), "sank");});
test("sans -> san", function() {deepEqual( Stem("sans"), "san");});
test("sansanna -> sansanna", function() {deepEqual( Stem("sansanna"), "sansanna");});
test("sansed -> sansed", function() {deepEqual( Stem("sansed"), "sansed");});
test("sansede -> sansed", function() {deepEqual( Stem("sansede"), "sansed");});
test("sanser -> sans", function() {deepEqual( Stem("sanser"), "sans");});
test("sanserne -> sans", function() {deepEqual( Stem("sanserne"), "sans");});
test("sar -> sar", function() {deepEqual( Stem("sar"), "sar");});
test("sara -> sara", function() {deepEqual( Stem("sara"), "sara");});
test("saraf -> saraf", function() {deepEqual( Stem("saraf"), "saraf");});
test("saraj -> saraj", function() {deepEqual( Stem("saraj"), "saraj");});
test("sarajs -> saraj", function() {deepEqual( Stem("sarajs"), "saraj");});
test("saras -> sara", function() {deepEqual( Stem("saras"), "sara");});
test("sarder -> sard", function() {deepEqual( Stem("sarder"), "sard");});
test("sardes -> sard", function() {deepEqual( Stem("sardes"), "sard");});
test("sardonyks -> sardonyk", function() {deepEqual( Stem("sardonyks"), "sardonyk");});
test("sarepta -> sarepta", function() {deepEqual( Stem("sarepta"), "sarepta");});
test("sarezer -> sarez", function() {deepEqual( Stem("sarezer"), "sarez");});
test("sargon -> sargon", function() {deepEqual( Stem("sargon"), "sargon");});
test("sarid -> sarid", function() {deepEqual( Stem("sarid"), "sarid");});
test("saron -> saron", function() {deepEqual( Stem("saron"), "saron");});
test("saroniten -> saronit", function() {deepEqual( Stem("saroniten"), "saronit");});
test("sarons -> saron", function() {deepEqual( Stem("sarons"), "saron");});
test("sat -> sat", function() {deepEqual( Stem("sat"), "sat");});
test("satan -> satan", function() {deepEqual( Stem("satan"), "satan");});
test("satans -> satan", function() {deepEqual( Stem("satans"), "satan");});
test("satraper -> satrap", function() {deepEqual( Stem("satraper"), "satrap");});
test("satraperne -> satrap", function() {deepEqual( Stem("satraperne"), "satrap");});
test("satte -> sat", function() {deepEqual( Stem("satte"), "sat");});
test("sattes -> sat", function() {deepEqual( Stem("sattes"), "sat");});
test("saul -> saul", function() {deepEqual( Stem("saul"), "saul");});
test("sauls -> saul", function() {deepEqual( Stem("sauls"), "saul");});
test("saulus -> saulus", function() {deepEqual( Stem("saulus"), "saulus");});
test("saven -> sav", function() {deepEqual( Stem("saven"), "sav");});
test("savene -> sav", function() {deepEqual( Stem("savene"), "sav");});
test("saver -> sav", function() {deepEqual( Stem("saver"), "sav");});
test("savn -> savn", function() {deepEqual( Stem("savn"), "savn");});
test("savne -> savn", function() {deepEqual( Stem("savne"), "savn");});
test("savned -> savned", function() {deepEqual( Stem("savned"), "savned");});
test("savnede -> savned", function() {deepEqual( Stem("savnede"), "savned");});
test("savnedes -> savned", function() {deepEqual( Stem("savnedes"), "savned");});
test("savner -> savn", function() {deepEqual( Stem("savner"), "savn");});
test("savnes -> savn", function() {deepEqual( Stem("savnes"), "savn");});
test("savnet -> savn", function() {deepEqual( Stem("savnet"), "savn");});
test("sbille -> sbil", function() {deepEqual( Stem("sbille"), "sbil");});
test("scepter -> scept", function() {deepEqual( Stem("scepter"), "scept");});
test("scepteret -> scept", function() {deepEqual( Stem("scepteret"), "scept");});
test("se -> se", function() {deepEqual( Stem("se"), "se");});
test("sea -> sea", function() {deepEqual( Stem("sea"), "sea");});
test("seba -> seba", function() {deepEqual( Stem("seba"), "seba");});
test("sebam -> sebam", function() {deepEqual( Stem("sebam"), "sebam");});
test("sebas -> seba", function() {deepEqual( Stem("sebas"), "seba");});
test("sebulons -> sebulon", function() {deepEqual( Stem("sebulons"), "sebulon");});
test("sebæernes -> sebæ", function() {deepEqual( Stem("sebæernes"), "sebæ");});
test("see -> see", function() {deepEqual( Stem("see"), "see");});
test("seende -> seend", function() {deepEqual( Stem("seende"), "seend");});
test("seendes -> seend", function() {deepEqual( Stem("seendes"), "seend");});
test("seer -> seer", function() {deepEqual( Stem("seer"), "seer");});
test("seeren -> seer", function() {deepEqual( Stem("seeren"), "seer");});
test("seerens -> seer", function() {deepEqual( Stem("seerens"), "seer");});
test("seeres -> seer", function() {deepEqual( Stem("seeres"), "seer");});
test("seerne -> seern", function() {deepEqual( Stem("seerne"), "seern");});
test("seernes -> seern", function() {deepEqual( Stem("seernes"), "seern");});
test("sefar -> sefar", function() {deepEqual( Stem("sefar"), "sefar");});
test("sefarad -> sefarad", function() {deepEqual( Stem("sefarad"), "sefarad");});
test("sefarvajim -> sefarvajim", function() {deepEqual( Stem("sefarvajim"), "sefarvajim");});
test("sefarvajims -> sefarvajim", function() {deepEqual( Stem("sefarvajims"), "sefarvajim");});
test("sefarviterne -> sefarvit", function() {deepEqual( Stem("sefarviterne"), "sefarvit");});
test("sefer -> sef", function() {deepEqual( Stem("sefer"), "sef");});
test("segl -> segl", function() {deepEqual( Stem("segl"), "segl");});
test("seglen -> segl", function() {deepEqual( Stem("seglen"), "segl");});
test("seglet -> segl", function() {deepEqual( Stem("seglet"), "segl");});
test("seglring -> seglring", function() {deepEqual( Stem("seglring"), "seglring");});
test("seglringen -> seglring", function() {deepEqual( Stem("seglringen"), "seglring");});
test("segne -> segn", function() {deepEqual( Stem("segne"), "segn");});
test("segned -> segned", function() {deepEqual( Stem("segned"), "segned");});
test("segnede -> segned", function() {deepEqual( Stem("segnede"), "segned");});
test("segnende -> segn", function() {deepEqual( Stem("segnende"), "segn");});
test("segner -> segn", function() {deepEqual( Stem("segner"), "segn");});
test("segub -> segub", function() {deepEqual( Stem("segub"), "segub");});
test("seguh -> seguh", function() {deepEqual( Stem("seguh"), "seguh");});
test("seir -> seir", function() {deepEqual( Stem("seir"), "seir");});
test("seira -> seira", function() {deepEqual( Stem("seira"), "seira");});
test("seirbjerget -> seirbjerg", function() {deepEqual( Stem("seirbjerget"), "seirbjerg");});
test("seirs -> seir", function() {deepEqual( Stem("seirs"), "seir");});
test("sejer -> sej", function() {deepEqual( Stem("sejer"), "sej");});
test("sejeren -> sej", function() {deepEqual( Stem("sejeren"), "sej");});
test("sejl -> sejl", function() {deepEqual( Stem("sejl"), "sejl");});
test("sejladsen -> sejlads", function() {deepEqual( Stem("sejladsen"), "sejlads");});
test("sejle -> sejl", function() {deepEqual( Stem("sejle"), "sejl");});
test("sejlede -> sejled", function() {deepEqual( Stem("sejlede"), "sejled");});
test("sejlene -> sejl", function() {deepEqual( Stem("sejlene"), "sejl");});
test("sejlet -> sejl", function() {deepEqual( Stem("sejlet"), "sejl");});
test("sejr -> sejr", function() {deepEqual( Stem("sejr"), "sejr");});
test("sejre -> sejr", function() {deepEqual( Stem("sejre"), "sejr");});
test("sejred -> sejred", function() {deepEqual( Stem("sejred"), "sejred");});
test("sejren -> sejr", function() {deepEqual( Stem("sejren"), "sejr");});
test("sejrende -> sejr", function() {deepEqual( Stem("sejrende"), "sejr");});
test("sejrendes -> sejr", function() {deepEqual( Stem("sejrendes"), "sejr");});
test("sejrens -> sejr", function() {deepEqual( Stem("sejrens"), "sejr");});
test("sejrer -> sejr", function() {deepEqual( Stem("sejrer"), "sejr");});
test("sejret -> sejr", function() {deepEqual( Stem("sejret"), "sejr");});
test("sejrherrerne -> sejrher", function() {deepEqual( Stem("sejrherrerne"), "sejrher");});
test("sejrherrernes -> sejrher", function() {deepEqual( Stem("sejrherrernes"), "sejrher");});
test("sejrløst -> sejrløs", function() {deepEqual( Stem("sejrløst"), "sejrløs");});
test("sejrrig -> sejr", function() {deepEqual( Stem("sejrrig"), "sejr");});
test("sejrspil -> sejrspil", function() {deepEqual( Stem("sejrspil"), "sejrspil");});
test("sejrspris -> sejrspris", function() {deepEqual( Stem("sejrspris"), "sejrspris");});
test("sejrsprisen -> sejrspris", function() {deepEqual( Stem("sejrsprisen"), "sejrspris");});
test("sejrsråb -> sejrsråb", function() {deepEqual( Stem("sejrsråb"), "sejrsråb");});
test("sejrstog -> sejrstog", function() {deepEqual( Stem("sejrstog"), "sejrstog");});
test("sejrsæle -> sejrsæl", function() {deepEqual( Stem("sejrsæle"), "sejrsæl");});
test("sekaka -> sekaka", function() {deepEqual( Stem("sekaka"), "sekaka");});
test("sekel -> sekel", function() {deepEqual( Stem("sekel"), "sekel");});
test("sekelen -> sekel", function() {deepEqual( Stem("sekelen"), "sekel");});
test("seks -> sek", function() {deepEqual( Stem("seks"), "sek");});
test("seksten -> sekst", function() {deepEqual( Stem("seksten"), "sekst");});
test("sekstende -> sekst", function() {deepEqual( Stem("sekstende"), "sekst");});
test("sekundus -> sekundus", function() {deepEqual( Stem("sekundus"), "sekundus");});
test("sel -> sel", function() {deepEqual( Stem("sel"), "sel");});
test("sela -> sela", function() {deepEqual( Stem("sela"), "sela");});
test("seldøde -> seldød", function() {deepEqual( Stem("seldøde"), "seldød");});
test("seled -> seled", function() {deepEqual( Stem("seled"), "seled");});
test("selet -> sel", function() {deepEqual( Stem("selet"), "sel");});
test("selets -> sel", function() {deepEqual( Stem("selets"), "sel");});
test("seletøjet -> seletøj", function() {deepEqual( Stem("seletøjet"), "seletøj");});
test("seleukia -> seleukia", function() {deepEqual( Stem("seleukia"), "seleukia");});
test("selhingste -> selhingst", function() {deepEqual( Stem("selhingste"), "selhingst");});
test("selhoved -> selhoved", function() {deepEqual( Stem("selhoved"), "selhoved");});
test("selkæbe -> selkæb", function() {deepEqual( Stem("selkæbe"), "selkæb");});
test("sels -> sel", function() {deepEqual( Stem("sels"), "sel");});
test("selskab -> selskab", function() {deepEqual( Stem("selskab"), "selskab");});
test("selv -> selv", function() {deepEqual( Stem("selv"), "selv");});
test("selvbehagelig -> selvbehag", function() {deepEqual( Stem("selvbehagelig"), "selvbehag");});
test("selvbehagelige -> selvbehag", function() {deepEqual( Stem("selvbehagelige"), "selvbehag");});
test("selvdøde -> selvdød", function() {deepEqual( Stem("selvdøde"), "selvdød");});
test("selvdødt -> selvdød", function() {deepEqual( Stem("selvdødt"), "selvdød");});
test("selve -> selv", function() {deepEqual( Stem("selve"), "selv");});
test("selvgjort -> selvgjort", function() {deepEqual( Stem("selvgjort"), "selvgjort");});
test("selvgroede -> selvgroed", function() {deepEqual( Stem("selvgroede"), "selvgroed");});
test("selvmorder -> selvmord", function() {deepEqual( Stem("selvmorder"), "selvmord");});
test("selvsamme -> selvsam", function() {deepEqual( Stem("selvsamme"), "selvsam");});
test("selvtredje -> selvtredj", function() {deepEqual( Stem("selvtredje"), "selvtredj");});
test("selvydmygelse -> selvydmyg", function() {deepEqual( Stem("selvydmygelse"), "selvydmyg");});
test("sem -> sem", function() {deepEqual( Stem("sem"), "sem");});
test("semakja -> semakja", function() {deepEqual( Stem("semakja"), "semakja");});
test("semeis -> semeis", function() {deepEqual( Stem("semeis"), "semeis");});
test("semer -> sem", function() {deepEqual( Stem("semer"), "sem");});
test("sems -> sem", function() {deepEqual( Stem("sems"), "sem");});
test("sena -> sena", function() {deepEqual( Stem("sena"), "sena");});
test("send -> send", function() {deepEqual( Stem("send"), "send");});
test("sende -> send", function() {deepEqual( Stem("sende"), "send");});
test("sendebud -> sendebud", function() {deepEqual( Stem("sendebud"), "sendebud");});
test("sendebudene -> sendebud", function() {deepEqual( Stem("sendebudene"), "sendebud");});
test("sendebudenes -> sendebud", function() {deepEqual( Stem("sendebudenes"), "sendebud");});
test("sendebudet -> sendebud", function() {deepEqual( Stem("sendebudet"), "sendebud");});
test("sendebuds -> sendebud", function() {deepEqual( Stem("sendebuds"), "sendebud");});
test("sendefærd -> sendefærd", function() {deepEqual( Stem("sendefærd"), "sendefærd");});
test("sendemænd -> sendemænd", function() {deepEqual( Stem("sendemænd"), "sendemænd");});
test("sender -> send", function() {deepEqual( Stem("sender"), "send");});
test("sendes -> send", function() {deepEqual( Stem("sendes"), "send");});
test("sendfe -> sendf", function() {deepEqual( Stem("sendfe"), "sendf");});
test("sendt -> send", function() {deepEqual( Stem("sendt"), "send");});
test("sendte -> send", function() {deepEqual( Stem("sendte"), "send");});
test("sendtes -> send", function() {deepEqual( Stem("sendtes"), "send");});
test("sene -> sen", function() {deepEqual( Stem("sene"), "sen");});
test("sener -> sen", function() {deepEqual( Stem("sener"), "sen");});
test("senere -> sen", function() {deepEqual( Stem("senere"), "sen");});
test("seng -> seng", function() {deepEqual( Stem("seng"), "seng");});
test("senge -> seng", function() {deepEqual( Stem("senge"), "seng");});
test("sengekammeret -> sengekam", function() {deepEqual( Stem("sengekammeret"), "sengekam");});
test("sengen -> seng", function() {deepEqual( Stem("sengen"), "seng");});
test("sengs -> seng", function() {deepEqual( Stem("sengs"), "seng");});
test("senhjertede -> senhjerted", function() {deepEqual( Stem("senhjertede"), "senhjerted");});
test("senir -> senir", function() {deepEqual( Stem("senir"), "senir");});
test("senircypresser -> senircypres", function() {deepEqual( Stem("senircypresser"), "senircypres");});
test("senirs -> senir", function() {deepEqual( Stem("senirs"), "senir");});
test("sennepskorn -> sennepskorn", function() {deepEqual( Stem("sennepskorn"), "sennepskorn");});
test("sent -> sent", function() {deepEqual( Stem("sent"), "sent");});
test("seorim -> seorim", function() {deepEqual( Stem("seorim"), "seorim");});
test("septer -> sept", function() {deepEqual( Stem("septer"), "sept");});
test("ser -> ser", function() {deepEqual( Stem("ser"), "ser");});
test("sera -> sera", function() {deepEqual( Stem("sera"), "sera");});
test("serafer -> seraf", function() {deepEqual( Stem("serafer"), "seraf");});
test("seraferne -> seraf", function() {deepEqual( Stem("seraferne"), "seraf");});
test("seraja -> seraja", function() {deepEqual( Stem("seraja"), "seraja");});
test("sered -> sered", function() {deepEqual( Stem("sered"), "sered");});
test("serediternes -> seredit", function() {deepEqual( Stem("serediternes"), "seredit");});
test("sergius -> sergius", function() {deepEqual( Stem("sergius"), "sergius");});
test("serug -> serug", function() {deepEqual( Stem("serug"), "serug");});
test("seruks -> seruk", function() {deepEqual( Stem("seruks"), "seruk");});
test("ses -> ses", function() {deepEqual( Stem("ses"), "ses");});
test("set -> set", function() {deepEqual( Stem("set"), "set");});
test("seths -> seth", function() {deepEqual( Stem("seths"), "seth");});
test("sets -> set", function() {deepEqual( Stem("sets"), "set");});
test("setsønnernes -> setsøn", function() {deepEqual( Stem("setsønnernes"), "setsøn");});
test("setur -> setur", function() {deepEqual( Stem("setur"), "setur");});
test("sfad -> sfad", function() {deepEqual( Stem("sfad"), "sfad");});
test("sfemte -> sfemt", function() {deepEqual( Stem("sfemte"), "sfemt");});
test("sfgrænsen -> sfgræns", function() {deepEqual( Stem("sfgrænsen"), "sfgræns");});
test("sfiftet -> sfift", function() {deepEqual( Stem("sfiftet"), "sfift");});
test("sfår -> sfår", function() {deepEqual( Stem("sfår"), "sfår");});
test("sfæder -> sfæd", function() {deepEqual( Stem("sfæder"), "sfæd");});
test("si -> si", function() {deepEqual( Stem("si"), "si");});
test("sibbekaj -> sibbekaj", function() {deepEqual( Stem("sibbekaj"), "sibbekaj");});
test("sibbolet -> sibbol", function() {deepEqual( Stem("sibbolet"), "sibbol");});
test("sibma -> sibma", function() {deepEqual( Stem("sibma"), "sibma");});
test("sibmas -> sibma", function() {deepEqual( Stem("sibmas"), "sibma");});
test("sibon -> sibon", function() {deepEqual( Stem("sibon"), "sibon");});
test("sibrajim -> sibrajim", function() {deepEqual( Stem("sibrajim"), "sibrajim");});
test("sid -> sid", function() {deepEqual( Stem("sid"), "sid");});
test("sidde -> sid", function() {deepEqual( Stem("sidde"), "sid");});
test("siddende -> sid", function() {deepEqual( Stem("siddende"), "sid");});
test("sidder -> sid", function() {deepEqual( Stem("sidder"), "sid");});
test("siddet -> sid", function() {deepEqual( Stem("siddet"), "sid");});
test("siddims -> siddim", function() {deepEqual( Stem("siddims"), "siddim");});
test("side -> sid", function() {deepEqual( Stem("side"), "sid");});
test("sidemure -> sidemur", function() {deepEqual( Stem("sidemure"), "sidemur");});
test("siden -> sid", function() {deepEqual( Stem("siden"), "sid");});
test("sider -> sid", function() {deepEqual( Stem("sider"), "sid");});
test("siderne -> sid", function() {deepEqual( Stem("siderne"), "sid");});
test("siderum -> siderum", function() {deepEqual( Stem("siderum"), "siderum");});
test("siderummene -> siderum", function() {deepEqual( Stem("siderummene"), "siderum");});
test("siderummet -> siderum", function() {deepEqual( Stem("siderummet"), "siderum");});
test("sidestykkerne -> sidestyk", function() {deepEqual( Stem("sidestykkerne"), "sidestyk");});
test("sidevægge -> sidevæg", function() {deepEqual( Stem("sidevægge"), "sidevæg");});
test("sidevæggene -> sidevæg", function() {deepEqual( Stem("sidevæggene"), "sidevæg");});
test("sidon -> sidon", function() {deepEqual( Stem("sidon"), "sidon");});
test("sidonierne -> sidoni", function() {deepEqual( Stem("sidonierne"), "sidoni");});
test("sidons -> sidon", function() {deepEqual( Stem("sidons"), "sidon");});
test("sidst -> sidst", function() {deepEqual( Stem("sidst"), "sidst");});
test("sidste -> sidst", function() {deepEqual( Stem("sidste"), "sidst");});
test("sifmot -> sifmot", function() {deepEqual( Stem("sifmot"), "sifmot");});
test("sig -> sig", function() {deepEqual( Stem("sig"), "sig");});
test("sige -> sig", function() {deepEqual( Stem("sige"), "sig");});
test("sigem -> sigem", function() {deepEqual( Stem("sigem"), "sigem");});
test("sigende -> sig", function() {deepEqual( Stem("sigende"), "sig");});
test("siger -> sig", function() {deepEqual( Stem("siger"), "sig");});
test("sigerhærskarers -> sigerhærskar", function() {deepEqual( Stem("sigerhærskarers"), "sigerhærskar");});
test("siges -> sig", function() {deepEqual( Stem("siges"), "sig");});
test("signeter -> signet", function() {deepEqual( Stem("signeter"), "signet");});
test("sigs -> sig", function() {deepEqual( Stem("sigs"), "sig");});
test("sigte -> sigt", function() {deepEqual( Stem("sigte"), "sigt");});
test("sigtede -> sigted", function() {deepEqual( Stem("sigtede"), "sigted");});
test("sigter -> sigt", function() {deepEqual( Stem("sigter"), "sigt");});
test("sigtes -> sigt", function() {deepEqual( Stem("sigtes"), "sigt");});
test("sihon -> sihon", function() {deepEqual( Stem("sihon"), "sihon");});
test("sihons -> sihon", function() {deepEqual( Stem("sihons"), "sihon");});
test("sikem -> sikem", function() {deepEqual( Stem("sikem"), "sikem");});
test("sikemiternes -> sikemit", function() {deepEqual( Stem("sikemiternes"), "sikemit");});
test("sikems -> sikem", function() {deepEqual( Stem("sikems"), "sikem");});
test("siken -> sik", function() {deepEqual( Stem("siken"), "sik");});
test("sikker -> sik", function() {deepEqual( Stem("sikker"), "sik");});
test("sikkerhed -> sikker", function() {deepEqual( Stem("sikkerhed"), "sikker");});
test("sikkerlig -> sikker", function() {deepEqual( Stem("sikkerlig"), "sikker");});
test("sikkert -> sikkert", function() {deepEqual( Stem("sikkert"), "sikkert");});
test("sikre -> sikr", function() {deepEqual( Stem("sikre"), "sikr");});
test("sikrer -> sikr", function() {deepEqual( Stem("sikrer"), "sikr");});
test("sikret -> sikr", function() {deepEqual( Stem("sikret"), "sikr");});
test("silas -> sila", function() {deepEqual( Stem("silas"), "sila");});
test("silde -> sild", function() {deepEqual( Stem("silde"), "sild");});
test("sildig -> sild", function() {deepEqual( Stem("sildig"), "sild");});
test("sildigregn -> sildigregn", function() {deepEqual( Stem("sildigregn"), "sildigregn");});
test("sildigregnstide -> sildigregnstid", function() {deepEqual( Stem("sildigregnstide"), "sildigregnstid");});
test("silke -> silk", function() {deepEqual( Stem("silke"), "silk");});
test("silo -> silo", function() {deepEqual( Stem("silo"), "silo");});
test("siloam -> siloam", function() {deepEqual( Stem("siloam"), "siloam");});
test("siloas -> siloa", function() {deepEqual( Stem("siloas"), "siloa");});
test("siloniten -> silonit", function() {deepEqual( Stem("siloniten"), "silonit");});
test("silvanus -> silvanus", function() {deepEqual( Stem("silvanus"), "silvanus");});
test("simei -> simei", function() {deepEqual( Stem("simei"), "simei");});
test("simeis -> simeis", function() {deepEqual( Stem("simeis"), "simeis");});
test("simenoiternes -> simenoit", function() {deepEqual( Stem("simenoiternes"), "simenoit");});
test("simeon -> simeon", function() {deepEqual( Stem("simeon"), "simeon");});
test("simeoniterne -> simeonit", function() {deepEqual( Stem("simeoniterne"), "simeonit");});
test("simeoniternes -> simeonit", function() {deepEqual( Stem("simeoniternes"), "simeonit");});
test("simeons -> simeon", function() {deepEqual( Stem("simeons"), "simeon");});
test("simmon -> simmon", function() {deepEqual( Stem("simmon"), "simmon");});
test("simon -> simon", function() {deepEqual( Stem("simon"), "simon");});
test("simons -> simon", function() {deepEqual( Stem("simons"), "simon");});
test("simpel -> simpel", function() {deepEqual( Stem("simpel"), "simpel");});
test("simpleste -> simplest", function() {deepEqual( Stem("simpleste"), "simplest");});
test("sin -> sin", function() {deepEqual( Stem("sin"), "sin");});
test("sinai -> sinai", function() {deepEqual( Stem("sinai"), "sinai");});
test("sinaj -> sinaj", function() {deepEqual( Stem("sinaj"), "sinaj");});
test("sind -> sind", function() {deepEqual( Stem("sind"), "sind");});
test("sindbillede -> sindbilled", function() {deepEqual( Stem("sindbillede"), "sindbilled");});
test("sinde -> sind", function() {deepEqual( Stem("sinde"), "sind");});
test("sindede -> sinded", function() {deepEqual( Stem("sindede"), "sinded");});
test("sindelag -> sindelag", function() {deepEqual( Stem("sindelag"), "sindelag");});
test("sindet -> sind", function() {deepEqual( Stem("sindet"), "sind");});
test("sindets -> sind", function() {deepEqual( Stem("sindets"), "sind");});
test("sindig -> sind", function() {deepEqual( Stem("sindig"), "sind");});
test("sindige -> sind", function() {deepEqual( Stem("sindige"), "sind");});
test("sindigheds -> sind", function() {deepEqual( Stem("sindigheds"), "sind");});
test("sindigt -> sind", function() {deepEqual( Stem("sindigt"), "sind");});
test("sinds -> sind", function() {deepEqual( Stem("sinds"), "sind");});
test("sine -> sin", function() {deepEqual( Stem("sine"), "sin");});
test("sinear -> sinear", function() {deepEqual( Stem("sinear"), "sinear");});
test("sinears -> sinear", function() {deepEqual( Stem("sinears"), "sinear");});
test("sinims -> sinim", function() {deepEqual( Stem("sinims"), "sinim");});
test("siniterne -> sinit", function() {deepEqual( Stem("siniterne"), "sinit");});
test("sins -> sin", function() {deepEqual( Stem("sins"), "sin");});
test("sion -> sion", function() {deepEqual( Stem("sion"), "sion");});
test("sippaj -> sippaj", function() {deepEqual( Stem("sippaj"), "sippaj");});
test("sira -> sira", function() {deepEqual( Stem("sira"), "sira");});
test("sirjon -> sirjon", function() {deepEqual( Stem("sirjon"), "sirjon");});
test("sirjons -> sirjon", function() {deepEqual( Stem("sirjons"), "sirjon");});
test("sisera -> sisera", function() {deepEqual( Stem("sisera"), "sisera");});
test("siseras -> sisera", function() {deepEqual( Stem("siseras"), "sisera");});
test("sismaj -> sismaj", function() {deepEqual( Stem("sismaj"), "sismaj");});
test("sit -> sit", function() {deepEqual( Stem("sit"), "sit");});
test("sitna -> sitna", function() {deepEqual( Stem("sitna"), "sitna");});
test("sitri -> sitri", function() {deepEqual( Stem("sitri"), "sitri");});
test("siv -> siv", function() {deepEqual( Stem("siv"), "siv");});
test("sivan -> sivan", function() {deepEqual( Stem("sivan"), "sivan");});
test("sivene -> siv", function() {deepEqual( Stem("sivene"), "siv");});
test("siver -> siv", function() {deepEqual( Stem("siver"), "siv");});
test("sivet -> siv", function() {deepEqual( Stem("sivet"), "siv");});
test("sja -> sja", function() {deepEqual( Stem("sja"), "sja");});
test("sjabbetaj -> sjabbetaj", function() {deepEqual( Stem("sjabbetaj"), "sjabbetaj");});
test("sjadrak -> sjadrak", function() {deepEqual( Stem("sjadrak"), "sjadrak");});
test("sjadraks -> sjadrak", function() {deepEqual( Stem("sjadraks"), "sjadrak");});
test("sjafam -> sjafam", function() {deepEqual( Stem("sjafam"), "sjafam");});
test("sjafan -> sjafan", function() {deepEqual( Stem("sjafan"), "sjafan");});
test("sjafans -> sjafan", function() {deepEqual( Stem("sjafans"), "sjafan");});
test("sjafat -> sjafat", function() {deepEqual( Stem("sjafat"), "sjafat");});
test("sjafats -> sjafat", function() {deepEqual( Stem("sjafats"), "sjafat");});
test("sjafirs -> sjafir", function() {deepEqual( Stem("sjafirs"), "sjafir");});
test("sjahar -> sjahar", function() {deepEqual( Stem("sjahar"), "sjahar");});
test("sjaharajim -> sjaharajim", function() {deepEqual( Stem("sjaharajim"), "sjaharajim");});
test("sjakal -> sjakal", function() {deepEqual( Stem("sjakal"), "sjakal");});
test("sjakaler -> sjakal", function() {deepEqual( Stem("sjakaler"), "sjakal");});
test("sjakalerne -> sjakal", function() {deepEqual( Stem("sjakalerne"), "sjakal");});
test("sjakalernes -> sjakal", function() {deepEqual( Stem("sjakalernes"), "sjakal");});
test("sjakalers -> sjakal", function() {deepEqual( Stem("sjakalers"), "sjakal");});
test("sjaler -> sjal", function() {deepEqual( Stem("sjaler"), "sjal");});
test("sjalisja -> sjalisja", function() {deepEqual( Stem("sjalisja"), "sjalisja");});
test("sjalleketporten -> sjalleketport", function() {deepEqual( Stem("sjalleketporten"), "sjalleketport");});
test("sjallum -> sjallum", function() {deepEqual( Stem("sjallum"), "sjallum");});
test("sjallums -> sjallum", function() {deepEqual( Stem("sjallums"), "sjallum");});
test("sjallun -> sjallun", function() {deepEqual( Stem("sjallun"), "sjallun");});
test("sjalman -> sjalman", function() {deepEqual( Stem("sjalman"), "sjalman");});
test("sjaltiels -> sjaltiel", function() {deepEqual( Stem("sjaltiels"), "sjaltiel");});
test("sjama -> sjama", function() {deepEqual( Stem("sjama"), "sjama");});
test("sjamgar -> sjamgar", function() {deepEqual( Stem("sjamgar"), "sjamgar");});
test("sjamgars -> sjamgar", function() {deepEqual( Stem("sjamgars"), "sjamgar");});
test("sjamhut -> sjamhut", function() {deepEqual( Stem("sjamhut"), "sjamhut");});
test("sjamir -> sjamir", function() {deepEqual( Stem("sjamir"), "sjamir");});
test("sjamma -> sjamma", function() {deepEqual( Stem("sjamma"), "sjamma");});
test("sjammaj -> sjammaj", function() {deepEqual( Stem("sjammaj"), "sjammaj");});
test("sjammajs -> sjammaj", function() {deepEqual( Stem("sjammajs"), "sjammaj");});
test("sjammas -> sjamma", function() {deepEqual( Stem("sjammas"), "sjamma");});
test("sjammot -> sjammot", function() {deepEqual( Stem("sjammot"), "sjammot");});
test("sjammua -> sjammua", function() {deepEqual( Stem("sjammua"), "sjammua");});
test("sjamsjeraj -> sjamsjeraj", function() {deepEqual( Stem("sjamsjeraj"), "sjamsjeraj");});
test("sjan -> sjan", function() {deepEqual( Stem("sjan"), "sjan");});
test("sjans -> sjan", function() {deepEqual( Stem("sjans"), "sjan");});
test("sjaraj -> sjaraj", function() {deepEqual( Stem("sjaraj"), "sjaraj");});
test("sjarars -> sjarar", function() {deepEqual( Stem("sjarars"), "sjarar");});
test("sjaruhen -> sjaruh", function() {deepEqual( Stem("sjaruhen"), "sjaruh");});
test("sjas -> sjas", function() {deepEqual( Stem("sjas"), "sjas");});
test("sjasjaj -> sjasjaj", function() {deepEqual( Stem("sjasjaj"), "sjasjaj");});
test("sjasjak -> sjasjak", function() {deepEqual( Stem("sjasjak"), "sjasjak");});
test("sjasjaks -> sjasjak", function() {deepEqual( Stem("sjasjaks"), "sjasjak");});
test("sjatans -> sjatan", function() {deepEqual( Stem("sjatans"), "sjatan");});
test("sjaul -> sjaul", function() {deepEqual( Stem("sjaul"), "sjaul");});
test("sjauliternes -> sjaulit", function() {deepEqual( Stem("sjauliternes"), "sjaulit");});
test("sjave -> sjav", function() {deepEqual( Stem("sjave"), "sjav");});
test("sjavedalen -> sjavedal", function() {deepEqual( Stem("sjavedalen"), "sjavedal");});
test("sjavsja -> sjavsja", function() {deepEqual( Stem("sjavsja"), "sjavsja");});
test("sje -> sje", function() {deepEqual( Stem("sje"), "sje");});
test("sjeal -> sjeal", function() {deepEqual( Stem("sjeal"), "sjeal");});
test("sjealtiel -> sjealtiel", function() {deepEqual( Stem("sjealtiel"), "sjealtiel");});
test("sjealtiels -> sjealtiel", function() {deepEqual( Stem("sjealtiels"), "sjealtiel");});
test("sjean -> sjean", function() {deepEqual( Stem("sjean"), "sjean");});
test("sjearja -> sjearja", function() {deepEqual( Stem("sjearja"), "sjearja");});
test("sjearjasjub -> sjearjasjub", function() {deepEqual( Stem("sjearjasjub"), "sjearjasjub");});
test("sjeba -> sjeba", function() {deepEqual( Stem("sjeba"), "sjeba");});
test("sjebanja -> sjebanja", function() {deepEqual( Stem("sjebanja"), "sjebanja");});
test("sjebat -> sjebat", function() {deepEqual( Stem("sjebat"), "sjebat");});
test("sjeber -> sjeb", function() {deepEqual( Stem("sjeber"), "sjeb");});
test("sjebna -> sjebna", function() {deepEqual( Stem("sjebna"), "sjebna");});
test("sjedeurs -> sjedeur", function() {deepEqual( Stem("sjedeurs"), "sjedeur");});
test("sjefafja -> sjefafja", function() {deepEqual( Stem("sjefafja"), "sjefafja");});
test("sjefam -> sjefam", function() {deepEqual( Stem("sjefam"), "sjefam");});
test("sjefatja -> sjefatja", function() {deepEqual( Stem("sjefatja"), "sjefatja");});
test("sjefatjas -> sjefatja", function() {deepEqual( Stem("sjefatjas"), "sjefatja");});
test("sjefers -> sjef", function() {deepEqual( Stem("sjefers"), "sjef");});
test("sjefo -> sjefo", function() {deepEqual( Stem("sjefo"), "sjefo");});
test("sjeft -> sjeft", function() {deepEqual( Stem("sjeft"), "sjeft");});
test("sjefufan -> sjefufan", function() {deepEqual( Stem("sjefufan"), "sjefufan");});
test("sjeharja -> sjeharja", function() {deepEqual( Stem("sjeharja"), "sjeharja");});
test("sjeja -> sjeja", function() {deepEqual( Stem("sjeja"), "sjeja");});
test("sjekanja -> sjekanja", function() {deepEqual( Stem("sjekanja"), "sjekanja");});
test("sjekanjas -> sjekanja", function() {deepEqual( Stem("sjekanjas"), "sjekanja");});
test("sjekem -> sjekem", function() {deepEqual( Stem("sjekem"), "sjekem");});
test("sjekemiternes -> sjekemit", function() {deepEqual( Stem("sjekemiternes"), "sjekemit");});
test("sjekems -> sjekem", function() {deepEqual( Stem("sjekems"), "sjekem");});
test("sjekm -> sjekm", function() {deepEqual( Stem("sjekm"), "sjekm");});
test("sjela -> sjela", function() {deepEqual( Stem("sjela"), "sjela");});
test("sjelaniten -> sjelanit", function() {deepEqual( Stem("sjelaniten"), "sjelanit");});
test("sjelaniterne -> sjelanit", function() {deepEqual( Stem("sjelaniterne"), "sjelanit");});
test("sjelaniternes -> sjelanit", function() {deepEqual( Stem("sjelaniternes"), "sjelanit");});
test("sjelas -> sjela", function() {deepEqual( Stem("sjelas"), "sjela");});
test("sjelef -> sjelef", function() {deepEqual( Stem("sjelef"), "sjelef");});
test("sjelemja -> sjelemja", function() {deepEqual( Stem("sjelemja"), "sjelemja");});
test("sjelemjas -> sjelemja", function() {deepEqual( Stem("sjelemjas"), "sjelemja");});
test("sjelesj -> sjelesj", function() {deepEqual( Stem("sjelesj"), "sjelesj");});
test("sjelisjija -> sjelisjija", function() {deepEqual( Stem("sjelisjija"), "sjelisjija");});
test("sjelomis -> sjelomis", function() {deepEqual( Stem("sjelomis"), "sjelomis");});
test("sjelomit -> sjelomit", function() {deepEqual( Stem("sjelomit"), "sjelomit");});
test("sjelomot -> sjelomot", function() {deepEqual( Stem("sjelomot"), "sjelomot");});
test("sjelomots -> sjelomot", function() {deepEqual( Stem("sjelomots"), "sjelomot");});
test("sjelumiel -> sjelumiel", function() {deepEqual( Stem("sjelumiel"), "sjelumiel");});
test("sjelumiels -> sjelumiel", function() {deepEqual( Stem("sjelumiels"), "sjelumiel");});
test("sjem -> sjem", function() {deepEqual( Stem("sjem"), "sjem");});
test("sjema -> sjema", function() {deepEqual( Stem("sjema"), "sjema");});
test("sjemaja -> sjemaja", function() {deepEqual( Stem("sjemaja"), "sjemaja");});
test("sjemajas -> sjemaja", function() {deepEqual( Stem("sjemajas"), "sjemaja");});
test("sjemarja -> sjemarja", function() {deepEqual( Stem("sjemarja"), "sjemarja");});
test("sjemer -> sjem", function() {deepEqual( Stem("sjemer"), "sjem");});
test("sjemers -> sjem", function() {deepEqual( Stem("sjemers"), "sjem");});
test("sjemesj -> sjemesj", function() {deepEqual( Stem("sjemesj"), "sjemesj");});
test("sjemesjifen -> sjemesjif", function() {deepEqual( Stem("sjemesjifen"), "sjemesjif");});
test("sjemesjiten -> sjemesjit", function() {deepEqual( Stem("sjemesjiten"), "sjemesjit");});
test("sjemesjiterne -> sjemesjit", function() {deepEqual( Stem("sjemesjiterne"), "sjemesjit");});
test("sjemesjiternes -> sjemesjit", function() {deepEqual( Stem("sjemesjiternes"), "sjemesjit");});
test("sjemesjkilden -> sjemesjkild", function() {deepEqual( Stem("sjemesjkilden"), "sjemesjkild");});
test("sjemida -> sjemida", function() {deepEqual( Stem("sjemida"), "sjemida");});
test("sjemidaiternes -> sjemidait", function() {deepEqual( Stem("sjemidaiternes"), "sjemidait");});
test("sjemidas -> sjemida", function() {deepEqual( Stem("sjemidas"), "sjemida");});
test("sjemiramot -> sjemiramot", function() {deepEqual( Stem("sjemiramot"), "sjemiramot");});
test("sjemuel -> sjemuel", function() {deepEqual( Stem("sjemuel"), "sjemuel");});
test("sjen -> sjen", function() {deepEqual( Stem("sjen"), "sjen");});
test("sjerebja -> sjerebja", function() {deepEqual( Stem("sjerebja"), "sjerebja");});
test("sjeresj -> sjeresj", function() {deepEqual( Stem("sjeresj"), "sjeresj");});
test("sjesjaj -> sjesjaj", function() {deepEqual( Stem("sjesjaj"), "sjesjaj");});
test("sjesjak -> sjesjak", function() {deepEqual( Stem("sjesjak"), "sjesjak");});
test("sjesjan -> sjesjan", function() {deepEqual( Stem("sjesjan"), "sjesjan");});
test("sjesjans -> sjesjan", function() {deepEqual( Stem("sjesjans"), "sjesjan");});
test("sjesjbazzar -> sjesjbazzar", function() {deepEqual( Stem("sjesjbazzar"), "sjesjbazzar");});
test("sjetar -> sjetar", function() {deepEqual( Stem("sjetar"), "sjetar");});
test("sjetarbozenaj -> sjetarbozenaj", function() {deepEqual( Stem("sjetarbozenaj"), "sjetarbozenaj");});
test("sjetedel -> sjetedel", function() {deepEqual( Stem("sjetedel"), "sjetedel");});
test("sjette -> sjet", function() {deepEqual( Stem("sjette"), "sjet");});
test("sjettedel -> sjettedel", function() {deepEqual( Stem("sjettedel"), "sjettedel");});
test("sjeva -> sjeva", function() {deepEqual( Stem("sjeva"), "sjeva");});
test("sji -> sji", function() {deepEqual( Stem("sji"), "sji");});
test("sjib -> sjib", function() {deepEqual( Stem("sjib"), "sjib");});
test("sjibbolet -> sjibbol", function() {deepEqual( Stem("sjibbolet"), "sjibbol");});
test("sjif -> sjif", function() {deepEqual( Stem("sjif"), "sjif");});
test("sjifmiten -> sjifmit", function() {deepEqual( Stem("sjifmiten"), "sjifmit");});
test("sjifra -> sjifra", function() {deepEqual( Stem("sjifra"), "sjifra");});
test("sjiftans -> sjiftan", function() {deepEqual( Stem("sjiftans"), "sjiftan");});
test("sjigjonot -> sjigjonot", function() {deepEqual( Stem("sjigjonot"), "sjigjonot");});
test("sjihor -> sjihor", function() {deepEqual( Stem("sjihor"), "sjihor");});
test("sjihors -> sjihor", function() {deepEqual( Stem("sjihors"), "sjihor");});
test("sjikkaron -> sjikkaron", function() {deepEqual( Stem("sjikkaron"), "sjikkaron");});
test("sjilhi -> sjilhi", function() {deepEqual( Stem("sjilhi"), "sjilhi");});
test("sjilhim -> sjilhim", function() {deepEqual( Stem("sjilhim"), "sjilhim");});
test("sjillem -> sjillem", function() {deepEqual( Stem("sjillem"), "sjillem");});
test("sjillemiternes -> sjillemit", function() {deepEqual( Stem("sjillemiternes"), "sjillemit");});
test("sjilo -> sjilo", function() {deepEqual( Stem("sjilo"), "sjilo");});
test("sjilsja -> sjilsja", function() {deepEqual( Stem("sjilsja"), "sjilsja");});
test("sjim -> sjim", function() {deepEqual( Stem("sjim"), "sjim");});
test("sjimats -> sjimat", function() {deepEqual( Stem("sjimats"), "sjimat");});
test("sjimi -> sjimi", function() {deepEqual( Stem("sjimi"), "sjimi");});
test("sjimiternes -> sjimit", function() {deepEqual( Stem("sjimiternes"), "sjimit");});
test("sjimons -> sjimon", function() {deepEqual( Stem("sjimons"), "sjimon");});
test("sjimrat -> sjimrat", function() {deepEqual( Stem("sjimrat"), "sjimrat");});
test("sjimri -> sjimri", function() {deepEqual( Stem("sjimri"), "sjimri");});
test("sjimris -> sjimris", function() {deepEqual( Stem("sjimris"), "sjimris");});
test("sjimrit -> sjimrit", function() {deepEqual( Stem("sjimrit"), "sjimrit");});
test("sjimron -> sjimron", function() {deepEqual( Stem("sjimron"), "sjimron");});
test("sjimroniternes -> sjimronit", function() {deepEqual( Stem("sjimroniternes"), "sjimronit");});
test("sjimsjaj -> sjimsjaj", function() {deepEqual( Stem("sjimsjaj"), "sjimsjaj");});
test("sjin -> sjin", function() {deepEqual( Stem("sjin"), "sjin");});
test("sjisjak -> sjisjak", function() {deepEqual( Stem("sjisjak"), "sjisjak");});
test("sjisjaks -> sjisjak", function() {deepEqual( Stem("sjisjaks"), "sjisjak");});
test("sjisjas -> sjisja", function() {deepEqual( Stem("sjisjas"), "sjisja");});
test("sjitim -> sjitim", function() {deepEqual( Stem("sjitim"), "sjitim");});
test("sjitraj -> sjitraj", function() {deepEqual( Stem("sjitraj"), "sjitraj");});
test("sjitta -> sjitta", function() {deepEqual( Stem("sjitta"), "sjitta");});
test("sjittim -> sjittim", function() {deepEqual( Stem("sjittim"), "sjittim");});
test("sjizas -> sjiza", function() {deepEqual( Stem("sjizas"), "sjiza");});
test("sjoa -> sjoa", function() {deepEqual( Stem("sjoa"), "sjoa");});
test("sjobab -> sjobab", function() {deepEqual( Stem("sjobab"), "sjobab");});
test("sjobajs -> sjobaj", function() {deepEqual( Stem("sjobajs"), "sjobaj");});
test("sjobak -> sjobak", function() {deepEqual( Stem("sjobak"), "sjobak");});
test("sjobal -> sjobal", function() {deepEqual( Stem("sjobal"), "sjobal");});
test("sjobals -> sjobal", function() {deepEqual( Stem("sjobals"), "sjobal");});
test("sjobek -> sjobek", function() {deepEqual( Stem("sjobek"), "sjobek");});
test("sjobi -> sjobi", function() {deepEqual( Stem("sjobi"), "sjobi");});
test("sjofak -> sjofak", function() {deepEqual( Stem("sjofak"), "sjofak");});
test("sjofan -> sjofan", function() {deepEqual( Stem("sjofan"), "sjofan");});
test("sjoham -> sjoham", function() {deepEqual( Stem("sjoham"), "sjoham");});
test("sjohamsten -> sjohamst", function() {deepEqual( Stem("sjohamsten"), "sjohamst");});
test("sjohamstenene -> sjohamsten", function() {deepEqual( Stem("sjohamstenene"), "sjohamsten");});
test("sjomer -> sjom", function() {deepEqual( Stem("sjomer"), "sjom");});
test("sjomers -> sjom", function() {deepEqual( Stem("sjomers"), "sjom");});
test("sjua -> sjua", function() {deepEqual( Stem("sjua"), "sjua");});
test("sjual -> sjual", function() {deepEqual( Stem("sjual"), "sjual");});
test("sjualegnen -> sjualegn", function() {deepEqual( Stem("sjualegnen"), "sjualegn");});
test("sjuas -> sjuas", function() {deepEqual( Stem("sjuas"), "sjuas");});
test("sjubael -> sjubael", function() {deepEqual( Stem("sjubael"), "sjubael");});
test("sjubaels -> sjubael", function() {deepEqual( Stem("sjubaels"), "sjubael");});
test("sjufam -> sjufam", function() {deepEqual( Stem("sjufam"), "sjufam");});
test("sjufamiternes -> sjufamit", function() {deepEqual( Stem("sjufamiternes"), "sjufamit");});
test("sjuham -> sjuham", function() {deepEqual( Stem("sjuham"), "sjuham");});
test("sjuhamiternes -> sjuhamit", function() {deepEqual( Stem("sjuhamiternes"), "sjuhamit");});
test("sjuhas -> sjuha", function() {deepEqual( Stem("sjuhas"), "sjuha");});
test("sjuhiten -> sjuhit", function() {deepEqual( Stem("sjuhiten"), "sjuhit");});
test("sjultelas -> sjultela", function() {deepEqual( Stem("sjultelas"), "sjultela");});
test("sjumatiterne -> sjumatit", function() {deepEqual( Stem("sjumatiterne"), "sjumatit");});
test("sjunem -> sjunem", function() {deepEqual( Stem("sjunem"), "sjunem");});
test("sjunemkvinden -> sjunemkvind", function() {deepEqual( Stem("sjunemkvinden"), "sjunemkvind");});
test("sjuni -> sjuni", function() {deepEqual( Stem("sjuni"), "sjuni");});
test("sjuniternes -> sjunit", function() {deepEqual( Stem("sjuniternes"), "sjunit");});
test("sjuppim -> sjuppim", function() {deepEqual( Stem("sjuppim"), "sjuppim");});
test("sjur -> sjur", function() {deepEqual( Stem("sjur"), "sjur");});
test("sjurs -> sjur", function() {deepEqual( Stem("sjurs"), "sjur");});
test("sjutela -> sjutela", function() {deepEqual( Stem("sjutela"), "sjutela");});
test("sjutelaiternes -> sjutelait", function() {deepEqual( Stem("sjutelaiternes"), "sjutelait");});
test("sjæl -> sjæl", function() {deepEqual( Stem("sjæl"), "sjæl");});
test("sjældent -> sjældent", function() {deepEqual( Stem("sjældent"), "sjældent");});
test("sjældnere -> sjældn", function() {deepEqual( Stem("sjældnere"), "sjældn");});
test("sjæle -> sjæl", function() {deepEqual( Stem("sjæle"), "sjæl");});
test("sjælekvide -> sjælekvid", function() {deepEqual( Stem("sjælekvide"), "sjælekvid");});
test("sjælelig -> sjæl", function() {deepEqual( Stem("sjælelig"), "sjæl");});
test("sjælelige -> sjæl", function() {deepEqual( Stem("sjælelige"), "sjæl");});
test("sjæleligt -> sjæl", function() {deepEqual( Stem("sjæleligt"), "sjæl");});
test("sjælen -> sjæl", function() {deepEqual( Stem("sjælen"), "sjæl");});
test("sjælenes -> sjæl", function() {deepEqual( Stem("sjælenes"), "sjæl");});
test("sjælens -> sjæl", function() {deepEqual( Stem("sjælens"), "sjæl");});
test("sjælenød -> sjælenød", function() {deepEqual( Stem("sjælenød"), "sjælenød");});
test("sjæles -> sjæl", function() {deepEqual( Stem("sjæles"), "sjæl");});
test("sjælevånde -> sjælevånd", function() {deepEqual( Stem("sjælevånde"), "sjælevånd");});
test("sjæls -> sjæl", function() {deepEqual( Stem("sjæls"), "sjæl");});
test("sjødeurs -> sjødeur", function() {deepEqual( Stem("sjødeurs"), "sjødeur");});
test("skab -> skab", function() {deepEqual( Stem("skab"), "skab");});
test("skabe -> skab", function() {deepEqual( Stem("skabe"), "skab");});
test("skabelse -> skab", function() {deepEqual( Stem("skabelse"), "skab");});
test("skabelseshistorie -> skabelseshistori", function() {deepEqual( Stem("skabelseshistorie"), "skabelseshistori");});
test("skaber -> skab", function() {deepEqual( Stem("skaber"), "skab");});
test("skaberen -> skab", function() {deepEqual( Stem("skaberen"), "skab");});
test("skabes -> skab", function() {deepEqual( Stem("skabes"), "skab");});
test("skabning -> skabning", function() {deepEqual( Stem("skabning"), "skabning");});
test("skabningen -> skabning", function() {deepEqual( Stem("skabningen"), "skabning");});
test("skabningens -> skabning", function() {deepEqual( Stem("skabningens"), "skabning");});
test("skabninger -> skabning", function() {deepEqual( Stem("skabninger"), "skabning");});
test("skabnings -> skabning", function() {deepEqual( Stem("skabnings"), "skabning");});
test("skabt -> skabt", function() {deepEqual( Stem("skabt"), "skabt");});
test("skabte -> skabt", function() {deepEqual( Stem("skabte"), "skabt");});
test("skabtes -> skabt", function() {deepEqual( Stem("skabtes"), "skabt");});
test("skade -> skad", function() {deepEqual( Stem("skade"), "skad");});
test("skadefro -> skadefro", function() {deepEqual( Stem("skadefro"), "skadefro");});
test("skadefryd -> skadefryd", function() {deepEqual( Stem("skadefryd"), "skadefryd");});
test("skadelige -> skad", function() {deepEqual( Stem("skadelige"), "skad");});
test("skaden -> skad", function() {deepEqual( Stem("skaden"), "skad");});
test("skader -> skad", function() {deepEqual( Stem("skader"), "skad");});
test("skades -> skad", function() {deepEqual( Stem("skades"), "skad");});
test("skaf -> skaf", function() {deepEqual( Stem("skaf"), "skaf");});
test("skaffe -> skaf", function() {deepEqual( Stem("skaffe"), "skaf");});
test("skaffed -> skaffed", function() {deepEqual( Stem("skaffed"), "skaffed");});
test("skaffede -> skaffed", function() {deepEqual( Stem("skaffede"), "skaffed");});
test("skaffer -> skaf", function() {deepEqual( Stem("skaffer"), "skaf");});
test("skaffes -> skaf", function() {deepEqual( Stem("skaffes"), "skaf");});
test("skaffet -> skaf", function() {deepEqual( Stem("skaffet"), "skaf");});
test("skafte -> skaft", function() {deepEqual( Stem("skafte"), "skaft");});
test("skaftet -> skaft", function() {deepEqual( Stem("skaftet"), "skaft");});
test("skagler -> skagl", function() {deepEqual( Stem("skagler"), "skagl");});
test("skaj -> skaj", function() {deepEqual( Stem("skaj"), "skaj");});
test("skakt -> skakt", function() {deepEqual( Stem("skakt"), "skakt");});
test("skal -> skal", function() {deepEqual( Stem("skal"), "skal");});
test("skaldede -> skalded", function() {deepEqual( Stem("skaldede"), "skalded");});
test("skaldepande -> skaldepand", function() {deepEqual( Stem("skaldepande"), "skaldepand");});
test("skaldet -> skald", function() {deepEqual( Stem("skaldet"), "skald");});
test("skalkastes -> skalkast", function() {deepEqual( Stem("skalkastes"), "skalkast");});
test("skalken -> skalk", function() {deepEqual( Stem("skalken"), "skalk");});
test("skalkens -> skalk", function() {deepEqual( Stem("skalkens"), "skalk");});
test("skalkeskjul -> skalkeskjul", function() {deepEqual( Stem("skalkeskjul"), "skalkeskjul");});
test("skalotterne -> skalot", function() {deepEqual( Stem("skalotterne"), "skalot");});
test("skam -> skam", function() {deepEqual( Stem("skam"), "skam");});
test("skamfuld -> skamfuld", function() {deepEqual( Stem("skamfuld"), "skamfuld");});
test("skamfulde -> skamfuld", function() {deepEqual( Stem("skamfulde"), "skamfuld");});
test("skamfuldhed -> skamfuld", function() {deepEqual( Stem("skamfuldhed"), "skamfuld");});
test("skamløs -> skamløs", function() {deepEqual( Stem("skamløs"), "skamløs");});
test("skamløse -> skamløs", function() {deepEqual( Stem("skamløse"), "skamløs");});
test("skamme -> skam", function() {deepEqual( Stem("skamme"), "skam");});
test("skammede -> skammed", function() {deepEqual( Stem("skammede"), "skammed");});
test("skammel -> skammel", function() {deepEqual( Stem("skammel"), "skammel");});
test("skammelig -> skam", function() {deepEqual( Stem("skammelig"), "skam");});
test("skammelige -> skam", function() {deepEqual( Stem("skammelige"), "skam");});
test("skammeligt -> skam", function() {deepEqual( Stem("skammeligt"), "skam");});
test("skammen -> skam", function() {deepEqual( Stem("skammen"), "skam");});
test("skammer -> skam", function() {deepEqual( Stem("skammer"), "skam");});
test("skampletter -> skamplet", function() {deepEqual( Stem("skampletter"), "skamplet");});
test("skamskænder -> skamskænd", function() {deepEqual( Stem("skamskænder"), "skamskænd");});
test("skar -> skar", function() {deepEqual( Stem("skar"), "skar");});
test("skarbt -> skarbt", function() {deepEqual( Stem("skarbt"), "skarbt");});
test("skare -> skar", function() {deepEqual( Stem("skare"), "skar");});
test("skaren -> skar", function() {deepEqual( Stem("skaren"), "skar");});
test("skarens -> skar", function() {deepEqual( Stem("skarens"), "skar");});
test("skarer -> skar", function() {deepEqual( Stem("skarer"), "skar");});
test("skarerne -> skar", function() {deepEqual( Stem("skarerne"), "skar");});
test("skarlagen -> skarlag", function() {deepEqual( Stem("skarlagen"), "skarlag");});
test("skarlagenfarvet -> skarlagenfarv", function() {deepEqual( Stem("skarlagenfarvet"), "skarlagenfarv");});
test("skarlagenklædt -> skarlagenklæd", function() {deepEqual( Stem("skarlagenklædt"), "skarlagenklæd");});
test("skarlagenrød -> skarlagenrød", function() {deepEqual( Stem("skarlagenrød"), "skarlagenrød");});
test("skarlagens -> skarlag", function() {deepEqual( Stem("skarlagens"), "skarlag");});
test("skarn -> skarn", function() {deepEqual( Stem("skarn"), "skarn");});
test("skarndynge -> skarndyng", function() {deepEqual( Stem("skarndynge"), "skarndyng");});
test("skarndynger -> skarndyng", function() {deepEqual( Stem("skarndynger"), "skarndyng");});
test("skarnet -> skarn", function() {deepEqual( Stem("skarnet"), "skarn");});
test("skarp -> skarp", function() {deepEqual( Stem("skarp"), "skarp");});
test("skarpe -> skarp", function() {deepEqual( Stem("skarpe"), "skarp");});
test("skarpere -> skarp", function() {deepEqual( Stem("skarpere"), "skarp");});
test("skarpt -> skarpt", function() {deepEqual( Stem("skarpt"), "skarpt");});
test("skat -> skat", function() {deepEqual( Stem("skat"), "skat");});
test("skatkammer -> skatkam", function() {deepEqual( Stem("skatkammer"), "skatkam");});
test("skatkammeret -> skatkam", function() {deepEqual( Stem("skatkammeret"), "skatkam");});
test("skatkamre -> skatkamr", function() {deepEqual( Stem("skatkamre"), "skatkamr");});
test("skatkamrene -> skatkamr", function() {deepEqual( Stem("skatkamrene"), "skatkamr");});
test("skatmesteren -> skatmest", function() {deepEqual( Stem("skatmesteren"), "skatmest");});
test("skatmestre -> skatmestr", function() {deepEqual( Stem("skatmestre"), "skatmestr");});
test("skatmestrene -> skatmestr", function() {deepEqual( Stem("skatmestrene"), "skatmestr");});
test("skatskyldige -> skatskyld", function() {deepEqual( Stem("skatskyldige"), "skatskyld");});
test("skatte -> skat", function() {deepEqual( Stem("skatte"), "skat");});
test("skatteindskrivningens -> skatteindskrivning", function() {deepEqual( Stem("skatteindskrivningens"), "skatteindskrivning");});
test("skatteindtægter -> skatteindtæg", function() {deepEqual( Stem("skatteindtægter"), "skatteindtæg");});
test("skatten -> skat", function() {deepEqual( Stem("skatten"), "skat");});
test("skattene -> skat", function() {deepEqual( Stem("skattene"), "skat");});
test("skattens -> skat", function() {deepEqual( Stem("skattens"), "skat");});
test("skatteopkræver -> skatteopkræv", function() {deepEqual( Stem("skatteopkræver"), "skatteopkræv");});
test("skatter -> skat", function() {deepEqual( Stem("skatter"), "skat");});
test("ske -> ske", function() {deepEqual( Stem("ske"), "ske");});
test("skede -> sked", function() {deepEqual( Stem("skede"), "sked");});
test("skeden -> sked", function() {deepEqual( Stem("skeden"), "sked");});
test("skedn -> skedn", function() {deepEqual( Stem("skedn"), "skedn");});
test("skejer -> skej", function() {deepEqual( Stem("skejer"), "skej");});
test("skejet -> skej", function() {deepEqual( Stem("skejet"), "skej");});
test("skel -> skel", function() {deepEqual( Stem("skel"), "skel");});
test("skelne -> skeln", function() {deepEqual( Stem("skelne"), "skeln");});
test("skelner -> skeln", function() {deepEqual( Stem("skelner"), "skeln");});
test("skelnes -> skeln", function() {deepEqual( Stem("skelnes"), "skeln");});
test("sker -> sker", function() {deepEqual( Stem("sker"), "sker");});
test("sket -> sket", function() {deepEqual( Stem("sket"), "sket");});
test("skete -> sket", function() {deepEqual( Stem("skete"), "sket");});
test("skeuas -> skeuas", function() {deepEqual( Stem("skeuas"), "skeuas");});
test("skib -> skib", function() {deepEqual( Stem("skib"), "skib");});
test("skibbrud -> skibbrud", function() {deepEqual( Stem("skibbrud"), "skibbrud");});
test("skibe -> skib", function() {deepEqual( Stem("skibe"), "skib");});
test("skibene -> skib", function() {deepEqual( Stem("skibene"), "skib");});
test("skibenes -> skib", function() {deepEqual( Stem("skibenes"), "skib");});
test("skibet -> skib", function() {deepEqual( Stem("skibet"), "skib");});
test("skibets -> skib", function() {deepEqual( Stem("skibets"), "skib");});
test("skibsfolkene -> skibsfolk", function() {deepEqual( Stem("skibsfolkene"), "skibsfolk");});
test("skibsføreren -> skibsfør", function() {deepEqual( Stem("skibsføreren"), "skibsfør");});
test("skibsrum -> skibsrum", function() {deepEqual( Stem("skibsrum"), "skibsrum");});
test("skidne -> skidn", function() {deepEqual( Stem("skidne"), "skidn");});
test("skifeter -> skifet", function() {deepEqual( Stem("skifeter"), "skifet");});
test("skift -> skift", function() {deepEqual( Stem("skift"), "skift");});
test("skifte -> skift", function() {deepEqual( Stem("skifte"), "skift");});
test("skiftede -> skifted", function() {deepEqual( Stem("skiftede"), "skifted");});
test("skiftende -> skift", function() {deepEqual( Stem("skiftende"), "skift");});
test("skifter -> skift", function() {deepEqual( Stem("skifter"), "skift");});
test("skifterne -> skift", function() {deepEqual( Stem("skifterne"), "skift");});
test("skifternes -> skift", function() {deepEqual( Stem("skifternes"), "skift");});
test("skiftes -> skift", function() {deepEqual( Stem("skiftes"), "skift");});
test("skiftet -> skift", function() {deepEqual( Stem("skiftet"), "skift");});
test("skiftevis -> skiftevis", function() {deepEqual( Stem("skiftevis"), "skiftevis");});
test("skik -> skik", function() {deepEqual( Stem("skik"), "skik");});
test("skikke -> skik", function() {deepEqual( Stem("skikke"), "skik");});
test("skikkede -> skikked", function() {deepEqual( Stem("skikkede"), "skikked");});
test("skikkelse -> skik", function() {deepEqual( Stem("skikkelse"), "skik");});
test("skikkelser -> skik", function() {deepEqual( Stem("skikkelser"), "skik");});
test("skikkelses -> skik", function() {deepEqual( Stem("skikkelses"), "skik");});
test("skikkene -> skik", function() {deepEqual( Stem("skikkene"), "skik");});
test("skikker -> skik", function() {deepEqual( Stem("skikker"), "skik");});
test("skikket -> skik", function() {deepEqual( Stem("skikket"), "skik");});
test("skil -> skil", function() {deepEqual( Stem("skil"), "skil");});
test("skildring -> skildring", function() {deepEqual( Stem("skildring"), "skildring");});
test("skille -> skil", function() {deepEqual( Stem("skille"), "skil");});
test("skiller -> skil", function() {deepEqual( Stem("skiller"), "skil");});
test("skilles -> skil", function() {deepEqual( Stem("skilles"), "skil");});
test("skillevejene -> skillevej", function() {deepEqual( Stem("skillevejene"), "skillevej");});
test("skillevæg -> skillevæg", function() {deepEqual( Stem("skillevæg"), "skillevæg");});
test("skilling -> skilling", function() {deepEqual( Stem("skilling"), "skilling");});
test("skilsmisse -> skilsmis", function() {deepEqual( Stem("skilsmisse"), "skilsmis");});
test("skilsmissebrev -> skilsmissebrev", function() {deepEqual( Stem("skilsmissebrev"), "skilsmissebrev");});
test("skilsmissegave -> skilsmissegav", function() {deepEqual( Stem("skilsmissegave"), "skilsmissegav");});
test("skilt -> skilt", function() {deepEqual( Stem("skilt"), "skilt");});
test("skilte -> skilt", function() {deepEqual( Stem("skilte"), "skilt");});
test("skiltes -> skilt", function() {deepEqual( Stem("skiltes"), "skilt");});
test("skin -> skin", function() {deepEqual( Stem("skin"), "skin");});
test("skind -> skind", function() {deepEqual( Stem("skind"), "skind");});
test("skindene -> skind", function() {deepEqual( Stem("skindene"), "skind");});
test("skindet -> skind", function() {deepEqual( Stem("skindet"), "skind");});
test("skindkappe -> skindkap", function() {deepEqual( Stem("skindkappe"), "skindkap");});
test("skindkjortlet -> skindkjortl", function() {deepEqual( Stem("skindkjortlet"), "skindkjortl");});
test("skinne -> skin", function() {deepEqual( Stem("skinne"), "skin");});
test("skinneben -> skinneb", function() {deepEqual( Stem("skinneben"), "skinneb");});
test("skinnebenene -> skinneben", function() {deepEqual( Stem("skinnebenene"), "skinneben");});
test("skinnede -> skinned", function() {deepEqual( Stem("skinnede"), "skinned");});
test("skinnende -> skin", function() {deepEqual( Stem("skinnende"), "skin");});
test("skinner -> skin", function() {deepEqual( Stem("skinner"), "skin");});
test("skinnet -> skin", function() {deepEqual( Stem("skinnet"), "skin");});
test("skinsyg -> skinsyg", function() {deepEqual( Stem("skinsyg"), "skinsyg");});
test("skinsyge -> skinsyg", function() {deepEqual( Stem("skinsyge"), "skinsyg");});
test("skinsygens -> skinsyg", function() {deepEqual( Stem("skinsygens"), "skinsyg");});
test("skinsygt -> skinsyg", function() {deepEqual( Stem("skinsygt"), "skinsyg");});
test("skippere -> skip", function() {deepEqual( Stem("skippere"), "skip");});
test("skipperen -> skip", function() {deepEqual( Stem("skipperen"), "skip");});
test("skitterne -> skit", function() {deepEqual( Stem("skitterne"), "skit");});
test("skive -> skiv", function() {deepEqual( Stem("skive"), "skiv");});
test("skiver -> skiv", function() {deepEqual( Stem("skiver"), "skiv");});
test("skjaldene -> skjald", function() {deepEqual( Stem("skjaldene"), "skjald");});
test("skjalv -> skjalv", function() {deepEqual( Stem("skjalv"), "skjalv");});
test("skjold -> skjold", function() {deepEqual( Stem("skjold"), "skjold");});
test("skjolddrager -> skjolddrag", function() {deepEqual( Stem("skjolddrager"), "skjolddrag");});
test("skjolddrageren -> skjolddrag", function() {deepEqual( Stem("skjolddrageren"), "skjolddrag");});
test("skjolde -> skjold", function() {deepEqual( Stem("skjolde"), "skjold");});
test("skjoldene -> skjold", function() {deepEqual( Stem("skjoldene"), "skjold");});
test("skjoldtag -> skjoldtag", function() {deepEqual( Stem("skjoldtag"), "skjoldtag");});
test("skjoldtaget -> skjoldtag", function() {deepEqual( Stem("skjoldtaget"), "skjoldtag");});
test("skjoldvæbnet -> skjoldvæbn", function() {deepEqual( Stem("skjoldvæbnet"), "skjoldvæbn");});
test("skjul -> skjul", function() {deepEqual( Stem("skjul"), "skjul");});
test("skjule -> skjul", function() {deepEqual( Stem("skjule"), "skjul");});
test("skjuler -> skjul", function() {deepEqual( Stem("skjuler"), "skjul");});
test("skjules -> skjul", function() {deepEqual( Stem("skjules"), "skjul");});
test("skjulesteder -> skjulested", function() {deepEqual( Stem("skjulesteder"), "skjulested");});
test("skjulet -> skjul", function() {deepEqual( Stem("skjulet"), "skjul");});
test("skjult -> skjult", function() {deepEqual( Stem("skjult"), "skjult");});
test("skjulte -> skjult", function() {deepEqual( Stem("skjulte"), "skjult");});
test("skjultes -> skjult", function() {deepEqual( Stem("skjultes"), "skjult");});
test("skjulteste -> skjultest", function() {deepEqual( Stem("skjulteste"), "skjultest");});
test("sko -> sko", function() {deepEqual( Stem("sko"), "sko");});
test("skoene -> skoen", function() {deepEqual( Stem("skoene"), "skoen");});
test("skoens -> skoen", function() {deepEqual( Stem("skoens"), "skoen");});
test("skole -> skol", function() {deepEqual( Stem("skole"), "skol");});
test("skorpe -> skorp", function() {deepEqual( Stem("skorpe"), "skorp");});
test("skorpion -> skorpion", function() {deepEqual( Stem("skorpion"), "skorpion");});
test("skorpioner -> skorpion", function() {deepEqual( Stem("skorpioner"), "skorpion");});
test("skorpioners -> skorpion", function() {deepEqual( Stem("skorpioners"), "skorpion");});
test("skorte -> skort", function() {deepEqual( Stem("skorte"), "skort");});
test("skorter -> skort", function() {deepEqual( Stem("skorter"), "skort");});
test("skotvinge -> skotving", function() {deepEqual( Stem("skotvinge"), "skotving");});
test("skov -> skov", function() {deepEqual( Stem("skov"), "skov");});
test("skovbevokset -> skovbevoks", function() {deepEqual( Stem("skovbevokset"), "skovbevoks");});
test("skove -> skov", function() {deepEqual( Stem("skove"), "skov");});
test("skoven -> skov", function() {deepEqual( Stem("skoven"), "skov");});
test("skovene -> skov", function() {deepEqual( Stem("skovene"), "skov");});
test("skovens -> skov", function() {deepEqual( Stem("skovens"), "skov");});
test("skovhusets -> skovhus", function() {deepEqual( Stem("skovhusets"), "skovhus");});
test("skovlandet -> skovland", function() {deepEqual( Stem("skovlandet"), "skovland");});
test("skovle -> skovl", function() {deepEqual( Stem("skovle"), "skovl");});
test("skovlene -> skovl", function() {deepEqual( Stem("skovlene"), "skovl");});
test("skovs -> skov", function() {deepEqual( Stem("skovs"), "skov");});
test("skrabe -> skrab", function() {deepEqual( Stem("skrabe"), "skrab");});
test("skraber -> skrab", function() {deepEqual( Stem("skraber"), "skrab");});
test("skrabet -> skrab", function() {deepEqual( Stem("skrabet"), "skrab");});
test("skramme -> skram", function() {deepEqual( Stem("skramme"), "skram");});
test("skranken -> skrank", function() {deepEqual( Stem("skranken"), "skrank");});
test("skred -> skred", function() {deepEqual( Stem("skred"), "skred");});
test("skreg -> skreg", function() {deepEqual( Stem("skreg"), "skreg");});
test("skrege -> skreg", function() {deepEqual( Stem("skrege"), "skreg");});
test("skreget -> skreg", function() {deepEqual( Stem("skreget"), "skreg");});
test("skrev -> skrev", function() {deepEqual( Stem("skrev"), "skrev");});
test("skreve -> skrev", function() {deepEqual( Stem("skreve"), "skrev");});
test("skreven -> skrev", function() {deepEqual( Stem("skreven"), "skrev");});
test("skrevet -> skrev", function() {deepEqual( Stem("skrevet"), "skrev");});
test("skrevne -> skrevn", function() {deepEqual( Stem("skrevne"), "skrevn");});
test("skrid -> skrid", function() {deepEqual( Stem("skrid"), "skrid");});
test("skride -> skrid", function() {deepEqual( Stem("skride"), "skrid");});
test("skridende -> skrid", function() {deepEqual( Stem("skridende"), "skrid");});
test("skrider -> skrid", function() {deepEqual( Stem("skrider"), "skrid");});
test("skridt -> skridt", function() {deepEqual( Stem("skridt"), "skridt");});
test("skridtene -> skridt", function() {deepEqual( Stem("skridtene"), "skridt");});
test("skridtet -> skridt", function() {deepEqual( Stem("skridtet"), "skridt");});
test("skriffkyndig -> skriffkynd", function() {deepEqual( Stem("skriffkyndig"), "skriffkynd");});
test("skrift -> skrift", function() {deepEqual( Stem("skrift"), "skrift");});
test("skriften -> skrift", function() {deepEqual( Stem("skriften"), "skrift");});
test("skriftens -> skrift", function() {deepEqual( Stem("skriftens"), "skrift");});
test("skrifter -> skrift", function() {deepEqual( Stem("skrifter"), "skrift");});
test("skrifterne -> skrift", function() {deepEqual( Stem("skrifterne"), "skrift");});
test("skrifternes -> skrift", function() {deepEqual( Stem("skrifternes"), "skrift");});
test("skriftklog -> skriftklog", function() {deepEqual( Stem("skriftklog"), "skriftklog");});
test("skriftkloge -> skriftklog", function() {deepEqual( Stem("skriftkloge"), "skriftklog");});
test("skriftkloges -> skriftklog", function() {deepEqual( Stem("skriftkloges"), "skriftklog");});
test("skriftlig -> skrift", function() {deepEqual( Stem("skriftlig"), "skrift");});
test("skriftlærd -> skriftlærd", function() {deepEqual( Stem("skriftlærd"), "skriftlærd");});
test("skriftlærde -> skriftlærd", function() {deepEqual( Stem("skriftlærde"), "skriftlærd");});
test("skriftlærdes -> skriftlærd", function() {deepEqual( Stem("skriftlærdes"), "skriftlærd");});
test("skriftord -> skriftord", function() {deepEqual( Stem("skriftord"), "skriftord");});
test("skriftrulle -> skriftrul", function() {deepEqual( Stem("skriftrulle"), "skriftrul");});
test("skriftsted -> skriftsted", function() {deepEqual( Stem("skriftsted"), "skriftsted");});
test("skrig -> skrig", function() {deepEqual( Stem("skrig"), "skrig");});
test("skrige -> skrig", function() {deepEqual( Stem("skrige"), "skrig");});
test("skrigen -> skrig", function() {deepEqual( Stem("skrigen"), "skrig");});
test("skriger -> skrig", function() {deepEqual( Stem("skriger"), "skrig");});
test("skriget -> skrig", function() {deepEqual( Stem("skriget"), "skrig");});
test("skrin -> skrin", function() {deepEqual( Stem("skrin"), "skrin");});
test("skrinet -> skrin", function() {deepEqual( Stem("skrinet"), "skrin");});
test("skriv -> skriv", function() {deepEqual( Stem("skriv"), "skriv");});
test("skrive -> skriv", function() {deepEqual( Stem("skrive"), "skriv");});
test("skrivelse -> skriv", function() {deepEqual( Stem("skrivelse"), "skriv");});
test("skrivelsen -> skriv", function() {deepEqual( Stem("skrivelsen"), "skriv");});
test("skrivelser -> skriv", function() {deepEqual( Stem("skrivelser"), "skriv");});
test("skriver -> skriv", function() {deepEqual( Stem("skriver"), "skriv");});
test("skrivere -> skriv", function() {deepEqual( Stem("skrivere"), "skriv");});
test("skriveren -> skriv", function() {deepEqual( Stem("skriveren"), "skriv");});
test("skrives -> skriv", function() {deepEqual( Stem("skrives"), "skriv");});
test("skrivetøj -> skrivetøj", function() {deepEqual( Stem("skrivetøj"), "skrivetøj");});
test("skrivetøjet -> skrivetøj", function() {deepEqual( Stem("skrivetøjet"), "skrivetøj");});
test("skrud -> skrud", function() {deepEqual( Stem("skrud"), "skrud");});
test("skrumper -> skrump", function() {deepEqual( Stem("skrumper"), "skrump");});
test("skryder -> skryd", function() {deepEqual( Stem("skryder"), "skryd");});
test("skrydere -> skryd", function() {deepEqual( Stem("skrydere"), "skryd");});
test("skrål -> skrål", function() {deepEqual( Stem("skrål"), "skrål");});
test("skråning -> skråning", function() {deepEqual( Stem("skråning"), "skråning");});
test("skråningen -> skråning", function() {deepEqual( Stem("skråningen"), "skråning");});
test("skråningerne -> skråning", function() {deepEqual( Stem("skråningerne"), "skråning");});
test("skråstøtter -> skråstøt", function() {deepEqual( Stem("skråstøtter"), "skråstøt");});
test("skræk -> skræk", function() {deepEqual( Stem("skræk"), "skræk");});
test("skrækkelige -> skræk", function() {deepEqual( Stem("skrækkelige"), "skræk");});
test("skrækkeligt -> skræk", function() {deepEqual( Stem("skrækkeligt"), "skræk");});
test("skrækslagne -> skrækslagn", function() {deepEqual( Stem("skrækslagne"), "skrækslagn");});
test("skræmme -> skræm", function() {deepEqual( Stem("skræmme"), "skræm");});
test("skræmmebilleder -> skræmmebilled", function() {deepEqual( Stem("skræmmebilleder"), "skræmmebilled");});
test("skræmmed -> skræmmed", function() {deepEqual( Stem("skræmmed"), "skræmmed");});
test("skræmmede -> skræmmed", function() {deepEqual( Stem("skræmmede"), "skræmmed");});
test("skræmmer -> skræm", function() {deepEqual( Stem("skræmmer"), "skræm");});
test("skræmmes -> skræm", function() {deepEqual( Stem("skræmmes"), "skræm");});
test("skræmsel -> skræmsel", function() {deepEqual( Stem("skræmsel"), "skræmsel");});
test("skræmt -> skræmt", function() {deepEqual( Stem("skræmt"), "skræmt");});
test("skræmte -> skræmt", function() {deepEqual( Stem("skræmte"), "skræmt");});
test("skræmtes -> skræmt", function() {deepEqual( Stem("skræmtes"), "skræmt");});
test("skrænt -> skrænt", function() {deepEqual( Stem("skrænt"), "skrænt");});
test("skrænten -> skrænt", function() {deepEqual( Stem("skrænten"), "skrænt");});
test("skrænter -> skrænt", function() {deepEqual( Stem("skrænter"), "skrænt");});
test("skrøbelig -> skrøb", function() {deepEqual( Stem("skrøbelig"), "skrøb");});
test("skrøbelige -> skrøb", function() {deepEqual( Stem("skrøbelige"), "skrøb");});
test("skrøbelighed -> skrøb", function() {deepEqual( Stem("skrøbelighed"), "skrøb");});
test("skrøbeligheder -> skrøb", function() {deepEqual( Stem("skrøbeligheder"), "skrøb");});
test("skrøbeligste -> skrøb", function() {deepEqual( Stem("skrøbeligste"), "skrøb");});
test("skrøbeligt -> skrøb", function() {deepEqual( Stem("skrøbeligt"), "skrøb");});
test("skrømt -> skrømt", function() {deepEqual( Stem("skrømt"), "skrømt");});
test("skrømtet -> skrømt", function() {deepEqual( Stem("skrømtet"), "skrømt");});
test("sku -> sku", function() {deepEqual( Stem("sku"), "sku");});
test("skubbede -> skubbed", function() {deepEqual( Stem("skubbede"), "skubbed");});
test("skud -> skud", function() {deepEqual( Stem("skud"), "skud");});
test("skuddene -> skud", function() {deepEqual( Stem("skuddene"), "skud");});
test("skuddet -> skud", function() {deepEqual( Stem("skuddet"), "skud");});
test("skuds -> skud", function() {deepEqual( Stem("skuds"), "skud");});
test("skudt -> skudt", function() {deepEqual( Stem("skudt"), "skudt");});
test("skue -> skue", function() {deepEqual( Stem("skue"), "skue");});
test("skuebrød -> skuebrød", function() {deepEqual( Stem("skuebrød"), "skuebrød");});
test("skuebrødene -> skuebrød", function() {deepEqual( Stem("skuebrødene"), "skuebrød");});
test("skuebrødsbord -> skuebrødsbord", function() {deepEqual( Stem("skuebrødsbord"), "skuebrødsbord");});
test("skuebrødsbordene -> skuebrødsbord", function() {deepEqual( Stem("skuebrødsbordene"), "skuebrødsbord");});
test("skuebrødsbordet -> skuebrødsbord", function() {deepEqual( Stem("skuebrødsbordet"), "skuebrødsbord");});
test("skued -> skued", function() {deepEqual( Stem("skued"), "skued");});
test("skuede -> skued", function() {deepEqual( Stem("skuede"), "skued");});
test("skuer -> skuer", function() {deepEqual( Stem("skuer"), "skuer");});
test("skues -> skues", function() {deepEqual( Stem("skues"), "skues");});
test("skuespil -> skuespil", function() {deepEqual( Stem("skuespil"), "skuespil");});
test("skuespilere -> skuespil", function() {deepEqual( Stem("skuespilere"), "skuespil");});
test("skuet -> skuet", function() {deepEqual( Stem("skuet"), "skuet");});
test("skuffelse -> skuf", function() {deepEqual( Stem("skuffelse"), "skuf");});
test("skuffelser -> skuf", function() {deepEqual( Stem("skuffelser"), "skuf");});
test("skuffelses -> skuf", function() {deepEqual( Stem("skuffelses"), "skuf");});
test("skuffende -> skuf", function() {deepEqual( Stem("skuffende"), "skuf");});
test("skuffes -> skuf", function() {deepEqual( Stem("skuffes"), "skuf");});
test("skuffet -> skuf", function() {deepEqual( Stem("skuffet"), "skuf");});
test("skulde -> skuld", function() {deepEqual( Stem("skulde"), "skuld");});
test("skulder -> skuld", function() {deepEqual( Stem("skulder"), "skuld");});
test("skulderen -> skuld", function() {deepEqual( Stem("skulderen"), "skuld");});
test("skulderstykke -> skulderstyk", function() {deepEqual( Stem("skulderstykke"), "skulderstyk");});
test("skulderstykker -> skulderstyk", function() {deepEqual( Stem("skulderstykker"), "skulderstyk");});
test("skulderstykkerne -> skulderstyk", function() {deepEqual( Stem("skulderstykkerne"), "skulderstyk");});
test("skuldre -> skuldr", function() {deepEqual( Stem("skuldre"), "skuldr");});
test("skuldren -> skuldr", function() {deepEqual( Stem("skuldren"), "skuldr");});
test("skuldrene -> skuldr", function() {deepEqual( Stem("skuldrene"), "skuldr");});
test("skulle -> skul", function() {deepEqual( Stem("skulle"), "skul");});
test("skum -> skum", function() {deepEqual( Stem("skum"), "skum");});
test("skummende -> skum", function() {deepEqual( Stem("skummende"), "skum");});
test("skummer -> skum", function() {deepEqual( Stem("skummer"), "skum");});
test("skumring -> skumring", function() {deepEqual( Stem("skumring"), "skumring");});
test("skumringen -> skumring", function() {deepEqual( Stem("skumringen"), "skumring");});
test("skumringsbjerge -> skumringsbjerg", function() {deepEqual( Stem("skumringsbjerge"), "skumringsbjerg");});
test("skures -> skur", function() {deepEqual( Stem("skures"), "skur");});
test("skurv -> skurv", function() {deepEqual( Stem("skurv"), "skurv");});
test("skurvede -> skurved", function() {deepEqual( Stem("skurvede"), "skurved");});
test("skurven -> skurv", function() {deepEqual( Stem("skurven"), "skurv");});
test("skutlde -> skutld", function() {deepEqual( Stem("skutlde"), "skutld");});
test("skvalder -> skvald", function() {deepEqual( Stem("skvalder"), "skvald");});
test("sky -> sky", function() {deepEqual( Stem("sky"), "sky");});
test("skybrud -> skybrud", function() {deepEqual( Stem("skybrud"), "skybrud");});
test("skyd -> skyd", function() {deepEqual( Stem("skyd"), "skyd");});
test("skyde -> skyd", function() {deepEqual( Stem("skyde"), "skyd");});
test("skyder -> skyd", function() {deepEqual( Stem("skyder"), "skyd");});
test("skydes -> skyd", function() {deepEqual( Stem("skydes"), "skyd");});
test("skyen -> skyen", function() {deepEqual( Stem("skyen"), "skyen");});
test("skyens -> skyen", function() {deepEqual( Stem("skyens"), "skyen");});
test("skyer -> skyer", function() {deepEqual( Stem("skyer"), "skyer");});
test("skyerne -> skyern", function() {deepEqual( Stem("skyerne"), "skyern");});
test("skyernes -> skyern", function() {deepEqual( Stem("skyernes"), "skyern");});
test("skyers -> skyer", function() {deepEqual( Stem("skyers"), "skyer");});
test("skyet -> skyet", function() {deepEqual( Stem("skyet"), "skyet");});
test("skyfri -> skyfri", function() {deepEqual( Stem("skyfri"), "skyfri");});
test("skygge -> skyg", function() {deepEqual( Stem("skygge"), "skyg");});
test("skyggefuld -> skyggefuld", function() {deepEqual( Stem("skyggefuld"), "skyggefuld");});
test("skyggen -> skyg", function() {deepEqual( Stem("skyggen"), "skyg");});
test("skygger -> skyg", function() {deepEqual( Stem("skygger"), "skyg");});
test("skyggerigets -> skygger", function() {deepEqual( Stem("skyggerigets"), "skygger");});
test("skyggerne -> skyg", function() {deepEqual( Stem("skyggerne"), "skyg");});
test("skyggers -> skyg", function() {deepEqual( Stem("skyggers"), "skyg");});
test("skygget -> skyg", function() {deepEqual( Stem("skygget"), "skyg");});
test("skyhimlens -> skyhiml", function() {deepEqual( Stem("skyhimlens"), "skyhiml");});
test("skylag -> skylag", function() {deepEqual( Stem("skylag"), "skylag");});
test("skylaget -> skylag", function() {deepEqual( Stem("skylaget"), "skylag");});
test("skyld -> skyld", function() {deepEqual( Stem("skyld"), "skyld");});
test("skyldbrev -> skyldbrev", function() {deepEqual( Stem("skyldbrev"), "skyldbrev");});
test("skylden -> skyld", function() {deepEqual( Stem("skylden"), "skyld");});
test("skylder -> skyld", function() {deepEqual( Stem("skylder"), "skyld");});
test("skyldes -> skyld", function() {deepEqual( Stem("skyldes"), "skyld");});
test("skyldfri -> skyldfri", function() {deepEqual( Stem("skyldfri"), "skyldfri");});
test("skyldfries -> skyldfri", function() {deepEqual( Stem("skyldfries"), "skyldfri");});
test("skyldfris -> skyldfris", function() {deepEqual( Stem("skyldfris"), "skyldfris");});
test("skyldfrit -> skyldfrit", function() {deepEqual( Stem("skyldfrit"), "skyldfrit");});
test("skyldherrer -> skyldher", function() {deepEqual( Stem("skyldherrer"), "skyldher");});
test("skyldig -> skyld", function() {deepEqual( Stem("skyldig"), "skyld");});
test("skyldige -> skyld", function() {deepEqual( Stem("skyldige"), "skyld");});
test("skyldighed -> skyld", function() {deepEqual( Stem("skyldighed"), "skyld");});
test("skyldigt -> skyld", function() {deepEqual( Stem("skyldigt"), "skyld");});
test("skyldner -> skyldn", function() {deepEqual( Stem("skyldner"), "skyldn");});
test("skyldnere -> skyldn", function() {deepEqual( Stem("skyldnere"), "skyldn");});
test("skyldoferet -> skyldof", function() {deepEqual( Stem("skyldoferet"), "skyldof");});
test("skyldoffer -> skyldof", function() {deepEqual( Stem("skyldoffer"), "skyldof");});
test("skyldofferet -> skyldof", function() {deepEqual( Stem("skyldofferet"), "skyldof");});
test("skyldofferets -> skyldof", function() {deepEqual( Stem("skyldofferets"), "skyldof");});
test("skyldofferlammet -> skyldofferlam", function() {deepEqual( Stem("skyldofferlammet"), "skyldofferlam");});
test("skyldoffervæder -> skyldoffervæd", function() {deepEqual( Stem("skyldoffervæder"), "skyldoffervæd");});
test("skyldoffervæderen -> skyldoffervæd", function() {deepEqual( Stem("skyldoffervæderen"), "skyldoffervæd");});
test("skyldofre -> skyldofr", function() {deepEqual( Stem("skyldofre"), "skyldofr");});
test("skyldofrene -> skyldofr", function() {deepEqual( Stem("skyldofrene"), "skyldofr");});
test("skyldofret -> skyldofr", function() {deepEqual( Stem("skyldofret"), "skyldofr");});
test("skyldtes -> skyld", function() {deepEqual( Stem("skyldtes"), "skyld");});
test("skyldtynget -> skyldtyng", function() {deepEqual( Stem("skyldtynget"), "skyldtyng");});
test("skylle -> skyl", function() {deepEqual( Stem("skylle"), "skyl");});
test("skyllede -> skylled", function() {deepEqual( Stem("skyllede"), "skylled");});
test("skyllende -> skyl", function() {deepEqual( Stem("skyllende"), "skyl");});
test("skyller -> skyl", function() {deepEqual( Stem("skyller"), "skyl");});
test("skylles -> skyl", function() {deepEqual( Stem("skylles"), "skyl");});
test("skyllet -> skyl", function() {deepEqual( Stem("skyllet"), "skyl");});
test("skylregn -> skylregn", function() {deepEqual( Stem("skylregn"), "skylregn");});
test("skylregnen -> skylregn", function() {deepEqual( Stem("skylregnen"), "skylregn");});
test("skymulm -> skymulm", function() {deepEqual( Stem("skymulm"), "skymulm");});
test("skynd -> skynd", function() {deepEqual( Stem("skynd"), "skynd");});
test("skynde -> skynd", function() {deepEqual( Stem("skynde"), "skynd");});
test("skyndede -> skynded", function() {deepEqual( Stem("skyndede"), "skynded");});
test("skynder -> skynd", function() {deepEqual( Stem("skynder"), "skynd");});
test("skyndsomme -> skyndsom", function() {deepEqual( Stem("skyndsomme"), "skyndsom");});
test("skyndsomt -> skyndsomt", function() {deepEqual( Stem("skyndsomt"), "skyndsomt");});
test("skyndte -> skynd", function() {deepEqual( Stem("skyndte"), "skynd");});
test("skyr -> skyr", function() {deepEqual( Stem("skyr"), "skyr");});
test("skystøtte -> skystøt", function() {deepEqual( Stem("skystøtte"), "skystøt");});
test("skystøtten -> skystøt", function() {deepEqual( Stem("skystøtten"), "skystøt");});
test("skyther -> skyth", function() {deepEqual( Stem("skyther"), "skyth");});
test("skytsgud -> skytsgud", function() {deepEqual( Stem("skytsgud"), "skytsgud");});
test("skytte -> skyt", function() {deepEqual( Stem("skytte"), "skyt");});
test("skyttelen -> skyttel", function() {deepEqual( Stem("skyttelen"), "skyttel");});
test("skytterne -> skyt", function() {deepEqual( Stem("skytterne"), "skyt");});
test("skål -> skål", function() {deepEqual( Stem("skål"), "skål");});
test("skåle -> skål", function() {deepEqual( Stem("skåle"), "skål");});
test("skålene -> skål", function() {deepEqual( Stem("skålene"), "skål");});
test("skålfuld -> skålfuld", function() {deepEqual( Stem("skålfuld"), "skålfuld");});
test("skån -> skån", function() {deepEqual( Stem("skån"), "skån");});
test("skåne -> skån", function() {deepEqual( Stem("skåne"), "skån");});
test("skåned -> skåned", function() {deepEqual( Stem("skåned"), "skåned");});
test("skånede -> skåned", function() {deepEqual( Stem("skånede"), "skåned");});
test("skåner -> skån", function() {deepEqual( Stem("skåner"), "skån");});
test("skånes -> skån", function() {deepEqual( Stem("skånes"), "skån");});
test("skånet -> skån", function() {deepEqual( Stem("skånet"), "skån");});
test("skånsel -> skånsel", function() {deepEqual( Stem("skånsel"), "skånsel");});
test("skånselløs -> skånselløs", function() {deepEqual( Stem("skånselløs"), "skånselløs");});
test("skånselsløs -> skånselsløs", function() {deepEqual( Stem("skånselsløs"), "skånselsløs");});
test("skånselsløshed -> skånselsløs", function() {deepEqual( Stem("skånselsløshed"), "skånselsløs");});
test("skånselsløst -> skånselsløs", function() {deepEqual( Stem("skånselsløst"), "skånselsløs");});
test("skår -> skår", function() {deepEqual( Stem("skår"), "skår");});
test("skåret -> skår", function() {deepEqual( Stem("skåret"), "skår");});
test("skårne -> skårn", function() {deepEqual( Stem("skårne"), "skårn");});
test("skæbne -> skæbn", function() {deepEqual( Stem("skæbne"), "skæbn");});
test("skæbnedag -> skæbnedag", function() {deepEqual( Stem("skæbnedag"), "skæbnedag");});
test("skæbneguden -> skæbnegud", function() {deepEqual( Stem("skæbneguden"), "skæbnegud");});
test("skæg -> skæg", function() {deepEqual( Stem("skæg"), "skæg");});
test("skægget -> skæg", function() {deepEqual( Stem("skægget"), "skæg");});
test("skæl -> skæl", function() {deepEqual( Stem("skæl"), "skæl");});
test("skælagtigt -> skælag", function() {deepEqual( Stem("skælagtigt"), "skælag");});
test("skælbrynje -> skælbrynj", function() {deepEqual( Stem("skælbrynje"), "skælbrynj");});
test("skælde -> skæld", function() {deepEqual( Stem("skælde"), "skæld");});
test("skælden -> skæld", function() {deepEqual( Stem("skælden"), "skæld");});
test("skældsord -> skældsord", function() {deepEqual( Stem("skældsord"), "skældsord");});
test("skældte -> skæld", function() {deepEqual( Stem("skældte"), "skæld");});
test("skæler -> skæl", function() {deepEqual( Stem("skæler"), "skæl");});
test("skælv -> skælv", function() {deepEqual( Stem("skælv"), "skælv");});
test("skælve -> skælv", function() {deepEqual( Stem("skælve"), "skælv");});
test("skælvede -> skælved", function() {deepEqual( Stem("skælvede"), "skælved");});
test("skælven -> skælv", function() {deepEqual( Stem("skælven"), "skælv");});
test("skælvende -> skælv", function() {deepEqual( Stem("skælvende"), "skælv");});
test("skælver -> skælv", function() {deepEqual( Stem("skælver"), "skælv");});
test("skæmmes -> skæm", function() {deepEqual( Stem("skæmmes"), "skæm");});
test("skæmmet -> skæm", function() {deepEqual( Stem("skæmmet"), "skæm");});
test("skæmt -> skæmt", function() {deepEqual( Stem("skæmt"), "skæmt");});
test("skænd -> skænd", function() {deepEqual( Stem("skænd"), "skænd");});
test("skænde -> skænd", function() {deepEqual( Stem("skænde"), "skænd");});
test("skændede -> skænded", function() {deepEqual( Stem("skændede"), "skænded");});
test("skændegæst -> skændegæst", function() {deepEqual( Stem("skændegæst"), "skændegæst");});
test("skændegæster -> skændegæst", function() {deepEqual( Stem("skændegæster"), "skændegæst");});
test("skænder -> skænd", function() {deepEqual( Stem("skænder"), "skænd");});
test("skændes -> skænd", function() {deepEqual( Stem("skændes"), "skænd");});
test("skændet -> skænd", function() {deepEqual( Stem("skændet"), "skænd");});
test("skændige -> skænd", function() {deepEqual( Stem("skændige"), "skænd");});
test("skændigt -> skænd", function() {deepEqual( Stem("skændigt"), "skænd");});
test("skændsel -> skændsel", function() {deepEqual( Stem("skændsel"), "skændsel");});
test("skændselen -> skændsel", function() {deepEqual( Stem("skændselen"), "skændsel");});
test("skændsels -> skændsel", function() {deepEqual( Stem("skændsels"), "skændsel");});
test("skændselsbillede -> skændselsbilled", function() {deepEqual( Stem("skændselsbillede"), "skændselsbilled");});
test("skændselsdåd -> skændselsdåd", function() {deepEqual( Stem("skændselsdåd"), "skændselsdåd");});
test("skændselsdåden -> skændselsdåd", function() {deepEqual( Stem("skændselsdåden"), "skændselsdåd");});
test("skændselsgerning -> skændselsgerning", function() {deepEqual( Stem("skændselsgerning"), "skændselsgerning");});
test("skændselsmennesker -> skændselsmennesk", function() {deepEqual( Stem("skændselsmennesker"), "skændselsmennesk");});
test("skændte -> skænd", function() {deepEqual( Stem("skændte"), "skænd");});
test("skænk -> skænk", function() {deepEqual( Stem("skænk"), "skænk");});
test("skænke -> skænk", function() {deepEqual( Stem("skænke"), "skænk");});
test("skænked -> skænked", function() {deepEqual( Stem("skænked"), "skænked");});
test("skænkede -> skænked", function() {deepEqual( Stem("skænkede"), "skænked");});
test("skænkedes -> skænked", function() {deepEqual( Stem("skænkedes"), "skænked");});
test("skænker -> skænk", function() {deepEqual( Stem("skænker"), "skænk");});
test("skænkes -> skænk", function() {deepEqual( Stem("skænkes"), "skænk");});
test("skænket -> skænk", function() {deepEqual( Stem("skænket"), "skænk");});
test("skæppe -> skæp", function() {deepEqual( Stem("skæppe"), "skæp");});
test("skæppen -> skæp", function() {deepEqual( Stem("skæppen"), "skæp");});
test("skær -> skær", function() {deepEqual( Stem("skær"), "skær");});
test("skære -> skær", function() {deepEqual( Stem("skære"), "skær");});
test("skærene -> skær", function() {deepEqual( Stem("skærene"), "skær");});
test("skærer -> skær", function() {deepEqual( Stem("skærer"), "skær");});
test("skæres -> skær", function() {deepEqual( Stem("skæres"), "skær");});
test("skærm -> skærm", function() {deepEqual( Stem("skærm"), "skærm");});
test("skærmende -> skærm", function() {deepEqual( Stem("skærmende"), "skærm");});
test("skærmer -> skærm", function() {deepEqual( Stem("skærmer"), "skærm");});
test("skærmet -> skærm", function() {deepEqual( Stem("skærmet"), "skærm");});
test("skærper -> skærp", function() {deepEqual( Stem("skærper"), "skærp");});
test("skærpes -> skærp", function() {deepEqual( Stem("skærpes"), "skærp");});
test("skærv -> skærv", function() {deepEqual( Stem("skærv"), "skærv");});
test("skærve -> skærv", function() {deepEqual( Stem("skærve"), "skærv");});
test("skæven -> skæv", function() {deepEqual( Stem("skæven"), "skæv");});
test("skæver -> skæv", function() {deepEqual( Stem("skæver"), "skæv");});
test("skævt -> skævt", function() {deepEqual( Stem("skævt"), "skævt");});
test("skød -> skød", function() {deepEqual( Stem("skød"), "skød");});
test("skøde -> skød", function() {deepEqual( Stem("skøde"), "skød");});
test("skøder -> skød", function() {deepEqual( Stem("skøder"), "skød");});
test("skødesløs -> skødesløs", function() {deepEqual( Stem("skødesløs"), "skødesløs");});
test("skødet -> skød", function() {deepEqual( Stem("skødet"), "skød");});
test("skøge -> skøg", function() {deepEqual( Stem("skøge"), "skøg");});
test("skøgedragt -> skøgedrag", function() {deepEqual( Stem("skøgedragt"), "skøgedrag");});
test("skøgefortjeneste -> skøgefortjenest", function() {deepEqual( Stem("skøgefortjeneste"), "skøgefortjenest");});
test("skøgeleje -> skøgelej", function() {deepEqual( Stem("skøgeleje"), "skøgelej");});
test("skøgelemmer -> skøgelem", function() {deepEqual( Stem("skøgelemmer"), "skøgelem");});
test("skøgeløn -> skøgeløn", function() {deepEqual( Stem("skøgeløn"), "skøgeløn");});
test("skøgen -> skøg", function() {deepEqual( Stem("skøgen"), "skøg");});
test("skøgens -> skøg", function() {deepEqual( Stem("skøgens"), "skøg");});
test("skøger -> skøg", function() {deepEqual( Stem("skøger"), "skøg");});
test("skøgerne -> skøg", function() {deepEqual( Stem("skøgerne"), "skøg");});
test("skøges -> skøg", function() {deepEqual( Stem("skøges"), "skøg");});
test("skøgevis -> skøgevis", function() {deepEqual( Stem("skøgevis"), "skøgevis");});
test("skøn -> skøn", function() {deepEqual( Stem("skøn"), "skøn");});
test("skønhed -> skøn", function() {deepEqual( Stem("skønhed"), "skøn");});
test("skønhedens -> skøn", function() {deepEqual( Stem("skønhedens"), "skøn");});
test("skønheds -> skøn", function() {deepEqual( Stem("skønheds"), "skøn");});
test("skønhedsmidler -> skønhedsmidl", function() {deepEqual( Stem("skønhedsmidler"), "skønhedsmidl");});
test("skønhedsmærke -> skønhedsmærk", function() {deepEqual( Stem("skønhedsmærke"), "skønhedsmærk");});
test("skønhedsplejen -> skønhedsplej", function() {deepEqual( Stem("skønhedsplejen"), "skønhedsplej");});
test("skønne -> skøn", function() {deepEqual( Stem("skønne"), "skøn");});
test("skønned -> skønned", function() {deepEqual( Stem("skønned"), "skønned");});
test("skønnede -> skønned", function() {deepEqual( Stem("skønnede"), "skønned");});
test("skønner -> skøn", function() {deepEqual( Stem("skønner"), "skøn");});
test("skønnere -> skøn", function() {deepEqual( Stem("skønnere"), "skøn");});
test("skønneste -> skønnest", function() {deepEqual( Stem("skønneste"), "skønnest");});
test("skønnet -> skøn", function() {deepEqual( Stem("skønnet"), "skøn");});
test("skønsomhed -> skønsom", function() {deepEqual( Stem("skønsomhed"), "skønsom");});
test("skønt -> skønt", function() {deepEqual( Stem("skønt"), "skønt");});
test("skørne -> skørn", function() {deepEqual( Stem("skørne"), "skørn");});
test("skørnet -> skørn", function() {deepEqual( Stem("skørnet"), "skørn");});
test("sladderagtige -> sladderag", function() {deepEqual( Stem("sladderagtige"), "sladderag");});
test("slag -> slag", function() {deepEqual( Stem("slag"), "slag");});
test("slagelen -> slagel", function() {deepEqual( Stem("slagelen"), "slagel");});
test("slagen -> slag", function() {deepEqual( Stem("slagen"), "slag");});
test("slaget -> slag", function() {deepEqual( Stem("slaget"), "slag");});
test("slagets -> slag", function() {deepEqual( Stem("slagets"), "slag");});
test("slagger -> slag", function() {deepEqual( Stem("slagger"), "slag");});
test("slagne -> slagn", function() {deepEqual( Stem("slagne"), "slagn");});
test("slagnes -> slagn", function() {deepEqual( Stem("slagnes"), "slagn");});
test("slagorden -> slagord", function() {deepEqual( Stem("slagorden"), "slagord");});
test("slagrækken -> slagræk", function() {deepEqual( Stem("slagrækken"), "slagræk");});
test("slagrækker -> slagræk", function() {deepEqual( Stem("slagrækker"), "slagræk");});
test("slagrækkerne -> slagræk", function() {deepEqual( Stem("slagrækkerne"), "slagræk");});
test("slagrækkers -> slagræk", function() {deepEqual( Stem("slagrækkers"), "slagræk");});
test("slags -> slag", function() {deepEqual( Stem("slags"), "slag");});
test("slagsmål -> slagsmål", function() {deepEqual( Stem("slagsmål"), "slagsmål");});
test("slagt -> slagt", function() {deepEqual( Stem("slagt"), "slagt");});
test("slagte -> slagt", function() {deepEqual( Stem("slagte"), "slagt");});
test("slagted -> slagted", function() {deepEqual( Stem("slagted"), "slagted");});
test("slagtedag -> slagtedag", function() {deepEqual( Stem("slagtedag"), "slagtedag");});
test("slagtede -> slagted", function() {deepEqual( Stem("slagtede"), "slagted");});
test("slagtedes -> slagted", function() {deepEqual( Stem("slagtedes"), "slagted");});
test("slagtefår -> slagtefår", function() {deepEqual( Stem("slagtefår"), "slagtefår");});
test("slagtefårene -> slagtefår", function() {deepEqual( Stem("slagtefårene"), "slagtefår");});
test("slagtekvæg -> slagtekvæg", function() {deepEqual( Stem("slagtekvæg"), "slagtekvæg");});
test("slagter -> slagt", function() {deepEqual( Stem("slagter"), "slagt");});
test("slagterbod -> slagterbod", function() {deepEqual( Stem("slagterbod"), "slagterbod");});
test("slagtes -> slagt", function() {deepEqual( Stem("slagtes"), "slagt");});
test("slagtet -> slagt", function() {deepEqual( Stem("slagtet"), "slagt");});
test("slagtning -> slagtning", function() {deepEqual( Stem("slagtning"), "slagtning");});
test("slagtoffer -> slagtof", function() {deepEqual( Stem("slagtoffer"), "slagtof");});
test("slagtofferet -> slagtof", function() {deepEqual( Stem("slagtofferet"), "slagtof");});
test("slagtofre -> slagtofr", function() {deepEqual( Stem("slagtofre"), "slagtofr");});
test("slagtofrene -> slagtofr", function() {deepEqual( Stem("slagtofrene"), "slagtofr");});
test("slagtofres -> slagtofr", function() {deepEqual( Stem("slagtofres"), "slagtofr");});
test("slamme -> slam", function() {deepEqual( Stem("slamme"), "slam");});
test("slange -> slang", function() {deepEqual( Stem("slange"), "slang");});
test("slangebesværger -> slangebesværg", function() {deepEqual( Stem("slangebesværger"), "slangebesværg");});
test("slangebidt -> slangebid", function() {deepEqual( Stem("slangebidt"), "slangebid");});
test("slangegift -> slangegift", function() {deepEqual( Stem("slangegift"), "slangegift");});
test("slangen -> slang", function() {deepEqual( Stem("slangen"), "slang");});
test("slangens -> slang", function() {deepEqual( Stem("slangens"), "slang");});
test("slanger -> slang", function() {deepEqual( Stem("slanger"), "slang");});
test("slangerne -> slang", function() {deepEqual( Stem("slangerne"), "slang");});
test("slangernes -> slang", function() {deepEqual( Stem("slangernes"), "slang");});
test("slangerod -> slangerod", function() {deepEqual( Stem("slangerod"), "slangerod");});
test("slangers -> slang", function() {deepEqual( Stem("slangers"), "slang");});
test("slanges -> slang", function() {deepEqual( Stem("slanges"), "slang");});
test("slangestenen -> slangesten", function() {deepEqual( Stem("slangestenen"), "slangesten");});
test("slangeæg -> slangeæg", function() {deepEqual( Stem("slangeæg"), "slangeæg");});
test("slap -> slap", function() {deepEqual( Stem("slap"), "slap");});
test("slappe -> slap", function() {deepEqual( Stem("slappe"), "slap");});
test("slappede -> slapped", function() {deepEqual( Stem("slappede"), "slapped");});
test("slappedes -> slapped", function() {deepEqual( Stem("slappedes"), "slapped");});
test("slappes -> slap", function() {deepEqual( Stem("slappes"), "slap");});
test("slappet -> slap", function() {deepEqual( Stem("slappet"), "slap");});
test("slapt -> slapt", function() {deepEqual( Stem("slapt"), "slapt");});
test("slaver -> slav", function() {deepEqual( Stem("slaver"), "slav");});
test("sleben -> sleb", function() {deepEqual( Stem("sleben"), "sleb");});
test("slebet -> sleb", function() {deepEqual( Stem("slebet"), "sleb");});
test("sled -> sled", function() {deepEqual( Stem("sled"), "sled");});
test("sledes -> sled", function() {deepEqual( Stem("sledes"), "sled");});
test("slem -> slem", function() {deepEqual( Stem("slem"), "slem");});
test("slemme -> slem", function() {deepEqual( Stem("slemme"), "slem");});
test("slemt -> slemt", function() {deepEqual( Stem("slemt"), "slemt");});
test("sler -> sler", function() {deepEqual( Stem("sler"), "sler");});
test("slerne -> slern", function() {deepEqual( Stem("slerne"), "slern");});
test("slers -> sler", function() {deepEqual( Stem("slers"), "sler");});
test("slesk -> slesk", function() {deepEqual( Stem("slesk"), "slesk");});
test("sleske -> slesk", function() {deepEqual( Stem("sleske"), "slesk");});
test("slesker -> slesk", function() {deepEqual( Stem("slesker"), "slesk");});
test("slet -> slet", function() {deepEqual( Stem("slet"), "slet");});
test("slethed -> slet", function() {deepEqual( Stem("slethed"), "slet");});
test("sletheds -> slet", function() {deepEqual( Stem("sletheds"), "slet");});
test("slette -> slet", function() {deepEqual( Stem("slette"), "slet");});
test("sletted -> sletted", function() {deepEqual( Stem("sletted"), "sletted");});
test("slettelandet -> sletteland", function() {deepEqual( Stem("slettelandet"), "sletteland");});
test("sletten -> slet", function() {deepEqual( Stem("sletten"), "slet");});
test("slettens -> slet", function() {deepEqual( Stem("slettens"), "slet");});
test("sletter -> slet", function() {deepEqual( Stem("sletter"), "slet");});
test("slettes -> slet", function() {deepEqual( Stem("slettes"), "slet");});
test("slettet -> slet", function() {deepEqual( Stem("slettet"), "slet");});
test("slibrige -> slibr", function() {deepEqual( Stem("slibrige"), "slibr");});
test("slid -> slid", function() {deepEqual( Stem("slid"), "slid");});
test("sliddets -> slid", function() {deepEqual( Stem("sliddets"), "slid");});
test("slide -> slid", function() {deepEqual( Stem("slide"), "slid");});
test("slider -> slid", function() {deepEqual( Stem("slider"), "slid");});
test("slides -> slid", function() {deepEqual( Stem("slides"), "slid");});
test("slidt -> slidt", function() {deepEqual( Stem("slidt"), "slidt");});
test("slidte -> slidt", function() {deepEqual( Stem("slidte"), "slidt");});
test("slig -> slig", function() {deepEqual( Stem("slig"), "slig");});
test("slige -> slig", function() {deepEqual( Stem("slige"), "slig");});
test("sligt -> sligt", function() {deepEqual( Stem("sligt"), "sligt");});
test("slikke -> slik", function() {deepEqual( Stem("slikke"), "slik");});
test("slikkede -> slikked", function() {deepEqual( Stem("slikkede"), "slikked");});
test("slikker -> slik", function() {deepEqual( Stem("slikker"), "slik");});
test("slim -> slim", function() {deepEqual( Stem("slim"), "slim");});
test("slip -> slip", function() {deepEqual( Stem("slip"), "slip");});
test("slippe -> slip", function() {deepEqual( Stem("slippe"), "slip");});
test("slipper -> slip", function() {deepEqual( Stem("slipper"), "slip");});
test("slippes -> slip", function() {deepEqual( Stem("slippes"), "slip");});
test("slog -> slog", function() {deepEqual( Stem("slog"), "slog");});
test("sloge -> slog", function() {deepEqual( Stem("sloge"), "slog");});
test("sloges -> slog", function() {deepEqual( Stem("sloges"), "slog");});
test("slot -> slot", function() {deepEqual( Stem("slot"), "slot");});
test("slotshøvedsmand -> slotshøvedsmand", function() {deepEqual( Stem("slotshøvedsmand"), "slotshøvedsmand");});
test("slotshøvedsmanden -> slotshøvedsmand", function() {deepEqual( Stem("slotshøvedsmanden"), "slotshøvedsmand");});
test("slotte -> slot", function() {deepEqual( Stem("slotte"), "slot");});
test("slug -> slug", function() {deepEqual( Stem("slug"), "slug");});
test("sluge -> slug", function() {deepEqual( Stem("sluge"), "slug");});
test("slugejonas -> slugejona", function() {deepEqual( Stem("slugejonas"), "slugejona");});
test("sluger -> slug", function() {deepEqual( Stem("sluger"), "slug");});
test("slugt -> slugt", function() {deepEqual( Stem("slugt"), "slugt");});
test("slugte -> slugt", function() {deepEqual( Stem("slugte"), "slugt");});
test("slukke -> sluk", function() {deepEqual( Stem("slukke"), "sluk");});
test("slukked -> slukked", function() {deepEqual( Stem("slukked"), "slukked");});
test("slukkede -> slukked", function() {deepEqual( Stem("slukkede"), "slukked");});
test("slukker -> sluk", function() {deepEqual( Stem("slukker"), "sluk");});
test("slukkes -> sluk", function() {deepEqual( Stem("slukkes"), "sluk");});
test("slukket -> sluk", function() {deepEqual( Stem("slukket"), "sluk");});
test("slukt -> slukt", function() {deepEqual( Stem("slukt"), "slukt");});
test("sluktes -> slukt", function() {deepEqual( Stem("sluktes"), "slukt");});
test("slumrede -> slumred", function() {deepEqual( Stem("slumrede"), "slumred");});
test("slumrende -> slumr", function() {deepEqual( Stem("slumrende"), "slumr");});
test("slumrer -> slumr", function() {deepEqual( Stem("slumrer"), "slumr");});
test("slumret -> slumr", function() {deepEqual( Stem("slumret"), "slumr");});
test("sluppet -> slup", function() {deepEqual( Stem("sluppet"), "slup");});
test("sluser -> slus", function() {deepEqual( Stem("sluser"), "slus");});
test("sluserne -> slus", function() {deepEqual( Stem("sluserne"), "slus");});
test("slut -> slut", function() {deepEqual( Stem("slut"), "slut");});
test("slutfede -> slutfed", function() {deepEqual( Stem("slutfede"), "slutfed");});
test("slutning -> slutning", function() {deepEqual( Stem("slutning"), "slutning");});
test("slutningen -> slutning", function() {deepEqual( Stem("slutningen"), "slutning");});
test("slutte -> slut", function() {deepEqual( Stem("slutte"), "slut");});
test("slutted -> slutted", function() {deepEqual( Stem("slutted"), "slutted");});
test("sluttede -> slutted", function() {deepEqual( Stem("sluttede"), "slutted");});
test("slutter -> slut", function() {deepEqual( Stem("slutter"), "slut");});
test("slutteren -> slut", function() {deepEqual( Stem("slutteren"), "slut");});
test("sluttet -> slut", function() {deepEqual( Stem("sluttet"), "slut");});
test("slyng -> slyng", function() {deepEqual( Stem("slyng"), "slyng");});
test("slynge -> slyng", function() {deepEqual( Stem("slynge"), "slyng");});
test("slyngede -> slynged", function() {deepEqual( Stem("slyngede"), "slynged");});
test("slyngekasterne -> slyngekast", function() {deepEqual( Stem("slyngekasterne"), "slyngekast");});
test("slyngen -> slyng", function() {deepEqual( Stem("slyngen"), "slyng");});
test("slyngens -> slyng", function() {deepEqual( Stem("slyngens"), "slyng");});
test("slynger -> slyng", function() {deepEqual( Stem("slynger"), "slyng");});
test("slynges -> slyng", function() {deepEqual( Stem("slynges"), "slyng");});
test("slyngeskålen -> slyngeskål", function() {deepEqual( Stem("slyngeskålen"), "slyngeskål");});
test("slyngesten -> slyngest", function() {deepEqual( Stem("slyngesten"), "slyngest");});
test("slyngestenstaske -> slyngestenstask", function() {deepEqual( Stem("slyngestenstaske"), "slyngestenstask");});
test("slyngplante -> slyngplant", function() {deepEqual( Stem("slyngplante"), "slyngplant");});
test("slå -> slå", function() {deepEqual( Stem("slå"), "slå");});
test("slåede -> slåed", function() {deepEqual( Stem("slåede"), "slåed");});
test("slåer -> slåer", function() {deepEqual( Stem("slåer"), "slåer");});
test("slåerne -> slåern", function() {deepEqual( Stem("slåerne"), "slåern");});
test("slået -> slået", function() {deepEqual( Stem("slået"), "slået");});
test("slår -> slår", function() {deepEqual( Stem("slår"), "slår");});
test("slås -> slås", function() {deepEqual( Stem("slås"), "slås");});
test("slæb -> slæb", function() {deepEqual( Stem("slæb"), "slæb");});
test("slæbe -> slæb", function() {deepEqual( Stem("slæbe"), "slæb");});
test("slæber -> slæb", function() {deepEqual( Stem("slæber"), "slæb");});
test("slæbes -> slæb", function() {deepEqual( Stem("slæbes"), "slæb");});
test("slæbet -> slæb", function() {deepEqual( Stem("slæbet"), "slæb");});
test("slæbte -> slæbt", function() {deepEqual( Stem("slæbte"), "slæbt");});
test("slægt -> slægt", function() {deepEqual( Stem("slægt"), "slægt");});
test("slægtebog -> slægtebog", function() {deepEqual( Stem("slægtebog"), "slægtebog");});
test("slægtebogen -> slægtebog", function() {deepEqual( Stem("slægtebogen"), "slægtebog");});
test("slægtebøger -> slægtebøg", function() {deepEqual( Stem("slægtebøger"), "slægtebøg");});
test("slægtede -> slægted", function() {deepEqual( Stem("slægtede"), "slægted");});
test("slægten -> slægt", function() {deepEqual( Stem("slægten"), "slægt");});
test("slægter -> slægt", function() {deepEqual( Stem("slægter"), "slægt");});
test("slægterne -> slægt", function() {deepEqual( Stem("slægterne"), "slægt");});
test("slægters -> slægt", function() {deepEqual( Stem("slægters"), "slægt");});
test("slægtervar -> slægtervar", function() {deepEqual( Stem("slægtervar"), "slægtervar");});
test("slægtled -> slægtled", function() {deepEqual( Stem("slægtled"), "slægtled");});
test("slægtledene -> slægtled", function() {deepEqual( Stem("slægtledene"), "slægtled");});
test("slægtning -> slægtning", function() {deepEqual( Stem("slægtning"), "slægtning");});
test("slægtninge -> slægtning", function() {deepEqual( Stem("slægtninge"), "slægtning");});
test("slægtnings -> slægtning", function() {deepEqual( Stem("slægtnings"), "slægtning");});
test("slægtregister -> slægtregist", function() {deepEqual( Stem("slægtregister"), "slægtregist");});
test("slægtregistre -> slægtregistr", function() {deepEqual( Stem("slægtregistre"), "slægtregistr");});
test("slægts -> slægt", function() {deepEqual( Stem("slægts"), "slægt");});
test("slægtsbog -> slægtsbog", function() {deepEqual( Stem("slægtsbog"), "slægtsbog");});
test("slægtsfortegnelse -> slægtsfortegn", function() {deepEqual( Stem("slægtsfortegnelse"), "slægtsfortegn");});
test("slægtsfortegnelser -> slægtsfortegn", function() {deepEqual( Stem("slægtsfortegnelser"), "slægtsfortegn");});
test("slæng -> slæng", function() {deepEqual( Stem("slæng"), "slæng");});
test("slænge -> slæng", function() {deepEqual( Stem("slænge"), "slæng");});
test("slænger -> slæng", function() {deepEqual( Stem("slænger"), "slæng");});
test("slænges -> slæng", function() {deepEqual( Stem("slænges"), "slæng");});
test("slænget -> slæng", function() {deepEqual( Stem("slænget"), "slæng");});
test("slængt -> slæng", function() {deepEqual( Stem("slængt"), "slæng");});
test("slængte -> slæng", function() {deepEqual( Stem("slængte"), "slæng");});
test("slærke -> slærk", function() {deepEqual( Stem("slærke"), "slærk");});
test("slør -> slør", function() {deepEqual( Stem("slør"), "slør");});
test("sløret -> slør", function() {deepEqual( Stem("sløret"), "slør");});
test("sløv -> sløv", function() {deepEqual( Stem("sløv"), "sløv");});
test("sløve -> sløv", function() {deepEqual( Stem("sløve"), "sløv");});
test("sløves -> sløv", function() {deepEqual( Stem("sløves"), "sløv");});
test("sløvet -> sløv", function() {deepEqual( Stem("sløvet"), "sløv");});
test("sløvheds -> sløv", function() {deepEqual( Stem("sløvheds"), "sløv");});
test("sløvt -> sløvt", function() {deepEqual( Stem("sløvt"), "sløvt");});
test("smag -> smag", function() {deepEqual( Stem("smag"), "smag");});
test("smage -> smag", function() {deepEqual( Stem("smage"), "smag");});
test("smager -> smag", function() {deepEqual( Stem("smager"), "smag");});
test("smagt -> smagt", function() {deepEqual( Stem("smagt"), "smagt");});
test("smagte -> smagt", function() {deepEqual( Stem("smagte"), "smagt");});
test("smalt -> smalt", function() {deepEqual( Stem("smalt"), "smalt");});
test("smaragd -> smarag", function() {deepEqual( Stem("smaragd"), "smarag");});
test("smaragder -> smarag", function() {deepEqual( Stem("smaragder"), "smarag");});
test("smed -> smed", function() {deepEqual( Stem("smed"), "smed");});
test("smeddet -> smed", function() {deepEqual( Stem("smeddet"), "smed");});
test("smede -> smed", function() {deepEqual( Stem("smede"), "smed");});
test("smeden -> smed", function() {deepEqual( Stem("smeden"), "smed");});
test("smedene -> smed", function() {deepEqual( Stem("smedene"), "smed");});
test("smeder -> smed", function() {deepEqual( Stem("smeder"), "smed");});
test("smedes -> smed", function() {deepEqual( Stem("smedes"), "smed");});
test("smelte -> smelt", function() {deepEqual( Stem("smelte"), "smelt");});
test("smelted -> smelted", function() {deepEqual( Stem("smelted"), "smelted");});
test("smeltede -> smelted", function() {deepEqual( Stem("smeltede"), "smelted");});
test("smelten -> smelt", function() {deepEqual( Stem("smelten"), "smelt");});
test("smelteovn -> smelteovn", function() {deepEqual( Stem("smelteovn"), "smelteovn");});
test("smelteovnen -> smelteovn", function() {deepEqual( Stem("smelteovnen"), "smelteovn");});
test("smelter -> smelt", function() {deepEqual( Stem("smelter"), "smelt");});
test("smeltes -> smelt", function() {deepEqual( Stem("smeltes"), "smelt");});
test("smerte -> smert", function() {deepEqual( Stem("smerte"), "smert");});
test("smertede -> smerted", function() {deepEqual( Stem("smertede"), "smerted");});
test("smertefuld -> smertefuld", function() {deepEqual( Stem("smertefuld"), "smertefuld");});
test("smerten -> smert", function() {deepEqual( Stem("smerten"), "smert");});
test("smertens -> smert", function() {deepEqual( Stem("smertens"), "smert");});
test("smertensleje -> smertenslej", function() {deepEqual( Stem("smertensleje"), "smertenslej");});
test("smerter -> smert", function() {deepEqual( Stem("smerter"), "smert");});
test("smerternes -> smert", function() {deepEqual( Stem("smerternes"), "smert");});
test("smertes -> smert", function() {deepEqual( Stem("smertes"), "smert");});
test("smiger -> smig", function() {deepEqual( Stem("smiger"), "smig");});
test("smigre -> smigr", function() {deepEqual( Stem("smigre"), "smigr");});
test("smigrende -> smigr", function() {deepEqual( Stem("smigrende"), "smigr");});
test("smigrer -> smigr", function() {deepEqual( Stem("smigrer"), "smigr");});
test("smil -> smil", function() {deepEqual( Stem("smil"), "smil");});
test("smile -> smil", function() {deepEqual( Stem("smile"), "smil");});
test("smilte -> smilt", function() {deepEqual( Stem("smilte"), "smilt");});
test("sminke -> smink", function() {deepEqual( Stem("sminke"), "smink");});
test("sminkede -> sminked", function() {deepEqual( Stem("sminkede"), "sminked");});
test("smittes -> smit", function() {deepEqual( Stem("smittes"), "smit");});
test("smittet -> smit", function() {deepEqual( Stem("smittet"), "smit");});
test("smuds -> smud", function() {deepEqual( Stem("smuds"), "smud");});
test("smudsig -> smuds", function() {deepEqual( Stem("smudsig"), "smuds");});
test("smugveje -> smugvej", function() {deepEqual( Stem("smugveje"), "smugvej");});
test("smuk -> smuk", function() {deepEqual( Stem("smuk"), "smuk");});
test("smukke -> smuk", function() {deepEqual( Stem("smukke"), "smuk");});
test("smukkere -> smuk", function() {deepEqual( Stem("smukkere"), "smuk");});
test("smukt -> smukt", function() {deepEqual( Stem("smukt"), "smukt");});
test("smuldrende -> smuldr", function() {deepEqual( Stem("smuldrende"), "smuldr");});
test("smuldrer -> smuldr", function() {deepEqual( Stem("smuldrer"), "smuldr");});
test("smule -> smul", function() {deepEqual( Stem("smule"), "smul");});
test("smuler -> smul", function() {deepEqual( Stem("smuler"), "smul");});
test("smurte -> smurt", function() {deepEqual( Stem("smurte"), "smurt");});
test("smuthuller -> smuthul", function() {deepEqual( Stem("smuthuller"), "smuthul");});
test("smyk -> smyk", function() {deepEqual( Stem("smyk"), "smyk");});
test("smykke -> smyk", function() {deepEqual( Stem("smykke"), "smyk");});
test("smykkede -> smykked", function() {deepEqual( Stem("smykkede"), "smykked");});
test("smykkedes -> smykked", function() {deepEqual( Stem("smykkedes"), "smykked");});
test("smykker -> smyk", function() {deepEqual( Stem("smykker"), "smyk");});
test("smykkes -> smyk", function() {deepEqual( Stem("smykkes"), "smyk");});
test("smykket -> smyk", function() {deepEqual( Stem("smykket"), "smyk");});
test("smyrna -> smyrna", function() {deepEqual( Stem("smyrna"), "smyrna");});
test("små -> små", function() {deepEqual( Stem("små"), "små");});
test("småbyer -> småby", function() {deepEqual( Stem("småbyer"), "småby");});
test("småbyerne -> småby", function() {deepEqual( Stem("småbyerne"), "småby");});
test("småbørn -> småbørn", function() {deepEqual( Stem("småbørn"), "småbørn");});
test("smådrenge -> smådreng", function() {deepEqual( Stem("smådrenge"), "smådreng");});
test("småfisk -> småfisk", function() {deepEqual( Stem("småfisk"), "småfisk");});
test("småfiskene -> småfisk", function() {deepEqual( Stem("småfiskene"), "småfisk");});
test("småfolk -> småfolk", function() {deepEqual( Stem("småfolk"), "småfolk");});
test("småfrugter -> småfrug", function() {deepEqual( Stem("småfrugter"), "småfrug");});
test("småfugl -> småfugl", function() {deepEqual( Stem("småfugl"), "småfugl");});
test("småkar -> småkar", function() {deepEqual( Stem("småkar"), "småkar");});
test("småkvæg -> småkvæg", function() {deepEqual( Stem("småkvæg"), "småkvæg");});
test("småkvæget -> småkvæg", function() {deepEqual( Stem("småkvæget"), "småkvæg");});
test("småkvægets -> småkvæg", function() {deepEqual( Stem("småkvægets"), "småkvæg");});
test("småkvægs -> småkvæg", function() {deepEqual( Stem("småkvægs"), "småkvæg");});
test("småmand -> småmand", function() {deepEqual( Stem("småmand"), "småmand");});
test("småmands -> småmand", function() {deepEqual( Stem("småmands"), "småmand");});
test("småpenge -> småpeng", function() {deepEqual( Stem("småpenge"), "småpeng");});
test("småskjolde -> småskjold", function() {deepEqual( Stem("småskjolde"), "småskjold");});
test("småt -> småt", function() {deepEqual( Stem("småt"), "småt");});
test("smæde -> smæd", function() {deepEqual( Stem("smæde"), "smæd");});
test("smæded -> smæded", function() {deepEqual( Stem("smæded"), "smæded");});
test("smæden -> smæd", function() {deepEqual( Stem("smæden"), "smæd");});
test("smædeord -> smædeord", function() {deepEqual( Stem("smædeord"), "smædeord");});
test("smæder -> smæd", function() {deepEqual( Stem("smæder"), "smæd");});
test("smædes -> smæd", function() {deepEqual( Stem("smædes"), "smæd");});
test("smædet -> smæd", function() {deepEqual( Stem("smædet"), "smæd");});
test("smædevise -> smædevis", function() {deepEqual( Stem("smædevise"), "smædevis");});
test("smægted -> smægted", function() {deepEqual( Stem("smægted"), "smægted");});
test("smæld -> smæld", function() {deepEqual( Stem("smæld"), "smæld");});
test("smør -> smør", function() {deepEqual( Stem("smør"), "smør");});
test("smører -> smør", function() {deepEqual( Stem("smører"), "smør");});
test("sn -> sn", function() {deepEqual( Stem("sn"), "sn");});
test("snak -> snak", function() {deepEqual( Stem("snak"), "snak");});
test("snapper -> snap", function() {deepEqual( Stem("snapper"), "snap");});
test("snappet -> snap", function() {deepEqual( Stem("snappet"), "snap");});
test("snar -> snar", function() {deepEqual( Stem("snar"), "snar");});
test("snare -> snar", function() {deepEqual( Stem("snare"), "snar");});
test("snaren -> snar", function() {deepEqual( Stem("snaren"), "snar");});
test("snarer -> snar", function() {deepEqual( Stem("snarer"), "snar");});
test("snarere -> snar", function() {deepEqual( Stem("snarere"), "snar");});
test("snarest -> snarest", function() {deepEqual( Stem("snarest"), "snarest");});
test("snaret -> snar", function() {deepEqual( Stem("snaret"), "snar");});
test("snarlig -> snar", function() {deepEqual( Stem("snarlig"), "snar");});
test("snart -> snart", function() {deepEqual( Stem("snart"), "snart");});
test("snavs -> snav", function() {deepEqual( Stem("snavs"), "snav");});
test("snavse -> snavs", function() {deepEqual( Stem("snavse"), "snavs");});
test("snavsede -> snavsed", function() {deepEqual( Stem("snavsede"), "snavsed");});
test("snavset -> snavs", function() {deepEqual( Stem("snavset"), "snavs");});
test("sne -> sne", function() {deepEqual( Stem("sne"), "sne");});
test("snedige -> sned", function() {deepEqual( Stem("snedige"), "sned");});
test("sneen -> sneen", function() {deepEqual( Stem("sneen"), "sneen");});
test("sneg -> sneg", function() {deepEqual( Stem("sneg"), "sneg");});
test("sneglen -> snegl", function() {deepEqual( Stem("sneglen"), "snegl");});
test("snes -> snes", function() {deepEqual( Stem("snes"), "snes");});
test("snevand -> snevand", function() {deepEqual( Stem("snevand"), "snevand");});
test("snige -> snig", function() {deepEqual( Stem("snige"), "snig");});
test("sniger -> snig", function() {deepEqual( Stem("sniger"), "snig");});
test("snigmyrder -> snigmyrd", function() {deepEqual( Stem("snigmyrder"), "snigmyrd");});
test("snilde -> snild", function() {deepEqual( Stem("snilde"), "snild");});
test("snildt -> snild", function() {deepEqual( Stem("snildt"), "snild");});
test("snit -> snit", function() {deepEqual( Stem("snit"), "snit");});
test("snoede -> snoed", function() {deepEqual( Stem("snoede"), "snoed");});
test("snoet -> snoet", function() {deepEqual( Stem("snoet"), "snoet");});
test("snor -> snor", function() {deepEqual( Stem("snor"), "snor");});
test("snore -> snor", function() {deepEqual( Stem("snore"), "snor");});
test("snoren -> snor", function() {deepEqual( Stem("snoren"), "snor");});
test("snorene -> snor", function() {deepEqual( Stem("snorene"), "snor");});
test("snorenes -> snor", function() {deepEqual( Stem("snorenes"), "snor");});
test("snorlængder -> snorlæng", function() {deepEqual( Stem("snorlængder"), "snorlæng");});
test("snu -> snu", function() {deepEqual( Stem("snu"), "snu");});
test("snuble -> snubl", function() {deepEqual( Stem("snuble"), "snubl");});
test("snubled -> snubled", function() {deepEqual( Stem("snubled"), "snubled");});
test("snublede -> snubled", function() {deepEqual( Stem("snublede"), "snubled");});
test("snublen -> snubl", function() {deepEqual( Stem("snublen"), "snubl");});
test("snubler -> snubl", function() {deepEqual( Stem("snubler"), "snubl");});
test("snude -> snud", function() {deepEqual( Stem("snude"), "snud");});
test("snære -> snær", function() {deepEqual( Stem("snære"), "snær");});
test("snæver -> snæv", function() {deepEqual( Stem("snæver"), "snæv");});
test("snævre -> snævr", function() {deepEqual( Stem("snævre"), "snævr");});
test("snævrere -> snævr", function() {deepEqual( Stem("snævrere"), "snævr");});
test("snævreste -> snævrest", function() {deepEqual( Stem("snævreste"), "snævrest");});
test("snævring -> snævring", function() {deepEqual( Stem("snævring"), "snævring");});
test("snøre -> snør", function() {deepEqual( Stem("snøre"), "snør");});
test("so -> so", function() {deepEqual( Stem("so"), "so");});
test("sod -> sod", function() {deepEqual( Stem("sod"), "sod");});
test("sodis -> sodis", function() {deepEqual( Stem("sodis"), "sodis");});
test("sodom -> sodom", function() {deepEqual( Stem("sodom"), "sodom");});
test("sodoma -> sodoma", function() {deepEqual( Stem("sodoma"), "sodoma");});
test("sodomadommere -> sodomadom", function() {deepEqual( Stem("sodomadommere"), "sodomadom");});
test("sodomas -> sodoma", function() {deepEqual( Stem("sodomas"), "sodoma");});
test("soferets -> sof", function() {deepEqual( Stem("soferets"), "sof");});
test("sokler -> sokl", function() {deepEqual( Stem("sokler"), "sokl");});
test("soko -> soko", function() {deepEqual( Stem("soko"), "soko");});
test("sokos -> soko", function() {deepEqual( Stem("sokos"), "soko");});
test("sol -> sol", function() {deepEqual( Stem("sol"), "sol");});
test("solamgræshopper -> solamgræshop", function() {deepEqual( Stem("solamgræshopper"), "solamgræshop");});
test("sold -> sold", function() {deepEqual( Stem("sold"), "sold");});
test("solen -> sol", function() {deepEqual( Stem("solen"), "sol");});
test("solens -> sol", function() {deepEqual( Stem("solens"), "sol");});
test("solglød -> solglød", function() {deepEqual( Stem("solglød"), "solglød");});
test("solgt -> solg", function() {deepEqual( Stem("solgt"), "solg");});
test("solgte -> solg", function() {deepEqual( Stem("solgte"), "solg");});
test("solgtes -> solg", function() {deepEqual( Stem("solgtes"), "solg");});
test("sollyset -> sollys", function() {deepEqual( Stem("sollyset"), "sollys");});
test("solnedgang -> solnedgang", function() {deepEqual( Stem("solnedgang"), "solnedgang");});
test("solskin -> solskin", function() {deepEqual( Stem("solskin"), "solskin");});
test("solskinnet -> solskin", function() {deepEqual( Stem("solskinnet"), "solskin");});
test("solstøtter -> solstøt", function() {deepEqual( Stem("solstøtter"), "solstøt");});
test("solstøtterne -> solstøt", function() {deepEqual( Stem("solstøtterne"), "solstøt");});
test("solsøjler -> solsøjl", function() {deepEqual( Stem("solsøjler"), "solsøjl");});
test("solur -> solur", function() {deepEqual( Stem("solur"), "solur");});
test("soluret -> solur", function() {deepEqual( Stem("soluret"), "solur");});
test("som -> som", function() {deepEqual( Stem("som"), "som");});
test("somde -> somd", function() {deepEqual( Stem("somde"), "somd");});
test("somfremmede -> somfremmed", function() {deepEqual( Stem("somfremmede"), "somfremmed");});
test("somme -> som", function() {deepEqual( Stem("somme"), "som");});
test("sommer -> som", function() {deepEqual( Stem("sommer"), "som");});
test("sommeren -> som", function() {deepEqual( Stem("sommeren"), "som");});
test("sommerens -> som", function() {deepEqual( Stem("sommerens"), "som");});
test("sommerfrugt -> sommerfrug", function() {deepEqual( Stem("sommerfrugt"), "sommerfrug");});
test("sommergræsset -> sommergræs", function() {deepEqual( Stem("sommergræsset"), "sommergræs");});
test("sommerhus -> sommerhus", function() {deepEqual( Stem("sommerhus"), "sommerhus");});
test("sommerspind -> sommerspind", function() {deepEqual( Stem("sommerspind"), "sommerspind");});
test("somn -> somn", function() {deepEqual( Stem("somn"), "somn");});
test("somren -> somr", function() {deepEqual( Stem("somren"), "somr");});
test("son -> son", function() {deepEqual( Stem("son"), "son");});
test("sone -> son", function() {deepEqual( Stem("sone"), "son");});
test("sonebøde -> sonebød", function() {deepEqual( Stem("sonebøde"), "sonebød");});
test("sonedække -> sonedæk", function() {deepEqual( Stem("sonedække"), "sonedæk");});
test("sonedækket -> sonedæk", function() {deepEqual( Stem("sonedækket"), "sonedæk");});
test("sonegave -> sonegav", function() {deepEqual( Stem("sonegave"), "sonegav");});
test("sonemiddel -> sonemiddel", function() {deepEqual( Stem("sonemiddel"), "sonemiddel");});
test("sonepenge -> sonepeng", function() {deepEqual( Stem("sonepenge"), "sonepeng");});
test("sonepengene -> sonepeng", function() {deepEqual( Stem("sonepengene"), "sonepeng");});
test("soner -> son", function() {deepEqual( Stem("soner"), "son");});
test("sones -> son", function() {deepEqual( Stem("sones"), "son");});
test("sonet -> son", function() {deepEqual( Stem("sonet"), "son");});
test("soning -> soning", function() {deepEqual( Stem("soning"), "soning");});
test("soningen -> soning", function() {deepEqual( Stem("soningen"), "soning");});
test("soningssyndoffe -> soningssyndof", function() {deepEqual( Stem("soningssyndoffe"), "soningssyndof");});
test("soningsvæder -> soningsvæd", function() {deepEqual( Stem("soningsvæder"), "soningsvæd");});
test("sonm -> sonm", function() {deepEqual( Stem("sonm"), "sonm");});
test("sopater -> sopat", function() {deepEqual( Stem("sopater"), "sopat");});
test("sorekdalen -> sorekdal", function() {deepEqual( Stem("sorekdalen"), "sorekdal");});
test("sores -> sor", function() {deepEqual( Stem("sores"), "sor");});
test("sorg -> sorg", function() {deepEqual( Stem("sorg"), "sorg");});
test("sorgen -> sorg", function() {deepEqual( Stem("sorgen"), "sorg");});
test("sorgens -> sorg", function() {deepEqual( Stem("sorgens"), "sorg");});
test("sorger -> sorg", function() {deepEqual( Stem("sorger"), "sorg");});
test("sorgfri -> sorgfri", function() {deepEqual( Stem("sorgfri"), "sorgfri");});
test("sorgfuld -> sorgfuld", function() {deepEqual( Stem("sorgfuld"), "sorgfuld");});
test("sorgløs -> sorgløs", function() {deepEqual( Stem("sorgløs"), "sorgløs");});
test("sorgløse -> sorgløs", function() {deepEqual( Stem("sorgløse"), "sorgløs");});
test("sorgløses -> sorgløs", function() {deepEqual( Stem("sorgløses"), "sorgløs");});
test("sorgløshed -> sorgløs", function() {deepEqual( Stem("sorgløshed"), "sorgløs");});
test("sorgløst -> sorgløs", function() {deepEqual( Stem("sorgløst"), "sorgløs");});
test("sort -> sort", function() {deepEqual( Stem("sort"), "sort");});
test("sorte -> sort", function() {deepEqual( Stem("sorte"), "sort");});
test("sorteblå -> sorteblå", function() {deepEqual( Stem("sorteblå"), "sorteblå");});
test("sorten -> sort", function() {deepEqual( Stem("sorten"), "sort");});
test("sorter -> sort", function() {deepEqual( Stem("sorter"), "sort");});
test("sortladen -> sortlad", function() {deepEqual( Stem("sortladen"), "sortlad");});
test("sortne -> sortn", function() {deepEqual( Stem("sortne"), "sortn");});
test("sortner -> sortn", function() {deepEqual( Stem("sortner"), "sortn");});
test("sosipater -> sosipat", function() {deepEqual( Stem("sosipater"), "sosipat");});
test("sosthenes -> sosth", function() {deepEqual( Stem("sosthenes"), "sosth");});
test("sot -> sot", function() {deepEqual( Stem("sot"), "sot");});
test("sotaj -> sotaj", function() {deepEqual( Stem("sotaj"), "sotaj");});
test("sotajs -> sotaj", function() {deepEqual( Stem("sotajs"), "sotaj");});
test("soten -> sot", function() {deepEqual( Stem("soten"), "sot");});
test("sotens -> sot", function() {deepEqual( Stem("sotens"), "sot");});
test("sottesengen -> sotteseng", function() {deepEqual( Stem("sottesengen"), "sotteseng");});
test("sov -> sov", function() {deepEqual( Stem("sov"), "sov");});
test("sove -> sov", function() {deepEqual( Stem("sove"), "sov");});
test("sovekammer -> sovekam", function() {deepEqual( Stem("sovekammer"), "sovekam");});
test("sovende -> sov", function() {deepEqual( Stem("sovende"), "sov");});
test("sover -> sov", function() {deepEqual( Stem("sover"), "sov");});
test("sovet -> sov", function() {deepEqual( Stem("sovet"), "sov");});
test("soveværelset -> sovevær", function() {deepEqual( Stem("soveværelset"), "sovevær");});
test("spaltede -> spalted", function() {deepEqual( Stem("spaltede"), "spalted");});
test("spalter -> spalt", function() {deepEqual( Stem("spalter"), "spalt");});
test("spand -> spand", function() {deepEqual( Stem("spand"), "spand");});
test("spande -> spand", function() {deepEqual( Stem("spande"), "spand");});
test("spandt -> spand", function() {deepEqual( Stem("spandt"), "spand");});
test("spange -> spang", function() {deepEqual( Stem("spange"), "spang");});
test("spanien -> spani", function() {deepEqual( Stem("spanien"), "spani");});
test("spar -> spar", function() {deepEqual( Stem("spar"), "spar");});
test("spare -> spar", function() {deepEqual( Stem("spare"), "spar");});
test("sparede -> spared", function() {deepEqual( Stem("sparede"), "spared");});
test("sparer -> spar", function() {deepEqual( Stem("sparer"), "spar");});
test("sparet -> spar", function() {deepEqual( Stem("sparet"), "spar");});
test("sparsomt -> sparsomt", function() {deepEqual( Stem("sparsomt"), "sparsomt");});
test("spe -> spe", function() {deepEqual( Stem("spe"), "spe");});
test("spedalsk -> spedalsk", function() {deepEqual( Stem("spedalsk"), "spedalsk");});
test("spedalske -> spedalsk", function() {deepEqual( Stem("spedalske"), "spedalsk");});
test("spedalskes -> spedalsk", function() {deepEqual( Stem("spedalskes"), "spedalsk");});
test("spedalskhed -> spedalsk", function() {deepEqual( Stem("spedalskhed"), "spedalsk");});
test("spedalskheden -> spedalsk", function() {deepEqual( Stem("spedalskheden"), "spedalsk");});
test("spejde -> spejd", function() {deepEqual( Stem("spejde"), "spejd");});
test("spejded -> spejded", function() {deepEqual( Stem("spejded"), "spejded");});
test("spejdede -> spejded", function() {deepEqual( Stem("spejdede"), "spejded");});
test("spejder -> spejd", function() {deepEqual( Stem("spejder"), "spejd");});
test("spejdere -> spejd", function() {deepEqual( Stem("spejdere"), "spejd");});
test("spejderne -> spejd", function() {deepEqual( Stem("spejderne"), "spejd");});
test("spejl -> spejl", function() {deepEqual( Stem("spejl"), "spejl");});
test("spejle -> spejl", function() {deepEqual( Stem("spejle"), "spejl");});
test("spelt -> spelt", function() {deepEqual( Stem("spelt"), "spelt");});
test("spelten -> spelt", function() {deepEqual( Stem("spelten"), "spelt");});
test("spidde -> spid", function() {deepEqual( Stem("spidde"), "spid");});
test("spiddes -> spid", function() {deepEqual( Stem("spiddes"), "spid");});
test("spids -> spid", function() {deepEqual( Stem("spids"), "spid");});
test("spidse -> spids", function() {deepEqual( Stem("spidse"), "spids");});
test("spidsen -> spids", function() {deepEqual( Stem("spidsen"), "spids");});
test("spidser -> spids", function() {deepEqual( Stem("spidser"), "spids");});
test("spil -> spil", function() {deepEqual( Stem("spil"), "spil");});
test("spilde -> spild", function() {deepEqual( Stem("spilde"), "spild");});
test("spilder -> spild", function() {deepEqual( Stem("spilder"), "spild");});
test("spildes -> spild", function() {deepEqual( Stem("spildes"), "spild");});
test("spildt -> spild", function() {deepEqual( Stem("spildt"), "spild");});
test("spiler -> spil", function() {deepEqual( Stem("spiler"), "spil");});
test("spille -> spil", function() {deepEqual( Stem("spille"), "spil");});
test("spillede -> spilled", function() {deepEqual( Stem("spillede"), "spilled");});
test("spiller -> spil", function() {deepEqual( Stem("spiller"), "spil");});
test("spilles -> spil", function() {deepEqual( Stem("spilles"), "spil");});
test("spind -> spind", function() {deepEqual( Stem("spind"), "spind");});
test("spinde -> spind", function() {deepEqual( Stem("spinde"), "spind");});
test("spindelvæv -> spindelvæv", function() {deepEqual( Stem("spindelvæv"), "spindelvæv");});
test("spinder -> spind", function() {deepEqual( Stem("spinder"), "spind");});
test("spinderne -> spind", function() {deepEqual( Stem("spinderne"), "spind");});
test("spir -> spir", function() {deepEqual( Stem("spir"), "spir");});
test("spire -> spir", function() {deepEqual( Stem("spire"), "spir");});
test("spirede -> spired", function() {deepEqual( Stem("spirede"), "spired");});
test("spiren -> spir", function() {deepEqual( Stem("spiren"), "spir");});
test("spirende -> spir", function() {deepEqual( Stem("spirende"), "spir");});
test("spirer -> spir", function() {deepEqual( Stem("spirer"), "spir");});
test("spiret -> spir", function() {deepEqual( Stem("spiret"), "spir");});
test("spis -> spis", function() {deepEqual( Stem("spis"), "spis");});
test("spise -> spis", function() {deepEqual( Stem("spise"), "spis");});
test("spiselig -> spis", function() {deepEqual( Stem("spiselig"), "spis");});
test("spiseligt -> spis", function() {deepEqual( Stem("spiseligt"), "spis");});
test("spisende -> spis", function() {deepEqual( Stem("spisende"), "spis");});
test("spiser -> spis", function() {deepEqual( Stem("spiser"), "spis");});
test("spises -> spis", function() {deepEqual( Stem("spises"), "spis");});
test("spisetid -> spisetid", function() {deepEqual( Stem("spisetid"), "spisetid");});
test("spisningen -> spisning", function() {deepEqual( Stem("spisningen"), "spisning");});
test("spist -> spist", function() {deepEqual( Stem("spist"), "spist");});
test("spiste -> spist", function() {deepEqual( Stem("spiste"), "spist");});
test("splid -> splid", function() {deepEqual( Stem("splid"), "splid");});
test("splidagtighed -> splidag", function() {deepEqual( Stem("splidagtighed"), "splidag");});
test("splinter -> splint", function() {deepEqual( Stem("splinter"), "splint");});
test("splintrede -> splintred", function() {deepEqual( Stem("splintrede"), "splintred");});
test("splintredes -> splintred", function() {deepEqual( Stem("splintredes"), "splintred");});
test("splintrer -> splintr", function() {deepEqual( Stem("splintrer"), "splintr");});
test("splintres -> splintr", function() {deepEqual( Stem("splintres"), "splintr");});
test("split -> split", function() {deepEqual( Stem("split"), "split");});
test("splitte -> split", function() {deepEqual( Stem("splitte"), "split");});
test("splitted -> splitted", function() {deepEqual( Stem("splitted"), "splitted");});
test("splittede -> splitted", function() {deepEqual( Stem("splittede"), "splitted");});
test("splittedes -> splitted", function() {deepEqual( Stem("splittedes"), "splitted");});
test("splittelseme -> splittelsem", function() {deepEqual( Stem("splittelseme"), "splittelsem");});
test("splittelser -> split", function() {deepEqual( Stem("splittelser"), "split");});
test("splitter -> split", function() {deepEqual( Stem("splitter"), "split");});
test("splittes -> split", function() {deepEqual( Stem("splittes"), "split");});
test("splittet -> split", function() {deepEqual( Stem("splittet"), "split");});
test("spor -> spor", function() {deepEqual( Stem("spor"), "spor");});
test("sporløst -> sporløs", function() {deepEqual( Stem("sporløst"), "sporløs");});
test("spot -> spot", function() {deepEqual( Stem("spot"), "spot");});
test("spotpris -> spotpris", function() {deepEqual( Stem("spotpris"), "spotpris");});
test("spotske -> spotsk", function() {deepEqual( Stem("spotske"), "spotsk");});
test("spotte -> spot", function() {deepEqual( Stem("spotte"), "spot");});
test("spotted -> spotted", function() {deepEqual( Stem("spotted"), "spotted");});
test("spottede -> spotted", function() {deepEqual( Stem("spottede"), "spotted");});
test("spottelystne -> spottelystn", function() {deepEqual( Stem("spottelystne"), "spottelystn");});
test("spotten -> spot", function() {deepEqual( Stem("spotten"), "spot");});
test("spottende -> spot", function() {deepEqual( Stem("spottende"), "spot");});
test("spottens -> spot", function() {deepEqual( Stem("spottens"), "spot");});
test("spotter -> spot", function() {deepEqual( Stem("spotter"), "spot");});
test("spottere -> spot", function() {deepEqual( Stem("spottere"), "spot");});
test("spotteren -> spot", function() {deepEqual( Stem("spotteren"), "spot");});
test("spotteres -> spot", function() {deepEqual( Stem("spotteres"), "spot");});
test("spotterne -> spot", function() {deepEqual( Stem("spotterne"), "spot");});
test("spottes -> spot", function() {deepEqual( Stem("spottes"), "spot");});
test("spottet -> spot", function() {deepEqual( Stem("spottet"), "spot");});
test("spottevise -> spottevis", function() {deepEqual( Stem("spottevise"), "spottevis");});
test("spraglede -> spragled", function() {deepEqual( Stem("spraglede"), "spragled");});
test("spraglet -> spragl", function() {deepEqual( Stem("spraglet"), "spragl");});
test("sprang -> sprang", function() {deepEqual( Stem("sprang"), "sprang");});
test("spred -> spred", function() {deepEqual( Stem("spred"), "spred");});
test("sprede -> spred", function() {deepEqual( Stem("sprede"), "spred");});
test("spreder -> spred", function() {deepEqual( Stem("spreder"), "spred");});
test("spredes -> spred", function() {deepEqual( Stem("spredes"), "spred");});
test("spredt -> spredt", function() {deepEqual( Stem("spredt"), "spredt");});
test("spredte -> spredt", function() {deepEqual( Stem("spredte"), "spredt");});
test("spredtes -> spredt", function() {deepEqual( Stem("spredtes"), "spredt");});
test("spring -> spring", function() {deepEqual( Stem("spring"), "spring");});
test("springe -> spring", function() {deepEqual( Stem("springe"), "spring");});
test("springer -> spring", function() {deepEqual( Stem("springer"), "spring");});
test("springere -> spring", function() {deepEqual( Stem("springere"), "spring");});
test("springeren -> spring", function() {deepEqual( Stem("springeren"), "spring");});
test("sprog -> sprog", function() {deepEqual( Stem("sprog"), "sprog");});
test("sprogets -> sprog", function() {deepEqual( Stem("sprogets"), "sprog");});
test("spruder -> sprud", function() {deepEqual( Stem("spruder"), "sprud");});
test("sprukne -> sprukn", function() {deepEqual( Stem("sprukne"), "sprukn");});
test("sprælle -> spræl", function() {deepEqual( Stem("sprælle"), "spræl");});
test("sprællede -> sprælled", function() {deepEqual( Stem("sprællede"), "sprælled");});
test("spræng -> spræng", function() {deepEqual( Stem("spræng"), "spræng");});
test("sprænge -> spræng", function() {deepEqual( Stem("sprænge"), "spræng");});
test("sprænger -> spræng", function() {deepEqual( Stem("sprænger"), "spræng");});
test("sprænges -> spræng", function() {deepEqual( Stem("sprænges"), "spræng");});
test("sprængt -> spræng", function() {deepEqual( Stem("sprængt"), "spræng");});
test("sprængte -> spræng", function() {deepEqual( Stem("sprængte"), "spræng");});
test("sprøjted -> sprøjted", function() {deepEqual( Stem("sprøjted"), "sprøjted");});
test("sprøjtede -> sprøjted", function() {deepEqual( Stem("sprøjtede"), "sprøjted");});
test("spurgfe -> spurgf", function() {deepEqual( Stem("spurgfe"), "spurgf");});
test("spurgt -> spurg", function() {deepEqual( Stem("spurgt"), "spurg");});
test("spurgte -> spurg", function() {deepEqual( Stem("spurgte"), "spurg");});
test("spurgtes -> spurg", function() {deepEqual( Stem("spurgtes"), "spurg");});
test("spurv -> spurv", function() {deepEqual( Stem("spurv"), "spurv");});
test("spurve -> spurv", function() {deepEqual( Stem("spurve"), "spurv");});
test("spurven -> spurv", function() {deepEqual( Stem("spurven"), "spurv");});
test("spurvenes -> spurv", function() {deepEqual( Stem("spurvenes"), "spurv");});
test("spy -> spy", function() {deepEqual( Stem("spy"), "spy");});
test("spyd -> spyd", function() {deepEqual( Stem("spyd"), "spyd");});
test("spydene -> spyd", function() {deepEqual( Stem("spydene"), "spyd");});
test("spydet -> spyd", function() {deepEqual( Stem("spydet"), "spyd");});
test("spydkastere -> spydkast", function() {deepEqual( Stem("spydkastere"), "spydkast");});
test("spydsod -> spydsod", function() {deepEqual( Stem("spydsod"), "spydsod");});
test("spydstage -> spydstag", function() {deepEqual( Stem("spydstage"), "spydstag");});
test("spyede -> spyed", function() {deepEqual( Stem("spyede"), "spyed");});
test("spyr -> spyr", function() {deepEqual( Stem("spyr"), "spyr");});
test("spyt -> spyt", function() {deepEqual( Stem("spyt"), "spyt");});
test("spytte -> spyt", function() {deepEqual( Stem("spytte"), "spyt");});
test("spyttede -> spytted", function() {deepEqual( Stem("spyttede"), "spytted");});
test("spytter -> spyt", function() {deepEqual( Stem("spytter"), "spyt");});
test("spyttet -> spyt", function() {deepEqual( Stem("spyttet"), "spyt");});
test("spå -> spå", function() {deepEqual( Stem("spå"), "spå");});
test("spådom -> spådom", function() {deepEqual( Stem("spådom"), "spådom");});
test("spådomskunst -> spådomskunst", function() {deepEqual( Stem("spådomskunst"), "spådomskunst");});
test("spådomskunster -> spådomskunst", function() {deepEqual( Stem("spådomskunster"), "spådomskunst");});
test("spådomsånd -> spådomsånd", function() {deepEqual( Stem("spådomsånd"), "spådomsånd");});
test("spåede -> spåed", function() {deepEqual( Stem("spåede"), "spåed");});
test("spåmand -> spåmand", function() {deepEqual( Stem("spåmand"), "spåmand");});
test("spåmandsløn -> spåmandsløn", function() {deepEqual( Stem("spåmandsløn"), "spåmandsløn");});
test("spåmænd -> spåmænd", function() {deepEqual( Stem("spåmænd"), "spåmænd");});
test("spår -> spår", function() {deepEqual( Stem("spår"), "spår");});
test("spæd -> spæd", function() {deepEqual( Stem("spæd"), "spæd");});
test("spæde -> spæd", function() {deepEqual( Stem("spæde"), "spæd");});
test("spædes -> spæd", function() {deepEqual( Stem("spædes"), "spæd");});
test("spædet -> spæd", function() {deepEqual( Stem("spædet"), "spæd");});
test("spæge -> spæg", function() {deepEqual( Stem("spæge"), "spæg");});
test("spæged -> spæged", function() {deepEqual( Stem("spæged"), "spæged");});
test("spæger -> spæg", function() {deepEqual( Stem("spæger"), "spæg");});
test("spække -> spæk", function() {deepEqual( Stem("spække"), "spæk");});
test("spænd -> spænd", function() {deepEqual( Stem("spænd"), "spænd");});
test("spænde -> spænd", function() {deepEqual( Stem("spænde"), "spænd");});
test("spænder -> spænd", function() {deepEqual( Stem("spænder"), "spænd");});
test("spænding -> spænding", function() {deepEqual( Stem("spænding"), "spænding");});
test("spændt -> spænd", function() {deepEqual( Stem("spændt"), "spænd");});
test("spændte -> spænd", function() {deepEqual( Stem("spændte"), "spænd");});
test("spærre -> spær", function() {deepEqual( Stem("spærre"), "spær");});
test("spærred -> spærred", function() {deepEqual( Stem("spærred"), "spærred");});
test("spærrer -> spær", function() {deepEqual( Stem("spærrer"), "spær");});
test("spærret -> spær", function() {deepEqual( Stem("spærret"), "spær");});
test("spættede -> spætted", function() {deepEqual( Stem("spættede"), "spætted");});
test("spættet -> spæt", function() {deepEqual( Stem("spættet"), "spæt");});
test("spøg -> spøg", function() {deepEqual( Stem("spøg"), "spøg");});
test("spøgelse -> spøg", function() {deepEqual( Stem("spøgelse"), "spøg");});
test("spøger -> spøg", function() {deepEqual( Stem("spøger"), "spøg");});
test("spørg -> spørg", function() {deepEqual( Stem("spørg"), "spørg");});
test("spørge -> spørg", function() {deepEqual( Stem("spørge"), "spørg");});
test("spørger -> spørg", function() {deepEqual( Stem("spørger"), "spørg");});
test("spørgeren -> spørg", function() {deepEqual( Stem("spørgeren"), "spørg");});
test("spørges -> spørg", function() {deepEqual( Stem("spørges"), "spørg");});
test("spørgsmål -> spørgsmål", function() {deepEqual( Stem("spørgsmål"), "spørgsmål");});
test("st -> st", function() {deepEqual( Stem("st"), "st");});
test("stabel -> stabel", function() {deepEqual( Stem("stabel"), "stabel");});
test("stad -> stad", function() {deepEqual( Stem("stad"), "stad");});
test("staden -> stad", function() {deepEqual( Stem("staden"), "stad");});
test("stadens -> stad", function() {deepEqual( Stem("stadens"), "stad");});
test("stadfæst -> stadfæst", function() {deepEqual( Stem("stadfæst"), "stadfæst");});
test("stadfæste -> stadfæst", function() {deepEqual( Stem("stadfæste"), "stadfæst");});
test("stadfæstede -> stadfæsted", function() {deepEqual( Stem("stadfæstede"), "stadfæsted");});
test("stadfæstedes -> stadfæsted", function() {deepEqual( Stem("stadfæstedes"), "stadfæsted");});
test("stadfæstelse -> stadfæst", function() {deepEqual( Stem("stadfæstelse"), "stadfæst");});
test("stadfæster -> stadfæst", function() {deepEqual( Stem("stadfæster"), "stadfæst");});
test("stadfæstes -> stadfæst", function() {deepEqual( Stem("stadfæstes"), "stadfæst");});
test("stadfæstet -> stadfæst", function() {deepEqual( Stem("stadfæstet"), "stadfæst");});
test("stadier -> stadi", function() {deepEqual( Stem("stadier"), "stadi");});
test("stadig -> stad", function() {deepEqual( Stem("stadig"), "stad");});
test("stadigen -> stad", function() {deepEqual( Stem("stadigen"), "stad");});
test("stadighed -> stad", function() {deepEqual( Stem("stadighed"), "stad");});
test("stadigt -> stad", function() {deepEqual( Stem("stadigt"), "stad");});
test("stadmurens -> stadmur", function() {deepEqual( Stem("stadmurens"), "stadmur");});
test("stads -> stad", function() {deepEqual( Stem("stads"), "stad");});
test("stadsklæder -> stadsklæd", function() {deepEqual( Stem("stadsklæder"), "stadsklæd");});
test("stagen -> stag", function() {deepEqual( Stem("stagen"), "stag");});
test("stak -> stak", function() {deepEqual( Stem("stak"), "stak");});
test("stakkede -> stakked", function() {deepEqual( Stem("stakkede"), "stakked");});
test("stakkel -> stakkel", function() {deepEqual( Stem("stakkel"), "stakkel");});
test("stakkels -> stakkel", function() {deepEqual( Stem("stakkels"), "stakkel");});
test("stakket -> stak", function() {deepEqual( Stem("stakket"), "stak");});
test("staklen -> stakl", function() {deepEqual( Stem("staklen"), "stakl");});
test("stakler -> stakl", function() {deepEqual( Stem("stakler"), "stakl");});
test("staklerne -> stakl", function() {deepEqual( Stem("staklerne"), "stakl");});
test("stakte -> stakt", function() {deepEqual( Stem("stakte"), "stakt");});
test("stakys -> staky", function() {deepEqual( Stem("stakys"), "staky");});
test("staldbrødre -> staldbrødr", function() {deepEqual( Stem("staldbrødre"), "staldbrødr");});
test("stalde -> stald", function() {deepEqual( Stem("stalde"), "stald");});
test("stalden -> stald", function() {deepEqual( Stem("stalden"), "stald");});
test("staldene -> stald", function() {deepEqual( Stem("staldene"), "stald");});
test("stamfader -> stamfad", function() {deepEqual( Stem("stamfader"), "stamfad");});
test("stamfrænders -> stamfrænd", function() {deepEqual( Stem("stamfrænders"), "stamfrænd");});
test("stamme -> stam", function() {deepEqual( Stem("stamme"), "stam");});
test("stammebøvdinger -> stammebøvding", function() {deepEqual( Stem("stammebøvdinger"), "stammebøvding");});
test("stammede -> stammed", function() {deepEqual( Stem("stammede"), "stammed");});
test("stammefrænder -> stammefrænd", function() {deepEqual( Stem("stammefrænder"), "stammefrænd");});
test("stammehøvding -> stammehøvding", function() {deepEqual( Stem("stammehøvding"), "stammehøvding");});
test("stammehøvdinger -> stammehøvding", function() {deepEqual( Stem("stammehøvdinger"), "stammehøvding");});
test("stammelod -> stammelod", function() {deepEqual( Stem("stammelod"), "stammelod");});
test("stammelodder -> stammelod", function() {deepEqual( Stem("stammelodder"), "stammelod");});
test("stammelodderne -> stammelod", function() {deepEqual( Stem("stammelodderne"), "stammelod");});
test("stammende -> stam", function() {deepEqual( Stem("stammende"), "stam");});
test("stammendes -> stam", function() {deepEqual( Stem("stammendes"), "stam");});
test("stammens -> stam", function() {deepEqual( Stem("stammens"), "stam");});
test("stammeoverhoveder -> stammeoverhoved", function() {deepEqual( Stem("stammeoverhoveder"), "stammeoverhoved");});
test("stammer -> stam", function() {deepEqual( Stem("stammer"), "stam");});
test("stammerne -> stam", function() {deepEqual( Stem("stammerne"), "stam");});
test("stammernes -> stam", function() {deepEqual( Stem("stammernes"), "stam");});
test("stammers -> stam", function() {deepEqual( Stem("stammers"), "stam");});
test("stammes -> stam", function() {deepEqual( Stem("stammes"), "stam");});
test("stammeøversterne -> stammeøverst", function() {deepEqual( Stem("stammeøversterne"), "stammeøverst");});
test("stamp -> stamp", function() {deepEqual( Stem("stamp"), "stamp");});
test("stampe -> stamp", function() {deepEqual( Stem("stampe"), "stamp");});
test("stampede -> stamped", function() {deepEqual( Stem("stampede"), "stamped");});
test("stampes -> stamp", function() {deepEqual( Stem("stampes"), "stamp");});
test("stand -> stand", function() {deepEqual( Stem("stand"), "stand");});
test("standen -> stand", function() {deepEqual( Stem("standen"), "stand");});
test("stands -> stand", function() {deepEqual( Stem("stands"), "stand");});
test("standse -> stands", function() {deepEqual( Stem("standse"), "stands");});
test("standsed -> standsed", function() {deepEqual( Stem("standsed"), "standsed");});
test("standsede -> standsed", function() {deepEqual( Stem("standsede"), "standsed");});
test("standsedes -> standsed", function() {deepEqual( Stem("standsedes"), "standsed");});
test("standser -> stands", function() {deepEqual( Stem("standser"), "stands");});
test("standses -> stands", function() {deepEqual( Stem("standses"), "stands");});
test("standset -> stands", function() {deepEqual( Stem("standset"), "stands");});
test("standsfælleræmmes -> standsfælleræm", function() {deepEqual( Stem("standsfælleræmmes"), "standsfælleræm");});
test("standsning -> standsning", function() {deepEqual( Stem("standsning"), "standsning");});
test("stang -> stang", function() {deepEqual( Stem("stang"), "stang");});
test("stange -> stang", function() {deepEqual( Stem("stange"), "stang");});
test("stangede -> stanged", function() {deepEqual( Stem("stangede"), "stanged");});
test("stangen -> stang", function() {deepEqual( Stem("stangen"), "stang");});
test("stanger -> stang", function() {deepEqual( Stem("stanger"), "stang");});
test("stank -> stank", function() {deepEqual( Stem("stank"), "stank");});
test("stat -> stat", function() {deepEqual( Stem("stat"), "stat");});
test("statelig -> stat", function() {deepEqual( Stem("statelig"), "stat");});
test("stateligt -> stat", function() {deepEqual( Stem("stateligt"), "stat");});
test("stater -> stat", function() {deepEqual( Stem("stater"), "stat");});
test("statholder -> stathold", function() {deepEqual( Stem("statholder"), "stathold");});
test("statholdere -> stathold", function() {deepEqual( Stem("statholdere"), "stathold");});
test("statholderen -> stathold", function() {deepEqual( Stem("statholderen"), "stathold");});
test("statholderne -> stathold", function() {deepEqual( Stem("statholderne"), "stathold");});
test("statsskriver -> statsskriv", function() {deepEqual( Stem("statsskriver"), "statsskriv");});
test("statsskrivere -> statsskriv", function() {deepEqual( Stem("statsskrivere"), "statsskriv");});
test("statsskriveren -> statsskriv", function() {deepEqual( Stem("statsskriveren"), "statsskriv");});
test("statsskriverens -> statsskriv", function() {deepEqual( Stem("statsskriverens"), "statsskriv");});
test("stav -> stav", function() {deepEqual( Stem("stav"), "stav");});
test("stave -> stav", function() {deepEqual( Stem("stave"), "stav");});
test("staven -> stav", function() {deepEqual( Stem("staven"), "stav");});
test("stavene -> stav", function() {deepEqual( Stem("stavene"), "stav");});
test("stavtøj -> stavtøj", function() {deepEqual( Stem("stavtøj"), "stavtøj");});
test("stavtøjet -> stavtøj", function() {deepEqual( Stem("stavtøjet"), "stavtøj");});
test("ste -> ste", function() {deepEqual( Stem("ste"), "ste");});
test("sted -> sted", function() {deepEqual( Stem("sted"), "sted");});
test("stede -> sted", function() {deepEqual( Stem("stede"), "sted");});
test("stededes -> steded", function() {deepEqual( Stem("stededes"), "steded");});
test("steder -> sted", function() {deepEqual( Stem("steder"), "sted");});
test("stederne -> sted", function() {deepEqual( Stem("stederne"), "sted");});
test("stedes -> sted", function() {deepEqual( Stem("stedes"), "sted");});
test("stedet -> sted", function() {deepEqual( Stem("stedet"), "sted");});
test("stedets -> sted", function() {deepEqual( Stem("stedets"), "sted");});
test("stedfæste -> stedfæst", function() {deepEqual( Stem("stedfæste"), "stedfæst");});
test("steds -> sted", function() {deepEqual( Stem("steds"), "sted");});
test("stedse -> steds", function() {deepEqual( Stem("stedse"), "steds");});
test("stedseflydende -> stedseflyd", function() {deepEqual( Stem("stedseflydende"), "stedseflyd");});
test("stedsegrønne -> stedsegrøn", function() {deepEqual( Stem("stedsegrønne"), "stedsegrøn");});
test("stedserindende -> stedserind", function() {deepEqual( Stem("stedserindende"), "stedserind");});
test("stedt -> stedt", function() {deepEqual( Stem("stedt"), "stedt");});
test("stefanas -> stefana", function() {deepEqual( Stem("stefanas"), "stefana");});
test("stefanus -> stefanus", function() {deepEqual( Stem("stefanus"), "stefanus");});
test("steg -> steg", function() {deepEqual( Stem("steg"), "steg");});
test("stege -> steg", function() {deepEqual( Stem("stege"), "steg");});
test("stegen -> steg", function() {deepEqual( Stem("stegen"), "steg");});
test("steger -> steg", function() {deepEqual( Stem("steger"), "steg");});
test("steget -> steg", function() {deepEqual( Stem("steget"), "steg");});
test("stegne -> stegn", function() {deepEqual( Stem("stegne"), "stegn");});
test("stegt -> stegt", function() {deepEqual( Stem("stegt"), "stegt");});
test("stegte -> stegt", function() {deepEqual( Stem("stegte"), "stegt");});
test("stejl -> stejl", function() {deepEqual( Stem("stejl"), "stejl");});
test("stejle -> stejl", function() {deepEqual( Stem("stejle"), "stejl");});
test("stejlende -> stejl", function() {deepEqual( Stem("stejlende"), "stejl");});
test("stel -> stel", function() {deepEqual( Stem("stel"), "stel");});
test("stellene -> stel", function() {deepEqual( Stem("stellene"), "stel");});
test("stellet -> stel", function() {deepEqual( Stem("stellet"), "stel");});
test("stels -> stel", function() {deepEqual( Stem("stels"), "stel");});
test("stem -> stem", function() {deepEqual( Stem("stem"), "stem");});
test("stemme -> stem", function() {deepEqual( Stem("stemme"), "stem");});
test("stemmede -> stemmed", function() {deepEqual( Stem("stemmede"), "stemmed");});
test("stemmende -> stem", function() {deepEqual( Stem("stemmende"), "stem");});
test("stemmer -> stem", function() {deepEqual( Stem("stemmer"), "stem");});
test("stemple -> stempl", function() {deepEqual( Stem("stemple"), "stempl");});
test("stemt -> stemt", function() {deepEqual( Stem("stemt"), "stemt");});
test("stemte -> stemt", function() {deepEqual( Stem("stemte"), "stemt");});
test("sten -> sten", function() {deepEqual( Stem("sten"), "sten");});
test("stenblokke -> stenblok", function() {deepEqual( Stem("stenblokke"), "stenblok");});
test("stenbroen -> stenbro", function() {deepEqual( Stem("stenbroen"), "stenbro");});
test("stenbruddene -> stenbrud", function() {deepEqual( Stem("stenbruddene"), "stenbrud");});
test("stenbruddets -> stenbrud", function() {deepEqual( Stem("stenbruddets"), "stenbrud");});
test("stenbrudet -> stenbrud", function() {deepEqual( Stem("stenbrudet"), "stenbrud");});
test("stenbukke -> stenbuk", function() {deepEqual( Stem("stenbukke"), "stenbuk");});
test("stenbukken -> stenbuk", function() {deepEqual( Stem("stenbukken"), "stenbuk");});
test("stenden -> stend", function() {deepEqual( Stem("stenden"), "stend");});
test("stendiget -> stend", function() {deepEqual( Stem("stendiget"), "stend");});
test("stendynge -> stendyng", function() {deepEqual( Stem("stendynge"), "stendyng");});
test("stendynger -> stendyng", function() {deepEqual( Stem("stendynger"), "stendyng");});
test("stendysse -> stendys", function() {deepEqual( Stem("stendysse"), "stendys");});
test("stene -> sten", function() {deepEqual( Stem("stene"), "sten");});
test("stenede -> stened", function() {deepEqual( Stem("stenede"), "stened");});
test("stenen -> sten", function() {deepEqual( Stem("stenen"), "sten");});
test("stenene -> sten", function() {deepEqual( Stem("stenene"), "sten");});
test("stenens -> sten", function() {deepEqual( Stem("stenens"), "sten");});
test("stener -> sten", function() {deepEqual( Stem("stener"), "sten");});
test("stenes -> sten", function() {deepEqual( Stem("stenes"), "sten");});
test("stenet -> sten", function() {deepEqual( Stem("stenet"), "sten");});
test("stenfliser -> stenflis", function() {deepEqual( Stem("stenfliser"), "stenflis");});
test("stengeden -> stenged", function() {deepEqual( Stem("stengeden"), "stenged");});
test("stengrund -> stengrund", function() {deepEqual( Stem("stengrund"), "stengrund");});
test("stengrunden -> stengrund", function() {deepEqual( Stem("stengrunden"), "stengrund");});
test("stenhjertet -> stenhjert", function() {deepEqual( Stem("stenhjertet"), "stenhjert");});
test("stenhob -> stenhob", function() {deepEqual( Stem("stenhob"), "stenhob");});
test("stenhobe -> stenhob", function() {deepEqual( Stem("stenhobe"), "stenhob");});
test("stenhuggere -> stenhug", function() {deepEqual( Stem("stenhuggere"), "stenhug");});
test("stenhuggerne -> stenhug", function() {deepEqual( Stem("stenhuggerne"), "stenhug");});
test("stenhøj -> stenhøj", function() {deepEqual( Stem("stenhøj"), "stenhøj");});
test("stenkar -> stenkar", function() {deepEqual( Stem("stenkar"), "stenkar");});
test("stenkast -> stenkast", function() {deepEqual( Stem("stenkast"), "stenkast");});
test("stenknive -> stenkniv", function() {deepEqual( Stem("stenknive"), "stenkniv");});
test("stenlagt -> stenlag", function() {deepEqual( Stem("stenlagt"), "stenlag");});
test("stenlagte -> stenlag", function() {deepEqual( Stem("stenlagte"), "stenlag");});
test("stenlægning -> stenlægning", function() {deepEqual( Stem("stenlægning"), "stenlægning");});
test("stenlægningen -> stenlægning", function() {deepEqual( Stem("stenlægningen"), "stenlægning");});
test("stenmur -> stenmur", function() {deepEqual( Stem("stenmur"), "stenmur");});
test("stens -> sten", function() {deepEqual( Stem("stens"), "sten");});
test("stenskærerarbejde -> stenskærerarbejd", function() {deepEqual( Stem("stenskærerarbejde"), "stenskærerarbejd");});
test("stenstorm -> stenstorm", function() {deepEqual( Stem("stenstorm"), "stenstorm");});
test("stenstormen -> stenstorm", function() {deepEqual( Stem("stenstormen"), "stenstorm");});
test("stenstormens -> stenstorm", function() {deepEqual( Stem("stenstormens"), "stenstorm");});
test("stenstøtte -> stenstøt", function() {deepEqual( Stem("stenstøtte"), "stenstøt");});
test("stenstøtten -> stenstøt", function() {deepEqual( Stem("stenstøtten"), "stenstøt");});
test("stenstøtter -> stenstøt", function() {deepEqual( Stem("stenstøtter"), "stenstøt");});
test("stenstøtterne -> stenstøt", function() {deepEqual( Stem("stenstøtterne"), "stenstøt");});
test("stensætningen -> stensætning", function() {deepEqual( Stem("stensætningen"), "stensætning");});
test("stentavler -> stentavl", function() {deepEqual( Stem("stentavler"), "stentavl");});
test("stentavlerne -> stentavl", function() {deepEqual( Stem("stentavlerne"), "stentavl");});
test("stenvind -> stenvind", function() {deepEqual( Stem("stenvind"), "stenvind");});
test("stenvinden -> stenvind", function() {deepEqual( Stem("stenvinden"), "stenvind");});
test("steppe -> step", function() {deepEqual( Stem("steppe"), "step");});
test("steppen -> step", function() {deepEqual( Stem("steppen"), "step");});
test("steppeæslets -> steppeæsl", function() {deepEqual( Stem("steppeæslets"), "steppeæsl");});
test("ster -> ster", function() {deepEqual( Stem("ster"), "ster");});
test("sterkredsen -> sterkreds", function() {deepEqual( Stem("sterkredsen"), "sterkreds");});
test("sterland -> sterland", function() {deepEqual( Stem("sterland"), "sterland");});
test("sterleden -> sterled", function() {deepEqual( Stem("sterleden"), "sterled");});
test("sterlændingenes -> sterlænding", function() {deepEqual( Stem("sterlændingenes"), "sterlænding");});
test("sterne -> stern", function() {deepEqual( Stem("sterne"), "stern");});
test("stgrænse -> stgræns", function() {deepEqual( Stem("stgrænse"), "stgræns");});
test("stgrænsen -> stgræns", function() {deepEqual( Stem("stgrænsen"), "stgræns");});
test("sti -> sti", function() {deepEqual( Stem("sti"), "sti");});
test("stien -> stien", function() {deepEqual( Stem("stien"), "stien");});
test("stier -> stier", function() {deepEqual( Stem("stier"), "stier");});
test("stierne -> stiern", function() {deepEqual( Stem("stierne"), "stiern");});
test("stift -> stift", function() {deepEqual( Stem("stift"), "stift");});
test("stifte -> stift", function() {deepEqual( Stem("stifte"), "stift");});
test("stifted -> stifted", function() {deepEqual( Stem("stifted"), "stifted");});
test("stiftede -> stifted", function() {deepEqual( Stem("stiftede"), "stifted");});
test("stiftedes -> stifted", function() {deepEqual( Stem("stiftedes"), "stifted");});
test("stifter -> stift", function() {deepEqual( Stem("stifter"), "stift");});
test("stiftet -> stift", function() {deepEqual( Stem("stiftet"), "stift");});
test("stig -> stig", function() {deepEqual( Stem("stig"), "stig");});
test("stige -> stig", function() {deepEqual( Stem("stige"), "stig");});
test("stigende -> stig", function() {deepEqual( Stem("stigende"), "stig");});
test("stiger -> stig", function() {deepEqual( Stem("stiger"), "stig");});
test("stik -> stik", function() {deepEqual( Stem("stik"), "stik");});
test("stikke -> stik", function() {deepEqual( Stem("stikke"), "stik");});
test("stikken -> stik", function() {deepEqual( Stem("stikken"), "stik");});
test("stikker -> stik", function() {deepEqual( Stem("stikker"), "stik");});
test("stikkes -> stik", function() {deepEqual( Stem("stikkes"), "stik");});
test("stikling -> stikling", function() {deepEqual( Stem("stikling"), "stikling");});
test("stiklingen -> stikling", function() {deepEqual( Stem("stiklingen"), "stikling");});
test("stikpenge -> stikpeng", function() {deepEqual( Stem("stikpenge"), "stikpeng");});
test("stil -> stil", function() {deepEqual( Stem("stil"), "stil");});
test("stiler -> stil", function() {deepEqual( Stem("stiler"), "stil");});
test("stilhed -> stil", function() {deepEqual( Stem("stilhed"), "stil");});
test("stilke -> stilk", function() {deepEqual( Stem("stilke"), "stilk");});
test("stille -> stil", function() {deepEqual( Stem("stille"), "stil");});
test("stilled -> stilled", function() {deepEqual( Stem("stilled"), "stilled");});
test("stillede -> stilled", function() {deepEqual( Stem("stillede"), "stilled");});
test("stilledes -> stilled", function() {deepEqual( Stem("stilledes"), "stilled");});
test("stiller -> stil", function() {deepEqual( Stem("stiller"), "stil");});
test("stilles -> stil", function() {deepEqual( Stem("stilles"), "stil");});
test("stillet -> stil", function() {deepEqual( Stem("stillet"), "stil");});
test("stilling -> stilling", function() {deepEqual( Stem("stilling"), "stilling");});
test("stillingen -> stilling", function() {deepEqual( Stem("stillingen"), "stilling");});
test("stillinger -> stilling", function() {deepEqual( Stem("stillinger"), "stilling");});
test("stilned -> stilned", function() {deepEqual( Stem("stilned"), "stilned");});
test("stimand -> stimand", function() {deepEqual( Stem("stimand"), "stimand");});
test("stimandsflok -> stimandsflok", function() {deepEqual( Stem("stimandsflok"), "stimandsflok");});
test("stimlede -> stimled", function() {deepEqual( Stem("stimlede"), "stimled");});
test("stimler -> stiml", function() {deepEqual( Stem("stimler"), "stiml");});
test("stimmel -> stimmel", function() {deepEqual( Stem("stimmel"), "stimmel");});
test("stimænd -> stimænd", function() {deepEqual( Stem("stimænd"), "stimænd");});
test("stinke -> stink", function() {deepEqual( Stem("stinke"), "stink");});
test("stinkende -> stink", function() {deepEqual( Stem("stinkende"), "stink");});
test("stinker -> stink", function() {deepEqual( Stem("stinker"), "stink");});
test("stir -> stir", function() {deepEqual( Stem("stir"), "stir");});
test("stirre -> stir", function() {deepEqual( Stem("stirre"), "stir");});
test("stirred -> stirred", function() {deepEqual( Stem("stirred"), "stirred");});
test("stirrede -> stirred", function() {deepEqual( Stem("stirrede"), "stirred");});
test("stirrer -> stir", function() {deepEqual( Stem("stirrer"), "stir");});
test("stiv -> stiv", function() {deepEqual( Stem("stiv"), "stiv");});
test("stive -> stiv", function() {deepEqual( Stem("stive"), "stiv");});
test("stivn -> stivn", function() {deepEqual( Stem("stivn"), "stivn");});
test("stivnakkede -> stivnakked", function() {deepEqual( Stem("stivnakkede"), "stivnakked");});
test("stivne -> stivn", function() {deepEqual( Stem("stivne"), "stivn");});
test("stivned -> stivned", function() {deepEqual( Stem("stivned"), "stivned");});
test("stivnede -> stivned", function() {deepEqual( Stem("stivnede"), "stivned");});
test("stivner -> stivn", function() {deepEqual( Stem("stivner"), "stivn");});
test("stivsind -> stivsind", function() {deepEqual( Stem("stivsind"), "stivsind");});
test("stivsindet -> stivsind", function() {deepEqual( Stem("stivsindet"), "stivsind");});
test("stjal -> stjal", function() {deepEqual( Stem("stjal"), "stjal");});
test("stjemernes -> stjem", function() {deepEqual( Stem("stjemernes"), "stjem");});
test("stjerne -> stjern", function() {deepEqual( Stem("stjerne"), "stjern");});
test("stjernebillederne -> stjernebilled", function() {deepEqual( Stem("stjernebillederne"), "stjernebilled");});
test("stjernekigerne -> stjernek", function() {deepEqual( Stem("stjernekigerne"), "stjernek");});
test("stjernen -> stjern", function() {deepEqual( Stem("stjernen"), "stjern");});
test("stjernens -> stjern", function() {deepEqual( Stem("stjernens"), "stjern");});
test("stjerner -> stjern", function() {deepEqual( Stem("stjerner"), "stjern");});
test("stjernerne -> stjern", function() {deepEqual( Stem("stjernerne"), "stjern");});
test("stjernernes -> stjern", function() {deepEqual( Stem("stjernernes"), "stjern");});
test("stjerners -> stjern", function() {deepEqual( Stem("stjerners"), "stjern");});
test("stjernetydere -> stjernetyd", function() {deepEqual( Stem("stjernetydere"), "stjernetyd");});
test("stjernetyderne -> stjernetyd", function() {deepEqual( Stem("stjernetyderne"), "stjernetyd");});
test("stjålen -> stjål", function() {deepEqual( Stem("stjålen"), "stjål");});
test("stjålet -> stjål", function() {deepEqual( Stem("stjålet"), "stjål");});
test("stjålne -> stjåln", function() {deepEqual( Stem("stjålne"), "stjåln");});
test("stjæle -> stjæl", function() {deepEqual( Stem("stjæle"), "stjæl");});
test("stjæler -> stjæl", function() {deepEqual( Stem("stjæler"), "stjæl");});
test("stjæles -> stjæl", function() {deepEqual( Stem("stjæles"), "stjæl");});
test("stlandet -> stland", function() {deepEqual( Stem("stlandet"), "stland");});
test("stod -> stod", function() {deepEqual( Stem("stod"), "stod");});
test("stode -> stod", function() {deepEqual( Stem("stode"), "stod");});
test("stof -> stof", function() {deepEqual( Stem("stof"), "stof");});
test("stofer -> stof", function() {deepEqual( Stem("stofer"), "stof");});
test("stoffer -> stof", function() {deepEqual( Stem("stoffer"), "stof");});
test("stoiske -> stoisk", function() {deepEqual( Stem("stoiske"), "stoisk");});
test("stok -> stok", function() {deepEqual( Stem("stok"), "stok");});
test("stokken -> stok", function() {deepEqual( Stem("stokken"), "stok");});
test("stokværk -> stokværk", function() {deepEqual( Stem("stokværk"), "stokværk");});
test("stol -> stol", function() {deepEqual( Stem("stol"), "stol");});
test("stole -> stol", function() {deepEqual( Stem("stole"), "stol");});
test("stoled -> stoled", function() {deepEqual( Stem("stoled"), "stoled");});
test("stolede -> stoled", function() {deepEqual( Stem("stolede"), "stoled");});
test("stolen -> stol", function() {deepEqual( Stem("stolen"), "stol");});
test("stoler -> stol", function() {deepEqual( Stem("stoler"), "stol");});
test("stolpe -> stolp", function() {deepEqual( Stem("stolpe"), "stolp");});
test("stolt -> stolt", function() {deepEqual( Stem("stolt"), "stolt");});
test("stolte -> stolt", function() {deepEqual( Stem("stolte"), "stolt");});
test("stoltes -> stolt", function() {deepEqual( Stem("stoltes"), "stolt");});
test("stolteste -> stoltest", function() {deepEqual( Stem("stolteste"), "stoltest");});
test("stolthed -> stolt", function() {deepEqual( Stem("stolthed"), "stolt");});
test("stoppe -> stop", function() {deepEqual( Stem("stoppe"), "stop");});
test("stoppede -> stopped", function() {deepEqual( Stem("stoppede"), "stopped");});
test("stoppes -> stop", function() {deepEqual( Stem("stoppes"), "stop");});
test("stoppet -> stop", function() {deepEqual( Stem("stoppet"), "stop");});
test("stor -> stor", function() {deepEqual( Stem("stor"), "stor");});
test("stordybets -> stordyb", function() {deepEqual( Stem("stordybets"), "stordyb");});
test("stordåd -> stordåd", function() {deepEqual( Stem("stordåd"), "stordåd");});
test("store -> stor", function() {deepEqual( Stem("store"), "stor");});
test("storegerninger -> storegerning", function() {deepEqual( Stem("storegerninger"), "storegerning");});
test("stores -> stor", function() {deepEqual( Stem("stores"), "stor");});
test("storhed -> stor", function() {deepEqual( Stem("storhed"), "stor");});
test("storheden -> stor", function() {deepEqual( Stem("storheden"), "stor");});
test("storheds -> stor", function() {deepEqual( Stem("storheds"), "stor");});
test("storhersker -> storhersk", function() {deepEqual( Stem("storhersker"), "storhersk");});
test("storken -> stork", function() {deepEqual( Stem("storken"), "stork");});
test("storkevinger -> storkeving", function() {deepEqual( Stem("storkevinger"), "storkeving");});
test("storkongen -> storkong", function() {deepEqual( Stem("storkongen"), "storkong");});
test("storkongens -> storkong", function() {deepEqual( Stem("storkongens"), "storkong");});
test("storm -> storm", function() {deepEqual( Stem("storm"), "storm");});
test("stormand -> stormand", function() {deepEqual( Stem("stormand"), "stormand");});
test("stormanden -> stormand", function() {deepEqual( Stem("stormanden"), "stormand");});
test("stormandens -> stormand", function() {deepEqual( Stem("stormandens"), "stormand");});
test("stormands -> stormand", function() {deepEqual( Stem("stormands"), "stormand");});
test("stormbukke -> stormbuk", function() {deepEqual( Stem("stormbukke"), "stormbuk");});
test("storme -> storm", function() {deepEqual( Stem("storme"), "storm");});
test("stormed -> stormed", function() {deepEqual( Stem("stormed"), "stormed");});
test("stormede -> stormed", function() {deepEqual( Stem("stormede"), "stormed");});
test("stormen -> storm", function() {deepEqual( Stem("stormen"), "storm");});
test("stormens -> storm", function() {deepEqual( Stem("stormens"), "storm");});
test("stormer -> storm", function() {deepEqual( Stem("stormer"), "storm");});
test("stormet -> storm", function() {deepEqual( Stem("stormet"), "storm");});
test("stormskyer -> stormsky", function() {deepEqual( Stem("stormskyer"), "stormsky");});
test("stormvejr -> stormvejr", function() {deepEqual( Stem("stormvejr"), "stormvejr");});
test("stormvejret -> stormvejr", function() {deepEqual( Stem("stormvejret"), "stormvejr");});
test("stormvejrets -> stormvejr", function() {deepEqual( Stem("stormvejrets"), "stormvejr");});
test("stormvind -> stormvind", function() {deepEqual( Stem("stormvind"), "stormvind");});
test("stormvold -> stormvold", function() {deepEqual( Stem("stormvold"), "stormvold");});
test("stormvoldene -> stormvold", function() {deepEqual( Stem("stormvoldene"), "stormvold");});
test("stormægtighed -> stormæg", function() {deepEqual( Stem("stormægtighed"), "stormæg");});
test("stormænd -> stormænd", function() {deepEqual( Stem("stormænd"), "stormænd");});
test("stormændene -> stormænd", function() {deepEqual( Stem("stormændene"), "stormænd");});
test("stormændenes -> stormænd", function() {deepEqual( Stem("stormændenes"), "stormænd");});
test("stormænds -> stormænd", function() {deepEqual( Stem("stormænds"), "stormænd");});
test("stort -> stort", function() {deepEqual( Stem("stort"), "stort");});
test("storvind -> storvind", function() {deepEqual( Stem("storvind"), "storvind");});
test("storværk -> storværk", function() {deepEqual( Stem("storværk"), "storværk");});
test("storværker -> storværk", function() {deepEqual( Stem("storværker"), "storværk");});
test("stport -> stport", function() {deepEqual( Stem("stport"), "stport");});
test("stporten -> stport", function() {deepEqual( Stem("stporten"), "stport");});
test("stportens -> stport", function() {deepEqual( Stem("stportens"), "stport");});
test("straf -> straf", function() {deepEqual( Stem("straf"), "straf");});
test("straffe -> straf", function() {deepEqual( Stem("straffe"), "straf");});
test("straffede -> straffed", function() {deepEqual( Stem("straffede"), "straffed");});
test("straffedom -> straffedom", function() {deepEqual( Stem("straffedom"), "straffedom");});
test("straffedomme -> straffedom", function() {deepEqual( Stem("straffedomme"), "straffedom");});
test("straffen -> straf", function() {deepEqual( Stem("straffen"), "straf");});
test("straffens -> straf", function() {deepEqual( Stem("straffens"), "straf");});
test("straffer -> straf", function() {deepEqual( Stem("straffer"), "straf");});
test("straffes -> straf", function() {deepEqual( Stem("straffes"), "straf");});
test("strafskyldig -> strafskyld", function() {deepEqual( Stem("strafskyldig"), "strafskyld");});
test("strakfe -> strakf", function() {deepEqual( Stem("strakfe"), "strakf");});
test("straks -> strak", function() {deepEqual( Stem("straks"), "strak");});
test("strakt -> strakt", function() {deepEqual( Stem("strakt"), "strakt");});
test("strakte -> strakt", function() {deepEqual( Stem("strakte"), "strakt");});
test("strand -> strand", function() {deepEqual( Stem("strand"), "strand");});
test("strandbredden -> strandbred", function() {deepEqual( Stem("strandbredden"), "strandbred");});
test("strande -> strand", function() {deepEqual( Stem("strande"), "strand");});
test("stranden -> strand", function() {deepEqual( Stem("stranden"), "strand");});
test("strandene -> strand", function() {deepEqual( Stem("strandene"), "strand");});
test("strandes -> strand", function() {deepEqual( Stem("strandes"), "strand");});
test("strands -> strand", function() {deepEqual( Stem("strands"), "strand");});
test("stred -> stred", function() {deepEqual( Stem("stred"), "stred");});
test("strede -> stred", function() {deepEqual( Stem("strede"), "stred");});
test("stredes -> stred", function() {deepEqual( Stem("stredes"), "stred");});
test("streger -> streg", function() {deepEqual( Stem("streger"), "streg");});
test("strejfende -> strejf", function() {deepEqual( Stem("strejfende"), "strejf");});
test("strejfskaren -> strejfskar", function() {deepEqual( Stem("strejfskaren"), "strejfskar");});
test("strejfskarer -> strejfskar", function() {deepEqual( Stem("strejfskarer"), "strejfskar");});
test("strejfskarerne -> strejfskar", function() {deepEqual( Stem("strejfskarerne"), "strejfskar");});
test("strejftog -> strejftog", function() {deepEqual( Stem("strejftog"), "strejftog");});
test("strejtog -> strejtog", function() {deepEqual( Stem("strejtog"), "strejtog");});
test("streng -> streng", function() {deepEqual( Stem("streng"), "streng");});
test("strenge -> streng", function() {deepEqual( Stem("strenge"), "streng");});
test("strengeleg -> strengeleg", function() {deepEqual( Stem("strengeleg"), "strengeleg");});
test("strengelig -> streng", function() {deepEqual( Stem("strengelig"), "streng");});
test("strengen -> streng", function() {deepEqual( Stem("strengen"), "streng");});
test("strengene -> streng", function() {deepEqual( Stem("strengene"), "streng");});
test("strengenes -> streng", function() {deepEqual( Stem("strengenes"), "streng");});
test("strengespil -> strengespil", function() {deepEqual( Stem("strengespil"), "strengespil");});
test("strengespiller -> strengespil", function() {deepEqual( Stem("strengespiller"), "strengespil");});
test("strengespilleren -> strengespil", function() {deepEqual( Stem("strengespilleren"), "strengespil");});
test("strengeste -> strengest", function() {deepEqual( Stem("strengeste"), "strengest");});
test("strenghed -> streng", function() {deepEqual( Stem("strenghed"), "streng");});
test("strengt -> streng", function() {deepEqual( Stem("strengt"), "streng");});
test("stribede -> stribed", function() {deepEqual( Stem("stribede"), "stribed");});
test("striber -> strib", function() {deepEqual( Stem("striber"), "strib");});
test("stribet -> strib", function() {deepEqual( Stem("stribet"), "strib");});
test("strid -> strid", function() {deepEqual( Stem("strid"), "strid");});
test("stride -> strid", function() {deepEqual( Stem("stride"), "strid");});
test("striden -> strid", function() {deepEqual( Stem("striden"), "strid");});
test("stridende -> strid", function() {deepEqual( Stem("stridende"), "strid");});
test("stridens -> strid", function() {deepEqual( Stem("stridens"), "strid");});
test("strider -> strid", function() {deepEqual( Stem("strider"), "strid");});
test("strides -> strid", function() {deepEqual( Stem("strides"), "strid");});
test("stridig -> strid", function() {deepEqual( Stem("stridig"), "strid");});
test("stridigheden -> strid", function() {deepEqual( Stem("stridigheden"), "strid");});
test("stridigheder -> strid", function() {deepEqual( Stem("stridigheder"), "strid");});
test("stridsbuerne -> stridsbu", function() {deepEqual( Stem("stridsbuerne"), "stridsbu");});
test("stridsemne -> stridsemn", function() {deepEqual( Stem("stridsemne"), "stridsemn");});
test("stridshammer -> stridsham", function() {deepEqual( Stem("stridshammer"), "stridsham");});
test("stridshest -> stridshest", function() {deepEqual( Stem("stridshest"), "stridshest");});
test("stridsheste -> stridshest", function() {deepEqual( Stem("stridsheste"), "stridshest");});
test("stridshesten -> stridshest", function() {deepEqual( Stem("stridshesten"), "stridshest");});
test("stridshestene -> stridshest", function() {deepEqual( Stem("stridshestene"), "stridshest");});
test("stridskøllen -> stridskøl", function() {deepEqual( Stem("stridskøllen"), "stridskøl");});
test("stridslarm -> stridslarm", function() {deepEqual( Stem("stridslarm"), "stridslarm");});
test("stridslystne -> stridslystn", function() {deepEqual( Stem("stridslystne"), "stridslystn");});
test("stridsmagt -> stridsmag", function() {deepEqual( Stem("stridsmagt"), "stridsmag");});
test("stridsmand -> stridsmand", function() {deepEqual( Stem("stridsmand"), "stridsmand");});
test("stridsmænd -> stridsmænd", function() {deepEqual( Stem("stridsmænd"), "stridsmænd");});
test("stridsmændene -> stridsmænd", function() {deepEqual( Stem("stridsmændene"), "stridsmænd");});
test("stridsmændenes -> stridsmænd", function() {deepEqual( Stem("stridsmændenes"), "stridsmænd");});
test("stridsspørgsmål -> stridsspørgsmål", function() {deepEqual( Stem("stridsspørgsmål"), "stridsspørgsmål");});
test("stridsvogn -> stridsvogn", function() {deepEqual( Stem("stridsvogn"), "stridsvogn");});
test("stridsvogne -> stridsvogn", function() {deepEqual( Stem("stridsvogne"), "stridsvogn");});
test("stridsvognene -> stridsvogn", function() {deepEqual( Stem("stridsvognene"), "stridsvogn");});
test("stridsvognenes -> stridsvogn", function() {deepEqual( Stem("stridsvognenes"), "stridsvogn");});
test("stridsvåben -> stridsvåb", function() {deepEqual( Stem("stridsvåben"), "stridsvåb");});
test("stridsvåbnene -> stridsvåbn", function() {deepEqual( Stem("stridsvåbnene"), "stridsvåbn");});
test("stridsøkse -> stridsøks", function() {deepEqual( Stem("stridsøkse"), "stridsøks");});
test("stridt -> stridt", function() {deepEqual( Stem("stridt"), "stridt");});
test("strikker -> strik", function() {deepEqual( Stem("strikker"), "strik");});
test("strimer -> strim", function() {deepEqual( Stem("strimer"), "strim");});
test("stritter -> strit", function() {deepEqual( Stem("stritter"), "strit");});
test("strube -> strub", function() {deepEqual( Stem("strube"), "strub");});
test("struben -> strub", function() {deepEqual( Stem("struben"), "strub");});
test("strudse -> struds", function() {deepEqual( Stem("strudse"), "struds");});
test("strudsen -> struds", function() {deepEqual( Stem("strudsen"), "struds");});
test("strudsene -> struds", function() {deepEqual( Stem("strudsene"), "struds");});
test("strudsenes -> struds", function() {deepEqual( Stem("strudsenes"), "struds");});
test("strudsens -> struds", function() {deepEqual( Stem("strudsens"), "struds");});
test("stryg -> stryg", function() {deepEqual( Stem("stryg"), "stryg");});
test("stryge -> stryg", function() {deepEqual( Stem("stryge"), "stryg");});
test("stryger -> stryg", function() {deepEqual( Stem("stryger"), "stryg");});
test("strå -> strå", function() {deepEqual( Stem("strå"), "strå");});
test("strået -> strået", function() {deepEqual( Stem("strået"), "strået");});
test("strål -> strål", function() {deepEqual( Stem("strål"), "strål");});
test("stråle -> strål", function() {deepEqual( Stem("stråle"), "strål");});
test("stråled -> stråled", function() {deepEqual( Stem("stråled"), "stråled");});
test("strålede -> stråled", function() {deepEqual( Stem("strålede"), "stråled");});
test("stråleglans -> stråleglan", function() {deepEqual( Stem("stråleglans"), "stråleglan");});
test("stråleglansen -> stråleglans", function() {deepEqual( Stem("stråleglansen"), "stråleglans");});
test("strålende -> strål", function() {deepEqual( Stem("strålende"), "strål");});
test("stråler -> strål", function() {deepEqual( Stem("stråler"), "strål");});
test("stræb -> stræb", function() {deepEqual( Stem("stræb"), "stræb");});
test("stræbe -> stræb", function() {deepEqual( Stem("stræbe"), "stræb");});
test("stræber -> stræb", function() {deepEqual( Stem("stræber"), "stræb");});
test("stræder -> stræd", function() {deepEqual( Stem("stræder"), "stræd");});
test("strække -> stræk", function() {deepEqual( Stem("strække"), "stræk");});
test("strækker -> stræk", function() {deepEqual( Stem("strækker"), "stræk");});
test("strækning -> strækning", function() {deepEqual( Stem("strækning"), "strækning");});
test("strækninger -> strækning", function() {deepEqual( Stem("strækninger"), "strækning");});
test("strækningistandsatte -> strækningistandsat", function() {deepEqual( Stem("strækningistandsatte"), "strækningistandsat");});
test("strø -> strø", function() {deepEqual( Stem("strø"), "strø");});
test("strøde -> strød", function() {deepEqual( Stem("strøde"), "strød");});
test("strøede -> strøed", function() {deepEqual( Stem("strøede"), "strøed");});
test("strøedes -> strøed", function() {deepEqual( Stem("strøedes"), "strøed");});
test("strøet -> strøet", function() {deepEqual( Stem("strøet"), "strøet");});
test("strøg -> strøg", function() {deepEqual( Stem("strøg"), "strøg");});
test("strøm -> strøm", function() {deepEqual( Stem("strøm"), "strøm");});
test("strømes -> strøm", function() {deepEqual( Stem("strømes"), "strøm");});
test("strømme -> strøm", function() {deepEqual( Stem("strømme"), "strøm");});
test("strømmed -> strømmed", function() {deepEqual( Stem("strømmed"), "strømmed");});
test("strømmede -> strømmed", function() {deepEqual( Stem("strømmede"), "strømmed");});
test("strømmen -> strøm", function() {deepEqual( Stem("strømmen"), "strøm");});
test("strømmene -> strøm", function() {deepEqual( Stem("strømmene"), "strøm");});
test("strømmenes -> strøm", function() {deepEqual( Stem("strømmenes"), "strøm");});
test("strømmens -> strøm", function() {deepEqual( Stem("strømmens"), "strøm");});
test("strømmer -> strøm", function() {deepEqual( Stem("strømmer"), "strøm");});
test("strømmes -> strøm", function() {deepEqual( Stem("strømmes"), "strøm");});
test("strømmet -> strøm", function() {deepEqual( Stem("strømmet"), "strøm");});
test("strør -> strør", function() {deepEqual( Stem("strør"), "strør");});
test("strøs -> strøs", function() {deepEqual( Stem("strøs"), "strøs");});
test("stside -> stsid", function() {deepEqual( Stem("stside"), "stsid");});
test("stsiden -> stsid", function() {deepEqual( Stem("stsiden"), "stsid");});
test("stub -> stub", function() {deepEqual( Stem("stub"), "stub");});
test("stubben -> stub", function() {deepEqual( Stem("stubben"), "stub");});
test("studs -> stud", function() {deepEqual( Stem("studs"), "stud");});
test("studse -> studs", function() {deepEqual( Stem("studse"), "studs");});
test("studsed -> studsed", function() {deepEqual( Stem("studsed"), "studsed");});
test("studsede -> studsed", function() {deepEqual( Stem("studsede"), "studsed");});
test("stue -> stue", function() {deepEqual( Stem("stue"), "stue");});
test("stuen -> stuen", function() {deepEqual( Stem("stuen"), "stuen");});
test("stukket -> stuk", function() {deepEqual( Stem("stukket"), "stuk");});
test("stum -> stum", function() {deepEqual( Stem("stum"), "stum");});
test("stumme -> stum", function() {deepEqual( Stem("stumme"), "stum");});
test("stummes -> stum", function() {deepEqual( Stem("stummes"), "stum");});
test("stumperne -> stump", function() {deepEqual( Stem("stumperne"), "stump");});
test("stumt -> stumt", function() {deepEqual( Stem("stumt"), "stumt");});
test("stund -> stund", function() {deepEqual( Stem("stund"), "stund");});
test("stundede -> stunded", function() {deepEqual( Stem("stundede"), "stunded");});
test("stunder -> stund", function() {deepEqual( Stem("stunder"), "stund");});
test("stygge -> styg", function() {deepEqual( Stem("stygge"), "styg");});
test("stykke -> styk", function() {deepEqual( Stem("stykke"), "styk");});
test("stykker -> styk", function() {deepEqual( Stem("stykker"), "styk");});
test("stykkerne -> styk", function() {deepEqual( Stem("stykkerne"), "styk");});
test("stykket -> styk", function() {deepEqual( Stem("stykket"), "styk");});
test("stykkevis -> stykkevis", function() {deepEqual( Stem("stykkevis"), "stykkevis");});
test("stykkevise -> stykkevis", function() {deepEqual( Stem("stykkevise"), "stykkevis");});
test("styre -> styr", function() {deepEqual( Stem("styre"), "styr");});
test("styred -> styred", function() {deepEqual( Stem("styred"), "styred");});
test("styrede -> styred", function() {deepEqual( Stem("styrede"), "styred");});
test("styrende -> styr", function() {deepEqual( Stem("styrende"), "styr");});
test("styrer -> styr", function() {deepEqual( Stem("styrer"), "styr");});
test("styrere -> styr", function() {deepEqual( Stem("styrere"), "styr");});
test("styres -> styr", function() {deepEqual( Stem("styres"), "styr");});
test("styresmænd -> styresmænd", function() {deepEqual( Stem("styresmænd"), "styresmænd");});
test("styret -> styr", function() {deepEqual( Stem("styret"), "styr");});
test("styrk -> styrk", function() {deepEqual( Stem("styrk"), "styrk");});
test("styrke -> styrk", function() {deepEqual( Stem("styrke"), "styrk");});
test("styrkede -> styrked", function() {deepEqual( Stem("styrkede"), "styrked");});
test("styrkedes -> styrked", function() {deepEqual( Stem("styrkedes"), "styrked");});
test("styrken -> styrk", function() {deepEqual( Stem("styrken"), "styrk");});
test("styrker -> styrk", function() {deepEqual( Stem("styrker"), "styrk");});
test("styrkes -> styrk", function() {deepEqual( Stem("styrkes"), "styrk");});
test("styrket -> styrk", function() {deepEqual( Stem("styrket"), "styrk");});
test("styrmanden -> styrmand", function() {deepEqual( Stem("styrmanden"), "styrmand");});
test("styrmandens -> styrmand", function() {deepEqual( Stem("styrmandens"), "styrmand");});
test("styrmænd -> styrmænd", function() {deepEqual( Stem("styrmænd"), "styrmænd");});
test("styrmænds -> styrmænd", function() {deepEqual( Stem("styrmænds"), "styrmænd");});
test("styrt -> styrt", function() {deepEqual( Stem("styrt"), "styrt");});
test("styrte -> styrt", function() {deepEqual( Stem("styrte"), "styrt");});
test("styrted -> styrted", function() {deepEqual( Stem("styrted"), "styrted");});
test("styrtede -> styrted", function() {deepEqual( Stem("styrtede"), "styrted");});
test("styrter -> styrt", function() {deepEqual( Stem("styrter"), "styrt");});
test("styrtes -> styrt", function() {deepEqual( Stem("styrtes"), "styrt");});
test("styrtet -> styrt", function() {deepEqual( Stem("styrtet"), "styrt");});
test("stå -> stå", function() {deepEqual( Stem("stå"), "stå");});
test("stående -> ståend", function() {deepEqual( Stem("stående"), "ståend");});
test("stået -> stået", function() {deepEqual( Stem("stået"), "stået");});
test("stål -> stål", function() {deepEqual( Stem("stål"), "stål");});
test("står -> står", function() {deepEqual( Stem("står"), "står");});
test("stæder -> stæd", function() {deepEqual( Stem("stæder"), "stæd");});
test("stæng -> stæng", function() {deepEqual( Stem("stæng"), "stæng");});
test("stænge -> stæng", function() {deepEqual( Stem("stænge"), "stæng");});
test("stængede -> stænged", function() {deepEqual( Stem("stængede"), "stænged");});
test("stænger -> stæng", function() {deepEqual( Stem("stænger"), "stæng");});
test("stængerne -> stæng", function() {deepEqual( Stem("stængerne"), "stæng");});
test("stænges -> stæng", function() {deepEqual( Stem("stænges"), "stæng");});
test("stænget -> stæng", function() {deepEqual( Stem("stænget"), "stæng");});
test("stængt -> stæng", function() {deepEqual( Stem("stængt"), "stæng");});
test("stængte -> stæng", function() {deepEqual( Stem("stængte"), "stæng");});
test("stænk -> stænk", function() {deepEqual( Stem("stænk"), "stænk");});
test("stænke -> stænk", function() {deepEqual( Stem("stænke"), "stænk");});
test("stænkede -> stænked", function() {deepEqual( Stem("stænkede"), "stænked");});
test("stænker -> stænk", function() {deepEqual( Stem("stænker"), "stænk");});
test("stænkes -> stænk", function() {deepEqual( Stem("stænkes"), "stænk");});
test("stænket -> stænk", function() {deepEqual( Stem("stænket"), "stænk");});
test("stærk -> stærk", function() {deepEqual( Stem("stærk"), "stærk");});
test("stærke -> stærk", function() {deepEqual( Stem("stærke"), "stærk");});
test("stærkere -> stærk", function() {deepEqual( Stem("stærkere"), "stærk");});
test("stærkeres -> stærk", function() {deepEqual( Stem("stærkeres"), "stærk");});
test("stærkes -> stærk", function() {deepEqual( Stem("stærkes"), "stærk");});
test("stærkeste -> stærkest", function() {deepEqual( Stem("stærkeste"), "stærkest");});
test("stærkt -> stærk", function() {deepEqual( Stem("stærkt"), "stærk");});
test("stærktlydende -> stærktlyd", function() {deepEqual( Stem("stærktlydende"), "stærktlyd");});
test("stævn -> stævn", function() {deepEqual( Stem("stævn"), "stævn");});
test("stævne -> stævn", function() {deepEqual( Stem("stævne"), "stævn");});
test("stævned -> stævned", function() {deepEqual( Stem("stævned"), "stævned");});
test("stævnede -> stævned", function() {deepEqual( Stem("stævnede"), "stævned");});
test("stævnedes -> stævned", function() {deepEqual( Stem("stævnedes"), "stævned");});
test("stævner -> stævn", function() {deepEqual( Stem("stævner"), "stævn");});
test("stævnet -> stævn", function() {deepEqual( Stem("stævnet"), "stævn");});
test("stævnets -> stævn", function() {deepEqual( Stem("stævnets"), "stævn");});
test("støbe -> støb", function() {deepEqual( Stem("støbe"), "støb");});
test("støber -> støb", function() {deepEqual( Stem("støber"), "støb");});
test("støbning -> støbning", function() {deepEqual( Stem("støbning"), "støbning");});
test("støbningen -> støbning", function() {deepEqual( Stem("støbningen"), "støbning");});
test("støbt -> støbt", function() {deepEqual( Stem("støbt"), "støbt");});
test("støbte -> støbt", function() {deepEqual( Stem("støbte"), "støbt");});
test("stød -> stød", function() {deepEqual( Stem("stød"), "stød");});
test("støde -> stød", function() {deepEqual( Stem("støde"), "stød");});
test("stødene -> stød", function() {deepEqual( Stem("stødene"), "stød");});
test("støder -> stød", function() {deepEqual( Stem("støder"), "stød");});
test("stødes -> stød", function() {deepEqual( Stem("stødes"), "stød");});
test("stødt -> stødt", function() {deepEqual( Stem("stødt"), "stødt");});
test("stødte -> stødt", function() {deepEqual( Stem("stødte"), "stødt");});
test("stødtes -> stødt", function() {deepEqual( Stem("stødtes"), "stødt");});
test("støjen -> støj", function() {deepEqual( Stem("støjen"), "støj");});
test("støjende -> støj", function() {deepEqual( Stem("støjende"), "støj");});
test("støn -> støn", function() {deepEqual( Stem("støn"), "støn");});
test("stønne -> støn", function() {deepEqual( Stem("stønne"), "støn");});
test("stønnede -> stønned", function() {deepEqual( Stem("stønnede"), "stønned");});
test("stønnen -> støn", function() {deepEqual( Stem("stønnen"), "støn");});
test("stønner -> støn", function() {deepEqual( Stem("stønner"), "støn");});
test("støre -> stør", function() {deepEqual( Stem("støre"), "stør");});
test("størkner -> størkn", function() {deepEqual( Stem("størkner"), "størkn");});
test("større -> stør", function() {deepEqual( Stem("større"), "stør");});
test("størrelse -> stør", function() {deepEqual( Stem("størrelse"), "stør");});
test("størst -> størst", function() {deepEqual( Stem("størst"), "størst");});
test("største -> størst", function() {deepEqual( Stem("største"), "størst");});
test("størstes -> størst", function() {deepEqual( Stem("størstes"), "størst");});
test("støt -> støt", function() {deepEqual( Stem("støt"), "støt");});
test("støtfe -> støtf", function() {deepEqual( Stem("støtfe"), "støtf");});
test("støtfer -> støtf", function() {deepEqual( Stem("støtfer"), "støtf");});
test("støtte -> støt", function() {deepEqual( Stem("støtte"), "støt");});
test("støtted -> støtted", function() {deepEqual( Stem("støtted"), "støtted");});
test("støttede -> støtted", function() {deepEqual( Stem("støttede"), "støtted");});
test("støttemure -> støttemur", function() {deepEqual( Stem("støttemure"), "støttemur");});
test("støtter -> støt", function() {deepEqual( Stem("støtter"), "støt");});
test("støtterne -> støt", function() {deepEqual( Stem("støtterne"), "støt");});
test("støttestav -> støttestav", function() {deepEqual( Stem("støttestav"), "støttestav");});
test("støttet -> støt", function() {deepEqual( Stem("støttet"), "støt");});
test("støv -> støv", function() {deepEqual( Stem("støv"), "støv");});
test("støvel -> støvel", function() {deepEqual( Stem("støvel"), "støvel");});
test("støvet -> støv", function() {deepEqual( Stem("støvet"), "støv");});
test("støvets -> støv", function() {deepEqual( Stem("støvets"), "støv");});
test("støvgran -> støvgran", function() {deepEqual( Stem("støvgran"), "støvgran");});
test("støvle -> støvl", function() {deepEqual( Stem("støvle"), "støvl");});
test("støvsky -> støvsky", function() {deepEqual( Stem("støvsky"), "støvsky");});
test("støvskyen -> støvsky", function() {deepEqual( Stem("støvskyen"), "støvsky");});
test("sua -> sua", function() {deepEqual( Stem("sua"), "sua");});
test("suas -> suas", function() {deepEqual( Stem("suas"), "suas");});
test("suf -> suf", function() {deepEqual( Stem("suf"), "suf");});
test("sufa -> sufa", function() {deepEqual( Stem("sufa"), "sufa");});
test("suge -> sug", function() {deepEqual( Stem("suge"), "sug");});
test("suger -> sug", function() {deepEqual( Stem("suger"), "sug");});
test("suk -> suk", function() {deepEqual( Stem("suk"), "suk");});
test("sukatiterne -> sukatit", function() {deepEqual( Stem("sukatiterne"), "sukatit");});
test("sukke -> suk", function() {deepEqual( Stem("sukke"), "suk");});
test("sukkede -> sukked", function() {deepEqual( Stem("sukkede"), "sukked");});
test("sukkende -> suk", function() {deepEqual( Stem("sukkende"), "suk");});
test("sukker -> suk", function() {deepEqual( Stem("sukker"), "suk");});
test("sukkijiter -> sukkijit", function() {deepEqual( Stem("sukkijiter"), "sukkijit");});
test("sukkot -> sukkot", function() {deepEqual( Stem("sukkot"), "sukkot");});
test("sukkots -> sukkot", function() {deepEqual( Stem("sukkots"), "sukkot");});
test("sul -> sul", function() {deepEqual( Stem("sul"), "sul");});
test("sulamit -> sulamit", function() {deepEqual( Stem("sulamit"), "sulamit");});
test("sult -> sult", function() {deepEqual( Stem("sult"), "sult");});
test("sulte -> sult", function() {deepEqual( Stem("sulte"), "sult");});
test("sulten -> sult", function() {deepEqual( Stem("sulten"), "sult");});
test("sultens -> sult", function() {deepEqual( Stem("sultens"), "sult");});
test("sulter -> sult", function() {deepEqual( Stem("sulter"), "sult");});
test("sultne -> sultn", function() {deepEqual( Stem("sultne"), "sultn");});
test("sultnes -> sultn", function() {deepEqual( Stem("sultnes"), "sultn");});
test("sum -> sum", function() {deepEqual( Stem("sum"), "sum");});
test("summen -> sum", function() {deepEqual( Stem("summen"), "sum");});
test("sump -> sump", function() {deepEqual( Stem("sump"), "sump");});
test("sumpe -> sump", function() {deepEqual( Stem("sumpe"), "sump");});
test("sund -> sund", function() {deepEqual( Stem("sund"), "sund");});
test("sunde -> sund", function() {deepEqual( Stem("sunde"), "sund");});
test("sundt -> sund", function() {deepEqual( Stem("sundt"), "sund");});
test("sunget -> sung", function() {deepEqual( Stem("sunget"), "sung");});
test("sunket -> sunk", function() {deepEqual( Stem("sunket"), "sunk");});
test("suppekød -> suppekød", function() {deepEqual( Stem("suppekød"), "suppekød");});
test("suppen -> sup", function() {deepEqual( Stem("suppen"), "sup");});
test("sur -> sur", function() {deepEqual( Stem("sur"), "sur");});
test("surdej -> surdej", function() {deepEqual( Stem("surdej"), "surdej");});
test("surdejg -> surdejg", function() {deepEqual( Stem("surdejg"), "surdejg");});
test("surdejgen -> surdejg", function() {deepEqual( Stem("surdejgen"), "surdejg");});
test("sure -> sur", function() {deepEqual( Stem("sure"), "sur");});
test("surmælk -> surmælk", function() {deepEqual( Stem("surmælk"), "surmælk");});
test("surporten -> surport", function() {deepEqual( Stem("surporten"), "surport");});
test("surrende -> sur", function() {deepEqual( Stem("surrende"), "sur");});
test("surt -> surt", function() {deepEqual( Stem("surt"), "surt");});
test("susa -> susa", function() {deepEqual( Stem("susa"), "susa");});
test("susan -> susan", function() {deepEqual( Stem("susan"), "susan");});
test("susaniterne -> susanit", function() {deepEqual( Stem("susaniterne"), "susanit");});
test("susanna -> susanna", function() {deepEqual( Stem("susanna"), "susanna");});
test("susans -> susan", function() {deepEqual( Stem("susans"), "susan");});
test("susao -> susao", function() {deepEqual( Stem("susao"), "susao");});
test("susen -> sus", function() {deepEqual( Stem("susen"), "sus");});
test("susende -> sus", function() {deepEqual( Stem("susende"), "sus");});
test("suset -> sus", function() {deepEqual( Stem("suset"), "sus");});
test("susim -> susim", function() {deepEqual( Stem("susim"), "susim");});
test("susis -> susis", function() {deepEqual( Stem("susis"), "susis");});
test("suste -> sust", function() {deepEqual( Stem("suste"), "sust");});
test("svag -> svag", function() {deepEqual( Stem("svag"), "svag");});
test("svage -> svag", function() {deepEqual( Stem("svage"), "svag");});
test("svagere -> svag", function() {deepEqual( Stem("svagere"), "svag");});
test("svages -> svag", function() {deepEqual( Stem("svages"), "svag");});
test("svageste -> svagest", function() {deepEqual( Stem("svageste"), "svagest");});
test("svaghed -> svag", function() {deepEqual( Stem("svaghed"), "svag");});
test("svagheder -> svag", function() {deepEqual( Stem("svagheder"), "svag");});
test("svagheds -> svag", function() {deepEqual( Stem("svagheds"), "svag");});
test("svagsynet -> svagsyn", function() {deepEqual( Stem("svagsynet"), "svagsyn");});
test("svagt -> svagt", function() {deepEqual( Stem("svagt"), "svagt");});
test("svajer -> svaj", function() {deepEqual( Stem("svajer"), "svaj");});
test("sval -> sval", function() {deepEqual( Stem("sval"), "sval");});
test("svale -> sval", function() {deepEqual( Stem("svale"), "sval");});
test("svalen -> sval", function() {deepEqual( Stem("svalen"), "sval");});
test("svales -> sval", function() {deepEqual( Stem("svales"), "sval");});
test("svamp -> svamp", function() {deepEqual( Stem("svamp"), "svamp");});
test("svandt -> svand", function() {deepEqual( Stem("svandt"), "svand");});
test("svang -> svang", function() {deepEqual( Stem("svang"), "svang");});
test("svanger -> svang", function() {deepEqual( Stem("svanger"), "svang");});
test("svangerskab -> svangerskab", function() {deepEqual( Stem("svangerskab"), "svangerskab");});
test("svangerskabs -> svangerskab", function() {deepEqual( Stem("svangerskabs"), "svangerskab");});
test("svangert -> svangert", function() {deepEqual( Stem("svangert"), "svangert");});
test("svangre -> svangr", function() {deepEqual( Stem("svangre"), "svangr");});
test("svar -> svar", function() {deepEqual( Stem("svar"), "svar");});
test("svare -> svar", function() {deepEqual( Stem("svare"), "svar");});
test("svared -> svared", function() {deepEqual( Stem("svared"), "svared");});
test("svarede -> svared", function() {deepEqual( Stem("svarede"), "svared");});
test("svaredes -> svared", function() {deepEqual( Stem("svaredes"), "svared");});
test("svarende -> svar", function() {deepEqual( Stem("svarende"), "svar");});
test("svarer -> svar", function() {deepEqual( Stem("svarer"), "svar");});
test("svares -> svar", function() {deepEqual( Stem("svares"), "svar");});
test("svaret -> svar", function() {deepEqual( Stem("svaret"), "svar");});
test("svarlig -> svar", function() {deepEqual( Stem("svarlig"), "svar");});
test("svart -> svart", function() {deepEqual( Stem("svart"), "svart");});
test("sved -> sved", function() {deepEqual( Stem("sved"), "sved");});
test("svedet -> sved", function() {deepEqual( Stem("svedet"), "sved");});
test("svedne -> svedn", function() {deepEqual( Stem("svedne"), "svedn");});
test("sveg -> sveg", function() {deepEqual( Stem("sveg"), "sveg");});
test("sveget -> sveg", function() {deepEqual( Stem("sveget"), "sveg");});
test("svende -> svend", function() {deepEqual( Stem("svende"), "svend");});
test("svenden -> svend", function() {deepEqual( Stem("svenden"), "svend");});
test("svendene -> svend", function() {deepEqual( Stem("svendene"), "svend");});
test("svidende -> svid", function() {deepEqual( Stem("svidende"), "svid");});
test("svides -> svid", function() {deepEqual( Stem("svides"), "svid");});
test("svig -> svig", function() {deepEqual( Stem("svig"), "svig");});
test("svigefuld -> svigefuld", function() {deepEqual( Stem("svigefuld"), "svigefuld");});
test("svigefulde -> svigefuld", function() {deepEqual( Stem("svigefulde"), "svigefuld");});
test("svigefuldes -> svigefuld", function() {deepEqual( Stem("svigefuldes"), "svigefuld");});
test("svigefuldt -> svigefuld", function() {deepEqual( Stem("svigefuldt"), "svigefuld");});
test("sviger -> svig", function() {deepEqual( Stem("sviger"), "svig");});
test("svigerdatter -> svigerdat", function() {deepEqual( Stem("svigerdatter"), "svigerdat");});
test("svigerdøtre -> svigerdøtr", function() {deepEqual( Stem("svigerdøtre"), "svigerdøtr");});
test("svigerfader -> svigerfad", function() {deepEqual( Stem("svigerfader"), "svigerfad");});
test("svigerfaders -> svigerfad", function() {deepEqual( Stem("svigerfaders"), "svigerfad");});
test("svigerinde -> svigerind", function() {deepEqual( Stem("svigerinde"), "svigerind");});
test("svigermoder -> svigermod", function() {deepEqual( Stem("svigermoder"), "svigermod");});
test("svigersøn -> svigersøn", function() {deepEqual( Stem("svigersøn"), "svigersøn");});
test("svigersønner -> svigersøn", function() {deepEqual( Stem("svigersønner"), "svigersøn");});
test("svigløse -> svigløs", function() {deepEqual( Stem("svigløse"), "svigløs");});
test("svigt -> svigt", function() {deepEqual( Stem("svigt"), "svigt");});
test("svigte -> svigt", function() {deepEqual( Stem("svigte"), "svigt");});
test("svigted -> svigted", function() {deepEqual( Stem("svigted"), "svigted");});
test("svigtede -> svigted", function() {deepEqual( Stem("svigtede"), "svigted");});
test("svigtende -> svigt", function() {deepEqual( Stem("svigtende"), "svigt");});
test("svigter -> svigt", function() {deepEqual( Stem("svigter"), "svigt");});
test("svigtet -> svigt", function() {deepEqual( Stem("svigtet"), "svigt");});
test("svimle -> sviml", function() {deepEqual( Stem("svimle"), "sviml");});
test("svimmelhed -> svimmel", function() {deepEqual( Stem("svimmelhed"), "svimmel");});
test("svimmelheds -> svimmel", function() {deepEqual( Stem("svimmelheds"), "svimmel");});
test("svin -> svin", function() {deepEqual( Stem("svin"), "svin");});
test("svinde -> svind", function() {deepEqual( Stem("svinde"), "svind");});
test("svindende -> svind", function() {deepEqual( Stem("svindende"), "svind");});
test("svinder -> svind", function() {deepEqual( Stem("svinder"), "svind");});
test("svindsot -> svindsot", function() {deepEqual( Stem("svindsot"), "svindsot");});
test("svineblod -> svineblod", function() {deepEqual( Stem("svineblod"), "svineblod");});
test("svinehjorden -> svinehjord", function() {deepEqual( Stem("svinehjorden"), "svinehjord");});
test("svinekød -> svinekød", function() {deepEqual( Stem("svinekød"), "svinekød");});
test("svinene -> svin", function() {deepEqual( Stem("svinene"), "svin");});
test("svinet -> svin", function() {deepEqual( Stem("svinet"), "svin");});
test("svinetryne -> svinetryn", function() {deepEqual( Stem("svinetryne"), "svinetryn");});
test("sving -> sving", function() {deepEqual( Stem("sving"), "sving");});
test("svinge -> sving", function() {deepEqual( Stem("svinge"), "sving");});
test("svinger -> sving", function() {deepEqual( Stem("svinger"), "sving");});
test("svinges -> sving", function() {deepEqual( Stem("svinges"), "sving");});
test("svingfjer -> svingfj", function() {deepEqual( Stem("svingfjer"), "svingfj");});
test("svingning -> svingning", function() {deepEqual( Stem("svingning"), "svingning");});
test("svingningen -> svingning", function() {deepEqual( Stem("svingningen"), "svingning");});
test("svingnings -> svingning", function() {deepEqual( Stem("svingnings"), "svingning");});
test("svingningsbrystet -> svingningsbryst", function() {deepEqual( Stem("svingningsbrystet"), "svingningsbryst");});
test("svingningsbrød -> svingningsbrød", function() {deepEqual( Stem("svingningsbrød"), "svingningsbrød");});
test("svingningsneget -> svingningsneg", function() {deepEqual( Stem("svingningsneget"), "svingningsneg");});
test("svir -> svir", function() {deepEqual( Stem("svir"), "svir");});
test("svirrende -> svir", function() {deepEqual( Stem("svirrende"), "svir");});
test("svoger -> svog", function() {deepEqual( Stem("svoger"), "svog");});
test("svogerskab -> svogerskab", function() {deepEqual( Stem("svogerskab"), "svogerskab");});
test("svogerskabets -> svogerskab", function() {deepEqual( Stem("svogerskabets"), "svogerskab");});
test("svogerægteskab -> svogerægteskab", function() {deepEqual( Stem("svogerægteskab"), "svogerægteskab");});
test("svor -> svor", function() {deepEqual( Stem("svor"), "svor");});
test("svoret -> svor", function() {deepEqual( Stem("svoret"), "svor");});
test("svorne -> svorn", function() {deepEqual( Stem("svorne"), "svorn");});
test("svovl -> svovl", function() {deepEqual( Stem("svovl"), "svovl");});
test("svovlet -> svovl", function() {deepEqual( Stem("svovlet"), "svovl");});
test("svovlgule -> svovlgul", function() {deepEqual( Stem("svovlgule"), "svovlgul");});
test("svovlsøen -> svovlsø", function() {deepEqual( Stem("svovlsøen"), "svovlsø");});
test("svulme -> svulm", function() {deepEqual( Stem("svulme"), "svulm");});
test("svulmende -> svulm", function() {deepEqual( Stem("svulmende"), "svulm");});
test("svulmer -> svulm", function() {deepEqual( Stem("svulmer"), "svulm");});
test("svulne -> svuln", function() {deepEqual( Stem("svulne"), "svuln");});
test("svulster -> svulst", function() {deepEqual( Stem("svulster"), "svulst");});
test("svundet -> svund", function() {deepEqual( Stem("svundet"), "svund");});
test("svundne -> svundn", function() {deepEqual( Stem("svundne"), "svundn");});
test("svunget -> svung", function() {deepEqual( Stem("svunget"), "svung");});
test("svungne -> svungn", function() {deepEqual( Stem("svungne"), "svungn");});
test("svækkede -> svækked", function() {deepEqual( Stem("svækkede"), "svækked");});
test("svæklingen -> svækling", function() {deepEqual( Stem("svæklingen"), "svækling");});
test("svælg -> svælg", function() {deepEqual( Stem("svælg"), "svælg");});
test("svælge -> svælg", function() {deepEqual( Stem("svælge"), "svælg");});
test("svælger -> svælg", function() {deepEqual( Stem("svælger"), "svælg");});
test("svær -> svær", function() {deepEqual( Stem("svær"), "svær");});
test("sværd -> sværd", function() {deepEqual( Stem("sværd"), "sværd");});
test("sværdblink -> sværdblink", function() {deepEqual( Stem("sværdblink"), "sværdblink");});
test("sværddansen -> sværddans", function() {deepEqual( Stem("sværddansen"), "sværddans");});
test("sværdet -> sværd", function() {deepEqual( Stem("sværdet"), "sværd");});
test("sværdets -> sværd", function() {deepEqual( Stem("sværdets"), "sværd");});
test("sværdhug -> sværdhug", function() {deepEqual( Stem("sværdhug"), "sværdhug");});
test("sværdhugget -> sværdhug", function() {deepEqual( Stem("sværdhugget"), "sværdhug");});
test("sværds -> sværd", function() {deepEqual( Stem("sværds"), "sværd");});
test("sværdslagne -> sværdslagn", function() {deepEqual( Stem("sværdslagne"), "sværdslagn");});
test("sværdvæbnede -> sværdvæbned", function() {deepEqual( Stem("sværdvæbnede"), "sværdvæbned");});
test("svære -> svær", function() {deepEqual( Stem("svære"), "svær");});
test("sværg -> sværg", function() {deepEqual( Stem("sværg"), "sværg");});
test("sværge -> sværg", function() {deepEqual( Stem("sværge"), "sværg");});
test("sværgende -> sværg", function() {deepEqual( Stem("sværgende"), "sværg");});
test("sværger -> sværg", function() {deepEqual( Stem("sværger"), "sværg");});
test("sværlemmede -> sværlemmed", function() {deepEqual( Stem("sværlemmede"), "sværlemmed");});
test("sværm -> sværm", function() {deepEqual( Stem("sværm"), "sværm");});
test("svært -> svært", function() {deepEqual( Stem("svært"), "svært");});
test("sværter -> svært", function() {deepEqual( Stem("sværter"), "svært");});
test("sværtet -> svært", function() {deepEqual( Stem("sværtet"), "svært");});
test("svæve -> svæv", function() {deepEqual( Stem("svæve"), "svæv");});
test("svæved -> svæved", function() {deepEqual( Stem("svæved"), "svæved");});
test("svævede -> svæved", function() {deepEqual( Stem("svævede"), "svæved");});
test("svæven -> svæv", function() {deepEqual( Stem("svæven"), "svæv");});
test("svævende -> svæv", function() {deepEqual( Stem("svævende"), "svæv");});
test("svæver -> svæv", function() {deepEqual( Stem("svæver"), "svæv");});
test("svæærge -> svæærg", function() {deepEqual( Stem("svæærge"), "svæærg");});
test("svøb -> svøb", function() {deepEqual( Stem("svøb"), "svøb");});
test("svøbe -> svøb", function() {deepEqual( Stem("svøbe"), "svøb");});
test("svøben -> svøb", function() {deepEqual( Stem("svøben"), "svøb");});
test("svøber -> svøb", function() {deepEqual( Stem("svøber"), "svøb");});
test("svøberne -> svøb", function() {deepEqual( Stem("svøberne"), "svøb");});
test("svøbt -> svøbt", function() {deepEqual( Stem("svøbt"), "svøbt");});
test("svøbte -> svøbt", function() {deepEqual( Stem("svøbte"), "svøbt");});
test("svømme -> svøm", function() {deepEqual( Stem("svømme"), "svøm");});
test("svømmende -> svøm", function() {deepEqual( Stem("svømmende"), "svøm");});
test("svømmer -> svøm", function() {deepEqual( Stem("svømmer"), "svøm");});
test("svømmeren -> svøm", function() {deepEqual( Stem("svømmeren"), "svøm");});
test("sy -> sy", function() {deepEqual( Stem("sy"), "sy");});
test("syd -> syd", function() {deepEqual( Stem("syd"), "syd");});
test("syde -> syd", function() {deepEqual( Stem("syde"), "syd");});
test("sydende -> syd", function() {deepEqual( Stem("sydende"), "syd");});
test("sydens -> syd", function() {deepEqual( Stem("sydens"), "syd");});
test("syder -> syd", function() {deepEqual( Stem("syder"), "syd");});
test("sydgrænse -> sydgræns", function() {deepEqual( Stem("sydgrænse"), "sydgræns");});
test("sydgrænsen -> sydgræns", function() {deepEqual( Stem("sydgrænsen"), "sydgræns");});
test("sydland -> sydland", function() {deepEqual( Stem("sydland"), "sydland");});
test("sydlandet -> sydland", function() {deepEqual( Stem("sydlandet"), "sydland");});
test("sydlandets -> sydland", function() {deepEqual( Stem("sydlandets"), "sydland");});
test("sydlige -> syd", function() {deepEqual( Stem("sydlige"), "syd");});
test("sydporten -> sydport", function() {deepEqual( Stem("sydporten"), "sydport");});
test("sydportens -> sydport", function() {deepEqual( Stem("sydportens"), "sydport");});
test("sydpå -> sydpå", function() {deepEqual( Stem("sydpå"), "sydpå");});
test("sydside -> sydsid", function() {deepEqual( Stem("sydside"), "sydsid");});
test("sydsiden -> sydsid", function() {deepEqual( Stem("sydsiden"), "sydsid");});
test("sydvest -> sydvest", function() {deepEqual( Stem("sydvest"), "sydvest");});
test("sydøstre -> sydøstr", function() {deepEqual( Stem("sydøstre"), "sydøstr");});
test("syede -> syed", function() {deepEqual( Stem("syede"), "syed");});
test("syene -> syen", function() {deepEqual( Stem("syene"), "syen");});
test("syet -> syet", function() {deepEqual( Stem("syet"), "syet");});
test("syg -> syg", function() {deepEqual( Stem("syg"), "syg");});
test("sygdom -> sygdom", function() {deepEqual( Stem("sygdom"), "sygdom");});
test("sygdomme -> sygdom", function() {deepEqual( Stem("sygdomme"), "sygdom");});
test("sygdommen -> sygdom", function() {deepEqual( Stem("sygdommen"), "sygdom");});
test("sygdommene -> sygdom", function() {deepEqual( Stem("sygdommene"), "sygdom");});
test("syge -> syg", function() {deepEqual( Stem("syge"), "syg");});
test("sygelejet -> sygelej", function() {deepEqual( Stem("sygelejet"), "sygelej");});
test("sygelige -> syg", function() {deepEqual( Stem("sygelige"), "syg");});
test("sygne -> sygn", function() {deepEqual( Stem("sygne"), "sygn");});
test("sygnede -> sygned", function() {deepEqual( Stem("sygnede"), "sygned");});
test("sygner -> sygn", function() {deepEqual( Stem("sygner"), "sygn");});
test("sygt -> sygt", function() {deepEqual( Stem("sygt"), "sygt");});
test("sykar -> sykar", function() {deepEqual( Stem("sykar"), "sykar");});
test("syl -> syl", function() {deepEqual( Stem("syl"), "syl");});
test("syn -> syn", function() {deepEqual( Stem("syn"), "syn");});
test("synagoge -> synagog", function() {deepEqual( Stem("synagoge"), "synagog");});
test("synagogeforstanderen -> synagogeforstand", function() {deepEqual( Stem("synagogeforstanderen"), "synagogeforstand");});
test("synagogeforstanderens -> synagogeforstand", function() {deepEqual( Stem("synagogeforstanderens"), "synagogeforstand");});
test("synagogeforstanderne -> synagogeforstand", function() {deepEqual( Stem("synagogeforstanderne"), "synagogeforstand");});
test("synagogen -> synagog", function() {deepEqual( Stem("synagogen"), "synagog");});
test("synagoger -> synagog", function() {deepEqual( Stem("synagoger"), "synagog");});
test("synagogerne -> synagog", function() {deepEqual( Stem("synagogerne"), "synagog");});
test("synd -> synd", function() {deepEqual( Stem("synd"), "synd");});
test("synde -> synd", function() {deepEqual( Stem("synde"), "synd");});
test("syndebod -> syndebod", function() {deepEqual( Stem("syndebod"), "syndebod");});
test("synded -> synded", function() {deepEqual( Stem("synded"), "synded");});
test("syndede -> synded", function() {deepEqual( Stem("syndede"), "synded");});
test("syndefulde -> syndefuld", function() {deepEqual( Stem("syndefulde"), "syndefuld");});
test("synden -> synd", function() {deepEqual( Stem("synden"), "synd");});
test("syndens -> synd", function() {deepEqual( Stem("syndens"), "synd");});
test("synder -> synd", function() {deepEqual( Stem("synder"), "synd");});
test("syndere -> synd", function() {deepEqual( Stem("syndere"), "synd");});
test("synderen -> synd", function() {deepEqual( Stem("synderen"), "synd");});
test("synderens -> synd", function() {deepEqual( Stem("synderens"), "synd");});
test("synderes -> synd", function() {deepEqual( Stem("synderes"), "synd");});
test("synderinde -> synderind", function() {deepEqual( Stem("synderinde"), "synderind");});
test("synderne -> synd", function() {deepEqual( Stem("synderne"), "synd");});
test("syndernes -> synd", function() {deepEqual( Stem("syndernes"), "synd");});
test("synders -> synd", function() {deepEqual( Stem("synders"), "synd");});
test("syndeskyld -> syndeskyld", function() {deepEqual( Stem("syndeskyld"), "syndeskyld");});
test("syndeslkyld -> syndeslkyld", function() {deepEqual( Stem("syndeslkyld"), "syndeslkyld");});
test("syndet -> synd", function() {deepEqual( Stem("syndet"), "synd");});
test("syndfloden -> syndflod", function() {deepEqual( Stem("syndfloden"), "syndflod");});
test("syndig -> synd", function() {deepEqual( Stem("syndig"), "synd");});
test("syndige -> synd", function() {deepEqual( Stem("syndige"), "synd");});
test("syndigt -> synd", function() {deepEqual( Stem("syndigt"), "synd");});
test("syndoffer -> syndof", function() {deepEqual( Stem("syndoffer"), "syndof");});
test("syndofferbuk -> syndofferbuk", function() {deepEqual( Stem("syndofferbuk"), "syndofferbuk");});
test("syndofferbukken -> syndofferbuk", function() {deepEqual( Stem("syndofferbukken"), "syndofferbuk");});
test("syndofferbukkene -> syndofferbuk", function() {deepEqual( Stem("syndofferbukkene"), "syndofferbuk");});
test("syndofferet -> syndof", function() {deepEqual( Stem("syndofferet"), "syndof");});
test("syndofferets -> syndof", function() {deepEqual( Stem("syndofferets"), "syndof");});
test("syndofferkalv -> syndofferkalv", function() {deepEqual( Stem("syndofferkalv"), "syndofferkalv");});
test("syndofferkød -> syndofferkød", function() {deepEqual( Stem("syndofferkød"), "syndofferkød");});
test("syndofferpengene -> syndofferpeng", function() {deepEqual( Stem("syndofferpengene"), "syndofferpeng");});
test("syndoffertyr -> syndoffertyr", function() {deepEqual( Stem("syndoffertyr"), "syndoffertyr");});
test("syndoffertyren -> syndoffertyr", function() {deepEqual( Stem("syndoffertyren"), "syndoffertyr");});
test("syndoffertyrens -> syndoffertyr", function() {deepEqual( Stem("syndoffertyrens"), "syndoffertyr");});
test("syndofre -> syndofr", function() {deepEqual( Stem("syndofre"), "syndofr");});
test("syndofrene -> syndofr", function() {deepEqual( Stem("syndofrene"), "syndofr");});
test("synds -> synd", function() {deepEqual( Stem("synds"), "synd");});
test("syndsbekendelse -> syndsbekend", function() {deepEqual( Stem("syndsbekendelse"), "syndsbekend");});
test("syndsforladelse -> syndsforlad", function() {deepEqual( Stem("syndsforladelse"), "syndsforlad");});
test("syne -> syn", function() {deepEqual( Stem("syne"), "syn");});
test("synede -> syned", function() {deepEqual( Stem("synede"), "syned");});
test("synen -> syn", function() {deepEqual( Stem("synen"), "syn");});
test("syner -> syn", function() {deepEqual( Stem("syner"), "syn");});
test("synerne -> syn", function() {deepEqual( Stem("synerne"), "syn");});
test("synernes -> syn", function() {deepEqual( Stem("synernes"), "syn");});
test("synes -> syn", function() {deepEqual( Stem("synes"), "syn");});
test("synet -> syn", function() {deepEqual( Stem("synet"), "syn");});
test("synets -> syn", function() {deepEqual( Stem("synets"), "syn");});
test("syng -> syng", function() {deepEqual( Stem("syng"), "syng");});
test("synge -> syng", function() {deepEqual( Stem("synge"), "syng");});
test("syngende -> syng", function() {deepEqual( Stem("syngende"), "syng");});
test("synger -> syng", function() {deepEqual( Stem("synger"), "syng");});
test("synges -> syng", function() {deepEqual( Stem("synges"), "syng");});
test("synke -> synk", function() {deepEqual( Stem("synke"), "synk");});
test("synker -> synk", function() {deepEqual( Stem("synker"), "synk");});
test("synlige -> syn", function() {deepEqual( Stem("synlige"), "syn");});
test("synligt -> syn", function() {deepEqual( Stem("synligt"), "syn");});
test("syns -> syn", function() {deepEqual( Stem("syns"), "syn");});
test("syntes -> synt", function() {deepEqual( Stem("syntes"), "synt");});
test("syntyke -> syntyk", function() {deepEqual( Stem("syntyke"), "syntyk");});
test("synzygus -> synzygus", function() {deepEqual( Stem("synzygus"), "synzygus");});
test("syr -> syr", function() {deepEqual( Stem("syr"), "syr");});
test("syrakus -> syrakus", function() {deepEqual( Stem("syrakus"), "syrakus");});
test("syrede -> syred", function() {deepEqual( Stem("syrede"), "syred");});
test("syrer -> syr", function() {deepEqual( Stem("syrer"), "syr");});
test("syreren -> syr", function() {deepEqual( Stem("syreren"), "syr");});
test("syrerne -> syr", function() {deepEqual( Stem("syrerne"), "syr");});
test("syret -> syr", function() {deepEqual( Stem("syret"), "syr");});
test("syrien -> syri", function() {deepEqual( Stem("syrien"), "syri");});
test("syriens -> syri", function() {deepEqual( Stem("syriens"), "syri");});
test("syrofønikerinde -> syrofønikerind", function() {deepEqual( Stem("syrofønikerinde"), "syrofønikerind");});
test("syrten -> syrt", function() {deepEqual( Stem("syrten"), "syrt");});
test("sys -> sys", function() {deepEqual( Stem("sys"), "sys");});
test("syslede -> sysled", function() {deepEqual( Stem("syslede"), "sysled");});
test("sysler -> sysl", function() {deepEqual( Stem("sysler"), "sysl");});
test("sysselsat -> sysselsat", function() {deepEqual( Stem("sysselsat"), "sysselsat");});
test("sysselsatte -> sysselsat", function() {deepEqual( Stem("sysselsatte"), "sysselsat");});
test("sytråde -> sytråd", function() {deepEqual( Stem("sytråde"), "sytråd");});
test("sytten -> syt", function() {deepEqual( Stem("sytten"), "syt");});
test("syttende -> syt", function() {deepEqual( Stem("syttende"), "syt");});
test("syv -> syv", function() {deepEqual( Stem("syv"), "syv");});
test("syvende -> syv", function() {deepEqual( Stem("syvende"), "syv");});
test("syvendedagen -> syvendedag", function() {deepEqual( Stem("syvendedagen"), "syvendedag");});
test("syvfold -> syvfold", function() {deepEqual( Stem("syvfold"), "syvfold");});
test("syvogtyvende -> syvogtyv", function() {deepEqual( Stem("syvogtyvende"), "syvogtyv");});
test("syvstjernen -> syvstjern", function() {deepEqual( Stem("syvstjernen"), "syvstjern");});
test("syvstjernens -> syvstjern", function() {deepEqual( Stem("syvstjernens"), "syvstjern");});
test("syvsønnemoder -> syvsønnemod", function() {deepEqual( Stem("syvsønnemoder"), "syvsønnemod");});
test("syvårs -> syvår", function() {deepEqual( Stem("syvårs"), "syvår");});
test("så -> så", function() {deepEqual( Stem("så"), "så");});
test("sådan -> sådan", function() {deepEqual( Stem("sådan"), "sådan");});
test("sådanne -> sådan", function() {deepEqual( Stem("sådanne"), "sådan");});
test("sådannes -> sådan", function() {deepEqual( Stem("sådannes"), "sådan");});
test("sådant -> sådant", function() {deepEqual( Stem("sådant"), "sådant");});
test("såed -> såed", function() {deepEqual( Stem("såed"), "såed");});
test("såede -> såed", function() {deepEqual( Stem("såede"), "såed");});
test("såes -> såes", function() {deepEqual( Stem("såes"), "såes");});
test("sået -> sået", function() {deepEqual( Stem("sået"), "sået");});
test("såfremt -> såfremt", function() {deepEqual( Stem("såfremt"), "såfremt");});
test("såkaldte -> såkald", function() {deepEqual( Stem("såkaldte"), "såkald");});
test("sålang -> sålang", function() {deepEqual( Stem("sålang"), "sålang");});
test("således -> såled", function() {deepEqual( Stem("således"), "såled");});
test("såledesfor -> såledesfor", function() {deepEqual( Stem("såledesfor"), "såledesfor");});
test("såleds -> såled", function() {deepEqual( Stem("såleds"), "såled");});
test("sålidt -> sålid", function() {deepEqual( Stem("sålidt"), "sålid");});
test("sålænge -> sålæng", function() {deepEqual( Stem("sålænge"), "sålæng");});
test("sår -> sår", function() {deepEqual( Stem("sår"), "sår");});
test("såre -> sår", function() {deepEqual( Stem("såre"), "sår");});
test("såred -> såred", function() {deepEqual( Stem("såred"), "såred");});
test("sårede -> såred", function() {deepEqual( Stem("sårede"), "såred");});
test("såredes -> såred", function() {deepEqual( Stem("såredes"), "såred");});
test("sårende -> sår", function() {deepEqual( Stem("sårende"), "sår");});
test("sårer -> sår", function() {deepEqual( Stem("sårer"), "sår");});
test("såret -> sår", function() {deepEqual( Stem("såret"), "sår");});
test("sårfeber -> sårfeb", function() {deepEqual( Stem("sårfeber"), "sårfeb");});
test("sårlæge -> sårlæg", function() {deepEqual( Stem("sårlæge"), "sårlæg");});
test("sås -> sås", function() {deepEqual( Stem("sås"), "sås");});
test("såsom -> såsom", function() {deepEqual( Stem("såsom"), "såsom");});
test("såsæd -> såsæd", function() {deepEqual( Stem("såsæd"), "såsæd");});
test("såtid -> såtid", function() {deepEqual( Stem("såtid"), "såtid");});
test("såvel -> såvel", function() {deepEqual( Stem("såvel"), "såvel");});
test("såvidt -> såvid", function() {deepEqual( Stem("såvidt"), "såvid");});
test("såvogter -> såvog", function() {deepEqual( Stem("såvogter"), "såvog");});
test("sååledes -> sååled", function() {deepEqual( Stem("sååledes"), "sååled");});
test("sæbe -> sæb", function() {deepEqual( Stem("sæbe"), "sæb");});
test("sæd -> sæd", function() {deepEqual( Stem("sæd"), "sæd");});
test("sædart -> sædart", function() {deepEqual( Stem("sædart"), "sædart");});
test("sæde -> sæd", function() {deepEqual( Stem("sæde"), "sæd");});
test("sædemand -> sædemand", function() {deepEqual( Stem("sædemand"), "sædemand");});
test("sædemanden -> sædemand", function() {deepEqual( Stem("sædemanden"), "sædemand");});
test("sædemark -> sædemark", function() {deepEqual( Stem("sædemark"), "sædemark");});
test("sæden -> sæd", function() {deepEqual( Stem("sæden"), "sæd");});
test("sædene -> sæd", function() {deepEqual( Stem("sædene"), "sæd");});
test("sæder -> sæd", function() {deepEqual( Stem("sæder"), "sæd");});
test("sædet -> sæd", function() {deepEqual( Stem("sædet"), "sæd");});
test("sædvane -> sædvan", function() {deepEqual( Stem("sædvane"), "sædvan");});
test("sædvanlig -> sædvan", function() {deepEqual( Stem("sædvanlig"), "sædvan");});
test("sædvanlige -> sædvan", function() {deepEqual( Stem("sædvanlige"), "sædvan");});
test("sædvanligt -> sædvan", function() {deepEqual( Stem("sædvanligt"), "sædvan");});
test("sæk -> sæk", function() {deepEqual( Stem("sæk"), "sæk");});
test("sække -> sæk", function() {deepEqual( Stem("sække"), "sæk");});
test("sækken -> sæk", function() {deepEqual( Stem("sækken"), "sæk");});
test("sækkene -> sæk", function() {deepEqual( Stem("sækkene"), "sæk");});
test("sækkepiber -> sækkepib", function() {deepEqual( Stem("sækkepiber"), "sækkepib");});
test("sælg -> sælg", function() {deepEqual( Stem("sælg"), "sælg");});
test("sælge -> sælg", function() {deepEqual( Stem("sælge"), "sælg");});
test("sælger -> sælg", function() {deepEqual( Stem("sælger"), "sælg");});
test("sælgeren -> sælg", function() {deepEqual( Stem("sælgeren"), "sælg");});
test("sælgerne -> sælg", function() {deepEqual( Stem("sælgerne"), "sælg");});
test("sælges -> sælg", function() {deepEqual( Stem("sælges"), "sælg");});
test("sælsomme -> sælsom", function() {deepEqual( Stem("sælsomme"), "sælsom");});
test("sælsomste -> sælsomst", function() {deepEqual( Stem("sælsomste"), "sælsomst");});
test("sælsomt -> sælsomt", function() {deepEqual( Stem("sælsomt"), "sælsomt");});
test("sænk -> sænk", function() {deepEqual( Stem("sænk"), "sænk");});
test("sænkede -> sænked", function() {deepEqual( Stem("sænkede"), "sænked");});
test("sænkedes -> sænked", function() {deepEqual( Stem("sænkedes"), "sænked");});
test("sænker -> sænk", function() {deepEqual( Stem("sænker"), "sænk");});
test("sænkes -> sænk", function() {deepEqual( Stem("sænkes"), "sænk");});
test("sænket -> sænk", function() {deepEqual( Stem("sænket"), "sænk");});
test("sænkningen -> sænkning", function() {deepEqual( Stem("sænkningen"), "sænkning");});
test("sære -> sær", function() {deepEqual( Stem("sære"), "sær");});
test("særlig -> sær", function() {deepEqual( Stem("særlig"), "sær");});
test("særlige -> sær", function() {deepEqual( Stem("særlige"), "sær");});
test("særligt -> sær", function() {deepEqual( Stem("særligt"), "sær");});
test("særlingen -> særling", function() {deepEqual( Stem("særlingen"), "særling");});
test("særskilt -> særskilt", function() {deepEqual( Stem("særskilt"), "særskilt");});
test("sært -> sært", function() {deepEqual( Stem("sært"), "sært");});
test("sæt -> sæt", function() {deepEqual( Stem("sæt"), "sæt");});
test("sætfe -> sætf", function() {deepEqual( Stem("sætfe"), "sætf");});
test("sætte -> sæt", function() {deepEqual( Stem("sætte"), "sæt");});
test("sætter -> sæt", function() {deepEqual( Stem("sætter"), "sæt");});
test("sættes -> sæt", function() {deepEqual( Stem("sættes"), "sæt");});
test("sættet -> sæt", function() {deepEqual( Stem("sættet"), "sæt");});
test("sø -> sø", function() {deepEqual( Stem("sø"), "sø");});
test("søbredden -> søbred", function() {deepEqual( Stem("søbredden"), "søbred");});
test("sød -> sød", function() {deepEqual( Stem("sød"), "sød");});
test("søde -> sød", function() {deepEqual( Stem("søde"), "sød");});
test("sødere -> sød", function() {deepEqual( Stem("sødere"), "sød");});
test("sødme -> sødm", function() {deepEqual( Stem("sødme"), "sødm");});
test("sødmælk -> sødmælk", function() {deepEqual( Stem("sødmælk"), "sødmælk");});
test("sødt -> sødt", function() {deepEqual( Stem("sødt"), "sødt");});
test("søen -> søen", function() {deepEqual( Stem("søen"), "søen");});
test("søfarere -> søfar", function() {deepEqual( Stem("søfarere"), "søfar");});
test("søfolk -> søfolk", function() {deepEqual( Stem("søfolk"), "søfolk");});
test("søg -> søg", function() {deepEqual( Stem("søg"), "søg");});
test("søge -> søg", function() {deepEqual( Stem("søge"), "søg");});
test("søgende -> søg", function() {deepEqual( Stem("søgende"), "søg");});
test("søger -> søg", function() {deepEqual( Stem("søger"), "søg");});
test("søges -> søg", function() {deepEqual( Stem("søges"), "søg");});
test("søgt -> søgt", function() {deepEqual( Stem("søgt"), "søgt");});
test("søgte -> søgt", function() {deepEqual( Stem("søgte"), "søgt");});
test("søh -> søh", function() {deepEqual( Stem("søh"), "søh");});
test("søjle -> søjl", function() {deepEqual( Stem("søjle"), "søjl");});
test("søjleboved -> søjleboved", function() {deepEqual( Stem("søjleboved"), "søjleboved");});
test("søjlegang -> søjlegang", function() {deepEqual( Stem("søjlegang"), "søjlegang");});
test("søjlegange -> søjlegang", function() {deepEqual( Stem("søjlegange"), "søjlegang");});
test("søjlegangen -> søjlegang", function() {deepEqual( Stem("søjlegangen"), "søjlegang");});
test("søjlehallen -> søjlehal", function() {deepEqual( Stem("søjlehallen"), "søjlehal");});
test("søjlehoved -> søjlehoved", function() {deepEqual( Stem("søjlehoved"), "søjlehoved");});
test("søjlehovedeme -> søjlehovedem", function() {deepEqual( Stem("søjlehovedeme"), "søjlehovedem");});
test("søjlehoveder -> søjlehoved", function() {deepEqual( Stem("søjlehoveder"), "søjlehoved");});
test("søjlehovederne -> søjlehoved", function() {deepEqual( Stem("søjlehovederne"), "søjlehoved");});
test("søjlehovedet -> søjlehoved", function() {deepEqual( Stem("søjlehovedet"), "søjlehoved");});
test("søjlen -> søjl", function() {deepEqual( Stem("søjlen"), "søjl");});
test("søjler -> søjl", function() {deepEqual( Stem("søjler"), "søjl");});
test("søjlerne -> søjl", function() {deepEqual( Stem("søjlerne"), "søjl");});
test("sølen -> søl", function() {deepEqual( Stem("sølen"), "søl");});
test("søler -> søl", function() {deepEqual( Stem("søler"), "søl");});
test("søles -> søl", function() {deepEqual( Stem("søles"), "søl");});
test("sølet -> søl", function() {deepEqual( Stem("sølet"), "søl");});
test("sølv -> sølv", function() {deepEqual( Stem("sølv"), "sølv");});
test("sølvbakker -> sølvbak", function() {deepEqual( Stem("sølvbakker"), "sølvbak");});
test("sølvbilleders -> sølvbilled", function() {deepEqual( Stem("sølvbilleders"), "sølvbilled");});
test("sølvbordene -> sølvbord", function() {deepEqual( Stem("sølvbordene"), "sølvbord");});
test("sølvbæger -> sølvbæg", function() {deepEqual( Stem("sølvbæger"), "sølvbæg");});
test("sølvbægre -> sølvbægr", function() {deepEqual( Stem("sølvbægre"), "sølvbægr");});
test("sølvbægrene -> sølvbægr", function() {deepEqual( Stem("sølvbægrene"), "sølvbægr");});
test("sølvdivaner -> sølvdivan", function() {deepEqual( Stem("sølvdivaner"), "sølvdivan");});
test("sølverhår -> sølverhår", function() {deepEqual( Stem("sølverhår"), "sølverhår");});
test("sølvet -> sølv", function() {deepEqual( Stem("sølvet"), "sølv");});
test("sølvfad -> sølvfad", function() {deepEqual( Stem("sølvfad"), "sølvfad");});
test("sølvfade -> sølvfad", function() {deepEqual( Stem("sølvfade"), "sølvfad");});
test("sølvkar -> sølvkar", function() {deepEqual( Stem("sølvkar"), "sølvkar");});
test("sølvkarrene -> sølvkar", function() {deepEqual( Stem("sølvkarrene"), "sølvkar");});
test("sølvkæder -> sølvkæd", function() {deepEqual( Stem("sølvkæder"), "sølvkæd");});
test("sølvlysestagerne -> sølvlysestag", function() {deepEqual( Stem("sølvlysestagerne"), "sølvlysestag");});
test("sølvovertræk -> sølvovertræk", function() {deepEqual( Stem("sølvovertræk"), "sølvovertræk");});
test("sølvpenge -> sølvpeng", function() {deepEqual( Stem("sølvpenge"), "sølvpeng");});
test("sølvpengene -> sølvpeng", function() {deepEqual( Stem("sølvpengene"), "sølvpeng");});
test("sølvsekel -> sølvsekel", function() {deepEqual( Stem("sølvsekel"), "sølvsekel");});
test("sølvskattene -> sølvskat", function() {deepEqual( Stem("sølvskattene"), "sølvskat");});
test("sølvskål -> sølvskål", function() {deepEqual( Stem("sølvskål"), "sølvskål");});
test("sølvskåle -> sølvskål", function() {deepEqual( Stem("sølvskåle"), "sølvskål");});
test("sølvslagger -> sølvslag", function() {deepEqual( Stem("sølvslagger"), "sølvslag");});
test("sølvsmed -> sølvsmed", function() {deepEqual( Stem("sølvsmed"), "sølvsmed");});
test("sølvsnoren -> sølvsnor", function() {deepEqual( Stem("sølvsnoren"), "sølvsnor");});
test("sølvstykker -> sølvstyk", function() {deepEqual( Stem("sølvstykker"), "sølvstyk");});
test("sølvstænger -> sølvstæng", function() {deepEqual( Stem("sølvstænger"), "sølvstæng");});
test("sølvtalenter -> sølvtalent", function() {deepEqual( Stem("sølvtalenter"), "sølvtalent");});
test("sølvtingene -> sølvting", function() {deepEqual( Stem("sølvtingene"), "sølvting");});
test("sølvtrompeter -> sølvtrompet", function() {deepEqual( Stem("sølvtrompeter"), "sølvtrompet");});
test("sølvtøj -> sølvtøj", function() {deepEqual( Stem("sølvtøj"), "sølvtøj");});
test("søm -> søm", function() {deepEqual( Stem("søm"), "søm");});
test("sømmede -> sømmed", function() {deepEqual( Stem("sømmede"), "sømmed");});
test("sømmelig -> søm", function() {deepEqual( Stem("sømmelig"), "søm");});
test("sømmelighed -> søm", function() {deepEqual( Stem("sømmelighed"), "søm");});
test("sømmeligt -> søm", function() {deepEqual( Stem("sømmeligt"), "søm");});
test("sømmer -> søm", function() {deepEqual( Stem("sømmer"), "søm");});
test("sømændene -> sømænd", function() {deepEqual( Stem("sømændene"), "sømænd");});
test("søn -> søn", function() {deepEqual( Stem("søn"), "søn");});
test("sønahat -> sønahat", function() {deepEqual( Stem("sønahat"), "sønahat");});
test("sønden -> sønd", function() {deepEqual( Stem("sønden"), "sønd");});
test("søndenstorm -> søndenstorm", function() {deepEqual( Stem("søndenstorm"), "søndenstorm");});
test("søndenvind -> søndenvind", function() {deepEqual( Stem("søndenvind"), "søndenvind");});
test("søndenvinden -> søndenvind", function() {deepEqual( Stem("søndenvinden"), "søndenvind");});
test("sønder -> sønd", function() {deepEqual( Stem("sønder"), "sønd");});
test("sønderbrudt -> sønderbrud", function() {deepEqual( Stem("sønderbrudt"), "sønderbrud");});
test("sønderbrudte -> sønderbrud", function() {deepEqual( Stem("sønderbrudte"), "sønderbrud");});
test("sønderbryde -> sønderbryd", function() {deepEqual( Stem("sønderbryde"), "sønderbryd");});
test("sønderbryder -> sønderbryd", function() {deepEqual( Stem("sønderbryder"), "sønderbryd");});
test("sønderbrydes -> sønderbryd", function() {deepEqual( Stem("sønderbrydes"), "sønderbryd");});
test("sønderbrød -> sønderbrød", function() {deepEqual( Stem("sønderbrød"), "sønderbrød");});
test("sønderhugge -> sønderhug", function() {deepEqual( Stem("sønderhugge"), "sønderhug");});
test("sønderhuggede -> sønderhugged", function() {deepEqual( Stem("sønderhuggede"), "sønderhugged");});
test("sønderhugger -> sønderhug", function() {deepEqual( Stem("sønderhugger"), "sønderhug");});
test("sønderknuse -> sønderknus", function() {deepEqual( Stem("sønderknuse"), "sønderknus");});
test("sønderknuses -> sønderknus", function() {deepEqual( Stem("sønderknuses"), "sønderknus");});
test("sønderknust -> sønderknust", function() {deepEqual( Stem("sønderknust"), "sønderknust");});
test("sønderpå -> sønderpå", function() {deepEqual( Stem("sønderpå"), "sønderpå");});
test("sønderrev -> sønderrev", function() {deepEqual( Stem("sønderrev"), "sønderrev");});
test("sønderreve -> sønderrev", function() {deepEqual( Stem("sønderreve"), "sønderrev");});
test("sønderreves -> sønderrev", function() {deepEqual( Stem("sønderreves"), "sønderrev");});
test("sønderrevet -> sønderrev", function() {deepEqual( Stem("sønderrevet"), "sønderrev");});
test("sønderrevne -> sønderrevn", function() {deepEqual( Stem("sønderrevne"), "sønderrevn");});
test("sønderriv -> sønderriv", function() {deepEqual( Stem("sønderriv"), "sønderriv");});
test("sønderrive -> sønderriv", function() {deepEqual( Stem("sønderrive"), "sønderriv");});
test("sønderriver -> sønderriv", function() {deepEqual( Stem("sønderriver"), "sønderriv");});
test("sønderrives -> sønderriv", function() {deepEqual( Stem("sønderrives"), "sønderriv");});
test("sønderskårne -> sønderskårn", function() {deepEqual( Stem("sønderskårne"), "sønderskårn");});
test("sønderskære -> sønderskær", function() {deepEqual( Stem("sønderskære"), "sønderskær");});
test("sønderskærelsen -> sønderskær", function() {deepEqual( Stem("sønderskærelsen"), "sønderskær");});
test("sønderslider -> sønderslid", function() {deepEqual( Stem("sønderslider"), "sønderslid");});
test("sønderslides -> sønderslid", function() {deepEqual( Stem("sønderslides"), "sønderslid");});
test("sønderslidt -> sønderslid", function() {deepEqual( Stem("sønderslidt"), "sønderslid");});
test("sønderslidte -> sønderslid", function() {deepEqual( Stem("sønderslidte"), "sønderslid");});
test("sønderslog -> sønderslog", function() {deepEqual( Stem("sønderslog"), "sønderslog");});
test("sønderslå -> sønderslå", function() {deepEqual( Stem("sønderslå"), "sønderslå");});
test("sønderslået -> sønderslå", function() {deepEqual( Stem("sønderslået"), "sønderslå");});
test("sønderslår -> sønderslår", function() {deepEqual( Stem("sønderslår"), "sønderslår");});
test("sønderslås -> sønderslå", function() {deepEqual( Stem("sønderslås"), "sønderslå");});
test("søndertrådte -> søndertråd", function() {deepEqual( Stem("søndertrådte"), "søndertråd");});
test("søndertræde -> søndertræd", function() {deepEqual( Stem("søndertræde"), "søndertræd");});
test("søndre -> søndr", function() {deepEqual( Stem("søndre"), "søndr");});
test("søndrede -> søndred", function() {deepEqual( Stem("søndrede"), "søndred");});
test("søndrer -> søndr", function() {deepEqual( Stem("søndrer"), "søndr");});
test("sønelkana -> sønelkana", function() {deepEqual( Stem("sønelkana"), "sønelkana");});
test("sønnedatter -> sønnedat", function() {deepEqual( Stem("sønnedatter"), "sønnedat");});
test("sønnedatters -> sønnedat", function() {deepEqual( Stem("sønnedatters"), "sønnedat");});
test("sønnedøtre -> sønnedøtr", function() {deepEqual( Stem("sønnedøtre"), "sønnedøtr");});
test("sønnekone -> sønnekon", function() {deepEqual( Stem("sønnekone"), "sønnekon");});
test("sønnekoner -> sønnekon", function() {deepEqual( Stem("sønnekoner"), "sønnekon");});
test("sønnekones -> sønnekon", function() {deepEqual( Stem("sønnekones"), "sønnekon");});
test("sønnen -> søn", function() {deepEqual( Stem("sønnen"), "søn");});
test("sønnens -> søn", function() {deepEqual( Stem("sønnens"), "søn");});
test("sønner -> søn", function() {deepEqual( Stem("sønner"), "søn");});
test("sønnerne -> søn", function() {deepEqual( Stem("sønnerne"), "søn");});
test("sønnernes -> søn", function() {deepEqual( Stem("sønnernes"), "søn");});
test("sønners -> søn", function() {deepEqual( Stem("sønners"), "søn");});
test("sønnervar -> sønnervar", function() {deepEqual( Stem("sønnervar"), "sønnervar");});
test("sønnesøn -> sønnesøn", function() {deepEqual( Stem("sønnesøn"), "sønnesøn");});
test("sønnesønner -> sønnesøn", function() {deepEqual( Stem("sønnesønner"), "sønnesøn");});
test("sønnesøo -> sønnesøo", function() {deepEqual( Stem("sønnesøo"), "sønnesøo");});
test("sønneudkårelse -> sønneudkår", function() {deepEqual( Stem("sønneudkårelse"), "sønneudkår");});
test("sønneudkårelsen -> sønneudkår", function() {deepEqual( Stem("sønneudkårelsen"), "sønneudkår");});
test("sønneudkårelses -> sønneudkår", function() {deepEqual( Stem("sønneudkårelses"), "sønneudkår");});
test("sønnner -> sønn", function() {deepEqual( Stem("sønnner"), "sønn");});
test("sønoer -> søno", function() {deepEqual( Stem("sønoer"), "søno");});
test("søns -> søn", function() {deepEqual( Stem("søns"), "søn");});
test("søoner -> søon", function() {deepEqual( Stem("søoner"), "søon");});
test("sørg -> sørg", function() {deepEqual( Stem("sørg"), "sørg");});
test("sørge -> sørg", function() {deepEqual( Stem("sørge"), "sørg");});
test("sørgebrød -> sørgebrød", function() {deepEqual( Stem("sørgebrød"), "sørgebrød");});
test("sørged -> sørged", function() {deepEqual( Stem("sørged"), "sørged");});
test("sørgedage -> sørgedag", function() {deepEqual( Stem("sørgedage"), "sørgedag");});
test("sørgede -> sørged", function() {deepEqual( Stem("sørgede"), "sørged");});
test("sørgedragt -> sørgedrag", function() {deepEqual( Stem("sørgedragt"), "sørgedrag");});
test("sørgefest -> sørgefest", function() {deepEqual( Stem("sørgefest"), "sørgefest");});
test("sørgehus -> sørgehus", function() {deepEqual( Stem("sørgehus"), "sørgehus");});
test("sørgehuset -> sørgehus", function() {deepEqual( Stem("sørgehuset"), "sørgehus");});
test("sørgeklæde -> sørgeklæd", function() {deepEqual( Stem("sørgeklæde"), "sørgeklæd");});
test("sørgeklæder -> sørgeklæd", function() {deepEqual( Stem("sørgeklæder"), "sørgeklæd");});
test("sørgeklæderne -> sørgeklæd", function() {deepEqual( Stem("sørgeklæderne"), "sørgeklæd");});
test("sørgeklædet -> sørgeklæd", function() {deepEqual( Stem("sørgeklædet"), "sørgeklæd");});
test("sørgeklædning -> sørgeklædning", function() {deepEqual( Stem("sørgeklædning"), "sørgeklædning");});
test("sørgeklædt -> sørgeklæd", function() {deepEqual( Stem("sørgeklædt"), "sørgeklæd");});
test("sørgeklædte -> sørgeklæd", function() {deepEqual( Stem("sørgeklædte"), "sørgeklæd");});
test("sørgende -> sørg", function() {deepEqual( Stem("sørgende"), "sørg");});
test("sørger -> sørg", function() {deepEqual( Stem("sørger"), "sørg");});
test("sørget -> sørg", function() {deepEqual( Stem("sørget"), "sørg");});
test("sørgetiden -> sørgetid", function() {deepEqual( Stem("sørgetiden"), "sørgetid");});
test("sørgetoget -> sørgetog", function() {deepEqual( Stem("sørgetoget"), "sørgetog");});
test("søskendebarn -> søskendebarn", function() {deepEqual( Stem("søskendebarn"), "søskendebarn");});
test("søster -> søst", function() {deepEqual( Stem("søster"), "søst");});
test("søsteren -> søst", function() {deepEqual( Stem("søsteren"), "søst");});
test("søsterens -> søst", function() {deepEqual( Stem("søsterens"), "søst");});
test("søsters -> søst", function() {deepEqual( Stem("søsters"), "søst");});
test("søstersøn -> søstersøn", function() {deepEqual( Stem("søstersøn"), "søstersøn");});
test("søstre -> søstr", function() {deepEqual( Stem("søstre"), "søstr");});
test("søstrene -> søstr", function() {deepEqual( Stem("søstrene"), "søstr");});
test("søstres -> søstr", function() {deepEqual( Stem("søstres"), "søstr");});
test("søvejen -> søvej", function() {deepEqual( Stem("søvejen"), "søvej");});
test("søvn -> søvn", function() {deepEqual( Stem("søvn"), "søvn");});
test("søvne -> søvn", function() {deepEqual( Stem("søvne"), "søvn");});
test("søvnen -> søvn", function() {deepEqual( Stem("søvnen"), "søvn");});
test("søvnens -> søvn", function() {deepEqual( Stem("søvnens"), "søvn");});
test("t -> t", function() {deepEqual( Stem("t"), "t");});
test("ta -> ta", function() {deepEqual( Stem("ta"), "ta");});
test("tab -> tab", function() {deepEqual( Stem("tab"), "tab");});
test("tabbaots -> tabbaot", function() {deepEqual( Stem("tabbaots"), "tabbaot");});
test("tabbat -> tabbat", function() {deepEqual( Stem("tabbat"), "tabbat");});
test("tabe -> tab", function() {deepEqual( Stem("tabe"), "tab");});
test("tabeals -> tabeal", function() {deepEqual( Stem("tabeals"), "tabeal");});
test("taber -> tab", function() {deepEqual( Stem("taber"), "tab");});
test("tabera -> tabera", function() {deepEqual( Stem("tabera"), "tabera");});
test("tabernakel -> tabernakel", function() {deepEqual( Stem("tabernakel"), "tabernakel");});
test("tabernakels -> tabernakel", function() {deepEqual( Stem("tabernakels"), "tabernakel");});
test("tabernaklet -> tabernakl", function() {deepEqual( Stem("tabernaklet"), "tabernakl");});
test("tabernæ -> tabernæ", function() {deepEqual( Stem("tabernæ"), "tabernæ");});
test("tabitha -> tabitha", function() {deepEqual( Stem("tabitha"), "tabitha");});
test("tabor -> tabor", function() {deepEqual( Stem("tabor"), "tabor");});
test("taboregen -> taboreg", function() {deepEqual( Stem("taboregen"), "taboreg");});
test("tabors -> tabor", function() {deepEqual( Stem("tabors"), "tabor");});
test("tabrimmon -> tabrimmon", function() {deepEqual( Stem("tabrimmon"), "tabrimmon");});
test("tabt -> tabt", function() {deepEqual( Stem("tabt"), "tabt");});
test("tabte -> tabt", function() {deepEqual( Stem("tabte"), "tabt");});
test("tadmor -> tadmor", function() {deepEqual( Stem("tadmor"), "tadmor");});
test("tafat -> tafat", function() {deepEqual( Stem("tafat"), "tafat");});
test("tag -> tag", function() {deepEqual( Stem("tag"), "tag");});
test("tagbygning -> tagbygning", function() {deepEqual( Stem("tagbygning"), "tagbygning");});
test("tagbygningen -> tagbygning", function() {deepEqual( Stem("tagbygningen"), "tagbygning");});
test("tagdryp -> tagdryp", function() {deepEqual( Stem("tagdryp"), "tagdryp");});
test("tage -> tag", function() {deepEqual( Stem("tage"), "tag");});
test("tagen -> tag", function() {deepEqual( Stem("tagen"), "tag");});
test("tagene -> tag", function() {deepEqual( Stem("tagene"), "tag");});
test("tager -> tag", function() {deepEqual( Stem("tager"), "tag");});
test("tages -> tag", function() {deepEqual( Stem("tages"), "tag");});
test("taget -> tag", function() {deepEqual( Stem("taget"), "tag");});
test("tagne -> tagn", function() {deepEqual( Stem("tagne"), "tagn");});
test("tags -> tag", function() {deepEqual( Stem("tags"), "tag");});
test("tagstenene -> tagsten", function() {deepEqual( Stem("tagstenene"), "tagsten");});
test("tahan -> tahan", function() {deepEqual( Stem("tahan"), "tahan");});
test("tahaniternes -> tahanit", function() {deepEqual( Stem("tahaniternes"), "tahanit");});
test("tahasj -> tahasj", function() {deepEqual( Stem("tahasj"), "tahasj");});
test("tahasjskind -> tahasjskind", function() {deepEqual( Stem("tahasjskind"), "tahasjskind");});
test("tahat -> tahat", function() {deepEqual( Stem("tahat"), "tahat");});
test("taiede -> taied", function() {deepEqual( Stem("taiede"), "taied");});
test("tak -> tak", function() {deepEqual( Stem("tak"), "tak");});
test("takke -> tak", function() {deepEqual( Stem("takke"), "tak");});
test("takkede -> takked", function() {deepEqual( Stem("takkede"), "takked");});
test("takkegave -> takkegav", function() {deepEqual( Stem("takkegave"), "takkegav");});
test("takkende -> tak", function() {deepEqual( Stem("takkende"), "tak");});
test("takker -> tak", function() {deepEqual( Stem("takker"), "tak");});
test("takkesang -> takkesang", function() {deepEqual( Stem("takkesang"), "takkesang");});
test("takkesangen -> takkesang", function() {deepEqual( Stem("takkesangen"), "takkesang");});
test("takkesangene -> takkesang", function() {deepEqual( Stem("takkesangene"), "takkesang");});
test("takket -> tak", function() {deepEqual( Stem("takket"), "tak");});
test("takmasfuglen -> takmasfugl", function() {deepEqual( Stem("takmasfuglen"), "takmasfugl");});
test("taknemmelige -> taknem", function() {deepEqual( Stem("taknemmelige"), "taknem");});
test("taknemmelighed -> taknem", function() {deepEqual( Stem("taknemmelighed"), "taknem");});
test("takoffer -> takof", function() {deepEqual( Stem("takoffer"), "takof");});
test("takofferet -> takof", function() {deepEqual( Stem("takofferet"), "takof");});
test("takofferets -> takof", function() {deepEqual( Stem("takofferets"), "takof");});
test("takofferlammets -> takofferlam", function() {deepEqual( Stem("takofferlammets"), "takofferlam");});
test("takofferoksen -> takofferoks", function() {deepEqual( Stem("takofferoksen"), "takofferoks");});
test("takoffers -> takof", function() {deepEqual( Stem("takoffers"), "takof");});
test("takofre -> takofr", function() {deepEqual( Stem("takofre"), "takofr");});
test("takofrene -> takofr", function() {deepEqual( Stem("takofrene"), "takofr");});
test("takofrenes -> takofr", function() {deepEqual( Stem("takofrenes"), "takofr");});
test("takpankes -> takpank", function() {deepEqual( Stem("takpankes"), "takpank");});
test("takpenes -> takp", function() {deepEqual( Stem("takpenes"), "takp");});
test("takpeness -> takpenes", function() {deepEqual( Stem("takpeness"), "takpenes");});
test("taksigelse -> taksig", function() {deepEqual( Stem("taksigelse"), "taksig");});
test("taksigelsen -> taksig", function() {deepEqual( Stem("taksigelsen"), "taksig");});
test("taksigelser -> taksig", function() {deepEqual( Stem("taksigelser"), "taksig");});
test("tal -> tal", function() {deepEqual( Stem("tal"), "tal");});
test("tale -> tal", function() {deepEqual( Stem("tale"), "tal");});
test("taled -> taled", function() {deepEqual( Stem("taled"), "taled");});
test("talede -> taled", function() {deepEqual( Stem("talede"), "taled");});
test("taledemed -> taledemed", function() {deepEqual( Stem("taledemed"), "taledemed");});
test("talen -> tal", function() {deepEqual( Stem("talen"), "tal");});
test("talende -> tal", function() {deepEqual( Stem("talende"), "tal");});
test("talent -> talent", function() {deepEqual( Stem("talent"), "talent");});
test("talenter -> talent", function() {deepEqual( Stem("talenter"), "talent");});
test("taler -> tal", function() {deepEqual( Stem("taler"), "tal");});
test("talers -> tal", function() {deepEqual( Stem("talers"), "tal");});
test("talerstol -> talerstol", function() {deepEqual( Stem("talerstol"), "talerstol");});
test("tales -> tal", function() {deepEqual( Stem("tales"), "tal");});
test("talet -> tal", function() {deepEqual( Stem("talet"), "tal");});
test("taleted -> taleted", function() {deepEqual( Stem("taleted"), "taleted");});
test("talitha -> talitha", function() {deepEqual( Stem("talitha"), "talitha");});
test("tallene -> tal", function() {deepEqual( Stem("tallene"), "tal");});
test("tallet -> tal", function() {deepEqual( Stem("tallet"), "tal");});
test("talløs -> talløs", function() {deepEqual( Stem("talløs"), "talløs");});
test("talløse -> talløs", function() {deepEqual( Stem("talløse"), "talløs");});
test("talmaj -> talmaj", function() {deepEqual( Stem("talmaj"), "talmaj");});
test("talmon -> talmon", function() {deepEqual( Stem("talmon"), "talmon");});
test("talmons -> talmon", function() {deepEqual( Stem("talmons"), "talmon");});
test("talrig -> talr", function() {deepEqual( Stem("talrig"), "talr");});
test("talrige -> talr", function() {deepEqual( Stem("talrige"), "talr");});
test("talrigere -> talr", function() {deepEqual( Stem("talrigere"), "talr");});
test("talrigt -> talr", function() {deepEqual( Stem("talrigt"), "talr");});
test("talsmand -> talsmand", function() {deepEqual( Stem("talsmand"), "talsmand");});
test("talsmanden -> talsmand", function() {deepEqual( Stem("talsmanden"), "talsmand");});
test("talsmænd -> talsmænd", function() {deepEqual( Stem("talsmænd"), "talsmænd");});
test("talt -> talt", function() {deepEqual( Stem("talt"), "talt");});
test("talte -> talt", function() {deepEqual( Stem("talte"), "talt");});
test("taltes -> talt", function() {deepEqual( Stem("taltes"), "talt");});
test("tamar -> tamar", function() {deepEqual( Stem("tamar"), "tamar");});
test("tamarisk -> tamarisk", function() {deepEqual( Stem("tamarisk"), "tamarisk");});
test("tamarisken -> tamarisk", function() {deepEqual( Stem("tamarisken"), "tamarisk");});
test("tammuz -> tammuz", function() {deepEqual( Stem("tammuz"), "tammuz");});
test("tand -> tand", function() {deepEqual( Stem("tand"), "tand");});
test("tande -> tand", function() {deepEqual( Stem("tande"), "tand");});
test("tanden -> tand", function() {deepEqual( Stem("tanden"), "tand");});
test("tang -> tang", function() {deepEqual( Stem("tang"), "tang");});
test("tanhumets -> tanhum", function() {deepEqual( Stem("tanhumets"), "tanhum");});
test("tanke -> tank", function() {deepEqual( Stem("tanke"), "tank");});
test("tankebilleder -> tankebilled", function() {deepEqual( Stem("tankebilleder"), "tankebilled");});
test("tankebygninger -> tankebygning", function() {deepEqual( Stem("tankebygninger"), "tankebygning");});
test("tankeløs -> tankeløs", function() {deepEqual( Stem("tankeløs"), "tankeløs");});
test("tankeløse -> tankeløs", function() {deepEqual( Stem("tankeløse"), "tankeløs");});
test("tankeløses -> tankeløs", function() {deepEqual( Stem("tankeløses"), "tankeløs");});
test("tankeløshed -> tankeløs", function() {deepEqual( Stem("tankeløshed"), "tankeløs");});
test("tankeløst -> tankeløs", function() {deepEqual( Stem("tankeløst"), "tankeløs");});
test("tanken -> tank", function() {deepEqual( Stem("tanken"), "tank");});
test("tanker -> tank", function() {deepEqual( Stem("tanker"), "tank");});
test("tankerne -> tank", function() {deepEqual( Stem("tankerne"), "tank");});
test("tankernes -> tank", function() {deepEqual( Stem("tankernes"), "tank");});
test("tankesprog -> tankesprog", function() {deepEqual( Stem("tankesprog"), "tankesprog");});
test("tant -> tant", function() {deepEqual( Stem("tant"), "tant");});
test("tappe -> tap", function() {deepEqual( Stem("tappe"), "tap");});
test("tapper -> tap", function() {deepEqual( Stem("tapper"), "tap");});
test("tappert -> tappert", function() {deepEqual( Stem("tappert"), "tappert");});
test("tappua -> tappua", function() {deepEqual( Stem("tappua"), "tappua");});
test("tapre -> tapr", function() {deepEqual( Stem("tapre"), "tapr");});
test("tapreste -> taprest", function() {deepEqual( Stem("tapreste"), "taprest");});
test("tar -> tar", function() {deepEqual( Stem("tar"), "tar");});
test("tara -> tara", function() {deepEqual( Stem("tara"), "tara");});
test("taras -> tara", function() {deepEqual( Stem("taras"), "tara");});
test("tarpeliterne -> tarpelit", function() {deepEqual( Stem("tarpeliterne"), "tarpelit");});
test("tarsis -> tarsis", function() {deepEqual( Stem("tarsis"), "tarsis");});
test("tarsiss -> tarsis", function() {deepEqual( Stem("tarsiss"), "tarsis");});
test("tarsisskib -> tarsisskib", function() {deepEqual( Stem("tarsisskib"), "tarsisskib");});
test("tarsisskibe -> tarsisskib", function() {deepEqual( Stem("tarsisskibe"), "tarsisskib");});
test("tarsisskibene -> tarsisskib", function() {deepEqual( Stem("tarsisskibene"), "tarsisskib");});
test("tarsjisj -> tarsjisj", function() {deepEqual( Stem("tarsjisj"), "tarsjisj");});
test("tarsus -> tarsus", function() {deepEqual( Stem("tarsus"), "tarsus");});
test("tartak -> tartak", function() {deepEqual( Stem("tartak"), "tartak");});
test("tartan -> tartan", function() {deepEqual( Stem("tartan"), "tartan");});
test("tarv -> tarv", function() {deepEqual( Stem("tarv"), "tarv");});
test("taske -> task", function() {deepEqual( Stem("taske"), "task");});
test("tasken -> task", function() {deepEqual( Stem("tasken"), "task");});
test("tasker -> task", function() {deepEqual( Stem("tasker"), "task");});
test("tatam -> tatam", function() {deepEqual( Stem("tatam"), "tatam");});
test("tattenaj -> tattenaj", function() {deepEqual( Stem("tattenaj"), "tattenaj");});
test("tav -> tav", function() {deepEqual( Stem("tav"), "tav");});
test("tavle -> tavl", function() {deepEqual( Stem("tavle"), "tavl");});
test("tavler -> tavl", function() {deepEqual( Stem("tavler"), "tavl");});
test("tavlerne -> tavl", function() {deepEqual( Stem("tavlerne"), "tavl");});
test("tavs -> tav", function() {deepEqual( Stem("tavs"), "tav");});
test("tavse -> tavs", function() {deepEqual( Stem("tavse"), "tavs");});
test("tavshed -> tavs", function() {deepEqual( Stem("tavshed"), "tavs");});
test("tddos -> tddos", function() {deepEqual( Stem("tddos"), "tddos");});
test("te -> te", function() {deepEqual( Stem("te"), "te");});
test("teatret -> teatr", function() {deepEqual( Stem("teatret"), "teatr");});
test("teba -> teba", function() {deepEqual( Stem("teba"), "teba");});
test("tebalja -> tebalja", function() {deepEqual( Stem("tebalja"), "tebalja");});
test("tebet -> teb", function() {deepEqual( Stem("tebet"), "teb");});
test("tebez -> tebez", function() {deepEqual( Stem("tebez"), "tebez");});
test("tede -> ted", function() {deepEqual( Stem("tede"), "ted");});
test("tegl -> tegl", function() {deepEqual( Stem("tegl"), "tegl");});
test("teglarbejdet -> teglarbejd", function() {deepEqual( Stem("teglarbejdet"), "teglarbejd");});
test("teglovnene -> teglovn", function() {deepEqual( Stem("teglovnene"), "teglovn");});
test("teglsten -> teglst", function() {deepEqual( Stem("teglsten"), "teglst");});
test("teglstensformen -> teglstensform", function() {deepEqual( Stem("teglstensformen"), "teglstensform");});
test("teglstensgulvets -> teglstensgulv", function() {deepEqual( Stem("teglstensgulvets"), "teglstensgulv");});
test("tegn -> tegn", function() {deepEqual( Stem("tegn"), "tegn");});
test("tegnene -> tegn", function() {deepEqual( Stem("tegnene"), "tegn");});
test("tegner -> tegn", function() {deepEqual( Stem("tegner"), "tegn");});
test("tegnet -> tegn", function() {deepEqual( Stem("tegnet"), "tegn");});
test("tegning -> tegning", function() {deepEqual( Stem("tegning"), "tegning");});
test("tegningen -> tegning", function() {deepEqual( Stem("tegningen"), "tegning");});
test("tegns -> tegn", function() {deepEqual( Stem("tegns"), "tegn");});
test("tegnsudlæggere -> tegnsudlæg", function() {deepEqual( Stem("tegnsudlæggere"), "tegnsudlæg");});
test("tegntydere -> tegntyd", function() {deepEqual( Stem("tegntydere"), "tegntyd");});
test("tehinna -> tehinna", function() {deepEqual( Stem("tehinna"), "tehinna");});
test("tek -> tek", function() {deepEqual( Stem("tek"), "tek");});
test("tekoa -> tekoa", function() {deepEqual( Stem("tekoa"), "tekoa");});
test("tekoas -> tekoa", function() {deepEqual( Stem("tekoas"), "tekoa");});
test("tel -> tel", function() {deepEqual( Stem("tel"), "tel");});
test("tela -> tela", function() {deepEqual( Stem("tela"), "tela");});
test("telaim -> telaim", function() {deepEqual( Stem("telaim"), "telaim");});
test("telam -> telam", function() {deepEqual( Stem("telam"), "telam");});
test("telassar -> telassar", function() {deepEqual( Stem("telassar"), "telassar");});
test("telem -> telem", function() {deepEqual( Stem("telem"), "telem");});
test("telt -> telt", function() {deepEqual( Stem("telt"), "telt");});
test("teltbo -> teltbo", function() {deepEqual( Stem("teltbo"), "teltbo");});
test("teltboernes -> teltbo", function() {deepEqual( Stem("teltboernes"), "teltbo");});
test("teltbolig -> teltbo", function() {deepEqual( Stem("teltbolig"), "teltbo");});
test("teltboligen -> teltbo", function() {deepEqual( Stem("teltboligen"), "teltbo");});
test("teltbyer -> teltby", function() {deepEqual( Stem("teltbyer"), "teltby");});
test("teltdække -> teltdæk", function() {deepEqual( Stem("teltdække"), "teltdæk");});
test("teltdækket -> teltdæk", function() {deepEqual( Stem("teltdækket"), "teltdæk");});
test("teltdækkets -> teltdæk", function() {deepEqual( Stem("teltdækkets"), "teltdæk");});
test("teltdøren -> teltdør", function() {deepEqual( Stem("teltdøren"), "teltdør");});
test("telte -> telt", function() {deepEqual( Stem("telte"), "telt");});
test("teltene -> telt", function() {deepEqual( Stem("teltene"), "telt");});
test("telter -> telt", function() {deepEqual( Stem("telter"), "telt");});
test("teltet -> telt", function() {deepEqual( Stem("teltet"), "telt");});
test("teltets -> telt", function() {deepEqual( Stem("teltets"), "telt");});
test("teltlejr -> teltlejr", function() {deepEqual( Stem("teltlejr"), "teltlejr");});
test("teltlejre -> teltlejr", function() {deepEqual( Stem("teltlejre"), "teltlejr");});
test("teltmagere -> teltmag", function() {deepEqual( Stem("teltmagere"), "teltmag");});
test("teltpæl -> teltpæl", function() {deepEqual( Stem("teltpæl"), "teltpæl");});
test("teltpæle -> teltpæl", function() {deepEqual( Stem("teltpæle"), "teltpæl");});
test("teltpælen -> teltpæl", function() {deepEqual( Stem("teltpælen"), "teltpæl");});
test("teltpælene -> teltpæl", function() {deepEqual( Stem("teltpælene"), "teltpæl");});
test("teltreb -> teltreb", function() {deepEqual( Stem("teltreb"), "teltreb");});
test("telttæpper -> telttæp", function() {deepEqual( Stem("telttæpper"), "telttæp");});
test("telttæpperne -> telttæp", function() {deepEqual( Stem("telttæpperne"), "telttæp");});
test("telttæppernes -> telttæp", function() {deepEqual( Stem("telttæppernes"), "telttæp");});
test("tema -> tema", function() {deepEqual( Stem("tema"), "tema");});
test("teman -> teman", function() {deepEqual( Stem("teman"), "teman");});
test("temaniten -> temanit", function() {deepEqual( Stem("temaniten"), "temanit");});
test("temaniternes -> temanit", function() {deepEqual( Stem("temaniternes"), "temanit");});
test("temans -> teman", function() {deepEqual( Stem("temans"), "teman");});
test("temas -> tema", function() {deepEqual( Stem("temas"), "tema");});
test("teme -> tem", function() {deepEqual( Stem("teme"), "tem");});
test("tempel -> tempel", function() {deepEqual( Stem("tempel"), "tempel");});
test("tempelbjerget -> tempelbjerg", function() {deepEqual( Stem("tempelbjerget"), "tempelbjerg");});
test("tempelblokken -> tempelblok", function() {deepEqual( Stem("tempelblokken"), "tempelblok");});
test("tempelborgens -> tempelborg", function() {deepEqual( Stem("tempelborgens"), "tempelborg");});
test("tempelet -> tempel", function() {deepEqual( Stem("tempelet"), "tempel");});
test("tempelets -> tempel", function() {deepEqual( Stem("tempelets"), "tempel");});
test("tempelgave -> tempelgav", function() {deepEqual( Stem("tempelgave"), "tempelgav");});
test("tempelgaver -> tempelgav", function() {deepEqual( Stem("tempelgaver"), "tempelgav");});
test("tempelmuren -> tempelmur", function() {deepEqual( Stem("tempelmuren"), "tempelmur");});
test("tempelportene -> tempelport", function() {deepEqual( Stem("tempelportene"), "tempelport");});
test("tempelran -> tempelran", function() {deepEqual( Stem("tempelran"), "tempelran");});
test("tempelranere -> tempelran", function() {deepEqual( Stem("tempelranere"), "tempelran");});
test("tempelrummet -> tempelrum", function() {deepEqual( Stem("tempelrummet"), "tempelrum");});
test("tempels -> tempel", function() {deepEqual( Stem("tempels"), "tempel");});
test("tempelsangerne -> tempelsang", function() {deepEqual( Stem("tempelsangerne"), "tempelsang");});
test("tempelskatten -> tempelskat", function() {deepEqual( Stem("tempelskatten"), "tempelskat");});
test("tempelstil -> tempelstil", function() {deepEqual( Stem("tempelstil"), "tempelstil");});
test("tempeltrælle -> tempeltræl", function() {deepEqual( Stem("tempeltrælle"), "tempeltræl");});
test("tempeltrællene -> tempeltræl", function() {deepEqual( Stem("tempeltrællene"), "tempeltræl");});
test("tempeltrællenes -> tempeltræl", function() {deepEqual( Stem("tempeltrællenes"), "tempeltræl");});
test("tempelvagten -> tempelvag", function() {deepEqual( Stem("tempelvagten"), "tempelvag");});
test("tempelvielsens -> tempelvi", function() {deepEqual( Stem("tempelvielsens"), "tempelvi");});
test("tempelværge -> tempelværg", function() {deepEqual( Stem("tempelværge"), "tempelværg");});
test("templer -> templ", function() {deepEqual( Stem("templer"), "templ");});
test("templet -> templ", function() {deepEqual( Stem("templet"), "templ");});
test("templets -> templ", function() {deepEqual( Stem("templets"), "templ");});
test("ten -> ten", function() {deepEqual( Stem("ten"), "ten");});
test("tenen -> ten", function() {deepEqual( Stem("tenen"), "ten");});
test("ter -> ter", function() {deepEqual( Stem("ter"), "ter");});
test("terebinte -> terebint", function() {deepEqual( Stem("terebinte"), "terebint");});
test("terebintedalen -> terebintedal", function() {deepEqual( Stem("terebintedalen"), "terebintedal");});
test("terebinten -> terebint", function() {deepEqual( Stem("terebinten"), "terebint");});
test("terebintens -> terebint", function() {deepEqual( Stem("terebintens"), "terebint");});
test("terebintes -> terebint", function() {deepEqual( Stem("terebintes"), "terebint");});
test("teresj -> teresj", function() {deepEqual( Stem("teresj"), "teresj");});
test("terne -> tern", function() {deepEqual( Stem("terne"), "tern");});
test("terner -> tern", function() {deepEqual( Stem("terner"), "tern");});
test("tertius -> tertius", function() {deepEqual( Stem("tertius"), "tertius");});
test("tertullus -> tertullus", function() {deepEqual( Stem("tertullus"), "tertullus");});
test("tessalonikerne -> tessalonik", function() {deepEqual( Stem("tessalonikerne"), "tessalonik");});
test("testikler -> testikl", function() {deepEqual( Stem("testikler"), "testikl");});
test("thaddæus -> thaddæus", function() {deepEqual( Stem("thaddæus"), "thaddæus");});
test("thamar -> thamar", function() {deepEqual( Stem("thamar"), "thamar");});
test("tharas -> thara", function() {deepEqual( Stem("tharas"), "thara");});
test("theofilus -> theofilus", function() {deepEqual( Stem("theofilus"), "theofilus");});
test("thessalonika -> thessalonika", function() {deepEqual( Stem("thessalonika"), "thessalonika");});
test("thessalonikerne -> thessalonik", function() {deepEqual( Stem("thessalonikerne"), "thessalonik");});
test("thessalonikernes -> thessalonik", function() {deepEqual( Stem("thessalonikernes"), "thessalonik");});
test("theudas -> theuda", function() {deepEqual( Stem("theudas"), "theuda");});
test("thi -> thi", function() {deepEqual( Stem("thi"), "thi");});
test("thide -> thid", function() {deepEqual( Stem("thide"), "thid");});
test("thiikke -> thiik", function() {deepEqual( Stem("thiikke"), "thiik");});
test("thioper -> thiop", function() {deepEqual( Stem("thioper"), "thiop");});
test("thiopernes -> thiop", function() {deepEqual( Stem("thiopernes"), "thiop");});
test("thomas -> thoma", function() {deepEqual( Stem("thomas"), "thoma");});
test("thyatira -> thyatira", function() {deepEqual( Stem("thyatira"), "thyatira");});
test("ti -> ti", function() {deepEqual( Stem("ti"), "ti");});
test("tiberias -> tiberia", function() {deepEqual( Stem("tiberias"), "tiberia");});
test("tiberius -> tiberius", function() {deepEqual( Stem("tiberius"), "tiberius");});
test("tibhat -> tibhat", function() {deepEqual( Stem("tibhat"), "tibhat");});
test("tibni -> tibni", function() {deepEqual( Stem("tibni"), "tibni");});
test("tid -> tid", function() {deepEqual( Stem("tid"), "tid");});
test("tidal -> tidal", function() {deepEqual( Stem("tidal"), "tidal");});
test("tide -> tid", function() {deepEqual( Stem("tide"), "tid");});
test("tiden -> tid", function() {deepEqual( Stem("tiden"), "tid");});
test("tidende -> tid", function() {deepEqual( Stem("tidende"), "tid");});
test("tidender -> tidend", function() {deepEqual( Stem("tidender"), "tidend");});
test("tidens -> tid", function() {deepEqual( Stem("tidens"), "tid");});
test("tider -> tid", function() {deepEqual( Stem("tider"), "tid");});
test("tiderer -> tid", function() {deepEqual( Stem("tiderer"), "tid");});
test("tiderne -> tid", function() {deepEqual( Stem("tiderne"), "tid");});
test("tidernes -> tid", function() {deepEqual( Stem("tidernes"), "tid");});
test("tidlig -> tid", function() {deepEqual( Stem("tidlig"), "tid");});
test("tidligere -> tid", function() {deepEqual( Stem("tidligere"), "tid");});
test("tidligmoden -> tidligmod", function() {deepEqual( Stem("tidligmoden"), "tidligmod");});
test("tidligmodne -> tidligmodn", function() {deepEqual( Stem("tidligmodne"), "tidligmodn");});
test("tidligregn -> tidligregn", function() {deepEqual( Stem("tidligregn"), "tidligregn");});
test("tidligregnen -> tidligregn", function() {deepEqual( Stem("tidligregnen"), "tidligregn");});
test("tidligste -> tid", function() {deepEqual( Stem("tidligste"), "tid");});
test("tidligt -> tid", function() {deepEqual( Stem("tidligt"), "tid");});
test("tids -> tid", function() {deepEqual( Stem("tids"), "tid");});
test("tidsaldre -> tidsaldr", function() {deepEqual( Stem("tidsaldre"), "tidsaldr");});
test("tidsel -> tidsel", function() {deepEqual( Stem("tidsel"), "tidsel");});
test("tidselen -> tidsel", function() {deepEqual( Stem("tidselen"), "tidsel");});
test("tidseltorn -> tidseltorn", function() {deepEqual( Stem("tidseltorn"), "tidseltorn");});
test("tidsfrist -> tidsfrist", function() {deepEqual( Stem("tidsfrist"), "tidsfrist");});
test("tidsler -> tidsl", function() {deepEqual( Stem("tidsler"), "tidsl");});
test("tidspunkt -> tidspunk", function() {deepEqual( Stem("tidspunkt"), "tidspunk");});
test("tidsrum -> tidsrum", function() {deepEqual( Stem("tidsrum"), "tidsrum");});
test("tidsspilde -> tidsspild", function() {deepEqual( Stem("tidsspilde"), "tidsspild");});
test("tidsånd -> tidsånd", function() {deepEqual( Stem("tidsånd"), "tidsånd");});
test("tie -> tie", function() {deepEqual( Stem("tie"), "tie");});
test("tiende -> tiend", function() {deepEqual( Stem("tiende"), "tiend");});
test("tiendedel -> tiendedel", function() {deepEqual( Stem("tiendedel"), "tiendedel");});
test("tiendedele -> tiendedel", function() {deepEqual( Stem("tiendedele"), "tiendedel");});
test("tiendedelen -> tiendedel", function() {deepEqual( Stem("tiendedelen"), "tiendedel");});
test("tienden -> tiend", function() {deepEqual( Stem("tienden"), "tiend");});
test("tiender -> tiend", function() {deepEqual( Stem("tiender"), "tiend");});
test("tiendeåret -> tiendeår", function() {deepEqual( Stem("tiendeåret"), "tiendeår");});
test("tier -> tier", function() {deepEqual( Stem("tier"), "tier");});
test("tiet -> tiet", function() {deepEqual( Stem("tiet"), "tiet");});
test("tifange -> tifang", function() {deepEqual( Stem("tifange"), "tifang");});
test("tifsa -> tifsa", function() {deepEqual( Stem("tifsa"), "tifsa");});
test("tigge -> tig", function() {deepEqual( Stem("tigge"), "tig");});
test("tigged -> tigged", function() {deepEqual( Stem("tigged"), "tigged");});
test("tiggede -> tigged", function() {deepEqual( Stem("tiggede"), "tigged");});
test("tigger -> tig", function() {deepEqual( Stem("tigger"), "tig");});
test("tiglat -> tiglat", function() {deepEqual( Stem("tiglat"), "tiglat");});
test("tii -> tii", function() {deepEqual( Stem("tii"), "tii");});
test("tiiahazja -> tiiahazja", function() {deepEqual( Stem("tiiahazja"), "tiiahazja");});
test("tiilivet -> tiiliv", function() {deepEqual( Stem("tiilivet"), "tiiliv");});
test("tikva -> tikva", function() {deepEqual( Stem("tikva"), "tikva");});
test("tikvas -> tikva", function() {deepEqual( Stem("tikvas"), "tikva");});
test("til -> til", function() {deepEqual( Stem("til"), "til");});
test("tilbad -> tilbad", function() {deepEqual( Stem("tilbad"), "tilbad");});
test("tilbade -> tilbad", function() {deepEqual( Stem("tilbade"), "tilbad");});
test("tilbage -> tilbag", function() {deepEqual( Stem("tilbage"), "tilbag");});
test("tilbagebetale -> tilbagebetal", function() {deepEqual( Stem("tilbagebetale"), "tilbagebetal");});
test("tilbagebetalingen -> tilbagebetaling", function() {deepEqual( Stem("tilbagebetalingen"), "tilbagebetaling");});
test("tilbageblevne -> tilbageblevn", function() {deepEqual( Stem("tilbageblevne"), "tilbageblevn");});
test("tilbagegive -> tilbagegiv", function() {deepEqual( Stem("tilbagegive"), "tilbagegiv");});
test("tilbagekalde -> tilbagekald", function() {deepEqual( Stem("tilbagekalde"), "tilbagekald");});
test("tilbagekomst -> tilbagekomst", function() {deepEqual( Stem("tilbagekomst"), "tilbagekomst");});
test("tilbagelagde -> tilbagelag", function() {deepEqual( Stem("tilbagelagde"), "tilbagelag");});
test("tilbagelagt -> tilbagelag", function() {deepEqual( Stem("tilbagelagt"), "tilbagelag");});
test("tilbagevejen -> tilbagevej", function() {deepEqual( Stem("tilbagevejen"), "tilbagevej");});
test("tilbed -> tilbed", function() {deepEqual( Stem("tilbed"), "tilbed");});
test("tilbede -> tilbed", function() {deepEqual( Stem("tilbede"), "tilbed");});
test("tilbedende -> tilbed", function() {deepEqual( Stem("tilbedende"), "tilbed");});
test("tilbeder -> tilbed", function() {deepEqual( Stem("tilbeder"), "tilbed");});
test("tilbedere -> tilbed", function() {deepEqual( Stem("tilbedere"), "tilbed");});
test("tilbedt -> tilbed", function() {deepEqual( Stem("tilbedt"), "tilbed");});
test("tilbehør -> tilbehør", function() {deepEqual( Stem("tilbehør"), "tilbehør");});
test("tilbered -> tilb", function() {deepEqual( Stem("tilbered"), "tilb");});
test("tilberede -> tilb", function() {deepEqual( Stem("tilberede"), "tilb");});
test("tilbereder -> tilbered", function() {deepEqual( Stem("tilbereder"), "tilbered");});
test("tilberedes -> tilbered", function() {deepEqual( Stem("tilberedes"), "tilbered");});
test("tilberedt -> tilbered", function() {deepEqual( Stem("tilberedt"), "tilbered");});
test("tilberedte -> tilbered", function() {deepEqual( Stem("tilberedte"), "tilbered");});
test("tilbragt -> tilbrag", function() {deepEqual( Stem("tilbragt"), "tilbrag");});
test("tilbragte -> tilbrag", function() {deepEqual( Stem("tilbragte"), "tilbrag");});
test("tilbud -> tilbud", function() {deepEqual( Stem("tilbud"), "tilbud");});
test("tilbundet -> tilbund", function() {deepEqual( Stem("tilbundet"), "tilbund");});
test("tilbyde -> tilbyd", function() {deepEqual( Stem("tilbyde"), "tilbyd");});
test("tilbygning -> tilbygning", function() {deepEqual( Stem("tilbygning"), "tilbygning");});
test("tilbygningen -> tilbygning", function() {deepEqual( Stem("tilbygningen"), "tilbygning");});
test("tilbygningens -> tilbygning", function() {deepEqual( Stem("tilbygningens"), "tilbygning");});
test("tilbyttet -> tilbyt", function() {deepEqual( Stem("tilbyttet"), "tilbyt");});
test("tilbød -> tilbød", function() {deepEqual( Stem("tilbød"), "tilbød");});
test("tilbøjelighed -> tilbøj", function() {deepEqual( Stem("tilbøjelighed"), "tilbøj");});
test("tilbørligt -> tilbør", function() {deepEqual( Stem("tilbørligt"), "tilbør");});
test("tildanner -> tildan", function() {deepEqual( Stem("tildanner"), "tildan");});
test("tildel -> tildel", function() {deepEqual( Stem("tildel"), "tildel");});
test("tildele -> tildel", function() {deepEqual( Stem("tildele"), "tildel");});
test("tildeler -> tildel", function() {deepEqual( Stem("tildeler"), "tildel");});
test("tildeles -> tildel", function() {deepEqual( Stem("tildeles"), "tildel");});
test("tildelt -> tildelt", function() {deepEqual( Stem("tildelt"), "tildelt");});
test("tildelte -> tildelt", function() {deepEqual( Stem("tildelte"), "tildelt");});
test("tildeltes -> tildelt", function() {deepEqual( Stem("tildeltes"), "tildelt");});
test("tildragelser -> tildrag", function() {deepEqual( Stem("tildragelser"), "tildrag");});
test("tildrog -> tildrog", function() {deepEqual( Stem("tildrog"), "tildrog");});
test("tildække -> tildæk", function() {deepEqual( Stem("tildække"), "tildæk");});
test("tildækkede -> tildækked", function() {deepEqual( Stem("tildækkede"), "tildækked");});
test("tildækker -> tildæk", function() {deepEqual( Stem("tildækker"), "tildæk");});
test("tildækket -> tildæk", function() {deepEqual( Stem("tildækket"), "tildæk");});
test("tilendebragt -> tilendebrag", function() {deepEqual( Stem("tilendebragt"), "tilendebrag");});
test("tilendebringe -> tilendebring", function() {deepEqual( Stem("tilendebringe"), "tilendebring");});
test("tilfalde -> tilfald", function() {deepEqual( Stem("tilfalde"), "tilfald");});
test("tilfalder -> tilfald", function() {deepEqual( Stem("tilfalder"), "tilfald");});
test("tilfaldet -> tilfald", function() {deepEqual( Stem("tilfaldet"), "tilfald");});
test("tilfaldt -> tilfald", function() {deepEqual( Stem("tilfaldt"), "tilfald");});
test("tilflugt -> tilflug", function() {deepEqual( Stem("tilflugt"), "tilflug");});
test("tilflugts -> tilflug", function() {deepEqual( Stem("tilflugts"), "tilflug");});
test("tilflugtsby -> tilflugtsby", function() {deepEqual( Stem("tilflugtsby"), "tilflugtsby");});
test("tilflugtsbyen -> tilflugtsby", function() {deepEqual( Stem("tilflugtsbyen"), "tilflugtsby");});
test("tilflugtsbyer -> tilflugtsby", function() {deepEqual( Stem("tilflugtsbyer"), "tilflugtsby");});
test("tilflugtsbyerne -> tilflugtsby", function() {deepEqual( Stem("tilflugtsbyerne"), "tilflugtsby");});
test("tilflugtsbys -> tilflugtsby", function() {deepEqual( Stem("tilflugtsbys"), "tilflugtsby");});
test("tilflugtsklippe -> tilflugtsklip", function() {deepEqual( Stem("tilflugtsklippe"), "tilflugtsklip");});
test("tilflugtssteder -> tilflugtssted", function() {deepEqual( Stem("tilflugtssteder"), "tilflugtssted");});
test("tilflugtsteder -> tilflugtsted", function() {deepEqual( Stem("tilflugtsteder"), "tilflugtsted");});
test("tilflyde -> tilflyd", function() {deepEqual( Stem("tilflyde"), "tilflyd");});
test("tilforladelige -> tilforlad", function() {deepEqual( Stem("tilforladelige"), "tilforlad");});
test("tilforn -> tilforn", function() {deepEqual( Stem("tilforn"), "tilforn");});
test("tilfreds -> tilfred", function() {deepEqual( Stem("tilfreds"), "tilfred");});
test("tilfredse -> tilfreds", function() {deepEqual( Stem("tilfredse"), "tilfreds");});
test("tilfredshed -> tilfreds", function() {deepEqual( Stem("tilfredshed"), "tilfreds");});
test("tilfredsstillelse -> tilfredsstil", function() {deepEqual( Stem("tilfredsstillelse"), "tilfredsstil");});
test("tilfredsstillet -> tilfredsstil", function() {deepEqual( Stem("tilfredsstillet"), "tilfredsstil");});
test("tilfælde -> tilfæld", function() {deepEqual( Stem("tilfælde"), "tilfæld");});
test("tilfældes -> tilfæld", function() {deepEqual( Stem("tilfældes"), "tilfæld");});
test("tilfældet -> tilfæld", function() {deepEqual( Stem("tilfældet"), "tilfæld");});
test("tilfældigvis -> tilfældigvis", function() {deepEqual( Stem("tilfældigvis"), "tilfældigvis");});
test("tilføje -> tilføj", function() {deepEqual( Stem("tilføje"), "tilføj");});
test("tilføjede -> tilføjed", function() {deepEqual( Stem("tilføjede"), "tilføjed");});
test("tilføjer -> tilføj", function() {deepEqual( Stem("tilføjer"), "tilføj");});
test("tilføjes -> tilføj", function() {deepEqual( Stem("tilføjes"), "tilføj");});
test("tilføjet -> tilføj", function() {deepEqual( Stem("tilføjet"), "tilføj");});
test("tilførte -> tilført", function() {deepEqual( Stem("tilførte"), "tilført");});
test("tilgav -> tilgav", function() {deepEqual( Stem("tilgav"), "tilgav");});
test("tilgift -> tilgift", function() {deepEqual( Stem("tilgift"), "tilgift");});
test("tilgiv -> tilgiv", function() {deepEqual( Stem("tilgiv"), "tilgiv");});
test("tilgive -> tilgiv", function() {deepEqual( Stem("tilgive"), "tilgiv");});
test("tilgivelse -> tilgiv", function() {deepEqual( Stem("tilgivelse"), "tilgiv");});
test("tilgivende -> tilgiv", function() {deepEqual( Stem("tilgivende"), "tilgiv");});
test("tilgiver -> tilgiv", function() {deepEqual( Stem("tilgiver"), "tilgiv");});
test("tilgivet -> tilgiv", function() {deepEqual( Stem("tilgivet"), "tilgiv");});
test("tilgode -> tilgod", function() {deepEqual( Stem("tilgode"), "tilgod");});
test("tilhage -> tilhag", function() {deepEqual( Stem("tilhage"), "tilhag");});
test("tilhold -> tilhold", function() {deepEqual( Stem("tilhold"), "tilhold");});
test("tilholdssted -> tilholdssted", function() {deepEqual( Stem("tilholdssted"), "tilholdssted");});
test("tilhug -> tilhug", function() {deepEqual( Stem("tilhug"), "tilhug");});
test("tilhugge -> tilhug", function() {deepEqual( Stem("tilhugge"), "tilhug");});
test("tilhuggede -> tilhugged", function() {deepEqual( Stem("tilhuggede"), "tilhugged");});
test("tilhugger -> tilhug", function() {deepEqual( Stem("tilhugger"), "tilhug");});
test("tilhugget -> tilhug", function() {deepEqual( Stem("tilhugget"), "tilhug");});
test("tilhugne -> tilhugn", function() {deepEqual( Stem("tilhugne"), "tilhugn");});
test("tilhyl -> tilhyl", function() {deepEqual( Stem("tilhyl"), "tilhyl");});
test("tilhylle -> tilhyl", function() {deepEqual( Stem("tilhylle"), "tilhyl");});
test("tilhyllede -> tilhylled", function() {deepEqual( Stem("tilhyllede"), "tilhylled");});
test("tilhyller -> tilhyl", function() {deepEqual( Stem("tilhyller"), "tilhyl");});
test("tilhyllet -> tilhyl", function() {deepEqual( Stem("tilhyllet"), "tilhyl");});
test("tilhænger -> tilhæng", function() {deepEqual( Stem("tilhænger"), "tilhæng");});
test("tilhængere -> tilhæng", function() {deepEqual( Stem("tilhængere"), "tilhæng");});
test("tilhøjre -> tilhøjr", function() {deepEqual( Stem("tilhøjre"), "tilhøjr");});
test("tilhøre -> tilhør", function() {deepEqual( Stem("tilhøre"), "tilhør");});
test("tilhørende -> tilhør", function() {deepEqual( Stem("tilhørende"), "tilhør");});
test("tilhører -> tilhør", function() {deepEqual( Stem("tilhører"), "tilhør");});
test("tilhørt -> tilhørt", function() {deepEqual( Stem("tilhørt"), "tilhørt");});
test("tilhørte -> tilhørt", function() {deepEqual( Stem("tilhørte"), "tilhørt");});
test("tilintetgjorde -> tilintetgjord", function() {deepEqual( Stem("tilintetgjorde"), "tilintetgjord");});
test("tilintetgjort -> tilintetgjort", function() {deepEqual( Stem("tilintetgjort"), "tilintetgjort");});
test("tilintetgjorte -> tilintetgjort", function() {deepEqual( Stem("tilintetgjorte"), "tilintetgjort");});
test("tilintetgjot -> tilintetgjot", function() {deepEqual( Stem("tilintetgjot"), "tilintetgjot");});
test("tilintetgør -> tilintetgør", function() {deepEqual( Stem("tilintetgør"), "tilintetgør");});
test("tilintetgøre -> tilintetgør", function() {deepEqual( Stem("tilintetgøre"), "tilintetgør");});
test("tilintetgørelse -> tilintetgør", function() {deepEqual( Stem("tilintetgørelse"), "tilintetgør");});
test("tilintetgøres -> tilintetgør", function() {deepEqual( Stem("tilintetgøres"), "tilintetgør");});
test("tilkalde -> tilkald", function() {deepEqual( Stem("tilkalde"), "tilkald");});
test("tilkaldt -> tilkald", function() {deepEqual( Stem("tilkaldt"), "tilkald");});
test("tilkaldte -> tilkald", function() {deepEqual( Stem("tilkaldte"), "tilkald");});
test("tilkastet -> tilkast", function() {deepEqual( Stem("tilkastet"), "tilkast");});
test("tilkendegav -> tilkendegav", function() {deepEqual( Stem("tilkendegav"), "tilkendegav");});
test("tilkendegive -> tilkendegiv", function() {deepEqual( Stem("tilkendegive"), "tilkendegiv");});
test("tilkendegives -> tilkendegiv", function() {deepEqual( Stem("tilkendegives"), "tilkendegiv");});
test("tilkendte -> tilkend", function() {deepEqual( Stem("tilkendte"), "tilkend");});
test("tilkom -> tilkom", function() {deepEqual( Stem("tilkom"), "tilkom");});
test("tilkommelse -> tilkom", function() {deepEqual( Stem("tilkommelse"), "tilkom");});
test("tilkommelses -> tilkom", function() {deepEqual( Stem("tilkommelses"), "tilkom");});
test("tilkommende -> tilkom", function() {deepEqual( Stem("tilkommende"), "tilkom");});
test("tilkommer -> tilkom", function() {deepEqual( Stem("tilkommer"), "tilkom");});
test("tillad -> tillad", function() {deepEqual( Stem("tillad"), "tillad");});
test("tillade -> tillad", function() {deepEqual( Stem("tillade"), "tillad");});
test("tilladelse -> tillad", function() {deepEqual( Stem("tilladelse"), "tillad");});
test("tillader -> tillad", function() {deepEqual( Stem("tillader"), "tillad");});
test("tillades -> tillad", function() {deepEqual( Stem("tillades"), "tillad");});
test("tilladt -> tillad", function() {deepEqual( Stem("tilladt"), "tillad");});
test("tillagde -> tillag", function() {deepEqual( Stem("tillagde"), "tillag");});
test("tillagt -> tillag", function() {deepEqual( Stem("tillagt"), "tillag");});
test("tillav -> tillav", function() {deepEqual( Stem("tillav"), "tillav");});
test("tillave -> tillav", function() {deepEqual( Stem("tillave"), "tillav");});
test("tillavede -> tillaved", function() {deepEqual( Stem("tillavede"), "tillaved");});
test("tillavet -> tillav", function() {deepEqual( Stem("tillavet"), "tillav");});
test("tillegat -> tillegat", function() {deepEqual( Stem("tillegat"), "tillegat");});
test("tillegnes -> tillegn", function() {deepEqual( Stem("tillegnes"), "tillegn");});
test("tillid -> tillid", function() {deepEqual( Stem("tillid"), "tillid");});
test("tillidsfuldhed -> tillidsfuld", function() {deepEqual( Stem("tillidsfuldhed"), "tillidsfuld");});
test("tillidsfuldt -> tillidsfuld", function() {deepEqual( Stem("tillidsfuldt"), "tillidsfuld");});
test("tillige -> til", function() {deepEqual( Stem("tillige"), "til");});
test("tillod -> tillod", function() {deepEqual( Stem("tillod"), "tillod");});
test("tillukke -> tilluk", function() {deepEqual( Stem("tillukke"), "tilluk");});
test("tillukker -> tilluk", function() {deepEqual( Stem("tillukker"), "tilluk");});
test("tillukket -> tilluk", function() {deepEqual( Stem("tillukket"), "tilluk");});
test("tillæg -> tillæg", function() {deepEqual( Stem("tillæg"), "tillæg");});
test("tillægger -> tillæg", function() {deepEqual( Stem("tillægger"), "tillæg");});
test("tillægget -> tillæg", function() {deepEqual( Stem("tillægget"), "tillæg");});
test("tillærte -> tillært", function() {deepEqual( Stem("tillærte"), "tillært");});
test("tilmed -> tilmed", function() {deepEqual( Stem("tilmed"), "tilmed");});
test("tilmåle -> tilmål", function() {deepEqual( Stem("tilmåle"), "tilmål");});
test("tilmåles -> tilmål", function() {deepEqual( Stem("tilmåles"), "tilmål");});
test("tilmålte -> tilmålt", function() {deepEqual( Stem("tilmålte"), "tilmålt");});
test("tilnavn -> tilnavn", function() {deepEqual( Stem("tilnavn"), "tilnavn");});
test("tilnavnet -> tilnavn", function() {deepEqual( Stem("tilnavnet"), "tilnavn");});
test("tilon -> tilon", function() {deepEqual( Stem("tilon"), "tilon");});
test("tilovers -> tilov", function() {deepEqual( Stem("tilovers"), "tilov");});
test("tiloversblevne -> tiloversblevn", function() {deepEqual( Stem("tiloversblevne"), "tiloversblevn");});
test("tilpas -> tilpa", function() {deepEqual( Stem("tilpas"), "tilpa");});
test("tilplantet -> tilplant", function() {deepEqual( Stem("tilplantet"), "tilplant");});
test("tilranet -> tilran", function() {deepEqual( Stem("tilranet"), "tilran");});
test("tilregn -> tilregn", function() {deepEqual( Stem("tilregn"), "tilregn");});
test("tilregne -> tilregn", function() {deepEqual( Stem("tilregne"), "tilregn");});
test("tilregner -> tilregn", function() {deepEqual( Stem("tilregner"), "tilregn");});
test("tilregnes -> tilregn", function() {deepEqual( Stem("tilregnes"), "tilregn");});
test("tilregnet -> tilregn", function() {deepEqual( Stem("tilregnet"), "tilregn");});
test("tilrette -> tilret", function() {deepEqual( Stem("tilrette"), "tilret");});
test("tilrev -> tilrev", function() {deepEqual( Stem("tilrev"), "tilrev");});
test("tilrive -> tilriv", function() {deepEqual( Stem("tilrive"), "tilriv");});
test("tilriver -> tilriv", function() {deepEqual( Stem("tilriver"), "tilriv");});
test("tilråb -> tilråb", function() {deepEqual( Stem("tilråb"), "tilråb");});
test("tilsagde -> tilsag", function() {deepEqual( Stem("tilsagde"), "tilsag");});
test("tilsagn -> tilsagn", function() {deepEqual( Stem("tilsagn"), "tilsagn");});
test("tilsagt -> tilsag", function() {deepEqual( Stem("tilsagt"), "tilsag");});
test("tilsagte -> tilsag", function() {deepEqual( Stem("tilsagte"), "tilsag");});
test("tilsammen -> tilsam", function() {deepEqual( Stem("tilsammen"), "tilsam");});
test("tilsat -> tilsat", function() {deepEqual( Stem("tilsat"), "tilsat");});
test("tilsavet -> tilsav", function() {deepEqual( Stem("tilsavet"), "tilsav");});
test("tilsidesat -> tilsidesat", function() {deepEqual( Stem("tilsidesat"), "tilsidesat");});
test("tilsidesatte -> tilsidesat", function() {deepEqual( Stem("tilsidesatte"), "tilsidesat");});
test("tilsidesattes -> tilsidesat", function() {deepEqual( Stem("tilsidesattes"), "tilsidesat");});
test("tilsidesætter -> tilsidesæt", function() {deepEqual( Stem("tilsidesætter"), "tilsidesæt");});
test("tilsidst -> tilsidst", function() {deepEqual( Stem("tilsidst"), "tilsidst");});
test("tilsige -> tils", function() {deepEqual( Stem("tilsige"), "tils");});
test("tilsiger -> tils", function() {deepEqual( Stem("tilsiger"), "tils");});
test("tilsikret -> tilsikr", function() {deepEqual( Stem("tilsikret"), "tilsikr");});
test("tilskikkelse -> tilskik", function() {deepEqual( Stem("tilskikkelse"), "tilskik");});
test("tilskikker -> tilskik", function() {deepEqual( Stem("tilskikker"), "tilskik");});
test("tilskikket -> tilskik", function() {deepEqual( Stem("tilskikket"), "tilskik");});
test("tilskrevet -> tilskrev", function() {deepEqual( Stem("tilskrevet"), "tilskrev");});
test("tilskud -> tilskud", function() {deepEqual( Stem("tilskud"), "tilskud");});
test("tilskuer -> tilsku", function() {deepEqual( Stem("tilskuer"), "tilsku");});
test("tilskyndede -> tilskynded", function() {deepEqual( Stem("tilskyndede"), "tilskynded");});
test("tilskyndelse -> tilskynd", function() {deepEqual( Stem("tilskyndelse"), "tilskynd");});
test("tilskyndet -> tilskynd", function() {deepEqual( Stem("tilskyndet"), "tilskynd");});
test("tilslører -> tilslør", function() {deepEqual( Stem("tilslører"), "tilslør");});
test("tilstand -> tilstand", function() {deepEqual( Stem("tilstand"), "tilstand");});
test("tilsted -> tilsted", function() {deepEqual( Stem("tilsted"), "tilsted");});
test("tilstede -> tilsted", function() {deepEqual( Stem("tilstede"), "tilsted");});
test("tilsteder -> tilsted", function() {deepEqual( Stem("tilsteder"), "tilsted");});
test("tilstedes -> tilsted", function() {deepEqual( Stem("tilstedes"), "tilsted");});
test("tilstedt -> tilsted", function() {deepEqual( Stem("tilstedt"), "tilsted");});
test("tilstedte -> tilsted", function() {deepEqual( Stem("tilstedte"), "tilsted");});
test("tilstoppe -> tilstop", function() {deepEqual( Stem("tilstoppe"), "tilstop");});
test("tilstoppede -> tilstopped", function() {deepEqual( Stem("tilstoppede"), "tilstopped");});
test("tilstopper -> tilstop", function() {deepEqual( Stem("tilstopper"), "tilstop");});
test("tilstrækkeligt -> tilstræk", function() {deepEqual( Stem("tilstrækkeligt"), "tilstræk");});
test("tilstå -> tilstå", function() {deepEqual( Stem("tilstå"), "tilstå");});
test("tilstås -> tilstå", function() {deepEqual( Stem("tilstås"), "tilstå");});
test("tilstøde -> tilstød", function() {deepEqual( Stem("tilstøde"), "tilstød");});
test("tilstøder -> tilstød", function() {deepEqual( Stem("tilstøder"), "tilstød");});
test("tilstødt -> tilstød", function() {deepEqual( Stem("tilstødt"), "tilstød");});
test("tilsvarende -> tilsvar", function() {deepEqual( Stem("tilsvarende"), "tilsvar");});
test("tilsvor -> tilsvor", function() {deepEqual( Stem("tilsvor"), "tilsvor");});
test("tilsvoret -> tilsvor", function() {deepEqual( Stem("tilsvoret"), "tilsvor");});
test("tilsværg -> tilsværg", function() {deepEqual( Stem("tilsværg"), "tilsværg");});
test("tilsyn -> tilsyn", function() {deepEqual( Stem("tilsyn"), "tilsyn");});
test("tilsynet -> tilsyn", function() {deepEqual( Stem("tilsynet"), "tilsyn");});
test("tilsynsgerning -> tilsynsgerning", function() {deepEqual( Stem("tilsynsgerning"), "tilsynsgerning");});
test("tilsynsmand -> tilsynsmand", function() {deepEqual( Stem("tilsynsmand"), "tilsynsmand");});
test("tilsynsmandene -> tilsynsmand", function() {deepEqual( Stem("tilsynsmandene"), "tilsynsmand");});
test("tilsynsmænd -> tilsynsmænd", function() {deepEqual( Stem("tilsynsmænd"), "tilsynsmænd");});
test("tilsynsmændene -> tilsynsmænd", function() {deepEqual( Stem("tilsynsmændene"), "tilsynsmænd");});
test("tilså -> tilså", function() {deepEqual( Stem("tilså"), "tilså");});
test("tilsåes -> tilså", function() {deepEqual( Stem("tilsåes"), "tilså");});
test("tilsår -> tilsår", function() {deepEqual( Stem("tilsår"), "tilsår");});
test("tilsås -> tilså", function() {deepEqual( Stem("tilsås"), "tilså");});
test("tilsøled -> tilsøled", function() {deepEqual( Stem("tilsøled"), "tilsøled");});
test("tilsøler -> tilsøl", function() {deepEqual( Stem("tilsøler"), "tilsøl");});
test("tilsølet -> tilsøl", function() {deepEqual( Stem("tilsølet"), "tilsøl");});
test("tiltagen -> tiltag", function() {deepEqual( Stem("tiltagen"), "tiltag");});
test("tiltager -> tiltag", function() {deepEqual( Stem("tiltager"), "tiltag");});
test("tiltalte -> tiltalt", function() {deepEqual( Stem("tiltalte"), "tiltalt");});
test("tiltrådt -> tiltråd", function() {deepEqual( Stem("tiltrådt"), "tiltråd");});
test("tiltvinger -> tiltving", function() {deepEqual( Stem("tiltvinger"), "tiltving");});
test("tilveje -> tilvej", function() {deepEqual( Stem("tilveje"), "tilvej");});
test("tilvejebragt -> tilvejebrag", function() {deepEqual( Stem("tilvejebragt"), "tilvejebrag");});
test("tilvejebringe -> tilvejebring", function() {deepEqual( Stem("tilvejebringe"), "tilvejebring");});
test("tilvejede -> tilvejed", function() {deepEqual( Stem("tilvejede"), "tilvejed");});
test("tilvejet -> tilvej", function() {deepEqual( Stem("tilvejet"), "tilvej");});
test("tilvende -> tilv", function() {deepEqual( Stem("tilvende"), "tilv");});
test("tilvendt -> tilvend", function() {deepEqual( Stem("tilvendt"), "tilvend");});
test("tilvendte -> tilvend", function() {deepEqual( Stem("tilvendte"), "tilvend");});
test("tilvenstre -> tilvenstr", function() {deepEqual( Stem("tilvenstre"), "tilvenstr");});
test("tilvirke -> tilvirk", function() {deepEqual( Stem("tilvirke"), "tilvirk");});
test("tilvirkede -> tilvirked", function() {deepEqual( Stem("tilvirkede"), "tilvirked");});
test("tilvirker -> tilvirk", function() {deepEqual( Stem("tilvirker"), "tilvirk");});
test("tilvænnet -> tilvæn", function() {deepEqual( Stem("tilvænnet"), "tilvæn");});
test("time -> tim", function() {deepEqual( Stem("time"), "tim");});
test("timedes -> timed", function() {deepEqual( Stem("timedes"), "timed");});
test("timelige -> tim", function() {deepEqual( Stem("timelige"), "tim");});
test("timen -> tim", function() {deepEqual( Stem("timen"), "tim");});
test("timer -> tim", function() {deepEqual( Stem("timer"), "tim");});
test("times -> tim", function() {deepEqual( Stem("times"), "tim");});
test("timna -> timna", function() {deepEqual( Stem("timna"), "timna");});
test("timnat -> timnat", function() {deepEqual( Stem("timnat"), "timnat");});
test("timnitens -> timnit", function() {deepEqual( Stem("timnitens"), "timnit");});
test("timon -> timon", function() {deepEqual( Stem("timon"), "timon");});
test("timoteus -> timoteus", function() {deepEqual( Stem("timoteus"), "timoteus");});
test("timotheus -> timotheus", function() {deepEqual( Stem("timotheus"), "timotheus");});
test("timæus -> timæus", function() {deepEqual( Stem("timæus"), "timæus");});
test("tin -> tin", function() {deepEqual( Stem("tin"), "tin");});
test("tinde -> tind", function() {deepEqual( Stem("tinde"), "tind");});
test("tinder -> tind", function() {deepEqual( Stem("tinder"), "tind");});
test("tinderne -> tind", function() {deepEqual( Stem("tinderne"), "tind");});
test("tinding -> tinding", function() {deepEqual( Stem("tinding"), "tinding");});
test("tindingen -> tinding", function() {deepEqual( Stem("tindingen"), "tinding");});
test("tindinger -> tinding", function() {deepEqual( Stem("tindinger"), "tinding");});
test("tindingerne -> tinding", function() {deepEqual( Stem("tindingerne"), "tinding");});
test("tindingers -> tinding", function() {deepEqual( Stem("tindingers"), "tinding");});
test("ting -> ting", function() {deepEqual( Stem("ting"), "ting");});
test("tingdage -> tingdag", function() {deepEqual( Stem("tingdage"), "tingdag");});
test("tinged -> tinged", function() {deepEqual( Stem("tinged"), "tinged");});
test("tingene -> ting", function() {deepEqual( Stem("tingene"), "ting");});
test("tingenes -> ting", function() {deepEqual( Stem("tingenes"), "ting");});
test("tinger -> ting", function() {deepEqual( Stem("tinger"), "ting");});
test("tings -> ting", function() {deepEqual( Stem("tings"), "ting");});
test("tinsjemetdyret -> tinsjemetdyr", function() {deepEqual( Stem("tinsjemetdyret"), "tinsjemetdyr");});
test("tinsjemetfuglen -> tinsjemetfugl", function() {deepEqual( Stem("tinsjemetfuglen"), "tinsjemetfugl");});
test("tiopeme -> tiopem", function() {deepEqual( Stem("tiopeme"), "tiopem");});
test("tiopere -> tiop", function() {deepEqual( Stem("tiopere"), "tiop");});
test("tioperen -> tiop", function() {deepEqual( Stem("tioperen"), "tiop");});
test("tioperne -> tiop", function() {deepEqual( Stem("tioperne"), "tiop");});
test("tiopien -> tiopi", function() {deepEqual( Stem("tiopien"), "tiopi");});
test("tiopiens -> tiopi", function() {deepEqual( Stem("tiopiens"), "tiopi");});
test("tipsar -> tipsar", function() {deepEqual( Stem("tipsar"), "tipsar");});
test("tipsarer -> tipsar", function() {deepEqual( Stem("tipsarer"), "tipsar");});
test("tir -> tir", function() {deepEqual( Stem("tir"), "tir");});
test("tiras -> tira", function() {deepEqual( Stem("tiras"), "tira");});
test("tireja -> tireja", function() {deepEqual( Stem("tireja"), "tireja");});
test("tirhaka -> tirhaka", function() {deepEqual( Stem("tirhaka"), "tirhaka");});
test("tirhana -> tirhana", function() {deepEqual( Stem("tirhana"), "tirhana");});
test("tirre -> tir", function() {deepEqual( Stem("tirre"), "tir");});
test("tirrede -> tirred", function() {deepEqual( Stem("tirrede"), "tirred");});
test("tirza -> tirza", function() {deepEqual( Stem("tirza"), "tirza");});
test("tis -> tis", function() {deepEqual( Stem("tis"), "tis");});
test("tisjbe -> tisjb", function() {deepEqual( Stem("tisjbe"), "tisjb");});
test("tisjbiten -> tisjbit", function() {deepEqual( Stem("tisjbiten"), "tisjbit");});
test("tistrenget -> tistreng", function() {deepEqual( Stem("tistrenget"), "tistreng");});
test("tit -> tit", function() {deepEqual( Stem("tit"), "tit");});
test("titter -> tit", function() {deepEqual( Stem("titter"), "tit");});
test("titus -> titus", function() {deepEqual( Stem("titus"), "titus");});
test("titusind -> titusind", function() {deepEqual( Stem("titusind"), "titusind");});
test("titusinde -> titusind", function() {deepEqual( Stem("titusinde"), "titusind");});
test("titusinder -> titusind", function() {deepEqual( Stem("titusinder"), "titusind");});
test("tiziten -> tizit", function() {deepEqual( Stem("tiziten"), "tizit");});
test("tjemmesle -> tjemmesl", function() {deepEqual( Stem("tjemmesle"), "tjemmesl");});
test("tjen -> tjen", function() {deepEqual( Stem("tjen"), "tjen");});
test("tjene -> tjen", function() {deepEqual( Stem("tjene"), "tjen");});
test("tjenende -> tjen", function() {deepEqual( Stem("tjenende"), "tjen");});
test("tjener -> tjen", function() {deepEqual( Stem("tjener"), "tjen");});
test("tjenere -> tjen", function() {deepEqual( Stem("tjenere"), "tjen");});
test("tjeneren -> tjen", function() {deepEqual( Stem("tjeneren"), "tjen");});
test("tjenerens -> tjen", function() {deepEqual( Stem("tjenerens"), "tjen");});
test("tjeneres -> tjen", function() {deepEqual( Stem("tjeneres"), "tjen");});
test("tjenerinde -> tjenerind", function() {deepEqual( Stem("tjenerinde"), "tjenerind");});
test("tjenerindes -> tjenerind", function() {deepEqual( Stem("tjenerindes"), "tjenerind");});
test("tjenerne -> tjen", function() {deepEqual( Stem("tjenerne"), "tjen");});
test("tjeners -> tjen", function() {deepEqual( Stem("tjeners"), "tjen");});
test("tjenes -> tjen", function() {deepEqual( Stem("tjenes"), "tjen");});
test("tjeneste -> tjenest", function() {deepEqual( Stem("tjeneste"), "tjenest");});
test("tjenestegerning -> tjenestegerning", function() {deepEqual( Stem("tjenestegerning"), "tjenestegerning");});
test("tjenestekvinden -> tjenestekvind", function() {deepEqual( Stem("tjenestekvinden"), "tjenestekvind");});
test("tjenestekvindens -> tjenestekvind", function() {deepEqual( Stem("tjenestekvindens"), "tjenestekvind");});
test("tjenestekvinders -> tjenestekvind", function() {deepEqual( Stem("tjenestekvinders"), "tjenestekvind");});
test("tjenesten -> tjenest", function() {deepEqual( Stem("tjenesten"), "tjenest");});
test("tjenestens -> tjenest", function() {deepEqual( Stem("tjenestens"), "tjenest");});
test("tjenestepige -> tjenestep", function() {deepEqual( Stem("tjenestepige"), "tjenestep");});
test("tjenester -> tjenest", function() {deepEqual( Stem("tjenester"), "tjenest");});
test("tjenestes -> tjenest", function() {deepEqual( Stem("tjenestes"), "tjenest");});
test("tjenestetid -> tjenestetid", function() {deepEqual( Stem("tjenestetid"), "tjenestetid");});
test("tjenet -> tjen", function() {deepEqual( Stem("tjenet"), "tjen");});
test("tjenlig -> tjen", function() {deepEqual( Stem("tjenlig"), "tjen");});
test("tjenlige -> tjen", function() {deepEqual( Stem("tjenlige"), "tjen");});
test("tjenligt -> tjen", function() {deepEqual( Stem("tjenligt"), "tjen");});
test("tjenstgørende -> tjenstgør", function() {deepEqual( Stem("tjenstgørende"), "tjenstgør");});
test("tjent -> tjent", function() {deepEqual( Stem("tjent"), "tjent");});
test("tjente -> tjent", function() {deepEqual( Stem("tjente"), "tjent");});
test("tjerne -> tjern", function() {deepEqual( Stem("tjerne"), "tjern");});
test("tjje -> tjje", function() {deepEqual( Stem("tjje"), "tjje");});
test("tjære -> tjær", function() {deepEqual( Stem("tjære"), "tjær");});
test("tjørn -> tjørn", function() {deepEqual( Stem("tjørn"), "tjørn");});
test("tjørnehæk -> tjørnehæk", function() {deepEqual( Stem("tjørnehæk"), "tjørnehæk");});
test("tjørnekrat -> tjørnekrat", function() {deepEqual( Stem("tjørnekrat"), "tjørnekrat");});
test("tjørnekvistes -> tjørnekvist", function() {deepEqual( Stem("tjørnekvistes"), "tjørnekvist");});
test("tjørnen -> tjørn", function() {deepEqual( Stem("tjørnen"), "tjørn");});
test("tling -> tling", function() {deepEqual( Stem("tling"), "tling");});
test("tneldte -> tneld", function() {deepEqual( Stem("tneldte"), "tneld");});
test("tnægtig -> tnægt", function() {deepEqual( Stem("tnægtig"), "tnægt");});
test("to -> to", function() {deepEqual( Stem("to"), "to");});
test("toa -> toa", function() {deepEqual( Stem("toa"), "toa");});
test("tob -> tob", function() {deepEqual( Stem("tob"), "tob");});
test("tobija -> tobija", function() {deepEqual( Stem("tobija"), "tobija");});
test("tobijas -> tobija", function() {deepEqual( Stem("tobijas"), "tobija");});
test("toed -> toed", function() {deepEqual( Stem("toed"), "toed");});
test("toede -> toed", function() {deepEqual( Stem("toede"), "toed");});
test("toet -> toet", function() {deepEqual( Stem("toet"), "toet");});
test("tofel -> tofel", function() {deepEqual( Stem("tofel"), "tofel");});
test("tofet -> tof", function() {deepEqual( Stem("tofet"), "tof");});
test("tofets -> tof", function() {deepEqual( Stem("tofets"), "tof");});
test("tog -> tog", function() {deepEqual( Stem("tog"), "tog");});
test("togarma -> togarma", function() {deepEqual( Stem("togarma"), "togarma");});
test("togarmas -> togarma", function() {deepEqual( Stem("togarmas"), "togarma");});
test("toge -> tog", function() {deepEqual( Stem("toge"), "tog");});
test("toges -> tog", function() {deepEqual( Stem("toges"), "tog");});
test("toget -> tog", function() {deepEqual( Stem("toget"), "tog");});
test("togt -> togt", function() {deepEqual( Stem("togt"), "togt");});
test("tohu -> tohu", function() {deepEqual( Stem("tohu"), "tohu");});
test("token -> tok", function() {deepEqual( Stem("token"), "tok");});
test("tokhat -> tokhat", function() {deepEqual( Stem("tokhat"), "tokhat");});
test("tola -> tola", function() {deepEqual( Stem("tola"), "tola");});
test("tolad -> tolad", function() {deepEqual( Stem("tolad"), "tolad");});
test("tolaiternes -> tolait", function() {deepEqual( Stem("tolaiternes"), "tolait");});
test("tolas -> tola", function() {deepEqual( Stem("tolas"), "tola");});
test("told -> told", function() {deepEqual( Stem("told"), "told");});
test("toldboden -> toldbod", function() {deepEqual( Stem("toldboden"), "toldbod");});
test("tolder -> told", function() {deepEqual( Stem("tolder"), "told");});
test("toldere -> told", function() {deepEqual( Stem("toldere"), "told");});
test("tolderen -> told", function() {deepEqual( Stem("tolderen"), "told");});
test("tolderes -> told", function() {deepEqual( Stem("tolderes"), "told");});
test("tolderne -> told", function() {deepEqual( Stem("tolderne"), "told");});
test("tolk -> tolk", function() {deepEqual( Stem("tolk"), "tolk");});
test("tolke -> tolk", function() {deepEqual( Stem("tolke"), "tolk");});
test("tolv -> tolv", function() {deepEqual( Stem("tolv"), "tolv");});
test("tolvstammefolk -> tolvstammefolk", function() {deepEqual( Stem("tolvstammefolk"), "tolvstammefolk");});
test("tolvte -> tolvt", function() {deepEqual( Stem("tolvte"), "tolvt");});
test("tom -> tom", function() {deepEqual( Stem("tom"), "tom");});
test("tomhed -> tom", function() {deepEqual( Stem("tomhed"), "tom");});
test("tomheden -> tom", function() {deepEqual( Stem("tomheden"), "tom");});
test("tomheds -> tom", function() {deepEqual( Stem("tomheds"), "tom");});
test("tomhjernet -> tomhjern", function() {deepEqual( Stem("tomhjernet"), "tomhjern");});
test("tomhændede -> tomhænded", function() {deepEqual( Stem("tomhændede"), "tomhænded");});
test("tomhændet -> tomhænd", function() {deepEqual( Stem("tomhændet"), "tomhænd");});
test("tomme -> tom", function() {deepEqual( Stem("tomme"), "tom");});
test("tommelfinger -> tommelfing", function() {deepEqual( Stem("tommelfinger"), "tommelfing");});
test("tommelfingre -> tommelfingr", function() {deepEqual( Stem("tommelfingre"), "tommelfingr");});
test("tommelfingrene -> tommelfingr", function() {deepEqual( Stem("tommelfingrene"), "tommelfingr");});
test("tommeltå -> tommeltå", function() {deepEqual( Stem("tommeltå"), "tommeltå");});
test("tommeltæer -> tommeltæ", function() {deepEqual( Stem("tommeltæer"), "tommeltæ");});
test("tommeltæerne -> tommeltæ", function() {deepEqual( Stem("tommeltæerne"), "tommeltæ");});
test("tomt -> tomt", function() {deepEqual( Stem("tomt"), "tomt");});
test("tomter -> tomt", function() {deepEqual( Stem("tomter"), "tomt");});
test("tomterne -> tomt", function() {deepEqual( Stem("tomterne"), "tomt");});
test("tone -> ton", function() {deepEqual( Stem("tone"), "ton");});
test("toner -> ton", function() {deepEqual( Stem("toner"), "ton");});
test("tonerne -> ton", function() {deepEqual( Stem("tonerne"), "ton");});
test("top -> top", function() {deepEqual( Stem("top"), "top");});
test("topas -> topa", function() {deepEqual( Stem("topas"), "topa");});
test("topfuldt -> topfuld", function() {deepEqual( Stem("topfuldt"), "topfuld");});
test("toppe -> top", function() {deepEqual( Stem("toppe"), "top");});
test("toppen -> top", function() {deepEqual( Stem("toppen"), "top");});
test("topstenen -> topsten", function() {deepEqual( Stem("topstenen"), "topsten");});
test("tor -> tor", function() {deepEqual( Stem("tor"), "tor");});
test("torden -> tord", function() {deepEqual( Stem("torden"), "tord");});
test("tordenen -> torden", function() {deepEqual( Stem("tordenen"), "torden");});
test("tordenens -> torden", function() {deepEqual( Stem("tordenens"), "torden");});
test("tordener -> torden", function() {deepEqual( Stem("tordener"), "torden");});
test("tordenrøst -> tordenrøst", function() {deepEqual( Stem("tordenrøst"), "tordenrøst");});
test("tordens -> tord", function() {deepEqual( Stem("tordens"), "tord");});
test("tordenskyen -> tordensky", function() {deepEqual( Stem("tordenskyen"), "tordensky");});
test("tordensønner -> tordensøn", function() {deepEqual( Stem("tordensønner"), "tordensøn");});
test("tordenvejr -> tordenvejr", function() {deepEqual( Stem("tordenvejr"), "tordenvejr");});
test("tordne -> tordn", function() {deepEqual( Stem("tordne"), "tordn");});
test("tordned -> tordned", function() {deepEqual( Stem("tordned"), "tordned");});
test("tordnede -> tordned", function() {deepEqual( Stem("tordnede"), "tordned");});
test("tordner -> tordn", function() {deepEqual( Stem("tordner"), "tordn");});
test("tordnet -> tordn", function() {deepEqual( Stem("tordnet"), "tordn");});
test("torn -> torn", function() {deepEqual( Stem("torn"), "torn");});
test("torne -> torn", function() {deepEqual( Stem("torne"), "torn");});
test("tornebusk -> tornebusk", function() {deepEqual( Stem("tornebusk"), "tornebusk");});
test("tornebusken -> tornebusk", function() {deepEqual( Stem("tornebusken"), "tornebusk");});
test("tornekrat -> tornekrat", function() {deepEqual( Stem("tornekrat"), "tornekrat");});
test("tornekrone -> tornekron", function() {deepEqual( Stem("tornekrone"), "tornekron");});
test("tornekronen -> tornekron", function() {deepEqual( Stem("tornekronen"), "tornekron");});
test("tornekæp -> tornekæp", function() {deepEqual( Stem("tornekæp"), "tornekæp");});
test("tornene -> torn", function() {deepEqual( Stem("tornene"), "torn");});
test("torv -> torv", function() {deepEqual( Stem("torv"), "torv");});
test("torve -> torv", function() {deepEqual( Stem("torve"), "torv");});
test("torvene -> torv", function() {deepEqual( Stem("torvene"), "torv");});
test("torvet -> torv", function() {deepEqual( Stem("torvet"), "torv");});
test("tove -> tov", function() {deepEqual( Stem("tove"), "tov");});
test("tovværk -> tovværk", function() {deepEqual( Stem("tovværk"), "tovværk");});
test("traf -> traf", function() {deepEqual( Stem("traf"), "traf");});
test("tragakantgummi -> tragakantgummi", function() {deepEqual( Stem("tragakantgummi"), "tragakantgummi");});
test("tragte -> tragt", function() {deepEqual( Stem("tragte"), "tragt");});
test("tragtede -> tragted", function() {deepEqual( Stem("tragtede"), "tragted");});
test("tragten -> tragt", function() {deepEqual( Stem("tragten"), "tragt");});
test("tragter -> tragt", function() {deepEqual( Stem("tragter"), "tragt");});
test("trak -> trak", function() {deepEqual( Stem("trak"), "trak");});
test("trakonitis -> trakonitis", function() {deepEqual( Stem("trakonitis"), "trakonitis");});
test("trampe -> tramp", function() {deepEqual( Stem("trampe"), "tramp");});
test("tramped -> tramped", function() {deepEqual( Stem("tramped"), "tramped");});
test("trampede -> tramped", function() {deepEqual( Stem("trampede"), "tramped");});
test("tramper -> tramp", function() {deepEqual( Stem("tramper"), "tramp");});
test("trampes -> tramp", function() {deepEqual( Stem("trampes"), "tramp");});
test("tranen -> tran", function() {deepEqual( Stem("tranen"), "tran");});
test("trang -> trang", function() {deepEqual( Stem("trang"), "trang");});
test("trangt -> trang", function() {deepEqual( Stem("trangt"), "trang");});
test("trappe -> trap", function() {deepEqual( Stem("trappe"), "trap");});
test("trappen -> trap", function() {deepEqual( Stem("trappen"), "trap");});
test("trappetrin -> trappetrin", function() {deepEqual( Stem("trappetrin"), "trappetrin");});
test("travle -> travl", function() {deepEqual( Stem("travle"), "travl");});
test("travlhed -> travl", function() {deepEqual( Stem("travlhed"), "travl");});
test("travlt -> travlt", function() {deepEqual( Stem("travlt"), "travlt");});
test("tre -> tre", function() {deepEqual( Stem("tre"), "tre");});
test("tredie -> tredi", function() {deepEqual( Stem("tredie"), "tredi");});
test("tredive -> trediv", function() {deepEqual( Stem("tredive"), "trediv");});
test("tredives -> trediv", function() {deepEqual( Stem("tredives"), "trediv");});
test("trediveårsalderen -> trediveårsald", function() {deepEqual( Stem("trediveårsalderen"), "trediveårsald");});
test("tredivte -> tredivt", function() {deepEqual( Stem("tredivte"), "tredivt");});
test("tredje -> tredj", function() {deepEqual( Stem("tredje"), "tredj");});
test("tredjedagen -> tredjedag", function() {deepEqual( Stem("tredjedagen"), "tredjedag");});
test("tredjedel -> tredjedel", function() {deepEqual( Stem("tredjedel"), "tredjedel");});
test("tredjedele -> tredjedel", function() {deepEqual( Stem("tredjedele"), "tredjedel");});
test("tredjedelen -> tredjedel", function() {deepEqual( Stem("tredjedelen"), "tredjedel");});
test("tredsindstyve -> tredsindstyv", function() {deepEqual( Stem("tredsindstyve"), "tredsindstyv");});
test("trefold -> trefold", function() {deepEqual( Stem("trefold"), "trefold");});
test("tregrenet -> tregren", function() {deepEqual( Stem("tregrenet"), "tregren");});
test("trende -> trend", function() {deepEqual( Stem("trende"), "trend");});
test("tres -> tres", function() {deepEqual( Stem("tres"), "tres");});
test("tresindstyve -> tresindstyv", function() {deepEqual( Stem("tresindstyve"), "tresindstyv");});
test("tresindstyvende -> tresindstyv", function() {deepEqual( Stem("tresindstyvende"), "tresindstyv");});
test("tretten -> tret", function() {deepEqual( Stem("tretten"), "tret");});
test("trettende -> tret", function() {deepEqual( Stem("trettende"), "tret");});
test("tretvundet -> tretvund", function() {deepEqual( Stem("tretvundet"), "tretvund");});
test("treårs -> treår", function() {deepEqual( Stem("treårs"), "treår");});
test("treårsalderen -> treårsald", function() {deepEqual( Stem("treårsalderen"), "treårsald");});
test("trin -> trin", function() {deepEqual( Stem("trin"), "trin");});
test("trindt -> trind", function() {deepEqual( Stem("trindt"), "trind");});
test("trinene -> trin", function() {deepEqual( Stem("trinene"), "trin");});
test("trippende -> trip", function() {deepEqual( Stem("trippende"), "trip");});
test("trives -> triv", function() {deepEqual( Stem("trives"), "triv");});
test("tro -> tro", function() {deepEqual( Stem("tro"), "tro");});
test("troas -> troas", function() {deepEqual( Stem("troas"), "troas");});
test("trods -> trod", function() {deepEqual( Stem("trods"), "trod");});
test("trodse -> trods", function() {deepEqual( Stem("trodse"), "trods");});
test("trodsede -> trodsed", function() {deepEqual( Stem("trodsede"), "trodsed");});
test("trodser -> trods", function() {deepEqual( Stem("trodser"), "trods");});
test("trodsige -> trods", function() {deepEqual( Stem("trodsige"), "trods");});
test("trodsigt -> trods", function() {deepEqual( Stem("trodsigt"), "trods");});
test("troede -> troed", function() {deepEqual( Stem("troede"), "troed");});
test("troen -> troen", function() {deepEqual( Stem("troen"), "troen");});
test("troende -> troend", function() {deepEqual( Stem("troende"), "troend");});
test("troendes -> troend", function() {deepEqual( Stem("troendes"), "troend");});
test("troens -> troen", function() {deepEqual( Stem("troens"), "troen");});
test("troet -> troet", function() {deepEqual( Stem("troet"), "troet");});
test("trofast -> trofast", function() {deepEqual( Stem("trofast"), "trofast");});
test("trofaste -> trofast", function() {deepEqual( Stem("trofaste"), "trofast");});
test("trofasthed -> trofast", function() {deepEqual( Stem("trofasthed"), "trofast");});
test("trofastheds -> trofast", function() {deepEqual( Stem("trofastheds"), "trofast");});
test("trofimmus -> trofimmus", function() {deepEqual( Stem("trofimmus"), "trofimmus");});
test("trofimus -> trofimus", function() {deepEqual( Stem("trofimus"), "trofimus");});
test("trolddom -> trolddom", function() {deepEqual( Stem("trolddom"), "trolddom");});
test("trolddommen -> trolddom", function() {deepEqual( Stem("trolddommen"), "trolddom");});
test("trolddomskunster -> trolddomskunst", function() {deepEqual( Stem("trolddomskunster"), "trolddomskunst");});
test("trolddomssynd -> trolddomssynd", function() {deepEqual( Stem("trolddomssynd"), "trolddomssynd");});
test("troldkarl -> troldkarl", function() {deepEqual( Stem("troldkarl"), "troldkarl");});
test("troldkarlen -> troldkarl", function() {deepEqual( Stem("troldkarlen"), "troldkarl");});
test("troldkarlene -> troldkarl", function() {deepEqual( Stem("troldkarlene"), "troldkarl");});
test("troldkvinde -> troldkvind", function() {deepEqual( Stem("troldkvinde"), "troldkvind");});
test("troldkvindens -> troldkvind", function() {deepEqual( Stem("troldkvindens"), "troldkvind");});
test("troldmænd -> troldmænd", function() {deepEqual( Stem("troldmænd"), "troldmænd");});
test("troldmændene -> troldmænd", function() {deepEqual( Stem("troldmændene"), "troldmænd");});
test("troldsten -> troldst", function() {deepEqual( Stem("troldsten"), "troldst");});
test("trolig -> trol", function() {deepEqual( Stem("trolig"), "trol");});
test("troligt -> trol", function() {deepEqual( Stem("troligt"), "trol");});
test("trolovede -> troloved", function() {deepEqual( Stem("trolovede"), "troloved");});
test("trolover -> trolov", function() {deepEqual( Stem("trolover"), "trolov");});
test("trolovet -> trolov", function() {deepEqual( Stem("trolovet"), "trolov");});
test("troløs -> troløs", function() {deepEqual( Stem("troløs"), "troløs");});
test("troløse -> troløs", function() {deepEqual( Stem("troløse"), "troløs");});
test("troløses -> troløs", function() {deepEqual( Stem("troløses"), "troløs");});
test("troløshed -> troløs", function() {deepEqual( Stem("troløshed"), "troløs");});
test("troløsheden -> troløs", function() {deepEqual( Stem("troløsheden"), "troløs");});
test("troløst -> troløst", function() {deepEqual( Stem("troløst"), "troløst");});
test("trommede -> trommed", function() {deepEqual( Stem("trommede"), "trommed");});
test("trompetblæserne -> trompetblæs", function() {deepEqual( Stem("trompetblæserne"), "trompetblæs");});
test("trompeten -> trompet", function() {deepEqual( Stem("trompeten"), "trompet");});
test("trompeter -> trompet", function() {deepEqual( Stem("trompeter"), "trompet");});
test("trompeterne -> trompet", function() {deepEqual( Stem("trompeterne"), "trompet");});
test("trompeternes -> trompet", function() {deepEqual( Stem("trompeternes"), "trompet");});
test("trompeters -> trompet", function() {deepEqual( Stem("trompeters"), "trompet");});
test("tronbestigelse -> tronbestig", function() {deepEqual( Stem("tronbestigelse"), "tronbestig");});
test("trone -> tron", function() {deepEqual( Stem("trone"), "tron");});
test("troned -> troned", function() {deepEqual( Stem("troned"), "troned");});
test("tronen -> tron", function() {deepEqual( Stem("tronen"), "tron");});
test("troner -> tron", function() {deepEqual( Stem("troner"), "tron");});
test("tronerne -> tron", function() {deepEqual( Stem("tronerne"), "tron");});
test("trones -> tron", function() {deepEqual( Stem("trones"), "tron");});
test("tronhallen -> tronhal", function() {deepEqual( Stem("tronhallen"), "tronhal");});
test("trontæppe -> trontæp", function() {deepEqual( Stem("trontæppe"), "trontæp");});
test("tror -> tror", function() {deepEqual( Stem("tror"), "tror");});
test("tros -> tros", function() {deepEqual( Stem("tros"), "tros");});
test("troskab -> troskab", function() {deepEqual( Stem("troskab"), "troskab");});
test("troskaben -> troskab", function() {deepEqual( Stem("troskaben"), "troskab");});
test("troskabs -> troskab", function() {deepEqual( Stem("troskabs"), "troskab");});
test("troskyldiges -> troskyld", function() {deepEqual( Stem("troskyldiges"), "troskyld");});
test("troskyldighed -> troskyld", function() {deepEqual( Stem("troskyldighed"), "troskyld");});
test("troslydighed -> troslyd", function() {deepEqual( Stem("troslydighed"), "troslyd");});
test("trosset -> tros", function() {deepEqual( Stem("trosset"), "tros");});
test("troværdig -> troværd", function() {deepEqual( Stem("troværdig"), "troværd");});
test("troværdige -> troværd", function() {deepEqual( Stem("troværdige"), "troværd");});
test("troværdigt -> troværd", function() {deepEqual( Stem("troværdigt"), "troværd");});
test("tru -> tru", function() {deepEqual( Stem("tru"), "tru");});
test("true -> true", function() {deepEqual( Stem("true"), "true");});
test("trued -> trued", function() {deepEqual( Stem("trued"), "trued");});
test("truede -> trued", function() {deepEqual( Stem("truede"), "trued");});
test("truende -> truend", function() {deepEqual( Stem("truende"), "truend");});
test("truer -> truer", function() {deepEqual( Stem("truer"), "truer");});
test("trues -> trues", function() {deepEqual( Stem("trues"), "trues");});
test("truet -> truet", function() {deepEqual( Stem("truet"), "truet");});
test("truffet -> truf", function() {deepEqual( Stem("truffet"), "truf");});
test("trugene -> trug", function() {deepEqual( Stem("trugene"), "trug");});
test("truget -> trug", function() {deepEqual( Stem("truget"), "trug");});
test("trukket -> truk", function() {deepEqual( Stem("trukket"), "truk");});
test("trusel -> trusel", function() {deepEqual( Stem("trusel"), "trusel");});
test("truselen -> trusel", function() {deepEqual( Stem("truselen"), "trusel");});
test("trusler -> trusl", function() {deepEqual( Stem("trusler"), "trusl");});
test("trussel -> trussel", function() {deepEqual( Stem("trussel"), "trussel");});
test("tryfosa -> tryfosa", function() {deepEqual( Stem("tryfosa"), "tryfosa");});
test("tryfæna -> tryfæna", function() {deepEqual( Stem("tryfæna"), "tryfæna");});
test("tryg -> tryg", function() {deepEqual( Stem("tryg"), "tryg");});
test("trygge -> tryg", function() {deepEqual( Stem("trygge"), "tryg");});
test("tryghed -> tryg", function() {deepEqual( Stem("tryghed"), "tryg");});
test("trygle -> trygl", function() {deepEqual( Stem("trygle"), "trygl");});
test("tryglen -> trygl", function() {deepEqual( Stem("tryglen"), "trygl");});
test("tryglende -> trygl", function() {deepEqual( Stem("tryglende"), "trygl");});
test("trygler -> trygl", function() {deepEqual( Stem("trygler"), "trygl");});
test("trygt -> trygt", function() {deepEqual( Stem("trygt"), "trygt");});
test("tryk -> tryk", function() {deepEqual( Stem("tryk"), "tryk");});
test("trykke -> tryk", function() {deepEqual( Stem("trykke"), "tryk");});
test("trykkede -> trykked", function() {deepEqual( Stem("trykkede"), "trykked");});
test("trykkende -> tryk", function() {deepEqual( Stem("trykkende"), "tryk");});
test("trykker -> tryk", function() {deepEqual( Stem("trykker"), "tryk");});
test("trykket -> tryk", function() {deepEqual( Stem("trykket"), "tryk");});
test("trylleord -> trylleord", function() {deepEqual( Stem("trylleord"), "trylleord");});
test("trylleri -> trylleri", function() {deepEqual( Stem("trylleri"), "trylleri");});
test("trylleringe -> tryllering", function() {deepEqual( Stem("trylleringe"), "tryllering");});
test("tråd -> tråd", function() {deepEqual( Stem("tråd"), "tråd");});
test("tråde -> tråd", function() {deepEqual( Stem("tråde"), "tråd");});
test("tråden -> tråd", function() {deepEqual( Stem("tråden"), "tråd");});
test("trådt -> trådt", function() {deepEqual( Stem("trådt"), "trådt");});
test("trådte -> trådt", function() {deepEqual( Stem("trådte"), "trådt");});
test("trådtehan -> trådtehan", function() {deepEqual( Stem("trådtehan"), "trådtehan");});
test("trådtes -> trådt", function() {deepEqual( Stem("trådtes"), "trådt");});
test("træ -> træ", function() {deepEqual( Stem("træ"), "træ");});
test("træalter -> træalt", function() {deepEqual( Stem("træalter"), "træalt");});
test("træd -> træd", function() {deepEqual( Stem("træd"), "træd");});
test("træde -> træd", function() {deepEqual( Stem("træde"), "træd");});
test("træden -> træd", function() {deepEqual( Stem("træden"), "træd");});
test("træder -> træd", function() {deepEqual( Stem("træder"), "træd");});
test("trædes -> træd", function() {deepEqual( Stem("trædes"), "træd");});
test("træer -> træer", function() {deepEqual( Stem("træer"), "træer");});
test("træerne -> træern", function() {deepEqual( Stem("træerne"), "træern");});
test("træernes -> træern", function() {deepEqual( Stem("træernes"), "træern");});
test("træet -> træet", function() {deepEqual( Stem("træet"), "træet");});
test("træets -> træet", function() {deepEqual( Stem("træets"), "træet");});
test("træffe -> træf", function() {deepEqual( Stem("træffe"), "træf");});
test("træffer -> træf", function() {deepEqual( Stem("træffer"), "træf");});
test("træfrugter -> træfrug", function() {deepEqual( Stem("træfrugter"), "træfrug");});
test("træk -> træk", function() {deepEqual( Stem("træk"), "træk");});
test("trækar -> trækar", function() {deepEqual( Stem("trækar"), "trækar");});
test("trække -> træk", function() {deepEqual( Stem("trække"), "træk");});
test("trækker -> træk", function() {deepEqual( Stem("trækker"), "træk");});
test("trækkes -> træk", function() {deepEqual( Stem("trækkes"), "træk");});
test("træklods -> træklod", function() {deepEqual( Stem("træklods"), "træklod");});
test("træklædt -> træklæd", function() {deepEqual( Stem("træklædt"), "træklæd");});
test("træklædte -> træklæd", function() {deepEqual( Stem("træklædte"), "træklæd");});
test("trækul -> trækul", function() {deepEqual( Stem("trækul"), "trækul");});
test("træl -> træl", function() {deepEqual( Stem("træl"), "træl");});
test("trælbunden -> trælbund", function() {deepEqual( Stem("trælbunden"), "trælbund");});
test("trældkvinde -> trældkvind", function() {deepEqual( Stem("trældkvinde"), "trældkvind");});
test("trældom -> trældom", function() {deepEqual( Stem("trældom"), "trældom");});
test("trældommen -> trældom", function() {deepEqual( Stem("trældommen"), "trældom");});
test("trældoms -> trældom", function() {deepEqual( Stem("trældoms"), "trældom");});
test("trældon -> trældon", function() {deepEqual( Stem("trældon"), "trældon");});
test("trældyr -> trældyr", function() {deepEqual( Stem("trældyr"), "trældyr");});
test("trældyrs -> trældyr", function() {deepEqual( Stem("trældyrs"), "trældyr");});
test("trælkvinde -> trælkvind", function() {deepEqual( Stem("trælkvinde"), "trælkvind");});
test("trælkvinden -> trælkvind", function() {deepEqual( Stem("trælkvinden"), "trælkvind");});
test("trælkvindens -> trælkvind", function() {deepEqual( Stem("trælkvindens"), "trælkvind");});
test("trælkvinder -> trælkvind", function() {deepEqual( Stem("trælkvinder"), "trælkvind");});
test("trælkvinderne -> trælkvind", function() {deepEqual( Stem("trælkvinderne"), "trælkvind");});
test("trælkvinders -> trælkvind", function() {deepEqual( Stem("trælkvinders"), "trælkvind");});
test("trælkvindes -> trælkvind", function() {deepEqual( Stem("trælkvindes"), "trælkvind");});
test("trælle -> træl", function() {deepEqual( Stem("trælle"), "træl");});
test("trællearbejde -> trællearbejd", function() {deepEqual( Stem("trællearbejde"), "trællearbejd");});
test("trællede -> trælled", function() {deepEqual( Stem("trællede"), "trælled");});
test("trællehuset -> trællehus", function() {deepEqual( Stem("trællehuset"), "trællehus");});
test("trællen -> træl", function() {deepEqual( Stem("trællen"), "træl");});
test("trællene -> træl", function() {deepEqual( Stem("trællene"), "træl");});
test("træller -> træl", function() {deepEqual( Stem("træller"), "træl");});
test("trælles -> træl", function() {deepEqual( Stem("trælles"), "træl");});
test("trællet -> træl", function() {deepEqual( Stem("trællet"), "træl");});
test("træls -> træl", function() {deepEqual( Stem("træls"), "træl");});
test("træn -> træn", function() {deepEqual( Stem("træn"), "træn");});
test("træng -> træng", function() {deepEqual( Stem("træng"), "træng");});
test("trænge -> træng", function() {deepEqual( Stem("trænge"), "træng");});
test("trængende -> træng", function() {deepEqual( Stem("trængende"), "træng");});
test("trænger -> træng", function() {deepEqual( Stem("trænger"), "træng");});
test("trænges -> træng", function() {deepEqual( Stem("trænges"), "træng");});
test("trængle -> trængl", function() {deepEqual( Stem("trængle"), "trængl");});
test("trængsel -> trængsel", function() {deepEqual( Stem("trængsel"), "trængsel");});
test("trængselen -> trængsel", function() {deepEqual( Stem("trængselen"), "trængsel");});
test("trængselens -> trængsel", function() {deepEqual( Stem("trængselens"), "trængsel");});
test("trængsels -> trængsel", function() {deepEqual( Stem("trængsels"), "trængsel");});
test("trængselsbrød -> trængselsbrød", function() {deepEqual( Stem("trængselsbrød"), "trængselsbrød");});
test("trængselshavet -> trængselshav", function() {deepEqual( Stem("trængselshavet"), "trængselshav");});
test("trængselsmørke -> trængselsmørk", function() {deepEqual( Stem("trængselsmørke"), "trængselsmørk");});
test("trængselstid -> trængselstid", function() {deepEqual( Stem("trængselstid"), "trængselstid");});
test("trængselstider -> trængselstid", function() {deepEqual( Stem("trængselstider"), "trængselstid");});
test("trængselsvand -> trængselsvand", function() {deepEqual( Stem("trængselsvand"), "trængselsvand");});
test("trængslen -> trængsl", function() {deepEqual( Stem("trængslen"), "trængsl");});
test("trængslens -> trængsl", function() {deepEqual( Stem("trængslens"), "trængsl");});
test("trængsler -> trængsl", function() {deepEqual( Stem("trængsler"), "trængsl");});
test("trængslerne -> trængsl", function() {deepEqual( Stem("trængslerne"), "trængsl");});
test("trængt -> træng", function() {deepEqual( Stem("trængt"), "træng");});
test("trængte -> træng", function() {deepEqual( Stem("trængte"), "træng");});
test("trængtes -> træng", function() {deepEqual( Stem("trængtes"), "træng");});
test("træredskab -> træredskab", function() {deepEqual( Stem("træredskab"), "træredskab");});
test("træredskaber -> træredskab", function() {deepEqual( Stem("træredskaber"), "træredskab");});
test("træsk -> træsk", function() {deepEqual( Stem("træsk"), "træsk");});
test("træskere -> træsk", function() {deepEqual( Stem("træskere"), "træsk");});
test("træskhed -> træsk", function() {deepEqual( Stem("træskhed"), "træsk");});
test("træskærerarbejde -> træskærerarbejd", function() {deepEqual( Stem("træskærerarbejde"), "træskærerarbejd");});
test("træstammerne -> træstam", function() {deepEqual( Stem("træstammerne"), "træstam");});
test("træstykkerne -> træstyk", function() {deepEqual( Stem("træstykkerne"), "træstyk");});
test("træt -> træt", function() {deepEqual( Stem("træt"), "træt");});
test("trætag -> trætag", function() {deepEqual( Stem("trætag"), "trætag");});
test("træting -> træting", function() {deepEqual( Stem("træting"), "træting");});
test("trætte -> træt", function() {deepEqual( Stem("trætte"), "træt");});
test("trætted -> trætted", function() {deepEqual( Stem("trætted"), "trætted");});
test("trættede -> trætted", function() {deepEqual( Stem("trættede"), "trætted");});
test("trættekær -> trættekær", function() {deepEqual( Stem("trættekær"), "trættekær");});
test("trættekære -> trættekær", function() {deepEqual( Stem("trættekære"), "trættekær");});
test("trætten -> træt", function() {deepEqual( Stem("trætten"), "træt");});
test("trætter -> træt", function() {deepEqual( Stem("trætter"), "træt");});
test("trættes -> træt", function() {deepEqual( Stem("trættes"), "træt");});
test("træværk -> træværk", function() {deepEqual( Stem("træværk"), "træværk");});
test("træværket -> træværk", function() {deepEqual( Stem("træværket"), "træværk");});
test("trøske -> trøsk", function() {deepEqual( Stem("trøske"), "trøsk");});
test("trøsket -> trøsk", function() {deepEqual( Stem("trøsket"), "trøsk");});
test("trøst -> trøst", function() {deepEqual( Stem("trøst"), "trøst");});
test("trøste -> trøst", function() {deepEqual( Stem("trøste"), "trøst");});
test("trøstebæger -> trøstebæg", function() {deepEqual( Stem("trøstebæger"), "trøstebæg");});
test("trøstede -> trøsted", function() {deepEqual( Stem("trøstede"), "trøsted");});
test("trøsten -> trøst", function() {deepEqual( Stem("trøsten"), "trøst");});
test("trøstende -> trøst", function() {deepEqual( Stem("trøstende"), "trøst");});
test("trøstens -> trøst", function() {deepEqual( Stem("trøstens"), "trøst");});
test("trøster -> trøst", function() {deepEqual( Stem("trøster"), "trøst");});
test("trøstere -> trøst", function() {deepEqual( Stem("trøstere"), "trøst");});
test("trøstes -> trøst", function() {deepEqual( Stem("trøstes"), "trøst");});
test("trøstesløs -> trøstesløs", function() {deepEqual( Stem("trøstesløs"), "trøstesløs");});
test("trøstet -> trøst", function() {deepEqual( Stem("trøstet"), "trøst");});
test("trøstig -> trøst", function() {deepEqual( Stem("trøstig"), "trøst");});
test("trøstigt -> trøst", function() {deepEqual( Stem("trøstigt"), "trøst");});
test("trøsts -> trøst", function() {deepEqual( Stem("trøsts"), "trøst");});
test("tsrael -> tsrael", function() {deepEqual( Stem("tsrael"), "tsrael");});
test("tsraeliterne -> tsraelit", function() {deepEqual( Stem("tsraeliterne"), "tsraelit");});
test("tte -> tte", function() {deepEqual( Stem("tte"), "tte");});
test("tubal -> tubal", function() {deepEqual( Stem("tubal"), "tubal");});
test("tuder -> tud", function() {deepEqual( Stem("tuder"), "tud");});
test("tugt -> tugt", function() {deepEqual( Stem("tugt"), "tugt");});
test("tugte -> tugt", function() {deepEqual( Stem("tugte"), "tugt");});
test("tugted -> tugted", function() {deepEqual( Stem("tugted"), "tugted");});
test("tugtede -> tugted", function() {deepEqual( Stem("tugtede"), "tugted");});
test("tugtelse -> tugt", function() {deepEqual( Stem("tugtelse"), "tugt");});
test("tugtelsens -> tugt", function() {deepEqual( Stem("tugtelsens"), "tugt");});
test("tugtemester -> tugtemest", function() {deepEqual( Stem("tugtemester"), "tugtemest");});
test("tugtens -> tugt", function() {deepEqual( Stem("tugtens"), "tugt");});
test("tugter -> tugt", function() {deepEqual( Stem("tugter"), "tugt");});
test("tugtes -> tugt", function() {deepEqual( Stem("tugtes"), "tugt");});
test("tugtet -> tugt", function() {deepEqual( Stem("tugtet"), "tugt");});
test("tujal -> tujal", function() {deepEqual( Stem("tujal"), "tujal");});
test("tumled -> tumled", function() {deepEqual( Stem("tumled"), "tumled");});
test("tumler -> tuml", function() {deepEqual( Stem("tumler"), "tuml");});
test("tummel -> tummel", function() {deepEqual( Stem("tummel"), "tummel");});
test("tummim -> tummim", function() {deepEqual( Stem("tummim"), "tummim");});
test("tung -> tung", function() {deepEqual( Stem("tung"), "tung");});
test("tunge -> tung", function() {deepEqual( Stem("tunge"), "tung");});
test("tungemål -> tungemål", function() {deepEqual( Stem("tungemål"), "tungemål");});
test("tungen -> tung", function() {deepEqual( Stem("tungen"), "tung");});
test("tungens -> tung", function() {deepEqual( Stem("tungens"), "tung");});
test("tunger -> tung", function() {deepEqual( Stem("tunger"), "tung");});
test("tungere -> tung", function() {deepEqual( Stem("tungere"), "tung");});
test("tungers -> tung", function() {deepEqual( Stem("tungers"), "tung");});
test("tunges -> tung", function() {deepEqual( Stem("tunges"), "tung");});
test("tungetale -> tungetal", function() {deepEqual( Stem("tungetale"), "tungetal");});
test("tungetalen -> tungetal", function() {deepEqual( Stem("tungetalen"), "tungetal");});
test("tungt -> tung", function() {deepEqual( Stem("tungt"), "tung");});
test("turde -> turd", function() {deepEqual( Stem("turde"), "turd");});
test("turdet -> turd", function() {deepEqual( Stem("turdet"), "turd");});
test("turen -> tur", function() {deepEqual( Stem("turen"), "tur");});
test("turteldue -> turteldu", function() {deepEqual( Stem("turteldue"), "turteldu");});
test("turtelduen -> turteldu", function() {deepEqual( Stem("turtelduen"), "turteldu");});
test("turtelduens -> turteldu", function() {deepEqual( Stem("turtelduens"), "turteldu");});
test("turtelduer -> turteldu", function() {deepEqual( Stem("turtelduer"), "turteldu");});
test("turtelduerne -> turteldu", function() {deepEqual( Stem("turtelduerne"), "turteldu");});
test("turteldues -> turteldu", function() {deepEqual( Stem("turteldues"), "turteldu");});
test("tusind -> tusind", function() {deepEqual( Stem("tusind"), "tusind");});
test("tusinde -> tusind", function() {deepEqual( Stem("tusinde"), "tusind");});
test("tusinder -> tusind", function() {deepEqual( Stem("tusinder"), "tusind");});
test("tusindfører -> tusindfør", function() {deepEqual( Stem("tusindfører"), "tusindfør");});
test("tusindførere -> tusindfør", function() {deepEqual( Stem("tusindførere"), "tusindfør");});
test("tusindføreren -> tusindfør", function() {deepEqual( Stem("tusindføreren"), "tusindfør");});
test("tusindførerne -> tusindfør", function() {deepEqual( Stem("tusindførerne"), "tusindfør");});
test("tusindvis -> tusindvis", function() {deepEqual( Stem("tusindvis"), "tusindvis");});
test("tvang -> tvang", function() {deepEqual( Stem("tvang"), "tvang");});
test("tvangshuset -> tvangshus", function() {deepEqual( Stem("tvangshuset"), "tvangshus");});
test("tvedelt -> tvedelt", function() {deepEqual( Stem("tvedelt"), "tvedelt");});
test("tvedragt -> tvedrag", function() {deepEqual( Stem("tvedragt"), "tvedrag");});
test("tvefold -> tvefold", function() {deepEqual( Stem("tvefold"), "tvefold");});
test("tvehornede -> tvehorned", function() {deepEqual( Stem("tvehornede"), "tvehorned");});
test("tvekæmper -> tvekæmp", function() {deepEqual( Stem("tvekæmper"), "tvekæmp");});
test("tvekæmperen -> tvekæmp", function() {deepEqual( Stem("tvekæmperen"), "tvekæmp");});
test("tvende -> tvend", function() {deepEqual( Stem("tvende"), "tvend");});
test("tvesindede -> tvesinded", function() {deepEqual( Stem("tvesindede"), "tvesinded");});
test("tvesindet -> tvesind", function() {deepEqual( Stem("tvesindet"), "tvesind");});
test("tvetungede -> tvetunged", function() {deepEqual( Stem("tvetungede"), "tvetunged");});
test("tveæggede -> tveægged", function() {deepEqual( Stem("tveæggede"), "tveægged");});
test("tveægget -> tveæg", function() {deepEqual( Stem("tveægget"), "tveæg");});
test("tvi -> tvi", function() {deepEqual( Stem("tvi"), "tvi");});
test("tvilling -> tvilling", function() {deepEqual( Stem("tvilling"), "tvilling");});
test("tvillinger -> tvilling", function() {deepEqual( Stem("tvillinger"), "tvilling");});
test("tvillingernes -> tvilling", function() {deepEqual( Stem("tvillingernes"), "tvilling");});
test("tvinge -> tving", function() {deepEqual( Stem("tvinge"), "tving");});
test("tvinger -> tving", function() {deepEqual( Stem("tvinger"), "tving");});
test("tvinges -> tving", function() {deepEqual( Stem("tvinges"), "tving");});
test("tvist -> tvist", function() {deepEqual( Stem("tvist"), "tvist");});
test("tvistedes -> tvisted", function() {deepEqual( Stem("tvistedes"), "tvisted");});
test("tvistens -> tvist", function() {deepEqual( Stem("tvistens"), "tvist");});
test("tvister -> tvist", function() {deepEqual( Stem("tvister"), "tvist");});
test("tvistes -> tvist", function() {deepEqual( Stem("tvistes"), "tvist");});
test("tvistet -> tvist", function() {deepEqual( Stem("tvistet"), "tvist");});
test("tvivl -> tvivl", function() {deepEqual( Stem("tvivl"), "tvivl");});
test("tvivle -> tvivl", function() {deepEqual( Stem("tvivle"), "tvivl");});
test("tvivlede -> tvivled", function() {deepEqual( Stem("tvivlede"), "tvivled");});
test("tvivler -> tvivl", function() {deepEqual( Stem("tvivler"), "tvivl");});
test("tvivlrådig -> tvivlråd", function() {deepEqual( Stem("tvivlrådig"), "tvivlråd");});
test("tvivlrådige -> tvivlråd", function() {deepEqual( Stem("tvivlrådige"), "tvivlråd");});
test("tvundet -> tvund", function() {deepEqual( Stem("tvundet"), "tvund");});
test("tvundne -> tvundn", function() {deepEqual( Stem("tvundne"), "tvundn");});
test("tvungen -> tvung", function() {deepEqual( Stem("tvungen"), "tvung");});
test("tvunget -> tvung", function() {deepEqual( Stem("tvunget"), "tvung");});
test("tvungne -> tvungn", function() {deepEqual( Stem("tvungne"), "tvungn");});
test("tværbjælker -> tværbjælk", function() {deepEqual( Stem("tværbjælker"), "tværbjælk");});
test("tværs -> tvær", function() {deepEqual( Stem("tværs"), "tvær");});
test("tværstang -> tværstang", function() {deepEqual( Stem("tværstang"), "tværstang");});
test("tværstænger -> tværstæng", function() {deepEqual( Stem("tværstænger"), "tværstæng");});
test("tværstængerne -> tværstæng", function() {deepEqual( Stem("tværstængerne"), "tværstæng");});
test("tvært -> tvært", function() {deepEqual( Stem("tvært"), "tvært");});
test("tværtimod -> tværtimod", function() {deepEqual( Stem("tværtimod"), "tværtimod");});
test("tvæt -> tvæt", function() {deepEqual( Stem("tvæt"), "tvæt");});
test("tvætle -> tvætl", function() {deepEqual( Stem("tvætle"), "tvætl");});
test("tvætning -> tvætning", function() {deepEqual( Stem("tvætning"), "tvætning");});
test("tvætningen -> tvætning", function() {deepEqual( Stem("tvætningen"), "tvætning");});
test("tvætninger -> tvætning", function() {deepEqual( Stem("tvætninger"), "tvætning");});
test("tvætte -> tvæt", function() {deepEqual( Stem("tvætte"), "tvæt");});
test("tvætted -> tvætted", function() {deepEqual( Stem("tvætted"), "tvætted");});
test("tvættede -> tvætted", function() {deepEqual( Stem("tvættede"), "tvætted");});
test("tvættelser -> tvæt", function() {deepEqual( Stem("tvættelser"), "tvæt");});
test("tvætter -> tvæt", function() {deepEqual( Stem("tvætter"), "tvæt");});
test("tvætternes -> tvæt", function() {deepEqual( Stem("tvætternes"), "tvæt");});
test("tvættes -> tvæt", function() {deepEqual( Stem("tvættes"), "tvæt");});
test("tvættet -> tvæt", function() {deepEqual( Stem("tvættet"), "tvæt");});
test("txt -> txt", function() {deepEqual( Stem("txt"), "txt");});
test("ty -> ty", function() {deepEqual( Stem("ty"), "ty");});
test("tyd -> tyd", function() {deepEqual( Stem("tyd"), "tyd");});
test("tyde -> tyd", function() {deepEqual( Stem("tyde"), "tyd");});
test("tydede -> tyded", function() {deepEqual( Stem("tydede"), "tyded");});
test("tydelig -> tyd", function() {deepEqual( Stem("tydelig"), "tyd");});
test("tydeligt -> tyd", function() {deepEqual( Stem("tydeligt"), "tyd");});
test("tydemig -> tydem", function() {deepEqual( Stem("tydemig"), "tydem");});
test("tyder -> tyd", function() {deepEqual( Stem("tyder"), "tyd");});
test("tydes -> tyd", function() {deepEqual( Stem("tydes"), "tyd");});
test("tydet -> tyd", function() {deepEqual( Stem("tydet"), "tyd");});
test("tydning -> tydning", function() {deepEqual( Stem("tydning"), "tydning");});
test("tydningen -> tydning", function() {deepEqual( Stem("tydningen"), "tydning");});
test("tyede -> tyed", function() {deepEqual( Stem("tyede"), "tyed");});
test("tyende -> tyend", function() {deepEqual( Stem("tyende"), "tyend");});
test("tyet -> tyet", function() {deepEqual( Stem("tyet"), "tyet");});
test("tygge -> tyg", function() {deepEqual( Stem("tygge"), "tyg");});
test("tyggede -> tygged", function() {deepEqual( Stem("tyggede"), "tygged");});
test("tygger -> tyg", function() {deepEqual( Stem("tygger"), "tyg");});
test("tyk -> tyk", function() {deepEqual( Stem("tyk"), "tyk");});
test("tykikus -> tykikus", function() {deepEqual( Stem("tykikus"), "tykikus");});
test("tykke -> tyk", function() {deepEqual( Stem("tykke"), "tyk");});
test("tykkere -> tyk", function() {deepEqual( Stem("tykkere"), "tyk");});
test("tykkes -> tyk", function() {deepEqual( Stem("tykkes"), "tyk");});
test("tykkeste -> tykkest", function() {deepEqual( Stem("tykkeste"), "tykkest");});
test("tykning -> tykning", function() {deepEqual( Stem("tykning"), "tykning");});
test("tykt -> tykt", function() {deepEqual( Stem("tykt"), "tykt");});
test("tyktes -> tykt", function() {deepEqual( Stem("tyktes"), "tykt");});
test("tynd -> tynd", function() {deepEqual( Stem("tynd"), "tynd");});
test("tynde -> tynd", function() {deepEqual( Stem("tynde"), "tynd");});
test("tyndt -> tynd", function() {deepEqual( Stem("tyndt"), "tynd");});
test("tynge -> tyng", function() {deepEqual( Stem("tynge"), "tyng");});
test("tyngede -> tynged", function() {deepEqual( Stem("tyngede"), "tynged");});
test("tyngende -> tyng", function() {deepEqual( Stem("tyngende"), "tyng");});
test("tynger -> tyng", function() {deepEqual( Stem("tynger"), "tyng");});
test("tynges -> tyng", function() {deepEqual( Stem("tynges"), "tyng");});
test("tyr -> tyr", function() {deepEqual( Stem("tyr"), "tyr");});
test("tyran -> tyran", function() {deepEqual( Stem("tyran"), "tyran");});
test("tyrannus -> tyrannus", function() {deepEqual( Stem("tyrannus"), "tyrannus");});
test("tyre -> tyr", function() {deepEqual( Stem("tyre"), "tyr");});
test("tyreflokken -> tyreflok", function() {deepEqual( Stem("tyreflokken"), "tyreflok");});
test("tyrehoveder -> tyrehoved", function() {deepEqual( Stem("tyrehoveder"), "tyrehoved");});
test("tyrekalv -> tyrekalv", function() {deepEqual( Stem("tyrekalv"), "tyrekalv");});
test("tyrekalve -> tyrekalv", function() {deepEqual( Stem("tyrekalve"), "tyrekalv");});
test("tyrekalven -> tyrekalv", function() {deepEqual( Stem("tyrekalven"), "tyrekalv");});
test("tyrekalvene -> tyrekalv", function() {deepEqual( Stem("tyrekalvene"), "tyrekalv");});
test("tyren -> tyr", function() {deepEqual( Stem("tyren"), "tyr");});
test("tyrene -> tyr", function() {deepEqual( Stem("tyrene"), "tyr");});
test("tyrenes -> tyr", function() {deepEqual( Stem("tyrenes"), "tyr");});
test("tyrens -> tyr", function() {deepEqual( Stem("tyrens"), "tyr");});
test("tyres -> tyr", function() {deepEqual( Stem("tyres"), "tyr");});
test("tyrier -> tyri", function() {deepEqual( Stem("tyrier"), "tyri");});
test("tyrierne -> tyri", function() {deepEqual( Stem("tyrierne"), "tyri");});
test("tyrus -> tyrus", function() {deepEqual( Stem("tyrus"), "tyrus");});
test("tyruss -> tyrus", function() {deepEqual( Stem("tyruss"), "tyrus");});
test("tys -> tys", function() {deepEqual( Stem("tys"), "tys");});
test("tyssede -> tyssed", function() {deepEqual( Stem("tyssede"), "tyssed");});
test("tysset -> tys", function() {deepEqual( Stem("tysset"), "tys");});
test("tyst -> tyst", function() {deepEqual( Stem("tyst"), "tyst");});
test("tystnet -> tystn", function() {deepEqual( Stem("tystnet"), "tystn");});
test("tyv -> tyv", function() {deepEqual( Stem("tyv"), "tyv");});
test("tyve -> tyv", function() {deepEqual( Stem("tyve"), "tyv");});
test("tyven -> tyv", function() {deepEqual( Stem("tyven"), "tyv");});
test("tyvende -> tyv", function() {deepEqual( Stem("tyvende"), "tyv");});
test("tyvens -> tyv", function() {deepEqual( Stem("tyvens"), "tyv");});
test("tyveri -> tyveri", function() {deepEqual( Stem("tyveri"), "tyveri");});
test("tyverier -> tyveri", function() {deepEqual( Stem("tyverier"), "tyveri");});
test("tyves -> tyv", function() {deepEqual( Stem("tyves"), "tyv");});
test("tyveårsalderen -> tyveårsald", function() {deepEqual( Stem("tyveårsalderen"), "tyveårsald");});
test("tå -> tå", function() {deepEqual( Stem("tå"), "tå");});
test("tåbe -> tåb", function() {deepEqual( Stem("tåbe"), "tåb");});
test("tåbelig -> tåb", function() {deepEqual( Stem("tåbelig"), "tåb");});
test("tåbelige -> tåb", function() {deepEqual( Stem("tåbelige"), "tåb");});
test("tåbelighed -> tåb", function() {deepEqual( Stem("tåbelighed"), "tåb");});
test("tåbeligt -> tåb", function() {deepEqual( Stem("tåbeligt"), "tåb");});
test("tåben -> tåb", function() {deepEqual( Stem("tåben"), "tåb");});
test("tåbens -> tåb", function() {deepEqual( Stem("tåbens"), "tåb");});
test("tåber -> tåb", function() {deepEqual( Stem("tåber"), "tåb");});
test("tåbernes -> tåb", function() {deepEqual( Stem("tåbernes"), "tåb");});
test("tåbers -> tåb", function() {deepEqual( Stem("tåbers"), "tåb");});
test("tåge -> tåg", function() {deepEqual( Stem("tåge"), "tåg");});
test("tågemulm -> tågemulm", function() {deepEqual( Stem("tågemulm"), "tågemulm");});
test("tågens -> tåg", function() {deepEqual( Stem("tågens"), "tåg");});
test("tåges -> tåg", function() {deepEqual( Stem("tåges"), "tåg");});
test("tågeskyer -> tågesky", function() {deepEqual( Stem("tågeskyer"), "tågesky");});
test("tåle -> tål", function() {deepEqual( Stem("tåle"), "tål");});
test("tåleligere -> tål", function() {deepEqual( Stem("tåleligere"), "tål");});
test("tåler -> tål", function() {deepEqual( Stem("tåler"), "tål");});
test("tålmod -> tålmod", function() {deepEqual( Stem("tålmod"), "tålmod");});
test("tålmodig -> tålmod", function() {deepEqual( Stem("tålmodig"), "tålmod");});
test("tålmodige -> tålmod", function() {deepEqual( Stem("tålmodige"), "tålmod");});
test("tålmodighed -> tålmod", function() {deepEqual( Stem("tålmodighed"), "tålmod");});
test("tålmodigheden -> tålmod", function() {deepEqual( Stem("tålmodigheden"), "tålmod");});
test("tålmodigheds -> tålmod", function() {deepEqual( Stem("tålmodigheds"), "tålmod");});
test("tålmodigt -> tålmod", function() {deepEqual( Stem("tålmodigt"), "tålmod");});
test("tålsomt -> tålsomt", function() {deepEqual( Stem("tålsomt"), "tålsomt");});
test("tålte -> tålt", function() {deepEqual( Stem("tålte"), "tålt");});
test("tåmer -> tåm", function() {deepEqual( Stem("tåmer"), "tåm");});
test("tånak -> tånak", function() {deepEqual( Stem("tånak"), "tånak");});
test("tår -> tår", function() {deepEqual( Stem("tår"), "tår");});
test("tåre -> tår", function() {deepEqual( Stem("tåre"), "tår");});
test("tårebrød -> tårebrød", function() {deepEqual( Stem("tårebrød"), "tårebrød");});
test("tårekilde -> tårekild", function() {deepEqual( Stem("tårekilde"), "tårekild");});
test("tåren -> tår", function() {deepEqual( Stem("tåren"), "tår");});
test("tårer -> tår", function() {deepEqual( Stem("tårer"), "tår");});
test("tårerne -> tår", function() {deepEqual( Stem("tårerne"), "tår");});
test("tårn -> tårn", function() {deepEqual( Stem("tårn"), "tårn");});
test("tårne -> tårn", function() {deepEqual( Stem("tårne"), "tårn");});
test("tårnedes -> tårned", function() {deepEqual( Stem("tårnedes"), "tårned");});
test("tårnene -> tårn", function() {deepEqual( Stem("tårnene"), "tårn");});
test("tårnet -> tårn", function() {deepEqual( Stem("tårnet"), "tårn");});
test("tårnets -> tårn", function() {deepEqual( Stem("tårnets"), "tårn");});
test("tæer -> tæer", function() {deepEqual( Stem("tæer"), "tæer");});
test("tæerne -> tæern", function() {deepEqual( Stem("tæerne"), "tæern");});
test("tækkelig -> tæk", function() {deepEqual( Stem("tækkelig"), "tæk");});
test("tækkes -> tæk", function() {deepEqual( Stem("tækkes"), "tæk");});
test("tækket -> tæk", function() {deepEqual( Stem("tækket"), "tæk");});
test("tæl -> tæl", function() {deepEqual( Stem("tæl"), "tæl");});
test("tælle -> tæl", function() {deepEqual( Stem("tælle"), "tæl");});
test("tæller -> tæl", function() {deepEqual( Stem("tæller"), "tæl");});
test("tællerens -> tæl", function() {deepEqual( Stem("tællerens"), "tæl");});
test("tælles -> tæl", function() {deepEqual( Stem("tælles"), "tæl");});
test("tæm -> tæm", function() {deepEqual( Stem("tæm"), "tæm");});
test("tæmme -> tæm", function() {deepEqual( Stem("tæmme"), "tæm");});
test("tæmmer -> tæm", function() {deepEqual( Stem("tæmmer"), "tæm");});
test("tæmmerens -> tæm", function() {deepEqual( Stem("tæmmerens"), "tæm");});
test("tæmmes -> tæm", function() {deepEqual( Stem("tæmmes"), "tæm");});
test("tæmmet -> tæm", function() {deepEqual( Stem("tæmmet"), "tæm");});
test("tænde -> tænd", function() {deepEqual( Stem("tænde"), "tænd");});
test("tænder -> tænd", function() {deepEqual( Stem("tænder"), "tænd");});
test("tænderne -> tænd", function() {deepEqual( Stem("tænderne"), "tænd");});
test("tænders -> tænd", function() {deepEqual( Stem("tænders"), "tænd");});
test("tændes -> tænd", function() {deepEqual( Stem("tændes"), "tænd");});
test("tændt -> tænd", function() {deepEqual( Stem("tændt"), "tænd");});
test("tændte -> tænd", function() {deepEqual( Stem("tændte"), "tænd");});
test("tændtes -> tænd", function() {deepEqual( Stem("tændtes"), "tænd");});
test("tænk -> tænk", function() {deepEqual( Stem("tænk"), "tænk");});
test("tænke -> tænk", function() {deepEqual( Stem("tænke"), "tænk");});
test("tænker -> tænk", function() {deepEqual( Stem("tænker"), "tænk");});
test("tænkt -> tænk", function() {deepEqual( Stem("tænkt"), "tænk");});
test("tænkte -> tænk", function() {deepEqual( Stem("tænkte"), "tænk");});
test("tæppe -> tæp", function() {deepEqual( Stem("tæppe"), "tæp");});
test("tæpper -> tæp", function() {deepEqual( Stem("tæpper"), "tæp");});
test("tæpperne -> tæp", function() {deepEqual( Stem("tæpperne"), "tæp");});
test("tæppet -> tæp", function() {deepEqual( Stem("tæppet"), "tæp");});
test("tære -> tær", function() {deepEqual( Stem("tære"), "tær");});
test("tæred -> tæred", function() {deepEqual( Stem("tæred"), "tæred");});
test("tæret -> tær", function() {deepEqual( Stem("tæret"), "tær");});
test("tæring -> tæring", function() {deepEqual( Stem("tæring"), "tæring");});
test("tærningspil -> tærningspil", function() {deepEqual( Stem("tærningspil"), "tærningspil");});
test("tærsk -> tærsk", function() {deepEqual( Stem("tærsk"), "tærsk");});
test("tærske -> tærsk", function() {deepEqual( Stem("tærske"), "tærsk");});
test("tærskede -> tærsked", function() {deepEqual( Stem("tærskede"), "tærsked");});
test("tærskehjul -> tærskehjul", function() {deepEqual( Stem("tærskehjul"), "tærskehjul");});
test("tærskel -> tærskel", function() {deepEqual( Stem("tærskel"), "tærskel");});
test("tærskelen -> tærskel", function() {deepEqual( Stem("tærskelen"), "tærskel");});
test("tærskeplads -> tærskeplad", function() {deepEqual( Stem("tærskeplads"), "tærskeplad");});
test("tærskepladsen -> tærskeplads", function() {deepEqual( Stem("tærskepladsen"), "tærskeplads");});
test("tærskepladser -> tærskeplads", function() {deepEqual( Stem("tærskepladser"), "tærskeplads");});
test("tærskepladserne -> tærskeplads", function() {deepEqual( Stem("tærskepladserne"), "tærskeplads");});
test("tærsker -> tærsk", function() {deepEqual( Stem("tærsker"), "tærsk");});
test("tærskes -> tærsk", function() {deepEqual( Stem("tærskes"), "tærsk");});
test("tærskeslæde -> tærskeslæd", function() {deepEqual( Stem("tærskeslæde"), "tærskeslæd");});
test("tærskeslædens -> tærskeslæd", function() {deepEqual( Stem("tærskeslædens"), "tærskeslæd");});
test("tærskeslæder -> tærskeslæd", function() {deepEqual( Stem("tærskeslæder"), "tærskeslæd");});
test("tærskeslæderne -> tærskeslæd", function() {deepEqual( Stem("tærskeslæderne"), "tærskeslæd");});
test("tærsklen -> tærskl", function() {deepEqual( Stem("tærsklen"), "tærskl");});
test("tærskler -> tærskl", function() {deepEqual( Stem("tærskler"), "tærskl");});
test("tærsklerne -> tærskl", function() {deepEqual( Stem("tærsklerne"), "tærskl");});
test("tærskning -> tærskning", function() {deepEqual( Stem("tærskning"), "tærskning");});
test("tæt -> tæt", function() {deepEqual( Stem("tæt"), "tæt");});
test("tætte -> tæt", function() {deepEqual( Stem("tætte"), "tæt");});
test("tættede -> tætted", function() {deepEqual( Stem("tættede"), "tætted");});
test("tætter -> tæt", function() {deepEqual( Stem("tætter"), "tæt");});
test("tøddel -> tøddel", function() {deepEqual( Stem("tøddel"), "tøddel");});
test("tøj -> tøj", function() {deepEqual( Stem("tøj"), "tøj");});
test("tøjer -> tøj", function() {deepEqual( Stem("tøjer"), "tøj");});
test("tøjet -> tøj", function() {deepEqual( Stem("tøjet"), "tøj");});
test("tøjhuset -> tøjhus", function() {deepEqual( Stem("tøjhuset"), "tøjhus");});
test("tøjler -> tøjl", function() {deepEqual( Stem("tøjler"), "tøjl");});
test("tøjlerne -> tøjl", function() {deepEqual( Stem("tøjlerne"), "tøjl");});
test("tøjlesløs -> tøjlesløs", function() {deepEqual( Stem("tøjlesløs"), "tøjlesløs");});
test("tøjlesløse -> tøjlesløs", function() {deepEqual( Stem("tøjlesløse"), "tøjlesløs");});
test("tøjlesløshed -> tøjlesløs", function() {deepEqual( Stem("tøjlesløshed"), "tøjlesløs");});
test("tøjlesløst -> tøjlesløs", function() {deepEqual( Stem("tøjlesløst"), "tøjlesløs");});
test("tøjre -> tøjr", function() {deepEqual( Stem("tøjre"), "tøjr");});
test("tømme -> tøm", function() {deepEqual( Stem("tømme"), "tøm");});
test("tømmer -> tøm", function() {deepEqual( Stem("tømmer"), "tøm");});
test("tømmerflåder -> tømmerflåd", function() {deepEqual( Stem("tømmerflåder"), "tømmerflåd");});
test("tømmermanden -> tømmermand", function() {deepEqual( Stem("tømmermanden"), "tømmermand");});
test("tømmermandens -> tømmermand", function() {deepEqual( Stem("tømmermandens"), "tømmermand");});
test("tømmermænd -> tømmermænd", function() {deepEqual( Stem("tømmermænd"), "tømmermænd");});
test("tømmermændene -> tømmermænd", function() {deepEqual( Stem("tømmermændene"), "tømmermænd");});
test("tømmes -> tøm", function() {deepEqual( Stem("tømmes"), "tøm");});
test("tømred -> tømred", function() {deepEqual( Stem("tømred"), "tømred");});
test("tømrere -> tømr", function() {deepEqual( Stem("tømrere"), "tømr");});
test("tømrerne -> tømr", function() {deepEqual( Stem("tømrerne"), "tømr");});
test("tømt -> tømt", function() {deepEqual( Stem("tømt"), "tømt");});
test("tømte -> tømt", function() {deepEqual( Stem("tømte"), "tømt");});
test("tønder -> tønd", function() {deepEqual( Stem("tønder"), "tønd");});
test("tør -> tør", function() {deepEqual( Stem("tør"), "tør");});
test("tørke -> tørk", function() {deepEqual( Stem("tørke"), "tørk");});
test("tørkeland -> tørkeland", function() {deepEqual( Stem("tørkeland"), "tørkeland");});
test("tørken -> tørk", function() {deepEqual( Stem("tørken"), "tørk");});
test("tørkens -> tørk", function() {deepEqual( Stem("tørkens"), "tørk");});
test("tørkes -> tørk", function() {deepEqual( Stem("tørkes"), "tørk");});
test("tørklæde -> tørklæd", function() {deepEqual( Stem("tørklæde"), "tørklæd");});
test("tørklæder -> tørklæd", function() {deepEqual( Stem("tørklæder"), "tørklæd");});
test("tørklædet -> tørklæd", function() {deepEqual( Stem("tørklædet"), "tørklæd");});
test("tørkner -> tørkn", function() {deepEqual( Stem("tørkner"), "tørkn");});
test("tørlægger -> tørlæg", function() {deepEqual( Stem("tørlægger"), "tørlæg");});
test("tørre -> tør", function() {deepEqual( Stem("tørre"), "tør");});
test("tørred -> tørred", function() {deepEqual( Stem("tørred"), "tørred");});
test("tørrede -> tørred", function() {deepEqual( Stem("tørrede"), "tørred");});
test("tørredes -> tørred", function() {deepEqual( Stem("tørredes"), "tørred");});
test("tørreplads -> tørreplad", function() {deepEqual( Stem("tørreplads"), "tørreplad");});
test("tørrer -> tør", function() {deepEqual( Stem("tørrer"), "tør");});
test("tørres -> tør", function() {deepEqual( Stem("tørres"), "tør");});
test("tørret -> tør", function() {deepEqual( Stem("tørret"), "tør");});
test("tørring -> tørring", function() {deepEqual( Stem("tørring"), "tørring");});
test("tørskoet -> tørsko", function() {deepEqual( Stem("tørskoet"), "tørsko");});
test("tørst -> tørst", function() {deepEqual( Stem("tørst"), "tørst");});
test("tørste -> tørst", function() {deepEqual( Stem("tørste"), "tørst");});
test("tørstede -> tørsted", function() {deepEqual( Stem("tørstede"), "tørsted");});
test("tørsten -> tørst", function() {deepEqual( Stem("tørsten"), "tørst");});
test("tørstende -> tørst", function() {deepEqual( Stem("tørstende"), "tørst");});
test("tørster -> tørst", function() {deepEqual( Stem("tørster"), "tørst");});
test("tørstig -> tørst", function() {deepEqual( Stem("tørstig"), "tørst");});
test("tørstige -> tørst", function() {deepEqual( Stem("tørstige"), "tørst");});
test("tørstigt -> tørst", function() {deepEqual( Stem("tørstigt"), "tørst");});
test("tørt -> tørt", function() {deepEqual( Stem("tørt"), "tørt");});
test("tøv -> tøv", function() {deepEqual( Stem("tøv"), "tøv");});
test("tøve -> tøv", function() {deepEqual( Stem("tøve"), "tøv");});
test("tøved -> tøved", function() {deepEqual( Stem("tøved"), "tøved");});
test("tøvede -> tøved", function() {deepEqual( Stem("tøvede"), "tøved");});
test("tøven -> tøv", function() {deepEqual( Stem("tøven"), "tøv");});
test("tøver -> tøv", function() {deepEqual( Stem("tøver"), "tøv");});
test("tøvet -> tøv", function() {deepEqual( Stem("tøvet"), "tøv");});
test("u -> u", function() {deepEqual( Stem("u"), "u");});
test("uadskilleligt -> uadskil", function() {deepEqual( Stem("uadskilleligt"), "uadskil");});
test("uafbrudt -> uafbrud", function() {deepEqual( Stem("uafbrudt"), "uafbrud");});
test("uafholdne -> uafholdn", function() {deepEqual( Stem("uafholdne"), "uafholdn");});
test("uafladelig -> uaflad", function() {deepEqual( Stem("uafladelig"), "uaflad");});
test("uafladeligt -> uaflad", function() {deepEqual( Stem("uafladeligt"), "uaflad");});
test("uagtet -> uagt", function() {deepEqual( Stem("uagtet"), "uagt");});
test("ubarmhjertig -> ubarmhjert", function() {deepEqual( Stem("ubarmhjertig"), "ubarmhjert");});
test("ubarmhjertige -> ubarmhjert", function() {deepEqual( Stem("ubarmhjertige"), "ubarmhjert");});
test("ubeboet -> ubebo", function() {deepEqual( Stem("ubeboet"), "ubebo");});
test("ubedækket -> ubedæk", function() {deepEqual( Stem("ubedækket"), "ubedæk");});
test("ubefæstede -> ubefæsted", function() {deepEqual( Stem("ubefæstede"), "ubefæsted");});
test("ubegrænset -> ubegræns", function() {deepEqual( Stem("ubegrænset"), "ubegræns");});
test("ubehag -> ubehag", function() {deepEqual( Stem("ubehag"), "ubehag");});
test("ubekendt -> ubekend", function() {deepEqual( Stem("ubekendt"), "ubekend");});
test("ubekendte -> ubekend", function() {deepEqual( Stem("ubekendte"), "ubekend");});
test("ubemærket -> ubemærk", function() {deepEqual( Stem("ubemærket"), "ubemærk");});
test("ubeskårne -> ubeskårn", function() {deepEqual( Stem("ubeskårne"), "ubeskårn");});
test("ubesmittelig -> ubesmit", function() {deepEqual( Stem("ubesmittelig"), "ubesmit");});
test("ubesmittet -> ubesmit", function() {deepEqual( Stem("ubesmittet"), "ubesmit");});
test("ublandet -> ubland", function() {deepEqual( Stem("ublandet"), "ubland");});
test("ublu -> ublu", function() {deepEqual( Stem("ublu"), "ublu");});
test("ubodfærdige -> ubodfærd", function() {deepEqual( Stem("ubodfærdige"), "ubodfærd");});
test("ubrugbar -> ubrugbar", function() {deepEqual( Stem("ubrugbar"), "ubrugbar");});
test("ubryddelige -> ubryd", function() {deepEqual( Stem("ubryddelige"), "ubryd");});
test("ubrødeligt -> ubrød", function() {deepEqual( Stem("ubrødeligt"), "ubrød");});
test("ubændig -> ubænd", function() {deepEqual( Stem("ubændig"), "ubænd");});
test("ud -> ud", function() {deepEqual( Stem("ud"), "ud");});
test("udad -> udad", function() {deepEqual( Stem("udad"), "udad");});
test("udadlelig -> udadl", function() {deepEqual( Stem("udadlelig"), "udadl");});
test("udadlelige -> udadl", function() {deepEqual( Stem("udadlelige"), "udadl");});
test("udadtil -> udadtil", function() {deepEqual( Stem("udadtil"), "udadtil");});
test("udbad -> udbad", function() {deepEqual( Stem("udbad"), "udbad");});
test("udbedre -> udbedr", function() {deepEqual( Stem("udbedre"), "udbedr");});
test("udbedrede -> udbedred", function() {deepEqual( Stem("udbedrede"), "udbedred");});
test("udbedrer -> udbedr", function() {deepEqual( Stem("udbedrer"), "udbedr");});
test("udbedring -> udbedring", function() {deepEqual( Stem("udbedring"), "udbedring");});
test("udbetale -> udbetal", function() {deepEqual( Stem("udbetale"), "udbetal");});
test("udbetaling -> udbetaling", function() {deepEqual( Stem("udbetaling"), "udbetaling");});
test("udbetalte -> udbetalt", function() {deepEqual( Stem("udbetalte"), "udbetalt");});
test("udbrede -> udbred", function() {deepEqual( Stem("udbrede"), "udbred");});
test("udbreder -> udbred", function() {deepEqual( Stem("udbreder"), "udbred");});
test("udbredt -> udbred", function() {deepEqual( Stem("udbredt"), "udbred");});
test("udbredte -> udbred", function() {deepEqual( Stem("udbredte"), "udbred");});
test("udbredtes -> udbred", function() {deepEqual( Stem("udbredtes"), "udbred");});
test("udbrud -> udbrud", function() {deepEqual( Stem("udbrud"), "udbrud");});
test("udbrød -> udbrød", function() {deepEqual( Stem("udbrød"), "udbrød");});
test("udbytte -> udbyt", function() {deepEqual( Stem("udbytte"), "udbyt");});
test("udbyttet -> udbyt", function() {deepEqual( Stem("udbyttet"), "udbyt");});
test("uddel -> uddel", function() {deepEqual( Stem("uddel"), "uddel");});
test("uddele -> uddel", function() {deepEqual( Stem("uddele"), "uddel");});
test("uddeler -> uddel", function() {deepEqual( Stem("uddeler"), "uddel");});
test("uddeles -> uddel", function() {deepEqual( Stem("uddeles"), "uddel");});
test("uddeling -> uddeling", function() {deepEqual( Stem("uddeling"), "uddeling");});
test("uddelingen -> uddeling", function() {deepEqual( Stem("uddelingen"), "uddeling");});
test("uddelt -> uddelt", function() {deepEqual( Stem("uddelt"), "uddelt");});
test("uddelte -> uddelt", function() {deepEqual( Stem("uddelte"), "uddelt");});
test("uddrev -> uddrev", function() {deepEqual( Stem("uddrev"), "uddrev");});
test("uddreven -> uddrev", function() {deepEqual( Stem("uddreven"), "uddrev");});
test("uddrevet -> uddrev", function() {deepEqual( Stem("uddrevet"), "uddrev");});
test("uddriv -> uddriv", function() {deepEqual( Stem("uddriv"), "uddriv");});
test("uddrive -> uddriv", function() {deepEqual( Stem("uddrive"), "uddriv");});
test("uddriver -> uddriv", function() {deepEqual( Stem("uddriver"), "uddriv");});
test("uddød -> uddød", function() {deepEqual( Stem("uddød"), "uddød");});
test("uddøde -> uddød", function() {deepEqual( Stem("uddøde"), "uddød");});
test("ude -> ude", function() {deepEqual( Stem("ude"), "ude");});
test("udeblive -> udebliv", function() {deepEqual( Stem("udeblive"), "udebliv");});
test("udebliver -> udebliv", function() {deepEqual( Stem("udebliver"), "udebliv");});
test("udefra -> udefra", function() {deepEqual( Stem("udefra"), "udefra");});
test("udelad -> udelad", function() {deepEqual( Stem("udelad"), "udelad");});
test("udelokket -> udelok", function() {deepEqual( Stem("udelokket"), "udelok");});
test("udelukke -> udeluk", function() {deepEqual( Stem("udelukke"), "udeluk");});
test("udelukkede -> udelukked", function() {deepEqual( Stem("udelukkede"), "udelukked");});
test("udelukkes -> udeluk", function() {deepEqual( Stem("udelukkes"), "udeluk");});
test("udelukket -> udeluk", function() {deepEqual( Stem("udelukket"), "udeluk");});
test("uden -> uden", function() {deepEqual( Stem("uden"), "uden");});
test("udendørs -> udendør", function() {deepEqual( Stem("udendørs"), "udendør");});
test("udenfor -> udenfor", function() {deepEqual( Stem("udenfor"), "udenfor");});
test("udenlands -> udenland", function() {deepEqual( Stem("udenlands"), "udenland");});
test("udenlandsk -> udenlandsk", function() {deepEqual( Stem("udenlandsk"), "udenlandsk");});
test("udenlandske -> udenlandsk", function() {deepEqual( Stem("udenlandske"), "udenlandsk");});
test("udenom -> udenom", function() {deepEqual( Stem("udenom"), "udenom");});
test("udenpå -> udenpå", function() {deepEqual( Stem("udenpå"), "udenpå");});
test("udfald -> udfald", function() {deepEqual( Stem("udfald"), "udfald");});
test("udfaldet -> udfald", function() {deepEqual( Stem("udfaldet"), "udfald");});
test("udfaren -> udfar", function() {deepEqual( Stem("udfaren"), "udfar");});
test("udfarne -> udfarn", function() {deepEqual( Stem("udfarne"), "udfarn");});
test("udfart -> udfart", function() {deepEqual( Stem("udfart"), "udfart");});
test("udfinde -> udfind", function() {deepEqual( Stem("udfinde"), "udfind");});
test("udflugter -> udflug", function() {deepEqual( Stem("udflugter"), "udflug");});
test("udflåd -> udflåd", function() {deepEqual( Stem("udflåd"), "udflåd");});
test("udfoldede -> udfolded", function() {deepEqual( Stem("udfoldede"), "udfolded");});
test("udfolder -> udfold", function() {deepEqual( Stem("udfolder"), "udfold");});
test("udfor -> udfor", function() {deepEqual( Stem("udfor"), "udfor");});
test("udfordre -> udfordr", function() {deepEqual( Stem("udfordre"), "udfordr");});
test("udforske -> udforsk", function() {deepEqual( Stem("udforske"), "udforsk");});
test("udfri -> udfri", function() {deepEqual( Stem("udfri"), "udfri");});
test("udfriede -> udfried", function() {deepEqual( Stem("udfriede"), "udfried");});
test("udfrier -> udfri", function() {deepEqual( Stem("udfrier"), "udfri");});
test("udfries -> udfri", function() {deepEqual( Stem("udfries"), "udfri");});
test("udfriet -> udfri", function() {deepEqual( Stem("udfriet"), "udfri");});
test("udfundet -> udfund", function() {deepEqual( Stem("udfundet"), "udfund");});
test("udfylde -> udfyld", function() {deepEqual( Stem("udfylde"), "udfyld");});
test("udfylder -> udfyld", function() {deepEqual( Stem("udfylder"), "udfyld");});
test("udfyldt -> udfyld", function() {deepEqual( Stem("udfyldt"), "udfyld");});
test("udfærdiget -> udfærd", function() {deepEqual( Stem("udfærdiget"), "udfærd");});
test("udfør -> udfør", function() {deepEqual( Stem("udfør"), "udfør");});
test("udføre -> udfør", function() {deepEqual( Stem("udføre"), "udfør");});
test("udførelsen -> udfør", function() {deepEqual( Stem("udførelsen"), "udfør");});
test("udfører -> udfør", function() {deepEqual( Stem("udfører"), "udfør");});
test("udføres -> udfør", function() {deepEqual( Stem("udføres"), "udfør");});
test("udførfe -> udførf", function() {deepEqual( Stem("udførfe"), "udførf");});
test("udført -> udført", function() {deepEqual( Stem("udført"), "udført");});
test("udførte -> udført", function() {deepEqual( Stem("udførte"), "udført");});
test("udførtes -> udført", function() {deepEqual( Stem("udførtes"), "udført");});
test("udgang -> udgang", function() {deepEqual( Stem("udgang"), "udgang");});
test("udgange -> udgang", function() {deepEqual( Stem("udgange"), "udgang");});
test("udgangen -> udgang", function() {deepEqual( Stem("udgangen"), "udgang");});
test("udgav -> udgav", function() {deepEqual( Stem("udgav"), "udgav");});
test("udgifferne -> udgif", function() {deepEqual( Stem("udgifferne"), "udgif");});
test("udgifter -> udgift", function() {deepEqual( Stem("udgifter"), "udgift");});
test("udgik -> udgik", function() {deepEqual( Stem("udgik"), "udgik");});
test("udgiver -> udgiv", function() {deepEqual( Stem("udgiver"), "udgiv");});
test("udgjorde -> udgjord", function() {deepEqual( Stem("udgjorde"), "udgjord");});
test("udgranske -> udgransk", function() {deepEqual( Stem("udgranske"), "udgransk");});
test("udgransker -> udgransk", function() {deepEqual( Stem("udgransker"), "udgransk");});
test("udgranskes -> udgransk", function() {deepEqual( Stem("udgranskes"), "udgransk");});
test("udgrave -> udgrav", function() {deepEqual( Stem("udgrave"), "udgrav");});
test("udgravede -> udgraved", function() {deepEqual( Stem("udgravede"), "udgraved");});
test("udgrunde -> udgrund", function() {deepEqual( Stem("udgrunde"), "udgrund");});
test("udgrundes -> udgrund", function() {deepEqual( Stem("udgrundes"), "udgrund");});
test("udgyd -> udgyd", function() {deepEqual( Stem("udgyd"), "udgyd");});
test("udgyde -> udgyd", function() {deepEqual( Stem("udgyde"), "udgyd");});
test("udgydelse -> udgyd", function() {deepEqual( Stem("udgydelse"), "udgyd");});
test("udgyder -> udgyd", function() {deepEqual( Stem("udgyder"), "udgyd");});
test("udgydes -> udgyd", function() {deepEqual( Stem("udgydes"), "udgyd");});
test("udgydt -> udgyd", function() {deepEqual( Stem("udgydt"), "udgyd");});
test("udgå -> udgå", function() {deepEqual( Stem("udgå"), "udgå");});
test("udgåede -> udgåed", function() {deepEqual( Stem("udgåede"), "udgåed");});
test("udgået -> udgå", function() {deepEqual( Stem("udgået"), "udgå");});
test("udgår -> udgår", function() {deepEqual( Stem("udgår"), "udgår");});
test("udgød -> udgød", function() {deepEqual( Stem("udgød"), "udgød");});
test("udgør -> udgør", function() {deepEqual( Stem("udgør"), "udgør");});
test("udgøre -> udgør", function() {deepEqual( Stem("udgøre"), "udgør");});
test("udhakker -> udhak", function() {deepEqual( Stem("udhakker"), "udhak");});
test("udhamre -> udhamr", function() {deepEqual( Stem("udhamre"), "udhamr");});
test("udhamrede -> udhamred", function() {deepEqual( Stem("udhamrede"), "udhamred");});
test("udholde -> udhold", function() {deepEqual( Stem("udholde"), "udhold");});
test("udholdende -> udhold", function() {deepEqual( Stem("udholdende"), "udhold");});
test("udholdenhed -> udholden", function() {deepEqual( Stem("udholdenhed"), "udholden");});
test("udholdenheden -> udholden", function() {deepEqual( Stem("udholdenheden"), "udholden");});
test("udholdenhedensog -> udholdenhedensog", function() {deepEqual( Stem("udholdenhedensog"), "udholdenhedensog");});
test("udholder -> udhold", function() {deepEqual( Stem("udholder"), "udhold");});
test("udholdt -> udhold", function() {deepEqual( Stem("udholdt"), "udhold");});
test("udhugge -> udhug", function() {deepEqual( Stem("udhugge"), "udhug");});
test("udhuggede -> udhugged", function() {deepEqual( Stem("udhuggede"), "udhugged");});
test("udhugger -> udhug", function() {deepEqual( Stem("udhugger"), "udhug");});
test("udhugget -> udhug", function() {deepEqual( Stem("udhugget"), "udhug");});
test("udhugne -> udhugn", function() {deepEqual( Stem("udhugne"), "udhugn");});
test("udhuler -> udhul", function() {deepEqual( Stem("udhuler"), "udhul");});
test("udi -> udi", function() {deepEqual( Stem("udi"), "udi");});
test("udjoge -> udjog", function() {deepEqual( Stem("udjoge"), "udjog");});
test("udkanten -> udkant", function() {deepEqual( Stem("udkanten"), "udkant");});
test("udkastede -> udkasted", function() {deepEqual( Stem("udkastede"), "udkasted");});
test("udkastet -> udkast", function() {deepEqual( Stem("udkastet"), "udkast");});
test("udkig -> udk", function() {deepEqual( Stem("udkig"), "udk");});
test("udkigsmarken -> udkigsmark", function() {deepEqual( Stem("udkigsmarken"), "udkigsmark");});
test("udkigsmænd -> udkigsmænd", function() {deepEqual( Stem("udkigsmænd"), "udkigsmænd");});
test("udklemte -> udklemt", function() {deepEqual( Stem("udklemte"), "udklemt");});
test("udkomme -> udkom", function() {deepEqual( Stem("udkomme"), "udkom");});
test("udkåre -> udkår", function() {deepEqual( Stem("udkåre"), "udkår");});
test("udlagde -> udlag", function() {deepEqual( Stem("udlagde"), "udlag");});
test("udlagt -> udlag", function() {deepEqual( Stem("udlagt"), "udlag");});
test("udlandet -> udland", function() {deepEqual( Stem("udlandet"), "udland");});
test("udlandets -> udland", function() {deepEqual( Stem("udlandets"), "udland");});
test("udlevede -> udleved", function() {deepEqual( Stem("udlevede"), "udleved");});
test("udlever -> udlev", function() {deepEqual( Stem("udlever"), "udlev");});
test("udlevere -> udlev", function() {deepEqual( Stem("udlevere"), "udlev");});
test("udleverede -> udlev", function() {deepEqual( Stem("udleverede"), "udlev");});
test("udleveres -> udlev", function() {deepEqual( Stem("udleveres"), "udlev");});
test("udleveret -> udlev", function() {deepEqual( Stem("udleveret"), "udlev");});
test("udlevet -> udlev", function() {deepEqual( Stem("udlevet"), "udlev");});
test("udlånte -> udlånt", function() {deepEqual( Stem("udlånte"), "udlånt");});
test("udlæg -> udlæg", function() {deepEqual( Stem("udlæg"), "udlæg");});
test("udlægge -> udlæg", function() {deepEqual( Stem("udlægge"), "udlæg");});
test("udlægger -> udlæg", function() {deepEqual( Stem("udlægger"), "udlæg");});
test("udlægges -> udlæg", function() {deepEqual( Stem("udlægges"), "udlæg");});
test("udlægning -> udlægning", function() {deepEqual( Stem("udlægning"), "udlægning");});
test("udlægningen -> udlægning", function() {deepEqual( Stem("udlægningen"), "udlægning");});
test("udlændigheden -> udlænd", function() {deepEqual( Stem("udlændigheden"), "udlænd");});
test("udlændigheds -> udlænd", function() {deepEqual( Stem("udlændigheds"), "udlænd");});
test("udlænding -> udlænding", function() {deepEqual( Stem("udlænding"), "udlænding");});
test("udlændinge -> udlænding", function() {deepEqual( Stem("udlændinge"), "udlænding");});
test("udlændingene -> udlænding", function() {deepEqual( Stem("udlændingene"), "udlænding");});
test("udlært -> udlært", function() {deepEqual( Stem("udlært"), "udlært");});
test("udløb -> udløb", function() {deepEqual( Stem("udløb"), "udløb");});
test("udløber -> udløb", function() {deepEqual( Stem("udløber"), "udløb");});
test("udløberne -> udløb", function() {deepEqual( Stem("udløberne"), "udløb");});
test("udløbet -> udløb", function() {deepEqual( Stem("udløbet"), "udløb");});
test("udløs -> udløs", function() {deepEqual( Stem("udløs"), "udløs");});
test("udløse -> udløs", function() {deepEqual( Stem("udløse"), "udløs");});
test("udløser -> udløs", function() {deepEqual( Stem("udløser"), "udløs");});
test("udløsning -> udløsning", function() {deepEqual( Stem("udløsning"), "udløsning");});
test("udløst -> udløst", function() {deepEqual( Stem("udløst"), "udløst");});
test("udløste -> udløst", function() {deepEqual( Stem("udløste"), "udløst");});
test("udmagres -> udmagr", function() {deepEqual( Stem("udmagres"), "udmagr");});
test("udmattede -> udmatted", function() {deepEqual( Stem("udmattede"), "udmatted");});
test("udmattes -> udmat", function() {deepEqual( Stem("udmattes"), "udmat");});
test("udmattet -> udmat", function() {deepEqual( Stem("udmattet"), "udmat");});
test("udmåle -> udmål", function() {deepEqual( Stem("udmåle"), "udmål");});
test("udmåles -> udmål", function() {deepEqual( Stem("udmåles"), "udmål");});
test("udmærkede -> udmærked", function() {deepEqual( Stem("udmærkede"), "udmærked");});
test("udmærkelse -> udmærk", function() {deepEqual( Stem("udmærkelse"), "udmærk");});
test("udmærket -> udmærk", function() {deepEqual( Stem("udmærket"), "udmærk");});
test("udnævnes -> udnævn", function() {deepEqual( Stem("udnævnes"), "udnævn");});
test("udplyndre -> udplyndr", function() {deepEqual( Stem("udplyndre"), "udplyndr");});
test("udplyndrede -> udplyndred", function() {deepEqual( Stem("udplyndrede"), "udplyndred");});
test("udplyndres -> udplyndr", function() {deepEqual( Stem("udplyndres"), "udplyndr");});
test("udplyndring -> udplyndring", function() {deepEqual( Stem("udplyndring"), "udplyndring");});
test("udpresses -> udpres", function() {deepEqual( Stem("udpresses"), "udpres");});
test("udpønsede -> udpønsed", function() {deepEqual( Stem("udpønsede"), "udpønsed");});
test("udrakt -> udrak", function() {deepEqual( Stem("udrakt"), "udrak");});
test("udrakte -> udrak", function() {deepEqual( Stem("udrakte"), "udrak");});
test("udrede -> udred", function() {deepEqual( Stem("udrede"), "udred");});
test("udreded -> udreded", function() {deepEqual( Stem("udreded"), "udreded");});
test("udredede -> udreded", function() {deepEqual( Stem("udredede"), "udreded");});
test("udredes -> udred", function() {deepEqual( Stem("udredes"), "udred");});
test("udregne -> udregn", function() {deepEqual( Stem("udregne"), "udregn");});
test("udregnes -> udregn", function() {deepEqual( Stem("udregnes"), "udregn");});
test("udrenser -> udrens", function() {deepEqual( Stem("udrenser"), "udrens");});
test("udrensnings -> udrensning", function() {deepEqual( Stem("udrensnings"), "udrensning");});
test("udrette -> udret", function() {deepEqual( Stem("udrette"), "udret");});
test("udrettede -> udretted", function() {deepEqual( Stem("udrettede"), "udretted");});
test("udretter -> udret", function() {deepEqual( Stem("udretter"), "udret");});
test("udrettet -> udret", function() {deepEqual( Stem("udrettet"), "udret");});
test("udrevet -> udrev", function() {deepEqual( Stem("udrevet"), "udrev");});
test("udrive -> udriv", function() {deepEqual( Stem("udrive"), "udriv");});
test("udrundet -> udrund", function() {deepEqual( Stem("udrundet"), "udrund");});
test("udrust -> udrust", function() {deepEqual( Stem("udrust"), "udrust");});
test("udrustede -> udrusted", function() {deepEqual( Stem("udrustede"), "udrusted");});
test("udrustet -> udrust", function() {deepEqual( Stem("udrustet"), "udrust");});
test("udryd -> udryd", function() {deepEqual( Stem("udryd"), "udryd");});
test("udrydde -> udryd", function() {deepEqual( Stem("udrydde"), "udryd");});
test("udrydded -> udrydded", function() {deepEqual( Stem("udrydded"), "udrydded");});
test("udryddede -> udrydded", function() {deepEqual( Stem("udryddede"), "udrydded");});
test("udryddelse -> udryd", function() {deepEqual( Stem("udryddelse"), "udryd");});
test("udrydder -> udryd", function() {deepEqual( Stem("udrydder"), "udryd");});
test("udryddes -> udryd", function() {deepEqual( Stem("udryddes"), "udryd");});
test("udryddet -> udryd", function() {deepEqual( Stem("udryddet"), "udryd");});
test("udrystet -> udryst", function() {deepEqual( Stem("udrystet"), "udryst");});
test("udråb -> udråb", function() {deepEqual( Stem("udråb"), "udråb");});
test("udråbe -> udråb", function() {deepEqual( Stem("udråbe"), "udråb");});
test("udråber -> udråb", function() {deepEqual( Stem("udråber"), "udråb");});
test("udråbes -> udråb", function() {deepEqual( Stem("udråbes"), "udråb");});
test("udråbt -> udråbt", function() {deepEqual( Stem("udråbt"), "udråbt");});
test("udråbte -> udråbt", function() {deepEqual( Stem("udråbte"), "udråbt");});
test("udræk -> udræk", function() {deepEqual( Stem("udræk"), "udræk");});
test("udrække -> udræk", function() {deepEqual( Stem("udrække"), "udræk");});
test("udrækker -> udræk", function() {deepEqual( Stem("udrækker"), "udræk");});
test("udsagn -> udsagn", function() {deepEqual( Stem("udsagn"), "udsagn");});
test("udsatte -> udsat", function() {deepEqual( Stem("udsatte"), "udsat");});
test("udse -> uds", function() {deepEqual( Stem("udse"), "uds");});
test("udseende -> udse", function() {deepEqual( Stem("udseende"), "udse");});
test("udsend -> udsend", function() {deepEqual( Stem("udsend"), "udsend");});
test("udsende -> uds", function() {deepEqual( Stem("udsende"), "uds");});
test("udsender -> udsend", function() {deepEqual( Stem("udsender"), "udsend");});
test("udsendes -> uds", function() {deepEqual( Stem("udsendes"), "uds");});
test("udsending -> udsending", function() {deepEqual( Stem("udsending"), "udsending");});
test("udsendt -> udsend", function() {deepEqual( Stem("udsendt"), "udsend");});
test("udsendte -> udsend", function() {deepEqual( Stem("udsendte"), "udsend");});
test("udser -> uds", function() {deepEqual( Stem("udser"), "uds");});
test("udset -> uds", function() {deepEqual( Stem("udset"), "uds");});
test("udsete -> udset", function() {deepEqual( Stem("udsete"), "udset");});
test("udsfråler -> udsfrål", function() {deepEqual( Stem("udsfråler"), "udsfrål");});
test("udsige -> uds", function() {deepEqual( Stem("udsige"), "uds");});
test("udsigt -> uds", function() {deepEqual( Stem("udsigt"), "uds");});
test("udskift -> udskift", function() {deepEqual( Stem("udskift"), "udskift");});
test("udskifte -> udskift", function() {deepEqual( Stem("udskifte"), "udskift");});
test("udskifted -> udskifted", function() {deepEqual( Stem("udskifted"), "udskifted");});
test("udskiftede -> udskifted", function() {deepEqual( Stem("udskiftede"), "udskifted");});
test("udskifter -> udskift", function() {deepEqual( Stem("udskifter"), "udskift");});
test("udskiftes -> udskift", function() {deepEqual( Stem("udskiftes"), "udskift");});
test("udskiftningen -> udskiftning", function() {deepEqual( Stem("udskiftningen"), "udskiftning");});
test("udskille -> udskil", function() {deepEqual( Stem("udskille"), "udskil");});
test("udskiller -> udskil", function() {deepEqual( Stem("udskiller"), "udskil");});
test("udskilles -> udskil", function() {deepEqual( Stem("udskilles"), "udskil");});
test("udskilt -> udskilt", function() {deepEqual( Stem("udskilt"), "udskilt");});
test("udskilte -> udskilt", function() {deepEqual( Stem("udskilte"), "udskilt");});
test("udskiltes -> udskilt", function() {deepEqual( Stem("udskiltes"), "udskilt");});
test("udskrev -> udskrev", function() {deepEqual( Stem("udskrev"), "udskrev");});
test("udskrive -> udskriv", function() {deepEqual( Stem("udskrive"), "udskriv");});
test("udskud -> udskud", function() {deepEqual( Stem("udskud"), "udskud");});
test("udskumme -> udskum", function() {deepEqual( Stem("udskumme"), "udskum");});
test("udskåret -> udskår", function() {deepEqual( Stem("udskåret"), "udskår");});
test("udskårne -> udskårn", function() {deepEqual( Stem("udskårne"), "udskårn");});
test("udskælder -> udskæld", function() {deepEqual( Stem("udskælder"), "udskæld");});
test("udskældt -> udskæld", function() {deepEqual( Stem("udskældt"), "udskæld");});
test("udskældte -> udskæld", function() {deepEqual( Stem("udskældte"), "udskæld");});
test("udskære -> udskær", function() {deepEqual( Stem("udskære"), "udskær");});
test("udskæring -> udskæring", function() {deepEqual( Stem("udskæring"), "udskæring");});
test("udskæringsarbejde -> udskæringsarbejd", function() {deepEqual( Stem("udskæringsarbejde"), "udskæringsarbejd");});
test("udskæringsarbejdet -> udskæringsarbejd", function() {deepEqual( Stem("udskæringsarbejdet"), "udskæringsarbejd");});
test("udslet -> udsl", function() {deepEqual( Stem("udslet"), "udsl");});
test("udslette -> udslet", function() {deepEqual( Stem("udslette"), "udslet");});
test("udslettede -> udsletted", function() {deepEqual( Stem("udslettede"), "udsletted");});
test("udslettedes -> udsletted", function() {deepEqual( Stem("udslettedes"), "udsletted");});
test("udsletter -> udslet", function() {deepEqual( Stem("udsletter"), "udslet");});
test("udslettes -> udslet", function() {deepEqual( Stem("udslettes"), "udslet");});
test("udslettet -> udslet", function() {deepEqual( Stem("udslettet"), "udslet");});
test("udslukke -> udsluk", function() {deepEqual( Stem("udslukke"), "udsluk");});
test("udslukker -> udsluk", function() {deepEqual( Stem("udslukker"), "udsluk");});
test("udslukkes -> udsluk", function() {deepEqual( Stem("udslukkes"), "udsluk");});
test("udslukt -> udsluk", function() {deepEqual( Stem("udslukt"), "udsluk");});
test("udslynge -> udslyng", function() {deepEqual( Stem("udslynge"), "udslyng");});
test("udslynged -> udslynged", function() {deepEqual( Stem("udslynged"), "udslynged");});
test("udslyngede -> udslynged", function() {deepEqual( Stem("udslyngede"), "udslynged");});
test("udslynger -> udslyng", function() {deepEqual( Stem("udslynger"), "udslyng");});
test("udslæt -> udslæt", function() {deepEqual( Stem("udslæt"), "udslæt");});
test("udslættet -> udslæt", function() {deepEqual( Stem("udslættet"), "udslæt");});
test("udspejd -> udspejd", function() {deepEqual( Stem("udspejd"), "udspejd");});
test("udspejde -> udspejd", function() {deepEqual( Stem("udspejde"), "udspejd");});
test("udspejdede -> udspejded", function() {deepEqual( Stem("udspejdede"), "udspejded");});
test("udspejder -> udspejd", function() {deepEqual( Stem("udspejder"), "udspejd");});
test("udspejdet -> udspejd", function() {deepEqual( Stem("udspejdet"), "udspejd");});
test("udsprang -> udsprang", function() {deepEqual( Stem("udsprang"), "udsprang");});
test("udspred -> udspred", function() {deepEqual( Stem("udspred"), "udspred");});
test("udsprede -> udspred", function() {deepEqual( Stem("udsprede"), "udspred");});
test("udspreder -> udspred", function() {deepEqual( Stem("udspreder"), "udspred");});
test("udspredt -> udspred", function() {deepEqual( Stem("udspredt"), "udspred");});
test("udspredte -> udspred", function() {deepEqual( Stem("udspredte"), "udspred");});
test("udspring -> udspring", function() {deepEqual( Stem("udspring"), "udspring");});
test("udspringer -> udspring", function() {deepEqual( Stem("udspringer"), "udspring");});
test("udsprungen -> udsprung", function() {deepEqual( Stem("udsprungen"), "udsprung");});
test("udspurgte -> udspurg", function() {deepEqual( Stem("udspurgte"), "udspurg");});
test("udspy -> udspy", function() {deepEqual( Stem("udspy"), "udspy");});
test("udspyede -> udspyed", function() {deepEqual( Stem("udspyede"), "udspyed");});
test("udspyet -> udspy", function() {deepEqual( Stem("udspyet"), "udspy");});
test("udspænd -> udspænd", function() {deepEqual( Stem("udspænd"), "udspænd");});
test("udspænde -> udspænd", function() {deepEqual( Stem("udspænde"), "udspænd");});
test("udspænder -> udspænd", function() {deepEqual( Stem("udspænder"), "udspænd");});
test("udspændes -> udspænd", function() {deepEqual( Stem("udspændes"), "udspænd");});
test("udspændt -> udspænd", function() {deepEqual( Stem("udspændt"), "udspænd");});
test("udspændte -> udspænd", function() {deepEqual( Stem("udspændte"), "udspænd");});
test("udstede -> udsted", function() {deepEqual( Stem("udstede"), "udsted");});
test("udsteder -> udsted", function() {deepEqual( Stem("udsteder"), "udsted");});
test("udstedes -> udsted", function() {deepEqual( Stem("udstedes"), "udsted");});
test("udstedt -> udsted", function() {deepEqual( Stem("udstedt"), "udsted");});
test("udstedte -> udsted", function() {deepEqual( Stem("udstedte"), "udsted");});
test("udstikke -> udstik", function() {deepEqual( Stem("udstikke"), "udstik");});
test("udstrakt -> udstrak", function() {deepEqual( Stem("udstrakt"), "udstrak");});
test("udstrakte -> udstrak", function() {deepEqual( Stem("udstrakte"), "udstrak");});
test("udstrækning -> udstrækning", function() {deepEqual( Stem("udstrækning"), "udstrækning");});
test("udstrø -> udstrø", function() {deepEqual( Stem("udstrø"), "udstrø");});
test("udstrør -> udstrør", function() {deepEqual( Stem("udstrør"), "udstrør");});
test("udstyr -> udstyr", function() {deepEqual( Stem("udstyr"), "udstyr");});
test("udstyre -> udstyr", function() {deepEqual( Stem("udstyre"), "udstyr");});
test("udstyrede -> udstyred", function() {deepEqual( Stem("udstyrede"), "udstyred");});
test("udstå -> udstå", function() {deepEqual( Stem("udstå"), "udstå");});
test("udstået -> udstå", function() {deepEqual( Stem("udstået"), "udstå");});
test("udstøde -> udstød", function() {deepEqual( Stem("udstøde"), "udstød");});
test("udstøder -> udstød", function() {deepEqual( Stem("udstøder"), "udstød");});
test("udstødes -> udstød", function() {deepEqual( Stem("udstødes"), "udstød");});
test("udstødt -> udstød", function() {deepEqual( Stem("udstødt"), "udstød");});
test("udstødte -> udstød", function() {deepEqual( Stem("udstødte"), "udstød");});
test("udsuger -> udsug", function() {deepEqual( Stem("udsuger"), "udsug");});
test("udsultet -> udsult", function() {deepEqual( Stem("udsultet"), "udsult");});
test("udså -> udså", function() {deepEqual( Stem("udså"), "udså");});
test("udsår -> udsår", function() {deepEqual( Stem("udsår"), "udsår");});
test("udsæd -> udsæd", function() {deepEqual( Stem("udsæd"), "udsæd");});
test("udsæden -> udsæd", function() {deepEqual( Stem("udsæden"), "udsæd");});
test("udsætte -> udsæt", function() {deepEqual( Stem("udsætte"), "udsæt");});
test("udsætter -> udsæt", function() {deepEqual( Stem("udsætter"), "udsæt");});
test("udsøge -> udsøg", function() {deepEqual( Stem("udsøge"), "udsøg");});
test("udsøgt -> udsøg", function() {deepEqual( Stem("udsøgt"), "udsøg");});
test("udsøgte -> udsøg", function() {deepEqual( Stem("udsøgte"), "udsøg");});
test("udtag -> udtag", function() {deepEqual( Stem("udtag"), "udtag");});
test("udtage -> udtag", function() {deepEqual( Stem("udtage"), "udtag");});
test("udtagen -> udtag", function() {deepEqual( Stem("udtagen"), "udtag");});
test("udtager -> udtag", function() {deepEqual( Stem("udtager"), "udtag");});
test("udtages -> udtag", function() {deepEqual( Stem("udtages"), "udtag");});
test("udtaget -> udtag", function() {deepEqual( Stem("udtaget"), "udtag");});
test("udtale -> udtal", function() {deepEqual( Stem("udtale"), "udtal");});
test("udtaler -> udtal", function() {deepEqual( Stem("udtaler"), "udtal");});
test("udtalt -> udtalt", function() {deepEqual( Stem("udtalt"), "udtalt");});
test("udtalte -> udtalt", function() {deepEqual( Stem("udtalte"), "udtalt");});
test("udtog -> udtog", function() {deepEqual( Stem("udtog"), "udtog");});
test("udtoges -> udtog", function() {deepEqual( Stem("udtoges"), "udtog");});
test("udtrykke -> udtryk", function() {deepEqual( Stem("udtrykke"), "udtryk");});
test("udtrykkelig -> udtryk", function() {deepEqual( Stem("udtrykkelig"), "udtryk");});
test("udtrykkelige -> udtryk", function() {deepEqual( Stem("udtrykkelige"), "udtryk");});
test("udtrykket -> udtryk", function() {deepEqual( Stem("udtrykket"), "udtryk");});
test("udtrykte -> udtryk", function() {deepEqual( Stem("udtrykte"), "udtryk");});
test("udtyde -> udtyd", function() {deepEqual( Stem("udtyde"), "udtyd");});
test("udtydes -> udtyd", function() {deepEqual( Stem("udtydes"), "udtyd");});
test("udtydning -> udtydning", function() {deepEqual( Stem("udtydning"), "udtydning");});
test("udtænke -> udtænk", function() {deepEqual( Stem("udtænke"), "udtænk");});
test("udtænker -> udtænk", function() {deepEqual( Stem("udtænker"), "udtænk");});
test("udtænkt -> udtænk", function() {deepEqual( Stem("udtænkt"), "udtænk");});
test("udtænkte -> udtænk", function() {deepEqual( Stem("udtænkte"), "udtænk");});
test("udtærede -> udtæred", function() {deepEqual( Stem("udtærede"), "udtæred");});
test("udtømme -> udtøm", function() {deepEqual( Stem("udtømme"), "udtøm");});
test("udtømmelser -> udtøm", function() {deepEqual( Stem("udtømmelser"), "udtøm");});
test("udtømmer -> udtøm", function() {deepEqual( Stem("udtømmer"), "udtøm");});
test("udtømt -> udtømt", function() {deepEqual( Stem("udtømt"), "udtømt");});
test("udtømte -> udtømt", function() {deepEqual( Stem("udtømte"), "udtømt");});
test("udtørred -> udtørred", function() {deepEqual( Stem("udtørred"), "udtørred");});
test("udtørrede -> udtørred", function() {deepEqual( Stem("udtørrede"), "udtørred");});
test("udtørrer -> udtør", function() {deepEqual( Stem("udtørrer"), "udtør");});
test("udtørres -> udtør", function() {deepEqual( Stem("udtørres"), "udtør");});
test("udtørret -> udtør", function() {deepEqual( Stem("udtørret"), "udtør");});
test("uduelige -> udu", function() {deepEqual( Stem("uduelige"), "udu");});
test("udvalg -> udvalg", function() {deepEqual( Stem("udvalg"), "udvalg");});
test("udvalget -> udvalg", function() {deepEqual( Stem("udvalget"), "udvalg");});
test("udvalgt -> udvalg", function() {deepEqual( Stem("udvalgt"), "udvalg");});
test("udvalgte -> udvalg", function() {deepEqual( Stem("udvalgte"), "udvalg");});
test("udvalgtes -> udvalg", function() {deepEqual( Stem("udvalgtes"), "udvalg");});
test("udvandred -> udvandred", function() {deepEqual( Stem("udvandred"), "udvandred");});
test("udvandret -> udvandr", function() {deepEqual( Stem("udvandret"), "udvandr");});
test("udvandring -> udvandring", function() {deepEqual( Stem("udvandring"), "udvandring");});
test("udvej -> udvej", function() {deepEqual( Stem("udvej"), "udvej");});
test("udvejer -> udvej", function() {deepEqual( Stem("udvejer"), "udvej");});
test("udvendig -> udvend", function() {deepEqual( Stem("udvendig"), "udvend");});
test("udvendige -> udvend", function() {deepEqual( Stem("udvendige"), "udvend");});
test("udvendigt -> udvend", function() {deepEqual( Stem("udvendigt"), "udvend");});
test("udvide -> udvid", function() {deepEqual( Stem("udvide"), "udvid");});
test("udvidede -> udvided", function() {deepEqual( Stem("udvidede"), "udvided");});
test("udvider -> udvid", function() {deepEqual( Stem("udvider"), "udvid");});
test("udvidet -> udvid", function() {deepEqual( Stem("udvidet"), "udvid");});
test("udvindes -> udvind", function() {deepEqual( Stem("udvindes"), "udvind");});
test("udvirke -> udvirk", function() {deepEqual( Stem("udvirke"), "udvirk");});
test("udvise -> udvis", function() {deepEqual( Stem("udvise"), "udvis");});
test("udvist -> udvist", function() {deepEqual( Stem("udvist"), "udvist");});
test("udviste -> udvist", function() {deepEqual( Stem("udviste"), "udvist");});
test("udvortes -> udvort", function() {deepEqual( Stem("udvortes"), "udvort");});
test("udvæld -> udvæld", function() {deepEqual( Stem("udvæld"), "udvæld");});
test("udvælde -> udvæld", function() {deepEqual( Stem("udvælde"), "udvæld");});
test("udvælg -> udvælg", function() {deepEqual( Stem("udvælg"), "udvælg");});
test("udvælge -> udvælg", function() {deepEqual( Stem("udvælge"), "udvælg");});
test("udvælgelse -> udvælg", function() {deepEqual( Stem("udvælgelse"), "udvælg");});
test("udvælgelsen -> udvælg", function() {deepEqual( Stem("udvælgelsen"), "udvælg");});
test("udvælgelses -> udvælg", function() {deepEqual( Stem("udvælgelses"), "udvælg");});
test("udvælger -> udvælg", function() {deepEqual( Stem("udvælger"), "udvælg");});
test("udygtige -> udyg", function() {deepEqual( Stem("udygtige"), "udyg");});
test("udåd -> udåd", function() {deepEqual( Stem("udåd"), "udåd");});
test("udådsmand -> udådsmand", function() {deepEqual( Stem("udådsmand"), "udådsmand");});
test("udådsmanden -> udådsmand", function() {deepEqual( Stem("udådsmanden"), "udådsmand");});
test("udådsmænd -> udådsmænd", function() {deepEqual( Stem("udådsmænd"), "udådsmænd");});
test("udådsmændene -> udådsmænd", function() {deepEqual( Stem("udådsmændene"), "udådsmænd");});
test("udådsmændenes -> udådsmænd", function() {deepEqual( Stem("udådsmændenes"), "udådsmænd");});
test("udådsmænds -> udådsmænd", function() {deepEqual( Stem("udådsmænds"), "udådsmænd");});
test("udånde -> udånd", function() {deepEqual( Stem("udånde"), "udånd");});
test("udånded -> udånded", function() {deepEqual( Stem("udånded"), "udånded");});
test("udåndede -> udånded", function() {deepEqual( Stem("udåndede"), "udånded");});
test("udånder -> udånd", function() {deepEqual( Stem("udånder"), "udånd");});
test("udåndet -> udånd", function() {deepEqual( Stem("udåndet"), "udånd");});
test("udæske -> udæsk", function() {deepEqual( Stem("udæske"), "udæsk");});
test("udødelighed -> udød", function() {deepEqual( Stem("udødelighed"), "udød");});
test("udøs -> udøs", function() {deepEqual( Stem("udøs"), "udøs");});
test("udøse -> udøs", function() {deepEqual( Stem("udøse"), "udøs");});
test("udøser -> udøs", function() {deepEqual( Stem("udøser"), "udøs");});
test("udøses -> udøs", function() {deepEqual( Stem("udøses"), "udøs");});
test("udøst -> udøst", function() {deepEqual( Stem("udøst"), "udøst");});
test("udøste -> udøst", function() {deepEqual( Stem("udøste"), "udøst");});
test("udøver -> udøv", function() {deepEqual( Stem("udøver"), "udøv");});
test("uede -> ued", function() {deepEqual( Stem("uede"), "ued");});
test("uel -> uel", function() {deepEqual( Stem("uel"), "uel");});
test("uels -> uel", function() {deepEqual( Stem("uels"), "uel");});
test("uenig -> uen", function() {deepEqual( Stem("uenig"), "uen");});
test("uenighed -> uen", function() {deepEqual( Stem("uenighed"), "uen");});
test("ufarsin -> ufarsin", function() {deepEqual( Stem("ufarsin"), "ufarsin");});
test("ufattelig -> ufat", function() {deepEqual( Stem("ufattelig"), "ufat");});
test("ufatteligt -> ufat", function() {deepEqual( Stem("ufatteligt"), "ufat");});
test("uforanderlige -> uforander", function() {deepEqual( Stem("uforanderlige"), "uforander");});
test("uforanderlighed -> uforander", function() {deepEqual( Stem("uforanderlighed"), "uforander");});
test("uforberedte -> uforbered", function() {deepEqual( Stem("uforberedte"), "uforbered");});
test("ufordærvethed -> ufordærv", function() {deepEqual( Stem("ufordærvethed"), "ufordærv");});
test("uforfalskede -> uforfalsked", function() {deepEqual( Stem("uforfalskede"), "uforfalsked");});
test("uforgængeligt -> uforgæng", function() {deepEqual( Stem("uforgængeligt"), "uforgæng");});
test("uforkrænkelig -> uforkrænk", function() {deepEqual( Stem("uforkrænkelig"), "uforkrænk");});
test("uforkrænkelige -> uforkrænk", function() {deepEqual( Stem("uforkrænkelige"), "uforkrænk");});
test("uforkrænkelighed -> uforkrænk", function() {deepEqual( Stem("uforkrænkelighed"), "uforkrænk");});
test("uforkrænkeligheden -> uforkrænk", function() {deepEqual( Stem("uforkrænkeligheden"), "uforkrænk");});
test("uforligelige -> uforlig", function() {deepEqual( Stem("uforligelige"), "uforlig");});
test("ufornuftige -> ufornuft", function() {deepEqual( Stem("ufornuftige"), "ufornuft");});
test("uforsagt -> uforsag", function() {deepEqual( Stem("uforsagt"), "uforsag");});
test("uforskyldt -> uforskyld", function() {deepEqual( Stem("uforskyldt"), "uforskyld");});
test("uforstand -> uforstand", function() {deepEqual( Stem("uforstand"), "uforstand");});
test("uforstandig -> uforstand", function() {deepEqual( Stem("uforstandig"), "uforstand");});
test("uforstandige -> uforstand", function() {deepEqual( Stem("uforstandige"), "uforstand");});
test("uforstandiges -> uforstand", function() {deepEqual( Stem("uforstandiges"), "uforstand");});
test("uforstandigt -> uforstand", function() {deepEqual( Stem("uforstandigt"), "uforstand");});
test("uforståeligt -> uforstå", function() {deepEqual( Stem("uforståeligt"), "uforstå");});
test("uforsætlige -> uforsæt", function() {deepEqual( Stem("uforsætlige"), "uforsæt");});
test("uforsætligt -> uforsæt", function() {deepEqual( Stem("uforsætligt"), "uforsæt");});
test("ufortøvet -> ufortøv", function() {deepEqual( Stem("ufortøvet"), "ufortøv");});
test("ufravigeligt -> ufravig", function() {deepEqual( Stem("ufravigeligt"), "ufravig");});
test("ufred -> ufred", function() {deepEqual( Stem("ufred"), "ufred");});
test("ufrede -> ufred", function() {deepEqual( Stem("ufrede"), "ufred");});
test("ufri -> ufri", function() {deepEqual( Stem("ufri"), "ufri");});
test("ufrugtbar -> ufrugtbar", function() {deepEqual( Stem("ufrugtbar"), "ufrugtbar");});
test("ufrugtbare -> ufrugtbar", function() {deepEqual( Stem("ufrugtbare"), "ufrugtbar");});
test("ufrugtbarhed -> ufrugtbar", function() {deepEqual( Stem("ufrugtbarhed"), "ufrugtbar");});
test("ufuldbårent -> ufuldbårent", function() {deepEqual( Stem("ufuldbårent"), "ufuldbårent");});
test("ufuldbårne -> ufuldbårn", function() {deepEqual( Stem("ufuldbårne"), "ufuldbårn");});
test("ufærd -> ufærd", function() {deepEqual( Stem("ufærd"), "ufærd");});
test("uge -> uge", function() {deepEqual( Stem("uge"), "uge");});
test("ugedag -> ugedag", function() {deepEqual( Stem("ugedag"), "ugedag");});
test("ugefest -> ugefest", function() {deepEqual( Stem("ugefest"), "ugefest");});
test("ugefesten -> ugefest", function() {deepEqual( Stem("ugefesten"), "ugefest");});
test("ugehøjtid -> ugehøjtid", function() {deepEqual( Stem("ugehøjtid"), "ugehøjtid");});
test("ugen -> ugen", function() {deepEqual( Stem("ugen"), "ugen");});
test("ugens -> ugen", function() {deepEqual( Stem("ugens"), "ugen");});
test("uger -> uger", function() {deepEqual( Stem("uger"), "uger");});
test("ugerne -> ugern", function() {deepEqual( Stem("ugerne"), "ugern");});
test("ugernes -> ugern", function() {deepEqual( Stem("ugernes"), "ugern");});
test("ugerningsmand -> ugerningsmand", function() {deepEqual( Stem("ugerningsmand"), "ugerningsmand");});
test("ugerningsmænd -> ugerningsmænd", function() {deepEqual( Stem("ugerningsmænd"), "ugerningsmænd");});
test("ugerningsmændenes -> ugerningsmænd", function() {deepEqual( Stem("ugerningsmændenes"), "ugerningsmænd");});
test("ugerningsmænds -> ugerningsmænd", function() {deepEqual( Stem("ugerningsmænds"), "ugerningsmænd");});
test("ugift -> ugift", function() {deepEqual( Stem("ugift"), "ugift");});
test("ugifte -> ugift", function() {deepEqual( Stem("ugifte"), "ugift");});
test("ugjort -> ugjort", function() {deepEqual( Stem("ugjort"), "ugjort");});
test("ugle -> ugl", function() {deepEqual( Stem("ugle"), "ugl");});
test("uglen -> ugl", function() {deepEqual( Stem("uglen"), "ugl");});
test("ugler -> ugl", function() {deepEqual( Stem("ugler"), "ugl");});
test("ugræs -> ugræs", function() {deepEqual( Stem("ugræs"), "ugræs");});
test("ugræsset -> ugræs", function() {deepEqual( Stem("ugræsset"), "ugræs");});
test("ugt -> ugt", function() {deepEqual( Stem("ugt"), "ugt");});
test("ugudelig -> ugud", function() {deepEqual( Stem("ugudelig"), "ugud");});
test("ugudelige -> ugud", function() {deepEqual( Stem("ugudelige"), "ugud");});
test("ugudelighed -> ugud", function() {deepEqual( Stem("ugudelighed"), "ugud");});
test("ugudeligheden -> ugud", function() {deepEqual( Stem("ugudeligheden"), "ugud");});
test("ugudeligheder -> ugud", function() {deepEqual( Stem("ugudeligheder"), "ugud");});
test("ugudeligheders -> ugudelighed", function() {deepEqual( Stem("ugudeligheders"), "ugudelighed");});
test("ugudeligheds -> ugud", function() {deepEqual( Stem("ugudeligheds"), "ugud");});
test("ugudeligt -> ugud", function() {deepEqual( Stem("ugudeligt"), "ugud");});
test("ugyldig -> ugyld", function() {deepEqual( Stem("ugyldig"), "ugyld");});
test("ugyldige -> ugyld", function() {deepEqual( Stem("ugyldige"), "ugyld");});
test("ugyldigt -> ugyld", function() {deepEqual( Stem("ugyldigt"), "ugyld");});
test("uhelbredelig -> uhelbred", function() {deepEqual( Stem("uhelbredelig"), "uhelbred");});
test("uheld -> uheld", function() {deepEqual( Stem("uheld"), "uheld");});
test("uhindret -> uhindr", function() {deepEqual( Stem("uhindret"), "uhindr");});
test("uhumskhed -> uhumsk", function() {deepEqual( Stem("uhumskhed"), "uhumsk");});
test("uhyre -> uhyr", function() {deepEqual( Stem("uhyre"), "uhyr");});
test("uhørt -> uhørt", function() {deepEqual( Stem("uhørt"), "uhørt");});
test("uhørte -> uhørt", function() {deepEqual( Stem("uhørte"), "uhørt");});
test("uigenkaldeligt -> uigenkald", function() {deepEqual( Stem("uigenkaldeligt"), "uigenkald");});
test("uimodsigeligt -> uimodsig", function() {deepEqual( Stem("uimodsigeligt"), "uimodsig");});
test("uindtagelig -> uindtag", function() {deepEqual( Stem("uindtagelig"), "uindtag");});
test("uindviede -> uindvied", function() {deepEqual( Stem("uindviede"), "uindvied");});
test("uindviedes -> uindvied", function() {deepEqual( Stem("uindviedes"), "uindvied");});
test("uindviet -> uindvi", function() {deepEqual( Stem("uindviet"), "uindvi");});
test("ujævne -> ujævn", function() {deepEqual( Stem("ujævne"), "ujævn");});
test("ukaldet -> ukald", function() {deepEqual( Stem("ukaldet"), "ukald");});
test("ukendelig -> ukend", function() {deepEqual( Stem("ukendelig"), "ukend");});
test("ukendelige -> ukend", function() {deepEqual( Stem("ukendelige"), "ukend");});
test("ukendt -> ukend", function() {deepEqual( Stem("ukendt"), "ukend");});
test("ukendte -> ukend", function() {deepEqual( Stem("ukendte"), "ukend");});
test("ukendtes -> ukend", function() {deepEqual( Stem("ukendtes"), "ukend");});
test("ukrudt -> ukrud", function() {deepEqual( Stem("ukrudt"), "ukrud");});
test("ukyndig -> ukynd", function() {deepEqual( Stem("ukyndig"), "ukynd");});
test("ukyndige -> ukynd", function() {deepEqual( Stem("ukyndige"), "ukynd");});
test("ukærlige -> ukær", function() {deepEqual( Stem("ukærlige"), "ukær");});
test("ul -> ul", function() {deepEqual( Stem("ul"), "ul");});
test("ulaj -> ulaj", function() {deepEqual( Stem("ulaj"), "ulaj");});
test("ulam -> ulam", function() {deepEqual( Stem("ulam"), "ulam");});
test("ulams -> ulam", function() {deepEqual( Stem("ulams"), "ulam");});
test("ulastelig -> ulast", function() {deepEqual( Stem("ulastelig"), "ulast");});
test("ulastelige -> ulast", function() {deepEqual( Stem("ulastelige"), "ulast");});
test("ulasteligt -> ulast", function() {deepEqual( Stem("ulasteligt"), "ulast");});
test("ulave -> ulav", function() {deepEqual( Stem("ulave"), "ulav");});
test("uld -> uld", function() {deepEqual( Stem("uld"), "uld");});
test("ulden -> uld", function() {deepEqual( Stem("ulden"), "uld");});
test("ulejlige -> ulej", function() {deepEqual( Stem("ulejlige"), "ulej");});
test("ulejlighed -> ulej", function() {deepEqual( Stem("ulejlighed"), "ulej");});
test("ulige -> ulig", function() {deepEqual( Stem("ulige"), "ulig");});
test("ullas -> ulla", function() {deepEqual( Stem("ullas"), "ulla");});
test("ulletaj -> ulletaj", function() {deepEqual( Stem("ulletaj"), "ulletaj");});
test("ullykkens -> ullyk", function() {deepEqual( Stem("ullykkens"), "ullyk");});
test("ulv -> ulv", function() {deepEqual( Stem("ulv"), "ulv");});
test("ulve -> ulv", function() {deepEqual( Stem("ulve"), "ulv");});
test("ulven -> ulv", function() {deepEqual( Stem("ulven"), "ulv");});
test("ulydig -> ulyd", function() {deepEqual( Stem("ulydig"), "ulyd");});
test("ulydige -> ulyd", function() {deepEqual( Stem("ulydige"), "ulyd");});
test("ulydighed -> ulyd", function() {deepEqual( Stem("ulydighed"), "ulyd");});
test("ulydigt -> ulyd", function() {deepEqual( Stem("ulydigt"), "ulyd");});
test("ulykke -> ulyk", function() {deepEqual( Stem("ulykke"), "ulyk");});
test("ulykkelige -> ulyk", function() {deepEqual( Stem("ulykkelige"), "ulyk");});
test("ulykken -> ulyk", function() {deepEqual( Stem("ulykken"), "ulyk");});
test("ulykkens -> ulyk", function() {deepEqual( Stem("ulykkens"), "ulyk");});
test("ulykker -> ulyk", function() {deepEqual( Stem("ulykker"), "ulyk");});
test("ulykkes -> ulyk", function() {deepEqual( Stem("ulykkes"), "ulyk");});
test("ulykkesbud -> ulykkesbud", function() {deepEqual( Stem("ulykkesbud"), "ulykkesbud");});
test("ulykkesdagen -> ulykkesdag", function() {deepEqual( Stem("ulykkesdagen"), "ulykkesdag");});
test("ulykkesengle -> ulykkesengl", function() {deepEqual( Stem("ulykkesengle"), "ulykkesengl");});
test("ulykkesgrave -> ulykkesgrav", function() {deepEqual( Stem("ulykkesgrave"), "ulykkesgrav");});
test("ulykkeslod -> ulykkeslod", function() {deepEqual( Stem("ulykkeslod"), "ulykkeslod");});
test("ulykkeslove -> ulykkeslov", function() {deepEqual( Stem("ulykkeslove"), "ulykkeslov");});
test("ulykkestanker -> ulykkestank", function() {deepEqual( Stem("ulykkestanker"), "ulykkestank");});
test("ulykkestid -> ulykkestid", function() {deepEqual( Stem("ulykkestid"), "ulykkestid");});
test("ulykkestiden -> ulykkestid", function() {deepEqual( Stem("ulykkestiden"), "ulykkestid");});
test("ulykkesveje -> ulykkesvej", function() {deepEqual( Stem("ulykkesveje"), "ulykkesvej");});
test("ulykkesværk -> ulykkesværk", function() {deepEqual( Stem("ulykkesværk"), "ulykkesværk");});
test("ulykkkr -> ulykkkr", function() {deepEqual( Stem("ulykkkr"), "ulykkkr");});
test("ulægelige -> ulæg", function() {deepEqual( Stem("ulægelige"), "ulæg");});
test("ulægeligt -> ulæg", function() {deepEqual( Stem("ulægeligt"), "ulæg");});
test("ulærd -> ulærd", function() {deepEqual( Stem("ulærd"), "ulærd");});
test("ulærde -> ulærd", function() {deepEqual( Stem("ulærde"), "ulærd");});
test("uma -> uma", function() {deepEqual( Stem("uma"), "uma");});
test("umag -> umag", function() {deepEqual( Stem("umag"), "umag");});
test("umage -> umag", function() {deepEqual( Stem("umage"), "umag");});
test("umaged -> umaged", function() {deepEqual( Stem("umaged"), "umaged");});
test("umager -> umag", function() {deepEqual( Stem("umager"), "umag");});
test("umenneskelig -> umennesk", function() {deepEqual( Stem("umenneskelig"), "umennesk");});
test("ummiterne -> ummit", function() {deepEqual( Stem("ummiterne"), "ummit");});
test("umodne -> umodn", function() {deepEqual( Stem("umodne"), "umodn");});
test("umuligt -> umu", function() {deepEqual( Stem("umuligt"), "umu");});
test("umyndig -> umynd", function() {deepEqual( Stem("umyndig"), "umynd");});
test("umyndige -> umynd", function() {deepEqual( Stem("umyndige"), "umynd");});
test("umyndiges -> umynd", function() {deepEqual( Stem("umyndiges"), "umynd");});
test("umådelig -> umåd", function() {deepEqual( Stem("umådelig"), "umåd");});
test("umådelige -> umåd", function() {deepEqual( Stem("umådelige"), "umåd");});
test("umådeligt -> umåd", function() {deepEqual( Stem("umådeligt"), "umåd");});
test("umålelige -> umål", function() {deepEqual( Stem("umålelige"), "umål");});
test("umælende -> umæl", function() {deepEqual( Stem("umælende"), "umæl");});
test("umættelig -> umæt", function() {deepEqual( Stem("umættelig"), "umæt");});
test("umættelighed -> umæt", function() {deepEqual( Stem("umættelighed"), "umæt");});
test("unaturlig -> unatur", function() {deepEqual( Stem("unaturlig"), "unatur");});
test("unaturlige -> unatur", function() {deepEqual( Stem("unaturlige"), "unatur");});
test("und -> und", function() {deepEqual( Stem("und"), "und");});
test("unddrag -> unddrag", function() {deepEqual( Stem("unddrag"), "unddrag");});
test("unddrage -> unddrag", function() {deepEqual( Stem("unddrage"), "unddrag");});
test("unddrager -> unddrag", function() {deepEqual( Stem("unddrager"), "unddrag");});
test("unddrages -> unddrag", function() {deepEqual( Stem("unddrages"), "unddrag");});
test("unddraget -> unddrag", function() {deepEqual( Stem("unddraget"), "unddrag");});
test("unddrog -> unddrog", function() {deepEqual( Stem("unddrog"), "unddrog");});
test("unde -> und", function() {deepEqual( Stem("unde"), "und");});
test("under -> und", function() {deepEqual( Stem("under"), "und");});
test("underdragter -> underdrag", function() {deepEqual( Stem("underdragter"), "underdrag");});
test("undere -> und", function() {deepEqual( Stem("undere"), "und");});
test("underfuld -> underfuld", function() {deepEqual( Stem("underfuld"), "underfuld");});
test("underfulde -> underfuld", function() {deepEqual( Stem("underfulde"), "underfuld");});
test("underfuldt -> underfuld", function() {deepEqual( Stem("underfuldt"), "underfuld");});
test("underfundig -> underfund", function() {deepEqual( Stem("underfundig"), "underfund");});
test("underfundighed -> underfund", function() {deepEqual( Stem("underfundighed"), "underfund");});
test("undergang -> undergang", function() {deepEqual( Stem("undergang"), "undergang");});
test("undergangens -> undergang", function() {deepEqual( Stem("undergangens"), "undergang");});
test("undergangs -> undergang", function() {deepEqual( Stem("undergangs"), "undergang");});
test("undergerninger -> undergerning", function() {deepEqual( Stem("undergerninger"), "undergerning");});
test("undergerningers -> undergerning", function() {deepEqual( Stem("undergerningers"), "undergerning");});
test("undergivet -> undergiv", function() {deepEqual( Stem("undergivet"), "undergiv");});
test("undergivne -> undergivn", function() {deepEqual( Stem("undergivne"), "undergivn");});
test("underhandle -> underhandl", function() {deepEqual( Stem("underhandle"), "underhandl");});
test("underhandlede -> underhandled", function() {deepEqual( Stem("underhandlede"), "underhandled");});
test("underhandler -> underhandl", function() {deepEqual( Stem("underhandler"), "underhandl");});
test("underhold -> underhold", function() {deepEqual( Stem("underhold"), "underhold");});
test("underhånden -> underhånd", function() {deepEqual( Stem("underhånden"), "underhånd");});
test("underkast -> underkast", function() {deepEqual( Stem("underkast"), "underkast");});
test("underkaste -> underkast", function() {deepEqual( Stem("underkaste"), "underkast");});
test("underkastede -> underkasted", function() {deepEqual( Stem("underkastede"), "underkasted");});
test("underkaster -> underkast", function() {deepEqual( Stem("underkaster"), "underkast");});
test("underklæder -> underklæd", function() {deepEqual( Stem("underklæder"), "underklæd");});
test("underkonanja -> underkonanja", function() {deepEqual( Stem("underkonanja"), "underkonanja");});
test("underku -> underku", function() {deepEqual( Stem("underku"), "underku");});
test("underkue -> underku", function() {deepEqual( Stem("underkue"), "underku");});
test("underkuer -> underku", function() {deepEqual( Stem("underkuer"), "underku");});
test("underkuet -> underku", function() {deepEqual( Stem("underkuet"), "underku");});
test("underlag -> underlag", function() {deepEqual( Stem("underlag"), "underlag");});
test("underlagde -> underlag", function() {deepEqual( Stem("underlagde"), "underlag");});
test("underlagt -> underlag", function() {deepEqual( Stem("underlagt"), "underlag");});
test("underlagte -> underlag", function() {deepEqual( Stem("underlagte"), "underlag");});
test("underlig -> under", function() {deepEqual( Stem("underlig"), "under");});
test("underligt -> under", function() {deepEqual( Stem("underligt"), "under");});
test("underlivet -> underliv", function() {deepEqual( Stem("underlivet"), "underliv");});
test("underlægge -> underlæg", function() {deepEqual( Stem("underlægge"), "underlæg");});
test("underlægger -> underlæg", function() {deepEqual( Stem("underlægger"), "underlæg");});
test("underne -> und", function() {deepEqual( Stem("underne"), "und");});
test("underneden -> underned", function() {deepEqual( Stem("underneden"), "underned");});
test("underordne -> underordn", function() {deepEqual( Stem("underordne"), "underordn");});
test("underordnede -> underordned", function() {deepEqual( Stem("underordnede"), "underordned");});
test("underordner -> underordn", function() {deepEqual( Stem("underordner"), "underordn");});
test("underretning -> underretning", function() {deepEqual( Stem("underretning"), "underretning");});
test("underrettet -> underret", function() {deepEqual( Stem("underrettet"), "underret");});
test("underskrevet -> underskrev", function() {deepEqual( Stem("underskrevet"), "underskrev");});
test("underskrift -> underskrift", function() {deepEqual( Stem("underskrift"), "underskrift");});
test("underste -> underst", function() {deepEqual( Stem("underste"), "underst");});
test("undersåtter -> undersåt", function() {deepEqual( Stem("undersåtter"), "undersåt");});
test("undersåtters -> undersåt", function() {deepEqual( Stem("undersåtters"), "undersåt");});
test("undersøg -> undersøg", function() {deepEqual( Stem("undersøg"), "undersøg");});
test("undersøge -> undersøg", function() {deepEqual( Stem("undersøge"), "undersøg");});
test("undersøgelse -> undersøg", function() {deepEqual( Stem("undersøgelse"), "undersøg");});
test("undersøgelsen -> undersøg", function() {deepEqual( Stem("undersøgelsen"), "undersøg");});
test("undersøger -> undersøg", function() {deepEqual( Stem("undersøger"), "undersøg");});
test("undersøgt -> undersøg", function() {deepEqual( Stem("undersøgt"), "undersøg");});
test("undersøgte -> undersøg", function() {deepEqual( Stem("undersøgte"), "undersøg");});
test("undertryk -> undertryk", function() {deepEqual( Stem("undertryk"), "undertryk");});
test("undertrykke -> undertryk", function() {deepEqual( Stem("undertrykke"), "undertryk");});
test("undertrykkelse -> undertryk", function() {deepEqual( Stem("undertrykkelse"), "undertryk");});
test("undertrykker -> undertryk", function() {deepEqual( Stem("undertrykker"), "undertryk");});
test("undertrykkere -> undertryk", function() {deepEqual( Stem("undertrykkere"), "undertryk");});
test("undertrykkeren -> undertryk", function() {deepEqual( Stem("undertrykkeren"), "undertryk");});
test("undertrykkerens -> undertryk", function() {deepEqual( Stem("undertrykkerens"), "undertryk");});
test("undertrykkeres -> undertryk", function() {deepEqual( Stem("undertrykkeres"), "undertryk");});
test("undertrykkes -> undertryk", function() {deepEqual( Stem("undertrykkes"), "undertryk");});
test("undertrykt -> undertryk", function() {deepEqual( Stem("undertrykt"), "undertryk");});
test("undertrykte -> undertryk", function() {deepEqual( Stem("undertrykte"), "undertryk");});
test("undertryktes -> undertryk", function() {deepEqual( Stem("undertryktes"), "undertryk");});
test("undertvang -> undertvang", function() {deepEqual( Stem("undertvang"), "undertvang");});
test("undertvunget -> undertvung", function() {deepEqual( Stem("undertvunget"), "undertvung");});
test("undertvungne -> undertvungn", function() {deepEqual( Stem("undertvungne"), "undertvungn");});
test("undervejs -> undervej", function() {deepEqual( Stem("undervejs"), "undervej");});
test("underverdenen -> underverden", function() {deepEqual( Stem("underverdenen"), "underverden");});
test("undervise -> undervis", function() {deepEqual( Stem("undervise"), "undervis");});
test("underviser -> undervis", function() {deepEqual( Stem("underviser"), "undervis");});
test("undervises -> undervis", function() {deepEqual( Stem("undervises"), "undervis");});
test("undervisning -> undervisning", function() {deepEqual( Stem("undervisning"), "undervisning");});
test("undervisningen -> undervisning", function() {deepEqual( Stem("undervisningen"), "undervisning");});
test("undervist -> undervist", function() {deepEqual( Stem("undervist"), "undervist");});
test("underviste -> undervist", function() {deepEqual( Stem("underviste"), "undervist");});
test("underværk -> underværk", function() {deepEqual( Stem("underværk"), "underværk");});
test("underværker -> underværk", function() {deepEqual( Stem("underværker"), "underværk");});
test("undevise -> undevis", function() {deepEqual( Stem("undevise"), "undevis");});
test("undeviste -> undevist", function() {deepEqual( Stem("undeviste"), "undevist");});
test("undfange -> undfang", function() {deepEqual( Stem("undfange"), "undfang");});
test("undfanged -> undfanged", function() {deepEqual( Stem("undfanged"), "undfanged");});
test("undfangede -> undfanged", function() {deepEqual( Stem("undfangede"), "undfanged");});
test("undfangelse -> undfang", function() {deepEqual( Stem("undfangelse"), "undfang");});
test("undfangen -> undfang", function() {deepEqual( Stem("undfangen"), "undfang");});
test("undfanger -> undfang", function() {deepEqual( Stem("undfanger"), "undfang");});
test("undfanget -> undfang", function() {deepEqual( Stem("undfanget"), "undfang");});
test("undfly -> undfly", function() {deepEqual( Stem("undfly"), "undfly");});
test("undflyede -> undflyed", function() {deepEqual( Stem("undflyede"), "undflyed");});
test("undflyet -> undfly", function() {deepEqual( Stem("undflyet"), "undfly");});
test("undflyr -> undflyr", function() {deepEqual( Stem("undflyr"), "undflyr");});
test("undgik -> undgik", function() {deepEqual( Stem("undgik"), "undgik");});
test("undgå -> undgå", function() {deepEqual( Stem("undgå"), "undgå");});
test("undgår -> undgår", function() {deepEqual( Stem("undgår"), "undgår");});
test("undgås -> undgå", function() {deepEqual( Stem("undgås"), "undgå");});
test("undgælde -> undgæld", function() {deepEqual( Stem("undgælde"), "undgæld");});
test("undkomme -> undkom", function() {deepEqual( Stem("undkomme"), "undkom");});
test("undkommer -> undkom", function() {deepEqual( Stem("undkommer"), "undkom");});
test("undlad -> undlad", function() {deepEqual( Stem("undlad"), "undlad");});
test("undlade -> undlad", function() {deepEqual( Stem("undlade"), "undlad");});
test("undlader -> undlad", function() {deepEqual( Stem("undlader"), "undlad");});
test("undlod -> undlod", function() {deepEqual( Stem("undlod"), "undlod");});
test("undre -> undr", function() {deepEqual( Stem("undre"), "undr");});
test("undrede -> undred", function() {deepEqual( Stem("undrede"), "undred");});
test("undren -> undr", function() {deepEqual( Stem("undren"), "undr");});
test("undrende -> undr", function() {deepEqual( Stem("undrende"), "undr");});
test("undrer -> undr", function() {deepEqual( Stem("undrer"), "undr");});
test("undres -> undr", function() {deepEqual( Stem("undres"), "undr");});
test("undse -> unds", function() {deepEqual( Stem("undse"), "unds");});
test("undseelse -> undse", function() {deepEqual( Stem("undseelse"), "undse");});
test("undser -> unds", function() {deepEqual( Stem("undser"), "unds");});
test("undskylde -> undskyld", function() {deepEqual( Stem("undskylde"), "undskyld");});
test("undskyldning -> undskyldning", function() {deepEqual( Stem("undskyldning"), "undskyldning");});
test("undskyldt -> undskyld", function() {deepEqual( Stem("undskyldt"), "undskyld");});
test("undslap -> undslap", function() {deepEqual( Stem("undslap"), "undslap");});
test("undslippe -> undslip", function() {deepEqual( Stem("undslippe"), "undslip");});
test("undslipper -> undslip", function() {deepEqual( Stem("undslipper"), "undslip");});
test("undslupne -> undslupn", function() {deepEqual( Stem("undslupne"), "undslupn");});
test("undsluppet -> undslup", function() {deepEqual( Stem("undsluppet"), "undslup");});
test("undslå -> undslå", function() {deepEqual( Stem("undslå"), "undslå");});
test("undså -> undså", function() {deepEqual( Stem("undså"), "undså");});
test("undtagelse -> undtag", function() {deepEqual( Stem("undtagelse"), "undtag");});
test("undtagen -> undtag", function() {deepEqual( Stem("undtagen"), "undtag");});
test("undtaget -> undtag", function() {deepEqual( Stem("undtaget"), "undtag");});
test("undtog -> undtog", function() {deepEqual( Stem("undtog"), "undtog");});
test("undveg -> undveg", function() {deepEqual( Stem("undveg"), "undveg");});
test("undviger -> undv", function() {deepEqual( Stem("undviger"), "undv");});
test("ung -> ung", function() {deepEqual( Stem("ung"), "ung");});
test("ungdom -> ungdom", function() {deepEqual( Stem("ungdom"), "ungdom");});
test("ungdommelige -> ungdom", function() {deepEqual( Stem("ungdommelige"), "ungdom");});
test("ungdommen -> ungdom", function() {deepEqual( Stem("ungdommen"), "ungdom");});
test("ungdommens -> ungdom", function() {deepEqual( Stem("ungdommens"), "ungdom");});
test("ungdoms -> ungdom", function() {deepEqual( Stem("ungdoms"), "ungdom");});
test("ungdomshustru -> ungdomshustru", function() {deepEqual( Stem("ungdomshustru"), "ungdomshustru");});
test("ungdomskraft -> ungdomskraft", function() {deepEqual( Stem("ungdomskraft"), "ungdomskraft");});
test("ungdomssynder -> ungdomssynd", function() {deepEqual( Stem("ungdomssynder"), "ungdomssynd");});
test("ungdomsviv -> ungdomsviv", function() {deepEqual( Stem("ungdomsviv"), "ungdomsviv");});
test("unge -> ung", function() {deepEqual( Stem("unge"), "ung");});
test("unger -> ung", function() {deepEqual( Stem("unger"), "ung");});
test("ungerne -> ung", function() {deepEqual( Stem("ungerne"), "ung");});
test("ungernes -> ung", function() {deepEqual( Stem("ungernes"), "ung");});
test("ungersvende -> ungersv", function() {deepEqual( Stem("ungersvende"), "ungersv");});
test("unges -> ung", function() {deepEqual( Stem("unges"), "ung");});
test("ungkvæg -> ungkvæg", function() {deepEqual( Stem("ungkvæg"), "ungkvæg");});
test("ungkvæget -> ungkvæg", function() {deepEqual( Stem("ungkvæget"), "ungkvæg");});
test("ungløve -> ungløv", function() {deepEqual( Stem("ungløve"), "ungløv");});
test("ungløven -> ungløv", function() {deepEqual( Stem("ungløven"), "ungløv");});
test("ungløver -> ungløv", function() {deepEqual( Stem("ungløver"), "ungløv");});
test("ungløvernes -> ungløv", function() {deepEqual( Stem("ungløvernes"), "ungløv");});
test("ungløvers -> ungløv", function() {deepEqual( Stem("ungløvers"), "ungløv");});
test("ungt -> ungt", function() {deepEqual( Stem("ungt"), "ungt");});
test("uniterne -> unit", function() {deepEqual( Stem("uniterne"), "unit");});
test("uniternes -> unit", function() {deepEqual( Stem("uniternes"), "unit");});
test("unni -> unni", function() {deepEqual( Stem("unni"), "unni");});
test("unyttig -> unyt", function() {deepEqual( Stem("unyttig"), "unyt");});
test("unyttige -> unyt", function() {deepEqual( Stem("unyttige"), "unyt");});
test("unyttigt -> unyt", function() {deepEqual( Stem("unyttigt"), "unyt");});
test("uomskåren -> uomskår", function() {deepEqual( Stem("uomskåren"), "uomskår");});
test("uomskåret -> uomskår", function() {deepEqual( Stem("uomskåret"), "uomskår");});
test("uomskårne -> uomskårn", function() {deepEqual( Stem("uomskårne"), "uomskårn");});
test("uomskårnes -> uomskårn", function() {deepEqual( Stem("uomskårnes"), "uomskårn");});
test("uopholdelig -> uophold", function() {deepEqual( Stem("uopholdelig"), "uophold");});
test("uophørligt -> uophør", function() {deepEqual( Stem("uophørligt"), "uophør");});
test("uopløseligt -> uopløs", function() {deepEqual( Stem("uopløseligt"), "uopløs");});
test("uorden -> uord", function() {deepEqual( Stem("uorden"), "uord");});
test("uoverlagt -> uoverlag", function() {deepEqual( Stem("uoverlagt"), "uoverlag");});
test("uoverlagte -> uoverlag", function() {deepEqual( Stem("uoverlagte"), "uoverlag");});
test("uoverskridelig -> uoverskrid", function() {deepEqual( Stem("uoverskridelig"), "uoverskrid");});
test("up -> up", function() {deepEqual( Stem("up"), "up");});
test("upartisk -> upartisk", function() {deepEqual( Stem("upartisk"), "upartisk");});
test("uplettede -> upletted", function() {deepEqual( Stem("uplettede"), "upletted");});
test("uplettet -> uplet", function() {deepEqual( Stem("uplettet"), "uplet");});
test("upriglighed -> uprig", function() {deepEqual( Stem("upriglighed"), "uprig");});
test("ur -> ur", function() {deepEqual( Stem("ur"), "ur");});
test("uransagelige -> uransag", function() {deepEqual( Stem("uransagelige"), "uransag");});
test("urbanus -> urbanus", function() {deepEqual( Stem("urbanus"), "urbanus");});
test("urd -> urd", function() {deepEqual( Stem("urd"), "urd");});
test("uredelig -> ured", function() {deepEqual( Stem("uredelig"), "ured");});
test("uredelige -> ured", function() {deepEqual( Stem("uredelige"), "ured");});
test("uredelighed -> ured", function() {deepEqual( Stem("uredelighed"), "ured");});
test("uredeligt -> ured", function() {deepEqual( Stem("uredeligt"), "ured");});
test("uren -> uren", function() {deepEqual( Stem("uren"), "uren");});
test("urenbed -> urenbed", function() {deepEqual( Stem("urenbed"), "urenbed");});
test("urene -> uren", function() {deepEqual( Stem("urene"), "uren");});
test("urenhed -> uren", function() {deepEqual( Stem("urenhed"), "uren");});
test("urenheden -> uren", function() {deepEqual( Stem("urenheden"), "uren");});
test("urenhedens -> uren", function() {deepEqual( Stem("urenhedens"), "uren");});
test("urenheder -> uren", function() {deepEqual( Stem("urenheder"), "uren");});
test("urenheds -> uren", function() {deepEqual( Stem("urenheds"), "uren");});
test("urent -> urent", function() {deepEqual( Stem("urent"), "urent");});
test("uret -> uret", function() {deepEqual( Stem("uret"), "uret");});
test("uretfærdig -> uretfærd", function() {deepEqual( Stem("uretfærdig"), "uretfærd");});
test("uretfærdige -> uretfærd", function() {deepEqual( Stem("uretfærdige"), "uretfærd");});
test("uretfærdighed -> uretfærd", function() {deepEqual( Stem("uretfærdighed"), "uretfærd");});
test("uretfærdigheden -> uretfærd", function() {deepEqual( Stem("uretfærdigheden"), "uretfærd");});
test("uretfærdighedens -> uretfærd", function() {deepEqual( Stem("uretfærdighedens"), "uretfærd");});
test("uretfærdigheder -> uretfærd", function() {deepEqual( Stem("uretfærdigheder"), "uretfærd");});
test("uretfærdigheds -> uretfærd", function() {deepEqual( Stem("uretfærdigheds"), "uretfærd");});
test("uretfærdigt -> uretfærd", function() {deepEqual( Stem("uretfærdigt"), "uretfærd");});
test("urette -> uret", function() {deepEqual( Stem("urette"), "uret");});
test("uretten -> uret", function() {deepEqual( Stem("uretten"), "uret");});
test("urettens -> uret", function() {deepEqual( Stem("urettens"), "uret");});
test("urgammel -> urgammel", function() {deepEqual( Stem("urgammel"), "urgammel");});
test("uri -> uri", function() {deepEqual( Stem("uri"), "uri");});
test("urias -> uria", function() {deepEqual( Stem("urias"), "uria");});
test("uriel -> uriel", function() {deepEqual( Stem("uriel"), "uriel");});
test("urija -> urija", function() {deepEqual( Stem("urija"), "urija");});
test("urijas -> urija", function() {deepEqual( Stem("urijas"), "urija");});
test("urim -> urim", function() {deepEqual( Stem("urim"), "urim");});
test("urimelige -> urim", function() {deepEqual( Stem("urimelige"), "urim");});
test("urimeligt -> urim", function() {deepEqual( Stem("urimeligt"), "urim");});
test("urims -> urim", function() {deepEqual( Stem("urims"), "urim");});
test("uris -> uris", function() {deepEqual( Stem("uris"), "uris");});
test("uro -> uro", function() {deepEqual( Stem("uro"), "uro");});
test("urokkelig -> urok", function() {deepEqual( Stem("urokkelig"), "urok");});
test("urokkelige -> urok", function() {deepEqual( Stem("urokkelige"), "urok");});
test("urokket -> urok", function() {deepEqual( Stem("urokket"), "urok");});
test("urokser -> uroks", function() {deepEqual( Stem("urokser"), "uroks");});
test("urolig -> uro", function() {deepEqual( Stem("urolig"), "uro");});
test("uroligt -> uro", function() {deepEqual( Stem("uroligt"), "uro");});
test("urs -> urs", function() {deepEqual( Stem("urs"), "urs");});
test("urt -> urt", function() {deepEqual( Stem("urt"), "urt");});
test("urtehave -> urtehav", function() {deepEqual( Stem("urtehave"), "urtehav");});
test("urter -> urt", function() {deepEqual( Stem("urter"), "urt");});
test("urterne -> urt", function() {deepEqual( Stem("urterne"), "urt");});
test("urtid -> urtid", function() {deepEqual( Stem("urtid"), "urtid");});
test("urtidens -> urtid", function() {deepEqual( Stem("urtidens"), "urtid");});
test("urtids -> urtid", function() {deepEqual( Stem("urtids"), "urtid");});
test("uruja -> uruja", function() {deepEqual( Stem("uruja"), "uruja");});
test("uråd -> uråd", function() {deepEqual( Stem("uråd"), "uråd");});
test("urørt -> urørt", function() {deepEqual( Stem("urørt"), "urørt");});
test("urørte -> urørt", function() {deepEqual( Stem("urørte"), "urørt");});
test("uset -> uset", function() {deepEqual( Stem("uset"), "uset");});
test("usikre -> usikr", function() {deepEqual( Stem("usikre"), "usikr");});
test("usj -> usj", function() {deepEqual( Stem("usj"), "usj");});
test("uskadt -> uskad", function() {deepEqual( Stem("uskadt"), "uskad");});
test("uskadte -> uskad", function() {deepEqual( Stem("uskadte"), "uskad");});
test("uskikkelige -> uskik", function() {deepEqual( Stem("uskikkelige"), "uskik");});
test("uskikkeligt -> uskik", function() {deepEqual( Stem("uskikkeligt"), "uskik");});
test("uskrømtede -> uskrømted", function() {deepEqual( Stem("uskrømtede"), "uskrømted");});
test("uskrømtet -> uskrømt", function() {deepEqual( Stem("uskrømtet"), "uskrømt");});
test("uskyld -> uskyld", function() {deepEqual( Stem("uskyld"), "uskyld");});
test("uskyldig -> uskyld", function() {deepEqual( Stem("uskyldig"), "uskyld");});
test("uskyldige -> uskyld", function() {deepEqual( Stem("uskyldige"), "uskyld");});
test("uskyldiges -> uskyld", function() {deepEqual( Stem("uskyldiges"), "uskyld");});
test("uskyldigt -> uskyld", function() {deepEqual( Stem("uskyldigt"), "uskyld");});
test("usle -> usl", function() {deepEqual( Stem("usle"), "usl");});
test("usling -> usling", function() {deepEqual( Stem("usling"), "usling");});
test("uslinger -> usling", function() {deepEqual( Stem("uslinger"), "usling");});
test("uslukkelig -> usluk", function() {deepEqual( Stem("uslukkelig"), "usluk");});
test("uslukket -> usluk", function() {deepEqual( Stem("uslukket"), "usluk");});
test("usporlige -> uspor", function() {deepEqual( Stem("usporlige"), "uspor");});
test("ussel -> ussel", function() {deepEqual( Stem("ussel"), "ussel");});
test("usseligt -> uss", function() {deepEqual( Stem("usseligt"), "uss");});
test("usselt -> usselt", function() {deepEqual( Stem("usselt"), "usselt");});
test("ustadig -> ustad", function() {deepEqual( Stem("ustadig"), "ustad");});
test("ustandselig -> ustands", function() {deepEqual( Stem("ustandselig"), "ustands");});
test("ustandseligt -> ustands", function() {deepEqual( Stem("ustandseligt"), "ustands");});
test("ustrafelige -> ustraf", function() {deepEqual( Stem("ustrafelige"), "ustraf");});
test("ustraffelig -> ustraf", function() {deepEqual( Stem("ustraffelig"), "ustraf");});
test("ustraffelige -> ustraf", function() {deepEqual( Stem("ustraffelige"), "ustraf");});
test("ustraffet -> ustraf", function() {deepEqual( Stem("ustraffet"), "ustraf");});
test("ustyrlig -> ustyr", function() {deepEqual( Stem("ustyrlig"), "ustyr");});
test("ustyrlige -> ustyr", function() {deepEqual( Stem("ustyrlige"), "ustyr");});
test("usvigeligt -> usvig", function() {deepEqual( Stem("usvigeligt"), "usvig");});
test("usyet -> usy", function() {deepEqual( Stem("usyet"), "usy");});
test("usynlig -> usyn", function() {deepEqual( Stem("usynlig"), "usyn");});
test("usynlige -> usyn", function() {deepEqual( Stem("usynlige"), "usyn");});
test("usyrede -> usyred", function() {deepEqual( Stem("usyrede"), "usyred");});
test("usyret -> usyr", function() {deepEqual( Stem("usyret"), "usyr");});
test("usædvanlig -> usædvan", function() {deepEqual( Stem("usædvanlig"), "usædvan");});
test("usædvanlige -> usædvan", function() {deepEqual( Stem("usædvanlige"), "usædvan");});
test("usædvanligt -> usædvan", function() {deepEqual( Stem("usædvanligt"), "usædvan");});
test("usømmelige -> usøm", function() {deepEqual( Stem("usømmelige"), "usøm");});
test("usømmeligt -> usøm", function() {deepEqual( Stem("usømmeligt"), "usøm");});
test("utaj -> utaj", function() {deepEqual( Stem("utaj"), "utaj");});
test("utaknemmelige -> utaknem", function() {deepEqual( Stem("utaknemmelige"), "utaknem");});
test("utallige -> utal", function() {deepEqual( Stem("utallige"), "utal");});
test("utdført -> utdført", function() {deepEqual( Stem("utdført"), "utdført");});
test("utdrakt -> utdrak", function() {deepEqual( Stem("utdrakt"), "utdrak");});
test("uterlige -> uter", function() {deepEqual( Stem("uterlige"), "uter");});
test("uterlighed -> uter", function() {deepEqual( Stem("uterlighed"), "uter");});
test("uterligheden -> uter", function() {deepEqual( Stem("uterligheden"), "uter");});
test("uterligheder -> uter", function() {deepEqual( Stem("uterligheder"), "uter");});
test("utide -> utid", function() {deepEqual( Stem("utide"), "utid");});
test("utidige -> utid", function() {deepEqual( Stem("utidige"), "utid");});
test("utidigt -> utid", function() {deepEqual( Stem("utidigt"), "utid");});
test("utilbørlig -> utilbør", function() {deepEqual( Stem("utilbørlig"), "utilbør");});
test("utilbørlige -> utilbør", function() {deepEqual( Stem("utilbørlige"), "utilbør");});
test("utilbørligt -> utilbør", function() {deepEqual( Stem("utilbørligt"), "utilbør");});
test("utildækket -> utildæk", function() {deepEqual( Stem("utildækket"), "utildæk");});
test("utilgængelig -> utilgæng", function() {deepEqual( Stem("utilgængelig"), "utilgæng");});
test("utilgængeligt -> utilgæng", function() {deepEqual( Stem("utilgængeligt"), "utilgæng");});
test("utilhugne -> utilhugn", function() {deepEqual( Stem("utilhugne"), "utilhugn");});
test("utoede -> utoed", function() {deepEqual( Stem("utoede"), "utoed");});
test("utro -> utro", function() {deepEqual( Stem("utro"), "utro");});
test("utrolige -> utro", function() {deepEqual( Stem("utrolige"), "utro");});
test("utroligt -> utro", function() {deepEqual( Stem("utroligt"), "utro");});
test("utroskab -> utroskab", function() {deepEqual( Stem("utroskab"), "utroskab");});
test("utroskabs -> utroskab", function() {deepEqual( Stem("utroskabs"), "utroskab");});
test("utrættet -> utræt", function() {deepEqual( Stem("utrættet"), "utræt");});
test("utrøstede -> utrøsted", function() {deepEqual( Stem("utrøstede"), "utrøsted");});
test("utugt -> utug", function() {deepEqual( Stem("utugt"), "utug");});
test("utugtig -> utug", function() {deepEqual( Stem("utugtig"), "utug");});
test("utugtige -> utug", function() {deepEqual( Stem("utugtige"), "utug");});
test("utugts -> utug", function() {deepEqual( Stem("utugts"), "utug");});
test("utydelig -> utyd", function() {deepEqual( Stem("utydelig"), "utyd");});
test("utålmodig -> utålmod", function() {deepEqual( Stem("utålmodig"), "utålmod");});
test("utålmodigt -> utålmod", function() {deepEqual( Stem("utålmodigt"), "utålmod");});
test("utæmmet -> utæm", function() {deepEqual( Stem("utæmmet"), "utæm");});
test("uudsigelig -> uudsig", function() {deepEqual( Stem("uudsigelig"), "uudsig");});
test("uudsigelige -> uudsig", function() {deepEqual( Stem("uudsigelige"), "uudsig");});
test("uudsletteligt -> uudslet", function() {deepEqual( Stem("uudsletteligt"), "uudslet");});
test("uudslukkelige -> uudsluk", function() {deepEqual( Stem("uudslukkelige"), "uudsluk");});
test("uudviklet -> uudvikl", function() {deepEqual( Stem("uudviklet"), "uudvikl");});
test("uvalket -> uvalk", function() {deepEqual( Stem("uvalket"), "uvalk");});
test("uvan -> uvan", function() {deepEqual( Stem("uvan"), "uvan");});
test("uvedkommende -> uvedkom", function() {deepEqual( Stem("uvedkommende"), "uvedkom");});
test("uvejet -> uvej", function() {deepEqual( Stem("uvejet"), "uvej");});
test("uvejr -> uvejr", function() {deepEqual( Stem("uvejr"), "uvejr");});
test("uvejret -> uvejr", function() {deepEqual( Stem("uvejret"), "uvejr");});
test("uven -> uven", function() {deepEqual( Stem("uven"), "uven");});
test("uvenner -> uven", function() {deepEqual( Stem("uvenner"), "uven");});
test("uvenners -> uven", function() {deepEqual( Stem("uvenners"), "uven");});
test("uvens -> uven", function() {deepEqual( Stem("uvens"), "uven");});
test("uventet -> uvent", function() {deepEqual( Stem("uventet"), "uvent");});
test("uvidende -> uvid", function() {deepEqual( Stem("uvidende"), "uvid");});
test("uvidenhed -> uviden", function() {deepEqual( Stem("uvidenhed"), "uviden");});
test("uvildige -> uvild", function() {deepEqual( Stem("uvildige"), "uvild");});
test("uvilje -> uvilj", function() {deepEqual( Stem("uvilje"), "uvilj");});
test("uvillig -> uvil", function() {deepEqual( Stem("uvillig"), "uvil");});
test("uvirksomme -> uvirksom", function() {deepEqual( Stem("uvirksomme"), "uvirksom");});
test("uvise -> uvis", function() {deepEqual( Stem("uvise"), "uvis");});
test("uvished -> uvis", function() {deepEqual( Stem("uvished"), "uvis");});
test("uvisnelig -> uvisn", function() {deepEqual( Stem("uvisnelig"), "uvisn");});
test("uvisnelige -> uvisn", function() {deepEqual( Stem("uvisnelige"), "uvisn");});
test("uvisse -> uvis", function() {deepEqual( Stem("uvisse"), "uvis");});
test("uvorn -> uvorn", function() {deepEqual( Stem("uvorn"), "uvorn");});
test("uværdige -> uværd", function() {deepEqual( Stem("uværdige"), "uværd");});
test("uværdigt -> uværd", function() {deepEqual( Stem("uværdigt"), "uværd");});
test("uz -> uz", function() {deepEqual( Stem("uz"), "uz");});
test("uzaj -> uzaj", function() {deepEqual( Stem("uzaj"), "uzaj");});
test("uzajs -> uzaj", function() {deepEqual( Stem("uzajs"), "uzaj");});
test("uzal -> uzal", function() {deepEqual( Stem("uzal"), "uzal");});
test("uzza -> uzza", function() {deepEqual( Stem("uzza"), "uzza");});
test("uzzas -> uzza", function() {deepEqual( Stem("uzzas"), "uzza");});
test("uzzen -> uzz", function() {deepEqual( Stem("uzzen"), "uzz");});
test("uzzi -> uzzi", function() {deepEqual( Stem("uzzi"), "uzzi");});
test("uzziel -> uzziel", function() {deepEqual( Stem("uzziel"), "uzziel");});
test("uzzieliterne -> uzzielit", function() {deepEqual( Stem("uzzieliterne"), "uzzielit");});
test("uzzieliternes -> uzzielit", function() {deepEqual( Stem("uzzieliternes"), "uzzielit");});
test("uzziels -> uzziel", function() {deepEqual( Stem("uzziels"), "uzziel");});
test("uzzija -> uzzija", function() {deepEqual( Stem("uzzija"), "uzzija");});
test("uzzijas -> uzzija", function() {deepEqual( Stem("uzzijas"), "uzzija");});
test("uzzis -> uzzis", function() {deepEqual( Stem("uzzis"), "uzzis");});
test("uædle -> uædl", function() {deepEqual( Stem("uædle"), "uædl");});
test("uægte -> uægt", function() {deepEqual( Stem("uægte"), "uægt");});
test("uænset -> uæns", function() {deepEqual( Stem("uænset"), "uæns");});
test("v -> v", function() {deepEqual( Stem("v"), "v");});
test("vad -> vad", function() {deepEqual( Stem("vad"), "vad");});
test("vade -> vad", function() {deepEqual( Stem("vade"), "vad");});
test("vaded -> vaded", function() {deepEqual( Stem("vaded"), "vaded");});
test("vadested -> vadested", function() {deepEqual( Stem("vadested"), "vadested");});
test("vadesteder -> vadested", function() {deepEqual( Stem("vadesteder"), "vadested");});
test("vadestederne -> vadested", function() {deepEqual( Stem("vadestederne"), "vadested");});
test("vadestedet -> vadested", function() {deepEqual( Stem("vadestedet"), "vadested");});
test("vagt -> vagt", function() {deepEqual( Stem("vagt"), "vagt");});
test("vagtafdelingen -> vagtafdeling", function() {deepEqual( Stem("vagtafdelingen"), "vagtafdeling");});
test("vagten -> vagt", function() {deepEqual( Stem("vagten"), "vagt");});
test("vagter -> vagt", function() {deepEqual( Stem("vagter"), "vagt");});
test("vagterne -> vagt", function() {deepEqual( Stem("vagterne"), "vagt");});
test("vagtforgården -> vagtforgård", function() {deepEqual( Stem("vagtforgården"), "vagtforgård");});
test("vagthavende -> vagthav", function() {deepEqual( Stem("vagthavende"), "vagthav");});
test("vagtler -> vagtl", function() {deepEqual( Stem("vagtler"), "vagtl");});
test("vagtlerne -> vagtl", function() {deepEqual( Stem("vagtlerne"), "vagtl");});
test("vagtpost -> vagtpost", function() {deepEqual( Stem("vagtpost"), "vagtpost");});
test("vagtposter -> vagtpost", function() {deepEqual( Stem("vagtposter"), "vagtpost");});
test("vagtposterne -> vagtpost", function() {deepEqual( Stem("vagtposterne"), "vagtpost");});
test("vagtskifter -> vagtskift", function() {deepEqual( Stem("vagtskifter"), "vagtskift");});
test("vagtskur -> vagtskur", function() {deepEqual( Stem("vagtskur"), "vagtskur");});
test("vagtsted -> vagtsted", function() {deepEqual( Stem("vagtsted"), "vagtsted");});
test("vagtstuen -> vagtstu", function() {deepEqual( Stem("vagtstuen"), "vagtstu");});
test("vagttjeneste -> vagttjenest", function() {deepEqual( Stem("vagttjeneste"), "vagttjenest");});
test("vagttjenesten -> vagttjenest", function() {deepEqual( Stem("vagttjenesten"), "vagttjenest");});
test("vagttårn -> vagttårn", function() {deepEqual( Stem("vagttårn"), "vagttårn");});
test("vagttårne -> vagttårn", function() {deepEqual( Stem("vagttårne"), "vagttårn");});
test("vagttårnene -> vagttårn", function() {deepEqual( Stem("vagttårnene"), "vagttårn");});
test("vaheb -> vaheb", function() {deepEqual( Stem("vaheb"), "vaheb");});
test("vajezata -> vajezata", function() {deepEqual( Stem("vajezata"), "vajezata");});
test("vakelmodig -> vakelmod", function() {deepEqual( Stem("vakelmodig"), "vakelmod");});
test("vakle -> vakl", function() {deepEqual( Stem("vakle"), "vakl");});
test("vakled -> vakled", function() {deepEqual( Stem("vakled"), "vakled");});
test("vaklede -> vakled", function() {deepEqual( Stem("vaklede"), "vakled");});
test("vaklende -> vakl", function() {deepEqual( Stem("vaklende"), "vakl");});
test("vakler -> vakl", function() {deepEqual( Stem("vakler"), "vakl");});
test("vakt -> vakt", function() {deepEqual( Stem("vakt"), "vakt");});
test("vakte -> vakt", function() {deepEqual( Stem("vakte"), "vakt");});
test("vaktes -> vakt", function() {deepEqual( Stem("vaktes"), "vakt");});
test("valen -> val", function() {deepEqual( Stem("valen"), "val");});
test("valfartsvej -> valfartsvej", function() {deepEqual( Stem("valfartsvej"), "valfartsvej");});
test("valg -> valg", function() {deepEqual( Stem("valg"), "valg");});
test("valgt -> valg", function() {deepEqual( Stem("valgt"), "valg");});
test("valgte -> valg", function() {deepEqual( Stem("valgte"), "valg");});
test("vanartede -> vanarted", function() {deepEqual( Stem("vanartede"), "vanarted");});
test("vanartet -> vanart", function() {deepEqual( Stem("vanartet"), "vanart");});
test("vanartige -> vanart", function() {deepEqual( Stem("vanartige"), "vanart");});
test("vand -> vand", function() {deepEqual( Stem("vand"), "vand");});
test("vandbadet -> vandbad", function() {deepEqual( Stem("vandbadet"), "vandbad");});
test("vandbyen -> vandby", function() {deepEqual( Stem("vandbyen"), "vandby");});
test("vandbække -> vandbæk", function() {deepEqual( Stem("vandbække"), "vandbæk");});
test("vandbækken -> vandbæk", function() {deepEqual( Stem("vandbækken"), "vandbæk");});
test("vandbærere -> vandbær", function() {deepEqual( Stem("vandbærere"), "vandbær");});
test("vanddammen -> vanddam", function() {deepEqual( Stem("vanddammen"), "vanddam");});
test("vanddrag -> vanddrag", function() {deepEqual( Stem("vanddrag"), "vanddrag");});
test("vande -> vand", function() {deepEqual( Stem("vande"), "vand");});
test("vanded -> vanded", function() {deepEqual( Stem("vanded"), "vanded");});
test("vandede -> vanded", function() {deepEqual( Stem("vandede"), "vanded");});
test("vandel -> vandel", function() {deepEqual( Stem("vandel"), "vandel");});
test("vandene -> vand", function() {deepEqual( Stem("vandene"), "vand");});
test("vandenes -> vand", function() {deepEqual( Stem("vandenes"), "vand");});
test("vander -> vand", function() {deepEqual( Stem("vander"), "vand");});
test("vandes -> vand", function() {deepEqual( Stem("vandes"), "vand");});
test("vandet -> vand", function() {deepEqual( Stem("vandet"), "vand");});
test("vandets -> vand", function() {deepEqual( Stem("vandets"), "vand");});
test("vandfalds -> vandfald", function() {deepEqual( Stem("vandfalds"), "vandfald");});
test("vandfladen -> vandflad", function() {deepEqual( Stem("vandfladen"), "vandflad");});
test("vandflod -> vandflod", function() {deepEqual( Stem("vandflod"), "vandflod");});
test("vandfloden -> vandflod", function() {deepEqual( Stem("vandfloden"), "vandflod");});
test("vandfyldte -> vandfyld", function() {deepEqual( Stem("vandfyldte"), "vandfyld");});
test("vandhuller -> vandhul", function() {deepEqual( Stem("vandhuller"), "vandhul");});
test("vandingssted -> vandingssted", function() {deepEqual( Stem("vandingssted"), "vandingssted");});
test("vandingssteder -> vandingssted", function() {deepEqual( Stem("vandingssteder"), "vandingssted");});
test("vandkanten -> vandkant", function() {deepEqual( Stem("vandkanten"), "vandkant");});
test("vandkar -> vandkar", function() {deepEqual( Stem("vandkar"), "vandkar");});
test("vandkarrene -> vandkar", function() {deepEqual( Stem("vandkarrene"), "vandkar");});
test("vandkilde -> vandkild", function() {deepEqual( Stem("vandkilde"), "vandkild");});
test("vandkilden -> vandkild", function() {deepEqual( Stem("vandkilden"), "vandkild");});
test("vandkilder -> vandkild", function() {deepEqual( Stem("vandkilder"), "vandkild");});
test("vandkilderne -> vandkild", function() {deepEqual( Stem("vandkilderne"), "vandkild");});
test("vandkrukke -> vandkruk", function() {deepEqual( Stem("vandkrukke"), "vandkruk");});
test("vandkrukken -> vandkruk", function() {deepEqual( Stem("vandkrukken"), "vandkruk");});
test("vandkumme -> vandkum", function() {deepEqual( Stem("vandkumme"), "vandkum");});
test("vandkummen -> vandkum", function() {deepEqual( Stem("vandkummen"), "vandkum");});
test("vandledning -> vandledning", function() {deepEqual( Stem("vandledning"), "vandledning");});
test("vandledningen -> vandledning", function() {deepEqual( Stem("vandledningen"), "vandledning");});
test("vandløb -> vandløb", function() {deepEqual( Stem("vandløb"), "vandløb");});
test("vandløse -> vandløs", function() {deepEqual( Stem("vandløse"), "vandløs");});
test("vandløst -> vandløs", function() {deepEqual( Stem("vandløst"), "vandløs");});
test("vandmasser -> vandmas", function() {deepEqual( Stem("vandmasser"), "vandmas");});
test("vandmelonerne -> vandmelon", function() {deepEqual( Stem("vandmelonerne"), "vandmelon");});
test("vandporten -> vandport", function() {deepEqual( Stem("vandporten"), "vandport");});
test("vandre -> vandr", function() {deepEqual( Stem("vandre"), "vandr");});
test("vandred -> vandred", function() {deepEqual( Stem("vandred"), "vandred");});
test("vandrede -> vandred", function() {deepEqual( Stem("vandrede"), "vandred");});
test("vandrende -> vandr", function() {deepEqual( Stem("vandrende"), "vandr");});
test("vandrenderne -> vandrend", function() {deepEqual( Stem("vandrenderne"), "vandrend");});
test("vandrer -> vandr", function() {deepEqual( Stem("vandrer"), "vandr");});
test("vandret -> vandr", function() {deepEqual( Stem("vandret"), "vandr");});
test("vandrig -> vandr", function() {deepEqual( Stem("vandrig"), "vandr");});
test("vandring -> vandring", function() {deepEqual( Stem("vandring"), "vandring");});
test("vandringen -> vandring", function() {deepEqual( Stem("vandringen"), "vandring");});
test("vandrings -> vandring", function() {deepEqual( Stem("vandrings"), "vandring");});
test("vandringsmand -> vandringsmand", function() {deepEqual( Stem("vandringsmand"), "vandringsmand");});
test("vandringsmænd -> vandringsmænd", function() {deepEqual( Stem("vandringsmænd"), "vandringsmænd");});
test("vandringsmændenes -> vandringsmænd", function() {deepEqual( Stem("vandringsmændenes"), "vandringsmænd");});
test("vands -> vand", function() {deepEqual( Stem("vands"), "vand");});
test("vandsamlinger -> vandsamling", function() {deepEqual( Stem("vandsamlinger"), "vandsamling");});
test("vandskyl -> vandskyl", function() {deepEqual( Stem("vandskyl"), "vandskyl");});
test("vandspejlet -> vandspejl", function() {deepEqual( Stem("vandspejlet"), "vandspejl");});
test("vandstrømme -> vandstrøm", function() {deepEqual( Stem("vandstrømme"), "vandstrøm");});
test("vandsæk -> vandsæk", function() {deepEqual( Stem("vandsæk"), "vandsæk");});
test("vandsække -> vandsæk", function() {deepEqual( Stem("vandsække"), "vandsæk");});
test("vandt -> vand", function() {deepEqual( Stem("vandt"), "vand");});
test("vandtrugene -> vandtrug", function() {deepEqual( Stem("vandtrugene"), "vandtrug");});
test("vandved -> vandved", function() {deepEqual( Stem("vandved"), "vandved");});
test("vane -> van", function() {deepEqual( Stem("vane"), "van");});
test("vanfør -> vanfør", function() {deepEqual( Stem("vanfør"), "vanfør");});
test("vanføre -> vanfør", function() {deepEqual( Stem("vanføre"), "vanfør");});
test("vang -> vang", function() {deepEqual( Stem("vang"), "vang");});
test("vange -> vang", function() {deepEqual( Stem("vange"), "vang");});
test("vanheld -> vanheld", function() {deepEqual( Stem("vanheld"), "vanheld");});
test("vanheldets -> vanheld", function() {deepEqual( Stem("vanheldets"), "vanheld");});
test("vanhelds -> vanheld", function() {deepEqual( Stem("vanhelds"), "vanheld");});
test("vanhellig -> vanhel", function() {deepEqual( Stem("vanhellig"), "vanhel");});
test("vanhellige -> vanhel", function() {deepEqual( Stem("vanhellige"), "vanhel");});
test("vanhelligede -> vanhelliged", function() {deepEqual( Stem("vanhelligede"), "vanhelliged");});
test("vanhelligedes -> vanhelliged", function() {deepEqual( Stem("vanhelligedes"), "vanhelliged");});
test("vanhelligelse -> vanhellig", function() {deepEqual( Stem("vanhelligelse"), "vanhellig");});
test("vanhelliger -> vanhel", function() {deepEqual( Stem("vanhelliger"), "vanhel");});
test("vanhelliges -> vanhel", function() {deepEqual( Stem("vanhelliges"), "vanhel");});
test("vanhelliget -> vanhel", function() {deepEqual( Stem("vanhelliget"), "vanhel");});
test("vanhelligt -> vanhel", function() {deepEqual( Stem("vanhelligt"), "vanhel");});
test("vanja -> vanja", function() {deepEqual( Stem("vanja"), "vanja");});
test("vanke -> vank", function() {deepEqual( Stem("vanke"), "vank");});
test("vanked -> vanked", function() {deepEqual( Stem("vanked"), "vanked");});
test("vankende -> vank", function() {deepEqual( Stem("vankende"), "vank");});
test("vanker -> vank", function() {deepEqual( Stem("vanker"), "vank");});
test("vankundige -> vankund", function() {deepEqual( Stem("vankundige"), "vankund");});
test("vankundighed -> vankund", function() {deepEqual( Stem("vankundighed"), "vankund");});
test("vankundighedens -> vankund", function() {deepEqual( Stem("vankundighedens"), "vankund");});
test("vanlig -> van", function() {deepEqual( Stem("vanlig"), "van");});
test("vanligt -> van", function() {deepEqual( Stem("vanligt"), "van");});
test("vanry -> vanry", function() {deepEqual( Stem("vanry"), "vanry");});
test("vanrøgtede -> vanrøgted", function() {deepEqual( Stem("vanrøgtede"), "vanrøgted");});
test("vanrøgtet -> vanrøg", function() {deepEqual( Stem("vanrøgtet"), "vanrøg");});
test("vansdsmægtende -> vansdsmæg", function() {deepEqual( Stem("vansdsmægtende"), "vansdsmæg");});
test("vansiret -> vansir", function() {deepEqual( Stem("vansiret"), "vansir");});
test("vanskabes -> vanskab", function() {deepEqual( Stem("vanskabes"), "vanskab");});
test("vanskelig -> vansk", function() {deepEqual( Stem("vanskelig"), "vansk");});
test("vanskelige -> vansk", function() {deepEqual( Stem("vanskelige"), "vansk");});
test("vanskeligt -> vansk", function() {deepEqual( Stem("vanskeligt"), "vansk");});
test("vanslægted -> vanslægted", function() {deepEqual( Stem("vanslægted"), "vanslægted");});
test("vansmægte -> vansmæg", function() {deepEqual( Stem("vansmægte"), "vansmæg");});
test("vansmægted -> vansmægted", function() {deepEqual( Stem("vansmægted"), "vansmægted");});
test("vansmægtede -> vansmægted", function() {deepEqual( Stem("vansmægtede"), "vansmægted");});
test("vansmægtende -> vansmæg", function() {deepEqual( Stem("vansmægtende"), "vansmæg");});
test("vansmægter -> vansmæg", function() {deepEqual( Stem("vansmægter"), "vansmæg");});
test("vansmægtet -> vansmæg", function() {deepEqual( Stem("vansmægtet"), "vansmæg");});
test("vante -> vant", function() {deepEqual( Stem("vante"), "vant");});
test("vantro -> vantro", function() {deepEqual( Stem("vantro"), "vantro");});
test("vantroen -> vantro", function() {deepEqual( Stem("vantroen"), "vantro");});
test("vantros -> vantro", function() {deepEqual( Stem("vantros"), "vantro");});
test("vanvare -> vanvar", function() {deepEqual( Stem("vanvare"), "vanvar");});
test("vanvid -> vanvid", function() {deepEqual( Stem("vanvid"), "vanvid");});
test("vanvittig -> vanvit", function() {deepEqual( Stem("vanvittig"), "vanvit");});
test("vanær -> vanær", function() {deepEqual( Stem("vanær"), "vanær");});
test("vanære -> vanær", function() {deepEqual( Stem("vanære"), "vanær");});
test("vanæred -> vanæred", function() {deepEqual( Stem("vanæred"), "vanæred");});
test("vanærede -> vanæred", function() {deepEqual( Stem("vanærede"), "vanæred");});
test("vanæredes -> vanæred", function() {deepEqual( Stem("vanæredes"), "vanæred");});
test("vanæren -> vanær", function() {deepEqual( Stem("vanæren"), "vanær");});
test("vanærende -> vanær", function() {deepEqual( Stem("vanærende"), "vanær");});
test("vanærer -> vanær", function() {deepEqual( Stem("vanærer"), "vanær");});
test("vanæres -> vanær", function() {deepEqual( Stem("vanæres"), "vanær");});
test("vanæret -> vanær", function() {deepEqual( Stem("vanæret"), "vanær");});
test("var -> var", function() {deepEqual( Stem("var"), "var");});
test("varde -> vard", function() {deepEqual( Stem("varde"), "vard");});
test("varden -> vard", function() {deepEqual( Stem("varden"), "vard");});
test("varder -> vard", function() {deepEqual( Stem("varder"), "vard");});
test("vare -> var", function() {deepEqual( Stem("vare"), "var");});
test("varede -> vared", function() {deepEqual( Stem("varede"), "vared");});
test("varer -> var", function() {deepEqual( Stem("varer"), "var");});
test("varetage -> varetag", function() {deepEqual( Stem("varetage"), "varetag");});
test("varetages -> varetag", function() {deepEqual( Stem("varetages"), "varetag");});
test("varetaget -> varetag", function() {deepEqual( Stem("varetaget"), "varetag");});
test("varetægt -> varetæg", function() {deepEqual( Stem("varetægt"), "varetæg");});
test("varig -> var", function() {deepEqual( Stem("varig"), "var");});
test("varigt -> var", function() {deepEqual( Stem("varigt"), "var");});
test("varm -> varm", function() {deepEqual( Stem("varm"), "varm");});
test("varme -> varm", function() {deepEqual( Stem("varme"), "varm");});
test("varmed -> varmed", function() {deepEqual( Stem("varmed"), "varmed");});
test("varmede -> varmed", function() {deepEqual( Stem("varmede"), "varmed");});
test("varmen -> varm", function() {deepEqual( Stem("varmen"), "varm");});
test("varmer -> varm", function() {deepEqual( Stem("varmer"), "varm");});
test("varmes -> varm", function() {deepEqual( Stem("varmes"), "varm");});
test("varmt -> varmt", function() {deepEqual( Stem("varmt"), "varmt");});
test("varne -> varn", function() {deepEqual( Stem("varne"), "varn");});
test("varsel -> varsel", function() {deepEqual( Stem("varsel"), "varsel");});
test("varselmænd -> varselmænd", function() {deepEqual( Stem("varselmænd"), "varselmænd");});
test("varslede -> varsled", function() {deepEqual( Stem("varslede"), "varsled");});
test("varsler -> varsl", function() {deepEqual( Stem("varsler"), "varsl");});
test("varslet -> varsl", function() {deepEqual( Stem("varslet"), "varsl");});
test("varsomme -> varsom", function() {deepEqual( Stem("varsomme"), "varsom");});
test("vart -> vart", function() {deepEqual( Stem("vart"), "vart");});
test("varte -> vart", function() {deepEqual( Stem("varte"), "vart");});
test("vartede -> varted", function() {deepEqual( Stem("vartede"), "varted");});
test("vasjti -> vasjti", function() {deepEqual( Stem("vasjti"), "vasjti");});
test("vasjtis -> vasjtis", function() {deepEqual( Stem("vasjtis"), "vasjtis");});
test("vaske -> vask", function() {deepEqual( Stem("vaske"), "vask");});
test("vaskefadet -> vaskefad", function() {deepEqual( Stem("vaskefadet"), "vaskefad");});
test("vaskeskål -> vaskeskål", function() {deepEqual( Stem("vaskeskål"), "vaskeskål");});
test("vattersottig -> vattersot", function() {deepEqual( Stem("vattersottig"), "vattersot");});
test("ve -> ve", function() {deepEqual( Stem("ve"), "ve");});
test("ved -> ved", function() {deepEqual( Stem("ved"), "ved");});
test("vedan -> vedan", function() {deepEqual( Stem("vedan"), "vedan");});
test("vedblev -> vedblev", function() {deepEqual( Stem("vedblev"), "vedblev");});
test("vedblive -> vedbliv", function() {deepEqual( Stem("vedblive"), "vedbliv");});
test("vedblivende -> vedbliv", function() {deepEqual( Stem("vedblivende"), "vedbliv");});
test("vedbliver -> vedbliv", function() {deepEqual( Stem("vedbliver"), "vedbliv");});
test("vederfaret -> vederfar", function() {deepEqual( Stem("vederfaret"), "vederfar");});
test("vederkvæg -> vederkvæg", function() {deepEqual( Stem("vederkvæg"), "vederkvæg");});
test("vederkvægede -> vederkvæged", function() {deepEqual( Stem("vederkvægede"), "vederkvæged");});
test("vederkvægelse -> vederkvæg", function() {deepEqual( Stem("vederkvægelse"), "vederkvæg");});
test("vederkvægelsens -> vederkvæg", function() {deepEqual( Stem("vederkvægelsens"), "vederkvæg");});
test("vederkvæges -> vederkvæg", function() {deepEqual( Stem("vederkvæges"), "vederkvæg");});
test("vederkvæget -> vederkvæg", function() {deepEqual( Stem("vederkvæget"), "vederkvæg");});
test("vederlag -> vederlag", function() {deepEqual( Stem("vederlag"), "vederlag");});
test("vederstyggeigheder -> vederstygge", function() {deepEqual( Stem("vederstyggeigheder"), "vederstygge");});
test("vederstyggelig -> vederstyg", function() {deepEqual( Stem("vederstyggelig"), "vederstyg");});
test("vederstyggeligbeder -> vederstyggeligbed", function() {deepEqual( Stem("vederstyggeligbeder"), "vederstyggeligbed");});
test("vederstyggelige -> vederstyg", function() {deepEqual( Stem("vederstyggelige"), "vederstyg");});
test("vederstyggeligere -> vederstyg", function() {deepEqual( Stem("vederstyggeligere"), "vederstyg");});
test("vederstyggelighed -> vederstyg", function() {deepEqual( Stem("vederstyggelighed"), "vederstyg");});
test("vederstyggeligheder -> vederstyg", function() {deepEqual( Stem("vederstyggeligheder"), "vederstyg");});
test("vederstyggelighederne -> vederstyggelighed", function() {deepEqual( Stem("vederstyggelighederne"), "vederstyggelighed");});
test("vederstyggeligheders -> vederstyggelighed", function() {deepEqual( Stem("vederstyggeligheders"), "vederstyggelighed");});
test("vederstyggeligt -> vederstyg", function() {deepEqual( Stem("vederstyggeligt"), "vederstyg");});
test("vedgå -> vedgå", function() {deepEqual( Stem("vedgå"), "vedgå");});
test("vedholdende -> vedhold", function() {deepEqual( Stem("vedholdende"), "vedhold");});
test("vedholdendene -> vedholdend", function() {deepEqual( Stem("vedholdendene"), "vedholdend");});
test("vedholdenhed -> vedholden", function() {deepEqual( Stem("vedholdenhed"), "vedholden");});
test("vedhængen -> vedhæng", function() {deepEqual( Stem("vedhængen"), "vedhæng");});
test("vedkende -> vedk", function() {deepEqual( Stem("vedkende"), "vedk");});
test("vedkender -> vedkend", function() {deepEqual( Stem("vedkender"), "vedkend");});
test("vedkommende -> vedkom", function() {deepEqual( Stem("vedkommende"), "vedkom");});
test("vedkommer -> vedkom", function() {deepEqual( Stem("vedkommer"), "vedkom");});
test("vedrørende -> vedrør", function() {deepEqual( Stem("vedrørende"), "vedrør");});
test("vedrører -> vedrør", function() {deepEqual( Stem("vedrører"), "vedrør");});
test("vedrørte -> vedrørt", function() {deepEqual( Stem("vedrørte"), "vedrørt");});
test("vedtage -> vedtag", function() {deepEqual( Stem("vedtage"), "vedtag");});
test("vedtaget -> vedtag", function() {deepEqual( Stem("vedtaget"), "vedtag");});
test("vedtagne -> vedtagn", function() {deepEqual( Stem("vedtagne"), "vedtagn");});
test("vedtog -> vedtog", function() {deepEqual( Stem("vedtog"), "vedtog");});
test("vedtægt -> vedtæg", function() {deepEqual( Stem("vedtægt"), "vedtæg");});
test("vedtægteme -> vedtægtem", function() {deepEqual( Stem("vedtægteme"), "vedtægtem");});
test("vedtægter -> vedtæg", function() {deepEqual( Stem("vedtægter"), "vedtæg");});
test("vedtægterne -> vedtæg", function() {deepEqual( Stem("vedtægterne"), "vedtæg");});
test("vedtægters -> vedtæg", function() {deepEqual( Stem("vedtægters"), "vedtæg");});
test("veed -> veed", function() {deepEqual( Stem("veed"), "veed");});
test("veer -> veer", function() {deepEqual( Stem("veer"), "veer");});
test("veerne -> veern", function() {deepEqual( Stem("veerne"), "veern");});
test("veernes -> veern", function() {deepEqual( Stem("veernes"), "veern");});
test("veg -> veg", function() {deepEqual( Stem("veg"), "veg");});
test("vege -> veg", function() {deepEqual( Stem("vege"), "veg");});
test("vegen -> veg", function() {deepEqual( Stem("vegen"), "veg");});
test("veget -> veg", function() {deepEqual( Stem("veget"), "veg");});
test("vegne -> vegn", function() {deepEqual( Stem("vegne"), "vegn");});
test("vej -> vej", function() {deepEqual( Stem("vej"), "vej");});
test("vejbryder -> vejbryd", function() {deepEqual( Stem("vejbryder"), "vejbryd");});
test("veje -> vej", function() {deepEqual( Stem("veje"), "vej");});
test("vejed -> vejed", function() {deepEqual( Stem("vejed"), "vejed");});
test("vejede -> vejed", function() {deepEqual( Stem("vejede"), "vejed");});
test("vejen -> vej", function() {deepEqual( Stem("vejen"), "vej");});
test("vejene -> vej", function() {deepEqual( Stem("vejene"), "vej");});
test("vejer -> vej", function() {deepEqual( Stem("vejer"), "vej");});
test("vejes -> vej", function() {deepEqual( Stem("vejes"), "vej");});
test("vejet -> vej", function() {deepEqual( Stem("vejet"), "vej");});
test("vejfarende -> vejfar", function() {deepEqual( Stem("vejfarende"), "vejfar");});
test("vejlede -> vejled", function() {deepEqual( Stem("vejlede"), "vejled");});
test("vejledede -> vejleded", function() {deepEqual( Stem("vejledede"), "vejleded");});
test("vejleder -> vejled", function() {deepEqual( Stem("vejleder"), "vejled");});
test("vejledere -> vejled", function() {deepEqual( Stem("vejledere"), "vejled");});
test("vejledning -> vejledning", function() {deepEqual( Stem("vejledning"), "vejledning");});
test("vejledt -> vejled", function() {deepEqual( Stem("vejledt"), "vejled");});
test("vejløst -> vejløs", function() {deepEqual( Stem("vejløst"), "vejløs");});
test("vejr -> vejr", function() {deepEqual( Stem("vejr"), "vejr");});
test("vejrer -> vejr", function() {deepEqual( Stem("vejrer"), "vejr");});
test("vejres -> vejr", function() {deepEqual( Stem("vejres"), "vejr");});
test("vejret -> vejr", function() {deepEqual( Stem("vejret"), "vejr");});
test("vejrs -> vejr", function() {deepEqual( Stem("vejrs"), "vejr");});
test("vejs -> vej", function() {deepEqual( Stem("vejs"), "vej");});
test("vejskellet -> vejskel", function() {deepEqual( Stem("vejskellet"), "vejskel");});
test("vejviser -> vejvis", function() {deepEqual( Stem("vejviser"), "vejvis");});
test("vejvisersten -> vejviserst", function() {deepEqual( Stem("vejvisersten"), "vejviserst");});
test("veklage -> veklag", function() {deepEqual( Stem("veklage"), "veklag");});
test("vekselbordet -> vekselbord", function() {deepEqual( Stem("vekselbordet"), "vekselbord");});
test("vekselererne -> vekseler", function() {deepEqual( Stem("vekselererne"), "vekseler");});
test("vekselerernes -> vekseler", function() {deepEqual( Stem("vekselerernes"), "vekseler");});
test("vekselerne -> veksel", function() {deepEqual( Stem("vekselerne"), "veksel");});
test("vel -> vel", function() {deepEqual( Stem("vel"), "vel");});
test("velan -> velan", function() {deepEqual( Stem("velan"), "velan");});
test("velbavende -> velbav", function() {deepEqual( Stem("velbavende"), "velbav");});
test("velbebag -> velbebag", function() {deepEqual( Stem("velbebag"), "velbebag");});
test("velbebageligt -> velbebag", function() {deepEqual( Stem("velbebageligt"), "velbebag");});
test("velbehag -> velbehag", function() {deepEqual( Stem("velbehag"), "velbehag");});
test("velbehagelig -> velbehag", function() {deepEqual( Stem("velbehagelig"), "velbehag");});
test("velbehagelige -> velbehag", function() {deepEqual( Stem("velbehagelige"), "velbehag");});
test("velbehageligt -> velbehag", function() {deepEqual( Stem("velbehageligt"), "velbehag");});
test("velforskyldt -> velforskyld", function() {deepEqual( Stem("velforskyldt"), "velforskyld");});
test("velfærd -> velfærd", function() {deepEqual( Stem("velfærd"), "velfærd");});
test("velfærds -> velfærd", function() {deepEqual( Stem("velfærds"), "velfærd");});
test("velgerning -> velgerning", function() {deepEqual( Stem("velgerning"), "velgerning");});
test("velgerninger -> velgerning", function() {deepEqual( Stem("velgerninger"), "velgerning");});
test("velgørere -> velgør", function() {deepEqual( Stem("velgørere"), "velgør");});
test("velhavende -> velhav", function() {deepEqual( Stem("velhavende"), "velhav");});
test("velkendte -> velkend", function() {deepEqual( Stem("velkendte"), "velkend");});
test("velkommen -> velkom", function() {deepEqual( Stem("velkommen"), "velkom");});
test("velkomment -> velkomment", function() {deepEqual( Stem("velkomment"), "velkomment");});
test("vellevned -> vellevned", function() {deepEqual( Stem("vellevned"), "vellevned");});
test("vellugt -> vellug", function() {deepEqual( Stem("vellugt"), "vellug");});
test("vellugtende -> vellug", function() {deepEqual( Stem("vellugtende"), "vellug");});
test("vellugts -> vellug", function() {deepEqual( Stem("vellugts"), "vellug");});
test("vellugtshøjen -> vellugtshøj", function() {deepEqual( Stem("vellugtshøjen"), "vellugtshøj");});
test("vellugtstræer -> vellugtstræ", function() {deepEqual( Stem("vellugtstræer"), "vellugtstræ");});
test("vellyst -> vellyst", function() {deepEqual( Stem("vellyst"), "vellyst");});
test("velnærede -> velnæred", function() {deepEqual( Stem("velnærede"), "velnæred");});
test("velse -> vels", function() {deepEqual( Stem("velse"), "vels");});
test("velsign -> velsign", function() {deepEqual( Stem("velsign"), "velsign");});
test("velsigne -> velsign", function() {deepEqual( Stem("velsigne"), "velsign");});
test("velsigned -> velsigned", function() {deepEqual( Stem("velsigned"), "velsigned");});
test("velsignede -> velsigned", function() {deepEqual( Stem("velsignede"), "velsigned");});
test("velsignedem -> velsignedem", function() {deepEqual( Stem("velsignedem"), "velsignedem");});
test("velsignelse -> velsign", function() {deepEqual( Stem("velsignelse"), "velsign");});
test("velsignelsen -> velsign", function() {deepEqual( Stem("velsignelsen"), "velsign");});
test("velsignelsens -> velsign", function() {deepEqual( Stem("velsignelsens"), "velsign");});
test("velsignelser -> velsign", function() {deepEqual( Stem("velsignelser"), "velsign");});
test("velsignelses -> velsign", function() {deepEqual( Stem("velsignelses"), "velsign");});
test("velsigner -> velsign", function() {deepEqual( Stem("velsigner"), "velsign");});
test("velsignes -> velsign", function() {deepEqual( Stem("velsignes"), "velsign");});
test("velsignet -> velsign", function() {deepEqual( Stem("velsignet"), "velsign");});
test("velsigtnet -> velsigtn", function() {deepEqual( Stem("velsigtnet"), "velsigtn");});
test("velsindede -> velsinded", function() {deepEqual( Stem("velsindede"), "velsinded");});
test("velskikket -> velskik", function() {deepEqual( Stem("velskikket"), "velskik");});
test("velstand -> velstand", function() {deepEqual( Stem("velstand"), "velstand");});
test("velstående -> velstå", function() {deepEqual( Stem("velstående"), "velstå");});
test("veltalende -> veltal", function() {deepEqual( Stem("veltalende"), "veltal");});
test("veltilfreds -> veltilfred", function() {deepEqual( Stem("veltilfreds"), "veltilfred");});
test("velvilje -> velvilj", function() {deepEqual( Stem("velvilje"), "velvilj");});
test("velvillig -> velvil", function() {deepEqual( Stem("velvillig"), "velvil");});
test("velvillige -> velvil", function() {deepEqual( Stem("velvillige"), "velvil");});
test("velvillighed -> velvil", function() {deepEqual( Stem("velvillighed"), "velvil");});
test("vemodigt -> vemod", function() {deepEqual( Stem("vemodigt"), "vemod");});
test("ven -> ven", function() {deepEqual( Stem("ven"), "ven");});
test("vend -> vend", function() {deepEqual( Stem("vend"), "vend");});
test("vende -> vend", function() {deepEqual( Stem("vende"), "vend");});
test("vendende -> vend", function() {deepEqual( Stem("vendende"), "vend");});
test("vender -> vend", function() {deepEqual( Stem("vender"), "vend");});
test("vendes -> vend", function() {deepEqual( Stem("vendes"), "vend");});
test("vendet -> vend", function() {deepEqual( Stem("vendet"), "vend");});
test("vendfe -> vendf", function() {deepEqual( Stem("vendfe"), "vendf");});
test("vendt -> vend", function() {deepEqual( Stem("vendt"), "vend");});
test("vendte -> vend", function() {deepEqual( Stem("vendte"), "vend");});
test("vendtes -> vend", function() {deepEqual( Stem("vendtes"), "vend");});
test("veninde -> venind", function() {deepEqual( Stem("veninde"), "venind");});
test("veninder -> venind", function() {deepEqual( Stem("veninder"), "venind");});
test("veninderne -> venind", function() {deepEqual( Stem("veninderne"), "venind");});
test("venlig -> ven", function() {deepEqual( Stem("venlig"), "ven");});
test("venlige -> ven", function() {deepEqual( Stem("venlige"), "ven");});
test("venlighed -> ven", function() {deepEqual( Stem("venlighed"), "ven");});
test("venligt -> ven", function() {deepEqual( Stem("venligt"), "ven");});
test("vennehånds -> vennehånd", function() {deepEqual( Stem("vennehånds"), "vennehånd");});
test("vennens -> ven", function() {deepEqual( Stem("vennens"), "ven");});
test("venner -> ven", function() {deepEqual( Stem("venner"), "ven");});
test("vennerne -> ven", function() {deepEqual( Stem("vennerne"), "ven");});
test("vennesæle -> vennesæl", function() {deepEqual( Stem("vennesæle"), "vennesæl");});
test("vens -> ven", function() {deepEqual( Stem("vens"), "ven");});
test("venskab -> venskab", function() {deepEqual( Stem("venskab"), "venskab");});
test("venstre -> venstr", function() {deepEqual( Stem("venstre"), "venstr");});
test("vent -> vent", function() {deepEqual( Stem("vent"), "vent");});
test("vente -> vent", function() {deepEqual( Stem("vente"), "vent");});
test("vented -> vented", function() {deepEqual( Stem("vented"), "vented");});
test("ventede -> vented", function() {deepEqual( Stem("ventede"), "vented");});
test("venter -> vent", function() {deepEqual( Stem("venter"), "vent");});
test("ventes -> vent", function() {deepEqual( Stem("ventes"), "vent");});
test("ventet -> vent", function() {deepEqual( Stem("ventet"), "vent");});
test("ver -> ver", function() {deepEqual( Stem("ver"), "ver");});
test("verden -> verd", function() {deepEqual( Stem("verden"), "verd");});
test("verdens -> verd", function() {deepEqual( Stem("verdens"), "verd");});
test("verdensdyb -> verdensdyb", function() {deepEqual( Stem("verdensdyb"), "verdensdyb");});
test("verdensdybet -> verdensdyb", function() {deepEqual( Stem("verdensdybet"), "verdensdyb");});
test("verdensdybets -> verdensdyb", function() {deepEqual( Stem("verdensdybets"), "verdensdyb");});
test("verdensdybs -> verdensdyb", function() {deepEqual( Stem("verdensdybs"), "verdensdyb");});
test("verdensherskerne -> verdenshersk", function() {deepEqual( Stem("verdensherskerne"), "verdenshersk");});
test("verdenshjørner -> verdenshjørn", function() {deepEqual( Stem("verdenshjørner"), "verdenshjørn");});
test("verdslige -> verds", function() {deepEqual( Stem("verdslige"), "verds");});
test("vers -> ver", function() {deepEqual( Stem("vers"), "ver");});
test("verst -> verst", function() {deepEqual( Stem("verst"), "verst");});
test("verste -> verst", function() {deepEqual( Stem("verste"), "verst");});
test("versteme -> verstem", function() {deepEqual( Stem("versteme"), "verstem");});
test("versten -> verst", function() {deepEqual( Stem("versten"), "verst");});
test("verstene -> verst", function() {deepEqual( Stem("verstene"), "verst");});
test("verstenover -> verstenov", function() {deepEqual( Stem("verstenover"), "verstenov");});
test("verster -> verst", function() {deepEqual( Stem("verster"), "verst");});
test("versterne -> verst", function() {deepEqual( Stem("versterne"), "verst");});
test("versternes -> verst", function() {deepEqual( Stem("versternes"), "verst");});
test("versters -> verst", function() {deepEqual( Stem("versters"), "verst");});
test("verstes -> verst", function() {deepEqual( Stem("verstes"), "verst");});
test("veråb -> veråb", function() {deepEqual( Stem("veråb"), "veråb");});
test("vest -> vest", function() {deepEqual( Stem("vest"), "vest");});
test("vesten -> vest", function() {deepEqual( Stem("vesten"), "vest");});
test("vestenvind -> vestenvind", function() {deepEqual( Stem("vestenvind"), "vestenvind");});
test("vester -> vest", function() {deepEqual( Stem("vester"), "vest");});
test("vesterleden -> vesterled", function() {deepEqual( Stem("vesterleden"), "vesterled");});
test("vestgrænse -> vestgræns", function() {deepEqual( Stem("vestgrænse"), "vestgræns");});
test("vestgrænsen -> vestgræns", function() {deepEqual( Stem("vestgrænsen"), "vestgræns");});
test("vestporten -> vestport", function() {deepEqual( Stem("vestporten"), "vestport");});
test("vestpå -> vestpå", function() {deepEqual( Stem("vestpå"), "vestpå");});
test("vestside -> vestsid", function() {deepEqual( Stem("vestside"), "vestsid");});
test("vestsiden -> vestsid", function() {deepEqual( Stem("vestsiden"), "vestsid");});
test("vet -> vet", function() {deepEqual( Stem("vet"), "vet");});
test("vi -> vi", function() {deepEqual( Stem("vi"), "vi");});
test("vid -> vid", function() {deepEqual( Stem("vid"), "vid");});
test("vidde -> vid", function() {deepEqual( Stem("vidde"), "vid");});
test("vidder -> vid", function() {deepEqual( Stem("vidder"), "vid");});
test("viddet -> vid", function() {deepEqual( Stem("viddet"), "vid");});
test("vide -> vid", function() {deepEqual( Stem("vide"), "vid");});
test("viden -> vid", function() {deepEqual( Stem("viden"), "vid");});
test("vidende -> vid", function() {deepEqual( Stem("vidende"), "vid");});
test("videre -> vid", function() {deepEqual( Stem("videre"), "vid");});
test("vides -> vid", function() {deepEqual( Stem("vides"), "vid");});
test("vidjebækken -> vidjebæk", function() {deepEqual( Stem("vidjebækken"), "vidjebæk");});
test("vidjer -> vidj", function() {deepEqual( Stem("vidjer"), "vidj");});
test("vidn -> vidn", function() {deepEqual( Stem("vidn"), "vidn");});
test("vidne -> vidn", function() {deepEqual( Stem("vidne"), "vidn");});
test("vidnede -> vidned", function() {deepEqual( Stem("vidnede"), "vidned");});
test("vidnefast -> vidnefast", function() {deepEqual( Stem("vidnefast"), "vidnefast");});
test("vidner -> vidn", function() {deepEqual( Stem("vidner"), "vidn");});
test("vidnerne -> vidn", function() {deepEqual( Stem("vidnerne"), "vidn");});
test("vidnernes -> vidn", function() {deepEqual( Stem("vidnernes"), "vidn");});
test("vidners -> vidn", function() {deepEqual( Stem("vidners"), "vidn");});
test("vidnes -> vidn", function() {deepEqual( Stem("vidnes"), "vidn");});
test("vidnesbyrd -> vidnesbyrd", function() {deepEqual( Stem("vidnesbyrd"), "vidnesbyrd");});
test("vidnesbyrdene -> vidnesbyrd", function() {deepEqual( Stem("vidnesbyrdene"), "vidnesbyrd");});
test("vidnesbyrdet -> vidnesbyrd", function() {deepEqual( Stem("vidnesbyrdet"), "vidnesbyrd");});
test("vidnesbyrdets -> vidnesbyrd", function() {deepEqual( Stem("vidnesbyrdets"), "vidnesbyrd");});
test("vidnesbyrds -> vidnesbyrd", function() {deepEqual( Stem("vidnesbyrds"), "vidnesbyrd");});
test("vidnet -> vidn", function() {deepEqual( Stem("vidnet"), "vidn");});
test("vidst -> vidst", function() {deepEqual( Stem("vidst"), "vidst");});
test("vidste -> vidst", function() {deepEqual( Stem("vidste"), "vidst");});
test("vidt -> vidt", function() {deepEqual( Stem("vidt"), "vidt");});
test("vidtstrakt -> vidtstrak", function() {deepEqual( Stem("vidtstrakt"), "vidtstrak");});
test("vidtstrakte -> vidtstrak", function() {deepEqual( Stem("vidtstrakte"), "vidtstrak");});
test("viduer -> vidu", function() {deepEqual( Stem("viduer"), "vidu");});
test("vidunderlige -> vidunder", function() {deepEqual( Stem("vidunderlige"), "vidunder");});
test("vidunderligt -> vidunder", function() {deepEqual( Stem("vidunderligt"), "vidunder");});
test("vidåbne -> vidåbn", function() {deepEqual( Stem("vidåbne"), "vidåbn");});
test("vie -> vie", function() {deepEqual( Stem("vie"), "vie");});
test("viede -> vied", function() {deepEqual( Stem("viede"), "vied");});
test("vielse -> viels", function() {deepEqual( Stem("vielse"), "viels");});
test("vier -> vier", function() {deepEqual( Stem("vier"), "vier");});
test("vies -> vies", function() {deepEqual( Stem("vies"), "vies");});
test("viet -> viet", function() {deepEqual( Stem("viet"), "viet");});
test("vig -> vig", function() {deepEqual( Stem("vig"), "vig");});
test("vige -> vig", function() {deepEqual( Stem("vige"), "vig");});
test("viger -> vig", function() {deepEqual( Stem("viger"), "vig");});
test("vigtigere -> vigt", function() {deepEqual( Stem("vigtigere"), "vigt");});
test("viis -> viis", function() {deepEqual( Stem("viis"), "viis");});
test("viist -> viist", function() {deepEqual( Stem("viist"), "viist");});
test("viklet -> vikl", function() {deepEqual( Stem("viklet"), "vikl");});
test("vil -> vil", function() {deepEqual( Stem("vil"), "vil");});
test("vild -> vild", function() {deepEqual( Stem("vild"), "vild");});
test("vilddyr -> vilddyr", function() {deepEqual( Stem("vilddyr"), "vilddyr");});
test("vilddyret -> vilddyr", function() {deepEqual( Stem("vilddyret"), "vilddyr");});
test("vilddyrets -> vilddyr", function() {deepEqual( Stem("vilddyrets"), "vilddyr");});
test("vilddyrs -> vilddyr", function() {deepEqual( Stem("vilddyrs"), "vilddyr");});
test("vilde -> vild", function() {deepEqual( Stem("vilde"), "vild");});
test("vildelse -> vild", function() {deepEqual( Stem("vildelse"), "vild");});
test("vildelsens -> vild", function() {deepEqual( Stem("vildelsens"), "vild");});
test("vildende -> vild", function() {deepEqual( Stem("vildende"), "vild");});
test("vildfarelse -> vildfar", function() {deepEqual( Stem("vildfarelse"), "vildfar");});
test("vildfarelsens -> vildfar", function() {deepEqual( Stem("vildfarelsens"), "vildfar");});
test("vildfarelses -> vildfar", function() {deepEqual( Stem("vildfarelses"), "vildfar");});
test("vildfarende -> vildfar", function() {deepEqual( Stem("vildfarende"), "vildfar");});
test("vildfarne -> vildfarn", function() {deepEqual( Stem("vildfarne"), "vildfarn");});
test("vildfremmed -> vildfremmed", function() {deepEqual( Stem("vildfremmed"), "vildfremmed");});
test("vildgeder -> vildged", function() {deepEqual( Stem("vildgeder"), "vildged");});
test("vildhonning -> vildhonning", function() {deepEqual( Stem("vildhonning"), "vildhonning");});
test("vildkat -> vildkat", function() {deepEqual( Stem("vildkat"), "vildkat");});
test("vildkatte -> vildkat", function() {deepEqual( Stem("vildkatte"), "vildkat");});
test("vildlede -> vildled", function() {deepEqual( Stem("vildlede"), "vildled");});
test("vildleder -> vildled", function() {deepEqual( Stem("vildleder"), "vildled");});
test("vildledt -> vildled", function() {deepEqual( Stem("vildledt"), "vildled");});
test("vildledte -> vildled", function() {deepEqual( Stem("vildledte"), "vildled");});
test("vildoksen -> vildoks", function() {deepEqual( Stem("vildoksen"), "vildoks");});
test("vildoksens -> vildoks", function() {deepEqual( Stem("vildoksens"), "vildoks");});
test("vildokses -> vildoks", function() {deepEqual( Stem("vildokses"), "vildoks");});
test("vildskab -> vildskab", function() {deepEqual( Stem("vildskab"), "vildskab");});
test("vildskud -> vildskud", function() {deepEqual( Stem("vildskud"), "vildskud");});
test("vildsom -> vildsom", function() {deepEqual( Stem("vildsom"), "vildsom");});
test("vildspor -> vildspor", function() {deepEqual( Stem("vildspor"), "vildspor");});
test("vildsvin -> vildsvin", function() {deepEqual( Stem("vildsvin"), "vildsvin");});
test("vildt -> vild", function() {deepEqual( Stem("vildt"), "vild");});
test("vildtet -> vild", function() {deepEqual( Stem("vildtet"), "vild");});
test("vildtlevende -> vildtlev", function() {deepEqual( Stem("vildtlevende"), "vildtlev");});
test("vildæsel -> vildæsel", function() {deepEqual( Stem("vildæsel"), "vildæsel");});
test("vildæsler -> vildæsl", function() {deepEqual( Stem("vildæsler"), "vildæsl");});
test("vildæslerne -> vildæsl", function() {deepEqual( Stem("vildæslerne"), "vildæsl");});
test("vildæslers -> vildæsl", function() {deepEqual( Stem("vildæslers"), "vildæsl");});
test("vildæslet -> vildæsl", function() {deepEqual( Stem("vildæslet"), "vildæsl");});
test("vilje -> vilj", function() {deepEqual( Stem("vilje"), "vilj");});
test("vilkår -> vilkår", function() {deepEqual( Stem("vilkår"), "vilkår");});
test("ville -> vil", function() {deepEqual( Stem("ville"), "vil");});
test("villet -> vil", function() {deepEqual( Stem("villet"), "vil");});
test("villie -> villi", function() {deepEqual( Stem("villie"), "villi");});
test("villien -> villi", function() {deepEqual( Stem("villien"), "villi");});
test("villies -> villi", function() {deepEqual( Stem("villies"), "villi");});
test("villig -> vil", function() {deepEqual( Stem("villig"), "vil");});
test("villige -> vil", function() {deepEqual( Stem("villige"), "vil");});
test("villigt -> vil", function() {deepEqual( Stem("villigt"), "vil");});
test("vilo -> vilo", function() {deepEqual( Stem("vilo"), "vilo");});
test("viltre -> viltr", function() {deepEqual( Stem("viltre"), "viltr");});
test("vin -> vin", function() {deepEqual( Stem("vin"), "vin");});
test("vinbjerge -> vinbjerg", function() {deepEqual( Stem("vinbjerge"), "vinbjerg");});
test("vind -> vind", function() {deepEqual( Stem("vind"), "vind");});
test("vinde -> vind", function() {deepEqual( Stem("vinde"), "vind");});
test("vindeltrapper -> vindeltrap", function() {deepEqual( Stem("vindeltrapper"), "vindeltrap");});
test("vinden -> vind", function() {deepEqual( Stem("vinden"), "vind");});
test("vindene -> vind", function() {deepEqual( Stem("vindene"), "vind");});
test("vindens -> vind", function() {deepEqual( Stem("vindens"), "vind");});
test("vinder -> vind", function() {deepEqual( Stem("vinder"), "vind");});
test("vindes -> vind", function() {deepEqual( Stem("vindes"), "vind");});
test("vindesyge -> vindesyg", function() {deepEqual( Stem("vindesyge"), "vindesyg");});
test("vinding -> vinding", function() {deepEqual( Stem("vinding"), "vinding");});
test("vindings -> vinding", function() {deepEqual( Stem("vindings"), "vinding");});
test("vindranker -> vindrank", function() {deepEqual( Stem("vindranker"), "vindrank");});
test("vindruer -> vindru", function() {deepEqual( Stem("vindruer"), "vindru");});
test("vindstød -> vindstød", function() {deepEqual( Stem("vindstød"), "vindstød");});
test("vindsvedne -> vindsvedn", function() {deepEqual( Stem("vindsvedne"), "vindsvedn");});
test("vindue -> vindu", function() {deepEqual( Stem("vindue"), "vindu");});
test("vinduer -> vindu", function() {deepEqual( Stem("vinduer"), "vindu");});
test("vinduesgitteret -> vinduesgit", function() {deepEqual( Stem("vinduesgitteret"), "vinduesgit");});
test("vinduet -> vindu", function() {deepEqual( Stem("vinduet"), "vindu");});
test("vindunk -> vindunk", function() {deepEqual( Stem("vindunk"), "vindunk");});
test("vineddike -> vineddik", function() {deepEqual( Stem("vineddike"), "vineddik");});
test("vinen -> vin", function() {deepEqual( Stem("vinen"), "vin");});
test("vinforrådene -> vinforråd", function() {deepEqual( Stem("vinforrådene"), "vinforråd");});
test("vinge -> ving", function() {deepEqual( Stem("vinge"), "ving");});
test("vingede -> vinged", function() {deepEqual( Stem("vingede"), "vinged");});
test("vingefang -> vingefang", function() {deepEqual( Stem("vingefang"), "vingefang");});
test("vinger -> ving", function() {deepEqual( Stem("vinger"), "ving");});
test("vingerne -> ving", function() {deepEqual( Stem("vingerne"), "ving");});
test("vingers -> ving", function() {deepEqual( Stem("vingers"), "ving");});
test("vingeskal -> vingeskal", function() {deepEqual( Stem("vingeskal"), "vingeskal");});
test("vingeslag -> vingeslag", function() {deepEqual( Stem("vingeslag"), "vingeslag");});
test("vingespids -> vingespid", function() {deepEqual( Stem("vingespids"), "vingespid");});
test("vingesuset -> vingesus", function() {deepEqual( Stem("vingesuset"), "vingesus");});
test("vinget -> ving", function() {deepEqual( Stem("vinget"), "ving");});
test("vingård -> vingård", function() {deepEqual( Stem("vingård"), "vingård");});
test("vingårde -> vingård", function() {deepEqual( Stem("vingårde"), "vingård");});
test("vingården -> vingård", function() {deepEqual( Stem("vingården"), "vingård");});
test("vingårdene -> vingård", function() {deepEqual( Stem("vingårdene"), "vingård");});
test("vingårdens -> vingård", function() {deepEqual( Stem("vingårdens"), "vingård");});
test("vingårdsjord -> vingårdsjord", function() {deepEqual( Stem("vingårdsjord"), "vingårdsjord");});
test("vingårdsknive -> vingårdskniv", function() {deepEqual( Stem("vingårdsknive"), "vingårdskniv");});
test("vingårdsmand -> vingårdsmand", function() {deepEqual( Stem("vingårdsmand"), "vingårdsmand");});
test("vingårdsmanden -> vingårdsmand", function() {deepEqual( Stem("vingårdsmanden"), "vingårdsmand");});
test("vingårdsmænd -> vingårdsmænd", function() {deepEqual( Stem("vingårdsmænd"), "vingårdsmænd");});
test("vingårdsmændene -> vingårdsmænd", function() {deepEqual( Stem("vingårdsmændene"), "vingårdsmænd");});
test("vingårdsvogterske -> vingårdsvogtersk", function() {deepEqual( Stem("vingårdsvogterske"), "vingårdsvogtersk");});
test("vingåre -> vingår", function() {deepEqual( Stem("vingåre"), "vingår");});
test("vinhal -> vinhal", function() {deepEqual( Stem("vinhal"), "vinhal");});
test("vinhaver -> vinhav", function() {deepEqual( Stem("vinhaver"), "vinhav");});
test("vinhøst -> vinhøst", function() {deepEqual( Stem("vinhøst"), "vinhøst");});
test("vinhøstens -> vinhøst", function() {deepEqual( Stem("vinhøstens"), "vinhøst");});
test("vinhøstfest -> vinhøstfest", function() {deepEqual( Stem("vinhøstfest"), "vinhøstfest");});
test("vinhøstmænd -> vinhøstmænd", function() {deepEqual( Stem("vinhøstmænd"), "vinhøstmænd");});
test("vink -> vink", function() {deepEqual( Stem("vink"), "vink");});
test("vinked -> vinked", function() {deepEqual( Stem("vinked"), "vinked");});
test("vinkede -> vinked", function() {deepEqual( Stem("vinkede"), "vinked");});
test("vinland -> vinland", function() {deepEqual( Stem("vinland"), "vinland");});
test("vinperse -> vinpers", function() {deepEqual( Stem("vinperse"), "vinpers");});
test("vinpersen -> vinpers", function() {deepEqual( Stem("vinpersen"), "vinpers");});
test("vinperser -> vinpers", function() {deepEqual( Stem("vinperser"), "vinpers");});
test("vinperserråb -> vinperserråb", function() {deepEqual( Stem("vinperserråb"), "vinperserråb");});
test("vinperserråbet -> vinperserråb", function() {deepEqual( Stem("vinperserråbet"), "vinperserråb");});
test("vinperses -> vinpers", function() {deepEqual( Stem("vinperses"), "vinpers");});
test("vinranke -> vinrank", function() {deepEqual( Stem("vinranke"), "vinrank");});
test("vinranken -> vinrank", function() {deepEqual( Stem("vinranken"), "vinrank");});
test("vinstok -> vinstok", function() {deepEqual( Stem("vinstok"), "vinstok");});
test("vinstokke -> vinstok", function() {deepEqual( Stem("vinstokke"), "vinstok");});
test("vinstokken -> vinstok", function() {deepEqual( Stem("vinstokken"), "vinstok");});
test("vinstokkens -> vinstok", function() {deepEqual( Stem("vinstokkens"), "vinstok");});
test("vinsække -> vinsæk", function() {deepEqual( Stem("vinsække"), "vinsæk");});
test("vintappere -> vintap", function() {deepEqual( Stem("vintappere"), "vintap");});
test("vinter -> vint", function() {deepEqual( Stem("vinter"), "vint");});
test("vinteren -> vint", function() {deepEqual( Stem("vinteren"), "vint");});
test("vinterhuset -> vinterhus", function() {deepEqual( Stem("vinterhuset"), "vinterhus");});
test("vinterleje -> vinterlej", function() {deepEqual( Stem("vinterleje"), "vinterlej");});
test("vinterregnens -> vinterregn", function() {deepEqual( Stem("vinterregnens"), "vinterregn");});
test("vintren -> vintr", function() {deepEqual( Stem("vintren"), "vintr");});
test("vintræ -> vintræ", function() {deepEqual( Stem("vintræ"), "vintræ");});
test("vintræer -> vintræ", function() {deepEqual( Stem("vintræer"), "vintræ");});
test("vintræet -> vintræ", function() {deepEqual( Stem("vintræet"), "vintræ");});
test("vintræets -> vintræ", function() {deepEqual( Stem("vintræets"), "vintræ");});
test("violet -> viol", function() {deepEqual( Stem("violet"), "viol");});
test("violette -> violet", function() {deepEqual( Stem("violette"), "violet");});
test("vipper -> vip", function() {deepEqual( Stem("vipper"), "vip");});
test("virak -> virak", function() {deepEqual( Stem("virak"), "virak");});
test("virke -> virk", function() {deepEqual( Stem("virke"), "virk");});
test("virked -> virked", function() {deepEqual( Stem("virked"), "virked");});
test("virkede -> virked", function() {deepEqual( Stem("virkede"), "virked");});
test("virkedes -> virked", function() {deepEqual( Stem("virkedes"), "virked");});
test("virkekraft -> virkekraft", function() {deepEqual( Stem("virkekraft"), "virkekraft");});
test("virkelig -> virk", function() {deepEqual( Stem("virkelig"), "virk");});
test("virkelige -> virk", function() {deepEqual( Stem("virkelige"), "virk");});
test("virkelighed -> virk", function() {deepEqual( Stem("virkelighed"), "virk");});
test("virkeligheden -> virk", function() {deepEqual( Stem("virkeligheden"), "virk");});
test("virkeligt -> virk", function() {deepEqual( Stem("virkeligt"), "virk");});
test("virker -> virk", function() {deepEqual( Stem("virker"), "virk");});
test("virkes -> virk", function() {deepEqual( Stem("virkes"), "virk");});
test("virket -> virk", function() {deepEqual( Stem("virket"), "virk");});
test("virkning -> virkning", function() {deepEqual( Stem("virkning"), "virkning");});
test("virksom -> virksom", function() {deepEqual( Stem("virksom"), "virksom");});
test("virksomhed -> virksom", function() {deepEqual( Stem("virksomhed"), "virksom");});
test("virksomme -> virksom", function() {deepEqual( Stem("virksomme"), "virksom");});
test("virksomt -> virksomt", function() {deepEqual( Stem("virksomt"), "virksomt");});
test("vis -> vis", function() {deepEqual( Stem("vis"), "vis");});
test("visdom -> visdom", function() {deepEqual( Stem("visdom"), "visdom");});
test("visdommen -> visdom", function() {deepEqual( Stem("visdommen"), "visdom");});
test("visdommens -> visdom", function() {deepEqual( Stem("visdommens"), "visdom");});
test("visdoms -> visdom", function() {deepEqual( Stem("visdoms"), "visdom");});
test("visdomskilde -> visdomskild", function() {deepEqual( Stem("visdomskilde"), "visdomskild");});
test("vise -> vis", function() {deepEqual( Stem("vise"), "vis");});
test("viselig -> vis", function() {deepEqual( Stem("viselig"), "vis");});
test("visen -> vis", function() {deepEqual( Stem("visen"), "vis");});
test("viser -> vis", function() {deepEqual( Stem("viser"), "vis");});
test("visere -> vis", function() {deepEqual( Stem("visere"), "vis");});
test("vises -> vis", function() {deepEqual( Stem("vises"), "vis");});
test("viseste -> visest", function() {deepEqual( Stem("viseste"), "visest");});
test("vished -> vis", function() {deepEqual( Stem("vished"), "vis");});
test("vismand -> vismand", function() {deepEqual( Stem("vismand"), "vismand");});
test("vismands -> vismand", function() {deepEqual( Stem("vismands"), "vismand");});
test("vismænd -> vismænd", function() {deepEqual( Stem("vismænd"), "vismænd");});
test("vismændene -> vismænd", function() {deepEqual( Stem("vismændene"), "vismænd");});
test("vismænds -> vismænd", function() {deepEqual( Stem("vismænds"), "vismænd");});
test("visne -> visn", function() {deepEqual( Stem("visne"), "visn");});
test("visnede -> visned", function() {deepEqual( Stem("visnede"), "visned");});
test("visnende -> visn", function() {deepEqual( Stem("visnende"), "visn");});
test("visner -> visn", function() {deepEqual( Stem("visner"), "visn");});
test("visnet -> visn", function() {deepEqual( Stem("visnet"), "visn");});
test("visse -> vis", function() {deepEqual( Stem("visse"), "vis");});
test("visselig -> vis", function() {deepEqual( Stem("visselig"), "vis");});
test("vissen -> vis", function() {deepEqual( Stem("vissen"), "vis");});
test("vissent -> vissent", function() {deepEqual( Stem("vissent"), "vissent");});
test("vist -> vist", function() {deepEqual( Stem("vist"), "vist");});
test("viste -> vist", function() {deepEqual( Stem("viste"), "vist");});
test("vitterlig -> vitter", function() {deepEqual( Stem("vitterlig"), "vitter");});
test("vitterligt -> vitter", function() {deepEqual( Stem("vitterligt"), "vitter");});
test("vod -> vod", function() {deepEqual( Stem("vod"), "vod");});
test("vofsis -> vofsis", function() {deepEqual( Stem("vofsis"), "vofsis");});
test("vog -> vog", function() {deepEqual( Stem("vog"), "vog");});
test("vogn -> vogn", function() {deepEqual( Stem("vogn"), "vogn");});
test("vognborgen -> vognborg", function() {deepEqual( Stem("vognborgen"), "vognborg");});
test("vognbyerne -> vognby", function() {deepEqual( Stem("vognbyerne"), "vognby");});
test("vogne -> vogn", function() {deepEqual( Stem("vogne"), "vogn");});
test("vognen -> vogn", function() {deepEqual( Stem("vognen"), "vogn");});
test("vognene -> vogn", function() {deepEqual( Stem("vognene"), "vogn");});
test("vognenes -> vogn", function() {deepEqual( Stem("vognenes"), "vogn");});
test("vognes -> vogn", function() {deepEqual( Stem("vognes"), "vogn");});
test("vognhjul -> vognhjul", function() {deepEqual( Stem("vognhjul"), "vognhjul");});
test("vognhold -> vognhold", function() {deepEqual( Stem("vognhold"), "vognhold");});
test("vognkæmpere -> vognkæmp", function() {deepEqual( Stem("vognkæmpere"), "vognkæmp");});
test("vognreb -> vognreb", function() {deepEqual( Stem("vognreb"), "vognreb");});
test("vogns -> vogn", function() {deepEqual( Stem("vogns"), "vogn");});
test("vognspor -> vognspor", function() {deepEqual( Stem("vognspor"), "vognspor");});
test("vognstel -> vognstel", function() {deepEqual( Stem("vognstel"), "vognstel");});
test("vognstyrene -> vognstyr", function() {deepEqual( Stem("vognstyrene"), "vognstyr");});
test("vognstyrer -> vognstyr", function() {deepEqual( Stem("vognstyrer"), "vognstyr");});
test("vognstyrere -> vognstyr", function() {deepEqual( Stem("vognstyrere"), "vognstyr");});
test("vognstyrerne -> vognstyr", function() {deepEqual( Stem("vognstyrerne"), "vognstyr");});
test("vogntøj -> vogntøj", function() {deepEqual( Stem("vogntøj"), "vogntøj");});
test("vogt -> vogt", function() {deepEqual( Stem("vogt"), "vogt");});
test("vogte -> vogt", function() {deepEqual( Stem("vogte"), "vogt");});
test("vogted -> vogted", function() {deepEqual( Stem("vogted"), "vogted");});
test("vogtede -> vogted", function() {deepEqual( Stem("vogtede"), "vogted");});
test("vogtedes -> vogted", function() {deepEqual( Stem("vogtedes"), "vogted");});
test("vogter -> vogt", function() {deepEqual( Stem("vogter"), "vogt");});
test("vogtere -> vogt", function() {deepEqual( Stem("vogtere"), "vogt");});
test("vogterens -> vogt", function() {deepEqual( Stem("vogterens"), "vogt");});
test("vogterne -> vogt", function() {deepEqual( Stem("vogterne"), "vogt");});
test("vogtes -> vogt", function() {deepEqual( Stem("vogtes"), "vogt");});
test("vogtet -> vogt", function() {deepEqual( Stem("vogtet"), "vogt");});
test("voks -> vok", function() {deepEqual( Stem("voks"), "vok");});
test("vokse -> voks", function() {deepEqual( Stem("vokse"), "voks");});
test("voksed -> voksed", function() {deepEqual( Stem("voksed"), "voksed");});
test("voksede -> voksed", function() {deepEqual( Stem("voksede"), "voksed");});
test("voksen -> voks", function() {deepEqual( Stem("voksen"), "voks");});
test("voksende -> voks", function() {deepEqual( Stem("voksende"), "voks");});
test("vokser -> voks", function() {deepEqual( Stem("vokser"), "voks");});
test("vokset -> voks", function() {deepEqual( Stem("vokset"), "voks");});
test("voksne -> voksn", function() {deepEqual( Stem("voksne"), "voksn");});
test("vold -> vold", function() {deepEqual( Stem("vold"), "vold");});
test("volde -> vold", function() {deepEqual( Stem("volde"), "vold");});
test("voldelig -> vold", function() {deepEqual( Stem("voldelig"), "vold");});
test("volder -> vold", function() {deepEqual( Stem("volder"), "vold");});
test("voldes -> vold", function() {deepEqual( Stem("voldes"), "vold");});
test("voldet -> vold", function() {deepEqual( Stem("voldet"), "vold");});
test("voldgiftsmand -> voldgiftsmand", function() {deepEqual( Stem("voldgiftsmand"), "voldgiftsmand");});
test("voldsdåd -> voldsdåd", function() {deepEqual( Stem("voldsdåd"), "voldsdåd");});
test("voldsfærd -> voldsfærd", function() {deepEqual( Stem("voldsfærd"), "voldsfærd");});
test("voldsfærds -> voldsfærd", function() {deepEqual( Stem("voldsfærds"), "voldsfærd");});
test("voldsgerningen -> voldsgerning", function() {deepEqual( Stem("voldsgerningen"), "voldsgerning");});
test("voldskonge -> voldskong", function() {deepEqual( Stem("voldskonge"), "voldskong");});
test("voldsmand -> voldsmand", function() {deepEqual( Stem("voldsmand"), "voldsmand");});
test("voldsmanden -> voldsmand", function() {deepEqual( Stem("voldsmanden"), "voldsmand");});
test("voldsmandens -> voldsmand", function() {deepEqual( Stem("voldsmandens"), "voldsmand");});
test("voldsmands -> voldsmand", function() {deepEqual( Stem("voldsmands"), "voldsmand");});
test("voldsmænd -> voldsmænd", function() {deepEqual( Stem("voldsmænd"), "voldsmænd");});
test("voldsmændene -> voldsmænd", function() {deepEqual( Stem("voldsmændene"), "voldsmænd");});
test("voldsmændenes -> voldsmænd", function() {deepEqual( Stem("voldsmændenes"), "voldsmænd");});
test("voldsmænds -> voldsmænd", function() {deepEqual( Stem("voldsmænds"), "voldsmænd");});
test("voldsom -> voldsom", function() {deepEqual( Stem("voldsom"), "voldsom");});
test("voldsomhed -> voldsom", function() {deepEqual( Stem("voldsomhed"), "voldsom");});
test("voldsomme -> voldsom", function() {deepEqual( Stem("voldsomme"), "voldsom");});
test("voldsomt -> voldsomt", function() {deepEqual( Stem("voldsomt"), "voldsomt");});
test("voldsredskaber -> voldsredskab", function() {deepEqual( Stem("voldsredskaber"), "voldsredskab");});
test("voldt -> vold", function() {deepEqual( Stem("voldt"), "vold");});
test("voldtagne -> voldtagn", function() {deepEqual( Stem("voldtagne"), "voldtagn");});
test("voldte -> vold", function() {deepEqual( Stem("voldte"), "vold");});
test("volksede -> volksed", function() {deepEqual( Stem("volksede"), "volksed");});
test("vom -> vom", function() {deepEqual( Stem("vom"), "vom");});
test("vor -> vor", function() {deepEqual( Stem("vor"), "vor");});
test("vorde -> vord", function() {deepEqual( Stem("vorde"), "vord");});
test("vorden -> vord", function() {deepEqual( Stem("vorden"), "vord");});
test("vorder -> vord", function() {deepEqual( Stem("vorder"), "vord");});
test("vore -> vor", function() {deepEqual( Stem("vore"), "vor");});
test("vort -> vort", function() {deepEqual( Stem("vort"), "vort");});
test("vote -> vot", function() {deepEqual( Stem("vote"), "vot");});
test("vov -> vov", function() {deepEqual( Stem("vov"), "vov");});
test("vove -> vov", function() {deepEqual( Stem("vove"), "vov");});
test("vovede -> voved", function() {deepEqual( Stem("vovede"), "voved");});
test("vover -> vov", function() {deepEqual( Stem("vover"), "vov");});
test("vovet -> vov", function() {deepEqual( Stem("vovet"), "vov");});
test("vrage -> vrag", function() {deepEqual( Stem("vrage"), "vrag");});
test("vraged -> vraged", function() {deepEqual( Stem("vraged"), "vraged");});
test("vragede -> vraged", function() {deepEqual( Stem("vragede"), "vraged");});
test("vrager -> vrag", function() {deepEqual( Stem("vrager"), "vrag");});
test("vraget -> vrag", function() {deepEqual( Stem("vraget"), "vrag");});
test("vrang -> vrang", function() {deepEqual( Stem("vrang"), "vrang");});
test("vrange -> vrang", function() {deepEqual( Stem("vrange"), "vrang");});
test("vrangen -> vrang", function() {deepEqual( Stem("vrangen"), "vrang");});
test("vranglærdomme -> vranglærdom", function() {deepEqual( Stem("vranglærdomme"), "vranglærdom");});
test("vrangt -> vrang", function() {deepEqual( Stem("vrangt"), "vrang");});
test("vre -> vre", function() {deepEqual( Stem("vre"), "vre");});
test("vred -> vred", function() {deepEqual( Stem("vred"), "vred");});
test("vredagtig -> vredag", function() {deepEqual( Stem("vredagtig"), "vredag");});
test("vredammens -> vredam", function() {deepEqual( Stem("vredammens"), "vredam");});
test("vrede -> vred", function() {deepEqual( Stem("vrede"), "vred");});
test("vredeblusse -> vredeblus", function() {deepEqual( Stem("vredeblusse"), "vredeblus");});
test("vrededes -> vreded", function() {deepEqual( Stem("vrededes"), "vreded");});
test("vreden -> vred", function() {deepEqual( Stem("vreden"), "vred");});
test("vredens -> vred", function() {deepEqual( Stem("vredens"), "vred");});
test("vredes -> vred", function() {deepEqual( Stem("vredes"), "vred");});
test("vredesdag -> vredesdag", function() {deepEqual( Stem("vredesdag"), "vredesdag");});
test("vredesglød -> vredesglød", function() {deepEqual( Stem("vredesglød"), "vredesglød");});
test("vredladen -> vredlad", function() {deepEqual( Stem("vredladen"), "vredlad");});
test("vreds -> vred", function() {deepEqual( Stem("vreds"), "vred");});
test("vreporten -> vreport", function() {deepEqual( Stem("vreporten"), "vreport");});
test("vrid -> vrid", function() {deepEqual( Stem("vrid"), "vrid");});
test("vride -> vrid", function() {deepEqual( Stem("vride"), "vrid");});
test("vrider -> vrid", function() {deepEqual( Stem("vrider"), "vrid");});
test("vrides -> vrid", function() {deepEqual( Stem("vrides"), "vrid");});
test("vrighed -> vrig", function() {deepEqual( Stem("vrighed"), "vrig");});
test("vrigheden -> vrig", function() {deepEqual( Stem("vrigheden"), "vrig");});
test("vrigheder -> vrig", function() {deepEqual( Stem("vrigheder"), "vrig");});
test("vrighederne -> vrighed", function() {deepEqual( Stem("vrighederne"), "vrighed");});
test("vrimle -> vriml", function() {deepEqual( Stem("vrimle"), "vriml");});
test("vrimlede -> vrimled", function() {deepEqual( Stem("vrimlede"), "vrimled");});
test("vrimler -> vriml", function() {deepEqual( Stem("vrimler"), "vriml");});
test("vrimmel -> vrimmel", function() {deepEqual( Stem("vrimmel"), "vrimmel");});
test("vrinsk -> vrinsk", function() {deepEqual( Stem("vrinsk"), "vrinsk");});
test("vrinsken -> vrinsk", function() {deepEqual( Stem("vrinsken"), "vrinsk");});
test("vrinsker -> vrinsk", function() {deepEqual( Stem("vrinsker"), "vrinsk");});
test("vristed -> vristed", function() {deepEqual( Stem("vristed"), "vristed");});
test("vristede -> vristed", function() {deepEqual( Stem("vristede"), "vristed");});
test("vrå -> vrå", function() {deepEqual( Stem("vrå"), "vrå");});
test("vrænger -> vræng", function() {deepEqual( Stem("vrænger"), "vræng");});
test("vundet -> vund", function() {deepEqual( Stem("vundet"), "vund");});
test("vundne -> vundn", function() {deepEqual( Stem("vundne"), "vundn");});
test("vurdere -> vurd", function() {deepEqual( Stem("vurdere"), "vurd");});
test("vurderede -> vurd", function() {deepEqual( Stem("vurderede"), "vurd");});
test("vurderes -> vurd", function() {deepEqual( Stem("vurderes"), "vurd");});
test("vurderet -> vurd", function() {deepEqual( Stem("vurderet"), "vurd");});
test("vurdering -> vurdering", function() {deepEqual( Stem("vurdering"), "vurdering");});
test("vurderingen -> vurdering", function() {deepEqual( Stem("vurderingen"), "vurdering");});
test("vurderingssum -> vurderingssum", function() {deepEqual( Stem("vurderingssum"), "vurderingssum");});
test("vurderingssummen -> vurderingssum", function() {deepEqual( Stem("vurderingssummen"), "vurderingssum");});
test("våben -> våb", function() {deepEqual( Stem("våben"), "våb");});
test("våbendrager -> våbendrag", function() {deepEqual( Stem("våbendrager"), "våbendrag");});
test("våbendragere -> våbendrag", function() {deepEqual( Stem("våbendragere"), "våbendrag");});
test("våbendrageren -> våbendrag", function() {deepEqual( Stem("våbendrageren"), "våbendrag");});
test("våbendød -> våbendød", function() {deepEqual( Stem("våbendød"), "våbendød");});
test("våbenforrådene -> våbenforråd", function() {deepEqual( Stem("våbenforrådene"), "våbenforråd");});
test("våbenfærd -> våbenfærd", function() {deepEqual( Stem("våbenfærd"), "våbenfærd");});
test("våbenføre -> våbenfør", function() {deepEqual( Stem("våbenføre"), "våbenfør");});
test("våbenkjortel -> våbenkjortel", function() {deepEqual( Stem("våbenkjortel"), "våbenkjortel");});
test("våbenkjortelen -> våbenkjortel", function() {deepEqual( Stem("våbenkjortelen"), "våbenkjortel");});
test("våbenløs -> våbenløs", function() {deepEqual( Stem("våbenløs"), "våbenløs");});
test("våbenmagt -> våbenmag", function() {deepEqual( Stem("våbenmagt"), "våbenmag");});
test("våbenoplag -> våbenoplag", function() {deepEqual( Stem("våbenoplag"), "våbenoplag");});
test("våbnene -> våbn", function() {deepEqual( Stem("våbnene"), "våbn");});
test("våde -> våd", function() {deepEqual( Stem("våde"), "våd");});
test("våg -> våg", function() {deepEqual( Stem("våg"), "våg");});
test("våge -> våg", function() {deepEqual( Stem("våge"), "våg");});
test("våged -> våged", function() {deepEqual( Stem("våged"), "våged");});
test("vågede -> våged", function() {deepEqual( Stem("vågede"), "våged");});
test("vågen -> våg", function() {deepEqual( Stem("vågen"), "våg");});
test("vågenat -> vågenat", function() {deepEqual( Stem("vågenat"), "vågenat");});
test("vågent -> vågent", function() {deepEqual( Stem("vågent"), "vågent");});
test("våger -> våg", function() {deepEqual( Stem("våger"), "våg");});
test("vågn -> vågn", function() {deepEqual( Stem("vågn"), "vågn");});
test("vågne -> vågn", function() {deepEqual( Stem("vågne"), "vågn");});
test("vågned -> vågned", function() {deepEqual( Stem("vågned"), "vågned");});
test("vågnede -> vågned", function() {deepEqual( Stem("vågnede"), "vågned");});
test("vågner -> vågn", function() {deepEqual( Stem("vågner"), "vågn");});
test("vågnet -> vågn", function() {deepEqual( Stem("vågnet"), "vågn");});
test("vånd -> vånd", function() {deepEqual( Stem("vånd"), "vånd");});
test("vånde -> vånd", function() {deepEqual( Stem("vånde"), "vånd");});
test("vånder -> vånd", function() {deepEqual( Stem("vånder"), "vånd");});
test("vår -> vår", function() {deepEqual( Stem("vår"), "vår");});
test("vårregn -> vårregn", function() {deepEqual( Stem("vårregn"), "vårregn");});
test("vårregnens -> vårregn", function() {deepEqual( Stem("vårregnens"), "vårregn");});
test("væbne -> væbn", function() {deepEqual( Stem("væbne"), "væbn");});
test("væbnede -> væbned", function() {deepEqual( Stem("væbnede"), "væbned");});
test("væbnet -> væbn", function() {deepEqual( Stem("væbnet"), "væbn");});
test("væddekamp -> væddekamp", function() {deepEqual( Stem("væddekamp"), "væddekamp");});
test("væddemål -> væddemål", function() {deepEqual( Stem("væddemål"), "væddemål");});
test("væde -> væd", function() {deepEqual( Stem("væde"), "væd");});
test("vædede -> væded", function() {deepEqual( Stem("vædede"), "væded");});
test("vædedes -> væded", function() {deepEqual( Stem("vædedes"), "væded");});
test("væder -> væd", function() {deepEqual( Stem("væder"), "væd");});
test("væderbrændofre -> væderbrændofr", function() {deepEqual( Stem("væderbrændofre"), "væderbrændofr");});
test("væderen -> væd", function() {deepEqual( Stem("væderen"), "væd");});
test("væderens -> væd", function() {deepEqual( Stem("væderens"), "væd");});
test("væderfedt -> væderfed", function() {deepEqual( Stem("væderfedt"), "væderfed");});
test("væderhorn -> væderhorn", function() {deepEqual( Stem("væderhorn"), "væderhorn");});
test("væderhornet -> væderhorn", function() {deepEqual( Stem("væderhornet"), "væderhorn");});
test("væderlam -> væderlam", function() {deepEqual( Stem("væderlam"), "væderlam");});
test("væderskind -> væderskind", function() {deepEqual( Stem("væderskind"), "væderskind");});
test("vædes -> væd", function() {deepEqual( Stem("vædes"), "væd");});
test("vædre -> vædr", function() {deepEqual( Stem("vædre"), "vædr");});
test("vædrene -> vædr", function() {deepEqual( Stem("vædrene"), "vædr");});
test("vædres -> vædr", function() {deepEqual( Stem("vædres"), "vædr");});
test("væg -> væg", function() {deepEqual( Stem("væg"), "væg");});
test("væge -> væg", function() {deepEqual( Stem("væge"), "væg");});
test("vægge -> væg", function() {deepEqual( Stem("vægge"), "væg");});
test("væggen -> væg", function() {deepEqual( Stem("væggen"), "væg");});
test("væggene -> væg", function() {deepEqual( Stem("væggene"), "væg");});
test("væggens -> væg", function() {deepEqual( Stem("væggens"), "væg");});
test("vægre -> vægr", function() {deepEqual( Stem("vægre"), "vægr");});
test("vægred -> vægred", function() {deepEqual( Stem("vægred"), "vægred");});
test("vægrede -> vægred", function() {deepEqual( Stem("vægrede"), "vægred");});
test("vægrer -> vægr", function() {deepEqual( Stem("vægrer"), "vægr");});
test("vægt -> vægt", function() {deepEqual( Stem("vægt"), "vægt");});
test("vægten -> vægt", function() {deepEqual( Stem("vægten"), "vægt");});
test("vægter -> vægt", function() {deepEqual( Stem("vægter"), "vægt");});
test("vægtere -> vægt", function() {deepEqual( Stem("vægtere"), "vægt");});
test("vægteren -> vægt", function() {deepEqual( Stem("vægteren"), "vægt");});
test("vægterens -> vægt", function() {deepEqual( Stem("vægterens"), "vægt");});
test("vægteres -> vægt", function() {deepEqual( Stem("vægteres"), "vægt");});
test("vægterne -> vægt", function() {deepEqual( Stem("vægterne"), "vægt");});
test("vægternes -> vægt", function() {deepEqual( Stem("vægternes"), "vægt");});
test("vægtige -> vægt", function() {deepEqual( Stem("vægtige"), "vægt");});
test("vægtlodder -> vægtlod", function() {deepEqual( Stem("vægtlodder"), "vægtlod");});
test("vægtskål -> vægtskål", function() {deepEqual( Stem("vægtskål"), "vægtskål");});
test("vægtskåle -> vægtskål", function() {deepEqual( Stem("vægtskåle"), "vægtskål");});
test("vægtskålen -> vægtskål", function() {deepEqual( Stem("vægtskålen"), "vægtskål");});
test("væk -> væk", function() {deepEqual( Stem("væk"), "væk");});
test("vække -> væk", function() {deepEqual( Stem("vække"), "væk");});
test("vækked -> vækked", function() {deepEqual( Stem("vækked"), "vækked");});
test("vækkede -> vækked", function() {deepEqual( Stem("vækkede"), "vækked");});
test("vækker -> væk", function() {deepEqual( Stem("vækker"), "væk");});
test("vækkes -> væk", function() {deepEqual( Stem("vækkes"), "væk");});
test("vækst -> vækst", function() {deepEqual( Stem("vækst"), "vækst");});
test("vækster -> vækst", function() {deepEqual( Stem("vækster"), "vækst");});
test("væld -> væld", function() {deepEqual( Stem("væld"), "væld");});
test("vælde -> væld", function() {deepEqual( Stem("vælde"), "væld");});
test("vælded -> vælded", function() {deepEqual( Stem("vælded"), "vælded");});
test("vældede -> vælded", function() {deepEqual( Stem("vældede"), "vælded");});
test("vælder -> væld", function() {deepEqual( Stem("vælder"), "væld");});
test("vældes -> væld", function() {deepEqual( Stem("vældes"), "væld");});
test("vældig -> væld", function() {deepEqual( Stem("vældig"), "væld");});
test("vældige -> væld", function() {deepEqual( Stem("vældige"), "væld");});
test("vældigt -> væld", function() {deepEqual( Stem("vældigt"), "væld");});
test("vælg -> vælg", function() {deepEqual( Stem("vælg"), "vælg");});
test("vælge -> vælg", function() {deepEqual( Stem("vælge"), "vælg");});
test("vælger -> vælg", function() {deepEqual( Stem("vælger"), "vælg");});
test("væligt -> væl", function() {deepEqual( Stem("væligt"), "væl");});
test("vælt -> vælt", function() {deepEqual( Stem("vælt"), "vælt");});
test("vælte -> vælt", function() {deepEqual( Stem("vælte"), "vælt");});
test("væltede -> vælted", function() {deepEqual( Stem("væltede"), "vælted");});
test("vælter -> vælt", function() {deepEqual( Stem("vælter"), "vælt");});
test("væltet -> vælt", function() {deepEqual( Stem("væltet"), "vælt");});
test("væmmedes -> væmmed", function() {deepEqual( Stem("væmmedes"), "væmmed");});
test("væmmelig -> væm", function() {deepEqual( Stem("væmmelig"), "væm");});
test("væmmelige -> væm", function() {deepEqual( Stem("væmmelige"), "væm");});
test("væmmelse -> væm", function() {deepEqual( Stem("væmmelse"), "væm");});
test("væmmelsen -> væm", function() {deepEqual( Stem("væmmelsen"), "væm");});
test("væmmes -> væm", function() {deepEqual( Stem("væmmes"), "væm");});
test("væn -> væn", function() {deepEqual( Stem("væn"), "væn");});
test("vænned -> vænned", function() {deepEqual( Stem("vænned"), "vænned");});
test("vænnede -> vænned", function() {deepEqual( Stem("vænnede"), "vænned");});
test("vænnet -> væn", function() {deepEqual( Stem("vænnet"), "væn");});
test("vær -> vær", function() {deepEqual( Stem("vær"), "vær");});
test("værd -> værd", function() {deepEqual( Stem("værd"), "værd");});
test("værdi -> værdi", function() {deepEqual( Stem("værdi"), "værdi");});
test("værdien -> værdi", function() {deepEqual( Stem("værdien"), "værdi");});
test("værdig -> værd", function() {deepEqual( Stem("værdig"), "værd");});
test("værdige -> værd", function() {deepEqual( Stem("værdige"), "værd");});
test("værdiges -> værd", function() {deepEqual( Stem("værdiges"), "værd");});
test("værdighed -> værd", function() {deepEqual( Stem("værdighed"), "værd");});
test("værdigheden -> værd", function() {deepEqual( Stem("værdigheden"), "værd");});
test("værdigt -> værd", function() {deepEqual( Stem("værdigt"), "værd");});
test("værdiløse -> værdiløs", function() {deepEqual( Stem("værdiløse"), "værdiløs");});
test("værdsætte -> værdsæt", function() {deepEqual( Stem("værdsætte"), "værdsæt");});
test("værdsætter -> værdsæt", function() {deepEqual( Stem("værdsætter"), "værdsæt");});
test("være -> vær", function() {deepEqual( Stem("være"), "vær");});
test("værelse -> vær", function() {deepEqual( Stem("værelse"), "vær");});
test("værer -> vær", function() {deepEqual( Stem("værer"), "vær");});
test("været -> vær", function() {deepEqual( Stem("været"), "vær");});
test("værge -> værg", function() {deepEqual( Stem("værge"), "værg");});
test("værgede -> værged", function() {deepEqual( Stem("værgede"), "værged");});
test("værger -> værg", function() {deepEqual( Stem("værger"), "værg");});
test("værk -> værk", function() {deepEqual( Stem("værk"), "værk");});
test("værkbruden -> værkbrud", function() {deepEqual( Stem("værkbruden"), "værkbrud");});
test("værkbrudne -> værkbrudn", function() {deepEqual( Stem("værkbrudne"), "værkbrudn");});
test("værker -> værk", function() {deepEqual( Stem("værker"), "værk");});
test("værket -> værk", function() {deepEqual( Stem("værket"), "værk");});
test("værks -> værk", function() {deepEqual( Stem("værks"), "værk");});
test("værktøj -> værktøj", function() {deepEqual( Stem("værktøj"), "værktøj");});
test("værn -> værn", function() {deepEqual( Stem("værn"), "værn");});
test("værne -> værn", function() {deepEqual( Stem("værne"), "værn");});
test("værnede -> værned", function() {deepEqual( Stem("værnede"), "værned");});
test("værner -> værn", function() {deepEqual( Stem("værner"), "værn");});
test("værnet -> værn", function() {deepEqual( Stem("værnet"), "værn");});
test("værre -> vær", function() {deepEqual( Stem("værre"), "vær");});
test("værste -> værst", function() {deepEqual( Stem("værste"), "værst");});
test("vært -> vært", function() {deepEqual( Stem("vært"), "vært");});
test("værten -> vært", function() {deepEqual( Stem("værten"), "vært");});
test("væselen -> væsel", function() {deepEqual( Stem("væselen"), "væsel");});
test("væsen -> væs", function() {deepEqual( Stem("væsen"), "væs");});
test("væsener -> væsen", function() {deepEqual( Stem("væsener"), "væsen");});
test("væsenerne -> væsen", function() {deepEqual( Stem("væsenerne"), "væsen");});
test("væsenernes -> væsen", function() {deepEqual( Stem("væsenernes"), "væsen");});
test("væseners -> væsen", function() {deepEqual( Stem("væseners"), "væsen");});
test("væsenets -> væsen", function() {deepEqual( Stem("væsenets"), "væsen");});
test("væsens -> væs", function() {deepEqual( Stem("væsens"), "væs");});
test("væsker -> væsk", function() {deepEqual( Stem("væsker"), "væsk");});
test("væsner -> væsn", function() {deepEqual( Stem("væsner"), "væsn");});
test("væte -> væt", function() {deepEqual( Stem("væte"), "væt");});
test("væv -> væv", function() {deepEqual( Stem("væv"), "væv");});
test("væve -> væv", function() {deepEqual( Stem("væve"), "væv");});
test("vævede -> væved", function() {deepEqual( Stem("vævede"), "væved");});
test("væven -> væv", function() {deepEqual( Stem("væven"), "væv");});
test("væver -> væv", function() {deepEqual( Stem("væver"), "væv");});
test("væverbom -> væverbom", function() {deepEqual( Stem("væverbom"), "væverbom");});
test("vævet -> væv", function() {deepEqual( Stem("vævet"), "væv");});
test("vævning -> vævning", function() {deepEqual( Stem("vævning"), "vævning");});
test("vøre -> vør", function() {deepEqual( Stem("vøre"), "vør");});
test("yde -> yde", function() {deepEqual( Stem("yde"), "yde");});
test("ydede -> yded", function() {deepEqual( Stem("ydede"), "yded");});
test("ydelse -> ydels", function() {deepEqual( Stem("ydelse"), "ydels");});
test("ydelsen -> ydels", function() {deepEqual( Stem("ydelsen"), "ydels");});
test("yder -> yder", function() {deepEqual( Stem("yder"), "yder");});
test("yderkanten -> yderkant", function() {deepEqual( Stem("yderkanten"), "yderkant");});
test("yderligere -> yder", function() {deepEqual( Stem("yderligere"), "yder");});
test("ydermere -> yderm", function() {deepEqual( Stem("ydermere"), "yderm");});
test("ydermur -> ydermur", function() {deepEqual( Stem("ydermur"), "ydermur");});
test("yderst -> yderst", function() {deepEqual( Stem("yderst"), "yderst");});
test("yderste -> yderst", function() {deepEqual( Stem("yderste"), "yderst");});
test("ydes -> ydes", function() {deepEqual( Stem("ydes"), "ydes");});
test("ydet -> ydet", function() {deepEqual( Stem("ydet"), "ydet");});
test("ydmyg -> ydmyg", function() {deepEqual( Stem("ydmyg"), "ydmyg");});
test("ydmyge -> ydmyg", function() {deepEqual( Stem("ydmyge"), "ydmyg");});
test("ydmyged -> ydmyged", function() {deepEqual( Stem("ydmyged"), "ydmyged");});
test("ydmygede -> ydmyged", function() {deepEqual( Stem("ydmygede"), "ydmyged");});
test("ydmygedes -> ydmyged", function() {deepEqual( Stem("ydmygedes"), "ydmyged");});
test("ydmygelse -> ydmyg", function() {deepEqual( Stem("ydmygelse"), "ydmyg");});
test("ydmyger -> ydmyg", function() {deepEqual( Stem("ydmyger"), "ydmyg");});
test("ydmyges -> ydmyg", function() {deepEqual( Stem("ydmyges"), "ydmyg");});
test("ydmyget -> ydmyg", function() {deepEqual( Stem("ydmyget"), "ydmyg");});
test("ydmyghed -> ydmyg", function() {deepEqual( Stem("ydmyghed"), "ydmyg");});
test("ydmygt -> ydmyg", function() {deepEqual( Stem("ydmygt"), "ydmyg");});
test("ydre -> ydr", function() {deepEqual( Stem("ydre"), "ydr");});
test("ynde -> ynd", function() {deepEqual( Stem("ynde"), "ynd");});
test("yndede -> ynded", function() {deepEqual( Stem("yndede"), "ynded");});
test("yndefuld -> yndefuld", function() {deepEqual( Stem("yndefuld"), "yndefuld");});
test("yndefulde -> yndefuld", function() {deepEqual( Stem("yndefulde"), "yndefuld");});
test("ynder -> ynd", function() {deepEqual( Stem("ynder"), "ynd");});
test("yndest -> yndest", function() {deepEqual( Stem("yndest"), "yndest");});
test("yndig -> ynd", function() {deepEqual( Stem("yndig"), "ynd");});
test("yndige -> ynd", function() {deepEqual( Stem("yndige"), "ynd");});
test("yndigt -> ynd", function() {deepEqual( Stem("yndigt"), "ynd");});
test("yndling -> yndling", function() {deepEqual( Stem("yndling"), "yndling");});
test("yndlingsbarn -> yndlingsbarn", function() {deepEqual( Stem("yndlingsbarn"), "yndlingsbarn");});
test("yndlingsgud -> yndlingsgud", function() {deepEqual( Stem("yndlingsgud"), "yndlingsgud");});
test("yndlingshustruen -> yndlingshustru", function() {deepEqual( Stem("yndlingshustruen"), "yndlingshustru");});
test("yndlingshustruens -> yndlingshustru", function() {deepEqual( Stem("yndlingshustruens"), "yndlingshustru");});
test("yndlingsplantning -> yndlingsplantning", function() {deepEqual( Stem("yndlingsplantning"), "yndlingsplantning");});
test("yngel -> yngel", function() {deepEqual( Stem("yngel"), "yngel");});
test("ynglen -> yngl", function() {deepEqual( Stem("ynglen"), "yngl");});
test("yngling -> yngling", function() {deepEqual( Stem("yngling"), "yngling");});
test("ynglinge -> yngling", function() {deepEqual( Stem("ynglinge"), "yngling");});
test("ynglingen -> yngling", function() {deepEqual( Stem("ynglingen"), "yngling");});
test("ynglingens -> yngling", function() {deepEqual( Stem("ynglingens"), "yngling");});
test("ynglings -> yngling", function() {deepEqual( Stem("ynglings"), "yngling");});
test("yngre -> yngr", function() {deepEqual( Stem("yngre"), "yngr");});
test("yngste -> yngst", function() {deepEqual( Stem("yngste"), "yngst");});
test("yngstes -> yngst", function() {deepEqual( Stem("yngstes"), "yngst");});
test("ynk -> ynk", function() {deepEqual( Stem("ynk"), "ynk");});
test("ynke -> ynk", function() {deepEqual( Stem("ynke"), "ynk");});
test("ynked -> ynked", function() {deepEqual( Stem("ynked"), "ynked");});
test("ynkedes -> ynked", function() {deepEqual( Stem("ynkedes"), "ynked");});
test("ynker -> ynk", function() {deepEqual( Stem("ynker"), "ynk");});
test("ynkes -> ynk", function() {deepEqual( Stem("ynkes"), "ynk");});
test("ynksomme -> ynksom", function() {deepEqual( Stem("ynksomme"), "ynksom");});
test("ynkværdigste -> ynkværd", function() {deepEqual( Stem("ynkværdigste"), "ynkværd");});
test("yp -> yp", function() {deepEqual( Stem("yp"), "yp");});
test("yppe -> ypp", function() {deepEqual( Stem("yppe"), "ypp");});
test("yppede -> ypped", function() {deepEqual( Stem("yppede"), "ypped");});
test("ypper -> ypp", function() {deepEqual( Stem("ypper"), "ypp");});
test("ypperlig -> ypper", function() {deepEqual( Stem("ypperlig"), "ypper");});
test("ypperligere -> ypper", function() {deepEqual( Stem("ypperligere"), "ypper");});
test("ypperst -> ypperst", function() {deepEqual( Stem("ypperst"), "ypperst");});
test("ypperste -> ypperst", function() {deepEqual( Stem("ypperste"), "ypperst");});
test("ypperstepræst -> ypperstepræst", function() {deepEqual( Stem("ypperstepræst"), "ypperstepræst");});
test("ypperstepræstelig -> ypperstepræst", function() {deepEqual( Stem("ypperstepræstelig"), "ypperstepræst");});
test("ypperstepræsten -> ypperstepræst", function() {deepEqual( Stem("ypperstepræsten"), "ypperstepræst");});
test("ypperstepræstens -> ypperstepræst", function() {deepEqual( Stem("ypperstepræstens"), "ypperstepræst");});
test("ypperstepræster -> ypperstepræst", function() {deepEqual( Stem("ypperstepræster"), "ypperstepræst");});
test("ypperstepræsterne -> ypperstepræst", function() {deepEqual( Stem("ypperstepræsterne"), "ypperstepræst");});
test("yppig -> ypp", function() {deepEqual( Stem("yppig"), "ypp");});
test("yppige -> ypp", function() {deepEqual( Stem("yppige"), "ypp");});
test("yppighed -> ypp", function() {deepEqual( Stem("yppighed"), "ypp");});
test("yppigheds -> ypp", function() {deepEqual( Stem("yppigheds"), "ypp");});
test("yppigt -> ypp", function() {deepEqual( Stem("yppigt"), "ypp");});
test("ysop -> ysop", function() {deepEqual( Stem("ysop"), "ysop");});
test("ysopen -> ysop", function() {deepEqual( Stem("ysopen"), "ysop");});
test("ysopkoste -> ysopkost", function() {deepEqual( Stem("ysopkoste"), "ysopkost");});
test("ysopkvist -> ysopkvist", function() {deepEqual( Stem("ysopkvist"), "ysopkvist");});
test("ysopkvisten -> ysopkvist", function() {deepEqual( Stem("ysopkvisten"), "ysopkvist");});
test("ysopstængel -> ysopstængel", function() {deepEqual( Stem("ysopstængel"), "ysopstængel");});
test("za -> za", function() {deepEqual( Stem("za"), "za");});
test("zabad -> zabad", function() {deepEqual( Stem("zabad"), "zabad");});
test("zabbaj -> zabbaj", function() {deepEqual( Stem("zabbaj"), "zabbaj");});
test("zabbajs -> zabbaj", function() {deepEqual( Stem("zabbajs"), "zabbaj");});
test("zabdi -> zabdi", function() {deepEqual( Stem("zabdi"), "zabdi");});
test("zabdiel -> zabdiel", function() {deepEqual( Stem("zabdiel"), "zabdiel");});
test("zabdiels -> zabdiel", function() {deepEqual( Stem("zabdiels"), "zabdiel");});
test("zabud -> zabud", function() {deepEqual( Stem("zabud"), "zabud");});
test("zabulon -> zabulon", function() {deepEqual( Stem("zabulon"), "zabulon");});
test("zadok -> zadok", function() {deepEqual( Stem("zadok"), "zadok");});
test("zadokavlede -> zadokavled", function() {deepEqual( Stem("zadokavlede"), "zadokavled");});
test("zadokog -> zadokog", function() {deepEqual( Stem("zadokog"), "zadokog");});
test("zadoks -> zadok", function() {deepEqual( Stem("zadoks"), "zadok");});
test("zafenat -> zafenat", function() {deepEqual( Stem("zafenat"), "zafenat");});
test("zafon -> zafon", function() {deepEqual( Stem("zafon"), "zafon");});
test("zahab -> zahab", function() {deepEqual( Stem("zahab"), "zahab");});
test("zaham -> zaham", function() {deepEqual( Stem("zaham"), "zaham");});
test("zahar -> zahar", function() {deepEqual( Stem("zahar"), "zahar");});
test("zaka -> zaka", function() {deepEqual( Stem("zaka"), "zaka");});
test("zakar -> zakar", function() {deepEqual( Stem("zakar"), "zakar");});
test("zakarias -> zakaria", function() {deepEqual( Stem("zakarias"), "zakaria");});
test("zakkajs -> zakkaj", function() {deepEqual( Stem("zakkajs"), "zakkaj");});
test("zakkur -> zakkur", function() {deepEqual( Stem("zakkur"), "zakkur");});
test("zakkurs -> zakkur", function() {deepEqual( Stem("zakkurs"), "zakkur");});
test("zakæus -> zakæus", function() {deepEqual( Stem("zakæus"), "zakæus");});
test("zalafs -> zalaf", function() {deepEqual( Stem("zalafs"), "zalaf");});
test("zalmon -> zalmon", function() {deepEqual( Stem("zalmon"), "zalmon");});
test("zalmona -> zalmona", function() {deepEqual( Stem("zalmona"), "zalmona");});
test("zalmonbjerget -> zalmonbjerg", function() {deepEqual( Stem("zalmonbjerget"), "zalmonbjerg");});
test("zalmunna -> zalmunna", function() {deepEqual( Stem("zalmunna"), "zalmunna");});
test("zamzummiter -> zamzummit", function() {deepEqual( Stem("zamzummiter"), "zamzummit");});
test("zanoa -> zanoa", function() {deepEqual( Stem("zanoa"), "zanoa");});
test("zanoas -> zanoa", function() {deepEqual( Stem("zanoas"), "zanoa");});
test("zara -> zara", function() {deepEqual( Stem("zara"), "zara");});
test("zarepta -> zarepta", function() {deepEqual( Stem("zarepta"), "zarepta");});
test("zaretan -> zaretan", function() {deepEqual( Stem("zaretan"), "zaretan");});
test("zattu -> zattu", function() {deepEqual( Stem("zattu"), "zattu");});
test("zattus -> zattus", function() {deepEqual( Stem("zattus"), "zattus");});
test("zaza -> zaza", function() {deepEqual( Stem("zaza"), "zaza");});
test("ze -> ze", function() {deepEqual( Stem("ze"), "ze");});
test("zeba -> zeba", function() {deepEqual( Stem("zeba"), "zeba");});
test("zebadja -> zebadja", function() {deepEqual( Stem("zebadja"), "zebadja");});
test("zebajims -> zebajim", function() {deepEqual( Stem("zebajims"), "zebajim");});
test("zebaoth -> zebaoth", function() {deepEqual( Stem("zebaoth"), "zebaoth");});
test("zebaoths -> zebaoth", function() {deepEqual( Stem("zebaoths"), "zebaoth");});
test("zebedæus -> zebedæus", function() {deepEqual( Stem("zebedæus"), "zebedæus");});
test("zebida -> zebida", function() {deepEqual( Stem("zebida"), "zebida");});
test("zebina -> zebina", function() {deepEqual( Stem("zebina"), "zebina");});
test("zebo -> zebo", function() {deepEqual( Stem("zebo"), "zebo");});
test("zeboimdalen -> zeboimdal", function() {deepEqual( Stem("zeboimdalen"), "zeboimdal");});
test("zebojim -> zebojim", function() {deepEqual( Stem("zebojim"), "zebojim");});
test("zebojims -> zebojim", function() {deepEqual( Stem("zebojims"), "zebojim");});
test("zebub -> zebub", function() {deepEqual( Stem("zebub"), "zebub");});
test("zebul -> zebul", function() {deepEqual( Stem("zebul"), "zebul");});
test("zebulon -> zebulon", function() {deepEqual( Stem("zebulon"), "zebulon");});
test("zebulonilernes -> zebulonil", function() {deepEqual( Stem("zebulonilernes"), "zebulonil");});
test("zebuloniten -> zebulonit", function() {deepEqual( Stem("zebuloniten"), "zebulonit");});
test("zebuloniterne -> zebulonit", function() {deepEqual( Stem("zebuloniterne"), "zebulonit");});
test("zebuloniternes -> zebulonit", function() {deepEqual( Stem("zebuloniternes"), "zebulonit");});
test("zebulons -> zebulon", function() {deepEqual( Stem("zebulons"), "zebulon");});
test("zedad -> zedad", function() {deepEqual( Stem("zedad"), "zedad");});
test("zedekias -> zedekia", function() {deepEqual( Stem("zedekias"), "zedekia");});
test("zedekiass -> zedekias", function() {deepEqual( Stem("zedekiass"), "zedekias");});
test("zedulons -> zedulon", function() {deepEqual( Stem("zedulons"), "zedulon");});
test("zef -> zef", function() {deepEqual( Stem("zef"), "zef");});
test("zefanias -> zefania", function() {deepEqual( Stem("zefanias"), "zefania");});
test("zefanja -> zefanja", function() {deepEqual( Stem("zefanja"), "zefanja");});
test("zefanjas -> zefanja", function() {deepEqual( Stem("zefanjas"), "zefanja");});
test("zefat -> zefat", function() {deepEqual( Stem("zefat"), "zefat");});
test("zefatadalen -> zefatadal", function() {deepEqual( Stem("zefatadalen"), "zefatadal");});
test("zefo -> zefo", function() {deepEqual( Stem("zefo"), "zefo");});
test("zefon -> zefon", function() {deepEqual( Stem("zefon"), "zefon");});
test("zefoniternes -> zefonit", function() {deepEqual( Stem("zefoniternes"), "zefonit");});
test("zekarja -> zekarja", function() {deepEqual( Stem("zekarja"), "zekarja");});
test("zekarjas -> zekarja", function() {deepEqual( Stem("zekarjas"), "zekarja");});
test("zeker -> zek", function() {deepEqual( Stem("zeker"), "zek");});
test("zela -> zela", function() {deepEqual( Stem("zela"), "zela");});
test("zelek -> zelek", function() {deepEqual( Stem("zelek"), "zelek");});
test("zelobad -> zelobad", function() {deepEqual( Stem("zelobad"), "zelobad");});
test("zelofbad -> zelofbad", function() {deepEqual( Stem("zelofbad"), "zelofbad");});
test("zelofbads -> zelofbad", function() {deepEqual( Stem("zelofbads"), "zelofbad");});
test("zelofhad -> zelofhad", function() {deepEqual( Stem("zelofhad"), "zelofhad");});
test("zelofhads -> zelofhad", function() {deepEqual( Stem("zelofhads"), "zelofhad");});
test("zelotes -> zelot", function() {deepEqual( Stem("zelotes"), "zelot");});
test("zelza -> zelza", function() {deepEqual( Stem("zelza"), "zelza");});
test("zemak -> zemak", function() {deepEqual( Stem("zemak"), "zemak");});
test("zemarajim -> zemarajim", function() {deepEqual( Stem("zemarajim"), "zemarajim");});
test("zemariterne -> zemarit", function() {deepEqual( Stem("zemariterne"), "zemarit");});
test("zemira -> zemira", function() {deepEqual( Stem("zemira"), "zemira");});
test("zenan -> zenan", function() {deepEqual( Stem("zenan"), "zenan");});
test("zenas -> zena", function() {deepEqual( Stem("zenas"), "zena");});
test("zens -> zen", function() {deepEqual( Stem("zens"), "zen");});
test("zenstemplet -> zenstempl", function() {deepEqual( Stem("zenstemplet"), "zenstempl");});
test("zentjas -> zentja", function() {deepEqual( Stem("zentjas"), "zentja");});
test("zer -> zer", function() {deepEqual( Stem("zer"), "zer");});
test("zera -> zera", function() {deepEqual( Stem("zera"), "zera");});
test("zeraiten -> zerait", function() {deepEqual( Stem("zeraiten"), "zerait");});
test("zeraiterne -> zerait", function() {deepEqual( Stem("zeraiterne"), "zerait");});
test("zeraiternes -> zerait", function() {deepEqual( Stem("zeraiternes"), "zerait");});
test("zeraja -> zeraja", function() {deepEqual( Stem("zeraja"), "zeraja");});
test("zerajas -> zeraja", function() {deepEqual( Stem("zerajas"), "zeraja");});
test("zeras -> zera", function() {deepEqual( Stem("zeras"), "zera");});
test("zereda -> zereda", function() {deepEqual( Stem("zereda"), "zereda");});
test("zeredbækken -> zeredbæk", function() {deepEqual( Stem("zeredbækken"), "zeredbæk");});
test("zereddalen -> zereddal", function() {deepEqual( Stem("zereddalen"), "zereddal");});
test("zerera -> zerera", function() {deepEqual( Stem("zerera"), "zerera");});
test("zeresj -> zeresj", function() {deepEqual( Stem("zeresj"), "zeresj");});
test("zeret -> zer", function() {deepEqual( Stem("zeret"), "zer");});
test("zeror -> zeror", function() {deepEqual( Stem("zeror"), "zeror");});
test("zers -> zer", function() {deepEqual( Stem("zers"), "zer");});
test("zerua -> zerua", function() {deepEqual( Stem("zerua"), "zerua");});
test("zerubbabel -> zerubbabel", function() {deepEqual( Stem("zerubbabel"), "zerubbabel");});
test("zerubbabels -> zerubbabel", function() {deepEqual( Stem("zerubbabels"), "zerubbabel");});
test("zeruja -> zeruja", function() {deepEqual( Stem("zeruja"), "zeruja");});
test("zerujas -> zeruja", function() {deepEqual( Stem("zerujas"), "zeruja");});
test("zerujastre -> zerujastr", function() {deepEqual( Stem("zerujastre"), "zerujastr");});
test("zerujasønner -> zerujasøn", function() {deepEqual( Stem("zerujasønner"), "zerujasøn");});
test("zerujasønnerne -> zerujasøn", function() {deepEqual( Stem("zerujasønnerne"), "zerujasøn");});
test("zetam -> zetam", function() {deepEqual( Stem("zetam"), "zetam");});
test("zetan -> zetan", function() {deepEqual( Stem("zetan"), "zetan");});
test("zetar -> zetar", function() {deepEqual( Stem("zetar"), "zetar");});
test("zia -> zia", function() {deepEqual( Stem("zia"), "zia");});
test("zib -> zib", function() {deepEqual( Stem("zib"), "zib");});
test("ziba -> ziba", function() {deepEqual( Stem("ziba"), "ziba");});
test("zibas -> ziba", function() {deepEqual( Stem("zibas"), "ziba");});
test("zibja -> zibja", function() {deepEqual( Stem("zibja"), "zibja");});
test("zibon -> zibon", function() {deepEqual( Stem("zibon"), "zibon");});
test("zibons -> zibon", function() {deepEqual( Stem("zibons"), "zibon");});
test("ziddim -> ziddim", function() {deepEqual( Stem("ziddim"), "ziddim");});
test("zidkija -> zidkija", function() {deepEqual( Stem("zidkija"), "zidkija");});
test("zidon -> zidon", function() {deepEqual( Stem("zidon"), "zidon");});
test("zidoniemes -> zidoniem", function() {deepEqual( Stem("zidoniemes"), "zidoniem");});
test("zidoniere -> zidoni", function() {deepEqual( Stem("zidoniere"), "zidoni");});
test("zidonierne -> zidoni", function() {deepEqual( Stem("zidonierne"), "zidoni");});
test("zidoniernes -> zidoni", function() {deepEqual( Stem("zidoniernes"), "zidoni");});
test("zidoniske -> zidonisk", function() {deepEqual( Stem("zidoniske"), "zidonisk");});
test("zidons -> zidon", function() {deepEqual( Stem("zidons"), "zidon");});
test("zif -> zif", function() {deepEqual( Stem("zif"), "zif");});
test("zifa -> zifa", function() {deepEqual( Stem("zifa"), "zifa");});
test("zifiter -> zifit", function() {deepEqual( Stem("zifiter"), "zifit");});
test("zifiterne -> zifit", function() {deepEqual( Stem("zifiterne"), "zifit");});
test("zifjon -> zifjon", function() {deepEqual( Stem("zifjon"), "zifjon");});
test("zifron -> zifron", function() {deepEqual( Stem("zifron"), "zifron");});
test("zifs -> zif", function() {deepEqual( Stem("zifs"), "zif");});
test("ziha -> ziha", function() {deepEqual( Stem("ziha"), "ziha");});
test("zihas -> ziha", function() {deepEqual( Stem("zihas"), "ziha");});
test("ziklag -> ziklag", function() {deepEqual( Stem("ziklag"), "ziklag");});
test("zikri -> zikri", function() {deepEqual( Stem("zikri"), "zikri");});
test("zikris -> zikris", function() {deepEqual( Stem("zikris"), "zikris");});
test("zilla -> zilla", function() {deepEqual( Stem("zilla"), "zilla");});
test("zilletaj -> zilletaj", function() {deepEqual( Stem("zilletaj"), "zilletaj");});
test("zilpa -> zilpa", function() {deepEqual( Stem("zilpa"), "zilpa");});
test("zilpas -> zilpa", function() {deepEqual( Stem("zilpas"), "zilpa");});
test("zilpo -> zilpo", function() {deepEqual( Stem("zilpo"), "zilpo");});
test("zimma -> zimma", function() {deepEqual( Stem("zimma"), "zimma");});
test("zimmas -> zimma", function() {deepEqual( Stem("zimmas"), "zimma");});
test("zimran -> zimran", function() {deepEqual( Stem("zimran"), "zimran");});
test("zimri -> zimri", function() {deepEqual( Stem("zimri"), "zimri");});
test("zimris -> zimris", function() {deepEqual( Stem("zimris"), "zimris");});
test("zin -> zin", function() {deepEqual( Stem("zin"), "zin");});
test("zins -> zin", function() {deepEqual( Stem("zins"), "zin");});
test("zion -> zion", function() {deepEqual( Stem("zion"), "zion");});
test("zions -> zion", function() {deepEqual( Stem("zions"), "zion");});
test("zior -> zior", function() {deepEqual( Stem("zior"), "zior");});
test("zippora -> zippora", function() {deepEqual( Stem("zippora"), "zippora");});
test("zippors -> zippor", function() {deepEqual( Stem("zippors"), "zippor");});
test("ziv -> ziv", function() {deepEqual( Stem("ziv"), "ziv");});
test("ziza -> ziza", function() {deepEqual( Stem("ziza"), "ziza");});
test("zoan -> zoan", function() {deepEqual( Stem("zoan"), "zoan");});
test("zoans -> zoan", function() {deepEqual( Stem("zoans"), "zoan");});
test("zoar -> zoar", function() {deepEqual( Stem("zoar"), "zoar");});
test("zoats -> zoat", function() {deepEqual( Stem("zoats"), "zoat");});
test("zoba -> zoba", function() {deepEqual( Stem("zoba"), "zoba");});
test("zobas -> zoba", function() {deepEqual( Stem("zobas"), "zoba");});
test("zofa -> zofa", function() {deepEqual( Stem("zofa"), "zofa");});
test("zofaj -> zofaj", function() {deepEqual( Stem("zofaj"), "zofaj");});
test("zofar -> zofar", function() {deepEqual( Stem("zofar"), "zofar");});
test("zofas -> zofa", function() {deepEqual( Stem("zofas"), "zofa");});
test("zohar -> zohar", function() {deepEqual( Stem("zohar"), "zohar");});
test("zohars -> zohar", function() {deepEqual( Stem("zohars"), "zohar");});
test("zohet -> zoh", function() {deepEqual( Stem("zohet"), "zoh");});
test("zohets -> zoh", function() {deepEqual( Stem("zohets"), "zoh");});
test("zor -> zor", function() {deepEqual( Stem("zor"), "zor");});
test("zora -> zora", function() {deepEqual( Stem("zora"), "zora");});
test("zorobabel -> zorobabel", function() {deepEqual( Stem("zorobabel"), "zorobabel");});
test("zorobabels -> zorobabel", function() {deepEqual( Stem("zorobabels"), "zorobabel");});
test("zuars -> zuar", function() {deepEqual( Stem("zuars"), "zuar");});
test("zuf -> zuf", function() {deepEqual( Stem("zuf"), "zuf");});
test("zufegnen -> zufegn", function() {deepEqual( Stem("zufegnen"), "zufegn");});
test("zufit -> zufit", function() {deepEqual( Stem("zufit"), "zufit");});
test("zur -> zur", function() {deepEqual( Stem("zur"), "zur");});
test("zuriel -> zuriel", function() {deepEqual( Stem("zuriel"), "zuriel");});
test("zurisjaddajs -> zurisjaddaj", function() {deepEqual( Stem("zurisjaddajs"), "zurisjaddaj");});
test("zurs -> zur", function() {deepEqual( Stem("zurs"), "zur");});
test("zuziterne -> zuzit", function() {deepEqual( Stem("zuziterne"), "zuzit");});
test("zåd -> zåd", function() {deepEqual( Stem("zåd"), "zåd");});
test("zåvan -> zåvan", function() {deepEqual( Stem("zåvan"), "zåvan");});
test("åben -> åben", function() {deepEqual( Stem("åben"), "åben");});
test("åbenbar -> åbenbar", function() {deepEqual( Stem("åbenbar"), "åbenbar");});
test("åbenbare -> åbenbar", function() {deepEqual( Stem("åbenbare"), "åbenbar");});
test("åbenbared -> åbenbared", function() {deepEqual( Stem("åbenbared"), "åbenbared");});
test("åbenbarede -> åbenbared", function() {deepEqual( Stem("åbenbarede"), "åbenbared");});
test("åbenbaredes -> åbenbared", function() {deepEqual( Stem("åbenbaredes"), "åbenbared");});
test("åbenbarer -> åbenbar", function() {deepEqual( Stem("åbenbarer"), "åbenbar");});
test("åbenbares -> åbenbar", function() {deepEqual( Stem("åbenbares"), "åbenbar");});
test("åbenbaret -> åbenbar", function() {deepEqual( Stem("åbenbaret"), "åbenbar");});
test("åbenbart -> åbenbart", function() {deepEqual( Stem("åbenbart"), "åbenbart");});
test("åbenlys -> åbenly", function() {deepEqual( Stem("åbenlys"), "åbenly");});
test("åbenlyst -> åbenlyst", function() {deepEqual( Stem("åbenlyst"), "åbenlyst");});
test("åbenmundede -> åbenmunded", function() {deepEqual( Stem("åbenmundede"), "åbenmunded");});
test("åbenmundet -> åbenmund", function() {deepEqual( Stem("åbenmundet"), "åbenmund");});
test("åbent -> åbent", function() {deepEqual( Stem("åbent"), "åbent");});
test("åbn -> åbn", function() {deepEqual( Stem("åbn"), "åbn");});
test("åbne -> åbn", function() {deepEqual( Stem("åbne"), "åbn");});
test("åbned -> åbned", function() {deepEqual( Stem("åbned"), "åbned");});
test("åbnede -> åbned", function() {deepEqual( Stem("åbnede"), "åbned");});
test("åbnedes -> åbned", function() {deepEqual( Stem("åbnedes"), "åbned");});
test("åbner -> åbn", function() {deepEqual( Stem("åbner"), "åbn");});
test("åbnes -> åbn", function() {deepEqual( Stem("åbnes"), "åbn");});
test("åbnet -> åbn", function() {deepEqual( Stem("åbnet"), "åbn");});
test("åd -> åd", function() {deepEqual( Stem("åd"), "åd");});
test("åde -> åde", function() {deepEqual( Stem("åde"), "åde");});
test("ånd -> ånd", function() {deepEqual( Stem("ånd"), "ånd");});
test("ånde -> ånd", function() {deepEqual( Stem("ånde"), "ånd");});
test("åndede -> ånded", function() {deepEqual( Stem("åndede"), "ånded");});
test("åndelig -> ånd", function() {deepEqual( Stem("åndelig"), "ånd");});
test("åndelige -> ånd", function() {deepEqual( Stem("åndelige"), "ånd");});
test("åndeligt -> ånd", function() {deepEqual( Stem("åndeligt"), "ånd");});
test("ånden -> ånd", function() {deepEqual( Stem("ånden"), "ånd");});
test("ånder -> ånd", function() {deepEqual( Stem("ånder"), "ånd");});
test("år -> år", function() {deepEqual( Stem("år"), "år");});
test("årgamle -> årgaml", function() {deepEqual( Stem("årgamle"), "årgaml");});
test("årgammel -> årgammel", function() {deepEqual( Stem("årgammel"), "årgammel");});
test("årgammelt -> årgammelt", function() {deepEqual( Stem("årgammelt"), "årgammelt");});
test("årle -> årl", function() {deepEqual( Stem("årle"), "årl");});
test("årlig -> årl", function() {deepEqual( Stem("årlig"), "årl");});
test("årlige -> årl", function() {deepEqual( Stem("årlige"), "årl");});
test("års -> års", function() {deepEqual( Stem("års"), "års");});
test("årvågen -> årvåg", function() {deepEqual( Stem("årvågen"), "årvåg");});
test("årvågne -> årvågn", function() {deepEqual( Stem("årvågne"), "årvågn");});
test("æbletræ -> æbletræ", function() {deepEqual( Stem("æbletræ"), "æbletræ");});
test("æd -> æd", function() {deepEqual( Stem("æd"), "æd");});
test("æde -> æde", function() {deepEqual( Stem("æde"), "æde");});
test("ædel -> ædel", function() {deepEqual( Stem("ædel"), "ædel");});
test("ædelbåren -> ædelbår", function() {deepEqual( Stem("ædelbåren"), "ædelbår");});
test("ædelbårne -> ædelbårn", function() {deepEqual( Stem("ædelbårne"), "ædelbårn");});
test("ædelt -> ædelt", function() {deepEqual( Stem("ædelt"), "ædelt");});
test("ædende -> ædend", function() {deepEqual( Stem("ædende"), "ædend");});
test("æder -> æder", function() {deepEqual( Stem("æder"), "æder");});
test("ædes -> ædes", function() {deepEqual( Stem("ædes"), "ædes");});
test("ædle -> ædl", function() {deepEqual( Stem("ædle"), "ædl");});
test("ædru -> ædru", function() {deepEqual( Stem("ædru"), "ædru");});
test("ædrue -> ædru", function() {deepEqual( Stem("ædrue"), "ædru");});
test("ædruelig -> ædru", function() {deepEqual( Stem("ædruelig"), "ædru");});
test("ædruelige -> ædru", function() {deepEqual( Stem("ædruelige"), "ædru");});
test("ædt -> ædt", function() {deepEqual( Stem("ædt"), "ædt");});
test("ægge -> ægg", function() {deepEqual( Stem("ægge"), "ægg");});
test("ægged -> ægged", function() {deepEqual( Stem("ægged"), "ægged");});
test("æggede -> ægged", function() {deepEqual( Stem("æggede"), "ægged");});
test("ægger -> ægg", function() {deepEqual( Stem("ægger"), "ægg");});
test("ægget -> ægg", function() {deepEqual( Stem("ægget"), "ægg");});
test("ægte -> ægt", function() {deepEqual( Stem("ægte"), "ægt");});
test("ægtede -> ægted", function() {deepEqual( Stem("ægtede"), "ægted");});
test("ægter -> ægt", function() {deepEqual( Stem("ægter"), "ægt");});
test("ægtes -> ægt", function() {deepEqual( Stem("ægtes"), "ægt");});
test("ægteskabelige -> ægteskab", function() {deepEqual( Stem("ægteskabelige"), "ægteskab");});
test("ægtet -> ægt", function() {deepEqual( Stem("ægtet"), "ægt");});
test("ægyptisk -> ægyptisk", function() {deepEqual( Stem("ægyptisk"), "ægyptisk");});
test("ældes -> æld", function() {deepEqual( Stem("ældes"), "æld");});
test("ældgamle -> ældgaml", function() {deepEqual( Stem("ældgamle"), "ældgaml");});
test("ældgammelt -> ældgammelt", function() {deepEqual( Stem("ældgammelt"), "ældgammelt");});
test("ældre -> ældr", function() {deepEqual( Stem("ældre"), "ældr");});
test("ældste -> ældst", function() {deepEqual( Stem("ældste"), "ældst");});
test("ældstes -> ældst", function() {deepEqual( Stem("ældstes"), "ældst");});
test("ælt -> ælt", function() {deepEqual( Stem("ælt"), "ælt");});
test("æltede -> ælted", function() {deepEqual( Stem("æltede"), "ælted");});
test("ælter -> ælt", function() {deepEqual( Stem("ælter"), "ælt");});
test("æltet -> ælt", function() {deepEqual( Stem("æltet"), "ælt");});
test("ændofrene -> ændofr", function() {deepEqual( Stem("ændofrene"), "ændofr");});
test("ændre -> ændr", function() {deepEqual( Stem("ændre"), "ændr");});
test("ændrede -> ændred", function() {deepEqual( Stem("ændrede"), "ændred");});
test("ændredes -> ændred", function() {deepEqual( Stem("ændredes"), "ændred");});
test("ændrer -> ændr", function() {deepEqual( Stem("ændrer"), "ændr");});
test("ængste -> ængst", function() {deepEqual( Stem("ængste"), "ængst");});
test("ængsted -> ængsted", function() {deepEqual( Stem("ængsted"), "ængsted");});
test("ængstede -> ængsted", function() {deepEqual( Stem("ængstede"), "ængsted");});
test("ængstelig -> ængst", function() {deepEqual( Stem("ængstelig"), "ængst");});
test("ængstelige -> ængst", function() {deepEqual( Stem("ængstelige"), "ængst");});
test("ængster -> ængst", function() {deepEqual( Stem("ængster"), "ængst");});
test("ængstes -> ængst", function() {deepEqual( Stem("ængstes"), "ængst");});
test("ænse -> æns", function() {deepEqual( Stem("ænse"), "æns");});
test("ænsed -> ænsed", function() {deepEqual( Stem("ænsed"), "ænsed");});
test("ænsede -> ænsed", function() {deepEqual( Stem("ænsede"), "ænsed");});
test("ænser -> æns", function() {deepEqual( Stem("ænser"), "æns");});
test("ænses -> æns", function() {deepEqual( Stem("ænses"), "æns");});
test("ær -> ær", function() {deepEqual( Stem("ær"), "ær");});
test("ærbare -> ærbar", function() {deepEqual( Stem("ærbare"), "ærbar");});
test("ærbart -> ærbart", function() {deepEqual( Stem("ærbart"), "ærbart");});
test("ære -> ære", function() {deepEqual( Stem("ære"), "ære");});
test("æred -> æred", function() {deepEqual( Stem("æred"), "æred");});
test("ærede -> æred", function() {deepEqual( Stem("ærede"), "æred");});
test("ærefolde -> ærefold", function() {deepEqual( Stem("ærefolde"), "ærefold");});
test("ærer -> ærer", function() {deepEqual( Stem("ærer"), "ærer");});
test("æres -> æres", function() {deepEqual( Stem("æres"), "æres");});
test("æret -> æret", function() {deepEqual( Stem("æret"), "æret");});
test("ærgrede -> ærgred", function() {deepEqual( Stem("ærgrede"), "ærgred");});
test("ærlige -> ærl", function() {deepEqual( Stem("ærlige"), "ærl");});
test("ærligt -> ærl", function() {deepEqual( Stem("ærligt"), "ærl");});
test("ærværdig -> ærværd", function() {deepEqual( Stem("ærværdig"), "ærværd");});
test("æsker -> æsk", function() {deepEqual( Stem("æsker"), "æsk");});
test("øde -> øde", function() {deepEqual( Stem("øde"), "øde");});
test("ødelagde -> ødelag", function() {deepEqual( Stem("ødelagde"), "ødelag");});
test("ødelagt -> ødelag", function() {deepEqual( Stem("ødelagt"), "ødelag");});
test("ødelagte -> ødelag", function() {deepEqual( Stem("ødelagte"), "ødelag");});
test("ødelæg -> ødelæg", function() {deepEqual( Stem("ødelæg"), "ødelæg");});
test("ødelægge -> ødelæg", function() {deepEqual( Stem("ødelægge"), "ødelæg");});
test("ødelæggelsens -> ødelæg", function() {deepEqual( Stem("ødelæggelsens"), "ødelæg");});
test("ødelæggende -> ødelæg", function() {deepEqual( Stem("ødelæggende"), "ødelæg");});
test("ødelægger -> ødelæg", function() {deepEqual( Stem("ødelægger"), "ødelæg");});
test("ødelægges -> ødelæg", function() {deepEqual( Stem("ødelægges"), "ødelæg");});
test("øder -> øder", function() {deepEqual( Stem("øder"), "øder");});
test("ødes -> ødes", function() {deepEqual( Stem("ødes"), "ødes");});
test("ødsled -> ødsled", function() {deepEqual( Stem("ødsled"), "ødsled");});
test("ødsler -> ødsl", function() {deepEqual( Stem("ødsler"), "ødsl");});
test("ødt -> ødt", function() {deepEqual( Stem("ødt"), "ødt");});
test("ødte -> ødt", function() {deepEqual( Stem("ødte"), "ødt");});
test("ødtes -> ødt", function() {deepEqual( Stem("ødtes"), "ødt");});
test("øg -> øg", function() {deepEqual( Stem("øg"), "øg");});
test("øge -> øge", function() {deepEqual( Stem("øge"), "øge");});
test("øged -> øged", function() {deepEqual( Stem("øged"), "øged");});
test("øgede -> øged", function() {deepEqual( Stem("øgede"), "øged");});
test("øger -> øger", function() {deepEqual( Stem("øger"), "øger");});
test("øges -> øges", function() {deepEqual( Stem("øges"), "øges");});
test("øget -> øget", function() {deepEqual( Stem("øget"), "øget");});
test("øjeblik -> øjeblik", function() {deepEqual( Stem("øjeblik"), "øjeblik");});
test("øjeblikkelig -> øjeblik", function() {deepEqual( Stem("øjeblikkelig"), "øjeblik");});
test("øjet -> øjet", function() {deepEqual( Stem("øjet"), "øjet");});
test("øjne -> øjn", function() {deepEqual( Stem("øjne"), "øjn");});
test("øjnede -> øjned", function() {deepEqual( Stem("øjnede"), "øjned");});
test("øjner -> øjn", function() {deepEqual( Stem("øjner"), "øjn");});
test("ømme -> ømm", function() {deepEqual( Stem("ømme"), "ømm");});
test("ømmede -> ømmed", function() {deepEqual( Stem("ømmede"), "ømmed");});
test("ønner -> ønn", function() {deepEqual( Stem("ønner"), "ønn");});
test("ønske -> ønsk", function() {deepEqual( Stem("ønske"), "ønsk");});
test("ønsked -> ønsked", function() {deepEqual( Stem("ønsked"), "ønsked");});
test("ønskede -> ønsked", function() {deepEqual( Stem("ønskede"), "ønsked");});
test("ønsker -> ønsk", function() {deepEqual( Stem("ønsker"), "ønsk");});
test("ønsket -> ønsk", function() {deepEqual( Stem("ønsket"), "ønsk");});
test("øre -> øre", function() {deepEqual( Stem("øre"), "øre");});
test("ører -> ører", function() {deepEqual( Stem("ører"), "ører");});
test("øret -> øret", function() {deepEqual( Stem("øret"), "øret");});
test("ørkesløse -> ørkesløs", function() {deepEqual( Stem("ørkesløse"), "ørkesløs");});
test("ørkesløst -> ørkesløs", function() {deepEqual( Stem("ørkesløst"), "ørkesløs");});
test("ørn -> ørn", function() {deepEqual( Stem("ørn"), "ørn");});
test("øse -> øse", function() {deepEqual( Stem("øse"), "øse");});
test("øser -> øser", function() {deepEqual( Stem("øser"), "øser");});
test("øses -> øses", function() {deepEqual( Stem("øses"), "øses");});
test("øst -> øst", function() {deepEqual( Stem("øst"), "øst");});
test("øste -> øst", function() {deepEqual( Stem("øste"), "øst");});
test("østen -> øst", function() {deepEqual( Stem("østen"), "øst");});
test("østerfra -> østerfra", function() {deepEqual( Stem("østerfra"), "østerfra");});
test("østerpå -> østerpå", function() {deepEqual( Stem("østerpå"), "østerpå");});
test("østlig -> øst", function() {deepEqual( Stem("østlig"), "øst");});
test("østport -> østport", function() {deepEqual( Stem("østport"), "østport");});
test("østpå -> østpå", function() {deepEqual( Stem("østpå"), "østpå");});
test("østre -> østr", function() {deepEqual( Stem("østre"), "østr");});
test("øv -> øv", function() {deepEqual( Stem("øv"), "øv");});
test("øve -> øve", function() {deepEqual( Stem("øve"), "øve");});
test("øved -> øved", function() {deepEqual( Stem("øved"), "øved");});
test("øvede -> øved", function() {deepEqual( Stem("øvede"), "øved");});
test("øvedes -> øved", function() {deepEqual( Stem("øvedes"), "øved");});
test("øver -> øver", function() {deepEqual( Stem("øver"), "øver");});
test("øverst -> øverst", function() {deepEqual( Stem("øverst"), "øverst");});
test("øverste -> øverst", function() {deepEqual( Stem("øverste"), "øverst");});
test("øves -> øves", function() {deepEqual( Stem("øves"), "øves");});
test("øvet -> øvet", function() {deepEqual( Stem("øvet"), "øvet");});
test("øvre -> øvr", function() {deepEqual( Stem("øvre"), "øvr");});
test("øvrig -> øvr", function() {deepEqual( Stem("øvrig"), "øvr");});
test("øvrige -> øvr", function() {deepEqual( Stem("øvrige"), "øvr");});
test("øvrigt -> øvr", function() {deepEqual( Stem("øvrigt"), "øvr");});
