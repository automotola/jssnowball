QUnit.config.hidepassed = true;
var Stem = snowballFactory.newStemmer('hungarian').stem;
test("abazinok -> abazin", function() {deepEqual( Stem("abazinok"), "abazin");});
test("abazin -> abaz", function() {deepEqual( Stem("abazin"), "abaz");});
test("abba -> ab", function() {deepEqual( Stem("abba"), "ab");});
test("abbahagyja -> abbahagy", function() {deepEqual( Stem("abbahagyja"), "abbahagy");});
test("abbahagyni -> abbahagyn", function() {deepEqual( Stem("abbahagyni"), "abbahagyn");});
test("abbahagynám -> abbahagyna", function() {deepEqual( Stem("abbahagynám"), "abbahagyna");});
test("abbahagyom -> abbahagy", function() {deepEqual( Stem("abbahagyom"), "abbahagy");});
test("abbahagyott -> abbahagyot", function() {deepEqual( Stem("abbahagyott"), "abbahagyot");});
test("abbahagyta -> abbahagyt", function() {deepEqual( Stem("abbahagyta"), "abbahagyt");});
test("abbahagytam -> abbahagyt", function() {deepEqual( Stem("abbahagytam"), "abbahagyt");});
test("abbahagytuk -> abbahagyt", function() {deepEqual( Stem("abbahagytuk"), "abbahagyt");});
test("abbahagyták -> abbahagyta", function() {deepEqual( Stem("abbahagyták"), "abbahagyta");});
test("abbahagyása -> abbahagyás", function() {deepEqual( Stem("abbahagyása"), "abbahagyás");});
test("abbahagyását -> abbahagyás", function() {deepEqual( Stem("abbahagyását"), "abbahagyás");});
test("abbahagy -> abbahagy", function() {deepEqual( Stem("abbahagy"), "abbahagy");});
test("abbamaradni -> abbamaradn", function() {deepEqual( Stem("abbamaradni"), "abbamaradn");});
test("abbamaradt -> abbamar", function() {deepEqual( Stem("abbamaradt"), "abbamar");});
test("abbamarad -> abbamar", function() {deepEqual( Stem("abbamarad"), "abbamar");});
test("abbéli -> abbél", function() {deepEqual( Stem("abbéli"), "abbél");});
test("abból -> ab", function() {deepEqual( Stem("abból"), "ab");});
test("abban -> ab", function() {deepEqual( Stem("abban"), "ab");});
test("abc-be -> abc-", function() {deepEqual( Stem("abc-be"), "abc-");});
test("abc -> abc", function() {deepEqual( Stem("abc"), "abc");});
test("abházokhoz -> abház", function() {deepEqual( Stem("abházokhoz"), "abház");});
test("abházok -> abház", function() {deepEqual( Stem("abházok"), "abház");});
test("abház -> abház", function() {deepEqual( Stem("abház"), "abház");});
test("ablaka -> abl", function() {deepEqual( Stem("ablaka"), "abl");});
test("ablakai -> abl", function() {deepEqual( Stem("ablakai"), "abl");});
test("ablakaikkal -> abl", function() {deepEqual( Stem("ablakaikkal"), "abl");});
test("ablakainak -> abl", function() {deepEqual( Stem("ablakainak"), "abl");});
test("ablakait -> abl", function() {deepEqual( Stem("ablakait"), "abl");});
test("ablakba -> abl", function() {deepEqual( Stem("ablakba"), "abl");});
test("ablakban -> abl", function() {deepEqual( Stem("ablakban"), "abl");});
test("ablakból -> abl", function() {deepEqual( Stem("ablakból"), "abl");});
test("ablakhoz -> abl", function() {deepEqual( Stem("ablakhoz"), "abl");});
test("ablakkal -> abl", function() {deepEqual( Stem("ablakkal"), "abl");});
test("ablaknál -> abl", function() {deepEqual( Stem("ablaknál"), "abl");});
test("ablakok -> ablak", function() {deepEqual( Stem("ablakok"), "ablak");});
test("ablakokat -> ablak", function() {deepEqual( Stem("ablakokat"), "ablak");});
test("ablakokkal -> ablak", function() {deepEqual( Stem("ablakokkal"), "ablak");});
test("ablakokon -> ablak", function() {deepEqual( Stem("ablakokon"), "ablak");});
test("ablakoktól -> ablak", function() {deepEqual( Stem("ablakoktól"), "ablak");});
test("ablakon -> abl", function() {deepEqual( Stem("ablakon"), "abl");});
test("ablakot -> abl", function() {deepEqual( Stem("ablakot"), "abl");});
test("ablakra -> abl", function() {deepEqual( Stem("ablakra"), "abl");});
test("ablakában -> abl", function() {deepEqual( Stem("ablakában"), "abl");});
test("ablakából -> abl", function() {deepEqual( Stem("ablakából"), "abl");});
test("ablakán -> abl", function() {deepEqual( Stem("ablakán"), "abl");});
test("ablakának -> abl", function() {deepEqual( Stem("ablakának"), "abl");});
test("ablakátablak -> ablakátabl", function() {deepEqual( Stem("ablakátablak"), "ablakátabl");});
test("ablakemelő -> ablakemelő", function() {deepEqual( Stem("ablakemelő"), "ablakemelő");});
test("ablakkeret -> ablakker", function() {deepEqual( Stem("ablakkeret"), "ablakker");});
test("ablakmosó -> ablakmosó", function() {deepEqual( Stem("ablakmosó"), "ablakmosó");});
test("ablaknyílásokkal -> ablaknyílás", function() {deepEqual( Stem("ablaknyílásokkal"), "ablaknyílás");});
test("ablaknyílás -> ablaknyílás", function() {deepEqual( Stem("ablaknyílás"), "ablaknyílás");});
test("ablaküvegen -> ablaküveg", function() {deepEqual( Stem("ablaküvegen"), "ablaküveg");});
test("ablaküveget -> ablaküveg", function() {deepEqual( Stem("ablaküveget"), "ablaküveg");});
test("ablaküveg -> ablaküveg", function() {deepEqual( Stem("ablaküveg"), "ablaküveg");});
test("ablakrésekhez -> ablakrés", function() {deepEqual( Stem("ablakrésekhez"), "ablakrés");});
test("ablakrések -> ablakrés", function() {deepEqual( Stem("ablakrések"), "ablakrés");});
test("ablakrés -> ablakrés", function() {deepEqual( Stem("ablakrés"), "ablakrés");});
test("ablaktalan -> ablaktal", function() {deepEqual( Stem("ablaktalan"), "ablaktal");});
test("ablaktáblán -> ablaktábl", function() {deepEqual( Stem("ablaktáblán"), "ablaktábl");});
test("ablaktábla -> ablaktábl", function() {deepEqual( Stem("ablaktábla"), "ablaktábl");});
test("ablakos -> ablakos", function() {deepEqual( Stem("ablakos"), "ablakos");});
test("ablakpárkánynak -> ablakpárkány", function() {deepEqual( Stem("ablakpárkánynak"), "ablakpárkány");});
test("ablakpárkányon -> ablakpárkány", function() {deepEqual( Stem("ablakpárkányon"), "ablakpárkány");});
test("ablakpárkány -> ablakpárkány", function() {deepEqual( Stem("ablakpárkány"), "ablakpárkány");});
test("abnormális -> abnormális", function() {deepEqual( Stem("abnormális"), "abnormális");});
test("abortuszon -> abortusz", function() {deepEqual( Stem("abortuszon"), "abortusz");});
test("abortusz -> abortusz", function() {deepEqual( Stem("abortusz"), "abortusz");});
test("abroncsok -> abroncs", function() {deepEqual( Stem("abroncsok"), "abroncs");});
test("abroncs -> abroncs", function() {deepEqual( Stem("abroncs"), "abroncs");});
test("abrosszal -> abrosz", function() {deepEqual( Stem("abrosszal"), "abrosz");});
test("abrosz -> abrosz", function() {deepEqual( Stem("abrosz"), "abrosz");});
test("abszolutisztikus -> abszolutisztikus", function() {deepEqual( Stem("abszolutisztikus"), "abszolutisztikus");});
test("abszolutizmus -> abszolutizmus", function() {deepEqual( Stem("abszolutizmus"), "abszolutizmus");});
test("abszolváltam -> abszolvált", function() {deepEqual( Stem("abszolváltam"), "abszolvált");});
test("abszolvál -> abszolvál", function() {deepEqual( Stem("abszolvál"), "abszolvál");});
test("abszolúciót -> abszolúció", function() {deepEqual( Stem("abszolúciót"), "abszolúció");});
test("abszolúció -> abszolúció", function() {deepEqual( Stem("abszolúció"), "abszolúció");});
test("abszolúte -> abszolút", function() {deepEqual( Stem("abszolúte"), "abszolút");});
test("abszolút -> abszolú", function() {deepEqual( Stem("abszolút"), "abszolú");});
test("absztrakció -> absztrakció", function() {deepEqual( Stem("absztrakció"), "absztrakció");});
test("absztrakt -> absztr", function() {deepEqual( Stem("absztrakt"), "absztr");});
test("abszurd -> abszur", function() {deepEqual( Stem("abszurd"), "abszur");});
test("abszurditásán -> abszurditás", function() {deepEqual( Stem("abszurditásán"), "abszurditás");});
test("abszurditás -> abszurditás", function() {deepEqual( Stem("abszurditás"), "abszurditás");});
test("abszurdum -> abszurdu", function() {deepEqual( Stem("abszurdum"), "abszurdu");});
test("accountokról -> account", function() {deepEqual( Stem("accountokról"), "account");});
test("accountok -> account", function() {deepEqual( Stem("accountok"), "account");});
test("account -> accoun", function() {deepEqual( Stem("account"), "accoun");});
test("acetilszalicilsav -> acetilszalicilsav", function() {deepEqual( Stem("acetilszalicilsav"), "acetilszalicilsav");});
test("achátból -> achát", function() {deepEqual( Stem("achátból"), "achát");});
test("achát -> ach", function() {deepEqual( Stem("achát"), "ach");});
test("acsony -> acsony", function() {deepEqual( Stem("acsony"), "acsony");});
test("activával -> activ", function() {deepEqual( Stem("activával"), "activ");});
test("activa -> activ", function() {deepEqual( Stem("activa"), "activ");});
test("acélajtókon -> acélajtó", function() {deepEqual( Stem("acélajtókon"), "acélajtó");});
test("acélajtó -> acélajtó", function() {deepEqual( Stem("acélajtó"), "acélajtó");});
test("acélból -> acél", function() {deepEqual( Stem("acélból"), "acél");});
test("acéllal -> acél", function() {deepEqual( Stem("acéllal"), "acél");});
test("acélt -> acél", function() {deepEqual( Stem("acélt"), "acél");});
test("acél -> acél", function() {deepEqual( Stem("acél"), "acél");});
test("acélgyártója -> acélgyártó", function() {deepEqual( Stem("acélgyártója"), "acélgyártó");});
test("acélgyártó -> acélgyártó", function() {deepEqual( Stem("acélgyártó"), "acélgyártó");});
test("acélipari -> acélipar", function() {deepEqual( Stem("acélipari"), "acélipar");});
test("acélkemény -> acélkemény", function() {deepEqual( Stem("acélkemény"), "acélkemény");});
test("acélrúddal -> acélrú", function() {deepEqual( Stem("acélrúddal"), "acélrú");});
test("acélrudat -> acélru", function() {deepEqual( Stem("acélrudat"), "acélru");});
test("acélrúd -> acélrú", function() {deepEqual( Stem("acélrúd"), "acélrú");});
test("acéltermelésének -> acéltermelés", function() {deepEqual( Stem("acéltermelésének"), "acéltermelés");});
test("acéltermelés -> acéltermelés", function() {deepEqual( Stem("acéltermelés"), "acéltermelés");});
test("acélvázas -> acélvázas", function() {deepEqual( Stem("acélvázas"), "acélvázas");});
test("acélváz -> acélváz", function() {deepEqual( Stem("acélváz"), "acélváz");});
test("adagjánál -> adag", function() {deepEqual( Stem("adagjánál"), "adag");});
test("adagját -> adag", function() {deepEqual( Stem("adagját"), "adag");});
test("adagokkal -> adag", function() {deepEqual( Stem("adagokkal"), "adag");});
test("adagot -> adag", function() {deepEqual( Stem("adagot"), "adag");});
test("adagunkat -> adag", function() {deepEqual( Stem("adagunkat"), "adag");});
test("adag -> adag", function() {deepEqual( Stem("adag"), "adag");});
test("adagolt -> adagol", function() {deepEqual( Stem("adagolt"), "adagol");});
test("adagolt -> adagol", function() {deepEqual( Stem("adagolt"), "adagol");});
test("adagolási -> adagolás", function() {deepEqual( Stem("adagolási"), "adagolás");});
test("adagol -> adagol", function() {deepEqual( Stem("adagol"), "adagol");});
test("adagolójába -> adagoló", function() {deepEqual( Stem("adagolójába"), "adagoló");});
test("adagolós -> adagolós", function() {deepEqual( Stem("adagolós"), "adagolós");});
test("adakozókedv -> adakozókedv", function() {deepEqual( Stem("adakozókedv"), "adakozókedv");});
test("adakozóknak -> adakozó", function() {deepEqual( Stem("adakozóknak"), "adakozó");});
test("adakoz -> adakoz", function() {deepEqual( Stem("adakoz"), "adakoz");});
test("adalék -> adale", function() {deepEqual( Stem("adalék"), "adale");});
test("adaptert -> adapter", function() {deepEqual( Stem("adaptert"), "adapter");});
test("adapter -> adapter", function() {deepEqual( Stem("adapter"), "adapter");});
test("adaptációja -> adaptáció", function() {deepEqual( Stem("adaptációja"), "adaptáció");});
test("adaptációs -> adaptációs", function() {deepEqual( Stem("adaptációs"), "adaptációs");});
test("adaptáció -> adaptáció", function() {deepEqual( Stem("adaptáció"), "adaptáció");});
test("adaptálják -> adaptálja", function() {deepEqual( Stem("adaptálják"), "adaptálja");});
test("adaptálása -> adaptálás", function() {deepEqual( Stem("adaptálása"), "adaptálás");});
test("adaptáló -> adaptáló", function() {deepEqual( Stem("adaptáló"), "adaptáló");});
test("adaptál -> adaptál", function() {deepEqual( Stem("adaptál"), "adaptál");});
test("adaptív -> adaptív", function() {deepEqual( Stem("adaptív"), "adaptív");});
test("adata -> adat", function() {deepEqual( Stem("adata"), "adat");});
test("adatai -> adat", function() {deepEqual( Stem("adatai"), "adat");});
test("adataiban -> adat", function() {deepEqual( Stem("adataiban"), "adat");});
test("adataiból -> adat", function() {deepEqual( Stem("adataiból"), "adat");});
test("adataik -> adat", function() {deepEqual( Stem("adataik"), "adat");});
test("adataikat -> adat", function() {deepEqual( Stem("adataikat"), "adat");});
test("adatainak -> adat", function() {deepEqual( Stem("adatainak"), "adat");});
test("adataink -> adat", function() {deepEqual( Stem("adataink"), "adat");});
test("adatainkat -> adat", function() {deepEqual( Stem("adatainkat"), "adat");});
test("adataira -> adat", function() {deepEqual( Stem("adataira"), "adat");});
test("adatait -> adat", function() {deepEqual( Stem("adatait"), "adat");});
test("adataival -> adat", function() {deepEqual( Stem("adataival"), "adat");});
test("adat -> ad", function() {deepEqual( Stem("adat"), "ad");});
test("adatból -> adat", function() {deepEqual( Stem("adatból"), "adat");});
test("adatként -> adat", function() {deepEqual( Stem("adatként"), "adat");});
test("adatnak -> adat", function() {deepEqual( Stem("adatnak"), "adat");});
test("adatok -> adat", function() {deepEqual( Stem("adatok"), "adat");});
test("adatokat -> adat", function() {deepEqual( Stem("adatokat"), "adat");});
test("adatokba -> adat", function() {deepEqual( Stem("adatokba"), "adat");});
test("adatokban -> adat", function() {deepEqual( Stem("adatokban"), "adat");});
test("adatokból -> adat", function() {deepEqual( Stem("adatokból"), "adat");});
test("adatokhoz -> adat", function() {deepEqual( Stem("adatokhoz"), "adat");});
test("adatokig -> adat", function() {deepEqual( Stem("adatokig"), "adat");});
test("adatokkal -> adat", function() {deepEqual( Stem("adatokkal"), "adat");});
test("adatoknak -> adat", function() {deepEqual( Stem("adatoknak"), "adat");});
test("adatoknak -> adat", function() {deepEqual( Stem("adatoknak"), "adat");});
test("adatoknál -> adat", function() {deepEqual( Stem("adatoknál"), "adat");});
test("adatokon -> adat", function() {deepEqual( Stem("adatokon"), "adat");});
test("adatokra -> adat", function() {deepEqual( Stem("adatokra"), "adat");});
test("adatokról -> adat", function() {deepEqual( Stem("adatokról"), "adat");});
test("adatot -> adat", function() {deepEqual( Stem("adatot"), "adat");});
test("adatra -> adat", function() {deepEqual( Stem("adatra"), "adat");});
test("adatról -> adat", function() {deepEqual( Stem("adatról"), "adat");});
test("adattal -> ad", function() {deepEqual( Stem("adattal"), "ad");});
test("adatát -> adat", function() {deepEqual( Stem("adatát"), "adat");});
test("adatának -> adat", function() {deepEqual( Stem("adatának"), "adat");});
test("adatanalízis -> adatanalízis", function() {deepEqual( Stem("adatanalízis"), "adatanalízis");});
test("adatbankként -> adatba", function() {deepEqual( Stem("adatbankként"), "adatba");});
test("adatbank -> adatba", function() {deepEqual( Stem("adatbank"), "adatba");});
test("adatbejelentési -> adatbejelentés", function() {deepEqual( Stem("adatbejelentési"), "adatbejelentés");});
test("adatbejelentés -> adatbejelentés", function() {deepEqual( Stem("adatbejelentés"), "adatbejelentés");});
test("adatbevitelben -> adatbevitel", function() {deepEqual( Stem("adatbevitelben"), "adatbevitel");});
test("adatbevitel -> adatbevitel", function() {deepEqual( Stem("adatbevitel"), "adatbevitel");});
test("adatbeviteli -> adatbevitel", function() {deepEqual( Stem("adatbeviteli"), "adatbevitel");});
test("adatbitek -> adatb", function() {deepEqual( Stem("adatbitek"), "adatb");});
test("adatbiteket -> adatb", function() {deepEqual( Stem("adatbiteket"), "adatb");});
test("adatbitekké -> adatb", function() {deepEqual( Stem("adatbitekké"), "adatb");});
test("adatbitre -> adatbit", function() {deepEqual( Stem("adatbitre"), "adatbit");});
test("adatbit -> adatb", function() {deepEqual( Stem("adatbit"), "adatb");});
test("adatblokkok -> adatblokk", function() {deepEqual( Stem("adatblokkok"), "adatblokk");});
test("adatblokkokat -> adatblokk", function() {deepEqual( Stem("adatblokkokat"), "adatblokk");});
test("adatblokk -> adatblok", function() {deepEqual( Stem("adatblokk"), "adatblok");});
test("adatbányászat -> adatbányász", function() {deepEqual( Stem("adatbányászat"), "adatbányász");});
test("adatbányászati -> adatbányászat", function() {deepEqual( Stem("adatbányászati"), "adatbányászat");});
test("adatbányászatot -> adatbányászat", function() {deepEqual( Stem("adatbányászatot"), "adatbányászat");});
test("adatbányászattal -> adatbányász", function() {deepEqual( Stem("adatbányászattal"), "adatbányász");});
test("adatbázis -> adatbázis", function() {deepEqual( Stem("adatbázis"), "adatbázis");});
test("adatbázisa -> adatbázis", function() {deepEqual( Stem("adatbázisa"), "adatbázis");});
test("adatbázisba -> adatbázis", function() {deepEqual( Stem("adatbázisba"), "adatbázis");});
test("adatbázisban -> adatbázis", function() {deepEqual( Stem("adatbázisban"), "adatbázis");});
test("adatbázisból -> adatbázis", function() {deepEqual( Stem("adatbázisból"), "adatbázis");});
test("adatbázishoz -> adatbázis", function() {deepEqual( Stem("adatbázishoz"), "adatbázis");});
test("adatbázisnak -> adatbázis", function() {deepEqual( Stem("adatbázisnak"), "adatbázis");});
test("adatbázisok -> adatbázis", function() {deepEqual( Stem("adatbázisok"), "adatbázis");});
test("adatbázisokat -> adatbázis", function() {deepEqual( Stem("adatbázisokat"), "adatbázis");});
test("adatbázisokban -> adatbázis", function() {deepEqual( Stem("adatbázisokban"), "adatbázis");});
test("adatbázisokhoz -> adatbázis", function() {deepEqual( Stem("adatbázisokhoz"), "adatbázis");});
test("adatbázisokért -> adatbázis", function() {deepEqual( Stem("adatbázisokért"), "adatbázis");});
test("adatbázison -> adatbázis", function() {deepEqual( Stem("adatbázison"), "adatbázis");});
test("adatbázisra -> adatbázis", function() {deepEqual( Stem("adatbázisra"), "adatbázis");});
test("adatbázisról -> adatbázis", function() {deepEqual( Stem("adatbázisról"), "adatbázis");});
test("adatbázissal -> adatbázis", function() {deepEqual( Stem("adatbázissal"), "adatbázis");});
test("adatbázist -> adatbázis", function() {deepEqual( Stem("adatbázist"), "adatbázis");});
test("adatbázisába -> adatbázis", function() {deepEqual( Stem("adatbázisába"), "adatbázis");});
test("adatbázisában -> adatbázis", function() {deepEqual( Stem("adatbázisában"), "adatbázis");});
test("adatbázisából -> adatbázis", function() {deepEqual( Stem("adatbázisából"), "adatbázis");});
test("adatbázis-beli -> adatbázis-bel", function() {deepEqual( Stem("adatbázis-beli"), "adatbázis-bel");});
test("adatbázis-cache -> adatbázis-cach", function() {deepEqual( Stem("adatbázis-cache"), "adatbázis-cach");});
test("adatbázis-fejlesztésben -> adatbázis-fejlesztés", function() {deepEqual( Stem("adatbázis-fejlesztésben"), "adatbázis-fejlesztés");});
test("adatbázis-infrastruktúráját -> adatbázis-infrastruktúrá", function() {deepEqual( Stem("adatbázis-infrastruktúráját"), "adatbázis-infrastruktúrá");});
test("adatbázis-kezelés -> adatbázis-kezelés", function() {deepEqual( Stem("adatbázis-kezelés"), "adatbázis-kezelés");});
test("adatbázis-kezelést -> adatbázis-kezelés", function() {deepEqual( Stem("adatbázis-kezelést"), "adatbázis-kezelés");});
test("adatbázis-kezelő -> adatbázis-kezelő", function() {deepEqual( Stem("adatbázis-kezelő"), "adatbázis-kezelő");});
test("adatbázis-kezelői -> adatbázis-kezelő", function() {deepEqual( Stem("adatbázis-kezelői"), "adatbázis-kezelő");});
test("adatbázis-kezelőjéért -> adatbázis-kezelő", function() {deepEqual( Stem("adatbázis-kezelőjéért"), "adatbázis-kezelő");});
test("adatbázis-kezelők -> adatbázis-kezelő", function() {deepEqual( Stem("adatbázis-kezelők"), "adatbázis-kezelő");});
test("adatbázis-kezelőket -> adatbázis-kezelő", function() {deepEqual( Stem("adatbázis-kezelőket"), "adatbázis-kezelő");});
test("adatbázis-kezelőnek -> adatbázis-kezelő", function() {deepEqual( Stem("adatbázis-kezelőnek"), "adatbázis-kezelő");});
test("adatbázis-kezelőt -> adatbázis-kezelő", function() {deepEqual( Stem("adatbázis-kezelőt"), "adatbázis-kezelő");});
test("adatbáziskezelő -> adatbáziskezelő", function() {deepEqual( Stem("adatbáziskezelő"), "adatbáziskezelő");});
test("adatbázis-kiszolgáló -> adatbázis-kiszolgáló", function() {deepEqual( Stem("adatbázis-kiszolgáló"), "adatbázis-kiszolgáló");});
test("adatbázis-kiszolgálón -> adatbázis-kiszolgáló", function() {deepEqual( Stem("adatbázis-kiszolgálón"), "adatbázis-kiszolgáló");});
test("adatbázis-készítője -> adatbázis-készítő", function() {deepEqual( Stem("adatbázis-készítője"), "adatbázis-készítő");});
test("adatbázis-központú -> adatbázis-központú", function() {deepEqual( Stem("adatbázis-központú"), "adatbázis-központú");});
test("adatbázis-szerverre -> adatbázis-szerver", function() {deepEqual( Stem("adatbázis-szerverre"), "adatbázis-szerver");});
test("adatbázisszintű -> adatbázisszintű", function() {deepEqual( Stem("adatbázisszintű"), "adatbázisszintű");});
test("adatbázistermékére -> adatbázisterme", function() {deepEqual( Stem("adatbázistermékére"), "adatbázisterme");});
test("adatcsere -> adatcs", function() {deepEqual( Stem("adatcsere"), "adatcs");});
test("adatcsomag -> adatcsomag", function() {deepEqual( Stem("adatcsomag"), "adatcsomag");});
test("adatcsomagokba -> adatcsomag", function() {deepEqual( Stem("adatcsomagokba"), "adatcsomag");});
test("adatcsoportokhoz -> adatcsoport", function() {deepEqual( Stem("adatcsoportokhoz"), "adatcsoport");});
test("adatelemnek -> adatel", function() {deepEqual( Stem("adatelemnek"), "adatel");});
test("adatelemzésre -> adatelemzés", function() {deepEqual( Stem("adatelemzésre"), "adatelemzés");});
test("adatelérésű -> adatelérésű", function() {deepEqual( Stem("adatelérésű"), "adatelérésű");});
test("adatfajtákra -> adatfajta", function() {deepEqual( Stem("adatfajtákra"), "adatfajta");});
test("adatfeldolgozó -> adatfeldolgozó", function() {deepEqual( Stem("adatfeldolgozó"), "adatfeldolgozó");});
test("adatfeldolgozók -> adatfeldolgozó", function() {deepEqual( Stem("adatfeldolgozók"), "adatfeldolgozó");});
test("adatfelhalmozás -> adatfelhalmozás", function() {deepEqual( Stem("adatfelhalmozás"), "adatfelhalmozás");});
test("adatfeltöltés -> adatfeltöltés", function() {deepEqual( Stem("adatfeltöltés"), "adatfeltöltés");});
test("adatfelíráshoz -> adatfelírás", function() {deepEqual( Stem("adatfelíráshoz"), "adatfelírás");});
test("adatfolyam -> adatfoly", function() {deepEqual( Stem("adatfolyam"), "adatfoly");});
test("adatfolyamnak -> adatfoly", function() {deepEqual( Stem("adatfolyamnak"), "adatfoly");});
test("adatfolyamot -> adatfoly", function() {deepEqual( Stem("adatfolyamot"), "adatfoly");});
test("adatforgalma -> adatforgalm", function() {deepEqual( Stem("adatforgalma"), "adatforgalm");});
test("adatforgalmat -> adatforgal", function() {deepEqual( Stem("adatforgalmat"), "adatforgal");});
test("adatforgalomnak -> adatforgal", function() {deepEqual( Stem("adatforgalomnak"), "adatforgal");});
test("adatforgalom -> adatforgal", function() {deepEqual( Stem("adatforgalom"), "adatforgal");});
test("adatforgalom-szolgáltatási -> adatforgalom-szolgáltatás", function() {deepEqual( Stem("adatforgalom-szolgáltatási"), "adatforgalom-szolgáltatás");});
test("adatformátum -> adatformátu", function() {deepEqual( Stem("adatformátum"), "adatformátu");});
test("adatforrásból -> adatforrás", function() {deepEqual( Stem("adatforrásból"), "adatforrás");});
test("adatgyűjtemény -> adatgyűjtemény", function() {deepEqual( Stem("adatgyűjtemény"), "adatgyűjtemény");});
test("adatgyűjtés -> adatgyűjtés", function() {deepEqual( Stem("adatgyűjtés"), "adatgyűjtés");});
test("adatgyűjtésre -> adatgyűjtés", function() {deepEqual( Stem("adatgyűjtésre"), "adatgyűjtés");});
test("adathordozó -> adathordozó", function() {deepEqual( Stem("adathordozó"), "adathordozó");});
test("adathordozóban -> adathordozó", function() {deepEqual( Stem("adathordozóban"), "adathordozó");});
test("adathordozóhoz -> adathordozó", function() {deepEqual( Stem("adathordozóhoz"), "adathordozó");});
test("adathordozók -> adathordozó", function() {deepEqual( Stem("adathordozók"), "adathordozó");});
test("adathordozókat -> adathordozó", function() {deepEqual( Stem("adathordozókat"), "adathordozó");});
test("adathordozóra -> adathordozó", function() {deepEqual( Stem("adathordozóra"), "adathordozó");});
test("adathordozóról -> adathordozó", function() {deepEqual( Stem("adathordozóról"), "adathordozó");});
test("adathordozót -> adathordozó", function() {deepEqual( Stem("adathordozót"), "adathordozó");});
test("adathálózat -> adathálóz", function() {deepEqual( Stem("adathálózat"), "adathálóz");});
test("adathálózathoz -> adathálózat", function() {deepEqual( Stem("adathálózathoz"), "adathálózat");});
test("adathálózati -> adathálózat", function() {deepEqual( Stem("adathálózati"), "adathálózat");});
test("adathálózatokhoz -> adathálózat", function() {deepEqual( Stem("adathálózatokhoz"), "adathálózat");});
test("adathálózatán -> adathálózat", function() {deepEqual( Stem("adathálózatán"), "adathálózat");});
test("adathálózatának -> adathálózat", function() {deepEqual( Stem("adathálózatának"), "adathálózat");});
test("adatintegritás -> adatintegritás", function() {deepEqual( Stem("adatintegritás"), "adatintegritás");});
test("adatkapcsolat -> adatkapcsol", function() {deepEqual( Stem("adatkapcsolat"), "adatkapcsol");});
test("adatkapcsolati -> adatkapcsolat", function() {deepEqual( Stem("adatkapcsolati"), "adatkapcsolat");});
test("adatkapcsolatok -> adatkapcsolat", function() {deepEqual( Stem("adatkapcsolatok"), "adatkapcsolat");});
test("adatkapcsolatokat -> adatkapcsolat", function() {deepEqual( Stem("adatkapcsolatokat"), "adatkapcsolat");});
test("adatkapcsolatot -> adatkapcsolat", function() {deepEqual( Stem("adatkapcsolatot"), "adatkapcsolat");});
test("adatkezelés -> adatkezelés", function() {deepEqual( Stem("adatkezelés"), "adatkezelés");});
test("adatkezelése -> adatkezelés", function() {deepEqual( Stem("adatkezelése"), "adatkezelés");});
test("adatkezelésnek -> adatkezelés", function() {deepEqual( Stem("adatkezelésnek"), "adatkezelés");});
test("adatkezelésre -> adatkezelés", function() {deepEqual( Stem("adatkezelésre"), "adatkezelés");});
test("adatkezelést -> adatkezelés", function() {deepEqual( Stem("adatkezelést"), "adatkezelés");});
test("adatkommunikációból -> adatkommunikáció", function() {deepEqual( Stem("adatkommunikációból"), "adatkommunikáció");});
test("adatkommunikációját -> adatkommunikáció", function() {deepEqual( Stem("adatkommunikációját"), "adatkommunikáció");});
test("adatkommunikációra -> adatkommunikáció", function() {deepEqual( Stem("adatkommunikációra"), "adatkommunikáció");});
test("adatkommunikációs -> adatkommunikációs", function() {deepEqual( Stem("adatkommunikációs"), "adatkommunikációs");});
test("adatkábelt -> adatkábel", function() {deepEqual( Stem("adatkábelt"), "adatkábel");});
test("adatkészleteket -> adatkészlet", function() {deepEqual( Stem("adatkészleteket"), "adatkészlet");});
test("adatközlés -> adatközlés", function() {deepEqual( Stem("adatközlés"), "adatközlés");});
test("adatközlő -> adatközlő", function() {deepEqual( Stem("adatközlő"), "adatközlő");});
test("adatközpontba -> adatközpont", function() {deepEqual( Stem("adatközpontba"), "adatközpont");});
test("adatközponti -> adatközpont", function() {deepEqual( Stem("adatközponti"), "adatközpont");});
test("adatközpontjához -> adatközpont", function() {deepEqual( Stem("adatközpontjához"), "adatközpont");});
test("adatközpontokhoz -> adatközpont", function() {deepEqual( Stem("adatközpontokhoz"), "adatközpont");});
test("adatküldés -> adatküldés", function() {deepEqual( Stem("adatküldés"), "adatküldés");});
test("adatlapja -> adatlap", function() {deepEqual( Stem("adatlapja"), "adatlap");});
test("adatlapok -> adatlap", function() {deepEqual( Stem("adatlapok"), "adatlap");});
test("adatlemez -> adatlemez", function() {deepEqual( Stem("adatlemez"), "adatlemez");});
test("adatmennyiségeket -> adatmennyiség", function() {deepEqual( Stem("adatmennyiségeket"), "adatmennyiség");});
test("adatmennyiséget -> adatmennyiség", function() {deepEqual( Stem("adatmennyiséget"), "adatmennyiség");});
test("adatmigrációval -> adatmigráció", function() {deepEqual( Stem("adatmigrációval"), "adatmigráció");});
test("adatolvasás -> adatolvasás", function() {deepEqual( Stem("adatolvasás"), "adatolvasás");});
test("adatpiac -> adatpiac", function() {deepEqual( Stem("adatpiac"), "adatpiac");});
test("adatpiacba -> adatpiac", function() {deepEqual( Stem("adatpiacba"), "adatpiac");});
test("adatpiacok -> adatpiac", function() {deepEqual( Stem("adatpiacok"), "adatpiac");});
test("adatpiacokban -> adatpiac", function() {deepEqual( Stem("adatpiacokban"), "adatpiac");});
test("adatpiacokkal -> adatpiac", function() {deepEqual( Stem("adatpiacokkal"), "adatpiac");});
test("adatpiacoknak -> adatpiac", function() {deepEqual( Stem("adatpiacoknak"), "adatpiac");});
test("adatpiaci -> adatpiac", function() {deepEqual( Stem("adatpiaci"), "adatpiac");});
test("adatraktáraihoz -> adatraktár", function() {deepEqual( Stem("adatraktáraihoz"), "adatraktár");});
test("adatrögzítés -> adatrögzítés", function() {deepEqual( Stem("adatrögzítés"), "adatrögzítés");});
test("adatrögzítést -> adatrögzítés", function() {deepEqual( Stem("adatrögzítést"), "adatrögzítés");});
test("adatsor -> adatsor", function() {deepEqual( Stem("adatsor"), "adatsor");});
test("adatstruktúra -> adatstruktú", function() {deepEqual( Stem("adatstruktúra"), "adatstruktú");});
test("adatstruktúrába -> adatstruktúr", function() {deepEqual( Stem("adatstruktúrába"), "adatstruktúr");});
test("adatstruktúrája -> adatstruktúrá", function() {deepEqual( Stem("adatstruktúrája"), "adatstruktúrá");});
test("adatstruktúráját -> adatstruktúrá", function() {deepEqual( Stem("adatstruktúráját"), "adatstruktúrá");});
test("adatstruktúrákat -> adatstruktúra", function() {deepEqual( Stem("adatstruktúrákat"), "adatstruktúra");});
test("adatszerkezetre -> adatszerkezet", function() {deepEqual( Stem("adatszerkezetre"), "adatszerkezet");});
test("adatszinkronizáció -> adatszinkronizáció", function() {deepEqual( Stem("adatszinkronizáció"), "adatszinkronizáció");});
test("adatszolgáltatás -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatás"), "adatszolgáltatás");});
test("adatszolgáltatása -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatása"), "adatszolgáltatás");});
test("adatszolgáltatásainál -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatásainál"), "adatszolgáltatás");});
test("adatszolgáltatási -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatási"), "adatszolgáltatás");});
test("adatszolgáltatások -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatások"), "adatszolgáltatás");});
test("adatszolgáltatásokat -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatásokat"), "adatszolgáltatás");});
test("adatszolgáltatásokból -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatásokból"), "adatszolgáltatás");});
test("adatszolgáltatásra -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatásra"), "adatszolgáltatás");});
test("adatszolgáltatásról -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatásról"), "adatszolgáltatás");});
test("adatszolgáltatással -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatással"), "adatszolgáltatás");});
test("adatszolgáltatást -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatást"), "adatszolgáltatás");});
test("adatszolgáltatásukra -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatásukra"), "adatszolgáltatás");});
test("adatszolgáltatására -> adatszolgáltatás", function() {deepEqual( Stem("adatszolgáltatására"), "adatszolgáltatás");});
test("adatszétosztás -> adatszétosztás", function() {deepEqual( Stem("adatszétosztás"), "adatszétosztás");});
test("adatséf -> adatséf", function() {deepEqual( Stem("adatséf"), "adatséf");});
test("adattovábbítás -> adattovábbítás", function() {deepEqual( Stem("adattovábbítás"), "adattovábbítás");});
test("adattovábbításban -> adattovábbítás", function() {deepEqual( Stem("adattovábbításban"), "adattovábbítás");});
test("adattovábbításhoz -> adattovábbítás", function() {deepEqual( Stem("adattovábbításhoz"), "adattovábbítás");});
test("adattovábbításnak -> adattovábbítás", function() {deepEqual( Stem("adattovábbításnak"), "adattovábbítás");});
test("adattovábbításra -> adattovábbítás", function() {deepEqual( Stem("adattovábbításra"), "adattovábbítás");});
test("adattár -> adattár", function() {deepEqual( Stem("adattár"), "adattár");});
test("adattárak -> adattár", function() {deepEqual( Stem("adattárak"), "adattár");});
test("adattárak -> adattár", function() {deepEqual( Stem("adattárak"), "adattár");});
test("adattárakat -> adattár", function() {deepEqual( Stem("adattárakat"), "adattár");});
test("adattárakkal -> adattár", function() {deepEqual( Stem("adattárakkal"), "adattár");});
test("adattárakra -> adattár", function() {deepEqual( Stem("adattárakra"), "adattár");});
test("adattárat -> adattár", function() {deepEqual( Stem("adattárat"), "adattár");});
test("adattárban -> adattár", function() {deepEqual( Stem("adattárban"), "adattár");});
test("adattárból -> adattár", function() {deepEqual( Stem("adattárból"), "adattár");});
test("adattárra -> adattár", function() {deepEqual( Stem("adattárra"), "adattár");});
test("adattárház-megoldást -> adattárház-megoldás", function() {deepEqual( Stem("adattárház-megoldást"), "adattárház-megoldás");});
test("adattárház-menedzser -> adattárház-menedzser", function() {deepEqual( Stem("adattárház-menedzser"), "adattárház-menedzser");});
test("adattárház-menedzsertől -> adattárház-menedzser", function() {deepEqual( Stem("adattárház-menedzsertől"), "adattárház-menedzser");});
test("adattárház-menedzserének -> adattárház-menedzser", function() {deepEqual( Stem("adattárház-menedzserének"), "adattárház-menedzser");});
test("adattárházak -> adattárház", function() {deepEqual( Stem("adattárházak"), "adattárház");});
test("adattárház -> adattárház", function() {deepEqual( Stem("adattárház"), "adattárház");});
test("adattárházakat -> adattárház", function() {deepEqual( Stem("adattárházakat"), "adattárház");});
test("adattárházakból -> adattárház", function() {deepEqual( Stem("adattárházakból"), "adattárház");});
test("adattárházat -> adattárház", function() {deepEqual( Stem("adattárházat"), "adattárház");});
test("adattárházas -> adattárházas", function() {deepEqual( Stem("adattárházas"), "adattárházas");});
test("adattárolás -> adattárolás", function() {deepEqual( Stem("adattárolás"), "adattárolás");});
test("adattárolást -> adattárolás", function() {deepEqual( Stem("adattárolást"), "adattárolás");});
test("adattároló -> adattároló", function() {deepEqual( Stem("adattároló"), "adattároló");});
test("adattömeget -> adattömeg", function() {deepEqual( Stem("adattömeget"), "adattömeg");});
test("adatvesztés -> adatvesztés", function() {deepEqual( Stem("adatvesztés"), "adatvesztés");});
test("adatvesztéseket -> adatvesztés", function() {deepEqual( Stem("adatvesztéseket"), "adatvesztés");});
test("adatvesztést -> adatvesztés", function() {deepEqual( Stem("adatvesztést"), "adatvesztés");});
test("adatvédelem -> adatvédel", function() {deepEqual( Stem("adatvédelem"), "adatvédel");});
test("adatvédelem -> adatvédel", function() {deepEqual( Stem("adatvédelem"), "adatvédel");});
test("adatvédelemről -> adatvédel", function() {deepEqual( Stem("adatvédelemről"), "adatvédel");});
test("adatvédelmet -> adatvédel", function() {deepEqual( Stem("adatvédelmet"), "adatvédel");});
test("adatvédelmi -> adatvédelm", function() {deepEqual( Stem("adatvédelmi"), "adatvédelm");});
test("adatállomány-továbbítás -> adatállomány-továbbítás", function() {deepEqual( Stem("adatállomány-továbbítás"), "adatállomány-továbbítás");});
test("adatállományuk -> adatállomány", function() {deepEqual( Stem("adatállományuk"), "adatállomány");});
test("adatállományának -> adatállomány", function() {deepEqual( Stem("adatállományának"), "adatállomány");});
test("adatáramlás -> adatáramlás", function() {deepEqual( Stem("adatáramlás"), "adatáramlás");});
test("adatátalakítgatásokhoz -> adatátalakítgatás", function() {deepEqual( Stem("adatátalakítgatásokhoz"), "adatátalakítgatás");});
test("adatátvitel -> adatátvitel", function() {deepEqual( Stem("adatátvitel"), "adatátvitel");});
test("adatátvitelhez -> adatátvitel", function() {deepEqual( Stem("adatátvitelhez"), "adatátvitel");});
test("adatátviteli -> adatátvitel", function() {deepEqual( Stem("adatátviteli"), "adatátvitel");});
test("adatátvitelt -> adatátvitel", function() {deepEqual( Stem("adatátvitelt"), "adatátvitel");});
test("adatértelmező -> adatértelmező", function() {deepEqual( Stem("adatértelmező"), "adatértelmező");});
test("adandó -> adandó", function() {deepEqual( Stem("adandó"), "adandó");});
test("adassék -> adasse", function() {deepEqual( Stem("adassék"), "adasse");});
test("adatik -> adat", function() {deepEqual( Stem("adatik"), "adat");});
test("addig -> ad", function() {deepEqual( Stem("addig"), "ad");});
test("addigra -> addig", function() {deepEqual( Stem("addigra"), "addig");});
test("addigi -> addig", function() {deepEqual( Stem("addigi"), "addig");});
test("addiginál -> addig", function() {deepEqual( Stem("addiginál"), "addig");});
test("addigsem -> addigs", function() {deepEqual( Stem("addigsem"), "addigs");});
test("addresses -> addresses", function() {deepEqual( Stem("addresses"), "addresses");});
test("addressing -> addressing", function() {deepEqual( Stem("addressing"), "addressing");});
test("adeni -> aden", function() {deepEqual( Stem("adeni"), "aden");});
test("adhassa -> adhass", function() {deepEqual( Stem("adhassa"), "adhass");});
test("adhassuk -> adhass", function() {deepEqual( Stem("adhassuk"), "adhass");});
test("adhat -> adh", function() {deepEqual( Stem("adhat"), "adh");});
test("adhatja -> adhat", function() {deepEqual( Stem("adhatja"), "adhat");});
test("adhatjuk -> adhat", function() {deepEqual( Stem("adhatjuk"), "adhat");});
test("adhatják -> adhatja", function() {deepEqual( Stem("adhatják"), "adhatja");});
test("adhatnak -> adhat", function() {deepEqual( Stem("adhatnak"), "adhat");});
test("adhatnák -> adhatna", function() {deepEqual( Stem("adhatnák"), "adhatna");});
test("adhatnék -> adhatne", function() {deepEqual( Stem("adhatnék"), "adhatne");});
test("adhatod -> adhat", function() {deepEqual( Stem("adhatod"), "adhat");});
test("adhatott -> adhatot", function() {deepEqual( Stem("adhatott"), "adhatot");});
test("adhatsz -> adhatsz", function() {deepEqual( Stem("adhatsz"), "adhatsz");});
test("adhattam -> adhatt", function() {deepEqual( Stem("adhattam"), "adhatt");});
test("adhatunk -> adhat", function() {deepEqual( Stem("adhatunk"), "adhat");});
test("adhatta-vehette -> adhatta-vehett", function() {deepEqual( Stem("adhatta-vehette"), "adhatta-vehett");});
test("adható -> adható", function() {deepEqual( Stem("adható"), "adható");});
test("adhatók -> adható", function() {deepEqual( Stem("adhatók"), "adható");});
test("adige-abház -> adige-abház", function() {deepEqual( Stem("adige-abház"), "adige-abház");});
test("administrative -> administrativ", function() {deepEqual( Stem("administrative"), "administrativ");});
test("adminisztratív -> adminisztratív", function() {deepEqual( Stem("adminisztratív"), "adminisztratív");});
test("adminisztráció -> adminisztráció", function() {deepEqual( Stem("adminisztráció"), "adminisztráció");});
test("adminisztrációja -> adminisztráció", function() {deepEqual( Stem("adminisztrációja"), "adminisztráció");});
test("adminisztrációs -> adminisztrációs", function() {deepEqual( Stem("adminisztrációs"), "adminisztrációs");});
test("adminisztrációt -> adminisztráció", function() {deepEqual( Stem("adminisztrációt"), "adminisztráció");});
test("adminisztrációval -> adminisztráció", function() {deepEqual( Stem("adminisztrációval"), "adminisztráció");});
test("adminisztrálni -> adminisztráln", function() {deepEqual( Stem("adminisztrálni"), "adminisztráln");});
test("adminisztrált -> adminisztrál", function() {deepEqual( Stem("adminisztrált"), "adminisztrál");});
test("adminisztrációs-felügyeleti -> adminisztrációs-felügyelet", function() {deepEqual( Stem("adminisztrációs-felügyeleti"), "adminisztrációs-felügyelet");});
test("adminisztrátor -> adminisztrátor", function() {deepEqual( Stem("adminisztrátor"), "adminisztrátor");});
test("adminisztrátori -> adminisztrátor", function() {deepEqual( Stem("adminisztrátori"), "adminisztrátor");});
test("adminisztrátorok -> adminisztrátor", function() {deepEqual( Stem("adminisztrátorok"), "adminisztrátor");});
test("adminisztrátoroknak -> adminisztrátor", function() {deepEqual( Stem("adminisztrátoroknak"), "adminisztrátor");});
test("adminisztrátorra -> adminisztrátor", function() {deepEqual( Stem("adminisztrátorra"), "adminisztrátor");});
test("adminisztrátort -> adminisztrátor", function() {deepEqual( Stem("adminisztrátort"), "adminisztrátor");});
test("admiralitás -> admiralitás", function() {deepEqual( Stem("admiralitás"), "admiralitás");});
test("admirális -> admirális", function() {deepEqual( Stem("admirális"), "admirális");});
test("admirálissal -> admirális", function() {deepEqual( Stem("admirálissal"), "admirális");});
test("admirálist -> admirális", function() {deepEqual( Stem("admirálist"), "admirális");});
test("adogatott -> adogatot", function() {deepEqual( Stem("adogatott"), "adogatot");});
test("adogatásaimat -> adogatás", function() {deepEqual( Stem("adogatásaimat"), "adogatás");});
test("adogatásait -> adogatás", function() {deepEqual( Stem("adogatásait"), "adogatás");});
test("adok-kapok -> adok-kap", function() {deepEqual( Stem("adok-kapok"), "adok-kap");});
test("adomákkal -> adoma", function() {deepEqual( Stem("adomákkal"), "adoma");});
test("adomány -> adomány", function() {deepEqual( Stem("adomány"), "adomány");});
test("adományaikat -> adomány", function() {deepEqual( Stem("adományaikat"), "adomány");});
test("adományaikkal -> adomány", function() {deepEqual( Stem("adományaikkal"), "adomány");});
test("adományaimból -> adomány", function() {deepEqual( Stem("adományaimból"), "adomány");});
test("adományokat -> adomány", function() {deepEqual( Stem("adományokat"), "adomány");});
test("adományokból -> adomány", function() {deepEqual( Stem("adományokból"), "adomány");});
test("adományokra -> adomány", function() {deepEqual( Stem("adományokra"), "adomány");});
test("adományoznék -> adományozne", function() {deepEqual( Stem("adományoznék"), "adományozne");});
test("adományozom -> adományoz", function() {deepEqual( Stem("adományozom"), "adományoz");});
test("adományozott -> adományozot", function() {deepEqual( Stem("adományozott"), "adományozot");});
test("adományoztak -> adományozt", function() {deepEqual( Stem("adományoztak"), "adományozt");});
test("adományozás -> adományozás", function() {deepEqual( Stem("adományozás"), "adományozás");});
test("adományozásban -> adományozás", function() {deepEqual( Stem("adományozásban"), "adományozás");});
test("adományjegy -> adományjegy", function() {deepEqual( Stem("adományjegy"), "adományjegy");});
test("ad -> ad", function() {deepEqual( Stem("ad"), "ad");});
test("add -> ad", function() {deepEqual( Stem("add"), "ad");});
test("adja -> ad", function() {deepEqual( Stem("adja"), "ad");});
test("adja -> ad", function() {deepEqual( Stem("adja"), "ad");});
test("adjak -> adj", function() {deepEqual( Stem("adjak"), "adj");});
test("adjam -> adj", function() {deepEqual( Stem("adjam"), "adj");});
test("adjanak -> ad", function() {deepEqual( Stem("adjanak"), "ad");});
test("adjon -> adj", function() {deepEqual( Stem("adjon"), "adj");});
test("adjuk -> ad", function() {deepEqual( Stem("adjuk"), "ad");});
test("adjuk -> ad", function() {deepEqual( Stem("adjuk"), "ad");});
test("adjunk -> adj", function() {deepEqual( Stem("adjunk"), "adj");});
test("adják -> adja", function() {deepEqual( Stem("adják"), "adja");});
test("adna -> adn", function() {deepEqual( Stem("adna"), "adn");});
test("adnak -> ad", function() {deepEqual( Stem("adnak"), "ad");});
test("adni -> adn", function() {deepEqual( Stem("adni"), "adn");});
test("adnia -> adn", function() {deepEqual( Stem("adnia"), "adn");});
test("adniuk -> adn", function() {deepEqual( Stem("adniuk"), "adn");});
test("adnom -> adn", function() {deepEqual( Stem("adnom"), "adn");});
test("adnunk -> adn", function() {deepEqual( Stem("adnunk"), "adn");});
test("adná -> adna", function() {deepEqual( Stem("adná"), "adna");});
test("adnák -> adna", function() {deepEqual( Stem("adnák"), "adna");});
test("adnának -> adn", function() {deepEqual( Stem("adnának"), "adn");});
test("adnék -> adne", function() {deepEqual( Stem("adnék"), "adne");});
test("adod -> ad", function() {deepEqual( Stem("adod"), "ad");});
test("adok -> ad", function() {deepEqual( Stem("adok"), "ad");});
test("adom -> ad", function() {deepEqual( Stem("adom"), "ad");});
test("adsz -> adsz", function() {deepEqual( Stem("adsz"), "adsz");});
test("adta -> adt", function() {deepEqual( Stem("adta"), "adt");});
test("adtad -> adt", function() {deepEqual( Stem("adtad"), "adt");});
test("adtak -> adt", function() {deepEqual( Stem("adtak"), "adt");});
test("adtam -> adt", function() {deepEqual( Stem("adtam"), "adt");});
test("adtuk -> adt", function() {deepEqual( Stem("adtuk"), "adt");});
test("adtunk -> adt", function() {deepEqual( Stem("adtunk"), "adt");});
test("adták -> adta", function() {deepEqual( Stem("adták"), "adta");});
test("adtál -> adtál", function() {deepEqual( Stem("adtál"), "adtál");});
test("adunk -> ad", function() {deepEqual( Stem("adunk"), "ad");});
test("adva -> adv", function() {deepEqual( Stem("adva"), "adv");});
test("adott -> adot", function() {deepEqual( Stem("adott"), "adot");});
test("adottak -> adott", function() {deepEqual( Stem("adottak"), "adott");});
test("adottnak -> adott", function() {deepEqual( Stem("adottnak"), "adott");});
test("adottság -> adottság", function() {deepEqual( Stem("adottság"), "adottság");});
test("adottsága -> adottság", function() {deepEqual( Stem("adottsága"), "adottság");});
test("adottságai -> adottság", function() {deepEqual( Stem("adottságai"), "adottság");});
test("adottságnak -> adottság", function() {deepEqual( Stem("adottságnak"), "adottság");});
test("adottságod -> adottság", function() {deepEqual( Stem("adottságod"), "adottság");});
test("adottságok -> adottság", function() {deepEqual( Stem("adottságok"), "adottság");});
test("adottságú -> adottságú", function() {deepEqual( Stem("adottságú"), "adottságú");});
test("adriai -> adri", function() {deepEqual( Stem("adriai"), "adri");});
test("adták-vették -> adták-vette", function() {deepEqual( Stem("adták-vették"), "adták-vette");});
test("adtán -> adt", function() {deepEqual( Stem("adtán"), "adt");});
test("aduvá -> adu", function() {deepEqual( Stem("aduvá"), "adu");});
test("adventi -> advent", function() {deepEqual( Stem("adventi"), "advent");});
test("adácsiak -> adácsi", function() {deepEqual( Stem("adácsiak"), "adácsi");});
test("adás -> adás", function() {deepEqual( Stem("adás"), "adás");});
test("adása -> adás", function() {deepEqual( Stem("adása"), "adás");});
test("adásai -> adás", function() {deepEqual( Stem("adásai"), "adás");});
test("adásait -> adás", function() {deepEqual( Stem("adásait"), "adás");});
test("adásba -> adás", function() {deepEqual( Stem("adásba"), "adás");});
test("adásban -> adás", function() {deepEqual( Stem("adásban"), "adás");});
test("adásból -> adás", function() {deepEqual( Stem("adásból"), "adás");});
test("adáshoz -> adás", function() {deepEqual( Stem("adáshoz"), "adás");});
test("adásként -> adás", function() {deepEqual( Stem("adásként"), "adás");});
test("adásnak -> adás", function() {deepEqual( Stem("adásnak"), "adás");});
test("adások -> adás", function() {deepEqual( Stem("adások"), "adás");});
test("adásokat -> adás", function() {deepEqual( Stem("adásokat"), "adás");});
test("adásokra -> adás", function() {deepEqual( Stem("adásokra"), "adás");});
test("adásra -> adás", function() {deepEqual( Stem("adásra"), "adás");});
test("adást -> adás", function() {deepEqual( Stem("adást"), "adás");});
test("adástól -> adás", function() {deepEqual( Stem("adástól"), "adás");});
test("adásának -> adás", function() {deepEqual( Stem("adásának"), "adás");});
test("adására -> adás", function() {deepEqual( Stem("adására"), "adás");});
test("adásával -> adás", function() {deepEqual( Stem("adásával"), "adás");});
test("adásvezérlés -> adásvezérlés", function() {deepEqual( Stem("adásvezérlés"), "adásvezérlés");});
test("adásvétel -> adásvétel", function() {deepEqual( Stem("adásvétel"), "adásvétel");});
test("adásvételben -> adásvétel", function() {deepEqual( Stem("adásvételben"), "adásvétel");});
test("adásvétele -> adásvétel", function() {deepEqual( Stem("adásvétele"), "adásvétel");});
test("adásvételek -> adásvétel", function() {deepEqual( Stem("adásvételek"), "adásvétel");});
test("adásvételi -> adásvétel", function() {deepEqual( Stem("adásvételi"), "adásvétel");});
test("adásvétellel -> adásvétel", function() {deepEqual( Stem("adásvétellel"), "adásvétel");});
test("adásvételt -> adásvétel", function() {deepEqual( Stem("adásvételt"), "adásvétel");});
test("adásvételével -> adásvétel", function() {deepEqual( Stem("adásvételével"), "adásvétel");});
test("adásához -> adás", function() {deepEqual( Stem("adásához"), "adás");});
test("adó-állam -> adó-áll", function() {deepEqual( Stem("adó-állam"), "adó-áll");});
test("adó-államra -> adó-áll", function() {deepEqual( Stem("adó-államra"), "adó-áll");});
test("adóalanyok -> adóalany", function() {deepEqual( Stem("adóalanyok"), "adóalany");});
test("adóalapból -> adóalap", function() {deepEqual( Stem("adóalapból"), "adóalap");});
test("adóalapja -> adóalap", function() {deepEqual( Stem("adóalapja"), "adóalap");});
test("adóalapjának -> adóalap", function() {deepEqual( Stem("adóalapjának"), "adóalap");});
test("adóbevallás -> adóbevallás", function() {deepEqual( Stem("adóbevallás"), "adóbevallás");});
test("adóbevallásukban -> adóbevallás", function() {deepEqual( Stem("adóbevallásukban"), "adóbevallás");});
test("adóbevallását -> adóbevallás", function() {deepEqual( Stem("adóbevallását"), "adóbevallás");});
test("adóbevallási -> adóbevallás", function() {deepEqual( Stem("adóbevallási"), "adóbevallás");});
test("adóbevétele -> adóbevétel", function() {deepEqual( Stem("adóbevétele"), "adóbevétel");});
test("adóbevételeket -> adóbevétel", function() {deepEqual( Stem("adóbevételeket"), "adóbevétel");});
test("adóbevételük -> adóbevétel", function() {deepEqual( Stem("adóbevételük"), "adóbevétel");});
test("adó -> adó", function() {deepEqual( Stem("adó"), "adó");});
test("adós -> adós", function() {deepEqual( Stem("adós"), "adós");});
test("adósa -> adós", function() {deepEqual( Stem("adósa"), "adós");});
test("adósak -> adós", function() {deepEqual( Stem("adósak"), "adós");});
test("adósnak -> adós", function() {deepEqual( Stem("adósnak"), "adós");});
test("adósok -> adós", function() {deepEqual( Stem("adósok"), "adós");});
test("adósokkal -> adós", function() {deepEqual( Stem("adósokkal"), "adós");});
test("adósoknak -> adós", function() {deepEqual( Stem("adósoknak"), "adós");});
test("adósokról -> adós", function() {deepEqual( Stem("adósokról"), "adós");});
test("adóssal -> adós", function() {deepEqual( Stem("adóssal"), "adós");});
test("adóst -> adós", function() {deepEqual( Stem("adóst"), "adós");});
test("adóból -> adó", function() {deepEqual( Stem("adóból"), "adó");});
test("adók -> adó", function() {deepEqual( Stem("adók"), "adó");});
test("adókon -> adó", function() {deepEqual( Stem("adókon"), "adó");});
test("adókról -> adó", function() {deepEqual( Stem("adókról"), "adó");});
test("adóról -> adó", function() {deepEqual( Stem("adóról"), "adó");});
test("adót -> adó", function() {deepEqual( Stem("adót"), "adó");});
test("adóval -> adó", function() {deepEqual( Stem("adóval"), "adó");});
test("adója -> adó", function() {deepEqual( Stem("adója"), "adó");});
test("adóját -> adó", function() {deepEqual( Stem("adóját"), "adó");});
test("adójának -> adó", function() {deepEqual( Stem("adójának"), "adó");});
test("adócsalási -> adócsalás", function() {deepEqual( Stem("adócsalási"), "adócsalás");});
test("adócsalást -> adócsalás", function() {deepEqual( Stem("adócsalást"), "adócsalás");});
test("adócsaló -> adócsaló", function() {deepEqual( Stem("adócsaló"), "adócsaló");});
test("adócár -> adócár", function() {deepEqual( Stem("adócár"), "adócár");});
test("adódhat -> adódh", function() {deepEqual( Stem("adódhat"), "adódh");});
test("adódhatnak -> adódhat", function() {deepEqual( Stem("adódhatnak"), "adódhat");});
test("adódik -> adód", function() {deepEqual( Stem("adódik"), "adód");});
test("adódjon -> adódj", function() {deepEqual( Stem("adódjon"), "adódj");});
test("adódna -> adódn", function() {deepEqual( Stem("adódna"), "adódn");});
test("adódnak -> adó", function() {deepEqual( Stem("adódnak"), "adó");});
test("adódott -> adódot", function() {deepEqual( Stem("adódott"), "adódot");});
test("adódtak -> adódt", function() {deepEqual( Stem("adódtak"), "adódt");});
test("adódó -> adódó", function() {deepEqual( Stem("adódó"), "adódó");});
test("adódóan -> adódó", function() {deepEqual( Stem("adódóan"), "adódó");});
test("adóegységesítés -> adóegységesítés", function() {deepEqual( Stem("adóegységesítés"), "adóegységesítés");});
test("adóellenőr -> adóellenőr", function() {deepEqual( Stem("adóellenőr"), "adóellenőr");});
test("adóemelésben -> adóemelés", function() {deepEqual( Stem("adóemelésben"), "adóemelés");});
test("adófajták -> adófajta", function() {deepEqual( Stem("adófajták"), "adófajta");});
test("adófizetés -> adófizetés", function() {deepEqual( Stem("adófizetés"), "adófizetés");});
test("adófizetést -> adófizetés", function() {deepEqual( Stem("adófizetést"), "adófizetés");});
test("adófizetési -> adófizetés", function() {deepEqual( Stem("adófizetési"), "adófizetés");});
test("adófizetők -> adófizető", function() {deepEqual( Stem("adófizetők"), "adófizető");});
test("adófizetőktől -> adófizető", function() {deepEqual( Stem("adófizetőktől"), "adófizető");});
test("adóforintoknak -> adóforint", function() {deepEqual( Stem("adóforintoknak"), "adóforint");});
test("adóhalasztást -> adóhalasztás", function() {deepEqual( Stem("adóhalasztást"), "adóhalasztás");});
test("adóhatóság -> adóhatóság", function() {deepEqual( Stem("adóhatóság"), "adóhatóság");});
test("adóhatóságnak -> adóhatóság", function() {deepEqual( Stem("adóhatóságnak"), "adóhatóság");});
test("adóhatóságnál -> adóhatóság", function() {deepEqual( Stem("adóhatóságnál"), "adóhatóság");});
test("adóhivatal -> adóhivatal", function() {deepEqual( Stem("adóhivatal"), "adóhivatal");});
test("adójogi -> adójog", function() {deepEqual( Stem("adójogi"), "adójog");});
test("adójogszabályok -> adójogszabály", function() {deepEqual( Stem("adójogszabályok"), "adójogszabály");});
test("adókedvezmény -> adókedvezmény", function() {deepEqual( Stem("adókedvezmény"), "adókedvezmény");});
test("adókedvezményeket -> adókedvezmény", function() {deepEqual( Stem("adókedvezményeket"), "adókedvezmény");});
test("adókedvezményekkel -> adókedvezmény", function() {deepEqual( Stem("adókedvezményekkel"), "adókedvezmény");});
test("adókedvezményekre -> adókedvezmény", function() {deepEqual( Stem("adókedvezményekre"), "adókedvezmény");});
test("adókedvezménynél -> adókedvezmény", function() {deepEqual( Stem("adókedvezménynél"), "adókedvezmény");});
test("adókedvezményt -> adókedvezmény", function() {deepEqual( Stem("adókedvezményt"), "adókedvezmény");});
test("adókonstrukciót -> adókonstrukció", function() {deepEqual( Stem("adókonstrukciót"), "adókonstrukció");});
test("adókulcs -> adókulcs", function() {deepEqual( Stem("adókulcs"), "adókulcs");});
test("adókulcsemelés -> adókulcsemelés", function() {deepEqual( Stem("adókulcsemelés"), "adókulcsemelés");});
test("adókészülék -> adókészüle", function() {deepEqual( Stem("adókészülék"), "adókészüle");});
test("adóköteles -> adóköteles", function() {deepEqual( Stem("adóköteles"), "adóköteles");});
test("adókötelezettségről -> adókötelezettség", function() {deepEqual( Stem("adókötelezettségről"), "adókötelezettség");});
test("adólevonásra -> adólevonás", function() {deepEqual( Stem("adólevonásra"), "adólevonás");});
test("adómentesség -> adómentesség", function() {deepEqual( Stem("adómentesség"), "adómentesség");});
test("adómentességben -> adómentesség", function() {deepEqual( Stem("adómentességben"), "adómentesség");});
test("adómentességet -> adómentesség", function() {deepEqual( Stem("adómentességet"), "adómentesség");});
test("adómérséklés -> adómérséklés", function() {deepEqual( Stem("adómérséklés"), "adómérséklés");});
test("adómérték -> adómérte", function() {deepEqual( Stem("adómérték"), "adómérte");});
test("adómértéket -> adómérte", function() {deepEqual( Stem("adómértéket"), "adómérte");});
test("adópolitika -> adópolit", function() {deepEqual( Stem("adópolitika"), "adópolit");});
test("adóreform -> adórefor", function() {deepEqual( Stem("adóreform"), "adórefor");});
test("adórendszer -> adórendszer", function() {deepEqual( Stem("adórendszer"), "adórendszer");});
test("adórendőre -> adórendő", function() {deepEqual( Stem("adórendőre"), "adórendő");});
test("adórendőrség -> adórendőrség", function() {deepEqual( Stem("adórendőrség"), "adórendőrség");});
test("adósság-visszafizetés -> adósság-visszafizetés", function() {deepEqual( Stem("adósság-visszafizetés"), "adósság-visszafizetés");});
test("adósság -> adósság", function() {deepEqual( Stem("adósság"), "adósság");});
test("adóssága -> adósság", function() {deepEqual( Stem("adóssága"), "adósság");});
test("adósságainak -> adósság", function() {deepEqual( Stem("adósságainak"), "adósság");});
test("adóssággá -> adósság", function() {deepEqual( Stem("adóssággá"), "adósság");});
test("adóssághoz -> adósság", function() {deepEqual( Stem("adóssághoz"), "adósság");});
test("adósságok -> adósság", function() {deepEqual( Stem("adósságok"), "adósság");});
test("adósságokat -> adósság", function() {deepEqual( Stem("adósságokat"), "adósság");});
test("adósságot -> adósság", function() {deepEqual( Stem("adósságot"), "adósság");});
test("adósságukat -> adósság", function() {deepEqual( Stem("adósságukat"), "adósság");});
test("adósságának -> adósság", function() {deepEqual( Stem("adósságának"), "adósság");});
test("adósságát -> adósság", function() {deepEqual( Stem("adósságát"), "adósság");});
test("adósságtörlesztéséről -> adósságtörlesztés", function() {deepEqual( Stem("adósságtörlesztéséről"), "adósságtörlesztés");});
test("adóssághegy -> adóssághegy", function() {deepEqual( Stem("adóssághegy"), "adóssághegy");});
test("adóssághegyet -> adóssághegy", function() {deepEqual( Stem("adóssághegyet"), "adóssághegy");});
test("adósságállomány -> adósságállomány", function() {deepEqual( Stem("adósságállomány"), "adósságállomány");});
test("adósságállománya -> adósságállomány", function() {deepEqual( Stem("adósságállománya"), "adósságállomány");});
test("adósságállományát -> adósságállomány", function() {deepEqual( Stem("adósságállományát"), "adósságállomány");});
test("adósvédelem -> adósvédel", function() {deepEqual( Stem("adósvédelem"), "adósvédel");});
test("adószabályát -> adószabály", function() {deepEqual( Stem("adószabályát"), "adószabály");});
test("adószakértők -> adószakértő", function() {deepEqual( Stem("adószakértők"), "adószakértő");});
test("adószámítási -> adószámítás", function() {deepEqual( Stem("adószámítási"), "adószámítás");});
test("adótanácsot -> adótanács", function() {deepEqual( Stem("adótanácsot"), "adótanács");});
test("adótartozás -> adótartozás", function() {deepEqual( Stem("adótartozás"), "adótartozás");});
test("adótartozása -> adótartozás", function() {deepEqual( Stem("adótartozása"), "adótartozás");});
test("adóteoretikusok -> adóteoretikus", function() {deepEqual( Stem("adóteoretikusok"), "adóteoretikus");});
test("adótörvényben -> adótörvény", function() {deepEqual( Stem("adótörvényben"), "adótörvény");});
test("adótörvények -> adótörvény", function() {deepEqual( Stem("adótörvények"), "adótörvény");});
test("adóváltozatban -> adóváltozat", function() {deepEqual( Stem("adóváltozatban"), "adóváltozat");});
test("adózna -> adózn", function() {deepEqual( Stem("adózna"), "adózn");});
test("adózott -> adózot", function() {deepEqual( Stem("adózott"), "adózot");});
test("adózott -> adózot", function() {deepEqual( Stem("adózott"), "adózot");});
test("adózó -> adózó", function() {deepEqual( Stem("adózó"), "adózó");});
test("adózók -> adózó", function() {deepEqual( Stem("adózók"), "adózó");});
test("adózás -> adózás", function() {deepEqual( Stem("adózás"), "adózás");});
test("adózási -> adózás", function() {deepEqual( Stem("adózási"), "adózás");});
test("adóztatják -> adóztatja", function() {deepEqual( Stem("adóztatják"), "adóztatja");});
test("adóztatnak -> adóztat", function() {deepEqual( Stem("adóztatnak"), "adóztat");});
test("adóztatása -> adóztatás", function() {deepEqual( Stem("adóztatása"), "adóztatás");});
test("adóztatást -> adóztatás", function() {deepEqual( Stem("adóztatást"), "adóztatás");});
test("adóztatását -> adóztatás", function() {deepEqual( Stem("adóztatását"), "adóztatás");});
test("adóévre -> adóév", function() {deepEqual( Stem("adóévre"), "adóév");});
test("adóűrlapok -> adóűrlap", function() {deepEqual( Stem("adóűrlapok"), "adóűrlap");});
test("adóügyek -> adóügy", function() {deepEqual( Stem("adóügyek"), "adóügy");});
test("aecxml -> aecxml", function() {deepEqual( Stem("aecxml"), "aecxml");});
test("afeketefehér -> afeketefehér", function() {deepEqual( Stem("afeketefehér"), "afeketefehér");});
test("afelé -> afel", function() {deepEqual( Stem("afelé"), "afel");});
test("afelől -> afelől", function() {deepEqual( Stem("afelől"), "afelől");});
test("affektáció -> affektáció", function() {deepEqual( Stem("affektáció"), "affektáció");});
test("affektálj -> affektálj", function() {deepEqual( Stem("affektálj"), "affektálj");});
test("affektálsz -> affektálsz", function() {deepEqual( Stem("affektálsz"), "affektálsz");});
test("affektált -> affektál", function() {deepEqual( Stem("affektált"), "affektál");});
test("affektáltál -> affektáltál", function() {deepEqual( Stem("affektáltál"), "affektáltál");});
test("affektálásnak -> affektálás", function() {deepEqual( Stem("affektálásnak"), "affektálás");});
test("afférban -> affér", function() {deepEqual( Stem("afférban"), "affér");});
test("affért -> aff", function() {deepEqual( Stem("affért"), "aff");});
test("affértól -> affér", function() {deepEqual( Stem("affértól"), "affér");});
test("afganisztáni -> afganisztán", function() {deepEqual( Stem("afganisztáni"), "afganisztán");});
test("afrikai -> afri", function() {deepEqual( Stem("afrikai"), "afri");});
test("afrodiziákum -> afrodiziáku", function() {deepEqual( Stem("afrodiziákum"), "afrodiziáku");});
test("after -> after", function() {deepEqual( Stem("after"), "after");});
test("afölött -> afölöt", function() {deepEqual( Stem("afölött"), "afölöt");});
test("agenda-setting -> agenda-setting", function() {deepEqual( Stem("agenda-setting"), "agenda-setting");});
test("agenda-settinggel -> agenda-setting", function() {deepEqual( Stem("agenda-settinggel"), "agenda-setting");});
test("agent -> agen", function() {deepEqual( Stem("agent"), "agen");});
test("aggastyánosság -> aggastyánosság", function() {deepEqual( Stem("aggastyánosság"), "aggastyánosság");});
test("aggaszt -> aggasz", function() {deepEqual( Stem("aggaszt"), "aggasz");});
test("aggasztónak -> aggasztó", function() {deepEqual( Stem("aggasztónak"), "aggasztó");});
test("aggatott -> aggatot", function() {deepEqual( Stem("aggatott"), "aggatot");});
test("aggatta -> aggatt", function() {deepEqual( Stem("aggatta"), "aggatt");});
test("aggatva -> aggatv", function() {deepEqual( Stem("aggatva"), "aggatv");});
test("aggkori -> aggkor", function() {deepEqual( Stem("aggkori"), "aggkor");});
test("aggodalma -> aggodalm", function() {deepEqual( Stem("aggodalma"), "aggodalm");});
test("aggodalmainkat -> aggodalm", function() {deepEqual( Stem("aggodalmainkat"), "aggodalm");});
test("aggodalmainkkal -> aggodalm", function() {deepEqual( Stem("aggodalmainkkal"), "aggodalm");});
test("aggodalmak -> aggodalm", function() {deepEqual( Stem("aggodalmak"), "aggodalm");});
test("aggodalmakat -> aggodalm", function() {deepEqual( Stem("aggodalmakat"), "aggodalm");});
test("aggodalmakkal -> aggodalm", function() {deepEqual( Stem("aggodalmakkal"), "aggodalm");});
test("aggodalmaskodnak -> aggodalmas", function() {deepEqual( Stem("aggodalmaskodnak"), "aggodalmas");});
test("aggodalmat -> aggodal", function() {deepEqual( Stem("aggodalmat"), "aggodal");});
test("aggodalmunk -> aggodalm", function() {deepEqual( Stem("aggodalmunk"), "aggodalm");});
test("aggodalom -> aggodal", function() {deepEqual( Stem("aggodalom"), "aggodal");});
test("aggodalommal -> aggodal", function() {deepEqual( Stem("aggodalommal"), "aggodal");});
test("aggok -> agg", function() {deepEqual( Stem("aggok"), "agg");});
test("aggregált -> aggregál", function() {deepEqual( Stem("aggregált"), "aggregál");});
test("aggregátumokat -> aggregátum", function() {deepEqual( Stem("aggregátumokat"), "aggregátum");});
test("aggregátumokon -> aggregátum", function() {deepEqual( Stem("aggregátumokon"), "aggregátum");});
test("aggresszív -> aggresszív", function() {deepEqual( Stem("aggresszív"), "aggresszív");});
test("aggteleki -> aggtel", function() {deepEqual( Stem("aggteleki"), "aggtel");});
test("aggályos -> aggályos", function() {deepEqual( Stem("aggályos"), "aggályos");});
test("aggályosnak -> aggályos", function() {deepEqual( Stem("aggályosnak"), "aggályos");});
test("aggályoskodásod -> aggályoskodás", function() {deepEqual( Stem("aggályoskodásod"), "aggályoskodás");});
test("aggályt -> aggály", function() {deepEqual( Stem("aggályt"), "aggály");});
test("aggálytalan -> aggálytal", function() {deepEqual( Stem("aggálytalan"), "aggálytal");});
test("aggódik -> aggód", function() {deepEqual( Stem("aggódik"), "aggód");});
test("aggódj -> aggódj", function() {deepEqual( Stem("aggódj"), "aggódj");});
test("aggódnak -> aggó", function() {deepEqual( Stem("aggódnak"), "aggó");});
test("aggódni -> aggódn", function() {deepEqual( Stem("aggódni"), "aggódn");});
test("aggódniuk -> aggódn", function() {deepEqual( Stem("aggódniuk"), "aggódn");});
test("aggódnom -> aggódn", function() {deepEqual( Stem("aggódnom"), "aggódn");});
test("aggódnunk -> aggódn", function() {deepEqual( Stem("aggódnunk"), "aggódn");});
test("aggódnék -> aggódne", function() {deepEqual( Stem("aggódnék"), "aggódne");});
test("aggódom -> aggód", function() {deepEqual( Stem("aggódom"), "aggód");});
test("aggódott -> aggódot", function() {deepEqual( Stem("aggódott"), "aggódot");});
test("aggódsz -> aggódsz", function() {deepEqual( Stem("aggódsz"), "aggódsz");});
test("aggódtak -> aggódt", function() {deepEqual( Stem("aggódtak"), "aggódt");});
test("aggódtam -> aggódt", function() {deepEqual( Stem("aggódtam"), "aggódt");});
test("aggódtunk -> aggódt", function() {deepEqual( Stem("aggódtunk"), "aggódt");});
test("aggódva -> aggódv", function() {deepEqual( Stem("aggódva"), "aggódv");});
test("aggódásról -> aggódás", function() {deepEqual( Stem("aggódásról"), "aggódás");});
test("aggódó -> aggódó", function() {deepEqual( Stem("aggódó"), "aggódó");});
test("agilitás -> agilitás", function() {deepEqual( Stem("agilitás"), "agilitás");});
test("agitprop -> agitprop", function() {deepEqual( Stem("agitprop"), "agitprop");});
test("agnoszticizmusnak -> agnoszticizmus", function() {deepEqual( Stem("agnoszticizmusnak"), "agnoszticizmus");});
test("agonizáló -> agonizáló", function() {deepEqual( Stem("agonizáló"), "agonizáló");});
test("agoraphobia -> agoraphob", function() {deepEqual( Stem("agoraphobia"), "agoraphob");});
test("agrai -> agr", function() {deepEqual( Stem("agrai"), "agr");});
test("agressziónak -> agresszió", function() {deepEqual( Stem("agressziónak"), "agresszió");});
test("agresszióra -> agresszió", function() {deepEqual( Stem("agresszióra"), "agresszió");});
test("agresszióról -> agresszió", function() {deepEqual( Stem("agresszióról"), "agresszió");});
test("agresszorok -> agresszor", function() {deepEqual( Stem("agresszorok"), "agresszor");});
test("agresszív -> agresszív", function() {deepEqual( Stem("agresszív"), "agresszív");});
test("agresszívabb -> agresszívabb", function() {deepEqual( Stem("agresszívabb"), "agresszívabb");});
test("agresszívan -> agresszív", function() {deepEqual( Stem("agresszívan"), "agresszív");});
test("agronómus -> agronómus", function() {deepEqual( Stem("agronómus"), "agronómus");});
test("agrár- -> agrár-", function() {deepEqual( Stem("agrár-"), "agrár-");});
test("agrár-összeütközéseket -> agrár-összeütközés", function() {deepEqual( Stem("agrár-összeütközéseket"), "agrár-összeütközés");});
test("agrárdiplomás -> agrárdiplomás", function() {deepEqual( Stem("agrárdiplomás"), "agrárdiplomás");});
test("agrárexport -> agrárexpor", function() {deepEqual( Stem("agrárexport"), "agrárexpor");});
test("agrárexport-tevékenység -> agrárexport-tevékenység", function() {deepEqual( Stem("agrárexport-tevékenység"), "agrárexport-tevékenység");});
test("agrárfinanszírozási -> agrárfinanszírozás", function() {deepEqual( Stem("agrárfinanszírozási"), "agrárfinanszírozás");});
test("agrárfórumot -> agrárfóru", function() {deepEqual( Stem("agrárfórumot"), "agrárfóru");});
test("agrárium -> agráriu", function() {deepEqual( Stem("agrárium"), "agráriu");});
test("agrárkamarák -> agrárkamara", function() {deepEqual( Stem("agrárkamarák"), "agrárkamara");});
test("agrárminiszter -> agrárminiszter", function() {deepEqual( Stem("agrárminiszter"), "agrárminiszter");});
test("agrárprogram -> agrárprogr", function() {deepEqual( Stem("agrárprogram"), "agrárprogr");});
test("agrárszabályozás -> agrárszabályozás", function() {deepEqual( Stem("agrárszabályozás"), "agrárszabályozás");});
test("agrárszektor -> agrárszektor", function() {deepEqual( Stem("agrárszektor"), "agrárszektor");});
test("agrártermelői -> agrártermelő", function() {deepEqual( Stem("agrártermelői"), "agrártermelő");});
test("agrártámogatási -> agrártámogatás", function() {deepEqual( Stem("agrártámogatási"), "agrártámogatás");});
test("agrártámogatások -> agrártámogatás", function() {deepEqual( Stem("agrártámogatások"), "agrártámogatás");});
test("agrártámogatásokból -> agrártámogatás", function() {deepEqual( Stem("agrártámogatásokból"), "agrártámogatás");});
test("agrártámogatásokra -> agrártámogatás", function() {deepEqual( Stem("agrártámogatásokra"), "agrártámogatás");});
test("agrártámogatásra -> agrártámogatás", function() {deepEqual( Stem("agrártámogatásra"), "agrártámogatás");});
test("agrártámogatásának -> agrártámogatás", function() {deepEqual( Stem("agrártámogatásának"), "agrártámogatás");});
test("agrártárca -> agrártárc", function() {deepEqual( Stem("agrártárca"), "agrártárc");});
test("agrártárcánál -> agrártárc", function() {deepEqual( Stem("agrártárcánál"), "agrártárc");});
test("agrárválság -> agrárválság", function() {deepEqual( Stem("agrárválság"), "agrárválság");});
test("agy -> agy", function() {deepEqual( Stem("agy"), "agy");});
test("agya -> agy", function() {deepEqual( Stem("agya"), "agy");});
test("agyak -> agy", function() {deepEqual( Stem("agyak"), "agy");});
test("agyakat -> agy", function() {deepEqual( Stem("agyakat"), "agy");});
test("agyakban -> agy", function() {deepEqual( Stem("agyakban"), "agy");});
test("agyaként -> agy", function() {deepEqual( Stem("agyaként"), "agy");});
test("agyam -> agy", function() {deepEqual( Stem("agyam"), "agy");});
test("agyamba -> agy", function() {deepEqual( Stem("agyamba"), "agy");});
test("agyamban -> agy", function() {deepEqual( Stem("agyamban"), "agy");});
test("agyamon -> agy", function() {deepEqual( Stem("agyamon"), "agy");});
test("agyat -> agy", function() {deepEqual( Stem("agyat"), "agy");});
test("agyban -> agy", function() {deepEqual( Stem("agyban"), "agy");});
test("agyból -> agy", function() {deepEqual( Stem("agyból"), "agy");});
test("agynak -> agy", function() {deepEqual( Stem("agynak"), "agy");});
test("agyra -> agy", function() {deepEqual( Stem("agyra"), "agy");});
test("agyról -> agy", function() {deepEqual( Stem("agyról"), "agy");});
test("agyukat -> agy", function() {deepEqual( Stem("agyukat"), "agy");});
test("agyukkal -> agy", function() {deepEqual( Stem("agyukkal"), "agy");});
test("agyunkat -> agy", function() {deepEqual( Stem("agyunkat"), "agy");});
test("agyunkban -> agy", function() {deepEqual( Stem("agyunkban"), "agy");});
test("agyába -> agy", function() {deepEqual( Stem("agyába"), "agy");});
test("agyában -> agy", function() {deepEqual( Stem("agyában"), "agy");});
test("agyából -> agy", function() {deepEqual( Stem("agyából"), "agy");});
test("agyán -> agy", function() {deepEqual( Stem("agyán"), "agy");});
test("agyát -> agy", function() {deepEqual( Stem("agyát"), "agy");});
test("agyú -> agyú", function() {deepEqual( Stem("agyú"), "agyú");});
test("agyon -> agy", function() {deepEqual( Stem("agyon"), "agy");});
test("agyonra -> agyon", function() {deepEqual( Stem("agyonra"), "agyon");});
test("agybajt -> agybaj", function() {deepEqual( Stem("agybajt"), "agybaj");});
test("agyafúrt -> agyafúr", function() {deepEqual( Stem("agyafúrt"), "agyafúr");});
test("agyafúrtak -> agyafúrt", function() {deepEqual( Stem("agyafúrtak"), "agyafúrt");});
test("agyag -> agyag", function() {deepEqual( Stem("agyag"), "agyag");});
test("agyagot -> agyag", function() {deepEqual( Stem("agyagot"), "agyag");});
test("agyagember -> agyagember", function() {deepEqual( Stem("agyagember"), "agyagember");});
test("agyagfalak -> agyagfal", function() {deepEqual( Stem("agyagfalak"), "agyagfal");});
test("agyagverem -> agyagver", function() {deepEqual( Stem("agyagverem"), "agyagver");});
test("agyalt -> agyal", function() {deepEqual( Stem("agyalt"), "agyal");});
test("agyalágyult -> agyalágyul", function() {deepEqual( Stem("agyalágyult"), "agyalágyul");});
test("agydiagnózist -> agydiagnózis", function() {deepEqual( Stem("agydiagnózist"), "agydiagnózis");});
test("agyelszívás -> agyelszívás", function() {deepEqual( Stem("agyelszívás"), "agyelszívás");});
test("agyhalál -> agyhalál", function() {deepEqual( Stem("agyhalál"), "agyhalál");});
test("agykutatás -> agykutatás", function() {deepEqual( Stem("agykutatás"), "agykutatás");});
test("agykutatásról -> agykutatás", function() {deepEqual( Stem("agykutatásról"), "agykutatás");});
test("agykutató -> agykutató", function() {deepEqual( Stem("agykutató"), "agykutató");});
test("agyközpontok -> agyközpont", function() {deepEqual( Stem("agyközpontok"), "agyközpont");});
test("agyműködésem -> agyműködés", function() {deepEqual( Stem("agyműködésem"), "agyműködés");});
test("agyoncsépelt -> agyoncsépel", function() {deepEqual( Stem("agyoncsépelt"), "agyoncsépel");});
test("agyonlőnek -> agyonlő", function() {deepEqual( Stem("agyonlőnek"), "agyonlő");});
test("agyonlőni -> agyonlőn", function() {deepEqual( Stem("agyonlőni"), "agyonlőn");});
test("agyonlőnék -> agyonlőne", function() {deepEqual( Stem("agyonlőnék"), "agyonlőne");});
test("agyonlőtt -> agyonlőt", function() {deepEqual( Stem("agyonlőtt"), "agyonlőt");});
test("agyonlőttek -> agyonlőtt", function() {deepEqual( Stem("agyonlőttek"), "agyonlőtt");});
test("agyonlövetése -> agyonlövetés", function() {deepEqual( Stem("agyonlövetése"), "agyonlövetés");});
test("agyonlövik -> agyonlöv", function() {deepEqual( Stem("agyonlövik"), "agyonlöv");});
test("agyontechnologizált -> agyontechnologizál", function() {deepEqual( Stem("agyontechnologizált"), "agyontechnologizál");});
test("agyonverik -> agyonver", function() {deepEqual( Stem("agyonverik"), "agyonver");});
test("agyonverni -> agyonvern", function() {deepEqual( Stem("agyonverni"), "agyonvern");});
test("agyonverten -> agyonvert", function() {deepEqual( Stem("agyonverten"), "agyonvert");});
test("agyonverték -> agyonverte", function() {deepEqual( Stem("agyonverték"), "agyonverte");});
test("agyonzenélt -> agyonzenél", function() {deepEqual( Stem("agyonzenélt"), "agyonzenél");});
test("agyonéheztették -> agyonéheztette", function() {deepEqual( Stem("agyonéheztették"), "agyonéheztette");});
test("agyonüthetetlen -> agyonüthetetl", function() {deepEqual( Stem("agyonüthetetlen"), "agyonüthetetl");});
test("agyonüthetik -> agyonüthet", function() {deepEqual( Stem("agyonüthetik"), "agyonüthet");});
test("agyrázkódása -> agyrázkódás", function() {deepEqual( Stem("agyrázkódása"), "agyrázkódás");});
test("agyrémeinek -> agyrém", function() {deepEqual( Stem("agyrémeinek"), "agyrém");});
test("agysejtem -> agysejt", function() {deepEqual( Stem("agysejtem"), "agysejt");});
test("agysejtjeinek -> agysejt", function() {deepEqual( Stem("agysejtjeinek"), "agysejt");});
test("agytekervényeit -> agytekervény", function() {deepEqual( Stem("agytekervényeit"), "agytekervény");});
test("agyterületekre -> agyterület", function() {deepEqual( Stem("agyterületekre"), "agyterület");});
test("agytornafélére -> agytornafél", function() {deepEqual( Stem("agytornafélére"), "agytornafél");});
test("agytörzsig -> agytörzs", function() {deepEqual( Stem("agytörzsig"), "agytörzs");});
test("agyveleje -> agyvele", function() {deepEqual( Stem("agyveleje"), "agyvele");});
test("agyvelejében -> agyvele", function() {deepEqual( Stem("agyvelejében"), "agyvele");});
test("agyvelő -> agyvelő", function() {deepEqual( Stem("agyvelő"), "agyvelő");});
test("agyvizem -> agyviz", function() {deepEqual( Stem("agyvizem"), "agyviz");});
test("agyvérszegény -> agyvérszegény", function() {deepEqual( Stem("agyvérszegény"), "agyvérszegény");});
test("agyvérzés -> agyvérzés", function() {deepEqual( Stem("agyvérzés"), "agyvérzés");});
test("agyvérzése -> agyvérzés", function() {deepEqual( Stem("agyvérzése"), "agyvérzés");});
test("agárdi -> agárd", function() {deepEqual( Stem("agárdi"), "agárd");});
test("ahaja -> aha", function() {deepEqual( Stem("ahaja"), "aha");});
test("ahhoz -> ah", function() {deepEqual( Stem("ahhoz"), "ah");});
test("ahogy -> ahogy", function() {deepEqual( Stem("ahogy"), "ahogy");});
test("ahogyan -> ahogy", function() {deepEqual( Stem("ahogyan"), "ahogy");});
test("ahol -> ahol", function() {deepEqual( Stem("ahol"), "ahol");});
test("aholvalóságos -> aholvalóságos", function() {deepEqual( Stem("aholvalóságos"), "aholvalóságos");});
test("ahonnan -> ahonn", function() {deepEqual( Stem("ahonnan"), "ahonn");});
test("ahonnét -> ahonn", function() {deepEqual( Stem("ahonnét"), "ahonn");});
test("ahoty -> ahoty", function() {deepEqual( Stem("ahoty"), "ahoty");});
test("ahova -> ahov", function() {deepEqual( Stem("ahova"), "ahov");});
test("ahová -> ah", function() {deepEqual( Stem("ahová"), "ah");});
test("ahány -> ahány", function() {deepEqual( Stem("ahány"), "ahány");});
test("ahányan -> ahány", function() {deepEqual( Stem("ahányan"), "ahány");});
test("ahányast -> ahányas", function() {deepEqual( Stem("ahányast"), "ahányas");});
test("ahányat -> ahány", function() {deepEqual( Stem("ahányat"), "ahány");});
test("ahányfajta -> ahányfajt", function() {deepEqual( Stem("ahányfajta"), "ahányfajt");});
test("ahányféle -> ahányfél", function() {deepEqual( Stem("ahányféle"), "ahányfél");});
test("ahányszor -> ahányszor", function() {deepEqual( Stem("ahányszor"), "ahányszor");});
test("ajakmozgatás -> ajakmozgatás", function() {deepEqual( Stem("ajakmozgatás"), "ajakmozgatás");});
test("ajimi -> ajim", function() {deepEqual( Stem("ajimi"), "ajim");});
test("ajjas -> ajjas", function() {deepEqual( Stem("ajjas"), "ajjas");});
test("ajka -> aj", function() {deepEqual( Stem("ajka"), "aj");});
test("ajkai -> aj", function() {deepEqual( Stem("ajkai"), "aj");});
test("ajkait -> aj", function() {deepEqual( Stem("ajkait"), "aj");});
test("ajkak -> ajk", function() {deepEqual( Stem("ajkak"), "ajk");});
test("ajkamhoz -> aj", function() {deepEqual( Stem("ajkamhoz"), "aj");});
test("ajkuk -> aj", function() {deepEqual( Stem("ajkuk"), "aj");});
test("ajkába -> aj", function() {deepEqual( Stem("ajkába"), "aj");});
test("ajkán -> aj", function() {deepEqual( Stem("ajkán"), "aj");});
test("ajkának -> aj", function() {deepEqual( Stem("ajkának"), "aj");});
test("ajkára -> aj", function() {deepEqual( Stem("ajkára"), "aj");});
test("ajkát -> aj", function() {deepEqual( Stem("ajkát"), "aj");});
test("ajtaja -> ajta", function() {deepEqual( Stem("ajtaja"), "ajta");});
test("ajtajában -> ajta", function() {deepEqual( Stem("ajtajában"), "ajta");});
test("ajtajából -> ajta", function() {deepEqual( Stem("ajtajából"), "ajta");});
test("ajtajához -> ajta", function() {deepEqual( Stem("ajtajához"), "ajta");});
test("ajtaján -> ajta", function() {deepEqual( Stem("ajtaján"), "ajta");});
test("ajtaját -> ajta", function() {deepEqual( Stem("ajtaját"), "ajta");});
test("ajtó -> ajtó", function() {deepEqual( Stem("ajtó"), "ajtó");});
test("ajtóba -> ajtó", function() {deepEqual( Stem("ajtóba"), "ajtó");});
test("ajtóban -> ajtó", function() {deepEqual( Stem("ajtóban"), "ajtó");});
test("ajtóból -> ajtó", function() {deepEqual( Stem("ajtóból"), "ajtó");});
test("ajtóhoz -> ajtó", function() {deepEqual( Stem("ajtóhoz"), "ajtó");});
test("ajtóit -> ajtó", function() {deepEqual( Stem("ajtóit"), "ajtó");});
test("ajtójuk -> ajtó", function() {deepEqual( Stem("ajtójuk"), "ajtó");});
test("ajtójában -> ajtó", function() {deepEqual( Stem("ajtójában"), "ajtó");});
test("ajtók -> ajtó", function() {deepEqual( Stem("ajtók"), "ajtó");});
test("ajtókat -> ajtó", function() {deepEqual( Stem("ajtókat"), "ajtó");});
test("ajtókon -> ajtó", function() {deepEqual( Stem("ajtókon"), "ajtó");});
test("ajtóm -> ajtó", function() {deepEqual( Stem("ajtóm"), "ajtó");});
test("ajtón -> ajtó", function() {deepEqual( Stem("ajtón"), "ajtó");});
test("ajtónak -> ajtó", function() {deepEqual( Stem("ajtónak"), "ajtó");});
test("ajtónk -> ajtó", function() {deepEqual( Stem("ajtónk"), "ajtó");});
test("ajtónál -> ajtó", function() {deepEqual( Stem("ajtónál"), "ajtó");});
test("ajtóra -> ajtó", function() {deepEqual( Stem("ajtóra"), "ajtó");});
test("ajtót -> ajtó", function() {deepEqual( Stem("ajtót"), "ajtó");});
test("ajtóval -> ajtó", function() {deepEqual( Stem("ajtóval"), "ajtó");});
test("ajtónyílásra -> ajtónyílás", function() {deepEqual( Stem("ajtónyílásra"), "ajtónyílás");});
test("ajtófélfa -> ajtófélf", function() {deepEqual( Stem("ajtófélfa"), "ajtófélf");});
test("ajtófélfának -> ajtófélf", function() {deepEqual( Stem("ajtófélfának"), "ajtófélf");});
test("ajtó\"-deszkát -> ajtó\"-desz", function() {deepEqual( Stem("ajtó\"-deszkát"), "ajtó\"-desz");});
test("ajtórugdosásnak -> ajtórugdosás", function() {deepEqual( Stem("ajtórugdosásnak"), "ajtórugdosás");});
test("ajtószárnyak -> ajtószárny", function() {deepEqual( Stem("ajtószárnyak"), "ajtószárny");});
test("ajándék -> ajánde", function() {deepEqual( Stem("ajándék"), "ajánde");});
test("ajándéka -> ajánde", function() {deepEqual( Stem("ajándéka"), "ajánde");});
test("ajándékait -> ajánde", function() {deepEqual( Stem("ajándékait"), "ajánde");});
test("ajándékba -> ajánde", function() {deepEqual( Stem("ajándékba"), "ajánde");});
test("ajándékként -> ajánde", function() {deepEqual( Stem("ajándékként"), "ajánde");});
test("ajándéknak -> ajánde", function() {deepEqual( Stem("ajándéknak"), "ajánde");});
test("ajándékod -> ajánde", function() {deepEqual( Stem("ajándékod"), "ajánde");});
test("ajándékokat -> ajándék", function() {deepEqual( Stem("ajándékokat"), "ajándék");});
test("ajándékokra -> ajándék", function() {deepEqual( Stem("ajándékokra"), "ajándék");});
test("ajándékon -> ajánde", function() {deepEqual( Stem("ajándékon"), "ajánde");});
test("ajándékot -> ajánde", function() {deepEqual( Stem("ajándékot"), "ajánde");});
test("ajándékra -> ajánde", function() {deepEqual( Stem("ajándékra"), "ajánde");});
test("ajándékunkért -> ajánde", function() {deepEqual( Stem("ajándékunkért"), "ajánde");});
test("ajándékát -> ajánde", function() {deepEqual( Stem("ajándékát"), "ajánde");});
test("ajándékért -> ajánde", function() {deepEqual( Stem("ajándékért"), "ajánde");});
test("ajándékozni -> ajándékozn", function() {deepEqual( Stem("ajándékozni"), "ajándékozn");});
test("ajándékozott -> ajándékozot", function() {deepEqual( Stem("ajándékozott"), "ajándékozot");});
test("ajándékozott -> ajándékozot", function() {deepEqual( Stem("ajándékozott"), "ajándékozot");});
test("ajándékozta -> ajándékozt", function() {deepEqual( Stem("ajándékozta"), "ajándékozt");});
test("ajándékoztam -> ajándékozt", function() {deepEqual( Stem("ajándékoztam"), "ajándékozt");});
test("ajándékozunk -> ajándékoz", function() {deepEqual( Stem("ajándékozunk"), "ajándékoz");});
test("ajándékozzunk -> ajándékozz", function() {deepEqual( Stem("ajándékozzunk"), "ajándékozz");});
test("ajándékozás -> ajándékozás", function() {deepEqual( Stem("ajándékozás"), "ajándékozás");});
test("ajándékozásnál -> ajándékozás", function() {deepEqual( Stem("ajándékozásnál"), "ajándékozás");});
test("ajándékozással -> ajándékozás", function() {deepEqual( Stem("ajándékozással"), "ajándékozás");});
test("ajándékozó -> ajándékozó", function() {deepEqual( Stem("ajándékozó"), "ajándékozó");});
test("ajándékboltba -> ajándékbolt", function() {deepEqual( Stem("ajándékboltba"), "ajándékbolt");});
test("ajándékrészvény -> ajándékrészvény", function() {deepEqual( Stem("ajándékrészvény"), "ajándékrészvény");});
test("ajándéktárgyakat -> ajándéktárgy", function() {deepEqual( Stem("ajándéktárgyakat"), "ajándéktárgy");});
test("ajánl -> ajánl", function() {deepEqual( Stem("ajánl"), "ajánl");});
test("ajánlanak -> ajánl", function() {deepEqual( Stem("ajánlanak"), "ajánl");});
test("ajánlani -> ajánlan", function() {deepEqual( Stem("ajánlani"), "ajánlan");});
test("ajánlanám -> ajánlana", function() {deepEqual( Stem("ajánlanám"), "ajánlana");});
test("ajánlatott -> ajánlatot", function() {deepEqual( Stem("ajánlatott"), "ajánlatot");});
test("ajánlja -> ajánl", function() {deepEqual( Stem("ajánlja"), "ajánl");});
test("ajánlják -> ajánlja", function() {deepEqual( Stem("ajánlják"), "ajánlja");});
test("ajánlom -> ajánl", function() {deepEqual( Stem("ajánlom"), "ajánl");});
test("ajánlotta -> ajánlott", function() {deepEqual( Stem("ajánlotta"), "ajánlott");});
test("ajánlottak -> ajánlott", function() {deepEqual( Stem("ajánlottak"), "ajánlott");});
test("ajánlottam -> ajánlott", function() {deepEqual( Stem("ajánlottam"), "ajánlott");});
test("ajánlották -> ajánlotta", function() {deepEqual( Stem("ajánlották"), "ajánlotta");});
test("ajánlunk -> ajánl", function() {deepEqual( Stem("ajánlunk"), "ajánl");});
test("ajánlott -> ajánlot", function() {deepEqual( Stem("ajánlott"), "ajánlot");});
test("ajánlat -> ajánl", function() {deepEqual( Stem("ajánlat"), "ajánl");});
test("ajánlata -> ajánlat", function() {deepEqual( Stem("ajánlata"), "ajánlat");});
test("ajánlatai -> ajánlat", function() {deepEqual( Stem("ajánlatai"), "ajánlat");});
test("ajánlatban -> ajánlat", function() {deepEqual( Stem("ajánlatban"), "ajánlat");});
test("ajánlatnak -> ajánlat", function() {deepEqual( Stem("ajánlatnak"), "ajánlat");});
test("ajánlatnak -> ajánlat", function() {deepEqual( Stem("ajánlatnak"), "ajánlat");});
test("ajánlatok -> ajánlat", function() {deepEqual( Stem("ajánlatok"), "ajánlat");});
test("ajánlatokat -> ajánlat", function() {deepEqual( Stem("ajánlatokat"), "ajánlat");});
test("ajánlatokkal -> ajánlat", function() {deepEqual( Stem("ajánlatokkal"), "ajánlat");});
test("ajánlatokról -> ajánlat", function() {deepEqual( Stem("ajánlatokról"), "ajánlat");});
test("ajánlatot -> ajánlat", function() {deepEqual( Stem("ajánlatot"), "ajánlat");});
test("ajánlattal -> ajánl", function() {deepEqual( Stem("ajánlattal"), "ajánl");});
test("ajánlattól -> ajánlat", function() {deepEqual( Stem("ajánlattól"), "ajánlat");});
test("ajánlatukat -> ajánlat", function() {deepEqual( Stem("ajánlatukat"), "ajánlat");});
test("ajánlatukkal -> ajánlat", function() {deepEqual( Stem("ajánlatukkal"), "ajánlat");});
test("ajánlatunk -> ajánlat", function() {deepEqual( Stem("ajánlatunk"), "ajánlat");});
test("ajánlatához -> ajánlat", function() {deepEqual( Stem("ajánlatához"), "ajánlat");});
test("ajánlatának -> ajánlat", function() {deepEqual( Stem("ajánlatának"), "ajánlat");});
test("ajánlatára -> ajánlat", function() {deepEqual( Stem("ajánlatára"), "ajánlat");});
test("ajánlatát -> ajánlat", function() {deepEqual( Stem("ajánlatát"), "ajánlat");});
test("ajánlatától -> ajánlat", function() {deepEqual( Stem("ajánlatától"), "ajánlat");});
test("ajánlatával -> ajánlat", function() {deepEqual( Stem("ajánlatával"), "ajánlat");});
test("ajánlati -> ajánlat", function() {deepEqual( Stem("ajánlati"), "ajánlat");});
test("ajánlatos -> ajánlatos", function() {deepEqual( Stem("ajánlatos"), "ajánlatos");});
test("ajánlatosabb -> ajánlatosabb", function() {deepEqual( Stem("ajánlatosabb"), "ajánlatosabb");});
test("ajánlattevő -> ajánlattevő", function() {deepEqual( Stem("ajánlattevő"), "ajánlattevő");});
test("ajánlattevőnek -> ajánlattevő", function() {deepEqual( Stem("ajánlattevőnek"), "ajánlattevő");});
test("ajánlattevőnek -> ajánlattevő", function() {deepEqual( Stem("ajánlattevőnek"), "ajánlattevő");});
test("ajánlattevővel -> ajánlattevő", function() {deepEqual( Stem("ajánlattevővel"), "ajánlattevő");});
test("ajánlattétel -> ajánlattétel", function() {deepEqual( Stem("ajánlattétel"), "ajánlattétel");});
test("ajánlattétellel -> ajánlattétel", function() {deepEqual( Stem("ajánlattétellel"), "ajánlattétel");});
test("ajánlattételnek -> ajánlattétel", function() {deepEqual( Stem("ajánlattételnek"), "ajánlattétel");});
test("ajánlattételre -> ajánlattétel", function() {deepEqual( Stem("ajánlattételre"), "ajánlattétel");});
test("ajánlattételt -> ajánlattétel", function() {deepEqual( Stem("ajánlattételt"), "ajánlattétel");});
test("ajánlatétel -> ajánlatétel", function() {deepEqual( Stem("ajánlatétel"), "ajánlatétel");});
test("ajánlhasson -> ajánlhass", function() {deepEqual( Stem("ajánlhasson"), "ajánlhass");});
test("ajánlhat -> ajánlh", function() {deepEqual( Stem("ajánlhat"), "ajánlh");});
test("ajánlhatom -> ajánlhat", function() {deepEqual( Stem("ajánlhatom"), "ajánlhat");});
test("ajánlható -> ajánlható", function() {deepEqual( Stem("ajánlható"), "ajánlható");});
test("ajánlás -> ajánlás", function() {deepEqual( Stem("ajánlás"), "ajánlás");});
test("ajánlásainak -> ajánlás", function() {deepEqual( Stem("ajánlásainak"), "ajánlás");});
test("ajánlásainak -> ajánlás", function() {deepEqual( Stem("ajánlásainak"), "ajánlás");});
test("ajánlásokat -> ajánlás", function() {deepEqual( Stem("ajánlásokat"), "ajánlás");});
test("ajánlásokhoz -> ajánlás", function() {deepEqual( Stem("ajánlásokhoz"), "ajánlás");});
test("ajánlásoknak -> ajánlás", function() {deepEqual( Stem("ajánlásoknak"), "ajánlás");});
test("ajánlást -> ajánlás", function() {deepEqual( Stem("ajánlást"), "ajánlás");});
test("ajánlásában -> ajánlás", function() {deepEqual( Stem("ajánlásában"), "ajánlás");});
test("ajánlását -> ajánlás", function() {deepEqual( Stem("ajánlását"), "ajánlás");});
test("ajánló -> ajánló", function() {deepEqual( Stem("ajánló"), "ajánló");});
test("ak-tív -> ak-tív", function() {deepEqual( Stem("ak-tív"), "ak-tív");});
test("akadhat -> akadh", function() {deepEqual( Stem("akadhat"), "akadh");});
test("akadhatnak -> akadhat", function() {deepEqual( Stem("akadhatnak"), "akadhat");});
test("akadhatott -> akadhatot", function() {deepEqual( Stem("akadhatott"), "akadhatot");});
test("akadna -> akadn", function() {deepEqual( Stem("akadna"), "akadn");});
test("akadnak -> ak", function() {deepEqual( Stem("akadnak"), "ak");});
test("akadozva -> akadozv", function() {deepEqual( Stem("akadozva"), "akadozv");});
test("akadozásmentes -> akadozásmentes", function() {deepEqual( Stem("akadozásmentes"), "akadozásmentes");});
test("akadt -> ak", function() {deepEqual( Stem("akadt"), "ak");});
test("akadtak -> akadt", function() {deepEqual( Stem("akadtak"), "akadt");});
test("akadva -> akadv", function() {deepEqual( Stem("akadva"), "akadv");});
test("akadály -> akadály", function() {deepEqual( Stem("akadály"), "akadály");});
test("akadálya -> akadály", function() {deepEqual( Stem("akadálya"), "akadály");});
test("akadályait -> akadály", function() {deepEqual( Stem("akadályait"), "akadály");});
test("akadályba -> akadály", function() {deepEqual( Stem("akadályba"), "akadály");});
test("akadályok -> akadály", function() {deepEqual( Stem("akadályok"), "akadály");});
test("akadályokat -> akadály", function() {deepEqual( Stem("akadályokat"), "akadály");});
test("akadályokba -> akadály", function() {deepEqual( Stem("akadályokba"), "akadály");});
test("akadályokon -> akadály", function() {deepEqual( Stem("akadályokon"), "akadály");});
test("akadályon -> akadály", function() {deepEqual( Stem("akadályon"), "akadály");});
test("akadályt -> akadály", function() {deepEqual( Stem("akadályt"), "akadály");});
test("akadályát -> akadály", function() {deepEqual( Stem("akadályát"), "akadály");});
test("akadálymentesnek -> akadálymentes", function() {deepEqual( Stem("akadálymentesnek"), "akadálymentes");});
test("akadálymentessége -> akadálymentesség", function() {deepEqual( Stem("akadálymentessége"), "akadálymentesség");});
test("akadályozhatja -> akadályozhat", function() {deepEqual( Stem("akadályozhatja"), "akadályozhat");});
test("akadályoz -> akadályoz", function() {deepEqual( Stem("akadályoz"), "akadályoz");});
test("akadályozni -> akadályozn", function() {deepEqual( Stem("akadályozni"), "akadályozn");});
test("akadályoznom -> akadályozn", function() {deepEqual( Stem("akadályoznom"), "akadályozn");});
test("akadályozná -> akadályozna", function() {deepEqual( Stem("akadályozná"), "akadályozna");});
test("akadályozom -> akadályoz", function() {deepEqual( Stem("akadályozom"), "akadályoz");});
test("akadályozta -> akadályozt", function() {deepEqual( Stem("akadályozta"), "akadályozt");});
test("akadályozza -> akadályozz", function() {deepEqual( Stem("akadályozza"), "akadályozz");});
test("akadályozzák -> akadályozza", function() {deepEqual( Stem("akadályozzák"), "akadályozza");});
test("akadályozása -> akadályozás", function() {deepEqual( Stem("akadályozása"), "akadályozás");});
test("akadályoztatva -> akadályoztatv", function() {deepEqual( Stem("akadályoztatva"), "akadályoztatv");});
test("akadályoztatás -> akadályoztatás", function() {deepEqual( Stem("akadályoztatás"), "akadályoztatás");});
test("akadályoztatását -> akadályoztatás", function() {deepEqual( Stem("akadályoztatását"), "akadályoztatás");});
test("akadályoztatásától -> akadályoztatás", function() {deepEqual( Stem("akadályoztatásától"), "akadályoztatás");});
test("akadályozó -> akadályozó", function() {deepEqual( Stem("akadályozó"), "akadályozó");});
test("akadálypályán -> akadálypály", function() {deepEqual( Stem("akadálypályán"), "akadálypály");});
test("akadálytalan -> akadálytal", function() {deepEqual( Stem("akadálytalan"), "akadálytal");});
test("akadékoskodott -> akadékoskodot", function() {deepEqual( Stem("akadékoskodott"), "akadékoskodot");});
test("akadékoskodás -> akadékoskodás", function() {deepEqual( Stem("akadékoskodás"), "akadékoskodás");});
test("akadémiai -> akadémi", function() {deepEqual( Stem("akadémiai"), "akadémi");});
test("akadémikus -> akadémikus", function() {deepEqual( Stem("akadémikus"), "akadémikus");});
test("akadémikussal -> akadémikus", function() {deepEqual( Stem("akadémikussal"), "akadémikus");});
test("akadémiák -> akadémia", function() {deepEqual( Stem("akadémiák"), "akadémia");});
test("akadémiákat -> akadémia", function() {deepEqual( Stem("akadémiákat"), "akadémia");});
test("akadémiáknak -> akadémia", function() {deepEqual( Stem("akadémiáknak"), "akadémia");});
test("akadémiára -> akadém", function() {deepEqual( Stem("akadémiára"), "akadém");});
test("akadémia -> akadém", function() {deepEqual( Stem("akadémia"), "akadém");});
test("akarat -> akar", function() {deepEqual( Stem("akarat"), "akar");});
test("akarata -> akarat", function() {deepEqual( Stem("akarata"), "akarat");});
test("akaratból -> akarat", function() {deepEqual( Stem("akaratból"), "akarat");});
test("akaratodat -> akarat", function() {deepEqual( Stem("akaratodat"), "akarat");});
test("akaratodból -> akarat", function() {deepEqual( Stem("akaratodból"), "akarat");});
test("akaratoknak -> akarat", function() {deepEqual( Stem("akaratoknak"), "akarat");});
test("akaratos -> akaratos", function() {deepEqual( Stem("akaratos"), "akaratos");});
test("akaratosabbak -> akaratosabb", function() {deepEqual( Stem("akaratosabbak"), "akaratosabb");});
test("akarattal -> akar", function() {deepEqual( Stem("akarattal"), "akar");});
test("akarattalan -> akarattal", function() {deepEqual( Stem("akarattalan"), "akarattal");});
test("akarattól -> akarat", function() {deepEqual( Stem("akarattól"), "akarat");});
test("akaratuk -> akarat", function() {deepEqual( Stem("akaratuk"), "akarat");});
test("akaratukat -> akarat", function() {deepEqual( Stem("akaratukat"), "akarat");});
test("akaratukból -> akarat", function() {deepEqual( Stem("akaratukból"), "akarat");});
test("akaratukon -> akarat", function() {deepEqual( Stem("akaratukon"), "akarat");});
test("akaratából -> akarat", function() {deepEqual( Stem("akaratából"), "akarat");});
test("akaratán -> akarat", function() {deepEqual( Stem("akaratán"), "akarat");});
test("akaratának -> akarat", function() {deepEqual( Stem("akaratának"), "akarat");});
test("akaratára -> akarat", function() {deepEqual( Stem("akaratára"), "akarat");});
test("akaratát -> akarat", function() {deepEqual( Stem("akaratát"), "akarat");});
test("akaratától -> akarat", function() {deepEqual( Stem("akaratától"), "akarat");});
test("akarati -> akarat", function() {deepEqual( Stem("akarati"), "akarat");});
test("akarategysége -> akarategység", function() {deepEqual( Stem("akarategysége"), "akarategység");});
test("akaratereje -> akaratere", function() {deepEqual( Stem("akaratereje"), "akaratere");});
test("akaraterejük -> akaratere", function() {deepEqual( Stem("akaraterejük"), "akaratere");});
test("akaraterő -> akaraterő", function() {deepEqual( Stem("akaraterő"), "akaraterő");});
test("akaraterőnk -> akaraterő", function() {deepEqual( Stem("akaraterőnk"), "akaraterő");});
test("akaratlan -> akaratl", function() {deepEqual( Stem("akaratlan"), "akaratl");});
test("akaratlanul -> akaratlan", function() {deepEqual( Stem("akaratlanul"), "akaratlan");});
test("akaratnyilvánítása -> akaratnyilvánítás", function() {deepEqual( Stem("akaratnyilvánítása"), "akaratnyilvánítás");});
test("akaratnyilvánításán -> akaratnyilvánítás", function() {deepEqual( Stem("akaratnyilvánításán"), "akaratnyilvánítás");});
test("akarhat -> akarh", function() {deepEqual( Stem("akarhat"), "akarh");});
test("akarhatna -> akarhatn", function() {deepEqual( Stem("akarhatna"), "akarhatn");});
test("akarhattya -> akarhatty", function() {deepEqual( Stem("akarhattya"), "akarhatty");});
test("akarj -> akarj", function() {deepEqual( Stem("akarj"), "akarj");});
test("akarja -> akar", function() {deepEqual( Stem("akarja"), "akar");});
test("akar -> akar", function() {deepEqual( Stem("akar"), "akar");});
test("akarjon -> akarj", function() {deepEqual( Stem("akarjon"), "akarj");});
test("akarjuk -> akar", function() {deepEqual( Stem("akarjuk"), "akar");});
test("akarják -> akarja", function() {deepEqual( Stem("akarják"), "akarja");});
test("akarjátok -> akarját", function() {deepEqual( Stem("akarjátok"), "akarját");});
test("akarlak -> akarl", function() {deepEqual( Stem("akarlak"), "akarl");});
test("akarna -> akarn", function() {deepEqual( Stem("akarna"), "akarn");});
test("akarnak -> akar", function() {deepEqual( Stem("akarnak"), "akar");});
test("akarni -> akarn", function() {deepEqual( Stem("akarni"), "akarn");});
test("akarná -> akarna", function() {deepEqual( Stem("akarná"), "akarna");});
test("akarnád -> akarna", function() {deepEqual( Stem("akarnád"), "akarna");});
test("akarnák -> akarna", function() {deepEqual( Stem("akarnák"), "akarna");});
test("akarnál -> akar", function() {deepEqual( Stem("akarnál"), "akar");});
test("akarnám -> akarna", function() {deepEqual( Stem("akarnám"), "akarna");});
test("akarnának -> akarn", function() {deepEqual( Stem("akarnának"), "akarn");});
test("akarnánk -> akarna", function() {deepEqual( Stem("akarnánk"), "akarna");});
test("akarnánk -> akarna", function() {deepEqual( Stem("akarnánk"), "akarna");});
test("akarnék -> akarne", function() {deepEqual( Stem("akarnék"), "akarne");});
test("akarod -> akar", function() {deepEqual( Stem("akarod"), "akar");});
test("akarok -> akar", function() {deepEqual( Stem("akarok"), "akar");});
test("akarom -> akar", function() {deepEqual( Stem("akarom"), "akar");});
test("akarsz -> akarsz", function() {deepEqual( Stem("akarsz"), "akarsz");});
test("akart -> akar", function() {deepEqual( Stem("akart"), "akar");});
test("akarta -> akart", function() {deepEqual( Stem("akarta"), "akart");});
test("akartad -> akart", function() {deepEqual( Stem("akartad"), "akart");});
test("akartak -> akart", function() {deepEqual( Stem("akartak"), "akart");});
test("akartalak -> akartal", function() {deepEqual( Stem("akartalak"), "akartal");});
test("akartam -> akart", function() {deepEqual( Stem("akartam"), "akart");});
test("akartok -> akart", function() {deepEqual( Stem("akartok"), "akart");});
test("akartuk -> akart", function() {deepEqual( Stem("akartuk"), "akart");});
test("akartunk -> akart", function() {deepEqual( Stem("akartunk"), "akart");});
test("akarták -> akarta", function() {deepEqual( Stem("akarták"), "akarta");});
test("akartál -> akartál", function() {deepEqual( Stem("akartál"), "akartál");});
test("akarunk -> akar", function() {deepEqual( Stem("akarunk"), "akar");});
test("akarás -> akarás", function() {deepEqual( Stem("akarás"), "akarás");});
test("akaródzik -> akaródz", function() {deepEqual( Stem("akaródzik"), "akaródz");});
test("akaródzott -> akaródzot", function() {deepEqual( Stem("akaródzott"), "akaródzot");});
test("akaródzás -> akaródzás", function() {deepEqual( Stem("akaródzás"), "akaródzás");});
test("akarók -> akaró", function() {deepEqual( Stem("akarók"), "akaró");});
test("akaró -> akaró", function() {deepEqual( Stem("akaró"), "akaró");});
test("akarókat -> akaró", function() {deepEqual( Stem("akarókat"), "akaró");});
test("akasztani -> akasztan", function() {deepEqual( Stem("akasztani"), "akasztan");});
test("akasztom -> akaszt", function() {deepEqual( Stem("akasztom"), "akaszt");});
test("akasztott -> akasztot", function() {deepEqual( Stem("akasztott"), "akasztot");});
test("akasztotta -> akasztott", function() {deepEqual( Stem("akasztotta"), "akasztott");});
test("akasztás -> akasztás", function() {deepEqual( Stem("akasztás"), "akasztás");});
test("akasztásra -> akasztás", function() {deepEqual( Stem("akasztásra"), "akasztás");});
test("akasztást -> akasztás", function() {deepEqual( Stem("akasztást"), "akasztás");});
test("akasztását -> akasztás", function() {deepEqual( Stem("akasztását"), "akasztás");});
test("akat -> ak", function() {deepEqual( Stem("akat"), "ak");});
test("akcentussal -> akcentus", function() {deepEqual( Stem("akcentussal"), "akcentus");});
test("akceptálná -> akceptálna", function() {deepEqual( Stem("akceptálná"), "akceptálna");});
test("akció -> akció", function() {deepEqual( Stem("akció"), "akció");});
test("akcióba -> akció", function() {deepEqual( Stem("akcióba"), "akció");});
test("akcióban -> akció", function() {deepEqual( Stem("akcióban"), "akció");});
test("akcióhoz -> akció", function() {deepEqual( Stem("akcióhoz"), "akció");});
test("akcióinak -> akció", function() {deepEqual( Stem("akcióinak"), "akció");});
test("akciója -> akció", function() {deepEqual( Stem("akciója"), "akció");});
test("akciójáig -> akció", function() {deepEqual( Stem("akciójáig"), "akció");});
test("akciók -> akció", function() {deepEqual( Stem("akciók"), "akció");});
test("akciókat -> akció", function() {deepEqual( Stem("akciókat"), "akció");});
test("akciókhoz -> akció", function() {deepEqual( Stem("akciókhoz"), "akció");});
test("akciókkal -> akció", function() {deepEqual( Stem("akciókkal"), "akció");});
test("akcióknak -> akció", function() {deepEqual( Stem("akcióknak"), "akció");});
test("akciókról -> akció", function() {deepEqual( Stem("akciókról"), "akció");});
test("akciónak -> akció", function() {deepEqual( Stem("akciónak"), "akció");});
test("akciónkkal -> akció", function() {deepEqual( Stem("akciónkkal"), "akció");});
test("akcióra -> akció", function() {deepEqual( Stem("akcióra"), "akció");});
test("akciós -> akciós", function() {deepEqual( Stem("akciós"), "akciós");});
test("akciót -> akció", function() {deepEqual( Stem("akciót"), "akció");});
test("akciótól -> akció", function() {deepEqual( Stem("akciótól"), "akció");});
test("akcióval -> akció", function() {deepEqual( Stem("akcióval"), "akció");});
test("akciófilm-forgatókönyvírói -> akciófilm-forgatókönyvíró", function() {deepEqual( Stem("akciófilm-forgatókönyvírói"), "akciófilm-forgatókönyvíró");});
test("akciófilmet -> akciófil", function() {deepEqual( Stem("akciófilmet"), "akciófil");});
test("akciósorozatban -> akciósorozat", function() {deepEqual( Stem("akciósorozatban"), "akciósorozat");});
test("akcióparancsnok -> akcióparancsn", function() {deepEqual( Stem("akcióparancsnok"), "akcióparancsn");});
test("aki -> ak", function() {deepEqual( Stem("aki"), "ak");});
test("akihez -> ak", function() {deepEqual( Stem("akihez"), "ak");});
test("akik -> ak", function() {deepEqual( Stem("akik"), "ak");});
test("akikben -> ak", function() {deepEqual( Stem("akikben"), "ak");});
test("akiken -> ak", function() {deepEqual( Stem("akiken"), "ak");});
test("akiket -> ak", function() {deepEqual( Stem("akiket"), "ak");});
test("akikhez -> ak", function() {deepEqual( Stem("akikhez"), "ak");});
test("akikkel -> ak", function() {deepEqual( Stem("akikkel"), "ak");});
test("akiknek -> ak", function() {deepEqual( Stem("akiknek"), "ak");});
test("akiknél -> ak", function() {deepEqual( Stem("akiknél"), "ak");});
test("akikről -> ak", function() {deepEqual( Stem("akikről"), "ak");});
test("akiktől -> ak", function() {deepEqual( Stem("akiktől"), "ak");});
test("akin -> ak", function() {deepEqual( Stem("akin"), "ak");});
test("akinél -> ak", function() {deepEqual( Stem("akinél"), "ak");});
test("akire -> ak", function() {deepEqual( Stem("akire"), "ak");});
test("akit -> ak", function() {deepEqual( Stem("akit"), "ak");});
test("akitől -> ak", function() {deepEqual( Stem("akitől"), "ak");});
test("akivel -> ak", function() {deepEqual( Stem("akivel"), "ak");});
test("akié -> ak", function() {deepEqual( Stem("akié"), "ak");});
test("akinyit -> akiny", function() {deepEqual( Stem("akinyit"), "akiny");});
test("akkor -> ak", function() {deepEqual( Stem("akkor"), "ak");});
test("akkora -> ak", function() {deepEqual( Stem("akkora"), "ak");});
test("akkori -> akkor", function() {deepEqual( Stem("akkori"), "akkor");});
test("akkormikor -> akkorm", function() {deepEqual( Stem("akkormikor"), "akkorm");});
test("akkormár -> akkormár", function() {deepEqual( Stem("akkormár"), "akkormár");});
test("akkorák -> akkora", function() {deepEqual( Stem("akkorák"), "akkora");});
test("akkorára -> akkor", function() {deepEqual( Stem("akkorára"), "akkor");});
test("akkorára -> akkor", function() {deepEqual( Stem("akkorára"), "akkor");});
test("akkorát -> akkor", function() {deepEqual( Stem("akkorát"), "akkor");});
test("akkreditált -> akkreditál", function() {deepEqual( Stem("akkreditált"), "akkreditál");});
test("akkumulátor -> akkumulátor", function() {deepEqual( Stem("akkumulátor"), "akkumulátor");});
test("akkumulátormodul -> akkumulátorm", function() {deepEqual( Stem("akkumulátormodul"), "akkumulátorm");});
test("akkurátus -> akkurátus", function() {deepEqual( Stem("akkurátus"), "akkurátus");});
test("aknahatástalanítás -> aknahatástalanítás", function() {deepEqual( Stem("aknahatástalanítás"), "aknahatástalanítás");});
test("aknamentesítést -> aknamentesítés", function() {deepEqual( Stem("aknamentesítést"), "aknamentesítés");});
test("aknában -> akn", function() {deepEqual( Stem("aknában"), "akn");});
test("akna -> akn", function() {deepEqual( Stem("akna"), "akn");});
test("aknáig -> akn", function() {deepEqual( Stem("aknáig"), "akn");});
test("aknák -> akna", function() {deepEqual( Stem("aknák"), "akna");});
test("aknákat -> akna", function() {deepEqual( Stem("aknákat"), "akna");});
test("aknákkal -> akna", function() {deepEqual( Stem("aknákkal"), "akna");});
test("aknákon -> akna", function() {deepEqual( Stem("aknákon"), "akna");});
test("aknázhatják -> aknázhatja", function() {deepEqual( Stem("aknázhatják"), "aknázhatja");});
test("aknázhatók -> aknázható", function() {deepEqual( Stem("aknázhatók"), "aknázható");});
test("aknázni -> aknázn", function() {deepEqual( Stem("aknázni"), "aknázn");});
test("aknázná -> aknázna", function() {deepEqual( Stem("aknázná"), "aknázna");});
test("akrobatikai -> akrobati", function() {deepEqual( Stem("akrobatikai"), "akrobati");});
test("aksi -> aks", function() {deepEqual( Stem("aksi"), "aks");});
test("aksit -> aks", function() {deepEqual( Stem("aksit"), "aks");});
test("aktatáska -> aktatás", function() {deepEqual( Stem("aktatáska"), "aktatás");});
test("aktatáskájába -> aktatáská", function() {deepEqual( Stem("aktatáskájába"), "aktatáská");});
test("aktatömeggel -> aktatömeg", function() {deepEqual( Stem("aktatömeggel"), "aktatömeg");});
test("aktivistaként -> aktivist", function() {deepEqual( Stem("aktivistaként"), "aktivist");});
test("aktivisták -> aktivista", function() {deepEqual( Stem("aktivisták"), "aktivista");});
test("aktivitás -> aktivitás", function() {deepEqual( Stem("aktivitás"), "aktivitás");});
test("aktivitása -> aktivitás", function() {deepEqual( Stem("aktivitása"), "aktivitás");});
test("aktivitást -> aktivitás", function() {deepEqual( Stem("aktivitást"), "aktivitás");});
test("aktivizálni -> aktivizáln", function() {deepEqual( Stem("aktivizálni"), "aktivizáln");});
test("aktivációs -> aktivációs", function() {deepEqual( Stem("aktivációs"), "aktivációs");});
test("aktiválását -> aktiválás", function() {deepEqual( Stem("aktiválását"), "aktiválás");});
test("aktualitásairól -> aktualitás", function() {deepEqual( Stem("aktualitásairól"), "aktualitás");});
test("aktualitások -> aktualitás", function() {deepEqual( Stem("aktualitások"), "aktualitás");});
test("aktualitásokkal -> aktualitás", function() {deepEqual( Stem("aktualitásokkal"), "aktualitás");});
test("aktualizálható -> aktualizálható", function() {deepEqual( Stem("aktualizálható"), "aktualizálható");});
test("aktualizálta -> aktualizált", function() {deepEqual( Stem("aktualizálta"), "aktualizált");});
test("aktus -> aktus", function() {deepEqual( Stem("aktus"), "aktus");});
test("aktusa -> aktus", function() {deepEqual( Stem("aktusa"), "aktus");});
test("aktusait -> aktus", function() {deepEqual( Stem("aktusait"), "aktus");});
test("aktusra -> aktus", function() {deepEqual( Stem("aktusra"), "aktus");});
test("aktussal -> aktus", function() {deepEqual( Stem("aktussal"), "aktus");});
test("aktust -> aktus", function() {deepEqual( Stem("aktust"), "aktus");});
test("aktusához -> aktus", function() {deepEqual( Stem("aktusához"), "aktus");});
test("aktusának -> aktus", function() {deepEqual( Stem("aktusának"), "aktus");});
test("aktusát -> aktus", function() {deepEqual( Stem("aktusát"), "aktus");});
test("aktuális -> aktuális", function() {deepEqual( Stem("aktuális"), "aktuális");});
test("aktuálissá -> aktuális", function() {deepEqual( Stem("aktuálissá"), "aktuális");});
test("aktuálistól -> aktuális", function() {deepEqual( Stem("aktuálistól"), "aktuális");});
test("aktív -> aktív", function() {deepEqual( Stem("aktív"), "aktív");});
test("aktívabb -> aktívabb", function() {deepEqual( Stem("aktívabb"), "aktívabb");});
test("aktívak -> aktív", function() {deepEqual( Stem("aktívak"), "aktív");});
test("aktívan -> aktív", function() {deepEqual( Stem("aktívan"), "aktív");});
test("aktívként -> aktív", function() {deepEqual( Stem("aktívként"), "aktív");});
test("aktívvá -> aktív", function() {deepEqual( Stem("aktívvá"), "aktív");});
test("aktívum -> aktívu", function() {deepEqual( Stem("aktívum"), "aktívu");});
test("akupunktúra -> akupunktú", function() {deepEqual( Stem("akupunktúra"), "akupunktú");});
test("akusztikus -> akusztikus", function() {deepEqual( Stem("akusztikus"), "akusztikus");});
test("akváriumokkal -> akvárium", function() {deepEqual( Stem("akváriumokkal"), "akvárium");});
test("akár -> akár", function() {deepEqual( Stem("akár"), "akár");});
test("akárcsak -> akárcs", function() {deepEqual( Stem("akárcsak"), "akárcs");});
test("akárha -> akárh", function() {deepEqual( Stem("akárha"), "akárh");});
test("akárhogy -> akárhogy", function() {deepEqual( Stem("akárhogy"), "akárhogy");});
test("akárhol -> akárhol", function() {deepEqual( Stem("akárhol"), "akárhol");});
test("akárhonnan -> akárhonn", function() {deepEqual( Stem("akárhonnan"), "akárhonn");});
test("akárhova -> akárhov", function() {deepEqual( Stem("akárhova"), "akárhov");});
test("akárhány -> akárhány", function() {deepEqual( Stem("akárhány"), "akárhány");});
test("akárhányagyára -> akárhányagy", function() {deepEqual( Stem("akárhányagyára"), "akárhányagy");});
test("akárhányszor -> akárhányszor", function() {deepEqual( Stem("akárhányszor"), "akárhányszor");});
test("akárki -> akár", function() {deepEqual( Stem("akárki"), "akár");});
test("akárkinek -> akár", function() {deepEqual( Stem("akárkinek"), "akár");});
test("akármelyik -> akármely", function() {deepEqual( Stem("akármelyik"), "akármely");});
test("akármennyire -> akármenny", function() {deepEqual( Stem("akármennyire"), "akármenny");});
test("akármennyit -> akármenny", function() {deepEqual( Stem("akármennyit"), "akármenny");});
test("akármerre -> akármer", function() {deepEqual( Stem("akármerre"), "akármer");});
test("akármi -> akárm", function() {deepEqual( Stem("akármi"), "akárm");});
test("akármit -> akárm", function() {deepEqual( Stem("akármit"), "akárm");});
test("akármikor -> akárm", function() {deepEqual( Stem("akármikor"), "akárm");});
test("akármilyen -> akármily", function() {deepEqual( Stem("akármilyen"), "akármily");});
test("akármilyet -> akármily", function() {deepEqual( Stem("akármilyet"), "akármily");});
test("akármint -> akármin", function() {deepEqual( Stem("akármint"), "akármin");});
test("akármire -> akárm", function() {deepEqual( Stem("akármire"), "akárm");});
test("akármiről -> akárm", function() {deepEqual( Stem("akármiről"), "akárm");});
test("akörül -> akör", function() {deepEqual( Stem("akörül"), "akör");});
test("aközben -> aköz", function() {deepEqual( Stem("aközben"), "aköz");});
test("al -> al", function() {deepEqual( Stem("al"), "al");});
test("al-harobba -> al-harob", function() {deepEqual( Stem("al-harobba"), "al-harob");});
test("alacsony -> alacsony", function() {deepEqual( Stem("alacsony"), "alacsony");});
test("alacsonyabb -> alacsonyabb", function() {deepEqual( Stem("alacsonyabb"), "alacsonyabb");});
test("alacsonyabbak -> alacsonyabb", function() {deepEqual( Stem("alacsonyabbak"), "alacsonyabb");});
test("alacsonyabban -> alacsonyab", function() {deepEqual( Stem("alacsonyabban"), "alacsonyab");});
test("alacsonyabbra -> alacsonyabb", function() {deepEqual( Stem("alacsonyabbra"), "alacsonyabb");});
test("lacsonyabbá -> lacsonyab", function() {deepEqual( Stem("lacsonyabbá"), "lacsonyab");});
test("alacsonyak -> alacsony", function() {deepEqual( Stem("alacsonyak"), "alacsony");});
test("alacsonyan -> alacsony", function() {deepEqual( Stem("alacsonyan"), "alacsony");});
test("alacsonynak -> alacsony", function() {deepEqual( Stem("alacsonynak"), "alacsony");});
test("alacsonyra -> alacsony", function() {deepEqual( Stem("alacsonyra"), "alacsony");});
test("alagsorba -> alagsor", function() {deepEqual( Stem("alagsorba"), "alagsor");});
test("alagsori -> alagsor", function() {deepEqual( Stem("alagsori"), "alagsor");});
test("alagutakon -> alagut", function() {deepEqual( Stem("alagutakon"), "alagut");});
test("alagútban -> alagút", function() {deepEqual( Stem("alagútban"), "alagút");});
test("alagútjaiba -> alagút", function() {deepEqual( Stem("alagútjaiba"), "alagút");});
test("alagútnak -> alagút", function() {deepEqual( Stem("alagútnak"), "alagút");});
test("alagútprotokollt -> alagútprotokoll", function() {deepEqual( Stem("alagútprotokollt"), "alagútprotokoll");});
test("alaki -> al", function() {deepEqual( Stem("alaki"), "al");});
test("alakilag -> alakilag", function() {deepEqual( Stem("alakilag"), "alakilag");});
test("alakiság -> alakiság", function() {deepEqual( Stem("alakiság"), "alakiság");});
test("alakisága -> alakiság", function() {deepEqual( Stem("alakisága"), "alakiság");});
test("alakisághoz -> alakiság", function() {deepEqual( Stem("alakisághoz"), "alakiság");});
test("alakisági -> alakiság", function() {deepEqual( Stem("alakisági"), "alakiság");});
test("alakiságok -> alakiság", function() {deepEqual( Stem("alakiságok"), "alakiság");});
test("alakiságokkal -> alakiság", function() {deepEqual( Stem("alakiságokkal"), "alakiság");});
test("alakiságokra -> alakiság", function() {deepEqual( Stem("alakiságokra"), "alakiság");});
test("alakiságának -> alakiság", function() {deepEqual( Stem("alakiságának"), "alakiság");});
test("alakiságánál -> alakiság", function() {deepEqual( Stem("alakiságánál"), "alakiság");});
test("alakiságát -> alakiság", function() {deepEqual( Stem("alakiságát"), "alakiság");});
test("alak -> al", function() {deepEqual( Stem("alak"), "al");});
test("alakba -> al", function() {deepEqual( Stem("alakba"), "al");});
test("alakban -> al", function() {deepEqual( Stem("alakban"), "al");});
test("alakhoz -> al", function() {deepEqual( Stem("alakhoz"), "al");});
test("alakja -> al", function() {deepEqual( Stem("alakja"), "al");});
test("alakjába -> al", function() {deepEqual( Stem("alakjába"), "al");});
test("alakjában -> al", function() {deepEqual( Stem("alakjában"), "al");});
test("alakjához -> al", function() {deepEqual( Stem("alakjához"), "al");});
test("alakjának -> al", function() {deepEqual( Stem("alakjának"), "al");});
test("alakjánál -> al", function() {deepEqual( Stem("alakjánál"), "al");});
test("alakjára -> al", function() {deepEqual( Stem("alakjára"), "al");});
test("alakjáról -> al", function() {deepEqual( Stem("alakjáról"), "al");});
test("alakjával -> al", function() {deepEqual( Stem("alakjával"), "al");});
test("alakkal -> al", function() {deepEqual( Stem("alakkal"), "al");});
test("alaknak -> al", function() {deepEqual( Stem("alaknak"), "al");});
test("alakok -> alak", function() {deepEqual( Stem("alakok"), "alak");});
test("alakokat -> alak", function() {deepEqual( Stem("alakokat"), "alak");});
test("alakokkal -> alak", function() {deepEqual( Stem("alakokkal"), "alak");});
test("alakot -> al", function() {deepEqual( Stem("alakot"), "al");});
test("alakra -> al", function() {deepEqual( Stem("alakra"), "al");});
test("alakú -> alakú", function() {deepEqual( Stem("alakú"), "alakú");});
test("alakszerű -> alakszerű", function() {deepEqual( Stem("alakszerű"), "alakszerű");});
test("alakszerűségekkel -> alakszerűség", function() {deepEqual( Stem("alakszerűségekkel"), "alakszerűség");});
test("alakszerűségi -> alakszerűség", function() {deepEqual( Stem("alakszerűségi"), "alakszerűség");});
test("alakszerűségére -> alakszerűség", function() {deepEqual( Stem("alakszerűségére"), "alakszerűség");});
test("alakszerűségét -> alakszerűség", function() {deepEqual( Stem("alakszerűségét"), "alakszerűség");});
test("alakszerűségével -> alakszerűség", function() {deepEqual( Stem("alakszerűségével"), "alakszerűség");});
test("alaktalan -> alaktal", function() {deepEqual( Stem("alaktalan"), "alaktal");});
test("alaktalanul -> alaktalan", function() {deepEqual( Stem("alaktalanul"), "alaktalan");});
test("alaktorzítás -> alaktorzítás", function() {deepEqual( Stem("alaktorzítás"), "alaktorzítás");});
test("alakulat -> alakul", function() {deepEqual( Stem("alakulat"), "alakul");});
test("alakulatai -> alakulat", function() {deepEqual( Stem("alakulatai"), "alakulat");});
test("alakulataira -> alakulat", function() {deepEqual( Stem("alakulataira"), "alakulat");});
test("alakulatnál -> alakulat", function() {deepEqual( Stem("alakulatnál"), "alakulat");});
test("alakulatok -> alakulat", function() {deepEqual( Stem("alakulatok"), "alakulat");});
test("alakulatokhoz -> alakulat", function() {deepEqual( Stem("alakulatokhoz"), "alakulat");});
test("alakulhat -> alakulh", function() {deepEqual( Stem("alakulhat"), "alakulh");});
test("alakulhatna -> alakulhatn", function() {deepEqual( Stem("alakulhatna"), "alakulhatn");});
test("alakulhatnak -> alakulhat", function() {deepEqual( Stem("alakulhatnak"), "alakulhat");});
test("alakulhattak -> alakulhatt", function() {deepEqual( Stem("alakulhattak"), "alakulhatt");});
test("alakuljanak -> alakul", function() {deepEqual( Stem("alakuljanak"), "alakul");});
test("alakul -> al", function() {deepEqual( Stem("alakul"), "al");});
test("alakuljon -> alakulj", function() {deepEqual( Stem("alakuljon"), "alakulj");});
test("alakulna -> alakuln", function() {deepEqual( Stem("alakulna"), "alakuln");});
test("alakulnak -> alakul", function() {deepEqual( Stem("alakulnak"), "alakul");});
test("alakulni -> alakuln", function() {deepEqual( Stem("alakulni"), "alakuln");});
test("alakulnod -> alakuln", function() {deepEqual( Stem("alakulnod"), "alakuln");});
test("alakult -> alakul", function() {deepEqual( Stem("alakult"), "alakul");});
test("alakult -> alakul", function() {deepEqual( Stem("alakult"), "alakul");});
test("alakultak -> alakult", function() {deepEqual( Stem("alakultak"), "alakult");});
test("alakultnak -> alakult", function() {deepEqual( Stem("alakultnak"), "alakult");});
test("alakulása -> alakulás", function() {deepEqual( Stem("alakulása"), "alakulás");});
test("alakulási -> alakulás", function() {deepEqual( Stem("alakulási"), "alakulás");});
test("alakulásában -> alakulás", function() {deepEqual( Stem("alakulásában"), "alakulás");});
test("alakulásának -> alakulás", function() {deepEqual( Stem("alakulásának"), "alakulás");});
test("alakulására -> alakulás", function() {deepEqual( Stem("alakulására"), "alakulás");});
test("alakulásáról -> alakulás", function() {deepEqual( Stem("alakulásáról"), "alakulás");});
test("alakulását -> alakulás", function() {deepEqual( Stem("alakulását"), "alakulás");});
test("alakulásával -> alakulás", function() {deepEqual( Stem("alakulásával"), "alakulás");});
test("alakuló -> alakuló", function() {deepEqual( Stem("alakuló"), "alakuló");});
test("alakulóban -> alakuló", function() {deepEqual( Stem("alakulóban"), "alakuló");});
test("alakulók -> alakuló", function() {deepEqual( Stem("alakulók"), "alakuló");});
test("alakzata -> alakzat", function() {deepEqual( Stem("alakzata"), "alakzat");});
test("alakzatainál -> alakzat", function() {deepEqual( Stem("alakzatainál"), "alakzat");});
test("alakzataival -> alakzat", function() {deepEqual( Stem("alakzataival"), "alakzat");});
test("alakzatban -> alakzat", function() {deepEqual( Stem("alakzatban"), "alakzat");});
test("alakzatok -> alakzat", function() {deepEqual( Stem("alakzatok"), "alakzat");});
test("alakzatának -> alakzat", function() {deepEqual( Stem("alakzatának"), "alakzat");});
test("alakzatánál -> alakzat", function() {deepEqual( Stem("alakzatánál"), "alakzat");});
test("alakzatára -> alakzat", function() {deepEqual( Stem("alakzatára"), "alakzat");});
test("alakzatát -> alakzat", function() {deepEqual( Stem("alakzatát"), "alakzat");});
test("alakítgatok -> alakítgat", function() {deepEqual( Stem("alakítgatok"), "alakítgat");});
test("alakíthat -> alakíth", function() {deepEqual( Stem("alakíthat"), "alakíth");});
test("alakíthatja -> alakíthat", function() {deepEqual( Stem("alakíthatja"), "alakíthat");});
test("alakíthatnak -> alakíthat", function() {deepEqual( Stem("alakíthatnak"), "alakíthat");});
test("alakíthatunk -> alakíthat", function() {deepEqual( Stem("alakíthatunk"), "alakíthat");});
test("alakítható -> alakítható", function() {deepEqual( Stem("alakítható"), "alakítható");});
test("alakíthatóak -> alakítható", function() {deepEqual( Stem("alakíthatóak"), "alakítható");});
test("alakíthatók -> alakítható", function() {deepEqual( Stem("alakíthatók"), "alakítható");});
test("alakít -> alakí", function() {deepEqual( Stem("alakít"), "alakí");});
test("alakítanak -> alakít", function() {deepEqual( Stem("alakítanak"), "alakít");});
test("alakítani -> alakítan", function() {deepEqual( Stem("alakítani"), "alakítan");});
test("alakítania -> alakítan", function() {deepEqual( Stem("alakítania"), "alakítan");});
test("alakítanák -> alakítana", function() {deepEqual( Stem("alakítanák"), "alakítana");});
test("alakítja -> alakít", function() {deepEqual( Stem("alakítja"), "alakít");});
test("alakítjuk -> alakít", function() {deepEqual( Stem("alakítjuk"), "alakít");});
test("alakítják -> alakítja", function() {deepEqual( Stem("alakítják"), "alakítja");});
test("alakított -> alakítot", function() {deepEqual( Stem("alakított"), "alakítot");});
test("alakította -> alakított", function() {deepEqual( Stem("alakította"), "alakított");});
test("alakítottak -> alakított", function() {deepEqual( Stem("alakítottak"), "alakított");});
test("alakítottam -> alakított", function() {deepEqual( Stem("alakítottam"), "alakított");});
test("alakították -> alakította", function() {deepEqual( Stem("alakították"), "alakította");});
test("alakítsam -> alakíts", function() {deepEqual( Stem("alakítsam"), "alakíts");});
test("alakítsanak -> alakíts", function() {deepEqual( Stem("alakítsanak"), "alakíts");});
test("alakítson -> alakíts", function() {deepEqual( Stem("alakítson"), "alakíts");});
test("alakítsák -> alakítsa", function() {deepEqual( Stem("alakítsák"), "alakítsa");});
test("alakíttatott -> alakíttatot", function() {deepEqual( Stem("alakíttatott"), "alakíttatot");});
test("alakítunk -> alakít", function() {deepEqual( Stem("alakítunk"), "alakít");});
test("alakítva -> alakítv", function() {deepEqual( Stem("alakítva"), "alakítv");});
test("alakítása -> alakítás", function() {deepEqual( Stem("alakítása"), "alakítás");});
test("alakításai -> alakítás", function() {deepEqual( Stem("alakításai"), "alakítás");});
test("alakításába -> alakítás", function() {deepEqual( Stem("alakításába"), "alakítás");});
test("alakításához -> alakítás", function() {deepEqual( Stem("alakításához"), "alakítás");});
test("alakításánál -> alakítás", function() {deepEqual( Stem("alakításánál"), "alakítás");});
test("alakítását -> alakítás", function() {deepEqual( Stem("alakítását"), "alakítás");});
test("alakításával -> alakítás", function() {deepEqual( Stem("alakításával"), "alakítás");});
test("alant -> alan", function() {deepEqual( Stem("alant"), "alan");});
test("alanti -> alant", function() {deepEqual( Stem("alanti"), "alant");});
test("alantas -> alantas", function() {deepEqual( Stem("alantas"), "alantas");});
test("alany -> alany", function() {deepEqual( Stem("alany"), "alany");});
test("alanya -> alany", function() {deepEqual( Stem("alanya"), "alany");});
test("alanyainak -> alany", function() {deepEqual( Stem("alanyainak"), "alany");});
test("alanyaira -> alany", function() {deepEqual( Stem("alanyaira"), "alany");});
test("alanyi -> alany", function() {deepEqual( Stem("alanyi"), "alany");});
test("alanyváltozás -> alanyváltozás", function() {deepEqual( Stem("alanyváltozás"), "alanyváltozás");});
test("alapadatai -> alapadat", function() {deepEqual( Stem("alapadatai"), "alapadat");});
test("alapadatokat -> alapadat", function() {deepEqual( Stem("alapadatokat"), "alapadat");});
test("alapanyag -> alapanyag", function() {deepEqual( Stem("alapanyag"), "alapanyag");});
test("alapanyagból -> alapanyag", function() {deepEqual( Stem("alapanyagból"), "alapanyag");});
test("alapanyagokat -> alapanyag", function() {deepEqual( Stem("alapanyagokat"), "alapanyag");});
test("alapanyagokból -> alapanyag", function() {deepEqual( Stem("alapanyagokból"), "alapanyag");});
test("alapanyag-termelők -> alapanyag-termelő", function() {deepEqual( Stem("alapanyag-termelők"), "alapanyag-termelő");});
test("alapanyagú -> alapanyagú", function() {deepEqual( Stem("alapanyagú"), "alapanyagú");});
test("alapbeállítás -> alapbeállítás", function() {deepEqual( Stem("alapbeállítás"), "alapbeállítás");});
test("alapbeállítása -> alapbeállítás", function() {deepEqual( Stem("alapbeállítása"), "alapbeállítás");});
test("alapbeállításban -> alapbeállítás", function() {deepEqual( Stem("alapbeállításban"), "alapbeállítás");});
test("alapbérek -> alapbér", function() {deepEqual( Stem("alapbérek"), "alapbér");});
test("alapbéremelést -> alapbéremelés", function() {deepEqual( Stem("alapbéremelést"), "alapbéremelés");});
test("alapbérüket -> alapbér", function() {deepEqual( Stem("alapbérüket"), "alapbér");});
test("alapcél -> alapcél", function() {deepEqual( Stem("alapcél"), "alapcél");});
test("alapcímletekre -> alapcímlet", function() {deepEqual( Stem("alapcímletekre"), "alapcímlet");});
test("alapcímletéhez -> alapcímlet", function() {deepEqual( Stem("alapcímletéhez"), "alapcímlet");});
test("alapdilemmája -> alapdilemmá", function() {deepEqual( Stem("alapdilemmája"), "alapdilemmá");});
test("alapdokumentuma -> alapdokumentum", function() {deepEqual( Stem("alapdokumentuma"), "alapdokumentum");});
test("alapdolgait -> alapdolg", function() {deepEqual( Stem("alapdolgait"), "alapdolg");});
test("alapdíjnak -> alapdíj", function() {deepEqual( Stem("alapdíjnak"), "alapdíj");});
test("alapegysége -> alapegység", function() {deepEqual( Stem("alapegysége"), "alapegység");});
test("alapegységeként -> alapegység", function() {deepEqual( Stem("alapegységeként"), "alapegység");});
test("alapelem -> alapel", function() {deepEqual( Stem("alapelem"), "alapel");});
test("alapeleme -> alapelem", function() {deepEqual( Stem("alapeleme"), "alapelem");});
test("alapellátást -> alapellátás", function() {deepEqual( Stem("alapellátást"), "alapellátás");});
test("alapellátását -> alapellátás", function() {deepEqual( Stem("alapellátását"), "alapellátás");});
test("alapelv -> alapelv", function() {deepEqual( Stem("alapelv"), "alapelv");});
test("alapelveinek -> alapelv", function() {deepEqual( Stem("alapelveinek"), "alapelv");});
test("alapelveiről -> alapelv", function() {deepEqual( Stem("alapelveiről"), "alapelv");});
test("alapelveit -> alapelv", function() {deepEqual( Stem("alapelveit"), "alapelv");});
test("alapelvek -> alapelv", function() {deepEqual( Stem("alapelvek"), "alapelv");});
test("alapelveknek -> alapelv", function() {deepEqual( Stem("alapelveknek"), "alapelv");});
test("alapelvet -> alapelv", function() {deepEqual( Stem("alapelvet"), "alapelv");});
test("alapelvként -> alapelv", function() {deepEqual( Stem("alapelvként"), "alapelv");});
test("alapelvének -> alapelv", function() {deepEqual( Stem("alapelvének"), "alapelv");});
test("alapelvét -> alapelv", function() {deepEqual( Stem("alapelvét"), "alapelv");});
test("alapeseteit -> alapeset", function() {deepEqual( Stem("alapeseteit"), "alapeset");});
test("alapeszméi -> alapesz", function() {deepEqual( Stem("alapeszméi"), "alapesz");});
test("alapfejlesztőkre -> alapfejlesztő", function() {deepEqual( Stem("alapfejlesztőkre"), "alapfejlesztő");});
test("alapfelszereltség -> alapfelszereltség", function() {deepEqual( Stem("alapfelszereltség"), "alapfelszereltség");});
test("alapfelszereltséghez -> alapfelszereltség", function() {deepEqual( Stem("alapfelszereltséghez"), "alapfelszereltség");});
test("alapfelszereltségként -> alapfelszereltség", function() {deepEqual( Stem("alapfelszereltségként"), "alapfelszereltség");});
test("alapfelszereléséhez -> alapfelszerelés", function() {deepEqual( Stem("alapfelszereléséhez"), "alapfelszerelés");});
test("alapfeltevése -> alapfeltevés", function() {deepEqual( Stem("alapfeltevése"), "alapfeltevés");});
test("alapfeltétele -> alapfeltétel", function() {deepEqual( Stem("alapfeltétele"), "alapfeltétel");});
test("alapfilozófiája -> alapfilozófiá", function() {deepEqual( Stem("alapfilozófiája"), "alapfilozófiá");});
test("alapfogalmait -> alapfogalm", function() {deepEqual( Stem("alapfogalmait"), "alapfogalm");});
test("alapfogalmakat -> alapfogalm", function() {deepEqual( Stem("alapfogalmakat"), "alapfogalm");});
test("alapfokú -> alapfokú", function() {deepEqual( Stem("alapfokú"), "alapfokú");});
test("alapfokút -> alapfokú", function() {deepEqual( Stem("alapfokút"), "alapfokú");});
test("alapfunkcionalitása -> alapfunkcionalitás", function() {deepEqual( Stem("alapfunkcionalitása"), "alapfunkcionalitás");});
test("alapfunkciók -> alapfunkció", function() {deepEqual( Stem("alapfunkciók"), "alapfunkció");});
test("alapfunkciókat -> alapfunkció", function() {deepEqual( Stem("alapfunkciókat"), "alapfunkció");});
test("alapfunkciókban -> alapfunkció", function() {deepEqual( Stem("alapfunkciókban"), "alapfunkció");});
test("alapfunkción -> alapfunkció", function() {deepEqual( Stem("alapfunkción"), "alapfunkció");});
test("alapgondolat -> alapgondol", function() {deepEqual( Stem("alapgondolat"), "alapgondol");});
test("alapgép -> alapgép", function() {deepEqual( Stem("alapgép"), "alapgép");});
test("alaphangot -> alaphang", function() {deepEqual( Stem("alaphangot"), "alaphang");});
test("alaphangulatot -> alaphangulat", function() {deepEqual( Stem("alaphangulatot"), "alaphangulat");});
test("alaphangulatát -> alaphangulat", function() {deepEqual( Stem("alaphangulatát"), "alaphangulat");});
test("alaphelyzet -> alaphelyz", function() {deepEqual( Stem("alaphelyzet"), "alaphelyz");});
test("alaphelyzetbe -> alaphelyzet", function() {deepEqual( Stem("alaphelyzetbe"), "alaphelyzet");});
test("alaphálózatot -> alaphálózat", function() {deepEqual( Stem("alaphálózatot"), "alaphálózat");});
test("alaphálózatának -> alaphálózat", function() {deepEqual( Stem("alaphálózatának"), "alaphálózat");});
test("alapinformációkat -> alapinformáció", function() {deepEqual( Stem("alapinformációkat"), "alapinformáció");});
test("alapismeretek -> alapismeret", function() {deepEqual( Stem("alapismeretek"), "alapismeret");});
test("alapismeretekkel -> alapismeret", function() {deepEqual( Stem("alapismeretekkel"), "alapismeret");});
test("alapjogok -> alapjog", function() {deepEqual( Stem("alapjogok"), "alapjog");});
test("alapjogoknak -> alapjog", function() {deepEqual( Stem("alapjogoknak"), "alapjog");});
test("alapjogát -> alapjog", function() {deepEqual( Stem("alapjogát"), "alapjog");});
test("alapból -> alap", function() {deepEqual( Stem("alapból"), "alap");});
test("alapokéhoz -> alap", function() {deepEqual( Stem("alapokéhoz"), "alap");});
test("alapom -> alap", function() {deepEqual( Stem("alapom"), "alap");});
test("alapon -> alap", function() {deepEqual( Stem("alapon"), "alap");});
test("alappal -> alap", function() {deepEqual( Stem("alappal"), "alap");});
test("alapot -> alap", function() {deepEqual( Stem("alapot"), "alap");});
test("alapra -> alap", function() {deepEqual( Stem("alapra"), "alap");});
test("alapról -> alap", function() {deepEqual( Stem("alapról"), "alap");});
test("alapunk -> alap", function() {deepEqual( Stem("alapunk"), "alap");});
test("alapokéval -> alap", function() {deepEqual( Stem("alapokéval"), "alap");});
test("alap -> alap", function() {deepEqual( Stem("alap"), "alap");});
test("alaphoz -> alap", function() {deepEqual( Stem("alaphoz"), "alap");});
test("alapja -> alap", function() {deepEqual( Stem("alapja"), "alap");});
test("alapjai -> alap", function() {deepEqual( Stem("alapjai"), "alap");});
test("alapoktól -> alap", function() {deepEqual( Stem("alapoktól"), "alap");});
test("alapjaiban -> alap", function() {deepEqual( Stem("alapjaiban"), "alap");});
test("alapjain -> alap", function() {deepEqual( Stem("alapjain"), "alap");});
test("alapjainkba -> alap", function() {deepEqual( Stem("alapjainkba"), "alap");});
test("alapjainál -> alap", function() {deepEqual( Stem("alapjainál"), "alap");});
test("alapjait -> alap", function() {deepEqual( Stem("alapjait"), "alap");});
test("alapjaival -> alap", function() {deepEqual( Stem("alapjaival"), "alap");});
test("alapjukalapjuk -> alapjukalap", function() {deepEqual( Stem("alapjukalapjuk"), "alapjukalap");});
test("alapjába -> alap", function() {deepEqual( Stem("alapjába"), "alap");});
test("alapjában -> alap", function() {deepEqual( Stem("alapjában"), "alap");});
test("alapjából -> alap", function() {deepEqual( Stem("alapjából"), "alap");});
test("alapján -> alap", function() {deepEqual( Stem("alapján"), "alap");});
test("alapjának -> alap", function() {deepEqual( Stem("alapjának"), "alap");});
test("alapjául -> alap", function() {deepEqual( Stem("alapjául"), "alap");});
test("alapként -> alap", function() {deepEqual( Stem("alapként"), "alap");});
test("alapnak -> alap", function() {deepEqual( Stem("alapnak"), "alap");});
test("alapok -> alap", function() {deepEqual( Stem("alapok"), "alap");});
test("alapokat -> alap", function() {deepEqual( Stem("alapokat"), "alap");});
test("alapokon -> alap", function() {deepEqual( Stem("alapokon"), "alap");});
test("alapokra -> alap", function() {deepEqual( Stem("alapokra"), "alap");});
test("alapokról -> alap", function() {deepEqual( Stem("alapokról"), "alap");});
test("alapkamat -> alap", function() {deepEqual( Stem("alapkamat"), "alap");});
test("alapkamatot -> alapkamat", function() {deepEqual( Stem("alapkamatot"), "alapkamat");});
test("alapkamattal -> alap", function() {deepEqual( Stem("alapkamattal"), "alap");});
test("alapkedvezmény -> alapkedvezmény", function() {deepEqual( Stem("alapkedvezmény"), "alapkedvezmény");});
test("alapkezelő -> alapkezelő", function() {deepEqual( Stem("alapkezelő"), "alapkezelő");});
test("alapkezelője -> alapkezelő", function() {deepEqual( Stem("alapkezelője"), "alapkezelő");});
test("alapkezelők -> alapkezelő", function() {deepEqual( Stem("alapkezelők"), "alapkezelő");});
test("alapkezelőktől -> alapkezelő", function() {deepEqual( Stem("alapkezelőktől"), "alapkezelő");});
test("alapkoncepciója -> alapkoncepció", function() {deepEqual( Stem("alapkoncepciója"), "alapkoncepció");});
test("alapkurzusokat -> alapkurzus", function() {deepEqual( Stem("alapkurzusokat"), "alapkurzus");});
test("alapkutatás -> alapkutatás", function() {deepEqual( Stem("alapkutatás"), "alapkutatás");});
test("alapkutatások -> alapkutatás", function() {deepEqual( Stem("alapkutatások"), "alapkutatás");});
test("alapkutatásoknak -> alapkutatás", function() {deepEqual( Stem("alapkutatásoknak"), "alapkutatás");});
test("alapkutatásoktól -> alapkutatás", function() {deepEqual( Stem("alapkutatásoktól"), "alapkutatás");});
test("alapkérdés -> alapkérdés", function() {deepEqual( Stem("alapkérdés"), "alapkérdés");});
test("alapkérdése -> alapkérdés", function() {deepEqual( Stem("alapkérdése"), "alapkérdés");});
test("alapkérdések -> alapkérdés", function() {deepEqual( Stem("alapkérdések"), "alapkérdés");});
test("alapkészülékbe -> alapkészüle", function() {deepEqual( Stem("alapkészülékbe"), "alapkészüle");});
test("alapkőletételen -> alapkőletétel", function() {deepEqual( Stem("alapkőletételen"), "alapkőletétel");});
test("alapköltségekhez -> alapköltség", function() {deepEqual( Stem("alapköltségekhez"), "alapköltség");});
test("alapkövetelmény -> alapkövetelmény", function() {deepEqual( Stem("alapkövetelmény"), "alapkövetelmény");});
test("alapkövetelménye -> alapkövetelmény", function() {deepEqual( Stem("alapkövetelménye"), "alapkövetelmény");});
test("alapkövetelményem -> alapkövetelmény", function() {deepEqual( Stem("alapkövetelményem"), "alapkövetelmény");});
test("alapkövetelményt -> alapkövetelmény", function() {deepEqual( Stem("alapkövetelményt"), "alapkövetelmény");});
test("alaplap -> alaplap", function() {deepEqual( Stem("alaplap"), "alaplap");});
test("alaplapban -> alaplap", function() {deepEqual( Stem("alaplapban"), "alaplap");});
test("alaplaphoz -> alaplap", function() {deepEqual( Stem("alaplaphoz"), "alaplap");});
test("alaplapjára -> alaplap", function() {deepEqual( Stem("alaplapjára"), "alaplap");});
test("alaplapon -> alaplap", function() {deepEqual( Stem("alaplapon"), "alaplap");});
test("alaplemezzé -> alaplemez", function() {deepEqual( Stem("alaplemezzé"), "alaplemez");});
test("alapmemóriája -> alapmemóriá", function() {deepEqual( Stem("alapmemóriája"), "alapmemóriá");});
test("alapműveletek -> alapművelet", function() {deepEqual( Stem("alapműveletek"), "alapművelet");});
test("alapműveleteket -> alapművelet", function() {deepEqual( Stem("alapműveleteket"), "alapművelet");});
test("alapműveltsége -> alapműveltség", function() {deepEqual( Stem("alapműveltsége"), "alapműveltség");});
test("alapműveltséget -> alapműveltség", function() {deepEqual( Stem("alapműveltséget"), "alapműveltség");});
test("alapműveltségéhez -> alapműveltség", function() {deepEqual( Stem("alapműveltségéhez"), "alapműveltség");});
test("alapnyomtatója -> alapnyomtató", function() {deepEqual( Stem("alapnyomtatója"), "alapnyomtató");});
test("alapnyomtatóként -> alapnyomtató", function() {deepEqual( Stem("alapnyomtatóként"), "alapnyomtató");});
test("alapnövekedés -> alapnövekedés", function() {deepEqual( Stem("alapnövekedés"), "alapnövekedés");});
test("alapokmány -> alapokmány", function() {deepEqual( Stem("alapokmány"), "alapokmány");});
test("alapokmánya -> alapokmány", function() {deepEqual( Stem("alapokmánya"), "alapokmány");});
test("alapokmányának -> alapokmány", function() {deepEqual( Stem("alapokmányának"), "alapokmány");});
test("alapos -> alapos", function() {deepEqual( Stem("alapos"), "alapos");});
test("alaposabb -> alaposabb", function() {deepEqual( Stem("alaposabb"), "alaposabb");});
test("alaposabban -> alaposab", function() {deepEqual( Stem("alaposabban"), "alaposab");});
test("alaposan -> alapos", function() {deepEqual( Stem("alaposan"), "alapos");});
test("alaposat -> alapos", function() {deepEqual( Stem("alaposat"), "alapos");});
test("alapossága -> alaposság", function() {deepEqual( Stem("alapossága"), "alaposság");});
test("alapossággal -> alaposság", function() {deepEqual( Stem("alapossággal"), "alaposság");});
test("alaposságával -> alaposság", function() {deepEqual( Stem("alaposságával"), "alaposság");});
test("alapozgatnám -> alapozgatna", function() {deepEqual( Stem("alapozgatnám"), "alapozgatna");});
test("alapozni -> alapozn", function() {deepEqual( Stem("alapozni"), "alapozn");});
test("alapoz -> alapoz", function() {deepEqual( Stem("alapoz"), "alapoz");});
test("alapozom -> alapoz", function() {deepEqual( Stem("alapozom"), "alapoz");});
test("alapozott -> alapozot", function() {deepEqual( Stem("alapozott"), "alapozot");});
test("alapozta -> alapozt", function() {deepEqual( Stem("alapozta"), "alapozt");});
test("alapoztak -> alapozt", function() {deepEqual( Stem("alapoztak"), "alapozt");});
test("alapozva -> alapozv", function() {deepEqual( Stem("alapozva"), "alapozv");});
test("alapozza -> alapozz", function() {deepEqual( Stem("alapozza"), "alapozz");});
test("alapozzák -> alapozza", function() {deepEqual( Stem("alapozzák"), "alapozza");});
test("alapozásnak -> alapozás", function() {deepEqual( Stem("alapozásnak"), "alapozás");});
test("alapparaméter -> alapparaméter", function() {deepEqual( Stem("alapparaméter"), "alapparaméter");});
test("alappillérének -> alappillér", function() {deepEqual( Stem("alappillérének"), "alappillér");});
test("alaprendszer -> alaprendszer", function() {deepEqual( Stem("alaprendszer"), "alaprendszer");});
test("alaprendszerek -> alaprendszer", function() {deepEqual( Stem("alaprendszerek"), "alaprendszer");});
test("alaprészvényt -> alaprészvény", function() {deepEqual( Stem("alaprészvényt"), "alaprészvény");});
test("alaprészének -> alaprész", function() {deepEqual( Stem("alaprészének"), "alaprész");});
test("alapstruktúra -> alapstruktú", function() {deepEqual( Stem("alapstruktúra"), "alapstruktú");});
test("alapstruktúráját -> alapstruktúrá", function() {deepEqual( Stem("alapstruktúráját"), "alapstruktúrá");});
test("alapszabály-módosítás -> alapszabály-módosítás", function() {deepEqual( Stem("alapszabály-módosítás"), "alapszabály-módosítás");});
test("alapszabály-módosításra -> alapszabály-módosítás", function() {deepEqual( Stem("alapszabály-módosításra"), "alapszabály-módosítás");});
test("alapszabálya -> alapszabály", function() {deepEqual( Stem("alapszabálya"), "alapszabály");});
test("alapszabályt -> alapszabály", function() {deepEqual( Stem("alapszabályt"), "alapszabály");});
test("alapszabályon -> alapszabály", function() {deepEqual( Stem("alapszabályon"), "alapszabály");});
test("alapszabályok -> alapszabály", function() {deepEqual( Stem("alapszabályok"), "alapszabály");});
test("alapszabállyal -> alapszabály", function() {deepEqual( Stem("alapszabállyal"), "alapszabály");});
test("alapszabály -> alapszabály", function() {deepEqual( Stem("alapszabály"), "alapszabály");});
test("alapszabályba -> alapszabály", function() {deepEqual( Stem("alapszabályba"), "alapszabály");});
test("alapszabályban -> alapszabály", function() {deepEqual( Stem("alapszabályban"), "alapszabály");});
test("alapszabálynak -> alapszabály", function() {deepEqual( Stem("alapszabálynak"), "alapszabály");});
test("alapszabálynál -> alapszabály", function() {deepEqual( Stem("alapszabálynál"), "alapszabály");});
test("alapszabályukat -> alapszabály", function() {deepEqual( Stem("alapszabályukat"), "alapszabály");});
test("alapszabályukban -> alapszabály", function() {deepEqual( Stem("alapszabályukban"), "alapszabály");});
test("alapszabályzatban -> alapszabályzat", function() {deepEqual( Stem("alapszabályzatban"), "alapszabályzat");});
test("alapszabályában -> alapszabály", function() {deepEqual( Stem("alapszabályában"), "alapszabály");});
test("alapszabályának -> alapszabály", function() {deepEqual( Stem("alapszabályának"), "alapszabály");});
test("alapszabályát -> alapszabály", function() {deepEqual( Stem("alapszabályát"), "alapszabály");});
test("alapszabályával -> alapszabály", function() {deepEqual( Stem("alapszabályával"), "alapszabály");});
test("alapszabálybeli -> alapszabálybel", function() {deepEqual( Stem("alapszabálybeli"), "alapszabálybel");});
test("alapszabályi -> alapszabály", function() {deepEqual( Stem("alapszabályi"), "alapszabály");});
test("alapszerződéseket -> alapszerződés", function() {deepEqual( Stem("alapszerződéseket"), "alapszerződés");});
test("alapszerződést -> alapszerződés", function() {deepEqual( Stem("alapszerződést"), "alapszerződés");});
test("alapszik -> alapsz", function() {deepEqual( Stem("alapszik"), "alapsz");});
test("alapszinten -> alapszint", function() {deepEqual( Stem("alapszinten"), "alapszint");});
test("alapszintű -> alapszintű", function() {deepEqual( Stem("alapszintű"), "alapszintű");});
test("alapszintűektől -> alapszintű", function() {deepEqual( Stem("alapszintűektől"), "alapszintű");});
test("alapszituációja -> alapszituáció", function() {deepEqual( Stem("alapszituációja"), "alapszituáció");});
test("alapszolgáltatásainak -> alapszolgáltatás", function() {deepEqual( Stem("alapszolgáltatásainak"), "alapszolgáltatás");});
test("alapszolgáltatásként -> alapszolgáltatás", function() {deepEqual( Stem("alapszolgáltatásként"), "alapszolgáltatás");});
test("alapszolgáltatásán -> alapszolgáltatás", function() {deepEqual( Stem("alapszolgáltatásán"), "alapszolgáltatás");});
test("alapszolgáltatását -> alapszolgáltatás", function() {deepEqual( Stem("alapszolgáltatását"), "alapszolgáltatás");});
test("alaptalan -> alaptal", function() {deepEqual( Stem("alaptalan"), "alaptal");});
test("alaptalannak -> alaptalan", function() {deepEqual( Stem("alaptalannak"), "alaptalan");});
test("alaptalanok -> alaptalan", function() {deepEqual( Stem("alaptalanok"), "alaptalan");});
test("alaptalanul -> alaptalan", function() {deepEqual( Stem("alaptalanul"), "alaptalan");});
test("alaptananyaga -> alaptananyag", function() {deepEqual( Stem("alaptananyaga"), "alaptananyag");});
test("alaptantervet -> alaptanterv", function() {deepEqual( Stem("alaptantervet"), "alaptanterv");});
test("alaptermészet -> alaptermész", function() {deepEqual( Stem("alaptermészet"), "alaptermész");});
test("alapterületű -> alapterületű", function() {deepEqual( Stem("alapterületű"), "alapterületű");});
test("alaptevékenységnek -> alaptevékenység", function() {deepEqual( Stem("alaptevékenységnek"), "alaptevékenység");});
test("alaptételein -> alaptétel", function() {deepEqual( Stem("alaptételein"), "alaptétel");});
test("alaptípusa -> alaptípus", function() {deepEqual( Stem("alaptípusa"), "alaptípus");});
test("alaptípusai -> alaptípus", function() {deepEqual( Stem("alaptípusai"), "alaptípus");});
test("alaptőke-csökkentés -> alaptőke-csökkentés", function() {deepEqual( Stem("alaptőke-csökkentés"), "alaptőke-csökkentés");});
test("alaptőke-emelés -> alaptőke-emelés", function() {deepEqual( Stem("alaptőke-emelés"), "alaptőke-emelés");});
test("alaptőke-emeléshez -> alaptőke-emelés", function() {deepEqual( Stem("alaptőke-emeléshez"), "alaptőke-emelés");});
test("alaptőke-emelési -> alaptőke-emelés", function() {deepEqual( Stem("alaptőke-emelési"), "alaptőke-emelés");});
test("alaptőke-emelésként -> alaptőke-emelés", function() {deepEqual( Stem("alaptőke-emelésként"), "alaptőke-emelés");});
test("alaptőke-emelésnek -> alaptőke-emelés", function() {deepEqual( Stem("alaptőke-emelésnek"), "alaptőke-emelés");});
test("alaptőke-emelésre -> alaptőke-emelés", function() {deepEqual( Stem("alaptőke-emelésre"), "alaptőke-emelés");});
test("alaptőke-emelésről -> alaptőke-emelés", function() {deepEqual( Stem("alaptőke-emelésről"), "alaptőke-emelés");});
test("alaptőke-emeléssel -> alaptőke-emelés", function() {deepEqual( Stem("alaptőke-emeléssel"), "alaptőke-emelés");});
test("alaptőke-emelést -> alaptőke-emelés", function() {deepEqual( Stem("alaptőke-emelést"), "alaptőke-emelés");});
test("alaptőke-emelésénél -> alaptőke-emelés", function() {deepEqual( Stem("alaptőke-emelésénél"), "alaptőke-emelés");});
test("alaptőke-leszállítás -> alaptőke-leszállítás", function() {deepEqual( Stem("alaptőke-leszállítás"), "alaptőke-leszállítás");});
test("alaptőke-leszállításról -> alaptőke-leszállítás", function() {deepEqual( Stem("alaptőke-leszállításról"), "alaptőke-leszállítás");});
test("alaptőkeleszállítás -> alaptőkeleszállítás", function() {deepEqual( Stem("alaptőkeleszállítás"), "alaptőkeleszállítás");});
test("alaptőkébe -> alaptő", function() {deepEqual( Stem("alaptőkébe"), "alaptő");});
test("alaptőkét -> alaptő", function() {deepEqual( Stem("alaptőkét"), "alaptő");});
test("alaptőkével -> alaptő", function() {deepEqual( Stem("alaptőkével"), "alaptő");});
test("alaptőkében -> alaptő", function() {deepEqual( Stem("alaptőkében"), "alaptő");});
test("alaptőke -> alaptő", function() {deepEqual( Stem("alaptőke"), "alaptő");});
test("alaptőkéből -> alaptő", function() {deepEqual( Stem("alaptőkéből"), "alaptő");});
test("alaptőkéhez -> alaptő", function() {deepEqual( Stem("alaptőkéhez"), "alaptő");});
test("alaptőkéje -> alaptőké", function() {deepEqual( Stem("alaptőkéje"), "alaptőké");});
test("alaptőkéjében -> alaptőké", function() {deepEqual( Stem("alaptőkéjében"), "alaptőké");});
test("alaptőkéjének -> alaptőké", function() {deepEqual( Stem("alaptőkéjének"), "alaptőké");});
test("alaptőkéjére -> alaptőké", function() {deepEqual( Stem("alaptőkéjére"), "alaptőké");});
test("alaptőkéjéről -> alaptőké", function() {deepEqual( Stem("alaptőkéjéről"), "alaptőké");});
test("alaptőkéjét -> alaptőké", function() {deepEqual( Stem("alaptőkéjét"), "alaptőké");});
test("alaptőkén -> alaptő", function() {deepEqual( Stem("alaptőkén"), "alaptő");});
test("alaptőkének -> alaptő", function() {deepEqual( Stem("alaptőkének"), "alaptő");});
test("alaptőkére -> alaptő", function() {deepEqual( Stem("alaptőkére"), "alaptő");});
test("alaptőkéjű -> alaptőkéjű", function() {deepEqual( Stem("alaptőkéjű"), "alaptőkéjű");});
test("alaptőkéjűnek -> alaptőkéjű", function() {deepEqual( Stem("alaptőkéjűnek"), "alaptőkéjű");});
test("alaptörvény -> alaptörvény", function() {deepEqual( Stem("alaptörvény"), "alaptörvény");});
test("alaptörvénybe -> alaptörvény", function() {deepEqual( Stem("alaptörvénybe"), "alaptörvény");});
test("alaptörvényeket -> alaptörvény", function() {deepEqual( Stem("alaptörvényeket"), "alaptörvény");});
test("alapul -> alap", function() {deepEqual( Stem("alapul"), "alap");});
test("alapuljon -> alapulj", function() {deepEqual( Stem("alapuljon"), "alapulj");});
test("alapulnak -> alapul", function() {deepEqual( Stem("alapulnak"), "alapul");});
test("alapult -> alapul", function() {deepEqual( Stem("alapult"), "alapul");});
test("alapulhat -> alapulh", function() {deepEqual( Stem("alapulhat"), "alapulh");});
test("alapulvételével -> alapulvétel", function() {deepEqual( Stem("alapulvételével"), "alapulvétel");});
test("alapulvéve -> alapulvév", function() {deepEqual( Stem("alapulvéve"), "alapulvév");});
test("alapuló -> alapuló", function() {deepEqual( Stem("alapuló"), "alapuló");});
test("alapvető -> alapvető", function() {deepEqual( Stem("alapvető"), "alapvető");});
test("alapvetőek -> alapvető", function() {deepEqual( Stem("alapvetőek"), "alapvető");});
test("alapvetően -> alapvető", function() {deepEqual( Stem("alapvetően"), "alapvető");});
test("alapvonása -> alapvonás", function() {deepEqual( Stem("alapvonása"), "alapvonás");});
test("alapvonásai -> alapvonás", function() {deepEqual( Stem("alapvonásai"), "alapvonás");});
test("alapváltozata -> alapváltozat", function() {deepEqual( Stem("alapváltozata"), "alapváltozat");});
test("alapára -> alap", function() {deepEqual( Stem("alapára"), "alap");});
test("alapértelmezett -> alapértelmezet", function() {deepEqual( Stem("alapértelmezett"), "alapértelmezet");});
test("alapértelmezés -> alapértelmezés", function() {deepEqual( Stem("alapértelmezés"), "alapértelmezés");});
test("alapértelmezése -> alapértelmezés", function() {deepEqual( Stem("alapértelmezése"), "alapértelmezés");});
test("alapértelmezésként -> alapértelmezés", function() {deepEqual( Stem("alapértelmezésként"), "alapértelmezés");});
test("alapértelmezéstől -> alapértelmezés", function() {deepEqual( Stem("alapértelmezéstől"), "alapértelmezés");});
test("alapértelmezésbeli -> alapértelmezésbel", function() {deepEqual( Stem("alapértelmezésbeli"), "alapértelmezésbel");});
test("alapértékei -> alapérte", function() {deepEqual( Stem("alapértékei"), "alapérte");});
test("alapértékeik -> alapérte", function() {deepEqual( Stem("alapértékeik"), "alapérte");});
test("alapértékeit -> alapérte", function() {deepEqual( Stem("alapértékeit"), "alapérte");});
test("alapérzése -> alapérzés", function() {deepEqual( Stem("alapérzése"), "alapérzés");});
test("alkatrészek -> alkatrész", function() {deepEqual( Stem("alkatrészek"), "alkatrész");});
test("alkatrészeket -> alkatrész", function() {deepEqual( Stem("alkatrészeket"), "alkatrész");});
test("alkatrészekkel -> alkatrész", function() {deepEqual( Stem("alkatrészekkel"), "alkatrész");});
test("alkatrészt -> alkatrész", function() {deepEqual( Stem("alkatrészt"), "alkatrész");});
test("alkatrészét -> alkatrész", function() {deepEqual( Stem("alkatrészét"), "alkatrész");});
test("alkatrészgyártók -> alkatrészgyártó", function() {deepEqual( Stem("alkatrészgyártók"), "alkatrészgyártó");});
test("alkatrészgyártót -> alkatrészgyártó", function() {deepEqual( Stem("alkatrészgyártót"), "alkatrészgyártó");});
test("alkatrészrajzot -> alkatrészrajz", function() {deepEqual( Stem("alkatrészrajzot"), "alkatrészrajz");});
test("alkimista -> alkimist", function() {deepEqual( Stem("alkimista"), "alkimist");});
test("alkohol -> alkohol", function() {deepEqual( Stem("alkohol"), "alkohol");});
test("alkoholba -> alkohol", function() {deepEqual( Stem("alkoholba"), "alkohol");});
test("alkoholból -> alkohol", function() {deepEqual( Stem("alkoholból"), "alkohol");});
test("alkoholról -> alkohol", function() {deepEqual( Stem("alkoholról"), "alkohol");});
test("alkoholt -> alkohol", function() {deepEqual( Stem("alkoholt"), "alkohol");});
test("alkoholtól -> alkohol", function() {deepEqual( Stem("alkoholtól"), "alkohol");});
test("alkoholos -> alkoholos", function() {deepEqual( Stem("alkoholos"), "alkoholos");});
test("alkoholfogyasztást -> alkoholfogyasztás", function() {deepEqual( Stem("alkoholfogyasztást"), "alkoholfogyasztás");});
test("alkoholista -> alkoholist", function() {deepEqual( Stem("alkoholista"), "alkoholist");});
test("alkoholisták -> alkoholista", function() {deepEqual( Stem("alkoholisták"), "alkoholista");});
test("alkoholistákat -> alkoholista", function() {deepEqual( Stem("alkoholistákat"), "alkoholista");});
test("alkoholizál -> alkoholizál", function() {deepEqual( Stem("alkoholizál"), "alkoholizál");});
test("alkoholizálásra -> alkoholizálás", function() {deepEqual( Stem("alkoholizálásra"), "alkoholizálás");});
test("alkonténereket -> alkonténer", function() {deepEqual( Stem("alkonténereket"), "alkonténer");});
test("alkony -> alkony", function() {deepEqual( Stem("alkony"), "alkony");});
test("alkonyat -> alkony", function() {deepEqual( Stem("alkonyat"), "alkony");});
test("alkonyodott -> alkonyodot", function() {deepEqual( Stem("alkonyodott"), "alkonyodot");});
test("alkonyon -> alkony", function() {deepEqual( Stem("alkonyon"), "alkony");});
test("alkonyzóna -> alkonyzón", function() {deepEqual( Stem("alkonyzóna"), "alkonyzón");});
test("alkonyzónában -> alkonyzón", function() {deepEqual( Stem("alkonyzónában"), "alkonyzón");});
test("alkonyzónájába -> alkonyzóná", function() {deepEqual( Stem("alkonyzónájába"), "alkonyzóná");});
test("alkothat -> alkoth", function() {deepEqual( Stem("alkothat"), "alkoth");});
test("alkothatok -> alkothat", function() {deepEqual( Stem("alkothatok"), "alkothat");});
test("alkothatunk -> alkothat", function() {deepEqual( Stem("alkothatunk"), "alkothat");});
test("alkotmány -> alkotmány", function() {deepEqual( Stem("alkotmány"), "alkotmány");});
test("alkotmányban -> alkotmány", function() {deepEqual( Stem("alkotmányban"), "alkotmány");});
test("alkotmányt -> alkotmány", function() {deepEqual( Stem("alkotmányt"), "alkotmány");});
test("alkotmányos -> alkotmányos", function() {deepEqual( Stem("alkotmányos"), "alkotmányos");});
test("alkotmányosan -> alkotmányos", function() {deepEqual( Stem("alkotmányosan"), "alkotmányos");});
test("alkotmánybírósági -> alkotmánybíróság", function() {deepEqual( Stem("alkotmánybírósági"), "alkotmánybíróság");});
test("alkotmánybíróságnál -> alkotmánybíróság", function() {deepEqual( Stem("alkotmánybíróságnál"), "alkotmánybíróság");});
test("alkotmánybíróságtól -> alkotmánybíróság", function() {deepEqual( Stem("alkotmánybíróságtól"), "alkotmánybíróság");});
test("alkotmánybírót -> alkotmánybíró", function() {deepEqual( Stem("alkotmánybírót"), "alkotmánybíró");});
test("alkotmányellenes -> alkotmányellenes", function() {deepEqual( Stem("alkotmányellenes"), "alkotmányellenes");});
test("alkotmányellenesek -> alkotmányellenes", function() {deepEqual( Stem("alkotmányellenesek"), "alkotmányellenes");});
test("alkotmányellenesen -> alkotmányellenes", function() {deepEqual( Stem("alkotmányellenesen"), "alkotmányellenes");});
test("alkotmányellenesnek -> alkotmányellenes", function() {deepEqual( Stem("alkotmányellenesnek"), "alkotmányellenes");});
test("alkotmányellenességét -> alkotmányellenesség", function() {deepEqual( Stem("alkotmányellenességét"), "alkotmányellenesség");});
test("alkotmányerejű -> alkotmányerejű", function() {deepEqual( Stem("alkotmányerejű"), "alkotmányerejű");});
test("alkotmányjogász -> alkotmányjogász", function() {deepEqual( Stem("alkotmányjogász"), "alkotmányjogász");});
test("alkotmánykoncepció -> alkotmánykoncepció", function() {deepEqual( Stem("alkotmánykoncepció"), "alkotmánykoncepció");});
test("alkotmányossági -> alkotmányosság", function() {deepEqual( Stem("alkotmányossági"), "alkotmányosság");});
test("alkotmányozást -> alkotmányozás", function() {deepEqual( Stem("alkotmányozást"), "alkotmányozás");});
test("alkotmánysértést -> alkotmánysértés", function() {deepEqual( Stem("alkotmánysértést"), "alkotmánysértés");});
test("alkotmánysértőnek -> alkotmánysértő", function() {deepEqual( Stem("alkotmánysértőnek"), "alkotmánysértő");});
test("alkotmánytani -> alkotmánytan", function() {deepEqual( Stem("alkotmánytani"), "alkotmánytan");});
test("alkotmányügyi -> alkotmányügy", function() {deepEqual( Stem("alkotmányügyi"), "alkotmányügy");});
test("alkotott -> alkotot", function() {deepEqual( Stem("alkotott"), "alkotot");});
test("alkotásfajtát -> alkotásfajt", function() {deepEqual( Stem("alkotásfajtát"), "alkotásfajt");});
test("alkoss -> alkoss", function() {deepEqual( Stem("alkoss"), "alkoss");});
test("alkosson -> alkoss", function() {deepEqual( Stem("alkosson"), "alkoss");});
test("alkot -> al", function() {deepEqual( Stem("alkot"), "al");});
test("alkotandó -> alkotandó", function() {deepEqual( Stem("alkotandó"), "alkotandó");});
test("alkotja -> alkot", function() {deepEqual( Stem("alkotja"), "alkot");});
test("alkotják -> alkotja", function() {deepEqual( Stem("alkotják"), "alkotja");});
test("alkotna -> alkotn", function() {deepEqual( Stem("alkotna"), "alkotn");});
test("alkotnak -> alkot", function() {deepEqual( Stem("alkotnak"), "alkot");});
test("alkotni -> alkotn", function() {deepEqual( Stem("alkotni"), "alkotn");});
test("alkotnának -> alkotn", function() {deepEqual( Stem("alkotnának"), "alkotn");});
test("alkototott -> alkototot", function() {deepEqual( Stem("alkototott"), "alkototot");});
test("alkotta -> alkott", function() {deepEqual( Stem("alkotta"), "alkott");});
test("alkottak -> alkott", function() {deepEqual( Stem("alkottak"), "alkott");});
test("alkottam -> alkott", function() {deepEqual( Stem("alkottam"), "alkott");});
test("alkották -> alkotta", function() {deepEqual( Stem("alkották"), "alkotta");});
test("alkottál -> alkottál", function() {deepEqual( Stem("alkottál"), "alkottál");});
test("alkotunk -> alkot", function() {deepEqual( Stem("alkotunk"), "alkot");});
test("alkotás -> alkotás", function() {deepEqual( Stem("alkotás"), "alkotás");});
test("alkotása -> alkotás", function() {deepEqual( Stem("alkotása"), "alkotás");});
test("alkotásai -> alkotás", function() {deepEqual( Stem("alkotásai"), "alkotás");});
test("alkotásaihoz -> alkotás", function() {deepEqual( Stem("alkotásaihoz"), "alkotás");});
test("alkotásaik -> alkotás", function() {deepEqual( Stem("alkotásaik"), "alkotás");});
test("alkotásainak -> alkotás", function() {deepEqual( Stem("alkotásainak"), "alkotás");});
test("alkotásait -> alkotás", function() {deepEqual( Stem("alkotásait"), "alkotás");});
test("alkotásban -> alkotás", function() {deepEqual( Stem("alkotásban"), "alkotás");});
test("alkotáshoz -> alkotás", function() {deepEqual( Stem("alkotáshoz"), "alkotás");});
test("alkotásként -> alkotás", function() {deepEqual( Stem("alkotásként"), "alkotás");});
test("alkotásnak -> alkotás", function() {deepEqual( Stem("alkotásnak"), "alkotás");});
test("alkotások -> alkotás", function() {deepEqual( Stem("alkotások"), "alkotás");});
test("alkotásokat -> alkotás", function() {deepEqual( Stem("alkotásokat"), "alkotás");});
test("alkotásokban -> alkotás", function() {deepEqual( Stem("alkotásokban"), "alkotás");});
test("alkotásokhoz -> alkotás", function() {deepEqual( Stem("alkotásokhoz"), "alkotás");});
test("alkotásokkal -> alkotás", function() {deepEqual( Stem("alkotásokkal"), "alkotás");});
test("alkotásoknak -> alkotás", function() {deepEqual( Stem("alkotásoknak"), "alkotás");});
test("alkotásoknál -> alkotás", function() {deepEqual( Stem("alkotásoknál"), "alkotás");});
test("alkotásokon -> alkotás", function() {deepEqual( Stem("alkotásokon"), "alkotás");});
test("alkotásokra -> alkotás", function() {deepEqual( Stem("alkotásokra"), "alkotás");});
test("alkotásomat -> alkotás", function() {deepEqual( Stem("alkotásomat"), "alkotás");});
test("alkotásról -> alkotás", function() {deepEqual( Stem("alkotásról"), "alkotás");});
test("alkotással -> alkotás", function() {deepEqual( Stem("alkotással"), "alkotás");});
test("alkotást -> alkotás", function() {deepEqual( Stem("alkotást"), "alkotás");});
test("alkotásuk -> alkotás", function() {deepEqual( Stem("alkotásuk"), "alkotás");});
test("alkotásából -> alkotás", function() {deepEqual( Stem("alkotásából"), "alkotás");});
test("alkotásához -> alkotás", function() {deepEqual( Stem("alkotásához"), "alkotás");});
test("alkotásának -> alkotás", function() {deepEqual( Stem("alkotásának"), "alkotás");});
test("alkotására -> alkotás", function() {deepEqual( Stem("alkotására"), "alkotás");});
test("alkotását -> alkotás", function() {deepEqual( Stem("alkotását"), "alkotás");});
test("alkotásával -> alkotás", function() {deepEqual( Stem("alkotásával"), "alkotás");});
test("alkotó -> alkotó", function() {deepEqual( Stem("alkotó"), "alkotó");});
test("alkotóhoz -> alkotó", function() {deepEqual( Stem("alkotóhoz"), "alkotó");});
test("alkotóinak -> alkotó", function() {deepEqual( Stem("alkotóinak"), "alkotó");});
test("alkotóit -> alkotó", function() {deepEqual( Stem("alkotóit"), "alkotó");});
test("alkotójuk -> alkotó", function() {deepEqual( Stem("alkotójuk"), "alkotó");});
test("alkotójával -> alkotó", function() {deepEqual( Stem("alkotójával"), "alkotó");});
test("alkotók -> alkotó", function() {deepEqual( Stem("alkotók"), "alkotó");});
test("alkotóknak -> alkotó", function() {deepEqual( Stem("alkotóknak"), "alkotó");});
test("alkotóeleme -> alkotóelem", function() {deepEqual( Stem("alkotóeleme"), "alkotóelem");});
test("alkotóelemek -> alkotóelem", function() {deepEqual( Stem("alkotóelemek"), "alkotóelem");});
test("alkotóelemekre -> alkotóelem", function() {deepEqual( Stem("alkotóelemekre"), "alkotóelem");});
test("alkotói -> alkotó", function() {deepEqual( Stem("alkotói"), "alkotó");});
test("alkotómunka -> alkotómun", function() {deepEqual( Stem("alkotómunka"), "alkotómun");});
test("alkotóművész -> alkotóművész", function() {deepEqual( Stem("alkotóművész"), "alkotóművész");});
test("alkotóművészek -> alkotóművész", function() {deepEqual( Stem("alkotóművészek"), "alkotóművész");});
test("alkotóművészeti -> alkotóművészet", function() {deepEqual( Stem("alkotóművészeti"), "alkotóművészet");});
test("alkotópáros -> alkotópáros", function() {deepEqual( Stem("alkotópáros"), "alkotópáros");});
test("alkotórészeket -> alkotórész", function() {deepEqual( Stem("alkotórészeket"), "alkotórész");});
test("alku -> alku", function() {deepEqual( Stem("alku"), "alku");});
test("alkuban -> alku", function() {deepEqual( Stem("alkuban"), "alku");});
test("alkura -> alku", function() {deepEqual( Stem("alkura"), "alku");});
test("alkut -> alku", function() {deepEqual( Stem("alkut"), "alku");});
test("alkudni -> alkudn", function() {deepEqual( Stem("alkudni"), "alkudn");});
test("alkudnia -> alkudn", function() {deepEqual( Stem("alkudnia"), "alkudn");});
test("alkudozni -> alkudozn", function() {deepEqual( Stem("alkudozni"), "alkudozn");});
test("alkudozás -> alkudozás", function() {deepEqual( Stem("alkudozás"), "alkudozás");});
test("alkudozásnak -> alkudozás", function() {deepEqual( Stem("alkudozásnak"), "alkudozás");});
test("alkudozásokat -> alkudozás", function() {deepEqual( Stem("alkudozásokat"), "alkudozás");});
test("alkudozással -> alkudozás", function() {deepEqual( Stem("alkudozással"), "alkudozás");});
test("alkudozást -> alkudozás", function() {deepEqual( Stem("alkudozást"), "alkudozás");});
test("alkönyvtár -> alkönyvtár", function() {deepEqual( Stem("alkönyvtár"), "alkönyvtár");});
test("alkönyvtára -> alkönyvt", function() {deepEqual( Stem("alkönyvtára"), "alkönyvt");});
test("alkönyvtárai -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárai"), "alkönyvtár");});
test("alkönyvtáraiból -> alkönyvtár", function() {deepEqual( Stem("alkönyvtáraiból"), "alkönyvtár");});
test("alkönyvtáraira -> alkönyvtár", function() {deepEqual( Stem("alkönyvtáraira"), "alkönyvtár");});
test("alkönyvtárait -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárait"), "alkönyvtár");});
test("alkönyvtárak -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárak"), "alkönyvtár");});
test("alkönyvtárakat -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárakat"), "alkönyvtár");});
test("alkönyvtárakhoz -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárakhoz"), "alkönyvtár");});
test("alkönyvtárakra -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárakra"), "alkönyvtár");});
test("alkönyvtárat -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárat"), "alkönyvtár");});
test("alkönyvtárba -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárba"), "alkönyvtár");});
test("alkönyvtárként -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárként"), "alkönyvtár");});
test("alkönyvtárra -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárra"), "alkönyvtár");});
test("alkönyvtárról -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárról"), "alkönyvtár");});
test("alkönyvtárt -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárt"), "alkönyvtár");});
test("alkönyvtárához -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárához"), "alkönyvtár");});
test("alkönyvtárán -> alkönyvtár", function() {deepEqual( Stem("alkönyvtárán"), "alkönyvtár");});
test("alközponti -> alközpont", function() {deepEqual( Stem("alközponti"), "alközpont");});
test("alközpontjait -> alközpont", function() {deepEqual( Stem("alközpontjait"), "alközpont");});
test("alközpontokhoz -> alközpont", function() {deepEqual( Stem("alközpontokhoz"), "alközpont");});
test("alközpontokkal -> alközpont", function() {deepEqual( Stem("alközpontokkal"), "alközpont");});
test("alközponton -> alközpont", function() {deepEqual( Stem("alközponton"), "alközpont");});
test("allegóriaként -> allegór", function() {deepEqual( Stem("allegóriaként"), "allegór");});
test("allergia -> allerg", function() {deepEqual( Stem("allergia"), "allerg");});
test("allergiával -> allerg", function() {deepEqual( Stem("allergiával"), "allerg");});
test("allergiás -> allergiás", function() {deepEqual( Stem("allergiás"), "allergiás");});
test("alliance-eket -> alliance-", function() {deepEqual( Stem("alliance-eket"), "alliance-");});
test("allja -> all", function() {deepEqual( Stem("allja"), "all");});
test("allokációra -> allokáció", function() {deepEqual( Stem("allokációra"), "allokáció");});
test("allokációs -> allokációs", function() {deepEqual( Stem("allokációs"), "allokációs");});
test("allokációt -> allokáció", function() {deepEqual( Stem("allokációt"), "allokáció");});
test("allokálják -> allokálja", function() {deepEqual( Stem("allokálják"), "allokálja");});
test("almanar -> almanar", function() {deepEqual( Stem("almanar"), "almanar");});
test("almappái -> almappa", function() {deepEqual( Stem("almappái"), "almappa");});
test("almappáiban -> almappa", function() {deepEqual( Stem("almappáiban"), "almappa");});
test("almappája -> almappá", function() {deepEqual( Stem("almappája"), "almappá");});
test("almappájában -> almappá", function() {deepEqual( Stem("almappájában"), "almappá");});
test("almappák -> almappa", function() {deepEqual( Stem("almappák"), "almappa");});
test("almappákra -> almappa", function() {deepEqual( Stem("almappákra"), "almappa");});
test("almazöld -> almazöl", function() {deepEqual( Stem("almazöld"), "almazöl");});
test("almenü -> almenü", function() {deepEqual( Stem("almenü"), "almenü");});
test("almenüből -> almenü", function() {deepEqual( Stem("almenüből"), "almenü");});
test("almenüjéből -> almenü", function() {deepEqual( Stem("almenüjéből"), "almenü");});
test("almenürendszerekbe -> almenürendszer", function() {deepEqual( Stem("almenürendszerekbe"), "almenürendszer");});
test("almáknak -> alma", function() {deepEqual( Stem("almáknak"), "alma");});
test("alma -> alm", function() {deepEqual( Stem("alma"), "alm");});
test("almára -> alm", function() {deepEqual( Stem("almára"), "alm");});
test("almát -> alm", function() {deepEqual( Stem("almát"), "alm");});
test("alom -> al", function() {deepEqual( Stem("alom"), "al");});
test("almot -> al", function() {deepEqual( Stem("almot"), "al");});
test("alomba -> al", function() {deepEqual( Stem("alomba"), "al");});
test("aloncs -> aloncs", function() {deepEqual( Stem("aloncs"), "aloncs");});
test("alperes -> alperes", function() {deepEqual( Stem("alperes"), "alperes");});
test("alperese -> alperes", function() {deepEqual( Stem("alperese"), "alperes");});
test("alperesként -> alperes", function() {deepEqual( Stem("alperesként"), "alperes");});
test("alperest -> alperes", function() {deepEqual( Stem("alperest"), "alperes");});
test("alperestől -> alperes", function() {deepEqual( Stem("alperestől"), "alperes");});
test("alperesi -> alperes", function() {deepEqual( Stem("alperesi"), "alperes");});
test("alpesi -> alpes", function() {deepEqual( Stem("alpesi"), "alpes");});
test("alpinisták -> alpinista", function() {deepEqual( Stem("alpinisták"), "alpinista");});
test("alpinistákat -> alpinista", function() {deepEqual( Stem("alpinistákat"), "alpinista");});
test("alpolgármester -> alpolgármester", function() {deepEqual( Stem("alpolgármester"), "alpolgármester");});
test("alpolgármestere -> alpolgármest", function() {deepEqual( Stem("alpolgármestere"), "alpolgármest");});
test("alpolgármestert -> alpolgármester", function() {deepEqual( Stem("alpolgármestert"), "alpolgármester");});
test("alpontja -> alpont", function() {deepEqual( Stem("alpontja"), "alpont");});
test("alprojektje -> alprojekt", function() {deepEqual( Stem("alprojektje"), "alprojekt");});
test("already -> already", function() {deepEqual( Stem("already"), "already");});
test("alrendszereihez -> alrendszer", function() {deepEqual( Stem("alrendszereihez"), "alrendszer");});
test("alrendszerek -> alrendszer", function() {deepEqual( Stem("alrendszerek"), "alrendszer");});
test("alrendszert -> alrendszer", function() {deepEqual( Stem("alrendszert"), "alrendszer");});
test("alszámla -> alszáml", function() {deepEqual( Stem("alszámla"), "alszáml");});
test("alszámlán -> alszáml", function() {deepEqual( Stem("alszámlán"), "alszáml");});
test("alszámlára -> alszáml", function() {deepEqual( Stem("alszámlára"), "alszáml");});
test("alszámláról -> alszáml", function() {deepEqual( Stem("alszámláról"), "alszáml");});
test("alsó -> alsó", function() {deepEqual( Stem("alsó"), "alsó");});
test("alsóbb -> alsóbb", function() {deepEqual( Stem("alsóbb"), "alsóbb");});
test("alsó-középosztályokat -> alsó-középosztály", function() {deepEqual( Stem("alsó-középosztályokat"), "alsó-középosztály");});
test("alsóbbrendű -> alsóbbrendű", function() {deepEqual( Stem("alsóbbrendű"), "alsóbbrendű");});
test("alsóbbrendűnek -> alsóbbrendű", function() {deepEqual( Stem("alsóbbrendűnek"), "alsóbbrendű");});
test("alsóbbrendűségének -> alsóbbrendűség", function() {deepEqual( Stem("alsóbbrendűségének"), "alsóbbrendűség");});
test("alsógyenesi -> alsógyenes", function() {deepEqual( Stem("alsógyenesi"), "alsógyenes");});
test("alsógödi -> alsógöd", function() {deepEqual( Stem("alsógödi"), "alsógöd");});
test("alsógödieknek -> alsógödi", function() {deepEqual( Stem("alsógödieknek"), "alsógödi");});
test("alsógödire -> alsógöd", function() {deepEqual( Stem("alsógödire"), "alsógöd");});
test("alsóház -> alsóház", function() {deepEqual( Stem("alsóház"), "alsóház");});
test("alsókarjai -> alsókar", function() {deepEqual( Stem("alsókarjai"), "alsókar");});
test("alsókarjába -> alsókar", function() {deepEqual( Stem("alsókarjába"), "alsókar");});
test("alsókarokat -> alsókar", function() {deepEqual( Stem("alsókarokat"), "alsókar");});
test("alsónadrágban -> alsónadrág", function() {deepEqual( Stem("alsónadrágban"), "alsónadrág");});
test("alsópáloki -> alsópál", function() {deepEqual( Stem("alsópáloki"), "alsópál");});
test("alsóruhája -> alsóruhá", function() {deepEqual( Stem("alsóruhája"), "alsóruhá");});
test("alsóruhájának -> alsóruhá", function() {deepEqual( Stem("alsóruhájának"), "alsóruhá");});
test("alsóruhás -> alsóruhás", function() {deepEqual( Stem("alsóruhás"), "alsóruhás");});
test("alsóruhát -> alsóruh", function() {deepEqual( Stem("alsóruhát"), "alsóruh");});
test("alsós -> alsós", function() {deepEqual( Stem("alsós"), "alsós");});
test("alsósok -> alsós", function() {deepEqual( Stem("alsósok"), "alsós");});
test("alsóst -> alsós", function() {deepEqual( Stem("alsóst"), "alsós");});
test("alt -> al", function() {deepEqual( Stem("alt"), "al");});
test("altatja -> altat", function() {deepEqual( Stem("altatja"), "altat");});
test("altatáskor -> altatás", function() {deepEqual( Stem("altatáskor"), "altatás");});
test("altató -> altató", function() {deepEqual( Stem("altató"), "altató");});
test("altatót -> altató", function() {deepEqual( Stem("altatót"), "altató");});
test("altemplomban -> altempl", function() {deepEqual( Stem("altemplomban"), "altempl");});
test("altemplomába -> altemplom", function() {deepEqual( Stem("altemplomába"), "altemplom");});
test("alternatív -> alternatív", function() {deepEqual( Stem("alternatív"), "alternatív");});
test("alternatíva -> alternatív", function() {deepEqual( Stem("alternatíva"), "alternatív");});
test("alternatívájaként -> alternatívá", function() {deepEqual( Stem("alternatívájaként"), "alternatívá");});
test("alternatívájának -> alternatívá", function() {deepEqual( Stem("alternatívájának"), "alternatívá");});
test("alternatíváját -> alternatívá", function() {deepEqual( Stem("alternatíváját"), "alternatívá");});
test("alternatívát -> alternatív", function() {deepEqual( Stem("alternatívát"), "alternatív");});
test("altisztek -> altiszt", function() {deepEqual( Stem("altisztek"), "altiszt");});
test("altiszti -> altiszt", function() {deepEqual( Stem("altiszti"), "altiszt");});
test("altábornagy -> altábornagy", function() {deepEqual( Stem("altábornagy"), "altábornagy");});
test("altábornagyot -> altábornagy", function() {deepEqual( Stem("altábornagyot"), "altábornagy");});
test("altárolókon -> altároló", function() {deepEqual( Stem("altárolókon"), "altároló");});
test("altípusaik -> altípus", function() {deepEqual( Stem("altípusaik"), "altípus");});
test("aludhassunk -> aludhass", function() {deepEqual( Stem("aludhassunk"), "aludhass");});
test("aludhattunk -> aludhatt", function() {deepEqual( Stem("aludhattunk"), "aludhatt");});
test("aludhatunk -> aludhat", function() {deepEqual( Stem("aludhatunk"), "aludhat");});
test("aludj -> aludj", function() {deepEqual( Stem("aludj"), "aludj");});
test("alszanak -> alsz", function() {deepEqual( Stem("alszanak"), "alsz");});
test("alszik -> alsz", function() {deepEqual( Stem("alszik"), "alsz");});
test("alszok -> alsz", function() {deepEqual( Stem("alszok"), "alsz");});
test("alszom -> alsz", function() {deepEqual( Stem("alszom"), "alsz");});
test("alszom -> alsz", function() {deepEqual( Stem("alszom"), "alsz");});
test("alszunk -> alsz", function() {deepEqual( Stem("alszunk"), "alsz");});
test("aludjunk -> aludj", function() {deepEqual( Stem("aludjunk"), "aludj");});
test("aludjék -> aludje", function() {deepEqual( Stem("aludjék"), "aludje");});
test("aludni -> aludn", function() {deepEqual( Stem("aludni"), "aludn");});
test("aludnia -> aludn", function() {deepEqual( Stem("aludnia"), "aludn");});
test("aludnunk -> aludn", function() {deepEqual( Stem("aludnunk"), "aludn");});
test("aludnék -> aludne", function() {deepEqual( Stem("aludnék"), "aludne");});
test("aludt -> alu", function() {deepEqual( Stem("aludt"), "alu");});
test("aludta -> aludt", function() {deepEqual( Stem("aludta"), "aludt");});
test("aludtak -> aludt", function() {deepEqual( Stem("aludtak"), "aludt");});
test("aludtam -> aludt", function() {deepEqual( Stem("aludtam"), "aludt");});
test("aludtunk -> aludt", function() {deepEqual( Stem("aludtunk"), "aludt");});
test("aludták -> aludta", function() {deepEqual( Stem("aludták"), "aludta");});
test("aludtál -> aludtál", function() {deepEqual( Stem("aludtál"), "aludtál");});
test("alvás -> alvás", function() {deepEqual( Stem("alvás"), "alvás");});
test("alvásra -> alvás", function() {deepEqual( Stem("alvásra"), "alvás");});
test("alvással -> alvás", function() {deepEqual( Stem("alvással"), "alvás");});
test("alvástól -> alvás", function() {deepEqual( Stem("alvástól"), "alvás");});
test("alvó -> alvó", function() {deepEqual( Stem("alvó"), "alvó");});
test("alvókat -> alvó", function() {deepEqual( Stem("alvókat"), "alvó");});
test("alvót -> alvó", function() {deepEqual( Stem("alvót"), "alvó");});
test("alul -> al", function() {deepEqual( Stem("alul"), "al");});
test("alulról -> alul", function() {deepEqual( Stem("alulról"), "alul");});
test("alulfejlett -> alulfejlet", function() {deepEqual( Stem("alulfejlett"), "alulfejlet");});
test("aluli -> alul", function() {deepEqual( Stem("aluli"), "alul");});
test("aluliak -> aluli", function() {deepEqual( Stem("aluliak"), "aluli");});
test("aluljegyzés -> aluljegyzés", function() {deepEqual( Stem("aluljegyzés"), "aluljegyzés");});
test("aluljegyzése -> aluljegyzés", function() {deepEqual( Stem("aluljegyzése"), "aluljegyzés");});
test("aluljáróban -> aluljáró", function() {deepEqual( Stem("aluljáróban"), "aluljáró");});
test("aluljárókban -> aluljáró", function() {deepEqual( Stem("aluljárókban"), "aluljáró");});
test("alulmaradt -> alulmar", function() {deepEqual( Stem("alulmaradt"), "alulmar");});
test("alulméretezéskor -> alulméretezés", function() {deepEqual( Stem("alulméretezéskor"), "alulméretezés");});
test("alultőkésítettek -> alultőkésített", function() {deepEqual( Stem("alultőkésítettek"), "alultőkésített");});
test("alulértékelt -> alulértékel", function() {deepEqual( Stem("alulértékelt"), "alulértékel");});
test("alulértékeltek -> alulértékelt", function() {deepEqual( Stem("alulértékeltek"), "alulértékelt");});
test("alulértékeltnek -> alulértékelt", function() {deepEqual( Stem("alulértékeltnek"), "alulértékelt");});
test("alulértékelés -> alulértékelés", function() {deepEqual( Stem("alulértékelés"), "alulértékelés");});
test("alulértékelésre -> alulértékelés", function() {deepEqual( Stem("alulértékelésre"), "alulértékelés");});
test("alulértékeléssel -> alulértékelés", function() {deepEqual( Stem("alulértékeléssel"), "alulértékelés");});
test("alulértékelést -> alulértékelés", function() {deepEqual( Stem("alulértékelést"), "alulértékelés");});
test("alulértékelési -> alulértékelés", function() {deepEqual( Stem("alulértékelési"), "alulértékelés");});
test("alumínium -> alumíniu", function() {deepEqual( Stem("alumínium"), "alumíniu");});
test("alumíniumból -> alumíniu", function() {deepEqual( Stem("alumíniumból"), "alumíniu");});
test("alumíniumtrösztnél -> alumíniumtröszt", function() {deepEqual( Stem("alumíniumtrösztnél"), "alumíniumtröszt");});
test("aluszékonyság -> aluszékonyság", function() {deepEqual( Stem("aluszékonyság"), "aluszékonyság");});
test("aluszékonysága -> aluszékonyság", function() {deepEqual( Stem("aluszékonysága"), "aluszékonyság");});
test("alvajáró -> alvajáró", function() {deepEqual( Stem("alvajáró"), "alvajáró");});
test("alvilág -> alvilág", function() {deepEqual( Stem("alvilág"), "alvilág");});
test("alvilágba -> alvilág", function() {deepEqual( Stem("alvilágba"), "alvilág");});
test("alvilágban -> alvilág", function() {deepEqual( Stem("alvilágban"), "alvilág");});
test("alvilágból -> alvilág", function() {deepEqual( Stem("alvilágból"), "alvilág");});
test("alvilággal -> alvilág", function() {deepEqual( Stem("alvilággal"), "alvilág");});
test("alvilágot -> alvilág", function() {deepEqual( Stem("alvilágot"), "alvilág");});
test("alvilágában -> alvilág", function() {deepEqual( Stem("alvilágában"), "alvilág");});
test("alvilági -> alvilág", function() {deepEqual( Stem("alvilági"), "alvilág");});
test("alvállalkozáshoz -> alvállalkozás", function() {deepEqual( Stem("alvállalkozáshoz"), "alvállalkozás");});
test("alvállalkozó -> alvállalkozó", function() {deepEqual( Stem("alvállalkozó"), "alvállalkozó");});
test("alvállalkozóival -> alvállalkozó", function() {deepEqual( Stem("alvállalkozóival"), "alvállalkozó");});
test("alvállalkozók -> alvállalkozó", function() {deepEqual( Stem("alvállalkozók"), "alvállalkozó");});
test("alvállalkozóként -> alvállalkozó", function() {deepEqual( Stem("alvállalkozóként"), "alvállalkozó");});
test("alvállalkozóra -> alvállalkozó", function() {deepEqual( Stem("alvállalkozóra"), "alvállalkozó");});
test("alvásküszöbön -> alvásküszöb", function() {deepEqual( Stem("alvásküszöbön"), "alvásküszöb");});
test("alvásterméket -> alvásterme", function() {deepEqual( Stem("alvásterméket"), "alvásterme");});
test("alvóhelyeken -> alvóhely", function() {deepEqual( Stem("alvóhelyeken"), "alvóhely");});
test("alá-fölérendeltségi -> alá-fölérendeltség", function() {deepEqual( Stem("alá-fölérendeltségi"), "alá-fölérendeltség");});
test("aláaknázni -> aláaknázn", function() {deepEqual( Stem("aláaknázni"), "aláaknázn");});
test("aláaknázza -> aláaknázz", function() {deepEqual( Stem("aláaknázza"), "aláaknázz");});
test("alább -> alább", function() {deepEqual( Stem("alább"), "alább");});
test("alábbfagyott -> alábbfagyot", function() {deepEqual( Stem("alábbfagyott"), "alábbfagyot");});
test("alábbhagyott -> alábbhagyot", function() {deepEqual( Stem("alábbhagyott"), "alábbhagyot");});
test("alábbi -> alább", function() {deepEqual( Stem("alábbi"), "alább");});
test("alábbiak -> alábbi", function() {deepEqual( Stem("alábbiak"), "alábbi");});
test("alábbiakat -> alábbi", function() {deepEqual( Stem("alábbiakat"), "alábbi");});
test("alábbiakban -> alábbi", function() {deepEqual( Stem("alábbiakban"), "alábbi");});
test("alábbiakban -> alábbi", function() {deepEqual( Stem("alábbiakban"), "alábbi");});
test("alábbiakból -> alábbi", function() {deepEqual( Stem("alábbiakból"), "alábbi");});
test("alábbiakkal -> alábbi", function() {deepEqual( Stem("alábbiakkal"), "alábbi");});
test("alábecsülik -> alábecsül", function() {deepEqual( Stem("alábecsülik"), "alábecsül");});
test("aláereszkedő -> aláereszkedő", function() {deepEqual( Stem("aláereszkedő"), "aláereszkedő");});
test("aláfestő -> aláfestő", function() {deepEqual( Stem("aláfestő"), "aláfestő");});
test("aláhagyott -> aláhagyot", function() {deepEqual( Stem("aláhagyott"), "aláhagyot");});
test("aláhúzom -> aláhúz", function() {deepEqual( Stem("aláhúzom"), "aláhúz");});
test("aláhúzta -> aláhúzt", function() {deepEqual( Stem("aláhúzta"), "aláhúzt");});
test("aláhúzásjelet -> aláhúzásjel", function() {deepEqual( Stem("aláhúzásjelet"), "aláhúzásjel");});
test("alája -> alá", function() {deepEqual( Stem("alája"), "alá");});
test("alá -> ala", function() {deepEqual( Stem("alá"), "ala");});
test("alájuk -> ala", function() {deepEqual( Stem("alájuk"), "ala");});
test("alállomásokkal -> alállomás", function() {deepEqual( Stem("alállomásokkal"), "alállomás");});
test("alámerülés -> alámerülés", function() {deepEqual( Stem("alámerülés"), "alámerülés");});
test("alárendelni -> alárendeln", function() {deepEqual( Stem("alárendelni"), "alárendeln");});
test("alárendelve -> alárendelv", function() {deepEqual( Stem("alárendelve"), "alárendelv");});
test("alárendelt -> alárendel", function() {deepEqual( Stem("alárendelt"), "alárendel");});
test("alárendeltjétől -> alárendelt", function() {deepEqual( Stem("alárendeltjétől"), "alárendelt");});
test("alárendeltnek -> alárendelt", function() {deepEqual( Stem("alárendeltnek"), "alárendelt");});
test("alárendeltségében -> alárendeltség", function() {deepEqual( Stem("alárendeltségében"), "alárendeltség");});
test("alárendeltségéből -> alárendeltség", function() {deepEqual( Stem("alárendeltségéből"), "alárendeltség");});
test("aláterveznék -> alátervezne", function() {deepEqual( Stem("aláterveznék"), "alátervezne");});
test("alátervezésének -> alátervezés", function() {deepEqual( Stem("alátervezésének"), "alátervezés");});
test("alátámasztani -> alátámasztan", function() {deepEqual( Stem("alátámasztani"), "alátámasztan");});
test("alátámasztja -> alátámaszt", function() {deepEqual( Stem("alátámasztja"), "alátámaszt");});
test("alátámasztott -> alátámasztot", function() {deepEqual( Stem("alátámasztott"), "alátámasztot");});
test("alátámasztó -> alátámasztó", function() {deepEqual( Stem("alátámasztó"), "alátámasztó");});
test("alávaló -> alávaló", function() {deepEqual( Stem("alávaló"), "alávaló");});
test("alávetik -> alávet", function() {deepEqual( Stem("alávetik"), "alávet");});
test("alávetni -> alávetn", function() {deepEqual( Stem("alávetni"), "alávetn");});
test("alávetve -> alávetv", function() {deepEqual( Stem("alávetve"), "alávetv");});
test("alázat -> aláz", function() {deepEqual( Stem("alázat"), "aláz");});
test("alázata -> alázat", function() {deepEqual( Stem("alázata"), "alázat");});
test("alázattal -> aláz", function() {deepEqual( Stem("alázattal"), "aláz");});
test("alázatos -> alázatos", function() {deepEqual( Stem("alázatos"), "alázatos");});
test("alázatosabb -> alázatosabb", function() {deepEqual( Stem("alázatosabb"), "alázatosabb");});
test("alázatosan -> alázatos", function() {deepEqual( Stem("alázatosan"), "alázatos");});
test("alázatosságból -> alázatosság", function() {deepEqual( Stem("alázatosságból"), "alázatosság");});
test("alázatossággal -> alázatosság", function() {deepEqual( Stem("alázatossággal"), "alázatosság");});
test("alázkodnod -> alázkodn", function() {deepEqual( Stem("alázkodnod"), "alázkodn");});
test("alázni -> alázn", function() {deepEqual( Stem("alázni"), "alázn");});
test("aláíratlan -> aláíratl", function() {deepEqual( Stem("aláíratlan"), "aláíratl");});
test("aláírhatja -> aláírhat", function() {deepEqual( Stem("aláírhatja"), "aláírhat");});
test("aláírja -> aláír", function() {deepEqual( Stem("aláírja"), "aláír");});
test("aláírják -> aláírja", function() {deepEqual( Stem("aláírják"), "aláírja");});
test("aláírni -> aláírn", function() {deepEqual( Stem("aláírni"), "aláírn");});
test("aláírnia -> aláírn", function() {deepEqual( Stem("aláírnia"), "aláírn");});
test("aláírod -> aláír", function() {deepEqual( Stem("aláírod"), "aláír");});
test("aláírom -> aláír", function() {deepEqual( Stem("aláírom"), "aláír");});
test("aláírt -> aláír", function() {deepEqual( Stem("aláírt"), "aláír");});
test("aláírta -> aláírt", function() {deepEqual( Stem("aláírta"), "aláírt");});
test("aláírták -> aláírta", function() {deepEqual( Stem("aláírták"), "aláírta");});
test("aláírásgyűjtésbe -> aláírásgyűjtés", function() {deepEqual( Stem("aláírásgyűjtésbe"), "aláírásgyűjtés");});
test("aláírásgyűjtő -> aláírásgyűjtő", function() {deepEqual( Stem("aláírásgyűjtő"), "aláírásgyűjtő");});
test("aláíráshitelesítés-szolgáltatókon -> aláíráshitelesítés-szolgáltató", function() {deepEqual( Stem("aláíráshitelesítés-szolgáltatókon"), "aláíráshitelesítés-szolgáltató");});
test("aláírási -> aláírás", function() {deepEqual( Stem("aláírási"), "aláírás");});
test("aláírás -> aláírás", function() {deepEqual( Stem("aláírás"), "aláírás");});
test("aláírása -> aláírás", function() {deepEqual( Stem("aláírása"), "aláírás");});
test("aláírásként -> aláírás", function() {deepEqual( Stem("aláírásként"), "aláírás");});
test("aláírásnál -> aláírás", function() {deepEqual( Stem("aláírásnál"), "aláírás");});
test("aláírások -> aláírás", function() {deepEqual( Stem("aláírások"), "aláírás");});
test("aláírásokat -> aláírás", function() {deepEqual( Stem("aláírásokat"), "aláírás");});
test("aláírásokkal -> aláírás", function() {deepEqual( Stem("aláírásokkal"), "aláírás");});
test("aláírásra -> aláírás", function() {deepEqual( Stem("aláírásra"), "aláírás");});
test("aláírással -> aláírás", function() {deepEqual( Stem("aláírással"), "aláírás");});
test("aláírást -> aláírás", function() {deepEqual( Stem("aláírást"), "aláírás");});
test("aláírásának -> aláírás", function() {deepEqual( Stem("aláírásának"), "aláírás");});
test("aláírására -> aláírás", function() {deepEqual( Stem("aláírására"), "aláírás");});
test("aláírását -> aláírás", function() {deepEqual( Stem("aláírását"), "aláírás");});
test("aláírásától -> aláírás", function() {deepEqual( Stem("aláírásától"), "aláírás");});
test("aláírásával -> aláírás", function() {deepEqual( Stem("aláírásával"), "aláírás");});
test("aláíró -> aláíró", function() {deepEqual( Stem("aláíró"), "aláíró");});
test("aláírója -> aláíró", function() {deepEqual( Stem("aláírója"), "aláíró");});
test("aláírók -> aláíró", function() {deepEqual( Stem("aláírók"), "aláíró");});
test("aláírói -> aláíró", function() {deepEqual( Stem("aláírói"), "aláíró");});
test("alélt -> alél", function() {deepEqual( Stem("alélt"), "alél");});
test("alól -> alól", function() {deepEqual( Stem("alól"), "alól");});
test("alóla -> alól", function() {deepEqual( Stem("alóla"), "alól");});
test("ama -> am", function() {deepEqual( Stem("ama"), "am");});
test("amatőr -> amatőr", function() {deepEqual( Stem("amatőr"), "amatőr");});
test("amaz -> amaz", function() {deepEqual( Stem("amaz"), "amaz");});
test("ambiciózus -> ambiciózus", function() {deepEqual( Stem("ambiciózus"), "ambiciózus");});
test("ambivalens -> ambivalens", function() {deepEqual( Stem("ambivalens"), "ambivalens");});
test("ambulanciák -> ambulancia", function() {deepEqual( Stem("ambulanciák"), "ambulancia");});
test("ambíció -> ambíció", function() {deepEqual( Stem("ambíció"), "ambíció");});
test("ambícióit -> ambíció", function() {deepEqual( Stem("ambícióit"), "ambíció");});
test("ambíciója -> ambíció", function() {deepEqual( Stem("ambíciója"), "ambíció");});
test("ambíciók -> ambíció", function() {deepEqual( Stem("ambíciók"), "ambíció");});
test("ambícióval -> ambíció", function() {deepEqual( Stem("ambícióval"), "ambíció");});
test("ambó -> ambó", function() {deepEqual( Stem("ambó"), "ambó");});
test("ameddig -> amed", function() {deepEqual( Stem("ameddig"), "amed");});
test("amej -> amej", function() {deepEqual( Stem("amej"), "amej");});
test("amekkora -> amek", function() {deepEqual( Stem("amekkora"), "amek");});
test("amekkorák -> amekkora", function() {deepEqual( Stem("amekkorák"), "amekkora");});
test("amekkorának -> amekkor", function() {deepEqual( Stem("amekkorának"), "amekkor");});
test("amekkoráról -> amekkor", function() {deepEqual( Stem("amekkoráról"), "amekkor");});
test("amekkorát -> amekkor", function() {deepEqual( Stem("amekkorát"), "amekkor");});
test("amellett -> amellet", function() {deepEqual( Stem("amellett"), "amellet");});
test("amellyel -> amely", function() {deepEqual( Stem("amellyel"), "amely");});
test("amelyért -> amely", function() {deepEqual( Stem("amelyért"), "amely");});
test("amelytől -> amely", function() {deepEqual( Stem("amelytől"), "amely");});
test("amelyről -> amely", function() {deepEqual( Stem("amelyről"), "amely");});
test("amelyre -> amely", function() {deepEqual( Stem("amelyre"), "amely");});
test("amelynél -> amely", function() {deepEqual( Stem("amelynél"), "amely");});
test("amelynek -> amely", function() {deepEqual( Stem("amelynek"), "amely");});
test("amely -> amely", function() {deepEqual( Stem("amely"), "amely");});
test("amelybe -> amely", function() {deepEqual( Stem("amelybe"), "amely");});
test("amelyben -> amely", function() {deepEqual( Stem("amelyben"), "amely");});
test("amelyből -> amely", function() {deepEqual( Stem("amelyből"), "amely");});
test("amelyek -> amely", function() {deepEqual( Stem("amelyek"), "amely");});
test("amelyekbe -> amely", function() {deepEqual( Stem("amelyekbe"), "amely");});
test("amelyekben -> amely", function() {deepEqual( Stem("amelyekben"), "amely");});
test("amelyekből -> amely", function() {deepEqual( Stem("amelyekből"), "amely");});
test("amelyeken -> amely", function() {deepEqual( Stem("amelyeken"), "amely");});
test("amelyeket -> amely", function() {deepEqual( Stem("amelyeket"), "amely");});
test("amelyekhez -> amely", function() {deepEqual( Stem("amelyekhez"), "amely");});
test("amelyekkel -> amely", function() {deepEqual( Stem("amelyekkel"), "amely");});
test("amelyeknek -> amely", function() {deepEqual( Stem("amelyeknek"), "amely");});
test("amelyeknél -> amely", function() {deepEqual( Stem("amelyeknél"), "amely");});
test("amelyekre -> amely", function() {deepEqual( Stem("amelyekre"), "amely");});
test("amelyekről -> amely", function() {deepEqual( Stem("amelyekről"), "amely");});
test("amelyektől -> amely", function() {deepEqual( Stem("amelyektől"), "amely");});
test("amelyekért -> amely", function() {deepEqual( Stem("amelyekért"), "amely");});
test("amelyen -> amely", function() {deepEqual( Stem("amelyen"), "amely");});
test("amelyet -> amely", function() {deepEqual( Stem("amelyet"), "amely");});
test("amelyhez -> amely", function() {deepEqual( Stem("amelyhez"), "amely");});
test("amelyik -> amely", function() {deepEqual( Stem("amelyik"), "amely");});
test("amelyikbe -> amely", function() {deepEqual( Stem("amelyikbe"), "amely");});
test("amelyikben -> amely", function() {deepEqual( Stem("amelyikben"), "amely");});
test("amelyikből -> amely", function() {deepEqual( Stem("amelyikből"), "amely");});
test("amelyiken -> amely", function() {deepEqual( Stem("amelyiken"), "amely");});
test("amelyiket -> amely", function() {deepEqual( Stem("amelyiket"), "amely");});
test("amelyikhez -> amely", function() {deepEqual( Stem("amelyikhez"), "amely");});
test("amelyikkel -> amely", function() {deepEqual( Stem("amelyikkel"), "amely");});
test("amelyiknek -> amely", function() {deepEqual( Stem("amelyiknek"), "amely");});
test("amelyikre -> amely", function() {deepEqual( Stem("amelyikre"), "amely");});
test("amelyikről -> amely", function() {deepEqual( Stem("amelyikről"), "amely");});
test("amelyiktől -> amely", function() {deepEqual( Stem("amelyiktől"), "amely");});
test("amelyikük -> amely", function() {deepEqual( Stem("amelyikük"), "amely");});
test("amennyi -> amenny", function() {deepEqual( Stem("amennyi"), "amenny");});
test("amennyiben -> amenny", function() {deepEqual( Stem("amennyiben"), "amenny");});
test("amennyien -> amenny", function() {deepEqual( Stem("amennyien"), "amenny");});
test("amennyinek -> amenny", function() {deepEqual( Stem("amennyinek"), "amenny");});
test("amennyire -> amenny", function() {deepEqual( Stem("amennyire"), "amenny");});
test("amennyit -> amenny", function() {deepEqual( Stem("amennyit"), "amenny");});
test("amennyivel -> amenny", function() {deepEqual( Stem("amennyivel"), "amenny");});
test("amennyiért -> amenny", function() {deepEqual( Stem("amennyiért"), "amenny");});
test("amerikai -> ameri", function() {deepEqual( Stem("amerikai"), "ameri");});
test("amerikai-kínai -> amerikai-kín", function() {deepEqual( Stem("amerikai-kínai"), "amerikai-kín");});
test("amerikai-magyar -> amerikai-magyar", function() {deepEqual( Stem("amerikai-magyar"), "amerikai-magyar");});
test("amerikaiak -> amerikai", function() {deepEqual( Stem("amerikaiak"), "amerikai");});
test("amerikaiakat -> amerikai", function() {deepEqual( Stem("amerikaiakat"), "amerikai");});
test("amerikaiaknak -> amerikai", function() {deepEqual( Stem("amerikaiaknak"), "amerikai");});
test("amerikaihoz -> ameri", function() {deepEqual( Stem("amerikaihoz"), "ameri");});
test("amerikait -> ameri", function() {deepEqual( Stem("amerikait"), "ameri");});
test("amerikait -> ameri", function() {deepEqual( Stem("amerikait"), "ameri");});
test("amerikaitól -> ameri", function() {deepEqual( Stem("amerikaitól"), "ameri");});
test("amierikaiak -> amierikai", function() {deepEqual( Stem("amierikaiak"), "amierikai");});
test("amerikanizálódni -> amerikanizálódn", function() {deepEqual( Stem("amerikanizálódni"), "amerikanizálódn");});
test("amerre -> amer", function() {deepEqual( Stem("amerre"), "amer");});
test("amerről -> amer", function() {deepEqual( Stem("amerről"), "amer");});
test("amiatt -> amiat", function() {deepEqual( Stem("amiatt"), "amiat");});
test("amidőn -> amidő", function() {deepEqual( Stem("amidőn"), "amidő");});
test("amig -> am", function() {deepEqual( Stem("amig"), "am");});
test("ami -> am", function() {deepEqual( Stem("ami"), "am");});
test("amibe -> am", function() {deepEqual( Stem("amibe"), "am");});
test("amiben -> am", function() {deepEqual( Stem("amiben"), "am");});
test("amihez -> am", function() {deepEqual( Stem("amihez"), "am");});
test("amik -> am", function() {deepEqual( Stem("amik"), "am");});
test("amikbe -> am", function() {deepEqual( Stem("amikbe"), "am");});
test("amikben -> am", function() {deepEqual( Stem("amikben"), "am");});
test("amiken -> am", function() {deepEqual( Stem("amiken"), "am");});
test("amikkel -> am", function() {deepEqual( Stem("amikkel"), "am");});
test("amiknek -> am", function() {deepEqual( Stem("amiknek"), "am");});
test("amiknek -> am", function() {deepEqual( Stem("amiknek"), "am");});
test("amikre -> am", function() {deepEqual( Stem("amikre"), "am");});
test("amikről -> am", function() {deepEqual( Stem("amikről"), "am");});
test("amikért -> am", function() {deepEqual( Stem("amikért"), "am");});
test("aminek -> am", function() {deepEqual( Stem("aminek"), "am");});
test("amire -> am", function() {deepEqual( Stem("amire"), "am");});
test("amit -> am", function() {deepEqual( Stem("amit"), "am");});
test("amitől -> am", function() {deepEqual( Stem("amitől"), "am");});
test("amivel -> am", function() {deepEqual( Stem("amivel"), "am");});
test("amikoris -> amikoris", function() {deepEqual( Stem("amikoris"), "amikoris");});
test("amikorra -> amikor", function() {deepEqual( Stem("amikorra"), "amikor");});
test("amikor -> am", function() {deepEqual( Stem("amikor"), "am");});
test("amilyen -> amily", function() {deepEqual( Stem("amilyen"), "amily");});
test("amilyenbe -> amilyen", function() {deepEqual( Stem("amilyenbe"), "amilyen");});
test("amilyenben -> amilyen", function() {deepEqual( Stem("amilyenben"), "amilyen");});
test("amilyenek -> amily", function() {deepEqual( Stem("amilyenek"), "amily");});
test("amilyeneket -> amilyen", function() {deepEqual( Stem("amilyeneket"), "amilyen");});
test("amilyenekhez -> amilyen", function() {deepEqual( Stem("amilyenekhez"), "amilyen");});
test("amilyennek -> amilyen", function() {deepEqual( Stem("amilyennek"), "amilyen");});
test("amilyennel -> amily", function() {deepEqual( Stem("amilyennel"), "amily");});
test("amilyenre -> amilyen", function() {deepEqual( Stem("amilyenre"), "amilyen");});
test("amilyenről -> amilyen", function() {deepEqual( Stem("amilyenről"), "amilyen");});
test("amilyent -> amilyen", function() {deepEqual( Stem("amilyent"), "amilyen");});
test("amilyet -> amily", function() {deepEqual( Stem("amilyet"), "amily");});
test("amint -> amin", function() {deepEqual( Stem("amint"), "amin");});
test("aminthogy -> aminthogy", function() {deepEqual( Stem("aminthogy"), "aminthogy");});
test("aminél -> am", function() {deepEqual( Stem("aminél"), "am");});
test("amiért -> am", function() {deepEqual( Stem("amiért"), "am");});
test("amnesztiát -> amneszt", function() {deepEqual( Stem("amnesztiát"), "amneszt");});
test("amolyan -> amoly", function() {deepEqual( Stem("amolyan"), "amoly");});
test("amorf -> amorf", function() {deepEqual( Stem("amorf"), "amorf");});
test("amortizáció -> amortizáció", function() {deepEqual( Stem("amortizáció"), "amortizáció");});
test("amortizációs -> amortizációs", function() {deepEqual( Stem("amortizációs"), "amortizációs");});
test("amortizálódni -> amortizálódn", function() {deepEqual( Stem("amortizálódni"), "amortizálódn");});
test("amott -> amot", function() {deepEqual( Stem("amott"), "amot");});
test("ampullát -> ampull", function() {deepEqual( Stem("ampullát"), "ampull");});
test("amputálja -> amputál", function() {deepEqual( Stem("amputálja"), "amputál");});
test("amputált -> amputál", function() {deepEqual( Stem("amputált"), "amputál");});
test("amputáltatunk -> amputáltat", function() {deepEqual( Stem("amputáltatunk"), "amputáltat");});
test("amputálták -> amputálta", function() {deepEqual( Stem("amputálták"), "amputálta");});
test("amputáltak -> amputált", function() {deepEqual( Stem("amputáltak"), "amputált");});
test("amputáltakat -> amputált", function() {deepEqual( Stem("amputáltakat"), "amputált");});
test("amszterdami -> amszterdam", function() {deepEqual( Stem("amszterdami"), "amszterdam");});
test("amulettek -> amulett", function() {deepEqual( Stem("amulettek"), "amulett");});
test("amur -> amur", function() {deepEqual( Stem("amur"), "amur");});
test("amíg -> amíg", function() {deepEqual( Stem("amíg"), "amíg");});
test("amíg -> amíg", function() {deepEqual( Stem("amíg"), "amíg");});
test("amúgy -> amúgy", function() {deepEqual( Stem("amúgy"), "amúgy");});
test("amúr -> amúr", function() {deepEqual( Stem("amúr"), "amúr");});
test("an -> an", function() {deepEqual( Stem("an"), "an");});
test("analfabéta -> analfabét", function() {deepEqual( Stem("analfabéta"), "analfabét");});
test("analitika -> analit", function() {deepEqual( Stem("analitika"), "analit");});
test("analizálták -> analizálta", function() {deepEqual( Stem("analizálták"), "analizálta");});
test("analóg -> analóg", function() {deepEqual( Stem("analóg"), "analóg");});
test("analógia -> analóg", function() {deepEqual( Stem("analógia"), "analóg");});
test("analógiájára -> analógiá", function() {deepEqual( Stem("analógiájára"), "analógiá");});
test("analógiákat -> analógia", function() {deepEqual( Stem("analógiákat"), "analógia");});
test("anarchista -> anarchist", function() {deepEqual( Stem("anarchista"), "anarchist");});
test("anconai -> ancon", function() {deepEqual( Stem("anconai"), "ancon");});
test("and -> an", function() {deepEqual( Stem("and"), "an");});
test("andalító -> andalító", function() {deepEqual( Stem("andalító"), "andalító");});
test("androgün -> androgü", function() {deepEqual( Stem("androgün"), "androgü");});
test("aneszteziológusok -> aneszteziológus", function() {deepEqual( Stem("aneszteziológusok"), "aneszteziológus");});
test("angliai -> angli", function() {deepEqual( Stem("angliai"), "angli");});
test("anglikán -> angl", function() {deepEqual( Stem("anglikán"), "angl");});
test("angolai -> angol", function() {deepEqual( Stem("angolai"), "angol");});
test("angolgyűlölővé -> angolgyűlölő", function() {deepEqual( Stem("angolgyűlölővé"), "angolgyűlölő");});
test("angolkór -> angolkór", function() {deepEqual( Stem("angolkór"), "angolkór");});
test("angolkóros -> angolkóros", function() {deepEqual( Stem("angolkóros"), "angolkóros");});
test("angolna -> angoln", function() {deepEqual( Stem("angolna"), "angoln");});
test("angolnyelv-tudás -> angolnyelv-tudás", function() {deepEqual( Stem("angolnyelv-tudás"), "angolnyelv-tudás");});
test("angolból -> angol", function() {deepEqual( Stem("angolból"), "angol");});
test("angol -> angol", function() {deepEqual( Stem("angol"), "angol");});
test("angolnak -> angol", function() {deepEqual( Stem("angolnak"), "angol");});
test("angolok -> angol", function() {deepEqual( Stem("angolok"), "angol");});
test("angolokkal -> angol", function() {deepEqual( Stem("angolokkal"), "angol");});
test("angoloké -> angol", function() {deepEqual( Stem("angoloké"), "angol");});
test("angolra -> angol", function() {deepEqual( Stem("angolra"), "angol");});
test("angolul -> angol", function() {deepEqual( Stem("angolul"), "angol");});
test("angolt -> angol", function() {deepEqual( Stem("angolt"), "angol");});
test("angolos -> angolos", function() {deepEqual( Stem("angolos"), "angolos");});
test("angolszász -> angolszász", function() {deepEqual( Stem("angolszász"), "angolszász");});
test("angolsággal -> angolság", function() {deepEqual( Stem("angolsággal"), "angolság");});
test("angy -> angy", function() {deepEqual( Stem("angy"), "angy");});
test("angyal -> angyal", function() {deepEqual( Stem("angyal"), "angyal");});
test("angyalok -> angyal", function() {deepEqual( Stem("angyalok"), "angyal");});
test("angyalokra -> angyal", function() {deepEqual( Stem("angyalokra"), "angyal");});
test("angyalarcú -> angyalarcú", function() {deepEqual( Stem("angyalarcú"), "angyalarcú");});
test("angyalföldi -> angyalföld", function() {deepEqual( Stem("angyalföldi"), "angyalföld");});
test("angyali -> angyal", function() {deepEqual( Stem("angyali"), "angyal");});
test("angyalian -> angyal", function() {deepEqual( Stem("angyalian"), "angyal");});
test("angyalszerű -> angyalszerű", function() {deepEqual( Stem("angyalszerű"), "angyalszerű");});
test("animam -> an", function() {deepEqual( Stem("animam"), "an");});
test("animáció -> animáció", function() {deepEqual( Stem("animáció"), "animáció");});
test("animációs -> animációs", function() {deepEqual( Stem("animációs"), "animációs");});
test("animátorok -> animátor", function() {deepEqual( Stem("animátorok"), "animátor");});
test("ankarai -> ankar", function() {deepEqual( Stem("ankarai"), "ankar");});
test("annak -> an", function() {deepEqual( Stem("annak"), "an");});
test("annaleseibe -> annales", function() {deepEqual( Stem("annaleseibe"), "annales");});
test("annyi -> anny", function() {deepEqual( Stem("annyi"), "anny");});
test("annyian -> anny", function() {deepEqual( Stem("annyian"), "anny");});
test("annyiba -> anny", function() {deepEqual( Stem("annyiba"), "anny");});
test("annyiban -> anny", function() {deepEqual( Stem("annyiban"), "anny");});
test("annyiból -> anny", function() {deepEqual( Stem("annyiból"), "anny");});
test("annyinak -> anny", function() {deepEqual( Stem("annyinak"), "anny");});
test("annyira -> anny", function() {deepEqual( Stem("annyira"), "anny");});
test("annyiszor -> annyiszor", function() {deepEqual( Stem("annyiszor"), "annyiszor");});
test("annyit -> anny", function() {deepEqual( Stem("annyit"), "anny");});
test("annyival -> anny", function() {deepEqual( Stem("annyival"), "anny");});
test("annyiféle -> annyifél", function() {deepEqual( Stem("annyiféle"), "annyifél");});
test("annyiféleképpen -> annyifél", function() {deepEqual( Stem("annyiféleképpen"), "annyifél");});
test("annál -> an", function() {deepEqual( Stem("annál"), "an");});
test("annó -> annó", function() {deepEqual( Stem("annó"), "annó");});
test("annójában -> annó", function() {deepEqual( Stem("annójában"), "annó");});
test("anomáliák -> anomália", function() {deepEqual( Stem("anomáliák"), "anomália");});
test("anomáliákat -> anomália", function() {deepEqual( Stem("anomáliákat"), "anomália");});
test("anonim -> anon", function() {deepEqual( Stem("anonim"), "anon");});
test("anonimitása -> anonimitás", function() {deepEqual( Stem("anonimitása"), "anonimitás");});
test("anonimitását -> anonimitás", function() {deepEqual( Stem("anonimitását"), "anonimitás");});
test("anonymous -> anonymous", function() {deepEqual( Stem("anonymous"), "anonymous");});
test("anorexiát -> anorex", function() {deepEqual( Stem("anorexiát"), "anorex");});
test("antarktiszi -> antarktisz", function() {deepEqual( Stem("antarktiszi"), "antarktisz");});
test("antenna -> antenn", function() {deepEqual( Stem("antenna"), "antenn");});
test("antennája -> antenná", function() {deepEqual( Stem("antennája"), "antenná");});
test("antibakteriális -> antibakteriális", function() {deepEqual( Stem("antibakteriális"), "antibakteriális");});
test("antibiotikum -> antibiotiku", function() {deepEqual( Stem("antibiotikum"), "antibiotiku");});
test("antibiotikumok -> antibiotikum", function() {deepEqual( Stem("antibiotikumok"), "antibiotikum");});
test("antibiotikumokkal -> antibiotikum", function() {deepEqual( Stem("antibiotikumokkal"), "antibiotikum");});
test("antibiotikumot -> antibiotiku", function() {deepEqual( Stem("antibiotikumot"), "antibiotiku");});
test("antibébi-pirulák -> antibébi-pirula", function() {deepEqual( Stem("antibébi-pirulák"), "antibébi-pirula");});
test("antibébi-tablettákat -> antibébi-tabletta", function() {deepEqual( Stem("antibébi-tablettákat"), "antibébi-tabletta");});
test("antiche -> antich", function() {deepEqual( Stem("antiche"), "antich");});
test("antidemokratikus -> antidemokratikus", function() {deepEqual( Stem("antidemokratikus"), "antidemokratikus");});
test("antifasiszta -> antifasiszt", function() {deepEqual( Stem("antifasiszta"), "antifasiszt");});
test("antifasizmussal -> antifasizmus", function() {deepEqual( Stem("antifasizmussal"), "antifasizmus");});
test("antik -> ant", function() {deepEqual( Stem("antik"), "ant");});
test("antikapitalista -> antikapitalist", function() {deepEqual( Stem("antikapitalista"), "antikapitalist");});
test("antikommunista -> antikommunist", function() {deepEqual( Stem("antikommunista"), "antikommunist");});
test("antikvárius -> antikvárius", function() {deepEqual( Stem("antikvárius"), "antikvárius");});
test("antilopot -> antilop", function() {deepEqual( Stem("antilopot"), "antilop");});
test("antirasszista -> antirasszist", function() {deepEqual( Stem("antirasszista"), "antirasszist");});
test("antiszemita -> antiszemit", function() {deepEqual( Stem("antiszemita"), "antiszemit");});
test("antiszemita -> antiszemit", function() {deepEqual( Stem("antiszemita"), "antiszemit");});
test("antiszemitizmus -> antiszemitizmus", function() {deepEqual( Stem("antiszemitizmus"), "antiszemitizmus");});
test("antiszemitizmus-ellenes -> antiszemitizmus-ellenes", function() {deepEqual( Stem("antiszemitizmus-ellenes"), "antiszemitizmus-ellenes");});
test("antiszociális -> antiszociális", function() {deepEqual( Stem("antiszociális"), "antiszociális");});
test("antitézisek -> antitézis", function() {deepEqual( Stem("antitézisek"), "antitézis");});
test("antológiájának -> antológiá", function() {deepEqual( Stem("antológiájának"), "antológiá");});
test("antológiát -> antológ", function() {deepEqual( Stem("antológiát"), "antológ");});
test("anya-gyermek -> anya-gyerm", function() {deepEqual( Stem("anya-gyermek"), "anya-gyerm");});
test("anyacég -> anyacég", function() {deepEqual( Stem("anyacég"), "anyacég");});
test("anyacégéhez -> anyacég", function() {deepEqual( Stem("anyacégéhez"), "anyacég");});
test("anyaegyház -> anyaegyház", function() {deepEqual( Stem("anyaegyház"), "anyaegyház");});
test("anyag -> anyag", function() {deepEqual( Stem("anyag"), "anyag");});
test("anyaga -> anyag", function() {deepEqual( Stem("anyaga"), "anyag");});
test("anyagát -> anyag", function() {deepEqual( Stem("anyagát"), "anyag");});
test("anyagról -> anyag", function() {deepEqual( Stem("anyagról"), "anyag");});
test("anyagét -> anyag", function() {deepEqual( Stem("anyagét"), "anyag");});
test("anyagukat -> anyag", function() {deepEqual( Stem("anyagukat"), "anyag");});
test("anyagában -> anyag", function() {deepEqual( Stem("anyagában"), "anyag");});
test("anyagának -> anyag", function() {deepEqual( Stem("anyagának"), "anyag");});
test("anyagai -> anyag", function() {deepEqual( Stem("anyagai"), "anyag");});
test("anyagaikat -> anyag", function() {deepEqual( Stem("anyagaikat"), "anyag");});
test("anyagba -> anyag", function() {deepEqual( Stem("anyagba"), "anyag");});
test("anyagban -> anyag", function() {deepEqual( Stem("anyagban"), "anyag");});
test("anyagból -> anyag", function() {deepEqual( Stem("anyagból"), "anyag");});
test("anyaggal -> anyag", function() {deepEqual( Stem("anyaggal"), "anyag");});
test("anyaghoz -> anyag", function() {deepEqual( Stem("anyaghoz"), "anyag");});
test("anyagnak -> anyag", function() {deepEqual( Stem("anyagnak"), "anyag");});
test("anyagok -> anyag", function() {deepEqual( Stem("anyagok"), "anyag");});
test("anyagokat -> anyag", function() {deepEqual( Stem("anyagokat"), "anyag");});
test("anyagokba -> anyag", function() {deepEqual( Stem("anyagokba"), "anyag");});
test("anyagokból -> anyag", function() {deepEqual( Stem("anyagokból"), "anyag");});
test("anyagokhoz -> anyag", function() {deepEqual( Stem("anyagokhoz"), "anyag");});
test("anyagokkal -> anyag", function() {deepEqual( Stem("anyagokkal"), "anyag");});
test("anyagoknak -> anyag", function() {deepEqual( Stem("anyagoknak"), "anyag");});
test("anyagokra -> anyag", function() {deepEqual( Stem("anyagokra"), "anyag");});
test("anyagoktól -> anyag", function() {deepEqual( Stem("anyagoktól"), "anyag");});
test("anyagos -> anyagos", function() {deepEqual( Stem("anyagos"), "anyagos");});
test("anyagot -> anyag", function() {deepEqual( Stem("anyagot"), "anyag");});
test("anyagra -> anyag", function() {deepEqual( Stem("anyagra"), "anyag");});
test("anyagi -> anyag", function() {deepEqual( Stem("anyagi"), "anyag");});
test("anyagbőségét -> anyagbőség", function() {deepEqual( Stem("anyagbőségét"), "anyagbőség");});
test("anyagcseretermékének -> anyagcsereterme", function() {deepEqual( Stem("anyagcseretermékének"), "anyagcsereterme");});
test("anyagi-jogi -> anyagi-jog", function() {deepEqual( Stem("anyagi-jogi"), "anyagi-jog");});
test("anyagiak -> anyagi", function() {deepEqual( Stem("anyagiak"), "anyagi");});
test("anyagiakat -> anyagi", function() {deepEqual( Stem("anyagiakat"), "anyagi");});
test("anyagiakban -> anyagi", function() {deepEqual( Stem("anyagiakban"), "anyagi");});
test("anyagiakkal -> anyagi", function() {deepEqual( Stem("anyagiakkal"), "anyagi");});
test("anyagilag -> anyagilag", function() {deepEqual( Stem("anyagilag"), "anyagilag");});
test("anyagias -> anyagias", function() {deepEqual( Stem("anyagias"), "anyagias");});
test("anyagiaskodás -> anyagiaskodás", function() {deepEqual( Stem("anyagiaskodás"), "anyagiaskodás");});
test("anyagismeret -> anyagismer", function() {deepEqual( Stem("anyagismeret"), "anyagismer");});
test("anyagismeretet -> anyagismeret", function() {deepEqual( Stem("anyagismeretet"), "anyagismeret");});
test("anyagminta -> anyagmint", function() {deepEqual( Stem("anyagminta"), "anyagmint");});
test("anyagmozgást -> anyagmozgás", function() {deepEqual( Stem("anyagmozgást"), "anyagmozgás");});
test("anyagraktárnál -> anyagraktár", function() {deepEqual( Stem("anyagraktárnál"), "anyagraktár");});
test("anyagrészt -> anyagrész", function() {deepEqual( Stem("anyagrészt"), "anyagrész");});
test("anyagszerkezeti -> anyagszerkezet", function() {deepEqual( Stem("anyagszerkezeti"), "anyagszerkezet");});
test("anyagszerkezettel -> anyagszerkez", function() {deepEqual( Stem("anyagszerkezettel"), "anyagszerkez");});
test("anyagtervezési -> anyagtervezés", function() {deepEqual( Stem("anyagtervezési"), "anyagtervezés");});
test("anyagösszetétel -> anyagösszetétel", function() {deepEqual( Stem("anyagösszetétel"), "anyagösszetétel");});
test("anyahalandóság -> anyahalandóság", function() {deepEqual( Stem("anyahalandóság"), "anyahalandóság");});
test("anyai -> any", function() {deepEqual( Stem("anyai"), "any");});
test("anyajoga -> anyajog", function() {deepEqual( Stem("anyajoga"), "anyajog");});
test("anyakirály -> anyakirály", function() {deepEqual( Stem("anyakirály"), "anyakirály");});
test("anyakirálynő -> anyakirálynő", function() {deepEqual( Stem("anyakirálynő"), "anyakirálynő");});
test("anyakönyveket -> anyakönyv", function() {deepEqual( Stem("anyakönyveket"), "anyakönyv");});
test("anyakönyvezték -> anyakönyvezte", function() {deepEqual( Stem("anyakönyvezték"), "anyakönyvezte");});
test("anyakönyvi -> anyakönyv", function() {deepEqual( Stem("anyakönyvi"), "anyakönyv");});
test("anyalapon -> anyalap", function() {deepEqual( Stem("anyalapon"), "anyalap");});
test("anyalemez -> anyalemez", function() {deepEqual( Stem("anyalemez"), "anyalemez");});
test("anyalemeznek -> anyalemez", function() {deepEqual( Stem("anyalemeznek"), "anyalemez");});
test("anyalemezt -> anyalemez", function() {deepEqual( Stem("anyalemezt"), "anyalemez");});
test("anyanyelv -> anyanyelv", function() {deepEqual( Stem("anyanyelv"), "anyanyelv");});
test("anyanyelve -> anyanyelv", function() {deepEqual( Stem("anyanyelve"), "anyanyelv");});
test("anyanyelvén -> anyanyelv", function() {deepEqual( Stem("anyanyelvén"), "anyanyelv");});
test("anyanyelvű -> anyanyelvű", function() {deepEqual( Stem("anyanyelvű"), "anyanyelvű");});
test("anyanyelvükön -> anyanyelv", function() {deepEqual( Stem("anyanyelvükön"), "anyanyelv");});
test("anyanyelvünket -> anyanyelv", function() {deepEqual( Stem("anyanyelvünket"), "anyanyelv");});
test("anyaország -> anyaország", function() {deepEqual( Stem("anyaország"), "anyaország");});
test("anyaországban -> anyaország", function() {deepEqual( Stem("anyaországban"), "anyaország");});
test("anyaországból -> anyaország", function() {deepEqual( Stem("anyaországból"), "anyaország");});
test("anyaországának -> anyaország", function() {deepEqual( Stem("anyaországának"), "anyaország");});
test("anyaság -> anyaság", function() {deepEqual( Stem("anyaság"), "anyaság");});
test("anyaságnak -> anyaság", function() {deepEqual( Stem("anyaságnak"), "anyaság");});
test("anyaságot -> anyaság", function() {deepEqual( Stem("anyaságot"), "anyaság");});
test("anyasági -> anyaság", function() {deepEqual( Stem("anyasági"), "anyaság");});
test("anyatársaságra -> anyatársaság", function() {deepEqual( Stem("anyatársaságra"), "anyatársaság");});
test("anyavállalat -> anyavállal", function() {deepEqual( Stem("anyavállalat"), "anyavállal");});
test("anyavállalata -> anyavállalat", function() {deepEqual( Stem("anyavállalata"), "anyavállalat");});
test("anyavállalatát -> anyavállalat", function() {deepEqual( Stem("anyavállalatát"), "anyavállalat");});
test("anya -> any", function() {deepEqual( Stem("anya"), "any");});
test("anyjuk -> any", function() {deepEqual( Stem("anyjuk"), "any");});
test("anyáért -> any", function() {deepEqual( Stem("anyáért"), "any");});
test("anyáék -> anyáe", function() {deepEqual( Stem("anyáék"), "anyáe");});
test("anyáéhoz -> anyá", function() {deepEqual( Stem("anyáéhoz"), "anyá");});
test("anyával -> any", function() {deepEqual( Stem("anyával"), "any");});
test("anyától -> any", function() {deepEqual( Stem("anyától"), "any");});
test("anyátok -> anyát", function() {deepEqual( Stem("anyátok"), "anyát");});
test("anyát -> any", function() {deepEqual( Stem("anyát"), "any");});
test("anyjukat -> any", function() {deepEqual( Stem("anyjukat"), "any");});
test("anyjuktól -> any", function() {deepEqual( Stem("anyjuktól"), "any");});
test("anyján -> any", function() {deepEqual( Stem("anyján"), "any");});
test("anyjának -> any", function() {deepEqual( Stem("anyjának"), "any");});
test("anyjára -> any", function() {deepEqual( Stem("anyjára"), "any");});
test("anyjáról -> any", function() {deepEqual( Stem("anyjáról"), "any");});
test("anyját -> any", function() {deepEqual( Stem("anyját"), "any");});
test("anyjától -> any", function() {deepEqual( Stem("anyjától"), "any");});
test("anyjával -> any", function() {deepEqual( Stem("anyjával"), "any");});
test("anyád -> anya", function() {deepEqual( Stem("anyád"), "anya");});
test("anyák -> anya", function() {deepEqual( Stem("anyák"), "anya");});
test("anyákkal -> anya", function() {deepEqual( Stem("anyákkal"), "anya");});
test("anyákra -> anya", function() {deepEqual( Stem("anyákra"), "anya");});
test("anyámat -> anya", function() {deepEqual( Stem("anyámat"), "anya");});
test("anyámmal -> anya", function() {deepEqual( Stem("anyámmal"), "anya");});
test("anyámra -> anya", function() {deepEqual( Stem("anyámra"), "anya");});
test("anyámék -> anyáme", function() {deepEqual( Stem("anyámék"), "anyáme");});
test("anyámékkal -> anyáme", function() {deepEqual( Stem("anyámékkal"), "anyáme");});
test("anyának -> any", function() {deepEqual( Stem("anyának"), "any");});
test("anyára -> any", function() {deepEqual( Stem("anyára"), "any");});
test("anynyiféle -> anynyifél", function() {deepEqual( Stem("anynyiféle"), "anynyifél");});
test("anyuci -> anyuc", function() {deepEqual( Stem("anyuci"), "anyuc");});
test("anyukája -> anyuká", function() {deepEqual( Stem("anyukája"), "anyuká");});
test("anyukájuk -> anyuka", function() {deepEqual( Stem("anyukájuk"), "anyuka");});
test("anyukám -> anyuka", function() {deepEqual( Stem("anyukám"), "anyuka");});
test("anyukámat -> anyuka", function() {deepEqual( Stem("anyukámat"), "anyuka");});
test("anyukámmal -> anyuka", function() {deepEqual( Stem("anyukámmal"), "anyuka");});
test("anyukámnak -> anyuka", function() {deepEqual( Stem("anyukámnak"), "anyuka");});
test("anyukámra -> anyuka", function() {deepEqual( Stem("anyukámra"), "anyuka");});
test("anyukámtól -> anyuka", function() {deepEqual( Stem("anyukámtól"), "anyuka");});
test("anyukámék -> anyukáme", function() {deepEqual( Stem("anyukámék"), "anyukáme");});
test("anyukámékat -> anyukáme", function() {deepEqual( Stem("anyukámékat"), "anyukáme");});
test("anyukánkat -> anyuka", function() {deepEqual( Stem("anyukánkat"), "anyuka");});
test("anyukánkra -> anyuka", function() {deepEqual( Stem("anyukánkra"), "anyuka");});
test("anyummal -> anyu", function() {deepEqual( Stem("anyummal"), "anyu");});
test("anyu -> anyu", function() {deepEqual( Stem("anyu"), "anyu");});
test("anyunak -> anyu", function() {deepEqual( Stem("anyunak"), "anyu");});
test("anyura -> anyu", function() {deepEqual( Stem("anyura"), "anyu");});
test("anyut -> anyu", function() {deepEqual( Stem("anyut"), "anyu");});
test("anyuval -> anyu", function() {deepEqual( Stem("anyuval"), "anyu");});
test("anyuékat -> anyue", function() {deepEqual( Stem("anyuékat"), "anyue");});
test("anyuékkal -> anyue", function() {deepEqual( Stem("anyuékkal"), "anyue");});
test("anyuéktól -> anyue", function() {deepEqual( Stem("anyuéktól"), "anyue");});
test("anyáknapja -> anyáknap", function() {deepEqual( Stem("anyáknapja"), "anyáknap");});
test("anyáskodó -> anyáskodó", function() {deepEqual( Stem("anyáskodó"), "anyáskodó");});
test("anyósülésen -> anyósülés", function() {deepEqual( Stem("anyósülésen"), "anyósülés");});
test("anélkül -> anél", function() {deepEqual( Stem("anélkül"), "anél");});
test("apa-vonal -> apa-vonal", function() {deepEqual( Stem("apa-vonal"), "apa-vonal");});
test("apacslány -> apacslány", function() {deepEqual( Stem("apacslány"), "apacslány");});
test("apacstanyára -> apacstany", function() {deepEqual( Stem("apacstanyára"), "apacstany");});
test("apad -> ap", function() {deepEqual( Stem("apad"), "ap");});
test("apadt -> ap", function() {deepEqual( Stem("apadt"), "ap");});
test("apadhat -> apadh", function() {deepEqual( Stem("apadhat"), "apadh");});
test("apadás -> apadás", function() {deepEqual( Stem("apadás"), "apadás");});
test("apadása -> apadás", function() {deepEqual( Stem("apadása"), "apadás");});
test("apadására -> apadás", function() {deepEqual( Stem("apadására"), "apadás");});
test("apartman -> apart", function() {deepEqual( Stem("apartman"), "apart");});
test("apartman-házat -> apartman-ház", function() {deepEqual( Stem("apartman-házat"), "apartman-ház");});
test("apaszerepet -> apaszerep", function() {deepEqual( Stem("apaszerepet"), "apaszerep");});
test("apasztja -> apaszt", function() {deepEqual( Stem("apasztja"), "apaszt");});
test("apellál -> apellál", function() {deepEqual( Stem("apellál"), "apellál");});
test("apellálva -> apellálv", function() {deepEqual( Stem("apellálva"), "apellálv");});
test("apelláta -> apellát", function() {deepEqual( Stem("apelláta"), "apellát");});
test("apostagi -> apostag", function() {deepEqual( Stem("apostagi"), "apostag");});
test("aposztrofált -> aposztrofál", function() {deepEqual( Stem("aposztrofált"), "aposztrofál");});
test("aposztrofáló -> aposztrofáló", function() {deepEqual( Stem("aposztrofáló"), "aposztrofáló");});
test("apparátus -> apparátus", function() {deepEqual( Stem("apparátus"), "apparátus");});
test("apparátusa -> apparátus", function() {deepEqual( Stem("apparátusa"), "apparátus");});
test("apparátusba -> apparátus", function() {deepEqual( Stem("apparátusba"), "apparátus");});
test("apparátusnak -> apparátus", function() {deepEqual( Stem("apparátusnak"), "apparátus");});
test("apparátusok -> apparátus", function() {deepEqual( Stem("apparátusok"), "apparátus");});
test("apparátust -> apparátus", function() {deepEqual( Stem("apparátust"), "apparátus");});
test("apparátustól -> apparátus", function() {deepEqual( Stem("apparátustól"), "apparátus");});
test("apparátusát -> apparátus", function() {deepEqual( Stem("apparátusát"), "apparátus");});
test("apparátusi -> apparátus", function() {deepEqual( Stem("apparátusi"), "apparátus");});
test("applet -> appl", function() {deepEqual( Stem("applet"), "appl");});
test("appletek -> applet", function() {deepEqual( Stem("appletek"), "applet");});
test("appleteket -> applet", function() {deepEqual( Stem("appleteket"), "applet");});
test("appleteké -> applet", function() {deepEqual( Stem("appleteké"), "applet");});
test("appletekénél -> applet", function() {deepEqual( Stem("appletekénél"), "applet");});
test("appletet -> applet", function() {deepEqual( Stem("appletet"), "applet");});
test("apportbeszolgáltatási -> apportbeszolgáltatás", function() {deepEqual( Stem("apportbeszolgáltatási"), "apportbeszolgáltatás");});
test("apportlistán -> apportlist", function() {deepEqual( Stem("apportlistán"), "apportlist");});
test("apport -> appor", function() {deepEqual( Stem("apport"), "appor");});
test("apportban -> apport", function() {deepEqual( Stem("apportban"), "apport");});
test("apportból -> apport", function() {deepEqual( Stem("apportból"), "apport");});
test("apportja -> apport", function() {deepEqual( Stem("apportja"), "apport");});
test("apportként -> apport", function() {deepEqual( Stem("apportként"), "apport");});
test("apportnak -> apport", function() {deepEqual( Stem("apportnak"), "apport");});
test("apportok -> apport", function() {deepEqual( Stem("apportok"), "apport");});
test("apportot -> apport", function() {deepEqual( Stem("apportot"), "apport");});
test("apportra -> apport", function() {deepEqual( Stem("apportra"), "apport");});
test("apporttal -> appor", function() {deepEqual( Stem("apporttal"), "appor");});
test("apportálható -> apportálható", function() {deepEqual( Stem("apportálható"), "apportálható");});
test("apportálhatóságához -> apportálhatóság", function() {deepEqual( Stem("apportálhatóságához"), "apportálhatóság");});
test("apportálhatóságára -> apportálhatóság", function() {deepEqual( Stem("apportálhatóságára"), "apportálhatóság");});
test("apportálhatóságát -> apportálhatóság", function() {deepEqual( Stem("apportálhatóságát"), "apportálhatóság");});
test("apportálhatóságával -> apportálhatóság", function() {deepEqual( Stem("apportálhatóságával"), "apportálhatóság");});
test("apportálják -> apportálja", function() {deepEqual( Stem("apportálják"), "apportálja");});
test("apportálni -> apportáln", function() {deepEqual( Stem("apportálni"), "apportáln");});
test("apportálás -> apportálás", function() {deepEqual( Stem("apportálás"), "apportálás");});
test("apportálása -> apportálás", function() {deepEqual( Stem("apportálása"), "apportálás");});
test("apportálásnál -> apportálás", function() {deepEqual( Stem("apportálásnál"), "apportálás");});
test("apportálásának -> apportálás", function() {deepEqual( Stem("apportálásának"), "apportálás");});
test("apportálásánál -> apportálás", function() {deepEqual( Stem("apportálásánál"), "apportálás");});
test("apportálásával -> apportálás", function() {deepEqual( Stem("apportálásával"), "apportálás");});
test("apportőr -> apportőr", function() {deepEqual( Stem("apportőr"), "apportőr");});
test("apropóján -> apropó", function() {deepEqual( Stem("apropóján"), "apropó");});
test("apropót -> apropó", function() {deepEqual( Stem("apropót"), "apropó");});
test("apránként -> apr", function() {deepEqual( Stem("apránként"), "apr");});
test("apró -> apró", function() {deepEqual( Stem("apró"), "apró");});
test("apróbb -> apróbb", function() {deepEqual( Stem("apróbb"), "apróbb");});
test("apróra -> apró", function() {deepEqual( Stem("apróra"), "apró");});
test("aprót -> apró", function() {deepEqual( Stem("aprót"), "apró");});
test("aprócska -> aprócs", function() {deepEqual( Stem("aprócska"), "aprócs");});
test("aprólékos -> aprólékos", function() {deepEqual( Stem("aprólékos"), "aprólékos");});
test("aprólékosabb -> aprólékosabb", function() {deepEqual( Stem("aprólékosabb"), "aprólékosabb");});
test("aprólékossággal -> aprólékosság", function() {deepEqual( Stem("aprólékossággal"), "aprólékosság");});
test("aprópénz -> aprópénz", function() {deepEqual( Stem("aprópénz"), "aprópénz");});
test("aprópénznek -> aprópénz", function() {deepEqual( Stem("aprópénznek"), "aprópénz");});
test("aprópénzét -> aprópénz", function() {deepEqual( Stem("aprópénzét"), "aprópénz");});
test("apróság -> apróság", function() {deepEqual( Stem("apróság"), "apróság");});
test("apróságok -> apróság", function() {deepEqual( Stem("apróságok"), "apróság");});
test("apróságokkal -> apróság", function() {deepEqual( Stem("apróságokkal"), "apróság");});
test("apróságoknak -> apróság", function() {deepEqual( Stem("apróságoknak"), "apróság");});
test("apróságon -> apróság", function() {deepEqual( Stem("apróságon"), "apróság");});
test("apróságot -> apróság", function() {deepEqual( Stem("apróságot"), "apróság");});
test("apróságra -> apróság", function() {deepEqual( Stem("apróságra"), "apróság");});
test("apróságról -> apróság", function() {deepEqual( Stem("apróságról"), "apróság");});
test("apróságtól -> apróság", function() {deepEqual( Stem("apróságtól"), "apróság");});
test("apai -> ap", function() {deepEqual( Stem("apai"), "ap");});
test("apja -> ap", function() {deepEqual( Stem("apja"), "ap");});
test("apáról -> ap", function() {deepEqual( Stem("apáról"), "ap");});
test("apáékkal -> apáe", function() {deepEqual( Stem("apáékkal"), "apáe");});
test("apától -> ap", function() {deepEqual( Stem("apától"), "ap");});
test("apa -> ap", function() {deepEqual( Stem("apa"), "ap");});
test("apjuk -> ap", function() {deepEqual( Stem("apjuk"), "ap");});
test("apjukat -> ap", function() {deepEqual( Stem("apjukat"), "ap");});
test("apjukkal -> ap", function() {deepEqual( Stem("apjukkal"), "ap");});
test("apjuknak -> ap", function() {deepEqual( Stem("apjuknak"), "ap");});
test("apjukról -> ap", function() {deepEqual( Stem("apjukról"), "ap");});
test("apjában -> ap", function() {deepEqual( Stem("apjában"), "ap");});
test("apján -> ap", function() {deepEqual( Stem("apján"), "ap");});
test("apjának -> ap", function() {deepEqual( Stem("apjának"), "ap");});
test("apjára -> ap", function() {deepEqual( Stem("apjára"), "ap");});
test("apjáról -> ap", function() {deepEqual( Stem("apjáról"), "ap");});
test("apját -> ap", function() {deepEqual( Stem("apját"), "ap");});
test("apjától -> ap", function() {deepEqual( Stem("apjától"), "ap");});
test("apjával -> ap", function() {deepEqual( Stem("apjával"), "ap");});
test("apád -> apa", function() {deepEqual( Stem("apád"), "apa");});
test("apáddal -> apa", function() {deepEqual( Stem("apáddal"), "apa");});
test("apák -> apa", function() {deepEqual( Stem("apák"), "apa");});
test("apámat -> apa", function() {deepEqual( Stem("apámat"), "apa");});
test("apámmal -> apa", function() {deepEqual( Stem("apámmal"), "apa");});
test("apámra -> apa", function() {deepEqual( Stem("apámra"), "apa");});
test("apámtól -> apa", function() {deepEqual( Stem("apámtól"), "apa");});
test("apuci -> apuc", function() {deepEqual( Stem("apuci"), "apuc");});
test("apu -> apu", function() {deepEqual( Stem("apu"), "apu");});
test("apuból -> apu", function() {deepEqual( Stem("apuból"), "apu");});
test("apuhoz -> apu", function() {deepEqual( Stem("apuhoz"), "apu");});
test("apumék -> apume", function() {deepEqual( Stem("apumék"), "apume");});
test("apunak -> apu", function() {deepEqual( Stem("apunak"), "apu");});
test("aput -> apu", function() {deepEqual( Stem("aput"), "apu");});
test("aputól -> apu", function() {deepEqual( Stem("aputól"), "apu");});
test("apuval -> apu", function() {deepEqual( Stem("apuval"), "apu");});
test("apué -> apu", function() {deepEqual( Stem("apué"), "apu");});
test("apuék -> apue", function() {deepEqual( Stem("apuék"), "apue");});
test("apuékhoz -> apue", function() {deepEqual( Stem("apuékhoz"), "apue");});
test("apuka -> apu", function() {deepEqual( Stem("apuka"), "apu");});
test("apukája -> apuká", function() {deepEqual( Stem("apukája"), "apuká");});
test("apukájával -> apuká", function() {deepEqual( Stem("apukájával"), "apuká");});
test("apukám -> apuka", function() {deepEqual( Stem("apukám"), "apuka");});
test("apukámat -> apuka", function() {deepEqual( Stem("apukámat"), "apuka");});
test("apukámhoz -> apuka", function() {deepEqual( Stem("apukámhoz"), "apuka");});
test("apukámmal -> apuka", function() {deepEqual( Stem("apukámmal"), "apuka");});
test("apukámnak -> apuka", function() {deepEqual( Stem("apukámnak"), "apuka");});
test("apukát -> apu", function() {deepEqual( Stem("apukát"), "apu");});
test("apáca -> apác", function() {deepEqual( Stem("apáca"), "apác");});
test("apácák -> apáca", function() {deepEqual( Stem("apácák"), "apáca");});
test("apácának -> apác", function() {deepEqual( Stem("apácának"), "apác");});
test("apácává -> apác", function() {deepEqual( Stem("apácává"), "apác");});
test("apáik-anyáik -> apáik-anya", function() {deepEqual( Stem("apáik-anyáik"), "apáik-anya");});
test("apát -> ap", function() {deepEqual( Stem("apát"), "ap");});
test("apáti -> apát", function() {deepEqual( Stem("apáti"), "apát");});
test("apátiája -> apátiá", function() {deepEqual( Stem("apátiája"), "apátiá");});
test("apátnő -> apátnő", function() {deepEqual( Stem("apátnő"), "apátnő");});
test("apósa -> após", function() {deepEqual( Stem("apósa"), "após");});
test("apósomat -> após", function() {deepEqual( Stem("apósomat"), "após");});
test("apósoméknál -> apósome", function() {deepEqual( Stem("apósoméknál"), "apósome");});
test("aquincumi -> aquincum", function() {deepEqual( Stem("aquincumi"), "aquincum");});
test("ara -> ar", function() {deepEqual( Stem("ara"), "ar");});
test("arab -> arab", function() {deepEqual( Stem("arab"), "arab");});
test("arabok -> arab", function() {deepEqual( Stem("arabok"), "arab");});
test("arabokkal -> arab", function() {deepEqual( Stem("arabokkal"), "arab");});
test("arabszimpatizáns -> arabszimpatizáns", function() {deepEqual( Stem("arabszimpatizáns"), "arabszimpatizáns");});
test("aranciata -> aranciat", function() {deepEqual( Stem("aranciata"), "aranciat");});
test("aranciátás -> aranciátás", function() {deepEqual( Stem("aranciátás"), "aranciátás");});
test("arannyal -> arany", function() {deepEqual( Stem("arannyal"), "arany");});
test("arany -> arany", function() {deepEqual( Stem("arany"), "arany");});
test("aranyat -> arany", function() {deepEqual( Stem("aranyat"), "arany");});
test("aranyom -> arany", function() {deepEqual( Stem("aranyom"), "arany");});
test("aranyra -> arany", function() {deepEqual( Stem("aranyra"), "arany");});
test("aranyt -> arany", function() {deepEqual( Stem("aranyt"), "arany");});
test("aranyért -> arany", function() {deepEqual( Stem("aranyért"), "arany");});
test("aranyos -> aranyos", function() {deepEqual( Stem("aranyos"), "aranyos");});
test("aranyosabb -> aranyosabb", function() {deepEqual( Stem("aranyosabb"), "aranyosabb");});
test("aranyosak -> aranyos", function() {deepEqual( Stem("aranyosak"), "aranyos");});
test("aranyosan -> aranyos", function() {deepEqual( Stem("aranyosan"), "aranyos");});
test("aranyosnak -> aranyos", function() {deepEqual( Stem("aranyosnak"), "aranyos");});
test("arany-bíbor -> arany-bíbor", function() {deepEqual( Stem("arany-bíbor"), "arany-bíbor");});
test("aranybronzból -> aranybronz", function() {deepEqual( Stem("aranybronzból"), "aranybronz");});
test("aranybányánál -> aranybány", function() {deepEqual( Stem("aranybányánál"), "aranybány");});
test("aranyfája -> aranyfá", function() {deepEqual( Stem("aranyfája"), "aranyfá");});
test("aranyfényben -> aranyfény", function() {deepEqual( Stem("aranyfényben"), "aranyfény");});
test("aranyfényű -> aranyfényű", function() {deepEqual( Stem("aranyfényű"), "aranyfényű");});
test("aranygombos -> aranygombos", function() {deepEqual( Stem("aranygombos"), "aranygombos");});
test("aranyhalak -> aranyhal", function() {deepEqual( Stem("aranyhalak"), "aranyhal");});
test("aranyhalat -> aranyhal", function() {deepEqual( Stem("aranyhalat"), "aranyhal");});
test("aranykincs -> aranykincs", function() {deepEqual( Stem("aranykincs"), "aranykincs");});
test("aranykincset -> aranykincs", function() {deepEqual( Stem("aranykincset"), "aranykincs");});
test("aranyköpéseit -> aranyköpés", function() {deepEqual( Stem("aranyköpéseit"), "aranyköpés");});
test("aranykötél -> aranykötél", function() {deepEqual( Stem("aranykötél"), "aranykötél");});
test("aranylábú -> aranylábú", function() {deepEqual( Stem("aranylábú"), "aranylábú");});
test("aranyláz -> aranyláz", function() {deepEqual( Stem("aranyláz"), "aranyláz");});
test("aranylázból -> aranyláz", function() {deepEqual( Stem("aranylázból"), "aranyláz");});
test("aranyműves -> aranyműves", function() {deepEqual( Stem("aranyműves"), "aranyműves");});
test("aranyokker -> aranyokker", function() {deepEqual( Stem("aranyokker"), "aranyokker");});
test("aranyozva -> aranyozv", function() {deepEqual( Stem("aranyozva"), "aranyozv");});
test("aranyozású -> aranyozású", function() {deepEqual( Stem("aranyozású"), "aranyozású");});
test("aranyplakettet -> aranyplakett", function() {deepEqual( Stem("aranyplakettet"), "aranyplakett");});
test("aranyplakettjével -> aranyplakett", function() {deepEqual( Stem("aranyplakettjével"), "aranyplakett");});
test("aranyrészvénnyel -> aranyrészvény", function() {deepEqual( Stem("aranyrészvénnyel"), "aranyrészvény");});
test("aranyrészvény -> aranyrészvény", function() {deepEqual( Stem("aranyrészvény"), "aranyrészvény");});
test("aranyrészvényhez -> aranyrészvény", function() {deepEqual( Stem("aranyrészvényhez"), "aranyrészvény");});
test("aranyrészvénynek -> aranyrészvény", function() {deepEqual( Stem("aranyrészvénynek"), "aranyrészvény");});
test("aranyrészvénynél -> aranyrészvény", function() {deepEqual( Stem("aranyrészvénynél"), "aranyrészvény");});
test("aranyrészvényt -> aranyrészvény", function() {deepEqual( Stem("aranyrészvényt"), "aranyrészvény");});
test("aranyszerdájával -> aranyszerdá", function() {deepEqual( Stem("aranyszerdájával"), "aranyszerdá");});
test("aranyszín -> aranyszí", function() {deepEqual( Stem("aranyszín"), "aranyszí");});
test("aranytartalékod -> aranytartale", function() {deepEqual( Stem("aranytartalékod"), "aranytartale");});
test("aranytálból -> aranytál", function() {deepEqual( Stem("aranytálból"), "aranytál");});
test("aranytócsákba -> aranytócsa", function() {deepEqual( Stem("aranytócsákba"), "aranytócsa");});
test("aranyzöld -> aranyzöl", function() {deepEqual( Stem("aranyzöld"), "aranyzöl");});
test("aranyásók -> aranyásó", function() {deepEqual( Stem("aranyásók"), "aranyásó");});
test("aranyóra -> aranyó", function() {deepEqual( Stem("aranyóra"), "aranyó");});
test("aranyórádat -> aranyóra", function() {deepEqual( Stem("aranyórádat"), "aranyóra");});
test("aranyórája -> aranyórá", function() {deepEqual( Stem("aranyórája"), "aranyórá");});
test("aranyóráját -> aranyórá", function() {deepEqual( Stem("aranyóráját"), "aranyórá");});
test("aranyórám -> aranyóra", function() {deepEqual( Stem("aranyórám"), "aranyóra");});
test("aranyórámat -> aranyóra", function() {deepEqual( Stem("aranyórámat"), "aranyóra");});
test("aranyórát -> aranyór", function() {deepEqual( Stem("aranyórát"), "aranyór");});
test("arap -> arap", function() {deepEqual( Stem("arap"), "arap");});
test("arasznyira -> araszny", function() {deepEqual( Stem("arasznyira"), "araszny");});
test("araszolgatásnak -> araszolgatás", function() {deepEqual( Stem("araszolgatásnak"), "araszolgatás");});
test("araszolnak -> araszol", function() {deepEqual( Stem("araszolnak"), "araszol");});
test("araszoló -> araszoló", function() {deepEqual( Stem("araszoló"), "araszoló");});
test("arat -> ar", function() {deepEqual( Stem("arat"), "ar");});
test("aratja -> arat", function() {deepEqual( Stem("aratja"), "arat");});
test("aratni -> aratn", function() {deepEqual( Stem("aratni"), "aratn");});
test("aratott -> aratot", function() {deepEqual( Stem("aratott"), "aratot");});
test("aratta -> aratt", function() {deepEqual( Stem("aratta"), "aratt");});
test("arattak -> aratt", function() {deepEqual( Stem("arattak"), "aratt");});
test("aratva -> aratv", function() {deepEqual( Stem("aratva"), "aratv");});
test("aratási -> aratás", function() {deepEqual( Stem("aratási"), "aratás");});
test("aratómunkás -> aratómunkás", function() {deepEqual( Stem("aratómunkás"), "aratómunkás");});
test("arborétum -> arborétu", function() {deepEqual( Stem("arborétum"), "arborétu");});
test("arborétumot -> arborétu", function() {deepEqual( Stem("arborétumot"), "arborétu");});
test("arcbűnnek -> arcbűn", function() {deepEqual( Stem("arcbűnnek"), "arcbűn");});
test("arc -> arc", function() {deepEqual( Stem("arc"), "arc");});
test("arcuk -> arc", function() {deepEqual( Stem("arcuk"), "arc");});
test("arcukat -> arc", function() {deepEqual( Stem("arcukat"), "arc");});
test("arcukról -> arc", function() {deepEqual( Stem("arcukról"), "arc");});
test("arcukon -> arc", function() {deepEqual( Stem("arcukon"), "arc");});
test("arca -> arc", function() {deepEqual( Stem("arca"), "arc");});
test("arcba -> arc", function() {deepEqual( Stem("arcba"), "arc");});
test("arcból -> arc", function() {deepEqual( Stem("arcból"), "arc");});
test("arccal -> arc", function() {deepEqual( Stem("arccal"), "arc");});
test("arcnak -> arc", function() {deepEqual( Stem("arcnak"), "arc");});
test("arcod -> arc", function() {deepEqual( Stem("arcod"), "arc");});
test("arcodba -> arc", function() {deepEqual( Stem("arcodba"), "arc");});
test("arckifejezések -> arckifejezés", function() {deepEqual( Stem("arckifejezések"), "arckifejezés");});
test("arckifejezéssel -> arckifejezés", function() {deepEqual( Stem("arckifejezéssel"), "arckifejezés");});
test("arckifejezésében -> arckifejezés", function() {deepEqual( Stem("arckifejezésében"), "arckifejezés");});
test("arckifejezésére -> arckifejezés", function() {deepEqual( Stem("arckifejezésére"), "arckifejezés");});
test("arckifejezését -> arckifejezés", function() {deepEqual( Stem("arckifejezését"), "arckifejezés");});
test("arckifejezésüket -> arckifejezés", function() {deepEqual( Stem("arckifejezésüket"), "arckifejezés");});
test("arckép -> arckép", function() {deepEqual( Stem("arckép"), "arckép");});
test("arcképe -> arckép", function() {deepEqual( Stem("arcképe"), "arckép");});
test("arcképei -> arckép", function() {deepEqual( Stem("arcképei"), "arckép");});
test("arcképek -> arckép", function() {deepEqual( Stem("arcképek"), "arckép");});
test("arcképemet -> arckép", function() {deepEqual( Stem("arcképemet"), "arckép");});
test("arcképként -> arckép", function() {deepEqual( Stem("arcképként"), "arckép");});
test("arcképét -> arckép", function() {deepEqual( Stem("arcképét"), "arckép");});
test("arcmása -> arcmás", function() {deepEqual( Stem("arcmása"), "arcmás");});
test("arcpirítónak -> arcpirító", function() {deepEqual( Stem("arcpirítónak"), "arcpirító");});
test("arculatváltás -> arculatváltás", function() {deepEqual( Stem("arculatváltás"), "arculatváltás");});
test("arculat -> arcul", function() {deepEqual( Stem("arculat"), "arcul");});
test("arculatuk -> arculat", function() {deepEqual( Stem("arculatuk"), "arculat");});
test("arculatának -> arculat", function() {deepEqual( Stem("arculatának"), "arculat");});
test("arculatát -> arculat", function() {deepEqual( Stem("arculatát"), "arculat");});
test("arculatával -> arculat", function() {deepEqual( Stem("arculatával"), "arculat");});
test("arcvonása -> arcvonás", function() {deepEqual( Stem("arcvonása"), "arcvonás");});
test("arcvonásai -> arcvonás", function() {deepEqual( Stem("arcvonásai"), "arcvonás");});
test("arcvonásain -> arcvonás", function() {deepEqual( Stem("arcvonásain"), "arcvonás");});
test("arcvonásait -> arcvonás", function() {deepEqual( Stem("arcvonásait"), "arcvonás");});
test("arcvonások -> arcvonás", function() {deepEqual( Stem("arcvonások"), "arcvonás");});
test("arcátlan -> arcátl", function() {deepEqual( Stem("arcátlan"), "arcátl");});
test("arcüreggyulladással -> arcüreggyulladás", function() {deepEqual( Stem("arcüreggyulladással"), "arcüreggyulladás");});
test("area -> are", function() {deepEqual( Stem("area"), "are");});
test("argentin -> argent", function() {deepEqual( Stem("argentin"), "argent");});
test("argentínai -> argentín", function() {deepEqual( Stem("argentínai"), "argentín");});
test("arisztokraták -> arisztokrata", function() {deepEqual( Stem("arisztokraták"), "arisztokrata");});
test("arisztokratának -> arisztokrat", function() {deepEqual( Stem("arisztokratának"), "arisztokrat");});
test("arisztokrácia -> arisztokrác", function() {deepEqual( Stem("arisztokrácia"), "arisztokrác");});
test("arisztokráciák -> arisztokrácia", function() {deepEqual( Stem("arisztokráciák"), "arisztokrácia");});
test("arisztokráciafélét -> arisztokráciafél", function() {deepEqual( Stem("arisztokráciafélét"), "arisztokráciafél");});
test("arisztoteliánus -> arisztoteliánus", function() {deepEqual( Stem("arisztoteliánus"), "arisztoteliánus");});
test("arkangyal -> arkangyal", function() {deepEqual( Stem("arkangyal"), "arkangyal");});
test("armada -> armad", function() {deepEqual( Stem("armada"), "armad");});
test("arra -> ar", function() {deepEqual( Stem("arra"), "ar");});
test("arrafelé -> arrafel", function() {deepEqual( Stem("arrafelé"), "arrafel");});
test("arranzsáltam -> arranzsált", function() {deepEqual( Stem("arranzsáltam"), "arranzsált");});
test("arroganciával -> arroganc", function() {deepEqual( Stem("arroganciával"), "arroganc");});
test("arrább -> arrább", function() {deepEqual( Stem("arrább"), "arrább");});
test("arrébb -> arrébb", function() {deepEqual( Stem("arrébb"), "arrébb");});
test("arról -> ar", function() {deepEqual( Stem("arról"), "ar");});
test("ars -> ars", function() {deepEqual( Stem("ars"), "ars");});
test("art -> ar", function() {deepEqual( Stem("art"), "ar");});
test("artistaművészek -> artistaművész", function() {deepEqual( Stem("artistaművészek"), "artistaművész");});
test("artisztikus -> artisztikus", function() {deepEqual( Stem("artisztikus"), "artisztikus");});
test("artériadarabot -> artériadarab", function() {deepEqual( Stem("artériadarabot"), "artériadarab");});
test("artériát -> artér", function() {deepEqual( Stem("artériát"), "artér");});
test("arzénvegyületek -> arzénvegyület", function() {deepEqual( Stem("arzénvegyületek"), "arzénvegyület");});
test("aránnyal -> arány", function() {deepEqual( Stem("aránnyal"), "arány");});
test("arányú -> arányú", function() {deepEqual( Stem("arányú"), "arányú");});
test("arányától -> arány", function() {deepEqual( Stem("arányától"), "arány");});
test("arányát -> arány", function() {deepEqual( Stem("arányát"), "arány");});
test("arányáról -> arány", function() {deepEqual( Stem("arányáról"), "arány");});
test("arányára -> arány", function() {deepEqual( Stem("arányára"), "arány");});
test("arányának -> arány", function() {deepEqual( Stem("arányának"), "arány");});
test("arányán -> arány", function() {deepEqual( Stem("arányán"), "arány");});
test("arányához -> arány", function() {deepEqual( Stem("arányához"), "arány");});
test("arányában -> arány", function() {deepEqual( Stem("arányában"), "arány");});
test("aránytól -> arány", function() {deepEqual( Stem("aránytól"), "arány");});
test("arányt -> arány", function() {deepEqual( Stem("arányt"), "arány");});
test("arány -> arány", function() {deepEqual( Stem("arány"), "arány");});
test("aránya -> arány", function() {deepEqual( Stem("aránya"), "arány");});
test("arányaikban -> arány", function() {deepEqual( Stem("arányaikban"), "arány");});
test("arányainak -> arány", function() {deepEqual( Stem("arányainak"), "arány");});
test("arányait -> arány", function() {deepEqual( Stem("arányait"), "arány");});
test("arányban -> arány", function() {deepEqual( Stem("arányban"), "arány");});
test("arányhoz -> arány", function() {deepEqual( Stem("arányhoz"), "arány");});
test("aránylag -> aránylag", function() {deepEqual( Stem("aránylag"), "aránylag");});
test("aránynak -> arány", function() {deepEqual( Stem("aránynak"), "arány");});
test("aránynál -> arány", function() {deepEqual( Stem("aránynál"), "arány");});
test("arányok -> arány", function() {deepEqual( Stem("arányok"), "arány");});
test("arányokat -> arány", function() {deepEqual( Stem("arányokat"), "arány");});
test("arányokkal -> arány", function() {deepEqual( Stem("arányokkal"), "arány");});
test("arányoknak -> arány", function() {deepEqual( Stem("arányoknak"), "arány");});
test("arányokról -> arány", function() {deepEqual( Stem("arányokról"), "arány");});
test("arányos -> arányos", function() {deepEqual( Stem("arányos"), "arányos");});
test("arányosan -> arányos", function() {deepEqual( Stem("arányosan"), "arányos");});
test("asszimilálnia -> asszimiláln", function() {deepEqual( Stem("asszimilálnia"), "asszimiláln");});
test("asszimilálták -> asszimilálta", function() {deepEqual( Stem("asszimilálták"), "asszimilálta");});
test("asszimilálódott -> asszimilálódot", function() {deepEqual( Stem("asszimilálódott"), "asszimilálódot");});
test("asszisztens -> asszisztens", function() {deepEqual( Stem("asszisztens"), "asszisztens");});
test("asszisztáljak -> asszisztálj", function() {deepEqual( Stem("asszisztáljak"), "asszisztálj");});
test("asszisztálnak -> asszisztál", function() {deepEqual( Stem("asszisztálnak"), "asszisztál");});
test("asszociáció -> asszociáció", function() {deepEqual( Stem("asszociáció"), "asszociáció");});
test("asszociációk -> asszociáció", function() {deepEqual( Stem("asszociációk"), "asszociáció");});
test("asszociációkat -> asszociáció", function() {deepEqual( Stem("asszociációkat"), "asszociáció");});
test("asszociálni -> asszociáln", function() {deepEqual( Stem("asszociálni"), "asszociáln");});
test("asszonyi -> asszony", function() {deepEqual( Stem("asszonyi"), "asszony");});
test("asszony-nővérétől -> asszony-nővér", function() {deepEqual( Stem("asszony-nővérétől"), "asszony-nővér");});
test("asszonykirályt -> asszonykirály", function() {deepEqual( Stem("asszonykirályt"), "asszonykirály");});
test("asszonnyal -> asszony", function() {deepEqual( Stem("asszonnyal"), "asszony");});
test("asszony -> asszony", function() {deepEqual( Stem("asszony"), "asszony");});
test("asszonyává -> asszony", function() {deepEqual( Stem("asszonyává"), "asszony");});
test("asszonya -> asszony", function() {deepEqual( Stem("asszonya"), "asszony");});
test("asszonyairól -> asszony", function() {deepEqual( Stem("asszonyairól"), "asszony");});
test("asszonyban -> asszony", function() {deepEqual( Stem("asszonyban"), "asszony");});
test("asszonynak -> asszony", function() {deepEqual( Stem("asszonynak"), "asszony");});
test("asszonyok -> asszony", function() {deepEqual( Stem("asszonyok"), "asszony");});
test("asszonyokat -> asszony", function() {deepEqual( Stem("asszonyokat"), "asszony");});
test("asszonyokkal -> asszony", function() {deepEqual( Stem("asszonyokkal"), "asszony");});
test("asszonyoknak -> asszony", function() {deepEqual( Stem("asszonyoknak"), "asszony");});
test("asszonyom -> asszony", function() {deepEqual( Stem("asszonyom"), "asszony");});
test("asszonyra -> asszony", function() {deepEqual( Stem("asszonyra"), "asszony");});
test("asszonyt -> asszony", function() {deepEqual( Stem("asszonyt"), "asszony");});
test("asszonytól -> asszony", function() {deepEqual( Stem("asszonytól"), "asszony");});
test("asszonyának -> asszony", function() {deepEqual( Stem("asszonyának"), "asszony");});
test("asszonysereget -> asszonysereg", function() {deepEqual( Stem("asszonysereget"), "asszonysereg");});
test("asszonyság -> asszonyság", function() {deepEqual( Stem("asszonyság"), "asszonyság");});
test("aszalással -> aszalás", function() {deepEqual( Stem("aszalással"), "aszalás");});
test("aszerint -> aszerin", function() {deepEqual( Stem("aszerint"), "aszerin");});
test("aszfalt -> aszfal", function() {deepEqual( Stem("aszfalt"), "aszfal");});
test("aszfalton -> aszfalt", function() {deepEqual( Stem("aszfalton"), "aszfalt");});
test("aszimmetrikus -> aszimmetrikus", function() {deepEqual( Stem("aszimmetrikus"), "aszimmetrikus");});
test("aszimmetriája -> aszimmetriá", function() {deepEqual( Stem("aszimmetriája"), "aszimmetriá");});
test("aszketikus -> aszketikus", function() {deepEqual( Stem("aszketikus"), "aszketikus");});
test("aszkéták -> aszkéta", function() {deepEqual( Stem("aszkéták"), "aszkéta");});
test("aszkézis -> aszkézis", function() {deepEqual( Stem("aszkézis"), "aszkézis");});
test("aszok -> asz", function() {deepEqual( Stem("aszok"), "asz");});
test("asz -> asz", function() {deepEqual( Stem("asz"), "asz");});
test("aszon -> asz", function() {deepEqual( Stem("aszon"), "asz");});
test("aszonban -> aszon", function() {deepEqual( Stem("aszonban"), "aszon");});
test("aszonyt -> aszony", function() {deepEqual( Stem("aszonyt"), "aszony");});
test("asztaladót -> asztaladó", function() {deepEqual( Stem("asztaladót"), "asztaladó");});
test("asztalfiókból -> asztalfió", function() {deepEqual( Stem("asztalfiókból"), "asztalfió");});
test("asztalfőn -> asztalfő", function() {deepEqual( Stem("asztalfőn"), "asztalfő");});
test("asztal -> asztal", function() {deepEqual( Stem("asztal"), "asztal");});
test("asztala -> asztal", function() {deepEqual( Stem("asztala"), "asztal");});
test("asztalai -> asztal", function() {deepEqual( Stem("asztalai"), "asztal");});
test("asztalhoz -> asztal", function() {deepEqual( Stem("asztalhoz"), "asztal");});
test("asztalig -> asztal", function() {deepEqual( Stem("asztalig"), "asztal");});
test("asztallal -> asztal", function() {deepEqual( Stem("asztallal"), "asztal");});
test("asztalnál -> asztal", function() {deepEqual( Stem("asztalnál"), "asztal");});
test("asztalon -> asztal", function() {deepEqual( Stem("asztalon"), "asztal");});
test("asztalomon -> asztal", function() {deepEqual( Stem("asztalomon"), "asztal");});
test("asztalokon -> asztal", function() {deepEqual( Stem("asztalokon"), "asztal");});
test("asztaloknál -> asztal", function() {deepEqual( Stem("asztaloknál"), "asztal");});
test("asztalok -> asztal", function() {deepEqual( Stem("asztalok"), "asztal");});
test("asztalokat -> asztal", function() {deepEqual( Stem("asztalokat"), "asztal");});
test("asztalra -> asztal", function() {deepEqual( Stem("asztalra"), "asztal");});
test("asztalt -> asztal", function() {deepEqual( Stem("asztalt"), "asztal");});
test("asztalról -> asztal", function() {deepEqual( Stem("asztalról"), "asztal");});
test("asztaltól -> asztal", function() {deepEqual( Stem("asztaltól"), "asztal");});
test("asztaluk -> asztal", function() {deepEqual( Stem("asztaluk"), "asztal");});
test("asztalukhoz -> asztal", function() {deepEqual( Stem("asztalukhoz"), "asztal");});
test("asztalukon -> asztal", function() {deepEqual( Stem("asztalukon"), "asztal");});
test("asztalunk -> asztal", function() {deepEqual( Stem("asztalunk"), "asztal");});
test("asztalunknál -> asztal", function() {deepEqual( Stem("asztalunknál"), "asztal");});
test("asztalához -> asztal", function() {deepEqual( Stem("asztalához"), "asztal");});
test("asztalán -> asztal", function() {deepEqual( Stem("asztalán"), "asztal");});
test("asztalánál -> asztal", function() {deepEqual( Stem("asztalánál"), "asztal");});
test("asztalára -> asztal", function() {deepEqual( Stem("asztalára"), "asztal");});
test("asztalát -> asztal", function() {deepEqual( Stem("asztalát"), "asztal");});
test("asztali -> asztal", function() {deepEqual( Stem("asztali"), "asztal");});
test("asztali-teniszversenyen -> asztali-teniszverseny", function() {deepEqual( Stem("asztali-teniszversenyen"), "asztali-teniszverseny");});
test("asztaligép-alkalmazások -> asztaligép-alkalmazás", function() {deepEqual( Stem("asztaligép-alkalmazások"), "asztaligép-alkalmazás");});
test("asztaliteniszben -> asztalitenisz", function() {deepEqual( Stem("asztaliteniszben"), "asztalitenisz");});
test("asztaliteniszt -> asztalitenisz", function() {deepEqual( Stem("asztaliteniszt"), "asztalitenisz");});
test("asztaliteniszezett -> asztaliteniszezet", function() {deepEqual( Stem("asztaliteniszezett"), "asztaliteniszezet");});
test("asztalkendővel -> asztalkendő", function() {deepEqual( Stem("asztalkendővel"), "asztalkendő");});
test("asztalka -> asztal", function() {deepEqual( Stem("asztalka"), "asztal");});
test("asztalkához -> asztal", function() {deepEqual( Stem("asztalkához"), "asztal");});
test("asztalkán -> asztal", function() {deepEqual( Stem("asztalkán"), "asztal");});
test("asztallapokra -> asztallap", function() {deepEqual( Stem("asztallapokra"), "asztallap");});
test("asztalos -> asztalos", function() {deepEqual( Stem("asztalos"), "asztalos");});
test("asztalosnak -> asztalos", function() {deepEqual( Stem("asztalosnak"), "asztalos");});
test("asztalosmester -> asztalosmester", function() {deepEqual( Stem("asztalosmester"), "asztalosmester");});
test("asztalterítőt -> asztalterítő", function() {deepEqual( Stem("asztalterítőt"), "asztalterítő");});
test("asztaltársaimmal -> asztaltárs", function() {deepEqual( Stem("asztaltársaimmal"), "asztaltárs");});
test("asztgondolám -> asztgondola", function() {deepEqual( Stem("asztgondolám"), "asztgondola");});
test("asztmás -> asztmás", function() {deepEqual( Stem("asztmás"), "asztmás");});
test("asztrofizikus -> asztrofizikus", function() {deepEqual( Stem("asztrofizikus"), "asztrofizikus");});
test("asztrofizikusa -> asztrofizikus", function() {deepEqual( Stem("asztrofizikusa"), "asztrofizikus");});
test("asztrológia -> asztrológ", function() {deepEqual( Stem("asztrológia"), "asztrológ");});
test("asztrológusok -> asztrológus", function() {deepEqual( Stem("asztrológusok"), "asztrológus");});
test("aszály -> aszály", function() {deepEqual( Stem("aszály"), "aszály");});
test("aszályról -> aszály", function() {deepEqual( Stem("aszályról"), "aszály");});
test("aszódi -> aszód", function() {deepEqual( Stem("aszódi"), "aszód");});
test("aszódon -> aszó", function() {deepEqual( Stem("aszódon"), "aszó");});
test("ataséf -> ataséf", function() {deepEqual( Stem("ataséf"), "ataséf");});
test("athéni -> athén", function() {deepEqual( Stem("athéni"), "athén");});
test("atlanti -> atlant", function() {deepEqual( Stem("atlanti"), "atlant");});
test("atletikus -> atletikus", function() {deepEqual( Stem("atletikus"), "atletikus");});
test("atlétikázni -> atlétikázn", function() {deepEqual( Stem("atlétikázni"), "atlétikázn");});
test("atmoszféra -> atmoszf", function() {deepEqual( Stem("atmoszféra"), "atmoszf");});
test("atmoszférája -> atmoszférá", function() {deepEqual( Stem("atmoszférája"), "atmoszférá");});
test("atmoszférájába -> atmoszférá", function() {deepEqual( Stem("atmoszférájába"), "atmoszférá");});
test("atmoszférájával -> atmoszférá", function() {deepEqual( Stem("atmoszférájával"), "atmoszférá");});
test("atmoszférájú -> atmoszférájú", function() {deepEqual( Stem("atmoszférájú"), "atmoszférájú");});
test("atmoszférán -> atmoszfér", function() {deepEqual( Stem("atmoszférán"), "atmoszfér");});
test("atmoszférát -> atmoszfér", function() {deepEqual( Stem("atmoszférát"), "atmoszfér");});
test("atom-tengeralattjáró -> atom-tengeralattjáró", function() {deepEqual( Stem("atom-tengeralattjáró"), "atom-tengeralattjáró");});
test("atombomba -> atomb", function() {deepEqual( Stem("atombomba"), "atomb");});
test("atombombák -> atombomba", function() {deepEqual( Stem("atombombák"), "atombomba");});
test("atombombákkal -> atombomba", function() {deepEqual( Stem("atombombákkal"), "atombomba");});
test("atomcsapás-mérő -> atomcsapás-mérő", function() {deepEqual( Stem("atomcsapás-mérő"), "atomcsapás-mérő");});
test("atomerőmű -> atomerőmű", function() {deepEqual( Stem("atomerőmű"), "atomerőmű");});
test("atomháborújának -> atomháború", function() {deepEqual( Stem("atomháborújának"), "atomháború");});
test("atomi -> atom", function() {deepEqual( Stem("atomi"), "atom");});
test("atomjaira -> atom", function() {deepEqual( Stem("atomjaira"), "atom");});
test("atomkorban -> atomkor", function() {deepEqual( Stem("atomkorban"), "atomkor");});
test("atomtechnika -> atomtechn", function() {deepEqual( Stem("atomtechnika"), "atomtechn");});
test("atomtechnikai -> atomtechni", function() {deepEqual( Stem("atomtechnikai"), "atomtechni");});
test("atomtudós -> atomtudós", function() {deepEqual( Stem("atomtudós"), "atomtudós");});
test("atrocitás -> atrocitás", function() {deepEqual( Stem("atrocitás"), "atrocitás");});
test("atrocitásairól -> atrocitás", function() {deepEqual( Stem("atrocitásairól"), "atrocitás");});
test("atrocitások -> atrocitás", function() {deepEqual( Stem("atrocitások"), "atrocitás");});
test("atta -> att", function() {deepEqual( Stem("atta"), "att");});
test("attam -> att", function() {deepEqual( Stem("attam"), "att");});
test("attasé -> attas", function() {deepEqual( Stem("attasé"), "attas");});
test("attaséja -> attasé", function() {deepEqual( Stem("attaséja"), "attasé");});
test("babaháznak -> babaház", function() {deepEqual( Stem("babaháznak"), "babaház");});
test("babakocsi -> babakocs", function() {deepEqual( Stem("babakocsi"), "babakocs");});
test("babakocsijáért -> babakocs", function() {deepEqual( Stem("babakocsijáért"), "babakocs");});
test("babakocsit -> babakocs", function() {deepEqual( Stem("babakocsit"), "babakocs");});
test("babakocsiért -> babakocs", function() {deepEqual( Stem("babakocsiért"), "babakocs");});
test("babból -> bab", function() {deepEqual( Stem("babból"), "bab");});
test("bab -> bab", function() {deepEqual( Stem("bab"), "bab");});
test("babgulyás -> babgulyás", function() {deepEqual( Stem("babgulyás"), "babgulyás");});
test("babgulyást -> babgulyás", function() {deepEqual( Stem("babgulyást"), "babgulyás");});
test("babona -> babon", function() {deepEqual( Stem("babona"), "babon");});
test("babonákkal -> babona", function() {deepEqual( Stem("babonákkal"), "babona");});
test("babonás -> babonás", function() {deepEqual( Stem("babonás"), "babonás");});
test("babrálgatta -> babrálgatt", function() {deepEqual( Stem("babrálgatta"), "babrálgatt");});
test("babrálni -> babráln", function() {deepEqual( Stem("babrálni"), "babráln");});
test("babrál -> babrál", function() {deepEqual( Stem("babrál"), "babrál");});
test("babrált -> babrál", function() {deepEqual( Stem("babrált"), "babrál");});
test("babrálva -> babrálv", function() {deepEqual( Stem("babrálva"), "babrálv");});
test("babusgatnak -> babusgat", function() {deepEqual( Stem("babusgatnak"), "babusgat");});
test("baba -> ba", function() {deepEqual( Stem("baba"), "ba");});
test("babái -> baba", function() {deepEqual( Stem("babái"), "baba");});
test("babák -> baba", function() {deepEqual( Stem("babák"), "baba");});
test("babákkal -> baba", function() {deepEqual( Stem("babákkal"), "baba");});
test("babázni -> babázn", function() {deepEqual( Stem("babázni"), "babázn");});
test("babérfa -> babérf", function() {deepEqual( Stem("babérfa"), "babérf");});
test("babérokat -> babér", function() {deepEqual( Stem("babérokat"), "babér");});
test("babért -> bab", function() {deepEqual( Stem("babért"), "bab");});
test("bacchánsnők -> bacchánsnő", function() {deepEqual( Stem("bacchánsnők"), "bacchánsnő");});
test("badacsonyi -> badacsony", function() {deepEqual( Stem("badacsonyi"), "badacsony");});
test("badarság -> badarság", function() {deepEqual( Stem("badarság"), "badarság");});
test("badarságok -> badarság", function() {deepEqual( Stem("badarságok"), "badarság");});
test("baedeker -> baedeker", function() {deepEqual( Stem("baedeker"), "baedeker");});
test("baglyokat -> bagly", function() {deepEqual( Stem("baglyokat"), "bagly");});
test("bagolyszemüveges -> bagolyszemüveges", function() {deepEqual( Stem("bagolyszemüveges"), "bagolyszemüveges");});
test("bagót -> bagó", function() {deepEqual( Stem("bagót"), "bagó");});
test("bajbajutott -> bajbajutot", function() {deepEqual( Stem("bajbajutott"), "bajbajutot");});
test("bajbajutottak -> bajbajutott", function() {deepEqual( Stem("bajbajutottak"), "bajbajutott");});
test("bajbajutottakat -> bajbajutott", function() {deepEqual( Stem("bajbajutottakat"), "bajbajutott");});
test("bajbajutottakon -> bajbajutott", function() {deepEqual( Stem("bajbajutottakon"), "bajbajutott");});
test("bajlódjanak -> bajlód", function() {deepEqual( Stem("bajlódjanak"), "bajlód");});
test("bajlódni -> bajlódn", function() {deepEqual( Stem("bajlódni"), "bajlódn");});
test("bajlódnom -> bajlódn", function() {deepEqual( Stem("bajlódnom"), "bajlódn");});
test("bajlódott -> bajlódot", function() {deepEqual( Stem("bajlódott"), "bajlódot");});
test("bajlódtam -> bajlódt", function() {deepEqual( Stem("bajlódtam"), "bajlódt");});
test("bajlódás -> bajlódás", function() {deepEqual( Stem("bajlódás"), "bajlódás");});
test("bajmentesebb -> bajmentesebb", function() {deepEqual( Stem("bajmentesebb"), "bajmentesebb");});
test("bajnoki -> bajn", function() {deepEqual( Stem("bajnoki"), "bajn");});
test("bajnokin -> bajn", function() {deepEqual( Stem("bajnokin"), "bajn");});
test("bajnokok -> bajnok", function() {deepEqual( Stem("bajnokok"), "bajnok");});
test("bajnokokhoz -> bajnok", function() {deepEqual( Stem("bajnokokhoz"), "bajnok");});
test("bajnok -> bajn", function() {deepEqual( Stem("bajnok"), "bajn");});
test("bajnokság -> bajnokság", function() {deepEqual( Stem("bajnokság"), "bajnokság");});
test("bajnokságban -> bajnokság", function() {deepEqual( Stem("bajnokságban"), "bajnokság");});
test("bajnokságokon -> bajnokság", function() {deepEqual( Stem("bajnokságokon"), "bajnokság");});
test("bajnokságon -> bajnokság", function() {deepEqual( Stem("bajnokságon"), "bajnokság");});
test("bajnokságot -> bajnokság", function() {deepEqual( Stem("bajnokságot"), "bajnokság");});
test("bajnokságra -> bajnokság", function() {deepEqual( Stem("bajnokságra"), "bajnokság");});
test("bajnokságában -> bajnokság", function() {deepEqual( Stem("bajnokságában"), "bajnokság");});
test("bajnokságát -> bajnokság", function() {deepEqual( Stem("bajnokságát"), "bajnokság");});
test("bajod -> baj", function() {deepEqual( Stem("bajod"), "baj");});
test("baj -> baj", function() {deepEqual( Stem("baj"), "baj");});
test("baját -> ba", function() {deepEqual( Stem("baját"), "ba");});
test("baja -> ba", function() {deepEqual( Stem("baja"), "ba");});
test("bajai -> ba", function() {deepEqual( Stem("bajai"), "ba");});
test("bajaimat -> ba", function() {deepEqual( Stem("bajaimat"), "ba");});
test("bajait -> ba", function() {deepEqual( Stem("bajait"), "ba");});
test("bajait -> ba", function() {deepEqual( Stem("bajait"), "ba");});
test("bajba -> baj", function() {deepEqual( Stem("bajba"), "baj");});
test("bajban -> baj", function() {deepEqual( Stem("bajban"), "baj");});
test("bajjal -> baj", function() {deepEqual( Stem("bajjal"), "baj");});
test("bajok -> baj", function() {deepEqual( Stem("bajok"), "baj");});
test("bajokat -> baj", function() {deepEqual( Stem("bajokat"), "baj");});
test("bajokra -> baj", function() {deepEqual( Stem("bajokra"), "baj");});
test("bajom -> baj", function() {deepEqual( Stem("bajom"), "baj");});
test("bajon -> baj", function() {deepEqual( Stem("bajon"), "baj");});
test("bajt -> baj", function() {deepEqual( Stem("bajt"), "baj");});
test("bajtól -> baj", function() {deepEqual( Stem("bajtól"), "baj");});
test("bajuk -> ba", function() {deepEqual( Stem("bajuk"), "ba");});
test("bajukon -> ba", function() {deepEqual( Stem("bajukon"), "ba");});
test("bajunk -> baj", function() {deepEqual( Stem("bajunk"), "baj");});
test("bajunkat -> baj", function() {deepEqual( Stem("bajunkat"), "baj");});
test("baján -> ba", function() {deepEqual( Stem("baján"), "ba");});
test("bajáról -> ba", function() {deepEqual( Stem("bajáról"), "ba");});
test("bajorok -> bajor", function() {deepEqual( Stem("bajorok"), "bajor");});
test("bajos -> bajos", function() {deepEqual( Stem("bajos"), "bajos");});
test("bajosan -> bajos", function() {deepEqual( Stem("bajosan"), "bajos");});
test("bajszú -> bajszú", function() {deepEqual( Stem("bajszú"), "bajszú");});
test("bajtársaik -> bajtárs", function() {deepEqual( Stem("bajtársaik"), "bajtárs");});
test("bajtársat -> bajtárs", function() {deepEqual( Stem("bajtársat"), "bajtárs");});
test("bajtársiasságban -> bajtársiasság", function() {deepEqual( Stem("bajtársiasságban"), "bajtársiasság");});
test("bajusszal -> bajusz", function() {deepEqual( Stem("bajusszal"), "bajusz");});
test("bajusz -> bajusz", function() {deepEqual( Stem("bajusz"), "bajusz");});
test("bajuszos -> bajuszos", function() {deepEqual( Stem("bajuszos"), "bajuszos");});
test("bajuszát -> bajusz", function() {deepEqual( Stem("bajuszát"), "bajusz");});
test("bajuszával -> bajusz", function() {deepEqual( Stem("bajuszával"), "bajusz");});
test("bakancsunk -> bakancs", function() {deepEqual( Stem("bakancsunk"), "bakancs");});
test("bakfisnak -> bakfis", function() {deepEqual( Stem("bakfisnak"), "bakfis");});
test("baki -> bak", function() {deepEqual( Stem("baki"), "bak");});
test("baktató -> baktató", function() {deepEqual( Stem("baktató"), "baktató");});
test("bakteriológiai -> bakteriológi", function() {deepEqual( Stem("bakteriológiai"), "bakteriológi");});
test("bakteriológus -> bakteriológus", function() {deepEqual( Stem("bakteriológus"), "bakteriológus");});
test("bakteriális -> bakteriális", function() {deepEqual( Stem("bakteriális"), "bakteriális");});
test("baktérium -> baktériu", function() {deepEqual( Stem("baktérium"), "baktériu");});
test("baktériumok -> baktérium", function() {deepEqual( Stem("baktériumok"), "baktérium");});
test("baktériumokat -> baktérium", function() {deepEqual( Stem("baktériumokat"), "baktérium");});
test("baktériumát -> baktérium", function() {deepEqual( Stem("baktériumát"), "baktérium");});
test("baktériumvadászának -> baktériumvadász", function() {deepEqual( Stem("baktériumvadászának"), "baktériumvadász");});
test("baktériumölő -> baktériumölő", function() {deepEqual( Stem("baktériumölő"), "baktériumölő");});
test("bal-jobb -> bal-jobb", function() {deepEqual( Stem("bal-jobb"), "bal-jobb");});
test("balancing -> balancing", function() {deepEqual( Stem("balancing"), "balancing");});
test("balassagyarmati -> balassagyarmat", function() {deepEqual( Stem("balassagyarmati"), "balassagyarmat");});
test("balatonaligai -> balatonalig", function() {deepEqual( Stem("balatonaligai"), "balatonalig");});
test("balatonföldvári -> balatonföldvár", function() {deepEqual( Stem("balatonföldvári"), "balatonföldvár");});
test("balatonfüredi -> balatonfüred", function() {deepEqual( Stem("balatonfüredi"), "balatonfüred");});
test("balatoni -> balaton", function() {deepEqual( Stem("balatoni"), "balaton");});
test("balegyenessel -> balegyenes", function() {deepEqual( Stem("balegyenessel"), "balegyenes");});
test("baleset -> bales", function() {deepEqual( Stem("baleset"), "bales");});
test("balesetben -> baleset", function() {deepEqual( Stem("balesetben"), "baleset");});
test("balesete -> baleset", function() {deepEqual( Stem("balesete"), "baleset");});
test("balesetek -> baleset", function() {deepEqual( Stem("balesetek"), "baleset");});
test("balesetekben -> baleset", function() {deepEqual( Stem("balesetekben"), "baleset");});
test("balesetekkel -> baleset", function() {deepEqual( Stem("balesetekkel"), "baleset");});
test("balesetemet -> baleset", function() {deepEqual( Stem("balesetemet"), "baleset");});
test("balesetet -> baleset", function() {deepEqual( Stem("balesetet"), "baleset");});
test("balesetről -> baleset", function() {deepEqual( Stem("balesetről"), "baleset");});
test("balesetnek -> baleset", function() {deepEqual( Stem("balesetnek"), "baleset");});
test("balesetire -> baleset", function() {deepEqual( Stem("balesetire"), "baleset");});
test("baleseti -> baleset", function() {deepEqual( Stem("baleseti"), "baleset");});
test("balesetin -> baleset", function() {deepEqual( Stem("balesetin"), "baleset");});
test("balettet -> balett", function() {deepEqual( Stem("balettet"), "balett");});
test("balettművésze -> balettművész", function() {deepEqual( Stem("balettművésze"), "balettművész");});
test("balettversenyen -> balettverseny", function() {deepEqual( Stem("balettversenyen"), "balettverseny");});
test("balettzenét -> balettzen", function() {deepEqual( Stem("balettzenét"), "balettzen");});
test("balgaság -> balgaság", function() {deepEqual( Stem("balgaság"), "balgaság");});
test("balhé -> balh", function() {deepEqual( Stem("balhé"), "balh");});
test("balhés -> balhés", function() {deepEqual( Stem("balhés"), "balhés");});
test("baljós -> baljós", function() {deepEqual( Stem("baljós"), "baljós");});
test("baljóslatú -> baljóslatú", function() {deepEqual( Stem("baljóslatú"), "baljóslatú");});
test("balkezes -> balkezes", function() {deepEqual( Stem("balkezes"), "balkezes");});
test("balkezestől -> balkezes", function() {deepEqual( Stem("balkezestől"), "balkezes");});
test("balkáni -> balkán", function() {deepEqual( Stem("balkáni"), "balkán");});
test("balkárok -> balkár", function() {deepEqual( Stem("balkárok"), "balkár");});
test("balkézről -> balkéz", function() {deepEqual( Stem("balkézről"), "balkéz");});
test("balladáit -> ballada", function() {deepEqual( Stem("balladáit"), "ballada");});
test("balladájából -> balladá", function() {deepEqual( Stem("balladájából"), "balladá");});
test("ballag -> ballag", function() {deepEqual( Stem("ballag"), "ballag");});
test("ballagnak -> ballag", function() {deepEqual( Stem("ballagnak"), "ballag");});
test("ballagott -> ballagot", function() {deepEqual( Stem("ballagott"), "ballagot");});
test("ballagtak -> ballagt", function() {deepEqual( Stem("ballagtak"), "ballagt");});
test("ballagtunk -> ballagt", function() {deepEqual( Stem("ballagtunk"), "ballagt");});
test("ballagunk -> ballag", function() {deepEqual( Stem("ballagunk"), "ballag");});
test("ballagás -> ballagás", function() {deepEqual( Stem("ballagás"), "ballagás");});
test("ballagási -> ballagás", function() {deepEqual( Stem("ballagási"), "ballagás");});
test("ballagásom -> ballagás", function() {deepEqual( Stem("ballagásom"), "ballagás");});
test("ballagására -> ballagás", function() {deepEqual( Stem("ballagására"), "ballagás");});
test("ballagó -> ballagó", function() {deepEqual( Stem("ballagó"), "ballagó");});
test("ballagókat -> ballagó", function() {deepEqual( Stem("ballagókat"), "ballagó");});
test("ballagót -> ballagó", function() {deepEqual( Stem("ballagót"), "ballagó");});
test("ballisztikai -> balliszti", function() {deepEqual( Stem("ballisztikai"), "balliszti");});
test("ballábasának -> ballábas", function() {deepEqual( Stem("ballábasának"), "ballábas");});
test("ballábbal -> balláb", function() {deepEqual( Stem("ballábbal"), "balláb");});
test("baloldali -> baloldal", function() {deepEqual( Stem("baloldali"), "baloldal");});
test("baloldalon -> baloldal", function() {deepEqual( Stem("baloldalon"), "baloldal");});
test("baloldalról -> baloldal", function() {deepEqual( Stem("baloldalról"), "baloldal");});
test("baloldalt -> baloldal", function() {deepEqual( Stem("baloldalt"), "baloldal");});
test("balos -> balos", function() {deepEqual( Stem("balos"), "balos");});
test("balparton -> balpart", function() {deepEqual( Stem("balparton"), "balpart");});
test("balra -> bal", function() {deepEqual( Stem("balra"), "bal");});
test("bal -> bal", function() {deepEqual( Stem("bal"), "bal");});
test("balról -> bal", function() {deepEqual( Stem("balról"), "bal");});
test("balja -> bal", function() {deepEqual( Stem("balja"), "bal");});
test("balsorsa -> balsors", function() {deepEqual( Stem("balsorsa"), "balsors");});
test("balsorsú -> balsorsú", function() {deepEqual( Stem("balsorsú"), "balsorsú");});
test("balszerencse -> balszerencs", function() {deepEqual( Stem("balszerencse"), "balszerencs");});
test("balszerencséjére -> balszerencsé", function() {deepEqual( Stem("balszerencséjére"), "balszerencsé");});
test("balszerencsére -> balszerencs", function() {deepEqual( Stem("balszerencsére"), "balszerencs");});
test("balszerencsét -> balszerencs", function() {deepEqual( Stem("balszerencsét"), "balszerencs");});
test("balszerencsével -> balszerencs", function() {deepEqual( Stem("balszerencsével"), "balszerencs");});
test("balszerencsés -> balszerencsés", function() {deepEqual( Stem("balszerencsés"), "balszerencsés");});
test("balszélső -> balszélső", function() {deepEqual( Stem("balszélső"), "balszélső");});
test("balta -> balt", function() {deepEqual( Stem("balta"), "balt");});
test("balti -> balt", function() {deepEqual( Stem("balti"), "balt");});
test("baltikumi -> baltikum", function() {deepEqual( Stem("baltikumi"), "baltikum");});
test("balul -> bal", function() {deepEqual( Stem("balul"), "bal");});
test("balzsamos -> balzsamos", function() {deepEqual( Stem("balzsamos"), "balzsamos");});
test("bambinó -> bambinó", function() {deepEqual( Stem("bambinó"), "bambinó");});
test("bambinójának -> bambinó", function() {deepEqual( Stem("bambinójának"), "bambinó");});
test("bambinót -> bambinó", function() {deepEqual( Stem("bambinót"), "bambinó");});
test("bambinóval -> bambinó", function() {deepEqual( Stem("bambinóval"), "bambinó");});
test("bambán -> bamb", function() {deepEqual( Stem("bambán"), "bamb");});
test("bamba -> bam", function() {deepEqual( Stem("bamba"), "bam");});
test("banditák -> bandita", function() {deepEqual( Stem("banditák"), "bandita");});
test("banditákban -> bandita", function() {deepEqual( Stem("banditákban"), "bandita");});
test("bandukolt -> bandukol", function() {deepEqual( Stem("bandukolt"), "bandukol");});
test("bandába -> band", function() {deepEqual( Stem("bandába"), "band");});
test("banda -> band", function() {deepEqual( Stem("banda"), "band");});
test("bandái -> banda", function() {deepEqual( Stem("bandái"), "banda");});
test("bandája -> bandá", function() {deepEqual( Stem("bandája"), "bandá");});
test("bandák -> banda", function() {deepEqual( Stem("bandák"), "banda");});
test("bandákat -> banda", function() {deepEqual( Stem("bandákat"), "banda");});
test("bandát -> band", function() {deepEqual( Stem("bandát"), "band");});
test("bangalorei -> bangalor", function() {deepEqual( Stem("bangalorei"), "bangalor");});
test("bankautomatáknál -> bankautomata", function() {deepEqual( Stem("bankautomatáknál"), "bankautomata");});
test("bankbiztosítás -> bankbiztosítás", function() {deepEqual( Stem("bankbiztosítás"), "bankbiztosítás");});
test("bankcsoport -> bankcsopor", function() {deepEqual( Stem("bankcsoport"), "bankcsopor");});
test("bankfiókot -> bankfió", function() {deepEqual( Stem("bankfiókot"), "bankfió");});
test("bankgaranciák -> bankgarancia", function() {deepEqual( Stem("bankgaranciák"), "bankgarancia");});
test("bankhitelrendszer -> bankhitelrendszer", function() {deepEqual( Stem("bankhitelrendszer"), "bankhitelrendszer");});
test("banki -> ban", function() {deepEqual( Stem("banki"), "ban");});
test("bankiba -> ban", function() {deepEqual( Stem("bankiba"), "ban");});
test("bankigazgatót -> bankigazgató", function() {deepEqual( Stem("bankigazgatót"), "bankigazgató");});
test("banking -> banking", function() {deepEqual( Stem("banking"), "banking");});
test("bankingot -> banking", function() {deepEqual( Stem("bankingot"), "banking");});
test("bankjegyek -> bankjegy", function() {deepEqual( Stem("bankjegyek"), "bankjegy");});
test("bankjegyet -> bankjegy", function() {deepEqual( Stem("bankjegyet"), "bankjegy");});
test("bankjegykiadó -> bankjegykiadó", function() {deepEqual( Stem("bankjegykiadó"), "bankjegykiadó");});
test("bankkártya-kibocsátó -> bankkártya-kibocsátó", function() {deepEqual( Stem("bankkártya-kibocsátó"), "bankkártya-kibocsátó");});
test("bankkártya-rendszer -> bankkártya-rendszer", function() {deepEqual( Stem("bankkártya-rendszer"), "bankkártya-rendszer");});
test("bankkártyapiacon -> bankkártyapiac", function() {deepEqual( Stem("bankkártyapiacon"), "bankkártyapiac");});
test("bankkártyatársaság -> bankkártyatársaság", function() {deepEqual( Stem("bankkártyatársaság"), "bankkártyatársaság");});
test("bankkártya -> bankkárty", function() {deepEqual( Stem("bankkártya"), "bankkárty");});
test("bankkártyák -> bankkártya", function() {deepEqual( Stem("bankkártyák"), "bankkártya");});
test("bankkártyákat -> bankkártya", function() {deepEqual( Stem("bankkártyákat"), "bankkártya");});
test("bankkártyát -> bankkárty", function() {deepEqual( Stem("bankkártyát"), "bankkárty");});
test("bankkártyával -> bankkárty", function() {deepEqual( Stem("bankkártyával"), "bankkárty");});
test("bankkártyás -> bankkártyás", function() {deepEqual( Stem("bankkártyás"), "bankkártyás");});
test("bankképviselet -> bankképvisel", function() {deepEqual( Stem("bankképviselet"), "bankképvisel");});
test("bankképviseletekre -> bankképviselet", function() {deepEqual( Stem("bankképviseletekre"), "bankképviselet");});
test("bankképviseleti -> bankképviselet", function() {deepEqual( Stem("bankképviseleti"), "bankképviselet");});
test("bankközi -> bankköz", function() {deepEqual( Stem("bankközi"), "bankköz");});
test("bankközponttal -> bankközpon", function() {deepEqual( Stem("bankközponttal"), "bankközpon");});
test("bankműveletekben -> bankművelet", function() {deepEqual( Stem("bankműveletekben"), "bankművelet");});
test("banknév -> banknév", function() {deepEqual( Stem("banknév"), "banknév");});
test("bankja -> ban", function() {deepEqual( Stem("bankja"), "ban");});
test("banktól -> ba", function() {deepEqual( Stem("banktól"), "ba");});
test("bankra -> ba", function() {deepEqual( Stem("bankra"), "ba");});
test("bankot -> ba", function() {deepEqual( Stem("bankot"), "ba");});
test("bankba -> ba", function() {deepEqual( Stem("bankba"), "ba");});
test("bank -> ba", function() {deepEqual( Stem("bank"), "ba");});
test("bankban -> ba", function() {deepEqual( Stem("bankban"), "ba");});
test("bankból -> ba", function() {deepEqual( Stem("bankból"), "ba");});
test("bankhoz -> ba", function() {deepEqual( Stem("bankhoz"), "ba");});
test("bankjául -> ban", function() {deepEqual( Stem("bankjául"), "ban");});
test("bankkal -> ba", function() {deepEqual( Stem("bankkal"), "ba");});
test("bankká -> ba", function() {deepEqual( Stem("bankká"), "ba");});
test("banknak -> ba", function() {deepEqual( Stem("banknak"), "ba");});
test("banknál -> ba", function() {deepEqual( Stem("banknál"), "ba");});
test("bankok -> bank", function() {deepEqual( Stem("bankok"), "bank");});
test("bankokat -> bank", function() {deepEqual( Stem("bankokat"), "bank");});
test("bankokban -> bank", function() {deepEqual( Stem("bankokban"), "bank");});
test("bankokkal -> bank", function() {deepEqual( Stem("bankokkal"), "bank");});
test("bankoknak -> bank", function() {deepEqual( Stem("bankoknak"), "bank");});
test("bankoknál -> bank", function() {deepEqual( Stem("bankoknál"), "bank");});
test("bankokról -> bank", function() {deepEqual( Stem("bankokról"), "bank");});
test("bankonként -> ba", function() {deepEqual( Stem("bankonként"), "ba");});
test("bankos -> bankos", function() {deepEqual( Stem("bankos"), "bankos");});
test("bankpiac -> bankpiac", function() {deepEqual( Stem("bankpiac"), "bankpiac");});
test("bankrendszer -> bankrendszer", function() {deepEqual( Stem("bankrendszer"), "bankrendszer");});
test("bankszakemberek -> bankszakember", function() {deepEqual( Stem("bankszakemberek"), "bankszakember");});
test("bankszanálási -> bankszanálás", function() {deepEqual( Stem("bankszanálási"), "bankszanálás");});
test("bankszektor -> bankszektor", function() {deepEqual( Stem("bankszektor"), "bankszektor");});
test("bankszférában -> bankszfér", function() {deepEqual( Stem("bankszférában"), "bankszfér");});
test("bankszintű -> bankszintű", function() {deepEqual( Stem("bankszintű"), "bankszintű");});
test("bankszámlaszámtól -> bankszámlasza", function() {deepEqual( Stem("bankszámlaszámtól"), "bankszámlasza");});
test("bankszámlaszámunkat -> bankszámlaszám", function() {deepEqual( Stem("bankszámlaszámunkat"), "bankszámlaszám");});
test("bankszámláján -> bankszámlá", function() {deepEqual( Stem("bankszámláján"), "bankszámlá");});
test("bankszámla -> bankszáml", function() {deepEqual( Stem("bankszámla"), "bankszáml");});
test("bankszámlájára -> bankszámlá", function() {deepEqual( Stem("bankszámlájára"), "bankszámlá");});
test("bankszámláját -> bankszámlá", function() {deepEqual( Stem("bankszámláját"), "bankszámlá");});
test("bankszámlámon -> bankszámla", function() {deepEqual( Stem("bankszámlámon"), "bankszámla");});
test("bankszámlánk -> bankszámla", function() {deepEqual( Stem("bankszámlánk"), "bankszámla");});
test("bankszámlára -> bankszáml", function() {deepEqual( Stem("bankszámlára"), "bankszáml");});
test("bankszámlát -> bankszáml", function() {deepEqual( Stem("bankszámlát"), "bankszáml");});
test("bankvilág -> bankvilág", function() {deepEqual( Stem("bankvilág"), "bankvilág");});
test("bankárain -> bankár", function() {deepEqual( Stem("bankárain"), "bankár");});
test("bankárgeneráció -> bankárgeneráció", function() {deepEqual( Stem("bankárgeneráció"), "bankárgeneráció");});
test("bankügyleteknél -> bankügylet", function() {deepEqual( Stem("bankügyleteknél"), "bankügylet");});
test("banális -> banális", function() {deepEqual( Stem("banális"), "banális");});
test("banánköztársaság -> banánköztársaság", function() {deepEqual( Stem("banánköztársaság"), "banánköztársaság");});
test("banánt -> ban", function() {deepEqual( Stem("banánt"), "ban");});
test("barackpálinka -> barackpál", function() {deepEqual( Stem("barackpálinka"), "barackpál");});
test("barangolnunk -> barangoln", function() {deepEqual( Stem("barangolnunk"), "barangoln");});
test("barangolnék -> barangolne", function() {deepEqual( Stem("barangolnék"), "barangolne");});
test("barangolunk -> barangol", function() {deepEqual( Stem("barangolunk"), "barangol");});
test("barangolás -> barangolás", function() {deepEqual( Stem("barangolás"), "barangolás");});
test("barangolásunk -> barangolás", function() {deepEqual( Stem("barangolásunk"), "barangolás");});
test("baranyai -> barany", function() {deepEqual( Stem("baranyai"), "barany");});
test("barbár -> barbár", function() {deepEqual( Stem("barbár"), "barbár");});
test("barcikai -> barci", function() {deepEqual( Stem("barcikai"), "barci");});
test("barcsi -> barcs", function() {deepEqual( Stem("barcsi"), "barcs");});
test("barikádokon -> barikád", function() {deepEqual( Stem("barikádokon"), "barikád");});
test("barikádokról -> barikád", function() {deepEqual( Stem("barikádokról"), "barikád");});
test("bariton -> barit", function() {deepEqual( Stem("bariton"), "barit");});
test("baritonjával -> bariton", function() {deepEqual( Stem("baritonjával"), "bariton");});
test("baritonistából -> baritonist", function() {deepEqual( Stem("baritonistából"), "baritonist");});
test("baritonrepertoárt -> baritonrepertoár", function() {deepEqual( Stem("baritonrepertoárt"), "baritonrepertoár");});
test("baritonszerep -> baritonszerep", function() {deepEqual( Stem("baritonszerep"), "baritonszerep");});
test("barka -> bar", function() {deepEqual( Stem("barka"), "bar");});
test("barkaágra -> barkaág", function() {deepEqual( Stem("barkaágra"), "barkaág");});
test("barkácsolt -> barkácsol", function() {deepEqual( Stem("barkácsolt"), "barkácsol");});
test("barkácsáruháztól -> barkácsáruház", function() {deepEqual( Stem("barkácsáruháztól"), "barkácsáruház");});
test("barlangi -> barlang", function() {deepEqual( Stem("barlangi"), "barlang");});
test("barlang -> barlang", function() {deepEqual( Stem("barlang"), "barlang");});
test("barlangot -> barlang", function() {deepEqual( Stem("barlangot"), "barlang");});
test("barlangba -> barlang", function() {deepEqual( Stem("barlangba"), "barlang");});
test("barlangban -> barlang", function() {deepEqual( Stem("barlangban"), "barlang");});
test("barlangból -> barlang", function() {deepEqual( Stem("barlangból"), "barlang");});
test("barlanghoz -> barlang", function() {deepEqual( Stem("barlanghoz"), "barlang");});
test("barlangja -> barlang", function() {deepEqual( Stem("barlangja"), "barlang");});
test("barlangjukba -> barlang", function() {deepEqual( Stem("barlangjukba"), "barlang");});
test("barlangjába -> barlang", function() {deepEqual( Stem("barlangjába"), "barlang");});
test("barlangjához -> barlang", function() {deepEqual( Stem("barlangjához"), "barlang");});
test("barlangjáró -> barlangjáró", function() {deepEqual( Stem("barlangjáró"), "barlangjáró");});
test("barlangját -> barlang", function() {deepEqual( Stem("barlangját"), "barlang");});
test("barlangkutatás -> barlangkutatás", function() {deepEqual( Stem("barlangkutatás"), "barlangkutatás");});
test("barlangnézés -> barlangnézés", function() {deepEqual( Stem("barlangnézés"), "barlangnézés");});
test("barlangrajzot -> barlangrajz", function() {deepEqual( Stem("barlangrajzot"), "barlangrajz");});
test("barlangász -> barlangász", function() {deepEqual( Stem("barlangász"), "barlangász");});
test("barmok -> barm", function() {deepEqual( Stem("barmok"), "barm");});
test("barmokat -> barm", function() {deepEqual( Stem("barmokat"), "barm");});
test("barna -> barn", function() {deepEqual( Stem("barna"), "barn");});
test("barnák -> barna", function() {deepEqual( Stem("barnák"), "barna");});
test("barnaszénbánya -> barnaszénbány", function() {deepEqual( Stem("barnaszénbánya"), "barnaszénbány");});
test("barnás -> barnás", function() {deepEqual( Stem("barnás"), "barnás");});
test("barnásvörös -> barnásvörös", function() {deepEqual( Stem("barnásvörös"), "barnásvörös");});
test("barnította -> barnított", function() {deepEqual( Stem("barnította"), "barnított");});
test("barokk -> barok", function() {deepEqual( Stem("barokk"), "barok");});
test("barokknak -> barok", function() {deepEqual( Stem("barokknak"), "barok");});
test("baromfi -> baromf", function() {deepEqual( Stem("baromfi"), "baromf");});
test("baromfit -> baromf", function() {deepEqual( Stem("baromfit"), "baromf");});
test("baromfiudvar -> baromfiudvar", function() {deepEqual( Stem("baromfiudvar"), "baromfiudvar");});
test("baromi -> barom", function() {deepEqual( Stem("baromi"), "barom");});
test("barterek -> barter", function() {deepEqual( Stem("barterek"), "barter");});
test("baráti -> barát", function() {deepEqual( Stem("baráti"), "barát");});
test("barátinak -> barát", function() {deepEqual( Stem("barátinak"), "barát");});
test("barátilag -> barátilag", function() {deepEqual( Stem("barátilag"), "barátilag");});
test("barátom -> barát", function() {deepEqual( Stem("barátom"), "barát");});
test("barátomat -> barát", function() {deepEqual( Stem("barátomat"), "barát");});
test("barátomhoz -> barát", function() {deepEqual( Stem("barátomhoz"), "barát");});
test("barátommal -> barát", function() {deepEqual( Stem("barátommal"), "barát");});
test("barátommá -> barát", function() {deepEqual( Stem("barátommá"), "barát");});
test("barátomnak -> barát", function() {deepEqual( Stem("barátomnak"), "barát");});
test("barátomnak -> barát", function() {deepEqual( Stem("barátomnak"), "barát");});
test("barátomnál -> barát", function() {deepEqual( Stem("barátomnál"), "barát");});
test("barátomra -> barát", function() {deepEqual( Stem("barátomra"), "barát");});
test("barátomtól -> barát", function() {deepEqual( Stem("barátomtól"), "barát");});
test("barátomék -> barátome", function() {deepEqual( Stem("barátomék"), "barátome");});
test("barátomékkal -> barátome", function() {deepEqual( Stem("barátomékkal"), "barátome");});
test("barátoméknál -> barátome", function() {deepEqual( Stem("barátoméknál"), "barátome");});
test("barátoddal -> barát", function() {deepEqual( Stem("barátoddal"), "barát");});
test("barátodnak -> barát", function() {deepEqual( Stem("barátodnak"), "barát");});
test("barátodtól -> barát", function() {deepEqual( Stem("barátodtól"), "barát");});
test("barátok -> barát", function() {deepEqual( Stem("barátok"), "barát");});
test("barátokat -> barát", function() {deepEqual( Stem("barátokat"), "barát");});
test("barátokba -> barát", function() {deepEqual( Stem("barátokba"), "barát");});
test("barátokkal -> barát", function() {deepEqual( Stem("barátokkal"), "barát");});
test("barátokként -> barát", function() {deepEqual( Stem("barátokként"), "barát");});
test("barátokra -> barát", function() {deepEqual( Stem("barátokra"), "barát");});
test("barátokról -> barát", function() {deepEqual( Stem("barátokról"), "barát");});
test("baráttal -> bar", function() {deepEqual( Stem("baráttal"), "bar");});
test("barátukkal -> barát", function() {deepEqual( Stem("barátukkal"), "barát");});
test("barátunk -> barát", function() {deepEqual( Stem("barátunk"), "barát");});
test("barátunkkal -> barát", function() {deepEqual( Stem("barátunkkal"), "barát");});
test("barátunknak -> barát", function() {deepEqual( Stem("barátunknak"), "barát");});
test("barátunknál -> barát", function() {deepEqual( Stem("barátunknál"), "barát");});
test("barát -> bar", function() {deepEqual( Stem("barát"), "bar");});
test("barátnak -> barát", function() {deepEqual( Stem("barátnak"), "barát");});
test("barátai -> barát", function() {deepEqual( Stem("barátai"), "barát");});
test("barátaid -> barát", function() {deepEqual( Stem("barátaid"), "barát");});
test("barátaidnak -> barát", function() {deepEqual( Stem("barátaidnak"), "barát");});
test("barátaim -> barát", function() {deepEqual( Stem("barátaim"), "barát");});
test("barátaimat -> barát", function() {deepEqual( Stem("barátaimat"), "barát");});
test("barátaimhoz -> barát", function() {deepEqual( Stem("barátaimhoz"), "barát");});
test("barátaimmal -> barát", function() {deepEqual( Stem("barátaimmal"), "barát");});
test("barátaimra -> barát", function() {deepEqual( Stem("barátaimra"), "barát");});
test("barátodat -> barát", function() {deepEqual( Stem("barátodat"), "barát");});
test("barátaimtól -> barát", function() {deepEqual( Stem("barátaimtól"), "barát");});
test("barátainak -> barát", function() {deepEqual( Stem("barátainak"), "barát");});
test("barátaink -> barát", function() {deepEqual( Stem("barátaink"), "barát");});
test("barátainkat -> barát", function() {deepEqual( Stem("barátainkat"), "barát");});
test("barátainkkal -> barát", function() {deepEqual( Stem("barátainkkal"), "barát");});
test("barátainknak -> barát", function() {deepEqual( Stem("barátainknak"), "barát");});
test("barátainknak -> barát", function() {deepEqual( Stem("barátainknak"), "barát");});
test("barátaira -> barát", function() {deepEqual( Stem("barátaira"), "barát");});
test("barátairól -> barát", function() {deepEqual( Stem("barátairól"), "barát");});
test("barátait -> barát", function() {deepEqual( Stem("barátait"), "barát");});
test("barátaitól -> barát", function() {deepEqual( Stem("barátaitól"), "barát");});
test("barátaival -> barát", function() {deepEqual( Stem("barátaival"), "barát");});
test("barátban -> barát", function() {deepEqual( Stem("barátban"), "barát");});
test("barátja -> barát", function() {deepEqual( Stem("barátja"), "barát");});
test("barátjuk -> barát", function() {deepEqual( Stem("barátjuk"), "barát");});
test("barátjukat -> barát", function() {deepEqual( Stem("barátjukat"), "barát");});
test("barátjuknak -> barát", function() {deepEqual( Stem("barátjuknak"), "barát");});
test("barátjához -> barát", function() {deepEqual( Stem("barátjához"), "barát");});
test("barátjának -> barát", function() {deepEqual( Stem("barátjának"), "barát");});
test("barátját -> barát", function() {deepEqual( Stem("barátját"), "barát");});
test("barátjától -> barát", function() {deepEqual( Stem("barátjától"), "barát");});
test("barátjával -> barát", function() {deepEqual( Stem("barátjával"), "barát");});
test("barátod -> barát", function() {deepEqual( Stem("barátod"), "barát");});
test("barátkozik -> barátkoz", function() {deepEqual( Stem("barátkozik"), "barátkoz");});
test("barátkozni -> barátkozn", function() {deepEqual( Stem("barátkozni"), "barátkozn");});
test("barátkozok -> barátkoz", function() {deepEqual( Stem("barátkozok"), "barátkoz");});
test("barátkozott -> barátkozot", function() {deepEqual( Stem("barátkozott"), "barátkozot");});
test("barátkoztak -> barátkozt", function() {deepEqual( Stem("barátkoztak"), "barátkozt");});
test("barátkoztam -> barátkozt", function() {deepEqual( Stem("barátkoztam"), "barátkozt");});
test("barátkozás -> barátkozás", function() {deepEqual( Stem("barátkozás"), "barátkozás");});
test("barátkozó -> barátkozó", function() {deepEqual( Stem("barátkozó"), "barátkozó");});
test("barátkozós -> barátkozós", function() {deepEqual( Stem("barátkozós"), "barátkozós");});
test("barátnémék -> barátnéme", function() {deepEqual( Stem("barátnémék"), "barátnéme");});
test("barátnő -> barátnő", function() {deepEqual( Stem("barátnő"), "barátnő");});
test("barátnőd -> barátnő", function() {deepEqual( Stem("barátnőd"), "barátnő");});
test("barátnőim -> barátnő", function() {deepEqual( Stem("barátnőim"), "barátnő");});
test("barátnőimmel -> barátnő", function() {deepEqual( Stem("barátnőimmel"), "barátnő");});
test("barátnőimnél -> barátnő", function() {deepEqual( Stem("barátnőimnél"), "barátnő");});
test("barátnőinek -> barátnő", function() {deepEqual( Stem("barátnőinek"), "barátnő");});
test("barátnőinek -> barátnő", function() {deepEqual( Stem("barátnőinek"), "barátnő");});
test("barátnőivel -> barátnő", function() {deepEqual( Stem("barátnőivel"), "barátnő");});
test("barátnője -> barátnő", function() {deepEqual( Stem("barátnője"), "barátnő");});
test("barátnőjéhez -> barátnő", function() {deepEqual( Stem("barátnőjéhez"), "barátnő");});
test("barátnőjének -> barátnő", function() {deepEqual( Stem("barátnőjének"), "barátnő");});
test("barátnőjének -> barátnő", function() {deepEqual( Stem("barátnőjének"), "barátnő");});
test("barátnőjénél -> barátnő", function() {deepEqual( Stem("barátnőjénél"), "barátnő");});
test("barátnőjét -> barátnő", function() {deepEqual( Stem("barátnőjét"), "barátnő");});
test("barátnőjével -> barátnő", function() {deepEqual( Stem("barátnőjével"), "barátnő");});
test("barátnőjük -> barátnő", function() {deepEqual( Stem("barátnőjük"), "barátnő");});
test("barátnők -> barátnő", function() {deepEqual( Stem("barátnők"), "barátnő");});
test("barátnőket -> barátnő", function() {deepEqual( Stem("barátnőket"), "barátnő");});
test("barátnőkkel -> barátnő", function() {deepEqual( Stem("barátnőkkel"), "barátnő");});
test("barátnőm -> barátnő", function() {deepEqual( Stem("barátnőm"), "barátnő");});
test("barátnőmet -> barátnő", function() {deepEqual( Stem("barátnőmet"), "barátnő");});
test("barátnőmhöz -> barátnő", function() {deepEqual( Stem("barátnőmhöz"), "barátnő");});
test("barátnőmmel -> barátnő", function() {deepEqual( Stem("barátnőmmel"), "barátnő");});
test("barátnőmnek -> barátnő", function() {deepEqual( Stem("barátnőmnek"), "barátnő");});
test("barátnőmnél -> barátnő", function() {deepEqual( Stem("barátnőmnél"), "barátnő");});
test("barátnőmre -> barátnő", function() {deepEqual( Stem("barátnőmre"), "barátnő");});
test("barátnőmtől -> barátnő", function() {deepEqual( Stem("barátnőmtől"), "barátnő");});
test("barátnőmék -> barátnőme", function() {deepEqual( Stem("barátnőmék"), "barátnőme");});
test("barátnőméket -> barátnőme", function() {deepEqual( Stem("barátnőméket"), "barátnőme");});
test("barátnőméknél -> barátnőme", function() {deepEqual( Stem("barátnőméknél"), "barátnőme");});
test("barátnőmért -> barátnő", function() {deepEqual( Stem("barátnőmért"), "barátnő");});
test("barátnőnk -> barátnő", function() {deepEqual( Stem("barátnőnk"), "barátnő");});
test("barátnőnkhöz -> barátnő", function() {deepEqual( Stem("barátnőnkhöz"), "barátnő");});
test("barátnőre -> barátnő", function() {deepEqual( Stem("barátnőre"), "barátnő");});
test("barátnőt -> barátnő", function() {deepEqual( Stem("barátnőt"), "barátnő");});
test("barátosném -> barátosne", function() {deepEqual( Stem("barátosném"), "barátosne");});
test("barátot -> barát", function() {deepEqual( Stem("barátot"), "barát");});
test("barátra -> barát", function() {deepEqual( Stem("barátra"), "barát");});
test("barátsági -> barátság", function() {deepEqual( Stem("barátsági"), "barátság");});
test("barátság -> barátság", function() {deepEqual( Stem("barátság"), "barátság");});
test("barátsága -> barátság", function() {deepEqual( Stem("barátsága"), "barátság");});
test("barátságban -> barátság", function() {deepEqual( Stem("barátságban"), "barátság");});
test("barátsággal -> barátság", function() {deepEqual( Stem("barátsággal"), "barátság");});
test("barátsághoz -> barátság", function() {deepEqual( Stem("barátsághoz"), "barátság");});
test("barátságok -> barátság", function() {deepEqual( Stem("barátságok"), "barátság");});
test("barátságunk -> barátság", function() {deepEqual( Stem("barátságunk"), "barátság");});
test("barátságokat -> barátság", function() {deepEqual( Stem("barátságokat"), "barátság");});
test("barátságosabb -> barátságosabb", function() {deepEqual( Stem("barátságosabb"), "barátságosabb");});
test("barátságosabbak -> barátságosabb", function() {deepEqual( Stem("barátságosabbak"), "barátságosabb");});
test("barátságosabban -> barátságosab", function() {deepEqual( Stem("barátságosabban"), "barátságosab");});
test("barátságosabbnak -> barátságosabb", function() {deepEqual( Stem("barátságosabbnak"), "barátságosabb");});
test("barátságosak -> barátságos", function() {deepEqual( Stem("barátságosak"), "barátságos");});
test("barátságosan -> barátságos", function() {deepEqual( Stem("barátságosan"), "barátságos");});
test("barátságot -> barátság", function() {deepEqual( Stem("barátságot"), "barátság");});
test("barátságra -> barátság", function() {deepEqual( Stem("barátságra"), "barátság");});
test("barátságról -> barátság", function() {deepEqual( Stem("barátságról"), "barátság");});
test("barátságtalan -> barátságtal", function() {deepEqual( Stem("barátságtalan"), "barátságtal");});
test("barátságtalannak -> barátságtalan", function() {deepEqual( Stem("barátságtalannak"), "barátságtalan");});
test("barázdák -> barázda", function() {deepEqual( Stem("barázdák"), "barázda");});
test("barázdált -> barázdál", function() {deepEqual( Stem("barázdált"), "barázdál");});
test("barázdás -> barázdás", function() {deepEqual( Stem("barázdás"), "barázdás");});
test("baseball-sapkát -> baseball-sap", function() {deepEqual( Stem("baseball-sapkát"), "baseball-sap");});
test("baseballsapka -> baseballsap", function() {deepEqual( Stem("baseballsapka"), "baseballsap");});
test("basszus -> basszus", function() {deepEqual( Stem("basszus"), "basszus");});
test("basszusgitáros -> basszusgitáros", function() {deepEqual( Stem("basszusgitáros"), "basszusgitáros");});
test("basszust -> basszus", function() {deepEqual( Stem("basszust"), "basszus");});
test("baszk -> basz", function() {deepEqual( Stem("baszk"), "basz");});
test("battyuval -> battyu", function() {deepEqual( Stem("battyuval"), "battyu");});
test("batyu -> batyu", function() {deepEqual( Stem("batyu"), "batyu");});
test("batyujának -> batyu", function() {deepEqual( Stem("batyujának"), "batyu");});
test("beadványnak -> beadvány", function() {deepEqual( Stem("beadványnak"), "beadvány");});
test("beadványra -> beadvány", function() {deepEqual( Stem("beadványra"), "beadvány");});
test("beadványt -> beadvány", function() {deepEqual( Stem("beadványt"), "beadvány");});
test("beadványában -> beadvány", function() {deepEqual( Stem("beadványában"), "beadvány");});
test("beadásából -> beadás", function() {deepEqual( Stem("beadásából"), "beadás");});
test("beadásán -> beadás", function() {deepEqual( Stem("beadásán"), "beadás");});
test("beadását -> beadás", function() {deepEqual( Stem("beadását"), "beadás");});
test("beadásától -> beadás", function() {deepEqual( Stem("beadásától"), "beadás");});
test("beadásával -> beadás", function() {deepEqual( Stem("beadásával"), "beadás");});
test("beakadjak -> beakadj", function() {deepEqual( Stem("beakadjak"), "beakadj");});
test("beakadt -> be", function() {deepEqual( Stem("beakadt"), "be");});
test("bealkonyulni -> bealkonyuln", function() {deepEqual( Stem("bealkonyulni"), "bealkonyuln");});
test("bearanyozták -> bearanyozta", function() {deepEqual( Stem("bearanyozták"), "bearanyozta");});
test("beavatkozhassanak -> beavatkozhass", function() {deepEqual( Stem("beavatkozhassanak"), "beavatkozhass");});
test("beavatkozik -> beavatkoz", function() {deepEqual( Stem("beavatkozik"), "beavatkoz");});
test("beavatkoznak -> beavatkoz", function() {deepEqual( Stem("beavatkoznak"), "beavatkoz");});
test("beavatkozni -> beavatkozn", function() {deepEqual( Stem("beavatkozni"), "beavatkozn");});
test("becses -> becses", function() {deepEqual( Stem("becses"), "becses");});
test("becslés -> becslés", function() {deepEqual( Stem("becslés"), "becslés");});
test("becslése -> becslés", function() {deepEqual( Stem("becslése"), "becslés");});
test("becslései -> becslés", function() {deepEqual( Stem("becslései"), "becslés");});
test("becsléseiket -> becslés", function() {deepEqual( Stem("becsléseiket"), "becslés");});
test("becslések -> becslés", function() {deepEqual( Stem("becslések"), "becslés");});
test("becslésre -> becslés", function() {deepEqual( Stem("becslésre"), "becslés");});
test("becslést -> becslés", function() {deepEqual( Stem("becslést"), "becslés");});
test("becsomagolt -> becsomagol", function() {deepEqual( Stem("becsomagolt"), "becsomagol");});
test("becsomagoltunk -> becsomagolt", function() {deepEqual( Stem("becsomagoltunk"), "becsomagolt");});
test("becsomagolva -> becsomagolv", function() {deepEqual( Stem("becsomagolva"), "becsomagolv");});
test("becstelenség -> becstelenség", function() {deepEqual( Stem("becstelenség"), "becstelenség");});
test("becsukott -> becsukot", function() {deepEqual( Stem("becsukott"), "becsukot");});
test("becsukja -> becsu", function() {deepEqual( Stem("becsukja"), "becsu");});
test("becsuknak -> becs", function() {deepEqual( Stem("becsuknak"), "becs");});
test("becsukni -> becsukn", function() {deepEqual( Stem("becsukni"), "becsukn");});
test("becsukta -> becsukt", function() {deepEqual( Stem("becsukta"), "becsukt");});
test("becsuktam -> becsukt", function() {deepEqual( Stem("becsuktam"), "becsukt");});
test("becsuktuk -> becsukt", function() {deepEqual( Stem("becsuktuk"), "becsukt");});
test("becsukták -> becsukta", function() {deepEqual( Stem("becsukták"), "becsukta");});
test("becsukódott -> becsukódot", function() {deepEqual( Stem("becsukódott"), "becsukódot");});
test("becsértékes -> becsértékes", function() {deepEqual( Stem("becsértékes"), "becsértékes");});
test("becsípve -> becsípv", function() {deepEqual( Stem("becsípve"), "becsípv");});
test("becsengetni -> becsengetn", function() {deepEqual( Stem("becsengetni"), "becsengetn");});
test("becsengettek -> becsengett", function() {deepEqual( Stem("becsengettek"), "becsengett");});
test("becsengettünk -> becsengett", function() {deepEqual( Stem("becsengettünk"), "becsengett");});
test("becsöngetnek -> becsönget", function() {deepEqual( Stem("becsöngetnek"), "becsönget");});
test("becsöngettek -> becsöngett", function() {deepEqual( Stem("becsöngettek"), "becsöngett");});
test("becsöngetést -> becsöngetés", function() {deepEqual( Stem("becsöngetést"), "becsöngetés");});
test("becsúszik -> becsúsz", function() {deepEqual( Stem("becsúszik"), "becsúsz");});
test("becsúszott -> becsúszot", function() {deepEqual( Stem("becsúszott"), "becsúszot");});
test("becsúsztatta -> becsúsztatt", function() {deepEqual( Stem("becsúsztatta"), "becsúsztatt");});
test("becsúzlizza -> becsúzlizz", function() {deepEqual( Stem("becsúzlizza"), "becsúzlizz");});
test("becsület -> becsül", function() {deepEqual( Stem("becsület"), "becsül");});
test("becsületben -> becsület", function() {deepEqual( Stem("becsületben"), "becsület");});
test("becsülete -> becsület", function() {deepEqual( Stem("becsülete"), "becsület");});
test("becsületemre -> becsület", function() {deepEqual( Stem("becsületemre"), "becsület");});
test("becsületre -> becsület", function() {deepEqual( Stem("becsületre"), "becsület");});
test("becsülettel -> becsül", function() {deepEqual( Stem("becsülettel"), "becsül");});
test("becsületét -> becsület", function() {deepEqual( Stem("becsületét"), "becsület");});
test("becsületünk -> becsület", function() {deepEqual( Stem("becsületünk"), "becsület");});
test("becsületére -> becsület", function() {deepEqual( Stem("becsületére"), "becsület");});
test("becsületes -> becsületes", function() {deepEqual( Stem("becsületes"), "becsületes");});
test("becsületesebben -> becsületeseb", function() {deepEqual( Stem("becsületesebben"), "becsületeseb");});
test("becsületesek -> becsületes", function() {deepEqual( Stem("becsületesek"), "becsületes");});
test("becsületesen -> becsületes", function() {deepEqual( Stem("becsületesen"), "becsületes");});
test("becsületességre -> becsületesség", function() {deepEqual( Stem("becsületességre"), "becsületesség");});
test("becsületességét -> becsületesség", function() {deepEqual( Stem("becsületességét"), "becsületesség");});
test("becsületsértés -> becsületsértés", function() {deepEqual( Stem("becsületsértés"), "becsületsértés");});
test("becsülhető -> becsülhető", function() {deepEqual( Stem("becsülhető"), "becsülhető");});
test("becsülve -> becsülv", function() {deepEqual( Stem("becsülve"), "becsülv");});
test("becsüli -> becsül", function() {deepEqual( Stem("becsüli"), "becsül");});
test("becsülik -> becsül", function() {deepEqual( Stem("becsülik"), "becsül");});
test("becsül -> becs", function() {deepEqual( Stem("becsül"), "becs");});
test("becsüljem -> becsülj", function() {deepEqual( Stem("becsüljem"), "becsülj");});
test("becsüljön -> becsülj", function() {deepEqual( Stem("becsüljön"), "becsülj");});
test("becsülnek -> becsül", function() {deepEqual( Stem("becsülnek"), "becsül");});
test("becsülni -> becsüln", function() {deepEqual( Stem("becsülni"), "becsüln");});
test("becsült -> becsül", function() {deepEqual( Stem("becsült"), "becsül");});
test("becsülte -> becsült", function() {deepEqual( Stem("becsülte"), "becsült");});
test("becsültek -> becsült", function() {deepEqual( Stem("becsültek"), "becsült");});
test("becsültelek -> becsültel", function() {deepEqual( Stem("becsültelek"), "becsültel");});
test("becsülték -> becsülte", function() {deepEqual( Stem("becsülték"), "becsülte");});
test("becsülését -> becsülés", function() {deepEqual( Stem("becsülését"), "becsülés");});
test("becsülöd -> becsül", function() {deepEqual( Stem("becsülöd"), "becsül");});
test("becsülök -> becsül", function() {deepEqual( Stem("becsülök"), "becsül");});
test("becsülöm -> becsülö", function() {deepEqual( Stem("becsülöm"), "becsülö");});
test("becézett -> becézet", function() {deepEqual( Stem("becézett"), "becézet");});
test("becézték -> becézte", function() {deepEqual( Stem("becézték"), "becézte");});
test("becézzük -> becézz", function() {deepEqual( Stem("becézzük"), "becézz");});
test("becéz -> becéz", function() {deepEqual( Stem("becéz"), "becéz");});
test("bedagadt -> bedag", function() {deepEqual( Stem("bedagadt"), "bedag");});
test("bediktált -> bediktál", function() {deepEqual( Stem("bediktált"), "bediktál");});
test("bedobbant -> bedobban", function() {deepEqual( Stem("bedobbant"), "bedobban");});
test("bedobhatták -> bedobhatta", function() {deepEqual( Stem("bedobhatták"), "bedobhatta");});
test("bedobva -> bedobv", function() {deepEqual( Stem("bedobva"), "bedobv");});
test("bedobja -> bedob", function() {deepEqual( Stem("bedobja"), "bedob");});
test("bedobni -> bedobn", function() {deepEqual( Stem("bedobni"), "bedobn");});
test("bedobom -> bedob", function() {deepEqual( Stem("bedobom"), "bedob");});
test("bedobta -> bedobt", function() {deepEqual( Stem("bedobta"), "bedobt");});
test("bedobtak -> bedobt", function() {deepEqual( Stem("bedobtak"), "bedobt");});
test("bedobtam -> bedobt", function() {deepEqual( Stem("bedobtam"), "bedobt");});
test("bedobtuk -> bedobt", function() {deepEqual( Stem("bedobtuk"), "bedobt");});
test("bedobtunk -> bedobt", function() {deepEqual( Stem("bedobtunk"), "bedobt");});
test("bedobták -> bedobta", function() {deepEqual( Stem("bedobták"), "bedobta");});
test("bedobálta -> bedobált", function() {deepEqual( Stem("bedobálta"), "bedobált");});
test("bedobáltam -> bedobált", function() {deepEqual( Stem("bedobáltam"), "bedobált");});
test("bedobáltuk -> bedobált", function() {deepEqual( Stem("bedobáltuk"), "bedobált");});
test("bedobáltunk -> bedobált", function() {deepEqual( Stem("bedobáltunk"), "bedobált");});
test("bedobó -> bedobó", function() {deepEqual( Stem("bedobó"), "bedobó");});
test("bedobóját -> bedobó", function() {deepEqual( Stem("bedobóját"), "bedobó");});
test("bedugaszolom -> bedugaszol", function() {deepEqual( Stem("bedugaszolom"), "bedugaszol");});
test("bedugaszolta -> bedugaszolt", function() {deepEqual( Stem("bedugaszolta"), "bedugaszolt");});
test("bedughatsz -> bedughatsz", function() {deepEqual( Stem("bedughatsz"), "bedughatsz");});
test("bedugható -> bedugható", function() {deepEqual( Stem("bedugható"), "bedugható");});
test("bedugni -> bedugn", function() {deepEqual( Stem("bedugni"), "bedugn");});
test("bedugtam -> bedugt", function() {deepEqual( Stem("bedugtam"), "bedugt");});
test("bedugult -> bedugul", function() {deepEqual( Stem("bedugult"), "bedugul");});
test("bedugulása -> bedugulás", function() {deepEqual( Stem("bedugulása"), "bedugulás");});
test("beduinok -> beduin", function() {deepEqual( Stem("beduinok"), "beduin");});
test("bedöglött -> bedöglöt", function() {deepEqual( Stem("bedöglött"), "bedöglöt");});
test("bedőltem -> bedőlt", function() {deepEqual( Stem("bedőltem"), "bedőlt");});
test("bedűljön -> bedűlj", function() {deepEqual( Stem("bedűljön"), "bedűlj");});
test("beejtette -> beejtett", function() {deepEqual( Stem("beejtette"), "beejtett");});
test("beemelték -> beemelte", function() {deepEqual( Stem("beemelték"), "beemelte");});
test("beemelés -> beemelés", function() {deepEqual( Stem("beemelés"), "beemelés");});
test("beengedett -> beengedet", function() {deepEqual( Stem("beengedett"), "beengedet");});
test("beengedik -> beenged", function() {deepEqual( Stem("beengedik"), "beenged");});
test("beengedné -> beengedn", function() {deepEqual( Stem("beengedné"), "beengedn");});
test("beengedte -> beengedt", function() {deepEqual( Stem("beengedte"), "beengedt");});
test("beengedtek -> beengedt", function() {deepEqual( Stem("beengedtek"), "beengedt");});
test("beengedtük -> beengedt", function() {deepEqual( Stem("beengedtük"), "beengedt");});
test("beengedését -> beengedés", function() {deepEqual( Stem("beengedését"), "beengedés");});
test("beesett -> beeset", function() {deepEqual( Stem("beesett"), "beeset");});
test("beesteledett -> beesteledet", function() {deepEqual( Stem("beesteledett"), "beesteledet");});
test("beestem -> beest", function() {deepEqual( Stem("beestem"), "beest");});
test("beetetem -> beetet", function() {deepEqual( Stem("beetetem"), "beetet");});
test("befagyassza -> befagyassz", function() {deepEqual( Stem("befagyassza"), "befagyassz");});
test("befagyasztott -> befagyasztot", function() {deepEqual( Stem("befagyasztott"), "befagyasztot");});
test("befagyasztotta -> befagyasztott", function() {deepEqual( Stem("befagyasztotta"), "befagyasztott");});
test("befagyasztották -> befagyasztotta", function() {deepEqual( Stem("befagyasztották"), "befagyasztotta");});
test("befagyott -> befagyot", function() {deepEqual( Stem("befagyott"), "befagyot");});
test("befalazott -> befalazot", function() {deepEqual( Stem("befalazott"), "befalazot");});
test("befalazzák -> befalazza", function() {deepEqual( Stem("befalazzák"), "befalazza");});
test("befalta -> befalt", function() {deepEqual( Stem("befalta"), "befalt");});
test("befecskendezéssel -> befecskendezés", function() {deepEqual( Stem("befecskendezéssel"), "befecskendezés");});
test("befecskendezésű -> befecskendezésű", function() {deepEqual( Stem("befecskendezésű"), "befecskendezésű");});
test("befedte -> befedt", function() {deepEqual( Stem("befedte"), "befedt");});
test("befedésre -> befedés", function() {deepEqual( Stem("befedésre"), "befedés");});
test("befejelte -> befejelt", function() {deepEqual( Stem("befejelte"), "befejelt");});
test("befejeltem -> befejelt", function() {deepEqual( Stem("befejeltem"), "befejelt");});
test("befejezendő -> befejezendő", function() {deepEqual( Stem("befejezendő"), "befejezendő");});
test("befejezetlen -> befejezetl", function() {deepEqual( Stem("befejezetlen"), "befejezetl");});
test("befejezett -> befejezet", function() {deepEqual( Stem("befejezett"), "befejezet");});
test("befejezettnek -> befejezett", function() {deepEqual( Stem("befejezettnek"), "befejezett");});
test("befejezettségét -> befejezettség", function() {deepEqual( Stem("befejezettségét"), "befejezettség");});
test("befejezheti -> befejezhet", function() {deepEqual( Stem("befejezheti"), "befejezhet");});
test("befejezi -> befejez", function() {deepEqual( Stem("befejezi"), "befejez");});
test("befejezem -> befejez", function() {deepEqual( Stem("befejezem"), "befejez");});
test("befejezni -> befejezn", function() {deepEqual( Stem("befejezni"), "befejezn");});
test("befejezném -> befejezne", function() {deepEqual( Stem("befejezném"), "befejezne");});
test("befejezte -> befejezt", function() {deepEqual( Stem("befejezte"), "befejezt");});
test("befejeztem -> befejezt", function() {deepEqual( Stem("befejeztem"), "befejezt");});
test("befejezték -> befejezte", function() {deepEqual( Stem("befejezték"), "befejezte");});
test("befejeztével -> befejezt", function() {deepEqual( Stem("befejeztével"), "befejezt");});
test("befejeztük -> befejezt", function() {deepEqual( Stem("befejeztük"), "befejezt");});
test("befejeztünk -> befejezt", function() {deepEqual( Stem("befejeztünk"), "befejezt");});
test("befejezze -> befejezz", function() {deepEqual( Stem("befejezze"), "befejezz");});
test("befejezzük -> befejezz", function() {deepEqual( Stem("befejezzük"), "befejezz");});
test("befejezése -> befejezés", function() {deepEqual( Stem("befejezése"), "befejezés");});
test("befejezésekor -> befejezés", function() {deepEqual( Stem("befejezésekor"), "befejezés");});
test("befejezésnek -> befejezés", function() {deepEqual( Stem("befejezésnek"), "befejezés");});
test("befejezést -> befejezés", function() {deepEqual( Stem("befejezést"), "befejezés");});
test("befejezésében -> befejezés", function() {deepEqual( Stem("befejezésében"), "befejezés");});
test("befejezéséig -> befejezés", function() {deepEqual( Stem("befejezéséig"), "befejezés");});
test("befejezésének -> befejezés", function() {deepEqual( Stem("befejezésének"), "befejezés");});
test("befejezésére -> befejezés", function() {deepEqual( Stem("befejezésére"), "befejezés");});
test("befejezését -> befejezés", function() {deepEqual( Stem("befejezését"), "befejezés");});
test("befejezésétől -> befejezés", function() {deepEqual( Stem("befejezésétől"), "befejezés");});
test("befejezésével -> befejezés", function() {deepEqual( Stem("befejezésével"), "befejezés");});
test("befejező -> befejező", function() {deepEqual( Stem("befejező"), "befejező");});
test("befejeződik -> befejeződ", function() {deepEqual( Stem("befejeződik"), "befejeződ");});
test("befejeződtek -> befejeződt", function() {deepEqual( Stem("befejeződtek"), "befejeződt");});
test("befejeződött -> befejeződöt", function() {deepEqual( Stem("befejeződött"), "befejeződöt");});
test("befejeződött -> befejeződöt", function() {deepEqual( Stem("befejeződött"), "befejeződöt");});
test("befektetett -> befektetet", function() {deepEqual( Stem("befektetett"), "befektetet");});
test("befektetni -> befektetn", function() {deepEqual( Stem("befektetni"), "befektetn");});
test("befektettük -> befektett", function() {deepEqual( Stem("befektettük"), "befektett");});
test("befektetve -> befektetv", function() {deepEqual( Stem("befektetve"), "befektetv");});
test("befektetésnek -> befektetés", function() {deepEqual( Stem("befektetésnek"), "befektetés");});
test("befektetésre -> befektetés", function() {deepEqual( Stem("befektetésre"), "befektetés");});
test("befektetéssel -> befektetés", function() {deepEqual( Stem("befektetéssel"), "befektetés");});
test("befektetést -> befektetés", function() {deepEqual( Stem("befektetést"), "befektetés");});
test("befektetésének -> befektetés", function() {deepEqual( Stem("befektetésének"), "befektetés");});
test("befektetésére -> befektetés", function() {deepEqual( Stem("befektetésére"), "befektetés");});
test("befektetését -> befektetés", function() {deepEqual( Stem("befektetését"), "befektetés");});
test("befektetésük -> befektetés", function() {deepEqual( Stem("befektetésük"), "befektetés");});
test("befektetésünk -> befektetés", function() {deepEqual( Stem("befektetésünk"), "befektetés");});
test("befektetés -> befektetés", function() {deepEqual( Stem("befektetés"), "befektetés");});
test("befektetése -> befektetés", function() {deepEqual( Stem("befektetése"), "befektetés");});
test("befektetései -> befektetés", function() {deepEqual( Stem("befektetései"), "befektetés");});
test("befektetéseik -> befektetés", function() {deepEqual( Stem("befektetéseik"), "befektetés");});
test("befektetéseiket -> befektetés", function() {deepEqual( Stem("befektetéseiket"), "befektetés");});
test("befektetéseink -> befektetés", function() {deepEqual( Stem("befektetéseink"), "befektetés");});
test("befektetéseiről -> befektetés", function() {deepEqual( Stem("befektetéseiről"), "befektetés");});
test("befektetéseit -> befektetés", function() {deepEqual( Stem("befektetéseit"), "befektetés");});
test("befektetéseitől -> befektetés", function() {deepEqual( Stem("befektetéseitől"), "befektetés");});
test("befektetések -> befektetés", function() {deepEqual( Stem("befektetések"), "befektetés");});
test("befektetéseket -> befektetés", function() {deepEqual( Stem("befektetéseket"), "befektetés");});
test("befektetésekkel -> befektetés", function() {deepEqual( Stem("befektetésekkel"), "befektetés");});
test("befektetésekre -> befektetés", function() {deepEqual( Stem("befektetésekre"), "befektetés");});
test("befektetési -> befektetés", function() {deepEqual( Stem("befektetési"), "befektetés");});
test("befektető-főosztályának -> befektető-főosztály", function() {deepEqual( Stem("befektető-főosztályának"), "befektető-főosztály");});
test("befektetői -> befektető", function() {deepEqual( Stem("befektetői"), "befektető");});
test("befektetőink -> befektető", function() {deepEqual( Stem("befektetőink"), "befektető");});
test("befektető -> befektető", function() {deepEqual( Stem("befektető"), "befektető");});
test("befektetője -> befektető", function() {deepEqual( Stem("befektetője"), "befektető");});
test("befektetők -> befektető", function() {deepEqual( Stem("befektetők"), "befektető");});
test("befektetőket -> befektető", function() {deepEqual( Stem("befektetőket"), "befektető");});
test("befektetőkhöz -> befektető", function() {deepEqual( Stem("befektetőkhöz"), "befektető");});
test("befektetőkkel -> befektető", function() {deepEqual( Stem("befektetőkkel"), "befektető");});
test("befektetőknek -> befektető", function() {deepEqual( Stem("befektetőknek"), "befektető");});
test("befektetőknek -> befektető", function() {deepEqual( Stem("befektetőknek"), "befektető");});
test("befektetőként -> befektető", function() {deepEqual( Stem("befektetőként"), "befektető");});
test("befektetőnek -> befektető", function() {deepEqual( Stem("befektetőnek"), "befektető");});
test("befektetővel -> befektető", function() {deepEqual( Stem("befektetővel"), "befektető");});
test("befele -> befel", function() {deepEqual( Stem("befele"), "befel");});
test("befelé -> befel", function() {deepEqual( Stem("befelé"), "befel");});
test("befizesse -> befizess", function() {deepEqual( Stem("befizesse"), "befizess");});
test("befizetendő -> befizetendő", function() {deepEqual( Stem("befizetendő"), "befizetendő");});
test("befizetett -> befizetet", function() {deepEqual( Stem("befizetett"), "befizetet");});
test("befizetik -> befizet", function() {deepEqual( Stem("befizetik"), "befizet");});
test("befizetni -> befizetn", function() {deepEqual( Stem("befizetni"), "befizetn");});
test("befizetem -> befizet", function() {deepEqual( Stem("befizetem"), "befizet");});
test("befizetnie -> befizetn", function() {deepEqual( Stem("befizetnie"), "befizetn");});
test("befizetniük -> befizetn", function() {deepEqual( Stem("befizetniük"), "befizetn");});
test("befizetnünk -> befizetn", function() {deepEqual( Stem("befizetnünk"), "befizetn");});
test("befizette -> befizett", function() {deepEqual( Stem("befizette"), "befizett");});
test("befizettek -> befizett", function() {deepEqual( Stem("befizettek"), "befizett");});
test("befizették -> befizette", function() {deepEqual( Stem("befizették"), "befizette");});
test("befizetési -> befizetés", function() {deepEqual( Stem("befizetési"), "befizetés");});
test("befizetés -> befizetés", function() {deepEqual( Stem("befizetés"), "befizetés");});
test("befizetése -> befizetés", function() {deepEqual( Stem("befizetése"), "befizetés");});
test("befizetések -> befizetés", function() {deepEqual( Stem("befizetések"), "befizetés");});
test("befizetésekből -> befizetés", function() {deepEqual( Stem("befizetésekből"), "befizetés");});
test("befizetéseket -> befizetés", function() {deepEqual( Stem("befizetéseket"), "befizetés");});
test("befizetéseknek -> befizetés", function() {deepEqual( Stem("befizetéseknek"), "befizetés");});
test("befizetésekre -> befizetés", function() {deepEqual( Stem("befizetésekre"), "befizetés");});
test("befizetésekről -> befizetés", function() {deepEqual( Stem("befizetésekről"), "befizetés");});
test("befizetésnek -> befizetés", function() {deepEqual( Stem("befizetésnek"), "befizetés");});
test("befizetésre -> befizetés", function() {deepEqual( Stem("befizetésre"), "befizetés");});
test("befizetéssel -> befizetés", function() {deepEqual( Stem("befizetéssel"), "befizetés");});
test("befizetést -> befizetés", function() {deepEqual( Stem("befizetést"), "befizetés");});
test("befizetéséig -> befizetés", function() {deepEqual( Stem("befizetéséig"), "befizetés");});
test("befizetésének -> befizetés", function() {deepEqual( Stem("befizetésének"), "befizetés");});
test("befizetésének -> befizetés", function() {deepEqual( Stem("befizetésének"), "befizetés");});
test("befizetésére -> befizetés", function() {deepEqual( Stem("befizetésére"), "befizetés");});
test("befizetéséről -> befizetés", function() {deepEqual( Stem("befizetéséről"), "befizetés");});
test("befizetését -> befizetés", function() {deepEqual( Stem("befizetését"), "befizetés");});
test("befizetésével -> befizetés", function() {deepEqual( Stem("befizetésével"), "befizetés");});
test("befizetők -> befizető", function() {deepEqual( Stem("befizetők"), "befizető");});
test("befizetőt -> befizető", function() {deepEqual( Stem("befizetőt"), "befizető");});
test("befogadhatatlan -> befogadhatatl", function() {deepEqual( Stem("befogadhatatlan"), "befogadhatatl");});
test("befogadott -> befogadot", function() {deepEqual( Stem("befogadott"), "befogadot");});
test("befogadhatok -> befogadhat", function() {deepEqual( Stem("befogadhatok"), "befogadhat");});
test("befogad -> befog", function() {deepEqual( Stem("befogad"), "befog");});
test("befogadni -> befogadn", function() {deepEqual( Stem("befogadni"), "befogadn");});
test("befogadniuk -> befogadn", function() {deepEqual( Stem("befogadniuk"), "befogadn");});
test("befogadtak -> befogadt", function() {deepEqual( Stem("befogadtak"), "befogadt");});
test("befogadták -> befogadta", function() {deepEqual( Stem("befogadták"), "befogadta");});
test("befogadásra -> befogadás", function() {deepEqual( Stem("befogadásra"), "befogadás");});
test("befogadására -> befogadás", function() {deepEqual( Stem("befogadására"), "befogadás");});
test("befogadásával -> befogadás", function() {deepEqual( Stem("befogadásával"), "befogadás");});
test("befogadó -> befogadó", function() {deepEqual( Stem("befogadó"), "befogadó");});
test("befogadókat -> befogadó", function() {deepEqual( Stem("befogadókat"), "befogadó");});
test("befogadóképessége -> befogadóképesség", function() {deepEqual( Stem("befogadóképessége"), "befogadóképesség");});
test("befogadókészségének -> befogadókészség", function() {deepEqual( Stem("befogadókészségének"), "befogadókészség");});
test("befoglaló -> befoglaló", function() {deepEqual( Stem("befoglaló"), "befoglaló");});
test("befoltozott -> befoltozot", function() {deepEqual( Stem("befoltozott"), "befoltozot");});
test("befolyhat -> befolyh", function() {deepEqual( Stem("befolyhat"), "befolyh");});
test("befolyt -> befoly", function() {deepEqual( Stem("befolyt"), "befoly");});
test("befolyó -> befolyó", function() {deepEqual( Stem("befolyó"), "befolyó");});
test("befolyás -> befolyás", function() {deepEqual( Stem("befolyás"), "befolyás");});
test("befolyása -> befolyás", function() {deepEqual( Stem("befolyása"), "befolyás");});
test("befolyáshoz -> befolyás", function() {deepEqual( Stem("befolyáshoz"), "befolyás");});
test("befolyásnak -> befolyás", function() {deepEqual( Stem("befolyásnak"), "befolyás");});
test("befolyásnál -> befolyás", function() {deepEqual( Stem("befolyásnál"), "befolyás");});
test("befolyások -> befolyás", function() {deepEqual( Stem("befolyások"), "befolyás");});
test("befolyással -> befolyás", function() {deepEqual( Stem("befolyással"), "befolyás");});
test("befolyást -> befolyás", function() {deepEqual( Stem("befolyást"), "befolyás");});
test("befolyástól -> befolyás", function() {deepEqual( Stem("befolyástól"), "befolyás");});
test("befolyásuk -> befolyás", function() {deepEqual( Stem("befolyásuk"), "befolyás");});
test("befolyásáról -> befolyás", function() {deepEqual( Stem("befolyásáról"), "befolyás");});
test("befolyását -> befolyás", function() {deepEqual( Stem("befolyását"), "befolyás");});
test("befolyásától -> befolyás", function() {deepEqual( Stem("befolyásától"), "befolyás");});
test("befolyásolhat -> befolyásolh", function() {deepEqual( Stem("befolyásolhat"), "befolyásolh");});
test("befolyásolhatja -> befolyásolhat", function() {deepEqual( Stem("befolyásolhatja"), "befolyásolhat");});
test("befolyásolhatják -> befolyásolhatja", function() {deepEqual( Stem("befolyásolhatják"), "befolyásolhatja");});
test("befolyásolhatók -> befolyásolható", function() {deepEqual( Stem("befolyásolhatók"), "befolyásolható");});
test("befolyásolhatóság -> befolyásolhatóság", function() {deepEqual( Stem("befolyásolhatóság"), "befolyásolhatóság");});
test("befolyásolhatóságban -> befolyásolhatóság", function() {deepEqual( Stem("befolyásolhatóságban"), "befolyásolhatóság");});
test("befolyásolja -> befolyásol", function() {deepEqual( Stem("befolyásolja"), "befolyásol");});
test("befolyásol -> befolyásol", function() {deepEqual( Stem("befolyásol"), "befolyásol");});
test("befolyásolják -> befolyásolja", function() {deepEqual( Stem("befolyásolják"), "befolyásolja");});
test("befolyásolni -> befolyásoln", function() {deepEqual( Stem("befolyásolni"), "befolyásoln");});
test("befolyásolt -> befolyásol", function() {deepEqual( Stem("befolyásolt"), "befolyásol");});
test("befolyásolta -> befolyásolt", function() {deepEqual( Stem("befolyásolta"), "befolyásolt");});
test("befolyásoltság -> befolyásoltság", function() {deepEqual( Stem("befolyásoltság"), "befolyásoltság");});
test("befolyásoltsága -> befolyásoltság", function() {deepEqual( Stem("befolyásoltsága"), "befolyásoltság");});
test("befolyásolása -> befolyásolás", function() {deepEqual( Stem("befolyásolása"), "befolyásolás");});
test("befolyásolási -> befolyásolás", function() {deepEqual( Stem("befolyásolási"), "befolyásolás");});
test("befolyásolásnak -> befolyásolás", function() {deepEqual( Stem("befolyásolásnak"), "befolyásolás");});
test("befolyásolásra -> befolyásolás", function() {deepEqual( Stem("befolyásolásra"), "befolyásolás");});
test("befolyásolást -> befolyásolás", function() {deepEqual( Stem("befolyásolást"), "befolyásolás");});
test("befolyásolására -> befolyásolás", function() {deepEqual( Stem("befolyásolására"), "befolyásolás");});
test("befolyásolását -> befolyásolás", function() {deepEqual( Stem("befolyásolását"), "befolyásolás");});
test("befolyásoló -> befolyásoló", function() {deepEqual( Stem("befolyásoló"), "befolyásoló");});
test("befolyásos -> befolyásos", function() {deepEqual( Stem("befolyásos"), "befolyásos");});
test("befolyásszerzéseként -> befolyásszerzés", function() {deepEqual( Stem("befolyásszerzéseként"), "befolyásszerzés");});
test("befolyásszerzésnek -> befolyásszerzés", function() {deepEqual( Stem("befolyásszerzésnek"), "befolyásszerzés");});
test("befolyásszerzésnél -> befolyásszerzés", function() {deepEqual( Stem("befolyásszerzésnél"), "befolyásszerzés");});
test("befolyásszerzést -> befolyásszerzés", function() {deepEqual( Stem("befolyásszerzést"), "befolyásszerzés");});
test("befolyásszerzésének -> befolyásszerzés", function() {deepEqual( Stem("befolyásszerzésének"), "befolyásszerzés");});
test("befolyásszerzését -> befolyásszerzés", function() {deepEqual( Stem("befolyásszerzését"), "befolyásszerzés");});
test("befolyásszerző -> befolyásszerző", function() {deepEqual( Stem("befolyásszerző"), "befolyásszerző");});
test("befordul -> befor", function() {deepEqual( Stem("befordul"), "befor");});
test("befordulok -> befordul", function() {deepEqual( Stem("befordulok"), "befordul");});
test("befordult -> befordul", function() {deepEqual( Stem("befordult"), "befordul");});
test("befurakodni -> befurakodn", function() {deepEqual( Stem("befurakodni"), "befurakodn");});
test("befutnak -> befut", function() {deepEqual( Stem("befutnak"), "befut");});
test("befutni -> befutn", function() {deepEqual( Stem("befutni"), "befutn");});
test("befutott -> befutot", function() {deepEqual( Stem("befutott"), "befutot");});
test("befuttassa -> befuttass", function() {deepEqual( Stem("befuttassa"), "befuttass");});
test("befutó -> befutó", function() {deepEqual( Stem("befutó"), "befutó");});
test("befutóknak -> befutó", function() {deepEqual( Stem("befutóknak"), "befutó");});
test("befér -> befér", function() {deepEqual( Stem("befér"), "befér");});
test("beférek -> befér", function() {deepEqual( Stem("beférek"), "befér");});
test("befértünk -> befért", function() {deepEqual( Stem("befértünk"), "befért");});
test("befőzés -> befőzés", function() {deepEqual( Stem("befőzés"), "befőzés");});
test("befűtenek -> befűt", function() {deepEqual( Stem("befűtenek"), "befűt");});
test("begipszelték -> begipszelte", function() {deepEqual( Stem("begipszelték"), "begipszelte");});
test("begubózódott -> begubózódot", function() {deepEqual( Stem("begubózódott"), "begubózódot");});
test("begurul -> begur", function() {deepEqual( Stem("begurul"), "begur");});
test("beguruljon -> begurulj", function() {deepEqual( Stem("beguruljon"), "begurulj");});
test("begurult -> begurul", function() {deepEqual( Stem("begurult"), "begurul");});
test("begyakorolására -> begyakorolás", function() {deepEqual( Stem("begyakorolására"), "begyakorolás");});
test("begyalogoltunk -> begyalogolt", function() {deepEqual( Stem("begyalogoltunk"), "begyalogolt");});
test("begyalogolunk -> begyalogol", function() {deepEqual( Stem("begyalogolunk"), "begyalogol");});
test("begyulladt -> begyull", function() {deepEqual( Stem("begyulladt"), "begyull");});
test("begyulladós -> begyulladós", function() {deepEqual( Stem("begyulladós"), "begyulladós");});
test("begyét -> begy", function() {deepEqual( Stem("begyét"), "begy");});
test("begyöpösödött -> begyöpösödöt", function() {deepEqual( Stem("begyöpösödött"), "begyöpösödöt");});
test("begyöttek -> begyött", function() {deepEqual( Stem("begyöttek"), "begyött");});
test("begyújtani -> begyújtan", function() {deepEqual( Stem("begyújtani"), "begyújtan");});
test("begyújtottunk -> begyújtott", function() {deepEqual( Stem("begyújtottunk"), "begyújtott");});
test("begyújtáshoz -> begyújtás", function() {deepEqual( Stem("begyújtáshoz"), "begyújtás");});
test("begyúratik -> begyúrat", function() {deepEqual( Stem("begyúratik"), "begyúrat");});
test("begyúrása -> begyúrás", function() {deepEqual( Stem("begyúrása"), "begyúrás");});
test("begyűjteni -> begyűjten", function() {deepEqual( Stem("begyűjteni"), "begyűjten");});
test("begyűjtenie -> begyűjten", function() {deepEqual( Stem("begyűjtenie"), "begyűjten");});
test("begyűjtötte -> begyűjtött", function() {deepEqual( Stem("begyűjtötte"), "begyűjtött");});
test("begyűjtöttük -> begyűjtött", function() {deepEqual( Stem("begyűjtöttük"), "begyűjtött");});
test("begyűjtése -> begyűjtés", function() {deepEqual( Stem("begyűjtése"), "begyűjtés");});
test("begyűjtött -> begyűjtöt", function() {deepEqual( Stem("begyűjtött"), "begyűjtöt");});
test("begyűrés -> begyűrés", function() {deepEqual( Stem("begyűrés"), "begyűrés");});
test("begépelhetjük -> begépelhet", function() {deepEqual( Stem("begépelhetjük"), "begépelhet");});
test("begépelhető -> begépelhető", function() {deepEqual( Stem("begépelhető"), "begépelhető");});
test("begépeli -> begépel", function() {deepEqual( Stem("begépeli"), "begépel");});
test("begépeljük -> begépel", function() {deepEqual( Stem("begépeljük"), "begépel");});
test("begépelni -> begépeln", function() {deepEqual( Stem("begépelni"), "begépeln");});
test("begépelnünk -> begépeln", function() {deepEqual( Stem("begépelnünk"), "begépeln");});
test("begépelt -> begépel", function() {deepEqual( Stem("begépelt"), "begépel");});
test("begépelése -> begépelés", function() {deepEqual( Stem("begépelése"), "begépelés");});
test("begépelését -> begépelés", function() {deepEqual( Stem("begépelését"), "begépelés");});
test("behabzsoltam -> behabzsolt", function() {deepEqual( Stem("behabzsoltam"), "behabzsolt");});
test("behajintsanak -> behajints", function() {deepEqual( Stem("behajintsanak"), "behajints");});
test("behajtandó -> behajtandó", function() {deepEqual( Stem("behajtandó"), "behajtandó");});
test("behajthatunk -> behajthat", function() {deepEqual( Stem("behajthatunk"), "behajthat");});
test("behajtható -> behajtható", function() {deepEqual( Stem("behajtható"), "behajtható");});
test("behajtják -> behajtja", function() {deepEqual( Stem("behajtják"), "behajtja");});
test("behajtani -> behajtan", function() {deepEqual( Stem("behajtani"), "behajtan");});
test("behajtottunk -> behajtott", function() {deepEqual( Stem("behajtottunk"), "behajtott");});
test("behajtsák -> behajtsa", function() {deepEqual( Stem("behajtsák"), "behajtsa");});
test("behajtása -> behajtás", function() {deepEqual( Stem("behajtása"), "behajtás");});
test("behajtva -> behajtv", function() {deepEqual( Stem("behajtva"), "behajtv");});
test("behajíthassam -> behajíthass", function() {deepEqual( Stem("behajíthassam"), "behajíthass");});
test("behatol -> behatol", function() {deepEqual( Stem("behatol"), "behatol");});
test("behatolni -> behatoln", function() {deepEqual( Stem("behatolni"), "behatoln");});
test("behatolt -> behatol", function() {deepEqual( Stem("behatolt"), "behatol");});
test("behatolás -> behatolás", function() {deepEqual( Stem("behatolás"), "behatolás");});
test("behatolásra -> behatolás", function() {deepEqual( Stem("behatolásra"), "behatolás");});
test("behatoló -> behatoló", function() {deepEqual( Stem("behatoló"), "behatoló");});
test("behatolók -> behatoló", function() {deepEqual( Stem("behatolók"), "behatoló");});
test("behatolókat -> behatoló", function() {deepEqual( Stem("behatolókat"), "behatoló");});
test("behatárolja -> behatárol", function() {deepEqual( Stem("behatárolja"), "behatárol");});
test("behatárolása -> behatárolás", function() {deepEqual( Stem("behatárolása"), "behatárolás");});
test("behatás -> behatás", function() {deepEqual( Stem("behatás"), "behatás");});
test("beható -> beható", function() {deepEqual( Stem("beható"), "beható");});
test("behatóbban -> behatób", function() {deepEqual( Stem("behatóbban"), "behatób");});
test("behavazott -> behavazot", function() {deepEqual( Stem("behavazott"), "behavazot");});
test("behelyettesítése -> behelyettesítés", function() {deepEqual( Stem("behelyettesítése"), "behelyettesítés");});
test("behelyezett -> behelyezet", function() {deepEqual( Stem("behelyezett"), "behelyezet");});
test("behelyezésére -> behelyezés", function() {deepEqual( Stem("behelyezésére"), "behelyezés");});
test("behelyezését -> behelyezés", function() {deepEqual( Stem("behelyezését"), "behelyezés");});
test("behipírozzák -> behipírozza", function() {deepEqual( Stem("behipírozzák"), "behipírozza");});
test("behozatal -> behozatal", function() {deepEqual( Stem("behozatal"), "behozatal");});
test("behozatala -> behozatal", function() {deepEqual( Stem("behozatala"), "behozatal");});
test("behozatalukat -> behozatal", function() {deepEqual( Stem("behozatalukat"), "behozatal");});
test("behozatalára -> behozatal", function() {deepEqual( Stem("behozatalára"), "behozatal");});
test("behozatalát -> behozatal", function() {deepEqual( Stem("behozatalát"), "behozatal");});
test("behozatali -> behozatal", function() {deepEqual( Stem("behozatali"), "behozatal");});
test("behozott -> behozot", function() {deepEqual( Stem("behozott"), "behozot");});
test("behozni -> behozn", function() {deepEqual( Stem("behozni"), "behozn");});
test("behoz -> be", function() {deepEqual( Stem("behoz"), "be");});
test("behozta -> behozt", function() {deepEqual( Stem("behozta"), "behozt");});
test("behoztak -> behozt", function() {deepEqual( Stem("behoztak"), "behozt");});
test("behozza -> behozz", function() {deepEqual( Stem("behozza"), "behozz");});
test("behunyta -> behunyt", function() {deepEqual( Stem("behunyta"), "behunyt");});
test("behunytam -> behunyt", function() {deepEqual( Stem("behunytam"), "behunyt");});
test("behálóznia -> behálózn", function() {deepEqual( Stem("behálóznia"), "behálózn");});
test("behálózva -> behálózv", function() {deepEqual( Stem("behálózva"), "behálózv");});
test("behálózza -> behálózz", function() {deepEqual( Stem("behálózza"), "behálózz");});
test("behálózott -> behálózot", function() {deepEqual( Stem("behálózott"), "behálózot");});
test("behálózó -> behálózó", function() {deepEqual( Stem("behálózó"), "behálózó");});
test("behívni -> behívn", function() {deepEqual( Stem("behívni"), "behívn");});
test("behívtak -> behívt", function() {deepEqual( Stem("behívtak"), "behívt");});
test("behívott -> behívot", function() {deepEqual( Stem("behívott"), "behívot");});
test("behívással -> behívás", function() {deepEqual( Stem("behívással"), "behívás");});
test("behívó -> behívó", function() {deepEqual( Stem("behívó"), "behívó");});
test("behívóporttal -> behívópor", function() {deepEqual( Stem("behívóporttal"), "behívópor");});
test("behódolni -> behódoln", function() {deepEqual( Stem("behódolni"), "behódoln");});
test("behódolt -> behódol", function() {deepEqual( Stem("behódolt"), "behódol");});
test("behódolásra -> behódolás", function() {deepEqual( Stem("behódolásra"), "behódolás");});
test("behúzta -> behúzt", function() {deepEqual( Stem("behúzta"), "behúzt");});
test("behúzódott -> behúzódot", function() {deepEqual( Stem("behúzódott"), "behúzódot");});
test("beidegződött -> beidegződöt", function() {deepEqual( Stem("beidegződött"), "beidegződöt");});
test("beidézték -> beidézte", function() {deepEqual( Stem("beidézték"), "beidézte");});
test("beigazolódik -> beigazolód", function() {deepEqual( Stem("beigazolódik"), "beigazolód");});
test("beigazolódni -> beigazolódn", function() {deepEqual( Stem("beigazolódni"), "beigazolódn");});
test("beigazolódott -> beigazolódot", function() {deepEqual( Stem("beigazolódott"), "beigazolódot");});
test("beigazolódtak -> beigazolódt", function() {deepEqual( Stem("beigazolódtak"), "beigazolódt");});
test("beigazítja -> beigazít", function() {deepEqual( Stem("beigazítja"), "beigazít");});
test("beikszelve -> beikszelv", function() {deepEqual( Stem("beikszelve"), "beikszelv");});
test("beiktatják -> beiktatja", function() {deepEqual( Stem("beiktatják"), "beiktatja");});
test("bekapcsoljuk -> bekapcsol", function() {deepEqual( Stem("bekapcsoljuk"), "bekapcsol");});
test("bekapcsol -> bekapcsol", function() {deepEqual( Stem("bekapcsol"), "bekapcsol");});
test("bekapcsolják -> bekapcsolja", function() {deepEqual( Stem("bekapcsolják"), "bekapcsolja");});
test("bekapcsol -> bekapcsol", function() {deepEqual( Stem("bekapcsol"), "bekapcsol");});
test("bekapcsolni -> bekapcsoln", function() {deepEqual( Stem("bekapcsolni"), "bekapcsoln");});
test("bekapcsolom -> bekapcsol", function() {deepEqual( Stem("bekapcsolom"), "bekapcsol");});
test("bekapcsoltak -> bekapcsolt", function() {deepEqual( Stem("bekapcsoltak"), "bekapcsolt");});
test("bekapcsoltam -> bekapcsolt", function() {deepEqual( Stem("bekapcsoltam"), "bekapcsolt");});
test("bekapcsoltuk -> bekapcsolt", function() {deepEqual( Stem("bekapcsoltuk"), "bekapcsolt");});
test("bekapcsolták -> bekapcsolta", function() {deepEqual( Stem("bekapcsolták"), "bekapcsolta");});
test("bekapcsolva -> bekapcsolv", function() {deepEqual( Stem("bekapcsolva"), "bekapcsolv");});
test("bekapcsolás -> bekapcsolás", function() {deepEqual( Stem("bekapcsolás"), "bekapcsolás");});
test("bekapcsolása -> bekapcsolás", function() {deepEqual( Stem("bekapcsolása"), "bekapcsolás");});
test("bekapcsolásakor -> bekapcsolás", function() {deepEqual( Stem("bekapcsolásakor"), "bekapcsolás");});
test("bekapcsoláskor -> bekapcsolás", function() {deepEqual( Stem("bekapcsoláskor"), "bekapcsolás");});
test("bekapcsolásához -> bekapcsolás", function() {deepEqual( Stem("bekapcsolásához"), "bekapcsolás");});
test("bekapcsolására -> bekapcsolás", function() {deepEqual( Stem("bekapcsolására"), "bekapcsolás");});
test("bekapcsolásával -> bekapcsolás", function() {deepEqual( Stem("bekapcsolásával"), "bekapcsolás");});
test("bekapcsolódnak -> bekapcsoló", function() {deepEqual( Stem("bekapcsolódnak"), "bekapcsoló");});
test("bekapcsolódnának -> bekapcsolódn", function() {deepEqual( Stem("bekapcsolódnának"), "bekapcsolódn");});
test("bekapcsolódott -> bekapcsolódot", function() {deepEqual( Stem("bekapcsolódott"), "bekapcsolódot");});
test("bekapcsolódtunk -> bekapcsolódt", function() {deepEqual( Stem("bekapcsolódtunk"), "bekapcsolódt");});
test("bekapcsolódunk -> bekapcsolód", function() {deepEqual( Stem("bekapcsolódunk"), "bekapcsolód");});
test("bekapjam -> bekapj", function() {deepEqual( Stem("bekapjam"), "bekapj");});
test("bekapom -> bekap", function() {deepEqual( Stem("bekapom"), "bekap");});
test("bekaptak -> bekapt", function() {deepEqual( Stem("bekaptak"), "bekapt");});
test("bekaptam -> bekapt", function() {deepEqual( Stem("bekaptam"), "bekapt");});
test("bekarikázta -> bekarikázt", function() {deepEqual( Stem("bekarikázta"), "bekarikázt");});
test("bekebelezte -> bekebelezt", function() {deepEqual( Stem("bekebelezte"), "bekebelezt");});
test("bekente -> bekent", function() {deepEqual( Stem("bekente"), "bekent");});
test("bekergették -> bekergette", function() {deepEqual( Stem("bekergették"), "bekergette");});
test("bekerített -> bekerítet", function() {deepEqual( Stem("bekerített"), "bekerítet");});
test("bekerülhetnek -> bekerülhet", function() {deepEqual( Stem("bekerülhetnek"), "bekerülhet");});
test("bekerüljenek -> bekerül", function() {deepEqual( Stem("bekerüljenek"), "bekerül");});
test("bekerül -> beker", function() {deepEqual( Stem("bekerül"), "beker");});
test("bekerülnek -> bekerül", function() {deepEqual( Stem("bekerülnek"), "bekerül");});
test("bekerülni -> bekerüln", function() {deepEqual( Stem("bekerülni"), "bekerüln");});
test("bekerülnöm -> bekerülnö", function() {deepEqual( Stem("bekerülnöm"), "bekerülnö");});
test("bekerültek -> bekerült", function() {deepEqual( Stem("bekerültek"), "bekerült");});
test("bekerült -> bekerül", function() {deepEqual( Stem("bekerült"), "bekerül");});
test("bekerültem -> bekerült", function() {deepEqual( Stem("bekerültem"), "bekerült");});
test("bekerülök -> bekerül", function() {deepEqual( Stem("bekerülök"), "bekerül");});
test("bekerülünk -> bekerül", function() {deepEqual( Stem("bekerülünk"), "bekerül");});
test("bekerülését -> bekerülés", function() {deepEqual( Stem("bekerülését"), "bekerülés");});
test("bekerülő -> bekerülő", function() {deepEqual( Stem("bekerülő"), "bekerülő");});
test("bekevernek -> bekever", function() {deepEqual( Stem("bekevernek"), "bekever");});
test("bekezd -> bekez", function() {deepEqual( Stem("bekezd"), "bekez");});
test("bekezdésnek -> bekezdés", function() {deepEqual( Stem("bekezdésnek"), "bekezdés");});
test("bekezdésnél -> bekezdés", function() {deepEqual( Stem("bekezdésnél"), "bekezdés");});
test("bekezdésre -> bekezdés", function() {deepEqual( Stem("bekezdésre"), "bekezdés");});
test("bekezdéssel -> bekezdés", function() {deepEqual( Stem("bekezdéssel"), "bekezdés");});
test("bekezdésébe -> bekezdés", function() {deepEqual( Stem("bekezdésébe"), "bekezdés");});
test("bekezdésében -> bekezdés", function() {deepEqual( Stem("bekezdésében"), "bekezdés");});
test("bekezdéséből -> bekezdés", function() {deepEqual( Stem("bekezdéséből"), "bekezdés");});
test("bekezdéséhez -> bekezdés", function() {deepEqual( Stem("bekezdéséhez"), "bekezdés");});
test("bekezdésén -> bekezdés", function() {deepEqual( Stem("bekezdésén"), "bekezdés");});
test("bekezdésének -> bekezdés", function() {deepEqual( Stem("bekezdésének"), "bekezdés");});
test("bekezdésének -> bekezdés", function() {deepEqual( Stem("bekezdésének"), "bekezdés");});
test("bekezdésénél -> bekezdés", function() {deepEqual( Stem("bekezdésénél"), "bekezdés");});
test("bekezdésére -> bekezdés", function() {deepEqual( Stem("bekezdésére"), "bekezdés");});
test("bekezdését -> bekezdés", function() {deepEqual( Stem("bekezdését"), "bekezdés");});
test("bekezdésétől -> bekezdés", function() {deepEqual( Stem("bekezdésétől"), "bekezdés");});
test("bekezdésével -> bekezdés", function() {deepEqual( Stem("bekezdésével"), "bekezdés");});
test("bekezdés -> bekezdés", function() {deepEqual( Stem("bekezdés"), "bekezdés");});
test("bekezdésben -> bekezdés", function() {deepEqual( Stem("bekezdésben"), "bekezdés");});
test("bekezdésből -> bekezdés", function() {deepEqual( Stem("bekezdésből"), "bekezdés");});
test("bekezdése -> bekezdés", function() {deepEqual( Stem("bekezdése"), "bekezdés");});
test("bekezdései -> bekezdés", function() {deepEqual( Stem("bekezdései"), "bekezdés");});
test("bekezdéseiben -> bekezdés", function() {deepEqual( Stem("bekezdéseiben"), "bekezdés");});
test("bekezdéseinek -> bekezdés", function() {deepEqual( Stem("bekezdéseinek"), "bekezdés");});
test("bekezdéseire -> bekezdés", function() {deepEqual( Stem("bekezdéseire"), "bekezdés");});
test("bekezdéseit -> bekezdés", function() {deepEqual( Stem("bekezdéseit"), "bekezdés");});
test("bekezdések -> bekezdés", function() {deepEqual( Stem("bekezdések"), "bekezdés");});
test("bekezdésekben -> bekezdés", function() {deepEqual( Stem("bekezdésekben"), "bekezdés");});
test("bekezdéseket -> bekezdés", function() {deepEqual( Stem("bekezdéseket"), "bekezdés");});
test("bekezdéseként -> bekezdés", function() {deepEqual( Stem("bekezdéseként"), "bekezdés");});
test("bekezdési -> bekezdés", function() {deepEqual( Stem("bekezdési"), "bekezdés");});
test("bekiáltott -> bekiáltot", function() {deepEqual( Stem("bekiáltott"), "bekiáltot");});
test("bekopogjon -> bekopogj", function() {deepEqual( Stem("bekopogjon"), "bekopogj");});
test("bekopogott -> bekopogot", function() {deepEqual( Stem("bekopogott"), "bekopogot");});
test("bekopogtam -> bekopogt", function() {deepEqual( Stem("bekopogtam"), "bekopogt");});
test("bekopogtatott -> bekopogtatot", function() {deepEqual( Stem("bekopogtatott"), "bekopogtatot");});
test("bekukkantott -> bekukkantot", function() {deepEqual( Stem("bekukkantott"), "bekukkantot");});
test("bekukkantó -> bekukkantó", function() {deepEqual( Stem("bekukkantó"), "bekukkantó");});
test("bekábelezni -> bekábelezn", function() {deepEqual( Stem("bekábelezni"), "bekábelezn");});
test("beképzelt -> beképzel", function() {deepEqual( Stem("beképzelt"), "beképzel");});
test("beképzeltek -> beképzelt", function() {deepEqual( Stem("beképzeltek"), "beképzelt");});
test("beképzelten -> beképzelt", function() {deepEqual( Stem("beképzelten"), "beképzelt");});
test("beképzeltnek -> beképzelt", function() {deepEqual( Stem("beképzeltnek"), "beképzelt");});
test("beképzeltségnek -> beképzeltség", function() {deepEqual( Stem("beképzeltségnek"), "beképzeltség");});
test("bekérette -> bekérett", function() {deepEqual( Stem("bekérette"), "bekérett");});
test("bekészült -> bekészül", function() {deepEqual( Stem("bekészült"), "bekészül");});
test("bekészülések -> bekészülés", function() {deepEqual( Stem("bekészülések"), "bekészülés");});
test("bekísért -> bekís", function() {deepEqual( Stem("bekísért"), "bekís");});
test("bekísérte -> bekísért", function() {deepEqual( Stem("bekísérte"), "bekísért");});
test("beköltözhettek -> beköltözhett", function() {deepEqual( Stem("beköltözhettek"), "beköltözhett");});
test("beköltözni -> beköltözn", function() {deepEqual( Stem("beköltözni"), "beköltözn");});
test("beköltözés -> beköltözés", function() {deepEqual( Stem("beköltözés"), "beköltözés");});
test("beköltözők -> beköltöző", function() {deepEqual( Stem("beköltözők"), "beköltöző");});
test("beköszöntekor -> beköszönt", function() {deepEqual( Stem("beköszöntekor"), "beköszönt");});
test("beköszöntével -> beköszönt", function() {deepEqual( Stem("beköszöntével"), "beköszönt");});
test("beköszöntőben -> beköszöntő", function() {deepEqual( Stem("beköszöntőben"), "beköszöntő");});
test("beköszönök -> beköszön", function() {deepEqual( Stem("beköszönök"), "beköszön");});
test("bekötve -> bekötv", function() {deepEqual( Stem("bekötve"), "bekötv");});
test("bekötött -> bekötöt", function() {deepEqual( Stem("bekötött"), "bekötöt");});
test("bekötötték -> bekötötte", function() {deepEqual( Stem("bekötötték"), "bekötötte");});
test("bekötözte -> bekötözt", function() {deepEqual( Stem("bekötözte"), "bekötözt");});
test("bekötöztük -> bekötözt", function() {deepEqual( Stem("bekötöztük"), "bekötözt");});
test("bekötözve -> bekötözv", function() {deepEqual( Stem("bekötözve"), "bekötözv");});
test("bekövetkezhet -> bekövetkezh", function() {deepEqual( Stem("bekövetkezhet"), "bekövetkezh");});
test("bekövetkezik -> bekövetkez", function() {deepEqual( Stem("bekövetkezik"), "bekövetkez");});
test("bekövetkezett -> bekövetkezet", function() {deepEqual( Stem("bekövetkezett"), "bekövetkezet");});
test("bekövetkezni -> bekövetkezn", function() {deepEqual( Stem("bekövetkezni"), "bekövetkezn");});
test("bekövetkeznie -> bekövetkezn", function() {deepEqual( Stem("bekövetkeznie"), "bekövetkezn");});
test("bekövetkezte -> bekövetkezt", function() {deepEqual( Stem("bekövetkezte"), "bekövetkezt");});
test("bekövetkeztekor -> bekövetkezt", function() {deepEqual( Stem("bekövetkeztekor"), "bekövetkezt");});
test("bekövetkeztéig -> bekövetkezt", function() {deepEqual( Stem("bekövetkeztéig"), "bekövetkezt");});
test("bekövetkeztétől -> bekövetkezt", function() {deepEqual( Stem("bekövetkeztétől"), "bekövetkezt");});
test("bekövetkeztével -> bekövetkezt", function() {deepEqual( Stem("bekövetkeztével"), "bekövetkezt");});
test("bekövetkezése -> bekövetkezés", function() {deepEqual( Stem("bekövetkezése"), "bekövetkezés");});
test("bekövetkezéséig -> bekövetkezés", function() {deepEqual( Stem("bekövetkezéséig"), "bekövetkezés");});
test("bekövetkezését -> bekövetkezés", function() {deepEqual( Stem("bekövetkezését"), "bekövetkezés");});
test("bekövetkezésű -> bekövetkezésű", function() {deepEqual( Stem("bekövetkezésű"), "bekövetkezésű");});
test("bekövetkező -> bekövetkező", function() {deepEqual( Stem("bekövetkező"), "bekövetkező");});
test("beküldeni -> bekülden", function() {deepEqual( Stem("beküldeni"), "bekülden");});
test("beküldtem -> beküldt", function() {deepEqual( Stem("beküldtem"), "beküldt");});
test("beküldött -> beküldöt", function() {deepEqual( Stem("beküldött"), "beküldöt");});
test("belakmároztam -> belakmározt", function() {deepEqual( Stem("belakmároztam"), "belakmározt");});
test("belaktunk -> belakt", function() {deepEqual( Stem("belaktunk"), "belakt");});
test("belapult -> belapul", function() {deepEqual( Stem("belapult"), "belapul");});
test("belbudai -> belbud", function() {deepEqual( Stem("belbudai"), "belbud");});
test("beleadja -> belead", function() {deepEqual( Stem("beleadja"), "belead");});
test("beleadtunk -> beleadt", function() {deepEqual( Stem("beleadtunk"), "beleadt");});
test("beleadva -> beleadv", function() {deepEqual( Stem("beleadva"), "beleadv");});
test("beleadással -> beleadás", function() {deepEqual( Stem("beleadással"), "beleadás");});
test("belebeszél -> belebeszél", function() {deepEqual( Stem("belebeszél"), "belebeszél");});
test("belebetegedett -> belebetegedet", function() {deepEqual( Stem("belebetegedett"), "belebetegedet");});
test("belebonyolítani -> belebonyolítan", function() {deepEqual( Stem("belebonyolítani"), "belebonyolítan");});
test("belebonyolódni -> belebonyolódn", function() {deepEqual( Stem("belebonyolódni"), "belebonyolódn");});
test("belebonyolódtak -> belebonyolódt", function() {deepEqual( Stem("belebonyolódtak"), "belebonyolódt");});
test("beleborultak -> beleborult", function() {deepEqual( Stem("beleborultak"), "beleborult");});
test("belebotlottak -> belebotlott", function() {deepEqual( Stem("belebotlottak"), "belebotlott");});
test("belebotlottam -> belebotlott", function() {deepEqual( Stem("belebotlottam"), "belebotlott");});
test("belebuksz -> belebuksz", function() {deepEqual( Stem("belebuksz"), "belebuksz");});
test("belebámulni -> belebámuln", function() {deepEqual( Stem("belebámulni"), "belebámuln");});
test("belebámult -> belebámul", function() {deepEqual( Stem("belebámult"), "belebámul");});
test("belebújtam -> belebújt", function() {deepEqual( Stem("belebújtam"), "belebújt");});
test("belecsapott -> belecsapot", function() {deepEqual( Stem("belecsapott"), "belecsapot");});
test("belecsikordultak -> belecsikordult", function() {deepEqual( Stem("belecsikordultak"), "belecsikordult");});
test("belecsobbant -> belecsobban", function() {deepEqual( Stem("belecsobbant"), "belecsobban");});
test("belecsöppentem -> belecsöppent", function() {deepEqual( Stem("belecsöppentem"), "belecsöppent");});
test("belecsúszik -> belecsúsz", function() {deepEqual( Stem("belecsúszik"), "belecsúsz");});
test("beledobta -> beledobt", function() {deepEqual( Stem("beledobta"), "beledobt");});
test("beledobálták -> beledobálta", function() {deepEqual( Stem("beledobálták"), "beledobálta");});
test("beledugom -> beledug", function() {deepEqual( Stem("beledugom"), "beledug");});
test("beledöfött -> beledöföt", function() {deepEqual( Stem("beledöfött"), "beledöföt");});
test("beledögleni -> beledöglen", function() {deepEqual( Stem("beledögleni"), "beledöglen");});
test("beleegyezett -> beleegyezet", function() {deepEqual( Stem("beleegyezett"), "beleegyezet");});
test("beleegyeztek -> beleegyezt", function() {deepEqual( Stem("beleegyeztek"), "beleegyezt");});
test("beleegyeztem -> beleegyezt", function() {deepEqual( Stem("beleegyeztem"), "beleegyezt");});
test("beleegyezési -> beleegyezés", function() {deepEqual( Stem("beleegyezési"), "beleegyezés");});
test("beleegyezésnek -> beleegyezés", function() {deepEqual( Stem("beleegyezésnek"), "beleegyezés");});
test("beleegyezés -> beleegyezés", function() {deepEqual( Stem("beleegyezés"), "beleegyezés");});
test("beleegyezése -> beleegyezés", function() {deepEqual( Stem("beleegyezése"), "beleegyezés");});
test("beleegyezéshez -> beleegyezés", function() {deepEqual( Stem("beleegyezéshez"), "beleegyezés");});
test("beleegyezéssel -> beleegyezés", function() {deepEqual( Stem("beleegyezéssel"), "beleegyezés");});
test("beleegyezéséből -> beleegyezés", function() {deepEqual( Stem("beleegyezéséből"), "beleegyezés");});
test("beleegyezéséhez -> beleegyezés", function() {deepEqual( Stem("beleegyezéséhez"), "beleegyezés");});
test("beleegyezésén -> beleegyezés", function() {deepEqual( Stem("beleegyezésén"), "beleegyezés");});
test("beleegyezésére -> beleegyezés", function() {deepEqual( Stem("beleegyezésére"), "beleegyezés");});
test("beleegyezését -> beleegyezés", function() {deepEqual( Stem("beleegyezését"), "beleegyezés");});
test("beleegyezésével -> beleegyezés", function() {deepEqual( Stem("beleegyezésével"), "beleegyezés");});
test("beleejtették -> beleejtette", function() {deepEqual( Stem("beleejtették"), "beleejtette");});
test("beleerősített -> beleerősítet", function() {deepEqual( Stem("beleerősített"), "beleerősítet");});
test("beleeshetünk -> beleeshet", function() {deepEqual( Stem("beleeshetünk"), "beleeshet");});
test("beleesik -> belees", function() {deepEqual( Stem("beleesik"), "belees");});
test("beleesni -> beleesn", function() {deepEqual( Stem("beleesni"), "beleesn");});
test("beleesnék -> beleesne", function() {deepEqual( Stem("beleesnék"), "beleesne");});
test("beleestem -> beleest", function() {deepEqual( Stem("beleestem"), "beleest");});
test("beleevődött -> beleevődöt", function() {deepEqual( Stem("beleevődött"), "beleevődöt");});
test("belefestékezhetnek -> belefestékezhet", function() {deepEqual( Stem("belefestékezhetnek"), "belefestékezhet");});
test("belefoglal -> belefoglal", function() {deepEqual( Stem("belefoglal"), "belefoglal");});
test("belefoglalni -> belefoglaln", function() {deepEqual( Stem("belefoglalni"), "belefoglaln");});
test("belefoglalva -> belefoglalv", function() {deepEqual( Stem("belefoglalva"), "belefoglalv");});
test("belefoglalták -> belefoglalta", function() {deepEqual( Stem("belefoglalták"), "belefoglalta");});
test("belefoglalt -> belefoglal", function() {deepEqual( Stem("belefoglalt"), "belefoglal");});
test("belefoglalása -> belefoglalás", function() {deepEqual( Stem("belefoglalása"), "belefoglalás");});
test("belefogni -> belefogn", function() {deepEqual( Stem("belefogni"), "belefogn");});
test("belefogtak -> belefogt", function() {deepEqual( Stem("belefogtak"), "belefogt");});
test("belefulladunk -> belefullad", function() {deepEqual( Stem("belefulladunk"), "belefullad");});
test("belefáradnék -> belefáradne", function() {deepEqual( Stem("belefáradnék"), "belefáradne");});
test("belefáradt -> belefár", function() {deepEqual( Stem("belefáradt"), "belefár");});
test("belefér -> belefér", function() {deepEqual( Stem("belefér"), "belefér");});
test("belefértünk -> belefért", function() {deepEqual( Stem("belefértünk"), "belefért");});
test("belefújt -> belefúj", function() {deepEqual( Stem("belefújt"), "belefúj");});
test("belegabalyodott -> belegabalyodot", function() {deepEqual( Stem("belegabalyodott"), "belegabalyodot");});
test("belegebedhetünk -> belegebedhet", function() {deepEqual( Stem("belegebedhetünk"), "belegebedhet");});
test("belegebedünk -> belegebed", function() {deepEqual( Stem("belegebedünk"), "belegebed");});
test("belegondol -> belegondol", function() {deepEqual( Stem("belegondol"), "belegondol");});
test("belegondolni -> belegondoln", function() {deepEqual( Stem("belegondolni"), "belegondoln");});
test("belegondolok -> belegondol", function() {deepEqual( Stem("belegondolok"), "belegondol");});
test("belegondoltam -> belegondolt", function() {deepEqual( Stem("belegondoltam"), "belegondolt");});
test("belegondoltunk -> belegondolt", function() {deepEqual( Stem("belegondoltunk"), "belegondolt");});
test("belegondolunk -> belegondol", function() {deepEqual( Stem("belegondolunk"), "belegondol");});
test("belegondolva -> belegondolv", function() {deepEqual( Stem("belegondolva"), "belegondolv");});
test("belegubancolódtam -> belegubancolódt", function() {deepEqual( Stem("belegubancolódtam"), "belegubancolódt");});
test("belegyezés -> belegyezés", function() {deepEqual( Stem("belegyezés"), "belegyezés");});
test("belegyezése -> belegyezés", function() {deepEqual( Stem("belegyezése"), "belegyezés");});
test("belegyöttem -> belegyött", function() {deepEqual( Stem("belegyöttem"), "belegyött");});
test("belegyövök -> belegyöv", function() {deepEqual( Stem("belegyövök"), "belegyöv");});
test("belehajszolt -> belehajszol", function() {deepEqual( Stem("belehajszolt"), "belehajszol");});
test("belehajszolták -> belehajszolta", function() {deepEqual( Stem("belehajszolták"), "belehajszolta");});
test("belehaladt -> belehal", function() {deepEqual( Stem("belehaladt"), "belehal");});
test("belehalni -> belehaln", function() {deepEqual( Stem("belehalni"), "belehaln");});
test("belehalt -> belehal", function() {deepEqual( Stem("belehalt"), "belehal");});
test("beleharapott -> beleharapot", function() {deepEqual( Stem("beleharapott"), "beleharapot");});
test("beleharapva -> beleharapv", function() {deepEqual( Stem("beleharapva"), "beleharapv");});
test("belehasított -> belehasítot", function() {deepEqual( Stem("belehasított"), "belehasítot");});
test("belehetne -> belehetn", function() {deepEqual( Stem("belehetne"), "belehetn");});
test("beleillet -> beleill", function() {deepEqual( Stem("beleillet"), "beleill");});
test("beleillett -> beleillet", function() {deepEqual( Stem("beleillett"), "beleillet");});
test("beleitatni -> beleitatn", function() {deepEqual( Stem("beleitatni"), "beleitatn");});
test("beleivódott -> beleivódot", function() {deepEqual( Stem("beleivódott"), "beleivódot");});
test("beleizzadt -> beleizz", function() {deepEqual( Stem("beleizzadt"), "beleizz");});
test("belejöjj -> belejöjj", function() {deepEqual( Stem("belejöjj"), "belejöjj");});
test("belejön -> belej", function() {deepEqual( Stem("belejön"), "belej");});
test("belejöttem -> belejött", function() {deepEqual( Stem("belejöttem"), "belejött");});
test("belejöttünk -> belejött", function() {deepEqual( Stem("belejöttünk"), "belejött");});
test("belejövök -> belejöv", function() {deepEqual( Stem("belejövök"), "belejöv");});
test("belekapaszkodni -> belekapaszkodn", function() {deepEqual( Stem("belekapaszkodni"), "belekapaszkodn");});
test("belekapaszkodtam -> belekapaszkodt", function() {deepEqual( Stem("belekapaszkodtam"), "belekapaszkodt");});
test("belekapcsolódást -> belekapcsolódás", function() {deepEqual( Stem("belekapcsolódást"), "belekapcsolódás");});
test("belekavart -> belekavar", function() {deepEqual( Stem("belekavart"), "belekavar");});
test("belekerülnek -> belekerül", function() {deepEqual( Stem("belekerülnek"), "belekerül");});
test("belekeverik -> belekever", function() {deepEqual( Stem("belekeverik"), "belekever");});
test("belekezdeni -> belekezden", function() {deepEqual( Stem("belekezdeni"), "belekezden");});
test("belekezdtek -> belekezdt", function() {deepEqual( Stem("belekezdtek"), "belekezdt");});
test("belekezdtem -> belekezdt", function() {deepEqual( Stem("belekezdtem"), "belekezdt");});
test("belekezdtünk -> belekezdt", function() {deepEqual( Stem("belekezdtünk"), "belekezdt");});
test("belekezdünk -> belekezd", function() {deepEqual( Stem("belekezdünk"), "belekezd");});
test("belekiáltott -> belekiáltot", function() {deepEqual( Stem("belekiáltott"), "belekiáltot");});
test("belekukkanthattam -> belekukkanthatt", function() {deepEqual( Stem("belekukkanthattam"), "belekukkanthatt");});
test("beleképzeltem -> beleképzelt", function() {deepEqual( Stem("beleképzeltem"), "beleképzelt");});
test("belekérdez -> belekérdez", function() {deepEqual( Stem("belekérdez"), "belekérdez");});
test("belekóstolni -> belekóstoln", function() {deepEqual( Stem("belekóstolni"), "belekóstoln");});
test("belekóstolt -> belekóstol", function() {deepEqual( Stem("belekóstolt"), "belekóstol");});
test("belekötne -> belekötn", function() {deepEqual( Stem("belekötne"), "belekötn");});
test("belelendültek -> belelendült", function() {deepEqual( Stem("belelendültek"), "belelendült");});
test("belelendültünk -> belelendült", function() {deepEqual( Stem("belelendültünk"), "belelendült");});
test("belelát -> belel", function() {deepEqual( Stem("belelát"), "belel");});
test("beleléptem -> belelépt", function() {deepEqual( Stem("beleléptem"), "belelépt");});
test("belelökte -> belelökt", function() {deepEqual( Stem("belelökte"), "belelökt");});
test("belemarnak -> belemar", function() {deepEqual( Stem("belemarnak"), "belemar");});
test("belemarni -> belemarn", function() {deepEqual( Stem("belemarni"), "belemarn");});
test("belemelegedne -> belemelegedn", function() {deepEqual( Stem("belemelegedne"), "belemelegedn");});
test("belemenni -> belemenn", function() {deepEqual( Stem("belemenni"), "belemenn");});
test("belemegyek -> belemegy", function() {deepEqual( Stem("belemegyek"), "belemegy");});
test("belement -> belemen", function() {deepEqual( Stem("belement"), "belemen");});
test("belementek -> belement", function() {deepEqual( Stem("belementek"), "belement");});
test("belementünk -> belement", function() {deepEqual( Stem("belementünk"), "belement");});
test("belemenős -> belemenős", function() {deepEqual( Stem("belemenős"), "belemenős");});
test("belemerült -> belemerül", function() {deepEqual( Stem("belemerült"), "belemerül");});
test("belemerültem -> belemerült", function() {deepEqual( Stem("belemerültem"), "belemerült");});
test("belendítésére -> belendítés", function() {deepEqual( Stem("belendítésére"), "belendítés");});
test("belenevelik -> belenevel", function() {deepEqual( Stem("belenevelik"), "belenevel");});
test("belenevelték -> belenevelte", function() {deepEqual( Stem("belenevelték"), "belenevelte");});
test("belenyalakodtak -> belenyalakodt", function() {deepEqual( Stem("belenyalakodtak"), "belenyalakodt");});
test("belenyilallott -> belenyilallot", function() {deepEqual( Stem("belenyilallott"), "belenyilallot");});
test("belenyugodni -> belenyugodn", function() {deepEqual( Stem("belenyugodni"), "belenyugodn");});
test("belenyugodott -> belenyugodot", function() {deepEqual( Stem("belenyugodott"), "belenyugodot");});
test("belenyugszanak -> belenyugsz", function() {deepEqual( Stem("belenyugszanak"), "belenyugsz");});
test("belenyúlhat -> belenyúlh", function() {deepEqual( Stem("belenyúlhat"), "belenyúlh");});
test("belenyúlni -> belenyúln", function() {deepEqual( Stem("belenyúlni"), "belenyúln");});
test("belenyúlt -> belenyúl", function() {deepEqual( Stem("belenyúlt"), "belenyúl");});
test("belenyúltam -> belenyúlt", function() {deepEqual( Stem("belenyúltam"), "belenyúlt");});
test("belenéz -> belenéz", function() {deepEqual( Stem("belenéz"), "belenéz");});
test("belenézett -> belenézet", function() {deepEqual( Stem("belenézett"), "belenézet");});
test("belenézni -> belenézn", function() {deepEqual( Stem("belenézni"), "belenézn");});
test("belenéznie -> belenézn", function() {deepEqual( Stem("belenéznie"), "belenézn");});
test("belenéztek -> belenézt", function() {deepEqual( Stem("belenéztek"), "belenézt");});
test("belenő -> belenő", function() {deepEqual( Stem("belenő"), "belenő");});
test("belenőhetünk -> belenőhet", function() {deepEqual( Stem("belenőhetünk"), "belenőhet");});
test("beleolvad -> beleolv", function() {deepEqual( Stem("beleolvad"), "beleolv");});
test("beleolvadt -> beleolv", function() {deepEqual( Stem("beleolvadt"), "beleolv");});
test("beleolvasta -> beleolvast", function() {deepEqual( Stem("beleolvasta"), "beleolvast");});
test("belepillantottunk -> belepillantott", function() {deepEqual( Stem("belepillantottunk"), "belepillantott");});
test("belepottyant -> belepottyan", function() {deepEqual( Stem("belepottyant"), "belepottyan");});
test("belepte -> belept", function() {deepEqual( Stem("belepte"), "belept");});
test("beleragadt -> belerag", function() {deepEqual( Stem("beleragadt"), "belerag");});
test("beleraktuk -> belerakt", function() {deepEqual( Stem("beleraktuk"), "belerakt");});
test("beleremegett -> beleremeget", function() {deepEqual( Stem("beleremegett"), "beleremeget");});
test("belerezdültek -> belerezdült", function() {deepEqual( Stem("belerezdültek"), "belerezdült");});
test("beleringassa -> beleringass", function() {deepEqual( Stem("beleringassa"), "beleringass");});
test("belerohant -> belerohan", function() {deepEqual( Stem("belerohant"), "belerohan");});
test("belerohantak -> belerohant", function() {deepEqual( Stem("belerohantak"), "belerohant");});
test("beleroppan -> beleropp", function() {deepEqual( Stem("beleroppan"), "beleropp");});
test("belerázott -> belerázot", function() {deepEqual( Stem("belerázott"), "belerázot");});
test("belerázódni -> belerázódn", function() {deepEqual( Stem("belerázódni"), "belerázódn");});
test("belerögzítve -> belerögzítv", function() {deepEqual( Stem("belerögzítve"), "belerögzítv");});
test("belerögződött -> belerögződöt", function() {deepEqual( Stem("belerögződött"), "belerögződöt");});
test("belerúg -> belerúg", function() {deepEqual( Stem("belerúg"), "belerúg");});
test("belerúgott -> belerúgot", function() {deepEqual( Stem("belerúgott"), "belerúgot");});
test("beles -> beles", function() {deepEqual( Stem("beles"), "beles");});
test("belesimul -> beles", function() {deepEqual( Stem("belesimul"), "beles");});
test("belesimulásáról -> belesimulás", function() {deepEqual( Stem("belesimulásáról"), "belesimulás");});
test("belesni -> belesn", function() {deepEqual( Stem("belesni"), "belesn");});
test("belestem -> belest", function() {deepEqual( Stem("belestem"), "belest");});
test("belesodorva -> belesodorv", function() {deepEqual( Stem("belesodorva"), "belesodorv");});
test("beleszagolni -> beleszagoln", function() {deepEqual( Stem("beleszagolni"), "beleszagoln");});
test("beleszagolt -> beleszagol", function() {deepEqual( Stem("beleszagolt"), "beleszagol");});
test("beleszeretett -> beleszeretet", function() {deepEqual( Stem("beleszeretett"), "beleszeretet");});
test("beleszerettem -> beleszerett", function() {deepEqual( Stem("beleszerettem"), "beleszerett");});
test("beleszámolták -> beleszámolta", function() {deepEqual( Stem("beleszámolták"), "beleszámolta");});
test("beleszámítva -> beleszámítv", function() {deepEqual( Stem("beleszámítva"), "beleszámítv");});
test("beleszárad -> beleszár", function() {deepEqual( Stem("beleszárad"), "beleszár");});
test("beleszédült -> beleszédül", function() {deepEqual( Stem("beleszédült"), "beleszédül");});
test("beleszédültem -> beleszédült", function() {deepEqual( Stem("beleszédültem"), "beleszédült");});
test("beleszívódik -> beleszívód", function() {deepEqual( Stem("beleszívódik"), "beleszívód");});
test("beleszólhatunk -> beleszólhat", function() {deepEqual( Stem("beleszólhatunk"), "beleszólhat");});
test("beleszóljon -> beleszólj", function() {deepEqual( Stem("beleszóljon"), "beleszólj");});
test("beleszól -> beleszól", function() {deepEqual( Stem("beleszól"), "beleszól");});
test("beleszólnak -> beleszól", function() {deepEqual( Stem("beleszólnak"), "beleszól");});
test("beleszólni -> beleszóln", function() {deepEqual( Stem("beleszólni"), "beleszóln");});
test("beleszólok -> beleszól", function() {deepEqual( Stem("beleszólok"), "beleszól");});
test("beleszóltak -> beleszólt", function() {deepEqual( Stem("beleszóltak"), "beleszólt");});
test("beleszólva -> beleszólv", function() {deepEqual( Stem("beleszólva"), "beleszólv");});
test("beleszólása -> beleszólás", function() {deepEqual( Stem("beleszólása"), "beleszólás");});
test("beleszólási -> beleszólás", function() {deepEqual( Stem("beleszólási"), "beleszólás");});
test("beleszólást -> beleszólás", function() {deepEqual( Stem("beleszólást"), "beleszólás");});
test("beleszólásuk -> beleszólás", function() {deepEqual( Stem("beleszólásuk"), "beleszólás");});
test("beleszürkülni -> beleszürküln", function() {deepEqual( Stem("beleszürkülni"), "beleszürküln");});
test("belesápadt -> belesáp", function() {deepEqual( Stem("belesápadt"), "belesáp");});
test("beletaposott -> beletaposot", function() {deepEqual( Stem("beletaposott"), "beletaposot");});
test("beletartozik -> beletartoz", function() {deepEqual( Stem("beletartozik"), "beletartoz");});
test("beletartoznak -> beletartoz", function() {deepEqual( Stem("beletartoznak"), "beletartoz");});
test("beletartozott -> beletartozot", function() {deepEqual( Stem("beletartozott"), "beletartozot");});
test("beletehetjük -> beletehet", function() {deepEqual( Stem("beletehetjük"), "beletehet");});
test("beletelik -> beletel", function() {deepEqual( Stem("beletelik"), "beletel");});
test("beletelt -> beletel", function() {deepEqual( Stem("beletelt"), "beletel");});
test("beletenni -> beletenn", function() {deepEqual( Stem("beletenni"), "beletenn");});
test("beletesz -> beletesz", function() {deepEqual( Stem("beletesz"), "beletesz");});
test("beleteszem -> beletesz", function() {deepEqual( Stem("beleteszem"), "beletesz");});
test("beletettek -> beletett", function() {deepEqual( Stem("beletettek"), "beletett");});
test("beletettük -> beletett", function() {deepEqual( Stem("beletettük"), "beletett");});
test("beletuszkoltam -> beletuszkolt", function() {deepEqual( Stem("beletuszkoltam"), "beletuszkolt");});
test("beletöltött -> beletöltöt", function() {deepEqual( Stem("beletöltött"), "beletöltöt");});
test("beletörte -> beletört", function() {deepEqual( Stem("beletörte"), "beletört");});
test("beletörődik -> beletörőd", function() {deepEqual( Stem("beletörődik"), "beletörőd");});
test("beletörődni -> beletörődn", function() {deepEqual( Stem("beletörődni"), "beletörődn");});
test("beletörődtem -> beletörődt", function() {deepEqual( Stem("beletörődtem"), "beletörődt");});
test("beletörődés -> beletörődés", function() {deepEqual( Stem("beletörődés"), "beletörődés");});
test("beleugorhassunk -> beleugorhass", function() {deepEqual( Stem("beleugorhassunk"), "beleugorhass");});
test("beleugrott -> beleugrot", function() {deepEqual( Stem("beleugrott"), "beleugrot");});
test("beleunnánk -> beleunna", function() {deepEqual( Stem("beleunnánk"), "beleunna");});
test("beleverni -> belevern", function() {deepEqual( Stem("beleverni"), "belevern");});
test("beleveszett -> beleveszet", function() {deepEqual( Stem("beleveszett"), "beleveszet");});
test("beleveszve -> beleveszv", function() {deepEqual( Stem("beleveszve"), "beleveszv");});
test("belevenném -> belevenne", function() {deepEqual( Stem("belevenném"), "belevenne");});
test("belevetem -> belevet", function() {deepEqual( Stem("belevetem"), "belevet");});
test("belevetette -> belevetett", function() {deepEqual( Stem("belevetette"), "belevetett");});
test("belevetettük -> belevetett", function() {deepEqual( Stem("belevetettük"), "belevetett");});
test("belevinni -> belevinn", function() {deepEqual( Stem("belevinni"), "belevinn");});
test("belevonta -> belevont", function() {deepEqual( Stem("belevonta"), "belevont");});
test("belevág -> belevág", function() {deepEqual( Stem("belevág"), "belevág");});
test("belevágnak -> belevág", function() {deepEqual( Stem("belevágnak"), "belevág");});
test("belevágni -> belevágn", function() {deepEqual( Stem("belevágni"), "belevágn");});
test("belevágott -> belevágot", function() {deepEqual( Stem("belevágott"), "belevágot");});
test("belevágta -> belevágt", function() {deepEqual( Stem("belevágta"), "belevágt");});
test("belevágtatnánk -> belevágtatna", function() {deepEqual( Stem("belevágtatnánk"), "belevágtatna");});
test("belevésni -> belevésn", function() {deepEqual( Stem("belevésni"), "belevésn");});
test("belevéste -> belevést", function() {deepEqual( Stem("belevéste"), "belevést");});
test("beleállunk -> beleáll", function() {deepEqual( Stem("beleállunk"), "beleáll");});
test("beleépített -> beleépítet", function() {deepEqual( Stem("beleépített"), "beleépítet");});
test("beleépíti -> beleépít", function() {deepEqual( Stem("beleépíti"), "beleépít");});
test("beleépülni -> beleépüln", function() {deepEqual( Stem("beleépülni"), "beleépüln");});
test("beleértve -> beleértv", function() {deepEqual( Stem("beleértve"), "beleértv");});
test("beleérzés -> beleérzés", function() {deepEqual( Stem("beleérzés"), "beleérzés");});
test("beleírta -> beleírt", function() {deepEqual( Stem("beleírta"), "beleírt");});
test("beleömlött -> beleömlöt", function() {deepEqual( Stem("beleömlött"), "beleömlöt");});
test("beleöntöm -> beleöntö", function() {deepEqual( Stem("beleöntöm"), "beleöntö");});
test("beleülhetne -> beleülhetn", function() {deepEqual( Stem("beleülhetne"), "beleülhetn");});
test("beleült -> beleül", function() {deepEqual( Stem("beleült"), "beleül");});
test("beleültem -> beleült", function() {deepEqual( Stem("beleültem"), "beleült");});
test("beleültünk -> beleült", function() {deepEqual( Stem("beleültünk"), "beleült");});
test("beleütközik -> beleütköz", function() {deepEqual( Stem("beleütközik"), "beleütköz");});
test("beleütköztem -> beleütközt", function() {deepEqual( Stem("beleütköztem"), "beleütközt");});
test("beleütközök -> beleütköz", function() {deepEqual( Stem("beleütközök"), "beleütköz");});
test("beleütközöm -> beleütközö", function() {deepEqual( Stem("beleütközöm"), "beleütközö");});
test("beleütközött -> beleütközöt", function() {deepEqual( Stem("beleütközött"), "beleütközöt");});
test("belföldi -> belföld", function() {deepEqual( Stem("belföldi"), "belföld");});
test("belföldiek -> belföldi", function() {deepEqual( Stem("belföldiek"), "belföldi");});
test("belföldieket -> belföldi", function() {deepEqual( Stem("belföldieket"), "belföldi");});
test("belföldiekkel -> belföldi", function() {deepEqual( Stem("belföldiekkel"), "belföldi");});
test("belföldieknek -> belföldi", function() {deepEqual( Stem("belföldieknek"), "belföldi");});
test("belföldiekét -> belföldi", function() {deepEqual( Stem("belföldiekét"), "belföldi");});
test("belföldre -> belföl", function() {deepEqual( Stem("belföldre"), "belföl");});
test("belföldön -> belföl", function() {deepEqual( Stem("belföldön"), "belföl");});
test("belga -> belg", function() {deepEqual( Stem("belga"), "belg");});
test("belga-holland -> belga-hollan", function() {deepEqual( Stem("belga-holland"), "belga-hollan");});
test("belgiumi -> belgium", function() {deepEqual( Stem("belgiumi"), "belgium");});
test("belgrádi -> belgrád", function() {deepEqual( Stem("belgrádi"), "belgrád");});
test("belgyógyász-pszichiátert -> belgyógyász-pszichiáter", function() {deepEqual( Stem("belgyógyász-pszichiátert"), "belgyógyász-pszichiáter");});
test("belgyógyászati -> belgyógyászat", function() {deepEqual( Stem("belgyógyászati"), "belgyógyászat");});
test("belgyógyászatára -> belgyógyászat", function() {deepEqual( Stem("belgyógyászatára"), "belgyógyászat");});
test("belgyógyászatáról -> belgyógyászat", function() {deepEqual( Stem("belgyógyászatáról"), "belgyógyászat");});
test("belgyógyászok -> belgyógyász", function() {deepEqual( Stem("belgyógyászok"), "belgyógyász");});
test("belgyógyász -> belgyógyász", function() {deepEqual( Stem("belgyógyász"), "belgyógyász");});
test("beljebb -> beljebb", function() {deepEqual( Stem("beljebb"), "beljebb");});
test("beljebbjövetel -> beljebbjövetel", function() {deepEqual( Stem("beljebbjövetel"), "beljebbjövetel");});
test("belovaglókat -> belovagló", function() {deepEqual( Stem("belovaglókat"), "belovagló");});
test("belpolitikai -> belpoliti", function() {deepEqual( Stem("belpolitikai"), "belpoliti");});
test("belseje -> belse", function() {deepEqual( Stem("belseje"), "belse");});
test("belsejébe -> belse", function() {deepEqual( Stem("belsejébe"), "belse");});
test("belsejében -> belse", function() {deepEqual( Stem("belsejében"), "belse");});
test("belsejéből -> belse", function() {deepEqual( Stem("belsejéből"), "belse");});
test("belsején -> belse", function() {deepEqual( Stem("belsején"), "belse");});
test("belsejének -> belse", function() {deepEqual( Stem("belsejének"), "belse");});
test("belsejét -> belse", function() {deepEqual( Stem("belsejét"), "belse");});
test("belsőleg -> belsőleg", function() {deepEqual( Stem("belsőleg"), "belsőleg");});
test("belsőm -> belső", function() {deepEqual( Stem("belsőm"), "belső");});
test("belső -> belső", function() {deepEqual( Stem("belső"), "belső");});
test("belsőmből -> belső", function() {deepEqual( Stem("belsőmből"), "belső");});
test("belsőt -> belső", function() {deepEqual( Stem("belsőt"), "belső");});
test("belsővé -> belső", function() {deepEqual( Stem("belsővé"), "belső");});
test("belsőépítészet -> belsőépítész", function() {deepEqual( Stem("belsőépítészet"), "belsőépítész");});
test("belsőépítészeti -> belsőépítészet", function() {deepEqual( Stem("belsőépítészeti"), "belsőépítészet");});
test("beltag -> beltag", function() {deepEqual( Stem("beltag"), "beltag");});
test("beltaggal -> beltag", function() {deepEqual( Stem("beltaggal"), "beltag");});
test("beltaghoz -> beltag", function() {deepEqual( Stem("beltaghoz"), "beltag");});
test("beltagja -> beltag", function() {deepEqual( Stem("beltagja"), "beltag");});
test("beltagjához -> beltag", function() {deepEqual( Stem("beltagjához"), "beltag");});
test("beltagjának -> beltag", function() {deepEqual( Stem("beltagjának"), "beltag");});
test("beltagnak -> beltag", function() {deepEqual( Stem("beltagnak"), "beltag");});
test("beltagnak -> beltag", function() {deepEqual( Stem("beltagnak"), "beltag");});
test("beltagok -> beltag", function() {deepEqual( Stem("beltagok"), "beltag");});
test("beltagokkal -> beltag", function() {deepEqual( Stem("beltagokkal"), "beltag");});
test("beltagra -> beltag", function() {deepEqual( Stem("beltagra"), "beltag");});
test("beltagéval -> beltag", function() {deepEqual( Stem("beltagéval"), "beltag");});
test("belterületi -> belterület", function() {deepEqual( Stem("belterületi"), "belterület");});
test("beltéri -> beltér", function() {deepEqual( Stem("beltéri"), "beltér");});
test("belváros -> belváros", function() {deepEqual( Stem("belváros"), "belváros");});
test("belvárosba -> belváros", function() {deepEqual( Stem("belvárosba"), "belváros");});
test("belvárosának -> belváros", function() {deepEqual( Stem("belvárosának"), "belváros");});
test("belvárosi -> belváros", function() {deepEqual( Stem("belvárosi"), "belváros");});
test("belvíz -> belvíz", function() {deepEqual( Stem("belvíz"), "belvíz");});
test("belvízzel -> belvíz", function() {deepEqual( Stem("belvízzel"), "belvíz");});
test("belvízelvezető -> belvízelvezető", function() {deepEqual( Stem("belvízelvezető"), "belvízelvezető");});
test("belvízgondokkal -> belvízgond", function() {deepEqual( Stem("belvízgondokkal"), "belvízgond");});
test("belvízkárok -> belvízkár", function() {deepEqual( Stem("belvízkárok"), "belvízkár");});
test("belvízvédelmi -> belvízvédelm", function() {deepEqual( Stem("belvízvédelmi"), "belvízvédelm");});
test("beláthatatlan -> beláthatatl", function() {deepEqual( Stem("beláthatatlan"), "beláthatatl");});
test("belátható -> belátható", function() {deepEqual( Stem("belátható"), "belátható");});
test("belátja -> belát", function() {deepEqual( Stem("belátja"), "belát");});
test("belátni -> belátn", function() {deepEqual( Stem("belátni"), "belátn");});
test("belátná -> belátna", function() {deepEqual( Stem("belátná"), "belátna");});
test("berendeztetni -> berendeztetn", function() {deepEqual( Stem("berendeztetni"), "berendeztetn");});
test("berendezve -> berendezv", function() {deepEqual( Stem("berendezve"), "berendezv");});
test("berendeznének -> berendezn", function() {deepEqual( Stem("berendeznének"), "berendezn");});
test("berendezték -> berendezte", function() {deepEqual( Stem("berendezték"), "berendezte");});
test("berendezés -> berendezés", function() {deepEqual( Stem("berendezés"), "berendezés");});
test("berendezését -> berendezés", function() {deepEqual( Stem("berendezését"), "berendezés");});
test("berendezésének -> berendezés", function() {deepEqual( Stem("berendezésének"), "berendezés");});
test("berendezéséhez -> berendezés", function() {deepEqual( Stem("berendezéséhez"), "berendezés");});
test("berendezést -> berendezés", function() {deepEqual( Stem("berendezést"), "berendezés");});
test("berendezéssel -> berendezés", function() {deepEqual( Stem("berendezéssel"), "berendezés");});
test("berendezésről -> berendezés", function() {deepEqual( Stem("berendezésről"), "berendezés");});
test("berendezésbe -> berendezés", function() {deepEqual( Stem("berendezésbe"), "berendezés");});
test("berendezése -> berendezés", function() {deepEqual( Stem("berendezése"), "berendezés");});
test("berendezéseiben -> berendezés", function() {deepEqual( Stem("berendezéseiben"), "berendezés");});
test("berendezéseit -> berendezés", function() {deepEqual( Stem("berendezéseit"), "berendezés");});
test("berendezések -> berendezés", function() {deepEqual( Stem("berendezések"), "berendezés");});
test("berendezésekben -> berendezés", function() {deepEqual( Stem("berendezésekben"), "berendezés");});
test("berendezésekből -> berendezés", function() {deepEqual( Stem("berendezésekből"), "berendezés");});
test("berendezéseket -> berendezés", function() {deepEqual( Stem("berendezéseket"), "berendezés");});
test("berendezésekhez -> berendezés", function() {deepEqual( Stem("berendezésekhez"), "berendezés");});
test("berendezésekkel -> berendezés", function() {deepEqual( Stem("berendezésekkel"), "berendezés");});
test("berendezéseknek -> berendezés", function() {deepEqual( Stem("berendezéseknek"), "berendezés");});
test("berendezésekét -> berendezés", function() {deepEqual( Stem("berendezésekét"), "berendezés");});
test("berendezésgyártó -> berendezésgyártó", function() {deepEqual( Stem("berendezésgyártó"), "berendezésgyártó");});
test("berepülve -> berepülv", function() {deepEqual( Stem("berepülve"), "berepülv");});
test("berettyóújfalusi -> berettyóújfalus", function() {deepEqual( Stem("berettyóújfalusi"), "berettyóújfalus");});
test("berezeltek -> berezelt", function() {deepEqual( Stem("berezeltek"), "berezelt");});
test("beriberi -> beriber", function() {deepEqual( Stem("beriberi"), "beriber");});
test("berkeiben -> ber", function() {deepEqual( Stem("berkeiben"), "ber");});
test("berkekben -> berk", function() {deepEqual( Stem("berkekben"), "berk");});
test("berkeley-i -> berkeley-", function() {deepEqual( Stem("berkeley-i"), "berkeley-");});
test("berlini -> berlin", function() {deepEqual( Stem("berlini"), "berlin");});
test("berni -> bern", function() {deepEqual( Stem("berni"), "bern");});
test("berobbantunk -> berobbant", function() {deepEqual( Stem("berobbantunk"), "berobbant");});
test("berohantak -> berohant", function() {deepEqual( Stem("berohantak"), "berohant");});
test("beronthatnak -> beronthat", function() {deepEqual( Stem("beronthatnak"), "beronthat");});
test("berontottak -> berontott", function() {deepEqual( Stem("berontottak"), "berontott");});
test("berregés -> berregés", function() {deepEqual( Stem("berregés"), "berregés");});
test("beruházniuk -> beruházn", function() {deepEqual( Stem("beruházniuk"), "beruházn");});
test("beruházási -> beruházás", function() {deepEqual( Stem("beruházási"), "beruházás");});
test("beruházás -> beruházás", function() {deepEqual( Stem("beruházás"), "beruházás");});
test("beruházásai -> beruházás", function() {deepEqual( Stem("beruházásai"), "beruházás");});
test("beruházásaik -> beruházás", function() {deepEqual( Stem("beruházásaik"), "beruházás");});
test("beruházásnak -> beruházás", function() {deepEqual( Stem("beruházásnak"), "beruházás");});
test("beruházások -> beruházás", function() {deepEqual( Stem("beruházások"), "beruházás");});
test("beruházásokat -> beruházás", function() {deepEqual( Stem("beruházásokat"), "beruházás");});
test("beruházásokhoz -> beruházás", function() {deepEqual( Stem("beruházásokhoz"), "beruházás");});
test("beruházásokra -> beruházás", function() {deepEqual( Stem("beruházásokra"), "beruházás");});
test("beruházásra -> beruházás", function() {deepEqual( Stem("beruházásra"), "beruházás");});
test("beruházással -> beruházás", function() {deepEqual( Stem("beruházással"), "beruházás");});
test("beruházást -> beruházás", function() {deepEqual( Stem("beruházást"), "beruházás");});
test("beruházástól -> beruházás", function() {deepEqual( Stem("beruházástól"), "beruházás");});
test("beruházásvédő -> beruházásvédő", function() {deepEqual( Stem("beruházásvédő"), "beruházásvédő");});
test("beruházó -> beruházó", function() {deepEqual( Stem("beruházó"), "beruházó");});
test("beruházók -> beruházó", function() {deepEqual( Stem("beruházók"), "beruházó");});
test("beruházót -> beruházó", function() {deepEqual( Stem("beruházót"), "beruházó");});
test("beruházótól -> beruházó", function() {deepEqual( Stem("beruházótól"), "beruházó");});
test("berántottam -> berántott", function() {deepEqual( Stem("berántottam"), "berántott");});
test("berényi -> berény", function() {deepEqual( Stem("berényi"), "berény");});
test("berúg -> berúg", function() {deepEqual( Stem("berúg"), "berúg");});
test("berúgja -> berúg", function() {deepEqual( Stem("berúgja"), "berúg");});
test("berúgjon -> berúgj", function() {deepEqual( Stem("berúgjon"), "berúgj");});
test("berúgnak -> berúg", function() {deepEqual( Stem("berúgnak"), "berúg");});
test("berúgni -> berúgn", function() {deepEqual( Stem("berúgni"), "berúgn");});
test("besatírozta -> besatírozt", function() {deepEqual( Stem("besatírozta"), "besatírozt");});
test("besavanyodott -> besavanyodot", function() {deepEqual( Stem("besavanyodott"), "besavanyodot");});
test("besegítenék -> besegítene", function() {deepEqual( Stem("besegítenék"), "besegítene");});
test("besegítsenek -> besegíts", function() {deepEqual( Stem("besegítsenek"), "besegíts");});
test("besietett -> besietet", function() {deepEqual( Stem("besietett"), "besietet");});
test("besliszolok -> besliszol", function() {deepEqual( Stem("besliszolok"), "besliszol");});
test("besorolni -> besoroln", function() {deepEqual( Stem("besorolni"), "besoroln");});
test("besorolás -> besorolás", function() {deepEqual( Stem("besorolás"), "besorolás");});
test("besorolása -> besorolás", function() {deepEqual( Stem("besorolása"), "besorolás");});
test("besoroláshoz -> besorolás", function() {deepEqual( Stem("besoroláshoz"), "besorolás");});
test("besorolást -> besorolás", function() {deepEqual( Stem("besorolást"), "besorolás");});
test("besorolásában -> besorolás", function() {deepEqual( Stem("besorolásában"), "besorolás");});
test("besorolását -> besorolás", function() {deepEqual( Stem("besorolását"), "besorolás");});
test("bestiát -> best", function() {deepEqual( Stem("bestiát"), "best");});
test("bestseller-klauzula -> bestseller-klauzul", function() {deepEqual( Stem("bestseller-klauzula"), "bestseller-klauzul");});
test("bestsellereket -> bestseller", function() {deepEqual( Stem("bestsellereket"), "bestseller");});
test("bestseller -> bestseller", function() {deepEqual( Stem("bestseller"), "bestseller");});
test("bestselleríró -> bestselleríró", function() {deepEqual( Stem("bestselleríró"), "bestselleríró");});
test("besugárzott -> besugárzot", function() {deepEqual( Stem("besugárzott"), "besugárzot");});
test("besugárzási -> besugárzás", function() {deepEqual( Stem("besugárzási"), "besugárzás");});
test("besugárzásával -> besugárzás", function() {deepEqual( Stem("besugárzásával"), "besugárzás");});
test("besurranni -> besurrann", function() {deepEqual( Stem("besurranni"), "besurrann");});
test("besurrant -> besurran", function() {deepEqual( Stem("besurrant"), "besurran");});
test("beszaladt -> beszal", function() {deepEqual( Stem("beszaladt"), "beszal");});
test("beszaladtunk -> beszaladt", function() {deepEqual( Stem("beszaladtunk"), "beszaladt");});
test("beszedett -> beszedet", function() {deepEqual( Stem("beszedett"), "beszedet");});
test("beszedi -> beszed", function() {deepEqual( Stem("beszedi"), "beszed");});
test("beszedték -> beszedte", function() {deepEqual( Stem("beszedték"), "beszedte");});
test("beszedés -> beszedés", function() {deepEqual( Stem("beszedés"), "beszedés");});
test("beszedése -> beszedés", function() {deepEqual( Stem("beszedése"), "beszedés");});
test("beszedésre -> beszedés", function() {deepEqual( Stem("beszedésre"), "beszedés");});
test("beszedésének -> beszedés", function() {deepEqual( Stem("beszedésének"), "beszedés");});
test("beszedésére -> beszedés", function() {deepEqual( Stem("beszedésére"), "beszedés");});
test("beszedését -> beszedés", function() {deepEqual( Stem("beszedését"), "beszedés");});
test("beszedéséért -> beszedés", function() {deepEqual( Stem("beszedéséért"), "beszedés");});
test("beszedő -> beszedő", function() {deepEqual( Stem("beszedő"), "beszedő");});
test("beszentelt -> beszentel", function() {deepEqual( Stem("beszentelt"), "beszentel");});
test("beszentelésével -> beszentelés", function() {deepEqual( Stem("beszentelésével"), "beszentelés");});
test("beszerelni -> beszereln", function() {deepEqual( Stem("beszerelni"), "beszereln");});
test("beszerelték -> beszerelte", function() {deepEqual( Stem("beszerelték"), "beszerelte");});
test("beszerezhettünk -> beszerezhett", function() {deepEqual( Stem("beszerezhettünk"), "beszerezhett");});
test("beszerezhető -> beszerezhető", function() {deepEqual( Stem("beszerezhető"), "beszerezhető");});
test("beszerezhetők -> beszerezhető", function() {deepEqual( Stem("beszerezhetők"), "beszerezhető");});
test("beszerezni -> beszerezn", function() {deepEqual( Stem("beszerezni"), "beszerezn");});
test("beszereznie -> beszerezn", function() {deepEqual( Stem("beszereznie"), "beszerezn");});
test("beszerezte -> beszerezt", function() {deepEqual( Stem("beszerezte"), "beszerezt");});
test("beszervezett -> beszervezet", function() {deepEqual( Stem("beszervezett"), "beszervezet");});
test("beszerzett -> beszerzet", function() {deepEqual( Stem("beszerzett"), "beszerzet");});
test("beszerzés-raktározás -> beszerzés-raktározás", function() {deepEqual( Stem("beszerzés-raktározás"), "beszerzés-raktározás");});
test("beszerzési -> beszerzés", function() {deepEqual( Stem("beszerzési"), "beszerzés");});
test("beszerzésben -> beszerzés", function() {deepEqual( Stem("beszerzésben"), "beszerzés");});
test("beszerzése -> beszerzés", function() {deepEqual( Stem("beszerzése"), "beszerzés");});
test("beszerzés -> beszerzés", function() {deepEqual( Stem("beszerzés"), "beszerzés");});
test("beszerzéseik -> beszerzés", function() {deepEqual( Stem("beszerzéseik"), "beszerzés");});
test("beszerzéseit -> beszerzés", function() {deepEqual( Stem("beszerzéseit"), "beszerzés");});
test("beszerzések -> beszerzés", function() {deepEqual( Stem("beszerzések"), "beszerzés");});
test("beszerzésekről -> beszerzés", function() {deepEqual( Stem("beszerzésekről"), "beszerzés");});
test("beszerzésnek -> beszerzés", function() {deepEqual( Stem("beszerzésnek"), "beszerzés");});
test("beszerzésről -> beszerzés", function() {deepEqual( Stem("beszerzésről"), "beszerzés");});
test("beszerzéssel -> beszerzés", function() {deepEqual( Stem("beszerzéssel"), "beszerzés");});
test("beszerzést -> beszerzés", function() {deepEqual( Stem("beszerzést"), "beszerzés");});
test("beszerzéséhez -> beszerzés", function() {deepEqual( Stem("beszerzéséhez"), "beszerzés");});
test("beszerzésére -> beszerzés", function() {deepEqual( Stem("beszerzésére"), "beszerzés");});
test("beszerzéséről -> beszerzés", function() {deepEqual( Stem("beszerzéséről"), "beszerzés");});
test("beszerzését -> beszerzés", function() {deepEqual( Stem("beszerzését"), "beszerzés");});
test("beszerző -> beszerző", function() {deepEqual( Stem("beszerző"), "beszerző");});
test("beszippantottam -> beszippantott", function() {deepEqual( Stem("beszippantottam"), "beszippantott");});
test("beszivárog -> beszivárog", function() {deepEqual( Stem("beszivárog"), "beszivárog");});
test("beszivárogni -> beszivárogn", function() {deepEqual( Stem("beszivárogni"), "beszivárogn");});
test("beszkennelhetjük -> beszkennelhet", function() {deepEqual( Stem("beszkennelhetjük"), "beszkennelhet");});
test("beszlopáltam -> beszlopált", function() {deepEqual( Stem("beszlopáltam"), "beszlopált");});
test("beszorozzuk -> beszorozz", function() {deepEqual( Stem("beszorozzuk"), "beszorozz");});
test("beszorozzák -> beszorozza", function() {deepEqual( Stem("beszorozzák"), "beszorozza");});
test("beszorult -> beszorul", function() {deepEqual( Stem("beszorult"), "beszorul");});
test("beszorultam -> beszorult", function() {deepEqual( Stem("beszorultam"), "beszorult");});
test("beszorítani -> beszorítan", function() {deepEqual( Stem("beszorítani"), "beszorítan");});
test("beszorították -> beszorította", function() {deepEqual( Stem("beszorították"), "beszorította");});
test("beszállni -> beszálln", function() {deepEqual( Stem("beszállni"), "beszálln");});
test("beszállt -> beszáll", function() {deepEqual( Stem("beszállt"), "beszáll");});
test("beszálltak -> beszállt", function() {deepEqual( Stem("beszálltak"), "beszállt");});
test("beszálltunk -> beszállt", function() {deepEqual( Stem("beszálltunk"), "beszállt");});
test("beszállás -> beszállás", function() {deepEqual( Stem("beszállás"), "beszállás");});
test("beszálláskor -> beszállás", function() {deepEqual( Stem("beszálláskor"), "beszállás");});
test("beszállítanunk -> beszállítan", function() {deepEqual( Stem("beszállítanunk"), "beszállítan");});
test("beszállíttatni -> beszállíttatn", function() {deepEqual( Stem("beszállíttatni"), "beszállíttatn");});
test("beszállítócégnek -> beszállítócég", function() {deepEqual( Stem("beszállítócégnek"), "beszállítócég");});
test("beszállítói -> beszállító", function() {deepEqual( Stem("beszállítói"), "beszállító");});
test("beszállítóival -> beszállító", function() {deepEqual( Stem("beszállítóival"), "beszállító");});
test("beszállítójaként -> beszállító", function() {deepEqual( Stem("beszállítójaként"), "beszállító");});
test("beszállítójává -> beszállító", function() {deepEqual( Stem("beszállítójává"), "beszállító");});
test("beszállítót -> beszállító", function() {deepEqual( Stem("beszállítót"), "beszállító");});
test("beszállítók -> beszállító", function() {deepEqual( Stem("beszállítók"), "beszállító");});
test("beszállítókkal -> beszállító", function() {deepEqual( Stem("beszállítókkal"), "beszállító");});
test("beszállítóknak -> beszállító", function() {deepEqual( Stem("beszállítóknak"), "beszállító");});
test("beszálló -> beszálló", function() {deepEqual( Stem("beszálló"), "beszálló");});
test("beszámolhattak -> beszámolhatt", function() {deepEqual( Stem("beszámolhattak"), "beszámolhatt");});
test("beszámoljunk -> beszámolj", function() {deepEqual( Stem("beszámoljunk"), "beszámolj");});
test("beszámol -> beszámol", function() {deepEqual( Stem("beszámol"), "beszámol");});
test("beszámolni -> beszámoln", function() {deepEqual( Stem("beszámolni"), "beszámoln");});
test("beszámolt -> beszámol", function() {deepEqual( Stem("beszámolt"), "beszámol");});
test("beszámoltak -> beszámolt", function() {deepEqual( Stem("beszámoltak"), "beszámolt");});
test("beszámoltam -> beszámolt", function() {deepEqual( Stem("beszámoltam"), "beszámolt");});
test("beszámoltunk -> beszámolt", function() {deepEqual( Stem("beszámoltunk"), "beszámolt");});
test("beszámoltatást -> beszámoltatás", function() {deepEqual( Stem("beszámoltatást"), "beszámoltatás");});
test("beszámolási -> beszámolás", function() {deepEqual( Stem("beszámolási"), "beszámolás");});
test("beszámoló -> beszámoló", function() {deepEqual( Stem("beszámoló"), "beszámoló");});
test("beszámolóiból -> beszámoló", function() {deepEqual( Stem("beszámolóiból"), "beszámoló");});
test("beszámolóinak -> beszámoló", function() {deepEqual( Stem("beszámolóinak"), "beszámoló");});
test("beszámolói -> beszámoló", function() {deepEqual( Stem("beszámolói"), "beszámoló");});
test("beszámolóban -> beszámoló", function() {deepEqual( Stem("beszámolóban"), "beszámoló");});
test("beszámolója -> beszámoló", function() {deepEqual( Stem("beszámolója"), "beszámoló");});
test("beszámolójuk -> beszámoló", function() {deepEqual( Stem("beszámolójuk"), "beszámoló");});
test("beszámolójában -> beszámoló", function() {deepEqual( Stem("beszámolójában"), "beszámoló");});
test("beszámolójának -> beszámoló", function() {deepEqual( Stem("beszámolójának"), "beszámoló");});
test("beszámolójára -> beszámoló", function() {deepEqual( Stem("beszámolójára"), "beszámoló");});
test("beszámolóját -> beszámoló", function() {deepEqual( Stem("beszámolóját"), "beszámoló");});
test("beszámolók -> beszámoló", function() {deepEqual( Stem("beszámolók"), "beszámoló");});
test("beszámolókat -> beszámoló", function() {deepEqual( Stem("beszámolókat"), "beszámoló");});
test("beszámolónak -> beszámoló", function() {deepEqual( Stem("beszámolónak"), "beszámoló");});
test("beszámolóra -> beszámoló", function() {deepEqual( Stem("beszámolóra"), "beszámoló");});
test("beszámolóról -> beszámoló", function() {deepEqual( Stem("beszámolóról"), "beszámoló");});
test("beszámolót -> beszámoló", function() {deepEqual( Stem("beszámolót"), "beszámoló");});
test("beszámolóval -> beszámoló", function() {deepEqual( Stem("beszámolóval"), "beszámoló");});
test("beszámozzák -> beszámozza", function() {deepEqual( Stem("beszámozzák"), "beszámozza");});
test("beszámítani -> beszámítan", function() {deepEqual( Stem("beszámítani"), "beszámítan");});
test("beszámítjuk -> beszámít", function() {deepEqual( Stem("beszámítjuk"), "beszámít");});
test("beszámítható -> beszámítható", function() {deepEqual( Stem("beszámítható"), "beszámítható");});
test("beszámítás -> beszámítás", function() {deepEqual( Stem("beszámítás"), "beszámítás");});
test("beszámításnak -> beszámítás", function() {deepEqual( Stem("beszámításnak"), "beszámítás");});
test("beszámítást -> beszámítás", function() {deepEqual( Stem("beszámítást"), "beszámítás");});
test("beszárad -> beszár", function() {deepEqual( Stem("beszárad"), "beszár");});
test("beszáradt -> beszár", function() {deepEqual( Stem("beszáradt"), "beszár");});
test("beszáradás -> beszáradás", function() {deepEqual( Stem("beszáradás"), "beszáradás");});
test("beszéd-szöveg -> beszéd-szöveg", function() {deepEqual( Stem("beszéd-szöveg"), "beszéd-szöveg");});
test("beszédbe -> besze", function() {deepEqual( Stem("beszédbe"), "besze");});
test("beszédével -> beszéd", function() {deepEqual( Stem("beszédével"), "beszéd");});
test("beszéd -> besze", function() {deepEqual( Stem("beszéd"), "besze");});
test("beszédben -> besze", function() {deepEqual( Stem("beszédben"), "besze");});
test("beszédből -> besze", function() {deepEqual( Stem("beszédből"), "besze");});
test("beszéddel -> besze", function() {deepEqual( Stem("beszéddel"), "besze");});
test("beszéde -> beszéd", function() {deepEqual( Stem("beszéde"), "beszéd");});
test("beszédeiben -> beszéd", function() {deepEqual( Stem("beszédeiben"), "beszéd");});
test("beszédek -> beszéd", function() {deepEqual( Stem("beszédek"), "beszéd");});
test("beszédekben -> beszéd", function() {deepEqual( Stem("beszédekben"), "beszéd");});
test("beszédeket -> beszéd", function() {deepEqual( Stem("beszédeket"), "beszéd");});
test("beszédet -> besze", function() {deepEqual( Stem("beszédet"), "besze");});
test("beszédre -> besze", function() {deepEqual( Stem("beszédre"), "besze");});
test("beszédhez -> besze", function() {deepEqual( Stem("beszédhez"), "besze");});
test("beszédében -> beszéd", function() {deepEqual( Stem("beszédében"), "beszéd");});
test("beszédének -> beszéd", function() {deepEqual( Stem("beszédének"), "beszéd");});
test("beszédét -> beszéd", function() {deepEqual( Stem("beszédét"), "beszéd");});
test("beszédes -> beszédes", function() {deepEqual( Stem("beszédes"), "beszédes");});
test("beszédfelismerés -> beszédfelismerés", function() {deepEqual( Stem("beszédfelismerés"), "beszédfelismerés");});
test("beszédfelismerő -> beszédfelismerő", function() {deepEqual( Stem("beszédfelismerő"), "beszédfelismerő");});
test("beszédformáival -> beszédforma", function() {deepEqual( Stem("beszédformáival"), "beszédforma");});
test("beszédhanggal -> beszédhang", function() {deepEqual( Stem("beszédhanggal"), "beszédhang");});
test("beszédhangos -> beszédhangos", function() {deepEqual( Stem("beszédhangos"), "beszédhangos");});
test("beszédhelyzetek -> beszédhelyzet", function() {deepEqual( Stem("beszédhelyzetek"), "beszédhelyzet");});
test("beszédhibám -> beszédhiba", function() {deepEqual( Stem("beszédhibám"), "beszédhiba");});
test("beszédhibával -> beszédhib", function() {deepEqual( Stem("beszédhibával"), "beszédhib");});
test("beszédkészségemet -> beszédkészség", function() {deepEqual( Stem("beszédkészségemet"), "beszédkészség");});
test("beszédmód -> beszédmó", function() {deepEqual( Stem("beszédmód"), "beszédmó");});
test("beszédmódja -> beszédmód", function() {deepEqual( Stem("beszédmódja"), "beszédmód");});
test("beszédmódra -> beszédmó", function() {deepEqual( Stem("beszédmódra"), "beszédmó");});
test("beszédstílusban -> beszédstílus", function() {deepEqual( Stem("beszédstílusban"), "beszédstílus");});
test("beszédszintetizátorral -> beszédszintetizátor", function() {deepEqual( Stem("beszédszintetizátorral"), "beszédszintetizátor");});
test("beszédtechnikát -> beszédtechn", function() {deepEqual( Stem("beszédtechnikát"), "beszédtechn");});
test("beszédtárgyat -> beszédtárgy", function() {deepEqual( Stem("beszédtárgyat"), "beszédtárgy");});
test("beszédtémáját -> beszédtémá", function() {deepEqual( Stem("beszédtémáját"), "beszédtémá");});
test("beszédátvitelkor -> beszédátvitel", function() {deepEqual( Stem("beszédátvitelkor"), "beszédátvitel");});
test("beszédértés -> beszédértés", function() {deepEqual( Stem("beszédértés"), "beszédértés");});
test("beszédírás -> beszédírás", function() {deepEqual( Stem("beszédírás"), "beszédírás");});
test("beszédírója -> beszédíró", function() {deepEqual( Stem("beszédírója"), "beszédíró");});
test("beszélgessenek -> beszélgess", function() {deepEqual( Stem("beszélgessenek"), "beszélgess");});
test("beszélget -> beszélg", function() {deepEqual( Stem("beszélget"), "beszélg");});
test("beszélgetünk -> beszélget", function() {deepEqual( Stem("beszélgetünk"), "beszélget");});
test("beszélgetek -> beszélget", function() {deepEqual( Stem("beszélgetek"), "beszélget");});
test("beszélgetett -> beszélgetet", function() {deepEqual( Stem("beszélgetett"), "beszélgetet");});
test("beszélgethetek -> beszélgethet", function() {deepEqual( Stem("beszélgethetek"), "beszélgethet");});
test("beszélgethetnek -> beszélgethet", function() {deepEqual( Stem("beszélgethetnek"), "beszélgethet");});
test("beszélgethetünk -> beszélgethet", function() {deepEqual( Stem("beszélgethetünk"), "beszélgethet");});
test("beszélgetnek -> beszélget", function() {deepEqual( Stem("beszélgetnek"), "beszélget");});
test("beszélgetni -> beszélgetn", function() {deepEqual( Stem("beszélgetni"), "beszélgetn");});
test("beszélgetniük -> beszélgetn", function() {deepEqual( Stem("beszélgetniük"), "beszélgetn");});
test("beszélgettek -> beszélgett", function() {deepEqual( Stem("beszélgettek"), "beszélgett");});
test("beszélgettem -> beszélgett", function() {deepEqual( Stem("beszélgettem"), "beszélgett");});
test("beszélgettük -> beszélgett", function() {deepEqual( Stem("beszélgettük"), "beszélgett");});
test("beszélgettünk -> beszélgett", function() {deepEqual( Stem("beszélgettünk"), "beszélgett");});
test("beszélgetve -> beszélgetv", function() {deepEqual( Stem("beszélgetve"), "beszélgetv");});
test("beszélgetésfoszlányok -> beszélgetésfoszlány", function() {deepEqual( Stem("beszélgetésfoszlányok"), "beszélgetésfoszlány");});
test("beszélgetés -> beszélgetés", function() {deepEqual( Stem("beszélgetés"), "beszélgetés");});
test("beszélgetésben -> beszélgetés", function() {deepEqual( Stem("beszélgetésben"), "beszélgetés");});
test("beszélgetésből -> beszélgetés", function() {deepEqual( Stem("beszélgetésből"), "beszélgetés");});
test("beszélgetéseikben -> beszélgetés", function() {deepEqual( Stem("beszélgetéseikben"), "beszélgetés");});
test("beszélgetéseinek -> beszélgetés", function() {deepEqual( Stem("beszélgetéseinek"), "beszélgetés");});
test("beszélgetések -> beszélgetés", function() {deepEqual( Stem("beszélgetések"), "beszélgetés");});
test("beszélgetéseket -> beszélgetés", function() {deepEqual( Stem("beszélgetéseket"), "beszélgetés");});
test("beszélgetéshez -> beszélgetés", function() {deepEqual( Stem("beszélgetéshez"), "beszélgetés");});
test("beszélgetésnek -> beszélgetés", function() {deepEqual( Stem("beszélgetésnek"), "beszélgetés");});
test("beszélgetésre -> beszélgetés", function() {deepEqual( Stem("beszélgetésre"), "beszélgetés");});
test("beszélgetésről -> beszélgetés", function() {deepEqual( Stem("beszélgetésről"), "beszélgetés");});
test("beszélgetéssel -> beszélgetés", function() {deepEqual( Stem("beszélgetéssel"), "beszélgetés");});
test("beszélgetést -> beszélgetés", function() {deepEqual( Stem("beszélgetést"), "beszélgetés");});
test("beszélgetését -> beszélgetés", function() {deepEqual( Stem("beszélgetését"), "beszélgetés");});
test("beszélgetésük -> beszélgetés", function() {deepEqual( Stem("beszélgetésük"), "beszélgetés");});
test("beszélgetésükből -> beszélgetés", function() {deepEqual( Stem("beszélgetésükből"), "beszélgetés");});
test("beszélgetésüket -> beszélgetés", function() {deepEqual( Stem("beszélgetésüket"), "beszélgetés");});
test("beszélgetésünk -> beszélgetés", function() {deepEqual( Stem("beszélgetésünk"), "beszélgetés");});
test("beszélgetésünket -> beszélgetés", function() {deepEqual( Stem("beszélgetésünket"), "beszélgetés");});
test("beszélgetési -> beszélgetés", function() {deepEqual( Stem("beszélgetési"), "beszélgetés");});
test("beszélgetők -> beszélgető", function() {deepEqual( Stem("beszélgetők"), "beszélgető");});
test("beszélgetőpartnerünk -> beszélgetőpartner", function() {deepEqual( Stem("beszélgetőpartnerünk"), "beszélgetőpartner");});
test("beszélhessek -> beszélhess", function() {deepEqual( Stem("beszélhessek"), "beszélhess");});
test("beszélhet -> beszélh", function() {deepEqual( Stem("beszélhet"), "beszélh");});
test("beszélhetek -> beszélhet", function() {deepEqual( Stem("beszélhetek"), "beszélhet");});
test("beszélhetnék -> beszélhetne", function() {deepEqual( Stem("beszélhetnék"), "beszélhetne");});
test("beszélhetnénk -> beszélhetne", function() {deepEqual( Stem("beszélhetnénk"), "beszélhetne");});
test("beszélhetsz -> beszélhetsz", function() {deepEqual( Stem("beszélhetsz"), "beszélhetsz");});
test("beszélhetünk -> beszélhet", function() {deepEqual( Stem("beszélhetünk"), "beszélhet");});
test("beszéli -> beszél", function() {deepEqual( Stem("beszéli"), "beszél");});
test("beszéltél -> beszéltél", function() {deepEqual( Stem("beszéltél"), "beszéltél");});
test("beszélünk -> beszél", function() {deepEqual( Stem("beszélünk"), "beszél");});
test("beszél -> beszél", function() {deepEqual( Stem("beszél"), "beszél");});
test("beszélek -> beszél", function() {deepEqual( Stem("beszélek"), "beszél");});
test("beszélj -> beszélj", function() {deepEqual( Stem("beszélj"), "beszélj");});
test("beszélje -> beszél", function() {deepEqual( Stem("beszélje"), "beszél");});
test("beszéljek -> beszélj", function() {deepEqual( Stem("beszéljek"), "beszélj");});
test("beszéljelek -> beszéljel", function() {deepEqual( Stem("beszéljelek"), "beszéljel");});
test("beszéljen -> beszélj", function() {deepEqual( Stem("beszéljen"), "beszélj");});
test("beszéljük -> beszél", function() {deepEqual( Stem("beszéljük"), "beszél");});
test("beszéljünk -> beszélj", function() {deepEqual( Stem("beszéljünk"), "beszélj");});
test("beszélne -> beszéln", function() {deepEqual( Stem("beszélne"), "beszéln");});
test("beszélnek -> beszél", function() {deepEqual( Stem("beszélnek"), "beszél");});
test("beszélnem -> beszéln", function() {deepEqual( Stem("beszélnem"), "beszéln");});
test("beszélni -> beszéln", function() {deepEqual( Stem("beszélni"), "beszéln");});
test("beszélnie -> beszéln", function() {deepEqual( Stem("beszélnie"), "beszéln");});
test("beszélniük -> beszéln", function() {deepEqual( Stem("beszélniük"), "beszéln");});
test("beszélnék -> beszélne", function() {deepEqual( Stem("beszélnék"), "beszélne");});
test("beszélnének -> beszéln", function() {deepEqual( Stem("beszélnének"), "beszéln");});
test("beszélnünk -> beszéln", function() {deepEqual( Stem("beszélnünk"), "beszéln");});
test("beszélsz -> beszélsz", function() {deepEqual( Stem("beszélsz"), "beszélsz");});
test("beszélt -> beszél", function() {deepEqual( Stem("beszélt"), "beszél");});
test("beszélte -> beszélt", function() {deepEqual( Stem("beszélte"), "beszélt");});
test("beszéltek -> beszélt", function() {deepEqual( Stem("beszéltek"), "beszélt");});
test("beszéltem -> beszélt", function() {deepEqual( Stem("beszéltem"), "beszélt");});
test("beszélték -> beszélte", function() {deepEqual( Stem("beszélték"), "beszélte");});
test("beszéltük -> beszélt", function() {deepEqual( Stem("beszéltük"), "beszélt");});
test("beszéltünk -> beszélt", function() {deepEqual( Stem("beszéltünk"), "beszélt");});
test("beszélve -> beszélv", function() {deepEqual( Stem("beszélve"), "beszélv");});
test("beszéltette -> beszéltett", function() {deepEqual( Stem("beszéltette"), "beszéltett");});
test("beszélír -> beszélír", function() {deepEqual( Stem("beszélír"), "beszélír");});
test("beszélírba -> beszélír", function() {deepEqual( Stem("beszélírba"), "beszélír");});
test("beszélírja -> beszélír", function() {deepEqual( Stem("beszélírja"), "beszélír");});
test("beszélírokba -> beszélír", function() {deepEqual( Stem("beszélírokba"), "beszélír");});
test("beszélírral -> beszélír", function() {deepEqual( Stem("beszélírral"), "beszélír");});
test("beszélírt -> beszélír", function() {deepEqual( Stem("beszélírt"), "beszélír");});
test("beszélírtól -> beszélír", function() {deepEqual( Stem("beszélírtól"), "beszélír");});
test("beszélő -> beszélő", function() {deepEqual( Stem("beszélő"), "beszélő");});
test("beszélőre -> beszélő", function() {deepEqual( Stem("beszélőre"), "beszélő");});
test("beszélőképességét -> beszélőképesség", function() {deepEqual( Stem("beszélőképességét"), "beszélőképesség");});
test("beszíjazták -> beszíjazta", function() {deepEqual( Stem("beszíjazták"), "beszíjazta");});
test("beszív -> beszív", function() {deepEqual( Stem("beszív"), "beszív");});
test("beszólt -> beszól", function() {deepEqual( Stem("beszólt"), "beszól");});
test("beszóltam -> beszólt", function() {deepEqual( Stem("beszóltam"), "beszólt");});
test("beszólások -> beszólás", function() {deepEqual( Stem("beszólások"), "beszólás");});
test("beszólítottak -> beszólított", function() {deepEqual( Stem("beszólítottak"), "beszólított");});
test("beszórt -> beszór", function() {deepEqual( Stem("beszórt"), "beszór");});
test("beszórtak -> beszórt", function() {deepEqual( Stem("beszórtak"), "beszórt");});
test("besző -> besző", function() {deepEqual( Stem("besző"), "besző");});
test("beszövegelünk -> beszövegel", function() {deepEqual( Stem("beszövegelünk"), "beszövegel");});
test("beszúrni -> beszúrn", function() {deepEqual( Stem("beszúrni"), "beszúrn");});
test("beszűküléséhez -> beszűkülés", function() {deepEqual( Stem("beszűküléséhez"), "beszűkülés");});
test("beszűkülésére -> beszűkülés", function() {deepEqual( Stem("beszűkülésére"), "beszűkülés");});
test("beszüntetni -> beszüntetn", function() {deepEqual( Stem("beszüntetni"), "beszüntetn");});
test("beszüntette -> beszüntett", function() {deepEqual( Stem("beszüntette"), "beszüntett");});
test("beszüntetése -> beszüntetés", function() {deepEqual( Stem("beszüntetése"), "beszüntetés");});
test("besározni -> besározn", function() {deepEqual( Stem("besározni"), "besározn");});
test("besötétedett -> besötétedet", function() {deepEqual( Stem("besötétedett"), "besötétedet");});
test("besúgások -> besúgás", function() {deepEqual( Stem("besúgások"), "besúgás");});
test("besúgó -> besúgó", function() {deepEqual( Stem("besúgó"), "besúgó");});
test("besúgók -> besúgó", function() {deepEqual( Stem("besúgók"), "besúgó");});
test("besúgókkal -> besúgó", function() {deepEqual( Stem("besúgókkal"), "besúgó");});
test("besütött -> besütöt", function() {deepEqual( Stem("besütött"), "besütöt");});
test("betakarja -> betakar", function() {deepEqual( Stem("betakarja"), "betakar");});
test("betakarítása -> betakarítás", function() {deepEqual( Stem("betakarítása"), "betakarítás");});
test("betakaró -> betakaró", function() {deepEqual( Stem("betakaró"), "betakaró");});
test("betanulni -> betanuln", function() {deepEqual( Stem("betanulni"), "betanuln");});
test("betanulásokat -> betanulás", function() {deepEqual( Stem("betanulásokat"), "betanulás");});
test("betanított -> betanítot", function() {deepEqual( Stem("betanított"), "betanítot");});
test("betanítás -> betanítás", function() {deepEqual( Stem("betanítás"), "betanítás");});
test("betapasztott -> betapasztot", function() {deepEqual( Stem("betapasztott"), "betapasztot");});
test("betartandó -> betartandó", function() {deepEqual( Stem("betartandó"), "betartandó");});
test("betartani -> betartan", function() {deepEqual( Stem("betartani"), "betartan");});
test("betartaná -> betartana", function() {deepEqual( Stem("betartaná"), "betartana");});
test("betartatják -> betartatja", function() {deepEqual( Stem("betartatják"), "betartatja");});
test("betartja -> betart", function() {deepEqual( Stem("betartja"), "betart");});
test("betartják -> betartja", function() {deepEqual( Stem("betartják"), "betartja");});
test("betartok -> betart", function() {deepEqual( Stem("betartok"), "betart");});
test("betartotta -> betartott", function() {deepEqual( Stem("betartotta"), "betartott");});
test("betartsák -> betartsa", function() {deepEqual( Stem("betartsák"), "betartsa");});
test("betartva -> betartv", function() {deepEqual( Stem("betartva"), "betartv");});
test("betartása -> betartás", function() {deepEqual( Stem("betartása"), "betartás");});
test("betartásában -> betartás", function() {deepEqual( Stem("betartásában"), "betartás");});
test("betartásához -> betartás", function() {deepEqual( Stem("betartásához"), "betartás");});
test("betartásának -> betartás", function() {deepEqual( Stem("betartásának"), "betartás");});
test("betartásáról -> betartás", function() {deepEqual( Stem("betartásáról"), "betartás");});
test("betartását -> betartás", function() {deepEqual( Stem("betartását"), "betartás");});
test("betartásával -> betartás", function() {deepEqual( Stem("betartásával"), "betartás");});
test("betaszították -> betaszította", function() {deepEqual( Stem("betaszították"), "betaszította");});
test("betegellátás -> betegellátás", function() {deepEqual( Stem("betegellátás"), "betegellátás");});
test("betegen -> beteg", function() {deepEqual( Stem("betegen"), "beteg");});
test("betegétől -> beteg", function() {deepEqual( Stem("betegétől"), "beteg");});
test("beteg -> beteg", function() {deepEqual( Stem("beteg"), "beteg");});
test("betegbe -> beteg", function() {deepEqual( Stem("betegbe"), "beteg");});
test("betegeihez -> beteg", function() {deepEqual( Stem("betegeihez"), "beteg");});
test("betegeit -> beteg", function() {deepEqual( Stem("betegeit"), "beteg");});
test("betegek -> beteg", function() {deepEqual( Stem("betegek"), "beteg");});
test("betegek -> beteg", function() {deepEqual( Stem("betegek"), "beteg");});
test("betegeken -> beteg", function() {deepEqual( Stem("betegeken"), "beteg");});
test("betegeket -> beteg", function() {deepEqual( Stem("betegeket"), "beteg");});
test("betegekkel -> beteg", function() {deepEqual( Stem("betegekkel"), "beteg");});
test("betegeknek -> beteg", function() {deepEqual( Stem("betegeknek"), "beteg");});
test("beteges -> beteges", function() {deepEqual( Stem("beteges"), "beteges");});
test("beteget -> beteg", function() {deepEqual( Stem("beteget"), "beteg");});
test("beteget -> beteg", function() {deepEqual( Stem("beteget"), "beteg");});
test("beteggel -> beteg", function() {deepEqual( Stem("beteggel"), "beteg");});
test("beteghez -> beteg", function() {deepEqual( Stem("beteghez"), "beteg");});
test("betegnek -> beteg", function() {deepEqual( Stem("betegnek"), "beteg");});
test("betegszabadságon -> betegszabadság", function() {deepEqual( Stem("betegszabadságon"), "betegszabadság");});
test("betegségfajta -> betegségfajt", function() {deepEqual( Stem("betegségfajta"), "betegségfajt");});
test("betegségkiváltó -> betegségkiváltó", function() {deepEqual( Stem("betegségkiváltó"), "betegségkiváltó");});
test("betegségre -> betegség", function() {deepEqual( Stem("betegségre"), "betegség");});
test("betegség -> betegség", function() {deepEqual( Stem("betegség"), "betegség");});
test("betegségben -> betegség", function() {deepEqual( Stem("betegségben"), "betegség");});
test("betegsége -> betegség", function() {deepEqual( Stem("betegsége"), "betegség");});
test("betegségedhez -> betegség", function() {deepEqual( Stem("betegségedhez"), "betegség");});
test("betegségeit -> betegség", function() {deepEqual( Stem("betegségeit"), "betegség");});
test("betegségek -> betegség", function() {deepEqual( Stem("betegségek"), "betegség");});
test("betegségekben -> betegség", function() {deepEqual( Stem("betegségekben"), "betegség");});
test("betegségeket -> betegség", function() {deepEqual( Stem("betegségeket"), "betegség");});
test("betegségekkel -> betegség", function() {deepEqual( Stem("betegségekkel"), "betegség");});
test("betegségekre -> betegség", function() {deepEqual( Stem("betegségekre"), "betegség");});
test("betegségekről -> betegség", function() {deepEqual( Stem("betegségekről"), "betegség");});
test("betegségektől -> betegség", function() {deepEqual( Stem("betegségektől"), "betegség");});
test("betegséget -> betegség", function() {deepEqual( Stem("betegséget"), "betegség");});
test("betegségében -> betegség", function() {deepEqual( Stem("betegségében"), "betegség");});
test("betegségét -> betegség", function() {deepEqual( Stem("betegségét"), "betegség");});
test("betegségük -> betegség", function() {deepEqual( Stem("betegségük"), "betegség");});
test("betegségünket -> betegség", function() {deepEqual( Stem("betegségünket"), "betegség");});
test("betegágya -> betegágy", function() {deepEqual( Stem("betegágya"), "betegágy");});
test("betegápolás -> betegápolás", function() {deepEqual( Stem("betegápolás"), "betegápolás");});
test("betehető -> betehető", function() {deepEqual( Stem("betehető"), "betehető");});
test("betekinthet -> betekinth", function() {deepEqual( Stem("betekinthet"), "betekinth");});
test("betekintés -> betekintés", function() {deepEqual( Stem("betekintés"), "betekintés");});
test("betekintési -> betekintés", function() {deepEqual( Stem("betekintési"), "betekintés");});
test("betekintést -> betekintés", function() {deepEqual( Stem("betekintést"), "betekintés");});
test("betekintő -> betekintő", function() {deepEqual( Stem("betekintő"), "betekintő");});
test("betelefonál -> betelef", function() {deepEqual( Stem("betelefonál"), "betelef");});
test("betelefonált -> betelefonál", function() {deepEqual( Stem("betelefonált"), "betelefonál");});
test("betelepedés -> betelepedés", function() {deepEqual( Stem("betelepedés"), "betelepedés");});
test("betelepedése -> betelepedés", function() {deepEqual( Stem("betelepedése"), "betelepedés");});
test("betelepíteni -> betelepíten", function() {deepEqual( Stem("betelepíteni"), "betelepíten");});
test("betelepített -> betelepítet", function() {deepEqual( Stem("betelepített"), "betelepítet");});
test("betelepítését -> betelepítés", function() {deepEqual( Stem("betelepítését"), "betelepítés");});
test("betelepülés -> betelepülés", function() {deepEqual( Stem("betelepülés"), "betelepülés");});
test("betelepülő -> betelepülő", function() {deepEqual( Stem("betelepülő"), "betelepülő");});
test("betelhet -> betelh", function() {deepEqual( Stem("betelhet"), "betelh");});
test("beteljesedett -> beteljesedet", function() {deepEqual( Stem("beteljesedett"), "beteljesedet");});
test("beteljesedik -> beteljesed", function() {deepEqual( Stem("beteljesedik"), "beteljesed");});
test("beteljesedtek -> beteljesedt", function() {deepEqual( Stem("beteljesedtek"), "beteljesedt");});
test("beteljesedés -> beteljesedés", function() {deepEqual( Stem("beteljesedés"), "beteljesedés");});
test("beteljesedésben -> beteljesedés", function() {deepEqual( Stem("beteljesedésben"), "beteljesedés");});
test("beteljesíthette -> beteljesíthett", function() {deepEqual( Stem("beteljesíthette"), "beteljesíthett");});
test("beteljesül -> beteljes", function() {deepEqual( Stem("beteljesül"), "beteljes");});
test("beteljesüljön -> beteljesülj", function() {deepEqual( Stem("beteljesüljön"), "beteljesülj");});
test("beteljesülne -> beteljesüln", function() {deepEqual( Stem("beteljesülne"), "beteljesüln");});
test("betelni -> beteln", function() {deepEqual( Stem("betelni"), "beteln");});
test("betelik -> betel", function() {deepEqual( Stem("betelik"), "betel");});
test("betelt -> betel", function() {deepEqual( Stem("betelt"), "betel");});
test("betemette -> betemett", function() {deepEqual( Stem("betemette"), "betemett");});
test("betemettetni -> betemettetn", function() {deepEqual( Stem("betemettetni"), "betemettetn");});
test("beterjesztésével -> beterjesztés", function() {deepEqual( Stem("beterjesztésével"), "beterjesztés");});
test("betervezhetők -> betervezhető", function() {deepEqual( Stem("betervezhetők"), "betervezhető");});
test("beterítik -> beterít", function() {deepEqual( Stem("beterítik"), "beterít");});
test("betesz -> betesz", function() {deepEqual( Stem("betesz"), "betesz");});
test("betenni -> betenn", function() {deepEqual( Stem("betenni"), "betenn");});
test("beteszek -> betesz", function() {deepEqual( Stem("beteszek"), "betesz");});
test("beteszem -> betesz", function() {deepEqual( Stem("beteszem"), "betesz");});
test("beteszi -> betesz", function() {deepEqual( Stem("beteszi"), "betesz");});
test("betette -> betett", function() {deepEqual( Stem("betette"), "betett");});
test("betettek -> betett", function() {deepEqual( Stem("betettek"), "betett");});
test("betettem -> betett", function() {deepEqual( Stem("betettem"), "betett");});
test("betett -> betet", function() {deepEqual( Stem("betett"), "betet");});
test("betetézte -> betetézt", function() {deepEqual( Stem("betetézte"), "betetézt");});
test("betetőzte -> betetőzt", function() {deepEqual( Stem("betetőzte"), "betetőzt");});
test("betetőzésének -> betetőzés", function() {deepEqual( Stem("betetőzésének"), "betetőzés");});
test("betiltott -> betiltot", function() {deepEqual( Stem("betiltott"), "betiltot");});
test("betiltják -> betiltja", function() {deepEqual( Stem("betiltják"), "betiltja");});
test("betiltotta -> betiltott", function() {deepEqual( Stem("betiltotta"), "betiltott");});
test("betiltsák -> betiltsa", function() {deepEqual( Stem("betiltsák"), "betiltsa");});
test("betolakodóra -> betolakodó", function() {deepEqual( Stem("betolakodóra"), "betolakodó");});
test("betolat -> betol", function() {deepEqual( Stem("betolat"), "betol");});
test("betoldások -> betoldás", function() {deepEqual( Stem("betoldások"), "betoldás");});
test("betoldást -> betoldás", function() {deepEqual( Stem("betoldást"), "betoldás");});
test("betolni -> betoln", function() {deepEqual( Stem("betolni"), "betoln");});
test("betoltuk -> betolt", function() {deepEqual( Stem("betoltuk"), "betolt");});
test("betonbunkerei -> betonbunker", function() {deepEqual( Stem("betonbunkerei"), "betonbunker");});
test("betonból -> beton", function() {deepEqual( Stem("betonból"), "beton");});
test("beton -> bet", function() {deepEqual( Stem("beton"), "bet");});
test("betonra -> beton", function() {deepEqual( Stem("betonra"), "beton");});
test("betonfal -> betonfal", function() {deepEqual( Stem("betonfal"), "betonfal");});
test("betonhordókat -> betonhordó", function() {deepEqual( Stem("betonhordókat"), "betonhordó");});
test("betonkocka -> betonkoc", function() {deepEqual( Stem("betonkocka"), "betonkoc");});
test("betonoszlopot -> betonoszlop", function() {deepEqual( Stem("betonoszlopot"), "betonoszlop");});
test("betonozni -> betonozn", function() {deepEqual( Stem("betonozni"), "betonozn");});
test("betonépületek -> betonépület", function() {deepEqual( Stem("betonépületek"), "betonépület");});
test("betoppant -> betoppan", function() {deepEqual( Stem("betoppant"), "betoppan");});
test("betoppantak -> betoppant", function() {deepEqual( Stem("betoppantak"), "betoppant");});
test("betusoltam -> betusolt", function() {deepEqual( Stem("betusoltam"), "betusolt");});
test("betáplálja -> betáplál", function() {deepEqual( Stem("betáplálja"), "betáplál");});
test("betáplált -> betáplál", function() {deepEqual( Stem("betáplált"), "betáplál");});
test("betáplálva -> betáplálv", function() {deepEqual( Stem("betáplálva"), "betáplálv");});
test("betáplálása -> betáplálás", function() {deepEqual( Stem("betáplálása"), "betáplálás");});
test("betárcsázással -> betárcsázás", function() {deepEqual( Stem("betárcsázással"), "betárcsázás");});
test("betársul -> betárs", function() {deepEqual( Stem("betársul"), "betárs");});
test("betársulni -> betársuln", function() {deepEqual( Stem("betársulni"), "betársuln");});
test("betársult -> betársul", function() {deepEqual( Stem("betársult"), "betársul");});
test("betérjünk -> betérj", function() {deepEqual( Stem("betérjünk"), "betérj");});
test("betért -> bet", function() {deepEqual( Stem("betért"), "bet");});
test("betértem -> betért", function() {deepEqual( Stem("betértem"), "betért");});
test("betértünk -> betért", function() {deepEqual( Stem("betértünk"), "betért");});
test("betétbiztosító -> betétbiztosító", function() {deepEqual( Stem("betétbiztosító"), "betétbiztosító");});
test("betétdalait -> betétdal", function() {deepEqual( Stem("betétdalait"), "betétdal");});
test("betétei -> betét", function() {deepEqual( Stem("betétei"), "betét");});
test("betéteit -> betét", function() {deepEqual( Stem("betéteit"), "betét");});
test("betétek -> betét", function() {deepEqual( Stem("betétek"), "betét");});
test("betéteket -> betét", function() {deepEqual( Stem("betéteket"), "betét");});
test("betéteknek -> betét", function() {deepEqual( Stem("betéteknek"), "betét");});
test("betét -> bet", function() {deepEqual( Stem("betét"), "bet");});
test("betétből -> betét", function() {deepEqual( Stem("betétből"), "betét");});
test("betétekre -> betét", function() {deepEqual( Stem("betétekre"), "betét");});
test("betétekről -> betét", function() {deepEqual( Stem("betétekről"), "betét");});
test("betétet -> betét", function() {deepEqual( Stem("betétet"), "betét");});
test("betétje -> betét", function() {deepEqual( Stem("betétje"), "betét");});
test("betétjének -> betét", function() {deepEqual( Stem("betétjének"), "betét");});
test("betétjét -> betét", function() {deepEqual( Stem("betétjét"), "betét");});
test("betétjeiket -> betét", function() {deepEqual( Stem("betétjeiket"), "betét");});
test("betétnek -> betét", function() {deepEqual( Stem("betétnek"), "betét");});
test("betétről -> betét", function() {deepEqual( Stem("betétről"), "betét");});
test("betétesek -> betétes", function() {deepEqual( Stem("betétesek"), "betétes");});
test("betétesekkel -> betétes", function() {deepEqual( Stem("betétesekkel"), "betétes");});
test("betéti -> betét", function() {deepEqual( Stem("betéti"), "betét");});
test("betétjegyek -> betétjegy", function() {deepEqual( Stem("betétjegyek"), "betétjegy");});
test("betétjegyet -> betétjegy", function() {deepEqual( Stem("betétjegyet"), "betétjegy");});
test("betétjegyről -> betétjegy", function() {deepEqual( Stem("betétjegyről"), "betétjegy");});
test("betétszámlaosztály -> betétszámlaosztály", function() {deepEqual( Stem("betétszámlaosztály"), "betétszámlaosztály");});
test("betéve -> betév", function() {deepEqual( Stem("betéve"), "betév");});
test("betéved -> betév", function() {deepEqual( Stem("betéved"), "betév");});
test("betévedt -> betév", function() {deepEqual( Stem("betévedt"), "betév");});
test("betódult -> betódul", function() {deepEqual( Stem("betódult"), "betódul");});
test("betöltetlen -> betöltetl", function() {deepEqual( Stem("betöltetlen"), "betöltetl");});
test("betölthető -> betölthető", function() {deepEqual( Stem("betölthető"), "betölthető");});
test("betölti -> betölt", function() {deepEqual( Stem("betölti"), "betölt");});
test("betölt -> betöl", function() {deepEqual( Stem("betölt"), "betöl");});
test("betölteni -> betölten", function() {deepEqual( Stem("betölteni"), "betölten");});
test("betöltenie -> betölten", function() {deepEqual( Stem("betöltenie"), "betölten");});
test("betöltik -> betölt", function() {deepEqual( Stem("betöltik"), "betölt");});
test("betöltse -> betölts", function() {deepEqual( Stem("betöltse"), "betölts");});
test("betöltsön -> betölts", function() {deepEqual( Stem("betöltsön"), "betölts");});
test("betöltése -> betöltés", function() {deepEqual( Stem("betöltése"), "betöltés");});
test("betöltésre -> betöltés", function() {deepEqual( Stem("betöltésre"), "betöltés");});
test("betöltésének -> betöltés", function() {deepEqual( Stem("betöltésének"), "betöltés");});
test("betöltéséről -> betöltés", function() {deepEqual( Stem("betöltéséről"), "betöltés");});
test("betöltését -> betöltés", function() {deepEqual( Stem("betöltését"), "betöltés");});
test("betöltötte -> betöltött", function() {deepEqual( Stem("betöltötte"), "betöltött");});
test("betöltöttek -> betöltött", function() {deepEqual( Stem("betöltöttek"), "betöltött");});
test("betöltötték -> betöltötte", function() {deepEqual( Stem("betöltötték"), "betöltötte");});
test("betöltő -> betöltő", function() {deepEqual( Stem("betöltő"), "betöltő");});
test("betöltőinek -> betöltő", function() {deepEqual( Stem("betöltőinek"), "betöltő");});
test("betöltők -> betöltő", function() {deepEqual( Stem("betöltők"), "betöltő");});
test("betöltőnyílása -> betöltőnyílás", function() {deepEqual( Stem("betöltőnyílása"), "betöltőnyílás");});
test("betöltött -> betöltöt", function() {deepEqual( Stem("betöltött"), "betöltöt");});
test("betömhetnék -> betömhetne", function() {deepEqual( Stem("betömhetnék"), "betömhetne");});
test("betömni -> betömn", function() {deepEqual( Stem("betömni"), "betömn");});
test("betömöm -> betömö", function() {deepEqual( Stem("betömöm"), "betömö");});
test("betört -> betör", function() {deepEqual( Stem("betört"), "betör");});
test("betöri -> betör", function() {deepEqual( Stem("betöri"), "betör");});
test("betörni -> betörn", function() {deepEqual( Stem("betörni"), "betörn");});
test("betörniük -> betörn", function() {deepEqual( Stem("betörniük"), "betörn");});
test("betörném -> betörne", function() {deepEqual( Stem("betörném"), "betörne");});
test("betörte -> betört", function() {deepEqual( Stem("betörte"), "betört");});
test("betörtek -> betört", function() {deepEqual( Stem("betörtek"), "betört");});
test("betörtem -> betört", function() {deepEqual( Stem("betörtem"), "betört");});
test("betörték -> betörte", function() {deepEqual( Stem("betörték"), "betörte");});
test("betörés -> betörés", function() {deepEqual( Stem("betörés"), "betörés");});
test("betörések -> betörés", function() {deepEqual( Stem("betörések"), "betörés");});
test("betörésről -> betörés", function() {deepEqual( Stem("betörésről"), "betörés");});
test("betörést -> betörés", function() {deepEqual( Stem("betörést"), "betörés");});
test("betörőbandát -> betörőband", function() {deepEqual( Stem("betörőbandát"), "betörőband");});
test("betörőnek -> betörő", function() {deepEqual( Stem("betörőnek"), "betörő");});
test("betörőt -> betörő", function() {deepEqual( Stem("betörőt"), "betörő");});
test("betűcsoport -> betűcsopor", function() {deepEqual( Stem("betűcsoport"), "betűcsopor");});
test("betűjel -> betűjel", function() {deepEqual( Stem("betűjel"), "betűjel");});
test("betűjele -> betűjel", function() {deepEqual( Stem("betűjele"), "betűjel");});
test("betűjelekről -> betűjel", function() {deepEqual( Stem("betűjelekről"), "betűjel");});
test("betűjelet -> betűjel", function() {deepEqual( Stem("betűjelet"), "betűjel");});
test("betűjelhez -> betűjel", function() {deepEqual( Stem("betűjelhez"), "betűjel");});
test("betűjellel -> betűjel", function() {deepEqual( Stem("betűjellel"), "betűjel");});
test("betűjelre -> betűjel", function() {deepEqual( Stem("betűjelre"), "betűjel");});
test("betűjelét -> betűjel", function() {deepEqual( Stem("betűjelét"), "betűjel");});
test("betűjelünk -> betűjel", function() {deepEqual( Stem("betűjelünk"), "betűjel");});
test("betűjelű -> betűjelű", function() {deepEqual( Stem("betűjelű"), "betűjelű");});
test("betűk -> betű", function() {deepEqual( Stem("betűk"), "betű");});
test("betűhöz -> betű", function() {deepEqual( Stem("betűhöz"), "betű");});
test("betűi -> betű", function() {deepEqual( Stem("betűi"), "betű");});
test("betű -> betű", function() {deepEqual( Stem("betű"), "betű");});
test("betűje -> betű", function() {deepEqual( Stem("betűje"), "betű");});
test("betűkből -> betű", function() {deepEqual( Stem("betűkből"), "betű");});
test("betűket -> betű", function() {deepEqual( Stem("betűket"), "betű");});
test("betűkkel -> betű", function() {deepEqual( Stem("betűkkel"), "betű");});
test("betűvel -> betű", function() {deepEqual( Stem("betűvel"), "betű");});
test("betűt -> betű", function() {deepEqual( Stem("betűt"), "betű");});
test("betűs -> betűs", function() {deepEqual( Stem("betűs"), "betűs");});
test("betűszó -> betűszó", function() {deepEqual( Stem("betűszó"), "betűszó");});
test("betűző -> betűző", function() {deepEqual( Stem("betűző"), "betűző");});
test("beugorhass -> beugorhass", function() {deepEqual( Stem("beugorhass"), "beugorhass");});
test("beugrani -> beugran", function() {deepEqual( Stem("beugrani"), "beugran");});
test("beugrattak -> beugratt", function() {deepEqual( Stem("beugrattak"), "beugratt");});
test("beugrott -> beugrot", function() {deepEqual( Stem("beugrott"), "beugrot");});
test("beugrált -> beugrál", function() {deepEqual( Stem("beugrált"), "beugrál");});
test("beugró -> beugró", function() {deepEqual( Stem("beugró"), "beugró");});
test("beugróban -> beugró", function() {deepEqual( Stem("beugróban"), "beugró");});
test("beugrót -> beugró", function() {deepEqual( Stem("beugrót"), "beugró");});
test("beutalót -> beutaló", function() {deepEqual( Stem("beutalót"), "beutaló");});
test("beutaztunk -> beutazt", function() {deepEqual( Stem("beutaztunk"), "beutazt");});
test("bevacsoráztunk -> bevacsorázt", function() {deepEqual( Stem("bevacsoráztunk"), "bevacsorázt");});
test("bevakítottam -> bevakított", function() {deepEqual( Stem("bevakítottam"), "bevakított");});
test("bevallható -> bevallható", function() {deepEqual( Stem("bevallható"), "bevallható");});
test("bevallja -> bevall", function() {deepEqual( Stem("bevallja"), "bevall");});
test("bevallani -> bevallan", function() {deepEqual( Stem("bevallani"), "bevallan");});
test("bevallják -> bevallja", function() {deepEqual( Stem("bevallják"), "bevallja");});
test("bevallom -> bevall", function() {deepEqual( Stem("bevallom"), "bevall");});
test("bevallott -> bevallot", function() {deepEqual( Stem("bevallott"), "bevallot");});
test("bevallotta -> bevallott", function() {deepEqual( Stem("bevallotta"), "bevallott");});
test("bevallottak -> bevallott", function() {deepEqual( Stem("bevallottak"), "bevallott");});
test("bevallottan -> bevallott", function() {deepEqual( Stem("bevallottan"), "bevallott");});
test("bevallották -> bevallotta", function() {deepEqual( Stem("bevallották"), "bevallotta");});
test("bevallva -> bevallv", function() {deepEqual( Stem("bevallva"), "bevallv");});
test("bevallása -> bevallás", function() {deepEqual( Stem("bevallása"), "bevallás");});
test("bevallásokban -> bevallás", function() {deepEqual( Stem("bevallásokban"), "bevallás");});
test("bevallásokhoz -> bevallás", function() {deepEqual( Stem("bevallásokhoz"), "bevallás");});
test("bevarrt -> bevarr", function() {deepEqual( Stem("bevarrt"), "bevarr");});
test("bevasalni -> bevasaln", function() {deepEqual( Stem("bevasalni"), "bevasaln");});
test("bevehetetlen -> bevehetetl", function() {deepEqual( Stem("bevehetetlen"), "bevehetetl");});
test("beverekedik -> bevereked", function() {deepEqual( Stem("beverekedik"), "bevereked");});
test("beverhetné -> beverhetn", function() {deepEqual( Stem("beverhetné"), "beverhetn");});
test("beverje -> bever", function() {deepEqual( Stem("beverje"), "bever");});
test("beverem -> bever", function() {deepEqual( Stem("beverem"), "bever");});
test("bevert -> bever", function() {deepEqual( Stem("bevert"), "bever");});
test("beverte -> bevert", function() {deepEqual( Stem("beverte"), "bevert");});
test("beveszi -> bevesz", function() {deepEqual( Stem("beveszi"), "bevesz");});
test("beveszik -> bevesz", function() {deepEqual( Stem("beveszik"), "bevesz");});
test("bevenni -> bevenn", function() {deepEqual( Stem("bevenni"), "bevenn");});
test("bevett -> bevet", function() {deepEqual( Stem("bevett"), "bevet");});
test("bevették -> bevette", function() {deepEqual( Stem("bevették"), "bevette");});
test("bevette -> bevett", function() {deepEqual( Stem("bevette"), "bevett");});
test("bevettem -> bevett", function() {deepEqual( Stem("bevettem"), "bevett");});
test("bevetetlen -> bevetetl", function() {deepEqual( Stem("bevetetlen"), "bevetetl");});
test("bevetetni -> bevetetn", function() {deepEqual( Stem("bevetetni"), "bevetetn");});
test("bevetett -> bevetet", function() {deepEqual( Stem("bevetett"), "bevetet");});
test("bevetette -> bevetett", function() {deepEqual( Stem("bevetette"), "bevetett");});
test("bevetettem -> bevetett", function() {deepEqual( Stem("bevetettem"), "bevetett");});
test("bevethessenek -> bevethess", function() {deepEqual( Stem("bevethessenek"), "bevethess");});
test("bevethető -> bevethető", function() {deepEqual( Stem("bevethető"), "bevethető");});
test("bevethetővé -> bevethető", function() {deepEqual( Stem("bevethetővé"), "bevethető");});
test("bevetik -> bevet", function() {deepEqual( Stem("bevetik"), "bevet");});
test("bevetni -> bevetn", function() {deepEqual( Stem("bevetni"), "bevetn");});
test("bevetés -> bevetés", function() {deepEqual( Stem("bevetés"), "bevetés");});
test("bevetése -> bevetés", function() {deepEqual( Stem("bevetése"), "bevetés");});
test("bevetések -> bevetés", function() {deepEqual( Stem("bevetések"), "bevetés");});
test("bevetéseken -> bevetés", function() {deepEqual( Stem("bevetéseken"), "bevetés");});
test("bevetésre -> bevetés", function() {deepEqual( Stem("bevetésre"), "bevetés");});
test("bevetésének -> bevetés", function() {deepEqual( Stem("bevetésének"), "bevetés");});
test("bevetésére -> bevetés", function() {deepEqual( Stem("bevetésére"), "bevetés");});
test("bevetésével -> bevetés", function() {deepEqual( Stem("bevetésével"), "bevetés");});
test("bevezessék -> bevezesse", function() {deepEqual( Stem("bevezessék"), "bevezesse");});
test("bevezetendő -> bevezetendő", function() {deepEqual( Stem("bevezetendő"), "bevezetendő");});
test("bevezetett -> bevezetet", function() {deepEqual( Stem("bevezetett"), "bevezetet");});
test("bevezethető -> bevezethető", function() {deepEqual( Stem("bevezethető"), "bevezethető");});
test("bevezettetni -> bevezettetn", function() {deepEqual( Stem("bevezettetni"), "bevezettetn");});
test("bevezettetésével -> bevezettetés", function() {deepEqual( Stem("bevezettetésével"), "bevezettetés");});
test("bevezették -> bevezette", function() {deepEqual( Stem("bevezették"), "bevezette");});
test("bevezeti -> bevezet", function() {deepEqual( Stem("bevezeti"), "bevezet");});
test("bevezet -> bevez", function() {deepEqual( Stem("bevezet"), "bevez");});
test("bevezetik -> bevezet", function() {deepEqual( Stem("bevezetik"), "bevezet");});
test("bevezetni -> bevezetn", function() {deepEqual( Stem("bevezetni"), "bevezetn");});
test("bevezette -> bevezett", function() {deepEqual( Stem("bevezette"), "bevezett");});
test("bevezettek -> bevezett", function() {deepEqual( Stem("bevezettek"), "bevezett");});
test("bevezetési -> bevezetés", function() {deepEqual( Stem("bevezetési"), "bevezetés");});
test("bevezetés -> bevezetés", function() {deepEqual( Stem("bevezetés"), "bevezetés");});
test("bevezetése -> bevezetés", function() {deepEqual( Stem("bevezetése"), "bevezetés");});
test("bevezetések -> bevezetés", function() {deepEqual( Stem("bevezetések"), "bevezetés");});
test("bevezetésekor -> bevezetés", function() {deepEqual( Stem("bevezetésekor"), "bevezetés");});
test("bevezetéshez -> bevezetés", function() {deepEqual( Stem("bevezetéshez"), "bevezetés");});
test("bevezetéskor -> bevezetés", function() {deepEqual( Stem("bevezetéskor"), "bevezetés");});
test("bevezetésnek -> bevezetés", function() {deepEqual( Stem("bevezetésnek"), "bevezetés");});
test("bevezetésnél -> bevezetés", function() {deepEqual( Stem("bevezetésnél"), "bevezetés");});
test("bevezetésre -> bevezetés", function() {deepEqual( Stem("bevezetésre"), "bevezetés");});
test("bevezetést -> bevezetés", function() {deepEqual( Stem("bevezetést"), "bevezetés");});
test("bevezetésében -> bevezetés", function() {deepEqual( Stem("bevezetésében"), "bevezetés");});
test("bevezetéséhez -> bevezetés", function() {deepEqual( Stem("bevezetéséhez"), "bevezetés");});
test("bevezetésének -> bevezetés", function() {deepEqual( Stem("bevezetésének"), "bevezetés");});
test("bevezetésére -> bevezetés", function() {deepEqual( Stem("bevezetésére"), "bevezetés");});
test("bevezetéséről -> bevezetés", function() {deepEqual( Stem("bevezetéséről"), "bevezetés");});
test("bevezetését -> bevezetés", function() {deepEqual( Stem("bevezetését"), "bevezetés");});
test("bevezetésétől -> bevezetés", function() {deepEqual( Stem("bevezetésétől"), "bevezetés");});
test("bevezetésével -> bevezetés", function() {deepEqual( Stem("bevezetésével"), "bevezetés");});
test("bevezetésük -> bevezetés", function() {deepEqual( Stem("bevezetésük"), "bevezetés");});
test("bevezetésül -> bevezetés", function() {deepEqual( Stem("bevezetésül"), "bevezetés");});
test("bevezető -> bevezető", function() {deepEqual( Stem("bevezető"), "bevezető");});
test("bevezetőben -> bevezető", function() {deepEqual( Stem("bevezetőben"), "bevezető");});
test("bevezetők -> bevezető", function() {deepEqual( Stem("bevezetők"), "bevezető");});
test("bevezetőt -> bevezető", function() {deepEqual( Stem("bevezetőt"), "bevezető");});
test("bevihetők -> bevihető", function() {deepEqual( Stem("bevihetők"), "bevihető");});
test("bevilágítja -> bevilágít", function() {deepEqual( Stem("bevilágítja"), "bevilágít");});
test("bevilágítsa -> bevilágíts", function() {deepEqual( Stem("bevilágítsa"), "bevilágíts");});
test("bevinni -> bevinn", function() {deepEqual( Stem("bevinni"), "bevinn");});
test("bevirágozott -> bevirágozot", function() {deepEqual( Stem("bevirágozott"), "bevirágozot");});
test("bevitele -> bevitel", function() {deepEqual( Stem("bevitele"), "bevitel");});
test("bevitelét -> bevitel", function() {deepEqual( Stem("bevitelét"), "bevitel");});
test("bevitorlázik -> bevitorláz", function() {deepEqual( Stem("bevitorlázik"), "bevitorláz");});
test("bevitt -> bevit", function() {deepEqual( Stem("bevitt"), "bevit");});
test("bevisznek -> bevisz", function() {deepEqual( Stem("bevisznek"), "bevisz");});
test("bevitte -> bevitt", function() {deepEqual( Stem("bevitte"), "bevitt");});
test("bevitték -> bevitte", function() {deepEqual( Stem("bevitték"), "bevitte");});
test("bevittük -> bevitt", function() {deepEqual( Stem("bevittük"), "bevitt");});
test("bevizeztük -> bevizezt", function() {deepEqual( Stem("bevizeztük"), "bevizezt");});
test("bevizsgáláson -> bevizsgálás", function() {deepEqual( Stem("bevizsgáláson"), "bevizsgálás");});
test("bevonandó -> bevonandó", function() {deepEqual( Stem("bevonandó"), "bevonandó");});
test("bevonatos -> bevonatos", function() {deepEqual( Stem("bevonatos"), "bevonatos");});
test("bevonja -> bevon", function() {deepEqual( Stem("bevonja"), "bevon");});
test("bevonják -> bevonja", function() {deepEqual( Stem("bevonják"), "bevonja");});
test("bevonni -> bevonn", function() {deepEqual( Stem("bevonni"), "bevonn");});
test("bevonnia -> bevonn", function() {deepEqual( Stem("bevonnia"), "bevonn");});
test("bevont -> bevon", function() {deepEqual( Stem("bevont"), "bevon");});
test("bevontam -> bevont", function() {deepEqual( Stem("bevontam"), "bevont");});
test("bevonták -> bevonta", function() {deepEqual( Stem("bevonták"), "bevonta");});
test("bevontatott -> bevontatot", function() {deepEqual( Stem("bevontatott"), "bevontatot");});
test("bevonuljon -> bevonulj", function() {deepEqual( Stem("bevonuljon"), "bevonulj");});
test("bevonulok -> bevonul", function() {deepEqual( Stem("bevonulok"), "bevonul");});
test("bevonultam -> bevonult", function() {deepEqual( Stem("bevonultam"), "bevonult");});
test("bevonultunk -> bevonult", function() {deepEqual( Stem("bevonultunk"), "bevonult");});
test("bevonult -> bevonul", function() {deepEqual( Stem("bevonult"), "bevonul");});
test("bevonulás -> bevonulás", function() {deepEqual( Stem("bevonulás"), "bevonulás");});
test("bevonulása -> bevonulás", function() {deepEqual( Stem("bevonulása"), "bevonulás");});
test("bevonulásakor -> bevonulás", function() {deepEqual( Stem("bevonulásakor"), "bevonulás");});
test("bevonuláskor -> bevonulás", function() {deepEqual( Stem("bevonuláskor"), "bevonulás");});
test("bevonulásnál -> bevonulás", function() {deepEqual( Stem("bevonulásnál"), "bevonulás");});
test("bevonulást -> bevonulás", function() {deepEqual( Stem("bevonulást"), "bevonulás");});
test("bevonulását -> bevonulás", function() {deepEqual( Stem("bevonulását"), "bevonulás");});
test("bevonuló -> bevonuló", function() {deepEqual( Stem("bevonuló"), "bevonuló");});
test("bevonva -> bevonv", function() {deepEqual( Stem("bevonva"), "bevonv");});
test("bevonás -> bevonás", function() {deepEqual( Stem("bevonás"), "bevonás");});
test("bevonása -> bevonás", function() {deepEqual( Stem("bevonása"), "bevonás");});
test("bevonásakor -> bevonás", function() {deepEqual( Stem("bevonásakor"), "bevonás");});
test("bevonási -> bevonás", function() {deepEqual( Stem("bevonási"), "bevonás");});
test("bevonásnál -> bevonás", function() {deepEqual( Stem("bevonásnál"), "bevonás");});
test("bevonást -> bevonás", function() {deepEqual( Stem("bevonást"), "bevonás");});
test("bevonástól -> bevonás", function() {deepEqual( Stem("bevonástól"), "bevonás");});
test("bevonásához -> bevonás", function() {deepEqual( Stem("bevonásához"), "bevonás");});
test("bevonásáig -> bevonás", function() {deepEqual( Stem("bevonásáig"), "bevonás");});
test("bevonásának -> bevonás", function() {deepEqual( Stem("bevonásának"), "bevonás");});
test("bevonására -> bevonás", function() {deepEqual( Stem("bevonására"), "bevonás");});
test("bevonását -> bevonás", function() {deepEqual( Stem("bevonását"), "bevonás");});
test("bevonásától -> bevonás", function() {deepEqual( Stem("bevonásától"), "bevonás");});
test("bevonásával -> bevonás", function() {deepEqual( Stem("bevonásával"), "bevonás");});
test("bevádolt -> bevádol", function() {deepEqual( Stem("bevádolt"), "bevádol");});
test("bevágja -> bevág", function() {deepEqual( Stem("bevágja"), "bevág");});
test("bevágok -> bevág", function() {deepEqual( Stem("bevágok"), "bevág");});
test("bevágom -> bevág", function() {deepEqual( Stem("bevágom"), "bevág");});
test("bevágta -> bevágt", function() {deepEqual( Stem("bevágta"), "bevágt");});
test("bevágtam -> bevágt", function() {deepEqual( Stem("bevágtam"), "bevágt");});
test("beválasztásáról -> beválasztás", function() {deepEqual( Stem("beválasztásáról"), "beválasztás");});
test("bevált -> bevál", function() {deepEqual( Stem("bevált"), "bevál");});
test("beválthassa -> beválthass", function() {deepEqual( Stem("beválthassa"), "beválthass");});
test("beválthatják -> beválthatja", function() {deepEqual( Stem("beválthatják"), "beválthatja");});
test("beváltott -> beváltot", function() {deepEqual( Stem("beváltott"), "beváltot");});
test("beváltja -> bevált", function() {deepEqual( Stem("beváltja"), "bevált");});
test("beválik -> bevál", function() {deepEqual( Stem("beválik"), "bevál");});
test("beváltak -> bevált", function() {deepEqual( Stem("beváltak"), "bevált");});
test("beváltják -> beváltja", function() {deepEqual( Stem("beváltják"), "beváltja");});
test("beváltotta -> beváltott", function() {deepEqual( Stem("beváltotta"), "beváltott");});
test("beváltották -> beváltotta", function() {deepEqual( Stem("beváltották"), "beváltotta");});
test("beváltás -> beváltás", function() {deepEqual( Stem("beváltás"), "beváltás");});
test("beváltásával -> beváltás", function() {deepEqual( Stem("beváltásával"), "beváltás");});
test("bevándorlási -> bevándorlás", function() {deepEqual( Stem("bevándorlási"), "bevándorlás");});
test("bevándorlók -> bevándorló", function() {deepEqual( Stem("bevándorlók"), "bevándorló");});
test("bevándorlókból -> bevándorló", function() {deepEqual( Stem("bevándorlókból"), "bevándorló");});
test("bevándorlókra -> bevándorló", function() {deepEqual( Stem("bevándorlókra"), "bevándorló");});
test("bevárni -> bevárn", function() {deepEqual( Stem("bevárni"), "bevárn");});
test("bevárnia -> bevárn", function() {deepEqual( Stem("bevárnia"), "bevárn");});
test("bevárnák -> bevárna", function() {deepEqual( Stem("bevárnák"), "bevárna");});
test("bevárom -> bevár", function() {deepEqual( Stem("bevárom"), "bevár");});
test("bevárta -> bevárt", function() {deepEqual( Stem("bevárta"), "bevárt");});
test("bevártál -> bevártál", function() {deepEqual( Stem("bevártál"), "bevártál");});
test("bevárása -> bevárás", function() {deepEqual( Stem("bevárása"), "bevárás");});
test("bevásárlás -> bevásárlás", function() {deepEqual( Stem("bevásárlás"), "bevásárlás");});
test("bevásárlási -> bevásárlás", function() {deepEqual( Stem("bevásárlási"), "bevásárlás");});
test("bevásárlócentrum -> bevásárlócentru", function() {deepEqual( Stem("bevásárlócentrum"), "bevásárlócentru");});
test("bevásárlóközpont -> bevásárlóközpon", function() {deepEqual( Stem("bevásárlóközpont"), "bevásárlóközpon");});
test("bevásárlóközpontját -> bevásárlóközpont", function() {deepEqual( Stem("bevásárlóközpontját"), "bevásárlóközpont");});
test("bevásárlóközpontok -> bevásárlóközpont", function() {deepEqual( Stem("bevásárlóközpontok"), "bevásárlóközpont");});
test("bevásárlóközpontokat -> bevásárlóközpont", function() {deepEqual( Stem("bevásárlóközpontokat"), "bevásárlóközpont");});
test("bevásárlóközpontokig -> bevásárlóközpont", function() {deepEqual( Stem("bevásárlóközpontokig"), "bevásárlóközpont");});
test("bevásárlóudvarok -> bevásárlóudvar", function() {deepEqual( Stem("bevásárlóudvarok"), "bevásárlóudvar");});
test("bevásárolni -> bevásároln", function() {deepEqual( Stem("bevásárolni"), "bevásároln");});
test("bevásároltak -> bevásárolt", function() {deepEqual( Stem("bevásároltak"), "bevásárolt");});
test("bevásároltunk -> bevásárolt", function() {deepEqual( Stem("bevásároltunk"), "bevásárolt");});
test("bevésése -> bevésés", function() {deepEqual( Stem("bevésése"), "bevésés");});
test("bevésődött -> bevésődöt", function() {deepEqual( Stem("bevésődött"), "bevésődöt");});
test("bevételarányos -> bevételarányos", function() {deepEqual( Stem("bevételarányos"), "bevételarányos");});
test("bevételből -> bevétel", function() {deepEqual( Stem("bevételből"), "bevétel");});
test("bevételre -> bevétel", function() {deepEqual( Stem("bevételre"), "bevétel");});
test("bevételt -> bevétel", function() {deepEqual( Stem("bevételt"), "bevétel");});
test("bevételéből -> bevétel", function() {deepEqual( Stem("bevételéből"), "bevétel");});
test("bevételéhez -> bevétel", function() {deepEqual( Stem("bevételéhez"), "bevétel");});
test("bevételének -> bevétel", function() {deepEqual( Stem("bevételének"), "bevétel");});
test("bevételét -> bevétel", function() {deepEqual( Stem("bevételét"), "bevétel");});
test("bevételük -> bevétel", function() {deepEqual( Stem("bevételük"), "bevétel");});
test("bevétel -> bevétel", function() {deepEqual( Stem("bevétel"), "bevétel");});
test("bevétele -> bevétel", function() {deepEqual( Stem("bevétele"), "bevétel");});
test("bevételei -> bevétel", function() {deepEqual( Stem("bevételei"), "bevétel");});
test("bevételeiben -> bevétel", function() {deepEqual( Stem("bevételeiben"), "bevétel");});
test("bevételeik -> bevétel", function() {deepEqual( Stem("bevételeik"), "bevétel");});
test("bevételeinek -> bevétel", function() {deepEqual( Stem("bevételeinek"), "bevétel");});
test("bevételeiről -> bevétel", function() {deepEqual( Stem("bevételeiről"), "bevétel");});
test("bevételeit -> bevétel", function() {deepEqual( Stem("bevételeit"), "bevétel");});
test("bevételek -> bevétel", function() {deepEqual( Stem("bevételek"), "bevétel");});
test("bevételekből -> bevétel", function() {deepEqual( Stem("bevételekből"), "bevétel");});
test("bevételként -> bevétel", function() {deepEqual( Stem("bevételként"), "bevétel");});
test("bevételeket -> bevétel", function() {deepEqual( Stem("bevételeket"), "bevétel");});
test("bevételekkel -> bevétel", function() {deepEqual( Stem("bevételekkel"), "bevétel");});
test("bevételeknek -> bevétel", function() {deepEqual( Stem("bevételeknek"), "bevétel");});
test("bevételhez -> bevétel", function() {deepEqual( Stem("bevételhez"), "bevétel");});
test("bevétellel -> bevétel", function() {deepEqual( Stem("bevétellel"), "bevétel");});
test("bevételnek -> bevétel", function() {deepEqual( Stem("bevételnek"), "bevétel");});
test("bevételforrásnak -> bevételforrás", function() {deepEqual( Stem("bevételforrásnak"), "bevételforrás");});
test("bevételforrásokat -> bevételforrás", function() {deepEqual( Stem("bevételforrásokat"), "bevételforrás");});
test("bevételi -> bevétel", function() {deepEqual( Stem("bevételi"), "bevétel");});
test("bevételkiesést -> bevételkiesés", function() {deepEqual( Stem("bevételkiesést"), "bevételkiesés");});
test("bevételkiesésük -> bevételkiesés", function() {deepEqual( Stem("bevételkiesésük"), "bevételkiesés");});
test("bevételnövekedés -> bevételnövekedés", function() {deepEqual( Stem("bevételnövekedés"), "bevételnövekedés");});
test("bevételnövekedésre -> bevételnövekedés", function() {deepEqual( Stem("bevételnövekedésre"), "bevételnövekedés");});
test("bevételnövelő -> bevételnövelő", function() {deepEqual( Stem("bevételnövelő"), "bevételnövelő");});
test("bezzeg -> bezzeg", function() {deepEqual( Stem("bezzeg"), "bezzeg");});
test("bezárathattuk -> bezárathatt", function() {deepEqual( Stem("bezárathattuk"), "bezárathatt");});
test("bezárhatunk -> bezárhat", function() {deepEqual( Stem("bezárhatunk"), "bezárhat");});
test("bezáratott -> bezáratot", function() {deepEqual( Stem("bezáratott"), "bezáratot");});
test("bezárkóztak -> bezárkózt", function() {deepEqual( Stem("bezárkóztak"), "bezárkózt");});
test("bezárt -> bezár", function() {deepEqual( Stem("bezárt"), "bezár");});
test("bezárnak -> bezár", function() {deepEqual( Stem("bezárnak"), "bezár");});
test("bezárja -> bezár", function() {deepEqual( Stem("bezárja"), "bezár");});
test("bezárjanak -> bezár", function() {deepEqual( Stem("bezárjanak"), "bezár");});
test("bezárjuk -> bezár", function() {deepEqual( Stem("bezárjuk"), "bezár");});
test("bezárják -> bezárja", function() {deepEqual( Stem("bezárják"), "bezárja");});
test("bezárni -> bezárn", function() {deepEqual( Stem("bezárni"), "bezárn");});
test("bezárnák -> bezárna", function() {deepEqual( Stem("bezárnák"), "bezárna");});
test("bezárta -> bezárt", function() {deepEqual( Stem("bezárta"), "bezárt");});
test("bezártak -> bezárt", function() {deepEqual( Stem("bezártak"), "bezárt");});
test("bezártam -> bezárt", function() {deepEqual( Stem("bezártam"), "bezárt");});
test("bezártnál -> bezárt", function() {deepEqual( Stem("bezártnál"), "bezárt");});
test("bezártunk -> bezárt", function() {deepEqual( Stem("bezártunk"), "bezárt");});
test("bezárták -> bezárta", function() {deepEqual( Stem("bezárták"), "bezárta");});
test("bezárva -> bezárv", function() {deepEqual( Stem("bezárva"), "bezárv");});
test("bezárás -> bezárás", function() {deepEqual( Stem("bezárás"), "bezárás");});
test("bezárása -> bezárás", function() {deepEqual( Stem("bezárása"), "bezárás");});
test("bezárásakor -> bezárás", function() {deepEqual( Stem("bezárásakor"), "bezárás");});
test("bezárásokkal -> bezárás", function() {deepEqual( Stem("bezárásokkal"), "bezárás");});
test("bezárástól -> bezárás", function() {deepEqual( Stem("bezárástól"), "bezárás");});
test("bezárásának -> bezárás", function() {deepEqual( Stem("bezárásának"), "bezárás");});
test("bezárására -> bezárás", function() {deepEqual( Stem("bezárására"), "bezárás");});
test("bezárásáról -> bezárás", function() {deepEqual( Stem("bezárásáról"), "bezárás");});
test("bezárását -> bezárás", function() {deepEqual( Stem("bezárását"), "bezárás");});
test("bezáróan -> bezáró", function() {deepEqual( Stem("bezáróan"), "bezáró");});
test("beágyazom -> beágyaz", function() {deepEqual( Stem("beágyazom"), "beágyaz");});
test("beágyazzak -> beágyazz", function() {deepEqual( Stem("beágyazzak"), "beágyazz");});
test("beágyazott -> beágyazot", function() {deepEqual( Stem("beágyazott"), "beágyazot");});
test("beágyazottsága -> beágyazottság", function() {deepEqual( Stem("beágyazottsága"), "beágyazottság");});
test("beállhat -> beállh", function() {deepEqual( Stem("beállhat"), "beállh");});
test("beállott -> beállot", function() {deepEqual( Stem("beállott"), "beállot");});
test("beállt -> beáll", function() {deepEqual( Stem("beállt"), "beáll");});
test("beáll -> beáll", function() {deepEqual( Stem("beáll"), "beáll");});
test("beálljanak -> beáll", function() {deepEqual( Stem("beálljanak"), "beáll");});
test("beálltak -> beállt", function() {deepEqual( Stem("beálltak"), "beállt");});
test("beálltunk -> beállt", function() {deepEqual( Stem("beálltunk"), "beállt");});
test("beálltához -> beállt", function() {deepEqual( Stem("beálltához"), "beállt");});
test("beálltával -> beállt", function() {deepEqual( Stem("beálltával"), "beállt");});
test("beállása -> beállás", function() {deepEqual( Stem("beállása"), "beállás");});
test("beállíthat -> beállíth", function() {deepEqual( Stem("beállíthat"), "beállíth");});
test("beállíthatja -> beállíthat", function() {deepEqual( Stem("beállíthatja"), "beállíthat");});
test("beállíthatjuk -> beállíthat", function() {deepEqual( Stem("beállíthatjuk"), "beállíthat");});
test("beállíthatják -> beállíthatja", function() {deepEqual( Stem("beállíthatják"), "beállíthatja");});
test("beállíthatunk -> beállíthat", function() {deepEqual( Stem("beállíthatunk"), "beállíthat");});
test("beállítható -> beállítható", function() {deepEqual( Stem("beállítható"), "beállítható");});
test("beállíthatóak -> beállítható", function() {deepEqual( Stem("beállíthatóak"), "beállítható");});
test("beállíthatók -> beállítható", function() {deepEqual( Stem("beállíthatók"), "beállítható");});
test("beállítjuk -> beállít", function() {deepEqual( Stem("beállítjuk"), "beállít");});
test("beállítottság -> beállítottság", function() {deepEqual( Stem("beállítottság"), "beállítottság");});
test("beállítottsága -> beállítottság", function() {deepEqual( Stem("beállítottsága"), "beállítottság");});
test("beállítottságok -> beállítottság", function() {deepEqual( Stem("beállítottságok"), "beállítottság");});
test("beállítottságú -> beállítottságú", function() {deepEqual( Stem("beállítottságú"), "beállítottságú");});
test("beállítottságúak -> beállítottságú", function() {deepEqual( Stem("beállítottságúak"), "beállítottságú");});
test("beállítottuk -> beállított", function() {deepEqual( Stem("beállítottuk"), "beállított");});
test("beállítja -> beállít", function() {deepEqual( Stem("beállítja"), "beállít");});
test("beállítanak -> beállít", function() {deepEqual( Stem("beállítanak"), "beállít");});
test("beállítani -> beállítan", function() {deepEqual( Stem("beállítani"), "beállítan");});
test("beállítanunk -> beállítan", function() {deepEqual( Stem("beállítanunk"), "beállítan");});
test("beállítanál -> beállít", function() {deepEqual( Stem("beállítanál"), "beállít");});
test("beállított -> beállítot", function() {deepEqual( Stem("beállított"), "beállítot");});
test("beállítottak -> beállított", function() {deepEqual( Stem("beállítottak"), "beállított");});
test("beállítottam -> beállított", function() {deepEqual( Stem("beállítottam"), "beállított");});
test("beállítottam -> beállított", function() {deepEqual( Stem("beállítottam"), "beállított");});
test("beállították -> beállította", function() {deepEqual( Stem("beállították"), "beállította");});
test("beállítsuk -> beállíts", function() {deepEqual( Stem("beállítsuk"), "beállíts");});
test("beállítunk -> beállít", function() {deepEqual( Stem("beállítunk"), "beállít");});
test("beállítva -> beállítv", function() {deepEqual( Stem("beállítva"), "beállítv");});
test("beállítás -> beállítás", function() {deepEqual( Stem("beállítás"), "beállítás");});
test("beállítása -> beállítás", function() {deepEqual( Stem("beállítása"), "beállítás");});
test("beállításai -> beállítás", function() {deepEqual( Stem("beállításai"), "beállítás");});
test("beállításaiban -> beállítás", function() {deepEqual( Stem("beállításaiban"), "beállítás");});
test("beállításaikat -> beállítás", function() {deepEqual( Stem("beállításaikat"), "beállítás");});
test("beállításainak -> beállítás", function() {deepEqual( Stem("beállításainak"), "beállítás");});
test("beállításait -> beállítás", function() {deepEqual( Stem("beállításait"), "beállítás");});
test("beállításaitól -> beállítás", function() {deepEqual( Stem("beállításaitól"), "beállítás");});
test("beállításakor -> beállítás", function() {deepEqual( Stem("beállításakor"), "beállítás");});
test("beállításban -> beállítás", function() {deepEqual( Stem("beállításban"), "beállítás");});
test("beállítások -> beállítás", function() {deepEqual( Stem("beállítások"), "beállítás");});
test("beállítások -> beállítás", function() {deepEqual( Stem("beállítások"), "beállítás");});
test("beállításoka -> beállítás", function() {deepEqual( Stem("beállításoka"), "beállítás");});
test("beállításokat -> beállítás", function() {deepEqual( Stem("beállításokat"), "beállítás");});
test("beállításokkal -> beállítás", function() {deepEqual( Stem("beállításokkal"), "beállítás");});
test("beállításra -> beállítás", function() {deepEqual( Stem("beállításra"), "beállítás");});
test("beállítással -> beállítás", function() {deepEqual( Stem("beállítással"), "beállítás");});
test("beállítást -> beállítás", function() {deepEqual( Stem("beállítást"), "beállítás");});
test("beállításuk -> beállítás", function() {deepEqual( Stem("beállításuk"), "beállítás");});
test("beállításukat -> beállítás", function() {deepEqual( Stem("beállításukat"), "beállítás");});
test("bállításába -> bállítás", function() {deepEqual( Stem("bállításába"), "bállítás");});
test("beállításában -> beállítás", function() {deepEqual( Stem("beállításában"), "beállítás");});
test("beállításához -> beállítás", function() {deepEqual( Stem("beállításához"), "beállítás");});
test("beállításának -> beállítás", function() {deepEqual( Stem("beállításának"), "beállítás");});
test("beállítására -> beállítás", function() {deepEqual( Stem("beállítására"), "beállítás");});
test("beállítását -> beállítás", function() {deepEqual( Stem("beállítását"), "beállítás");});
test("beállításával -> beállítás", function() {deepEqual( Stem("beállításával"), "beállítás");});
test("beállítási -> beállítás", function() {deepEqual( Stem("beállítási"), "beállítás");});
test("beállító -> beállító", function() {deepEqual( Stem("beállító"), "beállító");});
test("beállítódásai -> beállítódás", function() {deepEqual( Stem("beállítódásai"), "beállítódás");});
test("beállítófelületen -> beállítófelület", function() {deepEqual( Stem("beállítófelületen"), "beállítófelület");});
test("beállítóprogramot -> beállítóprogr", function() {deepEqual( Stem("beállítóprogramot"), "beállítóprogr");});
test("beálló -> beálló", function() {deepEqual( Stem("beálló"), "beálló");});
test("beállós -> beállós", function() {deepEqual( Stem("beállós"), "beállós");});
test("beáradni -> beáradn", function() {deepEqual( Stem("beáradni"), "beáradn");});
test("beáramlásának -> beáramlás", function() {deepEqual( Stem("beáramlásának"), "beáramlás");});
test("beáramló -> beáramló", function() {deepEqual( Stem("beáramló"), "beáramló");});
test("beárulná -> beárulna", function() {deepEqual( Stem("beárulná"), "beárulna");});
test("beásták -> beásta", function() {deepEqual( Stem("beásták"), "beásta");});
test("beázott -> beázot", function() {deepEqual( Stem("beázott"), "beázot");});
test("beégetett -> beégetet", function() {deepEqual( Stem("beégetett"), "beégetet");});
test("beékelődött -> beékelődöt", function() {deepEqual( Stem("beékelődött"), "beékelődöt");});
test("beélesítették -> beélesítette", function() {deepEqual( Stem("beélesítették"), "beélesítette");});
test("beéneklést -> beéneklés", function() {deepEqual( Stem("beéneklést"), "beéneklés");});
test("beépített -> beépítet", function() {deepEqual( Stem("beépített"), "beépítet");});
test("beépít -> beépí", function() {deepEqual( Stem("beépít"), "beépí");});
test("beépíteni -> beépíten", function() {deepEqual( Stem("beépíteni"), "beépíten");});
test("beépítettek -> beépített", function() {deepEqual( Stem("beépítettek"), "beépített");});
test("beépítették -> beépítette", function() {deepEqual( Stem("beépítették"), "beépítette");});
test("beépítettük -> beépített", function() {deepEqual( Stem("beépítettük"), "beépített");});
test("beépítik -> beépít", function() {deepEqual( Stem("beépítik"), "beépít");});
test("beépíthető -> beépíthető", function() {deepEqual( Stem("beépíthető"), "beépíthető");});
test("beépítve -> beépítv", function() {deepEqual( Stem("beépítve"), "beépítv");});
test("beépítésére -> beépítés", function() {deepEqual( Stem("beépítésére"), "beépítés");});
test("beépítésével -> beépítés", function() {deepEqual( Stem("beépítésével"), "beépítés");});
test("beépül -> beép", function() {deepEqual( Stem("beépül"), "beép");});
test("beépülhet -> beépülh", function() {deepEqual( Stem("beépülhet"), "beépülh");});
test("beépülnek -> beépül", function() {deepEqual( Stem("beépülnek"), "beépül");});
test("beépülve -> beépülv", function() {deepEqual( Stem("beépülve"), "beépülv");});
test("beépülő -> beépülő", function() {deepEqual( Stem("beépülő"), "beépülő");});
test("beérkezett -> beérkezet", function() {deepEqual( Stem("beérkezett"), "beérkezet");});
test("beérkeztem -> beérkezt", function() {deepEqual( Stem("beérkeztem"), "beérkezt");});
test("beérkeztünk -> beérkezt", function() {deepEqual( Stem("beérkeztünk"), "beérkezt");});
test("beérkezése -> beérkezés", function() {deepEqual( Stem("beérkezése"), "beérkezés");});
test("beérkezésének -> beérkezés", function() {deepEqual( Stem("beérkezésének"), "beérkezés");});
test("beérkezését -> beérkezés", function() {deepEqual( Stem("beérkezését"), "beérkezés");});
test("beérkezésétől -> beérkezés", function() {deepEqual( Stem("beérkezésétől"), "beérkezés");});
test("beérkező -> beérkező", function() {deepEqual( Stem("beérkező"), "beérkező");});
test("beér -> beér", function() {deepEqual( Stem("beér"), "beér");});
test("beérek -> beér", function() {deepEqual( Stem("beérek"), "beér");});
test("beéri -> beér", function() {deepEqual( Stem("beéri"), "beér");});
test("beérik -> beér", function() {deepEqual( Stem("beérik"), "beér");});
test("beérjek -> beérj", function() {deepEqual( Stem("beérjek"), "beérj");});
test("beérjen -> beérj", function() {deepEqual( Stem("beérjen"), "beérj");});
test("beérjünk -> beérj", function() {deepEqual( Stem("beérjünk"), "beérj");});
test("beérnek -> beér", function() {deepEqual( Stem("beérnek"), "beér");});
test("beérni -> beérn", function() {deepEqual( Stem("beérni"), "beérn");});
test("beérné -> beérn", function() {deepEqual( Stem("beérné"), "beérn");});
test("beért -> be", function() {deepEqual( Stem("beért"), "be");});
test("beértek -> beért", function() {deepEqual( Stem("beértek"), "beért");});
test("beértem -> beért", function() {deepEqual( Stem("beértem"), "beért");});
test("beértünk -> beért", function() {deepEqual( Stem("beértünk"), "beért");});
test("beérünk -> beér", function() {deepEqual( Stem("beérünk"), "beér");});
test("beérve -> beérv", function() {deepEqual( Stem("beérve"), "beérv");});
test("beérő -> beérő", function() {deepEqual( Stem("beérő"), "beérő");});
test("beírattak -> beíratt", function() {deepEqual( Stem("beírattak"), "beíratt");});
test("beírhatja -> beírhat", function() {deepEqual( Stem("beírhatja"), "beírhat");});
test("beírhatjuk -> beírhat", function() {deepEqual( Stem("beírhatjuk"), "beírhat");});
test("beírható -> beírható", function() {deepEqual( Stem("beírható"), "beírható");});
test("beírt -> beír", function() {deepEqual( Stem("beírt"), "beír");});
test("beírja -> beír", function() {deepEqual( Stem("beírja"), "beír");});
test("beírjuk -> beír", function() {deepEqual( Stem("beírjuk"), "beír");});
test("beírni -> beírn", function() {deepEqual( Stem("beírni"), "beírn");});
test("beírnunk -> beírn", function() {deepEqual( Stem("beírnunk"), "beírn");});
test("beírta -> beírt", function() {deepEqual( Stem("beírta"), "beírt");});
test("beírtam -> beírt", function() {deepEqual( Stem("beírtam"), "beírt");});
test("beírtuk -> beírt", function() {deepEqual( Stem("beírtuk"), "beírt");});
test("beírták -> beírta", function() {deepEqual( Stem("beírták"), "beírta");});
test("beírva -> beírv", function() {deepEqual( Stem("beírva"), "beírv");});
test("beírása -> beírás", function() {deepEqual( Stem("beírása"), "beírás");});
test("beírására -> beírás", function() {deepEqual( Stem("beírására"), "beírás");});
test("beírásával -> beírás", function() {deepEqual( Stem("beírásával"), "beírás");});
test("beöltözött -> beöltözöt", function() {deepEqual( Stem("beöltözött"), "beöltözöt");});
test("beömlőnyílásnak -> beömlőnyílás", function() {deepEqual( Stem("beömlőnyílásnak"), "beömlőnyílás");});
test("beöntést -> beöntés", function() {deepEqual( Stem("beöntést"), "beöntés");});
test("beöntöttük -> beöntött", function() {deepEqual( Stem("beöntöttük"), "beöntött");});
test("beözönlöttek -> beözönlött", function() {deepEqual( Stem("beözönlöttek"), "beözönlött");});
test("beülnek -> beül", function() {deepEqual( Stem("beülnek"), "beül");});
test("beülni -> beüln", function() {deepEqual( Stem("beülni"), "beüln");});
test("beülnünk -> beüln", function() {deepEqual( Stem("beülnünk"), "beüln");});
test("beült -> beül", function() {deepEqual( Stem("beült"), "beül");});
test("beültem -> beült", function() {deepEqual( Stem("beültem"), "beült");});
test("beültünk -> beült", function() {deepEqual( Stem("beültünk"), "beült");});
test("beülve -> beülv", function() {deepEqual( Stem("beülve"), "beülv");});
test("beülünk -> beül", function() {deepEqual( Stem("beülünk"), "beül");});
test("beültetett -> beültetet", function() {deepEqual( Stem("beültetett"), "beültetet");});
test("beültetésével -> beültetés", function() {deepEqual( Stem("beültetésével"), "beültetés");});
test("beültethetünk -> beültethet", function() {deepEqual( Stem("beültethetünk"), "beültethet");});
test("beülés -> beülés", function() {deepEqual( Stem("beülés"), "beülés");});
test("beütésével -> beütés", function() {deepEqual( Stem("beütésével"), "beütés");});
test("beütők -> beütő", function() {deepEqual( Stem("beütők"), "beütő");});
test("beütött -> beütöt", function() {deepEqual( Stem("beütött"), "beütöt");});
test("beütöttem -> beütött", function() {deepEqual( Stem("beütöttem"), "beütött");});
test("beüzemelt -> beüzemel", function() {deepEqual( Stem("beüzemelt"), "beüzemel");});
test("beüzemeléstől -> beüzemelés", function() {deepEqual( Stem("beüzemeléstől"), "beüzemelés");});
test("bibije -> bib", function() {deepEqual( Stem("bibije"), "bib");});
test("bibliai -> bibli", function() {deepEqual( Stem("bibliai"), "bibli");});
test("bibliográfiáját -> bibliográfiá", function() {deepEqual( Stem("bibliográfiáját"), "bibliográfiá");});
test("bibliát -> bibl", function() {deepEqual( Stem("bibliát"), "bibl");});
test("bibét -> bib", function() {deepEqual( Stem("bibét"), "bib");});
test("bicajos -> bicajos", function() {deepEqual( Stem("bicajos"), "bicajos");});
test("bicajozásról -> bicajozás", function() {deepEqual( Stem("bicajozásról"), "bicajozás");});
test("bicajról -> bicaj", function() {deepEqual( Stem("bicajról"), "bicaj");});
test("bicajokat -> bicaj", function() {deepEqual( Stem("bicajokat"), "bicaj");});
test("bicajommal -> bicaj", function() {deepEqual( Stem("bicajommal"), "bicaj");});
test("bicegett -> biceget", function() {deepEqual( Stem("bicegett"), "biceget");});
test("bicepszedet -> bicepsz", function() {deepEqual( Stem("bicepszedet"), "bicepsz");});
test("bicikli -> bicikl", function() {deepEqual( Stem("bicikli"), "bicikl");});
test("biciklire -> bicikl", function() {deepEqual( Stem("biciklire"), "bicikl");});
test("bicikliről -> bicikl", function() {deepEqual( Stem("bicikliről"), "bicikl");});
test("biciklit -> bicikl", function() {deepEqual( Stem("biciklit"), "bicikl");});
test("biciklivel -> bicikl", function() {deepEqual( Stem("biciklivel"), "bicikl");});
test("biciklihez -> bicikl", function() {deepEqual( Stem("biciklihez"), "bicikl");});
test("biciklijének -> bicikl", function() {deepEqual( Stem("biciklijének"), "bicikl");});
test("biciklijére -> bicikl", function() {deepEqual( Stem("biciklijére"), "bicikl");});
test("biciklijét -> bicikl", function() {deepEqual( Stem("biciklijét"), "bicikl");});
test("biciklijüket -> bicikl", function() {deepEqual( Stem("biciklijüket"), "bicikl");});
test("biciklik -> bicikl", function() {deepEqual( Stem("biciklik"), "bicikl");});
test("bicikliket -> bicikl", function() {deepEqual( Stem("bicikliket"), "bicikl");});
test("bicikliknek -> bicikl", function() {deepEqual( Stem("bicikliknek"), "bicikl");});
test("biciklikre -> bicikl", function() {deepEqual( Stem("biciklikre"), "bicikl");});
test("biciklim -> bicikl", function() {deepEqual( Stem("biciklim"), "bicikl");});
test("biciklimet -> bicikl", function() {deepEqual( Stem("biciklimet"), "bicikl");});
test("biciklimez -> biciklimez", function() {deepEqual( Stem("biciklimez"), "biciklimez");});
test("biciklimmel -> bicikl", function() {deepEqual( Stem("biciklimmel"), "bicikl");});
test("biciklimre -> bicikl", function() {deepEqual( Stem("biciklimre"), "bicikl");});
test("biciklimről -> bicikl", function() {deepEqual( Stem("biciklimről"), "bicikl");});
test("biciklinek -> bicikl", function() {deepEqual( Stem("biciklinek"), "bicikl");});
test("biciklinkre -> bicikl", function() {deepEqual( Stem("biciklinkre"), "bicikl");});
test("biciklipálya -> biciklipály", function() {deepEqual( Stem("biciklipálya"), "biciklipály");});
test("biciklis -> biciklis", function() {deepEqual( Stem("biciklis"), "biciklis");});
test("biciklitolvaj-keresés -> biciklitolvaj-keresés", function() {deepEqual( Stem("biciklitolvaj-keresés"), "biciklitolvaj-keresés");});
test("biciklitárolót -> biciklitároló", function() {deepEqual( Stem("biciklitárolót"), "biciklitároló");});
test("biciklitúra -> biciklitú", function() {deepEqual( Stem("biciklitúra"), "biciklitú");});
test("biciklitúrára -> biciklitúr", function() {deepEqual( Stem("biciklitúrára"), "biciklitúr");});
test("biciklitúrát -> biciklitúr", function() {deepEqual( Stem("biciklitúrát"), "biciklitúr");});
test("biciklizek -> bicikliz", function() {deepEqual( Stem("biciklizek"), "bicikliz");});
test("bicikliznek -> bicikliz", function() {deepEqual( Stem("bicikliznek"), "bicikliz");});
test("biciklizni -> biciklizn", function() {deepEqual( Stem("biciklizni"), "biciklizn");});
test("bicikliznék -> biciklizne", function() {deepEqual( Stem("bicikliznék"), "biciklizne");});
test("bicikliztem -> biciklizt", function() {deepEqual( Stem("bicikliztem"), "biciklizt");});
test("bicikliztünk -> biciklizt", function() {deepEqual( Stem("bicikliztünk"), "biciklizt");});
test("biciklizzük -> biciklizz", function() {deepEqual( Stem("biciklizzük"), "biciklizz");});
test("biciklizés -> biciklizés", function() {deepEqual( Stem("biciklizés"), "biciklizés");});
test("biciklizést -> biciklizés", function() {deepEqual( Stem("biciklizést"), "biciklizés");});
test("biciklizve -> biciklizv", function() {deepEqual( Stem("biciklizve"), "biciklizv");});
test("bicikliútra -> bicikliút", function() {deepEqual( Stem("bicikliútra"), "bicikliút");});
test("bicskei -> bics", function() {deepEqual( Stem("bicskei"), "bics");});
test("bicskája -> bicská", function() {deepEqual( Stem("bicskája"), "bicská");});
test("bicskázott -> bicskázot", function() {deepEqual( Stem("bicskázott"), "bicskázot");});
test("biennále -> biennál", function() {deepEqual( Stem("biennále"), "biennál");});
test("bifszteket -> bifszt", function() {deepEqual( Stem("bifszteket"), "bifszt");});
test("bigmekjét -> bigm", function() {deepEqual( Stem("bigmekjét"), "bigm");});
test("bikaistálló -> bikaistálló", function() {deepEqual( Stem("bikaistálló"), "bikaistálló");});
test("bike -> bi", function() {deepEqual( Stem("bike"), "bi");});
test("bikák -> bika", function() {deepEqual( Stem("bikák"), "bika");});
test("bikát -> bi", function() {deepEqual( Stem("bikát"), "bi");});
test("bikáztuk -> bikázt", function() {deepEqual( Stem("bikáztuk"), "bikázt");});
test("bilincs -> bilincs", function() {deepEqual( Stem("bilincs"), "bilincs");});
test("bilincselték -> bilincselte", function() {deepEqual( Stem("bilincselték"), "bilincselte");});
test("biliárdozni -> biliárdozn", function() {deepEqual( Stem("biliárdozni"), "biliárdozn");});
test("biliárdoztak -> biliárdozt", function() {deepEqual( Stem("biliárdoztak"), "biliárdozt");});
test("biliárdszalonba -> biliárdszalon", function() {deepEqual( Stem("biliárdszalonba"), "biliárdszalon");});
test("biliárdterem -> biliárdter", function() {deepEqual( Stem("biliárdterem"), "biliárdter");});
test("biliárdterembe -> biliárdter", function() {deepEqual( Stem("biliárdterembe"), "biliárdter");});
test("billegtetve -> billegtetv", function() {deepEqual( Stem("billegtetve"), "billegtetv");});
test("billen -> bill", function() {deepEqual( Stem("billen"), "bill");});
test("billentik -> billent", function() {deepEqual( Stem("billentik"), "billent");});
test("billentyűdefiníciókat -> billentyűdefiníció", function() {deepEqual( Stem("billentyűdefiníciókat"), "billentyűdefiníció");});
test("billentyűdefiníciót -> billentyűdefiníció", function() {deepEqual( Stem("billentyűdefiníciót"), "billentyűdefiníció");});
test("billentyűi -> billentyű", function() {deepEqual( Stem("billentyűi"), "billentyű");});
test("billentyű -> billentyű", function() {deepEqual( Stem("billentyű"), "billentyű");});
test("billentyűit -> billentyű", function() {deepEqual( Stem("billentyűit"), "billentyű");});
test("billentyűk -> billentyű", function() {deepEqual( Stem("billentyűk"), "billentyű");});
test("billentyűn -> billentyű", function() {deepEqual( Stem("billentyűn"), "billentyű");});
test("billentyűt -> billentyű", function() {deepEqual( Stem("billentyűt"), "billentyű");});
test("billentyűkombinációt -> billentyűkombináció", function() {deepEqual( Stem("billentyűkombinációt"), "billentyűkombináció");});
test("billentyűkombinációval -> billentyűkombináció", function() {deepEqual( Stem("billentyűkombinációval"), "billentyűkombináció");});
test("billentyűleütés -> billentyűleütés", function() {deepEqual( Stem("billentyűleütés"), "billentyűleütés");});
test("billentyűs -> billentyűs", function() {deepEqual( Stem("billentyűs"), "billentyűs");});
test("billentyűzet-egér-monitor -> billentyűzet-egér-monitor", function() {deepEqual( Stem("billentyűzet-egér-monitor"), "billentyűzet-egér-monitor");});
test("billentyűzetcsatlakozás -> billentyűzetcsatlakozás", function() {deepEqual( Stem("billentyűzetcsatlakozás"), "billentyűzetcsatlakozás");});
test("billentyűzete -> billentyűzet", function() {deepEqual( Stem("billentyűzete"), "billentyűzet");});
test("billentyűzeten -> billentyűzet", function() {deepEqual( Stem("billentyűzeten"), "billentyűzet");});
test("billentyűzettel -> billentyűz", function() {deepEqual( Stem("billentyűzettel"), "billentyűz");});
test("billentyűzet -> billentyűz", function() {deepEqual( Stem("billentyűzet"), "billentyűz");});
test("billenő -> billenő", function() {deepEqual( Stem("billenő"), "billenő");});
test("billió -> billió", function() {deepEqual( Stem("billió"), "billió");});
test("bimbók -> bimbó", function() {deepEqual( Stem("bimbók"), "bimbó");});
test("bimbót -> bimbó", function() {deepEqual( Stem("bimbót"), "bimbó");});
test("bimbós -> bimbós", function() {deepEqual( Stem("bimbós"), "bimbós");});
test("bináris -> bináris", function() {deepEqual( Stem("bináris"), "bináris");});
test("biokémiai -> biokémi", function() {deepEqual( Stem("biokémiai"), "biokémi");});
test("biokémikus -> biokémikus", function() {deepEqual( Stem("biokémikus"), "biokémikus");});
test("biológiai -> biológi", function() {deepEqual( Stem("biológiai"), "biológi");});
test("biológiailag -> biológiailag", function() {deepEqual( Stem("biológiailag"), "biológiailag");});
test("biológiában -> biológ", function() {deepEqual( Stem("biológiában"), "biológ");});
test("biológia -> biológ", function() {deepEqual( Stem("biológia"), "biológ");});
test("biológiánk -> biológia", function() {deepEqual( Stem("biológiánk"), "biológia");});
test("biológiát -> biológ", function() {deepEqual( Stem("biológiát"), "biológ");});
test("biológus -> biológus", function() {deepEqual( Stem("biológus"), "biológus");});
test("biológusok -> biológus", function() {deepEqual( Stem("biológusok"), "biológus");});
test("biosz -> biosz", function() {deepEqual( Stem("biosz"), "biosz");});
test("biotechnológia -> biotechnológ", function() {deepEqual( Stem("biotechnológia"), "biotechnológ");});
test("biotechnológiai -> biotechnológi", function() {deepEqual( Stem("biotechnológiai"), "biotechnológi");});
test("birka -> bir", function() {deepEqual( Stem("birka"), "bir");});
test("birkabégetéssé -> birkabégetés", function() {deepEqual( Stem("birkabégetéssé"), "birkabégetés");});
test("birkapofa -> birkapof", function() {deepEqual( Stem("birkapofa"), "birkapof");});
test("birkaszerű -> birkaszerű", function() {deepEqual( Stem("birkaszerű"), "birkaszerű");});
test("birkás -> birkás", function() {deepEqual( Stem("birkás"), "birkás");});
test("birkózik -> birkóz", function() {deepEqual( Stem("birkózik"), "birkóz");});
test("birkóznak -> birkóz", function() {deepEqual( Stem("birkóznak"), "birkóz");});
test("birkóznom -> birkózn", function() {deepEqual( Stem("birkóznom"), "birkózn");});
test("birkózás -> birkózás", function() {deepEqual( Stem("birkózás"), "birkózás");});
test("birkózó -> birkózó", function() {deepEqual( Stem("birkózó"), "birkózó");});
test("birkózóját -> birkózó", function() {deepEqual( Stem("birkózóját"), "birkózó");});
test("birminghami -> birmingham", function() {deepEqual( Stem("birminghami"), "birmingham");});
test("birodalmi -> birodalm", function() {deepEqual( Stem("birodalmi"), "birodalm");});
test("birodalmunk -> birodalm", function() {deepEqual( Stem("birodalmunk"), "birodalm");});
test("birodalmai -> birodalm", function() {deepEqual( Stem("birodalmai"), "birodalm");});
test("birodalmat -> birodal", function() {deepEqual( Stem("birodalmat"), "birodal");});
test("birodalmunkban -> birodalm", function() {deepEqual( Stem("birodalmunkban"), "birodalm");});
test("birodalmában -> birodalm", function() {deepEqual( Stem("birodalmában"), "birodalm");});
test("birodalom -> birodal", function() {deepEqual( Stem("birodalom"), "birodal");});
test("birság -> birság", function() {deepEqual( Stem("birság"), "birság");});
test("birtokbavehetőség -> birtokbavehetőség", function() {deepEqual( Stem("birtokbavehetőség"), "birtokbavehetőség");});
test("birtokbavehetőségi -> birtokbavehetőség", function() {deepEqual( Stem("birtokbavehetőségi"), "birtokbavehetőség");});
test("birtokbavétel -> birtokbavétel", function() {deepEqual( Stem("birtokbavétel"), "birtokbavétel");});
test("birtoklása -> birtoklás", function() {deepEqual( Stem("birtoklása"), "birtoklás");});
test("birtoklásának -> birtoklás", function() {deepEqual( Stem("birtoklásának"), "birtoklás");});
test("birtoklását -> birtoklás", function() {deepEqual( Stem("birtoklását"), "birtoklás");});
test("birtoklásáért -> birtoklás", function() {deepEqual( Stem("birtoklásáért"), "birtoklás");});
test("birtokló -> birtokló", function() {deepEqual( Stem("birtokló"), "birtokló");});
test("birtokolható -> birtokolható", function() {deepEqual( Stem("birtokolható"), "birtokolható");});
test("birtokolt -> birtokol", function() {deepEqual( Stem("birtokolt"), "birtokol");});
test("birtokolja -> birtokol", function() {deepEqual( Stem("birtokolja"), "birtokol");});
test("birtokol -> birtokol", function() {deepEqual( Stem("birtokol"), "birtokol");});
test("birtokoljuk -> birtokol", function() {deepEqual( Stem("birtokoljuk"), "birtokol");});
test("birtokolják -> birtokolja", function() {deepEqual( Stem("birtokolják"), "birtokolja");});
test("birtokolni -> birtokoln", function() {deepEqual( Stem("birtokolni"), "birtokoln");});
test("birtokolta -> birtokolt", function() {deepEqual( Stem("birtokolta"), "birtokolt");});
test("birtokomban -> birt", function() {deepEqual( Stem("birtokomban"), "birt");});
test("birtokokat -> birtok", function() {deepEqual( Stem("birtokokat"), "birtok");});
test("birtokba -> birt", function() {deepEqual( Stem("birtokba"), "birt");});
test("birtokot -> birt", function() {deepEqual( Stem("birtokot"), "birt");});
test("birtokukban -> birt", function() {deepEqual( Stem("birtokukban"), "birt");});
test("birtokába -> birt", function() {deepEqual( Stem("birtokába"), "birt");});
test("birtokában -> birt", function() {deepEqual( Stem("birtokában"), "birt");});
test("birtokán -> birt", function() {deepEqual( Stem("birtokán"), "birt");});
test("bivalyt -> bivaly", function() {deepEqual( Stem("bivalyt"), "bivaly");});
test("bizakodhat -> bizakodh", function() {deepEqual( Stem("bizakodhat"), "bizakodh");});
test("bizakodó -> bizakodó", function() {deepEqual( Stem("bizakodó"), "bizakodó");});
test("bizakodóbban -> bizakodób", function() {deepEqual( Stem("bizakodóbban"), "bizakodób");});
test("bizalmas -> bizalmas", function() {deepEqual( Stem("bizalmas"), "bizalmas");});
test("bizalmasa -> bizalmas", function() {deepEqual( Stem("bizalmasa"), "bizalmas");});
test("bizalmasa -> bizalmas", function() {deepEqual( Stem("bizalmasa"), "bizalmas");});
test("bizalmasai -> bizalmas", function() {deepEqual( Stem("bizalmasai"), "bizalmas");});
test("bizalmasan -> bizalmas", function() {deepEqual( Stem("bizalmasan"), "bizalmas");});
test("bizalmasát -> bizalmas", function() {deepEqual( Stem("bizalmasát"), "bizalmas");});
test("bizalmasságnak -> bizalmasság", function() {deepEqual( Stem("bizalmasságnak"), "bizalmasság");});
test("bizalma -> bizalm", function() {deepEqual( Stem("bizalma"), "bizalm");});
test("bizalmamat -> bizalm", function() {deepEqual( Stem("bizalmamat"), "bizalm");});
test("bizalmat -> bizal", function() {deepEqual( Stem("bizalmat"), "bizal");});
test("bizalmon -> bizal", function() {deepEqual( Stem("bizalmon"), "bizal");});
test("bizalmuk -> bizalm", function() {deepEqual( Stem("bizalmuk"), "bizalm");});
test("bizalmán -> bizalm", function() {deepEqual( Stem("bizalmán"), "bizalm");});
test("bizalmának -> bizalm", function() {deepEqual( Stem("bizalmának"), "bizalm");});
test("bizalmáról -> bizalm", function() {deepEqual( Stem("bizalmáról"), "bizalm");});
test("bizalmát -> bizalm", function() {deepEqual( Stem("bizalmát"), "bizalm");});
test("bizalom -> bizal", function() {deepEqual( Stem("bizalom"), "bizal");});
test("bizalommal -> bizal", function() {deepEqual( Stem("bizalommal"), "bizal");});
test("bizalomra -> bizal", function() {deepEqual( Stem("bizalomra"), "bizal");});
test("bizalmatlan -> bizalmatl", function() {deepEqual( Stem("bizalmatlan"), "bizalmatl");});
test("bizalmatlankodva -> bizalmatlankodv", function() {deepEqual( Stem("bizalmatlankodva"), "bizalmatlankodv");});
test("bizalmatlanul -> bizalmatlan", function() {deepEqual( Stem("bizalmatlanul"), "bizalmatlan");});
test("bizalmi -> bizalm", function() {deepEqual( Stem("bizalmi"), "bizalm");});
test("bizalomkeltő -> bizalomkeltő", function() {deepEqual( Stem("bizalomkeltő"), "bizalomkeltő");});
test("bizalomvesztését -> bizalomvesztés", function() {deepEqual( Stem("bizalomvesztését"), "bizalomvesztés");});
test("bizantin -> bizant", function() {deepEqual( Stem("bizantin"), "bizant");});
test("bizarr -> bizarr", function() {deepEqual( Stem("bizarr"), "bizarr");});
test("biznisz -> biznisz", function() {deepEqual( Stem("biznisz"), "biznisz");});
test("bizományba -> bizomány", function() {deepEqual( Stem("bizományba"), "bizomány");});
test("bizományos -> bizományos", function() {deepEqual( Stem("bizományos"), "bizományos");});
test("bizonnyal -> bizony", function() {deepEqual( Stem("bizonnyal"), "bizony");});
test("bizony -> bizony", function() {deepEqual( Stem("bizony"), "bizony");});
test("bizonygatják -> bizonygatja", function() {deepEqual( Stem("bizonygatják"), "bizonygatja");});
test("bizonygatott -> bizonygatot", function() {deepEqual( Stem("bizonygatott"), "bizonygatot");});
test("bizonygatta -> bizonygatt", function() {deepEqual( Stem("bizonygatta"), "bizonygatt");});
test("bizonyisten -> bizonyist", function() {deepEqual( Stem("bizonyisten"), "bizonyist");});
test("bizonylatok -> bizonylat", function() {deepEqual( Stem("bizonylatok"), "bizonylat");});
test("bizonylatokat -> bizonylat", function() {deepEqual( Stem("bizonylatokat"), "bizonylat");});
test("bizonylatot -> bizonylat", function() {deepEqual( Stem("bizonylatot"), "bizonylat");});
test("bizonyosodhatnék -> bizonyosodhatne", function() {deepEqual( Stem("bizonyosodhatnék"), "bizonyosodhatne");});
test("bizonyosodott -> bizonyosodot", function() {deepEqual( Stem("bizonyosodott"), "bizonyosodot");});
test("bizonyossá -> bizonyos", function() {deepEqual( Stem("bizonyossá"), "bizonyos");});
test("bizonyos -> bizonyos", function() {deepEqual( Stem("bizonyos"), "bizonyos");});
test("bizonyosabb -> bizonyosabb", function() {deepEqual( Stem("bizonyosabb"), "bizonyosabb");});
test("bizonyosak -> bizonyos", function() {deepEqual( Stem("bizonyosak"), "bizonyos");});
test("bizonyosan -> bizonyos", function() {deepEqual( Stem("bizonyosan"), "bizonyos");});
test("bizonyossága -> bizonyosság", function() {deepEqual( Stem("bizonyossága"), "bizonyosság");});
test("bizonyossággal -> bizonyosság", function() {deepEqual( Stem("bizonyossággal"), "bizonyosság");});
test("bizonyosságot -> bizonyosság", function() {deepEqual( Stem("bizonyosságot"), "bizonyosság");});
test("bizonyság -> bizonyság", function() {deepEqual( Stem("bizonyság"), "bizonyság");});
test("bizonysága -> bizonyság", function() {deepEqual( Stem("bizonysága"), "bizonyság");});
test("bizonyságot -> bizonyság", function() {deepEqual( Stem("bizonyságot"), "bizonyság");});
test("bizonytalan -> bizonytal", function() {deepEqual( Stem("bizonytalan"), "bizonytal");});
test("bizonytalanabb -> bizonytalanabb", function() {deepEqual( Stem("bizonytalanabb"), "bizonytalanabb");});
test("bizonytalankodott -> bizonytalankodot", function() {deepEqual( Stem("bizonytalankodott"), "bizonytalankodot");});
test("bizonytalankodás -> bizonytalankodás", function() {deepEqual( Stem("bizonytalankodás"), "bizonytalankodás");});
test("bizonytalanná -> bizonytalan", function() {deepEqual( Stem("bizonytalanná"), "bizonytalan");});
test("bizonytalanság -> bizonytalanság", function() {deepEqual( Stem("bizonytalanság"), "bizonytalanság");});
test("bizonytalanságban -> bizonytalanság", function() {deepEqual( Stem("bizonytalanságban"), "bizonytalanság");});
test("bizonytalansági -> bizonytalanság", function() {deepEqual( Stem("bizonytalansági"), "bizonytalanság");});
test("bizonytalanságnak -> bizonytalanság", function() {deepEqual( Stem("bizonytalanságnak"), "bizonytalanság");});
test("bizonytalanságokat -> bizonytalanság", function() {deepEqual( Stem("bizonytalanságokat"), "bizonytalanság");});
test("bizonytalanságon -> bizonytalanság", function() {deepEqual( Stem("bizonytalanságon"), "bizonytalanság");});
test("bizonytalanságot -> bizonytalanság", function() {deepEqual( Stem("bizonytalanságot"), "bizonytalanság");});
test("bizonytalanságunk -> bizonytalanság", function() {deepEqual( Stem("bizonytalanságunk"), "bizonytalanság");});
test("bizonytalanságát -> bizonytalanság", function() {deepEqual( Stem("bizonytalanságát"), "bizonytalanság");});
test("bizonytalanságával -> bizonytalanság", function() {deepEqual( Stem("bizonytalanságával"), "bizonytalanság");});
test("bizonytalantól -> bizonytalan", function() {deepEqual( Stem("bizonytalantól"), "bizonytalan");});
test("bizonytalanul -> bizonytalan", function() {deepEqual( Stem("bizonytalanul"), "bizonytalan");});
test("bizonyulhatnak -> bizonyulhat", function() {deepEqual( Stem("bizonyulhatnak"), "bizonyulhat");});
test("bizonyult -> bizonyul", function() {deepEqual( Stem("bizonyult"), "bizonyul");});
test("bizonyultak -> bizonyult", function() {deepEqual( Stem("bizonyultak"), "bizonyult");});
test("bizonyul -> bizony", function() {deepEqual( Stem("bizonyul"), "bizony");});
test("bizonyultam -> bizonyult", function() {deepEqual( Stem("bizonyultam"), "bizonyult");});
test("bizonyulnak -> bizonyul", function() {deepEqual( Stem("bizonyulnak"), "bizonyul");});
test("bizonyuló -> bizonyuló", function() {deepEqual( Stem("bizonyuló"), "bizonyuló");});
test("bizonyítanak -> bizonyít", function() {deepEqual( Stem("bizonyítanak"), "bizonyít");});
test("bizonyítani -> bizonyítan", function() {deepEqual( Stem("bizonyítani"), "bizonyítan");});
test("bizonyítania -> bizonyítan", function() {deepEqual( Stem("bizonyítania"), "bizonyítan");});
test("bizonyítaniuk -> bizonyítan", function() {deepEqual( Stem("bizonyítaniuk"), "bizonyítan");});
test("bizonyítanom -> bizonyítan", function() {deepEqual( Stem("bizonyítanom"), "bizonyítan");});
test("bizonyítja -> bizonyít", function() {deepEqual( Stem("bizonyítja"), "bizonyít");});
test("bizonyítják -> bizonyítja", function() {deepEqual( Stem("bizonyítják"), "bizonyítja");});
test("bizonyította -> bizonyított", function() {deepEqual( Stem("bizonyította"), "bizonyított");});
test("bizonyították -> bizonyította", function() {deepEqual( Stem("bizonyították"), "bizonyította");});
test("bizonyítsa -> bizonyíts", function() {deepEqual( Stem("bizonyítsa"), "bizonyíts");});
test("bizonyítsak -> bizonyíts", function() {deepEqual( Stem("bizonyítsak"), "bizonyíts");});
test("bizonyíthassa -> bizonyíthass", function() {deepEqual( Stem("bizonyíthassa"), "bizonyíthass");});
test("bizonyíthassák -> bizonyíthassa", function() {deepEqual( Stem("bizonyíthassák"), "bizonyíthassa");});
test("bizonyíthatatlan -> bizonyíthatatl", function() {deepEqual( Stem("bizonyíthatatlan"), "bizonyíthatatl");});
test("bizonyítható -> bizonyítható", function() {deepEqual( Stem("bizonyítható"), "bizonyítható");});
test("bizonyíthatók -> bizonyítható", function() {deepEqual( Stem("bizonyíthatók"), "bizonyítható");});
test("bizonyíthatóságát -> bizonyíthatóság", function() {deepEqual( Stem("bizonyíthatóságát"), "bizonyíthatóság");});
test("bizonyított -> bizonyítot", function() {deepEqual( Stem("bizonyított"), "bizonyítot");});
test("bizonyítottság -> bizonyítottság", function() {deepEqual( Stem("bizonyítottság"), "bizonyítottság");});
test("bizonyítva -> bizonyítv", function() {deepEqual( Stem("bizonyítva"), "bizonyítv");});
test("bizonyítványkiadó -> bizonyítványkiadó", function() {deepEqual( Stem("bizonyítványkiadó"), "bizonyítványkiadó");});
test("bizonyítványkiszolgálók -> bizonyítványkiszolgáló", function() {deepEqual( Stem("bizonyítványkiszolgálók"), "bizonyítványkiszolgáló");});
test("bizonyítványnak -> bizonyítvány", function() {deepEqual( Stem("bizonyítványnak"), "bizonyítvány");});
test("bizonyítvánnyal -> bizonyítvány", function() {deepEqual( Stem("bizonyítvánnyal"), "bizonyítvány");});
test("bizonyítvány -> bizonyítvány", function() {deepEqual( Stem("bizonyítvány"), "bizonyítvány");});
test("bizonyítványba -> bizonyítvány", function() {deepEqual( Stem("bizonyítványba"), "bizonyítvány");});
test("bizonyítványok -> bizonyítvány", function() {deepEqual( Stem("bizonyítványok"), "bizonyítvány");});
test("bizonyítványokat -> bizonyítvány", function() {deepEqual( Stem("bizonyítványokat"), "bizonyítvány");});
test("bizonyítványom -> bizonyítvány", function() {deepEqual( Stem("bizonyítványom"), "bizonyítvány");});
test("bizonyítványomba -> bizonyítvány", function() {deepEqual( Stem("bizonyítványomba"), "bizonyítvány");});
test("bizonyítványomban -> bizonyítvány", function() {deepEqual( Stem("bizonyítványomban"), "bizonyítvány");});
test("bizonyítványra -> bizonyítvány", function() {deepEqual( Stem("bizonyítványra"), "bizonyítvány");});
test("bizonyítványt -> bizonyítvány", function() {deepEqual( Stem("bizonyítványt"), "bizonyítvány");});
test("bizonyítványát -> bizonyítvány", function() {deepEqual( Stem("bizonyítványát"), "bizonyítvány");});
test("bizonyítási -> bizonyítás", function() {deepEqual( Stem("bizonyítási"), "bizonyítás");});
test("bizonyítás -> bizonyítás", function() {deepEqual( Stem("bizonyítás"), "bizonyítás");});
test("bizonyítása -> bizonyítás", function() {deepEqual( Stem("bizonyítása"), "bizonyítás");});
test("bizonyításra -> bizonyítás", function() {deepEqual( Stem("bizonyításra"), "bizonyítás");});
test("bizonyítást -> bizonyítás", function() {deepEqual( Stem("bizonyítást"), "bizonyítás");});
test("bizonyításáig -> bizonyítás", function() {deepEqual( Stem("bizonyításáig"), "bizonyítás");});
test("bizonyíték -> bizonyíte", function() {deepEqual( Stem("bizonyíték"), "bizonyíte");});
test("bizonyítéka -> bizonyíte", function() {deepEqual( Stem("bizonyítéka"), "bizonyíte");});
test("bizonyítékai -> bizonyíte", function() {deepEqual( Stem("bizonyítékai"), "bizonyíte");});
test("bizonyítékaként -> bizonyíte", function() {deepEqual( Stem("bizonyítékaként"), "bizonyíte");});
test("bizonyítékként -> bizonyíte", function() {deepEqual( Stem("bizonyítékként"), "bizonyíte");});
test("bizonyítékok -> bizonyíték", function() {deepEqual( Stem("bizonyítékok"), "bizonyíték");});
test("bizonyítékokat -> bizonyíték", function() {deepEqual( Stem("bizonyítékokat"), "bizonyíték");});
test("bizonyítékokkal -> bizonyíték", function() {deepEqual( Stem("bizonyítékokkal"), "bizonyíték");});
test("bizonyítékom -> bizonyíte", function() {deepEqual( Stem("bizonyítékom"), "bizonyíte");});
test("bizonyítékot -> bizonyíte", function() {deepEqual( Stem("bizonyítékot"), "bizonyíte");});
test("bizonyító -> bizonyító", function() {deepEqual( Stem("bizonyító"), "bizonyító");});
test("bizottsági -> bizottság", function() {deepEqual( Stem("bizottsági"), "bizottság");});
test("bizottság -> bizottság", function() {deepEqual( Stem("bizottság"), "bizottság");});
test("bizottsága -> bizottság", function() {deepEqual( Stem("bizottsága"), "bizottság");});
test("bizottsága -> bizottság", function() {deepEqual( Stem("bizottsága"), "bizottság");});
test("bizottságai -> bizottság", function() {deepEqual( Stem("bizottságai"), "bizottság");});
test("bizottságba -> bizottság", function() {deepEqual( Stem("bizottságba"), "bizottság");});
test("bizottságban -> bizottság", function() {deepEqual( Stem("bizottságban"), "bizottság");});
test("bizottságban -> bizottság", function() {deepEqual( Stem("bizottságban"), "bizottság");});
test("bizottsággal -> bizottság", function() {deepEqual( Stem("bizottsággal"), "bizottság");});
test("bizottsághoz -> bizottság", function() {deepEqual( Stem("bizottsághoz"), "bizottság");});
test("bizottságnak -> bizottság", function() {deepEqual( Stem("bizottságnak"), "bizottság");});
test("bizottságok -> bizottság", function() {deepEqual( Stem("bizottságok"), "bizottság");});
test("bizottságokat -> bizottság", function() {deepEqual( Stem("bizottságokat"), "bizottság");});
test("bizottságoknak -> bizottság", function() {deepEqual( Stem("bizottságoknak"), "bizottság");});
test("bizottságokon -> bizottság", function() {deepEqual( Stem("bizottságokon"), "bizottság");});
test("bizottságoktól -> bizottság", function() {deepEqual( Stem("bizottságoktól"), "bizottság");});
test("bizottságot -> bizottság", function() {deepEqual( Stem("bizottságot"), "bizottság");});
test("bizottságra -> bizottság", function() {deepEqual( Stem("bizottságra"), "bizottság");});
test("bizottságának -> bizottság", function() {deepEqual( Stem("bizottságának"), "bizottság");});
test("bizottságát -> bizottság", function() {deepEqual( Stem("bizottságát"), "bizottság");});
test("bizsergést -> bizsergés", function() {deepEqual( Stem("bizsergést"), "bizsergés");});
test("biztassunk -> biztass", function() {deepEqual( Stem("biztassunk"), "biztass");});
test("biztatja -> biztat", function() {deepEqual( Stem("biztatja"), "biztat");});
test("biztatják -> biztatja", function() {deepEqual( Stem("biztatják"), "biztatja");});
test("biztatni -> biztatn", function() {deepEqual( Stem("biztatni"), "biztatn");});
test("biztatta -> biztatt", function() {deepEqual( Stem("biztatta"), "biztatt");});
test("biztattak -> biztatt", function() {deepEqual( Stem("biztattak"), "biztatt");});
test("biztattam -> biztatt", function() {deepEqual( Stem("biztattam"), "biztatt");});
test("biztattuk -> biztatt", function() {deepEqual( Stem("biztattuk"), "biztatt");});
test("biztatási -> biztatás", function() {deepEqual( Stem("biztatási"), "biztatás");});
test("biztatására -> biztatás", function() {deepEqual( Stem("biztatására"), "biztatás");});
test("biztatásával -> biztatás", function() {deepEqual( Stem("biztatásával"), "biztatás");});
test("biztató -> biztató", function() {deepEqual( Stem("biztató"), "biztató");});
test("biztatóak -> biztató", function() {deepEqual( Stem("biztatóak"), "biztató");});
test("biztatóan -> biztató", function() {deepEqual( Stem("biztatóan"), "biztató");});
test("biztatóbb -> biztatóbb", function() {deepEqual( Stem("biztatóbb"), "biztatóbb");});
test("bizton -> bizt", function() {deepEqual( Stem("bizton"), "bizt");});
test("biztonsági -> biztonság", function() {deepEqual( Stem("biztonsági"), "biztonság");});
test("biztonságis -> biztonságis", function() {deepEqual( Stem("biztonságis"), "biztonságis");});
test("biztonságkockázati -> biztonságkockázat", function() {deepEqual( Stem("biztonságkockázati"), "biztonságkockázat");});
test("biztonságnak -> biztonság", function() {deepEqual( Stem("biztonságnak"), "biztonság");});
test("biztonságuk -> biztonság", function() {deepEqual( Stem("biztonságuk"), "biztonság");});
test("biztonságukkal -> biztonság", function() {deepEqual( Stem("biztonságukkal"), "biztonság");});
test("biztonságukért -> biztonság", function() {deepEqual( Stem("biztonságukért"), "biztonság");});
test("biztonságához -> biztonság", function() {deepEqual( Stem("biztonságához"), "biztonság");});
test("biztonságának -> biztonság", function() {deepEqual( Stem("biztonságának"), "biztonság");});
test("biztonságáról -> biztonság", function() {deepEqual( Stem("biztonságáról"), "biztonság");});
test("biztonságát -> biztonság", function() {deepEqual( Stem("biztonságát"), "biztonság");});
test("biztonságét -> biztonság", function() {deepEqual( Stem("biztonságét"), "biztonság");});
test("biztonság -> biztonság", function() {deepEqual( Stem("biztonság"), "biztonság");});
test("biztonsága -> biztonság", function() {deepEqual( Stem("biztonsága"), "biztonság");});
test("biztonságban -> biztonság", function() {deepEqual( Stem("biztonságban"), "biztonság");});
test("biztonsággal -> biztonság", function() {deepEqual( Stem("biztonsággal"), "biztonság");});
test("biztonsággá -> biztonság", function() {deepEqual( Stem("biztonsággá"), "biztonság");});
test("biztonságnak -> biztonság", function() {deepEqual( Stem("biztonságnak"), "biztonság");});
test("biztonságos -> biztonságos", function() {deepEqual( Stem("biztonságos"), "biztonságos");});
test("biztonságosabb -> biztonságosabb", function() {deepEqual( Stem("biztonságosabb"), "biztonságosabb");});
test("biztonságosabbak -> biztonságosabb", function() {deepEqual( Stem("biztonságosabbak"), "biztonságosabb");});
test("biztonságosabbá -> biztonságosab", function() {deepEqual( Stem("biztonságosabbá"), "biztonságosab");});
test("biztonságosak -> biztonságos", function() {deepEqual( Stem("biztonságosak"), "biztonságos");});
test("biztonságosan -> biztonságos", function() {deepEqual( Stem("biztonságosan"), "biztonságos");});
test("biztonságosnak -> biztonságos", function() {deepEqual( Stem("biztonságosnak"), "biztonságos");});
test("biztonságot -> biztonság", function() {deepEqual( Stem("biztonságot"), "biztonság");});
test("biztonságra -> biztonság", function() {deepEqual( Stem("biztonságra"), "biztonság");});
test("biztonságról -> biztonság", function() {deepEqual( Stem("biztonságról"), "biztonság");});
test("biztonságtechnika -> biztonságtechn", function() {deepEqual( Stem("biztonságtechnika"), "biztonságtechn");});
test("biztonságtechnikában -> biztonságtechn", function() {deepEqual( Stem("biztonságtechnikában"), "biztonságtechn");});
test("biztonságtechnikai -> biztonságtechni", function() {deepEqual( Stem("biztonságtechnikai"), "biztonságtechni");});
test("biztonságtechnikailag -> biztonságtechnikailag", function() {deepEqual( Stem("biztonságtechnikailag"), "biztonságtechnikailag");});
test("biztonságtechnológia -> biztonságtechnológ", function() {deepEqual( Stem("biztonságtechnológia"), "biztonságtechnológ");});
test("biztonságtechnológiai -> biztonságtechnológi", function() {deepEqual( Stem("biztonságtechnológiai"), "biztonságtechnológi");});
test("biztonságúvá -> biztonságú", function() {deepEqual( Stem("biztonságúvá"), "biztonságú");});
test("biztos -> biztos", function() {deepEqual( Stem("biztos"), "biztos");});
test("biztosak -> biztos", function() {deepEqual( Stem("biztosak"), "biztos");});
test("biztosnak -> biztos", function() {deepEqual( Stem("biztosnak"), "biztos");});
test("biztosra -> biztos", function() {deepEqual( Stem("biztosra"), "biztos");});
test("biztosabb -> biztosabb", function() {deepEqual( Stem("biztosabb"), "biztosabb");});
test("biztosan -> biztos", function() {deepEqual( Stem("biztosan"), "biztos");});
test("biztosaknak -> biztos", function() {deepEqual( Stem("biztosaknak"), "biztos");});
test("biztosa -> biztos", function() {deepEqual( Stem("biztosa"), "biztos");});
test("biztost -> biztos", function() {deepEqual( Stem("biztost"), "biztos");});
test("biztosának -> biztos", function() {deepEqual( Stem("biztosának"), "biztos");});
test("biztosával -> biztos", function() {deepEqual( Stem("biztosával"), "biztos");});
test("biztositékot -> biztosite", function() {deepEqual( Stem("biztositékot"), "biztosite");});
test("biztosság -> biztosság", function() {deepEqual( Stem("biztosság"), "biztosság");});
test("biztosítandó -> biztosítandó", function() {deepEqual( Stem("biztosítandó"), "biztosítandó");});
test("biztosítani -> biztosítan", function() {deepEqual( Stem("biztosítani"), "biztosítan");});
test("biztosít -> biztosí", function() {deepEqual( Stem("biztosít"), "biztosí");});
test("biztosítanak -> biztosít", function() {deepEqual( Stem("biztosítanak"), "biztosít");});
test("biztosítania -> biztosítan", function() {deepEqual( Stem("biztosítania"), "biztosítan");});
test("biztosítaniuk -> biztosítan", function() {deepEqual( Stem("biztosítaniuk"), "biztosítan");});
test("biztosítanák -> biztosítana", function() {deepEqual( Stem("biztosítanák"), "biztosítana");});
test("biztosíthat -> biztosíth", function() {deepEqual( Stem("biztosíthat"), "biztosíth");});
test("biztosíthatja -> biztosíthat", function() {deepEqual( Stem("biztosíthatja"), "biztosíthat");});
test("biztosíthatnak -> biztosíthat", function() {deepEqual( Stem("biztosíthatnak"), "biztosíthat");});
test("biztosíthatom -> biztosíthat", function() {deepEqual( Stem("biztosíthatom"), "biztosíthat");});
test("biztosítható -> biztosítható", function() {deepEqual( Stem("biztosítható"), "biztosítható");});
test("biztosíthatósága -> biztosíthatóság", function() {deepEqual( Stem("biztosíthatósága"), "biztosíthatóság");});
test("biztosított -> biztosítot", function() {deepEqual( Stem("biztosított"), "biztosítot");});
test("biztosítottak -> biztosított", function() {deepEqual( Stem("biztosítottak"), "biztosított");});
test("biztosítja -> biztosít", function() {deepEqual( Stem("biztosítja"), "biztosít");});
test("biztosítják -> biztosítja", function() {deepEqual( Stem("biztosítják"), "biztosítja");});
test("biztosítom -> biztosít", function() {deepEqual( Stem("biztosítom"), "biztosít");});
test("biztosította -> biztosított", function() {deepEqual( Stem("biztosította"), "biztosított");});
test("biztosítottnak -> biztosított", function() {deepEqual( Stem("biztosítottnak"), "biztosított");});
test("biztosítottnál -> biztosított", function() {deepEqual( Stem("biztosítottnál"), "biztosított");});
test("biztosították -> biztosította", function() {deepEqual( Stem("biztosították"), "biztosította");});
test("biztosítsa -> biztosíts", function() {deepEqual( Stem("biztosítsa"), "biztosíts");});
test("biztosítsam -> biztosíts", function() {deepEqual( Stem("biztosítsam"), "biztosíts");});
test("biztosítsanak -> biztosíts", function() {deepEqual( Stem("biztosítsanak"), "biztosíts");});
test("biztosítson -> biztosíts", function() {deepEqual( Stem("biztosítson"), "biztosíts");});
test("biztosítsunk -> biztosíts", function() {deepEqual( Stem("biztosítsunk"), "biztosíts");});
test("biztosítunk -> biztosít", function() {deepEqual( Stem("biztosítunk"), "biztosít");});
test("biztosítva -> biztosítv", function() {deepEqual( Stem("biztosítva"), "biztosítv");});
test("biztosítás -> biztosítás", function() {deepEqual( Stem("biztosítás"), "biztosítás");});
test("biztosítása -> biztosítás", function() {deepEqual( Stem("biztosítása"), "biztosítás");});
test("biztosításból -> biztosítás", function() {deepEqual( Stem("biztosításból"), "biztosítás");});
test("biztosítással -> biztosítás", function() {deepEqual( Stem("biztosítással"), "biztosítás");});
test("biztosítást -> biztosítás", function() {deepEqual( Stem("biztosítást"), "biztosítás");});
test("biztosításához -> biztosítás", function() {deepEqual( Stem("biztosításához"), "biztosítás");});
test("biztosítására -> biztosítás", function() {deepEqual( Stem("biztosítására"), "biztosítás");});
test("biztosításáról -> biztosítás", function() {deepEqual( Stem("biztosításáról"), "biztosítás");});
test("biztosítását -> biztosítás", function() {deepEqual( Stem("biztosítását"), "biztosítás");});
test("biztosításával -> biztosítás", function() {deepEqual( Stem("biztosításával"), "biztosítás");});
test("biztosítási -> biztosítás", function() {deepEqual( Stem("biztosítási"), "biztosítás");});
test("biztosíték -> biztosíte", function() {deepEqual( Stem("biztosíték"), "biztosíte");});
test("biztosítéka -> biztosíte", function() {deepEqual( Stem("biztosítéka"), "biztosíte");});
test("biztosítékai -> biztosíte", function() {deepEqual( Stem("biztosítékai"), "biztosíte");});
test("biztosítékaként -> biztosíte", function() {deepEqual( Stem("biztosítékaként"), "biztosíte");});
test("biztosítékok -> biztosíték", function() {deepEqual( Stem("biztosítékok"), "biztosíték");});
test("biztosítékokat -> biztosíték", function() {deepEqual( Stem("biztosítékokat"), "biztosíték");});
test("biztosítékot -> biztosíte", function() {deepEqual( Stem("biztosítékot"), "biztosíte");});
test("biztosítékul -> biztosíte", function() {deepEqual( Stem("biztosítékul"), "biztosíte");});
test("biztosítékának -> biztosíte", function() {deepEqual( Stem("biztosítékának"), "biztosíte");});
test("biztosítékát -> biztosíte", function() {deepEqual( Stem("biztosítékát"), "biztosíte");});
test("biztosítékául -> biztosíte", function() {deepEqual( Stem("biztosítékául"), "biztosíte");});
test("biztosítékadáshoz -> biztosítékadás", function() {deepEqual( Stem("biztosítékadáshoz"), "biztosítékadás");});
test("biztosítékadási -> biztosítékadás", function() {deepEqual( Stem("biztosítékadási"), "biztosítékadás");});
test("biztosítéknyújtás -> biztosítéknyújtás", function() {deepEqual( Stem("biztosítéknyújtás"), "biztosítéknyújtás");});
test("biztosítóberendezések -> biztosítóberendezés", function() {deepEqual( Stem("biztosítóberendezések"), "biztosítóberendezés");});
test("biztosítóintézetekről -> biztosítóintézet", function() {deepEqual( Stem("biztosítóintézetekről"), "biztosítóintézet");});
test("biztosító -> biztosító", function() {deepEqual( Stem("biztosító"), "biztosító");});
test("biztosítók -> biztosító", function() {deepEqual( Stem("biztosítók"), "biztosító");});
test("biztosítóval -> biztosító", function() {deepEqual( Stem("biztosítóval"), "biztosító");});
test("biztosítótársaságot -> biztosítótársaság", function() {deepEqual( Stem("biztosítótársaságot"), "biztosítótársaság");});
test("biztottsága -> biztottság", function() {deepEqual( Stem("biztottsága"), "biztottság");});
test("bizánci -> bizánc", function() {deepEqual( Stem("bizánci"), "bizánc");});
test("bió -> bió", function() {deepEqual( Stem("bió"), "bió");});
test("blokk -> blok", function() {deepEqual( Stem("blokk"), "blok");});
test("blokkban -> blok", function() {deepEqual( Stem("blokkban"), "blok");});
test("blokkok -> blokk", function() {deepEqual( Stem("blokkok"), "blokk");});
test("blokkokat -> blokk", function() {deepEqual( Stem("blokkokat"), "blokk");});
test("blokkokban -> blokk", function() {deepEqual( Stem("blokkokban"), "blokk");});
test("blokkot -> blok", function() {deepEqual( Stem("blokkot"), "blok");});
test("blokknyi -> blokkny", function() {deepEqual( Stem("blokknyi"), "blokkny");});
test("blokkolásgátló -> blokkolásgátló", function() {deepEqual( Stem("blokkolásgátló"), "blokkolásgátló");});
test("blokksorozathoz -> blokksorozat", function() {deepEqual( Stem("blokksorozathoz"), "blokksorozat");});
test("blokád -> bloka", function() {deepEqual( Stem("blokád"), "bloka");});
test("blues -> blues", function() {deepEqual( Stem("blues"), "blues");});
test("blues-zenekarok -> blues-zenekar", function() {deepEqual( Stem("blues-zenekarok"), "blues-zenekar");});
test("bluesbulija -> bluesbul", function() {deepEqual( Stem("bluesbulija"), "bluesbul");});
test("blöff -> blöff", function() {deepEqual( Stem("blöff"), "blöff");});
test("blúz -> blúz", function() {deepEqual( Stem("blúz"), "blúz");});
test("blúza -> blúz", function() {deepEqual( Stem("blúza"), "blúz");});
test("blúzok -> blúz", function() {deepEqual( Stem("blúzok"), "blúz");});
test("blúzokat -> blúz", function() {deepEqual( Stem("blúzokat"), "blúz");});
test("blúzát -> blúz", function() {deepEqual( Stem("blúzát"), "blúz");});
test("bobby-val -> bobby-", function() {deepEqual( Stem("bobby-val"), "bobby-");});
test("bob -> bob", function() {deepEqual( Stem("bob"), "bob");});
test("bobból -> bob", function() {deepEqual( Stem("bobból"), "bob");});
test("bobozni -> bobozn", function() {deepEqual( Stem("bobozni"), "bobozn");});
test("bobpályán -> bobpály", function() {deepEqual( Stem("bobpályán"), "bobpály");});
test("bobpályát -> bobpály", function() {deepEqual( Stem("bobpályát"), "bobpály");});
test("bocicsoki -> bocics", function() {deepEqual( Stem("bocicsoki"), "bocics");});
test("bocs -> bocs", function() {deepEqual( Stem("bocs"), "bocs");});
test("bocsánatkéréseit -> bocsánatkérés", function() {deepEqual( Stem("bocsánatkéréseit"), "bocsánatkérés");});
test("bocsánatkérések -> bocsánatkérés", function() {deepEqual( Stem("bocsánatkérések"), "bocsánatkérés");});
test("bocsánatkérésre -> bocsánatkérés", function() {deepEqual( Stem("bocsánatkérésre"), "bocsánatkérés");});
test("bocsánatkérő -> bocsánatkérő", function() {deepEqual( Stem("bocsánatkérő"), "bocsánatkérő");});
test("bocsánatos -> bocsánatos", function() {deepEqual( Stem("bocsánatos"), "bocsánatos");});
test("bocsánatot -> bocsánat", function() {deepEqual( Stem("bocsánatot"), "bocsánat");});
test("bocsássa -> bocsáss", function() {deepEqual( Stem("bocsássa"), "bocsáss");});
test("bocsásson -> bocsáss", function() {deepEqual( Stem("bocsásson"), "bocsáss");});
test("bocsássák -> bocsássa", function() {deepEqual( Stem("bocsássák"), "bocsássa");});
test("bocsát -> bocs", function() {deepEqual( Stem("bocsát"), "bocs");});
test("bocsátana -> bocsátan", function() {deepEqual( Stem("bocsátana"), "bocsátan");});
test("bocsátanak -> bocsát", function() {deepEqual( Stem("bocsátanak"), "bocsát");});
test("bocsátani -> bocsátan", function() {deepEqual( Stem("bocsátani"), "bocsátan");});
test("bocsátaná -> bocsátana", function() {deepEqual( Stem("bocsátaná"), "bocsátana");});
test("bocsátja -> bocsát", function() {deepEqual( Stem("bocsátja"), "bocsát");});
test("bocsátják -> bocsátja", function() {deepEqual( Stem("bocsátják"), "bocsátja");});
test("bocsátjátok -> bocsátját", function() {deepEqual( Stem("bocsátjátok"), "bocsátját");});
test("bocsátotta -> bocsátott", function() {deepEqual( Stem("bocsátotta"), "bocsátott");});
test("bocsátottak -> bocsátott", function() {deepEqual( Stem("bocsátottak"), "bocsátott");});
test("bocsátottuk -> bocsátott", function() {deepEqual( Stem("bocsátottuk"), "bocsátott");});
test("bocsátották -> bocsátotta", function() {deepEqual( Stem("bocsátották"), "bocsátotta");});
test("bocsátandó -> bocsátandó", function() {deepEqual( Stem("bocsátandó"), "bocsátandó");});
test("bocsáthat -> bocsáth", function() {deepEqual( Stem("bocsáthat"), "bocsáth");});
test("bocsáthatják -> bocsáthatja", function() {deepEqual( Stem("bocsáthatják"), "bocsáthatja");});
test("bocsáthatnak -> bocsáthat", function() {deepEqual( Stem("bocsáthatnak"), "bocsáthat");});
test("bocsátható -> bocsátható", function() {deepEqual( Stem("bocsátható"), "bocsátható");});
test("bocsáthatók -> bocsátható", function() {deepEqual( Stem("bocsáthatók"), "bocsátható");});
test("bocsátkozik -> bocsátkoz", function() {deepEqual( Stem("bocsátkozik"), "bocsátkoz");});
test("bocsátkozni -> bocsátkozn", function() {deepEqual( Stem("bocsátkozni"), "bocsátkozn");});
test("bocsátkozott -> bocsátkozot", function() {deepEqual( Stem("bocsátkozott"), "bocsátkozot");});
test("bocsátott -> bocsátot", function() {deepEqual( Stem("bocsátott"), "bocsátot");});
test("bocsátás -> bocsátás", function() {deepEqual( Stem("bocsátás"), "bocsátás");});
test("bocsátása -> bocsátás", function() {deepEqual( Stem("bocsátása"), "bocsátás");});
test("bocsátásuk -> bocsátás", function() {deepEqual( Stem("bocsátásuk"), "bocsátás");});
test("bocsátásának -> bocsátás", function() {deepEqual( Stem("bocsátásának"), "bocsátás");});
test("bocsátására -> bocsátás", function() {deepEqual( Stem("bocsátására"), "bocsátás");});
test("bocsátásáról -> bocsátás", function() {deepEqual( Stem("bocsátásáról"), "bocsátás");});
test("bocsátását -> bocsátás", function() {deepEqual( Stem("bocsátását"), "bocsátás");});
test("bocsátásával -> bocsátás", function() {deepEqual( Stem("bocsátásával"), "bocsátás");});
test("bocsátásáért -> bocsátás", function() {deepEqual( Stem("bocsátásáért"), "bocsátás");});
test("bogarai -> bogar", function() {deepEqual( Stem("bogarai"), "bogar");});
test("bogaraim -> bogar", function() {deepEqual( Stem("bogaraim"), "bogar");});
test("bogarakkal -> bogar", function() {deepEqual( Stem("bogarakkal"), "bogar");});
test("bogarakra -> bogar", function() {deepEqual( Stem("bogarakra"), "bogar");});
test("bogarat -> bogar", function() {deepEqual( Stem("bogarat"), "bogar");});
test("bogaras -> bogaras", function() {deepEqual( Stem("bogaras"), "bogaras");});
test("boglyas -> boglyas", function() {deepEqual( Stem("boglyas"), "boglyas");});
test("bográcsoltunk -> bográcsolt", function() {deepEqual( Stem("bográcsoltunk"), "bográcsolt");});
test("bográcsolás -> bográcsolás", function() {deepEqual( Stem("bográcsolás"), "bográcsolás");});
test("bográcsoló -> bográcsoló", function() {deepEqual( Stem("bográcsoló"), "bográcsoló");});
test("bográcsos -> bográcsos", function() {deepEqual( Stem("bográcsos"), "bográcsos");});
test("bográcsost -> bográcsos", function() {deepEqual( Stem("bográcsost"), "bográcsos");});
test("bográcsban -> bogrács", function() {deepEqual( Stem("bográcsban"), "bogrács");});
test("bográcsot -> bogrács", function() {deepEqual( Stem("bográcsot"), "bogrács");});
test("bográcsában -> bogrács", function() {deepEqual( Stem("bográcsában"), "bogrács");});
test("bográcsozni -> bográcsozn", function() {deepEqual( Stem("bográcsozni"), "bográcsozn");});
test("bográcsoztunk -> bográcsozt", function() {deepEqual( Stem("bográcsoztunk"), "bográcsozt");});
test("bográcstartót -> bográcstartó", function() {deepEqual( Stem("bográcstartót"), "bográcstartó");});
test("bogyókban -> bogyó", function() {deepEqual( Stem("bogyókban"), "bogyó");});
test("bogár -> bogár", function() {deepEqual( Stem("bogár"), "bogár");});
test("bohémes -> bohémes", function() {deepEqual( Stem("bohémes"), "bohémes");});
test("bohémesen -> bohémes", function() {deepEqual( Stem("bohémesen"), "bohémes");});
test("bohémséget -> bohémség", function() {deepEqual( Stem("bohémséget"), "bohémség");});
test("bohóckodtunk -> bohóckodt", function() {deepEqual( Stem("bohóckodtunk"), "bohóckodt");});
test("bohóckodás -> bohóckodás", function() {deepEqual( Stem("bohóckodás"), "bohóckodás");});
test("bohócok -> bohóc", function() {deepEqual( Stem("bohócok"), "bohóc");});
test("bohókás -> bohókás", function() {deepEqual( Stem("bohókás"), "bohókás");});
test("bohózatban -> bohózat", function() {deepEqual( Stem("bohózatban"), "bohózat");});
test("bojkottálni -> bojkottáln", function() {deepEqual( Stem("bojkottálni"), "bojkottáln");});
test("bojkottálására -> bojkottálás", function() {deepEqual( Stem("bojkottálására"), "bojkottálás");});
test("bokamozdulatok -> bokamozdulat", function() {deepEqual( Stem("bokamozdulatok"), "bokamozdulat");});
test("bokor -> bo", function() {deepEqual( Stem("bokor"), "bo");});
test("bokorban -> bokor", function() {deepEqual( Stem("bokorban"), "bokor");});
test("bokrai -> bokr", function() {deepEqual( Stem("bokrai"), "bokr");});
test("bokrok -> bokr", function() {deepEqual( Stem("bokrok"), "bokr");});
test("bokrokat -> bokr", function() {deepEqual( Stem("bokrokat"), "bokr");});
test("bokron -> bokr", function() {deepEqual( Stem("bokron"), "bokr");});
test("bokrot -> bokr", function() {deepEqual( Stem("bokrot"), "bokr");});
test("bokros -> bokros", function() {deepEqual( Stem("bokros"), "bokros");});
test("bokrosi -> bokros", function() {deepEqual( Stem("bokrosi"), "bokros");});
test("bokrétaünnepségének -> bokrétaünnepség", function() {deepEqual( Stem("bokrétaünnepségének"), "bokrétaünnepség");});
test("boksz -> boksz", function() {deepEqual( Stem("boksz"), "boksz");});
test("bokszkesztyűk -> bokszkesztyű", function() {deepEqual( Stem("bokszkesztyűk"), "bokszkesztyű");});
test("bokszol -> bokszol", function() {deepEqual( Stem("bokszol"), "bokszol");});
test("bokszolni -> bokszoln", function() {deepEqual( Stem("bokszolni"), "bokszoln");});
test("bokszolva -> bokszolv", function() {deepEqual( Stem("bokszolva"), "bokszolv");});
test("bokszolók -> bokszoló", function() {deepEqual( Stem("bokszolók"), "bokszoló");});
test("bokszolóé -> bokszoló", function() {deepEqual( Stem("bokszolóé"), "bokszoló");});
test("bokában -> bok", function() {deepEqual( Stem("bokában"), "bok");});
test("bokáig -> bok", function() {deepEqual( Stem("bokáig"), "bok");});
test("bokája -> boká", function() {deepEqual( Stem("bokája"), "boká");});
test("bokájába -> boká", function() {deepEqual( Stem("bokájába"), "boká");});
test("bokáját -> boká", function() {deepEqual( Stem("bokáját"), "boká");});
test("bokám -> boka", function() {deepEqual( Stem("bokám"), "boka");});
test("bokámat -> boka", function() {deepEqual( Stem("bokámat"), "boka");});
test("bokámban -> boka", function() {deepEqual( Stem("bokámban"), "boka");});
test("bokán -> bok", function() {deepEqual( Stem("bokán"), "bok");});
test("bokályokat -> bokály", function() {deepEqual( Stem("bokályokat"), "bokály");});
test("boldog -> boldog", function() {deepEqual( Stem("boldog"), "boldog");});
test("boldogabb -> boldogabb", function() {deepEqual( Stem("boldogabb"), "boldogabb");});
test("boldogabbak -> boldogabb", function() {deepEqual( Stem("boldogabbak"), "boldogabb");});
test("boldogak -> boldog", function() {deepEqual( Stem("boldogak"), "boldog");});
test("boldogan -> boldog", function() {deepEqual( Stem("boldogan"), "boldog");});
test("boldoggá -> boldog", function() {deepEqual( Stem("boldoggá"), "boldog");});
test("boldognak -> boldog", function() {deepEqual( Stem("boldognak"), "boldog");});
test("boldogok -> boldog", function() {deepEqual( Stem("boldogok"), "boldog");});
test("boldogot-boldogtalant -> boldogot-boldogtalan", function() {deepEqual( Stem("boldogot-boldogtalant"), "boldogot-boldogtalan");});
test("boldogság -> boldogság", function() {deepEqual( Stem("boldogság"), "boldogság");});
test("boldogsága -> boldogság", function() {deepEqual( Stem("boldogsága"), "boldogság");});
test("boldogságból -> boldogság", function() {deepEqual( Stem("boldogságból"), "boldogság");});
test("boldogsággal -> boldogság", function() {deepEqual( Stem("boldogsággal"), "boldogság");});
test("boldogsághoz -> boldogság", function() {deepEqual( Stem("boldogsághoz"), "boldogság");});
test("boldogságom -> boldogság", function() {deepEqual( Stem("boldogságom"), "boldogság");});
test("boldogságomban -> boldogság", function() {deepEqual( Stem("boldogságomban"), "boldogság");});
test("boldogságot -> boldogság", function() {deepEqual( Stem("boldogságot"), "boldogság");});
test("boldogságra -> boldogság", function() {deepEqual( Stem("boldogságra"), "boldogság");});
test("boldogságtól -> boldogság", function() {deepEqual( Stem("boldogságtól"), "boldogság");});
test("boldogságuknak -> boldogság", function() {deepEqual( Stem("boldogságuknak"), "boldogság");});
test("boldogságunk -> boldogság", function() {deepEqual( Stem("boldogságunk"), "boldogság");});
test("boldogságát -> boldogság", function() {deepEqual( Stem("boldogságát"), "boldogság");});
test("boldogtalan -> boldogtal", function() {deepEqual( Stem("boldogtalan"), "boldogtal");});
test("bolond -> bolon", function() {deepEqual( Stem("bolond"), "bolon");});
test("bolondja -> bolond", function() {deepEqual( Stem("bolondja"), "bolond");});
test("bolondját -> bolond", function() {deepEqual( Stem("bolondját"), "bolond");});
test("bolondot -> bolon", function() {deepEqual( Stem("bolondot"), "bolon");});
test("bolondtól -> bolon", function() {deepEqual( Stem("bolondtól"), "bolon");});
test("bolondul -> bolon", function() {deepEqual( Stem("bolondul"), "bolon");});
test("bolondokházába -> bolondokház", function() {deepEqual( Stem("bolondokházába"), "bolondokház");});
test("bolondos -> bolondos", function() {deepEqual( Stem("bolondos"), "bolondos");});
test("bolondoztunk -> bolondozt", function() {deepEqual( Stem("bolondoztunk"), "bolondozt");});
test("bolondozunk -> bolondoz", function() {deepEqual( Stem("bolondozunk"), "bolondoz");});
test("bolondozz -> bolondozz", function() {deepEqual( Stem("bolondozz"), "bolondozz");});
test("bolondságnak -> bolondság", function() {deepEqual( Stem("bolondságnak"), "bolondság");});
test("bolondulni -> bolonduln", function() {deepEqual( Stem("bolondulni"), "bolonduln");});
test("bolondóra -> bolondó", function() {deepEqual( Stem("bolondóra"), "bolondó");});
test("bolsevizmus -> bolsevizmus", function() {deepEqual( Stem("bolsevizmus"), "bolsevizmus");});
test("bolsevizmuson -> bolsevizmus", function() {deepEqual( Stem("bolsevizmuson"), "bolsevizmus");});
test("bolthajtásba -> bolthajtás", function() {deepEqual( Stem("bolthajtásba"), "bolthajtás");});
test("bolthajtásos -> bolthajtásos", function() {deepEqual( Stem("bolthajtásos"), "bolthajtásos");});
test("bolthálózatot -> bolthálózat", function() {deepEqual( Stem("bolthálózatot"), "bolthálózat");});
test("bolti -> bolt", function() {deepEqual( Stem("bolti"), "bolt");});
test("bolt -> bol", function() {deepEqual( Stem("bolt"), "bol");});
test("boltba -> bolt", function() {deepEqual( Stem("boltba"), "bolt");});
test("boltban -> bolt", function() {deepEqual( Stem("boltban"), "bolt");});
test("boltja -> bolt", function() {deepEqual( Stem("boltja"), "bolt");});
test("boltjaiban -> bolt", function() {deepEqual( Stem("boltjaiban"), "bolt");});
test("boltjába -> bolt", function() {deepEqual( Stem("boltjába"), "bolt");});
test("boltját -> bolt", function() {deepEqual( Stem("boltját"), "bolt");});
test("boltok -> bolt", function() {deepEqual( Stem("boltok"), "bolt");});
test("boltokba -> bolt", function() {deepEqual( Stem("boltokba"), "bolt");});
test("boltokban -> bolt", function() {deepEqual( Stem("boltokban"), "bolt");});
test("boltokhoz -> bolt", function() {deepEqual( Stem("boltokhoz"), "bolt");});
test("bolton -> bolt", function() {deepEqual( Stem("bolton"), "bolt");});
test("boltot -> bolt", function() {deepEqual( Stem("boltot"), "bolt");});
test("boltról -> bolt", function() {deepEqual( Stem("boltról"), "bolt");});
test("bolttal -> bol", function() {deepEqual( Stem("bolttal"), "bol");});
test("boltunk -> bolt", function() {deepEqual( Stem("boltunk"), "bolt");});
test("boltocska -> boltocs", function() {deepEqual( Stem("boltocska"), "boltocs");});
test("boltos -> boltos", function() {deepEqual( Stem("boltos"), "boltos");});
test("boltosban -> boltos", function() {deepEqual( Stem("boltosban"), "boltos");});
test("boltozat -> boltoz", function() {deepEqual( Stem("boltozat"), "boltoz");});
test("boltozata -> boltozat", function() {deepEqual( Stem("boltozata"), "boltozat");});
test("boltozatok -> boltozat", function() {deepEqual( Stem("boltozatok"), "boltozat");});
test("bolygó -> bolygó", function() {deepEqual( Stem("bolygó"), "bolygó");});
test("bolygónak -> bolygó", function() {deepEqual( Stem("bolygónak"), "bolygó");});
test("bolygónk -> bolygó", function() {deepEqual( Stem("bolygónk"), "bolygó");});
test("bolygónkon -> bolygó", function() {deepEqual( Stem("bolygónkon"), "bolygó");});
test("bolyongana -> bolyongan", function() {deepEqual( Stem("bolyongana"), "bolyongan");});
test("bolyongani -> bolyongan", function() {deepEqual( Stem("bolyongani"), "bolyongan");});
test("bolyongok -> bolyong", function() {deepEqual( Stem("bolyongok"), "bolyong");});
test("bolyongtam -> bolyongt", function() {deepEqual( Stem("bolyongtam"), "bolyongt");});
test("bolyongott -> bolyongot", function() {deepEqual( Stem("bolyongott"), "bolyongot");});
test("bolyongás -> bolyongás", function() {deepEqual( Stem("bolyongás"), "bolyongás");});
test("bolyongása -> bolyongás", function() {deepEqual( Stem("bolyongása"), "bolyongás");});
test("bolyongást -> bolyongás", function() {deepEqual( Stem("bolyongást"), "bolyongás");});
test("bolyongástól -> bolyongás", function() {deepEqual( Stem("bolyongástól"), "bolyongás");});
test("bolyongásának -> bolyongás", function() {deepEqual( Stem("bolyongásának"), "bolyongás");});
test("bombagólt -> bombagól", function() {deepEqual( Stem("bombagólt"), "bombagól");});
test("bombariadó -> bombariadó", function() {deepEqual( Stem("bombariadó"), "bombariadó");});
test("bombatámadások -> bombatámadás", function() {deepEqual( Stem("bombatámadások"), "bombatámadás");});
test("bomba -> bom", function() {deepEqual( Stem("bomba"), "bom");});
test("bombái -> bomba", function() {deepEqual( Stem("bombái"), "bomba");});
test("bombák -> bomba", function() {deepEqual( Stem("bombák"), "bomba");});
test("bombáktól -> bomba", function() {deepEqual( Stem("bombáktól"), "bomba");});
test("bombának -> bomb", function() {deepEqual( Stem("bombának"), "bomb");});
test("bombát -> bomb", function() {deepEqual( Stem("bombát"), "bomb");});
test("bombától -> bomb", function() {deepEqual( Stem("bombától"), "bomb");});
test("bombázandó -> bombázandó", function() {deepEqual( Stem("bombázandó"), "bombázandó");});
test("bombázni -> bombázn", function() {deepEqual( Stem("bombázni"), "bombázn");});
test("bombáztak -> bombázt", function() {deepEqual( Stem("bombáztak"), "bombázt");});
test("bombázzuk -> bombázz", function() {deepEqual( Stem("bombázzuk"), "bombázz");});
test("bombázzák -> bombázza", function() {deepEqual( Stem("bombázzák"), "bombázza");});
test("bombázás -> bombázás", function() {deepEqual( Stem("bombázás"), "bombázás");});
test("bombázása -> bombázás", function() {deepEqual( Stem("bombázása"), "bombázás");});
test("bombázásnak -> bombázás", function() {deepEqual( Stem("bombázásnak"), "bombázás");});
test("bombázások -> bombázás", function() {deepEqual( Stem("bombázások"), "bombázás");});
test("bombázásokat -> bombázás", function() {deepEqual( Stem("bombázásokat"), "bombázás");});
test("bombázásokkal -> bombázás", function() {deepEqual( Stem("bombázásokkal"), "bombázás");});
test("bombázásokról -> bombázás", function() {deepEqual( Stem("bombázásokról"), "bombázás");});
test("bombázást -> bombázás", function() {deepEqual( Stem("bombázást"), "bombázás");});
test("bombázásának -> bombázás", function() {deepEqual( Stem("bombázásának"), "bombázás");});
test("bombázó -> bombázó", function() {deepEqual( Stem("bombázó"), "bombázó");});
test("bombázógépeket -> bombázógép", function() {deepEqual( Stem("bombázógépeket"), "bombázógép");});
test("bomlanak -> boml", function() {deepEqual( Stem("bomlanak"), "boml");});
test("bomlik -> boml", function() {deepEqual( Stem("bomlik"), "boml");});
test("bomlott -> bomlot", function() {deepEqual( Stem("bomlott"), "bomlot");});
test("bomlását -> bomlás", function() {deepEqual( Stem("bomlását"), "bomlás");});
test("bomló -> bomló", function() {deepEqual( Stem("bomló"), "bomló");});
test("boncasztalon -> boncasztal", function() {deepEqual( Stem("boncasztalon"), "boncasztal");});
test("boncolgathatnám -> boncolgathatna", function() {deepEqual( Stem("boncolgathatnám"), "boncolgathatna");});
test("boncolás -> boncolás", function() {deepEqual( Stem("boncolás"), "boncolás");});
test("boncolása -> boncolás", function() {deepEqual( Stem("boncolása"), "boncolás");});
test("boncolásnál -> boncolás", function() {deepEqual( Stem("boncolásnál"), "boncolás");});
test("boncolásra -> boncolás", function() {deepEqual( Stem("boncolásra"), "boncolás");});
test("bongja -> bong", function() {deepEqual( Stem("bongja"), "bong");});
test("bongott -> bongot", function() {deepEqual( Stem("bongott"), "bongot");});
test("bontakozik -> bontakoz", function() {deepEqual( Stem("bontakozik"), "bontakoz");});
test("bontakozott -> bontakozot", function() {deepEqual( Stem("bontakozott"), "bontakozot");});
test("bontható -> bontható", function() {deepEqual( Stem("bontható"), "bontható");});
test("bonthatók -> bontható", function() {deepEqual( Stem("bonthatók"), "bontható");});
test("bontja -> bont", function() {deepEqual( Stem("bontja"), "bont");});
test("bontani -> bontan", function() {deepEqual( Stem("bontani"), "bontan");});
test("bont -> bon", function() {deepEqual( Stem("bont"), "bon");});
test("bontjuk -> bont", function() {deepEqual( Stem("bontjuk"), "bont");});
test("bontják -> bontja", function() {deepEqual( Stem("bontják"), "bontja");});
test("bontottak -> bontott", function() {deepEqual( Stem("bontottak"), "bontott");});
test("bontottuk -> bontott", function() {deepEqual( Stem("bontottuk"), "bontott");});
test("bontottunk -> bontott", function() {deepEqual( Stem("bontottunk"), "bontott");});
test("bontották -> bontotta", function() {deepEqual( Stem("bontották"), "bontotta");});
test("bontsa -> bonts", function() {deepEqual( Stem("bontsa"), "bonts");});
test("bontva -> bontv", function() {deepEqual( Stem("bontva"), "bontv");});
test("bontás -> bontás", function() {deepEqual( Stem("bontás"), "bontás");});
test("bontása -> bontás", function() {deepEqual( Stem("bontása"), "bontás");});
test("bontásban -> bontás", function() {deepEqual( Stem("bontásban"), "bontás");});
test("bontásra -> bontás", function() {deepEqual( Stem("bontásra"), "bontás");});
test("bontással -> bontás", function() {deepEqual( Stem("bontással"), "bontás");});
test("bontásához -> bontás", function() {deepEqual( Stem("bontásához"), "bontás");});
test("bontási -> bontás", function() {deepEqual( Stem("bontási"), "bontás");});
test("bontású -> bontású", function() {deepEqual( Stem("bontású"), "bontású");});
test("bontó -> bontó", function() {deepEqual( Stem("bontó"), "bontó");});
test("bonyodalmak -> bonyodalm", function() {deepEqual( Stem("bonyodalmak"), "bonyodalm");});
test("bonyodalmakat -> bonyodalm", function() {deepEqual( Stem("bonyodalmakat"), "bonyodalm");});
test("bonyodalmakhoz -> bonyodalm", function() {deepEqual( Stem("bonyodalmakhoz"), "bonyodalm");});
test("bonyodalmat -> bonyodal", function() {deepEqual( Stem("bonyodalmat"), "bonyodal");});
test("bonyodalom -> bonyodal", function() {deepEqual( Stem("bonyodalom"), "bonyodal");});
test("bonyodalomhoz -> bonyodal", function() {deepEqual( Stem("bonyodalomhoz"), "bonyodal");});
test("bonyodalmasnak -> bonyodalmas", function() {deepEqual( Stem("bonyodalmasnak"), "bonyodalmas");});
test("bonyolult -> bonyolul", function() {deepEqual( Stem("bonyolult"), "bonyolul");});
test("bonyolultabb -> bonyolultabb", function() {deepEqual( Stem("bonyolultabb"), "bonyolultabb");});
test("bonyolultabbak -> bonyolultabb", function() {deepEqual( Stem("bonyolultabbak"), "bonyolultabb");});
test("bonyolultabbá -> bonyolultab", function() {deepEqual( Stem("bonyolultabbá"), "bonyolultab");});
test("bonyolultak -> bonyolult", function() {deepEqual( Stem("bonyolultak"), "bonyolult");});
test("bonyolultan -> bonyolult", function() {deepEqual( Stem("bonyolultan"), "bonyolult");});
test("bonyolultnak -> bonyolult", function() {deepEqual( Stem("bonyolultnak"), "bonyolult");});
test("bonyolulttá -> bonyolult", function() {deepEqual( Stem("bonyolulttá"), "bonyolult");});
test("bonyolította -> bonyolított", function() {deepEqual( Stem("bonyolította"), "bonyolított");});
test("bonyolították -> bonyolította", function() {deepEqual( Stem("bonyolították"), "bonyolította");});
test("bonyolítsa -> bonyolíts", function() {deepEqual( Stem("bonyolítsa"), "bonyolíts");});
test("bonyolítsanak -> bonyolíts", function() {deepEqual( Stem("bonyolítsanak"), "bonyolíts");});
test("bonyolítsák -> bonyolítsa", function() {deepEqual( Stem("bonyolítsák"), "bonyolítsa");});
test("bonyolultságanalízist -> bonyolultságanalízis", function() {deepEqual( Stem("bonyolultságanalízist"), "bonyolultságanalízis");});
test("bonyolultsága -> bonyolultság", function() {deepEqual( Stem("bonyolultsága"), "bonyolultság");});
test("bonyolultságot -> bonyolultság", function() {deepEqual( Stem("bonyolultságot"), "bonyolultság");});
test("bonyolultságú -> bonyolultságú", function() {deepEqual( Stem("bonyolultságú"), "bonyolultságú");});
test("bonyolítás -> bonyolítás", function() {deepEqual( Stem("bonyolítás"), "bonyolítás");});
test("bor -> bor", function() {deepEqual( Stem("bor"), "bor");});
test("borait -> bor", function() {deepEqual( Stem("borait"), "bor");});
test("bornak -> bor", function() {deepEqual( Stem("bornak"), "bor");});
test("bornál -> bor", function() {deepEqual( Stem("bornál"), "bor");});
test("borokat -> bor", function() {deepEqual( Stem("borokat"), "bor");});
test("borokkal -> bor", function() {deepEqual( Stem("borokkal"), "bor");});
test("boroktól -> bor", function() {deepEqual( Stem("boroktól"), "bor");});
test("borra -> bor", function() {deepEqual( Stem("borra"), "bor");});
test("borral -> bor", function() {deepEqual( Stem("borral"), "bor");});
test("bort -> bor", function() {deepEqual( Stem("bort"), "bor");});
test("bortól -> bor", function() {deepEqual( Stem("bortól"), "bor");});
test("borunk -> bor", function() {deepEqual( Stem("borunk"), "bor");});
test("borából -> bor", function() {deepEqual( Stem("borából"), "bor");});
test("boráról -> bor", function() {deepEqual( Stem("boráról"), "bor");});
test("borbély -> borbély", function() {deepEqual( Stem("borbély"), "borbély");});
test("borbélyra -> borbély", function() {deepEqual( Stem("borbélyra"), "borbély");});
test("bordáiba -> borda", function() {deepEqual( Stem("bordáiba"), "borda");});
test("bordáin -> borda", function() {deepEqual( Stem("bordáin"), "borda");});
test("bordáira -> borda", function() {deepEqual( Stem("bordáira"), "borda");});
test("bordája -> bordá", function() {deepEqual( Stem("bordája"), "bordá");});
test("bordánál -> bord", function() {deepEqual( Stem("bordánál"), "bord");});
test("bordázott -> bordázot", function() {deepEqual( Stem("bordázott"), "bordázot");});
test("borházat -> borház", function() {deepEqual( Stem("borházat"), "borház");});
test("borházunk -> borház", function() {deepEqual( Stem("borházunk"), "borház");});
test("borivás -> borivás", function() {deepEqual( Stem("borivás"), "borivás");});
test("borjú -> borjú", function() {deepEqual( Stem("borjú"), "borjú");});
test("borjút -> borjú", function() {deepEqual( Stem("borjút"), "borjú");});
test("borkereskedésben -> borkereskedés", function() {deepEqual( Stem("borkereskedésben"), "borkereskedés");});
test("borkiállító -> borkiállító", function() {deepEqual( Stem("borkiállító"), "borkiállító");});
test("bornírt -> bornír", function() {deepEqual( Stem("bornírt"), "bornír");});
test("borocska -> borocs", function() {deepEqual( Stem("borocska"), "borocs");});
test("borogatja -> borogat", function() {deepEqual( Stem("borogatja"), "borogat");});
test("borogatni -> borogatn", function() {deepEqual( Stem("borogatni"), "borogatn");});
test("borogatásturbánt -> borogatásturb", function() {deepEqual( Stem("borogatásturbánt"), "borogatásturb");});
test("borongós -> borongós", function() {deepEqual( Stem("borongós"), "borongós");});
test("boros -> boros", function() {deepEqual( Stem("boros"), "boros");});
test("borospince -> borospinc", function() {deepEqual( Stem("borospince"), "borospinc");});
test("borospincék -> borospince", function() {deepEqual( Stem("borospincék"), "borospince");});
test("borospincéket -> borospince", function() {deepEqual( Stem("borospincéket"), "borospince");});
test("borostái -> borosta", function() {deepEqual( Stem("borostái"), "borosta");});
test("borosták -> borosta", function() {deepEqual( Stem("borosták"), "borosta");});
test("borostás -> borostás", function() {deepEqual( Stem("borostás"), "borostás");});
test("borotva -> borotv", function() {deepEqual( Stem("borotva"), "borotv");});
test("borotvahabból -> borotvahab", function() {deepEqual( Stem("borotvahabból"), "borotvahab");});
test("borotvahabos -> borotvahabos", function() {deepEqual( Stem("borotvahabos"), "borotvahabos");});
test("borotvapenge -> borotvapeng", function() {deepEqual( Stem("borotvapenge"), "borotvapeng");});
test("borotvapengéd -> borotvapenge", function() {deepEqual( Stem("borotvapengéd"), "borotvapenge");});
test("borotvapengék -> borotvapenge", function() {deepEqual( Stem("borotvapengék"), "borotvapenge");});
test("borotvapengére -> borotvapeng", function() {deepEqual( Stem("borotvapengére"), "borotvapeng");});
test("borotvapengét -> borotvapeng", function() {deepEqual( Stem("borotvapengét"), "borotvapeng");});
test("borotvaéles -> borotvaéles", function() {deepEqual( Stem("borotvaéles"), "borotvaéles");});
test("borotválatlan -> borotválatl", function() {deepEqual( Stem("borotválatlan"), "borotválatl");});
test("borotválatlanok -> borotválatlan", function() {deepEqual( Stem("borotválatlanok"), "borotválatlan");});
test("borotválkozhatott -> borotválkozhatot", function() {deepEqual( Stem("borotválkozhatott"), "borotválkozhatot");});
test("borotválkozni -> borotválkozn", function() {deepEqual( Stem("borotválkozni"), "borotválkozn");});
test("borotválkozott -> borotválkozot", function() {deepEqual( Stem("borotválkozott"), "borotválkozot");});
test("borotválni -> borotváln", function() {deepEqual( Stem("borotválni"), "borotváln");});
test("borozgattunk -> borozgatt", function() {deepEqual( Stem("borozgattunk"), "borozgatt");});
test("borozni -> borozn", function() {deepEqual( Stem("borozni"), "borozn");});
test("borozó -> borozó", function() {deepEqual( Stem("borozó"), "borozó");});
test("borozóba -> borozó", function() {deepEqual( Stem("borozóba"), "borozó");});
test("borpiac -> borpiac", function() {deepEqual( Stem("borpiac"), "borpiac");});
test("borpincék -> borpince", function() {deepEqual( Stem("borpincék"), "borpince");});
test("borsodi -> borsod", function() {deepEqual( Stem("borsodi"), "borsod");});
test("borsos -> borsos", function() {deepEqual( Stem("borsos"), "borsos");});
test("borsossá -> borsos", function() {deepEqual( Stem("borsossá"), "borsos");});
test("borsot -> bors", function() {deepEqual( Stem("borsot"), "bors");});
test("borssal -> bors", function() {deepEqual( Stem("borssal"), "bors");});
test("borszaga -> borszag", function() {deepEqual( Stem("borszaga"), "borszag");});
test("borsószemek -> borsószem", function() {deepEqual( Stem("borsószemek"), "borsószem");});
test("borsó -> borsó", function() {deepEqual( Stem("borsó"), "borsó");});
test("borsót -> borsó", function() {deepEqual( Stem("borsót"), "borsó");});
test("borul -> bor", function() {deepEqual( Stem("borul"), "bor");});
test("borult -> borul", function() {deepEqual( Stem("borult"), "borul");});
test("borulnak -> borul", function() {deepEqual( Stem("borulnak"), "borul");});
test("borultunk -> borult", function() {deepEqual( Stem("borultunk"), "borult");});
test("borulás -> borulás", function() {deepEqual( Stem("borulás"), "borulás");});
test("borverseny -> borverseny", function() {deepEqual( Stem("borverseny"), "borverseny");});
test("borzadott -> borzadot", function() {deepEqual( Stem("borzadott"), "borzadot");});
test("borzadt -> borz", function() {deepEqual( Stem("borzadt"), "borz");});
test("borzadállyal -> borzadály", function() {deepEqual( Stem("borzadállyal"), "borzadály");});
test("borzadály -> borzadály", function() {deepEqual( Stem("borzadály"), "borzadály");});
test("borzadályt -> borzadály", function() {deepEqual( Stem("borzadályt"), "borzadály");});
test("borzalmaira -> borzalm", function() {deepEqual( Stem("borzalmaira"), "borzalm");});
test("borzalmakat -> borzalm", function() {deepEqual( Stem("borzalmakat"), "borzalm");});
test("borzalom -> borzal", function() {deepEqual( Stem("borzalom"), "borzal");});
test("borzalommal -> borzal", function() {deepEqual( Stem("borzalommal"), "borzal");});
test("borzalomnak -> borzal", function() {deepEqual( Stem("borzalomnak"), "borzal");});
test("borzalmas -> borzalmas", function() {deepEqual( Stem("borzalmas"), "borzalmas");});
test("borzalmasabbá -> borzalmasab", function() {deepEqual( Stem("borzalmasabbá"), "borzalmasab");});
test("borzas -> borzas", function() {deepEqual( Stem("borzas"), "borzas");});
test("borzasztó -> borzasztó", function() {deepEqual( Stem("borzasztó"), "borzasztó");});
test("borzasztóan -> borzasztó", function() {deepEqual( Stem("borzasztóan"), "borzasztó");});
test("borzasztóbb -> borzasztóbb", function() {deepEqual( Stem("borzasztóbb"), "borzasztóbb");});
test("borzolja -> borzol", function() {deepEqual( Stem("borzolja"), "borzol");});
test("borzong -> borzong", function() {deepEqual( Stem("borzong"), "borzong");});
test("borzongatta -> borzongatt", function() {deepEqual( Stem("borzongatta"), "borzongatt");});
test("borzongató -> borzongató", function() {deepEqual( Stem("borzongató"), "borzongató");});
test("borzongva -> borzongv", function() {deepEqual( Stem("borzongva"), "borzongv");});
test("borzongás -> borzongás", function() {deepEqual( Stem("borzongás"), "borzongás");});
test("borzongások -> borzongás", function() {deepEqual( Stem("borzongások"), "borzongás");});
test("borzongást -> borzongás", function() {deepEqual( Stem("borzongást"), "borzongás");});
test("borászat -> borász", function() {deepEqual( Stem("borászat"), "borász");});
test("boríthatja -> boríthat", function() {deepEqual( Stem("boríthatja"), "boríthat");});
test("borította -> borított", function() {deepEqual( Stem("borította"), "borított");});
test("borítottam -> borított", function() {deepEqual( Stem("borítottam"), "borított");});
test("borít -> borí", function() {deepEqual( Stem("borít"), "borí");});
test("borítja -> borít", function() {deepEqual( Stem("borítja"), "borít");});
test("borítom -> borít", function() {deepEqual( Stem("borítom"), "borít");});
test("borított -> borítot", function() {deepEqual( Stem("borított"), "borítot");});
test("borítva -> borítv", function() {deepEqual( Stem("borítva"), "borítv");});
test("borítással -> borítás", function() {deepEqual( Stem("borítással"), "borítás");});
test("borítékban -> boríte", function() {deepEqual( Stem("borítékban"), "boríte");});
test("borítékon -> boríte", function() {deepEqual( Stem("borítékon"), "boríte");});
test("borítékot -> boríte", function() {deepEqual( Stem("borítékot"), "boríte");});
test("borító -> borító", function() {deepEqual( Stem("borító"), "borító");});
test("borítója -> borító", function() {deepEqual( Stem("borítója"), "borító");});
test("borítóján -> borító", function() {deepEqual( Stem("borítóján"), "borító");});
test("borítólap-szerkesztőstől -> borítólap-szerkesztős", function() {deepEqual( Stem("borítólap-szerkesztőstől"), "borítólap-szerkesztős");});
test("borízű -> borízű", function() {deepEqual( Stem("borízű"), "borízű");});
test("ború -> ború", function() {deepEqual( Stem("ború"), "ború");});
test("borúra -> ború", function() {deepEqual( Stem("borúra"), "ború");});
test("borúlátó -> borúlátó", function() {deepEqual( Stem("borúlátó"), "borúlátó");});
test("borúlátóbbak -> borúlátóbb", function() {deepEqual( Stem("borúlátóbbak"), "borúlátóbb");});
test("borús -> borús", function() {deepEqual( Stem("borús"), "borús");});
test("bosnyák -> bosnya", function() {deepEqual( Stem("bosnyák"), "bosnya");});
test("bosnyákok -> bosnyák", function() {deepEqual( Stem("bosnyákok"), "bosnyák");});
test("bosszankodhattunk -> bosszankodhatt", function() {deepEqual( Stem("bosszankodhattunk"), "bosszankodhatt");});
test("bosszankodott -> bosszankodot", function() {deepEqual( Stem("bosszankodott"), "bosszankodot");});
test("bosszankodtunk -> bosszankodt", function() {deepEqual( Stem("bosszankodtunk"), "bosszankodt");});
test("bosszankodásban -> bosszankodás", function() {deepEqual( Stem("bosszankodásban"), "bosszankodás");});
test("bosszankodások -> bosszankodás", function() {deepEqual( Stem("bosszankodások"), "bosszankodás");});
test("bosszantani -> bosszantan", function() {deepEqual( Stem("bosszantani"), "bosszantan");});
test("bosszantotta -> bosszantott", function() {deepEqual( Stem("bosszantotta"), "bosszantott");});
test("bosszantsanak -> bosszants", function() {deepEqual( Stem("bosszantsanak"), "bosszants");});
test("bosszantásnak -> bosszantás", function() {deepEqual( Stem("bosszantásnak"), "bosszantás");});
test("bosszantó -> bosszantó", function() {deepEqual( Stem("bosszantó"), "bosszantó");});
test("bosszantóan -> bosszantó", function() {deepEqual( Stem("bosszantóan"), "bosszantó");});
test("bosszulni -> bosszuln", function() {deepEqual( Stem("bosszulni"), "bosszuln");});
test("bosszú -> bosszú", function() {deepEqual( Stem("bosszú"), "bosszú");});
test("bosszúból -> bosszú", function() {deepEqual( Stem("bosszúból"), "bosszú");});
test("bosszúja -> bosszú", function() {deepEqual( Stem("bosszúja"), "bosszú");});
test("bosszújától -> bosszú", function() {deepEqual( Stem("bosszújától"), "bosszú");});
test("bosszújával -> bosszú", function() {deepEqual( Stem("bosszújával"), "bosszú");});
test("bosszúra -> bosszú", function() {deepEqual( Stem("bosszúra"), "bosszú");});
test("bosszút -> bosszú", function() {deepEqual( Stem("bosszút"), "bosszú");});
test("bosszús -> bosszús", function() {deepEqual( Stem("bosszús"), "bosszús");});
test("bosszúszomjas -> bosszúszomjas", function() {deepEqual( Stem("bosszúszomjas"), "bosszúszomjas");});
test("bosszúság -> bosszúság", function() {deepEqual( Stem("bosszúság"), "bosszúság");});
test("bosszúsággal -> bosszúság", function() {deepEqual( Stem("bosszúsággal"), "bosszúság");});
test("bosszúságnak -> bosszúság", function() {deepEqual( Stem("bosszúságnak"), "bosszúság");});
test("bosszúságot -> bosszúság", function() {deepEqual( Stem("bosszúságot"), "bosszúság");});
test("bosszúvágy -> bosszúvágy", function() {deepEqual( Stem("bosszúvágy"), "bosszúvágy");});
test("bosszúvágyat -> bosszúvágy", function() {deepEqual( Stem("bosszúvágyat"), "bosszúvágy");});
test("bosszúvágynak -> bosszúvágy", function() {deepEqual( Stem("bosszúvágynak"), "bosszúvágy");});
test("bosszúálló -> bosszúálló", function() {deepEqual( Stem("bosszúálló"), "bosszúálló");});
test("bosszúüvöltés -> bosszúüvöltés", function() {deepEqual( Stem("bosszúüvöltés"), "bosszúüvöltés");});
test("bostoni -> boston", function() {deepEqual( Stem("bostoni"), "boston");});
test("boszniai -> boszni", function() {deepEqual( Stem("boszniai"), "boszni");});
test("boszorkányelhárító -> boszorkányelhárító", function() {deepEqual( Stem("boszorkányelhárító"), "boszorkányelhárító");});
test("boszorkánykonyhájába -> boszorkánykonyhá", function() {deepEqual( Stem("boszorkánykonyhájába"), "boszorkánykonyhá");});
test("boszorkányos -> boszorkányos", function() {deepEqual( Stem("boszorkányos"), "boszorkányos");});
test("boszorkány -> boszorkány", function() {deepEqual( Stem("boszorkány"), "boszorkány");});
test("boszorkányra -> boszorkány", function() {deepEqual( Stem("boszorkányra"), "boszorkány");});
test("boszorkányt -> boszorkány", function() {deepEqual( Stem("boszorkányt"), "boszorkány");});
test("boszorkányszerűbb -> boszorkányszerűbb", function() {deepEqual( Stem("boszorkányszerűbb"), "boszorkányszerűbb");});
test("boszorkányság -> boszorkányság", function() {deepEqual( Stem("boszorkányság"), "boszorkányság");});
test("boszszankodik -> boszszankod", function() {deepEqual( Stem("boszszankodik"), "boszszankod");});
test("botfülűnek -> botfülű", function() {deepEqual( Stem("botfülűnek"), "botfülű");});
test("bot -> bot", function() {deepEqual( Stem("bot"), "bot");});
test("botban -> bot", function() {deepEqual( Stem("botban"), "bot");});
test("bothoz -> bot", function() {deepEqual( Stem("bothoz"), "bot");});
test("botja -> bot", function() {deepEqual( Stem("botja"), "bot");});
test("botjainkat -> bot", function() {deepEqual( Stem("botjainkat"), "bot");});
test("botjukat -> bot", function() {deepEqual( Stem("botjukat"), "bot");});
test("botjára -> bot", function() {deepEqual( Stem("botjára"), "bot");});
test("botját -> bot", function() {deepEqual( Stem("botját"), "bot");});
test("botnak -> bot", function() {deepEqual( Stem("botnak"), "bot");});
test("botok -> bot", function() {deepEqual( Stem("botok"), "bot");});
test("botokat -> bot", function() {deepEqual( Stem("botokat"), "bot");});
test("botokkal -> bot", function() {deepEqual( Stem("botokkal"), "bot");});
test("botom -> bot", function() {deepEqual( Stem("botom"), "bot");});
test("botomat -> bot", function() {deepEqual( Stem("botomat"), "bot");});
test("botommal -> bot", function() {deepEqual( Stem("botommal"), "bot");});
test("botomról -> bot", function() {deepEqual( Stem("botomról"), "bot");});
test("botot -> bot", function() {deepEqual( Stem("botot"), "bot");});
test("botra -> bot", function() {deepEqual( Stem("botra"), "bot");});
test("bottal -> bot", function() {deepEqual( Stem("bottal"), "bot");});
test("botkormányok -> botkormány", function() {deepEqual( Stem("botkormányok"), "botkormány");});
test("botlik -> botl", function() {deepEqual( Stem("botlik"), "botl");});
test("botlott -> botlot", function() {deepEqual( Stem("botlott"), "botlot");});
test("botlás -> botlás", function() {deepEqual( Stem("botlás"), "botlás");});
test("botlása -> botlás", function() {deepEqual( Stem("botlása"), "botlás");});
test("botlásra -> botlás", function() {deepEqual( Stem("botlásra"), "botlás");});
test("botorkál -> botorkál", function() {deepEqual( Stem("botorkál"), "botorkál");});
test("botorkált -> botorkál", function() {deepEqual( Stem("botorkált"), "botorkál");});
test("botrány -> botrány", function() {deepEqual( Stem("botrány"), "botrány");});
test("botrányok -> botrány", function() {deepEqual( Stem("botrányok"), "botrány");});
test("botrányokról -> botrány", function() {deepEqual( Stem("botrányokról"), "botrány");});
test("botrányról -> botrány", function() {deepEqual( Stem("botrányról"), "botrány");});
test("botrányt -> botrány", function() {deepEqual( Stem("botrányt"), "botrány");});
test("botrányos -> botrányos", function() {deepEqual( Stem("botrányos"), "botrányos");});
test("botsáskáknak -> botsáska", function() {deepEqual( Stem("botsáskáknak"), "botsáska");});
test("boulevard-okon -> boulevard-", function() {deepEqual( Stem("boulevard-okon"), "boulevard-");});
test("box -> box", function() {deepEqual( Stem("box"), "box");});
test("boxba -> box", function() {deepEqual( Stem("boxba"), "box");});
test("boxból -> box", function() {deepEqual( Stem("boxból"), "box");});
test("boxeralsókon -> boxeralsó", function() {deepEqual( Stem("boxeralsókon"), "boxeralsó");});
test("bozontos -> bozontos", function() {deepEqual( Stem("bozontos"), "bozontos");});
test("bozsikos -> bozsikos", function() {deepEqual( Stem("bozsikos"), "bozsikos");});
test("bozót -> bozó", function() {deepEqual( Stem("bozót"), "bozó");});
test("bozótba -> bozót", function() {deepEqual( Stem("bozótba"), "bozót");});
test("bozóttal -> bozó", function() {deepEqual( Stem("bozóttal"), "bozó");});
test("bozótos -> bozótos", function() {deepEqual( Stem("bozótos"), "bozótos");});
test("bozótossal -> bozótos", function() {deepEqual( Stem("bozótossal"), "bozótos");});
test("bozótost -> bozótos", function() {deepEqual( Stem("bozótost"), "bozótos");});
test("brainstorming-ülések -> brainstorming-ülés", function() {deepEqual( Stem("brainstorming-ülések"), "brainstorming-ülés");});
test("bravúr -> bravúr", function() {deepEqual( Stem("bravúr"), "bravúr");});
test("bravúrhoz -> bravúr", function() {deepEqual( Stem("bravúrhoz"), "bravúr");});
test("bravúrnak -> bravúr", function() {deepEqual( Stem("bravúrnak"), "bravúr");});
test("bravúrok -> bravúr", function() {deepEqual( Stem("bravúrok"), "bravúr");});
test("bravúrra -> bravúr", function() {deepEqual( Stem("bravúrra"), "bravúr");});
test("bravúrral -> bravúr", function() {deepEqual( Stem("bravúrral"), "bravúr");});
test("bravúrt -> bravúr", function() {deepEqual( Stem("bravúrt"), "bravúr");});
test("bravúros -> bravúros", function() {deepEqual( Stem("bravúros"), "bravúros");});
test("brazil -> brazil", function() {deepEqual( Stem("brazil"), "brazil");});
test("braziloktól -> brazil", function() {deepEqual( Stem("braziloktól"), "brazil");});
test("brazíliai -> brazíli", function() {deepEqual( Stem("brazíliai"), "brazíli");});
test("breakpontot -> breakpont", function() {deepEqual( Stem("breakpontot"), "breakpont");});
test("breton -> bret", function() {deepEqual( Stem("breton"), "bret");});
test("bridzsezni -> bridzsezn", function() {deepEqual( Stem("bridzsezni"), "bridzsezn");});
test("bridzs -> bridzs", function() {deepEqual( Stem("bridzs"), "bridzs");});
test("bridzzsel -> bridzs", function() {deepEqual( Stem("bridzzsel"), "bridzs");});
test("brigádnak -> briga", function() {deepEqual( Stem("brigádnak"), "briga");});
test("brigádok -> brigád", function() {deepEqual( Stem("brigádok"), "brigád");});
test("brigádokkal -> brigád", function() {deepEqual( Stem("brigádokkal"), "brigád");});
test("briliáns -> briliáns", function() {deepEqual( Stem("briliáns"), "briliáns");});
test("brillírozott -> brillírozot", function() {deepEqual( Stem("brillírozott"), "brillírozot");});
test("bringám -> bringa", function() {deepEqual( Stem("bringám"), "bringa");});
test("bringámat -> bringa", function() {deepEqual( Stem("bringámat"), "bringa");});
test("bringámmal -> bringa", function() {deepEqual( Stem("bringámmal"), "bringa");});
test("bringás -> bringás", function() {deepEqual( Stem("bringás"), "bringás");});
test("bringástúrázni -> bringástúrázn", function() {deepEqual( Stem("bringástúrázni"), "bringástúrázn");});
test("bringáztunk -> bringázt", function() {deepEqual( Stem("bringáztunk"), "bringázt");});
test("brit -> bri", function() {deepEqual( Stem("brit"), "bri");});
test("brit-francia -> brit-franc", function() {deepEqual( Stem("brit-francia"), "brit-franc");});
test("brit-holland -> brit-hollan", function() {deepEqual( Stem("brit-holland"), "brit-hollan");});
test("brjanszki -> brjansz", function() {deepEqual( Stem("brjanszki"), "brjansz");});
test("broadband -> broadban", function() {deepEqual( Stem("broadband"), "broadban");});
test("broadbandet -> broadban", function() {deepEqual( Stem("broadbandet"), "broadban");});
test("bronzcímert -> bronzcímer", function() {deepEqual( Stem("bronzcímert"), "bronzcímer");});
test("bronzlámpásokkal -> bronzlámpás", function() {deepEqual( Stem("bronzlámpásokkal"), "bronzlámpás");});
test("bronzot -> bronz", function() {deepEqual( Stem("bronzot"), "bronz");});
test("bronzérmes -> bronzérmes", function() {deepEqual( Stem("bronzérmes"), "bronzérmes");});
test("bronzérmesek -> bronzérmes", function() {deepEqual( Stem("bronzérmesek"), "bronzérmes");});
test("bronzérmet -> bronzér", function() {deepEqual( Stem("bronzérmet"), "bronzér");});
test("bronzöntés -> bronzöntés", function() {deepEqual( Stem("bronzöntés"), "bronzöntés");});
test("brosúra-jellege -> brosúra-jelleg", function() {deepEqual( Stem("brosúra-jellege"), "brosúra-jelleg");});
test("brummogó -> brummogó", function() {deepEqual( Stem("brummogó"), "brummogó");});
test("bruttó -> bruttó", function() {deepEqual( Stem("bruttó"), "bruttó");});
test("brutális -> brutális", function() {deepEqual( Stem("brutális"), "brutális");});
test("brutálisan -> brutális", function() {deepEqual( Stem("brutálisan"), "brutális");});
test("bróker -> bróker", function() {deepEqual( Stem("bróker"), "bróker");});
test("brókerek -> bróker", function() {deepEqual( Stem("brókerek"), "bróker");});
test("brókercég -> brókercég", function() {deepEqual( Stem("brókercég"), "brókercég");});
test("brókercégben -> brókercég", function() {deepEqual( Stem("brókercégben"), "brókercég");});
test("brókercége -> brókercég", function() {deepEqual( Stem("brókercége"), "brókercég");});
test("brókercégek -> brókercég", function() {deepEqual( Stem("brókercégek"), "brókercég");});
test("brókercégekből -> brókercég", function() {deepEqual( Stem("brókercégekből"), "brókercég");});
test("brókercégeket -> brókercég", function() {deepEqual( Stem("brókercégeket"), "brókercég");});
test("brókercégen -> brókercég", function() {deepEqual( Stem("brókercégen"), "brókercég");});
test("brókercégnél -> brókercég", function() {deepEqual( Stem("brókercégnél"), "brókercég");});
test("brókercégtől -> brókercég", function() {deepEqual( Stem("brókercégtől"), "brókercég");});
test("brókercégét -> brókercég", function() {deepEqual( Stem("brókercégét"), "brókercég");});
test("brókerházak -> brókerház", function() {deepEqual( Stem("brókerházak"), "brókerház");});
test("brókertevékenységgel -> brókertevékenység", function() {deepEqual( Stem("brókertevékenységgel"), "brókertevékenység");});
test("brókertársaság -> brókertársaság", function() {deepEqual( Stem("brókertársaság"), "brókertársaság");});
test("brókervállalkozás -> brókervállalkozás", function() {deepEqual( Stem("brókervállalkozás"), "brókervállalkozás");});
test("brómot -> bró", function() {deepEqual( Stem("brómot"), "bró");});
test("brüsszeli -> brüsszel", function() {deepEqual( Stem("brüsszeli"), "brüsszel");});
test("buborékban -> bubore", function() {deepEqual( Stem("buborékban"), "bubore");});
test("budai -> bud", function() {deepEqual( Stem("budai"), "bud");});
test("budapesti -> budapest", function() {deepEqual( Stem("budapesti"), "budapest");});
test("buddhista -> buddhist", function() {deepEqual( Stem("buddhista"), "buddhist");});
test("buddhizmusról -> buddhizmus", function() {deepEqual( Stem("buddhizmusról"), "buddhizmus");});
test("budget-ol -> budget-ol", function() {deepEqual( Stem("budget-ol"), "budget-ol");});
test("buffoszerepeit -> buffoszerep", function() {deepEqual( Stem("buffoszerepeit"), "buffoszerep");});
test("bujasággal -> bujaság", function() {deepEqual( Stem("bujasággal"), "bujaság");});
test("bujdostam -> bujdost", function() {deepEqual( Stem("bujdostam"), "bujdost");});
test("bujdosásával -> bujdosás", function() {deepEqual( Stem("bujdosásával"), "bujdosás");});
test("bujdosó -> bujdosó", function() {deepEqual( Stem("bujdosó"), "bujdosó");});
test("bujkál -> bujkál", function() {deepEqual( Stem("bujkál"), "bujkál");});
test("bujkált -> bujkál", function() {deepEqual( Stem("bujkált"), "bujkál");});
test("bujkálva -> bujkálv", function() {deepEqual( Stem("bujkálva"), "bujkálv");});
test("bujkáló -> bujkáló", function() {deepEqual( Stem("bujkáló"), "bujkáló");});
test("buján -> bu", function() {deepEqual( Stem("buján"), "bu");});
test("bukaresti -> bukarest", function() {deepEqual( Stem("bukaresti"), "bukarest");});
test("bukdácsoltak -> bukdácsolt", function() {deepEqual( Stem("bukdácsoltak"), "bukdácsolt");});
test("bukfencekkel -> bukfenc", function() {deepEqual( Stem("bukfencekkel"), "bukfenc");});
test("bukhat -> bukh", function() {deepEqual( Stem("bukhat"), "bukh");});
test("bukik -> bu", function() {deepEqual( Stem("bukik"), "bu");});
test("bukjanak -> bu", function() {deepEqual( Stem("bukjanak"), "bu");});
test("bukok -> buk", function() {deepEqual( Stem("bukok"), "buk");});
test("buktam -> bukt", function() {deepEqual( Stem("buktam"), "bukt");});
test("bukkan -> buk", function() {deepEqual( Stem("bukkan"), "buk");});
test("bukkannak -> bukkan", function() {deepEqual( Stem("bukkannak"), "bukkan");});
test("bukkantak -> bukkant", function() {deepEqual( Stem("bukkantak"), "bukkant");});
test("bukkantam -> bukkant", function() {deepEqual( Stem("bukkantam"), "bukkant");});
test("bukkantunk -> bukkant", function() {deepEqual( Stem("bukkantunk"), "bukkant");});
test("bukkant -> bukkan", function() {deepEqual( Stem("bukkant"), "bukkan");});
test("bukott -> bukot", function() {deepEqual( Stem("bukott"), "bukot");});
test("bukovinai -> bukovin", function() {deepEqual( Stem("bukovinai"), "bukovin");});
test("buksi -> buks", function() {deepEqual( Stem("buksi"), "buks");});
test("bukszáját -> bukszá", function() {deepEqual( Stem("bukszáját"), "bukszá");});
test("bukta -> bukt", function() {deepEqual( Stem("bukta"), "bukt");});
test("buktatni -> buktatn", function() {deepEqual( Stem("buktatni"), "buktatn");});
test("buktatnám -> buktatna", function() {deepEqual( Stem("buktatnám"), "buktatna");});
test("buktatta -> buktatt", function() {deepEqual( Stem("buktatta"), "buktatt");});
test("buktató -> buktató", function() {deepEqual( Stem("buktató"), "buktató");});
test("buktatóin -> buktató", function() {deepEqual( Stem("buktatóin"), "buktató");});
test("buktatókkal -> buktató", function() {deepEqual( Stem("buktatókkal"), "buktató");});
test("bukás -> bukás", function() {deepEqual( Stem("bukás"), "bukás");});
test("bukása -> bukás", function() {deepEqual( Stem("bukása"), "bukás");});
test("bukáshoz -> bukás", function() {deepEqual( Stem("bukáshoz"), "bukás");});
test("bukásra -> bukás", function() {deepEqual( Stem("bukásra"), "bukás");});
test("bukásában -> bukás", function() {deepEqual( Stem("bukásában"), "bukás");});
test("bukását -> bukás", function() {deepEqual( Stem("bukását"), "bukás");});
test("bukócsővel -> bukócső", function() {deepEqual( Stem("bukócsővel"), "bukócső");});
test("bukócsövezve -> bukócsövezv", function() {deepEqual( Stem("bukócsövezve"), "bukócsövezv");});
test("bukósisakot -> bukósis", function() {deepEqual( Stem("bukósisakot"), "bukósis");});
test("bulgáriai -> bulgári", function() {deepEqual( Stem("bulgáriai"), "bulgári");});
test("buli -> bul", function() {deepEqual( Stem("buli"), "bul");});
test("buliba -> bul", function() {deepEqual( Stem("buliba"), "bul");});
test("buliban -> bul", function() {deepEqual( Stem("buliban"), "bul");});
test("bulijára -> bul", function() {deepEqual( Stem("bulijára"), "bul");});
test("buliját -> bul", function() {deepEqual( Stem("buliját"), "bul");});
test("bulik -> bul", function() {deepEqual( Stem("bulik"), "bul");});
test("bulikat -> bul", function() {deepEqual( Stem("bulikat"), "bul");});
test("bulikba -> bul", function() {deepEqual( Stem("bulikba"), "bul");});
test("bulikban -> bul", function() {deepEqual( Stem("bulikban"), "bul");});
test("bulikon -> bul", function() {deepEqual( Stem("bulikon"), "bul");});
test("buliktól -> bul", function() {deepEqual( Stem("buliktól"), "bul");});
test("bulin -> bul", function() {deepEqual( Stem("bulin"), "bul");});
test("bulinak -> bul", function() {deepEqual( Stem("bulinak"), "bul");});
test("bulira -> bul", function() {deepEqual( Stem("bulira"), "bul");});
test("buliról -> bul", function() {deepEqual( Stem("buliról"), "bul");});
test("bulit -> bul", function() {deepEqual( Stem("bulit"), "bul");});
test("bulival -> bul", function() {deepEqual( Stem("bulival"), "bul");});
test("bulimiát -> bulim", function() {deepEqual( Stem("bulimiát"), "bulim");});
test("bulizni -> bulizn", function() {deepEqual( Stem("bulizni"), "bulizn");});
test("buliztunk -> bulizt", function() {deepEqual( Stem("buliztunk"), "bulizt");});
test("bulizunk -> buliz", function() {deepEqual( Stem("bulizunk"), "buliz");});
test("bulizzanak -> bulizz", function() {deepEqual( Stem("bulizzanak"), "bulizz");});
test("bulizás -> bulizás", function() {deepEqual( Stem("bulizás"), "bulizás");});
test("bulizást -> bulizás", function() {deepEqual( Stem("bulizást"), "bulizás");});
test("bulletin -> bullet", function() {deepEqual( Stem("bulletin"), "bullet");});
test("bummja -> bumm", function() {deepEqual( Stem("bummja"), "bumm");});
test("bunda -> bund", function() {deepEqual( Stem("bunda"), "bund");});
test("bundabotrány -> bundabotrány", function() {deepEqual( Stem("bundabotrány"), "bundabotrány");});
test("bunkó -> bunkó", function() {deepEqual( Stem("bunkó"), "bunkó");});
test("bunkók -> bunkó", function() {deepEqual( Stem("bunkók"), "bunkó");});
test("bunkóként -> bunkó", function() {deepEqual( Stem("bunkóként"), "bunkó");});
test("bunkósbot -> bunkósb", function() {deepEqual( Stem("bunkósbot"), "bunkósb");});
test("bunkósbothoz -> bunkósbot", function() {deepEqual( Stem("bunkósbothoz"), "bunkósbot");});
test("bunkóságnak -> bunkóság", function() {deepEqual( Stem("bunkóságnak"), "bunkóság");});
test("bunkózni -> bunkózn", function() {deepEqual( Stem("bunkózni"), "bunkózn");});
test("bunyó -> bunyó", function() {deepEqual( Stem("bunyó"), "bunyó");});
test("bunyók -> bunyó", function() {deepEqual( Stem("bunyók"), "bunyó");});
test("burgonyapürét -> burgonyapür", function() {deepEqual( Stem("burgonyapürét"), "burgonyapür");});
test("burgonya -> burgony", function() {deepEqual( Stem("burgonya"), "burgony");});
test("burgonyát -> burgony", function() {deepEqual( Stem("burgonyát"), "burgony");});
test("burjánzani -> burjánzan", function() {deepEqual( Stem("burjánzani"), "burjánzan");});
test("burkolat -> burkol", function() {deepEqual( Stem("burkolat"), "burkol");});
test("burkolatot -> burkolat", function() {deepEqual( Stem("burkolatot"), "burkolat");});
test("burkolatáról -> burkolat", function() {deepEqual( Stem("burkolatáról"), "burkolat");});
test("burkolt -> burkol", function() {deepEqual( Stem("burkolt"), "burkol");});
test("burkolózik -> burkolóz", function() {deepEqual( Stem("burkolózik"), "burkolóz");});
test("burkolózó -> burkolózó", function() {deepEqual( Stem("burkolózó"), "burkolózó");});
test("burkolózókkal -> burkolózó", function() {deepEqual( Stem("burkolózókkal"), "burkolózó");});
test("burkot -> bur", function() {deepEqual( Stem("burkot"), "bur");});
test("burleszkhősök -> burleszkhős", function() {deepEqual( Stem("burleszkhősök"), "burleszkhős");});
test("burmai -> burm", function() {deepEqual( Stem("burmai"), "burm");});
test("burnusznak -> burnusz", function() {deepEqual( Stem("burnusznak"), "burnusz");});
test("burnótszelence -> burnótszelenc", function() {deepEqual( Stem("burnótszelence"), "burnótszelenc");});
test("burnótszelencéjét -> burnótszelencé", function() {deepEqual( Stem("burnótszelencéjét"), "burnótszelencé");});
test("burzsoák -> burzsoa", function() {deepEqual( Stem("burzsoák"), "burzsoa");});
test("burzsoákat -> burzsoa", function() {deepEqual( Stem("burzsoákat"), "burzsoa");});
test("burzsoázia -> burzsoáz", function() {deepEqual( Stem("burzsoázia"), "burzsoáz");});
test("burának -> bur", function() {deepEqual( Stem("burának"), "bur");});
test("busa-ügy -> busa-ügy", function() {deepEqual( Stem("busa-ügy"), "busa-ügy");});
test("buszával -> busz", function() {deepEqual( Stem("buszával"), "busz");});
test("busszal -> busz", function() {deepEqual( Stem("busszal"), "busz");});
test("busz -> busz", function() {deepEqual( Stem("busz"), "busz");});
test("buszai -> busz", function() {deepEqual( Stem("buszai"), "busz");});
test("buszba -> busz", function() {deepEqual( Stem("buszba"), "busz");});
test("buszban -> busz", function() {deepEqual( Stem("buszban"), "busz");});
test("buszból -> busz", function() {deepEqual( Stem("buszból"), "busz");});
test("buszhoz -> busz", function() {deepEqual( Stem("buszhoz"), "busz");});
test("buszig -> busz", function() {deepEqual( Stem("buszig"), "busz");});
test("busznál -> busz", function() {deepEqual( Stem("busznál"), "busz");});
test("buszok -> busz", function() {deepEqual( Stem("buszok"), "busz");});
test("buszokat -> busz", function() {deepEqual( Stem("buszokat"), "busz");});
test("buszokból -> busz", function() {deepEqual( Stem("buszokból"), "busz");});
test("buszokon -> busz", function() {deepEqual( Stem("buszokon"), "busz");});
test("buszomat -> busz", function() {deepEqual( Stem("buszomat"), "busz");});
test("buszon -> busz", function() {deepEqual( Stem("buszon"), "busz");});
test("buszra -> busz", function() {deepEqual( Stem("buszra"), "busz");});
test("buszrólbuszt -> buszrólbusz", function() {deepEqual( Stem("buszrólbuszt"), "buszrólbusz");});
test("buszunk -> busz", function() {deepEqual( Stem("buszunk"), "busz");});
test("buszunkhoz -> busz", function() {deepEqual( Stem("buszunkhoz"), "busz");});
test("buszunkra -> busz", function() {deepEqual( Stem("buszunkra"), "busz");});
test("buszjárat -> buszjár", function() {deepEqual( Stem("buszjárat"), "buszjár");});
test("buszjáratainak -> buszjárat", function() {deepEqual( Stem("buszjáratainak"), "buszjárat");});
test("buszjárattal -> buszjár", function() {deepEqual( Stem("buszjárattal"), "buszjár");});
test("buszközlekedés -> buszközlekedés", function() {deepEqual( Stem("buszközlekedés"), "buszközlekedés");});
test("buszmegbe -> buszmeg", function() {deepEqual( Stem("buszmegbe"), "buszmeg");});
test("buszmegálló -> buszmegálló", function() {deepEqual( Stem("buszmegálló"), "buszmegálló");});
test("buszmegállóba -> buszmegálló", function() {deepEqual( Stem("buszmegállóba"), "buszmegálló");});
test("buszmegállóban -> buszmegálló", function() {deepEqual( Stem("buszmegállóban"), "buszmegálló");});
test("buszmegállóból -> buszmegálló", function() {deepEqual( Stem("buszmegállóból"), "buszmegálló");});
test("buszmegállóhoz -> buszmegálló", function() {deepEqual( Stem("buszmegállóhoz"), "buszmegálló");});
test("buszmegállóig -> buszmegálló", function() {deepEqual( Stem("buszmegállóig"), "buszmegálló");});
test("buszmegállójában -> buszmegálló", function() {deepEqual( Stem("buszmegállójában"), "buszmegálló");});
test("buszmegállók -> buszmegálló", function() {deepEqual( Stem("buszmegállók"), "buszmegálló");});
test("buszmegállónál -> buszmegálló", function() {deepEqual( Stem("buszmegállónál"), "buszmegálló");});
test("buszmegállótól -> buszmegálló", function() {deepEqual( Stem("buszmegállótól"), "buszmegálló");});
test("buszmegéllóból -> buszmegélló", function() {deepEqual( Stem("buszmegéllóból"), "buszmegélló");});
test("buszozás -> buszozás", function() {deepEqual( Stem("buszozás"), "buszozás");});
test("buszpályaudvarra -> buszpályaudvar", function() {deepEqual( Stem("buszpályaudvarra"), "buszpályaudvar");});
test("buszsofőr -> buszsofőr", function() {deepEqual( Stem("buszsofőr"), "buszsofőr");});
test("buszsofőrnek -> buszsofőr", function() {deepEqual( Stem("buszsofőrnek"), "buszsofőr");});
test("buszsofőrrel -> buszsofőr", function() {deepEqual( Stem("buszsofőrrel"), "buszsofőr");});
test("buszvégállomásnál -> buszvégállomás", function() {deepEqual( Stem("buszvégállomásnál"), "buszvégállomás");});
test("buszút -> buszú", function() {deepEqual( Stem("buszút"), "buszú");});
test("busás -> busás", function() {deepEqual( Stem("busás"), "busás");});
test("busa -> bus", function() {deepEqual( Stem("busa"), "bus");});
test("busát -> bus", function() {deepEqual( Stem("busát"), "bus");});
test("busójárásra -> busójárás", function() {deepEqual( Stem("busójárásra"), "busójárás");});
test("busók -> busó", function() {deepEqual( Stem("busók"), "busó");});
test("busónak -> busó", function() {deepEqual( Stem("busónak"), "busó");});
test("butaság -> butaság", function() {deepEqual( Stem("butaság"), "butaság");});
test("butasága -> butaság", function() {deepEqual( Stem("butasága"), "butaság");});
test("butaságban -> butaság", function() {deepEqual( Stem("butaságban"), "butaság");});
test("butaságot -> butaság", function() {deepEqual( Stem("butaságot"), "butaság");});
test("butellákat -> butella", function() {deepEqual( Stem("butellákat"), "butella");});
test("butik -> but", function() {deepEqual( Stem("butik"), "but");});
test("butikjukban -> but", function() {deepEqual( Stem("butikjukban"), "but");});
test("butikok -> butik", function() {deepEqual( Stem("butikok"), "butik");});
test("butikot -> but", function() {deepEqual( Stem("butikot"), "but");});
test("butuska -> butus", function() {deepEqual( Stem("butuska"), "butus");});
test("buta -> but", function() {deepEqual( Stem("buta"), "but");});
test("butábbak -> butább", function() {deepEqual( Stem("butábbak"), "butább");});
test("buták -> buta", function() {deepEqual( Stem("buták"), "buta");});
test("bután -> but", function() {deepEqual( Stem("bután"), "but");});
test("butának -> but", function() {deepEqual( Stem("butának"), "but");});
test("butít -> butí", function() {deepEqual( Stem("butít"), "butí");});
test("butítani -> butítan", function() {deepEqual( Stem("butítani"), "butítan");});
test("buzdít -> buzdí", function() {deepEqual( Stem("buzdít"), "buzdí");});
test("buzdítja -> buzdít", function() {deepEqual( Stem("buzdítja"), "buzdít");});
test("buzdította -> buzdított", function() {deepEqual( Stem("buzdította"), "buzdított");});
test("buzdították -> buzdította", function() {deepEqual( Stem("buzdították"), "buzdította");});
test("buzdításokkal -> buzdítás", function() {deepEqual( Stem("buzdításokkal"), "buzdítás");});
test("buzdító -> buzdító", function() {deepEqual( Stem("buzdító"), "buzdító");});
test("buzerálni -> buzeráln", function() {deepEqual( Stem("buzerálni"), "buzeráln");});
test("buzgalmának -> buzgalm", function() {deepEqual( Stem("buzgalmának"), "buzgalm");});
test("buzgalmáért -> buzgalm", function() {deepEqual( Stem("buzgalmáért"), "buzgalm");});
test("buzgalom -> buzgal", function() {deepEqual( Stem("buzgalom"), "buzgal");});
test("buzgalommal -> buzgal", function() {deepEqual( Stem("buzgalommal"), "buzgal");});
test("buzgólkodik -> buzgólkod", function() {deepEqual( Stem("buzgólkodik"), "buzgólkod");});
test("buzgó -> buzgó", function() {deepEqual( Stem("buzgó"), "buzgó");});
test("buzgón -> buzgó", function() {deepEqual( Stem("buzgón"), "buzgó");});
test("buzgóság -> buzgóság", function() {deepEqual( Stem("buzgóság"), "buzgóság");});
test("buzgósággal -> buzgóság", function() {deepEqual( Stem("buzgósággal"), "buzgóság");});
test("buzgóságom -> buzgóság", function() {deepEqual( Stem("buzgóságom"), "buzgóság");});
test("byte -> byte", function() {deepEqual( Stem("byte"), "byte");});
test("byte-ban -> byte-", function() {deepEqual( Stem("byte-ban"), "byte-");});
test("byte-okból -> byte-", function() {deepEqual( Stem("byte-okból"), "byte-");});
test("byte-os -> byte-os", function() {deepEqual( Stem("byte-os"), "byte-os");});
test("byte-ot -> byte-", function() {deepEqual( Stem("byte-ot"), "byte-");});
test("bábfigura -> bábfigu", function() {deepEqual( Stem("bábfigura"), "bábfigu");});
test("bábfilm -> bábfil", function() {deepEqual( Stem("bábfilm"), "bábfil");});
test("bábfilmben -> bábfil", function() {deepEqual( Stem("bábfilmben"), "bábfil");});
test("bábuk -> báb", function() {deepEqual( Stem("bábuk"), "báb");});
test("báb -> báb", function() {deepEqual( Stem("báb"), "báb");});
test("bábukat -> báb", function() {deepEqual( Stem("bábukat"), "báb");});
test("bábállama -> bábállam", function() {deepEqual( Stem("bábállama"), "bábállam");});
test("bábáskodott -> bábáskodot", function() {deepEqual( Stem("bábáskodott"), "bábáskodot");});
test("bábúk -> bábú", function() {deepEqual( Stem("bábúk"), "bábú");});
test("bácsi -> bács", function() {deepEqual( Stem("bácsi"), "bács");});
test("bácsihoz -> bács", function() {deepEqual( Stem("bácsihoz"), "bács");});
test("bácsik -> bács", function() {deepEqual( Stem("bácsik"), "bács");});
test("bácsinak -> bács", function() {deepEqual( Stem("bácsinak"), "bács");});
test("bácsinál -> bács", function() {deepEqual( Stem("bácsinál"), "bács");});
test("bácsit -> bács", function() {deepEqual( Stem("bácsit"), "bács");});
test("bácsitól -> bács", function() {deepEqual( Stem("bácsitól"), "bács");});
test("bácsival -> bács", function() {deepEqual( Stem("bácsival"), "bács");});
test("bácsié -> bács", function() {deepEqual( Stem("bácsié"), "bács");});
test("bácsiék -> bácsie", function() {deepEqual( Stem("bácsiék"), "bácsie");});
test("bácsiért -> bács", function() {deepEqual( Stem("bácsiért"), "bács");});
test("bácsika -> bács", function() {deepEqual( Stem("bácsika"), "bács");});
test("bádog -> bádog", function() {deepEqual( Stem("bádog"), "bádog");});
test("bádogdobozba -> bádogdoboz", function() {deepEqual( Stem("bádogdobozba"), "bádogdoboz");});
test("bádogedény -> bádogedény", function() {deepEqual( Stem("bádogedény"), "bádogedény");});
test("bádoglemezzel -> bádoglemez", function() {deepEqual( Stem("bádoglemezzel"), "bádoglemez");});
test("bádogmosdó -> bádogmosdó", function() {deepEqual( Stem("bádogmosdó"), "bádogmosdó");});
test("bádogpoharaikkal -> bádogpohar", function() {deepEqual( Stem("bádogpoharaikkal"), "bádogpohar");});
test("bádogpohár -> bádogpohár", function() {deepEqual( Stem("bádogpohár"), "bádogpohár");});
test("bádogszagánál -> bádogszag", function() {deepEqual( Stem("bádogszagánál"), "bádogszag");});
test("bágyadtan -> bágyadt", function() {deepEqual( Stem("bágyadtan"), "bágyadt");});
test("bágyadtsággal -> bágyadtság", function() {deepEqual( Stem("bágyadtsággal"), "bágyadtság");});
test("báj -> báj", function() {deepEqual( Stem("báj"), "báj");});
test("bája -> bá", function() {deepEqual( Stem("bája"), "bá");});
test("bájos -> bájos", function() {deepEqual( Stem("bájos"), "bájos");});
test("bájt -> báj", function() {deepEqual( Stem("bájt"), "báj");});
test("bájtokat -> bájt", function() {deepEqual( Stem("bájtokat"), "bájt");});
test("bájtonként -> bájt", function() {deepEqual( Stem("bájtonként"), "bájt");});
test("bál -> bál", function() {deepEqual( Stem("bál"), "bál");});
test("bálba -> bál", function() {deepEqual( Stem("bálba"), "bál");});
test("bálját -> bál", function() {deepEqual( Stem("bálját"), "bál");});
test("bálnavadászati -> bálnavadászat", function() {deepEqual( Stem("bálnavadászati"), "bálnavadászat");});
test("bálványa -> bálvány", function() {deepEqual( Stem("bálványa"), "bálvány");});
test("bálványotok -> bálványot", function() {deepEqual( Stem("bálványotok"), "bálványot");});
test("bálán -> bál", function() {deepEqual( Stem("bálán"), "bál");});
test("bámul -> bám", function() {deepEqual( Stem("bámul"), "bám");});
test("bámulni -> bámuln", function() {deepEqual( Stem("bámulni"), "bámuln");});
test("bámulok -> bámul", function() {deepEqual( Stem("bámulok"), "bámul");});
test("bámulom -> bámul", function() {deepEqual( Stem("bámulom"), "bámul");});
test("bámulsz -> bámulsz", function() {deepEqual( Stem("bámulsz"), "bámulsz");});
test("bámulta -> bámult", function() {deepEqual( Stem("bámulta"), "bámult");});
test("bámultak -> bámult", function() {deepEqual( Stem("bámultak"), "bámult");});
test("bámultam -> bámult", function() {deepEqual( Stem("bámultam"), "bámult");});
test("bámultuk -> bámult", function() {deepEqual( Stem("bámultuk"), "bámult");});
test("bámulunk -> bámul", function() {deepEqual( Stem("bámulunk"), "bámul");});
test("bámult -> bámul", function() {deepEqual( Stem("bámult"), "bámul");});
test("bámulva -> bámulv", function() {deepEqual( Stem("bámulva"), "bámulv");});
test("bámulásnak -> bámulás", function() {deepEqual( Stem("bámulásnak"), "bámulás");});
test("bámuló -> bámuló", function() {deepEqual( Stem("bámuló"), "bámuló");});
test("bámészkodik -> bámészkod", function() {deepEqual( Stem("bámészkodik"), "bámészkod");});
test("bámészkodjon -> bámészkodj", function() {deepEqual( Stem("bámészkodjon"), "bámészkodj");});
test("bámészkodtunk -> bámészkodt", function() {deepEqual( Stem("bámészkodtunk"), "bámészkodt");});
test("bámészkodók -> bámészkodó", function() {deepEqual( Stem("bámészkodók"), "bámészkodó");});
test("bánatok -> bánat", function() {deepEqual( Stem("bánatok"), "bánat");});
test("bánatokat -> bánat", function() {deepEqual( Stem("bánatokat"), "bánat");});
test("bánatuk -> bánat", function() {deepEqual( Stem("bánatuk"), "bánat");});
test("bánatunk -> bánat", function() {deepEqual( Stem("bánatunk"), "bánat");});
test("bánatában -> bánat", function() {deepEqual( Stem("bánatában"), "bánat");});
test("bánatát -> bánat", function() {deepEqual( Stem("bánatát"), "bánat");});
test("bán -> bá", function() {deepEqual( Stem("bán"), "bá");});
test("bánja -> bán", function() {deepEqual( Stem("bánja"), "bán");});
test("bánják -> bánja", function() {deepEqual( Stem("bánják"), "bánja");});
test("bánnak -> bán", function() {deepEqual( Stem("bánnak"), "bán");});
test("bánni -> bánn", function() {deepEqual( Stem("bánni"), "bánn");});
test("bánni -> bánn", function() {deepEqual( Stem("bánni"), "bánn");});
test("bánnia -> bánn", function() {deepEqual( Stem("bánnia"), "bánn");});
test("bánniuk -> bánn", function() {deepEqual( Stem("bánniuk"), "bánn");});
test("bánnám -> bánna", function() {deepEqual( Stem("bánnám"), "bánna");});
test("bánok -> bán", function() {deepEqual( Stem("bánok"), "bán");});
test("bánom -> bán", function() {deepEqual( Stem("bánom"), "bán");});
test("bánta -> bánt", function() {deepEqual( Stem("bánta"), "bánt");});
test("bántak -> bánt", function() {deepEqual( Stem("bántak"), "bánt");});
test("bántam -> bánt", function() {deepEqual( Stem("bántam"), "bánt");});
test("bántuk -> bánt", function() {deepEqual( Stem("bántuk"), "bánt");});
test("bánkódott -> bánkódot", function() {deepEqual( Stem("bánkódott"), "bánkódot");});
test("bánt -> bán", function() {deepEqual( Stem("bánt"), "bán");});
test("bántalmaznak -> bántalmaz", function() {deepEqual( Stem("bántalmaznak"), "bántalmaz");});
test("bántalmazni -> bántalmazn", function() {deepEqual( Stem("bántalmazni"), "bántalmazn");});
test("bántalmaztak -> bántalmazt", function() {deepEqual( Stem("bántalmaztak"), "bántalmazt");});
test("bántalmazzák -> bántalmazza", function() {deepEqual( Stem("bántalmazzák"), "bántalmazza");});
test("bántalmazott -> bántalmazot", function() {deepEqual( Stem("bántalmazott"), "bántalmazot");});
test("bántani -> bántan", function() {deepEqual( Stem("bántani"), "bántan");});
test("bántaná -> bántana", function() {deepEqual( Stem("bántaná"), "bántana");});
test("bántatok -> bántat", function() {deepEqual( Stem("bántatok"), "bántat");});
test("bántottak -> bántott", function() {deepEqual( Stem("bántottak"), "bántott");});
test("bántottam -> bántott", function() {deepEqual( Stem("bántottam"), "bántott");});
test("bántották -> bántotta", function() {deepEqual( Stem("bántották"), "bántotta");});
test("bántsak -> bánts", function() {deepEqual( Stem("bántsak"), "bánts");});
test("bántson -> bánts", function() {deepEqual( Stem("bántson"), "bánts");});
test("bántja -> bánt", function() {deepEqual( Stem("bántja"), "bánt");});
test("bántják -> bántja", function() {deepEqual( Stem("bántják"), "bántja");});
test("bántod -> bánt", function() {deepEqual( Stem("bántod"), "bánt");});
test("bánthatja -> bánthat", function() {deepEqual( Stem("bánthatja"), "bánthat");});
test("bántott -> bántot", function() {deepEqual( Stem("bántott"), "bántot");});
test("bántódása -> bántódás", function() {deepEqual( Stem("bántódása"), "bántódás");});
test("bántón -> bántó", function() {deepEqual( Stem("bántón"), "bántó");});
test("bányabezárások -> bányabezárás", function() {deepEqual( Stem("bányabezárások"), "bányabezárás");});
test("bányacég -> bányacég", function() {deepEqual( Stem("bányacég"), "bányacég");});
test("bányafalakhoz -> bányafal", function() {deepEqual( Stem("bányafalakhoz"), "bányafal");});
test("bányafolyosó -> bányafolyosó", function() {deepEqual( Stem("bányafolyosó"), "bányafolyosó");});
test("bányajáradékot -> bányajárade", function() {deepEqual( Stem("bányajáradékot"), "bányajárade");});
test("bányató -> bányató", function() {deepEqual( Stem("bányató"), "bányató");});
test("bányatóhoz -> bányató", function() {deepEqual( Stem("bányatóhoz"), "bányató");});
test("bányatóra -> bányató", function() {deepEqual( Stem("bányatóra"), "bányató");});
test("bányatóról -> bányató", function() {deepEqual( Stem("bányatóról"), "bányató");});
test("bányavállalkozás -> bányavállalkozás", function() {deepEqual( Stem("bányavállalkozás"), "bányavállalkozás");});
test("bányavárosba -> bányaváros", function() {deepEqual( Stem("bányavárosba"), "bányaváros");});
test("bányába -> bány", function() {deepEqual( Stem("bányába"), "bány");});
test("bánya -> bány", function() {deepEqual( Stem("bánya"), "bány");});
test("bányából -> bány", function() {deepEqual( Stem("bányából"), "bány");});
test("bányái -> bánya", function() {deepEqual( Stem("bányái"), "bánya");});
test("bányák -> bánya", function() {deepEqual( Stem("bányák"), "bánya");});
test("bányákat -> bánya", function() {deepEqual( Stem("bányákat"), "bánya");});
test("bányákba -> bánya", function() {deepEqual( Stem("bányákba"), "bánya");});
test("bányákban -> bánya", function() {deepEqual( Stem("bányákban"), "bánya");});
test("bányákra -> bánya", function() {deepEqual( Stem("bányákra"), "bánya");});
test("bányának -> bány", function() {deepEqual( Stem("bányának"), "bány");});
test("bányát -> bány", function() {deepEqual( Stem("bányát"), "bány");});
test("bányával -> bány", function() {deepEqual( Stem("bányával"), "bány");});
test("bányáét -> bányá", function() {deepEqual( Stem("bányáét"), "bányá");});
test("bányász -> bányász", function() {deepEqual( Stem("bányász"), "bányász");});
test("bányászai -> bányász", function() {deepEqual( Stem("bányászai"), "bányász");});
test("bányászból -> bányász", function() {deepEqual( Stem("bányászból"), "bányász");});
test("bányászok -> bányász", function() {deepEqual( Stem("bányászok"), "bányász");});
test("bányászokat -> bányász", function() {deepEqual( Stem("bányászokat"), "bányász");});
test("bányászoknak -> bányász", function() {deepEqual( Stem("bányászoknak"), "bányász");});
test("bányászról -> bányász", function() {deepEqual( Stem("bányászról"), "bányász");});
test("bányászat -> bányász", function() {deepEqual( Stem("bányászat"), "bányász");});
test("bányászathoz -> bányászat", function() {deepEqual( Stem("bányászathoz"), "bányászat");});
test("bányászemlékműve -> bányászemlékműv", function() {deepEqual( Stem("bányászemlékműve"), "bányászemlékműv");});
test("bányászjárások -> bányászjárás", function() {deepEqual( Stem("bányászjárások"), "bányászjárás");});
test("bányászkalapot -> bányászkalap", function() {deepEqual( Stem("bányászkalapot"), "bányászkalap");});
test("bányászkörökben -> bányászkör", function() {deepEqual( Stem("bányászkörökben"), "bányászkör");});
test("bányászlátogatással -> bányászlátogatás", function() {deepEqual( Stem("bányászlátogatással"), "bányászlátogatás");});
test("bányásznia -> bányászn", function() {deepEqual( Stem("bányásznia"), "bányászn");});
test("bányászszakszervezet -> bányászszakszervez", function() {deepEqual( Stem("bányászszakszervezet"), "bányászszakszervez");});
test("bányásztasson -> bányásztass", function() {deepEqual( Stem("bányásztasson"), "bányásztass");});
test("bánásmód -> bánásmó", function() {deepEqual( Stem("bánásmód"), "bánásmó");});
test("bánásmódban -> bánásmó", function() {deepEqual( Stem("bánásmódban"), "bánásmó");});
test("bánásmódja -> bánásmód", function() {deepEqual( Stem("bánásmódja"), "bánásmód");});
test("bánásmódot -> bánásmó", function() {deepEqual( Stem("bánásmódot"), "bánásmó");});
test("bánásmódra -> bánásmó", function() {deepEqual( Stem("bánásmódra"), "bánásmó");});
test("bánó -> bánó", function() {deepEqual( Stem("bánó"), "bánó");});
test("bár -> bár", function() {deepEqual( Stem("bár"), "bár");});
test("bárba -> bár", function() {deepEqual( Stem("bárba"), "bár");});
test("bárban -> bár", function() {deepEqual( Stem("bárban"), "bár");});
test("bárjaiban -> bár", function() {deepEqual( Stem("bárjaiban"), "bár");});
test("bárjában -> bár", function() {deepEqual( Stem("bárjában"), "bár");});
test("bárok -> bár", function() {deepEqual( Stem("bárok"), "bár");});
test("bárdok -> bárd", function() {deepEqual( Stem("bárdok"), "bárd");});
test("bárgyúan-komoly -> bárgyúan-komoly", function() {deepEqual( Stem("bárgyúan-komoly"), "bárgyúan-komoly");});
test("bárgyún -> bárgyú", function() {deepEqual( Stem("bárgyún"), "bárgyú");});
test("bárgyúság -> bárgyúság", function() {deepEqual( Stem("bárgyúság"), "bárgyúság");});
test("bárhogyan -> bárhogy", function() {deepEqual( Stem("bárhogyan"), "bárhogy");});
test("bárhol -> bárhol", function() {deepEqual( Stem("bárhol"), "bárhol");});
test("bárhonnan -> bárhonn", function() {deepEqual( Stem("bárhonnan"), "bárhonn");});
test("bárhova -> bárhov", function() {deepEqual( Stem("bárhova"), "bárhov");});
test("bárhová -> bárh", function() {deepEqual( Stem("bárhová"), "bárh");});
test("bárki -> bár", function() {deepEqual( Stem("bárki"), "bár");});
test("bárkihez -> bár", function() {deepEqual( Stem("bárkihez"), "bár");});
test("bárkik -> bár", function() {deepEqual( Stem("bárkik"), "bár");});
test("bárkinek -> bár", function() {deepEqual( Stem("bárkinek"), "bár");});
test("bárkit -> bár", function() {deepEqual( Stem("bárkit"), "bár");});
test("bárkitől -> bár", function() {deepEqual( Stem("bárkitől"), "bár");});
test("bárkivel -> bár", function() {deepEqual( Stem("bárkivel"), "bár");});
test("bármekkora -> bármek", function() {deepEqual( Stem("bármekkora"), "bármek");});
test("bármely -> bármely", function() {deepEqual( Stem("bármely"), "bármely");});
test("bármelyik -> bármely", function() {deepEqual( Stem("bármelyik"), "bármely");});
test("bármelyiket -> bármely", function() {deepEqual( Stem("bármelyiket"), "bármely");});
test("bármelyikkel -> bármely", function() {deepEqual( Stem("bármelyikkel"), "bármely");});
test("bármelyikének -> bármely", function() {deepEqual( Stem("bármelyikének"), "bármely");});
test("bármelyikét -> bármely", function() {deepEqual( Stem("bármelyikét"), "bármely");});
test("bármelyikük -> bármely", function() {deepEqual( Stem("bármelyikük"), "bármely");});
test("bármelyikükkel -> bármely", function() {deepEqual( Stem("bármelyikükkel"), "bármely");});
test("bármennyire -> bármenny", function() {deepEqual( Stem("bármennyire"), "bármenny");});
test("bármennyit -> bármenny", function() {deepEqual( Stem("bármennyit"), "bármenny");});
test("bármerre -> bármer", function() {deepEqual( Stem("bármerre"), "bármer");});
test("bármi -> bárm", function() {deepEqual( Stem("bármi"), "bárm");});
test("bármibe -> bárm", function() {deepEqual( Stem("bármibe"), "bárm");});
test("bármiben -> bárm", function() {deepEqual( Stem("bármiben"), "bárm");});
test("bármihez -> bárm", function() {deepEqual( Stem("bármihez"), "bárm");});
test("bármikor -> bárm", function() {deepEqual( Stem("bármikor"), "bárm");});
test("bármiképpen -> bárm", function() {deepEqual( Stem("bármiképpen"), "bárm");});
test("bármin -> bárm", function() {deepEqual( Stem("bármin"), "bárm");});
test("bármire -> bárm", function() {deepEqual( Stem("bármire"), "bárm");});
test("bármiről -> bárm", function() {deepEqual( Stem("bármiről"), "bárm");});
test("bármit -> bárm", function() {deepEqual( Stem("bármit"), "bárm");});
test("bármivel -> bárm", function() {deepEqual( Stem("bármivel"), "bárm");});
test("bármié -> bárm", function() {deepEqual( Stem("bármié"), "bárm");});
test("bármiféle -> bármifél", function() {deepEqual( Stem("bármiféle"), "bármifél");});
test("bármikori -> bármikor", function() {deepEqual( Stem("bármikori"), "bármikor");});
test("bármily -> bármily", function() {deepEqual( Stem("bármily"), "bármily");});
test("bármilyen -> bármily", function() {deepEqual( Stem("bármilyen"), "bármily");});
test("bárpult -> bárpul", function() {deepEqual( Stem("bárpult"), "bárpul");});
test("bársonymalomi -> bársonymalom", function() {deepEqual( Stem("bársonymalomi"), "bársonymalom");});
test("bársonyon -> bársony", function() {deepEqual( Stem("bársonyon"), "bársony");});
test("bársonyos -> bársonyos", function() {deepEqual( Stem("bársonyos"), "bársonyos");});
test("bársonyszékbe -> bársonysze", function() {deepEqual( Stem("bársonyszékbe"), "bársonysze");});
test("bársonyujjast -> bársonyujjas", function() {deepEqual( Stem("bársonyujjast"), "bársonyujjas");});
test("bárszekrény -> bárszekrény", function() {deepEqual( Stem("bárszekrény"), "bárszekrény");});
test("bárányexport -> bárányexpor", function() {deepEqual( Stem("bárányexport"), "bárányexpor");});
test("bárányfelhők -> bárányfelhő", function() {deepEqual( Stem("bárányfelhők"), "bárányfelhő");});
test("bárányhimlőben -> bárányhimlő", function() {deepEqual( Stem("bárányhimlőben"), "bárányhimlő");});
test("báránykái -> bárányka", function() {deepEqual( Stem("báránykái"), "bárányka");});
test("bárányok -> bárány", function() {deepEqual( Stem("bárányok"), "bárány");});
test("bárányokat -> bárány", function() {deepEqual( Stem("bárányokat"), "bárány");});
test("bárányt -> bárány", function() {deepEqual( Stem("bárányt"), "bárány");});
test("báránysült -> báránysül", function() {deepEqual( Stem("báránysült"), "báránysül");});
test("bástyáiként -> bástya", function() {deepEqual( Stem("bástyáiként"), "bástya");});
test("bástyákat -> bástya", function() {deepEqual( Stem("bástyákat"), "bástya");});
test("bátor -> bátor", function() {deepEqual( Stem("bátor"), "bátor");});
test("bátorrá -> bátor", function() {deepEqual( Stem("bátorrá"), "bátor");});
test("bátran -> bátr", function() {deepEqual( Stem("bátran"), "bátr");});
test("bátorságpróba -> bátorságpró", function() {deepEqual( Stem("bátorságpróba"), "bátorságpró");});
test("bátorságpróbát -> bátorságprób", function() {deepEqual( Stem("bátorságpróbát"), "bátorságprób");});
test("bátorság -> bátorság", function() {deepEqual( Stem("bátorság"), "bátorság");});
test("bátorsága -> bátorság", function() {deepEqual( Stem("bátorsága"), "bátorság");});
test("bátorsággal -> bátorság", function() {deepEqual( Stem("bátorsággal"), "bátorság");});
test("bátorságon -> bátorság", function() {deepEqual( Stem("bátorságon"), "bátorság");});
test("bátorságot -> bátorság", function() {deepEqual( Stem("bátorságot"), "bátorság");});
test("bátorságra -> bátorság", function() {deepEqual( Stem("bátorságra"), "bátorság");});
test("bátorságról -> bátorság", function() {deepEqual( Stem("bátorságról"), "bátorság");});
test("bátorságuk -> bátorság", function() {deepEqual( Stem("bátorságuk"), "bátorság");});
test("bátorságukat -> bátorság", function() {deepEqual( Stem("bátorságukat"), "bátorság");});
test("bátorságához -> bátorság", function() {deepEqual( Stem("bátorságához"), "bátorság");});
test("bátortalan -> bátortal", function() {deepEqual( Stem("bátortalan"), "bátortal");});
test("bátortalanul -> bátortalan", function() {deepEqual( Stem("bátortalanul"), "bátortalan");});
test("bátorítja -> bátorít", function() {deepEqual( Stem("bátorítja"), "bátorít");});
test("bátorítják -> bátorítja", function() {deepEqual( Stem("bátorítják"), "bátorítja");});
test("bátorítod -> bátorít", function() {deepEqual( Stem("bátorítod"), "bátorít");});
test("bátorítson -> bátoríts", function() {deepEqual( Stem("bátorítson"), "bátoríts");});
test("bátorítva -> bátorítv", function() {deepEqual( Stem("bátorítva"), "bátorítv");});
test("bátorításban -> bátorítás", function() {deepEqual( Stem("bátorításban"), "bátorítás");});
test("bátorítást -> bátorítás", function() {deepEqual( Stem("bátorítást"), "bátorítás");});
test("bátorításért -> bátorítás", function() {deepEqual( Stem("bátorításért"), "bátorítás");});
test("bátorító -> bátorító", function() {deepEqual( Stem("bátorító"), "bátorító");});
test("bátorítóan -> bátorító", function() {deepEqual( Stem("bátorítóan"), "bátorító");});
test("bátrabbak -> bátrabb", function() {deepEqual( Stem("bátrabbak"), "bátrabb");});
test("bátrabbnak -> bátrabb", function() {deepEqual( Stem("bátrabbnak"), "bátrabb");});
test("bátyja -> báty", function() {deepEqual( Stem("bátyja"), "báty");});
test("bátyjának -> báty", function() {deepEqual( Stem("bátyjának"), "báty");});
test("bátyjának -> báty", function() {deepEqual( Stem("bátyjának"), "báty");});
test("bátyját -> báty", function() {deepEqual( Stem("bátyját"), "báty");});
test("bátyjával -> báty", function() {deepEqual( Stem("bátyjával"), "báty");});
test("bátyádnak -> bátya", function() {deepEqual( Stem("bátyádnak"), "bátya");});
test("bátyáim -> bátya", function() {deepEqual( Stem("bátyáim"), "bátya");});
test("bátyámat -> bátya", function() {deepEqual( Stem("bátyámat"), "bátya");});
test("bátyámmal -> bátya", function() {deepEqual( Stem("bátyámmal"), "bátya");});
test("bátyámnak -> bátya", function() {deepEqual( Stem("bátyámnak"), "bátya");});
test("bátyámra -> bátya", function() {deepEqual( Stem("bátyámra"), "bátya");});
test("bátyámék -> bátyáme", function() {deepEqual( Stem("bátyámék"), "bátyáme");});
test("bátyámékhoz -> bátyáme", function() {deepEqual( Stem("bátyámékhoz"), "bátyáme");});
test("bátyámuram -> bátyámur", function() {deepEqual( Stem("bátyámuram"), "bátyámur");});
test("báványai -> bávány", function() {deepEqual( Stem("báványai"), "bávány");});
test("bázeli -> bázel", function() {deepEqual( Stem("bázeli"), "bázel");});
test("bázis -> bázis", function() {deepEqual( Stem("bázis"), "bázis");});
test("bázisa -> bázis", function() {deepEqual( Stem("bázisa"), "bázis");});
test("bázisaikra -> bázis", function() {deepEqual( Stem("bázisaikra"), "bázis");});
test("bázisain -> bázis", function() {deepEqual( Stem("bázisain"), "bázis");});
test("bázisnak -> bázis", function() {deepEqual( Stem("bázisnak"), "bázis");});
test("bázisokat -> bázis", function() {deepEqual( Stem("bázisokat"), "bázis");});
test("bázisra -> bázis", function() {deepEqual( Stem("bázisra"), "bázis");});
test("bázist -> bázis", function() {deepEqual( Stem("bázist"), "bázis");});
test("bázisul -> bázis", function() {deepEqual( Stem("bázisul"), "bázis");});
test("bázisunk -> bázis", function() {deepEqual( Stem("bázisunk"), "bázis");});
test("bázisának -> bázis", function() {deepEqual( Stem("bázisának"), "bázis");});
test("bázisát -> bázis", function() {deepEqual( Stem("bázisát"), "bázis");});
test("bázisától -> bázis", function() {deepEqual( Stem("bázisától"), "bázis");});
test("bázisgyűrűre -> bázisgyűrű", function() {deepEqual( Stem("bázisgyűrűre"), "bázisgyűrű");});
test("bázispontot -> bázispont", function() {deepEqual( Stem("bázispontot"), "bázispont");});
test("bázisponttal -> bázispon", function() {deepEqual( Stem("bázisponttal"), "bázispon");});
test("bázisállomás -> bázisállomás", function() {deepEqual( Stem("bázisállomás"), "bázisállomás");});
test("bázisállomás-vezérlőben -> bázisállomás-vezérlő", function() {deepEqual( Stem("bázisállomás-vezérlőben"), "bázisállomás-vezérlő");});
test("bázisállomásokon -> bázisállomás", function() {deepEqual( Stem("bázisállomásokon"), "bázisállomás");});
test("báék -> báe", function() {deepEqual( Stem("báék"), "báe");});
test("bécsi -> bécs", function() {deepEqual( Stem("bécsi"), "bécs");});
test("bég -> bég", function() {deepEqual( Stem("bég"), "bég");});
test("bégető -> bégető", function() {deepEqual( Stem("bégető"), "bégető");});
test("békaarcú -> békaarcú", function() {deepEqual( Stem("békaarcú"), "békaarcú");});
test("békaeledel -> békaeledel", function() {deepEqual( Stem("békaeledel"), "békaeledel");});
test("békavadászatra -> békavadászat", function() {deepEqual( Stem("békavadászatra"), "békavadászat");});
test("békebírónak -> békebíró", function() {deepEqual( Stem("békebírónak"), "békebíró");});
test("békefenntartó -> békefenntartó", function() {deepEqual( Stem("békefenntartó"), "békefenntartó");});
test("békefenntartók -> békefenntartó", function() {deepEqual( Stem("békefenntartók"), "békefenntartó");});
test("békegalambot -> békegalamb", function() {deepEqual( Stem("békegalambot"), "békegalamb");});
test("békehirdetés -> békehirdetés", function() {deepEqual( Stem("békehirdetés"), "békehirdetés");});
test("békeidőkig -> békeidő", function() {deepEqual( Stem("békeidőkig"), "békeidő");});
test("békeidőszak -> békeidősz", function() {deepEqual( Stem("békeidőszak"), "békeidősz");});
test("békekötésre -> békekötés", function() {deepEqual( Stem("békekötésre"), "békekötés");});
test("békekötést -> békekötés", function() {deepEqual( Stem("békekötést"), "békekötés");});
test("békemegállapodás -> békemegállapodás", function() {deepEqual( Stem("békemegállapodás"), "békemegállapodás");});
test("békemegállapodást -> békemegállapodás", function() {deepEqual( Stem("békemegállapodást"), "békemegállapodás");});
test("békességben -> békesség", function() {deepEqual( Stem("békességben"), "békesség");});
test("béketeremtés -> béketeremtés", function() {deepEqual( Stem("béketeremtés"), "béketeremtés");});
test("béketárgyalásokon -> béketárgyalás", function() {deepEqual( Stem("béketárgyalásokon"), "béketárgyalás");});
test("béketűrésből -> béketűrés", function() {deepEqual( Stem("béketűrésből"), "béketűrés");});
test("béketűrő -> béketűrő", function() {deepEqual( Stem("béketűrő"), "béketűrő");});
test("békevilágnap -> békevilágnap", function() {deepEqual( Stem("békevilágnap"), "békevilágnap");});
test("béklyót -> béklyó", function() {deepEqual( Stem("béklyót"), "béklyó");});
test("békák -> béka", function() {deepEqual( Stem("békák"), "béka");});
test("békákat -> béka", function() {deepEqual( Stem("békákat"), "béka");});
test("békében -> bék", function() {deepEqual( Stem("békében"), "bék");});
test("békéhez -> bék", function() {deepEqual( Stem("békéhez"), "bék");});
test("békéjét -> béké", function() {deepEqual( Stem("békéjét"), "béké");});
test("békén -> bék", function() {deepEqual( Stem("békén"), "bék");});
test("békéről -> bék", function() {deepEqual( Stem("békéről"), "bék");});
test("békét -> bék", function() {deepEqual( Stem("békét"), "bék");});
test("békével -> bék", function() {deepEqual( Stem("békével"), "bék");});
test("béke -> bék", function() {deepEqual( Stem("béke"), "bék");});
test("békéltetés -> békéltetés", function() {deepEqual( Stem("békéltetés"), "békéltetés");});
test("békés -> békés", function() {deepEqual( Stem("békés"), "békés");});
test("békések -> békés", function() {deepEqual( Stem("békések"), "békés");});
test("békésen -> békés", function() {deepEqual( Stem("békésen"), "békés");});
test("békétlen -> békétl", function() {deepEqual( Stem("békétlen"), "békétl");});
test("békülnek -> békül", function() {deepEqual( Stem("békülnek"), "békül");});
test("bélelték -> bélelte", function() {deepEqual( Stem("bélelték"), "bélelte");});
test("belünk -> bel", function() {deepEqual( Stem("belünk"), "bel");});
test("belei -> bel", function() {deepEqual( Stem("belei"), "bel");});
test("beleibe -> bel", function() {deepEqual( Stem("beleibe"), "bel");});
test("beleiben -> bel", function() {deepEqual( Stem("beleiben"), "bel");});
test("beleit -> bel", function() {deepEqual( Stem("beleit"), "bel");});
test("belet -> bel", function() {deepEqual( Stem("belet"), "bel");});
test("bélrák -> bélra", function() {deepEqual( Stem("bélrák"), "bélra");});
test("bélszín -> bélszí", function() {deepEqual( Stem("bélszín"), "bélszí");});
test("bélyegekről -> bélyeg", function() {deepEqual( Stem("bélyegekről"), "bélyeg");});
test("bélyegét -> bélyeg", function() {deepEqual( Stem("bélyegét"), "bélyeg");});
test("bélyegezni -> bélyegezn", function() {deepEqual( Stem("bélyegezni"), "bélyegezn");});
test("bélyeggyűjtő -> bélyeggyűjtő", function() {deepEqual( Stem("bélyeggyűjtő"), "bélyeggyűjtő");});
test("bélátfúródása -> bélátfúródás", function() {deepEqual( Stem("bélátfúródása"), "bélátfúródás");});
test("bélés -> bélés", function() {deepEqual( Stem("bélés"), "bélés");});
test("bélésanyagot -> bélésanyag", function() {deepEqual( Stem("bélésanyagot"), "bélésanyag");});
test("bénaságba -> bénaság", function() {deepEqual( Stem("bénaságba"), "bénaság");});
test("béna -> bén", function() {deepEqual( Stem("béna"), "bén");});
test("bénának -> bén", function() {deepEqual( Stem("bénának"), "bén");});
test("bénázásból -> bénázás", function() {deepEqual( Stem("bénázásból"), "bénázás");});
test("béníthatják -> béníthatja", function() {deepEqual( Stem("béníthatják"), "béníthatja");});
test("bénítja -> bénít", function() {deepEqual( Stem("bénítja"), "bénít");});
test("bénította -> bénított", function() {deepEqual( Stem("bénította"), "bénított");});
test("bénítóan -> bénító", function() {deepEqual( Stem("bénítóan"), "bénító");});
test("béralku -> béralku", function() {deepEqual( Stem("béralku"), "béralku");});
test("bér -> bér", function() {deepEqual( Stem("bér"), "bér");});
test("bérbe -> bér", function() {deepEqual( Stem("bérbe"), "bér");});
test("bére -> bé", function() {deepEqual( Stem("bére"), "bé");});
test("bérek -> bér", function() {deepEqual( Stem("bérek"), "bér");});
test("béreket -> bér", function() {deepEqual( Stem("béreket"), "bér");});
test("bérekre -> bér", function() {deepEqual( Stem("bérekre"), "bér");});
test("bért -> bért", function() {deepEqual( Stem("bért"), "bért");});
test("bérért -> bér", function() {deepEqual( Stem("bérért"), "bér");});
test("bérét -> bér", function() {deepEqual( Stem("bérét"), "bér");});
test("bérük -> bér", function() {deepEqual( Stem("bérük"), "bér");});
test("bérbeadott -> bérbeadot", function() {deepEqual( Stem("bérbeadott"), "bérbeadot");});
test("bérbeadási -> bérbeadás", function() {deepEqual( Stem("bérbeadási"), "bérbeadás");});
test("bérbeadás -> bérbeadás", function() {deepEqual( Stem("bérbeadás"), "bérbeadás");});
test("bérbeadása -> bérbeadás", function() {deepEqual( Stem("bérbeadása"), "bérbeadás");});
test("bérbeadásból -> bérbeadás", function() {deepEqual( Stem("bérbeadásból"), "bérbeadás");});
test("bérbeadáshoz -> bérbeadás", function() {deepEqual( Stem("bérbeadáshoz"), "bérbeadás");});
test("bérbeadással -> bérbeadás", function() {deepEqual( Stem("bérbeadással"), "bérbeadás");});
test("bérbeadásához -> bérbeadás", function() {deepEqual( Stem("bérbeadásához"), "bérbeadás");});
test("bérbeadásának -> bérbeadás", function() {deepEqual( Stem("bérbeadásának"), "bérbeadás");});
test("bérbeadásánál -> bérbeadás", function() {deepEqual( Stem("bérbeadásánál"), "bérbeadás");});
test("bérbeadására -> bérbeadás", function() {deepEqual( Stem("bérbeadására"), "bérbeadás");});
test("bérbeadásáról -> bérbeadás", function() {deepEqual( Stem("bérbeadásáról"), "bérbeadás");});
test("bérbeadását -> bérbeadás", function() {deepEqual( Stem("bérbeadását"), "bérbeadás");});
test("bérbeadásával -> bérbeadás", function() {deepEqual( Stem("bérbeadásával"), "bérbeadás");});
test("bérbeadónál -> bérbeadó", function() {deepEqual( Stem("bérbeadónál"), "bérbeadó");});
test("bércei -> bérc", function() {deepEqual( Stem("bércei"), "bérc");});
test("bércsökkenés -> bércsökkenés", function() {deepEqual( Stem("bércsökkenés"), "bércsökkenés");});
test("bérelhetik -> bérelhet", function() {deepEqual( Stem("bérelhetik"), "bérelhet");});
test("bérelhetők -> bérelhető", function() {deepEqual( Stem("bérelhetők"), "bérelhető");});
test("bérel -> bérel", function() {deepEqual( Stem("bérel"), "bérel");});
test("bérelnek -> bérel", function() {deepEqual( Stem("bérelnek"), "bérel");});
test("bérelni -> béreln", function() {deepEqual( Stem("bérelni"), "béreln");});
test("bérelnie -> béreln", function() {deepEqual( Stem("bérelnie"), "béreln");});
test("bérelte -> bérelt", function() {deepEqual( Stem("bérelte"), "bérelt");});
test("béreltünk -> bérelt", function() {deepEqual( Stem("béreltünk"), "bérelt");});
test("bérelünk -> bérel", function() {deepEqual( Stem("bérelünk"), "bérel");});
test("bérelt -> bérel", function() {deepEqual( Stem("bérelt"), "bérel");});
test("béreltek -> bérelt", function() {deepEqual( Stem("béreltek"), "bérelt");});
test("béremelkedés -> béremelkedés", function() {deepEqual( Stem("béremelkedés"), "béremelkedés");});
test("béremelkedésnek -> béremelkedés", function() {deepEqual( Stem("béremelkedésnek"), "béremelkedés");});
test("béremelés -> béremelés", function() {deepEqual( Stem("béremelés"), "béremelés");});
test("béremelésben -> béremelés", function() {deepEqual( Stem("béremelésben"), "béremelés");});
test("béremelésre -> béremelés", function() {deepEqual( Stem("béremelésre"), "béremelés");});
test("béremelést -> béremelés", function() {deepEqual( Stem("béremelést"), "béremelés");});
test("béremelésért -> béremelés", function() {deepEqual( Stem("béremelésért"), "béremelés");});
test("bérezése -> bérezés", function() {deepEqual( Stem("bérezése"), "bérezés");});
test("bérezési -> bérezés", function() {deepEqual( Stem("bérezési"), "bérezés");});
test("bérfejlesztés -> bérfejlesztés", function() {deepEqual( Stem("bérfejlesztés"), "bérfejlesztés");});
test("bérfejlesztése -> bérfejlesztés", function() {deepEqual( Stem("bérfejlesztése"), "bérfejlesztés");});
test("bérfejlesztést -> bérfejlesztés", function() {deepEqual( Stem("bérfejlesztést"), "bérfejlesztés");});
test("bérfejlesztési -> bérfejlesztés", function() {deepEqual( Stem("bérfejlesztési"), "bérfejlesztés");});
test("bérgyilkos -> bérgyilkos", function() {deepEqual( Stem("bérgyilkos"), "bérgyilkos");});
test("bérgyártója -> bérgyártó", function() {deepEqual( Stem("bérgyártója"), "bérgyártó");});
test("bérharcos -> bérharcos", function() {deepEqual( Stem("bérharcos"), "bérharcos");});
test("bérhelyzetét -> bérhelyzet", function() {deepEqual( Stem("bérhelyzetét"), "bérhelyzet");});
test("bérházban -> bérház", function() {deepEqual( Stem("bérházban"), "bérház");});
test("bérkeretből -> bérkeret", function() {deepEqual( Stem("bérkeretből"), "bérkeret");});
test("bérkilövők -> bérkilövő", function() {deepEqual( Stem("bérkilövők"), "bérkilövő");});
test("bérkocsit -> bérkocs", function() {deepEqual( Stem("bérkocsit"), "bérkocs");});
test("bérköltségek -> bérköltség", function() {deepEqual( Stem("bérköltségek"), "bérköltség");});
test("bérköltségére -> bérköltség", function() {deepEqual( Stem("bérköltségére"), "bérköltség");});
test("bérlakás -> bérlakás", function() {deepEqual( Stem("bérlakás"), "bérlakás");});
test("bérlakások -> bérlakás", function() {deepEqual( Stem("bérlakások"), "bérlakás");});
test("bérlakásszektort -> bérlakásszektor", function() {deepEqual( Stem("bérlakásszektort"), "bérlakásszektor");});
test("bérlet -> bérl", function() {deepEqual( Stem("bérlet"), "bérl");});
test("bérleteket -> bérlet", function() {deepEqual( Stem("bérleteket"), "bérlet");});
test("bérletem -> bérlet", function() {deepEqual( Stem("bérletem"), "bérlet");});
test("bérleten -> bérlet", function() {deepEqual( Stem("bérleten"), "bérlet");});
test("bérletet -> bérlet", function() {deepEqual( Stem("bérletet"), "bérlet");});
test("bérlethez -> bérlet", function() {deepEqual( Stem("bérlethez"), "bérlet");});
test("bérletét -> bérlet", function() {deepEqual( Stem("bérletét"), "bérlet");});
test("bérleti -> bérlet", function() {deepEqual( Stem("bérleti"), "bérlet");});
test("bérletidíj-emelésről -> bérletidíj-emelés", function() {deepEqual( Stem("bérletidíj-emelésről"), "bérletidíj-emelés");});
test("bérletvásárlásnál -> bérletvásárlás", function() {deepEqual( Stem("bérletvásárlásnál"), "bérletvásárlás");});
test("bérlik -> bérl", function() {deepEqual( Stem("bérlik"), "bérl");});
test("bérlése -> bérlés", function() {deepEqual( Stem("bérlése"), "bérlés");});
test("bérlésére -> bérlés", function() {deepEqual( Stem("bérlésére"), "bérlés");});
test("bérlő -> bérlő", function() {deepEqual( Stem("bérlő"), "bérlő");});
test("bérlők -> bérlő", function() {deepEqual( Stem("bérlők"), "bérlő");});
test("bérmaruhás -> bérmaruhás", function() {deepEqual( Stem("bérmaruhás"), "bérmaruhás");});
test("bérmunkában -> bérmun", function() {deepEqual( Stem("bérmunkában"), "bérmun");});
test("bérmunkássá -> bérmunkás", function() {deepEqual( Stem("bérmunkássá"), "bérmunkás");});
test("bérmálkozhattunk -> bérmálkozhatt", function() {deepEqual( Stem("bérmálkozhattunk"), "bérmálkozhatt");});
test("bérmálkozás -> bérmálkozás", function() {deepEqual( Stem("bérmálkozás"), "bérmálkozás");});
test("bérmálkozó -> bérmálkozó", function() {deepEqual( Stem("bérmálkozó"), "bérmálkozó");});
test("bérnyilatkozatot -> bérnyilatkozat", function() {deepEqual( Stem("bérnyilatkozatot"), "bérnyilatkozat");});
test("bérnövekedése -> bérnövekedés", function() {deepEqual( Stem("bérnövekedése"), "bérnövekedés");});
test("bérnövekedéssel -> bérnövekedés", function() {deepEqual( Stem("bérnövekedéssel"), "bérnövekedés");});
test("bérnövekedést -> bérnövekedés", function() {deepEqual( Stem("bérnövekedést"), "bérnövekedés");});
test("bérrendszerbeli -> bérrendszerbel", function() {deepEqual( Stem("bérrendszerbeli"), "bérrendszerbel");});
test("bérszínvonal-különbségét -> bérszínvonal-különbség", function() {deepEqual( Stem("bérszínvonal-különbségét"), "bérszínvonal-különbség");});
test("bértáblát -> bértábl", function() {deepEqual( Stem("bértáblát"), "bértábl");});
test("bértárgyalások -> bértárgyalás", function() {deepEqual( Stem("bértárgyalások"), "bértárgyalás");});
test("bértárgyalásokhoz -> bértárgyalás", function() {deepEqual( Stem("bértárgyalásokhoz"), "bértárgyalás");});
test("béta -> bét", function() {deepEqual( Stem("béta"), "bét");});
test("béta-tesztje -> béta-teszt", function() {deepEqual( Stem("béta-tesztje"), "béta-teszt");});
test("béta-verzió -> béta-verzió", function() {deepEqual( Stem("béta-verzió"), "béta-verzió");});
test("béta-verziója -> béta-verzió", function() {deepEqual( Stem("béta-verziója"), "béta-verzió");});
test("béta-verziójának -> béta-verzió", function() {deepEqual( Stem("béta-verziójának"), "béta-verzió");});
test("béta-változata -> béta-változat", function() {deepEqual( Stem("béta-változata"), "béta-változat");});
test("béta-változatot -> béta-változat", function() {deepEqual( Stem("béta-változatot"), "béta-változat");});
test("béta-változatát -> béta-változat", function() {deepEqual( Stem("béta-változatát"), "béta-változat");});
test("bévül -> bév", function() {deepEqual( Stem("bévül"), "bév");});
test("bíbelődött -> bíbelődöt", function() {deepEqual( Stem("bíbelődött"), "bíbelődöt");});
test("bíbor -> bíbor", function() {deepEqual( Stem("bíbor"), "bíbor");});
test("bíborszínű -> bíborszínű", function() {deepEqual( Stem("bíborszínű"), "bíborszínű");});
test("bíborvörösek -> bíborvörös", function() {deepEqual( Stem("bíborvörösek"), "bíborvörös");});
test("bírhat -> bírh", function() {deepEqual( Stem("bírhat"), "bírh");});
test("bírhatná -> bírhatna", function() {deepEqual( Stem("bírhatná"), "bírhatna");});
test("bír -> bír", function() {deepEqual( Stem("bír"), "bír");});
test("bírja -> bír", function() {deepEqual( Stem("bírja"), "bír");});
test("bírjam -> bírj", function() {deepEqual( Stem("bírjam"), "bírj");});
test("bírnak -> bír", function() {deepEqual( Stem("bírnak"), "bír");});
test("bírni -> bírn", function() {deepEqual( Stem("bírni"), "bírn");});
test("bírniuk -> bírn", function() {deepEqual( Stem("bírniuk"), "bírn");});
test("bírnunk -> bírn", function() {deepEqual( Stem("bírnunk"), "bírn");});
test("bírná -> bírna", function() {deepEqual( Stem("bírná"), "bírna");});
test("bírnám -> bírna", function() {deepEqual( Stem("bírnám"), "bírna");});
test("bírnának -> bírn", function() {deepEqual( Stem("bírnának"), "bírn");});
test("bírnék -> bírne", function() {deepEqual( Stem("bírnék"), "bírne");});
test("bírod -> bír", function() {deepEqual( Stem("bírod"), "bír");});
test("bírok -> bír", function() {deepEqual( Stem("bírok"), "bír");});
test("bírom -> bír", function() {deepEqual( Stem("bírom"), "bír");});
test("bírta -> bírt", function() {deepEqual( Stem("bírta"), "bírt");});
test("bírtam -> bírt", function() {deepEqual( Stem("bírtam"), "bírt");});
test("bírtuk -> bírt", function() {deepEqual( Stem("bírtuk"), "bírt");});
test("bírtunk -> bírt", function() {deepEqual( Stem("bírtunk"), "bírt");});
test("bírták -> bírta", function() {deepEqual( Stem("bírták"), "bírta");});
test("bírunk -> bír", function() {deepEqual( Stem("bírunk"), "bír");});
test("bírság -> bírság", function() {deepEqual( Stem("bírság"), "bírság");});
test("bírságon -> bírság", function() {deepEqual( Stem("bírságon"), "bírság");});
test("bírságot -> bírság", function() {deepEqual( Stem("bírságot"), "bírság");});
test("bírt -> bír", function() {deepEqual( Stem("bírt"), "bír");});
test("bírái -> bíra", function() {deepEqual( Stem("bírái"), "bíra");});
test("bíráin -> bíra", function() {deepEqual( Stem("bíráin"), "bíra");});
test("bírájával -> bírá", function() {deepEqual( Stem("bírájával"), "bírá");});
test("bírák -> bíra", function() {deepEqual( Stem("bírák"), "bíra");});
test("bírákról -> bíra", function() {deepEqual( Stem("bírákról"), "bíra");});
test("bírójának -> bíró", function() {deepEqual( Stem("bírójának"), "bíró");});
test("bírók -> bíró", function() {deepEqual( Stem("bírók"), "bíró");});
test("bírónak -> bíró", function() {deepEqual( Stem("bírónak"), "bíró");});
test("bíró -> bíró", function() {deepEqual( Stem("bíró"), "bíró");});
test("bírót -> bíró", function() {deepEqual( Stem("bírót"), "bíró");});
test("bírálati -> bírálat", function() {deepEqual( Stem("bírálati"), "bírálat");});
test("bírálat -> bírál", function() {deepEqual( Stem("bírálat"), "bírál");});
test("bírálata -> bírálat", function() {deepEqual( Stem("bírálata"), "bírálat");});
test("bírálatból -> bírálat", function() {deepEqual( Stem("bírálatból"), "bírálat");});
test("bírálatnál -> bírálat", function() {deepEqual( Stem("bírálatnál"), "bírálat");});
test("bírálatok -> bírálat", function() {deepEqual( Stem("bírálatok"), "bírálat");});
test("bírálatokat -> bírálat", function() {deepEqual( Stem("bírálatokat"), "bírálat");});
test("bírálatában -> bírálat", function() {deepEqual( Stem("bírálatában"), "bírálat");});
test("bírálatára -> bírálat", function() {deepEqual( Stem("bírálatára"), "bírálat");});
test("bírálatözön -> bírálatöz", function() {deepEqual( Stem("bírálatözön"), "bírálatöz");});
test("bírálja -> bírál", function() {deepEqual( Stem("bírálja"), "bírál");});
test("bírálják -> bírálja", function() {deepEqual( Stem("bírálják"), "bírálja");});
test("bírálni -> bíráln", function() {deepEqual( Stem("bírálni"), "bíráln");});
test("bírálta -> bírált", function() {deepEqual( Stem("bírálta"), "bírált");});
test("bíráltak -> bírált", function() {deepEqual( Stem("bíráltak"), "bírált");});
test("bírálták -> bírálta", function() {deepEqual( Stem("bírálták"), "bírálta");});
test("bírált -> bírál", function() {deepEqual( Stem("bírált"), "bírál");});
test("bíráló -> bíráló", function() {deepEqual( Stem("bíráló"), "bíráló");});
test("bírálóbizottság -> bírálóbizottság", function() {deepEqual( Stem("bírálóbizottság"), "bírálóbizottság");});
test("bírálói -> bíráló", function() {deepEqual( Stem("bírálói"), "bíráló");});
test("bírás -> bírás", function() {deepEqual( Stem("bírás"), "bírás");});
test("bírói -> bíró", function() {deepEqual( Stem("bírói"), "bíró");});
test("bíróilag -> bíróilag", function() {deepEqual( Stem("bíróilag"), "bíróilag");});
test("bíróküldéssel -> bíróküldés", function() {deepEqual( Stem("bíróküldéssel"), "bíróküldés");});
test("bírósági -> bíróság", function() {deepEqual( Stem("bírósági"), "bíróság");});
test("bíróság -> bíróság", function() {deepEqual( Stem("bíróság"), "bíróság");});
test("bírósággal -> bíróság", function() {deepEqual( Stem("bírósággal"), "bíróság");});
test("bírósághoz -> bíróság", function() {deepEqual( Stem("bírósághoz"), "bíróság");});
test("bíróságig -> bíróság", function() {deepEqual( Stem("bíróságig"), "bíróság");});
test("bíróságnak -> bíróság", function() {deepEqual( Stem("bíróságnak"), "bíróság");});
test("bíróságnál -> bíróság", function() {deepEqual( Stem("bíróságnál"), "bíróság");});
test("bíróságok -> bíróság", function() {deepEqual( Stem("bíróságok"), "bíróság");});
test("bíróságokat -> bíróság", function() {deepEqual( Stem("bíróságokat"), "bíróság");});
test("bíróságokkal -> bíróság", function() {deepEqual( Stem("bíróságokkal"), "bíróság");});
test("bíróságon -> bíróság", function() {deepEqual( Stem("bíróságon"), "bíróság");});
test("bíróságot -> bíróság", function() {deepEqual( Stem("bíróságot"), "bíróság");});
test("bíróságtól -> bíróság", function() {deepEqual( Stem("bíróságtól"), "bíróság");});
test("bírótársai -> bírótárs", function() {deepEqual( Stem("bírótársai"), "bírótárs");});
test("bíszhat -> bíszh", function() {deepEqual( Stem("bíszhat"), "bíszh");});
test("bízhat -> bízh", function() {deepEqual( Stem("bízhat"), "bízh");});
test("bízhatnak -> bízhat", function() {deepEqual( Stem("bízhatnak"), "bízhat");});
test("bízhattak -> bízhatt", function() {deepEqual( Stem("bízhattak"), "bízhatt");});
test("bízhatták -> bízhatta", function() {deepEqual( Stem("bízhatták"), "bízhatta");});
test("bíz -> bíz", function() {deepEqual( Stem("bíz"), "bíz");});
test("bízik -> bíz", function() {deepEqual( Stem("bízik"), "bíz");});
test("bíznak -> bíz", function() {deepEqual( Stem("bíznak"), "bíz");});
test("bízni -> bízn", function() {deepEqual( Stem("bízni"), "bízn");});
test("bízniuk -> bízn", function() {deepEqual( Stem("bízniuk"), "bízn");});
test("bíznom -> bízn", function() {deepEqual( Stem("bíznom"), "bízn");});
test("bíznunk -> bízn", function() {deepEqual( Stem("bíznunk"), "bízn");});
test("bízná -> bízna", function() {deepEqual( Stem("bízná"), "bízna");});
test("bíznának -> bízn", function() {deepEqual( Stem("bíznának"), "bízn");});
test("bíznék -> bízne", function() {deepEqual( Stem("bíznék"), "bízne");});
test("bízom -> bíz", function() {deepEqual( Stem("bízom"), "bíz");});
test("bízta -> bízt", function() {deepEqual( Stem("bízta"), "bízt");});
test("bíztak -> bízt", function() {deepEqual( Stem("bíztak"), "bízt");});
test("bíztak -> bízt", function() {deepEqual( Stem("bíztak"), "bízt");});
test("bíztam -> bízt", function() {deepEqual( Stem("bíztam"), "bízt");});
test("bíztok -> bízt", function() {deepEqual( Stem("bíztok"), "bízt");});
test("bíztuk -> bízt", function() {deepEqual( Stem("bíztuk"), "bízt");});
test("bíztunk -> bízt", function() {deepEqual( Stem("bíztunk"), "bízt");});
test("bíztunk -> bízt", function() {deepEqual( Stem("bíztunk"), "bízt");});
test("bízták -> bízta", function() {deepEqual( Stem("bízták"), "bízta");});
test("bízunk -> bíz", function() {deepEqual( Stem("bízunk"), "bíz");});
test("bízza -> bízz", function() {deepEqual( Stem("bízza"), "bízz");});
test("bízzanak -> bízz", function() {deepEqual( Stem("bízzanak"), "bízz");});
test("bízzon -> bízz", function() {deepEqual( Stem("bízzon"), "bízz");});
test("bízzuk -> bízz", function() {deepEqual( Stem("bízzuk"), "bízz");});
test("bízzunk -> bízz", function() {deepEqual( Stem("bízzunk"), "bízz");});
test("bízzák -> bízza", function() {deepEqual( Stem("bízzák"), "bízza");});
test("bízott -> bízot", function() {deepEqual( Stem("bízott"), "bízot");});
test("bíztatta -> bíztatt", function() {deepEqual( Stem("bíztatta"), "bíztatt");});
test("bíztattuk -> bíztatt", function() {deepEqual( Stem("bíztattuk"), "bíztatt");});
test("bíztatási -> bíztatás", function() {deepEqual( Stem("bíztatási"), "bíztatás");});
test("bíztatására -> bíztatás", function() {deepEqual( Stem("bíztatására"), "bíztatás");});
test("bíztató -> bíztató", function() {deepEqual( Stem("bíztató"), "bíztató");});
test("bízva -> bízv", function() {deepEqual( Stem("bízva"), "bízv");});
test("bízvást -> bízvás", function() {deepEqual( Stem("bízvást"), "bízvás");});
test("bóbiskolt -> bóbiskol", function() {deepEqual( Stem("bóbiskolt"), "bóbiskol");});
test("bóbiskoló -> bóbiskoló", function() {deepEqual( Stem("bóbiskoló"), "bóbiskoló");});
test("bódultan -> bódult", function() {deepEqual( Stem("bódultan"), "bódult");});
test("bódultjai -> bódult", function() {deepEqual( Stem("bódultjai"), "bódult");});
test("bódé -> bó", function() {deepEqual( Stem("bódé"), "bó");});
test("bódéban -> bód", function() {deepEqual( Stem("bódéban"), "bód");});
test("bódéhoz -> bód", function() {deepEqual( Stem("bódéhoz"), "bód");});
test("bódéi -> bó", function() {deepEqual( Stem("bódéi"), "bó");});
test("bódéja -> bódé", function() {deepEqual( Stem("bódéja"), "bódé");});
test("bódék -> bóde", function() {deepEqual( Stem("bódék"), "bóde");});
test("bódét -> bód", function() {deepEqual( Stem("bódét"), "bód");});
test("bódító -> bódító", function() {deepEqual( Stem("bódító"), "bódító");});
test("bódítóan -> bódító", function() {deepEqual( Stem("bódítóan"), "bódító");});
test("bója -> bó", function() {deepEqual( Stem("bója"), "bó");});
test("bóklászni -> bóklászn", function() {deepEqual( Stem("bóklászni"), "bóklászn");});
test("bóklásztam -> bóklászt", function() {deepEqual( Stem("bóklásztam"), "bóklászt");});
test("bókol -> bókol", function() {deepEqual( Stem("bókol"), "bókol");});
test("bókolva -> bókolv", function() {deepEqual( Stem("bókolva"), "bókolv");});
test("bók -> bó", function() {deepEqual( Stem("bók"), "bó");});
test("bókot -> bó", function() {deepEqual( Stem("bókot"), "bó");});
test("bólintanak -> bólint", function() {deepEqual( Stem("bólintanak"), "bólint");});
test("bólintottak -> bólintott", function() {deepEqual( Stem("bólintottak"), "bólintott");});
test("bólintottam -> bólintott", function() {deepEqual( Stem("bólintottam"), "bólintott");});
test("bólintott -> bólintot", function() {deepEqual( Stem("bólintott"), "bólintot");});
test("bólintva -> bólintv", function() {deepEqual( Stem("bólintva"), "bólintv");});
test("bólogatott -> bólogatot", function() {deepEqual( Stem("bólogatott"), "bólogatot");});
test("bólogat -> bólog", function() {deepEqual( Stem("bólogat"), "bólog");});
test("bólogattak -> bólogatt", function() {deepEqual( Stem("bólogattak"), "bólogatt");});
test("bólogattam -> bólogatt", function() {deepEqual( Stem("bólogattam"), "bólogatt");});
test("bólogatva -> bólogatv", function() {deepEqual( Stem("bólogatva"), "bólogatv");});
test("bólogatások -> bólogatás", function() {deepEqual( Stem("bólogatások"), "bólogatás");});
test("bólogatással -> bólogatás", function() {deepEqual( Stem("bólogatással"), "bólogatás");});
test("bótja -> bót", function() {deepEqual( Stem("bótja"), "bót");});
test("bő -> bő", function() {deepEqual( Stem("bő"), "bő");});
test("bőbeszédűsége -> bőbeszédűség", function() {deepEqual( Stem("bőbeszédűsége"), "bőbeszédűség");});
test("bőgőzik -> bőgőz", function() {deepEqual( Stem("bőgőzik"), "bőgőz");});
test("bőkezűen -> bőkezű", function() {deepEqual( Stem("bőkezűen"), "bőkezű");});
test("bőkezűségének -> bőkezűség", function() {deepEqual( Stem("bőkezűségének"), "bőkezűség");});
test("bőr -> bőr", function() {deepEqual( Stem("bőr"), "bőr");});
test("bőrből -> bőr", function() {deepEqual( Stem("bőrből"), "bőr");});
test("bőre -> bő", function() {deepEqual( Stem("bőre"), "bő");});
test("bőrig -> bőr", function() {deepEqual( Stem("bőrig"), "bőr");});
test("bőrnek -> bőr", function() {deepEqual( Stem("bőrnek"), "bőr");});
test("bőrrel -> bőr", function() {deepEqual( Stem("bőrrel"), "bőr");});
test("bőrről -> bőr", function() {deepEqual( Stem("bőrről"), "bőr");});
test("bőrt -> bőr", function() {deepEqual( Stem("bőrt"), "bőr");});
test("bőrébe -> bőr", function() {deepEqual( Stem("bőrébe"), "bőr");});
test("bőröndben -> bőrön", function() {deepEqual( Stem("bőröndben"), "bőrön");});
test("bőröndök -> bőrönd", function() {deepEqual( Stem("bőröndök"), "bőrönd");});
test("bőröndöket -> bőrönd", function() {deepEqual( Stem("bőröndöket"), "bőrönd");});
test("bőröndöt -> bőrön", function() {deepEqual( Stem("bőröndöt"), "bőrön");});
test("bőrözés -> bőrözés", function() {deepEqual( Stem("bőrözés"), "bőrözés");});
test("bőrű -> bőrű", function() {deepEqual( Stem("bőrű"), "bőrű");});
test("bőrülések -> bőrülés", function() {deepEqual( Stem("bőrülések"), "bőrülés");});
test("bőrülésen -> bőrülés", function() {deepEqual( Stem("bőrülésen"), "bőrülés");});
test("bősi -> bős", function() {deepEqual( Stem("bősi"), "bős");});
test("bőség -> bőség", function() {deepEqual( Stem("bőség"), "bőség");});
test("bőségben -> bőség", function() {deepEqual( Stem("bőségben"), "bőség");});
test("bőséggel -> bőség", function() {deepEqual( Stem("bőséggel"), "bőség");});
test("bőséges -> bőséges", function() {deepEqual( Stem("bőséges"), "bőséges");});
test("bővülési -> bővülés", function() {deepEqual( Stem("bővülési"), "bővülés");});
test("bővülésre -> bővülés", function() {deepEqual( Stem("bővülésre"), "bővülés");});
test("bővülése -> bővülés", function() {deepEqual( Stem("bővülése"), "bővülés");});
test("bővülést -> bővülés", function() {deepEqual( Stem("bővülést"), "bővülés");});
test("bővülésének -> bővülés", function() {deepEqual( Stem("bővülésének"), "bővülés");});
test("bővülésétől -> bővülés", function() {deepEqual( Stem("bővülésétől"), "bővülés");});
test("bővülésével -> bővülés", function() {deepEqual( Stem("bővülésével"), "bővülés");});
test("bővülő -> bővülő", function() {deepEqual( Stem("bővülő"), "bővülő");});
test("bögre -> bög", function() {deepEqual( Stem("bögre"), "bög");});
test("bögrét -> bögr", function() {deepEqual( Stem("bögrét"), "bögr");});
test("böjt -> böj", function() {deepEqual( Stem("böjt"), "böj");});
test("bökkenő -> bökkenő", function() {deepEqual( Stem("bökkenő"), "bökkenő");});
test("böknek -> bök", function() {deepEqual( Stem("böknek"), "bök");});
test("bökte -> bökt", function() {deepEqual( Stem("bökte"), "bökt");});
test("bökök -> bök", function() {deepEqual( Stem("bökök"), "bök");});
test("bökött -> bököt", function() {deepEqual( Stem("bökött"), "bököt");});
test("bölcs -> bölcs", function() {deepEqual( Stem("bölcs"), "bölcs");});
test("bölcsebben -> bölcseb", function() {deepEqual( Stem("bölcsebben"), "bölcseb");});
test("bölcsebbet -> bölcsebb", function() {deepEqual( Stem("bölcsebbet"), "bölcsebb");});
test("bölcseinek -> bölcs", function() {deepEqual( Stem("bölcseinek"), "bölcs");});
test("bölcsek -> bölcs", function() {deepEqual( Stem("bölcsek"), "bölcs");});
test("bölcset -> bölcs", function() {deepEqual( Stem("bölcset"), "bölcs");});
test("bölcselkedve -> bölcselkedv", function() {deepEqual( Stem("bölcselkedve"), "bölcselkedv");});
test("bölcsen -> bölcs", function() {deepEqual( Stem("bölcsen"), "bölcs");});
test("bölcsesség -> bölcsesség", function() {deepEqual( Stem("bölcsesség"), "bölcsesség");});
test("bölcsessége -> bölcsesség", function() {deepEqual( Stem("bölcsessége"), "bölcsesség");});
test("bölcsességekkel -> bölcsesség", function() {deepEqual( Stem("bölcsességekkel"), "bölcsesség");});
test("bölcsességet -> bölcsesség", function() {deepEqual( Stem("bölcsességet"), "bölcsesség");});
test("bölcsességnek -> bölcsesség", function() {deepEqual( Stem("bölcsességnek"), "bölcsesség");});
test("bölcsességét -> bölcsesség", function() {deepEqual( Stem("bölcsességét"), "bölcsesség");});
test("bölcsészkart -> bölcsészkar", function() {deepEqual( Stem("bölcsészkart"), "bölcsészkar");});
test("bölcsészkarára -> bölcsészkar", function() {deepEqual( Stem("bölcsészkarára"), "bölcsészkar");});
test("bölcsésznek -> bölcsész", function() {deepEqual( Stem("bölcsésznek"), "bölcsész");});
test("bölcsőbe -> bölcső", function() {deepEqual( Stem("bölcsőbe"), "bölcső");});
test("bölcsőjeként -> bölcső", function() {deepEqual( Stem("bölcsőjeként"), "bölcső");});
test("bölcsőn -> bölcső", function() {deepEqual( Stem("bölcsőn"), "bölcső");});
test("bölcsödébe -> bölcsöd", function() {deepEqual( Stem("bölcsödébe"), "bölcsöd");});
test("bölcsödével -> bölcsöd", function() {deepEqual( Stem("bölcsödével"), "bölcsöd");});
test("bölény -> bölény", function() {deepEqual( Stem("bölény"), "bölény");});
test("bömbölt -> bömböl", function() {deepEqual( Stem("bömbölt"), "bömböl");});
test("bömbölték -> bömbölte", function() {deepEqual( Stem("bömbölték"), "bömbölte");});
test("böngészhetnek -> böngészhet", function() {deepEqual( Stem("böngészhetnek"), "böngészhet");});
test("böngészni -> böngészn", function() {deepEqual( Stem("böngészni"), "böngészn");});
test("böngésztem -> böngészt", function() {deepEqual( Stem("böngésztem"), "böngészt");});
test("böngésző -> böngésző", function() {deepEqual( Stem("böngésző"), "böngésző");});
test("böngészőbe -> böngésző", function() {deepEqual( Stem("böngészőbe"), "böngésző");});
test("böngészőből -> böngésző", function() {deepEqual( Stem("böngészőből"), "böngésző");});
test("börtönbe -> börtön", function() {deepEqual( Stem("börtönbe"), "börtön");});
test("börtönben -> börtön", function() {deepEqual( Stem("börtönben"), "börtön");});
test("börtönből -> börtön", function() {deepEqual( Stem("börtönből"), "börtön");});
test("börtönnel -> bört", function() {deepEqual( Stem("börtönnel"), "bört");});
test("börtönre -> börtön", function() {deepEqual( Stem("börtönre"), "börtön");});
test("börtönt -> börtön", function() {deepEqual( Stem("börtönt"), "börtön");});
test("börtönében -> börtön", function() {deepEqual( Stem("börtönében"), "börtön");});
test("börtönbüntetés -> börtönbüntetés", function() {deepEqual( Stem("börtönbüntetés"), "börtönbüntetés");});
test("börtönbüntetésre -> börtönbüntetés", function() {deepEqual( Stem("börtönbüntetésre"), "börtönbüntetés");});
test("börtönbüntetéssel -> börtönbüntetés", function() {deepEqual( Stem("börtönbüntetéssel"), "börtönbüntetés");});
test("börtönhatóságok -> börtönhatóság", function() {deepEqual( Stem("börtönhatóságok"), "börtönhatóság");});
test("börtönintézményeinek -> börtönintézmény", function() {deepEqual( Stem("börtönintézményeinek"), "börtönintézmény");});
test("börtönlelkész -> börtönlelkész", function() {deepEqual( Stem("börtönlelkész"), "börtönlelkész");});
test("börtönmúzeumban -> börtönmúzeu", function() {deepEqual( Stem("börtönmúzeumban"), "börtönmúzeu");});
test("börtönrendszerek -> börtönrendszer", function() {deepEqual( Stem("börtönrendszerek"), "börtönrendszer");});
test("börtöntöltelék -> börtöntöltele", function() {deepEqual( Stem("börtöntöltelék"), "börtöntöltele");});
test("börtöntöltelék-pofa -> börtöntöltelék-pof", function() {deepEqual( Stem("börtöntöltelék-pofa"), "börtöntöltelék-pof");});
test("börze -> börz", function() {deepEqual( Stem("börze"), "börz");});
test("börzéhez -> börz", function() {deepEqual( Stem("börzéhez"), "börz");});
test("börzék -> börze", function() {deepEqual( Stem("börzék"), "börze");});
test("búcsuztató -> búcsuztató", function() {deepEqual( Stem("búcsuztató"), "búcsuztató");});
test("búcsú -> búcsú", function() {deepEqual( Stem("búcsú"), "búcsú");});
test("búcsúba -> búcsú", function() {deepEqual( Stem("búcsúba"), "búcsú");});
test("búcsúnak -> búcsú", function() {deepEqual( Stem("búcsúnak"), "búcsú");});
test("búcsút -> búcsú", function() {deepEqual( Stem("búcsút"), "búcsú");});
test("búcsújáró -> búcsújáró", function() {deepEqual( Stem("búcsújáró"), "búcsújáró");});
test("búcsúlevelet -> búcsúlevel", function() {deepEqual( Stem("búcsúlevelet"), "búcsúlevel");});
test("búcsúlevelét -> búcsúlevel", function() {deepEqual( Stem("búcsúlevelét"), "búcsúlevel");});
test("búcsúműsort -> búcsúműsor", function() {deepEqual( Stem("búcsúműsort"), "búcsúműsor");});
test("búcsúsorait -> búcsúsor", function() {deepEqual( Stem("búcsúsorait"), "búcsúsor");});
test("búcsúzkodtak -> búcsúzkodt", function() {deepEqual( Stem("búcsúzkodtak"), "búcsúzkodt");});
test("búcsúzkodtunk -> búcsúzkodt", function() {deepEqual( Stem("búcsúzkodtunk"), "búcsúzkodt");});
test("búcsúzkodás -> búcsúzkodás", function() {deepEqual( Stem("búcsúzkodás"), "búcsúzkodás");});
test("búcsúzni -> búcsúzn", function() {deepEqual( Stem("búcsúzni"), "búcsúzn");});
test("búcsúznunk -> búcsúzn", function() {deepEqual( Stem("búcsúznunk"), "búcsúzn");});
test("búcsúztam -> búcsúzt", function() {deepEqual( Stem("búcsúztam"), "búcsúzt");});
test("búcsúzott -> búcsúzot", function() {deepEqual( Stem("búcsúzott"), "búcsúzot");});
test("búcsúztatásán -> búcsúztatás", function() {deepEqual( Stem("búcsúztatásán"), "búcsúztatás");});
test("búcsúztató -> búcsúztató", function() {deepEqual( Stem("búcsúztató"), "búcsúztató");});
test("búcsúzás -> búcsúzás", function() {deepEqual( Stem("búcsúzás"), "búcsúzás");});
test("búcsúzáskor -> búcsúzás", function() {deepEqual( Stem("búcsúzáskor"), "búcsúzás");});
test("búcsúzásul -> búcsúzás", function() {deepEqual( Stem("búcsúzásul"), "búcsúzás");});
test("búcsúzó -> búcsúzó", function() {deepEqual( Stem("búcsúzó"), "búcsúzó");});
test("búcsúzóul -> búcsúzó", function() {deepEqual( Stem("búcsúzóul"), "búcsúzó");});
test("búcsúüzenete -> búcsúüzenet", function() {deepEqual( Stem("búcsúüzenete"), "búcsúüzenet");});
test("búgott -> búgot", function() {deepEqual( Stem("búgott"), "búgot");});
test("búgással -> búgás", function() {deepEqual( Stem("búgással"), "búgás");});
test("bújhattunk -> bújhatt", function() {deepEqual( Stem("bújhattunk"), "bújhatt");});
test("bújik -> búj", function() {deepEqual( Stem("bújik"), "búj");});
test("bújja -> búj", function() {deepEqual( Stem("bújja"), "búj");});
test("bújni -> bújn", function() {deepEqual( Stem("bújni"), "bújn");});
test("bújnom -> bújn", function() {deepEqual( Stem("bújnom"), "bújn");});
test("bújnák -> bújna", function() {deepEqual( Stem("bújnák"), "bújna");});
test("bújok -> búj", function() {deepEqual( Stem("bújok"), "búj");});
test("bújom -> búj", function() {deepEqual( Stem("bújom"), "búj");});
test("bújtunk -> bújt", function() {deepEqual( Stem("bújtunk"), "bújt");});
test("bújt -> búj", function() {deepEqual( Stem("bújt"), "búj");});
test("bújta -> bújt", function() {deepEqual( Stem("bújta"), "bújt");});
test("bújtatta -> bújtatt", function() {deepEqual( Stem("bújtatta"), "bújtatt");});
test("bújva -> bújv", function() {deepEqual( Stem("bújva"), "bújv");});
test("bújócskát -> bújócs", function() {deepEqual( Stem("bújócskát"), "bújócs");});
test("bús -> bús", function() {deepEqual( Stem("bús"), "bús");});
test("búskomor -> búskomor", function() {deepEqual( Stem("búskomor"), "búskomor");});
test("búskomoran -> búskomor", function() {deepEqual( Stem("búskomoran"), "búskomor");});
test("bútor -> bútor", function() {deepEqual( Stem("bútor"), "bútor");});
test("bútoraival -> bútor", function() {deepEqual( Stem("bútoraival"), "bútor");});
test("bútorok -> bútor", function() {deepEqual( Stem("bútorok"), "bútor");});
test("bútorokat -> bútor", function() {deepEqual( Stem("bútorokat"), "bútor");});
test("bútort -> bútor", function() {deepEqual( Stem("bútort"), "bútor");});
test("bútorával -> bútor", function() {deepEqual( Stem("bútorával"), "bútor");});
test("bútordarabok -> bútordarab", function() {deepEqual( Stem("bútordarabok"), "bútordarab");});
test("bútorforgalmazó -> bútorforgalmazó", function() {deepEqual( Stem("bútorforgalmazó"), "bútorforgalmazó");});
test("bútorkészítő -> bútorkészítő", function() {deepEqual( Stem("bútorkészítő"), "bútorkészítő");});
test("bútorozva -> bútorozv", function() {deepEqual( Stem("bútorozva"), "bútorozv");});
test("bútorzat -> bútorz", function() {deepEqual( Stem("bútorzat"), "bútorz");});
test("bútorzatot -> bútorzat", function() {deepEqual( Stem("bútorzatot"), "bútorzat");});
test("búvárkodtunk -> búvárkodt", function() {deepEqual( Stem("búvárkodtunk"), "búvárkodt");});
test("búvár -> búvár", function() {deepEqual( Stem("búvár"), "búvár");});
test("búvárok -> búvár", function() {deepEqual( Stem("búvárok"), "búvár");});
test("búvárruháját -> búvárruhá", function() {deepEqual( Stem("búvárruháját"), "búvárruhá");});
test("búvárszerű -> búvárszerű", function() {deepEqual( Stem("búvárszerű"), "búvárszerű");});
test("búvárvezetők -> búvárvezető", function() {deepEqual( Stem("búvárvezetők"), "búvárvezető");});
test("búvárvizsga -> búvárvizsg", function() {deepEqual( Stem("búvárvizsga"), "búvárvizsg");});
test("búvóhelyük -> búvóhely", function() {deepEqual( Stem("búvóhelyük"), "búvóhely");});
test("búzát -> búz", function() {deepEqual( Stem("búzát"), "búz");});
test("búza -> búz", function() {deepEqual( Stem("búza"), "búz");});
test("búzafajták -> búzafajta", function() {deepEqual( Stem("búzafajták"), "búzafajta");});
test("búzakenyeret -> búzakenyer", function() {deepEqual( Stem("búzakenyeret"), "búzakenyer");});
test("búzamezőn -> búzamező", function() {deepEqual( Stem("búzamezőn"), "búzamező");});
test("búzaszemmel -> búzasz", function() {deepEqual( Stem("búzaszemmel"), "búzasz");});
test("búzatermesztéssel -> búzatermesztés", function() {deepEqual( Stem("búzatermesztéssel"), "búzatermesztés");});
test("bű -> bű", function() {deepEqual( Stem("bű"), "bű");});
test("bűn -> bű", function() {deepEqual( Stem("bűn"), "bű");});
test("bűne -> bűn", function() {deepEqual( Stem("bűne"), "bűn");});
test("bűnei -> bűn", function() {deepEqual( Stem("bűnei"), "bűn");});
test("bűneiket -> bűn", function() {deepEqual( Stem("bűneiket"), "bűn");});
test("bűneit -> bűn", function() {deepEqual( Stem("bűneit"), "bűn");});
test("bűnnek -> bűn", function() {deepEqual( Stem("bűnnek"), "bűn");});
test("bűnnel -> bű", function() {deepEqual( Stem("bűnnel"), "bű");});
test("bűnt -> bűn", function() {deepEqual( Stem("bűnt"), "bűn");});
test("bűnök -> bűn", function() {deepEqual( Stem("bűnök"), "bűn");});
test("bűnöket -> bűn", function() {deepEqual( Stem("bűnöket"), "bűn");});
test("bűnöknek -> bűn", function() {deepEqual( Stem("bűnöknek"), "bűn");});
test("bűnökért -> bűn", function() {deepEqual( Stem("bűnökért"), "bűn");});
test("bűnüket -> bűn", function() {deepEqual( Stem("bűnüket"), "bűn");});
test("bűnbakok -> bűnbak", function() {deepEqual( Stem("bűnbakok"), "bűnbak");});
test("bűnbocsánat -> bűnbocs", function() {deepEqual( Stem("bűnbocsánat"), "bűnbocs");});
test("bűnbocsánatban -> bűnbocsánat", function() {deepEqual( Stem("bűnbocsánatban"), "bűnbocsánat");});
test("bűnbocsánathoz -> bűnbocsánat", function() {deepEqual( Stem("bűnbocsánathoz"), "bűnbocsánat");});
test("bűnbánatban -> bűnbánat", function() {deepEqual( Stem("bűnbánatban"), "bűnbánat");});
test("bűngondol -> bűngondol", function() {deepEqual( Stem("bűngondol"), "bűngondol");});
test("bűnhődik -> bűnhőd", function() {deepEqual( Stem("bűnhődik"), "bűnhőd");});
test("bűnhődne -> bűnhődn", function() {deepEqual( Stem("bűnhődne"), "bűnhődn");});
test("bűnhődni -> bűnhődn", function() {deepEqual( Stem("bűnhődni"), "bűnhődn");});
test("bűnlajstromát -> bűnlajstrom", function() {deepEqual( Stem("bűnlajstromát"), "bűnlajstrom");});
test("bűnlista -> bűnlist", function() {deepEqual( Stem("bűnlista"), "bűnlist");});
test("bűnmegelőzés -> bűnmegelőzés", function() {deepEqual( Stem("bűnmegelőzés"), "bűnmegelőzés");});
test("bűnmegelőzési -> bűnmegelőzés", function() {deepEqual( Stem("bűnmegelőzési"), "bűnmegelőzés");});
test("bűnstop -> bűnstop", function() {deepEqual( Stem("bűnstop"), "bűnstop");});
test("bűnstop-ban -> bűnstop-", function() {deepEqual( Stem("bűnstop-ban"), "bűnstop-");});
test("bűnstop-nak -> bűnstop-", function() {deepEqual( Stem("bűnstop-nak"), "bűnstop-");});
test("bűntett -> bűntet", function() {deepEqual( Stem("bűntett"), "bűntet");});
test("bűntette -> bűntett", function() {deepEqual( Stem("bűntette"), "bűntett");});
test("bűntettei -> bűntett", function() {deepEqual( Stem("bűntettei"), "bűntett");});
test("bűntettek -> bűntett", function() {deepEqual( Stem("bűntettek"), "bűntett");});
test("bűntetteket -> bűntett", function() {deepEqual( Stem("bűntetteket"), "bűntett");});
test("bűntettet -> bűntett", function() {deepEqual( Stem("bűntettet"), "bűntett");});
test("bűntettében -> bűntett", function() {deepEqual( Stem("bűntettében"), "bűntett");});
test("bűntettének -> bűntett", function() {deepEqual( Stem("bűntettének"), "bűntett");});
test("bűntudat -> bűntu", function() {deepEqual( Stem("bűntudat"), "bűntu");});
test("bűntudatból -> bűntudat", function() {deepEqual( Stem("bűntudatból"), "bűntudat");});
test("bűntudatosabban -> bűntudatosab", function() {deepEqual( Stem("bűntudatosabban"), "bűntudatosab");});
test("bűntudatosan -> bűntudatos", function() {deepEqual( Stem("bűntudatosan"), "bűntudatos");});
test("bűntárgyalás -> bűntárgyalás", function() {deepEqual( Stem("bűntárgyalás"), "bűntárgyalás");});
test("bűntárgyalást -> bűntárgyalás", function() {deepEqual( Stem("bűntárgyalást"), "bűntárgyalás");});
test("bűntársa -> bűntárs", function() {deepEqual( Stem("bűntársa"), "bűntárs");});
test("bűntársukkal -> bűntárs", function() {deepEqual( Stem("bűntársukkal"), "bűntárs");});
test("bűntény -> bűntény", function() {deepEqual( Stem("bűntény"), "bűntény");});
test("bűntényt -> bűntény", function() {deepEqual( Stem("bűntényt"), "bűntény");});
test("bűnös -> bűnös", function() {deepEqual( Stem("bűnös"), "bűnös");});
test("bűnösként -> bűnös", function() {deepEqual( Stem("bűnösként"), "bűnös");});
test("bűnösnek -> bűnös", function() {deepEqual( Stem("bűnösnek"), "bűnös");});
test("bűnöst -> bűnös", function() {deepEqual( Stem("bűnöst"), "bűnös");});
test("bűnösöket -> bűnös", function() {deepEqual( Stem("bűnösöket"), "bűnös");});
test("bűnösöknek -> bűnös", function() {deepEqual( Stem("bűnösöknek"), "bűnös");});
test("bűnösöknek -> bűnös", function() {deepEqual( Stem("bűnösöknek"), "bűnös");});
test("bűnösökért -> bűnös", function() {deepEqual( Stem("bűnösökért"), "bűnös");});
test("bűnösségre -> bűnösség", function() {deepEqual( Stem("bűnösségre"), "bűnösség");});
test("bűnösségüket -> bűnösség", function() {deepEqual( Stem("bűnösségüket"), "bűnösség");});
test("bűnözni -> bűnözn", function() {deepEqual( Stem("bűnözni"), "bűnözn");});
test("bűnözés -> bűnözés", function() {deepEqual( Stem("bűnözés"), "bűnözés");});
test("bűnözéssel -> bűnözés", function() {deepEqual( Stem("bűnözéssel"), "bűnözés");});
test("bűnözéstől -> bűnözés", function() {deepEqual( Stem("bűnözéstől"), "bűnözés");});
test("bűnöző -> bűnöző", function() {deepEqual( Stem("bűnöző"), "bűnöző");});
test("bűnözők -> bűnöző", function() {deepEqual( Stem("bűnözők"), "bűnöző");});
test("bűnözőkből -> bűnöző", function() {deepEqual( Stem("bűnözőkből"), "bűnöző");});
test("bűnözőket -> bűnöző", function() {deepEqual( Stem("bűnözőket"), "bűnöző");});
test("bűnözőkkel -> bűnöző", function() {deepEqual( Stem("bűnözőkkel"), "bűnöző");});
test("bűnözőt -> bűnöző", function() {deepEqual( Stem("bűnözőt"), "bűnöző");});
test("bűnügy -> bűnügy", function() {deepEqual( Stem("bűnügy"), "bűnügy");});
test("bűnügyben -> bűnügy", function() {deepEqual( Stem("bűnügyben"), "bűnügy");});
test("bűnügyek -> bűnügy", function() {deepEqual( Stem("bűnügyek"), "bűnügy");});
test("bűnügyeken -> bűnügy", function() {deepEqual( Stem("bűnügyeken"), "bűnügy");});
test("bűnügyeknél -> bűnügy", function() {deepEqual( Stem("bűnügyeknél"), "bűnügy");});
test("bűnügyi -> bűnügy", function() {deepEqual( Stem("bűnügyi"), "bűnügy");});
test("bűnüldözési -> bűnüldözés", function() {deepEqual( Stem("bűnüldözési"), "bűnüldözés");});
test("bűnüldöző -> bűnüldöző", function() {deepEqual( Stem("bűnüldöző"), "bűnüldöző");});
test("bűvkörébe -> bűvkör", function() {deepEqual( Stem("bűvkörébe"), "bűvkör");});
test("bűvköréből -> bűvkör", function() {deepEqual( Stem("bűvköréből"), "bűvkör");});
test("bűvszó -> bűvszó", function() {deepEqual( Stem("bűvszó"), "bűvszó");});
test("bűvészkedéshez -> bűvészkedés", function() {deepEqual( Stem("bűvészkedéshez"), "bűvészkedés");});
test("bűvészmutatványokkal -> bűvészmutatvány", function() {deepEqual( Stem("bűvészmutatványokkal"), "bűvészmutatvány");});
test("bűvölet -> bűvöl", function() {deepEqual( Stem("bűvölet"), "bűvöl");});
test("bűvöletből -> bűvölet", function() {deepEqual( Stem("bűvöletből"), "bűvölet");});
test("bűvölete -> bűvölet", function() {deepEqual( Stem("bűvölete"), "bűvölet");});
test("bűvös -> bűvös", function() {deepEqual( Stem("bűvös"), "bűvös");});
test("bűzben -> bűz", function() {deepEqual( Stem("bűzben"), "bűz");});
test("bűze -> bűz", function() {deepEqual( Stem("bűze"), "bűz");});
test("bűzét -> bűz", function() {deepEqual( Stem("bűzét"), "bűz");});
test("bűzök -> bűz", function() {deepEqual( Stem("bűzök"), "bűz");});
test("bűzlő -> bűzlő", function() {deepEqual( Stem("bűzlő"), "bűzlő");});
test("bűzlött -> bűzlöt", function() {deepEqual( Stem("bűzlött"), "bűzlöt");});
test("bűzös -> bűzös", function() {deepEqual( Stem("bűzös"), "bűzös");});
test("büdzsé -> büdzs", function() {deepEqual( Stem("büdzsé"), "büdzs");});
test("büdzséből -> büdzs", function() {deepEqual( Stem("büdzséből"), "büdzs");});
test("büdzséjét -> büdzsé", function() {deepEqual( Stem("büdzséjét"), "büdzsé");});
test("büdzsét -> büdzs", function() {deepEqual( Stem("büdzsét"), "büdzs");});
test("büdzsétervekben -> büdzséterv", function() {deepEqual( Stem("büdzsétervekben"), "büdzséterv");});
test("büdös -> büdös", function() {deepEqual( Stem("büdös"), "büdös");});
test("büdösebb -> büdösebb", function() {deepEqual( Stem("büdösebb"), "büdösebb");});
test("büdösek -> büdös", function() {deepEqual( Stem("büdösek"), "büdös");});
test("büdösség -> büdösség", function() {deepEqual( Stem("büdösség"), "büdösség");});
test("büfé -> büf", function() {deepEqual( Stem("büfé"), "büf");});
test("büfébe -> büf", function() {deepEqual( Stem("büfébe"), "büf");});
test("büfében -> büf", function() {deepEqual( Stem("büfében"), "büf");});
test("büféből -> büf", function() {deepEqual( Stem("büféből"), "büf");});
test("büféhez -> büf", function() {deepEqual( Stem("büféhez"), "büf");});
test("büféjük -> büfe", function() {deepEqual( Stem("büféjük"), "büfe");});
test("büféket -> büfe", function() {deepEqual( Stem("büféket"), "büfe");});
test("büfének -> büf", function() {deepEqual( Stem("büfének"), "büf");});
test("büfénk -> büfe", function() {deepEqual( Stem("büfénk"), "büfe");});
test("büfénél -> büf", function() {deepEqual( Stem("büfénél"), "büf");});
test("büfére -> büf", function() {deepEqual( Stem("büfére"), "büf");});
test("büfés -> büfés", function() {deepEqual( Stem("büfés"), "büfés");});
test("büki -> bü", function() {deepEqual( Stem("büki"), "bü");});
test("bükki -> bük", function() {deepEqual( Stem("bükki"), "bük");});
test("büntetendő -> büntetendő", function() {deepEqual( Stem("büntetendő"), "büntetendő");});
test("büntetett -> büntetet", function() {deepEqual( Stem("büntetett"), "büntetet");});
test("büntethető -> büntethető", function() {deepEqual( Stem("büntethető"), "büntethető");});
test("büntethetőséget -> büntethetőség", function() {deepEqual( Stem("büntethetőséget"), "büntethetőség");});
test("bünteti -> büntet", function() {deepEqual( Stem("bünteti"), "büntet");});
test("büntessen -> büntess", function() {deepEqual( Stem("büntessen"), "büntess");});
test("büntetik -> büntet", function() {deepEqual( Stem("büntetik"), "büntet");});
test("büntetnek -> büntet", function() {deepEqual( Stem("büntetnek"), "büntet");});
test("büntetni -> büntetn", function() {deepEqual( Stem("büntetni"), "büntetn");});
test("büntette -> büntett", function() {deepEqual( Stem("büntette"), "büntett");});
test("büntették -> büntette", function() {deepEqual( Stem("büntették"), "büntette");});
test("büntetlenséget -> büntetlenség", function() {deepEqual( Stem("büntetlenséget"), "büntetlenség");});
test("büntetlen -> büntetl", function() {deepEqual( Stem("büntetlen"), "büntetl");});
test("büntetlenül -> büntetlen", function() {deepEqual( Stem("büntetlenül"), "büntetlen");});
test("büntetés-végrehajtás -> büntetés-végrehajtás", function() {deepEqual( Stem("büntetés-végrehajtás"), "büntetés-végrehajtás");});
test("büntetés-végrehajtási -> büntetés-végrehajtás", function() {deepEqual( Stem("büntetés-végrehajtási"), "büntetés-végrehajtás");});
test("büntetés -> büntetés", function() {deepEqual( Stem("büntetés"), "büntetés");});
test("büntetése -> büntetés", function() {deepEqual( Stem("büntetése"), "büntetés");});
test("büntetések -> büntetés", function() {deepEqual( Stem("büntetések"), "büntetés");});
test("büntetést -> büntetés", function() {deepEqual( Stem("büntetést"), "büntetés");});
test("büntetésének -> büntetés", function() {deepEqual( Stem("büntetésének"), "büntetés");});
test("büntetését -> büntetés", function() {deepEqual( Stem("büntetését"), "büntetés");});
test("büntetési -> büntetés", function() {deepEqual( Stem("büntetési"), "büntetés");});
test("büntetőeljárás -> büntetőeljárás", function() {deepEqual( Stem("büntetőeljárás"), "büntetőeljárás");});
test("büntetőeljárásnak -> büntetőeljárás", function() {deepEqual( Stem("büntetőeljárásnak"), "büntetőeljárás");});
test("büntetőeljárásokat -> büntetőeljárás", function() {deepEqual( Stem("büntetőeljárásokat"), "büntetőeljárás");});
test("büntetőeljárást -> büntetőeljárás", function() {deepEqual( Stem("büntetőeljárást"), "büntetőeljárás");});
test("büntetőfeljelentést -> büntetőfeljelentés", function() {deepEqual( Stem("büntetőfeljelentést"), "büntetőfeljelentés");});
test("büntetőintézkedései -> büntetőintézkedés", function() {deepEqual( Stem("büntetőintézkedései"), "büntetőintézkedés");});
test("büntetőjoggal -> büntetőjog", function() {deepEqual( Stem("büntetőjoggal"), "büntetőjog");});
test("büntetőjogi -> büntetőjog", function() {deepEqual( Stem("büntetőjogi"), "büntetőjog");});
test("büntetőkamatot -> büntetőkamat", function() {deepEqual( Stem("büntetőkamatot"), "büntetőkamat");});
test("büntetőpere -> büntetőp", function() {deepEqual( Stem("büntetőpere"), "büntetőp");});
test("büntető -> büntető", function() {deepEqual( Stem("büntető"), "büntető");});
test("büntetőt -> büntető", function() {deepEqual( Stem("büntetőt"), "büntető");});
test("büntetőügyben -> büntetőügy", function() {deepEqual( Stem("büntetőügyben"), "büntetőügy");});
test("bürokratikus -> bürokratikus", function() {deepEqual( Stem("bürokratikus"), "bürokratikus");});
test("bürokraták -> bürokrata", function() {deepEqual( Stem("bürokraták"), "bürokrata");});
test("bürokrácia -> bürokrác", function() {deepEqual( Stem("bürokrácia"), "bürokrác");});
test("bürokráciája -> bürokráciá", function() {deepEqual( Stem("bürokráciája"), "bürokráciá");});
test("bürokráciára -> bürokrác", function() {deepEqual( Stem("bürokráciára"), "bürokrác");});
test("büszkeség -> büszkeség", function() {deepEqual( Stem("büszkeség"), "büszkeség");});
test("büszkeségből -> büszkeség", function() {deepEqual( Stem("büszkeségből"), "büszkeség");});
test("büszkesége -> büszkeség", function() {deepEqual( Stem("büszkesége"), "büszkeség");});
test("büszkeségei -> büszkeség", function() {deepEqual( Stem("büszkeségei"), "büszkeség");});
test("büszkeséggel -> büszkeség", function() {deepEqual( Stem("büszkeséggel"), "büszkeség");});
test("büszkébb -> büszkébb", function() {deepEqual( Stem("büszkébb"), "büszkébb");});
test("büszkébbek -> büszkébb", function() {deepEqual( Stem("büszkébbek"), "büszkébb");});
test("büszkék -> büszke", function() {deepEqual( Stem("büszkék"), "büszke");});
test("büszkélkedhetek -> büszkélkedhet", function() {deepEqual( Stem("büszkélkedhetek"), "büszkélkedhet");});
test("büszkélkedhettünk -> büszkélkedhett", function() {deepEqual( Stem("büszkélkedhettünk"), "büszkélkedhett");});
test("büszkélkedni -> büszkélkedn", function() {deepEqual( Stem("büszkélkedni"), "büszkélkedn");});
test("büszkélkedtünk -> büszkélkedt", function() {deepEqual( Stem("büszkélkedtünk"), "büszkélkedt");});
test("ja -> ja", function() {deepEqual( Stem("ja"), "ja");});
test("jachtom -> jacht", function() {deepEqual( Stem("jachtom"), "jacht");});
test("jaguár -> jaguár", function() {deepEqual( Stem("jaguár"), "jaguár");});
test("jaj -> jaj", function() {deepEqual( Stem("jaj"), "jaj");});
test("jajgattunk -> jajgatt", function() {deepEqual( Stem("jajgattunk"), "jajgatt");});
test("jajgatására -> jajgatás", function() {deepEqual( Stem("jajgatására"), "jajgatás");});
test("jajgató -> jajgató", function() {deepEqual( Stem("jajgató"), "jajgató");});
test("jajkiáltásokat -> jajkiáltás", function() {deepEqual( Stem("jajkiáltásokat"), "jajkiáltás");});
test("jajveszékeléssel -> jajveszékelés", function() {deepEqual( Stem("jajveszékeléssel"), "jajveszékelés");});
test("jajveszékelő -> jajveszékelő", function() {deepEqual( Stem("jajveszékelő"), "jajveszékelő");});
test("januári -> január", function() {deepEqual( Stem("januári"), "január");});
test("január -> január", function() {deepEqual( Stem("január"), "január");});
test("januárban -> január", function() {deepEqual( Stem("januárban"), "január");});
test("januárig -> január", function() {deepEqual( Stem("januárig"), "január");});
test("januárjában -> január", function() {deepEqual( Stem("januárjában"), "január");});
test("januárjának -> január", function() {deepEqual( Stem("januárjának"), "január");});
test("januárjára -> január", function() {deepEqual( Stem("januárjára"), "január");});
test("januárjától -> január", function() {deepEqual( Stem("januárjától"), "január");});
test("januárra -> január", function() {deepEqual( Stem("januárra"), "január");});
test("januártól -> január", function() {deepEqual( Stem("januártól"), "január");});
test("japáni -> japán", function() {deepEqual( Stem("japáni"), "japán");});
test("japán -> jap", function() {deepEqual( Stem("japán"), "jap");});
test("japánok -> japán", function() {deepEqual( Stem("japánok"), "japán");});
test("japánpárti -> japánpárt", function() {deepEqual( Stem("japánpárti"), "japánpárt");});
test("javadalmazási -> javadalmazás", function() {deepEqual( Stem("javadalmazási"), "javadalmazás");});
test("javadalmazást -> javadalmazás", function() {deepEqual( Stem("javadalmazást"), "javadalmazás");});
test("javadalmazására -> javadalmazás", function() {deepEqual( Stem("javadalmazására"), "javadalmazás");});
test("javadalmazását -> javadalmazás", function() {deepEqual( Stem("javadalmazását"), "javadalmazás");});
test("javadalmát -> javadalm", function() {deepEqual( Stem("javadalmát"), "javadalm");});
test("javainak -> jav", function() {deepEqual( Stem("javainak"), "jav");});
test("java -> jav", function() {deepEqual( Stem("java"), "jav");});
test("javait -> jav", function() {deepEqual( Stem("javait"), "jav");});
test("javak -> jav", function() {deepEqual( Stem("javak"), "jav");});
test("javakat -> jav", function() {deepEqual( Stem("javakat"), "jav");});
test("javakban -> jav", function() {deepEqual( Stem("javakban"), "jav");});
test("javamra -> jav", function() {deepEqual( Stem("javamra"), "jav");});
test("javukra -> jav", function() {deepEqual( Stem("javukra"), "jav");});
test("javunkat -> jav", function() {deepEqual( Stem("javunkat"), "jav");});
test("javába -> jav", function() {deepEqual( Stem("javába"), "jav");});
test("javában -> jav", function() {deepEqual( Stem("javában"), "jav");});
test("javára -> jav", function() {deepEqual( Stem("javára"), "jav");});
test("javát -> jav", function() {deepEqual( Stem("javát"), "jav");});
test("javáért -> jav", function() {deepEqual( Stem("javáért"), "jav");});
test("javarészt -> javarész", function() {deepEqual( Stem("javarészt"), "javarész");});
test("javasasszonyokat -> javasasszony", function() {deepEqual( Stem("javasasszonyokat"), "javasasszony");});
test("javaslat -> javasl", function() {deepEqual( Stem("javaslat"), "javasl");});
test("javaslata -> javaslat", function() {deepEqual( Stem("javaslata"), "javaslat");});
test("javaslatai -> javaslat", function() {deepEqual( Stem("javaslatai"), "javaslat");});
test("javaslataikat -> javaslat", function() {deepEqual( Stem("javaslataikat"), "javaslat");});
test("javaslatait -> javaslat", function() {deepEqual( Stem("javaslatait"), "javaslat");});
test("javaslatként -> javaslat", function() {deepEqual( Stem("javaslatként"), "javaslat");});
test("javaslatnak -> javaslat", function() {deepEqual( Stem("javaslatnak"), "javaslat");});
test("javaslatok -> javaslat", function() {deepEqual( Stem("javaslatok"), "javaslat");});
test("javaslatokat -> javaslat", function() {deepEqual( Stem("javaslatokat"), "javaslat");});
test("javaslatom -> javaslat", function() {deepEqual( Stem("javaslatom"), "javaslat");});
test("javaslatot -> javaslat", function() {deepEqual( Stem("javaslatot"), "javaslat");});
test("javaslatra -> javaslat", function() {deepEqual( Stem("javaslatra"), "javaslat");});
test("javaslattal -> javasl", function() {deepEqual( Stem("javaslattal"), "javasl");});
test("javaslatukra -> javaslat", function() {deepEqual( Stem("javaslatukra"), "javaslat");});
test("javaslatában -> javaslat", function() {deepEqual( Stem("javaslatában"), "javaslat");});
test("javaslatára -> javaslat", function() {deepEqual( Stem("javaslatára"), "javaslat");});
test("javaslatát -> javaslat", function() {deepEqual( Stem("javaslatát"), "javaslat");});
test("javaslattétel -> javaslattétel", function() {deepEqual( Stem("javaslattétel"), "javaslattétel");});
test("javaslattételi -> javaslattétel", function() {deepEqual( Stem("javaslattételi"), "javaslattétel");});
test("javasol -> javasol", function() {deepEqual( Stem("javasol"), "javasol");});
test("javasolja -> javasol", function() {deepEqual( Stem("javasolja"), "javasol");});
test("javasoljuk -> javasol", function() {deepEqual( Stem("javasoljuk"), "javasol");});
test("javasolják -> javasolja", function() {deepEqual( Stem("javasolják"), "javasolja");});
test("javasolnék -> javasolne", function() {deepEqual( Stem("javasolnék"), "javasolne");});
test("javasolta -> javasolt", function() {deepEqual( Stem("javasolta"), "javasolt");});
test("javasolták -> javasolta", function() {deepEqual( Stem("javasolták"), "javasolta");});
test("javasolt -> javasol", function() {deepEqual( Stem("javasolt"), "javasol");});
test("javulhat -> javulh", function() {deepEqual( Stem("javulhat"), "javulh");});
test("javuljanak -> javul", function() {deepEqual( Stem("javuljanak"), "javul");});
test("javuljon -> javulj", function() {deepEqual( Stem("javuljon"), "javulj");});
test("javul -> jav", function() {deepEqual( Stem("javul"), "jav");});
test("javulnak -> javul", function() {deepEqual( Stem("javulnak"), "javul");});
test("javult -> javul", function() {deepEqual( Stem("javult"), "javul");});
test("javulás -> javulás", function() {deepEqual( Stem("javulás"), "javulás");});
test("javulása -> javulás", function() {deepEqual( Stem("javulása"), "javulás");});
test("javulásra -> javulás", function() {deepEqual( Stem("javulásra"), "javulás");});
test("javulást -> javulás", function() {deepEqual( Stem("javulást"), "javulás");});
test("javulásának -> javulás", function() {deepEqual( Stem("javulásának"), "javulás");});
test("javulását -> javulás", function() {deepEqual( Stem("javulását"), "javulás");});
test("javulásával -> javulás", function() {deepEqual( Stem("javulásával"), "javulás");});
test("javuló -> javuló", function() {deepEqual( Stem("javuló"), "javuló");});
test("javít -> javí", function() {deepEqual( Stem("javít"), "javí");});
test("javítani -> javítan", function() {deepEqual( Stem("javítani"), "javítan");});
test("javítania -> javítan", function() {deepEqual( Stem("javítania"), "javítan");});
test("javítanom -> javítan", function() {deepEqual( Stem("javítanom"), "javítan");});
test("javítanunk -> javítan", function() {deepEqual( Stem("javítanunk"), "javítan");});
test("javította -> javított", function() {deepEqual( Stem("javította"), "javított");});
test("javítottam -> javított", function() {deepEqual( Stem("javítottam"), "javított");});
test("javítsa -> javíts", function() {deepEqual( Stem("javítsa"), "javíts");});
test("javítsák -> javítsa", function() {deepEqual( Stem("javítsák"), "javítsa");});
test("javíttatni -> javíttatn", function() {deepEqual( Stem("javíttatni"), "javíttatn");});
test("javítgatni -> javítgatn", function() {deepEqual( Stem("javítgatni"), "javítgatn");});
test("javíthatatlan -> javíthatatl", function() {deepEqual( Stem("javíthatatlan"), "javíthatatl");});
test("javíthatja -> javíthat", function() {deepEqual( Stem("javíthatja"), "javíthat");});
test("javíthatják -> javíthatja", function() {deepEqual( Stem("javíthatják"), "javíthatja");});
test("javíthatnak -> javíthat", function() {deepEqual( Stem("javíthatnak"), "javíthat");});
test("javítható -> javítható", function() {deepEqual( Stem("javítható"), "javítható");});
test("javíthatók -> javítható", function() {deepEqual( Stem("javíthatók"), "javítható");});
test("javíthassunk -> javíthass", function() {deepEqual( Stem("javíthassunk"), "javíthass");});
test("javíthat -> javíth", function() {deepEqual( Stem("javíthat"), "javíth");});
test("javítja -> javít", function() {deepEqual( Stem("javítja"), "javít");});
test("javítják -> javítja", function() {deepEqual( Stem("javítják"), "javítja");});
test("javított -> javítot", function() {deepEqual( Stem("javított"), "javítot");});
test("javítva -> javítv", function() {deepEqual( Stem("javítva"), "javítv");});
test("javítási -> javítás", function() {deepEqual( Stem("javítási"), "javítás");});
test("javítás -> javítás", function() {deepEqual( Stem("javítás"), "javítás");});
test("javítása -> javítás", function() {deepEqual( Stem("javítása"), "javítás");});
test("javításig -> javítás", function() {deepEqual( Stem("javításig"), "javítás");});
test("javítások -> javítás", function() {deepEqual( Stem("javítások"), "javítás");});
test("javításokat -> javítás", function() {deepEqual( Stem("javításokat"), "javítás");});
test("javításra -> javítás", function() {deepEqual( Stem("javításra"), "javítás");});
test("jegyzési -> jegyzés", function() {deepEqual( Stem("jegyzési"), "jegyzés");});
test("jegyzés -> jegyzés", function() {deepEqual( Stem("jegyzés"), "jegyzés");});
test("jegyzései -> jegyzés", function() {deepEqual( Stem("jegyzései"), "jegyzés");});
test("jegyzések -> jegyzés", function() {deepEqual( Stem("jegyzések"), "jegyzés");});
test("jegyzésekre -> jegyzés", function() {deepEqual( Stem("jegyzésekre"), "jegyzés");});
test("jegyzéskor -> jegyzés", function() {deepEqual( Stem("jegyzéskor"), "jegyzés");});
test("jegyzésre -> jegyzés", function() {deepEqual( Stem("jegyzésre"), "jegyzés");});
test("jegyzéssel -> jegyzés", function() {deepEqual( Stem("jegyzéssel"), "jegyzés");});
test("jegyzést -> jegyzés", function() {deepEqual( Stem("jegyzést"), "jegyzés");});
test("jegyzéstől -> jegyzés", function() {deepEqual( Stem("jegyzéstől"), "jegyzés");});
test("jegyzésére -> jegyzés", function() {deepEqual( Stem("jegyzésére"), "jegyzés");});
test("jegyzői -> jegyző", function() {deepEqual( Stem("jegyzői"), "jegyző");});
test("jegyző -> jegyző", function() {deepEqual( Stem("jegyző"), "jegyző");});
test("jegyzője -> jegyző", function() {deepEqual( Stem("jegyzője"), "jegyző");});
test("jegyzők -> jegyző", function() {deepEqual( Stem("jegyzők"), "jegyző");});
test("jegyzővel -> jegyző", function() {deepEqual( Stem("jegyzővel"), "jegyző");});
test("jegyzőkönyv-vezetési -> jegyzőkönyv-vezetés", function() {deepEqual( Stem("jegyzőkönyv-vezetési"), "jegyzőkönyv-vezetés");});
test("jegyzőkönyvbe -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvbe"), "jegyzőkönyv");});
test("jegyzőkönyv -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyv"), "jegyzőkönyv");});
test("jegyzőkönyvben -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvben"), "jegyzőkönyv");});
test("jegyzőkönyvből -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvből"), "jegyzőkönyv");});
test("jegyzőkönyve -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyve"), "jegyzőkönyv");});
test("jegyzőkönyvei -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvei"), "jegyzőkönyv");});
test("jegyzőkönyveiről -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyveiről"), "jegyzőkönyv");});
test("jegyzőkönyveit -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyveit"), "jegyzőkönyv");});
test("jegyzőkönyvek -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvek"), "jegyzőkönyv");});
test("jegyzőkönyvet -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvet"), "jegyzőkönyv");});
test("jegyzőkönyvhöz -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvhöz"), "jegyzőkönyv");});
test("jegyzőkönyvnek -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvnek"), "jegyzőkönyv");});
test("jegyzőkönyvre -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvre"), "jegyzőkönyv");});
test("jegyzőkönyvvel -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvvel"), "jegyzőkönyv");});
test("jegyzőkönyvének -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvének"), "jegyzőkönyv");});
test("jegyzőkönyvét -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvét"), "jegyzőkönyv");});
test("jegyzőkönyvezése -> jegyzőkönyvezés", function() {deepEqual( Stem("jegyzőkönyvezése"), "jegyzőkönyvezés");});
test("jegyzőkönyvi -> jegyzőkönyv", function() {deepEqual( Stem("jegyzőkönyvi"), "jegyzőkönyv");});
test("jegyzőkönyvvezető -> jegyzőkönyvvezető", function() {deepEqual( Stem("jegyzőkönyvvezető"), "jegyzőkönyvvezető");});
test("jegyzőkönyvvezetőjének -> jegyzőkönyvvezető", function() {deepEqual( Stem("jegyzőkönyvvezetőjének"), "jegyzőkönyvvezető");});
test("jegyzőkönyvvezetőjét -> jegyzőkönyvvezető", function() {deepEqual( Stem("jegyzőkönyvvezetőjét"), "jegyzőkönyvvezető");});
test("jegyzőkönyvvezetőnek -> jegyzőkönyvvezető", function() {deepEqual( Stem("jegyzőkönyvvezetőnek"), "jegyzőkönyvvezető");});
test("jegyzőnő -> jegyzőnő", function() {deepEqual( Stem("jegyzőnő"), "jegyzőnő");});
test("jegyzőségtől -> jegyzőség", function() {deepEqual( Stem("jegyzőségtől"), "jegyzőség");});
test("jegyárbevétel -> jegyárbevétel", function() {deepEqual( Stem("jegyárbevétel"), "jegyárbevétel");});
test("jeladás -> jeladás", function() {deepEqual( Stem("jeladás"), "jeladás");});
test("jeladást -> jeladás", function() {deepEqual( Stem("jeladást"), "jeladás");});
test("járulékosan -> járulékos", function() {deepEqual( Stem("járulékosan"), "járulékos");});
test("járulékreformra -> járulékrefor", function() {deepEqual( Stem("járulékreformra"), "járulékrefor");});
test("járuléktörvények -> járuléktörvény", function() {deepEqual( Stem("járuléktörvények"), "járuléktörvény");});
test("járuló -> járuló", function() {deepEqual( Stem("járuló"), "járuló");});
test("járva -> járv", function() {deepEqual( Stem("járva"), "járv");});
test("járványcsírafajták -> járványcsírafajta", function() {deepEqual( Stem("járványcsírafajták"), "járványcsírafajta");});
test("járványnak -> járvány", function() {deepEqual( Stem("járványnak"), "járvány");});
test("járvány -> járvány", function() {deepEqual( Stem("járvány"), "járvány");});
test("járványok -> járvány", function() {deepEqual( Stem("járványok"), "járvány");});
test("járványos -> járványos", function() {deepEqual( Stem("járványos"), "járványos");});
test("járványra -> járvány", function() {deepEqual( Stem("járványra"), "járvány");});
test("járási -> járás", function() {deepEqual( Stem("járási"), "járás");});
test("járásnak -> járás", function() {deepEqual( Stem("járásnak"), "járás");});
test("játszhatnak -> játszhat", function() {deepEqual( Stem("játszhatnak"), "játszhat");});
test("játszhatnának -> játszhatn", function() {deepEqual( Stem("játszhatnának"), "játszhatn");});
test("játszhatott -> játszhatot", function() {deepEqual( Stem("játszhatott"), "játszhatot");});
test("játszhattam -> játszhatt", function() {deepEqual( Stem("játszhattam"), "játszhatt");});
test("játszhattunk -> játszhatt", function() {deepEqual( Stem("játszhattunk"), "játszhatt");});
test("játszhatunk -> játszhat", function() {deepEqual( Stem("játszhatunk"), "játszhat");});
test("játszma -> játszm", function() {deepEqual( Stem("játszma"), "játszm");});
test("játszmában -> játszm", function() {deepEqual( Stem("játszmában"), "játszm");});
test("játszmát -> játszm", function() {deepEqual( Stem("játszmát"), "játszm");});
test("játszogattunk -> játszogatt", function() {deepEqual( Stem("játszogattunk"), "játszogatt");});
test("játszva -> játszv", function() {deepEqual( Stem("játszva"), "játszv");});
test("játszás -> játszás", function() {deepEqual( Stem("játszás"), "játszás");});
test("játszó -> játszó", function() {deepEqual( Stem("játszó"), "játszó");});
test("játszódik -> játszód", function() {deepEqual( Stem("játszódik"), "játszód");});
test("játszódott -> játszódot", function() {deepEqual( Stem("játszódott"), "játszódot");});
test("játszódó -> játszódó", function() {deepEqual( Stem("játszódó"), "játszódó");});
test("játszóház -> játszóház", function() {deepEqual( Stem("játszóház"), "játszóház");});
test("játszóházzal -> játszóház", function() {deepEqual( Stem("játszóházzal"), "játszóház");});
test("játszótársaim -> játszótárs", function() {deepEqual( Stem("játszótársaim"), "játszótárs");});
test("játszótér -> játszótér", function() {deepEqual( Stem("játszótér"), "játszótér");});
test("játszótérnek -> játszótér", function() {deepEqual( Stem("játszótérnek"), "játszótér");});
test("játszótérre -> játszótér", function() {deepEqual( Stem("játszótérre"), "játszótér");});
test("játszóterén -> játszóter", function() {deepEqual( Stem("játszóterén"), "játszóter");});
test("játék -> játe", function() {deepEqual( Stem("játék"), "játe");});
test("játéka -> játe", function() {deepEqual( Stem("játéka"), "játe");});
test("játékaiban -> játe", function() {deepEqual( Stem("játékaiban"), "játe");});
test("játékaikat -> játe", function() {deepEqual( Stem("játékaikat"), "játe");});
test("játékaikban -> játe", function() {deepEqual( Stem("játékaikban"), "játe");});
test("játékainkból -> játe", function() {deepEqual( Stem("játékainkból"), "játe");});
test("játékkal -> játe", function() {deepEqual( Stem("játékkal"), "játe");});
test("játékainknál -> játe", function() {deepEqual( Stem("játékainknál"), "játe");});
test("játékairól -> játe", function() {deepEqual( Stem("játékairól"), "játe");});
test("játékaival -> játe", function() {deepEqual( Stem("játékaival"), "játe");});
test("játékba -> játe", function() {deepEqual( Stem("játékba"), "játe");});
test("játékban -> játe", function() {deepEqual( Stem("játékban"), "játe");});
test("játékból -> játe", function() {deepEqual( Stem("játékból"), "játe");});
test("játékhoz -> játe", function() {deepEqual( Stem("játékhoz"), "játe");});
test("játéknak -> játe", function() {deepEqual( Stem("játéknak"), "játe");});
test("játéknál -> játe", function() {deepEqual( Stem("játéknál"), "játe");});
test("játékok -> játék", function() {deepEqual( Stem("játékok"), "játék");});
test("játékokat -> játék", function() {deepEqual( Stem("játékokat"), "játék");});
test("játékokban -> játék", function() {deepEqual( Stem("játékokban"), "játék");});
test("játékokhoz -> játék", function() {deepEqual( Stem("játékokhoz"), "játék");});
test("játékokkal -> játék", function() {deepEqual( Stem("játékokkal"), "játék");});
test("játékoknál -> játék", function() {deepEqual( Stem("játékoknál"), "játék");});
test("játékokon -> játék", function() {deepEqual( Stem("játékokon"), "játék");});
test("játékokról -> játék", function() {deepEqual( Stem("játékokról"), "játék");});
test("játékot -> játe", function() {deepEqual( Stem("játékot"), "játe");});
test("játékra -> játe", function() {deepEqual( Stem("játékra"), "játe");});
test("játékunkhoz -> játe", function() {deepEqual( Stem("játékunkhoz"), "játe");});
test("játékában -> játe", function() {deepEqual( Stem("játékában"), "játe");});
test("játékáról -> játe", function() {deepEqual( Stem("játékáról"), "játe");});
test("játékát -> játe", function() {deepEqual( Stem("játékát"), "játe");});
test("játékbarlangot -> játékbarlang", function() {deepEqual( Stem("játékbarlangot"), "játékbarlang");});
test("játékbolt -> játékbol", function() {deepEqual( Stem("játékbolt"), "játékbol");});
test("játékboltba -> játékbolt", function() {deepEqual( Stem("játékboltba"), "játékbolt");});
test("játékengedélyt -> játékengedély", function() {deepEqual( Stem("játékengedélyt"), "játékengedély");});
test("játékengedélyét -> játékengedély", function() {deepEqual( Stem("játékengedélyét"), "játékengedély");});
test("játékeszközök -> játékeszköz", function() {deepEqual( Stem("játékeszközök"), "játékeszköz");});
test("játékfejlesztés -> játékfejlesztés", function() {deepEqual( Stem("játékfejlesztés"), "játékfejlesztés");});
test("játékfilm -> játékfil", function() {deepEqual( Stem("játékfilm"), "játékfil");});
test("játékfilmet -> játékfil", function() {deepEqual( Stem("játékfilmet"), "játékfil");});
test("játékgyártók -> játékgyártó", function() {deepEqual( Stem("játékgyártók"), "játékgyártó");});
test("játékgyűjteményéből -> játékgyűjtemény", function() {deepEqual( Stem("játékgyűjteményéből"), "játékgyűjtemény");});
test("játékgépek -> játékgép", function() {deepEqual( Stem("játékgépek"), "játékgép");});
test("játékidőből -> játékidő", function() {deepEqual( Stem("játékidőből"), "játékidő");});
test("játékjog -> játékjog", function() {deepEqual( Stem("játékjog"), "játékjog");});
test("játékjogát -> játékjog", function() {deepEqual( Stem("játékjogát"), "játékjog");});
test("játékkezdeményezők -> játékkezdeményező", function() {deepEqual( Stem("játékkezdeményezők"), "játékkezdeményező");});
test("játékkonzolok -> játékkonzol", function() {deepEqual( Stem("játékkonzolok"), "játékkonzol");});
test("játéknap -> játéknap", function() {deepEqual( Stem("játéknap"), "játéknap");});
test("játékoseladás -> játékoseladás", function() {deepEqual( Stem("játékoseladás"), "játékoseladás");});
test("játékoslapra -> játékoslap", function() {deepEqual( Stem("játékoslapra"), "játékoslap");});
test("játékosnak -> játékos", function() {deepEqual( Stem("játékosnak"), "játékos");});
test("játékosok -> játékos", function() {deepEqual( Stem("játékosok"), "játékos");});
test("játékosokat -> játékos", function() {deepEqual( Stem("játékosokat"), "játékos");});
test("játékosokból -> játékos", function() {deepEqual( Stem("játékosokból"), "játékos");});
test("játékosokkal -> játékos", function() {deepEqual( Stem("játékosokkal"), "játékos");});
test("játékosoknak -> játékos", function() {deepEqual( Stem("játékosoknak"), "játékos");});
test("játékosra -> játékos", function() {deepEqual( Stem("játékosra"), "játékos");});
test("játékost -> játékos", function() {deepEqual( Stem("játékost"), "játékos");});
test("játékos -> játékos", function() {deepEqual( Stem("játékos"), "játékos");});
test("játékosa -> játékos", function() {deepEqual( Stem("játékosa"), "játékos");});
test("játékosabb -> játékosabb", function() {deepEqual( Stem("játékosabb"), "játékosabb");});
test("játékosai -> játékos", function() {deepEqual( Stem("játékosai"), "játékos");});
test("játékosaira -> játékos", function() {deepEqual( Stem("játékosaira"), "játékos");});
test("játékosan -> játékos", function() {deepEqual( Stem("játékosan"), "játékos");});
test("játékosának -> játékos", function() {deepEqual( Stem("játékosának"), "játékos");});
test("játékosát -> játékos", function() {deepEqual( Stem("játékosát"), "játékos");});
test("játékosság -> játékosság", function() {deepEqual( Stem("játékosság"), "játékosság");});
test("játékosságából -> játékosság", function() {deepEqual( Stem("játékosságából"), "játékosság");});
test("játékostársak -> játékostárs", function() {deepEqual( Stem("játékostársak"), "játékostárs");});
test("játékostársának -> játékostárs", function() {deepEqual( Stem("játékostársának"), "játékostárs");});
test("játékosvándorlás -> játékosvándorlás", function() {deepEqual( Stem("játékosvándorlás"), "játékosvándorlás");});
test("játékpiramisokra -> játékpiramis", function() {deepEqual( Stem("játékpiramisokra"), "játékpiramis");});
test("játékprogram -> játékprogr", function() {deepEqual( Stem("játékprogram"), "játékprogr");});
test("játékprogramja -> játékprogram", function() {deepEqual( Stem("játékprogramja"), "játékprogram");});
test("játékprogramokra -> játékprogram", function() {deepEqual( Stem("játékprogramokra"), "játékprogram");});
test("játékrészben -> játékrész", function() {deepEqual( Stem("játékrészben"), "játékrész");});
test("játékszabályok -> játékszabály", function() {deepEqual( Stem("játékszabályok"), "játékszabály");});
test("játékszabályokat -> játékszabály", function() {deepEqual( Stem("játékszabályokat"), "játékszabály");});
test("játékszenvedélyemből -> játékszenvedély", function() {deepEqual( Stem("játékszenvedélyemből"), "játékszenvedély");});
test("játékszer -> játékszer", function() {deepEqual( Stem("játékszer"), "játékszer");});
test("játékszerekkel -> játékszer", function() {deepEqual( Stem("játékszerekkel"), "játékszer");});
test("játékszolgáltatás -> játékszolgáltatás", function() {deepEqual( Stem("játékszolgáltatás"), "játékszolgáltatás");});
test("játékterembe -> játékter", function() {deepEqual( Stem("játékterembe"), "játékter");});
test("játékteremben -> játékter", function() {deepEqual( Stem("játékteremben"), "játékter");});
test("játéktermekben -> játékterm", function() {deepEqual( Stem("játéktermekben"), "játékterm");});
test("játéktér -> játéktér", function() {deepEqual( Stem("játéktér"), "játéktér");});
test("játékterek -> játékter", function() {deepEqual( Stem("játékterek"), "játékter");});
test("játékvezetésre -> játékvezetés", function() {deepEqual( Stem("játékvezetésre"), "játékvezetés");});
test("játékvezető -> játékvezető", function() {deepEqual( Stem("játékvezető"), "játékvezető");});
test("játékvezetőn -> játékvezető", function() {deepEqual( Stem("játékvezetőn"), "játékvezető");});
test("játékárusok -> játékárus", function() {deepEqual( Stem("játékárusok"), "játékárus");});
test("jázmin -> jázm", function() {deepEqual( Stem("jázmin"), "jázm");});
test("jégdarabok -> jégdarab", function() {deepEqual( Stem("jégdarabok"), "jégdarab");});
test("jégeső -> jégeső", function() {deepEqual( Stem("jégeső"), "jégeső");});
test("jégfelületen -> jégfelület", function() {deepEqual( Stem("jégfelületen"), "jégfelület");});
test("jégfelületén -> jégfelület", function() {deepEqual( Stem("jégfelületén"), "jégfelület");});
test("jéggé -> jég", function() {deepEqual( Stem("jéggé"), "jég");});
test("jég -> jég", function() {deepEqual( Stem("jég"), "jég");});
test("jégbe -> jég", function() {deepEqual( Stem("jégbe"), "jég");});
test("jégről -> jég", function() {deepEqual( Stem("jégről"), "jég");});
test("jéghegy -> jéghegy", function() {deepEqual( Stem("jéghegy"), "jéghegy");});
test("jéghegynek -> jéghegy", function() {deepEqual( Stem("jéghegynek"), "jéghegy");});
test("jéghideg -> jéghideg", function() {deepEqual( Stem("jéghideg"), "jéghideg");});
test("jégkorong -> jégkorong", function() {deepEqual( Stem("jégkorong"), "jégkorong");});
test("jégkorongcsapata -> jégkorongcsapat", function() {deepEqual( Stem("jégkorongcsapata"), "jégkorongcsapat");});
test("jégkorongmérkőzésen -> jégkorongmérkőzés", function() {deepEqual( Stem("jégkorongmérkőzésen"), "jégkorongmérkőzés");});
test("jégkorongozói -> jégkorongozó", function() {deepEqual( Stem("jégkorongozói"), "jégkorongozó");});
test("jégkrémdarabka -> jégkrémdarab", function() {deepEqual( Stem("jégkrémdarabka"), "jégkrémdarab");});
test("jégkrémet -> jégkre", function() {deepEqual( Stem("jégkrémet"), "jégkre");});
test("jégkrémgyártásban -> jégkrémgyártás", function() {deepEqual( Stem("jégkrémgyártásban"), "jégkrémgyártás");});
test("jégpályai -> jégpály", function() {deepEqual( Stem("jégpályai"), "jégpály");});
test("jégszekrénnyel -> jégszekrény", function() {deepEqual( Stem("jégszekrénnyel"), "jégszekrény");});
test("jégtáncoktatás -> jégtáncoktatás", function() {deepEqual( Stem("jégtáncoktatás"), "jégtáncoktatás");});
test("jégtáncoktatást -> jégtáncoktatás", function() {deepEqual( Stem("jégtáncoktatást"), "jégtáncoktatás");});
test("jégzselé -> jégzsel", function() {deepEqual( Stem("jégzselé"), "jégzsel");});
test("jóakaratból -> jóakarat", function() {deepEqual( Stem("jóakaratból"), "jóakarat");});
test("jóakarattal -> jóakar", function() {deepEqual( Stem("jóakarattal"), "jóakar");});
test("jóakaratúlag -> jóakaratúlag", function() {deepEqual( Stem("jóakaratúlag"), "jóakaratúlag");});
test("jóakarói -> jóakaró", function() {deepEqual( Stem("jóakarói"), "jóakaró");});
test("jóba -> jó", function() {deepEqual( Stem("jóba"), "jó");});
test("jó -> jó", function() {deepEqual( Stem("jó"), "jó");});
test("jóban -> jó", function() {deepEqual( Stem("jóban"), "jó");});
test("jóból -> jó", function() {deepEqual( Stem("jóból"), "jó");});
test("jobb -> jobb", function() {deepEqual( Stem("jobb"), "jobb");});
test("jobbak -> jobb", function() {deepEqual( Stem("jobbak"), "jobb");});
test("jobbal -> job", function() {deepEqual( Stem("jobbal"), "job");});
test("jobban -> job", function() {deepEqual( Stem("jobban"), "job");});
test("jobban -> job", function() {deepEqual( Stem("jobban"), "job");});
test("jobbat -> jobb", function() {deepEqual( Stem("jobbat"), "jobb");});
test("jobbik -> jobb", function() {deepEqual( Stem("jobbik"), "jobb");});
test("jobbjával -> jobb", function() {deepEqual( Stem("jobbjával"), "jobb");});
test("jobbnak -> jobb", function() {deepEqual( Stem("jobbnak"), "jobb");});
test("jobbnál -> jobb", function() {deepEqual( Stem("jobbnál"), "jobb");});
test("jobbra -> jobb", function() {deepEqual( Stem("jobbra"), "jobb");});
test("jobbról -> jobb", function() {deepEqual( Stem("jobbról"), "jobb");});
test("jobbá -> job", function() {deepEqual( Stem("jobbá"), "job");});
test("jók -> jó", function() {deepEqual( Stem("jók"), "jó");});
test("jókat -> jó", function() {deepEqual( Stem("jókat"), "jó");});
test("jókról -> jó", function() {deepEqual( Stem("jókról"), "jó");});
test("jónak -> jó", function() {deepEqual( Stem("jónak"), "jó");});
test("jóra -> jó", function() {deepEqual( Stem("jóra"), "jó");});
test("jóról -> jó", function() {deepEqual( Stem("jóról"), "jó");});
test("jót -> jó", function() {deepEqual( Stem("jót"), "jó");});
test("jóvá -> jó", function() {deepEqual( Stem("jóvá"), "jó");});
test("jóval -> jó", function() {deepEqual( Stem("jóval"), "jó");});
test("jóban-rosszban -> jóban-rossz", function() {deepEqual( Stem("jóban-rosszban"), "jóban-rossz");});
test("jóbarát -> jóbar", function() {deepEqual( Stem("jóbarát"), "jóbar");});
test("jóbarátok -> jóbarát", function() {deepEqual( Stem("jóbarátok"), "jóbarát");});
test("jócskán -> jócs", function() {deepEqual( Stem("jócskán"), "jócs");});
test("jóember -> jóember", function() {deepEqual( Stem("jóember"), "jóember");});
test("jófej -> jófej", function() {deepEqual( Stem("jófej"), "jófej");});
test("jófejek -> jófej", function() {deepEqual( Stem("jófejek"), "jófej");});
test("jóformán -> jóform", function() {deepEqual( Stem("jóformán"), "jóform");});
test("jógondol -> jógondol", function() {deepEqual( Stem("jógondol"), "jógondol");});
test("jógondolos -> jógondolos", function() {deepEqual( Stem("jógondolos"), "jógondolos");});
test("jógondolosan -> jógondolos", function() {deepEqual( Stem("jógondolosan"), "jógondolos");});
test("jógondolt -> jógondol", function() {deepEqual( Stem("jógondolt"), "jógondol");});
test("jógondoló -> jógondoló", function() {deepEqual( Stem("jógondoló"), "jógondoló");});
test("jóhangzás -> jóhangzás", function() {deepEqual( Stem("jóhangzás"), "jóhangzás");});
test("jóhiszemű -> jóhiszemű", function() {deepEqual( Stem("jóhiszemű"), "jóhiszemű");});
test("jóhiszeműen -> jóhiszemű", function() {deepEqual( Stem("jóhiszeműen"), "jóhiszemű");});
test("jóhiszeműség -> jóhiszeműség", function() {deepEqual( Stem("jóhiszeműség"), "jóhiszeműség");});
test("jóhiszeműségemet -> jóhiszeműség", function() {deepEqual( Stem("jóhiszeműségemet"), "jóhiszeműség");});
test("jóhiszeműségét -> jóhiszeműség", function() {deepEqual( Stem("jóhiszeműségét"), "jóhiszeműség");});
test("jóhiszeműségével -> jóhiszeműség", function() {deepEqual( Stem("jóhiszeműségével"), "jóhiszeműség");});
test("jóhírnév -> jóhírnév", function() {deepEqual( Stem("jóhírnév"), "jóhírnév");});
test("jóindulat -> jóindul", function() {deepEqual( Stem("jóindulat"), "jóindul");});
test("jóindulatnak -> jóindulat", function() {deepEqual( Stem("jóindulatnak"), "jóindulat");});
test("jóindulaton -> jóindulat", function() {deepEqual( Stem("jóindulaton"), "jóindulat");});
test("jóindulattal -> jóindul", function() {deepEqual( Stem("jóindulattal"), "jóindul");});
test("jóindulatú -> jóindulatú", function() {deepEqual( Stem("jóindulatú"), "jóindulatú");});
test("jóindulatúak -> jóindulatú", function() {deepEqual( Stem("jóindulatúak"), "jóindulatú");});
test("jókedv -> jókedv", function() {deepEqual( Stem("jókedv"), "jókedv");});
test("jókedvben -> jókedv", function() {deepEqual( Stem("jókedvben"), "jókedv");});
test("jókedvből -> jókedv", function() {deepEqual( Stem("jókedvből"), "jókedv");});
test("jókedve -> jókedv", function() {deepEqual( Stem("jókedve"), "jókedv");});
test("jókedvem -> jókedv", function() {deepEqual( Stem("jókedvem"), "jókedv");});
test("jókedvvel -> jókedv", function() {deepEqual( Stem("jókedvvel"), "jókedv");});
test("jókedvével -> jókedv", function() {deepEqual( Stem("jókedvével"), "jókedv");});
test("jókedvük -> jókedv", function() {deepEqual( Stem("jókedvük"), "jókedv");});
test("jókedvükben -> jókedv", function() {deepEqual( Stem("jókedvükben"), "jókedv");});
test("jókedvű -> jókedvű", function() {deepEqual( Stem("jókedvű"), "jókedvű");});
test("jókedvűen -> jókedvű", function() {deepEqual( Stem("jókedvűen"), "jókedvű");});
test("jókedvűnek -> jókedvű", function() {deepEqual( Stem("jókedvűnek"), "jókedvű");});
test("jókor -> jó", function() {deepEqual( Stem("jókor"), "jó");});
test("jókora -> jó", function() {deepEqual( Stem("jókora"), "jó");});
test("jókorák -> jókora", function() {deepEqual( Stem("jókorák"), "jókora");});
test("jóképű -> jóképű", function() {deepEqual( Stem("jóképű"), "jóképű");});
test("jóképűnek -> jóképű", function() {deepEqual( Stem("jóképűnek"), "jóképű");});
test("jókívánságok -> jókívánság", function() {deepEqual( Stem("jókívánságok"), "jókívánság");});
test("jókívánságokkal -> jókívánság", function() {deepEqual( Stem("jókívánságokkal"), "jókívánság");});
test("jól -> jól", function() {deepEqual( Stem("jól"), "jól");});
test("jólelkű -> jólelkű", function() {deepEqual( Stem("jólelkű"), "jólelkű");});
test("jólesett -> jóleset", function() {deepEqual( Stem("jólesett"), "jóleset");});
test("jólesik -> jóles", function() {deepEqual( Stem("jólesik"), "jóles");});
test("jóleső -> jóleső", function() {deepEqual( Stem("jóleső"), "jóleső");});
test("jóllakik -> jóll", function() {deepEqual( Stem("jóllakik"), "jóll");});
test("jóllakna -> jóllakn", function() {deepEqual( Stem("jóllakna"), "jóllakn");});
test("jóllaktam -> jóllakt", function() {deepEqual( Stem("jóllaktam"), "jóllakt");});
test("jóllaktunk -> jóllakt", function() {deepEqual( Stem("jóllaktunk"), "jóllakt");});
test("jóllakott -> jóllakot", function() {deepEqual( Stem("jóllakott"), "jóllakot");});
test("jóllakva -> jóllakv", function() {deepEqual( Stem("jóllakva"), "jóllakv");});
test("jóllehet -> jólleh", function() {deepEqual( Stem("jóllehet"), "jólleh");});
test("jólneveltsége -> jólneveltség", function() {deepEqual( Stem("jólneveltsége"), "jólneveltség");});
test("jólét -> jól", function() {deepEqual( Stem("jólét"), "jól");});
test("jólétben -> jólét", function() {deepEqual( Stem("jólétben"), "jólét");});
test("jólétet -> jólét", function() {deepEqual( Stem("jólétet"), "jólét");});
test("jólétnek -> jólét", function() {deepEqual( Stem("jólétnek"), "jólét");});
test("jóléttől -> jólét", function() {deepEqual( Stem("jóléttől"), "jólét");});
test("jólétét -> jólét", function() {deepEqual( Stem("jólétét"), "jólét");});
test("jómaga -> jómag", function() {deepEqual( Stem("jómaga"), "jómag");});
test("jómagam -> jómag", function() {deepEqual( Stem("jómagam"), "jómag");});
test("jóminőségű -> jóminőségű", function() {deepEqual( Stem("jóminőségű"), "jóminőségű");});
test("jómódban -> jómó", function() {deepEqual( Stem("jómódban"), "jómó");});
test("jómódot -> jómó", function() {deepEqual( Stem("jómódot"), "jómó");});
test("jómódú -> jómódú", function() {deepEqual( Stem("jómódú"), "jómódú");});
test("jómódúak -> jómódú", function() {deepEqual( Stem("jómódúak"), "jómódú");});
test("jónéven -> jónév", function() {deepEqual( Stem("jónéven"), "jónév");});
test("jópofa -> jópof", function() {deepEqual( Stem("jópofa"), "jópof");});
test("jópéldával -> jópéld", function() {deepEqual( Stem("jópéldával"), "jópéld");});
test("jóravaló -> jóravaló", function() {deepEqual( Stem("jóravaló"), "jóravaló");});
test("jórészt -> jórész", function() {deepEqual( Stem("jórészt"), "jórész");});
test("jórészük -> jórész", function() {deepEqual( Stem("jórészük"), "jórész");});
test("jóslat -> jósl", function() {deepEqual( Stem("jóslat"), "jósl");});
test("jóslata -> jóslat", function() {deepEqual( Stem("jóslata"), "jóslat");});
test("jóslatai -> jóslat", function() {deepEqual( Stem("jóslatai"), "jóslat");});
test("jóslatnak -> jóslat", function() {deepEqual( Stem("jóslatnak"), "jóslat");});
test("jóslatok -> jóslat", function() {deepEqual( Stem("jóslatok"), "jóslat");});
test("jóslatokat -> jóslat", function() {deepEqual( Stem("jóslatokat"), "jóslat");});
test("jóslatokból -> jóslat", function() {deepEqual( Stem("jóslatokból"), "jóslat");});
test("jóslatoknak -> jóslat", function() {deepEqual( Stem("jóslatoknak"), "jóslat");});
test("jóslatát -> jóslat", function() {deepEqual( Stem("jóslatát"), "jóslat");});
test("jósnővel -> jósnő", function() {deepEqual( Stem("jósnővel"), "jósnő");});
test("jósolgatott -> jósolgatot", function() {deepEqual( Stem("jósolgatott"), "jósolgatot");});
test("jósolgattunk -> jósolgatt", function() {deepEqual( Stem("jósolgattunk"), "jósolgatt");});
test("jósolható -> jósolható", function() {deepEqual( Stem("jósolható"), "jósolható");});
test("jósolja -> jósol", function() {deepEqual( Stem("jósolja"), "jósol");});
test("jósol -> jósol", function() {deepEqual( Stem("jósol"), "jósol");});
test("jósolják -> jósolja", function() {deepEqual( Stem("jósolják"), "jósolja");});
test("jósolnak -> jósol", function() {deepEqual( Stem("jósolnak"), "jósol");});
test("jósolni -> jósoln", function() {deepEqual( Stem("jósolni"), "jósoln");});
test("jósolta -> jósolt", function() {deepEqual( Stem("jósolta"), "jósolt");});
test("jósolták -> jósolta", function() {deepEqual( Stem("jósolták"), "jósolta");});
test("jósoltass -> jósoltass", function() {deepEqual( Stem("jósoltass"), "jósoltass");});
test("jósolt -> jósol", function() {deepEqual( Stem("jósolt"), "jósol");});
test("jóstehetsége -> jóstehetség", function() {deepEqual( Stem("jóstehetsége"), "jóstehetség");});
test("jószerencse -> jószerencs", function() {deepEqual( Stem("jószerencse"), "jószerencs");});
test("jószerével -> jószer", function() {deepEqual( Stem("jószerével"), "jószer");});
test("jószág -> jószág", function() {deepEqual( Stem("jószág"), "jószág");});
test("jószágok -> jószág", function() {deepEqual( Stem("jószágok"), "jószág");});
test("jószándékkal -> jószánde", function() {deepEqual( Stem("jószándékkal"), "jószánde");});
test("jószívvel -> jószív", function() {deepEqual( Stem("jószívvel"), "jószív");});
test("jószívű -> jószívű", function() {deepEqual( Stem("jószívű"), "jószívű");});
test("jóság -> jóság", function() {deepEqual( Stem("jóság"), "jóság");});
test("jósága -> jóság", function() {deepEqual( Stem("jósága"), "jóság");});
test("jóságot -> jóság", function() {deepEqual( Stem("jóságot"), "jóság");});
test("jóságról -> jóság", function() {deepEqual( Stem("jóságról"), "jóság");});
test("jóságát -> jóság", function() {deepEqual( Stem("jóságát"), "jóság");});
test("jóságos -> jóságos", function() {deepEqual( Stem("jóságos"), "jóságos");});
test("jótevő -> jótevő", function() {deepEqual( Stem("jótevő"), "jótevő");});
test("jótékony -> jótékony", function() {deepEqual( Stem("jótékony"), "jótékony");});
test("jótékonyság -> jótékonyság", function() {deepEqual( Stem("jótékonyság"), "jótékonyság");});
test("jótékonysági -> jótékonyság", function() {deepEqual( Stem("jótékonysági"), "jótékonyság");});
test("jóviszonyban -> jóviszony", function() {deepEqual( Stem("jóviszonyban"), "jóviszony");});
test("jóvoltukból -> jóvolt", function() {deepEqual( Stem("jóvoltukból"), "jóvolt");});
test("jóvoltából -> jóvolt", function() {deepEqual( Stem("jóvoltából"), "jóvolt");});
test("jóváhagyhatja -> jóváhagyhat", function() {deepEqual( Stem("jóváhagyhatja"), "jóváhagyhat");});
test("jóváhagyja -> jóváhagy", function() {deepEqual( Stem("jóváhagyja"), "jóváhagy");});
test("jóváhagyna -> jóváhagyn", function() {deepEqual( Stem("jóváhagyna"), "jóváhagyn");});
test("jóváhagynia -> jóváhagyn", function() {deepEqual( Stem("jóváhagynia"), "jóváhagyn");});
test("jóváhagyniuk -> jóváhagyn", function() {deepEqual( Stem("jóváhagyniuk"), "jóváhagyn");});
test("jóváhagyta -> jóváhagyt", function() {deepEqual( Stem("jóváhagyta"), "jóváhagyt");});
test("jóváhagyva -> jóváhagyv", function() {deepEqual( Stem("jóváhagyva"), "jóváhagyv");});
test("jóváhagyott -> jóváhagyot", function() {deepEqual( Stem("jóváhagyott"), "jóváhagyot");});
test("jóváhagyási -> jóváhagyás", function() {deepEqual( Stem("jóváhagyási"), "jóváhagyás");});
test("jóváhagyások -> jóváhagyás", function() {deepEqual( Stem("jóváhagyások"), "jóváhagyás");});
test("jóváhagyás -> jóváhagyás", function() {deepEqual( Stem("jóváhagyás"), "jóváhagyás");});
test("jóváhagyása -> jóváhagyás", function() {deepEqual( Stem("jóváhagyása"), "jóváhagyás");});
test("jóváhagyásokat -> jóváhagyás", function() {deepEqual( Stem("jóváhagyásokat"), "jóváhagyás");});
test("jóváhagyásra -> jóváhagyás", function() {deepEqual( Stem("jóváhagyásra"), "jóváhagyás");});
test("jóváhagyást -> jóváhagyás", function() {deepEqual( Stem("jóváhagyást"), "jóváhagyás");});
test("jóváhagyásához -> jóváhagyás", function() {deepEqual( Stem("jóváhagyásához"), "jóváhagyás");});
test("jóváhagyásának -> jóváhagyás", function() {deepEqual( Stem("jóváhagyásának"), "jóváhagyás");});
test("jóváhagyására -> jóváhagyás", function() {deepEqual( Stem("jóváhagyására"), "jóváhagyás");});
test("jóváhagyásáról -> jóváhagyás", function() {deepEqual( Stem("jóváhagyásáról"), "jóváhagyás");});
test("jóváhagyását -> jóváhagyás", function() {deepEqual( Stem("jóváhagyását"), "jóváhagyás");});
test("jóváhagyásától -> jóváhagyás", function() {deepEqual( Stem("jóváhagyásától"), "jóváhagyás");});
test("jóváhagyásával -> jóváhagyás", function() {deepEqual( Stem("jóváhagyásával"), "jóváhagyás");});
test("jóváhagyó -> jóváhagyó", function() {deepEqual( Stem("jóváhagyó"), "jóváhagyó");});
test("jóvátegye -> jóvátegy", function() {deepEqual( Stem("jóvátegye"), "jóvátegy");});
test("jóvátegyen -> jóvátegy", function() {deepEqual( Stem("jóvátegyen"), "jóvátegy");});
test("jóvátehetetlennek -> jóvátehetetlen", function() {deepEqual( Stem("jóvátehetetlennek"), "jóvátehetetlen");});
test("jóváírandó -> jóváírandó", function() {deepEqual( Stem("jóváírandó"), "jóváírandó");});
test("jóváírja -> jóváír", function() {deepEqual( Stem("jóváírja"), "jóváír");});
test("jóváírni -> jóváírn", function() {deepEqual( Stem("jóváírni"), "jóváírn");});
test("jóváírt -> jóváír", function() {deepEqual( Stem("jóváírt"), "jóváír");});
test("jóváírási -> jóváírás", function() {deepEqual( Stem("jóváírási"), "jóváírás");});
test("jóváírásra -> jóváírás", function() {deepEqual( Stem("jóváírásra"), "jóváírás");});
test("jóváírással -> jóváírás", function() {deepEqual( Stem("jóváírással"), "jóváírás");});
test("jóváírást -> jóváírás", function() {deepEqual( Stem("jóváírást"), "jóváírás");});
test("jóváírását -> jóváírás", function() {deepEqual( Stem("jóváírását"), "jóváírás");});
test("jóváírás -> jóváírás", function() {deepEqual( Stem("jóváírás"), "jóváírás");});
test("jóváírása -> jóváírás", function() {deepEqual( Stem("jóváírása"), "jóváírás");});
test("józan -> józ", function() {deepEqual( Stem("józan"), "józ");});
test("józannak -> józan", function() {deepEqual( Stem("józannak"), "józan");});
test("józanok -> józan", function() {deepEqual( Stem("józanok"), "józan");});
test("józanon -> józan", function() {deepEqual( Stem("józanon"), "józan");});
test("józanul -> józan", function() {deepEqual( Stem("józanul"), "józan");});
test("józanodik -> józanod", function() {deepEqual( Stem("józanodik"), "józanod");});
test("józanság -> józanság", function() {deepEqual( Stem("józanság"), "józanság");});
test("józanságában -> józanság", function() {deepEqual( Stem("józanságában"), "józanság");});
test("józanító -> józanító", function() {deepEqual( Stem("józanító"), "józanító");});
test("józsefvárosi -> józsefváros", function() {deepEqual( Stem("józsefvárosi"), "józsefváros");});
test("jóéjszakát -> jóéjsz", function() {deepEqual( Stem("jóéjszakát"), "jóéjsz");});
test("jóérzésére -> jóérzés", function() {deepEqual( Stem("jóérzésére"), "jóérzés");});
test("jóízően -> jóíző", function() {deepEqual( Stem("jóízően"), "jóíző");});
test("jóízű -> jóízű", function() {deepEqual( Stem("jóízű"), "jóízű");});
test("jóízűen -> jóízű", function() {deepEqual( Stem("jóízűen"), "jóízű");});
test("jóízűt -> jóízű", function() {deepEqual( Stem("jóízűt"), "jóízű");});
test("jő -> jő", function() {deepEqual( Stem("jő"), "jő");});
test("jőtt -> jőt", function() {deepEqual( Stem("jőtt"), "jőt");});
test("jőve -> jőv", function() {deepEqual( Stem("jőve"), "jőv");});
test("jöhessek -> jöhess", function() {deepEqual( Stem("jöhessek"), "jöhess");});
test("jöhessen -> jöhess", function() {deepEqual( Stem("jöhessen"), "jöhess");});
test("jöhet -> jöh", function() {deepEqual( Stem("jöhet"), "jöh");});
test("jöhetek -> jöhet", function() {deepEqual( Stem("jöhetek"), "jöhet");});
test("jöhetett -> jöhetet", function() {deepEqual( Stem("jöhetett"), "jöhetet");});
test("jöhetnek -> jöhet", function() {deepEqual( Stem("jöhetnek"), "jöhet");});
test("jöhettek -> jöhett", function() {deepEqual( Stem("jöhettek"), "jöhett");});
test("jöhettük -> jöhett", function() {deepEqual( Stem("jöhettük"), "jöhett");});
test("jöhettünk -> jöhett", function() {deepEqual( Stem("jöhettünk"), "jöhett");});
test("jöhetünk -> jöhet", function() {deepEqual( Stem("jöhetünk"), "jöhet");});
test("jöhető -> jöhető", function() {deepEqual( Stem("jöhető"), "jöhető");});
test("jöjjek -> jöjj", function() {deepEqual( Stem("jöjjek"), "jöjj");});
test("jöjjenek -> jöj", function() {deepEqual( Stem("jöjjenek"), "jöj");});
test("jöjjön -> jöjj", function() {deepEqual( Stem("jöjjön"), "jöjj");});
test("jöjjünk -> jöjj", function() {deepEqual( Stem("jöjjünk"), "jöjj");});
test("jön -> jön", function() {deepEqual( Stem("jön"), "jön");});
test("jönne -> jönn", function() {deepEqual( Stem("jönne"), "jönn");});
test("jönnek -> jön", function() {deepEqual( Stem("jönnek"), "jön");});
test("jönnek -> jön", function() {deepEqual( Stem("jönnek"), "jön");});
test("jönni -> jönn", function() {deepEqual( Stem("jönni"), "jönn");});
test("jönnie -> jönn", function() {deepEqual( Stem("jönnie"), "jönn");});
test("jönnék -> jönne", function() {deepEqual( Stem("jönnék"), "jönne");});
test("jönnénk -> jönne", function() {deepEqual( Stem("jönnénk"), "jönne");});
test("jönnöd -> jönn", function() {deepEqual( Stem("jönnöd"), "jönn");});
test("jönnöm -> jönnö", function() {deepEqual( Stem("jönnöm"), "jönnö");});
test("jönnünk -> jönn", function() {deepEqual( Stem("jönnünk"), "jönn");});
test("jöttek -> jött", function() {deepEqual( Stem("jöttek"), "jött");});
test("jöttem -> jött", function() {deepEqual( Stem("jöttem"), "jött");});
test("jöttetek -> jöttet", function() {deepEqual( Stem("jöttetek"), "jöttet");});
test("jöttél -> jöttél", function() {deepEqual( Stem("jöttél"), "jöttél");});
test("jöttök -> jött", function() {deepEqual( Stem("jöttök"), "jött");});
test("jöttünk -> jött", function() {deepEqual( Stem("jöttünk"), "jött");});
test("jövök -> jöv", function() {deepEqual( Stem("jövök"), "jöv");});
test("jövünk -> jöv", function() {deepEqual( Stem("jövünk"), "jöv");});
test("jött -> jöt", function() {deepEqual( Stem("jött"), "jöt");});
test("jött-ment -> jött-men", function() {deepEqual( Stem("jött-ment"), "jött-men");});
test("jöttment -> jöttmen", function() {deepEqual( Stem("jöttment"), "jöttmen");});
test("jöttmenttől -> jöttment", function() {deepEqual( Stem("jöttmenttől"), "jöttment");});
test("jöve -> jöv", function() {deepEqual( Stem("jöve"), "jöv");});
test("jövedelem-kiesést -> jövedelem-kiesés", function() {deepEqual( Stem("jövedelem-kiesést"), "jövedelem-kiesés");});
test("jövedelemadó -> jövedelemadó", function() {deepEqual( Stem("jövedelemadó"), "jövedelemadó");});
test("jövedelemadóba -> jövedelemadó", function() {deepEqual( Stem("jövedelemadóba"), "jövedelemadó");});
test("jövedelemadóhoz -> jövedelemadó", function() {deepEqual( Stem("jövedelemadóhoz"), "jövedelemadó");});
test("jövedelemadóról -> jövedelemadó", function() {deepEqual( Stem("jövedelemadóról"), "jövedelemadó");});
test("jövedelemadózásban -> jövedelemadózás", function() {deepEqual( Stem("jövedelemadózásban"), "jövedelemadózás");});
test("jövedelemcentralizáció -> jövedelemcentralizáció", function() {deepEqual( Stem("jövedelemcentralizáció"), "jövedelemcentralizáció");});
test("jövedelememelkedéssel -> jövedelememelkedés", function() {deepEqual( Stem("jövedelememelkedéssel"), "jövedelememelkedés");});
test("jövedelemfokozás -> jövedelemfokozás", function() {deepEqual( Stem("jövedelemfokozás"), "jövedelemfokozás");});
test("jövedelemfokozásra -> jövedelemfokozás", function() {deepEqual( Stem("jövedelemfokozásra"), "jövedelemfokozás");});
test("jövedelemforrásokból -> jövedelemforrás", function() {deepEqual( Stem("jövedelemforrásokból"), "jövedelemforrás");});
test("jövedelemfüggő -> jövedelemfüggő", function() {deepEqual( Stem("jövedelemfüggő"), "jövedelemfüggő");});
test("jövedelemkiegészítési -> jövedelemkiegészítés", function() {deepEqual( Stem("jövedelemkiegészítési"), "jövedelemkiegészítés");});
test("jövedelemkorlátozó -> jövedelemkorlátozó", function() {deepEqual( Stem("jövedelemkorlátozó"), "jövedelemkorlátozó");});
test("jövedelempolitikai -> jövedelempoliti", function() {deepEqual( Stem("jövedelempolitikai"), "jövedelempoliti");});
test("jövedelempolitikáról -> jövedelempolit", function() {deepEqual( Stem("jövedelempolitikáról"), "jövedelempolit");});
test("jövedelempótló -> jövedelempótló", function() {deepEqual( Stem("jövedelempótló"), "jövedelempótló");});
test("jövedelemrészre -> jövedelemrész", function() {deepEqual( Stem("jövedelemrészre"), "jövedelemrész");});
test("jövedelemszabályozási -> jövedelemszabályozás", function() {deepEqual( Stem("jövedelemszabályozási"), "jövedelemszabályozás");});
test("jövedelemszerzési -> jövedelemszerzés", function() {deepEqual( Stem("jövedelemszerzési"), "jövedelemszerzés");});
test("jövedelemszerzésre -> jövedelemszerzés", function() {deepEqual( Stem("jövedelemszerzésre"), "jövedelemszerzés");});
test("jövedelemszerzést -> jövedelemszerzés", function() {deepEqual( Stem("jövedelemszerzést"), "jövedelemszerzés");});
test("jövedelemszerzés -> jövedelemszerzés", function() {deepEqual( Stem("jövedelemszerzés"), "jövedelemszerzés");});
test("jövedelemszint -> jövedelemszin", function() {deepEqual( Stem("jövedelemszint"), "jövedelemszin");});
test("jövedelemtermelő -> jövedelemtermelő", function() {deepEqual( Stem("jövedelemtermelő"), "jövedelemtermelő");});
test("jövedelme -> jövedelm", function() {deepEqual( Stem("jövedelme"), "jövedelm");});
test("jövedelmeik -> jövedelm", function() {deepEqual( Stem("jövedelmeik"), "jövedelm");});
test("jövedelmeikből -> jövedelm", function() {deepEqual( Stem("jövedelmeikből"), "jövedelm");});
test("jövedelmeiket -> jövedelm", function() {deepEqual( Stem("jövedelmeiket"), "jövedelm");});
test("jövedelmek -> jövedelm", function() {deepEqual( Stem("jövedelmek"), "jövedelm");});
test("jövedelmeket -> jövedelm", function() {deepEqual( Stem("jövedelmeket"), "jövedelm");});
test("jövedelmekre -> jövedelm", function() {deepEqual( Stem("jövedelmekre"), "jövedelm");});
test("jövedelmet -> jövedel", function() {deepEqual( Stem("jövedelmet"), "jövedel");});
test("jövedelemből -> jövedel", function() {deepEqual( Stem("jövedelemből"), "jövedel");});
test("jövedelem -> jövedel", function() {deepEqual( Stem("jövedelem"), "jövedel");});
test("jövedelemnek -> jövedel", function() {deepEqual( Stem("jövedelemnek"), "jövedel");});
test("jövedelmébőljövedelmének -> jövedelmébőljövedelm", function() {deepEqual( Stem("jövedelmébőljövedelmének"), "jövedelmébőljövedelm");});
test("jövedelmére -> jövedelm", function() {deepEqual( Stem("jövedelmére"), "jövedelm");});
test("jövedelmét -> jövedelm", function() {deepEqual( Stem("jövedelmét"), "jövedelm");});
test("jövedelmük -> jövedelm", function() {deepEqual( Stem("jövedelmük"), "jövedelm");});
test("jövedelmüket -> jövedelm", function() {deepEqual( Stem("jövedelmüket"), "jövedelm");});
test("jövedelmező -> jövedelmező", function() {deepEqual( Stem("jövedelmező"), "jövedelmező");});
test("jövedelmezőek -> jövedelmező", function() {deepEqual( Stem("jövedelmezőek"), "jövedelmező");});
test("jövedelmezőnek -> jövedelmező", function() {deepEqual( Stem("jövedelmezőnek"), "jövedelmező");});
test("jövedelmezőségi -> jövedelmezőség", function() {deepEqual( Stem("jövedelmezőségi"), "jövedelmezőség");});
test("jövedelmezőségszámítást -> jövedelmezőségszámítás", function() {deepEqual( Stem("jövedelmezőségszámítást"), "jövedelmezőségszámítás");});
test("jövedelmezőségébe -> jövedelmezőség", function() {deepEqual( Stem("jövedelmezőségébe"), "jövedelmezőség");});
test("jövedelmezőségének -> jövedelmezőség", function() {deepEqual( Stem("jövedelmezőségének"), "jövedelmezőség");});
test("jövedelmi -> jövedelm", function() {deepEqual( Stem("jövedelmi"), "jövedelm");});
test("jövedelműektől -> jövedelmű", function() {deepEqual( Stem("jövedelműektől"), "jövedelmű");});
test("jövedéki -> jövede", function() {deepEqual( Stem("jövedéki"), "jövede");});
test("jövendőbeli -> jövendőbel", function() {deepEqual( Stem("jövendőbeli"), "jövendőbel");});
test("jövendőt -> jövendő", function() {deepEqual( Stem("jövendőt"), "jövendő");});
test("jövendő -> jövendő", function() {deepEqual( Stem("jövendő"), "jövendő");});
test("jövendölik -> jövendöl", function() {deepEqual( Stem("jövendölik"), "jövendöl");});
test("jövet -> jöv", function() {deepEqual( Stem("jövet"), "jöv");});
test("jövetel -> jövetel", function() {deepEqual( Stem("jövetel"), "jövetel");});
test("jövetelük -> jövetel", function() {deepEqual( Stem("jövetelük"), "jövetel");});
test("jövevény -> jövevény", function() {deepEqual( Stem("jövevény"), "jövevény");});
test("jövevényeket -> jövevény", function() {deepEqual( Stem("jövevényeket"), "jövevény");});
test("jövőbeli -> jövőbel", function() {deepEqual( Stem("jövőbeli"), "jövőbel");});
test("jövőbeliekről -> jövőbeli", function() {deepEqual( Stem("jövőbeliekről"), "jövőbeli");});
test("jövőbeliektől -> jövőbeli", function() {deepEqual( Stem("jövőbeliektől"), "jövőbeli");});
test("jövőbeni -> jövőben", function() {deepEqual( Stem("jövőbeni"), "jövőben");});
test("jövőben -> jövő", function() {deepEqual( Stem("jövőben"), "jövő");});
test("jövőbe -> jövő", function() {deepEqual( Stem("jövőbe"), "jövő");});
test("jövőhöz -> jövő", function() {deepEqual( Stem("jövőhöz"), "jövő");});
test("jövője -> jövő", function() {deepEqual( Stem("jövője"), "jövő");});
test("jövőjében -> jövő", function() {deepEqual( Stem("jövőjében"), "jövő");});
test("jövőjének -> jövő", function() {deepEqual( Stem("jövőjének"), "jövő");});
test("jövőjére -> jövő", function() {deepEqual( Stem("jövőjére"), "jövő");});
test("jövőjéről -> jövő", function() {deepEqual( Stem("jövőjéről"), "jövő");});
test("jövőjét -> jövő", function() {deepEqual( Stem("jövőjét"), "jövő");});
test("jövőjétől -> jövő", function() {deepEqual( Stem("jövőjétől"), "jövő");});
test("jövőjével -> jövő", function() {deepEqual( Stem("jövőjével"), "jövő");});
test("jövőjük -> jövő", function() {deepEqual( Stem("jövőjük"), "jövő");});
test("jövőjüket -> jövő", function() {deepEqual( Stem("jövőjüket"), "jövő");});
test("jövőjükre -> jövő", function() {deepEqual( Stem("jövőjükre"), "jövő");});
test("jövőm -> jövő", function() {deepEqual( Stem("jövőm"), "jövő");});
test("jövőmben -> jövő", function() {deepEqual( Stem("jövőmben"), "jövő");});
test("jövőmet -> jövő", function() {deepEqual( Stem("jövőmet"), "jövő");});
test("jövőmmel -> jövő", function() {deepEqual( Stem("jövőmmel"), "jövő");});
test("jövőmmel -> jövő", function() {deepEqual( Stem("jövőmmel"), "jövő");});
test("jövőnek -> jövő", function() {deepEqual( Stem("jövőnek"), "jövő");});
test("jövőnk -> jövő", function() {deepEqual( Stem("jövőnk"), "jövő");});
test("jövőnket -> jövő", function() {deepEqual( Stem("jövőnket"), "jövő");});
test("jövőre -> jövő", function() {deepEqual( Stem("jövőre"), "jövő");});
test("jövő -> jövő", function() {deepEqual( Stem("jövő"), "jövő");});
test("jövők -> jövő", function() {deepEqual( Stem("jövők"), "jövő");});
test("jövőt -> jövő", function() {deepEqual( Stem("jövőt"), "jövő");});
test("jövőről -> jövő", function() {deepEqual( Stem("jövőről"), "jövő");});
test("jövővel -> jövő", function() {deepEqual( Stem("jövővel"), "jövő");});
test("jövőért -> jövő", function() {deepEqual( Stem("jövőért"), "jövő");});
test("jövőtől -> jövő", function() {deepEqual( Stem("jövőtől"), "jövő");});
test("jövőkkel -> jövő", function() {deepEqual( Stem("jövőkkel"), "jövő");});
test("jövőkép -> jövőkép", function() {deepEqual( Stem("jövőkép"), "jövőkép");});
test("jövőképe -> jövőkép", function() {deepEqual( Stem("jövőképe"), "jövőkép");});
test("jövőképhez -> jövőkép", function() {deepEqual( Stem("jövőképhez"), "jövőkép");});
test("jövőképpel -> jövőkép", function() {deepEqual( Stem("jövőképpel"), "jövőkép");});
test("jövőképének -> jövőkép", function() {deepEqual( Stem("jövőképének"), "jövőkép");});
test("július-augusztus -> július-augusztus", function() {deepEqual( Stem("július-augusztus"), "július-augusztus");});
test("július-szeptemberi -> július-szeptember", function() {deepEqual( Stem("július-szeptemberi"), "július-szeptember");});
test("júliusban -> július", function() {deepEqual( Stem("júliusban"), "július");});
test("július -> július", function() {deepEqual( Stem("július"), "július");});
test("júliusig -> július", function() {deepEqual( Stem("júliusig"), "július");});
test("júliusra -> július", function() {deepEqual( Stem("júliusra"), "július");});
test("júliusában -> július", function() {deepEqual( Stem("júliusában"), "július");});
test("júliusi -> július", function() {deepEqual( Stem("júliusi"), "július");});
test("június -> június", function() {deepEqual( Stem("június"), "június");});
test("júniusba -> június", function() {deepEqual( Stem("júniusba"), "június");});
test("júniusban -> június", function() {deepEqual( Stem("júniusban"), "június");});
test("júniusig -> június", function() {deepEqual( Stem("júniusig"), "június");});
test("júniusra -> június", function() {deepEqual( Stem("júniusra"), "június");});
test("júniusában -> június", function() {deepEqual( Stem("júniusában"), "június");});
test("júniusi -> június", function() {deepEqual( Stem("júniusi"), "június");});
test("júnus -> júnus", function() {deepEqual( Stem("júnus"), "júnus");});
test("kabalisztikus -> kabalisztikus", function() {deepEqual( Stem("kabalisztikus"), "kabalisztikus");});
test("kabardok -> kabard", function() {deepEqual( Stem("kabardok"), "kabard");});
test("kabarettisták -> kabarettista", function() {deepEqual( Stem("kabarettisták"), "kabarettista");});
test("kabaréba -> kabar", function() {deepEqual( Stem("kabaréba"), "kabar");});
test("kabaréban -> kabar", function() {deepEqual( Stem("kabaréban"), "kabar");});
test("kabaréját -> kabaré", function() {deepEqual( Stem("kabaréját"), "kabaré");});
test("kabinajtaja -> kabinajta", function() {deepEqual( Stem("kabinajtaja"), "kabinajta");});
test("kabinajtaján -> kabinajta", function() {deepEqual( Stem("kabinajtaján"), "kabinajta");});
test("kabinet -> kabin", function() {deepEqual( Stem("kabinet"), "kabin");});
test("kabinetet -> kabinet", function() {deepEqual( Stem("kabinetet"), "kabinet");});
test("kabinetfőnöke -> kabinetfőn", function() {deepEqual( Stem("kabinetfőnöke"), "kabinetfőn");});
test("kabinfolyosó -> kabinfolyosó", function() {deepEqual( Stem("kabinfolyosó"), "kabinfolyosó");});
test("kabinhoz -> kabin", function() {deepEqual( Stem("kabinhoz"), "kabin");});
test("kabinja -> kabin", function() {deepEqual( Stem("kabinja"), "kabin");});
test("kabinjaikba -> kabin", function() {deepEqual( Stem("kabinjaikba"), "kabin");});
test("kabinjukat -> kabin", function() {deepEqual( Stem("kabinjukat"), "kabin");});
test("kabinjába -> kabin", function() {deepEqual( Stem("kabinjába"), "kabin");});
test("kabinjában -> kabin", function() {deepEqual( Stem("kabinjában"), "kabin");});
test("kabinjából -> kabin", function() {deepEqual( Stem("kabinjából"), "kabin");});
test("kabinján -> kabin", function() {deepEqual( Stem("kabinján"), "kabin");});
test("kabinba -> kabin", function() {deepEqual( Stem("kabinba"), "kabin");});
test("kabin -> kab", function() {deepEqual( Stem("kabin"), "kab");});
test("kabinban -> kabin", function() {deepEqual( Stem("kabinban"), "kabin");});
test("kabinból -> kabin", function() {deepEqual( Stem("kabinból"), "kabin");});
test("kabinnál -> kabin", function() {deepEqual( Stem("kabinnál"), "kabin");});
test("kabinok -> kabin", function() {deepEqual( Stem("kabinok"), "kabin");});
test("kabinomban -> kabin", function() {deepEqual( Stem("kabinomban"), "kabin");});
test("kabinra -> kabin", function() {deepEqual( Stem("kabinra"), "kabin");});
test("kabinról -> kabin", function() {deepEqual( Stem("kabinról"), "kabin");});
test("kabint -> kabin", function() {deepEqual( Stem("kabint"), "kabin");});
test("kabinkulcsot -> kabinkulcs", function() {deepEqual( Stem("kabinkulcsot"), "kabinkulcs");});
test("kabinlámpa -> kabinlámp", function() {deepEqual( Stem("kabinlámpa"), "kabinlámp");});
test("kabinsor -> kabinsor", function() {deepEqual( Stem("kabinsor"), "kabinsor");});
test("kabát -> kab", function() {deepEqual( Stem("kabát"), "kab");});
test("kabáthoz -> kabát", function() {deepEqual( Stem("kabáthoz"), "kabát");});
test("kabátjuk -> kabát", function() {deepEqual( Stem("kabátjuk"), "kabát");});
test("kabátjában -> kabát", function() {deepEqual( Stem("kabátjában"), "kabát");});
test("kabátjára -> kabát", function() {deepEqual( Stem("kabátjára"), "kabát");});
test("kabátomat -> kabát", function() {deepEqual( Stem("kabátomat"), "kabát");});
test("kabátot -> kabát", function() {deepEqual( Stem("kabátot"), "kabát");});
test("kabátunkat -> kabát", function() {deepEqual( Stem("kabátunkat"), "kabát");});
test("kabátos -> kabátos", function() {deepEqual( Stem("kabátos"), "kabátos");});
test("kacagunk -> kacag", function() {deepEqual( Stem("kacagunk"), "kacag");});
test("kacagva -> kacagv", function() {deepEqual( Stem("kacagva"), "kacagv");});
test("kacagás -> kacagás", function() {deepEqual( Stem("kacagás"), "kacagás");});
test("kacaja -> kaca", function() {deepEqual( Stem("kacaja"), "kaca");});
test("kacat -> kac", function() {deepEqual( Stem("kacat"), "kac");});
test("kacatokat -> kacat", function() {deepEqual( Stem("kacatokat"), "kacat");});
test("kacsabeszél -> kacsabeszél", function() {deepEqual( Stem("kacsabeszél"), "kacsabeszél");});
test("kacsabeszélőről -> kacsabeszélő", function() {deepEqual( Stem("kacsabeszélőről"), "kacsabeszélő");});
test("kacsahápogás -> kacsahápogás", function() {deepEqual( Stem("kacsahápogás"), "kacsahápogás");});
test("kacsalábon -> kacsaláb", function() {deepEqual( Stem("kacsalábon"), "kacsaláb");});
test("kacsalábonforgó -> kacsalábonforgó", function() {deepEqual( Stem("kacsalábonforgó"), "kacsalábonforgó");});
test("kacsamódra -> kacsamó", function() {deepEqual( Stem("kacsamódra"), "kacsamó");});
test("kacsapapához -> kacsapap", function() {deepEqual( Stem("kacsapapához"), "kacsapap");});
test("kacsingatni -> kacsingatn", function() {deepEqual( Stem("kacsingatni"), "kacsingatn");});
test("kacskaringósat -> kacskaringós", function() {deepEqual( Stem("kacskaringósat"), "kacskaringós");});
test("kacsák -> kacsa", function() {deepEqual( Stem("kacsák"), "kacsa");});
test("kacsa -> kacs", function() {deepEqual( Stem("kacsa"), "kacs");});
test("kacéran -> kacér", function() {deepEqual( Stem("kacéran"), "kacér");});
test("kacérkodik -> kacérkod", function() {deepEqual( Stem("kacérkodik"), "kacérkod");});
test("kadett -> kadet", function() {deepEqual( Stem("kadett"), "kadet");});
test("kadétjának -> kadét", function() {deepEqual( Stem("kadétjának"), "kadét");});
test("kadétruhában -> kadétruh", function() {deepEqual( Stem("kadétruhában"), "kadétruh");});
test("kadétruhás -> kadétruhás", function() {deepEqual( Stem("kadétruhás"), "kadétruhás");});
test("kafkai -> kaf", function() {deepEqual( Stem("kafkai"), "kaf");});
test("kagyló -> kagyló", function() {deepEqual( Stem("kagyló"), "kagyló");});
test("kagylóba -> kagyló", function() {deepEqual( Stem("kagylóba"), "kagyló");});
test("kagylóból -> kagyló", function() {deepEqual( Stem("kagylóból"), "kagyló");});
test("kagylókat -> kagyló", function() {deepEqual( Stem("kagylókat"), "kagyló");});
test("kagylót -> kagyló", function() {deepEqual( Stem("kagylót"), "kagyló");});
test("kagylóritkaság -> kagylóritkaság", function() {deepEqual( Stem("kagylóritkaság"), "kagylóritkaság");});
test("kainozoikum -> kainozoiku", function() {deepEqual( Stem("kainozoikum"), "kainozoiku");});
test("kairói -> kairó", function() {deepEqual( Stem("kairói"), "kairó");});
test("kajaidő -> kajaidő", function() {deepEqual( Stem("kajaidő"), "kajaidő");});
test("kajak-kenu -> kajak-kenu", function() {deepEqual( Stem("kajak-kenu"), "kajak-kenu");});
test("kajaknégyes -> kajaknégyes", function() {deepEqual( Stem("kajaknégyes"), "kajaknégyes");});
test("kajakos -> kajakos", function() {deepEqual( Stem("kajakos"), "kajakos");});
test("kajakszövetség -> kajakszövetség", function() {deepEqual( Stem("kajakszövetség"), "kajakszövetség");});
test("kajaszünet -> kajaszün", function() {deepEqual( Stem("kajaszünet"), "kajaszün");});
test("kajszibarack -> kajszibarac", function() {deepEqual( Stem("kajszibarack"), "kajszibarac");});
test("kajáljunk -> kajálj", function() {deepEqual( Stem("kajáljunk"), "kajálj");});
test("kajálni -> kajáln", function() {deepEqual( Stem("kajálni"), "kajáln");});
test("kajáltam -> kajált", function() {deepEqual( Stem("kajáltam"), "kajált");});
test("kajáltunk -> kajált", function() {deepEqual( Stem("kajáltunk"), "kajált");});
test("kajálás -> kajálás", function() {deepEqual( Stem("kajálás"), "kajálás");});
test("kaján -> ka", function() {deepEqual( Stem("kaján"), "ka");});
test("kajánk -> kaja", function() {deepEqual( Stem("kajánk"), "kaja");});
test("kajából -> ka", function() {deepEqual( Stem("kajából"), "ka");});
test("kajáját -> kajá", function() {deepEqual( Stem("kajáját"), "kajá");});
test("kajára -> ka", function() {deepEqual( Stem("kajára"), "ka");});
test("kaját -> ka", function() {deepEqual( Stem("kaját"), "ka");});
test("kajütablak -> kajütabl", function() {deepEqual( Stem("kajütablak"), "kajütabl");});
test("kajütbe -> kajüt", function() {deepEqual( Stem("kajütbe"), "kajüt");});
test("kajüt -> kajü", function() {deepEqual( Stem("kajüt"), "kajü");});
test("kajütben -> kajüt", function() {deepEqual( Stem("kajütben"), "kajüt");});
test("kajütből -> kajüt", function() {deepEqual( Stem("kajütből"), "kajüt");});
test("kajütje -> kajüt", function() {deepEqual( Stem("kajütje"), "kajüt");});
test("kajütjébe -> kajüt", function() {deepEqual( Stem("kajütjébe"), "kajüt");});
test("kajütjéből -> kajüt", function() {deepEqual( Stem("kajütjéből"), "kajüt");});
test("kajütjét -> kajüt", function() {deepEqual( Stem("kajütjét"), "kajüt");});
test("kajütömbe -> kajütö", function() {deepEqual( Stem("kajütömbe"), "kajütö");});
test("kajütöt -> kajüt", function() {deepEqual( Stem("kajütöt"), "kajüt");});
test("kajütsoron -> kajütsor", function() {deepEqual( Stem("kajütsoron"), "kajütsor");});
test("kajütszekrényt -> kajütszekrény", function() {deepEqual( Stem("kajütszekrényt"), "kajütszekrény");});
test("kajütágyból -> kajütágy", function() {deepEqual( Stem("kajütágyból"), "kajütágy");});
test("kakadu -> kakadu", function() {deepEqual( Stem("kakadu"), "kakadu");});
test("kakas -> kakas", function() {deepEqual( Stem("kakas"), "kakas");});
test("kakasai -> kakas", function() {deepEqual( Stem("kakasai"), "kakas");});
test("kakasokkal -> kakas", function() {deepEqual( Stem("kakasokkal"), "kakas");});
test("kakast -> kakas", function() {deepEqual( Stem("kakast"), "kakas");});
test("kakasszóra -> kakasszó", function() {deepEqual( Stem("kakasszóra"), "kakasszó");});
test("kakaót -> kakaó", function() {deepEqual( Stem("kakaót"), "kakaó");});
test("kakaóval -> kakaó", function() {deepEqual( Stem("kakaóval"), "kakaó");});
test("kakaózni -> kakaózn", function() {deepEqual( Stem("kakaózni"), "kakaózn");});
test("kalanddús -> kalanddús", function() {deepEqual( Stem("kalanddús"), "kalanddús");});
test("kalandfilm -> kalandfil", function() {deepEqual( Stem("kalandfilm"), "kalandfil");});
test("kalandja -> kaland", function() {deepEqual( Stem("kalandja"), "kaland");});
test("kaland -> kalan", function() {deepEqual( Stem("kaland"), "kalan");});
test("kalandjai -> kaland", function() {deepEqual( Stem("kalandjai"), "kaland");});
test("kalandjaikról -> kaland", function() {deepEqual( Stem("kalandjaikról"), "kaland");});
test("kalandnak -> kalan", function() {deepEqual( Stem("kalandnak"), "kalan");});
test("kalandok -> kaland", function() {deepEqual( Stem("kalandok"), "kaland");});
test("kalandokat -> kaland", function() {deepEqual( Stem("kalandokat"), "kaland");});
test("kalandokba -> kaland", function() {deepEqual( Stem("kalandokba"), "kaland");});
test("kalandokban -> kaland", function() {deepEqual( Stem("kalandokban"), "kaland");});
test("kalandokkal -> kaland", function() {deepEqual( Stem("kalandokkal"), "kaland");});
test("kalandoknak -> kaland", function() {deepEqual( Stem("kalandoknak"), "kaland");});
test("kalandot -> kalan", function() {deepEqual( Stem("kalandot"), "kalan");});
test("kalandra -> kalan", function() {deepEqual( Stem("kalandra"), "kalan");});
test("kalandtól -> kalan", function() {deepEqual( Stem("kalandtól"), "kalan");});
test("kalandori -> kalandor", function() {deepEqual( Stem("kalandori"), "kalandor");});
test("kalandorok -> kalandor", function() {deepEqual( Stem("kalandorok"), "kalandor");});
test("kalandor -> kalandor", function() {deepEqual( Stem("kalandor"), "kalandor");});
test("kalandorság -> kalandorság", function() {deepEqual( Stem("kalandorság"), "kalandorság");});
test("kalandos -> kalandos", function() {deepEqual( Stem("kalandos"), "kalandos");});
test("kalandosabban -> kalandosab", function() {deepEqual( Stem("kalandosabban"), "kalandosab");});
test("kalandozni -> kalandozn", function() {deepEqual( Stem("kalandozni"), "kalandozn");});
test("kalandozásaim -> kalandozás", function() {deepEqual( Stem("kalandozásaim"), "kalandozás");});
test("kalandvágy -> kalandvágy", function() {deepEqual( Stem("kalandvágy"), "kalandvágy");});
test("kalandvágya -> kalandvágy", function() {deepEqual( Stem("kalandvágya"), "kalandvágy");});
test("kalandvágyók -> kalandvágyó", function() {deepEqual( Stem("kalandvágyók"), "kalandvágyó");});
test("kalap -> kalap", function() {deepEqual( Stem("kalap"), "kalap");});
test("kalapba -> kalap", function() {deepEqual( Stem("kalapba"), "kalap");});
test("kalapban -> kalap", function() {deepEqual( Stem("kalapban"), "kalap");});
test("kalapjukat -> kalap", function() {deepEqual( Stem("kalapjukat"), "kalap");});
test("kalapját -> kalap", function() {deepEqual( Stem("kalapját"), "kalap");});
test("kalapokat -> kalap", function() {deepEqual( Stem("kalapokat"), "kalap");});
test("kalapokban -> kalap", function() {deepEqual( Stem("kalapokban"), "kalap");});
test("kalapot -> kalap", function() {deepEqual( Stem("kalapot"), "kalap");});
test("kalappal -> kalap", function() {deepEqual( Stem("kalappal"), "kalap");});
test("kalaptű -> kalaptű", function() {deepEqual( Stem("kalaptű"), "kalaptű");});
test("kalaptűszúrást -> kalaptűszúrás", function() {deepEqual( Stem("kalaptűszúrást"), "kalaptűszúrás");});
test("kalapáccsal -> kalapács", function() {deepEqual( Stem("kalapáccsal"), "kalapács");});
test("kalapács -> kalapács", function() {deepEqual( Stem("kalapács"), "kalapács");});
test("kalapácsa -> kalapács", function() {deepEqual( Stem("kalapácsa"), "kalapács");});
test("kalapácsot -> kalapács", function() {deepEqual( Stem("kalapácsot"), "kalapács");});
test("kalapácsütések -> kalapácsütés", function() {deepEqual( Stem("kalapácsütések"), "kalapácsütés");});
test("kalapál -> kalapál", function() {deepEqual( Stem("kalapál"), "kalapál");});
test("kalapált -> kalapál", function() {deepEqual( Stem("kalapált"), "kalapál");});
test("kalauzolja -> kalauzol", function() {deepEqual( Stem("kalauzolja"), "kalauzol");});
test("kalauzolta -> kalauzolt", function() {deepEqual( Stem("kalauzolta"), "kalauzolt");});
test("kalauz -> kalauz", function() {deepEqual( Stem("kalauz"), "kalauz");});
test("kalauzt -> kalauz", function() {deepEqual( Stem("kalauzt"), "kalauz");});
test("kalauzunkul -> kalauz", function() {deepEqual( Stem("kalauzunkul"), "kalauz");});
test("kalauzzal -> kalauz", function() {deepEqual( Stem("kalauzzal"), "kalauz");});
test("kaledzsin -> kaledzs", function() {deepEqual( Stem("kaledzsin"), "kaledzs");});
test("kaleidoszkópféle -> kaleidoszkópfél", function() {deepEqual( Stem("kaleidoszkópféle"), "kaleidoszkópfél");});
test("kaleidoszkópnál -> kaleidoszkóp", function() {deepEqual( Stem("kaleidoszkópnál"), "kaleidoszkóp");});
test("kaleidoszkópoknak -> kaleidoszkóp", function() {deepEqual( Stem("kaleidoszkópoknak"), "kaleidoszkóp");});
test("kalendáriumból -> kalendáriu", function() {deepEqual( Stem("kalendáriumból"), "kalendáriu");});
test("kalendáriumkészítő -> kalendáriumkészítő", function() {deepEqual( Stem("kalendáriumkészítő"), "kalendáriumkészítő");});
test("kalibrálni -> kalibráln", function() {deepEqual( Stem("kalibrálni"), "kalibráln");});
test("kaliforniai -> kaliforni", function() {deepEqual( Stem("kaliforniai"), "kaliforni");});
test("kalimpáltam -> kalimpált", function() {deepEqual( Stem("kalimpáltam"), "kalimpált");});
test("kalitkaajtó -> kalitkaajtó", function() {deepEqual( Stem("kalitkaajtó"), "kalitkaajtó");});
test("kalitkában -> kalit", function() {deepEqual( Stem("kalitkában"), "kalit");});
test("kalitka -> kalit", function() {deepEqual( Stem("kalitka"), "kalit");});
test("kalitkát -> kalit", function() {deepEqual( Stem("kalitkát"), "kalit");});
test("kalkulatív -> kalkulatív", function() {deepEqual( Stem("kalkulatív"), "kalkulatív");});
test("kalkulációi -> kalkuláció", function() {deepEqual( Stem("kalkulációi"), "kalkuláció");});
test("kalkuláció -> kalkuláció", function() {deepEqual( Stem("kalkuláció"), "kalkuláció");});
test("kalkulációhoz -> kalkuláció", function() {deepEqual( Stem("kalkulációhoz"), "kalkuláció");});
test("kalkulációja -> kalkuláció", function() {deepEqual( Stem("kalkulációja"), "kalkuláció");});
test("kalkulációkhoz -> kalkuláció", function() {deepEqual( Stem("kalkulációkhoz"), "kalkuláció");});
test("kalkuláción -> kalkuláció", function() {deepEqual( Stem("kalkuláción"), "kalkuláció");});
test("kalkulációról -> kalkuláció", function() {deepEqual( Stem("kalkulációról"), "kalkuláció");});
test("kalkulációt -> kalkuláció", function() {deepEqual( Stem("kalkulációt"), "kalkuláció");});
test("kalkulál -> kalkulál", function() {deepEqual( Stem("kalkulál"), "kalkulál");});
test("kalkulálják -> kalkulálja", function() {deepEqual( Stem("kalkulálják"), "kalkulálja");});
test("kalkulálnak -> kalkulál", function() {deepEqual( Stem("kalkulálnak"), "kalkulál");});
test("kalkulált -> kalkulál", function() {deepEqual( Stem("kalkulált"), "kalkulál");});
test("kalkulálva -> kalkulálv", function() {deepEqual( Stem("kalkulálva"), "kalkulálv");});
test("kalodáról -> kalod", function() {deepEqual( Stem("kalodáról"), "kalod");});
test("kalácsillat -> kalácsill", function() {deepEqual( Stem("kalácsillat"), "kalácsill");});
test("kalácsot -> kalács", function() {deepEqual( Stem("kalácsot"), "kalács");});
test("kalóriák -> kalória", function() {deepEqual( Stem("kalóriák"), "kalória");});
test("kalózfilmek -> kalózfilm", function() {deepEqual( Stem("kalózfilmek"), "kalózfilm");});
test("kalózfiú -> kalózfiú", function() {deepEqual( Stem("kalózfiú"), "kalózfiú");});
test("kalózkazetták -> kalózkazetta", function() {deepEqual( Stem("kalózkazetták"), "kalózkazetta");});
test("kalózkiadványokat -> kalózkiadvány", function() {deepEqual( Stem("kalózkiadványokat"), "kalózkiadvány");});
test("kalózkiadásban -> kalózkiadás", function() {deepEqual( Stem("kalózkiadásban"), "kalózkiadás");});
test("kalózkodás -> kalózkodás", function() {deepEqual( Stem("kalózkodás"), "kalózkodás");});
test("kalózkodást -> kalózkodás", function() {deepEqual( Stem("kalózkodást"), "kalózkodás");});
test("kalózkölyök -> kalózköly", function() {deepEqual( Stem("kalózkölyök"), "kalózköly");});
test("kalóznak -> kalóz", function() {deepEqual( Stem("kalóznak"), "kalóz");});
test("kalóz -> kalóz", function() {deepEqual( Stem("kalóz"), "kalóz");});
test("kalózt -> kalóz", function() {deepEqual( Stem("kalózt"), "kalóz");});
test("kalózzal -> kalóz", function() {deepEqual( Stem("kalózzal"), "kalóz");});
test("kalózos -> kalózos", function() {deepEqual( Stem("kalózos"), "kalózos");});
test("kamarabeli -> kamarabel", function() {deepEqual( Stem("kamarabeli"), "kamarabel");});
test("kamaraegyüttes -> kamaraegyüttes", function() {deepEqual( Stem("kamaraegyüttes"), "kamaraegyüttes");});
test("kamarai -> kamar", function() {deepEqual( Stem("kamarai"), "kamar");});
test("kamaraművet -> kamaraműv", function() {deepEqual( Stem("kamaraművet"), "kamaraműv");});
test("kamaraoperát -> kamaraoper", function() {deepEqual( Stem("kamaraoperát"), "kamaraoper");});
test("kamarazene -> kamarazen", function() {deepEqual( Stem("kamarazene"), "kamarazen");});
test("kamaraárverezők -> kamaraárverező", function() {deepEqual( Stem("kamaraárverezők"), "kamaraárverező");});
test("kamarából -> kamar", function() {deepEqual( Stem("kamarából"), "kamar");});
test("kamara -> kam", function() {deepEqual( Stem("kamara"), "kam");});
test("kamarájában -> kamará", function() {deepEqual( Stem("kamarájában"), "kamará");});
test("kamarák -> kamara", function() {deepEqual( Stem("kamarák"), "kamara");});
test("kamarákhoz -> kamara", function() {deepEqual( Stem("kamarákhoz"), "kamara");});
test("kamaráknál -> kamara", function() {deepEqual( Stem("kamaráknál"), "kamara");});
test("kamarákra -> kamara", function() {deepEqual( Stem("kamarákra"), "kamara");});
test("kamarákról -> kamara", function() {deepEqual( Stem("kamarákról"), "kamara");});
test("kamarának -> kamar", function() {deepEqual( Stem("kamarának"), "kamar");});
test("kamaráról -> kamar", function() {deepEqual( Stem("kamaráról"), "kamar");});
test("kamaszfiúk -> kamaszfiú", function() {deepEqual( Stem("kamaszfiúk"), "kamaszfiú");});
test("kamaszkori -> kamaszkor", function() {deepEqual( Stem("kamaszkori"), "kamaszkor");});
test("kamaszkora -> kamasz", function() {deepEqual( Stem("kamaszkora"), "kamasz");});
test("kamaszkorban -> kamaszkor", function() {deepEqual( Stem("kamaszkorban"), "kamaszkor");});
test("kamaszkorom -> kamaszkor", function() {deepEqual( Stem("kamaszkorom"), "kamaszkor");});
test("kamaszkoromra -> kamaszkor", function() {deepEqual( Stem("kamaszkoromra"), "kamaszkor");});
test("kamaszkorunkban -> kamaszkor", function() {deepEqual( Stem("kamaszkorunkban"), "kamaszkor");});
test("kamaszkorában -> kamaszkor", function() {deepEqual( Stem("kamaszkorában"), "kamaszkor");});
test("kamaszkorára -> kamaszkor", function() {deepEqual( Stem("kamaszkorára"), "kamaszkor");});
test("kamaszlányból -> kamaszlány", function() {deepEqual( Stem("kamaszlányból"), "kamaszlány");});
test("kamaszlányt -> kamaszlány", function() {deepEqual( Stem("kamaszlányt"), "kamaszlány");});
test("kamaszlázadásból -> kamaszlázadás", function() {deepEqual( Stem("kamaszlázadásból"), "kamaszlázadás");});
test("kamaszodó -> kamaszodó", function() {deepEqual( Stem("kamaszodó"), "kamaszodó");});
test("kamaszok -> kamasz", function() {deepEqual( Stem("kamaszok"), "kamasz");});
test("kamasz -> kamasz", function() {deepEqual( Stem("kamasz"), "kamasz");});
test("kamaszon -> kamasz", function() {deepEqual( Stem("kamaszon"), "kamasz");});
test("kamasztól -> kamasz", function() {deepEqual( Stem("kamasztól"), "kamasz");});
test("kamaszos -> kamaszos", function() {deepEqual( Stem("kamaszos"), "kamaszos");});
test("kamaszosan -> kamaszos", function() {deepEqual( Stem("kamaszosan"), "kamaszos");});
test("kamaszosságával -> kamaszosság", function() {deepEqual( Stem("kamaszosságával"), "kamaszosság");});
test("kamasztestet -> kamasztest", function() {deepEqual( Stem("kamasztestet"), "kamasztest");});
test("kamaszéveimről -> kamaszév", function() {deepEqual( Stem("kamaszéveimről"), "kamaszév");});
test("kamaszévek -> kamaszév", function() {deepEqual( Stem("kamaszévek"), "kamaszév");});
test("kamatadóra -> kamatadó", function() {deepEqual( Stem("kamatadóra"), "kamatadó");});
test("kamatcsökkentés -> kamatcsökkentés", function() {deepEqual( Stem("kamatcsökkentés"), "kamatcsökkentés");});
test("kamatcsökkentései -> kamatcsökkentés", function() {deepEqual( Stem("kamatcsökkentései"), "kamatcsökkentés");});
test("kamatcsökkentést -> kamatcsökkentés", function() {deepEqual( Stem("kamatcsökkentést"), "kamatcsökkentés");});
test("kamatcsökkentési -> kamatcsökkentés", function() {deepEqual( Stem("kamatcsökkentési"), "kamatcsökkentés");});
test("kamatfeltételein -> kamatfeltétel", function() {deepEqual( Stem("kamatfeltételein"), "kamatfeltétel");});
test("kamatfizetés -> kamatfizetés", function() {deepEqual( Stem("kamatfizetés"), "kamatfizetés");});
test("kamatfizetésre -> kamatfizetés", function() {deepEqual( Stem("kamatfizetésre"), "kamatfizetés");});
test("kamatforrása -> kamatforrás", function() {deepEqual( Stem("kamatforrása"), "kamatforrás");});
test("kamatlefaragásnak -> kamatlefaragás", function() {deepEqual( Stem("kamatlefaragásnak"), "kamatlefaragás");});
test("kamatleolvadásra -> kamatleolvadás", function() {deepEqual( Stem("kamatleolvadásra"), "kamatleolvadás");});
test("kamatleszállításra -> kamatleszállítás", function() {deepEqual( Stem("kamatleszállításra"), "kamatleszállítás");});
test("kamatlába -> kamatl", function() {deepEqual( Stem("kamatlába"), "kamatl");});
test("kamatlábak -> kamatláb", function() {deepEqual( Stem("kamatlábak"), "kamatláb");});
test("kamatlábakat -> kamatláb", function() {deepEqual( Stem("kamatlábakat"), "kamatláb");});
test("kamatlábat -> kamatláb", function() {deepEqual( Stem("kamatlábat"), "kamatláb");});
test("kamatlábát -> kamatláb", function() {deepEqual( Stem("kamatlábát"), "kamatláb");});
test("kamatmarzsok -> kamatmarzs", function() {deepEqual( Stem("kamatmarzsok"), "kamatmarzs");});
test("kamatmentesen -> kamatmentes", function() {deepEqual( Stem("kamatmentesen"), "kamatmentes");});
test("kamatmérséklésnek -> kamatmérséklés", function() {deepEqual( Stem("kamatmérséklésnek"), "kamatmérséklés");});
test("kamat -> kam", function() {deepEqual( Stem("kamat"), "kam");});
test("kamata -> kamat", function() {deepEqual( Stem("kamata"), "kamat");});
test("kamatai -> kamat", function() {deepEqual( Stem("kamatai"), "kamat");});
test("kamatait -> kamat", function() {deepEqual( Stem("kamatait"), "kamat");});
test("kamataiból -> kamat", function() {deepEqual( Stem("kamataiból"), "kamat");});
test("kamatnál -> kamat", function() {deepEqual( Stem("kamatnál"), "kamat");});
test("kamatok -> kamat", function() {deepEqual( Stem("kamatok"), "kamat");});
test("kamatokat -> kamat", function() {deepEqual( Stem("kamatokat"), "kamat");});
test("kamatokhoz -> kamat", function() {deepEqual( Stem("kamatokhoz"), "kamat");});
test("kamatokkal -> kamat", function() {deepEqual( Stem("kamatokkal"), "kamat");});
test("kamaton -> kamat", function() {deepEqual( Stem("kamaton"), "kamat");});
test("kamatot -> kamat", function() {deepEqual( Stem("kamatot"), "kamat");});
test("kamatra -> kamat", function() {deepEqual( Stem("kamatra"), "kamat");});
test("kamattal -> kam", function() {deepEqual( Stem("kamattal"), "kam");});
test("kamatának -> kamat", function() {deepEqual( Stem("kamatának"), "kamat");});
test("kamatát -> kamat", function() {deepEqual( Stem("kamatát"), "kamat");});
test("kamatostul -> kamatost", function() {deepEqual( Stem("kamatostul"), "kamatost");});
test("kamatostól -> kamatos", function() {deepEqual( Stem("kamatostól"), "kamatos");});
test("kamatozik -> kamatoz", function() {deepEqual( Stem("kamatozik"), "kamatoz");});
test("kamatozott -> kamatozot", function() {deepEqual( Stem("kamatozott"), "kamatozot");});
test("kamatoztathatja -> kamatoztathat", function() {deepEqual( Stem("kamatoztathatja"), "kamatoztathat");});
test("kamatoztathatjuk -> kamatoztathat", function() {deepEqual( Stem("kamatoztathatjuk"), "kamatoztathat");});
test("kamatoztatni -> kamatoztatn", function() {deepEqual( Stem("kamatoztatni"), "kamatoztatn");});
test("kamatoztatnám -> kamatoztatna", function() {deepEqual( Stem("kamatoztatnám"), "kamatoztatna");});
test("kamatoztatta -> kamatoztatt", function() {deepEqual( Stem("kamatoztatta"), "kamatoztatt");});
test("kamatozású -> kamatozású", function() {deepEqual( Stem("kamatozású"), "kamatozású");});
test("kamatozó -> kamatozó", function() {deepEqual( Stem("kamatozó"), "kamatozó");});
test("kamatpolitika -> kamatpolit", function() {deepEqual( Stem("kamatpolitika"), "kamatpolit");});
test("kamatszint -> kamatszin", function() {deepEqual( Stem("kamatszint"), "kamatszin");});
test("kamatszintet -> kamatszint", function() {deepEqual( Stem("kamatszintet"), "kamatszint");});
test("kamatszintjét -> kamatszint", function() {deepEqual( Stem("kamatszintjét"), "kamatszint");});
test("kamattartalmú -> kamattartalmú", function() {deepEqual( Stem("kamattartalmú"), "kamattartalmú");});
test("kamatteher -> kamatteher", function() {deepEqual( Stem("kamatteher"), "kamatteher");});
test("kamatterhei -> kamatterh", function() {deepEqual( Stem("kamatterhei"), "kamatterh");});
test("kamatterhek -> kamatterh", function() {deepEqual( Stem("kamatterhek"), "kamatterh");});
test("kamattámogatás -> kamattámogatás", function() {deepEqual( Stem("kamattámogatás"), "kamattámogatás");});
test("kamattámogatással -> kamattámogatás", function() {deepEqual( Stem("kamattámogatással"), "kamattámogatás");});
test("kamattámogatást -> kamattámogatás", function() {deepEqual( Stem("kamattámogatást"), "kamattámogatás");});
test("kamattámogatású -> kamattámogatású", function() {deepEqual( Stem("kamattámogatású"), "kamattámogatású");});
test("kamatvágásával -> kamatvágás", function() {deepEqual( Stem("kamatvágásával"), "kamatvágás");});
test("kamerahasználat -> kamerahasznál", function() {deepEqual( Stem("kamerahasználat"), "kamerahasznál");});
test("kamerába -> kamer", function() {deepEqual( Stem("kamerába"), "kamer");});
test("kamera -> kam", function() {deepEqual( Stem("kamera"), "kam");});
test("kamerából -> kamer", function() {deepEqual( Stem("kamerából"), "kamer");});
test("kamerájával -> kamerá", function() {deepEqual( Stem("kamerájával"), "kamerá");});
test("kamerák -> kamera", function() {deepEqual( Stem("kamerák"), "kamera");});
test("kamerákból -> kamera", function() {deepEqual( Stem("kamerákból"), "kamera");});
test("kamerákkal -> kamera", function() {deepEqual( Stem("kamerákkal"), "kamera");});
test("kamerákra -> kamera", function() {deepEqual( Stem("kamerákra"), "kamera");});
test("kamerának -> kamer", function() {deepEqual( Stem("kamerának"), "kamer");});
test("kamerát -> kamer", function() {deepEqual( Stem("kamerát"), "kamer");});
test("kamerával -> kamer", function() {deepEqual( Stem("kamerával"), "kamer");});
test("kamerás -> kamerás", function() {deepEqual( Stem("kamerás"), "kamerás");});
test("kamerásítása -> kamerásítás", function() {deepEqual( Stem("kamerásítása"), "kamerásítás");});
test("kamerázni -> kamerázn", function() {deepEqual( Stem("kamerázni"), "kamerázn");});
test("kamerázott -> kamerázot", function() {deepEqual( Stem("kamerázott"), "kamerázot");});
test("kamioncsordát -> kamioncsord", function() {deepEqual( Stem("kamioncsordát"), "kamioncsord");});
test("kamion -> kam", function() {deepEqual( Stem("kamion"), "kam");});
test("kamionba -> kamion", function() {deepEqual( Stem("kamionba"), "kamion");});
test("kamionban -> kamion", function() {deepEqual( Stem("kamionban"), "kamion");});
test("kamionok -> kamion", function() {deepEqual( Stem("kamionok"), "kamion");});
test("kamionokat -> kamion", function() {deepEqual( Stem("kamionokat"), "kamion");});
test("kamionokra -> kamion", function() {deepEqual( Stem("kamionokra"), "kamion");});
test("kamionos -> kamionos", function() {deepEqual( Stem("kamionos"), "kamionos");});
test("kamionparádén -> kamionparád", function() {deepEqual( Stem("kamionparádén"), "kamionparád");});
test("kamionsofőrnek -> kamionsofőr", function() {deepEqual( Stem("kamionsofőrnek"), "kamionsofőr");});
test("kamkorderek -> kamkorder", function() {deepEqual( Stem("kamkorderek"), "kamkorder");});
test("kampány -> kampány", function() {deepEqual( Stem("kampány"), "kampány");});
test("kampánya -> kampány", function() {deepEqual( Stem("kampánya"), "kampány");});
test("kampányokat -> kampány", function() {deepEqual( Stem("kampányokat"), "kampány");});
test("kampányra -> kampány", function() {deepEqual( Stem("kampányra"), "kampány");});
test("kampányról -> kampány", function() {deepEqual( Stem("kampányról"), "kampány");});
test("kampányt -> kampány", function() {deepEqual( Stem("kampányt"), "kampány");});
test("kampányának -> kampány", function() {deepEqual( Stem("kampányának"), "kampány");});
test("kampányát -> kampány", function() {deepEqual( Stem("kampányát"), "kampány");});
test("kampányfogásként -> kampányfogás", function() {deepEqual( Stem("kampányfogásként"), "kampányfogás");});
test("kampányolnia -> kampányoln", function() {deepEqual( Stem("kampányolnia"), "kampányoln");});
test("kampón -> kampó", function() {deepEqual( Stem("kampón"), "kampó");});
test("kampós -> kampós", function() {deepEqual( Stem("kampós"), "kampós");});
test("kamrába -> kamr", function() {deepEqual( Stem("kamrába"), "kamr");});
test("kamrában -> kamr", function() {deepEqual( Stem("kamrában"), "kamr");});
test("kamrák -> kamra", function() {deepEqual( Stem("kamrák"), "kamra");});
test("kanadai -> kanad", function() {deepEqual( Stem("kanadai"), "kanad");});
test("kanalas -> kanalas", function() {deepEqual( Stem("kanalas"), "kanalas");});
test("kanalazták -> kanalazta", function() {deepEqual( Stem("kanalazták"), "kanalazta");});
test("kanasztáztunk -> kanasztázt", function() {deepEqual( Stem("kanasztáztunk"), "kanasztázt");});
test("kancellári -> kancellár", function() {deepEqual( Stem("kancellári"), "kancellár");});
test("kancellária -> kancellár", function() {deepEqual( Stem("kancellária"), "kancellár");});
test("kancellárián -> kancellár", function() {deepEqual( Stem("kancellárián"), "kancellár");});
test("kancellár -> kancellár", function() {deepEqual( Stem("kancellár"), "kancellár");});
test("kancellárja -> kancellár", function() {deepEqual( Stem("kancellárja"), "kancellár");});
test("kancellárjának -> kancellár", function() {deepEqual( Stem("kancellárjának"), "kancellár");});
test("kancellárt -> kancellár", function() {deepEqual( Stem("kancellárt"), "kancellár");});
test("kancellárénál -> kancellár", function() {deepEqual( Stem("kancellárénál"), "kancellár");});
test("kancsóban -> kancsó", function() {deepEqual( Stem("kancsóban"), "kancsó");});
test("kancának -> kanc", function() {deepEqual( Stem("kancának"), "kanc");});
test("kancára -> kanc", function() {deepEqual( Stem("kancára"), "kanc");});
test("kancával -> kanc", function() {deepEqual( Stem("kancával"), "kanc");});
test("kandalló -> kandalló", function() {deepEqual( Stem("kandalló"), "kandalló");});
test("kandallók -> kandalló", function() {deepEqual( Stem("kandallók"), "kandalló");});
test("kandallópárkányon -> kandallópárkány", function() {deepEqual( Stem("kandallópárkányon"), "kandallópárkány");});
test("kandikált -> kandikál", function() {deepEqual( Stem("kandikált"), "kandikál");});
test("kandúrt -> kandúr", function() {deepEqual( Stem("kandúrt"), "kandúr");});
test("kannácskák -> kannácska", function() {deepEqual( Stem("kannácskák"), "kannácska");});
test("kannácskákat -> kannácska", function() {deepEqual( Stem("kannácskákat"), "kannácska");});
test("kanna -> kann", function() {deepEqual( Stem("kanna"), "kann");});
test("kannába -> kann", function() {deepEqual( Stem("kannába"), "kann");});
test("kannák -> kanna", function() {deepEqual( Stem("kannák"), "kanna");});
test("kannákban -> kanna", function() {deepEqual( Stem("kannákban"), "kanna");});
test("kannákkal -> kanna", function() {deepEqual( Stem("kannákkal"), "kanna");});
test("kannát -> kann", function() {deepEqual( Stem("kannát"), "kann");});
test("kant -> kan", function() {deepEqual( Stem("kant"), "kan");});
test("kantin -> kant", function() {deepEqual( Stem("kantin"), "kant");});
test("kantinba -> kantin", function() {deepEqual( Stem("kantinba"), "kantin");});
test("kantinban -> kantin", function() {deepEqual( Stem("kantinban"), "kantin");});
test("kantinbeli -> kantinbel", function() {deepEqual( Stem("kantinbeli"), "kantinbel");});
test("kantonizáció -> kantonizáció", function() {deepEqual( Stem("kantonizáció"), "kantonizáció");});
test("kantonizálását -> kantonizálás", function() {deepEqual( Stem("kantonizálását"), "kantonizálás");});
test("kantonoknak -> kanton", function() {deepEqual( Stem("kantonoknak"), "kanton");});
test("kanton -> kant", function() {deepEqual( Stem("kanton"), "kant");});
test("kantonokra -> kanton", function() {deepEqual( Stem("kantonokra"), "kanton");});
test("kantonra -> kanton", function() {deepEqual( Stem("kantonra"), "kanton");});
test("kantárt -> kantár", function() {deepEqual( Stem("kantárt"), "kantár");});
test("kantáták -> kantáta", function() {deepEqual( Stem("kantáták"), "kantáta");});
test("kanyar -> kanyar", function() {deepEqual( Stem("kanyar"), "kanyar");});
test("kanyarban -> kanyar", function() {deepEqual( Stem("kanyarban"), "kanyar");});
test("kanyargó -> kanyargó", function() {deepEqual( Stem("kanyargó"), "kanyargó");});
test("kanyargós -> kanyargós", function() {deepEqual( Stem("kanyargós"), "kanyargós");});
test("kanyargósak -> kanyargós", function() {deepEqual( Stem("kanyargósak"), "kanyargós");});
test("kanyarodik -> kanyarod", function() {deepEqual( Stem("kanyarodik"), "kanyarod");});
test("kanyarodjunk -> kanyarodj", function() {deepEqual( Stem("kanyarodjunk"), "kanyarodj");});
test("kanyarodni -> kanyarodn", function() {deepEqual( Stem("kanyarodni"), "kanyarodn");});
test("kanyarodott -> kanyarodot", function() {deepEqual( Stem("kanyarodott"), "kanyarodot");});
test("kanyarodtak -> kanyarodt", function() {deepEqual( Stem("kanyarodtak"), "kanyarodt");});
test("kanyarokat -> kanyar", function() {deepEqual( Stem("kanyarokat"), "kanyar");});
test("kanyarodtunk -> kanyarodt", function() {deepEqual( Stem("kanyarodtunk"), "kanyarodt");});
test("kanyarodva -> kanyarodv", function() {deepEqual( Stem("kanyarodva"), "kanyarodv");});
test("kanyarodásnál -> kanyarodás", function() {deepEqual( Stem("kanyarodásnál"), "kanyarodás");});
test("kanyarulatnál -> kanyarulat", function() {deepEqual( Stem("kanyarulatnál"), "kanyarulat");});
test("kanyarítja -> kanyarít", function() {deepEqual( Stem("kanyarítja"), "kanyarít");});
test("kanyarót -> kanyaró", function() {deepEqual( Stem("kanyarót"), "kanyaró");});
test("kanál -> ka", function() {deepEqual( Stem("kanál"), "ka");});
test("kanala -> kanal", function() {deepEqual( Stem("kanala"), "kanal");});
test("kanalak -> kanal", function() {deepEqual( Stem("kanalak"), "kanal");});
test("kanalat -> kanal", function() {deepEqual( Stem("kanalat"), "kanal");});
test("kanalát -> kanal", function() {deepEqual( Stem("kanalát"), "kanal");});
test("kanállal -> ka", function() {deepEqual( Stem("kanállal"), "ka");});
test("kanálért -> kanál", function() {deepEqual( Stem("kanálért"), "kanál");});
test("kaotikus -> kaotikus", function() {deepEqual( Stem("kaotikus"), "kaotikus");});
test("kapacitás -> kapacitás", function() {deepEqual( Stem("kapacitás"), "kapacitás");});
test("kapacitása -> kapacitás", function() {deepEqual( Stem("kapacitása"), "kapacitás");});
test("kapacitásaikat -> kapacitás", function() {deepEqual( Stem("kapacitásaikat"), "kapacitás");});
test("kapacitásait -> kapacitás", function() {deepEqual( Stem("kapacitásait"), "kapacitás");});
test("kapacitásból -> kapacitás", function() {deepEqual( Stem("kapacitásból"), "kapacitás");});
test("kapacitásig -> kapacitás", function() {deepEqual( Stem("kapacitásig"), "kapacitás");});
test("kapacitásnak -> kapacitás", function() {deepEqual( Stem("kapacitásnak"), "kapacitás");});
test("kapacitással -> kapacitás", function() {deepEqual( Stem("kapacitással"), "kapacitás");});
test("kapacitást -> kapacitás", function() {deepEqual( Stem("kapacitást"), "kapacitás");});
test("kapacitásukkal -> kapacitás", function() {deepEqual( Stem("kapacitásukkal"), "kapacitás");});
test("kapacitásunk -> kapacitás", function() {deepEqual( Stem("kapacitásunk"), "kapacitás");});
test("kapacitásának -> kapacitás", function() {deepEqual( Stem("kapacitásának"), "kapacitás");});
test("kapacitásáról -> kapacitás", function() {deepEqual( Stem("kapacitásáról"), "kapacitás");});
test("kapacitását -> kapacitás", function() {deepEqual( Stem("kapacitását"), "kapacitás");});
test("kapacitásától -> kapacitás", function() {deepEqual( Stem("kapacitásától"), "kapacitás");});
test("kapacitásért -> kapacitás", function() {deepEqual( Stem("kapacitásért"), "kapacitás");});
test("kapacitásfüggő -> kapacitásfüggő", function() {deepEqual( Stem("kapacitásfüggő"), "kapacitásfüggő");});
test("kapacitásfüggően -> kapacitásfüggő", function() {deepEqual( Stem("kapacitásfüggően"), "kapacitásfüggő");});
test("kapacitásigény -> kapacitásigény", function() {deepEqual( Stem("kapacitásigény"), "kapacitásigény");});
test("kapacitáskihasználatlanság -> kapacitáskihasználatlanság", function() {deepEqual( Stem("kapacitáskihasználatlanság"), "kapacitáskihasználatlanság");});
test("kapacitásnövelése -> kapacitásnövelés", function() {deepEqual( Stem("kapacitásnövelése"), "kapacitásnövelés");});
test("kapacitáspályázatán -> kapacitáspályázat", function() {deepEqual( Stem("kapacitáspályázatán"), "kapacitáspályázat");});
test("kapacitástervezés -> kapacitástervezés", function() {deepEqual( Stem("kapacitástervezés"), "kapacitástervezés");});
test("kapacitású -> kapacitású", function() {deepEqual( Stem("kapacitású"), "kapacitású");});
test("kaparnának -> kaparn", function() {deepEqual( Stem("kaparnának"), "kaparn");});
test("kapart -> kapar", function() {deepEqual( Stem("kapart"), "kapar");});
test("kapar -> kapar", function() {deepEqual( Stem("kapar"), "kapar");});
test("kaparta -> kapart", function() {deepEqual( Stem("kaparta"), "kapart");});
test("kapartak -> kapart", function() {deepEqual( Stem("kapartak"), "kapart");});
test("kaparva -> kaparv", function() {deepEqual( Stem("kaparva"), "kaparv");});
test("kaparászott -> kaparászot", function() {deepEqual( Stem("kaparászott"), "kaparászot");});
test("kapaszkodik -> kapaszkod", function() {deepEqual( Stem("kapaszkodik"), "kapaszkod");});
test("kapaszkodni -> kapaszkodn", function() {deepEqual( Stem("kapaszkodni"), "kapaszkodn");});
test("kapaszkodott -> kapaszkodot", function() {deepEqual( Stem("kapaszkodott"), "kapaszkodot");});
test("kapaszkodtam -> kapaszkodt", function() {deepEqual( Stem("kapaszkodtam"), "kapaszkodt");});
test("kapaszkodunk -> kapaszkod", function() {deepEqual( Stem("kapaszkodunk"), "kapaszkod");});
test("kapaszkodva -> kapaszkodv", function() {deepEqual( Stem("kapaszkodva"), "kapaszkodv");});
test("kapaszkodásra -> kapaszkodás", function() {deepEqual( Stem("kapaszkodásra"), "kapaszkodás");});
test("kapaszkodó -> kapaszkodó", function() {deepEqual( Stem("kapaszkodó"), "kapaszkodó");});
test("kapatos -> kapatos", function() {deepEqual( Stem("kapatos"), "kapatos");});
test("kapcsait -> kapcs", function() {deepEqual( Stem("kapcsait"), "kapcs");});
test("kapcsok -> kapcs", function() {deepEqual( Stem("kapcsok"), "kapcs");});
test("kapcsokat -> kapcs", function() {deepEqual( Stem("kapcsokat"), "kapcs");});
test("kapcsolatbontás -> kapcsolatbontás", function() {deepEqual( Stem("kapcsolatbontás"), "kapcsolatbontás");});
test("kapcsolatfelvétel -> kapcsolatfelvétel", function() {deepEqual( Stem("kapcsolatfelvétel"), "kapcsolatfelvétel");});
test("kapcsolatfelvételre -> kapcsolatfelvétel", function() {deepEqual( Stem("kapcsolatfelvételre"), "kapcsolatfelvétel");});
test("kapcsolatfelvételt -> kapcsolatfelvétel", function() {deepEqual( Stem("kapcsolatfelvételt"), "kapcsolatfelvétel");});
test("kapcsolatfelépítést -> kapcsolatfelépítés", function() {deepEqual( Stem("kapcsolatfelépítést"), "kapcsolatfelépítés");});
test("kapcsolati -> kapcsolat", function() {deepEqual( Stem("kapcsolati"), "kapcsolat");});
test("kapcsolatmegosztás -> kapcsolatmegosztás", function() {deepEqual( Stem("kapcsolatmegosztás"), "kapcsolatmegosztás");});
test("kapcsolatmegosztáshoz -> kapcsolatmegosztás", function() {deepEqual( Stem("kapcsolatmegosztáshoz"), "kapcsolatmegosztás");});
test("kapcsolatmegosztásnak -> kapcsolatmegosztás", function() {deepEqual( Stem("kapcsolatmegosztásnak"), "kapcsolatmegosztás");});
test("kapcsolatnélküli -> kapcsolatnélkül", function() {deepEqual( Stem("kapcsolatnélküli"), "kapcsolatnélkül");});
test("kapcsolatod -> kapcsolat", function() {deepEqual( Stem("kapcsolatod"), "kapcsolat");});
test("kapcsolatok -> kapcsolat", function() {deepEqual( Stem("kapcsolatok"), "kapcsolat");});
test("kapcsolatok -> kapcsolat", function() {deepEqual( Stem("kapcsolatok"), "kapcsolat");});
test("kapcsolatokat -> kapcsolat", function() {deepEqual( Stem("kapcsolatokat"), "kapcsolat");});
test("kapcsolatokban -> kapcsolat", function() {deepEqual( Stem("kapcsolatokban"), "kapcsolat");});
test("kapcsolatokból -> kapcsolat", function() {deepEqual( Stem("kapcsolatokból"), "kapcsolat");});
test("kapcsolatokhoz -> kapcsolat", function() {deepEqual( Stem("kapcsolatokhoz"), "kapcsolat");});
test("kapcsolatokkal -> kapcsolat", function() {deepEqual( Stem("kapcsolatokkal"), "kapcsolat");});
test("kapcsolatoknak -> kapcsolat", function() {deepEqual( Stem("kapcsolatoknak"), "kapcsolat");});
test("kapcsolatokon -> kapcsolat", function() {deepEqual( Stem("kapcsolatokon"), "kapcsolat");});
test("kapcsolatokra -> kapcsolat", function() {deepEqual( Stem("kapcsolatokra"), "kapcsolat");});
test("kapcsolatokról -> kapcsolat", function() {deepEqual( Stem("kapcsolatokról"), "kapcsolat");});
test("kapcsolatoké -> kapcsolat", function() {deepEqual( Stem("kapcsolatoké"), "kapcsolat");});
test("kapcsolatom -> kapcsolat", function() {deepEqual( Stem("kapcsolatom"), "kapcsolat");});
test("kapcsolatomat -> kapcsolat", function() {deepEqual( Stem("kapcsolatomat"), "kapcsolat");});
test("kapcsolaton -> kapcsolat", function() {deepEqual( Stem("kapcsolaton"), "kapcsolat");});
test("kapcsolatonként -> kapcsolat", function() {deepEqual( Stem("kapcsolatonként"), "kapcsolat");});
test("kapcsolat -> kapcsol", function() {deepEqual( Stem("kapcsolat"), "kapcsol");});
test("kapcsolata -> kapcsolat", function() {deepEqual( Stem("kapcsolata"), "kapcsolat");});
test("kapcsolatai -> kapcsolat", function() {deepEqual( Stem("kapcsolatai"), "kapcsolat");});
test("kapcsolataiból -> kapcsolat", function() {deepEqual( Stem("kapcsolataiból"), "kapcsolat");});
test("kapcsolatainkat -> kapcsolat", function() {deepEqual( Stem("kapcsolatainkat"), "kapcsolat");});
test("kapcsolatairól -> kapcsolat", function() {deepEqual( Stem("kapcsolatairól"), "kapcsolat");});
test("kapcsolatait -> kapcsolat", function() {deepEqual( Stem("kapcsolatait"), "kapcsolat");});
test("kapcsolatba -> kapcsolat", function() {deepEqual( Stem("kapcsolatba"), "kapcsolat");});
test("kapcsolatban -> kapcsolat", function() {deepEqual( Stem("kapcsolatban"), "kapcsolat");});
test("kapcsolatból -> kapcsolat", function() {deepEqual( Stem("kapcsolatból"), "kapcsolat");});
test("kapcsolathoz -> kapcsolat", function() {deepEqual( Stem("kapcsolathoz"), "kapcsolat");});
test("kapcsolatként -> kapcsolat", function() {deepEqual( Stem("kapcsolatként"), "kapcsolat");});
test("kapcsolatnak -> kapcsolat", function() {deepEqual( Stem("kapcsolatnak"), "kapcsolat");});
test("kapcsolatot -> kapcsolat", function() {deepEqual( Stem("kapcsolatot"), "kapcsolat");});
test("kapcsolatotok -> kapcsolatot", function() {deepEqual( Stem("kapcsolatotok"), "kapcsolatot");});
test("kapcsolatra -> kapcsolat", function() {deepEqual( Stem("kapcsolatra"), "kapcsolat");});
test("kapcsolatról -> kapcsolat", function() {deepEqual( Stem("kapcsolatról"), "kapcsolat");});
test("kapcsolattal -> kapcsol", function() {deepEqual( Stem("kapcsolattal"), "kapcsol");});
test("kapcsolatuk -> kapcsolat", function() {deepEqual( Stem("kapcsolatuk"), "kapcsolat");});
test("kapcsolatukat -> kapcsolat", function() {deepEqual( Stem("kapcsolatukat"), "kapcsolat");});
test("kapcsolatunk -> kapcsolat", function() {deepEqual( Stem("kapcsolatunk"), "kapcsolat");});
test("kapcsolatához -> kapcsolat", function() {deepEqual( Stem("kapcsolatához"), "kapcsolat");});
test("kapcsolatára -> kapcsolat", function() {deepEqual( Stem("kapcsolatára"), "kapcsolat");});
test("kapcsolatát -> kapcsolat", function() {deepEqual( Stem("kapcsolatát"), "kapcsolat");});
test("kapcsolatával -> kapcsolat", function() {deepEqual( Stem("kapcsolatával"), "kapcsolat");});
test("kapcsolatorientált -> kapcsolatorientál", function() {deepEqual( Stem("kapcsolatorientált"), "kapcsolatorientál");});
test("kapcsolatos -> kapcsolatos", function() {deepEqual( Stem("kapcsolatos"), "kapcsolatos");});
test("kapcsolatosak -> kapcsolatos", function() {deepEqual( Stem("kapcsolatosak"), "kapcsolatos");});
test("kapcsolatosan -> kapcsolatos", function() {deepEqual( Stem("kapcsolatosan"), "kapcsolatos");});
test("kapcsolatosban -> kapcsolatos", function() {deepEqual( Stem("kapcsolatosban"), "kapcsolatos");});
test("kapcsolatrendszer -> kapcsolatrendszer", function() {deepEqual( Stem("kapcsolatrendszer"), "kapcsolatrendszer");});
test("kapcsolatrendszere -> kapcsolatrendsz", function() {deepEqual( Stem("kapcsolatrendszere"), "kapcsolatrendsz");});
test("kapcsolatrendszert -> kapcsolatrendszer", function() {deepEqual( Stem("kapcsolatrendszert"), "kapcsolatrendszer");});
test("kapcsolatrendszerük -> kapcsolatrendszer", function() {deepEqual( Stem("kapcsolatrendszerük"), "kapcsolatrendszer");});
test("kapcsolattartás -> kapcsolattartás", function() {deepEqual( Stem("kapcsolattartás"), "kapcsolattartás");});
test("kapcsolattartásaival -> kapcsolattartás", function() {deepEqual( Stem("kapcsolattartásaival"), "kapcsolattartás");});
test("kapcsolattartáshoz -> kapcsolattartás", function() {deepEqual( Stem("kapcsolattartáshoz"), "kapcsolattartás");});
test("kapcsolattartó -> kapcsolattartó", function() {deepEqual( Stem("kapcsolattartó"), "kapcsolattartó");});
test("kapcsolatteremtés -> kapcsolatteremtés", function() {deepEqual( Stem("kapcsolatteremtés"), "kapcsolatteremtés");});
test("kapcsolatteremtésre -> kapcsolatteremtés", function() {deepEqual( Stem("kapcsolatteremtésre"), "kapcsolatteremtés");});
test("kapcsolattípus -> kapcsolattípus", function() {deepEqual( Stem("kapcsolattípus"), "kapcsolattípus");});
test("kapcsolattípusok -> kapcsolattípus", function() {deepEqual( Stem("kapcsolattípusok"), "kapcsolattípus");});
test("kapcsolattípusra -> kapcsolattípus", function() {deepEqual( Stem("kapcsolattípusra"), "kapcsolattípus");});
test("kapcsolgatni -> kapcsolgatn", function() {deepEqual( Stem("kapcsolgatni"), "kapcsolgatn");});
test("kapcsolhatja -> kapcsolhat", function() {deepEqual( Stem("kapcsolhatja"), "kapcsolhat");});
test("kapcsolhatunk -> kapcsolhat", function() {deepEqual( Stem("kapcsolhatunk"), "kapcsolhat");});
test("kapcsolható -> kapcsolható", function() {deepEqual( Stem("kapcsolható"), "kapcsolható");});
test("kapcsolhatók -> kapcsolható", function() {deepEqual( Stem("kapcsolhatók"), "kapcsolható");});
test("kapcsolhatóságára -> kapcsolhatóság", function() {deepEqual( Stem("kapcsolhatóságára"), "kapcsolhatóság");});
test("kapcsolja -> kapcsol", function() {deepEqual( Stem("kapcsolja"), "kapcsol");});
test("kapcsoljanak -> kapcsol", function() {deepEqual( Stem("kapcsoljanak"), "kapcsol");});
test("kapcsol -> kapcsol", function() {deepEqual( Stem("kapcsol"), "kapcsol");});
test("kapcsoljuk -> kapcsol", function() {deepEqual( Stem("kapcsoljuk"), "kapcsol");});
test("kapcsolják -> kapcsolja", function() {deepEqual( Stem("kapcsolják"), "kapcsolja");});
test("kapcsolni -> kapcsoln", function() {deepEqual( Stem("kapcsolni"), "kapcsoln");});
test("kapcsolnom -> kapcsoln", function() {deepEqual( Stem("kapcsolnom"), "kapcsoln");});
test("kapcsolnunk -> kapcsoln", function() {deepEqual( Stem("kapcsolnunk"), "kapcsoln");});
test("kapcsoltam -> kapcsolt", function() {deepEqual( Stem("kapcsoltam"), "kapcsolt");});
test("kapcsoltuk -> kapcsolt", function() {deepEqual( Stem("kapcsoltuk"), "kapcsolt");});
test("kapcsolták -> kapcsolta", function() {deepEqual( Stem("kapcsolták"), "kapcsolta");});
test("kapcsolunk -> kapcsol", function() {deepEqual( Stem("kapcsolunk"), "kapcsol");});
test("kapcsolt -> kapcsol", function() {deepEqual( Stem("kapcsolt"), "kapcsol");});
test("kapcsoltlengőkaros -> kapcsoltlengőkaros", function() {deepEqual( Stem("kapcsoltlengőkaros"), "kapcsoltlengőkaros");});
test("kapcsolva -> kapcsolv", function() {deepEqual( Stem("kapcsolva"), "kapcsolv");});
test("kapcsolása -> kapcsolás", function() {deepEqual( Stem("kapcsolása"), "kapcsolás");});
test("kapcsoláson -> kapcsolás", function() {deepEqual( Stem("kapcsoláson"), "kapcsolás");});
test("kapcsolásra -> kapcsolás", function() {deepEqual( Stem("kapcsolásra"), "kapcsolás");});
test("kapcsolóberendezésekkel -> kapcsolóberendezés", function() {deepEqual( Stem("kapcsolóberendezésekkel"), "kapcsolóberendezés");});
test("kapcsolódhassanak -> kapcsolódhass", function() {deepEqual( Stem("kapcsolódhassanak"), "kapcsolódhass");});
test("kapcsolódhasson -> kapcsolódhass", function() {deepEqual( Stem("kapcsolódhasson"), "kapcsolódhass");});
test("kapcsolódhassunk -> kapcsolódhass", function() {deepEqual( Stem("kapcsolódhassunk"), "kapcsolódhass");});
test("kapcsolódhat -> kapcsolódh", function() {deepEqual( Stem("kapcsolódhat"), "kapcsolódh");});
test("kapcsolódhatna -> kapcsolódhatn", function() {deepEqual( Stem("kapcsolódhatna"), "kapcsolódhatn");});
test("kapcsolódhatnak -> kapcsolódhat", function() {deepEqual( Stem("kapcsolódhatnak"), "kapcsolódhat");});
test("kapcsolódhattak -> kapcsolódhatt", function() {deepEqual( Stem("kapcsolódhattak"), "kapcsolódhatt");});
test("kapcsolódhatunk -> kapcsolódhat", function() {deepEqual( Stem("kapcsolódhatunk"), "kapcsolódhat");});
test("kapcsolódik -> kapcsolód", function() {deepEqual( Stem("kapcsolódik"), "kapcsolód");});
test("kapcsolódjanak -> kapcsolód", function() {deepEqual( Stem("kapcsolódjanak"), "kapcsolód");});
test("kapcsolódjon -> kapcsolódj", function() {deepEqual( Stem("kapcsolódjon"), "kapcsolódj");});
test("kapcsolódjunk -> kapcsolódj", function() {deepEqual( Stem("kapcsolódjunk"), "kapcsolódj");});
test("kapcsolódna -> kapcsolódn", function() {deepEqual( Stem("kapcsolódna"), "kapcsolódn");});
test("kapcsolódnak -> kapcsoló", function() {deepEqual( Stem("kapcsolódnak"), "kapcsoló");});
test("kapcsolódni -> kapcsolódn", function() {deepEqual( Stem("kapcsolódni"), "kapcsolódn");});
test("kapcsolódnia -> kapcsolódn", function() {deepEqual( Stem("kapcsolódnia"), "kapcsolódn");});
test("kapcsolódniuk -> kapcsolódn", function() {deepEqual( Stem("kapcsolódniuk"), "kapcsolódn");});
test("kapcsolódnunk -> kapcsolódn", function() {deepEqual( Stem("kapcsolódnunk"), "kapcsolódn");});
test("kapcsolódnánk -> kapcsolódna", function() {deepEqual( Stem("kapcsolódnánk"), "kapcsolódna");});
test("kapcsolódottan -> kapcsolódott", function() {deepEqual( Stem("kapcsolódottan"), "kapcsolódott");});
test("kapcsolódtak -> kapcsolódt", function() {deepEqual( Stem("kapcsolódtak"), "kapcsolódt");});
test("kapcsolódtunk -> kapcsolódt", function() {deepEqual( Stem("kapcsolódtunk"), "kapcsolódt");});
test("kapcsolódunk -> kapcsolód", function() {deepEqual( Stem("kapcsolódunk"), "kapcsolód");});
test("kapcsolódott -> kapcsolódot", function() {deepEqual( Stem("kapcsolódott"), "kapcsolódot");});
test("kapcsolódás -> kapcsolódás", function() {deepEqual( Stem("kapcsolódás"), "kapcsolódás");});
test("kapcsolódása -> kapcsolódás", function() {deepEqual( Stem("kapcsolódása"), "kapcsolódás");});
test("kapcsolódáshoz -> kapcsolódás", function() {deepEqual( Stem("kapcsolódáshoz"), "kapcsolódás");});
test("kapcsolódásra -> kapcsolódás", function() {deepEqual( Stem("kapcsolódásra"), "kapcsolódás");});
test("kapcsolódást -> kapcsolódás", function() {deepEqual( Stem("kapcsolódást"), "kapcsolódás");});
test("kapcsolódási -> kapcsolódás", function() {deepEqual( Stem("kapcsolódási"), "kapcsolódás");});
test("kapcsolódó -> kapcsolódó", function() {deepEqual( Stem("kapcsolódó"), "kapcsolódó");});
test("kapcsolódóan -> kapcsolódó", function() {deepEqual( Stem("kapcsolódóan"), "kapcsolódó");});
test("kapcsolóelemeknél -> kapcsolóelem", function() {deepEqual( Stem("kapcsolóelemeknél"), "kapcsolóelem");});
test("kapcsolói -> kapcsoló", function() {deepEqual( Stem("kapcsolói"), "kapcsoló");});
test("kapcsolók -> kapcsoló", function() {deepEqual( Stem("kapcsolók"), "kapcsoló");});
test("kapcsolókat -> kapcsoló", function() {deepEqual( Stem("kapcsolókat"), "kapcsoló");});
test("kapcsoló -> kapcsoló", function() {deepEqual( Stem("kapcsoló"), "kapcsoló");});
test("kapcsolóké -> kapcsoló", function() {deepEqual( Stem("kapcsolóké"), "kapcsoló");});
test("kapcsolót -> kapcsoló", function() {deepEqual( Stem("kapcsolót"), "kapcsoló");});
test("kapcsolóval -> kapcsoló", function() {deepEqual( Stem("kapcsolóval"), "kapcsoló");});
test("kapcsolóközpont -> kapcsolóközpon", function() {deepEqual( Stem("kapcsolóközpont"), "kapcsolóközpon");});
test("kapcsolóközponthoz -> kapcsolóközpont", function() {deepEqual( Stem("kapcsolóközponthoz"), "kapcsolóközpont");});
test("kapcsolóközpontnak -> kapcsolóközpont", function() {deepEqual( Stem("kapcsolóközpontnak"), "kapcsolóközpont");});
test("kapcsolóközpontot -> kapcsolóközpont", function() {deepEqual( Stem("kapcsolóközpontot"), "kapcsolóközpont");});
test("kapcsolómező -> kapcsolómező", function() {deepEqual( Stem("kapcsolómező"), "kapcsolómező");});
test("kapcsolómátrix -> kapcsolómátrix", function() {deepEqual( Stem("kapcsolómátrix"), "kapcsolómátrix");});
test("kapcsolómátrixszal -> kapcsolómátrixszal", function() {deepEqual( Stem("kapcsolómátrixszal"), "kapcsolómátrixszal");});
test("kapcsán -> kapcs", function() {deepEqual( Stem("kapcsán"), "kapcs");});
test("kapdostak -> kapdost", function() {deepEqual( Stem("kapdostak"), "kapdost");});
test("kaphassanak -> kaphass", function() {deepEqual( Stem("kaphassanak"), "kaphass");});
test("kaphasson -> kaphass", function() {deepEqual( Stem("kaphasson"), "kaphass");});
test("kaphat -> kaph", function() {deepEqual( Stem("kaphat"), "kaph");});
test("kaphatja -> kaphat", function() {deepEqual( Stem("kaphatja"), "kaphat");});
test("kaphatjuk -> kaphat", function() {deepEqual( Stem("kaphatjuk"), "kaphat");});
test("kaphatna -> kaphatn", function() {deepEqual( Stem("kaphatna"), "kaphatn");});
test("kaphatnak -> kaphat", function() {deepEqual( Stem("kaphatnak"), "kaphat");});
test("kaphatnák -> kaphatna", function() {deepEqual( Stem("kaphatnák"), "kaphatna");});
test("kaphatnának -> kaphatn", function() {deepEqual( Stem("kaphatnának"), "kaphatn");});
test("kaphatnék -> kaphatne", function() {deepEqual( Stem("kaphatnék"), "kaphatne");});
test("kaphatok -> kaphat", function() {deepEqual( Stem("kaphatok"), "kaphat");});
test("kaphatott -> kaphatot", function() {deepEqual( Stem("kaphatott"), "kaphatot");});
test("kaphattak -> kaphatt", function() {deepEqual( Stem("kaphattak"), "kaphatt");});
test("kaphattam -> kaphatt", function() {deepEqual( Stem("kaphattam"), "kaphatt");});
test("kaphattunk -> kaphatt", function() {deepEqual( Stem("kaphattunk"), "kaphatt");});
test("kaphatunk -> kaphat", function() {deepEqual( Stem("kaphatunk"), "kaphat");});
test("kapható -> kapható", function() {deepEqual( Stem("kapható"), "kapható");});
test("kaphatók -> kapható", function() {deepEqual( Stem("kaphatók"), "kapható");});
test("kapirgáló -> kapirgáló", function() {deepEqual( Stem("kapirgáló"), "kapirgáló");});
test("kapitalista -> kapitalist", function() {deepEqual( Stem("kapitalista"), "kapitalist");});
test("kapitalisták -> kapitalista", function() {deepEqual( Stem("kapitalisták"), "kapitalista");});
test("kapitalistákkal -> kapitalista", function() {deepEqual( Stem("kapitalistákkal"), "kapitalista");});
test("kapitalistáknak -> kapitalista", function() {deepEqual( Stem("kapitalistáknak"), "kapitalista");});
test("kapitalistáké -> kapitalist", function() {deepEqual( Stem("kapitalistáké"), "kapitalist");});
test("kapitalistának -> kapitalist", function() {deepEqual( Stem("kapitalistának"), "kapitalist");});
test("kapitalistát -> kapitalist", function() {deepEqual( Stem("kapitalistát"), "kapitalist");});
test("kapitalistával -> kapitalist", function() {deepEqual( Stem("kapitalistával"), "kapitalist");});
test("kapitalizmus -> kapitalizmus", function() {deepEqual( Stem("kapitalizmus"), "kapitalizmus");});
test("kapitalizmuson -> kapitalizmus", function() {deepEqual( Stem("kapitalizmuson"), "kapitalizmus");});
test("kapitalizációja -> kapitalizáció", function() {deepEqual( Stem("kapitalizációja"), "kapitalizáció");});
test("kapitalizációjú -> kapitalizációjú", function() {deepEqual( Stem("kapitalizációjú"), "kapitalizációjú");});
test("kapitán -> kapit", function() {deepEqual( Stem("kapitán"), "kapit");});
test("kapitánt -> kapit", function() {deepEqual( Stem("kapitánt"), "kapit");});
test("kapitánnyal -> kapitány", function() {deepEqual( Stem("kapitánnyal"), "kapitány");});
test("kapitány -> kapitány", function() {deepEqual( Stem("kapitány"), "kapitány");});
test("kapitánya -> kapitány", function() {deepEqual( Stem("kapitánya"), "kapitány");});
test("kapitányhoz -> kapitány", function() {deepEqual( Stem("kapitányhoz"), "kapitány");});
test("kapitánynak -> kapitány", function() {deepEqual( Stem("kapitánynak"), "kapitány");});
test("kapitánynál -> kapitány", function() {deepEqual( Stem("kapitánynál"), "kapitány");});
test("kapitányok -> kapitány", function() {deepEqual( Stem("kapitányok"), "kapitány");});
test("kapitányra -> kapitány", function() {deepEqual( Stem("kapitányra"), "kapitány");});
test("kapitányt -> kapitány", function() {deepEqual( Stem("kapitányt"), "kapitány");});
test("kapitánytól -> kapitány", function() {deepEqual( Stem("kapitánytól"), "kapitány");});
test("kapitányunkkal -> kapitány", function() {deepEqual( Stem("kapitányunkkal"), "kapitány");});
test("kapitányának -> kapitány", function() {deepEqual( Stem("kapitányának"), "kapitány");});
test("kapitányát -> kapitány", function() {deepEqual( Stem("kapitányát"), "kapitány");});
test("kapitány-kísértet -> kapitány-kísért", function() {deepEqual( Stem("kapitány-kísértet"), "kapitány-kísért");});
test("kapitányi -> kapitány", function() {deepEqual( Stem("kapitányi"), "kapitány");});
test("kapitánykülsejű -> kapitánykülsejű", function() {deepEqual( Stem("kapitánykülsejű"), "kapitánykülsejű");});
test("kapitányos -> kapitányos", function() {deepEqual( Stem("kapitányos"), "kapitányos");});
test("kapitánysapkás -> kapitánysapkás", function() {deepEqual( Stem("kapitánysapkás"), "kapitánysapkás");});
test("kapitányság -> kapitányság", function() {deepEqual( Stem("kapitányság"), "kapitányság");});
test("kapitányságon -> kapitányság", function() {deepEqual( Stem("kapitányságon"), "kapitányság");});
test("kapitányságot -> kapitányság", function() {deepEqual( Stem("kapitányságot"), "kapitányság");});
test("kapitányságvezetők -> kapitányságvezető", function() {deepEqual( Stem("kapitányságvezetők"), "kapitányságvezető");});
test("kapja -> kap", function() {deepEqual( Stem("kapja"), "kap");});
test("kap -> kap", function() {deepEqual( Stem("kap"), "kap");});
test("kapjak -> kapj", function() {deepEqual( Stem("kapjak"), "kapj");});
test("kapjam -> kapj", function() {deepEqual( Stem("kapjam"), "kapj");});
test("kapjanak -> kap", function() {deepEqual( Stem("kapjanak"), "kap");});
test("kapjon -> kapj", function() {deepEqual( Stem("kapjon"), "kapj");});
test("kapjuk -> kap", function() {deepEqual( Stem("kapjuk"), "kap");});
test("kapják -> kapja", function() {deepEqual( Stem("kapják"), "kapja");});
test("kapna -> kapn", function() {deepEqual( Stem("kapna"), "kapn");});
test("kapnak -> kap", function() {deepEqual( Stem("kapnak"), "kap");});
test("kapni -> kapn", function() {deepEqual( Stem("kapni"), "kapn");});
test("kapnia -> kapn", function() {deepEqual( Stem("kapnia"), "kapn");});
test("kapniuk -> kapn", function() {deepEqual( Stem("kapniuk"), "kapn");});
test("kapnunk -> kapn", function() {deepEqual( Stem("kapnunk"), "kapn");});
test("kapná -> kapna", function() {deepEqual( Stem("kapná"), "kapna");});
test("kapnák -> kapna", function() {deepEqual( Stem("kapnák"), "kapna");});
test("kapnának -> kapn", function() {deepEqual( Stem("kapnának"), "kapn");});
test("kapnánk -> kapna", function() {deepEqual( Stem("kapnánk"), "kapna");});
test("kapsz -> kapsz", function() {deepEqual( Stem("kapsz"), "kapsz");});
test("kapta -> kapt", function() {deepEqual( Stem("kapta"), "kapt");});
test("kaptak -> kapt", function() {deepEqual( Stem("kaptak"), "kapt");});
test("kaptam -> kapt", function() {deepEqual( Stem("kaptam"), "kapt");});
test("kaptok -> kapt", function() {deepEqual( Stem("kaptok"), "kapt");});
test("kaptuk -> kapt", function() {deepEqual( Stem("kaptuk"), "kapt");});
test("kaptunk -> kapt", function() {deepEqual( Stem("kaptunk"), "kapt");});
test("kapták -> kapta", function() {deepEqual( Stem("kapták"), "kapta");});
test("kapok -> kap", function() {deepEqual( Stem("kapok"), "kap");});
test("kapom -> kap", function() {deepEqual( Stem("kapom"), "kap");});
test("kapkod -> kap", function() {deepEqual( Stem("kapkod"), "kap");});
test("kapkodjam -> kapkodj", function() {deepEqual( Stem("kapkodjam"), "kapkodj");});
test("kapkodni -> kapkodn", function() {deepEqual( Stem("kapkodni"), "kapkodn");});
test("kapkodnom -> kapkodn", function() {deepEqual( Stem("kapkodnom"), "kapkodn");});
test("kapkodott -> kapkodot", function() {deepEqual( Stem("kapkodott"), "kapkodot");});
test("kapkodta -> kapkodt", function() {deepEqual( Stem("kapkodta"), "kapkodt");});
test("kapkodva -> kapkodv", function() {deepEqual( Stem("kapkodva"), "kapkodv");});
test("kapkodás -> kapkodás", function() {deepEqual( Stem("kapkodás"), "kapkodás");});
test("kapkodó -> kapkodó", function() {deepEqual( Stem("kapkodó"), "kapkodó");});
test("kapocs -> kapocs", function() {deepEqual( Stem("kapocs"), "kapocs");});
test("kapcsot -> kapcs", function() {deepEqual( Stem("kapcsot"), "kapcs");});
test("kapott -> kapot", function() {deepEqual( Stem("kapott"), "kapot");});
test("kapunk -> kap", function() {deepEqual( Stem("kapunk"), "kap");});
test("kaptárakkal -> kaptár", function() {deepEqual( Stem("kaptárakkal"), "kaptár");});
test("kapualjban -> kapualj", function() {deepEqual( Stem("kapualjban"), "kapualj");});
test("kapuboltozat -> kapuboltoz", function() {deepEqual( Stem("kapuboltozat"), "kapuboltoz");});
test("kapucsengő -> kapucsengő", function() {deepEqual( Stem("kapucsengő"), "kapucsengő");});
test("kapucíner -> kapucíner", function() {deepEqual( Stem("kapucíner"), "kapucíner");});
test("kapuhoz -> kapu", function() {deepEqual( Stem("kapuhoz"), "kapu");});
test("kapui -> kapu", function() {deepEqual( Stem("kapui"), "kapu");});
test("kapuik -> kapu", function() {deepEqual( Stem("kapuik"), "kapu");});
test("kapuin -> kapu", function() {deepEqual( Stem("kapuin"), "kapu");});
test("kapuira -> kapu", function() {deepEqual( Stem("kapuira"), "kapu");});
test("kapuit -> kapu", function() {deepEqual( Stem("kapuit"), "kapu");});
test("kapuja -> kapu", function() {deepEqual( Stem("kapuja"), "kapu");});
test("kapujuk -> kapu", function() {deepEqual( Stem("kapujuk"), "kapu");});
test("kapujába -> kapu", function() {deepEqual( Stem("kapujába"), "kapu");});
test("kapujában -> kapu", function() {deepEqual( Stem("kapujában"), "kapu");});
test("kapujából -> kapu", function() {deepEqual( Stem("kapujából"), "kapu");});
test("kapujához -> kapu", function() {deepEqual( Stem("kapujához"), "kapu");});
test("kapuján -> kapu", function() {deepEqual( Stem("kapuján"), "kapu");});
test("kapujának -> kapu", function() {deepEqual( Stem("kapujának"), "kapu");});
test("kapujánál -> kapu", function() {deepEqual( Stem("kapujánál"), "kapu");});
test("kapuját -> kapu", function() {deepEqual( Stem("kapuját"), "kapu");});
test("kapuk -> kap", function() {deepEqual( Stem("kapuk"), "kap");});
test("kapuba -> kapu", function() {deepEqual( Stem("kapuba"), "kapu");});
test("kapu -> kapu", function() {deepEqual( Stem("kapu"), "kapu");});
test("kapuban -> kapu", function() {deepEqual( Stem("kapuban"), "kapu");});
test("kapuból -> kapu", function() {deepEqual( Stem("kapuból"), "kapu");});
test("kapukat -> kap", function() {deepEqual( Stem("kapukat"), "kap");});
test("kapuknál -> kap", function() {deepEqual( Stem("kapuknál"), "kap");});
test("kapukon -> kap", function() {deepEqual( Stem("kapukon"), "kap");});
test("kapun -> kapu", function() {deepEqual( Stem("kapun"), "kapu");});
test("kapunak -> kapu", function() {deepEqual( Stem("kapunak"), "kapu");});
test("kapunál -> kapu", function() {deepEqual( Stem("kapunál"), "kapu");});
test("kapura -> kapu", function() {deepEqual( Stem("kapura"), "kapu");});
test("kaput -> kapu", function() {deepEqual( Stem("kaput"), "kapu");});
test("kapunyílás -> kapunyílás", function() {deepEqual( Stem("kapunyílás"), "kapunyílás");});
test("kapunyílásban -> kapunyílás", function() {deepEqual( Stem("kapunyílásban"), "kapunyílás");});
test("kapus -> kapus", function() {deepEqual( Stem("kapus"), "kapus");});
test("kapusa -> kapus", function() {deepEqual( Stem("kapusa"), "kapus");});
test("kapusait -> kapus", function() {deepEqual( Stem("kapusait"), "kapus");});
test("kapussal -> kapus", function() {deepEqual( Stem("kapussal"), "kapus");});
test("kapust -> kapus", function() {deepEqual( Stem("kapust"), "kapus");});
test("kapusunk -> kapus", function() {deepEqual( Stem("kapusunk"), "kapus");});
test("kapusedzőnek -> kapusedző", function() {deepEqual( Stem("kapusedzőnek"), "kapusedző");});
test("kapuszárnyak -> kapuszárny", function() {deepEqual( Stem("kapuszárnyak"), "kapuszárny");});
test("kaputelefonon -> kaputelefon", function() {deepEqual( Stem("kaputelefonon"), "kaputelefon");});
test("kaputelefonra -> kaputelefon", function() {deepEqual( Stem("kaputelefonra"), "kaputelefon");});
test("kapuzata -> kapuzat", function() {deepEqual( Stem("kapuzata"), "kapuzat");});
test("kapva -> kapv", function() {deepEqual( Stem("kapva"), "kapv");});
test("kapván -> kapv", function() {deepEqual( Stem("kapván"), "kapv");});
test("kapzsi -> kapzs", function() {deepEqual( Stem("kapzsi"), "kapzs");});
test("kapálgatni -> kapálgatn", function() {deepEqual( Stem("kapálgatni"), "kapálgatn");});
test("kapálja -> kapál", function() {deepEqual( Stem("kapálja"), "kapál");});
test("kapálni -> kapáln", function() {deepEqual( Stem("kapálni"), "kapáln");});
test("kapálózni -> kapálózn", function() {deepEqual( Stem("kapálózni"), "kapálózn");});
test("kapás -> kapás", function() {deepEqual( Stem("kapás"), "kapás");});
test("kapása -> kapás", function() {deepEqual( Stem("kapása"), "kapás");});
test("kapásból -> kapás", function() {deepEqual( Stem("kapásból"), "kapás");});
test("kapások -> kapás", function() {deepEqual( Stem("kapások"), "kapás");});
test("kapásom -> kapás", function() {deepEqual( Stem("kapásom"), "kapás");});
test("kapásra -> kapás", function() {deepEqual( Stem("kapásra"), "kapás");});
test("kapást -> kapás", function() {deepEqual( Stem("kapást"), "kapás");});
test("kapásjelzőm -> kapásjelző", function() {deepEqual( Stem("kapásjelzőm"), "kapásjelző");});
test("kapásjelzőt -> kapásjelző", function() {deepEqual( Stem("kapásjelzőt"), "kapásjelző");});
test("kapát -> kap", function() {deepEqual( Stem("kapát"), "kap");});
test("kapókedve -> kapókedv", function() {deepEqual( Stem("kapókedve"), "kapókedv");});
test("kapóra -> kapó", function() {deepEqual( Stem("kapóra"), "kapó");});
test("karacsáj-cserkesz -> karacsáj-cserkesz", function() {deepEqual( Stem("karacsáj-cserkesz"), "karacsáj-cserkesz");});
test("karacsájok -> karacsáj", function() {deepEqual( Stem("karacsájok"), "karacsáj");});
test("karacsáj -> karacsáj", function() {deepEqual( Stem("karacsáj"), "karacsáj");});
test("karacsájokkal -> karacsáj", function() {deepEqual( Stem("karacsájokkal"), "karacsáj");});
test("karacsájoknak -> karacsáj", function() {deepEqual( Stem("karacsájoknak"), "karacsáj");});
test("karakter -> karakter", function() {deepEqual( Stem("karakter"), "karakter");});
test("karakterből -> karakter", function() {deepEqual( Stem("karakterből"), "karakter");});
test("karaktere -> karakt", function() {deepEqual( Stem("karaktere"), "karakt");});
test("karaktereinek -> karakter", function() {deepEqual( Stem("karaktereinek"), "karakter");});
test("karakterek -> karakter", function() {deepEqual( Stem("karakterek"), "karakter");});
test("karaktereket -> karakter", function() {deepEqual( Stem("karaktereket"), "karakter");});
test("karakterekkel -> karakter", function() {deepEqual( Stem("karakterekkel"), "karakter");});
test("karakternél -> karakter", function() {deepEqual( Stem("karakternél"), "karakter");});
test("karaktert -> karakter", function() {deepEqual( Stem("karaktert"), "karakter");});
test("karakteres -> karakteres", function() {deepEqual( Stem("karakteres"), "karakteres");});
test("karakterfelismerést -> karakterfelismerés", function() {deepEqual( Stem("karakterfelismerést"), "karakterfelismerés");});
test("karakterfelismerő -> karakterfelismerő", function() {deepEqual( Stem("karakterfelismerő"), "karakterfelismerő");});
test("karakterfelismerővel -> karakterfelismerő", function() {deepEqual( Stem("karakterfelismerővel"), "karakterfelismerő");});
test("karakterisztikus -> karakterisztikus", function() {deepEqual( Stem("karakterisztikus"), "karakterisztikus");});
test("karakterisztikájának -> karakterisztiká", function() {deepEqual( Stem("karakterisztikájának"), "karakterisztiká");});
test("karakterkódokkal -> karakterkód", function() {deepEqual( Stem("karakterkódokkal"), "karakterkód");});
test("karakterláncok -> karakterlánc", function() {deepEqual( Stem("karakterláncok"), "karakterlánc");});
test("karakternyi -> karakterny", function() {deepEqual( Stem("karakternyi"), "karakterny");});
test("karakternyomtató -> karakternyomtató", function() {deepEqual( Stem("karakternyomtató"), "karakternyomtató");});
test("karaktersorozat -> karaktersoroz", function() {deepEqual( Stem("karaktersorozat"), "karaktersoroz");});
test("karaktersorozatot -> karaktersorozat", function() {deepEqual( Stem("karaktersorozatot"), "karaktersorozat");});
test("karaktersorozattal -> karaktersoroz", function() {deepEqual( Stem("karaktersorozattal"), "karaktersoroz");});
test("karakán -> kar", function() {deepEqual( Stem("karakán"), "kar");});
test("karalábé -> karaláb", function() {deepEqual( Stem("karalábé"), "karaláb");});
test("karambolját -> karambol", function() {deepEqual( Stem("karambolját"), "karambol");});
test("karambolokat -> karambol", function() {deepEqual( Stem("karambolokat"), "karambol");});
test("karambolom -> karambol", function() {deepEqual( Stem("karambolom"), "karambol");});
test("karambolt -> karambol", function() {deepEqual( Stem("karambolt"), "karambol");});
test("karambolozott -> karambolozot", function() {deepEqual( Stem("karambolozott"), "karambolozot");});
test("karamboloztunk -> karambolozt", function() {deepEqual( Stem("karamboloztunk"), "karambolozt");});
test("karamella -> karamell", function() {deepEqual( Stem("karamella"), "karamell");});
test("karanténba -> karant", function() {deepEqual( Stem("karanténba"), "karant");});
test("karattyolta -> karattyolt", function() {deepEqual( Stem("karattyolta"), "karattyolt");});
test("karattyoló -> karattyoló", function() {deepEqual( Stem("karattyoló"), "karattyoló");});
test("karatéra -> karat", function() {deepEqual( Stem("karatéra"), "karat");});
test("karate -> karat", function() {deepEqual( Stem("karate"), "karat");});
test("karatét -> karat", function() {deepEqual( Stem("karatét"), "karat");});
test("karatés -> karatés", function() {deepEqual( Stem("karatés"), "karatés");});
test("karatézom -> karatéz", function() {deepEqual( Stem("karatézom"), "karatéz");});
test("karavánközpontba -> karavánközpont", function() {deepEqual( Stem("karavánközpontba"), "karavánközpont");});
test("karbantarthatóságát -> karbantarthatóság", function() {deepEqual( Stem("karbantarthatóságát"), "karbantarthatóság");});
test("karbantartják -> karbantartja", function() {deepEqual( Stem("karbantartják"), "karbantartja");});
test("karbantartani -> karbantartan", function() {deepEqual( Stem("karbantartani"), "karbantartan");});
test("karbantartás-tervezését -> karbantartás-tervezés", function() {deepEqual( Stem("karbantartás-tervezését"), "karbantartás-tervezés");});
test("karbantartási -> karbantartás", function() {deepEqual( Stem("karbantartási"), "karbantartás");});
test("karbantartása -> karbantartás", function() {deepEqual( Stem("karbantartása"), "karbantartás");});
test("karbantartás -> karbantartás", function() {deepEqual( Stem("karbantartás"), "karbantartás");});
test("karbantartásig -> karbantartás", function() {deepEqual( Stem("karbantartásig"), "karbantartás");});
test("karbantartással -> karbantartás", function() {deepEqual( Stem("karbantartással"), "karbantartás");});
test("karbantartásában -> karbantartás", function() {deepEqual( Stem("karbantartásában"), "karbantartás");});
test("karbantartásán -> karbantartás", function() {deepEqual( Stem("karbantartásán"), "karbantartás");});
test("karbantartására -> karbantartás", function() {deepEqual( Stem("karbantartására"), "karbantartás");});
test("karbantartását -> karbantartás", function() {deepEqual( Stem("karbantartását"), "karbantartás");});
test("karbantartó -> karbantartó", function() {deepEqual( Stem("karbantartó"), "karbantartó");});
test("karbon -> karb", function() {deepEqual( Stem("karbon"), "karb");});
test("karbon-epoxi -> karbon-epox", function() {deepEqual( Stem("karbon-epoxi"), "karbon-epox");});
test("karcolás -> karcolás", function() {deepEqual( Stem("karcolás"), "karcolás");});
test("karcsú -> karcsú", function() {deepEqual( Stem("karcsú"), "karcsú");});
test("karcsúságmánia -> karcsúságmán", function() {deepEqual( Stem("karcsúságmánia"), "karcsúságmán");});
test("karcsúsítják -> karcsúsítja", function() {deepEqual( Stem("karcsúsítják"), "karcsúsítja");});
test("kardforradással -> kardforradás", function() {deepEqual( Stem("kardforradással"), "kardforradás");});
test("kardheg -> kardheg", function() {deepEqual( Stem("kardheg"), "kardheg");});
test("kardhely -> kardhely", function() {deepEqual( Stem("kardhely"), "kardhely");});
test("kardinálisok -> kardinális", function() {deepEqual( Stem("kardinálisok"), "kardinális");});
test("kardnyelő -> kardnyelő", function() {deepEqual( Stem("kardnyelő"), "kardnyelő");});
test("kardos -> kardos", function() {deepEqual( Stem("kardos"), "kardos");});
test("kardot -> kar", function() {deepEqual( Stem("kardot"), "kar");});
test("karddal -> kar", function() {deepEqual( Stem("karddal"), "kar");});
test("kardjukkal -> kard", function() {deepEqual( Stem("kardjukkal"), "kard");});
test("kardvágásból -> kardvágás", function() {deepEqual( Stem("kardvágásból"), "kardvágás");});
test("kardvágást -> kardvágás", function() {deepEqual( Stem("kardvágást"), "kardvágás");});
test("kardválogatott -> kardválogatot", function() {deepEqual( Stem("kardválogatott"), "kardválogatot");});
test("karhatalom -> karhatal", function() {deepEqual( Stem("karhatalom"), "karhatal");});
test("karibi -> karib", function() {deepEqual( Stem("karibi"), "karib");});
test("karikacsapás -> karikacsapás", function() {deepEqual( Stem("karikacsapás"), "karikacsapás");});
test("karikagyűrű-forma -> karikagyűrű-form", function() {deepEqual( Stem("karikagyűrű-forma"), "karikagyűrű-form");});
test("karikaturista -> karikaturist", function() {deepEqual( Stem("karikaturista"), "karikaturist");});
test("karikatúrakötetnek -> karikatúrakötet", function() {deepEqual( Stem("karikatúrakötetnek"), "karikatúrakötet");});
test("karikatúrája -> karikatúrá", function() {deepEqual( Stem("karikatúrája"), "karikatúrá");});
test("karikatúra -> karikatú", function() {deepEqual( Stem("karikatúra"), "karikatú");});
test("karikatúrákon -> karikatúra", function() {deepEqual( Stem("karikatúrákon"), "karikatúra");});
test("karikát -> kar", function() {deepEqual( Stem("karikát"), "kar");});
test("karikírozta -> karikírozt", function() {deepEqual( Stem("karikírozta"), "karikírozt");});
test("karimája -> karimá", function() {deepEqual( Stem("karimája"), "karimá");});
test("karimájú -> karimájú", function() {deepEqual( Stem("karimájú"), "karimájú");});
test("karingben -> karing", function() {deepEqual( Stem("karingben"), "karing");});
test("karinges -> karinges", function() {deepEqual( Stem("karinges"), "karinges");});
test("karitatív -> karitatív", function() {deepEqual( Stem("karitatív"), "karitatív");});
test("karizmatikus -> karizmatikus", function() {deepEqual( Stem("karizmatikus"), "karizmatikus");});
test("karizmán -> karizm", function() {deepEqual( Stem("karizmán"), "karizm");});
test("karizmait -> karizm", function() {deepEqual( Stem("karizmait"), "karizm");});
test("karizmát -> karizm", function() {deepEqual( Stem("karizmát"), "karizm");});
test("karja -> kar", function() {deepEqual( Stem("karja"), "kar");});
test("karban -> kar", function() {deepEqual( Stem("karban"), "kar");});
test("kar -> kar", function() {deepEqual( Stem("kar"), "kar");});
test("karjainak -> kar", function() {deepEqual( Stem("karjainak"), "kar");});
test("karjait -> kar", function() {deepEqual( Stem("karjait"), "kar");});
test("karjába -> kar", function() {deepEqual( Stem("karjába"), "kar");});
test("karjában -> kar", function() {deepEqual( Stem("karjában"), "kar");});
test("karján -> kar", function() {deepEqual( Stem("karján"), "kar");});
test("karjánál -> kar", function() {deepEqual( Stem("karjánál"), "kar");});
test("karjára -> kar", function() {deepEqual( Stem("karjára"), "kar");});
test("karjáról -> kar", function() {deepEqual( Stem("karjáról"), "kar");});
test("karját -> kar", function() {deepEqual( Stem("karját"), "kar");});
test("karjával -> kar", function() {deepEqual( Stem("karjával"), "kar");});
test("karnak -> kar", function() {deepEqual( Stem("karnak"), "kar");});
test("karodat -> kar", function() {deepEqual( Stem("karodat"), "kar");});
test("karok -> kar", function() {deepEqual( Stem("karok"), "kar");});
test("karokkal -> kar", function() {deepEqual( Stem("karokkal"), "kar");});
test("karon -> kar", function() {deepEqual( Stem("karon"), "kar");});
test("karra -> kar", function() {deepEqual( Stem("karra"), "kar");});
test("karral -> kar", function() {deepEqual( Stem("karral"), "kar");});
test("kart -> kar", function() {deepEqual( Stem("kart"), "kar");});
test("karunk -> kar", function() {deepEqual( Stem("karunk"), "kar");});
test("karát -> kar", function() {deepEqual( Stem("karát"), "kar");});
test("karlánc -> karlánc", function() {deepEqual( Stem("karlánc"), "karlánc");});
test("karláncot -> karlánc", function() {deepEqual( Stem("karláncot"), "karlánc");});
test("karláncért -> karlánc", function() {deepEqual( Stem("karláncért"), "karlánc");});
test("karmai -> karm", function() {deepEqual( Stem("karmai"), "karm");});
test("karmatlai -> karmatl", function() {deepEqual( Stem("karmatlai"), "karmatl");});
test("karmester -> karmester", function() {deepEqual( Stem("karmester"), "karmester");});
test("karmesterek -> karmester", function() {deepEqual( Stem("karmesterek"), "karmester");});
test("karmesterkedő -> karmesterkedő", function() {deepEqual( Stem("karmesterkedő"), "karmesterkedő");});
test("karmozdulat -> karmozdul", function() {deepEqual( Stem("karmozdulat"), "karmozdul");});
test("karmozdulattal -> karmozdul", function() {deepEqual( Stem("karmozdulattal"), "karmozdul");});
test("karol -> karol", function() {deepEqual( Stem("karol"), "karol");});
test("karoling -> karoling", function() {deepEqual( Stem("karoling"), "karoling");});
test("karom -> kar", function() {deepEqual( Stem("karom"), "kar");});
test("karommal -> kar", function() {deepEqual( Stem("karommal"), "kar");});
test("karosi -> karos", function() {deepEqual( Stem("karosi"), "karos");});
test("karosi-forródróton -> karosi-forródrót", function() {deepEqual( Stem("karosi-forródróton"), "karosi-forródrót");});
test("karosi-ügyvédek -> karosi-ügyvéd", function() {deepEqual( Stem("karosi-ügyvédek"), "karosi-ügyvéd");});
test("karosszék -> karossze", function() {deepEqual( Stem("karosszék"), "karossze");});
test("karosszékbe -> karossze", function() {deepEqual( Stem("karosszékbe"), "karossze");});
test("karosszékben -> karossze", function() {deepEqual( Stem("karosszékben"), "karossze");});
test("karosszékből -> karossze", function() {deepEqual( Stem("karosszékből"), "karossze");});
test("karosszékekkel -> karosszék", function() {deepEqual( Stem("karosszékekkel"), "karosszék");});
test("karosszékében -> karossze", function() {deepEqual( Stem("karosszékében"), "karossze");});
test("karosszéria -> karosszér", function() {deepEqual( Stem("karosszéria"), "karosszér");});
test("karosszériában -> karosszér", function() {deepEqual( Stem("karosszériában"), "karosszér");});
test("karosszériája -> karosszériá", function() {deepEqual( Stem("karosszériája"), "karosszériá");});
test("karosszériával -> karosszér", function() {deepEqual( Stem("karosszériával"), "karosszér");});
test("karosszériájú -> karosszériájú", function() {deepEqual( Stem("karosszériájú"), "karosszériájú");});
test("karrieristák -> karrierista", function() {deepEqual( Stem("karrieristák"), "karrierista");});
test("karrieremet -> karrier", function() {deepEqual( Stem("karrieremet"), "karrier");});
test("karrierje -> karrier", function() {deepEqual( Stem("karrierje"), "karrier");});
test("karrier -> karrier", function() {deepEqual( Stem("karrier"), "karrier");});
test("karrierjében -> karrier", function() {deepEqual( Stem("karrierjében"), "karrier");});
test("karrierjének -> karrier", function() {deepEqual( Stem("karrierjének"), "karrier");});
test("karrierjére -> karrier", function() {deepEqual( Stem("karrierjére"), "karrier");});
test("karrierjét -> karrier", function() {deepEqual( Stem("karrierjét"), "karrier");});
test("karriert -> karrier", function() {deepEqual( Stem("karriert"), "karrier");});
test("karrierközpontú -> karrierközpontú", function() {deepEqual( Stem("karrierközpontú"), "karrierközpontú");});
test("karrierépítésnek -> karrierépítés", function() {deepEqual( Stem("karrierépítésnek"), "karrierépítés");});
test("kartell -> kartell", function() {deepEqual( Stem("kartell"), "kartell");});
test("kartell-tilalmat -> kartell-tilal", function() {deepEqual( Stem("kartell-tilalmat"), "kartell-tilal");});
test("karthauzi -> karthauz", function() {deepEqual( Stem("karthauzi"), "karthauz");});
test("karton -> kart", function() {deepEqual( Stem("karton"), "kart");});
test("kartondobozzal -> kartondoboz", function() {deepEqual( Stem("kartondobozzal"), "kartondoboz");});
test("kartársaik -> kartárs", function() {deepEqual( Stem("kartársaik"), "kartárs");});
test("kartávolságnyira -> kartávolságny", function() {deepEqual( Stem("kartávolságnyira"), "kartávolságny");});
test("karvalyorrú -> karvalyorrú", function() {deepEqual( Stem("karvalyorrú"), "karvalyorrú");});
test("karvalyszerű -> karvalyszerű", function() {deepEqual( Stem("karvalyszerű"), "karvalyszerű");});
test("karvezető -> karvezető", function() {deepEqual( Stem("karvezető"), "karvezető");});
test("karvezetőnk -> karvezető", function() {deepEqual( Stem("karvezetőnk"), "karvezető");});
test("karácsony-éjszakán -> karácsony-éjsz", function() {deepEqual( Stem("karácsony-éjszakán"), "karácsony-éjsz");});
test("karácsonyfatüzek -> karácsonyfatüz", function() {deepEqual( Stem("karácsonyfatüzek"), "karácsonyfatüz");});
test("karácsonyfa -> karácsonyf", function() {deepEqual( Stem("karácsonyfa"), "karácsonyf");});
test("karácsonyfák -> karácsonyfa", function() {deepEqual( Stem("karácsonyfák"), "karácsonyfa");});
test("karácsonyfánál -> karácsonyf", function() {deepEqual( Stem("karácsonyfánál"), "karácsonyf");});
test("karácsonyi -> karácsony", function() {deepEqual( Stem("karácsonyi"), "karácsony");});
test("karácsonyának -> karácsony", function() {deepEqual( Stem("karácsonyának"), "karácsony");});
test("karácsonyát -> karácsony", function() {deepEqual( Stem("karácsonyát"), "karácsony");});
test("karácsonya -> karácsony", function() {deepEqual( Stem("karácsonya"), "karácsony");});
test("karácsonyig -> karácsony", function() {deepEqual( Stem("karácsonyig"), "karácsony");});
test("karácsony -> karácsony", function() {deepEqual( Stem("karácsony"), "karácsony");});
test("karácsonykor -> karácsony", function() {deepEqual( Stem("karácsonykor"), "karácsony");});
test("karácsonyra -> karácsony", function() {deepEqual( Stem("karácsonyra"), "karácsony");});
test("karácsonytűrő -> karácsonytűrő", function() {deepEqual( Stem("karácsonytűrő"), "karácsonytűrő");});
test("karóba -> karó", function() {deepEqual( Stem("karóba"), "karó");});
test("karókat -> karó", function() {deepEqual( Stem("karókat"), "karó");});
test("karórája -> karórá", function() {deepEqual( Stem("karórája"), "karórá");});
test("karórájára -> karórá", function() {deepEqual( Stem("karórájára"), "karórá");});
test("karórával -> karór", function() {deepEqual( Stem("karórával"), "karór");});
test("karöltve -> karöltv", function() {deepEqual( Stem("karöltve"), "karöltv");});
test("karú -> karú", function() {deepEqual( Stem("karú"), "karú");});
test("kassai -> kass", function() {deepEqual( Stem("kassai"), "kass");});
test("kassaiak -> kassai", function() {deepEqual( Stem("kassaiak"), "kassai");});
test("kasszarendszer -> kasszarendszer", function() {deepEqual( Stem("kasszarendszer"), "kasszarendszer");});
test("kassza -> kassz", function() {deepEqual( Stem("kassza"), "kassz");});
test("kasszába -> kassz", function() {deepEqual( Stem("kasszába"), "kassz");});
test("kasszában -> kassz", function() {deepEqual( Stem("kasszában"), "kassz");});
test("kasszájába -> kasszá", function() {deepEqual( Stem("kasszájába"), "kasszá");});
test("kasszájában -> kasszá", function() {deepEqual( Stem("kasszájában"), "kasszá");});
test("kasszájából -> kasszá", function() {deepEqual( Stem("kasszájából"), "kasszá");});
test("kasszáját -> kasszá", function() {deepEqual( Stem("kasszáját"), "kasszá");});
test("kasszát -> kassz", function() {deepEqual( Stem("kasszát"), "kassz");});
test("kasszírozhatja -> kasszírozhat", function() {deepEqual( Stem("kasszírozhatja"), "kasszírozhat");});
test("kasszírozva -> kasszírozv", function() {deepEqual( Stem("kasszírozva"), "kasszírozv");});
test("kastéllyal -> kastély", function() {deepEqual( Stem("kastéllyal"), "kastély");});
test("kastély -> kastély", function() {deepEqual( Stem("kastély"), "kastély");});
test("kastélyba -> kastély", function() {deepEqual( Stem("kastélyba"), "kastély");});
test("kastélyból -> kastély", function() {deepEqual( Stem("kastélyból"), "kastély");});
test("kastélynak -> kastély", function() {deepEqual( Stem("kastélynak"), "kastély");});
test("kastélyt -> kastély", function() {deepEqual( Stem("kastélyt"), "kastély");});
test("kastélyában -> kastély", function() {deepEqual( Stem("kastélyában"), "kastély");});
test("kastélyért -> kastély", function() {deepEqual( Stem("kastélyért"), "kastély");});
test("kasznit -> kaszn", function() {deepEqual( Stem("kasznit"), "kaszn");});
test("kaszt -> kasz", function() {deepEqual( Stem("kaszt"), "kasz");});
test("kasztíliai -> kasztíli", function() {deepEqual( Stem("kasztíliai"), "kasztíli");});
test("kaszálni -> kaszáln", function() {deepEqual( Stem("kaszálni"), "kaszáln");});
test("kaszárnyafegyelem -> kaszárnyafegyel", function() {deepEqual( Stem("kaszárnyafegyelem"), "kaszárnyafegyel");});
test("kaszárnyába -> kaszárny", function() {deepEqual( Stem("kaszárnyába"), "kaszárny");});
test("kaszárnyákat -> kaszárnya", function() {deepEqual( Stem("kaszárnyákat"), "kaszárnya");});
test("kaszárnyára -> kaszárny", function() {deepEqual( Stem("kaszárnyára"), "kaszárny");});
test("kaszával -> kasz", function() {deepEqual( Stem("kaszával"), "kasz");});
test("katakombák -> katakomba", function() {deepEqual( Stem("katakombák"), "katakomba");});
test("katakombákba -> katakomba", function() {deepEqual( Stem("katakombákba"), "katakomba");});
test("katakombákban -> katakomba", function() {deepEqual( Stem("katakombákban"), "katakomba");});
test("katakombákon -> katakomba", function() {deepEqual( Stem("katakombákon"), "katakomba");});
test("kataleptikus-apodiktikus -> kataleptikus-apodiktikus", function() {deepEqual( Stem("kataleptikus-apodiktikus"), "kataleptikus-apodiktikus");});
test("katalizálja -> katalizál", function() {deepEqual( Stem("katalizálja"), "katalizál");});
test("katalizátorként -> katalizátor", function() {deepEqual( Stem("katalizátorként"), "katalizátor");});
test("katalogizáló -> katalogizáló", function() {deepEqual( Stem("katalogizáló"), "katalogizáló");});
test("katalán -> katal", function() {deepEqual( Stem("katalán"), "katal");});
test("katalógus -> katalógus", function() {deepEqual( Stem("katalógus"), "katalógus");});
test("katalógusadat -> katalógus", function() {deepEqual( Stem("katalógusadat"), "katalógus");});
test("katalógusai -> katalógus", function() {deepEqual( Stem("katalógusai"), "katalógus");});
test("katalógusban -> katalógus", function() {deepEqual( Stem("katalógusban"), "katalógus");});
test("katalógusból -> katalógus", function() {deepEqual( Stem("katalógusból"), "katalógus");});
test("katalógusok -> katalógus", function() {deepEqual( Stem("katalógusok"), "katalógus");});
test("katalógusokat -> katalógus", function() {deepEqual( Stem("katalógusokat"), "katalógus");});
test("katalóguson -> katalógus", function() {deepEqual( Stem("katalóguson"), "katalógus");});
test("katalógusra -> katalógus", function() {deepEqual( Stem("katalógusra"), "katalógus");});
test("katalógussal -> katalógus", function() {deepEqual( Stem("katalógussal"), "katalógus");});
test("katalógusát -> katalógus", function() {deepEqual( Stem("katalógusát"), "katalógus");});
test("katalógusszolgáltatásokat -> katalógusszolgáltatás", function() {deepEqual( Stem("katalógusszolgáltatásokat"), "katalógusszolgáltatás");});
test("katalógusvásárlás -> katalógusvásárlás", function() {deepEqual( Stem("katalógusvásárlás"), "katalógusvásárlás");});
test("katalógusárukat -> katalógusár", function() {deepEqual( Stem("katalógusárukat"), "katalógusár");});
test("katalógusárukon -> katalógusár", function() {deepEqual( Stem("katalógusárukon"), "katalógusár");});
test("katarzisról -> katarzis", function() {deepEqual( Stem("katarzisról"), "katarzis");});
test("katasztrofális -> katasztrofális", function() {deepEqual( Stem("katasztrofális"), "katasztrofális");});
test("katasztrofálisan -> katasztrofális", function() {deepEqual( Stem("katasztrofálisan"), "katasztrofális");});
test("katasztrófaelhárítási -> katasztrófaelhárítás", function() {deepEqual( Stem("katasztrófaelhárítási"), "katasztrófaelhárítás");});
test("katasztrófájával -> katasztrófá", function() {deepEqual( Stem("katasztrófájával"), "katasztrófá");});
test("katasztrófa -> katasztróf", function() {deepEqual( Stem("katasztrófa"), "katasztróf");});
test("katasztrófák -> katasztrófa", function() {deepEqual( Stem("katasztrófák"), "katasztrófa");});
test("katasztrófának -> katasztróf", function() {deepEqual( Stem("katasztrófának"), "katasztróf");});
test("katasztrófát -> katasztróf", function() {deepEqual( Stem("katasztrófát"), "katasztróf");});
test("katasztrófával -> katasztróf", function() {deepEqual( Stem("katasztrófával"), "katasztróf");});
test("katedra -> kat", function() {deepEqual( Stem("katedra"), "kat");});
test("katedrális -> katedrális", function() {deepEqual( Stem("katedrális"), "katedrális");});
test("katedrálisból -> katedrális", function() {deepEqual( Stem("katedrálisból"), "katedrális");});
test("katedrálisnak -> katedrális", function() {deepEqual( Stem("katedrálisnak"), "katedrális");});
test("katedrálissal -> katedrális", function() {deepEqual( Stem("katedrálissal"), "katedrális");});
test("katedrálist -> katedrális", function() {deepEqual( Stem("katedrálist"), "katedrális");});
test("katedrálisuknak -> katedrális", function() {deepEqual( Stem("katedrálisuknak"), "katedrális");});
test("katedrára -> katedr", function() {deepEqual( Stem("katedrára"), "katedr");});
test("kategorikus -> kategorikus", function() {deepEqual( Stem("kategorikus"), "kategorikus");});
test("kategorikusan -> kategorikus", function() {deepEqual( Stem("kategorikusan"), "kategorikus");});
test("kategorizálni -> kategorizáln", function() {deepEqual( Stem("kategorizálni"), "kategorizáln");});
test("kategorizálva -> kategorizálv", function() {deepEqual( Stem("kategorizálva"), "kategorizálv");});
test("kategorizálására -> kategorizálás", function() {deepEqual( Stem("kategorizálására"), "kategorizálás");});
test("kategóriatársak -> kategóriatárs", function() {deepEqual( Stem("kategóriatársak"), "kategóriatárs");});
test("kategóriába -> kategór", function() {deepEqual( Stem("kategóriába"), "kategór");});
test("kategória -> kategór", function() {deepEqual( Stem("kategória"), "kategór");});
test("kategóriában -> kategór", function() {deepEqual( Stem("kategóriában"), "kategór");});
test("kategóriáinak -> kategória", function() {deepEqual( Stem("kategóriáinak"), "kategória");});
test("kategóriája -> kategóriá", function() {deepEqual( Stem("kategóriája"), "kategóriá");});
test("kategóriájába -> kategóriá", function() {deepEqual( Stem("kategóriájába"), "kategóriá");});
test("kategóriájában -> kategóriá", function() {deepEqual( Stem("kategóriájában"), "kategóriá");});
test("kategóriájának -> kategóriá", function() {deepEqual( Stem("kategóriájának"), "kategóriá");});
test("kategóriák -> kategória", function() {deepEqual( Stem("kategóriák"), "kategória");});
test("kategóriákba -> kategória", function() {deepEqual( Stem("kategóriákba"), "kategória");});
test("kategóriákban -> kategória", function() {deepEqual( Stem("kategóriákban"), "kategória");});
test("kategóriának -> kategór", function() {deepEqual( Stem("kategóriának"), "kategór");});
test("kategóriánként -> kategór", function() {deepEqual( Stem("kategóriánként"), "kategór");});
test("kategóriánál -> kategór", function() {deepEqual( Stem("kategóriánál"), "kategór");});
test("kategóriára -> kategór", function() {deepEqual( Stem("kategóriára"), "kategór");});
test("kategóriát -> kategór", function() {deepEqual( Stem("kategóriát"), "kategór");});
test("kategóriájú -> kategóriájú", function() {deepEqual( Stem("kategóriájú"), "kategóriájú");});
test("kategóriás -> kategóriás", function() {deepEqual( Stem("kategóriás"), "kategóriás");});
test("katekizmusféle -> katekizmusfél", function() {deepEqual( Stem("katekizmusféle"), "katekizmusfél");});
test("katolicizmus -> katolicizmus", function() {deepEqual( Stem("katolicizmus"), "katolicizmus");});
test("katolicizmusa -> katolicizmus", function() {deepEqual( Stem("katolicizmusa"), "katolicizmus");});
test("katolicizmusban -> katolicizmus", function() {deepEqual( Stem("katolicizmusban"), "katolicizmus");});
test("katolicizmusból -> katolicizmus", function() {deepEqual( Stem("katolicizmusból"), "katolicizmus");});
test("katolicizmusát -> katolicizmus", function() {deepEqual( Stem("katolicizmusát"), "katolicizmus");});
test("katolikum -> katoliku", function() {deepEqual( Stem("katolikum"), "katoliku");});
test("katolikus -> katolikus", function() {deepEqual( Stem("katolikus"), "katolikus");});
test("katolikusok -> katolikus", function() {deepEqual( Stem("katolikusok"), "katolikus");});
test("katolikusokká -> katolikus", function() {deepEqual( Stem("katolikusokká"), "katolikus");});
test("katolikusoké -> katolikus", function() {deepEqual( Stem("katolikusoké"), "katolikus");});
test("katolizálja -> katolizál", function() {deepEqual( Stem("katolizálja"), "katolizál");});
test("katolizált -> katolizál", function() {deepEqual( Stem("katolizált"), "katolizál");});
test("katonacsizmák -> katonacsizma", function() {deepEqual( Stem("katonacsizmák"), "katonacsizma");});
test("katonafeleségeknek -> katonafeleség", function() {deepEqual( Stem("katonafeleségeknek"), "katonafeleség");});
test("katonai -> katon", function() {deepEqual( Stem("katonai"), "katon");});
test("katonai-politikai -> katonai-politi", function() {deepEqual( Stem("katonai-politikai"), "katonai-politi");});
test("katonaiskola -> katonaiskol", function() {deepEqual( Stem("katonaiskola"), "katonaiskol");});
test("katonaiskolába -> katonaiskol", function() {deepEqual( Stem("katonaiskolába"), "katonaiskol");});
test("katonakabátban -> katonakabát", function() {deepEqual( Stem("katonakabátban"), "katonakabát");});
test("katonaorvos -> katonaorvos", function() {deepEqual( Stem("katonaorvos"), "katonaorvos");});
test("katonaruhámat -> katonaruha", function() {deepEqual( Stem("katonaruhámat"), "katonaruha");});
test("katonaság -> katonaság", function() {deepEqual( Stem("katonaság"), "katonaság");});
test("katonaságnál -> katonaság", function() {deepEqual( Stem("katonaságnál"), "katonaság");});
test("katonaságot -> katonaság", function() {deepEqual( Stem("katonaságot"), "katonaság");});
test("katonaságtól -> katonaság", function() {deepEqual( Stem("katonaságtól"), "katonaság");});
test("katonatiszt -> katonatisz", function() {deepEqual( Stem("katonatiszt"), "katonatisz");});
test("katonazenekarok -> katonazenekar", function() {deepEqual( Stem("katonazenekarok"), "katonazenekar");});
test("katonazenére -> katonazen", function() {deepEqual( Stem("katonazenére"), "katonazen");});
test("katonazene -> katonazen", function() {deepEqual( Stem("katonazene"), "katonazen");});
test("katonazenét -> katonazen", function() {deepEqual( Stem("katonazenét"), "katonazen");});
test("katonái -> katona", function() {deepEqual( Stem("katonái"), "katona");});
test("katona -> katon", function() {deepEqual( Stem("katona"), "katon");});
test("katonája -> katoná", function() {deepEqual( Stem("katonája"), "katoná");});
test("katonájaként -> katoná", function() {deepEqual( Stem("katonájaként"), "katoná");});
test("katonák -> katona", function() {deepEqual( Stem("katonák"), "katona");});
test("katonákat -> katona", function() {deepEqual( Stem("katonákat"), "katona");});
test("katonákból -> katona", function() {deepEqual( Stem("katonákból"), "katona");});
test("katonákkal -> katona", function() {deepEqual( Stem("katonákkal"), "katona");});
test("katonáknak -> katona", function() {deepEqual( Stem("katonáknak"), "katona");});
test("katonának -> katon", function() {deepEqual( Stem("katonának"), "katon");});
test("katonát -> katon", function() {deepEqual( Stem("katonát"), "katon");});
test("katonás -> katonás", function() {deepEqual( Stem("katonás"), "katonás");});
test("katonáskodásra -> katonáskodás", function() {deepEqual( Stem("katonáskodásra"), "katonáskodás");});
test("kattant -> kattan", function() {deepEqual( Stem("kattant"), "kattan");});
test("kattanás -> kattanás", function() {deepEqual( Stem("kattanás"), "kattanás");});
test("kattanása -> kattanás", function() {deepEqual( Stem("kattanása"), "kattanás");});
test("kattanást -> kattanás", function() {deepEqual( Stem("kattanást"), "kattanás");});
test("kattingatni -> kattingatn", function() {deepEqual( Stem("kattingatni"), "kattingatn");});
test("kattintani -> kattintan", function() {deepEqual( Stem("kattintani"), "kattintan");});
test("kattintania -> kattintan", function() {deepEqual( Stem("kattintania"), "kattintan");});
test("kattintanunk -> kattintan", function() {deepEqual( Stem("kattintanunk"), "kattintan");});
test("kattintottak -> kattintott", function() {deepEqual( Stem("kattintottak"), "kattintott");});
test("kattintsunk -> kattints", function() {deepEqual( Stem("kattintsunk"), "kattints");});
test("kattintunk -> kattint", function() {deepEqual( Stem("kattintunk"), "kattint");});
test("kattinthatunk -> kattinthat", function() {deepEqual( Stem("kattinthatunk"), "kattinthat");});
test("kattintva -> kattintv", function() {deepEqual( Stem("kattintva"), "kattintv");});
test("kattintás -> kattintás", function() {deepEqual( Stem("kattintás"), "kattintás");});
test("kattintásra -> kattintás", function() {deepEqual( Stem("kattintásra"), "kattintás");});
test("kattintásról -> kattintás", function() {deepEqual( Stem("kattintásról"), "kattintás");});
test("kattintással -> kattintás", function() {deepEqual( Stem("kattintással"), "kattintás");});
test("kattintásával -> kattintás", function() {deepEqual( Stem("kattintásával"), "kattintás");});
test("kattogtatja -> kattogtat", function() {deepEqual( Stem("kattogtatja"), "kattogtat");});
test("kattogtatásában -> kattogtatás", function() {deepEqual( Stem("kattogtatásában"), "kattogtatás");});
test("katyusa -> katyus", function() {deepEqual( Stem("katyusa"), "katyus");});
test("katzenjammerjeimet -> katzenjammer", function() {deepEqual( Stem("katzenjammerjeimet"), "katzenjammer");});
test("katétert -> katéter", function() {deepEqual( Stem("katétert"), "katéter");});
test("kaucsuk -> kaucs", function() {deepEqual( Stem("kaucsuk"), "kaucs");});
test("kaukázusi -> kaukázus", function() {deepEqual( Stem("kaukázusi"), "kaukázus");});
test("kavalkád -> kavalka", function() {deepEqual( Stem("kavalkád"), "kavalka");});
test("kavargott -> kavargot", function() {deepEqual( Stem("kavargott"), "kavargot");});
test("kavargó -> kavargó", function() {deepEqual( Stem("kavargó"), "kavargó");});
test("kavarodott -> kavarodot", function() {deepEqual( Stem("kavarodott"), "kavarodot");});
test("kavarodás -> kavarodás", function() {deepEqual( Stem("kavarodás"), "kavarodás");});
test("kavarodást -> kavarodás", function() {deepEqual( Stem("kavarodást"), "kavarodás");});
test("kavarog -> kavarog", function() {deepEqual( Stem("kavarog"), "kavarog");});
test("kavarogjak -> kavarogj", function() {deepEqual( Stem("kavarogjak"), "kavarogj");});
test("kavarogtak -> kavarogt", function() {deepEqual( Stem("kavarogtak"), "kavarogt");});
test("kavart -> kavar", function() {deepEqual( Stem("kavart"), "kavar");});
test("kavarta -> kavart", function() {deepEqual( Stem("kavarta"), "kavart");});
test("kavartak -> kavart", function() {deepEqual( Stem("kavartak"), "kavart");});
test("kavaró -> kavaró", function() {deepEqual( Stem("kavaró"), "kavaró");});
test("kavernát -> kavern", function() {deepEqual( Stem("kavernát"), "kavern");});
test("kaviccsal -> kavics", function() {deepEqual( Stem("kaviccsal"), "kavics");});
test("kavicsot -> kavics", function() {deepEqual( Stem("kavicsot"), "kavics");});
test("kavicsos -> kavicsos", function() {deepEqual( Stem("kavicsos"), "kavicsos");});
test("kazah -> kazah", function() {deepEqual( Stem("kazah"), "kazah");});
test("kazahsztáni -> kazahsztán", function() {deepEqual( Stem("kazahsztáni"), "kazahsztán");});
test("kazamata -> kazamat", function() {deepEqual( Stem("kazamata"), "kazamat");});
test("kazamaták -> kazamata", function() {deepEqual( Stem("kazamaták"), "kazamata");});
test("kazamatákat -> kazamata", function() {deepEqual( Stem("kazamatákat"), "kazamata");});
test("kazettabeállítást -> kazettabeállítás", function() {deepEqual( Stem("kazettabeállítást"), "kazettabeállítás");});
test("kazettatartó -> kazettatartó", function() {deepEqual( Stem("kazettatartó"), "kazettatartó");});
test("kazettaügyben -> kazettaügy", function() {deepEqual( Stem("kazettaügyben"), "kazettaügy");});
test("kazettából -> kazett", function() {deepEqual( Stem("kazettából"), "kazett");});
test("kazetta -> kazett", function() {deepEqual( Stem("kazetta"), "kazett");});
test("kazettái -> kazetta", function() {deepEqual( Stem("kazettái"), "kazetta");});
test("kazettáink -> kazetta", function() {deepEqual( Stem("kazettáink"), "kazetta");});
test("kazettája -> kazettá", function() {deepEqual( Stem("kazettája"), "kazettá");});
test("kazettáját -> kazettá", function() {deepEqual( Stem("kazettáját"), "kazettá");});
test("kazetták -> kazetta", function() {deepEqual( Stem("kazetták"), "kazetta");});
test("kazettákat -> kazetta", function() {deepEqual( Stem("kazettákat"), "kazetta");});
test("kazettákra -> kazetta", function() {deepEqual( Stem("kazettákra"), "kazetta");});
test("kazettákról -> kazetta", function() {deepEqual( Stem("kazettákról"), "kazetta");});
test("kazettán -> kazett", function() {deepEqual( Stem("kazettán"), "kazett");});
test("kazettára -> kazett", function() {deepEqual( Stem("kazettára"), "kazett");});
test("kazettáról -> kazett", function() {deepEqual( Stem("kazettáról"), "kazett");});
test("kazettát -> kazett", function() {deepEqual( Stem("kazettát"), "kazett");});
test("kazettával -> kazett", function() {deepEqual( Stem("kazettával"), "kazett");});
test("kazettáért -> kazett", function() {deepEqual( Stem("kazettáért"), "kazett");});
test("kazincbarcikai -> kazincbarci", function() {deepEqual( Stem("kazincbarcikai"), "kazincbarci");});
test("kazán -> kaz", function() {deepEqual( Stem("kazán"), "kaz");});
test("kazánba -> kaz", function() {deepEqual( Stem("kazánba"), "kaz");});
test("kazánnál -> kaz", function() {deepEqual( Stem("kazánnál"), "kaz");});
test("kazánház -> kazánház", function() {deepEqual( Stem("kazánház"), "kazánház");});
test("kazánházban -> kazánház", function() {deepEqual( Stem("kazánházban"), "kazánház");});
test("kazánházból -> kazánház", function() {deepEqual( Stem("kazánházból"), "kazánház");});
test("kazánkovácsnak -> kazánkovács", function() {deepEqual( Stem("kazánkovácsnak"), "kazánkovács");});
test("kebelről -> kebel", function() {deepEqual( Stem("kebelről"), "kebel");});
test("keble -> kebl", function() {deepEqual( Stem("keble"), "kebl");});
test("keblébe -> kebl", function() {deepEqual( Stem("keblébe"), "kebl");});
test("keblét -> kebl", function() {deepEqual( Stem("keblét"), "kebl");});
test("keblű -> keblű", function() {deepEqual( Stem("keblű"), "keblű");});
test("kecsegtet -> kecsegt", function() {deepEqual( Stem("kecsegtet"), "kecsegt");});
test("kecsegtetett -> kecsegtetet", function() {deepEqual( Stem("kecsegtetett"), "kecsegtetet");});
test("kecsegtető -> kecsegtető", function() {deepEqual( Stem("kecsegtető"), "kecsegtető");});
test("kecsegét -> kecseg", function() {deepEqual( Stem("kecsegét"), "kecseg");});
test("kecses -> kecses", function() {deepEqual( Stem("kecses"), "kecses");});
test("kecsesen -> kecses", function() {deepEqual( Stem("kecsesen"), "kecses");});
test("kecsesség -> kecsesség", function() {deepEqual( Stem("kecsesség"), "kecsesség");});
test("kecskebak -> kecskeb", function() {deepEqual( Stem("kecskebak"), "kecskeb");});
test("kecskegidát -> kecskeg", function() {deepEqual( Stem("kecskegidát"), "kecskeg");});
test("kecskekörmeit -> kecskekörm", function() {deepEqual( Stem("kecskekörmeit"), "kecskekörm");});
test("kecskelábú -> kecskelábú", function() {deepEqual( Stem("kecskelábú"), "kecskelábú");});
test("kecskeméti -> kecskemét", function() {deepEqual( Stem("kecskeméti"), "kecskemét");});
test("kecskesajtot -> kecskesajt", function() {deepEqual( Stem("kecskesajtot"), "kecskesajt");});
test("kecskeszakállal -> kecskeszakál", function() {deepEqual( Stem("kecskeszakállal"), "kecskeszakál");});
test("kecskeszakállával -> kecskeszakáll", function() {deepEqual( Stem("kecskeszakállával"), "kecskeszakáll");});
test("kecskéknek -> kecske", function() {deepEqual( Stem("kecskéknek"), "kecske");});
test("kecske -> kecs", function() {deepEqual( Stem("kecske"), "kecs");});
test("kecskét -> kecs", function() {deepEqual( Stem("kecskét"), "kecs");});
test("kedd-szerda -> kedd-szerd", function() {deepEqual( Stem("kedd-szerda"), "kedd-szerd");});
test("keddből -> ked", function() {deepEqual( Stem("keddből"), "ked");});
test("kedden -> ked", function() {deepEqual( Stem("kedden"), "ked");});
test("keddre -> ked", function() {deepEqual( Stem("keddre"), "ked");});
test("keddtől -> ked", function() {deepEqual( Stem("keddtől"), "ked");});
test("keddi -> kedd", function() {deepEqual( Stem("keddi"), "kedd");});
test("keddire -> kedd", function() {deepEqual( Stem("keddire"), "kedd");});
test("kedvcsináló -> kedvcsináló", function() {deepEqual( Stem("kedvcsináló"), "kedvcsináló");});
test("kedvel -> ked", function() {deepEqual( Stem("kedvel"), "ked");});
test("kedvelek -> kedvel", function() {deepEqual( Stem("kedvelek"), "kedvel");});
test("kedvelem -> kedvel", function() {deepEqual( Stem("kedvelem"), "kedvel");});
test("kedveli -> kedvel", function() {deepEqual( Stem("kedveli"), "kedvel");});
test("kedvelik -> kedvel", function() {deepEqual( Stem("kedvelik"), "kedvel");});
test("kedvelnek -> kedvel", function() {deepEqual( Stem("kedvelnek"), "kedvel");});
test("kedvelte -> kedvelt", function() {deepEqual( Stem("kedvelte"), "kedvelt");});
test("kedveltebbek -> kedveltebb", function() {deepEqual( Stem("kedveltebbek"), "kedveltebb");});
test("kedveltem -> kedvelt", function() {deepEqual( Stem("kedveltem"), "kedvelt");});
test("kedvelünk -> kedvel", function() {deepEqual( Stem("kedvelünk"), "kedvel");});
test("kedveltté -> kedvelt", function() {deepEqual( Stem("kedveltté"), "kedvelt");});
test("kedvelt -> kedvel", function() {deepEqual( Stem("kedvelt"), "kedvel");});
test("kedvelő -> kedvelő", function() {deepEqual( Stem("kedvelő"), "kedvelő");});
test("kedvelőinek -> kedvelő", function() {deepEqual( Stem("kedvelőinek"), "kedvelő");});
test("kedvem -> kedv", function() {deepEqual( Stem("kedvem"), "kedv");});
test("kedve -> kedv", function() {deepEqual( Stem("kedve"), "kedv");});
test("kedv -> kedv", function() {deepEqual( Stem("kedv"), "kedv");});
test("kedved -> kedv", function() {deepEqual( Stem("kedved"), "kedv");});
test("kedvedért -> kedv", function() {deepEqual( Stem("kedvedért"), "kedv");});
test("kedvemen -> kedv", function() {deepEqual( Stem("kedvemen"), "kedv");});
test("kedvemet -> kedv", function() {deepEqual( Stem("kedvemet"), "kedv");});
test("kedvemre -> kedv", function() {deepEqual( Stem("kedvemre"), "kedv");});
test("kedvemtől -> kedv", function() {deepEqual( Stem("kedvemtől"), "kedv");});
test("kedven -> kedv", function() {deepEqual( Stem("kedven"), "kedv");});
test("kedvet -> kedv", function() {deepEqual( Stem("kedvet"), "kedv");});
test("kedvnek -> kedv", function() {deepEqual( Stem("kedvnek"), "kedv");});
test("kedvre -> kedv", function() {deepEqual( Stem("kedvre"), "kedv");});
test("kedvtől -> kedv", function() {deepEqual( Stem("kedvtől"), "kedv");});
test("kedvvel -> kedv", function() {deepEqual( Stem("kedvvel"), "kedv");});
test("kedvében -> kedv", function() {deepEqual( Stem("kedvében"), "kedv");});
test("kedvének -> kedv", function() {deepEqual( Stem("kedvének"), "kedv");});
test("kedvét -> kedv", function() {deepEqual( Stem("kedvét"), "kedv");});
test("kedvéért -> kedv", function() {deepEqual( Stem("kedvéért"), "kedv");});
test("kedvük -> kedv", function() {deepEqual( Stem("kedvük"), "kedv");});
test("kedvükben -> kedv", function() {deepEqual( Stem("kedvükben"), "kedv");});
test("kedvünk -> kedv", function() {deepEqual( Stem("kedvünk"), "kedv");});
test("kedvünkre -> kedv", function() {deepEqual( Stem("kedvünkre"), "kedv");});
test("kedvünkért -> kedv", function() {deepEqual( Stem("kedvünkért"), "kedv");});
test("kedvenc -> kedvenc", function() {deepEqual( Stem("kedvenc"), "kedvenc");});
test("kedvenccé -> kedvenc", function() {deepEqual( Stem("kedvenccé"), "kedvenc");});
test("kedvence -> kedvenc", function() {deepEqual( Stem("kedvence"), "kedvenc");});
test("kedvencei -> kedvenc", function() {deepEqual( Stem("kedvencei"), "kedvenc");});
test("kedvenceim -> kedvenc", function() {deepEqual( Stem("kedvenceim"), "kedvenc");});
test("kedvencek -> kedvenc", function() {deepEqual( Stem("kedvencek"), "kedvenc");});
test("kedvencem -> kedvenc", function() {deepEqual( Stem("kedvencem"), "kedvenc");});
test("kedvencemet -> kedvenc", function() {deepEqual( Stem("kedvencemet"), "kedvenc");});
test("kedvencemmé -> kedvenc", function() {deepEqual( Stem("kedvencemmé"), "kedvenc");});
test("kedvencet -> kedvenc", function() {deepEqual( Stem("kedvencet"), "kedvenc");});
test("kedvencként -> kedvenc", function() {deepEqual( Stem("kedvencként"), "kedvenc");});
test("kedvencének -> kedvenc", function() {deepEqual( Stem("kedvencének"), "kedvenc");});
test("kedvencévé -> kedvenc", function() {deepEqual( Stem("kedvencévé"), "kedvenc");});
test("kedvencünk -> kedvenc", function() {deepEqual( Stem("kedvencünk"), "kedvenc");});
test("kedvese -> kedves", function() {deepEqual( Stem("kedvese"), "kedves");});
test("kedvesebbek -> kedvesebb", function() {deepEqual( Stem("kedvesebbek"), "kedvesebb");});
test("kedvesek -> kedves", function() {deepEqual( Stem("kedvesek"), "kedves");});
test("kedvesem -> kedves", function() {deepEqual( Stem("kedvesem"), "kedves");});
test("kedvesemmel -> kedves", function() {deepEqual( Stem("kedvesemmel"), "kedves");});
test("kedvesen -> kedves", function() {deepEqual( Stem("kedvesen"), "kedves");});
test("kedvesnek -> kedves", function() {deepEqual( Stem("kedvesnek"), "kedves");});
test("kedvesének -> kedves", function() {deepEqual( Stem("kedvesének"), "kedves");});
test("kedvesünknek -> kedves", function() {deepEqual( Stem("kedvesünknek"), "kedves");});
test("kedveskedett -> kedveskedet", function() {deepEqual( Stem("kedveskedett"), "kedveskedet");});
test("kedveskedjek -> kedveskedj", function() {deepEqual( Stem("kedveskedjek"), "kedveskedj");});
test("kedveskedni -> kedveskedn", function() {deepEqual( Stem("kedveskedni"), "kedveskedn");});
test("kedvesség -> kedvesség", function() {deepEqual( Stem("kedvesség"), "kedvesség");});
test("kedvessége -> kedvesség", function() {deepEqual( Stem("kedvessége"), "kedvesség");});
test("kedvességet -> kedvesség", function() {deepEqual( Stem("kedvességet"), "kedvesség");});
test("kedvességgel -> kedvesség", function() {deepEqual( Stem("kedvességgel"), "kedvesség");});
test("kedvességéből -> kedvesség", function() {deepEqual( Stem("kedvességéből"), "kedvesség");});
test("kedvetlenül -> kedvetlen", function() {deepEqual( Stem("kedvetlenül"), "kedvetlen");});
test("kedvez -> kedvez", function() {deepEqual( Stem("kedvez"), "kedvez");});
test("kedvezett -> kedvezet", function() {deepEqual( Stem("kedvezett"), "kedvezet");});
test("kedveznek -> kedvez", function() {deepEqual( Stem("kedveznek"), "kedvez");});
test("kedvezmény -> kedvezmény", function() {deepEqual( Stem("kedvezmény"), "kedvezmény");});
test("kedvezményben -> kedvezmény", function() {deepEqual( Stem("kedvezményben"), "kedvezmény");});
test("kedvezménye -> kedvezmény", function() {deepEqual( Stem("kedvezménye"), "kedvezmény");});
test("kedvezményei -> kedvezmény", function() {deepEqual( Stem("kedvezményei"), "kedvezmény");});
test("kedvezmények -> kedvezmény", function() {deepEqual( Stem("kedvezmények"), "kedvezmény");});
test("kedvezményeket -> kedvezmény", function() {deepEqual( Stem("kedvezményeket"), "kedvezmény");});
test("kedvezményekkel -> kedvezmény", function() {deepEqual( Stem("kedvezményekkel"), "kedvezmény");});
test("kedvezményekre -> kedvezmény", function() {deepEqual( Stem("kedvezményekre"), "kedvezmény");});
test("kedvezményekről -> kedvezmény", function() {deepEqual( Stem("kedvezményekről"), "kedvezmény");});
test("kedvezménynek -> kedvezmény", function() {deepEqual( Stem("kedvezménynek"), "kedvezmény");});
test("kedvezményre -> kedvezmény", function() {deepEqual( Stem("kedvezményre"), "kedvezmény");});
test("kedvezményt -> kedvezmény", function() {deepEqual( Stem("kedvezményt"), "kedvezmény");});
test("kedvezménytől -> kedvezmény", function() {deepEqual( Stem("kedvezménytől"), "kedvezmény");});
test("kedvezményét -> kedvezmény", function() {deepEqual( Stem("kedvezményét"), "kedvezmény");});
test("kedvezményes -> kedvezményes", function() {deepEqual( Stem("kedvezményes"), "kedvezményes");});
test("kedvezményezett -> kedvezményezet", function() {deepEqual( Stem("kedvezményezett"), "kedvezményezet");});
test("kedvezményezettje -> kedvezményezett", function() {deepEqual( Stem("kedvezményezettje"), "kedvezményezett");});
test("kedvezményezettként -> kedvezményezett", function() {deepEqual( Stem("kedvezményezettként"), "kedvezményezett");});
test("kedvezményezi -> kedvezményez", function() {deepEqual( Stem("kedvezményezi"), "kedvezményez");});
test("kedvező -> kedvező", function() {deepEqual( Stem("kedvező"), "kedvező");});
test("kedvezőbb -> kedvezőbb", function() {deepEqual( Stem("kedvezőbb"), "kedvezőbb");});
test("kedvezőbben -> kedvezőb", function() {deepEqual( Stem("kedvezőbben"), "kedvezőb");});
test("kedvezőbbre -> kedvezőbb", function() {deepEqual( Stem("kedvezőbbre"), "kedvezőbb");});
test("kedvezőek -> kedvező", function() {deepEqual( Stem("kedvezőek"), "kedvező");});
test("kedvezően -> kedvező", function() {deepEqual( Stem("kedvezően"), "kedvező");});
test("kedvezőtlen -> kedvezőtl", function() {deepEqual( Stem("kedvezőtlen"), "kedvezőtl");});
test("kedvezőtlenebb -> kedvezőtlenebb", function() {deepEqual( Stem("kedvezőtlenebb"), "kedvezőtlenebb");});
test("kedvezőtlenül -> kedvezőtlen", function() {deepEqual( Stem("kedvezőtlenül"), "kedvezőtlen");});
test("kedvtelés -> kedvtelés", function() {deepEqual( Stem("kedvtelés"), "kedvtelés");});
test("kedvtelésből -> kedvtelés", function() {deepEqual( Stem("kedvtelésből"), "kedvtelés");});
test("kedvű -> kedvű", function() {deepEqual( Stem("kedvű"), "kedvű");});
test("kedvűen -> kedvű", function() {deepEqual( Stem("kedvűen"), "kedvű");});
test("kedélybeteg -> kedélybeteg", function() {deepEqual( Stem("kedélybeteg"), "kedélybeteg");});
test("kedélybetegeket -> kedélybeteg", function() {deepEqual( Stem("kedélybetegeket"), "kedélybeteg");});
test("kedélyek -> kedély", function() {deepEqual( Stem("kedélyek"), "kedély");});
test("kedélyesen -> kedélyes", function() {deepEqual( Stem("kedélyesen"), "kedélyes");});
test("kedélyállapotomtól -> kedélyállapot", function() {deepEqual( Stem("kedélyállapotomtól"), "kedélyállapot");});
test("kedélyű -> kedélyű", function() {deepEqual( Stem("kedélyű"), "kedélyű");});
test("kedélyűségem -> kedélyűség", function() {deepEqual( Stem("kedélyűségem"), "kedélyűség");});
test("kefir -> kefir", function() {deepEqual( Stem("kefir"), "kefir");});
test("keféli -> kefél", function() {deepEqual( Stem("keféli"), "kefél");});
test("kegy -> kegy", function() {deepEqual( Stem("kegy"), "kegy");});
test("kegyben -> kegy", function() {deepEqual( Stem("kegyben"), "kegy");});
test("kegyeinek -> kegy", function() {deepEqual( Stem("kegyeinek"), "kegy");});
test("kegyeinket -> kegy", function() {deepEqual( Stem("kegyeinket"), "kegy");});
test("kegyeiért -> kegy", function() {deepEqual( Stem("kegyeiért"), "kegy");});
test("kegyem -> kegy", function() {deepEqual( Stem("kegyem"), "kegy");});
test("kegyen -> kegy", function() {deepEqual( Stem("kegyen"), "kegy");});
test("kegyüktől -> kegy", function() {deepEqual( Stem("kegyüktől"), "kegy");});
test("kegyelem -> kegyel", function() {deepEqual( Stem("kegyelem"), "kegyel");});
test("kegyelemben -> kegyel", function() {deepEqual( Stem("kegyelemben"), "kegyel");});
test("kegyelemhez -> kegyel", function() {deepEqual( Stem("kegyelemhez"), "kegyel");});
test("kegyelemmel -> kegyel", function() {deepEqual( Stem("kegyelemmel"), "kegyel");});
test("kegyelemért -> kegyel", function() {deepEqual( Stem("kegyelemért"), "kegyel");});
test("kegyelmet -> kegyel", function() {deepEqual( Stem("kegyelmet"), "kegyel");});
test("kegyelméból -> kegyelm", function() {deepEqual( Stem("kegyelméból"), "kegyelm");});
test("kegyelméből -> kegyelm", function() {deepEqual( Stem("kegyelméből"), "kegyelm");});
test("kegyeleti -> kegyelet", function() {deepEqual( Stem("kegyeleti"), "kegyelet");});
test("kegyesek -> kegyes", function() {deepEqual( Stem("kegyesek"), "kegyes");});
test("kegyesen -> kegyes", function() {deepEqual( Stem("kegyesen"), "kegyes");});
test("kegyeskedik -> kegyesked", function() {deepEqual( Stem("kegyeskedik"), "kegyesked");});
test("kegyeskedjék -> kegyeskedje", function() {deepEqual( Stem("kegyeskedjék"), "kegyeskedje");});
test("kegyetlen -> kegyetl", function() {deepEqual( Stem("kegyetlen"), "kegyetl");});
test("kegyetlenebb -> kegyetlenebb", function() {deepEqual( Stem("kegyetlenebb"), "kegyetlenebb");});
test("kegyetlenebbül -> kegyetlenebb", function() {deepEqual( Stem("kegyetlenebbül"), "kegyetlenebb");});
test("kegyetlennek -> kegyetlen", function() {deepEqual( Stem("kegyetlennek"), "kegyetlen");});
test("kegyetlenül -> kegyetlen", function() {deepEqual( Stem("kegyetlenül"), "kegyetlen");});
test("kegyetlenkedéseiről -> kegyetlenkedés", function() {deepEqual( Stem("kegyetlenkedéseiről"), "kegyetlenkedés");});
test("kegyetlenkedéseit -> kegyetlenkedés", function() {deepEqual( Stem("kegyetlenkedéseit"), "kegyetlenkedés");});
test("kegyetlenkedések -> kegyetlenkedés", function() {deepEqual( Stem("kegyetlenkedések"), "kegyetlenkedés");});
test("kegyetlenkedésekkel -> kegyetlenkedés", function() {deepEqual( Stem("kegyetlenkedésekkel"), "kegyetlenkedés");});
test("kegyetlenkedésének -> kegyetlenkedés", function() {deepEqual( Stem("kegyetlenkedésének"), "kegyetlenkedés");});
test("kegyetlenkedését -> kegyetlenkedés", function() {deepEqual( Stem("kegyetlenkedését"), "kegyetlenkedés");});
test("kegyetlenkedünk -> kegyetlenked", function() {deepEqual( Stem("kegyetlenkedünk"), "kegyetlenked");});
test("kegyetlensége -> kegyetlenség", function() {deepEqual( Stem("kegyetlensége"), "kegyetlenség");});
test("kegyetlenséggel -> kegyetlenség", function() {deepEqual( Stem("kegyetlenséggel"), "kegyetlenség");});
test("kegyetlenségnek -> kegyetlenség", function() {deepEqual( Stem("kegyetlenségnek"), "kegyetlenség");});
test("kegyetlenségre -> kegyetlenség", function() {deepEqual( Stem("kegyetlenségre"), "kegyetlenség");});
test("kegyhelyeken -> kegyhely", function() {deepEqual( Stem("kegyhelyeken"), "kegyhely");});
test("kegyszobrát -> kegyszobr", function() {deepEqual( Stem("kegyszobrát"), "kegyszobr");});
test("kegytárgyak -> kegytárgy", function() {deepEqual( Stem("kegytárgyak"), "kegytárgy");});
test("kegyvesztett -> kegyvesztet", function() {deepEqual( Stem("kegyvesztett"), "kegyvesztet");});
test("kegyvesztettek -> kegyvesztett", function() {deepEqual( Stem("kegyvesztettek"), "kegyvesztett");});
test("kehet -> keh", function() {deepEqual( Stem("kehet"), "keh");});
test("keine -> kein", function() {deepEqual( Stem("keine"), "kein");});
test("keksszel -> keksz", function() {deepEqual( Stem("keksszel"), "keksz");});
test("keksz -> keksz", function() {deepEqual( Stem("keksz"), "keksz");});
test("kekszére -> keksz", function() {deepEqual( Stem("kekszére"), "keksz");});
test("kelendőbbek -> kelendőbb", function() {deepEqual( Stem("kelendőbbek"), "kelendőbb");});
test("kelendőségének -> kelendőség", function() {deepEqual( Stem("kelendőségének"), "kelendőség");});
test("kelepcékbe -> kelepce", function() {deepEqual( Stem("kelepcékbe"), "kelepce");});
test("kelet-afrikai -> kelet-afri", function() {deepEqual( Stem("kelet-afrikai"), "kelet-afri");});
test("kelet-európai -> kelet-európ", function() {deepEqual( Stem("kelet-európai"), "kelet-európ");});
test("kelet-szlavóniai -> kelet-szlavóni", function() {deepEqual( Stem("kelet-szlavóniai"), "kelet-szlavóni");});
test("kelet-ázsiai -> kelet-ázsi", function() {deepEqual( Stem("kelet-ázsiai"), "kelet-ázsi");});
test("keleten -> kelet", function() {deepEqual( Stem("keleten"), "kelet");});
test("keletet -> kelet", function() {deepEqual( Stem("keletet"), "kelet");});
test("kelet -> kel", function() {deepEqual( Stem("kelet"), "kel");});
test("keletjük -> kelet", function() {deepEqual( Stem("keletjük"), "kelet");});
test("keleti -> kelet", function() {deepEqual( Stem("keleti"), "kelet");});
test("keletiek -> keleti", function() {deepEqual( Stem("keletiek"), "keleti");});
test("keletkezhet -> keletkezh", function() {deepEqual( Stem("keletkezhet"), "keletkezh");});
test("keletkezhetnek -> keletkezhet", function() {deepEqual( Stem("keletkezhetnek"), "keletkezhet");});
test("keletkezett -> keletkezet", function() {deepEqual( Stem("keletkezett"), "keletkezet");});
test("keletkezik -> keletkez", function() {deepEqual( Stem("keletkezik"), "keletkez");});
test("keletkezne -> keletkezn", function() {deepEqual( Stem("keletkezne"), "keletkezn");});
test("keletkeznek -> keletkez", function() {deepEqual( Stem("keletkeznek"), "keletkez");});
test("keletkeztek -> keletkezt", function() {deepEqual( Stem("keletkeztek"), "keletkezt");});
test("keletkezzen -> keletkezz", function() {deepEqual( Stem("keletkezzen"), "keletkezz");});
test("keletkeztet -> keletkezt", function() {deepEqual( Stem("keletkeztet"), "keletkezt");});
test("keletkeztető -> keletkeztető", function() {deepEqual( Stem("keletkeztető"), "keletkeztető");});
test("keletkezési -> keletkezés", function() {deepEqual( Stem("keletkezési"), "keletkezés");});
test("keletkezéséhez -> keletkezés", function() {deepEqual( Stem("keletkezéséhez"), "keletkezés");});
test("keletkezés -> keletkezés", function() {deepEqual( Stem("keletkezés"), "keletkezés");});
test("keletkezésének -> keletkezés", function() {deepEqual( Stem("keletkezésének"), "keletkezés");});
test("keletkezésére -> keletkezés", function() {deepEqual( Stem("keletkezésére"), "keletkezés");});
test("keletkezéséről -> keletkezés", function() {deepEqual( Stem("keletkezéséről"), "keletkezés");});
test("keletkezését -> keletkezés", function() {deepEqual( Stem("keletkezését"), "keletkezés");});
test("keletkező -> keletkező", function() {deepEqual( Stem("keletkező"), "keletkező");});
test("keletnémet -> keletne", function() {deepEqual( Stem("keletnémet"), "keletne");});
test("keletnémetek -> keletnémet", function() {deepEqual( Stem("keletnémetek"), "keletnémet");});
test("keletázsiai -> keletázsi", function() {deepEqual( Stem("keletázsiai"), "keletázsi");});
test("keletázsiaiak -> keletázsiai", function() {deepEqual( Stem("keletázsiaiak"), "keletázsiai");});
test("keletű -> keletű", function() {deepEqual( Stem("keletű"), "keletű");});
test("keletűek -> keletű", function() {deepEqual( Stem("keletűek"), "keletű");});
test("kelkáposzta -> kelkáposzt", function() {deepEqual( Stem("kelkáposzta"), "kelkáposzt");});
test("kelkáposztaszag -> kelkáposztaszag", function() {deepEqual( Stem("kelkáposztaszag"), "kelkáposztaszag");});
test("kellemes -> kellemes", function() {deepEqual( Stem("kellemes"), "kellemes");});
test("kellemesebb -> kellemesebb", function() {deepEqual( Stem("kellemesebb"), "kellemesebb");});
test("kellemesen -> kellemes", function() {deepEqual( Stem("kellemesen"), "kellemes");});
test("kellemeset -> kellemes", function() {deepEqual( Stem("kellemeset"), "kellemes");});
test("kellemesnek -> kellemes", function() {deepEqual( Stem("kellemesnek"), "kellemes");});
test("kellemessel -> kellemes", function() {deepEqual( Stem("kellemessel"), "kellemes");});
test("kellemesség -> kellemesség", function() {deepEqual( Stem("kellemesség"), "kellemesség");});
test("kellemetlen -> kellemetl", function() {deepEqual( Stem("kellemetlen"), "kellemetl");});
test("kellemetlenek -> kellemetl", function() {deepEqual( Stem("kellemetlenek"), "kellemetl");});
test("kellemetlenül -> kellemetlen", function() {deepEqual( Stem("kellemetlenül"), "kellemetlen");});
test("kellemetlenség -> kellemetlenség", function() {deepEqual( Stem("kellemetlenség"), "kellemetlenség");});
test("kellemetlenségek -> kellemetlenség", function() {deepEqual( Stem("kellemetlenségek"), "kellemetlenség");});
test("kellemetlenségektől -> kellemetlenség", function() {deepEqual( Stem("kellemetlenségektől"), "kellemetlenség");});
test("kellemetlenséget -> kellemetlenség", function() {deepEqual( Stem("kellemetlenséget"), "kellemetlenség");});
test("kellemetlenséggel -> kellemetlenség", function() {deepEqual( Stem("kellemetlenséggel"), "kellemetlenség");});
test("kellene -> kellen", function() {deepEqual( Stem("kellene"), "kellen");});
test("kellenek -> kell", function() {deepEqual( Stem("kellenek"), "kell");});
test("kellenének -> kellen", function() {deepEqual( Stem("kellenének"), "kellen");});
test("kell -> kell", function() {deepEqual( Stem("kell"), "kell");});
test("kelljen -> kellj", function() {deepEqual( Stem("kelljen"), "kellj");});
test("kelletlenül -> kelletlen", function() {deepEqual( Stem("kelletlenül"), "kelletlen");});
test("kellett -> kellet", function() {deepEqual( Stem("kellett"), "kellet");});
test("kellette -> kellett", function() {deepEqual( Stem("kellette"), "kellett");});
test("kellet -> kell", function() {deepEqual( Stem("kellet"), "kell");});
test("kellettek -> kellett", function() {deepEqual( Stem("kellettek"), "kellett");});
test("kellettem -> kellett", function() {deepEqual( Stem("kellettem"), "kellett");});
test("kelleténél -> kellet", function() {deepEqual( Stem("kelleténél"), "kellet");});
test("kellhet -> kellh", function() {deepEqual( Stem("kellhet"), "kellh");});
test("kellék -> kelle", function() {deepEqual( Stem("kellék"), "kelle");});
test("kelléke -> kelle", function() {deepEqual( Stem("kelléke"), "kelle");});
test("kellékei -> kelle", function() {deepEqual( Stem("kellékei"), "kelle");});
test("kellékeinek -> kelle", function() {deepEqual( Stem("kellékeinek"), "kelle");});
test("kellékeinek -> kelle", function() {deepEqual( Stem("kellékeinek"), "kelle");});
test("kellékeinél -> kelle", function() {deepEqual( Stem("kellékeinél"), "kelle");});
test("kellékeit -> kelle", function() {deepEqual( Stem("kellékeit"), "kelle");});
test("kellékek -> kellék", function() {deepEqual( Stem("kellékek"), "kellék");});
test("kellékeken -> kellék", function() {deepEqual( Stem("kellékeken"), "kellék");});
test("kellékeket -> kellék", function() {deepEqual( Stem("kellékeket"), "kellék");});
test("kellékekkel -> kellék", function() {deepEqual( Stem("kellékekkel"), "kellék");});
test("kellékeknek -> kellék", function() {deepEqual( Stem("kellékeknek"), "kellék");});
test("kellékekre -> kellék", function() {deepEqual( Stem("kellékekre"), "kellék");});
test("kellékekről -> kellék", function() {deepEqual( Stem("kellékekről"), "kellék");});
test("kellékeként -> kelle", function() {deepEqual( Stem("kellékeként"), "kelle");});
test("kelléket -> kelle", function() {deepEqual( Stem("kelléket"), "kelle");});
test("kellékkel -> kelle", function() {deepEqual( Stem("kellékkel"), "kelle");});
test("kellékként -> kelle", function() {deepEqual( Stem("kellékként"), "kelle");});
test("kellékét -> kelle", function() {deepEqual( Stem("kellékét"), "kelle");});
test("kellékévé -> kelle", function() {deepEqual( Stem("kellékévé"), "kelle");});
test("kellő -> kellő", function() {deepEqual( Stem("kellő"), "kellő");});
test("kellően -> kellő", function() {deepEqual( Stem("kellően"), "kellő");});
test("kellőképpen -> kellő", function() {deepEqual( Stem("kellőképpen"), "kellő");});
test("kellős -> kellős", function() {deepEqual( Stem("kellős"), "kellős");});
test("kelt -> kel", function() {deepEqual( Stem("kelt"), "kel");});
test("kelnek -> kel", function() {deepEqual( Stem("kelnek"), "kel");});
test("kelnem -> keln", function() {deepEqual( Stem("kelnem"), "keln");});
test("kelni -> keln", function() {deepEqual( Stem("kelni"), "keln");});
test("kelnie -> keln", function() {deepEqual( Stem("kelnie"), "keln");});
test("kelniük -> keln", function() {deepEqual( Stem("kelniük"), "keln");});
test("kelnünk -> keln", function() {deepEqual( Stem("kelnünk"), "keln");});
test("kelsz -> kelsz", function() {deepEqual( Stem("kelsz"), "kelsz");});
test("kelj -> kelj", function() {deepEqual( Stem("kelj"), "kelj");});
test("keljen -> kelj", function() {deepEqual( Stem("keljen"), "kelj");});
test("kel -> kel", function() {deepEqual( Stem("kel"), "kel");});
test("kelek -> kel", function() {deepEqual( Stem("kelek"), "kel");});
test("keltünk -> kelt", function() {deepEqual( Stem("keltünk"), "kelt");});
test("kelte -> kelt", function() {deepEqual( Stem("kelte"), "kelt");});
test("keltem -> kelt", function() {deepEqual( Stem("keltem"), "kelt");});
test("keltek -> kelt", function() {deepEqual( Stem("keltek"), "kelt");});
test("keltett -> keltet", function() {deepEqual( Stem("keltett"), "keltet");});
test("keltette -> keltett", function() {deepEqual( Stem("keltette"), "keltett");});
test("keltettek -> keltett", function() {deepEqual( Stem("keltettek"), "keltett");});
test("keltették -> keltette", function() {deepEqual( Stem("keltették"), "keltette");});
test("keltettél -> keltettél", function() {deepEqual( Stem("keltettél"), "keltettél");});
test("kelteni -> kelten", function() {deepEqual( Stem("kelteni"), "kelten");});
test("keltenék -> keltene", function() {deepEqual( Stem("keltenék"), "keltene");});
test("keltetőbe -> keltető", function() {deepEqual( Stem("keltetőbe"), "keltető");});
test("keltezés -> keltezés", function() {deepEqual( Stem("keltezés"), "keltezés");});
test("keltfent -> keltfen", function() {deepEqual( Stem("keltfent"), "keltfen");});
test("kelthet -> kelth", function() {deepEqual( Stem("kelthet"), "kelth");});
test("keltheti -> kelthet", function() {deepEqual( Stem("keltheti"), "kelthet");});
test("kelthetik -> kelthet", function() {deepEqual( Stem("kelthetik"), "kelthet");});
test("kelthetnének -> kelthetn", function() {deepEqual( Stem("kelthetnének"), "kelthetn");});
test("kelti -> kelt", function() {deepEqual( Stem("kelti"), "kelt");});
test("keltik -> kelt", function() {deepEqual( Stem("keltik"), "kelt");});
test("keltse -> kelts", function() {deepEqual( Stem("keltse"), "kelts");});
test("keltve -> keltv", function() {deepEqual( Stem("keltve"), "keltv");});
test("kelták -> kelta", function() {deepEqual( Stem("kelták"), "kelta");});
test("keltákra -> kelta", function() {deepEqual( Stem("keltákra"), "kelta");});
test("keltákért -> kelta", function() {deepEqual( Stem("keltákért"), "kelta");});
test("kelta -> kelt", function() {deepEqual( Stem("kelta"), "kelt");});
test("keltének -> kelt", function() {deepEqual( Stem("keltének"), "kelt");});
test("keltét -> kelt", function() {deepEqual( Stem("keltét"), "kelt");});
test("keltő -> keltő", function() {deepEqual( Stem("keltő"), "keltő");});
test("keltői -> keltő", function() {deepEqual( Stem("keltői"), "keltő");});
test("kelés -> kelés", function() {deepEqual( Stem("kelés"), "kelés");});
test("kelést -> kelés", function() {deepEqual( Stem("kelést"), "kelés");});
test("kelő -> kelő", function() {deepEqual( Stem("kelő"), "kelő");});
test("kemence -> kemenc", function() {deepEqual( Stem("kemence"), "kemenc");});
test("kemencében -> kemenc", function() {deepEqual( Stem("kemencében"), "kemenc");});
test("kemencék -> kemence", function() {deepEqual( Stem("kemencék"), "kemence");});
test("kemencékbe -> kemence", function() {deepEqual( Stem("kemencékbe"), "kemence");});
test("kemencékben -> kemence", function() {deepEqual( Stem("kemencékben"), "kemence");});
test("kempingbe -> kemping", function() {deepEqual( Stem("kempingbe"), "kemping");});
test("kempingben -> kemping", function() {deepEqual( Stem("kempingben"), "kemping");});
test("keménnyé -> kemény", function() {deepEqual( Stem("keménnyé"), "kemény");});
test("kemény -> kemény", function() {deepEqual( Stem("kemény"), "kemény");});
test("keményebb -> keményebb", function() {deepEqual( Stem("keményebb"), "keményebb");});
test("keményebben -> keményeb", function() {deepEqual( Stem("keményebben"), "keményeb");});
test("keményebbnek -> keményebb", function() {deepEqual( Stem("keményebbnek"), "keményebb");});
test("kemények -> kemény", function() {deepEqual( Stem("kemények"), "kemény");});
test("keményen -> kemény", function() {deepEqual( Stem("keményen"), "kemény");});
test("keménynek -> kemény", function() {deepEqual( Stem("keménynek"), "kemény");});
test("keményre -> kemény", function() {deepEqual( Stem("keményre"), "kemény");});
test("keményfejű -> keményfejű", function() {deepEqual( Stem("keményfejű"), "keményfejű");});
test("keményféle -> keményfél", function() {deepEqual( Stem("keményféle"), "keményfél");});
test("keménykalap -> keménykalap", function() {deepEqual( Stem("keménykalap"), "keménykalap");});
test("keménykezűnek -> keménykezű", function() {deepEqual( Stem("keménykezűnek"), "keménykezű");});
test("keménysége -> keménység", function() {deepEqual( Stem("keménysége"), "keménység");});
test("keménységét -> keménység", function() {deepEqual( Stem("keménységét"), "keménység");});
test("kencét -> kenc", function() {deepEqual( Stem("kencét"), "kenc");});
test("kendőt -> kendő", function() {deepEqual( Stem("kendőt"), "kendő");});
test("kendővel -> kendő", function() {deepEqual( Stem("kendővel"), "kendő");});
test("kenegetni -> kenegetn", function() {deepEqual( Stem("kenegetni"), "kenegetn");});
test("kenetteljes -> kenetteljes", function() {deepEqual( Stem("kenetteljes"), "kenetteljes");});
test("kenetteljesen -> kenetteljes", function() {deepEqual( Stem("kenetteljesen"), "kenetteljes");});
test("kennek -> ken", function() {deepEqual( Stem("kennek"), "ken");});
test("kenek -> ke", function() {deepEqual( Stem("kenek"), "ke");});
test("kente -> kent", function() {deepEqual( Stem("kente"), "kent");});
test("kentek -> kent", function() {deepEqual( Stem("kentek"), "kent");});
test("kenték -> kente", function() {deepEqual( Stem("kenték"), "kente");});
test("kent -> ken", function() {deepEqual( Stem("kent"), "ken");});
test("kenuzni -> kenuzn", function() {deepEqual( Stem("kenuzni"), "kenuzn");});
test("kenve -> kenv", function() {deepEqual( Stem("kenve"), "kenv");});
test("kenyai -> keny", function() {deepEqual( Stem("kenyai"), "keny");});
test("kenyereskocsi -> kenyereskocs", function() {deepEqual( Stem("kenyereskocsi"), "kenyereskocs");});
test("kenyeret -> kenyer", function() {deepEqual( Stem("kenyeret"), "kenyer");});
test("kenyeremet -> kenyer", function() {deepEqual( Stem("kenyeremet"), "kenyer");});
test("kenyerét -> kenyer", function() {deepEqual( Stem("kenyerét"), "kenyer");});
test("kenyerével -> kenyer", function() {deepEqual( Stem("kenyerével"), "kenyer");});
test("kenyér -> kenyér", function() {deepEqual( Stem("kenyér"), "kenyér");});
test("kenyérbe -> kenyér", function() {deepEqual( Stem("kenyérbe"), "kenyér");});
test("kenyérből -> kenyér", function() {deepEqual( Stem("kenyérből"), "kenyér");});
test("kenyéren -> kenyér", function() {deepEqual( Stem("kenyéren"), "kenyér");});
test("kenyérre -> kenyér", function() {deepEqual( Stem("kenyérre"), "kenyér");});
test("kenyérrel -> kenyér", function() {deepEqual( Stem("kenyérrel"), "kenyér");});
test("kenyérért -> kenyér", function() {deepEqual( Stem("kenyérért"), "kenyér");});
test("kenyérdarab -> kenyérdarab", function() {deepEqual( Stem("kenyérdarab"), "kenyérdarab");});
test("kenyérdarabokat -> kenyérdarab", function() {deepEqual( Stem("kenyérdarabokat"), "kenyérdarab");});
test("kenyérdarabot -> kenyérdarab", function() {deepEqual( Stem("kenyérdarabot"), "kenyérdarab");});
test("kenyérdarabkákat -> kenyérdarabka", function() {deepEqual( Stem("kenyérdarabkákat"), "kenyérdarabka");});
test("kenyérfélék -> kenyérféle", function() {deepEqual( Stem("kenyérfélék"), "kenyérféle");});
test("kenyérhéj -> kenyérhéj", function() {deepEqual( Stem("kenyérhéj"), "kenyérhéj");});
test("kenyérhéjat -> kenyérhéj", function() {deepEqual( Stem("kenyérhéjat"), "kenyérhéj");});
test("kenyérmorzsa -> kenyérmorzs", function() {deepEqual( Stem("kenyérmorzsa"), "kenyérmorzs");});
test("kenyérsütésnek -> kenyérsütés", function() {deepEqual( Stem("kenyérsütésnek"), "kenyérsütés");});
test("kenyértésztát -> kenyértészt", function() {deepEqual( Stem("kenyértésztát"), "kenyértészt");});
test("kenyérüzletben -> kenyérüzlet", function() {deepEqual( Stem("kenyérüzletben"), "kenyérüzlet");});
test("kenés -> kenés", function() {deepEqual( Stem("kenés"), "kenés");});
test("kenőccsel -> kenőcs", function() {deepEqual( Stem("kenőccsel"), "kenőcs");});
test("kenőcs -> kenőcs", function() {deepEqual( Stem("kenőcs"), "kenőcs");});
test("kenőcsöt -> kenőcs", function() {deepEqual( Stem("kenőcsöt"), "kenőcs");});
test("kerek -> ker", function() {deepEqual( Stem("kerek"), "ker");});
test("kerekasztal-beszélgetésekre -> kerekasztal-beszélgetés", function() {deepEqual( Stem("kerekasztal-beszélgetésekre"), "kerekasztal-beszélgetés");});
test("kerekasztal-beszélgetésnek -> kerekasztal-beszélgetés", function() {deepEqual( Stem("kerekasztal-beszélgetésnek"), "kerekasztal-beszélgetés");});
test("kerekedett -> kerekedet", function() {deepEqual( Stem("kerekedett"), "kerekedet");});
test("kerekedhet -> kerekedh", function() {deepEqual( Stem("kerekedhet"), "kerekedh");});
test("kerekedik -> kereked", function() {deepEqual( Stem("kerekedik"), "kereked");});
test("kerekes -> kerekes", function() {deepEqual( Stem("kerekes"), "kerekes");});
test("kerekezni -> kerekezn", function() {deepEqual( Stem("kerekezni"), "kerekezn");});
test("kerekítést -> kerekítés", function() {deepEqual( Stem("kerekítést"), "kerekítés");});
test("kerengő -> kerengő", function() {deepEqual( Stem("kerengő"), "kerengő");});
test("kerepelő -> kerepelő", function() {deepEqual( Stem("kerepelő"), "kerepelő");});
test("keresendő -> keresendő", function() {deepEqual( Stem("keresendő"), "keresendő");});
test("keresetemelkedés -> keresetemelkedés", function() {deepEqual( Stem("keresetemelkedés"), "keresetemelkedés");});
test("kereseti -> kereset", function() {deepEqual( Stem("kereseti"), "kereset");});
test("keresetindítás -> keresetindítás", function() {deepEqual( Stem("keresetindítás"), "keresetindítás");});
test("keresetindításnak -> keresetindítás", function() {deepEqual( Stem("keresetindításnak"), "keresetindítás");});
test("keresetindításra -> keresetindítás", function() {deepEqual( Stem("keresetindításra"), "keresetindítás");});
test("keresetkiegészítés -> keresetkiegészítés", function() {deepEqual( Stem("keresetkiegészítés"), "keresetkiegészítés");});
test("keresetlen -> keresetl", function() {deepEqual( Stem("keresetlen"), "keresetl");});
test("keresetlevelet -> keresetlevel", function() {deepEqual( Stem("keresetlevelet"), "keresetlevel");});
test("keresetlevél -> keresetlevél", function() {deepEqual( Stem("keresetlevél"), "keresetlevél");});
test("keresetlevélnek -> keresetlevél", function() {deepEqual( Stem("keresetlevélnek"), "keresetlevél");});
test("keresetlevélre -> keresetlevél", function() {deepEqual( Stem("keresetlevélre"), "keresetlevél");});
test("kereset -> keres", function() {deepEqual( Stem("kereset"), "keres");});
test("keresetben -> kereset", function() {deepEqual( Stem("keresetben"), "kereset");});
test("keresete -> kereset", function() {deepEqual( Stem("keresete"), "kereset");});
test("keresetek -> kereset", function() {deepEqual( Stem("keresetek"), "kereset");});
test("keresetem -> kereset", function() {deepEqual( Stem("keresetem"), "kereset");});
test("keresetemmel -> kereset", function() {deepEqual( Stem("keresetemmel"), "kereset");});
test("keresetet -> kereset", function() {deepEqual( Stem("keresetet"), "kereset");});
test("keresetnek -> kereset", function() {deepEqual( Stem("keresetnek"), "kereset");});
test("keresetéből -> kereset", function() {deepEqual( Stem("keresetéből"), "kereset");});
test("keresettől -> kereset", function() {deepEqual( Stem("keresettől"), "kereset");});
test("keresettel -> keres", function() {deepEqual( Stem("keresettel"), "keres");});
test("keresetének -> kereset", function() {deepEqual( Stem("keresetének"), "kereset");});
test("keresett -> kereset", function() {deepEqual( Stem("keresett"), "kereset");});
test("keresettebb -> keresettebb", function() {deepEqual( Stem("keresettebb"), "keresettebb");});
test("keresettek -> keresett", function() {deepEqual( Stem("keresettek"), "keresett");});
test("keresetváltoztatás -> keresetváltoztatás", function() {deepEqual( Stem("keresetváltoztatás"), "keresetváltoztatás");});
test("keresetváltoztatásnak -> keresetváltoztatás", function() {deepEqual( Stem("keresetváltoztatásnak"), "keresetváltoztatás");});
test("keresetű -> keresetű", function() {deepEqual( Stem("keresetű"), "keresetű");});
test("keresgélhet -> keresgélh", function() {deepEqual( Stem("keresgélhet"), "keresgélh");});
test("keresgélje -> keresgél", function() {deepEqual( Stem("keresgélje"), "keresgél");});
test("keresgélt -> keresgél", function() {deepEqual( Stem("keresgélt"), "keresgél");});
test("keresgéltem -> keresgélt", function() {deepEqual( Stem("keresgéltem"), "keresgélt");});
test("keresgéltünk -> keresgélt", function() {deepEqual( Stem("keresgéltünk"), "keresgélt");});
test("kereshet -> keresh", function() {deepEqual( Stem("kereshet"), "keresh");});
test("kereshetek -> kereshet", function() {deepEqual( Stem("kereshetek"), "kereshet");});
test("keresheti -> kereshet", function() {deepEqual( Stem("keresheti"), "kereshet");});
test("kereshetjük -> kereshet", function() {deepEqual( Stem("kereshetjük"), "kereshet");});
test("kereshetnék -> kereshetne", function() {deepEqual( Stem("kereshetnék"), "kereshetne");});
test("kereshette -> kereshett", function() {deepEqual( Stem("kereshette"), "kereshett");});
test("kereshettem -> kereshett", function() {deepEqual( Stem("kereshettem"), "kereshett");});
test("kereshető -> kereshető", function() {deepEqual( Stem("kereshető"), "kereshető");});
test("kereshetővé -> kereshető", function() {deepEqual( Stem("kereshetővé"), "kereshető");});
test("kereskedelem -> kereskedel", function() {deepEqual( Stem("kereskedelem"), "kereskedel");});
test("kereskedelembe -> kereskedel", function() {deepEqual( Stem("kereskedelembe"), "kereskedel");});
test("kereskedelemben -> kereskedel", function() {deepEqual( Stem("kereskedelemben"), "kereskedel");});
test("kereskedelemhez -> kereskedel", function() {deepEqual( Stem("kereskedelemhez"), "kereskedel");});
test("kereskedelemmel -> kereskedel", function() {deepEqual( Stem("kereskedelemmel"), "kereskedel");});
test("kereskedelemnek -> kereskedel", function() {deepEqual( Stem("kereskedelemnek"), "kereskedel");});
test("kereskedelemre -> kereskedel", function() {deepEqual( Stem("kereskedelemre"), "kereskedel");});
test("kereskedelemről -> kereskedel", function() {deepEqual( Stem("kereskedelemről"), "kereskedel");});
test("kereskedelme -> kereskedelm", function() {deepEqual( Stem("kereskedelme"), "kereskedelm");});
test("kereskedelmet -> kereskedel", function() {deepEqual( Stem("kereskedelmet"), "kereskedel");});
test("kereskedelmének -> kereskedelm", function() {deepEqual( Stem("kereskedelmének"), "kereskedelm");});
test("kereskedelmét -> kereskedelm", function() {deepEqual( Stem("kereskedelmét"), "kereskedelm");});
test("kereskedelmével -> kereskedelm", function() {deepEqual( Stem("kereskedelmével"), "kereskedelm");});
test("kereskedelmi -> kereskedelm", function() {deepEqual( Stem("kereskedelmi"), "kereskedelm");});
test("kereskedelmi-marketing -> kereskedelmi-marketing", function() {deepEqual( Stem("kereskedelmi-marketing"), "kereskedelmi-marketing");});
test("kereskedhet -> kereskedh", function() {deepEqual( Stem("kereskedhet"), "kereskedh");});
test("kereskedett -> kereskedet", function() {deepEqual( Stem("kereskedett"), "kereskedet");});
test("kereskedik -> keresked", function() {deepEqual( Stem("kereskedik"), "keresked");});
test("kereskednek -> keres", function() {deepEqual( Stem("kereskednek"), "keres");});
test("kereskedni -> kereskedn", function() {deepEqual( Stem("kereskedni"), "kereskedn");});
test("kereskedtek -> kereskedt", function() {deepEqual( Stem("kereskedtek"), "kereskedt");});
test("kereskedés -> kereskedés", function() {deepEqual( Stem("kereskedés"), "kereskedés");});
test("kereskedésben -> kereskedés", function() {deepEqual( Stem("kereskedésben"), "kereskedés");});
test("kereskedéseket -> kereskedés", function() {deepEqual( Stem("kereskedéseket"), "kereskedés");});
test("kereskedéshez -> kereskedés", function() {deepEqual( Stem("kereskedéshez"), "kereskedés");});
test("kereskedésnek -> kereskedés", function() {deepEqual( Stem("kereskedésnek"), "kereskedés");});
test("kereskedést -> kereskedés", function() {deepEqual( Stem("kereskedést"), "kereskedés");});
test("kereskedésének -> kereskedés", function() {deepEqual( Stem("kereskedésének"), "kereskedés");});
test("kereskedési -> kereskedés", function() {deepEqual( Stem("kereskedési"), "kereskedés");});
test("kereskedőcég -> kereskedőcég", function() {deepEqual( Stem("kereskedőcég"), "kereskedőcég");});
test("kereskedőházban -> kereskedőház", function() {deepEqual( Stem("kereskedőházban"), "kereskedőház");});
test("kereskedő -> kereskedő", function() {deepEqual( Stem("kereskedő"), "kereskedő");});
test("kereskedők -> kereskedő", function() {deepEqual( Stem("kereskedők"), "kereskedő");});
test("kereskedőket -> kereskedő", function() {deepEqual( Stem("kereskedőket"), "kereskedő");});
test("kereskedőknek -> kereskedő", function() {deepEqual( Stem("kereskedőknek"), "kereskedő");});
test("kereskedőnek -> kereskedő", function() {deepEqual( Stem("kereskedőnek"), "kereskedő");});
test("kereskedőt -> kereskedő", function() {deepEqual( Stem("kereskedőt"), "kereskedő");});
test("kereskedővé -> kereskedő", function() {deepEqual( Stem("kereskedővé"), "kereskedő");});
test("kereskedősegéd -> kereskedősege", function() {deepEqual( Stem("kereskedősegéd"), "kereskedősege");});
test("keresletcsökkenést -> keresletcsökkenés", function() {deepEqual( Stem("keresletcsökkenést"), "keresletcsökkenés");});
test("kereslete -> kereslet", function() {deepEqual( Stem("kereslete"), "kereslet");});
test("keresletet -> kereslet", function() {deepEqual( Stem("keresletet"), "kereslet");});
test("kereslethez -> kereslet", function() {deepEqual( Stem("kereslethez"), "kereslet");});
test("keresletre -> kereslet", function() {deepEqual( Stem("keresletre"), "kereslet");});
test("kereslettel -> keresl", function() {deepEqual( Stem("kereslettel"), "keresl");});
test("kereslettől -> kereslet", function() {deepEqual( Stem("kereslettől"), "kereslet");});
test("keresletét -> kereslet", function() {deepEqual( Stem("keresletét"), "kereslet");});
test("kereslet -> keresl", function() {deepEqual( Stem("kereslet"), "keresl");});
test("keresleti -> kereslet", function() {deepEqual( Stem("keresleti"), "kereslet");});
test("keresnivalója -> keresnivaló", function() {deepEqual( Stem("keresnivalója"), "keresnivaló");});
test("keresi -> keres", function() {deepEqual( Stem("keresi"), "keres");});
test("keresik -> keres", function() {deepEqual( Stem("keresik"), "keres");});
test("keresne -> keresn", function() {deepEqual( Stem("keresne"), "keresn");});
test("keresünk -> keres", function() {deepEqual( Stem("keresünk"), "keres");});
test("keresnek -> keres", function() {deepEqual( Stem("keresnek"), "keres");});
test("keresnem -> keresn", function() {deepEqual( Stem("keresnem"), "keresn");});
test("keresni -> keresn", function() {deepEqual( Stem("keresni"), "keresn");});
test("keresniekeresniük -> keresniekeresn", function() {deepEqual( Stem("keresniekeresniük"), "keresniekeresn");});
test("keresnék -> keresne", function() {deepEqual( Stem("keresnék"), "keresne");});
test("keresnünk -> keresn", function() {deepEqual( Stem("keresnünk"), "keresn");});
test("keresse -> keress", function() {deepEqual( Stem("keresse"), "keress");});
test("keressek -> keress", function() {deepEqual( Stem("keressek"), "keress");});
test("keresselek -> keressel", function() {deepEqual( Stem("keresselek"), "keressel");});
test("keressem -> keress", function() {deepEqual( Stem("keressem"), "keress");});
test("keressen -> keress", function() {deepEqual( Stem("keressen"), "keress");});
test("keressenek -> keress", function() {deepEqual( Stem("keressenek"), "keress");});
test("keressetek -> keresset", function() {deepEqual( Stem("keressetek"), "keresset");});
test("keressék -> keresse", function() {deepEqual( Stem("keressék"), "keresse");});
test("keressük -> keress", function() {deepEqual( Stem("keressük"), "keress");});
test("keressünk -> keress", function() {deepEqual( Stem("keressünk"), "keress");});
test("kereste -> kerest", function() {deepEqual( Stem("kereste"), "kerest");});
test("kerested -> kerest", function() {deepEqual( Stem("kerested"), "kerest");});
test("kerestek -> kerest", function() {deepEqual( Stem("kerestek"), "kerest");});
test("kerestem -> kerest", function() {deepEqual( Stem("kerestem"), "kerest");});
test("keresték -> kereste", function() {deepEqual( Stem("keresték"), "kereste");});
test("kerestél -> kerestél", function() {deepEqual( Stem("kerestél"), "kerestél");});
test("kerestük -> kerest", function() {deepEqual( Stem("kerestük"), "kerest");});
test("keres -> keres", function() {deepEqual( Stem("keres"), "keres");});
test("keresek -> keres", function() {deepEqual( Stem("keresek"), "keres");});
test("keresem -> keres", function() {deepEqual( Stem("keresem"), "keres");});
test("kereslek -> keresl", function() {deepEqual( Stem("kereslek"), "keresl");});
test("kerestethető -> kerestethető", function() {deepEqual( Stem("kerestethető"), "kerestethető");});
test("keresve -> keresv", function() {deepEqual( Stem("keresve"), "keresv");});
test("keresz-telt -> keresz-tel", function() {deepEqual( Stem("keresz-telt"), "keresz-tel");});
test("keresztanyja -> keresztany", function() {deepEqual( Stem("keresztanyja"), "keresztany");});
test("keresztanyám -> keresztanya", function() {deepEqual( Stem("keresztanyám"), "keresztanya");});
test("keresztanyámmal -> keresztanya", function() {deepEqual( Stem("keresztanyámmal"), "keresztanya");});
test("keresztanyámék -> keresztanyáme", function() {deepEqual( Stem("keresztanyámék"), "keresztanyáme");});
test("keresztanyáméknál -> keresztanyáme", function() {deepEqual( Stem("keresztanyáméknál"), "keresztanyáme");});
test("keresztapai -> keresztap", function() {deepEqual( Stem("keresztapai"), "keresztap");});
test("keresztapja -> keresztap", function() {deepEqual( Stem("keresztapja"), "keresztap");});
test("keresztapa -> keresztap", function() {deepEqual( Stem("keresztapa"), "keresztap");});
test("keresztapu -> keresztapu", function() {deepEqual( Stem("keresztapu"), "keresztapu");});
test("keresztapukám -> keresztapuka", function() {deepEqual( Stem("keresztapukám"), "keresztapuka");});
test("keresztapák -> keresztapa", function() {deepEqual( Stem("keresztapák"), "keresztapa");});
test("keresztapám -> keresztapa", function() {deepEqual( Stem("keresztapám"), "keresztapa");});
test("keresztapámmal -> keresztapa", function() {deepEqual( Stem("keresztapámmal"), "keresztapa");});
test("keresztapának -> keresztap", function() {deepEqual( Stem("keresztapának"), "keresztap");});
test("keresztbe-kasul -> keresztbe-kas", function() {deepEqual( Stem("keresztbe-kasul"), "keresztbe-kas");});
test("keresztben -> kereszt", function() {deepEqual( Stem("keresztben"), "kereszt");});
test("kereszt -> keresz", function() {deepEqual( Stem("kereszt"), "keresz");});
test("keresztbe -> kereszt", function() {deepEqual( Stem("keresztbe"), "kereszt");});
test("keresztek -> kereszt", function() {deepEqual( Stem("keresztek"), "kereszt");});
test("kereszteket -> kereszt", function() {deepEqual( Stem("kereszteket"), "kereszt");});
test("keresztet -> kereszt", function() {deepEqual( Stem("keresztet"), "kereszt");});
test("keresztje -> kereszt", function() {deepEqual( Stem("keresztje"), "kereszt");});
test("keresztre -> kereszt", function() {deepEqual( Stem("keresztre"), "kereszt");});
test("keresztbetett -> keresztbetet", function() {deepEqual( Stem("keresztbetett"), "keresztbetet");});
test("keresztelkedjen -> keresztelkedj", function() {deepEqual( Stem("keresztelkedjen"), "keresztelkedj");});
test("keresztelnek -> keresztel", function() {deepEqual( Stem("keresztelnek"), "keresztel");});
test("keresztelni -> kereszteln", function() {deepEqual( Stem("keresztelni"), "kereszteln");});
test("keresztelt -> keresztel", function() {deepEqual( Stem("keresztelt"), "keresztel");});
test("keresztelőjére -> keresztelő", function() {deepEqual( Stem("keresztelőjére"), "keresztelő");});
test("keresztelőn -> keresztelő", function() {deepEqual( Stem("keresztelőn"), "keresztelő");});
test("keresztelőre -> keresztelő", function() {deepEqual( Stem("keresztelőre"), "keresztelő");});
test("keresztes -> keresztes", function() {deepEqual( Stem("keresztes"), "keresztes");});
test("keresztezheti -> keresztezhet", function() {deepEqual( Stem("keresztezheti"), "keresztezhet");});
test("keresztezte -> keresztezt", function() {deepEqual( Stem("keresztezte"), "keresztezt");});
test("keresztezve -> keresztezv", function() {deepEqual( Stem("keresztezve"), "keresztezv");});
test("keresztezésénél -> keresztezés", function() {deepEqual( Stem("keresztezésénél"), "keresztezés");});
test("kereszteződésnél -> kereszteződés", function() {deepEqual( Stem("kereszteződésnél"), "kereszteződés");});
test("keresztfiát -> keresztf", function() {deepEqual( Stem("keresztfiát"), "keresztf");});
test("keresztfolyosó -> keresztfolyosó", function() {deepEqual( Stem("keresztfolyosó"), "keresztfolyosó");});
test("keresztfolyosónál -> keresztfolyosó", function() {deepEqual( Stem("keresztfolyosónál"), "keresztfolyosó");});
test("keresztgyermekemet -> keresztgyerm", function() {deepEqual( Stem("keresztgyermekemet"), "keresztgyerm");});
test("kereszthajóban -> kereszthajó", function() {deepEqual( Stem("kereszthajóban"), "kereszthajó");});
test("kereszthódolat -> kereszthódol", function() {deepEqual( Stem("kereszthódolat"), "kereszthódol");});
test("keresztlányukkal -> keresztlány", function() {deepEqual( Stem("keresztlányukkal"), "keresztlány");});
test("keresztmetszet -> keresztmetsz", function() {deepEqual( Stem("keresztmetszet"), "keresztmetsz");});
test("keresztmetszete -> keresztmetszet", function() {deepEqual( Stem("keresztmetszete"), "keresztmetszet");});
test("keresztmetszeteik -> keresztmetszet", function() {deepEqual( Stem("keresztmetszeteik"), "keresztmetszet");});
test("keresztmetszeteinek -> keresztmetszet", function() {deepEqual( Stem("keresztmetszeteinek"), "keresztmetszet");});
test("keresztmetszetek -> keresztmetszet", function() {deepEqual( Stem("keresztmetszetek"), "keresztmetszet");});
test("keresztmetszetet -> keresztmetszet", function() {deepEqual( Stem("keresztmetszetet"), "keresztmetszet");});
test("keresztmetszetté -> keresztmetszet", function() {deepEqual( Stem("keresztmetszetté"), "keresztmetszet");});
test("keresztmetszetű -> keresztmetszetű", function() {deepEqual( Stem("keresztmetszetű"), "keresztmetszetű");});
test("keresztnevemmel -> keresztnev", function() {deepEqual( Stem("keresztnevemmel"), "keresztnev");});
test("keresztnév -> keresztnév", function() {deepEqual( Stem("keresztnév"), "keresztnév");});
test("keresztrészesedések -> keresztrészesedés", function() {deepEqual( Stem("keresztrészesedések"), "keresztrészesedés");});
test("keresztrészesedéseket -> keresztrészesedés", function() {deepEqual( Stem("keresztrészesedéseket"), "keresztrészesedés");});
test("keresztrészesedési -> keresztrészesedés", function() {deepEqual( Stem("keresztrészesedési"), "keresztrészesedés");});
test("keresztrészesedésnek -> keresztrészesedés", function() {deepEqual( Stem("keresztrészesedésnek"), "keresztrészesedés");});
test("keresztrészesedésről -> keresztrészesedés", function() {deepEqual( Stem("keresztrészesedésről"), "keresztrészesedés");});
test("keresztszüleik -> keresztszül", function() {deepEqual( Stem("keresztszüleik"), "keresztszül");});
test("keresztszüleim -> keresztszül", function() {deepEqual( Stem("keresztszüleim"), "keresztszül");});
test("keresztszüleimnek -> keresztszül", function() {deepEqual( Stem("keresztszüleimnek"), "keresztszül");});
test("keresztségben -> keresztség", function() {deepEqual( Stem("keresztségben"), "keresztség");});
test("kereszttüzébe -> kereszttüz", function() {deepEqual( Stem("kereszttüzébe"), "kereszttüz");});
test("kereszttüzében -> kereszttüz", function() {deepEqual( Stem("kereszttüzében"), "kereszttüz");});
test("keresztutca -> keresztutc", function() {deepEqual( Stem("keresztutca"), "keresztutc");});
test("keresztény -> keresztény", function() {deepEqual( Stem("keresztény"), "keresztény");});
test("kereszténydemokrata -> kereszténydemokrat", function() {deepEqual( Stem("kereszténydemokrata"), "kereszténydemokrat");});
test("kereszténydemokratákig -> kereszténydemokrata", function() {deepEqual( Stem("kereszténydemokratákig"), "kereszténydemokrata");});
test("kereszténydemokratákkal -> kereszténydemokrata", function() {deepEqual( Stem("kereszténydemokratákkal"), "kereszténydemokrata");});
test("keresztényi -> keresztény", function() {deepEqual( Stem("keresztényi"), "keresztény");});
test("kereszténység -> kereszténység", function() {deepEqual( Stem("kereszténység"), "kereszténység");});
test("kereszténységet -> kereszténység", function() {deepEqual( Stem("kereszténységet"), "kereszténység");});
test("kereszténységgel -> kereszténység", function() {deepEqual( Stem("kereszténységgel"), "kereszténység");});
test("kereszténységnek -> kereszténység", function() {deepEqual( Stem("kereszténységnek"), "kereszténység");});
test("keresztértékesítésre -> keresztértékesítés", function() {deepEqual( Stem("keresztértékesítésre"), "keresztértékesítés");});
test("keresztértékesítést -> keresztértékesítés", function() {deepEqual( Stem("keresztértékesítést"), "keresztértékesítés");});
test("keresztúton -> keresztút", function() {deepEqual( Stem("keresztúton"), "keresztút");});
test("keresztül -> kereszt", function() {deepEqual( Stem("keresztül"), "kereszt");});
test("keresztül-kasul -> keresztül-kas", function() {deepEqual( Stem("keresztül-kasul"), "keresztül-kas");});
test("keresztülballagott -> keresztülballagot", function() {deepEqual( Stem("keresztülballagott"), "keresztülballagot");});
test("keresztülborzongott -> keresztülborzongot", function() {deepEqual( Stem("keresztülborzongott"), "keresztülborzongot");});
test("keresztülbotorkált -> keresztülbotorkál", function() {deepEqual( Stem("keresztülbotorkált"), "keresztülbotorkál");});
test("keresztülfújó -> keresztülfújó", function() {deepEqual( Stem("keresztülfújó"), "keresztülfújó");});
test("keresztülhajolt -> keresztülhajol", function() {deepEqual( Stem("keresztülhajolt"), "keresztülhajol");});
test("keresztülhajította -> keresztülhajított", function() {deepEqual( Stem("keresztülhajította"), "keresztülhajított");});
test("keresztülhúzva -> keresztülhúzv", function() {deepEqual( Stem("keresztülhúzva"), "keresztülhúzv");});
test("keresztülhúzzák -> keresztülhúzza", function() {deepEqual( Stem("keresztülhúzzák"), "keresztülhúzza");});
test("keresztüli -> keresztül", function() {deepEqual( Stem("keresztüli"), "keresztül");});
test("keresztüllátok -> keresztüllát", function() {deepEqual( Stem("keresztüllátok"), "keresztüllát");});
test("keresztülmenni -> keresztülmenn", function() {deepEqual( Stem("keresztülmenni"), "keresztülmenn");});
test("keresztülmentem -> keresztülment", function() {deepEqual( Stem("keresztülmentem"), "keresztülment");});
test("keresztülmentél -> keresztülmentél", function() {deepEqual( Stem("keresztülmentél"), "keresztülmentél");});
test("keresztülszakította -> keresztülszakított", function() {deepEqual( Stem("keresztülszakította"), "keresztülszakított");});
test("keresztülsétáltak -> keresztülsétált", function() {deepEqual( Stem("keresztülsétáltak"), "keresztülsétált");});
test("keresztülvergődniük -> keresztülvergődn", function() {deepEqual( Stem("keresztülvergődniük"), "keresztülvergődn");});
test("keresztülvillant -> keresztülvillan", function() {deepEqual( Stem("keresztülvillant"), "keresztülvillan");});
test("keresztülvitele -> keresztülvitel", function() {deepEqual( Stem("keresztülvitele"), "keresztülvitel");});
test("keresztülvonulva -> keresztülvonulv", function() {deepEqual( Stem("keresztülvonulva"), "keresztülvonulv");});
test("keresztülvágott -> keresztülvágot", function() {deepEqual( Stem("keresztülvágott"), "keresztülvágot");});
test("keresztülzuhant -> keresztülzuhan", function() {deepEqual( Stem("keresztülzuhant"), "keresztülzuhan");});
test("kereszül -> keresz", function() {deepEqual( Stem("kereszül"), "keresz");});
test("keresési -> keresés", function() {deepEqual( Stem("keresési"), "keresés");});
test("keresés -> keresés", function() {deepEqual( Stem("keresés"), "keresés");});
test("keresésben -> keresés", function() {deepEqual( Stem("keresésben"), "keresés");});
test("keresése -> keresés", function() {deepEqual( Stem("keresése"), "keresés");});
test("keresések -> keresés", function() {deepEqual( Stem("keresések"), "keresés");});
test("kereséseket -> keresés", function() {deepEqual( Stem("kereséseket"), "keresés");});
test("keresésnek -> keresés", function() {deepEqual( Stem("keresésnek"), "keresés");});
test("keresésre -> keresés", function() {deepEqual( Stem("keresésre"), "keresés");});
test("kereséssel -> keresés", function() {deepEqual( Stem("kereséssel"), "keresés");});
test("keresést -> keresés", function() {deepEqual( Stem("keresést"), "keresés");});
test("keresésébe -> keresés", function() {deepEqual( Stem("keresésébe"), "keresés");});
test("keresését -> keresés", function() {deepEqual( Stem("keresését"), "keresés");});
test("keresésével -> keresés", function() {deepEqual( Stem("keresésével"), "keresés");});
test("keresőfunkciói -> keresőfunkció", function() {deepEqual( Stem("keresőfunkciói"), "keresőfunkció");});
test("kereső -> kereső", function() {deepEqual( Stem("kereső"), "kereső");});
test("keresőben -> kereső", function() {deepEqual( Stem("keresőben"), "kereső");});
test("keresőjébe -> kereső", function() {deepEqual( Stem("keresőjébe"), "kereső");});
test("keresőjéről -> kereső", function() {deepEqual( Stem("keresőjéről"), "kereső");});
test("keresők -> kereső", function() {deepEqual( Stem("keresők"), "kereső");});
test("keresőket -> kereső", function() {deepEqual( Stem("keresőket"), "kereső");});
test("keresővel -> kereső", function() {deepEqual( Stem("keresővel"), "kereső");});
test("keresőkifejezés -> keresőkifejezés", function() {deepEqual( Stem("keresőkifejezés"), "keresőkifejezés");});
test("keresőkifejezéshez -> keresőkifejezés", function() {deepEqual( Stem("keresőkifejezéshez"), "keresőkifejezés");});
test("keresőkiszolgálók -> keresőkiszolgáló", function() {deepEqual( Stem("keresőkiszolgálók"), "keresőkiszolgáló");});
test("keresőmotor-optimalizációként -> keresőmotor-optimalizáció", function() {deepEqual( Stem("keresőmotor-optimalizációként"), "keresőmotor-optimalizáció");});
test("keresőmotornak -> keresőmotor", function() {deepEqual( Stem("keresőmotornak"), "keresőmotor");});
test("keresőmotor -> keresőmotor", function() {deepEqual( Stem("keresőmotor"), "keresőmotor");});
test("keresőmotorok -> keresőmotor", function() {deepEqual( Stem("keresőmotorok"), "keresőmotor");});
test("keresőmotorokra -> keresőmotor", function() {deepEqual( Stem("keresőmotorokra"), "keresőmotor");});
test("keresőmotorral -> keresőmotor", function() {deepEqual( Stem("keresőmotorral"), "keresőmotor");});
test("keresőmotort -> keresőmotor", function() {deepEqual( Stem("keresőmotort"), "keresőmotor");});
test("keresőprogrammal -> keresőprogr", function() {deepEqual( Stem("keresőprogrammal"), "keresőprogr");});
test("keresőrobotokról -> keresőrobot", function() {deepEqual( Stem("keresőrobotokról"), "keresőrobot");});
test("keresőszavak -> keresőszav", function() {deepEqual( Stem("keresőszavak"), "keresőszav");});
test("keresőszerverek -> keresőszerver", function() {deepEqual( Stem("keresőszerverek"), "keresőszerver");});
test("keresőszolgáltatások -> keresőszolgáltatás", function() {deepEqual( Stem("keresőszolgáltatások"), "keresőszolgáltatás");});
test("keresőszolgáltatásokhoz -> keresőszolgáltatás", function() {deepEqual( Stem("keresőszolgáltatásokhoz"), "keresőszolgáltatás");});
test("keresőtechnológiája -> keresőtechnológiá", function() {deepEqual( Stem("keresőtechnológiája"), "keresőtechnológiá");});
test("keresőtechnológiák -> keresőtechnológia", function() {deepEqual( Stem("keresőtechnológiák"), "keresőtechnológia");});
test("keret-szerződéseket -> keret-szerződés", function() {deepEqual( Stem("keret-szerződéseket"), "keret-szerződés");});
test("keretben -> keret", function() {deepEqual( Stem("keretben"), "keret");});
test("keret -> ker", function() {deepEqual( Stem("keret"), "ker");});
test("keretből -> keret", function() {deepEqual( Stem("keretből"), "keret");});
test("keretei -> keret", function() {deepEqual( Stem("keretei"), "keret");});
test("keretein -> keret", function() {deepEqual( Stem("keretein"), "keret");});
test("kereteinek -> keret", function() {deepEqual( Stem("kereteinek"), "keret");});
test("kereteit -> keret", function() {deepEqual( Stem("kereteit"), "keret");});
test("kereteitől -> keret", function() {deepEqual( Stem("kereteitől"), "keret");});
test("keretek -> keret", function() {deepEqual( Stem("keretek"), "keret");});
test("keretekbe -> keret", function() {deepEqual( Stem("keretekbe"), "keret");});
test("keretekben -> keret", function() {deepEqual( Stem("keretekben"), "keret");});
test("kereteken -> keret", function() {deepEqual( Stem("kereteken"), "keret");});
test("kereteket -> keret", function() {deepEqual( Stem("kereteket"), "keret");});
test("keretekhez -> keret", function() {deepEqual( Stem("keretekhez"), "keret");});
test("keretektől -> keret", function() {deepEqual( Stem("keretektől"), "keret");});
test("keretem -> keret", function() {deepEqual( Stem("keretem"), "keret");});
test("keretet -> keret", function() {deepEqual( Stem("keretet"), "keret");});
test("keretnek -> keret", function() {deepEqual( Stem("keretnek"), "keret");});
test("kerettel -> ker", function() {deepEqual( Stem("kerettel"), "ker");});
test("keretében -> keret", function() {deepEqual( Stem("keretében"), "keret");});
test("keretén -> keret", function() {deepEqual( Stem("keretén"), "keret");});
test("keretéről -> keret", function() {deepEqual( Stem("keretéről"), "keret");});
test("keretét -> keret", function() {deepEqual( Stem("keretét"), "keret");});
test("keretes -> keretes", function() {deepEqual( Stem("keretes"), "keretes");});
test("keretezve -> keretezv", function() {deepEqual( Stem("keretezve"), "keretezv");});
test("keretfeltételeket -> keretfeltétel", function() {deepEqual( Stem("keretfeltételeket"), "keretfeltétel");});
test("keretformátumig -> keretformátu", function() {deepEqual( Stem("keretformátumig"), "keretformátu");});
test("kereti -> keret", function() {deepEqual( Stem("kereti"), "keret");});
test("keretjellegű -> keretjellegű", function() {deepEqual( Stem("keretjellegű"), "keretjellegű");});
test("keretlegények -> keretlegény", function() {deepEqual( Stem("keretlegények"), "keretlegény");});
test("keretmegállapodások -> keretmegállapodás", function() {deepEqual( Stem("keretmegállapodások"), "keretmegállapodás");});
test("keretprogram -> keretprogr", function() {deepEqual( Stem("keretprogram"), "keretprogr");});
test("keretprogramban -> keretprogr", function() {deepEqual( Stem("keretprogramban"), "keretprogr");});
test("keretprogramból -> keretprogr", function() {deepEqual( Stem("keretprogramból"), "keretprogr");});
test("keretprogramja -> keretprogram", function() {deepEqual( Stem("keretprogramja"), "keretprogram");});
test("keretprogramjában -> keretprogram", function() {deepEqual( Stem("keretprogramjában"), "keretprogram");});
test("keretprogrammal -> keretprogr", function() {deepEqual( Stem("keretprogrammal"), "keretprogr");});
test("keretrendszert -> keretrendszer", function() {deepEqual( Stem("keretrendszert"), "keretrendszer");});
test("keretszabályai -> keretszabály", function() {deepEqual( Stem("keretszabályai"), "keretszabály");});
test("keretszabályait -> keretszabály", function() {deepEqual( Stem("keretszabályait"), "keretszabály");});
test("keretszerződések -> keretszerződés", function() {deepEqual( Stem("keretszerződések"), "keretszerződés");});
test("keretszerződéseknek -> keretszerződés", function() {deepEqual( Stem("keretszerződéseknek"), "keretszerződés");});
test("keretszerződést -> keretszerződés", function() {deepEqual( Stem("keretszerződést"), "keretszerződés");});
test("keretszerűen -> keretszerű", function() {deepEqual( Stem("keretszerűen"), "keretszerű");});
test("kerettörvény -> kerettörvény", function() {deepEqual( Stem("kerettörvény"), "kerettörvény");});
test("keretösszeg -> keretösszeg", function() {deepEqual( Stem("keretösszeg"), "keretösszeg");});
test("kerget -> kerg", function() {deepEqual( Stem("kerget"), "kerg");});
test("kergetek -> kerget", function() {deepEqual( Stem("kergetek"), "kerget");});
test("kergeti -> kerget", function() {deepEqual( Stem("kergeti"), "kerget");});
test("kergetik -> kerget", function() {deepEqual( Stem("kergetik"), "kerget");});
test("kergetni -> kergetn", function() {deepEqual( Stem("kergetni"), "kergetn");});
test("kergette -> kergett", function() {deepEqual( Stem("kergette"), "kergett");});
test("kergettek -> kergett", function() {deepEqual( Stem("kergettek"), "kergett");});
test("kergetve -> kergetv", function() {deepEqual( Stem("kergetve"), "kergetv");});
test("kergetőztünk -> kergetőzt", function() {deepEqual( Stem("kergetőztünk"), "kergetőzt");});
test("kergetőzésből -> kergetőzés", function() {deepEqual( Stem("kergetőzésből"), "kergetőzés");});
test("kering -> kering", function() {deepEqual( Stem("kering"), "kering");});
test("keringenek -> kering", function() {deepEqual( Stem("keringenek"), "kering");});
test("keringeni -> keringen", function() {deepEqual( Stem("keringeni"), "keringen");});
test("keringett -> keringet", function() {deepEqual( Stem("keringett"), "keringet");});
test("keringtek -> keringt", function() {deepEqual( Stem("keringtek"), "keringt");});
test("keringtünk -> keringt", function() {deepEqual( Stem("keringtünk"), "keringt");});
test("keringve -> keringv", function() {deepEqual( Stem("keringve"), "keringv");});
test("keringés -> keringés", function() {deepEqual( Stem("keringés"), "keringés");});
test("keringési -> keringés", function() {deepEqual( Stem("keringési"), "keringés");});
test("keringő -> keringő", function() {deepEqual( Stem("keringő"), "keringő");});
test("keringőt -> keringő", function() {deepEqual( Stem("keringőt"), "keringő");});
test("keringőztünk -> keringőzt", function() {deepEqual( Stem("keringőztünk"), "keringőzt");});
test("kerozint -> kerozin", function() {deepEqual( Stem("kerozint"), "kerozin");});
test("kert -> ker", function() {deepEqual( Stem("kert"), "ker");});
test("kertbe -> kert", function() {deepEqual( Stem("kertbe"), "kert");});
test("kertbe -> kert", function() {deepEqual( Stem("kertbe"), "kert");});
test("kertben -> kert", function() {deepEqual( Stem("kertben"), "kert");});
test("kertek -> kert", function() {deepEqual( Stem("kertek"), "kert");});
test("kertem -> kert", function() {deepEqual( Stem("kertem"), "kert");});
test("kerten -> kert", function() {deepEqual( Stem("kerten"), "kert");});
test("kertet -> kert", function() {deepEqual( Stem("kertet"), "kert");});
test("kertjei -> kert", function() {deepEqual( Stem("kertjei"), "kert");});
test("kertjében -> kert", function() {deepEqual( Stem("kertjében"), "kert");});
test("kertjét -> kert", function() {deepEqual( Stem("kertjét"), "kert");});
test("kertre -> kert", function() {deepEqual( Stem("kertre"), "kert");});
test("kerttel -> ker", function() {deepEqual( Stem("kerttel"), "ker");});
test("kertünkbe -> kert", function() {deepEqual( Stem("kertünkbe"), "kert");});
test("kertelt -> kertel", function() {deepEqual( Stem("kertelt"), "kertel");});
test("kertelő -> kertelő", function() {deepEqual( Stem("kertelő"), "kertelő");});
test("kertes -> kertes", function() {deepEqual( Stem("kertes"), "kertes");});
test("kerthelyiség -> kerthelyiség", function() {deepEqual( Stem("kerthelyiség"), "kerthelyiség");});
test("kerti -> kert", function() {deepEqual( Stem("kerti"), "kert");});
test("kertkapun -> kertkapu", function() {deepEqual( Stem("kertkapun"), "kertkapu");});
test("kertvárosi -> kertváros", function() {deepEqual( Stem("kertvárosi"), "kertváros");});
test("kertvárosában -> kertváros", function() {deepEqual( Stem("kertvárosában"), "kertváros");});
test("kertvárosban -> kertváros", function() {deepEqual( Stem("kertvárosban"), "kertváros");});
test("kertészkedhetek -> kertészkedhet", function() {deepEqual( Stem("kertészkedhetek"), "kertészkedhet");});
test("kertészkedés -> kertészkedés", function() {deepEqual( Stem("kertészkedés"), "kertészkedés");});
test("kertészkedésen -> kertészkedés", function() {deepEqual( Stem("kertészkedésen"), "kertészkedés");});
test("kertészkedéshez -> kertészkedés", function() {deepEqual( Stem("kertészkedéshez"), "kertészkedés");});
test("kerámiatárgyak -> kerámiatárgy", function() {deepEqual( Stem("kerámiatárgyak"), "kerámiatárgy");});
test("kerámiából -> kerám", function() {deepEqual( Stem("kerámiából"), "kerám");});
test("kerámiákat -> kerámia", function() {deepEqual( Stem("kerámiákat"), "kerámia");});
test("kerék -> kere", function() {deepEqual( Stem("kerék"), "kere");});
test("kerekei -> ker", function() {deepEqual( Stem("kerekei"), "ker");});
test("kereke -> ker", function() {deepEqual( Stem("kereke"), "ker");});
test("kerekeken -> kerek", function() {deepEqual( Stem("kerekeken"), "kerek");});
test("kerekekhez -> kerek", function() {deepEqual( Stem("kerekekhez"), "kerek");});
test("kerekem -> ker", function() {deepEqual( Stem("kerekem"), "ker");});
test("kereket -> ker", function() {deepEqual( Stem("kereket"), "ker");});
test("kerekében -> ker", function() {deepEqual( Stem("kerekében"), "ker");});
test("kerekét -> ker", function() {deepEqual( Stem("kerekét"), "ker");});
test("keréken -> kere", function() {deepEqual( Stem("keréken"), "kere");});
test("kerékre -> kere", function() {deepEqual( Stem("kerékre"), "kere");});
test("kerék-út -> kerék-ú", function() {deepEqual( Stem("kerék-út"), "kerék-ú");});
test("kerékcsere -> kerékcs", function() {deepEqual( Stem("kerékcsere"), "kerékcs");});
test("kerékfelfüggesztés -> kerékfelfüggesztés", function() {deepEqual( Stem("kerékfelfüggesztés"), "kerékfelfüggesztés");});
test("kerékkötője -> kerékkötő", function() {deepEqual( Stem("kerékkötője"), "kerékkötő");});
test("keréknyomokból -> keréknyom", function() {deepEqual( Stem("keréknyomokból"), "keréknyom");});
test("kerékpárjavítók -> kerékpárjavító", function() {deepEqual( Stem("kerékpárjavítók"), "kerékpárjavító");});
test("kerékpárjával -> kerékpár", function() {deepEqual( Stem("kerékpárjával"), "kerékpár");});
test("kerékpár -> kerékpár", function() {deepEqual( Stem("kerékpár"), "kerékpár");});
test("kerékpárok -> kerékpár", function() {deepEqual( Stem("kerékpárok"), "kerékpár");});
test("kerékpárokat -> kerékpár", function() {deepEqual( Stem("kerékpárokat"), "kerékpár");});
test("kerékpárokkal -> kerékpár", function() {deepEqual( Stem("kerékpárokkal"), "kerékpár");});
test("kerékpárom -> kerékpár", function() {deepEqual( Stem("kerékpárom"), "kerékpár");});
test("kerékpárommal -> kerékpár", function() {deepEqual( Stem("kerékpárommal"), "kerékpár");});
test("kerékpárral -> kerékpár", function() {deepEqual( Stem("kerékpárral"), "kerékpár");});
test("kerékpárt -> kerékpár", function() {deepEqual( Stem("kerékpárt"), "kerékpár");});
test("kerékpáros -> kerékpáros", function() {deepEqual( Stem("kerékpáros"), "kerékpáros");});
test("kerékpározás -> kerékpározás", function() {deepEqual( Stem("kerékpározás"), "kerékpározás");});
test("kerékpárpumpa -> kerékpárpump", function() {deepEqual( Stem("kerékpárpumpa"), "kerékpárpump");});
test("kerékpártolvajt -> kerékpártolvaj", function() {deepEqual( Stem("kerékpártolvajt"), "kerékpártolvaj");});
test("kerékpártúrára -> kerékpártúr", function() {deepEqual( Stem("kerékpártúrára"), "kerékpártúr");});
test("kerékpártúrát -> kerékpártúr", function() {deepEqual( Stem("kerékpártúrát"), "kerékpártúr");});
test("kerékpáráttételen -> kerékpáráttétel", function() {deepEqual( Stem("kerékpáráttételen"), "kerékpáráttétel");});
test("kerékpáráttételt -> kerékpáráttétel", function() {deepEqual( Stem("kerékpáráttételt"), "kerékpáráttétel");});
test("kerékvágásba -> kerékvágás", function() {deepEqual( Stem("kerékvágásba"), "kerékvágás");});
test("kerített -> kerítet", function() {deepEqual( Stem("kerített"), "kerítet");});
test("kerít -> kerí", function() {deepEqual( Stem("kerít"), "kerí");});
test("keríteni -> keríten", function() {deepEqual( Stem("keríteni"), "keríten");});
test("kerítenék -> kerítene", function() {deepEqual( Stem("kerítenék"), "kerítene");});
test("kerítette -> kerített", function() {deepEqual( Stem("kerítette"), "kerített");});
test("kerítettek -> kerített", function() {deepEqual( Stem("kerítettek"), "kerített");});
test("kerítjük -> kerít", function() {deepEqual( Stem("kerítjük"), "kerít");});
test("keríthetik -> keríthet", function() {deepEqual( Stem("keríthetik"), "keríthet");});
test("keríthetnél -> keríthet", function() {deepEqual( Stem("keríthetnél"), "keríthet");});
test("keríthette -> keríthett", function() {deepEqual( Stem("keríthette"), "keríthett");});
test("kerítünk -> kerít", function() {deepEqual( Stem("kerítünk"), "kerít");});
test("kerítve -> kerítv", function() {deepEqual( Stem("kerítve"), "kerítv");});
test("kerítés -> kerítés", function() {deepEqual( Stem("kerítés"), "kerítés");});
test("kerítéseikkel -> kerítés", function() {deepEqual( Stem("kerítéseikkel"), "kerítés");});
test("kerítések -> kerítés", function() {deepEqual( Stem("kerítések"), "kerítés");});
test("kerítéseket -> kerítés", function() {deepEqual( Stem("kerítéseket"), "kerítés");});
test("kerítésen -> kerítés", function() {deepEqual( Stem("kerítésen"), "kerítés");});
test("kerítést -> kerítés", function() {deepEqual( Stem("kerítést"), "kerítés");});
test("kerítésének -> kerítés", function() {deepEqual( Stem("kerítésének"), "kerítés");});
test("keróval -> keró", function() {deepEqual( Stem("keróval"), "keró");});
test("kerül-fordul -> kerül-for", function() {deepEqual( Stem("kerül-fordul"), "kerül-for");});
test("kerülendő -> kerülendő", function() {deepEqual( Stem("kerülendő"), "kerülendő");});
test("kerület -> kerül", function() {deepEqual( Stem("kerület"), "kerül");});
test("kerületben -> kerület", function() {deepEqual( Stem("kerületben"), "kerület");});
test("kerületből -> kerület", function() {deepEqual( Stem("kerületből"), "kerület");});
test("kerülete -> kerület", function() {deepEqual( Stem("kerülete"), "kerület");});
test("kerületek -> kerület", function() {deepEqual( Stem("kerületek"), "kerület");});
test("kerületekben -> kerület", function() {deepEqual( Stem("kerületekben"), "kerület");});
test("kerületekből -> kerület", function() {deepEqual( Stem("kerületekből"), "kerület");});
test("kerületeket -> kerület", function() {deepEqual( Stem("kerületeket"), "kerület");});
test("kerületet -> kerület", function() {deepEqual( Stem("kerületet"), "kerület");});
test("kerületnek -> kerület", function() {deepEqual( Stem("kerületnek"), "kerület");});
test("kerületre -> kerület", function() {deepEqual( Stem("kerületre"), "kerület");});
test("kerületé -> kerület", function() {deepEqual( Stem("kerületé"), "kerület");});
test("kerületében -> kerület", function() {deepEqual( Stem("kerületében"), "kerület");});
test("kerületének -> kerület", function() {deepEqual( Stem("kerületének"), "kerület");});
test("kerületi -> kerület", function() {deepEqual( Stem("kerületi"), "kerület");});
test("kerületiek -> kerületi", function() {deepEqual( Stem("kerületiek"), "kerületi");});
test("kerítünk -> kerít", function() {deepEqual( Stem("kerítünk"), "kerít");});
test("kerülgettük -> kerülgett", function() {deepEqual( Stem("kerülgettük"), "kerülgett");});
test("kerülhessen -> kerülhess", function() {deepEqual( Stem("kerülhessen"), "kerülhess");});
test("kerülhessenek -> kerülhess", function() {deepEqual( Stem("kerülhessenek"), "kerülhess");});
test("kerülhet -> kerülh", function() {deepEqual( Stem("kerülhet"), "kerülh");});
test("kerülhetett -> kerülhetet", function() {deepEqual( Stem("kerülhetett"), "kerülhetet");});
test("kerülheti -> kerülhet", function() {deepEqual( Stem("kerülheti"), "kerülhet");});
test("kerülhetjük -> kerülhet", function() {deepEqual( Stem("kerülhetjük"), "kerülhet");});
test("kerülhetne -> kerülhetn", function() {deepEqual( Stem("kerülhetne"), "kerülhetn");});
test("kerülhetnek -> kerülhet", function() {deepEqual( Stem("kerülhetnek"), "kerülhet");});
test("kerülhettek -> kerülhett", function() {deepEqual( Stem("kerülhettek"), "kerülhett");});
test("kerülhettem -> kerülhett", function() {deepEqual( Stem("kerülhettem"), "kerülhett");});
test("kerülhető -> kerülhető", function() {deepEqual( Stem("kerülhető"), "kerülhető");});
test("kerüli -> kerül", function() {deepEqual( Stem("kerüli"), "kerül");});
test("kerül -> ker", function() {deepEqual( Stem("kerül"), "ker");});
test("kerülik -> kerül", function() {deepEqual( Stem("kerülik"), "kerül");});
test("kerüljek -> kerülj", function() {deepEqual( Stem("kerüljek"), "kerülj");});
test("kerüljenek -> kerül", function() {deepEqual( Stem("kerüljenek"), "kerül");});
test("kerüljön -> kerülj", function() {deepEqual( Stem("kerüljön"), "kerülj");});
test("kerüljük -> kerül", function() {deepEqual( Stem("kerüljük"), "kerül");});
test("kerüljünk -> kerülj", function() {deepEqual( Stem("kerüljünk"), "kerülj");});
test("kerülne -> kerüln", function() {deepEqual( Stem("kerülne"), "kerüln");});
test("kerülnek -> kerül", function() {deepEqual( Stem("kerülnek"), "kerül");});
test("kerülni -> kerüln", function() {deepEqual( Stem("kerülni"), "kerüln");});
test("kerülnie -> kerüln", function() {deepEqual( Stem("kerülnie"), "kerüln");});
test("kerülnék -> kerülne", function() {deepEqual( Stem("kerülnék"), "kerülne");});
test("kerülném -> kerülne", function() {deepEqual( Stem("kerülném"), "kerülne");});
test("kerülnének -> kerüln", function() {deepEqual( Stem("kerülnének"), "kerüln");});
test("kerülsz -> kerülsz", function() {deepEqual( Stem("kerülsz"), "kerülsz");});
test("kerülte -> került", function() {deepEqual( Stem("kerülte"), "került");});
test("kerültek -> került", function() {deepEqual( Stem("kerültek"), "került");});
test("kerülteket -> került", function() {deepEqual( Stem("kerülteket"), "került");});
test("kerültem -> került", function() {deepEqual( Stem("kerültem"), "került");});
test("kerülték -> kerülte", function() {deepEqual( Stem("kerülték"), "kerülte");});
test("kerültél -> kerültél", function() {deepEqual( Stem("kerültél"), "kerültél");});
test("kerültünk -> került", function() {deepEqual( Stem("kerültünk"), "került");});
test("kerülök -> kerül", function() {deepEqual( Stem("kerülök"), "kerül");});
test("kerülünk -> kerül", function() {deepEqual( Stem("kerülünk"), "kerül");});
test("került -> kerül", function() {deepEqual( Stem("került"), "kerül");});
test("kerülve -> kerülv", function() {deepEqual( Stem("kerülve"), "kerülv");});
test("kerülése -> kerülés", function() {deepEqual( Stem("kerülése"), "kerülés");});
test("kerülésről -> kerülés", function() {deepEqual( Stem("kerülésről"), "kerülés");});
test("kerülésének -> kerülés", function() {deepEqual( Stem("kerülésének"), "kerülés");});
test("kerülését -> kerülés", function() {deepEqual( Stem("kerülését"), "kerülés");});
test("kerülésével -> kerülés", function() {deepEqual( Stem("kerülésével"), "kerülés");});
test("kerülő -> kerülő", function() {deepEqual( Stem("kerülő"), "kerülő");});
test("kerülők -> kerülő", function() {deepEqual( Stem("kerülők"), "kerülő");});
test("kerülőktől -> kerülő", function() {deepEqual( Stem("kerülőktől"), "kerülő");});
test("kerülővel -> kerülő", function() {deepEqual( Stem("kerülővel"), "kerülő");});
test("keselyűkarmokban -> keselyűkarm", function() {deepEqual( Stem("keselyűkarmokban"), "keselyűkarm");});
test("keselyűkarmával -> keselyűkarm", function() {deepEqual( Stem("keselyűkarmával"), "keselyűkarm");});
test("keseredett -> keseredet", function() {deepEqual( Stem("keseredett"), "keseredet");});
test("keseredve -> keseredv", function() {deepEqual( Stem("keseredve"), "keseredv");});
test("keseregtem -> keseregt", function() {deepEqual( Stem("keseregtem"), "keseregt");});
test("kesergett -> keserget", function() {deepEqual( Stem("kesergett"), "keserget");});
test("kesernyés -> kesernyés", function() {deepEqual( Stem("kesernyés"), "kesernyés");});
test("keserves -> keserves", function() {deepEqual( Stem("keserves"), "keserves");});
test("keservesen -> keserves", function() {deepEqual( Stem("keservesen"), "keserves");});
test("keserű -> keserű", function() {deepEqual( Stem("keserű"), "keserű");});
test("keserűen -> keserű", function() {deepEqual( Stem("keserűen"), "keserű");});
test("keserűséggel -> keserűség", function() {deepEqual( Stem("keserűséggel"), "keserűség");});
test("keshedt -> kesh", function() {deepEqual( Stem("keshedt"), "kesh");});
test("keskeny -> keskeny", function() {deepEqual( Stem("keskeny"), "keskeny");});
test("keskenyebb -> keskenyebb", function() {deepEqual( Stem("keskenyebb"), "keskenyebb");});
test("keskenyre -> keskeny", function() {deepEqual( Stem("keskenyre"), "keskeny");});
test("keskenyedik -> keskenyed", function() {deepEqual( Stem("keskenyedik"), "keskenyed");});
test("keskenyvágányú -> keskenyvágányú", function() {deepEqual( Stem("keskenyvágányú"), "keskenyvágányú");});
test("kesze-kuszaságába -> kesze-kuszaság", function() {deepEqual( Stem("kesze-kuszaságába"), "kesze-kuszaság");});
test("keszeg -> keszeg", function() {deepEqual( Stem("keszeg"), "keszeg");});
test("keszeget -> keszeg", function() {deepEqual( Stem("keszeget"), "keszeg");});
test("keszeggel -> keszeg", function() {deepEqual( Stem("keszeggel"), "keszeg");});
test("keszegezni -> keszegezn", function() {deepEqual( Stem("keszegezni"), "keszegezn");});
test("keszemet -> kesz", function() {deepEqual( Stem("keszemet"), "kesz");});
test("kesztek -> keszt", function() {deepEqual( Stem("kesztek"), "keszt");});
test("kesztem -> keszt", function() {deepEqual( Stem("kesztem"), "keszt");});
test("keszd -> kesz", function() {deepEqual( Stem("keszd"), "kesz");});
test("kesztve -> kesztv", function() {deepEqual( Stem("kesztve"), "kesztv");});
test("kesztyűmet -> kesztyű", function() {deepEqual( Stem("kesztyűmet"), "kesztyű");});
test("kesztyűt -> kesztyű", function() {deepEqual( Stem("kesztyűt"), "kesztyű");});
test("ketrecbe -> ketrec", function() {deepEqual( Stem("ketrecbe"), "ketrec");});
test("ketrecben -> ketrec", function() {deepEqual( Stem("ketrecben"), "ketrec");});
test("kettecskén -> kettecs", function() {deepEqual( Stem("kettecskén"), "kettecs");});
test("kettes -> kettes", function() {deepEqual( Stem("kettes"), "kettes");});
test("kettesben -> kettes", function() {deepEqual( Stem("kettesben"), "kettes");});
test("kettese -> kettes", function() {deepEqual( Stem("kettese"), "kettes");});
test("kettesem -> kettes", function() {deepEqual( Stem("kettesem"), "kettes");});
test("ketteshez -> kettes", function() {deepEqual( Stem("ketteshez"), "kettes");});
test("kettessel -> kettes", function() {deepEqual( Stem("kettessel"), "kettes");});
test("kettest -> kettes", function() {deepEqual( Stem("kettest"), "kettes");});
test("kettesfogathajtók -> kettesfogathajtó", function() {deepEqual( Stem("kettesfogathajtók"), "kettesfogathajtó");});
test("kettyintünk -> kettyint", function() {deepEqual( Stem("kettyintünk"), "kettyint");});
test("ketté -> ket", function() {deepEqual( Stem("ketté"), "ket");});
test("kettébontása -> kettébontás", function() {deepEqual( Stem("kettébontása"), "kettébontás");});
test("kettéosztott -> kettéosztot", function() {deepEqual( Stem("kettéosztott"), "kettéosztot");});
test("kettészakadt -> kettész", function() {deepEqual( Stem("kettészakadt"), "kettész");});
test("kettétört -> kettétör", function() {deepEqual( Stem("kettétört"), "kettétör");});
test("kettéválasztás -> kettéválasztás", function() {deepEqual( Stem("kettéválasztás"), "kettéválasztás");});
test("kettéválasztástól -> kettéválasztás", function() {deepEqual( Stem("kettéválasztástól"), "kettéválasztás");});
test("kettéválik -> kettévál", function() {deepEqual( Stem("kettéválik"), "kettévál");});
test("kettéválása -> kettéválás", function() {deepEqual( Stem("kettéválása"), "kettéválás");});
test("kettéválását -> kettéválás", function() {deepEqual( Stem("kettéválását"), "kettéválás");});
test("kettéválásával -> kettéválás", function() {deepEqual( Stem("kettéválásával"), "kettéválás");});
test("kettő -> kettő", function() {deepEqual( Stem("kettő"), "kettő");});
test("kettőhöz -> kettő", function() {deepEqual( Stem("kettőhöz"), "kettő");});
test("kettőig -> kettő", function() {deepEqual( Stem("kettőig"), "kettő");});
test("kettőjüknek -> kettő", function() {deepEqual( Stem("kettőjüknek"), "kettő");});
test("kettőkor -> kettő", function() {deepEqual( Stem("kettőkor"), "kettő");});
test("kettőn -> kettő", function() {deepEqual( Stem("kettőn"), "kettő");});
test("kettőnek -> kettő", function() {deepEqual( Stem("kettőnek"), "kettő");});
test("kettőnk -> kettő", function() {deepEqual( Stem("kettőnk"), "kettő");});
test("kettőnknek -> kettő", function() {deepEqual( Stem("kettőnknek"), "kettő");});
test("kettőnkre -> kettő", function() {deepEqual( Stem("kettőnkre"), "kettő");});
test("kettőnél -> kettő", function() {deepEqual( Stem("kettőnél"), "kettő");});
test("kettőre -> kettő", function() {deepEqual( Stem("kettőre"), "kettő");});
test("kettőt -> kettő", function() {deepEqual( Stem("kettőt"), "kettő");});
test("kettőtől -> kettő", function() {deepEqual( Stem("kettőtől"), "kettő");});
test("kettővel -> kettő", function() {deepEqual( Stem("kettővel"), "kettő");});
test("kettejük -> kette", function() {deepEqual( Stem("kettejük"), "kette");});
test("ketten -> kett", function() {deepEqual( Stem("ketten"), "kett");});
test("kettősség -> kettősség", function() {deepEqual( Stem("kettősség"), "kettősség");});
test("kettősségre -> kettősség", function() {deepEqual( Stem("kettősségre"), "kettősség");});
test("kettős -> kettős", function() {deepEqual( Stem("kettős"), "kettős");});
test("kettőst -> kettős", function() {deepEqual( Stem("kettőst"), "kettős");});
test("kettőszázezer -> kettőszázezer", function() {deepEqual( Stem("kettőszázezer"), "kettőszázezer");});
test("kettőt-hármat -> kettőt-hár", function() {deepEqual( Stem("kettőt-hármat"), "kettőt-hár");});
test("kettőzött -> kettőzöt", function() {deepEqual( Stem("kettőzött"), "kettőzöt");});
test("ketyegett -> ketyeget", function() {deepEqual( Stem("ketyegett"), "ketyeget");});
test("ketyegése -> ketyegés", function() {deepEqual( Stem("ketyegése"), "ketyegés");});
test("ketyegését -> ketyegés", function() {deepEqual( Stem("ketyegését"), "ketyegés");});
test("keve -> kev", function() {deepEqual( Stem("keve"), "kev");});
test("kevercse -> kevercs", function() {deepEqual( Stem("kevercse"), "kevercs");});
test("keveredett -> keveredet", function() {deepEqual( Stem("keveredett"), "keveredet");});
test("keveredik -> kevered", function() {deepEqual( Stem("keveredik"), "kevered");});
test("keveredjek -> keveredj", function() {deepEqual( Stem("keveredjek"), "keveredj");});
test("keveredjen -> keveredj", function() {deepEqual( Stem("keveredjen"), "keveredj");});
test("keveredsz -> keveredsz", function() {deepEqual( Stem("keveredsz"), "keveredsz");});
test("keveredtek -> keveredt", function() {deepEqual( Stem("keveredtek"), "keveredt");});
test("keveredtünk -> keveredt", function() {deepEqual( Stem("keveredtünk"), "keveredt");});
test("keveredve -> keveredv", function() {deepEqual( Stem("keveredve"), "keveredv");});
test("kevereg -> kevereg", function() {deepEqual( Stem("kevereg"), "kevereg");});
test("kevergetik -> keverget", function() {deepEqual( Stem("kevergetik"), "keverget");});
test("keveri -> kever", function() {deepEqual( Stem("keveri"), "kever");});
test("keverjük -> kever", function() {deepEqual( Stem("keverjük"), "kever");});
test("keverni -> kevern", function() {deepEqual( Stem("keverni"), "kevern");});
test("keversz -> keversz", function() {deepEqual( Stem("keversz"), "keversz");});
test("kevert -> kever", function() {deepEqual( Stem("kevert"), "kever");});
test("keverték -> keverte", function() {deepEqual( Stem("keverték"), "keverte");});
test("keverve -> keverv", function() {deepEqual( Stem("keverve"), "keverv");});
test("keverék -> kevere", function() {deepEqual( Stem("keverék"), "kevere");});
test("keveréke -> kevere", function() {deepEqual( Stem("keveréke"), "kevere");});
test("keverékével -> kevere", function() {deepEqual( Stem("keverékével"), "kevere");});
test("keverékképzéshez -> keverékképzés", function() {deepEqual( Stem("keverékképzéshez"), "keverékképzés");});
test("keveréknyelv -> keveréknyelv", function() {deepEqual( Stem("keveréknyelv"), "keveréknyelv");});
test("keverőkódolással -> keverőkódolás", function() {deepEqual( Stem("keverőkódolással"), "keverőkódolás");});
test("kevesebb -> kevesebb", function() {deepEqual( Stem("kevesebb"), "kevesebb");});
test("kevesebbe -> keveseb", function() {deepEqual( Stem("kevesebbe"), "keveseb");});
test("kevesebbel -> keveseb", function() {deepEqual( Stem("kevesebbel"), "keveseb");});
test("kevesebben -> keveseb", function() {deepEqual( Stem("kevesebben"), "keveseb");});
test("kevesebbet -> kevesebb", function() {deepEqual( Stem("kevesebbet"), "kevesebb");});
test("kevesebbre -> kevesebb", function() {deepEqual( Stem("kevesebbre"), "kevesebb");});
test("kevesebbtől -> kevesebb", function() {deepEqual( Stem("kevesebbtől"), "kevesebb");});
test("kevesek -> keves", function() {deepEqual( Stem("kevesek"), "keves");});
test("keveseknek -> keves", function() {deepEqual( Stem("keveseknek"), "keves");});
test("keveset -> keves", function() {deepEqual( Stem("keveset"), "keves");});
test("kevés -> kevés", function() {deepEqual( Stem("kevés"), "kevés");});
test("kevésbé -> kevésb", function() {deepEqual( Stem("kevésbé"), "kevésb");});
test("kevésből -> kevés", function() {deepEqual( Stem("kevésből"), "kevés");});
test("kevésnek -> kevés", function() {deepEqual( Stem("kevésnek"), "kevés");});
test("kevésnél -> kevés", function() {deepEqual( Stem("kevésnél"), "kevés");});
test("kevéssé -> kevés", function() {deepEqual( Stem("kevéssé"), "kevés");});
test("kezdeményezett -> kezdeményezet", function() {deepEqual( Stem("kezdeményezett"), "kezdeményezet");});
test("kezdeményezheti -> kezdeményezhet", function() {deepEqual( Stem("kezdeményezheti"), "kezdeményezhet");});
test("kezdeményezhető -> kezdeményezhető", function() {deepEqual( Stem("kezdeményezhető"), "kezdeményezhető");});
test("kezdeményez -> kezdeményez", function() {deepEqual( Stem("kezdeményez"), "kezdeményez");});
test("kezdeményezi -> kezdeményez", function() {deepEqual( Stem("kezdeményezi"), "kezdeményez");});
test("kezdeményezik -> kezdeményez", function() {deepEqual( Stem("kezdeményezik"), "kezdeményez");});
test("kezdeményeznek -> kezdeményez", function() {deepEqual( Stem("kezdeményeznek"), "kezdeményez");});
test("kezdeményezni -> kezdeményezn", function() {deepEqual( Stem("kezdeményezni"), "kezdeményezn");});
test("kezdeményezném -> kezdeményezne", function() {deepEqual( Stem("kezdeményezném"), "kezdeményezne");});
test("kezdeményezte -> kezdeményezt", function() {deepEqual( Stem("kezdeményezte"), "kezdeményezt");});
test("kezdeményezték -> kezdeményezte", function() {deepEqual( Stem("kezdeményezték"), "kezdeményezte");});
test("kezdeményezze -> kezdeményezz", function() {deepEqual( Stem("kezdeményezze"), "kezdeményezz");});
test("kezdeményezzen -> kezdeményezz", function() {deepEqual( Stem("kezdeményezzen"), "kezdeményezz");});
test("kezdeményezés -> kezdeményezés", function() {deepEqual( Stem("kezdeményezés"), "kezdeményezés");});
test("kezdeményezésbe -> kezdeményezés", function() {deepEqual( Stem("kezdeményezésbe"), "kezdeményezés");});
test("kezdeményezése -> kezdeményezés", function() {deepEqual( Stem("kezdeményezése"), "kezdeményezés");});
test("kezdeményezések -> kezdeményezés", function() {deepEqual( Stem("kezdeményezések"), "kezdeményezés");});
test("kezdeményezéseknek -> kezdeményezés", function() {deepEqual( Stem("kezdeményezéseknek"), "kezdeményezés");});
test("kezdeményezéshez -> kezdeményezés", function() {deepEqual( Stem("kezdeményezéshez"), "kezdeményezés");});
test("kezdeményezésnek -> kezdeményezés", function() {deepEqual( Stem("kezdeményezésnek"), "kezdeményezés");});
test("kezdeményezésre -> kezdeményezés", function() {deepEqual( Stem("kezdeményezésre"), "kezdeményezés");});
test("kezdeményezést -> kezdeményezés", function() {deepEqual( Stem("kezdeményezést"), "kezdeményezés");});
test("kezdeményezéséhez -> kezdeményezés", function() {deepEqual( Stem("kezdeményezéséhez"), "kezdeményezés");});
test("kezdeményezésének -> kezdeményezés", function() {deepEqual( Stem("kezdeményezésének"), "kezdeményezés");});
test("kezdeményezésére -> kezdeményezés", function() {deepEqual( Stem("kezdeményezésére"), "kezdeményezés");});
test("kezdeményezéséről -> kezdeményezés", function() {deepEqual( Stem("kezdeményezéséről"), "kezdeményezés");});
test("kezdeményezését -> kezdeményezés", function() {deepEqual( Stem("kezdeményezését"), "kezdeményezés");});
test("kezdeményezésük -> kezdeményezés", function() {deepEqual( Stem("kezdeményezésük"), "kezdeményezés");});
test("kezdeményező -> kezdeményező", function() {deepEqual( Stem("kezdeményező"), "kezdeményező");});
test("kezdeményezően -> kezdeményező", function() {deepEqual( Stem("kezdeményezően"), "kezdeményező");});
test("kezdene -> kezden", function() {deepEqual( Stem("kezdene"), "kezden");});
test("kezdenek -> kezd", function() {deepEqual( Stem("kezdenek"), "kezd");});
test("kezdenem -> kezden", function() {deepEqual( Stem("kezdenem"), "kezden");});
test("kezdeni -> kezden", function() {deepEqual( Stem("kezdeni"), "kezden");});
test("kezdeniük -> kezden", function() {deepEqual( Stem("kezdeniük"), "kezden");});
test("kezdenék -> kezdene", function() {deepEqual( Stem("kezdenék"), "kezdene");});
test("kezdenék -> kezdene", function() {deepEqual( Stem("kezdenék"), "kezdene");});
test("kezdenének -> kezden", function() {deepEqual( Stem("kezdenének"), "kezden");});
test("kezdet -> kez", function() {deepEqual( Stem("kezdet"), "kez");});
test("kezdetből -> kezdet", function() {deepEqual( Stem("kezdetből"), "kezdet");});
test("kezdete -> kezdet", function() {deepEqual( Stem("kezdete"), "kezdet");});
test("kezdetek -> kezdet", function() {deepEqual( Stem("kezdetek"), "kezdet");});
test("kezdetekben -> kezdet", function() {deepEqual( Stem("kezdetekben"), "kezdet");});
test("kezdetekor -> kezdet", function() {deepEqual( Stem("kezdetekor"), "kezdet");});
test("kezdetekről -> kezdet", function() {deepEqual( Stem("kezdetekről"), "kezdet");});
test("kezdetektől -> kezdet", function() {deepEqual( Stem("kezdetektől"), "kezdet");});
test("kezdetem -> kezdet", function() {deepEqual( Stem("kezdetem"), "kezdet");});
test("kezdettől -> kezdet", function() {deepEqual( Stem("kezdettől"), "kezdet");});
test("kezdetéig -> kezdet", function() {deepEqual( Stem("kezdetéig"), "kezdet");});
test("kezdetén -> kezdet", function() {deepEqual( Stem("kezdetén"), "kezdet");});
test("kezdetének -> kezdet", function() {deepEqual( Stem("kezdetének"), "kezdet");});
test("kezdetére -> kezdet", function() {deepEqual( Stem("kezdetére"), "kezdet");});
test("kezdetéről -> kezdet", function() {deepEqual( Stem("kezdetéről"), "kezdet");});
test("kezdetét -> kezdet", function() {deepEqual( Stem("kezdetét"), "kezdet");});
test("kezdetétől -> kezdet", function() {deepEqual( Stem("kezdetétől"), "kezdet");});
test("kezdetével -> kezdet", function() {deepEqual( Stem("kezdetével"), "kezdet");});
test("kezdetnek -> kezdet", function() {deepEqual( Stem("kezdetnek"), "kezdet");});
test("kezdeti -> kezdet", function() {deepEqual( Stem("kezdeti"), "kezdet");});
test("kezdetleges -> kezdetleges", function() {deepEqual( Stem("kezdetleges"), "kezdetleges");});
test("kezdetlegesebb -> kezdetlegesebb", function() {deepEqual( Stem("kezdetlegesebb"), "kezdetlegesebb");});
test("kezdett -> kezdet", function() {deepEqual( Stem("kezdett"), "kezdet");});
test("kezdetű -> kezdetű", function() {deepEqual( Stem("kezdetű"), "kezdetű");});
test("kezdhet -> kezdh", function() {deepEqual( Stem("kezdhet"), "kezdh");});
test("kezdheti -> kezdhet", function() {deepEqual( Stem("kezdheti"), "kezdhet");});
test("kezdhetjük -> kezdhet", function() {deepEqual( Stem("kezdhetjük"), "kezdhet");});
test("kezdhetne -> kezdhetn", function() {deepEqual( Stem("kezdhetne"), "kezdhetn");});
test("kezdhetné -> kezdhetn", function() {deepEqual( Stem("kezdhetné"), "kezdhetn");});
test("kezdhetném -> kezdhetne", function() {deepEqual( Stem("kezdhetném"), "kezdhetne");});
test("kezdhetsz -> kezdhetsz", function() {deepEqual( Stem("kezdhetsz"), "kezdhetsz");});
test("kezdhette -> kezdhett", function() {deepEqual( Stem("kezdhette"), "kezdhett");});
test("kezdhettük -> kezdhett", function() {deepEqual( Stem("kezdhettük"), "kezdhett");});
test("kezdhetünk -> kezdhet", function() {deepEqual( Stem("kezdhetünk"), "kezdhet");});
test("kezd -> kez", function() {deepEqual( Stem("kezd"), "kez");});
test("kezdek -> kezd", function() {deepEqual( Stem("kezdek"), "kezd");});
test("kezdi -> kezd", function() {deepEqual( Stem("kezdi"), "kezd");});
test("kezdik -> kezd", function() {deepEqual( Stem("kezdik"), "kezd");});
test("kezdje -> kezd", function() {deepEqual( Stem("kezdje"), "kezd");});
test("kezdjek -> kezdj", function() {deepEqual( Stem("kezdjek"), "kezdj");});
test("kezdjem -> kezdj", function() {deepEqual( Stem("kezdjem"), "kezdj");});
test("kezdjen -> kezdj", function() {deepEqual( Stem("kezdjen"), "kezdj");});
test("kezdjenek -> kezd", function() {deepEqual( Stem("kezdjenek"), "kezd");});
test("kezdjék -> kezdje", function() {deepEqual( Stem("kezdjék"), "kezdje");});
test("kezdjük -> kezd", function() {deepEqual( Stem("kezdjük"), "kezd");});
test("kezdte -> kezdt", function() {deepEqual( Stem("kezdte"), "kezdt");});
test("kezdtek -> kezdt", function() {deepEqual( Stem("kezdtek"), "kezdt");});
test("kezdtem -> kezdt", function() {deepEqual( Stem("kezdtem"), "kezdt");});
test("kezdték -> kezdte", function() {deepEqual( Stem("kezdték"), "kezdte");});
test("kezdtél -> kezdtél", function() {deepEqual( Stem("kezdtél"), "kezdtél");});
test("kezdtük -> kezdt", function() {deepEqual( Stem("kezdtük"), "kezdt");});
test("kezdünk -> kezd", function() {deepEqual( Stem("kezdünk"), "kezd");});
test("kezdtünk -> kezdt", function() {deepEqual( Stem("kezdtünk"), "kezdt");});
test("kezdem -> kezd", function() {deepEqual( Stem("kezdem"), "kezd");});
test("kezdesz -> kezdesz", function() {deepEqual( Stem("kezdesz"), "kezdesz");});
test("kezdve -> kezdv", function() {deepEqual( Stem("kezdve"), "kezdv");});
test("kezdési -> kezdés", function() {deepEqual( Stem("kezdési"), "kezdés");});
test("kezdés -> kezdés", function() {deepEqual( Stem("kezdés"), "kezdés");});
test("kezdése -> kezdés", function() {deepEqual( Stem("kezdése"), "kezdés");});
test("kezdésig -> kezdés", function() {deepEqual( Stem("kezdésig"), "kezdés");});
test("kezdésre -> kezdés", function() {deepEqual( Stem("kezdésre"), "kezdés");});
test("kezdéséig -> kezdés", function() {deepEqual( Stem("kezdéséig"), "kezdés");});
test("kezdését -> kezdés", function() {deepEqual( Stem("kezdését"), "kezdés");});
test("kezdő -> kezdő", function() {deepEqual( Stem("kezdő"), "kezdő");});
test("kezdőbetűk -> kezdőbetű", function() {deepEqual( Stem("kezdőbetűk"), "kezdőbetű");});
test("kezdőcsapata -> kezdőcsapat", function() {deepEqual( Stem("kezdőcsapata"), "kezdőcsapat");});
test("kezdőcsapatban -> kezdőcsapat", function() {deepEqual( Stem("kezdőcsapatban"), "kezdőcsapat");});
test("kezdődhet -> kezdődh", function() {deepEqual( Stem("kezdődhet"), "kezdődh");});
test("kezdődhetett -> kezdődhetet", function() {deepEqual( Stem("kezdődhetett"), "kezdődhetet");});
test("kezdődik -> kezdőd", function() {deepEqual( Stem("kezdődik"), "kezdőd");});
test("kezdődne -> kezdődn", function() {deepEqual( Stem("kezdődne"), "kezdődn");});
test("kezdődnek -> kezdő", function() {deepEqual( Stem("kezdődnek"), "kezdő");});
test("kezdődni -> kezdődn", function() {deepEqual( Stem("kezdődni"), "kezdődn");});
test("kezdődnie -> kezdődn", function() {deepEqual( Stem("kezdődnie"), "kezdődn");});
test("kezdődtek -> kezdődt", function() {deepEqual( Stem("kezdődtek"), "kezdődt");});
test("kezdődő -> kezdődő", function() {deepEqual( Stem("kezdődő"), "kezdődő");});
test("kezdődően -> kezdődő", function() {deepEqual( Stem("kezdődően"), "kezdődő");});
test("kezdődőket -> kezdődő", function() {deepEqual( Stem("kezdődőket"), "kezdődő");});
test("kezdődött -> kezdődöt", function() {deepEqual( Stem("kezdődött"), "kezdődöt");});
test("kezdők -> kezdő", function() {deepEqual( Stem("kezdők"), "kezdő");});
test("kezdőknek -> kezdő", function() {deepEqual( Stem("kezdőknek"), "kezdő");});
test("kezdőlapját -> kezdőlap", function() {deepEqual( Stem("kezdőlapját"), "kezdőlap");});
test("kezdőlépéseit -> kezdőlépés", function() {deepEqual( Stem("kezdőlépéseit"), "kezdőlépés");});
test("kezdőoldal -> kezdőoldal", function() {deepEqual( Stem("kezdőoldal"), "kezdőoldal");});
test("kezdőrúgása -> kezdőrúgás", function() {deepEqual( Stem("kezdőrúgása"), "kezdőrúgás");});
test("kezelendő -> kezelendő", function() {deepEqual( Stem("kezelendő"), "kezelendő");});
test("kezelgetnénk -> kezelgetne", function() {deepEqual( Stem("kezelgetnénk"), "kezelgetne");});
test("kezelhesse -> kezelhess", function() {deepEqual( Stem("kezelhesse"), "kezelhess");});
test("kezelhessen -> kezelhess", function() {deepEqual( Stem("kezelhessen"), "kezelhess");});
test("kezelhet -> kezelh", function() {deepEqual( Stem("kezelhet"), "kezelh");});
test("kezelheti -> kezelhet", function() {deepEqual( Stem("kezelheti"), "kezelhet");});
test("kezelhetik -> kezelhet", function() {deepEqual( Stem("kezelhetik"), "kezelhet");});
test("kezelhetjük -> kezelhet", function() {deepEqual( Stem("kezelhetjük"), "kezelhet");});
test("kezelhető -> kezelhető", function() {deepEqual( Stem("kezelhető"), "kezelhető");});
test("kezelhetők -> kezelhető", function() {deepEqual( Stem("kezelhetők"), "kezelhető");});
test("kezelhetővé -> kezelhető", function() {deepEqual( Stem("kezelhetővé"), "kezelhető");});
test("kezelhetőség -> kezelhetőség", function() {deepEqual( Stem("kezelhetőség"), "kezelhetőség");});
test("kezeli -> kezel", function() {deepEqual( Stem("kezeli"), "kezel");});
test("kezelik -> kezel", function() {deepEqual( Stem("kezelik"), "kezel");});
test("kezelje -> kezel", function() {deepEqual( Stem("kezelje"), "kezel");});
test("kezeljen -> kezelj", function() {deepEqual( Stem("kezeljen"), "kezelj");});
test("kezeljenek -> kezel", function() {deepEqual( Stem("kezeljenek"), "kezel");});
test("kezeljék -> kezelje", function() {deepEqual( Stem("kezeljék"), "kezelje");});
test("kezeljük -> kezel", function() {deepEqual( Stem("kezeljük"), "kezel");});
test("kezelnek -> kezel", function() {deepEqual( Stem("kezelnek"), "kezel");});
test("kezelni -> kezeln", function() {deepEqual( Stem("kezelni"), "kezeln");});
test("kezelnie -> kezeln", function() {deepEqual( Stem("kezelnie"), "kezeln");});
test("kezelniük -> kezeln", function() {deepEqual( Stem("kezelniük"), "kezeln");});
test("kezelné -> kezeln", function() {deepEqual( Stem("kezelné"), "kezeln");});
test("kezelte -> kezelt", function() {deepEqual( Stem("kezelte"), "kezelt");});
test("kezeltek -> kezelt", function() {deepEqual( Stem("kezeltek"), "kezelt");});
test("kezelték -> kezelte", function() {deepEqual( Stem("kezelték"), "kezelte");});
test("kezelt -> kezel", function() {deepEqual( Stem("kezelt"), "kezel");});
test("kezelés -> kezelés", function() {deepEqual( Stem("kezelés"), "kezelés");});
test("kezelése -> kezelés", function() {deepEqual( Stem("kezelése"), "kezelés");});
test("kezelések -> kezelés", function() {deepEqual( Stem("kezelések"), "kezelés");});
test("kezeléseket -> kezelés", function() {deepEqual( Stem("kezeléseket"), "kezelés");});
test("kezelésekor -> kezelés", function() {deepEqual( Stem("kezelésekor"), "kezelés");});
test("kezeléshez -> kezelés", function() {deepEqual( Stem("kezeléshez"), "kezelés");});
test("kezelésnek -> kezelés", function() {deepEqual( Stem("kezelésnek"), "kezelés");});
test("kezelésre -> kezelés", function() {deepEqual( Stem("kezelésre"), "kezelés");});
test("kezelést -> kezelés", function() {deepEqual( Stem("kezelést"), "kezelés");});
test("kezelésébe -> kezelés", function() {deepEqual( Stem("kezelésébe"), "kezelés");});
test("kezelésében -> kezelés", function() {deepEqual( Stem("kezelésében"), "kezelés");});
test("kezeléséhez -> kezelés", function() {deepEqual( Stem("kezeléséhez"), "kezelés");});
test("kezelésének -> kezelés", function() {deepEqual( Stem("kezelésének"), "kezelés");});
test("kezelésénél -> kezelés", function() {deepEqual( Stem("kezelésénél"), "kezelés");});
test("kezelésére -> kezelés", function() {deepEqual( Stem("kezelésére"), "kezelés");});
test("kezeléséről -> kezelés", function() {deepEqual( Stem("kezeléséről"), "kezelés");});
test("kezelését -> kezelés", function() {deepEqual( Stem("kezelését"), "kezelés");});
test("kezelésétől -> kezelés", function() {deepEqual( Stem("kezelésétől"), "kezelés");});
test("kezelésével -> kezelés", function() {deepEqual( Stem("kezelésével"), "kezelés");});
test("kezelésük -> kezelés", function() {deepEqual( Stem("kezelésük"), "kezelés");});
test("kezelési -> kezelés", function() {deepEqual( Stem("kezelési"), "kezelés");});
test("kezeléséreképes -> kezeléséreképes", function() {deepEqual( Stem("kezeléséreképes"), "kezeléséreképes");});
test("kezelőalkalmazásnak -> kezelőalkalmazás", function() {deepEqual( Stem("kezelőalkalmazásnak"), "kezelőalkalmazás");});
test("kezelőalkalmazással -> kezelőalkalmazás", function() {deepEqual( Stem("kezelőalkalmazással"), "kezelőalkalmazás");});
test("kezelőeszközöket -> kezelőeszköz", function() {deepEqual( Stem("kezelőeszközöket"), "kezelőeszköz");});
test("kezelőfelület -> kezelőfelül", function() {deepEqual( Stem("kezelőfelület"), "kezelőfelül");});
test("kezelőfelülete -> kezelőfelület", function() {deepEqual( Stem("kezelőfelülete"), "kezelőfelület");});
test("kezelőfelületeket -> kezelőfelület", function() {deepEqual( Stem("kezelőfelületeket"), "kezelőfelület");});
test("kezelőfelületet -> kezelőfelület", function() {deepEqual( Stem("kezelőfelületet"), "kezelőfelület");});
test("kezelőfelületre -> kezelőfelület", function() {deepEqual( Stem("kezelőfelületre"), "kezelőfelület");});
test("kezelőfelületébe -> kezelőfelület", function() {deepEqual( Stem("kezelőfelületébe"), "kezelőfelület");});
test("kezelőfelületéhez -> kezelőfelület", function() {deepEqual( Stem("kezelőfelületéhez"), "kezelőfelület");});
test("kezelői -> kezelő", function() {deepEqual( Stem("kezelői"), "kezelő");});
test("kezelője -> kezelő", function() {deepEqual( Stem("kezelője"), "kezelő");});
test("kezelőt -> kezelő", function() {deepEqual( Stem("kezelőt"), "kezelő");});
test("kezelővel -> kezelő", function() {deepEqual( Stem("kezelővel"), "kezelő");});
test("kezelőjük -> kezelő", function() {deepEqual( Stem("kezelőjük"), "kezelő");});
test("kezelő -> kezelő", function() {deepEqual( Stem("kezelő"), "kezelő");});
test("kezelőpanelen -> kezelőpanel", function() {deepEqual( Stem("kezelőpanelen"), "kezelőpanel");});
test("kezelőprogram -> kezelőprogr", function() {deepEqual( Stem("kezelőprogram"), "kezelőprogr");});
test("kezelőprogramok -> kezelőprogram", function() {deepEqual( Stem("kezelőprogramok"), "kezelőprogram");});
test("kezelőprogramokat -> kezelőprogram", function() {deepEqual( Stem("kezelőprogramokat"), "kezelőprogram");});
test("kezelőrendszerekkel -> kezelőrendszer", function() {deepEqual( Stem("kezelőrendszerekkel"), "kezelőrendszer");});
test("kezelőszervek -> kezelőszerv", function() {deepEqual( Stem("kezelőszervek"), "kezelőszerv");});
test("kezelőszékbe -> kezelősze", function() {deepEqual( Stem("kezelőszékbe"), "kezelősze");});
test("kezesi -> kezes", function() {deepEqual( Stem("kezesi"), "kezes");});
test("kezesként -> kezes", function() {deepEqual( Stem("kezesként"), "kezes");});
test("kezesség -> kezesség", function() {deepEqual( Stem("kezesség"), "kezesség");});
test("kezességet -> kezesség", function() {deepEqual( Stem("kezességet"), "kezesség");});
test("kezességvállalás -> kezességvállalás", function() {deepEqual( Stem("kezességvállalás"), "kezességvállalás");});
test("kezességvállalást -> kezességvállalás", function() {deepEqual( Stem("kezességvállalást"), "kezességvállalás");});
test("kezű -> kezű", function() {deepEqual( Stem("kezű"), "kezű");});
test("kezűleg -> kezűleg", function() {deepEqual( Stem("kezűleg"), "kezűleg");});
test("kezünküleg -> kezünküleg", function() {deepEqual( Stem("kezünküleg"), "kezünküleg");});
test("kft -> kft", function() {deepEqual( Stem("kft"), "kft");});
test("kft-vé -> kft-vé", function() {deepEqual( Stem("kft-vé"), "kft-vé");});
test("kft. -> kft.", function() {deepEqual( Stem("kft."), "kft.");});
test("kft.-be -> kft.-be", function() {deepEqual( Stem("kft.-be"), "kft.-be");});
test("kft.-ben -> kft.-ben", function() {deepEqual( Stem("kft.-ben"), "kft.-ben");});
test("kft.-ből -> kft.-ből", function() {deepEqual( Stem("kft.-ből"), "kft.-ből");});
test("kft.-k -> kft.-k", function() {deepEqual( Stem("kft.-k"), "kft.-k");});
test("kft.-kel -> kft.-kel", function() {deepEqual( Stem("kft.-kel"), "kft.-kel");});
test("kft.-ben -> kft.-ben", function() {deepEqual( Stem("kft.-ben"), "kft.-ben");});
test("kft.-kre -> kft.-kre", function() {deepEqual( Stem("kft.-kre"), "kft.-kre");});
test("kft.-n -> kft.-n", function() {deepEqual( Stem("kft.-n"), "kft.-n");});
test("kft.-nek -> kft.-nek", function() {deepEqual( Stem("kft.-nek"), "kft.-nek");});
test("kft.-nél -> kft.-nél", function() {deepEqual( Stem("kft.-nél"), "kft.-nél");});
test("kft.-ra -> kft.-ra", function() {deepEqual( Stem("kft.-ra"), "kft.-ra");});
test("kft.-re -> kft.-re", function() {deepEqual( Stem("kft.-re"), "kft.-re");});
test("kft.-t -> kft.-t", function() {deepEqual( Stem("kft.-t"), "kft.-t");});
test("kft.-vé -> kft.-vé", function() {deepEqual( Stem("kft.-vé"), "kft.-vé");});
test("kg -> kg", function() {deepEqual( Stem("kg"), "kg");});
test("kg-ban -> kg-ban", function() {deepEqual( Stem("kg-ban"), "kg-ban");});
test("kg-ig -> kg-ig", function() {deepEqual( Stem("kg-ig"), "kg-ig");});
test("kg-ja -> kg-ja", function() {deepEqual( Stem("kg-ja"), "kg-ja");});
test("kg-mal -> kg-mal", function() {deepEqual( Stem("kg-mal"), "kg-mal");});
test("kg-os -> kg-os", function() {deepEqual( Stem("kg-os"), "kg-os");});
test("kg-s -> kg-s", function() {deepEqual( Stem("kg-s"), "kg-s");});
test("khakinadrág -> khakinadrág", function() {deepEqual( Stem("khakinadrág"), "khakinadrág");});
test("khakiszínű -> khakiszínű", function() {deepEqual( Stem("khakiszínű"), "khakiszínű");});
test("kht. -> kht.", function() {deepEqual( Stem("kht."), "kht.");});
test("kht.-ba -> kht.-ba", function() {deepEqual( Stem("kht.-ba"), "kht.-ba");});
test("kht.-k -> kht.-k", function() {deepEqual( Stem("kht.-k"), "kht.-k");});
test("kht.-knak -> kht.-knak", function() {deepEqual( Stem("kht.-knak"), "kht.-knak");});
test("kht.-knál -> kht.-knál", function() {deepEqual( Stem("kht.-knál"), "kht.-knál");});
test("kht.-kra -> kht.-kra", function() {deepEqual( Stem("kht.-kra"), "kht.-kra");});
test("kht.-ká -> kht.-ká", function() {deepEqual( Stem("kht.-ká"), "kht.-ká");});
test("kht.-nak -> kht.-nak", function() {deepEqual( Stem("kht.-nak"), "kht.-nak");});
test("kht.-nál -> kht.-nál", function() {deepEqual( Stem("kht.-nál"), "kht.-nál");});
test("kht.-ra -> kht.-ra", function() {deepEqual( Stem("kht.-ra"), "kht.-ra");});
test("kht.-ról -> kht.-ról", function() {deepEqual( Stem("kht.-ról"), "kht.-ról");});
test("kht.-t -> kht.-t", function() {deepEqual( Stem("kht.-t"), "kht.-t");});
test("kht.-val -> kht.-val", function() {deepEqual( Stem("kht.-val"), "kht.-val");});
test("kht.-vá -> kht.-vá", function() {deepEqual( Stem("kht.-vá"), "kht.-vá");});
test("kht.-vé -> kht.-vé", function() {deepEqual( Stem("kht.-vé"), "kht.-vé");});
test("ki-adók -> ki-adó", function() {deepEqual( Stem("ki-adók"), "ki-adó");});
test("ki-be -> ki-", function() {deepEqual( Stem("ki-be"), "ki-");});
test("ki-ki -> ki-", function() {deepEqual( Stem("ki-ki"), "ki-");});
test("kiabál -> kiabál", function() {deepEqual( Stem("kiabál"), "kiabál");});
test("kiabálja -> kiabál", function() {deepEqual( Stem("kiabálja"), "kiabál");});
test("kiabáljon -> kiabálj", function() {deepEqual( Stem("kiabáljon"), "kiabálj");});
test("kiabálnak -> kiabál", function() {deepEqual( Stem("kiabálnak"), "kiabál");});
test("kiabálni -> kiabáln", function() {deepEqual( Stem("kiabálni"), "kiabáln");});
test("kiabálok -> kiabál", function() {deepEqual( Stem("kiabálok"), "kiabál");});
test("kiabált -> kiabál", function() {deepEqual( Stem("kiabált"), "kiabál");});
test("kiabálta -> kiabált", function() {deepEqual( Stem("kiabálta"), "kiabált");});
test("kiabáltak -> kiabált", function() {deepEqual( Stem("kiabáltak"), "kiabált");});
test("kiabáltam -> kiabált", function() {deepEqual( Stem("kiabáltam"), "kiabált");});
test("kiabáltunk -> kiabált", function() {deepEqual( Stem("kiabáltunk"), "kiabált");});
test("kiabálták -> kiabálta", function() {deepEqual( Stem("kiabálták"), "kiabálta");});
test("kiabálunk -> kiabál", function() {deepEqual( Stem("kiabálunk"), "kiabál");});
test("kiabálva -> kiabálv", function() {deepEqual( Stem("kiabálva"), "kiabálv");});
test("kiabálás -> kiabálás", function() {deepEqual( Stem("kiabálás"), "kiabálás");});
test("kiabálásba -> kiabálás", function() {deepEqual( Stem("kiabálásba"), "kiabálás");});
test("kiabálást -> kiabálás", function() {deepEqual( Stem("kiabálást"), "kiabálás");});
test("kiabálására -> kiabálás", function() {deepEqual( Stem("kiabálására"), "kiabálás");});
test("kiabálását -> kiabálás", function() {deepEqual( Stem("kiabálását"), "kiabálás");});
test("kiadandó -> kiadandó", function() {deepEqual( Stem("kiadandó"), "kiadandó");});
test("kiadvány-előállításban -> kiadvány-előállítás", function() {deepEqual( Stem("kiadvány-előállításban"), "kiadvány-előállítás");});
test("kiadványa -> kiadvány", function() {deepEqual( Stem("kiadványa"), "kiadvány");});
test("kiadványainak -> kiadvány", function() {deepEqual( Stem("kiadványainak"), "kiadvány");});
test("kiadványban -> kiadvány", function() {deepEqual( Stem("kiadványban"), "kiadvány");});
test("kiadványból -> kiadvány", function() {deepEqual( Stem("kiadványból"), "kiadvány");});
test("kiadványnál -> kiadvány", function() {deepEqual( Stem("kiadványnál"), "kiadvány");});
test("kiadványok -> kiadvány", function() {deepEqual( Stem("kiadványok"), "kiadvány");});
test("kiadványokhoz -> kiadvány", function() {deepEqual( Stem("kiadványokhoz"), "kiadvány");});
test("kiadványoknak -> kiadvány", function() {deepEqual( Stem("kiadványoknak"), "kiadvány");});
test("kiadványt -> kiadvány", function() {deepEqual( Stem("kiadványt"), "kiadvány");});
test("kiadványszerkesztő -> kiadványszerkesztő", function() {deepEqual( Stem("kiadványszerkesztő"), "kiadványszerkesztő");});
test("kiadáscsökkentés -> kiadáscsökkentés", function() {deepEqual( Stem("kiadáscsökkentés"), "kiadáscsökkentés");});
test("kiadásikiadásnak -> kiadásikiadás", function() {deepEqual( Stem("kiadásikiadásnak"), "kiadásikiadás");});
test("kiadások -> kiadás", function() {deepEqual( Stem("kiadások"), "kiadás");});
test("kiadásokat -> kiadás", function() {deepEqual( Stem("kiadásokat"), "kiadás");});
test("kiadásokat-bevételeket -> kiadásokat-bevétel", function() {deepEqual( Stem("kiadásokat-bevételeket"), "kiadásokat-bevétel");});
test("kiadás -> kiadás", function() {deepEqual( Stem("kiadás"), "kiadás");});
test("kiadása -> kiadás", function() {deepEqual( Stem("kiadása"), "kiadás");});
test("kiadásai -> kiadás", function() {deepEqual( Stem("kiadásai"), "kiadás");});
test("kiadásait -> kiadás", function() {deepEqual( Stem("kiadásait"), "kiadás");});
test("kiadásakor -> kiadás", function() {deepEqual( Stem("kiadásakor"), "kiadás");});
test("kiadásban -> kiadás", function() {deepEqual( Stem("kiadásban"), "kiadás");});
test("kiadásokkal -> kiadás", function() {deepEqual( Stem("kiadásokkal"), "kiadás");});
test("kiadásokra -> kiadás", function() {deepEqual( Stem("kiadásokra"), "kiadás");});
test("kiadásra -> kiadás", function() {deepEqual( Stem("kiadásra"), "kiadás");});
test("kiadást -> kiadás", function() {deepEqual( Stem("kiadást"), "kiadás");});
test("kiadásukkor -> kiadás", function() {deepEqual( Stem("kiadásukkor"), "kiadás");});
test("kiadásunk -> kiadás", function() {deepEqual( Stem("kiadásunk"), "kiadás");});
test("kiadásában -> kiadás", function() {deepEqual( Stem("kiadásában"), "kiadás");});
test("kiadásához -> kiadás", function() {deepEqual( Stem("kiadásához"), "kiadás");});
test("kiadásáig -> kiadás", function() {deepEqual( Stem("kiadásáig"), "kiadás");});
test("kiadásán -> kiadás", function() {deepEqual( Stem("kiadásán"), "kiadás");});
test("kiadásának -> kiadás", function() {deepEqual( Stem("kiadásának"), "kiadás");});
test("kiadásának -> kiadás", function() {deepEqual( Stem("kiadásának"), "kiadás");});
test("kiadásánál -> kiadás", function() {deepEqual( Stem("kiadásánál"), "kiadás");});
test("kiadására -> kiadás", function() {deepEqual( Stem("kiadására"), "kiadás");});
test("kiadásáról -> kiadás", function() {deepEqual( Stem("kiadásáról"), "kiadás");});
test("kiadását -> kiadás", function() {deepEqual( Stem("kiadását"), "kiadás");});
test("kiadásával -> kiadás", function() {deepEqual( Stem("kiadásával"), "kiadás");});
test("kiadásáért -> kiadás", function() {deepEqual( Stem("kiadásáért"), "kiadás");});
test("kiadású -> kiadású", function() {deepEqual( Stem("kiadású"), "kiadású");});
test("kiadói -> kiadó", function() {deepEqual( Stem("kiadói"), "kiadó");});
test("kiadója -> kiadó", function() {deepEqual( Stem("kiadója"), "kiadó");});
test("kiadó -> kiadó", function() {deepEqual( Stem("kiadó"), "kiadó");});
test("kiadók -> kiadó", function() {deepEqual( Stem("kiadók"), "kiadó");});
test("kiadókat -> kiadó", function() {deepEqual( Stem("kiadókat"), "kiadó");});
test("kiadókkal -> kiadó", function() {deepEqual( Stem("kiadókkal"), "kiadó");});
test("kiadóknak -> kiadó", function() {deepEqual( Stem("kiadóknak"), "kiadó");});
test("kiadókra -> kiadó", function() {deepEqual( Stem("kiadókra"), "kiadó");});
test("kiadón -> kiadó", function() {deepEqual( Stem("kiadón"), "kiadó");});
test("kiadónak -> kiadó", function() {deepEqual( Stem("kiadónak"), "kiadó");});
test("kiadónál -> kiadó", function() {deepEqual( Stem("kiadónál"), "kiadó");});
test("kiadóra -> kiadó", function() {deepEqual( Stem("kiadóra"), "kiadó");});
test("kiadót -> kiadó", function() {deepEqual( Stem("kiadót"), "kiadó");});
test("kiadóval -> kiadó", function() {deepEqual( Stem("kiadóval"), "kiadó");});
test("kiadós -> kiadós", function() {deepEqual( Stem("kiadós"), "kiadós");});
test("kiadósat -> kiadós", function() {deepEqual( Stem("kiadósat"), "kiadós");});
test("kiagyalói -> kiagyaló", function() {deepEqual( Stem("kiagyalói"), "kiagyaló");});
test("kiakad -> ki", function() {deepEqual( Stem("kiakad"), "ki");});
test("kiakadt -> ki", function() {deepEqual( Stem("kiakadt"), "ki");});
test("kiakadva -> kiakadv", function() {deepEqual( Stem("kiakadva"), "kiakadv");});
test("kiakasztó -> kiakasztó", function() {deepEqual( Stem("kiakasztó"), "kiakasztó");});
test("kiaknázatlanul -> kiaknázatlan", function() {deepEqual( Stem("kiaknázatlanul"), "kiaknázatlan");});
test("kiaknázni -> kiaknázn", function() {deepEqual( Stem("kiaknázni"), "kiaknázn");});
test("kiaknázása -> kiaknázás", function() {deepEqual( Stem("kiaknázása"), "kiaknázás");});
test("kiaknázásának -> kiaknázás", function() {deepEqual( Stem("kiaknázásának"), "kiaknázás");});
test("kialakulatlan -> kialakulatl", function() {deepEqual( Stem("kialakulatlan"), "kialakulatl");});
test("kialakulatlanságában -> kialakulatlanság", function() {deepEqual( Stem("kialakulatlanságában"), "kialakulatlanság");});
test("kialakulhat -> kialakulh", function() {deepEqual( Stem("kialakulhat"), "kialakulh");});
test("kialakulni -> kialakuln", function() {deepEqual( Stem("kialakulni"), "kialakuln");});
test("kialakultak -> kialakult", function() {deepEqual( Stem("kialakultak"), "kialakult");});
test("kialakultnak -> kialakult", function() {deepEqual( Stem("kialakultnak"), "kialakult");});
test("kialakul -> kial", function() {deepEqual( Stem("kialakul"), "kial");});
test("kialakult -> kialakul", function() {deepEqual( Stem("kialakult"), "kialakul");});
test("kialakulása -> kialakulás", function() {deepEqual( Stem("kialakulása"), "kialakulás");});
test("kialakulásához -> kialakulás", function() {deepEqual( Stem("kialakulásához"), "kialakulás");});
test("kialakulásának -> kialakulás", function() {deepEqual( Stem("kialakulásának"), "kialakulás");});
test("kialakulására -> kialakulás", function() {deepEqual( Stem("kialakulására"), "kialakulás");});
test("kialakulásáról -> kialakulás", function() {deepEqual( Stem("kialakulásáról"), "kialakulás");});
test("kialakulását -> kialakulás", function() {deepEqual( Stem("kialakulását"), "kialakulás");});
test("kialakulásától -> kialakulás", function() {deepEqual( Stem("kialakulásától"), "kialakulás");});
test("kialakuló -> kialakuló", function() {deepEqual( Stem("kialakuló"), "kialakuló");});
test("kialakulóban -> kialakuló", function() {deepEqual( Stem("kialakulóban"), "kialakuló");});
test("kialakítandó -> kialakítandó", function() {deepEqual( Stem("kialakítandó"), "kialakítandó");});
test("kialakít -> kialakí", function() {deepEqual( Stem("kialakít"), "kialakí");});
test("kialakítani -> kialakítan", function() {deepEqual( Stem("kialakítani"), "kialakítan");});
test("kialakítja -> kialakít", function() {deepEqual( Stem("kialakítja"), "kialakít");});
test("kialakítania -> kialakítan", function() {deepEqual( Stem("kialakítania"), "kialakítan");});
test("kialakítanunk -> kialakítan", function() {deepEqual( Stem("kialakítanunk"), "kialakítan");});
test("kialakíthat -> kialakíth", function() {deepEqual( Stem("kialakíthat"), "kialakíth");});
test("kialakíthatják -> kialakíthatja", function() {deepEqual( Stem("kialakíthatják"), "kialakíthatja");});
test("kialakítható -> kialakítható", function() {deepEqual( Stem("kialakítható"), "kialakítható");});
test("kialakított -> kialakítot", function() {deepEqual( Stem("kialakított"), "kialakítot");});
test("kialakítva -> kialakítv", function() {deepEqual( Stem("kialakítva"), "kialakítv");});
test("kialakítása -> kialakítás", function() {deepEqual( Stem("kialakítása"), "kialakítás");});
test("kialakításakor -> kialakítás", function() {deepEqual( Stem("kialakításakor"), "kialakítás");});
test("kialakításuk -> kialakítás", function() {deepEqual( Stem("kialakításuk"), "kialakítás");});
test("kialakításában -> kialakítás", function() {deepEqual( Stem("kialakításában"), "kialakítás");});
test("kialakításához -> kialakítás", function() {deepEqual( Stem("kialakításához"), "kialakítás");});
test("kialakításáig -> kialakítás", function() {deepEqual( Stem("kialakításáig"), "kialakítás");});
test("kialakításának -> kialakítás", function() {deepEqual( Stem("kialakításának"), "kialakítás");});
test("kialakításánál -> kialakítás", function() {deepEqual( Stem("kialakításánál"), "kialakítás");});
test("kialakítására -> kialakítás", function() {deepEqual( Stem("kialakítására"), "kialakítás");});
test("kialakításáról -> kialakítás", function() {deepEqual( Stem("kialakításáról"), "kialakítás");});
test("kialakítását -> kialakítás", function() {deepEqual( Stem("kialakítását"), "kialakítás");});
test("kialakításával -> kialakítás", function() {deepEqual( Stem("kialakításával"), "kialakítás");});
test("kialakításáért -> kialakítás", function() {deepEqual( Stem("kialakításáért"), "kialakítás");});
test("kialudni -> kialudn", function() {deepEqual( Stem("kialudni"), "kialudn");});
test("kialudnom -> kialudn", function() {deepEqual( Stem("kialudnom"), "kialudn");});
test("kialudta -> kialudt", function() {deepEqual( Stem("kialudta"), "kialudt");});
test("kialudtam -> kialudt", function() {deepEqual( Stem("kialudtam"), "kialudt");});
test("kialudt -> kialu", function() {deepEqual( Stem("kialudt"), "kialu");});
test("kialussza -> kialussz", function() {deepEqual( Stem("kialussza"), "kialussz");});
test("kiapadt -> kiap", function() {deepEqual( Stem("kiapadt"), "kiap");});
test("kiballagott -> kiballagot", function() {deepEqual( Stem("kiballagott"), "kiballagot");});
test("kiberháborúban -> kiberháború", function() {deepEqual( Stem("kiberháborúban"), "kiberháború");});
test("kiberháborút -> kiberháború", function() {deepEqual( Stem("kiberháborút"), "kiberháború");});
test("kiberteret -> kiberter", function() {deepEqual( Stem("kiberteret"), "kiberter");});
test("kibertérben -> kibertér", function() {deepEqual( Stem("kibertérben"), "kibertér");});
test("kibertéri -> kibertér", function() {deepEqual( Stem("kibertéri"), "kibertér");});
test("kibeszélgetjük -> kibeszélget", function() {deepEqual( Stem("kibeszélgetjük"), "kibeszélget");});
test("kibeszélik -> kibeszél", function() {deepEqual( Stem("kibeszélik"), "kibeszél");});
test("kibeszélnek -> kibeszél", function() {deepEqual( Stem("kibeszélnek"), "kibeszél");});
test("kibeszélték -> kibeszélte", function() {deepEqual( Stem("kibeszélték"), "kibeszélte");});
test("kibeszélem -> kibeszél", function() {deepEqual( Stem("kibeszélem"), "kibeszél");});
test("kibicekről -> kibic", function() {deepEqual( Stem("kibicekről"), "kibic");});
test("kibiciklizni -> kibiciklizn", function() {deepEqual( Stem("kibiciklizni"), "kibiciklizn");});
test("kibicikliztem -> kibiciklizt", function() {deepEqual( Stem("kibicikliztem"), "kibiciklizt");});
test("kibicsaklott -> kibicsaklot", function() {deepEqual( Stem("kibicsaklott"), "kibicsaklot");});
test("kibillentik -> kibillent", function() {deepEqual( Stem("kibillentik"), "kibillent");});
test("kibobozza -> kibobozz", function() {deepEqual( Stem("kibobozza"), "kibobozz");});
test("kibocsájthatók -> kibocsájtható", function() {deepEqual( Stem("kibocsájthatók"), "kibocsájtható");});
test("kibocsájtása -> kibocsájtás", function() {deepEqual( Stem("kibocsájtása"), "kibocsájtás");});
test("kibocsátandó -> kibocsátandó", function() {deepEqual( Stem("kibocsátandó"), "kibocsátandó");});
test("kibocsátani -> kibocsátan", function() {deepEqual( Stem("kibocsátani"), "kibocsátan");});
test("kibocsátania -> kibocsátan", function() {deepEqual( Stem("kibocsátania"), "kibocsátan");});
test("kibocsátaniuk -> kibocsátan", function() {deepEqual( Stem("kibocsátaniuk"), "kibocsátan");});
test("kibocsáthat -> kibocsáth", function() {deepEqual( Stem("kibocsáthat"), "kibocsáth");});
test("kibocsáthatják -> kibocsáthatja", function() {deepEqual( Stem("kibocsáthatják"), "kibocsáthatja");});
test("kibocsáthatnak -> kibocsáthat", function() {deepEqual( Stem("kibocsáthatnak"), "kibocsáthat");});
test("kibocsáthatott -> kibocsáthatot", function() {deepEqual( Stem("kibocsáthatott"), "kibocsáthatot");});
test("kibocsátható -> kibocsátható", function() {deepEqual( Stem("kibocsátható"), "kibocsátható");});
test("kibocsáthatók -> kibocsátható", function() {deepEqual( Stem("kibocsáthatók"), "kibocsátható");});
test("kibocsáthatósági -> kibocsáthatóság", function() {deepEqual( Stem("kibocsáthatósági"), "kibocsáthatóság");});
test("kibocsáthatóságot -> kibocsáthatóság", function() {deepEqual( Stem("kibocsáthatóságot"), "kibocsáthatóság");});
test("kibocsáthatósága -> kibocsáthatóság", function() {deepEqual( Stem("kibocsáthatósága"), "kibocsáthatóság");});
test("kibocsáthatóságát -> kibocsáthatóság", function() {deepEqual( Stem("kibocsáthatóságát"), "kibocsáthatóság");});
test("kibocsátja -> kibocsát", function() {deepEqual( Stem("kibocsátja"), "kibocsát");});
test("kibocsássanak -> kibocsáss", function() {deepEqual( Stem("kibocsássanak"), "kibocsáss");});
test("kibocsásson -> kibocsáss", function() {deepEqual( Stem("kibocsásson"), "kibocsáss");});
test("kibocsát -> kibocs", function() {deepEqual( Stem("kibocsát"), "kibocs");});
test("kibocsátotta -> kibocsátott", function() {deepEqual( Stem("kibocsátotta"), "kibocsátott");});
test("kibocsátunk -> kibocsát", function() {deepEqual( Stem("kibocsátunk"), "kibocsát");});
test("kibocsátott -> kibocsátot", function() {deepEqual( Stem("kibocsátott"), "kibocsátot");});
test("kibocsátási -> kibocsátás", function() {deepEqual( Stem("kibocsátási"), "kibocsátás");});
test("kibocsátásnál -> kibocsátás", function() {deepEqual( Stem("kibocsátásnál"), "kibocsátás");});
test("kibocsátásokra -> kibocsátás", function() {deepEqual( Stem("kibocsátásokra"), "kibocsátás");});
test("kibocsátásra -> kibocsátás", function() {deepEqual( Stem("kibocsátásra"), "kibocsátás");});
test("kibocsátásról -> kibocsátás", function() {deepEqual( Stem("kibocsátásról"), "kibocsátás");});
test("kibocsátást -> kibocsátás", function() {deepEqual( Stem("kibocsátást"), "kibocsátás");});
test("kibocsátásuktól -> kibocsátás", function() {deepEqual( Stem("kibocsátásuktól"), "kibocsátás");});
test("kibocsátásából -> kibocsátás", function() {deepEqual( Stem("kibocsátásából"), "kibocsátás");});
test("kibocsátásához -> kibocsátás", function() {deepEqual( Stem("kibocsátásához"), "kibocsátás");});
test("kibocsátásáig -> kibocsátás", function() {deepEqual( Stem("kibocsátásáig"), "kibocsátás");});
test("kibocsátásának -> kibocsátás", function() {deepEqual( Stem("kibocsátásának"), "kibocsátás");});
test("kibocsátásánál -> kibocsátás", function() {deepEqual( Stem("kibocsátásánál"), "kibocsátás");});
test("kibocsátására -> kibocsátás", function() {deepEqual( Stem("kibocsátására"), "kibocsátás");});
test("kibocsátásáról -> kibocsátás", function() {deepEqual( Stem("kibocsátásáról"), "kibocsátás");});
test("kibocsátását -> kibocsátás", function() {deepEqual( Stem("kibocsátását"), "kibocsátás");});
test("kibocsátásától -> kibocsátás", function() {deepEqual( Stem("kibocsátásától"), "kibocsátás");});
test("kibocsátásával -> kibocsátás", function() {deepEqual( Stem("kibocsátásával"), "kibocsátás");});
test("kibocsátása -> kibocsátás", function() {deepEqual( Stem("kibocsátása"), "kibocsátás");});
test("kibocsátásakor -> kibocsátás", function() {deepEqual( Stem("kibocsátásakor"), "kibocsátás");});
test("kibocsátásból -> kibocsátás", function() {deepEqual( Stem("kibocsátásból"), "kibocsátás");});
test("kibocsátáshoz -> kibocsátás", function() {deepEqual( Stem("kibocsátáshoz"), "kibocsátás");});
test("kibocsátás -> kibocsátás", function() {deepEqual( Stem("kibocsátás"), "kibocsátás");});
test("kibocsátó -> kibocsátó", function() {deepEqual( Stem("kibocsátó"), "kibocsátó");});
test("kibocsátója -> kibocsátó", function() {deepEqual( Stem("kibocsátója"), "kibocsátó");});
test("kibocsátók -> kibocsátó", function() {deepEqual( Stem("kibocsátók"), "kibocsátó");});
test("kibocsátóknak -> kibocsátó", function() {deepEqual( Stem("kibocsátóknak"), "kibocsátó");});
test("kibocsátókról -> kibocsátó", function() {deepEqual( Stem("kibocsátókról"), "kibocsátó");});
test("kibocsátónak -> kibocsátó", function() {deepEqual( Stem("kibocsátónak"), "kibocsátó");});
test("kibocsátót -> kibocsátó", function() {deepEqual( Stem("kibocsátót"), "kibocsátó");});
test("kibogarászniuk -> kibogarászn", function() {deepEqual( Stem("kibogarászniuk"), "kibogarászn");});
test("kibogozni -> kibogozn", function() {deepEqual( Stem("kibogozni"), "kibogozn");});
test("kibogozta -> kibogozt", function() {deepEqual( Stem("kibogozta"), "kibogozt");});
test("kibomlott -> kibomlot", function() {deepEqual( Stem("kibomlott"), "kibomlot");});
test("kibomlottak -> kibomlott", function() {deepEqual( Stem("kibomlottak"), "kibomlott");});
test("kibomló -> kibomló", function() {deepEqual( Stem("kibomló"), "kibomló");});
test("kibontakozni -> kibontakozn", function() {deepEqual( Stem("kibontakozni"), "kibontakozn");});
test("kibontakozott -> kibontakozot", function() {deepEqual( Stem("kibontakozott"), "kibontakozot");});
test("kibontakoztak -> kibontakozt", function() {deepEqual( Stem("kibontakoztak"), "kibontakozt");});
test("kibontakoztatásában -> kibontakoztatás", function() {deepEqual( Stem("kibontakoztatásában"), "kibontakoztatás");});
test("kibontakozás -> kibontakozás", function() {deepEqual( Stem("kibontakozás"), "kibontakozás");});
test("kibontakozásodban -> kibontakozás", function() {deepEqual( Stem("kibontakozásodban"), "kibontakozás");});
test("kibontakozásában -> kibontakozás", function() {deepEqual( Stem("kibontakozásában"), "kibontakozás");});
test("kibontott -> kibontot", function() {deepEqual( Stem("kibontott"), "kibontot");});
test("kibontani -> kibontan", function() {deepEqual( Stem("kibontani"), "kibontan");});
test("kibontotta -> kibontott", function() {deepEqual( Stem("kibontotta"), "kibontott");});
test("kibontottam -> kibontott", function() {deepEqual( Stem("kibontottam"), "kibontott");});
test("kibontám -> kibonta", function() {deepEqual( Stem("kibontám"), "kibonta");});
test("kiborul -> kibor", function() {deepEqual( Stem("kiborul"), "kibor");});
test("kiborulunk -> kiborul", function() {deepEqual( Stem("kiborulunk"), "kiborul");});
test("kiborítani -> kiborítan", function() {deepEqual( Stem("kiborítani"), "kiborítan");});
test("kibuggyanó -> kibuggyanó", function() {deepEqual( Stem("kibuggyanó"), "kibuggyanó");});
test("kibámulok -> kibámul", function() {deepEqual( Stem("kibámulok"), "kibámul");});
test("kibámult -> kibámul", function() {deepEqual( Stem("kibámult"), "kibámul");});
test("kibékíteni -> kibékíten", function() {deepEqual( Stem("kibékíteni"), "kibékíten");});
test("kibékült -> kibékül", function() {deepEqual( Stem("kibékült"), "kibékül");});
test("kibékültek -> kibékült", function() {deepEqual( Stem("kibékültek"), "kibékült");});
test("kibékültem -> kibékült", function() {deepEqual( Stem("kibékültem"), "kibékült");});
test("kibérelhetné -> kibérelhetn", function() {deepEqual( Stem("kibérelhetné"), "kibérelhetn");});
test("kibéreli -> kibérel", function() {deepEqual( Stem("kibéreli"), "kibérel");});
test("kibérelte -> kibérelt", function() {deepEqual( Stem("kibérelte"), "kibérelt");});
test("kibéreltük -> kibérelt", function() {deepEqual( Stem("kibéreltük"), "kibérelt");});
test("kibírja -> kibír", function() {deepEqual( Stem("kibírja"), "kibír");});
test("kibírni -> kibírn", function() {deepEqual( Stem("kibírni"), "kibírn");});
test("kibírná -> kibírna", function() {deepEqual( Stem("kibírná"), "kibírna");});
test("kibírom -> kibír", function() {deepEqual( Stem("kibírom"), "kibír");});
test("kibírtam -> kibírt", function() {deepEqual( Stem("kibírtam"), "kibírt");});
test("kibírtuk -> kibírt", function() {deepEqual( Stem("kibírtuk"), "kibírt");});
test("kibírtunk -> kibírt", function() {deepEqual( Stem("kibírtunk"), "kibírt");});
test("kibővített -> kibővítet", function() {deepEqual( Stem("kibővített"), "kibővítet");});
test("kibővítette -> kibővített", function() {deepEqual( Stem("kibővítette"), "kibővített");});
test("kibővíteni -> kibővíten", function() {deepEqual( Stem("kibővíteni"), "kibővíten");});
test("kibővítették -> kibővítette", function() {deepEqual( Stem("kibővítették"), "kibővítette");});
test("kibővíti -> kibővít", function() {deepEqual( Stem("kibővíti"), "kibővít");});
test("kibővítéssel -> kibővítés", function() {deepEqual( Stem("kibővítéssel"), "kibővítés");});
test("kibővítését -> kibővítés", function() {deepEqual( Stem("kibővítését"), "kibővítés");});
test("kibővülve -> kibővülv", function() {deepEqual( Stem("kibővülve"), "kibővülv");});
test("kiböfögte -> kiböfögt", function() {deepEqual( Stem("kiböfögte"), "kiböfögt");});
test("kiböjtöltük -> kiböjtölt", function() {deepEqual( Stem("kiböjtöltük"), "kiböjtölt");});
test("kibújni -> kibújn", function() {deepEqual( Stem("kibújni"), "kibújn");});
test("kibújtak -> kibújt", function() {deepEqual( Stem("kibújtak"), "kibújt");});
test("kibújt -> kibúj", function() {deepEqual( Stem("kibújt"), "kibúj");});
test("kibúvás -> kibúvás", function() {deepEqual( Stem("kibúvás"), "kibúvás");});
test("kicipelte -> kicipelt", function() {deepEqual( Stem("kicipelte"), "kicipelt");});
test("kicsalogattuk -> kicsalogatt", function() {deepEqual( Stem("kicsalogattuk"), "kicsalogatt");});
test("kicsalta -> kicsalt", function() {deepEqual( Stem("kicsalta"), "kicsalt");});
test("kicsalni -> kicsaln", function() {deepEqual( Stem("kicsalni"), "kicsaln");});
test("kicsapnak -> kicsap", function() {deepEqual( Stem("kicsapnak"), "kicsap");});
test("kicsapott -> kicsapot", function() {deepEqual( Stem("kicsapott"), "kicsapot");});
test("kicsapódott -> kicsapódot", function() {deepEqual( Stem("kicsapódott"), "kicsapódot");});
test("kicsatolta -> kicsatolt", function() {deepEqual( Stem("kicsatolta"), "kicsatolt");});
test("kicsattanó -> kicsattanó", function() {deepEqual( Stem("kicsattanó"), "kicsattanó");});
test("kicsattanóan -> kicsattanó", function() {deepEqual( Stem("kicsattanóan"), "kicsattanó");});
test("kicsavarni -> kicsavarn", function() {deepEqual( Stem("kicsavarni"), "kicsavarn");});
test("kicsavarodott -> kicsavarodot", function() {deepEqual( Stem("kicsavarodott"), "kicsavarodot");});
test("kicseleztem -> kicselezt", function() {deepEqual( Stem("kicseleztem"), "kicselezt");});
test("kicsempészni -> kicsempészn", function() {deepEqual( Stem("kicsempészni"), "kicsempészn");});
test("kicsengetnek -> kicsenget", function() {deepEqual( Stem("kicsengetnek"), "kicsenget");});
test("kicsengettek -> kicsengett", function() {deepEqual( Stem("kicsengettek"), "kicsengett");});
test("kicsengetést -> kicsengetés", function() {deepEqual( Stem("kicsengetést"), "kicsengetés");});
test("kicserzette -> kicserzett", function() {deepEqual( Stem("kicserzette"), "kicserzett");});
test("kicserélendő -> kicserélendő", function() {deepEqual( Stem("kicserélendő"), "kicserélendő");});
test("kicserélhessük -> kicserélhess", function() {deepEqual( Stem("kicserélhessük"), "kicserélhess");});
test("kicserélt -> kicserél", function() {deepEqual( Stem("kicserélt"), "kicserél");});
test("kicseréli -> kicserél", function() {deepEqual( Stem("kicseréli"), "kicserél");});
test("kicserélni -> kicseréln", function() {deepEqual( Stem("kicserélni"), "kicseréln");});
test("kicseréltek -> kicserélt", function() {deepEqual( Stem("kicseréltek"), "kicserélt");});
test("kicseréltem -> kicserélt", function() {deepEqual( Stem("kicseréltem"), "kicserélt");});
test("kicseréltük -> kicserélt", function() {deepEqual( Stem("kicseréltük"), "kicserélt");});
test("kicserélés -> kicserélés", function() {deepEqual( Stem("kicserélés"), "kicserélés");});
test("kicserélése -> kicserélés", function() {deepEqual( Stem("kicserélése"), "kicserélés");});
test("kicseréléssel -> kicserélés", function() {deepEqual( Stem("kicseréléssel"), "kicserélés");});
test("kicserélésében -> kicserélés", function() {deepEqual( Stem("kicserélésében"), "kicserélés");});
test("kicserélésének -> kicserélés", function() {deepEqual( Stem("kicserélésének"), "kicserélés");});
test("kicserélésével -> kicserélés", function() {deepEqual( Stem("kicserélésével"), "kicserélés");});
test("kicserélődött -> kicserélődöt", function() {deepEqual( Stem("kicserélődött"), "kicserélődöt");});
test("kicsi -> kics", function() {deepEqual( Stem("kicsi"), "kics");});
test("kicsiben -> kics", function() {deepEqual( Stem("kicsiben"), "kics");});
test("kicsik -> kics", function() {deepEqual( Stem("kicsik"), "kics");});
test("kicsikkel -> kics", function() {deepEqual( Stem("kicsikkel"), "kics");});
test("kicsinek -> kics", function() {deepEqual( Stem("kicsinek"), "kics");});
test("kicsiről -> kics", function() {deepEqual( Stem("kicsiről"), "kics");});
test("kicsit -> kics", function() {deepEqual( Stem("kicsit"), "kics");});
test("kicsivel -> kics", function() {deepEqual( Stem("kicsivel"), "kics");});
test("kicsivel -> kics", function() {deepEqual( Stem("kicsivel"), "kics");});
test("kicsikarni -> kicsikarn", function() {deepEqual( Stem("kicsikarni"), "kicsikarn");});
test("kicsikarására -> kicsikarás", function() {deepEqual( Stem("kicsikarására"), "kicsikarás");});
test("kicsikét -> kics", function() {deepEqual( Stem("kicsikét"), "kics");});
test("kicsiny -> kicsiny", function() {deepEqual( Stem("kicsiny"), "kicsiny");});
test("kicsinyenként -> kicsiny", function() {deepEqual( Stem("kicsinyenként"), "kicsiny");});
test("kicsinyét -> kicsiny", function() {deepEqual( Stem("kicsinyét"), "kicsiny");});
test("kicsinyes -> kicsinyes", function() {deepEqual( Stem("kicsinyes"), "kicsinyes");});
test("kicsinyesek -> kicsinyes", function() {deepEqual( Stem("kicsinyesek"), "kicsinyes");});
test("kicsinyített -> kicsinyítet", function() {deepEqual( Stem("kicsinyített"), "kicsinyítet");});
test("kicsinyítve -> kicsinyítv", function() {deepEqual( Stem("kicsinyítve"), "kicsinyítv");});
test("kicsinyítés -> kicsinyítés", function() {deepEqual( Stem("kicsinyítés"), "kicsinyítés");});
test("kicsoda-micsoda -> kicsoda-micsod", function() {deepEqual( Stem("kicsoda-micsoda"), "kicsoda-micsod");});
test("kicsoda -> kicsod", function() {deepEqual( Stem("kicsoda"), "kicsod");});
test("kicsodák -> kicsoda", function() {deepEqual( Stem("kicsodák"), "kicsoda");});
test("kicsomagolandó -> kicsomagolandó", function() {deepEqual( Stem("kicsomagolandó"), "kicsomagolandó");});
test("kicsomagolja -> kicsomagol", function() {deepEqual( Stem("kicsomagolja"), "kicsomagol");});
test("kicsomagolás -> kicsomagolás", function() {deepEqual( Stem("kicsomagolás"), "kicsomagolás");});
test("kicsomagolásához -> kicsomagolás", function() {deepEqual( Stem("kicsomagolásához"), "kicsomagolás");});
test("kicsorbult -> kicsorbul", function() {deepEqual( Stem("kicsorbult"), "kicsorbul");});
test("kicsoszogott -> kicsoszogot", function() {deepEqual( Stem("kicsoszogott"), "kicsoszogot");});
test("kicsusszanó -> kicsusszanó", function() {deepEqual( Stem("kicsusszanó"), "kicsusszanó");});
test("kicsászkálni -> kicsászkáln", function() {deepEqual( Stem("kicsászkálni"), "kicsászkáln");});
test("kicsírázhatnak -> kicsírázhat", function() {deepEqual( Stem("kicsírázhatnak"), "kicsírázhat");});
test("kicsöngetnek -> kicsönget", function() {deepEqual( Stem("kicsöngetnek"), "kicsönget");});
test("kicsöngettek -> kicsöngett", function() {deepEqual( Stem("kicsöngettek"), "kicsöngett");});
test("kicsöngetés -> kicsöngetés", function() {deepEqual( Stem("kicsöngetés"), "kicsöngetés");});
test("kicsöngetést -> kicsöngetés", function() {deepEqual( Stem("kicsöngetést"), "kicsöngetés");});
test("kicsúfolt -> kicsúfol", function() {deepEqual( Stem("kicsúfolt"), "kicsúfol");});
test("kicsúfoltak -> kicsúfolt", function() {deepEqual( Stem("kicsúfoltak"), "kicsúfolt");});
test("kicsúfolták -> kicsúfolta", function() {deepEqual( Stem("kicsúfolták"), "kicsúfolta");});
test("kicsúszhat -> kicsúszh", function() {deepEqual( Stem("kicsúszhat"), "kicsúszh");});
test("kicsúszik -> kicsúsz", function() {deepEqual( Stem("kicsúszik"), "kicsúsz");});
test("kicsúszott -> kicsúszot", function() {deepEqual( Stem("kicsúszott"), "kicsúszot");});
test("kidagadt -> kidag", function() {deepEqual( Stem("kidagadt"), "kidag");});
test("kidagadtak -> kidagadt", function() {deepEqual( Stem("kidagadtak"), "kidagadt");});
test("kidekorálja -> kidekorál", function() {deepEqual( Stem("kidekorálja"), "kidekorál");});
test("kiderítenem -> kideríten", function() {deepEqual( Stem("kiderítenem"), "kideríten");});
test("kideríteni -> kideríten", function() {deepEqual( Stem("kideríteni"), "kideríten");});
test("kideríteném -> kiderítene", function() {deepEqual( Stem("kideríteném"), "kiderítene");});
test("kiderítette -> kiderített", function() {deepEqual( Stem("kiderítette"), "kiderített");});
test("kiderítjük -> kiderít", function() {deepEqual( Stem("kiderítjük"), "kiderít");});
test("kiderítse -> kideríts", function() {deepEqual( Stem("kiderítse"), "kideríts");});
test("kideríthesse -> kideríthess", function() {deepEqual( Stem("kideríthesse"), "kideríthess");});
test("kideríthetetlen -> kideríthetetl", function() {deepEqual( Stem("kideríthetetlen"), "kideríthetetl");});
test("kideríthetetlensége -> kideríthetetlenség", function() {deepEqual( Stem("kideríthetetlensége"), "kideríthetetlenség");});
test("kideríthető -> kideríthető", function() {deepEqual( Stem("kideríthető"), "kideríthető");});
test("kiderítése -> kiderítés", function() {deepEqual( Stem("kiderítése"), "kiderítés");});
test("kiderítésére -> kiderítés", function() {deepEqual( Stem("kiderítésére"), "kiderítés");});
test("kiderülhet -> kiderülh", function() {deepEqual( Stem("kiderülhet"), "kiderülh");});
test("kiderüljön -> kiderülj", function() {deepEqual( Stem("kiderüljön"), "kiderülj");});
test("kiderül -> kider", function() {deepEqual( Stem("kiderül"), "kider");});
test("kiderülne -> kiderüln", function() {deepEqual( Stem("kiderülne"), "kiderüln");});
test("kiderülni -> kiderüln", function() {deepEqual( Stem("kiderülni"), "kiderüln");});
test("kiderült -> kiderül", function() {deepEqual( Stem("kiderült"), "kiderül");});
test("kidobhajtuk -> kidobhajt", function() {deepEqual( Stem("kidobhajtuk"), "kidobhajt");});
test("kidobnak -> kidob", function() {deepEqual( Stem("kidobnak"), "kidob");});
test("kidob -> kidob", function() {deepEqual( Stem("kidob"), "kidob");});
test("kidobni -> kidobn", function() {deepEqual( Stem("kidobni"), "kidobn");});
test("kidobta -> kidobt", function() {deepEqual( Stem("kidobta"), "kidobt");});
test("kidobtuk -> kidobt", function() {deepEqual( Stem("kidobtuk"), "kidobt");});
test("kidobtunk -> kidobt", function() {deepEqual( Stem("kidobtunk"), "kidobt");});
test("kidobták -> kidobta", function() {deepEqual( Stem("kidobták"), "kidobta");});
test("kidobott -> kidobot", function() {deepEqual( Stem("kidobott"), "kidobot");});
test("kidobálni -> kidobáln", function() {deepEqual( Stem("kidobálni"), "kidobáln");});
test("kidobóztunk -> kidobózt", function() {deepEqual( Stem("kidobóztunk"), "kidobózt");});
test("kidolgozatlan -> kidolgozatl", function() {deepEqual( Stem("kidolgozatlan"), "kidolgozatl");});
test("kidolgozható -> kidolgozható", function() {deepEqual( Stem("kidolgozható"), "kidolgozható");});
test("kidolgozni -> kidolgozn", function() {deepEqual( Stem("kidolgozni"), "kidolgozn");});
test("kidolgoznia -> kidolgozn", function() {deepEqual( Stem("kidolgoznia"), "kidolgozn");});
test("kidolgoznunk -> kidolgozn", function() {deepEqual( Stem("kidolgoznunk"), "kidolgozn");});
test("kidolgozta -> kidolgozt", function() {deepEqual( Stem("kidolgozta"), "kidolgozt");});
test("kidolgoztak -> kidolgozt", function() {deepEqual( Stem("kidolgoztak"), "kidolgozt");});
test("kidolgoztak -> kidolgozt", function() {deepEqual( Stem("kidolgoztak"), "kidolgozt");});
test("kidolgozták -> kidolgozta", function() {deepEqual( Stem("kidolgozták"), "kidolgozta");});
test("kidolgozza -> kidolgozz", function() {deepEqual( Stem("kidolgozza"), "kidolgozz");});
test("kidolgozzák -> kidolgozza", function() {deepEqual( Stem("kidolgozzák"), "kidolgozza");});
test("kidolgozott -> kidolgozot", function() {deepEqual( Stem("kidolgozott"), "kidolgozot");});
test("kidolgozottabb -> kidolgozottabb", function() {deepEqual( Stem("kidolgozottabb"), "kidolgozottabb");});
test("kidolgozva -> kidolgozv", function() {deepEqual( Stem("kidolgozva"), "kidolgozv");});
test("kidolgozási -> kidolgozás", function() {deepEqual( Stem("kidolgozási"), "kidolgozás");});
test("kidolgozás -> kidolgozás", function() {deepEqual( Stem("kidolgozás"), "kidolgozás");});
test("kidolgozása -> kidolgozás", function() {deepEqual( Stem("kidolgozása"), "kidolgozás");});
test("kidolgozásakor -> kidolgozás", function() {deepEqual( Stem("kidolgozásakor"), "kidolgozás");});
test("kidolgozásában -> kidolgozás", function() {deepEqual( Stem("kidolgozásában"), "kidolgozás");});
test("kidolgozásához -> kidolgozás", function() {deepEqual( Stem("kidolgozásához"), "kidolgozás");});
test("kidolgozásának -> kidolgozás", function() {deepEqual( Stem("kidolgozásának"), "kidolgozás");});
test("kidolgozásánál -> kidolgozás", function() {deepEqual( Stem("kidolgozásánál"), "kidolgozás");});
test("kidolgozására -> kidolgozás", function() {deepEqual( Stem("kidolgozására"), "kidolgozás");});
test("kidolgozását -> kidolgozás", function() {deepEqual( Stem("kidolgozását"), "kidolgozás");});
test("kidolgozásától -> kidolgozás", function() {deepEqual( Stem("kidolgozásától"), "kidolgozás");});
test("kidolgozásával -> kidolgozás", function() {deepEqual( Stem("kidolgozásával"), "kidolgozás");});
test("kidolgozású -> kidolgozású", function() {deepEqual( Stem("kidolgozású"), "kidolgozású");});
test("kidolgozó -> kidolgozó", function() {deepEqual( Stem("kidolgozó"), "kidolgozó");});
test("kidolgozók -> kidolgozó", function() {deepEqual( Stem("kidolgozók"), "kidolgozó");});
test("kidolgozódtak -> kidolgozódt", function() {deepEqual( Stem("kidolgozódtak"), "kidolgozódt");});
test("kidolgozói -> kidolgozó", function() {deepEqual( Stem("kidolgozói"), "kidolgozó");});
test("kidudorodik -> kidudorod", function() {deepEqual( Stem("kidudorodik"), "kidudorod");});
test("kidudorodó -> kidudorodó", function() {deepEqual( Stem("kidudorodó"), "kidudorodó");});
test("kidugaszolta -> kidugaszolt", function() {deepEqual( Stem("kidugaszolta"), "kidugaszolt");});
test("kidugta -> kidugt", function() {deepEqual( Stem("kidugta"), "kidugt");});
test("kidőlt -> kidől", function() {deepEqual( Stem("kidőlt"), "kidől");});
test("kidűlt -> kidűl", function() {deepEqual( Stem("kidűlt"), "kidűl");});
test("kidülledt -> kidüll", function() {deepEqual( Stem("kidülledt"), "kidüll");});
test("kidülledő -> kidülledő", function() {deepEqual( Stem("kidülledő"), "kidülledő");});
test("kidülleszti -> kidülleszt", function() {deepEqual( Stem("kidülleszti"), "kidülleszt");});
test("kidüllesztve -> kidüllesztv", function() {deepEqual( Stem("kidüllesztve"), "kidüllesztv");});
test("kiebrudalt -> kiebrudal", function() {deepEqual( Stem("kiebrudalt"), "kiebrudal");});
test("kiegyenesedett -> kiegyenesedet", function() {deepEqual( Stem("kiegyenesedett"), "kiegyenesedet");});
test("kiegyenesedést -> kiegyenesedés", function() {deepEqual( Stem("kiegyenesedést"), "kiegyenesedés");});
test("kiegyenesítette -> kiegyenesített", function() {deepEqual( Stem("kiegyenesítette"), "kiegyenesített");});
test("kiegyenlíteni -> kiegyenlíten", function() {deepEqual( Stem("kiegyenlíteni"), "kiegyenlíten");});
test("kiegyenlítenünk -> kiegyenlíten", function() {deepEqual( Stem("kiegyenlítenünk"), "kiegyenlíten");});
test("kiegyenlíti -> kiegyenlít", function() {deepEqual( Stem("kiegyenlíti"), "kiegyenlít");});
test("kiegyenlíthető -> kiegyenlíthető", function() {deepEqual( Stem("kiegyenlíthető"), "kiegyenlíthető");});
test("kiegyenlítése -> kiegyenlítés", function() {deepEqual( Stem("kiegyenlítése"), "kiegyenlítés");});
test("kiegyenlítésre -> kiegyenlítés", function() {deepEqual( Stem("kiegyenlítésre"), "kiegyenlítés");});
test("kiegyensúlyozatlanságok -> kiegyensúlyozatlanság", function() {deepEqual( Stem("kiegyensúlyozatlanságok"), "kiegyensúlyozatlanság");});
test("kiegyensúlyozhatnák -> kiegyensúlyozhatna", function() {deepEqual( Stem("kiegyensúlyozhatnák"), "kiegyensúlyozhatna");});
test("kiegyensúlyozott -> kiegyensúlyozot", function() {deepEqual( Stem("kiegyensúlyozott"), "kiegyensúlyozot");});
test("kiegyensúlyozottság -> kiegyensúlyozottság", function() {deepEqual( Stem("kiegyensúlyozottság"), "kiegyensúlyozottság");});
test("kiegyensúlyozottságot -> kiegyensúlyozottság", function() {deepEqual( Stem("kiegyensúlyozottságot"), "kiegyensúlyozottság");});
test("kiegyensúlyozza -> kiegyensúlyozz", function() {deepEqual( Stem("kiegyensúlyozza"), "kiegyensúlyozz");});
test("kiegyensúlyozásáról -> kiegyensúlyozás", function() {deepEqual( Stem("kiegyensúlyozásáról"), "kiegyensúlyozás");});
test("kiegyeznek -> kiegyez", function() {deepEqual( Stem("kiegyeznek"), "kiegyez");});
test("kiegyeznék -> kiegyezne", function() {deepEqual( Stem("kiegyeznék"), "kiegyezne");});
test("kiegyezési -> kiegyezés", function() {deepEqual( Stem("kiegyezési"), "kiegyezés");});
test("kiegyezésre -> kiegyezés", function() {deepEqual( Stem("kiegyezésre"), "kiegyezés");});
test("kiegészíteni -> kiegészíten", function() {deepEqual( Stem("kiegészíteni"), "kiegészíten");});
test("kiegészítette -> kiegészített", function() {deepEqual( Stem("kiegészítette"), "kiegészített");});
test("kiegészíti -> kiegészít", function() {deepEqual( Stem("kiegészíti"), "kiegészít");});
test("kiegészítik -> kiegészít", function() {deepEqual( Stem("kiegészítik"), "kiegészít");});
test("kiegészítjük -> kiegészít", function() {deepEqual( Stem("kiegészítjük"), "kiegészít");});
test("kiegészíthetik -> kiegészíthet", function() {deepEqual( Stem("kiegészíthetik"), "kiegészíthet");});
test("kiegészíthetők -> kiegészíthető", function() {deepEqual( Stem("kiegészíthetők"), "kiegészíthető");});
test("kiegészítve -> kiegészítv", function() {deepEqual( Stem("kiegészítve"), "kiegészítv");});
test("kiegészítési -> kiegészítés", function() {deepEqual( Stem("kiegészítési"), "kiegészítés");});
test("kiegészítés -> kiegészítés", function() {deepEqual( Stem("kiegészítés"), "kiegészítés");});
test("kiegészítése -> kiegészítés", function() {deepEqual( Stem("kiegészítése"), "kiegészítés");});
test("kiegészítések -> kiegészítés", function() {deepEqual( Stem("kiegészítések"), "kiegészítés");});
test("kiegészítéseként -> kiegészítés", function() {deepEqual( Stem("kiegészítéseként"), "kiegészítés");});
test("kiegészítésként -> kiegészítés", function() {deepEqual( Stem("kiegészítésként"), "kiegészítés");});
test("kiegészítéssel -> kiegészítés", function() {deepEqual( Stem("kiegészítéssel"), "kiegészítés");});
test("kiegészítést -> kiegészítés", function() {deepEqual( Stem("kiegészítést"), "kiegészítés");});
test("kiegészítéséhez -> kiegészítés", function() {deepEqual( Stem("kiegészítéséhez"), "kiegészítés");});
test("kiegészítésének -> kiegészítés", function() {deepEqual( Stem("kiegészítésének"), "kiegészítés");});
test("kiegészítésére -> kiegészítés", function() {deepEqual( Stem("kiegészítésére"), "kiegészítés");});
test("kiegészítéséről -> kiegészítés", function() {deepEqual( Stem("kiegészítéséről"), "kiegészítés");});
test("kiegészítését -> kiegészítés", function() {deepEqual( Stem("kiegészítését"), "kiegészítés");});
test("kiegészítésével -> kiegészítés", function() {deepEqual( Stem("kiegészítésével"), "kiegészítés");});
test("kiegészítő-gazdálkodási -> kiegészítő-gazdálkodás", function() {deepEqual( Stem("kiegészítő-gazdálkodási"), "kiegészítő-gazdálkodás");});
test("kiegészítő -> kiegészítő", function() {deepEqual( Stem("kiegészítő"), "kiegészítő");});
test("kiegészítője -> kiegészítő", function() {deepEqual( Stem("kiegészítője"), "kiegészítő");});
test("kiegészítők -> kiegészítő", function() {deepEqual( Stem("kiegészítők"), "kiegészítő");});
test("kiegészítőket -> kiegészítő", function() {deepEqual( Stem("kiegészítőket"), "kiegészítő");});
test("kiegészítőkkel -> kiegészítő", function() {deepEqual( Stem("kiegészítőkkel"), "kiegészítő");});
test("kiegészítőt -> kiegészítő", function() {deepEqual( Stem("kiegészítőt"), "kiegészítő");});
test("kiegészítővel -> kiegészítő", function() {deepEqual( Stem("kiegészítővel"), "kiegészítő");});
test("kiegészítőkínálatot -> kiegészítőkínálat", function() {deepEqual( Stem("kiegészítőkínálatot"), "kiegészítőkínálat");});
test("kiegészülhet -> kiegészülh", function() {deepEqual( Stem("kiegészülhet"), "kiegészülh");});
test("kiegészülnek -> kiegészül", function() {deepEqual( Stem("kiegészülnek"), "kiegészül");});
test("kiegészültek -> kiegészült", function() {deepEqual( Stem("kiegészültek"), "kiegészült");});
test("kiegészült -> kiegészül", function() {deepEqual( Stem("kiegészült"), "kiegészül");});
test("kiegészülve -> kiegészülv", function() {deepEqual( Stem("kiegészülve"), "kiegészülv");});
test("kiejtene -> kiejten", function() {deepEqual( Stem("kiejtene"), "kiejten");});
test("kiejteni -> kiejten", function() {deepEqual( Stem("kiejteni"), "kiejten");});
test("kiejthet -> kiejth", function() {deepEqual( Stem("kiejthet"), "kiejth");});
test("kiejthető -> kiejthető", function() {deepEqual( Stem("kiejthető"), "kiejthető");});
test("kiejthetők -> kiejthető", function() {deepEqual( Stem("kiejthetők"), "kiejthető");});
test("kiejthetővé -> kiejthető", function() {deepEqual( Stem("kiejthetővé"), "kiejthető");});
test("kiejtés -> kiejtés", function() {deepEqual( Stem("kiejtés"), "kiejtés");});
test("kiejtése -> kiejtés", function() {deepEqual( Stem("kiejtése"), "kiejtés");});
test("kiejtéssel -> kiejtés", function() {deepEqual( Stem("kiejtéssel"), "kiejtés");});
test("kiejtésért -> kiejtés", function() {deepEqual( Stem("kiejtésért"), "kiejtés");});
test("kiejtésük -> kiejtés", function() {deepEqual( Stem("kiejtésük"), "kiejtés");});
test("kielégitési -> kielégités", function() {deepEqual( Stem("kielégitési"), "kielégités");});
test("kielégítene -> kielégíten", function() {deepEqual( Stem("kielégítene"), "kielégíten");});
test("kielégíteni -> kielégíten", function() {deepEqual( Stem("kielégíteni"), "kielégíten");});
test("kielégítenie -> kielégíten", function() {deepEqual( Stem("kielégítenie"), "kielégíten");});
test("kielégítette -> kielégített", function() {deepEqual( Stem("kielégítette"), "kielégített");});
test("kielégíti -> kielégít", function() {deepEqual( Stem("kielégíti"), "kielégít");});
test("kielégítik -> kielégít", function() {deepEqual( Stem("kielégítik"), "kielégít");});
test("kielégítse -> kielégíts", function() {deepEqual( Stem("kielégítse"), "kielégíts");});
test("kielégítetlen -> kielégítetl", function() {deepEqual( Stem("kielégítetlen"), "kielégítetl");});
test("kielégíthesse -> kielégíthess", function() {deepEqual( Stem("kielégíthesse"), "kielégíthess");});
test("kielégítési -> kielégítés", function() {deepEqual( Stem("kielégítési"), "kielégítés");});
test("kielégítés -> kielégítés", function() {deepEqual( Stem("kielégítés"), "kielégítés");});
test("kielégítésben -> kielégítés", function() {deepEqual( Stem("kielégítésben"), "kielégítés");});
test("kielégítése -> kielégítés", function() {deepEqual( Stem("kielégítése"), "kielégítés");});
test("kielégítésre -> kielégítés", function() {deepEqual( Stem("kielégítésre"), "kielégítés");});
test("kielégítést -> kielégítés", function() {deepEqual( Stem("kielégítést"), "kielégítés");});
test("kielégítésének -> kielégítés", function() {deepEqual( Stem("kielégítésének"), "kielégítés");});
test("kielégítésére -> kielégítés", function() {deepEqual( Stem("kielégítésére"), "kielégítés");});
test("kielégítését -> kielégítés", function() {deepEqual( Stem("kielégítését"), "kielégítés");});
test("kielégítéséért -> kielégítés", function() {deepEqual( Stem("kielégítéséért"), "kielégítés");});
test("kielégítő -> kielégítő", function() {deepEqual( Stem("kielégítő"), "kielégítő");});
test("kielégítőek -> kielégítő", function() {deepEqual( Stem("kielégítőek"), "kielégítő");});
test("kielégítően -> kielégítő", function() {deepEqual( Stem("kielégítően"), "kielégítő");});
test("kielégítőnek -> kielégítő", function() {deepEqual( Stem("kielégítőnek"), "kielégítő");});
test("kielégületlenül -> kielégületlen", function() {deepEqual( Stem("kielégületlenül"), "kielégületlen");});
test("kielégült -> kielégül", function() {deepEqual( Stem("kielégült"), "kielégül");});
test("kielégülést -> kielégülés", function() {deepEqual( Stem("kielégülést"), "kielégülés");});
test("kiemelkedett -> kiemelkedet", function() {deepEqual( Stem("kiemelkedett"), "kiemelkedet");});
test("kiemelkedik -> kiemelked", function() {deepEqual( Stem("kiemelkedik"), "kiemelked");});
test("kiemelkedne -> kiemelkedn", function() {deepEqual( Stem("kiemelkedne"), "kiemelkedn");});
test("kiemelkednek -> kiemel", function() {deepEqual( Stem("kiemelkednek"), "kiemel");});
test("kiemelkedni -> kiemelkedn", function() {deepEqual( Stem("kiemelkedni"), "kiemelkedn");});
test("kiemelkedtek -> kiemelkedt", function() {deepEqual( Stem("kiemelkedtek"), "kiemelkedt");});
test("kiemelkedés -> kiemelkedés", function() {deepEqual( Stem("kiemelkedés"), "kiemelkedés");});
test("kiemelkedéseket -> kiemelkedés", function() {deepEqual( Stem("kiemelkedéseket"), "kiemelkedés");});
test("kiemelkedő -> kiemelkedő", function() {deepEqual( Stem("kiemelkedő"), "kiemelkedő");});
test("kiemelkedőek -> kiemelkedő", function() {deepEqual( Stem("kiemelkedőek"), "kiemelkedő");});
test("kiemelkedően -> kiemelkedő", function() {deepEqual( Stem("kiemelkedően"), "kiemelkedő");});
test("kiemelni -> kiemeln", function() {deepEqual( Stem("kiemelni"), "kiemeln");});
test("kiemelnie -> kiemeln", function() {deepEqual( Stem("kiemelnie"), "kiemeln");});
test("kiemelnék -> kiemelne", function() {deepEqual( Stem("kiemelnék"), "kiemelne");});
test("kiemelnének -> kiemeln", function() {deepEqual( Stem("kiemelnének"), "kiemeln");});
test("kiemelte -> kiemelt", function() {deepEqual( Stem("kiemelte"), "kiemelt");});
test("kiemeltem -> kiemelt", function() {deepEqual( Stem("kiemeltem"), "kiemelt");});
test("kiemelték -> kiemelte", function() {deepEqual( Stem("kiemelték"), "kiemelte");});
test("kiemeltük -> kiemelt", function() {deepEqual( Stem("kiemeltük"), "kiemelt");});
test("kiemelek -> kiemel", function() {deepEqual( Stem("kiemelek"), "kiemel");});
test("kiemeli -> kiemel", function() {deepEqual( Stem("kiemeli"), "kiemel");});
test("kiemelje -> kiemel", function() {deepEqual( Stem("kiemelje"), "kiemel");});
test("kiemeljük -> kiemel", function() {deepEqual( Stem("kiemeljük"), "kiemel");});
test("kiemelt -> kiemel", function() {deepEqual( Stem("kiemelt"), "kiemel");});
test("kiemelten -> kiemelt", function() {deepEqual( Stem("kiemelten"), "kiemelt");});
test("kiemeltnek -> kiemelt", function() {deepEqual( Stem("kiemeltnek"), "kiemelt");});
test("kiemelve -> kiemelv", function() {deepEqual( Stem("kiemelve"), "kiemelv");});
test("kijutnia -> kijutn", function() {deepEqual( Stem("kijutnia"), "kijutn");});
test("kijuttathatók -> kijuttatható", function() {deepEqual( Stem("kijuttathatók"), "kijuttatható");});
test("kijutással -> kijutás", function() {deepEqual( Stem("kijutással"), "kijutás");});
test("kijárati -> kijárat", function() {deepEqual( Stem("kijárati"), "kijárat");});
test("kijáratnál -> kijárat", function() {deepEqual( Stem("kijáratnál"), "kijárat");});
test("kijárjam -> kijárj", function() {deepEqual( Stem("kijárjam"), "kijárj");});
test("kijár -> kijár", function() {deepEqual( Stem("kijár"), "kijár");});
test("kijárjon -> kijárj", function() {deepEqual( Stem("kijárjon"), "kijárj");});
test("kijárjuk -> kijár", function() {deepEqual( Stem("kijárjuk"), "kijár");});
test("kijárni -> kijárn", function() {deepEqual( Stem("kijárni"), "kijárn");});
test("kijárom -> kijár", function() {deepEqual( Stem("kijárom"), "kijár");});
test("kijárta -> kijárt", function() {deepEqual( Stem("kijárta"), "kijárt");});
test("kijártam -> kijárt", function() {deepEqual( Stem("kijártam"), "kijárt");});
test("kijárás -> kijárás", function() {deepEqual( Stem("kijárás"), "kijárás");});
test("kijárási -> kijárás", function() {deepEqual( Stem("kijárási"), "kijárás");});
test("kijátssza -> kijátssz", function() {deepEqual( Stem("kijátssza"), "kijátssz");});
test("kijátsszák -> kijátssza", function() {deepEqual( Stem("kijátsszák"), "kijátssza");});
test("kijátszani -> kijátszan", function() {deepEqual( Stem("kijátszani"), "kijátszan");});
test("kijátszotta -> kijátszott", function() {deepEqual( Stem("kijátszotta"), "kijátszott");});
test("kijátszható -> kijátszható", function() {deepEqual( Stem("kijátszható"), "kijátszható");});
test("kijátszásának -> kijátszás", function() {deepEqual( Stem("kijátszásának"), "kijátszás");});
test("kijátszására -> kijátszás", function() {deepEqual( Stem("kijátszására"), "kijátszás");});
test("kijátszását -> kijátszás", function() {deepEqual( Stem("kijátszását"), "kijátszás");});
test("kijátszásával -> kijátszás", function() {deepEqual( Stem("kijátszásával"), "kijátszás");});
test("kijózanodjam -> kijózanodj", function() {deepEqual( Stem("kijózanodjam"), "kijózanodj");});
test("kijózanodtam -> kijózanodt", function() {deepEqual( Stem("kijózanodtam"), "kijózanodt");});
test("kijózanodott -> kijózanodot", function() {deepEqual( Stem("kijózanodott"), "kijózanodot");});
test("kijött -> kijöt", function() {deepEqual( Stem("kijött"), "kijöt");});
test("kijön -> kij", function() {deepEqual( Stem("kijön"), "kij");});
test("kijönnek -> kijön", function() {deepEqual( Stem("kijönnek"), "kijön");});
test("kijönni -> kijönn", function() {deepEqual( Stem("kijönni"), "kijönn");});
test("kijönnék -> kijönne", function() {deepEqual( Stem("kijönnék"), "kijönne");});
test("kijöttek -> kijött", function() {deepEqual( Stem("kijöttek"), "kijött");});
test("kijöttem -> kijött", function() {deepEqual( Stem("kijöttem"), "kijött");});
test("kijöttünk -> kijött", function() {deepEqual( Stem("kijöttünk"), "kijött");});
test("kijövök -> kijöv", function() {deepEqual( Stem("kijövök"), "kijöv");});
test("kijövünk -> kijöv", function() {deepEqual( Stem("kijövünk"), "kijöv");});
test("kijövet -> kijöv", function() {deepEqual( Stem("kijövet"), "kijöv");});
test("kijövő -> kijövő", function() {deepEqual( Stem("kijövő"), "kijövő");});
test("kikandikált -> kikandikál", function() {deepEqual( Stem("kikandikált"), "kikandikál");});
test("kikandikálva -> kikandikálv", function() {deepEqual( Stem("kikandikálva"), "kikandikálv");});
test("kikaparják -> kikaparja", function() {deepEqual( Stem("kikaparják"), "kikaparja");});
test("kikapcsolható -> kikapcsolható", function() {deepEqual( Stem("kikapcsolható"), "kikapcsolható");});
test("kikapcsolhatók -> kikapcsolható", function() {deepEqual( Stem("kikapcsolhatók"), "kikapcsolható");});
test("kikapcsolja -> kikapcsol", function() {deepEqual( Stem("kikapcsolja"), "kikapcsol");});
test("kikapcsol -> kikapcsol", function() {deepEqual( Stem("kikapcsol"), "kikapcsol");});
test("kikapcsoljuk -> kikapcsol", function() {deepEqual( Stem("kikapcsoljuk"), "kikapcsol");});
test("kikapcsolni -> kikapcsoln", function() {deepEqual( Stem("kikapcsolni"), "kikapcsoln");});
test("kikapcsolom -> kikapcsol", function() {deepEqual( Stem("kikapcsolom"), "kikapcsol");});
test("kikapcsoltuk -> kikapcsolt", function() {deepEqual( Stem("kikapcsoltuk"), "kikapcsolt");});
test("kikapcsolták -> kikapcsolta", function() {deepEqual( Stem("kikapcsolták"), "kikapcsolta");});
test("kikapcsolt -> kikapcsol", function() {deepEqual( Stem("kikapcsolt"), "kikapcsol");});
test("kikapcsolása -> kikapcsolás", function() {deepEqual( Stem("kikapcsolása"), "kikapcsolás");});
test("kikapcsolását -> kikapcsolás", function() {deepEqual( Stem("kikapcsolását"), "kikapcsolás");});
test("kikapcsolódhatnak -> kikapcsolódhat", function() {deepEqual( Stem("kikapcsolódhatnak"), "kikapcsolódhat");});
test("kikapcsolódhatok -> kikapcsolódhat", function() {deepEqual( Stem("kikapcsolódhatok"), "kikapcsolódhat");});
test("kikapcsolódhatunk -> kikapcsolódhat", function() {deepEqual( Stem("kikapcsolódhatunk"), "kikapcsolódhat");});
test("kikapcsolódjon -> kikapcsolódj", function() {deepEqual( Stem("kikapcsolódjon"), "kikapcsolódj");});
test("kikapcsolódjék -> kikapcsolódje", function() {deepEqual( Stem("kikapcsolódjék"), "kikapcsolódje");});
test("kikapcsolódni -> kikapcsolódn", function() {deepEqual( Stem("kikapcsolódni"), "kikapcsolódn");});
test("kikapcsolódom -> kikapcsolód", function() {deepEqual( Stem("kikapcsolódom"), "kikapcsolód");});
test("kikapcsolódás -> kikapcsolódás", function() {deepEqual( Stem("kikapcsolódás"), "kikapcsolódás");});
test("kikapcsolódásban -> kikapcsolódás", function() {deepEqual( Stem("kikapcsolódásban"), "kikapcsolódás");});
test("kikapcsolódásra -> kikapcsolódás", function() {deepEqual( Stem("kikapcsolódásra"), "kikapcsolódás");});
test("kikapcsolódásról -> kikapcsolódás", function() {deepEqual( Stem("kikapcsolódásról"), "kikapcsolódás");});
test("kikapcsolódást -> kikapcsolódás", function() {deepEqual( Stem("kikapcsolódást"), "kikapcsolódás");});
test("kikapott -> kikapot", function() {deepEqual( Stem("kikapott"), "kikapot");});
test("kikapta -> kikapt", function() {deepEqual( Stem("kikapta"), "kikapt");});
test("kikaptak -> kikapt", function() {deepEqual( Stem("kikaptak"), "kikapt");});
test("kikaptunk -> kikapt", function() {deepEqual( Stem("kikaptunk"), "kikapt");});
test("kikapták -> kikapta", function() {deepEqual( Stem("kikapták"), "kikapta");});
test("kikelni -> kikeln", function() {deepEqual( Stem("kikelni"), "kikeln");});
test("kikeltem -> kikelt", function() {deepEqual( Stem("kikeltem"), "kikelt");});
test("kikelt -> kikel", function() {deepEqual( Stem("kikelt"), "kikel");});
test("kikerekedtek -> kikerekedt", function() {deepEqual( Stem("kikerekedtek"), "kikerekedt");});
test("kikeresse -> kikeress", function() {deepEqual( Stem("kikeresse"), "kikeress");});
test("kikerestethet -> kikeresteth", function() {deepEqual( Stem("kikerestethet"), "kikeresteth");});
test("kikergetnek -> kikerget", function() {deepEqual( Stem("kikergetnek"), "kikerget");});
test("kikerékpároztam -> kikerékpározt", function() {deepEqual( Stem("kikerékpároztam"), "kikerékpározt");});
test("kikerülhetetlen -> kikerülhetetl", function() {deepEqual( Stem("kikerülhetetlen"), "kikerülhetetl");});
test("kikerülhetsz -> kikerülhetsz", function() {deepEqual( Stem("kikerülhetsz"), "kikerülhetsz");});
test("kikerülhető -> kikerülhető", function() {deepEqual( Stem("kikerülhető"), "kikerülhető");});
test("kikerülhetővé -> kikerülhető", function() {deepEqual( Stem("kikerülhetővé"), "kikerülhető");});
test("kikerülik -> kikerül", function() {deepEqual( Stem("kikerülik"), "kikerül");});
test("kikerül -> kiker", function() {deepEqual( Stem("kikerül"), "kiker");});
test("kikerülje -> kikerül", function() {deepEqual( Stem("kikerülje"), "kikerül");});
test("kikerülni -> kikerüln", function() {deepEqual( Stem("kikerülni"), "kikerüln");});
test("kikerültek -> kikerült", function() {deepEqual( Stem("kikerültek"), "kikerült");});
test("kikerültem -> kikerült", function() {deepEqual( Stem("kikerültem"), "kikerült");});
test("kikerülök -> kikerül", function() {deepEqual( Stem("kikerülök"), "kikerül");});
test("kikerülünk -> kikerül", function() {deepEqual( Stem("kikerülünk"), "kikerül");});
test("kikerült -> kikerül", function() {deepEqual( Stem("kikerült"), "kikerül");});
test("kikerülve -> kikerülv", function() {deepEqual( Stem("kikerülve"), "kikerülv");});
test("kikerülési -> kikerülés", function() {deepEqual( Stem("kikerülési"), "kikerülés");});
test("kikerülést -> kikerülés", function() {deepEqual( Stem("kikerülést"), "kikerülés");});
test("kikerülő -> kikerülő", function() {deepEqual( Stem("kikerülő"), "kikerülő");});
test("kikerülők -> kikerülő", function() {deepEqual( Stem("kikerülők"), "kikerülő");});
test("kikeveredtünk -> kikeveredt", function() {deepEqual( Stem("kikeveredtünk"), "kikeveredt");});
test("kikeveredéshez -> kikeveredés", function() {deepEqual( Stem("kikeveredéshez"), "kikeveredés");});
test("kikezdek -> kikezd", function() {deepEqual( Stem("kikezdek"), "kikezd");});
test("kikezdeni -> kikezden", function() {deepEqual( Stem("kikezdeni"), "kikezden");});
test("kikezdenie -> kikezden", function() {deepEqual( Stem("kikezdenie"), "kikezden");});
test("kikezdte -> kikezdt", function() {deepEqual( Stem("kikezdte"), "kikezdt");});
test("kikezdték -> kikezdte", function() {deepEqual( Stem("kikezdték"), "kikezdte");});
test("kikezdett -> kikezdet", function() {deepEqual( Stem("kikezdett"), "kikezdet");});
test("kikiáltott -> kikiáltot", function() {deepEqual( Stem("kikiáltott"), "kikiáltot");});
test("kikiáltásakor -> kikiáltás", function() {deepEqual( Stem("kikiáltásakor"), "kikiáltás");});
test("kikiáltási -> kikiáltás", function() {deepEqual( Stem("kikiáltási"), "kikiáltás");});
test("kikiáltásos -> kikiáltásos", function() {deepEqual( Stem("kikiáltásos"), "kikiáltásos");});
test("kikopogott -> kikopogot", function() {deepEqual( Stem("kikopogott"), "kikopogot");});
test("kikopott -> kikopot", function() {deepEqual( Stem("kikopott"), "kikopot");});
test("kikoptak -> kikopt", function() {deepEqual( Stem("kikoptak"), "kikopt");});
test("kikovácsolódó -> kikovácsolódó", function() {deepEqual( Stem("kikovácsolódó"), "kikovácsolódó");});
test("kikukucskált -> kikukucskál", function() {deepEqual( Stem("kikukucskált"), "kikukucskál");});
test("kikuyu -> kikuyu", function() {deepEqual( Stem("kikuyu"), "kikuyu");});
test("kikászálódni -> kikászálódn", function() {deepEqual( Stem("kikászálódni"), "kikászálódn");});
test("kikászálódnom -> kikászálódn", function() {deepEqual( Stem("kikászálódnom"), "kikászálódn");});
test("kikászálódtak -> kikászálódt", function() {deepEqual( Stem("kikászálódtak"), "kikászálódt");});
test("kikászálódtam -> kikászálódt", function() {deepEqual( Stem("kikászálódtam"), "kikászálódt");});
test("kikászálódtunk -> kikászálódt", function() {deepEqual( Stem("kikászálódtunk"), "kikászálódt");});
test("kikényszeríteni -> kikényszeríten", function() {deepEqual( Stem("kikényszeríteni"), "kikényszeríten");});
test("kikényszerítette -> kikényszerített", function() {deepEqual( Stem("kikényszerítette"), "kikényszerített");});
test("kikényszerítse -> kikényszeríts", function() {deepEqual( Stem("kikényszerítse"), "kikényszeríts");});
test("kikényszerített -> kikényszerítet", function() {deepEqual( Stem("kikényszerített"), "kikényszerítet");});
test("kikényszeríthetik -> kikényszeríthet", function() {deepEqual( Stem("kikényszeríthetik"), "kikényszeríthet");});
test("kikényszeríthető -> kikényszeríthető", function() {deepEqual( Stem("kikényszeríthető"), "kikényszeríthető");});
test("kikényszerítése -> kikényszerítés", function() {deepEqual( Stem("kikényszerítése"), "kikényszerítés");});
test("kikényszerítésének -> kikényszerítés", function() {deepEqual( Stem("kikényszerítésének"), "kikényszerítés");});
test("kiképezzük -> kiképezz", function() {deepEqual( Stem("kiképezzük"), "kiképezz");});
test("kiképzési -> kiképzés", function() {deepEqual( Stem("kiképzési"), "kiképzés");});
test("kiképzést -> kiképzés", function() {deepEqual( Stem("kiképzést"), "kiképzés");});
test("kiképzés -> kiképzés", function() {deepEqual( Stem("kiképzés"), "kiképzés");});
test("kiképzésükhöz -> kiképzés", function() {deepEqual( Stem("kiképzésükhöz"), "kiképzés");});
test("kikérdezett -> kikérdezet", function() {deepEqual( Stem("kikérdezett"), "kikérdezet");});
test("kikérdezi -> kikérdez", function() {deepEqual( Stem("kikérdezi"), "kikérdez");});
test("kikérdezem -> kikérdez", function() {deepEqual( Stem("kikérdezem"), "kikérdez");});
test("kikérdezés -> kikérdezés", function() {deepEqual( Stem("kikérdezés"), "kikérdezés");});
test("kikérdezése -> kikérdezés", function() {deepEqual( Stem("kikérdezése"), "kikérdezés");});
test("kikérem -> kikér", function() {deepEqual( Stem("kikérem"), "kikér");});
test("kikérezkedni -> kikérezkedn", function() {deepEqual( Stem("kikérezkedni"), "kikérezkedn");});
test("kikéri -> kikér", function() {deepEqual( Stem("kikéri"), "kikér");});
test("kikérjék -> kikérje", function() {deepEqual( Stem("kikérjék"), "kikérje");});
test("kikérni -> kikérn", function() {deepEqual( Stem("kikérni"), "kikérn");});
test("kikértem -> kikért", function() {deepEqual( Stem("kikértem"), "kikért");});
test("kikérték -> kikérte", function() {deepEqual( Stem("kikérték"), "kikérte");});
test("kikértük -> kikért", function() {deepEqual( Stem("kikértük"), "kikért");});
test("kikérését -> kikérés", function() {deepEqual( Stem("kikérését"), "kikérés");});
test("kikészítenek -> kikészít", function() {deepEqual( Stem("kikészítenek"), "kikészít");});
test("kikészült -> kikészül", function() {deepEqual( Stem("kikészült"), "kikészül");});
test("kikísérem -> kikísér", function() {deepEqual( Stem("kikísérem"), "kikísér");});
test("kikísérik -> kikísér", function() {deepEqual( Stem("kikísérik"), "kikísér");});
test("kikísérte -> kikísért", function() {deepEqual( Stem("kikísérte"), "kikísért");});
test("kikísért -> kikís", function() {deepEqual( Stem("kikísért"), "kikís");});
test("kiköltöztem -> kiköltözt", function() {deepEqual( Stem("kiköltöztem"), "kiköltözt");});
test("kiköltöztették -> kiköltöztette", function() {deepEqual( Stem("kiköltöztették"), "kiköltöztette");});
test("kiköltözöm -> kiköltözö", function() {deepEqual( Stem("kiköltözöm"), "kiköltözö");});
test("kiköpni -> kiköpn", function() {deepEqual( Stem("kiköpni"), "kiköpn");});
test("kiköthetik -> kiköthet", function() {deepEqual( Stem("kiköthetik"), "kiköthet");});
test("kiköthető -> kiköthető", function() {deepEqual( Stem("kiköthető"), "kiköthető");});
test("kikötve -> kikötv", function() {deepEqual( Stem("kikötve"), "kikötv");});
test("kikötés -> kikötés", function() {deepEqual( Stem("kikötés"), "kikötés");});
test("kikötése -> kikötés", function() {deepEqual( Stem("kikötése"), "kikötés");});
test("kikötéseket -> kikötés", function() {deepEqual( Stem("kikötéseket"), "kikötés");});
test("kikötéskor -> kikötés", function() {deepEqual( Stem("kikötéskor"), "kikötés");});
test("kikötésre -> kikötés", function() {deepEqual( Stem("kikötésre"), "kikötés");});
test("kikötéssel -> kikötés", function() {deepEqual( Stem("kikötéssel"), "kikötés");});
test("kikötést -> kikötés", function() {deepEqual( Stem("kikötést"), "kikötés");});
test("kikötésére -> kikötés", function() {deepEqual( Stem("kikötésére"), "kikötés");});
test("kikötői -> kikötő", function() {deepEqual( Stem("kikötői"), "kikötő");});
test("kikötő -> kikötő", function() {deepEqual( Stem("kikötő"), "kikötő");});
test("kikötőbe -> kikötő", function() {deepEqual( Stem("kikötőbe"), "kikötő");});
test("kikötőben -> kikötő", function() {deepEqual( Stem("kikötőben"), "kikötő");});
test("kikötőből -> kikötő", function() {deepEqual( Stem("kikötőből"), "kikötő");});
test("kikötője -> kikötő", function() {deepEqual( Stem("kikötője"), "kikötő");});
test("kikötőjébe -> kikötő", function() {deepEqual( Stem("kikötőjébe"), "kikötő");});
test("kikötőjében -> kikötő", function() {deepEqual( Stem("kikötőjében"), "kikötő");});
test("kikötőjéből -> kikötő", function() {deepEqual( Stem("kikötőjéből"), "kikötő");});
test("kikötők -> kikötő", function() {deepEqual( Stem("kikötők"), "kikötő");});
test("kikötőkben -> kikötő", function() {deepEqual( Stem("kikötőkben"), "kikötő");});
test("kikötőkről -> kikötő", function() {deepEqual( Stem("kikötőkről"), "kikötő");});
test("kikötőről -> kikötő", function() {deepEqual( Stem("kikötőről"), "kikötő");});
test("kikötőt -> kikötő", function() {deepEqual( Stem("kikötőt"), "kikötő");});
test("kikötőnegyedben -> kikötőnegy", function() {deepEqual( Stem("kikötőnegyedben"), "kikötőnegy");});
test("kikötőváros -> kikötőváros", function() {deepEqual( Stem("kikötőváros"), "kikötőváros");});
test("kikötővárosaiban -> kikötőváros", function() {deepEqual( Stem("kikötővárosaiban"), "kikötőváros");});
test("kikötött -> kikötöt", function() {deepEqual( Stem("kikötött"), "kikötöt");});
test("kikötöm -> kikötö", function() {deepEqual( Stem("kikötöm"), "kikötö");});
test("kikötötték -> kikötötte", function() {deepEqual( Stem("kikötötték"), "kikötötte");});
test("kikötöttük -> kikötött", function() {deepEqual( Stem("kikötöttük"), "kikötött");});
test("kikötöttünk -> kikötött", function() {deepEqual( Stem("kikötöttünk"), "kikötött");});
test("kikötik -> kiköt", function() {deepEqual( Stem("kikötik"), "kiköt");});
test("kikötni -> kikötn", function() {deepEqual( Stem("kikötni"), "kikötn");});
test("kikövetelje -> kikövetel", function() {deepEqual( Stem("kikövetelje"), "kikövetel");});
test("kikövetelné -> kiköveteln", function() {deepEqual( Stem("kikövetelné"), "kiköveteln");});
test("kikövetelték -> kikövetelte", function() {deepEqual( Stem("kikövetelték"), "kikövetelte");});
test("kikövetkeztetheti -> kikövetkeztethet", function() {deepEqual( Stem("kikövetkeztetheti"), "kikövetkeztethet");});
test("kikövetkeztethető -> kikövetkeztethető", function() {deepEqual( Stem("kikövetkeztethető"), "kikövetkeztethető");});
test("kikövetkeztetik -> kikövetkeztet", function() {deepEqual( Stem("kikövetkeztetik"), "kikövetkeztet");});
test("kikövetkeztetni -> kikövetkeztetn", function() {deepEqual( Stem("kikövetkeztetni"), "kikövetkeztetn");});
test("kiközösítenék -> kiközösítene", function() {deepEqual( Stem("kiközösítenék"), "kiközösítene");});
test("kiközösítették -> kiközösítette", function() {deepEqual( Stem("kiközösítették"), "kiközösítette");});
test("kiközösítik -> kiközösít", function() {deepEqual( Stem("kiközösítik"), "kiközösít");});
test("kiközösítéseket -> kiközösítés", function() {deepEqual( Stem("kiközösítéseket"), "kiközösítés");});
test("kiküld -> kikül", function() {deepEqual( Stem("kiküld"), "kikül");});
test("kiküldeni -> kikülden", function() {deepEqual( Stem("kiküldeni"), "kikülden");});
test("kiküldi -> kiküld", function() {deepEqual( Stem("kiküldi"), "kiküld");});
test("kiküldték -> kiküldte", function() {deepEqual( Stem("kiküldték"), "kiküldte");});
test("kiküldésével -> kiküldés", function() {deepEqual( Stem("kiküldésével"), "kiküldés");});
test("kiküldött -> kiküldöt", function() {deepEqual( Stem("kiküldött"), "kiküldöt");});
test("kiküldöttekről -> kiküldött", function() {deepEqual( Stem("kiküldöttekről"), "kiküldött");});
test("kiküszöbölhető -> kiküszöbölhető", function() {deepEqual( Stem("kiküszöbölhető"), "kiküszöbölhető");});
test("kiküszöbölik -> kiküszöböl", function() {deepEqual( Stem("kiküszöbölik"), "kiküszöböl");});
test("kiküszöbölni -> kiküszöböln", function() {deepEqual( Stem("kiküszöbölni"), "kiküszöböln");});
test("kiküszöbölése -> kiküszöbölés", function() {deepEqual( Stem("kiküszöbölése"), "kiküszöbölés");});
test("kiküszöböléséhez -> kiküszöbölés", function() {deepEqual( Stem("kiküszöböléséhez"), "kiküszöbölés");});
test("kiküszöbölésére -> kiküszöbölés", function() {deepEqual( Stem("kiküszöbölésére"), "kiküszöbölés");});
test("kiküszöbölő -> kiküszöbölő", function() {deepEqual( Stem("kiküszöbölő"), "kiküszöbölő");});
test("kilakoltatás -> kilakoltatás", function() {deepEqual( Stem("kilakoltatás"), "kilakoltatás");});
test("kilakoltatásnak -> kilakoltatás", function() {deepEqual( Stem("kilakoltatásnak"), "kilakoltatás");});
test("kilakoltatások -> kilakoltatás", function() {deepEqual( Stem("kilakoltatások"), "kilakoltatás");});
test("kilenc-tíz -> kilenc-tíz", function() {deepEqual( Stem("kilenc-tíz"), "kilenc-tíz");});
test("kilencedes -> kilencedes", function() {deepEqual( Stem("kilencedes"), "kilencedes");});
test("kilencedik -> kilenced", function() {deepEqual( Stem("kilencedik"), "kilenced");});
test("kilenc -> kilenc", function() {deepEqual( Stem("kilenc"), "kilenc");});
test("kilencedike -> kilenced", function() {deepEqual( Stem("kilencedike"), "kilenced");});
test("kilencedikén -> kilenced", function() {deepEqual( Stem("kilencedikén"), "kilenced");});
test("kilencedikét -> kilenced", function() {deepEqual( Stem("kilencedikét"), "kilenced");});
test("kilencedszer -> kilencedszer", function() {deepEqual( Stem("kilencedszer"), "kilencedszer");});
test("kilencen -> kilenc", function() {deepEqual( Stem("kilencen"), "kilenc");});
test("kilences -> kilences", function() {deepEqual( Stem("kilences"), "kilences");});
test("kilencet -> kilenc", function() {deepEqual( Stem("kilencet"), "kilenc");});
test("kilencig -> kilenc", function() {deepEqual( Stem("kilencig"), "kilenc");});
test("kilenckor -> kilenc", function() {deepEqual( Stem("kilenckor"), "kilenc");});
test("kilencre -> kilenc", function() {deepEqual( Stem("kilencre"), "kilenc");});
test("kilenctől -> kilenc", function() {deepEqual( Stem("kilenctől"), "kilenc");});
test("kilencezer -> kilencezer", function() {deepEqual( Stem("kilencezer"), "kilencezer");});
test("kilencpontos -> kilencpontos", function() {deepEqual( Stem("kilencpontos"), "kilencpontos");});
test("kilencszereséből -> kilencszeres", function() {deepEqual( Stem("kilencszereséből"), "kilencszeres");});
test("kilencszáz -> kilencszáz", function() {deepEqual( Stem("kilencszáz"), "kilencszáz");});
test("kilencszázas -> kilencszázas", function() {deepEqual( Stem("kilencszázas"), "kilencszázas");});
test("kilencszázhat -> kilencszázh", function() {deepEqual( Stem("kilencszázhat"), "kilencszázh");});
test("kilencven -> kilencv", function() {deepEqual( Stem("kilencven"), "kilencv");});
test("kilencvenedik -> kilencvened", function() {deepEqual( Stem("kilencvenedik"), "kilencvened");});
test("kilencvenes -> kilencvenes", function() {deepEqual( Stem("kilencvenes"), "kilencvenes");});
test("kilencveneseket -> kilencvenes", function() {deepEqual( Stem("kilencveneseket"), "kilencvenes");});
test("kilencvenre -> kilencven", function() {deepEqual( Stem("kilencvenre"), "kilencven");});
test("kilencvenhat -> kilencvenh", function() {deepEqual( Stem("kilencvenhat"), "kilencvenh");});
test("kilencvenkilenc -> kilencvenkilenc", function() {deepEqual( Stem("kilencvenkilenc"), "kilencvenkilenc");});
test("kilencvenkilenccel -> kilencvenkilenc", function() {deepEqual( Stem("kilencvenkilenccel"), "kilencvenkilenc");});
test("kilencvennapos -> kilencvennapos", function() {deepEqual( Stem("kilencvennapos"), "kilencvennapos");});
test("kilencvennyolc -> kilencvennyolc", function() {deepEqual( Stem("kilencvennyolc"), "kilencvennyolc");});
test("kilencvenszázalékos -> kilencvenszázalékos", function() {deepEqual( Stem("kilencvenszázalékos"), "kilencvenszázalékos");});
test("kilencvenéves -> kilencvenéves", function() {deepEqual( Stem("kilencvenéves"), "kilencvenéves");});
test("kilencvenöt -> kilencven", function() {deepEqual( Stem("kilencvenöt"), "kilencven");});
test("kilencéves -> kilencéves", function() {deepEqual( Stem("kilencéves"), "kilencéves");});
test("kilendült -> kilendül", function() {deepEqual( Stem("kilendült"), "kilendül");});
test("kilengései -> kilengés", function() {deepEqual( Stem("kilengései"), "kilengés");});
test("kilengések -> kilengés", function() {deepEqual( Stem("kilengések"), "kilengés");});
test("kilesse -> kiless", function() {deepEqual( Stem("kilesse"), "kiless");});
test("kilettek -> kilett", function() {deepEqual( Stem("kilettek"), "kilett");});
test("kilibegett -> kilibeget", function() {deepEqual( Stem("kilibegett"), "kilibeget");});
test("kilincset -> kilincs", function() {deepEqual( Stem("kilincset"), "kilincs");});
test("kilincsre -> kilincs", function() {deepEqual( Stem("kilincsre"), "kilincs");});
test("kilistázni -> kilistázn", function() {deepEqual( Stem("kilistázni"), "kilistázn");});
test("killerezni -> killerezn", function() {deepEqual( Stem("killerezni"), "killerezn");});
test("kilobbant -> kilobban", function() {deepEqual( Stem("kilobbant"), "kilobban");});
test("kilobites -> kilobites", function() {deepEqual( Stem("kilobites"), "kilobites");});
test("kilobitről -> kilobit", function() {deepEqual( Stem("kilobitről"), "kilobit");});
test("kilobyte -> kilobyt", function() {deepEqual( Stem("kilobyte"), "kilobyt");});
test("kilobájt -> kilobáj", function() {deepEqual( Stem("kilobájt"), "kilobáj");});
test("kilogrammnyi -> kilogrammny", function() {deepEqual( Stem("kilogrammnyi"), "kilogrammny");});
test("kilogrammonként -> kilogram", function() {deepEqual( Stem("kilogrammonként"), "kilogram");});
test("kilogramm -> kilogram", function() {deepEqual( Stem("kilogramm"), "kilogram");});
test("kilogrammot -> kilogram", function() {deepEqual( Stem("kilogrammot"), "kilogram");});
test("kilogrammos -> kilogrammos", function() {deepEqual( Stem("kilogrammos"), "kilogrammos");});
test("kilohertz -> kilohertz", function() {deepEqual( Stem("kilohertz"), "kilohertz");});
test("kilohertzes -> kilohertzes", function() {deepEqual( Stem("kilohertzes"), "kilohertzes");});
test("kilométerdíjat -> kilométerdíj", function() {deepEqual( Stem("kilométerdíjat"), "kilométerdíj");});
test("kilométereit -> kilométer", function() {deepEqual( Stem("kilométereit"), "kilométer");});
test("kilométer -> kilométer", function() {deepEqual( Stem("kilométer"), "kilométer");});
test("kilométerbe -> kilométer", function() {deepEqual( Stem("kilométerbe"), "kilométer");});
test("kilométerekre -> kilométer", function() {deepEqual( Stem("kilométerekre"), "kilométer");});
test("kilométeren -> kilométer", function() {deepEqual( Stem("kilométeren"), "kilométer");});
test("kilométernél -> kilométer", function() {deepEqual( Stem("kilométernél"), "kilométer");});
test("kilométerre -> kilométer", function() {deepEqual( Stem("kilométerre"), "kilométer");});
test("kilométerrel -> kilométer", function() {deepEqual( Stem("kilométerrel"), "kilométer");});
test("kilométert -> kilométer", function() {deepEqual( Stem("kilométert"), "kilométer");});
test("kilométeres -> kilométeres", function() {deepEqual( Stem("kilométeres"), "kilométeres");});
test("kilométeresre -> kilométeres", function() {deepEqual( Stem("kilométeresre"), "kilométeres");});
test("kilométernyi -> kilométerny", function() {deepEqual( Stem("kilométernyi"), "kilométerny");});
test("kilométernyire -> kilométerny", function() {deepEqual( Stem("kilométernyire"), "kilométerny");});
test("kilométernyivel -> kilométerny", function() {deepEqual( Stem("kilométernyivel"), "kilométerny");});
test("kilométerszám -> kilométersza", function() {deepEqual( Stem("kilométerszám"), "kilométersza");});
test("kilométeróra -> kilométeró", function() {deepEqual( Stem("kilométeróra"), "kilométeró");});
test("kilométerórás -> kilométerórás", function() {deepEqual( Stem("kilométerórás"), "kilométerórás");});
test("kilopja -> kilop", function() {deepEqual( Stem("kilopja"), "kilop");});
test("kilopta -> kilopt", function() {deepEqual( Stem("kilopta"), "kilopt");});
test("kilowattóra -> kilowattó", function() {deepEqual( Stem("kilowattóra"), "kilowattó");});
test("kilyukadt -> kilyu", function() {deepEqual( Stem("kilyukadt"), "kilyu");});
test("kilyukadtak -> kilyukadt", function() {deepEqual( Stem("kilyukadtak"), "kilyukadt");});
test("kilyukadni -> kilyukadn", function() {deepEqual( Stem("kilyukadni"), "kilyukadn");});
test("kilyukadunk -> kilyukad", function() {deepEqual( Stem("kilyukadunk"), "kilyukad");});
test("kilyukasztott -> kilyukasztot", function() {deepEqual( Stem("kilyukasztott"), "kilyukasztot");});
test("kilyukasztva -> kilyukasztv", function() {deepEqual( Stem("kilyukasztva"), "kilyukasztv");});
test("kilábaljon -> kilábalj", function() {deepEqual( Stem("kilábaljon"), "kilábalj");});
test("kilábalni -> kilábaln", function() {deepEqual( Stem("kilábalni"), "kilábaln");});
test("kilábalásnak -> kilábalás", function() {deepEqual( Stem("kilábalásnak"), "kilábalás");});
test("kilábaló -> kilábaló", function() {deepEqual( Stem("kilábaló"), "kilábaló");});
test("kilátogattunk -> kilátogatt", function() {deepEqual( Stem("kilátogattunk"), "kilátogatt");});
test("kilátszott -> kilátszot", function() {deepEqual( Stem("kilátszott"), "kilátszot");});
test("kilátás -> kilátás", function() {deepEqual( Stem("kilátás"), "kilátás");});
test("kilátásaikat -> kilátás", function() {deepEqual( Stem("kilátásaikat"), "kilátás");});
test("kilátásaim -> kilátás", function() {deepEqual( Stem("kilátásaim"), "kilátás");});
test("kilátásait -> kilátás", function() {deepEqual( Stem("kilátásait"), "kilátás");});
test("kilátásaitól -> kilátás", function() {deepEqual( Stem("kilátásaitól"), "kilátás");});
test("kilátásba -> kilátás", function() {deepEqual( Stem("kilátásba"), "kilátás");});
test("kilátásban -> kilátás", function() {deepEqual( Stem("kilátásban"), "kilátás");});
test("kilátások -> kilátás", function() {deepEqual( Stem("kilátások"), "kilátás");});
test("kilátásokat -> kilátás", function() {deepEqual( Stem("kilátásokat"), "kilátás");});
test("kilátást -> kilátás", function() {deepEqual( Stem("kilátást"), "kilátás");});
test("kilátásákról -> kilátása", function() {deepEqual( Stem("kilátásákról"), "kilátása");});
test("kilátástalan -> kilátástal", function() {deepEqual( Stem("kilátástalan"), "kilátástal");});
test("kilátástalanságot -> kilátástalanság", function() {deepEqual( Stem("kilátástalanságot"), "kilátástalanság");});
test("kilátó -> kilátó", function() {deepEqual( Stem("kilátó"), "kilátó");});
test("kilátóba -> kilátó", function() {deepEqual( Stem("kilátóba"), "kilátó");});
test("kilátóból -> kilátó", function() {deepEqual( Stem("kilátóból"), "kilátó");});
test("kilátóhoz -> kilátó", function() {deepEqual( Stem("kilátóhoz"), "kilátó");});
test("kilátóig -> kilátó", function() {deepEqual( Stem("kilátóig"), "kilátó");});
test("kilátónál -> kilátó", function() {deepEqual( Stem("kilátónál"), "kilátó");});
test("kilátóra -> kilátó", function() {deepEqual( Stem("kilátóra"), "kilátó");});
test("kilátót -> kilátó", function() {deepEqual( Stem("kilátót"), "kilátó");});
test("kilátóhelynél -> kilátóhely", function() {deepEqual( Stem("kilátóhelynél"), "kilátóhely");});
test("kilélegzett -> kilélegzet", function() {deepEqual( Stem("kilélegzett"), "kilélegzet");});
test("kilépett -> kilépet", function() {deepEqual( Stem("kilépett"), "kilépet");});
test("kiléphessek -> kiléphess", function() {deepEqual( Stem("kiléphessek"), "kiléphess");});
test("kiléphet -> kiléph", function() {deepEqual( Stem("kiléphet"), "kiléph");});
test("kilép -> kilép", function() {deepEqual( Stem("kilép"), "kilép");});
test("kilépek -> kilép", function() {deepEqual( Stem("kilépek"), "kilép");});
test("kilépjünk -> kilépj", function() {deepEqual( Stem("kilépjünk"), "kilépj");});
test("kilépne -> kilépn", function() {deepEqual( Stem("kilépne"), "kilépn");});
test("kilépnem -> kilépn", function() {deepEqual( Stem("kilépnem"), "kilépn");});
test("kilépni -> kilépn", function() {deepEqual( Stem("kilépni"), "kilépn");});
test("kiléptek -> kilépt", function() {deepEqual( Stem("kiléptek"), "kilépt");});
test("kiléptem -> kilépt", function() {deepEqual( Stem("kiléptem"), "kilépt");});
test("kiléptünk -> kilépt", function() {deepEqual( Stem("kiléptünk"), "kilépt");});
test("kilépünk -> kilép", function() {deepEqual( Stem("kilépünk"), "kilép");});
test("kiléptető -> kiléptető", function() {deepEqual( Stem("kiléptető"), "kiléptető");});
test("kilépési -> kilépés", function() {deepEqual( Stem("kilépési"), "kilépés");});
test("kilépés -> kilépés", function() {deepEqual( Stem("kilépés"), "kilépés");});
test("kilépése -> kilépés", function() {deepEqual( Stem("kilépése"), "kilépés");});
test("kilépésekor -> kilépés", function() {deepEqual( Stem("kilépésekor"), "kilépés");});
test("kilépéskor -> kilépés", function() {deepEqual( Stem("kilépéskor"), "kilépés");});
test("kilépéssel -> kilépés", function() {deepEqual( Stem("kilépéssel"), "kilépés");});
test("kilépéstől -> kilépés", function() {deepEqual( Stem("kilépéstől"), "kilépés");});
test("kilépésének -> kilépés", function() {deepEqual( Stem("kilépésének"), "kilépés");});
test("kilépésével -> kilépés", function() {deepEqual( Stem("kilépésével"), "kilépés");});
test("kilépő -> kilépő", function() {deepEqual( Stem("kilépő"), "kilépő");});
test("kilétéről -> kilét", function() {deepEqual( Stem("kilétéről"), "kilét");});
test("kilétét -> kilét", function() {deepEqual( Stem("kilétét"), "kilét");});
test("kilétüket -> kilét", function() {deepEqual( Stem("kilétüket"), "kilét");});
test("kilódította -> kilódított", function() {deepEqual( Stem("kilódította"), "kilódított");});
test("kilógatott -> kilógatot", function() {deepEqual( Stem("kilógatott"), "kilógatot");});
test("kilógni -> kilógn", function() {deepEqual( Stem("kilógni"), "kilógn");});
test("kilóg -> kilóg", function() {deepEqual( Stem("kilóg"), "kilóg");});
test("kilógtunk -> kilógt", function() {deepEqual( Stem("kilógtunk"), "kilógt");});
test("kilógott -> kilógot", function() {deepEqual( Stem("kilógott"), "kilógot");});
test("kilónyi -> kilóny", function() {deepEqual( Stem("kilónyi"), "kilóny");});
test("kilós -> kilós", function() {deepEqual( Stem("kilós"), "kilós");});
test("kilót -> kiló", function() {deepEqual( Stem("kilót"), "kiló");});
test("kiló -> kiló", function() {deepEqual( Stem("kiló"), "kiló");});
test("kilóval -> kiló", function() {deepEqual( Stem("kilóval"), "kiló");});
test("kilökte -> kilökt", function() {deepEqual( Stem("kilökte"), "kilökt");});
test("kilöktek -> kilökt", function() {deepEqual( Stem("kilöktek"), "kilökt");});
test("kilökték -> kilökte", function() {deepEqual( Stem("kilökték"), "kilökte");});
test("kilökődési -> kilökődés", function() {deepEqual( Stem("kilökődési"), "kilökődés");});
test("kilökődést -> kilökődés", function() {deepEqual( Stem("kilökődést"), "kilökődés");});
test("kilökődés -> kilökődés", function() {deepEqual( Stem("kilökődés"), "kilökődés");});
test("kilökődésért -> kilökődés", function() {deepEqual( Stem("kilökődésért"), "kilökődés");});
test("kilöttyintett -> kilöttyintet", function() {deepEqual( Stem("kilöttyintett"), "kilöttyintet");});
test("kilövellt -> kilövell", function() {deepEqual( Stem("kilövellt"), "kilövell");});
test("kilövik -> kilöv", function() {deepEqual( Stem("kilövik"), "kilöv");});
test("kilövésre -> kilövés", function() {deepEqual( Stem("kilövésre"), "kilövés");});
test("kimagasló -> kimagasló", function() {deepEqual( Stem("kimagasló"), "kimagasló");});
test("kimagasodni -> kimagasodn", function() {deepEqual( Stem("kimagasodni"), "kimagasodn");});
test("kimagyarázom -> kimagyaráz", function() {deepEqual( Stem("kimagyarázom"), "kimagyaráz");});
test("kimaradhat -> kimaradh", function() {deepEqual( Stem("kimaradhat"), "kimaradh");});
test("kimaradjon -> kimaradj", function() {deepEqual( Stem("kimaradjon"), "kimaradj");});
test("kimaradnak -> kimar", function() {deepEqual( Stem("kimaradnak"), "kimar");});
test("kimarad -> kimar", function() {deepEqual( Stem("kimarad"), "kimar");});
test("kimaradni -> kimaradn", function() {deepEqual( Stem("kimaradni"), "kimaradn");});
test("kimaradsz -> kimaradsz", function() {deepEqual( Stem("kimaradsz"), "kimaradsz");});
test("kimaradtak -> kimaradt", function() {deepEqual( Stem("kimaradtak"), "kimaradt");});
test("kimaradtunk -> kimaradt", function() {deepEqual( Stem("kimaradtunk"), "kimaradt");});
test("kimaradt -> kimar", function() {deepEqual( Stem("kimaradt"), "kimar");});
test("kimaradás -> kimaradás", function() {deepEqual( Stem("kimaradás"), "kimaradás");});
test("kimaradását -> kimaradás", function() {deepEqual( Stem("kimaradását"), "kimaradás");});
test("kimaradók -> kimaradó", function() {deepEqual( Stem("kimaradók"), "kimaradó");});
test("kimehessünk -> kimehess", function() {deepEqual( Stem("kimehessünk"), "kimehess");});
test("kimehet -> kimeh", function() {deepEqual( Stem("kimehet"), "kimeh");});
test("kimehetek -> kimehet", function() {deepEqual( Stem("kimehetek"), "kimehet");});
test("kimehettünk -> kimehett", function() {deepEqual( Stem("kimehettünk"), "kimehett");});
test("kimenekíteni -> kimenekíten", function() {deepEqual( Stem("kimenekíteni"), "kimenekíten");});
test("kimenekítését -> kimenekítés", function() {deepEqual( Stem("kimenekítését"), "kimenekítés");});
test("kimenet -> kimen", function() {deepEqual( Stem("kimenet"), "kimen");});
test("kimenete -> kimenet", function() {deepEqual( Stem("kimenete"), "kimenet");});
test("kimeneteit -> kimenet", function() {deepEqual( Stem("kimeneteit"), "kimenet");});
test("kimenetek -> kimenet", function() {deepEqual( Stem("kimenetek"), "kimenet");});
test("kimeneteken -> kimenet", function() {deepEqual( Stem("kimeneteken"), "kimenet");});
test("kimenetet -> kimenet", function() {deepEqual( Stem("kimenetet"), "kimenet");});
test("kimenethez -> kimenet", function() {deepEqual( Stem("kimenethez"), "kimenet");});
test("kimenetre -> kimenet", function() {deepEqual( Stem("kimenetre"), "kimenet");});
test("kimenettel -> kimen", function() {deepEqual( Stem("kimenettel"), "kimen");});
test("kimenetéhez -> kimenet", function() {deepEqual( Stem("kimenetéhez"), "kimenet");});
test("kimenetel -> kimenetel", function() {deepEqual( Stem("kimenetel"), "kimenetel");});
test("kimenetelében -> kimenetel", function() {deepEqual( Stem("kimenetelében"), "kimenetel");});
test("kimenetelű -> kimenetelű", function() {deepEqual( Stem("kimenetelű"), "kimenetelű");});
test("kimeneti -> kimenet", function() {deepEqual( Stem("kimeneti"), "kimenet");});
test("kimenjünk -> kimenj", function() {deepEqual( Stem("kimenjünk"), "kimenj");});
test("kimennek -> kimen", function() {deepEqual( Stem("kimennek"), "kimen");});
test("kimenni -> kimenn", function() {deepEqual( Stem("kimenni"), "kimenn");});
test("kimennék -> kimenne", function() {deepEqual( Stem("kimennék"), "kimenne");});
test("kimennünk -> kimenn", function() {deepEqual( Stem("kimennünk"), "kimenn");});
test("kimentek -> kiment", function() {deepEqual( Stem("kimentek"), "kiment");});
test("kimegy -> kimegy", function() {deepEqual( Stem("kimegy"), "kimegy");});
test("kimegyek -> kimegy", function() {deepEqual( Stem("kimegyek"), "kimegy");});
test("kimegyünk -> kimegy", function() {deepEqual( Stem("kimegyünk"), "kimegy");});
test("kimentél -> kimentél", function() {deepEqual( Stem("kimentél"), "kimentél");});
test("kimentünk -> kiment", function() {deepEqual( Stem("kimentünk"), "kiment");});
test("kiment -> kimen", function() {deepEqual( Stem("kiment"), "kimen");});
test("kimentették -> kimentette", function() {deepEqual( Stem("kimentették"), "kimentette");});
test("kimenthető -> kimenthető", function() {deepEqual( Stem("kimenthető"), "kimenthető");});
test("kimentse -> kiments", function() {deepEqual( Stem("kimentse"), "kiments");});
test("kimentési -> kimentés", function() {deepEqual( Stem("kimentési"), "kimentés");});
test("kimentésnek -> kimentés", function() {deepEqual( Stem("kimentésnek"), "kimentés");});
test("kimentése -> kimentés", function() {deepEqual( Stem("kimentése"), "kimentés");});
test("kimentést -> kimentés", function() {deepEqual( Stem("kimentést"), "kimentés");});
test("kimentésére -> kimentés", function() {deepEqual( Stem("kimentésére"), "kimentés");});
test("kimenő-bejövő -> kimenő-bejövő", function() {deepEqual( Stem("kimenő-bejövő"), "kimenő-bejövő");});
test("kimenőm -> kimenő", function() {deepEqual( Stem("kimenőm"), "kimenő");});
test("kimenő -> kimenő", function() {deepEqual( Stem("kimenő"), "kimenő");});
test("kimenőnk -> kimenő", function() {deepEqual( Stem("kimenőnk"), "kimenő");});
test("kimenőt -> kimenő", function() {deepEqual( Stem("kimenőt"), "kimenő");});
test("kimenős -> kimenős", function() {deepEqual( Stem("kimenős"), "kimenős");});
test("kimeredt -> kimer", function() {deepEqual( Stem("kimeredt"), "kimer");});
test("kimerített -> kimerítet", function() {deepEqual( Stem("kimerített"), "kimerítet");});
test("kimeríthetetlen -> kimeríthetetl", function() {deepEqual( Stem("kimeríthetetlen"), "kimeríthetetl");});
test("kimeríthetetlennek -> kimeríthetetlen", function() {deepEqual( Stem("kimeríthetetlennek"), "kimeríthetetlen");});
test("kimerítik -> kimerít", function() {deepEqual( Stem("kimerítik"), "kimerít");});
test("kimeríteni -> kimeríten", function() {deepEqual( Stem("kimeríteni"), "kimeríten");});
test("kimerítő -> kimerítő", function() {deepEqual( Stem("kimerítő"), "kimerítő");});
test("kimerítően -> kimerítő", function() {deepEqual( Stem("kimerítően"), "kimerítő");});
test("kimerül -> kimer", function() {deepEqual( Stem("kimerül"), "kimer");});
test("kimerültek -> kimerült", function() {deepEqual( Stem("kimerültek"), "kimerült");});
test("kimerülten -> kimerült", function() {deepEqual( Stem("kimerülten"), "kimerült");});
test("kimerültnek -> kimerült", function() {deepEqual( Stem("kimerültnek"), "kimerült");});
test("kimerültünk -> kimerült", function() {deepEqual( Stem("kimerültünk"), "kimerült");});
test("kimerült -> kimerül", function() {deepEqual( Stem("kimerült"), "kimerül");});
test("kimerültség -> kimerültség", function() {deepEqual( Stem("kimerültség"), "kimerültség");});
test("kimerültségre -> kimerültség", function() {deepEqual( Stem("kimerültségre"), "kimerültség");});
test("kimerültségében -> kimerültség", function() {deepEqual( Stem("kimerültségében"), "kimerültség");});
test("kimerültségével -> kimerültség", function() {deepEqual( Stem("kimerültségével"), "kimerültség");});
test("kimerülve -> kimerülv", function() {deepEqual( Stem("kimerülve"), "kimerülv");});
test("kimerülési -> kimerülés", function() {deepEqual( Stem("kimerülési"), "kimerülés");});
test("kimerüléséről -> kimerülés", function() {deepEqual( Stem("kimerüléséről"), "kimerülés");});
test("kimerülése -> kimerülés", function() {deepEqual( Stem("kimerülése"), "kimerülés");});
test("kimerülését -> kimerülés", function() {deepEqual( Stem("kimerülését"), "kimerülés");});
test("kimond -> kimon", function() {deepEqual( Stem("kimond"), "kimon");});
test("kimondani -> kimondan", function() {deepEqual( Stem("kimondani"), "kimondan");});
test("kimondania -> kimondan", function() {deepEqual( Stem("kimondania"), "kimondan");});
test("kimondja -> kimond", function() {deepEqual( Stem("kimondja"), "kimond");});
test("kimondják -> kimondja", function() {deepEqual( Stem("kimondják"), "kimondja");});
test("kimondom -> kimond", function() {deepEqual( Stem("kimondom"), "kimond");});
test("kimondotta -> kimondott", function() {deepEqual( Stem("kimondotta"), "kimondott");});
test("kimondottan -> kimondott", function() {deepEqual( Stem("kimondottan"), "kimondott");});
test("kimondta -> kimondt", function() {deepEqual( Stem("kimondta"), "kimondt");});
test("kimondtam -> kimondt", function() {deepEqual( Stem("kimondtam"), "kimondt");});
test("kimondták -> kimondta", function() {deepEqual( Stem("kimondták"), "kimondta");});
test("kimondatlanul -> kimondatlan", function() {deepEqual( Stem("kimondatlanul"), "kimondatlan");});
test("kimondhatatlan -> kimondhatatl", function() {deepEqual( Stem("kimondhatatlan"), "kimondhatatl");});
test("kimondhatatlanul -> kimondhatatlan", function() {deepEqual( Stem("kimondhatatlanul"), "kimondhatatlan");});
test("kimondhatjuk -> kimondhat", function() {deepEqual( Stem("kimondhatjuk"), "kimondhat");});
test("kimondható -> kimondható", function() {deepEqual( Stem("kimondható"), "kimondható");});
test("kimondhatóvá -> kimondható", function() {deepEqual( Stem("kimondhatóvá"), "kimondható");});
test("kimondott -> kimondot", function() {deepEqual( Stem("kimondott"), "kimondot");});
test("kimondva -> kimondv", function() {deepEqual( Stem("kimondva"), "kimondv");});
test("kimondása -> kimondás", function() {deepEqual( Stem("kimondása"), "kimondás");});
test("kimondásra -> kimondás", function() {deepEqual( Stem("kimondásra"), "kimondás");});
test("kimondásán -> kimondás", function() {deepEqual( Stem("kimondásán"), "kimondás");});
test("kimondását -> kimondás", function() {deepEqual( Stem("kimondását"), "kimondás");});
test("kimondó -> kimondó", function() {deepEqual( Stem("kimondó"), "kimondó");});
test("kimosható -> kimosható", function() {deepEqual( Stem("kimosható"), "kimosható");});
test("kimostuk -> kimost", function() {deepEqual( Stem("kimostuk"), "kimost");});
test("kimosták -> kimosta", function() {deepEqual( Stem("kimosták"), "kimosta");});
test("kimozdulni -> kimozduln", function() {deepEqual( Stem("kimozdulni"), "kimozduln");});
test("kimozdulok -> kimozdul", function() {deepEqual( Stem("kimozdulok"), "kimozdul");});
test("kimozdulását -> kimozdulás", function() {deepEqual( Stem("kimozdulását"), "kimozdulás");});
test("kimunkálása -> kimunkálás", function() {deepEqual( Stem("kimunkálása"), "kimunkálás");});
test("kimutatható -> kimutatható", function() {deepEqual( Stem("kimutatható"), "kimutatható");});
test("kimutathatóan -> kimutatható", function() {deepEqual( Stem("kimutathatóan"), "kimutatható");});
test("kimutatja -> kimutat", function() {deepEqual( Stem("kimutatja"), "kimutat");});
test("kimutat -> kimut", function() {deepEqual( Stem("kimutat"), "kimut");});
test("kimutatni -> kimutatn", function() {deepEqual( Stem("kimutatni"), "kimutatn");});
test("kimutatta -> kimutatt", function() {deepEqual( Stem("kimutatta"), "kimutatt");});
test("kimutatták -> kimutatta", function() {deepEqual( Stem("kimutatták"), "kimutatta");});
test("kimutatott -> kimutatot", function() {deepEqual( Stem("kimutatott"), "kimutatot");});
test("kimutatás -> kimutatás", function() {deepEqual( Stem("kimutatás"), "kimutatás");});
test("kimutatása -> kimutatás", function() {deepEqual( Stem("kimutatása"), "kimutatás");});
test("kimutatásokat -> kimutatás", function() {deepEqual( Stem("kimutatásokat"), "kimutatás");});
test("kimutatásához -> kimutatás", function() {deepEqual( Stem("kimutatásához"), "kimutatás");});
test("kimutatását -> kimutatás", function() {deepEqual( Stem("kimutatását"), "kimutatás");});
test("kimutató -> kimutató", function() {deepEqual( Stem("kimutató"), "kimutató");});
test("kimászott -> kimászot", function() {deepEqual( Stem("kimászott"), "kimászot");});
test("kimásztunk -> kimászt", function() {deepEqual( Stem("kimásztunk"), "kimászt");});
test("kimászok -> kimász", function() {deepEqual( Stem("kimászok"), "kimász");});
test("kimért -> ki", function() {deepEqual( Stem("kimért"), "ki");});
test("kimérés -> kimérés", function() {deepEqual( Stem("kimérés"), "kimérés");});
test("kimódolt -> kimódol", function() {deepEqual( Stem("kimódolt"), "kimódol");});
test("kiművelődnek -> kiművelő", function() {deepEqual( Stem("kiművelődnek"), "kiművelő");});
test("kiművelődtek -> kiművelődt", function() {deepEqual( Stem("kiművelődtek"), "kiművelődt");});
test("kinagyítattunk -> kinagyítatt", function() {deepEqual( Stem("kinagyítattunk"), "kinagyítatt");});
test("kinagyíthatók -> kinagyítható", function() {deepEqual( Stem("kinagyíthatók"), "kinagyítható");});
test("kinagyítva -> kinagyítv", function() {deepEqual( Stem("kinagyítva"), "kinagyítv");});
test("kincs -> kincs", function() {deepEqual( Stem("kincs"), "kincs");});
test("kincset -> kincs", function() {deepEqual( Stem("kincset"), "kincs");});
test("kincséért -> kincs", function() {deepEqual( Stem("kincséért"), "kincs");});
test("kincstárba -> kincstár", function() {deepEqual( Stem("kincstárba"), "kincstár");});
test("kincstárban -> kincstár", function() {deepEqual( Stem("kincstárban"), "kincstár");});
test("kincstári -> kincstár", function() {deepEqual( Stem("kincstári"), "kincstár");});
test("kincstárnok -> kincstárn", function() {deepEqual( Stem("kincstárnok"), "kincstárn");});
test("kincstárnokkal -> kincstárn", function() {deepEqual( Stem("kincstárnokkal"), "kincstárn");});
test("kindertojások -> kindertojás", function() {deepEqual( Stem("kindertojások"), "kindertojás");});
test("kinevetett -> kinevetet", function() {deepEqual( Stem("kinevetett"), "kinevetet");});
test("kinevetik -> kinevet", function() {deepEqual( Stem("kinevetik"), "kinevet");});
test("kinevet -> kinev", function() {deepEqual( Stem("kinevet"), "kinev");});
test("kinevette -> kinevett", function() {deepEqual( Stem("kinevette"), "kinevett");});
test("kinevettem -> kinevett", function() {deepEqual( Stem("kinevettem"), "kinevett");});
test("kinevezett -> kinevezet", function() {deepEqual( Stem("kinevezett"), "kinevezet");});
test("kinevezhető -> kinevezhető", function() {deepEqual( Stem("kinevezhető"), "kinevezhető");});
test("kinevezni -> kinevezn", function() {deepEqual( Stem("kinevezni"), "kinevezn");});
test("kineveztek -> kinevezt", function() {deepEqual( Stem("kineveztek"), "kinevezt");});
test("kinevezték -> kinevezte", function() {deepEqual( Stem("kinevezték"), "kinevezte");});
test("kineveztünk -> kinevezt", function() {deepEqual( Stem("kineveztünk"), "kinevezt");});
test("kinevezési -> kinevezés", function() {deepEqual( Stem("kinevezési"), "kinevezés");});
test("kinevezés -> kinevezés", function() {deepEqual( Stem("kinevezés"), "kinevezés");});
test("kinevezése -> kinevezés", function() {deepEqual( Stem("kinevezése"), "kinevezés");});
test("kinevezésének -> kinevezés", function() {deepEqual( Stem("kinevezésének"), "kinevezés");});
test("kinevezését -> kinevezés", function() {deepEqual( Stem("kinevezését"), "kinevezés");});
test("kinevezésüket -> kinevezés", function() {deepEqual( Stem("kinevezésüket"), "kinevezés");});
test("kinnlevőségeire -> kinnlevőség", function() {deepEqual( Stem("kinnlevőségeire"), "kinnlevőség");});
test("kinnlevőségét -> kinnlevőség", function() {deepEqual( Stem("kinnlevőségét"), "kinnlevőség");});
test("kinnlévősége -> kinnlévőség", function() {deepEqual( Stem("kinnlévősége"), "kinnlévőség");});
test("kinnlévőségről -> kinnlévőség", function() {deepEqual( Stem("kinnlévőségről"), "kinnlévőség");});
test("kintlevőség -> kintlevőség", function() {deepEqual( Stem("kintlevőség"), "kintlevőség");});
test("kintlevőségei -> kintlevőség", function() {deepEqual( Stem("kintlevőségei"), "kintlevőség");});
test("kint -> kin", function() {deepEqual( Stem("kint"), "kin");});
test("kintről -> kint", function() {deepEqual( Stem("kintről"), "kint");});
test("kinn -> kin", function() {deepEqual( Stem("kinn"), "kin");});
test("kinti -> kint", function() {deepEqual( Stem("kinti"), "kint");});
test("kintlét -> kintl", function() {deepEqual( Stem("kintlét"), "kintl");});
test("kinullázásból -> kinullázás", function() {deepEqual( Stem("kinullázásból"), "kinullázás");});
test("kinyerhető -> kinyerhető", function() {deepEqual( Stem("kinyerhető"), "kinyerhető");});
test("kinyerni -> kinyern", function() {deepEqual( Stem("kinyerni"), "kinyern");});
test("kinyert -> kinyer", function() {deepEqual( Stem("kinyert"), "kinyer");});
test("kinyerését -> kinyerés", function() {deepEqual( Stem("kinyerését"), "kinyerés");});
test("kinyilatkoztatott -> kinyilatkoztatot", function() {deepEqual( Stem("kinyilatkoztatott"), "kinyilatkoztatot");});
test("kinyilatkoztatja -> kinyilatkoztat", function() {deepEqual( Stem("kinyilatkoztatja"), "kinyilatkoztat");});
test("kinyilatkoztatta -> kinyilatkoztatt", function() {deepEqual( Stem("kinyilatkoztatta"), "kinyilatkoztatt");});
test("kinyilatkoztatás -> kinyilatkoztatás", function() {deepEqual( Stem("kinyilatkoztatás"), "kinyilatkoztatás");});
test("kinyilatkoztatásnak -> kinyilatkoztatás", function() {deepEqual( Stem("kinyilatkoztatásnak"), "kinyilatkoztatás");});
test("kinyilatkoztatásra -> kinyilatkoztatás", function() {deepEqual( Stem("kinyilatkoztatásra"), "kinyilatkoztatás");});
test("kinyilatkoztatást -> kinyilatkoztatás", function() {deepEqual( Stem("kinyilatkoztatást"), "kinyilatkoztatás");});
test("kinyilatkoztatásának -> kinyilatkoztatás", function() {deepEqual( Stem("kinyilatkoztatásának"), "kinyilatkoztatás");});
test("kinyilvánított -> kinyilvánítot", function() {deepEqual( Stem("kinyilvánított"), "kinyilvánítot");});
test("kinyilvánította -> kinyilvánított", function() {deepEqual( Stem("kinyilvánította"), "kinyilvánított");});
test("kinyilvánítják -> kinyilvánítja", function() {deepEqual( Stem("kinyilvánítják"), "kinyilvánítja");});
test("kinyilvánítása -> kinyilvánítás", function() {deepEqual( Stem("kinyilvánítása"), "kinyilvánítás");});
test("kinyilvánításához -> kinyilvánítás", function() {deepEqual( Stem("kinyilvánításához"), "kinyilvánítás");});
test("kinyithatom -> kinyithat", function() {deepEqual( Stem("kinyithatom"), "kinyithat");});
test("kinyithatók -> kinyitható", function() {deepEqual( Stem("kinyithatók"), "kinyitható");});
test("kinyitja -> kinyit", function() {deepEqual( Stem("kinyitja"), "kinyit");});
test("kinyitni -> kinyitn", function() {deepEqual( Stem("kinyitni"), "kinyitn");});
test("kinyitnia -> kinyitn", function() {deepEqual( Stem("kinyitnia"), "kinyitn");});
test("kinyitná -> kinyitna", function() {deepEqual( Stem("kinyitná"), "kinyitna");});
test("kinyitnánk -> kinyitna", function() {deepEqual( Stem("kinyitnánk"), "kinyitna");});
test("kinyitom -> kinyit", function() {deepEqual( Stem("kinyitom"), "kinyit");});
test("kinyitotta -> kinyitott", function() {deepEqual( Stem("kinyitotta"), "kinyitott");});
test("kinyitottam -> kinyitott", function() {deepEqual( Stem("kinyitottam"), "kinyitott");});
test("kinyitották -> kinyitotta", function() {deepEqual( Stem("kinyitották"), "kinyitotta");});
test("kinyitott -> kinyitot", function() {deepEqual( Stem("kinyitott"), "kinyitot");});
test("kinyitva -> kinyitv", function() {deepEqual( Stem("kinyitva"), "kinyitv");});
test("kinyitása -> kinyitás", function() {deepEqual( Stem("kinyitása"), "kinyitás");});
test("kinyitásakor -> kinyitás", function() {deepEqual( Stem("kinyitásakor"), "kinyitás");});
test("kinyomozzon -> kinyomozz", function() {deepEqual( Stem("kinyomozzon"), "kinyomozz");});
test("kinyomtatható -> kinyomtatható", function() {deepEqual( Stem("kinyomtatható"), "kinyomtatható");});
test("kinyomtatni -> kinyomtatn", function() {deepEqual( Stem("kinyomtatni"), "kinyomtatn");});
test("kinyomtatta -> kinyomtatt", function() {deepEqual( Stem("kinyomtatta"), "kinyomtatt");});
test("kinyomtatott -> kinyomtatot", function() {deepEqual( Stem("kinyomtatott"), "kinyomtatot");});
test("kinyomtatási -> kinyomtatás", function() {deepEqual( Stem("kinyomtatási"), "kinyomtatás");});
test("kinyomtatás -> kinyomtatás", function() {deepEqual( Stem("kinyomtatás"), "kinyomtatás");});
test("kinyomtatása -> kinyomtatás", function() {deepEqual( Stem("kinyomtatása"), "kinyomtatás");});
test("kinyomtatásához -> kinyomtatás", function() {deepEqual( Stem("kinyomtatásához"), "kinyomtatás");});
test("kinyomtatásának -> kinyomtatás", function() {deepEqual( Stem("kinyomtatásának"), "kinyomtatás");});
test("kinyílik -> kinyíl", function() {deepEqual( Stem("kinyílik"), "kinyíl");});
test("kinyílni -> kinyíln", function() {deepEqual( Stem("kinyílni"), "kinyíln");});
test("kinyílt -> kinyíl", function() {deepEqual( Stem("kinyílt"), "kinyíl");});
test("kinyíló -> kinyíló", function() {deepEqual( Stem("kinyíló"), "kinyíló");});
test("kinyújtani -> kinyújtan", function() {deepEqual( Stem("kinyújtani"), "kinyújtan");});
test("kinyújtania -> kinyújtan", function() {deepEqual( Stem("kinyújtania"), "kinyújtan");});
test("kinyújtanom -> kinyújtan", function() {deepEqual( Stem("kinyújtanom"), "kinyújtan");});
test("kinyújtja -> kinyújt", function() {deepEqual( Stem("kinyújtja"), "kinyújt");});
test("kinyújtottam -> kinyújtott", function() {deepEqual( Stem("kinyújtottam"), "kinyújtott");});
test("kinyújtott -> kinyújtot", function() {deepEqual( Stem("kinyújtott"), "kinyújtot");});
test("kinyújtva -> kinyújtv", function() {deepEqual( Stem("kinyújtva"), "kinyújtv");});
test("kinyújtózott -> kinyújtózot", function() {deepEqual( Stem("kinyújtózott"), "kinyújtózot");});
test("kinyúlik -> kinyúl", function() {deepEqual( Stem("kinyúlik"), "kinyúl");});
test("kinyúlt -> kinyúl", function() {deepEqual( Stem("kinyúlt"), "kinyúl");});
test("kinyúló -> kinyúló", function() {deepEqual( Stem("kinyúló"), "kinyúló");});
test("kinél -> ki", function() {deepEqual( Stem("kinél"), "ki");});
test("kiket -> ki", function() {deepEqual( Stem("kiket"), "ki");});
test("kik -> ki", function() {deepEqual( Stem("kik"), "ki");});
test("kihez -> ki", function() {deepEqual( Stem("kihez"), "ki");});
test("kiben -> ki", function() {deepEqual( Stem("kiben"), "ki");});
test("ki -> ki", function() {deepEqual( Stem("ki"), "ki");});
test("kikhez -> ki", function() {deepEqual( Stem("kikhez"), "ki");});
test("kikkel -> ki", function() {deepEqual( Stem("kikkel"), "ki");});
test("kikkel -> ki", function() {deepEqual( Stem("kikkel"), "ki");});
test("kiknek -> ki", function() {deepEqual( Stem("kiknek"), "ki");});
test("kikről -> ki", function() {deepEqual( Stem("kikről"), "ki");});
test("kire -> ki", function() {deepEqual( Stem("kire"), "ki");});
test("kin -> ki", function() {deepEqual( Stem("kin"), "ki");});
test("kinek -> ki", function() {deepEqual( Stem("kinek"), "ki");});
test("kit -> ki", function() {deepEqual( Stem("kit"), "ki");});
test("kitől -> ki", function() {deepEqual( Stem("kitől"), "ki");});
test("kivel -> ki", function() {deepEqual( Stem("kivel"), "ki");});
test("kié -> ki", function() {deepEqual( Stem("kié"), "ki");});
test("kinésztem -> kinészt", function() {deepEqual( Stem("kinésztem"), "kinészt");});
test("kinézetemről -> kinézet", function() {deepEqual( Stem("kinézetemről"), "kinézet");});
test("kinézett -> kinézet", function() {deepEqual( Stem("kinézett"), "kinézet");});
test("kinézik -> kinéz", function() {deepEqual( Stem("kinézik"), "kinéz");});
test("kinéz -> kinéz", function() {deepEqual( Stem("kinéz"), "kinéz");});
test("kinéznek -> kinéz", function() {deepEqual( Stem("kinéznek"), "kinéz");});
test("kinézni -> kinézn", function() {deepEqual( Stem("kinézni"), "kinézn");});
test("kinéztek -> kinézt", function() {deepEqual( Stem("kinéztek"), "kinézt");});
test("kinéztem -> kinézt", function() {deepEqual( Stem("kinéztem"), "kinézt");});
test("kinéztünk -> kinézt", function() {deepEqual( Stem("kinéztünk"), "kinézt");});
test("kinézünk -> kinéz", function() {deepEqual( Stem("kinézünk"), "kinéz");});
test("kinőtt -> kinőt", function() {deepEqual( Stem("kinőtt"), "kinőt");});
test("kinőttem -> kinőtt", function() {deepEqual( Stem("kinőttem"), "kinőtt");});
test("kinőve -> kinőv", function() {deepEqual( Stem("kinőve"), "kinőv");});
test("kinöveszti -> kinöveszt", function() {deepEqual( Stem("kinöveszti"), "kinöveszt");});
test("kioktathattam -> kioktathatt", function() {deepEqual( Stem("kioktathattam"), "kioktathatt");});
test("kioldotta -> kioldott", function() {deepEqual( Stem("kioldotta"), "kioldott");});
test("kioldódtam -> kioldódt", function() {deepEqual( Stem("kioldódtam"), "kioldódt");});
test("kiolthatjuk -> kiolthat", function() {deepEqual( Stem("kiolthatjuk"), "kiolthat");});
test("kioltjuk -> kiolt", function() {deepEqual( Stem("kioltjuk"), "kiolt");});
test("kioltják -> kioltja", function() {deepEqual( Stem("kioltják"), "kioltja");});
test("kioltottuk -> kioltott", function() {deepEqual( Stem("kioltottuk"), "kioltott");});
test("kioltották -> kioltotta", function() {deepEqual( Stem("kioltották"), "kioltotta");});
test("kiolvasható -> kiolvasható", function() {deepEqual( Stem("kiolvasható"), "kiolvasható");});
test("kiolvashatóan -> kiolvasható", function() {deepEqual( Stem("kiolvashatóan"), "kiolvasható");});
test("kiolvasni -> kiolvasn", function() {deepEqual( Stem("kiolvasni"), "kiolvasn");});
test("kiolvastam -> kiolvast", function() {deepEqual( Stem("kiolvastam"), "kiolvast");});
test("kiosont -> kioson", function() {deepEqual( Stem("kiosont"), "kioson");});
test("kioszk -> kiosz", function() {deepEqual( Stem("kioszk"), "kiosz");});
test("kiosztható -> kiosztható", function() {deepEqual( Stem("kiosztható"), "kiosztható");});
test("kiosztott -> kiosztot", function() {deepEqual( Stem("kiosztott"), "kiosztot");});
test("kiosztotta -> kiosztott", function() {deepEqual( Stem("kiosztotta"), "kiosztott");});
test("kiosztották -> kiosztotta", function() {deepEqual( Stem("kiosztották"), "kiosztotta");});
test("kiosztani -> kiosztan", function() {deepEqual( Stem("kiosztani"), "kiosztan");});
test("kiosztása -> kiosztás", function() {deepEqual( Stem("kiosztása"), "kiosztás");});
test("kiosztásra -> kiosztás", function() {deepEqual( Stem("kiosztásra"), "kiosztás");});
test("kiosztásának -> kiosztás", function() {deepEqual( Stem("kiosztásának"), "kiosztás");});
test("kiosztására -> kiosztás", function() {deepEqual( Stem("kiosztására"), "kiosztás");});
test("kiosztását -> kiosztás", function() {deepEqual( Stem("kiosztását"), "kiosztás");});
test("kiosztásáért -> kiosztás", function() {deepEqual( Stem("kiosztásáért"), "kiosztás");});
test("kiosztású -> kiosztású", function() {deepEqual( Stem("kiosztású"), "kiosztású");});
test("kipakolom -> kipakol", function() {deepEqual( Stem("kipakolom"), "kipakol");});
test("kipakolt -> kipakol", function() {deepEqual( Stem("kipakolt"), "kipakol");});
test("kipakoltak -> kipakolt", function() {deepEqual( Stem("kipakoltak"), "kipakolt");});
test("kipakoltam -> kipakolt", function() {deepEqual( Stem("kipakoltam"), "kipakolt");});
test("kipakoltuk -> kipakolt", function() {deepEqual( Stem("kipakoltuk"), "kipakolt");});
test("kipakolással -> kipakolás", function() {deepEqual( Stem("kipakolással"), "kipakolás");});
test("kipakolódtunk -> kipakolódt", function() {deepEqual( Stem("kipakolódtunk"), "kipakolódt");});
test("kiparancsolta -> kiparancsolt", function() {deepEqual( Stem("kiparancsolta"), "kiparancsolt");});
test("kipattant -> kipattan", function() {deepEqual( Stem("kipattant"), "kipattan");});
test("kipattanása -> kipattanás", function() {deepEqual( Stem("kipattanása"), "kipattanás");});
test("kipattanásakor -> kipattanás", function() {deepEqual( Stem("kipattanásakor"), "kipattanás");});
test("kipattanót -> kipattanó", function() {deepEqual( Stem("kipattanót"), "kipattanó");});
test("kipengettem -> kipengett", function() {deepEqual( Stem("kipengettem"), "kipengett");});
test("kipihenhetem -> kipihenhet", function() {deepEqual( Stem("kipihenhetem"), "kipihenhet");});
test("kipihenhetném -> kipihenhetne", function() {deepEqual( Stem("kipihenhetném"), "kipihenhetne");});
test("kipihenhettük -> kipihenhett", function() {deepEqual( Stem("kipihenhettük"), "kipihenhett");});
test("kipihenjem -> kipihenj", function() {deepEqual( Stem("kipihenjem"), "kipihenj");});
test("kipihenem -> kipihen", function() {deepEqual( Stem("kipihenem"), "kipihen");});
test("kipihenjük -> kipihen", function() {deepEqual( Stem("kipihenjük"), "kipihen");});
test("kipihenni -> kipihenn", function() {deepEqual( Stem("kipihenni"), "kipihenn");});
test("kipihentek -> kipihent", function() {deepEqual( Stem("kipihentek"), "kipihent");});
test("kipihentem -> kipihent", function() {deepEqual( Stem("kipihentem"), "kipihent");});
test("kipihenten -> kipihent", function() {deepEqual( Stem("kipihenten"), "kipihent");});
test("kipihentnek -> kipihent", function() {deepEqual( Stem("kipihentnek"), "kipihent");});
test("kipihentük -> kipihent", function() {deepEqual( Stem("kipihentük"), "kipihent");});
test("kipihent -> kipihen", function() {deepEqual( Stem("kipihent"), "kipihen");});
test("kipihenve -> kipihenv", function() {deepEqual( Stem("kipihenve"), "kipihenv");});
test("kipirult -> kipirul", function() {deepEqual( Stem("kipirult"), "kipirul");});
test("kipirultan -> kipirult", function() {deepEqual( Stem("kipirultan"), "kipirult");});
test("kipislogta -> kipislogt", function() {deepEqual( Stem("kipislogta"), "kipislogt");});
test("kipontozódott -> kipontozódot", function() {deepEqual( Stem("kipontozódott"), "kipontozódot");});
test("kipostázni -> kipostázn", function() {deepEqual( Stem("kipostázni"), "kipostázn");});
test("kipottyant -> kipottyan", function() {deepEqual( Stem("kipottyant"), "kipottyan");});
test("kipróbálhat -> kipróbálh", function() {deepEqual( Stem("kipróbálhat"), "kipróbálh");});
test("kipróbálhatja -> kipróbálhat", function() {deepEqual( Stem("kipróbálhatja"), "kipróbálhat");});
test("kipróbálhatják -> kipróbálhatja", function() {deepEqual( Stem("kipróbálhatják"), "kipróbálhatja");});
test("kipróbálhatnánk -> kipróbálhatna", function() {deepEqual( Stem("kipróbálhatnánk"), "kipróbálhatna");});
test("kipróbálhatott -> kipróbálhatot", function() {deepEqual( Stem("kipróbálhatott"), "kipróbálhatot");});
test("kipróbálhatták -> kipróbálhatta", function() {deepEqual( Stem("kipróbálhatták"), "kipróbálhatta");});
test("kipróbálja -> kipróbál", function() {deepEqual( Stem("kipróbálja"), "kipróbál");});
test("kipróbáljak -> kipróbálj", function() {deepEqual( Stem("kipróbáljak"), "kipróbálj");});
test("kipróbáljuk -> kipróbál", function() {deepEqual( Stem("kipróbáljuk"), "kipróbál");});
test("kipróbáljunk -> kipróbálj", function() {deepEqual( Stem("kipróbáljunk"), "kipróbálj");});
test("kipróbálni -> kipróbáln", function() {deepEqual( Stem("kipróbálni"), "kipróbáln");});
test("kipróbálnám -> kipróbálna", function() {deepEqual( Stem("kipróbálnám"), "kipróbálna");});
test("kipróbálta -> kipróbált", function() {deepEqual( Stem("kipróbálta"), "kipróbált");});
test("kipróbáltam -> kipróbált", function() {deepEqual( Stem("kipróbáltam"), "kipróbált");});
test("kipróbáltuk -> kipróbált", function() {deepEqual( Stem("kipróbáltuk"), "kipróbált");});
test("kipróbáltunk -> kipróbált", function() {deepEqual( Stem("kipróbáltunk"), "kipróbált");});
test("kipróbálták -> kipróbálta", function() {deepEqual( Stem("kipróbálták"), "kipróbálta");});
test("kipróbált -> kipróbál", function() {deepEqual( Stem("kipróbált"), "kipróbál");});
test("kipróbálása -> kipróbálás", function() {deepEqual( Stem("kipróbálása"), "kipróbálás");});
test("kipróbáláskor -> kipróbálás", function() {deepEqual( Stem("kipróbáláskor"), "kipróbálás");});
test("kipróbálásához -> kipróbálás", function() {deepEqual( Stem("kipróbálásához"), "kipróbálás");});
test("kipróbálásának -> kipróbálás", function() {deepEqual( Stem("kipróbálásának"), "kipróbálás");});
test("kipróbálására -> kipróbálás", function() {deepEqual( Stem("kipróbálására"), "kipróbálás");});
test("kipufogócsövet -> kipufogócsöv", function() {deepEqual( Stem("kipufogócsövet"), "kipufogócsöv");});
test("kipufogógáz-kibocsátást -> kipufogógáz-kibocsátás", function() {deepEqual( Stem("kipufogógáz-kibocsátást"), "kipufogógáz-kibocsátás");});
test("kipufogógáznak -> kipufogógáz", function() {deepEqual( Stem("kipufogógáznak"), "kipufogógáz");});
test("kipufogógáz -> kipufogógáz", function() {deepEqual( Stem("kipufogógáz"), "kipufogógáz");});
test("kipufogója -> kipufogó", function() {deepEqual( Stem("kipufogója"), "kipufogó");});
test("kipufogókatalizátorral -> kipufogókatalizátor", function() {deepEqual( Stem("kipufogókatalizátorral"), "kipufogókatalizátor");});
test("kipuhatolom -> kipuhatol", function() {deepEqual( Stem("kipuhatolom"), "kipuhatol");});
test("kipusztul -> kipuszt", function() {deepEqual( Stem("kipusztul"), "kipuszt");});
test("kipusztult -> kipusztul", function() {deepEqual( Stem("kipusztult"), "kipusztul");});
test("kipusztított -> kipusztítot", function() {deepEqual( Stem("kipusztított"), "kipusztítot");});
test("kipusztítsák -> kipusztítsa", function() {deepEqual( Stem("kipusztítsák"), "kipusztítsa");});
test("kipárolgása -> kipárolgás", function() {deepEqual( Stem("kipárolgása"), "kipárolgás");});
test("kipótolják -> kipótolja", function() {deepEqual( Stem("kipótolják"), "kipótolja");});
test("kipörgése -> kipörgés", function() {deepEqual( Stem("kipörgése"), "kipörgés");});
test("kipörgésgátló -> kipörgésgátló", function() {deepEqual( Stem("kipörgésgátló"), "kipörgésgátló");});
test("kipúposodott -> kipúposodot", function() {deepEqual( Stem("kipúposodott"), "kipúposodot");});
test("kirabolják -> kirabolja", function() {deepEqual( Stem("kirabolják"), "kirabolja");});
test("kirabolnak -> kirabol", function() {deepEqual( Stem("kirabolnak"), "kirabol");});
test("kirabolta -> kirabolt", function() {deepEqual( Stem("kirabolta"), "kirabolt");});
test("kirabolták -> kirabolta", function() {deepEqual( Stem("kirabolták"), "kirabolta");});
test("kirabolt -> kirabol", function() {deepEqual( Stem("kirabolt"), "kirabol");});
test("kiragadja -> kiragad", function() {deepEqual( Stem("kiragadja"), "kiragad");});
test("kiragadják -> kiragadja", function() {deepEqual( Stem("kiragadják"), "kiragadja");});
test("kiragadni -> kiragadn", function() {deepEqual( Stem("kiragadni"), "kiragadn");});
test("kiragasztott -> kiragasztot", function() {deepEqual( Stem("kiragasztott"), "kiragasztot");});
test("kirajzolódni -> kirajzolódn", function() {deepEqual( Stem("kirajzolódni"), "kirajzolódn");});
test("kirajzolódtak -> kirajzolódt", function() {deepEqual( Stem("kirajzolódtak"), "kirajzolódt");});
test("kirajzolódott -> kirajzolódot", function() {deepEqual( Stem("kirajzolódott"), "kirajzolódot");});
test("kirajzolódó -> kirajzolódó", function() {deepEqual( Stem("kirajzolódó"), "kirajzolódó");});
test("kirakatablakban -> kirakatabl", function() {deepEqual( Stem("kirakatablakban"), "kirakatabl");});
test("kirakatában -> kirakat", function() {deepEqual( Stem("kirakatában"), "kirakat");});
test("kirakatán -> kirakat", function() {deepEqual( Stem("kirakatán"), "kirakat");});
test("kirakatban -> kirakat", function() {deepEqual( Stem("kirakatban"), "kirakat");});
test("kirakat -> kir", function() {deepEqual( Stem("kirakat"), "kir");});
test("kirakatból -> kirakat", function() {deepEqual( Stem("kirakatból"), "kirakat");});
test("kirakatokat -> kirakat", function() {deepEqual( Stem("kirakatokat"), "kirakat");});
test("kirakatokban -> kirakat", function() {deepEqual( Stem("kirakatokban"), "kirakat");});
test("kirakaton -> kirakat", function() {deepEqual( Stem("kirakaton"), "kirakat");});
test("kirakatot -> kirakat", function() {deepEqual( Stem("kirakatot"), "kirakat");});
test("kirakatpolitika -> kirakatpolit", function() {deepEqual( Stem("kirakatpolitika"), "kirakatpolit");});
test("kirakatrendezés -> kirakatrendezés", function() {deepEqual( Stem("kirakatrendezés"), "kirakatrendezés");});
test("kirakhatják -> kirakhatja", function() {deepEqual( Stem("kirakhatják"), "kirakhatja");});
test("kirakodhasson -> kirakodhass", function() {deepEqual( Stem("kirakodhasson"), "kirakodhass");});
test("kirakodás -> kirakodás", function() {deepEqual( Stem("kirakodás"), "kirakodás");});
test("kirakodást -> kirakodás", function() {deepEqual( Stem("kirakodást"), "kirakodás");});
test("kirakodóvásár -> kirakodóvásár", function() {deepEqual( Stem("kirakodóvásár"), "kirakodóvásár");});
test("kirakodóvásárra -> kirakodóvásár", function() {deepEqual( Stem("kirakodóvásárra"), "kirakodóvásár");});
test("kirakott -> kirakot", function() {deepEqual( Stem("kirakott"), "kirakot");});
test("kirakta -> kirakt", function() {deepEqual( Stem("kirakta"), "kirakt");});
test("kiraktam -> kirakt", function() {deepEqual( Stem("kiraktam"), "kirakt");});
test("kiraktuk -> kirakt", function() {deepEqual( Stem("kiraktuk"), "kirakt");});
test("kirakva -> kirakv", function() {deepEqual( Stem("kirakva"), "kirakv");});
test("kirekesztett -> kirekesztet", function() {deepEqual( Stem("kirekesztett"), "kirekesztet");});
test("kirekesztik -> kirekeszt", function() {deepEqual( Stem("kirekesztik"), "kirekeszt");});
test("kirekesztését -> kirekesztés", function() {deepEqual( Stem("kirekesztését"), "kirekesztés");});
test("kirendelt -> kirendel", function() {deepEqual( Stem("kirendelt"), "kirendel");});
test("kirendeltség -> kirendeltség", function() {deepEqual( Stem("kirendeltség"), "kirendeltség");});
test("kirendeltségeihez -> kirendeltség", function() {deepEqual( Stem("kirendeltségeihez"), "kirendeltség");});
test("kirendeltségeinél -> kirendeltség", function() {deepEqual( Stem("kirendeltségeinél"), "kirendeltség");});
test("kirendelése -> kirendelés", function() {deepEqual( Stem("kirendelése"), "kirendelés");});
test("kirepülve -> kirepülv", function() {deepEqual( Stem("kirepülve"), "kirepülv");});
test("kirobbanhat -> kirobbanh", function() {deepEqual( Stem("kirobbanhat"), "kirobbanh");});
test("kirobbant -> kirobban", function() {deepEqual( Stem("kirobbant"), "kirobban");});
test("kirobbantásával -> kirobbantás", function() {deepEqual( Stem("kirobbantásával"), "kirobbantás");});
test("kirobbantó -> kirobbantó", function() {deepEqual( Stem("kirobbantó"), "kirobbantó");});
test("kirobbanása -> kirobbanás", function() {deepEqual( Stem("kirobbanása"), "kirobbanás");});
test("kirobbanásáig -> kirobbanás", function() {deepEqual( Stem("kirobbanásáig"), "kirobbanás");});
test("kirobbanásáért -> kirobbanás", function() {deepEqual( Stem("kirobbanásáért"), "kirobbanás");});
test("kirohanjanak -> kirohan", function() {deepEqual( Stem("kirohanjanak"), "kirohan");});
test("kirohannék -> kirohanne", function() {deepEqual( Stem("kirohannék"), "kirohanne");});
test("kirohantunk -> kirohant", function() {deepEqual( Stem("kirohantunk"), "kirohant");});
test("kirohanásokra -> kirohanás", function() {deepEqual( Stem("kirohanásokra"), "kirohanás");});
test("kiruccanás -> kiruccanás", function() {deepEqual( Stem("kiruccanás"), "kiruccanás");});
test("kiruccanásom -> kiruccanás", function() {deepEqual( Stem("kiruccanásom"), "kiruccanás");});
test("kiruccanást -> kiruccanás", function() {deepEqual( Stem("kiruccanást"), "kiruccanás");});
test("kirukkol -> kirukkol", function() {deepEqual( Stem("kirukkol"), "kirukkol");});
test("kirurgia -> kirurg", function() {deepEqual( Stem("kirurgia"), "kirurg");});
test("kirájal -> kirájal", function() {deepEqual( Stem("kirájal"), "kirájal");});
test("kiráj -> kiráj", function() {deepEqual( Stem("kiráj"), "kiráj");});
test("kirájok -> kiráj", function() {deepEqual( Stem("kirájok"), "kiráj");});
test("kirájné -> kirájn", function() {deepEqual( Stem("kirájné"), "kirájn");});
test("királlyal -> király", function() {deepEqual( Stem("királlyal"), "király");});
test("királnő -> királnő", function() {deepEqual( Stem("királnő"), "királnő");});
test("királyanya -> királyany", function() {deepEqual( Stem("királyanya"), "királyany");});
test("királyfi -> királyf", function() {deepEqual( Stem("királyfi"), "királyf");});
test("királyfihoz -> királyf", function() {deepEqual( Stem("királyfihoz"), "királyf");});
test("királyfinak -> királyf", function() {deepEqual( Stem("királyfinak"), "királyf");});
test("királyi -> király", function() {deepEqual( Stem("királyi"), "király");});
test("királyian -> király", function() {deepEqual( Stem("királyian"), "király");});
test("királykisasszonyt -> királykisasszony", function() {deepEqual( Stem("királykisasszonyt"), "királykisasszony");});
test("királykék -> királyke", function() {deepEqual( Stem("királykék"), "királyke");});
test("királynak -> király", function() {deepEqual( Stem("királynak"), "király");});
test("királynál -> király", function() {deepEqual( Stem("királynál"), "király");});
test("királyok -> király", function() {deepEqual( Stem("királyok"), "király");});
test("királyoknak -> király", function() {deepEqual( Stem("királyoknak"), "király");});
test("királyoknál -> király", function() {deepEqual( Stem("királyoknál"), "király");});
test("király -> király", function() {deepEqual( Stem("király"), "király");});
test("királya -> király", function() {deepEqual( Stem("királya"), "király");});
test("királyhoz -> király", function() {deepEqual( Stem("királyhoz"), "király");});
test("királyt -> király", function() {deepEqual( Stem("királyt"), "király");});
test("királytól -> király", function() {deepEqual( Stem("királytól"), "király");});
test("királyát -> király", function() {deepEqual( Stem("királyát"), "király");});
test("királyunk -> király", function() {deepEqual( Stem("királyunk"), "király");});
test("királyával -> király", function() {deepEqual( Stem("királyával"), "király");});
test("királyné -> királyn", function() {deepEqual( Stem("királyné"), "királyn");});
test("királynéval -> királyn", function() {deepEqual( Stem("királynéval"), "királyn");});
test("királynő -> királynő", function() {deepEqual( Stem("királynő"), "királynő");});
test("királynőnek -> királynő", function() {deepEqual( Stem("királynőnek"), "királynő");});
test("királynőig -> királynő", function() {deepEqual( Stem("királynőig"), "királynő");});
test("királynője -> királynő", function() {deepEqual( Stem("királynője"), "királynő");});
test("királynőnek -> királynő", function() {deepEqual( Stem("királynőnek"), "királynő");});
test("királynői -> királynő", function() {deepEqual( Stem("királynői"), "királynő");});
test("királyságbeli -> királyságbel", function() {deepEqual( Stem("királyságbeli"), "királyságbel");});
test("királyságnak -> királyság", function() {deepEqual( Stem("királyságnak"), "királyság");});
test("királyságát -> királyság", function() {deepEqual( Stem("királyságát"), "királyság");});
test("kirándult -> kirándul", function() {deepEqual( Stem("kirándult"), "kirándul");});
test("kirándulás -> kirándulás", function() {deepEqual( Stem("kirándulás"), "kirándulás");});
test("kiránduláshoz -> kirándulás", function() {deepEqual( Stem("kiránduláshoz"), "kirándulás");});
test("kirándulási -> kirándulás", function() {deepEqual( Stem("kirándulási"), "kirándulás");});
test("kiránduláskor -> kirándulás", function() {deepEqual( Stem("kiránduláskor"), "kirándulás");});
test("kirándulások -> kirándulás", function() {deepEqual( Stem("kirándulások"), "kirándulás");});
test("kirándulásokat -> kirándulás", function() {deepEqual( Stem("kirándulásokat"), "kirándulás");});
test("kirándulásoknak -> kirándulás", function() {deepEqual( Stem("kirándulásoknak"), "kirándulás");});
test("kirándulásokon -> kirándulás", function() {deepEqual( Stem("kirándulásokon"), "kirándulás");});
test("kirándulásokra -> kirándulás", function() {deepEqual( Stem("kirándulásokra"), "kirándulás");});
test("kirándulásokról -> kirándulás", function() {deepEqual( Stem("kirándulásokról"), "kirándulás");});
test("kirándulásom -> kirándulás", function() {deepEqual( Stem("kirándulásom"), "kirándulás");});
test("kiránduláson -> kirándulás", function() {deepEqual( Stem("kiránduláson"), "kirándulás");});
test("kirándulásra -> kirándulás", function() {deepEqual( Stem("kirándulásra"), "kirándulás");});
test("kirándulásról -> kirándulás", function() {deepEqual( Stem("kirándulásról"), "kirándulás");});
test("kirándulással -> kirándulás", function() {deepEqual( Stem("kirándulással"), "kirándulás");});
test("kirándulást -> kirándulás", function() {deepEqual( Stem("kirándulást"), "kirándulás");});
test("kirándulásunk -> kirándulás", function() {deepEqual( Stem("kirándulásunk"), "kirándulás");});
test("kirándulásunkat -> kirándulás", function() {deepEqual( Stem("kirándulásunkat"), "kirándulás");});
test("kirándulásunkról -> kirándulás", function() {deepEqual( Stem("kirándulásunkról"), "kirándulás");});
test("kirándulásunké -> kirándulásun", function() {deepEqual( Stem("kirándulásunké"), "kirándulásun");});
test("kirándulásán -> kirándulás", function() {deepEqual( Stem("kirándulásán"), "kirándulás");});
test("kirándul -> kirán", function() {deepEqual( Stem("kirándul"), "kirán");});
test("kirándulni -> kiránduln", function() {deepEqual( Stem("kirándulni"), "kiránduln");});
test("kirándulnánk -> kirándulna", function() {deepEqual( Stem("kirándulnánk"), "kirándulna");});
test("kirándultunk -> kirándult", function() {deepEqual( Stem("kirándultunk"), "kirándult");});
test("kirándulócsapat -> kirándulócsap", function() {deepEqual( Stem("kirándulócsapat"), "kirándulócsap");});
test("kirándulók -> kiránduló", function() {deepEqual( Stem("kirándulók"), "kiránduló");});
test("kiránduló -> kiránduló", function() {deepEqual( Stem("kiránduló"), "kiránduló");});
test("kirángatott -> kirángatot", function() {deepEqual( Stem("kirángatott"), "kirángatot");});
test("kirángattam -> kirángatt", function() {deepEqual( Stem("kirángattam"), "kirángatt");});
test("kirántom -> kiránt", function() {deepEqual( Stem("kirántom"), "kiránt");});
test("kirántotta -> kirántott", function() {deepEqual( Stem("kirántotta"), "kirántott");});
test("kirázott -> kirázot", function() {deepEqual( Stem("kirázott"), "kirázot");});
test("kirívó -> kirívó", function() {deepEqual( Stem("kirívó"), "kirívó");});
test("kirívónak -> kirívó", function() {deepEqual( Stem("kirívónak"), "kirívó");});
test("kirótt -> kirót", function() {deepEqual( Stem("kirótt"), "kirót");});
test("kiröhög -> kiröhög", function() {deepEqual( Stem("kiröhög"), "kiröhög");});
test("kiröhögjék -> kiröhögje", function() {deepEqual( Stem("kiröhögjék"), "kiröhögje");});
test("kirúgatá -> kirúgata", function() {deepEqual( Stem("kirúgatá"), "kirúgata");});
test("kirúgjon -> kirúgj", function() {deepEqual( Stem("kirúgjon"), "kirúgj");});
test("kirúgják -> kirúgja", function() {deepEqual( Stem("kirúgják"), "kirúgja");});
test("kirúgnak -> kirúg", function() {deepEqual( Stem("kirúgnak"), "kirúg");});
test("kirúgtunk -> kirúgt", function() {deepEqual( Stem("kirúgtunk"), "kirúgt");});
test("kirúgással -> kirúgás", function() {deepEqual( Stem("kirúgással"), "kirúgás");});
test("kis-német -> kis-ne", function() {deepEqual( Stem("kis-német"), "kis-ne");});
test("kisajtón -> kisajtó", function() {deepEqual( Stem("kisajtón"), "kisajtó");});
test("kisajátítani -> kisajátítan", function() {deepEqual( Stem("kisajátítani"), "kisajátítan");});
test("kisajátítják -> kisajátítja", function() {deepEqual( Stem("kisajátítják"), "kisajátítja");});
test("kisajátították -> kisajátította", function() {deepEqual( Stem("kisajátították"), "kisajátította");});
test("kisajátítás -> kisajátítás", function() {deepEqual( Stem("kisajátítás"), "kisajátítás");});
test("kisajátítása -> kisajátítás", function() {deepEqual( Stem("kisajátítása"), "kisajátítás");});
test("kisajátításhoz -> kisajátítás", function() {deepEqual( Stem("kisajátításhoz"), "kisajátítás");});
test("kisalföldi -> kisalföld", function() {deepEqual( Stem("kisalföldi"), "kisalföld");});
test("kisalkalmazás -> kisalkalmazás", function() {deepEqual( Stem("kisalkalmazás"), "kisalkalmazás");});
test("kisalkalmazásokat -> kisalkalmazás", function() {deepEqual( Stem("kisalkalmazásokat"), "kisalkalmazás");});
test("kisarjadtak -> kisarjadt", function() {deepEqual( Stem("kisarjadtak"), "kisarjadt");});
test("kisasszony -> kisasszony", function() {deepEqual( Stem("kisasszony"), "kisasszony");});
test("kisasszonyai -> kisasszony", function() {deepEqual( Stem("kisasszonyai"), "kisasszony");});
test("kisasszonyt -> kisasszony", function() {deepEqual( Stem("kisasszonyt"), "kisasszony");});
test("kisasztal -> kisasztal", function() {deepEqual( Stem("kisasztal"), "kisasztal");});
test("kisbabája -> kisbabá", function() {deepEqual( Stem("kisbabája"), "kisbabá");});
test("kisbabáját -> kisbabá", function() {deepEqual( Stem("kisbabáját"), "kisbabá");});
test("kisbankban -> kisba", function() {deepEqual( Stem("kisbankban"), "kisba");});
test("kisbarátnőmékhez -> kisbarátnőme", function() {deepEqual( Stem("kisbarátnőmékhez"), "kisbarátnőme");});
test("kisbefektető -> kisbefektető", function() {deepEqual( Stem("kisbefektető"), "kisbefektető");});
test("kisbefektetőit -> kisbefektető", function() {deepEqual( Stem("kisbefektetőit"), "kisbefektető");});
test("kisbefektetők -> kisbefektető", function() {deepEqual( Stem("kisbefektetők"), "kisbefektető");});
test("kisbefektetőknek -> kisbefektető", function() {deepEqual( Stem("kisbefektetőknek"), "kisbefektető");});
test("kisbefektetőt -> kisbefektető", function() {deepEqual( Stem("kisbefektetőt"), "kisbefektető");});
test("kisbejáratához -> kisbejárat", function() {deepEqual( Stem("kisbejáratához"), "kisbejárat");});
test("kisbetű-nagybetű -> kisbetű-nagybetű", function() {deepEqual( Stem("kisbetű-nagybetű"), "kisbetű-nagybetű");});
test("kisbusszal -> kisbusz", function() {deepEqual( Stem("kisbusszal"), "kisbusz");});
test("kisbusz -> kisbusz", function() {deepEqual( Stem("kisbusz"), "kisbusz");});
test("kisbuszunkkal -> kisbusz", function() {deepEqual( Stem("kisbuszunkkal"), "kisbusz");});
test("kisbárkányi -> kisbárkány", function() {deepEqual( Stem("kisbárkányi"), "kisbárkány");});
test("kiscicám -> kiscica", function() {deepEqual( Stem("kiscicám"), "kiscica");});
test("kiscsikó -> kiscsikó", function() {deepEqual( Stem("kiscsikó"), "kiscsikó");});
test("kiscsikóból -> kiscsikó", function() {deepEqual( Stem("kiscsikóból"), "kiscsikó");});
test("kiscsikót -> kiscsikó", function() {deepEqual( Stem("kiscsikót"), "kiscsikó");});
test("kiscsirke -> kiscsir", function() {deepEqual( Stem("kiscsirke"), "kiscsir");});
test("kiscsirkéket -> kiscsirke", function() {deepEqual( Stem("kiscsirkéket"), "kiscsirke");});
test("kiscsoportomból -> kiscsoport", function() {deepEqual( Stem("kiscsoportomból"), "kiscsoport");});
test("kiscsoportos -> kiscsoportos", function() {deepEqual( Stem("kiscsoportos"), "kiscsoportos");});
test("kisded -> kisd", function() {deepEqual( Stem("kisded"), "kisd");});
test("kisdeddel -> kisd", function() {deepEqual( Stem("kisdeddel"), "kisd");});
test("kisdedével -> kisded", function() {deepEqual( Stem("kisdedével"), "kisded");});
test("kisdiák -> kisdia", function() {deepEqual( Stem("kisdiák"), "kisdia");});
test("kisdiákot -> kisdia", function() {deepEqual( Stem("kisdiákot"), "kisdia");});
test("kise -> kis", function() {deepEqual( Stem("kise"), "kis");});
test("kisebb-nagyobb -> kisebb-nagyobb", function() {deepEqual( Stem("kisebb-nagyobb"), "kisebb-nagyobb");});
test("kisebbek -> kisebb", function() {deepEqual( Stem("kisebbek"), "kisebb");});
test("kisebb -> kisebb", function() {deepEqual( Stem("kisebb"), "kisebb");});
test("kis -> kis", function() {deepEqual( Stem("kis"), "kis");});
test("kisebbeknek -> kisebb", function() {deepEqual( Stem("kisebbeknek"), "kisebb");});
test("kisebbet -> kisebb", function() {deepEqual( Stem("kisebbet"), "kisebb");});
test("kisebbik -> kisebb", function() {deepEqual( Stem("kisebbik"), "kisebb");});
test("kisebbnek -> kisebb", function() {deepEqual( Stem("kisebbnek"), "kisebb");});
test("kisebbre -> kisebb", function() {deepEqual( Stem("kisebbre"), "kisebb");});
test("kissé -> kis", function() {deepEqual( Stem("kissé"), "kis");});
test("kisebbfajta -> kisebbfajt", function() {deepEqual( Stem("kisebbfajta"), "kisebbfajt");});
test("kisebbség -> kisebbség", function() {deepEqual( Stem("kisebbség"), "kisebbség");});
test("kisebbségben -> kisebbség", function() {deepEqual( Stem("kisebbségben"), "kisebbség");});
test("kisebbsége -> kisebbség", function() {deepEqual( Stem("kisebbsége"), "kisebbség");});
test("kisebbségek -> kisebbség", function() {deepEqual( Stem("kisebbségek"), "kisebbség");});
test("kisebbségeket -> kisebbség", function() {deepEqual( Stem("kisebbségeket"), "kisebbség");});
test("kisebbségeknek -> kisebbség", function() {deepEqual( Stem("kisebbségeknek"), "kisebbség");});
test("kisebbséget -> kisebbség", function() {deepEqual( Stem("kisebbséget"), "kisebbség");});
test("kisebbséghez -> kisebbség", function() {deepEqual( Stem("kisebbséghez"), "kisebbség");});
test("kisebbségnek -> kisebbség", function() {deepEqual( Stem("kisebbségnek"), "kisebbség");});
test("kisebbségi -> kisebbség", function() {deepEqual( Stem("kisebbségi"), "kisebbség");});
test("kisebbségvédelmet -> kisebbségvédel", function() {deepEqual( Stem("kisebbségvédelmet"), "kisebbségvédel");});
test("kisebbségvédelmi -> kisebbségvédelm", function() {deepEqual( Stem("kisebbségvédelmi"), "kisebbségvédelm");});
test("kisebesedett -> kisebesedet", function() {deepEqual( Stem("kisebesedett"), "kisebesedet");});
test("kisegér -> kisegér", function() {deepEqual( Stem("kisegér"), "kisegér");});
test("kisegítőfékek -> kisegítőfék", function() {deepEqual( Stem("kisegítőfékek"), "kisegítőfék");});
test("kiselőadásnak -> kiselőadás", function() {deepEqual( Stem("kiselőadásnak"), "kiselőadás");});
test("kisember -> kisember", function() {deepEqual( Stem("kisember"), "kisember");});
test("kisembere -> kisemb", function() {deepEqual( Stem("kisembere"), "kisemb");});
test("kisemberekkel -> kisember", function() {deepEqual( Stem("kisemberekkel"), "kisember");});
test("kisembert -> kisember", function() {deepEqual( Stem("kisembert"), "kisember");});
test("kisemmizi -> kisemmiz", function() {deepEqual( Stem("kisemmizi"), "kisemmiz");});
test("kisfaluban -> kisfalu", function() {deepEqual( Stem("kisfaluban"), "kisfalu");});
test("kisfilmes -> kisfilmes", function() {deepEqual( Stem("kisfilmes"), "kisfilmes");});
test("kisfiát -> kisf", function() {deepEqual( Stem("kisfiát"), "kisf");});
test("kisfiával -> kisf", function() {deepEqual( Stem("kisfiával"), "kisf");});
test("kisfiú -> kisfiú", function() {deepEqual( Stem("kisfiú"), "kisfiú");});
test("kisfia -> kisf", function() {deepEqual( Stem("kisfia"), "kisf");});
test("kisfiam -> kisf", function() {deepEqual( Stem("kisfiam"), "kisf");});
test("kisfiúk -> kisfiú", function() {deepEqual( Stem("kisfiúk"), "kisfiú");});
test("kisfiúkkal -> kisfiú", function() {deepEqual( Stem("kisfiúkkal"), "kisfiú");});
test("kisfiút -> kisfiú", function() {deepEqual( Stem("kisfiút"), "kisfiú");});
test("kisfiúval -> kisfiú", function() {deepEqual( Stem("kisfiúval"), "kisfiú");});
test("kisfiúé -> kisfiú", function() {deepEqual( Stem("kisfiúé"), "kisfiú");});
test("kisfiús -> kisfiús", function() {deepEqual( Stem("kisfiús"), "kisfiús");});
test("kisfogyasztókat -> kisfogyasztó", function() {deepEqual( Stem("kisfogyasztókat"), "kisfogyasztó");});
test("kisgazdabarát -> kisgazdabar", function() {deepEqual( Stem("kisgazdabarát"), "kisgazdabar");});
test("kisgazdapárt -> kisgazdapár", function() {deepEqual( Stem("kisgazdapárt"), "kisgazdapár");});
test("kisgazdaságnak -> kisgazdaság", function() {deepEqual( Stem("kisgazdaságnak"), "kisgazdaság");});
test("kisgazdák -> kisgazda", function() {deepEqual( Stem("kisgazdák"), "kisgazda");});
test("kisgazda -> kisgazd", function() {deepEqual( Stem("kisgazda"), "kisgazd");});
test("kisgazdákat -> kisgazda", function() {deepEqual( Stem("kisgazdákat"), "kisgazda");});
test("kisgyerek -> kisgyer", function() {deepEqual( Stem("kisgyerek"), "kisgyer");});
test("kisgyereke -> kisgyer", function() {deepEqual( Stem("kisgyereke"), "kisgyer");});
test("kisgyerekek -> kisgyerek", function() {deepEqual( Stem("kisgyerekek"), "kisgyerek");});
test("kisgyerekekbe -> kisgyerek", function() {deepEqual( Stem("kisgyerekekbe"), "kisgyerek");});
test("kisgyereket -> kisgyer", function() {deepEqual( Stem("kisgyereket"), "kisgyer");});
test("kisgyereknek -> kisgyer", function() {deepEqual( Stem("kisgyereknek"), "kisgyer");});
test("kisgyereknél -> kisgyer", function() {deepEqual( Stem("kisgyereknél"), "kisgyer");});
test("kisgyermeket -> kisgyerm", function() {deepEqual( Stem("kisgyermeket"), "kisgyerm");});
test("kisgyerekes -> kisgyerekes", function() {deepEqual( Stem("kisgyerekes"), "kisgyerekes");});
test("kisgyermekeknek -> kisgyermek", function() {deepEqual( Stem("kisgyermekeknek"), "kisgyermek");});
test("kisgyermekes -> kisgyermekes", function() {deepEqual( Stem("kisgyermekes"), "kisgyermekes");});
test("kisgyermekkorban -> kisgyermekkor", function() {deepEqual( Stem("kisgyermekkorban"), "kisgyermekkor");});
test("kisgyermekkoromból -> kisgyermekkor", function() {deepEqual( Stem("kisgyermekkoromból"), "kisgyermekkor");});
test("kisgyermekkorából -> kisgyermekkor", function() {deepEqual( Stem("kisgyermekkorából"), "kisgyermekkor");});
test("kisgyermekkorának -> kisgyermekkor", function() {deepEqual( Stem("kisgyermekkorának"), "kisgyermekkor");});
test("kishal -> kishal", function() {deepEqual( Stem("kishal"), "kishal");});
test("kishalak -> kishal", function() {deepEqual( Stem("kishalak"), "kishal");});
test("kishalaknak -> kishal", function() {deepEqual( Stem("kishalaknak"), "kishal");});
test("kishalat -> kishal", function() {deepEqual( Stem("kishalat"), "kishal");});
test("kishallal -> kishal", function() {deepEqual( Stem("kishallal"), "kishal");});
test("kisharkályoknak -> kisharkály", function() {deepEqual( Stem("kisharkályoknak"), "kisharkály");});
test("kishatalmi -> kishatalm", function() {deepEqual( Stem("kishatalmi"), "kishatalm");});
test("kishatalom -> kishatal", function() {deepEqual( Stem("kishatalom"), "kishatal");});
test("kishivatalnok -> kishivataln", function() {deepEqual( Stem("kishivatalnok"), "kishivataln");});
test("kisház -> kisház", function() {deepEqual( Stem("kisház"), "kisház");});
test("kisházban -> kisház", function() {deepEqual( Stem("kisházban"), "kisház");});
test("kisházunk -> kisház", function() {deepEqual( Stem("kisházunk"), "kisház");});
test("kishíjján -> kishíj", function() {deepEqual( Stem("kishíjján"), "kishíj");});
test("kishúga -> kishúg", function() {deepEqual( Stem("kishúga"), "kishúg");});
test("kishúgommal -> kishúg", function() {deepEqual( Stem("kishúgommal"), "kishúg");});
test("kishúgát -> kishúg", function() {deepEqual( Stem("kishúgát"), "kishúg");});
test("kisietett -> kisietet", function() {deepEqual( Stem("kisietett"), "kisietet");});
test("kisiklott -> kisiklot", function() {deepEqual( Stem("kisiklott"), "kisiklot");});
test("kisimult -> kisimul", function() {deepEqual( Stem("kisimult"), "kisimul");});
test("kisimította -> kisimított", function() {deepEqual( Stem("kisimította"), "kisimított");});
test("kisiskolásai -> kisiskolás", function() {deepEqual( Stem("kisiskolásai"), "kisiskolás");});
test("kisiskolások -> kisiskolás", function() {deepEqual( Stem("kisiskolások"), "kisiskolás");});
test("kisisteregte -> kisisteregt", function() {deepEqual( Stem("kisisteregte"), "kisisteregt");});
test("kisjogdíjak -> kisjogdíj", function() {deepEqual( Stem("kisjogdíjak"), "kisjogdíj");});
test("kisjogos -> kisjogos", function() {deepEqual( Stem("kisjogos"), "kisjogos");});
test("kisjátszótéren -> kisjátszótér", function() {deepEqual( Stem("kisjátszótéren"), "kisjátszótér");});
test("kiskacsák -> kiskacsa", function() {deepEqual( Stem("kiskacsák"), "kiskacsa");});
test("kiskacsákat -> kiskacsa", function() {deepEqual( Stem("kiskacsákat"), "kiskacsa");});
test("kiskaliberűek -> kiskaliberű", function() {deepEqual( Stem("kiskaliberűek"), "kiskaliberű");});
test("kiskapuk -> kiskap", function() {deepEqual( Stem("kiskapuk"), "kiskap");});
test("kiskapun -> kiskapu", function() {deepEqual( Stem("kiskapun"), "kiskapu");});
test("kiskastélyok -> kiskastély", function() {deepEqual( Stem("kiskastélyok"), "kiskastély");});
test("kiskereskedelem -> kiskereskedel", function() {deepEqual( Stem("kiskereskedelem"), "kiskereskedel");});
test("kiskereskedelemben -> kiskereskedel", function() {deepEqual( Stem("kiskereskedelemben"), "kiskereskedel");});
test("kiskereskedelmet -> kiskereskedel", function() {deepEqual( Stem("kiskereskedelmet"), "kiskereskedel");});
test("kiskereskedelmi -> kiskereskedelm", function() {deepEqual( Stem("kiskereskedelmi"), "kiskereskedelm");});
test("kiskereskedő -> kiskereskedő", function() {deepEqual( Stem("kiskereskedő"), "kiskereskedő");});
test("kiskereskedők -> kiskereskedő", function() {deepEqual( Stem("kiskereskedők"), "kiskereskedő");});
test("kiskereskedőknek -> kiskereskedő", function() {deepEqual( Stem("kiskereskedőknek"), "kiskereskedő");});
test("kiskereskedőnek -> kiskereskedő", function() {deepEqual( Stem("kiskereskedőnek"), "kiskereskedő");});
test("kiskereskedőt -> kiskereskedő", function() {deepEqual( Stem("kiskereskedőt"), "kiskereskedő");});
test("kiskerttel -> kisker", function() {deepEqual( Stem("kiskerttel"), "kisker");});
test("kiskirályoknak -> kiskirály", function() {deepEqual( Stem("kiskirályoknak"), "kiskirály");});
test("kiskocsi -> kiskocs", function() {deepEqual( Stem("kiskocsi"), "kiskocs");});
test("kiskocsiját -> kiskocs", function() {deepEqual( Stem("kiskocsiját"), "kiskocs");});
test("kiskocsira -> kiskocs", function() {deepEqual( Stem("kiskocsira"), "kiskocs");});
test("kiskocsit -> kiskocs", function() {deepEqual( Stem("kiskocsit"), "kiskocs");});
test("kiskocsmába -> kiskocsm", function() {deepEqual( Stem("kiskocsmába"), "kiskocsm");});
test("kiskocsmában -> kiskocsm", function() {deepEqual( Stem("kiskocsmában"), "kiskocsm");});
test("kiskori -> kiskor", function() {deepEqual( Stem("kiskori"), "kiskor");});
test("kiskorom -> kiskor", function() {deepEqual( Stem("kiskorom"), "kiskor");});
test("kiskoromban -> kiskor", function() {deepEqual( Stem("kiskoromban"), "kiskor");});
test("kiskoromra -> kiskor", function() {deepEqual( Stem("kiskoromra"), "kiskor");});
test("kiskoromtól -> kiskor", function() {deepEqual( Stem("kiskoromtól"), "kiskor");});
test("kiskoron -> kiskor", function() {deepEqual( Stem("kiskoron"), "kiskor");});
test("kiskorukban -> kiskor", function() {deepEqual( Stem("kiskorukban"), "kiskor");});
test("kiskorától -> kiskor", function() {deepEqual( Stem("kiskorától"), "kiskor");});
test("kiskorú -> kiskorú", function() {deepEqual( Stem("kiskorú"), "kiskorú");});
test("kiskorúak -> kiskorú", function() {deepEqual( Stem("kiskorúak"), "kiskorú");});
test("kiskosztümös -> kiskosztümös", function() {deepEqual( Stem("kiskosztümös"), "kiskosztümös");});
test("kiskunfélegyházi -> kiskunfélegyház", function() {deepEqual( Stem("kiskunfélegyházi"), "kiskunfélegyház");});
test("kiskutya -> kiskuty", function() {deepEqual( Stem("kiskutya"), "kiskuty");});
test("kiskutyáink -> kiskutya", function() {deepEqual( Stem("kiskutyáink"), "kiskutya");});
test("kiskutyákat -> kiskutya", function() {deepEqual( Stem("kiskutyákat"), "kiskutya");});
test("kiskutyát -> kiskuty", function() {deepEqual( Stem("kiskutyát"), "kiskuty");});
test("kiskölykökkel -> kiskölyk", function() {deepEqual( Stem("kiskölykökkel"), "kiskölyk");});
test("kislattyogtunk -> kislattyogt", function() {deepEqual( Stem("kislattyogtunk"), "kislattyogt");});
test("kislemez -> kislemez", function() {deepEqual( Stem("kislemez"), "kislemez");});
test("kislemezen -> kislemez", function() {deepEqual( Stem("kislemezen"), "kislemez");});
test("kislemezt -> kislemez", function() {deepEqual( Stem("kislemezt"), "kislemez");});
test("kislistás -> kislistás", function() {deepEqual( Stem("kislistás"), "kislistás");});
test("kisliszolok -> kisliszol", function() {deepEqual( Stem("kisliszolok"), "kisliszol");});
test("kisliszoltam -> kisliszolt", function() {deepEqual( Stem("kisliszoltam"), "kisliszolt");});
test("kislánnyal -> kislány", function() {deepEqual( Stem("kislánnyal"), "kislány");});
test("kislány -> kislány", function() {deepEqual( Stem("kislány"), "kislány");});
test("kislánya -> kislány", function() {deepEqual( Stem("kislánya"), "kislány");});
test("kislányt -> kislány", function() {deepEqual( Stem("kislányt"), "kislány");});
test("kislányukkal -> kislány", function() {deepEqual( Stem("kislányukkal"), "kislány");});
test("kislányával -> kislány", function() {deepEqual( Stem("kislányával"), "kislány");});
test("kislányé -> kislány", function() {deepEqual( Stem("kislányé"), "kislány");});
test("kislánynak -> kislány", function() {deepEqual( Stem("kislánynak"), "kislány");});
test("kislányok -> kislány", function() {deepEqual( Stem("kislányok"), "kislány");});
test("kislányokat -> kislány", function() {deepEqual( Stem("kislányokat"), "kislány");});
test("kislánykoromban -> kislánykor", function() {deepEqual( Stem("kislánykoromban"), "kislánykor");});
test("kislányos -> kislányos", function() {deepEqual( Stem("kislányos"), "kislányos");});
test("kismadár -> kismadár", function() {deepEqual( Stem("kismadár"), "kismadár");});
test("kismagnóját -> kismagnó", function() {deepEqual( Stem("kismagnóját"), "kismagnó");});
test("kismagnóra -> kismagnó", function() {deepEqual( Stem("kismagnóra"), "kismagnó");});
test("kismalacot -> kismalac", function() {deepEqual( Stem("kismalacot"), "kismalac");});
test("kismama -> kismam", function() {deepEqual( Stem("kismama"), "kismam");});
test("kismedencébe -> kismedenc", function() {deepEqual( Stem("kismedencébe"), "kismedenc");});
test("kismiska -> kismis", function() {deepEqual( Stem("kismiska"), "kismis");});
test("kisméretű -> kisméretű", function() {deepEqual( Stem("kisméretű"), "kisméretű");});
test("kismértékben -> kismérte", function() {deepEqual( Stem("kismértékben"), "kismérte");});
test("kismértékű -> kismértékű", function() {deepEqual( Stem("kismértékű"), "kismértékű");});
test("kisnyomtatót -> kisnyomtató", function() {deepEqual( Stem("kisnyomtatót"), "kisnyomtató");});
test("kisorsolnak -> kisorsol", function() {deepEqual( Stem("kisorsolnak"), "kisorsol");});
test("kispatak -> kispat", function() {deepEqual( Stem("kispatak"), "kispat");});
test("kispatakba -> kispat", function() {deepEqual( Stem("kispatakba"), "kispat");});
test("kispesti -> kispest", function() {deepEqual( Stem("kispesti"), "kispest");});
test("kisplasztika -> kisplaszt", function() {deepEqual( Stem("kisplasztika"), "kisplaszt");});
test("kisplasztikát -> kisplaszt", function() {deepEqual( Stem("kisplasztikát"), "kisplaszt");});
test("kispolgári -> kispolgár", function() {deepEqual( Stem("kispolgári"), "kispolgár");});
test("kispolgárok -> kispolgár", function() {deepEqual( Stem("kispolgárok"), "kispolgár");});
test("kispolgár -> kispolgár", function() {deepEqual( Stem("kispolgár"), "kispolgár");});
test("kispontyot -> kisponty", function() {deepEqual( Stem("kispontyot"), "kisponty");});
test("kisportolt -> kisportol", function() {deepEqual( Stem("kisportolt"), "kisportol");});
test("kispályára -> kispály", function() {deepEqual( Stem("kispályára"), "kispály");});
test("kispályás -> kispályás", function() {deepEqual( Stem("kispályás"), "kispályás");});
test("kispárnáik -> kispárna", function() {deepEqual( Stem("kispárnáik"), "kispárna");});
test("kispárnám -> kispárna", function() {deepEqual( Stem("kispárnám"), "kispárna");});
test("kispárnámat -> kispárna", function() {deepEqual( Stem("kispárnámat"), "kispárna");});
test("kispénzű -> kispénzű", function() {deepEqual( Stem("kispénzű"), "kispénzű");});
test("kisrészvényes -> kisrészvényes", function() {deepEqual( Stem("kisrészvényes"), "kisrészvényes");});
test("kisrészvényesek -> kisrészvényes", function() {deepEqual( Stem("kisrészvényesek"), "kisrészvényes");});
test("kisrészvényeseket -> kisrészvényes", function() {deepEqual( Stem("kisrészvényeseket"), "kisrészvényes");});
test("kisrészvényeseknek -> kisrészvényes", function() {deepEqual( Stem("kisrészvényeseknek"), "kisrészvényes");});
test("kisrészvényesekről -> kisrészvényes", function() {deepEqual( Stem("kisrészvényesekről"), "kisrészvényes");});
test("kisseb -> kisseb", function() {deepEqual( Stem("kisseb"), "kisseb");});
test("kissrácok -> kissrác", function() {deepEqual( Stem("kissrácok"), "kissrác");});
test("kisszemináriumba -> kisszemináriu", function() {deepEqual( Stem("kisszemináriumba"), "kisszemináriu");});
test("kistafírozott -> kistafírozot", function() {deepEqual( Stem("kistafírozott"), "kistafírozot");});
test("kistanárok -> kistanár", function() {deepEqual( Stem("kistanárok"), "kistanár");});
test("kistelepülések -> kistelepülés", function() {deepEqual( Stem("kistelepülések"), "kistelepülés");});
test("kistermelők -> kistermelő", function() {deepEqual( Stem("kistermelők"), "kistermelő");});
test("kistermelőkre -> kistermelő", function() {deepEqual( Stem("kistermelőkre"), "kistermelő");});
test("kistestvéremnek -> kistestvér", function() {deepEqual( Stem("kistestvéremnek"), "kistestvér");});
test("kistesómat -> kistesó", function() {deepEqual( Stem("kistesómat"), "kistesó");});
test("kistulajdonosoknak -> kistulajdonos", function() {deepEqual( Stem("kistulajdonosoknak"), "kistulajdonos");});
test("kistárgyépítészet -> kistárgyépítész", function() {deepEqual( Stem("kistárgyépítészet"), "kistárgyépítész");});
test("kisugárzású -> kisugárzású", function() {deepEqual( Stem("kisugárzású"), "kisugárzású");});
test("kisugárzó -> kisugárzó", function() {deepEqual( Stem("kisugárzó"), "kisugárzó");});
test("kisurrant -> kisurran", function() {deepEqual( Stem("kisurrant"), "kisurran");});
test("kisurrantam -> kisurrant", function() {deepEqual( Stem("kisurrantam"), "kisurrant");});
test("kisutcán -> kisutc", function() {deepEqual( Stem("kisutcán"), "kisutc");});
test("kisvasutasokkal -> kisvasutas", function() {deepEqual( Stem("kisvasutasokkal"), "kisvasutas");});
test("kisvasút -> kisvasú", function() {deepEqual( Stem("kisvasút"), "kisvasú");});
test("kisvasútnak -> kisvasút", function() {deepEqual( Stem("kisvasútnak"), "kisvasút");});
test("kisvasútra -> kisvasút", function() {deepEqual( Stem("kisvasútra"), "kisvasút");});
test("kisvasúttal -> kisvasú", function() {deepEqual( Stem("kisvasúttal"), "kisvasú");});
test("kisvonat -> kisvon", function() {deepEqual( Stem("kisvonat"), "kisvon");});
test("kisvonatoztunk -> kisvonatozt", function() {deepEqual( Stem("kisvonatoztunk"), "kisvonatozt");});
test("kisvállalati -> kisvállalat", function() {deepEqual( Stem("kisvállalati"), "kisvállalat");});
test("kisvállalkozás -> kisvállalkozás", function() {deepEqual( Stem("kisvállalkozás"), "kisvállalkozás");});
test("kisvállalkozások -> kisvállalkozás", function() {deepEqual( Stem("kisvállalkozások"), "kisvállalkozás");});
test("kisvállalkozásokat -> kisvállalkozás", function() {deepEqual( Stem("kisvállalkozásokat"), "kisvállalkozás");});
test("kisvállalkozásoknak -> kisvállalkozás", function() {deepEqual( Stem("kisvállalkozásoknak"), "kisvállalkozás");});
test("kisvállalkozásoké -> kisvállalkozás", function() {deepEqual( Stem("kisvállalkozásoké"), "kisvállalkozás");});
test("kisvállalkozók -> kisvállalkozó", function() {deepEqual( Stem("kisvállalkozók"), "kisvállalkozó");});
test("kisvállalkozás-fejlesztő -> kisvállalkozás-fejlesztő", function() {deepEqual( Stem("kisvállalkozás-fejlesztő"), "kisvállalkozás-fejlesztő");});
test("kisvállalkozási -> kisvállalkozás", function() {deepEqual( Stem("kisvállalkozási"), "kisvállalkozás");});
test("kisváros -> kisváros", function() {deepEqual( Stem("kisváros"), "kisváros");});
test("kisvárosba -> kisváros", function() {deepEqual( Stem("kisvárosba"), "kisváros");});
test("kisvárosban -> kisváros", function() {deepEqual( Stem("kisvárosban"), "kisváros");});
test("kisvárosokban -> kisváros", function() {deepEqual( Stem("kisvárosokban"), "kisváros");});
test("kisvárosi -> kisváros", function() {deepEqual( Stem("kisvárosi"), "kisváros");});
test("kisvártatva -> kisvártatv", function() {deepEqual( Stem("kisvártatva"), "kisvártatv");});
test("kiszabadul -> kiszab", function() {deepEqual( Stem("kiszabadul"), "kiszab");});
test("kiszabadult -> kiszabadul", function() {deepEqual( Stem("kiszabadult"), "kiszabadul");});
test("kiszabadítani -> kiszabadítan", function() {deepEqual( Stem("kiszabadítani"), "kiszabadítan");});
test("kiszabadítja -> kiszabadít", function() {deepEqual( Stem("kiszabadítja"), "kiszabadít");});
test("kiszabadítjuk -> kiszabadít", function() {deepEqual( Stem("kiszabadítjuk"), "kiszabadít");});
test("kiszabadította -> kiszabadított", function() {deepEqual( Stem("kiszabadította"), "kiszabadított");});
test("kiszabadítottam -> kiszabadított", function() {deepEqual( Stem("kiszabadítottam"), "kiszabadított");});
test("kiszabadítása -> kiszabadítás", function() {deepEqual( Stem("kiszabadítása"), "kiszabadítás");});
test("kiszabható -> kiszabható", function() {deepEqual( Stem("kiszabható"), "kiszabható");});
test("kiszabott -> kiszabot", function() {deepEqual( Stem("kiszabott"), "kiszabot");});
test("kiszabás -> kiszabás", function() {deepEqual( Stem("kiszabás"), "kiszabás");});
test("kiszabására -> kiszabás", function() {deepEqual( Stem("kiszabására"), "kiszabás");});
test("kiszabását -> kiszabás", function() {deepEqual( Stem("kiszabását"), "kiszabás");});
test("kiszabó -> kiszabó", function() {deepEqual( Stem("kiszabó"), "kiszabó");});
test("kiszaggattam -> kiszaggatt", function() {deepEqual( Stem("kiszaggattam"), "kiszaggatt");});
test("kiszakadni -> kiszakadn", function() {deepEqual( Stem("kiszakadni"), "kiszakadn");});
test("kiszakadt -> kisz", function() {deepEqual( Stem("kiszakadt"), "kisz");});
test("kiszakított -> kiszakítot", function() {deepEqual( Stem("kiszakított"), "kiszakítot");});
test("kiszakította -> kiszakított", function() {deepEqual( Stem("kiszakította"), "kiszakított");});
test("kiszaladt -> kiszal", function() {deepEqual( Stem("kiszaladt"), "kiszal");});
test("kiszedett -> kiszedet", function() {deepEqual( Stem("kiszedett"), "kiszedet");});
test("kiszedjem -> kiszedj", function() {deepEqual( Stem("kiszedjem"), "kiszedj");});
test("kiszedték -> kiszedte", function() {deepEqual( Stem("kiszedték"), "kiszedte");});
test("kiszehajtás -> kiszehajtás", function() {deepEqual( Stem("kiszehajtás"), "kiszehajtás");});
test("kiszemelt -> kiszemel", function() {deepEqual( Stem("kiszemelt"), "kiszemel");});
test("kiszemeltek -> kiszemelt", function() {deepEqual( Stem("kiszemeltek"), "kiszemelt");});
test("kiszemelnek -> kiszemel", function() {deepEqual( Stem("kiszemelnek"), "kiszemel");});
test("kiszemezett -> kiszemezet", function() {deepEqual( Stem("kiszemezett"), "kiszemezet");});
test("kiszipolyoz -> kiszipolyoz", function() {deepEqual( Stem("kiszipolyoz"), "kiszipolyoz");});
test("kiszivárgott -> kiszivárgot", function() {deepEqual( Stem("kiszivárgott"), "kiszivárgot");});
test("kiszivárgó -> kiszivárgó", function() {deepEqual( Stem("kiszivárgó"), "kiszivárgó");});
test("kiszolgálatlanul -> kiszolgálatlan", function() {deepEqual( Stem("kiszolgálatlanul"), "kiszolgálatlan");});
test("kiszolgálhat -> kiszolgálh", function() {deepEqual( Stem("kiszolgálhat"), "kiszolgálh");});
test("kiszolgálja -> kiszolgál", function() {deepEqual( Stem("kiszolgálja"), "kiszolgál");});
test("kiszolgál -> kiszolgál", function() {deepEqual( Stem("kiszolgál"), "kiszolgál");});
test("kiszolgálják -> kiszolgálja", function() {deepEqual( Stem("kiszolgálják"), "kiszolgálja");});
test("kiszolgálna -> kiszolgáln", function() {deepEqual( Stem("kiszolgálna"), "kiszolgáln");});
test("kiszolgálnak -> kiszolgál", function() {deepEqual( Stem("kiszolgálnak"), "kiszolgál");});
test("kiszolgálni -> kiszolgáln", function() {deepEqual( Stem("kiszolgálni"), "kiszolgáln");});
test("kiszolgálom -> kiszolgál", function() {deepEqual( Stem("kiszolgálom"), "kiszolgál");});
test("kiszolgálta -> kiszolgált", function() {deepEqual( Stem("kiszolgálta"), "kiszolgált");});
test("kiszolgált -> kiszolgál", function() {deepEqual( Stem("kiszolgált"), "kiszolgál");});
test("kiszolgáltatott -> kiszolgáltatot", function() {deepEqual( Stem("kiszolgáltatott"), "kiszolgáltatot");});
test("kiszolgáltatottabb -> kiszolgáltatottabb", function() {deepEqual( Stem("kiszolgáltatottabb"), "kiszolgáltatottabb");});
test("kiszolgáltatottakat -> kiszolgáltatott", function() {deepEqual( Stem("kiszolgáltatottakat"), "kiszolgáltatott");});
test("kiszolgáltatja -> kiszolgáltat", function() {deepEqual( Stem("kiszolgáltatja"), "kiszolgáltat");});
test("kiszolgáltatottan -> kiszolgáltatott", function() {deepEqual( Stem("kiszolgáltatottan"), "kiszolgáltatott");});
test("kiszolgáltatottnak -> kiszolgáltatott", function() {deepEqual( Stem("kiszolgáltatottnak"), "kiszolgáltatott");});
test("kiszolgáltatottá -> kiszolgáltatot", function() {deepEqual( Stem("kiszolgáltatottá"), "kiszolgáltatot");});
test("kiszolgáltatta -> kiszolgáltatt", function() {deepEqual( Stem("kiszolgáltatta"), "kiszolgáltatt");});
test("kiszolgáltatottság -> kiszolgáltatottság", function() {deepEqual( Stem("kiszolgáltatottság"), "kiszolgáltatottság");});
test("kiszolgáltatottságát -> kiszolgáltatottság", function() {deepEqual( Stem("kiszolgáltatottságát"), "kiszolgáltatottság");});
test("kiszolgáltatva -> kiszolgáltatv", function() {deepEqual( Stem("kiszolgáltatva"), "kiszolgáltatv");});
test("kiszolgálás -> kiszolgálás", function() {deepEqual( Stem("kiszolgálás"), "kiszolgálás");});
test("kiszolgálása -> kiszolgálás", function() {deepEqual( Stem("kiszolgálása"), "kiszolgálás");});
test("kiszolgálásban -> kiszolgálás", function() {deepEqual( Stem("kiszolgálásban"), "kiszolgálás");});
test("kiszolgálást -> kiszolgálás", function() {deepEqual( Stem("kiszolgálást"), "kiszolgálás");});
test("kiszolgálásához -> kiszolgálás", function() {deepEqual( Stem("kiszolgálásához"), "kiszolgálás");});
test("kiszolgálására -> kiszolgálás", function() {deepEqual( Stem("kiszolgálására"), "kiszolgálás");});
test("kiszolgálásáról -> kiszolgálás", function() {deepEqual( Stem("kiszolgálásáról"), "kiszolgálás");});
test("kiszolgálását -> kiszolgálás", function() {deepEqual( Stem("kiszolgálását"), "kiszolgálás");});
test("kiszolgálásáért -> kiszolgálás", function() {deepEqual( Stem("kiszolgálásáért"), "kiszolgálás");});
test("kiszolgálási -> kiszolgálás", function() {deepEqual( Stem("kiszolgálási"), "kiszolgálás");});
test("kiszolgáló-hozzáférést -> kiszolgáló-hozzáférés", function() {deepEqual( Stem("kiszolgáló-hozzáférést"), "kiszolgáló-hozzáférés");});
test("kiszolgáló-ügyfélprogram -> kiszolgáló-ügyfélprogr", function() {deepEqual( Stem("kiszolgáló-ügyfélprogram"), "kiszolgáló-ügyfélprogr");});
test("kiszolgálóalkalmazásokat -> kiszolgálóalkalmazás", function() {deepEqual( Stem("kiszolgálóalkalmazásokat"), "kiszolgálóalkalmazás");});
test("kiszolgálóalkalmazásokban -> kiszolgálóalkalmazás", function() {deepEqual( Stem("kiszolgálóalkalmazásokban"), "kiszolgálóalkalmazás");});
test("kiszolgálóalkalmazásához -> kiszolgálóalkalmazás", function() {deepEqual( Stem("kiszolgálóalkalmazásához"), "kiszolgálóalkalmazás");});
test("kiszolgálócsalád -> kiszolgálócsala", function() {deepEqual( Stem("kiszolgálócsalád"), "kiszolgálócsala");});
test("kiszolgálócsaládja -> kiszolgálócsalád", function() {deepEqual( Stem("kiszolgálócsaládja"), "kiszolgálócsalád");});
test("kiszolgálócsaládjának -> kiszolgálócsalád", function() {deepEqual( Stem("kiszolgálócsaládjának"), "kiszolgálócsalád");});
test("kiszolgálóegységre -> kiszolgálóegység", function() {deepEqual( Stem("kiszolgálóegységre"), "kiszolgálóegység");});
test("kiszolgálóerőforrás -> kiszolgálóerőforrás", function() {deepEqual( Stem("kiszolgálóerőforrás"), "kiszolgálóerőforrás");});
test("kiszolgálófarm -> kiszolgálófar", function() {deepEqual( Stem("kiszolgálófarm"), "kiszolgálófar");});
test("kiszolgálófarmnak -> kiszolgálófar", function() {deepEqual( Stem("kiszolgálófarmnak"), "kiszolgálófar");});
test("kiszolgálófarmokkal -> kiszolgálófarm", function() {deepEqual( Stem("kiszolgálófarmokkal"), "kiszolgálófarm");});
test("kiszolgálógép -> kiszolgálógép", function() {deepEqual( Stem("kiszolgálógép"), "kiszolgálógép");});
test("kiszolgálói -> kiszolgáló", function() {deepEqual( Stem("kiszolgálói"), "kiszolgáló");});
test("kiszolgálóit -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóit"), "kiszolgáló");});
test("kiszolgálóin -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóin"), "kiszolgáló");});
test("kiszolgálóihoz -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóihoz"), "kiszolgáló");});
test("kiszolgálóhoz -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóhoz"), "kiszolgáló");});
test("kiszolgáló -> kiszolgáló", function() {deepEqual( Stem("kiszolgáló"), "kiszolgáló");});
test("kiszolgálóban -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóban"), "kiszolgáló");});
test("kiszolgálóikat -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóikat"), "kiszolgáló");});
test("kiszolgálóinak -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóinak"), "kiszolgáló");});
test("kiszolgálója -> kiszolgáló", function() {deepEqual( Stem("kiszolgálója"), "kiszolgáló");});
test("kiszolgálóján -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóján"), "kiszolgáló");});
test("kiszolgálójának -> kiszolgáló", function() {deepEqual( Stem("kiszolgálójának"), "kiszolgáló");});
test("kiszolgálójára -> kiszolgáló", function() {deepEqual( Stem("kiszolgálójára"), "kiszolgáló");});
test("kiszolgálóját -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóját"), "kiszolgáló");});
test("kiszolgálójáét -> kiszolgálójá", function() {deepEqual( Stem("kiszolgálójáét"), "kiszolgálójá");});
test("kiszolgálók -> kiszolgáló", function() {deepEqual( Stem("kiszolgálók"), "kiszolgáló");});
test("kiszolgálókat -> kiszolgáló", function() {deepEqual( Stem("kiszolgálókat"), "kiszolgáló");});
test("kiszolgálókban -> kiszolgáló", function() {deepEqual( Stem("kiszolgálókban"), "kiszolgáló");});
test("kiszolgálókhoz -> kiszolgáló", function() {deepEqual( Stem("kiszolgálókhoz"), "kiszolgáló");});
test("kiszolgálókkal -> kiszolgáló", function() {deepEqual( Stem("kiszolgálókkal"), "kiszolgáló");});
test("kiszolgálóknak -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóknak"), "kiszolgáló");});
test("kiszolgálókon -> kiszolgáló", function() {deepEqual( Stem("kiszolgálókon"), "kiszolgáló");});
test("kiszolgálókra -> kiszolgáló", function() {deepEqual( Stem("kiszolgálókra"), "kiszolgáló");});
test("kiszolgálókról -> kiszolgáló", function() {deepEqual( Stem("kiszolgálókról"), "kiszolgáló");});
test("kiszolgálóként -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóként"), "kiszolgáló");});
test("kiszolgálón -> kiszolgáló", function() {deepEqual( Stem("kiszolgálón"), "kiszolgáló");});
test("kiszolgálónak -> kiszolgáló", function() {deepEqual( Stem("kiszolgálónak"), "kiszolgáló");});
test("kiszolgálónként -> kiszolgálón", function() {deepEqual( Stem("kiszolgálónként"), "kiszolgálón");});
test("kiszolgálóról -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóról"), "kiszolgáló");});
test("kiszolgálóra -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóra"), "kiszolgáló");});
test("kiszolgálót -> kiszolgáló", function() {deepEqual( Stem("kiszolgálót"), "kiszolgáló");});
test("kiszolgálótól -> kiszolgáló", function() {deepEqual( Stem("kiszolgálótól"), "kiszolgáló");});
test("kiszolgálóval -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóval"), "kiszolgáló");});
test("kiszolgálóéval -> kiszolgáló", function() {deepEqual( Stem("kiszolgálóéval"), "kiszolgáló");});
test("kiszolgálókönyvtár -> kiszolgálókönyvtár", function() {deepEqual( Stem("kiszolgálókönyvtár"), "kiszolgálókönyvtár");});
test("kiszolgálómegosztásnév -> kiszolgálómegosztásnév", function() {deepEqual( Stem("kiszolgálómegosztásnév"), "kiszolgálómegosztásnév");});
test("kiszolgálóoldali -> kiszolgálóoldal", function() {deepEqual( Stem("kiszolgálóoldali"), "kiszolgálóoldal");});
test("kiszolgálópiacon -> kiszolgálópiac", function() {deepEqual( Stem("kiszolgálópiacon"), "kiszolgálópiac");});
test("kiszolgálóplatform -> kiszolgálóplatfor", function() {deepEqual( Stem("kiszolgálóplatform"), "kiszolgálóplatfor");});
test("kiszolgálóprogramok -> kiszolgálóprogram", function() {deepEqual( Stem("kiszolgálóprogramok"), "kiszolgálóprogram");});
test("kiszolgálóprogramokat -> kiszolgálóprogram", function() {deepEqual( Stem("kiszolgálóprogramokat"), "kiszolgálóprogram");});
test("kiszolgálórendszert -> kiszolgálórendszer", function() {deepEqual( Stem("kiszolgálórendszert"), "kiszolgálórendszer");});
test("kiszolgálórész -> kiszolgálórész", function() {deepEqual( Stem("kiszolgálórész"), "kiszolgálórész");});
test("kiszolgálórésze -> kiszolgálórész", function() {deepEqual( Stem("kiszolgálórésze"), "kiszolgálórész");});
test("kiszolgálórészében -> kiszolgálórész", function() {deepEqual( Stem("kiszolgálórészében"), "kiszolgálórész");});
test("kiszolgálórészét -> kiszolgálórész", function() {deepEqual( Stem("kiszolgálórészét"), "kiszolgálórész");});
test("kiszolgálósorozat -> kiszolgálósoroz", function() {deepEqual( Stem("kiszolgálósorozat"), "kiszolgálósoroz");});
test("kiszolgálószoftver -> kiszolgálószoftver", function() {deepEqual( Stem("kiszolgálószoftver"), "kiszolgálószoftver");});
test("kiszolgálószoftverekkel -> kiszolgálószoftver", function() {deepEqual( Stem("kiszolgálószoftverekkel"), "kiszolgálószoftver");});
test("kiszolgálóterméket -> kiszolgálóterme", function() {deepEqual( Stem("kiszolgálóterméket"), "kiszolgálóterme");});
test("kiszolgálótípus -> kiszolgálótípus", function() {deepEqual( Stem("kiszolgálótípus"), "kiszolgálótípus");});
test("kiszoruljanak -> kiszorul", function() {deepEqual( Stem("kiszoruljanak"), "kiszorul");});
test("kiszorulnak -> kiszorul", function() {deepEqual( Stem("kiszorulnak"), "kiszorul");});
test("kiszorultak -> kiszorult", function() {deepEqual( Stem("kiszorultak"), "kiszorult");});
test("kiszorulásának -> kiszorulás", function() {deepEqual( Stem("kiszorulásának"), "kiszorulás");});
test("kiszorítani -> kiszorítan", function() {deepEqual( Stem("kiszorítani"), "kiszorítan");});
test("kiszorítják -> kiszorítja", function() {deepEqual( Stem("kiszorítják"), "kiszorítja");});
test("kiszorította -> kiszorított", function() {deepEqual( Stem("kiszorította"), "kiszorított");});
test("kiszorítása -> kiszorítás", function() {deepEqual( Stem("kiszorítása"), "kiszorítás");});
test("kiszorító -> kiszorító", function() {deepEqual( Stem("kiszorító"), "kiszorító");});
test("kiszállhatott -> kiszállhatot", function() {deepEqual( Stem("kiszállhatott"), "kiszállhatot");});
test("kiszálljon -> kiszállj", function() {deepEqual( Stem("kiszálljon"), "kiszállj");});
test("kiszáll -> kiszáll", function() {deepEqual( Stem("kiszáll"), "kiszáll");});
test("kiszállni -> kiszálln", function() {deepEqual( Stem("kiszállni"), "kiszálln");});
test("kiszállok -> kiszáll", function() {deepEqual( Stem("kiszállok"), "kiszáll");});
test("kiszálltak -> kiszállt", function() {deepEqual( Stem("kiszálltak"), "kiszállt");});
test("kiszálltam -> kiszállt", function() {deepEqual( Stem("kiszálltam"), "kiszállt");});
test("kiszálltunk -> kiszállt", function() {deepEqual( Stem("kiszálltunk"), "kiszállt");});
test("kiszállt -> kiszáll", function() {deepEqual( Stem("kiszállt"), "kiszáll");});
test("kiszállánk -> kiszálla", function() {deepEqual( Stem("kiszállánk"), "kiszálla");});
test("kiszállás -> kiszállás", function() {deepEqual( Stem("kiszállás"), "kiszállás");});
test("kiszállása -> kiszállás", function() {deepEqual( Stem("kiszállása"), "kiszállás");});
test("kiszálláshoz -> kiszállás", function() {deepEqual( Stem("kiszálláshoz"), "kiszállás");});
test("kiszálláskor -> kiszállás", function() {deepEqual( Stem("kiszálláskor"), "kiszállás");});
test("kiszállásnál -> kiszállás", function() {deepEqual( Stem("kiszállásnál"), "kiszállás");});
test("kiszállítást -> kiszállítás", function() {deepEqual( Stem("kiszállítást"), "kiszállítás");});
test("kiszámolja -> kiszámol", function() {deepEqual( Stem("kiszámolja"), "kiszámol");});
test("kiszámoltuk -> kiszámolt", function() {deepEqual( Stem("kiszámoltuk"), "kiszámolt");});
test("kiszámítani -> kiszámítan", function() {deepEqual( Stem("kiszámítani"), "kiszámítan");});
test("kiszámítania -> kiszámítan", function() {deepEqual( Stem("kiszámítania"), "kiszámítan");});
test("kiszámítható -> kiszámítható", function() {deepEqual( Stem("kiszámítható"), "kiszámítható");});
test("kiszámíthatóvá -> kiszámítható", function() {deepEqual( Stem("kiszámíthatóvá"), "kiszámítható");});
test("kiszámíthatóság -> kiszámíthatóság", function() {deepEqual( Stem("kiszámíthatóság"), "kiszámíthatóság");});
test("kiszámíthatóságon -> kiszámíthatóság", function() {deepEqual( Stem("kiszámíthatóságon"), "kiszámíthatóság");});
test("kiszámíthatóságát -> kiszámíthatóság", function() {deepEqual( Stem("kiszámíthatóságát"), "kiszámíthatóság");});
test("kiszámítja -> kiszámít", function() {deepEqual( Stem("kiszámítja"), "kiszámít");});
test("kiszámított -> kiszámítot", function() {deepEqual( Stem("kiszámított"), "kiszámítot");});
test("kiszámítva -> kiszámítv", function() {deepEqual( Stem("kiszámítva"), "kiszámítv");});
test("kiszámítása -> kiszámítás", function() {deepEqual( Stem("kiszámítása"), "kiszámítás");});
test("kiszámításakor -> kiszámítás", function() {deepEqual( Stem("kiszámításakor"), "kiszámítás");});
test("kiszámításában -> kiszámítás", function() {deepEqual( Stem("kiszámításában"), "kiszámítás");});
test("kiszámításának -> kiszámítás", function() {deepEqual( Stem("kiszámításának"), "kiszámítás");});
test("kiszáradt -> kiszár", function() {deepEqual( Stem("kiszáradt"), "kiszár");});
test("kiszédelgett -> kiszédelget", function() {deepEqual( Stem("kiszédelgett"), "kiszédelget");});
test("kiszélesedett -> kiszélesedet", function() {deepEqual( Stem("kiszélesedett"), "kiszélesedet");});
test("kiszélesedik -> kiszélesed", function() {deepEqual( Stem("kiszélesedik"), "kiszélesed");});
test("kiszélesítjük -> kiszélesít", function() {deepEqual( Stem("kiszélesítjük"), "kiszélesít");});
test("kiszélesítse -> kiszélesíts", function() {deepEqual( Stem("kiszélesítse"), "kiszélesíts");});
test("kiszélesítése -> kiszélesítés", function() {deepEqual( Stem("kiszélesítése"), "kiszélesítés");});
test("kiszóljanak -> kiszól", function() {deepEqual( Stem("kiszóljanak"), "kiszól");});
test("kiszórakoztuk -> kiszórakozt", function() {deepEqual( Stem("kiszórakoztuk"), "kiszórakozt");});
test("kiszórakozzuk -> kiszórakozz", function() {deepEqual( Stem("kiszórakozzuk"), "kiszórakozz");});
test("kiszórt -> kiszór", function() {deepEqual( Stem("kiszórt"), "kiszór");});
test("kiszögellés -> kiszögellés", function() {deepEqual( Stem("kiszögellés"), "kiszögellés");});
test("kiszökünk -> kisz", function() {deepEqual( Stem("kiszökünk"), "kisz");});
test("kiszúr -> kiszúr", function() {deepEqual( Stem("kiszúr"), "kiszúr");});
test("kiszúrja -> kiszúr", function() {deepEqual( Stem("kiszúrja"), "kiszúr");});
test("kiszúrni -> kiszúrn", function() {deepEqual( Stem("kiszúrni"), "kiszúrn");});
test("kiszúrtunk -> kiszúrt", function() {deepEqual( Stem("kiszúrtunk"), "kiszúrt");});
test("kiszűrik -> kiszűr", function() {deepEqual( Stem("kiszűrik"), "kiszűr");});
test("kiszűrjék -> kiszűrje", function() {deepEqual( Stem("kiszűrjék"), "kiszűrje");});
test("kiszűrni -> kiszűrn", function() {deepEqual( Stem("kiszűrni"), "kiszűrn");});
test("kiszűréséhez -> kiszűrés", function() {deepEqual( Stem("kiszűréséhez"), "kiszűrés");});
test("kiszűrődő -> kiszűrődő", function() {deepEqual( Stem("kiszűrődő"), "kiszűrődő");});
test("kisérettségink -> kisérettség", function() {deepEqual( Stem("kisérettségink"), "kisérettség");});
test("kisértő -> kisértő", function() {deepEqual( Stem("kisértő"), "kisértő");});
test("kisétált -> kisétál", function() {deepEqual( Stem("kisétált"), "kisétál");});
test("kisétáltam -> kisétált", function() {deepEqual( Stem("kisétáltam"), "kisétált");});
test("kisétálnánk -> kisétálna", function() {deepEqual( Stem("kisétálnánk"), "kisétálna");});
test("kisétáltunk -> kisétált", function() {deepEqual( Stem("kisétáltunk"), "kisétált");});
test("kisétálunk -> kisétál", function() {deepEqual( Stem("kisétálunk"), "kisétál");});
test("kisírtam -> kisírt", function() {deepEqual( Stem("kisírtam"), "kisírt");});
test("kisöccse -> kisöccs", function() {deepEqual( Stem("kisöccse"), "kisöccs");});
test("kisöccsémnek -> kisöccse", function() {deepEqual( Stem("kisöccsémnek"), "kisöccse");});
test("kisöcsém -> kisöcse", function() {deepEqual( Stem("kisöcsém"), "kisöcse");});
test("kisút -> kisú", function() {deepEqual( Stem("kisút"), "kisú");});
test("kisül -> kis", function() {deepEqual( Stem("kisül"), "kis");});
test("kisült -> kisül", function() {deepEqual( Stem("kisült"), "kisül");});
test("kisütnek -> kisüt", function() {deepEqual( Stem("kisütnek"), "kisüt");});
test("kisütött -> kisütöt", function() {deepEqual( Stem("kisütött"), "kisütöt");});
test("kisüzleti -> kisüzlet", function() {deepEqual( Stem("kisüzleti"), "kisüzlet");});
test("kitakarta -> kitakart", function() {deepEqual( Stem("kitakarta"), "kitakart");});
test("kitakarítani -> kitakarítan", function() {deepEqual( Stem("kitakarítani"), "kitakarítan");});
test("kitakarítottam -> kitakarított", function() {deepEqual( Stem("kitakarítottam"), "kitakarított");});
test("kitakarítottuk -> kitakarított", function() {deepEqual( Stem("kitakarítottuk"), "kitakarított");});
test("kitakarították -> kitakarította", function() {deepEqual( Stem("kitakarították"), "kitakarította");});
test("kitakarítsa -> kitakaríts", function() {deepEqual( Stem("kitakarítsa"), "kitakaríts");});
test("kitakarítását -> kitakarítás", function() {deepEqual( Stem("kitakarítását"), "kitakarítás");});
test("kitalálható -> kitalálható", function() {deepEqual( Stem("kitalálható"), "kitalálható");});
test("kitalált -> kitalál", function() {deepEqual( Stem("kitalált"), "kitalál");});
test("kitalálja -> kitalál", function() {deepEqual( Stem("kitalálja"), "kitalál");});
test("kitaláljuk -> kitalál", function() {deepEqual( Stem("kitaláljuk"), "kitalál");});
test("kitalálni -> kitaláln", function() {deepEqual( Stem("kitalálni"), "kitaláln");});
test("kitalálná -> kitalálna", function() {deepEqual( Stem("kitalálná"), "kitalálna");});
test("kitalálok -> kitalál", function() {deepEqual( Stem("kitalálok"), "kitalál");});
test("kitalálta -> kitalált", function() {deepEqual( Stem("kitalálta"), "kitalált");});
test("kitaláltad -> kitalált", function() {deepEqual( Stem("kitaláltad"), "kitalált");});
test("kitaláltak -> kitalált", function() {deepEqual( Stem("kitaláltak"), "kitalált");});
test("kitaláltam -> kitalált", function() {deepEqual( Stem("kitaláltam"), "kitalált");});
test("kitaláltuk -> kitalált", function() {deepEqual( Stem("kitaláltuk"), "kitalált");});
test("kitaláltunk -> kitalált", function() {deepEqual( Stem("kitaláltunk"), "kitalált");});
test("kitalálták -> kitalálta", function() {deepEqual( Stem("kitalálták"), "kitalálta");});
test("kitalálás -> kitalálás", function() {deepEqual( Stem("kitalálás"), "kitalálás");});
test("kitalálása -> kitalálás", function() {deepEqual( Stem("kitalálása"), "kitalálás");});
test("kitalálásával -> kitalálás", function() {deepEqual( Stem("kitalálásával"), "kitalálás");});
test("kitaláló -> kitaláló", function() {deepEqual( Stem("kitaláló"), "kitaláló");});
test("kitanulni -> kitanuln", function() {deepEqual( Stem("kitanulni"), "kitanuln");});
test("kitanultam -> kitanult", function() {deepEqual( Stem("kitanultam"), "kitanult");});
test("kitanítani -> kitanítan", function() {deepEqual( Stem("kitanítani"), "kitanítan");});
test("kitapasztalni -> kitapasztaln", function() {deepEqual( Stem("kitapasztalni"), "kitapasztaln");});
test("kitapasztalta -> kitapasztalt", function() {deepEqual( Stem("kitapasztalta"), "kitapasztalt");});
test("kitapasztaltam -> kitapasztalt", function() {deepEqual( Stem("kitapasztaltam"), "kitapasztalt");});
test("kitaposniuk -> kitaposn", function() {deepEqual( Stem("kitaposniuk"), "kitaposn");});
test("kitaposott -> kitaposot", function() {deepEqual( Stem("kitaposott"), "kitaposot");});
test("kitart -> kitar", function() {deepEqual( Stem("kitart"), "kitar");});
test("kitartanak -> kitart", function() {deepEqual( Stem("kitartanak"), "kitart");});
test("kitartottak -> kitartott", function() {deepEqual( Stem("kitartottak"), "kitartott");});
test("kitartunk -> kitart", function() {deepEqual( Stem("kitartunk"), "kitart");});
test("kitartás -> kitartás", function() {deepEqual( Stem("kitartás"), "kitartás");});
test("kitartásra -> kitartás", function() {deepEqual( Stem("kitartásra"), "kitartás");});
test("kitartást -> kitartás", function() {deepEqual( Stem("kitartást"), "kitartás");});
test("kitartásuk -> kitartás", function() {deepEqual( Stem("kitartásuk"), "kitartás");});
test("kitartó -> kitartó", function() {deepEqual( Stem("kitartó"), "kitartó");});
test("kitartóak -> kitartó", function() {deepEqual( Stem("kitartóak"), "kitartó");});
test("kitartóan -> kitartó", function() {deepEqual( Stem("kitartóan"), "kitartó");});
test("kitartóbbak -> kitartóbb", function() {deepEqual( Stem("kitartóbbak"), "kitartóbb");});
test("kitartóknak -> kitartó", function() {deepEqual( Stem("kitartóknak"), "kitartó");});
test("kitaszít -> kitaszí", function() {deepEqual( Stem("kitaszít"), "kitaszí");});
test("kitegye -> kitegy", function() {deepEqual( Stem("kitegye"), "kitegy");});
test("kitegyen -> kitegy", function() {deepEqual( Stem("kitegyen"), "kitegy");});
test("kitegyék -> kitegye", function() {deepEqual( Stem("kitegyék"), "kitegye");});
test("kitehet -> kiteh", function() {deepEqual( Stem("kitehet"), "kiteh");});
test("kitekerni -> kitekern", function() {deepEqual( Stem("kitekerni"), "kitekern");});
test("kitelepítenek -> kitelepít", function() {deepEqual( Stem("kitelepítenek"), "kitelepít");});
test("kitelepítettek -> kitelepített", function() {deepEqual( Stem("kitelepítettek"), "kitelepített");});
test("kitelepítették -> kitelepítette", function() {deepEqual( Stem("kitelepítették"), "kitelepítette");});
test("kitelepítés -> kitelepítés", function() {deepEqual( Stem("kitelepítés"), "kitelepítés");});
test("kitelepítési -> kitelepítés", function() {deepEqual( Stem("kitelepítési"), "kitelepítés");});
test("kitelepült -> kitelepül", function() {deepEqual( Stem("kitelepült"), "kitelepül");});
test("kitelik -> kitel", function() {deepEqual( Stem("kitelik"), "kitel");});
test("kiteljesednek -> kiteljes", function() {deepEqual( Stem("kiteljesednek"), "kiteljes");});
test("kiteljesedése -> kiteljesedés", function() {deepEqual( Stem("kiteljesedése"), "kiteljesedés");});
test("kitenni -> kitenn", function() {deepEqual( Stem("kitenni"), "kitenn");});
test("kitennie -> kitenn", function() {deepEqual( Stem("kitennie"), "kitenn");});
test("kiterjedhet -> kiterjedh", function() {deepEqual( Stem("kiterjedhet"), "kiterjedh");});
test("kiterjedt -> kiterj", function() {deepEqual( Stem("kiterjedt"), "kiterj");});
test("kiterjedjen -> kiterjedj", function() {deepEqual( Stem("kiterjedjen"), "kiterjedj");});
test("kiterjednek -> kiterj", function() {deepEqual( Stem("kiterjednek"), "kiterj");});
test("kiterjedtebb -> kiterjedtebb", function() {deepEqual( Stem("kiterjedtebb"), "kiterjedtebb");});
test("kiterjedtek -> kiterjedt", function() {deepEqual( Stem("kiterjedtek"), "kiterjedt");});
test("kiterjedtségét -> kiterjedtség", function() {deepEqual( Stem("kiterjedtségét"), "kiterjedtség");});
test("kiterjedés -> kiterjedés", function() {deepEqual( Stem("kiterjedés"), "kiterjedés");});
test("kiterjedése -> kiterjedés", function() {deepEqual( Stem("kiterjedése"), "kiterjedés");});
test("kiterjedésének -> kiterjedés", function() {deepEqual( Stem("kiterjedésének"), "kiterjedés");});
test("kiterjedésével -> kiterjedés", function() {deepEqual( Stem("kiterjedésével"), "kiterjedés");});
test("kiterjedésű -> kiterjedésű", function() {deepEqual( Stem("kiterjedésű"), "kiterjedésű");});
test("kiterjedő -> kiterjedő", function() {deepEqual( Stem("kiterjedő"), "kiterjedő");});
test("kiterjedően -> kiterjedő", function() {deepEqual( Stem("kiterjedően"), "kiterjedő");});
test("kiterjeszkedni -> kiterjeszkedn", function() {deepEqual( Stem("kiterjeszkedni"), "kiterjeszkedn");});
test("kiterjesztett -> kiterjesztet", function() {deepEqual( Stem("kiterjesztett"), "kiterjesztet");});
test("kiterjesztette -> kiterjesztett", function() {deepEqual( Stem("kiterjesztette"), "kiterjesztett");});
test("kiterjeszteni -> kiterjeszten", function() {deepEqual( Stem("kiterjeszteni"), "kiterjeszten");});
test("kiterjesztettük -> kiterjesztett", function() {deepEqual( Stem("kiterjesztettük"), "kiterjesztett");});
test("kiterjessze -> kiterjessz", function() {deepEqual( Stem("kiterjessze"), "kiterjessz");});
test("kiterjeszthetjük -> kiterjeszthet", function() {deepEqual( Stem("kiterjeszthetjük"), "kiterjeszthet");});
test("kiterjeszthetőségét -> kiterjeszthetőség", function() {deepEqual( Stem("kiterjeszthetőségét"), "kiterjeszthetőség");});
test("kiterjeszti -> kiterjeszt", function() {deepEqual( Stem("kiterjeszti"), "kiterjeszt");});
test("kiterjesztik -> kiterjeszt", function() {deepEqual( Stem("kiterjesztik"), "kiterjeszt");});
test("kiterjesztés -> kiterjesztés", function() {deepEqual( Stem("kiterjesztés"), "kiterjesztés");});
test("kiterjesztésből -> kiterjesztés", function() {deepEqual( Stem("kiterjesztésből"), "kiterjesztés");});
test("kiterjesztése -> kiterjesztés", function() {deepEqual( Stem("kiterjesztése"), "kiterjesztés");});
test("kiterjesztésekor -> kiterjesztés", function() {deepEqual( Stem("kiterjesztésekor"), "kiterjesztés");});
test("kiterjesztésnek -> kiterjesztés", function() {deepEqual( Stem("kiterjesztésnek"), "kiterjesztés");});
test("kiterjesztéssel -> kiterjesztés", function() {deepEqual( Stem("kiterjesztéssel"), "kiterjesztés");});
test("kiterjesztést -> kiterjesztés", function() {deepEqual( Stem("kiterjesztést"), "kiterjesztés");});
test("kiterjesztéséhez -> kiterjesztés", function() {deepEqual( Stem("kiterjesztéséhez"), "kiterjesztés");});
test("kiterjesztésének -> kiterjesztés", function() {deepEqual( Stem("kiterjesztésének"), "kiterjesztés");});
test("kiterjesztésére -> kiterjesztés", function() {deepEqual( Stem("kiterjesztésére"), "kiterjesztés");});
test("kiterjesztését -> kiterjesztés", function() {deepEqual( Stem("kiterjesztését"), "kiterjesztés");});
test("kiterjesztésű -> kiterjesztésű", function() {deepEqual( Stem("kiterjesztésű"), "kiterjesztésű");});
test("kiterjesztő -> kiterjesztő", function() {deepEqual( Stem("kiterjesztő"), "kiterjesztő");});
test("kiterjesztően -> kiterjesztő", function() {deepEqual( Stem("kiterjesztően"), "kiterjesztő");});
test("kiterjesztőleg -> kiterjesztőleg", function() {deepEqual( Stem("kiterjesztőleg"), "kiterjesztőleg");});
test("kitermelt -> kitermel", function() {deepEqual( Stem("kitermelt"), "kitermel");});
test("kitermelte -> kitermelt", function() {deepEqual( Stem("kitermelte"), "kitermelt");});
test("kitermelés -> kitermelés", function() {deepEqual( Stem("kitermelés"), "kitermelés");});
test("kitermelése -> kitermelés", function() {deepEqual( Stem("kitermelése"), "kitermelés");});
test("kitermelési -> kitermelés", function() {deepEqual( Stem("kitermelési"), "kitermelés");});
test("kitervelt -> kitervel", function() {deepEqual( Stem("kitervelt"), "kitervel");});
test("kiterveltem -> kitervelt", function() {deepEqual( Stem("kiterveltem"), "kitervelt");});
test("kitervezett -> kitervezet", function() {deepEqual( Stem("kitervezett"), "kitervezet");});
test("kitervezésén -> kitervezés", function() {deepEqual( Stem("kitervezésén"), "kitervezés");});
test("kitessékelték -> kitessékelte", function() {deepEqual( Stem("kitessékelték"), "kitessékelte");});
test("kitetszik -> kitetsz", function() {deepEqual( Stem("kitetszik"), "kitetsz");});
test("kitett -> kitet", function() {deepEqual( Stem("kitett"), "kitet");});
test("kiteszi -> kitesz", function() {deepEqual( Stem("kiteszi"), "kitesz");});
test("kitette -> kitett", function() {deepEqual( Stem("kitette"), "kitett");});
test("kitettem -> kitett", function() {deepEqual( Stem("kitettem"), "kitett");});
test("kitettük -> kitett", function() {deepEqual( Stem("kitettük"), "kitett");});
test("kitettünk -> kitett", function() {deepEqual( Stem("kitettünk"), "kitett");});
test("kitettség -> kitettség", function() {deepEqual( Stem("kitettség"), "kitettség");});
test("kitevő -> kitevő", function() {deepEqual( Stem("kitevő"), "kitevő");});
test("kitiltották -> kitiltotta", function() {deepEqual( Stem("kitiltották"), "kitiltotta");});
test("kitiport -> kitipor", function() {deepEqual( Stem("kitiport"), "kitipor");});
test("kitisztult -> kitisztul", function() {deepEqual( Stem("kitisztult"), "kitisztul");});
test("kitisztítottak -> kitisztított", function() {deepEqual( Stem("kitisztítottak"), "kitisztított");});
test("kitisztítson -> kitisztíts", function() {deepEqual( Stem("kitisztítson"), "kitisztíts");});
test("kitolja -> kitol", function() {deepEqual( Stem("kitolja"), "kitol");});
test("kitolni -> kitoln", function() {deepEqual( Stem("kitolni"), "kitoln");});
test("kitoltam -> kitolt", function() {deepEqual( Stem("kitoltam"), "kitolt");});
test("kitoloncolják -> kitoloncolja", function() {deepEqual( Stem("kitoloncolják"), "kitoloncolja");});
test("kitoloncolni -> kitoloncoln", function() {deepEqual( Stem("kitoloncolni"), "kitoloncoln");});
test("kitolódott -> kitolódot", function() {deepEqual( Stem("kitolódott"), "kitolódot");});
test("kitombolhattuk -> kitombolhatt", function() {deepEqual( Stem("kitombolhattuk"), "kitombolhatt");});
test("kitombolta -> kitombolt", function() {deepEqual( Stem("kitombolta"), "kitombolt");});
test("kitágultak -> kitágult", function() {deepEqual( Stem("kitágultak"), "kitágult");});
test("kitálalta -> kitálalt", function() {deepEqual( Stem("kitálalta"), "kitálalt");});
test("kitáncolok -> kitáncol", function() {deepEqual( Stem("kitáncolok"), "kitáncol");});
test("kitárta -> kitárt", function() {deepEqual( Stem("kitárta"), "kitárt");});
test("kitárult -> kitárul", function() {deepEqual( Stem("kitárult"), "kitárul");});
test("kitépett -> kitépet", function() {deepEqual( Stem("kitépett"), "kitépet");});
test("kitépi -> kitép", function() {deepEqual( Stem("kitépi"), "kitép");});
test("kitépje -> kitép", function() {deepEqual( Stem("kitépje"), "kitép");});
test("kitépte -> kitépt", function() {deepEqual( Stem("kitépte"), "kitépt");});
test("kitépték -> kitépte", function() {deepEqual( Stem("kitépték"), "kitépte");});
test("kitér -> kitér", function() {deepEqual( Stem("kitér"), "kitér");});
test("kitérni -> kitérn", function() {deepEqual( Stem("kitérni"), "kitérn");});
test("kitért -> kit", function() {deepEqual( Stem("kitért"), "kit");});
test("kitérve -> kitérv", function() {deepEqual( Stem("kitérve"), "kitérv");});
test("kitérő -> kitérő", function() {deepEqual( Stem("kitérő"), "kitérő");});
test("kitérők -> kitérő", function() {deepEqual( Stem("kitérők"), "kitérő");});
test("kitérőt -> kitérő", function() {deepEqual( Stem("kitérőt"), "kitérő");});
test("kitérőleg -> kitérőleg", function() {deepEqual( Stem("kitérőleg"), "kitérőleg");});
test("kitétel -> kitétel", function() {deepEqual( Stem("kitétel"), "kitétel");});
test("kitételei -> kitétel", function() {deepEqual( Stem("kitételei"), "kitétel");});
test("kitételek -> kitétel", function() {deepEqual( Stem("kitételek"), "kitétel");});
test("kitételt -> kitétel", function() {deepEqual( Stem("kitételt"), "kitétel");});
test("kitéve -> kitév", function() {deepEqual( Stem("kitéve"), "kitév");});
test("kitódult -> kitódul", function() {deepEqual( Stem("kitódult"), "kitódul");});
test("kitólni -> kitóln", function() {deepEqual( Stem("kitólni"), "kitóln");});
test("kitöltenek -> kitölt", function() {deepEqual( Stem("kitöltenek"), "kitölt");});
test("kitölteni -> kitölten", function() {deepEqual( Stem("kitölteni"), "kitölten");});
test("kitölti -> kitölt", function() {deepEqual( Stem("kitölti"), "kitölt");});
test("kitöltjük -> kitölt", function() {deepEqual( Stem("kitöltjük"), "kitölt");});
test("kitöltetlen -> kitöltetl", function() {deepEqual( Stem("kitöltetlen"), "kitöltetl");});
test("kitöltetlensége -> kitöltetlenség", function() {deepEqual( Stem("kitöltetlensége"), "kitöltetlenség");});
test("kitöltve -> kitöltv", function() {deepEqual( Stem("kitöltve"), "kitöltv");});
test("kitöltése -> kitöltés", function() {deepEqual( Stem("kitöltése"), "kitöltés");});
test("kitöltésében -> kitöltés", function() {deepEqual( Stem("kitöltésében"), "kitöltés");});
test("kitöltésén -> kitöltés", function() {deepEqual( Stem("kitöltésén"), "kitöltés");});
test("kitöltésére -> kitöltés", function() {deepEqual( Stem("kitöltésére"), "kitöltés");});
test("kitöltését -> kitöltés", function() {deepEqual( Stem("kitöltését"), "kitöltés");});
test("kitöltésével -> kitöltés", function() {deepEqual( Stem("kitöltésével"), "kitöltés");});
test("kitöltögetni -> kitöltögetn", function() {deepEqual( Stem("kitöltögetni"), "kitöltögetn");});
test("kitöltött -> kitöltöt", function() {deepEqual( Stem("kitöltött"), "kitöltöt");});
test("kitöltötte -> kitöltött", function() {deepEqual( Stem("kitöltötte"), "kitöltött");});
test("kitöltöttem -> kitöltött", function() {deepEqual( Stem("kitöltöttem"), "kitöltött");});
test("kitöltötték -> kitöltötte", function() {deepEqual( Stem("kitöltötték"), "kitöltötte");});
test("kitömve -> kitömv", function() {deepEqual( Stem("kitömve"), "kitömv");});
test("kitömött -> kitömöt", function() {deepEqual( Stem("kitömött"), "kitömöt");});
test("kitörhetett -> kitörhetet", function() {deepEqual( Stem("kitörhetett"), "kitörhetet");});
test("kitörik -> kitör", function() {deepEqual( Stem("kitörik"), "kitör");});
test("kitör -> kitör", function() {deepEqual( Stem("kitör"), "kitör");});
test("kitörtek -> kitört", function() {deepEqual( Stem("kitörtek"), "kitört");});
test("kitörtem -> kitört", function() {deepEqual( Stem("kitörtem"), "kitört");});
test("kitört -> kitör", function() {deepEqual( Stem("kitört"), "kitör");});
test("kitörve -> kitörv", function() {deepEqual( Stem("kitörve"), "kitörv");});
test("kitörési -> kitörés", function() {deepEqual( Stem("kitörési"), "kitörés");});
test("kitörés -> kitörés", function() {deepEqual( Stem("kitörés"), "kitörés");});
test("kitörése -> kitörés", function() {deepEqual( Stem("kitörése"), "kitörés");});
test("kitörésre -> kitörés", function() {deepEqual( Stem("kitörésre"), "kitörés");});
test("kitörést -> kitörés", function() {deepEqual( Stem("kitörést"), "kitörés");});
test("kitörésének -> kitörés", function() {deepEqual( Stem("kitörésének"), "kitörés");});
test("kitörését -> kitörés", function() {deepEqual( Stem("kitörését"), "kitörés");});
test("kitörésével -> kitörés", function() {deepEqual( Stem("kitörésével"), "kitörés");});
test("kitörő -> kitörő", function() {deepEqual( Stem("kitörő"), "kitörő");});
test("kitörölhetné -> kitörölhetn", function() {deepEqual( Stem("kitörölhetné"), "kitörölhetn");});
test("kitörölhető -> kitörölhető", function() {deepEqual( Stem("kitörölhető"), "kitörölhető");});
test("kitörölje -> kitöröl", function() {deepEqual( Stem("kitörölje"), "kitöröl");});
test("kitörli -> kitörl", function() {deepEqual( Stem("kitörli"), "kitörl");});
test("kitörölnek -> kitöröl", function() {deepEqual( Stem("kitörölnek"), "kitöröl");});
test("kitörölni -> kitöröln", function() {deepEqual( Stem("kitörölni"), "kitöröln");});
test("kitörölné -> kitöröln", function() {deepEqual( Stem("kitörölné"), "kitöröln");});
test("kitöröltem -> kitörölt", function() {deepEqual( Stem("kitöröltem"), "kitörölt");});
test("kitörölt -> kitöröl", function() {deepEqual( Stem("kitörölt"), "kitöröl");});
test("kitűnik -> kitűn", function() {deepEqual( Stem("kitűnik"), "kitűn");});
test("kitűnjön -> kitűnj", function() {deepEqual( Stem("kitűnjön"), "kitűnj");});
test("kitűnnek -> kitűn", function() {deepEqual( Stem("kitűnnek"), "kitűn");});
test("kitűnnie -> kitűnn", function() {deepEqual( Stem("kitűnnie"), "kitűnn");});
test("kitűnt -> kitűn", function() {deepEqual( Stem("kitűnt"), "kitűn");});
test("kitűnő -> kitűnő", function() {deepEqual( Stem("kitűnő"), "kitűnő");});
test("kitűnően -> kitűnő", function() {deepEqual( Stem("kitűnően"), "kitűnő");});
test("kitűnőnek -> kitűnő", function() {deepEqual( Stem("kitűnőnek"), "kitűnő");});
test("kitűzni -> kitűzn", function() {deepEqual( Stem("kitűzni"), "kitűzn");});
test("kitűztem -> kitűzt", function() {deepEqual( Stem("kitűztem"), "kitűzt");});
test("kitűztük -> kitűzt", function() {deepEqual( Stem("kitűztük"), "kitűzt");});
test("kitűzve -> kitűzv", function() {deepEqual( Stem("kitűzve"), "kitűzv");});
test("kitűzését -> kitűzés", function() {deepEqual( Stem("kitűzését"), "kitűzés");});
test("kitűzésével -> kitűzés", function() {deepEqual( Stem("kitűzésével"), "kitűzés");});
test("kitűző -> kitűző", function() {deepEqual( Stem("kitűző"), "kitűző");});
test("kitűzők -> kitűző", function() {deepEqual( Stem("kitűzők"), "kitűző");});
test("kitűzőként -> kitűző", function() {deepEqual( Stem("kitűzőként"), "kitűző");});
test("kitűzött -> kitűzöt", function() {deepEqual( Stem("kitűzött"), "kitűzöt");});
test("kitüntesse -> kitüntess", function() {deepEqual( Stem("kitüntesse"), "kitüntess");});
test("kitüntetett -> kitüntetet", function() {deepEqual( Stem("kitüntetett"), "kitüntetet");});
test("kitüntetetteknek -> kitüntetett", function() {deepEqual( Stem("kitüntetetteknek"), "kitüntetett");});
test("kitüntetettje -> kitüntetett", function() {deepEqual( Stem("kitüntetettje"), "kitüntetett");});
test("kitüntették -> kitüntette", function() {deepEqual( Stem("kitüntették"), "kitüntette");});
test("kitüntetés -> kitüntetés", function() {deepEqual( Stem("kitüntetés"), "kitüntetés");});
test("kitüntetéseit -> kitüntetés", function() {deepEqual( Stem("kitüntetéseit"), "kitüntetés");});
test("kitüntetéseket -> kitüntetés", function() {deepEqual( Stem("kitüntetéseket"), "kitüntetés");});
test("kitüntetést -> kitüntetés", function() {deepEqual( Stem("kitüntetést"), "kitüntetés");});
test("kitüntető -> kitüntető", function() {deepEqual( Stem("kitüntető"), "kitüntető");});
test("kiugrott -> kiugrot", function() {deepEqual( Stem("kiugrott"), "kiugrot");});
test("kiugorjon -> kiugorj", function() {deepEqual( Stem("kiugorjon"), "kiugorj");});
test("kiugrani -> kiugran", function() {deepEqual( Stem("kiugrani"), "kiugran");});
test("kiugrottak -> kiugrott", function() {deepEqual( Stem("kiugrottak"), "kiugrott");});
test("kiugrottunk -> kiugrott", function() {deepEqual( Stem("kiugrottunk"), "kiugrott");});
test("kiugrik -> kiugr", function() {deepEqual( Stem("kiugrik"), "kiugr");});
test("kiugró -> kiugró", function() {deepEqual( Stem("kiugró"), "kiugró");});
test("kiugróan -> kiugró", function() {deepEqual( Stem("kiugróan"), "kiugró");});
test("kiutal -> kiutal", function() {deepEqual( Stem("kiutal"), "kiutal");});
test("kiutalás -> kiutalás", function() {deepEqual( Stem("kiutalás"), "kiutalás");});
test("kiutat -> kiut", function() {deepEqual( Stem("kiutat"), "kiut");});
test("kiutakat -> kiut", function() {deepEqual( Stem("kiutakat"), "kiut");});
test("kiút -> kiú", function() {deepEqual( Stem("kiút"), "kiú");});
test("kiutazó -> kiutazó", function() {deepEqual( Stem("kiutazó"), "kiutazó");});
test("kiutálják -> kiutálja", function() {deepEqual( Stem("kiutálják"), "kiutálja");});
test("kiuzsorázzák -> kiuzsorázza", function() {deepEqual( Stem("kiuzsorázzák"), "kiuzsorázza");});
test("kivan -> kiv", function() {deepEqual( Stem("kivan"), "kiv");});
test("kivehető -> kivehető", function() {deepEqual( Stem("kivehető"), "kivehető");});
test("kivehetők -> kivehető", function() {deepEqual( Stem("kivehetők"), "kivehető");});
test("kiverjük -> kiver", function() {deepEqual( Stem("kiverjük"), "kiver");});
test("kivernie -> kivern", function() {deepEqual( Stem("kivernie"), "kivern");});
test("kiverte -> kivert", function() {deepEqual( Stem("kiverte"), "kivert");});
test("kiverték -> kiverte", function() {deepEqual( Stem("kiverték"), "kiverte");});
test("kivesz -> kivesz", function() {deepEqual( Stem("kivesz"), "kivesz");});
test("kiveszek -> kivesz", function() {deepEqual( Stem("kiveszek"), "kivesz");});
test("kiveszem -> kivesz", function() {deepEqual( Stem("kiveszem"), "kivesz");});
test("kiveszi -> kivesz", function() {deepEqual( Stem("kiveszi"), "kivesz");});
test("kiveszik -> kivesz", function() {deepEqual( Stem("kiveszik"), "kivesz");});
test("kivenni -> kivenn", function() {deepEqual( Stem("kivenni"), "kivenn");});
test("kivegyem -> kivegy", function() {deepEqual( Stem("kivegyem"), "kivegy");});
test("kivenné -> kiven", function() {deepEqual( Stem("kivenné"), "kiven");});
test("kiveszett -> kiveszet", function() {deepEqual( Stem("kiveszett"), "kiveszet");});
test("kivetett -> kivetet", function() {deepEqual( Stem("kivetett"), "kivetet");});
test("kivetkőzőben -> kivetkőző", function() {deepEqual( Stem("kivetkőzőben"), "kivetkőző");});
test("kivetnivalót -> kivetnivaló", function() {deepEqual( Stem("kivetnivalót"), "kivetnivaló");});
test("kivette -> kivett", function() {deepEqual( Stem("kivette"), "kivett");});
test("kivettek -> kivett", function() {deepEqual( Stem("kivettek"), "kivett");});
test("kivettem -> kivett", function() {deepEqual( Stem("kivettem"), "kivett");});
test("kivették -> kivette", function() {deepEqual( Stem("kivették"), "kivette");});
test("kivettük -> kivett", function() {deepEqual( Stem("kivettük"), "kivett");});
test("kivettünk -> kivett", function() {deepEqual( Stem("kivettünk"), "kivett");});
test("kivetítve -> kivetítv", function() {deepEqual( Stem("kivetítve"), "kivetítv");});
test("kivetítők -> kivetítő", function() {deepEqual( Stem("kivetítők"), "kivetítő");});
test("kivetítővásznon -> kivetítővászn", function() {deepEqual( Stem("kivetítővásznon"), "kivetítővászn");});
test("kivezetett -> kivezetet", function() {deepEqual( Stem("kivezetett"), "kivezetet");});
test("kivezettem -> kivezett", function() {deepEqual( Stem("kivezettem"), "kivezett");});
test("kivezették -> kivezette", function() {deepEqual( Stem("kivezették"), "kivezette");});
test("kivezető -> kivezető", function() {deepEqual( Stem("kivezető"), "kivezető");});
test("kivicsorította -> kivicsorított", function() {deepEqual( Stem("kivicsorította"), "kivicsorított");});
test("kividult -> kividul", function() {deepEqual( Stem("kividult"), "kividul");});
test("kivigyen -> kivigy", function() {deepEqual( Stem("kivigyen"), "kivigy");});
test("kivihető -> kivihető", function() {deepEqual( Stem("kivihető"), "kivihető");});
test("kivilágított -> kivilágítot", function() {deepEqual( Stem("kivilágított"), "kivilágítot");});
test("kivilágítva -> kivilágítv", function() {deepEqual( Stem("kivilágítva"), "kivilágítv");});
test("kivinni -> kivinn", function() {deepEqual( Stem("kivinni"), "kivinn");});
test("kivisszük -> kivissz", function() {deepEqual( Stem("kivisszük"), "kivissz");});
test("kiviszik -> kivisz", function() {deepEqual( Stem("kiviszik"), "kivisz");});
test("kivitte -> kivitt", function() {deepEqual( Stem("kivitte"), "kivitt");});
test("kivittek -> kivitt", function() {deepEqual( Stem("kivittek"), "kivitt");});
test("kivittem -> kivitt", function() {deepEqual( Stem("kivittem"), "kivitt");});
test("kivitték -> kivitte", function() {deepEqual( Stem("kivitték"), "kivitte");});
test("kivittük -> kivitt", function() {deepEqual( Stem("kivittük"), "kivitt");});
test("kivitelezhetetlen -> kivitelezhetetl", function() {deepEqual( Stem("kivitelezhetetlen"), "kivitelezhetetl");});
test("kivitelezhető -> kivitelezhető", function() {deepEqual( Stem("kivitelezhető"), "kivitelezhető");});
test("kivitelezhetőnek -> kivitelezhető", function() {deepEqual( Stem("kivitelezhetőnek"), "kivitelezhető");});
test("kivitelezni -> kivitelezn", function() {deepEqual( Stem("kivitelezni"), "kivitelezn");});
test("kivitelezés -> kivitelezés", function() {deepEqual( Stem("kivitelezés"), "kivitelezés");});
test("kivitelezése -> kivitelezés", function() {deepEqual( Stem("kivitelezése"), "kivitelezés");});
test("kivitelezésen -> kivitelezés", function() {deepEqual( Stem("kivitelezésen"), "kivitelezés");});
test("kivitelezést -> kivitelezés", function() {deepEqual( Stem("kivitelezést"), "kivitelezés");});
test("kivitelezésének -> kivitelezés", function() {deepEqual( Stem("kivitelezésének"), "kivitelezés");});
test("kivitelező -> kivitelező", function() {deepEqual( Stem("kivitelező"), "kivitelező");});
test("kiviteli -> kivitel", function() {deepEqual( Stem("kiviteli"), "kivitel");});
test("kivitelnél -> kivitel", function() {deepEqual( Stem("kivitelnél"), "kivitel");});
test("kivitel -> kivitel", function() {deepEqual( Stem("kivitel"), "kivitel");});
test("kivitelben -> kivitel", function() {deepEqual( Stem("kivitelben"), "kivitel");});
test("kivitelre -> kivitel", function() {deepEqual( Stem("kivitelre"), "kivitel");});
test("kivitelében -> kivitel", function() {deepEqual( Stem("kivitelében"), "kivitel");});
test("kivitelének -> kivitel", function() {deepEqual( Stem("kivitelének"), "kivitel");});
test("kivitelű -> kivitelű", function() {deepEqual( Stem("kivitelű"), "kivitelű");});
test("kivitelűt -> kivitelű", function() {deepEqual( Stem("kivitelűt"), "kivitelű");});
test("kivitt -> kivit", function() {deepEqual( Stem("kivitt"), "kivit");});
test("kivizsgálása -> kivizsgálás", function() {deepEqual( Stem("kivizsgálása"), "kivizsgálás");});
test("kivizsgálását -> kivizsgálás", function() {deepEqual( Stem("kivizsgálását"), "kivizsgálás");});
test("kivizsgáló -> kivizsgáló", function() {deepEqual( Stem("kivizsgáló"), "kivizsgáló");});
test("kivoltam -> kivolt", function() {deepEqual( Stem("kivoltam"), "kivolt");});
test("kivonat -> kivon", function() {deepEqual( Stem("kivonat"), "kivon");});
test("kivonata -> kivonat", function() {deepEqual( Stem("kivonata"), "kivonat");});
test("kivonatai -> kivonat", function() {deepEqual( Stem("kivonatai"), "kivonat");});
test("kivonatait -> kivonat", function() {deepEqual( Stem("kivonatait"), "kivonat");});
test("kivonatnyomtatási -> kivonatnyomtatás", function() {deepEqual( Stem("kivonatnyomtatási"), "kivonatnyomtatás");});
test("kivonatos -> kivonatos", function() {deepEqual( Stem("kivonatos"), "kivonatos");});
test("kivonatot -> kivonat", function() {deepEqual( Stem("kivonatot"), "kivonat");});
test("kivonatának -> kivonat", function() {deepEqual( Stem("kivonatának"), "kivonat");});
test("kivonatát -> kivonat", function() {deepEqual( Stem("kivonatát"), "kivonat");});
test("kivonatért -> kivonat", function() {deepEqual( Stem("kivonatért"), "kivonat");});
test("kivonható -> kivonható", function() {deepEqual( Stem("kivonható"), "kivonható");});
test("kivonja -> kivon", function() {deepEqual( Stem("kivonja"), "kivon");});
test("kivonják -> kivonja", function() {deepEqual( Stem("kivonják"), "kivonja");});
test("kivonni -> kivonn", function() {deepEqual( Stem("kivonni"), "kivonn");});
test("kivonta -> kivont", function() {deepEqual( Stem("kivonta"), "kivont");});
test("kivont -> kivon", function() {deepEqual( Stem("kivont"), "kivon");});
test("kivontatni -> kivontatn", function() {deepEqual( Stem("kivontatni"), "kivontatn");});
test("kivonul -> kivon", function() {deepEqual( Stem("kivonul"), "kivon");});
test("kivonulna -> kivonuln", function() {deepEqual( Stem("kivonulna"), "kivonuln");});
test("kivonulni -> kivonuln", function() {deepEqual( Stem("kivonulni"), "kivonuln");});
test("kivonultak -> kivonult", function() {deepEqual( Stem("kivonultak"), "kivonult");});
test("kivonultunk -> kivonult", function() {deepEqual( Stem("kivonultunk"), "kivonult");});
test("kivonult -> kivonul", function() {deepEqual( Stem("kivonult"), "kivonul");});
test("kivonulás -> kivonulás", function() {deepEqual( Stem("kivonulás"), "kivonulás");});
test("kivonulása -> kivonulás", function() {deepEqual( Stem("kivonulása"), "kivonulás");});
test("kivonulást -> kivonulás", function() {deepEqual( Stem("kivonulást"), "kivonulás");});
test("kivonulásának -> kivonulás", function() {deepEqual( Stem("kivonulásának"), "kivonulás");});
test("kivonuló -> kivonuló", function() {deepEqual( Stem("kivonuló"), "kivonuló");});
test("kivonása -> kivonás", function() {deepEqual( Stem("kivonása"), "kivonás");});
test("kivonásra -> kivonás", function() {deepEqual( Stem("kivonásra"), "kivonás");});
test("kivágjuk -> kivág", function() {deepEqual( Stem("kivágjuk"), "kivág");});
test("kivágni -> kivágn", function() {deepEqual( Stem("kivágni"), "kivágn");});
test("kivágta -> kivágt", function() {deepEqual( Stem("kivágta"), "kivágt");});
test("kivágtuk -> kivágt", function() {deepEqual( Stem("kivágtuk"), "kivágt");});
test("kivágták -> kivágta", function() {deepEqual( Stem("kivágták"), "kivágta");});
test("kivágott -> kivágot", function() {deepEqual( Stem("kivágott"), "kivágot");});
test("kivágása -> kivágás", function() {deepEqual( Stem("kivágása"), "kivágás");});
test("kivágására -> kivágás", function() {deepEqual( Stem("kivágására"), "kivágás");});
test("kiválasztani -> kiválasztan", function() {deepEqual( Stem("kiválasztani"), "kiválasztan");});
test("kiválasztania -> kiválasztan", function() {deepEqual( Stem("kiválasztania"), "kiválasztan");});
test("kiválasztanunk -> kiválasztan", function() {deepEqual( Stem("kiválasztanunk"), "kiválasztan");});
test("kiválasztja -> kiválaszt", function() {deepEqual( Stem("kiválasztja"), "kiválaszt");});
test("kiválaszthatja -> kiválaszthat", function() {deepEqual( Stem("kiválaszthatja"), "kiválaszthat");});
test("kiválaszthatjuk -> kiválaszthat", function() {deepEqual( Stem("kiválaszthatjuk"), "kiválaszthat");});
test("kiválasztható -> kiválasztható", function() {deepEqual( Stem("kiválasztható"), "kiválasztható");});
test("kiválasztott -> kiválasztot", function() {deepEqual( Stem("kiválasztott"), "kiválasztot");});
test("kiválasztotta -> kiválasztott", function() {deepEqual( Stem("kiválasztotta"), "kiválasztott");});
test("kiválasztottam -> kiválasztott", function() {deepEqual( Stem("kiválasztottam"), "kiválasztott");});
test("kiválasztottuk -> kiválasztott", function() {deepEqual( Stem("kiválasztottuk"), "kiválasztott");});
test("kiválasztottunk -> kiválasztott", function() {deepEqual( Stem("kiválasztottunk"), "kiválasztott");});
test("kiválasztottakba -> kiválasztott", function() {deepEqual( Stem("kiválasztottakba"), "kiválasztott");});
test("kiválasztottnak -> kiválasztott", function() {deepEqual( Stem("kiválasztottnak"), "kiválasztott");});
test("kiválasztva -> kiválasztv", function() {deepEqual( Stem("kiválasztva"), "kiválasztv");});
test("kiválasztás -> kiválasztás", function() {deepEqual( Stem("kiválasztás"), "kiválasztás");});
test("kiválasztása -> kiválasztás", function() {deepEqual( Stem("kiválasztása"), "kiválasztás");});
test("kiválasztása -> kiválasztás", function() {deepEqual( Stem("kiválasztása"), "kiválasztás");});
test("kiválasztásakor -> kiválasztás", function() {deepEqual( Stem("kiválasztásakor"), "kiválasztás");});
test("kiválasztáskor -> kiválasztás", function() {deepEqual( Stem("kiválasztáskor"), "kiválasztás");});
test("kiválasztásnál -> kiválasztás", function() {deepEqual( Stem("kiválasztásnál"), "kiválasztás");});
test("kiválasztásra -> kiválasztás", function() {deepEqual( Stem("kiválasztásra"), "kiválasztás");});
test("kiválasztást -> kiválasztás", function() {deepEqual( Stem("kiválasztást"), "kiválasztás");});
test("kiválasztásába -> kiválasztás", function() {deepEqual( Stem("kiválasztásába"), "kiválasztás");});
test("kiválasztásában -> kiválasztás", function() {deepEqual( Stem("kiválasztásában"), "kiválasztás");});
test("kiválasztására -> kiválasztás", function() {deepEqual( Stem("kiválasztására"), "kiválasztás");});
test("kiválasztásáról -> kiválasztás", function() {deepEqual( Stem("kiválasztásáról"), "kiválasztás");});
test("kiválasztását -> kiválasztás", function() {deepEqual( Stem("kiválasztását"), "kiválasztás");});
test("kiválasztó -> kiválasztó", function() {deepEqual( Stem("kiválasztó"), "kiválasztó");});
test("kiválasztódás -> kiválasztódás", function() {deepEqual( Stem("kiválasztódás"), "kiválasztódás");});
test("kiválhatott -> kiválhatot", function() {deepEqual( Stem("kiválhatott"), "kiválhatot");});
test("kiválik -> kivál", function() {deepEqual( Stem("kiválik"), "kivál");});
test("kiváljanak -> kivál", function() {deepEqual( Stem("kiváljanak"), "kivál");});
test("kiválnak -> kivál", function() {deepEqual( Stem("kiválnak"), "kivál");});
test("kiválni -> kiváln", function() {deepEqual( Stem("kiválni"), "kiváln");});
test("kiválogatni -> kiválogatn", function() {deepEqual( Stem("kiválogatni"), "kiválogatn");});
test("kivált -> kivál", function() {deepEqual( Stem("kivált"), "kivál");});
test("kiváltani -> kiváltan", function() {deepEqual( Stem("kiváltani"), "kiváltan");});
test("kiváltania -> kiváltan", function() {deepEqual( Stem("kiváltania"), "kiváltan");});
test("kiváltja -> kivált", function() {deepEqual( Stem("kiváltja"), "kivált");});
test("kiváltotta -> kiváltott", function() {deepEqual( Stem("kiváltotta"), "kiváltott");});
test("kiválthattuk -> kiválthatt", function() {deepEqual( Stem("kiválthattuk"), "kiválthatt");});
test("kiváltható -> kiváltható", function() {deepEqual( Stem("kiváltható"), "kiváltható");});
test("kiválthatóak -> kiváltható", function() {deepEqual( Stem("kiválthatóak"), "kiváltható");});
test("kiváltott -> kiváltot", function() {deepEqual( Stem("kiváltott"), "kiváltot");});
test("kiváltság -> kiváltság", function() {deepEqual( Stem("kiváltság"), "kiváltság");});
test("kiváltságképpen -> kiváltság", function() {deepEqual( Stem("kiváltságképpen"), "kiváltság");});
test("kiváltságos -> kiváltságos", function() {deepEqual( Stem("kiváltságos"), "kiváltságos");});
test("kiváltságosok -> kiváltságos", function() {deepEqual( Stem("kiváltságosok"), "kiváltságos");});
test("kiváltságosok -> kiváltságos", function() {deepEqual( Stem("kiváltságosok"), "kiváltságos");});
test("kiváltságunk -> kiváltság", function() {deepEqual( Stem("kiváltságunk"), "kiváltság");});
test("kiváltságának -> kiváltság", function() {deepEqual( Stem("kiváltságának"), "kiváltság");});
test("kiváltása -> kiváltás", function() {deepEqual( Stem("kiváltása"), "kiváltás");});
test("kiváltására -> kiváltás", function() {deepEqual( Stem("kiváltására"), "kiváltás");});
test("kiváltásával -> kiváltás", function() {deepEqual( Stem("kiváltásával"), "kiváltás");});
test("kiváltó -> kiváltó", function() {deepEqual( Stem("kiváltó"), "kiváltó");});
test("kiváltója -> kiváltó", function() {deepEqual( Stem("kiváltója"), "kiváltó");});
test("kiválás -> kiválás", function() {deepEqual( Stem("kiválás"), "kiválás");});
test("kiválása -> kiválás", function() {deepEqual( Stem("kiválása"), "kiválás");});
test("kiválásnál -> kiválás", function() {deepEqual( Stem("kiválásnál"), "kiválás");});
test("kiválással -> kiválás", function() {deepEqual( Stem("kiválással"), "kiválás");});
test("kiválást -> kiválás", function() {deepEqual( Stem("kiválást"), "kiválás");});
test("kiválásáról -> kiválás", function() {deepEqual( Stem("kiválásáról"), "kiválás");});
test("kiválásától -> kiválás", function() {deepEqual( Stem("kiválásától"), "kiválás");});
test("kiváló -> kiváló", function() {deepEqual( Stem("kiváló"), "kiváló");});
test("kiválóan -> kiváló", function() {deepEqual( Stem("kiválóan"), "kiváló");});
test("kiválót -> kiváló", function() {deepEqual( Stem("kiválót"), "kiváló");});
test("kiválóság -> kiválóság", function() {deepEqual( Stem("kiválóság"), "kiválóság");});
test("kiválóságokból -> kiválóság", function() {deepEqual( Stem("kiválóságokból"), "kiválóság");});
test("kiválóságának -> kiválóság", function() {deepEqual( Stem("kiválóságának"), "kiválóság");});
test("kiván -> kiv", function() {deepEqual( Stem("kiván"), "kiv");});
test("kivándorolt -> kivándorol", function() {deepEqual( Stem("kivándorolt"), "kivándorol");});
test("kivánszorgok -> kivánszorg", function() {deepEqual( Stem("kivánszorgok"), "kivánszorg");});
test("kivánszorogtam -> kivánszorogt", function() {deepEqual( Stem("kivánszorogtam"), "kivánszorogt");});
test("kivár -> kivár", function() {deepEqual( Stem("kivár"), "kivár");});
test("kivárjuk -> kivár", function() {deepEqual( Stem("kivárjuk"), "kivár");});
test("kivárni -> kivárn", function() {deepEqual( Stem("kivárni"), "kivárn");});
test("kivárom -> kivár", function() {deepEqual( Stem("kivárom"), "kivár");});
test("kivárást -> kivárás", function() {deepEqual( Stem("kivárást"), "kivárás");});
test("kivárására -> kivárás", function() {deepEqual( Stem("kivárására"), "kivárás");});
test("kivásárláson -> kivásárlás", function() {deepEqual( Stem("kivásárláson"), "kivásárlás");});
test("kivásárolták -> kivásárolta", function() {deepEqual( Stem("kivásárolták"), "kivásárolta");});
test("kivédeni -> kivéden", function() {deepEqual( Stem("kivédeni"), "kivéden");});
test("kivégezte -> kivégezt", function() {deepEqual( Stem("kivégezte"), "kivégezt");});
test("kivégeztek -> kivégezt", function() {deepEqual( Stem("kivégeztek"), "kivégezt");});
test("kivégezték -> kivégezte", function() {deepEqual( Stem("kivégezték"), "kivégezte");});
test("kivégezzék -> kivégezze", function() {deepEqual( Stem("kivégezzék"), "kivégezze");});
test("kivégeztetett -> kivégeztetet", function() {deepEqual( Stem("kivégeztetett"), "kivégeztetet");});
test("kivégzés -> kivégzés", function() {deepEqual( Stem("kivégzés"), "kivégzés");});
test("kivégzések -> kivégzés", function() {deepEqual( Stem("kivégzések"), "kivégzés");});
test("kivégzésekről -> kivégzés", function() {deepEqual( Stem("kivégzésekről"), "kivégzés");});
test("kivégzésre -> kivégzés", function() {deepEqual( Stem("kivégzésre"), "kivégzés");});
test("kivégzést -> kivégzés", function() {deepEqual( Stem("kivégzést"), "kivégzés");});
test("kivégzését -> kivégzés", function() {deepEqual( Stem("kivégzését"), "kivégzés");});
test("kivégzőosztag -> kivégzőosztag", function() {deepEqual( Stem("kivégzőosztag"), "kivégzőosztag");});
test("kivétel -> kivétel", function() {deepEqual( Stem("kivétel"), "kivétel");});
test("kivételbe -> kivétel", function() {deepEqual( Stem("kivételbe"), "kivétel");});
test("kivétele -> kivétel", function() {deepEqual( Stem("kivétele"), "kivétel");});
test("kivételek -> kivétel", function() {deepEqual( Stem("kivételek"), "kivétel");});
test("kivételeket -> kivétel", function() {deepEqual( Stem("kivételeket"), "kivétel");});
test("kivételekkel -> kivétel", function() {deepEqual( Stem("kivételekkel"), "kivétel");});
test("kivételeknek -> kivétel", function() {deepEqual( Stem("kivételeknek"), "kivétel");});
test("kivételekre -> kivétel", function() {deepEqual( Stem("kivételekre"), "kivétel");});
test("kivételektől -> kivétel", function() {deepEqual( Stem("kivételektől"), "kivétel");});
test("kivétellel -> kivétel", function() {deepEqual( Stem("kivétellel"), "kivétel");});
test("kivételnek -> kivétel", function() {deepEqual( Stem("kivételnek"), "kivétel");});
test("kivételt -> kivétel", function() {deepEqual( Stem("kivételt"), "kivétel");});
test("kivételtől -> kivétel", function() {deepEqual( Stem("kivételtől"), "kivétel");});
test("kivételével -> kivétel", function() {deepEqual( Stem("kivételével"), "kivétel");});
test("kivételes -> kivételes", function() {deepEqual( Stem("kivételes"), "kivételes");});
test("kivételeseket -> kivételes", function() {deepEqual( Stem("kivételeseket"), "kivételes");});
test("kivételesen -> kivételes", function() {deepEqual( Stem("kivételesen"), "kivételes");});
test("kivételezett -> kivételezet", function() {deepEqual( Stem("kivételezett"), "kivételezet");});
test("kivételezettségigény -> kivételezettségigény", function() {deepEqual( Stem("kivételezettségigény"), "kivételezettségigény");});
test("kivételeznek -> kivételez", function() {deepEqual( Stem("kivételeznek"), "kivételez");});
test("kivételez -> kivételez", function() {deepEqual( Stem("kivételez"), "kivételez");});
test("kivételeztek -> kivételezt", function() {deepEqual( Stem("kivételeztek"), "kivételezt");});
test("kivételezés -> kivételezés", function() {deepEqual( Stem("kivételezés"), "kivételezés");});
test("kivételi -> kivétel", function() {deepEqual( Stem("kivételi"), "kivétel");});
test("kivéve -> kivév", function() {deepEqual( Stem("kivéve"), "kivév");});
test("kivívhatom -> kivívhat", function() {deepEqual( Stem("kivívhatom"), "kivívhat");});
test("kivívni -> kivívn", function() {deepEqual( Stem("kivívni"), "kivívn");});
test("kivívnom -> kivívn", function() {deepEqual( Stem("kivívnom"), "kivívn");});
test("kivívta -> kivívt", function() {deepEqual( Stem("kivívta"), "kivívt");});
test("kivívták -> kivívta", function() {deepEqual( Stem("kivívták"), "kivívta");});
test("kivülállóra -> kivülálló", function() {deepEqual( Stem("kivülállóra"), "kivülálló");});
test("kiwwi -> kiww", function() {deepEqual( Stem("kiwwi"), "kiww");});
test("kiwwinek -> kiww", function() {deepEqual( Stem("kiwwinek"), "kiww");});
test("kizavar -> kizavar", function() {deepEqual( Stem("kizavar"), "kizavar");});
test("kizavartam -> kizavart", function() {deepEqual( Stem("kizavartam"), "kizavart");});
test("kizsarolni -> kizsaroln", function() {deepEqual( Stem("kizsarolni"), "kizsaroln");});
test("kizsigerelés -> kizsigerelés", function() {deepEqual( Stem("kizsigerelés"), "kizsigerelés");});
test("kizsákmányolni -> kizsákmányoln", function() {deepEqual( Stem("kizsákmányolni"), "kizsákmányoln");});
test("kizsákmányolt -> kizsákmányol", function() {deepEqual( Stem("kizsákmányolt"), "kizsákmányol");});
test("kizuhant -> kizuhan", function() {deepEqual( Stem("kizuhant"), "kizuhan");});
test("kizárandó -> kizárandó", function() {deepEqual( Stem("kizárandó"), "kizárandó");});
test("kizárhatja -> kizárhat", function() {deepEqual( Stem("kizárhatja"), "kizárhat");});
test("kizárhatta -> kizárhatt", function() {deepEqual( Stem("kizárhatta"), "kizárhatt");});
test("kizárható -> kizárható", function() {deepEqual( Stem("kizárható"), "kizárható");});
test("kizár -> kizár", function() {deepEqual( Stem("kizár"), "kizár");});
test("kizárja -> kizár", function() {deepEqual( Stem("kizárja"), "kizár");});
test("kizárjon -> kizárj", function() {deepEqual( Stem("kizárjon"), "kizárj");});
test("kizárják -> kizárja", function() {deepEqual( Stem("kizárják"), "kizárja");});
test("kizárnak -> kizár", function() {deepEqual( Stem("kizárnak"), "kizár");});
test("kizárni -> kizárn", function() {deepEqual( Stem("kizárni"), "kizárn");});
test("kizárná -> kizárna", function() {deepEqual( Stem("kizárná"), "kizárna");});
test("kizárta -> kizárt", function() {deepEqual( Stem("kizárta"), "kizárt");});
test("kizártnak -> kizárt", function() {deepEqual( Stem("kizártnak"), "kizárt");});
test("kizárt -> kizár", function() {deepEqual( Stem("kizárt"), "kizár");});
test("kizártságára -> kizártság", function() {deepEqual( Stem("kizártságára"), "kizártság");});
test("kizártságát -> kizártság", function() {deepEqual( Stem("kizártságát"), "kizártság");});
test("kizárva -> kizárv", function() {deepEqual( Stem("kizárva"), "kizárv");});
test("kizárás -> kizárás", function() {deepEqual( Stem("kizárás"), "kizárás");});
test("kizárása -> kizárás", function() {deepEqual( Stem("kizárása"), "kizárás");});
test("kizáráshoz -> kizárás", function() {deepEqual( Stem("kizáráshoz"), "kizárás");});
test("kizárási -> kizárás", function() {deepEqual( Stem("kizárási"), "kizárás");});
test("kizárások -> kizárás", function() {deepEqual( Stem("kizárások"), "kizárás");});
test("kizárásra -> kizárás", function() {deepEqual( Stem("kizárásra"), "kizárás");});
test("kizárásról -> kizárás", function() {deepEqual( Stem("kizárásról"), "kizárás");});
test("kizárással -> kizárás", function() {deepEqual( Stem("kizárással"), "kizárás");});
test("kizárást -> kizárás", function() {deepEqual( Stem("kizárást"), "kizárás");});
test("kizárásának -> kizárás", function() {deepEqual( Stem("kizárásának"), "kizárás");});
test("kizárásánál -> kizárás", function() {deepEqual( Stem("kizárásánál"), "kizárás");});
test("kizárására -> kizárás", function() {deepEqual( Stem("kizárására"), "kizárás");});
test("kizárásáról -> kizárás", function() {deepEqual( Stem("kizárásáról"), "kizárás");});
test("kizárását -> kizárás", function() {deepEqual( Stem("kizárását"), "kizárás");});
test("kizárásával -> kizárás", function() {deepEqual( Stem("kizárásával"), "kizárás");});
test("kizáró -> kizáró", function() {deepEqual( Stem("kizáró"), "kizáró");});
test("kizáróan -> kizáró", function() {deepEqual( Stem("kizáróan"), "kizáró");});
test("kizárólagos -> kizárólagos", function() {deepEqual( Stem("kizárólagos"), "kizárólagos");});
test("kizárólagosan -> kizárólagos", function() {deepEqual( Stem("kizárólagosan"), "kizárólagos");});
test("kizárólagosként -> kizárólagos", function() {deepEqual( Stem("kizárólagosként"), "kizárólagos");});
test("kizárólagosság -> kizárólagosság", function() {deepEqual( Stem("kizárólagosság"), "kizárólagosság");});
test("kizárólagossága -> kizárólagosság", function() {deepEqual( Stem("kizárólagossága"), "kizárólagosság");});
test("kizárólagosságot -> kizárólagosság", function() {deepEqual( Stem("kizárólagosságot"), "kizárólagosság");});
test("kizárólagosságra -> kizárólagosság", function() {deepEqual( Stem("kizárólagosságra"), "kizárólagosság");});
test("kizárólagosságának -> kizárólagosság", function() {deepEqual( Stem("kizárólagosságának"), "kizárólagosság");});
test("kizárólagosságát -> kizárólagosság", function() {deepEqual( Stem("kizárólagosságát"), "kizárólagosság");});
test("kizárőlag -> kizárőlag", function() {deepEqual( Stem("kizárőlag"), "kizárőlag");});
test("kizökkent -> kizökken", function() {deepEqual( Stem("kizökkent"), "kizökken");});
test("kizökkenteni -> kizökkenten", function() {deepEqual( Stem("kizökkenteni"), "kizökkenten");});
test("kiábrándult -> kiábrándul", function() {deepEqual( Stem("kiábrándult"), "kiábrándul");});
test("kiábrándultságot -> kiábrándultság", function() {deepEqual( Stem("kiábrándultságot"), "kiábrándultság");});
test("kiábrándító -> kiábrándító", function() {deepEqual( Stem("kiábrándító"), "kiábrándító");});
test("kiábrándítóbb -> kiábrándítóbb", function() {deepEqual( Stem("kiábrándítóbb"), "kiábrándítóbb");});
test("kiállhatatlan -> kiállhatatl", function() {deepEqual( Stem("kiállhatatlan"), "kiállhatatl");});
test("kiállnak -> kiáll", function() {deepEqual( Stem("kiállnak"), "kiáll");});
test("kiáll -> kiáll", function() {deepEqual( Stem("kiáll"), "kiáll");});
test("kiállnom -> kiálln", function() {deepEqual( Stem("kiállnom"), "kiálln");});
test("kiállta -> kiállt", function() {deepEqual( Stem("kiállta"), "kiállt");});
test("kiálltja -> kiállt", function() {deepEqual( Stem("kiálltja"), "kiállt");});
test("kiállt -> kiáll", function() {deepEqual( Stem("kiállt"), "kiáll");});
test("kiállítandó -> kiállítandó", function() {deepEqual( Stem("kiállítandó"), "kiállítandó");});
test("kiállítani -> kiállítan", function() {deepEqual( Stem("kiállítani"), "kiállítan");});
test("kiállítania -> kiállítan", function() {deepEqual( Stem("kiállítania"), "kiállítan");});
test("kiállíthatják -> kiállíthatja", function() {deepEqual( Stem("kiállíthatják"), "kiállíthatja");});
test("kiállíthatósági -> kiállíthatóság", function() {deepEqual( Stem("kiállíthatósági"), "kiállíthatóság");});
test("kiállíthatóságáról -> kiállíthatóság", function() {deepEqual( Stem("kiállíthatóságáról"), "kiállíthatóság");});
test("kiállíthatósághoz -> kiállíthatóság", function() {deepEqual( Stem("kiállíthatósághoz"), "kiállíthatóság");});
test("kiállított -> kiállítot", function() {deepEqual( Stem("kiállított"), "kiállítot");});
test("kiállítottak -> kiállított", function() {deepEqual( Stem("kiállítottak"), "kiállított");});
test("kiállították -> kiállította", function() {deepEqual( Stem("kiállították"), "kiállította");});
test("kiállítja -> kiállít", function() {deepEqual( Stem("kiállítja"), "kiállít");});
test("kiállítjuk -> kiállít", function() {deepEqual( Stem("kiállítjuk"), "kiállít");});
test("kiállítva -> kiállítv", function() {deepEqual( Stem("kiállítva"), "kiállítv");});
test("kiállítási -> kiállítás", function() {deepEqual( Stem("kiállítási"), "kiállítás");});
test("kiállítás -> kiállítás", function() {deepEqual( Stem("kiállítás"), "kiállítás");});
test("kiállítása -> kiállítás", function() {deepEqual( Stem("kiállítása"), "kiállítás");});
test("kiállításaira -> kiállítás", function() {deepEqual( Stem("kiállításaira"), "kiállítás");});
test("kiállításból -> kiállítás", function() {deepEqual( Stem("kiállításból"), "kiállítás");});
test("kiállításhoz -> kiállítás", function() {deepEqual( Stem("kiállításhoz"), "kiállítás");});
test("kiállításnak -> kiállítás", function() {deepEqual( Stem("kiállításnak"), "kiállítás");});
test("kiállítások -> kiállítás", function() {deepEqual( Stem("kiállítások"), "kiállítás");});
test("kiállításokat -> kiállítás", function() {deepEqual( Stem("kiállításokat"), "kiállítás");});
test("kiállításokon -> kiállítás", function() {deepEqual( Stem("kiállításokon"), "kiállítás");});
test("kiállításon -> kiállítás", function() {deepEqual( Stem("kiállításon"), "kiállítás");});
test("kiállításra -> kiállítás", function() {deepEqual( Stem("kiállításra"), "kiállítás");});
test("kiállításról -> kiállítás", function() {deepEqual( Stem("kiállításról"), "kiállítás");});
test("kiállítással -> kiállítás", function() {deepEqual( Stem("kiállítással"), "kiállítás");});
test("kiállítást -> kiállítás", function() {deepEqual( Stem("kiállítást"), "kiállítás");});
test("kiállítástól -> kiállítás", function() {deepEqual( Stem("kiállítástól"), "kiállítás");});
test("kiállításuktól -> kiállítás", function() {deepEqual( Stem("kiállításuktól"), "kiállítás");});
test("kiállításához -> kiállítás", function() {deepEqual( Stem("kiállításához"), "kiállítás");});
test("kiállításán -> kiállítás", function() {deepEqual( Stem("kiállításán"), "kiállítás");});
test("kiállítására -> kiállítás", function() {deepEqual( Stem("kiállítására"), "kiállítás");});
test("kiállításáról -> kiállítás", function() {deepEqual( Stem("kiállításáról"), "kiállítás");});
test("kiállítását -> kiállítás", function() {deepEqual( Stem("kiállítását"), "kiállítás");});
test("kiállításával -> kiállítás", function() {deepEqual( Stem("kiállításával"), "kiállítás");});
test("kiállítóhely -> kiállítóhely", function() {deepEqual( Stem("kiállítóhely"), "kiállítóhely");});
test("kiállítóhelyek -> kiállítóhely", function() {deepEqual( Stem("kiállítóhelyek"), "kiállítóhely");});
test("kiállítói -> kiállító", function() {deepEqual( Stem("kiállítói"), "kiállító");});
test("kiállítók -> kiállító", function() {deepEqual( Stem("kiállítók"), "kiállító");});
test("kiállító -> kiállító", function() {deepEqual( Stem("kiállító"), "kiállító");});
test("kiállítóké -> kiállító", function() {deepEqual( Stem("kiállítóké"), "kiállító");});
test("kiállítóként -> kiállító", function() {deepEqual( Stem("kiállítóként"), "kiállító");});
test("kiállítóterem -> kiállítóter", function() {deepEqual( Stem("kiállítóterem"), "kiállítóter");});
test("kiállítótermeket -> kiállítóterm", function() {deepEqual( Stem("kiállítótermeket"), "kiállítóterm");});
test("kiálló -> kiálló", function() {deepEqual( Stem("kiálló"), "kiálló");});
test("kiált -> kiál", function() {deepEqual( Stem("kiált"), "kiál");});
test("kiáltani -> kiáltan", function() {deepEqual( Stem("kiáltani"), "kiáltan");});
test("kiáltania -> kiáltan", function() {deepEqual( Stem("kiáltania"), "kiáltan");});
test("kiáltanom -> kiáltan", function() {deepEqual( Stem("kiáltanom"), "kiáltan");});
test("kiáltja -> kiált", function() {deepEqual( Stem("kiáltja"), "kiált");});
test("kiáltják -> kiáltja", function() {deepEqual( Stem("kiáltják"), "kiáltja");});
test("kiáltok -> kiált", function() {deepEqual( Stem("kiáltok"), "kiált");});
test("kiáltott -> kiáltot", function() {deepEqual( Stem("kiáltott"), "kiáltot");});
test("kiáltotta -> kiáltott", function() {deepEqual( Stem("kiáltotta"), "kiáltott");});
test("kiáltottak -> kiáltott", function() {deepEqual( Stem("kiáltottak"), "kiáltott");});
test("kiáltottam -> kiáltott", function() {deepEqual( Stem("kiáltottam"), "kiáltott");});
test("kiáltottunk -> kiáltott", function() {deepEqual( Stem("kiáltottunk"), "kiáltott");});
test("kiáltották -> kiáltotta", function() {deepEqual( Stem("kiáltották"), "kiáltotta");});
test("kiáltozta -> kiáltozt", function() {deepEqual( Stem("kiáltozta"), "kiáltozt");});
test("kiáltozás -> kiáltozás", function() {deepEqual( Stem("kiáltozás"), "kiáltozás");});
test("kiáltozásokba -> kiáltozás", function() {deepEqual( Stem("kiáltozásokba"), "kiáltozás");});
test("kiáltozáson -> kiáltozás", function() {deepEqual( Stem("kiáltozáson"), "kiáltozás");});
test("kiáltva -> kiáltv", function() {deepEqual( Stem("kiáltva"), "kiáltv");});
test("kiáltvány -> kiáltvány", function() {deepEqual( Stem("kiáltvány"), "kiáltvány");});
test("kiáltványa -> kiáltvány", function() {deepEqual( Stem("kiáltványa"), "kiáltvány");});
test("kiáltványait -> kiáltvány", function() {deepEqual( Stem("kiáltványait"), "kiáltvány");});
test("kiáltványnak -> kiáltvány", function() {deepEqual( Stem("kiáltványnak"), "kiáltvány");});
test("kiáltványok -> kiáltvány", function() {deepEqual( Stem("kiáltványok"), "kiáltvány");});
test("kiáltványokba -> kiáltvány", function() {deepEqual( Stem("kiáltványokba"), "kiáltvány");});
test("kiáltványában -> kiáltvány", function() {deepEqual( Stem("kiáltványában"), "kiáltvány");});
test("kiáltá -> kiálta", function() {deepEqual( Stem("kiáltá"), "kiálta");});
test("kiáltás -> kiáltás", function() {deepEqual( Stem("kiáltás"), "kiáltás");});
test("kiáltásaira -> kiáltás", function() {deepEqual( Stem("kiáltásaira"), "kiáltás");});
test("kiáltások -> kiáltás", function() {deepEqual( Stem("kiáltások"), "kiáltás");});
test("kiáltásokat -> kiáltás", function() {deepEqual( Stem("kiáltásokat"), "kiáltás");});
test("kiáltásokkal -> kiáltás", function() {deepEqual( Stem("kiáltásokkal"), "kiáltás");});
test("kiáltással -> kiáltás", function() {deepEqual( Stem("kiáltással"), "kiáltás");});
test("kiáltóan -> kiáltó", function() {deepEqual( Stem("kiáltóan"), "kiáltó");});
test("kiárusításának -> kiárusítás", function() {deepEqual( Stem("kiárusításának"), "kiárusítás");});
test("kiásott -> kiásot", function() {deepEqual( Stem("kiásott"), "kiásot");});
test("kiásta -> kiást", function() {deepEqual( Stem("kiásta"), "kiást");});
test("kiásták -> kiásta", function() {deepEqual( Stem("kiásták"), "kiásta");});
test("kiáztatjuk -> kiáztat", function() {deepEqual( Stem("kiáztatjuk"), "kiáztat");});
test("kiég -> kiég", function() {deepEqual( Stem("kiég"), "kiég");});
test("kiégett -> kiéget", function() {deepEqual( Stem("kiégett"), "kiéget");});
test("kiégettetik -> kiégettet", function() {deepEqual( Stem("kiégettetik"), "kiégettet");});
test("kiéhezett -> kiéhezet", function() {deepEqual( Stem("kiéhezett"), "kiéhezet");});
test("kiélezte -> kiélezt", function() {deepEqual( Stem("kiélezte"), "kiélezt");});
test("kiéleződtek -> kiéleződt", function() {deepEqual( Stem("kiéleződtek"), "kiéleződt");});
test("kiéleződését -> kiéleződés", function() {deepEqual( Stem("kiéleződését"), "kiéleződés");});
test("kiélheti -> kiélhet", function() {deepEqual( Stem("kiélheti"), "kiélhet");});
test("kiélje -> kiél", function() {deepEqual( Stem("kiélje"), "kiél");});
test("kiéltem -> kiélt", function() {deepEqual( Stem("kiéltem"), "kiélt");});
test("kiélvezni -> kiélvezn", function() {deepEqual( Stem("kiélvezni"), "kiélvezn");});
test("kiénekelve -> kiénekelv", function() {deepEqual( Stem("kiénekelve"), "kiénekelv");});
test("kiépíteni -> kiépíten", function() {deepEqual( Stem("kiépíteni"), "kiépíten");});
test("kiépíti -> kiépít", function() {deepEqual( Stem("kiépíti"), "kiépít");});
test("kiépített -> kiépítet", function() {deepEqual( Stem("kiépített"), "kiépítet");});
test("kiépítettben -> kiépített", function() {deepEqual( Stem("kiépítettben"), "kiépített");});
test("kiépítettségtől -> kiépítettség", function() {deepEqual( Stem("kiépítettségtől"), "kiépítettség");});
test("kiépítettségében -> kiépítettség", function() {deepEqual( Stem("kiépítettségében"), "kiépítettség");});
test("kiépítettségű -> kiépítettségű", function() {deepEqual( Stem("kiépítettségű"), "kiépítettségű");});
test("kiépíthető -> kiépíthető", function() {deepEqual( Stem("kiépíthető"), "kiépíthető");});
test("kiépítse -> kiépíts", function() {deepEqual( Stem("kiépítse"), "kiépíts");});
test("kiépítés -> kiépítés", function() {deepEqual( Stem("kiépítés"), "kiépítés");});
test("kiépítése -> kiépítés", function() {deepEqual( Stem("kiépítése"), "kiépítés");});
test("kiépítésekor -> kiépítés", function() {deepEqual( Stem("kiépítésekor"), "kiépítés");});
test("kiépítéshez -> kiépítés", function() {deepEqual( Stem("kiépítéshez"), "kiépítés");});
test("kiépítésébe -> kiépítés", function() {deepEqual( Stem("kiépítésébe"), "kiépítés");});
test("kiépítésében -> kiépítés", function() {deepEqual( Stem("kiépítésében"), "kiépítés");});
test("kiépítéséhez -> kiépítés", function() {deepEqual( Stem("kiépítéséhez"), "kiépítés");});
test("kiépítésének -> kiépítés", function() {deepEqual( Stem("kiépítésének"), "kiépítés");});
test("kiépítésére -> kiépítés", function() {deepEqual( Stem("kiépítésére"), "kiépítés");});
test("kiépítését -> kiépítés", function() {deepEqual( Stem("kiépítését"), "kiépítés");});
test("kiépítésétől -> kiépítés", function() {deepEqual( Stem("kiépítésétől"), "kiépítés");});
test("kiépítésével -> kiépítés", function() {deepEqual( Stem("kiépítésével"), "kiépítés");});
test("kiépítő -> kiépítő", function() {deepEqual( Stem("kiépítő"), "kiépítő");});
test("kiépült -> kiépül", function() {deepEqual( Stem("kiépült"), "kiépül");});
test("kiépülését -> kiépülés", function() {deepEqual( Stem("kiépülését"), "kiépülés");});
test("kiérdemelhetné -> kiérdemelhetn", function() {deepEqual( Stem("kiérdemelhetné"), "kiérdemelhetn");});
test("kiért -> ki", function() {deepEqual( Stem("kiért"), "ki");});
test("kiértesítés -> kiértesítés", function() {deepEqual( Stem("kiértesítés"), "kiértesítés");});
test("kiértékelés -> kiértékelés", function() {deepEqual( Stem("kiértékelés"), "kiértékelés");});
test("kiértékelése -> kiértékelés", function() {deepEqual( Stem("kiértékelése"), "kiértékelés");});
test("kiértékelésének -> kiértékelés", function() {deepEqual( Stem("kiértékelésének"), "kiértékelés");});
test("kiértünk -> kiért", function() {deepEqual( Stem("kiértünk"), "kiért");});
test("kiértem -> kiért", function() {deepEqual( Stem("kiértem"), "kiért");});
test("kiérek -> kiér", function() {deepEqual( Stem("kiérek"), "kiér");});
test("kiérjünk -> kiérj", function() {deepEqual( Stem("kiérjünk"), "kiérj");});
test("kiérve -> kiérv", function() {deepEqual( Stem("kiérve"), "kiérv");});
test("kiírandó -> kiírandó", function() {deepEqual( Stem("kiírandó"), "kiírandó");});
test("kiírhatom -> kiírhat", function() {deepEqual( Stem("kiírhatom"), "kiírhat");});
test("kiírt -> kiír", function() {deepEqual( Stem("kiírt"), "kiír");});
test("kiírta -> kiírt", function() {deepEqual( Stem("kiírta"), "kiírt");});
test("kiírták -> kiírta", function() {deepEqual( Stem("kiírták"), "kiírta");});
test("kiírja -> kiír", function() {deepEqual( Stem("kiírja"), "kiír");});
test("kiírni -> kiírn", function() {deepEqual( Stem("kiírni"), "kiírn");});
test("kiírva -> kiírv", function() {deepEqual( Stem("kiírva"), "kiírv");});
test("kiírás -> kiírás", function() {deepEqual( Stem("kiírás"), "kiírás");});
test("kiírása -> kiírás", function() {deepEqual( Stem("kiírása"), "kiírás");});
test("kiírásáról -> kiírás", function() {deepEqual( Stem("kiírásáról"), "kiírás");});
test("kiírását -> kiírás", function() {deepEqual( Stem("kiírását"), "kiírás");});
test("kiíródik -> kiíród", function() {deepEqual( Stem("kiíródik"), "kiíród");});
test("kiókumlálása -> kiókumlálás", function() {deepEqual( Stem("kiókumlálása"), "kiókumlálás");});
test("kiöblített -> kiöblítet", function() {deepEqual( Stem("kiöblített"), "kiöblítet");});
test("kiölni -> kiöln", function() {deepEqual( Stem("kiölni"), "kiöln");});
test("kiölt -> kiöl", function() {deepEqual( Stem("kiölt"), "kiöl");});
test("kiöltözött -> kiöltözöt", function() {deepEqual( Stem("kiöltözött"), "kiöltözöt");});
test("kiömlő -> kiömlő", function() {deepEqual( Stem("kiömlő"), "kiömlő");});
test("kiöntjük -> kiönt", function() {deepEqual( Stem("kiöntjük"), "kiönt");});
test("kiöntötte -> kiöntött", function() {deepEqual( Stem("kiöntötte"), "kiöntött");});
test("kiöregedtem -> kiöregedt", function() {deepEqual( Stem("kiöregedtem"), "kiöregedt");});
test("kiözönlő -> kiözönlő", function() {deepEqual( Stem("kiözönlő"), "kiözönlő");});
test("kiújult -> kiújul", function() {deepEqual( Stem("kiújult"), "kiújul");});
test("kiúszkáltunk -> kiúszkált", function() {deepEqual( Stem("kiúszkáltunk"), "kiúszkált");});
test("kiűzetett -> kiűzetet", function() {deepEqual( Stem("kiűzetett"), "kiűzetet");});
test("kiűzi -> kiűz", function() {deepEqual( Stem("kiűzi"), "kiűz");});
test("kiűzték -> kiűzte", function() {deepEqual( Stem("kiűzték"), "kiűzte");});
test("kiügyeskedte -> kiügyeskedt", function() {deepEqual( Stem("kiügyeskedte"), "kiügyeskedt");});
test("kiülhetek -> kiülhet", function() {deepEqual( Stem("kiülhetek"), "kiülhet");});
test("kiülni -> kiüln", function() {deepEqual( Stem("kiülni"), "kiüln");});
test("kiül -> ki", function() {deepEqual( Stem("kiül"), "ki");});
test("kiülünk -> kiül", function() {deepEqual( Stem("kiülünk"), "kiül");});
test("kiüresedtek -> kiüresedt", function() {deepEqual( Stem("kiüresedtek"), "kiüresedt");});
test("kiürített -> kiürítet", function() {deepEqual( Stem("kiürített"), "kiürítet");});
test("kiürítik -> kiürít", function() {deepEqual( Stem("kiürítik"), "kiürít");});
test("kiürítése -> kiürítés", function() {deepEqual( Stem("kiürítése"), "kiürítés");});
test("kiürítésének -> kiürítés", function() {deepEqual( Stem("kiürítésének"), "kiürítés");});
test("kiürül -> kiür", function() {deepEqual( Stem("kiürül"), "kiür");});
test("kiürült -> kiürül", function() {deepEqual( Stem("kiürült"), "kiürül");});
test("kiürülésének -> kiürülés", function() {deepEqual( Stem("kiürülésének"), "kiürülés");});
test("kiütköző -> kiütköző", function() {deepEqual( Stem("kiütköző"), "kiütköző");});
test("kiütközött -> kiütközöt", function() {deepEqual( Stem("kiütközött"), "kiütközöt");});
test("kiütést -> kiütés", function() {deepEqual( Stem("kiütést"), "kiütés");});
test("kiütött -> kiütöt", function() {deepEqual( Stem("kiütött"), "kiütöt");});
test("kiütötte -> kiütött", function() {deepEqual( Stem("kiütötte"), "kiütött");});
test("kiüt -> kiü", function() {deepEqual( Stem("kiüt"), "kiü");});
test("kkt. -> kkt.", function() {deepEqual( Stem("kkt."), "kkt.");});
test("kkt.-be -> kkt.-be", function() {deepEqual( Stem("kkt.-be"), "kkt.-be");});
test("kkt.-kra -> kkt.-kra", function() {deepEqual( Stem("kkt.-kra"), "kkt.-kra");});
test("kkt.-ként -> kkt.-ként", function() {deepEqual( Stem("kkt.-ként"), "kkt.-ként");});
test("kkt.-ra -> kkt.-ra", function() {deepEqual( Stem("kkt.-ra"), "kkt.-ra");});
test("kkt.-t -> kkt.-t", function() {deepEqual( Stem("kkt.-t"), "kkt.-t");});
test("kkt.-tól -> kkt.-tól", function() {deepEqual( Stem("kkt.-tól"), "kkt.-tól");});
test("kkt.-vá -> kkt.-vá", function() {deepEqual( Stem("kkt.-vá"), "kkt.-vá");});
test("klarinétosként -> klarinétos", function() {deepEqual( Stem("klarinétosként"), "klarinétos");});
test("klassz -> klassz", function() {deepEqual( Stem("klassz"), "klassz");});
test("klasszicistább -> klasszicistább", function() {deepEqual( Stem("klasszicistább"), "klasszicistább");});
test("klasszicizált -> klasszicizál", function() {deepEqual( Stem("klasszicizált"), "klasszicizál");});
test("klasszicizáló -> klasszicizáló", function() {deepEqual( Stem("klasszicizáló"), "klasszicizáló");});
test("klasszikus -> klasszikus", function() {deepEqual( Stem("klasszikus"), "klasszikus");});
test("klasszikusabb -> klasszikusabb", function() {deepEqual( Stem("klasszikusabb"), "klasszikusabb");});
test("klasszikusainak -> klasszikus", function() {deepEqual( Stem("klasszikusainak"), "klasszikus");});
test("klasszikusan -> klasszikus", function() {deepEqual( Stem("klasszikusan"), "klasszikus");});
test("klasszikusokhoz -> klasszikus", function() {deepEqual( Stem("klasszikusokhoz"), "klasszikus");});
test("klasszis -> klasszis", function() {deepEqual( Stem("klasszis"), "klasszis");});
test("klasszisok -> klasszis", function() {deepEqual( Stem("klasszisok"), "klasszis");});
test("klaszternek -> klaszter", function() {deepEqual( Stem("klaszternek"), "klaszter");});
test("klausi -> klaus", function() {deepEqual( Stem("klausi"), "klaus");});
test("klauzula -> klauzul", function() {deepEqual( Stem("klauzula"), "klauzul");});
test("klauzulákat -> klauzula", function() {deepEqual( Stem("klauzulákat"), "klauzula");});
test("klauzulát -> klauzul", function() {deepEqual( Stem("klauzulát"), "klauzul");});
test("klauzurás -> klauzurás", function() {deepEqual( Stem("klauzurás"), "klauzurás");});
test("klauzúrát -> klauzúr", function() {deepEqual( Stem("klauzúrát"), "klauzúr");});
test("klaviatúrákkal -> klaviatúra", function() {deepEqual( Stem("klaviatúrákkal"), "klaviatúra");});
test("klerikális -> klerikális", function() {deepEqual( Stem("klerikális"), "klerikális");});
test("klezmer -> klezmer", function() {deepEqual( Stem("klezmer"), "klezmer");});
test("klienseket -> kliens", function() {deepEqual( Stem("klienseket"), "kliens");});
test("klientúrájukra -> klientúra", function() {deepEqual( Stem("klientúrájukra"), "klientúra");});
test("klikk -> klik", function() {deepEqual( Stem("klikk"), "klik");});
test("klikkeléssé -> klikkelés", function() {deepEqual( Stem("klikkeléssé"), "klikkelés");});
test("klimatikus -> klimatikus", function() {deepEqual( Stem("klimatikus"), "klimatikus");});
test("klinikai -> klini", function() {deepEqual( Stem("klinikai"), "klini");});
test("klinikailag -> klinikailag", function() {deepEqual( Stem("klinikailag"), "klinikailag");});
test("klinika -> klin", function() {deepEqual( Stem("klinika"), "klin");});
test("klinikáinak -> klinika", function() {deepEqual( Stem("klinikáinak"), "klinika");});
test("klinikáknak -> klinika", function() {deepEqual( Stem("klinikáknak"), "klinika");});
test("klinikákra -> klinika", function() {deepEqual( Stem("klinikákra"), "klinika");});
test("klinikán -> klin", function() {deepEqual( Stem("klinikán"), "klin");});
test("klippek -> klipp", function() {deepEqual( Stem("klippek"), "klipp");});
test("kliséje -> klisé", function() {deepEqual( Stem("kliséje"), "klisé");});
test("klubhelyiség -> klubhelyiség", function() {deepEqual( Stem("klubhelyiség"), "klubhelyiség");});
test("klubigazgató -> klubigazgató", function() {deepEqual( Stem("klubigazgató"), "klubigazgató");});
test("klubigazgatója -> klubigazgató", function() {deepEqual( Stem("klubigazgatója"), "klubigazgató");});
test("klubigazgatótól -> klubigazgató", function() {deepEqual( Stem("klubigazgatótól"), "klubigazgató");});
test("klub -> klub", function() {deepEqual( Stem("klub"), "klub");});
test("klubba -> klub", function() {deepEqual( Stem("klubba"), "klub");});
test("klubbal -> klub", function() {deepEqual( Stem("klubbal"), "klub");});
test("klubban -> klub", function() {deepEqual( Stem("klubban"), "klub");});
test("klubbokban -> klubb", function() {deepEqual( Stem("klubbokban"), "klubb");});
test("klubhoz -> klub", function() {deepEqual( Stem("klubhoz"), "klub");});
test("klubja -> klub", function() {deepEqual( Stem("klubja"), "klub");});
test("klubjuk -> klub", function() {deepEqual( Stem("klubjuk"), "klub");});
test("klubjában -> klub", function() {deepEqual( Stem("klubjában"), "klub");});
test("klubjához -> klub", function() {deepEqual( Stem("klubjához"), "klub");});
test("klubjának -> klub", function() {deepEqual( Stem("klubjának"), "klub");});
test("klubját -> klub", function() {deepEqual( Stem("klubját"), "klub");});
test("klubnak -> klub", function() {deepEqual( Stem("klubnak"), "klub");});
test("klubnál -> klub", function() {deepEqual( Stem("klubnál"), "klub");});
test("klubok -> klub", function() {deepEqual( Stem("klubok"), "klub");});
test("klubokat -> klub", function() {deepEqual( Stem("klubokat"), "klub");});
test("klubokban -> klub", function() {deepEqual( Stem("klubokban"), "klub");});
test("klubokból -> klub", function() {deepEqual( Stem("klubokból"), "klub");});
test("klubokkal -> klub", function() {deepEqual( Stem("klubokkal"), "klub");});
test("kluboknak -> klub", function() {deepEqual( Stem("kluboknak"), "klub");});
test("klubot -> klub", function() {deepEqual( Stem("klubot"), "klub");});
test("klubról -> klub", function() {deepEqual( Stem("klubról"), "klub");});
test("klubországba -> klubország", function() {deepEqual( Stem("klubországba"), "klubország");});
test("klubszerű -> klubszerű", function() {deepEqual( Stem("klubszerű"), "klubszerű");});
test("klubtag -> klubtag", function() {deepEqual( Stem("klubtag"), "klubtag");});
test("klubtagság -> klubtagság", function() {deepEqual( Stem("klubtagság"), "klubtagság");});
test("klubtrófeát -> klubtrófe", function() {deepEqual( Stem("klubtrófeát"), "klubtrófe");});
test("klubvezető -> klubvezető", function() {deepEqual( Stem("klubvezető"), "klubvezető");});
test("klubvezetők -> klubvezető", function() {deepEqual( Stem("klubvezetők"), "klubvezető");});
test("klubváros -> klubváros", function() {deepEqual( Stem("klubváros"), "klubváros");});
test("klubvárosban -> klubváros", function() {deepEqual( Stem("klubvárosban"), "klubváros");});
test("klímaberendezés -> klímaberendezés", function() {deepEqual( Stem("klímaberendezés"), "klímaberendezés");});
test("klímaberendezések -> klímaberendezés", function() {deepEqual( Stem("klímaberendezések"), "klímaberendezés");});
test("klímát -> klím", function() {deepEqual( Stem("klímát"), "klím");});
test("klíringelszámolás -> klíringelszámolás", function() {deepEqual( Stem("klíringelszámolás"), "klíringelszámolás");});
test("klónozással -> klónozás", function() {deepEqual( Stem("klónozással"), "klónozás");});
test("klónozásával -> klónozás", function() {deepEqual( Stem("klónozásával"), "klónozás");});
test("klór-benzol-határértékeire -> klór-benzol-határérte", function() {deepEqual( Stem("klór-benzol-határértékeire"), "klór-benzol-határérte");});
test("klór-benzol-szennyezettség -> klór-benzol-szennyezettség", function() {deepEqual( Stem("klór-benzol-szennyezettség"), "klór-benzol-szennyezettség");});
test("klór-benzolokat -> klór-benzol", function() {deepEqual( Stem("klór-benzolokat"), "klór-benzol");});
test("klór-benzolos -> klór-benzolos", function() {deepEqual( Stem("klór-benzolos"), "klór-benzolos");});
test("klórtartalmú -> klórtartalmú", function() {deepEqual( Stem("klórtartalmú"), "klórtartalmú");});
test("km -> km", function() {deepEqual( Stem("km"), "km");});
test("km-es -> km-es", function() {deepEqual( Stem("km-es"), "km-es");});
test("km-et -> km-et", function() {deepEqual( Stem("km-et"), "km-et");});
test("km-ig -> km-ig", function() {deepEqual( Stem("km-ig"), "km-ig");});
test("km-re -> km-re", function() {deepEqual( Stem("km-re"), "km-re");});
test("km-t -> km-t", function() {deepEqual( Stem("km-t"), "km-t");});
test("knesszet -> knessz", function() {deepEqual( Stem("knesszet"), "knessz");});
test("know-how -> know-how", function() {deepEqual( Stem("know-how"), "know-how");});
test("know-how-ját -> know-how-", function() {deepEqual( Stem("know-how-ját"), "know-how-");});
test("koalíció -> koalíció", function() {deepEqual( Stem("koalíció"), "koalíció");});
test("koalícióban -> koalíció", function() {deepEqual( Stem("koalícióban"), "koalíció");});
test("koalícióhoz -> koalíció", function() {deepEqual( Stem("koalícióhoz"), "koalíció");});
test("koalíciót -> koalíció", function() {deepEqual( Stem("koalíciót"), "koalíció");});
test("koaxiális -> koaxiális", function() {deepEqual( Stem("koaxiális"), "koaxiális");});
test("kobozzák -> kobozza", function() {deepEqual( Stem("kobozzák"), "kobozza");});
test("koccanás -> koccanás", function() {deepEqual( Stem("koccanás"), "koccanás");});
test("koccanáskor -> koccanás", function() {deepEqual( Stem("koccanáskor"), "koccanás");});
test("koccintottunk -> koccintott", function() {deepEqual( Stem("koccintottunk"), "koccintott");});
test("koccintásra -> koccintás", function() {deepEqual( Stem("koccintásra"), "koccintás");});
test("kockaszenet -> kockaszen", function() {deepEqual( Stem("kockaszenet"), "kockaszen");});
test("kockákat -> kocka", function() {deepEqual( Stem("kockákat"), "kocka");});
test("kocka -> koc", function() {deepEqual( Stem("kocka"), "koc");});
test("kockákkal -> kocka", function() {deepEqual( Stem("kockákkal"), "kocka");});
test("kockán -> koc", function() {deepEqual( Stem("kockán"), "koc");});
test("kockának -> koc", function() {deepEqual( Stem("kockának"), "koc");});
test("kockára -> koc", function() {deepEqual( Stem("kockára"), "koc");});
test("kockáról -> koc", function() {deepEqual( Stem("kockáról"), "koc");});
test("kockát -> koc", function() {deepEqual( Stem("kockát"), "koc");});
test("kockás -> kockás", function() {deepEqual( Stem("kockás"), "kockás");});
test("kockásdobozt -> kockásdoboz", function() {deepEqual( Stem("kockásdobozt"), "kockásdoboz");});
test("kockázat-ellenőrzési -> kockázat-ellenőrzés", function() {deepEqual( Stem("kockázat-ellenőrzési"), "kockázat-ellenőrzés");});
test("kockázata -> kockázat", function() {deepEqual( Stem("kockázata"), "kockázat");});
test("kockázat -> kockáz", function() {deepEqual( Stem("kockázat"), "kockáz");});
test("kockázatai -> kockázat", function() {deepEqual( Stem("kockázatai"), "kockázat");});
test("kockázataiban -> kockázat", function() {deepEqual( Stem("kockázataiban"), "kockázat");});
test("kockázatairól -> kockázat", function() {deepEqual( Stem("kockázatairól"), "kockázat");});
test("kockázatnak -> kockázat", function() {deepEqual( Stem("kockázatnak"), "kockázat");});
test("kockázatok -> kockázat", function() {deepEqual( Stem("kockázatok"), "kockázat");});
test("kockázatokat -> kockázat", function() {deepEqual( Stem("kockázatokat"), "kockázat");});
test("kockázataival -> kockázat", function() {deepEqual( Stem("kockázataival"), "kockázat");});
test("kockázatot -> kockázat", function() {deepEqual( Stem("kockázatot"), "kockázat");});
test("kockázattal -> kockáz", function() {deepEqual( Stem("kockázattal"), "kockáz");});
test("kockázattól -> kockázat", function() {deepEqual( Stem("kockázattól"), "kockázat");});
test("kockázatát -> kockázat", function() {deepEqual( Stem("kockázatát"), "kockázat");});
test("kockázatával -> kockázat", function() {deepEqual( Stem("kockázatával"), "kockázat");});
test("kockázatfeltáró -> kockázatfeltáró", function() {deepEqual( Stem("kockázatfeltáró"), "kockázatfeltáró");});
test("kockázati -> kockázat", function() {deepEqual( Stem("kockázati"), "kockázat");});
test("kockázatitőke-alapok -> kockázatitőke-alap", function() {deepEqual( Stem("kockázatitőke-alapok"), "kockázatitőke-alap");});
test("kockázatitőke-alapokba -> kockázatitőke-alap", function() {deepEqual( Stem("kockázatitőke-alapokba"), "kockázatitőke-alap");});
test("kockázatitőke-befektetések -> kockázatitőke-befektetés", function() {deepEqual( Stem("kockázatitőke-befektetések"), "kockázatitőke-befektetés");});
test("kockázatitőke-hátteret -> kockázatitőke-hátter", function() {deepEqual( Stem("kockázatitőke-hátteret"), "kockázatitőke-hátter");});
test("kockázatitőke-szektor -> kockázatitőke-szektor", function() {deepEqual( Stem("kockázatitőke-szektor"), "kockázatitőke-szektor");});
test("kockázatitőke-támogatást -> kockázatitőke-támogatás", function() {deepEqual( Stem("kockázatitőke-támogatást"), "kockázatitőke-támogatás");});
test("kockázatos -> kockázatos", function() {deepEqual( Stem("kockázatos"), "kockázatos");});
test("kockázatosabbnak -> kockázatosabb", function() {deepEqual( Stem("kockázatosabbnak"), "kockázatosabb");});
test("kockázatszámítást -> kockázatszámítás", function() {deepEqual( Stem("kockázatszámítást"), "kockázatszámítás");});
test("kockázatviselés -> kockázatviselés", function() {deepEqual( Stem("kockázatviselés"), "kockázatviselés");});
test("kockázatviseléshez -> kockázatviselés", function() {deepEqual( Stem("kockázatviseléshez"), "kockázatviselés");});
test("kockázatviselésre -> kockázatviselés", function() {deepEqual( Stem("kockázatviselésre"), "kockázatviselés");});
test("kockázatviselést -> kockázatviselés", function() {deepEqual( Stem("kockázatviselést"), "kockázatviselés");});
test("kockázatvállalás -> kockázatvállalás", function() {deepEqual( Stem("kockázatvállalás"), "kockázatvállalás");});
test("kockázatvállalása -> kockázatvállalás", function() {deepEqual( Stem("kockázatvállalása"), "kockázatvállalás");});
test("kockázatvállalásra -> kockázatvállalás", function() {deepEqual( Stem("kockázatvállalásra"), "kockázatvállalás");});
test("kockázott -> kockázot", function() {deepEqual( Stem("kockázott"), "kockázot");});
test("kockáztak -> kockázt", function() {deepEqual( Stem("kockáztak"), "kockázt");});
test("kockáztathatunk -> kockáztathat", function() {deepEqual( Stem("kockáztathatunk"), "kockáztathat");});
test("kockáztatja -> kockáztat", function() {deepEqual( Stem("kockáztatja"), "kockáztat");});
test("kockáztat -> kockázt", function() {deepEqual( Stem("kockáztat"), "kockázt");});
test("kockáztatnia -> kockáztatn", function() {deepEqual( Stem("kockáztatnia"), "kockáztatn");});
test("kockáztatott -> kockáztatot", function() {deepEqual( Stem("kockáztatott"), "kockáztatot");});
test("kockáztatta -> kockáztatt", function() {deepEqual( Stem("kockáztatta"), "kockáztatt");});
test("kockáztatva -> kockáztatv", function() {deepEqual( Stem("kockáztatva"), "kockáztatv");});
test("kockáztatásával -> kockáztatás", function() {deepEqual( Stem("kockáztatásával"), "kockáztatás");});
test("kocogásomból -> kocogás", function() {deepEqual( Stem("kocogásomból"), "kocogás");});
test("kocos -> kocos", function() {deepEqual( Stem("kocos"), "kocos");});
test("kocsi -> kocs", function() {deepEqual( Stem("kocsi"), "kocs");});
test("kocsiait -> kocsi", function() {deepEqual( Stem("kocsiait"), "kocsi");});
test("kocsiba -> kocs", function() {deepEqual( Stem("kocsiba"), "kocs");});
test("kocsiban -> kocs", function() {deepEqual( Stem("kocsiban"), "kocs");});
test("kocsiból -> kocs", function() {deepEqual( Stem("kocsiból"), "kocs");});
test("kocsid -> kocs", function() {deepEqual( Stem("kocsid"), "kocs");});
test("kocsidat -> kocs", function() {deepEqual( Stem("kocsidat"), "kocs");});
test("kocsihoz -> kocs", function() {deepEqual( Stem("kocsihoz"), "kocs");});
test("kocsija -> kocs", function() {deepEqual( Stem("kocsija"), "kocs");});
test("kocsijuk -> kocs", function() {deepEqual( Stem("kocsijuk"), "kocs");});
test("kocsijukba -> kocs", function() {deepEqual( Stem("kocsijukba"), "kocs");});
test("kocsijukból -> kocs", function() {deepEqual( Stem("kocsijukból"), "kocs");});
test("kocsijának -> kocs", function() {deepEqual( Stem("kocsijának"), "kocs");});
test("kocsiját -> kocs", function() {deepEqual( Stem("kocsiját"), "kocs");});
test("kocsim -> kocs", function() {deepEqual( Stem("kocsim"), "kocs");});
test("kocsijával -> kocs", function() {deepEqual( Stem("kocsijával"), "kocs");});
test("kocsik -> kocs", function() {deepEqual( Stem("kocsik"), "kocs");});
test("kocsikba -> kocs", function() {deepEqual( Stem("kocsikba"), "kocs");});
test("kocsikban -> kocs", function() {deepEqual( Stem("kocsikban"), "kocs");});
test("kocsikból -> kocs", function() {deepEqual( Stem("kocsikból"), "kocs");});
test("kocsikhoz -> kocs", function() {deepEqual( Stem("kocsikhoz"), "kocs");});
test("kocsikon -> kocs", function() {deepEqual( Stem("kocsikon"), "kocs");});
test("kocsit -> kocs", function() {deepEqual( Stem("kocsit"), "kocs");});
test("kocsival -> kocs", function() {deepEqual( Stem("kocsival"), "kocs");});
test("kocsin -> kocs", function() {deepEqual( Stem("kocsin"), "kocs");});
test("kocsinak -> kocs", function() {deepEqual( Stem("kocsinak"), "kocs");});
test("kocsinak -> kocs", function() {deepEqual( Stem("kocsinak"), "kocs");});
test("kocsink -> kocs", function() {deepEqual( Stem("kocsink"), "kocs");});
test("kocsinkat -> kocs", function() {deepEqual( Stem("kocsinkat"), "kocs");});
test("kocsinkkal -> kocs", function() {deepEqual( Stem("kocsinkkal"), "kocs");});
test("kocsinknak -> kocs", function() {deepEqual( Stem("kocsinknak"), "kocs");});
test("kocsira -> kocs", function() {deepEqual( Stem("kocsira"), "kocs");});
test("kocsiról -> kocs", function() {deepEqual( Stem("kocsiról"), "kocs");});
test("kocsikázni -> kocsikázn", function() {deepEqual( Stem("kocsikázni"), "kocsikázn");});
test("kocsikáztak -> kocsikázt", function() {deepEqual( Stem("kocsikáztak"), "kocsikázt");});
test("kocsimúzeum -> kocsimúzeu", function() {deepEqual( Stem("kocsimúzeum"), "kocsimúzeu");});
test("kocsimúzeumban -> kocsimúzeu", function() {deepEqual( Stem("kocsimúzeumban"), "kocsimúzeu");});
test("kocsis -> kocsis", function() {deepEqual( Stem("kocsis"), "kocsis");});
test("kocsisor -> kocsisor", function() {deepEqual( Stem("kocsisor"), "kocsisor");});
test("kocsisora -> kocsis", function() {deepEqual( Stem("kocsisora"), "kocsis");});
test("kocsisorunk -> kocsisor", function() {deepEqual( Stem("kocsisorunk"), "kocsisor");});
test("kocsisorát -> kocsisor", function() {deepEqual( Stem("kocsisorát"), "kocsisor");});
test("kocsisába -> kocsis", function() {deepEqual( Stem("kocsisába"), "kocsis");});
test("kocsivezetéssel -> kocsivezetés", function() {deepEqual( Stem("kocsivezetéssel"), "kocsivezetés");});
test("kocsiúton -> kocsiút", function() {deepEqual( Stem("kocsiúton"), "kocsiút");});
test("kocsmaajtó -> kocsmaajtó", function() {deepEqual( Stem("kocsmaajtó"), "kocsmaajtó");});
test("kocsmaféle -> kocsmafél", function() {deepEqual( Stem("kocsmaféle"), "kocsmafél");});
test("kocsmai -> kocsm", function() {deepEqual( Stem("kocsmai"), "kocsm");});
test("kocsmába -> kocsm", function() {deepEqual( Stem("kocsmába"), "kocsm");});
test("kocsma -> kocsm", function() {deepEqual( Stem("kocsma"), "kocsm");});
test("kocsmában -> kocsm", function() {deepEqual( Stem("kocsmában"), "kocsm");});
test("kocsmából -> kocsm", function() {deepEqual( Stem("kocsmából"), "kocsm");});
test("kocsmáikat -> kocsma", function() {deepEqual( Stem("kocsmáikat"), "kocsma");});
test("kocsmája -> kocsmá", function() {deepEqual( Stem("kocsmája"), "kocsmá");});
test("kocsmák -> kocsma", function() {deepEqual( Stem("kocsmák"), "kocsma");});
test("kocsmákban -> kocsma", function() {deepEqual( Stem("kocsmákban"), "kocsma");});
test("kocsmán -> kocsm", function() {deepEqual( Stem("kocsmán"), "kocsm");});
test("kocsmát -> kocsm", function() {deepEqual( Stem("kocsmát"), "kocsm");});
test("kocsmáros -> kocsmáros", function() {deepEqual( Stem("kocsmáros"), "kocsmáros");});
test("kocsmárost -> kocsmáros", function() {deepEqual( Stem("kocsmárost"), "kocsmáros");});
test("kocsonyás -> kocsonyás", function() {deepEqual( Stem("kocsonyás"), "kocsonyás");});
test("kocsonyásan -> kocsonyás", function() {deepEqual( Stem("kocsonyásan"), "kocsonyás");});
test("kodifikációja -> kodifikáció", function() {deepEqual( Stem("kodifikációja"), "kodifikáció");});
test("kodifikációját -> kodifikáció", function() {deepEqual( Stem("kodifikációját"), "kodifikáció");});
test("kodifikációs -> kodifikációs", function() {deepEqual( Stem("kodifikációs"), "kodifikációs");});
test("kofa -> kof", function() {deepEqual( Stem("kofa"), "kof");});
test("kofavonat -> kofavon", function() {deepEqual( Stem("kofavonat"), "kofavon");});
test("koffer -> koffer", function() {deepEqual( Stem("koffer"), "koffer");});
test("kofferben -> koffer", function() {deepEqual( Stem("kofferben"), "koffer");});
test("kofferom -> koffer", function() {deepEqual( Stem("kofferom"), "koffer");});
test("koffert -> koffer", function() {deepEqual( Stem("koffert"), "koffer");});
test("kogens -> kogens", function() {deepEqual( Stem("kogens"), "kogens");});
test("kognitív -> kognitív", function() {deepEqual( Stem("kognitív"), "kognitív");});
test("koherensebb -> koherensebb", function() {deepEqual( Stem("koherensebb"), "koherensebb");});
test("kohósalak -> kohósal", function() {deepEqual( Stem("kohósalak"), "kohósal");});
test("kohósalakból -> kohósal", function() {deepEqual( Stem("kohósalakból"), "kohósal");});
test("koincidenciákkal -> koincidencia", function() {deepEqual( Stem("koincidenciákkal"), "koincidencia");});
test("kokaint -> kokain", function() {deepEqual( Stem("kokaint"), "kokain");});
test("kokaintól -> kokain", function() {deepEqual( Stem("kokaintól"), "kokain");});
test("kokettált -> kokettál", function() {deepEqual( Stem("kokettált"), "kokettál");});
test("koktélokat -> koktél", function() {deepEqual( Stem("koktélokat"), "koktél");});
test("kolbász -> kolbász", function() {deepEqual( Stem("kolbász"), "kolbász");});
test("kolbászt -> kolbász", function() {deepEqual( Stem("kolbászt"), "kolbász");});
test("koldulás -> koldulás", function() {deepEqual( Stem("koldulás"), "koldulás");});
test("kolduló -> kolduló", function() {deepEqual( Stem("kolduló"), "kolduló");});
test("koldus -> koldus", function() {deepEqual( Stem("koldus"), "koldus");});
test("koldust -> koldus", function() {deepEqual( Stem("koldust"), "koldus");});
test("koleganőm -> koleganő", function() {deepEqual( Stem("koleganőm"), "koleganő");});
test("kolera -> kol", function() {deepEqual( Stem("kolera"), "kol");});
test("koleszban -> kolesz", function() {deepEqual( Stem("koleszban"), "kolesz");});
test("kolesztól -> kolesz", function() {deepEqual( Stem("kolesztól"), "kolesz");});
test("koleszos -> koleszos", function() {deepEqual( Stem("koleszos"), "koleszos");});
test("koleszterinszintben -> koleszterinszint", function() {deepEqual( Stem("koleszterinszintben"), "koleszterinszint");});
test("kolinál -> kol", function() {deepEqual( Stem("kolinál"), "kol");});
test("kollaboratív -> kollaboratív", function() {deepEqual( Stem("kollaboratív"), "kollaboratív");});
test("kollegiálisnak -> kollegiális", function() {deepEqual( Stem("kollegiálisnak"), "kollegiális");});
test("kollegáim -> kollega", function() {deepEqual( Stem("kollegáim"), "kollega");});
test("kollega -> kolleg", function() {deepEqual( Stem("kollega"), "kolleg");});
test("kollekciója -> kollekció", function() {deepEqual( Stem("kollekciója"), "kollekció");});
test("kollekciókat -> kollekció", function() {deepEqual( Stem("kollekciókat"), "kollekció");});
test("kollekción -> kollekció", function() {deepEqual( Stem("kollekción"), "kollekció");});
test("kollekciót -> kollekció", function() {deepEqual( Stem("kollekciót"), "kollekció");});
test("kollekcióval -> kollekció", function() {deepEqual( Stem("kollekcióval"), "kollekció");});
test("kollekciós -> kollekciós", function() {deepEqual( Stem("kollekciós"), "kollekciós");});
test("kollektivizmus -> kollektivizmus", function() {deepEqual( Stem("kollektivizmus"), "kollektivizmus");});
test("kollektivizálás -> kollektivizálás", function() {deepEqual( Stem("kollektivizálás"), "kollektivizálás");});
test("kollektív -> kollektív", function() {deepEqual( Stem("kollektív"), "kollektív");});
test("kollektívan -> kollektív", function() {deepEqual( Stem("kollektívan"), "kollektív");});
test("kollektíven -> kollektív", function() {deepEqual( Stem("kollektíven"), "kollektív");});
test("kolléganők -> kolléganő", function() {deepEqual( Stem("kolléganők"), "kolléganő");});
test("kollégisták -> kollégista", function() {deepEqual( Stem("kollégisták"), "kollégista");});
test("kollégiumi -> kollégium", function() {deepEqual( Stem("kollégiumi"), "kollégium");});
test("kollégiummal -> kollégiu", function() {deepEqual( Stem("kollégiummal"), "kollégiu");});
test("kollégiumnál -> kollégiu", function() {deepEqual( Stem("kollégiumnál"), "kollégiu");});
test("kollégiumot -> kollégiu", function() {deepEqual( Stem("kollégiumot"), "kollégiu");});
test("kollégiumról -> kollégiu", function() {deepEqual( Stem("kollégiumról"), "kollégiu");});
test("kollégiumában -> kollégium", function() {deepEqual( Stem("kollégiumában"), "kollégium");});
test("kollégiumához -> kollégium", function() {deepEqual( Stem("kollégiumához"), "kollégium");});
test("kollégium -> kollégiu", function() {deepEqual( Stem("kollégium"), "kollégiu");});
test("kollégiuma -> kollégium", function() {deepEqual( Stem("kollégiuma"), "kollégium");});
test("kollégiumba -> kollégiu", function() {deepEqual( Stem("kollégiumba"), "kollégiu");});
test("kollégiumban -> kollégiu", function() {deepEqual( Stem("kollégiumban"), "kollégiu");});
test("kollégái -> kolléga", function() {deepEqual( Stem("kollégái"), "kolléga");});
test("kolléga -> kollég", function() {deepEqual( Stem("kolléga"), "kollég");});
test("kollégáik -> kolléga", function() {deepEqual( Stem("kollégáik"), "kolléga");});
test("kollégáim -> kolléga", function() {deepEqual( Stem("kollégáim"), "kolléga");});
test("kollégáimmal -> kolléga", function() {deepEqual( Stem("kollégáimmal"), "kolléga");});
test("kollégáival -> kolléga", function() {deepEqual( Stem("kollégáival"), "kolléga");});
test("kollégája -> kollégá", function() {deepEqual( Stem("kollégája"), "kollégá");});
test("kollégájának -> kollégá", function() {deepEqual( Stem("kollégájának"), "kollégá");});
test("kollégáját -> kollégá", function() {deepEqual( Stem("kollégáját"), "kollégá");});
test("kollégájától -> kollégá", function() {deepEqual( Stem("kollégájától"), "kollégá");});
test("kollégák -> kolléga", function() {deepEqual( Stem("kollégák"), "kolléga");});
test("kollégákat -> kolléga", function() {deepEqual( Stem("kollégákat"), "kolléga");});
test("kollégám -> kolléga", function() {deepEqual( Stem("kollégám"), "kolléga");});
test("kollégánk -> kolléga", function() {deepEqual( Stem("kollégánk"), "kolléga");});
test("kollíziójának -> kollízió", function() {deepEqual( Stem("kollíziójának"), "kollízió");});
test("kollíziós -> kollíziós", function() {deepEqual( Stem("kollíziós"), "kollíziós");});
test("kolompszó -> kolompszó", function() {deepEqual( Stem("kolompszó"), "kolompszó");});
test("koloncot -> kolonc", function() {deepEqual( Stem("koloncot"), "kolonc");});
test("kolosszus -> kolosszus", function() {deepEqual( Stem("kolosszus"), "kolosszus");});
test("kolosszust -> kolosszus", function() {deepEqual( Stem("kolosszust"), "kolosszus");});
test("kolostor -> kolostor", function() {deepEqual( Stem("kolostor"), "kolostor");});
test("kolostora -> kolost", function() {deepEqual( Stem("kolostora"), "kolost");});
test("kolostorba -> kolostor", function() {deepEqual( Stem("kolostorba"), "kolostor");});
test("kolostorban -> kolostor", function() {deepEqual( Stem("kolostorban"), "kolostor");});
test("kolostorból -> kolostor", function() {deepEqual( Stem("kolostorból"), "kolostor");});
test("kolostorhoz -> kolostor", function() {deepEqual( Stem("kolostorhoz"), "kolostor");});
test("kolostorában -> kolostor", function() {deepEqual( Stem("kolostorában"), "kolostor");});
test("kolostorát -> kolostor", function() {deepEqual( Stem("kolostorát"), "kolostor");});
test("kolozsvári -> kolozsvár", function() {deepEqual( Stem("kolozsvári"), "kolozsvár");});
test("kolozsváriak -> kolozsvári", function() {deepEqual( Stem("kolozsváriak"), "kolozsvári");});
test("kolónia -> kolón", function() {deepEqual( Stem("kolónia"), "kolón");});
test("kombinilására -> kombinilás", function() {deepEqual( Stem("kombinilására"), "kombinilás");});
test("kombináció -> kombináció", function() {deepEqual( Stem("kombináció"), "kombináció");});
test("kombinációban -> kombináció", function() {deepEqual( Stem("kombinációban"), "kombináció");});
test("kombinációja -> kombináció", function() {deepEqual( Stem("kombinációja"), "kombináció");});
test("kombinációját -> kombináció", function() {deepEqual( Stem("kombinációját"), "kombináció");});
test("kombinációjával -> kombináció", function() {deepEqual( Stem("kombinációjával"), "kombináció");});
test("kombinációk -> kombináció", function() {deepEqual( Stem("kombinációk"), "kombináció");});
test("kombináción -> kombináció", function() {deepEqual( Stem("kombináción"), "kombináció");});
test("kombinációt -> kombináció", function() {deepEqual( Stem("kombinációt"), "kombináció");});
test("kombinálja -> kombinál", function() {deepEqual( Stem("kombinálja"), "kombinál");});
test("kombinálják -> kombinálja", function() {deepEqual( Stem("kombinálják"), "kombinálja");});
test("kombinálni -> kombináln", function() {deepEqual( Stem("kombinálni"), "kombináln");});
test("kombinálta -> kombinált", function() {deepEqual( Stem("kombinálta"), "kombinált");});
test("kombinált -> kombinál", function() {deepEqual( Stem("kombinált"), "kombinál");});
test("kombinálva -> kombinálv", function() {deepEqual( Stem("kombinálva"), "kombinálv");});
test("kombinálására -> kombinálás", function() {deepEqual( Stem("kombinálására"), "kombinálás");});
test("kombinálásával -> kombinálás", function() {deepEqual( Stem("kombinálásával"), "kombinálás");});
test("kombiéival -> komb", function() {deepEqual( Stem("kombiéival"), "komb");});
test("kombiénak -> komb", function() {deepEqual( Stem("kombiénak"), "komb");});
test("kombájnok -> kombájn", function() {deepEqual( Stem("kombájnok"), "kombájn");});
test("komfortfokozata -> komfortfokozat", function() {deepEqual( Stem("komfortfokozata"), "komfortfokozat");});
test("komfortja -> komfort", function() {deepEqual( Stem("komfortja"), "komfort");});
test("komfort -> komfor", function() {deepEqual( Stem("komfort"), "komfor");});
test("komfortos -> komfortos", function() {deepEqual( Stem("komfortos"), "komfortos");});
test("komfortosan -> komfortos", function() {deepEqual( Stem("komfortosan"), "komfortos");});
test("komfortosoké -> komfortos", function() {deepEqual( Stem("komfortosoké"), "komfortos");});
test("komfortosodott -> komfortosodot", function() {deepEqual( Stem("komfortosodott"), "komfortosodot");});
test("komfortosítani -> komfortosítan", function() {deepEqual( Stem("komfortosítani"), "komfortosítan");});
test("komfortosítása -> komfortosítás", function() {deepEqual( Stem("komfortosítása"), "komfortosítás");});
test("komfortérzetéért -> komfortérzet", function() {deepEqual( Stem("komfortérzetéért"), "komfortérzet");});
test("komfortérzést -> komfortérzés", function() {deepEqual( Stem("komfortérzést"), "komfortérzés");});
test("komikus -> komikus", function() {deepEqual( Stem("komikus"), "komikus");});
test("komikusak -> komikus", function() {deepEqual( Stem("komikusak"), "komikus");});
test("komikusan -> komikus", function() {deepEqual( Stem("komikusan"), "komikus");});
test("komikusnak -> komikus", function() {deepEqual( Stem("komikusnak"), "komikus");});
test("kommandósok -> kommandós", function() {deepEqual( Stem("kommandósok"), "kommandós");});
test("kommandózni -> kommandózn", function() {deepEqual( Stem("kommandózni"), "kommandózn");});
test("kommentálni -> kommentáln", function() {deepEqual( Stem("kommentálni"), "kommentáln");});
test("kommentálta -> kommentált", function() {deepEqual( Stem("kommentálta"), "kommentált");});
test("kommentált -> kommentál", function() {deepEqual( Stem("kommentált"), "kommentál");});
test("kommentár -> kommentár", function() {deepEqual( Stem("kommentár"), "kommentár");});
test("kommentárban -> kommentár", function() {deepEqual( Stem("kommentárban"), "kommentár");});
test("kommentárja -> kommentár", function() {deepEqual( Stem("kommentárja"), "kommentár");});
test("kommentárok -> kommentár", function() {deepEqual( Stem("kommentárok"), "kommentár");});
test("kommentárra -> kommentár", function() {deepEqual( Stem("kommentárra"), "kommentár");});
test("kommerciális -> kommerciális", function() {deepEqual( Stem("kommerciális"), "kommerciális");});
test("kommersz -> kommersz", function() {deepEqual( Stem("kommersz"), "kommersz");});
test("kommunikáció -> kommunikáció", function() {deepEqual( Stem("kommunikáció"), "kommunikáció");});
test("kommunikációban -> kommunikáció", function() {deepEqual( Stem("kommunikációban"), "kommunikáció");});
test("kommunikációhoz -> kommunikáció", function() {deepEqual( Stem("kommunikációhoz"), "kommunikáció");});
test("kommunikációja -> kommunikáció", function() {deepEqual( Stem("kommunikációja"), "kommunikáció");});
test("kommunikációjához -> kommunikáció", function() {deepEqual( Stem("kommunikációjához"), "kommunikáció");});
test("kommunikációját -> kommunikáció", function() {deepEqual( Stem("kommunikációját"), "kommunikáció");});
test("kommunikációjával -> kommunikáció", function() {deepEqual( Stem("kommunikációjával"), "kommunikáció");});
test("kommunikációkezelésére -> kommunikációkezelés", function() {deepEqual( Stem("kommunikációkezelésére"), "kommunikációkezelés");});
test("kommunikáción -> kommunikáció", function() {deepEqual( Stem("kommunikáción"), "kommunikáció");});
test("kommunikációnak -> kommunikáció", function() {deepEqual( Stem("kommunikációnak"), "kommunikáció");});
test("kommunikációra -> kommunikáció", function() {deepEqual( Stem("kommunikációra"), "kommunikáció");});
test("kommunikációt -> kommunikáció", function() {deepEqual( Stem("kommunikációt"), "kommunikáció");});
test("kommunikációval -> kommunikáció", function() {deepEqual( Stem("kommunikációval"), "kommunikáció");});
test("kommunikációpolitika -> kommunikációpolit", function() {deepEqual( Stem("kommunikációpolitika"), "kommunikációpolit");});
test("kommunikációs -> kommunikációs", function() {deepEqual( Stem("kommunikációs"), "kommunikációs");});
test("kommunikációtechnológiai -> kommunikációtechnológi", function() {deepEqual( Stem("kommunikációtechnológiai"), "kommunikációtechnológi");});
test("kommunikálhatnak -> kommunikálhat", function() {deepEqual( Stem("kommunikálhatnak"), "kommunikálhat");});
test("kommunikáljanak -> kommunikál", function() {deepEqual( Stem("kommunikáljanak"), "kommunikál");});
test("kommunikál -> kommunikál", function() {deepEqual( Stem("kommunikál"), "kommunikál");});
test("kommunikáljon -> kommunikálj", function() {deepEqual( Stem("kommunikáljon"), "kommunikálj");});
test("kommunikálnak -> kommunikál", function() {deepEqual( Stem("kommunikálnak"), "kommunikál");});
test("kommunikálni -> kommunikáln", function() {deepEqual( Stem("kommunikálni"), "kommunikáln");});
test("kommunikálniuk -> kommunikáln", function() {deepEqual( Stem("kommunikálniuk"), "kommunikáln");});
test("kommunikálást -> kommunikálás", function() {deepEqual( Stem("kommunikálást"), "kommunikálás");});
test("kommunikáló -> kommunikáló", function() {deepEqual( Stem("kommunikáló"), "kommunikáló");});
test("kommunista -> kommunist", function() {deepEqual( Stem("kommunista"), "kommunist");});
test("kommunisták -> kommunista", function() {deepEqual( Stem("kommunisták"), "kommunista");});
test("kommunistáké -> kommunist", function() {deepEqual( Stem("kommunistáké"), "kommunist");});
test("kommunizmus -> kommunizmus", function() {deepEqual( Stem("kommunizmus"), "kommunizmus");});
test("kommunizmusig -> kommunizmus", function() {deepEqual( Stem("kommunizmusig"), "kommunizmus");});
test("kommunizmust -> kommunizmus", function() {deepEqual( Stem("kommunizmust"), "kommunizmus");});
test("kommunkálhatnak -> kommunkálhat", function() {deepEqual( Stem("kommunkálhatnak"), "kommunkálhat");});
test("kommün -> kommü", function() {deepEqual( Stem("kommün"), "kommü");});
test("kommünről -> kommün", function() {deepEqual( Stem("kommünről"), "kommün");});
test("komoly -> komoly", function() {deepEqual( Stem("komoly"), "komoly");});
test("komolyabb -> komolyabb", function() {deepEqual( Stem("komolyabb"), "komolyabb");});
test("komolyabbak -> komolyabb", function() {deepEqual( Stem("komolyabbak"), "komolyabb");});
test("komolyabban -> komolyab", function() {deepEqual( Stem("komolyabban"), "komolyab");});
test("komolyak -> komoly", function() {deepEqual( Stem("komolyak"), "komoly");});
test("komolyan -> komoly", function() {deepEqual( Stem("komolyan"), "komoly");});
test("komolyra -> komoly", function() {deepEqual( Stem("komolyra"), "komoly");});
test("komolynak -> komoly", function() {deepEqual( Stem("komolynak"), "komoly");});
test("komolykodva -> komolykodv", function() {deepEqual( Stem("komolykodva"), "komolykodv");});
test("komolykodást -> komolykodás", function() {deepEqual( Stem("komolykodást"), "komolykodás");});
test("komolyodom -> komolyod", function() {deepEqual( Stem("komolyodom"), "komolyod");});
test("komolyodtam -> komolyodt", function() {deepEqual( Stem("komolyodtam"), "komolyodt");});
test("komolysága -> komolyság", function() {deepEqual( Stem("komolysága"), "komolyság");});
test("komolysággal -> komolyság", function() {deepEqual( Stem("komolysággal"), "komolyság");});
test("komolyságot -> komolyság", function() {deepEqual( Stem("komolyságot"), "komolyság");});
test("komolyságú -> komolyságú", function() {deepEqual( Stem("komolyságú"), "komolyságú");});
test("komolytalan -> komolytal", function() {deepEqual( Stem("komolytalan"), "komolytal");});
test("komolytalanabb -> komolytalanabb", function() {deepEqual( Stem("komolytalanabb"), "komolytalanabb");});
test("komolyzene -> komolyzen", function() {deepEqual( Stem("komolyzene"), "komolyzen");});
test("komolyzenei -> komolyzen", function() {deepEqual( Stem("komolyzenei"), "komolyzen");});
test("komor -> komor", function() {deepEqual( Stem("komor"), "komor");});
test("komorabb -> komorabb", function() {deepEqual( Stem("komorabb"), "komorabb");});
test("komorak -> komor", function() {deepEqual( Stem("komorak"), "komor");});
test("komoran -> komor", function() {deepEqual( Stem("komoran"), "komor");});
test("komorságával -> komorság", function() {deepEqual( Stem("komorságával"), "komorság");});
test("komorul -> komor", function() {deepEqual( Stem("komorul"), "komor");});
test("komorult -> komorul", function() {deepEqual( Stem("komorult"), "komorul");});
test("kompakt -> komp", function() {deepEqual( Stem("kompakt"), "komp");});
test("kompaktlemez -> kompaktlemez", function() {deepEqual( Stem("kompaktlemez"), "kompaktlemez");});
test("komparatív -> komparatív", function() {deepEqual( Stem("komparatív"), "komparatív");});
test("kompatibilis -> kompatibilis", function() {deepEqual( Stem("kompatibilis"), "kompatibilis");});
test("kompatibilissá -> kompatibilis", function() {deepEqual( Stem("kompatibilissá"), "kompatibilis");});
test("kompatibilitás -> kompatibilitás", function() {deepEqual( Stem("kompatibilitás"), "kompatibilitás");});
test("kompatibilitásban -> kompatibilitás", function() {deepEqual( Stem("kompatibilitásban"), "kompatibilitás");});
test("kompatibilitáshoz -> kompatibilitás", function() {deepEqual( Stem("kompatibilitáshoz"), "kompatibilitás");});
test("kompatibilitást -> kompatibilitás", function() {deepEqual( Stem("kompatibilitást"), "kompatibilitás");});
test("kompatibilitását -> kompatibilitás", function() {deepEqual( Stem("kompatibilitását"), "kompatibilitás");});
test("kompatibilitási -> kompatibilitás", function() {deepEqual( Stem("kompatibilitási"), "kompatibilitás");});
test("kompenzációként -> kompenzáció", function() {deepEqual( Stem("kompenzációként"), "kompenzáció");});
test("kompenzációra -> kompenzáció", function() {deepEqual( Stem("kompenzációra"), "kompenzáció");});
test("kompenzációt -> kompenzáció", function() {deepEqual( Stem("kompenzációt"), "kompenzáció");});
test("kompenzálható -> kompenzálható", function() {deepEqual( Stem("kompenzálható"), "kompenzálható");});
test("kompenzálja -> kompenzál", function() {deepEqual( Stem("kompenzálja"), "kompenzál");});
test("kompenzálják -> kompenzálja", function() {deepEqual( Stem("kompenzálják"), "kompenzálja");});
test("kompenzálni -> kompenzáln", function() {deepEqual( Stem("kompenzálni"), "kompenzáln");});
test("kompenzálta -> kompenzált", function() {deepEqual( Stem("kompenzálta"), "kompenzált");});
test("kompenzálása -> kompenzálás", function() {deepEqual( Stem("kompenzálása"), "kompenzálás");});
test("kompenzálására -> kompenzálás", function() {deepEqual( Stem("kompenzálására"), "kompenzálás");});
test("kompenzálását -> kompenzálás", function() {deepEqual( Stem("kompenzálását"), "kompenzálás");});
test("kompetenciája -> kompetenciá", function() {deepEqual( Stem("kompetenciája"), "kompetenciá");});
test("kompetenciájába -> kompetenciá", function() {deepEqual( Stem("kompetenciájába"), "kompetenciá");});
test("komplett -> komplet", function() {deepEqual( Stem("komplett"), "komplet");});
test("kompletten -> komplett", function() {deepEqual( Stem("kompletten"), "komplett");});
test("komplettírozták -> komplettírozta", function() {deepEqual( Stem("komplettírozták"), "komplettírozta");});
test("komplexitás -> komplexitás", function() {deepEqual( Stem("komplexitás"), "komplexitás");});
test("komplexitása -> komplexitás", function() {deepEqual( Stem("komplexitása"), "komplexitás");});
test("komplexumában -> komplexum", function() {deepEqual( Stem("komplexumában"), "komplexum");});
test("komplexé -> komplex", function() {deepEqual( Stem("komplexé"), "komplex");});
test("komplex -> komplex", function() {deepEqual( Stem("komplex"), "komplex");});
test("komplikáció -> komplikáció", function() {deepEqual( Stem("komplikáció"), "komplikáció");});
test("komplikált -> komplikál", function() {deepEqual( Stem("komplikált"), "komplikál");});
test("komplikáltabb -> komplikáltabb", function() {deepEqual( Stem("komplikáltabb"), "komplikáltabb");});
test("komplikáltak -> komplikált", function() {deepEqual( Stem("komplikáltak"), "komplikált");});
test("komponens -> komponens", function() {deepEqual( Stem("komponens"), "komponens");});
test("komponensből -> komponens", function() {deepEqual( Stem("komponensből"), "komponens");});
test("komponense -> komponens", function() {deepEqual( Stem("komponense"), "komponens");});
test("komponensei -> komponens", function() {deepEqual( Stem("komponensei"), "komponens");});
test("komponenseinek -> komponens", function() {deepEqual( Stem("komponenseinek"), "komponens");});
test("komponensek -> komponens", function() {deepEqual( Stem("komponensek"), "komponens");});
test("komponensekből -> komponens", function() {deepEqual( Stem("komponensekből"), "komponens");});
test("komponenseket -> komponens", function() {deepEqual( Stem("komponenseket"), "komponens");});
test("komponensenként -> komponens", function() {deepEqual( Stem("komponensenként"), "komponens");});
test("komponensnek -> komponens", function() {deepEqual( Stem("komponensnek"), "komponens");});
test("komponenst -> komponens", function() {deepEqual( Stem("komponenst"), "komponens");});
test("komponenséhez -> komponens", function() {deepEqual( Stem("komponenséhez"), "komponens");});
test("komponensének -> komponens", function() {deepEqual( Stem("komponensének"), "komponens");});
test("komponistanemzedék -> komponistanemzede", function() {deepEqual( Stem("komponistanemzedék"), "komponistanemzede");});
test("komponisták -> komponista", function() {deepEqual( Stem("komponisták"), "komponista");});
test("komponistaként -> komponist", function() {deepEqual( Stem("komponistaként"), "komponist");});
test("komponálhattam -> komponálhatt", function() {deepEqual( Stem("komponálhattam"), "komponálhatt");});
test("komponálom -> komponál", function() {deepEqual( Stem("komponálom"), "komponál");});
test("komponált -> komponál", function() {deepEqual( Stem("komponált"), "komponál");});
test("komponálásnak -> komponálás", function() {deepEqual( Stem("komponálásnak"), "komponálás");});
test("kompot -> komp", function() {deepEqual( Stem("kompot"), "komp");});
test("komphoz -> komp", function() {deepEqual( Stem("komphoz"), "komp");});
test("komp -> komp", function() {deepEqual( Stem("komp"), "komp");});
test("kompra -> komp", function() {deepEqual( Stem("kompra"), "komp");});
test("kompozitokból -> kompozit", function() {deepEqual( Stem("kompozitokból"), "kompozit");});
test("kompozíciókat -> kompozíció", function() {deepEqual( Stem("kompozíciókat"), "kompozíció");});
test("kompresszoros -> kompresszoros", function() {deepEqual( Stem("kompresszoros"), "kompresszoros");});
test("kompromisszum-kötésre -> kompromisszum-kötés", function() {deepEqual( Stem("kompromisszum-kötésre"), "kompromisszum-kötés");});
test("kompromisszumos -> kompromisszumos", function() {deepEqual( Stem("kompromisszumos"), "kompromisszumos");});
test("kompromisszummal -> kompromisszu", function() {deepEqual( Stem("kompromisszummal"), "kompromisszu");});
test("kompromisszum -> kompromisszu", function() {deepEqual( Stem("kompromisszum"), "kompromisszu");});
test("kompromisszumokra -> kompromisszum", function() {deepEqual( Stem("kompromisszumokra"), "kompromisszum");});
test("kompromisszumot -> kompromisszu", function() {deepEqual( Stem("kompromisszumot"), "kompromisszu");});
test("kompromisszumát -> kompromisszum", function() {deepEqual( Stem("kompromisszumát"), "kompromisszum");});
test("kompromiszszumnak -> kompromiszszu", function() {deepEqual( Stem("kompromiszszumnak"), "kompromiszszu");});
test("kompromiszszumra -> kompromiszszu", function() {deepEqual( Stem("kompromiszszumra"), "kompromiszszu");});
test("kompromittált -> kompromittál", function() {deepEqual( Stem("kompromittált"), "kompromittál");});
test("kompromittáló -> kompromittáló", function() {deepEqual( Stem("kompromittáló"), "kompromittáló");});
test("komputer-alkatrész -> komputer-alkatrész", function() {deepEqual( Stem("komputer-alkatrész"), "komputer-alkatrész");});
test("komputer-tomográfos -> komputer-tomográfos", function() {deepEqual( Stem("komputer-tomográfos"), "komputer-tomográfos");});
test("komputer -> komputer", function() {deepEqual( Stem("komputer"), "komputer");});
test("komputerbe -> komputer", function() {deepEqual( Stem("komputerbe"), "komputer");});
test("komputerek -> komputer", function() {deepEqual( Stem("komputerek"), "komputer");});
test("komputert -> komputer", function() {deepEqual( Stem("komputert"), "komputer");});
test("komputeres -> komputeres", function() {deepEqual( Stem("komputeres"), "komputeres");});
test("komputertomográf -> komputertomográf", function() {deepEqual( Stem("komputertomográf"), "komputertomográf");});
test("komputervilág -> komputervilág", function() {deepEqual( Stem("komputervilág"), "komputervilág");});
test("kompóthoz -> kompót", function() {deepEqual( Stem("kompóthoz"), "kompót");});
test("komásan -> komás", function() {deepEqual( Stem("komásan"), "komás");});
test("komédia -> koméd", function() {deepEqual( Stem("komédia"), "koméd");});
test("komédiáidhoz -> komédia", function() {deepEqual( Stem("komédiáidhoz"), "komédia");});
test("komédiás -> komédiás", function() {deepEqual( Stem("komédiás"), "komédiás");});
test("komótosabban -> komótosab", function() {deepEqual( Stem("komótosabban"), "komótosab");});
test("komótosan -> komótos", function() {deepEqual( Stem("komótosan"), "komótos");});
test("koncentráció -> koncentráció", function() {deepEqual( Stem("koncentráció"), "koncentráció");});
test("koncentrációja -> koncentráció", function() {deepEqual( Stem("koncentrációja"), "koncentráció");});
test("koncentrációját -> koncentráció", function() {deepEqual( Stem("koncentrációját"), "koncentráció");});
test("koncentrációra -> koncentráció", function() {deepEqual( Stem("koncentrációra"), "koncentráció");});
test("koncentrációt -> koncentráció", function() {deepEqual( Stem("koncentrációt"), "koncentráció");});
test("koncentrációs -> koncentrációs", function() {deepEqual( Stem("koncentrációs"), "koncentrációs");});
test("koncentrál -> koncentrál", function() {deepEqual( Stem("koncentrál"), "koncentrál");});
test("koncentrálnak -> koncentrál", function() {deepEqual( Stem("koncentrálnak"), "koncentrál");});
test("koncentrálni -> koncentráln", function() {deepEqual( Stem("koncentrálni"), "koncentráln");});
test("koncentrálnom -> koncentráln", function() {deepEqual( Stem("koncentrálnom"), "koncentráln");});
test("koncentrált -> koncentrál", function() {deepEqual( Stem("koncentrált"), "koncentrál");});
test("koncentráltam -> koncentrált", function() {deepEqual( Stem("koncentráltam"), "koncentrált");});
test("koncentrálunk -> koncentrál", function() {deepEqual( Stem("koncentrálunk"), "koncentrál");});
test("koncentrált -> koncentrál", function() {deepEqual( Stem("koncentrált"), "koncentrál");});
test("koncentráltabb -> koncentráltabb", function() {deepEqual( Stem("koncentráltabb"), "koncentráltabb");});
test("koncentráltabbá -> koncentráltab", function() {deepEqual( Stem("koncentráltabbá"), "koncentráltab");});
test("koncentráltság -> koncentráltság", function() {deepEqual( Stem("koncentráltság"), "koncentráltság");});
test("koncentrálva -> koncentrálv", function() {deepEqual( Stem("koncentrálva"), "koncentrálv");});
test("koncentráló -> koncentráló", function() {deepEqual( Stem("koncentráló"), "koncentráló");});
test("koncentrátor -> koncentrátor", function() {deepEqual( Stem("koncentrátor"), "koncentrátor");});
test("koncepcionális -> koncepcionális", function() {deepEqual( Stem("koncepcionális"), "koncepcionális");});
test("koncepció -> koncepció", function() {deepEqual( Stem("koncepció"), "koncepció");});
test("koncepcióból -> koncepció", function() {deepEqual( Stem("koncepcióból"), "koncepció");});
test("koncepciója -> koncepció", function() {deepEqual( Stem("koncepciója"), "koncepció");});
test("koncepciójához -> koncepció", function() {deepEqual( Stem("koncepciójához"), "koncepció");});
test("koncepciójánál -> koncepció", function() {deepEqual( Stem("koncepciójánál"), "koncepció");});
test("koncepcióját -> koncepció", function() {deepEqual( Stem("koncepcióját"), "koncepció");});
test("koncepciókat -> koncepció", function() {deepEqual( Stem("koncepciókat"), "koncepció");});
test("koncepción -> koncepció", function() {deepEqual( Stem("koncepción"), "koncepció");});
test("koncepciót -> koncepció", function() {deepEqual( Stem("koncepciót"), "koncepció");});
test("koncepcióval -> koncepció", function() {deepEqual( Stem("koncepcióval"), "koncepció");});
test("koncepcióterv -> koncepcióterv", function() {deepEqual( Stem("koncepcióterv"), "koncepcióterv");});
test("koncepciótlan -> koncepciótl", function() {deepEqual( Stem("koncepciótlan"), "koncepciótl");});
test("koncepcióváltásig -> koncepcióváltás", function() {deepEqual( Stem("koncepcióváltásig"), "koncepcióváltás");});
test("koncertanyaggal -> koncertanyag", function() {deepEqual( Stem("koncertanyaggal"), "koncertanyag");});
test("koncertanyagát -> koncertanyag", function() {deepEqual( Stem("koncertanyagát"), "koncertanyag");});
test("koncertdarabjaim -> koncertdarab", function() {deepEqual( Stem("koncertdarabjaim"), "koncertdarab");});
test("koncertek -> koncert", function() {deepEqual( Stem("koncertek"), "koncert");});
test("koncert -> koncer", function() {deepEqual( Stem("koncert"), "koncer");});
test("koncerteken -> koncert", function() {deepEqual( Stem("koncerteken"), "koncert");});
test("koncerteket -> koncert", function() {deepEqual( Stem("koncerteket"), "koncert");});
test("koncertekre -> koncert", function() {deepEqual( Stem("koncertekre"), "koncert");});
test("koncerten -> koncert", function() {deepEqual( Stem("koncerten"), "koncert");});
test("koncertet -> koncert", function() {deepEqual( Stem("koncertet"), "koncert");});
test("koncertjeiken -> koncert", function() {deepEqual( Stem("koncertjeiken"), "koncert");});
test("koncertre -> koncert", function() {deepEqual( Stem("koncertre"), "koncert");});
test("koncertről -> koncert", function() {deepEqual( Stem("koncertről"), "koncert");});
test("koncertezik -> koncertez", function() {deepEqual( Stem("koncertezik"), "koncertez");});
test("koncertjegyekhez -> koncertjegy", function() {deepEqual( Stem("koncertjegyekhez"), "koncertjegy");});
test("koncertprogramokért -> koncertprogram", function() {deepEqual( Stem("koncertprogramokért"), "koncertprogram");});
test("koncertprogramért -> koncertprogr", function() {deepEqual( Stem("koncertprogramért"), "koncertprogr");});
test("koncertteremmel -> koncertter", function() {deepEqual( Stem("koncertteremmel"), "koncertter");});
test("koncertteremre -> koncertter", function() {deepEqual( Stem("koncertteremre"), "koncertter");});
test("koncertélményem -> koncertélmény", function() {deepEqual( Stem("koncertélményem"), "koncertélmény");});
test("koncesszió -> koncesszió", function() {deepEqual( Stem("koncesszió"), "koncesszió");});
test("koncessziókról -> koncesszió", function() {deepEqual( Stem("koncessziókról"), "koncesszió");});
test("koncesszióról -> koncesszió", function() {deepEqual( Stem("koncesszióról"), "koncesszió");});
test("koncesszióköteles -> koncesszióköteles", function() {deepEqual( Stem("koncesszióköteles"), "koncesszióköteles");});
test("koncessziós -> koncessziós", function() {deepEqual( Stem("koncessziós"), "koncessziós");});
test("konceszsziós -> konceszsziós", function() {deepEqual( Stem("konceszsziós"), "konceszsziós");});
test("kondicionáló -> kondicionáló", function() {deepEqual( Stem("kondicionáló"), "kondicionáló");});
test("kondicionálótermet -> kondicionálóter", function() {deepEqual( Stem("kondicionálótermet"), "kondicionálóter");});
test("kondigépeken -> kondigép", function() {deepEqual( Stem("kondigépeken"), "kondigép");});
test("kondija -> kond", function() {deepEqual( Stem("kondija"), "kond");});
test("kondi -> kond", function() {deepEqual( Stem("kondi"), "kond");});
test("kondim -> kond", function() {deepEqual( Stem("kondim"), "kond");});
test("kondor -> kondor", function() {deepEqual( Stem("kondor"), "kondor");});
test("kondultak -> kondult", function() {deepEqual( Stem("kondultak"), "kondult");});
test("kondérban -> kondér", function() {deepEqual( Stem("kondérban"), "kondér");});
test("kondíció-megkötések -> kondíció-megkötés", function() {deepEqual( Stem("kondíció-megkötések"), "kondíció-megkötés");});
test("kondícióban -> kondíció", function() {deepEqual( Stem("kondícióban"), "kondíció");});
test("kondíciójú -> kondíciójú", function() {deepEqual( Stem("kondíciójú"), "kondíciójú");});
test("konfekcióárut -> konfekcióáru", function() {deepEqual( Stem("konfekcióárut"), "konfekcióáru");});
test("konferansz -> konferansz", function() {deepEqual( Stem("konferansz"), "konferansz");});
test("konferenciabeszélgetés -> konferenciabeszélgetés", function() {deepEqual( Stem("konferenciabeszélgetés"), "konferenciabeszélgetés");});
test("konferenciasorozatukhoz -> konferenciasorozat", function() {deepEqual( Stem("konferenciasorozatukhoz"), "konferenciasorozat");});
test("konferenciaszoftverrel -> konferenciaszoftver", function() {deepEqual( Stem("konferenciaszoftverrel"), "konferenciaszoftver");});
test("konferenciatermet -> konferenciater", function() {deepEqual( Stem("konferenciatermet"), "konferenciater");});
test("konferenciához -> konferenc", function() {deepEqual( Stem("konferenciához"), "konferenc");});
test("konferencia -> konferenc", function() {deepEqual( Stem("konferencia"), "konferenc");});
test("konferenciaként -> konferenc", function() {deepEqual( Stem("konferenciaként"), "konferenc");});
test("konferenciája -> konferenciá", function() {deepEqual( Stem("konferenciája"), "konferenciá");});
test("konferenciáján -> konferenciá", function() {deepEqual( Stem("konferenciáján"), "konferenciá");});
test("konferenciájának -> konferenciá", function() {deepEqual( Stem("konferenciájának"), "konferenciá");});
test("konferenciáját -> konferenciá", function() {deepEqual( Stem("konferenciáját"), "konferenciá");});
test("konferenciák -> konferencia", function() {deepEqual( Stem("konferenciák"), "konferencia");});
test("konferenciákon -> konferencia", function() {deepEqual( Stem("konferenciákon"), "konferencia");});
test("konferencián -> konferenc", function() {deepEqual( Stem("konferencián"), "konferenc");});
test("konferenciának -> konferenc", function() {deepEqual( Stem("konferenciának"), "konferenc");});
test("konferenciára -> konferenc", function() {deepEqual( Stem("konferenciára"), "konferenc");});
test("konferenciát -> konferenc", function() {deepEqual( Stem("konferenciát"), "konferenc");});
test("konfiguráció-ellenőrzést -> konfiguráció-ellenőrzés", function() {deepEqual( Stem("konfiguráció-ellenőrzést"), "konfiguráció-ellenőrzés");});
test("konfigurációból -> konfiguráció", function() {deepEqual( Stem("konfigurációból"), "konfiguráció");});
test("konfiguráció -> konfiguráció", function() {deepEqual( Stem("konfiguráció"), "konfiguráció");});
test("konfigurációja -> konfiguráció", function() {deepEqual( Stem("konfigurációja"), "konfiguráció");});
test("konfigurációjában -> konfiguráció", function() {deepEqual( Stem("konfigurációjában"), "konfiguráció");});
test("konfigurációjának -> konfiguráció", function() {deepEqual( Stem("konfigurációjának"), "konfiguráció");});
test("konfigurációjától -> konfiguráció", function() {deepEqual( Stem("konfigurációjától"), "konfiguráció");});
test("konfigurációkat -> konfiguráció", function() {deepEqual( Stem("konfigurációkat"), "konfiguráció");});
test("konfigurációnak -> konfiguráció", function() {deepEqual( Stem("konfigurációnak"), "konfiguráció");});
test("konfigurációra -> konfiguráció", function() {deepEqual( Stem("konfigurációra"), "konfiguráció");});
test("konfigurációs -> konfigurációs", function() {deepEqual( Stem("konfigurációs"), "konfigurációs");});
test("konfigurációt -> konfiguráció", function() {deepEqual( Stem("konfigurációt"), "konfiguráció");});
test("konfigurációval -> konfiguráció", function() {deepEqual( Stem("konfigurációval"), "konfiguráció");});
test("konfigurálhassák -> konfigurálhassa", function() {deepEqual( Stem("konfigurálhassák"), "konfigurálhassa");});
test("konfigurálhatják -> konfigurálhatja", function() {deepEqual( Stem("konfigurálhatják"), "konfigurálhatja");});
test("konfigurálható -> konfigurálható", function() {deepEqual( Stem("konfigurálható"), "konfigurálható");});
test("konfigurálhatók -> konfigurálható", function() {deepEqual( Stem("konfigurálhatók"), "konfigurálható");});
test("konfigurálja -> konfigurál", function() {deepEqual( Stem("konfigurálja"), "konfigurál");});
test("konfigurálni -> konfiguráln", function() {deepEqual( Stem("konfigurálni"), "konfiguráln");});
test("konfigurált -> konfigurál", function() {deepEqual( Stem("konfigurált"), "konfigurál");});
test("konfigurálást -> konfigurálás", function() {deepEqual( Stem("konfigurálást"), "konfigurálás");});
test("konfigurálását -> konfigurálás", function() {deepEqual( Stem("konfigurálását"), "konfigurálás");});
test("konfirmáció -> konfirmáció", function() {deepEqual( Stem("konfirmáció"), "konfirmáció");});
test("konfirmációt -> konfirmáció", function() {deepEqual( Stem("konfirmációt"), "konfirmáció");});
test("konfirmálhat -> konfirmálh", function() {deepEqual( Stem("konfirmálhat"), "konfirmálh");});
test("konfirmálja -> konfirmál", function() {deepEqual( Stem("konfirmálja"), "konfirmál");});
test("konfliktusforrás -> konfliktusforrás", function() {deepEqual( Stem("konfliktusforrás"), "konfliktusforrás");});
test("konfliktushelyzetet -> konfliktushelyzet", function() {deepEqual( Stem("konfliktushelyzetet"), "konfliktushelyzet");});
test("konfliktus -> konfliktus", function() {deepEqual( Stem("konfliktus"), "konfliktus");});
test("konfliktusa -> konfliktus", function() {deepEqual( Stem("konfliktusa"), "konfliktus");});
test("konfliktusaim -> konfliktus", function() {deepEqual( Stem("konfliktusaim"), "konfliktus");});
test("konfliktusba -> konfliktus", function() {deepEqual( Stem("konfliktusba"), "konfliktus");});
test("konfliktusban -> konfliktus", function() {deepEqual( Stem("konfliktusban"), "konfliktus");});
test("konfliktusnak -> konfliktus", function() {deepEqual( Stem("konfliktusnak"), "konfliktus");});
test("konfliktusok -> konfliktus", function() {deepEqual( Stem("konfliktusok"), "konfliktus");});
test("konfliktusokkal -> konfliktus", function() {deepEqual( Stem("konfliktusokkal"), "konfliktus");});
test("konfliktust -> konfliktus", function() {deepEqual( Stem("konfliktust"), "konfliktus");});
test("konfliktusában -> konfliktus", function() {deepEqual( Stem("konfliktusában"), "konfliktus");});
test("konflisuk -> konflis", function() {deepEqual( Stem("konflisuk"), "konflis");});
test("konformis -> konformis", function() {deepEqual( Stem("konformis"), "konformis");});
test("konformisabb -> konformisabb", function() {deepEqual( Stem("konformisabb"), "konformisabb");});
test("konformistának -> konformist", function() {deepEqual( Stem("konformistának"), "konformist");});
test("konformitást -> konformitás", function() {deepEqual( Stem("konformitást"), "konformitás");});
test("konformizálódjam -> konformizálódj", function() {deepEqual( Stem("konformizálódjam"), "konformizálódj");});
test("konformizálódni -> konformizálódn", function() {deepEqual( Stem("konformizálódni"), "konformizálódn");});
test("konfrontatív -> konfrontatív", function() {deepEqual( Stem("konfrontatív"), "konfrontatív");});
test("konfrontáció -> konfrontáció", function() {deepEqual( Stem("konfrontáció"), "konfrontáció");});
test("konganak -> kong", function() {deepEqual( Stem("konganak"), "kong");});
test("kongatta -> kongatt", function() {deepEqual( Stem("kongatta"), "kongatt");});
test("kongott -> kongot", function() {deepEqual( Stem("kongott"), "kongot");});
test("konglomerátum -> konglomerátu", function() {deepEqual( Stem("konglomerátum"), "konglomerátu");});
test("konglomerátumok -> konglomerátum", function() {deepEqual( Stem("konglomerátumok"), "konglomerátum");});
test("kongregációba -> kongregáció", function() {deepEqual( Stem("kongregációba"), "kongregáció");});
test("kongresszus -> kongresszus", function() {deepEqual( Stem("kongresszus"), "kongresszus");});
test("kongresszusán -> kongresszus", function() {deepEqual( Stem("kongresszusán"), "kongresszus");});
test("kongresszusi -> kongresszus", function() {deepEqual( Stem("kongresszusi"), "kongresszus");});
test("kongói -> kongó", function() {deepEqual( Stem("kongói"), "kongó");});
test("konjunkturális -> konjunkturális", function() {deepEqual( Stem("konjunkturális"), "konjunkturális");});
test("konjunkturálisnak -> konjunkturális", function() {deepEqual( Stem("konjunkturálisnak"), "konjunkturális");});
test("konjunktív -> konjunktív", function() {deepEqual( Stem("konjunktív"), "konjunktív");});
test("konjunktúra -> konjunktú", function() {deepEqual( Stem("konjunktúra"), "konjunktú");});
test("konjunktúra-dekonjunktúra -> konjunktúra-dekonjunktú", function() {deepEqual( Stem("konjunktúra-dekonjunktúra"), "konjunktúra-dekonjunktú");});
test("konjunktúra-időszaknál -> konjunktúra-idősz", function() {deepEqual( Stem("konjunktúra-időszaknál"), "konjunktúra-idősz");});
test("konjunktúratesztjében -> konjunktúrateszt", function() {deepEqual( Stem("konjunktúratesztjében"), "konjunktúrateszt");});
test("konkretizálható -> konkretizálható", function() {deepEqual( Stem("konkretizálható"), "konkretizálható");});
test("konkretizálja -> konkretizál", function() {deepEqual( Stem("konkretizálja"), "konkretizál");});
test("konkrét -> konkr", function() {deepEqual( Stem("konkrét"), "konkr");});
test("konkrétabb -> konkrétabb", function() {deepEqual( Stem("konkrétabb"), "konkrétabb");});
test("konkrétan -> konkrét", function() {deepEqual( Stem("konkrétan"), "konkrét");});
test("konkrétnak -> konkrét", function() {deepEqual( Stem("konkrétnak"), "konkrét");});
test("konkrétsága -> konkrétság", function() {deepEqual( Stem("konkrétsága"), "konkrétság");});
test("konkrétumot -> konkrétu", function() {deepEqual( Stem("konkrétumot"), "konkrétu");});
test("konkurencia-harc -> konkurencia-harc", function() {deepEqual( Stem("konkurencia-harc"), "konkurencia-harc");});
test("konkurenciához -> konkurenc", function() {deepEqual( Stem("konkurenciához"), "konkurenc");});
test("konkurencia -> konkurenc", function() {deepEqual( Stem("konkurencia"), "konkurenc");});
test("konkurenciája -> konkurenciá", function() {deepEqual( Stem("konkurenciája"), "konkurenciá");});
test("konkurenciájának -> konkurenciá", function() {deepEqual( Stem("konkurenciájának"), "konkurenciá");});
test("konkurenciájától -> konkurenciá", function() {deepEqual( Stem("konkurenciájától"), "konkurenciá");});
test("konkurencián -> konkurenc", function() {deepEqual( Stem("konkurencián"), "konkurenc");});
test("konkurenciát -> konkurenc", function() {deepEqual( Stem("konkurenciát"), "konkurenc");});
test("konkurenciától -> konkurenc", function() {deepEqual( Stem("konkurenciától"), "konkurenc");});
test("konkurens -> konkurens", function() {deepEqual( Stem("konkurens"), "konkurens");});
test("konkurense -> konkurens", function() {deepEqual( Stem("konkurense"), "konkurens");});
test("konkurensekkel -> konkurens", function() {deepEqual( Stem("konkurensekkel"), "konkurens");});
test("konkurensen -> konkurens", function() {deepEqual( Stem("konkurensen"), "konkurens");});
test("konok -> kon", function() {deepEqual( Stem("konok"), "kon");});
test("konspiratív -> konspiratív", function() {deepEqual( Stem("konspiratív"), "konspiratív");});
test("konstatálom -> konstatál", function() {deepEqual( Stem("konstatálom"), "konstatál");});
test("konstatáltuk -> konstatált", function() {deepEqual( Stem("konstatáltuk"), "konstatált");});
test("konstellációk -> konstelláció", function() {deepEqual( Stem("konstellációk"), "konstelláció");});
test("konstitutív -> konstitutív", function() {deepEqual( Stem("konstitutív"), "konstitutív");});
test("konstrukció -> konstrukció", function() {deepEqual( Stem("konstrukció"), "konstrukció");});
test("konstrukcióban -> konstrukció", function() {deepEqual( Stem("konstrukcióban"), "konstrukció");});
test("konstrukciója -> konstrukció", function() {deepEqual( Stem("konstrukciója"), "konstrukció");});
test("konstrukciójából -> konstrukció", function() {deepEqual( Stem("konstrukciójából"), "konstrukció");});
test("konstrukcióját -> konstrukció", function() {deepEqual( Stem("konstrukcióját"), "konstrukció");});
test("konstrukciók -> konstrukció", function() {deepEqual( Stem("konstrukciók"), "konstrukció");});
test("konstrukciókat -> konstrukció", function() {deepEqual( Stem("konstrukciókat"), "konstrukció");});
test("konstrukciókkal -> konstrukció", function() {deepEqual( Stem("konstrukciókkal"), "konstrukció");});
test("konstrukciót -> konstrukció", function() {deepEqual( Stem("konstrukciót"), "konstrukció");});
test("konstrukciós -> konstrukciós", function() {deepEqual( Stem("konstrukciós"), "konstrukciós");});
test("konstruktivisták -> konstruktivista", function() {deepEqual( Stem("konstruktivisták"), "konstruktivista");});
test("konstruktivizmus -> konstruktivizmus", function() {deepEqual( Stem("konstruktivizmus"), "konstruktivizmus");});
test("konstruktivizmusra -> konstruktivizmus", function() {deepEqual( Stem("konstruktivizmusra"), "konstruktivizmus");});
test("konstruktivizmussal -> konstruktivizmus", function() {deepEqual( Stem("konstruktivizmussal"), "konstruktivizmus");});
test("konstruktív -> konstruktív", function() {deepEqual( Stem("konstruktív"), "konstruktív");});
test("konstruáló -> konstruáló", function() {deepEqual( Stem("konstruáló"), "konstruáló");});
test("konszenzus -> konszenzus", function() {deepEqual( Stem("konszenzus"), "konszenzus");});
test("konszenzuskeresés -> konszenzuskeresés", function() {deepEqual( Stem("konszenzuskeresés"), "konszenzuskeresés");});
test("konszernalakzat -> konszernalakz", function() {deepEqual( Stem("konszernalakzat"), "konszernalakz");});
test("konszernalakzatokat -> konszernalakzat", function() {deepEqual( Stem("konszernalakzatokat"), "konszernalakzat");});
test("konszernek -> konszer", function() {deepEqual( Stem("konszernek"), "konszer");});
test("konszern -> konszer", function() {deepEqual( Stem("konszern"), "konszer");});
test("konszernél -> konszer", function() {deepEqual( Stem("konszernél"), "konszer");});
test("konszernfokozat -> konszernfokoz", function() {deepEqual( Stem("konszernfokozat"), "konszernfokoz");});
test("konszernhelyzet -> konszernhelyz", function() {deepEqual( Stem("konszernhelyzet"), "konszernhelyz");});
test("konszernhelyzetben -> konszernhelyzet", function() {deepEqual( Stem("konszernhelyzetben"), "konszernhelyzet");});
test("konszernhelyzetek -> konszernhelyzet", function() {deepEqual( Stem("konszernhelyzetek"), "konszernhelyzet");});
test("konszernhelyzeteket -> konszernhelyzet", function() {deepEqual( Stem("konszernhelyzeteket"), "konszernhelyzet");});
test("konszernhelyzetekről -> konszernhelyzet", function() {deepEqual( Stem("konszernhelyzetekről"), "konszernhelyzet");});
test("konszernjogi -> konszernjog", function() {deepEqual( Stem("konszernjogi"), "konszernjog");});
test("konszernjognál -> konszernjog", function() {deepEqual( Stem("konszernjognál"), "konszernjog");});
test("konszernjog -> konszernjog", function() {deepEqual( Stem("konszernjog"), "konszernjog");});
test("konszernkapcsolatokat -> konszernkapcsolat", function() {deepEqual( Stem("konszernkapcsolatokat"), "konszernkapcsolat");});
test("konszernszabályokat -> konszernszabály", function() {deepEqual( Stem("konszernszabályokat"), "konszernszabály");});
test("konszerntényállás -> konszerntényállás", function() {deepEqual( Stem("konszerntényállás"), "konszerntényállás");});
test("konszolidáció -> konszolidáció", function() {deepEqual( Stem("konszolidáció"), "konszolidáció");});
test("konszolidációban -> konszolidáció", function() {deepEqual( Stem("konszolidációban"), "konszolidáció");});
test("konszolidációra -> konszolidáció", function() {deepEqual( Stem("konszolidációra"), "konszolidáció");});
test("konszolidációt -> konszolidáció", function() {deepEqual( Stem("konszolidációt"), "konszolidáció");});
test("konszolidációval -> konszolidáció", function() {deepEqual( Stem("konszolidációval"), "konszolidáció");});
test("konszolidálni -> konszolidáln", function() {deepEqual( Stem("konszolidálni"), "konszolidáln");});
test("konszolidáltak -> konszolidált", function() {deepEqual( Stem("konszolidáltak"), "konszolidált");});
test("konszolidált -> konszolidál", function() {deepEqual( Stem("konszolidált"), "konszolidál");});
test("konszolidálásának -> konszolidálás", function() {deepEqual( Stem("konszolidálásának"), "konszolidálás");});
test("konszolidálódott -> konszolidálódot", function() {deepEqual( Stem("konszolidálódott"), "konszolidálódot");});
test("konszolidálódásra -> konszolidálódás", function() {deepEqual( Stem("konszolidálódásra"), "konszolidálódás");});
test("kontakt -> kont", function() {deepEqual( Stem("kontakt"), "kont");});
test("kontaktlencsémet -> kontaktlencse", function() {deepEqual( Stem("kontaktlencsémet"), "kontaktlencse");});
test("kontextusa -> kontextus", function() {deepEqual( Stem("kontextusa"), "kontextus");});
test("kontextusban -> kontextus", function() {deepEqual( Stem("kontextusban"), "kontextus");});
test("kontextustól -> kontextus", function() {deepEqual( Stem("kontextustól"), "kontextus");});
test("kontextusában -> kontextus", function() {deepEqual( Stem("kontextusában"), "kontextus");});
test("kontextusának -> kontextus", function() {deepEqual( Stem("kontextusának"), "kontextus");});
test("kontinens -> kontinens", function() {deepEqual( Stem("kontinens"), "kontinens");});
test("kontinensek -> kontinens", function() {deepEqual( Stem("kontinensek"), "kontinens");});
test("kontinenseket -> kontinens", function() {deepEqual( Stem("kontinenseket"), "kontinens");});
test("kontinensen -> kontinens", function() {deepEqual( Stem("kontinensen"), "kontinens");});
test("kontinensnek -> kontinens", function() {deepEqual( Stem("kontinensnek"), "kontinens");});
test("kontinensre -> kontinens", function() {deepEqual( Stem("kontinensre"), "kontinens");});
test("kontinenssel -> kontinens", function() {deepEqual( Stem("kontinenssel"), "kontinens");});
test("kontinenst -> kontinens", function() {deepEqual( Stem("kontinenst"), "kontinens");});
test("kontinenstalálkozóra -> kontinenstalálkozó", function() {deepEqual( Stem("kontinenstalálkozóra"), "kontinenstalálkozó");});
test("kontinensvetélkedő -> kontinensvetélkedő", function() {deepEqual( Stem("kontinensvetélkedő"), "kontinensvetélkedő");});
test("kontinensvetélkedőt -> kontinensvetélkedő", function() {deepEqual( Stem("kontinensvetélkedőt"), "kontinensvetélkedő");});
test("kontinentális -> kontinentális", function() {deepEqual( Stem("kontinentális"), "kontinentális");});
test("kontra -> kont", function() {deepEqual( Stem("kontra"), "kont");});
test("kontraszt -> kontrasz", function() {deepEqual( Stem("kontraszt"), "kontrasz");});
test("kontrasztos -> kontrasztos", function() {deepEqual( Stem("kontrasztos"), "kontrasztos");});
test("kontrollert -> kontroller", function() {deepEqual( Stem("kontrollert"), "kontroller");});
test("kontrollingban -> kontrolling", function() {deepEqual( Stem("kontrollingban"), "kontrolling");});
test("kontrollingterületeket -> kontrollingterület", function() {deepEqual( Stem("kontrollingterületeket"), "kontrollingterület");});
test("kontrollja -> kontroll", function() {deepEqual( Stem("kontrollja"), "kontroll");});
test("kontroll -> kontroll", function() {deepEqual( Stem("kontroll"), "kontroll");});
test("kontrolljára -> kontroll", function() {deepEqual( Stem("kontrolljára"), "kontroll");});
test("kontrollját -> kontroll", function() {deepEqual( Stem("kontrollját"), "kontroll");});
test("kontrollnak -> kontroll", function() {deepEqual( Stem("kontrollnak"), "kontroll");});
test("kontrollok -> kontroll", function() {deepEqual( Stem("kontrollok"), "kontroll");});
test("kontrollt -> kontroll", function() {deepEqual( Stem("kontrollt"), "kontroll");});
test("kontrolltevékenységet -> kontrolltevékenység", function() {deepEqual( Stem("kontrolltevékenységet"), "kontrolltevékenység");});
test("kontrollálható -> kontrollálható", function() {deepEqual( Stem("kontrollálható"), "kontrollálható");});
test("kontráznak -> kontráz", function() {deepEqual( Stem("kontráznak"), "kontráz");});
test("kontrázza -> kontrázz", function() {deepEqual( Stem("kontrázza"), "kontrázz");});
test("konty -> konty", function() {deepEqual( Stem("konty"), "konty");});
test("kontyokra -> konty", function() {deepEqual( Stem("kontyokra"), "konty");});
test("kontyukhoz -> konty", function() {deepEqual( Stem("kontyukhoz"), "konty");});
test("kontyos -> kontyos", function() {deepEqual( Stem("kontyos"), "kontyos");});
test("kontármunkák -> kontármunka", function() {deepEqual( Stem("kontármunkák"), "kontármunka");});
test("konténer -> konténer", function() {deepEqual( Stem("konténer"), "konténer");});
test("konténerbe -> konténer", function() {deepEqual( Stem("konténerbe"), "konténer");});
test("konténerben -> konténer", function() {deepEqual( Stem("konténerben"), "konténer");});
test("konténerek -> konténer", function() {deepEqual( Stem("konténerek"), "konténer");});
test("konténerre -> konténer", function() {deepEqual( Stem("konténerre"), "konténer");});
test("konténerrel -> konténer", function() {deepEqual( Stem("konténerrel"), "konténer");});
test("konténert -> konténer", function() {deepEqual( Stem("konténert"), "konténer");});
test("konténerhajójával -> konténerhajó", function() {deepEqual( Stem("konténerhajójával"), "konténerhajó");});
test("kontúrjainak -> kontúr", function() {deepEqual( Stem("kontúrjainak"), "kontúr");});
test("kontúrok -> kontúr", function() {deepEqual( Stem("kontúrok"), "kontúr");});
test("konvencionális -> konvencionális", function() {deepEqual( Stem("konvencionális"), "konvencionális");});
test("konvenció -> konvenció", function() {deepEqual( Stem("konvenció"), "konvenció");});
test("konvenciók -> konvenció", function() {deepEqual( Stem("konvenciók"), "konvenció");});
test("konvenciót -> konvenció", function() {deepEqual( Stem("konvenciót"), "konvenció");});
test("konvergencia -> konvergenc", function() {deepEqual( Stem("konvergencia"), "konvergenc");});
test("konvergenciája -> konvergenciá", function() {deepEqual( Stem("konvergenciája"), "konvergenciá");});
test("konvergenciájának -> konvergenciá", function() {deepEqual( Stem("konvergenciájának"), "konvergenciá");});
test("konvergenciának -> konvergenc", function() {deepEqual( Stem("konvergenciának"), "konvergenc");});
test("konvergáló -> konvergáló", function() {deepEqual( Stem("konvergáló"), "konvergáló");});
test("konvertibilis -> konvertibilis", function() {deepEqual( Stem("konvertibilis"), "konvertibilis");});
test("konvertálhatják -> konvertálhatja", function() {deepEqual( Stem("konvertálhatják"), "konvertálhatja");});
test("konvertálható -> konvertálható", function() {deepEqual( Stem("konvertálható"), "konvertálható");});
test("konvertálhatók -> konvertálható", function() {deepEqual( Stem("konvertálhatók"), "konvertálható");});
test("konvertáljuk -> konvertál", function() {deepEqual( Stem("konvertáljuk"), "konvertál");});
test("konvertálják -> konvertálja", function() {deepEqual( Stem("konvertálják"), "konvertálja");});
test("konvertálni -> konvertáln", function() {deepEqual( Stem("konvertálni"), "konvertáln");});
test("konvertálnia -> konvertáln", function() {deepEqual( Stem("konvertálnia"), "konvertáln");});
test("konvertálva -> konvertálv", function() {deepEqual( Stem("konvertálva"), "konvertálv");});
test("konvertálása -> konvertálás", function() {deepEqual( Stem("konvertálása"), "konvertálás");});
test("konvertálásához -> konvertálás", function() {deepEqual( Stem("konvertálásához"), "konvertálás");});
test("konverzió -> konverzió", function() {deepEqual( Stem("konverzió"), "konverzió");});
test("konverziókat -> konverzió", function() {deepEqual( Stem("konverziókat"), "konverzió");});
test("konverziónak -> konverzió", function() {deepEqual( Stem("konverziónak"), "konverzió");});
test("konverziót -> konverzió", function() {deepEqual( Stem("konverziót"), "konverzió");});
test("konvojügy -> konvojügy", function() {deepEqual( Stem("konvojügy"), "konvojügy");});
test("konyakot -> kony", function() {deepEqual( Stem("konyakot"), "kony");});
test("konyhaasztalnál -> konyhaasztal", function() {deepEqual( Stem("konyhaasztalnál"), "konyhaasztal");});
test("konyhahelyiség -> konyhahelyiség", function() {deepEqual( Stem("konyhahelyiség"), "konyhahelyiség");});
test("konyhai -> konyh", function() {deepEqual( Stem("konyhai"), "konyh");});
test("konyhakést -> konyhakés", function() {deepEqual( Stem("konyhakést"), "konyhakés");});
test("konyhaszagú -> konyhaszagú", function() {deepEqual( Stem("konyhaszagú"), "konyhaszagú");});
test("konyhába -> konyh", function() {deepEqual( Stem("konyhába"), "konyh");});
test("konyha -> konyh", function() {deepEqual( Stem("konyha"), "konyh");});
test("konyhában -> konyh", function() {deepEqual( Stem("konyhában"), "konyh");});
test("konyhából -> konyh", function() {deepEqual( Stem("konyhából"), "konyh");});
test("konyháink -> konyha", function() {deepEqual( Stem("konyháink"), "konyha");});
test("konyhájában -> konyhá", function() {deepEqual( Stem("konyhájában"), "konyhá");});
test("konyhára -> konyh", function() {deepEqual( Stem("konyhára"), "konyh");});
test("konyháról -> konyh", function() {deepEqual( Stem("konyháról"), "konyh");});
test("konyhával -> konyh", function() {deepEqual( Stem("konyhával"), "konyh");});
test("konyítottak -> konyított", function() {deepEqual( Stem("konyítottak"), "konyított");});
test("konzekvenciák -> konzekvencia", function() {deepEqual( Stem("konzekvenciák"), "konzekvencia");});
test("konzervativizmus -> konzervativizmus", function() {deepEqual( Stem("konzervativizmus"), "konzervativizmus");});
test("konzervativizmustól -> konzervativizmus", function() {deepEqual( Stem("konzervativizmustól"), "konzervativizmus");});
test("konzervatív -> konzervatív", function() {deepEqual( Stem("konzervatív"), "konzervatív");});
test("konzervdobozok -> konzervdoboz", function() {deepEqual( Stem("konzervdobozok"), "konzervdoboz");});
test("konzervek -> konzerv", function() {deepEqual( Stem("konzervek"), "konzerv");});
test("konzerv -> konzerv", function() {deepEqual( Stem("konzerv"), "konzerv");});
test("konzervgyár -> konzervgyár", function() {deepEqual( Stem("konzervgyár"), "konzervgyár");});
test("konzervgyárak -> konzervgyár", function() {deepEqual( Stem("konzervgyárak"), "konzervgyár");});
test("konzerviparban -> konzervipar", function() {deepEqual( Stem("konzerviparban"), "konzervipar");});
test("konzervipart -> konzervipar", function() {deepEqual( Stem("konzervipart"), "konzervipar");});
test("konzervipari -> konzervipar", function() {deepEqual( Stem("konzervipari"), "konzervipar");});
test("konzervtechnológia -> konzervtechnológ", function() {deepEqual( Stem("konzervtechnológia"), "konzervtechnológ");});
test("konzerválták -> konzerválta", function() {deepEqual( Stem("konzerválták"), "konzerválta");});
test("konzisztencia-ellenőrzés -> konzisztencia-ellenőrzés", function() {deepEqual( Stem("konzisztencia-ellenőrzés"), "konzisztencia-ellenőrzés");});
test("konzisztencia-ellenőrzést -> konzisztencia-ellenőrzés", function() {deepEqual( Stem("konzisztencia-ellenőrzést"), "konzisztencia-ellenőrzés");});
test("konzisztens -> konzisztens", function() {deepEqual( Stem("konzisztens"), "konzisztens");});
test("konzisztensek -> konzisztens", function() {deepEqual( Stem("konzisztensek"), "konzisztens");});
test("konzolablak -> konzolabl", function() {deepEqual( Stem("konzolablak"), "konzolabl");});
test("konzolablakon -> konzolabl", function() {deepEqual( Stem("konzolablakon"), "konzolabl");});
test("konzolablakos -> konzolablakos", function() {deepEqual( Stem("konzolablakos"), "konzolablakos");});
test("konzolfa -> konzolf", function() {deepEqual( Stem("konzolfa"), "konzolf");});
test("konzolfán -> konzolf", function() {deepEqual( Stem("konzolfán"), "konzolf");});
test("konzolban -> konzol", function() {deepEqual( Stem("konzolban"), "konzol");});
test("konzol -> konzol", function() {deepEqual( Stem("konzol"), "konzol");});
test("konzolból -> konzol", function() {deepEqual( Stem("konzolból"), "konzol");});
test("konzollal -> konzol", function() {deepEqual( Stem("konzollal"), "konzol");});
test("konzolok -> konzol", function() {deepEqual( Stem("konzolok"), "konzol");});
test("konzolon -> konzol", function() {deepEqual( Stem("konzolon"), "konzol");});
test("konzolról -> konzol", function() {deepEqual( Stem("konzolról"), "konzol");});
test("konzolt -> konzol", function() {deepEqual( Stem("konzolt"), "konzol");});
test("konzorcium -> konzorciu", function() {deepEqual( Stem("konzorcium"), "konzorciu");});
test("konzorciuma -> konzorcium", function() {deepEqual( Stem("konzorciuma"), "konzorcium");});
test("konzorciumban -> konzorciu", function() {deepEqual( Stem("konzorciumban"), "konzorciu");});
test("konzorciummal -> konzorciu", function() {deepEqual( Stem("konzorciummal"), "konzorciu");});
test("konzorciumnak -> konzorciu", function() {deepEqual( Stem("konzorciumnak"), "konzorciu");});
test("konzorciumok -> konzorcium", function() {deepEqual( Stem("konzorciumok"), "konzorcium");});
test("konzulens -> konzulens", function() {deepEqual( Stem("konzulens"), "konzulens");});
test("konzuli -> konzul", function() {deepEqual( Stem("konzuli"), "konzul");});
test("konzulja -> konzul", function() {deepEqual( Stem("konzulja"), "konzul");});
test("konzulok -> konzul", function() {deepEqual( Stem("konzulok"), "konzul");});
test("konzultációval -> konzultáció", function() {deepEqual( Stem("konzultációval"), "konzultáció");});
test("konzultál -> konzultál", function() {deepEqual( Stem("konzultál"), "konzultál");});
test("konzultáltak -> konzultált", function() {deepEqual( Stem("konzultáltak"), "konzultált");});
test("konzíliumot -> konzíliu", function() {deepEqual( Stem("konzíliumot"), "konzíliu");});
test("kooperativitás -> kooperativitás", function() {deepEqual( Stem("kooperativitás"), "kooperativitás");});
test("kooperatív -> kooperatív", function() {deepEqual( Stem("kooperatív"), "kooperatív");});
test("kooperáció -> kooperáció", function() {deepEqual( Stem("kooperáció"), "kooperáció");});
test("kooperációs -> kooperációs", function() {deepEqual( Stem("kooperációs"), "kooperációs");});
test("kooperálunk -> kooperál", function() {deepEqual( Stem("kooperálunk"), "kooperál");});
test("koordinatív -> koordinatív", function() {deepEqual( Stem("koordinatív"), "koordinatív");});
test("koordinációja -> koordináció", function() {deepEqual( Stem("koordinációja"), "koordináció");});
test("koordinációt -> koordináció", function() {deepEqual( Stem("koordinációt"), "koordináció");});
test("koordinálja -> koordinál", function() {deepEqual( Stem("koordinálja"), "koordinál");});
test("koordinált -> koordinál", function() {deepEqual( Stem("koordinált"), "koordinál");});
test("koordinálása -> koordinálás", function() {deepEqual( Stem("koordinálása"), "koordinálás");});
test("koordinálásához -> koordinálás", function() {deepEqual( Stem("koordinálásához"), "koordinálás");});
test("koordinálására -> koordinálás", function() {deepEqual( Stem("koordinálására"), "koordinálás");});
test("koordinálásával -> koordinálás", function() {deepEqual( Stem("koordinálásával"), "koordinálás");});
test("koordináló -> koordináló", function() {deepEqual( Stem("koordináló"), "koordináló");});
test("koordinátáit -> koordináta", function() {deepEqual( Stem("koordinátáit"), "koordináta");});
test("kopasz -> kopasz", function() {deepEqual( Stem("kopasz"), "kopasz");});
test("kopaszabb -> kopaszabb", function() {deepEqual( Stem("kopaszabb"), "kopaszabb");});
test("kopaszra -> kopasz", function() {deepEqual( Stem("kopaszra"), "kopasz");});
test("kopaszodik -> kopaszod", function() {deepEqual( Stem("kopaszodik"), "kopaszod");});
test("kopaszodás -> kopaszodás", function() {deepEqual( Stem("kopaszodás"), "kopaszodás");});
test("kopaszságtól -> kopaszság", function() {deepEqual( Stem("kopaszságtól"), "kopaszság");});
test("kopjafájánál -> kopjafá", function() {deepEqual( Stem("kopjafájánál"), "kopjafá");});
test("kopjások -> kopjás", function() {deepEqual( Stem("kopjások"), "kopjás");});
test("koplalást -> koplalás", function() {deepEqual( Stem("koplalást"), "koplalás");});
test("kopog -> kopog", function() {deepEqual( Stem("kopog"), "kopog");});
test("kopogott -> kopogot", function() {deepEqual( Stem("kopogott"), "kopogot");});
test("kopogtat -> kopogt", function() {deepEqual( Stem("kopogtat"), "kopogt");});
test("kopogtatnak -> kopogtat", function() {deepEqual( Stem("kopogtatnak"), "kopogtat");});
test("kopogtattak -> kopogtatt", function() {deepEqual( Stem("kopogtattak"), "kopogtatt");});
test("kopogtatás -> kopogtatás", function() {deepEqual( Stem("kopogtatás"), "kopogtatás");});
test("kopogva -> kopogv", function() {deepEqual( Stem("kopogva"), "kopogv");});
test("kopogás -> kopogás", function() {deepEqual( Stem("kopogás"), "kopogás");});
test("kopogása -> kopogás", function() {deepEqual( Stem("kopogása"), "kopogás");});
test("kopogásra -> kopogás", function() {deepEqual( Stem("kopogásra"), "kopogás");});
test("kopogását -> kopogás", function() {deepEqual( Stem("kopogását"), "kopogás");});
test("kopogós -> kopogós", function() {deepEqual( Stem("kopogós"), "kopogós");});
test("koponyacsonton -> koponyacsont", function() {deepEqual( Stem("koponyacsonton"), "koponyacsont");});
test("koponyavizsgálattal -> koponyavizsgál", function() {deepEqual( Stem("koponyavizsgálattal"), "koponyavizsgál");});
test("koponyában -> kopony", function() {deepEqual( Stem("koponyában"), "kopony");});
test("koponyádban -> koponya", function() {deepEqual( Stem("koponyádban"), "koponya");});
test("koponyája -> koponyá", function() {deepEqual( Stem("koponyája"), "koponyá");});
test("koponyájába -> koponyá", function() {deepEqual( Stem("koponyájába"), "koponyá");});
test("koponyájában -> koponyá", function() {deepEqual( Stem("koponyájában"), "koponyá");});
test("koponyájából -> koponyá", function() {deepEqual( Stem("koponyájából"), "koponyá");});
test("koponyáján -> koponyá", function() {deepEqual( Stem("koponyáján"), "koponyá");});
test("koponyájára -> koponyá", function() {deepEqual( Stem("koponyájára"), "koponyá");});
test("koponyáját -> koponyá", function() {deepEqual( Stem("koponyáját"), "koponyá");});
test("koponyákat -> koponya", function() {deepEqual( Stem("koponyákat"), "koponya");});
test("koporsó -> koporsó", function() {deepEqual( Stem("koporsó"), "koporsó");});
test("koporsóban -> koporsó", function() {deepEqual( Stem("koporsóban"), "koporsó");});
test("koporsót -> koporsó", function() {deepEqual( Stem("koporsót"), "koporsó");});
test("koporsóval -> koporsó", function() {deepEqual( Stem("koporsóval"), "koporsó");});
test("koporsós -> koporsós", function() {deepEqual( Stem("koporsós"), "koporsós");});
test("koporsószerű -> koporsószerű", function() {deepEqual( Stem("koporsószerű"), "koporsószerű");});
test("kopott -> kopot", function() {deepEqual( Stem("kopott"), "kopot");});
test("kopp -> kopp", function() {deepEqual( Stem("kopp"), "kopp");});
test("koppant -> koppan", function() {deepEqual( Stem("koppant"), "koppan");});
test("koppanással -> koppanás", function() {deepEqual( Stem("koppanással"), "koppanás");});
test("koppenhágai -> koppenhág", function() {deepEqual( Stem("koppenhágai"), "koppenhág");});
test("koproducer -> koproducer", function() {deepEqual( Stem("koproducer"), "koproducer");});
test("koproducernek -> koproducer", function() {deepEqual( Stem("koproducernek"), "koproducer");});
test("koprodukció -> koprodukció", function() {deepEqual( Stem("koprodukció"), "koprodukció");});
test("koprodukcióban -> koprodukció", function() {deepEqual( Stem("koprodukcióban"), "koprodukció");});
test("koprodukcióról -> koprodukció", function() {deepEqual( Stem("koprodukcióról"), "koprodukció");});
test("koprodukciós -> koprodukciós", function() {deepEqual( Stem("koprodukciós"), "koprodukciós");});
test("koptatja -> koptat", function() {deepEqual( Stem("koptatja"), "koptat");});
test("koptatta -> koptatt", function() {deepEqual( Stem("koptatta"), "koptatt");});
test("koptattam -> koptatt", function() {deepEqual( Stem("koptattam"), "koptatt");});
test("koptattuk -> koptatt", function() {deepEqual( Stem("koptattuk"), "koptatt");});
test("koptató -> koptató", function() {deepEqual( Stem("koptató"), "koptató");});
test("kopácsolás -> kopácsolás", function() {deepEqual( Stem("kopácsolás"), "kopácsolás");});
test("kopár -> kopár", function() {deepEqual( Stem("kopár"), "kopár");});
test("kopáron -> kopár", function() {deepEqual( Stem("kopáron"), "kopár");});
test("kora -> ko", function() {deepEqual( Stem("kora"), "ko");});
test("kora-román -> kora-rom", function() {deepEqual( Stem("kora-román"), "kora-rom");});
test("korabeli -> korabel", function() {deepEqual( Stem("korabeli"), "korabel");});
test("korai -> kor", function() {deepEqual( Stem("korai"), "kor");});
test("korainak -> kor", function() {deepEqual( Stem("korainak"), "kor");});
test("korallból -> korall", function() {deepEqual( Stem("korallból"), "korall");});
test("koralldarabka -> koralldarab", function() {deepEqual( Stem("koralldarabka"), "koralldarab");});
test("korbáccsal -> korbács", function() {deepEqual( Stem("korbáccsal"), "korbács");});
test("korbácsfélével -> korbácsfél", function() {deepEqual( Stem("korbácsfélével"), "korbácsfél");});
test("korbácsoljanak -> korbácsol", function() {deepEqual( Stem("korbácsoljanak"), "korbácsol");});
test("korbácsolták -> korbácsolta", function() {deepEqual( Stem("korbácsolták"), "korbácsolta");});
test("korcsolyapályává -> korcsolyapály", function() {deepEqual( Stem("korcsolyapályává"), "korcsolyapály");});
test("korcsoport -> korcsopor", function() {deepEqual( Stem("korcsoport"), "korcsopor");});
test("korcsoportban -> korcsoport", function() {deepEqual( Stem("korcsoportban"), "korcsoport");});
test("korcsoportunkból -> korcsoport", function() {deepEqual( Stem("korcsoportunkból"), "korcsoport");});
test("korcsosításában -> korcsosítás", function() {deepEqual( Stem("korcsosításában"), "korcsosítás");});
test("kordában -> kord", function() {deepEqual( Stem("kordában"), "kord");});
test("kordéra -> kord", function() {deepEqual( Stem("kordéra"), "kord");});
test("koreográfiáját -> koreográfiá", function() {deepEqual( Stem("koreográfiáját"), "koreográfiá");});
test("koreográfiákat -> koreográfia", function() {deepEqual( Stem("koreográfiákat"), "koreográfia");});
test("koreográfiával -> koreográf", function() {deepEqual( Stem("koreográfiával"), "koreográf");});
test("korhatár -> korhatár", function() {deepEqual( Stem("korhatár"), "korhatár");});
test("korhatáron -> korhatár", function() {deepEqual( Stem("korhatáron"), "korhatár");});
test("korholta -> korholt", function() {deepEqual( Stem("korholta"), "korholt");});
test("korholását -> korholás", function() {deepEqual( Stem("korholását"), "korholás");});
test("kori -> kor", function() {deepEqual( Stem("kori"), "kor");});
test("korival -> kor", function() {deepEqual( Stem("korival"), "kor");});
test("korizni -> korizn", function() {deepEqual( Stem("korizni"), "korizn");});
test("korlát -> korl", function() {deepEqual( Stem("korlát"), "korl");});
test("korlátai -> korlát", function() {deepEqual( Stem("korlátai"), "korlát");});
test("korlátaimat -> korlát", function() {deepEqual( Stem("korlátaimat"), "korlát");});
test("korlátaira -> korlát", function() {deepEqual( Stem("korlátaira"), "korlát");});
test("korlátairól -> korlát", function() {deepEqual( Stem("korlátairól"), "korlát");});
test("korlátait -> korlát", function() {deepEqual( Stem("korlátait"), "korlát");});
test("korlátba -> korlát", function() {deepEqual( Stem("korlátba"), "korlát");});
test("korláthoz -> korlát", function() {deepEqual( Stem("korláthoz"), "korlát");});
test("korlátja -> korlát", function() {deepEqual( Stem("korlátja"), "korlát");});
test("korlátjaként -> korlát", function() {deepEqual( Stem("korlátjaként"), "korlát");});
test("korlátjának -> korlát", function() {deepEqual( Stem("korlátjának"), "korlát");});
test("korlátjára -> korlát", function() {deepEqual( Stem("korlátjára"), "korlát");});
test("korlátját -> korlát", function() {deepEqual( Stem("korlátját"), "korlát");});
test("korlátjával -> korlát", function() {deepEqual( Stem("korlátjával"), "korlát");});
test("korlátként -> korlát", function() {deepEqual( Stem("korlátként"), "korlát");});
test("korlátnál -> korlát", function() {deepEqual( Stem("korlátnál"), "korlát");});
test("korlátok -> korlát", function() {deepEqual( Stem("korlátok"), "korlát");});
test("korlátokat -> korlát", function() {deepEqual( Stem("korlátokat"), "korlát");});
test("korlátokhoz -> korlát", function() {deepEqual( Stem("korlátokhoz"), "korlát");});
test("korlátoktól -> korlát", function() {deepEqual( Stem("korlátoktól"), "korlát");});
test("korláton -> korlát", function() {deepEqual( Stem("korláton"), "korlát");});
test("korlátot -> korlát", function() {deepEqual( Stem("korlátot"), "korlát");});
test("korlátra -> korlát", function() {deepEqual( Stem("korlátra"), "korlát");});
test("korlátról -> korlát", function() {deepEqual( Stem("korlátról"), "korlát");});
test("korlátlan -> korlátl", function() {deepEqual( Stem("korlátlan"), "korlátl");});
test("korlátlanig -> korlátlan", function() {deepEqual( Stem("korlátlanig"), "korlátlan");});
test("korlátlanná -> korlátlan", function() {deepEqual( Stem("korlátlanná"), "korlátlan");});
test("korlátlanok -> korlátlan", function() {deepEqual( Stem("korlátlanok"), "korlátlan");});
test("korlátlanul -> korlátlan", function() {deepEqual( Stem("korlátlanul"), "korlátlan");});
test("korlátlanság -> korlátlanság", function() {deepEqual( Stem("korlátlanság"), "korlátlanság");});
test("korlátlanságának -> korlátlanság", function() {deepEqual( Stem("korlátlanságának"), "korlátlanság");});
test("korlátlanságát -> korlátlanság", function() {deepEqual( Stem("korlátlanságát"), "korlátlanság");});
test("korlátolt -> korlátol", function() {deepEqual( Stem("korlátolt"), "korlátol");});
test("korlátolttá -> korlátolt", function() {deepEqual( Stem("korlátolttá"), "korlátolt");});
test("korlátorzott -> korlátorzot", function() {deepEqual( Stem("korlátorzott"), "korlátorzot");});
test("korlátozhatatlanságával -> korlátozhatatlanság", function() {deepEqual( Stem("korlátozhatatlanságával"), "korlátozhatatlanság");});
test("korlátozhatja -> korlátozhat", function() {deepEqual( Stem("korlátozhatja"), "korlátozhat");});
test("korlátozhatjuk -> korlátozhat", function() {deepEqual( Stem("korlátozhatjuk"), "korlátozhat");});
test("korlátozható -> korlátozható", function() {deepEqual( Stem("korlátozható"), "korlátozható");});
test("korlátozni -> korlátozn", function() {deepEqual( Stem("korlátozni"), "korlátozn");});
test("korlátozná -> korlátozna", function() {deepEqual( Stem("korlátozná"), "korlátozna");});
test("korlátozta -> korlátozt", function() {deepEqual( Stem("korlátozta"), "korlátozt");});
test("korlátozták -> korlátozta", function() {deepEqual( Stem("korlátozták"), "korlátozta");});
test("korlátozza -> korlátozz", function() {deepEqual( Stem("korlátozza"), "korlátozz");});
test("korlátozzák -> korlátozza", function() {deepEqual( Stem("korlátozzák"), "korlátozza");});
test("korlátozott -> korlátozot", function() {deepEqual( Stem("korlátozott"), "korlátozot");});
test("korlátozottabb -> korlátozottabb", function() {deepEqual( Stem("korlátozottabb"), "korlátozottabb");});
test("korlátozottak -> korlátozott", function() {deepEqual( Stem("korlátozottak"), "korlátozott");});
test("korlátozottaknak -> korlátozott", function() {deepEqual( Stem("korlátozottaknak"), "korlátozott");});
test("korlátozottan -> korlátozott", function() {deepEqual( Stem("korlátozottan"), "korlátozott");});
test("korlátozottságát -> korlátozottság", function() {deepEqual( Stem("korlátozottságát"), "korlátozottság");});
test("korlátozva -> korlátozv", function() {deepEqual( Stem("korlátozva"), "korlátozv");});
test("korlátozási -> korlátozás", function() {deepEqual( Stem("korlátozási"), "korlátozás");});
test("korlátozás -> korlátozás", function() {deepEqual( Stem("korlátozás"), "korlátozás");});
test("korlátozása -> korlátozás", function() {deepEqual( Stem("korlátozása"), "korlátozás");});
test("korlátozásai -> korlátozás", function() {deepEqual( Stem("korlátozásai"), "korlátozás");});
test("korlátozásnál -> korlátozás", function() {deepEqual( Stem("korlátozásnál"), "korlátozás");});
test("korlátozások -> korlátozás", function() {deepEqual( Stem("korlátozások"), "korlátozás");});
test("korlátozásokat -> korlátozás", function() {deepEqual( Stem("korlátozásokat"), "korlátozás");});
test("korlátozásokkal -> korlátozás", function() {deepEqual( Stem("korlátozásokkal"), "korlátozás");});
test("korlátozásoknak -> korlátozás", function() {deepEqual( Stem("korlátozásoknak"), "korlátozás");});
test("korlátozásokon -> korlátozás", function() {deepEqual( Stem("korlátozásokon"), "korlátozás");});
test("korlátozásokra -> korlátozás", function() {deepEqual( Stem("korlátozásokra"), "korlátozás");});
test("korlátozásoktól -> korlátozás", function() {deepEqual( Stem("korlátozásoktól"), "korlátozás");});
test("korlátozáson -> korlátozás", function() {deepEqual( Stem("korlátozáson"), "korlátozás");});
test("korlátozásra -> korlátozás", function() {deepEqual( Stem("korlátozásra"), "korlátozás");});
test("korlátozással -> korlátozás", function() {deepEqual( Stem("korlátozással"), "korlátozás");});
test("korlátozást -> korlátozás", function() {deepEqual( Stem("korlátozást"), "korlátozás");});
test("korlátozástól -> korlátozás", function() {deepEqual( Stem("korlátozástól"), "korlátozás");});
test("korlátozásának -> korlátozás", function() {deepEqual( Stem("korlátozásának"), "korlátozás");});
test("korlátozására -> korlátozás", function() {deepEqual( Stem("korlátozására"), "korlátozás");});
test("korlátozásáról -> korlátozás", function() {deepEqual( Stem("korlátozásáról"), "korlátozás");});
test("korlátozását -> korlátozás", function() {deepEqual( Stem("korlátozását"), "korlátozás");});
test("korlátozásával -> korlátozás", function() {deepEqual( Stem("korlátozásával"), "korlátozás");});
test("korlátozó -> korlátozó", function() {deepEqual( Stem("korlátozó"), "korlátozó");});
test("korlátozódhat -> korlátozódh", function() {deepEqual( Stem("korlátozódhat"), "korlátozódh");});
test("korlátozódik -> korlátozód", function() {deepEqual( Stem("korlátozódik"), "korlátozód");});
test("korlátozódnak -> korlátozó", function() {deepEqual( Stem("korlátozódnak"), "korlátozó");});
test("korlátozódott -> korlátozódot", function() {deepEqual( Stem("korlátozódott"), "korlátozódot");});
test("korlátozódó -> korlátozódó", function() {deepEqual( Stem("korlátozódó"), "korlátozódó");});
test("kormeghatározása -> kormeghatározás", function() {deepEqual( Stem("kormeghatározása"), "kormeghatározás");});
test("kormeghatározásai -> kormeghatározás", function() {deepEqual( Stem("kormeghatározásai"), "kormeghatározás");});
test("kormeghatározást -> kormeghatározás", function() {deepEqual( Stem("kormeghatározást"), "kormeghatározás");});
test("kormos -> kormos", function() {deepEqual( Stem("kormos"), "kormos");});
test("kormánnyal -> kormány", function() {deepEqual( Stem("kormánnyal"), "kormány");});
test("kormány -> kormány", function() {deepEqual( Stem("kormány"), "kormány");});
test("kormánya -> kormány", function() {deepEqual( Stem("kormánya"), "kormány");});
test("kormányai -> kormány", function() {deepEqual( Stem("kormányai"), "kormány");});
test("kormányba -> kormány", function() {deepEqual( Stem("kormányba"), "kormány");});
test("kormányban -> kormány", function() {deepEqual( Stem("kormányban"), "kormány");});
test("kormányból -> kormány", function() {deepEqual( Stem("kormányból"), "kormány");});
test("kormányhoz -> kormány", function() {deepEqual( Stem("kormányhoz"), "kormány");});
test("kormánynak -> kormány", function() {deepEqual( Stem("kormánynak"), "kormány");});
test("kormányon -> kormány", function() {deepEqual( Stem("kormányon"), "kormány");});
test("kormánynál -> kormány", function() {deepEqual( Stem("kormánynál"), "kormány");});
test("kormányok -> kormány", function() {deepEqual( Stem("kormányok"), "kormány");});
test("kormányokat -> kormány", function() {deepEqual( Stem("kormányokat"), "kormány");});
test("kormányoknak -> kormány", function() {deepEqual( Stem("kormányoknak"), "kormány");});
test("kormányra -> kormány", function() {deepEqual( Stem("kormányra"), "kormány");});
test("kormányról -> kormány", function() {deepEqual( Stem("kormányról"), "kormány");});
test("kormányt -> kormány", function() {deepEqual( Stem("kormányt"), "kormány");});
test("kormánytól -> kormány", function() {deepEqual( Stem("kormánytól"), "kormány");});
test("kormányétól -> kormány", function() {deepEqual( Stem("kormányétól"), "kormány");});
test("kormányának -> kormány", function() {deepEqual( Stem("kormányának"), "kormány");});
test("kormányát -> kormány", function() {deepEqual( Stem("kormányát"), "kormány");});
test("kormányé -> kormány", function() {deepEqual( Stem("kormányé"), "kormány");});
test("kormány-előterjesztéssé -> kormány-előterjesztés", function() {deepEqual( Stem("kormány-előterjesztéssé"), "kormány-előterjesztés");});
test("kormánybizottság -> kormánybizottság", function() {deepEqual( Stem("kormánybizottság"), "kormánybizottság");});
test("kormánybiztos -> kormánybiztos", function() {deepEqual( Stem("kormánybiztos"), "kormánybiztos");});
test("kormánybiztossal -> kormánybiztos", function() {deepEqual( Stem("kormánybiztossal"), "kormánybiztos");});
test("kormánybiztosság -> kormánybiztosság", function() {deepEqual( Stem("kormánybiztosság"), "kormánybiztosság");});
test("kormánybiztossága -> kormánybiztosság", function() {deepEqual( Stem("kormánybiztossága"), "kormánybiztosság");});
test("kormánybiztosságának -> kormánybiztosság", function() {deepEqual( Stem("kormánybiztosságának"), "kormánybiztosság");});
test("kormánybiztostól -> kormánybiztos", function() {deepEqual( Stem("kormánybiztostól"), "kormánybiztos");});
test("kormánycsapatok -> kormánycsapat", function() {deepEqual( Stem("kormánycsapatok"), "kormánycsapat");});
test("kormánydöntés -> kormánydöntés", function() {deepEqual( Stem("kormánydöntés"), "kormánydöntés");});
test("kormánydöntések -> kormánydöntés", function() {deepEqual( Stem("kormánydöntések"), "kormánydöntés");});
test("kormányforma -> kormányform", function() {deepEqual( Stem("kormányforma"), "kormányform");});
test("kormányforrások -> kormányforrás", function() {deepEqual( Stem("kormányforrások"), "kormányforrás");});
test("kormányfői -> kormányfő", function() {deepEqual( Stem("kormányfői"), "kormányfő");});
test("kormányfőre -> kormányfő", function() {deepEqual( Stem("kormányfőre"), "kormányfő");});
test("kormányfő -> kormányfő", function() {deepEqual( Stem("kormányfő"), "kormányfő");});
test("kormányfőt -> kormányfő", function() {deepEqual( Stem("kormányfőt"), "kormányfő");});
test("kormányhatározat -> kormányhatároz", function() {deepEqual( Stem("kormányhatározat"), "kormányhatároz");});
test("kormányhivatal -> kormányhivatal", function() {deepEqual( Stem("kormányhivatal"), "kormányhivatal");});
test("kormányhivatalokból -> kormányhivatal", function() {deepEqual( Stem("kormányhivatalokból"), "kormányhivatal");});
test("kormányjavaslathoz -> kormányjavaslat", function() {deepEqual( Stem("kormányjavaslathoz"), "kormányjavaslat");});
test("kormányjavaslatok -> kormányjavaslat", function() {deepEqual( Stem("kormányjavaslatok"), "kormányjavaslat");});
test("kormányjavaslatokból -> kormányjavaslat", function() {deepEqual( Stem("kormányjavaslatokból"), "kormányjavaslat");});
test("kormánykerék -> kormánykere", function() {deepEqual( Stem("kormánykerék"), "kormánykere");});
test("kormánykerékből -> kormánykere", function() {deepEqual( Stem("kormánykerékből"), "kormánykere");});
test("kormánykeréken -> kormánykere", function() {deepEqual( Stem("kormánykeréken"), "kormánykere");});
test("kormánykerékhez -> kormánykere", function() {deepEqual( Stem("kormánykerékhez"), "kormánykere");});
test("kormánykerékről -> kormánykere", function() {deepEqual( Stem("kormánykerékről"), "kormánykere");});
test("kormánykeréktől -> kormánykere", function() {deepEqual( Stem("kormánykeréktől"), "kormánykere");});
test("kormánykerékmodul -> kormánykerékm", function() {deepEqual( Stem("kormánykerékmodul"), "kormánykerékm");});
test("kormánykerékmodulnak -> kormánykerékmodul", function() {deepEqual( Stem("kormánykerékmodulnak"), "kormánykerékmodul");});
test("kormánykoalíció -> kormánykoalíció", function() {deepEqual( Stem("kormánykoalíció"), "kormánykoalíció");});
test("kormánykoalíciós -> kormánykoalíciós", function() {deepEqual( Stem("kormánykoalíciós"), "kormánykoalíciós");});
test("kormánymegrendelések -> kormánymegrendelés", function() {deepEqual( Stem("kormánymegrendelések"), "kormánymegrendelés");});
test("kormánymozdulatot -> kormánymozdulat", function() {deepEqual( Stem("kormánymozdulatot"), "kormánymozdulat");});
test("kormánynegyedet -> kormánynegy", function() {deepEqual( Stem("kormánynegyedet"), "kormánynegy");});
test("kormányoldal -> kormányoldal", function() {deepEqual( Stem("kormányoldal"), "kormányoldal");});
test("kormányoldalon -> kormányoldal", function() {deepEqual( Stem("kormányoldalon"), "kormányoldal");});
test("kormányos -> kormányos", function() {deepEqual( Stem("kormányos"), "kormányos");});
test("kormányosnak -> kormányos", function() {deepEqual( Stem("kormányosnak"), "kormányos");});
test("kormányost -> kormányos", function() {deepEqual( Stem("kormányost"), "kormányos");});
test("kormányoszlop -> kormányoszlop", function() {deepEqual( Stem("kormányoszlop"), "kormányoszlop");});
test("kormányoszlophoz -> kormányoszlop", function() {deepEqual( Stem("kormányoszlophoz"), "kormányoszlop");});
test("kormányozhatatlan -> kormányozhatatl", function() {deepEqual( Stem("kormányozhatatlan"), "kormányozhatatl");});
test("kormányozhatóak -> kormányozható", function() {deepEqual( Stem("kormányozhatóak"), "kormányozható");});
test("kormányoznak -> kormányoz", function() {deepEqual( Stem("kormányoznak"), "kormányoz");});
test("kormányozni -> kormányozn", function() {deepEqual( Stem("kormányozni"), "kormányozn");});
test("kormányoz -> kormányoz", function() {deepEqual( Stem("kormányoz"), "kormányoz");});
test("kormányozottak -> kormányozott", function() {deepEqual( Stem("kormányozottak"), "kormányozott");});
test("kormányozzanak -> kormányozz", function() {deepEqual( Stem("kormányozzanak"), "kormányozz");});
test("kormányozzák -> kormányozza", function() {deepEqual( Stem("kormányozzák"), "kormányozza");});
test("kormánypalota -> kormánypalot", function() {deepEqual( Stem("kormánypalota"), "kormánypalot");});
test("kormányprognózisnál -> kormányprognózis", function() {deepEqual( Stem("kormányprognózisnál"), "kormányprognózis");});
test("kormányprogram -> kormányprogr", function() {deepEqual( Stem("kormányprogram"), "kormányprogr");});
test("kormányprogramban -> kormányprogr", function() {deepEqual( Stem("kormányprogramban"), "kormányprogr");});
test("kormánypárt -> kormánypár", function() {deepEqual( Stem("kormánypárt"), "kormánypár");});
test("kormánypártban -> kormánypárt", function() {deepEqual( Stem("kormánypártban"), "kormánypárt");});
test("kormánypártnak -> kormánypárt", function() {deepEqual( Stem("kormánypártnak"), "kormánypárt");});
test("kormánypártok -> kormánypárt", function() {deepEqual( Stem("kormánypártok"), "kormánypárt");});
test("kormánypárti -> kormánypárt", function() {deepEqual( Stem("kormánypárti"), "kormánypárt");});
test("kormányrendelet -> kormányrendel", function() {deepEqual( Stem("kormányrendelet"), "kormányrendel");});
test("kormányrendeletet -> kormányrendelet", function() {deepEqual( Stem("kormányrendeletet"), "kormányrendelet");});
test("kormányrendeletnek -> kormányrendelet", function() {deepEqual( Stem("kormányrendeletnek"), "kormányrendelet");});
test("kormányszerv -> kormányszerv", function() {deepEqual( Stem("kormányszerv"), "kormányszerv");});
test("kormányszerveknek -> kormányszerv", function() {deepEqual( Stem("kormányszerveknek"), "kormányszerv");});
test("kormányszervnek -> kormányszerv", function() {deepEqual( Stem("kormányszervnek"), "kormányszerv");});
test("kormányszervopumpáról -> kormányszervopump", function() {deepEqual( Stem("kormányszervopumpáról"), "kormányszervopump");});
test("kormányszóvivő -> kormányszóvivő", function() {deepEqual( Stem("kormányszóvivő"), "kormányszóvivő");});
test("kormánytag -> kormánytag", function() {deepEqual( Stem("kormánytag"), "kormánytag");});
test("kormánytagok -> kormánytag", function() {deepEqual( Stem("kormánytagok"), "kormánytag");});
test("kormánytagokból -> kormánytag", function() {deepEqual( Stem("kormánytagokból"), "kormánytag");});
test("kormánytagoknak -> kormánytag", function() {deepEqual( Stem("kormánytagoknak"), "kormánytag");});
test("kormánytisztviselő -> kormánytisztviselő", function() {deepEqual( Stem("kormánytisztviselő"), "kormánytisztviselő");});
test("kormánytisztviselők -> kormánytisztviselő", function() {deepEqual( Stem("kormánytisztviselők"), "kormánytisztviselő");});
test("kormánytisztviselőt -> kormánytisztviselő", function() {deepEqual( Stem("kormánytisztviselőt"), "kormánytisztviselő");});
test("kormánytöbbség -> kormánytöbbség", function() {deepEqual( Stem("kormánytöbbség"), "kormánytöbbség");});
test("kormányválsághoz -> kormányválság", function() {deepEqual( Stem("kormányválsághoz"), "kormányválság");});
test("kormányváltás -> kormányváltás", function() {deepEqual( Stem("kormányváltás"), "kormányváltás");});
test("kormányváltást -> kormányváltás", function() {deepEqual( Stem("kormányváltást"), "kormányváltás");});
test("kormányzat -> kormányz", function() {deepEqual( Stem("kormányzat"), "kormányz");});
test("kormányzathoz -> kormányzat", function() {deepEqual( Stem("kormányzathoz"), "kormányzat");});
test("kormányzatnak -> kormányzat", function() {deepEqual( Stem("kormányzatnak"), "kormányzat");});
test("kormányzatnál -> kormányzat", function() {deepEqual( Stem("kormányzatnál"), "kormányzat");});
test("kormányzatokat -> kormányzat", function() {deepEqual( Stem("kormányzatokat"), "kormányzat");});
test("kormányzatot -> kormányzat", function() {deepEqual( Stem("kormányzatot"), "kormányzat");});
test("kormányzattal -> kormányz", function() {deepEqual( Stem("kormányzattal"), "kormányz");});
test("kormányzattól -> kormányzat", function() {deepEqual( Stem("kormányzattól"), "kormányzat");});
test("kormányzatéit -> kormányzat", function() {deepEqual( Stem("kormányzatéit"), "kormányzat");});
test("kormányzati -> kormányzat", function() {deepEqual( Stem("kormányzati"), "kormányzat");});
test("kormányzatilag -> kormányzatilag", function() {deepEqual( Stem("kormányzatilag"), "kormányzatilag");});
test("kormányzás -> kormányzás", function() {deepEqual( Stem("kormányzás"), "kormányzás");});
test("kormányzáshoz -> kormányzás", function() {deepEqual( Stem("kormányzáshoz"), "kormányzás");});
test("kormányzásnak -> kormányzás", function() {deepEqual( Stem("kormányzásnak"), "kormányzás");});
test("kormányzásra -> kormányzás", function() {deepEqual( Stem("kormányzásra"), "kormányzás");});
test("kormányzást -> kormányzás", function() {deepEqual( Stem("kormányzást"), "kormányzás");});
test("kormányzásvezérléstől -> kormányzásvezérlés", function() {deepEqual( Stem("kormányzásvezérléstől"), "kormányzásvezérlés");});
test("kormányzásvezérlő -> kormányzásvezérlő", function() {deepEqual( Stem("kormányzásvezérlő"), "kormányzásvezérlő");});
test("kormányzó -> kormányzó", function() {deepEqual( Stem("kormányzó"), "kormányzó");});
test("kormányépületeket -> kormányépület", function() {deepEqual( Stem("kormányépületeket"), "kormányépület");});
test("kormányőr -> kormányőr", function() {deepEqual( Stem("kormányőr"), "kormányőr");});
test("kormányülés-jegyzőkönyvek -> kormányülés-jegyzőkönyv", function() {deepEqual( Stem("kormányülés-jegyzőkönyvek"), "kormányülés-jegyzőkönyv");});
test("kormányülések -> kormányülés", function() {deepEqual( Stem("kormányülések"), "kormányülés");});
test("kormányülés -> kormányülés", function() {deepEqual( Stem("kormányülés"), "kormányülés");});
test("kormányüléseken -> kormányülés", function() {deepEqual( Stem("kormányüléseken"), "kormányülés");});
test("kormányülésekről -> kormányülés", function() {deepEqual( Stem("kormányülésekről"), "kormányülés");});
test("kormányülésen -> kormányülés", function() {deepEqual( Stem("kormányülésen"), "kormányülés");});
test("kormányülést -> kormányülés", function() {deepEqual( Stem("kormányülést"), "kormányülés");});
test("kornak -> kor", function() {deepEqual( Stem("kornak"), "kor");});
test("korod -> kor", function() {deepEqual( Stem("korod"), "kor");});
test("korodig -> kor", function() {deepEqual( Stem("korodig"), "kor");});
test("korok -> kor", function() {deepEqual( Stem("korok"), "kor");});
test("korokban -> kor", function() {deepEqual( Stem("korokban"), "kor");});
test("korokból -> kor", function() {deepEqual( Stem("korokból"), "kor");});
test("korokról -> kor", function() {deepEqual( Stem("korokról"), "kor");});
test("korom -> kor", function() {deepEqual( Stem("korom"), "kor");});
test("koromat -> kor", function() {deepEqual( Stem("koromat"), "kor");});
test("koromban -> kor", function() {deepEqual( Stem("koromban"), "kor");});
test("koromban -> kor", function() {deepEqual( Stem("koromban"), "kor");});
test("koromból -> kor", function() {deepEqual( Stem("koromból"), "kor");});
test("koromhoz -> kor", function() {deepEqual( Stem("koromhoz"), "kor");});
test("koromig -> kor", function() {deepEqual( Stem("koromig"), "kor");});
test("koromra -> kor", function() {deepEqual( Stem("koromra"), "kor");});
test("koromról -> kor", function() {deepEqual( Stem("koromról"), "kor");});
test("korban -> kor", function() {deepEqual( Stem("korban"), "kor");});
test("kor -> kor", function() {deepEqual( Stem("kor"), "kor");});
test("korból -> kor", function() {deepEqual( Stem("korból"), "kor");});
test("korhoz -> kor", function() {deepEqual( Stem("korhoz"), "kor");});
test("korig -> kor", function() {deepEqual( Stem("korig"), "kor");});
test("koromtól -> kor", function() {deepEqual( Stem("koromtól"), "kor");});
test("koron -> kor", function() {deepEqual( Stem("koron"), "kor");});
test("koronként -> kor", function() {deepEqual( Stem("koronként"), "kor");});
test("korra -> kor", function() {deepEqual( Stem("korra"), "kor");});
test("korral -> kor", function() {deepEqual( Stem("korral"), "kor");});
test("korról -> kor", function() {deepEqual( Stem("korról"), "kor");});
test("kort -> kor", function() {deepEqual( Stem("kort"), "kor");});
test("koruk -> kor", function() {deepEqual( Stem("koruk"), "kor");});
test("korukat -> kor", function() {deepEqual( Stem("korukat"), "kor");});
test("korukba -> kor", function() {deepEqual( Stem("korukba"), "kor");});
test("korukban -> kor", function() {deepEqual( Stem("korukban"), "kor");});
test("korukig -> kor", function() {deepEqual( Stem("korukig"), "kor");});
test("korukra -> kor", function() {deepEqual( Stem("korukra"), "kor");});
test("koruktól -> kor", function() {deepEqual( Stem("koruktól"), "kor");});
test("korunkat -> kor", function() {deepEqual( Stem("korunkat"), "kor");});
test("korunkban -> kor", function() {deepEqual( Stem("korunkban"), "kor");});
test("korunkig -> kor", function() {deepEqual( Stem("korunkig"), "kor");});
test("korából -> kor", function() {deepEqual( Stem("korából"), "kor");});
test("korában -> kor", function() {deepEqual( Stem("korában"), "kor");});
test("koráig -> kor", function() {deepEqual( Stem("koráig"), "kor");});
test("korát -> kor", function() {deepEqual( Stem("korát"), "kor");});
test("korára -> kor", function() {deepEqual( Stem("korára"), "kor");});
test("korától -> kor", function() {deepEqual( Stem("korától"), "kor");});
test("korává -> kor", function() {deepEqual( Stem("korává"), "kor");});
test("korombeli -> korombel", function() {deepEqual( Stem("korombeli"), "korombel");});
test("koromszínű -> koromszínű", function() {deepEqual( Stem("koromszínű"), "koromszínű");});
test("koromsötét -> koromsöt", function() {deepEqual( Stem("koromsötét"), "koromsöt");});
test("koronatanácsban -> koronatanács", function() {deepEqual( Stem("koronatanácsban"), "koronatanács");});
test("korongjuk -> korong", function() {deepEqual( Stem("korongjuk"), "korong");});
test("korongját -> korong", function() {deepEqual( Stem("korongját"), "korong");});
test("korongok -> korong", function() {deepEqual( Stem("korongok"), "korong");});
test("korongot -> korong", function() {deepEqual( Stem("korongot"), "korong");});
test("koronába -> koron", function() {deepEqual( Stem("koronába"), "koron");});
test("korona -> koron", function() {deepEqual( Stem("korona"), "koron");});
test("koronája -> koroná", function() {deepEqual( Stem("koronája"), "koroná");});
test("koronáján -> koroná", function() {deepEqual( Stem("koronáján"), "koroná");});
test("koronájára -> koroná", function() {deepEqual( Stem("koronájára"), "koroná");});
test("koronámra -> korona", function() {deepEqual( Stem("koronámra"), "korona");});
test("koronára -> koron", function() {deepEqual( Stem("koronára"), "koron");});
test("koronát -> koron", function() {deepEqual( Stem("koronát"), "koron");});
test("koronáért -> koron", function() {deepEqual( Stem("koronáért"), "koron");});
test("koronás -> koronás", function() {deepEqual( Stem("koronás"), "koronás");});
test("koronázta -> koronázt", function() {deepEqual( Stem("koronázta"), "koronázt");});
test("koronázás -> koronázás", function() {deepEqual( Stem("koronázás"), "koronázás");});
test("koros -> koros", function() {deepEqual( Stem("koros"), "koros");});
test("korosodó -> korosodó", function() {deepEqual( Stem("korosodó"), "korosodó");});
test("korosztály -> korosztály", function() {deepEqual( Stem("korosztály"), "korosztály");});
test("korosztályban -> korosztály", function() {deepEqual( Stem("korosztályban"), "korosztály");});
test("korosztálynak -> korosztály", function() {deepEqual( Stem("korosztálynak"), "korosztály");});
test("korosztályt -> korosztály", function() {deepEqual( Stem("korosztályt"), "korosztály");});
test("korosztályunknak -> korosztály", function() {deepEqual( Stem("korosztályunknak"), "korosztály");});
test("korosztályos -> korosztályos", function() {deepEqual( Stem("korosztályos"), "korosztályos");});
test("korporatív -> korporatív", function() {deepEqual( Stem("korporatív"), "korporatív");});
test("korrekció -> korrekció", function() {deepEqual( Stem("korrekció"), "korrekció");});
test("korrekciójára -> korrekció", function() {deepEqual( Stem("korrekciójára"), "korrekció");});
test("korrekcióját -> korrekció", function() {deepEqual( Stem("korrekcióját"), "korrekció");});
test("korrekciókkal -> korrekció", function() {deepEqual( Stem("korrekciókkal"), "korrekció");});
test("korrekcióra -> korrekció", function() {deepEqual( Stem("korrekcióra"), "korrekció");});
test("korrekciót -> korrekció", function() {deepEqual( Stem("korrekciót"), "korrekció");});
test("korrekt -> korr", function() {deepEqual( Stem("korrekt"), "korr");});
test("korrekten -> korrekt", function() {deepEqual( Stem("korrekten"), "korrekt");});
test("korrektségen -> korrektség", function() {deepEqual( Stem("korrektségen"), "korrektség");});
test("korrektséggel -> korrektség", function() {deepEqual( Stem("korrektséggel"), "korrektség");});
test("korrepetálásra -> korrepetálás", function() {deepEqual( Stem("korrepetálásra"), "korrepetálás");});
test("korrigálható -> korrigálható", function() {deepEqual( Stem("korrigálható"), "korrigálható");});
test("korrigálja -> korrigál", function() {deepEqual( Stem("korrigálja"), "korrigál");});
test("korrigál -> korrigál", function() {deepEqual( Stem("korrigál"), "korrigál");});
test("korrigálni -> korrigáln", function() {deepEqual( Stem("korrigálni"), "korrigáln");});
test("korrigálta -> korrigált", function() {deepEqual( Stem("korrigálta"), "korrigált");});
test("korrigálunk -> korrigál", function() {deepEqual( Stem("korrigálunk"), "korrigál");});
test("korrigált -> korrigál", function() {deepEqual( Stem("korrigált"), "korrigál");});
test("korrigálás -> korrigálás", function() {deepEqual( Stem("korrigálás"), "korrigálás");});
test("korrigálása -> korrigálás", function() {deepEqual( Stem("korrigálása"), "korrigálás");});
test("korrumpálásával -> korrumpálás", function() {deepEqual( Stem("korrumpálásával"), "korrumpálás");});
test("korrupciós -> korrupciós", function() {deepEqual( Stem("korrupciós"), "korrupciós");});
test("korrupcióval -> korrupció", function() {deepEqual( Stem("korrupcióval"), "korrupció");});
test("korrupció -> korrupció", function() {deepEqual( Stem("korrupció"), "korrupció");});
test("korrupt -> korrup", function() {deepEqual( Stem("korrupt"), "korrup");});
test("korszak -> korsz", function() {deepEqual( Stem("korszak"), "korsz");});
test("korszaka -> korsz", function() {deepEqual( Stem("korszaka"), "korsz");});
test("korszakaiból -> korsz", function() {deepEqual( Stem("korszakaiból"), "korsz");});
test("korszakban -> korsz", function() {deepEqual( Stem("korszakban"), "korsz");});
test("korszakból -> korsz", function() {deepEqual( Stem("korszakból"), "korsz");});
test("korszakkal -> korsz", function() {deepEqual( Stem("korszakkal"), "korsz");});
test("korszakok -> korszak", function() {deepEqual( Stem("korszakok"), "korszak");});
test("korszakokban -> korszak", function() {deepEqual( Stem("korszakokban"), "korszak");});
test("korszakot -> korsz", function() {deepEqual( Stem("korszakot"), "korsz");});
test("korszakra -> korsz", function() {deepEqual( Stem("korszakra"), "korsz");});
test("korszakról -> korsz", function() {deepEqual( Stem("korszakról"), "korsz");});
test("korszakában -> korsz", function() {deepEqual( Stem("korszakában"), "korsz");});
test("korszakából -> korsz", function() {deepEqual( Stem("korszakából"), "korsz");});
test("korszakának -> korsz", function() {deepEqual( Stem("korszakának"), "korsz");});
test("korszakosat -> korszakos", function() {deepEqual( Stem("korszakosat"), "korszakos");});
test("korszellem -> korszell", function() {deepEqual( Stem("korszellem"), "korszell");});
test("korszerű -> korszerű", function() {deepEqual( Stem("korszerű"), "korszerű");});
test("korszerűbb -> korszerűbb", function() {deepEqual( Stem("korszerűbb"), "korszerűbb");});
test("korszerűek -> korszerű", function() {deepEqual( Stem("korszerűek"), "korszerű");});
test("korszerűen -> korszerű", function() {deepEqual( Stem("korszerűen"), "korszerű");});
test("korszerűséggel -> korszerűség", function() {deepEqual( Stem("korszerűséggel"), "korszerűség");});
test("korszerűsíteni -> korszerűsíten", function() {deepEqual( Stem("korszerűsíteni"), "korszerűsíten");});
test("korszerűsítettek -> korszerűsített", function() {deepEqual( Stem("korszerűsítettek"), "korszerűsített");});
test("korszerűsítik -> korszerűsít", function() {deepEqual( Stem("korszerűsítik"), "korszerűsít");});
test("korszerűsítsék -> korszerűsítse", function() {deepEqual( Stem("korszerűsítsék"), "korszerűsítse");});
test("korszerűsítési -> korszerűsítés", function() {deepEqual( Stem("korszerűsítési"), "korszerűsítés");});
test("korszerűsítés -> korszerűsítés", function() {deepEqual( Stem("korszerűsítés"), "korszerűsítés");});
test("korszerűsítése -> korszerűsítés", function() {deepEqual( Stem("korszerűsítése"), "korszerűsítés");});
test("korszerűsítésnek -> korszerűsítés", function() {deepEqual( Stem("korszerűsítésnek"), "korszerűsítés");});
test("korszerűsítésére -> korszerűsítés", function() {deepEqual( Stem("korszerűsítésére"), "korszerűsítés");});
test("korszerűsítését -> korszerűsítés", function() {deepEqual( Stem("korszerűsítését"), "korszerűsítés");});
test("korszerűsítésével -> korszerűsítés", function() {deepEqual( Stem("korszerűsítésével"), "korszerűsítés");});
test("korszerűsödő -> korszerűsödő", function() {deepEqual( Stem("korszerűsödő"), "korszerűsödő");});
test("korszerűtlennek -> korszerűtlen", function() {deepEqual( Stem("korszerűtlennek"), "korszerűtlen");});
test("korsó -> korsó", function() {deepEqual( Stem("korsó"), "korsó");});
test("korsókat -> korsó", function() {deepEqual( Stem("korsókat"), "korsó");});
test("korsónak -> korsó", function() {deepEqual( Stem("korsónak"), "korsó");});
test("korsót -> korsó", function() {deepEqual( Stem("korsót"), "korsó");});
test("korty -> korty", function() {deepEqual( Stem("korty"), "korty");});
test("kortyolgatja -> kortyolgat", function() {deepEqual( Stem("kortyolgatja"), "kortyolgat");});
test("kortárs -> kortárs", function() {deepEqual( Stem("kortárs"), "kortárs");});
test("kortársai -> kortárs", function() {deepEqual( Stem("kortársai"), "kortárs");});
test("kortársaik -> kortárs", function() {deepEqual( Stem("kortársaik"), "kortárs");});
test("kortársaimmal -> kortárs", function() {deepEqual( Stem("kortársaimmal"), "kortárs");});
test("kortársi -> kortárs", function() {deepEqual( Stem("kortársi"), "kortárs");});
test("korzikai -> korzi", function() {deepEqual( Stem("korzikai"), "korzi");});
test("korábban -> koráb", function() {deepEqual( Stem("korábban"), "koráb");});
test("korábbi -> korább", function() {deepEqual( Stem("korábbi"), "korább");});
test("korábbiakban -> korábbi", function() {deepEqual( Stem("korábbiakban"), "korábbi");});
test("korábbiakhoz -> korábbi", function() {deepEqual( Stem("korábbiakhoz"), "korábbi");});
test("korábbiakkal -> korábbi", function() {deepEqual( Stem("korábbiakkal"), "korábbi");});
test("korábbiaknál -> korábbi", function() {deepEqual( Stem("korábbiaknál"), "korábbi");});
test("korábbiakétól -> korábbi", function() {deepEqual( Stem("korábbiakétól"), "korábbi");});
test("korábbihoz -> korább", function() {deepEqual( Stem("korábbihoz"), "korább");});
test("korábbihoz -> korább", function() {deepEqual( Stem("korábbihoz"), "korább");});
test("korábbinak -> korább", function() {deepEqual( Stem("korábbinak"), "korább");});
test("korábbinál -> korább", function() {deepEqual( Stem("korábbinál"), "korább");});
test("korábbitól -> korább", function() {deepEqual( Stem("korábbitól"), "korább");});
test("korábbival -> korább", function() {deepEqual( Stem("korábbival"), "korább");});
test("korábbról -> korább", function() {deepEqual( Stem("korábbról"), "korább");});
test("koránkelés -> koránkelés", function() {deepEqual( Stem("koránkelés"), "koránkelés");});
test("koránra -> kor", function() {deepEqual( Stem("koránra"), "kor");});
test("koránt -> kor", function() {deepEqual( Stem("koránt"), "kor");});
test("korán -> kor", function() {deepEqual( Stem("korán"), "kor");});
test("korántsem -> koránts", function() {deepEqual( Stem("korántsem"), "koránts");});
test("korú -> korú", function() {deepEqual( Stem("korú"), "korú");});
test("korúak -> korú", function() {deepEqual( Stem("korúak"), "korú");});
test("korúnál -> korú", function() {deepEqual( Stem("korúnál"), "korú");});
test("kos -> kos", function() {deepEqual( Stem("kos"), "kos");});
test("kosarazhatunk -> kosarazhat", function() {deepEqual( Stem("kosarazhatunk"), "kosarazhat");});
test("kosarazni -> kosarazn", function() {deepEqual( Stem("kosarazni"), "kosarazn");});
test("kosaraztam -> kosarazt", function() {deepEqual( Stem("kosaraztam"), "kosarazt");});
test("kosaraztunk -> kosarazt", function() {deepEqual( Stem("kosaraztunk"), "kosarazt");});
test("kosarazunk -> kosaraz", function() {deepEqual( Stem("kosarazunk"), "kosaraz");});
test("kosarazzunk -> kosarazz", function() {deepEqual( Stem("kosarazzunk"), "kosarazz");});
test("kosarazás -> kosarazás", function() {deepEqual( Stem("kosarazás"), "kosarazás");});
test("kosut -> kosu", function() {deepEqual( Stem("kosut"), "kosu");});
test("koszfolt -> koszfol", function() {deepEqual( Stem("koszfolt"), "koszfol");});
test("koszolódásmentessé -> koszolódásmentes", function() {deepEqual( Stem("koszolódásmentessé"), "koszolódásmentes");});
test("koszorú -> koszorú", function() {deepEqual( Stem("koszorú"), "koszorú");});
test("koszorúk -> koszorú", function() {deepEqual( Stem("koszorúk"), "koszorú");});
test("koszorún -> koszorú", function() {deepEqual( Stem("koszorún"), "koszorú");});
test("koszorús -> koszorús", function() {deepEqual( Stem("koszorús"), "koszorús");});
test("koszorúslegény -> koszorúslegény", function() {deepEqual( Stem("koszorúslegény"), "koszorúslegény");});
test("koszos -> koszos", function() {deepEqual( Stem("koszos"), "koszos");});
test("koszovói -> koszovó", function() {deepEqual( Stem("koszovói"), "koszovó");});
test("koszovóiakkal -> koszovói", function() {deepEqual( Stem("koszovóiakkal"), "koszovói");});
test("koszt -> kosz", function() {deepEqual( Stem("koszt"), "kosz");});
test("kosztól -> kosz", function() {deepEqual( Stem("kosztól"), "kosz");});
test("kosz -> kosz", function() {deepEqual( Stem("kosz"), "kosz");});
test("kosztümbe -> kosztü", function() {deepEqual( Stem("kosztümbe"), "kosztü");});
test("kosztümben -> kosztü", function() {deepEqual( Stem("kosztümben"), "kosztü");});
test("kosztümöt -> kosztü", function() {deepEqual( Stem("kosztümöt"), "kosztü");});
test("kosztümös -> kosztümös", function() {deepEqual( Stem("kosztümös"), "kosztümös");});
test("kosárban -> kosár", function() {deepEqual( Stem("kosárban"), "kosár");});
test("kosarat -> kosar", function() {deepEqual( Stem("kosarat"), "kosar");});
test("kosárból -> kosár", function() {deepEqual( Stem("kosárból"), "kosár");});
test("kosárral -> kosár", function() {deepEqual( Stem("kosárral"), "kosár");});
test("kosárfonók -> kosárfonó", function() {deepEqual( Stem("kosárfonók"), "kosárfonó");});
test("kosárlabda-bajnokság -> kosárlabda-bajnokság", function() {deepEqual( Stem("kosárlabda-bajnokság"), "kosárlabda-bajnokság");});
test("kosárlabda-bajnokságban -> kosárlabda-bajnokság", function() {deepEqual( Stem("kosárlabda-bajnokságban"), "kosárlabda-bajnokság");});
test("kosárlabdáról -> kosárlabd", function() {deepEqual( Stem("kosárlabdáról"), "kosárlabd");});
test("kosárlabda -> kosárlabd", function() {deepEqual( Stem("kosárlabda"), "kosárlabd");});
test("kosárlabdát -> kosárlabd", function() {deepEqual( Stem("kosárlabdát"), "kosárlabd");});
test("kosárlabdázni -> kosárlabdázn", function() {deepEqual( Stem("kosárlabdázni"), "kosárlabdázn");});
test("kosárlabdázok -> kosárlabdáz", function() {deepEqual( Stem("kosárlabdázok"), "kosárlabdáz");});
test("kosárlabdáztam -> kosárlabdázt", function() {deepEqual( Stem("kosárlabdáztam"), "kosárlabdázt");});
test("kosárlabdáztunk -> kosárlabdázt", function() {deepEqual( Stem("kosárlabdáztunk"), "kosárlabdázt");});
test("kosármeccsre -> kosármeccs", function() {deepEqual( Stem("kosármeccsre"), "kosármeccs");});
test("kosárpálya -> kosárpály", function() {deepEqual( Stem("kosárpálya"), "kosárpály");});
test("kosárpályára -> kosárpály", function() {deepEqual( Stem("kosárpályára"), "kosárpály");});
test("kosárpénzben -> kosárpénz", function() {deepEqual( Stem("kosárpénzben"), "kosárpénz");});
test("kotnyeles -> kotnyeles", function() {deepEqual( Stem("kotnyeles"), "kotnyeles");});
test("kotort -> kotor", function() {deepEqual( Stem("kotort"), "kotor");});
test("kotrását -> kotrás", function() {deepEqual( Stem("kotrását"), "kotrás");});
test("kottaként -> kott", function() {deepEqual( Stem("kottaként"), "kott");});
test("kotyvalékokat -> kotyvalék", function() {deepEqual( Stem("kotyvalékokat"), "kotyvalék");});
test("kotyvasztott -> kotyvasztot", function() {deepEqual( Stem("kotyvasztott"), "kotyvasztot");});
test("kovácsa -> kovács", function() {deepEqual( Stem("kovácsa"), "kovács");});
test("kovácsolni -> kovácsoln", function() {deepEqual( Stem("kovácsolni"), "kovácsoln");});
test("kozkáztatni -> kozkáztatn", function() {deepEqual( Stem("kozkáztatni"), "kozkáztatn");});
test("kozmetikai -> kozmeti", function() {deepEqual( Stem("kozmetikai"), "kozmeti");});
test("kozmetikus -> kozmetikus", function() {deepEqual( Stem("kozmetikus"), "kozmetikus");});
test("kozmetikázásával -> kozmetikázás", function() {deepEqual( Stem("kozmetikázásával"), "kozmetikázás");});
test("krachból -> krach", function() {deepEqual( Stem("krachból"), "krach");});
test("krajcárodba -> krajcár", function() {deepEqual( Stem("krajcárodba"), "krajcár");});
test("krajinai -> krajin", function() {deepEqual( Stem("krajinai"), "krajin");});
test("krajinákat -> krajina", function() {deepEqual( Stem("krajinákat"), "krajina");});
test("krakkói -> krakkó", function() {deepEqual( Stem("krakkói"), "krakkó");});
test("krampusz -> krampusz", function() {deepEqual( Stem("krampusz"), "krampusz");});
test("kreativitás -> kreativitás", function() {deepEqual( Stem("kreativitás"), "kreativitás");});
test("kreatív -> kreatív", function() {deepEqual( Stem("kreatív"), "kreatív");});
test("kreatívabb -> kreatívabb", function() {deepEqual( Stem("kreatívabb"), "kreatívabb");});
test("kredenc -> kredenc", function() {deepEqual( Stem("kredenc"), "kredenc");});
test("krepp -> krepp", function() {deepEqual( Stem("krepp"), "krepp");});
test("kreált -> kreál", function() {deepEqual( Stem("kreált"), "kreál");});
test("kricsmiben -> kricsm", function() {deepEqual( Stem("kricsmiben"), "kricsm");});
test("krikettezni -> krikettezn", function() {deepEqual( Stem("krikettezni"), "krikettezn");});
test("kriptában -> kript", function() {deepEqual( Stem("kriptában"), "kript");});
test("kristálydarab -> kristálydarab", function() {deepEqual( Stem("kristálydarab"), "kristálydarab");});
test("kristályok -> kristály", function() {deepEqual( Stem("kristályok"), "kristály");});
test("kristályosodott -> kristályosodot", function() {deepEqual( Stem("kristályosodott"), "kristályosodot");});
test("kristálytiszta -> kristálytiszt", function() {deepEqual( Stem("kristálytiszta"), "kristálytiszt");});
test("krisztusi -> krisztus", function() {deepEqual( Stem("krisztusi"), "krisztus");});
test("kritikai -> kriti", function() {deepEqual( Stem("kritikai"), "kriti");});
test("kritikus -> kritikus", function() {deepEqual( Stem("kritikus"), "kritikus");});
test("kritikusa -> kritikus", function() {deepEqual( Stem("kritikusa"), "kritikus");});
test("kritikusabb -> kritikusabb", function() {deepEqual( Stem("kritikusabb"), "kritikusabb");});
test("kritikusnak -> kritikus", function() {deepEqual( Stem("kritikusnak"), "kritikus");});
test("kritikusok -> kritikus", function() {deepEqual( Stem("kritikusok"), "kritikus");});
test("kritikája -> kritiká", function() {deepEqual( Stem("kritikája"), "kritiká");});
test("kritikájára -> kritiká", function() {deepEqual( Stem("kritikájára"), "kritiká");});
test("kritika -> krit", function() {deepEqual( Stem("kritika"), "krit");});
test("kritikák -> kritika", function() {deepEqual( Stem("kritikák"), "kritika");});
test("kritikát -> krit", function() {deepEqual( Stem("kritikát"), "krit");});
test("kritizál -> kritizál", function() {deepEqual( Stem("kritizál"), "kritizál");});
test("kritizálni -> kritizáln", function() {deepEqual( Stem("kritizálni"), "kritizáln");});
test("kritizálta -> kritizált", function() {deepEqual( Stem("kritizálta"), "kritizált");});
test("kritizálták -> kritizálta", function() {deepEqual( Stem("kritizálták"), "kritizálta");});
test("kritizáló -> kritizáló", function() {deepEqual( Stem("kritizáló"), "kritizáló");});
test("kritérium -> kritériu", function() {deepEqual( Stem("kritérium"), "kritériu");});
test("kritériuma -> kritérium", function() {deepEqual( Stem("kritériuma"), "kritérium");});
test("kritériumai -> kritérium", function() {deepEqual( Stem("kritériumai"), "kritérium");});
test("kritériumainak -> kritérium", function() {deepEqual( Stem("kritériumainak"), "kritérium");});
test("kritériumait -> kritérium", function() {deepEqual( Stem("kritériumait"), "kritérium");});
test("kritériumok -> kritérium", function() {deepEqual( Stem("kritériumok"), "kritérium");});
test("kritériumokat -> kritérium", function() {deepEqual( Stem("kritériumokat"), "kritérium");});
test("kritériumoknak -> kritérium", function() {deepEqual( Stem("kritériumoknak"), "kritérium");});
test("kritériumot -> kritériu", function() {deepEqual( Stem("kritériumot"), "kritériu");});
test("kritériumának -> kritérium", function() {deepEqual( Stem("kritériumának"), "kritérium");});
test("kritériumát -> kritérium", function() {deepEqual( Stem("kritériumát"), "kritérium");});
test("kritériumrendszerre -> kritériumrendszer", function() {deepEqual( Stem("kritériumrendszerre"), "kritériumrendszer");});
test("kritériumrendszerrel -> kritériumrendszer", function() {deepEqual( Stem("kritériumrendszerrel"), "kritériumrendszer");});
test("kritériumrendszert -> kritériumrendszer", function() {deepEqual( Stem("kritériumrendszert"), "kritériumrendszer");});
test("krizantém -> krizante", function() {deepEqual( Stem("krizantém"), "krizante");});
test("krizantémunk -> krizantém", function() {deepEqual( Stem("krizantémunk"), "krizantém");});
test("krokodilpofájút -> krokodilpofájú", function() {deepEqual( Stem("krokodilpofájút"), "krokodilpofájú");});
test("kronológiai -> kronológi", function() {deepEqual( Stem("kronológiai"), "kronológi");});
test("krumpli -> krumpl", function() {deepEqual( Stem("krumpli"), "krumpl");});
test("krumpliból -> krumpl", function() {deepEqual( Stem("krumpliból"), "krumpl");});
test("krumplihoz -> krumpl", function() {deepEqual( Stem("krumplihoz"), "krumpl");});
test("krumplinak -> krumpl", function() {deepEqual( Stem("krumplinak"), "krumpl");});
test("krumplit -> krumpl", function() {deepEqual( Stem("krumplit"), "krumpl");});
test("krumplival -> krumpl", function() {deepEqual( Stem("krumplival"), "krumpl");});
test("krumplihegyek -> krumplihegy", function() {deepEqual( Stem("krumplihegyek"), "krumplihegy");});
test("krumplihéjat -> krumplihéj", function() {deepEqual( Stem("krumplihéjat"), "krumplihéj");});
test("krumplis -> krumplis", function() {deepEqual( Stem("krumplis"), "krumplis");});
test("krákogást -> krákogás", function() {deepEqual( Stem("krákogást"), "krákogás");});
test("krémjéhez -> krém", function() {deepEqual( Stem("krémjéhez"), "krém");});
test("krémmel -> krém", function() {deepEqual( Stem("krémmel"), "krém");});
test("krémpapírnak -> krémpapír", function() {deepEqual( Stem("krémpapírnak"), "krémpapír");});
test("krémszínű -> krémszínű", function() {deepEqual( Stem("krémszínű"), "krémszínű");});
test("krémsárga -> krémsárg", function() {deepEqual( Stem("krémsárga"), "krémsárg");});
test("kréta -> krét", function() {deepEqual( Stem("kréta"), "krét");});
test("krétafehér -> krétafehér", function() {deepEqual( Stem("krétafehér"), "krétafehér");});
test("krízis -> krízis", function() {deepEqual( Stem("krízis"), "krízis");});
test("krízisei -> krízis", function() {deepEqual( Stem("krízisei"), "krízis");});
test("krízisek -> krízis", function() {deepEqual( Stem("krízisek"), "krízis");});
test("krízisről -> krízis", function() {deepEqual( Stem("krízisről"), "krízis");});
test("krómdíszítés -> krómdíszítés", function() {deepEqual( Stem("krómdíszítés"), "krómdíszítés");});
test("kubai -> kub", function() {deepEqual( Stem("kubai"), "kub");});
test("kubaiak -> kubai", function() {deepEqual( Stem("kubaiak"), "kubai");});
test("kubikos -> kubikos", function() {deepEqual( Stem("kubikos"), "kubikos");});
test("kubistának -> kubist", function() {deepEqual( Stem("kubistának"), "kubist");});
test("kubizmus -> kubizmus", function() {deepEqual( Stem("kubizmus"), "kubizmus");});
test("kubizmusból -> kubizmus", function() {deepEqual( Stem("kubizmusból"), "kubizmus");});
test("kubizmusra -> kubizmus", function() {deepEqual( Stem("kubizmusra"), "kubizmus");});
test("kudarc -> kudarc", function() {deepEqual( Stem("kudarc"), "kudarc");});
test("kudarca -> kudarc", function() {deepEqual( Stem("kudarca"), "kudarc");});
test("kudarcaim -> kudarc", function() {deepEqual( Stem("kudarcaim"), "kudarc");});
test("kudarccal -> kudarc", function() {deepEqual( Stem("kudarccal"), "kudarc");});
test("kudarcok -> kudarc", function() {deepEqual( Stem("kudarcok"), "kudarc");});
test("kudarcokat -> kudarc", function() {deepEqual( Stem("kudarcokat"), "kudarc");});
test("kudarcom -> kudarc", function() {deepEqual( Stem("kudarcom"), "kudarc");});
test("kudarcot -> kudarc", function() {deepEqual( Stem("kudarcot"), "kudarc");});
test("kudarcról -> kudarc", function() {deepEqual( Stem("kudarcról"), "kudarc");});
test("kudarcának -> kudarc", function() {deepEqual( Stem("kudarcának"), "kudarc");});
test("kudarctapasztalat -> kudarctapasztal", function() {deepEqual( Stem("kudarctapasztalat"), "kudarctapasztal");});
test("kudarctörténetet -> kudarctörténet", function() {deepEqual( Stem("kudarctörténetet"), "kudarctörténet");});
test("kuglófot -> kuglóf", function() {deepEqual( Stem("kuglófot"), "kuglóf");});
test("kukacot -> kukac", function() {deepEqual( Stem("kukacot"), "kukac");});
test("kukinkat -> ku", function() {deepEqual( Stem("kukinkat"), "ku");});
test("kukiztunk -> kukizt", function() {deepEqual( Stem("kukiztunk"), "kukizt");});
test("kukkot -> kuk", function() {deepEqual( Stem("kukkot"), "kuk");});
test("kukorica -> kukoric", function() {deepEqual( Stem("kukorica"), "kukoric");});
test("kukoricából -> kukoric", function() {deepEqual( Stem("kukoricából"), "kukoric");});
test("kukoricára -> kukoric", function() {deepEqual( Stem("kukoricára"), "kukoric");});
test("kukoricát -> kukoric", function() {deepEqual( Stem("kukoricát"), "kukoric");});
test("kukri -> kukr", function() {deepEqual( Stem("kukri"), "kukr");});
test("kukába -> ku", function() {deepEqual( Stem("kukába"), "ku");});
test("kukán -> ku", function() {deepEqual( Stem("kukán"), "ku");});
test("kukát -> ku", function() {deepEqual( Stem("kukát"), "ku");});
test("kukásautók -> kukásautó", function() {deepEqual( Stem("kukásautók"), "kukásautó");});
test("kulccsal -> kulcs", function() {deepEqual( Stem("kulccsal"), "kulcs");});
test("kulcs -> kulcs", function() {deepEqual( Stem("kulcs"), "kulcs");});
test("kulcsa -> kulcs", function() {deepEqual( Stem("kulcsa"), "kulcs");});
test("kulcsai -> kulcs", function() {deepEqual( Stem("kulcsai"), "kulcs");});
test("kulcsait -> kulcs", function() {deepEqual( Stem("kulcsait"), "kulcs");});
test("kulcsok -> kulcs", function() {deepEqual( Stem("kulcsok"), "kulcs");});
test("kulcsokért -> kulcs", function() {deepEqual( Stem("kulcsokért"), "kulcs");});
test("kulcsom -> kulcs", function() {deepEqual( Stem("kulcsom"), "kulcs");});
test("kulcsot -> kulcs", function() {deepEqual( Stem("kulcsot"), "kulcs");});
test("kulcsát -> kulcs", function() {deepEqual( Stem("kulcsát"), "kulcs");});
test("kulcsával -> kulcs", function() {deepEqual( Stem("kulcsával"), "kulcs");});
test("kulcscsomót -> kulcscsomó", function() {deepEqual( Stem("kulcscsomót"), "kulcscsomó");});
test("kulcselem -> kulcsel", function() {deepEqual( Stem("kulcselem"), "kulcsel");});
test("kulcseleme -> kulcselem", function() {deepEqual( Stem("kulcseleme"), "kulcselem");});
test("kulcsfogalom -> kulcsfogal", function() {deepEqual( Stem("kulcsfogalom"), "kulcsfogal");});
test("kulcsfontosságú -> kulcsfontosságú", function() {deepEqual( Stem("kulcsfontosságú"), "kulcsfontosságú");});
test("kulcsjátékosai -> kulcsjátékos", function() {deepEqual( Stem("kulcsjátékosai"), "kulcsjátékos");});
test("kulcsképzéshez -> kulcsképzés", function() {deepEqual( Stem("kulcsképzéshez"), "kulcsképzés");});
test("kulcskérdés -> kulcskérdés", function() {deepEqual( Stem("kulcskérdés"), "kulcskérdés");});
test("kulcslyukakon -> kulcslyuk", function() {deepEqual( Stem("kulcslyukakon"), "kulcslyuk");});
test("kulcslyuknál -> kulcsly", function() {deepEqual( Stem("kulcslyuknál"), "kulcsly");});
test("kulcslyukon -> kulcsly", function() {deepEqual( Stem("kulcslyukon"), "kulcsly");});
test("kulcsolta -> kulcsolt", function() {deepEqual( Stem("kulcsolta"), "kulcsolt");});
test("kulcsolva -> kulcsolv", function() {deepEqual( Stem("kulcsolva"), "kulcsolv");});
test("kulcsszava -> kulcsszav", function() {deepEqual( Stem("kulcsszava"), "kulcsszav");});
test("kulcsszavak -> kulcsszav", function() {deepEqual( Stem("kulcsszavak"), "kulcsszav");});
test("kulcsszavakat -> kulcsszav", function() {deepEqual( Stem("kulcsszavakat"), "kulcsszav");});
test("kulcsszavakkal -> kulcsszav", function() {deepEqual( Stem("kulcsszavakkal"), "kulcsszav");});
test("kulcsszerepet -> kulcsszerep", function() {deepEqual( Stem("kulcsszerepet"), "kulcsszerep");});
test("kulcsszó -> kulcsszó", function() {deepEqual( Stem("kulcsszó"), "kulcsszó");});
test("kulcsszóra -> kulcsszó", function() {deepEqual( Stem("kulcsszóra"), "kulcsszó");});
test("kulcstartót -> kulcstartó", function() {deepEqual( Stem("kulcstartót"), "kulcstartó");});
test("kulcsterületnektekintendő -> kulcsterületnektekintendő", function() {deepEqual( Stem("kulcsterületnektekintendő"), "kulcsterületnektekintendő");});
test("kulcsvállalatnál -> kulcsvállalat", function() {deepEqual( Stem("kulcsvállalatnál"), "kulcsvállalat");});
test("kulcsú -> kulcsú", function() {deepEqual( Stem("kulcsú"), "kulcsú");});
test("kulik -> kul", function() {deepEqual( Stem("kulik"), "kul");});
test("kulináris -> kulináris", function() {deepEqual( Stem("kulináris"), "kulináris");});
test("kulisszatitkaiba -> kulisszatit", function() {deepEqual( Stem("kulisszatitkaiba"), "kulisszatit");});
test("kulisszák -> kulissza", function() {deepEqual( Stem("kulisszák"), "kulissza");});
test("kulisszába -> kulissz", function() {deepEqual( Stem("kulisszába"), "kulissz");});
test("kullancsok -> kullancs", function() {deepEqual( Stem("kullancsok"), "kullancs");});
test("kulloghat -> kullogh", function() {deepEqual( Stem("kulloghat"), "kullogh");});
test("kullogás -> kullogás", function() {deepEqual( Stem("kullogás"), "kullogás");});
test("kultikus -> kultikus", function() {deepEqual( Stem("kultikus"), "kultikus");});
test("kultikust -> kultikus", function() {deepEqual( Stem("kultikust"), "kultikus");});
test("kulturális-történeti -> kulturális-történet", function() {deepEqual( Stem("kulturális-történeti"), "kulturális-történet");});
test("kulturálisan -> kulturális", function() {deepEqual( Stem("kulturálisan"), "kulturális");});
test("kulturális -> kulturális", function() {deepEqual( Stem("kulturális"), "kulturális");});
test("kulturált -> kulturál", function() {deepEqual( Stem("kulturált"), "kulturál");});
test("kulturáltabban -> kulturáltab", function() {deepEqual( Stem("kulturáltabban"), "kulturáltab");});
test("kultusz -> kultusz", function() {deepEqual( Stem("kultusz"), "kultusz");});
test("kultusza -> kultusz", function() {deepEqual( Stem("kultusza"), "kultusz");});
test("kultuszra -> kultusz", function() {deepEqual( Stem("kultuszra"), "kultusz");});
test("kultuszát -> kultusz", function() {deepEqual( Stem("kultuszát"), "kultusz");});
test("kultuszkormányzat -> kultuszkormányz", function() {deepEqual( Stem("kultuszkormányzat"), "kultuszkormányz");});
test("kultusztárca -> kultusztárc", function() {deepEqual( Stem("kultusztárca"), "kultusztárc");});
test("kultúr -> kultúr", function() {deepEqual( Stem("kultúr"), "kultúr");});
test("kultúraközvetítők -> kultúraközvetítő", function() {deepEqual( Stem("kultúraközvetítők"), "kultúraközvetítő");});
test("kultúrbotrányról -> kultúrbotrány", function() {deepEqual( Stem("kultúrbotrányról"), "kultúrbotrány");});
test("kultúrházat -> kultúrház", function() {deepEqual( Stem("kultúrházat"), "kultúrház");});
test("kultúrában -> kultúr", function() {deepEqual( Stem("kultúrában"), "kultúr");});
test("kultúra -> kultú", function() {deepEqual( Stem("kultúra"), "kultú");});
test("kultúrából -> kultúr", function() {deepEqual( Stem("kultúrából"), "kultúr");});
test("kultúrához -> kultúr", function() {deepEqual( Stem("kultúrához"), "kultúr");});
test("kultúrája -> kultúrá", function() {deepEqual( Stem("kultúrája"), "kultúrá");});
test("kultúrájuk -> kultúra", function() {deepEqual( Stem("kultúrájuk"), "kultúra");});
test("kultúrájukat -> kultúra", function() {deepEqual( Stem("kultúrájukat"), "kultúra");});
test("kultúrájának -> kultúrá", function() {deepEqual( Stem("kultúrájának"), "kultúrá");});
test("kultúráját -> kultúrá", function() {deepEqual( Stem("kultúráját"), "kultúrá");});
test("kultúrák -> kultúra", function() {deepEqual( Stem("kultúrák"), "kultúra");});
test("kultúrákat -> kultúra", function() {deepEqual( Stem("kultúrákat"), "kultúra");});
test("kultúráknak -> kultúra", function() {deepEqual( Stem("kultúráknak"), "kultúra");});
test("kultúrákról -> kultúra", function() {deepEqual( Stem("kultúrákról"), "kultúra");});
test("kultúránk -> kultúra", function() {deepEqual( Stem("kultúránk"), "kultúra");});
test("kultúránkban -> kultúra", function() {deepEqual( Stem("kultúránkban"), "kultúra");});
test("kultúráról -> kultúr", function() {deepEqual( Stem("kultúráról"), "kultúr");});
test("kultúrát -> kultúr", function() {deepEqual( Stem("kultúrát"), "kultúr");});
test("kultúrával -> kultúr", function() {deepEqual( Stem("kultúrával"), "kultúr");});
test("kultúráltabb -> kultúráltabb", function() {deepEqual( Stem("kultúráltabb"), "kultúráltabb");});
test("kulánsak -> kuláns", function() {deepEqual( Stem("kulánsak"), "kuláns");});
test("kumikok -> kumik", function() {deepEqual( Stem("kumikok"), "kumik");});
test("kumulálódott -> kumulálódot", function() {deepEqual( Stem("kumulálódott"), "kumulálódot");});
test("kuncsaftoknak -> kuncsaft", function() {deepEqual( Stem("kuncsaftoknak"), "kuncsaft");});
test("kunszt -> kunsz", function() {deepEqual( Stem("kunszt"), "kunsz");});
test("kunyerálni -> kunyeráln", function() {deepEqual( Stem("kunyerálni"), "kunyeráln");});
test("kunyerálta -> kunyerált", function() {deepEqual( Stem("kunyerálta"), "kunyerált");});
test("kunyhóiban -> kunyhó", function() {deepEqual( Stem("kunyhóiban"), "kunyhó");});
test("kupadöntőt -> kupadöntő", function() {deepEqual( Stem("kupadöntőt"), "kupadöntő");});
test("kupaktanács -> kupaktanács", function() {deepEqual( Stem("kupaktanács"), "kupaktanács");});
test("kupameccs -> kupameccs", function() {deepEqual( Stem("kupameccs"), "kupameccs");});
test("kupameccsekre -> kupameccs", function() {deepEqual( Stem("kupameccsekre"), "kupameccs");});
test("kupameccsen -> kupameccs", function() {deepEqual( Stem("kupameccsen"), "kupameccs");});
test("kupameccset -> kupameccs", function() {deepEqual( Stem("kupameccset"), "kupameccs");});
test("kupamérkőzésén -> kupamérkőzés", function() {deepEqual( Stem("kupamérkőzésén"), "kupamérkőzés");});
test("kupicáját -> kupicá", function() {deepEqual( Stem("kupicáját"), "kupicá");});
test("kuplung -> kuplung", function() {deepEqual( Stem("kuplung"), "kuplung");});
test("kuplunggal -> kuplung", function() {deepEqual( Stem("kuplunggal"), "kuplung");});
test("kuplungot -> kuplung", function() {deepEqual( Stem("kuplungot"), "kuplung");});
test("kupola -> kupol", function() {deepEqual( Stem("kupola"), "kupol");});
test("kupolába -> kupol", function() {deepEqual( Stem("kupolába"), "kupol");});
test("kupolája -> kupolá", function() {deepEqual( Stem("kupolája"), "kupolá");});
test("kuponokra -> kupon", function() {deepEqual( Stem("kuponokra"), "kupon");});
test("kuporogtak -> kuporogt", function() {deepEqual( Stem("kuporogtak"), "kuporogt");});
test("kuporogtunk -> kuporogt", function() {deepEqual( Stem("kuporogtunk"), "kuporogt");});
test("kupát -> kup", function() {deepEqual( Stem("kupát"), "kup");});
test("kupé -> kup", function() {deepEqual( Stem("kupé"), "kup");});
test("kuratórium -> kuratóriu", function() {deepEqual( Stem("kuratórium"), "kuratóriu");});
test("kuratóriuma -> kuratórium", function() {deepEqual( Stem("kuratóriuma"), "kuratórium");});
test("kuratóriumban -> kuratóriu", function() {deepEqual( Stem("kuratóriumban"), "kuratóriu");});
test("kuratóriumában -> kuratórium", function() {deepEqual( Stem("kuratóriumában"), "kuratórium");});
test("kuratóriumának -> kuratórium", function() {deepEqual( Stem("kuratóriumának"), "kuratórium");});
test("kuratóriumi -> kuratórium", function() {deepEqual( Stem("kuratóriumi"), "kuratórium");});
test("kurd -> kur", function() {deepEqual( Stem("kurd"), "kur");});
test("kuriózum -> kuriózu", function() {deepEqual( Stem("kuriózum"), "kuriózu");});
test("kuriózumnak -> kuriózu", function() {deepEqual( Stem("kuriózumnak"), "kuriózu");});
test("kurjantotta -> kurjantott", function() {deepEqual( Stem("kurjantotta"), "kurjantott");});
test("kurta -> kurt", function() {deepEqual( Stem("kurta"), "kurt");});
test("kurtán -> kurt", function() {deepEqual( Stem("kurtán"), "kurt");});
test("kurtította -> kurtított", function() {deepEqual( Stem("kurtította"), "kurtított");});
test("kurva -> kurv", function() {deepEqual( Stem("kurva"), "kurv");});
test("kurzormozgató -> kurzormozgató", function() {deepEqual( Stem("kurzormozgató"), "kurzormozgató");});
test("kurzorpozicionálást -> kurzorpozicionálás", function() {deepEqual( Stem("kurzorpozicionálást"), "kurzorpozicionálás");});
test("kurzort -> kurzor", function() {deepEqual( Stem("kurzort"), "kurzor");});
test("kurzor -> kurzor", function() {deepEqual( Stem("kurzor"), "kurzor");});
test("kurzus -> kurzus", function() {deepEqual( Stem("kurzus"), "kurzus");});
test("kurzusa -> kurzus", function() {deepEqual( Stem("kurzusa"), "kurzus");});
test("kurzusai -> kurzus", function() {deepEqual( Stem("kurzusai"), "kurzus");});
test("kurzusaira -> kurzus", function() {deepEqual( Stem("kurzusaira"), "kurzus");});
test("kurzusait -> kurzus", function() {deepEqual( Stem("kurzusait"), "kurzus");});
test("kurzusaitól -> kurzus", function() {deepEqual( Stem("kurzusaitól"), "kurzus");});
test("kurzusból -> kurzus", function() {deepEqual( Stem("kurzusból"), "kurzus");});
test("kurzushoz -> kurzus", function() {deepEqual( Stem("kurzushoz"), "kurzus");});
test("kurzusnak -> kurzus", function() {deepEqual( Stem("kurzusnak"), "kurzus");});
test("kurzusok -> kurzus", function() {deepEqual( Stem("kurzusok"), "kurzus");});
test("kurzusokat -> kurzus", function() {deepEqual( Stem("kurzusokat"), "kurzus");});
test("kurzusokban -> kurzus", function() {deepEqual( Stem("kurzusokban"), "kurzus");});
test("kurzusokhoz -> kurzus", function() {deepEqual( Stem("kurzusokhoz"), "kurzus");});
test("kurzusokig -> kurzus", function() {deepEqual( Stem("kurzusokig"), "kurzus");});
test("kurzusokon -> kurzus", function() {deepEqual( Stem("kurzusokon"), "kurzus");});
test("kurzusoktól -> kurzus", function() {deepEqual( Stem("kurzusoktól"), "kurzus");});
test("kurzuson -> kurzus", function() {deepEqual( Stem("kurzuson"), "kurzus");});
test("kurzusra -> kurzus", function() {deepEqual( Stem("kurzusra"), "kurzus");});
test("kurzust -> kurzus", function() {deepEqual( Stem("kurzust"), "kurzus");});
test("kurzusára -> kurzus", function() {deepEqual( Stem("kurzusára"), "kurzus");});
test("kurzusát -> kurzus", function() {deepEqual( Stem("kurzusát"), "kurzus");});
test("kurzusával -> kurzus", function() {deepEqual( Stem("kurzusával"), "kurzus");});
test("kurátora -> kurát", function() {deepEqual( Stem("kurátora"), "kurát");});
test("kurátorok -> kurátor", function() {deepEqual( Stem("kurátorok"), "kurátor");});
test("kurátorral -> kurátor", function() {deepEqual( Stem("kurátorral"), "kurátor");});
test("kurátorából -> kurátor", function() {deepEqual( Stem("kurátorából"), "kurátor");});
test("kutassanak -> kutass", function() {deepEqual( Stem("kutassanak"), "kutass");});
test("kutasson -> kutass", function() {deepEqual( Stem("kutasson"), "kutass");});
test("kutat -> kut", function() {deepEqual( Stem("kutat"), "kut");});
test("kutathatott -> kutathatot", function() {deepEqual( Stem("kutathatott"), "kutathatot");});
test("kutatható -> kutatható", function() {deepEqual( Stem("kutatható"), "kutatható");});
test("kutatja -> kutat", function() {deepEqual( Stem("kutatja"), "kutat");});
test("kutatnak -> kutat", function() {deepEqual( Stem("kutatnak"), "kutat");});
test("kutatni -> kutatn", function() {deepEqual( Stem("kutatni"), "kutatn");});
test("kutatnom -> kutatn", function() {deepEqual( Stem("kutatnom"), "kutatn");});
test("kutatott -> kutatot", function() {deepEqual( Stem("kutatott"), "kutatot");});
test("kutattak -> kutatt", function() {deepEqual( Stem("kutattak"), "kutatt");});
test("kutattam -> kutatt", function() {deepEqual( Stem("kutattam"), "kutatt");});
test("kutattuk -> kutatt", function() {deepEqual( Stem("kutattuk"), "kutatt");});
test("kutattunk -> kutatt", function() {deepEqual( Stem("kutattunk"), "kutatt");});
test("kutatták -> kutatta", function() {deepEqual( Stem("kutatták"), "kutatta");});
test("kutatva -> kutatv", function() {deepEqual( Stem("kutatva"), "kutatv");});
test("kutatás-fejlesztés -> kutatás-fejlesztés", function() {deepEqual( Stem("kutatás-fejlesztés"), "kutatás-fejlesztés");});
test("kutatás-fejlesztési -> kutatás-fejlesztés", function() {deepEqual( Stem("kutatás-fejlesztési"), "kutatás-fejlesztés");});
test("kutatása -> kutatás", function() {deepEqual( Stem("kutatása"), "kutatás");});
test("kutatás -> kutatás", function() {deepEqual( Stem("kutatás"), "kutatás");});
test("kutatásai -> kutatás", function() {deepEqual( Stem("kutatásai"), "kutatás");});
test("kutatásait -> kutatás", function() {deepEqual( Stem("kutatásait"), "kutatás");});
test("kutatásba -> kutatás", function() {deepEqual( Stem("kutatásba"), "kutatás");});
test("kutatásban -> kutatás", function() {deepEqual( Stem("kutatásban"), "kutatás");});
test("kutatáshoz -> kutatás", function() {deepEqual( Stem("kutatáshoz"), "kutatás");});
test("kutatások -> kutatás", function() {deepEqual( Stem("kutatások"), "kutatás");});
test("kutatásokat -> kutatás", function() {deepEqual( Stem("kutatásokat"), "kutatás");});
test("kutatásra -> kutatás", function() {deepEqual( Stem("kutatásra"), "kutatás");});
test("kutatást -> kutatás", function() {deepEqual( Stem("kutatást"), "kutatás");});
test("kutatásában -> kutatás", function() {deepEqual( Stem("kutatásában"), "kutatás");});
test("kutatásához -> kutatás", function() {deepEqual( Stem("kutatásához"), "kutatás");});
test("kutatásának -> kutatás", function() {deepEqual( Stem("kutatásának"), "kutatás");});
test("kutatásának -> kutatás", function() {deepEqual( Stem("kutatásának"), "kutatás");});
test("kutatásba-fejlesztésbe -> kutatásba-fejlesztés", function() {deepEqual( Stem("kutatásba-fejlesztésbe"), "kutatásba-fejlesztés");});
test("kutatási -> kutatás", function() {deepEqual( Stem("kutatási"), "kutatás");});
test("kutatási-fejlesztési -> kutatási-fejlesztés", function() {deepEqual( Stem("kutatási-fejlesztési"), "kutatási-fejlesztés");});
test("kutatásra-fejlesztésre -> kutatásra-fejlesztés", function() {deepEqual( Stem("kutatásra-fejlesztésre"), "kutatásra-fejlesztés");});
test("kutatásvezetők -> kutatásvezető", function() {deepEqual( Stem("kutatásvezetők"), "kutatásvezető");});
test("kutató-fejlesztő -> kutató-fejlesztő", function() {deepEqual( Stem("kutató-fejlesztő"), "kutató-fejlesztő");});
test("kutató-mentő -> kutató-mentő", function() {deepEqual( Stem("kutató-mentő"), "kutató-mentő");});
test("kutatóbázisokat -> kutatóbázis", function() {deepEqual( Stem("kutatóbázisokat"), "kutatóbázis");});
test("kutatócsoportokat -> kutatócsoport", function() {deepEqual( Stem("kutatócsoportokat"), "kutatócsoport");});
test("kutatóhajóról -> kutatóhajó", function() {deepEqual( Stem("kutatóhajóról"), "kutatóhajó");});
test("kutatóhelyeken -> kutatóhely", function() {deepEqual( Stem("kutatóhelyeken"), "kutatóhely");});
test("kutatói -> kutató", function() {deepEqual( Stem("kutatói"), "kutató");});
test("kutatóintézet -> kutatóintéz", function() {deepEqual( Stem("kutatóintézet"), "kutatóintéz");});
test("kutatóintézetek -> kutatóintézet", function() {deepEqual( Stem("kutatóintézetek"), "kutatóintézet");});
test("kutatóintézetekből -> kutatóintézet", function() {deepEqual( Stem("kutatóintézetekből"), "kutatóintézet");});
test("kutatóintézeteknek -> kutatóintézet", function() {deepEqual( Stem("kutatóintézeteknek"), "kutatóintézet");});
test("kutatóintézetet -> kutatóintézet", function() {deepEqual( Stem("kutatóintézetet"), "kutatóintézet");});
test("kutatója -> kutató", function() {deepEqual( Stem("kutatója"), "kutató");});
test("kutatók -> kutató", function() {deepEqual( Stem("kutatók"), "kutató");});
test("kutatóknak -> kutató", function() {deepEqual( Stem("kutatóknak"), "kutató");});
test("kutatóként -> kutató", function() {deepEqual( Stem("kutatóként"), "kutató");});
test("kutatóiból -> kutató", function() {deepEqual( Stem("kutatóiból"), "kutató");});
test("kutatóinak -> kutató", function() {deepEqual( Stem("kutatóinak"), "kutató");});
test("kutató -> kutató", function() {deepEqual( Stem("kutató"), "kutató");});
test("kutatóan -> kutató", function() {deepEqual( Stem("kutatóan"), "kutató");});
test("kutatólaboratóriumokban -> kutatólaboratórium", function() {deepEqual( Stem("kutatólaboratóriumokban"), "kutatólaboratórium");});
test("kutatómunka -> kutatómun", function() {deepEqual( Stem("kutatómunka"), "kutatómun");});
test("kutatóreaktor -> kutatóreaktor", function() {deepEqual( Stem("kutatóreaktor"), "kutatóreaktor");});
test("kutyabarát -> kutyabar", function() {deepEqual( Stem("kutyabarát"), "kutyabar");});
test("kutyafuttatónál -> kutyafuttató", function() {deepEqual( Stem("kutyafuttatónál"), "kutyafuttató");});
test("kutyagumibot -> kutyagumib", function() {deepEqual( Stem("kutyagumibot"), "kutyagumib");});
test("kutyagumibotja -> kutyagumibot", function() {deepEqual( Stem("kutyagumibotja"), "kutyagumibot");});
test("kutyagumibotján -> kutyagumibot", function() {deepEqual( Stem("kutyagumibotján"), "kutyagumibot");});
test("kutyagumibotját -> kutyagumibot", function() {deepEqual( Stem("kutyagumibotját"), "kutyagumibot");});
test("kutyagumibotom -> kutyagumibot", function() {deepEqual( Stem("kutyagumibotom"), "kutyagumibot");});
test("kutyagumibotot -> kutyagumibot", function() {deepEqual( Stem("kutyagumibotot"), "kutyagumibot");});
test("kutyagumibotunknak -> kutyagumibot", function() {deepEqual( Stem("kutyagumibotunknak"), "kutyagumibot");});
test("kutyagumibotért -> kutyagumibot", function() {deepEqual( Stem("kutyagumibotért"), "kutyagumibot");});
test("kutyaharapás -> kutyaharapás", function() {deepEqual( Stem("kutyaharapás"), "kutyaharapás");});
test("kutyakiállítás -> kutyakiállítás", function() {deepEqual( Stem("kutyakiállítás"), "kutyakiállítás");});
test("kutyakiállításon -> kutyakiállítás", function() {deepEqual( Stem("kutyakiállításon"), "kutyakiállítás");});
test("kutyakiállításra -> kutyakiállítás", function() {deepEqual( Stem("kutyakiállításra"), "kutyakiállítás");});
test("kutyakiállítást -> kutyakiállítás", function() {deepEqual( Stem("kutyakiállítást"), "kutyakiállítás");});
test("kutyasereg -> kutyasereg", function() {deepEqual( Stem("kutyasereg"), "kutyasereg");});
test("kutyaszorítót -> kutyaszorító", function() {deepEqual( Stem("kutyaszorítót"), "kutyaszorító");});
test("kutyatenyésztéssel -> kutyatenyésztés", function() {deepEqual( Stem("kutyatenyésztéssel"), "kutyatenyésztés");});
test("kutyatulajdonos -> kutyatulajdonos", function() {deepEqual( Stem("kutyatulajdonos"), "kutyatulajdonos");});
test("kutyus -> kutyus", function() {deepEqual( Stem("kutyus"), "kutyus");});
test("kutyuskám -> kutyuska", function() {deepEqual( Stem("kutyuskám"), "kutyuska");});
test("kutyusokat -> kutyus", function() {deepEqual( Stem("kutyusokat"), "kutyus");});
test("kutyussal -> kutyus", function() {deepEqual( Stem("kutyussal"), "kutyus");});
test("kutyust -> kutyus", function() {deepEqual( Stem("kutyust"), "kutyus");});
test("kutyába -> kuty", function() {deepEqual( Stem("kutyába"), "kuty");});
test("kutya -> kuty", function() {deepEqual( Stem("kutya"), "kuty");});
test("kutyábbak -> kutyább", function() {deepEqual( Stem("kutyábbak"), "kutyább");});
test("kutyái -> kutya", function() {deepEqual( Stem("kutyái"), "kutya");});
test("kutyáikat -> kutya", function() {deepEqual( Stem("kutyáikat"), "kutya");});
test("kutyáimat -> kutya", function() {deepEqual( Stem("kutyáimat"), "kutya");});
test("kutyája -> kutyá", function() {deepEqual( Stem("kutyája"), "kutyá");});
test("kutyájához -> kutyá", function() {deepEqual( Stem("kutyájához"), "kutyá");});
test("kutyájára -> kutyá", function() {deepEqual( Stem("kutyájára"), "kutyá");});
test("kutyájáról -> kutyá", function() {deepEqual( Stem("kutyájáról"), "kutyá");});
test("kutyáját -> kutyá", function() {deepEqual( Stem("kutyáját"), "kutyá");});
test("kutyák -> kutya", function() {deepEqual( Stem("kutyák"), "kutya");});
test("kutyákat -> kutya", function() {deepEqual( Stem("kutyákat"), "kutya");});
test("kutyákkal -> kutya", function() {deepEqual( Stem("kutyákkal"), "kutya");});
test("kutyákon -> kutya", function() {deepEqual( Stem("kutyákon"), "kutya");});
test("kutyám -> kutya", function() {deepEqual( Stem("kutyám"), "kutya");});
test("kutyámat -> kutya", function() {deepEqual( Stem("kutyámat"), "kutya");});
test("kutyámmal -> kutya", function() {deepEqual( Stem("kutyámmal"), "kutya");});
test("kutyának -> kuty", function() {deepEqual( Stem("kutyának"), "kuty");});
test("kutyánk -> kutya", function() {deepEqual( Stem("kutyánk"), "kutya");});
test("kutyára -> kuty", function() {deepEqual( Stem("kutyára"), "kuty");});
test("kutyát -> kuty", function() {deepEqual( Stem("kutyát"), "kuty");});
test("kutyául -> kuty", function() {deepEqual( Stem("kutyául"), "kuty");});
test("kutyával -> kuty", function() {deepEqual( Stem("kutyával"), "kuty");});
test("kuvaiti -> kuvait", function() {deepEqual( Stem("kuvaiti"), "kuvait");});
test("kuvasz -> kuvasz", function() {deepEqual( Stem("kuvasz"), "kuvasz");});
test("kuvaszok -> kuvasz", function() {deepEqual( Stem("kuvaszok"), "kuvasz");});
test("kvalifikálhatatlan -> kvalifikálhatatl", function() {deepEqual( Stem("kvalifikálhatatlan"), "kvalifikálhatatl");});
test("kvalifikált -> kvalifikál", function() {deepEqual( Stem("kvalifikált"), "kvalifikál");});
test("kvalifikáló -> kvalifikáló", function() {deepEqual( Stem("kvalifikáló"), "kvalifikáló");});
test("kvalitatív -> kvalitatív", function() {deepEqual( Stem("kvalitatív"), "kvalitatív");});
test("kvalitáshiány -> kvalitáshiány", function() {deepEqual( Stem("kvalitáshiány"), "kvalitáshiány");});
test("kvalitásokat -> kvalitás", function() {deepEqual( Stem("kvalitásokat"), "kvalitás");});
test("kvalitásokkal -> kvalitás", function() {deepEqual( Stem("kvalitásokkal"), "kvalitás");});
test("kvantumelmélet -> kvantumelmél", function() {deepEqual( Stem("kvantumelmélet"), "kvantumelmél");});
test("kvantummechanika -> kvantummechan", function() {deepEqual( Stem("kvantummechanika"), "kvantummechan");});
test("kvart -> kvar", function() {deepEqual( Stem("kvart"), "kvar");});
test("kvartnak -> kvart", function() {deepEqual( Stem("kvartnak"), "kvart");});
test("kvázi -> kváz", function() {deepEqual( Stem("kvázi"), "kváz");});
test("kváziszabványok -> kváziszabvány", function() {deepEqual( Stem("kváziszabványok"), "kváziszabvány");});
test("kváziszabványokon -> kváziszabvány", function() {deepEqual( Stem("kváziszabványokon"), "kváziszabvány");});
test("kváziszabállyal -> kváziszabály", function() {deepEqual( Stem("kváziszabállyal"), "kváziszabály");});
test("kvízjátékokban -> kvízjáték", function() {deepEqual( Stem("kvízjátékokban"), "kvízjáték");});
test("kvótabejegyzés -> kvótabejegyzés", function() {deepEqual( Stem("kvótabejegyzés"), "kvótabejegyzés");});
test("kvótabejegyzéseit -> kvótabejegyzés", function() {deepEqual( Stem("kvótabejegyzéseit"), "kvótabejegyzés");});
test("kvótabejegyzések -> kvótabejegyzés", function() {deepEqual( Stem("kvótabejegyzések"), "kvótabejegyzés");});
test("kvótabeállítás -> kvótabeállítás", function() {deepEqual( Stem("kvótabeállítás"), "kvótabeállítás");});
test("kvótabeállítást -> kvótabeállítás", function() {deepEqual( Stem("kvótabeállítást"), "kvótabeállítás");});
test("kvótakezelés -> kvótakezelés", function() {deepEqual( Stem("kvótakezelés"), "kvótakezelés");});
test("kvótakezelésre -> kvótakezelés", function() {deepEqual( Stem("kvótakezelésre"), "kvótakezelés");});
test("kvótakezelést -> kvótakezelés", function() {deepEqual( Stem("kvótakezelést"), "kvótakezelés");});
test("kvótakorlátozást -> kvótakorlátozás", function() {deepEqual( Stem("kvótakorlátozást"), "kvótakorlátozás");});
test("kvótarendszer -> kvótarendszer", function() {deepEqual( Stem("kvótarendszer"), "kvótarendszer");});
test("kvótához -> kvót", function() {deepEqual( Stem("kvótához"), "kvót");});
test("kvóta -> kvót", function() {deepEqual( Stem("kvóta"), "kvót");});
test("kvótája -> kvótá", function() {deepEqual( Stem("kvótája"), "kvótá");});
test("kvótájából -> kvótá", function() {deepEqual( Stem("kvótájából"), "kvótá");});
test("kvótáját -> kvótá", function() {deepEqual( Stem("kvótáját"), "kvótá");});
test("kvóták -> kvóta", function() {deepEqual( Stem("kvóták"), "kvóta");});
test("kvótákat -> kvóta", function() {deepEqual( Stem("kvótákat"), "kvóta");});
test("kvótákkal -> kvóta", function() {deepEqual( Stem("kvótákkal"), "kvóta");});
test("kvótát -> kvót", function() {deepEqual( Stem("kvótát"), "kvót");});
test("kymriül -> kymri", function() {deepEqual( Stem("kymriül"), "kymri");});
test("ká -> ká", function() {deepEqual( Stem("ká"), "ká");});
test("kába -> ká", function() {deepEqual( Stem("kába"), "ká");});
test("kábelcsatornát -> kábelcsatorn", function() {deepEqual( Stem("kábelcsatornát"), "kábelcsatorn");});
test("kábelek -> kábel", function() {deepEqual( Stem("kábelek"), "kábel");});
test("kábel -> kábel", function() {deepEqual( Stem("kábel"), "kábel");});
test("kábeleket -> kábel", function() {deepEqual( Stem("kábeleket"), "kábel");});
test("kábelekig -> kábel", function() {deepEqual( Stem("kábelekig"), "kábel");});
test("kábelekkel -> kábel", function() {deepEqual( Stem("kábelekkel"), "kábel");});
test("kábelen -> kábel", function() {deepEqual( Stem("kábelen"), "kábel");});
test("kábellel -> kábel", function() {deepEqual( Stem("kábellel"), "kábel");});
test("kábelre -> kábel", function() {deepEqual( Stem("kábelre"), "kábel");});
test("kábelt -> kábel", function() {deepEqual( Stem("kábelt"), "kábel");});
test("kábeles -> kábeles", function() {deepEqual( Stem("kábeles"), "kábeles");});
test("kábelezve -> kábelezv", function() {deepEqual( Stem("kábelezve"), "kábelezv");});
test("kábelezési -> kábelezés", function() {deepEqual( Stem("kábelezési"), "kábelezés");});
test("kábelezést -> kábelezés", function() {deepEqual( Stem("kábelezést"), "kábelezés");});
test("kábelezés -> kábelezés", function() {deepEqual( Stem("kábelezés"), "kábelezés");});
test("kábelhálózat -> kábelhálóz", function() {deepEqual( Stem("kábelhálózat"), "kábelhálóz");});
test("kábelhálózatok -> kábelhálózat", function() {deepEqual( Stem("kábelhálózatok"), "kábelhálózat");});
test("kábelhálózatokra -> kábelhálózat", function() {deepEqual( Stem("kábelhálózatokra"), "kábelhálózat");});
test("kábelhálózatot -> kábelhálózat", function() {deepEqual( Stem("kábelhálózatot"), "kábelhálózat");});
test("kábelinfrastruktúrája -> kábelinfrastruktúrá", function() {deepEqual( Stem("kábelinfrastruktúrája"), "kábelinfrastruktúrá");});
test("kábelkapcsolatot -> kábelkapcsolat", function() {deepEqual( Stem("kábelkapcsolatot"), "kábelkapcsolat");});
test("kábelkoncentrátort -> kábelkoncentrátor", function() {deepEqual( Stem("kábelkoncentrátort"), "kábelkoncentrátor");});
test("kábelmodem -> kábelmod", function() {deepEqual( Stem("kábelmodem"), "kábelmod");});
test("kábelszakaszt -> kábelszakasz", function() {deepEqual( Stem("kábelszakaszt"), "kábelszakasz");});
test("kábelszervezet -> kábelszervez", function() {deepEqual( Stem("kábelszervezet"), "kábelszervez");});
test("kábelszervezetek -> kábelszervezet", function() {deepEqual( Stem("kábelszervezetek"), "kábelszervezet");});
test("kábelszervezeteket -> kábelszervezet", function() {deepEqual( Stem("kábelszervezeteket"), "kábelszervezet");});
test("kábeltelevízió -> kábeltelevízió", function() {deepEqual( Stem("kábeltelevízió"), "kábeltelevízió");});
test("kábeltelevízióval -> kábeltelevízió", function() {deepEqual( Stem("kábeltelevízióval"), "kábeltelevízió");});
test("kábeltelevíziós -> kábeltelevíziós", function() {deepEqual( Stem("kábeltelevíziós"), "kábeltelevíziós");});
test("kábeltelvízió-piacot -> kábeltelvízió-piac", function() {deepEqual( Stem("kábeltelvízió-piacot"), "kábeltelvízió-piac");});
test("kábeltársaságok -> kábeltársaság", function() {deepEqual( Stem("kábeltársaságok"), "kábeltársaság");});
test("kábeltársaságokra -> kábeltársaság", function() {deepEqual( Stem("kábeltársaságokra"), "kábeltársaság");});
test("kábeltévé -> kábelt", function() {deepEqual( Stem("kábeltévé"), "kábelt");});
test("kábulatba -> kábulat", function() {deepEqual( Stem("kábulatba"), "kábulat");});
test("kábulatban -> kábulat", function() {deepEqual( Stem("kábulatban"), "kábulat");});
test("kábulati -> kábulat", function() {deepEqual( Stem("kábulati"), "kábulat");});
test("kábítószer-csempészést -> kábítószer-csempészés", function() {deepEqual( Stem("kábítószer-csempészést"), "kábítószer-csempészés");});
test("kábítószer-elvonás -> kábítószer-elvonás", function() {deepEqual( Stem("kábítószer-elvonás"), "kábítószer-elvonás");});
test("kábítószer-kereskedelemből -> kábítószer-kereskedel", function() {deepEqual( Stem("kábítószer-kereskedelemből"), "kábítószer-kereskedel");});
test("kábítószer-kereskedelemmel -> kábítószer-kereskedel", function() {deepEqual( Stem("kábítószer-kereskedelemmel"), "kábítószer-kereskedel");});
test("kábítószer-kereskedők -> kábítószer-kereskedő", function() {deepEqual( Stem("kábítószer-kereskedők"), "kábítószer-kereskedő");});
test("kábítószer-kereskedőt -> kábítószer-kereskedő", function() {deepEqual( Stem("kábítószer-kereskedőt"), "kábítószer-kereskedő");});
test("kábítószer-árusítással -> kábítószer-árusítás", function() {deepEqual( Stem("kábítószer-árusítással"), "kábítószer-árusítás");});
test("kábítószerek -> kábítószer", function() {deepEqual( Stem("kábítószerek"), "kábítószer");});
test("kábítószer -> kábítószer", function() {deepEqual( Stem("kábítószer"), "kábítószer");});
test("kábítószerekben -> kábítószer", function() {deepEqual( Stem("kábítószerekben"), "kábítószer");});
test("kábítószereket -> kábítószer", function() {deepEqual( Stem("kábítószereket"), "kábítószer");});
test("kábítószerre -> kábítószer", function() {deepEqual( Stem("kábítószerre"), "kábítószer");});
test("kábítószerrel -> kábítószer", function() {deepEqual( Stem("kábítószerrel"), "kábítószer");});
test("kábítószert -> kábítószer", function() {deepEqual( Stem("kábítószert"), "kábítószer");});
test("kábítószerektől -> kábítószer", function() {deepEqual( Stem("kábítószerektől"), "kábítószer");});
test("kábítószeres -> kábítószeres", function() {deepEqual( Stem("kábítószeres"), "kábítószeres");});
test("kábítószerezne -> kábítószerezn", function() {deepEqual( Stem("kábítószerezne"), "kábítószerezn");});
test("kád -> kád", function() {deepEqual( Stem("kád"), "kád");});
test("kádban -> kád", function() {deepEqual( Stem("kádban"), "kád");});
test("kádereket -> káder", function() {deepEqual( Stem("kádereket"), "káder");});
test("kádári -> kádár", function() {deepEqual( Stem("kádári"), "kádár");});
test("káli -> kál", function() {deepEqual( Stem("káli"), "kál");});
test("kálváriai -> kálvári", function() {deepEqual( Stem("kálváriai"), "kálvári");});
test("kálváriájára -> kálváriá", function() {deepEqual( Stem("kálváriájára"), "kálváriá");});
test("kálvária -> kálvár", function() {deepEqual( Stem("kálvária"), "kálvár");});
test("kályhagyártó -> kályhagyártó", function() {deepEqual( Stem("kályhagyártó"), "kályhagyártó");});
test("kályhába -> kályh", function() {deepEqual( Stem("kályhába"), "kályh");});
test("kályhából -> kályh", function() {deepEqual( Stem("kályhából"), "kályh");});
test("kályhához -> kályh", function() {deepEqual( Stem("kályhához"), "kályh");});
test("kályhák -> kályha", function() {deepEqual( Stem("kályhák"), "kályha");});
test("kályhákat -> kályha", function() {deepEqual( Stem("kályhákat"), "kályha");});
test("kályhával -> kályh", function() {deepEqual( Stem("kályhával"), "kályh");});
test("kánikulában -> kánikul", function() {deepEqual( Stem("kánikulában"), "kánikul");});
test("kánonképző -> kánonképző", function() {deepEqual( Stem("kánonképző"), "kánonképző");});
test("kánont -> kánon", function() {deepEqual( Stem("kánont"), "kánon");});
test("káosz -> káosz", function() {deepEqual( Stem("káosz"), "káosz");});
test("káoszban -> káosz", function() {deepEqual( Stem("káoszban"), "káosz");});
test("káoszból -> káosz", function() {deepEqual( Stem("káoszból"), "káosz");});
test("káoszában -> káosz", function() {deepEqual( Stem("káoszában"), "káosz");});
test("káoszelmélet -> káoszelmél", function() {deepEqual( Stem("káoszelmélet"), "káoszelmél");});
test("káplán -> kápl", function() {deepEqual( Stem("káplán"), "kápl");});
test("kápolna -> kápoln", function() {deepEqual( Stem("kápolna"), "kápoln");});
test("kápolnába -> kápoln", function() {deepEqual( Stem("kápolnába"), "kápoln");});
test("kápolnában -> kápoln", function() {deepEqual( Stem("kápolnában"), "kápoln");});
test("kápolnához -> kápoln", function() {deepEqual( Stem("kápolnához"), "kápoln");});
test("kápolnája -> kápolná", function() {deepEqual( Stem("kápolnája"), "kápolná");});
test("kápolnáját -> kápolná", function() {deepEqual( Stem("kápolnáját"), "kápolná");});
test("kápolnánál -> kápoln", function() {deepEqual( Stem("kápolnánál"), "kápoln");});
test("káposzta -> káposzt", function() {deepEqual( Stem("káposzta"), "káposzt");});
test("káposztacsutkát -> káposztacsut", function() {deepEqual( Stem("káposztacsutkát"), "káposztacsut");});
test("káposztarepce -> káposztarepc", function() {deepEqual( Stem("káposztarepce"), "káposztarepc");});
test("káposztatorzsákat -> káposztatorzsa", function() {deepEqual( Stem("káposztatorzsákat"), "káposztatorzsa");});
test("káprászott -> káprászot", function() {deepEqual( Stem("káprászott"), "káprászot");});
test("káprázat -> kápráz", function() {deepEqual( Stem("káprázat"), "kápráz");});
test("káprázatos -> káprázatos", function() {deepEqual( Stem("káprázatos"), "káprázatos");});
test("kápráztatták -> kápráztatta", function() {deepEqual( Stem("kápráztatták"), "kápráztatta");});
test("káprázó -> káprázó", function() {deepEqual( Stem("káprázó"), "káprázó");});
test("kárbaveszte -> kárbaveszt", function() {deepEqual( Stem("kárbaveszte"), "kárbaveszt");});
test("kárelhárítás -> kárelhárítás", function() {deepEqual( Stem("kárelhárítás"), "kárelhárítás");});
test("kárelhárításra -> kárelhárítás", function() {deepEqual( Stem("kárelhárításra"), "kárelhárítás");});
test("kárhozat -> kárhoz", function() {deepEqual( Stem("kárhozat"), "kárhoz");});
test("kárhozatra -> kárhozat", function() {deepEqual( Stem("kárhozatra"), "kárhozat");});
test("kárhozhatják -> kárhozhatja", function() {deepEqual( Stem("kárhozhatják"), "kárhozhatja");});
test("kárhoztatnak -> kárhoztat", function() {deepEqual( Stem("kárhoztatnak"), "kárhoztat");});
test("kárhoztatott -> kárhoztatot", function() {deepEqual( Stem("kárhoztatott"), "kárhoztatot");});
test("kárigény -> kárigény", function() {deepEqual( Stem("kárigény"), "kárigény");});
test("kármentesítés -> kármentesítés", function() {deepEqual( Stem("kármentesítés"), "kármentesítés");});
test("kármentés -> kármentés", function() {deepEqual( Stem("kármentés"), "kármentés");});
test("kárnak -> kár", function() {deepEqual( Stem("kárnak"), "kár");});
test("károk -> kár", function() {deepEqual( Stem("károk"), "kár");});
test("károkat -> kár", function() {deepEqual( Stem("károkat"), "kár");});
test("károkkal -> kár", function() {deepEqual( Stem("károkkal"), "kár");});
test("károknál -> kár", function() {deepEqual( Stem("károknál"), "kár");});
test("kár -> kár", function() {deepEqual( Stem("kár"), "kár");});
test("kára -> ká", function() {deepEqual( Stem("kára"), "ká");});
test("káraikat -> kár", function() {deepEqual( Stem("káraikat"), "kár");});
test("kárba -> kár", function() {deepEqual( Stem("kárba"), "kár");});
test("károkról -> kár", function() {deepEqual( Stem("károkról"), "kár");});
test("károkért -> kár", function() {deepEqual( Stem("károkért"), "kár");});
test("káromon -> kár", function() {deepEqual( Stem("káromon"), "kár");});
test("kárra -> kár", function() {deepEqual( Stem("kárra"), "kár");});
test("kárral -> kár", function() {deepEqual( Stem("kárral"), "kár");});
test("kárról -> kár", function() {deepEqual( Stem("kárról"), "kár");});
test("kárt -> kár", function() {deepEqual( Stem("kárt"), "kár");});
test("kártól -> kár", function() {deepEqual( Stem("kártól"), "kár");});
test("káruk -> kár", function() {deepEqual( Stem("káruk"), "kár");});
test("kárukon -> kár", function() {deepEqual( Stem("kárukon"), "kár");});
test("kárunkat -> kár", function() {deepEqual( Stem("kárunkat"), "kár");});
test("kárunkra -> kár", function() {deepEqual( Stem("kárunkra"), "kár");});
test("kárából -> kár", function() {deepEqual( Stem("kárából"), "kár");});
test("kárának -> kár", function() {deepEqual( Stem("kárának"), "kár");});
test("kárára -> kár", function() {deepEqual( Stem("kárára"), "kár");});
test("kárát -> kár", function() {deepEqual( Stem("kárát"), "kár");});
test("kárért -> kár", function() {deepEqual( Stem("kárért"), "kár");});
test("károkozás -> károkozás", function() {deepEqual( Stem("károkozás"), "károkozás");});
test("károkozások -> károkozás", function() {deepEqual( Stem("károkozások"), "károkozás");});
test("kártyához -> kárty", function() {deepEqual( Stem("kártyához"), "kárty");});
test("kártyáikat -> kártya", function() {deepEqual( Stem("kártyáikat"), "kártya");});
test("kártyáit -> kártya", function() {deepEqual( Stem("kártyáit"), "kártya");});
test("kártyája -> kártyá", function() {deepEqual( Stem("kártyája"), "kártyá");});
test("kártyájukon -> kártya", function() {deepEqual( Stem("kártyájukon"), "kártya");});
test("kártyáját -> kártyá", function() {deepEqual( Stem("kártyáját"), "kártyá");});
test("kártyák -> kártya", function() {deepEqual( Stem("kártyák"), "kártya");});
test("kártyákat -> kártya", function() {deepEqual( Stem("kártyákat"), "kártya");});
test("kártyákból -> kártya", function() {deepEqual( Stem("kártyákból"), "kártya");});
test("kártyákkal -> kártya", function() {deepEqual( Stem("kártyákkal"), "kártya");});
test("kártyáknak -> kártya", function() {deepEqual( Stem("kártyáknak"), "kártya");});
test("kártyáknál -> kártya", function() {deepEqual( Stem("kártyáknál"), "kártya");});
test("kártyákra -> kártya", function() {deepEqual( Stem("kártyákra"), "kártya");});
test("kártyáktól -> kártya", function() {deepEqual( Stem("kártyáktól"), "kártya");});
test("kártyán -> kárty", function() {deepEqual( Stem("kártyán"), "kárty");});
test("kártyának -> kárty", function() {deepEqual( Stem("kártyának"), "kárty");});
test("kártyánkat -> kártya", function() {deepEqual( Stem("kártyánkat"), "kártya");});
test("kártyánál -> kárty", function() {deepEqual( Stem("kártyánál"), "kárty");});
test("kártyára -> kárty", function() {deepEqual( Stem("kártyára"), "kárty");});
test("kártyáról -> kárty", function() {deepEqual( Stem("kártyáról"), "kárty");});
test("kártyát -> kárty", function() {deepEqual( Stem("kártyát"), "kárty");});
test("kártyával -> kárty", function() {deepEqual( Stem("kártyával"), "kárty");});
test("kártyás -> kártyás", function() {deepEqual( Stem("kártyás"), "kártyás");});
test("kártyáznak -> kártyáz", function() {deepEqual( Stem("kártyáznak"), "kártyáz");});
test("kártyázni -> kártyázn", function() {deepEqual( Stem("kártyázni"), "kártyázn");});
test("kártyáztak -> kártyázt", function() {deepEqual( Stem("kártyáztak"), "kártyázt");});
test("kártyáztunk -> kártyázt", function() {deepEqual( Stem("kártyáztunk"), "kártyázt");});
test("kártyázás -> kártyázás", function() {deepEqual( Stem("kártyázás"), "kártyázás");});
test("kártyázásnál -> kártyázás", function() {deepEqual( Stem("kártyázásnál"), "kártyázás");});
test("kártékony -> kártékony", function() {deepEqual( Stem("kártékony"), "kártékony");});
test("kártérítési -> kártérítés", function() {deepEqual( Stem("kártérítési"), "kártérítés");});
test("kártérítésnek -> kártérítés", function() {deepEqual( Stem("kártérítésnek"), "kártérítés");});
test("kártérítést -> kártérítés", function() {deepEqual( Stem("kártérítést"), "kártérítés");});
test("kártérítés -> kártérítés", function() {deepEqual( Stem("kártérítés"), "kártérítés");});
test("kártérítéshez -> kártérítés", function() {deepEqual( Stem("kártérítéshez"), "kártérítés");});
test("kártétel -> kártétel", function() {deepEqual( Stem("kártétel"), "kártétel");});
test("kártétele -> kártétel", function() {deepEqual( Stem("kártétele"), "kártétel");});
test("kártételére -> kártétel", function() {deepEqual( Stem("kártételére"), "kártétel");});
test("kártételt -> kártétel", function() {deepEqual( Stem("kártételt"), "kártétel");});
test("kárvallott -> kárvallot", function() {deepEqual( Stem("kárvallott"), "kárvallot");});
test("kárvallottja -> kárvallott", function() {deepEqual( Stem("kárvallottja"), "kárvallott");});
test("kárász -> kárász", function() {deepEqual( Stem("kárász"), "kárász");});
test("kárászt -> kárász", function() {deepEqual( Stem("kárászt"), "kárász");});
test("kárörvendő -> kárörvendő", function() {deepEqual( Stem("kárörvendő"), "kárörvendő");});
test("kátránymakadámot -> kátránymakada", function() {deepEqual( Stem("kátránymakadámot"), "kátránymakada");});
test("kátyákkal -> kátya", function() {deepEqual( Stem("kátyákkal"), "kátya");});
test("kátyúból -> kátyú", function() {deepEqual( Stem("kátyúból"), "kátyú");});
test("kávásfűrészt -> kávásfűrész", function() {deepEqual( Stem("kávásfűrészt"), "kávásfűrész");});
test("kávéautomatával -> kávéautomat", function() {deepEqual( Stem("kávéautomatával"), "kávéautomat");});
test("kávébabrészvénynek -> kávébabrészvény", function() {deepEqual( Stem("kávébabrészvénynek"), "kávébabrészvény");});
test("kávébárjaiban -> kávébár", function() {deepEqual( Stem("kávébárjaiban"), "kávébár");});
test("kávébárjait -> kávébár", function() {deepEqual( Stem("kávébárjait"), "kávébár");});
test("kávébárjaival -> kávébár", function() {deepEqual( Stem("kávébárjaival"), "kávébár");});
test("kávébárját -> kávébár", function() {deepEqual( Stem("kávébárját"), "kávébár");});
test("kávébárláncot -> kávébárlánc", function() {deepEqual( Stem("kávébárláncot"), "kávébárlánc");});
test("kávébárláncát -> kávébárlánc", function() {deepEqual( Stem("kávébárláncát"), "kávébárlánc");});
test("kávébárok -> kávébár", function() {deepEqual( Stem("kávébárok"), "kávébár");});
test("kávébárt -> kávébár", function() {deepEqual( Stem("kávébárt"), "kávébár");});
test("kávéeladás -> kávéeladás", function() {deepEqual( Stem("kávéeladás"), "kávéeladás");});
test("kávéfajtáit -> kávéfajta", function() {deepEqual( Stem("kávéfajtáit"), "kávéfajta");});
test("kávéhoz -> káv", function() {deepEqual( Stem("kávéhoz"), "káv");});
test("kávé -> ká", function() {deepEqual( Stem("kávé"), "ká");});
test("kávéja -> kávé", function() {deepEqual( Stem("kávéja"), "kávé");});
test("kávéját -> kávé", function() {deepEqual( Stem("kávéját"), "kávé");});
test("kávénak -> káv", function() {deepEqual( Stem("kávénak"), "káv");});
test("kávéra -> káv", function() {deepEqual( Stem("kávéra"), "káv");});
test("kávét -> káv", function() {deepEqual( Stem("kávét"), "káv");});
test("kávéval -> káv", function() {deepEqual( Stem("kávéval"), "káv");});
test("kávéház -> kávéház", function() {deepEqual( Stem("kávéház"), "kávéház");});
test("kávéházak -> kávéház", function() {deepEqual( Stem("kávéházak"), "kávéház");});
test("kávéházakban -> kávéház", function() {deepEqual( Stem("kávéházakban"), "kávéház");});
test("kávéházat -> kávéház", function() {deepEqual( Stem("kávéházat"), "kávéház");});
test("kávéházba -> kávéház", function() {deepEqual( Stem("kávéházba"), "kávéház");});
test("kávéházban -> kávéház", function() {deepEqual( Stem("kávéházban"), "kávéház");});
test("kávéházból -> kávéház", function() {deepEqual( Stem("kávéházból"), "kávéház");});
test("kávéházon -> kávéház", function() {deepEqual( Stem("kávéházon"), "kávéház");});
test("kávéházzal -> kávéház", function() {deepEqual( Stem("kávéházzal"), "kávéház");});
test("kávéházi -> kávéház", function() {deepEqual( Stem("kávéházi"), "kávéház");});
test("kávéital -> kávéital", function() {deepEqual( Stem("kávéital"), "kávéital");});
test("kávéivónak -> kávéivó", function() {deepEqual( Stem("kávéivónak"), "kávéivó");});
test("kávékereskedő -> kávékereskedő", function() {deepEqual( Stem("kávékereskedő"), "kávékereskedő");});
test("kávékínálat -> kávékínál", function() {deepEqual( Stem("kávékínálat"), "kávékínál");});
test("kávéskanálnyi -> kávéskanálny", function() {deepEqual( Stem("kávéskanálnyi"), "kávéskanálny");});
test("kávészünetre -> kávészünet", function() {deepEqual( Stem("kávészünetre"), "kávészünet");});
test("kávéznak -> kávéz", function() {deepEqual( Stem("kávéznak"), "kávéz");});
test("kávézásból -> kávézás", function() {deepEqual( Stem("kávézásból"), "kávézás");});
test("kávézási -> kávézás", function() {deepEqual( Stem("kávézási"), "kávézás");});
test("kávézó -> kávézó", function() {deepEqual( Stem("kávézó"), "kávézó");});
test("kávézóba -> kávézó", function() {deepEqual( Stem("kávézóba"), "kávézó");});
test("kávézóban -> kávézó", function() {deepEqual( Stem("kávézóban"), "kávézó");});
test("kávézóikról -> kávézó", function() {deepEqual( Stem("kávézóikról"), "kávézó");});
test("kávézók -> kávézó", function() {deepEqual( Stem("kávézók"), "kávézó");});
test("kávézót -> kávézó", function() {deepEqual( Stem("kávézót"), "kávézó");});
test("kéjes -> kéjes", function() {deepEqual( Stem("kéjes"), "kéjes");});
test("kéjesen -> kéjes", function() {deepEqual( Stem("kéjesen"), "kéjes");});
test("kéjgáztól -> kéjgáz", function() {deepEqual( Stem("kéjgáztól"), "kéjgáz");});
test("kéjjel -> kéj", function() {deepEqual( Stem("kéjjel"), "kéj");});
test("kéjnő -> kéjnő", function() {deepEqual( Stem("kéjnő"), "kéjnő");});
test("kéjvágyó -> kéjvágyó", function() {deepEqual( Stem("kéjvágyó"), "kéjvágyó");});
test("kék-lila -> kék-lil", function() {deepEqual( Stem("kék-lila"), "kék-lil");});
test("kékek -> kék", function() {deepEqual( Stem("kékek"), "kék");});
test("kék -> kék", function() {deepEqual( Stem("kék"), "kék");});
test("kéken -> kék", function() {deepEqual( Stem("kéken"), "kék");});
test("kékes -> kékes", function() {deepEqual( Stem("kékes"), "kékes");});
test("kékestetői -> kékestető", function() {deepEqual( Stem("kékestetői"), "kékestető");});
test("kékesvörös -> kékesvörös", function() {deepEqual( Stem("kékesvörös"), "kékesvörös");});
test("kékeszöld -> kékeszöl", function() {deepEqual( Stem("kékeszöld"), "kékeszöl");});
test("kékfestő -> kékfestő", function() {deepEqual( Stem("kékfestő"), "kékfestő");});
test("kékgallérosok -> kékgalléros", function() {deepEqual( Stem("kékgallérosok"), "kékgalléros");});
test("kékhas -> kékhas", function() {deepEqual( Stem("kékhas"), "kékhas");});
test("kéklett -> kéklet", function() {deepEqual( Stem("kéklett"), "kéklet");});
test("kéklik -> kékl", function() {deepEqual( Stem("kéklik"), "kékl");});
test("kéknyelűt -> kéknyelű", function() {deepEqual( Stem("kéknyelűt"), "kéknyelű");});
test("kékszalaggal -> kékszalag", function() {deepEqual( Stem("kékszalaggal"), "kékszalag");});
test("kékségét -> kékség", function() {deepEqual( Stem("kékségét"), "kékség");});
test("kékült -> kékül", function() {deepEqual( Stem("kékült"), "kékül");});
test("kél -> kél", function() {deepEqual( Stem("kél"), "kél");});
test("kém -> kém", function() {deepEqual( Stem("kém"), "kém");});
test("kémek -> kém", function() {deepEqual( Stem("kémek"), "kém");});
test("kémeket -> kém", function() {deepEqual( Stem("kémeket"), "kém");});
test("kémje -> kém", function() {deepEqual( Stem("kémje"), "kém");});
test("kémhatást -> kémhatás", function() {deepEqual( Stem("kémhatást"), "kémhatás");});
test("kémhistóriájukhoz -> kémhistória", function() {deepEqual( Stem("kémhistóriájukhoz"), "kémhistória");});
test("kémiai -> kémi", function() {deepEqual( Stem("kémiai"), "kémi");});
test("kémikus -> kémikus", function() {deepEqual( Stem("kémikus"), "kémikus");});
test("kémián -> kém", function() {deepEqual( Stem("kémián"), "kém");});
test("kémia -> kém", function() {deepEqual( Stem("kémia"), "kém");});
test("kémiát -> kém", function() {deepEqual( Stem("kémiát"), "kém");});
test("kémkedik -> kémked", function() {deepEqual( Stem("kémkedik"), "kémked");});
test("kémkedjenek -> kémked", function() {deepEqual( Stem("kémkedjenek"), "kémked");});
test("kémkedni -> kémkedn", function() {deepEqual( Stem("kémkedni"), "kémkedn");});
test("kémkedtek -> kémkedt", function() {deepEqual( Stem("kémkedtek"), "kémkedt");});
test("kémkedés -> kémkedés", function() {deepEqual( Stem("kémkedés"), "kémkedés");});
test("kémkedésre -> kémkedés", function() {deepEqual( Stem("kémkedésre"), "kémkedés");});
test("kémkedéssel -> kémkedés", function() {deepEqual( Stem("kémkedéssel"), "kémkedés");});
test("kémkedő -> kémkedő", function() {deepEqual( Stem("kémkedő"), "kémkedő");});
test("kémleltem -> kémlelt", function() {deepEqual( Stem("kémleltem"), "kémlelt");});
test("kémleltük -> kémlelt", function() {deepEqual( Stem("kémleltük"), "kémlelt");});
test("kémlelőlyukon -> kémlelőly", function() {deepEqual( Stem("kémlelőlyukon"), "kémlelőly");});
test("kémműholdak -> kémműhold", function() {deepEqual( Stem("kémműholdak"), "kémműhold");});
test("kémnő -> kémnő", function() {deepEqual( Stem("kémnő"), "kémnő");});
test("kémények -> kémény", function() {deepEqual( Stem("kémények"), "kémény");});
test("kéményeken -> kémény", function() {deepEqual( Stem("kéményeken"), "kémény");});
test("kéményre -> kémény", function() {deepEqual( Stem("kéményre"), "kémény");});
test("kéne -> kén", function() {deepEqual( Stem("kéne"), "kén");});
test("kénsavat -> kénsav", function() {deepEqual( Stem("kénsavat"), "kénsav");});
test("kéntelenítőt -> kéntelenítő", function() {deepEqual( Stem("kéntelenítőt"), "kéntelenítő");});
test("kényelembe -> kényel", function() {deepEqual( Stem("kényelembe"), "kényel");});
test("kényelemben -> kényel", function() {deepEqual( Stem("kényelemben"), "kényel");});
test("kényelemmel -> kényel", function() {deepEqual( Stem("kényelemmel"), "kényel");});
test("kényelemnek -> kényel", function() {deepEqual( Stem("kényelemnek"), "kényel");});
test("kényelmet -> kényel", function() {deepEqual( Stem("kényelmet"), "kényel");});
test("kényelmét -> kényelm", function() {deepEqual( Stem("kényelmét"), "kényelm");});
test("kényelmével -> kényelm", function() {deepEqual( Stem("kényelmével"), "kényelm");});
test("kényelmünket -> kényelm", function() {deepEqual( Stem("kényelmünket"), "kényelm");});
test("kényelmes -> kényelmes", function() {deepEqual( Stem("kényelmes"), "kényelmes");});
test("kényelmesebb -> kényelmesebb", function() {deepEqual( Stem("kényelmesebb"), "kényelmesebb");});
test("kényelmesebben -> kényelmeseb", function() {deepEqual( Stem("kényelmesebben"), "kényelmeseb");});
test("kényelmesebbé -> kényelmeseb", function() {deepEqual( Stem("kényelmesebbé"), "kényelmeseb");});
test("kényelmesek -> kényelmes", function() {deepEqual( Stem("kényelmesek"), "kényelmes");});
test("kényelmesen -> kényelmes", function() {deepEqual( Stem("kényelmesen"), "kényelmes");});
test("kényelmesnek -> kényelmes", function() {deepEqual( Stem("kényelmesnek"), "kényelmes");});
test("kényelmessé -> kényelmes", function() {deepEqual( Stem("kényelmessé"), "kényelmes");});
test("kényelmességgel -> kényelmesség", function() {deepEqual( Stem("kényelmességgel"), "kényelmesség");});
test("kényelmetlen -> kényelmetl", function() {deepEqual( Stem("kényelmetlen"), "kényelmetl");});
test("kényelmetlenebb -> kényelmetlenebb", function() {deepEqual( Stem("kényelmetlenebb"), "kényelmetlenebb");});
test("kényelmetlenek -> kényelmetl", function() {deepEqual( Stem("kényelmetlenek"), "kényelmetl");});
test("kényelmetlennek -> kényelmetlen", function() {deepEqual( Stem("kényelmetlennek"), "kényelmetlen");});
test("kényelmetlenül -> kényelmetlen", function() {deepEqual( Stem("kényelmetlenül"), "kényelmetlen");});
test("kényelmetlenségtől -> kényelmetlenség", function() {deepEqual( Stem("kényelmetlenségtől"), "kényelmetlenség");});
test("kényelmi -> kényelm", function() {deepEqual( Stem("kényelmi"), "kényelm");});
test("kényes -> kényes", function() {deepEqual( Stem("kényes"), "kényes");});
test("kényesebb -> kényesebb", function() {deepEqual( Stem("kényesebb"), "kényesebb");});
test("kényeskedett -> kényeskedet", function() {deepEqual( Stem("kényeskedett"), "kényeskedet");});
test("kényeztetni -> kényeztetn", function() {deepEqual( Stem("kényeztetni"), "kényeztetn");});
test("kényeztetném -> kényeztetne", function() {deepEqual( Stem("kényeztetném"), "kényeztetne");});
test("kényeztettek -> kényeztett", function() {deepEqual( Stem("kényeztettek"), "kényeztett");});
test("kényeztetve -> kényeztetv", function() {deepEqual( Stem("kényeztetve"), "kényeztetv");});
test("kényeztetésében -> kényeztetés", function() {deepEqual( Stem("kényeztetésében"), "kényeztetés");});
test("kényeztetésére -> kényeztetés", function() {deepEqual( Stem("kényeztetésére"), "kényeztetés");});
test("kényeztető -> kényeztető", function() {deepEqual( Stem("kényeztető"), "kényeztető");});
test("kényszer-társszerzői -> kényszer-társszerző", function() {deepEqual( Stem("kényszer-társszerzői"), "kényszer-társszerző");});
test("kényszerből -> kényszer", function() {deepEqual( Stem("kényszerből"), "kényszer");});
test("kényszer -> kényszer", function() {deepEqual( Stem("kényszer"), "kényszer");});
test("kényszere -> kénysz", function() {deepEqual( Stem("kényszere"), "kénysz");});
test("kényszerként -> kényszer", function() {deepEqual( Stem("kényszerként"), "kényszer");});
test("kényszernek -> kényszer", function() {deepEqual( Stem("kényszernek"), "kényszer");});
test("kényszerre -> kényszer", function() {deepEqual( Stem("kényszerre"), "kényszer");});
test("kényszert -> kényszer", function() {deepEqual( Stem("kényszert"), "kényszer");});
test("kényszertől -> kényszer", function() {deepEqual( Stem("kényszertől"), "kényszer");});
test("kényszerhelyzetek -> kényszerhelyzet", function() {deepEqual( Stem("kényszerhelyzetek"), "kényszerhelyzet");});
test("kényszerintézkedéseket -> kényszerintézkedés", function() {deepEqual( Stem("kényszerintézkedéseket"), "kényszerintézkedés");});
test("kényszerkielégítéses -> kényszerkielégítéses", function() {deepEqual( Stem("kényszerkielégítéses"), "kényszerkielégítéses");});
test("kényszerleszállást -> kényszerleszállás", function() {deepEqual( Stem("kényszerleszállást"), "kényszerleszállás");});
test("kényszerleállás -> kényszerleállás", function() {deepEqual( Stem("kényszerleállás"), "kényszerleállás");});
test("kényszermegszűnésről -> kényszermegszűnés", function() {deepEqual( Stem("kényszermegszűnésről"), "kényszermegszűnés");});
test("kényszermunkatábor -> kényszermunkatábor", function() {deepEqual( Stem("kényszermunkatábor"), "kényszermunkatábor");});
test("kényszermunkatáborba -> kényszermunkatábor", function() {deepEqual( Stem("kényszermunkatáborba"), "kényszermunkatábor");});
test("kényszermunkatáborban -> kényszermunkatábor", function() {deepEqual( Stem("kényszermunkatáborban"), "kényszermunkatábor");});
test("kényszermunkatáborokba -> kényszermunkatábor", function() {deepEqual( Stem("kényszermunkatáborokba"), "kényszermunkatábor");});
test("kényszermunkatáborokban -> kényszermunkatábor", function() {deepEqual( Stem("kényszermunkatáborokban"), "kényszermunkatábor");});
test("kényszermunkatáborokról -> kényszermunkatábor", function() {deepEqual( Stem("kényszermunkatáborokról"), "kényszermunkatábor");});
test("kényszermunkában -> kényszermun", function() {deepEqual( Stem("kényszermunkában"), "kényszermun");});
test("kényszermunkást -> kényszermunkás", function() {deepEqual( Stem("kényszermunkást"), "kényszermunkás");});
test("kényszerpihenőn -> kényszerpihenő", function() {deepEqual( Stem("kényszerpihenőn"), "kényszerpihenő");});
test("kényszerpályákon -> kényszerpálya", function() {deepEqual( Stem("kényszerpályákon"), "kényszerpálya");});
test("kényszervállalkozók -> kényszervállalkozó", function() {deepEqual( Stem("kényszervállalkozók"), "kényszervállalkozó");});
test("kényszerátalakulási -> kényszerátalakulás", function() {deepEqual( Stem("kényszerátalakulási"), "kényszerátalakulás");});
test("kényszerátalakulásról -> kényszerátalakulás", function() {deepEqual( Stem("kényszerátalakulásról"), "kényszerátalakulás");});
test("kényszerátalakulás -> kényszerátalakulás", function() {deepEqual( Stem("kényszerátalakulás"), "kényszerátalakulás");});
test("kényszerátalakulást -> kényszerátalakulás", function() {deepEqual( Stem("kényszerátalakulást"), "kényszerátalakulás");});
test("kényszerérzettel -> kényszerérz", function() {deepEqual( Stem("kényszerérzettel"), "kényszerérz");});
test("kényszerít -> kényszerí", function() {deepEqual( Stem("kényszerít"), "kényszerí");});
test("kényszerítem -> kényszerít", function() {deepEqual( Stem("kényszerítem"), "kényszerít");});
test("kényszerítene -> kényszeríten", function() {deepEqual( Stem("kényszerítene"), "kényszeríten");});
test("kényszerítenek -> kényszerít", function() {deepEqual( Stem("kényszerítenek"), "kényszerít");});
test("kényszeríteni -> kényszeríten", function() {deepEqual( Stem("kényszeríteni"), "kényszeríten");});
test("kényszerítené -> kényszeríten", function() {deepEqual( Stem("kényszerítené"), "kényszeríten");});
test("kényszerítette -> kényszerített", function() {deepEqual( Stem("kényszerítette"), "kényszerített");});
test("kényszerítették -> kényszerítette", function() {deepEqual( Stem("kényszerítették"), "kényszerítette");});
test("kényszerített -> kényszerítet", function() {deepEqual( Stem("kényszerített"), "kényszerítet");});
test("kényszeríthet -> kényszeríth", function() {deepEqual( Stem("kényszeríthet"), "kényszeríth");});
test("kényszeríthető -> kényszeríthető", function() {deepEqual( Stem("kényszeríthető"), "kényszeríthető");});
test("kényszeríti -> kényszerít", function() {deepEqual( Stem("kényszeríti"), "kényszerít");});
test("kényszerítik -> kényszerít", function() {deepEqual( Stem("kényszerítik"), "kényszerít");});
test("kényszerítse -> kényszeríts", function() {deepEqual( Stem("kényszerítse"), "kényszeríts");});
test("kényszerítsen -> kényszeríts", function() {deepEqual( Stem("kényszerítsen"), "kényszeríts");});
test("kényszerítsék -> kényszerítse", function() {deepEqual( Stem("kényszerítsék"), "kényszerítse");});
test("kényszerítve -> kényszerítv", function() {deepEqual( Stem("kényszerítve"), "kényszerítv");});
test("kényszerítése -> kényszerítés", function() {deepEqual( Stem("kényszerítése"), "kényszerítés");});
test("kényszerítő -> kényszerítő", function() {deepEqual( Stem("kényszerítő"), "kényszerítő");});
test("kényszerű -> kényszerű", function() {deepEqual( Stem("kényszerű"), "kényszerű");});
test("kényszerűen -> kényszerű", function() {deepEqual( Stem("kényszerűen"), "kényszerű");});
test("kényszerűségből -> kényszerűség", function() {deepEqual( Stem("kényszerűségből"), "kényszerűség");});
test("kényszerülhet -> kényszerülh", function() {deepEqual( Stem("kényszerülhet"), "kényszerülh");});
test("kényszerült -> kényszerül", function() {deepEqual( Stem("kényszerült"), "kényszerül");});
test("kényszerültem -> kényszerült", function() {deepEqual( Stem("kényszerültem"), "kényszerült");});
test("kényszerül -> kényszer", function() {deepEqual( Stem("kényszerül"), "kényszer");});
test("kényszerültünk -> kényszerült", function() {deepEqual( Stem("kényszerültünk"), "kényszerült");});
test("kénytelen-kelletlen -> kénytelen-kelletl", function() {deepEqual( Stem("kénytelen-kelletlen"), "kénytelen-kelletl");});
test("kénytelenek -> kénytel", function() {deepEqual( Stem("kénytelenek"), "kénytel");});
test("kénytelen -> kénytel", function() {deepEqual( Stem("kénytelen"), "kénytel");});
test("képalkotás -> képalkotás", function() {deepEqual( Stem("képalkotás"), "képalkotás");});
test("képalkotóit -> képalkotó", function() {deepEqual( Stem("képalkotóit"), "képalkotó");});
test("képaláírások -> képaláírás", function() {deepEqual( Stem("képaláírások"), "képaláírás");});
test("képaláírással -> képaláírás", function() {deepEqual( Stem("képaláírással"), "képaláírás");});
test("képanyagban -> képanyag", function() {deepEqual( Stem("képanyagban"), "képanyag");});
test("képanyagot -> képanyag", function() {deepEqual( Stem("képanyagot"), "képanyag");});
test("képcsöves -> képcsöves", function() {deepEqual( Stem("képcsöves"), "képcsöves");});
test("képdigitalizáló -> képdigitalizáló", function() {deepEqual( Stem("képdigitalizáló"), "képdigitalizáló");});
test("képe -> kép", function() {deepEqual( Stem("képe"), "kép");});
test("képei -> kép", function() {deepEqual( Stem("képei"), "kép");});
test("képeiket -> kép", function() {deepEqual( Stem("képeiket"), "kép");});
test("képeit -> kép", function() {deepEqual( Stem("képeit"), "kép");});
test("képeivel -> kép", function() {deepEqual( Stem("képeivel"), "kép");});
test("képek -> kép", function() {deepEqual( Stem("képek"), "kép");});
test("képekben -> kép", function() {deepEqual( Stem("képekben"), "kép");});
test("képeket -> kép", function() {deepEqual( Stem("képeket"), "kép");});
test("képekhez -> kép", function() {deepEqual( Stem("képekhez"), "kép");});
test("képekkel -> kép", function() {deepEqual( Stem("képekkel"), "kép");});
test("képeknek -> kép", function() {deepEqual( Stem("képeknek"), "kép");});
test("képeknél -> kép", function() {deepEqual( Stem("képeknél"), "kép");});
test("képekről -> kép", function() {deepEqual( Stem("képekről"), "kép");});
test("képem -> kép", function() {deepEqual( Stem("képem"), "kép");});
test("képemmel -> kép", function() {deepEqual( Stem("képemmel"), "kép");});
test("képen -> kép", function() {deepEqual( Stem("képen"), "kép");});
test("képbe -> kép", function() {deepEqual( Stem("képbe"), "kép");});
test("kép -> kép", function() {deepEqual( Stem("kép"), "kép");});
test("képben -> kép", function() {deepEqual( Stem("képben"), "kép");});
test("képből -> kép", function() {deepEqual( Stem("képből"), "kép");});
test("képet -> kép", function() {deepEqual( Stem("képet"), "kép");});
test("képhez -> kép", function() {deepEqual( Stem("képhez"), "kép");});
test("képként -> kép", function() {deepEqual( Stem("képként"), "kép");});
test("képnek -> kép", function() {deepEqual( Stem("képnek"), "kép");});
test("képre -> kép", function() {deepEqual( Stem("képre"), "kép");});
test("képpel -> kép", function() {deepEqual( Stem("képpel"), "kép");});
test("képről -> kép", function() {deepEqual( Stem("képről"), "kép");});
test("képébe -> kép", function() {deepEqual( Stem("képébe"), "kép");});
test("képében -> kép", function() {deepEqual( Stem("képében"), "kép");});
test("képéhez -> kép", function() {deepEqual( Stem("képéhez"), "kép");});
test("képén -> kép", function() {deepEqual( Stem("képén"), "kép");});
test("képének -> kép", function() {deepEqual( Stem("képének"), "kép");});
test("képét -> kép", function() {deepEqual( Stem("képét"), "kép");});
test("képétől -> kép", function() {deepEqual( Stem("képétől"), "kép");});
test("képével -> kép", function() {deepEqual( Stem("képével"), "kép");});
test("képünk -> kép", function() {deepEqual( Stem("képünk"), "kép");});
test("képünkön -> kép", function() {deepEqual( Stem("képünkön"), "kép");});
test("képernyőfelbontás -> képernyőfelbontás", function() {deepEqual( Stem("képernyőfelbontás"), "képernyőfelbontás");});
test("képernyőformátumot -> képernyőformátu", function() {deepEqual( Stem("képernyőformátumot"), "képernyőformátu");});
test("képernyőfüggő -> képernyőfüggő", function() {deepEqual( Stem("képernyőfüggő"), "képernyőfüggő");});
test("képernyője -> képernyő", function() {deepEqual( Stem("képernyője"), "képernyő");});
test("képernyő -> képernyő", function() {deepEqual( Stem("képernyő"), "képernyő");});
test("képernyőjén -> képernyő", function() {deepEqual( Stem("képernyőjén"), "képernyő");});
test("képernyőjére -> képernyő", function() {deepEqual( Stem("képernyőjére"), "képernyő");});
test("képernyőjéről -> képernyő", function() {deepEqual( Stem("képernyőjéről"), "képernyő");});
test("képernyők -> képernyő", function() {deepEqual( Stem("képernyők"), "képernyő");});
test("képernyőket -> képernyő", function() {deepEqual( Stem("képernyőket"), "képernyő");});
test("képernyőként -> képernyő", function() {deepEqual( Stem("képernyőként"), "képernyő");});
test("képernyőn -> képernyő", function() {deepEqual( Stem("képernyőn"), "képernyő");});
test("képernyőre -> képernyő", function() {deepEqual( Stem("képernyőre"), "képernyő");});
test("képernyőről -> képernyő", function() {deepEqual( Stem("képernyőről"), "képernyő");});
test("képernyőt -> képernyő", function() {deepEqual( Stem("képernyőt"), "képernyő");});
test("képernyőméret -> képernyőmér", function() {deepEqual( Stem("képernyőméret"), "képernyőmér");});
test("képernyőoldal -> képernyőoldal", function() {deepEqual( Stem("képernyőoldal"), "képernyőoldal");});
test("képeslapban -> képeslap", function() {deepEqual( Stem("képeslapban"), "képeslap");});
test("képeslapból -> képeslap", function() {deepEqual( Stem("képeslapból"), "képeslap");});
test("képeslapokat -> képeslap", function() {deepEqual( Stem("képeslapokat"), "képeslap");});
test("képeslapon -> képeslap", function() {deepEqual( Stem("képeslapon"), "képeslap");});
test("képeslapot -> képeslap", function() {deepEqual( Stem("képeslapot"), "képeslap");});
test("képesség -> képesség", function() {deepEqual( Stem("képesség"), "képesség");});
test("képessége -> képesség", function() {deepEqual( Stem("képessége"), "képesség");});
test("képességei -> képesség", function() {deepEqual( Stem("képességei"), "képesség");});
test("képességeik -> képesség", function() {deepEqual( Stem("képességeik"), "képesség");});
test("képességeiket -> képesség", function() {deepEqual( Stem("képességeiket"), "képesség");});
test("képességeim -> képesség", function() {deepEqual( Stem("képességeim"), "képesség");});
test("képességeimet -> képesség", function() {deepEqual( Stem("képességeimet"), "képesség");});
test("képességeimhez -> képesség", function() {deepEqual( Stem("képességeimhez"), "képesség");});
test("képességeinek -> képesség", function() {deepEqual( Stem("képességeinek"), "képesség");});
test("képességeit -> képesség", function() {deepEqual( Stem("képességeit"), "képesség");});
test("képességeitől -> képesség", function() {deepEqual( Stem("képességeitől"), "képesség");});
test("képességeivel -> képesség", function() {deepEqual( Stem("képességeivel"), "képesség");});
test("képességek -> képesség", function() {deepEqual( Stem("képességek"), "képesség");});
test("képességekhez -> képesség", function() {deepEqual( Stem("képességekhez"), "képesség");});
test("képességekkel -> képesség", function() {deepEqual( Stem("képességekkel"), "képesség");});
test("képességem -> képesség", function() {deepEqual( Stem("képességem"), "képesség");});
test("képességet -> képesség", function() {deepEqual( Stem("képességet"), "képesség");});
test("képességgel -> képesség", function() {deepEqual( Stem("képességgel"), "képesség");});
test("képességre -> képesség", function() {deepEqual( Stem("képességre"), "képesség");});
test("képességén -> képesség", function() {deepEqual( Stem("képességén"), "képesség");});
test("képességének -> képesség", function() {deepEqual( Stem("képességének"), "képesség");});
test("képességére -> képesség", function() {deepEqual( Stem("képességére"), "képesség");});
test("képességét -> képesség", function() {deepEqual( Stem("képességét"), "képesség");});
test("képességével -> képesség", function() {deepEqual( Stem("képességével"), "képesség");});
test("képességük -> képesség", function() {deepEqual( Stem("képességük"), "képesség");});
test("képességüket -> képesség", function() {deepEqual( Stem("képességüket"), "képesség");});
test("képességükkel -> képesség", function() {deepEqual( Stem("képességükkel"), "képesség");});
test("képességű -> képességű", function() {deepEqual( Stem("képességű"), "képességű");});
test("képességűnek -> képességű", function() {deepEqual( Stem("képességűnek"), "képességű");});
test("képest -> képes", function() {deepEqual( Stem("képest"), "képes");});
test("képes -> képes", function() {deepEqual( Stem("képes"), "képes");});
test("képesek -> képes", function() {deepEqual( Stem("képesek"), "képes");});
test("képesnek -> képes", function() {deepEqual( Stem("képesnek"), "képes");});
test("képessé -> képes", function() {deepEqual( Stem("képessé"), "képes");});
test("képeszni -> képeszn", function() {deepEqual( Stem("képeszni"), "képeszn");});
test("képesztette -> képesztett", function() {deepEqual( Stem("képesztette"), "képesztett");});
test("képesítés -> képesítés", function() {deepEqual( Stem("képesítés"), "képesítés");});
test("képesítése -> képesítés", function() {deepEqual( Stem("képesítése"), "képesítés");});
test("képesítéssel -> képesítés", function() {deepEqual( Stem("képesítéssel"), "képesítés");});
test("képesítést -> képesítés", function() {deepEqual( Stem("képesítést"), "képesítés");});
test("képesítési -> képesítés", function() {deepEqual( Stem("képesítési"), "képesítés");});
test("képezett -> képezet", function() {deepEqual( Stem("képezett"), "képezet");});
test("képezheti -> képezhet", function() {deepEqual( Stem("képezheti"), "képezhet");});
test("képezhetik -> képezhet", function() {deepEqual( Stem("képezhetik"), "képezhet");});
test("képezhetnek -> képezhet", function() {deepEqual( Stem("képezhetnek"), "képezhet");});
test("képez -> képez", function() {deepEqual( Stem("képez"), "képez");});
test("képezem -> képez", function() {deepEqual( Stem("képezem"), "képez");});
test("képezi -> képez", function() {deepEqual( Stem("képezi"), "képez");});
test("képezik -> képez", function() {deepEqual( Stem("képezik"), "képez");});
test("képeznek -> képez", function() {deepEqual( Stem("képeznek"), "képez");});
test("képezni -> képezn", function() {deepEqual( Stem("képezni"), "képezn");});
test("képeznie -> képezn", function() {deepEqual( Stem("képeznie"), "képezn");});
test("képezte -> képezt", function() {deepEqual( Stem("képezte"), "képezt");});
test("képeztek -> képezt", function() {deepEqual( Stem("képeztek"), "képezt");});
test("képezték -> képezte", function() {deepEqual( Stem("képezték"), "képezte");});
test("képezzem -> képezz", function() {deepEqual( Stem("képezzem"), "képezz");});
test("képezzék -> képezze", function() {deepEqual( Stem("képezzék"), "képezze");});
test("képezzük -> képezz", function() {deepEqual( Stem("képezzük"), "képezz");});
test("képező -> képező", function() {deepEqual( Stem("képező"), "képező");});
test("képfelbontással -> képfelbontás", function() {deepEqual( Stem("képfelbontással"), "képfelbontás");});
test("képfeldolgozási -> képfeldolgozás", function() {deepEqual( Stem("képfeldolgozási"), "képfeldolgozás");});
test("képfeldolgozó -> képfeldolgozó", function() {deepEqual( Stem("képfeldolgozó"), "képfeldolgozó");});
test("képfelvétel -> képfelvétel", function() {deepEqual( Stem("képfelvétel"), "képfelvétel");});
test("képfelvételek -> képfelvétel", function() {deepEqual( Stem("képfelvételek"), "képfelvétel");});
test("képfelvételen -> képfelvétel", function() {deepEqual( Stem("képfelvételen"), "képfelvétel");});
test("képfrissítéssel -> képfrissítés", function() {deepEqual( Stem("képfrissítéssel"), "képfrissítés");});
test("képfájlokat -> képfájl", function() {deepEqual( Stem("képfájlokat"), "képfájl");});
test("képféle -> képfél", function() {deepEqual( Stem("képféle"), "képfél");});
test("képgrafika -> képgraf", function() {deepEqual( Stem("képgrafika"), "képgraf");});
test("képgrafikai -> képgrafi", function() {deepEqual( Stem("képgrafikai"), "képgrafi");});
test("képhordozó -> képhordozó", function() {deepEqual( Stem("képhordozó"), "képhordozó");});
test("képhordozók -> képhordozó", function() {deepEqual( Stem("képhordozók"), "képhordozó");});
test("képi -> kép", function() {deepEqual( Stem("képi"), "kép");});
test("képinformációk -> képinformáció", function() {deepEqual( Stem("képinformációk"), "képinformáció");});
test("képinformációt -> képinformáció", function() {deepEqual( Stem("képinformációt"), "képinformáció");});
test("képkereten -> képkeret", function() {deepEqual( Stem("képkereten"), "képkeret");});
test("képkeretet -> képkeret", function() {deepEqual( Stem("képkeretet"), "képkeret");});
test("képkezelés -> képkezelés", function() {deepEqual( Stem("képkezelés"), "képkezelés");});
test("képkidolgozó -> képkidolgozó", function() {deepEqual( Stem("képkidolgozó"), "képkidolgozó");});
test("képkockát -> képkoc", function() {deepEqual( Stem("képkockát"), "képkoc");});
test("képkészítésre -> képkészítés", function() {deepEqual( Stem("képkészítésre"), "képkészítés");});
test("képlemez-lejátszó -> képlemez-lejátszó", function() {deepEqual( Stem("képlemez-lejátszó"), "képlemez-lejátszó");});
test("képletesen -> képletes", function() {deepEqual( Stem("képletesen"), "képletes");});
test("képletét -> képlet", function() {deepEqual( Stem("képletét"), "képlet");});
test("képlet -> képl", function() {deepEqual( Stem("képlet"), "képl");});
test("képleírás -> képleírás", function() {deepEqual( Stem("képleírás"), "képleírás");});
test("képlopások -> képlopás", function() {deepEqual( Stem("képlopások"), "képlopás");});
test("képlékeny -> képlékeny", function() {deepEqual( Stem("képlékeny"), "képlékeny");});
test("képmegjelenítés -> képmegjelenítés", function() {deepEqual( Stem("képmegjelenítés"), "képmegjelenítés");});
test("képminőség -> képminőség", function() {deepEqual( Stem("képminőség"), "képminőség");});
test("képminőségben -> képminőség", function() {deepEqual( Stem("képminőségben"), "képminőség");});
test("képminőséget -> képminőség", function() {deepEqual( Stem("képminőséget"), "képminőség");});
test("képmutatásból -> képmutatás", function() {deepEqual( Stem("képmutatásból"), "képmutatás");});
test("képmutatást -> képmutatás", function() {deepEqual( Stem("képmutatást"), "képmutatás");});
test("képmutató -> képmutató", function() {deepEqual( Stem("képmutató"), "képmutató");});
test("képmutatóan -> képmutató", function() {deepEqual( Stem("képmutatóan"), "képmutató");});
test("képmutatók -> képmutató", function() {deepEqual( Stem("képmutatók"), "képmutató");});
test("képmás -> képmás", function() {deepEqual( Stem("képmás"), "képmás");});
test("képmása -> képmás", function() {deepEqual( Stem("képmása"), "képmás");});
test("képmásnak -> képmás", function() {deepEqual( Stem("képmásnak"), "képmás");});
test("képmással -> képmás", function() {deepEqual( Stem("képmással"), "képmás");});
test("képmást -> képmás", function() {deepEqual( Stem("képmást"), "képmás");});
test("képmásának -> képmás", function() {deepEqual( Stem("képmásának"), "képmás");});
test("képmására -> képmás", function() {deepEqual( Stem("képmására"), "képmás");});
test("képmását -> képmás", function() {deepEqual( Stem("képmását"), "képmás");});
test("képmásával -> képmás", function() {deepEqual( Stem("képmásával"), "képmás");});
test("képnyomtatás -> képnyomtatás", function() {deepEqual( Stem("képnyomtatás"), "képnyomtatás");});
test("képnézegető -> képnézegető", function() {deepEqual( Stem("képnézegető"), "képnézegető");});
test("képpont -> képpon", function() {deepEqual( Stem("képpont"), "képpon");});
test("képpontba -> képpont", function() {deepEqual( Stem("képpontba"), "képpont");});
test("képpontból -> képpont", function() {deepEqual( Stem("képpontból"), "képpont");});
test("képpontokra -> képpont", function() {deepEqual( Stem("képpontokra"), "képpont");});
test("képpontos -> képpontos", function() {deepEqual( Stem("képpontos"), "képpontos");});
test("képpontszámban -> képpontsza", function() {deepEqual( Stem("képpontszámban"), "képpontsza");});
test("képpontszámához -> képpontszám", function() {deepEqual( Stem("képpontszámához"), "képpontszám");});
test("képregényeken -> képregény", function() {deepEqual( Stem("képregényeken"), "képregény");});
test("képriportok -> képriport", function() {deepEqual( Stem("képriportok"), "képriport");});
test("képriportunkelső -> képriportunkelső", function() {deepEqual( Stem("képriportunkelső"), "képriportunkelső");});
test("képrongálás -> képrongálás", function() {deepEqual( Stem("képrongálás"), "képrongálás");});
test("képsorozatban -> képsorozat", function() {deepEqual( Stem("képsorozatban"), "képsorozat");});
test("képsorozatokat -> képsorozat", function() {deepEqual( Stem("képsorozatokat"), "képsorozat");});
test("képszerkesztő -> képszerkesztő", function() {deepEqual( Stem("képszerkesztő"), "képszerkesztő");});
test("képszerkesztőben -> képszerkesztő", function() {deepEqual( Stem("képszerkesztőben"), "képszerkesztő");});
test("képszerkesztőből -> képszerkesztő", function() {deepEqual( Stem("képszerkesztőből"), "képszerkesztő");});
test("képszerkesztők -> képszerkesztő", function() {deepEqual( Stem("képszerkesztők"), "képszerkesztő");});
test("képszerűen -> képszerű", function() {deepEqual( Stem("képszerűen"), "képszerű");});
test("képtelefonként -> képtelef", function() {deepEqual( Stem("képtelefonként"), "képtelef");});
test("képtelen -> képtel", function() {deepEqual( Stem("képtelen"), "képtel");});
test("képtelenebb -> képtelenebb", function() {deepEqual( Stem("képtelenebb"), "képtelenebb");});
test("képtelenek -> képtel", function() {deepEqual( Stem("képtelenek"), "képtel");});
test("képtelenné -> képtelen", function() {deepEqual( Stem("képtelenné"), "képtelen");});
test("képtelenség -> képtelenség", function() {deepEqual( Stem("képtelenség"), "képtelenség");});
test("képtelenségek -> képtelenség", function() {deepEqual( Stem("képtelenségek"), "képtelenség");});
test("képtelenséget -> képtelenség", function() {deepEqual( Stem("képtelenséget"), "képtelenség");});
test("képtelenséggé -> képtelenség", function() {deepEqual( Stem("képtelenséggé"), "képtelenség");});
test("képtelenségnek -> képtelenség", function() {deepEqual( Stem("képtelenségnek"), "képtelenség");});
test("képtorzítást -> képtorzítás", function() {deepEqual( Stem("képtorzítást"), "képtorzítás");});
test("képtovábbításra -> képtovábbítás", function() {deepEqual( Stem("képtovábbításra"), "képtovábbítás");});
test("képtár -> képtár", function() {deepEqual( Stem("képtár"), "képtár");});
test("képtárat -> képtár", function() {deepEqual( Stem("képtárat"), "képtár");});
test("képvisel -> képvisel", function() {deepEqual( Stem("képvisel"), "képvisel");});
test("képviselek -> képvisel", function() {deepEqual( Stem("képviselek"), "képvisel");});
test("képviseleti -> képviselet", function() {deepEqual( Stem("képviseleti"), "képviselet");});
test("képviselet -> képvisel", function() {deepEqual( Stem("képviselet"), "képvisel");});
test("képviselete -> képviselet", function() {deepEqual( Stem("képviselete"), "képviselet");});
test("képviseleteiről -> képviselet", function() {deepEqual( Stem("képviseleteiről"), "képviselet");});
test("képviseleteivel -> képviselet", function() {deepEqual( Stem("képviseleteivel"), "képviselet");});
test("képviseleteken -> képviselet", function() {deepEqual( Stem("képviseleteken"), "képviselet");});
test("képviseletet -> képviselet", function() {deepEqual( Stem("képviseletet"), "képviselet");});
test("képviselethez -> képviselet", function() {deepEqual( Stem("képviselethez"), "képviselet");});
test("képviseletnek -> képviselet", function() {deepEqual( Stem("képviseletnek"), "képviselet");});
test("képviseletre -> képviselet", function() {deepEqual( Stem("képviseletre"), "képviselet");});
test("képviselettel -> képvisel", function() {deepEqual( Stem("képviselettel"), "képvisel");});
test("képviseletében -> képviselet", function() {deepEqual( Stem("képviseletében"), "képviselet");});
test("képviseletének -> képviselet", function() {deepEqual( Stem("képviseletének"), "képviselet");});
test("képviseleténél -> képviselet", function() {deepEqual( Stem("képviseleténél"), "képviselet");});
test("képviseletére -> képviselet", function() {deepEqual( Stem("képviseletére"), "képviselet");});
test("képviseletét -> képviselet", function() {deepEqual( Stem("képviseletét"), "képviselet");});
test("képviseletével -> képviselet", function() {deepEqual( Stem("képviseletével"), "képviselet");});
test("képviselhet -> képviselh", function() {deepEqual( Stem("képviselhet"), "képviselh");});
test("képviselhetem -> képviselhet", function() {deepEqual( Stem("képviselhetem"), "képviselhet");});
test("képviselhetné -> képviselhetn", function() {deepEqual( Stem("képviselhetné"), "képviselhetn");});
test("képviselheti -> képviselhet", function() {deepEqual( Stem("képviselheti"), "képviselhet");});
test("képviseli -> képvisel", function() {deepEqual( Stem("képviseli"), "képvisel");});
test("képviselik -> képvisel", function() {deepEqual( Stem("képviselik"), "képvisel");});
test("képviselje -> képvisel", function() {deepEqual( Stem("képviselje"), "képvisel");});
test("képviseljék -> képviselje", function() {deepEqual( Stem("képviseljék"), "képviselje");});
test("képviselnek -> képvisel", function() {deepEqual( Stem("képviselnek"), "képvisel");});
test("képviselni -> képviseln", function() {deepEqual( Stem("képviselni"), "képviseln");});
test("képviselniük -> képviseln", function() {deepEqual( Stem("képviselniük"), "képviseln");});
test("képviselné -> képviseln", function() {deepEqual( Stem("képviselné"), "képviseln");});
test("képviselte -> képviselt", function() {deepEqual( Stem("képviselte"), "képviselt");});
test("képviseltek -> képviselt", function() {deepEqual( Stem("képviseltek"), "képviselt");});
test("képviselték -> képviselte", function() {deepEqual( Stem("képviselték"), "képviselte");});
test("képviseltük -> képviselt", function() {deepEqual( Stem("képviseltük"), "képviselt");});
test("képviselt -> képvisel", function() {deepEqual( Stem("képviselt"), "képvisel");});
test("képviseltetheti -> képviseltethet", function() {deepEqual( Stem("képviseltetheti"), "képviseltethet");});
test("képviseltessem -> képviseltess", function() {deepEqual( Stem("képviseltessem"), "képviseltess");});
test("képviselteti -> képviseltet", function() {deepEqual( Stem("képviselteti"), "képviseltet");});
test("képviseltetik -> képviseltet", function() {deepEqual( Stem("képviseltetik"), "képviseltet");});
test("képviseltette -> képviseltett", function() {deepEqual( Stem("képviseltette"), "képviseltett");});
test("képviseltették -> képviseltette", function() {deepEqual( Stem("képviseltették"), "képviseltette");});
test("képviselve -> képviselv", function() {deepEqual( Stem("képviselve"), "képviselv");});
test("képviselő-testület -> képviselő-t", function() {deepEqual( Stem("képviselő-testület"), "képviselő-t");});
test("képviselő-testülete -> képviselő-testület", function() {deepEqual( Stem("képviselő-testülete"), "képviselő-testület");});
test("képviselő-testületen -> képviselő-testület", function() {deepEqual( Stem("képviselő-testületen"), "képviselő-testület");});
test("képviselő-testületnek -> képviselő-testület", function() {deepEqual( Stem("képviselő-testületnek"), "képviselő-testület");});
test("képviselőcsoport -> képviselőcsopor", function() {deepEqual( Stem("képviselőcsoport"), "képviselőcsopor");});
test("képviselőcsoportjának -> képviselőcsoport", function() {deepEqual( Stem("képviselőcsoportjának"), "képviselőcsoport");});
test("képviselőház -> képviselőház", function() {deepEqual( Stem("képviselőház"), "képviselőház");});
test("képviselőházat -> képviselőház", function() {deepEqual( Stem("képviselőházat"), "képviselőház");});
test("képviselőházzal -> képviselőház", function() {deepEqual( Stem("képviselőházzal"), "képviselőház");});
test("képviselői -> képviselő", function() {deepEqual( Stem("képviselői"), "képviselő");});
test("képviselőiben -> képviselő", function() {deepEqual( Stem("képviselőiben"), "képviselő");});
test("képviselőiből -> képviselő", function() {deepEqual( Stem("képviselőiből"), "képviselő");});
test("képviselőinek -> képviselő", function() {deepEqual( Stem("képviselőinek"), "képviselő");});
test("képviselőire -> képviselő", function() {deepEqual( Stem("képviselőire"), "képviselő");});
test("képviselőit -> képviselő", function() {deepEqual( Stem("képviselőit"), "képviselő");});
test("képviselőivel -> képviselő", function() {deepEqual( Stem("képviselőivel"), "képviselő");});
test("képviselője -> képviselő", function() {deepEqual( Stem("képviselője"), "képviselő");});
test("képviselőjeként -> képviselő", function() {deepEqual( Stem("képviselőjeként"), "képviselő");});
test("képviselőjének -> képviselő", function() {deepEqual( Stem("képviselőjének"), "képviselő");});
test("képviselőjére -> képviselő", function() {deepEqual( Stem("képviselőjére"), "képviselő");});
test("képviselőjét -> képviselő", function() {deepEqual( Stem("képviselőjét"), "képviselő");});
test("képviselőjétől -> képviselő", function() {deepEqual( Stem("képviselőjétől"), "képviselő");});
test("képviselőjével -> képviselő", function() {deepEqual( Stem("képviselőjével"), "képviselő");});
test("képviselőjük -> képviselő", function() {deepEqual( Stem("képviselőjük"), "képviselő");});
test("képviselők -> képviselő", function() {deepEqual( Stem("képviselők"), "képviselő");});
test("képviselőket -> képviselő", function() {deepEqual( Stem("képviselőket"), "képviselő");});
test("képviselőknek -> képviselő", function() {deepEqual( Stem("képviselőknek"), "képviselő");});
test("képviselőkéhez -> képviselő", function() {deepEqual( Stem("képviselőkéhez"), "képviselő");});
test("képviselőkön -> képviselő", function() {deepEqual( Stem("képviselőkön"), "képviselő");});
test("képviselőnek -> képviselő", function() {deepEqual( Stem("képviselőnek"), "képviselő");});
test("képviselőt -> képviselő", function() {deepEqual( Stem("képviselőt"), "képviselő");});
test("képviselővel -> képviselő", function() {deepEqual( Stem("képviselővel"), "képviselő");});
test("képviselő -> képviselő", function() {deepEqual( Stem("képviselő"), "képviselő");});
test("képviselőből -> képviselő", function() {deepEqual( Stem("képviselőből"), "képviselő");});
test("képviselőtestülete -> képviselőtestület", function() {deepEqual( Stem("képviselőtestülete"), "képviselőtestület");});
test("képzavarához -> képzavar", function() {deepEqual( Stem("képzavarához"), "képzavar");});
test("képzel -> képzel", function() {deepEqual( Stem("képzel"), "képzel");});
test("képzeled -> képzel", function() {deepEqual( Stem("képzeled"), "képzel");});
test("képzelek -> képzel", function() {deepEqual( Stem("képzelek"), "képzel");});
test("képzelem -> képzel", function() {deepEqual( Stem("képzelem"), "képzel");});
test("képzeletbeli -> képzeletbel", function() {deepEqual( Stem("képzeletbeli"), "képzeletbel");});
test("képzeletben -> képzelet", function() {deepEqual( Stem("képzeletben"), "képzelet");});
test("képzelet -> képzel", function() {deepEqual( Stem("képzelet"), "képzel");});
test("képzelete -> képzelet", function() {deepEqual( Stem("képzelete"), "képzelet");});
test("képzeletet -> képzelet", function() {deepEqual( Stem("képzeletet"), "képzelet");});
test("képzeletében -> képzelet", function() {deepEqual( Stem("képzeletében"), "képzelet");});
test("képzeletszülte -> képzeletszült", function() {deepEqual( Stem("képzeletszülte"), "képzeletszült");});
test("képzelhető -> képzelhető", function() {deepEqual( Stem("képzelhető"), "képzelhető");});
test("képzelhetők -> képzelhető", function() {deepEqual( Stem("képzelhetők"), "képzelhető");});
test("képzeli -> képzel", function() {deepEqual( Stem("képzeli"), "képzel");});
test("képzelik -> képzel", function() {deepEqual( Stem("képzelik"), "képzel");});
test("képzelitek -> képzel", function() {deepEqual( Stem("képzelitek"), "képzel");});
test("képzelj -> képzelj", function() {deepEqual( Stem("képzelj"), "képzelj");});
test("képzelje -> képzel", function() {deepEqual( Stem("képzelje"), "képzel");});
test("képzelni -> képzeln", function() {deepEqual( Stem("képzelni"), "képzeln");});
test("képzelné -> képzeln", function() {deepEqual( Stem("képzelné"), "képzeln");});
test("képzelte -> képzelt", function() {deepEqual( Stem("képzelte"), "képzelt");});
test("képzeltek -> képzelt", function() {deepEqual( Stem("képzeltek"), "képzelt");});
test("képzeltem -> képzelt", function() {deepEqual( Stem("képzeltem"), "képzelt");});
test("képzelték -> képzelte", function() {deepEqual( Stem("képzelték"), "képzelte");});
test("képzelném -> képzelne", function() {deepEqual( Stem("képzelném"), "képzelne");});
test("képzelt -> képzel", function() {deepEqual( Stem("képzelt"), "képzel");});
test("képzeltnél -> képzelt", function() {deepEqual( Stem("képzeltnél"), "képzelt");});
test("képzelődik -> képzelőd", function() {deepEqual( Stem("képzelődik"), "képzelőd");});
test("képzelődsz -> képzelődsz", function() {deepEqual( Stem("képzelődsz"), "képzelődsz");});
test("képzelődtek -> képzelődt", function() {deepEqual( Stem("képzelődtek"), "képzelődt");});
test("képzelődtem -> képzelődt", function() {deepEqual( Stem("képzelődtem"), "képzelődt");});
test("képzelődés -> képzelődés", function() {deepEqual( Stem("képzelődés"), "képzelődés");});
test("képzelődést -> képzelődés", function() {deepEqual( Stem("képzelődést"), "képzelődés");});
test("képzelőereje -> képzelőere", function() {deepEqual( Stem("képzelőereje"), "képzelőere");});
test("képzelőerőre -> képzelőerő", function() {deepEqual( Stem("képzelőerőre"), "képzelőerő");});
test("képzeteibe -> képzet", function() {deepEqual( Stem("képzeteibe"), "képzet");});
test("képzeteket -> képzet", function() {deepEqual( Stem("képzeteket"), "képzet");});
test("képzetlen -> képzetl", function() {deepEqual( Stem("képzetlen"), "képzetl");});
test("képzett -> képzet", function() {deepEqual( Stem("képzett"), "képzet");});
test("képzettebb -> képzettebb", function() {deepEqual( Stem("képzettebb"), "képzettebb");});
test("képzettebbé -> képzetteb", function() {deepEqual( Stem("képzettebbé"), "képzetteb");});
test("képzettek -> képzett", function() {deepEqual( Stem("képzettek"), "képzett");});
test("képzettség -> képzettség", function() {deepEqual( Stem("képzettség"), "képzettség");});
test("képzettségétől -> képzettség", function() {deepEqual( Stem("képzettségétől"), "képzettség");});
test("képzettségük -> képzettség", function() {deepEqual( Stem("képzettségük"), "képzettség");});
test("képzettségű -> képzettségű", function() {deepEqual( Stem("képzettségű"), "képzettségű");});
test("képzettségűek -> képzettségű", function() {deepEqual( Stem("képzettségűek"), "képzettségű");});
test("képzettségűekből -> képzettségű", function() {deepEqual( Stem("képzettségűekből"), "képzettségű");});
test("képzetét -> képzet", function() {deepEqual( Stem("képzetét"), "képzet");});
test("képzetével -> képzet", function() {deepEqual( Stem("képzetével"), "képzet");});
test("képzés -> képzés", function() {deepEqual( Stem("képzés"), "képzés");});
test("képzésbe -> képzés", function() {deepEqual( Stem("képzésbe"), "képzés");});
test("képzésben -> képzés", function() {deepEqual( Stem("képzésben"), "képzés");});
test("képzése -> képzés", function() {deepEqual( Stem("képzése"), "képzés");});
test("képzésre -> képzés", function() {deepEqual( Stem("képzésre"), "képzés");});
test("képzéssel -> képzés", function() {deepEqual( Stem("képzéssel"), "képzés");});
test("képzést -> képzés", function() {deepEqual( Stem("képzést"), "képzés");});
test("képzésének -> képzés", function() {deepEqual( Stem("képzésének"), "képzés");});
test("képzéséről -> képzés", function() {deepEqual( Stem("képzéséről"), "képzés");});
test("képzését -> képzés", function() {deepEqual( Stem("képzését"), "képzés");});
test("képzésfajtát -> képzésfajt", function() {deepEqual( Stem("képzésfajtát"), "képzésfajt");});
test("képzési -> képzés", function() {deepEqual( Stem("képzési"), "képzés");});
test("képződménnyé -> képződmény", function() {deepEqual( Stem("képződménnyé"), "képződmény");});
test("képződményre -> képződmény", function() {deepEqual( Stem("képződményre"), "képződmény");});
test("képződnek -> képző", function() {deepEqual( Stem("képződnek"), "képző");});
test("képződik -> képződ", function() {deepEqual( Stem("képződik"), "képződ");});
test("képződését -> képződés", function() {deepEqual( Stem("képződését"), "képződés");});
test("képződött -> képződöt", function() {deepEqual( Stem("képződött"), "képződöt");});
test("képzőművész -> képzőművész", function() {deepEqual( Stem("képzőművész"), "képzőművész");});
test("képzőművészei -> képzőművész", function() {deepEqual( Stem("képzőművészei"), "képzőművész");});
test("képzőművészek -> képzőművész", function() {deepEqual( Stem("képzőművészek"), "képzőművész");});
test("képzőművészeket -> képzőművész", function() {deepEqual( Stem("képzőművészeket"), "képzőművész");});
test("képzőművészet -> képzőművész", function() {deepEqual( Stem("képzőművészet"), "képzőművész");});
test("képzőművészetekben -> képzőművészet", function() {deepEqual( Stem("képzőművészetekben"), "képzőművészet");});
test("képzőművészetnek -> képzőművészet", function() {deepEqual( Stem("képzőművészetnek"), "képzőművészet");});
test("képzőművészetről -> képzőművészet", function() {deepEqual( Stem("képzőművészetről"), "képzőművészet");});
test("képzőművészeti -> képzőművészet", function() {deepEqual( Stem("képzőművészeti"), "képzőművészet");});
test("képzőnek -> képző", function() {deepEqual( Stem("képzőnek"), "képző");});
test("képző -> képző", function() {deepEqual( Stem("képző"), "képző");});
test("képzőbe -> képző", function() {deepEqual( Stem("képzőbe"), "képző");});
test("képzőt -> képző", function() {deepEqual( Stem("képzőt"), "képző");});
test("képállományt -> képállomány", function() {deepEqual( Stem("képállományt"), "képállomány");});
test("képátalakítója -> képátalakító", function() {deepEqual( Stem("képátalakítója"), "képátalakító");});
test("képátalakítók -> képátalakító", function() {deepEqual( Stem("képátalakítók"), "képátalakító");});
test("képátlójú -> képátlójú", function() {deepEqual( Stem("képátlójú"), "képátlójú");});
test("képátlóval -> képátló", function() {deepEqual( Stem("képátlóval"), "képátló");});
test("képű -> képű", function() {deepEqual( Stem("képű"), "képű");});
test("képügynökségek -> képügynökség", function() {deepEqual( Stem("képügynökségek"), "képügynökség");});
test("kérdezett -> kérdezet", function() {deepEqual( Stem("kérdezett"), "kérdezet");});
test("kérdezettek -> kérdezett", function() {deepEqual( Stem("kérdezettek"), "kérdezett");});
test("kérdezgetett -> kérdezgetet", function() {deepEqual( Stem("kérdezgetett"), "kérdezgetet");});
test("kérdezgetik -> kérdezget", function() {deepEqual( Stem("kérdezgetik"), "kérdezget");});
test("kérdezgetjük -> kérdezget", function() {deepEqual( Stem("kérdezgetjük"), "kérdezget");});
test("kérdezgetni -> kérdezgetn", function() {deepEqual( Stem("kérdezgetni"), "kérdezgetn");});
test("kérdezgettek -> kérdezgett", function() {deepEqual( Stem("kérdezgettek"), "kérdezgett");});
test("kérdezhetnek -> kérdezhet", function() {deepEqual( Stem("kérdezhetnek"), "kérdezhet");});
test("kérdezhetné -> kérdezhetn", function() {deepEqual( Stem("kérdezhetné"), "kérdezhetn");});
test("kérdezhetnék -> kérdezhetne", function() {deepEqual( Stem("kérdezhetnék"), "kérdezhetne");});
test("kérdezhetnénk -> kérdezhetne", function() {deepEqual( Stem("kérdezhetnénk"), "kérdezhetne");});
test("kérdezi -> kérdez", function() {deepEqual( Stem("kérdezi"), "kérdez");});
test("kérdezik -> kérdez", function() {deepEqual( Stem("kérdezik"), "kérdez");});
test("kérdeznek -> kérdez", function() {deepEqual( Stem("kérdeznek"), "kérdez");});
test("kérdeznem -> kérdezn", function() {deepEqual( Stem("kérdeznem"), "kérdezn");});
test("kérdezni -> kérdezn", function() {deepEqual( Stem("kérdezni"), "kérdezn");});
test("kérdeznie -> kérdezn", function() {deepEqual( Stem("kérdeznie"), "kérdezn");});
test("kérdezné -> kérdezn", function() {deepEqual( Stem("kérdezné"), "kérdezn");});
test("kérdeznünk -> kérdezn", function() {deepEqual( Stem("kérdeznünk"), "kérdezn");});
test("kérdezte -> kérdezt", function() {deepEqual( Stem("kérdezte"), "kérdezt");});
test("kérdezted -> kérdezt", function() {deepEqual( Stem("kérdezted"), "kérdezt");});
test("kérdeztek -> kérdezt", function() {deepEqual( Stem("kérdeztek"), "kérdezt");});
test("kérdeztem -> kérdezt", function() {deepEqual( Stem("kérdeztem"), "kérdezt");});
test("kérdezték -> kérdezte", function() {deepEqual( Stem("kérdezték"), "kérdezte");});
test("kérdeztük -> kérdezt", function() {deepEqual( Stem("kérdeztük"), "kérdezt");});
test("kérdez -> kérdez", function() {deepEqual( Stem("kérdez"), "kérdez");});
test("kérdezek -> kérdez", function() {deepEqual( Stem("kérdezek"), "kérdez");});
test("kérdezel -> kérdezel", function() {deepEqual( Stem("kérdezel"), "kérdezel");});
test("kérdezem -> kérdez", function() {deepEqual( Stem("kérdezem"), "kérdez");});
test("kérdezze -> kérdezz", function() {deepEqual( Stem("kérdezze"), "kérdezz");});
test("kérdezzenek -> kérdezz", function() {deepEqual( Stem("kérdezzenek"), "kérdezz");});
test("kérdezünk -> kérdez", function() {deepEqual( Stem("kérdezünk"), "kérdez");});
test("kérdezz-felelek -> kérdezz-felel", function() {deepEqual( Stem("kérdezz-felelek"), "kérdezz-felel");});
test("kérdezés -> kérdezés", function() {deepEqual( Stem("kérdezés"), "kérdezés");});
test("kérdezőbiztosként -> kérdezőbiztos", function() {deepEqual( Stem("kérdezőbiztosként"), "kérdezőbiztos");});
test("kérdezősködni -> kérdezősködn", function() {deepEqual( Stem("kérdezősködni"), "kérdezősködn");});
test("kérdezősködtünk -> kérdezősködt", function() {deepEqual( Stem("kérdezősködtünk"), "kérdezősködt");});
test("kérdezősködést -> kérdezősködés", function() {deepEqual( Stem("kérdezősködést"), "kérdezősködés");});
test("kérdezősködött -> kérdezősködöt", function() {deepEqual( Stem("kérdezősködött"), "kérdezősködöt");});
test("kérdi -> kérd", function() {deepEqual( Stem("kérdi"), "kérd");});
test("kérdém -> kérde", function() {deepEqual( Stem("kérdém"), "kérde");});
test("kérdés-válasz -> kérdés-válasz", function() {deepEqual( Stem("kérdés-válasz"), "kérdés-válasz");});
test("kérdésben -> kérdés", function() {deepEqual( Stem("kérdésben"), "kérdés");});
test("kérdés -> kérdés", function() {deepEqual( Stem("kérdés"), "kérdés");});
test("kérdése -> kérdés", function() {deepEqual( Stem("kérdése"), "kérdés");});
test("kérdéseddel -> kérdés", function() {deepEqual( Stem("kérdéseddel"), "kérdés");});
test("kérdései -> kérdés", function() {deepEqual( Stem("kérdései"), "kérdés");});
test("kérdéseibe -> kérdés", function() {deepEqual( Stem("kérdéseibe"), "kérdés");});
test("kérdéseiben -> kérdés", function() {deepEqual( Stem("kérdéseiben"), "kérdés");});
test("kérdéseikre -> kérdés", function() {deepEqual( Stem("kérdéseikre"), "kérdés");});
test("kérdéseimre -> kérdés", function() {deepEqual( Stem("kérdéseimre"), "kérdés");});
test("kérdéseinek -> kérdés", function() {deepEqual( Stem("kérdéseinek"), "kérdés");});
test("kérdéseire -> kérdés", function() {deepEqual( Stem("kérdéseire"), "kérdés");});
test("kérdéseiről -> kérdés", function() {deepEqual( Stem("kérdéseiről"), "kérdés");});
test("kérdéseit -> kérdés", function() {deepEqual( Stem("kérdéseit"), "kérdés");});
test("kérdéseivel -> kérdés", function() {deepEqual( Stem("kérdéseivel"), "kérdés");});
test("kérdések -> kérdés", function() {deepEqual( Stem("kérdések"), "kérdés");});
test("kérdésekben -> kérdés", function() {deepEqual( Stem("kérdésekben"), "kérdés");});
test("kérdéseken -> kérdés", function() {deepEqual( Stem("kérdéseken"), "kérdés");});
test("kérdéseket -> kérdés", function() {deepEqual( Stem("kérdéseket"), "kérdés");});
test("kérdésekkel -> kérdés", function() {deepEqual( Stem("kérdésekkel"), "kérdés");});
test("kérdéseknek -> kérdés", function() {deepEqual( Stem("kérdéseknek"), "kérdés");});
test("kérdéseknél -> kérdés", function() {deepEqual( Stem("kérdéseknél"), "kérdés");});
test("kérdésekre -> kérdés", function() {deepEqual( Stem("kérdésekre"), "kérdés");});
test("kérdésekről -> kérdés", function() {deepEqual( Stem("kérdésekről"), "kérdés");});
test("kérdésemet -> kérdés", function() {deepEqual( Stem("kérdésemet"), "kérdés");});
test("kérdésen -> kérdés", function() {deepEqual( Stem("kérdésen"), "kérdés");});
test("kérdésnek -> kérdés", function() {deepEqual( Stem("kérdésnek"), "kérdés");});
test("kérdésre -> kérdés", function() {deepEqual( Stem("kérdésre"), "kérdés");});
test("kérdésről -> kérdés", function() {deepEqual( Stem("kérdésről"), "kérdés");});
test("kérdéssel -> kérdés", function() {deepEqual( Stem("kérdéssel"), "kérdés");});
test("kérdést -> kérdés", function() {deepEqual( Stem("kérdést"), "kérdés");});
test("kérdésében -> kérdés", function() {deepEqual( Stem("kérdésében"), "kérdés");});
test("kérdéséhez -> kérdés", function() {deepEqual( Stem("kérdéséhez"), "kérdés");});
test("kérdésén -> kérdés", function() {deepEqual( Stem("kérdésén"), "kérdés");});
test("kérdésének -> kérdés", function() {deepEqual( Stem("kérdésének"), "kérdés");});
test("kérdésének -> kérdés", function() {deepEqual( Stem("kérdésének"), "kérdés");});
test("kérdésére -> kérdés", function() {deepEqual( Stem("kérdésére"), "kérdés");});
test("kérdéséről -> kérdés", function() {deepEqual( Stem("kérdéséről"), "kérdés");});
test("kérdését -> kérdés", function() {deepEqual( Stem("kérdését"), "kérdés");});
test("kérdésétől -> kérdés", function() {deepEqual( Stem("kérdésétől"), "kérdés");});
test("kérdésével -> kérdés", function() {deepEqual( Stem("kérdésével"), "kérdés");});
test("kérdésévé -> kérdés", function() {deepEqual( Stem("kérdésévé"), "kérdés");});
test("kérdésünkre -> kérdés", function() {deepEqual( Stem("kérdésünkre"), "kérdés");});
test("kérdéshez -> kérdés", function() {deepEqual( Stem("kérdéshez"), "kérdés");});
test("kérdésként -> kérdés", function() {deepEqual( Stem("kérdésként"), "kérdés");});
test("kérdéses -> kérdéses", function() {deepEqual( Stem("kérdéses"), "kérdéses");});
test("kérdésessé -> kérdéses", function() {deepEqual( Stem("kérdésessé"), "kérdéses");});
test("kérdéskör -> kérdéskör", function() {deepEqual( Stem("kérdéskör"), "kérdéskör");});
test("kérdéskört -> kérdéskör", function() {deepEqual( Stem("kérdéskört"), "kérdéskör");});
test("kérdéskörére -> kérdéskör", function() {deepEqual( Stem("kérdéskörére"), "kérdéskör");});
test("kérdésköréről -> kérdéskör", function() {deepEqual( Stem("kérdésköréről"), "kérdéskör");});
test("kérdéskörét -> kérdéskör", function() {deepEqual( Stem("kérdéskörét"), "kérdéskör");});
test("kérdéskörök -> kérdéskör", function() {deepEqual( Stem("kérdéskörök"), "kérdéskör");});
test("kérdésköröket -> kérdéskör", function() {deepEqual( Stem("kérdésköröket"), "kérdéskör");});
test("kérdőjelet -> kérdőjel", function() {deepEqual( Stem("kérdőjelet"), "kérdőjel");});
test("kérdőjelezhető -> kérdőjelezhető", function() {deepEqual( Stem("kérdőjelezhető"), "kérdőjelezhető");});
test("kérdőjelezni -> kérdőjelezn", function() {deepEqual( Stem("kérdőjelezni"), "kérdőjelezn");});
test("kérdőjelezte -> kérdőjelezt", function() {deepEqual( Stem("kérdőjelezte"), "kérdőjelezt");});
test("kérdőjeleződött -> kérdőjeleződöt", function() {deepEqual( Stem("kérdőjeleződött"), "kérdőjeleződöt");});
test("kérdőn -> kérdő", function() {deepEqual( Stem("kérdőn"), "kérdő");});
test("kérdően -> kérdő", function() {deepEqual( Stem("kérdően"), "kérdő");});
test("kérdőre -> kérdő", function() {deepEqual( Stem("kérdőre"), "kérdő");});
test("kérdőív -> kérdőív", function() {deepEqual( Stem("kérdőív"), "kérdőív");});
test("kérdőívet -> kérdőív", function() {deepEqual( Stem("kérdőívet"), "kérdőív");});
test("kéreg -> kéreg", function() {deepEqual( Stem("kéreg"), "kéreg");});
test("kéregdarabból -> kéregdarab", function() {deepEqual( Stem("kéregdarabból"), "kéregdarab");});
test("kéregdarabot -> kéregdarab", function() {deepEqual( Stem("kéregdarabot"), "kéregdarab");});
test("kéreglemezek -> kéreglemez", function() {deepEqual( Stem("kéreglemezek"), "kéreglemez");});
test("kéregállománynak -> kéregállomány", function() {deepEqual( Stem("kéregállománynak"), "kéregállomány");});
test("kérelem -> kérel", function() {deepEqual( Stem("kérelem"), "kérel");});
test("kérelemben -> kérel", function() {deepEqual( Stem("kérelemben"), "kérel");});
test("kérelemhez -> kérel", function() {deepEqual( Stem("kérelemhez"), "kérel");});
test("kérelemmel -> kérel", function() {deepEqual( Stem("kérelemmel"), "kérel");});
test("kérelemnek -> kérel", function() {deepEqual( Stem("kérelemnek"), "kérel");});
test("kérelemnek -> kérel", function() {deepEqual( Stem("kérelemnek"), "kérel");});
test("kérelemre -> kérel", function() {deepEqual( Stem("kérelemre"), "kérel");});
test("kérelemről -> kérel", function() {deepEqual( Stem("kérelemről"), "kérel");});
test("kérelme -> kérelm", function() {deepEqual( Stem("kérelme"), "kérelm");});
test("kérelmek -> kérelm", function() {deepEqual( Stem("kérelmek"), "kérelm");});
test("kérelmekből -> kérelm", function() {deepEqual( Stem("kérelmekből"), "kérelm");});
test("kérelmeket -> kérelm", function() {deepEqual( Stem("kérelmeket"), "kérelm");});
test("kérelmekkel -> kérelm", function() {deepEqual( Stem("kérelmekkel"), "kérelm");});
test("kérelmekről -> kérelm", function() {deepEqual( Stem("kérelmekről"), "kérelm");});
test("kérelmet -> kérel", function() {deepEqual( Stem("kérelmet"), "kérel");});
test("kérelmezhetik -> kérelmezhet", function() {deepEqual( Stem("kérelmezhetik"), "kérelmezhet");});
test("kérelmezni -> kérelmezn", function() {deepEqual( Stem("kérelmezni"), "kérelmezn");});
test("kérelmezésére -> kérelmezés", function() {deepEqual( Stem("kérelmezésére"), "kérelmezés");});
test("kérelmező -> kérelmező", function() {deepEqual( Stem("kérelmező"), "kérelmező");});
test("kérelmezők -> kérelmező", function() {deepEqual( Stem("kérelmezők"), "kérelmező");});
test("kérelmezőnek -> kérelmező", function() {deepEqual( Stem("kérelmezőnek"), "kérelmező");});
test("kérelmezőnek -> kérelmező", function() {deepEqual( Stem("kérelmezőnek"), "kérelmező");});
test("kérelmezőt -> kérelmező", function() {deepEqual( Stem("kérelmezőt"), "kérelmező");});
test("kérelmében -> kérelm", function() {deepEqual( Stem("kérelmében"), "kérelm");});
test("kérelméhez -> kérelm", function() {deepEqual( Stem("kérelméhez"), "kérelm");});
test("kérelmének -> kérelm", function() {deepEqual( Stem("kérelmének"), "kérelm");});
test("kérelménél -> kérelm", function() {deepEqual( Stem("kérelménél"), "kérelm");});
test("kérelmére -> kérelm", function() {deepEqual( Stem("kérelmére"), "kérelm");});
test("kérelmét -> kérelm", function() {deepEqual( Stem("kérelmét"), "kérelm");});
test("kérelmüket -> kérelm", function() {deepEqual( Stem("kérelmüket"), "kérelm");});
test("kérelmükre -> kérelm", function() {deepEqual( Stem("kérelmükre"), "kérelm");});
test("kérette -> kérett", function() {deepEqual( Stem("kérette"), "kérett");});
test("kérgesednek -> kérges", function() {deepEqual( Stem("kérgesednek"), "kérges");});
test("kérget -> kérg", function() {deepEqual( Stem("kérget"), "kérg");});
test("kérhesse -> kérhess", function() {deepEqual( Stem("kérhesse"), "kérhess");});
test("kérhessen -> kérhess", function() {deepEqual( Stem("kérhessen"), "kérhess");});
test("kérhet -> kérh", function() {deepEqual( Stem("kérhet"), "kérh");});
test("kérheti -> kérhet", function() {deepEqual( Stem("kérheti"), "kérhet");});
test("kérhetik -> kérhet", function() {deepEqual( Stem("kérhetik"), "kérhet");});
test("kérhetnek -> kérhet", function() {deepEqual( Stem("kérhetnek"), "kérhet");});
test("kérhettek -> kérhett", function() {deepEqual( Stem("kérhettek"), "kérhett");});
test("kérhetünk -> kérhet", function() {deepEqual( Stem("kérhetünk"), "kérhet");});
test("kérhető -> kérhető", function() {deepEqual( Stem("kérhető"), "kérhető");});
test("kérhetők -> kérhető", function() {deepEqual( Stem("kérhetők"), "kérhető");});
test("kérkedtek -> kérkedt", function() {deepEqual( Stem("kérkedtek"), "kérkedt");});
test("kérkedését -> kérkedés", function() {deepEqual( Stem("kérkedését"), "kérkedés");});
test("kérlek -> kérl", function() {deepEqual( Stem("kérlek"), "kérl");});
test("kérlelik -> kérlel", function() {deepEqual( Stem("kérlelik"), "kérlel");});
test("kérlelhetetlen -> kérlelhetetl", function() {deepEqual( Stem("kérlelhetetlen"), "kérlelhetetl");});
test("kérlelt -> kérlel", function() {deepEqual( Stem("kérlelt"), "kérlel");});
test("kérlelés -> kérlelés", function() {deepEqual( Stem("kérlelés"), "kérlelés");});
test("kért -> kért", function() {deepEqual( Stem("kért"), "kért");});
test("kérne -> kérn", function() {deepEqual( Stem("kérne"), "kérn");});
test("kérnek -> kér", function() {deepEqual( Stem("kérnek"), "kér");});
test("kérnem -> kérn", function() {deepEqual( Stem("kérnem"), "kérn");});
test("kérni -> kérn", function() {deepEqual( Stem("kérni"), "kérn");});
test("kérnie -> kérn", function() {deepEqual( Stem("kérnie"), "kérn");});
test("kérniük -> kérn", function() {deepEqual( Stem("kérniük"), "kérn");});
test("kérnének -> kérn", function() {deepEqual( Stem("kérnének"), "kérn");});
test("kérte -> kért", function() {deepEqual( Stem("kérte"), "kért");});
test("kértek -> kért", function() {deepEqual( Stem("kértek"), "kért");});
test("kértem -> kért", function() {deepEqual( Stem("kértem"), "kért");});
test("kérték -> kérte", function() {deepEqual( Stem("kérték"), "kérte");});
test("kértél -> kértél", function() {deepEqual( Stem("kértél"), "kértél");});
test("kértük -> kért", function() {deepEqual( Stem("kértük"), "kért");});
test("kértünk -> kért", function() {deepEqual( Stem("kértünk"), "kért");});
test("kéri -> kér", function() {deepEqual( Stem("kéri"), "kér");});
test("kérik -> kér", function() {deepEqual( Stem("kérik"), "kér");});
test("kérj -> kérj", function() {deepEqual( Stem("kérj"), "kérj");});
test("kérje -> kér", function() {deepEqual( Stem("kérje"), "kér");});
test("kérjek -> kérj", function() {deepEqual( Stem("kérjek"), "kérj");});
test("kérjen -> kérj", function() {deepEqual( Stem("kérjen"), "kérj");});
test("kérjék -> kérje", function() {deepEqual( Stem("kérjék"), "kérje");});
test("kérek -> kér", function() {deepEqual( Stem("kérek"), "kér");});
test("kér -> kér", function() {deepEqual( Stem("kér"), "kér");});
test("kérem -> kér", function() {deepEqual( Stem("kérem"), "kér");});
test("kérjük -> kér", function() {deepEqual( Stem("kérjük"), "kér");});
test("kérünk -> kér", function() {deepEqual( Stem("kérünk"), "kér");});
test("kérve -> kérv", function() {deepEqual( Stem("kérve"), "kérv");});
test("kérvény -> kérvény", function() {deepEqual( Stem("kérvény"), "kérvény");});
test("kérvényre -> kérvény", function() {deepEqual( Stem("kérvényre"), "kérvény");});
test("kérvényt -> kérvény", function() {deepEqual( Stem("kérvényt"), "kérvény");});
test("kérés -> kérés", function() {deepEqual( Stem("kérés"), "kérés");});
test("kérése -> kérés", function() {deepEqual( Stem("kérése"), "kérés");});
test("kérései -> kérés", function() {deepEqual( Stem("kérései"), "kérés");});
test("kéréseink -> kérés", function() {deepEqual( Stem("kéréseink"), "kérés");});
test("kéréseit -> kérés", function() {deepEqual( Stem("kéréseit"), "kérés");});
test("kérések -> kérés", function() {deepEqual( Stem("kérések"), "kérés");});
test("kérésekből -> kérés", function() {deepEqual( Stem("kérésekből"), "kérés");});
test("kéréseket -> kérés", function() {deepEqual( Stem("kéréseket"), "kérés");});
test("kéréseknek -> kérés", function() {deepEqual( Stem("kéréseknek"), "kérés");});
test("kéréshez -> kérés", function() {deepEqual( Stem("kéréshez"), "kérés");});
test("kérésnek -> kérés", function() {deepEqual( Stem("kérésnek"), "kérés");});
test("kérésre -> kérés", function() {deepEqual( Stem("kérésre"), "kérés");});
test("kérésről -> kérés", function() {deepEqual( Stem("kérésről"), "kérés");});
test("kéréssel -> kérés", function() {deepEqual( Stem("kéréssel"), "kérés");});
test("kérést -> kérés", function() {deepEqual( Stem("kérést"), "kérés");});
test("kérésének -> kérés", function() {deepEqual( Stem("kérésének"), "kérés");});
test("kérésére -> kérés", function() {deepEqual( Stem("kérésére"), "kérés");});
test("kérését -> kérés", function() {deepEqual( Stem("kérését"), "kérés");});
test("kérési -> kérés", function() {deepEqual( Stem("kérési"), "kérés");});
test("kérődző -> kérődző", function() {deepEqual( Stem("kérődző"), "kérődző");});
test("kérőlapot -> kérőlap", function() {deepEqual( Stem("kérőlapot"), "kérőlap");});
test("kérőmre -> kérő", function() {deepEqual( Stem("kérőmre"), "kérő");});
test("kérő -> kérő", function() {deepEqual( Stem("kérő"), "kérő");});
test("kérőtől -> kérő", function() {deepEqual( Stem("kérőtől"), "kérő");});
test("késedelem -> késedel", function() {deepEqual( Stem("késedelem"), "késedel");});
test("késedelembe -> késedel", function() {deepEqual( Stem("késedelembe"), "késedel");});
test("késedelemért -> késedel", function() {deepEqual( Stem("késedelemért"), "késedel");});
test("késedelmes -> késedelmes", function() {deepEqual( Stem("késedelmes"), "késedelmes");});
test("késedelmesen -> késedelmes", function() {deepEqual( Stem("késedelmesen"), "késedelmes");});
test("késedelméből -> késedelm", function() {deepEqual( Stem("késedelméből"), "késedelm");});
test("késedelmesenfizetné -> késedelmesenfizetn", function() {deepEqual( Stem("késedelmesenfizetné"), "késedelmesenfizetn");});
test("késedelmeskedés -> késedelmeskedés", function() {deepEqual( Stem("késedelmeskedés"), "késedelmeskedés");});
test("késedelmi -> késedelm", function() {deepEqual( Stem("késedelmi"), "késedelm");});
test("kések -> kés", function() {deepEqual( Stem("kések"), "kés");});
test("kés -> kés", function() {deepEqual( Stem("kés"), "kés");});
test("kése -> kés", function() {deepEqual( Stem("kése"), "kés");});
test("késekkel -> kés", function() {deepEqual( Stem("késekkel"), "kés");});
test("késem -> kés", function() {deepEqual( Stem("késem"), "kés");});
test("késemet -> kés", function() {deepEqual( Stem("késemet"), "kés");});
test("késemért -> kés", function() {deepEqual( Stem("késemért"), "kés");});
test("késre -> kés", function() {deepEqual( Stem("késre"), "kés");});
test("kést -> kés", function() {deepEqual( Stem("kést"), "kés");});
test("késel -> késel", function() {deepEqual( Stem("késel"), "késel");});
test("késnek -> kés", function() {deepEqual( Stem("késnek"), "kés");});
test("késett -> késet", function() {deepEqual( Stem("késett"), "késet");});
test("késik -> kés", function() {deepEqual( Stem("késik"), "kés");});
test("késlekedett -> késlekedet", function() {deepEqual( Stem("késlekedett"), "késlekedet");});
test("késlekedik -> késleked", function() {deepEqual( Stem("késlekedik"), "késleked");});
test("késlekednek -> késl", function() {deepEqual( Stem("késlekednek"), "késl");});
test("késlekedés -> késlekedés", function() {deepEqual( Stem("késlekedés"), "késlekedés");});
test("késlekedésre -> késlekedés", function() {deepEqual( Stem("késlekedésre"), "késlekedés");});
test("késlekedését -> késlekedés", function() {deepEqual( Stem("késlekedését"), "késlekedés");});
test("késleltet -> késlelt", function() {deepEqual( Stem("késleltet"), "késlelt");});
test("késleltetett -> késleltetet", function() {deepEqual( Stem("késleltetett"), "késleltetet");});
test("késlelteti -> késleltet", function() {deepEqual( Stem("késlelteti"), "késleltet");});
test("késleltetni -> késleltetn", function() {deepEqual( Stem("késleltetni"), "késleltetn");});
test("késleltetnék -> késleltetne", function() {deepEqual( Stem("késleltetnék"), "késleltetne");});
test("késleltetve -> késleltetv", function() {deepEqual( Stem("késleltetve"), "késleltetv");});
test("késleltetés -> késleltetés", function() {deepEqual( Stem("késleltetés"), "késleltetés");});
test("késleltetésre -> késleltetés", function() {deepEqual( Stem("késleltetésre"), "késleltetés");});
test("késleltetéssel -> késleltetés", function() {deepEqual( Stem("késleltetéssel"), "késleltetés");});
test("késleltetést -> késleltetés", function() {deepEqual( Stem("késleltetést"), "késleltetés");});
test("késleltetésérzékeny -> késleltetésérzékeny", function() {deepEqual( Stem("késleltetésérzékeny"), "késleltetésérzékeny");});
test("késni -> késn", function() {deepEqual( Stem("késni"), "késn");});
test("késsek -> késs", function() {deepEqual( Stem("késsek"), "késs");});
test("késsem -> késs", function() {deepEqual( Stem("késsem"), "késs");});
test("késsük -> késs", function() {deepEqual( Stem("késsük"), "késs");});
test("késsünk -> késs", function() {deepEqual( Stem("késsünk"), "késs");});
test("késtek -> kést", function() {deepEqual( Stem("késtek"), "kést");});
test("késtem -> kést", function() {deepEqual( Stem("késtem"), "kést");});
test("késtük -> kést", function() {deepEqual( Stem("késtük"), "kést");});
test("késve -> késv", function() {deepEqual( Stem("késve"), "késv");});
test("készakarva -> készakarv", function() {deepEqual( Stem("készakarva"), "készakarv");});
test("készek -> kész", function() {deepEqual( Stem("készek"), "kész");});
test("kész -> kész", function() {deepEqual( Stem("kész"), "kész");});
test("készeket -> kész", function() {deepEqual( Stem("készeket"), "kész");});
test("készen -> kész", function() {deepEqual( Stem("készen"), "kész");});
test("késznek -> kész", function() {deepEqual( Stem("késznek"), "kész");});
test("készenlétben -> készenlét", function() {deepEqual( Stem("készenlétben"), "készenlét");});
test("készenléti -> készenlét", function() {deepEqual( Stem("készenléti"), "készenlét");});
test("készenlétihitel-megállapodáshoz -> készenlétihitel-megállapodás", function() {deepEqual( Stem("készenlétihitel-megállapodáshoz"), "készenlétihitel-megállapodás");});
test("készfizető -> készfizető", function() {deepEqual( Stem("készfizető"), "készfizető");});
test("készkiadásnak -> készkiadás", function() {deepEqual( Stem("készkiadásnak"), "készkiadás");});
test("készlet -> készl", function() {deepEqual( Stem("készlet"), "készl");});
test("készleteiket -> készlet", function() {deepEqual( Stem("készleteiket"), "készlet");});
test("készleteinek -> készlet", function() {deepEqual( Stem("készleteinek"), "készlet");});
test("készleteink -> készlet", function() {deepEqual( Stem("készleteink"), "készlet");});
test("készletek -> készlet", function() {deepEqual( Stem("készletek"), "készlet");});
test("készleteket -> készlet", function() {deepEqual( Stem("készleteket"), "készlet");});
test("készletekkel -> készlet", function() {deepEqual( Stem("készletekkel"), "készlet");});
test("készleteknek -> készlet", function() {deepEqual( Stem("készleteknek"), "készlet");});
test("készletet -> készlet", function() {deepEqual( Stem("készletet"), "készlet");});
test("készletre -> készlet", function() {deepEqual( Stem("készletre"), "készlet");});
test("készletgazdálkodásban -> készletgazdálkodás", function() {deepEqual( Stem("készletgazdálkodásban"), "készletgazdálkodás");});
test("készletgazdálkodással -> készletgazdálkodás", function() {deepEqual( Stem("készletgazdálkodással"), "készletgazdálkodás");});
test("készpénz-apport -> készpénz-appor", function() {deepEqual( Stem("készpénz-apport"), "készpénz-appor");});
test("készpénzapport -> készpénzappor", function() {deepEqual( Stem("készpénzapport"), "készpénzappor");});
test("készpénzbefizetéssel -> készpénzbefizetés", function() {deepEqual( Stem("készpénzbefizetéssel"), "készpénzbefizetés");});
test("készpénzforgalom -> készpénzforgal", function() {deepEqual( Stem("készpénzforgalom"), "készpénzforgal");});
test("készpénzben -> készpénz", function() {deepEqual( Stem("készpénzben"), "készpénz");});
test("készpénzből -> készpénz", function() {deepEqual( Stem("készpénzből"), "készpénz");});
test("készpénz -> készpénz", function() {deepEqual( Stem("készpénz"), "készpénz");});
test("készpénznek -> készpénz", function() {deepEqual( Stem("készpénznek"), "készpénz");});
test("készpénzre -> készpénz", function() {deepEqual( Stem("készpénzre"), "készpénz");});
test("készpénzt -> készpénz", function() {deepEqual( Stem("készpénzt"), "készpénz");});
test("készpénzzel -> készpénz", function() {deepEqual( Stem("készpénzzel"), "készpénz");});
test("készség -> készség", function() {deepEqual( Stem("készség"), "készség");});
test("készségeik -> készség", function() {deepEqual( Stem("készségeik"), "készség");});
test("készséget -> készség", function() {deepEqual( Stem("készséget"), "készség");});
test("készséggel -> készség", function() {deepEqual( Stem("készséggel"), "készség");});
test("készségét -> készség", function() {deepEqual( Stem("készségét"), "készség");});
test("készségesen -> készséges", function() {deepEqual( Stem("készségesen"), "készséges");});
test("készségfelmérést -> készségfelmérés", function() {deepEqual( Stem("készségfelmérést"), "készségfelmérés");});
test("készségtárgyakat -> készségtárgy", function() {deepEqual( Stem("készségtárgyakat"), "készségtárgy");});
test("késztermék -> készterme", function() {deepEqual( Stem("késztermék"), "készterme");});
test("késztermékárak -> késztermékár", function() {deepEqual( Stem("késztermékárak"), "késztermékár");});
test("késztetett -> késztetet", function() {deepEqual( Stem("késztetett"), "késztetet");});
test("készteti -> késztet", function() {deepEqual( Stem("készteti"), "késztet");});
test("késztet -> készt", function() {deepEqual( Stem("késztet"), "készt");});
test("késztette -> késztett", function() {deepEqual( Stem("késztette"), "késztett");});
test("késztették -> késztette", function() {deepEqual( Stem("késztették"), "késztette");});
test("késztetés -> késztetés", function() {deepEqual( Stem("késztetés"), "késztetés");});
test("késztetést -> késztetés", function() {deepEqual( Stem("késztetést"), "késztetés");});
test("készáruraktár -> készáruraktár", function() {deepEqual( Stem("készáruraktár"), "készáruraktár");});
test("készételekből -> készétel", function() {deepEqual( Stem("készételekből"), "készétel");});
test("készítendő -> készítendő", function() {deepEqual( Stem("készítendő"), "készítendő");});
test("készített -> készítet", function() {deepEqual( Stem("készített"), "készítet");});
test("készít -> készí", function() {deepEqual( Stem("készít"), "készí");});
test("készítek -> készít", function() {deepEqual( Stem("készítek"), "készít");});
test("készítem -> készít", function() {deepEqual( Stem("készítem"), "készít");});
test("készítenek -> készít", function() {deepEqual( Stem("készítenek"), "készít");});
test("készítenem -> készíten", function() {deepEqual( Stem("készítenem"), "készíten");});
test("készíteni -> készíten", function() {deepEqual( Stem("készíteni"), "készíten");});
test("készítenie -> készíten", function() {deepEqual( Stem("készítenie"), "készíten");});
test("készíteniük -> készíten", function() {deepEqual( Stem("készíteniük"), "készíten");});
test("készítenénk -> készítene", function() {deepEqual( Stem("készítenénk"), "készítene");});
test("készítenétek -> készítenét", function() {deepEqual( Stem("készítenétek"), "készítenét");});
test("készítette -> készített", function() {deepEqual( Stem("készítette"), "készített");});
test("készítettek -> készített", function() {deepEqual( Stem("készítettek"), "készített");});
test("készítettem -> készített", function() {deepEqual( Stem("készítettem"), "készített");});
test("készítettem -> készített", function() {deepEqual( Stem("készítettem"), "készített");});
test("készítették -> készítette", function() {deepEqual( Stem("készítették"), "készítette");});
test("készítettük -> készített", function() {deepEqual( Stem("készítettük"), "készített");});
test("készítettünk -> készített", function() {deepEqual( Stem("készítettünk"), "készített");});
test("készíthessen -> készíthess", function() {deepEqual( Stem("készíthessen"), "készíthess");});
test("készíthet -> készíth", function() {deepEqual( Stem("készíthet"), "készíth");});
test("készíthetnek -> készíthet", function() {deepEqual( Stem("készíthetnek"), "készíthet");});
test("készíthetünk -> készíthet", function() {deepEqual( Stem("készíthetünk"), "készíthet");});
test("készíthető -> készíthető", function() {deepEqual( Stem("készíthető"), "készíthető");});
test("készíthetők -> készíthető", function() {deepEqual( Stem("készíthetők"), "készíthető");});
test("készíti -> készít", function() {deepEqual( Stem("készíti"), "készít");});
test("készítik -> készít", function() {deepEqual( Stem("készítik"), "készít");});
test("készítjük -> készít", function() {deepEqual( Stem("készítjük"), "készít");});
test("készítsem -> készíts", function() {deepEqual( Stem("készítsem"), "készíts");});
test("készítsen -> készíts", function() {deepEqual( Stem("készítsen"), "készíts");});
test("készítsenek -> készíts", function() {deepEqual( Stem("készítsenek"), "készíts");});
test("készítsük -> készíts", function() {deepEqual( Stem("készítsük"), "készíts");});
test("készítsünk -> készíts", function() {deepEqual( Stem("készítsünk"), "készíts");});
test("készítünk -> készít", function() {deepEqual( Stem("készítünk"), "készít");});
test("készíttetnek -> készíttet", function() {deepEqual( Stem("készíttetnek"), "készíttet");});
test("készíttetni -> készíttetn", function() {deepEqual( Stem("készíttetni"), "készíttetn");});
test("készítve -> készítv", function() {deepEqual( Stem("készítve"), "készítv");});
test("készítési -> készítés", function() {deepEqual( Stem("készítési"), "készítés");});
test("készítése -> készítés", function() {deepEqual( Stem("készítése"), "készítés");});
test("készítésekor -> készítés", function() {deepEqual( Stem("készítésekor"), "készítés");});
test("készítésébe -> készítés", function() {deepEqual( Stem("készítésébe"), "készítés");});
test("készítésében -> készítés", function() {deepEqual( Stem("készítésében"), "készítés");});
test("készítéséből -> készítés", function() {deepEqual( Stem("készítéséből"), "készítés");});
test("készítéséhez -> készítés", function() {deepEqual( Stem("készítéséhez"), "készítés");});
test("készítésének -> készítés", function() {deepEqual( Stem("készítésének"), "készítés");});
test("készítésénél -> készítés", function() {deepEqual( Stem("készítésénél"), "készítés");});
test("készítésére -> készítés", function() {deepEqual( Stem("készítésére"), "készítés");});
test("készítését -> készítés", function() {deepEqual( Stem("készítését"), "készítés");});
test("készítésével -> készítés", function() {deepEqual( Stem("készítésével"), "készítés");});
test("készítő -> készítő", function() {deepEqual( Stem("készítő"), "készítő");});
test("készítői -> készítő", function() {deepEqual( Stem("készítői"), "készítő");});
test("készítőik -> készítő", function() {deepEqual( Stem("készítőik"), "készítő");});
test("készítőinek -> készítő", function() {deepEqual( Stem("készítőinek"), "készítő");});
test("készítőit -> készítő", function() {deepEqual( Stem("készítőit"), "készítő");});
test("készítője -> készítő", function() {deepEqual( Stem("készítője"), "készítő");});
test("készítők -> készítő", function() {deepEqual( Stem("készítők"), "készítő");});
test("készületlenül -> készületlen", function() {deepEqual( Stem("készületlenül"), "készületlen");});
test("készülhet -> készülh", function() {deepEqual( Stem("készülhet"), "készülh");});
test("készülhetek -> készülhet", function() {deepEqual( Stem("készülhetek"), "készülhet");});
test("készülhetett -> készülhetet", function() {deepEqual( Stem("készülhetett"), "készülhetet");});
test("készülhetnek -> készülhet", function() {deepEqual( Stem("készülhetnek"), "készülhet");});
test("készüljenek -> készül", function() {deepEqual( Stem("készüljenek"), "készül");});
test("készül -> kész", function() {deepEqual( Stem("készül"), "kész");});
test("készüljön -> készülj", function() {deepEqual( Stem("készüljön"), "készülj");});
test("készüljünk -> készülj", function() {deepEqual( Stem("készüljünk"), "készülj");});
test("készülne -> készüln", function() {deepEqual( Stem("készülne"), "készüln");});
test("készülnek -> készül", function() {deepEqual( Stem("készülnek"), "készül");});
test("készülni -> készüln", function() {deepEqual( Stem("készülni"), "készüln");});
test("készülniük -> készüln", function() {deepEqual( Stem("készülniük"), "készüln");});
test("készülnöm -> készülnö", function() {deepEqual( Stem("készülnöm"), "készülnö");});
test("készültek -> készült", function() {deepEqual( Stem("készültek"), "készült");});
test("készültem -> készült", function() {deepEqual( Stem("készültem"), "készült");});
test("készültél -> készültél", function() {deepEqual( Stem("készültél"), "készültél");});
test("készültünk -> készült", function() {deepEqual( Stem("készültünk"), "készült");});
test("készülök -> készül", function() {deepEqual( Stem("készülök"), "készül");});
test("készülünk -> készül", function() {deepEqual( Stem("készülünk"), "készül");});
test("készülnének -> készüln", function() {deepEqual( Stem("készülnének"), "készüln");});
test("készült -> készül", function() {deepEqual( Stem("készült"), "készül");});
test("készültjavításokat -> készültjavítás", function() {deepEqual( Stem("készültjavításokat"), "készültjavítás");});
test("készültség -> készültség", function() {deepEqual( Stem("készültség"), "készültség");});
test("készültségben -> készültség", function() {deepEqual( Stem("készültségben"), "készültség");});
test("készültséget -> készültség", function() {deepEqual( Stem("készültséget"), "készültség");});
test("készülve -> készülv", function() {deepEqual( Stem("készülve"), "készülv");});
test("készülék -> készüle", function() {deepEqual( Stem("készülék"), "készüle");});
test("készülékbe -> készüle", function() {deepEqual( Stem("készülékbe"), "készüle");});
test("készülékben -> készüle", function() {deepEqual( Stem("készülékben"), "készüle");});
test("készülékei -> készüle", function() {deepEqual( Stem("készülékei"), "készüle");});
test("készülékeit -> készüle", function() {deepEqual( Stem("készülékeit"), "készüle");});
test("készülékek -> készülék", function() {deepEqual( Stem("készülékek"), "készülék");});
test("készülékekben -> készülék", function() {deepEqual( Stem("készülékekben"), "készülék");});
test("készülékeket -> készülék", function() {deepEqual( Stem("készülékeket"), "készülék");});
test("készülékekhez -> készülék", function() {deepEqual( Stem("készülékekhez"), "készülék");});
test("készülékekkel -> készülék", function() {deepEqual( Stem("készülékekkel"), "készülék");});
test("készülékeknek -> készülék", function() {deepEqual( Stem("készülékeknek"), "készülék");});
test("készülékekre -> készülék", function() {deepEqual( Stem("készülékekre"), "készülék");});
test("készülékekről -> készülék", function() {deepEqual( Stem("készülékekről"), "készülék");});
test("készülékektől -> készülék", function() {deepEqual( Stem("készülékektől"), "készülék");});
test("készüléken -> készüle", function() {deepEqual( Stem("készüléken"), "készüle");});
test("készüléket -> készüle", function() {deepEqual( Stem("készüléket"), "készüle");});
test("készülékhez -> készüle", function() {deepEqual( Stem("készülékhez"), "készüle");});
test("készülékkel -> készüle", function() {deepEqual( Stem("készülékkel"), "készüle");});
test("készülékként -> készüle", function() {deepEqual( Stem("készülékként"), "készüle");});
test("készüléknek -> készüle", function() {deepEqual( Stem("készüléknek"), "készüle");});
test("készülékre -> készüle", function() {deepEqual( Stem("készülékre"), "készüle");});
test("készülékről -> készüle", function() {deepEqual( Stem("készülékről"), "készüle");});
test("készülékébe -> készüle", function() {deepEqual( Stem("készülékébe"), "készüle");});
test("készülékén -> készüle", function() {deepEqual( Stem("készülékén"), "készüle");});
test("készülékét -> készüle", function() {deepEqual( Stem("készülékét"), "készüle");});
test("készüléküket -> készüle", function() {deepEqual( Stem("készüléküket"), "készüle");});
test("készülékükkel -> készüle", function() {deepEqual( Stem("készülékükkel"), "készüle");});
test("készülékgyártókra -> készülékgyártó", function() {deepEqual( Stem("készülékgyártókra"), "készülékgyártó");});
test("készüléktípusok -> készüléktípus", function() {deepEqual( Stem("készüléktípusok"), "készüléktípus");});
test("készülékvásárlásokhoz -> készülékvásárlás", function() {deepEqual( Stem("készülékvásárlásokhoz"), "készülékvásárlás");});
test("készülés -> készülés", function() {deepEqual( Stem("készülés"), "készülés");});
test("készülési -> készülés", function() {deepEqual( Stem("készülési"), "készülés");});
test("készülő -> készülő", function() {deepEqual( Stem("készülő"), "készülő");});
test("készülőben -> készülő", function() {deepEqual( Stem("készülőben"), "készülő");});
test("készülődhetünk -> készülődhet", function() {deepEqual( Stem("készülődhetünk"), "készülődhet");});
test("készülődnek -> készülő", function() {deepEqual( Stem("készülődnek"), "készülő");});
test("készülődni -> készülődn", function() {deepEqual( Stem("készülődni"), "készülődn");});
test("készülődnöm -> készülődnö", function() {deepEqual( Stem("készülődnöm"), "készülődnö");});
test("készülődtek -> készülődt", function() {deepEqual( Stem("készülődtek"), "készülődt");});
test("készülődtem -> készülődt", function() {deepEqual( Stem("készülődtem"), "készülődt");});
test("készülődtünk -> készülődt", function() {deepEqual( Stem("készülődtünk"), "készülődt");});
test("készülődött -> készülődöt", function() {deepEqual( Stem("készülődött"), "készülődöt");});
test("készülődve -> készülődv", function() {deepEqual( Stem("készülődve"), "készülődv");});
test("készülődés -> készülődés", function() {deepEqual( Stem("készülődés"), "készülődés");});
test("készülődésbe -> készülődés", function() {deepEqual( Stem("készülődésbe"), "készülődés");});
test("készülődő -> készülődő", function() {deepEqual( Stem("készülődő"), "készülődő");});
test("késés -> késés", function() {deepEqual( Stem("késés"), "késés");});
test("késésben -> késés", function() {deepEqual( Stem("késésben"), "késés");});
test("késéseket -> késés", function() {deepEqual( Stem("késéseket"), "késés");});
test("késéssel -> késés", function() {deepEqual( Stem("késéssel"), "késés");});
test("késésért -> késés", function() {deepEqual( Stem("késésért"), "késés");});
test("késével -> kés", function() {deepEqual( Stem("késével"), "kés");});
test("későn -> késő", function() {deepEqual( Stem("későn"), "késő");});
test("késő -> késő", function() {deepEqual( Stem("késő"), "késő");});
test("később -> később", function() {deepEqual( Stem("később"), "később");});
test("későbbre -> később", function() {deepEqual( Stem("későbbre"), "később");});
test("későre -> késő", function() {deepEqual( Stem("későre"), "késő");});
test("későbbi -> később", function() {deepEqual( Stem("későbbi"), "később");});
test("későbbiek -> későbbi", function() {deepEqual( Stem("későbbiek"), "későbbi");});
test("későbbiekben -> későbbi", function() {deepEqual( Stem("későbbiekben"), "későbbi");});
test("későbbiekben -> későbbi", function() {deepEqual( Stem("későbbiekben"), "későbbi");});
test("későbbiekre -> későbbi", function() {deepEqual( Stem("későbbiekre"), "későbbi");});
test("késői -> késő", function() {deepEqual( Stem("késői"), "késő");});
test("későmodern-posztmodern -> későmodern-posztmoder", function() {deepEqual( Stem("későmodern-posztmodern"), "későmodern-posztmoder");});
test("két-három -> két-hár", function() {deepEqual( Stem("két-három"), "két-hár");});
test("két-háromféle -> két-háromfél", function() {deepEqual( Stem("két-háromféle"), "két-háromfél");});
test("két-háromszorosát -> két-háromszoros", function() {deepEqual( Stem("két-háromszorosát"), "két-háromszoros");});
test("két-háromszáz -> két-háromszáz", function() {deepEqual( Stem("két-háromszáz"), "két-háromszáz");});
test("két-két -> két-", function() {deepEqual( Stem("két-két"), "két-");});
test("két-öt -> két-", function() {deepEqual( Stem("két-öt"), "két-");});
test("kétcentes -> kétcentes", function() {deepEqual( Stem("kétcentes"), "kétcentes");});
test("kétcsatornás -> kétcsatornás", function() {deepEqual( Stem("kétcsatornás"), "kétcsatornás");});
test("kételkedett -> kételkedet", function() {deepEqual( Stem("kételkedett"), "kételkedet");});
test("kételkedhetett -> kételkedhetet", function() {deepEqual( Stem("kételkedhetett"), "kételkedhetet");});
test("kételkedik -> kételked", function() {deepEqual( Stem("kételkedik"), "kételked");});
test("kételkednek -> kétel", function() {deepEqual( Stem("kételkednek"), "kétel");});
test("kételkedni -> kételkedn", function() {deepEqual( Stem("kételkedni"), "kételkedn");});
test("kételkedtél -> kételkedtél", function() {deepEqual( Stem("kételkedtél"), "kételkedtél");});
test("kétely -> kétely", function() {deepEqual( Stem("kétely"), "kétely");});
test("kételyeim -> kétely", function() {deepEqual( Stem("kételyeim"), "kétely");});
test("kételyek -> kétely", function() {deepEqual( Stem("kételyek"), "kétely");});
test("kételyeket -> kétely", function() {deepEqual( Stem("kételyeket"), "kétely");});
test("kételyt -> kétely", function() {deepEqual( Stem("kételyt"), "kétely");});
test("kétes -> kétes", function() {deepEqual( Stem("kétes"), "kétes");});
test("kétesnek -> kétes", function() {deepEqual( Stem("kétesnek"), "kétes");});
test("kétesélyes -> kétesélyes", function() {deepEqual( Stem("kétesélyes"), "kétesélyes");});
test("kétezer -> kétezer", function() {deepEqual( Stem("kétezer"), "kétezer");});
test("kétezredik -> kétezred", function() {deepEqual( Stem("kétezredik"), "kétezred");});
test("kétezren -> kétezr", function() {deepEqual( Stem("kétezren"), "kétezr");});
test("kétfajta -> kétfajt", function() {deepEqual( Stem("kétfajta"), "kétfajt");});
test("kétfedeles -> kétfedeles", function() {deepEqual( Stem("kétfedeles"), "kétfedeles");});
test("kétfelé -> kétfel", function() {deepEqual( Stem("kétfelé"), "kétfel");});
test("kétfordulós -> kétfordulós", function() {deepEqual( Stem("kétfordulós"), "kétfordulós");});
test("kétféle -> kétfél", function() {deepEqual( Stem("kétféle"), "kétfél");});
test("kétféleképp -> kétfél", function() {deepEqual( Stem("kétféleképp"), "kétfél");});
test("kétféleképpen -> kétfél", function() {deepEqual( Stem("kétféleképpen"), "kétfél");});
test("kétgólos -> kétgólos", function() {deepEqual( Stem("kétgólos"), "kétgólos");});
test("kétharmad -> kétharm", function() {deepEqual( Stem("kétharmad"), "kétharm");});
test("kétharmada -> kétharmad", function() {deepEqual( Stem("kétharmada"), "kétharmad");});
test("kétharmaddal -> kétharm", function() {deepEqual( Stem("kétharmaddal"), "kétharm");});
test("kétharmados -> kétharmados", function() {deepEqual( Stem("kétharmados"), "kétharmados");});
test("kétharmadot -> kétharm", function() {deepEqual( Stem("kétharmadot"), "kétharm");});
test("kétharmadában -> kétharmad", function() {deepEqual( Stem("kétharmadában"), "kétharmad");});
test("kétharmadára -> kétharmad", function() {deepEqual( Stem("kétharmadára"), "kétharmad");});
test("kétharmadát -> kétharmad", function() {deepEqual( Stem("kétharmadát"), "kétharmad");});
test("kéthavi -> kéthav", function() {deepEqual( Stem("kéthavi"), "kéthav");});
test("kéthavonta -> kéthavont", function() {deepEqual( Stem("kéthavonta"), "kéthavont");});
test("kéthetenkénti -> kéthetenként", function() {deepEqual( Stem("kéthetenkénti"), "kéthetenként");});
test("kéthetes -> kéthetes", function() {deepEqual( Stem("kéthetes"), "kéthetes");});
test("kéthónapi -> kéthónap", function() {deepEqual( Stem("kéthónapi"), "kéthónap");});
test("kétirányú -> kétirányú", function() {deepEqual( Stem("kétirányú"), "kétirányú");});
test("kétismeretlenes -> kétismeretlenes", function() {deepEqual( Stem("kétismeretlenes"), "kétismeretlenes");});
test("kétkedés -> kétkedés", function() {deepEqual( Stem("kétkedés"), "kétkedés");});
test("kétkedéseit -> kétkedés", function() {deepEqual( Stem("kétkedéseit"), "kétkedés");});
test("kétkerekű -> kétkerekű", function() {deepEqual( Stem("kétkerekű"), "kétkerekű");});
test("kétlaki -> kétl", function() {deepEqual( Stem("kétlaki"), "kétl");});
test("kétlábon -> kétláb", function() {deepEqual( Stem("kétlábon"), "kétláb");});
test("kétlépcsőben -> kétlépcső", function() {deepEqual( Stem("kétlépcsőben"), "kétlépcső");});
test("kétlépcsős -> kétlépcsős", function() {deepEqual( Stem("kétlépcsős"), "kétlépcsős");});
test("kétmilliárd -> kétmilliár", function() {deepEqual( Stem("kétmilliárd"), "kétmilliár");});
test("kétmilliárdos -> kétmilliárdos", function() {deepEqual( Stem("kétmilliárdos"), "kétmilliárdos");});
test("kétmillió -> kétmillió", function() {deepEqual( Stem("kétmillió"), "kétmillió");});
test("kétmilliónyi -> kétmillióny", function() {deepEqual( Stem("kétmilliónyi"), "kétmillióny");});
test("kétméteres -> kétméteres", function() {deepEqual( Stem("kétméteres"), "kétméteres");});
test("kétméternyire -> kétméterny", function() {deepEqual( Stem("kétméternyire"), "kétméterny");});
test("kétnapos -> kétnapos", function() {deepEqual( Stem("kétnapos"), "kétnapos");});
test("kétnormás -> kétnormás", function() {deepEqual( Stem("kétnormás"), "kétnormás");});
test("kétnyelvű -> kétnyelvű", function() {deepEqual( Stem("kétnyelvű"), "kétnyelvű");});
test("kétoldalas -> kétoldalas", function() {deepEqual( Stem("kétoldalas"), "kétoldalas");});
test("kétoldalasan -> kétoldalas", function() {deepEqual( Stem("kétoldalasan"), "kétoldalas");});
test("kétoldali -> kétoldal", function() {deepEqual( Stem("kétoldali"), "kétoldal");});
test("kétoldalú -> kétoldalú", function() {deepEqual( Stem("kétoldalú"), "kétoldalú");});
test("kétosztatú -> kétosztatú", function() {deepEqual( Stem("kétosztatú"), "kétosztatú");});
test("kétprocesszoros -> kétprocesszoros", function() {deepEqual( Stem("kétprocesszoros"), "kétprocesszoros");});
test("kétszemközt -> kétszemköz", function() {deepEqual( Stem("kétszemközt"), "kétszemköz");});
test("kétszemélyes -> kétszemélyes", function() {deepEqual( Stem("kétszemélyes"), "kétszemélyes");});
test("kétszer -> kétszer", function() {deepEqual( Stem("kétszer"), "kétszer");});
test("két -> ké", function() {deepEqual( Stem("két"), "ké");});
test("kétszer-háromszor -> kétszer-háromszor", function() {deepEqual( Stem("kétszer-háromszor"), "kétszer-háromszor");});
test("kétszeres -> kétszeres", function() {deepEqual( Stem("kétszeres"), "kétszeres");});
test("kétszerese -> kétszeres", function() {deepEqual( Stem("kétszerese"), "kétszeres");});
test("kétszeresen -> kétszeres", function() {deepEqual( Stem("kétszeresen"), "kétszeres");});
test("kétszeresére -> kétszeres", function() {deepEqual( Stem("kétszeresére"), "kétszeres");});
test("kétszeresét -> kétszeres", function() {deepEqual( Stem("kétszeresét"), "kétszeres");});
test("kétszeresével -> kétszeres", function() {deepEqual( Stem("kétszeresével"), "kétszeres");});
test("kétszeri -> kétszer", function() {deepEqual( Stem("kétszeri"), "kétszer");});
test("kétszerte -> kétszert", function() {deepEqual( Stem("kétszerte"), "kétszert");});
test("kétszintes -> kétszintes", function() {deepEqual( Stem("kétszintes"), "kétszintes");});
test("kétszobás -> kétszobás", function() {deepEqual( Stem("kétszobás"), "kétszobás");});
test("kétszáz -> kétszáz", function() {deepEqual( Stem("kétszáz"), "kétszáz");});
test("kétszázan -> kétszáz", function() {deepEqual( Stem("kétszázan"), "kétszáz");});
test("kétszázezer -> kétszázezer", function() {deepEqual( Stem("kétszázezer"), "kétszázezer");});
test("kétszázezren -> kétszázezr", function() {deepEqual( Stem("kétszázezren"), "kétszázezr");});
test("kétszázötven -> kétszázötv", function() {deepEqual( Stem("kétszázötven"), "kétszázötv");});
test("kétszínű -> kétszínű", function() {deepEqual( Stem("kétszínű"), "kétszínű");});
test("kétszínűséget -> kétszínűség", function() {deepEqual( Stem("kétszínűséget"), "kétszínűség");});
test("kétszülős -> kétszülős", function() {deepEqual( Stem("kétszülős"), "kétszülős");});
test("kétsávos -> kétsávos", function() {deepEqual( Stem("kétsávos"), "kétsávos");});
test("kétség -> kétség", function() {deepEqual( Stem("kétség"), "kétség");});
test("kétségbe -> kétség", function() {deepEqual( Stem("kétségbe"), "kétség");});
test("kétségben -> kétség", function() {deepEqual( Stem("kétségben"), "kétség");});
test("kétséget -> kétség", function() {deepEqual( Stem("kétséget"), "kétség");});
test("kétsége -> kétség", function() {deepEqual( Stem("kétsége"), "kétség");});
test("kétségei -> kétség", function() {deepEqual( Stem("kétségei"), "kétség");});
test("kétségeket -> kétség", function() {deepEqual( Stem("kétségeket"), "kétség");});
test("kétségbeesetten -> kétségbeesett", function() {deepEqual( Stem("kétségbeesetten"), "kétségbeesett");});
test("kétségbeesettnek -> kétségbeesett", function() {deepEqual( Stem("kétségbeesettnek"), "kétségbeesett");});
test("kétségbeesve -> kétségbeesv", function() {deepEqual( Stem("kétségbeesve"), "kétségbeesv");});
test("kétségbeesés -> kétségbeesés", function() {deepEqual( Stem("kétségbeesés"), "kétségbeesés");});
test("kétségbeesésből -> kétségbeesés", function() {deepEqual( Stem("kétségbeesésből"), "kétségbeesés");});
test("kétségbeesésem -> kétségbeesés", function() {deepEqual( Stem("kétségbeesésem"), "kétségbeesés");});
test("kétségbevonhatatlan -> kétségbevonhatatl", function() {deepEqual( Stem("kétségbevonhatatlan"), "kétségbevonhatatl");});
test("kétségbevonhatatlanul -> kétségbevonhatatlan", function() {deepEqual( Stem("kétségbevonhatatlanul"), "kétségbevonhatatlan");});
test("kétséges -> kétséges", function() {deepEqual( Stem("kétséges"), "kétséges");});
test("kétségesebbé -> kétségeseb", function() {deepEqual( Stem("kétségesebbé"), "kétségeseb");});
test("kétségesnek -> kétséges", function() {deepEqual( Stem("kétségesnek"), "kétséges");});
test("kétségessé -> kétséges", function() {deepEqual( Stem("kétségessé"), "kétséges");});
test("kétségtelennek -> kétségtelen", function() {deepEqual( Stem("kétségtelennek"), "kétségtelen");});
test("kétségtelenné -> kétségtelen", function() {deepEqual( Stem("kétségtelenné"), "kétségtelen");});
test("kéttagú -> kéttagú", function() {deepEqual( Stem("kéttagú"), "kéttagú");});
test("kéttechnikát -> kéttechn", function() {deepEqual( Stem("kéttechnikát"), "kéttechn");});
test("kéttucatnyi -> kéttucatny", function() {deepEqual( Stem("kéttucatnyi"), "kéttucatny");});
test("kétunciás -> kétunciás", function() {deepEqual( Stem("kétunciás"), "kétunciás");});
test("kétvállra -> kétváll", function() {deepEqual( Stem("kétvállra"), "kétváll");});
test("kétértelmű -> kétértelmű", function() {deepEqual( Stem("kétértelmű"), "kétértelmű");});
test("kétértelműek -> kétértelmű", function() {deepEqual( Stem("kétértelműek"), "kétértelmű");});
test("kétértelműséget -> kétértelműség", function() {deepEqual( Stem("kétértelműséget"), "kétértelműség");});
test("kétévenként -> kétév", function() {deepEqual( Stem("kétévenként"), "kétév");});
test("kétévenkénti -> kétévenként", function() {deepEqual( Stem("kétévenkénti"), "kétévenként");});
test("kétéves -> kétéves", function() {deepEqual( Stem("kétéves"), "kétéves");});
test("kétévesen -> kétéves", function() {deepEqual( Stem("kétévesen"), "kétéves");});
test("kétévesnél -> kétéves", function() {deepEqual( Stem("kétévesnél"), "kétéves");});
test("kétóra -> kétó", function() {deepEqual( Stem("kétóra"), "kétó");});
test("kétórás -> kétórás", function() {deepEqual( Stem("kétórás"), "kétórás");});
test("kéz -> kéz", function() {deepEqual( Stem("kéz"), "kéz");});
test("kézbe -> kéz", function() {deepEqual( Stem("kézbe"), "kéz");});
test("kézben -> kéz", function() {deepEqual( Stem("kézben"), "kéz");});
test("kezem -> kez", function() {deepEqual( Stem("kezem"), "kez");});
test("kezembe -> kez", function() {deepEqual( Stem("kezembe"), "kez");});
test("kezemben -> kez", function() {deepEqual( Stem("kezemben"), "kez");});
test("kezemből -> kez", function() {deepEqual( Stem("kezemből"), "kez");});
test("kezemet -> kez", function() {deepEqual( Stem("kezemet"), "kez");});
test("kezemmel -> kez", function() {deepEqual( Stem("kezemmel"), "kez");});
test("kezemről -> kez", function() {deepEqual( Stem("kezemről"), "kez");});
test("kezet -> kez", function() {deepEqual( Stem("kezet"), "kez");});
test("kezébe -> kez", function() {deepEqual( Stem("kezébe"), "kez");});
test("kezében -> kez", function() {deepEqual( Stem("kezében"), "kez");});
test("kezéből -> kez", function() {deepEqual( Stem("kezéből"), "kez");});
test("kezéhez -> kez", function() {deepEqual( Stem("kezéhez"), "kez");});
test("kezén -> kez", function() {deepEqual( Stem("kezén"), "kez");});
test("kezének -> kez", function() {deepEqual( Stem("kezének"), "kez");});
test("kezére -> kez", function() {deepEqual( Stem("kezére"), "kez");});
test("kezéről -> kez", function() {deepEqual( Stem("kezéről"), "kez");});
test("kezét -> kez", function() {deepEqual( Stem("kezét"), "kez");});
test("kezével -> kez", function() {deepEqual( Stem("kezével"), "kez");});
test("kezük -> kez", function() {deepEqual( Stem("kezük"), "kez");});
test("kezükbe -> kez", function() {deepEqual( Stem("kezükbe"), "kez");});
test("kezükben -> kez", function() {deepEqual( Stem("kezükben"), "kez");});
test("kezüket -> kez", function() {deepEqual( Stem("kezüket"), "kez");});
test("kezünk -> kez", function() {deepEqual( Stem("kezünk"), "kez");});
test("kezünkbe -> kez", function() {deepEqual( Stem("kezünkbe"), "kez");});
test("kezünkben -> kez", function() {deepEqual( Stem("kezünkben"), "kez");});
test("kezünket -> kez", function() {deepEqual( Stem("kezünket"), "kez");});
test("kezünkkel -> kez", function() {deepEqual( Stem("kezünkkel"), "kez");});
test("kezünkre -> kez", function() {deepEqual( Stem("kezünkre"), "kez");});
test("kezünkön -> kez", function() {deepEqual( Stem("kezünkön"), "kez");});
test("keze -> kez", function() {deepEqual( Stem("keze"), "kez");});
test("kezedbe -> kez", function() {deepEqual( Stem("kezedbe"), "kez");});
test("kezedben -> kez", function() {deepEqual( Stem("kezedben"), "kez");});
test("kezedet -> kez", function() {deepEqual( Stem("kezedet"), "kez");});
test("kezeiből -> kez", function() {deepEqual( Stem("kezeiből"), "kez");});
test("kezeimből -> kez", function() {deepEqual( Stem("kezeimből"), "kez");});
test("kezeink -> kez", function() {deepEqual( Stem("kezeink"), "kez");});
test("kezek -> kez", function() {deepEqual( Stem("kezek"), "kez");});
test("kezekbe -> kez", function() {deepEqual( Stem("kezekbe"), "kez");});
test("kezekben -> kez", function() {deepEqual( Stem("kezekben"), "kez");});
test("kezekkel -> kez", function() {deepEqual( Stem("kezekkel"), "kez");});
test("kézből -> kéz", function() {deepEqual( Stem("kézből"), "kéz");});
test("kézen -> kéz", function() {deepEqual( Stem("kézen"), "kéz");});
test("kézhez -> kéz", function() {deepEqual( Stem("kézhez"), "kéz");});
test("kéznél -> kéz", function() {deepEqual( Stem("kéznél"), "kéz");});
test("kézre -> kéz", function() {deepEqual( Stem("kézre"), "kéz");});
test("kézről -> kéz", function() {deepEqual( Stem("kézről"), "kéz");});
test("kézzé -> kéz", function() {deepEqual( Stem("kézzé"), "kéz");});
test("kézzel -> kéz", function() {deepEqual( Stem("kézzel"), "kéz");});
test("kézbentartása -> kézbentartás", function() {deepEqual( Stem("kézbentartása"), "kézbentartás");});
test("kézbesíteni -> kézbesíten", function() {deepEqual( Stem("kézbesíteni"), "kézbesíten");});
test("kézbesíti -> kézbesít", function() {deepEqual( Stem("kézbesíti"), "kézbesít");});
test("kézbesített -> kézbesítet", function() {deepEqual( Stem("kézbesített"), "kézbesítet");});
test("kézbesítés -> kézbesítés", function() {deepEqual( Stem("kézbesítés"), "kézbesítés");});
test("kézbesítése -> kézbesítés", function() {deepEqual( Stem("kézbesítése"), "kézbesítés");});
test("kézbesítéshez -> kézbesítés", function() {deepEqual( Stem("kézbesítéshez"), "kézbesítés");});
test("kézbesítéssel -> kézbesítés", function() {deepEqual( Stem("kézbesítéssel"), "kézbesítés");});
test("kézbesítéstől -> kézbesítés", function() {deepEqual( Stem("kézbesítéstől"), "kézbesítés");});
test("kézbesítő -> kézbesítő", function() {deepEqual( Stem("kézbesítő"), "kézbesítő");});
test("kézcsókkal -> kézcsó", function() {deepEqual( Stem("kézcsókkal"), "kézcsó");});
test("kézelőjét -> kézelő", function() {deepEqual( Stem("kézelőjét"), "kézelő");});
test("kézenfekvő -> kézenfekvő", function() {deepEqual( Stem("kézenfekvő"), "kézenfekvő");});
test("kézenfekvően -> kézenfekvő", function() {deepEqual( Stem("kézenfekvően"), "kézenfekvő");});
test("kézenfekvőnek -> kézenfekvő", function() {deepEqual( Stem("kézenfekvőnek"), "kézenfekvő");});
test("kézfekvően -> kézfekvő", function() {deepEqual( Stem("kézfekvően"), "kézfekvő");});
test("kézhezvétele -> kézhezvétel", function() {deepEqual( Stem("kézhezvétele"), "kézhezvétel");});
test("kézhezvételét -> kézhezvétel", function() {deepEqual( Stem("kézhezvételét"), "kézhezvétel");});
test("kézhezvételétől -> kézhezvétel", function() {deepEqual( Stem("kézhezvételétől"), "kézhezvétel");});
test("kézi -> kéz", function() {deepEqual( Stem("kézi"), "kéz");});
test("kézieszközben -> kézieszköz", function() {deepEqual( Stem("kézieszközben"), "kézieszköz");});
test("kézieszközök -> kézieszköz", function() {deepEqual( Stem("kézieszközök"), "kézieszköz");});
test("kézieszközökhöz -> kézieszköz", function() {deepEqual( Stem("kézieszközökhöz"), "kézieszköz");});
test("kézifék -> kézife", function() {deepEqual( Stem("kézifék"), "kézife");});
test("kéziféket -> kézife", function() {deepEqual( Stem("kéziféket"), "kézife");});
test("kézigránát -> kézigrán", function() {deepEqual( Stem("kézigránát"), "kézigrán");});
test("kézigránátok -> kézigránát", function() {deepEqual( Stem("kézigránátok"), "kézigránát");});
test("kézigránátokat -> kézigránát", function() {deepEqual( Stem("kézigránátokat"), "kézigránát");});
test("kézigránátot -> kézigránát", function() {deepEqual( Stem("kézigránátot"), "kézigránát");});
test("kézigépekhez -> kézigép", function() {deepEqual( Stem("kézigépekhez"), "kézigép");});
test("kézigépekre -> kézigép", function() {deepEqual( Stem("kézigépekre"), "kézigép");});
test("kézigépekről -> kézigép", function() {deepEqual( Stem("kézigépekről"), "kézigép");});
test("kézigéppel -> kézigép", function() {deepEqual( Stem("kézigéppel"), "kézigép");});
test("kézikészülékeket -> kézikészülék", function() {deepEqual( Stem("kézikészülékeket"), "kézikészülék");});
test("kézikönyvben -> kézikönyv", function() {deepEqual( Stem("kézikönyvben"), "kézikönyv");});
test("kézikönyve -> kézikönyv", function() {deepEqual( Stem("kézikönyve"), "kézikönyv");});
test("kézikönyvek -> kézikönyv", function() {deepEqual( Stem("kézikönyvek"), "kézikönyv");});
test("kézikönyvekből -> kézikönyv", function() {deepEqual( Stem("kézikönyvekből"), "kézikönyv");});
test("kézikönyvekkel -> kézikönyv", function() {deepEqual( Stem("kézikönyvekkel"), "kézikönyv");});
test("kézikönyvet -> kézikönyv", function() {deepEqual( Stem("kézikönyvet"), "kézikönyv");});
test("kézilabda -> kézilabd", function() {deepEqual( Stem("kézilabda"), "kézilabd");});
test("kézilabda-együttes -> kézilabda-együttes", function() {deepEqual( Stem("kézilabda-együttes"), "kézilabda-együttes");});
test("kézilabda-mérkőzést -> kézilabda-mérkőzés", function() {deepEqual( Stem("kézilabda-mérkőzést"), "kézilabda-mérkőzés");});
test("kézilabda-válogatott -> kézilabda-válogatot", function() {deepEqual( Stem("kézilabda-válogatott"), "kézilabda-válogatot");});
test("kézilabdacsapatának -> kézilabdacsapat", function() {deepEqual( Stem("kézilabdacsapatának"), "kézilabdacsapat");});
test("kézilabdaedzésre -> kézilabdaedzés", function() {deepEqual( Stem("kézilabdaedzésre"), "kézilabdaedzés");});
test("kézilabdaedző -> kézilabdaedző", function() {deepEqual( Stem("kézilabdaedző"), "kézilabdaedző");});
test("kézilabdapénz -> kézilabdapénz", function() {deepEqual( Stem("kézilabdapénz"), "kézilabdapénz");});
test("kézilabdás -> kézilabdás", function() {deepEqual( Stem("kézilabdás"), "kézilabdás");});
test("kézilabdázhatunk -> kézilabdázhat", function() {deepEqual( Stem("kézilabdázhatunk"), "kézilabdázhat");});
test("kézilabdázni -> kézilabdázn", function() {deepEqual( Stem("kézilabdázni"), "kézilabdázn");});
test("kézilabdáztak -> kézilabdázt", function() {deepEqual( Stem("kézilabdáztak"), "kézilabdázt");});
test("kézilabdázó -> kézilabdázó", function() {deepEqual( Stem("kézilabdázó"), "kézilabdázó");});
test("kézileg -> kézileg", function() {deepEqual( Stem("kézileg"), "kézileg");});
test("kézimunka -> kézimun", function() {deepEqual( Stem("kézimunka"), "kézimun");});
test("kézimunkával -> kézimun", function() {deepEqual( Stem("kézimunkával"), "kézimun");});
test("kézirathalmazokra -> kézirathalmaz", function() {deepEqual( Stem("kézirathalmazokra"), "kézirathalmaz");});
test("kézirat -> kézir", function() {deepEqual( Stem("kézirat"), "kézir");});
test("kéziratban -> kézirat", function() {deepEqual( Stem("kéziratban"), "kézirat");});
test("kéziratok -> kézirat", function() {deepEqual( Stem("kéziratok"), "kézirat");});
test("kéziratokból -> kézirat", function() {deepEqual( Stem("kéziratokból"), "kézirat");});
test("kéziratokon -> kézirat", function() {deepEqual( Stem("kéziratokon"), "kézirat");});
test("kéziratot -> kézirat", function() {deepEqual( Stem("kéziratot"), "kézirat");});
test("kéziratára -> kézirat", function() {deepEqual( Stem("kéziratára"), "kézirat");});
test("kéziratát -> kézirat", function() {deepEqual( Stem("kéziratát"), "kézirat");});
test("kéziratos -> kéziratos", function() {deepEqual( Stem("kéziratos"), "kéziratos");});
test("kézisek -> kézis", function() {deepEqual( Stem("kézisek"), "kézis");});
test("kéziszerszámokkal -> kéziszerszám", function() {deepEqual( Stem("kéziszerszámokkal"), "kéziszerszám");});
test("kéziszámítógép -> kéziszámítógép", function() {deepEqual( Stem("kéziszámítógép"), "kéziszámítógép");});
test("kéziszámítógépeket -> kéziszámítógép", function() {deepEqual( Stem("kéziszámítógépeket"), "kéziszámítógép");});
test("kéziszámítógépet -> kéziszámítógép", function() {deepEqual( Stem("kéziszámítógépet"), "kéziszámítógép");});
test("kézizünk -> kéziz", function() {deepEqual( Stem("kézizünk"), "kéziz");});
test("kézjegy -> kézjegy", function() {deepEqual( Stem("kézjegy"), "kézjegy");});
test("kézjegyével -> kézjegy", function() {deepEqual( Stem("kézjegyével"), "kézjegy");});
test("kézmozdulat -> kézmozdul", function() {deepEqual( Stem("kézmozdulat"), "kézmozdul");});
test("kézmozdulata -> kézmozdulat", function() {deepEqual( Stem("kézmozdulata"), "kézmozdulat");});
test("kézmozdulatok -> kézmozdulat", function() {deepEqual( Stem("kézmozdulatok"), "kézmozdulat");});
test("kézmozdulattal -> kézmozdul", function() {deepEqual( Stem("kézmozdulattal"), "kézmozdul");});
test("kézművesmesterségek -> kézművesmesterség", function() {deepEqual( Stem("kézművesmesterségek"), "kézművesmesterség");});
test("kézszerűség -> kézszerűség", function() {deepEqual( Stem("kézszerűség"), "kézszerűség");});
test("kézsége -> kézség", function() {deepEqual( Stem("kézsége"), "kézség");});
test("kéztörlőket -> kéztörlő", function() {deepEqual( Stem("kéztörlőket"), "kéztörlő");});
test("kézzelfogható -> kézzelfogható", function() {deepEqual( Stem("kézzelfogható"), "kézzelfogható");});
test("kézzelfoghatóvá -> kézzelfogható", function() {deepEqual( Stem("kézzelfoghatóvá"), "kézzelfogható");});
test("kézírás-felismerés -> kézírás-felismerés", function() {deepEqual( Stem("kézírás-felismerés"), "kézírás-felismerés");});
test("kézírás-felismerésben -> kézírás-felismerés", function() {deepEqual( Stem("kézírás-felismerésben"), "kézírás-felismerés");});
test("kézírásfelismerő -> kézírásfelismerő", function() {deepEqual( Stem("kézírásfelismerő"), "kézírásfelismerő");});
test("kézírásos -> kézírásos", function() {deepEqual( Stem("kézírásos"), "kézírásos");});
test("kézírással -> kézírás", function() {deepEqual( Stem("kézírással"), "kézírás");});
test("kézírásával -> kézírás", function() {deepEqual( Stem("kézírásával"), "kézírás");});
test("kézügyességgel -> kézügyesség", function() {deepEqual( Stem("kézügyességgel"), "kézügyesség");});
test("kézügyességével -> kézügyesség", function() {deepEqual( Stem("kézügyességével"), "kézügyesség");});
test("kézügyességünknek -> kézügyesség", function() {deepEqual( Stem("kézügyességünknek"), "kézügyesség");});
test("kígyó-szerű -> kígyó-szerű", function() {deepEqual( Stem("kígyó-szerű"), "kígyó-szerű");});
test("kígyók -> kígyó", function() {deepEqual( Stem("kígyók"), "kígyó");});
test("kígyó -> kígyó", function() {deepEqual( Stem("kígyó"), "kígyó");});
test("kígyókon -> kígyó", function() {deepEqual( Stem("kígyókon"), "kígyó");});
test("kígyót -> kígyó", function() {deepEqual( Stem("kígyót"), "kígyó");});
test("kígyóztak -> kígyózt", function() {deepEqual( Stem("kígyóztak"), "kígyózt");});
test("kígyózó -> kígyózó", function() {deepEqual( Stem("kígyózó"), "kígyózó");});
test("kíméletes -> kíméletes", function() {deepEqual( Stem("kíméletes"), "kíméletes");});
test("kíméletesek -> kíméletes", function() {deepEqual( Stem("kíméletesek"), "kíméletes");});
test("kíméletesen -> kíméletes", function() {deepEqual( Stem("kíméletesen"), "kíméletes");});
test("kíméletlen -> kíméletl", function() {deepEqual( Stem("kíméletlen"), "kíméletl");});
test("kíméletlenül -> kíméletlen", function() {deepEqual( Stem("kíméletlenül"), "kíméletlen");});
test("kíméletlensége -> kíméletlenség", function() {deepEqual( Stem("kíméletlensége"), "kíméletlenség");});
test("kímélheti -> kímélhet", function() {deepEqual( Stem("kímélheti"), "kímélhet");});
test("kímélném -> kímélne", function() {deepEqual( Stem("kímélném"), "kímélne");});
test("kímélték -> kímélte", function() {deepEqual( Stem("kímélték"), "kímélte");});
test("kímélünk -> kímél", function() {deepEqual( Stem("kímélünk"), "kímél");});
test("kínai -> kín", function() {deepEqual( Stem("kínai"), "kín");});
test("kínaiak -> kínai", function() {deepEqual( Stem("kínaiak"), "kínai");});
test("kínaiakat -> kínai", function() {deepEqual( Stem("kínaiakat"), "kínai");});
test("kínaiakkal -> kínai", function() {deepEqual( Stem("kínaiakkal"), "kínai");});
test("kínaiaknak -> kínai", function() {deepEqual( Stem("kínaiaknak"), "kínai");});
test("kínaiban -> kín", function() {deepEqual( Stem("kínaiban"), "kín");});
test("kínban -> kín", function() {deepEqual( Stem("kínban"), "kín");});
test("kín -> kí", function() {deepEqual( Stem("kín"), "kí");});
test("kínja -> kín", function() {deepEqual( Stem("kínja"), "kín");});
test("kínjai -> kín", function() {deepEqual( Stem("kínjai"), "kín");});
test("kínjaikat -> kín", function() {deepEqual( Stem("kínjaikat"), "kín");});
test("kínjaitól -> kín", function() {deepEqual( Stem("kínjaitól"), "kín");});
test("kínjában -> kín", function() {deepEqual( Stem("kínjában"), "kín");});
test("kínnal -> kí", function() {deepEqual( Stem("kínnal"), "kí");});
test("kínok -> kín", function() {deepEqual( Stem("kínok"), "kín");});
test("kínokat -> kín", function() {deepEqual( Stem("kínokat"), "kín");});
test("kínt -> kín", function() {deepEqual( Stem("kínt"), "kín");});
test("kíntól -> kín", function() {deepEqual( Stem("kíntól"), "kín");});
test("kínkeservesen -> kínkeserves", function() {deepEqual( Stem("kínkeservesen"), "kínkeserves");});
test("kínlódni -> kínlódn", function() {deepEqual( Stem("kínlódni"), "kínlódn");});
test("kínlódva -> kínlódv", function() {deepEqual( Stem("kínlódva"), "kínlódv");});
test("kínlódás -> kínlódás", function() {deepEqual( Stem("kínlódás"), "kínlódás");});
test("kínlódást -> kínlódás", function() {deepEqual( Stem("kínlódást"), "kínlódás");});
test("kínos -> kínos", function() {deepEqual( Stem("kínos"), "kínos");});
test("kínosan -> kínos", function() {deepEqual( Stem("kínosan"), "kínos");});
test("kínozhatott -> kínozhatot", function() {deepEqual( Stem("kínozhatott"), "kínozhatot");});
test("kínoznak -> kínoz", function() {deepEqual( Stem("kínoznak"), "kínoz");});
test("kínozni -> kínozn", function() {deepEqual( Stem("kínozni"), "kínozn");});
test("kínozta -> kínozt", function() {deepEqual( Stem("kínozta"), "kínozt");});
test("kínozza -> kínozz", function() {deepEqual( Stem("kínozza"), "kínozz");});
test("kínozott -> kínozot", function() {deepEqual( Stem("kínozott"), "kínozot");});
test("kínozásának -> kínozás", function() {deepEqual( Stem("kínozásának"), "kínozás");});
test("kínszenvedés -> kínszenvedés", function() {deepEqual( Stem("kínszenvedés"), "kínszenvedés");});
test("kínzott -> kínzot", function() {deepEqual( Stem("kínzott"), "kínzot");});
test("kínzás -> kínzás", function() {deepEqual( Stem("kínzás"), "kínzás");});
test("kínzások -> kínzás", function() {deepEqual( Stem("kínzások"), "kínzás");});
test("kínzásommal -> kínzás", function() {deepEqual( Stem("kínzásommal"), "kínzás");});
test("kínzással -> kínzás", function() {deepEqual( Stem("kínzással"), "kínzás");});
test("kínzó -> kínzó", function() {deepEqual( Stem("kínzó"), "kínzó");});
test("kínzókamra -> kínzó", function() {deepEqual( Stem("kínzókamra"), "kínzó");});
test("kínzókamrában -> kínzókamr", function() {deepEqual( Stem("kínzókamrában"), "kínzókamr");});
test("kínzóságában -> kínzóság", function() {deepEqual( Stem("kínzóságában"), "kínzóság");});
test("kínálati -> kínálat", function() {deepEqual( Stem("kínálati"), "kínálat");});
test("kínálat -> kínál", function() {deepEqual( Stem("kínálat"), "kínál");});
test("kínálata -> kínálat", function() {deepEqual( Stem("kínálata"), "kínálat");});
test("kínálatnál -> kínálat", function() {deepEqual( Stem("kínálatnál"), "kínálat");});
test("kínálatot -> kínálat", function() {deepEqual( Stem("kínálatot"), "kínálat");});
test("kínálattal -> kínál", function() {deepEqual( Stem("kínálattal"), "kínál");});
test("kínálatuk -> kínálat", function() {deepEqual( Stem("kínálatuk"), "kínálat");});
test("kínálatukkal -> kínálat", function() {deepEqual( Stem("kínálatukkal"), "kínálat");});
test("kínálatunk -> kínálat", function() {deepEqual( Stem("kínálatunk"), "kínálat");});
test("kínálatában -> kínálat", function() {deepEqual( Stem("kínálatában"), "kínálat");});
test("kínálatából -> kínálat", function() {deepEqual( Stem("kínálatából"), "kínálat");});
test("kínálatát -> kínálat", function() {deepEqual( Stem("kínálatát"), "kínálat");});
test("kínálatával -> kínálat", function() {deepEqual( Stem("kínálatával"), "kínálat");});
test("kínálhat -> kínálh", function() {deepEqual( Stem("kínálhat"), "kínálh");});
test("kínálhatja -> kínálhat", function() {deepEqual( Stem("kínálhatja"), "kínálhat");});
test("kínálhatnak -> kínálhat", function() {deepEqual( Stem("kínálhatnak"), "kínálhat");});
test("kínálhatná -> kínálhatna", function() {deepEqual( Stem("kínálhatná"), "kínálhatna");});
test("kínálkozik -> kínálkoz", function() {deepEqual( Stem("kínálkozik"), "kínálkoz");});
test("kínálkoznak -> kínálkoz", function() {deepEqual( Stem("kínálkoznak"), "kínálkoz");});
test("kínálkozott -> kínálkozot", function() {deepEqual( Stem("kínálkozott"), "kínálkozot");});
test("kínálkozó -> kínálkozó", function() {deepEqual( Stem("kínálkozó"), "kínálkozó");});
test("kínálna -> kínáln", function() {deepEqual( Stem("kínálna"), "kínáln");});
test("kínálnak -> kínál", function() {deepEqual( Stem("kínálnak"), "kínál");});
test("kínálni -> kínáln", function() {deepEqual( Stem("kínálni"), "kínáln");});
test("kínálnának -> kínáln", function() {deepEqual( Stem("kínálnának"), "kínáln");});
test("kínálja -> kínál", function() {deepEqual( Stem("kínálja"), "kínál");});
test("kínál -> kí", function() {deepEqual( Stem("kínál"), "kí");});
test("kínáljon -> kínálj", function() {deepEqual( Stem("kínáljon"), "kínálj");});
test("kínálják -> kínálja", function() {deepEqual( Stem("kínálják"), "kínálja");});
test("kínálta -> kínált", function() {deepEqual( Stem("kínálta"), "kínált");});
test("kínáltak -> kínált", function() {deepEqual( Stem("kínáltak"), "kínált");});
test("kínáltam -> kínált", function() {deepEqual( Stem("kínáltam"), "kínált");});
test("kínálunk -> kínál", function() {deepEqual( Stem("kínálunk"), "kínál");});
test("kínált -> kínál", function() {deepEqual( Stem("kínált"), "kínál");});
test("kínálva -> kínálv", function() {deepEqual( Stem("kínálva"), "kínálv");});
test("kínálásához -> kínálás", function() {deepEqual( Stem("kínálásához"), "kínálás");});
test("kínáló -> kínáló", function() {deepEqual( Stem("kínáló"), "kínáló");});
test("kíséreli -> kísérel", function() {deepEqual( Stem("kíséreli"), "kísérel");});
test("kísérelte -> kísérelt", function() {deepEqual( Stem("kísérelte"), "kísérelt");});
test("kíséreltek -> kísérelt", function() {deepEqual( Stem("kíséreltek"), "kísérelt");});
test("kíséret -> kísér", function() {deepEqual( Stem("kíséret"), "kísér");});
test("kíséretemmel -> kíséret", function() {deepEqual( Stem("kíséretemmel"), "kíséret");});
test("kísérettel -> kísér", function() {deepEqual( Stem("kísérettel"), "kísér");});
test("kíséretében -> kíséret", function() {deepEqual( Stem("kíséretében"), "kíséret");});
test("kíséretével -> kíséret", function() {deepEqual( Stem("kíséretével"), "kíséret");});
test("kísérhessék -> kísérhesse", function() {deepEqual( Stem("kísérhessék"), "kísérhesse");});
test("kísérheti -> kísérhet", function() {deepEqual( Stem("kísérheti"), "kísérhet");});
test("kíséri -> kísér", function() {deepEqual( Stem("kíséri"), "kísér");});
test("kísérik -> kísér", function() {deepEqual( Stem("kísérik"), "kísér");});
test("kísérje -> kísér", function() {deepEqual( Stem("kísérje"), "kísér");});
test("kísérjem -> kísérj", function() {deepEqual( Stem("kísérjem"), "kísérj");});
test("kísérjen -> kísérj", function() {deepEqual( Stem("kísérjen"), "kísérj");});
test("kísér -> kísér", function() {deepEqual( Stem("kísér"), "kísér");});
test("kísérel -> kísérel", function() {deepEqual( Stem("kísérel"), "kísérel");});
test("kísérem -> kísér", function() {deepEqual( Stem("kísérem"), "kísér");});
test("kísérlet -> kísérl", function() {deepEqual( Stem("kísérlet"), "kísérl");});
test("kísérletben -> kísérlet", function() {deepEqual( Stem("kísérletben"), "kísérlet");});
test("kísérlete -> kísérlet", function() {deepEqual( Stem("kísérlete"), "kísérlet");});
test("kísérletei -> kísérlet", function() {deepEqual( Stem("kísérletei"), "kísérlet");});
test("kísérletek -> kísérlet", function() {deepEqual( Stem("kísérletek"), "kísérlet");});
test("kísérletekben -> kísérlet", function() {deepEqual( Stem("kísérletekben"), "kísérlet");});
test("kísérleteket -> kísérlet", function() {deepEqual( Stem("kísérleteket"), "kísérlet");});
test("kísérletekkel -> kísérlet", function() {deepEqual( Stem("kísérletekkel"), "kísérlet");});
test("kísérletekre -> kísérlet", function() {deepEqual( Stem("kísérletekre"), "kísérlet");});
test("kísérletet -> kísérlet", function() {deepEqual( Stem("kísérletet"), "kísérlet");});
test("kísérletnek -> kísérlet", function() {deepEqual( Stem("kísérletnek"), "kísérlet");});
test("kísérletről -> kísérlet", function() {deepEqual( Stem("kísérletről"), "kísérlet");});
test("kísérletének -> kísérlet", function() {deepEqual( Stem("kísérletének"), "kísérlet");});
test("kísérletét -> kísérlet", function() {deepEqual( Stem("kísérletét"), "kísérlet");});
test("kísérletével -> kísérlet", function() {deepEqual( Stem("kísérletével"), "kísérlet");});
test("kísérletük -> kísérlet", function() {deepEqual( Stem("kísérletük"), "kísérlet");});
test("kísérletezgethettem -> kísérletezgethett", function() {deepEqual( Stem("kísérletezgethettem"), "kísérletezgethett");});
test("kísérletezik -> kísérletez", function() {deepEqual( Stem("kísérletezik"), "kísérletez");});
test("kísérletezni -> kísérletezn", function() {deepEqual( Stem("kísérletezni"), "kísérletezn");});
test("kísérletezés -> kísérletezés", function() {deepEqual( Stem("kísérletezés"), "kísérletezés");});
test("kísérletezések -> kísérletezés", function() {deepEqual( Stem("kísérletezések"), "kísérletezés");});
test("kísérletezési -> kísérletezés", function() {deepEqual( Stem("kísérletezési"), "kísérletezés");});
test("kísérletező -> kísérletező", function() {deepEqual( Stem("kísérletező"), "kísérletező");});
test("kísérleti -> kísérlet", function() {deepEqual( Stem("kísérleti"), "kísérlet");});
test("kísérletileg -> kísérletileg", function() {deepEqual( Stem("kísérletileg"), "kísérletileg");});
test("kísérni -> kísérn", function() {deepEqual( Stem("kísérni"), "kísérn");});
test("kísért -> kís", function() {deepEqual( Stem("kísért"), "kís");});
test("kísértük -> kísért", function() {deepEqual( Stem("kísértük"), "kísért");});
test("kísérte -> kísért", function() {deepEqual( Stem("kísérte"), "kísért");});
test("kísértem -> kísért", function() {deepEqual( Stem("kísértem"), "kísért");});
test("kísértesse -> kísértess", function() {deepEqual( Stem("kísértesse"), "kísértess");});
test("kísértetett -> kísértetet", function() {deepEqual( Stem("kísértetett"), "kísértetet");});
test("kísértet-hajó -> kísértet-hajó", function() {deepEqual( Stem("kísértet-hajó"), "kísértet-hajó");});
test("kísértetbe -> kísértet", function() {deepEqual( Stem("kísértetbe"), "kísértet");});
test("kísértet -> kísért", function() {deepEqual( Stem("kísértet"), "kísért");});
test("kísértete -> kísértet", function() {deepEqual( Stem("kísértete"), "kísértet");});
test("kísértetet -> kísértet", function() {deepEqual( Stem("kísértetet"), "kísértet");});
test("kísértetként -> kísértet", function() {deepEqual( Stem("kísértetként"), "kísértet");});
test("kísértetnek -> kísértet", function() {deepEqual( Stem("kísértetnek"), "kísértet");});
test("kísértetétől -> kísértet", function() {deepEqual( Stem("kísértetétől"), "kísértet");});
test("kísértethajó-legenda -> kísértethajó-legend", function() {deepEqual( Stem("kísértethajó-legenda"), "kísértethajó-legend");});
test("kísértethajón -> kísértethajó", function() {deepEqual( Stem("kísértethajón"), "kísértethajó");});
test("kísértethajó -> kísértethajó", function() {deepEqual( Stem("kísértethajó"), "kísértethajó");});
test("kísérteties -> kísérteties", function() {deepEqual( Stem("kísérteties"), "kísérteties");});
test("kísértetiesen -> kísérteties", function() {deepEqual( Stem("kísértetiesen"), "kísérteties");});
test("kísértetkapitány -> kísértetkapitány", function() {deepEqual( Stem("kísértetkapitány"), "kísértetkapitány");});
test("kísértetkastélyba -> kísértetkastély", function() {deepEqual( Stem("kísértetkastélyba"), "kísértetkastély");});
test("kísértetlátóvá -> kísértetlátó", function() {deepEqual( Stem("kísértetlátóvá"), "kísértetlátó");});
test("kísértett -> kísértet", function() {deepEqual( Stem("kísértett"), "kísértet");});
test("kísértette -> kísértett", function() {deepEqual( Stem("kísértette"), "kísértett");});
test("kísértettel -> kísért", function() {deepEqual( Stem("kísértettel"), "kísért");});
test("kísértettől -> kísértet", function() {deepEqual( Stem("kísértettől"), "kísértet");});
test("kísértetvárossá -> kísértetváros", function() {deepEqual( Stem("kísértetvárossá"), "kísértetváros");});
test("kísérti -> kísért", function() {deepEqual( Stem("kísérti"), "kísért");});
test("kísérték -> kísérte", function() {deepEqual( Stem("kísérték"), "kísérte");});
test("kísértés -> kísértés", function() {deepEqual( Stem("kísértés"), "kísértés");});
test("kísértésbe -> kísértés", function() {deepEqual( Stem("kísértésbe"), "kísértés");});
test("kísértést -> kísértés", function() {deepEqual( Stem("kísértést"), "kísértés");});
test("kísértő -> kísértő", function() {deepEqual( Stem("kísértő"), "kísértő");});
test("kísérve -> kísérv", function() {deepEqual( Stem("kísérve"), "kísérv");});
test("kísérőjelenségének -> kísérőjelenség", function() {deepEqual( Stem("kísérőjelenségének"), "kísérőjelenség");});
test("kísérőjétől -> kísérő", function() {deepEqual( Stem("kísérőjétől"), "kísérő");});
test("kísérők -> kísérő", function() {deepEqual( Stem("kísérők"), "kísérő");});
test("kísérőkkel -> kísérő", function() {deepEqual( Stem("kísérőkkel"), "kísérő");});
test("kísérőknek -> kísérő", function() {deepEqual( Stem("kísérőknek"), "kísérő");});
test("kísérőm -> kísérő", function() {deepEqual( Stem("kísérőm"), "kísérő");});
test("kísérő -> kísérő", function() {deepEqual( Stem("kísérő"), "kísérő");});
test("kísérői -> kísérő", function() {deepEqual( Stem("kísérői"), "kísérő");});
test("kísérője -> kísérő", function() {deepEqual( Stem("kísérője"), "kísérő");});
test("kísérőnőjével -> kísérőnő", function() {deepEqual( Stem("kísérőnőjével"), "kísérőnő");});
test("kísérőszöveget -> kísérőszöveg", function() {deepEqual( Stem("kísérőszöveget"), "kísérőszöveg");});
test("kísérőszülő -> kísérőszülő", function() {deepEqual( Stem("kísérőszülő"), "kísérőszülő");});
test("kísérőtanár -> kísérőtanár", function() {deepEqual( Stem("kísérőtanár"), "kísérőtanár");});
test("kísérőzenéi -> kísérőzen", function() {deepEqual( Stem("kísérőzenéi"), "kísérőzen");});
test("kísérőzenéje -> kísérőzené", function() {deepEqual( Stem("kísérőzenéje"), "kísérőzené");});
test("kívánalmaihoz -> kívánalm", function() {deepEqual( Stem("kívánalmaihoz"), "kívánalm");});
test("kívánalmaik -> kívánalm", function() {deepEqual( Stem("kívánalmaik"), "kívánalm");});
test("kívánalmait -> kívánalm", function() {deepEqual( Stem("kívánalmait"), "kívánalm");});
test("kívánalmakat -> kívánalm", function() {deepEqual( Stem("kívánalmakat"), "kívánalm");});
test("kívánalmaknak -> kívánalm", function() {deepEqual( Stem("kívánalmaknak"), "kívánalm");});
test("kívánalmat -> kívánal", function() {deepEqual( Stem("kívánalmat"), "kívánal");});
test("kívánalom -> kívánal", function() {deepEqual( Stem("kívánalom"), "kívánal");});
test("kívánalomnak -> kívánal", function() {deepEqual( Stem("kívánalomnak"), "kívánal");});
test("kívánatos -> kívánatos", function() {deepEqual( Stem("kívánatos"), "kívánatos");});
test("kívánatosabb -> kívánatosabb", function() {deepEqual( Stem("kívánatosabb"), "kívánatosabb");});
test("kívánatosak -> kívánatos", function() {deepEqual( Stem("kívánatosak"), "kívánatos");});
test("kívánatosnak -> kívánatos", function() {deepEqual( Stem("kívánatosnak"), "kívánatos");});
test("kívánatosnál -> kívánatos", function() {deepEqual( Stem("kívánatosnál"), "kívánatos");});
test("kívánatossá -> kívánatos", function() {deepEqual( Stem("kívánatossá"), "kívánatos");});
test("kíváncsi -> kíváncs", function() {deepEqual( Stem("kíváncsi"), "kíváncs");});
test("kíváncsiak -> kíváncsi", function() {deepEqual( Stem("kíváncsiak"), "kíváncsi");});
test("kíváncsian -> kíváncs", function() {deepEqual( Stem("kíváncsian"), "kíváncs");});
test("kíváncsivá -> kíváncs", function() {deepEqual( Stem("kíváncsivá"), "kíváncs");});
test("kíváncsiskodunk -> kíváncsiskod", function() {deepEqual( Stem("kíváncsiskodunk"), "kíváncsiskod");});
test("kíváncsiskodáson -> kíváncsiskodás", function() {deepEqual( Stem("kíváncsiskodáson"), "kíváncsiskodás");});
test("kíváncsiság -> kíváncsiság", function() {deepEqual( Stem("kíváncsiság"), "kíváncsiság");});
test("kíváncsisággal -> kíváncsiság", function() {deepEqual( Stem("kíváncsisággal"), "kíváncsiság");});
test("kíváncsiságnak -> kíváncsiság", function() {deepEqual( Stem("kíváncsiságnak"), "kíváncsiság");});
test("kíváncsiságom -> kíváncsiság", function() {deepEqual( Stem("kíváncsiságom"), "kíváncsiság");});
test("kíváncsiságot -> kíváncsiság", function() {deepEqual( Stem("kíváncsiságot"), "kíváncsiság");});
test("kíváncsiságát -> kíváncsiság", function() {deepEqual( Stem("kíváncsiságát"), "kíváncsiság");});
test("kívánhat -> kívánh", function() {deepEqual( Stem("kívánhat"), "kívánh");});
test("kívánhatja -> kívánhat", function() {deepEqual( Stem("kívánhatja"), "kívánhat");});
test("kívánhatunk -> kívánhat", function() {deepEqual( Stem("kívánhatunk"), "kívánhat");});
test("kívánja -> kíván", function() {deepEqual( Stem("kívánja"), "kíván");});
test("kíván -> kív", function() {deepEqual( Stem("kíván"), "kív");});
test("kívánjuk -> kíván", function() {deepEqual( Stem("kívánjuk"), "kíván");});
test("kívánják -> kívánja", function() {deepEqual( Stem("kívánják"), "kívánja");});
test("kívánna -> kívánn", function() {deepEqual( Stem("kívánna"), "kívánn");});
test("kívánnak -> kív", function() {deepEqual( Stem("kívánnak"), "kív");});
test("kívánnia -> kívánn", function() {deepEqual( Stem("kívánnia"), "kívánn");});
test("kívánná -> kíván", function() {deepEqual( Stem("kívánná"), "kíván");});
test("kívánnék -> kívánne", function() {deepEqual( Stem("kívánnék"), "kívánne");});
test("kívánok -> kíván", function() {deepEqual( Stem("kívánok"), "kíván");});
test("kívánta -> kívánt", function() {deepEqual( Stem("kívánta"), "kívánt");});
test("kívántak -> kívánt", function() {deepEqual( Stem("kívántak"), "kívánt");});
test("kívántam -> kívánt", function() {deepEqual( Stem("kívántam"), "kívánt");});
test("kívánták -> kívánta", function() {deepEqual( Stem("kívánták"), "kívánta");});
test("kívánunk -> kíván", function() {deepEqual( Stem("kívánunk"), "kíván");});
test("kívánkozó -> kívánkozó", function() {deepEqual( Stem("kívánkozó"), "kívánkozó");});
test("kívánnivalót -> kívánnivaló", function() {deepEqual( Stem("kívánnivalót"), "kívánnivaló");});
test("kívánságműsor -> kívánságműsor", function() {deepEqual( Stem("kívánságműsor"), "kívánságműsor");});
test("kívánságműsora -> kívánságműs", function() {deepEqual( Stem("kívánságműsora"), "kívánságműs");});
test("kívánságműsorral -> kívánságműsor", function() {deepEqual( Stem("kívánságműsorral"), "kívánságműsor");});
test("kívánságom -> kívánság", function() {deepEqual( Stem("kívánságom"), "kívánság");});
test("kívánságomat -> kívánság", function() {deepEqual( Stem("kívánságomat"), "kívánság");});
test("kívánság -> kívánság", function() {deepEqual( Stem("kívánság"), "kívánság");});
test("kívánsága -> kívánság", function() {deepEqual( Stem("kívánsága"), "kívánság");});
test("kívánságot -> kívánság", function() {deepEqual( Stem("kívánságot"), "kívánság");});
test("kívánságra -> kívánság", function() {deepEqual( Stem("kívánságra"), "kívánság");});
test("kívánságukat -> kívánság", function() {deepEqual( Stem("kívánságukat"), "kívánság");});
test("kívánságunkon -> kívánság", function() {deepEqual( Stem("kívánságunkon"), "kívánság");});
test("kívánságának -> kívánság", function() {deepEqual( Stem("kívánságának"), "kívánság");});
test("kívánságára -> kívánság", function() {deepEqual( Stem("kívánságára"), "kívánság");});
test("kívánságát -> kívánság", function() {deepEqual( Stem("kívánságát"), "kívánság");});
test("kívánt -> kív", function() {deepEqual( Stem("kívánt"), "kív");});
test("kívánva -> kívánv", function() {deepEqual( Stem("kívánva"), "kívánv");});
test("kívánó -> kívánó", function() {deepEqual( Stem("kívánó"), "kívánó");});
test("kívülebbre -> kívülebb", function() {deepEqual( Stem("kívülebbre"), "kívülebb");});
test("kívüli -> kívül", function() {deepEqual( Stem("kívüli"), "kívül");});
test("kívül -> kív", function() {deepEqual( Stem("kívül"), "kív");});
test("kívülre -> kívül", function() {deepEqual( Stem("kívülre"), "kívül");});
test("kívülről -> kívül", function() {deepEqual( Stem("kívülről"), "kívül");});
test("kívülálló -> kívülálló", function() {deepEqual( Stem("kívülálló"), "kívülálló");});
test("kívülállók -> kívülálló", function() {deepEqual( Stem("kívülállók"), "kívülálló");});
test("kívülállókkal -> kívülálló", function() {deepEqual( Stem("kívülállókkal"), "kívülálló");});
test("kívülállóknak -> kívülálló", function() {deepEqual( Stem("kívülállóknak"), "kívülálló");});
test("kívülállóként -> kívülálló", function() {deepEqual( Stem("kívülállóként"), "kívülálló");});
test("kívülállóra -> kívülálló", function() {deepEqual( Stem("kívülállóra"), "kívülálló");});
test("kívülállót -> kívülálló", function() {deepEqual( Stem("kívülállót"), "kívülálló");});
test("kívülállóval -> kívülálló", function() {deepEqual( Stem("kívülállóval"), "kívülálló");});
test("kóbor -> kóbor", function() {deepEqual( Stem("kóbor"), "kóbor");});
test("kóborolni -> kóboroln", function() {deepEqual( Stem("kóborolni"), "kóboroln");});
test("kócos -> kócos", function() {deepEqual( Stem("kócos"), "kócos");});
test("kócsagot -> kócsag", function() {deepEqual( Stem("kócsagot"), "kócsag");});
test("kódalapján -> kódalap", function() {deepEqual( Stem("kódalapján"), "kódalap");});
test("kóddarabokról -> kóddarab", function() {deepEqual( Stem("kóddarabokról"), "kóddarab");});
test("kódex -> kódex", function() {deepEqual( Stem("kódex"), "kódex");});
test("kódexeket -> kódex", function() {deepEqual( Stem("kódexeket"), "kódex");});
test("kódexet -> kódex", function() {deepEqual( Stem("kódexet"), "kódex");});
test("kódexének -> kódex", function() {deepEqual( Stem("kódexének"), "kódex");});
test("kódexíró -> kódexíró", function() {deepEqual( Stem("kódexíró"), "kódexíró");});
test("kódban -> kó", function() {deepEqual( Stem("kódban"), "kó");});
test("kód -> kó", function() {deepEqual( Stem("kód"), "kó");});
test("kódból -> kó", function() {deepEqual( Stem("kódból"), "kó");});
test("kóddal -> kó", function() {deepEqual( Stem("kóddal"), "kó");});
test("kódja -> kód", function() {deepEqual( Stem("kódja"), "kód");});
test("kódjának -> kód", function() {deepEqual( Stem("kódjának"), "kód");});
test("kódját -> kód", function() {deepEqual( Stem("kódját"), "kód");});
test("kódkénti -> kódként", function() {deepEqual( Stem("kódkénti"), "kódként");});
test("kódot -> kó", function() {deepEqual( Stem("kódot"), "kó");});
test("kódlap -> kódlap", function() {deepEqual( Stem("kódlap"), "kódlap");});
test("kódlapja -> kódlap", function() {deepEqual( Stem("kódlapja"), "kódlap");});
test("kódlapon -> kódlap", function() {deepEqual( Stem("kódlapon"), "kódlap");});
test("kódnevén -> kódnev", function() {deepEqual( Stem("kódnevén"), "kódnev");});
test("kódnevű -> kódnevű", function() {deepEqual( Stem("kódnevű"), "kódnevű");});
test("kódok -> kód", function() {deepEqual( Stem("kódok"), "kód");});
test("kódokat -> kód", function() {deepEqual( Stem("kódokat"), "kód");});
test("kódokból -> kód", function() {deepEqual( Stem("kódokból"), "kód");});
test("kódoldó -> kódoldó", function() {deepEqual( Stem("kódoldó"), "kódoldó");});
test("kódoldók -> kódoldó", function() {deepEqual( Stem("kódoldók"), "kódoldó");});
test("kódoldót -> kódoldó", function() {deepEqual( Stem("kódoldót"), "kódoldó");});
test("kódoldóval -> kódoldó", function() {deepEqual( Stem("kódoldóval"), "kódoldó");});
test("kódolhatók -> kódolható", function() {deepEqual( Stem("kódolhatók"), "kódolható");});
test("kódolja -> kódol", function() {deepEqual( Stem("kódolja"), "kódol");});
test("kódol -> kódol", function() {deepEqual( Stem("kódol"), "kódol");});
test("kódolják -> kódolja", function() {deepEqual( Stem("kódolják"), "kódolja");});
test("kódolt -> kódol", function() {deepEqual( Stem("kódolt"), "kódol");});
test("kódolásnak -> kódolás", function() {deepEqual( Stem("kódolásnak"), "kódolás");});
test("kódolását -> kódolás", function() {deepEqual( Stem("kódolását"), "kódolás");});
test("kódolású -> kódolású", function() {deepEqual( Stem("kódolású"), "kódolású");});
test("kódoló -> kódoló", function() {deepEqual( Stem("kódoló"), "kódoló");});
test("kódorogsz -> kódorogsz", function() {deepEqual( Stem("kódorogsz"), "kódorogsz");});
test("kódrészletek -> kódrészlet", function() {deepEqual( Stem("kódrészletek"), "kódrészlet");});
test("kódrészletekről -> kódrészlet", function() {deepEqual( Stem("kódrészletekről"), "kódrészlet");});
test("kódsorozatot -> kódsorozat", function() {deepEqual( Stem("kódsorozatot"), "kódsorozat");});
test("kódszerkesztő -> kódszerkesztő", function() {deepEqual( Stem("kódszerkesztő"), "kódszerkesztő");});
test("kógencia -> kógenc", function() {deepEqual( Stem("kógencia"), "kógenc");});
test("kógens -> kógens", function() {deepEqual( Stem("kógens"), "kógens");});
test("kógensek -> kógens", function() {deepEqual( Stem("kógensek"), "kógens");});
test("kókai -> kó", function() {deepEqual( Stem("kókai"), "kó");});
test("kókuszdió-termelés -> kókuszdió-termelés", function() {deepEqual( Stem("kókuszdió-termelés"), "kókuszdió-termelés");});
test("kókuszszőnyegre -> kókuszszőnyeg", function() {deepEqual( Stem("kókuszszőnyegre"), "kókuszszőnyeg");});
test("kólintsa -> kólints", function() {deepEqual( Stem("kólintsa"), "kólints");});
test("kólára -> kól", function() {deepEqual( Stem("kólára"), "kól");});
test("kóla -> kól", function() {deepEqual( Stem("kóla"), "kól");});
test("kólát -> kól", function() {deepEqual( Stem("kólát"), "kól");});
test("kólával -> kól", function() {deepEqual( Stem("kólával"), "kól");});
test("kólás -> kólás", function() {deepEqual( Stem("kólás"), "kólás");});
test("kóma -> kóm", function() {deepEqual( Stem("kóma"), "kóm");});
test("kómában -> kóm", function() {deepEqual( Stem("kómában"), "kóm");});
test("kópickötés -> kópickötés", function() {deepEqual( Stem("kópickötés"), "kópickötés");});
test("kópickötéssel -> kópickötés", function() {deepEqual( Stem("kópickötéssel"), "kópickötés");});
test("kópiák -> kópia", function() {deepEqual( Stem("kópiák"), "kópia");});
test("kópiákból -> kópia", function() {deepEqual( Stem("kópiákból"), "kópia");});
test("kórház -> kórház", function() {deepEqual( Stem("kórház"), "kórház");});
test("kórháza -> kórház", function() {deepEqual( Stem("kórháza"), "kórház");});
test("kórházaiknak -> kórház", function() {deepEqual( Stem("kórházaiknak"), "kórház");});
test("kórházak -> kórház", function() {deepEqual( Stem("kórházak"), "kórház");});
test("kórházakat -> kórház", function() {deepEqual( Stem("kórházakat"), "kórház");});
test("kórházaknak -> kórház", function() {deepEqual( Stem("kórházaknak"), "kórház");});
test("kórházakon -> kórház", function() {deepEqual( Stem("kórházakon"), "kórház");});
test("kórházat -> kórház", function() {deepEqual( Stem("kórházat"), "kórház");});
test("kórházba -> kórház", function() {deepEqual( Stem("kórházba"), "kórház");});
test("kórházban -> kórház", function() {deepEqual( Stem("kórházban"), "kórház");});
test("kórházból -> kórház", function() {deepEqual( Stem("kórházból"), "kórház");});
test("kórházhoz -> kórház", function() {deepEqual( Stem("kórházhoz"), "kórház");});
test("kórházukban -> kórház", function() {deepEqual( Stem("kórházukban"), "kórház");});
test("kórházzal -> kórház", function() {deepEqual( Stem("kórházzal"), "kórház");});
test("kórházfilm-paródia -> kórházfilm-paród", function() {deepEqual( Stem("kórházfilm-paródia"), "kórházfilm-paród");});
test("kórházi -> kórház", function() {deepEqual( Stem("kórházi"), "kórház");});
test("kórképét -> kórkép", function() {deepEqual( Stem("kórképét"), "kórkép");});
test("kórlapra -> kórlap", function() {deepEqual( Stem("kórlapra"), "kórlap");});
test("kórokban -> kór", function() {deepEqual( Stem("kórokban"), "kór");});
test("kór -> kór", function() {deepEqual( Stem("kór"), "kór");});
test("kórral -> kór", function() {deepEqual( Stem("kórral"), "kór");});
test("kórokozó -> kórokozó", function() {deepEqual( Stem("kórokozó"), "kórokozó");});
test("kórokozói -> kórokozó", function() {deepEqual( Stem("kórokozói"), "kórokozó");});
test("kórokozóját -> kórokozó", function() {deepEqual( Stem("kórokozóját"), "kórokozó");});
test("kórokozók -> kórokozó", function() {deepEqual( Stem("kórokozók"), "kórokozó");});
test("kórokozót -> kórokozó", function() {deepEqual( Stem("kórokozót"), "kórokozó");});
test("kóros -> kóros", function() {deepEqual( Stem("kóros"), "kóros");});
test("kórosan -> kóros", function() {deepEqual( Stem("kórosan"), "kóros");});
test("kórtörténeteket -> kórtörténet", function() {deepEqual( Stem("kórtörténeteket"), "kórtörténet");});
test("kórus -> kórus", function() {deepEqual( Stem("kórus"), "kórus");});
test("kórusban -> kórus", function() {deepEqual( Stem("kórusban"), "kórus");});
test("kóruson -> kórus", function() {deepEqual( Stem("kóruson"), "kórus");});
test("kórusversenyre -> kórusverseny", function() {deepEqual( Stem("kórusversenyre"), "kórusverseny");});
test("kóstolgatta -> kóstolgatt", function() {deepEqual( Stem("kóstolgatta"), "kóstolgatt");});
test("kóstolják -> kóstolja", function() {deepEqual( Stem("kóstolják"), "kóstolja");});
test("kóstolni -> kóstoln", function() {deepEqual( Stem("kóstolni"), "kóstoln");});
test("kóstál -> kóstál", function() {deepEqual( Stem("kóstál"), "kóstál");});
test("kóstáló -> kóstáló", function() {deepEqual( Stem("kóstáló"), "kóstáló");});
test("kósza -> kósz", function() {deepEqual( Stem("kósza"), "kósz");});
test("kószál -> kószál", function() {deepEqual( Stem("kószál"), "kószál");});
test("kószált -> kószál", function() {deepEqual( Stem("kószált"), "kószál");});
test("kószálunk -> kószál", function() {deepEqual( Stem("kószálunk"), "kószál");});
test("kóteres -> kóteres", function() {deepEqual( Stem("kóteres"), "kóteres");});
test("kóvályogni -> kóvályogn", function() {deepEqual( Stem("kóvályogni"), "kóvályogn");});
test("kóvályogtunk -> kóvályogt", function() {deepEqual( Stem("kóvályogtunk"), "kóvályogt");});
test("kő -> kő", function() {deepEqual( Stem("kő"), "kő");});
test("kőbe -> kő", function() {deepEqual( Stem("kőbe"), "kő");});
test("kőből -> kő", function() {deepEqual( Stem("kőből"), "kő");});
test("kővel -> kő", function() {deepEqual( Stem("kővel"), "kő");});
test("kővé -> kő", function() {deepEqual( Stem("kővé"), "kő");});
test("kőért -> kő", function() {deepEqual( Stem("kőért"), "kő");});
test("kövek -> köv", function() {deepEqual( Stem("kövek"), "köv");});
test("köveket -> köv", function() {deepEqual( Stem("köveket"), "köv");});
test("kövét -> köv", function() {deepEqual( Stem("kövét"), "köv");});
test("kövén -> köv", function() {deepEqual( Stem("kövén"), "köv");});
test("kövön -> köv", function() {deepEqual( Stem("kövön"), "köv");});
test("kőbevájt -> kőbeváj", function() {deepEqual( Stem("kőbevájt"), "kőbeváj");});
test("kőbányai -> kőbány", function() {deepEqual( Stem("kőbányai"), "kőbány");});
test("kődarab -> kődarab", function() {deepEqual( Stem("kődarab"), "kődarab");});
test("kődarabok -> kődarab", function() {deepEqual( Stem("kődarabok"), "kődarab");});
test("kődarabra -> kődarab", function() {deepEqual( Stem("kődarabra"), "kődarab");});
test("kőfal -> kőfal", function() {deepEqual( Stem("kőfal"), "kőfal");});
test("kőfalon -> kőfal", function() {deepEqual( Stem("kőfalon"), "kőfal");});
test("kőfejtő -> kőfejtő", function() {deepEqual( Stem("kőfejtő"), "kőfejtő");});
test("kőfejtőhöz -> kőfejtő", function() {deepEqual( Stem("kőfejtőhöz"), "kőfejtő");});
test("kőhalmazokon -> kőhalmaz", function() {deepEqual( Stem("kőhalmazokon"), "kőhalmaz");});
test("kőkockák -> kőkocka", function() {deepEqual( Stem("kőkockák"), "kőkocka");});
test("kőkoloncok -> kőkolonc", function() {deepEqual( Stem("kőkoloncok"), "kőkolonc");});
test("kőkorsókat -> kőkorsó", function() {deepEqual( Stem("kőkorsókat"), "kőkorsó");});
test("kőkorsókban -> kőkorsó", function() {deepEqual( Stem("kőkorsókban"), "kőkorsó");});
test("kőlap -> kőlap", function() {deepEqual( Stem("kőlap"), "kőlap");});
test("kőműves -> kőműves", function() {deepEqual( Stem("kőműves"), "kőműves");});
test("kőművesmunkákat -> kőművesmunka", function() {deepEqual( Stem("kőművesmunkákat"), "kőművesmunka");});
test("kőnyomás -> kőnyomás", function() {deepEqual( Stem("kőnyomás"), "kőnyomás");});
test("kőolaj -> kőolaj", function() {deepEqual( Stem("kőolaj"), "kőolaj");});
test("kőolajat -> kőolaj", function() {deepEqual( Stem("kőolajat"), "kőolaj");});
test("kőolajra -> kőolaj", function() {deepEqual( Stem("kőolajra"), "kőolaj");});
test("kőolajimportot -> kőolajimport", function() {deepEqual( Stem("kőolajimportot"), "kőolajimport");});
test("kőolajtermékekre -> kőolajtermék", function() {deepEqual( Stem("kőolajtermékekre"), "kőolajtermék");});
test("kőpadló -> kőpadló", function() {deepEqual( Stem("kőpadló"), "kőpadló");});
test("kőpadlójára -> kőpadló", function() {deepEqual( Stem("kőpadlójára"), "kőpadló");});
test("kőpadlón -> kőpadló", function() {deepEqual( Stem("kőpadlón"), "kőpadló");});
test("kőpadlós -> kőpadlós", function() {deepEqual( Stem("kőpadlós"), "kőpadlós");});
test("kőrestaurálási -> kőrestaurálás", function() {deepEqual( Stem("kőrestaurálási"), "kőrestaurálás");});
test("kőrisfák -> kőrisfa", function() {deepEqual( Stem("kőrisfák"), "kőrisfa");});
test("kőrisfát -> kőrisf", function() {deepEqual( Stem("kőrisfát"), "kőrisf");});
test("kőszívű -> kőszívű", function() {deepEqual( Stem("kőszívű"), "kőszívű");});
test("kőtáblákba -> kőtábla", function() {deepEqual( Stem("kőtáblákba"), "kőtábla");});
test("kőtáblát -> kőtábl", function() {deepEqual( Stem("kőtáblát"), "kőtábl");});
test("kőtár -> kőtár", function() {deepEqual( Stem("kőtár"), "kőtár");});
test("kővédermedten -> kővédermedt", function() {deepEqual( Stem("kővédermedten"), "kővédermedt");});
test("kőzetek -> kőzet", function() {deepEqual( Stem("kőzetek"), "kőzet");});
test("kőépület -> kőépül", function() {deepEqual( Stem("kőépület"), "kőépül");});
test("kőút -> kőú", function() {deepEqual( Stem("kőút"), "kőú");});
test("köbcentiméteren -> köbcentiméter", function() {deepEqual( Stem("köbcentiméteren"), "köbcentiméter");});
test("köbméter -> köbméter", function() {deepEqual( Stem("köbméter"), "köbméter");});
test("köbméterre -> köbméter", function() {deepEqual( Stem("köbméterre"), "köbméter");});
test("köcsögökkel -> köcsög", function() {deepEqual( Stem("köcsögökkel"), "köcsög");});
test("ködbe -> köd", function() {deepEqual( Stem("ködbe"), "köd");});
test("ködben -> köd", function() {deepEqual( Stem("ködben"), "köd");});
test("ködből -> köd", function() {deepEqual( Stem("ködből"), "köd");});
test("köde -> köd", function() {deepEqual( Stem("köde"), "köd");});
test("ködnek -> köd", function() {deepEqual( Stem("ködnek"), "köd");});
test("ködök -> köd", function() {deepEqual( Stem("ködök"), "köd");});
test("ködön -> köd", function() {deepEqual( Stem("ködön"), "köd");});
test("ködöt -> köd", function() {deepEqual( Stem("ködöt"), "köd");});
test("ködszerű -> ködszerű", function() {deepEqual( Stem("ködszerű"), "ködszerű");});
test("ködös -> ködös", function() {deepEqual( Stem("ködös"), "ködös");});
test("ködösítés -> ködösítés", function() {deepEqual( Stem("ködösítés"), "ködösítés");});
test("köhintett -> köhintet", function() {deepEqual( Stem("köhintett"), "köhintet");});
test("köhög -> köhög", function() {deepEqual( Stem("köhög"), "köhög");});
test("köhögjön -> köhögj", function() {deepEqual( Stem("köhögjön"), "köhögj");});
test("köhögni -> köhögn", function() {deepEqual( Stem("köhögni"), "köhögn");});
test("köhögtek -> köhögt", function() {deepEqual( Stem("köhögtek"), "köhögt");});
test("köhögtem -> köhögt", function() {deepEqual( Stem("köhögtem"), "köhögt");});
test("köhögve -> köhögv", function() {deepEqual( Stem("köhögve"), "köhögv");});
test("köhögési -> köhögés", function() {deepEqual( Stem("köhögési"), "köhögés");});
test("köhögésre -> köhögés", function() {deepEqual( Stem("köhögésre"), "köhögés");});
test("köhögés -> köhögés", function() {deepEqual( Stem("köhögés"), "köhögés");});
test("köhögést -> köhögés", function() {deepEqual( Stem("köhögést"), "köhögés");});
test("köhögésroham -> köhögésroh", function() {deepEqual( Stem("köhögésroham"), "köhögésroh");});
test("köhögésrohamot -> köhögésroh", function() {deepEqual( Stem("köhögésrohamot"), "köhögésroh");});
test("kölcsönadta -> kölcsönadt", function() {deepEqual( Stem("kölcsönadta"), "kölcsönadt");});
test("kölcsönadtad -> kölcsönadt", function() {deepEqual( Stem("kölcsönadtad"), "kölcsönadt");});
test("kölcsönadtak -> kölcsönadt", function() {deepEqual( Stem("kölcsönadtak"), "kölcsönadt");});
test("kölcsönadás -> kölcsönadás", function() {deepEqual( Stem("kölcsönadás"), "kölcsönadás");});
test("kölcsönadásban -> kölcsönadás", function() {deepEqual( Stem("kölcsönadásban"), "kölcsönadás");});
test("kölcsönhatás -> kölcsönhatás", function() {deepEqual( Stem("kölcsönhatás"), "kölcsönhatás");});
test("kölcsönkérni -> kölcsönkérn", function() {deepEqual( Stem("kölcsönkérni"), "kölcsönkérn");});
test("kölcsönkérnie -> kölcsönkérn", function() {deepEqual( Stem("kölcsönkérnie"), "kölcsönkérn");});
test("kölcsönkértem -> kölcsönkért", function() {deepEqual( Stem("kölcsönkértem"), "kölcsönkért");});
test("kölcsönbe -> kölcsön", function() {deepEqual( Stem("kölcsönbe"), "kölcsön");});
test("kölcsön -> kölcs", function() {deepEqual( Stem("kölcsön"), "kölcs");});
test("kölcsönnél -> kölcsön", function() {deepEqual( Stem("kölcsönnél"), "kölcsön");});
test("kölcsönről -> kölcsön", function() {deepEqual( Stem("kölcsönről"), "kölcsön");});
test("kölcsönt -> kölcsön", function() {deepEqual( Stem("kölcsönt"), "kölcsön");});
test("kölcsönök -> kölcsön", function() {deepEqual( Stem("kölcsönök"), "kölcsön");});
test("kölcsönöket -> kölcsön", function() {deepEqual( Stem("kölcsönöket"), "kölcsön");});
test("kölcsönünk -> kölcsön", function() {deepEqual( Stem("kölcsönünk"), "kölcsön");});
test("kölcsönzés -> kölcsönzés", function() {deepEqual( Stem("kölcsönzés"), "kölcsönzés");});
test("kölcsönzése -> kölcsönzés", function() {deepEqual( Stem("kölcsönzése"), "kölcsönzés");});
test("kölcsönzéshez -> kölcsönzés", function() {deepEqual( Stem("kölcsönzéshez"), "kölcsönzés");});
test("kölcsönzésnél -> kölcsönzés", function() {deepEqual( Stem("kölcsönzésnél"), "kölcsönzés");});
test("kölcsönzőben -> kölcsönző", function() {deepEqual( Stem("kölcsönzőben"), "kölcsönző");});
test("kölcsönös -> kölcsönös", function() {deepEqual( Stem("kölcsönös"), "kölcsönös");});
test("kölcsönösen -> kölcsönös", function() {deepEqual( Stem("kölcsönösen"), "kölcsönös");});
test("kölcsönössége -> kölcsönösség", function() {deepEqual( Stem("kölcsönössége"), "kölcsönösség");});
test("kölcsönzött -> kölcsönzöt", function() {deepEqual( Stem("kölcsönzött"), "kölcsönzöt");});
test("kölcsönöz -> kölcsönöz", function() {deepEqual( Stem("kölcsönöz"), "kölcsönöz");});
test("kölcsönöznek -> kölcsönöz", function() {deepEqual( Stem("kölcsönöznek"), "kölcsönöz");});
test("kölcsönöztem -> kölcsönözt", function() {deepEqual( Stem("kölcsönöztem"), "kölcsönözt");});
test("kölcsönözzünk -> kölcsönözz", function() {deepEqual( Stem("kölcsönözzünk"), "kölcsönözz");});
test("köldöknézés -> köldöknézés", function() {deepEqual( Stem("köldöknézés"), "köldöknézés");});
test("köldökzsinór -> köldökzsinór", function() {deepEqual( Stem("köldökzsinór"), "köldökzsinór");});
test("köll -> köll", function() {deepEqual( Stem("köll"), "köll");});
test("kölnis -> kölnis", function() {deepEqual( Stem("kölnis"), "kölnis");});
test("kölnit -> köln", function() {deepEqual( Stem("kölnit"), "köln");});
test("kölni -> köln", function() {deepEqual( Stem("kölni"), "köln");});
test("kölnivizes -> kölnivizes", function() {deepEqual( Stem("kölnivizes"), "kölnivizes");});
test("kölnivíz -> kölnivíz", function() {deepEqual( Stem("kölnivíz"), "kölnivíz");});
test("költekezik -> költekez", function() {deepEqual( Stem("költekezik"), "költekez");});
test("költekeznie -> költekezn", function() {deepEqual( Stem("költekeznie"), "költekezn");});
test("költekezés -> költekezés", function() {deepEqual( Stem("költekezés"), "költekezés");});
test("költeményeinek -> költemény", function() {deepEqual( Stem("költeményeinek"), "költemény");});
test("költeményeit -> költemény", function() {deepEqual( Stem("költeményeit"), "költemény");});
test("költemények -> költemény", function() {deepEqual( Stem("költemények"), "költemény");});
test("költeményektől -> költemény", function() {deepEqual( Stem("költeményektől"), "költemény");});
test("költenek -> költ", function() {deepEqual( Stem("költenek"), "költ");});
test("költ -> köl", function() {deepEqual( Stem("költ"), "köl");});
test("költeni -> költen", function() {deepEqual( Stem("költeni"), "költen");});
test("költenie -> költen", function() {deepEqual( Stem("költenie"), "költen");});
test("költeném -> költene", function() {deepEqual( Stem("költeném"), "költene");});
test("költi -> költ", function() {deepEqual( Stem("költi"), "költ");});
test("költik -> költ", function() {deepEqual( Stem("költik"), "költ");});
test("költsem -> költs", function() {deepEqual( Stem("költsem"), "költs");});
test("költheti -> költhet", function() {deepEqual( Stem("költheti"), "költhet");});
test("költhetnek -> költhet", function() {deepEqual( Stem("költhetnek"), "költhet");});
test("költsük -> költs", function() {deepEqual( Stem("költsük"), "költs");});
test("költségcsökkentés -> költségcsökkentés", function() {deepEqual( Stem("költségcsökkentés"), "költségcsökkentés");});
test("költség -> költség", function() {deepEqual( Stem("költség"), "költség");});
test("költségben -> költség", function() {deepEqual( Stem("költségben"), "költség");});
test("költségből -> költség", function() {deepEqual( Stem("költségből"), "költség");});
test("költsége -> költség", function() {deepEqual( Stem("költsége"), "költség");});
test("költségei -> költség", function() {deepEqual( Stem("költségei"), "költség");});
test("költségeibe -> költség", function() {deepEqual( Stem("költségeibe"), "költség");});
test("költségeiből -> költség", function() {deepEqual( Stem("költségeiből"), "költség");});
test("költségeik -> költség", function() {deepEqual( Stem("költségeik"), "költség");});
test("költségeinek -> költség", function() {deepEqual( Stem("költségeinek"), "költség");});
test("költségeinket -> költség", function() {deepEqual( Stem("költségeinket"), "költség");});
test("költségeire -> költség", function() {deepEqual( Stem("költségeire"), "költség");});
test("költségeit -> költség", function() {deepEqual( Stem("költségeit"), "költség");});
test("költségeivel -> költség", function() {deepEqual( Stem("költségeivel"), "költség");});
test("költségek -> költség", function() {deepEqual( Stem("költségek"), "költség");});
test("költségekbe -> költség", function() {deepEqual( Stem("költségekbe"), "költség");});
test("költségekből -> költség", function() {deepEqual( Stem("költségekből"), "költség");});
test("költségeket -> költség", function() {deepEqual( Stem("költségeket"), "költség");});
test("költségekkel -> költség", function() {deepEqual( Stem("költségekkel"), "költség");});
test("költségeknek -> költség", function() {deepEqual( Stem("költségeknek"), "költség");});
test("költségekről -> költség", function() {deepEqual( Stem("költségekről"), "költség");});
test("költségektől -> költség", function() {deepEqual( Stem("költségektől"), "költség");});
test("költségen -> költség", function() {deepEqual( Stem("költségen"), "költség");});
test("költséget -> költség", function() {deepEqual( Stem("költséget"), "költség");});
test("költséggel -> költség", function() {deepEqual( Stem("költséggel"), "költség");});
test("költséghez -> költség", function() {deepEqual( Stem("költséghez"), "költség");});
test("költségként -> költség", function() {deepEqual( Stem("költségként"), "költség");});
test("költségre -> költség", function() {deepEqual( Stem("költségre"), "költség");});
test("költségén -> költség", function() {deepEqual( Stem("költségén"), "költség");});
test("költségének -> költség", function() {deepEqual( Stem("költségének"), "költség");});
test("költségére -> költség", function() {deepEqual( Stem("költségére"), "költség");});
test("költségét -> költség", function() {deepEqual( Stem("költségét"), "költség");});
test("költséges -> költséges", function() {deepEqual( Stem("költséges"), "költséges");});
test("költségesebb -> költségesebb", function() {deepEqual( Stem("költségesebb"), "költségesebb");});
test("költségessé -> költséges", function() {deepEqual( Stem("költségessé"), "költséges");});
test("költséghatékonnyá -> költséghatékony", function() {deepEqual( Stem("költséghatékonnyá"), "költséghatékony");});
test("költséghatékony -> költséghatékony", function() {deepEqual( Stem("költséghatékony"), "költséghatékony");});
test("költséghatékonyabb -> költséghatékonyabb", function() {deepEqual( Stem("költséghatékonyabb"), "költséghatékonyabb");});
test("költséghatékonysági -> költséghatékonyság", function() {deepEqual( Stem("költséghatékonysági"), "költséghatékonyság");});
test("költséghatékonyságot -> költséghatékonyság", function() {deepEqual( Stem("költséghatékonyságot"), "költséghatékonyság");});
test("költséghatékonyság -> költséghatékonyság", function() {deepEqual( Stem("költséghatékonyság"), "költséghatékonyság");});
test("költségigénye -> költségigény", function() {deepEqual( Stem("költségigénye"), "költségigény");});
test("költségkereten -> költségkeret", function() {deepEqual( Stem("költségkereten"), "költségkeret");});
test("költségkímélési -> költségkímélés", function() {deepEqual( Stem("költségkímélési"), "költségkímélés");});
test("költségkímélő -> költségkímélő", function() {deepEqual( Stem("költségkímélő"), "költségkímélő");});
test("költségmegtakarítás -> költségmegtakarítás", function() {deepEqual( Stem("költségmegtakarítás"), "költségmegtakarítás");});
test("költségmentesen -> költségmentes", function() {deepEqual( Stem("költségmentesen"), "költségmentes");});
test("költségnövekedést -> költségnövekedés", function() {deepEqual( Stem("költségnövekedést"), "költségnövekedés");});
test("költségstruktúrákhoz -> költségstruktúra", function() {deepEqual( Stem("költségstruktúrákhoz"), "költségstruktúra");});
test("költségszegmensben -> költségszegmens", function() {deepEqual( Stem("költségszegmensben"), "költségszegmens");});
test("költségszintű -> költségszintű", function() {deepEqual( Stem("költségszintű"), "költségszintű");});
test("költségszámítás -> költségszámítás", function() {deepEqual( Stem("költségszámítás"), "költségszámítás");});
test("költségtanulmányok -> költségtanulmány", function() {deepEqual( Stem("költségtanulmányok"), "költségtanulmány");});
test("költségtáblák -> költségtábla", function() {deepEqual( Stem("költségtáblák"), "költségtábla");});
test("költségtérítés -> költségtérítés", function() {deepEqual( Stem("költségtérítés"), "költségtérítés");});
test("költségtérítést -> költségtérítés", function() {deepEqual( Stem("költségtérítést"), "költségtérítés");});
test("költségvetés-készítés -> költségvetés-készítés", function() {deepEqual( Stem("költségvetés-készítés"), "költségvetés-készítés");});
test("költségvetési -> költségvetés", function() {deepEqual( Stem("költségvetési"), "költségvetés");});
test("költségvetésbe -> költségvetés", function() {deepEqual( Stem("költségvetésbe"), "költségvetés");});
test("költségvetés -> költségvetés", function() {deepEqual( Stem("költségvetés"), "költségvetés");});
test("költségvetésben -> költségvetés", function() {deepEqual( Stem("költségvetésben"), "költségvetés");});
test("költségvetésből -> költségvetés", function() {deepEqual( Stem("költségvetésből"), "költségvetés");});
test("költségvetése -> költségvetés", function() {deepEqual( Stem("költségvetése"), "költségvetés");});
test("költségvetésekből -> költségvetés", function() {deepEqual( Stem("költségvetésekből"), "költségvetés");});
test("költségvetésen -> költségvetés", function() {deepEqual( Stem("költségvetésen"), "költségvetés");});
test("költségvetésként -> költségvetés", function() {deepEqual( Stem("költségvetésként"), "költségvetés");});
test("költségvetésre -> költségvetés", function() {deepEqual( Stem("költségvetésre"), "költségvetés");});
test("költségvetésről -> költségvetés", function() {deepEqual( Stem("költségvetésről"), "költségvetés");});
test("költségvetést -> költségvetés", function() {deepEqual( Stem("költségvetést"), "költségvetés");});
test("költségvetéstől -> költségvetés", function() {deepEqual( Stem("költségvetéstől"), "költségvetés");});
test("költségvetésébe -> költségvetés", function() {deepEqual( Stem("költségvetésébe"), "költségvetés");});
test("költségvetésében -> költségvetés", function() {deepEqual( Stem("költségvetésében"), "költségvetés");});
test("költségvetéséből -> költségvetés", function() {deepEqual( Stem("költségvetéséből"), "költségvetés");});
test("költségvetésének -> költségvetés", function() {deepEqual( Stem("költségvetésének"), "költségvetés");});
test("költségvetését -> költségvetés", function() {deepEqual( Stem("költségvetését"), "költségvetés");});
test("költségvetésével -> költségvetés", function() {deepEqual( Stem("költségvetésével"), "költségvetés");});
test("költségvetésük -> költségvetés", function() {deepEqual( Stem("költségvetésük"), "költségvetés");});
test("költségvetésükből -> költségvetés", function() {deepEqual( Stem("költségvetésükből"), "költségvetés");});
test("költségvetésüket -> költségvetés", function() {deepEqual( Stem("költségvetésüket"), "költségvetés");});
test("költségvetésünk -> költségvetés", function() {deepEqual( Stem("költségvetésünk"), "költségvetés");});
test("költségvetésű -> költségvetésű", function() {deepEqual( Stem("költségvetésű"), "költségvetésű");});
test("költségviselés -> költségviselés", function() {deepEqual( Stem("költségviselés"), "költségviselés");});
test("költségvonzata -> költségvonzat", function() {deepEqual( Stem("költségvonzata"), "költségvonzat");});
test("költségátalánynak -> költségátalány", function() {deepEqual( Stem("költségátalánynak"), "költségátalány");});
test("költségátalányt -> költségátalány", function() {deepEqual( Stem("költségátalányt"), "költségátalány");});
test("költségű -> költségű", function() {deepEqual( Stem("költségű"), "költségű");});
test("költészet -> költész", function() {deepEqual( Stem("költészet"), "költész");});
test("költészetbe -> költészet", function() {deepEqual( Stem("költészetbe"), "költészet");});
test("költészete -> költészet", function() {deepEqual( Stem("költészete"), "költészet");});
test("költészetnek -> költészet", function() {deepEqual( Stem("költészetnek"), "költészet");});
test("költészettel -> költész", function() {deepEqual( Stem("költészettel"), "költész");});
test("költészetéről -> költészet", function() {deepEqual( Stem("költészetéről"), "költészet");});
test("költészetét -> költészet", function() {deepEqual( Stem("költészetét"), "költészet");});
test("költésén -> költés", function() {deepEqual( Stem("költésén"), "költés");});
test("költése -> költés", function() {deepEqual( Stem("költése"), "költés");});
test("költői -> költő", function() {deepEqual( Stem("költői"), "költő");});
test("költő -> költő", function() {deepEqual( Stem("költő"), "költő");});
test("költőinek -> költő", function() {deepEqual( Stem("költőinek"), "költő");});
test("költők -> költő", function() {deepEqual( Stem("költők"), "költő");});
test("költőnek -> költő", function() {deepEqual( Stem("költőnek"), "költő");});
test("költőnek -> költő", function() {deepEqual( Stem("költőnek"), "költő");});
test("költőt -> költő", function() {deepEqual( Stem("költőt"), "költő");});
test("költővel -> költő", function() {deepEqual( Stem("költővel"), "költő");});
test("költőiséget -> költőiség", function() {deepEqual( Stem("költőiséget"), "költőiség");});
test("költök -> költ", function() {deepEqual( Stem("költök"), "költ");});
test("költöm -> költö", function() {deepEqual( Stem("költöm"), "költö");});
test("költötte -> költött", function() {deepEqual( Stem("költötte"), "költött");});
test("költöttek -> költött", function() {deepEqual( Stem("költöttek"), "költött");});
test("költöttem -> költött", function() {deepEqual( Stem("költöttem"), "költött");});
test("költöttük -> költött", function() {deepEqual( Stem("költöttük"), "költött");});
test("költött -> költöt", function() {deepEqual( Stem("költött"), "költöt");});
test("költözködni -> költözködn", function() {deepEqual( Stem("költözködni"), "költözködn");});
test("költözködés -> költözködés", function() {deepEqual( Stem("költözködés"), "költözködés");});
test("költözni -> költözn", function() {deepEqual( Stem("költözni"), "költözn");});
test("költöznie -> költözn", function() {deepEqual( Stem("költöznie"), "költözn");});
test("költöztem -> költözt", function() {deepEqual( Stem("költöztem"), "költözt");});
test("költöztünk -> költözt", function() {deepEqual( Stem("költöztünk"), "költözt");});
test("költözzek -> költözz", function() {deepEqual( Stem("költözzek"), "költözz");});
test("költözöm -> költözö", function() {deepEqual( Stem("költözöm"), "költözö");});
test("költöztették -> költöztette", function() {deepEqual( Stem("költöztették"), "költöztette");});
test("költöztetéstől -> költöztetés", function() {deepEqual( Stem("költöztetéstől"), "költöztetés");});
test("költözés -> költözés", function() {deepEqual( Stem("költözés"), "költözés");});
test("költözött -> költözöt", function() {deepEqual( Stem("költözött"), "költözöt");});
test("költünk -> költ", function() {deepEqual( Stem("költünk"), "költ");});
test("kölykei -> köly", function() {deepEqual( Stem("kölykei"), "köly");});
test("kölykeit -> köly", function() {deepEqual( Stem("kölykeit"), "köly");});
test("kölykét -> köly", function() {deepEqual( Stem("kölykét"), "köly");});
test("kölykök -> kölyk", function() {deepEqual( Stem("kölykök"), "kölyk");});
test("kölyköket -> kölyk", function() {deepEqual( Stem("kölyköket"), "kölyk");});
test("kölyköm -> kölykö", function() {deepEqual( Stem("kölyköm"), "kölykö");});
test("kölyköt -> köly", function() {deepEqual( Stem("kölyköt"), "köly");});
test("kölyök -> köly", function() {deepEqual( Stem("kölyök"), "köly");});
test("kölyökkel -> köly", function() {deepEqual( Stem("kölyökkel"), "köly");});
test("kölyöknek -> köly", function() {deepEqual( Stem("kölyöknek"), "köly");});
test("kölyöktől -> köly", function() {deepEqual( Stem("kölyöktől"), "köly");});
test("könnnyebbségeivel -> könnnyebbség", function() {deepEqual( Stem("könnnyebbségeivel"), "könnnyebbség");});
test("könnycsepp -> könnycsepp", function() {deepEqual( Stem("könnycsepp"), "könnycsepp");});
test("könnycseppet -> könnycsepp", function() {deepEqual( Stem("könnycseppet"), "könnycsepp");});
test("könnyebb -> könnyebb", function() {deepEqual( Stem("könnyebb"), "könnyebb");});
test("könnyebben -> könnyeb", function() {deepEqual( Stem("könnyebben"), "könnyeb");});
test("könnyebbik -> könnyebb", function() {deepEqual( Stem("könnyebbik"), "könnyebb");});
test("könnyebbé -> könnyeb", function() {deepEqual( Stem("könnyebbé"), "könnyeb");});
test("könnyen -> könny", function() {deepEqual( Stem("könnyen"), "könny");});
test("könnyű -> könnyű", function() {deepEqual( Stem("könnyű"), "könnyű");});
test("könnyűnek -> könnyű", function() {deepEqual( Stem("könnyűnek"), "könnyű");});
test("könnyebbség -> könnyebbség", function() {deepEqual( Stem("könnyebbség"), "könnyebbség");});
test("könnyed -> könny", function() {deepEqual( Stem("könnyed"), "könny");});
test("könnyednek -> könny", function() {deepEqual( Stem("könnyednek"), "könny");});
test("könnyedén -> könnyed", function() {deepEqual( Stem("könnyedén"), "könnyed");});
test("könnyedséggel -> könnyedség", function() {deepEqual( Stem("könnyedséggel"), "könnyedség");});
test("könnyedségre -> könnyedség", function() {deepEqual( Stem("könnyedségre"), "könnyedség");});
test("könnyei -> könny", function() {deepEqual( Stem("könnyei"), "könny");});
test("könnyeinkkel -> könny", function() {deepEqual( Stem("könnyeinkkel"), "könny");});
test("könnyeit -> könny", function() {deepEqual( Stem("könnyeit"), "könny");});
test("könnyek -> könny", function() {deepEqual( Stem("könnyek"), "könny");});
test("könnyekben -> könny", function() {deepEqual( Stem("könnyekben"), "könny");});
test("könnyeket -> könny", function() {deepEqual( Stem("könnyeket"), "könny");});
test("könnyekkel -> könny", function() {deepEqual( Stem("könnyekkel"), "könny");});
test("könnyeknek -> könny", function() {deepEqual( Stem("könnyeknek"), "könny");});
test("könnyel -> köny", function() {deepEqual( Stem("könnyel"), "köny");});
test("könny -> könny", function() {deepEqual( Stem("könny"), "könny");});
test("könnybe -> könny", function() {deepEqual( Stem("könnybe"), "könny");});
test("könnynek -> könny", function() {deepEqual( Stem("könnynek"), "könny");});
test("könnyükben -> könny", function() {deepEqual( Stem("könnyükben"), "könny");});
test("könnyelmű -> könnyelmű", function() {deepEqual( Stem("könnyelmű"), "könnyelmű");});
test("könnyelműen -> könnyelmű", function() {deepEqual( Stem("könnyelműen"), "könnyelmű");});
test("könnyelműnek -> könnyelmű", function() {deepEqual( Stem("könnyelműnek"), "könnyelmű");});
test("könnyelműség -> könnyelműség", function() {deepEqual( Stem("könnyelműség"), "könnyelműség");});
test("könnyelműséget -> könnyelműség", function() {deepEqual( Stem("könnyelműséget"), "könnyelműség");});
test("könnyelműségét -> könnyelműség", function() {deepEqual( Stem("könnyelműségét"), "könnyelműség");});
test("könnyes -> könnyes", function() {deepEqual( Stem("könnyes"), "könnyes");});
test("könnyezni -> könnyezn", function() {deepEqual( Stem("könnyezni"), "könnyezn");});
test("könnyezve -> könnyezv", function() {deepEqual( Stem("könnyezve"), "könnyezv");});
test("könnyít -> könnyí", function() {deepEqual( Stem("könnyít"), "könnyí");});
test("könnyíteni -> könnyíten", function() {deepEqual( Stem("könnyíteni"), "könnyíten");});
test("könnyítené -> könnyíten", function() {deepEqual( Stem("könnyítené"), "könnyíten");});
test("könnyítették -> könnyítette", function() {deepEqual( Stem("könnyítették"), "könnyítette");});
test("könnyíti -> könnyít", function() {deepEqual( Stem("könnyíti"), "könnyít");});
test("könnyítik -> könnyít", function() {deepEqual( Stem("könnyítik"), "könnyít");});
test("könnyítse -> könnyíts", function() {deepEqual( Stem("könnyítse"), "könnyíts");});
test("könnyítéseket -> könnyítés", function() {deepEqual( Stem("könnyítéseket"), "könnyítés");});
test("könnyítő -> könnyítő", function() {deepEqual( Stem("könnyítő"), "könnyítő");});
test("könnyűfém -> könnyűfe", function() {deepEqual( Stem("könnyűfém"), "könnyűfe");});
test("könnyűszerrel -> könnyűszer", function() {deepEqual( Stem("könnyűszerrel"), "könnyűszer");});
test("könnyűzenei -> könnyűzen", function() {deepEqual( Stem("könnyűzenei"), "könnyűzen");});
test("köntinget -> könting", function() {deepEqual( Stem("köntinget"), "könting");});
test("köntös -> köntös", function() {deepEqual( Stem("köntös"), "köntös");});
test("köntöst -> köntös", function() {deepEqual( Stem("köntöst"), "köntös");});
test("köntösömnek -> köntösö", function() {deepEqual( Stem("köntösömnek"), "köntösö");});
test("könyben -> köny", function() {deepEqual( Stem("könyben"), "köny");});
test("könyvcsomagot -> könyvcsomag", function() {deepEqual( Stem("könyvcsomagot"), "könyvcsomag");});
test("könyvecskéje -> könyvecské", function() {deepEqual( Stem("könyvecskéje"), "könyvecské");});
test("könyveibe -> könyv", function() {deepEqual( Stem("könyveibe"), "könyv");});
test("könyv -> könyv", function() {deepEqual( Stem("könyv"), "könyv");});
test("könyvbe -> könyv", function() {deepEqual( Stem("könyvbe"), "könyv");});
test("könyvben -> könyv", function() {deepEqual( Stem("könyvben"), "könyv");});
test("könyvből -> könyv", function() {deepEqual( Stem("könyvből"), "könyv");});
test("könyve -> könyv", function() {deepEqual( Stem("könyve"), "könyv");});
test("könyveinek -> könyv", function() {deepEqual( Stem("könyveinek"), "könyv");});
test("könyveit -> könyv", function() {deepEqual( Stem("könyveit"), "könyv");});
test("könyvek -> könyv", function() {deepEqual( Stem("könyvek"), "könyv");});
test("könyvekben -> könyv", function() {deepEqual( Stem("könyvekben"), "könyv");});
test("könyvekből -> könyv", function() {deepEqual( Stem("könyvekből"), "könyv");});
test("könyveken -> könyv", function() {deepEqual( Stem("könyveken"), "könyv");});
test("könyvem -> könyv", function() {deepEqual( Stem("könyvem"), "könyv");});
test("könyvemben -> könyv", function() {deepEqual( Stem("könyvemben"), "könyv");});
test("könyvemhez -> könyv", function() {deepEqual( Stem("könyvemhez"), "könyv");});
test("könyvet -> könyv", function() {deepEqual( Stem("könyvet"), "könyv");});
test("könyvhöz -> könyv", function() {deepEqual( Stem("könyvhöz"), "könyv");});
test("könyvként -> könyv", function() {deepEqual( Stem("könyvként"), "könyv");});
test("könyvnek -> könyv", function() {deepEqual( Stem("könyvnek"), "könyv");});
test("könyvre -> könyv", function() {deepEqual( Stem("könyvre"), "könyv");});
test("könyvről -> könyv", function() {deepEqual( Stem("könyvről"), "könyv");});
test("könyvtől -> könyv", function() {deepEqual( Stem("könyvtől"), "könyv");});
test("könyvébe -> könyv", function() {deepEqual( Stem("könyvébe"), "könyv");});
test("könyvében -> könyv", function() {deepEqual( Stem("könyvében"), "könyv");});
test("könyvéből -> könyv", function() {deepEqual( Stem("könyvéből"), "könyv");});
test("könyvének -> könyv", function() {deepEqual( Stem("könyvének"), "könyv");});
test("könyvére -> könyv", function() {deepEqual( Stem("könyvére"), "könyv");});
test("könyvéről -> könyv", function() {deepEqual( Stem("könyvéről"), "könyv");});
test("könyvét -> könyv", function() {deepEqual( Stem("könyvét"), "könyv");});
test("könyvével -> könyv", function() {deepEqual( Stem("könyvével"), "könyv");});
test("könyvünk -> könyv", function() {deepEqual( Stem("könyvünk"), "könyv");});
test("könyvünkben -> könyv", function() {deepEqual( Stem("könyvünkben"), "könyv");});
test("könyvvel -> könyv", function() {deepEqual( Stem("könyvvel"), "könyv");});
test("könyvekereskedő -> könyvekereskedő", function() {deepEqual( Stem("könyvekereskedő"), "könyvekereskedő");});
test("könyveket -> könyv", function() {deepEqual( Stem("könyveket"), "könyv");});
test("könyvekkel -> könyv", function() {deepEqual( Stem("könyvekkel"), "könyv");});
test("könyvekről -> könyv", function() {deepEqual( Stem("könyvekről"), "könyv");});
test("könyvel -> köny", function() {deepEqual( Stem("könyvel"), "köny");});
test("könyvelheti -> könyvelhet", function() {deepEqual( Stem("könyvelheti"), "könyvelhet");});
test("könyvelhettek -> könyvelhett", function() {deepEqual( Stem("könyvelhettek"), "könyvelhett");});
test("könyvelhetett -> könyvelhetet", function() {deepEqual( Stem("könyvelhetett"), "könyvelhetet");});
test("könyvelhettem -> könyvelhett", function() {deepEqual( Stem("könyvelhettem"), "könyvelhett");});
test("könyveli -> könyvel", function() {deepEqual( Stem("könyveli"), "könyvel");});
test("könyvelte -> könyvelt", function() {deepEqual( Stem("könyvelte"), "könyvelt");});
test("könyvelés -> könyvelés", function() {deepEqual( Stem("könyvelés"), "könyvelés");});
test("könyvelése -> könyvelés", function() {deepEqual( Stem("könyvelése"), "könyvelés");});
test("könyvelést -> könyvelés", function() {deepEqual( Stem("könyvelést"), "könyvelés");});
test("könyvelési -> könyvelés", function() {deepEqual( Stem("könyvelési"), "könyvelés");});
test("könyvelő -> könyvelő", function() {deepEqual( Stem("könyvelő"), "könyvelő");});
test("könyvelőjét -> könyvelő", function() {deepEqual( Stem("könyvelőjét"), "könyvelő");});
test("könyvelőként -> könyvelő", function() {deepEqual( Stem("könyvelőként"), "könyvelő");});
test("könyvelőszoftver -> könyvelőszoftver", function() {deepEqual( Stem("könyvelőszoftver"), "könyvelőszoftver");});
test("könyvesbolt -> könyvesbol", function() {deepEqual( Stem("könyvesbolt"), "könyvesbol");});
test("könyvesboltból -> könyvesbolt", function() {deepEqual( Stem("könyvesboltból"), "könyvesbolt");});
test("könyvesboltokba -> könyvesbolt", function() {deepEqual( Stem("könyvesboltokba"), "könyvesbolt");});
test("könyvespolcok -> könyvespolc", function() {deepEqual( Stem("könyvespolcok"), "könyvespolc");});
test("könyvfesztiválra -> könyvfesztivál", function() {deepEqual( Stem("könyvfesztiválra"), "könyvfesztivál");});
test("könyvhalmaz -> könyvhalmaz", function() {deepEqual( Stem("könyvhalmaz"), "könyvhalmaz");});
test("könyvismertetésnek -> könyvismertetés", function() {deepEqual( Stem("könyvismertetésnek"), "könyvismertetés");});
test("könyvismertetőiben -> könyvismertető", function() {deepEqual( Stem("könyvismertetőiben"), "könyvismertető");});
test("könyvjelzőre -> könyvjelző", function() {deepEqual( Stem("könyvjelzőre"), "könyvjelző");});
test("könyvkereskedelem -> könyvkereskedel", function() {deepEqual( Stem("könyvkereskedelem"), "könyvkereskedel");});
test("könyvkereskedő -> könyvkereskedő", function() {deepEqual( Stem("könyvkereskedő"), "könyvkereskedő");});
test("könyvkiadás -> könyvkiadás", function() {deepEqual( Stem("könyvkiadás"), "könyvkiadás");});
test("könyvkiadásban -> könyvkiadás", function() {deepEqual( Stem("könyvkiadásban"), "könyvkiadás");});
test("könyvkiadással -> könyvkiadás", function() {deepEqual( Stem("könyvkiadással"), "könyvkiadás");});
test("könyvkiadói -> könyvkiadó", function() {deepEqual( Stem("könyvkiadói"), "könyvkiadó");});
test("könyvkiadók -> könyvkiadó", function() {deepEqual( Stem("könyvkiadók"), "könyvkiadó");});
test("könyvkritikákat -> könyvkritika", function() {deepEqual( Stem("könyvkritikákat"), "könyvkritika");});
test("könyvoldal -> könyvoldal", function() {deepEqual( Stem("könyvoldal"), "könyvoldal");});
test("könyvpiacon -> könyvpiac", function() {deepEqual( Stem("könyvpiacon"), "könyvpiac");});
test("könyvritkaság -> könyvritkaság", function() {deepEqual( Stem("könyvritkaság"), "könyvritkaság");});
test("könyvrészlegét -> könyvrészleg", function() {deepEqual( Stem("könyvrészlegét"), "könyvrészleg");});
test("könyvsorozat -> könyvsoroz", function() {deepEqual( Stem("könyvsorozat"), "könyvsoroz");});
test("könyvszakértői -> könyvszakértő", function() {deepEqual( Stem("könyvszakértői"), "könyvszakértő");});
test("könyvszakértők -> könyvszakértő", function() {deepEqual( Stem("könyvszakértők"), "könyvszakértő");});
test("könyvszekrény -> könyvszekrény", function() {deepEqual( Stem("könyvszekrény"), "könyvszekrény");});
test("könyvszekrényre -> könyvszekrény", function() {deepEqual( Stem("könyvszekrényre"), "könyvszekrény");});
test("könyvtár-automatizálási -> könyvtár-automatizálás", function() {deepEqual( Stem("könyvtár-automatizálási"), "könyvtár-automatizálás");});
test("könyvtárablakokban -> könyvtárablak", function() {deepEqual( Stem("könyvtárablakokban"), "könyvtárablak");});
test("könyvtáraiból -> könyvtár", function() {deepEqual( Stem("könyvtáraiból"), "könyvtár");});
test("könyvtára -> könyvt", function() {deepEqual( Stem("könyvtára"), "könyvt");});
test("könyvtár -> könyvtár", function() {deepEqual( Stem("könyvtár"), "könyvtár");});
test("könyvtáraihoz -> könyvtár", function() {deepEqual( Stem("könyvtáraihoz"), "könyvtár");});
test("könyvtárait -> könyvtár", function() {deepEqual( Stem("könyvtárait"), "könyvtár");});
test("könyvtárak -> könyvtár", function() {deepEqual( Stem("könyvtárak"), "könyvtár");});
test("könyvtárakat -> könyvtár", function() {deepEqual( Stem("könyvtárakat"), "könyvtár");});
test("könyvtárakba -> könyvtár", function() {deepEqual( Stem("könyvtárakba"), "könyvtár");});
test("könyvtárakban -> könyvtár", function() {deepEqual( Stem("könyvtárakban"), "könyvtár");});
test("könyvtárakhoz -> könyvtár", function() {deepEqual( Stem("könyvtárakhoz"), "könyvtár");});
test("könyvtárakkal -> könyvtár", function() {deepEqual( Stem("könyvtárakkal"), "könyvtár");});
test("könyvtárakról -> könyvtár", function() {deepEqual( Stem("könyvtárakról"), "könyvtár");});
test("könyvtáraktól -> könyvtár", function() {deepEqual( Stem("könyvtáraktól"), "könyvtár");});
test("könyvtárat -> könyvtár", function() {deepEqual( Stem("könyvtárat"), "könyvtár");});
test("könyvtárba -> könyvtár", function() {deepEqual( Stem("könyvtárba"), "könyvtár");});
test("könyvtárban -> könyvtár", function() {deepEqual( Stem("könyvtárban"), "könyvtár");});
test("könyvtárból -> könyvtár", function() {deepEqual( Stem("könyvtárból"), "könyvtár");});
test("könyvtárhoz -> könyvtár", function() {deepEqual( Stem("könyvtárhoz"), "könyvtár");});
test("könyvtárnak -> könyvtár", function() {deepEqual( Stem("könyvtárnak"), "könyvtár");});
test("könyvtárnak -> könyvtár", function() {deepEqual( Stem("könyvtárnak"), "könyvtár");});
test("könyvtárt -> könyvtár", function() {deepEqual( Stem("könyvtárt"), "könyvtár");});
test("könyvtárnál -> könyvtár", function() {deepEqual( Stem("könyvtárnál"), "könyvtár");});
test("könyvtárában -> könyvtár", function() {deepEqual( Stem("könyvtárában"), "könyvtár");});
test("könyvtárából -> könyvtár", function() {deepEqual( Stem("könyvtárából"), "könyvtár");});
test("könyvtárához -> könyvtár", function() {deepEqual( Stem("könyvtárához"), "könyvtár");});
test("könyvtárának -> könyvtár", function() {deepEqual( Stem("könyvtárának"), "könyvtár");});
test("könyvtárát -> könyvtár", function() {deepEqual( Stem("könyvtárát"), "könyvtár");});
test("könyvtárbejegyzése -> könyvtárbejegyzés", function() {deepEqual( Stem("könyvtárbejegyzése"), "könyvtárbejegyzés");});
test("könyvtárbejegyzések -> könyvtárbejegyzés", function() {deepEqual( Stem("könyvtárbejegyzések"), "könyvtárbejegyzés");});
test("könyvtárbejegyzést -> könyvtárbejegyzés", function() {deepEqual( Stem("könyvtárbejegyzést"), "könyvtárbejegyzés");});
test("könyvtárbejegyzésében -> könyvtárbejegyzés", function() {deepEqual( Stem("könyvtárbejegyzésében"), "könyvtárbejegyzés");});
test("könyvtárfa -> könyvtárf", function() {deepEqual( Stem("könyvtárfa"), "könyvtárf");});
test("könyvtárfáival -> könyvtárfa", function() {deepEqual( Stem("könyvtárfáival"), "könyvtárfa");});
test("könyvtárfája -> könyvtárfá", function() {deepEqual( Stem("könyvtárfája"), "könyvtárfá");});
test("könyvtárfán -> könyvtárf", function() {deepEqual( Stem("könyvtárfán"), "könyvtárf");});
test("könyvtári -> könyvtár", function() {deepEqual( Stem("könyvtári"), "könyvtár");});
test("könyvtárközi -> könyvtárköz", function() {deepEqual( Stem("könyvtárközi"), "könyvtárköz");});
test("könyvtármegosztás -> könyvtármegosztás", function() {deepEqual( Stem("könyvtármegosztás"), "könyvtármegosztás");});
test("könyvtármegosztásban -> könyvtármegosztás", function() {deepEqual( Stem("könyvtármegosztásban"), "könyvtármegosztás");});
test("könyvtármegosztáshoz -> könyvtármegosztás", function() {deepEqual( Stem("könyvtármegosztáshoz"), "könyvtármegosztás");});
test("könyvtármegosztások -> könyvtármegosztás", function() {deepEqual( Stem("könyvtármegosztások"), "könyvtármegosztás");});
test("könyvtármegosztásokat -> könyvtármegosztás", function() {deepEqual( Stem("könyvtármegosztásokat"), "könyvtármegosztás");});
test("könyvtármegosztásokhoz -> könyvtármegosztás", function() {deepEqual( Stem("könyvtármegosztásokhoz"), "könyvtármegosztás");});
test("könyvtármegosztáson -> könyvtármegosztás", function() {deepEqual( Stem("könyvtármegosztáson"), "könyvtármegosztás");});
test("könyvtármegosztást -> könyvtármegosztás", function() {deepEqual( Stem("könyvtármegosztást"), "könyvtármegosztás");});
test("könyvtárnevet -> könyvtárnev", function() {deepEqual( Stem("könyvtárnevet"), "könyvtárnev");});
test("könyvtárnév -> könyvtárnév", function() {deepEqual( Stem("könyvtárnév"), "könyvtárnév");});
test("könyvtáron -> könyvtár", function() {deepEqual( Stem("könyvtáron"), "könyvtár");});
test("könyvtárra -> könyvtár", function() {deepEqual( Stem("könyvtárra"), "könyvtár");});
test("könyvtárral -> könyvtár", function() {deepEqual( Stem("könyvtárral"), "könyvtár");});
test("könyvtárrá -> könyvtár", function() {deepEqual( Stem("könyvtárrá"), "könyvtár");});
test("könyvtárról -> könyvtár", function() {deepEqual( Stem("könyvtárról"), "könyvtár");});
test("könyvtárstruktúra -> könyvtárstruktú", function() {deepEqual( Stem("könyvtárstruktúra"), "könyvtárstruktú");});
test("könyvtárstruktúrában -> könyvtárstruktúr", function() {deepEqual( Stem("könyvtárstruktúrában"), "könyvtárstruktúr");});
test("könyvtárstruktúrához -> könyvtárstruktúr", function() {deepEqual( Stem("könyvtárstruktúrához"), "könyvtárstruktúr");});
test("könyvtárstruktúrának -> könyvtárstruktúr", function() {deepEqual( Stem("könyvtárstruktúrának"), "könyvtárstruktúr");});
test("könyvtárstruktúrát -> könyvtárstruktúr", function() {deepEqual( Stem("könyvtárstruktúrát"), "könyvtárstruktúr");});
test("könyvtárszerkezet -> könyvtárszerkez", function() {deepEqual( Stem("könyvtárszerkezet"), "könyvtárszerkez");});
test("könyvtárszerkezete -> könyvtárszerkezet", function() {deepEqual( Stem("könyvtárszerkezete"), "könyvtárszerkezet");});
test("könyvtárszerkezetnek -> könyvtárszerkezet", function() {deepEqual( Stem("könyvtárszerkezetnek"), "könyvtárszerkezet");});
test("könyvtárszobába -> könyvtárszob", function() {deepEqual( Stem("könyvtárszobába"), "könyvtárszob");});
test("könyvtárváltás -> könyvtárváltás", function() {deepEqual( Stem("könyvtárváltás"), "könyvtárváltás");});
test("könyvutalványon -> könyvutalvány", function() {deepEqual( Stem("könyvutalványon"), "könyvutalvány");});
test("könyvvezetési -> könyvvezetés", function() {deepEqual( Stem("könyvvezetési"), "könyvvezetés");});
test("könyvviteli -> könyvvitel", function() {deepEqual( Stem("könyvviteli"), "könyvvitel");});
test("könyvvitellel -> könyvvitel", function() {deepEqual( Stem("könyvvitellel"), "könyvvitel");});
test("könyvvitelhez -> könyvvitel", function() {deepEqual( Stem("könyvvitelhez"), "könyvvitel");});
test("könyvvizsgálat -> könyvvizsgál", function() {deepEqual( Stem("könyvvizsgálat"), "könyvvizsgál");});
test("könyvvizsgálatot -> könyvvizsgálat", function() {deepEqual( Stem("könyvvizsgálatot"), "könyvvizsgálat");});
test("könyvvizsgálatért -> könyvvizsgálat", function() {deepEqual( Stem("könyvvizsgálatért"), "könyvvizsgálat");});
test("könyvvizsgálói -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálói"), "könyvvizsgáló");});
test("könyvvizsgálója -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálója"), "könyvvizsgáló");});
test("könyvvizsgáló -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgáló"), "könyvvizsgáló");});
test("könyvvizsgálójának -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálójának"), "könyvvizsgáló");});
test("könyvvizsgálójává -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálójává"), "könyvvizsgáló");});
test("könyvvizsgálók -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálók"), "könyvvizsgáló");});
test("könyvvizsgálókat -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálókat"), "könyvvizsgáló");});
test("könyvvizsgálókkal -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálókkal"), "könyvvizsgáló");});
test("könyvvizsgálókra -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálókra"), "könyvvizsgáló");});
test("könyvvizsgálónak -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálónak"), "könyvvizsgáló");});
test("könyvvizsgálóra -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálóra"), "könyvvizsgáló");});
test("könyvvizsgálót -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálót"), "könyvvizsgáló");});
test("könyvvizsgálóval -> könyvvizsgáló", function() {deepEqual( Stem("könyvvizsgálóval"), "könyvvizsgáló");});
test("könyvvásárlási -> könyvvásárlás", function() {deepEqual( Stem("könyvvásárlási"), "könyvvásárlás");});
test("könyvvásáron -> könyvvásár", function() {deepEqual( Stem("könyvvásáron"), "könyvvásár");});
test("könyvvásár -> könyvvásár", function() {deepEqual( Stem("könyvvásár"), "könyvvásár");});
test("könyékig -> könye", function() {deepEqual( Stem("könyékig"), "könye");});
test("könyökcső -> könyökcső", function() {deepEqual( Stem("könyökcső"), "könyökcső");});
test("könyökcsövén -> könyökcsöv", function() {deepEqual( Stem("könyökcsövén"), "könyökcsöv");});
test("könyökcsövét -> könyökcsöv", function() {deepEqual( Stem("könyökcsövét"), "könyökcsöv");});
test("könyökhajlatába -> könyökhajlat", function() {deepEqual( Stem("könyökhajlatába"), "könyökhajlat");});
test("könyöklő -> könyöklő", function() {deepEqual( Stem("könyöklő"), "könyöklő");});
test("könyöke -> köny", function() {deepEqual( Stem("könyöke"), "köny");});
test("könyökből -> köny", function() {deepEqual( Stem("könyökből"), "köny");});
test("könyökig -> köny", function() {deepEqual( Stem("könyökig"), "köny");});
test("könyökéig -> köny", function() {deepEqual( Stem("könyökéig"), "köny");});
test("könyökén -> köny", function() {deepEqual( Stem("könyökén"), "köny");});
test("könyökére -> köny", function() {deepEqual( Stem("könyökére"), "köny");});
test("könyökét -> köny", function() {deepEqual( Stem("könyökét"), "köny");});
test("könyökölve -> könyökölv", function() {deepEqual( Stem("könyökölve"), "könyökölv");});
test("könyörgés -> könyörgés", function() {deepEqual( Stem("könyörgés"), "könyörgés");});
test("könyörgések -> könyörgés", function() {deepEqual( Stem("könyörgések"), "könyörgés");});
test("könyörgéssel -> könyörgés", function() {deepEqual( Stem("könyörgéssel"), "könyörgés");});
test("könyörgő -> könyörgő", function() {deepEqual( Stem("könyörgő"), "könyörgő");});
test("könyörgöm -> könyörgö", function() {deepEqual( Stem("könyörgöm"), "könyörgö");});
test("könyörgött -> könyörgöt", function() {deepEqual( Stem("könyörgött"), "könyörgöt");});
test("könyörögnek -> könyörög", function() {deepEqual( Stem("könyörögnek"), "könyörög");});
test("könyörögni -> könyörögn", function() {deepEqual( Stem("könyörögni"), "könyörögn");});
test("könyörögtek -> könyörögt", function() {deepEqual( Stem("könyörögtek"), "könyörögt");});
test("könyörögtél -> könyörögtél", function() {deepEqual( Stem("könyörögtél"), "könyörögtél");});
test("könyörtelen -> könyörtel", function() {deepEqual( Stem("könyörtelen"), "könyörtel");});
test("könyörtelenebb -> könyörtelenebb", function() {deepEqual( Stem("könyörtelenebb"), "könyörtelenebb");});
test("könyörtelenek -> könyörtel", function() {deepEqual( Stem("könyörtelenek"), "könyörtel");});
test("könyörtelenül -> könyörtelen", function() {deepEqual( Stem("könyörtelenül"), "könyörtelen");});
test("köpcös -> köpcös", function() {deepEqual( Stem("köpcös"), "köpcös");});
test("köpenyanyag-feláramlások -> köpenyanyag-feláramlás", function() {deepEqual( Stem("köpenyanyag-feláramlások"), "köpenyanyag-feláramlás");});
test("köpenyben -> köpeny", function() {deepEqual( Stem("köpenyben"), "köpeny");});
test("köpeny -> köpeny", function() {deepEqual( Stem("köpeny"), "köpeny");});
test("köpenye -> köpeny", function() {deepEqual( Stem("köpenye"), "köpeny");});
test("köpenyekben -> köpeny", function() {deepEqual( Stem("köpenyekben"), "köpeny");});
test("köpenyemből -> köpeny", function() {deepEqual( Stem("köpenyemből"), "köpeny");});
test("köpenyen -> köpeny", function() {deepEqual( Stem("köpenyen"), "köpeny");});
test("köpenyt -> köpeny", function() {deepEqual( Stem("köpenyt"), "köpeny");});
test("köpenyéhez -> köpeny", function() {deepEqual( Stem("köpenyéhez"), "köpeny");});
test("köpenyes -> köpenyes", function() {deepEqual( Stem("köpenyes"), "köpenyes");});
test("köpenygallért -> köpenygall", function() {deepEqual( Stem("köpenygallért"), "köpenygall");});
test("köpenyszerűség -> köpenyszerűség", function() {deepEqual( Stem("köpenyszerűség"), "köpenyszerűség");});
test("köpök -> köp", function() {deepEqual( Stem("köpök"), "köp");});
test("köpönyegéből -> köpönyeg", function() {deepEqual( Stem("köpönyegéből"), "köpönyeg");});
test("köpött -> köpöt", function() {deepEqual( Stem("köpött"), "köpöt");});
test("köpülésével -> köpülés", function() {deepEqual( Stem("köpülésével"), "köpülés");});
test("körbe-körbe -> körbe-kör", function() {deepEqual( Stem("körbe-körbe"), "körbe-kör");});
test("kör -> kör", function() {deepEqual( Stem("kör"), "kör");});
test("körbe -> kör", function() {deepEqual( Stem("körbe"), "kör");});
test("körre -> kör", function() {deepEqual( Stem("körre"), "kör");});
test("körrel -> kör", function() {deepEqual( Stem("körrel"), "kör");});
test("körről -> kör", function() {deepEqual( Stem("körről"), "kör");});
test("körtől -> kör", function() {deepEqual( Stem("körtől"), "kör");});
test("kört -> kör", function() {deepEqual( Stem("kört"), "kör");});
test("körben -> kör", function() {deepEqual( Stem("körben"), "kör");});
test("körből -> kör", function() {deepEqual( Stem("körből"), "kör");});
test("köre -> kö", function() {deepEqual( Stem("köre"), "kö");});
test("köreihez -> kör", function() {deepEqual( Stem("köreihez"), "kör");});
test("köreimben -> kör", function() {deepEqual( Stem("köreimben"), "kör");});
test("köreinek -> kör", function() {deepEqual( Stem("köreinek"), "kör");});
test("körébe -> kör", function() {deepEqual( Stem("körébe"), "kör");});
test("körében -> kör", function() {deepEqual( Stem("körében"), "kör");});
test("köréből -> kör", function() {deepEqual( Stem("köréből"), "kör");});
test("köréhez -> kör", function() {deepEqual( Stem("köréhez"), "kör");});
test("körére -> kör", function() {deepEqual( Stem("körére"), "kör");});
test("körével -> kör", function() {deepEqual( Stem("körével"), "kör");});
test("köröd -> kör", function() {deepEqual( Stem("köröd"), "kör");});
test("körödnek -> kör", function() {deepEqual( Stem("körödnek"), "kör");});
test("körök -> kör", function() {deepEqual( Stem("körök"), "kör");});
test("körökben -> kör", function() {deepEqual( Stem("körökben"), "kör");});
test("körökből -> kör", function() {deepEqual( Stem("körökből"), "kör");});
test("köröket -> kör", function() {deepEqual( Stem("köröket"), "kör");});
test("körökig -> kör", function() {deepEqual( Stem("körökig"), "kör");});
test("körökkel -> kör", function() {deepEqual( Stem("körökkel"), "kör");});
test("körömet -> körö", function() {deepEqual( Stem("körömet"), "körö");});
test("körökre -> kör", function() {deepEqual( Stem("körökre"), "kör");});
test("körén -> kör", function() {deepEqual( Stem("körén"), "kör");});
test("körének -> kör", function() {deepEqual( Stem("körének"), "kör");});
test("körön -> kör", function() {deepEqual( Stem("körön"), "kör");});
test("körönként -> körön", function() {deepEqual( Stem("körönként"), "körön");});
test("körük -> kör", function() {deepEqual( Stem("körük"), "kör");});
test("körbejárjuk -> körbejár", function() {deepEqual( Stem("körbejárjuk"), "körbejár");});
test("körbejárni -> körbejárn", function() {deepEqual( Stem("körbejárni"), "körbejárn");});
test("körbejártam -> körbejárt", function() {deepEqual( Stem("körbejártam"), "körbejárt");});
test("körbejártunk -> körbejárt", function() {deepEqual( Stem("körbejártunk"), "körbejárt");});
test("körbejárt -> körbejár", function() {deepEqual( Stem("körbejárt"), "körbejár");});
test("körbekérdezgettük -> körbekérdezgett", function() {deepEqual( Stem("körbekérdezgettük"), "körbekérdezgett");});
test("körbementünk -> körbement", function() {deepEqual( Stem("körbementünk"), "körbement");});
test("körbemotoroztuk -> körbemotorozt", function() {deepEqual( Stem("körbemotoroztuk"), "körbemotorozt");});
test("körbenyargalt -> körbenyargal", function() {deepEqual( Stem("körbenyargalt"), "körbenyargal");});
test("körbenézek -> körbenéz", function() {deepEqual( Stem("körbenézek"), "körbenéz");});
test("körbenéztek -> körbenézt", function() {deepEqual( Stem("körbenéztek"), "körbenézt");});
test("körbenéztünk -> körbenézt", function() {deepEqual( Stem("körbenéztünk"), "körbenézt");});
test("körbenézünk -> körbenéz", function() {deepEqual( Stem("körbenézünk"), "körbenéz");});
test("körbenézésére -> körbenézés", function() {deepEqual( Stem("körbenézésére"), "körbenézés");});
test("körberepüli -> körberepül", function() {deepEqual( Stem("körberepüli"), "körberepül");});
test("körbeszimatolt -> körbeszimatol", function() {deepEqual( Stem("körbeszimatolt"), "körbeszimatol");});
test("körbesétált -> körbesétál", function() {deepEqual( Stem("körbesétált"), "körbesétál");});
test("körbesétáltam -> körbesétált", function() {deepEqual( Stem("körbesétáltam"), "körbesétált");});
test("körbesétáltuk -> körbesétált", function() {deepEqual( Stem("körbesétáltuk"), "körbesétált");});
test("körbeutazni -> körbeutazn", function() {deepEqual( Stem("körbeutazni"), "körbeutazn");});
test("körbeutazza -> körbeutazz", function() {deepEqual( Stem("körbeutazza"), "körbeutazz");});
test("körbevették -> körbevette", function() {deepEqual( Stem("körbevették"), "körbevette");});
test("körbevezet -> körbevez", function() {deepEqual( Stem("körbevezet"), "körbevez");});
test("körbevezetett -> körbevezetet", function() {deepEqual( Stem("körbevezetett"), "körbevezetet");});
test("körbeírás -> körbeírás", function() {deepEqual( Stem("körbeírás"), "körbeírás");});
test("körbeírást -> körbeírás", function() {deepEqual( Stem("körbeírást"), "körbeírás");});
test("körbeírását -> körbeírás", function() {deepEqual( Stem("körbeírását"), "körbeírás");});
test("körbeültünk -> körbeült", function() {deepEqual( Stem("körbeültünk"), "körbeült");});
test("köretek -> köret", function() {deepEqual( Stem("köretek"), "köret");});
test("körettel -> kör", function() {deepEqual( Stem("körettel"), "kör");});
test("köretével -> köret", function() {deepEqual( Stem("köretével"), "köret");});
test("körfaxon -> körfax", function() {deepEqual( Stem("körfaxon"), "körfax");});
test("körforgalom -> körforgal", function() {deepEqual( Stem("körforgalom"), "körforgal");});
test("körforgásának -> körforgás", function() {deepEqual( Stem("körforgásának"), "körforgás");});
test("körgyűrűt -> körgyűrű", function() {deepEqual( Stem("körgyűrűt"), "körgyűrű");});
test("körhinta -> körhint", function() {deepEqual( Stem("körhinta"), "körhint");});
test("körhintához -> körhint", function() {deepEqual( Stem("körhintához"), "körhint");});
test("körhintán -> körhint", function() {deepEqual( Stem("körhintán"), "körhint");});
test("körhintára -> körhint", function() {deepEqual( Stem("körhintára"), "körhint");});
test("körhintások -> körhintás", function() {deepEqual( Stem("körhintások"), "körhintás");});
test("körkép -> körkép", function() {deepEqual( Stem("körkép"), "körkép");});
test("körképet -> körkép", function() {deepEqual( Stem("körképet"), "körkép");});
test("körképhez -> körkép", function() {deepEqual( Stem("körképhez"), "körkép");});
test("körkérdésére -> körkérdés", function() {deepEqual( Stem("körkérdésére"), "körkérdés");});
test("körmenet -> körmen", function() {deepEqual( Stem("körmenet"), "körmen");});
test("körmenetben -> körmenet", function() {deepEqual( Stem("körmenetben"), "körmenet");});
test("körmenettel -> körmen", function() {deepEqual( Stem("körmenettel"), "körmen");});
test("körmét -> körm", function() {deepEqual( Stem("körmét"), "körm");});
test("körmei -> körm", function() {deepEqual( Stem("körmei"), "körm");});
test("körmöd -> körm", function() {deepEqual( Stem("körmöd"), "körm");});
test("körmöket -> körm", function() {deepEqual( Stem("körmöket"), "körm");});
test("körmömet -> körmö", function() {deepEqual( Stem("körmömet"), "körmö");});
test("körmöt -> kör", function() {deepEqual( Stem("körmöt"), "kör");});
test("körmük -> körm", function() {deepEqual( Stem("körmük"), "körm");});
test("körmönfontan -> körmönfont", function() {deepEqual( Stem("körmönfontan"), "körmönfont");});
test("körmösfont -> körmösfon", function() {deepEqual( Stem("körmösfont"), "körmösfon");});
test("környezet -> környez", function() {deepEqual( Stem("környezet"), "környez");});
test("környezetbe -> környezet", function() {deepEqual( Stem("környezetbe"), "környezet");});
test("környezetben -> környezet", function() {deepEqual( Stem("környezetben"), "környezet");});
test("környezetből -> környezet", function() {deepEqual( Stem("környezetből"), "környezet");});
test("környezete -> környezet", function() {deepEqual( Stem("környezete"), "környezet");});
test("környezetek -> környezet", function() {deepEqual( Stem("környezetek"), "környezet");});
test("környezetekbe -> környezet", function() {deepEqual( Stem("környezetekbe"), "környezet");});
test("környezetekben -> környezet", function() {deepEqual( Stem("környezetekben"), "környezet");});
test("környezetekkel -> környezet", function() {deepEqual( Stem("környezetekkel"), "környezet");});
test("környezetem -> környezet", function() {deepEqual( Stem("környezetem"), "környezet");});
test("környezetemben -> környezet", function() {deepEqual( Stem("környezetemben"), "környezet");});
test("környezetemből -> környezet", function() {deepEqual( Stem("környezetemből"), "környezet");});
test("környezetemet -> környezet", function() {deepEqual( Stem("környezetemet"), "környezet");});
test("környezetemnek -> környezet", function() {deepEqual( Stem("környezetemnek"), "környezet");});
test("környezetnek -> környezet", function() {deepEqual( Stem("környezetnek"), "környezet");});
test("környezetnél -> környezet", function() {deepEqual( Stem("környezetnél"), "környezet");});
test("környezetrekörnyezeten -> környezetrekörnyezet", function() {deepEqual( Stem("környezetrekörnyezeten"), "környezetrekörnyezet");});
test("környezetet -> környezet", function() {deepEqual( Stem("környezetet"), "környezet");});
test("környezettel -> környez", function() {deepEqual( Stem("környezettel"), "környez");});
test("környezetről -> környezet", function() {deepEqual( Stem("környezetről"), "környezet");});
test("környezethez -> környezet", function() {deepEqual( Stem("környezethez"), "környezet");});
test("környezetébe -> környezet", function() {deepEqual( Stem("környezetébe"), "környezet");});
test("környezetében -> környezet", function() {deepEqual( Stem("környezetében"), "környezet");});
test("környezetéből -> környezet", function() {deepEqual( Stem("környezetéből"), "környezet");});
test("környezetéhez -> környezet", function() {deepEqual( Stem("környezetéhez"), "környezet");});
test("környezetének -> környezet", function() {deepEqual( Stem("környezetének"), "környezet");});
test("környezetére -> környezet", function() {deepEqual( Stem("környezetére"), "környezet");});
test("környezetéről -> környezet", function() {deepEqual( Stem("környezetéről"), "környezet");});
test("környezetét -> környezet", function() {deepEqual( Stem("környezetét"), "környezet");});
test("környezetétől -> környezet", function() {deepEqual( Stem("környezetétől"), "környezet");});
test("környezetével -> környezet", function() {deepEqual( Stem("környezetével"), "környezet");});
test("környezetük -> környezet", function() {deepEqual( Stem("környezetük"), "környezet");});
test("környezetükből -> környezet", function() {deepEqual( Stem("környezetükből"), "környezet");});
test("környezetüket -> környezet", function() {deepEqual( Stem("környezetüket"), "környezet");});
test("környezetükhöz -> környezet", function() {deepEqual( Stem("környezetükhöz"), "környezet");});
test("környezetükkel -> környezet", function() {deepEqual( Stem("környezetükkel"), "környezet");});
test("környezetüknél -> környezet", function() {deepEqual( Stem("környezetüknél"), "környezet");});
test("környezetünkről -> környezet", function() {deepEqual( Stem("környezetünkről"), "környezet");});
test("környezetembeli -> környezetembel", function() {deepEqual( Stem("környezetembeli"), "környezetembel");});
test("környezeti -> környezet", function() {deepEqual( Stem("környezeti"), "környezet");});
test("környezetikár-elhárításra -> környezetikár-elhárítás", function() {deepEqual( Stem("környezetikár-elhárításra"), "környezetikár-elhárítás");});
test("környezetikár-mentesítési -> környezetikár-mentesítés", function() {deepEqual( Stem("környezetikár-mentesítési"), "környezetikár-mentesítés");});
test("környezetkárosítást -> környezetkárosítás", function() {deepEqual( Stem("környezetkárosítást"), "környezetkárosítás");});
test("környezetkárosító -> környezetkárosító", function() {deepEqual( Stem("környezetkárosító"), "környezetkárosító");});
test("környezetkímélő -> környezetkímélő", function() {deepEqual( Stem("környezetkímélő"), "környezetkímélő");});
test("környezetrehabilitációs -> környezetrehabilitációs", function() {deepEqual( Stem("környezetrehabilitációs"), "környezetrehabilitációs");});
test("környezetrészt -> környezetrész", function() {deepEqual( Stem("környezetrészt"), "környezetrész");});
test("környezetszennyezés -> környezetszennyezés", function() {deepEqual( Stem("környezetszennyezés"), "környezetszennyezés");});
test("környezetszennyezésről -> környezetszennyezés", function() {deepEqual( Stem("környezetszennyezésről"), "környezetszennyezés");});
test("környezetszennyezésért -> környezetszennyezés", function() {deepEqual( Stem("környezetszennyezésért"), "környezetszennyezés");});
test("környezetszennyező -> környezetszennyező", function() {deepEqual( Stem("környezetszennyező"), "környezetszennyező");});
test("környezetszennyeződés -> környezetszennyeződés", function() {deepEqual( Stem("környezetszennyeződés"), "környezetszennyeződés");});
test("környezettisztelő -> környezettisztelő", function() {deepEqual( Stem("környezettisztelő"), "környezettisztelő");});
test("környezetvédelem -> környezetvédel", function() {deepEqual( Stem("környezetvédelem"), "környezetvédel");});
test("környezetvédelemmel -> környezetvédel", function() {deepEqual( Stem("környezetvédelemmel"), "környezetvédel");});
test("környezetvédelmi -> környezetvédelm", function() {deepEqual( Stem("környezetvédelmi"), "környezetvédelm");});
test("környezetvédő -> környezetvédő", function() {deepEqual( Stem("környezetvédő"), "környezetvédő");});
test("környezetátalakító -> környezetátalakító", function() {deepEqual( Stem("környezetátalakító"), "környezetátalakító");});
test("környezetű -> környezetű", function() {deepEqual( Stem("környezetű"), "környezetű");});
test("környezése -> környezés", function() {deepEqual( Stem("környezése"), "környezés");});
test("környező -> környező", function() {deepEqual( Stem("környező"), "környező");});
test("környékbeli -> környékbel", function() {deepEqual( Stem("környékbeli"), "környékbel");});
test("környékbelinek -> környékbel", function() {deepEqual( Stem("környékbelinek"), "környékbel");});
test("környéke -> környe", function() {deepEqual( Stem("környéke"), "környe");});
test("környék -> környe", function() {deepEqual( Stem("környék"), "környe");});
test("környéken -> környe", function() {deepEqual( Stem("környéken"), "környe");});
test("környéket -> környe", function() {deepEqual( Stem("környéket"), "környe");});
test("környékről -> környe", function() {deepEqual( Stem("környékről"), "környe");});
test("környékén -> környe", function() {deepEqual( Stem("környékén"), "környe");});
test("környékén -> környe", function() {deepEqual( Stem("környékén"), "környe");});
test("környékének -> környe", function() {deepEqual( Stem("környékének"), "környe");});
test("környékére -> környe", function() {deepEqual( Stem("környékére"), "környe");});
test("környékét -> környe", function() {deepEqual( Stem("környékét"), "környe");});
test("környékezte -> környékezt", function() {deepEqual( Stem("környékezte"), "környékezt");});
test("környékező -> környékező", function() {deepEqual( Stem("környékező"), "környékező");});
test("környéki -> környe", function() {deepEqual( Stem("környéki"), "környe");});
test("körszakállas -> körszakállas", function() {deepEqual( Stem("körszakállas"), "körszakállas");});
test("körte -> kört", function() {deepEqual( Stem("körte"), "kört");});
test("körutamra -> körut", function() {deepEqual( Stem("körutamra"), "körut");});
test("körvonala -> körvonal", function() {deepEqual( Stem("körvonala"), "körvonal");});
test("körvonalai -> körvonal", function() {deepEqual( Stem("körvonalai"), "körvonal");});
test("körvonalaiban -> körvonal", function() {deepEqual( Stem("körvonalaiban"), "körvonal");});
test("körvonalait -> körvonal", function() {deepEqual( Stem("körvonalait"), "körvonal");});
test("körvonalak -> körvonal", function() {deepEqual( Stem("körvonalak"), "körvonal");});
test("körvonalazható -> körvonalazható", function() {deepEqual( Stem("körvonalazható"), "körvonalazható");});
test("körvonalazott -> körvonalazot", function() {deepEqual( Stem("körvonalazott"), "körvonalazot");});
test("körvonalazódik -> körvonalazód", function() {deepEqual( Stem("körvonalazódik"), "körvonalazód");});
test("körvonalazódna -> körvonalazódn", function() {deepEqual( Stem("körvonalazódna"), "körvonalazódn");});
test("körvonalazódnak -> körvonalazó", function() {deepEqual( Stem("körvonalazódnak"), "körvonalazó");});
test("körvonalazódni -> körvonalazódn", function() {deepEqual( Stem("körvonalazódni"), "körvonalazódn");});
test("körvonalazódott -> körvonalazódot", function() {deepEqual( Stem("körvonalazódott"), "körvonalazódot");});
test("körzet -> körz", function() {deepEqual( Stem("körzet"), "körz");});
test("körzetbe -> körzet", function() {deepEqual( Stem("körzetbe"), "körzet");});
test("körzetben -> körzet", function() {deepEqual( Stem("körzetben"), "körzet");});
test("körzeteiben -> körzet", function() {deepEqual( Stem("körzeteiben"), "körzet");});
test("körzetek -> körzet", function() {deepEqual( Stem("körzetek"), "körzet");});
test("körzetekben -> körzet", function() {deepEqual( Stem("körzetekben"), "körzet");});
test("körzetekre -> körzet", function() {deepEqual( Stem("körzetekre"), "körzet");});
test("körzetet -> körzet", function() {deepEqual( Stem("körzetet"), "körzet");});
test("körzethez -> körzet", function() {deepEqual( Stem("körzethez"), "körzet");});
test("körzetnek -> körzet", function() {deepEqual( Stem("körzetnek"), "körzet");});
test("körzeti -> körzet", function() {deepEqual( Stem("körzeti"), "körzet");});
test("körzetszámokat -> körzetszám", function() {deepEqual( Stem("körzetszámokat"), "körzetszám");});
test("körzetszámokkal -> körzetszám", function() {deepEqual( Stem("körzetszámokkal"), "körzetszám");});
test("körzetszámot -> körzetsza", function() {deepEqual( Stem("körzetszámot"), "körzetsza");});
test("körzettervi -> körzetterv", function() {deepEqual( Stem("körzettervi"), "körzetterv");});
test("körzetében -> körzet", function() {deepEqual( Stem("körzetében"), "körzet");});
test("körzetét -> körzet", function() {deepEqual( Stem("körzetét"), "körzet");});
test("köré -> kör", function() {deepEqual( Stem("köré"), "kör");});
test("köréje -> köré", function() {deepEqual( Stem("köréje"), "köré");});
test("körénk -> köre", function() {deepEqual( Stem("körénk"), "köre");});
test("körét -> kör", function() {deepEqual( Stem("körét"), "kör");});
test("körítés -> körítés", function() {deepEqual( Stem("körítés"), "körítés");});
test("köröm -> körö", function() {deepEqual( Stem("köröm"), "körö");});
test("körömben -> körö", function() {deepEqual( Stem("körömben"), "körö");});
test("körömfájás -> körömfájás", function() {deepEqual( Stem("körömfájás"), "körömfájás");});
test("körömszakadtáig -> körömszakadt", function() {deepEqual( Stem("körömszakadtáig"), "körömszakadt");});
test("körömvirág -> körömvirág", function() {deepEqual( Stem("körömvirág"), "körömvirág");});
test("körös -> körös", function() {deepEqual( Stem("körös"), "körös");});
test("körösi -> körös", function() {deepEqual( Stem("körösi"), "körös");});
test("köröskörül -> köröskör", function() {deepEqual( Stem("köröskörül"), "köröskör");});
test("köröttem -> körött", function() {deepEqual( Stem("köröttem"), "körött");});
test("körözhetnék -> körözhetne", function() {deepEqual( Stem("körözhetnék"), "körözhetne");});
test("körözi -> köröz", function() {deepEqual( Stem("körözi"), "köröz");});
test("körözte -> körözt", function() {deepEqual( Stem("körözte"), "körözt");});
test("körözvénye -> körözvény", function() {deepEqual( Stem("körözvénye"), "körözvény");});
test("körözési -> körözés", function() {deepEqual( Stem("körözési"), "körözés");});
test("körözést -> körözés", function() {deepEqual( Stem("körözést"), "körözés");});
test("körözés -> körözés", function() {deepEqual( Stem("körözés"), "körözés");});
test("körözéséről -> körözés", function() {deepEqual( Stem("körözéséről"), "körözés");});
test("körözött -> körözöt", function() {deepEqual( Stem("körözött"), "körözöt");});
test("körúti -> körút", function() {deepEqual( Stem("körúti"), "körút");});
test("körútnak -> körút", function() {deepEqual( Stem("körútnak"), "körút");});
test("körút -> körú", function() {deepEqual( Stem("körút"), "körú");});
test("körútra -> körút", function() {deepEqual( Stem("körútra"), "körút");});
test("körű -> körű", function() {deepEqual( Stem("körű"), "körű");});
test("körűen -> körű", function() {deepEqual( Stem("körűen"), "körű");});
test("körül -> kör", function() {deepEqual( Stem("körül"), "kör");});
test("körülbelül -> körülbel", function() {deepEqual( Stem("körülbelül"), "körülbel");});
test("körülbelüli -> körülbelül", function() {deepEqual( Stem("körülbelüli"), "körülbelül");});
test("körülbástyázott -> körülbástyázot", function() {deepEqual( Stem("körülbástyázott"), "körülbástyázot");});
test("körülfog -> körülfog", function() {deepEqual( Stem("körülfog"), "körülfog");});
test("körülfogta -> körülfogt", function() {deepEqual( Stem("körülfogta"), "körülfogt");});
test("körülfogták -> körülfogta", function() {deepEqual( Stem("körülfogták"), "körülfogta");});
test("körülfogó -> körülfogó", function() {deepEqual( Stem("körülfogó"), "körülfogó");});
test("körülhatárolható -> körülhatárolható", function() {deepEqual( Stem("körülhatárolható"), "körülhatárolható");});
test("körülhatárolt -> körülhatárol", function() {deepEqual( Stem("körülhatárolt"), "körülhatárol");});
test("körüli -> körül", function() {deepEqual( Stem("körüli"), "körül");});
test("körülire -> körül", function() {deepEqual( Stem("körülire"), "körül");});
test("körüljártuk -> körüljárt", function() {deepEqual( Stem("körüljártuk"), "körüljárt");});
test("körülkémlel -> körülkémlel", function() {deepEqual( Stem("körülkémlel"), "körülkémlel");});
test("körülmegy -> körülmegy", function() {deepEqual( Stem("körülmegy"), "körülmegy");});
test("körülménnyel -> körülmény", function() {deepEqual( Stem("körülménnyel"), "körülmény");});
test("körülmény -> körülmény", function() {deepEqual( Stem("körülmény"), "körülmény");});
test("körülményei -> körülmény", function() {deepEqual( Stem("körülményei"), "körülmény");});
test("körülményeidhez -> körülmény", function() {deepEqual( Stem("körülményeidhez"), "körülmény");});
test("körülményeik -> körülmény", function() {deepEqual( Stem("körülményeik"), "körülmény");});
test("körülményeim -> körülmény", function() {deepEqual( Stem("körülményeim"), "körülmény");});
test("körülményein -> körülmény", function() {deepEqual( Stem("körülményein"), "körülmény");});
test("körülményeinek -> körülmény", function() {deepEqual( Stem("körülményeinek"), "körülmény");});
test("körülményeinkről -> körülmény", function() {deepEqual( Stem("körülményeinkről"), "körülmény");});
test("körülményeire -> körülmény", function() {deepEqual( Stem("körülményeire"), "körülmény");});
test("körülményeiről -> körülmény", function() {deepEqual( Stem("körülményeiről"), "körülmény");});
test("körülményeit -> körülmény", function() {deepEqual( Stem("körülményeit"), "körülmény");});
test("körülményeitől -> körülmény", function() {deepEqual( Stem("körülményeitől"), "körülmény");});
test("körülmények -> körülmény", function() {deepEqual( Stem("körülmények"), "körülmény");});
test("körülményekben -> körülmény", function() {deepEqual( Stem("körülményekben"), "körülmény");});
test("körülményeken -> körülmény", function() {deepEqual( Stem("körülményeken"), "körülmény");});
test("körülményeket -> körülmény", function() {deepEqual( Stem("körülményeket"), "körülmény");});
test("körülményekhez -> körülmény", function() {deepEqual( Stem("körülményekhez"), "körülmény");});
test("körülményekkel -> körülmény", function() {deepEqual( Stem("körülményekkel"), "körülmény");});
test("körülményeknek -> körülmény", function() {deepEqual( Stem("körülményeknek"), "körülmény");});
test("körülményekre -> körülmény", function() {deepEqual( Stem("körülményekre"), "körülmény");});
test("körülményekről -> körülmény", function() {deepEqual( Stem("körülményekről"), "körülmény");});
test("körülményektől -> körülmény", function() {deepEqual( Stem("körülményektől"), "körülmény");});
test("körülménynek -> körülmény", function() {deepEqual( Stem("körülménynek"), "körülmény");});
test("körülményre -> körülmény", function() {deepEqual( Stem("körülményre"), "körülmény");});
test("körülményről -> körülmény", function() {deepEqual( Stem("körülményről"), "körülmény");});
test("körülményt -> körülmény", function() {deepEqual( Stem("körülményt"), "körülmény");});
test("körülménytől -> körülmény", function() {deepEqual( Stem("körülménytől"), "körülmény");});
test("körülményes -> körülményes", function() {deepEqual( Stem("körülményes"), "körülményes");});
test("körülményesen -> körülményes", function() {deepEqual( Stem("körülményesen"), "körülményes");});
test("körülményrendszerben -> körülményrendszer", function() {deepEqual( Stem("körülményrendszerben"), "körülményrendszer");});
test("körülnéz -> körülnéz", function() {deepEqual( Stem("körülnéz"), "körülnéz");});
test("körülnézek -> körülnéz", function() {deepEqual( Stem("körülnézek"), "körülnéz");});
test("körülnézett -> körülnézet", function() {deepEqual( Stem("körülnézett"), "körülnézet");});
test("körülnézni -> körülnézn", function() {deepEqual( Stem("körülnézni"), "körülnézn");});
test("körülnéznie -> körülnézn", function() {deepEqual( Stem("körülnéznie"), "körülnézn");});
test("körülnéztem -> körülnézt", function() {deepEqual( Stem("körülnéztem"), "körülnézt");});
test("körülnéztük -> körülnézt", function() {deepEqual( Stem("körülnéztük"), "körülnézt");});
test("körülnézzünk -> körülnézz", function() {deepEqual( Stem("körülnézzünk"), "körülnézz");});
test("körülnézve -> körülnézv", function() {deepEqual( Stem("körülnézve"), "körülnézv");});
test("körülsomolyogva -> körülsomolyogv", function() {deepEqual( Stem("körülsomolyogva"), "körülsomolyogv");});
test("körülsétált -> körülsétál", function() {deepEqual( Stem("körülsétált"), "körülsétál");});
test("körültekintés -> körültekintés", function() {deepEqual( Stem("körültekintés"), "körültekintés");});
test("körültekintéssel -> körültekintés", function() {deepEqual( Stem("körültekintéssel"), "körültekintés");});
test("körültekintést -> körültekintés", function() {deepEqual( Stem("körültekintést"), "körültekintés");});
test("körültekintő -> körültekintő", function() {deepEqual( Stem("körültekintő"), "körültekintő");});
test("körültekintőek -> körültekintő", function() {deepEqual( Stem("körültekintőek"), "körültekintő");});
test("körültekintően -> körültekintő", function() {deepEqual( Stem("körültekintően"), "körültekintő");});
test("körültekintünk -> körültekint", function() {deepEqual( Stem("körültekintünk"), "körültekint");});
test("körülvenni -> körülvenn", function() {deepEqual( Stem("körülvenni"), "körülvenn");});
test("körülveszi -> körülvesz", function() {deepEqual( Stem("körülveszi"), "körülvesz");});
test("körülvesznek -> körülvesz", function() {deepEqual( Stem("körülvesznek"), "körülvesz");});
test("körülvettek -> körülvett", function() {deepEqual( Stem("körülvettek"), "körülvett");});
test("körülvett -> körülvet", function() {deepEqual( Stem("körülvett"), "körülvet");});
test("körülvevő -> körülvevő", function() {deepEqual( Stem("körülvevő"), "körülvevő");});
test("körülvéve -> körülvév", function() {deepEqual( Stem("körülvéve"), "körülvév");});
test("körülzárt -> körülzár", function() {deepEqual( Stem("körülzárt"), "körülzár");});
test("körülzárva -> körülzárv", function() {deepEqual( Stem("körülzárva"), "körülzárv");});
test("körülállók -> körülálló", function() {deepEqual( Stem("körülállók"), "körülálló");});
test("körülírhatatlan -> körülírhatatl", function() {deepEqual( Stem("körülírhatatlan"), "körülírhatatl");});
test("körülírható -> körülírható", function() {deepEqual( Stem("körülírható"), "körülírható");});
test("körülírhatók -> körülírható", function() {deepEqual( Stem("körülírhatók"), "körülírható");});
test("körülírják -> körülírja", function() {deepEqual( Stem("körülírják"), "körülírja");});
test("körülírni -> körülírn", function() {deepEqual( Stem("körülírni"), "körülírn");});
test("körülírása -> körülírás", function() {deepEqual( Stem("körülírása"), "körülírás");});
test("körülírást -> körülírás", function() {deepEqual( Stem("körülírást"), "körülírás");});
test("körülölelték -> körülölelte", function() {deepEqual( Stem("körülölelték"), "körülölelte");});
test("körülötte -> körülött", function() {deepEqual( Stem("körülötte"), "körülött");});
test("körülöttem -> körülött", function() {deepEqual( Stem("körülöttem"), "körülött");});
test("körülöttük -> körülött", function() {deepEqual( Stem("körülöttük"), "körülött");});
test("körülöttünk -> körülött", function() {deepEqual( Stem("körülöttünk"), "körülött");});
test("körülülni -> körülüln", function() {deepEqual( Stem("körülülni"), "körülüln");});
test("körüvezetlek -> körüvezetl", function() {deepEqual( Stem("körüvezetlek"), "körüvezetl");});
test("kösse -> köss", function() {deepEqual( Stem("kösse"), "köss");});
test("kössek -> köss", function() {deepEqual( Stem("kössek"), "köss");});
test("kössenek -> köss", function() {deepEqual( Stem("kössenek"), "köss");});
test("kössön -> köss", function() {deepEqual( Stem("kössön"), "köss");});
test("kössük -> köss", function() {deepEqual( Stem("kössük"), "köss");});
test("kösz -> kösz", function() {deepEqual( Stem("kösz"), "kösz");});
test("köszben -> kösz", function() {deepEqual( Stem("köszben"), "kösz");});
test("köszt -> kösz", function() {deepEqual( Stem("köszt"), "kösz");});
test("kösztük -> köszt", function() {deepEqual( Stem("kösztük"), "köszt");});
test("köszi -> kösz", function() {deepEqual( Stem("köszi"), "kösz");});
test("köszvetlen -> köszvetl", function() {deepEqual( Stem("köszvetlen"), "köszvetl");});
test("köszvényekről -> köszvény", function() {deepEqual( Stem("köszvényekről"), "köszvény");});
test("köszölte -> köszölt", function() {deepEqual( Stem("köszölte"), "köszölt");});
test("köszönet -> köszön", function() {deepEqual( Stem("köszönet"), "köszön");});
test("köszönettel -> köszön", function() {deepEqual( Stem("köszönettel"), "köszön");});
test("köszöngető -> köszöngető", function() {deepEqual( Stem("köszöngető"), "köszöngető");});
test("köszönhet -> köszönh", function() {deepEqual( Stem("köszönhet"), "köszönh");});
test("köszönhetek -> köszönhet", function() {deepEqual( Stem("köszönhetek"), "köszönhet");});
test("köszönhetem -> köszönhet", function() {deepEqual( Stem("köszönhetem"), "köszönhet");});
test("köszönheti -> köszönhet", function() {deepEqual( Stem("köszönheti"), "köszönhet");});
test("köszönhetjük -> köszönhet", function() {deepEqual( Stem("köszönhetjük"), "köszönhet");});
test("köszönhetnek -> köszönhet", function() {deepEqual( Stem("köszönhetnek"), "köszönhet");});
test("köszönhette -> köszönhett", function() {deepEqual( Stem("köszönhette"), "köszönhett");});
test("köszönhettem -> köszönhett", function() {deepEqual( Stem("köszönhettem"), "köszönhett");});
test("köszönhettem -> köszönhett", function() {deepEqual( Stem("köszönhettem"), "köszönhett");});
test("köszönhették -> köszönhette", function() {deepEqual( Stem("köszönhették"), "köszönhette");});
test("köszönhetünk -> köszönhet", function() {deepEqual( Stem("köszönhetünk"), "köszönhet");});
test("köszönhető -> köszönhető", function() {deepEqual( Stem("köszönhető"), "köszönhető");});
test("köszönhetően -> köszönhető", function() {deepEqual( Stem("köszönhetően"), "köszönhető");});
test("köszönnek -> köszön", function() {deepEqual( Stem("köszönnek"), "köszön");});
test("köszön -> kösz", function() {deepEqual( Stem("köszön"), "kösz");});
test("köszönni -> köszönn", function() {deepEqual( Stem("köszönni"), "köszönn");});
test("köszöntük -> köszönt", function() {deepEqual( Stem("köszöntük"), "köszönt");});
test("köszönöm -> köszönö", function() {deepEqual( Stem("köszönöm"), "köszönö");});
test("köszönt -> köszön", function() {deepEqual( Stem("köszönt"), "köszön");});
test("köszöntek -> köszönt", function() {deepEqual( Stem("köszöntek"), "köszönt");});
test("köszöntem -> köszönt", function() {deepEqual( Stem("köszöntem"), "köszönt");});
test("köszönteni -> köszönten", function() {deepEqual( Stem("köszönteni"), "köszönten");});
test("köszöntené -> köszönten", function() {deepEqual( Stem("köszöntené"), "köszönten");});
test("köszöntik -> köszönt", function() {deepEqual( Stem("köszöntik"), "köszönt");});
test("köszöntse -> köszönts", function() {deepEqual( Stem("köszöntse"), "köszönts");});
test("köszöntötte -> köszöntött", function() {deepEqual( Stem("köszöntötte"), "köszöntött");});
test("köszöntötték -> köszöntötte", function() {deepEqual( Stem("köszöntötték"), "köszöntötte");});
test("köszöntöttük -> köszöntött", function() {deepEqual( Stem("köszöntöttük"), "köszöntött");});
test("köszönthetnénk -> köszönthetne", function() {deepEqual( Stem("köszönthetnénk"), "köszönthetne");});
test("köszöntés -> köszöntés", function() {deepEqual( Stem("köszöntés"), "köszöntés");});
test("köszöntött -> köszöntöt", function() {deepEqual( Stem("köszöntött"), "köszöntöt");});
test("köszönés -> köszönés", function() {deepEqual( Stem("köszönés"), "köszönés");});
test("köszönésemre -> köszönés", function() {deepEqual( Stem("köszönésemre"), "köszönés");});
test("köszönő -> köszönő", function() {deepEqual( Stem("köszönő"), "köszönő");});
test("köszörülte -> köszörült", function() {deepEqual( Stem("köszörülte"), "köszörült");});
test("köt -> köt", function() {deepEqual( Stem("köt"), "köt");});
test("köti -> köt", function() {deepEqual( Stem("köti"), "köt");});
test("kötik -> köt", function() {deepEqual( Stem("kötik"), "köt");});
test("kötnek -> köt", function() {deepEqual( Stem("kötnek"), "köt");});
test("kötni -> kötn", function() {deepEqual( Stem("kötni"), "kötn");});
test("kötnie -> kötn", function() {deepEqual( Stem("kötnie"), "kötn");});
test("kötniük -> kötn", function() {deepEqual( Stem("kötniük"), "kötn");});
test("kötötte -> kötött", function() {deepEqual( Stem("kötötte"), "kötött");});
test("kötöttek -> kötött", function() {deepEqual( Stem("kötöttek"), "kötött");});
test("kötöttek -> kötött", function() {deepEqual( Stem("kötöttek"), "kötött");});
test("kötöttem -> kötött", function() {deepEqual( Stem("kötöttem"), "kötött");});
test("kötötten -> kötött", function() {deepEqual( Stem("kötötten"), "kötött");});
test("kötöttünk -> kötött", function() {deepEqual( Stem("kötöttünk"), "kötött");});
test("kötbérfizetési -> kötbérfizetés", function() {deepEqual( Stem("kötbérfizetési"), "kötbérfizetés");});
test("kötbérre -> kötbér", function() {deepEqual( Stem("kötbérre"), "kötbér");});
test("kötbér -> kötbér", function() {deepEqual( Stem("kötbér"), "kötbér");});
test("kötbérrel -> kötbér", function() {deepEqual( Stem("kötbérrel"), "kötbér");});
test("kötbérről -> kötbér", function() {deepEqual( Stem("kötbérről"), "kötbér");});
test("kötbért -> kötb", function() {deepEqual( Stem("kötbért"), "kötb");});
test("köteg -> köteg", function() {deepEqual( Stem("köteg"), "köteg");});
test("kötegelt -> kötegel", function() {deepEqual( Stem("kötegelt"), "kötegel");});
test("kötel -> kötel", function() {deepEqual( Stem("kötel"), "kötel");});
test("kötele -> kötel", function() {deepEqual( Stem("kötele"), "kötel");});
test("köteleket -> kötel", function() {deepEqual( Stem("köteleket"), "kötel");});
test("kötelet -> kötel", function() {deepEqual( Stem("kötelet"), "kötel");});
test("köteles -> köteles", function() {deepEqual( Stem("köteles"), "köteles");});
test("kötelesek -> köteles", function() {deepEqual( Stem("kötelesek"), "köteles");});
test("kötelesség -> kötelesség", function() {deepEqual( Stem("kötelesség"), "kötelesség");});
test("kötelességből -> kötelesség", function() {deepEqual( Stem("kötelességből"), "kötelesség");});
test("kötelessége -> kötelesség", function() {deepEqual( Stem("kötelessége"), "kötelesség");});
test("kötelességed -> kötelesség", function() {deepEqual( Stem("kötelességed"), "kötelesség");});
test("kötelességednek -> kötelesség", function() {deepEqual( Stem("kötelességednek"), "kötelesség");});
test("kötelességei -> kötelesség", function() {deepEqual( Stem("kötelességei"), "kötelesség");});
test("kötelességeim -> kötelesség", function() {deepEqual( Stem("kötelességeim"), "kötelesség");});
test("kötelességeit -> kötelesség", function() {deepEqual( Stem("kötelességeit"), "kötelesség");});
test("kötelességek -> kötelesség", function() {deepEqual( Stem("kötelességek"), "kötelesség");});
test("kötelességeket -> kötelesség", function() {deepEqual( Stem("kötelességeket"), "kötelesség");});
test("kötelességekre -> kötelesség", function() {deepEqual( Stem("kötelességekre"), "kötelesség");});
test("kötelességeként -> kötelesség", function() {deepEqual( Stem("kötelességeként"), "kötelesség");});
test("kötelességem -> kötelesség", function() {deepEqual( Stem("kötelességem"), "kötelesség");});
test("kötelességemnek -> kötelesség", function() {deepEqual( Stem("kötelességemnek"), "kötelesség");});
test("kötelességre -> kötelesség", function() {deepEqual( Stem("kötelességre"), "kötelesség");});
test("kötelességének -> kötelesség", function() {deepEqual( Stem("kötelességének"), "kötelesség");});
test("kötelességét -> kötelesség", function() {deepEqual( Stem("kötelességét"), "kötelesség");});
test("kötelességük -> kötelesség", function() {deepEqual( Stem("kötelességük"), "kötelesség");});
test("kötelességüknek -> kötelesség", function() {deepEqual( Stem("kötelességüknek"), "kötelesség");});
test("kötelességünk -> kötelesség", function() {deepEqual( Stem("kötelességünk"), "kötelesség");});
test("kötelességszegő -> kötelességszegő", function() {deepEqual( Stem("kötelességszegő"), "kötelességszegő");});
test("kötelességszerűen -> kötelességszerű", function() {deepEqual( Stem("kötelességszerűen"), "kötelességszerű");});
test("kötelességteljesítéssel -> kötelességteljesítés", function() {deepEqual( Stem("kötelességteljesítéssel"), "kötelességteljesítés");});
test("kötelességtudásra -> kötelességtudás", function() {deepEqual( Stem("kötelességtudásra"), "kötelességtudás");});
test("kötelességtudó -> kötelességtudó", function() {deepEqual( Stem("kötelességtudó"), "kötelességtudó");});
test("kötelességtudóan -> kötelességtudó", function() {deepEqual( Stem("kötelességtudóan"), "kötelességtudó");});
test("kötelezett -> kötelezet", function() {deepEqual( Stem("kötelezett"), "kötelezet");});
test("kötelezettek -> kötelezett", function() {deepEqual( Stem("kötelezettek"), "kötelezett");});
test("kötelezetteket -> kötelezett", function() {deepEqual( Stem("kötelezetteket"), "kötelezett");});
test("kötelezettje -> kötelezett", function() {deepEqual( Stem("kötelezettje"), "kötelezett");});
test("kötelezettjére -> kötelezett", function() {deepEqual( Stem("kötelezettjére"), "kötelezett");});
test("kötelezettnek -> kötelezett", function() {deepEqual( Stem("kötelezettnek"), "kötelezett");});
test("kötelezettség -> kötelezettség", function() {deepEqual( Stem("kötelezettség"), "kötelezettség");});
test("kötelezettség-vállalások -> kötelezettség-vállalás", function() {deepEqual( Stem("kötelezettség-vállalások"), "kötelezettség-vállalás");});
test("kötelezettsége -> kötelezettség", function() {deepEqual( Stem("kötelezettsége"), "kötelezettség");});
test("kötelezettségei -> kötelezettség", function() {deepEqual( Stem("kötelezettségei"), "kötelezettség");});
test("kötelezettségeik -> kötelezettség", function() {deepEqual( Stem("kötelezettségeik"), "kötelezettség");});
test("kötelezettségeinek -> kötelezettség", function() {deepEqual( Stem("kötelezettségeinek"), "kötelezettség");});
test("kötelezettségeinek -> kötelezettség", function() {deepEqual( Stem("kötelezettségeinek"), "kötelezettség");});
test("kötelezettségeinknek -> kötelezettség", function() {deepEqual( Stem("kötelezettségeinknek"), "kötelezettség");});
test("kötelezettségeinkre -> kötelezettség", function() {deepEqual( Stem("kötelezettségeinkre"), "kötelezettség");});
test("kötelezettségeire -> kötelezettség", function() {deepEqual( Stem("kötelezettségeire"), "kötelezettség");});
test("kötelezettségeit -> kötelezettség", function() {deepEqual( Stem("kötelezettségeit"), "kötelezettség");});
test("kötelezettségeiért -> kötelezettség", function() {deepEqual( Stem("kötelezettségeiért"), "kötelezettség");});
test("kötelezettségek -> kötelezettség", function() {deepEqual( Stem("kötelezettségek"), "kötelezettség");});
test("kötelezettségeket -> kötelezettség", function() {deepEqual( Stem("kötelezettségeket"), "kötelezettség");});
test("kötelezettségekkel -> kötelezettség", function() {deepEqual( Stem("kötelezettségekkel"), "kötelezettség");});
test("kötelezettségeknek -> kötelezettség", function() {deepEqual( Stem("kötelezettségeknek"), "kötelezettség");});
test("kötelezettségekre -> kötelezettség", function() {deepEqual( Stem("kötelezettségekre"), "kötelezettség");});
test("kötelezettségekről -> kötelezettség", function() {deepEqual( Stem("kötelezettségekről"), "kötelezettség");});
test("kötelezettségekért -> kötelezettség", function() {deepEqual( Stem("kötelezettségekért"), "kötelezettség");});
test("kötelezettségen -> kötelezettség", function() {deepEqual( Stem("kötelezettségen"), "kötelezettség");});
test("kötelezettséget -> kötelezettség", function() {deepEqual( Stem("kötelezettséget"), "kötelezettség");});
test("kötelezettséggel -> kötelezettség", function() {deepEqual( Stem("kötelezettséggel"), "kötelezettség");});
test("kötelezettségként -> kötelezettség", function() {deepEqual( Stem("kötelezettségként"), "kötelezettség");});
test("kötelezettségnek -> kötelezettség", function() {deepEqual( Stem("kötelezettségnek"), "kötelezettség");});
test("kötelezettségre -> kötelezettség", function() {deepEqual( Stem("kötelezettségre"), "kötelezettség");});
test("kötelezettségről -> kötelezettség", function() {deepEqual( Stem("kötelezettségről"), "kötelezettség");});
test("kötelezettségének -> kötelezettség", function() {deepEqual( Stem("kötelezettségének"), "kötelezettség");});
test("kötelezettségére -> kötelezettség", function() {deepEqual( Stem("kötelezettségére"), "kötelezettség");});
test("kötelezettségéről -> kötelezettség", function() {deepEqual( Stem("kötelezettségéről"), "kötelezettség");});
test("kötelezettségét -> kötelezettség", function() {deepEqual( Stem("kötelezettségét"), "kötelezettség");});
test("kötelezettségével -> kötelezettség", function() {deepEqual( Stem("kötelezettségével"), "kötelezettség");});
test("kötelezettségük -> kötelezettség", function() {deepEqual( Stem("kötelezettségük"), "kötelezettség");});
test("kötelezettségüket -> kötelezettség", function() {deepEqual( Stem("kötelezettségüket"), "kötelezettség");});
test("kötelezettségüknek -> kötelezettség", function() {deepEqual( Stem("kötelezettségüknek"), "kötelezettség");});
test("kötelezettségünk -> kötelezettség", function() {deepEqual( Stem("kötelezettségünk"), "kötelezettség");});
test("kötelezettségünkké -> kötelezettség", function() {deepEqual( Stem("kötelezettségünkké"), "kötelezettség");});
test("kötelezettségünkre -> kötelezettség", function() {deepEqual( Stem("kötelezettségünkre"), "kötelezettség");});
test("kötelezettségszegés -> kötelezettségszegés", function() {deepEqual( Stem("kötelezettségszegés"), "kötelezettségszegés");});
test("kötelezettségvállalás -> kötelezettségvállalás", function() {deepEqual( Stem("kötelezettségvállalás"), "kötelezettségvállalás");});
test("kötelezettségvállalásaiból -> kötelezettségvállalás", function() {deepEqual( Stem("kötelezettségvállalásaiból"), "kötelezettségvállalás");});
test("kötelezettségvállalásaiért -> kötelezettségvállalás", function() {deepEqual( Stem("kötelezettségvállalásaiért"), "kötelezettségvállalás");});
test("kötelezettségvállalásnál -> kötelezettségvállalás", function() {deepEqual( Stem("kötelezettségvállalásnál"), "kötelezettségvállalás");});
test("kötelezettségvállalások -> kötelezettségvállalás", function() {deepEqual( Stem("kötelezettségvállalások"), "kötelezettségvállalás");});
test("kötelezettségvállalásra -> kötelezettségvállalás", function() {deepEqual( Stem("kötelezettségvállalásra"), "kötelezettségvállalás");});
test("kötelezettségvállalásról -> kötelezettségvállalás", function() {deepEqual( Stem("kötelezettségvállalásról"), "kötelezettségvállalás");});
test("kötelezettségvállalással -> kötelezettségvállalás", function() {deepEqual( Stem("kötelezettségvállalással"), "kötelezettségvállalás");});
test("kötelezettségvállalást -> kötelezettségvállalás", function() {deepEqual( Stem("kötelezettségvállalást"), "kötelezettségvállalás");});
test("kötelezettségvállalásán -> kötelezettségvállalás", function() {deepEqual( Stem("kötelezettségvállalásán"), "kötelezettségvállalás");});
test("kötelezheti -> kötelezhet", function() {deepEqual( Stem("kötelezheti"), "kötelezhet");});
test("kötelezhető -> kötelezhető", function() {deepEqual( Stem("kötelezhető"), "kötelezhető");});
test("kötelezhetőség -> kötelezhetőség", function() {deepEqual( Stem("kötelezhetőség"), "kötelezhetőség");});
test("kötelez -> kötelez", function() {deepEqual( Stem("kötelez"), "kötelez");});
test("kötelezi -> kötelez", function() {deepEqual( Stem("kötelezi"), "kötelez");});
test("kötelezik -> kötelez", function() {deepEqual( Stem("kötelezik"), "kötelez");});
test("kötelezniük -> kötelezn", function() {deepEqual( Stem("kötelezniük"), "kötelezn");});
test("kötelezné -> kötelezn", function() {deepEqual( Stem("kötelezné"), "kötelezn");});
test("kötelezte -> kötelezt", function() {deepEqual( Stem("kötelezte"), "kötelezt");});
test("kötelezze -> kötelezz", function() {deepEqual( Stem("kötelezze"), "kötelezz");});
test("kötelezve -> kötelezv", function() {deepEqual( Stem("kötelezve"), "kötelezv");});
test("kötelezése -> kötelezés", function() {deepEqual( Stem("kötelezése"), "kötelezés");});
test("kötelezésükkel -> kötelezés", function() {deepEqual( Stem("kötelezésükkel"), "kötelezés");});
test("kötelező -> kötelező", function() {deepEqual( Stem("kötelező"), "kötelező");});
test("kötelezőek -> kötelező", function() {deepEqual( Stem("kötelezőek"), "kötelező");});
test("kötelezően -> kötelező", function() {deepEqual( Stem("kötelezően"), "kötelező");});
test("kötelezőként -> kötelező", function() {deepEqual( Stem("kötelezőként"), "kötelező");});
test("kötelezőnek -> kötelező", function() {deepEqual( Stem("kötelezőnek"), "kötelező");});
test("kötelezővé -> kötelező", function() {deepEqual( Stem("kötelezővé"), "kötelező");});
test("kötelmein -> kötelm", function() {deepEqual( Stem("kötelmein"), "kötelm");});
test("kötelmi -> kötelm", function() {deepEqual( Stem("kötelmi"), "kötelm");});
test("kötelmére -> kötelm", function() {deepEqual( Stem("kötelmére"), "kötelm");});
test("kötelék -> kötele", function() {deepEqual( Stem("kötelék"), "kötele");});
test("kötelékben -> kötele", function() {deepEqual( Stem("kötelékben"), "kötele");});
test("kötelékei -> kötele", function() {deepEqual( Stem("kötelékei"), "kötele");});
test("kötelékek -> kötelék", function() {deepEqual( Stem("kötelékek"), "kötelék");});
test("kötelékekben -> kötelék", function() {deepEqual( Stem("kötelékekben"), "kötelék");});
test("kötelékeket -> kötelék", function() {deepEqual( Stem("kötelékeket"), "kötelék");});
test("köteléknek -> kötele", function() {deepEqual( Stem("köteléknek"), "kötele");});
test("kötelékébe -> kötele", function() {deepEqual( Stem("kötelékébe"), "kötele");});
test("kötelékében -> kötele", function() {deepEqual( Stem("kötelékében"), "kötele");});
test("kötelét -> kötel", function() {deepEqual( Stem("kötelét"), "kötel");});
test("kötetcímkét -> kötetcím", function() {deepEqual( Stem("kötetcímkét"), "kötetcím");});
test("kötet -> köt", function() {deepEqual( Stem("kötet"), "köt");});
test("kötetbe -> kötet", function() {deepEqual( Stem("kötetbe"), "kötet");});
test("kötetben -> kötet", function() {deepEqual( Stem("kötetben"), "kötet");});
test("kötetből -> kötet", function() {deepEqual( Stem("kötetből"), "kötet");});
test("kötetek -> kötet", function() {deepEqual( Stem("kötetek"), "kötet");});
test("kötetekben -> kötet", function() {deepEqual( Stem("kötetekben"), "kötet");});
test("köteteken -> kötet", function() {deepEqual( Stem("köteteken"), "kötet");});
test("köteteket -> kötet", function() {deepEqual( Stem("köteteket"), "kötet");});
test("köteteknek -> kötet", function() {deepEqual( Stem("köteteknek"), "kötet");});
test("köteteknél -> kötet", function() {deepEqual( Stem("köteteknél"), "kötet");});
test("köteten -> kötet", function() {deepEqual( Stem("köteten"), "kötet");});
test("kötetet -> kötet", function() {deepEqual( Stem("kötetet"), "kötet");});
test("kötethez -> kötet", function() {deepEqual( Stem("kötethez"), "kötet");});
test("kötetként -> kötet", function() {deepEqual( Stem("kötetként"), "kötet");});
test("kötetnek -> kötet", function() {deepEqual( Stem("kötetnek"), "kötet");});
test("kötetre -> kötet", function() {deepEqual( Stem("kötetre"), "kötet");});
test("kötetről -> kötet", function() {deepEqual( Stem("kötetről"), "kötet");});
test("kötettel -> köt", function() {deepEqual( Stem("kötettel"), "köt");});
test("kötetté -> kötet", function() {deepEqual( Stem("kötetté"), "kötet");});
test("kötetében -> kötet", function() {deepEqual( Stem("kötetében"), "kötet");});
test("kötetének -> kötet", function() {deepEqual( Stem("kötetének"), "kötet");});
test("kötetét -> kötet", function() {deepEqual( Stem("kötetét"), "kötet");});
test("kötetes -> kötetes", function() {deepEqual( Stem("kötetes"), "kötetes");});
test("kötetkapacitás -> kötetkapacitás", function() {deepEqual( Stem("kötetkapacitás"), "kötetkapacitás");});
test("kötetkészlet -> kötetkészl", function() {deepEqual( Stem("kötetkészlet"), "kötetkészl");});
test("kötetlen -> kötetl", function() {deepEqual( Stem("kötetlen"), "kötetl");});
test("kötetlenebb -> kötetlenebb", function() {deepEqual( Stem("kötetlenebb"), "kötetlenebb");});
test("kötetlenek -> kötetl", function() {deepEqual( Stem("kötetlenek"), "kötetl");});
test("kötetlensége -> kötetlenség", function() {deepEqual( Stem("kötetlensége"), "kötetlenség");});
test("köthessenek -> köthess", function() {deepEqual( Stem("köthessenek"), "köthess");});
test("köthet -> köth", function() {deepEqual( Stem("köthet"), "köth");});
test("köthetek -> köthet", function() {deepEqual( Stem("köthetek"), "köthet");});
test("kötheti -> köthet", function() {deepEqual( Stem("kötheti"), "köthet");});
test("köthetik -> köthet", function() {deepEqual( Stem("köthetik"), "köthet");});
test("köthettek -> köthett", function() {deepEqual( Stem("köthettek"), "köthett");});
test("köthető -> köthető", function() {deepEqual( Stem("köthető"), "köthető");});
test("köthetők -> köthető", function() {deepEqual( Stem("köthetők"), "köthető");});
test("köthetővé -> köthető", function() {deepEqual( Stem("köthetővé"), "köthető");});
test("köttethet -> kötteth", function() {deepEqual( Stem("köttethet"), "kötteth");});
test("köttethetett -> köttethetet", function() {deepEqual( Stem("köttethetett"), "köttethetet");});
test("köttetik -> köttet", function() {deepEqual( Stem("köttetik"), "köttet");});
test("köttetnek -> köttet", function() {deepEqual( Stem("köttetnek"), "köttet");});
test("köttettek -> köttett", function() {deepEqual( Stem("köttettek"), "köttett");});
test("kötve -> kötv", function() {deepEqual( Stem("kötve"), "kötv");});
test("kötvényalap -> kötvényalap", function() {deepEqual( Stem("kötvényalap"), "kötvényalap");});
test("kötvényaukciója -> kötvényaukció", function() {deepEqual( Stem("kötvényaukciója"), "kötvényaukció");});
test("kötvényaukciók -> kötvényaukció", function() {deepEqual( Stem("kötvényaukciók"), "kötvényaukció");});
test("kötvénybefektetési -> kötvénybefektetés", function() {deepEqual( Stem("kötvénybefektetési"), "kötvénybefektetés");});
test("kötvénnyel -> kötvény", function() {deepEqual( Stem("kötvénnyel"), "kötvény");});
test("kötvény -> kötvény", function() {deepEqual( Stem("kötvény"), "kötvény");});
test("kötvényeik -> kötvény", function() {deepEqual( Stem("kötvényeik"), "kötvény");});
test("kötvényeiket -> kötvény", function() {deepEqual( Stem("kötvényeiket"), "kötvény");});
test("kötvényeire -> kötvény", function() {deepEqual( Stem("kötvényeire"), "kötvény");});
test("kötvényeit -> kötvény", function() {deepEqual( Stem("kötvényeit"), "kötvény");});
test("kötvények -> kötvény", function() {deepEqual( Stem("kötvények"), "kötvény");});
test("kötvényeket -> kötvény", function() {deepEqual( Stem("kötvényeket"), "kötvény");});
test("kötvényeknek -> kötvény", function() {deepEqual( Stem("kötvényeknek"), "kötvény");});
test("kötvényekre -> kötvény", function() {deepEqual( Stem("kötvényekre"), "kötvény");});
test("kötvényekért -> kötvény", function() {deepEqual( Stem("kötvényekért"), "kötvény");});
test("kötvényre -> kötvény", function() {deepEqual( Stem("kötvényre"), "kötvény");});
test("kötvényről -> kötvény", function() {deepEqual( Stem("kötvényről"), "kötvény");});
test("kötvényt -> kötvény", function() {deepEqual( Stem("kötvényt"), "kötvény");});
test("kötvényes -> kötvényes", function() {deepEqual( Stem("kötvényes"), "kötvényes");});
test("kötvényesei -> kötvényes", function() {deepEqual( Stem("kötvényesei"), "kötvényes");});
test("kötvényesek -> kötvényes", function() {deepEqual( Stem("kötvényesek"), "kötvényes");});
test("kötvényeseket -> kötvényes", function() {deepEqual( Stem("kötvényeseket"), "kötvényes");});
test("kötvényeseknél -> kötvényes", function() {deepEqual( Stem("kötvényeseknél"), "kötvényes");});
test("kötvényesnek -> kötvényes", function() {deepEqual( Stem("kötvényesnek"), "kötvényes");});
test("kötvényest -> kötvényes", function() {deepEqual( Stem("kötvényest"), "kötvényes");});
test("kötvényfajta -> kötvényfajt", function() {deepEqual( Stem("kötvényfajta"), "kötvényfajt");});
test("kötvényindexét -> kötvényindex", function() {deepEqual( Stem("kötvényindexét"), "kötvényindex");});
test("kötvénykibocsátás -> kötvénykibocsátás", function() {deepEqual( Stem("kötvénykibocsátás"), "kötvénykibocsátás");});
test("kötvénykibocsátásról -> kötvénykibocsátás", function() {deepEqual( Stem("kötvénykibocsátásról"), "kötvénykibocsátás");});
test("kötvénykibocsátását -> kötvénykibocsátás", function() {deepEqual( Stem("kötvénykibocsátását"), "kötvénykibocsátás");});
test("kötvénytartozásokért -> kötvénytartozás", function() {deepEqual( Stem("kötvénytartozásokért"), "kötvénytartozás");});
test("kötvénytulajdonos -> kötvénytulajdonos", function() {deepEqual( Stem("kötvénytulajdonos"), "kötvénytulajdonos");});
test("kötvénytulajdonosok -> kötvénytulajdonos", function() {deepEqual( Stem("kötvénytulajdonosok"), "kötvénytulajdonos");});
test("kötvénytípusú -> kötvénytípusú", function() {deepEqual( Stem("kötvénytípusú"), "kötvénytípusú");});
test("kötél -> kötél", function() {deepEqual( Stem("kötél"), "kötél");});
test("kötélben -> kötél", function() {deepEqual( Stem("kötélben"), "kötél");});
test("kötélből -> kötél", function() {deepEqual( Stem("kötélből"), "kötél");});
test("kötéllel -> kötél", function() {deepEqual( Stem("kötéllel"), "kötél");});
test("kötélre -> kötél", function() {deepEqual( Stem("kötélre"), "kötél");});
test("kötélcsomón -> kötélcsomó", function() {deepEqual( Stem("kötélcsomón"), "kötélcsomó");});
test("kötélcsomóra -> kötélcsomó", function() {deepEqual( Stem("kötélcsomóra"), "kötélcsomó");});
test("kötélkorbácsról -> kötélkorbács", function() {deepEqual( Stem("kötélkorbácsról"), "kötélkorbács");});
test("kötéláltali -> kötéláltal", function() {deepEqual( Stem("kötéláltali"), "kötéláltal");});
test("köténye -> kötény", function() {deepEqual( Stem("köténye"), "kötény");});
test("köténynek -> kötény", function() {deepEqual( Stem("köténynek"), "kötény");});
test("kötényébe -> kötény", function() {deepEqual( Stem("kötényébe"), "kötény");});
test("kötés -> kötés", function() {deepEqual( Stem("kötés"), "kötés");});
test("kötésben -> kötés", function() {deepEqual( Stem("kötésben"), "kötés");});
test("kötése -> kötés", function() {deepEqual( Stem("kötése"), "kötés");});
test("kötéshez -> kötés", function() {deepEqual( Stem("kötéshez"), "kötés");});
test("kötést -> kötés", function() {deepEqual( Stem("kötést"), "kötés");});
test("kötésére -> kötés", function() {deepEqual( Stem("kötésére"), "kötés");});
test("kötéséről -> kötés", function() {deepEqual( Stem("kötéséről"), "kötés");});
test("kötését -> kötés", function() {deepEqual( Stem("kötését"), "kötés");});
test("kötésével -> kötés", function() {deepEqual( Stem("kötésével"), "kötés");});
test("kötésszám -> kötéssza", function() {deepEqual( Stem("kötésszám"), "kötéssza");});
test("kötőanyag -> kötőanyag", function() {deepEqual( Stem("kötőanyag"), "kötőanyag");});
test("kötődhetnek -> kötődhet", function() {deepEqual( Stem("kötődhetnek"), "kötődhet");});
test("kötő -> kötő", function() {deepEqual( Stem("kötő"), "kötő");});
test("kötődik -> kötőd", function() {deepEqual( Stem("kötődik"), "kötőd");});
test("kötődjön -> kötődj", function() {deepEqual( Stem("kötődjön"), "kötődj");});
test("kötődnek -> kötő", function() {deepEqual( Stem("kötődnek"), "kötő");});
test("kötődtek -> kötődt", function() {deepEqual( Stem("kötődtek"), "kötődt");});
test("kötődés -> kötődés", function() {deepEqual( Stem("kötődés"), "kötődés");});
test("kötődése -> kötődés", function() {deepEqual( Stem("kötődése"), "kötődés");});
test("kötődést -> kötődés", function() {deepEqual( Stem("kötődést"), "kötődés");});
test("kötődésének -> kötődés", function() {deepEqual( Stem("kötődésének"), "kötődés");});
test("kötődő -> kötődő", function() {deepEqual( Stem("kötődő"), "kötődő");});
test("kötődött -> kötődöt", function() {deepEqual( Stem("kötődött"), "kötődöt");});
test("kötőerejének -> kötőere", function() {deepEqual( Stem("kötőerejének"), "kötőere");});
test("kötött -> kötöt", function() {deepEqual( Stem("kötött"), "kötöt");});
test("kötöttnek -> kötött", function() {deepEqual( Stem("kötöttnek"), "kötött");});
test("kötöttség -> kötöttség", function() {deepEqual( Stem("kötöttség"), "kötöttség");});
test("kötöttsége -> kötöttség", function() {deepEqual( Stem("kötöttsége"), "kötöttség");});
test("kötöttségei -> kötöttség", function() {deepEqual( Stem("kötöttségei"), "kötöttség");});
test("kötöttségek -> kötöttség", function() {deepEqual( Stem("kötöttségek"), "kötöttség");});
test("kötöttségeket -> kötöttség", function() {deepEqual( Stem("kötöttségeket"), "kötöttség");});
test("kötöttségektől -> kötöttség", function() {deepEqual( Stem("kötöttségektől"), "kötöttség");});
test("kötöttséget -> kötöttség", function() {deepEqual( Stem("kötöttséget"), "kötöttség");});
test("kötöttséggel -> kötöttség", function() {deepEqual( Stem("kötöttséggel"), "kötöttség");});
test("kötöttségét -> kötöttség", function() {deepEqual( Stem("kötöttségét"), "kötöttség");});
test("kötöttségétől -> kötöttség", function() {deepEqual( Stem("kötöttségétől"), "kötöttség");});
test("kötöttségével -> kötöttség", function() {deepEqual( Stem("kötöttségével"), "kötöttség");});
test("kötöttségük -> kötöttség", function() {deepEqual( Stem("kötöttségük"), "kötöttség");});
test("kötötték -> kötötte", function() {deepEqual( Stem("kötötték"), "kötötte");});
test("kötözködnek -> kötöz", function() {deepEqual( Stem("kötözködnek"), "kötöz");});
test("kötözködő -> kötözködő", function() {deepEqual( Stem("kötözködő"), "kötözködő");});
test("kötözni -> kötözn", function() {deepEqual( Stem("kötözni"), "kötözn");});
test("kötöztem -> kötözt", function() {deepEqual( Stem("kötöztem"), "kötözt");});
test("köv -> köv", function() {deepEqual( Stem("köv"), "köv");});
test("kövektezik -> kövektez", function() {deepEqual( Stem("kövektezik"), "kövektez");});
test("köves -> köves", function() {deepEqual( Stem("köves"), "köves");});
test("kövesúton -> kövesút", function() {deepEqual( Stem("kövesúton"), "kövesút");});
test("követ -> köv", function() {deepEqual( Stem("követ"), "köv");});
test("követem -> követ", function() {deepEqual( Stem("követem"), "követ");});
test("követnek -> követ", function() {deepEqual( Stem("követnek"), "követ");});
test("követünk -> követ", function() {deepEqual( Stem("követünk"), "követ");});
test("követe -> követ", function() {deepEqual( Stem("követe"), "követ");});
test("követek -> követ", function() {deepEqual( Stem("követek"), "követ");});
test("követeketkövetét -> követeketkövet", function() {deepEqual( Stem("követeketkövetét"), "követeketkövet");});
test("követelhesse -> követelhess", function() {deepEqual( Stem("követelhesse"), "követelhess");});
test("követelhet -> követelh", function() {deepEqual( Stem("követelhet"), "követelh");});
test("követelheti -> követelhet", function() {deepEqual( Stem("követelheti"), "követelhet");});
test("követelhetik -> követelhet", function() {deepEqual( Stem("követelhetik"), "követelhet");});
test("követelhetnek -> követelhet", function() {deepEqual( Stem("követelhetnek"), "követelhet");});
test("követelhették -> követelhette", function() {deepEqual( Stem("követelhették"), "követelhette");});
test("követelhető -> követelhető", function() {deepEqual( Stem("követelhető"), "követelhető");});
test("követelménnyé -> követelmény", function() {deepEqual( Stem("követelménnyé"), "követelmény");});
test("követelmény -> követelmény", function() {deepEqual( Stem("követelmény"), "követelmény");});
test("követelménye -> követelmény", function() {deepEqual( Stem("követelménye"), "követelmény");});
test("követelményei -> követelmény", function() {deepEqual( Stem("követelményei"), "követelmény");});
test("követelményeihez -> követelmény", function() {deepEqual( Stem("követelményeihez"), "követelmény");});
test("követelményeiknek -> követelmény", function() {deepEqual( Stem("követelményeiknek"), "követelmény");});
test("követelményeinek -> követelmény", function() {deepEqual( Stem("követelményeinek"), "követelmény");});
test("követelmények -> követelmény", function() {deepEqual( Stem("követelmények"), "követelmény");});
test("követelményeken -> követelmény", function() {deepEqual( Stem("követelményeken"), "követelmény");});
test("követelményeket -> követelmény", function() {deepEqual( Stem("követelményeket"), "követelmény");});
test("követelményekhez -> követelmény", function() {deepEqual( Stem("követelményekhez"), "követelmény");});
test("követelményekkel -> követelmény", function() {deepEqual( Stem("követelményekkel"), "követelmény");});
test("követelményeknek -> követelmény", function() {deepEqual( Stem("követelményeknek"), "követelmény");});
test("követelményektől -> követelmény", function() {deepEqual( Stem("követelményektől"), "követelmény");});
test("követelményként -> követelmény", function() {deepEqual( Stem("követelményként"), "követelmény");});
test("követelménynek -> követelmény", function() {deepEqual( Stem("követelménynek"), "követelmény");});
test("követelménynél -> követelmény", function() {deepEqual( Stem("követelménynél"), "követelmény");});
test("követelményt -> követelmény", function() {deepEqual( Stem("követelményt"), "követelmény");});
test("követelménytől -> követelmény", function() {deepEqual( Stem("követelménytől"), "követelmény");});
test("követelményébe -> követelmény", function() {deepEqual( Stem("követelményébe"), "követelmény");});
test("követelményének -> követelmény", function() {deepEqual( Stem("követelményének"), "követelmény");});
test("követelményére -> követelmény", function() {deepEqual( Stem("követelményére"), "követelmény");});
test("követelményét -> követelmény", function() {deepEqual( Stem("követelményét"), "követelmény");});
test("követelményi -> követelmény", function() {deepEqual( Stem("követelményi"), "követelmény");});
test("követelménymeghatározás -> követelménymeghatározás", function() {deepEqual( Stem("követelménymeghatározás"), "követelménymeghatározás");});
test("követelményrendszer -> követelményrendszer", function() {deepEqual( Stem("követelményrendszer"), "követelményrendszer");});
test("követelményrendszernek -> követelményrendszer", function() {deepEqual( Stem("követelményrendszernek"), "követelményrendszer");});
test("követelményrendszert -> követelményrendszer", function() {deepEqual( Stem("követelményrendszert"), "követelményrendszer");});
test("követelményrendszerének -> követelményrendszer", function() {deepEqual( Stem("követelményrendszerének"), "követelményrendszer");});
test("követelményrendszerét -> követelményrendszer", function() {deepEqual( Stem("követelményrendszerét"), "követelményrendszer");});
test("követelményszint -> követelményszin", function() {deepEqual( Stem("követelményszint"), "követelményszin");});
test("követelnek -> követel", function() {deepEqual( Stem("követelnek"), "követel");});
test("követelni -> követeln", function() {deepEqual( Stem("követelni"), "követeln");});
test("követel -> követel", function() {deepEqual( Stem("követel"), "követel");});
test("követelek -> követel", function() {deepEqual( Stem("követelek"), "követel");});
test("követelem -> követel", function() {deepEqual( Stem("követelem"), "követel");});
test("követeli -> követel", function() {deepEqual( Stem("követeli"), "követel");});
test("követelik -> követel", function() {deepEqual( Stem("követelik"), "követel");});
test("követelje -> követel", function() {deepEqual( Stem("követelje"), "követel");});
test("követelniük -> követeln", function() {deepEqual( Stem("követelniük"), "követeln");});
test("követelnének -> követeln", function() {deepEqual( Stem("követelnének"), "követeln");});
test("követelte -> követelt", function() {deepEqual( Stem("követelte"), "követelt");});
test("követeltek -> követelt", function() {deepEqual( Stem("követeltek"), "követelt");});
test("követelték -> követelte", function() {deepEqual( Stem("követelték"), "követelte");});
test("követeltük -> követelt", function() {deepEqual( Stem("követeltük"), "követelt");});
test("követelt -> követel", function() {deepEqual( Stem("követelt"), "követel");});
test("követelve -> követelv", function() {deepEqual( Stem("követelve"), "követelv");});
test("követelés -> követelés", function() {deepEqual( Stem("követelés"), "követelés");});
test("követelése -> követelés", function() {deepEqual( Stem("követelése"), "követelés");});
test("követelései -> követelés", function() {deepEqual( Stem("követelései"), "követelés");});
test("követeléseik -> követelés", function() {deepEqual( Stem("követeléseik"), "követelés");});
test("követeléseiket -> követelés", function() {deepEqual( Stem("követeléseiket"), "követelés");});
test("követeléseinek -> követelés", function() {deepEqual( Stem("követeléseinek"), "követelés");});
test("követeléseire -> követelés", function() {deepEqual( Stem("követeléseire"), "követelés");});
test("követeléseivel -> követelés", function() {deepEqual( Stem("követeléseivel"), "követelés");});
test("követelések -> követelés", function() {deepEqual( Stem("követelések"), "követelés");});
test("követeléseket -> követelés", function() {deepEqual( Stem("követeléseket"), "követelés");});
test("követelésekkel -> követelés", function() {deepEqual( Stem("követelésekkel"), "követelés");});
test("követeléseknek -> követelés", function() {deepEqual( Stem("követeléseknek"), "követelés");});
test("követelésekre -> követelés", function() {deepEqual( Stem("követelésekre"), "követelés");});
test("követelésre -> követelés", function() {deepEqual( Stem("követelésre"), "követelés");});
test("követelésről -> követelés", function() {deepEqual( Stem("követelésről"), "követelés");});
test("követeléssel -> követelés", function() {deepEqual( Stem("követeléssel"), "követelés");});
test("követelést -> követelés", function() {deepEqual( Stem("követelést"), "követelés");});
test("követeléséhez -> követelés", function() {deepEqual( Stem("követeléséhez"), "követelés");});
test("követelésének -> követelés", function() {deepEqual( Stem("követelésének"), "követelés");});
test("követelésénél -> követelés", function() {deepEqual( Stem("követelésénél"), "követelés");});
test("követelésére -> követelés", function() {deepEqual( Stem("követelésére"), "követelés");});
test("követelésért -> követelés", function() {deepEqual( Stem("követelésért"), "követelés");});
test("követelését -> követelés", function() {deepEqual( Stem("követelését"), "követelés");});
test("követelésük -> követelés", function() {deepEqual( Stem("követelésük"), "követelés");});
test("követelésüket -> követelés", function() {deepEqual( Stem("követelésüket"), "követelés");});
test("követelésükre -> követelés", function() {deepEqual( Stem("követelésükre"), "követelés");});
test("követelési -> követelés", function() {deepEqual( Stem("követelési"), "követelés");});
test("követelő -> követelő", function() {deepEqual( Stem("követelő"), "követelő");});
test("követelőzőek -> követelőző", function() {deepEqual( Stem("követelőzőek"), "követelőző");});
test("követendő -> követendő", function() {deepEqual( Stem("követendő"), "követendő");});
test("követett -> követet", function() {deepEqual( Stem("követett"), "követet");});
test("követhetetlen -> követhetetl", function() {deepEqual( Stem("követhetetlen"), "követhetetl");});
test("követheti -> követhet", function() {deepEqual( Stem("követheti"), "követhet");});
test("követhet -> követh", function() {deepEqual( Stem("követhet"), "követh");});
test("követhetik -> követhet", function() {deepEqual( Stem("követhetik"), "követhet");});
test("követhetjük -> követhet", function() {deepEqual( Stem("követhetjük"), "követhet");});
test("követhetnék -> követhetne", function() {deepEqual( Stem("követhetnék"), "követhetne");});
test("követhetnének -> követhetn", function() {deepEqual( Stem("követhetnének"), "követhetn");});
test("követhették -> követhette", function() {deepEqual( Stem("követhették"), "követhette");});
test("követhető -> követhető", function() {deepEqual( Stem("követhető"), "követhető");});
test("követhetők -> követhető", function() {deepEqual( Stem("követhetők"), "követhető");});
test("követhetővé -> követhető", function() {deepEqual( Stem("követhetővé"), "követhető");});
test("követi -> követ", function() {deepEqual( Stem("követi"), "követ");});
test("követik -> követ", function() {deepEqual( Stem("követik"), "követ");});
test("követkesztében -> követkeszt", function() {deepEqual( Stem("követkesztében"), "követkeszt");});
test("következetes -> következetes", function() {deepEqual( Stem("következetes"), "következetes");});
test("következetesebbek -> következetesebb", function() {deepEqual( Stem("következetesebbek"), "következetesebb");});
test("következetesek -> következetes", function() {deepEqual( Stem("következetesek"), "következetes");});
test("következetesen -> következetes", function() {deepEqual( Stem("következetesen"), "következetes");});
test("következett -> következet", function() {deepEqual( Stem("következett"), "következet");});
test("következhet -> következh", function() {deepEqual( Stem("következhet"), "következh");});
test("következi -> következ", function() {deepEqual( Stem("következi"), "következ");});
test("következik -> következ", function() {deepEqual( Stem("következik"), "következ");});
test("következek -> következ", function() {deepEqual( Stem("következek"), "következ");});
test("következménnyel -> következmény", function() {deepEqual( Stem("következménnyel"), "következmény");});
test("következmény -> következmény", function() {deepEqual( Stem("következmény"), "következmény");});
test("következménye -> következmény", function() {deepEqual( Stem("következménye"), "következmény");});
test("következményei -> következmény", function() {deepEqual( Stem("következményei"), "következmény");});
test("következményeibe -> következmény", function() {deepEqual( Stem("következményeibe"), "következmény");});
test("következményeik -> következmény", function() {deepEqual( Stem("következményeik"), "következmény");});
test("következményeire -> következmény", function() {deepEqual( Stem("következményeire"), "következmény");});
test("következményeiről -> következmény", function() {deepEqual( Stem("következményeiről"), "következmény");});
test("következményeit -> következmény", function() {deepEqual( Stem("következményeit"), "következmény");});
test("következményeitől -> következmény", function() {deepEqual( Stem("következményeitől"), "következmény");});
test("következményeivel -> következmény", function() {deepEqual( Stem("következményeivel"), "következmény");});
test("következmények -> következmény", function() {deepEqual( Stem("következmények"), "következmény");});
test("következményeket -> következmény", function() {deepEqual( Stem("következményeket"), "következmény");});
test("következményekkel -> következmény", function() {deepEqual( Stem("következményekkel"), "következmény");});
test("következményeként -> következmény", function() {deepEqual( Stem("következményeként"), "következmény");});
test("következményének -> következmény", function() {deepEqual( Stem("következményének"), "következmény");});
test("következményteljes -> következményteljes", function() {deepEqual( Stem("következményteljes"), "következményteljes");});
test("következne -> következn", function() {deepEqual( Stem("következne"), "következn");});
test("következnek -> következ", function() {deepEqual( Stem("következnek"), "következ");});
test("következni -> következn", function() {deepEqual( Stem("következni"), "következn");});
test("következnie -> következn", function() {deepEqual( Stem("következnie"), "következn");});
test("következtek -> következt", function() {deepEqual( Stem("következtek"), "következt");});
test("következtem -> következt", function() {deepEqual( Stem("következtem"), "következt");});
test("következzen -> következz", function() {deepEqual( Stem("következzen"), "következz");});
test("következtet -> következt", function() {deepEqual( Stem("következtet"), "következt");});
test("következtetni -> következtetn", function() {deepEqual( Stem("következtetni"), "következtetn");});
test("következtettek -> következtett", function() {deepEqual( Stem("következtettek"), "következtett");});
test("következtettem -> következtett", function() {deepEqual( Stem("következtettem"), "következtett");});
test("következtetett -> következtetet", function() {deepEqual( Stem("következtetett"), "következtetet");});
test("következtethetett -> következtethetet", function() {deepEqual( Stem("következtethetett"), "következtethetet");});
test("következtethető -> következtethető", function() {deepEqual( Stem("következtethető"), "következtethető");});
test("következtethetően -> következtethető", function() {deepEqual( Stem("következtethetően"), "következtethető");});
test("következtetve -> következtetv", function() {deepEqual( Stem("következtetve"), "következtetv");});
test("következtetés -> következtetés", function() {deepEqual( Stem("következtetés"), "következtetés");});
test("következtetései -> következtetés", function() {deepEqual( Stem("következtetései"), "következtetés");});
test("következtetéseket -> következtetés", function() {deepEqual( Stem("következtetéseket"), "következtetés");});
test("következtetésekkel -> következtetés", function() {deepEqual( Stem("következtetésekkel"), "következtetés");});
test("következtetésem -> következtetés", function() {deepEqual( Stem("következtetésem"), "következtetés");});
test("következtetésre -> következtetés", function() {deepEqual( Stem("következtetésre"), "következtetés");});
test("következtetéssel -> következtetés", function() {deepEqual( Stem("következtetéssel"), "következtetés");});
test("következtetést -> következtetés", function() {deepEqual( Stem("következtetést"), "következtetés");});
test("következtető -> következtető", function() {deepEqual( Stem("következtető"), "következtető");});
test("következtében -> következt", function() {deepEqual( Stem("következtében"), "következt");});
test("következésképp -> következés", function() {deepEqual( Stem("következésképp"), "következés");});
test("következésképpen -> következés", function() {deepEqual( Stem("következésképpen"), "következés");});
test("következő -> következő", function() {deepEqual( Stem("következő"), "következő");});
test("következőben -> következő", function() {deepEqual( Stem("következőben"), "következő");});
test("következően -> következő", function() {deepEqual( Stem("következően"), "következő");});
test("következőhöz -> következő", function() {deepEqual( Stem("következőhöz"), "következő");});
test("következők -> következő", function() {deepEqual( Stem("következők"), "következő");});
test("következőkben -> következő", function() {deepEqual( Stem("következőkben"), "következő");});
test("következőket -> következő", function() {deepEqual( Stem("következőket"), "következő");});
test("következőkre -> következő", function() {deepEqual( Stem("következőkre"), "következő");});
test("következőkről -> következő", function() {deepEqual( Stem("következőkről"), "következő");});
test("következőn -> következő", function() {deepEqual( Stem("következőn"), "következő");});
test("következőt -> következő", function() {deepEqual( Stem("következőt"), "következő");});
test("következőt -> következő", function() {deepEqual( Stem("következőt"), "következő");});
test("következőképpen -> következő", function() {deepEqual( Stem("következőképpen"), "következő");});
test("következőleg -> következőleg", function() {deepEqual( Stem("következőleg"), "következőleg");});
test("követni -> követn", function() {deepEqual( Stem("követni"), "követn");});
test("kövessenek -> kövess", function() {deepEqual( Stem("kövessenek"), "kövess");});
test("kövessék -> kövesse", function() {deepEqual( Stem("kövessék"), "kövesse");});
test("kövessétek -> kövessét", function() {deepEqual( Stem("kövessétek"), "kövessét");});
test("követnie -> követn", function() {deepEqual( Stem("követnie"), "követn");});
test("követniük -> követn", function() {deepEqual( Stem("követniük"), "követn");});
test("követnék -> követne", function() {deepEqual( Stem("követnék"), "követne");});
test("követnél -> követ", function() {deepEqual( Stem("követnél"), "követ");});
test("követném -> követne", function() {deepEqual( Stem("követném"), "követne");});
test("követség -> követség", function() {deepEqual( Stem("követség"), "követség");});
test("követségem -> követség", function() {deepEqual( Stem("követségem"), "követség");});
test("követségen -> követség", function() {deepEqual( Stem("követségen"), "követség");});
test("követségre -> követség", function() {deepEqual( Stem("követségre"), "követség");});
test("követségi -> követség", function() {deepEqual( Stem("követségi"), "követség");});
test("követte -> követt", function() {deepEqual( Stem("követte"), "követt");});
test("követtek -> követt", function() {deepEqual( Stem("követtek"), "követt");});
test("követtem -> követt", function() {deepEqual( Stem("követtem"), "követt");});
test("követték -> követte", function() {deepEqual( Stem("követték"), "követte");});
test("követtük -> követt", function() {deepEqual( Stem("követtük"), "követt");});
test("követve -> követv", function() {deepEqual( Stem("követve"), "követv");});
test("követési -> követés", function() {deepEqual( Stem("követési"), "követés");});
test("követésre -> követés", function() {deepEqual( Stem("követésre"), "követés");});
test("követése -> követés", function() {deepEqual( Stem("követése"), "követés");});
test("követésére -> követés", function() {deepEqual( Stem("követésére"), "követés");});
test("követését -> követés", function() {deepEqual( Stem("követését"), "követés");});
test("követő -> követő", function() {deepEqual( Stem("követő"), "követő");});
test("követően -> követő", function() {deepEqual( Stem("követően"), "követő");});
test("követői -> követő", function() {deepEqual( Stem("követői"), "követő");});
test("követőinek -> követő", function() {deepEqual( Stem("követőinek"), "követő");});
test("követője -> követő", function() {deepEqual( Stem("követője"), "követő");});
test("követőnek -> követő", function() {deepEqual( Stem("követőnek"), "követő");});
test("követőre -> követő", function() {deepEqual( Stem("követőre"), "követő");});
test("kövezet -> kövez", function() {deepEqual( Stem("kövezet"), "kövez");});
test("kövezeten -> kövezet", function() {deepEqual( Stem("kövezeten"), "kövezet");});
test("kövezett -> kövezet", function() {deepEqual( Stem("kövezett"), "kövezet");});
test("kövezhettek -> kövezhett", function() {deepEqual( Stem("kövezhettek"), "kövezhett");});
test("kövirózsa -> kövirózs", function() {deepEqual( Stem("kövirózsa"), "kövirózs");});
test("kövér -> kövér", function() {deepEqual( Stem("kövér"), "kövér");});
test("kövérebb -> kövérebb", function() {deepEqual( Stem("kövérebb"), "kövérebb");});
test("köz -> köz", function() {deepEqual( Stem("köz"), "köz");});
test("közbe -> köz", function() {deepEqual( Stem("közbe"), "köz");});
test("közük -> köz", function() {deepEqual( Stem("közük"), "köz");});
test("közül -> köz", function() {deepEqual( Stem("közül"), "köz");});
test("közünk -> köz", function() {deepEqual( Stem("közünk"), "köz");});
test("köze -> köz", function() {deepEqual( Stem("köze"), "köz");});
test("közre -> köz", function() {deepEqual( Stem("közre"), "köz");});
test("közé -> köz", function() {deepEqual( Stem("közé"), "köz");});
test("közére -> köz", function() {deepEqual( Stem("közére"), "köz");});
test("közöm -> közö", function() {deepEqual( Stem("közöm"), "közö");});
test("közöd -> köz", function() {deepEqual( Stem("közöd"), "köz");});
test("közénk -> köze", function() {deepEqual( Stem("közénk"), "köze");});
test("közéjük -> köze", function() {deepEqual( Stem("közéjük"), "köze");});
test("közzé -> köz", function() {deepEqual( Stem("közzé"), "köz");});
test("közte -> közt", function() {deepEqual( Stem("közte"), "közt");});
test("közt -> köz", function() {deepEqual( Stem("közt"), "köz");});
test("közted -> közt", function() {deepEqual( Stem("közted"), "közt");});
test("köztük -> közt", function() {deepEqual( Stem("köztük"), "közt");});
test("köztünk -> közt", function() {deepEqual( Stem("köztünk"), "közt");});
test("köztem -> közt", function() {deepEqual( Stem("köztem"), "közt");});
test("közti -> közt", function() {deepEqual( Stem("közti"), "közt");});
test("köznek -> köz", function() {deepEqual( Stem("köznek"), "köz");});
test("köztetek -> köztet", function() {deepEqual( Stem("köztetek"), "köztet");});
test("közakaratra -> közakarat", function() {deepEqual( Stem("közakaratra"), "közakarat");});
test("közalapítvánnyal -> közalapítvány", function() {deepEqual( Stem("közalapítvánnyal"), "közalapítvány");});
test("közalapítvány -> közalapítvány", function() {deepEqual( Stem("közalapítvány"), "közalapítvány");});
test("közalkalmazott -> közalkalmazot", function() {deepEqual( Stem("közalkalmazott"), "közalkalmazot");});
test("közalkalmazottak -> közalkalmazott", function() {deepEqual( Stem("közalkalmazottak"), "közalkalmazott");});
test("közalkalmazottat -> közalkalmazott", function() {deepEqual( Stem("közalkalmazottat"), "közalkalmazott");});
test("közalkalmazotti -> közalkalmazott", function() {deepEqual( Stem("közalkalmazotti"), "közalkalmazott");});
test("közbe-közbe -> közbe-köz", function() {deepEqual( Stem("közbe-közbe"), "közbe-köz");});
test("közbeiktatása -> közbeiktatás", function() {deepEqual( Stem("közbeiktatása"), "közbeiktatás");});
test("közbeiktatásával -> közbeiktatás", function() {deepEqual( Stem("közbeiktatásával"), "közbeiktatás");});
test("közbejöhet -> közbejöh", function() {deepEqual( Stem("közbejöhet"), "közbejöh");});
test("közbejött -> közbejöt", function() {deepEqual( Stem("közbejött"), "közbejöt");});
test("közbelépett -> közbelépet", function() {deepEqual( Stem("közbelépett"), "közbelépet");});
test("közbelépjenek -> közbelép", function() {deepEqual( Stem("közbelépjenek"), "közbelép");});
test("közben -> köz", function() {deepEqual( Stem("közben"), "köz");});
test("közbeni -> közben", function() {deepEqual( Stem("közbeni"), "közben");});
test("közbenjárása -> közbenjárás", function() {deepEqual( Stem("közbenjárása"), "közbenjárás");});
test("közbenjárásának -> közbenjárás", function() {deepEqual( Stem("közbenjárásának"), "közbenjárás");});
test("közbenső -> közbenső", function() {deepEqual( Stem("közbenső"), "közbenső");});
test("közbeszerzési -> közbeszerzés", function() {deepEqual( Stem("közbeszerzési"), "közbeszerzés");});
test("közbeszéd -> közbesze", function() {deepEqual( Stem("közbeszéd"), "közbesze");});
test("közbeszédben -> közbesze", function() {deepEqual( Stem("közbeszédben"), "közbesze");});
test("közbeszólt -> közbeszól", function() {deepEqual( Stem("közbeszólt"), "közbeszól");});
test("közbeszólás -> közbeszólás", function() {deepEqual( Stem("közbeszólás"), "közbeszólás");});
test("közbevágott -> közbevágot", function() {deepEqual( Stem("közbevágott"), "közbevágot");});
test("közbeékelt -> közbeékel", function() {deepEqual( Stem("közbeékelt"), "közbeékel");});
test("közbiztonság -> közbiztonság", function() {deepEqual( Stem("közbiztonság"), "közbiztonság");});
test("közbiztonsága -> közbiztonság", function() {deepEqual( Stem("közbiztonsága"), "közbiztonság");});
test("közbiztonsági -> közbiztonság", function() {deepEqual( Stem("közbiztonsági"), "közbiztonság");});
test("közcélokra -> közcél", function() {deepEqual( Stem("közcélokra"), "közcél");});
test("közcélú -> közcélú", function() {deepEqual( Stem("közcélú"), "közcélú");});
test("közeg -> közeg", function() {deepEqual( Stem("közeg"), "közeg");});
test("közegbe -> közeg", function() {deepEqual( Stem("közegbe"), "közeg");});
test("közegben -> közeg", function() {deepEqual( Stem("közegben"), "közeg");});
test("közegből -> közeg", function() {deepEqual( Stem("közegből"), "közeg");});
test("közegek -> közeg", function() {deepEqual( Stem("közegek"), "közeg");});
test("közegét -> közeg", function() {deepEqual( Stem("közegét"), "közeg");});
test("közel-keleti -> közel-kelet", function() {deepEqual( Stem("közel-keleti"), "közel-kelet");});
test("közelbe -> közel", function() {deepEqual( Stem("közelbe"), "közel");});
test("közel -> közel", function() {deepEqual( Stem("közel"), "közel");});
test("közelben -> közel", function() {deepEqual( Stem("közelben"), "közel");});
test("közelebb -> közelebb", function() {deepEqual( Stem("közelebb"), "közelebb");});
test("közelebbi -> közelebb", function() {deepEqual( Stem("közelebbi"), "közelebb");});
test("közelebbit -> közelebb", function() {deepEqual( Stem("közelebbit"), "közelebb");});
test("közelebbról -> közelebb", function() {deepEqual( Stem("közelebbról"), "közelebb");});
test("közelre -> közel", function() {deepEqual( Stem("közelre"), "közel");});
test("közelebbről -> közelebb", function() {deepEqual( Stem("közelebbről"), "közelebb");});
test("közelről -> közel", function() {deepEqual( Stem("közelről"), "közel");});
test("közelébe -> közel", function() {deepEqual( Stem("közelébe"), "közel");});
test("közelében -> közel", function() {deepEqual( Stem("közelében"), "közel");});
test("közeléből -> közel", function() {deepEqual( Stem("közeléből"), "közel");});
test("közeledett -> közeledet", function() {deepEqual( Stem("közeledett"), "közeledet");});
test("közeledhessenek -> közeledhess", function() {deepEqual( Stem("közeledhessenek"), "közeledhess");});
test("közeledik -> közeled", function() {deepEqual( Stem("közeledik"), "közeled");});
test("közeledek -> közeled", function() {deepEqual( Stem("közeledek"), "közeled");});
test("közelednek -> közel", function() {deepEqual( Stem("közelednek"), "közel");});
test("közeledni -> közeledn", function() {deepEqual( Stem("közeledni"), "közeledn");});
test("közelednünk -> közeledn", function() {deepEqual( Stem("közelednünk"), "közeledn");});
test("közeledtek -> közeledt", function() {deepEqual( Stem("közeledtek"), "közeledt");});
test("közeledtem -> közeledt", function() {deepEqual( Stem("közeledtem"), "közeledt");});
test("közeledtével -> közeledt", function() {deepEqual( Stem("közeledtével"), "közeledt");});
test("közeledtünk -> közeledt", function() {deepEqual( Stem("közeledtünk"), "közeledt");});
test("közeledve -> közeledv", function() {deepEqual( Stem("közeledve"), "közeledv");});
test("közeledés -> közeledés", function() {deepEqual( Stem("közeledés"), "közeledés");});
test("közeledésére -> közeledés", function() {deepEqual( Stem("közeledésére"), "közeledés");});
test("közeledését -> közeledés", function() {deepEqual( Stem("közeledését"), "közeledés");});
test("közeledő -> közeledő", function() {deepEqual( Stem("közeledő"), "közeledő");});
test("közeleg -> közeleg", function() {deepEqual( Stem("közeleg"), "közeleg");});
test("közelgő -> közelgő", function() {deepEqual( Stem("közelgő"), "közelgő");});
test("közeli -> közel", function() {deepEqual( Stem("közeli"), "közel");});
test("közeliek -> közeli", function() {deepEqual( Stem("közeliek"), "közeli");});
test("közelinek -> közel", function() {deepEqual( Stem("közelinek"), "közel");});
test("közeljövő -> közeljövő", function() {deepEqual( Stem("közeljövő"), "közeljövő");});
test("közeljövőben -> közeljövő", function() {deepEqual( Stem("közeljövőben"), "közeljövő");});
test("közeljövőből -> közeljövő", function() {deepEqual( Stem("közeljövőből"), "közeljövő");});
test("közeljövőre -> közeljövő", function() {deepEqual( Stem("közeljövőre"), "közeljövő");});
test("közeljövőtől -> közeljövő", function() {deepEqual( Stem("közeljövőtől"), "közeljövő");});
test("közelmúlt -> közelmúl", function() {deepEqual( Stem("közelmúlt"), "közelmúl");});
test("közelmúltban -> közelmúlt", function() {deepEqual( Stem("közelmúltban"), "közelmúlt");});
test("közelség -> közelség", function() {deepEqual( Stem("közelség"), "közelség");});
test("közelsége -> közelség", function() {deepEqual( Stem("közelsége"), "közelség");});
test("közelségét -> közelség", function() {deepEqual( Stem("közelségét"), "közelség");});
test("közelálló -> közelálló", function() {deepEqual( Stem("közelálló"), "közelálló");});
test("közelít -> közelí", function() {deepEqual( Stem("közelít"), "közelí");});
test("közelíteni -> közelíten", function() {deepEqual( Stem("közelíteni"), "közelíten");});
test("közelítette -> közelített", function() {deepEqual( Stem("közelítette"), "közelített");});
test("közelítettek -> közelített", function() {deepEqual( Stem("közelítettek"), "közelített");});
test("közelíti -> közelít", function() {deepEqual( Stem("közelíti"), "közelít");});
test("közelítik -> közelít", function() {deepEqual( Stem("közelítik"), "közelít");});
test("közelítsen -> közelíts", function() {deepEqual( Stem("közelítsen"), "közelíts");});
test("közelítsék -> közelítse", function() {deepEqual( Stem("közelítsék"), "közelítse");});
test("közelítsük -> közelíts", function() {deepEqual( Stem("közelítsük"), "közelíts");});
test("közelíthetők -> közelíthető", function() {deepEqual( Stem("közelíthetők"), "közelíthető");});
test("közelítve -> közelítv", function() {deepEqual( Stem("közelítve"), "közelítv");});
test("közelítése -> közelítés", function() {deepEqual( Stem("közelítése"), "közelítés");});
test("közelítések -> közelítés", function() {deepEqual( Stem("közelítések"), "közelítés");});
test("közelítést -> közelítés", function() {deepEqual( Stem("közelítést"), "közelítés");});
test("közelítésére -> közelítés", function() {deepEqual( Stem("közelítésére"), "közelítés");});
test("közelítését -> közelítés", function() {deepEqual( Stem("közelítését"), "közelítés");});
test("közelítő -> közelítő", function() {deepEqual( Stem("közelítő"), "közelítő");});
test("közelükben -> közel", function() {deepEqual( Stem("közelükben"), "közel");});
test("közelünkben -> közel", function() {deepEqual( Stem("közelünkben"), "közel");});
test("közelembe -> közel", function() {deepEqual( Stem("közelembe"), "közel");});
test("közelemben -> közel", function() {deepEqual( Stem("közelemben"), "közel");});
test("közemberek -> közember", function() {deepEqual( Stem("közemberek"), "közember");});
test("közembersorban -> közembersor", function() {deepEqual( Stem("közembersorban"), "közembersor");});
test("közepes -> közepes", function() {deepEqual( Stem("közepes"), "közepes");});
test("közepesnél -> közepes", function() {deepEqual( Stem("közepesnél"), "közepes");});
test("közepesé -> közepes", function() {deepEqual( Stem("közepesé"), "közepes");});
test("közepette -> közepett", function() {deepEqual( Stem("közepette"), "közepett");});
test("közepébe -> közep", function() {deepEqual( Stem("közepébe"), "közep");});
test("közepében -> közep", function() {deepEqual( Stem("közepében"), "közep");});
test("közepéből -> közep", function() {deepEqual( Stem("közepéből"), "közep");});
test("közepéhez -> közep", function() {deepEqual( Stem("közepéhez"), "közep");});
test("közepéig -> közep", function() {deepEqual( Stem("közepéig"), "közep");});
test("közepén -> közep", function() {deepEqual( Stem("közepén"), "közep");});
test("közepénél -> közep", function() {deepEqual( Stem("közepénél"), "közep");});
test("közepére -> közep", function() {deepEqual( Stem("közepére"), "közep");});
test("közepétől -> közep", function() {deepEqual( Stem("közepétől"), "közep");});
test("közepe -> közep", function() {deepEqual( Stem("közepe"), "közep");});
test("közfeladat -> közfel", function() {deepEqual( Stem("közfeladat"), "közfel");});
test("közfeladatot -> közfeladat", function() {deepEqual( Stem("közfeladatot"), "közfeladat");});
test("közfelháborodástól -> közfelháborodás", function() {deepEqual( Stem("közfelháborodástól"), "közfelháborodás");});
test("közfelmérés -> közfelmérés", function() {deepEqual( Stem("közfelmérés"), "közfelmérés");});
test("közforgalmú -> közforgalmú", function() {deepEqual( Stem("közforgalmú"), "közforgalmú");});
test("közgazdasághoz -> közgazdaság", function() {deepEqual( Stem("közgazdasághoz"), "közgazdaság");});
test("közgazdasági -> közgazdaság", function() {deepEqual( Stem("közgazdasági"), "közgazdaság");});
test("közgazdaságtan -> közgazdaságt", function() {deepEqual( Stem("közgazdaságtan"), "közgazdaságt");});
test("közgazdaságtani -> közgazdaságtan", function() {deepEqual( Stem("közgazdaságtani"), "közgazdaságtan");});
test("közgazdász -> közgazdász", function() {deepEqual( Stem("közgazdász"), "közgazdász");});
test("közgazdászai -> közgazdász", function() {deepEqual( Stem("közgazdászai"), "közgazdász");});
test("közgazdászként -> közgazdász", function() {deepEqual( Stem("közgazdászként"), "közgazdász");});
test("közgazdászok -> közgazdász", function() {deepEqual( Stem("közgazdászok"), "közgazdász");});
test("közgazdászokból -> közgazdász", function() {deepEqual( Stem("közgazdászokból"), "közgazdász");});
test("közgyűjtemény -> közgyűjtemény", function() {deepEqual( Stem("közgyűjtemény"), "közgyűjtemény");});
test("közgyűjteményben -> közgyűjtemény", function() {deepEqual( Stem("közgyűjteményben"), "közgyűjtemény");});
test("közgyűjtemények -> közgyűjtemény", function() {deepEqual( Stem("közgyűjtemények"), "közgyűjtemény");});
test("közgyűjteményekben -> közgyűjtemény", function() {deepEqual( Stem("közgyűjteményekben"), "közgyűjtemény");});
test("közgyűlési -> közgyűlés", function() {deepEqual( Stem("közgyűlési"), "közgyűlés");});
test("közgyűlés -> közgyűlés", function() {deepEqual( Stem("közgyűlés"), "közgyűlés");});
test("közgyűlése -> közgyűlés", function() {deepEqual( Stem("közgyűlése"), "közgyűlés");});
test("közgyűlésein -> közgyűlés", function() {deepEqual( Stem("közgyűlésein"), "közgyűlés");});
test("közgyűlések -> közgyűlés", function() {deepEqual( Stem("közgyűlések"), "közgyűlés");});
test("közgyűlésen -> közgyűlés", function() {deepEqual( Stem("közgyűlésen"), "közgyűlés");});
test("közgyűléshez -> közgyűlés", function() {deepEqual( Stem("közgyűléshez"), "közgyűlés");});
test("közgyűlésig -> közgyűlés", function() {deepEqual( Stem("közgyűlésig"), "közgyűlés");});
test("közgyűlésnek -> közgyűlés", function() {deepEqual( Stem("közgyűlésnek"), "közgyűlés");});
test("közgyűlésre -> közgyűlés", function() {deepEqual( Stem("közgyűlésre"), "közgyűlés");});
test("közgyűlésről -> közgyűlés", function() {deepEqual( Stem("közgyűlésről"), "közgyűlés");});
test("lassúságot -> lassúság", function() {deepEqual( Stem("lassúságot"), "lassúság");});
test("latba -> lat", function() {deepEqual( Stem("latba"), "lat");});
test("latban -> lat", function() {deepEqual( Stem("latban"), "lat");});
test("latin-amerikai -> latin-ameri", function() {deepEqual( Stem("latin-amerikai"), "latin-ameri");});
test("latinból -> latin", function() {deepEqual( Stem("latinból"), "latin");});
test("latin -> lat", function() {deepEqual( Stem("latin"), "lat");});
test("latinul -> latin", function() {deepEqual( Stem("latinul"), "latin");});
test("latolgatják -> latolgatja", function() {deepEqual( Stem("latolgatják"), "latolgatja");});
test("latolgatta -> latolgatt", function() {deepEqual( Stem("latolgatta"), "latolgatt");});
test("lator -> lator", function() {deepEqual( Stem("lator"), "lator");});
test("lavina -> lavin", function() {deepEqual( Stem("lavina"), "lavin");});
test("lavináját -> laviná", function() {deepEqual( Stem("lavináját"), "laviná");});
test("lavór -> lavór", function() {deepEqual( Stem("lavór"), "lavór");});
test("lavórba -> lavór", function() {deepEqual( Stem("lavórba"), "lavór");});
test("lavórokkal -> lavór", function() {deepEqual( Stem("lavórokkal"), "lavór");});
test("lavórt -> lavór", function() {deepEqual( Stem("lavórt"), "lavór");});
test("lazac -> lazac", function() {deepEqual( Stem("lazac"), "lazac");});
test("lazaságukkal -> lazaság", function() {deepEqual( Stem("lazaságukkal"), "lazaság");});
test("lazuliból -> lazul", function() {deepEqual( Stem("lazuliból"), "lazul");});
test("lazulását -> lazulás", function() {deepEqual( Stem("lazulását"), "lazulás");});
test("laza -> laz", function() {deepEqual( Stem("laza"), "laz");});
test("lazább -> lazább", function() {deepEqual( Stem("lazább"), "lazább");});
test("lazábbak -> lazább", function() {deepEqual( Stem("lazábbak"), "lazább");});
test("lazán -> laz", function() {deepEqual( Stem("lazán"), "laz");});
test("lazítanának -> lazítan", function() {deepEqual( Stem("lazítanának"), "lazítan");});
test("lazított -> lazítot", function() {deepEqual( Stem("lazított"), "lazítot");});
test("lazítás -> lazítás", function() {deepEqual( Stem("lazítás"), "lazítás");});
test("le -> le", function() {deepEqual( Stem("le"), "le");});
test("le-lecsukódik -> le-lecsukód", function() {deepEqual( Stem("le-lecsukódik"), "le-lecsukód");});
test("leadható -> leadható", function() {deepEqual( Stem("leadható"), "leadható");});
test("leadja -> lead", function() {deepEqual( Stem("leadja"), "lead");});
test("leadjuk -> lead", function() {deepEqual( Stem("leadjuk"), "lead");});
test("leadják -> leadja", function() {deepEqual( Stem("leadják"), "leadja");});
test("leadnak -> le", function() {deepEqual( Stem("leadnak"), "le");});
test("leadni -> leadn", function() {deepEqual( Stem("leadni"), "leadn");});
test("leadott -> leadot", function() {deepEqual( Stem("leadott"), "leadot");});
test("leadtam -> leadt", function() {deepEqual( Stem("leadtam"), "leadt");});
test("leadták -> leadta", function() {deepEqual( Stem("leadták"), "leadta");});
test("leadása -> leadás", function() {deepEqual( Stem("leadása"), "leadás");});
test("leadására -> leadás", function() {deepEqual( Stem("leadására"), "leadás");});
test("leakadt -> le", function() {deepEqual( Stem("leakadt"), "le");});
test("lealacsonyodásukat -> lealacsonyodás", function() {deepEqual( Stem("lealacsonyodásukat"), "lealacsonyodás");});
test("lealacsonyítva -> lealacsonyítv", function() {deepEqual( Stem("lealacsonyítva"), "lealacsonyítv");});
test("lealacsonyító -> lealacsonyító", function() {deepEqual( Stem("lealacsonyító"), "lealacsonyító");});
test("leballagott -> leballagot", function() {deepEqual( Stem("leballagott"), "leballagot");});
test("lebarnulnék -> lebarnulne", function() {deepEqual( Stem("lebarnulnék"), "lebarnulne");});
test("lebecsülendő -> lebecsülendő", function() {deepEqual( Stem("lebecsülendő"), "lebecsülendő");});
test("lebecsüléssel -> lebecsülés", function() {deepEqual( Stem("lebecsüléssel"), "lebecsülés");});
test("lebeg -> lebeg", function() {deepEqual( Stem("lebeg"), "lebeg");});
test("lebegett -> lebeget", function() {deepEqual( Stem("lebegett"), "lebeget");});
test("lebegni -> lebegn", function() {deepEqual( Stem("lebegni"), "lebegn");});
test("lebegnék -> lebegne", function() {deepEqual( Stem("lebegnék"), "lebegne");});
test("lebegtetésével -> lebegtetés", function() {deepEqual( Stem("lebegtetésével"), "lebegtetés");});
test("lebegő -> lebegő", function() {deepEqual( Stem("lebegő"), "lebegő");});
test("lebeszélhetné -> lebeszélhetn", function() {deepEqual( Stem("lebeszélhetné"), "lebeszélhetn");});
test("lebeszélni -> lebeszéln", function() {deepEqual( Stem("lebeszélni"), "lebeszéln");});
test("lebeszéltek -> lebeszélt", function() {deepEqual( Stem("lebeszéltek"), "lebeszélt");});
test("lebeszéltük -> lebeszélt", function() {deepEqual( Stem("lebeszéltük"), "lebeszélt");});
test("lebiggyedt -> lebiggy", function() {deepEqual( Stem("lebiggyedt"), "lebiggy");});
test("lebillen -> lebill", function() {deepEqual( Stem("lebillen"), "lebill");});
test("leblokkol -> leblokkol", function() {deepEqual( Stem("leblokkol"), "leblokkol");});
test("leblokkolta -> leblokkolt", function() {deepEqual( Stem("leblokkolta"), "leblokkolt");});
test("lebontania -> lebontan", function() {deepEqual( Stem("lebontania"), "lebontan");});
test("lebontatta -> lebontatt", function() {deepEqual( Stem("lebontatta"), "lebontatt");});
test("lebontotta -> lebontott", function() {deepEqual( Stem("lebontotta"), "lebontott");});
test("lebontották -> lebontotta", function() {deepEqual( Stem("lebontották"), "lebontotta");});
test("lebonthatták -> lebonthatta", function() {deepEqual( Stem("lebonthatták"), "lebonthatta");});
test("lebontott -> lebontot", function() {deepEqual( Stem("lebontott"), "lebontot");});
test("lebontva -> lebontv", function() {deepEqual( Stem("lebontva"), "lebontv");});
test("lebontása -> lebontás", function() {deepEqual( Stem("lebontása"), "lebontás");});
test("lebontásban -> lebontás", function() {deepEqual( Stem("lebontásban"), "lebontás");});
test("lebontásának -> lebontás", function() {deepEqual( Stem("lebontásának"), "lebontás");});
test("lebontásáról -> lebontás", function() {deepEqual( Stem("lebontásáról"), "lebontás");});
test("lebontódjék -> lebontódje", function() {deepEqual( Stem("lebontódjék"), "lebontódje");});
test("lebonyolítandó -> lebonyolítandó", function() {deepEqual( Stem("lebonyolítandó"), "lebonyolítandó");});
test("lebonyolítani -> lebonyolítan", function() {deepEqual( Stem("lebonyolítani"), "lebonyolítan");});
test("lebonyolítása -> lebonyolítás", function() {deepEqual( Stem("lebonyolítása"), "lebonyolítás");});
test("lebonyolításra -> lebonyolítás", function() {deepEqual( Stem("lebonyolításra"), "lebonyolítás");});
test("lebonyolítást -> lebonyolítás", function() {deepEqual( Stem("lebonyolítást"), "lebonyolítás");});
test("lebonyolításához -> lebonyolítás", function() {deepEqual( Stem("lebonyolításához"), "lebonyolítás");});
test("lebonyolításának -> lebonyolítás", function() {deepEqual( Stem("lebonyolításának"), "lebonyolítás");});
test("lebonyolítására -> lebonyolítás", function() {deepEqual( Stem("lebonyolítására"), "lebonyolítás");});
test("lebonyolításáról -> lebonyolítás", function() {deepEqual( Stem("lebonyolításáról"), "lebonyolítás");});
test("lebonyolítását -> lebonyolítás", function() {deepEqual( Stem("lebonyolítását"), "lebonyolítás");});
test("lebonyolításával -> lebonyolítás", function() {deepEqual( Stem("lebonyolításával"), "lebonyolítás");});
test("lebonyolító -> lebonyolító", function() {deepEqual( Stem("lebonyolító"), "lebonyolító");});
test("lebonyolódott -> lebonyolódot", function() {deepEqual( Stem("lebonyolódott"), "lebonyolódot");});
test("leborotváltam -> leborotvált", function() {deepEqual( Stem("leborotváltam"), "leborotvált");});
test("lebotorkáltunk -> lebotorkált", function() {deepEqual( Stem("lebotorkáltunk"), "lebotorkált");});
test("lebuj -> lebuj", function() {deepEqual( Stem("lebuj"), "lebuj");});
test("lebujba -> lebuj", function() {deepEqual( Stem("lebujba"), "lebuj");});
test("lebukik -> lebu", function() {deepEqual( Stem("lebukik"), "lebu");});
test("lebukunk -> lebu", function() {deepEqual( Stem("lebukunk"), "lebu");});
test("lebukott -> lebukot", function() {deepEqual( Stem("lebukott"), "lebukot");});
test("lebélyegzés -> lebélyegzés", function() {deepEqual( Stem("lebélyegzés"), "lebélyegzés");});
test("lebélyegzése -> lebélyegzés", function() {deepEqual( Stem("lebélyegzése"), "lebélyegzés");});
test("lebélyegzésével -> lebélyegzés", function() {deepEqual( Stem("lebélyegzésével"), "lebélyegzés");});
test("lebénítása -> lebénítás", function() {deepEqual( Stem("lebénítása"), "lebénítás");});
test("lecibáltam -> lecibált", function() {deepEqual( Stem("lecibáltam"), "lecibált");});
test("lecipzárazott -> lecipzárazot", function() {deepEqual( Stem("lecipzárazott"), "lecipzárazot");});
test("lecke -> lec", function() {deepEqual( Stem("lecke"), "lec");});
test("leckébe -> lec", function() {deepEqual( Stem("leckébe"), "lec");});
test("leckében -> lec", function() {deepEqual( Stem("leckében"), "lec");});
test("leckéből -> lec", function() {deepEqual( Stem("leckéből"), "lec");});
test("leckéjévé -> lecké", function() {deepEqual( Stem("leckéjévé"), "lecké");});
test("leckékből -> lecke", function() {deepEqual( Stem("leckékből"), "lecke");});
test("leckéket -> lecke", function() {deepEqual( Stem("leckéket"), "lecke");});
test("leckéket -> lecke", function() {deepEqual( Stem("leckéket"), "lecke");});
test("leckémet -> lecke", function() {deepEqual( Stem("leckémet"), "lecke");});
test("leckét -> lec", function() {deepEqual( Stem("leckét"), "lec");});
test("leckéül -> lec", function() {deepEqual( Stem("leckéül"), "lec");});
test("lecsalni -> lecsaln", function() {deepEqual( Stem("lecsalni"), "lecsaln");});
test("lecsap -> lecsap", function() {deepEqual( Stem("lecsap"), "lecsap");});
test("lecsapni -> lecsapn", function() {deepEqual( Stem("lecsapni"), "lecsapn");});
test("lecsaptam -> lecsapt", function() {deepEqual( Stem("lecsaptam"), "lecsapt");});
test("lecsapott -> lecsapot", function() {deepEqual( Stem("lecsapott"), "lecsapot");});
test("lecsapó -> lecsapó", function() {deepEqual( Stem("lecsapó"), "lecsapó");});
test("lecselezte -> lecselezt", function() {deepEqual( Stem("lecselezte"), "lecselezt");});
test("lecsengett -> lecsenget", function() {deepEqual( Stem("lecsengett"), "lecsenget");});
test("lecseréli -> lecserél", function() {deepEqual( Stem("lecseréli"), "lecserél");});
test("lecserélni -> lecseréln", function() {deepEqual( Stem("lecserélni"), "lecseréln");});
test("lecseréltek -> lecserélt", function() {deepEqual( Stem("lecseréltek"), "lecserélt");});
test("lecserélését -> lecserélés", function() {deepEqual( Stem("lecserélését"), "lecserélés");});
test("lecsillapodik -> lecsillapod", function() {deepEqual( Stem("lecsillapodik"), "lecsillapod");});
test("lecsillapodtak -> lecsillapodt", function() {deepEqual( Stem("lecsillapodtak"), "lecsillapodt");});
test("lecsillapodott -> lecsillapodot", function() {deepEqual( Stem("lecsillapodott"), "lecsillapodot");});
test("lecsillapult -> lecsillapul", function() {deepEqual( Stem("lecsillapult"), "lecsillapul");});
test("lecsupaszítva -> lecsupaszítv", function() {deepEqual( Stem("lecsupaszítva"), "lecsupaszítv");});
test("lecsökken -> lecsök", function() {deepEqual( Stem("lecsökken"), "lecsök");});
test("lecsökkent -> lecsökken", function() {deepEqual( Stem("lecsökkent"), "lecsökken");});
test("lecsökkentette -> lecsökkentett", function() {deepEqual( Stem("lecsökkentette"), "lecsökkentett");});
test("lecsökkentheti -> lecsökkenthet", function() {deepEqual( Stem("lecsökkentheti"), "lecsökkenthet");});
test("lecsússzak -> lecsússz", function() {deepEqual( Stem("lecsússzak"), "lecsússz");});
test("lecsúsztam -> lecsúszt", function() {deepEqual( Stem("lecsúsztam"), "lecsúszt");});
test("lecsúsztunk -> lecsúszt", function() {deepEqual( Stem("lecsúsztunk"), "lecsúszt");});
test("lecsúszott -> lecsúszot", function() {deepEqual( Stem("lecsúszott"), "lecsúszot");});
test("lecsúszottság -> lecsúszottság", function() {deepEqual( Stem("lecsúszottság"), "lecsúszottság");});
test("lecsúszottságot -> lecsúszottság", function() {deepEqual( Stem("lecsúszottságot"), "lecsúszottság");});
test("lecsüngött -> lecsüngöt", function() {deepEqual( Stem("lecsüngött"), "lecsüngöt");});
test("lecövekelni -> lecövekeln", function() {deepEqual( Stem("lecövekelni"), "lecövekeln");});
test("lediktálta -> lediktált", function() {deepEqual( Stem("lediktálta"), "lediktált");});
test("ledobhassam -> ledobhass", function() {deepEqual( Stem("ledobhassam"), "ledobhass");});
test("ledobott -> ledobot", function() {deepEqual( Stem("ledobott"), "ledobot");});
test("ledobta -> ledobt", function() {deepEqual( Stem("ledobta"), "ledobt");});
test("ledob -> ledob", function() {deepEqual( Stem("ledob"), "ledob");});
test("ledoblak -> ledobl", function() {deepEqual( Stem("ledoblak"), "ledobl");});
test("ledobtuk -> ledobt", function() {deepEqual( Stem("ledobtuk"), "ledobt");});
test("ledobták -> ledobta", function() {deepEqual( Stem("ledobták"), "ledobta");});
test("ledolgozta -> ledolgozt", function() {deepEqual( Stem("ledolgozta"), "ledolgozt");});
test("ledolgozzák -> ledolgozza", function() {deepEqual( Stem("ledolgozzák"), "ledolgozza");});
test("ledőltem -> ledőlt", function() {deepEqual( Stem("ledőltem"), "ledőlt");});
test("ledöbbenés -> ledöbbenés", function() {deepEqual( Stem("ledöbbenés"), "ledöbbenés");});
test("ledöfték -> ledöfte", function() {deepEqual( Stem("ledöfték"), "ledöfte");});
test("ledöfött -> ledöföt", function() {deepEqual( Stem("ledöfött"), "ledöföt");});
test("ledönt -> ledön", function() {deepEqual( Stem("ledönt"), "ledön");});
test("ledörzsölte -> ledörzsölt", function() {deepEqual( Stem("ledörzsölte"), "ledörzsölt");});
test("leegyszerűsített -> leegyszerűsítet", function() {deepEqual( Stem("leegyszerűsített"), "leegyszerűsítet");});
test("leegyszerűsíthetik -> leegyszerűsíthet", function() {deepEqual( Stem("leegyszerűsíthetik"), "leegyszerűsíthet");});
test("leegyszerűsíthető -> leegyszerűsíthető", function() {deepEqual( Stem("leegyszerűsíthető"), "leegyszerűsíthető");});
test("leegyszerűsíti -> leegyszerűsít", function() {deepEqual( Stem("leegyszerűsíti"), "leegyszerűsít");});
test("leegyszerűsítve -> leegyszerűsítv", function() {deepEqual( Stem("leegyszerűsítve"), "leegyszerűsítv");});
test("leejteni -> leejten", function() {deepEqual( Stem("leejteni"), "leejten");});
test("leejtette -> leejtett", function() {deepEqual( Stem("leejtette"), "leejtett");});
test("leellenőrizték -> leellenőrizte", function() {deepEqual( Stem("leellenőrizték"), "leellenőrizte");});
test("leellenőriztük -> leellenőrizt", function() {deepEqual( Stem("leellenőriztük"), "leellenőrizt");});
test("leemelte -> leemelt", function() {deepEqual( Stem("leemelte"), "leemelt");});
test("leemeltek -> leemelt", function() {deepEqual( Stem("leemeltek"), "leemelt");});
test("leendő -> leendő", function() {deepEqual( Stem("leendő"), "leendő");});
test("leengedte -> leengedt", function() {deepEqual( Stem("leengedte"), "leengedt");});
test("leengedték -> leengedte", function() {deepEqual( Stem("leengedték"), "leengedte");});
test("leengedtük -> leengedt", function() {deepEqual( Stem("leengedtük"), "leengedt");});
test("leereszkedett -> leereszkedet", function() {deepEqual( Stem("leereszkedett"), "leereszkedet");});
test("leereszkedtünk -> leereszkedt", function() {deepEqual( Stem("leereszkedtünk"), "leereszkedt");});
test("leereszkedő -> leereszkedő", function() {deepEqual( Stem("leereszkedő"), "leereszkedő");});
test("leereszkedők -> leereszkedő", function() {deepEqual( Stem("leereszkedők"), "leereszkedő");});
test("leereszkedőn -> leereszkedő", function() {deepEqual( Stem("leereszkedőn"), "leereszkedő");});
test("leeresztett -> leeresztet", function() {deepEqual( Stem("leeresztett"), "leeresztet");});
test("leeresztette -> leeresztett", function() {deepEqual( Stem("leeresztette"), "leeresztett");});
test("leeresztettem -> leeresztett", function() {deepEqual( Stem("leeresztettem"), "leeresztett");});
test("leesett -> leeset", function() {deepEqual( Stem("leesett"), "leeset");});
test("leesnek -> lees", function() {deepEqual( Stem("leesnek"), "lees");});
test("leestek -> leest", function() {deepEqual( Stem("leestek"), "leest");});
test("leestem -> leest", function() {deepEqual( Stem("leestem"), "leest");});
test("leesést -> leesés", function() {deepEqual( Stem("leesést"), "leesés");});
test("leeséséről -> leesés", function() {deepEqual( Stem("leeséséről"), "leesés");});
test("lefagyasztották -> lefagyasztotta", function() {deepEqual( Stem("lefagyasztották"), "lefagyasztotta");});
test("lefagy -> lefagy", function() {deepEqual( Stem("lefagy"), "lefagy");});
test("lefagytak -> lefagyt", function() {deepEqual( Stem("lefagytak"), "lefagyt");});
test("lefaraghatnak -> lefaraghat", function() {deepEqual( Stem("lefaraghatnak"), "lefaraghat");});
test("lefaragása -> lefaragás", function() {deepEqual( Stem("lefaragása"), "lefaragás");});
test("lefasisztázzák -> lefasisztázza", function() {deepEqual( Stem("lefasisztázzák"), "lefasisztázza");});
test("lefedett -> lefedet", function() {deepEqual( Stem("lefedett"), "lefedet");});
test("lefedettséget -> lefedettség", function() {deepEqual( Stem("lefedettséget"), "lefedettség");});
test("lefedettségén -> lefedettség", function() {deepEqual( Stem("lefedettségén"), "lefedettség");});
test("lefedettségével -> lefedettség", function() {deepEqual( Stem("lefedettségével"), "lefedettség");});
test("lefedi -> lefed", function() {deepEqual( Stem("lefedi"), "lefed");});
test("lefedjünk -> lefedj", function() {deepEqual( Stem("lefedjünk"), "lefedj");});
test("lefedni -> lefedn", function() {deepEqual( Stem("lefedni"), "lefedn");});
test("lefedte -> lefedt", function() {deepEqual( Stem("lefedte"), "lefedt");});
test("lefedő -> lefedő", function() {deepEqual( Stem("lefedő"), "lefedő");});
test("lefejezett -> lefejezet", function() {deepEqual( Stem("lefejezett"), "lefejezet");});
test("lefejezték -> lefejezte", function() {deepEqual( Stem("lefejezték"), "lefejezte");});
test("lefejezé -> lefejez", function() {deepEqual( Stem("lefejezé"), "lefejez");});
test("lefejeztetni -> lefejeztetn", function() {deepEqual( Stem("lefejeztetni"), "lefejeztetn");});
test("lefejteni -> lefejten", function() {deepEqual( Stem("lefejteni"), "lefejten");});
test("lefektetett -> lefektetet", function() {deepEqual( Stem("lefektetett"), "lefektetet");});
test("lefektette -> lefektett", function() {deepEqual( Stem("lefektette"), "lefektett");});
test("lefektettük -> lefektett", function() {deepEqual( Stem("lefektettük"), "lefektett");});
test("lefekvés -> lefekvés", function() {deepEqual( Stem("lefekvés"), "lefekvés");});
test("lefekvéshez -> lefekvés", function() {deepEqual( Stem("lefekvéshez"), "lefekvés");});
test("lefekvésig -> lefekvés", function() {deepEqual( Stem("lefekvésig"), "lefekvés");});
test("lefekvő -> lefekvő", function() {deepEqual( Stem("lefekvő"), "lefekvő");});
test("lefekszek -> lefeksz", function() {deepEqual( Stem("lefekszek"), "lefeksz");});
test("lefekszel -> lefekszel", function() {deepEqual( Stem("lefekszel"), "lefekszel");});
test("lefekszem -> lefeksz", function() {deepEqual( Stem("lefekszem"), "lefeksz");});
test("lefekszenek -> lefeksz", function() {deepEqual( Stem("lefekszenek"), "lefeksz");});
test("lefekszik -> lefeksz", function() {deepEqual( Stem("lefekszik"), "lefeksz");});
test("lefeküdjek -> lefeküdj", function() {deepEqual( Stem("lefeküdjek"), "lefeküdj");});
test("lefeküdjék -> lefeküdje", function() {deepEqual( Stem("lefeküdjék"), "lefeküdje");});
test("lefeküdni -> lefeküdn", function() {deepEqual( Stem("lefeküdni"), "lefeküdn");});
test("lefeküdnie -> lefeküdn", function() {deepEqual( Stem("lefeküdnie"), "lefeküdn");});
test("lefeküdnünk -> lefeküdn", function() {deepEqual( Stem("lefeküdnünk"), "lefeküdn");});
test("lefeküdt -> lefekü", function() {deepEqual( Stem("lefeküdt"), "lefekü");});
test("lefeküdtem -> lefeküdt", function() {deepEqual( Stem("lefeküdtem"), "lefeküdt");});
test("lefeküdtünk -> lefeküdt", function() {deepEqual( Stem("lefeküdtünk"), "lefeküdt");});
test("lefelelt -> lefelel", function() {deepEqual( Stem("lefelelt"), "lefelel");});
test("lefele -> lefel", function() {deepEqual( Stem("lefele"), "lefel");});
test("lefelé -> lefel", function() {deepEqual( Stem("lefelé"), "lefel");});
test("lefilmezett -> lefilmezet", function() {deepEqual( Stem("lefilmezett"), "lefilmezet");});
test("lefizessek -> lefizess", function() {deepEqual( Stem("lefizessek"), "lefizess");});
test("lefizetném -> lefizetne", function() {deepEqual( Stem("lefizetném"), "lefizetne");});
test("lefogja -> lefog", function() {deepEqual( Stem("lefogja"), "lefog");});
test("lefoglaljunk -> lefoglalj", function() {deepEqual( Stem("lefoglaljunk"), "lefoglalj");});
test("lefoglalják -> lefoglalja", function() {deepEqual( Stem("lefoglalják"), "lefoglalja");});
test("lefoglalták -> lefoglalta", function() {deepEqual( Stem("lefoglalták"), "lefoglalta");});
test("lefoglalta -> lefoglalt", function() {deepEqual( Stem("lefoglalta"), "lefoglalt");});
test("lefoglaltuk -> lefoglalt", function() {deepEqual( Stem("lefoglaltuk"), "lefoglalt");});
test("lefoglalt -> lefoglal", function() {deepEqual( Stem("lefoglalt"), "lefoglal");});
test("lefoglaltatni -> lefoglaltatn", function() {deepEqual( Stem("lefoglaltatni"), "lefoglaltatn");});
test("lefoglalása -> lefoglalás", function() {deepEqual( Stem("lefoglalása"), "lefoglalás");});
test("lefogták -> lefogta", function() {deepEqual( Stem("lefogták"), "lefogta");});
test("lefogy -> lefogy", function() {deepEqual( Stem("lefogy"), "lefogy");});
test("lefolyatható -> lefolyatható", function() {deepEqual( Stem("lefolyatható"), "lefolyatható");});
test("lefolyik -> lefoly", function() {deepEqual( Stem("lefolyik"), "lefoly");});
test("lefolyt -> lefoly", function() {deepEqual( Stem("lefolyt"), "lefoly");});
test("lefolytatja -> lefolytat", function() {deepEqual( Stem("lefolytatja"), "lefolytat");});
test("lefolytatni -> lefolytatn", function() {deepEqual( Stem("lefolytatni"), "lefolytatn");});
test("lefolytatniuk -> lefolytatn", function() {deepEqual( Stem("lefolytatniuk"), "lefolytatn");});
test("lefolytatott -> lefolytatot", function() {deepEqual( Stem("lefolytatott"), "lefolytatot");});
test("lefolytatása -> lefolytatás", function() {deepEqual( Stem("lefolytatása"), "lefolytatás");});
test("lefolytatásának -> lefolytatás", function() {deepEqual( Stem("lefolytatásának"), "lefolytatás");});
test("lefolytatására -> lefolytatás", function() {deepEqual( Stem("lefolytatására"), "lefolytatás");});
test("lefolytatását -> lefolytatás", function() {deepEqual( Stem("lefolytatását"), "lefolytatás");});
test("lefolytatásától -> lefolytatás", function() {deepEqual( Stem("lefolytatásától"), "lefolytatás");});
test("lefolyását -> lefolyás", function() {deepEqual( Stem("lefolyását"), "lefolyás");});
test("lefolyót -> lefolyó", function() {deepEqual( Stem("lefolyót"), "lefolyó");});
test("lefordulok -> lefordul", function() {deepEqual( Stem("lefordulok"), "lefordul");});
test("lefordult -> lefordul", function() {deepEqual( Stem("lefordult"), "lefordul");});
test("lefordítani -> lefordítan", function() {deepEqual( Stem("lefordítani"), "lefordítan");});
test("lefordítják -> lefordítja", function() {deepEqual( Stem("lefordítják"), "lefordítja");});
test("lefordítsa -> lefordíts", function() {deepEqual( Stem("lefordítsa"), "lefordíts");});
test("lefordíthatatlanok -> lefordíthatatlan", function() {deepEqual( Stem("lefordíthatatlanok"), "lefordíthatatlan");});
test("lefordított -> lefordítot", function() {deepEqual( Stem("lefordított"), "lefordítot");});
test("lefordítása -> lefordítás", function() {deepEqual( Stem("lefordítása"), "lefordítás");});
test("leforgása -> leforgás", function() {deepEqual( Stem("leforgása"), "leforgás");});
test("lefotografáltatta -> lefotografáltatt", function() {deepEqual( Stem("lefotografáltatta"), "lefotografáltatt");});
test("lefröcskölte -> lefröcskölt", function() {deepEqual( Stem("lefröcskölte"), "lefröcskölt");});
test("lefulladt -> lefull", function() {deepEqual( Stem("lefulladt"), "lefull");});
test("lefutottam -> lefutott", function() {deepEqual( Stem("lefutottam"), "lefutott");});
test("lefuttat -> lefutt", function() {deepEqual( Stem("lefuttat"), "lefutt");});
test("lefuttathatjuk -> lefuttathat", function() {deepEqual( Stem("lefuttathatjuk"), "lefuttathat");});
test("lefuttatását -> lefuttatás", function() {deepEqual( Stem("lefuttatását"), "lefuttatás");});
test("lefáradtan -> lefáradt", function() {deepEqual( Stem("lefáradtan"), "lefáradt");});
test("lefárasztaná -> lefárasztana", function() {deepEqual( Stem("lefárasztaná"), "lefárasztana");});
test("lefárasztanak -> lefáraszt", function() {deepEqual( Stem("lefárasztanak"), "lefáraszt");});
test("lefárasztott -> lefárasztot", function() {deepEqual( Stem("lefárasztott"), "lefárasztot");});
test("lefékezett -> lefékezet", function() {deepEqual( Stem("lefékezett"), "lefékezet");});
test("lefékezze -> lefékezz", function() {deepEqual( Stem("lefékezze"), "lefékezz");});
test("lefényképezheti -> lefényképezhet", function() {deepEqual( Stem("lefényképezheti"), "lefényképezhet");});
test("lefényképez -> lefényképez", function() {deepEqual( Stem("lefényképez"), "lefényképez");});
test("lefényképeztem -> lefényképezt", function() {deepEqual( Stem("lefényképeztem"), "lefényképezt");});
test("lefényképeztük -> lefényképezt", function() {deepEqual( Stem("lefényképeztük"), "lefényképezt");});
test("lefőzni -> lefőzn", function() {deepEqual( Stem("lefőzni"), "lefőzn");});
test("lefölözni -> lefölözn", function() {deepEqual( Stem("lefölözni"), "lefölözn");});
test("lefújná -> lefújna", function() {deepEqual( Stem("lefújná"), "lefújna");});
test("lefújtuk -> lefújt", function() {deepEqual( Stem("lefújtuk"), "lefújt");});
test("lefújták -> lefújta", function() {deepEqual( Stem("lefújták"), "lefújta");});
test("lefújást -> lefújás", function() {deepEqual( Stem("lefújást"), "lefújás");});
test("lefülelte -> lefülelt", function() {deepEqual( Stem("lefülelte"), "lefülelt");});
test("lefürödni -> lefürödn", function() {deepEqual( Stem("lefürödni"), "lefürödn");});
test("lefürödtem -> lefürödt", function() {deepEqual( Stem("lefürödtem"), "lefürödt");});
test("leg -> leg", function() {deepEqual( Stem("leg"), "leg");});
test("legek -> leg", function() {deepEqual( Stem("legek"), "leg");});
test("legaktuálisabb -> legaktuálisabb", function() {deepEqual( Stem("legaktuálisabb"), "legaktuálisabb");});
test("legaktívabb -> legaktívabb", function() {deepEqual( Stem("legaktívabb"), "legaktívabb");});
test("legaktívabbak -> legaktívabb", function() {deepEqual( Stem("legaktívabbak"), "legaktívabb");});
test("legalacsonyabb -> legalacsonyabb", function() {deepEqual( Stem("legalacsonyabb"), "legalacsonyabb");});
test("legalacsonyabbak -> legalacsonyabb", function() {deepEqual( Stem("legalacsonyabbak"), "legalacsonyabb");});
test("legalacsonyabbra -> legalacsonyabb", function() {deepEqual( Stem("legalacsonyabbra"), "legalacsonyabb");});
test("legalantasabb -> legalantasabb", function() {deepEqual( Stem("legalantasabb"), "legalantasabb");});
test("legalapvetőbb -> legalapvetőbb", function() {deepEqual( Stem("legalapvetőbb"), "legalapvetőbb");});
test("legalapvetőbbeket -> legalapvetőbb", function() {deepEqual( Stem("legalapvetőbbeket"), "legalapvetőbb");});
test("legale -> legal", function() {deepEqual( Stem("legale"), "legal");});
test("legalizálja -> legalizál", function() {deepEqual( Stem("legalizálja"), "legalizál");});
test("legalizálni -> legalizáln", function() {deepEqual( Stem("legalizálni"), "legalizáln");});
test("legalizálták -> legalizálta", function() {deepEqual( Stem("legalizálták"), "legalizálta");});
test("legalján -> legal", function() {deepEqual( Stem("legalján"), "legal");});
test("legaljára -> legal", function() {deepEqual( Stem("legaljára"), "legal");});
test("legalkalmasabb -> legalkalmasabb", function() {deepEqual( Stem("legalkalmasabb"), "legalkalmasabb");});
test("legalsó -> legalsó", function() {deepEqual( Stem("legalsó"), "legalsó");});
test("legalább -> legalább", function() {deepEqual( Stem("legalább"), "legalább");});
test("legalábbis -> legalábbis", function() {deepEqual( Stem("legalábbis"), "legalábbis");});
test("legapróbb -> legapróbb", function() {deepEqual( Stem("legapróbb"), "legapróbb");});
test("legaranyosabb -> legaranyosabb", function() {deepEqual( Stem("legaranyosabb"), "legaranyosabb");});
test("legbalszerencsésebb -> legbalszerencsésebb", function() {deepEqual( Stem("legbalszerencsésebb"), "legbalszerencsésebb");});
test("legbanálisabb -> legbanálisabb", function() {deepEqual( Stem("legbanálisabb"), "legbanálisabb");});
test("legbefolyásosabb -> legbefolyásosabb", function() {deepEqual( Stem("legbefolyásosabb"), "legbefolyásosabb");});
test("legbelsejét -> legbelse", function() {deepEqual( Stem("legbelsejét"), "legbelse");});
test("legbelső -> legbelső", function() {deepEqual( Stem("legbelső"), "legbelső");});
test("legbelsőbb -> legbelsőbb", function() {deepEqual( Stem("legbelsőbb"), "legbelsőbb");});
test("legbelül -> legbel", function() {deepEqual( Stem("legbelül"), "legbel");});
test("legbensejét -> legbense", function() {deepEqual( Stem("legbensejét"), "legbense");});
test("legbenső -> legbenső", function() {deepEqual( Stem("legbenső"), "legbenső");});
test("legbiztonságosabb -> legbiztonságosabb", function() {deepEqual( Stem("legbiztonságosabb"), "legbiztonságosabb");});
test("legboldogabb -> legboldogabb", function() {deepEqual( Stem("legboldogabb"), "legboldogabb");});
test("legbonyolultabb -> legbonyolultabb", function() {deepEqual( Stem("legbonyolultabb"), "legbonyolultabb");});
test("legborzasztóbb -> legborzasztóbb", function() {deepEqual( Stem("legborzasztóbb"), "legborzasztóbb");});
test("legbutább -> legbutább", function() {deepEqual( Stem("legbutább"), "legbutább");});
test("legbágyasztóbb -> legbágyasztóbb", function() {deepEqual( Stem("legbágyasztóbb"), "legbágyasztóbb");});
test("legbékésebbnek -> legbékésebb", function() {deepEqual( Stem("legbékésebbnek"), "legbékésebb");});
test("legbőkezűbb -> legbőkezűbb", function() {deepEqual( Stem("legbőkezűbb"), "legbőkezűbb");});
test("legbővebb -> legbővebb", function() {deepEqual( Stem("legbővebb"), "legbővebb");});
test("legbüszkébb -> legbüszkébb", function() {deepEqual( Stem("legbüszkébb"), "legbüszkébb");});
test("legcsaládiasabb -> legcsaládiasabb", function() {deepEqual( Stem("legcsaládiasabb"), "legcsaládiasabb");});
test("legcsekélyebb -> legcsekélyebb", function() {deepEqual( Stem("legcsekélyebb"), "legcsekélyebb");});
test("legcsengőbb -> legcsengőbb", function() {deepEqual( Stem("legcsengőbb"), "legcsengőbb");});
test("legcsodálatosabb -> legcsodálatosabb", function() {deepEqual( Stem("legcsodálatosabb"), "legcsodálatosabb");});
test("legcsodálatosabban -> legcsodálatosab", function() {deepEqual( Stem("legcsodálatosabban"), "legcsodálatosab");});
test("legcsúnyább -> legcsúnyább", function() {deepEqual( Stem("legcsúnyább"), "legcsúnyább");});
test("legcélravezetőbb -> legcélravezetőbb", function() {deepEqual( Stem("legcélravezetőbb"), "legcélravezetőbb");});
test("legcélszerűbb -> legcélszerűbb", function() {deepEqual( Stem("legcélszerűbb"), "legcélszerűbb");});
test("legdinamikusabban -> legdinamikusab", function() {deepEqual( Stem("legdinamikusabban"), "legdinamikusab");});
test("legdivatosabb -> legdivatosabb", function() {deepEqual( Stem("legdivatosabb"), "legdivatosabb");});
test("legdrágább -> legdrágább", function() {deepEqual( Stem("legdrágább"), "legdrágább");});
test("legdrágábbak -> legdrágább", function() {deepEqual( Stem("legdrágábbak"), "legdrágább");});
test("legdurvább -> legdurvább", function() {deepEqual( Stem("legdurvább"), "legdurvább");});
test("legdöntőbb -> legdöntőbb", function() {deepEqual( Stem("legdöntőbb"), "legdöntőbb");});
test("legegyenesebb -> legegyenesebb", function() {deepEqual( Stem("legegyenesebb"), "legegyenesebb");});
test("legegyszerűbb -> legegyszerűbb", function() {deepEqual( Stem("legegyszerűbb"), "legegyszerűbb");});
test("legegyszerűbben -> legegyszerűb", function() {deepEqual( Stem("legegyszerűbben"), "legegyszerűb");});
test("legegyszerűbbé -> legegyszerűb", function() {deepEqual( Stem("legegyszerűbbé"), "legegyszerűb");});
test("legegységesebben -> legegységeseb", function() {deepEqual( Stem("legegységesebben"), "legegységeseb");});
test("legegyértelműbb -> legegyértelműbb", function() {deepEqual( Stem("legegyértelműbb"), "legegyértelműbb");});
test("legegészségesebb -> legegészségesebb", function() {deepEqual( Stem("legegészségesebb"), "legegészségesebb");});
test("legelegánsabb -> legelegánsabb", function() {deepEqual( Stem("legelegánsabb"), "legelegánsabb");});
test("legelején -> legele", function() {deepEqual( Stem("legelején"), "legele");});
test("legelemibb -> legelemibb", function() {deepEqual( Stem("legelemibb"), "legelemibb");});
test("legelesettebb -> legelesettebb", function() {deepEqual( Stem("legelesettebb"), "legelesettebb");});
test("legelesettebbeket -> legelesettebb", function() {deepEqual( Stem("legelesettebbeket"), "legelesettebb");});
test("legeljen -> legelj", function() {deepEqual( Stem("legeljen"), "legelj");});
test("legelméletibb -> legelméletibb", function() {deepEqual( Stem("legelméletibb"), "legelméletibb");});
test("legelső -> legelső", function() {deepEqual( Stem("legelső"), "legelső");});
test("legelsőként -> legelső", function() {deepEqual( Stem("legelsőként"), "legelső");});
test("legelsősorban -> legelsősor", function() {deepEqual( Stem("legelsősorban"), "legelsősor");});
test("legelterjedtebb -> legelterjedtebb", function() {deepEqual( Stem("legelterjedtebb"), "legelterjedtebb");});
test("legeltetik -> legeltet", function() {deepEqual( Stem("legeltetik"), "legeltet");});
test("legeltetési -> legeltetés", function() {deepEqual( Stem("legeltetési"), "legeltetés");});
test("legelvakultabb -> legelvakultabb", function() {deepEqual( Stem("legelvakultabb"), "legelvakultabb");});
test("legelésző -> legelésző", function() {deepEqual( Stem("legelésző"), "legelésző");});
test("legelőkelőbb -> legelőkelőbb", function() {deepEqual( Stem("legelőkelőbb"), "legelőkelőbb");});
test("legelő -> legelő", function() {deepEqual( Stem("legelő"), "legelő");});
test("legelőkre -> legelő", function() {deepEqual( Stem("legelőkre"), "legelő");});
test("legelőkét -> legelő", function() {deepEqual( Stem("legelőkét"), "legelő");});
test("legelőn -> legelő", function() {deepEqual( Stem("legelőn"), "legelő");});
test("legelől -> legelől", function() {deepEqual( Stem("legelől"), "legelől");});
test("legemlékezetesebb -> legemlékezetesebb", function() {deepEqual( Stem("legemlékezetesebb"), "legemlékezetesebb");});
test("legenda -> legend", function() {deepEqual( Stem("legenda"), "legend");});
test("legendában -> legend", function() {deepEqual( Stem("legendában"), "legend");});
test("legendája -> legendá", function() {deepEqual( Stem("legendája"), "legendá");});
test("legendájából -> legendá", function() {deepEqual( Stem("legendájából"), "legendá");});
test("legendák -> legenda", function() {deepEqual( Stem("legendák"), "legenda");});
test("legendákkal -> legenda", function() {deepEqual( Stem("legendákkal"), "legenda");});
test("legendának -> legend", function() {deepEqual( Stem("legendának"), "legend");});
test("legendát -> legend", function() {deepEqual( Stem("legendát"), "legend");});
test("legendás -> legendás", function() {deepEqual( Stem("legendás"), "legendás");});
test("legenyhébb -> legenyhébb", function() {deepEqual( Stem("legenyhébb"), "legenyhébb");});
test("legeredményesebb -> legeredményesebb", function() {deepEqual( Stem("legeredményesebb"), "legeredményesebb");});
test("legeredményesebben -> legeredményeseb", function() {deepEqual( Stem("legeredményesebben"), "legeredményeseb");});
test("legerkölcsösebb -> legerkölcsösebb", function() {deepEqual( Stem("legerkölcsösebb"), "legerkölcsösebb");});
test("legerkölcsösebbnek -> legerkölcsösebb", function() {deepEqual( Stem("legerkölcsösebbnek"), "legerkölcsösebb");});
test("legerősebb -> legerősebb", function() {deepEqual( Stem("legerősebb"), "legerősebb");});
test("legerősebben -> legerőseb", function() {deepEqual( Stem("legerősebben"), "legerőseb");});
test("legerőteljesebb -> legerőteljesebb", function() {deepEqual( Stem("legerőteljesebb"), "legerőteljesebb");});
test("leges-legérdekesebb -> leges-legérdekesebb", function() {deepEqual( Stem("leges-legérdekesebb"), "leges-legérdekesebb");});
test("legfehérebbre -> legfehérebb", function() {deepEqual( Stem("legfehérebbre"), "legfehérebb");});
test("legfejlettebb -> legfejlettebb", function() {deepEqual( Stem("legfejlettebb"), "legfejlettebb");});
test("legfeljebb -> legfeljebb", function() {deepEqual( Stem("legfeljebb"), "legfeljebb");});
test("legfelül -> legfel", function() {deepEqual( Stem("legfelül"), "legfel");});
test("legfelkészültebb -> legfelkészültebb", function() {deepEqual( Stem("legfelkészültebb"), "legfelkészültebb");});
test("legfelnőttebb -> legfelnőttebb", function() {deepEqual( Stem("legfelnőttebb"), "legfelnőttebb");});
test("legfelső -> legfelső", function() {deepEqual( Stem("legfelső"), "legfelső");});
test("legfelsőbb -> legfelsőbb", function() {deepEqual( Stem("legfelsőbb"), "legfelsőbb");});
test("legföljebb -> legföljebb", function() {deepEqual( Stem("legföljebb"), "legföljebb");});
test("legfölül -> legföl", function() {deepEqual( Stem("legfölül"), "legföl");});
test("legfiatalabb -> legfiatalabb", function() {deepEqual( Stem("legfiatalabb"), "legfiatalabb");});
test("legfiatalabbra -> legfiatalabb", function() {deepEqual( Stem("legfiatalabbra"), "legfiatalabb");});
test("legfinomabb -> legfinomabb", function() {deepEqual( Stem("legfinomabb"), "legfinomabb");});
test("legfontosabb -> legfontosabb", function() {deepEqual( Stem("legfontosabb"), "legfontosabb");});
test("legfontosabbak -> legfontosabb", function() {deepEqual( Stem("legfontosabbak"), "legfontosabb");});
test("legfontosabbakat -> legfontosabb", function() {deepEqual( Stem("legfontosabbakat"), "legfontosabb");});
test("legfontosabbjának -> legfontosabb", function() {deepEqual( Stem("legfontosabbjának"), "legfontosabb");});
test("legfontosabbnak -> legfontosabb", function() {deepEqual( Stem("legfontosabbnak"), "legfontosabb");});
test("legfontosabbról -> legfontosabb", function() {deepEqual( Stem("legfontosabbról"), "legfontosabb");});
test("legforgalmasabb -> legforgalmasabb", function() {deepEqual( Stem("legforgalmasabb"), "legforgalmasabb");});
test("legforgalmasabbat -> legforgalmasabb", function() {deepEqual( Stem("legforgalmasabbat"), "legforgalmasabb");});
test("legforróbb -> legforróbb", function() {deepEqual( Stem("legforróbb"), "legforróbb");});
test("legfrekventáltabb -> legfrekventáltabb", function() {deepEqual( Stem("legfrekventáltabb"), "legfrekventáltabb");});
test("legfrissebb -> legfrissebb", function() {deepEqual( Stem("legfrissebb"), "legfrissebb");});
test("legfurcsább -> legfurcsább", function() {deepEqual( Stem("legfurcsább"), "legfurcsább");});
test("legfurcsábbak -> legfurcsább", function() {deepEqual( Stem("legfurcsábbak"), "legfurcsább");});
test("legfárasztóbb -> legfárasztóbb", function() {deepEqual( Stem("legfárasztóbb"), "legfárasztóbb");});
test("legfárasztóbbak -> legfárasztóbb", function() {deepEqual( Stem("legfárasztóbbak"), "legfárasztóbb");});
test("legfélelmetesebb -> legfélelmetesebb", function() {deepEqual( Stem("legfélelmetesebb"), "legfélelmetesebb");});
test("legfényesebb -> legfényesebb", function() {deepEqual( Stem("legfényesebb"), "legfényesebb");});
test("legfényesebben -> legfényeseb", function() {deepEqual( Stem("legfényesebben"), "legfényeseb");});
test("legfőbb -> legfőbb", function() {deepEqual( Stem("legfőbb"), "legfőbb");});
test("legfőképp -> legfő", function() {deepEqual( Stem("legfőképp"), "legfő");});
test("legfőképpen -> legfő", function() {deepEqual( Stem("legfőképpen"), "legfő");});
test("legfürgébb -> legfürgébb", function() {deepEqual( Stem("legfürgébb"), "legfürgébb");});
test("leggazdagabb -> leggazdagabb", function() {deepEqual( Stem("leggazdagabb"), "leggazdagabb");});
test("leggazdagabbakat -> leggazdagabb", function() {deepEqual( Stem("leggazdagabbakat"), "leggazdagabb");});
test("leggyakoribb -> leggyakoribb", function() {deepEqual( Stem("leggyakoribb"), "leggyakoribb");});
test("leggyakoribbak -> leggyakoribb", function() {deepEqual( Stem("leggyakoribbak"), "leggyakoribb");});
test("leggyakrabban -> leggyakrab", function() {deepEqual( Stem("leggyakrabban"), "leggyakrab");});
test("leggyengébbek -> leggyengébb", function() {deepEqual( Stem("leggyengébbek"), "leggyengébb");});
test("leggyorsabb -> leggyorsabb", function() {deepEqual( Stem("leggyorsabb"), "leggyorsabb");});
test("leggyorsabba -> leggyorsab", function() {deepEqual( Stem("leggyorsabba"), "leggyorsab");});
test("leggyorsabban -> leggyorsab", function() {deepEqual( Stem("leggyorsabban"), "leggyorsab");});
test("leggyorsabbra -> leggyorsabb", function() {deepEqual( Stem("leggyorsabbra"), "leggyorsabb");});
test("leggyávább -> leggyávább", function() {deepEqual( Stem("leggyávább"), "leggyávább");});
test("leggördülékenyebbé -> leggördülékenyeb", function() {deepEqual( Stem("leggördülékenyebbé"), "leggördülékenyeb");});
test("leghalványabb -> leghalványabb", function() {deepEqual( Stem("leghalványabb"), "leghalványabb");});
test("leghalálosabb -> leghalálosabb", function() {deepEqual( Stem("leghalálosabb"), "leghalálosabb");});
test("leghamarabb -> leghamarabb", function() {deepEqual( Stem("leghamarabb"), "leghamarabb");});
test("leghangsúlyosabb -> leghangsúlyosabb", function() {deepEqual( Stem("leghangsúlyosabb"), "leghangsúlyosabb");});
test("legharciasabbnak -> legharciasabb", function() {deepEqual( Stem("legharciasabbnak"), "legharciasabb");});
test("leghatalmasabb -> leghatalmasabb", function() {deepEqual( Stem("leghatalmasabb"), "leghatalmasabb");});
test("leghatározottabban -> leghatározottab", function() {deepEqual( Stem("leghatározottabban"), "leghatározottab");});
test("leghatékonyabb -> leghatékonyabb", function() {deepEqual( Stem("leghatékonyabb"), "leghatékonyabb");});
test("leghatékonyabbnak -> leghatékonyabb", function() {deepEqual( Stem("leghatékonyabbnak"), "leghatékonyabb");});
test("leghatékonyabbá -> leghatékonyab", function() {deepEqual( Stem("leghatékonyabbá"), "leghatékonyab");});
test("leghelyesebb -> leghelyesebb", function() {deepEqual( Stem("leghelyesebb"), "leghelyesebb");});
test("leghihetőbben -> leghihetőb", function() {deepEqual( Stem("leghihetőbben"), "leghihetőb");});
test("leghosszabb -> leghosszabb", function() {deepEqual( Stem("leghosszabb"), "leghosszabb");});
test("leghíresebb -> leghíresebb", function() {deepEqual( Stem("leghíresebb"), "leghíresebb");});
test("leghőbb -> leghőbb", function() {deepEqual( Stem("leghőbb"), "leghőbb");});
test("leghősiesebb -> leghősiesebb", function() {deepEqual( Stem("leghősiesebb"), "leghősiesebb");});
test("leghülyébb -> leghülyébb", function() {deepEqual( Stem("leghülyébb"), "leghülyébb");});
test("legidősebb -> legidősebb", function() {deepEqual( Stem("legidősebb"), "legidősebb");});
test("legidőszerűbb -> legidőszerűbb", function() {deepEqual( Stem("legidőszerűbb"), "legidőszerűbb");});
test("leginformatívabbnak -> leginformatívabb", function() {deepEqual( Stem("leginformatívabbnak"), "leginformatívabb");});
test("leginkább -> leginkább", function() {deepEqual( Stem("leginkább"), "leginkább");});
test("legintelligensebb -> legintelligensebb", function() {deepEqual( Stem("legintelligensebb"), "legintelligensebb");});
test("legintenzívebb -> legintenzívebb", function() {deepEqual( Stem("legintenzívebb"), "legintenzívebb");});
test("legintimebb -> legintimebb", function() {deepEqual( Stem("legintimebb"), "legintimebb");});
test("legismertebb -> legismertebb", function() {deepEqual( Stem("legismertebb"), "legismertebb");});
test("legismertebbek -> legismertebb", function() {deepEqual( Stem("legismertebbek"), "legismertebb");});
test("legitimáció -> legitimáció", function() {deepEqual( Stem("legitimáció"), "legitimáció");});
test("legitimálja -> legitimál", function() {deepEqual( Stem("legitimálja"), "legitimál");});
test("legitimálta -> legitimált", function() {deepEqual( Stem("legitimálta"), "legitimált");});
test("legizgalmasabb -> legizgalmasabb", function() {deepEqual( Stem("legizgalmasabb"), "legizgalmasabb");});
test("legjavát -> legjav", function() {deepEqual( Stem("legjavát"), "legjav");});
test("legjelentéktelenebb -> legjelentéktelenebb", function() {deepEqual( Stem("legjelentéktelenebb"), "legjelentéktelenebb");});
test("legjelentéktelenebbekké -> legjelentéktelenebb", function() {deepEqual( Stem("legjelentéktelenebbekké"), "legjelentéktelenebb");});
test("legjelentősebb -> legjelentősebb", function() {deepEqual( Stem("legjelentősebb"), "legjelentősebb");});
test("legjellegzetesebb -> legjellegzetesebb", function() {deepEqual( Stem("legjellegzetesebb"), "legjellegzetesebb");});
test("legjellemzőbb -> legjellemzőbb", function() {deepEqual( Stem("legjellemzőbb"), "legjellemzőbb");});
test("legjobb -> legjobb", function() {deepEqual( Stem("legjobb"), "legjobb");});
test("legjobbaira -> legjobb", function() {deepEqual( Stem("legjobbaira"), "legjobb");});
test("legjobbak -> legjobb", function() {deepEqual( Stem("legjobbak"), "legjobb");});
test("legjobbakat -> legjobb", function() {deepEqual( Stem("legjobbakat"), "legjobb");});
test("legjobban -> legjob", function() {deepEqual( Stem("legjobban"), "legjob");});
test("legjobbat -> legjobb", function() {deepEqual( Stem("legjobbat"), "legjobb");});
test("legjobbja -> legjobb", function() {deepEqual( Stem("legjobbja"), "legjobb");});
test("legjobbját -> legjobb", function() {deepEqual( Stem("legjobbját"), "legjobb");});
test("legjobbkor -> legjobb", function() {deepEqual( Stem("legjobbkor"), "legjobb");});
test("legjobbnak -> legjobb", function() {deepEqual( Stem("legjobbnak"), "legjobb");});
test("legjobbra -> legjobb", function() {deepEqual( Stem("legjobbra"), "legjobb");});
test("legkalandorabb -> legkalandorabb", function() {deepEqual( Stem("legkalandorabb"), "legkalandorabb");});
test("legkaotikusabb -> legkaotikusabb", function() {deepEqual( Stem("legkaotikusabb"), "legkaotikusabb");});
test("legkedveltebb -> legkedveltebb", function() {deepEqual( Stem("legkedveltebb"), "legkedveltebb");});
test("legkedvesebb -> legkedvesebb", function() {deepEqual( Stem("legkedvesebb"), "legkedvesebb");});
test("legkedvesebbet -> legkedvesebb", function() {deepEqual( Stem("legkedvesebbet"), "legkedvesebb");});
test("legkedvezőbb -> legkedvezőbb", function() {deepEqual( Stem("legkedvezőbb"), "legkedvezőbb");});
test("legkellemesebb -> legkellemesebb", function() {deepEqual( Stem("legkellemesebb"), "legkellemesebb");});
test("legkeményebb -> legkeményebb", function() {deepEqual( Stem("legkeményebb"), "legkeményebb");});
test("legkeresettebb -> legkeresettebb", function() {deepEqual( Stem("legkeresettebb"), "legkeresettebb");});
test("legkeresettebbnek -> legkeresettebb", function() {deepEqual( Stem("legkeresettebbnek"), "legkeresettebb");});
test("legkeskenyebb -> legkeskenyebb", function() {deepEqual( Stem("legkeskenyebb"), "legkeskenyebb");});
test("legkevesebb -> legkevesebb", function() {deepEqual( Stem("legkevesebb"), "legkevesebb");});
test("legkevesebben -> legkeveseb", function() {deepEqual( Stem("legkevesebben"), "legkeveseb");});
test("legkevésbé -> legkevésb", function() {deepEqual( Stem("legkevésbé"), "legkevésb");});
test("legkiegyensúlyozottabb -> legkiegyensúlyozottabb", function() {deepEqual( Stem("legkiegyensúlyozottabb"), "legkiegyensúlyozottabb");});
test("legkifejezéstelenebb -> legkifejezéstelenebb", function() {deepEqual( Stem("legkifejezéstelenebb"), "legkifejezéstelenebb");});
test("legkifejezőbb -> legkifejezőbb", function() {deepEqual( Stem("legkifejezőbb"), "legkifejezőbb");});
test("legkifinomultabb -> legkifinomultabb", function() {deepEqual( Stem("legkifinomultabb"), "legkifinomultabb");});
test("legkiforrottabb -> legkiforrottabb", function() {deepEqual( Stem("legkiforrottabb"), "legkiforrottabb");});
test("legkimagaslóbb -> legkimagaslóbb", function() {deepEqual( Stem("legkimagaslóbb"), "legkimagaslóbb");});
test("legkisebb -> legkisebb", function() {deepEqual( Stem("legkisebb"), "legkisebb");});
test("legkisebbek -> legkisebb", function() {deepEqual( Stem("legkisebbek"), "legkisebb");});
test("legkisebbekről -> legkisebb", function() {deepEqual( Stem("legkisebbekről"), "legkisebb");});
test("legkisgazdább -> legkisgazdább", function() {deepEqual( Stem("legkisgazdább"), "legkisgazdább");});
test("legkiszolgáltatottabb -> legkiszolgáltatottabb", function() {deepEqual( Stem("legkiszolgáltatottabb"), "legkiszolgáltatottabb");});
test("legkivált -> legkivál", function() {deepEqual( Stem("legkivált"), "legkivál");});
test("legkiválóbb -> legkiválóbb", function() {deepEqual( Stem("legkiválóbb"), "legkiválóbb");});
test("legkockázatosabb -> legkockázatosabb", function() {deepEqual( Stem("legkockázatosabb"), "legkockázatosabb");});
test("legkomolyabb -> legkomolyabb", function() {deepEqual( Stem("legkomolyabb"), "legkomolyabb");});
test("legkomolyabban -> legkomolyab", function() {deepEqual( Stem("legkomolyabban"), "legkomolyab");});
test("legkomplexebb -> legkomplexebb", function() {deepEqual( Stem("legkomplexebb"), "legkomplexebb");});
test("legkorrektebb -> legkorrektebb", function() {deepEqual( Stem("legkorrektebb"), "legkorrektebb");});
test("legkorruptabb -> legkorruptabb", function() {deepEqual( Stem("legkorruptabb"), "legkorruptabb");});
test("legkorszerűbb -> legkorszerűbb", function() {deepEqual( Stem("legkorszerűbb"), "legkorszerűbb");});
test("legkorábban -> legkoráb", function() {deepEqual( Stem("legkorábban"), "legkoráb");});
test("legkorábbi -> legkorább", function() {deepEqual( Stem("legkorábbi"), "legkorább");});
test("legkritikusabb -> legkritikusabb", function() {deepEqual( Stem("legkritikusabb"), "legkritikusabb");});
test("legkritikusabbak -> legkritikusabb", function() {deepEqual( Stem("legkritikusabbak"), "legkritikusabb");});
test("legkényelmesebb -> legkényelmesebb", function() {deepEqual( Stem("legkényelmesebb"), "legkényelmesebb");});
test("legkényelmesebben -> legkényelmeseb", function() {deepEqual( Stem("legkényelmesebben"), "legkényelmeseb");});
test("legkényesebb -> legkényesebb", function() {deepEqual( Stem("legkényesebb"), "legkényesebb");});
test("legképzettebbek -> legképzettebb", function() {deepEqual( Stem("legképzettebbek"), "legképzettebb");});
test("legkésőbb -> legkésőbb", function() {deepEqual( Stem("legkésőbb"), "legkésőbb");});
test("legkézenfekvőbb -> legkézenfekvőbb", function() {deepEqual( Stem("legkézenfekvőbb"), "legkézenfekvőbb");});
test("legkínosabb -> legkínosabb", function() {deepEqual( Stem("legkínosabb"), "legkínosabb");});
test("legkönnyebb -> legkönnyebb", function() {deepEqual( Stem("legkönnyebb"), "legkönnyebb");});
test("legkönnyebben -> legkönnyeb", function() {deepEqual( Stem("legkönnyebben"), "legkönnyeb");});
test("legkönnyelműbb -> legkönnyelműbb", function() {deepEqual( Stem("legkönnyelműbb"), "legkönnyelműbb");});
test("legkörmönfontabb -> legkörmönfontabb", function() {deepEqual( Stem("legkörmönfontabb"), "legkörmönfontabb");});
test("legkörültekintőbb -> legkörültekintőbb", function() {deepEqual( Stem("legkörültekintőbb"), "legkörültekintőbb");});
test("legközelebb -> legközelebb", function() {deepEqual( Stem("legközelebb"), "legközelebb");});
test("legközelebbre -> legközelebb", function() {deepEqual( Stem("legközelebbre"), "legközelebb");});
test("legközelebbi -> legközelebb", function() {deepEqual( Stem("legközelebbi"), "legközelebb");});
test("legközhelyszerűbb -> legközhelyszerűbb", function() {deepEqual( Stem("legközhelyszerűbb"), "legközhelyszerűbb");});
test("legközkedveltebb -> legközkedveltebb", function() {deepEqual( Stem("legközkedveltebb"), "legközkedveltebb");});
test("legközvetlenebbül -> legközvetlenebb", function() {deepEqual( Stem("legközvetlenebbül"), "legközvetlenebb");});
test("legközönségesebb -> legközönségesebb", function() {deepEqual( Stem("legközönségesebb"), "legközönségesebb");});
test("legkülönbnek -> legkülönb", function() {deepEqual( Stem("legkülönbnek"), "legkülönb");});
test("legkülönbözőbb -> legkülönbözőbb", function() {deepEqual( Stem("legkülönbözőbb"), "legkülönbözőbb");});
test("legkülönfélébb -> legkülönfélébb", function() {deepEqual( Stem("legkülönfélébb"), "legkülönfélébb");});
test("legkülönlegesebb -> legkülönlegesebb", function() {deepEqual( Stem("legkülönlegesebb"), "legkülönlegesebb");});
test("legkülönösebb -> legkülönösebb", function() {deepEqual( Stem("legkülönösebb"), "legkülönösebb");});
test("legkülönösebbeket -> legkülönösebb", function() {deepEqual( Stem("legkülönösebbeket"), "legkülönösebb");});
test("leglassabban -> leglassab", function() {deepEqual( Stem("leglassabban"), "leglassab");});
test("leglassúbban -> leglassúb", function() {deepEqual( Stem("leglassúbban"), "leglassúb");});
test("leglepusztultabb -> leglepusztultabb", function() {deepEqual( Stem("leglepusztultabb"), "leglepusztultabb");});
test("leglátványosabban -> leglátványosab", function() {deepEqual( Stem("leglátványosabban"), "leglátványosab");});
test("leglényegesebb -> leglényegesebb", function() {deepEqual( Stem("leglényegesebb"), "leglényegesebb");});
test("leglényegesebbnek -> leglényegesebb", function() {deepEqual( Stem("leglényegesebbnek"), "leglényegesebb");});
test("legmagasabb -> legmagasabb", function() {deepEqual( Stem("legmagasabb"), "legmagasabb");});
test("legmagasabban -> legmagasab", function() {deepEqual( Stem("legmagasabban"), "legmagasab");});
test("legmaradandóbb -> legmaradandóbb", function() {deepEqual( Stem("legmaradandóbb"), "legmaradandóbb");});
test("legmarkánsabb -> legmarkánsabb", function() {deepEqual( Stem("legmarkánsabb"), "legmarkánsabb");});
test("legmegbízhatóbb -> legmegbízhatóbb", function() {deepEqual( Stem("legmegbízhatóbb"), "legmegbízhatóbb");});
test("legmegdöbbentőbb -> legmegdöbbentőbb", function() {deepEqual( Stem("legmegdöbbentőbb"), "legmegdöbbentőbb");});
test("legmegfelelőbb -> legmegfelelőbb", function() {deepEqual( Stem("legmegfelelőbb"), "legmegfelelőbb");});
test("legmegfelelőbbet -> legmegfelelőbb", function() {deepEqual( Stem("legmegfelelőbbet"), "legmegfelelőbb");});
test("legmeghatározóbb -> legmeghatározóbb", function() {deepEqual( Stem("legmeghatározóbb"), "legmeghatározóbb");});
test("legmeglepőbb -> legmeglepőbb", function() {deepEqual( Stem("legmeglepőbb"), "legmeglepőbb");});
test("legmegértőbb -> legmegértőbb", function() {deepEqual( Stem("legmegértőbb"), "legmegértőbb");});
test("legmenősebb -> legmenősebb", function() {deepEqual( Stem("legmenősebb"), "legmenősebb");});
test("legmeredekebb -> legmeredekebb", function() {deepEqual( Stem("legmeredekebb"), "legmeredekebb");});
test("legmesszebb -> legmesszebb", function() {deepEqual( Stem("legmesszebb"), "legmesszebb");});
test("legmodernebb -> legmodernebb", function() {deepEqual( Stem("legmodernebb"), "legmodernebb");});
test("legmozgalmasabb -> legmozgalmasabb", function() {deepEqual( Stem("legmozgalmasabb"), "legmozgalmasabb");});
test("legméltóbbnak -> legméltóbb", function() {deepEqual( Stem("legméltóbbnak"), "legméltóbb");});
test("legmélyebb -> legmélyebb", function() {deepEqual( Stem("legmélyebb"), "legmélyebb");});
test("legmélyebben -> legmélyeb", function() {deepEqual( Stem("legmélyebben"), "legmélyeb");});
test("legmélyébe -> legmély", function() {deepEqual( Stem("legmélyébe"), "legmély");});
test("legmélyén -> legmély", function() {deepEqual( Stem("legmélyén"), "legmély");});
test("legnagyobb -> legnagyobb", function() {deepEqual( Stem("legnagyobb"), "legnagyobb");});
test("legnagyobbak -> legnagyobb", function() {deepEqual( Stem("legnagyobbak"), "legnagyobb");});
test("legnagyobbal -> legnagyob", function() {deepEqual( Stem("legnagyobbal"), "legnagyob");});
test("legnagyobbika -> legnagyobb", function() {deepEqual( Stem("legnagyobbika"), "legnagyobb");});
test("legnagyobbnak -> legnagyobb", function() {deepEqual( Stem("legnagyobbnak"), "legnagyobb");});
test("legnagyobbrészt -> legnagyobbrész", function() {deepEqual( Stem("legnagyobbrészt"), "legnagyobbrész");});
test("legnagyobbszerű -> legnagyobbszerű", function() {deepEqual( Stem("legnagyobbszerű"), "legnagyobbszerű");});
test("legnagyvonalúbb -> legnagyvonalúbb", function() {deepEqual( Stem("legnagyvonalúbb"), "legnagyvonalúbb");});
test("legnedvesebb -> legnedvesebb", function() {deepEqual( Stem("legnedvesebb"), "legnedvesebb");});
test("legnehezebb -> legnehezebb", function() {deepEqual( Stem("legnehezebb"), "legnehezebb");});
test("legnehezebbek -> legnehezebb", function() {deepEqual( Stem("legnehezebbek"), "legnehezebb");});
test("legnemesbekért -> legnemesb", function() {deepEqual( Stem("legnemesbekért"), "legnemesb");});
test("legnevesebb -> legnevesebb", function() {deepEqual( Stem("legnevesebb"), "legnevesebb");});
test("legnevezetesebb -> legnevezetesebb", function() {deepEqual( Stem("legnevezetesebb"), "legnevezetesebb");});
test("legnyilvánvalóbb -> legnyilvánvalóbb", function() {deepEqual( Stem("legnyilvánvalóbb"), "legnyilvánvalóbb");});
test("legnyomorultabb -> legnyomorultabb", function() {deepEqual( Stem("legnyomorultabb"), "legnyomorultabb");});
test("legnélkülözhetetlenebb -> legnélkülözhetetlenebb", function() {deepEqual( Stem("legnélkülözhetetlenebb"), "legnélkülözhetetlenebb");});
test("legnépesebb -> legnépesebb", function() {deepEqual( Stem("legnépesebb"), "legnépesebb");});
test("legnépszerűbb -> legnépszerűbb", function() {deepEqual( Stem("legnépszerűbb"), "legnépszerűbb");});
test("legnézettebb -> legnézettebb", function() {deepEqual( Stem("legnézettebb"), "legnézettebb");});
test("legocsmányabb -> legocsmányabb", function() {deepEqual( Stem("legocsmányabb"), "legocsmányabb");});
test("legokosabb -> legokosabb", function() {deepEqual( Stem("legokosabb"), "legokosabb");});
test("legokosabban -> legokosab", function() {deepEqual( Stem("legokosabban"), "legokosab");});
test("legolcsóbb -> legolcsóbb", function() {deepEqual( Stem("legolcsóbb"), "legolcsóbb");});
test("legombolt -> legombol", function() {deepEqual( Stem("legombolt"), "legombol");});
test("legoptimistább -> legoptimistább", function() {deepEqual( Stem("legoptimistább"), "legoptimistább");});
test("legoptimistábbak -> legoptimistább", function() {deepEqual( Stem("legoptimistábbak"), "legoptimistább");});
test("legoptimálisabb -> legoptimálisabb", function() {deepEqual( Stem("legoptimálisabb"), "legoptimálisabb");});
test("legostobább -> legostobább", function() {deepEqual( Stem("legostobább"), "legostobább");});
test("legpatinásabb -> legpatinásabb", function() {deepEqual( Stem("legpatinásabb"), "legpatinásabb");});
test("legpimaszabb -> legpimaszabb", function() {deepEqual( Stem("legpimaszabb"), "legpimaszabb");});
test("legpiszkosabb -> legpiszkosabb", function() {deepEqual( Stem("legpiszkosabb"), "legpiszkosabb");});
test("legpofátlanabb -> legpofátlanabb", function() {deepEqual( Stem("legpofátlanabb"), "legpofátlanabb");});
test("legprecízebben -> legprecízeb", function() {deepEqual( Stem("legprecízebben"), "legprecízeb");});
test("legpregnánsabb -> legpregnánsabb", function() {deepEqual( Stem("legpregnánsabb"), "legpregnánsabb");});
test("legpéldásabb -> legpéldásabb", function() {deepEqual( Stem("legpéldásabb"), "legpéldásabb");});
test("legradikálisabban -> legradikálisab", function() {deepEqual( Stem("legradikálisabban"), "legradikálisab");});
test("legrangosabb -> legrangosabb", function() {deepEqual( Stem("legrangosabb"), "legrangosabb");});
test("legrendesebb -> legrendesebb", function() {deepEqual( Stem("legrendesebb"), "legrendesebb");});
test("legrendkívülibb -> legrendkívülibb", function() {deepEqual( Stem("legrendkívülibb"), "legrendkívülibb");});
test("legritkább -> legritkább", function() {deepEqual( Stem("legritkább"), "legritkább");});
test("legritkábban -> legritkáb", function() {deepEqual( Stem("legritkábban"), "legritkáb");});
test("legrosszabb -> legrosszabb", function() {deepEqual( Stem("legrosszabb"), "legrosszabb");});
test("legrosszabbak -> legrosszabb", function() {deepEqual( Stem("legrosszabbak"), "legrosszabb");});
test("legrosszabbat -> legrosszabb", function() {deepEqual( Stem("legrosszabbat"), "legrosszabb");});
test("legrosszabbul -> legrosszabb", function() {deepEqual( Stem("legrosszabbul"), "legrosszabb");});
test("legrugalmasabb -> legrugalmasabb", function() {deepEqual( Stem("legrugalmasabb"), "legrugalmasabb");});
test("legrégebbi -> legrégebb", function() {deepEqual( Stem("legrégebbi"), "legrégebb");});
test("legrégebbiek -> legrégebbi", function() {deepEqual( Stem("legrégebbiek"), "legrégebbi");});
test("legrégibb -> legrégibb", function() {deepEqual( Stem("legrégibb"), "legrégibb");});
test("legrémületesebb -> legrémületesebb", function() {deepEqual( Stem("legrémületesebb"), "legrémületesebb");});
test("legrózsásabbak -> legrózsásabb", function() {deepEqual( Stem("legrózsásabbak"), "legrózsásabb");});
test("legrövidebb -> legrövidebb", function() {deepEqual( Stem("legrövidebb"), "legrövidebb");});
test("legrövidebben -> legrövideb", function() {deepEqual( Stem("legrövidebben"), "legrövideb");});
test("legsablonosabb -> legsablonosabb", function() {deepEqual( Stem("legsablonosabb"), "legsablonosabb");});
test("legsikeresebb -> legsikeresebb", function() {deepEqual( Stem("legsikeresebb"), "legsikeresebb");});
test("legsimább -> legsimább", function() {deepEqual( Stem("legsimább"), "legsimább");});
test("legsiralmasabb -> legsiralmasabb", function() {deepEqual( Stem("legsiralmasabb"), "legsiralmasabb");});
test("legsokoldalúbb -> legsokoldalúbb", function() {deepEqual( Stem("legsokoldalúbb"), "legsokoldalúbb");});
test("legstabilabb -> legstabilabb", function() {deepEqual( Stem("legstabilabb"), "legstabilabb");});
test("legszabadabb -> legszabadabb", function() {deepEqual( Stem("legszabadabb"), "legszabadabb");});
test("legszabadabban -> legszabadab", function() {deepEqual( Stem("legszabadabban"), "legszabadab");});
test("legszebb -> legszebb", function() {deepEqual( Stem("legszebb"), "legszebb");});
test("legszebbek -> legszebb", function() {deepEqual( Stem("legszebbek"), "legszebb");});
test("legszebbeket -> legszebb", function() {deepEqual( Stem("legszebbeket"), "legszebb");});
test("legszebben -> legszeb", function() {deepEqual( Stem("legszebben"), "legszeb");});
test("legszebbik -> legszebb", function() {deepEqual( Stem("legszebbik"), "legszebb");});
test("legszegényebb -> legszegényebb", function() {deepEqual( Stem("legszegényebb"), "legszegényebb");});
test("legszegényebbek -> legszegényebb", function() {deepEqual( Stem("legszegényebbek"), "legszegényebb");});
test("legszegényebbeket -> legszegényebb", function() {deepEqual( Stem("legszegényebbeket"), "legszegényebb");});
test("legszegényebbjeit -> legszegényebb", function() {deepEqual( Stem("legszegényebbjeit"), "legszegényebb");});
test("legszembetűnőbb -> legszembetűnőbb", function() {deepEqual( Stem("legszembetűnőbb"), "legszembetűnőbb");});
test("legszembeötlőbb -> legszembeötlőbb", function() {deepEqual( Stem("legszembeötlőbb"), "legszembeötlőbb");});
test("legszemetebb -> legszemetebb", function() {deepEqual( Stem("legszemetebb"), "legszemetebb");});
test("legszennyezettebb -> legszennyezettebb", function() {deepEqual( Stem("legszennyezettebb"), "legszennyezettebb");});
test("legszerencsésebb -> legszerencsésebb", function() {deepEqual( Stem("legszerencsésebb"), "legszerencsésebb");});
test("legszerencsétlenebb -> legszerencsétlenebb", function() {deepEqual( Stem("legszerencsétlenebb"), "legszerencsétlenebb");});
test("legszeretetreméltóbb -> legszeretetreméltóbb", function() {deepEqual( Stem("legszeretetreméltóbb"), "legszeretetreméltóbb");});
test("legszigorúbb -> legszigorúbb", function() {deepEqual( Stem("legszigorúbb"), "legszigorúbb");});
test("legszigorúbban -> legszigorúb", function() {deepEqual( Stem("legszigorúbban"), "legszigorúb");});
test("legszilárdabban -> legszilárdab", function() {deepEqual( Stem("legszilárdabban"), "legszilárdab");});
test("legszimpatikusabb -> legszimpatikusabb", function() {deepEqual( Stem("legszimpatikusabb"), "legszimpatikusabb");});
test("legszomorúbb -> legszomorúbb", function() {deepEqual( Stem("legszomorúbb"), "legszomorúbb");});
test("legszorosabb -> legszorosabb", function() {deepEqual( Stem("legszorosabb"), "legszorosabb");});
test("legszélesebb -> legszélesebb", function() {deepEqual( Stem("legszélesebb"), "legszélesebb");});
test("legszínvonalasabb -> legszínvonalasabb", function() {deepEqual( Stem("legszínvonalasabb"), "legszínvonalasabb");});
test("legszívesebben -> legszíveseb", function() {deepEqual( Stem("legszívesebben"), "legszíveseb");});
test("legszörnyűbb -> legszörnyűbb", function() {deepEqual( Stem("legszörnyűbb"), "legszörnyűbb");});
test("legszükségesebb -> legszükségesebb", function() {deepEqual( Stem("legszükségesebb"), "legszükségesebb");});
test("legszükségesebbeket -> legszükségesebb", function() {deepEqual( Stem("legszükségesebbeket"), "legszükségesebb");});
test("legsötétebb -> legsötétebb", function() {deepEqual( Stem("legsötétebb"), "legsötétebb");});
test("legsúlyosabb -> legsúlyosabb", function() {deepEqual( Stem("legsúlyosabb"), "legsúlyosabb");});
test("legsületlenebb -> legsületlenebb", function() {deepEqual( Stem("legsületlenebb"), "legsületlenebb");});
test("legsürgősebbeket -> legsürgősebb", function() {deepEqual( Stem("legsürgősebbeket"), "legsürgősebb");});
test("legtartalmasabb -> legtartalmasabb", function() {deepEqual( Stem("legtartalmasabb"), "legtartalmasabb");});
test("legtartósabb -> legtartósabb", function() {deepEqual( Stem("legtartósabb"), "legtartósabb");});
test("legtehetségesebb -> legtehetségesebb", function() {deepEqual( Stem("legtehetségesebb"), "legtehetségesebb");});
test("legtehetségesebbeket -> legtehetségesebb", function() {deepEqual( Stem("legtehetségesebbeket"), "legtehetségesebb");});
test("legtekintélyesebbnek -> legtekintélyesebb", function() {deepEqual( Stem("legtekintélyesebbnek"), "legtekintélyesebb");});
test("legteljesebb -> legteljesebb", function() {deepEqual( Stem("legteljesebb"), "legteljesebb");});
test("legteljesebben -> legteljeseb", function() {deepEqual( Stem("legteljesebben"), "legteljeseb");});
test("legtermészetesebb -> legtermészetesebb", function() {deepEqual( Stem("legtermészetesebb"), "legtermészetesebb");});
test("legtetején -> legtete", function() {deepEqual( Stem("legtetején"), "legtete");});
test("legtetejére -> legtete", function() {deepEqual( Stem("legtetejére"), "legtete");});
test("legtipikusabb -> legtipikusabb", function() {deepEqual( Stem("legtipikusabb"), "legtipikusabb");});
test("legtisztességesebb -> legtisztességesebb", function() {deepEqual( Stem("legtisztességesebb"), "legtisztességesebb");});
test("legtisztább -> legtisztább", function() {deepEqual( Stem("legtisztább"), "legtisztább");});
test("legtovább -> legtovább", function() {deepEqual( Stem("legtovább"), "legtovább");});
test("legtávolabb -> legtávolabb", function() {deepEqual( Stem("legtávolabb"), "legtávolabb");});
test("legtávolabbi -> legtávolabb", function() {deepEqual( Stem("legtávolabbi"), "legtávolabb");});
test("legtöbb -> legtöbb", function() {deepEqual( Stem("legtöbb"), "legtöbb");});
test("legtöbben -> legtöb", function() {deepEqual( Stem("legtöbben"), "legtöb");});
test("legtöbbet -> legtöbb", function() {deepEqual( Stem("legtöbbet"), "legtöbb");});
test("legtöbbje -> legtöbb", function() {deepEqual( Stem("legtöbbje"), "legtöbb");});
test("legtöbbjében -> legtöbb", function() {deepEqual( Stem("legtöbbjében"), "legtöbb");});
test("legtöbbjén -> legtöbb", function() {deepEqual( Stem("legtöbbjén"), "legtöbb");});
test("legtöbbjének -> legtöbb", function() {deepEqual( Stem("legtöbbjének"), "legtöbb");});
test("legtöbbjénél -> legtöbb", function() {deepEqual( Stem("legtöbbjénél"), "legtöbb");});
test("legtöbbjét -> legtöbb", function() {deepEqual( Stem("legtöbbjét"), "legtöbb");});
test("legtöbbjük -> legtöbb", function() {deepEqual( Stem("legtöbbjük"), "legtöbb");});
test("legtöbbjüket -> legtöbb", function() {deepEqual( Stem("legtöbbjüket"), "legtöbb");});
test("legtöbbnyire -> legtöbbny", function() {deepEqual( Stem("legtöbbnyire"), "legtöbbny");});
test("legtöbbször -> legtöbbször", function() {deepEqual( Stem("legtöbbször"), "legtöbbször");});
test("legtöbbállam -> legtöbbáll", function() {deepEqual( Stem("legtöbbállam"), "legtöbbáll");});
test("legtökéletesebb -> legtökéletesebb", function() {deepEqual( Stem("legtökéletesebb"), "legtökéletesebb");});
test("legtökéletesebben -> legtökéleteseb", function() {deepEqual( Stem("legtökéletesebben"), "legtökéleteseb");});
test("legtüzesebbekből -> legtüzesebb", function() {deepEqual( Stem("legtüzesebbekből"), "legtüzesebb");});
test("leguggolt -> leguggol", function() {deepEqual( Stem("leguggolt"), "leguggol");});
test("legundorítóbb -> legundorítóbb", function() {deepEqual( Stem("legundorítóbb"), "legundorítóbb");});
test("legurultunk -> legurult", function() {deepEqual( Stem("legurultunk"), "legurult");});
test("legurulva -> legurulv", function() {deepEqual( Stem("legurulva"), "legurulv");});
test("legutoljára -> legutol", function() {deepEqual( Stem("legutoljára"), "legutol");});
test("legutálatosabb -> legutálatosabb", function() {deepEqual( Stem("legutálatosabb"), "legutálatosabb");});
test("legutóbb -> legutóbb", function() {deepEqual( Stem("legutóbb"), "legutóbb");});
test("legutóbbi -> legutóbb", function() {deepEqual( Stem("legutóbbi"), "legutóbb");});
test("legutóbbit -> legutóbb", function() {deepEqual( Stem("legutóbbit"), "legutóbb");});
test("legvadabb -> legvadabb", function() {deepEqual( Stem("legvadabb"), "legvadabb");});
test("legvadabbul -> legvadabb", function() {deepEqual( Stem("legvadabbul"), "legvadabb");});
test("legvalószínűbb -> legvalószínűbb", function() {deepEqual( Stem("legvalószínűbb"), "legvalószínűbb");});
test("legvalószínűtlenebb -> legvalószínűtlenebb", function() {deepEqual( Stem("legvalószínűtlenebb"), "legvalószínűtlenebb");});
test("legveszélyesebb -> legveszélyesebb", function() {deepEqual( Stem("legveszélyesebb"), "legveszélyesebb");});
test("legvirtuózabb -> legvirtuózabb", function() {deepEqual( Stem("legvirtuózabb"), "legvirtuózabb");});
test("legvirágzóbb -> legvirágzóbb", function() {deepEqual( Stem("legvirágzóbb"), "legvirágzóbb");});
test("legvitatottabb -> legvitatottabb", function() {deepEqual( Stem("legvitatottabb"), "legvitatottabb");});
test("legvonzóbb -> legvonzóbb", function() {deepEqual( Stem("legvonzóbb"), "legvonzóbb");});
test("legválogatottabb -> legválogatottabb", function() {deepEqual( Stem("legválogatottabb"), "legválogatottabb");});
test("legváltozatosabb -> legváltozatosabb", function() {deepEqual( Stem("legváltozatosabb"), "legváltozatosabb");});
test("legváltozatosabban -> legváltozatosab", function() {deepEqual( Stem("legváltozatosabban"), "legváltozatosab");});
test("legvégső -> legvégső", function() {deepEqual( Stem("legvégső"), "legvégső");});
test("legvégén -> legvég", function() {deepEqual( Stem("legvégén"), "legvég");});
test("legvégül -> legvég", function() {deepEqual( Stem("legvégül"), "legvég");});
test("legvérszomjasabb -> legvérszomjasabb", function() {deepEqual( Stem("legvérszomjasabb"), "legvérszomjasabb");});
test("legyek -> legy", function() {deepEqual( Stem("legyek"), "legy");});
test("legyen -> legy", function() {deepEqual( Stem("legyen"), "legy");});
test("legyem -> legy", function() {deepEqual( Stem("legyem"), "legy");});
test("légyen -> légy", function() {deepEqual( Stem("légyen"), "légy");});
test("legyeket -> legy", function() {deepEqual( Stem("legyeket"), "legy");});
test("legyet -> legy", function() {deepEqual( Stem("legyet"), "legy");});
test("legyenek -> legy", function() {deepEqual( Stem("legyenek"), "legy");});
test("legyél -> legyél", function() {deepEqual( Stem("legyél"), "legyél");});
test("legyengült -> legyengül", function() {deepEqual( Stem("legyengült"), "legyengül");});
test("legyengülve -> legyengülv", function() {deepEqual( Stem("legyengülve"), "legyengülv");});
test("legyilkolt -> legyilkol", function() {deepEqual( Stem("legyilkolt"), "legyilkol");});
test("legyilkoltam -> legyilkolt", function() {deepEqual( Stem("legyilkoltam"), "legyilkolt");});
test("legyint -> legyin", function() {deepEqual( Stem("legyint"), "legyin");});
test("legyintett -> legyintet", function() {deepEqual( Stem("legyintett"), "legyintet");});
test("legyártja -> legyárt", function() {deepEqual( Stem("legyártja"), "legyárt");});
test("legyártott -> legyártot", function() {deepEqual( Stem("legyártott"), "legyártot");});
test("legyártása -> legyártás", function() {deepEqual( Stem("legyártása"), "legyártás");});
test("legyőzhetetlen -> legyőzhetetl", function() {deepEqual( Stem("legyőzhetetlen"), "legyőzhetetl");});
test("legyőzhetetlennek -> legyőzhetetlen", function() {deepEqual( Stem("legyőzhetetlennek"), "legyőzhetetlen");});
test("legyőzhetetlenül -> legyőzhetetlen", function() {deepEqual( Stem("legyőzhetetlenül"), "legyőzhetetlen");});
test("legyőzhetné -> legyőzhetn", function() {deepEqual( Stem("legyőzhetné"), "legyőzhetn");});
test("legyőzi -> legyőz", function() {deepEqual( Stem("legyőzi"), "legyőz");});
test("legyőzik -> legyőz", function() {deepEqual( Stem("legyőzik"), "legyőz");});
test("legyőznek -> legyőz", function() {deepEqual( Stem("legyőznek"), "legyőz");});
test("legyőzni -> legyőzn", function() {deepEqual( Stem("legyőzni"), "legyőzn");});
test("legyőzte -> legyőzt", function() {deepEqual( Stem("legyőzte"), "legyőzt");});
test("legyőztem -> legyőzt", function() {deepEqual( Stem("legyőztem"), "legyőzt");});
test("legyőzze -> legyőzz", function() {deepEqual( Stem("legyőzze"), "legyőzz");});
test("legyőzé -> legyőz", function() {deepEqual( Stem("legyőzé"), "legyőz");});
test("legyőzök -> legyőz", function() {deepEqual( Stem("legyőzök"), "legyőz");});
test("legyőzésére -> legyőzés", function() {deepEqual( Stem("legyőzésére"), "legyőzés");});
test("legyőzött -> legyőzöt", function() {deepEqual( Stem("legyőzött"), "legyőzöt");});
test("legyőzöttet -> legyőzött", function() {deepEqual( Stem("legyőzöttet"), "legyőzött");});
test("legyűrhesse -> legyűrhess", function() {deepEqual( Stem("legyűrhesse"), "legyűrhess");});
test("legyűrtem -> legyűrt", function() {deepEqual( Stem("legyűrtem"), "legyűrt");});
test("legyűrték -> legyűrte", function() {deepEqual( Stem("legyűrték"), "legyűrte");});
test("legzsírosabb -> legzsírosabb", function() {deepEqual( Stem("legzsírosabb"), "legzsírosabb");});
test("legális -> legális", function() {deepEqual( Stem("legális"), "legális");});
test("legálisan -> legális", function() {deepEqual( Stem("legálisan"), "legális");});
test("legálishoz -> legális", function() {deepEqual( Stem("legálishoz"), "legális");});
test("legáltalánosabb -> legáltalánosabb", function() {deepEqual( Stem("legáltalánosabb"), "legáltalánosabb");});
test("legátfogóbb -> legátfogóbb", function() {deepEqual( Stem("legátfogóbb"), "legátfogóbb");});
test("legédesebb -> legédesebb", function() {deepEqual( Stem("legédesebb"), "legédesebb");});
test("legégőbb -> legégőbb", function() {deepEqual( Stem("legégőbb"), "legégőbb");});
test("legéhesebb -> legéhesebb", function() {deepEqual( Stem("legéhesebb"), "legéhesebb");});
test("legélesebb -> legélesebb", function() {deepEqual( Stem("legélesebb"), "legélesebb");});
test("legélhetőbb -> legélhetőbb", function() {deepEqual( Stem("legélhetőbb"), "legélhetőbb");});
test("legélményesebb -> legélményesebb", function() {deepEqual( Stem("legélményesebb"), "legélményesebb");});
test("legénnyel -> legény", function() {deepEqual( Stem("legénnyel"), "legény");});
test("legény -> legény", function() {deepEqual( Stem("legény"), "legény");});
test("legénye -> legény", function() {deepEqual( Stem("legénye"), "legény");});
test("legényei -> legény", function() {deepEqual( Stem("legényei"), "legény");});
test("legények -> legény", function() {deepEqual( Stem("legények"), "legény");});
test("legényeket -> legény", function() {deepEqual( Stem("legényeket"), "legény");});
test("legényember -> legényember", function() {deepEqual( Stem("legényember"), "legényember");});
test("legényesség -> legényesség", function() {deepEqual( Stem("legényesség"), "legényesség");});
test("legénykoromban -> legénykor", function() {deepEqual( Stem("legénykoromban"), "legénykor");});
test("legénység -> legénység", function() {deepEqual( Stem("legénység"), "legénység");});
test("legénységből -> legénység", function() {deepEqual( Stem("legénységből"), "legénység");});
test("legénységet -> legénység", function() {deepEqual( Stem("legénységet"), "legénység");});
test("legénységi -> legénység", function() {deepEqual( Stem("legénységi"), "legénység");});
test("legérdekesebb -> legérdekesebb", function() {deepEqual( Stem("legérdekesebb"), "legérdekesebb");});
test("legérdekesebbek -> legérdekesebb", function() {deepEqual( Stem("legérdekesebbek"), "legérdekesebb");});
test("legérdekesebbnek -> legérdekesebb", function() {deepEqual( Stem("legérdekesebbnek"), "legérdekesebb");});
test("legérzékenyebb -> legérzékenyebb", function() {deepEqual( Stem("legérzékenyebb"), "legérzékenyebb");});
test("legésszerűbb -> legésszerűbb", function() {deepEqual( Stem("legésszerűbb"), "legésszerűbb");});
test("legésszerűbbnek -> legésszerűbb", function() {deepEqual( Stem("legésszerűbbnek"), "legésszerűbb");});
test("legészakibb -> legészakibb", function() {deepEqual( Stem("legészakibb"), "legészakibb");});
test("legígéretesebb -> legígéretesebb", function() {deepEqual( Stem("legígéretesebb"), "legígéretesebb");});
test("legőrültebb -> legőrültebb", function() {deepEqual( Stem("legőrültebb"), "legőrültebb");});
test("legörbülő -> legörbülő", function() {deepEqual( Stem("legörbülő"), "legörbülő");});
test("legördült -> legördül", function() {deepEqual( Stem("legördült"), "legördül");});
test("legördülő -> legördülő", function() {deepEqual( Stem("legördülő"), "legördülő");});
test("legújabb -> legújabb", function() {deepEqual( Stem("legújabb"), "legújabb");});
test("legújabban -> legújab", function() {deepEqual( Stem("legújabban"), "legújab");});
test("legújabbra -> legújabb", function() {deepEqual( Stem("legújabbra"), "legújabb");});
test("legújabbváltozatára -> legújabbváltozat", function() {deepEqual( Stem("legújabbváltozatára"), "legújabbváltozat");});
test("legügyesebb -> legügyesebb", function() {deepEqual( Stem("legügyesebb"), "legügyesebb");});
test("legüresebb -> legüresebb", function() {deepEqual( Stem("legüresebb"), "legüresebb");});
test("lehagytuk -> lehagyt", function() {deepEqual( Stem("lehagytuk"), "lehagyt");});
test("lehajlás -> lehajlás", function() {deepEqual( Stem("lehajlás"), "lehajlás");});
test("lehajolt -> lehajol", function() {deepEqual( Stem("lehajolt"), "lehajol");});
test("lehajthatom -> lehajthat", function() {deepEqual( Stem("lehajthatom"), "lehajthat");});
test("lehajtható -> lehajtható", function() {deepEqual( Stem("lehajtható"), "lehajtható");});
test("lehajtott -> lehajtot", function() {deepEqual( Stem("lehajtott"), "lehajtot");});
test("lehajtotta -> lehajtott", function() {deepEqual( Stem("lehajtotta"), "lehajtott");});
test("lehangoltan -> lehangolt", function() {deepEqual( Stem("lehangoltan"), "lehangolt");});
test("lehangoló -> lehangoló", function() {deepEqual( Stem("lehangoló"), "lehangoló");});
test("lehatolt -> lehatol", function() {deepEqual( Stem("lehatolt"), "lehatol");});
test("leheletfinom -> leheletfin", function() {deepEqual( Stem("leheletfinom"), "leheletfin");});
test("leheletét -> lehelet", function() {deepEqual( Stem("leheletét"), "lehelet");});
test("lehelni -> leheln", function() {deepEqual( Stem("lehelni"), "leheln");});
test("lehelet -> lehel", function() {deepEqual( Stem("lehelet"), "lehel");});
test("lehelte -> lehelt", function() {deepEqual( Stem("lehelte"), "lehelt");});
test("lehelve -> lehelv", function() {deepEqual( Stem("lehelve"), "lehelv");});
test("lehengerlő -> lehengerlő", function() {deepEqual( Stem("lehengerlő"), "lehengerlő");});
test("lehessen -> lehess", function() {deepEqual( Stem("lehessen"), "lehess");});
test("lehessek -> lehess", function() {deepEqual( Stem("lehessek"), "lehess");});
test("lehessenek -> lehess", function() {deepEqual( Stem("lehessenek"), "lehess");});
test("lehessünk -> lehess", function() {deepEqual( Stem("lehessünk"), "lehess");});
test("lehet -> leh", function() {deepEqual( Stem("lehet"), "leh");});
test("lehetek -> lehet", function() {deepEqual( Stem("lehetek"), "lehet");});
test("lehetetlen -> lehetetl", function() {deepEqual( Stem("lehetetlen"), "lehetetl");});
test("lehetetlennek -> lehetetlen", function() {deepEqual( Stem("lehetetlennek"), "lehetetlen");});
test("lehetetlenné -> lehetetlen", function() {deepEqual( Stem("lehetetlenné"), "lehetetlen");});
test("lehetetlenül -> lehetetlen", function() {deepEqual( Stem("lehetetlenül"), "lehetetlen");});
test("lehetetlenség -> lehetetlenség", function() {deepEqual( Stem("lehetetlenség"), "lehetetlenség");});
test("lehetetlenséget -> lehetetlenség", function() {deepEqual( Stem("lehetetlenséget"), "lehetetlenség");});
test("lehetetlenségére -> lehetetlenség", function() {deepEqual( Stem("lehetetlenségére"), "lehetetlenség");});
test("lehetetleníti -> lehetetlenít", function() {deepEqual( Stem("lehetetleníti"), "lehetetlenít");});
test("lehetetlenítéssel -> lehetetlenítés", function() {deepEqual( Stem("lehetetlenítéssel"), "lehetetlenítés");});
test("lehetett -> lehetet", function() {deepEqual( Stem("lehetett"), "lehetet");});
test("lehetne -> lehetn", function() {deepEqual( Stem("lehetne"), "lehetn");});
test("lehetnek -> lehet", function() {deepEqual( Stem("lehetnek"), "lehet");});
test("lehetnék -> lehetne", function() {deepEqual( Stem("lehetnék"), "lehetne");});
test("lehetnének -> lehetn", function() {deepEqual( Stem("lehetnének"), "lehetn");});
test("lehetnénk -> lehetne", function() {deepEqual( Stem("lehetnénk"), "lehetne");});
test("lehetsz -> lehetsz", function() {deepEqual( Stem("lehetsz"), "lehetsz");});
test("lehettek -> lehett", function() {deepEqual( Stem("lehettek"), "lehett");});
test("lehettem -> lehett", function() {deepEqual( Stem("lehettem"), "lehett");});
test("lehettet -> lehett", function() {deepEqual( Stem("lehettet"), "lehett");});
test("lehettél -> lehettél", function() {deepEqual( Stem("lehettél"), "lehettél");});
test("lehettünk -> lehett", function() {deepEqual( Stem("lehettünk"), "lehett");});
test("lehetünk -> lehet", function() {deepEqual( Stem("lehetünk"), "lehet");});
test("lehetséges -> lehetséges", function() {deepEqual( Stem("lehetséges"), "lehetséges");});
test("lehetségesebbé -> lehetségeseb", function() {deepEqual( Stem("lehetségesebbé"), "lehetségeseb");});
test("lehetségesek -> lehetséges", function() {deepEqual( Stem("lehetségesek"), "lehetséges");});
test("lehetségesnek -> lehetséges", function() {deepEqual( Stem("lehetségesnek"), "lehetséges");});
test("lehetségessé -> lehetséges", function() {deepEqual( Stem("lehetségessé"), "lehetséges");});
test("lehető -> lehető", function() {deepEqual( Stem("lehető"), "lehető");});
test("lehetőleg -> lehetőleg", function() {deepEqual( Stem("lehetőleg"), "lehetőleg");});
test("lehető -> lehető", function() {deepEqual( Stem("lehető"), "lehető");});
test("lehetősége -> lehetőség", function() {deepEqual( Stem("lehetősége"), "lehetőség");});
test("lehetőség -> lehetőség", function() {deepEqual( Stem("lehetőség"), "lehetőség");});
test("lehetőségben -> lehetőség", function() {deepEqual( Stem("lehetőségben"), "lehetőség");});
test("lehetősége -> lehetőség", function() {deepEqual( Stem("lehetősége"), "lehetőség");});
test("lehetőséged -> lehetőség", function() {deepEqual( Stem("lehetőséged"), "lehetőség");});
test("lehetőségei -> lehetőség", function() {deepEqual( Stem("lehetőségei"), "lehetőség");});
test("lehetőségeihez -> lehetőség", function() {deepEqual( Stem("lehetőségeihez"), "lehetőség");});
test("lehetőségeik -> lehetőség", function() {deepEqual( Stem("lehetőségeik"), "lehetőség");});
test("lehetőségeiket -> lehetőség", function() {deepEqual( Stem("lehetőségeiket"), "lehetőség");});
test("lehetőségeim -> lehetőség", function() {deepEqual( Stem("lehetőségeim"), "lehetőség");});
test("lehetőségeimet -> lehetőség", function() {deepEqual( Stem("lehetőségeimet"), "lehetőség");});
test("lehetőségeimhez -> lehetőség", function() {deepEqual( Stem("lehetőségeimhez"), "lehetőség");});
test("lehetőségeinek -> lehetőség", function() {deepEqual( Stem("lehetőségeinek"), "lehetőség");});
test("lehetőségeink -> lehetőség", function() {deepEqual( Stem("lehetőségeink"), "lehetőség");});
test("lehetőségeinkhez -> lehetőség", function() {deepEqual( Stem("lehetőségeinkhez"), "lehetőség");});
test("lehetőségeiről -> lehetőség", function() {deepEqual( Stem("lehetőségeiről"), "lehetőség");});
test("lehetőségeit -> lehetőség", function() {deepEqual( Stem("lehetőségeit"), "lehetőség");});
test("lehetőségeivel -> lehetőség", function() {deepEqual( Stem("lehetőségeivel"), "lehetőség");});
test("lehetőségek -> lehetőség", function() {deepEqual( Stem("lehetőségek"), "lehetőség");});
test("lehetőségeket -> lehetőség", function() {deepEqual( Stem("lehetőségeket"), "lehetőség");});
test("lehetőségekkel -> lehetőség", function() {deepEqual( Stem("lehetőségekkel"), "lehetőség");});
test("lehetőségekre -> lehetőség", function() {deepEqual( Stem("lehetőségekre"), "lehetőség");});
test("lehetőségekről -> lehetőség", function() {deepEqual( Stem("lehetőségekről"), "lehetőség");});
test("lehetőségektől -> lehetőség", function() {deepEqual( Stem("lehetőségektől"), "lehetőség");});
test("lehetőségem -> lehetőség", function() {deepEqual( Stem("lehetőségem"), "lehetőség");});
test("lehetőséget -> lehetőség", function() {deepEqual( Stem("lehetőséget"), "lehetőség");});
test("lehetőséggel -> lehetőség", function() {deepEqual( Stem("lehetőséggel"), "lehetőség");});
test("lehetőséggé -> lehetőség", function() {deepEqual( Stem("lehetőséggé"), "lehetőség");});
test("lehetőségként -> lehetőség", function() {deepEqual( Stem("lehetőségként"), "lehetőség");});
test("lehetőségnek -> lehetőség", function() {deepEqual( Stem("lehetőségnek"), "lehetőség");});
test("lehetőségre -> lehetőség", function() {deepEqual( Stem("lehetőségre"), "lehetőség");});
test("lehetőségről -> lehetőség", function() {deepEqual( Stem("lehetőségről"), "lehetőség");});
test("lehetőségtől -> lehetőség", function() {deepEqual( Stem("lehetőségtől"), "lehetőség");});
test("lehetőségében -> lehetőség", function() {deepEqual( Stem("lehetőségében"), "lehetőség");});
test("lehetőségéből -> lehetőség", function() {deepEqual( Stem("lehetőségéből"), "lehetőség");});
test("lehetőségéhez -> lehetőség", function() {deepEqual( Stem("lehetőségéhez"), "lehetőség");});
test("lehetőségén -> lehetőség", function() {deepEqual( Stem("lehetőségén"), "lehetőség");});
test("lehetőségének -> lehetőség", function() {deepEqual( Stem("lehetőségének"), "lehetőség");});
test("lehetőségére -> lehetőség", function() {deepEqual( Stem("lehetőségére"), "lehetőség");});
test("lehetőségéről -> lehetőség", function() {deepEqual( Stem("lehetőségéről"), "lehetőség");});
test("lehetőségét -> lehetőség", function() {deepEqual( Stem("lehetőségét"), "lehetőség");});
test("lehetőségétől -> lehetőség", function() {deepEqual( Stem("lehetőségétől"), "lehetőség");});
test("lehetőségével -> lehetőség", function() {deepEqual( Stem("lehetőségével"), "lehetőség");});
test("lehetőségük -> lehetőség", function() {deepEqual( Stem("lehetőségük"), "lehetőség");});
test("lehetőségükkel -> lehetőség", function() {deepEqual( Stem("lehetőségükkel"), "lehetőség");});
test("lehetőségünk -> lehetőség", function() {deepEqual( Stem("lehetőségünk"), "lehetőség");});
test("lehetőséges -> lehetőséges", function() {deepEqual( Stem("lehetőséges"), "lehetőséges");});
test("leheveredtek -> leheveredt", function() {deepEqual( Stem("leheveredtek"), "leheveredt");});
test("lehiggadt -> lehigg", function() {deepEqual( Stem("lehiggadt"), "lehigg");});
test("lehordom -> lehord", function() {deepEqual( Stem("lehordom"), "lehord");});
test("lehordázott -> lehordázot", function() {deepEqual( Stem("lehordázott"), "lehordázot");});
test("lehullhat -> lehullh", function() {deepEqual( Stem("lehullhat"), "lehullh");});
test("lehullik -> lehull", function() {deepEqual( Stem("lehullik"), "lehull");});
test("lehullott -> lehullot", function() {deepEqual( Stem("lehullott"), "lehullot");});
test("lehullt -> lehull", function() {deepEqual( Stem("lehullt"), "lehull");});
test("lehullása -> lehullás", function() {deepEqual( Stem("lehullása"), "lehullás");});
test("lehulló -> lehulló", function() {deepEqual( Stem("lehulló"), "lehulló");});
test("lehunyni -> lehunyn", function() {deepEqual( Stem("lehunyni"), "lehunyn");});
test("lehunyt -> lehuny", function() {deepEqual( Stem("lehunyt"), "lehuny");});
test("lehunyta -> lehunyt", function() {deepEqual( Stem("lehunyta"), "lehunyt");});
test("lehuszni -> lehuszn", function() {deepEqual( Stem("lehuszni"), "lehuszn");});
test("lehívhatják -> lehívhatja", function() {deepEqual( Stem("lehívhatják"), "lehívhatja");});
test("lehívja -> lehív", function() {deepEqual( Stem("lehívja"), "lehív");});
test("lehívnak -> lehív", function() {deepEqual( Stem("lehívnak"), "lehív");});
test("lehívni -> lehívn", function() {deepEqual( Stem("lehívni"), "lehívn");});
test("lehívták -> lehívta", function() {deepEqual( Stem("lehívták"), "lehívta");});
test("lehívás -> lehívás", function() {deepEqual( Stem("lehívás"), "lehívás");});
test("lehívásos -> lehívásos", function() {deepEqual( Stem("lehívásos"), "lehívásos");});
test("lehívásra -> lehívás", function() {deepEqual( Stem("lehívásra"), "lehívás");});
test("lehúzhatják -> lehúzhatja", function() {deepEqual( Stem("lehúzhatják"), "lehúzhatja");});
test("lehúzhatnák -> lehúzhatna", function() {deepEqual( Stem("lehúzhatnák"), "lehúzhatna");});
test("lehúzok -> lehúz", function() {deepEqual( Stem("lehúzok"), "lehúz");});
test("lehúzta -> lehúzt", function() {deepEqual( Stem("lehúzta"), "lehúzt");});
test("lehúztam -> lehúzt", function() {deepEqual( Stem("lehúztam"), "lehúzt");});
test("lehúzott -> lehúzot", function() {deepEqual( Stem("lehúzott"), "lehúzot");});
test("lehűlt -> lehűl", function() {deepEqual( Stem("lehűlt"), "lehűl");});
test("lehűteni -> lehűten", function() {deepEqual( Stem("lehűteni"), "lehűten");});
test("lehűtést -> lehűtés", function() {deepEqual( Stem("lehűtést"), "lehűtés");});
test("lehűtöttük -> lehűtött", function() {deepEqual( Stem("lehűtöttük"), "lehűtött");});
test("lehülyézi -> lehülyéz", function() {deepEqual( Stem("lehülyézi"), "lehülyéz");});
test("leigazolta -> leigazolt", function() {deepEqual( Stem("leigazolta"), "leigazolt");});
test("leigázni -> leigázn", function() {deepEqual( Stem("leigázni"), "leigázn");});
test("leigázták -> leigázta", function() {deepEqual( Stem("leigázták"), "leigázta");});
test("leintette -> leintett", function() {deepEqual( Stem("leintette"), "leintett");});
test("leintettek -> leintett", function() {deepEqual( Stem("leintettek"), "leintett");});
test("leinti -> leint", function() {deepEqual( Stem("leinti"), "leint");});
test("leise -> leis", function() {deepEqual( Stem("leise"), "leis");});
test("leiskolázta -> leiskolázt", function() {deepEqual( Stem("leiskolázta"), "leiskolázt");});
test("leitat -> leit", function() {deepEqual( Stem("leitat"), "leit");});
test("leitta -> leitt", function() {deepEqual( Stem("leitta"), "leitt");});
test("leizzadt -> leizz", function() {deepEqual( Stem("leizzadt"), "leizz");});
test("lej -> lej", function() {deepEqual( Stem("lej"), "lej");});
test("lejnek -> lej", function() {deepEqual( Stem("lejnek"), "lej");});
test("lejegyezni -> lejegyezn", function() {deepEqual( Stem("lejegyezni"), "lejegyezn");});
test("lejegyezték -> lejegyezte", function() {deepEqual( Stem("lejegyezték"), "lejegyezte");});
test("lejegyzik -> lejegyz", function() {deepEqual( Stem("lejegyzik"), "lejegyz");});
test("lejegyzendő -> lejegyzendő", function() {deepEqual( Stem("lejegyzendő"), "lejegyzendő");});
test("lejegyzett -> lejegyzet", function() {deepEqual( Stem("lejegyzett"), "lejegyzet");});
test("lejegyzettséget -> lejegyzettség", function() {deepEqual( Stem("lejegyzettséget"), "lejegyzettség");});
test("lejegyzése -> lejegyzés", function() {deepEqual( Stem("lejegyzése"), "lejegyzés");});
test("lejegyzésére -> lejegyzés", function() {deepEqual( Stem("lejegyzésére"), "lejegyzés");});
test("lejegyző -> lejegyző", function() {deepEqual( Stem("lejegyző"), "lejegyző");});
test("lejesett -> lejeset", function() {deepEqual( Stem("lejesett"), "lejeset");});
test("lejirom -> lejir", function() {deepEqual( Stem("lejirom"), "lejir");});
test("lejjebb -> lejjebb", function() {deepEqual( Stem("lejjebb"), "lejjebb");});
test("lent -> len", function() {deepEqual( Stem("lent"), "len");});
test("lejtenek -> lejt", function() {deepEqual( Stem("lejtenek"), "lejt");});
test("lejtett -> lejtet", function() {deepEqual( Stem("lejtett"), "lejtet");});
test("lejtését -> lejtés", function() {deepEqual( Stem("lejtését"), "lejtés");});
test("lejtő -> lejtő", function() {deepEqual( Stem("lejtő"), "lejtő");});
test("lejtőn -> lejtő", function() {deepEqual( Stem("lejtőn"), "lejtő");});
test("lejtőféleségen -> lejtőféleség", function() {deepEqual( Stem("lejtőféleségen"), "lejtőféleség");});
test("lejtős -> lejtős", function() {deepEqual( Stem("lejtős"), "lejtős");});
test("lejtősebb -> lejtősebb", function() {deepEqual( Stem("lejtősebb"), "lejtősebb");});
test("lejtősödött -> lejtősödöt", function() {deepEqual( Stem("lejtősödött"), "lejtősödöt");});
test("lejutottak -> lejutott", function() {deepEqual( Stem("lejutottak"), "lejutott");});
test("lejutottam -> lejutott", function() {deepEqual( Stem("lejutottam"), "lejutott");});
test("lejárassák -> lejárassa", function() {deepEqual( Stem("lejárassák"), "lejárassa");});
test("lejárat -> lejár", function() {deepEqual( Stem("lejárat"), "lejár");});
test("lejáratni -> lejáratn", function() {deepEqual( Stem("lejáratni"), "lejáratn");});
test("lejáratott -> lejáratot", function() {deepEqual( Stem("lejáratott"), "lejáratot");});
test("lejáratra -> lejárat", function() {deepEqual( Stem("lejáratra"), "lejárat");});
test("lejáratába -> lejárat", function() {deepEqual( Stem("lejáratába"), "lejárat");});
test("lejáratának -> lejárat", function() {deepEqual( Stem("lejáratának"), "lejárat");});
test("lejáratok -> lejárat", function() {deepEqual( Stem("lejáratok"), "lejárat");});
test("lejáratot -> lejárat", function() {deepEqual( Stem("lejáratot"), "lejárat");});
test("lejárata -> lejárat", function() {deepEqual( Stem("lejárata"), "lejárat");});
test("lejáratása -> lejáratás", function() {deepEqual( Stem("lejáratása"), "lejáratás");});
test("lejáratására -> lejáratás", function() {deepEqual( Stem("lejáratására"), "lejáratás");});
test("lejáratú -> lejáratú", function() {deepEqual( Stem("lejáratú"), "lejáratú");});
test("lejár -> lejár", function() {deepEqual( Stem("lejár"), "lejár");});
test("lejárom -> lejár", function() {deepEqual( Stem("lejárom"), "lejár");});
test("lejártak -> lejárt", function() {deepEqual( Stem("lejártak"), "lejárt");});
test("lejárt -> lejár", function() {deepEqual( Stem("lejárt"), "lejár");});
test("lejárta -> lejárt", function() {deepEqual( Stem("lejárta"), "lejárt");});
test("lejártakor -> lejárt", function() {deepEqual( Stem("lejártakor"), "lejárt");});
test("lejártához -> lejárt", function() {deepEqual( Stem("lejártához"), "lejárt");});
test("lejártáig -> lejárt", function() {deepEqual( Stem("lejártáig"), "lejárt");});
test("lejártának -> lejárt", function() {deepEqual( Stem("lejártának"), "lejárt");});
test("lejártára -> lejárt", function() {deepEqual( Stem("lejártára"), "lejárt");});
test("lejártát -> lejárt", function() {deepEqual( Stem("lejártát"), "lejárt");});
test("lejártával -> lejárt", function() {deepEqual( Stem("lejártával"), "lejárt");});
test("lejárttá -> lejárt", function() {deepEqual( Stem("lejárttá"), "lejárt");});
test("lejáró -> lejáró", function() {deepEqual( Stem("lejáró"), "lejáró");});
test("lejátssza -> lejátssz", function() {deepEqual( Stem("lejátssza"), "lejátssz");});
test("lejátssza -> lejátssz", function() {deepEqual( Stem("lejátssza"), "lejátssz");});
test("lejátsszák -> lejátssza", function() {deepEqual( Stem("lejátsszák"), "lejátssza");});
test("lejátszhatók -> lejátszható", function() {deepEqual( Stem("lejátszhatók"), "lejátszható");});
test("lejátszott -> lejátszot", function() {deepEqual( Stem("lejátszott"), "lejátszot");});
test("lejátszódott -> lejátszódot", function() {deepEqual( Stem("lejátszódott"), "lejátszódot");});
test("lejátszás -> lejátszás", function() {deepEqual( Stem("lejátszás"), "lejátszás");});
test("lejátszása -> lejátszás", function() {deepEqual( Stem("lejátszása"), "lejátszás");});
test("lejátszására -> lejátszás", function() {deepEqual( Stem("lejátszására"), "lejátszás");});
test("lejátszását -> lejátszás", function() {deepEqual( Stem("lejátszását"), "lejátszás");});
test("lejátszóberendezések -> lejátszóberendezés", function() {deepEqual( Stem("lejátszóberendezések"), "lejátszóberendezés");});
test("lejátszódásához -> lejátszódás", function() {deepEqual( Stem("lejátszódásához"), "lejátszódás");});
test("lejátszóeszköz -> lejátszóeszköz", function() {deepEqual( Stem("lejátszóeszköz"), "lejátszóeszköz");});
test("lejátszója -> lejátszó", function() {deepEqual( Stem("lejátszója"), "lejátszó");});
test("lejátszók -> lejátszó", function() {deepEqual( Stem("lejátszók"), "lejátszó");});
test("lejátszóprogram -> lejátszóprogr", function() {deepEqual( Stem("lejátszóprogram"), "lejátszóprogr");});
test("lejöjjön -> lejöjj", function() {deepEqual( Stem("lejöjjön"), "lejöjj");});
test("lejöttek -> lejött", function() {deepEqual( Stem("lejöttek"), "lejött");});
test("lejöttem -> lejött", function() {deepEqual( Stem("lejöttem"), "lejött");});
test("lejöttünk -> lejött", function() {deepEqual( Stem("lejöttünk"), "lejött");});
test("lejön -> lej", function() {deepEqual( Stem("lejön"), "lej");});
test("lejönni -> lejönn", function() {deepEqual( Stem("lejönni"), "lejönn");});
test("lejött -> lejöt", function() {deepEqual( Stem("lejött"), "lejöt");});
test("lejövet -> lejöv", function() {deepEqual( Stem("lejövet"), "lejöv");});
test("lekanyarodni -> lekanyarodn", function() {deepEqual( Stem("lekanyarodni"), "lekanyarodn");});
test("lekanyarodtunk -> lekanyarodt", function() {deepEqual( Stem("lekanyarodtunk"), "lekanyarodt");});
test("lekaparta -> lekapart", function() {deepEqual( Stem("lekaparta"), "lekapart");});
test("lekaparták -> lekaparta", function() {deepEqual( Stem("lekaparták"), "lekaparta");});
test("lekapcsolja -> lekapcsol", function() {deepEqual( Stem("lekapcsolja"), "lekapcsol");});
test("lekapcsoltuk -> lekapcsolt", function() {deepEqual( Stem("lekapcsoltuk"), "lekapcsolt");});
test("lekentem -> lekent", function() {deepEqual( Stem("lekentem"), "lekent");});
test("lekerüljenek -> lekerül", function() {deepEqual( Stem("lekerüljenek"), "lekerül");});
test("lekerült -> lekerül", function() {deepEqual( Stem("lekerült"), "lekerül");});
test("lekezdett -> lekezdet", function() {deepEqual( Stem("lekezdett"), "lekezdet");});
test("lekezelő -> lekezelő", function() {deepEqual( Stem("lekezelő"), "lekezelő");});
test("lekiáltott -> lekiáltot", function() {deepEqual( Stem("lekiáltott"), "lekiáltot");});
test("lekközelebbi -> lekközelebb", function() {deepEqual( Stem("lekközelebbi"), "lekközelebb");});
test("lektor -> lektor", function() {deepEqual( Stem("lektor"), "lektor");});
test("lektora -> lekt", function() {deepEqual( Stem("lektora"), "lekt");});
test("lekvár -> lekvár", function() {deepEqual( Stem("lekvár"), "lekvár");});
test("lekvárhoz -> lekvár", function() {deepEqual( Stem("lekvárhoz"), "lekvár");});
test("lekvárt -> lekvár", function() {deepEqual( Stem("lekvárt"), "lekvár");});
test("lekváros -> lekváros", function() {deepEqual( Stem("lekváros"), "lekváros");});
test("lekvárosdzsemmet -> lekvárosdzsem", function() {deepEqual( Stem("lekvárosdzsemmet"), "lekvárosdzsem");});
test("leképező -> leképező", function() {deepEqual( Stem("leképező"), "leképező");});
test("lekérdezhetjük -> lekérdezhet", function() {deepEqual( Stem("lekérdezhetjük"), "lekérdezhet");});
test("lekérdezhető -> lekérdezhető", function() {deepEqual( Stem("lekérdezhető"), "lekérdezhető");});
test("lekérdezhetők -> lekérdezhető", function() {deepEqual( Stem("lekérdezhetők"), "lekérdezhető");});
test("lekérdezési -> lekérdezés", function() {deepEqual( Stem("lekérdezési"), "lekérdezés");});
test("lekérdezése -> lekérdezés", function() {deepEqual( Stem("lekérdezése"), "lekérdezés");});
test("lekérdezésre -> lekérdezés", function() {deepEqual( Stem("lekérdezésre"), "lekérdezés");});
test("lekérdezéssel -> lekérdezés", function() {deepEqual( Stem("lekérdezéssel"), "lekérdezés");});
test("lekérdezőablak -> lekérdezőabl", function() {deepEqual( Stem("lekérdezőablak"), "lekérdezőabl");});
test("lekérésének -> lekérés", function() {deepEqual( Stem("lekérésének"), "lekérés");});
test("lekésném -> lekésne", function() {deepEqual( Stem("lekésném"), "lekésne");});
test("lekéste -> lekést", function() {deepEqual( Stem("lekéste"), "lekést");});
test("lekéstem -> lekést", function() {deepEqual( Stem("lekéstem"), "lekést");});
test("lekéstük -> lekést", function() {deepEqual( Stem("lekéstük"), "lekést");});
test("lekéstünk -> lekést", function() {deepEqual( Stem("lekéstünk"), "lekést");});
test("lekésve -> lekésv", function() {deepEqual( Stem("lekésve"), "lekésv");});
test("lekísérte -> lekísért", function() {deepEqual( Stem("lekísérte"), "lekísért");});
test("leköpdösik -> leköpdös", function() {deepEqual( Stem("leköpdösik"), "leköpdös");});
test("leköszönt -> leköszön", function() {deepEqual( Stem("leköszönt"), "leköszön");});
test("leköszönő -> leköszönő", function() {deepEqual( Stem("leköszönő"), "leköszönő");});
test("lekötelezettje -> lekötelezett", function() {deepEqual( Stem("lekötelezettje"), "lekötelezett");});
test("leköt -> lek", function() {deepEqual( Stem("leköt"), "lek");});
test("leköti -> leköt", function() {deepEqual( Stem("leköti"), "leköt");});
test("lekötni -> lekötn", function() {deepEqual( Stem("lekötni"), "lekötn");});
test("lekötötte -> lekötött", function() {deepEqual( Stem("lekötötte"), "lekötött");});
test("lekötve -> lekötv", function() {deepEqual( Stem("lekötve"), "lekötv");});
test("lekötött -> lekötöt", function() {deepEqual( Stem("lekötött"), "lekötöt");});
test("leküzdendő -> leküzdendő", function() {deepEqual( Stem("leküzdendő"), "leküzdendő");});
test("leküzdenie -> leküzden", function() {deepEqual( Stem("leküzdenie"), "leküzden");});
test("leküzdhetetlennek -> leküzdhetetlen", function() {deepEqual( Stem("leküzdhetetlennek"), "leküzdhetetlen");});
test("leküzdve -> leküzdv", function() {deepEqual( Stem("leküzdve"), "leküzdv");});
test("leküzdésében -> leküzdés", function() {deepEqual( Stem("leküzdésében"), "leküzdés");});
test("lelankadt -> lelan", function() {deepEqual( Stem("lelankadt"), "lelan");});
test("lelassul -> lelass", function() {deepEqual( Stem("lelassul"), "lelass");});
test("lelassultak -> lelassult", function() {deepEqual( Stem("lelassultak"), "lelassult");});
test("lelassult -> lelassul", function() {deepEqual( Stem("lelassult"), "lelassul");});
test("lelassulása -> lelassulás", function() {deepEqual( Stem("lelassulása"), "lelassulás");});
test("lelegelik -> lelegel", function() {deepEqual( Stem("lelegelik"), "lelegel");});
test("lelem -> lel", function() {deepEqual( Stem("lelem"), "lel");});
test("leli -> lel", function() {deepEqual( Stem("leli"), "lel");});
test("leleménye -> lelemény", function() {deepEqual( Stem("leleménye"), "lelemény");});
test("leleményes -> leleményes", function() {deepEqual( Stem("leleményes"), "leleményes");});
test("leleményességükben -> leleményesség", function() {deepEqual( Stem("leleményességükben"), "leleményesség");});
test("leleplezi -> leleplez", function() {deepEqual( Stem("leleplezi"), "leleplez");});
test("leleplezik -> leleplez", function() {deepEqual( Stem("leleplezik"), "leleplez");});
test("leleplezne -> leleplezn", function() {deepEqual( Stem("leleplezne"), "leleplezn");});
test("lelepleznék -> leleplezne", function() {deepEqual( Stem("lelepleznék"), "leleplezne");});
test("lelepleztünk -> leleplezt", function() {deepEqual( Stem("lelepleztünk"), "leleplezt");});
test("leleplezze -> leleplezz", function() {deepEqual( Stem("leleplezze"), "leleplezz");});
test("leleplezve -> leleplezv", function() {deepEqual( Stem("leleplezve"), "leleplezv");});
test("leleplezése -> leleplezés", function() {deepEqual( Stem("leleplezése"), "leleplezés");});
test("leleplezéseit -> leleplezés", function() {deepEqual( Stem("leleplezéseit"), "leleplezés");});
test("leleplezések -> leleplezés", function() {deepEqual( Stem("leleplezések"), "leleplezés");});
test("leleplezést -> leleplezés", function() {deepEqual( Stem("leleplezést"), "leleplezés");});
test("leleplezéséig -> leleplezés", function() {deepEqual( Stem("leleplezéséig"), "leleplezés");});
test("leleplezésén -> leleplezés", function() {deepEqual( Stem("leleplezésén"), "leleplezés");});
test("leleplezésük -> leleplezés", function() {deepEqual( Stem("leleplezésük"), "leleplezés");});
test("leleplező -> leleplező", function() {deepEqual( Stem("leleplező"), "leleplező");});
test("lelet -> lel", function() {deepEqual( Stem("lelet"), "lel");});
test("leletek -> lelet", function() {deepEqual( Stem("leletek"), "lelet");});
test("leleteket -> lelet", function() {deepEqual( Stem("leleteket"), "lelet");});
test("leletekkel -> lelet", function() {deepEqual( Stem("leletekkel"), "lelet");});
test("lelettömeget -> lelettömeg", function() {deepEqual( Stem("lelettömeget"), "lelettömeg");});
test("lelhető -> lelhető", function() {deepEqual( Stem("lelhető"), "lelhető");});
test("lelhetők -> lelhető", function() {deepEqual( Stem("lelhetők"), "lelhető");});
test("lelkesedés -> lelkesedés", function() {deepEqual( Stem("lelkesedés"), "lelkesedés");});
test("lelkesedése -> lelkesedés", function() {deepEqual( Stem("lelkesedése"), "lelkesedés");});
test("lelkesedéssel -> lelkesedés", function() {deepEqual( Stem("lelkesedéssel"), "lelkesedés");});
test("lelkesedést -> lelkesedés", function() {deepEqual( Stem("lelkesedést"), "lelkesedés");});
test("lelkesedésféle -> lelkesedésfél", function() {deepEqual( Stem("lelkesedésféle"), "lelkesedésfél");});
test("lelkesedésfélével -> lelkesedésfél", function() {deepEqual( Stem("lelkesedésfélével"), "lelkesedésfél");});
test("lelkes -> lelkes", function() {deepEqual( Stem("lelkes"), "lelkes");});
test("lelkesek -> lelkes", function() {deepEqual( Stem("lelkesek"), "lelkes");});
test("lelkesen -> lelkes", function() {deepEqual( Stem("lelkesen"), "lelkes");});
test("lelkesítőleg -> lelkesítőleg", function() {deepEqual( Stem("lelkesítőleg"), "lelkesítőleg");});
test("lelkesültség -> lelkesültség", function() {deepEqual( Stem("lelkesültség"), "lelkesültség");});
test("lelkesültségünkhöz -> lelkesültség", function() {deepEqual( Stem("lelkesültségünkhöz"), "lelkesültség");});
test("lelki -> lel", function() {deepEqual( Stem("lelki"), "lel");});
test("lelkiereje -> lelkiere", function() {deepEqual( Stem("lelkiereje"), "lelkiere");});
test("lelkierejét -> lelkiere", function() {deepEqual( Stem("lelkierejét"), "lelkiere");});
test("lelkierejű -> lelkierejű", function() {deepEqual( Stem("lelkierejű"), "lelkierejű");});
test("lelkigyakorlat -> lelkigyakorl", function() {deepEqual( Stem("lelkigyakorlat"), "lelkigyakorl");});
test("lelkigyakorlatokról -> lelkigyakorlat", function() {deepEqual( Stem("lelkigyakorlatokról"), "lelkigyakorlat");});
test("lelkigyakorlaton -> lelkigyakorlat", function() {deepEqual( Stem("lelkigyakorlaton"), "lelkigyakorlat");});
test("lelkiismeret-furdalása -> lelkiismeret-furdalás", function() {deepEqual( Stem("lelkiismeret-furdalása"), "lelkiismeret-furdalás");});
test("lelkiismeret-furdalásom -> lelkiismeret-furdalás", function() {deepEqual( Stem("lelkiismeret-furdalásom"), "lelkiismeret-furdalás");});
test("lelkiismeret-furdalással -> lelkiismeret-furdalás", function() {deepEqual( Stem("lelkiismeret-furdalással"), "lelkiismeret-furdalás");});
test("lelkiismeret-furdalást -> lelkiismeret-furdalás", function() {deepEqual( Stem("lelkiismeret-furdalást"), "lelkiismeret-furdalás");});
test("lelkiismerete -> lelkiismeret", function() {deepEqual( Stem("lelkiismerete"), "lelkiismeret");});
test("lelkiismeretem -> lelkiismeret", function() {deepEqual( Stem("lelkiismeretem"), "lelkiismeret");});
test("lelkiismeretemen -> lelkiismeret", function() {deepEqual( Stem("lelkiismeretemen"), "lelkiismeret");});
test("lelkiismerettel -> lelkiismer", function() {deepEqual( Stem("lelkiismerettel"), "lelkiismer");});
test("lelkiismeretét -> lelkiismeret", function() {deepEqual( Stem("lelkiismeretét"), "lelkiismeret");});
test("lelkiismeretes -> lelkiismeretes", function() {deepEqual( Stem("lelkiismeretes"), "lelkiismeretes");});
test("lelkiismeretesen -> lelkiismeretes", function() {deepEqual( Stem("lelkiismeretesen"), "lelkiismeretes");});
test("lelkiismeretesnek -> lelkiismeretes", function() {deepEqual( Stem("lelkiismeretesnek"), "lelkiismeretes");});
test("lelkiismeretességgel -> lelkiismeretesség", function() {deepEqual( Stem("lelkiismeretességgel"), "lelkiismeretesség");});
test("lelkiismeretfurdalást -> lelkiismeretfurdalás", function() {deepEqual( Stem("lelkiismeretfurdalást"), "lelkiismeretfurdalás");});
test("lelkiismeretfurdalásában -> lelkiismeretfurdalás", function() {deepEqual( Stem("lelkiismeretfurdalásában"), "lelkiismeretfurdalás");});
test("lelkipásztor -> lelkipásztor", function() {deepEqual( Stem("lelkipásztor"), "lelkipásztor");});
test("lelkipásztora -> lelkipászt", function() {deepEqual( Stem("lelkipásztora"), "lelkipászt");});
test("lelkipásztorát -> lelkipásztor", function() {deepEqual( Stem("lelkipásztorát"), "lelkipásztor");});
test("lelkipásztorkodtam -> lelkipásztorkodt", function() {deepEqual( Stem("lelkipásztorkodtam"), "lelkipásztorkodt");});
test("lelkipásztorkodási -> lelkipásztorkodás", function() {deepEqual( Stem("lelkipásztorkodási"), "lelkipásztorkodás");});
test("lelkivilágom -> lelkivilág", function() {deepEqual( Stem("lelkivilágom"), "lelkivilág");});
test("lelkivilágába -> lelkivilág", function() {deepEqual( Stem("lelkivilágába"), "lelkivilág");});
test("lelkivilágával -> lelkivilág", function() {deepEqual( Stem("lelkivilágával"), "lelkivilág");});
test("lelkiállapot -> lelkiállap", function() {deepEqual( Stem("lelkiállapot"), "lelkiállap");});
test("lelkiállapota -> lelkiállapot", function() {deepEqual( Stem("lelkiállapota"), "lelkiállapot");});
test("lelkiállapotba -> lelkiállapot", function() {deepEqual( Stem("lelkiállapotba"), "lelkiállapot");});
test("lelkiállapotban -> lelkiállapot", function() {deepEqual( Stem("lelkiállapotban"), "lelkiállapot");});
test("lelkiállapotának -> lelkiállapot", function() {deepEqual( Stem("lelkiállapotának"), "lelkiállapot");});
test("lelkiállapotára -> lelkiállapot", function() {deepEqual( Stem("lelkiállapotára"), "lelkiállapot");});
test("lelke -> lel", function() {deepEqual( Stem("lelke"), "lel");});
test("lelked -> lel", function() {deepEqual( Stem("lelked"), "lel");});
test("lelkedben -> lel", function() {deepEqual( Stem("lelkedben"), "lel");});
test("lelkedet -> lel", function() {deepEqual( Stem("lelkedet"), "lel");});
test("lelkek -> lelk", function() {deepEqual( Stem("lelkek"), "lelk");});
test("lelkeket -> lelk", function() {deepEqual( Stem("lelkeket"), "lelk");});
test("lelkemben -> lel", function() {deepEqual( Stem("lelkemben"), "lel");});
test("lelkemre -> lel", function() {deepEqual( Stem("lelkemre"), "lel");});
test("lelkesedett -> lelkesedet", function() {deepEqual( Stem("lelkesedett"), "lelkesedet");});
test("lelkesednek -> lelkes", function() {deepEqual( Stem("lelkesednek"), "lelkes");});
test("lelkesedni -> lelkesedn", function() {deepEqual( Stem("lelkesedni"), "lelkesedn");});
test("lelket -> lel", function() {deepEqual( Stem("lelket"), "lel");});
test("lelkébe -> lel", function() {deepEqual( Stem("lelkébe"), "lel");});
test("lelkében -> lel", function() {deepEqual( Stem("lelkében"), "lel");});
test("lelkéből -> lel", function() {deepEqual( Stem("lelkéből"), "lel");});
test("lelkén -> lel", function() {deepEqual( Stem("lelkén"), "lel");});
test("lelkének -> lel", function() {deepEqual( Stem("lelkének"), "lel");});
test("lelkére -> lel", function() {deepEqual( Stem("lelkére"), "lel");});
test("lelkét -> lel", function() {deepEqual( Stem("lelkét"), "lel");});
test("lelkük -> lel", function() {deepEqual( Stem("lelkük"), "lel");});
test("lelkükben -> lel", function() {deepEqual( Stem("lelkükben"), "lel");});
test("lelküket -> lel", function() {deepEqual( Stem("lelküket"), "lel");});
test("lelkünkkel -> lel", function() {deepEqual( Stem("lelkünkkel"), "lel");});
test("lelkünkre -> lel", function() {deepEqual( Stem("lelkünkre"), "lel");});
test("lelkéért -> lel", function() {deepEqual( Stem("lelkéért"), "lel");});
test("lélek -> lél", function() {deepEqual( Stem("lélek"), "lél");});
test("lélekben -> lél", function() {deepEqual( Stem("lélekben"), "lél");});
test("lélekkel -> lél", function() {deepEqual( Stem("lélekkel"), "lél");});
test("léleknek -> lél", function() {deepEqual( Stem("léleknek"), "lél");});
test("lélekre -> lél", function() {deepEqual( Stem("lélekre"), "lél");});
test("lélektől -> lél", function() {deepEqual( Stem("lélektől"), "lél");});
test("lelkész -> lelkész", function() {deepEqual( Stem("lelkész"), "lelkész");});
test("lelkésze -> lelkész", function() {deepEqual( Stem("lelkésze"), "lelkész");});
test("lelkészekből -> lelkész", function() {deepEqual( Stem("lelkészekből"), "lelkész");});
test("lelkészeket -> lelkész", function() {deepEqual( Stem("lelkészeket"), "lelkész");});
test("lelkésznél -> lelkész", function() {deepEqual( Stem("lelkésznél"), "lelkész");});
test("lelkészszel -> lelkészszel", function() {deepEqual( Stem("lelkészszel"), "lelkészszel");});
test("lelkészüket -> lelkész", function() {deepEqual( Stem("lelkészüket"), "lelkész");});
test("lelkű -> lelkű", function() {deepEqual( Stem("lelkű"), "lelkű");});
test("lelkűségéről -> lelkűség", function() {deepEqual( Stem("lelkűségéről"), "lelkűség");});
test("lelkületű -> lelkületű", function() {deepEqual( Stem("lelkületű"), "lelkületű");});
test("lelni -> leln", function() {deepEqual( Stem("lelni"), "leln");});
test("leltünk -> lelt", function() {deepEqual( Stem("leltünk"), "lelt");});
test("lelte -> lelt", function() {deepEqual( Stem("lelte"), "lelt");});
test("leltek -> lelt", function() {deepEqual( Stem("leltek"), "lelt");});
test("lelohad -> leloh", function() {deepEqual( Stem("lelohad"), "leloh");});
test("lelohadt -> leloh", function() {deepEqual( Stem("lelohadt"), "leloh");});
test("lelombozódom -> lelombozód", function() {deepEqual( Stem("lelombozódom"), "lelombozód");});
test("lelopkodták -> lelopkodta", function() {deepEqual( Stem("lelopkodták"), "lelopkodta");});
test("leltár -> leltár", function() {deepEqual( Stem("leltár"), "leltár");});
test("leltárba -> leltár", function() {deepEqual( Stem("leltárba"), "leltár");});
test("leltárfelelősség -> leltárfelelősség", function() {deepEqual( Stem("leltárfelelősség"), "leltárfelelősség");});
test("leláncolt -> leláncol", function() {deepEqual( Stem("leláncolt"), "leláncol");});
test("lelátó -> lelátó", function() {deepEqual( Stem("lelátó"), "lelátó");});
test("lelátóhoz -> lelátó", function() {deepEqual( Stem("lelátóhoz"), "lelátó");});
test("lelécel -> lelécel", function() {deepEqual( Stem("lelécel"), "lelécel");});
test("lelécelt -> lelécel", function() {deepEqual( Stem("lelécelt"), "lelécel");});
test("lelépett -> lelépet", function() {deepEqual( Stem("lelépett"), "lelépet");});
test("lelépni -> lelépn", function() {deepEqual( Stem("lelépni"), "lelépn");});
test("leléptem -> lelépt", function() {deepEqual( Stem("leléptem"), "lelépt");});
test("lelépési -> lelépés", function() {deepEqual( Stem("lelépési"), "lelépés");});
test("lelógott -> lelógot", function() {deepEqual( Stem("lelógott"), "lelógot");});
test("lelógó -> lelógó", function() {deepEqual( Stem("lelógó"), "lelógó");});
test("lelőnek -> lelő", function() {deepEqual( Stem("lelőnek"), "lelő");});
test("lelőni -> lelőn", function() {deepEqual( Stem("lelőni"), "lelőn");});
test("lelőtt -> lelőt", function() {deepEqual( Stem("lelőtt"), "lelőt");});
test("lelökték -> lelökte", function() {deepEqual( Stem("lelökték"), "lelökte");});
test("lelökünk -> lel", function() {deepEqual( Stem("lelökünk"), "lel");});
test("lelökött -> lelököt", function() {deepEqual( Stem("lelökött"), "lelököt");});
test("lelövetnek -> lelövet", function() {deepEqual( Stem("lelövetnek"), "lelövet");});
test("lelövése -> lelövés", function() {deepEqual( Stem("lelövése"), "lelövés");});
test("lelövésén -> lelövés", function() {deepEqual( Stem("lelövésén"), "lelövés");});
test("lelövöm -> lelövö", function() {deepEqual( Stem("lelövöm"), "lelövö");});
test("lemaradjunk -> lemaradj", function() {deepEqual( Stem("lemaradjunk"), "lemaradj");});
test("lemaradnak -> lemar", function() {deepEqual( Stem("lemaradnak"), "lemar");});
test("lemaradni -> lemaradn", function() {deepEqual( Stem("lemaradni"), "lemaradn");});
test("lemaradok -> lemarad", function() {deepEqual( Stem("lemaradok"), "lemarad");});
test("lemaradtak -> lemaradt", function() {deepEqual( Stem("lemaradtak"), "lemaradt");});
test("lemaradtam -> lemaradt", function() {deepEqual( Stem("lemaradtam"), "lemaradt");});
test("lemaradtunk -> lemaradt", function() {deepEqual( Stem("lemaradtunk"), "lemaradt");});
test("lemaradunk -> lemarad", function() {deepEqual( Stem("lemaradunk"), "lemarad");});
test("lemaradt -> lemar", function() {deepEqual( Stem("lemaradt"), "lemar");});
test("lemaradva -> lemaradv", function() {deepEqual( Stem("lemaradva"), "lemaradv");});
test("lemaradásomat -> lemaradás", function() {deepEqual( Stem("lemaradásomat"), "lemaradás");});
test("lemaradását -> lemaradás", function() {deepEqual( Stem("lemaradását"), "lemaradás");});
test("lemaradói -> lemaradó", function() {deepEqual( Stem("lemaradói"), "lemaradó");});
test("lemaradókat -> lemaradó", function() {deepEqual( Stem("lemaradókat"), "lemaradó");});
test("lemegy -> lemegy", function() {deepEqual( Stem("lemegy"), "lemegy");});
test("lemegyek -> lemegy", function() {deepEqual( Stem("lemegyek"), "lemegy");});
test("lemegyünk -> lemegy", function() {deepEqual( Stem("lemegyünk"), "lemegy");});
test("lemenni -> lemenn", function() {deepEqual( Stem("lemenni"), "lemenn");});
test("lemennénk -> lemenne", function() {deepEqual( Stem("lemennénk"), "lemenne");});
test("lementek -> lement", function() {deepEqual( Stem("lementek"), "lement");});
test("lemész -> lemész", function() {deepEqual( Stem("lemész"), "lemész");});
test("lementem -> lement", function() {deepEqual( Stem("lementem"), "lement");});
test("lementünk -> lement", function() {deepEqual( Stem("lementünk"), "lement");});
test("lement -> lemen", function() {deepEqual( Stem("lement"), "lemen");});
test("lemenő -> lemenő", function() {deepEqual( Stem("lemenő"), "lemenő");});
test("lemerüljünk -> lemerülj", function() {deepEqual( Stem("lemerüljünk"), "lemerülj");});
test("lemerült -> lemerül", function() {deepEqual( Stem("lemerült"), "lemerül");});
test("lemesélek -> lemesél", function() {deepEqual( Stem("lemesélek"), "lemesél");});
test("lemetszés -> lemetszés", function() {deepEqual( Stem("lemetszés"), "lemetszés");});
test("lemez-alrendszereiben -> lemez-alrendszer", function() {deepEqual( Stem("lemez-alrendszereiben"), "lemez-alrendszer");});
test("lemez-alrendszerek -> lemez-alrendszer", function() {deepEqual( Stem("lemez-alrendszerek"), "lemez-alrendszer");});
test("lemez-alrendszereket -> lemez-alrendszer", function() {deepEqual( Stem("lemez-alrendszereket"), "lemez-alrendszer");});
test("lemez-alrendszerrel -> lemez-alrendszer", function() {deepEqual( Stem("lemez-alrendszerrel"), "lemez-alrendszer");});
test("lemezalrendszer -> lemezalrendszer", function() {deepEqual( Stem("lemezalrendszer"), "lemezalrendszer");});
test("lemezbolt -> lemezbol", function() {deepEqual( Stem("lemezbolt"), "lemezbol");});
test("lemezdoboz -> lemezdoboz", function() {deepEqual( Stem("lemezdoboz"), "lemezdoboz");});
test("lemezegységek -> lemezegység", function() {deepEqual( Stem("lemezegységek"), "lemezegység");});
test("lemezei -> lemez", function() {deepEqual( Stem("lemezei"), "lemez");});
test("lemezein -> lemez", function() {deepEqual( Stem("lemezein"), "lemez");});
test("lemezeinek -> lemez", function() {deepEqual( Stem("lemezeinek"), "lemez");});
test("lemezeink -> lemez", function() {deepEqual( Stem("lemezeink"), "lemez");});
test("lemezeinken -> lemez", function() {deepEqual( Stem("lemezeinken"), "lemez");});
test("lemezeiről -> lemez", function() {deepEqual( Stem("lemezeiről"), "lemez");});
test("lemezek -> lemez", function() {deepEqual( Stem("lemezek"), "lemez");});
test("lemezeken -> lemez", function() {deepEqual( Stem("lemezeken"), "lemez");});
test("lemezeket -> lemez", function() {deepEqual( Stem("lemezeket"), "lemez");});
test("lemezekhez -> lemez", function() {deepEqual( Stem("lemezekhez"), "lemez");});
test("lemezekkel -> lemez", function() {deepEqual( Stem("lemezekkel"), "lemez");});
test("lemezekké -> lemez", function() {deepEqual( Stem("lemezekké"), "lemez");});
test("lemezeknek -> lemez", function() {deepEqual( Stem("lemezeknek"), "lemez");});
test("lemezekre -> lemez", function() {deepEqual( Stem("lemezekre"), "lemez");});
test("lemezekről -> lemez", function() {deepEqual( Stem("lemezekről"), "lemez");});
test("lemezhez -> lemez", function() {deepEqual( Stem("lemezhez"), "lemez");});
test("lemeze -> lemez", function() {deepEqual( Stem("lemeze"), "lemez");});
test("lemez -> lemez", function() {deepEqual( Stem("lemez"), "lemez");});
test("lemezben -> lemez", function() {deepEqual( Stem("lemezben"), "lemez");});
test("lemezből -> lemez", function() {deepEqual( Stem("lemezből"), "lemez");});
test("lemezen -> lemez", function() {deepEqual( Stem("lemezen"), "lemez");});
test("lemezenként -> lemez", function() {deepEqual( Stem("lemezenként"), "lemez");});
test("lemezként -> lemez", function() {deepEqual( Stem("lemezként"), "lemez");});
test("lemeznek -> lemez", function() {deepEqual( Stem("lemeznek"), "lemez");});
test("lemezre -> lemez", function() {deepEqual( Stem("lemezre"), "lemez");});
test("lemezről -> lemez", function() {deepEqual( Stem("lemezről"), "lemez");});
test("lemezt -> lemez", function() {deepEqual( Stem("lemezt"), "lemez");});
test("lemezzel -> lemez", function() {deepEqual( Stem("lemezzel"), "lemez");});
test("lemezzé -> lemez", function() {deepEqual( Stem("lemezzé"), "lemez");});
test("lemezé -> lemez", function() {deepEqual( Stem("lemezé"), "lemez");});
test("lemezéhez -> lemez", function() {deepEqual( Stem("lemezéhez"), "lemez");});
test("lemezén -> lemez", function() {deepEqual( Stem("lemezén"), "lemez");});
test("lemezének -> lemez", function() {deepEqual( Stem("lemezének"), "lemez");});
test("lemezénél -> lemez", function() {deepEqual( Stem("lemezénél"), "lemez");});
test("lemezére -> lemez", function() {deepEqual( Stem("lemezére"), "lemez");});
test("lemezét -> lemez", function() {deepEqual( Stem("lemezét"), "lemez");});
test("lemezünk -> lemez", function() {deepEqual( Stem("lemezünk"), "lemez");});
test("lemezellenőrzés -> lemezellenőrzés", function() {deepEqual( Stem("lemezellenőrzés"), "lemezellenőrzés");});
test("lemezellenőrzésnek -> lemezellenőrzés", function() {deepEqual( Stem("lemezellenőrzésnek"), "lemezellenőrzés");});
test("lemezellenőrzést -> lemezellenőrzés", function() {deepEqual( Stem("lemezellenőrzést"), "lemezellenőrzés");});
test("lemezes -> lemezes", function() {deepEqual( Stem("lemezes"), "lemezes");});
test("lemezfelvétel -> lemezfelvétel", function() {deepEqual( Stem("lemezfelvétel"), "lemezfelvétel");});
test("lemezfelvételen -> lemezfelvétel", function() {deepEqual( Stem("lemezfelvételen"), "lemezfelvétel");});
test("lemezfelület -> lemezfelül", function() {deepEqual( Stem("lemezfelület"), "lemezfelül");});
test("lemezformázás -> lemezformázás", function() {deepEqual( Stem("lemezformázás"), "lemezformázás");});
test("lemezjátszó -> lemezjátszó", function() {deepEqual( Stem("lemezjátszó"), "lemezjátszó");});
test("lemezkapacitás -> lemezkapacitás", function() {deepEqual( Stem("lemezkapacitás"), "lemezkapacitás");});
test("lemezkapacitással -> lemezkapacitás", function() {deepEqual( Stem("lemezkapacitással"), "lemezkapacitás");});
test("lemezkarbantartás -> lemezkarbantartás", function() {deepEqual( Stem("lemezkarbantartás"), "lemezkarbantartás");});
test("lemezkezelési -> lemezkezelés", function() {deepEqual( Stem("lemezkezelési"), "lemezkezelés");});
test("lemezkezelés -> lemezkezelés", function() {deepEqual( Stem("lemezkezelés"), "lemezkezelés");});
test("lemezkezelésről -> lemezkezelés", function() {deepEqual( Stem("lemezkezelésről"), "lemezkezelés");});
test("lemezkezelést -> lemezkezelés", function() {deepEqual( Stem("lemezkezelést"), "lemezkezelés");});
test("lemezkiadó -> lemezkiadó", function() {deepEqual( Stem("lemezkiadó"), "lemezkiadó");});
test("lemezkiadókat -> lemezkiadó", function() {deepEqual( Stem("lemezkiadókat"), "lemezkiadó");});
test("lemezkombinációkat -> lemezkombináció", function() {deepEqual( Stem("lemezkombinációkat"), "lemezkombináció");});
test("lemezkvóták -> lemezkvóta", function() {deepEqual( Stem("lemezkvóták"), "lemezkvóta");});
test("lemezlovas -> lemezlovas", function() {deepEqual( Stem("lemezlovas"), "lemezlovas");});
test("lemezmeghajtóba -> lemezmeghajtó", function() {deepEqual( Stem("lemezmeghajtóba"), "lemezmeghajtó");});
test("lemezművelet -> lemezművel", function() {deepEqual( Stem("lemezművelet"), "lemezművel");});
test("lemezműveleteket -> lemezművelet", function() {deepEqual( Stem("lemezműveleteket"), "lemezművelet");});
test("lemeztartalomból -> lemeztartal", function() {deepEqual( Stem("lemeztartalomból"), "lemeztartal");});
test("lemezterület -> lemezterül", function() {deepEqual( Stem("lemezterület"), "lemezterül");});
test("lemezterület-foglalást -> lemezterület-foglalás", function() {deepEqual( Stem("lemezterület-foglalást"), "lemezterület-foglalás");});
test("lemezterület-számítás -> lemezterület-számítás", function() {deepEqual( Stem("lemezterület-számítás"), "lemezterület-számítás");});
test("lemezterület-veszteségekről -> lemezterület-veszteség", function() {deepEqual( Stem("lemezterület-veszteségekről"), "lemezterület-veszteség");});
test("lemezterületből -> lemezterület", function() {deepEqual( Stem("lemezterületből"), "lemezterület");});
test("lemezterületek -> lemezterület", function() {deepEqual( Stem("lemezterületek"), "lemezterület");});
test("lemezterületekből -> lemezterület", function() {deepEqual( Stem("lemezterületekből"), "lemezterület");});
test("lemezterületen -> lemezterület", function() {deepEqual( Stem("lemezterületen"), "lemezterület");});
test("lemezterületet -> lemezterület", function() {deepEqual( Stem("lemezterületet"), "lemezterület");});
test("lemezterülethez -> lemezterület", function() {deepEqual( Stem("lemezterülethez"), "lemezterület");});
test("lemezterületre -> lemezterület", function() {deepEqual( Stem("lemezterületre"), "lemezterület");});
test("lemezterülettel -> lemezterül", function() {deepEqual( Stem("lemezterülettel"), "lemezterül");});
test("lemezterületét -> lemezterület", function() {deepEqual( Stem("lemezterületét"), "lemezterület");});
test("lemeztípus -> lemeztípus", function() {deepEqual( Stem("lemeztípus"), "lemeztípus");});
test("lemeztükör -> lemeztükör", function() {deepEqual( Stem("lemeztükör"), "lemeztükör");});
test("lemeztükörről -> lemeztükör", function() {deepEqual( Stem("lemeztükörről"), "lemeztükör");});
test("lemezvezérlőhöz -> lemezvezérlő", function() {deepEqual( Stem("lemezvezérlőhöz"), "lemezvezérlő");});
test("lemondana -> lemondan", function() {deepEqual( Stem("lemondana"), "lemondan");});
test("lemondani -> lemondan", function() {deepEqual( Stem("lemondani"), "lemondan");});
test("lemondania -> lemondan", function() {deepEqual( Stem("lemondania"), "lemondan");});
test("lemondaniuk -> lemondan", function() {deepEqual( Stem("lemondaniuk"), "lemondan");});
test("lemondhat -> lemondh", function() {deepEqual( Stem("lemondhat"), "lemondh");});
test("lemondhatnak -> lemondhat", function() {deepEqual( Stem("lemondhatnak"), "lemondhat");});
test("lemondhatok -> lemondhat", function() {deepEqual( Stem("lemondhatok"), "lemondhat");});
test("lemond -> lemon", function() {deepEqual( Stem("lemond"), "lemon");});
test("lemondjanak -> lemond", function() {deepEqual( Stem("lemondjanak"), "lemond");});
test("lemondjon -> lemondj", function() {deepEqual( Stem("lemondjon"), "lemondj");});
test("lemondják -> lemondja", function() {deepEqual( Stem("lemondják"), "lemondja");});
test("lemondok -> lemond", function() {deepEqual( Stem("lemondok"), "lemond");});
test("lemondtak -> lemondt", function() {deepEqual( Stem("lemondtak"), "lemondt");});
test("lemondtam -> lemondt", function() {deepEqual( Stem("lemondtam"), "lemondt");});
test("lemondták -> lemondta", function() {deepEqual( Stem("lemondták"), "lemondta");});
test("lemondunk -> lemond", function() {deepEqual( Stem("lemondunk"), "lemond");});
test("lemondott -> lemondot", function() {deepEqual( Stem("lemondott"), "lemondot");});
test("lemondva -> lemondv", function() {deepEqual( Stem("lemondva"), "lemondv");});
test("lemondás -> lemondás", function() {deepEqual( Stem("lemondás"), "lemondás");});
test("lemondása -> lemondás", function() {deepEqual( Stem("lemondása"), "lemondás");});
test("lemondásra -> lemondás", function() {deepEqual( Stem("lemondásra"), "lemondás");});
test("lemondással -> lemondás", function() {deepEqual( Stem("lemondással"), "lemondás");});
test("lemondást -> lemondás", function() {deepEqual( Stem("lemondást"), "lemondás");});
test("lemondását -> lemondás", function() {deepEqual( Stem("lemondását"), "lemondás");});
test("lemondó -> lemondó", function() {deepEqual( Stem("lemondó"), "lemondó");});
test("lemondóan -> lemondó", function() {deepEqual( Stem("lemondóan"), "lemondó");});
test("lemorzsolódó -> lemorzsolódó", function() {deepEqual( Stem("lemorzsolódó"), "lemorzsolódó");});
test("lemosni -> lemosn", function() {deepEqual( Stem("lemosni"), "lemosn");});
test("lemossa -> lemoss", function() {deepEqual( Stem("lemossa"), "lemoss");});
test("lemosta -> lemost", function() {deepEqual( Stem("lemosta"), "lemost");});
test("lemostuk -> lemost", function() {deepEqual( Stem("lemostuk"), "lemost");});
test("lemosva -> lemosv", function() {deepEqual( Stem("lemosva"), "lemosv");});
test("lemállott -> lemállot", function() {deepEqual( Stem("lemállott"), "lemállot");});
test("lemásolható -> lemásolható", function() {deepEqual( Stem("lemásolható"), "lemásolható");});
test("lemásoljuk -> lemásol", function() {deepEqual( Stem("lemásoljuk"), "lemásol");});
test("lemásoltam -> lemásolt", function() {deepEqual( Stem("lemásoltam"), "lemásolt");});
test("lemásolt -> lemásol", function() {deepEqual( Stem("lemásolt"), "lemásol");});
test("lemásolás -> lemásolás", function() {deepEqual( Stem("lemásolás"), "lemásolás");});
test("lemásolása -> lemásolás", function() {deepEqual( Stem("lemásolása"), "lemásolás");});
test("lemásolására -> lemásolás", function() {deepEqual( Stem("lemásolására"), "lemásolás");});
test("lemászik -> lemász", function() {deepEqual( Stem("lemászik"), "lemász");});
test("lemászni -> lemászn", function() {deepEqual( Stem("lemászni"), "lemászn");});
test("lemászva -> lemászv", function() {deepEqual( Stem("lemászva"), "lemászv");});
test("lemérjék -> lemérje", function() {deepEqual( Stem("lemérjék"), "lemérje");});
test("lemérni -> lemérn", function() {deepEqual( Stem("lemérni"), "lemérn");});
test("lemérték -> lemérte", function() {deepEqual( Stem("lemérték"), "lemérte");});
test("lemészárlása -> lemészárlás", function() {deepEqual( Stem("lemészárlása"), "lemészárlás");});
test("lemészárlásáról -> lemészárlás", function() {deepEqual( Stem("lemészárlásáról"), "lemészárlás");});
test("lemészárolt -> lemészárol", function() {deepEqual( Stem("lemészárolt"), "lemészárol");});
test("lencsehegyi -> lencsehegy", function() {deepEqual( Stem("lencsehegyi"), "lencsehegy");});
test("lencsehegyinek -> lencsehegy", function() {deepEqual( Stem("lencsehegyinek"), "lencsehegy");});
test("lencséjét -> lencsé", function() {deepEqual( Stem("lencséjét"), "lencsé");});
test("lencsék -> lencse", function() {deepEqual( Stem("lencsék"), "lencse");});
test("lendkerék -> lendkere", function() {deepEqual( Stem("lendkerék"), "lendkere");});
test("lendített -> lendítet", function() {deepEqual( Stem("lendített"), "lendítet");});
test("lendítettem -> lendített", function() {deepEqual( Stem("lendítettem"), "lendített");});
test("lendíthetne -> lendíthetn", function() {deepEqual( Stem("lendíthetne"), "lendíthetn");});
test("lendítése -> lendítés", function() {deepEqual( Stem("lendítése"), "lendítés");});
test("lendül -> len", function() {deepEqual( Stem("lendül"), "len");});
test("lendület -> lendül", function() {deepEqual( Stem("lendület"), "lendül");});
test("lendületben -> lendület", function() {deepEqual( Stem("lendületben"), "lendület");});
test("lendülete -> lendület", function() {deepEqual( Stem("lendülete"), "lendület");});
test("lendületet -> lendület", function() {deepEqual( Stem("lendületet"), "lendület");});
test("lendülettel -> lendül", function() {deepEqual( Stem("lendülettel"), "lendül");});
test("lendületének -> lendület", function() {deepEqual( Stem("lendületének"), "lendület");});
test("lendületét -> lendület", function() {deepEqual( Stem("lendületét"), "lendület");});
test("lendületes -> lendületes", function() {deepEqual( Stem("lendületes"), "lendületes");});
test("lendületességével -> lendületesség", function() {deepEqual( Stem("lendületességével"), "lendületesség");});
test("lendült -> lendül", function() {deepEqual( Stem("lendült"), "lendül");});
test("lene -> len", function() {deepEqual( Stem("lene"), "len");});
test("lengedezett -> lengedezet", function() {deepEqual( Stem("lengedezett"), "lengedezet");});
test("lengett -> lenget", function() {deepEqual( Stem("lengett"), "lenget");});
test("leng -> leng", function() {deepEqual( Stem("leng"), "leng");});
test("lengette -> lengett", function() {deepEqual( Stem("lengette"), "lengett");});
test("lenget -> leng", function() {deepEqual( Stem("lenget"), "leng");});
test("lengyel -> lengyel", function() {deepEqual( Stem("lengyel"), "lengyel");});
test("lengyelek -> lengyel", function() {deepEqual( Stem("lengyelek"), "lengyel");});
test("lengyelekből -> lengyel", function() {deepEqual( Stem("lengyelekből"), "lengyel");});
test("lengyeleket -> lengyel", function() {deepEqual( Stem("lengyeleket"), "lengyel");});
test("lengyelekkel -> lengyel", function() {deepEqual( Stem("lengyelekkel"), "lengyel");});
test("lengyeleknél -> lengyel", function() {deepEqual( Stem("lengyeleknél"), "lengyel");});
test("lengyelországi -> lengyelország", function() {deepEqual( Stem("lengyelországi"), "lengyelország");});
test("lengéscsillapítók -> lengéscsillapító", function() {deepEqual( Stem("lengéscsillapítók"), "lengéscsillapító");});
test("lengő -> lengő", function() {deepEqual( Stem("lengő"), "lengő");});
test("lengőkapu -> lengőkapu", function() {deepEqual( Stem("lengőkapu"), "lengőkapu");});
test("leni -> len", function() {deepEqual( Stem("leni"), "len");});
test("leninizmus -> leninizmus", function() {deepEqual( Stem("leninizmus"), "leninizmus");});
test("leninizmuson -> leninizmus", function() {deepEqual( Stem("leninizmuson"), "leninizmus");});
test("lenn -> len", function() {deepEqual( Stem("lenn"), "len");});
test("lenne -> lenn", function() {deepEqual( Stem("lenne"), "lenn");});
test("lenne -> lenn", function() {deepEqual( Stem("lenne"), "lenn");});
test("lenned -> lenn", function() {deepEqual( Stem("lenned"), "lenn");});
test("lennem -> lenn", function() {deepEqual( Stem("lennem"), "lenn");});
test("lenni -> lenn", function() {deepEqual( Stem("lenni"), "lenn");});
test("lennie -> lenn", function() {deepEqual( Stem("lennie"), "lenn");});
test("lenniük -> lenn", function() {deepEqual( Stem("lenniük"), "lenn");});
test("lennék -> lenne", function() {deepEqual( Stem("lennék"), "lenne");});
test("lennél -> len", function() {deepEqual( Stem("lennél"), "len");});
test("lennének -> lenn", function() {deepEqual( Stem("lennének"), "lenn");});
test("lennénk -> lenne", function() {deepEqual( Stem("lennénk"), "lenne");});
test("lennétek -> lennét", function() {deepEqual( Stem("lennétek"), "lennét");});
test("lennünk -> lenn", function() {deepEqual( Stem("lennünk"), "lenn");});
test("lesz -> lesz", function() {deepEqual( Stem("lesz"), "lesz");});
test("leszek -> lesz", function() {deepEqual( Stem("leszek"), "lesz");});
test("leszel -> leszel", function() {deepEqual( Stem("leszel"), "leszel");});
test("lesznek -> lesz", function() {deepEqual( Stem("lesznek"), "lesz");});
test("lesztek -> leszt", function() {deepEqual( Stem("lesztek"), "leszt");});
test("leszünk -> lesz", function() {deepEqual( Stem("leszünk"), "lesz");});
test("lettem -> lett", function() {deepEqual( Stem("lettem"), "lett");});
test("lettél -> lettél", function() {deepEqual( Stem("lettél"), "lettél");});
test("lenti -> lent", function() {deepEqual( Stem("lenti"), "lent");});
test("lenullázzuk -> lenullázz", function() {deepEqual( Stem("lenullázzuk"), "lenullázz");});
test("lenyelhető -> lenyelhető", function() {deepEqual( Stem("lenyelhető"), "lenyelhető");});
test("lenyelnek -> lenyel", function() {deepEqual( Stem("lenyelnek"), "lenyel");});
test("lenyelni -> lenyeln", function() {deepEqual( Stem("lenyelni"), "lenyeln");});
test("lenyelte -> lenyelt", function() {deepEqual( Stem("lenyelte"), "lenyelt");});
test("lenyelt -> lenyel", function() {deepEqual( Stem("lenyelt"), "lenyel");});
test("lenyomatot -> lenyomat", function() {deepEqual( Stem("lenyomatot"), "lenyomat");});
test("lenyomja -> lenyom", function() {deepEqual( Stem("lenyomja"), "lenyom");});
test("lenyomtam -> lenyomt", function() {deepEqual( Stem("lenyomtam"), "lenyomt");});
test("lenyomva -> lenyomv", function() {deepEqual( Stem("lenyomva"), "lenyomv");});
test("lenyugodott -> lenyugodot", function() {deepEqual( Stem("lenyugodott"), "lenyugodot");});
test("lenyugodni -> lenyugodn", function() {deepEqual( Stem("lenyugodni"), "lenyugodn");});
test("lenyugodtak -> lenyugodt", function() {deepEqual( Stem("lenyugodtak"), "lenyugodt");});
test("lenyugvó -> lenyugvó", function() {deepEqual( Stem("lenyugvó"), "lenyugvó");});
test("lenyírta -> lenyírt", function() {deepEqual( Stem("lenyírta"), "lenyírt");});
test("lenyúlt -> lenyúl", function() {deepEqual( Stem("lenyúlt"), "lenyúl");});
test("lenyűgöztek -> lenyűgözt", function() {deepEqual( Stem("lenyűgöztek"), "lenyűgözt");});
test("lenyűgöző -> lenyűgöző", function() {deepEqual( Stem("lenyűgöző"), "lenyűgöző");});
test("lenyűgözően -> lenyűgöző", function() {deepEqual( Stem("lenyűgözően"), "lenyűgöző");});
test("lenyűgözőnek -> lenyűgöző", function() {deepEqual( Stem("lenyűgözőnek"), "lenyűgöző");});
test("lenyűgözött -> lenyűgözöt", function() {deepEqual( Stem("lenyűgözött"), "lenyűgözöt");});
test("lenézett -> lenézet", function() {deepEqual( Stem("lenézett"), "lenézet");});
test("lenéz -> lenéz", function() {deepEqual( Stem("lenéz"), "lenéz");});
test("lenézi -> lenéz", function() {deepEqual( Stem("lenézi"), "lenéz");});
test("lenézik -> lenéz", function() {deepEqual( Stem("lenézik"), "lenéz");});
test("lenéznek -> lenéz", function() {deepEqual( Stem("lenéznek"), "lenéz");});
test("lenézni -> lenézn", function() {deepEqual( Stem("lenézni"), "lenézn");});
test("lenézte -> lenézt", function() {deepEqual( Stem("lenézte"), "lenézt");});
test("lenéztem -> lenézt", function() {deepEqual( Stem("lenéztem"), "lenézt");});
test("leolvadás -> leolvadás", function() {deepEqual( Stem("leolvadás"), "leolvadás");});
test("leolvasta -> leolvast", function() {deepEqual( Stem("leolvasta"), "leolvast");});
test("leolvasása -> leolvasás", function() {deepEqual( Stem("leolvasása"), "leolvasás");});
test("leolvasóba -> leolvasó", function() {deepEqual( Stem("leolvasóba"), "leolvasó");});
test("leosont -> leoson", function() {deepEqual( Stem("leosont"), "leoson");});
test("lepakolhatta -> lepakolhatt", function() {deepEqual( Stem("lepakolhatta"), "lepakolhatt");});
test("lepakolt -> lepakol", function() {deepEqual( Stem("lepakolt"), "lepakol");});
test("lepakolni -> lepakoln", function() {deepEqual( Stem("lepakolni"), "lepakoln");});
test("lepakoltuk -> lepakolt", function() {deepEqual( Stem("lepakoltuk"), "lepakolt");});
test("lepakoltunk -> lepakolt", function() {deepEqual( Stem("lepakoltunk"), "lepakolt");});
test("lepakolunk -> lepakol", function() {deepEqual( Stem("lepakolunk"), "lepakol");});
test("leparkolni -> leparkoln", function() {deepEqual( Stem("leparkolni"), "leparkoln");});
test("leparkoltunk -> leparkolt", function() {deepEqual( Stem("leparkoltunk"), "leparkolt");});
test("lepattant -> lepattan", function() {deepEqual( Stem("lepattant"), "lepattan");});
test("lepattanót -> lepattanó", function() {deepEqual( Stem("lepattanót"), "lepattanó");});
test("lepattintja -> lepattint", function() {deepEqual( Stem("lepattintja"), "lepattint");});
test("lepecsételt -> lepecsétel", function() {deepEqual( Stem("lepecsételt"), "lepecsétel");});
test("lepecsételték -> lepecsételte", function() {deepEqual( Stem("lepecsételték"), "lepecsételte");});
test("lepecsételve -> lepecsételv", function() {deepEqual( Stem("lepecsételve"), "lepecsételv");});
test("lepedő -> lepedő", function() {deepEqual( Stem("lepedő"), "lepedő");});
test("lepedőbe -> lepedő", function() {deepEqual( Stem("lepedőbe"), "lepedő");});
test("lepedőben -> lepedő", function() {deepEqual( Stem("lepedőben"), "lepedő");});
test("lepedőket -> lepedő", function() {deepEqual( Stem("lepedőket"), "lepedő");});
test("lepedőn -> lepedő", function() {deepEqual( Stem("lepedőn"), "lepedő");});
test("lepedővel -> lepedő", function() {deepEqual( Stem("lepedővel"), "lepedő");});
test("lepel -> lepel", function() {deepEqual( Stem("lepel"), "lepel");});
test("lepellel -> lepel", function() {deepEqual( Stem("lepellel"), "lepel");});
test("lepett -> lepet", function() {deepEqual( Stem("lepett"), "lepet");});
test("lepihenjek -> lepihenj", function() {deepEqual( Stem("lepihenjek"), "lepihenj");});
test("lepihentem -> lepihent", function() {deepEqual( Stem("lepihentem"), "lepihent");});
test("lepihentünk -> lepihent", function() {deepEqual( Stem("lepihentünk"), "lepihent");});
test("lepihenünk -> lepihen", function() {deepEqual( Stem("lepihenünk"), "lepihen");});
test("lepihent -> lepihen", function() {deepEqual( Stem("lepihent"), "lepihen");});
test("lepirultunk -> lepirult", function() {deepEqual( Stem("lepirultunk"), "lepirult");});
test("lepiszkálni -> lepiszkáln", function() {deepEqual( Stem("lepiszkálni"), "lepiszkáln");});
test("lepkét -> lep", function() {deepEqual( Stem("lepkét"), "lep");});
test("leplezetlen -> leplezetl", function() {deepEqual( Stem("leplezetlen"), "leplezetl");});
test("leplezetlenül -> leplezetlen", function() {deepEqual( Stem("leplezetlenül"), "leplezetlen");});
test("leplezett -> leplezet", function() {deepEqual( Stem("leplezett"), "leplezet");});
test("leplezni -> leplezn", function() {deepEqual( Stem("leplezni"), "leplezn");});
test("leplezte -> leplezt", function() {deepEqual( Stem("leplezte"), "leplezt");});
test("leplezze -> leplezz", function() {deepEqual( Stem("leplezze"), "leplezz");});
test("leplezve -> leplezv", function() {deepEqual( Stem("leplezve"), "leplezv");});
test("lepi -> lep", function() {deepEqual( Stem("lepi"), "lep");});
test("lepik -> lep", function() {deepEqual( Stem("lepik"), "lep");});
test("lepne -> lepn", function() {deepEqual( Stem("lepne"), "lepn");});
test("lepte -> lept", function() {deepEqual( Stem("lepte"), "lept");});
test("leptek -> lept", function() {deepEqual( Stem("leptek"), "lept");});
test("lepték -> lepte", function() {deepEqual( Stem("lepték"), "lepte");});
test("leporolni -> leporoln", function() {deepEqual( Stem("leporolni"), "leporoln");});
test("leporolta -> leporolt", function() {deepEqual( Stem("leporolta"), "leporolt");});
test("lepottyantják -> lepottyantja", function() {deepEqual( Stem("lepottyantják"), "lepottyantja");});
test("leprások -> leprás", function() {deepEqual( Stem("leprások"), "leprás");});
test("leprája -> leprá", function() {deepEqual( Stem("leprája"), "leprá");});
test("leprát -> lepr", function() {deepEqual( Stem("leprát"), "lepr");});
test("leprával -> lepr", function() {deepEqual( Stem("leprával"), "lepr");});
test("lepuffantanák -> lepuffantana", function() {deepEqual( Stem("lepuffantanák"), "lepuffantana");});
test("lepukkant -> lepukkan", function() {deepEqual( Stem("lepukkant"), "lepukkan");});
test("lepusztul -> lepuszt", function() {deepEqual( Stem("lepusztul"), "lepuszt");});
test("lepusztult -> lepusztul", function() {deepEqual( Stem("lepusztult"), "lepusztul");});
test("lepusztultak -> lepusztult", function() {deepEqual( Stem("lepusztultak"), "lepusztult");});
test("lepve -> lepv", function() {deepEqual( Stem("lepve"), "lepv");});
test("lepények -> lepény", function() {deepEqual( Stem("lepények"), "lepény");});
test("lepődve -> lepődv", function() {deepEqual( Stem("lepődve"), "lepődv");});
test("lepődött -> lepődöt", function() {deepEqual( Stem("lepődött"), "lepődöt");});
test("leradírozták -> leradírozta", function() {deepEqual( Stem("leradírozták"), "leradírozta");});
test("leragad -> lerag", function() {deepEqual( Stem("leragad"), "lerag");});
test("leragadok -> leragad", function() {deepEqual( Stem("leragadok"), "leragad");});
test("leragadtam -> leragadt", function() {deepEqual( Stem("leragadtam"), "leragadt");});
test("leragadt -> lerag", function() {deepEqual( Stem("leragadt"), "lerag");});
test("lerajzolom -> lerajzol", function() {deepEqual( Stem("lerajzolom"), "lerajzol");});
test("lerajzolta -> lerajzolt", function() {deepEqual( Stem("lerajzolta"), "lerajzolt");});
test("lerakodnak -> ler", function() {deepEqual( Stem("lerakodnak"), "ler");});
test("lerakni -> lerakn", function() {deepEqual( Stem("lerakni"), "lerakn");});
test("lerakom -> ler", function() {deepEqual( Stem("lerakom"), "ler");});
test("leraktam -> lerakt", function() {deepEqual( Stem("leraktam"), "lerakt");});
test("lerakták -> lerakta", function() {deepEqual( Stem("lerakták"), "lerakta");});
test("lerakott -> lerakot", function() {deepEqual( Stem("lerakott"), "lerakot");});
test("lerakva -> lerakv", function() {deepEqual( Stem("lerakva"), "lerakv");});
test("lerakását -> lerakás", function() {deepEqual( Stem("lerakását"), "lerakás");});
test("lerakó -> lerakó", function() {deepEqual( Stem("lerakó"), "lerakó");});
test("lerakóba -> lerakó", function() {deepEqual( Stem("lerakóba"), "lerakó");});
test("lerakókba -> lerakó", function() {deepEqual( Stem("lerakókba"), "lerakó");});
test("lerakón -> lerakó", function() {deepEqual( Stem("lerakón"), "lerakó");});
test("lerakótól -> lerakó", function() {deepEqual( Stem("lerakótól"), "lerakó");});
test("lerakódott -> lerakódot", function() {deepEqual( Stem("lerakódott"), "lerakódot");});
test("lerepült -> lerepül", function() {deepEqual( Stem("lerepült"), "lerepül");});
test("lerepültem -> lerepült", function() {deepEqual( Stem("lerepültem"), "lerepült");});
test("lerobbant -> lerobban", function() {deepEqual( Stem("lerobbant"), "lerobban");});
test("lerobbanva -> lerobbanv", function() {deepEqual( Stem("lerobbanva"), "lerobbanv");});
test("lerogyott -> lerogyot", function() {deepEqual( Stem("lerogyott"), "lerogyot");});
test("lerohadt -> leroh", function() {deepEqual( Stem("lerohadt"), "leroh");});
test("lerohant -> lerohan", function() {deepEqual( Stem("lerohant"), "lerohan");});
test("lerohanni -> lerohann", function() {deepEqual( Stem("lerohanni"), "lerohann");});
test("lerohantuk -> lerohant", function() {deepEqual( Stem("lerohantuk"), "lerohant");});
test("lerohanták -> lerohanta", function() {deepEqual( Stem("lerohanták"), "lerohanta");});
test("lerohanva -> lerohanv", function() {deepEqual( Stem("lerohanva"), "lerohanv");});
test("lerombolni -> leromboln", function() {deepEqual( Stem("lerombolni"), "leromboln");});
test("lerombolták -> lerombolta", function() {deepEqual( Stem("lerombolták"), "lerombolta");});
test("lerombolása -> lerombolás", function() {deepEqual( Stem("lerombolása"), "lerombolás");});
test("leromboló -> leromboló", function() {deepEqual( Stem("leromboló"), "leromboló");});
test("leromlott -> leromlot", function() {deepEqual( Stem("leromlott"), "leromlot");});
test("leromlottakat -> leromlott", function() {deepEqual( Stem("leromlottakat"), "leromlott");});
test("lerongyolódott -> lerongyolódot", function() {deepEqual( Stem("lerongyolódott"), "lerongyolódot");});
test("lerontja -> leront", function() {deepEqual( Stem("lerontja"), "leront");});
test("lerontom -> leront", function() {deepEqual( Stem("lerontom"), "leront");});
test("lerontását -> lerontás", function() {deepEqual( Stem("lerontását"), "lerontás");});
test("leroskadva -> leroskadv", function() {deepEqual( Stem("leroskadva"), "leroskadv");});
test("leruccantunk -> leruccant", function() {deepEqual( Stem("leruccantunk"), "leruccant");});
test("lerágnák -> lerágna", function() {deepEqual( Stem("lerágnák"), "lerágna");});
test("lerágott -> lerágot", function() {deepEqual( Stem("lerágott"), "lerágot");});
test("leráncigálta -> leráncigált", function() {deepEqual( Stem("leráncigálta"), "leráncigált");});
test("lerándultam -> lerándult", function() {deepEqual( Stem("lerándultam"), "lerándult");});
test("lerázni -> lerázn", function() {deepEqual( Stem("lerázni"), "lerázn");});
test("lerázta -> lerázt", function() {deepEqual( Stem("lerázta"), "lerázt");});
test("leráztuk -> lerázt", function() {deepEqual( Stem("leráztuk"), "lerázt");});
test("lerí -> lerí", function() {deepEqual( Stem("lerí"), "lerí");});
test("lerítt -> lerít", function() {deepEqual( Stem("lerítt"), "lerít");});
test("leróni -> lerón", function() {deepEqual( Stem("leróni"), "lerón");});
test("lerótt -> lerót", function() {deepEqual( Stem("lerótt"), "lerót");});
test("lerótta -> lerótt", function() {deepEqual( Stem("lerótta"), "lerótt");});
test("lerövidítette -> lerövidített", function() {deepEqual( Stem("lerövidítette"), "lerövidített");});
test("lerövidíti -> lerövidít", function() {deepEqual( Stem("lerövidíti"), "lerövidít");});
test("lerövidítjük -> lerövidít", function() {deepEqual( Stem("lerövidítjük"), "lerövidít");});
test("lerövidül -> leröv", function() {deepEqual( Stem("lerövidül"), "leröv");});
test("lerövidülhet -> lerövidülh", function() {deepEqual( Stem("lerövidülhet"), "lerövidülh");});
test("lerúgtam -> lerúgt", function() {deepEqual( Stem("lerúgtam"), "lerúgt");});
test("les -> les", function() {deepEqual( Stem("les"), "les");});
test("lesnek -> les", function() {deepEqual( Stem("lesnek"), "les");});
test("lesegettük -> lesegett", function() {deepEqual( Stem("lesegettük"), "lesegett");});
test("leselkedett -> leselkedet", function() {deepEqual( Stem("leselkedett"), "leselkedet");});
test("leselkedő -> leselkedő", function() {deepEqual( Stem("leselkedő"), "leselkedő");});
test("lesietett -> lesietet", function() {deepEqual( Stem("lesietett"), "lesietet");});
test("lesiklott -> lesiklot", function() {deepEqual( Stem("lesiklott"), "lesiklot");});
test("lesliszoltam -> lesliszolt", function() {deepEqual( Stem("lesliszoltam"), "lesliszolt");});
test("lesni -> lesn", function() {deepEqual( Stem("lesni"), "lesn");});
test("lessük -> less", function() {deepEqual( Stem("lessük"), "less");});
test("lestek -> lest", function() {deepEqual( Stem("lestek"), "lest");});
test("lestük -> lest", function() {deepEqual( Stem("lestük"), "lest");});
test("lesoványodva -> lesoványodv", function() {deepEqual( Stem("lesoványodva"), "lesoványodv");});
test("lesre -> les", function() {deepEqual( Stem("lesre"), "les");});
test("lest -> les", function() {deepEqual( Stem("lest"), "les");});
test("lesrófolhatom -> lesrófolhat", function() {deepEqual( Stem("lesrófolhatom"), "lesrófolhat");});
test("leszakadt -> lesz", function() {deepEqual( Stem("leszakadt"), "lesz");});
test("leszakított -> leszakítot", function() {deepEqual( Stem("leszakított"), "leszakítot");});
test("leszaladnak -> leszal", function() {deepEqual( Stem("leszaladnak"), "leszal");});
test("leszavazta -> leszavazt", function() {deepEqual( Stem("leszavazta"), "leszavazt");});
test("leszedem -> leszed", function() {deepEqual( Stem("leszedem"), "leszed");});
test("leszedik -> leszed", function() {deepEqual( Stem("leszedik"), "leszed");});
test("leszedjék -> leszedje", function() {deepEqual( Stem("leszedjék"), "leszedje");});
test("leszednem -> leszedn", function() {deepEqual( Stem("leszednem"), "leszedn");});
test("leszedte -> leszedt", function() {deepEqual( Stem("leszedte"), "leszedt");});
test("leszedtem -> leszedt", function() {deepEqual( Stem("leszedtem"), "leszedt");});
test("leszedték -> leszedte", function() {deepEqual( Stem("leszedték"), "leszedte");});
test("leszedtük -> leszedt", function() {deepEqual( Stem("leszedtük"), "leszedt");});
test("leszegve -> leszegv", function() {deepEqual( Stem("leszegve"), "leszegv");});
test("leszerelni -> leszereln", function() {deepEqual( Stem("leszerelni"), "leszereln");});
test("leszerelte -> leszerelt", function() {deepEqual( Stem("leszerelte"), "leszerelt");});
test("leszereltem -> leszerelt", function() {deepEqual( Stem("leszereltem"), "leszerelt");});
test("leszerelt -> leszerel", function() {deepEqual( Stem("leszerelt"), "leszerel");});
test("leszerelése -> leszerelés", function() {deepEqual( Stem("leszerelése"), "leszerelés");});
test("leszerelő -> leszerelő", function() {deepEqual( Stem("leszerelő"), "leszerelő");});
test("leszidnám -> leszidna", function() {deepEqual( Stem("leszidnám"), "leszidna");});
test("leszidott -> leszidot", function() {deepEqual( Stem("leszidott"), "leszidot");});
test("leszidásomat -> leszidás", function() {deepEqual( Stem("leszidásomat"), "leszidás");});
test("leszokott -> leszokot", function() {deepEqual( Stem("leszokott"), "leszokot");});
test("leszoktam -> leszokt", function() {deepEqual( Stem("leszoktam"), "leszokt");});
test("leszolgált -> leszolgál", function() {deepEqual( Stem("leszolgált"), "leszolgál");});
test("leszorítani -> leszorítan", function() {deepEqual( Stem("leszorítani"), "leszorítan");});
test("leszorítja -> leszorít", function() {deepEqual( Stem("leszorítja"), "leszorít");});
test("leszorított -> leszorítot", function() {deepEqual( Stem("leszorított"), "leszorítot");});
test("leszorította -> leszorított", function() {deepEqual( Stem("leszorította"), "leszorított");});
test("leszorításában -> leszorítás", function() {deepEqual( Stem("leszorításában"), "leszorítás");});
test("leszurkolásával -> leszurkolás", function() {deepEqual( Stem("leszurkolásával"), "leszurkolás");});
test("leszáll -> leszáll", function() {deepEqual( Stem("leszáll"), "leszáll");});
test("leszállnak -> leszáll", function() {deepEqual( Stem("leszállnak"), "leszáll");});
test("leszállni -> leszálln", function() {deepEqual( Stem("leszállni"), "leszálln");});
test("leszállok -> leszáll", function() {deepEqual( Stem("leszállok"), "leszáll");});
test("leszálltam -> leszállt", function() {deepEqual( Stem("leszálltam"), "leszállt");});
test("leszálltunk -> leszállt", function() {deepEqual( Stem("leszálltunk"), "leszállt");});
test("leszállunk -> leszáll", function() {deepEqual( Stem("leszállunk"), "leszáll");});
test("leszállt -> leszáll", function() {deepEqual( Stem("leszállt"), "leszáll");});
test("leszállva -> leszállv", function() {deepEqual( Stem("leszállva"), "leszállv");});
test("leszállás -> leszállás", function() {deepEqual( Stem("leszállás"), "leszállás");});
test("leszálláshoz -> leszállás", function() {deepEqual( Stem("leszálláshoz"), "leszállás");});
test("leszállást -> leszállás", function() {deepEqual( Stem("leszállást"), "leszállás");});
test("leszállástól -> leszállás", function() {deepEqual( Stem("leszállástól"), "leszállás");});
test("leszállíthatja -> leszállíthat", function() {deepEqual( Stem("leszállíthatja"), "leszállíthat");});
test("leszállíthatják -> leszállíthatja", function() {deepEqual( Stem("leszállíthatják"), "leszállíthatja");});
test("leszállítani -> leszállítan", function() {deepEqual( Stem("leszállítani"), "leszállítan");});
test("leszállítja -> leszállít", function() {deepEqual( Stem("leszállítja"), "leszállít");});
test("leszállítják -> leszállítja", function() {deepEqual( Stem("leszállítják"), "leszállítja");});
test("leszállította -> leszállított", function() {deepEqual( Stem("leszállította"), "leszállított");});
test("leszállítottam -> leszállított", function() {deepEqual( Stem("leszállítottam"), "leszállított");});
test("leszállították -> leszállította", function() {deepEqual( Stem("leszállították"), "leszállította");});
test("leszállított -> leszállítot", function() {deepEqual( Stem("leszállított"), "leszállítot");});
test("leszállításakor -> leszállítás", function() {deepEqual( Stem("leszállításakor"), "leszállítás");});
test("leszállítási -> leszállítás", function() {deepEqual( Stem("leszállítási"), "leszállítás");});
test("leszállítás -> leszállítás", function() {deepEqual( Stem("leszállítás"), "leszállítás");});
test("leszállítása -> leszállítás", function() {deepEqual( Stem("leszállítása"), "leszállítás");});
test("leszállításnak -> leszállítás", function() {deepEqual( Stem("leszállításnak"), "leszállítás");});
test("leszállításra -> leszállítás", function() {deepEqual( Stem("leszállításra"), "leszállítás");});
test("leszállításról -> leszállítás", function() {deepEqual( Stem("leszállításról"), "leszállítás");});
test("leszállítást -> leszállítás", function() {deepEqual( Stem("leszállítást"), "leszállítás");});
test("leszállításához -> leszállítás", function() {deepEqual( Stem("leszállításához"), "leszállítás");});
test("leszállításának -> leszállítás", function() {deepEqual( Stem("leszállításának"), "leszállítás");});
test("leszállításának -> leszállítás", function() {deepEqual( Stem("leszállításának"), "leszállítás");});
test("leszállítására -> leszállítás", function() {deepEqual( Stem("leszállítására"), "leszállítás");});
test("leszállításáról -> leszállítás", function() {deepEqual( Stem("leszállításáról"), "leszállítás");});
test("leszállítását -> leszállítás", function() {deepEqual( Stem("leszállítását"), "leszállítás");});
test("leszállításával -> leszállítás", function() {deepEqual( Stem("leszállításával"), "leszállítás");});
test("leszállófélben -> leszállófél", function() {deepEqual( Stem("leszállófélben"), "leszállófél");});
test("leszállópályaként -> leszállópály", function() {deepEqual( Stem("leszállópályaként"), "leszállópály");});
test("leszállópályát -> leszállópály", function() {deepEqual( Stem("leszállópályát"), "leszállópály");});
test("leszámolni -> leszámoln", function() {deepEqual( Stem("leszámolni"), "leszámoln");});
test("leszámolások -> leszámolás", function() {deepEqual( Stem("leszámolások"), "leszámolás");});
test("leszámolást -> leszámolás", function() {deepEqual( Stem("leszámolást"), "leszámolás");});
test("leszámítom -> leszámít", function() {deepEqual( Stem("leszámítom"), "leszámít");});
test("leszámítva -> leszámítv", function() {deepEqual( Stem("leszámítva"), "leszámítv");});
test("leszármazott -> leszármazot", function() {deepEqual( Stem("leszármazott"), "leszármazot");});
test("leszármazottai -> leszármazott", function() {deepEqual( Stem("leszármazottai"), "leszármazott");});
test("leszármazók -> leszármazó", function() {deepEqual( Stem("leszármazók"), "leszármazó");});
test("leszólja -> leszól", function() {deepEqual( Stem("leszólja"), "leszól");});
test("leszólni -> leszóln", function() {deepEqual( Stem("leszólni"), "leszóln");});
test("leszólt -> leszól", function() {deepEqual( Stem("leszólt"), "leszól");});
test("leszóltak -> leszólt", function() {deepEqual( Stem("leszóltak"), "leszólt");});
test("leszórja -> leszór", function() {deepEqual( Stem("leszórja"), "leszór");});
test("leszóródott -> leszóródot", function() {deepEqual( Stem("leszóródott"), "leszóródot");});
test("leszögezem -> leszögez", function() {deepEqual( Stem("leszögezem"), "leszögez");});
test("leszögezi -> leszögez", function() {deepEqual( Stem("leszögezi"), "leszögez");});
test("leszögezik -> leszögez", function() {deepEqual( Stem("leszögezik"), "leszögez");});
test("leszögezni -> leszögezn", function() {deepEqual( Stem("leszögezni"), "leszögezn");});
test("leszögezte -> leszögezt", function() {deepEqual( Stem("leszögezte"), "leszögezt");});
test("leszögezzük -> leszögezz", function() {deepEqual( Stem("leszögezzük"), "leszögezz");});
test("leszögezve -> leszögezv", function() {deepEqual( Stem("leszögezve"), "leszögezv");});
test("leszúr -> leszúr", function() {deepEqual( Stem("leszúr"), "leszúr");});
test("leszúrja -> leszúr", function() {deepEqual( Stem("leszúrja"), "leszúr");});
test("leszúrni -> leszúrn", function() {deepEqual( Stem("leszúrni"), "leszúrn");});
test("leszúrtam -> leszúrt", function() {deepEqual( Stem("leszúrtam"), "leszúrt");});
test("leszúráshoz -> leszúrás", function() {deepEqual( Stem("leszúráshoz"), "leszúrás");});
test("leszűkítenem -> leszűkíten", function() {deepEqual( Stem("leszűkítenem"), "leszűkíten");});
test("leszűkítette -> leszűkített", function() {deepEqual( Stem("leszűkítette"), "leszűkített");});
test("leszűkült -> leszűkül", function() {deepEqual( Stem("leszűkült"), "leszűkül");});
test("leszűrheti -> leszűrhet", function() {deepEqual( Stem("leszűrheti"), "leszűrhet");});
test("leszűrhette -> leszűrhett", function() {deepEqual( Stem("leszűrhette"), "leszűrhett");});
test("leszűrhető -> leszűrhető", function() {deepEqual( Stem("leszűrhető"), "leszűrhető");});
test("leszűrhetőnek -> leszűrhető", function() {deepEqual( Stem("leszűrhetőnek"), "leszűrhető");});
test("leszűrni -> leszűrn", function() {deepEqual( Stem("leszűrni"), "leszűrn");});
test("leszűrt -> leszűr", function() {deepEqual( Stem("leszűrt"), "leszűr");});
test("leszűrve -> leszűrv", function() {deepEqual( Stem("leszűrve"), "leszűrv");});
test("lesétáltak -> lesétált", function() {deepEqual( Stem("lesétáltak"), "lesétált");});
test("lesétáltunk -> lesétált", function() {deepEqual( Stem("lesétáltunk"), "lesétált");});
test("leső -> leső", function() {deepEqual( Stem("leső"), "leső");});
test("lesöpört -> lesöpör", function() {deepEqual( Stem("lesöpört"), "lesöpör");});
test("lesöpörte -> lesöpört", function() {deepEqual( Stem("lesöpörte"), "lesöpört");});
test("lesötétített -> lesötétítet", function() {deepEqual( Stem("lesötétített"), "lesötétítet");});
test("lesújthat -> lesújth", function() {deepEqual( Stem("lesújthat"), "lesújth");});
test("lesújtott -> lesújtot", function() {deepEqual( Stem("lesújtott"), "lesújtot");});
test("lesújtotta -> lesújtott", function() {deepEqual( Stem("lesújtotta"), "lesújtott");});
test("lesújtó -> lesújtó", function() {deepEqual( Stem("lesújtó"), "lesújtó");});
test("lesüllyedt -> lesülly", function() {deepEqual( Stem("lesüllyedt"), "lesülly");});
test("lesüllyedő -> lesüllyedő", function() {deepEqual( Stem("lesüllyedő"), "lesüllyedő");});
test("lesült -> lesül", function() {deepEqual( Stem("lesült"), "lesül");});
test("lesütött -> lesütöt", function() {deepEqual( Stem("lesütött"), "lesütöt");});
test("lesütötte -> lesütött", function() {deepEqual( Stem("lesütötte"), "lesütött");});
test("letagadhatatlan -> letagadhatatl", function() {deepEqual( Stem("letagadhatatlan"), "letagadhatatl");});
test("letagadhatjak -> letagadhatj", function() {deepEqual( Stem("letagadhatjak"), "letagadhatj");});
test("letagadják -> letagadja", function() {deepEqual( Stem("letagadják"), "letagadja");});
test("letagadni -> letagadn", function() {deepEqual( Stem("letagadni"), "letagadn");});
test("letagadom -> letagad", function() {deepEqual( Stem("letagadom"), "letagad");});
test("letagadta -> letagadt", function() {deepEqual( Stem("letagadta"), "letagadt");});
test("letaglózta -> letaglózt", function() {deepEqual( Stem("letaglózta"), "letaglózt");});
test("letakarta -> letakart", function() {deepEqual( Stem("letakarta"), "letakart");});
test("letakartam -> letakart", function() {deepEqual( Stem("letakartam"), "letakart");});
test("letakartuk -> letakart", function() {deepEqual( Stem("letakartuk"), "letakart");});
test("letakarva -> letakarv", function() {deepEqual( Stem("letakarva"), "letakarv");});
test("letakarított -> letakarítot", function() {deepEqual( Stem("letakarított"), "letakarítot");});
test("letakarítottam -> letakarított", function() {deepEqual( Stem("letakarítottam"), "letakarított");});
test("letapogatott -> letapogatot", function() {deepEqual( Stem("letapogatott"), "letapogatot");});
test("letapogatás -> letapogatás", function() {deepEqual( Stem("letapogatás"), "letapogatás");});
test("letapogatását -> letapogatás", function() {deepEqual( Stem("letapogatását"), "letapogatás");});
test("letaposottnak -> letaposott", function() {deepEqual( Stem("letaposottnak"), "letaposott");});
test("letargikus -> letargikus", function() {deepEqual( Stem("letargikus"), "letargikus");});
test("letargiába -> letarg", function() {deepEqual( Stem("letargiába"), "letarg");});
test("letargiájából -> letargiá", function() {deepEqual( Stem("letargiájából"), "letargiá");});
test("letartóztat -> letartózt", function() {deepEqual( Stem("letartóztat"), "letartózt");});
test("letartóztatni -> letartóztatn", function() {deepEqual( Stem("letartóztatni"), "letartóztatn");});
test("letartóztatták -> letartóztatta", function() {deepEqual( Stem("letartóztatták"), "letartóztatta");});
test("letartóztatott -> letartóztatot", function() {deepEqual( Stem("letartóztatott"), "letartóztatot");});
test("letartóztatottakat -> letartóztatott", function() {deepEqual( Stem("letartóztatottakat"), "letartóztatott");});
test("letartóztattak -> letartóztatt", function() {deepEqual( Stem("letartóztattak"), "letartóztatt");});
test("letartóztatása -> letartóztatás", function() {deepEqual( Stem("letartóztatása"), "letartóztatás");});
test("letartóztatásban -> letartóztatás", function() {deepEqual( Stem("letartóztatásban"), "letartóztatás");});
test("letartóztatások -> letartóztatás", function() {deepEqual( Stem("letartóztatások"), "letartóztatás");});
test("letartóztatásom -> letartóztatás", function() {deepEqual( Stem("letartóztatásom"), "letartóztatás");});
test("letartóztatásról -> letartóztatás", function() {deepEqual( Stem("letartóztatásról"), "letartóztatás");});
test("letartóztatásáig -> letartóztatás", function() {deepEqual( Stem("letartóztatásáig"), "letartóztatás");});
test("letartóztatásának -> letartóztatás", function() {deepEqual( Stem("letartóztatásának"), "letartóztatás");});
test("letartóztatására -> letartóztatás", function() {deepEqual( Stem("letartóztatására"), "letartóztatás");});
test("letartóztatását -> letartóztatás", function() {deepEqual( Stem("letartóztatását"), "letartóztatás");});
test("leteendő -> leteendő", function() {deepEqual( Stem("leteendő"), "leteendő");});
test("letekingetnek -> letekinget", function() {deepEqual( Stem("letekingetnek"), "letekinget");});
test("letelepedett -> letelepedet", function() {deepEqual( Stem("letelepedett"), "letelepedet");});
test("letelepedhettünk -> letelepedhett", function() {deepEqual( Stem("letelepedhettünk"), "letelepedhett");});
test("letelepedni -> letelepedn", function() {deepEqual( Stem("letelepedni"), "letelepedn");});
test("letelepednünk -> letelepedn", function() {deepEqual( Stem("letelepednünk"), "letelepedn");});
test("letelepedtünk -> letelepedt", function() {deepEqual( Stem("letelepedtünk"), "letelepedt");});
test("letelepedési -> letelepedés", function() {deepEqual( Stem("letelepedési"), "letelepedés");});
test("letelepedéshez -> letelepedés", function() {deepEqual( Stem("letelepedéshez"), "letelepedés");});
test("letelepedéstől -> letelepedés", function() {deepEqual( Stem("letelepedéstől"), "letelepedés");});
test("letelepedésének -> letelepedés", function() {deepEqual( Stem("letelepedésének"), "letelepedés");});
test("letelik -> letel", function() {deepEqual( Stem("letelik"), "letel");});
test("letelte -> letelt", function() {deepEqual( Stem("letelte"), "letelt");});
test("leteltét -> letelt", function() {deepEqual( Stem("leteltét"), "letelt");});
test("leteltével -> letelt", function() {deepEqual( Stem("leteltével"), "letelt");});
test("letelt -> letel", function() {deepEqual( Stem("letelt"), "letel");});
test("leterheltsége -> leterheltség", function() {deepEqual( Stem("leterheltsége"), "leterheltség");});
test("leterheltségének -> leterheltség", function() {deepEqual( Stem("leterheltségének"), "leterheltség");});
test("leterítettük -> leterített", function() {deepEqual( Stem("leterítettük"), "leterített");});
test("leterítettünk -> leterített", function() {deepEqual( Stem("leterítettünk"), "leterített");});
test("letenne -> letenn", function() {deepEqual( Stem("letenne"), "letenn");});
test("letenni -> letenn", function() {deepEqual( Stem("letenni"), "letenn");});
test("letesz -> letesz", function() {deepEqual( Stem("letesz"), "letesz");});
test("leteszi -> letesz", function() {deepEqual( Stem("leteszi"), "letesz");});
test("leteszik -> letesz", function() {deepEqual( Stem("leteszik"), "letesz");});
test("letette -> letett", function() {deepEqual( Stem("letette"), "letett");});
test("letettem -> letett", function() {deepEqual( Stem("letettem"), "letett");});
test("letették -> letette", function() {deepEqual( Stem("letették"), "letette");});
test("letettük -> letett", function() {deepEqual( Stem("letettük"), "letett");});
test("letevő -> letevő", function() {deepEqual( Stem("letevő"), "letevő");});
test("letilt -> letil", function() {deepEqual( Stem("letilt"), "letil");});
test("letiltani -> letiltan", function() {deepEqual( Stem("letiltani"), "letiltan");});
test("letiltható -> letiltható", function() {deepEqual( Stem("letiltható"), "letiltható");});
test("letiltott -> letiltot", function() {deepEqual( Stem("letiltott"), "letiltot");});
test("letiltás -> letiltás", function() {deepEqual( Stem("letiltás"), "letiltás");});
test("letiltása -> letiltás", function() {deepEqual( Stem("letiltása"), "letiltás");});
test("letisztult -> letisztul", function() {deepEqual( Stem("letisztult"), "letisztul");});
test("letisztázott -> letisztázot", function() {deepEqual( Stem("letisztázott"), "letisztázot");});
test("letisztáztam -> letisztázt", function() {deepEqual( Stem("letisztáztam"), "letisztázt");});
test("letisztázzuk -> letisztázz", function() {deepEqual( Stem("letisztázzuk"), "letisztázz");});
test("letisztított -> letisztítot", function() {deepEqual( Stem("letisztított"), "letisztítot");});
test("letisztítva -> letisztítv", function() {deepEqual( Stem("letisztítva"), "letisztítv");});
test("letisztításához -> letisztítás", function() {deepEqual( Stem("letisztításához"), "letisztítás");});
test("letolta -> letolt", function() {deepEqual( Stem("letolta"), "letolt");});
test("letompított -> letompítot", function() {deepEqual( Stem("letompított"), "letompítot");});
test("lett -> let", function() {deepEqual( Stem("lett"), "let");});
test("lettek -> lett", function() {deepEqual( Stem("lettek"), "lett");});
test("lettünk -> lett", function() {deepEqual( Stem("lettünk"), "lett");});
test("letusoltam -> letusolt", function() {deepEqual( Stem("letusoltam"), "letusolt");});
test("letusoltunk -> letusolt", function() {deepEqual( Stem("letusoltunk"), "letusolt");});
test("letámadás -> letámadás", function() {deepEqual( Stem("letámadás"), "letámadás");});
test("letámasztottuk -> letámasztott", function() {deepEqual( Stem("letámasztottuk"), "letámasztott");});
test("letárgyalnák -> letárgyalna", function() {deepEqual( Stem("letárgyalnák"), "letárgyalna");});
test("letépte -> letépt", function() {deepEqual( Stem("letépte"), "letépt");});
test("letépték -> letépte", function() {deepEqual( Stem("letépték"), "letépte");});
test("letépő -> letépő", function() {deepEqual( Stem("letépő"), "letépő");});
test("letérdelt -> letérdel", function() {deepEqual( Stem("letérdelt"), "letérdel");});
test("letértem -> letért", function() {deepEqual( Stem("letértem"), "letért");});
test("letértünk -> letért", function() {deepEqual( Stem("letértünk"), "letért");});
test("letét -> let", function() {deepEqual( Stem("letét"), "let");});
test("letétbe -> letét", function() {deepEqual( Stem("letétbe"), "letét");});
test("letétele -> letétel", function() {deepEqual( Stem("letétele"), "letétel");});
test("letételére -> letétel", function() {deepEqual( Stem("letételére"), "letétel");});
test("letéteményesei -> letéteményes", function() {deepEqual( Stem("letéteményesei"), "letéteményes");});
test("letéti -> letét", function() {deepEqual( Stem("letéti"), "letét");});
test("letétkezelés -> letétkezelés", function() {deepEqual( Stem("letétkezelés"), "letétkezelés");});
test("letétkezelésre -> letétkezelés", function() {deepEqual( Stem("letétkezelésre"), "letétkezelés");});
test("letétkezelők -> letétkezelő", function() {deepEqual( Stem("letétkezelők"), "letétkezelő");});
test("letétkezelőnek -> letétkezelő", function() {deepEqual( Stem("letétkezelőnek"), "letétkezelő");});
test("letétkezelőnél -> letétkezelő", function() {deepEqual( Stem("letétkezelőnél"), "letétkezelő");});
test("letétkezelőre -> letétkezelő", function() {deepEqual( Stem("letétkezelőre"), "letétkezelő");});
test("letétkezelőt -> letétkezelő", function() {deepEqual( Stem("letétkezelőt"), "letétkezelő");});
test("letöltendő -> letöltendő", function() {deepEqual( Stem("letöltendő"), "letöltendő");});
test("letölthessék -> letölthesse", function() {deepEqual( Stem("letölthessék"), "letölthesse");});
test("letölthetik -> letölthet", function() {deepEqual( Stem("letölthetik"), "letölthet");});
test("letölthetjük -> letölthet", function() {deepEqual( Stem("letölthetjük"), "letölthet");});
test("letölthető -> letölthető", function() {deepEqual( Stem("letölthető"), "letölthető");});
test("letölthetők -> letölthető", function() {deepEqual( Stem("letölthetők"), "letölthető");});
test("letölteni -> letölten", function() {deepEqual( Stem("letölteni"), "letölten");});
test("letölti -> letölt", function() {deepEqual( Stem("letölti"), "letölt");});
test("letöltik -> letölt", function() {deepEqual( Stem("letöltik"), "letölt");});
test("letöltjük -> letölt", function() {deepEqual( Stem("letöltjük"), "letölt");});
test("letöltse -> letölts", function() {deepEqual( Stem("letöltse"), "letölts");});
test("letöltsék -> letöltse", function() {deepEqual( Stem("letöltsék"), "letöltse");});
test("letöltsük -> letölts", function() {deepEqual( Stem("letöltsük"), "letölts");});
test("letöltve -> letöltv", function() {deepEqual( Stem("letöltve"), "letöltv");});
test("letöltés -> letöltés", function() {deepEqual( Stem("letöltés"), "letöltés");});
test("letöltésben -> letöltés", function() {deepEqual( Stem("letöltésben"), "letöltés");});
test("letöltése -> letöltés", function() {deepEqual( Stem("letöltése"), "letöltés");});
test("letöltéseink -> letöltés", function() {deepEqual( Stem("letöltéseink"), "letöltés");});
test("letöltéskor -> letöltés", function() {deepEqual( Stem("letöltéskor"), "letöltés");});
test("letöltésre -> letöltés", function() {deepEqual( Stem("letöltésre"), "letöltés");});
test("letöltéssel -> letöltés", function() {deepEqual( Stem("letöltéssel"), "letöltés");});
test("letöltéséhez -> letöltés", function() {deepEqual( Stem("letöltéséhez"), "letöltés");});
test("letöltésére -> letöltés", function() {deepEqual( Stem("letöltésére"), "letöltés");});
test("letöltését -> letöltés", function() {deepEqual( Stem("letöltését"), "letöltés");});
test("letöltési -> letöltés", function() {deepEqual( Stem("letöltési"), "letöltés");});
test("letöltést -> letöltés", function() {deepEqual( Stem("letöltést"), "letöltés");});
test("letöltődik -> letöltőd", function() {deepEqual( Stem("letöltődik"), "letöltőd");});
test("letöltődés -> letöltődés", function() {deepEqual( Stem("letöltődés"), "letöltődés");});
test("letöltött -> letöltöt", function() {deepEqual( Stem("letöltött"), "letöltöt");});
test("letöri -> letör", function() {deepEqual( Stem("letöri"), "letör");});
test("letörlése -> letörlés", function() {deepEqual( Stem("letörlése"), "letörlés");});
test("letörlését -> letörlés", function() {deepEqual( Stem("letörlését"), "letörlés");});
test("letörni -> letörn", function() {deepEqual( Stem("letörni"), "letörn");});
test("letörte -> letört", function() {deepEqual( Stem("letörte"), "letört");});
test("letörten -> letört", function() {deepEqual( Stem("letörten"), "letört");});
test("letörve -> letörv", function() {deepEqual( Stem("letörve"), "letörv");});
test("letörése -> letörés", function() {deepEqual( Stem("letörése"), "letörés");});
test("letörésére -> letörés", function() {deepEqual( Stem("letörésére"), "letörés");});
test("letörölheti -> letörölhet", function() {deepEqual( Stem("letörölheti"), "letörölhet");});
test("letörölhető -> letörölhető", function() {deepEqual( Stem("letörölhető"), "letörölhető");});
test("letörlünk -> letörl", function() {deepEqual( Stem("letörlünk"), "letörl");});
test("letöröljük -> letöröl", function() {deepEqual( Stem("letöröljük"), "letöröl");});
test("letörölni -> letöröln", function() {deepEqual( Stem("letörölni"), "letöröln");});
test("letörölték -> letörölte", function() {deepEqual( Stem("letörölték"), "letörölte");});
test("letűnt -> letűn", function() {deepEqual( Stem("letűnt"), "letűn");});
test("leugrott -> leugrot", function() {deepEqual( Stem("leugrott"), "leugrot");});
test("leugrottam -> leugrott", function() {deepEqual( Stem("leugrottam"), "leugrott");});
test("leugrottunk -> leugrott", function() {deepEqual( Stem("leugrottunk"), "leugrott");});
test("leugrunk -> leugr", function() {deepEqual( Stem("leugrunk"), "leugr");});
test("leugrás -> leugrás", function() {deepEqual( Stem("leugrás"), "leugrás");});
test("levagdosták -> levagdosta", function() {deepEqual( Stem("levagdosták"), "levagdosta");});
test("levakarni -> levakarn", function() {deepEqual( Stem("levakarni"), "levakarn");});
test("levegő -> levegő", function() {deepEqual( Stem("levegő"), "levegő");});
test("levegőbe -> levegő", function() {deepEqual( Stem("levegőbe"), "levegő");});
test("levegőben -> levegő", function() {deepEqual( Stem("levegőben"), "levegő");});
test("levegőből -> levegő", function() {deepEqual( Stem("levegőből"), "levegő");});
test("levegőhöz -> levegő", function() {deepEqual( Stem("levegőhöz"), "levegő");});
test("levegője -> levegő", function() {deepEqual( Stem("levegője"), "levegő");});
test("levegőjébe -> levegő", function() {deepEqual( Stem("levegőjébe"), "levegő");});
test("levegőjét -> levegő", function() {deepEqual( Stem("levegőjét"), "levegő");});
test("levegőn -> levegő", function() {deepEqual( Stem("levegőn"), "levegő");});
test("levegőnk -> levegő", function() {deepEqual( Stem("levegőnk"), "levegő");});
test("levegőre -> levegő", function() {deepEqual( Stem("levegőre"), "levegő");});
test("levegőt -> levegő", function() {deepEqual( Stem("levegőt"), "levegő");});
test("levegővel -> levegő", function() {deepEqual( Stem("levegővel"), "levegő");});
test("levegőért -> levegő", function() {deepEqual( Stem("levegőért"), "levegő");});
test("levegőellátással -> levegőellátás", function() {deepEqual( Stem("levegőellátással"), "levegőellátás");});
test("levegőjű -> levegőjű", function() {deepEqual( Stem("levegőjű"), "levegőjű");});
test("levegőtartály -> levegőtartály", function() {deepEqual( Stem("levegőtartály"), "levegőtartály");});
test("levegőzni -> levegőzn", function() {deepEqual( Stem("levegőzni"), "levegőzn");});
test("levegőzzek -> levegőzz", function() {deepEqual( Stem("levegőzzek"), "levegőzz");});
test("levegőzzem -> levegőzz", function() {deepEqual( Stem("levegőzzem"), "levegőzz");});
test("levegőzök -> levegőz", function() {deepEqual( Stem("levegőzök"), "levegőz");});
test("levehető -> levehető", function() {deepEqual( Stem("levehető"), "levehető");});
test("levele -> level", function() {deepEqual( Stem("levele"), "level");});
test("leveled -> level", function() {deepEqual( Stem("leveled"), "level");});
test("levelei -> level", function() {deepEqual( Stem("levelei"), "level");});
test("leveleik -> level", function() {deepEqual( Stem("leveleik"), "level");});
test("leveleiket -> level", function() {deepEqual( Stem("leveleiket"), "level");});
test("leveleinek -> level", function() {deepEqual( Stem("leveleinek"), "level");});
test("leveleink -> level", function() {deepEqual( Stem("leveleink"), "level");});
test("leveleinkre -> level", function() {deepEqual( Stem("leveleinkre"), "level");});
test("levelei -> level", function() {deepEqual( Stem("levelei"), "level");});
test("levelek -> level", function() {deepEqual( Stem("levelek"), "level");});
test("levelekből -> level", function() {deepEqual( Stem("levelekből"), "level");});
test("leveleken -> level", function() {deepEqual( Stem("leveleken"), "level");});
test("leveleket -> level", function() {deepEqual( Stem("leveleket"), "level");});
test("levelekhez -> level", function() {deepEqual( Stem("levelekhez"), "level");});
test("levelekig -> level", function() {deepEqual( Stem("levelekig"), "level");});
test("levelekkel -> level", function() {deepEqual( Stem("levelekkel"), "level");});
test("levelekre -> level", function() {deepEqual( Stem("levelekre"), "level");});
test("levelem -> level", function() {deepEqual( Stem("levelem"), "level");});
test("levelemben -> level", function() {deepEqual( Stem("levelemben"), "level");});
test("levelemet -> level", function() {deepEqual( Stem("levelemet"), "level");});
test("levelet -> level", function() {deepEqual( Stem("levelet"), "level");});
test("levelében -> level", function() {deepEqual( Stem("levelében"), "level");});
test("leveléről -> level", function() {deepEqual( Stem("leveléről"), "level");});
test("levelét -> level", function() {deepEqual( Stem("levelét"), "level");});
test("levelével -> level", function() {deepEqual( Stem("levelével"), "level");});
test("levelüket -> level", function() {deepEqual( Stem("levelüket"), "level");});
test("levelünk -> level", function() {deepEqual( Stem("levelünk"), "level");});
test("levelünket -> level", function() {deepEqual( Stem("levelünket"), "level");});
test("levél -> levél", function() {deepEqual( Stem("levél"), "levél");});
test("levélbe -> levél", function() {deepEqual( Stem("levélbe"), "levél");});
test("levélben -> levél", function() {deepEqual( Stem("levélben"), "levél");});
test("levélhez -> levél", function() {deepEqual( Stem("levélhez"), "levél");});
test("levéllel -> levél", function() {deepEqual( Stem("levéllel"), "levél");});
test("levélnek -> levél", function() {deepEqual( Stem("levélnek"), "levél");});
test("levélre -> levél", function() {deepEqual( Stem("levélre"), "levél");});
test("levéltől -> levél", function() {deepEqual( Stem("levéltől"), "levél");});
test("leveleteketlevelemmel -> leveleteketlevel", function() {deepEqual( Stem("leveleteketlevelemmel"), "leveleteketlevel");});
test("leveles -> leveles", function() {deepEqual( Stem("leveles"), "leveles");});
test("levelesláda -> leveleslád", function() {deepEqual( Stem("levelesláda"), "leveleslád");});
test("levelesládájában -> levelesládá", function() {deepEqual( Stem("levelesládájában"), "levelesládá");});
test("levelestül -> levelest", function() {deepEqual( Stem("levelestül"), "levelest");});
test("levelez -> levelez", function() {deepEqual( Stem("levelez"), "levelez");});
test("levelezek -> levelez", function() {deepEqual( Stem("levelezek"), "levelez");});
test("levelezik -> levelez", function() {deepEqual( Stem("levelezik"), "levelez");});
test("leveleztek -> levelezt", function() {deepEqual( Stem("leveleztek"), "levelezt");});
test("leveleztünk -> levelezt", function() {deepEqual( Stem("leveleztünk"), "levelezt");});
test("levelezünk -> levelez", function() {deepEqual( Stem("levelezünk"), "levelez");});
test("levelezett -> levelezet", function() {deepEqual( Stem("levelezett"), "levelezet");});
test("levelezgetünk -> levelezget", function() {deepEqual( Stem("levelezgetünk"), "levelezget");});
test("levelezhessünk -> levelezhess", function() {deepEqual( Stem("levelezhessünk"), "levelezhess");});
test("levelezés -> levelezés", function() {deepEqual( Stem("levelezés"), "levelezés");});
test("levelezésben -> levelezés", function() {deepEqual( Stem("levelezésben"), "levelezés");});
test("levelezéshez -> levelezés", function() {deepEqual( Stem("levelezéshez"), "levelezés");});
test("levelezésre -> levelezés", function() {deepEqual( Stem("levelezésre"), "levelezés");});
test("levelezéssel -> levelezés", function() {deepEqual( Stem("levelezéssel"), "levelezés");});
test("levelezést -> levelezés", function() {deepEqual( Stem("levelezést"), "levelezés");});
test("levelezését -> levelezés", function() {deepEqual( Stem("levelezését"), "levelezés");});
test("levelezési -> levelezés", function() {deepEqual( Stem("levelezési"), "levelezés");});
test("levelező -> levelező", function() {deepEqual( Stem("levelező"), "levelező");});
test("levélíró -> levélíró", function() {deepEqual( Stem("levélíró"), "levélíró");});
test("levét -> lev", function() {deepEqual( Stem("levét"), "lev");});
test("lével -> lé", function() {deepEqual( Stem("lével"), "lé");});
test("lébe -> lé", function() {deepEqual( Stem("lébe"), "lé");});
test("lében -> lé", function() {deepEqual( Stem("lében"), "lé");});
test("levő -> levő", function() {deepEqual( Stem("levő"), "levő");});
test("levők -> levő", function() {deepEqual( Stem("levők"), "levő");});
test("levőknek -> levő", function() {deepEqual( Stem("levőknek"), "levő");});
test("levővel -> levő", function() {deepEqual( Stem("levővel"), "levő");});
test("lexikonja -> lexikon", function() {deepEqual( Stem("lexikonja"), "lexikon");});
test("lexikont -> lexikon", function() {deepEqual( Stem("lexikont"), "lexikon");});
test("lezajlott -> lezajlot", function() {deepEqual( Stem("lezajlott"), "lezajlot");});
test("lezajló -> lezajló", function() {deepEqual( Stem("lezajló"), "lezajló");});
test("lezongorázta -> lezongorázt", function() {deepEqual( Stem("lezongorázta"), "lezongorázt");});
test("lezserek -> lezser", function() {deepEqual( Stem("lezserek"), "lezser");});
test("lezuhanok -> lezuhan", function() {deepEqual( Stem("lezuhanok"), "lezuhan");});
test("lezuhant -> lezuhan", function() {deepEqual( Stem("lezuhant"), "lezuhan");});
test("lezuhanyozhattunk -> lezuhanyozhatt", function() {deepEqual( Stem("lezuhanyozhattunk"), "lezuhanyozhatt");});
test("lezuhanyozom -> lezuhanyoz", function() {deepEqual( Stem("lezuhanyozom"), "lezuhanyoz");});
test("lezuhanyoztam -> lezuhanyozt", function() {deepEqual( Stem("lezuhanyoztam"), "lezuhanyozt");});
test("lezuhanyoztunk -> lezuhanyozt", function() {deepEqual( Stem("lezuhanyoztunk"), "lezuhanyozt");});
test("lezuhanyoztunk -> lezuhanyozt", function() {deepEqual( Stem("lezuhanyoztunk"), "lezuhanyozt");});
test("lezuhanyzom -> lezuhanyz", function() {deepEqual( Stem("lezuhanyzom"), "lezuhanyz");});
test("lezáratlanul -> lezáratlan", function() {deepEqual( Stem("lezáratlanul"), "lezáratlan");});
test("lezáratta -> lezáratt", function() {deepEqual( Stem("lezáratta"), "lezáratt");});
test("lezárható -> lezárható", function() {deepEqual( Stem("lezárható"), "lezárható");});
test("lezárhatók -> lezárható", function() {deepEqual( Stem("lezárhatók"), "lezárható");});
test("lezárja -> lezár", function() {deepEqual( Stem("lezárja"), "lezár");});
test("lezárjuk -> lezár", function() {deepEqual( Stem("lezárjuk"), "lezár");});
test("lezárják -> lezárja", function() {deepEqual( Stem("lezárják"), "lezárja");});
test("lezárni -> lezárn", function() {deepEqual( Stem("lezárni"), "lezárn");});
test("lezárniuk -> lezárn", function() {deepEqual( Stem("lezárniuk"), "lezárn");});
test("lezárta -> lezárt", function() {deepEqual( Stem("lezárta"), "lezárt");});
test("lezártnak -> lezárt", function() {deepEqual( Stem("lezártnak"), "lezárt");});
test("lezárták -> lezárta", function() {deepEqual( Stem("lezárták"), "lezárta");});
test("lezárt -> lezár", function() {deepEqual( Stem("lezárt"), "lezár");});
test("lezárult -> lezárul", function() {deepEqual( Stem("lezárult"), "lezárul");});
test("lezárult -> lezárul", function() {deepEqual( Stem("lezárult"), "lezárul");});
test("lezárulta -> lezárult", function() {deepEqual( Stem("lezárulta"), "lezárult");});
test("lezáruló -> lezáruló", function() {deepEqual( Stem("lezáruló"), "lezáruló");});
test("lezárulófélben -> lezárulófél", function() {deepEqual( Stem("lezárulófélben"), "lezárulófél");});
test("lezárása -> lezárás", function() {deepEqual( Stem("lezárása"), "lezárás");});
test("lezárásaként -> lezárás", function() {deepEqual( Stem("lezárásaként"), "lezárás");});
test("lezárásáig -> lezárás", function() {deepEqual( Stem("lezárásáig"), "lezárás");});
test("lezárását -> lezárás", function() {deepEqual( Stem("lezárását"), "lezárás");});
test("lezáró -> lezáró", function() {deepEqual( Stem("lezáró"), "lezáró");});
test("lezúdult -> lezúdul", function() {deepEqual( Stem("lezúdult"), "lezúdul");});
test("lezüllenek -> lezüll", function() {deepEqual( Stem("lezüllenek"), "lezüll");});
test("leágazás -> leágazás", function() {deepEqual( Stem("leágazás"), "leágazás");});
test("leágazó -> leágazó", function() {deepEqual( Stem("leágazó"), "leágazó");});
test("leáldozni -> leáldozn", function() {deepEqual( Stem("leáldozni"), "leáldozn");});
test("leáll -> leáll", function() {deepEqual( Stem("leáll"), "leáll");});
test("leállni -> leálln", function() {deepEqual( Stem("leállni"), "leálln");});
test("leálltak -> leállt", function() {deepEqual( Stem("leálltak"), "leállt");});
test("leállása -> leállás", function() {deepEqual( Stem("leállása"), "leállás");});
test("leállítani -> leállítan", function() {deepEqual( Stem("leállítani"), "leállítan");});
test("leállítják -> leállítja", function() {deepEqual( Stem("leállítják"), "leállítja");});
test("leállítom -> leállít", function() {deepEqual( Stem("leállítom"), "leállít");});
test("leállította -> leállított", function() {deepEqual( Stem("leállította"), "leállított");});
test("leállítottunk -> leállított", function() {deepEqual( Stem("leállítottunk"), "leállított");});
test("leállították -> leállította", function() {deepEqual( Stem("leállították"), "leállította");});
test("leállítás -> leállítás", function() {deepEqual( Stem("leállítás"), "leállítás");});
test("leállítását -> leállítás", function() {deepEqual( Stem("leállítását"), "leállítás");});
test("leállítása -> leállítás", function() {deepEqual( Stem("leállítása"), "leállítás");});
test("leállítási -> leállítás", function() {deepEqual( Stem("leállítási"), "leállítás");});
test("leányiskolában -> leányiskol", function() {deepEqual( Stem("leányiskolában"), "leányiskol");});
test("leányka -> leány", function() {deepEqual( Stem("leányka"), "leány");});
test("leánykar -> leánykar", function() {deepEqual( Stem("leánykar"), "leánykar");});
test("leánnyal -> leány", function() {deepEqual( Stem("leánnyal"), "leány");});
test("leány -> leány", function() {deepEqual( Stem("leány"), "leány");});
test("leánya -> leány", function() {deepEqual( Stem("leánya"), "leány");});
test("leányba -> leány", function() {deepEqual( Stem("leányba"), "leány");});
test("leánynak -> leány", function() {deepEqual( Stem("leánynak"), "leány");});
test("leányok -> leány", function() {deepEqual( Stem("leányok"), "leány");});
test("leányokat -> leány", function() {deepEqual( Stem("leányokat"), "leány");});
test("leányom -> leány", function() {deepEqual( Stem("leányom"), "leány");});
test("leányomat -> leány", function() {deepEqual( Stem("leányomat"), "leány");});
test("leányra -> leány", function() {deepEqual( Stem("leányra"), "leány");});
test("leányt -> leány", function() {deepEqual( Stem("leányt"), "leány");});
test("leányának -> leány", function() {deepEqual( Stem("leányának"), "leány");});
test("leányát -> leány", function() {deepEqual( Stem("leányát"), "leány");});
test("leányával -> leány", function() {deepEqual( Stem("leányával"), "leány");});
test("leányvállalat -> leányvállal", function() {deepEqual( Stem("leányvállalat"), "leányvállal");});
test("leányvállalata -> leányvállalat", function() {deepEqual( Stem("leányvállalata"), "leányvállalat");});
test("leányvállalatai -> leányvállalat", function() {deepEqual( Stem("leányvállalatai"), "leányvállalat");});
test("leányvállalatainak -> leányvállalat", function() {deepEqual( Stem("leányvállalatainak"), "leányvállalat");});
test("leányvállalatainál -> leányvállalat", function() {deepEqual( Stem("leányvállalatainál"), "leányvállalat");});
test("leányvállalataként -> leányvállalat", function() {deepEqual( Stem("leányvállalataként"), "leányvállalat");});
test("leányvállalatnak -> leányvállalat", function() {deepEqual( Stem("leányvállalatnak"), "leányvállalat");});
test("leányvállalatok -> leányvállalat", function() {deepEqual( Stem("leányvállalatok"), "leányvállalat");});
test("leányvállalatokat -> leányvállalat", function() {deepEqual( Stem("leányvállalatokat"), "leányvállalat");});
test("leányvállalatot -> leányvállalat", function() {deepEqual( Stem("leányvállalatot"), "leányvállalat");});
test("leányvállalatra -> leányvállalat", function() {deepEqual( Stem("leányvállalatra"), "leányvállalat");});
test("leányvállalatából -> leányvállalat", function() {deepEqual( Stem("leányvállalatából"), "leányvállalat");});
test("leányvállalatának -> leányvállalat", function() {deepEqual( Stem("leányvállalatának"), "leányvállalat");});
test("leányvállalatánál -> leányvállalat", function() {deepEqual( Stem("leányvállalatánál"), "leányvállalat");});
test("leányvállalatát -> leányvállalat", function() {deepEqual( Stem("leányvállalatát"), "leányvállalat");});
test("leányvállalatával -> leányvállalat", function() {deepEqual( Stem("leányvállalatával"), "leányvállalat");});
test("leányzó -> leányzó", function() {deepEqual( Stem("leányzó"), "leányzó");});
test("leányálom -> leányál", function() {deepEqual( Stem("leányálom"), "leányál");});
test("leásásánál -> leásás", function() {deepEqual( Stem("leásásánál"), "leásás");});
test("leégett -> leéget", function() {deepEqual( Stem("leégett"), "leéget");});
test("leégni -> leégn", function() {deepEqual( Stem("leégni"), "leégn");});
test("leégtünk -> leégt", function() {deepEqual( Stem("leégtünk"), "leégt");});
test("leélem -> leél", function() {deepEqual( Stem("leélem"), "leél");});
test("leéli -> leél", function() {deepEqual( Stem("leéli"), "leél");});
test("leélik -> leél", function() {deepEqual( Stem("leélik"), "leél");});
test("leélni -> leéln", function() {deepEqual( Stem("leélni"), "leéln");});
test("leépítették -> leépítette", function() {deepEqual( Stem("leépítették"), "leépítette");});
test("leépítés -> leépítés", function() {deepEqual( Stem("leépítés"), "leépítés");});
test("leépítése -> leépítés", function() {deepEqual( Stem("leépítése"), "leépítés");});
test("leépítését -> leépítés", function() {deepEqual( Stem("leépítését"), "leépítés");});
test("leépítési -> leépítés", function() {deepEqual( Stem("leépítési"), "leépítés");});
test("leépülés -> leépülés", function() {deepEqual( Stem("leépülés"), "leépülés");});
test("leérettségizett -> leérettségizet", function() {deepEqual( Stem("leérettségizett"), "leérettségizet");});
test("leérettségizem -> leérettségiz", function() {deepEqual( Stem("leérettségizem"), "leérettségiz");});
test("leérettségiznem -> leérettségizn", function() {deepEqual( Stem("leérettségiznem"), "leérettségizn");});
test("leérettségizni -> leérettségizn", function() {deepEqual( Stem("leérettségizni"), "leérettségizn");});
test("leérettségiznék -> leérettségizne", function() {deepEqual( Stem("leérettségiznék"), "leérettségizne");});
test("leérettségiztem -> leérettségizt", function() {deepEqual( Stem("leérettségiztem"), "leérettségizt");});
test("leérettségizzek -> leérettségizz", function() {deepEqual( Stem("leérettségizzek"), "leérettségizz");});
test("leérettségizzen -> leérettségizz", function() {deepEqual( Stem("leérettségizzen"), "leérettségizz");});
test("leérettségizünk -> leérettségiz", function() {deepEqual( Stem("leérettségizünk"), "leérettségiz");});
test("leérkeztünk -> leérkezt", function() {deepEqual( Stem("leérkeztünk"), "leérkezt");});
test("leértünk -> leért", function() {deepEqual( Stem("leértünk"), "leért");});
test("leérünk -> leér", function() {deepEqual( Stem("leérünk"), "leér");});
test("leértek -> leért", function() {deepEqual( Stem("leértek"), "leért");});
test("leértem -> leért", function() {deepEqual( Stem("leértem"), "leért");});
test("leértékelték -> leértékelte", function() {deepEqual( Stem("leértékelték"), "leértékelte");});
test("leértékelési -> leértékelés", function() {deepEqual( Stem("leértékelési"), "leértékelés");});
test("leértékelődik -> leértékelőd", function() {deepEqual( Stem("leértékelődik"), "leértékelőd");});
test("leértékelődéséből -> leértékelődés", function() {deepEqual( Stem("leértékelődéséből"), "leértékelődés");});
test("leérve -> leérv", function() {deepEqual( Stem("leérve"), "leérv");});
test("leíratták -> leíratta", function() {deepEqual( Stem("leíratták"), "leíratta");});
test("leírhatatlan -> leírhatatl", function() {deepEqual( Stem("leírhatatlan"), "leírhatatl");});
test("leírhatatlanul -> leírhatatlan", function() {deepEqual( Stem("leírhatatlanul"), "leírhatatlan");});
test("leírhatjuk -> leírhat", function() {deepEqual( Stem("leírhatjuk"), "leírhat");});
test("leírhatom -> leírhat", function() {deepEqual( Stem("leírhatom"), "leírhat");});
test("leírhattam -> leírhatt", function() {deepEqual( Stem("leírhattam"), "leírhatt");});
test("leírható -> leírható", function() {deepEqual( Stem("leírható"), "leírható");});
test("leírhatók -> leírható", function() {deepEqual( Stem("leírhatók"), "leírható");});
test("leír -> leír", function() {deepEqual( Stem("leír"), "leír");});
test("leírja -> leír", function() {deepEqual( Stem("leírja"), "leír");});
test("leírjon -> leírj", function() {deepEqual( Stem("leírjon"), "leírj");});
test("leírjuk -> leír", function() {deepEqual( Stem("leírjuk"), "leír");});
test("leírják -> leírja", function() {deepEqual( Stem("leírják"), "leírja");});
test("leírni -> leírn", function() {deepEqual( Stem("leírni"), "leírn");});
test("leírnom -> leírn", function() {deepEqual( Stem("leírnom"), "leírn");});
test("leírok -> leír", function() {deepEqual( Stem("leírok"), "leír");});
test("leírom -> leír", function() {deepEqual( Stem("leírom"), "leír");});
test("leírta -> leírt", function() {deepEqual( Stem("leírta"), "leírt");});
test("leírtam -> leírt", function() {deepEqual( Stem("leírtam"), "leírt");});
test("leírtuk -> leírt", function() {deepEqual( Stem("leírtuk"), "leírt");});
test("leírtál -> leírtál", function() {deepEqual( Stem("leírtál"), "leírtál");});
test("leírogattam -> leírogatt", function() {deepEqual( Stem("leírogattam"), "leírogatt");});
test("leírt -> leír", function() {deepEqual( Stem("leírt"), "leír");});
test("leírtak -> leírt", function() {deepEqual( Stem("leírtak"), "leírt");});
test("leírtakat -> leírt", function() {deepEqual( Stem("leírtakat"), "leírt");});
test("leírtakkal -> leírt", function() {deepEqual( Stem("leírtakkal"), "leírt");});
test("leírtaknak -> leírt", function() {deepEqual( Stem("leírtaknak"), "leírt");});
test("leírtnál -> leírt", function() {deepEqual( Stem("leírtnál"), "leírt");});
test("leírva -> leírv", function() {deepEqual( Stem("leírva"), "leírv");});
test("leírás -> leírás", function() {deepEqual( Stem("leírás"), "leírás");});
test("leírása -> leírás", function() {deepEqual( Stem("leírása"), "leírás");});
test("leírásban -> leírás", function() {deepEqual( Stem("leírásban"), "leírás");});
test("leírások -> leírás", function() {deepEqual( Stem("leírások"), "leírás");});
test("leírással -> leírás", function() {deepEqual( Stem("leírással"), "leírás");});
test("leírást -> leírás", function() {deepEqual( Stem("leírást"), "leírás");});
test("leírásunk -> leírás", function() {deepEqual( Stem("leírásunk"), "leírás");});
test("leírásába -> leírás", function() {deepEqual( Stem("leírásába"), "leírás");});
test("leírásából -> leírás", function() {deepEqual( Stem("leírásából"), "leírás");});
test("leírásának -> leírás", function() {deepEqual( Stem("leírásának"), "leírás");});
test("leírásánál -> leírás", function() {deepEqual( Stem("leírásánál"), "leírás");});
test("leírására -> leírás", function() {deepEqual( Stem("leírására"), "leírás");});
test("leírását -> leírás", function() {deepEqual( Stem("leírását"), "leírás");});
test("leíró -> leíró", function() {deepEqual( Stem("leíró"), "leíró");});
test("leíróbb -> leíróbb", function() {deepEqual( Stem("leíróbb"), "leíróbb");});
test("leírónyelvben -> leírónyelv", function() {deepEqual( Stem("leírónyelvben"), "leírónyelv");});
test("leömlöttek -> leömlött", function() {deepEqual( Stem("leömlöttek"), "leömlött");});
test("leönti -> leönt", function() {deepEqual( Stem("leönti"), "leönt");});
test("leöntöm -> leöntö", function() {deepEqual( Stem("leöntöm"), "leöntö");});
test("leöntötte -> leöntött", function() {deepEqual( Stem("leöntötte"), "leöntött");});
test("leöntöttem -> leöntött", function() {deepEqual( Stem("leöntöttem"), "leöntött");});
test("leül -> le", function() {deepEqual( Stem("leül"), "le");});
test("leüljek -> leülj", function() {deepEqual( Stem("leüljek"), "leülj");});
test("leüljünk -> leülj", function() {deepEqual( Stem("leüljünk"), "leülj");});
test("leülne -> leüln", function() {deepEqual( Stem("leülne"), "leüln");});
test("leülnek -> leül", function() {deepEqual( Stem("leülnek"), "leül");});
test("leülni -> leüln", function() {deepEqual( Stem("leülni"), "leüln");});
test("leült -> leül", function() {deepEqual( Stem("leült"), "leül");});
test("leültek -> leült", function() {deepEqual( Stem("leültek"), "leült");});
test("leültem -> leült", function() {deepEqual( Stem("leültem"), "leült");});
test("leültünk -> leült", function() {deepEqual( Stem("leültünk"), "leült");});
test("leülök -> leül", function() {deepEqual( Stem("leülök"), "leül");});
test("leülünk -> leül", function() {deepEqual( Stem("leülünk"), "leül");});
test("leüt -> leü", function() {deepEqual( Stem("leüt"), "leü");});
test("leütni -> leütn", function() {deepEqual( Stem("leütni"), "leütn");});
test("leütötte -> leütött", function() {deepEqual( Stem("leütötte"), "leütött");});
test("leütöttem -> leütött", function() {deepEqual( Stem("leütöttem"), "leütött");});
test("leütötték -> leütötte", function() {deepEqual( Stem("leütötték"), "leütötte");});
test("leültette -> leültett", function() {deepEqual( Stem("leültette"), "leültett");});
test("leültettek -> leültett", function() {deepEqual( Stem("leültettek"), "leültett");});
test("leüthette -> leüthett", function() {deepEqual( Stem("leüthette"), "leüthett");});
test("leülhettünk -> leülhett", function() {deepEqual( Stem("leülhettünk"), "leülhett");});
test("leülhessen -> leülhess", function() {deepEqual( Stem("leülhessen"), "leülhess");});
test("leütési -> leütés", function() {deepEqual( Stem("leütési"), "leütés");});
test("leütött -> leütöt", function() {deepEqual( Stem("leütött"), "leütöt");});
test("liba -> li", function() {deepEqual( Stem("liba"), "li");});
test("libát -> lib", function() {deepEqual( Stem("libát"), "lib");});
test("libabőrös -> libabőrös", function() {deepEqual( Stem("libabőrös"), "libabőrös");});
test("libanoni -> libanon", function() {deepEqual( Stem("libanoni"), "libanon");});
test("libasorba -> libasor", function() {deepEqual( Stem("libasorba"), "libasor");});
test("libasorban -> libasor", function() {deepEqual( Stem("libasorban"), "libasor");});
test("libegő -> libegő", function() {deepEqual( Stem("libegő"), "libegő");});
test("libegőzés -> libegőzés", function() {deepEqual( Stem("libegőzés"), "libegőzés");});
test("liberalizmusnak -> liberalizmus", function() {deepEqual( Stem("liberalizmusnak"), "liberalizmus");});
test("liberalizmuson -> liberalizmus", function() {deepEqual( Stem("liberalizmuson"), "liberalizmus");});
test("liberalizáció -> liberalizáció", function() {deepEqual( Stem("liberalizáció"), "liberalizáció");});
test("liberalizációjának -> liberalizáció", function() {deepEqual( Stem("liberalizációjának"), "liberalizáció");});
test("liberalizációjára -> liberalizáció", function() {deepEqual( Stem("liberalizációjára"), "liberalizáció");});
test("liberalizációt -> liberalizáció", function() {deepEqual( Stem("liberalizációt"), "liberalizáció");});
test("liberalizálja -> liberalizál", function() {deepEqual( Stem("liberalizálja"), "liberalizál");});
test("liberalizált -> liberalizál", function() {deepEqual( Stem("liberalizált"), "liberalizál");});
test("liberalizálására -> liberalizálás", function() {deepEqual( Stem("liberalizálására"), "liberalizálás");});
test("liberalizálódó -> liberalizálódó", function() {deepEqual( Stem("liberalizálódó"), "liberalizálódó");});
test("liberális -> liberális", function() {deepEqual( Stem("liberális"), "liberális");});
test("liberálisak -> liberális", function() {deepEqual( Stem("liberálisak"), "liberális");});
test("liberálisnak -> liberális", function() {deepEqual( Stem("liberálisnak"), "liberális");});
test("liberálisoktól -> liberális", function() {deepEqual( Stem("liberálisoktól"), "liberális");});
test("libikóka -> libikó", function() {deepEqual( Stem("libikóka"), "libikó");});
test("licencdíjak -> licencdíj", function() {deepEqual( Stem("licencdíjak"), "licencdíj");});
test("licencdíjat -> licencdíj", function() {deepEqual( Stem("licencdíjat"), "licencdíj");});
test("licenccel -> licenc", function() {deepEqual( Stem("licenccel"), "licenc");});
test("licence -> licenc", function() {deepEqual( Stem("licence"), "licenc");});
test("licencek -> licenc", function() {deepEqual( Stem("licencek"), "licenc");});
test("licenceket -> licenc", function() {deepEqual( Stem("licenceket"), "licenc");});
test("licencet -> licenc", function() {deepEqual( Stem("licencet"), "licenc");});
test("licencét -> licenc", function() {deepEqual( Stem("licencét"), "licenc");});
test("licencelt -> licencel", function() {deepEqual( Stem("licencelt"), "licencel");});
test("licencelte -> licencelt", function() {deepEqual( Stem("licencelte"), "licencelt");});
test("licencelési -> licencelés", function() {deepEqual( Stem("licencelési"), "licencelés");});
test("licencelésére -> licencelés", function() {deepEqual( Stem("licencelésére"), "licencelés");});
test("licencszerződésekben -> licencszerződés", function() {deepEqual( Stem("licencszerződésekben"), "licencszerződés");});
test("licencvállalat -> licencvállal", function() {deepEqual( Stem("licencvállalat"), "licencvállal");});
test("licencértékesítő -> licencértékesítő", function() {deepEqual( Stem("licencértékesítő"), "licencértékesítő");});
test("licitet -> licit", function() {deepEqual( Stem("licitet"), "licit");});
test("licitkedvet -> licitkedv", function() {deepEqual( Stem("licitkedvet"), "licitkedv");});
test("licittárcsát -> licittárcs", function() {deepEqual( Stem("licittárcsát"), "licittárcs");});
test("licitálni -> licitáln", function() {deepEqual( Stem("licitálni"), "licitáln");});
test("licitáló -> licitáló", function() {deepEqual( Stem("licitáló"), "licitáló");});
test("licitálók -> licitáló", function() {deepEqual( Stem("licitálók"), "licitáló");});
test("licitálókat -> licitáló", function() {deepEqual( Stem("licitálókat"), "licitáló");});
test("lidokainra -> lidokain", function() {deepEqual( Stem("lidokainra"), "lidokain");});
test("lidércnyomás -> lidércnyomás", function() {deepEqual( Stem("lidércnyomás"), "lidércnyomás");});
test("liftajtón -> liftajtó", function() {deepEqual( Stem("liftajtón"), "liftajtó");});
test("liftaknával -> liftakn", function() {deepEqual( Stem("liftaknával"), "liftakn");});
test("lift -> lif", function() {deepEqual( Stem("lift"), "lif");});
test("liftből -> lift", function() {deepEqual( Stem("liftből"), "lift");});
test("lifthez -> lift", function() {deepEqual( Stem("lifthez"), "lift");});
test("ligaválogatott -> ligaválogatot", function() {deepEqual( Stem("ligaválogatott"), "ligaválogatot");});
test("liget -> lig", function() {deepEqual( Stem("liget"), "lig");});
test("ligetbe -> liget", function() {deepEqual( Stem("ligetbe"), "liget");});
test("ligetté -> liget", function() {deepEqual( Stem("ligetté"), "liget");});
test("liga -> lig", function() {deepEqual( Stem("liga"), "lig");});
test("ligában -> lig", function() {deepEqual( Stem("ligában"), "lig");});
test("ligát -> lig", function() {deepEqual( Stem("ligát"), "lig");});
test("ligás -> ligás", function() {deepEqual( Stem("ligás"), "ligás");});
test("lihegett -> liheget", function() {deepEqual( Stem("lihegett"), "liheget");});
test("lihegte -> lihegt", function() {deepEqual( Stem("lihegte"), "lihegt");});
test("lihegve -> lihegv", function() {deepEqual( Stem("lihegve"), "lihegv");});
test("lihegés -> lihegés", function() {deepEqual( Stem("lihegés"), "lihegés");});
test("lihegős -> lihegős", function() {deepEqual( Stem("lihegős"), "lihegős");});
test("likvid -> likv", function() {deepEqual( Stem("likvid"), "likv");});
test("likviddé -> likv", function() {deepEqual( Stem("likviddé"), "likv");});
test("likvidebbé -> likvideb", function() {deepEqual( Stem("likvidebbé"), "likvideb");});
test("likviditásbőség -> likviditásbőség", function() {deepEqual( Stem("likviditásbőség"), "likviditásbőség");});
test("likviditási -> likviditás", function() {deepEqual( Stem("likviditási"), "likviditás");});
test("likviditás -> likviditás", function() {deepEqual( Stem("likviditás"), "likviditás");});
test("likviditását -> likviditás", function() {deepEqual( Stem("likviditását"), "likviditás");});
test("likviditásúak -> likviditású", function() {deepEqual( Stem("likviditásúak"), "likviditású");});
test("likviditású -> likviditású", function() {deepEqual( Stem("likviditású"), "likviditású");});
test("likvidációs -> likvidációs", function() {deepEqual( Stem("likvidációs"), "likvidációs");});
test("likvidálnád -> likvidálna", function() {deepEqual( Stem("likvidálnád"), "likvidálna");});
test("likvidálás -> likvidálás", function() {deepEqual( Stem("likvidálás"), "likvidálás");});
test("likőrösállvány -> likőrösállvány", function() {deepEqual( Stem("likőrösállvány"), "likőrösállvány");});
test("lila -> lil", function() {deepEqual( Stem("lila"), "lil");});
test("lila-arany -> lila-arany", function() {deepEqual( Stem("lila-arany"), "lila-arany");});
test("lilaszínű -> lilaszínű", function() {deepEqual( Stem("lilaszínű"), "lilaszínű");});
test("liliputival -> liliput", function() {deepEqual( Stem("liliputival"), "liliput");});
test("limina -> limin", function() {deepEqual( Stem("limina"), "limin");});
test("limittel -> lim", function() {deepEqual( Stem("limittel"), "lim");});
test("limitáltabbak -> limitáltabb", function() {deepEqual( Stem("limitáltabbak"), "limitáltabb");});
test("limlom -> liml", function() {deepEqual( Stem("limlom"), "liml");});
test("limonádémat -> limonáde", function() {deepEqual( Stem("limonádémat"), "limonáde");});
test("limonádét -> limonád", function() {deepEqual( Stem("limonádét"), "limonád");});
test("limonádéval -> limonád", function() {deepEqual( Stem("limonádéval"), "limonád");});
test("limuzin -> limuz", function() {deepEqual( Stem("limuzin"), "limuz");});
test("limuzinba -> limuzin", function() {deepEqual( Stem("limuzinba"), "limuzin");});
test("limuzinra -> limuzin", function() {deepEqual( Stem("limuzinra"), "limuzin");});
test("limuzint -> limuzin", function() {deepEqual( Stem("limuzint"), "limuzin");});
test("lincolni -> lincoln", function() {deepEqual( Stem("lincolni"), "lincoln");});
test("line-ok -> line-", function() {deepEqual( Stem("line-ok"), "line-");});
test("lineáris -> lineáris", function() {deepEqual( Stem("lineáris"), "lineáris");});
test("lineárisak -> lineáris", function() {deepEqual( Stem("lineárisak"), "lineáris");});
test("link -> li", function() {deepEqual( Stem("link"), "li");});
test("linkek -> link", function() {deepEqual( Stem("linkek"), "link");});
test("linkjeit -> lin", function() {deepEqual( Stem("linkjeit"), "lin");});
test("linkgyűjtemény -> linkgyűjtemény", function() {deepEqual( Stem("linkgyűjtemény"), "linkgyűjtemény");});
test("linkség -> linkség", function() {deepEqual( Stem("linkség"), "linkség");});
test("linuxos -> linuxos", function() {deepEqual( Stem("linuxos"), "linuxos");});
test("linómetszet -> linómetsz", function() {deepEqual( Stem("linómetszet"), "linómetsz");});
test("lionét -> lion", function() {deepEqual( Stem("lionét"), "lion");});
test("lipicai -> lipic", function() {deepEqual( Stem("lipicai"), "lipic");});
test("lipityóka -> lipityó", function() {deepEqual( Stem("lipityóka"), "lipityó");});
test("listaelem -> listael", function() {deepEqual( Stem("listaelem"), "listael");});
test("listaelemre -> listael", function() {deepEqual( Stem("listaelemre"), "listael");});
test("listavezető -> listavezető", function() {deepEqual( Stem("listavezető"), "listavezető");});
test("listaállomány -> listaállomány", function() {deepEqual( Stem("listaállomány"), "listaállomány");});
test("listaára -> lista", function() {deepEqual( Stem("listaára"), "lista");});
test("listaárú -> listaárú", function() {deepEqual( Stem("listaárú"), "listaárú");});
test("lista -> list", function() {deepEqual( Stem("lista"), "list");});
test("listában -> list", function() {deepEqual( Stem("listában"), "list");});
test("listából -> list", function() {deepEqual( Stem("listából"), "list");});
test("listából -> list", function() {deepEqual( Stem("listából"), "list");});
test("listáin -> lista", function() {deepEqual( Stem("listáin"), "lista");});
test("listáit -> lista", function() {deepEqual( Stem("listáit"), "lista");});
test("listája -> listá", function() {deepEqual( Stem("listája"), "listá");});
test("listáján -> listá", function() {deepEqual( Stem("listáján"), "listá");});
test("listájának -> listá", function() {deepEqual( Stem("listájának"), "listá");});
test("listájának -> listá", function() {deepEqual( Stem("listájának"), "listá");});
test("listájára -> listá", function() {deepEqual( Stem("listájára"), "listá");});
test("listájáról -> listá", function() {deepEqual( Stem("listájáról"), "listá");});
test("listáját -> listá", function() {deepEqual( Stem("listáját"), "listá");});
test("listák -> lista", function() {deepEqual( Stem("listák"), "lista");});
test("listákat -> lista", function() {deepEqual( Stem("listákat"), "lista");});
test("listákon -> lista", function() {deepEqual( Stem("listákon"), "lista");});
test("listán -> list", function() {deepEqual( Stem("listán"), "list");});
test("listának -> list", function() {deepEqual( Stem("listának"), "list");});
test("listára -> list", function() {deepEqual( Stem("listára"), "list");});
test("listáról -> list", function() {deepEqual( Stem("listáról"), "list");});
test("listát -> list", function() {deepEqual( Stem("listát"), "list");});
test("listás -> listás", function() {deepEqual( Stem("listás"), "listás");});
test("listázása -> listázás", function() {deepEqual( Stem("listázása"), "listázás");});
test("liszt -> lisz", function() {deepEqual( Stem("liszt"), "lisz");});
test("lisztet -> liszt", function() {deepEqual( Stem("lisztet"), "liszt");});
test("liter -> liter", function() {deepEqual( Stem("liter"), "liter");});
test("literekkel -> liter", function() {deepEqual( Stem("literekkel"), "liter");});
test("literekről -> liter", function() {deepEqual( Stem("literekről"), "liter");});
test("liternél -> liter", function() {deepEqual( Stem("liternél"), "liter");});
test("literenkénti -> literenként", function() {deepEqual( Stem("literenkénti"), "literenként");});
test("literes -> literes", function() {deepEqual( Stem("literes"), "literes");});
test("litográfia -> litográf", function() {deepEqual( Stem("litográfia"), "litográf");});
test("litográfiákat -> litográfia", function() {deepEqual( Stem("litográfiákat"), "litográfia");});
test("litoszféralemezeket -> litoszféralemez", function() {deepEqual( Stem("litoszféralemezeket"), "litoszféralemez");});
test("litván -> litv", function() {deepEqual( Stem("litván"), "litv");});
test("lobbant -> lobban", function() {deepEqual( Stem("lobbant"), "lobban");});
test("lobbantak -> lobbant", function() {deepEqual( Stem("lobbantak"), "lobbant");});
test("lobbantja -> lobbant", function() {deepEqual( Stem("lobbantja"), "lobbant");});
test("lobbantásához -> lobbantás", function() {deepEqual( Stem("lobbantásához"), "lobbantás");});
test("lobbanékony -> lobbanékony", function() {deepEqual( Stem("lobbanékony"), "lobbanékony");});
test("lobbi -> lobb", function() {deepEqual( Stem("lobbi"), "lobb");});
test("lobbicsoport -> lobbicsopor", function() {deepEqual( Stem("lobbicsoport"), "lobbicsopor");});
test("lobbizni -> lobbizn", function() {deepEqual( Stem("lobbizni"), "lobbizn");});
test("lobbizás -> lobbizás", function() {deepEqual( Stem("lobbizás"), "lobbizás");});
test("lobbyzása -> lobbyzás", function() {deepEqual( Stem("lobbyzása"), "lobbyzás");});
test("lobbizó -> lobbizó", function() {deepEqual( Stem("lobbizó"), "lobbizó");});
test("lobbizók -> lobbizó", function() {deepEqual( Stem("lobbizók"), "lobbizó");});
test("lobbyereje -> lobbyere", function() {deepEqual( Stem("lobbyereje"), "lobbyere");});
test("lobbyerőt -> lobbyerő", function() {deepEqual( Stem("lobbyerőt"), "lobbyerő");});
test("lobogott -> lobogot", function() {deepEqual( Stem("lobogott"), "lobogot");});
test("lobogtatnia -> lobogtatn", function() {deepEqual( Stem("lobogtatnia"), "lobogtatn");});
test("lobogású -> lobogású", function() {deepEqual( Stem("lobogású"), "lobogású");});
test("lobogó -> lobogó", function() {deepEqual( Stem("lobogó"), "lobogó");});
test("lobogókat -> lobogó", function() {deepEqual( Stem("lobogókat"), "lobogó");});
test("lobogót -> lobogó", function() {deepEqual( Stem("lobogót"), "lobogó");});
test("loccsantak -> loccsant", function() {deepEqual( Stem("loccsantak"), "loccsant");});
test("loccsanás -> loccsanás", function() {deepEqual( Stem("loccsanás"), "loccsanás");});
test("loccsanások -> loccsanás", function() {deepEqual( Stem("loccsanások"), "loccsanás");});
test("loccsanásokkal -> loccsanás", function() {deepEqual( Stem("loccsanásokkal"), "loccsanás");});
test("loccsanásra -> loccsanás", function() {deepEqual( Stem("loccsanásra"), "loccsanás");});
test("loccsanással -> loccsanás", function() {deepEqual( Stem("loccsanással"), "loccsanás");});
test("loccsanást -> loccsanás", function() {deepEqual( Stem("loccsanást"), "loccsanás");});
test("loci -> loc", function() {deepEqual( Stem("loci"), "loc");});
test("locsogsz -> locsogsz", function() {deepEqual( Stem("locsogsz"), "locsogsz");});
test("locsok -> locs", function() {deepEqual( Stem("locsok"), "locs");});
test("locsolkodtunk -> locsolkodt", function() {deepEqual( Stem("locsolkodtunk"), "locsolkodt");});
test("locsolkodás -> locsolkodás", function() {deepEqual( Stem("locsolkodás"), "locsolkodás");});
test("locsolkodásból -> locsolkodás", function() {deepEqual( Stem("locsolkodásból"), "locsolkodás");});
test("locsolkodók -> locsolkodó", function() {deepEqual( Stem("locsolkodók"), "locsolkodó");});
test("locsolkodókat -> locsolkodó", function() {deepEqual( Stem("locsolkodókat"), "locsolkodó");});
test("locsolni -> locsoln", function() {deepEqual( Stem("locsolni"), "locsoln");});
test("locsolom -> locsol", function() {deepEqual( Stem("locsolom"), "locsol");});
test("locsoltak -> locsolt", function() {deepEqual( Stem("locsoltak"), "locsolt");});
test("locsoltuk -> locsolt", function() {deepEqual( Stem("locsoltuk"), "locsolt");});
test("locsolták -> locsolta", function() {deepEqual( Stem("locsolták"), "locsolta");});
test("locsolt -> locsol", function() {deepEqual( Stem("locsolt"), "locsol");});
test("locsolók -> locsoló", function() {deepEqual( Stem("locsolók"), "locsoló");});
test("locsolóvers -> locsolóvers", function() {deepEqual( Stem("locsolóvers"), "locsolóvers");});
test("log -> log", function() {deepEqual( Stem("log"), "log");});
test("logaritmusok -> logaritmus", function() {deepEqual( Stem("logaritmusok"), "logaritmus");});
test("logikai -> logi", function() {deepEqual( Stem("logikai"), "logi");});
test("logikailag -> logikailag", function() {deepEqual( Stem("logikailag"), "logikailag");});
test("logikus -> logikus", function() {deepEqual( Stem("logikus"), "logikus");});
test("logikusabban -> logikusab", function() {deepEqual( Stem("logikusabban"), "logikusab");});
test("logikusan -> logikus", function() {deepEqual( Stem("logikusan"), "logikus");});
test("logikusnak -> logikus", function() {deepEqual( Stem("logikusnak"), "logikus");});
test("logika -> log", function() {deepEqual( Stem("logika"), "log");});
test("logikában -> log", function() {deepEqual( Stem("logikában"), "log");});
test("logikája -> logiká", function() {deepEqual( Stem("logikája"), "logiká");});
test("logikájából -> logiká", function() {deepEqual( Stem("logikájából"), "logiká");});
test("logikájáról -> logiká", function() {deepEqual( Stem("logikájáról"), "logiká");});
test("logikáját -> logiká", function() {deepEqual( Stem("logikáját"), "logiká");});
test("logikájú -> logikájú", function() {deepEqual( Stem("logikájú"), "logikájú");});
test("logikának -> log", function() {deepEqual( Stem("logikának"), "log");});
test("logikánk -> logika", function() {deepEqual( Stem("logikánk"), "logika");});
test("logikára -> log", function() {deepEqual( Stem("logikára"), "log");});
test("logikát -> log", function() {deepEqual( Stem("logikát"), "log");});
test("logikával -> log", function() {deepEqual( Stem("logikával"), "log");});
test("logisztika -> logiszt", function() {deepEqual( Stem("logisztika"), "logiszt");});
test("logisztikában -> logiszt", function() {deepEqual( Stem("logisztikában"), "logiszt");});
test("logisztikán -> logiszt", function() {deepEqual( Stem("logisztikán"), "logiszt");});
test("logisztikai -> logiszti", function() {deepEqual( Stem("logisztikai"), "logiszti");});
test("logni -> logn", function() {deepEqual( Stem("logni"), "logn");});
test("logója -> logó", function() {deepEqual( Stem("logója"), "logó");});
test("logójukat -> logó", function() {deepEqual( Stem("logójukat"), "logó");});
test("logókat -> logó", function() {deepEqual( Stem("logókat"), "logó");});
test("lohasztotta -> lohasztott", function() {deepEqual( Stem("lohasztotta"), "lohasztott");});
test("lohol -> lohol", function() {deepEqual( Stem("lohol"), "lohol");});
test("loholó -> loholó", function() {deepEqual( Stem("loholó"), "loholó");});
test("lojalitás -> lojalitás", function() {deepEqual( Stem("lojalitás"), "lojalitás");});
test("lojalitása -> lojalitás", function() {deepEqual( Stem("lojalitása"), "lojalitás");});
test("lojalitását -> lojalitás", function() {deepEqual( Stem("lojalitását"), "lojalitás");});
test("lojális -> lojális", function() {deepEqual( Stem("lojális"), "lojális");});
test("lojálisak -> lojális", function() {deepEqual( Stem("lojálisak"), "lojális");});
test("lojálisan -> lojális", function() {deepEqual( Stem("lojálisan"), "lojális");});
test("lojálisnak -> lojális", function() {deepEqual( Stem("lojálisnak"), "lojális");});
test("lokalizálni -> lokalizáln", function() {deepEqual( Stem("lokalizálni"), "lokalizáln");});
test("lokalizálódtak -> lokalizálódt", function() {deepEqual( Stem("lokalizálódtak"), "lokalizálódt");});
test("lokalizált -> lokalizál", function() {deepEqual( Stem("lokalizált"), "lokalizál");});
test("lokalizálásához -> lokalizálás", function() {deepEqual( Stem("lokalizálásához"), "lokalizálás");});
test("lokalizálására -> lokalizálás", function() {deepEqual( Stem("lokalizálására"), "lokalizálás");});
test("lokomotív -> lokomotív", function() {deepEqual( Stem("lokomotív"), "lokomotív");});
test("lokomotívként -> lokomotív", function() {deepEqual( Stem("lokomotívként"), "lokomotív");});
test("lokális -> lokális", function() {deepEqual( Stem("lokális"), "lokális");});
test("lokálisan -> lokális", function() {deepEqual( Stem("lokálisan"), "lokális");});
test("lokálisnak -> lokális", function() {deepEqual( Stem("lokálisnak"), "lokális");});
test("lombard -> lombar", function() {deepEqual( Stem("lombard"), "lombar");});
test("lombikba -> lomb", function() {deepEqual( Stem("lombikba"), "lomb");});
test("lombikból -> lomb", function() {deepEqual( Stem("lombikból"), "lomb");});
test("lombjain -> lomb", function() {deepEqual( Stem("lombjain"), "lomb");});
test("lombjait -> lomb", function() {deepEqual( Stem("lombjait"), "lomb");});
test("lomhán -> lomh", function() {deepEqual( Stem("lomhán"), "lomh");});
test("lompos -> lompos", function() {deepEqual( Stem("lompos"), "lompos");});
test("lomposan -> lompos", function() {deepEqual( Stem("lomposan"), "lompos");});
test("lomtalanítás -> lomtalanítás", function() {deepEqual( Stem("lomtalanítás"), "lomtalanítás");});
test("lomtárba -> lomtár", function() {deepEqual( Stem("lomtárba"), "lomtár");});
test("londoni -> london", function() {deepEqual( Stem("londoni"), "london");});
test("lopakodnak -> lop", function() {deepEqual( Stem("lopakodnak"), "lop");});
test("lopakodva -> lopakodv", function() {deepEqual( Stem("lopakodva"), "lopakodv");});
test("lophatta -> lophatt", function() {deepEqual( Stem("lophatta"), "lophatt");});
test("lopkodott -> lopkodot", function() {deepEqual( Stem("lopkodott"), "lopkodot");});
test("lop -> lop", function() {deepEqual( Stem("lop"), "lop");});
test("lopja -> lop", function() {deepEqual( Stem("lopja"), "lop");});
test("lopjak -> lopj", function() {deepEqual( Stem("lopjak"), "lopj");});
test("lopják -> lopja", function() {deepEqual( Stem("lopják"), "lopja");});
test("lopnak -> lop", function() {deepEqual( Stem("lopnak"), "lop");});
test("lopni -> lopn", function() {deepEqual( Stem("lopni"), "lopn");});
test("lopok -> lop", function() {deepEqual( Stem("lopok"), "lop");});
test("lopsz -> lopsz", function() {deepEqual( Stem("lopsz"), "lopsz");});
test("lopta -> lopt", function() {deepEqual( Stem("lopta"), "lopt");});
test("loptad -> lopt", function() {deepEqual( Stem("loptad"), "lopt");});
test("loptak -> lopt", function() {deepEqual( Stem("loptak"), "lopt");});
test("loptam -> lopt", function() {deepEqual( Stem("loptam"), "lopt");});
test("lopták -> lopta", function() {deepEqual( Stem("lopták"), "lopta");});
test("lopott -> lopot", function() {deepEqual( Stem("lopott"), "lopot");});
test("lopva -> lopv", function() {deepEqual( Stem("lopva"), "lopv");});
test("lopás -> lopás", function() {deepEqual( Stem("lopás"), "lopás");});
test("lopásból -> lopás", function() {deepEqual( Stem("lopásból"), "lopás");});
test("lopások -> lopás", function() {deepEqual( Stem("lopások"), "lopás");});
test("lopásokra -> lopás", function() {deepEqual( Stem("lopásokra"), "lopás");});
test("lopóztak -> lopózt", function() {deepEqual( Stem("lopóztak"), "lopózt");});
test("lordbírák -> lordbíra", function() {deepEqual( Stem("lordbírák"), "lordbíra");});
test("lordokkal -> lord", function() {deepEqual( Stem("lordokkal"), "lord");});
test("lordság -> lordság", function() {deepEqual( Stem("lordság"), "lordság");});
test("lornyettet -> lornyett", function() {deepEqual( Stem("lornyettet"), "lornyett");});
test("lornyon -> lorny", function() {deepEqual( Stem("lornyon"), "lorny");});
test("lornyonján -> lornyon", function() {deepEqual( Stem("lornyonján"), "lornyon");});
test("lornyont -> lornyon", function() {deepEqual( Stem("lornyont"), "lornyon");});
test("lotophagok -> lotophag", function() {deepEqual( Stem("lotophagok"), "lotophag");});
test("lottóigazgatósághoz -> lottóigazgatóság", function() {deepEqual( Stem("lottóigazgatósághoz"), "lottóigazgatóság");});
test("lottójáték -> lottójáte", function() {deepEqual( Stem("lottójáték"), "lottójáte");});
test("lottóláz -> lottóláz", function() {deepEqual( Stem("lottóláz"), "lottóláz");});
test("lottó -> lottó", function() {deepEqual( Stem("lottó"), "lottó");});
test("lottón -> lottó", function() {deepEqual( Stem("lottón"), "lottó");});
test("lottóra -> lottó", function() {deepEqual( Stem("lottóra"), "lottó");});
test("lottószelvény -> lottószelvény", function() {deepEqual( Stem("lottószelvény"), "lottószelvény");});
test("lottótörténelmében -> lottótörténelm", function() {deepEqual( Stem("lottótörténelmében"), "lottótörténelm");});
test("lottózóba -> lottózó", function() {deepEqual( Stem("lottózóba"), "lottózó");});
test("lottózók -> lottózó", function() {deepEqual( Stem("lottózók"), "lottózó");});
test("lourdes-i -> lourdes-", function() {deepEqual( Stem("lourdes-i"), "lourdes-");});
test("lovagias -> lovagias", function() {deepEqual( Stem("lovagias"), "lovagias");});
test("lovagiasabbá -> lovagiasab", function() {deepEqual( Stem("lovagiasabbá"), "lovagiasab");});
test("lovagiasság -> lovagiasság", function() {deepEqual( Stem("lovagiasság"), "lovagiasság");});
test("lovagjává -> lovag", function() {deepEqual( Stem("lovagjává"), "lovag");});
test("lovaglás -> lovaglás", function() {deepEqual( Stem("lovaglás"), "lovaglás");});
test("lovaglással -> lovaglás", function() {deepEqual( Stem("lovaglással"), "lovaglás");});
test("lovaglást -> lovaglás", function() {deepEqual( Stem("lovaglást"), "lovaglás");});
test("lovagló -> lovagló", function() {deepEqual( Stem("lovagló"), "lovagló");});
test("lovaglócsizmát -> lovaglócsizm", function() {deepEqual( Stem("lovaglócsizmát"), "lovaglócsizm");});
test("lovaglóhelyzetben -> lovaglóhelyzet", function() {deepEqual( Stem("lovaglóhelyzetben"), "lovaglóhelyzet");});
test("lovaglónadrágot -> lovaglónadrág", function() {deepEqual( Stem("lovaglónadrágot"), "lovaglónadrág");});
test("lovagolhatunk -> lovagolhat", function() {deepEqual( Stem("lovagolhatunk"), "lovagolhat");});
test("lovagol -> lovagol", function() {deepEqual( Stem("lovagol"), "lovagol");});
test("lovagolni -> lovagoln", function() {deepEqual( Stem("lovagolni"), "lovagoln");});
test("lovagolom -> lovagol", function() {deepEqual( Stem("lovagolom"), "lovagol");});
test("lovagoltam -> lovagolt", function() {deepEqual( Stem("lovagoltam"), "lovagolt");});
test("lovagoltunk -> lovagolt", function() {deepEqual( Stem("lovagoltunk"), "lovagolt");});
test("lovagolunk -> lovagol", function() {deepEqual( Stem("lovagolunk"), "lovagol");});
test("lovak -> lov", function() {deepEqual( Stem("lovak"), "lov");});
test("lovakat -> lov", function() {deepEqual( Stem("lovakat"), "lov");});
test("lovakkal -> lov", function() {deepEqual( Stem("lovakkal"), "lov");});
test("lovam -> lov", function() {deepEqual( Stem("lovam"), "lov");});
test("lovat -> lov", function() {deepEqual( Stem("lovat"), "lov");});
test("lovon -> lov", function() {deepEqual( Stem("lovon"), "lov");});
test("lovát -> lov", function() {deepEqual( Stem("lovát"), "lov");});
test("lovával -> lov", function() {deepEqual( Stem("lovával"), "lov");});
test("ló -> ló", function() {deepEqual( Stem("ló"), "ló");});
test("lóból -> ló", function() {deepEqual( Stem("lóból"), "ló");});
test("lóra -> ló", function() {deepEqual( Stem("lóra"), "ló");});
test("lóval -> ló", function() {deepEqual( Stem("lóval"), "ló");});
test("lóról -> ló", function() {deepEqual( Stem("lóról"), "ló");});
test("lovardába -> lovard", function() {deepEqual( Stem("lovardába"), "lovard");});
test("lovardában -> lovard", function() {deepEqual( Stem("lovardában"), "lovard");});
test("lovardát -> lovard", function() {deepEqual( Stem("lovardát"), "lovard");});
test("lovas -> lovas", function() {deepEqual( Stem("lovas"), "lovas");});
test("lovasok -> lovas", function() {deepEqual( Stem("lovasok"), "lovas");});
test("lovast -> lovas", function() {deepEqual( Stem("lovast"), "lovas");});
test("lovasbemutatóra -> lovasbemutató", function() {deepEqual( Stem("lovasbemutatóra"), "lovasbemutató");});
test("lovasbemutatót -> lovasbemutató", function() {deepEqual( Stem("lovasbemutatót"), "lovasbemutató");});
test("lovasiskola -> lovasiskol", function() {deepEqual( Stem("lovasiskola"), "lovasiskol");});
test("lovasiskolában -> lovasiskol", function() {deepEqual( Stem("lovasiskolában"), "lovasiskol");});
test("lovasnapokat -> lovasnap", function() {deepEqual( Stem("lovasnapokat"), "lovasnap");});
test("lovaspoló -> lovaspoló", function() {deepEqual( Stem("lovaspoló"), "lovaspoló");});
test("lovaspálya -> lovaspály", function() {deepEqual( Stem("lovaspálya"), "lovaspály");});
test("lovász -> lovász", function() {deepEqual( Stem("lovász"), "lovász");});
test("lovásznak -> lovász", function() {deepEqual( Stem("lovásznak"), "lovász");});
test("lovászért -> lovász", function() {deepEqual( Stem("lovászért"), "lovász");});
test("lubickolás -> lubickolás", function() {deepEqual( Stem("lubickolás"), "lubickolás");});
test("lubickolást -> lubickolás", function() {deepEqual( Stem("lubickolást"), "lubickolás");});
test("lucskos -> lucskos", function() {deepEqual( Stem("lucskos"), "lucskos");});
test("lufim -> luf", function() {deepEqual( Stem("lufim"), "luf");});
test("lufit -> luf", function() {deepEqual( Stem("lufit"), "luf");});
test("luganói -> luganó", function() {deepEqual( Stem("luganói"), "luganó");});
test("lukasórákat -> lukasóra", function() {deepEqual( Stem("lukasórákat"), "lukasóra");});
test("lumpolunk -> lumpol", function() {deepEqual( Stem("lumpolunk"), "lumpol");});
test("lunchöt -> lunch", function() {deepEqual( Stem("lunchöt"), "lunch");});
test("luo -> lu", function() {deepEqual( Stem("luo"), "lu");});
test("lurkók -> lurkó", function() {deepEqual( Stem("lurkók"), "lurkó");});
test("lusta -> lust", function() {deepEqual( Stem("lusta"), "lust");});
test("lustaságom -> lustaság", function() {deepEqual( Stem("lustaságom"), "lustaság");});
test("lustább -> lustább", function() {deepEqual( Stem("lustább"), "lustább");});
test("lustálkodik -> lustálkod", function() {deepEqual( Stem("lustálkodik"), "lustálkod");});
test("lustálkodni -> lustálkodn", function() {deepEqual( Stem("lustálkodni"), "lustálkodn");});
test("lustálkodom -> lustálkod", function() {deepEqual( Stem("lustálkodom"), "lustálkod");});
test("lutrit -> lutr", function() {deepEqual( Stem("lutrit"), "lutr");});
test("lux -> lux", function() {deepEqual( Stem("lux"), "lux");});
test("luxe-változatban -> luxe-változat", function() {deepEqual( Stem("luxe-változatban"), "luxe-változat");});
test("luxemburgi -> luxemburg", function() {deepEqual( Stem("luxemburgi"), "luxemburg");});
test("luxus-bevásárlása -> luxus-bevásárlás", function() {deepEqual( Stem("luxus-bevásárlása"), "luxus-bevásárlás");});
test("luxus -> luxus", function() {deepEqual( Stem("luxus"), "luxus");});
test("luxusa -> luxus", function() {deepEqual( Stem("luxusa"), "luxus");});
test("luxusadót -> luxusadó", function() {deepEqual( Stem("luxusadót"), "luxusadó");});
test("luxusajánlatokat -> luxusajánlat", function() {deepEqual( Stem("luxusajánlatokat"), "luxusajánlat");});
test("luxuscikkekkel -> luxuscikk", function() {deepEqual( Stem("luxuscikkekkel"), "luxuscikk");});
test("luxusfehérneműk -> luxusfehérnemű", function() {deepEqual( Stem("luxusfehérneműk"), "luxusfehérnemű");});
test("luxusgőzősnek -> luxusgőzős", function() {deepEqual( Stem("luxusgőzősnek"), "luxusgőzős");});
test("luxusgőzösön -> luxusgőzös", function() {deepEqual( Stem("luxusgőzösön"), "luxusgőzös");});
test("luxushajó -> luxushajó", function() {deepEqual( Stem("luxushajó"), "luxushajó");});
test("luxushajója -> luxushajó", function() {deepEqual( Stem("luxushajója"), "luxushajó");});
test("luxusingatlanoknak -> luxusingatlan", function() {deepEqual( Stem("luxusingatlanoknak"), "luxusingatlan");});
test("luxuslimuzinok -> luxuslimuzin", function() {deepEqual( Stem("luxuslimuzinok"), "luxuslimuzin");});
test("luxusmodell -> luxusmodell", function() {deepEqual( Stem("luxusmodell"), "luxusmodell");});
test("luxusnő -> luxusnő", function() {deepEqual( Stem("luxusnő"), "luxusnő");});
test("luxusszálló -> luxusszálló", function() {deepEqual( Stem("luxusszálló"), "luxusszálló");});
test("luxustulajdonok -> luxustulajdon", function() {deepEqual( Stem("luxustulajdonok"), "luxustulajdon");});
test("luxusutat -> luxusut", function() {deepEqual( Stem("luxusutat"), "luxusut");});
test("luó -> luó", function() {deepEqual( Stem("luó"), "luó");});
test("lyoni -> lyon", function() {deepEqual( Stem("lyoni"), "lyon");});
test("lyuk -> lyu", function() {deepEqual( Stem("lyuk"), "lyu");});
test("lyukat -> lyu", function() {deepEqual( Stem("lyukat"), "lyu");});
test("lyukkal -> lyu", function() {deepEqual( Stem("lyukkal"), "lyu");});
test("lyukain -> lyu", function() {deepEqual( Stem("lyukain"), "lyu");});
test("lyukak -> lyuk", function() {deepEqual( Stem("lyukak"), "lyuk");});
test("lyukakat -> lyuk", function() {deepEqual( Stem("lyukakat"), "lyuk");});
test("lyukakkal -> lyuk", function() {deepEqual( Stem("lyukakkal"), "lyuk");});
test("lyukakon -> lyuk", function() {deepEqual( Stem("lyukakon"), "lyuk");});
test("lyuknak -> lyu", function() {deepEqual( Stem("lyuknak"), "lyu");});
test("lyukra -> lyu", function() {deepEqual( Stem("lyukra"), "lyu");});
test("lyukadnánk -> lyukadna", function() {deepEqual( Stem("lyukadnánk"), "lyukadna");});
test("lyukadtak -> lyukadt", function() {deepEqual( Stem("lyukadtak"), "lyukadt");});
test("lyukadtunk -> lyukadt", function() {deepEqual( Stem("lyukadtunk"), "lyukadt");});
test("lyukas -> lyukas", function() {deepEqual( Stem("lyukas"), "lyukas");});
test("lyukasztgatás -> lyukasztgatás", function() {deepEqual( Stem("lyukasztgatás"), "lyukasztgatás");});
test("lyukasórákat -> lyukasóra", function() {deepEqual( Stem("lyukasórákat"), "lyukasóra");});
test("lyukasórákon -> lyukasóra", function() {deepEqual( Stem("lyukasórákon"), "lyukasóra");});
test("lyukasóránk -> lyukasóra", function() {deepEqual( Stem("lyukasóránk"), "lyukasóra");});
test("lyukkártya -> lyukkárty", function() {deepEqual( Stem("lyukkártya"), "lyukkárty");});
test("lyukkártyáról -> lyukkárty", function() {deepEqual( Stem("lyukkártyáról"), "lyukkárty");});
test("lyukkártya-feldolgozó -> lyukkártya-feldolgozó", function() {deepEqual( Stem("lyukkártya-feldolgozó"), "lyukkártya-feldolgozó");});
test("lyukkártyás -> lyukkártyás", function() {deepEqual( Stem("lyukkártyás"), "lyukkártyás");});
test("lyukszalag -> lyukszalag", function() {deepEqual( Stem("lyukszalag"), "lyukszalag");});
test("láb -> láb", function() {deepEqual( Stem("láb"), "láb");});
test("lába -> lá", function() {deepEqual( Stem("lába"), "lá");});
test("lábadhoz -> láb", function() {deepEqual( Stem("lábadhoz"), "láb");});
test("lábadon -> láb", function() {deepEqual( Stem("lábadon"), "láb");});
test("lábaik -> láb", function() {deepEqual( Stem("lábaik"), "láb");});
test("lábaikon -> láb", function() {deepEqual( Stem("lábaikon"), "láb");});
test("lábaim -> láb", function() {deepEqual( Stem("lábaim"), "láb");});
test("lábain -> láb", function() {deepEqual( Stem("lábain"), "láb");});
test("lábaink -> láb", function() {deepEqual( Stem("lábaink"), "láb");});
test("lábainkat -> láb", function() {deepEqual( Stem("lábainkat"), "láb");});
test("lábainál -> láb", function() {deepEqual( Stem("lábainál"), "láb");});
test("lábak -> láb", function() {deepEqual( Stem("lábak"), "láb");});
test("lábakat -> láb", function() {deepEqual( Stem("lábakat"), "láb");});
test("lábakkal -> láb", function() {deepEqual( Stem("lábakkal"), "láb");});
test("lábakon -> láb", function() {deepEqual( Stem("lábakon"), "láb");});
test("lábam -> láb", function() {deepEqual( Stem("lábam"), "láb");});
test("lábamat -> láb", function() {deepEqual( Stem("lábamat"), "láb");});
test("lábamba -> láb", function() {deepEqual( Stem("lábamba"), "láb");});
test("lábamból -> láb", function() {deepEqual( Stem("lábamból"), "láb");});
test("lábammal -> láb", function() {deepEqual( Stem("lábammal"), "láb");});
test("lábamon -> láb", function() {deepEqual( Stem("lábamon"), "láb");});
test("lábamra -> láb", function() {deepEqual( Stem("lábamra"), "láb");});
test("lábamról -> láb", function() {deepEqual( Stem("lábamról"), "láb");});
test("lábat -> láb", function() {deepEqual( Stem("lábat"), "láb");});
test("lábbal -> láb", function() {deepEqual( Stem("lábbal"), "láb");});
test("lábban -> láb", function() {deepEqual( Stem("lábban"), "láb");});
test("lábon -> láb", function() {deepEqual( Stem("lábon"), "láb");});
test("lábra -> láb", function() {deepEqual( Stem("lábra"), "láb");});
test("lábuk -> láb", function() {deepEqual( Stem("lábuk"), "láb");});
test("lábukat -> láb", function() {deepEqual( Stem("lábukat"), "láb");});
test("lábukból -> láb", function() {deepEqual( Stem("lábukból"), "láb");});
test("lábukon -> láb", function() {deepEqual( Stem("lábukon"), "láb");});
test("lábunk -> láb", function() {deepEqual( Stem("lábunk"), "láb");});
test("lábunkat -> láb", function() {deepEqual( Stem("lábunkat"), "láb");});
test("lábunkon -> láb", function() {deepEqual( Stem("lábunkon"), "láb");});
test("lábához -> láb", function() {deepEqual( Stem("lábához"), "láb");});
test("lábán -> láb", function() {deepEqual( Stem("lábán"), "láb");});
test("lábánál -> láb", function() {deepEqual( Stem("lábánál"), "láb");});
test("lábára -> láb", function() {deepEqual( Stem("lábára"), "láb");});
test("lábáról -> láb", function() {deepEqual( Stem("lábáról"), "láb");});
test("lábát -> láb", function() {deepEqual( Stem("lábát"), "láb");});
test("lábával -> láb", function() {deepEqual( Stem("lábával"), "láb");});
test("lábal -> lábal", function() {deepEqual( Stem("lábal"), "lábal");});
test("lábadt -> láb", function() {deepEqual( Stem("lábadt"), "láb");});
test("lábas -> lábas", function() {deepEqual( Stem("lábas"), "lábas");});
test("lábasban -> lábas", function() {deepEqual( Stem("lábasban"), "lábas");});
test("lábast -> lábas", function() {deepEqual( Stem("lábast"), "lábas");});
test("lábbeli-kiskereskedelmi -> lábbeli-kiskereskedelm", function() {deepEqual( Stem("lábbeli-kiskereskedelmi"), "lábbeli-kiskereskedelm");});
test("lábdobogás -> lábdobogás", function() {deepEqual( Stem("lábdobogás"), "lábdobogás");});
test("lábdobogással -> lábdobogás", function() {deepEqual( Stem("lábdobogással"), "lábdobogás");});
test("lábfej -> lábfej", function() {deepEqual( Stem("lábfej"), "lábfej");});
test("lábikráiban -> lábikra", function() {deepEqual( Stem("lábikráiban"), "lábikra");});
test("lábikráján -> lábikrá", function() {deepEqual( Stem("lábikráján"), "lábikrá");});
test("lábkiosztású -> lábkiosztású", function() {deepEqual( Stem("lábkiosztású"), "lábkiosztású");});
test("lábszára -> lábsz", function() {deepEqual( Stem("lábszára"), "lábsz");});
test("lábszárból -> lábszár", function() {deepEqual( Stem("lábszárból"), "lábszár");});
test("lábszáron -> lábszár", function() {deepEqual( Stem("lábszáron"), "lábszár");});
test("lábszárából -> lábszár", function() {deepEqual( Stem("lábszárából"), "lábszár");});
test("lábszárcsontjain -> lábszárcsont", function() {deepEqual( Stem("lábszárcsontjain"), "lábszárcsont");});
test("lábszárcsontjába -> lábszárcsont", function() {deepEqual( Stem("lábszárcsontjába"), "lábszárcsont");});
test("lábszárfekélye -> lábszárfekély", function() {deepEqual( Stem("lábszárfekélye"), "lábszárfekély");});
test("lábszárfekélyét -> lábszárfekély", function() {deepEqual( Stem("lábszárfekélyét"), "lábszárfekély");});
test("lábtér -> lábtér", function() {deepEqual( Stem("lábtér"), "lábtér");});
test("lábtörlője -> lábtörlő", function() {deepEqual( Stem("lábtörlője"), "lábtörlő");});
test("lábtörlők -> lábtörlő", function() {deepEqual( Stem("lábtörlők"), "lábtörlő");});
test("lábtörlőnkre -> lábtörlő", function() {deepEqual( Stem("lábtörlőnkre"), "lábtörlő");});
test("lábujjaid -> lábuj", function() {deepEqual( Stem("lábujjaid"), "lábuj");});
test("lábujjait -> lábuj", function() {deepEqual( Stem("lábujjait"), "lábuj");});
test("lábujjam -> lábujj", function() {deepEqual( Stem("lábujjam"), "lábujj");});
test("lábujjat -> lábujj", function() {deepEqual( Stem("lábujjat"), "lábujj");});
test("lábujját -> lábuj", function() {deepEqual( Stem("lábujját"), "lábuj");});
test("lábúlag -> lábúlag", function() {deepEqual( Stem("lábúlag"), "lábúlag");});
test("láda -> lád", function() {deepEqual( Stem("láda"), "lád");});
test("ládába -> lád", function() {deepEqual( Stem("ládába"), "lád");});
test("ládában -> lád", function() {deepEqual( Stem("ládában"), "lád");});
test("ládából -> lád", function() {deepEqual( Stem("ládából"), "lád");});
test("ládához -> lád", function() {deepEqual( Stem("ládához"), "lád");});
test("ládájába -> ládá", function() {deepEqual( Stem("ládájába"), "ládá");});
test("ládájához -> ládá", function() {deepEqual( Stem("ládájához"), "ládá");});
test("ládáján -> ládá", function() {deepEqual( Stem("ládáján"), "ládá");});
test("ládák -> láda", function() {deepEqual( Stem("ládák"), "láda");});
test("ládákat -> láda", function() {deepEqual( Stem("ládákat"), "láda");});
test("ládákkal -> láda", function() {deepEqual( Stem("ládákkal"), "láda");});
test("ládákon -> láda", function() {deepEqual( Stem("ládákon"), "láda");});
test("ládán -> lád", function() {deepEqual( Stem("ládán"), "lád");});
test("ládára -> lád", function() {deepEqual( Stem("ládára"), "lád");});
test("ládát -> lád", function() {deepEqual( Stem("ládát"), "lád");});
test("ládával -> lád", function() {deepEqual( Stem("ládával"), "lád");});
test("lágerek -> láger", function() {deepEqual( Stem("lágerek"), "láger");});
test("lágy -> lágy", function() {deepEqual( Stem("lágy"), "lágy");});
test("lágyabbnak -> lágyabb", function() {deepEqual( Stem("lágyabbnak"), "lágyabb");});
test("lágyan -> lágy", function() {deepEqual( Stem("lágyan"), "lágy");});
test("lágynak -> lágy", function() {deepEqual( Stem("lágynak"), "lágy");});
test("lágya -> lágy", function() {deepEqual( Stem("lágya"), "lágy");});
test("lágyrészsérülésekkel -> lágyrészsérülés", function() {deepEqual( Stem("lágyrészsérülésekkel"), "lágyrészsérülés");});
test("lágyszívű -> lágyszívű", function() {deepEqual( Stem("lágyszívű"), "lágyszívű");});
test("lágysága -> lágyság", function() {deepEqual( Stem("lágysága"), "lágyság");});
test("lágyékába -> lágye", function() {deepEqual( Stem("lágyékába"), "lágye");});
test("lám -> lám", function() {deepEqual( Stem("lám"), "lám");});
test("lámpaernyő -> lámpaernyő", function() {deepEqual( Stem("lámpaernyő"), "lámpaernyő");});
test("lámpafényben -> lámpafény", function() {deepEqual( Stem("lámpafényben"), "lámpafény");});
test("lámpafénynél -> lámpafény", function() {deepEqual( Stem("lámpafénynél"), "lámpafény");});
test("lámpajavító -> lámpajavító", function() {deepEqual( Stem("lámpajavító"), "lámpajavító");});
test("lámpa -> lámp", function() {deepEqual( Stem("lámpa"), "lámp");});
test("lámpái -> lámpa", function() {deepEqual( Stem("lámpái"), "lámpa");});
test("lámpák -> lámpa", function() {deepEqual( Stem("lámpák"), "lámpa");});
test("lámpákat -> lámpa", function() {deepEqual( Stem("lámpákat"), "lámpa");});
test("lámpáknál -> lámpa", function() {deepEqual( Stem("lámpáknál"), "lámpa");});
test("lámpánál -> lámp", function() {deepEqual( Stem("lámpánál"), "lámp");});
test("lámpát -> lámp", function() {deepEqual( Stem("lámpát"), "lámp");});
test("lámpával -> lámp", function() {deepEqual( Stem("lámpával"), "lámp");});
test("lámpáért -> lámp", function() {deepEqual( Stem("lámpáért"), "lámp");});
test("lámpás -> lámpás", function() {deepEqual( Stem("lámpás"), "lámpás");});
test("lámpással -> lámpás", function() {deepEqual( Stem("lámpással"), "lámpás");});
test("lámpást -> lámpás", function() {deepEqual( Stem("lámpást"), "lámpás");});
test("lámához -> lám", function() {deepEqual( Stem("lámához"), "lám");});
test("lámára -> lám", function() {deepEqual( Stem("lámára"), "lám");});
test("lámát -> lám", function() {deepEqual( Stem("lámát"), "lám");});
test("lánc -> lánc", function() {deepEqual( Stem("lánc"), "lánc");});
test("láncaiktól -> lánc", function() {deepEqual( Stem("láncaiktól"), "lánc");});
test("láncait -> lánc", function() {deepEqual( Stem("láncait"), "lánc");});
test("láncban -> lánc", function() {deepEqual( Stem("láncban"), "lánc");});
test("láncon -> lánc", function() {deepEqual( Stem("láncon"), "lánc");});
test("láncot -> lánc", function() {deepEqual( Stem("láncot"), "lánc");});
test("láncnak -> lánc", function() {deepEqual( Stem("láncnak"), "lánc");});
test("láncok -> lánc", function() {deepEqual( Stem("láncok"), "lánc");});
test("láncokat -> lánc", function() {deepEqual( Stem("láncokat"), "lánc");});
test("láncokkal -> lánc", function() {deepEqual( Stem("láncokkal"), "lánc");});
test("láncukat -> lánc", function() {deepEqual( Stem("láncukat"), "lánc");});
test("láncábanláncát -> láncábanlánc", function() {deepEqual( Stem("láncábanláncát"), "láncábanlánc");});
test("láncfűrésszel -> láncfűrész", function() {deepEqual( Stem("láncfűrésszel"), "láncfűrész");});
test("láncképzésben -> láncképzés", function() {deepEqual( Stem("láncképzésben"), "láncképzés");});
test("láncolat -> láncol", function() {deepEqual( Stem("láncolat"), "láncol");});
test("láncolata -> láncolat", function() {deepEqual( Stem("láncolata"), "láncolat");});
test("láncolatot -> láncolat", function() {deepEqual( Stem("láncolatot"), "láncolat");});
test("láncolatra -> láncolat", function() {deepEqual( Stem("láncolatra"), "láncolat");});
test("láncolattal -> láncol", function() {deepEqual( Stem("láncolattal"), "láncol");});
test("láncolatát -> láncolat", function() {deepEqual( Stem("láncolatát"), "láncolat");});
test("láncolatával -> láncolat", function() {deepEqual( Stem("láncolatával"), "láncolat");});
test("láncolódnak -> láncoló", function() {deepEqual( Stem("láncolódnak"), "láncoló");});
test("láncos -> láncos", function() {deepEqual( Stem("láncos"), "láncos");});
test("láncreakciót -> láncreakció", function() {deepEqual( Stem("láncreakciót"), "láncreakció");});
test("láncszem -> láncsz", function() {deepEqual( Stem("láncszem"), "láncsz");});
test("láncszeme -> láncszem", function() {deepEqual( Stem("láncszeme"), "láncszem");});
test("láncszemei -> láncszem", function() {deepEqual( Stem("láncszemei"), "láncszem");});
test("láncszemet -> láncsz", function() {deepEqual( Stem("láncszemet"), "láncsz");});
test("lánctalpas -> lánctalpas", function() {deepEqual( Stem("lánctalpas"), "lánctalpas");});
test("láncú -> láncú", function() {deepEqual( Stem("láncú"), "láncú");});
test("láng -> láng", function() {deepEqual( Stem("láng"), "láng");});
test("lángba -> láng", function() {deepEqual( Stem("lángba"), "láng");});
test("lángban -> láng", function() {deepEqual( Stem("lángban"), "láng");});
test("lángra -> láng", function() {deepEqual( Stem("lángra"), "láng");});
test("lángfolyam -> lángfoly", function() {deepEqual( Stem("lángfolyam"), "lángfoly");});
test("lánggal -> láng", function() {deepEqual( Stem("lánggal"), "láng");});
test("lángja -> láng", function() {deepEqual( Stem("lángja"), "láng");});
test("lángjait -> láng", function() {deepEqual( Stem("lángjait"), "láng");});
test("lángok -> láng", function() {deepEqual( Stem("lángok"), "láng");});
test("lángokban -> láng", function() {deepEqual( Stem("lángokban"), "láng");});
test("lángol -> lángol", function() {deepEqual( Stem("lángol"), "lángol");});
test("lángolt -> lángol", function() {deepEqual( Stem("lángolt"), "lángol");});
test("lángoló -> lángoló", function() {deepEqual( Stem("lángoló"), "lángoló");});
test("lángost -> lángos", function() {deepEqual( Stem("lángost"), "lángos");});
test("lángpallosú -> lángpallosú", function() {deepEqual( Stem("lángpallosú"), "lángpallosú");});
test("lánnyal -> lány", function() {deepEqual( Stem("lánnyal"), "lány");});
test("lány -> lány", function() {deepEqual( Stem("lány"), "lány");});
test("lánya -> lány", function() {deepEqual( Stem("lánya"), "lány");});
test("lányaitokkal -> lány", function() {deepEqual( Stem("lányaitokkal"), "lány");});
test("lányba -> lány", function() {deepEqual( Stem("lányba"), "lány");});
test("lányban -> lány", function() {deepEqual( Stem("lányban"), "lány");});
test("lányból -> lány", function() {deepEqual( Stem("lányból"), "lány");});
test("lányhoz -> lány", function() {deepEqual( Stem("lányhoz"), "lány");});
test("lánynak -> lány", function() {deepEqual( Stem("lánynak"), "lány");});
test("lányok -> lány", function() {deepEqual( Stem("lányok"), "lány");});
test("lányokat -> lány", function() {deepEqual( Stem("lányokat"), "lány");});
test("lányokból -> lány", function() {deepEqual( Stem("lányokból"), "lány");});
test("lányokkal -> lány", function() {deepEqual( Stem("lányokkal"), "lány");});
test("lányoknak -> lány", function() {deepEqual( Stem("lányoknak"), "lány");});
test("lányoknál -> lány", function() {deepEqual( Stem("lányoknál"), "lány");});
test("lányokon -> lány", function() {deepEqual( Stem("lányokon"), "lány");});
test("lányokra -> lány", function() {deepEqual( Stem("lányokra"), "lány");});
test("lányokról -> lány", function() {deepEqual( Stem("lányokról"), "lány");});
test("lányom -> lány", function() {deepEqual( Stem("lányom"), "lány");});
test("lányomra -> lány", function() {deepEqual( Stem("lányomra"), "lány");});
test("lányra -> lány", function() {deepEqual( Stem("lányra"), "lány");});
test("lányról -> lány", function() {deepEqual( Stem("lányról"), "lány");});
test("lányt -> lány", function() {deepEqual( Stem("lányt"), "lány");});
test("lánytól -> lány", function() {deepEqual( Stem("lánytól"), "lány");});
test("lánynál -> lány", function() {deepEqual( Stem("lánynál"), "lány");});
test("lányuk -> lány", function() {deepEqual( Stem("lányuk"), "lány");});
test("lányukat -> lány", function() {deepEqual( Stem("lányukat"), "lány");});
test("lányának -> lány", function() {deepEqual( Stem("lányának"), "lány");});
test("lányát -> lány", function() {deepEqual( Stem("lányát"), "lány");});
test("lányával -> lány", function() {deepEqual( Stem("lányával"), "lány");});
test("lányért -> lány", function() {deepEqual( Stem("lányért"), "lány");});
test("lányfejek -> lányfej", function() {deepEqual( Stem("lányfejek"), "lányfej");});
test("lánygyermeket -> lánygyerm", function() {deepEqual( Stem("lánygyermeket"), "lánygyerm");});
test("lánykutyával -> lánykuty", function() {deepEqual( Stem("lánykutyával"), "lánykuty");});
test("lányköri -> lánykör", function() {deepEqual( Stem("lányköri"), "lánykör");});
test("lányneveket -> lánynev", function() {deepEqual( Stem("lányneveket"), "lánynev");});
test("lánynév -> lánynév", function() {deepEqual( Stem("lánynév"), "lánynév");});
test("lánynévhez -> lánynév", function() {deepEqual( Stem("lánynévhez"), "lánynév");});
test("lánytesthez -> lánytest", function() {deepEqual( Stem("lánytesthez"), "lánytest");});
test("lápisz -> lápisz", function() {deepEqual( Stem("lápisz"), "lápisz");});
test("lárma -> lárm", function() {deepEqual( Stem("lárma"), "lárm");});
test("lármája -> lármá", function() {deepEqual( Stem("lármája"), "lármá");});
test("lármán -> lárm", function() {deepEqual( Stem("lármán"), "lárm");});
test("lármát -> lárm", function() {deepEqual( Stem("lármát"), "lárm");});
test("lármás -> lármás", function() {deepEqual( Stem("lármás"), "lármás");});
test("lármásak -> lármás", function() {deepEqual( Stem("lármásak"), "lármás");});
test("lármásan -> lármás", function() {deepEqual( Stem("lármásan"), "lármás");});
test("lármázott -> lármázot", function() {deepEqual( Stem("lármázott"), "lármázot");});
test("lármázó -> lármázó", function() {deepEqual( Stem("lármázó"), "lármázó");});
test("lárvák -> lárva", function() {deepEqual( Stem("lárvák"), "lárva");});
test("lásd -> lás", function() {deepEqual( Stem("lásd"), "lás");});
test("láss -> láss", function() {deepEqual( Stem("láss"), "láss");});
test("lássa -> láss", function() {deepEqual( Stem("lássa"), "láss");});
test("lássam -> láss", function() {deepEqual( Stem("lássam"), "láss");});
test("lásson -> láss", function() {deepEqual( Stem("lásson"), "láss");});
test("lássuk -> láss", function() {deepEqual( Stem("lássuk"), "láss");});
test("lássunk -> láss", function() {deepEqual( Stem("lássunk"), "láss");});
test("lássák -> lássa", function() {deepEqual( Stem("lássák"), "lássa");});
test("lássátok -> lássát", function() {deepEqual( Stem("lássátok"), "lássát");});
test("lát -> lá", function() {deepEqual( Stem("lát"), "lá");});
test("látja -> lát", function() {deepEqual( Stem("látja"), "lát");});
test("látjuk -> lát", function() {deepEqual( Stem("látjuk"), "lát");});
test("látják -> látja", function() {deepEqual( Stem("látják"), "látja");});
test("látlak -> látl", function() {deepEqual( Stem("látlak"), "látl");});
test("látna -> látn", function() {deepEqual( Stem("látna"), "látn");});
test("látnak -> lát", function() {deepEqual( Stem("látnak"), "lát");});
test("látni -> látn", function() {deepEqual( Stem("látni"), "látn");});
test("látnia -> látn", function() {deepEqual( Stem("látnia"), "látn");});
test("látnom -> látn", function() {deepEqual( Stem("látnom"), "látn");});
test("látnunk -> látn", function() {deepEqual( Stem("látnunk"), "látn");});
test("látná -> látna", function() {deepEqual( Stem("látná"), "látna");});
test("látnád -> látna", function() {deepEqual( Stem("látnád"), "látna");});
test("látnák -> látna", function() {deepEqual( Stem("látnák"), "látna");});
test("látnálak -> látnál", function() {deepEqual( Stem("látnálak"), "látnál");});
test("látnám -> látna", function() {deepEqual( Stem("látnám"), "látna");});
test("látnának -> látn", function() {deepEqual( Stem("látnának"), "látn");});
test("látnék -> látne", function() {deepEqual( Stem("látnék"), "látne");});
test("látod -> lát", function() {deepEqual( Stem("látod"), "lát");});
test("látok -> lát", function() {deepEqual( Stem("látok"), "lát");});
test("látom -> lát", function() {deepEqual( Stem("látom"), "lát");});
test("látta -> látt", function() {deepEqual( Stem("látta"), "látt");});
test("láttad -> látt", function() {deepEqual( Stem("láttad"), "látt");});
test("láttak -> látt", function() {deepEqual( Stem("láttak"), "látt");});
test("láttalak -> láttal", function() {deepEqual( Stem("láttalak"), "láttal");});
test("láttok -> látt", function() {deepEqual( Stem("láttok"), "látt");});
test("láttuk -> látt", function() {deepEqual( Stem("láttuk"), "látt");});
test("láttunk -> látt", function() {deepEqual( Stem("láttunk"), "látt");});
test("látták -> látta", function() {deepEqual( Stem("látták"), "látta");});
test("láttál -> láttál", function() {deepEqual( Stem("láttál"), "láttál");});
test("láttátok -> láttát", function() {deepEqual( Stem("láttátok"), "láttát");});
test("látunk -> lát", function() {deepEqual( Stem("látunk"), "lát");});
test("látha-tó -> látha-tó", function() {deepEqual( Stem("látha-tó"), "látha-tó");});
test("láthassa -> láthass", function() {deepEqual( Stem("láthassa"), "láthass");});
test("láthassak -> láthass", function() {deepEqual( Stem("láthassak"), "láthass");});
test("láthassam -> láthass", function() {deepEqual( Stem("láthassam"), "láthass");});
test("láthasson -> láthass", function() {deepEqual( Stem("láthasson"), "láthass");});
test("láthat -> láth", function() {deepEqual( Stem("láthat"), "láth");});
test("láthatatlan -> láthatatl", function() {deepEqual( Stem("láthatatlan"), "láthatatl");});
test("láthatatlannak -> láthatatlan", function() {deepEqual( Stem("láthatatlannak"), "láthatatlan");});
test("láthatatlanná -> láthatatlan", function() {deepEqual( Stem("láthatatlanná"), "láthatatlan");});
test("láthatatlanul -> láthatatlan", function() {deepEqual( Stem("láthatatlanul"), "láthatatlan");});
test("láthatja -> láthat", function() {deepEqual( Stem("láthatja"), "láthat");});
test("láthatjuk -> láthat", function() {deepEqual( Stem("láthatjuk"), "láthat");});
test("láthatják -> láthatja", function() {deepEqual( Stem("láthatják"), "láthatja");});
test("láthatlak -> láthatl", function() {deepEqual( Stem("láthatlak"), "láthatl");});
test("láthatnak -> láthat", function() {deepEqual( Stem("láthatnak"), "láthat");});
test("láthatnálak -> láthatnál", function() {deepEqual( Stem("láthatnálak"), "láthatnál");});
test("láthatnám -> láthatna", function() {deepEqual( Stem("láthatnám"), "láthatna");});
test("láthatod -> láthat", function() {deepEqual( Stem("láthatod"), "láthat");});
test("láthatok -> láthat", function() {deepEqual( Stem("láthatok"), "láthat");});
test("láthatott -> láthatot", function() {deepEqual( Stem("láthatott"), "láthatot");});
test("láthatta -> láthatt", function() {deepEqual( Stem("láthatta"), "láthatt");});
test("láthattad -> láthatt", function() {deepEqual( Stem("láthattad"), "láthatt");});
test("láthattam -> láthatt", function() {deepEqual( Stem("láthattam"), "láthatt");});
test("láthattam -> láthatt", function() {deepEqual( Stem("láthattam"), "láthatt");});
test("láthattuk -> láthatt", function() {deepEqual( Stem("láthattuk"), "láthatt");});
test("láthattunk -> láthatt", function() {deepEqual( Stem("láthattunk"), "láthatt");});
test("láthatták -> láthatta", function() {deepEqual( Stem("láthatták"), "láthatta");});
test("láthatunk -> láthat", function() {deepEqual( Stem("láthatunk"), "láthat");});
test("láthatáron -> láthatár", function() {deepEqual( Stem("láthatáron"), "láthatár");});
test("láthatási -> láthatás", function() {deepEqual( Stem("láthatási"), "láthatás");});
test("látható -> látható", function() {deepEqual( Stem("látható"), "látható");});
test("láthatóak -> látható", function() {deepEqual( Stem("láthatóak"), "látható");});
test("láthatóan -> látható", function() {deepEqual( Stem("láthatóan"), "látható");});
test("láthatók -> látható", function() {deepEqual( Stem("láthatók"), "látható");});
test("láthatólag -> láthatólag", function() {deepEqual( Stem("láthatólag"), "láthatólag");});
test("láthatóvá -> látható", function() {deepEqual( Stem("láthatóvá"), "látható");});
test("látképe -> látkép", function() {deepEqual( Stem("látképe"), "látkép");});
test("látképek -> látkép", function() {deepEqual( Stem("látképek"), "látkép");});
test("látképen -> látkép", function() {deepEqual( Stem("látképen"), "látkép");});
test("látképre -> látkép", function() {deepEqual( Stem("látképre"), "látkép");});
test("látnivaló -> látnivaló", function() {deepEqual( Stem("látnivaló"), "látnivaló");});
test("látnivalóan -> látnivaló", function() {deepEqual( Stem("látnivalóan"), "látnivaló");});
test("látnivalóit -> látnivaló", function() {deepEqual( Stem("látnivalóit"), "látnivaló");});
test("látnivalója -> látnivaló", function() {deepEqual( Stem("látnivalója"), "látnivaló");});
test("látnivalókat -> látnivaló", function() {deepEqual( Stem("látnivalókat"), "látnivaló");});
test("látnivalót -> látnivaló", function() {deepEqual( Stem("látnivalót"), "látnivaló");});
test("látogassa -> látogass", function() {deepEqual( Stem("látogassa"), "látogass");});
test("látogasson -> látogass", function() {deepEqual( Stem("látogasson"), "látogass");});
test("látogassunk -> látogass", function() {deepEqual( Stem("látogassunk"), "látogass");});
test("látogassák -> látogassa", function() {deepEqual( Stem("látogassák"), "látogassa");});
test("látogathatja -> látogathat", function() {deepEqual( Stem("látogathatja"), "látogathat");});
test("látogathatják -> látogathatja", function() {deepEqual( Stem("látogathatják"), "látogathatja");});
test("látogathatom -> látogathat", function() {deepEqual( Stem("látogathatom"), "látogathat");});
test("látogathatunk -> látogathat", function() {deepEqual( Stem("látogathatunk"), "látogathat");});
test("látogatható -> látogatható", function() {deepEqual( Stem("látogatható"), "látogatható");});
test("látogatja -> látogat", function() {deepEqual( Stem("látogatja"), "látogat");});
test("látogatják -> látogatja", function() {deepEqual( Stem("látogatják"), "látogatja");});
test("látogatnak -> látogat", function() {deepEqual( Stem("látogatnak"), "látogat");});
test("látogatni -> látogatn", function() {deepEqual( Stem("látogatni"), "látogatn");});
test("látogatnánk -> látogatna", function() {deepEqual( Stem("látogatnánk"), "látogatna");});
test("látogatom -> látogat", function() {deepEqual( Stem("látogatom"), "látogat");});
test("látogatott -> látogatot", function() {deepEqual( Stem("látogatott"), "látogatot");});
test("látogatta -> látogatt", function() {deepEqual( Stem("látogatta"), "látogatt");});
test("látogattak -> látogatt", function() {deepEqual( Stem("látogattak"), "látogatt");});
test("látogattam -> látogatt", function() {deepEqual( Stem("látogattam"), "látogatt");});
test("látogattuk -> látogatt", function() {deepEqual( Stem("látogattuk"), "látogatt");});
test("látogattunk -> látogatt", function() {deepEqual( Stem("látogattunk"), "látogatt");});
test("látogatták -> látogatta", function() {deepEqual( Stem("látogatták"), "látogatta");});
test("látogatottsága -> látogatottság", function() {deepEqual( Stem("látogatottsága"), "látogatottság");});
test("látogatottságát -> látogatottság", function() {deepEqual( Stem("látogatottságát"), "látogatottság");});
test("látogatva -> látogatv", function() {deepEqual( Stem("látogatva"), "látogatv");});
test("látogatván -> látogatv", function() {deepEqual( Stem("látogatván"), "látogatv");});
test("látogatás -> látogatás", function() {deepEqual( Stem("látogatás"), "látogatás");});
test("látogatása -> látogatás", function() {deepEqual( Stem("látogatása"), "látogatás");});
test("látogatásainak -> látogatás", function() {deepEqual( Stem("látogatásainak"), "látogatás");});
test("látogatásaira -> látogatás", function() {deepEqual( Stem("látogatásaira"), "látogatás");});
test("látogatásokat -> látogatás", function() {deepEqual( Stem("látogatásokat"), "látogatás");});
test("látogatásokra -> látogatás", function() {deepEqual( Stem("látogatásokra"), "látogatás");});
test("látogatásomkor -> látogatás", function() {deepEqual( Stem("látogatásomkor"), "látogatás");});
test("látogatásra -> látogatás", function() {deepEqual( Stem("látogatásra"), "látogatás");});
test("látogatást -> látogatás", function() {deepEqual( Stem("látogatást"), "látogatás");});
test("látogatásuk -> látogatás", function() {deepEqual( Stem("látogatásuk"), "látogatás");});
test("látogatásunk -> látogatás", function() {deepEqual( Stem("látogatásunk"), "látogatás");});
test("látogatásunkon -> látogatás", function() {deepEqual( Stem("látogatásunkon"), "látogatás");});
test("látogatásán -> látogatás", function() {deepEqual( Stem("látogatásán"), "látogatás");});
test("látogatásának -> látogatás", function() {deepEqual( Stem("látogatásának"), "látogatás");});
test("látogatásáról -> látogatás", function() {deepEqual( Stem("látogatásáról"), "látogatás");});
test("látogatását -> látogatás", function() {deepEqual( Stem("látogatását"), "látogatás");});
test("látogató -> látogató", function() {deepEqual( Stem("látogató"), "látogató");});
test("látogatóba -> látogató", function() {deepEqual( Stem("látogatóba"), "látogató");});
test("látogatóinak -> látogató", function() {deepEqual( Stem("látogatóinak"), "látogató");});
test("látogatóit -> látogató", function() {deepEqual( Stem("látogatóit"), "látogató");});
test("látogatóival -> látogató", function() {deepEqual( Stem("látogatóival"), "látogató");});
test("látogatója -> látogató", function() {deepEqual( Stem("látogatója"), "látogató");});
test("látogatójuk -> látogató", function() {deepEqual( Stem("látogatójuk"), "látogató");});
test("látogatók -> látogató", function() {deepEqual( Stem("látogatók"), "látogató");});
test("látogatókat -> látogató", function() {deepEqual( Stem("látogatókat"), "látogató");});
test("látogatóknak -> látogató", function() {deepEqual( Stem("látogatóknak"), "látogató");});
test("látogatókra -> látogató", function() {deepEqual( Stem("látogatókra"), "látogató");});
test("látogatóké -> látogató", function() {deepEqual( Stem("látogatóké"), "látogató");});
test("látogatónak -> látogató", function() {deepEqual( Stem("látogatónak"), "látogató");});
test("látogatónknak -> látogató", function() {deepEqual( Stem("látogatónknak"), "látogató");});
test("látogatót -> látogató", function() {deepEqual( Stem("látogatót"), "látogató");});
test("látogatóval -> látogató", function() {deepEqual( Stem("látogatóval"), "látogató");});
test("látomás -> látomás", function() {deepEqual( Stem("látomás"), "látomás");});
test("látomása -> látomás", function() {deepEqual( Stem("látomása"), "látomás");});
test("látomásai -> látomás", function() {deepEqual( Stem("látomásai"), "látomás");});
test("látomások -> látomás", function() {deepEqual( Stem("látomások"), "látomás");});
test("látomással -> látomás", function() {deepEqual( Stem("látomással"), "látomás");});
test("látomást -> látomás", function() {deepEqual( Stem("látomást"), "látomás");});
test("látott -> látot", function() {deepEqual( Stem("látott"), "látot");});
test("látottakat -> látott", function() {deepEqual( Stem("látottakat"), "látott");});
test("látottakkal -> látott", function() {deepEqual( Stem("látottakkal"), "látott");});
test("látra -> lát", function() {deepEqual( Stem("látra"), "lát");});
test("látsszon -> látssz", function() {deepEqual( Stem("látsszon"), "látssz");});
test("látsz -> látsz", function() {deepEqual( Stem("látsz"), "látsz");});
test("látszani -> látszan", function() {deepEqual( Stem("látszani"), "látszan");});
test("látszania -> látszan", function() {deepEqual( Stem("látszania"), "látszan");});
test("látszaniuk -> látszan", function() {deepEqual( Stem("látszaniuk"), "látszan");});
test("látszik -> látsz", function() {deepEqual( Stem("látszik"), "látsz");});
test("látszott -> látszot", function() {deepEqual( Stem("látszott"), "látszot");});
test("látszottak -> látszott", function() {deepEqual( Stem("látszottak"), "látszott");});
test("látszat -> látsz", function() {deepEqual( Stem("látszat"), "látsz");});
test("látszata -> látszat", function() {deepEqual( Stem("látszata"), "látszat");});
test("látszatot -> látszat", function() {deepEqual( Stem("látszatot"), "látszat");});
test("látszatát -> látszat", function() {deepEqual( Stem("látszatát"), "látszat");});
test("látszatintézkedésekkel -> látszatintézkedés", function() {deepEqual( Stem("látszatintézkedésekkel"), "látszatintézkedés");});
test("látszotthattunk -> látszotthatt", function() {deepEqual( Stem("látszotthattunk"), "látszotthatt");});
test("látszó -> látszó", function() {deepEqual( Stem("látszó"), "látszó");});
test("látszódott -> látszódot", function() {deepEqual( Stem("látszódott"), "látszódot");});
test("látszólagos -> látszólagos", function() {deepEqual( Stem("látszólagos"), "látszólagos");});
test("láttamozott -> láttamozot", function() {deepEqual( Stem("láttamozott"), "láttamozot");});
test("láttamoztatni -> láttamoztatn", function() {deepEqual( Stem("láttamoztatni"), "láttamoztatn");});
test("láttatja -> láttat", function() {deepEqual( Stem("láttatja"), "láttat");});
test("láttatni -> láttatn", function() {deepEqual( Stem("láttatni"), "láttatn");});
test("láttatta -> láttatt", function() {deepEqual( Stem("láttatta"), "láttatt");});
test("láttán -> látt", function() {deepEqual( Stem("láttán"), "látt");});
test("láttára -> látt", function() {deepEqual( Stem("láttára"), "látt");});
test("látva -> látv", function() {deepEqual( Stem("látva"), "látv");});
test("látván -> látv", function() {deepEqual( Stem("látván"), "látv");});
test("látvánnyá -> látvány", function() {deepEqual( Stem("látvánnyá"), "látvány");});
test("látvány -> látvány", function() {deepEqual( Stem("látvány"), "látvány");});
test("látványa -> látvány", function() {deepEqual( Stem("látványa"), "látvány");});
test("látványt -> látvány", function() {deepEqual( Stem("látványt"), "látvány");});
test("látványtól -> látvány", function() {deepEqual( Stem("látványtól"), "látvány");});
test("látványában -> látvány", function() {deepEqual( Stem("látványában"), "látvány");});
test("látványát -> látvány", function() {deepEqual( Stem("látványát"), "látvány");});
test("látványától -> látvány", function() {deepEqual( Stem("látványától"), "látvány");});
test("látványával -> látvány", function() {deepEqual( Stem("látványával"), "látvány");});
test("látványért -> látvány", function() {deepEqual( Stem("látványért"), "látvány");});
test("látványos -> látványos", function() {deepEqual( Stem("látványos"), "látványos");});
test("látványosabb -> látványosabb", function() {deepEqual( Stem("látványosabb"), "látványosabb");});
test("látványosan -> látványos", function() {deepEqual( Stem("látványosan"), "látványos");});
test("látványosság -> látványosság", function() {deepEqual( Stem("látványosság"), "látványosság");});
test("látványosságok -> látványosság", function() {deepEqual( Stem("látványosságok"), "látványosság");});
test("látványosságot -> látványosság", function() {deepEqual( Stem("látványosságot"), "látványosság");});
test("látványosságtól -> látványosság", function() {deepEqual( Stem("látványosságtól"), "látványosság");});
test("látványszínházat -> látványszínház", function() {deepEqual( Stem("látványszínházat"), "látványszínház");});
test("látása -> látás", function() {deepEqual( Stem("látása"), "látás");});
test("látásból -> látás", function() {deepEqual( Stem("látásból"), "látás");});
test("látásra -> látás", function() {deepEqual( Stem("látásra"), "látás");});
test("látással -> látás", function() {deepEqual( Stem("látással"), "látás");});
test("látást -> látás", function() {deepEqual( Stem("látást"), "látás");});
test("látási -> látás", function() {deepEqual( Stem("látási"), "látás");});
test("látó -> látó", function() {deepEqual( Stem("látó"), "látó");});
test("látóhatár -> látóhatár", function() {deepEqual( Stem("látóhatár"), "látóhatár");});
test("látóképességét -> látóképesség", function() {deepEqual( Stem("látóképességét"), "látóképesség");});
test("látókört -> látókör", function() {deepEqual( Stem("látókört"), "látókör");});
test("látóköréből -> látókör", function() {deepEqual( Stem("látóköréből"), "látókör");});
test("látókörén -> látókör", function() {deepEqual( Stem("látókörén"), "látókör");});
test("látókörét -> látókör", function() {deepEqual( Stem("látókörét"), "látókör");});
test("látókörünk -> látókör", function() {deepEqual( Stem("látókörünk"), "látókör");});
test("látókörű -> látókörű", function() {deepEqual( Stem("látókörű"), "látókörű");});
test("látómezejébe -> látómeze", function() {deepEqual( Stem("látómezejébe"), "látómeze");});
test("látómezején -> látómeze", function() {deepEqual( Stem("látómezején"), "látómeze");});
test("látómezőn -> látómező", function() {deepEqual( Stem("látómezőn"), "látómező");});
test("látószögébe -> látószög", function() {deepEqual( Stem("látószögébe"), "látószög");});
test("látótávolság -> látótávolság", function() {deepEqual( Stem("látótávolság"), "látótávolság");});
test("lávaállapotú -> lávaállapotú", function() {deepEqual( Stem("lávaállapotú"), "lávaállapotú");});
test("láz -> láz", function() {deepEqual( Stem("láz"), "láz");});
test("láza -> láz", function() {deepEqual( Stem("láza"), "láz");});
test("lázban -> láz", function() {deepEqual( Stem("lázban"), "láz");});
test("láztól -> láz", function() {deepEqual( Stem("láztól"), "láz");});
test("lázzá -> láz", function() {deepEqual( Stem("lázzá"), "láz");});
test("lázában -> láz", function() {deepEqual( Stem("lázában"), "láz");});
test("lázadnak -> láz", function() {deepEqual( Stem("lázadnak"), "láz");});
test("lázadtak -> lázadt", function() {deepEqual( Stem("lázadtak"), "lázadt");});
test("lázadozott -> lázadozot", function() {deepEqual( Stem("lázadozott"), "lázadozot");});
test("lázadozás -> lázadozás", function() {deepEqual( Stem("lázadozás"), "lázadozás");});
test("lázadozásaikról -> lázadozás", function() {deepEqual( Stem("lázadozásaikról"), "lázadozás");});
test("lázadt -> láz", function() {deepEqual( Stem("lázadt"), "láz");});
test("lázadás -> lázadás", function() {deepEqual( Stem("lázadás"), "lázadás");});
test("lázadása -> lázadás", function() {deepEqual( Stem("lázadása"), "lázadás");});
test("lázadásból -> lázadás", function() {deepEqual( Stem("lázadásból"), "lázadás");});
test("lázadásnak -> lázadás", function() {deepEqual( Stem("lázadásnak"), "lázadás");});
test("lázadásra -> lázadás", function() {deepEqual( Stem("lázadásra"), "lázadás");});
test("lázadásának -> lázadás", function() {deepEqual( Stem("lázadásának"), "lázadás");});
test("lázadó -> lázadó", function() {deepEqual( Stem("lázadó"), "lázadó");});
test("lázadóiról -> lázadó", function() {deepEqual( Stem("lázadóiról"), "lázadó");});
test("lázadók -> lázadó", function() {deepEqual( Stem("lázadók"), "lázadó");});
test("lázadókat -> lázadó", function() {deepEqual( Stem("lázadókat"), "lázadó");});
test("lázadóval -> lázadó", function() {deepEqual( Stem("lázadóval"), "lázadó");});
test("lázasan -> lázas", function() {deepEqual( Stem("lázasan"), "lázas");});
test("lázongás -> lázongás", function() {deepEqual( Stem("lázongás"), "lázongás");});
test("lázongó -> lázongó", function() {deepEqual( Stem("lázongó"), "lázongó");});
test("lázálom -> lázál", function() {deepEqual( Stem("lázálom"), "lázál");});
test("lázálomképtől -> lázálomkép", function() {deepEqual( Stem("lázálomképtől"), "lázálomkép");});
test("lázítanak -> lázít", function() {deepEqual( Stem("lázítanak"), "lázít");});
test("lázító -> lázító", function() {deepEqual( Stem("lázító"), "lázító");});
test("lébecolni -> lébecoln", function() {deepEqual( Stem("lébecolni"), "lébecoln");});
test("léc -> léc", function() {deepEqual( Stem("léc"), "léc");});
test("lécestől -> léces", function() {deepEqual( Stem("lécestől"), "léces");});
test("lécet -> léc", function() {deepEqual( Stem("lécet"), "léc");});
test("lécre -> léc", function() {deepEqual( Stem("lécre"), "léc");});
test("légellenállás -> légellenállás", function() {deepEqual( Stem("légellenállás"), "légellenállás");});
test("léggömb -> léggömb", function() {deepEqual( Stem("léggömb"), "léggömb");});
test("léghuzamban -> léghuz", function() {deepEqual( Stem("léghuzamban"), "léghuz");});
test("léghuzat -> léghuz", function() {deepEqual( Stem("léghuzat"), "léghuz");});
test("léghűtéses -> léghűtéses", function() {deepEqual( Stem("léghűtéses"), "léghűtéses");});
test("léghűtésük -> léghűtés", function() {deepEqual( Stem("léghűtésük"), "léghűtés");});
test("légi -> lég", function() {deepEqual( Stem("légi"), "lég");});
test("légibemutató -> légibemutató", function() {deepEqual( Stem("légibemutató"), "légibemutató");});
test("légicsapása -> légicsapás", function() {deepEqual( Stem("légicsapása"), "légicsapás");});
test("légicsapásai -> légicsapás", function() {deepEqual( Stem("légicsapásai"), "légicsapás");});
test("légicsapásait -> légicsapás", function() {deepEqual( Stem("légicsapásait"), "légicsapás");});
test("légicsapások -> légicsapás", function() {deepEqual( Stem("légicsapások"), "légicsapás");});
test("légicsapásokkal -> légicsapás", function() {deepEqual( Stem("légicsapásokkal"), "légicsapás");});
test("légideszantost -> légideszantos", function() {deepEqual( Stem("légideszantost"), "légideszantos");});
test("légiereje -> légiere", function() {deepEqual( Stem("légiereje"), "légiere");});
test("légierő -> légierő", function() {deepEqual( Stem("légierő"), "légierő");});
test("légierőnél -> légierő", function() {deepEqual( Stem("légierőnél"), "légierő");});
test("légierőt -> légierő", function() {deepEqual( Stem("légierőt"), "légierő");});
test("légierővel -> légierő", function() {deepEqual( Stem("légierővel"), "légierő");});
test("légihídhoz -> légihí", function() {deepEqual( Stem("légihídhoz"), "légihí");});
test("légiipari -> légiipar", function() {deepEqual( Stem("légiipari"), "légiipar");});
test("légiközlekedési -> légiközlekedés", function() {deepEqual( Stem("légiközlekedési"), "légiközlekedés");});
test("légiposta-küldeménye -> légiposta-küldemény", function() {deepEqual( Stem("légiposta-küldeménye"), "légiposta-küldemény");});
test("légipostára -> légipost", function() {deepEqual( Stem("légipostára"), "légipost");});
test("légiradar-rendszerét -> légiradar-rendszer", function() {deepEqual( Stem("légiradar-rendszerét"), "légiradar-rendszer");});
test("légitámadás -> légitámadás", function() {deepEqual( Stem("légitámadás"), "légitámadás");});
test("légitámadások -> légitámadás", function() {deepEqual( Stem("légitámadások"), "légitámadás");});
test("légitámadásokat -> légitámadás", function() {deepEqual( Stem("légitámadásokat"), "légitámadás");});
test("légitársaság -> légitársaság", function() {deepEqual( Stem("légitársaság"), "légitársaság");});
test("légitársaságnál -> légitársaság", function() {deepEqual( Stem("légitársaságnál"), "légitársaság");});
test("légitársaságok -> légitársaság", function() {deepEqual( Stem("légitársaságok"), "légitársaság");});
test("légitársaságokkal -> légitársaság", function() {deepEqual( Stem("légitársaságokkal"), "légitársaság");});
test("légitársaságot -> légitársaság", function() {deepEqual( Stem("légitársaságot"), "légitársaság");});
test("légiutaskísérő -> légiutaskísérő", function() {deepEqual( Stem("légiutaskísérő"), "légiutaskísérő");});
test("légió -> légió", function() {deepEqual( Stem("légió"), "légió");});
test("légióba -> légió", function() {deepEqual( Stem("légióba"), "légió");});
test("légiót -> légió", function() {deepEqual( Stem("légiót"), "légió");});
test("légióval -> légió", function() {deepEqual( Stem("légióval"), "légió");});
test("légiós -> légiós", function() {deepEqual( Stem("légiós"), "légiós");});
test("légiósok -> légiós", function() {deepEqual( Stem("légiósok"), "légiós");});
test("légiósregények -> légiósregény", function() {deepEqual( Stem("légiósregények"), "légiósregény");});
test("légkondicionált -> légkondicionál", function() {deepEqual( Stem("légkondicionált"), "légkondicionál");});
test("légkupolával -> légkupol", function() {deepEqual( Stem("légkupolával"), "légkupol");});
test("légkör -> légkör", function() {deepEqual( Stem("légkör"), "légkör");});
test("légkörbe -> légkör", function() {deepEqual( Stem("légkörbe"), "légkör");});
test("légkörben -> légkör", function() {deepEqual( Stem("légkörben"), "légkör");});
test("légkörből -> légkör", function() {deepEqual( Stem("légkörből"), "légkör");});
test("légköre -> légkö", function() {deepEqual( Stem("légköre"), "légkö");});
test("légkörre -> légkör", function() {deepEqual( Stem("légkörre"), "légkör");});
test("légkörrel -> légkör", function() {deepEqual( Stem("légkörrel"), "légkör");});
test("légkört -> légkör", function() {deepEqual( Stem("légkört"), "légkör");});
test("légkörébe -> légkör", function() {deepEqual( Stem("légkörébe"), "légkör");});
test("légkörében -> légkör", function() {deepEqual( Stem("légkörében"), "légkör");});
test("légkörét -> légkör", function() {deepEqual( Stem("légkörét"), "légkör");});
test("légkörű -> légkörű", function() {deepEqual( Stem("légkörű"), "légkörű");});
test("légmentesen -> légmentes", function() {deepEqual( Stem("légmentesen"), "légmentes");});
test("légnyomásban -> légnyomás", function() {deepEqual( Stem("légnyomásban"), "légnyomás");});
test("légpárnán -> légpárn", function() {deepEqual( Stem("légpárnán"), "légpárn");});
test("légrugók -> légrugó", function() {deepEqual( Stem("légrugók"), "légrugó");});
test("légrugós -> légrugós", function() {deepEqual( Stem("légrugós"), "légrugós");});
test("légszennyezést -> légszennyezés", function() {deepEqual( Stem("légszennyezést"), "légszennyezés");});
test("légszűrő -> légszűrő", function() {deepEqual( Stem("légszűrő"), "légszűrő");});
test("légsúlyban -> légsúly", function() {deepEqual( Stem("légsúlyban"), "légsúly");});
test("légterekből -> légter", function() {deepEqual( Stem("légterekből"), "légter");});
test("légteret -> légter", function() {deepEqual( Stem("légteret"), "légter");});
test("légtér -> légtér", function() {deepEqual( Stem("légtér"), "légtér");});
test("légtérbe -> légtér", function() {deepEqual( Stem("légtérbe"), "légtér");});
test("légtérben -> légtér", function() {deepEqual( Stem("légtérben"), "légtér");});
test("légtérzárlat -> légtérzárl", function() {deepEqual( Stem("légtérzárlat"), "légtérzárl");});
test("légvárat -> légvár", function() {deepEqual( Stem("légvárat"), "légvár");});
test("légvédelem -> légvédel", function() {deepEqual( Stem("légvédelem"), "légvédel");});
test("légvédelmét -> légvédelm", function() {deepEqual( Stem("légvédelmét"), "légvédelm");});
test("légvédelmi -> légvédelm", function() {deepEqual( Stem("légvédelmi"), "légvédelm");});
test("légy -> légy", function() {deepEqual( Stem("légy"), "légy");});
test("légyvadászaton -> légyvadászat", function() {deepEqual( Stem("légyvadászaton"), "légyvadászat");});
test("légzsákok -> légzsák", function() {deepEqual( Stem("légzsákok"), "légzsák");});
test("légzés -> légzés", function() {deepEqual( Stem("légzés"), "légzés");});
test("légzésétől -> légzés", function() {deepEqual( Stem("légzésétől"), "légzés");});
test("légzési -> légzés", function() {deepEqual( Stem("légzési"), "légzés");});
test("légáram -> légár", function() {deepEqual( Stem("légáram"), "légár");});
test("légáramlattal -> légáraml", function() {deepEqual( Stem("légáramlattal"), "légáraml");});
test("légáramlás -> légáramlás", function() {deepEqual( Stem("légáramlás"), "légáramlás");});
test("légörvénylésről -> légörvénylés", function() {deepEqual( Stem("légörvénylésről"), "légörvénylés");});
test("légúti -> légút", function() {deepEqual( Stem("légúti"), "légút");});
test("légügyi -> légügy", function() {deepEqual( Stem("légügyi"), "légügy");});
test("légüres -> légüres", function() {deepEqual( Stem("légüres"), "légüres");});
test("léha -> léh", function() {deepEqual( Stem("léha"), "léh");});
test("lélegeznek -> lélegez", function() {deepEqual( Stem("lélegeznek"), "lélegez");});
test("lélegezni -> lélegezn", function() {deepEqual( Stem("lélegezni"), "lélegezn");});
test("lélegzett -> lélegzet", function() {deepEqual( Stem("lélegzett"), "lélegzet");});
test("lélegeztek -> lélegezt", function() {deepEqual( Stem("lélegeztek"), "lélegezt");});
test("lélegeztem -> lélegezt", function() {deepEqual( Stem("lélegeztem"), "lélegezt");});
test("lélegeztetik -> lélegeztet", function() {deepEqual( Stem("lélegeztetik"), "lélegeztet");});
test("lélegeztető -> lélegeztető", function() {deepEqual( Stem("lélegeztető"), "lélegeztető");});
test("lélegzete -> lélegzet", function() {deepEqual( Stem("lélegzete"), "lélegzet");});
test("lélegzetem -> lélegzet", function() {deepEqual( Stem("lélegzetem"), "lélegzet");});
test("lélegzetet -> lélegzet", function() {deepEqual( Stem("lélegzetet"), "lélegzet");});
test("lélegzethez -> lélegzet", function() {deepEqual( Stem("lélegzethez"), "lélegzet");});
test("lélegzetéből -> lélegzet", function() {deepEqual( Stem("lélegzetéből"), "lélegzet");});
test("lélegzetünk -> lélegzet", function() {deepEqual( Stem("lélegzetünk"), "lélegzet");});
test("lélegzetét -> lélegzet", function() {deepEqual( Stem("lélegzetét"), "lélegzet");});
test("lélegzethezjutásért -> lélegzethezjutás", function() {deepEqual( Stem("lélegzethezjutásért"), "lélegzethezjutás");});
test("lélegzetvétele -> lélegzetvétel", function() {deepEqual( Stem("lélegzetvétele"), "lélegzetvétel");});
test("lélegzetű -> lélegzetű", function() {deepEqual( Stem("lélegzetű"), "lélegzetű");});
test("lélekemelő -> lélekemelő", function() {deepEqual( Stem("lélekemelő"), "lélekemelő");});
test("lélekharang -> lélekharang", function() {deepEqual( Stem("lélekharang"), "lélekharang");});
test("lélekkacsáról -> lélekkacs", function() {deepEqual( Stem("lélekkacsáról"), "lélekkacs");});
test("lélekmadár -> lélekmadár", function() {deepEqual( Stem("lélekmadár"), "lélekmadár");});
test("lélekszámú -> lélekszámú", function() {deepEqual( Stem("lélekszámú"), "lélekszámú");});
test("lélektan -> lélekt", function() {deepEqual( Stem("lélektan"), "lélekt");});
test("lélektana -> lélektan", function() {deepEqual( Stem("lélektana"), "lélektan");});
test("lélektanán -> lélektan", function() {deepEqual( Stem("lélektanán"), "lélektan");});
test("lélektani -> lélektan", function() {deepEqual( Stem("lélektani"), "lélektan");});
test("lélektaninak -> lélektan", function() {deepEqual( Stem("lélektaninak"), "lélektan");});
test("lélektanilag -> lélektanilag", function() {deepEqual( Stem("lélektanilag"), "lélektanilag");});
test("lélektelenné -> lélektelen", function() {deepEqual( Stem("lélektelenné"), "lélektelen");});
test("lélekállapot -> lélekállap", function() {deepEqual( Stem("lélekállapot"), "lélekállap");});
test("lélekállapotban -> lélekállapot", function() {deepEqual( Stem("lélekállapotban"), "lélekállapot");});
test("lélekölő -> lélekölő", function() {deepEqual( Stem("lélekölő"), "lélekölő");});
test("lényegbeli -> lényegbel", function() {deepEqual( Stem("lényegbeli"), "lényegbel");});
test("lényeg -> lényeg", function() {deepEqual( Stem("lényeg"), "lényeg");});
test("lényegben -> lényeg", function() {deepEqual( Stem("lényegben"), "lényeg");});
test("lényege -> lényeg", function() {deepEqual( Stem("lényege"), "lényeg");});
test("lényegen -> lényeg", function() {deepEqual( Stem("lényegen"), "lényeg");});
test("lényeget -> lényeg", function() {deepEqual( Stem("lényeget"), "lényeg");});
test("lényegre -> lényeg", function() {deepEqual( Stem("lényegre"), "lényeg");});
test("lényegében -> lényeg", function() {deepEqual( Stem("lényegében"), "lényeg");});
test("lényegéből -> lényeg", function() {deepEqual( Stem("lényegéből"), "lényeg");});
test("lényegéhez -> lényeg", function() {deepEqual( Stem("lényegéhez"), "lényeg");});
test("lényegénél -> lényeg", function() {deepEqual( Stem("lényegénél"), "lényeg");});
test("lényegül -> lényeg", function() {deepEqual( Stem("lényegül"), "lényeg");});
test("lényegét -> lényeg", function() {deepEqual( Stem("lényegét"), "lényeg");});
test("lényegére -> lényeg", function() {deepEqual( Stem("lényegére"), "lényeg");});
test("lényeges -> lényeges", function() {deepEqual( Stem("lényeges"), "lényeges");});
test("lényegesebb -> lényegesebb", function() {deepEqual( Stem("lényegesebb"), "lényegesebb");});
test("lényegesek -> lényeges", function() {deepEqual( Stem("lényegesek"), "lényeges");});
test("lényegesen -> lényeges", function() {deepEqual( Stem("lényegesen"), "lényeges");});
test("lényegesnek -> lényeges", function() {deepEqual( Stem("lényegesnek"), "lényeges");});
test("lényegessé -> lényeges", function() {deepEqual( Stem("lényegessé"), "lényeges");});
test("lényegi -> lényeg", function() {deepEqual( Stem("lényegi"), "lényeg");});
test("lényegileg -> lényegileg", function() {deepEqual( Stem("lényegileg"), "lényegileg");});
test("lényeglátó -> lényeglátó", function() {deepEqual( Stem("lényeglátó"), "lényeglátó");});
test("lényegtelen -> lényegtel", function() {deepEqual( Stem("lényegtelen"), "lényegtel");});
test("lényegtelenek -> lényegtel", function() {deepEqual( Stem("lényegtelenek"), "lényegtel");});
test("lényegtelennek -> lényegtelen", function() {deepEqual( Stem("lényegtelennek"), "lényegtelen");});
test("lény -> lény", function() {deepEqual( Stem("lény"), "lény");});
test("lények -> lény", function() {deepEqual( Stem("lények"), "lény");});
test("lényekből -> lény", function() {deepEqual( Stem("lényekből"), "lény");});
test("lényeken -> lény", function() {deepEqual( Stem("lényeken"), "lény");});
test("lényekkel -> lény", function() {deepEqual( Stem("lényekkel"), "lény");});
test("lényekre -> lény", function() {deepEqual( Stem("lényekre"), "lény");});
test("lényem -> lény", function() {deepEqual( Stem("lényem"), "lény");});
test("lényemet -> lény", function() {deepEqual( Stem("lényemet"), "lény");});
test("lényként -> lény", function() {deepEqual( Stem("lényként"), "lény");});
test("lényről -> lény", function() {deepEqual( Stem("lényről"), "lény");});
test("lényt -> lény", function() {deepEqual( Stem("lényt"), "lény");});
test("lényében -> lény", function() {deepEqual( Stem("lényében"), "lény");});
test("lényét -> lény", function() {deepEqual( Stem("lényét"), "lény");});
test("lényes -> lényes", function() {deepEqual( Stem("lényes"), "lényes");});
test("lép -> lép", function() {deepEqual( Stem("lép"), "lép");});
test("lépünk -> lép", function() {deepEqual( Stem("lépünk"), "lép");});
test("lépek -> lép", function() {deepEqual( Stem("lépek"), "lép");});
test("lépcsőfeljárójánál -> lépcsőfeljáró", function() {deepEqual( Stem("lépcsőfeljárójánál"), "lépcsőfeljáró");});
test("lépcsőfoka -> lépcsőf", function() {deepEqual( Stem("lépcsőfoka"), "lépcsőf");});
test("lépcsőfokról -> lépcsőf", function() {deepEqual( Stem("lépcsőfokról"), "lépcsőf");});
test("lépcsőfolyosón -> lépcsőfolyosó", function() {deepEqual( Stem("lépcsőfolyosón"), "lépcsőfolyosó");});
test("lépcsőház -> lépcsőház", function() {deepEqual( Stem("lépcsőház"), "lépcsőház");});
test("lépcsőházak -> lépcsőház", function() {deepEqual( Stem("lépcsőházak"), "lépcsőház");});
test("lépcsőházban -> lépcsőház", function() {deepEqual( Stem("lépcsőházban"), "lépcsőház");});
test("lépcsőházunk -> lépcsőház", function() {deepEqual( Stem("lépcsőházunk"), "lépcsőház");});
test("lépcső -> lépcső", function() {deepEqual( Stem("lépcső"), "lépcső");});
test("lépcsőben -> lépcső", function() {deepEqual( Stem("lépcsőben"), "lépcső");});
test("lépcsőhöz -> lépcső", function() {deepEqual( Stem("lépcsőhöz"), "lépcső");});
test("lépcsői -> lépcső", function() {deepEqual( Stem("lépcsői"), "lépcső");});
test("lépcsőit -> lépcső", function() {deepEqual( Stem("lépcsőit"), "lépcső");});
test("lépcsőjéig -> lépcső", function() {deepEqual( Stem("lépcsőjéig"), "lépcső");});
test("lépcsőjén -> lépcső", function() {deepEqual( Stem("lépcsőjén"), "lépcső");});
test("lépcsőjéről -> lépcső", function() {deepEqual( Stem("lépcsőjéről"), "lépcső");});
test("lépcsőkön -> lépcső", function() {deepEqual( Stem("lépcsőkön"), "lépcső");});
test("lépcsőn -> lépcső", function() {deepEqual( Stem("lépcsőn"), "lépcső");});
test("lépcsőnél -> lépcső", function() {deepEqual( Stem("lépcsőnél"), "lépcső");});
test("lépcsőt -> lépcső", function() {deepEqual( Stem("lépcsőt"), "lépcső");});
test("lépcsőkorlátnak -> lépcsőkorlát", function() {deepEqual( Stem("lépcsőkorlátnak"), "lépcsőkorlát");});
test("lépcsőlejárattal -> lépcsőlejár", function() {deepEqual( Stem("lépcsőlejárattal"), "lépcsőlejár");});
test("lépcsőlejárón -> lépcsőlejáró", function() {deepEqual( Stem("lépcsőlejárón"), "lépcsőlejáró");});
test("lépcsőlejárót -> lépcsőlejáró", function() {deepEqual( Stem("lépcsőlejárót"), "lépcsőlejáró");});
test("lépcsősor -> lépcsősor", function() {deepEqual( Stem("lépcsősor"), "lépcsősor");});
test("lépcsősoron -> lépcsősor", function() {deepEqual( Stem("lépcsősoron"), "lépcsősor");});
test("lépdel -> lépdel", function() {deepEqual( Stem("lépdel"), "lépdel");});
test("lépett -> lépet", function() {deepEqual( Stem("lépett"), "lépet");});
test("lépeget -> lépeg", function() {deepEqual( Stem("lépeget"), "lépeg");});
test("lépegető -> lépegető", function() {deepEqual( Stem("lépegető"), "lépegető");});
test("lépfene -> lépfen", function() {deepEqual( Stem("lépfene"), "lépfen");});
test("léphessen -> léphess", function() {deepEqual( Stem("léphessen"), "léphess");});
test("léphet -> léph", function() {deepEqual( Stem("léphet"), "léph");});
test("léphetett -> léphetet", function() {deepEqual( Stem("léphetett"), "léphetet");});
test("lépheti -> léphet", function() {deepEqual( Stem("lépheti"), "léphet");});
test("léphetne -> léphetn", function() {deepEqual( Stem("léphetne"), "léphetn");});
test("léphetnek -> léphet", function() {deepEqual( Stem("léphetnek"), "léphet");});
test("léphettem -> léphett", function() {deepEqual( Stem("léphettem"), "léphett");});
test("léphetünk -> léphet", function() {deepEqual( Stem("léphetünk"), "léphet");});
test("lépi -> lép", function() {deepEqual( Stem("lépi"), "lép");});
test("lépik -> lép", function() {deepEqual( Stem("lépik"), "lép");});
test("lépj -> lépj", function() {deepEqual( Stem("lépj"), "lépj");});
test("lépjen -> lépj", function() {deepEqual( Stem("lépjen"), "lépj");});
test("lépjenek -> lép", function() {deepEqual( Stem("lépjenek"), "lép");});
test("lépjük -> lép", function() {deepEqual( Stem("lépjük"), "lép");});
test("lépjünk -> lépj", function() {deepEqual( Stem("lépjünk"), "lépj");});
test("lépned -> lépn", function() {deepEqual( Stem("lépned"), "lépn");});
test("lépnek -> lép", function() {deepEqual( Stem("lépnek"), "lép");});
test("lépni -> lépn", function() {deepEqual( Stem("lépni"), "lépn");});
test("lépnie -> lépn", function() {deepEqual( Stem("lépnie"), "lépn");});
test("lépnék -> lépne", function() {deepEqual( Stem("lépnék"), "lépne");});
test("léptem -> lépt", function() {deepEqual( Stem("léptem"), "lépt");});
test("lépték -> lépte", function() {deepEqual( Stem("lépték"), "lépte");});
test("lépked -> lép", function() {deepEqual( Stem("lépked"), "lép");});
test("lépkedett -> lépkedet", function() {deepEqual( Stem("lépkedett"), "lépkedet");});
test("lépkedni -> lépkedn", function() {deepEqual( Stem("lépkedni"), "lépkedn");});
test("lépkedtem -> lépkedt", function() {deepEqual( Stem("lépkedtem"), "lépkedt");});
test("lépkedünk -> lépked", function() {deepEqual( Stem("lépkedünk"), "lépked");});
test("lépte -> lépt", function() {deepEqual( Stem("lépte"), "lépt");});
test("léptek -> lépt", function() {deepEqual( Stem("léptek"), "lépt");});
test("lépteivel -> lépt", function() {deepEqual( Stem("lépteivel"), "lépt");});
test("léptekkel -> lépt", function() {deepEqual( Stem("léptekkel"), "lépt");});
test("léptetett -> léptetet", function() {deepEqual( Stem("léptetett"), "léptetet");});
test("léptetheti -> léptethet", function() {deepEqual( Stem("léptetheti"), "léptethet");});
test("lépteti -> léptet", function() {deepEqual( Stem("lépteti"), "léptet");});
test("léptetni -> léptetn", function() {deepEqual( Stem("léptetni"), "léptetn");});
test("léptette -> léptett", function() {deepEqual( Stem("léptette"), "léptett");});
test("léptették -> léptette", function() {deepEqual( Stem("léptették"), "léptette");});
test("léptetése -> léptetés", function() {deepEqual( Stem("léptetése"), "léptetés");});
test("léptetéséig -> léptetés", function() {deepEqual( Stem("léptetéséig"), "léptetés");});
test("léptetéséről -> léptetés", function() {deepEqual( Stem("léptetéséről"), "léptetés");});
test("léptetését -> léptetés", function() {deepEqual( Stem("léptetését"), "léptetés");});
test("léptékű -> léptékű", function() {deepEqual( Stem("léptékű"), "léptékű");});
test("léptű -> léptű", function() {deepEqual( Stem("léptű"), "léptű");});
test("léptünk -> lépt", function() {deepEqual( Stem("léptünk"), "lépt");});
test("léptünket -> lépt", function() {deepEqual( Stem("léptünket"), "lépt");});
test("lépve -> lépv", function() {deepEqual( Stem("lépve"), "lépv");});
test("lépés -> lépés", function() {deepEqual( Stem("lépés"), "lépés");});
test("lépésben -> lépés", function() {deepEqual( Stem("lépésben"), "lépés");});
test("lépése -> lépés", function() {deepEqual( Stem("lépése"), "lépés");});
test("lépései -> lépés", function() {deepEqual( Stem("lépései"), "lépés");});
test("lépéseik -> lépés", function() {deepEqual( Stem("lépéseik"), "lépés");});
test("lépéseire -> lépés", function() {deepEqual( Stem("lépéseire"), "lépés");});
test("lépéseit -> lépés", function() {deepEqual( Stem("lépéseit"), "lépés");});
test("lépések -> lépés", function() {deepEqual( Stem("lépések"), "lépés");});
test("lépéseket -> lépés", function() {deepEqual( Stem("lépéseket"), "lépés");});
test("lépésekkel -> lépés", function() {deepEqual( Stem("lépésekkel"), "lépés");});
test("lépéseknek -> lépés", function() {deepEqual( Stem("lépéseknek"), "lépés");});
test("lépésekor -> lépés", function() {deepEqual( Stem("lépésekor"), "lépés");});
test("lépésekről -> lépés", function() {deepEqual( Stem("lépésekről"), "lépés");});
test("lépéseként -> lépés", function() {deepEqual( Stem("lépéseként"), "lépés");});
test("lépésen -> lépés", function() {deepEqual( Stem("lépésen"), "lépés");});
test("lépésként -> lépés", function() {deepEqual( Stem("lépésként"), "lépés");});
test("lépésnek -> lépés", function() {deepEqual( Stem("lépésnek"), "lépés");});
test("lépéselőnyben -> lépéselőny", function() {deepEqual( Stem("lépéselőnyben"), "lépéselőny");});
test("lépéselőnyhöz -> lépéselőny", function() {deepEqual( Stem("lépéselőnyhöz"), "lépéselőny");});
test("lépéshátrányba -> lépéshátrány", function() {deepEqual( Stem("lépéshátrányba"), "lépéshátrány");});
test("lépésnyi -> lépésny", function() {deepEqual( Stem("lépésnyi"), "lépésny");});
test("lépésnyire -> lépésny", function() {deepEqual( Stem("lépésnyire"), "lépésny");});
test("lépésnél -> lépés", function() {deepEqual( Stem("lépésnél"), "lépés");});
test("lépésre -> lépés", function() {deepEqual( Stem("lépésre"), "lépés");});
test("lépésről -> lépés", function() {deepEqual( Stem("lépésről"), "lépés");});
test("lépéssel -> lépés", function() {deepEqual( Stem("lépéssel"), "lépés");});
test("lépést -> lépés", function() {deepEqual( Stem("lépést"), "lépés");});
test("lépéséig -> lépés", function() {deepEqual( Stem("lépéséig"), "lépés");});
test("lépését -> lépés", function() {deepEqual( Stem("lépését"), "lépés");});
test("lépésük -> lépés", function() {deepEqual( Stem("lépésük"), "lépés");});
test("lépésükkel -> lépés", function() {deepEqual( Stem("lépésükkel"), "lépés");});
test("lépő -> lépő", function() {deepEqual( Stem("lépő"), "lépő");});
test("lépők -> lépő", function() {deepEqual( Stem("lépők"), "lépő");});
test("lépőnek -> lépő", function() {deepEqual( Stem("lépőnek"), "lépő");});
test("lét -> lé", function() {deepEqual( Stem("lét"), "lé");});
test("létben -> lét", function() {deepEqual( Stem("létben"), "lét");});
test("léte -> lét", function() {deepEqual( Stem("léte"), "lét");});
test("létemre -> lét", function() {deepEqual( Stem("létemre"), "lét");});
test("létet -> lét", function() {deepEqual( Stem("létet"), "lét");});
test("létnek -> lét", function() {deepEqual( Stem("létnek"), "lét");});
test("létre -> lét", function() {deepEqual( Stem("létre"), "lét");});
test("létében -> lét", function() {deepEqual( Stem("létében"), "lét");});
test("létén -> lét", function() {deepEqual( Stem("létén"), "lét");});
test("létének -> lét", function() {deepEqual( Stem("létének"), "lét");});
test("létét -> lét", function() {deepEqual( Stem("létét"), "lét");});
test("létük -> lét", function() {deepEqual( Stem("létük"), "lét");});
test("létükben -> lét", function() {deepEqual( Stem("létükben"), "lét");});
test("létalapját -> létalap", function() {deepEqual( Stem("létalapját"), "létalap");});
test("létalapjától -> létalap", function() {deepEqual( Stem("létalapjától"), "létalap");});
test("létesít -> létesí", function() {deepEqual( Stem("létesít"), "létesí");});
test("létesítenek -> létesít", function() {deepEqual( Stem("létesítenek"), "létesít");});
test("létesíteni -> létesíten", function() {deepEqual( Stem("létesíteni"), "létesíten");});
test("létesített -> létesítet", function() {deepEqual( Stem("létesített"), "létesítet");});
test("létesítsen -> létesíts", function() {deepEqual( Stem("létesítsen"), "létesíts");});
test("létesítsenek -> létesíts", function() {deepEqual( Stem("létesítsenek"), "létesíts");});
test("létesíthessenek -> létesíthess", function() {deepEqual( Stem("létesíthessenek"), "létesíthess");});
test("létesíthetnek -> létesíthet", function() {deepEqual( Stem("létesíthetnek"), "létesíthet");});
test("létesíthető -> létesíthető", function() {deepEqual( Stem("létesíthető"), "létesíthető");});
test("létesítmény -> létesítmény", function() {deepEqual( Stem("létesítmény"), "létesítmény");});
test("létesítményben -> létesítmény", function() {deepEqual( Stem("létesítményben"), "létesítmény");});
test("létesítménye -> létesítmény", function() {deepEqual( Stem("létesítménye"), "létesítmény");});
test("létesítményeit -> létesítmény", function() {deepEqual( Stem("létesítményeit"), "létesítmény");});
test("létesítmények -> létesítmény", function() {deepEqual( Stem("létesítmények"), "létesítmény");});
test("létesítményekben -> létesítmény", function() {deepEqual( Stem("létesítményekben"), "létesítmény");});
test("létesítményeket -> létesítmény", function() {deepEqual( Stem("létesítményeket"), "létesítmény");});
test("létesítményekkel -> létesítmény", function() {deepEqual( Stem("létesítményekkel"), "létesítmény");});
test("létesítményen -> létesítmény", function() {deepEqual( Stem("létesítményen"), "létesítmény");});
test("létesítményre -> létesítmény", function() {deepEqual( Stem("létesítményre"), "létesítmény");});
test("létesítményt -> létesítmény", function() {deepEqual( Stem("létesítményt"), "létesítmény");});
test("létesítése -> létesítés", function() {deepEqual( Stem("létesítése"), "létesítés");});
test("létesítésekor -> létesítés", function() {deepEqual( Stem("létesítésekor"), "létesítés");});
test("létesítési -> létesítés", function() {deepEqual( Stem("létesítési"), "létesítés");});
test("létesítésének -> létesítés", function() {deepEqual( Stem("létesítésének"), "létesítés");});
test("létesítésénél -> létesítés", function() {deepEqual( Stem("létesítésénél"), "létesítés");});
test("létesítésére -> létesítés", function() {deepEqual( Stem("létesítésére"), "létesítés");});
test("létesítéséről -> létesítés", function() {deepEqual( Stem("létesítéséről"), "létesítés");});
test("létesítését -> létesítés", function() {deepEqual( Stem("létesítését"), "létesítés");});
test("létesítésétől -> létesítés", function() {deepEqual( Stem("létesítésétől"), "létesítés");});
test("létesítésével -> létesítés", function() {deepEqual( Stem("létesítésével"), "létesítés");});
test("létesítő -> létesítő", function() {deepEqual( Stem("létesítő"), "létesítő");});
test("létesült -> létesül", function() {deepEqual( Stem("létesült"), "létesül");});
test("létesülő -> létesülő", function() {deepEqual( Stem("létesülő"), "létesülő");});
test("létezhessék -> létezhesse", function() {deepEqual( Stem("létezhessék"), "létezhesse");});
test("létezhetett -> létezhetet", function() {deepEqual( Stem("létezhetett"), "létezhetet");});
test("létezhető -> létezhető", function() {deepEqual( Stem("létezhető"), "létezhető");});
test("létezel -> létezel", function() {deepEqual( Stem("létezel"), "létezel");});
test("létezem -> létez", function() {deepEqual( Stem("létezem"), "létez");});
test("létezett -> létezet", function() {deepEqual( Stem("létezett"), "létezet");});
test("létezik -> létez", function() {deepEqual( Stem("létezik"), "létez");});
test("létezni -> létezn", function() {deepEqual( Stem("létezni"), "létezn");});
test("léteznie -> létezn", function() {deepEqual( Stem("léteznie"), "létezn");});
test("léteznének -> létezn", function() {deepEqual( Stem("léteznének"), "létezn");});
test("léteztek -> létezt", function() {deepEqual( Stem("léteztek"), "létezt");});
test("léteztél -> léteztél", function() {deepEqual( Stem("léteztél"), "léteztél");});
test("létezzék -> létezze", function() {deepEqual( Stem("létezzék"), "létezze");});
test("létezés -> létezés", function() {deepEqual( Stem("létezés"), "létezés");});
test("létezésből -> létezés", function() {deepEqual( Stem("létezésből"), "létezés");});
test("létezésnek -> létezés", function() {deepEqual( Stem("létezésnek"), "létezés");});
test("létezésében -> létezés", function() {deepEqual( Stem("létezésében"), "létezés");});
test("létezésére -> létezés", function() {deepEqual( Stem("létezésére"), "létezés");});
test("létezéséről -> létezés", function() {deepEqual( Stem("létezéséről"), "létezés");});
test("létezését -> létezés", function() {deepEqual( Stem("létezését"), "létezés");});
test("létezésétől -> létezés", function() {deepEqual( Stem("létezésétől"), "létezés");});
test("létezésük -> létezés", function() {deepEqual( Stem("létezésük"), "létezés");});
test("létezésükre -> létezés", function() {deepEqual( Stem("létezésükre"), "létezés");});
test("létező -> létező", function() {deepEqual( Stem("létező"), "létező");});
test("lévők -> lévő", function() {deepEqual( Stem("lévők"), "lévő");});
test("lévőket -> lévő", function() {deepEqual( Stem("lévőket"), "lévő");});
test("lévőkkel -> lévő", function() {deepEqual( Stem("lévőkkel"), "lévő");});
test("lévőnek -> lévő", function() {deepEqual( Stem("lévőnek"), "lévő");});
test("lévőt -> lévő", function() {deepEqual( Stem("lévőt"), "lévő");});
test("lévővel -> lévő", function() {deepEqual( Stem("lévővel"), "lévő");});
test("lévőé -> lévő", function() {deepEqual( Stem("lévőé"), "lévő");});
test("lézer -> lézer", function() {deepEqual( Stem("lézer"), "lézer");});
test("lézerektől -> lézer", function() {deepEqual( Stem("lézerektől"), "lézer");});
test("lézerrel -> lézer", function() {deepEqual( Stem("lézerrel"), "lézer");});
test("lézert -> lézer", function() {deepEqual( Stem("lézert"), "lézer");});
test("lézeresek -> lézeres", function() {deepEqual( Stem("lézeresek"), "lézeres");});
test("lézerirányítású -> lézerirányítású", function() {deepEqual( Stem("lézerirányítású"), "lézerirányítású");});
test("lézernyomatató-üzletben -> lézernyomatató-üzlet", function() {deepEqual( Stem("lézernyomatató-üzletben"), "lézernyomatató-üzlet");});
test("lézernyomtató-üzletágát -> lézernyomtató-üzletág", function() {deepEqual( Stem("lézernyomtató-üzletágát"), "lézernyomtató-üzletág");});
test("lézernyomtatóival -> lézernyomtató", function() {deepEqual( Stem("lézernyomtatóival"), "lézernyomtató");});
test("lézernyomtató -> lézernyomtató", function() {deepEqual( Stem("lézernyomtató"), "lézernyomtató");});
test("lézernyomtatók -> lézernyomtató", function() {deepEqual( Stem("lézernyomtatók"), "lézernyomtató");});
test("lézernyomtatókat -> lézernyomtató", function() {deepEqual( Stem("lézernyomtatókat"), "lézernyomtató");});
test("lézernyomtatót -> lézernyomtató", function() {deepEqual( Stem("lézernyomtatót"), "lézernyomtató");});
test("lézershow -> lézershow", function() {deepEqual( Stem("lézershow"), "lézershow");});
test("lézerszike -> lézersz", function() {deepEqual( Stem("lézerszike"), "lézersz");});
test("líra-csekkjét -> líra-csek", function() {deepEqual( Stem("líra-csekkjét"), "líra-csek");});
test("líracsekkjét -> líracsek", function() {deepEqual( Stem("líracsekkjét"), "líracsek");});
test("lírai -> lír", function() {deepEqual( Stem("lírai"), "lír");});
test("líra -> lí", function() {deepEqual( Stem("líra"), "lí");});
test("lírájában -> lírá", function() {deepEqual( Stem("lírájában"), "lírá");});
test("líráját -> lírá", function() {deepEqual( Stem("líráját"), "lírá");});
test("líránk -> líra", function() {deepEqual( Stem("líránk"), "líra");});
test("lírát -> lír", function() {deepEqual( Stem("lírát"), "lír");});
test("lítiumelem -> lítiumel", function() {deepEqual( Stem("lítiumelem"), "lítiumel");});
test("lízinglehetőségek -> lízinglehetőség", function() {deepEqual( Stem("lízinglehetőségek"), "lízinglehetőség");});
test("lóbázva -> lóbázv", function() {deepEqual( Stem("lóbázva"), "lóbázv");});
test("lóbőrt -> lóbőr", function() {deepEqual( Stem("lóbőrt"), "lóbőr");});
test("lódította -> lódított", function() {deepEqual( Stem("lódította"), "lódított");});
test("lóerő -> lóerő", function() {deepEqual( Stem("lóerő"), "lóerő");});
test("lóerőt -> lóerő", function() {deepEqual( Stem("lóerőt"), "lóerő");});
test("lóerős -> lóerős", function() {deepEqual( Stem("lóerős"), "lóerős");});
test("lógatja -> lógat", function() {deepEqual( Stem("lógatja"), "lógat");});
test("lóg -> lóg", function() {deepEqual( Stem("lóg"), "lóg");});
test("lógjon -> lógj", function() {deepEqual( Stem("lógjon"), "lógj");});
test("lógnak -> lóg", function() {deepEqual( Stem("lógnak"), "lóg");});
test("lógni -> lógn", function() {deepEqual( Stem("lógni"), "lógn");});
test("lógott -> lógot", function() {deepEqual( Stem("lógott"), "lógot");});
test("lógtak -> lógt", function() {deepEqual( Stem("lógtak"), "lógt");});
test("lógtam -> lógt", function() {deepEqual( Stem("lógtam"), "lógt");});
test("lógva -> lógv", function() {deepEqual( Stem("lógva"), "lógv");});
test("lógás -> lógás", function() {deepEqual( Stem("lógás"), "lógás");});
test("lógásnak -> lógás", function() {deepEqual( Stem("lógásnak"), "lógás");});
test("lógásról -> lógás", function() {deepEqual( Stem("lógásról"), "lógás");});
test("lógó -> lógó", function() {deepEqual( Stem("lógó"), "lógó");});
test("lóháton -> lóhát", function() {deepEqual( Stem("lóháton"), "lóhát");});
test("lóhátról -> lóhát", function() {deepEqual( Stem("lóhátról"), "lóhát");});
test("lóhús -> lóhús", function() {deepEqual( Stem("lóhús"), "lóhús");});
test("lóhúsból -> lóhús", function() {deepEqual( Stem("lóhúsból"), "lóhús");});
test("lórévi -> lórév", function() {deepEqual( Stem("lórévi"), "lórév");});
test("lószerszámot -> lószersza", function() {deepEqual( Stem("lószerszámot"), "lószersza");});
test("lószőrékszer-készítés -> lószőrékszer-készítés", function() {deepEqual( Stem("lószőrékszer-készítés"), "lószőrékszer-készítés");});
test("lótifutija -> lótifut", function() {deepEqual( Stem("lótifutija"), "lótifut");});
test("lótolvajok -> lótolvaj", function() {deepEqual( Stem("lótolvajok"), "lótolvaj");});
test("lóvasút -> lóvasú", function() {deepEqual( Stem("lóvasút"), "lóvasú");});
test("lóversenyre -> lóverseny", function() {deepEqual( Stem("lóversenyre"), "lóverseny");});
test("lóvontatású -> lóvontatású", function() {deepEqual( Stem("lóvontatású"), "lóvontatású");});
test("lózung -> lózung", function() {deepEqual( Stem("lózung"), "lózung");});
test("lődörgést -> lődörgés", function() {deepEqual( Stem("lődörgést"), "lődörgés");});
test("lődörgő -> lődörgő", function() {deepEqual( Stem("lődörgő"), "lődörgő");});
test("lőfegyverrel -> lőfegyver", function() {deepEqual( Stem("lőfegyverrel"), "lőfegyver");});
test("lőfegyvert -> lőfegyver", function() {deepEqual( Stem("lőfegyvert"), "lőfegyver");});
test("lőfegyvertől -> lőfegyver", function() {deepEqual( Stem("lőfegyvertől"), "lőfegyver");});
test("lőhet -> lőh", function() {deepEqual( Stem("lőhet"), "lőh");});
test("lőhetik -> lőhet", function() {deepEqual( Stem("lőhetik"), "lőhet");});
test("lőhetnek -> lőhet", function() {deepEqual( Stem("lőhetnek"), "lőhet");});
test("lőrése -> lőrés", function() {deepEqual( Stem("lőrése"), "lőrés");});
test("lőszerek -> lőszer", function() {deepEqual( Stem("lőszerek"), "lőszer");});
test("lőszerrel -> lőszer", function() {deepEqual( Stem("lőszerrel"), "lőszer");});
test("lőszert -> lőszer", function() {deepEqual( Stem("lőszert"), "lőszer");});
test("lőterén -> lőter", function() {deepEqual( Stem("lőterén"), "lőter");});
test("lője -> lő", function() {deepEqual( Stem("lője"), "lő");});
test("lőjük -> lő", function() {deepEqual( Stem("lőjük"), "lő");});
test("lőjük -> lő", function() {deepEqual( Stem("lőjük"), "lő");});
test("lőnek -> lő", function() {deepEqual( Stem("lőnek"), "lő");});
test("lőni -> lőn", function() {deepEqual( Stem("lőni"), "lőn");});
test("lőnék -> lőne", function() {deepEqual( Stem("lőnék"), "lőne");});
test("lőtt -> lőt", function() {deepEqual( Stem("lőtt"), "lőt");});
test("lőtte -> lőtt", function() {deepEqual( Stem("lőtte"), "lőtt");});
test("lőttek -> lőtt", function() {deepEqual( Stem("lőttek"), "lőtt");});
test("lőttem -> lőtt", function() {deepEqual( Stem("lőttem"), "lőtt");});
test("lőtték -> lőtte", function() {deepEqual( Stem("lőtték"), "lőtte");});
test("lőttünk -> lőtt", function() {deepEqual( Stem("lőttünk"), "lőtt");});
test("lövi -> löv", function() {deepEqual( Stem("lövi"), "löv");});
test("lövök -> löv", function() {deepEqual( Stem("lövök"), "löv");});
test("lövik -> löv", function() {deepEqual( Stem("lövik"), "löv");});
test("lökdöstek -> lökdöst", function() {deepEqual( Stem("lökdöstek"), "lökdöst");});
test("lökdöstük -> lökdöst", function() {deepEqual( Stem("lökdöstük"), "lökdöst");});
test("lökdösődött -> lökdösődöt", function() {deepEqual( Stem("lökdösődött"), "lökdösődöt");});
test("lökdösődve -> lökdösődv", function() {deepEqual( Stem("lökdösődve"), "lökdösődv");});
test("lökdösésben -> lökdösés", function() {deepEqual( Stem("lökdösésben"), "lökdösés");});
test("lökdösődés -> lökdösődés", function() {deepEqual( Stem("lökdösődés"), "lökdösődés");});
test("lökdösődést -> lökdösődés", function() {deepEqual( Stem("lökdösődést"), "lökdösődés");});
test("lökettérfogatú -> lökettérfogatú", function() {deepEqual( Stem("lökettérfogatú"), "lökettérfogatú");});
test("lökhet -> lökh", function() {deepEqual( Stem("lökhet"), "lökh");});
test("löknek -> lök", function() {deepEqual( Stem("löknek"), "lök");});
test("lökni -> lökn", function() {deepEqual( Stem("lökni"), "lökn");});
test("lökte -> lökt", function() {deepEqual( Stem("lökte"), "lökt");});
test("löktek -> lökt", function() {deepEqual( Stem("löktek"), "lökt");});
test("löktem -> lökt", function() {deepEqual( Stem("löktem"), "lökt");});
test("lökték -> lökte", function() {deepEqual( Stem("lökték"), "lökte");});
test("lökés -> lökés", function() {deepEqual( Stem("lökés"), "lökés");});
test("lökésben -> lökés", function() {deepEqual( Stem("lökésben"), "lökés");});
test("lökéssel -> lökés", function() {deepEqual( Stem("lökéssel"), "lökés");});
test("lökést -> lökés", function() {deepEqual( Stem("lökést"), "lökés");});
test("lökéshullámot -> lökéshulla", function() {deepEqual( Stem("lökéshullámot"), "lökéshulla");});
test("löködve -> löködv", function() {deepEqual( Stem("löködve"), "löködv");});
test("lökött -> lököt", function() {deepEqual( Stem("lökött"), "lököt");});
test("lötty -> lötty", function() {deepEqual( Stem("lötty"), "lötty");});
test("löttyel -> löty", function() {deepEqual( Stem("löttyel"), "löty");});
test("löttyöket -> lötty", function() {deepEqual( Stem("löttyöket"), "lötty");});
test("lötyög -> lötyög", function() {deepEqual( Stem("lötyög"), "lötyög");});
test("lövedékek -> lövedék", function() {deepEqual( Stem("lövedékek"), "lövedék");});
test("lövedékekkel -> lövedék", function() {deepEqual( Stem("lövedékekkel"), "lövedék");});
test("lövedéket -> lövede", function() {deepEqual( Stem("lövedéket"), "lövede");});
test("lövell -> lövell", function() {deepEqual( Stem("lövell"), "lövell");});
test("lövelli -> lövell", function() {deepEqual( Stem("lövelli"), "lövell");});
test("löveti -> lövet", function() {deepEqual( Stem("löveti"), "lövet");});
test("lövés -> lövés", function() {deepEqual( Stem("lövés"), "lövés");});
test("lövések -> lövés", function() {deepEqual( Stem("lövések"), "lövés");});
test("lövéseket -> lövés", function() {deepEqual( Stem("lövéseket"), "lövés");});
test("lövéssel -> lövés", function() {deepEqual( Stem("lövéssel"), "lövés");});
test("lövését -> lövés", function() {deepEqual( Stem("lövését"), "lövés");});
test("lövészdandár -> lövészdandár", function() {deepEqual( Stem("lövészdandár"), "lövészdandár");});
test("lövészek -> lövész", function() {deepEqual( Stem("lövészek"), "lövész");});
test("lövésznek -> lövész", function() {deepEqual( Stem("lövésznek"), "lövész");});
test("lövészversenyre -> lövészverseny", function() {deepEqual( Stem("lövészversenyre"), "lövészverseny");});
test("lövöldöztünk -> lövöldözt", function() {deepEqual( Stem("lövöldöztünk"), "lövöldözt");});
test("lúdtalpas -> lúdtalpas", function() {deepEqual( Stem("lúdtalpas"), "lúdtalpas");});
test("lúdtalpbetétet -> lúdtalpbetét", function() {deepEqual( Stem("lúdtalpbetétet"), "lúdtalpbetét");});
test("lúgos -> lúgos", function() {deepEqual( Stem("lúgos"), "lúgos");});
test("lüktet -> lükt", function() {deepEqual( Stem("lüktet"), "lükt");});
test("lüktetett -> lüktetet", function() {deepEqual( Stem("lüktetett"), "lüktetet");});
test("macchiás -> macchiás", function() {deepEqual( Stem("macchiás"), "macchiás");});
test("macedón -> macedó", function() {deepEqual( Stem("macedón"), "macedó");});
test("macedónok -> macedón", function() {deepEqual( Stem("macedónok"), "macedón");});
test("macedóniai -> macedóni", function() {deepEqual( Stem("macedóniai"), "macedóni");});
test("maci -> mac", function() {deepEqual( Stem("maci"), "mac");});
test("macskaköves -> macskaköves", function() {deepEqual( Stem("macskaköves"), "macskaköves");});
test("macskaléptekkel -> macskalépt", function() {deepEqual( Stem("macskaléptekkel"), "macskalépt");});
test("macska -> macs", function() {deepEqual( Stem("macska"), "macs");});
test("macskáját -> macská", function() {deepEqual( Stem("macskáját"), "macská");});
test("macskákat -> macska", function() {deepEqual( Stem("macskákat"), "macska");});
test("macskáknak -> macska", function() {deepEqual( Stem("macskáknak"), "macska");});
test("macskám -> macska", function() {deepEqual( Stem("macskám"), "macska");});
test("macskát -> macs", function() {deepEqual( Stem("macskát"), "macs");});
test("madarak -> madar", function() {deepEqual( Stem("madarak"), "madar");});
test("madarakat -> madar", function() {deepEqual( Stem("madarakat"), "madar");});
test("madarakhoz -> madar", function() {deepEqual( Stem("madarakhoz"), "madar");});
test("madarakra -> madar", function() {deepEqual( Stem("madarakra"), "madar");});
test("madarat -> madar", function() {deepEqual( Stem("madarat"), "madar");});
test("madaras -> madaras", function() {deepEqual( Stem("madaras"), "madaras");});
test("madarászni -> madarászn", function() {deepEqual( Stem("madarászni"), "madarászn");});
test("madridi -> madrid", function() {deepEqual( Stem("madridi"), "madrid");});
test("madzaggal -> madzag", function() {deepEqual( Stem("madzaggal"), "madzag");});
test("madzagnagyiparos -> madzagnagyiparos", function() {deepEqual( Stem("madzagnagyiparos"), "madzagnagyiparos");});
test("madzagú -> madzagú", function() {deepEqual( Stem("madzagú"), "madzagú");});
test("madár -> madár", function() {deepEqual( Stem("madár"), "madár");});
test("madárcsicsergés -> madárcsicsergés", function() {deepEqual( Stem("madárcsicsergés"), "madárcsicsergés");});
test("madárcsicsergésre -> madárcsicsergés", function() {deepEqual( Stem("madárcsicsergésre"), "madárcsicsergés");});
test("madárcsontú -> madárcsontú", function() {deepEqual( Stem("madárcsontú"), "madárcsontú");});
test("madárfaj -> madárfaj", function() {deepEqual( Stem("madárfaj"), "madárfaj");});
test("madárfütty -> madárfütty", function() {deepEqual( Stem("madárfütty"), "madárfütty");});
test("madárkák -> madárka", function() {deepEqual( Stem("madárkák"), "madárka");});
test("madárnak -> madár", function() {deepEqual( Stem("madárnak"), "madár");});
test("madártávlati -> madártávlat", function() {deepEqual( Stem("madártávlati"), "madártávlat");});
test("maffiaellenes -> maffiaellenes", function() {deepEqual( Stem("maffiaellenes"), "maffiaellenes");});
test("maffiavezért -> maffiavez", function() {deepEqual( Stem("maffiavezért"), "maffiavez");});
test("maffiavezérét -> maffiavezér", function() {deepEqual( Stem("maffiavezérét"), "maffiavezér");});
test("maffiához -> maff", function() {deepEqual( Stem("maffiához"), "maff");});
test("maffia -> maff", function() {deepEqual( Stem("maffia"), "maff");});
test("maffiára -> maff", function() {deepEqual( Stem("maffiára"), "maff");});
test("maffiózó -> maffiózó", function() {deepEqual( Stem("maffiózó"), "maffiózó");});
test("maffiózók -> maffiózó", function() {deepEqual( Stem("maffiózók"), "maffiózó");});
test("maffiózót -> maffiózó", function() {deepEqual( Stem("maffiózót"), "maffiózó");});
test("magabiztonságot -> magabiztonság", function() {deepEqual( Stem("magabiztonságot"), "magabiztonság");});
test("magabiztos -> magabiztos", function() {deepEqual( Stem("magabiztos"), "magabiztos");});
test("magabiztosabb -> magabiztosabb", function() {deepEqual( Stem("magabiztosabb"), "magabiztosabb");});
test("magabiztosak -> magabiztos", function() {deepEqual( Stem("magabiztosak"), "magabiztos");});
test("magabiztosan -> magabiztos", function() {deepEqual( Stem("magabiztosan"), "magabiztos");});
test("magabiztosság -> magabiztosság", function() {deepEqual( Stem("magabiztosság"), "magabiztosság");});
test("magabiztossága -> magabiztosság", function() {deepEqual( Stem("magabiztossága"), "magabiztosság");});
test("magabiztosságot -> magabiztosság", function() {deepEqual( Stem("magabiztosságot"), "magabiztosság");});
test("maga -> mag", function() {deepEqual( Stem("maga"), "mag");});
test("magad -> mag", function() {deepEqual( Stem("magad"), "mag");});
test("magadat -> mag", function() {deepEqual( Stem("magadat"), "mag");});
test("magaddal -> mag", function() {deepEqual( Stem("magaddal"), "mag");});
test("magadnak -> mag", function() {deepEqual( Stem("magadnak"), "mag");});
test("magadra -> mag", function() {deepEqual( Stem("magadra"), "mag");});
test("magadról -> mag", function() {deepEqual( Stem("magadról"), "mag");});
test("magam -> mag", function() {deepEqual( Stem("magam"), "mag");});
test("magamat -> mag", function() {deepEqual( Stem("magamat"), "mag");});
test("magamba -> mag", function() {deepEqual( Stem("magamba"), "mag");});
test("magamban -> mag", function() {deepEqual( Stem("magamban"), "mag");});
test("magamból -> mag", function() {deepEqual( Stem("magamból"), "mag");});
test("magammal -> mag", function() {deepEqual( Stem("magammal"), "mag");});
test("magamnak -> mag", function() {deepEqual( Stem("magamnak"), "mag");});
test("magamnak -> mag", function() {deepEqual( Stem("magamnak"), "mag");});
test("magamon -> mag", function() {deepEqual( Stem("magamon"), "mag");});
test("magamra -> mag", function() {deepEqual( Stem("magamra"), "mag");});
test("magamról -> mag", function() {deepEqual( Stem("magamról"), "mag");});
test("magamtól -> mag", function() {deepEqual( Stem("magamtól"), "mag");});
test("magaménak -> magam", function() {deepEqual( Stem("magaménak"), "magam");});
test("magamért -> mag", function() {deepEqual( Stem("magamért"), "mag");});
test("magából -> mag", function() {deepEqual( Stem("magából"), "mag");});
test("magából -> mag", function() {deepEqual( Stem("magából"), "mag");});
test("magához -> mag", function() {deepEqual( Stem("magához"), "mag");});
test("magán -> mag", function() {deepEqual( Stem("magán"), "mag");});
test("magába -> mag", function() {deepEqual( Stem("magába"), "mag");});
test("magában -> mag", function() {deepEqual( Stem("magában"), "mag");});
test("magára -> mag", function() {deepEqual( Stem("magára"), "mag");});
test("magáról -> mag", function() {deepEqual( Stem("magáról"), "mag");});
test("magát -> mag", function() {deepEqual( Stem("magát"), "mag");});
test("magától -> mag", function() {deepEqual( Stem("magától"), "mag");});
test("magától -> mag", function() {deepEqual( Stem("magától"), "mag");});
test("magával -> mag", function() {deepEqual( Stem("magával"), "mag");});
test("magával -> mag", function() {deepEqual( Stem("magával"), "mag");});
test("magáé -> maga", function() {deepEqual( Stem("magáé"), "maga");});
test("magáéival -> mag", function() {deepEqual( Stem("magáéival"), "mag");});
test("magáénak -> magá", function() {deepEqual( Stem("magáénak"), "magá");});
test("magáénak -> magá", function() {deepEqual( Stem("magáénak"), "magá");});
test("magáért -> mag", function() {deepEqual( Stem("magáért"), "mag");});
test("magáért -> mag", function() {deepEqual( Stem("magáért"), "mag");});
test("magáét -> magá", function() {deepEqual( Stem("magáét"), "magá");});
test("magáét -> magá", function() {deepEqual( Stem("magáét"), "magá");});
test("magáévá -> magá", function() {deepEqual( Stem("magáévá"), "magá");});
test("magadfajta -> magadfajt", function() {deepEqual( Stem("magadfajta"), "magadfajt");});
test("magaelőtt -> magaelőt", function() {deepEqual( Stem("magaelőtt"), "magaelőt");});
test("magamagából -> magamag", function() {deepEqual( Stem("magamagából"), "magamag");});
test("magamfajta -> magamfajt", function() {deepEqual( Stem("magamfajta"), "magamfajt");});
test("magamkezűleg -> magamkezűleg", function() {deepEqual( Stem("magamkezűleg"), "magamkezűleg");});
test("magamutogató -> magamutogató", function() {deepEqual( Stem("magamutogató"), "magamutogató");});
test("magas -> magas", function() {deepEqual( Stem("magas"), "magas");});
test("magasabb -> magasabb", function() {deepEqual( Stem("magasabb"), "magasabb");});
test("magasabban -> magasab", function() {deepEqual( Stem("magasabban"), "magasab");});
test("magasabbnak -> magasabb", function() {deepEqual( Stem("magasabbnak"), "magasabb");});
test("magasabbra -> magasabb", function() {deepEqual( Stem("magasabbra"), "magasabb");});
test("magasak -> magas", function() {deepEqual( Stem("magasak"), "magas");});
test("magasan -> magas", function() {deepEqual( Stem("magasan"), "magas");});
test("magasba -> magas", function() {deepEqual( Stem("magasba"), "magas");});
test("magasban -> magas", function() {deepEqual( Stem("magasban"), "magas");});
test("magasból -> magas", function() {deepEqual( Stem("magasból"), "magas");});
test("magasnak -> magas", function() {deepEqual( Stem("magasnak"), "magas");});
test("magasra -> magas", function() {deepEqual( Stem("magasra"), "magas");});
test("magasról -> magas", function() {deepEqual( Stem("magasról"), "magas");});
test("magaskultúráról -> magaskultúr", function() {deepEqual( Stem("magaskultúráról"), "magaskultúr");});
test("magaslaton -> magaslat", function() {deepEqual( Stem("magaslaton"), "magaslat");});
test("magaslatról -> magaslat", function() {deepEqual( Stem("magaslatról"), "magaslat");});
test("magaslatán -> magaslat", function() {deepEqual( Stem("magaslatán"), "magaslat");});
test("magasló -> magasló", function() {deepEqual( Stem("magasló"), "magasló");});
test("magasodnak -> magas", function() {deepEqual( Stem("magasodnak"), "magas");});
test("magasrangú -> magasrangú", function() {deepEqual( Stem("magasrangú"), "magasrangú");});
test("magasrendű -> magasrendű", function() {deepEqual( Stem("magasrendű"), "magasrendű");});
test("magasság -> magasság", function() {deepEqual( Stem("magasság"), "magasság");});
test("magasságban -> magasság", function() {deepEqual( Stem("magasságban"), "magasság");});
test("magasságnak -> magasság", function() {deepEqual( Stem("magasságnak"), "magasság");});
test("magasságoknál -> magasság", function() {deepEqual( Stem("magasságoknál"), "magasság");});
test("magasságom -> magasság", function() {deepEqual( Stem("magasságom"), "magasság");});
test("magasságában -> magasság", function() {deepEqual( Stem("magasságában"), "magasság");});
test("magasugrókat -> magasugró", function() {deepEqual( Stem("magasugrókat"), "magasugró");});
test("magasztalta -> magasztalt", function() {deepEqual( Stem("magasztalta"), "magasztalt");});
test("magasztos -> magasztos", function() {deepEqual( Stem("magasztos"), "magasztos");});
test("magasztosat -> magasztos", function() {deepEqual( Stem("magasztosat"), "magasztos");});
test("magasépítéssel -> magasépítés", function() {deepEqual( Stem("magasépítéssel"), "magasépítés");});
test("magatartásformákat -> magatartásforma", function() {deepEqual( Stem("magatartásformákat"), "magatartásforma");});
test("magatartási -> magatartás", function() {deepEqual( Stem("magatartási"), "magatartás");});
test("magatartáskódex -> magatartáskódex", function() {deepEqual( Stem("magatartáskódex"), "magatartáskódex");});
test("magatartás -> magatartás", function() {deepEqual( Stem("magatartás"), "magatartás");});
test("magatartása -> magatartás", function() {deepEqual( Stem("magatartása"), "magatartás");});
test("magatartásban -> magatartás", function() {deepEqual( Stem("magatartásban"), "magatartás");});
test("magatartások -> magatartás", function() {deepEqual( Stem("magatartások"), "magatartás");});
test("magatartásokra -> magatartás", function() {deepEqual( Stem("magatartásokra"), "magatartás");});
test("magatartásom -> magatartás", function() {deepEqual( Stem("magatartásom"), "magatartás");});
test("magatartásra -> magatartás", function() {deepEqual( Stem("magatartásra"), "magatartás");});
test("magatartással -> magatartás", function() {deepEqual( Stem("magatartással"), "magatartás");});
test("magatartást -> magatartás", function() {deepEqual( Stem("magatartást"), "magatartás");});
test("magatartásuk -> magatartás", function() {deepEqual( Stem("magatartásuk"), "magatartás");});
test("magatartásukat -> magatartás", function() {deepEqual( Stem("magatartásukat"), "magatartás");});
test("magatartásából -> magatartás", function() {deepEqual( Stem("magatartásából"), "magatartás");});
test("magatartásán -> magatartás", function() {deepEqual( Stem("magatartásán"), "magatartás");});
test("magatartásának -> magatartás", function() {deepEqual( Stem("magatartásának"), "magatartás");});
test("magatartására -> magatartás", function() {deepEqual( Stem("magatartására"), "magatartás");});
test("magatartását -> magatartás", function() {deepEqual( Stem("magatartását"), "magatartás");});
test("magatartásával -> magatartás", function() {deepEqual( Stem("magatartásával"), "magatartás");});
test("magatatásában -> magatatás", function() {deepEqual( Stem("magatatásában"), "magatatás");});
test("magatartástípusok -> magatartástípus", function() {deepEqual( Stem("magatartástípusok"), "magatartástípus");});
test("magatudatlanul -> magatudatlan", function() {deepEqual( Stem("magatudatlanul"), "magatudatlan");});
test("magaviseletű -> magaviseletű", function() {deepEqual( Stem("magaviseletű"), "magaviseletű");});
test("magazin -> magaz", function() {deepEqual( Stem("magazin"), "magaz");});
test("magazinban -> magazin", function() {deepEqual( Stem("magazinban"), "magazin");});
test("magazinját -> magazin", function() {deepEqual( Stem("magazinját"), "magazin");});
test("magazinok -> magazin", function() {deepEqual( Stem("magazinok"), "magazin");});
test("magazinoktól -> magazin", function() {deepEqual( Stem("magazinoktól"), "magazin");});
test("magazint -> magazin", function() {deepEqual( Stem("magazint"), "magazin");});
test("magazinműsorai -> magazinműsor", function() {deepEqual( Stem("magazinműsorai"), "magazinműsor");});
test("magfizikai -> magfizi", function() {deepEqual( Stem("magfizikai"), "magfizi");});
test("magicolor -> magicolor", function() {deepEqual( Stem("magicolor"), "magicolor");});
test("magis -> magis", function() {deepEqual( Stem("magis"), "magis");});
test("magja -> mag", function() {deepEqual( Stem("magja"), "mag");});
test("mag -> mag", function() {deepEqual( Stem("mag"), "mag");});
test("magjába -> mag", function() {deepEqual( Stem("magjába"), "mag");});
test("magvakat -> magv", function() {deepEqual( Stem("magvakat"), "magv");});
test("magvakban -> magv", function() {deepEqual( Stem("magvakban"), "magv");});
test("magvának -> magv", function() {deepEqual( Stem("magvának"), "magv");});
test("magok -> mag", function() {deepEqual( Stem("magok"), "mag");});
test("magokból -> mag", function() {deepEqual( Stem("magokból"), "mag");});
test("magkötés -> magkötés", function() {deepEqual( Stem("magkötés"), "magkötés");});
test("maglódi -> maglód", function() {deepEqual( Stem("maglódi"), "maglód");});
test("magmatömeg -> magmatömeg", function() {deepEqual( Stem("magmatömeg"), "magmatömeg");});
test("magmája -> magmá", function() {deepEqual( Stem("magmája"), "magmá");});
test("magnetofon -> magnetof", function() {deepEqual( Stem("magnetofon"), "magnetof");});
test("magnificenciájával -> magnificenciá", function() {deepEqual( Stem("magnificenciájával"), "magnificenciá");});
test("magnófelvétel -> magnófelvétel", function() {deepEqual( Stem("magnófelvétel"), "magnófelvétel");});
test("magnófelvételeket -> magnófelvétel", function() {deepEqual( Stem("magnófelvételeket"), "magnófelvétel");});
test("magnófelvételt -> magnófelvétel", function() {deepEqual( Stem("magnófelvételt"), "magnófelvétel");});
test("magnóm -> magnó", function() {deepEqual( Stem("magnóm"), "magnó");});
test("magnó -> magnó", function() {deepEqual( Stem("magnó"), "magnó");});
test("magnómat -> magnó", function() {deepEqual( Stem("magnómat"), "magnó");});
test("magnóra -> magnó", function() {deepEqual( Stem("magnóra"), "magnó");});
test("magnót -> magnó", function() {deepEqual( Stem("magnót"), "magnó");});
test("magnóval -> magnó", function() {deepEqual( Stem("magnóval"), "magnó");});
test("magnószalagról -> magnószalag", function() {deepEqual( Stem("magnószalagról"), "magnószalag");});
test("magnóztunk -> magnózt", function() {deepEqual( Stem("magnóztunk"), "magnózt");});
test("magnózással -> magnózás", function() {deepEqual( Stem("magnózással"), "magnózás");});
test("magolni -> magoln", function() {deepEqual( Stem("magolni"), "magoln");});
test("magolás -> magolás", function() {deepEqual( Stem("magolás"), "magolás");});
test("magolós -> magolós", function() {deepEqual( Stem("magolós"), "magolós");});
test("maguk -> mag", function() {deepEqual( Stem("maguk"), "mag");});
test("magukat -> mag", function() {deepEqual( Stem("magukat"), "mag");});
test("magukba -> mag", function() {deepEqual( Stem("magukba"), "mag");});
test("magukban -> mag", function() {deepEqual( Stem("magukban"), "mag");});
test("magukból -> mag", function() {deepEqual( Stem("magukból"), "mag");});
test("magukhoz -> mag", function() {deepEqual( Stem("magukhoz"), "mag");});
test("magukkal -> mag", function() {deepEqual( Stem("magukkal"), "mag");});
test("maguknak -> mag", function() {deepEqual( Stem("maguknak"), "mag");});
test("magukon -> mag", function() {deepEqual( Stem("magukon"), "mag");});
test("magukra -> mag", function() {deepEqual( Stem("magukra"), "mag");});
test("magukról -> mag", function() {deepEqual( Stem("magukról"), "mag");});
test("maguktól -> mag", function() {deepEqual( Stem("maguktól"), "mag");});
test("magukénak -> magu", function() {deepEqual( Stem("magukénak"), "magu");});
test("magukért -> mag", function() {deepEqual( Stem("magukért"), "mag");});
test("magukét -> magu", function() {deepEqual( Stem("magukét"), "magu");});
test("magukévá -> magu", function() {deepEqual( Stem("magukévá"), "magu");});
test("magunk -> mag", function() {deepEqual( Stem("magunk"), "mag");});
test("magunkat -> mag", function() {deepEqual( Stem("magunkat"), "mag");});
test("magunkba -> mag", function() {deepEqual( Stem("magunkba"), "mag");});
test("magunkban -> mag", function() {deepEqual( Stem("magunkban"), "mag");});
test("magunkkal -> mag", function() {deepEqual( Stem("magunkkal"), "mag");});
test("magunknak -> mag", function() {deepEqual( Stem("magunknak"), "mag");});
test("magunkon -> mag", function() {deepEqual( Stem("magunkon"), "mag");});
test("magunkra -> mag", function() {deepEqual( Stem("magunkra"), "mag");});
test("magunkról -> mag", function() {deepEqual( Stem("magunkról"), "mag");});
test("magunkért -> mag", function() {deepEqual( Stem("magunkért"), "mag");});
test("magyar-lengyel -> magyar-lengyel", function() {deepEqual( Stem("magyar-lengyel"), "magyar-lengyel");});
test("magyar-magyar -> magyar-magyar", function() {deepEqual( Stem("magyar-magyar"), "magyar-magyar");});
test("magyar-orosz -> magyar-orosz", function() {deepEqual( Stem("magyar-orosz"), "magyar-orosz");});
test("magyar-osztrák -> magyar-osztra", function() {deepEqual( Stem("magyar-osztrák"), "magyar-osztra");});
test("magyar-román -> magyar-rom", function() {deepEqual( Stem("magyar-román"), "magyar-rom");});
test("magyar-szlovák -> magyar-szlova", function() {deepEqual( Stem("magyar-szlovák"), "magyar-szlova");});
test("magyar-történelem -> magyar-történel", function() {deepEqual( Stem("magyar-történelem"), "magyar-történel");});
test("magyar-ukrán -> magyar-ukr", function() {deepEqual( Stem("magyar-ukrán"), "magyar-ukr");});
test("magyar-zsidó -> magyar-zsidó", function() {deepEqual( Stem("magyar-zsidó"), "magyar-zsidó");});
test("magyardemokraták -> magyardemokrata", function() {deepEqual( Stem("magyardemokraták"), "magyardemokrata");});
test("magyargyűlölet -> magyargyűlöl", function() {deepEqual( Stem("magyargyűlölet"), "magyargyűlöl");});
test("magyarlakta -> magyarlakt", function() {deepEqual( Stem("magyarlakta"), "magyarlakt");});
test("magyarnak -> magyar", function() {deepEqual( Stem("magyarnak"), "magyar");});
test("magyarból -> magyar", function() {deepEqual( Stem("magyarból"), "magyar");});
test("magyarok -> magyar", function() {deepEqual( Stem("magyarok"), "magyar");});
test("magyarokat -> magyar", function() {deepEqual( Stem("magyarokat"), "magyar");});
test("magyaroknak -> magyar", function() {deepEqual( Stem("magyaroknak"), "magyar");});
test("magyarokért -> magyar", function() {deepEqual( Stem("magyarokért"), "magyar");});
test("magyarra -> magyar", function() {deepEqual( Stem("magyarra"), "magyar");});
test("magyarul -> magyar", function() {deepEqual( Stem("magyarul"), "magyar");});
test("magyar -> magyar", function() {deepEqual( Stem("magyar"), "magyar");});
test("magyarországi -> magyarország", function() {deepEqual( Stem("magyarországi"), "magyarország");});
test("magyarországit -> magyarország", function() {deepEqual( Stem("magyarországit"), "magyarország");});
test("magyaros -> magyaros", function() {deepEqual( Stem("magyaros"), "magyaros");});
test("magyaros-dáridós-mulatós -> magyaros-dáridós-mulatós", function() {deepEqual( Stem("magyaros-dáridós-mulatós"), "magyaros-dáridós-mulatós");});
test("magyaros-vidékies -> magyaros-vidékies", function() {deepEqual( Stem("magyaros-vidékies"), "magyaros-vidékies");});
test("magyarság -> magyarság", function() {deepEqual( Stem("magyarság"), "magyarság");});
test("magyarságnak -> magyarság", function() {deepEqual( Stem("magyarságnak"), "magyarság");});
test("magyarságuk -> magyarság", function() {deepEqual( Stem("magyarságuk"), "magyarság");});
test("magyarságtudatomat -> magyarságtudat", function() {deepEqual( Stem("magyarságtudatomat"), "magyarságtudat");});
test("magyartanár -> magyartanár", function() {deepEqual( Stem("magyartanár"), "magyartanár");});
test("magyartanárom -> magyartanár", function() {deepEqual( Stem("magyartanárom"), "magyartanár");});
test("magyarászta -> magyarászt", function() {deepEqual( Stem("magyarászta"), "magyarászt");});
test("magyarázat -> magyaráz", function() {deepEqual( Stem("magyarázat"), "magyaráz");});
test("magyarázata -> magyarázat", function() {deepEqual( Stem("magyarázata"), "magyarázat");});
test("magyarázata -> magyarázat", function() {deepEqual( Stem("magyarázata"), "magyarázat");});
test("magyarázatai -> magyarázat", function() {deepEqual( Stem("magyarázatai"), "magyarázat");});
test("magyarázatait -> magyarázat", function() {deepEqual( Stem("magyarázatait"), "magyarázat");});
test("magyarázatként -> magyarázat", function() {deepEqual( Stem("magyarázatként"), "magyarázat");});
test("magyarázatnál -> magyarázat", function() {deepEqual( Stem("magyarázatnál"), "magyarázat");});
test("magyarázatokat -> magyarázat", function() {deepEqual( Stem("magyarázatokat"), "magyarázat");});
test("magyarázatokkal -> magyarázat", function() {deepEqual( Stem("magyarázatokkal"), "magyarázat");});
test("magyarázatomat -> magyarázat", function() {deepEqual( Stem("magyarázatomat"), "magyarázat");});
test("magyarázatot -> magyarázat", function() {deepEqual( Stem("magyarázatot"), "magyarázat");});
test("magyarázatra -> magyarázat", function() {deepEqual( Stem("magyarázatra"), "magyarázat");});
test("magyarázattal -> magyaráz", function() {deepEqual( Stem("magyarázattal"), "magyaráz");});
test("magyarázatuk -> magyarázat", function() {deepEqual( Stem("magyarázatuk"), "magyarázat");});
test("magyarázatul -> magyarázat", function() {deepEqual( Stem("magyarázatul"), "magyarázat");});
test("magyarázatába -> magyarázat", function() {deepEqual( Stem("magyarázatába"), "magyarázat");});
test("magyarázatánál -> magyarázat", function() {deepEqual( Stem("magyarázatánál"), "magyarázat");});
test("magyarázatára -> magyarázat", function() {deepEqual( Stem("magyarázatára"), "magyarázat");});
test("magyarázatát -> magyarázat", function() {deepEqual( Stem("magyarázatát"), "magyarázat");});
test("magyarázatául -> magyarázat", function() {deepEqual( Stem("magyarázatául"), "magyarázat");});
test("magyarázgatni -> magyarázgatn", function() {deepEqual( Stem("magyarázgatni"), "magyarázgatn");});
test("magyarázhat -> magyarázh", function() {deepEqual( Stem("magyarázhat"), "magyarázh");});
test("magyarázható -> magyarázható", function() {deepEqual( Stem("magyarázható"), "magyarázható");});
test("magyarázhatók -> magyarázható", function() {deepEqual( Stem("magyarázhatók"), "magyarázható");});
test("magyarázkodhat -> magyarázkodh", function() {deepEqual( Stem("magyarázkodhat"), "magyarázkodh");});
test("magyarázkodás -> magyarázkodás", function() {deepEqual( Stem("magyarázkodás"), "magyarázkodás");});
test("magyarázkodások -> magyarázkodás", function() {deepEqual( Stem("magyarázkodások"), "magyarázkodás");});
test("magyarázkodásra -> magyarázkodás", function() {deepEqual( Stem("magyarázkodásra"), "magyarázkodás");});
test("magyarázott -> magyarázot", function() {deepEqual( Stem("magyarázott"), "magyarázot");});
test("magyarázva -> magyarázv", function() {deepEqual( Stem("magyarázva"), "magyarázv");});
test("magyaráznak -> magyaráz", function() {deepEqual( Stem("magyaráznak"), "magyaráz");});
test("magyarázni -> magyarázn", function() {deepEqual( Stem("magyarázni"), "magyarázn");});
test("magyaráznom -> magyarázn", function() {deepEqual( Stem("magyaráznom"), "magyarázn");});
test("magyarázná -> magyarázna", function() {deepEqual( Stem("magyarázná"), "magyarázna");});
test("magyarázod -> magyaráz", function() {deepEqual( Stem("magyarázod"), "magyaráz");});
test("magyarázta -> magyarázt", function() {deepEqual( Stem("magyarázta"), "magyarázt");});
test("magyarázza -> magyarázz", function() {deepEqual( Stem("magyarázza"), "magyarázz");});
test("magyarázzuk -> magyarázz", function() {deepEqual( Stem("magyarázzuk"), "magyarázz");});
test("magyarázzák -> magyarázza", function() {deepEqual( Stem("magyarázzák"), "magyarázza");});
test("magyaráz -> magyaráz", function() {deepEqual( Stem("magyaráz"), "magyaráz");});
test("magyarázás -> magyarázás", function() {deepEqual( Stem("magyarázás"), "magyarázás");});
test("magyarított -> magyarítot", function() {deepEqual( Stem("magyarított"), "magyarítot");});
test("magyarítunk -> magyarít", function() {deepEqual( Stem("magyarítunk"), "magyarít");});
test("magyaróra -> magyaró", function() {deepEqual( Stem("magyaróra"), "magyaró");});
test("magyarórákon -> magyaróra", function() {deepEqual( Stem("magyarórákon"), "magyaróra");});
test("magzatelhajtást -> magzatelhajtás", function() {deepEqual( Stem("magzatelhajtást"), "magzatelhajtás");});
test("magzatvize -> magzatviz", function() {deepEqual( Stem("magzatvize"), "magzatviz");});
test("magzatvíz -> magzatvíz", function() {deepEqual( Stem("magzatvíz"), "magzatvíz");});
test("magábaroskadva -> magábaroskadv", function() {deepEqual( Stem("magábaroskadva"), "magábaroskadv");});
test("magállapított -> magállapítot", function() {deepEqual( Stem("magállapított"), "magállapítot");});
test("magán-dokumentumfilmmé -> magán-dokumentumfil", function() {deepEqual( Stem("magán-dokumentumfilmmé"), "magán-dokumentumfil");});
test("magán-teleképkészülékbe -> magán-teleképkészüle", function() {deepEqual( Stem("magán-teleképkészülékbe"), "magán-teleképkészüle");});
test("magának -> mag", function() {deepEqual( Stem("magának"), "mag");});
test("magánalap -> magánalap", function() {deepEqual( Stem("magánalap"), "magánalap");});
test("magánautókat -> magánautó", function() {deepEqual( Stem("magánautókat"), "magánautó");});
test("magánbefektető -> magánbefektető", function() {deepEqual( Stem("magánbefektető"), "magánbefektető");});
test("magánbefektetőink -> magánbefektető", function() {deepEqual( Stem("magánbefektetőink"), "magánbefektető");});
test("magánbeszélgetései -> magánbeszélgetés", function() {deepEqual( Stem("magánbeszélgetései"), "magánbeszélgetés");});
test("magánbeszélgetésüket -> magánbeszélgetés", function() {deepEqual( Stem("magánbeszélgetésüket"), "magánbeszélgetés");});
test("magánbűnbe -> magánbűn", function() {deepEqual( Stem("magánbűnbe"), "magánbűn");});
test("magáncégek -> magáncég", function() {deepEqual( Stem("magáncégek"), "magáncég");});
test("magáncélú -> magáncélú", function() {deepEqual( Stem("magáncélú"), "magáncélú");});
test("magánemberek -> magánember", function() {deepEqual( Stem("magánemberek"), "magánember");});
test("magánemberként -> magánember", function() {deepEqual( Stem("magánemberként"), "magánember");});
test("magánfenntartású -> magánfenntartású", function() {deepEqual( Stem("magánfenntartású"), "magánfenntartású");});
test("magángazdaságban -> magángazdaság", function() {deepEqual( Stem("magángazdaságban"), "magángazdaság");});
test("magángazdaságot -> magángazdaság", function() {deepEqual( Stem("magángazdaságot"), "magángazdaság");});
test("magángyűjtemény -> magángyűjtemény", function() {deepEqual( Stem("magángyűjtemény"), "magángyűjtemény");});
test("magángyűjteményében -> magángyűjtemény", function() {deepEqual( Stem("magángyűjteményében"), "magángyűjtemény");});
test("magángépkocsija -> magángépkocs", function() {deepEqual( Stem("magángépkocsija"), "magángépkocs");});
test("magánhadseregem -> magánhadsereg", function() {deepEqual( Stem("magánhadseregem"), "magánhadsereg");});
test("magánhasználat -> magánhasznál", function() {deepEqual( Stem("magánhasználat"), "magánhasznál");});
test("magánhasználatot -> magánhasználat", function() {deepEqual( Stem("magánhasználatot"), "magánhasználat");});
test("magánhasználatra -> magánhasználat", function() {deepEqual( Stem("magánhasználatra"), "magánhasználat");});
test("magánhegedűse -> magánhegedűs", function() {deepEqual( Stem("magánhegedűse"), "magánhegedűs");});
test("magánhálózati -> magánhálózat", function() {deepEqual( Stem("magánhálózati"), "magánhálózat");});
test("magánhálózata -> magánhálózat", function() {deepEqual( Stem("magánhálózata"), "magánhálózat");});
test("magánhálózatban -> magánhálózat", function() {deepEqual( Stem("magánhálózatban"), "magánhálózat");});
test("magánhálózathoz -> magánhálózat", function() {deepEqual( Stem("magánhálózathoz"), "magánhálózat");});
test("magánhálózatnak -> magánhálózat", function() {deepEqual( Stem("magánhálózatnak"), "magánhálózat");});
test("magánhálózatok -> magánhálózat", function() {deepEqual( Stem("magánhálózatok"), "magánhálózat");});
test("magánhálózatokat -> magánhálózat", function() {deepEqual( Stem("magánhálózatokat"), "magánhálózat");});
test("magánhálózatokból -> magánhálózat", function() {deepEqual( Stem("magánhálózatokból"), "magánhálózat");});
test("magánhálózatokkal -> magánhálózat", function() {deepEqual( Stem("magánhálózatokkal"), "magánhálózat");});
test("magánhálózatoknak -> magánhálózat", function() {deepEqual( Stem("magánhálózatoknak"), "magánhálózat");});
test("magánhálózaton -> magánhálózat", function() {deepEqual( Stem("magánhálózaton"), "magánhálózat");});
test("magánhálózatot -> magánhálózat", function() {deepEqual( Stem("magánhálózatot"), "magánhálózat");});
test("magánház -> magánház", function() {deepEqual( Stem("magánház"), "magánház");});
test("magánházak -> magánház", function() {deepEqual( Stem("magánházak"), "magánház");});
test("magánintézmény -> magánintézmény", function() {deepEqual( Stem("magánintézmény"), "magánintézmény");});
test("magánintézmények -> magánintézmény", function() {deepEqual( Stem("magánintézmények"), "magánintézmény");});
test("magánjellegű -> magánjellegű", function() {deepEqual( Stem("magánjellegű"), "magánjellegű");});
test("magánjellegűnek -> magánjellegű", function() {deepEqual( Stem("magánjellegűnek"), "magánjellegű");});
test("magánjogi -> magánjog", function() {deepEqual( Stem("magánjogi"), "magánjog");});
test("magánjogról -> magánjog", function() {deepEqual( Stem("magánjogról"), "magánjog");});
test("magánkereskedési -> magánkereskedés", function() {deepEqual( Stem("magánkereskedési"), "magánkereskedés");});
test("magánkézbe -> magánkéz", function() {deepEqual( Stem("magánkézbe"), "magánkéz");});
test("magánkívül -> magánkív", function() {deepEqual( Stem("magánkívül"), "magánkív");});
test("magánlakosztályomban -> magánlakosztály", function() {deepEqual( Stem("magánlakosztályomban"), "magánlakosztály");});
test("magánlakosztályában -> magánlakosztály", function() {deepEqual( Stem("magánlakosztályában"), "magánlakosztály");});
test("magánleveleket -> magánlevel", function() {deepEqual( Stem("magánleveleket"), "magánlevel");});
test("magánleveleké -> magánlevel", function() {deepEqual( Stem("magánleveleké"), "magánlevel");});
test("magánlevelet -> magánlevel", function() {deepEqual( Stem("magánlevelet"), "magánlevel");});
test("magánlevél -> magánlevél", function() {deepEqual( Stem("magánlevél"), "magánlevél");});
test("magánmegnyilatkozásokban -> magánmegnyilatkozás", function() {deepEqual( Stem("magánmegnyilatkozásokban"), "magánmegnyilatkozás");});
test("magánmásolat -> magánmásol", function() {deepEqual( Stem("magánmásolat"), "magánmásol");});
test("magánmásolás -> magánmásolás", function() {deepEqual( Stem("magánmásolás"), "magánmásolás");});
test("magánnyomozói -> magánnyomozó", function() {deepEqual( Stem("magánnyomozói"), "magánnyomozó");});
test("magánokirat-hamisítás -> magánokirat-hamisítás", function() {deepEqual( Stem("magánokirat-hamisítás"), "magánokirat-hamisítás");});
test("magánokirat-hamisításért -> magánokirat-hamisítás", function() {deepEqual( Stem("magánokirat-hamisításért"), "magánokirat-hamisítás");});
test("magánokirat -> magánokir", function() {deepEqual( Stem("magánokirat"), "magánokir");});
test("magánokiratba -> magánokirat", function() {deepEqual( Stem("magánokiratba"), "magánokirat");});
test("magánokiratban -> magánokirat", function() {deepEqual( Stem("magánokiratban"), "magánokirat");});
test("magánokiratot -> magánokirat", function() {deepEqual( Stem("magánokiratot"), "magánokirat");});
test("magánokirati -> magánokirat", function() {deepEqual( Stem("magánokirati"), "magánokirat");});
test("magánosított -> magánosítot", function() {deepEqual( Stem("magánosított"), "magánosítot");});
test("magánosítás -> magánosítás", function() {deepEqual( Stem("magánosítás"), "magánosítás");});
test("magánosítását -> magánosítás", function() {deepEqual( Stem("magánosítását"), "magánosítás");});
test("magánosításával -> magánosítás", function() {deepEqual( Stem("magánosításával"), "magánosítás");});
test("magánotthon -> magánotth", function() {deepEqual( Stem("magánotthon"), "magánotth");});
test("magánotthonok -> magánotthon", function() {deepEqual( Stem("magánotthonok"), "magánotthon");});
test("magánszektor -> magánszektor", function() {deepEqual( Stem("magánszektor"), "magánszektor");});
test("magánszektort -> magánszektor", function() {deepEqual( Stem("magánszektort"), "magánszektor");});
test("magánszemély -> magánszemély", function() {deepEqual( Stem("magánszemély"), "magánszemély");});
test("magánszemélyek -> magánszemély", function() {deepEqual( Stem("magánszemélyek"), "magánszemély");});
test("magánszemélyeket -> magánszemély", function() {deepEqual( Stem("magánszemélyeket"), "magánszemély");});
test("magánszemélyeknek -> magánszemély", function() {deepEqual( Stem("magánszemélyeknek"), "magánszemély");});
test("magánszemélyekre -> magánszemély", function() {deepEqual( Stem("magánszemélyekre"), "magánszemély");});
test("magánszemélyként -> magánszemély", function() {deepEqual( Stem("magánszemélyként"), "magánszemély");});
test("magánszemélynek -> magánszemély", function() {deepEqual( Stem("magánszemélynek"), "magánszemély");});
test("magánszféra -> magánszf", function() {deepEqual( Stem("magánszféra"), "magánszf");});
test("magánszférában -> magánszfér", function() {deepEqual( Stem("magánszférában"), "magánszfér");});
test("magánszférát -> magánszfér", function() {deepEqual( Stem("magánszférát"), "magánszfér");});
test("magánszorgalomból -> magánszorgal", function() {deepEqual( Stem("magánszorgalomból"), "magánszorgal");});
test("magántanár -> magántanár", function() {deepEqual( Stem("magántanár"), "magántanár");});
test("magántitkár -> magántitkár", function() {deepEqual( Stem("magántitkár"), "magántitkár");});
test("magántitkárnak -> magántitkár", function() {deepEqual( Stem("magántitkárnak"), "magántitkár");});
test("magántitkári -> magántitkár", function() {deepEqual( Stem("magántitkári"), "magántitkár");});
test("magántulajdon -> magántulaj", function() {deepEqual( Stem("magántulajdon"), "magántulaj");});
test("magántulajdonban -> magántulajdon", function() {deepEqual( Stem("magántulajdonban"), "magántulajdon");});
test("magántulajdonom -> magántulajdon", function() {deepEqual( Stem("magántulajdonom"), "magántulajdon");});
test("magántulajdont -> magántulajdon", function() {deepEqual( Stem("magántulajdont"), "magántulajdon");});
test("magántulajdonosok -> magántulajdonos", function() {deepEqual( Stem("magántulajdonosok"), "magántulajdonos");});
test("magántulajdonú -> magántulajdonú", function() {deepEqual( Stem("magántulajdonú"), "magántulajdonú");});
test("magántámogatáshoz -> magántámogatás", function() {deepEqual( Stem("magántámogatáshoz"), "magántámogatás");});
test("magántőke -> magántő", function() {deepEqual( Stem("magántőke"), "magántő");});
test("magánvagyonba -> magánvagyon", function() {deepEqual( Stem("magánvagyonba"), "magánvagyon");});
test("magánvállalkozás -> magánvállalkozás", function() {deepEqual( Stem("magánvállalkozás"), "magánvállalkozás");});
test("magánvállalkozó -> magánvállalkozó", function() {deepEqual( Stem("magánvállalkozó"), "magánvállalkozó");});
test("magánvállalkozók -> magánvállalkozó", function() {deepEqual( Stem("magánvállalkozók"), "magánvállalkozó");});
test("magánvéleményként -> magánvélemény", function() {deepEqual( Stem("magánvéleményként"), "magánvélemény");});
test("magányos -> magányos", function() {deepEqual( Stem("magányos"), "magányos");});
test("magányosan -> magányos", function() {deepEqual( Stem("magányosan"), "magányos");});
test("magányosnak -> magányos", function() {deepEqual( Stem("magányosnak"), "magányos");});
test("magányost -> magányos", function() {deepEqual( Stem("magányost"), "magányos");});
test("magányosság -> magányosság", function() {deepEqual( Stem("magányosság"), "magányosság");});
test("magány -> magány", function() {deepEqual( Stem("magány"), "magány");});
test("magányban -> magány", function() {deepEqual( Stem("magányban"), "magány");});
test("magánynak -> magány", function() {deepEqual( Stem("magánynak"), "magány");});
test("magányra -> magány", function() {deepEqual( Stem("magányra"), "magány");});
test("magányt -> magány", function() {deepEqual( Stem("magányt"), "magány");});
test("magányában -> magány", function() {deepEqual( Stem("magányában"), "magány");});
test("magányát -> magány", function() {deepEqual( Stem("magányát"), "magány");});
test("magánzárkában -> magánzár", function() {deepEqual( Stem("magánzárkában"), "magánzár");});
test("magánzárkával -> magánzár", function() {deepEqual( Stem("magánzárkával"), "magánzár");});
test("magánál -> mag", function() {deepEqual( Stem("magánál"), "mag");});
test("magánéleti -> magánélet", function() {deepEqual( Stem("magánéleti"), "magánélet");});
test("magánélet -> magánél", function() {deepEqual( Stem("magánélet"), "magánél");});
test("magánéletben -> magánélet", function() {deepEqual( Stem("magánéletben"), "magánélet");});
test("magánélete -> magánélet", function() {deepEqual( Stem("magánélete"), "magánélet");});
test("magánéletem -> magánélet", function() {deepEqual( Stem("magánéletem"), "magánélet");});
test("magánéletemben -> magánélet", function() {deepEqual( Stem("magánéletemben"), "magánélet");});
test("magánéletemet -> magánélet", function() {deepEqual( Stem("magánéletemet"), "magánélet");});
test("magánéletemről -> magánélet", function() {deepEqual( Stem("magánéletemről"), "magánélet");});
test("magánéletet -> magánélet", function() {deepEqual( Stem("magánéletet"), "magánélet");});
test("magánéletnek -> magánélet", function() {deepEqual( Stem("magánéletnek"), "magánélet");});
test("magánéletről -> magánélet", function() {deepEqual( Stem("magánéletről"), "magánélet");});
test("magánélettől -> magánélet", function() {deepEqual( Stem("magánélettől"), "magánélet");});
test("magánéletére -> magánélet", function() {deepEqual( Stem("magánéletére"), "magánélet");});
test("magánéletük -> magánélet", function() {deepEqual( Stem("magánéletük"), "magánélet");});
test("magánérdekű -> magánérdekű", function() {deepEqual( Stem("magánérdekű"), "magánérdekű");});
test("magánöntődében -> magánöntőd", function() {deepEqual( Stem("magánöntődében"), "magánöntőd");});
test("magánügy -> magánügy", function() {deepEqual( Stem("magánügy"), "magánügy");});
test("magánügye -> magánügy", function() {deepEqual( Stem("magánügye"), "magánügy");});
test("magánüzemeltetők -> magánüzemeltető", function() {deepEqual( Stem("magánüzemeltetők"), "magánüzemeltető");});
test("mahagóniággyal -> mahagóniágy", function() {deepEqual( Stem("mahagóniággyal"), "mahagóniágy");});
test("mahagóniágy -> mahagóniágy", function() {deepEqual( Stem("mahagóniágy"), "mahagóniágy");});
test("mahagóniágyra -> mahagóniágy", function() {deepEqual( Stem("mahagóniágyra"), "mahagóniágy");});
test("maholnap -> maholnap", function() {deepEqual( Stem("maholnap"), "maholnap");});
test("mai -> mai", function() {deepEqual( Stem("mai"), "mai");});
test("maikor -> mai", function() {deepEqual( Stem("maikor"), "mai");});
test("mainál -> mai", function() {deepEqual( Stem("mainál"), "mai");});
test("mait -> mai", function() {deepEqual( Stem("mait"), "mai");});
test("maj -> maj", function() {deepEqual( Stem("maj"), "maj");});
test("majd -> maj", function() {deepEqual( Stem("majd"), "maj");});
test("majdan -> maj", function() {deepEqual( Stem("majdan"), "maj");});
test("majdani -> majdan", function() {deepEqual( Stem("majdani"), "majdan");});
test("majdcsak -> majdcs", function() {deepEqual( Stem("majdcsak"), "majdcs");});
test("majdhogynem -> majdhogyn", function() {deepEqual( Stem("majdhogynem"), "majdhogyn");});
test("majdnem -> majdn", function() {deepEqual( Stem("majdnem"), "majdn");});
test("majdpedig -> majdp", function() {deepEqual( Stem("majdpedig"), "majdp");});
test("majmok -> majm", function() {deepEqual( Stem("majmok"), "majm");});
test("majmokat -> majm", function() {deepEqual( Stem("majmokat"), "majm");});
test("majmokra -> majm", function() {deepEqual( Stem("majmokra"), "majm");});
test("majom -> maj", function() {deepEqual( Stem("majom"), "maj");});
test("majomcsecsemő -> majomcsecsemő", function() {deepEqual( Stem("majomcsecsemő"), "majomcsecsemő");});
test("majomemberei -> majomember", function() {deepEqual( Stem("majomemberei"), "majomember");});
test("majomszerűvé -> majomszerű", function() {deepEqual( Stem("majomszerűvé"), "majomszerű");});
test("major -> major", function() {deepEqual( Stem("major"), "major");});
test("majorban -> major", function() {deepEqual( Stem("majorban"), "major");});
test("majorok -> major", function() {deepEqual( Stem("majorok"), "major");});
test("majszoló -> majszoló", function() {deepEqual( Stem("majszoló"), "majszoló");});
test("majt -> maj", function() {deepEqual( Stem("majt"), "maj");});
test("majálisi -> majális", function() {deepEqual( Stem("majálisi"), "majális");});
test("majális -> majális", function() {deepEqual( Stem("majális"), "majális");});
test("majálisokat -> majális", function() {deepEqual( Stem("majálisokat"), "majális");});
test("majálisom -> majális", function() {deepEqual( Stem("majálisom"), "majális");});
test("majálison -> majális", function() {deepEqual( Stem("majálison"), "majális");});
test("majálisra -> majális", function() {deepEqual( Stem("majálisra"), "majális");});
test("majálisozni -> majálisozn", function() {deepEqual( Stem("majálisozni"), "majálisozn");});
test("makacs -> makacs", function() {deepEqual( Stem("makacs"), "makacs");});
test("makacskodott -> makacskodot", function() {deepEqual( Stem("makacskodott"), "makacskodot");});
test("makacsság -> makacsság", function() {deepEqual( Stem("makacsság"), "makacsság");});
test("makacsságán -> makacsság", function() {deepEqual( Stem("makacsságán"), "makacsság");});
test("makaót -> makaó", function() {deepEqual( Stem("makaót"), "makaó");});
test("makedón -> makedó", function() {deepEqual( Stem("makedón"), "makedó");});
test("maketteket -> makett", function() {deepEqual( Stem("maketteket"), "makett");});
test("makettekkel -> makett", function() {deepEqual( Stem("makettekkel"), "makett");});
test("maki -> mak", function() {deepEqual( Stem("maki"), "mak");});
test("makkegészségesen -> makkegészséges", function() {deepEqual( Stem("makkegészségesen"), "makkegészséges");});
test("makogni -> makogn", function() {deepEqual( Stem("makogni"), "makogn");});
test("makroelemzői -> makroelemző", function() {deepEqual( Stem("makroelemzői"), "makroelemző");});
test("makroelemzők -> makroelemző", function() {deepEqual( Stem("makroelemzők"), "makroelemző");});
test("makrogazdasággal -> makrogazdaság", function() {deepEqual( Stem("makrogazdasággal"), "makrogazdaság");});
test("makrogazdasági -> makrogazdaság", function() {deepEqual( Stem("makrogazdasági"), "makrogazdaság");});
test("makroérv -> makroérv", function() {deepEqual( Stem("makroérv"), "makroérv");});
test("makrókat -> makró", function() {deepEqual( Stem("makrókat"), "makró");});
test("makrót -> makró", function() {deepEqual( Stem("makrót"), "makró");});
test("makulátlan -> makulátl", function() {deepEqual( Stem("makulátlan"), "makulátl");});
test("malabari -> malabar", function() {deepEqual( Stem("malabari"), "malabar");});
test("malac -> malac", function() {deepEqual( Stem("malac"), "malac");});
test("malaca -> malac", function() {deepEqual( Stem("malaca"), "malac");});
test("malmok -> malm", function() {deepEqual( Stem("malmok"), "malm");});
test("malom -> mal", function() {deepEqual( Stem("malom"), "mal");});
test("malomban -> mal", function() {deepEqual( Stem("malomban"), "mal");});
test("malomkerék -> malomkere", function() {deepEqual( Stem("malomkerék"), "malomkere");});
test("malteresvödrök -> malteresvödr", function() {deepEqual( Stem("malteresvödrök"), "malteresvödr");});
test("malterral -> malter", function() {deepEqual( Stem("malterral"), "malter");});
test("maláji -> maláj", function() {deepEqual( Stem("maláji"), "maláj");});
test("maláj -> maláj", function() {deepEqual( Stem("maláj"), "maláj");});
test("malájt -> maláj", function() {deepEqual( Stem("malájt"), "maláj");});
test("maláriás -> maláriás", function() {deepEqual( Stem("maláriás"), "maláriás");});
test("maláriát -> malár", function() {deepEqual( Stem("maláriát"), "malár");});
test("mamainak -> mam", function() {deepEqual( Stem("mamainak"), "mam");});
test("mameluk -> mamel", function() {deepEqual( Stem("mameluk"), "mamel");});
test("mami -> mam", function() {deepEqual( Stem("mami"), "mam");});
test("mamutcég -> mamutcég", function() {deepEqual( Stem("mamutcég"), "mamutcég");});
test("mamutcégek -> mamutcég", function() {deepEqual( Stem("mamutcégek"), "mamutcég");});
test("mamutfenyőnek -> mamutfenyő", function() {deepEqual( Stem("mamutfenyőnek"), "mamutfenyő");});
test("mamutokéval -> mamut", function() {deepEqual( Stem("mamutokéval"), "mamut");});
test("mamutvállalkozások -> mamutvállalkozás", function() {deepEqual( Stem("mamutvállalkozások"), "mamutvállalkozás");});
test("mamája -> mamá", function() {deepEqual( Stem("mamája"), "mamá");});
test("mama -> mam", function() {deepEqual( Stem("mama"), "mam");});
test("mamájuk -> mama", function() {deepEqual( Stem("mamájuk"), "mama");});
test("mamájához -> mamá", function() {deepEqual( Stem("mamájához"), "mamá");});
test("mamáját -> mamá", function() {deepEqual( Stem("mamáját"), "mamá");});
test("mamám -> mama", function() {deepEqual( Stem("mamám"), "mama");});
test("mamámat -> mama", function() {deepEqual( Stem("mamámat"), "mama");});
test("mamámmal -> mama", function() {deepEqual( Stem("mamámmal"), "mama");});
test("mamámnak -> mama", function() {deepEqual( Stem("mamámnak"), "mama");});
test("mamámnál -> mama", function() {deepEqual( Stem("mamámnál"), "mama");});
test("mamámról -> mama", function() {deepEqual( Stem("mamámról"), "mama");});
test("mamámék -> mamáme", function() {deepEqual( Stem("mamámék"), "mamáme");});
test("mamáméknak -> mamáme", function() {deepEqual( Stem("mamáméknak"), "mamáme");});
test("mamánkat -> mama", function() {deepEqual( Stem("mamánkat"), "mama");});
test("mamától -> mam", function() {deepEqual( Stem("mamától"), "mam");});
test("mamával -> mam", function() {deepEqual( Stem("mamával"), "mam");});
test("mamáékhoz -> mamáe", function() {deepEqual( Stem("mamáékhoz"), "mamáe");});
test("mamáékkal -> mamáe", function() {deepEqual( Stem("mamáékkal"), "mamáe");});
test("mamáéknak -> mamáe", function() {deepEqual( Stem("mamáéknak"), "mamáe");});
test("manager -> manager", function() {deepEqual( Stem("manager"), "manager");});
test("managerbe -> manager", function() {deepEqual( Stem("managerbe"), "manager");});
test("managerként -> manager", function() {deepEqual( Stem("managerként"), "manager");});
test("managerrel -> manager", function() {deepEqual( Stem("managerrel"), "manager");});
test("manapság -> manapság", function() {deepEqual( Stem("manapság"), "manapság");});
test("manchesteri -> manchester", function() {deepEqual( Stem("manchesteri"), "manchester");});
test("mancsa -> mancs", function() {deepEqual( Stem("mancsa"), "mancs");});
test("mancsaival -> mancs", function() {deepEqual( Stem("mancsaival"), "mancs");});
test("mandátuma -> mandátum", function() {deepEqual( Stem("mandátuma"), "mandátum");});
test("mandátumhoz -> mandátu", function() {deepEqual( Stem("mandátumhoz"), "mandátu");});
test("mandátumának -> mandátum", function() {deepEqual( Stem("mandátumának"), "mandátum");});
test("mandátumáról -> mandátum", function() {deepEqual( Stem("mandátumáról"), "mandátum");});
test("mandátumával -> mandátum", function() {deepEqual( Stem("mandátumával"), "mandátum");});
test("manifesztuma -> manifesztum", function() {deepEqual( Stem("manifesztuma"), "manifesztum");});
test("manifesztálódik -> manifesztálód", function() {deepEqual( Stem("manifesztálódik"), "manifesztálód");});
test("manifesztálódási -> manifesztálódás", function() {deepEqual( Stem("manifesztálódási"), "manifesztálódás");});
test("manikűrös -> manikűrös", function() {deepEqual( Stem("manikűrös"), "manikűrös");});
test("manikűrösnő -> manikűrösnő", function() {deepEqual( Stem("manikűrösnő"), "manikűrösnő");});
test("manikűrösnőről -> manikűrösnő", function() {deepEqual( Stem("manikűrösnőről"), "manikűrösnő");});
test("manikűröztetni -> manikűröztetn", function() {deepEqual( Stem("manikűröztetni"), "manikűröztetn");});
test("manillagyökér -> manillagyökér", function() {deepEqual( Stem("manillagyökér"), "manillagyökér");});
test("manipuláció -> manipuláció", function() {deepEqual( Stem("manipuláció"), "manipuláció");});
test("manipulációs -> manipulációs", function() {deepEqual( Stem("manipulációs"), "manipulációs");});
test("manipulálhatók -> manipulálható", function() {deepEqual( Stem("manipulálhatók"), "manipulálható");});
test("manipulálni -> manipuláln", function() {deepEqual( Stem("manipulálni"), "manipuláln");});
test("manipulált -> manipulál", function() {deepEqual( Stem("manipulált"), "manipulál");});
test("manipuláltságát -> manipuláltság", function() {deepEqual( Stem("manipuláltságát"), "manipuláltság");});
test("manufakturális -> manufakturális", function() {deepEqual( Stem("manufakturális"), "manufakturális");});
test("manuális -> manuális", function() {deepEqual( Stem("manuális"), "manuális");});
test("manuálisan -> manuális", function() {deepEqual( Stem("manuálisan"), "manuális");});
test("manőver -> manőver", function() {deepEqual( Stem("manőver"), "manőver");});
test("manőverek -> manőver", function() {deepEqual( Stem("manőverek"), "manőver");});
test("manőverrel -> manőver", function() {deepEqual( Stem("manőverrel"), "manőver");});
test("manővert -> manőver", function() {deepEqual( Stem("manővert"), "manőver");});
test("manőverező -> manőverező", function() {deepEqual( Stem("manőverező"), "manőverező");});
test("manöken -> man", function() {deepEqual( Stem("manöken"), "man");});
test("manökenek -> man", function() {deepEqual( Stem("manökenek"), "man");});
test("manökent -> manöken", function() {deepEqual( Stem("manökent"), "manöken");});
test("mappaablakban -> mappaabl", function() {deepEqual( Stem("mappaablakban"), "mappaabl");});
test("mappaikonok -> mappaikon", function() {deepEqual( Stem("mappaikonok"), "mappaikon");});
test("mappastruktúrában -> mappastruktúr", function() {deepEqual( Stem("mappastruktúrában"), "mappastruktúr");});
test("mappastruktúrája -> mappastruktúrá", function() {deepEqual( Stem("mappastruktúrája"), "mappastruktúrá");});
test("mappaváltás -> mappaváltás", function() {deepEqual( Stem("mappaváltás"), "mappaváltás");});
test("mappába -> mapp", function() {deepEqual( Stem("mappába"), "mapp");});
test("mappa -> mapp", function() {deepEqual( Stem("mappa"), "mapp");});
test("mappában -> mapp", function() {deepEqual( Stem("mappában"), "mapp");});
test("mappából -> mapp", function() {deepEqual( Stem("mappából"), "mapp");});
test("mappához -> mapp", function() {deepEqual( Stem("mappához"), "mapp");});
test("mappája -> mappá", function() {deepEqual( Stem("mappája"), "mappá");});
test("mappájában -> mappá", function() {deepEqual( Stem("mappájában"), "mappá");});
test("mappájának -> mappá", function() {deepEqual( Stem("mappájának"), "mappá");});
test("mappáját -> mappá", function() {deepEqual( Stem("mappáját"), "mappá");});
test("mappák -> mappa", function() {deepEqual( Stem("mappák"), "mappa");});
test("mappákat -> mappa", function() {deepEqual( Stem("mappákat"), "mappa");});
test("mappákban -> mappa", function() {deepEqual( Stem("mappákban"), "mappa");});
test("mappákhoz -> mappa", function() {deepEqual( Stem("mappákhoz"), "mappa");});
test("mappákkal -> mappa", function() {deepEqual( Stem("mappákkal"), "mappa");});
test("mappáké -> mapp", function() {deepEqual( Stem("mappáké"), "mapp");});
test("mappára -> mapp", function() {deepEqual( Stem("mappára"), "mapp");});
test("mappára -> mapp", function() {deepEqual( Stem("mappára"), "mapp");});
test("mappát -> mapp", function() {deepEqual( Stem("mappát"), "mapp");});
test("mappával -> mapp", function() {deepEqual( Stem("mappával"), "mapp");});
test("maradandó -> maradandó", function() {deepEqual( Stem("maradandó"), "maradandó");});
test("maradandónak -> maradandó", function() {deepEqual( Stem("maradandónak"), "maradandó");});
test("maradandóvá -> maradandó", function() {deepEqual( Stem("maradandóvá"), "maradandó");});
test("maradandóság -> maradandóság", function() {deepEqual( Stem("maradandóság"), "maradandóság");});
test("maradandósága -> maradandóság", function() {deepEqual( Stem("maradandósága"), "maradandóság");});
test("maradhassak -> maradhass", function() {deepEqual( Stem("maradhassak"), "maradhass");});
test("maradhassanak -> maradhass", function() {deepEqual( Stem("maradhassanak"), "maradhass");});
test("maradhasson -> maradhass", function() {deepEqual( Stem("maradhasson"), "maradhass");});
test("maradhat -> maradh", function() {deepEqual( Stem("maradhat"), "maradh");});
test("maradhatna -> maradhatn", function() {deepEqual( Stem("maradhatna"), "maradhatn");});
test("maradhatnak -> maradhat", function() {deepEqual( Stem("maradhatnak"), "maradhat");});
test("maradhatok -> maradhat", function() {deepEqual( Stem("maradhatok"), "maradhat");});
test("maradhatott -> maradhatot", function() {deepEqual( Stem("maradhatott"), "maradhatot");});
test("maradhattam -> maradhatt", function() {deepEqual( Stem("maradhattam"), "maradhatt");});
test("maradhattunk -> maradhatt", function() {deepEqual( Stem("maradhattunk"), "maradhatt");});
test("maradhatunk -> maradhat", function() {deepEqual( Stem("maradhatunk"), "maradhat");});
test("maradi -> marad", function() {deepEqual( Stem("maradi"), "marad");});
test("maradiak -> maradi", function() {deepEqual( Stem("maradiak"), "maradi");});
test("maradj -> maradj", function() {deepEqual( Stem("maradj"), "maradj");});
test("maradjak -> maradj", function() {deepEqual( Stem("maradjak"), "maradj");});
test("marad -> mar", function() {deepEqual( Stem("marad"), "mar");});
test("maradjanak -> marad", function() {deepEqual( Stem("maradjanak"), "marad");});
test("maradjon -> maradj", function() {deepEqual( Stem("maradjon"), "maradj");});
test("maradjunk -> maradj", function() {deepEqual( Stem("maradjunk"), "maradj");});
test("maradna -> maradn", function() {deepEqual( Stem("maradna"), "maradn");});
test("maradnak -> mar", function() {deepEqual( Stem("maradnak"), "mar");});
test("maradni -> maradn", function() {deepEqual( Stem("maradni"), "maradn");});
test("maradnia -> maradn", function() {deepEqual( Stem("maradnia"), "maradn");});
test("maradniuk -> maradn", function() {deepEqual( Stem("maradniuk"), "maradn");});
test("maradnod -> maradn", function() {deepEqual( Stem("maradnod"), "maradn");});
test("maradnom -> maradn", function() {deepEqual( Stem("maradnom"), "maradn");});
test("maradnának -> maradn", function() {deepEqual( Stem("maradnának"), "maradn");});
test("maradnék -> maradne", function() {deepEqual( Stem("maradnék"), "maradne");});
test("maradok -> marad", function() {deepEqual( Stem("maradok"), "marad");});
test("maradsz -> maradsz", function() {deepEqual( Stem("maradsz"), "maradsz");});
test("maradtak -> maradt", function() {deepEqual( Stem("maradtak"), "maradt");});
test("maradtam -> maradt", function() {deepEqual( Stem("maradtam"), "maradt");});
test("maradtunk -> maradt", function() {deepEqual( Stem("maradtunk"), "maradt");});
test("maradunk -> marad", function() {deepEqual( Stem("maradunk"), "marad");});
test("maradottak -> maradott", function() {deepEqual( Stem("maradottak"), "maradott");});
test("maradt -> mar", function() {deepEqual( Stem("maradt"), "mar");});
test("maradva -> maradv", function() {deepEqual( Stem("maradva"), "maradv");});
test("maradványa -> maradvány", function() {deepEqual( Stem("maradványa"), "maradvány");});
test("maradványai -> maradvány", function() {deepEqual( Stem("maradványai"), "maradvány");});
test("maradványainak -> maradvány", function() {deepEqual( Stem("maradványainak"), "maradvány");});
test("maradványait -> maradvány", function() {deepEqual( Stem("maradványait"), "maradvány");});
test("maradványok -> maradvány", function() {deepEqual( Stem("maradványok"), "maradvány");});
test("maradványát -> maradvány", function() {deepEqual( Stem("maradványát"), "maradvány");});
test("maradás -> maradás", function() {deepEqual( Stem("maradás"), "maradás");});
test("maradása -> maradás", function() {deepEqual( Stem("maradása"), "maradás");});
test("maradáshoz -> maradás", function() {deepEqual( Stem("maradáshoz"), "maradás");});
test("maradásnál -> maradás", function() {deepEqual( Stem("maradásnál"), "maradás");});
test("maradásra -> maradás", function() {deepEqual( Stem("maradásra"), "maradás");});
test("maradék -> marade", function() {deepEqual( Stem("maradék"), "marade");});
test("maradékot -> marade", function() {deepEqual( Stem("maradékot"), "marade");});
test("maradéktalan -> maradéktal", function() {deepEqual( Stem("maradéktalan"), "maradéktal");});
test("maradéktalanul -> maradéktalan", function() {deepEqual( Stem("maradéktalanul"), "maradéktalan");});
test("maradó -> maradó", function() {deepEqual( Stem("maradó"), "maradó");});
test("maradók -> maradó", function() {deepEqual( Stem("maradók"), "maradó");});
test("maraschinót -> maraschinó", function() {deepEqual( Stem("maraschinót"), "maraschinó");});
test("marasztalná -> marasztalna", function() {deepEqual( Stem("marasztalná"), "marasztalna");});
test("marasztalta -> marasztalt", function() {deepEqual( Stem("marasztalta"), "marasztalt");});
test("marasztaltak -> marasztalt", function() {deepEqual( Stem("marasztaltak"), "marasztalt");});
test("marasztalás -> marasztalás", function() {deepEqual( Stem("marasztalás"), "marasztalás");});
test("marasztaló -> marasztaló", function() {deepEqual( Stem("marasztaló"), "marasztaló");});
test("maratoni -> maraton", function() {deepEqual( Stem("maratoni"), "maraton");});
test("maratt -> marat", function() {deepEqual( Stem("maratt"), "marat");});
test("marcali -> marcal", function() {deepEqual( Stem("marcali"), "marcal");});
test("marcangoló -> marcangoló", function() {deepEqual( Stem("marcangoló"), "marcangoló");});
test("marcangolóan -> marcangoló", function() {deepEqual( Stem("marcangolóan"), "marcangoló");});
test("marcona -> marcon", function() {deepEqual( Stem("marcona"), "marcon");});
test("margarinnal -> margar", function() {deepEqual( Stem("margarinnal"), "margar");});
test("margarint -> margarin", function() {deepEqual( Stem("margarint"), "margarin");});
test("margó -> margó", function() {deepEqual( Stem("margó"), "margó");});
test("marhacsapásra -> marhacsapás", function() {deepEqual( Stem("marhacsapásra"), "marhacsapás");});
test("marhaeledelt -> marhaeledel", function() {deepEqual( Stem("marhaeledelt"), "marhaeledel");});
test("marhakonzerv -> marhakonzerv", function() {deepEqual( Stem("marhakonzerv"), "marhakonzerv");});
test("marhaságok -> marhaság", function() {deepEqual( Stem("marhaságok"), "marhaság");});
test("marhaságot -> marhaság", function() {deepEqual( Stem("marhaságot"), "marhaság");});
test("marhának -> marh", function() {deepEqual( Stem("marhának"), "marh");});
test("marha -> marh", function() {deepEqual( Stem("marha"), "marh");});
test("marhát -> marh", function() {deepEqual( Stem("marhát"), "marh");});
test("marihuánát -> marihuán", function() {deepEqual( Stem("marihuánát"), "marihuán");});
test("marinírozott -> marinírozot", function() {deepEqual( Stem("marinírozott"), "marinírozot");});
test("marketingakcióban -> marketingakció", function() {deepEqual( Stem("marketingakcióban"), "marketingakció");});
test("marketingalelnöke -> marketingaleln", function() {deepEqual( Stem("marketingalelnöke"), "marketingaleln");});
test("marketingben -> marketing", function() {deepEqual( Stem("marketingben"), "marketing");});
test("marketing -> marketing", function() {deepEqual( Stem("marketing"), "marketing");});
test("marketinget -> marketing", function() {deepEqual( Stem("marketinget"), "marketing");});
test("marketinggel -> marketing", function() {deepEqual( Stem("marketinggel"), "marketing");});
test("marketingig -> marketing", function() {deepEqual( Stem("marketingig"), "marketing");});
test("marketingjébe -> marketing", function() {deepEqual( Stem("marketingjébe"), "marketing");});
test("marketinges -> marketinges", function() {deepEqual( Stem("marketinges"), "marketinges");});
test("marketingeseinek -> marketinges", function() {deepEqual( Stem("marketingeseinek"), "marketinges");});
test("marketingesek -> marketinges", function() {deepEqual( Stem("marketingesek"), "marketinges");});
test("marketingeseket -> marketinges", function() {deepEqual( Stem("marketingeseket"), "marketinges");});
test("marketingeszközöket -> marketingeszköz", function() {deepEqual( Stem("marketingeszközöket"), "marketingeszköz");});
test("marketingfeladatok -> marketingfeladat", function() {deepEqual( Stem("marketingfeladatok"), "marketingfeladat");});
test("marketingfogás -> marketingfogás", function() {deepEqual( Stem("marketingfogás"), "marketingfogás");});
test("marketingfőnökök -> marketingfőnök", function() {deepEqual( Stem("marketingfőnökök"), "marketingfőnök");});
test("marketingigazgatója -> marketingigazgató", function() {deepEqual( Stem("marketingigazgatója"), "marketingigazgató");});
test("marketingigazgatójával -> marketingigazgató", function() {deepEqual( Stem("marketingigazgatójával"), "marketingigazgató");});
test("marketingkampányaihoz -> marketingkampány", function() {deepEqual( Stem("marketingkampányaihoz"), "marketingkampány");});
test("marketingkampányokat -> marketingkampány", function() {deepEqual( Stem("marketingkampányokat"), "marketingkampány");});
test("marketingkiadásban -> marketingkiadás", function() {deepEqual( Stem("marketingkiadásban"), "marketingkiadás");});
test("marketingkiadások -> marketingkiadás", function() {deepEqual( Stem("marketingkiadások"), "marketingkiadás");});
test("marketingköltségek -> marketingköltség", function() {deepEqual( Stem("marketingköltségek"), "marketingköltség");});
test("marketinglehetőségeket -> marketinglehetőség", function() {deepEqual( Stem("marketinglehetőségeket"), "marketinglehetőség");});
test("marketingosztályok -> marketingosztály", function() {deepEqual( Stem("marketingosztályok"), "marketingosztály");});
test("marketingpiac -> marketingpiac", function() {deepEqual( Stem("marketingpiac"), "marketingpiac");});
test("marketingprofesszora -> marketingprofessz", function() {deepEqual( Stem("marketingprofesszora"), "marketingprofessz");});
test("marketingtevékenységet -> marketingtevékenység", function() {deepEqual( Stem("marketingtevékenységet"), "marketingtevékenység");});
test("marketingtevékenységre -> marketingtevékenység", function() {deepEqual( Stem("marketingtevékenységre"), "marketingtevékenység");});
test("marketingtényező -> marketingtényező", function() {deepEqual( Stem("marketingtényező"), "marketingtényező");});
test("markol -> markol", function() {deepEqual( Stem("markol"), "markol");});
test("markolná -> markolna", function() {deepEqual( Stem("markolná"), "markolna");});
test("markoltam -> markolt", function() {deepEqual( Stem("markoltam"), "markolt");});
test("markolászta -> markolászt", function() {deepEqual( Stem("markolászta"), "markolászt");});
test("markolászva -> markolászv", function() {deepEqual( Stem("markolászva"), "markolászv");});
test("markáns -> markáns", function() {deepEqual( Stem("markáns"), "markáns");});
test("markánssá -> markáns", function() {deepEqual( Stem("markánssá"), "markáns");});
test("markával -> mar", function() {deepEqual( Stem("markával"), "mar");});
test("markába -> mar", function() {deepEqual( Stem("markába"), "mar");});
test("markában -> mar", function() {deepEqual( Stem("markában"), "mar");});
test("markának -> mar", function() {deepEqual( Stem("markának"), "mar");});
test("marok -> mar", function() {deepEqual( Stem("marok"), "mar");});
test("marka -> mar", function() {deepEqual( Stem("marka"), "mar");});
test("markomat -> mar", function() {deepEqual( Stem("markomat"), "mar");});
test("maroknyi -> marokny", function() {deepEqual( Stem("maroknyi"), "marokny");});
test("marokszámra -> maroksza", function() {deepEqual( Stem("marokszámra"), "maroksza");});
test("marosvásárhelyi -> marosvásárhely", function() {deepEqual( Stem("marosvásárhelyi"), "marosvásárhely");});
test("marsall -> marsall", function() {deepEqual( Stem("marsall"), "marsall");});
test("marsallja -> marsall", function() {deepEqual( Stem("marsallja"), "marsall");});
test("marsallnak -> marsall", function() {deepEqual( Stem("marsallnak"), "marsall");});
test("marseille-i -> marseille-", function() {deepEqual( Stem("marseille-i"), "marseille-");});
test("marsel -> marsel", function() {deepEqual( Stem("marsel"), "marsel");});
test("mart -> mar", function() {deepEqual( Stem("mart"), "mar");});
test("marta -> mart", function() {deepEqual( Stem("marta"), "mart");});
test("marták -> marta", function() {deepEqual( Stem("marták"), "marta");});
test("martok -> mart", function() {deepEqual( Stem("martok"), "mart");});
test("martinit -> martin", function() {deepEqual( Stem("martinit"), "martin");});
test("martonvásári -> martonvásár", function() {deepEqual( Stem("martonvásári"), "martonvásár");});
test("marxista-leninista -> marxista-leninist", function() {deepEqual( Stem("marxista-leninista"), "marxista-leninist");});
test("marxistát -> marxist", function() {deepEqual( Stem("marxistát"), "marxist");});
test("marxista -> marxist", function() {deepEqual( Stem("marxista"), "marxist");});
test("marxizmusig -> marxizmus", function() {deepEqual( Stem("marxizmusig"), "marxizmus");});
test("marylandi -> maryland", function() {deepEqual( Stem("marylandi"), "maryland");});
test("marékkal -> mare", function() {deepEqual( Stem("marékkal"), "mare");});
test("marét -> mar", function() {deepEqual( Stem("marét"), "mar");});
test("maró -> maró", function() {deepEqual( Stem("maró"), "maró");});
test("marógép -> marógép", function() {deepEqual( Stem("marógép"), "marógép");});
test("masina -> masin", function() {deepEqual( Stem("masina"), "masin");});
test("masinából -> masin", function() {deepEqual( Stem("masinából"), "masin");});
test("masinájával -> masiná", function() {deepEqual( Stem("masinájával"), "masiná");});
test("masinák -> masina", function() {deepEqual( Stem("masinák"), "masina");});
test("masinákkal -> masina", function() {deepEqual( Stem("masinákkal"), "masina");});
test("masinát -> masin", function() {deepEqual( Stem("masinát"), "masin");});
test("masinéria -> masinér", function() {deepEqual( Stem("masinéria"), "masinér");});
test("mask -> mas", function() {deepEqual( Stem("mask"), "mas");});
test("maslival -> masl", function() {deepEqual( Stem("maslival"), "masl");});
test("masnik -> masn", function() {deepEqual( Stem("masnik"), "masn");});
test("massza -> massz", function() {deepEqual( Stem("massza"), "massz");});
test("masszírozni -> masszírozn", function() {deepEqual( Stem("masszírozni"), "masszírozn");});
test("masszív -> masszív", function() {deepEqual( Stem("masszív"), "masszív");});
test("maszek -> masz", function() {deepEqual( Stem("maszek"), "masz");});
test("maszekok -> maszek", function() {deepEqual( Stem("maszekok"), "maszek");});
test("maszk -> masz", function() {deepEqual( Stem("maszk"), "masz");});
test("maszkban -> masz", function() {deepEqual( Stem("maszkban"), "masz");});
test("maszkkal -> masz", function() {deepEqual( Stem("maszkkal"), "masz");});
test("maszknak -> masz", function() {deepEqual( Stem("maszknak"), "masz");});
test("maszkokon -> maszk", function() {deepEqual( Stem("maszkokon"), "maszk");});
test("maszkot -> masz", function() {deepEqual( Stem("maszkot"), "masz");});
test("maszkszerű -> maszkszerű", function() {deepEqual( Stem("maszkszerű"), "maszkszerű");});
test("maszkírozva -> maszkírozv", function() {deepEqual( Stem("maszkírozva"), "maszkírozv");});
test("masztodonokéval -> masztodon", function() {deepEqual( Stem("masztodonokéval"), "masztodon");});
test("masírozott -> masírozot", function() {deepEqual( Stem("masírozott"), "masírozot");});
test("masíroztak -> masírozt", function() {deepEqual( Stem("masíroztak"), "masírozt");});
test("matek -> mat", function() {deepEqual( Stem("matek"), "mat");});
test("matekhoz -> mat", function() {deepEqual( Stem("matekhoz"), "mat");});
test("matekon -> mat", function() {deepEqual( Stem("matekon"), "mat");});
test("matekot -> mat", function() {deepEqual( Stem("matekot"), "mat");});
test("matekos -> matekos", function() {deepEqual( Stem("matekos"), "matekos");});
test("matekost -> matekos", function() {deepEqual( Stem("matekost"), "matekos");});
test("matekozott -> matekozot", function() {deepEqual( Stem("matekozott"), "matekozot");});
test("matekórán -> matekór", function() {deepEqual( Stem("matekórán"), "matekór");});
test("matekóránk -> matekóra", function() {deepEqual( Stem("matekóránk"), "matekóra");});
test("matematikai -> matemati", function() {deepEqual( Stem("matematikai"), "matemati");});
test("matematikus-fizikus -> matematikus-fizikus", function() {deepEqual( Stem("matematikus-fizikus"), "matematikus-fizikus");});
test("matematikusaink -> matematikus", function() {deepEqual( Stem("matematikusaink"), "matematikus");});
test("matematikusok -> matematikus", function() {deepEqual( Stem("matematikusok"), "matematikus");});
test("matematikus -> matematikus", function() {deepEqual( Stem("matematikus"), "matematikus");});
test("matematika -> matemat", function() {deepEqual( Stem("matematika"), "matemat");});
test("matematikából -> matemat", function() {deepEqual( Stem("matematikából"), "matemat");});
test("matematikánál -> matemat", function() {deepEqual( Stem("matematikánál"), "matemat");});
test("matematikára -> matemat", function() {deepEqual( Stem("matematikára"), "matemat");});
test("matematikáról -> matemat", function() {deepEqual( Stem("matematikáról"), "matemat");});
test("matematikát -> matemat", function() {deepEqual( Stem("matematikát"), "matemat");});
test("matematizálás -> matematizálás", function() {deepEqual( Stem("matematizálás"), "matematizálás");});
test("materben -> mater", function() {deepEqual( Stem("materben"), "mater");});
test("materiális -> materiális", function() {deepEqual( Stem("materiális"), "materiális");});
test("matrac -> matrac", function() {deepEqual( Stem("matrac"), "matrac");});
test("matracot -> matrac", function() {deepEqual( Stem("matracot"), "matrac");});
test("matracán -> matrac", function() {deepEqual( Stem("matracán"), "matrac");});
test("matricához -> matric", function() {deepEqual( Stem("matricához"), "matric");});
test("matricák -> matrica", function() {deepEqual( Stem("matricák"), "matrica");});
test("matricákat -> matrica", function() {deepEqual( Stem("matricákat"), "matrica");});
test("matricára -> matric", function() {deepEqual( Stem("matricára"), "matric");});
test("matrószhoz -> matrósz", function() {deepEqual( Stem("matrószhoz"), "matrósz");});
test("matrózblúz -> matrózblúz", function() {deepEqual( Stem("matrózblúz"), "matrózblúz");});
test("matróz -> matróz", function() {deepEqual( Stem("matróz"), "matróz");});
test("matrózban -> matróz", function() {deepEqual( Stem("matrózban"), "matróz");});
test("matrózok -> matróz", function() {deepEqual( Stem("matrózok"), "matróz");});
test("matrózokat -> matróz", function() {deepEqual( Stem("matrózokat"), "matróz");});
test("matrózokhoz -> matróz", function() {deepEqual( Stem("matrózokhoz"), "matróz");});
test("matrózoknak -> matróz", function() {deepEqual( Stem("matrózoknak"), "matróz");});
test("matrózt -> matróz", function() {deepEqual( Stem("matrózt"), "matróz");});
test("matrózostul -> matrózost", function() {deepEqual( Stem("matrózostul"), "matrózost");});
test("matrózpipát -> matrózpip", function() {deepEqual( Stem("matrózpipát"), "matrózpip");});
test("matrózsapkája -> matrózsapká", function() {deepEqual( Stem("matrózsapkája"), "matrózsapká");});
test("matróztemetéshez -> matróztemetés", function() {deepEqual( Stem("matróztemetéshez"), "matróztemetés");});
test("matt -> mat", function() {deepEqual( Stem("matt"), "mat");});
test("mattot -> matt", function() {deepEqual( Stem("mattot"), "matt");});
test("matutinum -> matutinu", function() {deepEqual( Stem("matutinum"), "matutinu");});
test("matuzsálemi -> matuzsálem", function() {deepEqual( Stem("matuzsálemi"), "matuzsálem");});
test("matyó -> matyó", function() {deepEqual( Stem("matyó"), "matyó");});
test("matyószobánkban -> matyószoba", function() {deepEqual( Stem("matyószobánkban"), "matyószoba");});
test("mausepadot -> mausep", function() {deepEqual( Stem("mausepadot"), "mausep");});
test("mavrodaphnét -> mavrodaphn", function() {deepEqual( Stem("mavrodaphnét"), "mavrodaphn");});
test("max -> max", function() {deepEqual( Stem("max"), "max");});
test("maximum -> maximu", function() {deepEqual( Stem("maximum"), "maximu");});
test("maximumban -> maximu", function() {deepEqual( Stem("maximumban"), "maximu");});
test("maximumot -> maximu", function() {deepEqual( Stem("maximumot"), "maximu");});
test("maximumában -> maximum", function() {deepEqual( Stem("maximumában"), "maximum");});
test("maximumát -> maximum", function() {deepEqual( Stem("maximumát"), "maximum");});
test("maximumával -> maximum", function() {deepEqual( Stem("maximumával"), "maximum");});
test("maximumértéke -> maximumérte", function() {deepEqual( Stem("maximumértéke"), "maximumérte");});
test("maximálható -> maximálható", function() {deepEqual( Stem("maximálható"), "maximálható");});
test("maximális -> maximális", function() {deepEqual( Stem("maximális"), "maximális");});
test("maximálisan -> maximális", function() {deepEqual( Stem("maximálisan"), "maximális");});
test("maximálisat -> maximális", function() {deepEqual( Stem("maximálisat"), "maximális");});
test("maximált -> maximál", function() {deepEqual( Stem("maximált"), "maximál");});
test("maximálta -> maximált", function() {deepEqual( Stem("maximálta"), "maximált");});
test("maximálták -> maximálta", function() {deepEqual( Stem("maximálták"), "maximálta");});
test("maximálja -> maximál", function() {deepEqual( Stem("maximálja"), "maximál");});
test("maximálva -> maximálv", function() {deepEqual( Stem("maximálva"), "maximálv");});
test("maximálását -> maximálás", function() {deepEqual( Stem("maximálását"), "maximálás");});
test("maximáló -> maximáló", function() {deepEqual( Stem("maximáló"), "maximáló");});
test("mazsorett -> mazsoret", function() {deepEqual( Stem("mazsorett"), "mazsoret");});
test("maóizmuson -> maóizmus", function() {deepEqual( Stem("maóizmuson"), "maóizmus");});
test("meccs -> meccs", function() {deepEqual( Stem("meccs"), "meccs");});
test("meccseikre -> meccs", function() {deepEqual( Stem("meccseikre"), "meccs");});
test("meccseit -> meccs", function() {deepEqual( Stem("meccseit"), "meccs");});
test("meccsek -> meccs", function() {deepEqual( Stem("meccsek"), "meccs");});
test("meccseket -> meccs", function() {deepEqual( Stem("meccseket"), "meccs");});
test("meccsen -> meccs", function() {deepEqual( Stem("meccsen"), "meccs");});
test("meccset -> meccs", function() {deepEqual( Stem("meccset"), "meccs");});
test("meccsnek -> meccs", function() {deepEqual( Stem("meccsnek"), "meccs");});
test("meccsre -> meccs", function() {deepEqual( Stem("meccsre"), "meccs");});
test("meccsről -> meccs", function() {deepEqual( Stem("meccsről"), "meccs");});
test("meccsére -> meccs", function() {deepEqual( Stem("meccsére"), "meccs");});
test("meccsünk -> meccs", function() {deepEqual( Stem("meccsünk"), "meccs");});
test("meccsünket -> meccs", function() {deepEqual( Stem("meccsünket"), "meccs");});
test("mechanikai -> mechani", function() {deepEqual( Stem("mechanikai"), "mechani");});
test("mechanikailag -> mechanikailag", function() {deepEqual( Stem("mechanikailag"), "mechanikailag");});
test("mechanikus -> mechanikus", function() {deepEqual( Stem("mechanikus"), "mechanikus");});
test("mechanikáját -> mechaniká", function() {deepEqual( Stem("mechanikáját"), "mechaniká");});
test("mechanika -> mechan", function() {deepEqual( Stem("mechanika"), "mechan");});
test("mechanizmus -> mechanizmus", function() {deepEqual( Stem("mechanizmus"), "mechanizmus");});
test("mechanizmusa -> mechanizmus", function() {deepEqual( Stem("mechanizmusa"), "mechanizmus");});
test("mechanizmusaik -> mechanizmus", function() {deepEqual( Stem("mechanizmusaik"), "mechanizmus");});
test("mechanizmusok -> mechanizmus", function() {deepEqual( Stem("mechanizmusok"), "mechanizmus");});
test("mechanizmusokat -> mechanizmus", function() {deepEqual( Stem("mechanizmusokat"), "mechanizmus");});
test("mechanizmusoknak -> mechanizmus", function() {deepEqual( Stem("mechanizmusoknak"), "mechanizmus");});
test("mechanizmuson -> mechanizmus", function() {deepEqual( Stem("mechanizmuson"), "mechanizmus");});
test("mechanizmusának -> mechanizmus", function() {deepEqual( Stem("mechanizmusának"), "mechanizmus");});
test("mechanizmusát -> mechanizmus", function() {deepEqual( Stem("mechanizmusát"), "mechanizmus");});
test("mechatronikus -> mechatronikus", function() {deepEqual( Stem("mechatronikus"), "mechatronikus");});
test("mecénását -> mecénás", function() {deepEqual( Stem("mecénását"), "mecénás");});
test("medaliont -> medalion", function() {deepEqual( Stem("medaliont"), "medalion");});
test("meddig -> med", function() {deepEqual( Stem("meddig"), "med");});
test("medencecsontját -> medencecsont", function() {deepEqual( Stem("medencecsontját"), "medencecsont");});
test("medencecsonttörést -> medencecsonttörés", function() {deepEqual( Stem("medencecsonttörést"), "medencecsonttörés");});
test("medence -> medenc", function() {deepEqual( Stem("medence"), "medenc");});
test("medencébe -> medenc", function() {deepEqual( Stem("medencébe"), "medenc");});
test("medencében -> medenc", function() {deepEqual( Stem("medencében"), "medenc");});
test("medencéből -> medenc", function() {deepEqual( Stem("medencéből"), "medenc");});
test("medencéjében -> medencé", function() {deepEqual( Stem("medencéjében"), "medencé");});
test("medencét -> medenc", function() {deepEqual( Stem("medencét"), "medenc");});
test("medencével -> medenc", function() {deepEqual( Stem("medencével"), "medenc");});
test("meder -> meder", function() {deepEqual( Stem("meder"), "meder");});
test("mederbe -> meder", function() {deepEqual( Stem("mederbe"), "meder");});
test("mederben -> meder", function() {deepEqual( Stem("mederben"), "meder");});
test("medret -> medr", function() {deepEqual( Stem("medret"), "medr");});
test("medgyesi -> medgyes", function() {deepEqual( Stem("medgyesi"), "medgyes");});
test("medicinába -> medicin", function() {deepEqual( Stem("medicinába"), "medicin");});
test("medicinák -> medicina", function() {deepEqual( Stem("medicinák"), "medicina");});
test("medicinákra -> medicina", function() {deepEqual( Stem("medicinákra"), "medicina");});
test("medicinát -> medicin", function() {deepEqual( Stem("medicinát"), "medicin");});
test("mediterrán -> mediterr", function() {deepEqual( Stem("mediterrán"), "mediterr");});
test("mediterránabb -> mediterránabb", function() {deepEqual( Stem("mediterránabb"), "mediterránabb");});
test("mediterránoknak -> mediterrán", function() {deepEqual( Stem("mediterránoknak"), "mediterrán");});
test("meditációt -> meditáció", function() {deepEqual( Stem("meditációt"), "meditáció");});
test("meditálva -> meditálv", function() {deepEqual( Stem("meditálva"), "meditálv");});
test("medve -> medv", function() {deepEqual( Stem("medve"), "medv");});
test("medvéket -> medve", function() {deepEqual( Stem("medvéket"), "medve");});
test("medvemenhely -> medvemenhely", function() {deepEqual( Stem("medvemenhely"), "medvemenhely");});
test("medveveszélyre -> medveveszély", function() {deepEqual( Stem("medveveszélyre"), "medveveszély");});
test("medált -> medál", function() {deepEqual( Stem("medált"), "medál");});
test("meg -> meg", function() {deepEqual( Stem("meg"), "meg");});
test("megabit -> megab", function() {deepEqual( Stem("megabit"), "megab");});
test("megabitről -> megabit", function() {deepEqual( Stem("megabitről"), "megabit");});
test("megabites -> megabites", function() {deepEqual( Stem("megabites"), "megabites");});
test("megabájt -> megabáj", function() {deepEqual( Stem("megabájt"), "megabáj");});
test("megabájtig -> megabájt", function() {deepEqual( Stem("megabájtig"), "megabájt");});
test("megabájtnál -> megabájt", function() {deepEqual( Stem("megabájtnál"), "megabájt");});
test("megabájtra -> megabájt", function() {deepEqual( Stem("megabájtra"), "megabájt");});
test("megabájtnyi -> megabájtny", function() {deepEqual( Stem("megabájtnyi"), "megabájtny");});
test("megabájtos -> megabájtos", function() {deepEqual( Stem("megabájtos"), "megabájtos");});
test("megadandó -> megadandó", function() {deepEqual( Stem("megadandó"), "megadandó");});
test("megadhassak -> megadhass", function() {deepEqual( Stem("megadhassak"), "megadhass");});
test("megadhassák -> megadhassa", function() {deepEqual( Stem("megadhassák"), "megadhassa");});
test("megadhatja -> megadhat", function() {deepEqual( Stem("megadhatja"), "megadhat");});
test("megadhatjuk -> megadhat", function() {deepEqual( Stem("megadhatjuk"), "megadhat");});
test("megadhatná -> megadhatna", function() {deepEqual( Stem("megadhatná"), "megadhatna");});
test("megadhatok -> megadhat", function() {deepEqual( Stem("megadhatok"), "megadhat");});
test("megadhatunk -> megadhat", function() {deepEqual( Stem("megadhatunk"), "megadhat");});
test("megadható -> megadható", function() {deepEqual( Stem("megadható"), "megadható");});
test("megadhatók -> megadható", function() {deepEqual( Stem("megadhatók"), "megadható");});
test("megad -> meg", function() {deepEqual( Stem("megad"), "meg");});
test("megadjuk -> megad", function() {deepEqual( Stem("megadjuk"), "megad");});
test("megadják -> megadja", function() {deepEqual( Stem("megadják"), "megadja");});
test("megadnak -> meg", function() {deepEqual( Stem("megadnak"), "meg");});
test("megadni -> megadn", function() {deepEqual( Stem("megadni"), "megadn");});
test("megadnia -> megadn", function() {deepEqual( Stem("megadnia"), "megadn");});
test("megadnunk -> megadn", function() {deepEqual( Stem("megadnunk"), "megadn");});
test("megadnám -> megadna", function() {deepEqual( Stem("megadnám"), "megadna");});
test("megadnék -> megadne", function() {deepEqual( Stem("megadnék"), "megadne");});
test("megadod -> megad", function() {deepEqual( Stem("megadod"), "megad");});
test("megadok -> megad", function() {deepEqual( Stem("megadok"), "megad");});
test("megadom -> megad", function() {deepEqual( Stem("megadom"), "megad");});
test("megadta -> megadt", function() {deepEqual( Stem("megadta"), "megadt");});
test("megadtad -> megadt", function() {deepEqual( Stem("megadtad"), "megadt");});
test("megadtak -> megadt", function() {deepEqual( Stem("megadtak"), "megadt");});
test("megadtuk -> megadt", function() {deepEqual( Stem("megadtuk"), "megadt");});
test("megadtunk -> megadt", function() {deepEqual( Stem("megadtunk"), "megadt");});
test("megadták -> megadta", function() {deepEqual( Stem("megadták"), "megadta");});
test("megadott -> megadot", function() {deepEqual( Stem("megadott"), "megadot");});
test("megadottnak -> megadott", function() {deepEqual( Stem("megadottnak"), "megadott");});
test("megadva -> megadv", function() {deepEqual( Stem("megadva"), "megadv");});
test("megadás -> megadás", function() {deepEqual( Stem("megadás"), "megadás");});
test("megadása -> megadás", function() {deepEqual( Stem("megadása"), "megadás");});
test("megadásra -> megadás", function() {deepEqual( Stem("megadásra"), "megadás");});
test("megadásában -> megadás", function() {deepEqual( Stem("megadásában"), "megadás");});
test("megadásához -> megadás", function() {deepEqual( Stem("megadásához"), "megadás");});
test("megadásának -> megadás", function() {deepEqual( Stem("megadásának"), "megadás");});
test("megadására -> megadás", function() {deepEqual( Stem("megadására"), "megadás");});
test("megadását -> megadás", function() {deepEqual( Stem("megadását"), "megadás");});
test("megadásával -> megadás", function() {deepEqual( Stem("megadásával"), "megadás");});
test("megadóztatni -> megadóztatn", function() {deepEqual( Stem("megadóztatni"), "megadóztatn");});
test("megadóztatásábólmegadóztatásáról -> megadóztatásábólmegadóztatás", function() {deepEqual( Stem("megadóztatásábólmegadóztatásáról"), "megadóztatásábólmegadóztatás");});
test("megadóztatásával -> megadóztatás", function() {deepEqual( Stem("megadóztatásával"), "megadóztatás");});
test("megafonban -> megafon", function() {deepEqual( Stem("megafonban"), "megafon");});
test("megahertzcel -> megahertzcel", function() {deepEqual( Stem("megahertzcel"), "megahertzcel");});
test("megahertzen -> megahertz", function() {deepEqual( Stem("megahertzen"), "megahertz");});
test("megahertzes -> megahertzes", function() {deepEqual( Stem("megahertzes"), "megahertzes");});
test("megahertzesre -> megahertzes", function() {deepEqual( Stem("megahertzesre"), "megahertzes");});
test("megahertzig -> megahertz", function() {deepEqual( Stem("megahertzig"), "megahertz");});
test("megahertzre -> megahertz", function() {deepEqual( Stem("megahertzre"), "megahertz");});
test("megahertzéről -> megahertz", function() {deepEqual( Stem("megahertzéről"), "megahertz");});
test("megaherztes -> megaherztes", function() {deepEqual( Stem("megaherztes"), "megaherztes");});
test("megajándékozott -> megajándékozot", function() {deepEqual( Stem("megajándékozott"), "megajándékozot");});
test("megakad -> meg", function() {deepEqual( Stem("megakad"), "meg");});
test("megakadhat -> megakadh", function() {deepEqual( Stem("megakadhat"), "megakadh");});
test("megakadt -> meg", function() {deepEqual( Stem("megakadt"), "meg");});
test("megakadályozandó -> megakadályozandó", function() {deepEqual( Stem("megakadályozandó"), "megakadályozandó");});
test("megakadályozhassák -> megakadályozhassa", function() {deepEqual( Stem("megakadályozhassák"), "megakadályozhassa");});
test("megakadályozhatja -> megakadályozhat", function() {deepEqual( Stem("megakadályozhatja"), "megakadályozhat");});
test("megakadályozható -> megakadályozható", function() {deepEqual( Stem("megakadályozható"), "megakadályozható");});
test("megakadályozhatók -> megakadályozható", function() {deepEqual( Stem("megakadályozhatók"), "megakadályozható");});
test("megakadályoz -> megakadályoz", function() {deepEqual( Stem("megakadályoz"), "megakadályoz");});
test("megakadályozni -> megakadályozn", function() {deepEqual( Stem("megakadályozni"), "megakadályozn");});
test("megakadályoznák -> megakadályozna", function() {deepEqual( Stem("megakadályoznák"), "megakadályozna");});
test("megakadályozta -> megakadályozt", function() {deepEqual( Stem("megakadályozta"), "megakadályozt");});
test("megakadályozza -> megakadályozz", function() {deepEqual( Stem("megakadályozza"), "megakadályozz");});
test("megakadályozzam -> megakadályozz", function() {deepEqual( Stem("megakadályozzam"), "megakadályozz");});
test("megakadályozzák -> megakadályozza", function() {deepEqual( Stem("megakadályozzák"), "megakadályozza");});
test("megakadályozása -> megakadályozás", function() {deepEqual( Stem("megakadályozása"), "megakadályozás");});
test("megakadályozására -> megakadályozás", function() {deepEqual( Stem("megakadályozására"), "megakadályozás");});
test("megakadályozását -> megakadályozás", function() {deepEqual( Stem("megakadályozását"), "megakadályozás");});
test("megakadályozó -> megakadályozó", function() {deepEqual( Stem("megakadályozó"), "megakadályozó");});
test("megakaszthatja -> megakaszthat", function() {deepEqual( Stem("megakaszthatja"), "megakaszthat");});
test("megakasztani -> megakasztan", function() {deepEqual( Stem("megakasztani"), "megakasztan");});
test("megakasztja -> megakaszt", function() {deepEqual( Stem("megakasztja"), "megakaszt");});
test("megakasztottam -> megakasztott", function() {deepEqual( Stem("megakasztottam"), "megakasztott");});
test("megakasztott -> megakasztot", function() {deepEqual( Stem("megakasztott"), "megakasztot");});
test("megalakulhassanak -> megalakulhass", function() {deepEqual( Stem("megalakulhassanak"), "megalakulhass");});
test("megalakultnak -> megalakult", function() {deepEqual( Stem("megalakultnak"), "megalakult");});
test("megalakul -> megal", function() {deepEqual( Stem("megalakul"), "megal");});
test("megalakulni -> megalakuln", function() {deepEqual( Stem("megalakulni"), "megalakuln");});
test("megalakult -> megalakul", function() {deepEqual( Stem("megalakult"), "megalakul");});
test("megalakulása -> megalakulás", function() {deepEqual( Stem("megalakulása"), "megalakulás");});
test("megalakulásakor -> megalakulás", function() {deepEqual( Stem("megalakulásakor"), "megalakulás");});
test("megalakulásig -> megalakulás", function() {deepEqual( Stem("megalakulásig"), "megalakulás");});
test("megalakulással -> megalakulás", function() {deepEqual( Stem("megalakulással"), "megalakulás");});
test("megalakulást -> megalakulás", function() {deepEqual( Stem("megalakulást"), "megalakulás");});
test("megalakulásukat -> megalakulás", function() {deepEqual( Stem("megalakulásukat"), "megalakulás");});
test("megalakulásának -> megalakulás", function() {deepEqual( Stem("megalakulásának"), "megalakulás");});
test("megalakulására -> megalakulás", function() {deepEqual( Stem("megalakulására"), "megalakulás");});
test("megalakulásáról -> megalakulás", function() {deepEqual( Stem("megalakulásáról"), "megalakulás");});
test("megalakulását -> megalakulás", function() {deepEqual( Stem("megalakulását"), "megalakulás");});
test("megalakulásától -> megalakulás", function() {deepEqual( Stem("megalakulásától"), "megalakulás");});
test("megalakulásával -> megalakulás", function() {deepEqual( Stem("megalakulásával"), "megalakulás");});
test("megalakuló -> megalakuló", function() {deepEqual( Stem("megalakuló"), "megalakuló");});
test("megalakítandó -> megalakítandó", function() {deepEqual( Stem("megalakítandó"), "megalakítandó");});
test("megalakították -> megalakította", function() {deepEqual( Stem("megalakították"), "megalakította");});
test("megalakításához -> megalakítás", function() {deepEqual( Stem("megalakításához"), "megalakítás");});
test("megalakításánál -> megalakítás", function() {deepEqual( Stem("megalakításánál"), "megalakítás");});
test("megalakítására -> megalakítás", function() {deepEqual( Stem("megalakítására"), "megalakítás");});
test("megalakítását -> megalakítás", function() {deepEqual( Stem("megalakítását"), "megalakítás");});
test("megalapozatlan -> megalapozatl", function() {deepEqual( Stem("megalapozatlan"), "megalapozatl");});
test("megalapozatlannak -> megalapozatlan", function() {deepEqual( Stem("megalapozatlannak"), "megalapozatlan");});
test("megalapozhat -> megalapozh", function() {deepEqual( Stem("megalapozhat"), "megalapozh");});
test("megalapozhatja -> megalapozhat", function() {deepEqual( Stem("megalapozhatja"), "megalapozhat");});
test("megalapozni -> megalapozn", function() {deepEqual( Stem("megalapozni"), "megalapozn");});
test("megalapozta -> megalapozt", function() {deepEqual( Stem("megalapozta"), "megalapozt");});
test("megalapozza -> megalapozz", function() {deepEqual( Stem("megalapozza"), "megalapozz");});
test("megalapozzák -> megalapozza", function() {deepEqual( Stem("megalapozzák"), "megalapozza");});
test("megalapozott -> megalapozot", function() {deepEqual( Stem("megalapozott"), "megalapozot");});
test("megalapozottabb -> megalapozottabb", function() {deepEqual( Stem("megalapozottabb"), "megalapozottabb");});
test("megalapozottabban -> megalapozottab", function() {deepEqual( Stem("megalapozottabban"), "megalapozottab");});
test("megalapozottan -> megalapozott", function() {deepEqual( Stem("megalapozottan"), "megalapozott");});
test("megalapozottnak -> megalapozott", function() {deepEqual( Stem("megalapozottnak"), "megalapozott");});
test("megalapozottá -> megalapozot", function() {deepEqual( Stem("megalapozottá"), "megalapozot");});
test("megalapozottsága -> megalapozottság", function() {deepEqual( Stem("megalapozottsága"), "megalapozottság");});
test("megalapozottságáról -> megalapozottság", function() {deepEqual( Stem("megalapozottságáról"), "megalapozottság");});
test("megalapozottságát -> megalapozottság", function() {deepEqual( Stem("megalapozottságát"), "megalapozottság");});
test("megalapozottságúak -> megalapozottságú", function() {deepEqual( Stem("megalapozottságúak"), "megalapozottságú");});
test("megalapozva -> megalapozv", function() {deepEqual( Stem("megalapozva"), "megalapozv");});
test("megalapozáson -> megalapozás", function() {deepEqual( Stem("megalapozáson"), "megalapozás");});
test("megalapozásába -> megalapozás", function() {deepEqual( Stem("megalapozásába"), "megalapozás");});
test("megalapozásában -> megalapozás", function() {deepEqual( Stem("megalapozásában"), "megalapozás");});
test("megalapozásának -> megalapozás", function() {deepEqual( Stem("megalapozásának"), "megalapozás");});
test("megalapozó -> megalapozó", function() {deepEqual( Stem("megalapozó"), "megalapozó");});
test("megalapozónak -> megalapozó", function() {deepEqual( Stem("megalapozónak"), "megalapozó");});
test("megalapítani -> megalapítan", function() {deepEqual( Stem("megalapítani"), "megalapítan");});
test("megalapítja -> megalapít", function() {deepEqual( Stem("megalapítja"), "megalapít");});
test("megalapította -> megalapított", function() {deepEqual( Stem("megalapította"), "megalapított");});
test("megalapítottnak -> megalapított", function() {deepEqual( Stem("megalapítottnak"), "megalapított");});
test("megalapításához -> megalapítás", function() {deepEqual( Stem("megalapításához"), "megalapítás");});
test("megalapításának -> megalapítás", function() {deepEqual( Stem("megalapításának"), "megalapítás");});
test("megalapítását -> megalapítás", function() {deepEqual( Stem("megalapítását"), "megalapítás");});
test("megalapító -> megalapító", function() {deepEqual( Stem("megalapító"), "megalapító");});
test("megalkotandó -> megalkotandó", function() {deepEqual( Stem("megalkotandó"), "megalkotandó");});
test("megalkotja -> megalkot", function() {deepEqual( Stem("megalkotja"), "megalkot");});
test("megalkotják -> megalkotja", function() {deepEqual( Stem("megalkotják"), "megalkotja");});
test("megalkotni -> megalkotn", function() {deepEqual( Stem("megalkotni"), "megalkotn");});
test("megalkotnia -> megalkotn", function() {deepEqual( Stem("megalkotnia"), "megalkotn");});
test("megalkotta -> megalkott", function() {deepEqual( Stem("megalkotta"), "megalkott");});
test("megalkotott -> megalkotot", function() {deepEqual( Stem("megalkotott"), "megalkotot");});
test("megalkotása -> megalkotás", function() {deepEqual( Stem("megalkotása"), "megalkotás");});
test("megalkotásra -> megalkotás", function() {deepEqual( Stem("megalkotásra"), "megalkotás");});
test("megalkotásában -> megalkotás", function() {deepEqual( Stem("megalkotásában"), "megalkotás");});
test("megalkotásáig -> megalkotás", function() {deepEqual( Stem("megalkotásáig"), "megalkotás");});
test("megalkotásának -> megalkotás", function() {deepEqual( Stem("megalkotásának"), "megalkotás");});
test("megalkotására -> megalkotás", function() {deepEqual( Stem("megalkotására"), "megalkotás");});
test("megalkotását -> megalkotás", function() {deepEqual( Stem("megalkotását"), "megalkotás");});
test("megalkotásától -> megalkotás", function() {deepEqual( Stem("megalkotásától"), "megalkotás");});
test("megalkotásával -> megalkotás", function() {deepEqual( Stem("megalkotásával"), "megalkotás");});
test("megalkotója -> megalkotó", function() {deepEqual( Stem("megalkotója"), "megalkotó");});
test("megalkudni -> megalkudn", function() {deepEqual( Stem("megalkudni"), "megalkudn");});
test("megalkuvók -> megalkuvó", function() {deepEqual( Stem("megalkuvók"), "megalkuvó");});
test("megalázkodik -> megalázkod", function() {deepEqual( Stem("megalázkodik"), "megalázkod");});
test("megalázkodás -> megalázkodás", function() {deepEqual( Stem("megalázkodás"), "megalázkodás");});
test("megalázkodással -> megalázkodás", function() {deepEqual( Stem("megalázkodással"), "megalázkodás");});
test("megalázott -> megalázot", function() {deepEqual( Stem("megalázott"), "megalázot");});
test("megalázottnak -> megalázott", function() {deepEqual( Stem("megalázottnak"), "megalázott");});
test("megalázottság -> megalázottság", function() {deepEqual( Stem("megalázottság"), "megalázottság");});
test("megaláztatás -> megaláztatás", function() {deepEqual( Stem("megaláztatás"), "megaláztatás");});
test("megaláztatása -> megaláztatás", function() {deepEqual( Stem("megaláztatása"), "megaláztatás");});
test("megaláztatásnak -> megaláztatás", function() {deepEqual( Stem("megaláztatásnak"), "megaláztatás");});
test("megaláztatást -> megaláztatás", function() {deepEqual( Stem("megaláztatást"), "megaláztatás");});
test("megaláznak -> megaláz", function() {deepEqual( Stem("megaláznak"), "megaláz");});
test("megaláztuk -> megalázt", function() {deepEqual( Stem("megaláztuk"), "megalázt");});
test("megalázzák -> megalázza", function() {deepEqual( Stem("megalázzák"), "megalázza");});
test("megalázásokat -> megalázás", function() {deepEqual( Stem("megalázásokat"), "megalázás");});
test("megalázó -> megalázó", function() {deepEqual( Stem("megalázó"), "megalázó");});
test("megalázóan -> megalázó", function() {deepEqual( Stem("megalázóan"), "megalázó");});
test("megannyi -> meganny", function() {deepEqual( Stem("megannyi"), "meganny");});
test("megapixeles -> megapixeles", function() {deepEqual( Stem("megapixeles"), "megapixeles");});
test("megawatt -> megawat", function() {deepEqual( Stem("megawatt"), "megawat");});
test("megbabonázott -> megbabonázot", function() {deepEqual( Stem("megbabonázott"), "megbabonázot");});
test("megbarnul -> megbarn", function() {deepEqual( Stem("megbarnul"), "megbarn");});
test("megbarátkozik -> megbarátkoz", function() {deepEqual( Stem("megbarátkozik"), "megbarátkoz");});
test("megbarátkozni -> megbarátkozn", function() {deepEqual( Stem("megbarátkozni"), "megbarátkozn");});
test("megbarátkoztam -> megbarátkozt", function() {deepEqual( Stem("megbarátkoztam"), "megbarátkozt");});
test("megbarátkoztunk -> megbarátkozt", function() {deepEqual( Stem("megbarátkoztunk"), "megbarátkozt");});
test("megbarátkozás -> megbarátkozás", function() {deepEqual( Stem("megbarátkozás"), "megbarátkozás");});
test("megbecsülhetik -> megbecsülhet", function() {deepEqual( Stem("megbecsülhetik"), "megbecsülhet");});
test("megbecsül -> megbecs", function() {deepEqual( Stem("megbecsül"), "megbecs");});
test("megbecsüli -> megbecsül", function() {deepEqual( Stem("megbecsüli"), "megbecsül");});
test("megbecsülik -> megbecsül", function() {deepEqual( Stem("megbecsülik"), "megbecsül");});
test("megbecsüljenek -> megbecsül", function() {deepEqual( Stem("megbecsüljenek"), "megbecsül");});
test("megbecsülne -> megbecsüln", function() {deepEqual( Stem("megbecsülne"), "megbecsüln");});
test("megbecsülnek -> megbecsül", function() {deepEqual( Stem("megbecsülnek"), "megbecsül");});
test("megbecsülni -> megbecsüln", function() {deepEqual( Stem("megbecsülni"), "megbecsüln");});
test("megbecsülné -> megbecsüln", function() {deepEqual( Stem("megbecsülné"), "megbecsüln");});
test("megbecsülnének -> megbecsüln", function() {deepEqual( Stem("megbecsülnének"), "megbecsüln");});
test("megbecsülték -> megbecsülte", function() {deepEqual( Stem("megbecsülték"), "megbecsülte");});
test("megbecsülöm -> megbecsülö", function() {deepEqual( Stem("megbecsülöm"), "megbecsülö");});
test("megbecsült -> megbecsül", function() {deepEqual( Stem("megbecsült"), "megbecsül");});
test("megbecsülés -> megbecsülés", function() {deepEqual( Stem("megbecsülés"), "megbecsülés");});
test("megbecsülést -> megbecsülés", function() {deepEqual( Stem("megbecsülést"), "megbecsülés");});
test("megbeszélhetjük -> megbeszélhet", function() {deepEqual( Stem("megbeszélhetjük"), "megbeszélhet");});
test("megbeszélhetünk -> megbeszélhet", function() {deepEqual( Stem("megbeszélhetünk"), "megbeszélhet");});
test("megbeszéli -> megbeszél", function() {deepEqual( Stem("megbeszéli"), "megbeszél");});
test("megbeszélem -> megbeszél", function() {deepEqual( Stem("megbeszélem"), "megbeszél");});
test("megbeszéljék -> megbeszélje", function() {deepEqual( Stem("megbeszéljék"), "megbeszélje");});
test("megbeszéljük -> megbeszél", function() {deepEqual( Stem("megbeszéljük"), "megbeszél");});
test("megbeszéljünk -> megbeszélj", function() {deepEqual( Stem("megbeszéljünk"), "megbeszélj");});
test("megbeszélnek -> megbeszél", function() {deepEqual( Stem("megbeszélnek"), "megbeszél");});
test("megbeszélni -> megbeszéln", function() {deepEqual( Stem("megbeszélni"), "megbeszéln");});
test("megbeszélném -> megbeszélne", function() {deepEqual( Stem("megbeszélném"), "megbeszélne");});
test("megbeszélnénk -> megbeszélne", function() {deepEqual( Stem("megbeszélnénk"), "megbeszélne");});
test("megbeszélte -> megbeszélt", function() {deepEqual( Stem("megbeszélte"), "megbeszélt");});
test("megbeszéltem -> megbeszélt", function() {deepEqual( Stem("megbeszéltem"), "megbeszélt");});
test("megbeszéltük -> megbeszélt", function() {deepEqual( Stem("megbeszéltük"), "megbeszélt");});
test("megbeszéltünk -> megbeszélt", function() {deepEqual( Stem("megbeszéltünk"), "megbeszélt");});
test("megbeszélnivalóik -> megbeszélnivaló", function() {deepEqual( Stem("megbeszélnivalóik"), "megbeszélnivaló");});
test("megbeszélt -> megbeszél", function() {deepEqual( Stem("megbeszélt"), "megbeszél");});
test("megbeszéltek -> megbeszélt", function() {deepEqual( Stem("megbeszéltek"), "megbeszélt");});
test("megbeszélve -> megbeszélv", function() {deepEqual( Stem("megbeszélve"), "megbeszélv");});
test("megbeszélés -> megbeszélés", function() {deepEqual( Stem("megbeszélés"), "megbeszélés");});
test("megbeszélése -> megbeszélés", function() {deepEqual( Stem("megbeszélése"), "megbeszélés");});
test("megbeszélések -> megbeszélés", function() {deepEqual( Stem("megbeszélések"), "megbeszélés");});
test("megbeszéléseken -> megbeszélés", function() {deepEqual( Stem("megbeszéléseken"), "megbeszélés");});
test("megbeszéléseket -> megbeszélés", function() {deepEqual( Stem("megbeszéléseket"), "megbeszélés");});
test("megbeszélésen -> megbeszélés", function() {deepEqual( Stem("megbeszélésen"), "megbeszélés");});
test("megbeszélésnek -> megbeszélés", function() {deepEqual( Stem("megbeszélésnek"), "megbeszélés");});
test("megbeszélést -> megbeszélés", function() {deepEqual( Stem("megbeszélést"), "megbeszélés");});
test("megbeszélünk -> megbeszél", function() {deepEqual( Stem("megbeszélünk"), "megbeszél");});
test("megbetegedett -> megbetegedet", function() {deepEqual( Stem("megbetegedett"), "megbetegedet");});
test("megbetegedhet -> megbetegedh", function() {deepEqual( Stem("megbetegedhet"), "megbetegedh");});
test("megbetegedése -> megbetegedés", function() {deepEqual( Stem("megbetegedése"), "megbetegedés");});
test("megbetegedések -> megbetegedés", function() {deepEqual( Stem("megbetegedések"), "megbetegedés");});
test("megbetegedéseket -> megbetegedés", function() {deepEqual( Stem("megbetegedéseket"), "megbetegedés");});
test("megbicsaklódott -> megbicsaklódot", function() {deepEqual( Stem("megbicsaklódott"), "megbicsaklódot");});
test("megbilincsekbe -> megbilincs", function() {deepEqual( Stem("megbilincsekbe"), "megbilincs");});
test("megbilincselve -> megbilincselv", function() {deepEqual( Stem("megbilincselve"), "megbilincselv");});
test("megbillent -> megbillen", function() {deepEqual( Stem("megbillent"), "megbillen");});
test("megbirkózik -> megbirkóz", function() {deepEqual( Stem("megbirkózik"), "megbirkóz");});
test("megbirkózni -> megbirkózn", function() {deepEqual( Stem("megbirkózni"), "megbirkózn");});
test("megbirkóztunk -> megbirkózt", function() {deepEqual( Stem("megbirkóztunk"), "megbirkózt");});
test("megbirkózzék -> megbirkózze", function() {deepEqual( Stem("megbirkózzék"), "megbirkózze");});
test("megbirkózott -> megbirkózot", function() {deepEqual( Stem("megbirkózott"), "megbirkózot");});
test("megbizonyosodhat -> megbizonyosodh", function() {deepEqual( Stem("megbizonyosodhat"), "megbizonyosodh");});
test("megbizonyosodott -> megbizonyosodot", function() {deepEqual( Stem("megbizonyosodott"), "megbizonyosodot");});
test("megbizonyosodjék -> megbizonyosodje", function() {deepEqual( Stem("megbizonyosodjék"), "megbizonyosodje");});
test("megbizonyosodtak -> megbizonyosodt", function() {deepEqual( Stem("megbizonyosodtak"), "megbizonyosodt");});
test("megbizonyosodtam -> megbizonyosodt", function() {deepEqual( Stem("megbizonyosodtam"), "megbizonyosodt");});
test("megbocsát -> megbocs", function() {deepEqual( Stem("megbocsát"), "megbocs");});
test("megbocsáthatatlan -> megbocsáthatatl", function() {deepEqual( Stem("megbocsáthatatlan"), "megbocsáthatatl");});
test("megbocsátható -> megbocsátható", function() {deepEqual( Stem("megbocsátható"), "megbocsátható");});
test("megbocsátott -> megbocsátot", function() {deepEqual( Stem("megbocsátott"), "megbocsátot");});
test("megbocsátottak -> megbocsátott", function() {deepEqual( Stem("megbocsátottak"), "megbocsátott");});
test("megbocsátani -> megbocsátan", function() {deepEqual( Stem("megbocsátani"), "megbocsátan");});
test("megbocsátották -> megbocsátotta", function() {deepEqual( Stem("megbocsátották"), "megbocsátotta");});
test("megbocsátás -> megbocsátás", function() {deepEqual( Stem("megbocsátás"), "megbocsátás");});
test("megbocsátást -> megbocsátás", function() {deepEqual( Stem("megbocsátást"), "megbocsátás");});
test("megbocsátó -> megbocsátó", function() {deepEqual( Stem("megbocsátó"), "megbocsátó");});
test("megbocsátók -> megbocsátó", function() {deepEqual( Stem("megbocsátók"), "megbocsátó");});
test("megboldogult -> megboldogul", function() {deepEqual( Stem("megboldogult"), "megboldogul");});
test("megboldogultról -> megboldogult", function() {deepEqual( Stem("megboldogultról"), "megboldogult");});
test("megbolondul -> megbolon", function() {deepEqual( Stem("megbolondul"), "megbolon");});
test("megbolondulok -> megbolondul", function() {deepEqual( Stem("megbolondulok"), "megbolondul");});
test("megbolondult -> megbolondul", function() {deepEqual( Stem("megbolondult"), "megbolondul");});
test("megbolygatni -> megbolygatn", function() {deepEqual( Stem("megbolygatni"), "megbolygatn");});
test("megbolygatta -> megbolygatt", function() {deepEqual( Stem("megbolygatta"), "megbolygatt");});
test("megbomlott -> megbomlot", function() {deepEqual( Stem("megbomlott"), "megbomlot");});
test("megbontja -> megbont", function() {deepEqual( Stem("megbontja"), "megbont");});
test("megbontására -> megbontás", function() {deepEqual( Stem("megbontására"), "megbontás");});
test("megbontásával -> megbontás", function() {deepEqual( Stem("megbontásával"), "megbontás");});
test("megbontó -> megbontó", function() {deepEqual( Stem("megbontó"), "megbontó");});
test("megborotvál -> megborotvál", function() {deepEqual( Stem("megborotvál"), "megborotvál");});
test("megborotválkozott -> megborotválkozot", function() {deepEqual( Stem("megborotválkozott"), "megborotválkozot");});
test("megborotválkoztam -> megborotválkozt", function() {deepEqual( Stem("megborotválkoztam"), "megborotválkozt");});
test("megborotválkoztunk -> megborotválkozt", function() {deepEqual( Stem("megborotválkoztunk"), "megborotválkozt");});
test("megborzadt -> megborz", function() {deepEqual( Stem("megborzadt"), "megborz");});
test("megborzongott -> megborzongot", function() {deepEqual( Stem("megborzongott"), "megborzongot");});
test("megbotlott -> megbotlot", function() {deepEqual( Stem("megbotlott"), "megbotlot");});
test("megbotlottam -> megbotlott", function() {deepEqual( Stem("megbotlottam"), "megbotlott");});
test("megbotránkoztatni -> megbotránkoztatn", function() {deepEqual( Stem("megbotránkoztatni"), "megbotránkoztatn");});
test("megbotránkoztató -> megbotránkoztató", function() {deepEqual( Stem("megbotránkoztató"), "megbotránkoztató");});
test("megbuherálják -> megbuherálja", function() {deepEqual( Stem("megbuherálják"), "megbuherálja");});
test("megbukik -> megbu", function() {deepEqual( Stem("megbukik"), "megbu");});
test("megbukni -> megbukn", function() {deepEqual( Stem("megbukni"), "megbukn");});
test("megbuktam -> megbukt", function() {deepEqual( Stem("megbuktam"), "megbukt");});
test("megbuktunk -> megbukt", function() {deepEqual( Stem("megbuktunk"), "megbukt");});
test("megbuktál -> megbuktál", function() {deepEqual( Stem("megbuktál"), "megbuktál");});
test("megbukott -> megbukot", function() {deepEqual( Stem("megbukott"), "megbukot");});
test("megbuktatják -> megbuktatja", function() {deepEqual( Stem("megbuktatják"), "megbuktatja");});
test("megbuktatnak -> megbuktat", function() {deepEqual( Stem("megbuktatnak"), "megbuktat");});
test("megbuktatni -> megbuktatn", function() {deepEqual( Stem("megbuktatni"), "megbuktatn");});
test("megbuktatása -> megbuktatás", function() {deepEqual( Stem("megbuktatása"), "megbuktatás");});
test("megbukástól -> megbukás", function() {deepEqual( Stem("megbukástól"), "megbukás");});
test("megbájtos -> megbájtos", function() {deepEqual( Stem("megbájtos"), "megbájtos");});
test("megbámulni -> megbámuln", function() {deepEqual( Stem("megbámulni"), "megbámuln");});
test("megbánatlan -> megbánatl", function() {deepEqual( Stem("megbánatlan"), "megbánatl");});
test("megbánja -> megbán", function() {deepEqual( Stem("megbánja"), "megbán");});
test("megbánni -> megbánn", function() {deepEqual( Stem("megbánni"), "megbánn");});
test("megbánnál -> megb", function() {deepEqual( Stem("megbánnál"), "megb");});
test("megbánod -> megbán", function() {deepEqual( Stem("megbánod"), "megbán");});
test("megbánom -> megbán", function() {deepEqual( Stem("megbánom"), "megbán");});
test("megbántam -> megbánt", function() {deepEqual( Stem("megbántam"), "megbánt");});
test("megbántuk -> megbánt", function() {deepEqual( Stem("megbántuk"), "megbánt");});
test("megbántani -> megbántan", function() {deepEqual( Stem("megbántani"), "megbántan");});
test("megbántom -> megbánt", function() {deepEqual( Stem("megbántom"), "megbánt");});
test("megbántotta -> megbántott", function() {deepEqual( Stem("megbántotta"), "megbántott");});
test("megbánás -> megbánás", function() {deepEqual( Stem("megbánás"), "megbánás");});
test("megbékélésről -> megbékélés", function() {deepEqual( Stem("megbékélésről"), "megbékélés");});
test("megbékélést -> megbékélés", function() {deepEqual( Stem("megbékélést"), "megbékélés");});
test("megbékélésért -> megbékélés", function() {deepEqual( Stem("megbékélésért"), "megbékélés");});
test("megbékített -> megbékítet", function() {deepEqual( Stem("megbékített"), "megbékítet");});
test("megbékült -> megbékül", function() {deepEqual( Stem("megbékült"), "megbékül");});
test("megbélyegezni -> megbélyegezn", function() {deepEqual( Stem("megbélyegezni"), "megbélyegezn");});
test("megbélyegezte -> megbélyegezt", function() {deepEqual( Stem("megbélyegezte"), "megbélyegezt");});
test("megbélyegzett -> megbélyegzet", function() {deepEqual( Stem("megbélyegzett"), "megbélyegzet");});
test("megbélyegzésévé -> megbélyegzés", function() {deepEqual( Stem("megbélyegzésévé"), "megbélyegzés");});
test("megbénulnak -> megbénul", function() {deepEqual( Stem("megbénulnak"), "megbénul");});
test("megbénult -> megbénul", function() {deepEqual( Stem("megbénult"), "megbénul");});
test("megbénulva -> megbénulv", function() {deepEqual( Stem("megbénulva"), "megbénulv");});
test("megbénította -> megbénított", function() {deepEqual( Stem("megbénította"), "megbénított");});
test("megbénították -> megbénította", function() {deepEqual( Stem("megbénították"), "megbénította");});
test("megbénítására -> megbénítás", function() {deepEqual( Stem("megbénítására"), "megbénítás");});
test("megbénító -> megbénító", function() {deepEqual( Stem("megbénító"), "megbénító");});
test("megbírált -> megbírál", function() {deepEqual( Stem("megbírált"), "megbírál");});
test("megbízatás -> megbízatás", function() {deepEqual( Stem("megbízatás"), "megbízatás");});
test("megbízatása -> megbízatás", function() {deepEqual( Stem("megbízatása"), "megbízatás");});
test("megbízatásnak -> megbízatás", function() {deepEqual( Stem("megbízatásnak"), "megbízatás");});
test("megbízatást -> megbízatás", function() {deepEqual( Stem("megbízatást"), "megbízatás");});
test("megbízatásuk -> megbízatás", function() {deepEqual( Stem("megbízatásuk"), "megbízatás");});
test("megbízatásukat -> megbízatás", function() {deepEqual( Stem("megbízatásukat"), "megbízatás");});
test("megbízatásának -> megbízatás", function() {deepEqual( Stem("megbízatásának"), "megbízatás");});
test("megbízatására -> megbízatás", function() {deepEqual( Stem("megbízatására"), "megbízatás");});
test("megbízatását -> megbízatás", function() {deepEqual( Stem("megbízatását"), "megbízatás");});
test("megbízhatatlan -> megbízhatatl", function() {deepEqual( Stem("megbízhatatlan"), "megbízhatatl");});
test("megbízhatatlannak -> megbízhatatlan", function() {deepEqual( Stem("megbízhatatlannak"), "megbízhatatlan");});
test("megbízhatatlanságig -> megbízhatatlanság", function() {deepEqual( Stem("megbízhatatlanságig"), "megbízhatatlanság");});
test("megbízhatja -> megbízhat", function() {deepEqual( Stem("megbízhatja"), "megbízhat");});
test("megbízhat -> megbízh", function() {deepEqual( Stem("megbízhat"), "megbízh");});
test("megbízhatnak -> megbízhat", function() {deepEqual( Stem("megbízhatnak"), "megbízhat");});
test("megbízhatnék -> megbízhatne", function() {deepEqual( Stem("megbízhatnék"), "megbízhatne");});
test("megbízhatóak -> megbízható", function() {deepEqual( Stem("megbízhatóak"), "megbízható");});
test("megbízhatóan -> megbízható", function() {deepEqual( Stem("megbízhatóan"), "megbízható");});
test("megbízhatóbb -> megbízhatóbb", function() {deepEqual( Stem("megbízhatóbb"), "megbízhatóbb");});
test("megbízhatóbbak -> megbízhatóbb", function() {deepEqual( Stem("megbízhatóbbak"), "megbízhatóbb");});
test("megbízhatóbban -> megbízhatób", function() {deepEqual( Stem("megbízhatóbban"), "megbízhatób");});
test("megbízhatóbbnak -> megbízhatóbb", function() {deepEqual( Stem("megbízhatóbbnak"), "megbízhatóbb");});
test("megbízhatóbbá -> megbízhatób", function() {deepEqual( Stem("megbízhatóbbá"), "megbízhatób");});
test("megbízhatónak -> megbízható", function() {deepEqual( Stem("megbízhatónak"), "megbízható");});
test("megbízhatóvá -> megbízható", function() {deepEqual( Stem("megbízhatóvá"), "megbízható");});
test("megbízhatósági -> megbízhatóság", function() {deepEqual( Stem("megbízhatósági"), "megbízhatóság");});
test("megbízhatóság -> megbízhatóság", function() {deepEqual( Stem("megbízhatóság"), "megbízhatóság");});
test("megbízhatósága -> megbízhatóság", function() {deepEqual( Stem("megbízhatósága"), "megbízhatóság");});
test("megbízhatósággal -> megbízhatóság", function() {deepEqual( Stem("megbízhatósággal"), "megbízhatóság");});
test("megbízhatóságot -> megbízhatóság", function() {deepEqual( Stem("megbízhatóságot"), "megbízhatóság");});
test("megbízhatóságuk -> megbízhatóság", function() {deepEqual( Stem("megbízhatóságuk"), "megbízhatóság");});
test("megbízhatóságán -> megbízhatóság", function() {deepEqual( Stem("megbízhatóságán"), "megbízhatóság");});
test("megbízhatóságára -> megbízhatóság", function() {deepEqual( Stem("megbízhatóságára"), "megbízhatóság");});
test("megbízhatóságáról -> megbízhatóság", function() {deepEqual( Stem("megbízhatóságáról"), "megbízhatóság");});
test("megbízhatóságú -> megbízhatóságú", function() {deepEqual( Stem("megbízhatóságú"), "megbízhatóságú");});
test("megbízna -> megbízn", function() {deepEqual( Stem("megbízna"), "megbízn");});
test("megbíznak -> megbíz", function() {deepEqual( Stem("megbíznak"), "megbíz");});
test("megbízni -> megbízn", function() {deepEqual( Stem("megbízni"), "megbízn");});
test("megbíznának -> megbízn", function() {deepEqual( Stem("megbíznának"), "megbízn");});
test("megbízta -> megbízt", function() {deepEqual( Stem("megbízta"), "megbízt");});
test("megbíztam -> megbízt", function() {deepEqual( Stem("megbíztam"), "megbízt");});
test("megbíztunk -> megbízt", function() {deepEqual( Stem("megbíztunk"), "megbízt");});
test("megbízták -> megbízta", function() {deepEqual( Stem("megbízták"), "megbízta");});
test("megbízzanak -> megbízz", function() {deepEqual( Stem("megbízzanak"), "megbízz");});
test("megbízott -> megbízot", function() {deepEqual( Stem("megbízott"), "megbízot");});
test("megbízotti -> megbízott", function() {deepEqual( Stem("megbízotti"), "megbízott");});
test("megbízottja -> megbízott", function() {deepEqual( Stem("megbízottja"), "megbízott");});
test("megbízottjuk -> megbízott", function() {deepEqual( Stem("megbízottjuk"), "megbízott");});
test("megbízottjától -> megbízott", function() {deepEqual( Stem("megbízottjától"), "megbízott");});
test("megbízási -> megbízás", function() {deepEqual( Stem("megbízási"), "megbízás");});
test("megbízásos -> megbízásos", function() {deepEqual( Stem("megbízásos"), "megbízásos");});
test("megbízás -> megbízás", function() {deepEqual( Stem("megbízás"), "megbízás");});
test("megbízása -> megbízás", function() {deepEqual( Stem("megbízása"), "megbízás");});
test("megbízások -> megbízás", function() {deepEqual( Stem("megbízások"), "megbízás");});
test("megbízásokat -> megbízás", function() {deepEqual( Stem("megbízásokat"), "megbízás");});
test("megbízásra -> megbízás", function() {deepEqual( Stem("megbízásra"), "megbízás");});
test("megbízásról -> megbízás", function() {deepEqual( Stem("megbízásról"), "megbízás");});
test("megbízással -> megbízás", function() {deepEqual( Stem("megbízással"), "megbízás");});
test("megbízást -> megbízás", function() {deepEqual( Stem("megbízást"), "megbízás");});
test("megbízásából -> megbízás", function() {deepEqual( Stem("megbízásából"), "megbízás");});
test("megbízására -> megbízás", function() {deepEqual( Stem("megbízására"), "megbízás");});
test("megbízásától -> megbízás", function() {deepEqual( Stem("megbízásától"), "megbízás");});
test("megbízói -> megbízó", function() {deepEqual( Stem("megbízói"), "megbízó");});
test("megbízójuknál -> megbízó", function() {deepEqual( Stem("megbízójuknál"), "megbízó");});
test("megbízókból -> megbízó", function() {deepEqual( Stem("megbízókból"), "megbízó");});
test("megbízóknak -> megbízó", function() {deepEqual( Stem("megbízóknak"), "megbízó");});
test("megbújva -> megbújv", function() {deepEqual( Stem("megbújva"), "megbújv");});
test("megbúvó -> megbúvó", function() {deepEqual( Stem("megbúvó"), "megbúvó");});
test("megbűnhődik -> megbűnhőd", function() {deepEqual( Stem("megbűnhődik"), "megbűnhőd");});
test("megbűnhődte -> megbűnhődt", function() {deepEqual( Stem("megbűnhődte"), "megbűnhődt");});
test("megbűvölve -> megbűvölv", function() {deepEqual( Stem("megbűvölve"), "megbűvölv");});
test("megbüntessétek -> megbüntessét", function() {deepEqual( Stem("megbüntessétek"), "megbüntessét");});
test("megbüntessük -> megbüntess", function() {deepEqual( Stem("megbüntessük"), "megbüntess");});
test("megbüntetett -> megbüntetet", function() {deepEqual( Stem("megbüntetett"), "megbüntetet");});
test("megerőltetésére -> megerőltetés", function() {deepEqual( Stem("megerőltetésére"), "megerőltetés");});
test("megerőltető -> megerőltető", function() {deepEqual( Stem("megerőltető"), "megerőltető");});
test("megerőltetőek -> megerőltető", function() {deepEqual( Stem("megerőltetőek"), "megerőltető");});
test("megerőszakolt -> megerőszakol", function() {deepEqual( Stem("megerőszakolt"), "megerőszakol");});
test("megerőszakolták -> megerőszakolta", function() {deepEqual( Stem("megerőszakolták"), "megerőszakolta");});
test("megerőszakoló -> megerőszakoló", function() {deepEqual( Stem("megerőszakoló"), "megerőszakoló");});
test("megerősít -> megerősí", function() {deepEqual( Stem("megerősít"), "megerősí");});
test("megerősíteni -> megerősíten", function() {deepEqual( Stem("megerősíteni"), "megerősíten");});
test("megerősítette -> megerősített", function() {deepEqual( Stem("megerősítette"), "megerősített");});
test("megerősítették -> megerősítette", function() {deepEqual( Stem("megerősítették"), "megerősítette");});
test("megerősíti -> megerősít", function() {deepEqual( Stem("megerősíti"), "megerősít");});
test("megerősítik -> megerősít", function() {deepEqual( Stem("megerősítik"), "megerősít");});
test("megerősítse -> megerősíts", function() {deepEqual( Stem("megerősítse"), "megerősíts");});
test("megerősített -> megerősítet", function() {deepEqual( Stem("megerősített"), "megerősítet");});
test("megerősíthet -> megerősíth", function() {deepEqual( Stem("megerősíthet"), "megerősíth");});
test("megerősítéses -> megerősítéses", function() {deepEqual( Stem("megerősítéses"), "megerősítéses");});
test("megerősítése -> megerősítés", function() {deepEqual( Stem("megerősítése"), "megerősítés");});
test("megerősítést -> megerősítés", function() {deepEqual( Stem("megerősítést"), "megerősítés");});
test("megerősítésére -> megerősítés", function() {deepEqual( Stem("megerősítésére"), "megerősítés");});
test("megerősítését -> megerősítés", function() {deepEqual( Stem("megerősítését"), "megerősítés");});
test("megerősödve -> megerősödv", function() {deepEqual( Stem("megerősödve"), "megerősödv");});
test("megerősödését -> megerősödés", function() {deepEqual( Stem("megerősödését"), "megerősödés");});
test("megerősödtek -> megerősödt", function() {deepEqual( Stem("megerősödtek"), "megerősödt");});
test("megerősödött -> megerősödöt", function() {deepEqual( Stem("megerősödött"), "megerősödöt");});
test("megesett -> megeset", function() {deepEqual( Stem("megesett"), "megeset");});
test("megesik -> meges", function() {deepEqual( Stem("megesik"), "meges");});
test("megesküdött -> megesküdöt", function() {deepEqual( Stem("megesküdött"), "megesküdöt");});
test("megesküszik -> megesküsz", function() {deepEqual( Stem("megesküszik"), "megesküsz");});
test("megetetem -> megetet", function() {deepEqual( Stem("megetetem"), "megetet");});
test("megetetni -> megetetn", function() {deepEqual( Stem("megetetni"), "megetetn");});
test("megetettem -> megetett", function() {deepEqual( Stem("megetettem"), "megetett");});
test("megetettünk -> megetett", function() {deepEqual( Stem("megetettünk"), "megetett");});
test("megenni -> megenn", function() {deepEqual( Stem("megenni"), "megenn");});
test("megeszik -> megesz", function() {deepEqual( Stem("megeszik"), "megesz");});
test("megette -> megett", function() {deepEqual( Stem("megette"), "megett");});
test("megegyek -> megegy", function() {deepEqual( Stem("megegyek"), "megegy");});
test("megettem -> megett", function() {deepEqual( Stem("megettem"), "megett");});
test("megettük -> megett", function() {deepEqual( Stem("megettük"), "megett");});
test("megettünk -> megett", function() {deepEqual( Stem("megettünk"), "megett");});
test("megegyük -> megegy", function() {deepEqual( Stem("megegyük"), "megegy");});
test("megevétele -> megevétel", function() {deepEqual( Stem("megevétele"), "megevétel");});
test("megfagyasztott -> megfagyasztot", function() {deepEqual( Stem("megfagyasztott"), "megfagyasztot");});
test("megfagyni -> megfagyn", function() {deepEqual( Stem("megfagyni"), "megfagyn");});
test("megfagyunk -> megfagy", function() {deepEqual( Stem("megfagyunk"), "megfagy");});
test("megfagyott -> megfagyot", function() {deepEqual( Stem("megfagyott"), "megfagyot");});
test("megfejel -> megfejel", function() {deepEqual( Stem("megfejel"), "megfejel");});
test("megfejteni -> megfejten", function() {deepEqual( Stem("megfejteni"), "megfejten");});
test("megfejtette -> megfejtett", function() {deepEqual( Stem("megfejtette"), "megfejtett");});
test("megfejtett -> megfejtet", function() {deepEqual( Stem("megfejtett"), "megfejtet");});
test("megfejthetetlen -> megfejthetetl", function() {deepEqual( Stem("megfejthetetlen"), "megfejthetetl");});
test("megfejtéséhez -> megfejtés", function() {deepEqual( Stem("megfejtéséhez"), "megfejtés");});
test("megfeledkezett -> megfeledkezet", function() {deepEqual( Stem("megfeledkezett"), "megfeledkezet");});
test("megfeledkezni -> megfeledkezn", function() {deepEqual( Stem("megfeledkezni"), "megfeledkezn");});
test("megfeledkezniük -> megfeledkezn", function() {deepEqual( Stem("megfeledkezniük"), "megfeledkezn");});
test("megfeledkeznünk -> megfeledkezn", function() {deepEqual( Stem("megfeledkeznünk"), "megfeledkezn");});
test("megfeledkeztek -> megfeledkezt", function() {deepEqual( Stem("megfeledkeztek"), "megfeledkezt");});
test("megfeledkeztem -> megfeledkezt", function() {deepEqual( Stem("megfeledkeztem"), "megfeledkezt");});
test("megfeledkezve -> megfeledkezv", function() {deepEqual( Stem("megfeledkezve"), "megfeledkezv");});
test("megfelel -> megfelel", function() {deepEqual( Stem("megfelel"), "megfelel");});
test("megfeleljek -> megfelelj", function() {deepEqual( Stem("megfeleljek"), "megfelelj");});
test("megfeleljen -> megfelelj", function() {deepEqual( Stem("megfeleljen"), "megfelelj");});
test("megfeleljenek -> megfelel", function() {deepEqual( Stem("megfeleljenek"), "megfelel");});
test("megfelelne -> megfeleln", function() {deepEqual( Stem("megfelelne"), "megfeleln");});
test("megfelelnek -> megfelel", function() {deepEqual( Stem("megfelelnek"), "megfelel");});
test("megfelelni -> megfeleln", function() {deepEqual( Stem("megfelelni"), "megfeleln");});
test("megfelelnie -> megfeleln", function() {deepEqual( Stem("megfelelnie"), "megfeleln");});
test("megfelelniük -> megfeleln", function() {deepEqual( Stem("megfelelniük"), "megfeleln");});
test("megfelelnének -> megfeleln", function() {deepEqual( Stem("megfelelnének"), "megfeleln");});
test("megfelelünk -> megfelel", function() {deepEqual( Stem("megfelelünk"), "megfelel");});
test("megfelelt -> megfelel", function() {deepEqual( Stem("megfelelt"), "megfelel");});
test("megfeleltek -> megfelelt", function() {deepEqual( Stem("megfeleltek"), "megfelelt");});
test("megfeleltethetők -> megfeleltethető", function() {deepEqual( Stem("megfeleltethetők"), "megfeleltethető");});
test("megfeleltetését -> megfeleltetés", function() {deepEqual( Stem("megfeleltetését"), "megfeleltetés");});
test("megfelelés -> megfelelés", function() {deepEqual( Stem("megfelelés"), "megfelelés");});
test("megfelelése -> megfelelés", function() {deepEqual( Stem("megfelelése"), "megfelelés");});
test("megfelelő -> megfelelő", function() {deepEqual( Stem("megfelelő"), "megfelelő");});
test("megfelelőbb -> megfelelőbb", function() {deepEqual( Stem("megfelelőbb"), "megfelelőbb");});
test("megfelelőbbnek -> megfelelőbb", function() {deepEqual( Stem("megfelelőbbnek"), "megfelelőbb");});
test("megfelelőek -> megfelelő", function() {deepEqual( Stem("megfelelőek"), "megfelelő");});
test("megfelelően -> megfelelő", function() {deepEqual( Stem("megfelelően"), "megfelelő");});
test("megfelelőit -> megfelelő", function() {deepEqual( Stem("megfelelőit"), "megfelelő");});
test("megfelelője -> megfelelő", function() {deepEqual( Stem("megfelelője"), "megfelelő");});
test("megfelelőjét -> megfelelő", function() {deepEqual( Stem("megfelelőjét"), "megfelelő");});
test("megfelelők -> megfelelő", function() {deepEqual( Stem("megfelelők"), "megfelelő");});
test("megfelelőképpen -> megfelelő", function() {deepEqual( Stem("megfelelőképpen"), "megfelelő");});
test("megfelelőnek -> megfelelő", function() {deepEqual( Stem("megfelelőnek"), "megfelelő");});
test("megfelelőre -> megfelelő", function() {deepEqual( Stem("megfelelőre"), "megfelelő");});
test("megfelelőt -> megfelelő", function() {deepEqual( Stem("megfelelőt"), "megfelelő");});
test("megfelelőségi -> megfelelőség", function() {deepEqual( Stem("megfelelőségi"), "megfelelőség");});
test("megfelelősége -> megfelelőség", function() {deepEqual( Stem("megfelelősége"), "megfelelőség");});
test("megfelelőségének -> megfelelőség", function() {deepEqual( Stem("megfelelőségének"), "megfelelőség");});
test("megfelelőségét -> megfelelőség", function() {deepEqual( Stem("megfelelőségét"), "megfelelőség");});
test("megfellebbezte -> megfellebbezt", function() {deepEqual( Stem("megfellebbezte"), "megfellebbezt");});
test("megfeneklik -> megfenekl", function() {deepEqual( Stem("megfeneklik"), "megfenekl");});
test("megfenyegetik -> megfenyeget", function() {deepEqual( Stem("megfenyegetik"), "megfenyeget");});
test("megfenyegette -> megfenyegett", function() {deepEqual( Stem("megfenyegette"), "megfenyegett");});
test("megfenyegettem -> megfenyegett", function() {deepEqual( Stem("megfenyegettem"), "megfenyegett");});
test("megfenyítették -> megfenyítette", function() {deepEqual( Stem("megfenyítették"), "megfenyítette");});
test("megfertőzhette -> megfertőzhett", function() {deepEqual( Stem("megfertőzhette"), "megfertőzhett");});
test("megfertőztek -> megfertőzt", function() {deepEqual( Stem("megfertőztek"), "megfertőzt");});
test("megfertőzték -> megfertőzte", function() {deepEqual( Stem("megfertőzték"), "megfertőzte");});
test("megfesteni -> megfesten", function() {deepEqual( Stem("megfesteni"), "megfesten");});
test("megfestve -> megfestv", function() {deepEqual( Stem("megfestve"), "megfestv");});
test("megfeszített -> megfeszítet", function() {deepEqual( Stem("megfeszített"), "megfeszítet");});
test("megfeszítésével -> megfeszítés", function() {deepEqual( Stem("megfeszítésével"), "megfeszítés");});
test("megfiatalodott -> megfiatalodot", function() {deepEqual( Stem("megfiatalodott"), "megfiatalodot");});
test("megfigyelheti -> megfigyelhet", function() {deepEqual( Stem("megfigyelheti"), "megfigyelhet");});
test("megfigyelhetik -> megfigyelhet", function() {deepEqual( Stem("megfigyelhetik"), "megfigyelhet");});
test("megfigyelhettek -> megfigyelhett", function() {deepEqual( Stem("megfigyelhettek"), "megfigyelhett");});
test("megfigyelhető -> megfigyelhető", function() {deepEqual( Stem("megfigyelhető"), "megfigyelhető");});
test("megfgyelni -> megfgyeln", function() {deepEqual( Stem("megfgyelni"), "megfgyeln");});
test("megfigyelik -> megfigyel", function() {deepEqual( Stem("megfigyelik"), "megfigyel");});
test("megfigyelje -> megfigyel", function() {deepEqual( Stem("megfigyelje"), "megfigyel");});
test("megfigyelni -> megfigyeln", function() {deepEqual( Stem("megfigyelni"), "megfigyeln");});
test("megfigyelte -> megfigyelt", function() {deepEqual( Stem("megfigyelte"), "megfigyelt");});
test("megfigyelt -> megfigyel", function() {deepEqual( Stem("megfigyelt"), "megfigyel");});
test("megfigyeltekkel -> megfigyelt", function() {deepEqual( Stem("megfigyeltekkel"), "megfigyelt");});
test("megfigyelttől -> megfigyelt", function() {deepEqual( Stem("megfigyelttől"), "megfigyelt");});
test("megfigyelés -> megfigyelés", function() {deepEqual( Stem("megfigyelés"), "megfigyelés");});
test("megfigyelése -> megfigyelés", function() {deepEqual( Stem("megfigyelése"), "megfigyelés");});
test("megfigyeléseivel -> megfigyelés", function() {deepEqual( Stem("megfigyeléseivel"), "megfigyelés");});
test("megfigyelésekkel -> megfigyelés", function() {deepEqual( Stem("megfigyelésekkel"), "megfigyelés");});
test("megfigyeléssel -> megfigyelés", function() {deepEqual( Stem("megfigyeléssel"), "megfigyelés");});
test("megfigyelést -> megfigyelés", function() {deepEqual( Stem("megfigyelést"), "megfigyelés");});
test("megfigyelésére -> megfigyelés", function() {deepEqual( Stem("megfigyelésére"), "megfigyelés");});
test("megfigyelését -> megfigyelés", function() {deepEqual( Stem("megfigyelését"), "megfigyelés");});
test("megfigyelési -> megfigyelés", function() {deepEqual( Stem("megfigyelési"), "megfigyelés");});
test("megfigyelőhajót -> megfigyelőhajó", function() {deepEqual( Stem("megfigyelőhajót"), "megfigyelőhajó");});
test("megfigyelő -> megfigyelő", function() {deepEqual( Stem("megfigyelő"), "megfigyelő");});
test("megfigyelőjét -> megfigyelő", function() {deepEqual( Stem("megfigyelőjét"), "megfigyelő");});
test("megfigyelők -> megfigyelő", function() {deepEqual( Stem("megfigyelők"), "megfigyelő");});
test("megfigyelőket -> megfigyelő", function() {deepEqual( Stem("megfigyelőket"), "megfigyelő");});
test("megfigyelőképessége -> megfigyelőképesség", function() {deepEqual( Stem("megfigyelőképessége"), "megfigyelőképesség");});
test("megfigyelőmissziójának -> megfigyelőmisszió", function() {deepEqual( Stem("megfigyelőmissziójának"), "megfigyelőmisszió");});
test("megfigyelőprogramok -> megfigyelőprogram", function() {deepEqual( Stem("megfigyelőprogramok"), "megfigyelőprogram");});
test("megfilmesítés -> megfilmesítés", function() {deepEqual( Stem("megfilmesítés"), "megfilmesítés");});
test("megfilmesítése -> megfilmesítés", function() {deepEqual( Stem("megfilmesítése"), "megfilmesítés");});
test("megfilmesítést -> megfilmesítés", function() {deepEqual( Stem("megfilmesítést"), "megfilmesítés");});
test("megfilmesítésére -> megfilmesítés", function() {deepEqual( Stem("megfilmesítésére"), "megfilmesítés");});
test("megfilmesítési -> megfilmesítés", function() {deepEqual( Stem("megfilmesítési"), "megfilmesítés");});
test("megfizethetetlen -> megfizethetetl", function() {deepEqual( Stem("megfizethetetlen"), "megfizethetetl");});
test("megfizethetetlenek -> megfizethetetl", function() {deepEqual( Stem("megfizethetetlenek"), "megfizethetetl");});
test("megfizetheti -> megfizethet", function() {deepEqual( Stem("megfizetheti"), "megfizethet");});
test("megfizethető -> megfizethető", function() {deepEqual( Stem("megfizethető"), "megfizethető");});
test("megfizethetővé -> megfizethető", function() {deepEqual( Stem("megfizethetővé"), "megfizethető");});
test("megfizetett -> megfizetet", function() {deepEqual( Stem("megfizetett"), "megfizetet");});
test("megfizeti -> megfizet", function() {deepEqual( Stem("megfizeti"), "megfizet");});
test("megfizetik -> megfizet", function() {deepEqual( Stem("megfizetik"), "megfizet");});
test("megfizetnek -> megfizet", function() {deepEqual( Stem("megfizetnek"), "megfizet");});
test("megfizetni -> megfizetn", function() {deepEqual( Stem("megfizetni"), "megfizetn");});
test("megfizetnie -> megfizetn", function() {deepEqual( Stem("megfizetnie"), "megfizetn");});
test("megfizetniük -> megfizetn", function() {deepEqual( Stem("megfizetniük"), "megfizetn");});
test("megfizette -> megfizett", function() {deepEqual( Stem("megfizette"), "megfizett");});
test("megfizették -> megfizette", function() {deepEqual( Stem("megfizették"), "megfizette");});
test("megfizettetni -> megfizettetn", function() {deepEqual( Stem("megfizettetni"), "megfizettetn");});
test("megfizetése -> megfizetés", function() {deepEqual( Stem("megfizetése"), "megfizetés");});
test("megfizetéséhez -> megfizetés", function() {deepEqual( Stem("megfizetéséhez"), "megfizetés");});
test("megfizetésének -> megfizetés", function() {deepEqual( Stem("megfizetésének"), "megfizetés");});
test("megfizetésére -> megfizetés", function() {deepEqual( Stem("megfizetésére"), "megfizetés");});
test("megfizetését -> megfizetés", function() {deepEqual( Stem("megfizetését"), "megfizetés");});
test("megfizetésével -> megfizetés", function() {deepEqual( Stem("megfizetésével"), "megfizetés");});
test("megfizetéséért -> megfizetés", function() {deepEqual( Stem("megfizetéséért"), "megfizetés");});
test("megfogadják -> megfogadja", function() {deepEqual( Stem("megfogadják"), "megfogadja");});
test("megfogadta -> megfogadt", function() {deepEqual( Stem("megfogadta"), "megfogadt");});
test("megfogadtam -> megfogadt", function() {deepEqual( Stem("megfogadtam"), "megfogadt");});
test("megfogadták -> megfogadta", function() {deepEqual( Stem("megfogadták"), "megfogadta");});
test("megfogalmazhatok -> megfogalmazhat", function() {deepEqual( Stem("megfogalmazhatok"), "megfogalmazhat");});
test("megfogalmazható -> megfogalmazható", function() {deepEqual( Stem("megfogalmazható"), "megfogalmazható");});
test("megfogalmaz -> megfogalmaz", function() {deepEqual( Stem("megfogalmaz"), "megfogalmaz");});
test("megfogalmazni -> megfogalmazn", function() {deepEqual( Stem("megfogalmazni"), "megfogalmazn");});
test("megfogalmaznia -> megfogalmazn", function() {deepEqual( Stem("megfogalmaznia"), "megfogalmazn");});
test("megfogalmazta -> megfogalmazt", function() {deepEqual( Stem("megfogalmazta"), "megfogalmazt");});
test("megfogalmazza -> megfogalmazz", function() {deepEqual( Stem("megfogalmazza"), "megfogalmazz");});
test("megfogalmazott -> megfogalmazot", function() {deepEqual( Stem("megfogalmazott"), "megfogalmazot");});
test("megfogalmazója -> megfogalmazó", function() {deepEqual( Stem("megfogalmazója"), "megfogalmazó");});
test("megfogalmazás -> megfogalmazás", function() {deepEqual( Stem("megfogalmazás"), "megfogalmazás");});
test("megfogalmazása -> megfogalmazás", function() {deepEqual( Stem("megfogalmazása"), "megfogalmazás");});
test("megfogalmazásban -> megfogalmazás", function() {deepEqual( Stem("megfogalmazásban"), "megfogalmazás");});
test("megfogalmazásból -> megfogalmazás", function() {deepEqual( Stem("megfogalmazásból"), "megfogalmazás");});
test("megfogalmazásoknál -> megfogalmazás", function() {deepEqual( Stem("megfogalmazásoknál"), "megfogalmazás");});
test("megfogalmazásra -> megfogalmazás", function() {deepEqual( Stem("megfogalmazásra"), "megfogalmazás");});
test("megfogalmazással -> megfogalmazás", function() {deepEqual( Stem("megfogalmazással"), "megfogalmazás");});
test("megfogalmazásában -> megfogalmazás", function() {deepEqual( Stem("megfogalmazásában"), "megfogalmazás");});
test("megfogalmazásából -> megfogalmazás", function() {deepEqual( Stem("megfogalmazásából"), "megfogalmazás");});
test("megfogalmazásához -> megfogalmazás", function() {deepEqual( Stem("megfogalmazásához"), "megfogalmazás");});
test("megfogalmazásán -> megfogalmazás", function() {deepEqual( Stem("megfogalmazásán"), "megfogalmazás");});
test("megfogalmazását -> megfogalmazás", function() {deepEqual( Stem("megfogalmazását"), "megfogalmazás");});
test("megfogalmazásával -> megfogalmazás", function() {deepEqual( Stem("megfogalmazásával"), "megfogalmazás");});
test("megfogalmazódott -> megfogalmazódot", function() {deepEqual( Stem("megfogalmazódott"), "megfogalmazódot");});
test("megfoghatatlan -> megfoghatatl", function() {deepEqual( Stem("megfoghatatlan"), "megfoghatatl");});
test("megfoghatónak -> megfogható", function() {deepEqual( Stem("megfoghatónak"), "megfogható");});
test("megfog -> megfog", function() {deepEqual( Stem("megfog"), "megfog");});
test("megfogja -> megfog", function() {deepEqual( Stem("megfogja"), "megfog");});
test("megfogják -> megfogja", function() {deepEqual( Stem("megfogják"), "megfogja");});
test("megfognak -> megfog", function() {deepEqual( Stem("megfognak"), "megfog");});
test("megfogni -> megfogn", function() {deepEqual( Stem("megfogni"), "megfogn");});
test("megfogta -> megfogt", function() {deepEqual( Stem("megfogta"), "megfogt");});
test("megfogtam -> megfogt", function() {deepEqual( Stem("megfogtam"), "megfogt");});
test("megfogtuk -> megfogt", function() {deepEqual( Stem("megfogtuk"), "megfogt");});
test("megfogták -> megfogta", function() {deepEqual( Stem("megfogták"), "megfogta");});
test("megfogott -> megfogot", function() {deepEqual( Stem("megfogott"), "megfogot");});
test("megfogyatkozott -> megfogyatkozot", function() {deepEqual( Stem("megfogyatkozott"), "megfogyatkozot");});
test("megfogásuk -> megfogás", function() {deepEqual( Stem("megfogásuk"), "megfogás");});
test("megfojthatná -> megfojthatna", function() {deepEqual( Stem("megfojthatná"), "megfojthatna");});
test("megfojtották -> megfojtotta", function() {deepEqual( Stem("megfojtották"), "megfojtotta");});
test("megfontolandó -> megfontolandó", function() {deepEqual( Stem("megfontolandó"), "megfontolandó");});
test("megfontolják -> megfontolja", function() {deepEqual( Stem("megfontolják"), "megfontolja");});
test("megfontolt -> megfontol", function() {deepEqual( Stem("megfontolt"), "megfontol");});
test("megfontoltabb -> megfontoltabb", function() {deepEqual( Stem("megfontoltabb"), "megfontoltabb");});
test("megfontoltan -> megfontolt", function() {deepEqual( Stem("megfontoltan"), "megfontolt");});
test("megfontoltság -> megfontoltság", function() {deepEqual( Stem("megfontoltság"), "megfontoltság");});
test("megfontoltságában -> megfontoltság", function() {deepEqual( Stem("megfontoltságában"), "megfontoltság");});
test("megfontolás -> megfontolás", function() {deepEqual( Stem("megfontolás"), "megfontolás");});
test("megfontolásaikat -> megfontolás", function() {deepEqual( Stem("megfontolásaikat"), "megfontolás");});
test("megfontolásból -> megfontolás", function() {deepEqual( Stem("megfontolásból"), "megfontolás");});
test("megfontolások -> megfontolás", function() {deepEqual( Stem("megfontolások"), "megfontolás");});
test("megfontolásokat -> megfontolás", function() {deepEqual( Stem("megfontolásokat"), "megfontolás");});
test("megfontolásokból -> megfontolás", function() {deepEqual( Stem("megfontolásokból"), "megfontolás");});
test("megfontoláson -> megfontolás", function() {deepEqual( Stem("megfontoláson"), "megfontolás");});
test("megfordult -> megfordul", function() {deepEqual( Stem("megfordult"), "megfordul");});
test("megfordultak -> megfordult", function() {deepEqual( Stem("megfordultak"), "megfordult");});
test("megfordultam -> megfordult", function() {deepEqual( Stem("megfordultam"), "megfordult");});
test("megfordul -> megfor", function() {deepEqual( Stem("megfordul"), "megfor");});
test("megfordultunk -> megfordult", function() {deepEqual( Stem("megfordultunk"), "megfordult");});
test("megfordítani -> megfordítan", function() {deepEqual( Stem("megfordítani"), "megfordítan");});
test("megfordította -> megfordított", function() {deepEqual( Stem("megfordította"), "megfordított");});
test("megformálás -> megformálás", function() {deepEqual( Stem("megformálás"), "megformálás");});
test("megformálása -> megformálás", function() {deepEqual( Stem("megformálása"), "megformálás");});
test("megformázandó -> megformázandó", function() {deepEqual( Stem("megformázandó"), "megformázandó");});
test("megformázhatjuk -> megformázhat", function() {deepEqual( Stem("megformázhatjuk"), "megformázhat");});
test("megformázható -> megformázható", function() {deepEqual( Stem("megformázható"), "megformázható");});
test("megformázhatók -> megformázható", function() {deepEqual( Stem("megformázhatók"), "megformázható");});
test("megformázni -> megformázn", function() {deepEqual( Stem("megformázni"), "megformázn");});
test("megformázva -> megformázv", function() {deepEqual( Stem("megformázva"), "megformázv");});
test("megformázása -> megformázás", function() {deepEqual( Stem("megformázása"), "megformázás");});
test("megformázásakor -> megformázás", function() {deepEqual( Stem("megformázásakor"), "megformázás");});
test("megformázását -> megformázás", function() {deepEqual( Stem("megformázását"), "megformázás");});
test("megformázásával -> megformázás", function() {deepEqual( Stem("megformázásával"), "megformázás");});
test("megfossza -> megfossz", function() {deepEqual( Stem("megfossza"), "megfossz");});
test("megfosszák -> megfossza", function() {deepEqual( Stem("megfosszák"), "megfossza");});
test("megfosztja -> megfoszt", function() {deepEqual( Stem("megfosztja"), "megfoszt");});
test("megfosztják -> megfosztja", function() {deepEqual( Stem("megfosztják"), "megfosztja");});
test("megfosztotta -> megfosztott", function() {deepEqual( Stem("megfosztotta"), "megfosztott");});
test("megfosztották -> megfosztotta", function() {deepEqual( Stem("megfosztották"), "megfosztotta");});
test("megfosztva -> megfosztv", function() {deepEqual( Stem("megfosztva"), "megfosztv");});
test("megfosztása -> megfosztás", function() {deepEqual( Stem("megfosztása"), "megfosztás");});
test("megfosztását -> megfosztás", function() {deepEqual( Stem("megfosztását"), "megfosztás");});
test("megfullad -> megfull", function() {deepEqual( Stem("megfullad"), "megfull");});
test("megfulladok -> megfullad", function() {deepEqual( Stem("megfulladok"), "megfullad");});
test("megfulladtak -> megfulladt", function() {deepEqual( Stem("megfulladtak"), "megfulladt");});
test("megfulladtam -> megfulladt", function() {deepEqual( Stem("megfulladtam"), "megfulladt");});
test("megfutamodni -> megfutamodn", function() {deepEqual( Stem("megfutamodni"), "megfutamodn");});
test("megfutamodás -> megfutamodás", function() {deepEqual( Stem("megfutamodás"), "megfutamodás");});
test("megfuttatom -> megfuttat", function() {deepEqual( Stem("megfuttatom"), "megfuttat");});
test("megfuttatott -> megfuttatot", function() {deepEqual( Stem("megfuttatott"), "megfuttatot");});
test("megfájdul -> megfáj", function() {deepEqual( Stem("megfájdul"), "megfáj");});
test("megfájdult -> megfájdul", function() {deepEqual( Stem("megfájdult"), "megfájdul");});
test("megfájdítja -> megfájdít", function() {deepEqual( Stem("megfájdítja"), "megfájdít");});
test("megfáradt -> megfár", function() {deepEqual( Stem("megfáradt"), "megfár");});
test("megfáradva -> megfáradv", function() {deepEqual( Stem("megfáradva"), "megfáradv");});
test("megfárasztotta -> megfárasztott", function() {deepEqual( Stem("megfárasztotta"), "megfárasztott");});
test("megfásult -> megfásul", function() {deepEqual( Stem("megfásult"), "megfásul");});
test("megfáztam -> megfázt", function() {deepEqual( Stem("megfáztam"), "megfázt");});
test("megfáztok -> megfázt", function() {deepEqual( Stem("megfáztok"), "megfázt");});
test("megfázzunk -> megfázz", function() {deepEqual( Stem("megfázzunk"), "megfázz");});
test("megfázás -> megfázás", function() {deepEqual( Stem("megfázás"), "megfázás");});
test("megfékezni -> megfékezn", function() {deepEqual( Stem("megfékezni"), "megfékezn");});
test("megfékezésére -> megfékezés", function() {deepEqual( Stem("megfékezésére"), "megfékezés");});
test("megfékezését -> megfékezés", function() {deepEqual( Stem("megfékezését"), "megfékezés");});
test("megfélemlítés -> megfélemlítés", function() {deepEqual( Stem("megfélemlítés"), "megfélemlítés");});
test("megférnek -> megfér", function() {deepEqual( Stem("megférnek"), "megfér");});
test("megfésülködni -> megfésülködn", function() {deepEqual( Stem("megfésülködni"), "megfésülködn");});
test("megfőzte -> megfőzt", function() {deepEqual( Stem("megfőzte"), "megfőzt");});
test("megfőzze -> megfőzz", function() {deepEqual( Stem("megfőzze"), "megfőzz");});
test("megfőzésig -> megfőzés", function() {deepEqual( Stem("megfőzésig"), "megfőzés");});
test("megfúrniuk -> megfúrn", function() {deepEqual( Stem("megfúrniuk"), "megfúrn");});
test("megfürdetem -> megfürdet", function() {deepEqual( Stem("megfürdetem"), "megfürdet");});
test("megfürdetjük -> megfürdet", function() {deepEqual( Stem("megfürdetjük"), "megfürdet");});
test("megfürdött -> megfürdöt", function() {deepEqual( Stem("megfürdött"), "megfürdöt");});
test("megfürödni -> megfürödn", function() {deepEqual( Stem("megfürödni"), "megfürödn");});
test("megfürdök -> megfürd", function() {deepEqual( Stem("megfürdök"), "megfürd");});
test("megfürödtem -> megfürödt", function() {deepEqual( Stem("megfürödtem"), "megfürödt");});
test("megfürödtünk -> megfürödt", function() {deepEqual( Stem("megfürödtünk"), "megfürödt");});
test("megfürödve -> megfürödv", function() {deepEqual( Stem("megfürödve"), "megfürödv");});
test("megfürösztik -> megfüröszt", function() {deepEqual( Stem("megfürösztik"), "megfüröszt");});
test("megfüstölte -> megfüstölt", function() {deepEqual( Stem("megfüstölte"), "megfüstölt");});
test("meggazdagodni -> meggazdagodn", function() {deepEqual( Stem("meggazdagodni"), "meggazdagodn");});
test("meggazdagszik -> meggazdagsz", function() {deepEqual( Stem("meggazdagszik"), "meggazdagsz");});
test("meggazdagodott -> meggazdagodot", function() {deepEqual( Stem("meggazdagodott"), "meggazdagodot");});
test("meggazdagodva -> meggazdagodv", function() {deepEqual( Stem("meggazdagodva"), "meggazdagodv");});
test("meggazdagodás -> meggazdagodás", function() {deepEqual( Stem("meggazdagodás"), "meggazdagodás");});
test("meggazdagodással -> meggazdagodás", function() {deepEqual( Stem("meggazdagodással"), "meggazdagodás");});
test("meggazdagodást -> meggazdagodás", function() {deepEqual( Stem("meggazdagodást"), "meggazdagodás");});
test("meggondolatlan -> meggondolatl", function() {deepEqual( Stem("meggondolatlan"), "meggondolatl");});
test("meggondolatlanul -> meggondolatlan", function() {deepEqual( Stem("meggondolatlanul"), "meggondolatlan");});
test("meggondolhatja -> meggondolhat", function() {deepEqual( Stem("meggondolhatja"), "meggondolhat");});
test("meggondolja -> meggondol", function() {deepEqual( Stem("meggondolja"), "meggondol");});
test("meggondoljuk -> meggondol", function() {deepEqual( Stem("meggondoljuk"), "meggondol");});
test("meggondolni -> meggondoln", function() {deepEqual( Stem("meggondolni"), "meggondoln");});
test("meggondolnám -> meggondolna", function() {deepEqual( Stem("meggondolnám"), "meggondolna");});
test("meggondolom -> meggondol", function() {deepEqual( Stem("meggondolom"), "meggondol");});
test("meggondolta -> meggondolt", function() {deepEqual( Stem("meggondolta"), "meggondolt");});
test("meggondoltam -> meggondolt", function() {deepEqual( Stem("meggondoltam"), "meggondolt");});
test("meggondoltuk -> meggondolt", function() {deepEqual( Stem("meggondoltuk"), "meggondolt");});
test("meggondolták -> meggondolta", function() {deepEqual( Stem("meggondolták"), "meggondolta");});
test("meggondoltan -> meggondolt", function() {deepEqual( Stem("meggondoltan"), "meggondolt");});
test("meggondolás -> meggondolás", function() {deepEqual( Stem("meggondolás"), "meggondolás");});
test("meggondolásból -> meggondolás", function() {deepEqual( Stem("meggondolásból"), "meggondolás");});
test("meggondolások -> meggondolás", function() {deepEqual( Stem("meggondolások"), "meggondolás");});
test("meggondolásokból -> meggondolás", function() {deepEqual( Stem("meggondolásokból"), "meggondolás");});
test("meggondolásra -> meggondolás", function() {deepEqual( Stem("meggondolásra"), "meggondolás");});
test("meggondolástól -> meggondolás", function() {deepEqual( Stem("meggondolástól"), "meggondolás");});
test("meggyaláz -> meggyaláz", function() {deepEqual( Stem("meggyaláz"), "meggyaláz");});
test("meggyaláztak -> meggyalázt", function() {deepEqual( Stem("meggyaláztak"), "meggyalázt");});
test("meggyengíteni -> meggyengíten", function() {deepEqual( Stem("meggyengíteni"), "meggyengíten");});
test("meggyengített -> meggyengítet", function() {deepEqual( Stem("meggyengített"), "meggyengítet");});
test("meggyengült -> meggyengül", function() {deepEqual( Stem("meggyengült"), "meggyengül");});
test("meggyilkolt -> meggyilkol", function() {deepEqual( Stem("meggyilkolt"), "meggyilkol");});
test("meggyilkoltak -> meggyilkolt", function() {deepEqual( Stem("meggyilkoltak"), "meggyilkolt");});
test("meggyilkolni -> meggyilkoln", function() {deepEqual( Stem("meggyilkolni"), "meggyilkoln");});
test("meggyilkolásával -> meggyilkolás", function() {deepEqual( Stem("meggyilkolásával"), "meggyilkolás");});
test("meggyilkolásáért -> meggyilkolás", function() {deepEqual( Stem("meggyilkolásáért"), "meggyilkolás");});
test("meggyorsult -> meggyorsul", function() {deepEqual( Stem("meggyorsult"), "meggyorsul");});
test("meggyorsítja -> meggyorsít", function() {deepEqual( Stem("meggyorsítja"), "meggyorsít");});
test("meggyorsítjuk -> meggyorsít", function() {deepEqual( Stem("meggyorsítjuk"), "meggyorsít");});
test("meggyorsítására -> meggyorsítás", function() {deepEqual( Stem("meggyorsítására"), "meggyorsítás");});
test("meggyorsítását -> meggyorsítás", function() {deepEqual( Stem("meggyorsítását"), "meggyorsítás");});
test("meggypiros -> meggypiros", function() {deepEqual( Stem("meggypiros"), "meggypiros");});
test("meggyulladt -> meggyull", function() {deepEqual( Stem("meggyulladt"), "meggyull");});
test("meggyvörös -> meggyvörös", function() {deepEqual( Stem("meggyvörös"), "meggyvörös");});
test("meggyének -> meggy", function() {deepEqual( Stem("meggyének"), "meggy");});
test("meggyógyulhass -> meggyógyulhass", function() {deepEqual( Stem("meggyógyulhass"), "meggyógyulhass");});
test("meggyógyulni -> meggyógyuln", function() {deepEqual( Stem("meggyógyulni"), "meggyógyuln");});
test("meggyógyul -> meggyógy", function() {deepEqual( Stem("meggyógyul"), "meggyógy");});
test("meggyógyult -> meggyógyul", function() {deepEqual( Stem("meggyógyult"), "meggyógyul");});
test("meggyógyít -> meggyógyí", function() {deepEqual( Stem("meggyógyít"), "meggyógyí");});
test("meggyógyítani -> meggyógyítan", function() {deepEqual( Stem("meggyógyítani"), "meggyógyítan");});
test("meggyógyítsunk -> meggyógyíts", function() {deepEqual( Stem("meggyógyítsunk"), "meggyógyíts");});
test("meggyőz -> meggyőz", function() {deepEqual( Stem("meggyőz"), "meggyőz");});
test("meggyőzi -> meggyőz", function() {deepEqual( Stem("meggyőzi"), "meggyőz");});
test("meggyőzni -> meggyőzn", function() {deepEqual( Stem("meggyőzni"), "meggyőzn");});
test("meggyőznie -> meggyőzn", function() {deepEqual( Stem("meggyőznie"), "meggyőzn");});
test("meggyőzte -> meggyőzt", function() {deepEqual( Stem("meggyőzte"), "meggyőzt");});
test("meggyőzték -> meggyőzte", function() {deepEqual( Stem("meggyőzték"), "meggyőzte");});
test("meggyőzzék -> meggyőzze", function() {deepEqual( Stem("meggyőzzék"), "meggyőzze");});
test("meggyőzöd -> meggyőz", function() {deepEqual( Stem("meggyőzöd"), "meggyőz");});
test("meggyőzése -> meggyőzés", function() {deepEqual( Stem("meggyőzése"), "meggyőzés");});
test("meggyőződjem -> meggyőződj", function() {deepEqual( Stem("meggyőződjem"), "meggyőződj");});
test("meggyőződjék -> meggyőződje", function() {deepEqual( Stem("meggyőződjék"), "meggyőződje");});
test("meggyőződjön -> meggyőződj", function() {deepEqual( Stem("meggyőződjön"), "meggyőződj");});
test("meggyőződni -> meggyőződn", function() {deepEqual( Stem("meggyőződni"), "meggyőződn");});
test("meggyőződve -> meggyőződv", function() {deepEqual( Stem("meggyőződve"), "meggyőződv");});
test("meggyőződés -> meggyőződés", function() {deepEqual( Stem("meggyőződés"), "meggyőződés");});
test("meggyőződése -> meggyőződés", function() {deepEqual( Stem("meggyőződése"), "meggyőződés");});
test("meggyőződéseitől -> meggyőződés", function() {deepEqual( Stem("meggyőződéseitől"), "meggyőződés");});
test("meggyőződésemet -> meggyőződés", function() {deepEqual( Stem("meggyőződésemet"), "meggyőződés");});
test("meggyőződéssel -> meggyőződés", function() {deepEqual( Stem("meggyőződéssel"), "meggyőződés");});
test("meggyőződésük -> meggyőződés", function() {deepEqual( Stem("meggyőződésük"), "meggyőződés");});
test("meggyőződéses -> meggyőződéses", function() {deepEqual( Stem("meggyőződéses"), "meggyőződéses");});
test("meggyőződött -> meggyőződöt", function() {deepEqual( Stem("meggyőződött"), "meggyőződöt");});
test("meggyőző -> meggyőző", function() {deepEqual( Stem("meggyőző"), "meggyőző");});
test("meggyőzőbb -> meggyőzőbb", function() {deepEqual( Stem("meggyőzőbb"), "meggyőzőbb");});
test("meggyőzőek -> meggyőző", function() {deepEqual( Stem("meggyőzőek"), "meggyőző");});
test("meggyőzően -> meggyőző", function() {deepEqual( Stem("meggyőzően"), "meggyőző");});
test("meggyőzőnek -> meggyőző", function() {deepEqual( Stem("meggyőzőnek"), "meggyőző");});
test("meggyőzött -> meggyőzöt", function() {deepEqual( Stem("meggyőzött"), "meggyőzöt");});
test("meggyújtott -> meggyújtot", function() {deepEqual( Stem("meggyújtott"), "meggyújtot");});
test("meggyújtotta -> meggyújtott", function() {deepEqual( Stem("meggyújtotta"), "meggyújtott");});
test("meggyújtották -> meggyújtotta", function() {deepEqual( Stem("meggyújtották"), "meggyújtotta");});
test("meggyúlni -> meggyúln", function() {deepEqual( Stem("meggyúlni"), "meggyúln");});
test("meggyűlt -> meggyűl", function() {deepEqual( Stem("meggyűlt"), "meggyűl");});
test("meggyűlölnének -> meggyűlöln", function() {deepEqual( Stem("meggyűlölnének"), "meggyűlöln");});
test("meggyűlölöm -> meggyűlölö", function() {deepEqual( Stem("meggyűlölöm"), "meggyűlölö");});
test("meggyülemlett -> meggyülemlet", function() {deepEqual( Stem("meggyülemlett"), "meggyülemlet");});
test("meggátolja -> meggátol", function() {deepEqual( Stem("meggátolja"), "meggátol");});
test("meggátolni -> meggátoln", function() {deepEqual( Stem("meggátolni"), "meggátoln");});
test("meggátolnom -> meggátoln", function() {deepEqual( Stem("meggátolnom"), "meggátoln");});
test("meggörnyedt -> meggörny", function() {deepEqual( Stem("meggörnyedt"), "meggörny");});
test("meghagytak -> meghagyt", function() {deepEqual( Stem("meghagytak"), "meghagyt");});
test("meghagytam -> meghagyt", function() {deepEqual( Stem("meghagytam"), "meghagyt");});
test("meghagyták -> meghagyta", function() {deepEqual( Stem("meghagyták"), "meghagyta");});
test("meghagyva -> meghagyv", function() {deepEqual( Stem("meghagyva"), "meghagyv");});
test("meghagyás -> meghagyás", function() {deepEqual( Stem("meghagyás"), "meghagyás");});
test("meghajlott -> meghajlot", function() {deepEqual( Stem("meghajlott"), "meghajlot");});
test("meghajolt -> meghajol", function() {deepEqual( Stem("meghajolt"), "meghajol");});
test("meghajlással -> meghajlás", function() {deepEqual( Stem("meghajlással"), "meghajlás");});
test("meghajoltak -> meghajolt", function() {deepEqual( Stem("meghajoltak"), "meghajolt");});
test("meghajoltunk -> meghajolt", function() {deepEqual( Stem("meghajoltunk"), "meghajolt");});
test("meghajtott -> meghajtot", function() {deepEqual( Stem("meghajtott"), "meghajtot");});
test("meghajtotta -> meghajtott", function() {deepEqual( Stem("meghajtotta"), "meghajtott");});
test("meghajtó-betűjelet -> meghajtó-betűjel", function() {deepEqual( Stem("meghajtó-betűjelet"), "meghajtó-betűjel");});
test("meghajtó -> meghajtó", function() {deepEqual( Stem("meghajtó"), "meghajtó");});
test("meghajtóba -> meghajtó", function() {deepEqual( Stem("meghajtóba"), "meghajtó");});
test("meghajtók -> meghajtó", function() {deepEqual( Stem("meghajtók"), "meghajtó");});
test("meghajtókat -> meghajtó", function() {deepEqual( Stem("meghajtókat"), "meghajtó");});
test("meghajtókon -> meghajtó", function() {deepEqual( Stem("meghajtókon"), "meghajtó");});
test("meghajtóként -> meghajtó", function() {deepEqual( Stem("meghajtóként"), "meghajtó");});
test("meghajtón -> meghajtó", function() {deepEqual( Stem("meghajtón"), "meghajtó");});
test("meghajtónak -> meghajtó", function() {deepEqual( Stem("meghajtónak"), "meghajtó");});
test("meghajtóra -> meghajtó", function() {deepEqual( Stem("meghajtóra"), "meghajtó");});
test("meghajtót -> meghajtó", function() {deepEqual( Stem("meghajtót"), "meghajtó");});
test("meghajtóval -> meghajtó", function() {deepEqual( Stem("meghajtóval"), "meghajtó");});
test("meghajtóprogram -> meghajtóprogr", function() {deepEqual( Stem("meghajtóprogram"), "meghajtóprogr");});
test("meghajtóprogramban -> meghajtóprogr", function() {deepEqual( Stem("meghajtóprogramban"), "meghajtóprogr");});
test("meghajtóprogramból -> meghajtóprogr", function() {deepEqual( Stem("meghajtóprogramból"), "meghajtóprogr");});
test("meghajtóprogramja -> meghajtóprogram", function() {deepEqual( Stem("meghajtóprogramja"), "meghajtóprogram");});
test("meghajtóprogramjában -> meghajtóprogram", function() {deepEqual( Stem("meghajtóprogramjában"), "meghajtóprogram");});
test("meghajtóprogramját -> meghajtóprogram", function() {deepEqual( Stem("meghajtóprogramját"), "meghajtóprogram");});
test("meghajtóprogrammal -> meghajtóprogr", function() {deepEqual( Stem("meghajtóprogrammal"), "meghajtóprogr");});
test("meghajtóprogramok -> meghajtóprogram", function() {deepEqual( Stem("meghajtóprogramok"), "meghajtóprogram");});
test("meghajtóprogramokról -> meghajtóprogram", function() {deepEqual( Stem("meghajtóprogramokról"), "meghajtóprogram");});
test("meghajtóprogramot -> meghajtóprogr", function() {deepEqual( Stem("meghajtóprogramot"), "meghajtóprogr");});
test("meghajtótelepítőben -> meghajtótelepítő", function() {deepEqual( Stem("meghajtótelepítőben"), "meghajtótelepítő");});
test("meghaladhatja -> meghaladhat", function() {deepEqual( Stem("meghaladhatja"), "meghaladhat");});
test("meghaladhatják -> meghaladhatja", function() {deepEqual( Stem("meghaladhatják"), "meghaladhatja");});
test("meghalad -> meghal", function() {deepEqual( Stem("meghalad"), "meghal");});
test("meghaladja -> meghalad", function() {deepEqual( Stem("meghaladja"), "meghalad");});
test("meghaladják -> meghaladja", function() {deepEqual( Stem("meghaladják"), "meghaladja");});
test("meghaladnak -> meghal", function() {deepEqual( Stem("meghaladnak"), "meghal");});
test("meghaladni -> meghaladn", function() {deepEqual( Stem("meghaladni"), "meghaladn");});
test("meghaladta -> meghaladt", function() {deepEqual( Stem("meghaladta"), "meghaladt");});
test("meghaladták -> meghaladta", function() {deepEqual( Stem("meghaladták"), "meghaladta");});
test("meghaladottakká -> meghaladott", function() {deepEqual( Stem("meghaladottakká"), "meghaladott");});
test("meghaladó -> meghaladó", function() {deepEqual( Stem("meghaladó"), "meghaladó");});
test("meghaladóan -> meghaladó", function() {deepEqual( Stem("meghaladóan"), "meghaladó");});
test("meghalhat -> meghalh", function() {deepEqual( Stem("meghalhat"), "meghalh");});
test("meghallgatandó -> meghallgatandó", function() {deepEqual( Stem("meghallgatandó"), "meghallgatandó");});
test("meghallgathatja -> meghallgathat", function() {deepEqual( Stem("meghallgathatja"), "meghallgathat");});
test("meghallgathattam -> meghallgathatt", function() {deepEqual( Stem("meghallgathattam"), "meghallgathatt");});
test("meghallgatható -> meghallgatható", function() {deepEqual( Stem("meghallgatható"), "meghallgatható");});
test("meghallgatott -> meghallgatot", function() {deepEqual( Stem("meghallgatott"), "meghallgatot");});
test("meghallgattatott -> meghallgattatot", function() {deepEqual( Stem("meghallgattatott"), "meghallgattatot");});
test("meghallgassam -> meghallgass", function() {deepEqual( Stem("meghallgassam"), "meghallgass");});
test("meghallgatja -> meghallgat", function() {deepEqual( Stem("meghallgatja"), "meghallgat");});
test("meghallgatják -> meghallgatja", function() {deepEqual( Stem("meghallgatják"), "meghallgatja");});
test("meghallgatnak -> meghallgat", function() {deepEqual( Stem("meghallgatnak"), "meghallgat");});
test("meghallgatni -> meghallgatn", function() {deepEqual( Stem("meghallgatni"), "meghallgatn");});
test("meghallgatom -> meghallgat", function() {deepEqual( Stem("meghallgatom"), "meghallgat");});
test("meghallgatta -> meghallgatt", function() {deepEqual( Stem("meghallgatta"), "meghallgatt");});
test("meghallgattunk -> meghallgatt", function() {deepEqual( Stem("meghallgattunk"), "meghallgatt");});
test("meghallgatták -> meghallgatta", function() {deepEqual( Stem("meghallgatták"), "meghallgatta");});
test("meghallgatunk -> meghallgat", function() {deepEqual( Stem("meghallgatunk"), "meghallgat");});
test("meghallgatása -> meghallgatás", function() {deepEqual( Stem("meghallgatása"), "meghallgatás");});
test("meghallgatásra -> meghallgatás", function() {deepEqual( Stem("meghallgatásra"), "meghallgatás");});
test("meghallgatásának -> meghallgatás", function() {deepEqual( Stem("meghallgatásának"), "meghallgatás");});
test("meghallgatására -> meghallgatás", function() {deepEqual( Stem("meghallgatására"), "meghallgatás");});
test("meghallgatását -> meghallgatás", function() {deepEqual( Stem("meghallgatását"), "meghallgatás");});
test("meghallgatásával -> meghallgatás", function() {deepEqual( Stem("meghallgatásával"), "meghallgatás");});
test("meghallja -> meghall", function() {deepEqual( Stem("meghallja"), "meghall");});
test("meghalljuk -> meghall", function() {deepEqual( Stem("meghalljuk"), "meghall");});
test("meghallják -> meghallja", function() {deepEqual( Stem("meghallják"), "meghallja");});
test("meghallom -> meghall", function() {deepEqual( Stem("meghallom"), "meghall");});
test("meghallotta -> meghallott", function() {deepEqual( Stem("meghallotta"), "meghallott");});
test("meghallottam -> meghallott", function() {deepEqual( Stem("meghallottam"), "meghallott");});
test("meghallottuk -> meghallott", function() {deepEqual( Stem("meghallottuk"), "meghallott");});
test("meghallottunk -> meghallott", function() {deepEqual( Stem("meghallottunk"), "meghallott");});
test("meghallanak -> meghall", function() {deepEqual( Stem("meghallanak"), "meghall");});
test("meghalna -> meghaln", function() {deepEqual( Stem("meghalna"), "meghaln");});
test("meghal -> meghal", function() {deepEqual( Stem("meghal"), "meghal");});
test("meghalni -> meghaln", function() {deepEqual( Stem("meghalni"), "meghaln");});
test("meghalniuk -> meghaln", function() {deepEqual( Stem("meghalniuk"), "meghaln");});
test("meghalnom -> meghaln", function() {deepEqual( Stem("meghalnom"), "meghaln");});
test("meghalnunk -> meghaln", function() {deepEqual( Stem("meghalnunk"), "meghaln");});
test("meghalnánk -> meghalna", function() {deepEqual( Stem("meghalnánk"), "meghalna");});
test("meghalok -> meghal", function() {deepEqual( Stem("meghalok"), "meghal");});
test("meghaltam -> meghalt", function() {deepEqual( Stem("meghaltam"), "meghalt");});
test("meghaltok -> meghalt", function() {deepEqual( Stem("meghaltok"), "meghalt");});
test("meghalunk -> meghal", function() {deepEqual( Stem("meghalunk"), "meghal");});
test("meghalt -> meghal", function() {deepEqual( Stem("meghalt"), "meghal");});
test("meghaltak -> meghalt", function() {deepEqual( Stem("meghaltak"), "meghalt");});
test("meghalálozott -> meghalálozot", function() {deepEqual( Stem("meghalálozott"), "meghalálozot");});
test("meghalás -> meghalás", function() {deepEqual( Stem("meghalás"), "meghalás");});
test("meghalásra -> meghalás", function() {deepEqual( Stem("meghalásra"), "meghalás");});
test("meghalásának -> meghalás", function() {deepEqual( Stem("meghalásának"), "meghalás");});
test("meghamisítani -> meghamisítan", function() {deepEqual( Stem("meghamisítani"), "meghamisítan");});
test("meghamisítja -> meghamisít", function() {deepEqual( Stem("meghamisítja"), "meghamisít");});
test("meghamisítják -> meghamisítja", function() {deepEqual( Stem("meghamisítják"), "meghamisítja");});
test("meghamisították -> meghamisította", function() {deepEqual( Stem("meghamisították"), "meghamisította");});
test("meghamisítsák -> meghamisítsa", function() {deepEqual( Stem("meghamisítsák"), "meghamisítsa");});
test("meghamisítottak -> meghamisított", function() {deepEqual( Stem("meghamisítottak"), "meghamisított");});
test("meghamisítása -> meghamisítás", function() {deepEqual( Stem("meghamisítása"), "meghamisítás");});
test("meghamisításának -> meghamisítás", function() {deepEqual( Stem("meghamisításának"), "meghamisítás");});
test("megharagudott -> megharagudot", function() {deepEqual( Stem("megharagudott"), "megharagudot");});
test("meghatalmazott -> meghatalmazot", function() {deepEqual( Stem("meghatalmazott"), "meghatalmazot");});
test("meghatalmazotti -> meghatalmazott", function() {deepEqual( Stem("meghatalmazotti"), "meghatalmazott");});
test("meghatalmazottal -> meghatalmaz", function() {deepEqual( Stem("meghatalmazottal"), "meghatalmaz");});
test("meghatalmazottat -> meghatalmazott", function() {deepEqual( Stem("meghatalmazottat"), "meghatalmazott");});
test("meghatalmazottja -> meghatalmazott", function() {deepEqual( Stem("meghatalmazottja"), "meghatalmazott");});
test("meghatalmazottjaként -> meghatalmazott", function() {deepEqual( Stem("meghatalmazottjaként"), "meghatalmazott");});
test("meghatalmazottjának -> meghatalmazott", function() {deepEqual( Stem("meghatalmazottjának"), "meghatalmazott");});
test("meghatalmazottját -> meghatalmazott", function() {deepEqual( Stem("meghatalmazottját"), "meghatalmazott");});
test("meghatalmazottként -> meghatalmazott", function() {deepEqual( Stem("meghatalmazottként"), "meghatalmazott");});
test("meghatalmazottnak -> meghatalmazott", function() {deepEqual( Stem("meghatalmazottnak"), "meghatalmazott");});
test("meghatalmazottnál -> meghatalmazott", function() {deepEqual( Stem("meghatalmazottnál"), "meghatalmazott");});
test("meghatalmazta -> meghatalmazt", function() {deepEqual( Stem("meghatalmazta"), "meghatalmazt");});
test("meghatalmazza -> meghatalmazz", function() {deepEqual( Stem("meghatalmazza"), "meghatalmazz");});
test("meghatalmazás -> meghatalmazás", function() {deepEqual( Stem("meghatalmazás"), "meghatalmazás");});
test("meghatalmazása -> meghatalmazás", function() {deepEqual( Stem("meghatalmazása"), "meghatalmazás");});
test("meghatalmazáshoz -> meghatalmazás", function() {deepEqual( Stem("meghatalmazáshoz"), "meghatalmazás");});
test("meghatalmazások -> meghatalmazás", function() {deepEqual( Stem("meghatalmazások"), "meghatalmazás");});
test("meghatalmazáson -> meghatalmazás", function() {deepEqual( Stem("meghatalmazáson"), "meghatalmazás");});
test("meghatalmazásra -> meghatalmazás", function() {deepEqual( Stem("meghatalmazásra"), "meghatalmazás");});
test("meghatalmazásról -> meghatalmazás", function() {deepEqual( Stem("meghatalmazásról"), "meghatalmazás");});
test("meghatalmazással -> meghatalmazás", function() {deepEqual( Stem("meghatalmazással"), "meghatalmazás");});
test("meghatalmazást -> meghatalmazás", function() {deepEqual( Stem("meghatalmazást"), "meghatalmazás");});
test("meghatalmazó -> meghatalmazó", function() {deepEqual( Stem("meghatalmazó"), "meghatalmazó");});
test("meghatott -> meghatot", function() {deepEqual( Stem("meghatott"), "meghatot");});
test("meghatottan -> meghatott", function() {deepEqual( Stem("meghatottan"), "meghatott");});
test("meghatottság -> meghatottság", function() {deepEqual( Stem("meghatottság"), "meghatottság");});
test("meghatottsága -> meghatottság", function() {deepEqual( Stem("meghatottsága"), "meghatottság");});
test("meghatottságtól -> meghatottság", function() {deepEqual( Stem("meghatottságtól"), "meghatottság");});
test("meghatva -> meghatv", function() {deepEqual( Stem("meghatva"), "meghatv");});
test("meghatározandó -> meghatározandó", function() {deepEqual( Stem("meghatározandó"), "meghatározandó");});
test("meghatározatlan -> meghatározatl", function() {deepEqual( Stem("meghatározatlan"), "meghatározatl");});
test("meghatározatlanul -> meghatározatlan", function() {deepEqual( Stem("meghatározatlanul"), "meghatározatlan");});
test("meghatározhatatlan -> meghatározhatatl", function() {deepEqual( Stem("meghatározhatatlan"), "meghatározhatatl");});
test("meghatározhatja -> meghatározhat", function() {deepEqual( Stem("meghatározhatja"), "meghatározhat");});
test("meghatározhat -> meghatározh", function() {deepEqual( Stem("meghatározhat"), "meghatározh");});
test("meghatározhatjuk -> meghatározhat", function() {deepEqual( Stem("meghatározhatjuk"), "meghatározhat");});
test("meghatározhatják -> meghatározhatja", function() {deepEqual( Stem("meghatározhatják"), "meghatározhatja");});
test("meghatározható -> meghatározható", function() {deepEqual( Stem("meghatározható"), "meghatározható");});
test("meghatározhatók -> meghatározható", function() {deepEqual( Stem("meghatározhatók"), "meghatározható");});
test("meghatároz -> meghatároz", function() {deepEqual( Stem("meghatároz"), "meghatároz");});
test("meghatároznak -> meghatároz", function() {deepEqual( Stem("meghatároznak"), "meghatároz");});
test("meghatározni -> meghatározn", function() {deepEqual( Stem("meghatározni"), "meghatározn");});
test("meghatároznia -> meghatározn", function() {deepEqual( Stem("meghatároznia"), "meghatározn");});
test("meghatározniuk -> meghatározn", function() {deepEqual( Stem("meghatározniuk"), "meghatározn");});
test("meghatározná -> meghatározna", function() {deepEqual( Stem("meghatározná"), "meghatározna");});
test("meghatározta -> meghatározt", function() {deepEqual( Stem("meghatározta"), "meghatározt");});
test("meghatározták -> meghatározta", function() {deepEqual( Stem("meghatározták"), "meghatározta");});
test("meghatározza -> meghatározz", function() {deepEqual( Stem("meghatározza"), "meghatározz");});
test("meghatározzák -> meghatározza", function() {deepEqual( Stem("meghatározzák"), "meghatározza");});
test("meghatározott -> meghatározot", function() {deepEqual( Stem("meghatározott"), "meghatározot");});
test("meghatározottak -> meghatározott", function() {deepEqual( Stem("meghatározottak"), "meghatározott");});
test("meghatározottakat -> meghatározott", function() {deepEqual( Stem("meghatározottakat"), "meghatározott");});
test("meghatározottakkal -> meghatározott", function() {deepEqual( Stem("meghatározottakkal"), "meghatározott");});
test("meghatározottakon -> meghatározott", function() {deepEqual( Stem("meghatározottakon"), "meghatározott");});
test("meghatározottaktól -> meghatározott", function() {deepEqual( Stem("meghatározottaktól"), "meghatározott");});
test("meghatározottnak -> meghatározott", function() {deepEqual( Stem("meghatározottnak"), "meghatározott");});
test("meghatározva -> meghatározv", function() {deepEqual( Stem("meghatározva"), "meghatározv");});
test("meghatározás -> meghatározás", function() {deepEqual( Stem("meghatározás"), "meghatározás");});
test("meghatározása -> meghatározás", function() {deepEqual( Stem("meghatározása"), "meghatározás");});
test("meghatározásait -> meghatározás", function() {deepEqual( Stem("meghatározásait"), "meghatározás");});
test("meghatározásaival -> meghatározás", function() {deepEqual( Stem("meghatározásaival"), "meghatározás");});
test("meghatározásakor -> meghatározás", function() {deepEqual( Stem("meghatározásakor"), "meghatározás");});
test("meghatározásaként -> meghatározás", function() {deepEqual( Stem("meghatározásaként"), "meghatározás");});
test("meghatározásból -> meghatározás", function() {deepEqual( Stem("meghatározásból"), "meghatározás");});
test("meghatározások -> meghatározás", function() {deepEqual( Stem("meghatározások"), "meghatározás");});
test("meghatározásra -> meghatározás", function() {deepEqual( Stem("meghatározásra"), "meghatározás");});
test("meghatározással -> meghatározás", function() {deepEqual( Stem("meghatározással"), "meghatározás");});
test("meghatározást -> meghatározás", function() {deepEqual( Stem("meghatározást"), "meghatározás");});
test("meghatározásához -> meghatározás", function() {deepEqual( Stem("meghatározásához"), "meghatározás");});
test("meghatározásáig -> meghatározás", function() {deepEqual( Stem("meghatározásáig"), "meghatározás");});
test("meghatározásának -> meghatározás", function() {deepEqual( Stem("meghatározásának"), "meghatározás");});
test("meghatározásánál -> meghatározás", function() {deepEqual( Stem("meghatározásánál"), "meghatározás");});
test("meghatározására -> meghatározás", function() {deepEqual( Stem("meghatározására"), "meghatározás");});
test("meghatározásáról -> meghatározás", function() {deepEqual( Stem("meghatározásáról"), "meghatározás");});
test("meghatározását -> meghatározás", function() {deepEqual( Stem("meghatározását"), "meghatározás");});
test("meghatározásával -> meghatározás", function() {deepEqual( Stem("meghatározásával"), "meghatározás");});
test("meghatározó -> meghatározó", function() {deepEqual( Stem("meghatározó"), "meghatározó");});
test("meghatározóak -> meghatározó", function() {deepEqual( Stem("meghatározóak"), "meghatározó");});
test("meghatározónak -> meghatározó", function() {deepEqual( Stem("meghatározónak"), "meghatározó");});
test("meghatározót -> meghatározó", function() {deepEqual( Stem("meghatározót"), "meghatározó");});
test("meghatározóvá -> meghatározó", function() {deepEqual( Stem("meghatározóvá"), "meghatározó");});
test("megható -> megható", function() {deepEqual( Stem("megható"), "megható");});
test("meghatóan -> megható", function() {deepEqual( Stem("meghatóan"), "megható");});
test("meghatódott -> meghatódot", function() {deepEqual( Stem("meghatódott"), "meghatódot");});
test("meghatódtam -> meghatódt", function() {deepEqual( Stem("meghatódtam"), "meghatódt");});
test("meghazudtoló -> meghazudtoló", function() {deepEqual( Stem("meghazudtoló"), "meghazudtoló");});
test("meghibásodik -> meghibásod", function() {deepEqual( Stem("meghibásodik"), "meghibásod");});
test("meghibásodott -> meghibásodot", function() {deepEqual( Stem("meghibásodott"), "meghibásodot");});
test("meghibásodás -> meghibásodás", function() {deepEqual( Stem("meghibásodás"), "meghibásodás");});
test("meghibásodása -> meghibásodás", function() {deepEqual( Stem("meghibásodása"), "meghibásodás");});
test("meghibásodásakor -> meghibásodás", function() {deepEqual( Stem("meghibásodásakor"), "meghibásodás");});
test("meghibásodáskor -> meghibásodás", function() {deepEqual( Stem("meghibásodáskor"), "meghibásodás");});
test("meghibásodások -> meghibásodás", function() {deepEqual( Stem("meghibásodások"), "meghibásodás");});
test("meghibásodására -> meghibásodás", function() {deepEqual( Stem("meghibásodására"), "meghibásodás");});
test("meghibásodását -> meghibásodás", function() {deepEqual( Stem("meghibásodását"), "meghibásodás");});
test("meghibásodási -> meghibásodás", function() {deepEqual( Stem("meghibásodási"), "meghibásodás");});
test("meghirdetett -> meghirdetet", function() {deepEqual( Stem("meghirdetett"), "meghirdetet");});
test("meghirdetettekkel -> meghirdetett", function() {deepEqual( Stem("meghirdetettekkel"), "meghirdetett");});
test("meghirdetni -> meghirdetn", function() {deepEqual( Stem("meghirdetni"), "meghirdetn");});
test("meghirdette -> meghirdett", function() {deepEqual( Stem("meghirdette"), "meghirdett");});
test("meghirdettek -> meghirdett", function() {deepEqual( Stem("meghirdettek"), "meghirdett");});
test("meghirdették -> meghirdette", function() {deepEqual( Stem("meghirdették"), "meghirdette");});
test("meghirdetve -> meghirdetv", function() {deepEqual( Stem("meghirdetve"), "meghirdetv");});
test("meghirdetése -> meghirdetés", function() {deepEqual( Stem("meghirdetése"), "meghirdetés");});
test("meghirdetésének -> meghirdetés", function() {deepEqual( Stem("meghirdetésének"), "meghirdetés");});
test("meghirdetésére -> meghirdetés", function() {deepEqual( Stem("meghirdetésére"), "meghirdetés");});
test("meghitt -> meghit", function() {deepEqual( Stem("meghitt"), "meghit");});
test("meghittebb -> meghittebb", function() {deepEqual( Stem("meghittebb"), "meghittebb");});
test("meghitten -> meghitt", function() {deepEqual( Stem("meghitten"), "meghitt");});
test("meghittnek -> meghitt", function() {deepEqual( Stem("meghittnek"), "meghitt");});
test("meghiúsul -> meghiús", function() {deepEqual( Stem("meghiúsul"), "meghiús");});
test("meghiúsult -> meghiúsul", function() {deepEqual( Stem("meghiúsult"), "meghiúsul");});
test("meghiúsultnak -> meghiúsult", function() {deepEqual( Stem("meghiúsultnak"), "meghiúsult");});
test("meghiúsulása -> meghiúsulás", function() {deepEqual( Stem("meghiúsulása"), "meghiúsulás");});
test("meghiúsulástól -> meghiúsulás", function() {deepEqual( Stem("meghiúsulástól"), "meghiúsulás");});
test("meghiúsulásának -> meghiúsulás", function() {deepEqual( Stem("meghiúsulásának"), "meghiúsulás");});
test("meghiúsulására -> meghiúsulás", function() {deepEqual( Stem("meghiúsulására"), "meghiúsulás");});
test("meghiúsulásáról -> meghiúsulás", function() {deepEqual( Stem("meghiúsulásáról"), "meghiúsulás");});
test("meghiúsulását -> meghiúsulás", function() {deepEqual( Stem("meghiúsulását"), "meghiúsulás");});
test("meghiúsítaniuk -> meghiúsítan", function() {deepEqual( Stem("meghiúsítaniuk"), "meghiúsítan");});
test("meghiúsítaná -> meghiúsítana", function() {deepEqual( Stem("meghiúsítaná"), "meghiúsítana");});
test("meghonosodott -> meghonosodot", function() {deepEqual( Stem("meghonosodott"), "meghonosodot");});
test("meghonosítani -> meghonosítan", function() {deepEqual( Stem("meghonosítani"), "meghonosítan");});
test("meghosszabbodott -> meghosszabbodot", function() {deepEqual( Stem("meghosszabbodott"), "meghosszabbodot");});
test("meghosszabbodása -> meghosszabbodás", function() {deepEqual( Stem("meghosszabbodása"), "meghosszabbodás");});
test("meghosszabbítani -> meghosszabbítan", function() {deepEqual( Stem("meghosszabbítani"), "meghosszabbítan");});
test("meghosszabbítanák -> meghosszabbítana", function() {deepEqual( Stem("meghosszabbítanák"), "meghosszabbítana");});
test("meghosszabbította -> meghosszabbított", function() {deepEqual( Stem("meghosszabbította"), "meghosszabbított");});
test("meghosszabbították -> meghosszabbította", function() {deepEqual( Stem("meghosszabbították"), "meghosszabbította");});
test("meghosszabbítsák -> meghosszabbítsa", function() {deepEqual( Stem("meghosszabbítsák"), "meghosszabbítsa");});
test("meghosszabbíthatja -> meghosszabbíthat", function() {deepEqual( Stem("meghosszabbíthatja"), "meghosszabbíthat");});
test("meghosszabbítható -> meghosszabbítható", function() {deepEqual( Stem("meghosszabbítható"), "meghosszabbítható");});
test("meghosszabbított -> meghosszabbítot", function() {deepEqual( Stem("meghosszabbított"), "meghosszabbítot");});
test("meghosszabbítás -> meghosszabbítás", function() {deepEqual( Stem("meghosszabbítás"), "meghosszabbítás");});
test("meghosszabbítása -> meghosszabbítás", function() {deepEqual( Stem("meghosszabbítása"), "meghosszabbítás");});
test("meghosszabbításának -> meghosszabbítás", function() {deepEqual( Stem("meghosszabbításának"), "meghosszabbítás");});
test("meghosszabbításáról -> meghosszabbítás", function() {deepEqual( Stem("meghosszabbításáról"), "meghosszabbítás");});
test("meghosszabbítását -> meghosszabbítás", function() {deepEqual( Stem("meghosszabbítását"), "meghosszabbítás");});
test("meghozatala -> meghozatal", function() {deepEqual( Stem("meghozatala"), "meghozatal");});
test("meghozatalába -> meghozatal", function() {deepEqual( Stem("meghozatalába"), "meghozatal");});
test("meghozatalában -> meghozatal", function() {deepEqual( Stem("meghozatalában"), "meghozatal");});
test("meghozatalához -> meghozatal", function() {deepEqual( Stem("meghozatalához"), "meghozatal");});
test("meghozataláig -> meghozatal", function() {deepEqual( Stem("meghozataláig"), "meghozatal");});
test("meghozatalának -> meghozatal", function() {deepEqual( Stem("meghozatalának"), "meghozatal");});
test("meghozatalánál -> meghozatal", function() {deepEqual( Stem("meghozatalánál"), "meghozatal");});
test("meghozatalára -> meghozatal", function() {deepEqual( Stem("meghozatalára"), "meghozatal");});
test("meghozatalát -> meghozatal", function() {deepEqual( Stem("meghozatalát"), "meghozatal");});
test("meghozatalától -> meghozatal", function() {deepEqual( Stem("meghozatalától"), "meghozatal");});
test("meghozatalával -> meghozatal", function() {deepEqual( Stem("meghozatalával"), "meghozatal");});
test("meghozható -> meghozható", function() {deepEqual( Stem("meghozható"), "meghozható");});
test("meghozott -> meghozot", function() {deepEqual( Stem("meghozott"), "meghozot");});
test("meghozottnak -> meghozott", function() {deepEqual( Stem("meghozottnak"), "meghozott");});
test("meghozta -> meghozt", function() {deepEqual( Stem("meghozta"), "meghozt");});
test("meghozni -> meghozn", function() {deepEqual( Stem("meghozni"), "meghozn");});
test("meghozza -> meghozz", function() {deepEqual( Stem("meghozza"), "meghozz");});
test("meghozó -> meghozó", function() {deepEqual( Stem("meghozó"), "meghozó");});
test("meghurcolt -> meghurcol", function() {deepEqual( Stem("meghurcolt"), "meghurcol");});
test("meghurcolva -> meghurcolv", function() {deepEqual( Stem("meghurcolva"), "meghurcolv");});
test("meghálálják -> meghálálja", function() {deepEqual( Stem("meghálálják"), "meghálálja");});
test("meghálálni -> megháláln", function() {deepEqual( Stem("meghálálni"), "megháláln");});
test("meghálálnám -> meghálálna", function() {deepEqual( Stem("meghálálnám"), "meghálálna");});
test("meghámoztuk -> meghámozt", function() {deepEqual( Stem("meghámoztuk"), "meghámozt");});
test("meghányom -> meghány", function() {deepEqual( Stem("meghányom"), "meghány");});
test("megháromszorozódott -> megháromszorozódot", function() {deepEqual( Stem("megháromszorozódott"), "megháromszorozódot");});
test("megháromszorozódását -> megháromszorozódás", function() {deepEqual( Stem("megháromszorozódását"), "megháromszorozódás");});
test("meghátrálni -> meghátráln", function() {deepEqual( Stem("meghátrálni"), "meghátráln");});
test("meghátrált -> meghátrál", function() {deepEqual( Stem("meghátrált"), "meghátrál");});
test("meghátrálása -> meghátrálás", function() {deepEqual( Stem("meghátrálása"), "meghátrálás");});
test("megházasodok -> megházasod", function() {deepEqual( Stem("megházasodok"), "megházasod");});
test("meghív -> meghív", function() {deepEqual( Stem("meghív"), "meghív");});
test("meghívlak -> meghívl", function() {deepEqual( Stem("meghívlak"), "meghívl");});
test("meghívnak -> meghív", function() {deepEqual( Stem("meghívnak"), "meghív");});
test("meghívni -> meghívn", function() {deepEqual( Stem("meghívni"), "meghívn");});
test("meghívta -> meghívt", function() {deepEqual( Stem("meghívta"), "meghívt");});
test("meghívtak -> meghívt", function() {deepEqual( Stem("meghívtak"), "meghívt");});
test("meghívták -> meghívta", function() {deepEqual( Stem("meghívták"), "meghívta");});
test("meghívott -> meghívot", function() {deepEqual( Stem("meghívott"), "meghívot");});
test("meghívottak -> meghívott", function() {deepEqual( Stem("meghívottak"), "meghívott");});
test("meghívottja -> meghívott", function() {deepEqual( Stem("meghívottja"), "meghívott");});
test("meghívva -> meghívv", function() {deepEqual( Stem("meghívva"), "meghívv");});
test("meghívásos -> meghívásos", function() {deepEqual( Stem("meghívásos"), "meghívásos");});
test("meghívás -> meghívás", function() {deepEqual( Stem("meghívás"), "meghívás");});
test("meghívása -> meghívás", function() {deepEqual( Stem("meghívása"), "meghívás");});
test("meghívásról -> meghívás", function() {deepEqual( Stem("meghívásról"), "meghívás");});
test("meghívást -> meghívás", function() {deepEqual( Stem("meghívást"), "meghívás");});
test("meghívására -> meghívás", function() {deepEqual( Stem("meghívására"), "meghívás");});
test("meghívásától -> meghívás", function() {deepEqual( Stem("meghívásától"), "meghívás");});
test("meghívónak -> meghívó", function() {deepEqual( Stem("meghívónak"), "meghívó");});
test("meghívóra -> meghívó", function() {deepEqual( Stem("meghívóra"), "meghívó");});
test("meghívót -> meghívó", function() {deepEqual( Stem("meghívót"), "meghívó");});
test("meghívóval -> meghívó", function() {deepEqual( Stem("meghívóval"), "meghívó");});
test("meghívó -> meghívó", function() {deepEqual( Stem("meghívó"), "meghívó");});
test("meghívóban -> meghívó", function() {deepEqual( Stem("meghívóban"), "meghívó");});
test("meghívója -> meghívó", function() {deepEqual( Stem("meghívója"), "meghívó");});
test("meghívójában -> meghívó", function() {deepEqual( Stem("meghívójában"), "meghívó");});
test("meghívók -> meghívó", function() {deepEqual( Stem("meghívók"), "meghívó");});
test("meghívómegváltás -> meghívómegváltás", function() {deepEqual( Stem("meghívómegváltás"), "meghívómegváltás");});
test("meghódolni -> meghódoln", function() {deepEqual( Stem("meghódolni"), "meghódoln");});
test("meghódította -> meghódított", function() {deepEqual( Stem("meghódította"), "meghódított");});
test("meghódítani -> meghódítan", function() {deepEqual( Stem("meghódítani"), "meghódítan");});
test("meghódítaná -> meghódítana", function() {deepEqual( Stem("meghódítaná"), "meghódítana");});
test("meghódíthatatlan -> meghódíthatatl", function() {deepEqual( Stem("meghódíthatatlan"), "meghódíthatatl");});
test("meghódíthatná -> meghódíthatna", function() {deepEqual( Stem("meghódíthatná"), "meghódíthatna");});
test("meghódíthatóvá -> meghódítható", function() {deepEqual( Stem("meghódíthatóvá"), "meghódítható");});
test("meghódított -> meghódítot", function() {deepEqual( Stem("meghódított"), "meghódítot");});
test("meghódítás -> meghódítás", function() {deepEqual( Stem("meghódítás"), "meghódítás");});
test("meghódításában -> meghódítás", function() {deepEqual( Stem("meghódításában"), "meghódítás");});
test("meghódításának -> meghódítás", function() {deepEqual( Stem("meghódításának"), "meghódítás");});
test("meghódítására -> meghódítás", function() {deepEqual( Stem("meghódítására"), "meghódítás");});
test("meghódítását -> meghódítás", function() {deepEqual( Stem("meghódítását"), "meghódítás");});
test("meghódítói -> meghódító", function() {deepEqual( Stem("meghódítói"), "meghódító");});
test("meghökkent -> meghökken", function() {deepEqual( Stem("meghökkent"), "meghökken");});
test("meghökkentő -> meghökkentő", function() {deepEqual( Stem("meghökkentő"), "meghökkentő");});
test("meghökkenve -> meghökkenv", function() {deepEqual( Stem("meghökkenve"), "meghökkenv");});
test("meghökkenés -> meghökkenés", function() {deepEqual( Stem("meghökkenés"), "meghökkenés");});
test("meghökkenést -> meghökkenés", function() {deepEqual( Stem("meghökkenést"), "meghökkenés");});
test("meghúzgálták -> meghúzgálta", function() {deepEqual( Stem("meghúzgálták"), "meghúzgálta");});
test("meghúzni -> meghúzn", function() {deepEqual( Stem("meghúzni"), "meghúzn");});
test("meghúzta -> meghúzt", function() {deepEqual( Stem("meghúzta"), "meghúzt");});
test("meghúztam -> meghúzt", function() {deepEqual( Stem("meghúztam"), "meghúzt");});
test("meghúzták -> meghúzta", function() {deepEqual( Stem("meghúzták"), "meghúzta");});
test("meghúzza -> meghúzz", function() {deepEqual( Stem("meghúzza"), "meghúzz");});
test("meghúzódhat -> meghúzódh", function() {deepEqual( Stem("meghúzódhat"), "meghúzódh");});
test("meghúzódott -> meghúzódot", function() {deepEqual( Stem("meghúzódott"), "meghúzódot");});
test("meghűlt -> meghűl", function() {deepEqual( Stem("meghűlt"), "meghűl");});
test("meghülyült -> meghülyül", function() {deepEqual( Stem("meghülyült"), "meghülyül");});
test("megidézni -> megidézn", function() {deepEqual( Stem("megidézni"), "megidézn");});
test("megidézte -> megidézt", function() {deepEqual( Stem("megidézte"), "megidézt");});
test("megidézve -> megidézv", function() {deepEqual( Stem("megidézve"), "megidézv");});
test("megigazítani -> megigazítan", function() {deepEqual( Stem("megigazítani"), "megigazítan");});
test("megigya -> megigy", function() {deepEqual( Stem("megigya"), "megigy");});
test("megihatnánk -> megihatna", function() {deepEqual( Stem("megihatnánk"), "megihatna");});
test("megijedek -> megijed", function() {deepEqual( Stem("megijedek"), "megijed");});
test("megijedjünk -> megijedj", function() {deepEqual( Stem("megijedjünk"), "megijedj");});
test("megijedtek -> megijedt", function() {deepEqual( Stem("megijedtek"), "megijedt");});
test("megijedtem -> megijedt", function() {deepEqual( Stem("megijedtem"), "megijedt");});
test("megijedtünk -> megijedt", function() {deepEqual( Stem("megijedtünk"), "megijedt");});
test("megijedt -> megij", function() {deepEqual( Stem("megijedt"), "megij");});
test("megijedve -> megijedv", function() {deepEqual( Stem("megijedve"), "megijedv");});
test("megijesztett -> megijesztet", function() {deepEqual( Stem("megijesztett"), "megijesztet");});
test("megijesszen -> megijessz", function() {deepEqual( Stem("megijesszen"), "megijessz");});
test("megijeszteni -> megijeszten", function() {deepEqual( Stem("megijeszteni"), "megijeszten");});
test("megijesztenie -> megijeszten", function() {deepEqual( Stem("megijesztenie"), "megijeszten");});
test("megijesztette -> megijesztett", function() {deepEqual( Stem("megijesztette"), "megijesztett");});
test("megijesztettem -> megijesztett", function() {deepEqual( Stem("megijesztettem"), "megijesztett");});
test("megillet -> megill", function() {deepEqual( Stem("megillet"), "megill");});
test("megilleti -> megillet", function() {deepEqual( Stem("megilleti"), "megillet");});
test("megilletik -> megillet", function() {deepEqual( Stem("megilletik"), "megillet");});
test("megilletné -> megilletn", function() {deepEqual( Stem("megilletné"), "megilletn");});
test("megillető -> megillető", function() {deepEqual( Stem("megillető"), "megillető");});
test("megilletődve -> megilletődv", function() {deepEqual( Stem("megilletődve"), "megilletődv");});
test("megjegyzése -> megjegyzés", function() {deepEqual( Stem("megjegyzése"), "megjegyzés");});
test("megjegyzések -> megjegyzés", function() {deepEqual( Stem("megjegyzések"), "megjegyzés");});
test("megjegyzéseket -> megjegyzés", function() {deepEqual( Stem("megjegyzéseket"), "megjegyzés");});
test("megjegyzést -> megjegyzés", function() {deepEqual( Stem("megjegyzést"), "megjegyzés");});
test("megjegyzéséből -> megjegyzés", function() {deepEqual( Stem("megjegyzéséből"), "megjegyzés");});
test("megjegyzésére -> megjegyzés", function() {deepEqual( Stem("megjegyzésére"), "megjegyzés");});
test("megjegyzését -> megjegyzés", function() {deepEqual( Stem("megjegyzését"), "megjegyzés");});
test("megjelenhet -> megjelenh", function() {deepEqual( Stem("megjelenhet"), "megjelenh");});
test("megjelenhetnek -> megjelenhet", function() {deepEqual( Stem("megjelenhetnek"), "megjelenhet");});
test("megjelenik -> megjelen", function() {deepEqual( Stem("megjelenik"), "megjelen");});
test("megjelenjek -> megjelenj", function() {deepEqual( Stem("megjelenjek"), "megjelenj");});
test("megjelenjen -> megjelenj", function() {deepEqual( Stem("megjelenjen"), "megjelenj");});
test("megjelenjenek -> megjelen", function() {deepEqual( Stem("megjelenjenek"), "megjelen");});
test("megjelenjék -> megjelenje", function() {deepEqual( Stem("megjelenjék"), "megjelenje");});
test("megjelenne -> megjelenn", function() {deepEqual( Stem("megjelenne"), "megjelenn");});
test("megjelennek -> megjelen", function() {deepEqual( Stem("megjelennek"), "megjelen");});
test("megjelenni -> megjelenn", function() {deepEqual( Stem("megjelenni"), "megjelenn");});
test("megjelennie -> megjelenn", function() {deepEqual( Stem("megjelennie"), "megjelenn");});
test("megjelennének -> megjelenn", function() {deepEqual( Stem("megjelennének"), "megjelenn");});
test("megjelent -> megjelen", function() {deepEqual( Stem("megjelent"), "megjelen");});
test("megjelentek -> megjelent", function() {deepEqual( Stem("megjelentek"), "megjelent");});
test("megjelentetett -> megjelentetet", function() {deepEqual( Stem("megjelentetett"), "megjelentetet");});
test("megjelenteti -> megjelentet", function() {deepEqual( Stem("megjelenteti"), "megjelentet");});
test("megjelentetik -> megjelentet", function() {deepEqual( Stem("megjelentetik"), "megjelentet");});
test("megjelentetni -> megjelentetn", function() {deepEqual( Stem("megjelentetni"), "megjelentetn");});
test("megjelentette -> megjelentett", function() {deepEqual( Stem("megjelentette"), "megjelentett");});
test("megjelentetés -> megjelentetés", function() {deepEqual( Stem("megjelentetés"), "megjelentetés");});
test("megjelentetése -> megjelentetés", function() {deepEqual( Stem("megjelentetése"), "megjelentetés");});
test("megjelentetéséhez -> megjelentetés", function() {deepEqual( Stem("megjelentetéséhez"), "megjelentetés");});
test("megjelentetésének -> megjelentetés", function() {deepEqual( Stem("megjelentetésének"), "megjelentetés");});
test("megjelentetésére -> megjelentetés", function() {deepEqual( Stem("megjelentetésére"), "megjelentetés");});
test("megjelentetését -> megjelentetés", function() {deepEqual( Stem("megjelentetését"), "megjelentetés");});
test("megjelentető -> megjelentető", function() {deepEqual( Stem("megjelentető"), "megjelentető");});
test("megjelenés -> megjelenés", function() {deepEqual( Stem("megjelenés"), "megjelenés");});
test("megjelenésben -> megjelenés", function() {deepEqual( Stem("megjelenésben"), "megjelenés");});
test("megjelenése -> megjelenés", function() {deepEqual( Stem("megjelenése"), "megjelenés");});
test("megjelenésem -> megjelenés", function() {deepEqual( Stem("megjelenésem"), "megjelenés");});
test("megjelenésen -> megjelenés", function() {deepEqual( Stem("megjelenésen"), "megjelenés");});
test("megjelenési -> megjelenés", function() {deepEqual( Stem("megjelenési"), "megjelenés");});
test("megjelenésük -> megjelenés", function() {deepEqual( Stem("megjelenésük"), "megjelenés");});
test("megjelenésnek -> megjelenés", function() {deepEqual( Stem("megjelenésnek"), "megjelenés");});
test("megjelenésre -> megjelenés", function() {deepEqual( Stem("megjelenésre"), "megjelenés");});
test("megjelenéssel -> megjelenés", function() {deepEqual( Stem("megjelenéssel"), "megjelenés");});
test("megjelenést -> megjelenés", function() {deepEqual( Stem("megjelenést"), "megjelenés");});
test("megjelenésében -> megjelenés", function() {deepEqual( Stem("megjelenésében"), "megjelenés");});
test("megjelenéséből -> megjelenés", function() {deepEqual( Stem("megjelenéséből"), "megjelenés");});
test("megjelenéséhez -> megjelenés", function() {deepEqual( Stem("megjelenéséhez"), "megjelenés");});
test("megjelenéséig -> megjelenés", function() {deepEqual( Stem("megjelenéséig"), "megjelenés");});
test("megjelenésén -> megjelenés", function() {deepEqual( Stem("megjelenésén"), "megjelenés");});
test("megjelenésének -> megjelenés", function() {deepEqual( Stem("megjelenésének"), "megjelenés");});
test("megjelenésére -> megjelenés", function() {deepEqual( Stem("megjelenésére"), "megjelenés");});
test("megjelenéséről -> megjelenés", function() {deepEqual( Stem("megjelenéséről"), "megjelenés");});
test("megjelenését -> megjelenés", function() {deepEqual( Stem("megjelenését"), "megjelenés");});
test("megjelenésétől -> megjelenés", function() {deepEqual( Stem("megjelenésétől"), "megjelenés");});
test("megjelenésével -> megjelenés", function() {deepEqual( Stem("megjelenésével"), "megjelenés");});
test("megjelenésű -> megjelenésű", function() {deepEqual( Stem("megjelenésű"), "megjelenésű");});
test("megjelenített -> megjelenítet", function() {deepEqual( Stem("megjelenített"), "megjelenítet");});
test("megjelenítheti -> megjeleníthet", function() {deepEqual( Stem("megjelenítheti"), "megjeleníthet");});
test("megjeleníthető -> megjeleníthető", function() {deepEqual( Stem("megjeleníthető"), "megjeleníthető");});
test("megjeleníthetőségi -> megjeleníthetőség", function() {deepEqual( Stem("megjeleníthetőségi"), "megjeleníthetőség");});
test("megjeleníteni -> megjeleníten", function() {deepEqual( Stem("megjeleníteni"), "megjeleníten");});
test("megjeleníti -> megjelenít", function() {deepEqual( Stem("megjeleníti"), "megjelenít");});
test("megjelenítjük -> megjelenít", function() {deepEqual( Stem("megjelenítjük"), "megjelenít");});
test("megjelenítse -> megjeleníts", function() {deepEqual( Stem("megjelenítse"), "megjeleníts");});
test("megjelenítve -> megjelenítv", function() {deepEqual( Stem("megjelenítve"), "megjelenítv");});
test("megjelenítési -> megjelenítés", function() {deepEqual( Stem("megjelenítési"), "megjelenítés");});
test("megjelenítés -> megjelenítés", function() {deepEqual( Stem("megjelenítés"), "megjelenítés");});
test("megjelenítése -> megjelenítés", function() {deepEqual( Stem("megjelenítése"), "megjelenítés");});
test("megjelenítéseinek -> megjelenítés", function() {deepEqual( Stem("megjelenítéseinek"), "megjelenítés");});
test("megjelenítéshez -> megjelenítés", function() {deepEqual( Stem("megjelenítéshez"), "megjelenítés");});
test("megjelenítésre -> megjelenítés", function() {deepEqual( Stem("megjelenítésre"), "megjelenítés");});
test("megjelenítést -> megjelenítés", function() {deepEqual( Stem("megjelenítést"), "megjelenítés");});
test("megjelenítéséhez -> megjelenítés", function() {deepEqual( Stem("megjelenítéséhez"), "megjelenítés");});
test("megjelenítésének -> megjelenítés", function() {deepEqual( Stem("megjelenítésének"), "megjelenítés");});
test("megjelenítésére -> megjelenítés", function() {deepEqual( Stem("megjelenítésére"), "megjelenítés");});
test("megjelenítéséről -> megjelenítés", function() {deepEqual( Stem("megjelenítéséről"), "megjelenítés");});
test("megjelenítését -> megjelenítés", function() {deepEqual( Stem("megjelenítését"), "megjelenítés");});
test("megjelenítésével -> megjelenítés", function() {deepEqual( Stem("megjelenítésével"), "megjelenítés");});
test("megjelenítésüknek -> megjelenítés", function() {deepEqual( Stem("megjelenítésüknek"), "megjelenítés");});
test("megjelenítő -> megjelenítő", function() {deepEqual( Stem("megjelenítő"), "megjelenítő");});
test("megjelenítőjén -> megjelenítő", function() {deepEqual( Stem("megjelenítőjén"), "megjelenítő");});
test("megjelenítőkártya -> megjelenítőkárty", function() {deepEqual( Stem("megjelenítőkártya"), "megjelenítőkárty");});
test("megjelenítőkártyája -> megjelenítőkártyá", function() {deepEqual( Stem("megjelenítőkártyája"), "megjelenítőkártyá");});
test("megjelenítőkártyáját -> megjelenítőkártyá", function() {deepEqual( Stem("megjelenítőkártyáját"), "megjelenítőkártyá");});
test("megjelenő -> megjelenő", function() {deepEqual( Stem("megjelenő"), "megjelenő");});
test("megjelenők -> megjelenő", function() {deepEqual( Stem("megjelenők"), "megjelenő");});
test("megjelölendő -> megjelölendő", function() {deepEqual( Stem("megjelölendő"), "megjelölendő");});
test("megjelölhető -> megjelölhető", function() {deepEqual( Stem("megjelölhető"), "megjelölhető");});
test("megjelölhetőek -> megjelölhető", function() {deepEqual( Stem("megjelölhetőek"), "megjelölhető");});
test("megjelöli -> megjelöl", function() {deepEqual( Stem("megjelöli"), "megjelöl");});
test("megjelölik -> megjelöl", function() {deepEqual( Stem("megjelölik"), "megjelöl");});
test("megjelölje -> megjelöl", function() {deepEqual( Stem("megjelölje"), "megjelöl");});
test("megjelöljön -> megjelölj", function() {deepEqual( Stem("megjelöljön"), "megjelölj");});
test("megjelölni -> megjelöln", function() {deepEqual( Stem("megjelölni"), "megjelöln");});
test("megjelölnöd -> megjelöln", function() {deepEqual( Stem("megjelölnöd"), "megjelöln");});
test("megjelölt -> megjelöl", function() {deepEqual( Stem("megjelölt"), "megjelöl");});
test("megjelölve -> megjelölv", function() {deepEqual( Stem("megjelölve"), "megjelölv");});
test("megjelölés -> megjelölés", function() {deepEqual( Stem("megjelölés"), "megjelölés");});
test("megjelölésből -> megjelölés", function() {deepEqual( Stem("megjelölésből"), "megjelölés");});
test("megjelölése -> megjelölés", function() {deepEqual( Stem("megjelölése"), "megjelölés");});
test("megjelölésre -> megjelölés", function() {deepEqual( Stem("megjelölésre"), "megjelölés");});
test("megjelöléssel -> megjelölés", function() {deepEqual( Stem("megjelöléssel"), "megjelölés");});
test("megjelölést -> megjelölés", function() {deepEqual( Stem("megjelölést"), "megjelölés");});
test("megjelölésének -> megjelölés", function() {deepEqual( Stem("megjelölésének"), "megjelölés");});
test("megjelöléséről -> megjelölés", function() {deepEqual( Stem("megjelöléséről"), "megjelölés");});
test("megjelölését -> megjelölés", function() {deepEqual( Stem("megjelölését"), "megjelölés");});
test("megjelölésétől -> megjelölés", function() {deepEqual( Stem("megjelölésétől"), "megjelölés");});
test("megjelölésével -> megjelölés", function() {deepEqual( Stem("megjelölésével"), "megjelölés");});
test("megjelölésükre -> megjelölés", function() {deepEqual( Stem("megjelölésükre"), "megjelölés");});
test("megjelölésű -> megjelölésű", function() {deepEqual( Stem("megjelölésű"), "megjelölésű");});
test("megjutalmaz -> megjutalmaz", function() {deepEqual( Stem("megjutalmaz"), "megjutalmaz");});
test("megjutalmazom -> megjutalmaz", function() {deepEqual( Stem("megjutalmazom"), "megjutalmaz");});
test("megjutalmazta -> megjutalmazt", function() {deepEqual( Stem("megjutalmazta"), "megjutalmazt");});
test("megjutalmazzam -> megjutalmazz", function() {deepEqual( Stem("megjutalmazzam"), "megjutalmazz");});
test("megjárhatta -> megjárhatt", function() {deepEqual( Stem("megjárhatta"), "megjárhatt");});
test("megjárt -> megjár", function() {deepEqual( Stem("megjárt"), "megjár");});
test("megjárja -> megjár", function() {deepEqual( Stem("megjárja"), "megjár");});
test("megjárjuk -> megjár", function() {deepEqual( Stem("megjárjuk"), "megjár");});
test("megjártam -> megjárt", function() {deepEqual( Stem("megjártam"), "megjárt");});
test("megjárták -> megjárta", function() {deepEqual( Stem("megjárták"), "megjárta");});
test("megjárása -> megjárás", function() {deepEqual( Stem("megjárása"), "megjárás");});
test("megjátsszanak -> megjátssz", function() {deepEqual( Stem("megjátsszanak"), "megjátssz");});
test("megjátszani -> megjátszan", function() {deepEqual( Stem("megjátszani"), "megjátszan");});
test("megjátszania -> megjátszan", function() {deepEqual( Stem("megjátszania"), "megjátszan");});
test("megjátszotta -> megjátszott", function() {deepEqual( Stem("megjátszotta"), "megjátszott");});
test("megjátszottuk -> megjátszott", function() {deepEqual( Stem("megjátszottuk"), "megjátszott");});
test("megjátszott -> megjátszot", function() {deepEqual( Stem("megjátszott"), "megjátszot");});
test("megjátszottak -> megjátszott", function() {deepEqual( Stem("megjátszottak"), "megjátszott");});
test("megjósolható -> megjósolható", function() {deepEqual( Stem("megjósolható"), "megjósolható");});
test("megjósolja -> megjósol", function() {deepEqual( Stem("megjósolja"), "megjósol");});
test("megjósolni -> megjósoln", function() {deepEqual( Stem("megjósolni"), "megjósoln");});
test("megjósolunk -> megjósol", function() {deepEqual( Stem("megjósolunk"), "megjósol");});
test("megjött -> megjöt", function() {deepEqual( Stem("megjött"), "megjöt");});
test("megjöttek -> megjött", function() {deepEqual( Stem("megjöttek"), "megjött");});
test("megkajáltunk -> megkajált", function() {deepEqual( Stem("megkajáltunk"), "megkajált");});
test("megkapaszkodik -> megkapaszkod", function() {deepEqual( Stem("megkapaszkodik"), "megkapaszkod");});
test("megkapaszkodni -> megkapaszkodn", function() {deepEqual( Stem("megkapaszkodni"), "megkapaszkodn");});
test("megkapaszkodnia -> megkapaszkodn", function() {deepEqual( Stem("megkapaszkodnia"), "megkapaszkodn");});
test("megkapaszkodsz -> megkapaszkodsz", function() {deepEqual( Stem("megkapaszkodsz"), "megkapaszkodsz");});
test("megkapaszkodott -> megkapaszkodot", function() {deepEqual( Stem("megkapaszkodott"), "megkapaszkodot");});
test("megkapaszkodáshoz -> megkapaszkodás", function() {deepEqual( Stem("megkapaszkodáshoz"), "megkapaszkodás");});
test("megkaphassák -> megkaphassa", function() {deepEqual( Stem("megkaphassák"), "megkaphassa");});
test("megkaphat -> megkaph", function() {deepEqual( Stem("megkaphat"), "megkaph");});
test("megkaphatja -> megkaphat", function() {deepEqual( Stem("megkaphatja"), "megkaphat");});
test("megkaphatják -> megkaphatja", function() {deepEqual( Stem("megkaphatják"), "megkaphatja");});
test("megkaphatnak -> megkaphat", function() {deepEqual( Stem("megkaphatnak"), "megkaphat");});
test("megkaphatom -> megkaphat", function() {deepEqual( Stem("megkaphatom"), "megkaphat");});
test("megkaphatta -> megkaphatt", function() {deepEqual( Stem("megkaphatta"), "megkaphatt");});
test("megkapja -> megkap", function() {deepEqual( Stem("megkapja"), "megkap");});
test("megkapjam -> megkapj", function() {deepEqual( Stem("megkapjam"), "megkapj");});
test("megkapjanak -> megkap", function() {deepEqual( Stem("megkapjanak"), "megkap");});
test("megkapjon -> megkapj", function() {deepEqual( Stem("megkapjon"), "megkapj");});
test("megkapjuk -> megkap", function() {deepEqual( Stem("megkapjuk"), "megkap");});
test("megkapják -> megkapja", function() {deepEqual( Stem("megkapják"), "megkapja");});
test("megkapni -> megkapn", function() {deepEqual( Stem("megkapni"), "megkapn");});
test("megkapnunk -> megkapn", function() {deepEqual( Stem("megkapnunk"), "megkapn");});
test("megkapnának -> megkapn", function() {deepEqual( Stem("megkapnának"), "megkapn");});
test("megkapod -> megkap", function() {deepEqual( Stem("megkapod"), "megkap");});
test("megkapom -> megkap", function() {deepEqual( Stem("megkapom"), "megkap");});
test("megkapta -> megkapt", function() {deepEqual( Stem("megkapta"), "megkapt");});
test("megkaptam -> megkapt", function() {deepEqual( Stem("megkaptam"), "megkapt");});
test("megkaptuk -> megkapt", function() {deepEqual( Stem("megkaptuk"), "megkapt");});
test("megkaptunk -> megkapt", function() {deepEqual( Stem("megkaptunk"), "megkapt");});
test("megkapták -> megkapta", function() {deepEqual( Stem("megkapták"), "megkapta");});
test("megkapott -> megkapot", function() {deepEqual( Stem("megkapott"), "megkapot");});
test("megkavarjon -> megkavarj", function() {deepEqual( Stem("megkavarjon"), "megkavarj");});
test("megkedvelt -> megkedvel", function() {deepEqual( Stem("megkedvelt"), "megkedvel");});
test("megkedvelteti -> megkedveltet", function() {deepEqual( Stem("megkedvelteti"), "megkedveltet");});
test("megkedveltetni -> megkedveltetn", function() {deepEqual( Stem("megkedveltetni"), "megkedveltetn");});
test("megkedvelték -> megkedvelte", function() {deepEqual( Stem("megkedvelték"), "megkedvelte");});
test("megkegyelmeznek -> megkegyelmez", function() {deepEqual( Stem("megkegyelmeznek"), "megkegyelmez");});
test("megkegyelmeztek -> megkegyelmezt", function() {deepEqual( Stem("megkegyelmeztek"), "megkegyelmezt");});
test("megkeményedett -> megkeményedet", function() {deepEqual( Stem("megkeményedett"), "megkeményedet");});
test("megkeményíteni -> megkeményíten", function() {deepEqual( Stem("megkeményíteni"), "megkeményíten");});
test("megkeményített -> megkeményítet", function() {deepEqual( Stem("megkeményített"), "megkeményítet");});
test("megkeresett -> megkereset", function() {deepEqual( Stem("megkeresett"), "megkereset");});
test("megkereshető -> megkereshető", function() {deepEqual( Stem("megkereshető"), "megkereshető");});
test("megkereshetővé -> megkereshető", function() {deepEqual( Stem("megkereshetővé"), "megkereshető");});
test("megkereshetünk -> megkereshet", function() {deepEqual( Stem("megkereshetünk"), "megkereshet");});
test("megkeresheti -> megkereshet", function() {deepEqual( Stem("megkeresheti"), "megkereshet");});
test("megkeresek -> megkeres", function() {deepEqual( Stem("megkeresek"), "megkeres");});
test("megkeresem -> megkeres", function() {deepEqual( Stem("megkeresem"), "megkeres");});
test("megkeresi -> megkeres", function() {deepEqual( Stem("megkeresi"), "megkeres");});
test("megkeresnek -> megkeres", function() {deepEqual( Stem("megkeresnek"), "megkeres");});
test("megkeresni -> megkeresn", function() {deepEqual( Stem("megkeresni"), "megkeresn");});
test("megkeresniük -> megkeresn", function() {deepEqual( Stem("megkeresniük"), "megkeresn");});
test("megkeresnünk -> megkeresn", function() {deepEqual( Stem("megkeresnünk"), "megkeresn");});
test("megkeresse -> megkeress", function() {deepEqual( Stem("megkeresse"), "megkeress");});
test("megkeressem -> megkeress", function() {deepEqual( Stem("megkeressem"), "megkeress");});
test("megkeressük -> megkeress", function() {deepEqual( Stem("megkeressük"), "megkeress");});
test("megkereste -> megkerest", function() {deepEqual( Stem("megkereste"), "megkerest");});
test("megkerestem -> megkerest", function() {deepEqual( Stem("megkerestem"), "megkerest");});
test("megkerestél -> megkerestél", function() {deepEqual( Stem("megkerestél"), "megkerestél");});
test("megkerestük -> megkerest", function() {deepEqual( Stem("megkerestük"), "megkerest");});
test("megkerestünk -> megkerest", function() {deepEqual( Stem("megkerestünk"), "megkerest");});
test("megkeresése -> megkeresés", function() {deepEqual( Stem("megkeresése"), "megkeresés");});
test("megkeresést -> megkeresés", function() {deepEqual( Stem("megkeresést"), "megkeresés");});
test("megkeresésében -> megkeresés", function() {deepEqual( Stem("megkeresésében"), "megkeresés");});
test("megkeresésére -> megkeresés", function() {deepEqual( Stem("megkeresésére"), "megkeresés");});
test("megkeresésével -> megkeresés", function() {deepEqual( Stem("megkeresésével"), "megkeresés");});
test("megkeresésünkre -> megkeresés", function() {deepEqual( Stem("megkeresésünkre"), "megkeresés");});
test("megkeresők -> megkereső", function() {deepEqual( Stem("megkeresők"), "megkereső");});
test("megkeresőknek -> megkereső", function() {deepEqual( Stem("megkeresőknek"), "megkereső");});
test("megkergetett -> megkergetet", function() {deepEqual( Stem("megkergetett"), "megkergetet");});
test("megkerülhetetlen -> megkerülhetetl", function() {deepEqual( Stem("megkerülhetetlen"), "megkerülhetetl");});
test("megkerülhetővé -> megkerülhető", function() {deepEqual( Stem("megkerülhetővé"), "megkerülhető");});
test("megkerült -> megkerül", function() {deepEqual( Stem("megkerült"), "megkerül");});
test("megkerülni -> megkerüln", function() {deepEqual( Stem("megkerülni"), "megkerüln");});
test("megkerülte -> megkerült", function() {deepEqual( Stem("megkerülte"), "megkerült");});
test("megkerülöm -> megkerülö", function() {deepEqual( Stem("megkerülöm"), "megkerülö");});
test("megkerülve -> megkerülv", function() {deepEqual( Stem("megkerülve"), "megkerülv");});
test("megkerülése -> megkerülés", function() {deepEqual( Stem("megkerülése"), "megkerülés");});
test("megkerülésén -> megkerülés", function() {deepEqual( Stem("megkerülésén"), "megkerülés");});
test("megkerülését -> megkerülés", function() {deepEqual( Stem("megkerülését"), "megkerülés");});
test("megkerülésével -> megkerülés", function() {deepEqual( Stem("megkerülésével"), "megkerülés");});
test("megkeseríteni -> megkeseríten", function() {deepEqual( Stem("megkeseríteni"), "megkeseríten");});
test("megkettőzték -> megkettőzte", function() {deepEqual( Stem("megkettőzték"), "megkettőzte");});
test("megkettőzve -> megkettőzv", function() {deepEqual( Stem("megkettőzve"), "megkettőzv");});
test("megkettőződik -> megkettőződ", function() {deepEqual( Stem("megkettőződik"), "megkettőződ");});
test("megkezdeni -> megkezden", function() {deepEqual( Stem("megkezdeni"), "megkezden");});
test("megkezdenie -> megkezden", function() {deepEqual( Stem("megkezdenie"), "megkezden");});
test("megkezdi -> megkezd", function() {deepEqual( Stem("megkezdi"), "megkezd");});
test("megkezdik -> megkezd", function() {deepEqual( Stem("megkezdik"), "megkezd");});
test("megkezdje -> megkezd", function() {deepEqual( Stem("megkezdje"), "megkezd");});
test("megkezdte -> megkezdt", function() {deepEqual( Stem("megkezdte"), "megkezdt");});
test("megkezdték -> megkezdte", function() {deepEqual( Stem("megkezdték"), "megkezdte");});
test("megkezdtük -> megkezdt", function() {deepEqual( Stem("megkezdtük"), "megkezdt");});
test("megkezdett -> megkezdet", function() {deepEqual( Stem("megkezdett"), "megkezdet");});
test("megkezdheti -> megkezdhet", function() {deepEqual( Stem("megkezdheti"), "megkezdhet");});
test("megkezdhette -> megkezdhett", function() {deepEqual( Stem("megkezdhette"), "megkezdhett");});
test("megkezdése -> megkezdés", function() {deepEqual( Stem("megkezdése"), "megkezdés");});
test("megkezdéséhez -> megkezdés", function() {deepEqual( Stem("megkezdéséhez"), "megkezdés");});
test("megkezdéséig -> megkezdés", function() {deepEqual( Stem("megkezdéséig"), "megkezdés");});
test("megkezdésének -> megkezdés", function() {deepEqual( Stem("megkezdésének"), "megkezdés");});
test("megkezdésére -> megkezdés", function() {deepEqual( Stem("megkezdésére"), "megkezdés");});
test("megkezdését -> megkezdés", function() {deepEqual( Stem("megkezdését"), "megkezdés");});
test("megkezdésétől -> megkezdés", function() {deepEqual( Stem("megkezdésétől"), "megkezdés");});
test("megkezdésével -> megkezdés", function() {deepEqual( Stem("megkezdésével"), "megkezdés");});
test("megkezdődhet -> megkezdődh", function() {deepEqual( Stem("megkezdődhet"), "megkezdődh");});
test("megkezdődhetett -> megkezdődhetet", function() {deepEqual( Stem("megkezdődhetett"), "megkezdődhetet");});
test("megkezdődhetnek -> megkezdődhet", function() {deepEqual( Stem("megkezdődhetnek"), "megkezdődhet");});
test("megkezdődtek -> megkezdődt", function() {deepEqual( Stem("megkezdődtek"), "megkezdődt");});
test("megkezdődött -> megkezdődöt", function() {deepEqual( Stem("megkezdődött"), "megkezdődöt");});
test("megkirándultatott -> megkirándultatot", function() {deepEqual( Stem("megkirándultatott"), "megkirándultatot");});
test("megkockáztatható -> megkockáztatható", function() {deepEqual( Stem("megkockáztatható"), "megkockáztatható");});
test("megkockáztatja -> megkockáztat", function() {deepEqual( Stem("megkockáztatja"), "megkockáztat");});
test("megkockáztatni -> megkockáztatn", function() {deepEqual( Stem("megkockáztatni"), "megkockáztatn");});
test("megkomolyodik -> megkomolyod", function() {deepEqual( Stem("megkomolyodik"), "megkomolyod");});
test("megkomolyodni -> megkomolyodn", function() {deepEqual( Stem("megkomolyodni"), "megkomolyodn");});
test("megkomolyodtam -> megkomolyodt", function() {deepEqual( Stem("megkomolyodtam"), "megkomolyodt");});
test("megkomponálták -> megkomponálta", function() {deepEqual( Stem("megkomponálták"), "megkomponálta");});
test("megkongatta -> megkongatt", function() {deepEqual( Stem("megkongatta"), "megkongatt");});
test("megkopaszodott -> megkopaszodot", function() {deepEqual( Stem("megkopaszodott"), "megkopaszodot");});
test("megkopogtatta -> megkopogtatt", function() {deepEqual( Stem("megkopogtatta"), "megkopogtatt");});
test("megkorbácsoltak -> megkorbácsolt", function() {deepEqual( Stem("megkorbácsoltak"), "megkorbácsolt");});
test("megkoronázott -> megkoronázot", function() {deepEqual( Stem("megkoronázott"), "megkoronázot");});
test("megkoronázni -> megkoronázn", function() {deepEqual( Stem("megkoronázni"), "megkoronázn");});
test("megkoronáztak -> megkoronázt", function() {deepEqual( Stem("megkoronáztak"), "megkoronázt");});
test("megkurtítására -> megkurtítás", function() {deepEqual( Stem("megkurtítására"), "megkurtítás");});
test("megkurtításával -> megkurtítás", function() {deepEqual( Stem("megkurtításával"), "megkurtítás");});
test("megkárosítani -> megkárosítan", function() {deepEqual( Stem("megkárosítani"), "megkárosítan");});
test("megképződő -> megképződő", function() {deepEqual( Stem("megképződő"), "megképződő");});
test("megkérdez -> megkérdez", function() {deepEqual( Stem("megkérdez"), "megkérdez");});
test("megkérdezem -> megkérdez", function() {deepEqual( Stem("megkérdezem"), "megkérdez");});
test("megkérdezi -> megkérdez", function() {deepEqual( Stem("megkérdezi"), "megkérdez");});
test("megkérdezik -> megkérdez", function() {deepEqual( Stem("megkérdezik"), "megkérdez");});
test("megkérdeznek -> megkérdez", function() {deepEqual( Stem("megkérdeznek"), "megkérdez");});
test("megkérdezni -> megkérdezn", function() {deepEqual( Stem("megkérdezni"), "megkérdezn");});
test("megkérdezte -> megkérdezt", function() {deepEqual( Stem("megkérdezte"), "megkérdezt");});
test("megkérdezték -> megkérdezte", function() {deepEqual( Stem("megkérdezték"), "megkérdezte");});
test("megkérdezzem -> megkérdezz", function() {deepEqual( Stem("megkérdezzem"), "megkérdezz");});
test("megkérdezzük -> megkérdezz", function() {deepEqual( Stem("megkérdezzük"), "megkérdezz");});
test("megkérdi -> megkérd", function() {deepEqual( Stem("megkérdi"), "megkérd");});
test("megkérdezett -> megkérdezet", function() {deepEqual( Stem("megkérdezett"), "megkérdezet");});
test("megkérdezettek -> megkérdezett", function() {deepEqual( Stem("megkérdezettek"), "megkérdezett");});
test("megkérdezetteknek -> megkérdezett", function() {deepEqual( Stem("megkérdezetteknek"), "megkérdezett");});
test("megkérdezhettem -> megkérdezhett", function() {deepEqual( Stem("megkérdezhettem"), "megkérdezhett");});
test("megkérdőjelezhetetlen -> megkérdőjelezhetetl", function() {deepEqual( Stem("megkérdőjelezhetetlen"), "megkérdőjelezhetetl");});
test("megkérdőjelezhető -> megkérdőjelezhető", function() {deepEqual( Stem("megkérdőjelezhető"), "megkérdőjelezhető");});
test("megkérdőjelezte -> megkérdőjelezt", function() {deepEqual( Stem("megkérdőjelezte"), "megkérdőjelezt");});
test("megkérdőjeleződik -> megkérdőjeleződ", function() {deepEqual( Stem("megkérdőjeleződik"), "megkérdőjeleződ");});
test("megkérdőjeleződnék -> megkérdőjeleződne", function() {deepEqual( Stem("megkérdőjeleződnék"), "megkérdőjeleződne");});
test("megkérette -> megkérett", function() {deepEqual( Stem("megkérette"), "megkérett");});
test("megkérhetjük -> megkérhet", function() {deepEqual( Stem("megkérhetjük"), "megkérhet");});
test("megkér -> megkér", function() {deepEqual( Stem("megkér"), "megkér");});
test("megkérem -> megkér", function() {deepEqual( Stem("megkérem"), "megkér");});
test("megkéri -> megkér", function() {deepEqual( Stem("megkéri"), "megkér");});
test("megkérjem -> megkérj", function() {deepEqual( Stem("megkérjem"), "megkérj");});
test("megkérjük -> megkér", function() {deepEqual( Stem("megkérjük"), "megkér");});
test("megkérlek -> megkérl", function() {deepEqual( Stem("megkérlek"), "megkérl");});
test("megkérni -> megkérn", function() {deepEqual( Stem("megkérni"), "megkérn");});
test("megkérném -> megkérne", function() {deepEqual( Stem("megkérném"), "megkérne");});
test("megkérte -> megkért", function() {deepEqual( Stem("megkérte"), "megkért");});
test("megkértek -> megkért", function() {deepEqual( Stem("megkértek"), "megkért");});
test("megkértem -> megkért", function() {deepEqual( Stem("megkértem"), "megkért");});
test("megkérték -> megkérte", function() {deepEqual( Stem("megkérték"), "megkérte");});
test("megkértük -> megkért", function() {deepEqual( Stem("megkértük"), "megkért");});
test("megkért -> meg", function() {deepEqual( Stem("megkért"), "meg");});
test("megkésett -> megkéset", function() {deepEqual( Stem("megkésett"), "megkéset");});
test("megkésve -> megkésv", function() {deepEqual( Stem("megkésve"), "megkésv");});
test("megkétszerezni -> megkétszerezn", function() {deepEqual( Stem("megkétszerezni"), "megkétszerezn");});
test("megkétszerezte -> megkétszerezt", function() {deepEqual( Stem("megkétszerezte"), "megkétszerezt");});
test("megkétszereződik -> megkétszereződ", function() {deepEqual( Stem("megkétszereződik"), "megkétszereződ");});
test("megkíméli -> megkímél", function() {deepEqual( Stem("megkíméli"), "megkímél");});
test("megkímélni -> megkíméln", function() {deepEqual( Stem("megkímélni"), "megkíméln");});
test("megkímélnék -> megkímélne", function() {deepEqual( Stem("megkímélnék"), "megkímélne");});
test("megkímélnénk -> megkímélne", function() {deepEqual( Stem("megkímélnénk"), "megkímélne");});
test("megkímélő -> megkímélő", function() {deepEqual( Stem("megkímélő"), "megkímélő");});
test("megkínozta -> megkínozt", function() {deepEqual( Stem("megkínozta"), "megkínozt");});
test("megkínozza -> megkínozz", function() {deepEqual( Stem("megkínozza"), "megkínozz");});
test("megkínzott -> megkínzot", function() {deepEqual( Stem("megkínzott"), "megkínzot");});
test("megkínálhatlak -> megkínálhatl", function() {deepEqual( Stem("megkínálhatlak"), "megkínálhatl");});
test("megkínált -> megkínál", function() {deepEqual( Stem("megkínált"), "megkínál");});
test("megkínáltak -> megkínált", function() {deepEqual( Stem("megkínáltak"), "megkínált");});
test("megkínálták -> megkínálta", function() {deepEqual( Stem("megkínálták"), "megkínálta");});
test("megkísérelje -> megkísérel", function() {deepEqual( Stem("megkísérelje"), "megkísérel");});
test("megkísérelnek -> megkísérel", function() {deepEqual( Stem("megkísérelnek"), "megkísérel");});
test("megkísérelte -> megkísérelt", function() {deepEqual( Stem("megkísérelte"), "megkísérelt");});
test("megkísérli -> megkísérl", function() {deepEqual( Stem("megkísérli"), "megkísérl");});
test("megkísérelt -> megkísérel", function() {deepEqual( Stem("megkísérelt"), "megkísérel");});
test("megkísértette -> megkísértett", function() {deepEqual( Stem("megkísértette"), "megkísértett");});
test("megkísértésben -> megkísértés", function() {deepEqual( Stem("megkísértésben"), "megkísértés");});
test("megkívánhatja -> megkívánhat", function() {deepEqual( Stem("megkívánhatja"), "megkívánhat");});
test("megkívánja -> megkíván", function() {deepEqual( Stem("megkívánja"), "megkíván");});
test("megkíván -> megkív", function() {deepEqual( Stem("megkíván"), "megkív");});
test("megkívánják -> megkívánja", function() {deepEqual( Stem("megkívánják"), "megkívánja");});
test("megkívánnak -> megkív", function() {deepEqual( Stem("megkívánnak"), "megkív");});
test("megkívánom -> megkíván", function() {deepEqual( Stem("megkívánom"), "megkíván");});
test("megkívánta -> megkívánt", function() {deepEqual( Stem("megkívánta"), "megkívánt");});
test("megkívánt -> megkív", function() {deepEqual( Stem("megkívánt"), "megkív");});
test("megkívántatik -> megkívántat", function() {deepEqual( Stem("megkívántatik"), "megkívántat");});
test("megkívánástól -> megkívánás", function() {deepEqual( Stem("megkívánástól"), "megkívánás");});
test("megkívánását -> megkívánás", function() {deepEqual( Stem("megkívánását"), "megkívánás");});
test("megkóstoltatom -> megkóstoltat", function() {deepEqual( Stem("megkóstoltatom"), "megkóstoltat");});
test("megkóstolni -> megkóstoln", function() {deepEqual( Stem("megkóstolni"), "megkóstoln");});
test("megkóstoltunk -> megkóstolt", function() {deepEqual( Stem("megkóstoltunk"), "megkóstolt");});
test("megkönnyebbített -> megkönnyebbítet", function() {deepEqual( Stem("megkönnyebbített"), "megkönnyebbítet");});
test("megkönnyebbült -> megkönnyebbül", function() {deepEqual( Stem("megkönnyebbült"), "megkönnyebbül");});
test("megkönnyebbülten -> megkönnyebbült", function() {deepEqual( Stem("megkönnyebbülten"), "megkönnyebbült");});
test("megkönnyebbülve -> megkönnyebbülv", function() {deepEqual( Stem("megkönnyebbülve"), "megkönnyebbülv");});
test("megkönnyebbülés -> megkönnyebbülés", function() {deepEqual( Stem("megkönnyebbülés"), "megkönnyebbülés");});
test("megkönnyebbüléssel -> megkönnyebbülés", function() {deepEqual( Stem("megkönnyebbüléssel"), "megkönnyebbülés");});
test("megkönnyebbülést -> megkönnyebbülés", function() {deepEqual( Stem("megkönnyebbülést"), "megkönnyebbülés");});
test("megkönnyíteni -> megkönnyíten", function() {deepEqual( Stem("megkönnyíteni"), "megkönnyíten");});
test("megkönnyítené -> megkönnyíten", function() {deepEqual( Stem("megkönnyítené"), "megkönnyíten");});
test("megkönnyítette -> megkönnyített", function() {deepEqual( Stem("megkönnyítette"), "megkönnyített");});
test("megkönnyíti -> megkönnyít", function() {deepEqual( Stem("megkönnyíti"), "megkönnyít");});
test("megkönnyítik -> megkönnyít", function() {deepEqual( Stem("megkönnyítik"), "megkönnyít");});
test("megkönnyítse -> megkönnyíts", function() {deepEqual( Stem("megkönnyítse"), "megkönnyíts");});
test("megkönnyíthetik -> megkönnyíthet", function() {deepEqual( Stem("megkönnyíthetik"), "megkönnyíthet");});
test("megkönnyítve -> megkönnyítv", function() {deepEqual( Stem("megkönnyítve"), "megkönnyítv");});
test("megkönnyítése -> megkönnyítés", function() {deepEqual( Stem("megkönnyítése"), "megkönnyítés");});
test("megkönnyítésére -> megkönnyítés", function() {deepEqual( Stem("megkönnyítésére"), "megkönnyítés");});
test("megkönnyítő -> megkönnyítő", function() {deepEqual( Stem("megkönnyítő"), "megkönnyítő");});
test("megköszöni -> megköszön", function() {deepEqual( Stem("megköszöni"), "megköszön");});
test("megköszöntem -> megköszönt", function() {deepEqual( Stem("megköszöntem"), "megköszönt");});
test("megköszönték -> megköszönte", function() {deepEqual( Stem("megköszönték"), "megköszönte");});
test("megköszöntött -> megköszöntöt", function() {deepEqual( Stem("megköszöntött"), "megköszöntöt");});
test("megköthető -> megköthető", function() {deepEqual( Stem("megköthető"), "megköthető");});
test("megkötik -> megköt", function() {deepEqual( Stem("megkötik"), "megköt");});
test("megkötni -> megkötn", function() {deepEqual( Stem("megkötni"), "megkötn");});
test("megkötés -> megkötés", function() {deepEqual( Stem("megkötés"), "megkötés");});
test("megkötése -> megkötés", function() {deepEqual( Stem("megkötése"), "megkötés");});
test("megkötések -> megkötés", function() {deepEqual( Stem("megkötések"), "megkötés");});
test("megkötéseket -> megkötés", function() {deepEqual( Stem("megkötéseket"), "megkötés");});
test("megkötésekkel -> megkötés", function() {deepEqual( Stem("megkötésekkel"), "megkötés");});
test("megkötésekor -> megkötés", function() {deepEqual( Stem("megkötésekor"), "megkötés");});
test("megkötéssel -> megkötés", function() {deepEqual( Stem("megkötéssel"), "megkötés");});
test("megkötést -> megkötés", function() {deepEqual( Stem("megkötést"), "megkötés");});
test("megkötéséhez -> megkötés", function() {deepEqual( Stem("megkötéséhez"), "megkötés");});
test("megkötésének -> megkötés", function() {deepEqual( Stem("megkötésének"), "megkötés");});
test("megkötésénél -> megkötés", function() {deepEqual( Stem("megkötésénél"), "megkötés");});
test("megkötésére -> megkötés", function() {deepEqual( Stem("megkötésére"), "megkötés");});
test("megkötéséről -> megkötés", function() {deepEqual( Stem("megkötéséről"), "megkötés");});
test("megkötését -> megkötés", function() {deepEqual( Stem("megkötését"), "megkötés");});
test("megkötésétől -> megkötés", function() {deepEqual( Stem("megkötésétől"), "megkötés");});
test("megkötött -> megkötöt", function() {deepEqual( Stem("megkötött"), "megkötöt");});
test("megkötöttnek -> megkötött", function() {deepEqual( Stem("megkötöttnek"), "megkötött");});
test("megkötöttség -> megkötöttség", function() {deepEqual( Stem("megkötöttség"), "megkötöttség");});
test("megkötöttségeket -> megkötöttség", function() {deepEqual( Stem("megkötöttségeket"), "megkötöttség");});
test("megkötöttségtől -> megkötöttség", function() {deepEqual( Stem("megkötöttségtől"), "megkötöttség");});
test("megkötözték -> megkötözte", function() {deepEqual( Stem("megkötözték"), "megkötözte");});
test("megkövetel -> megkövetel", function() {deepEqual( Stem("megkövetel"), "megkövetel");});
test("megkövetelem -> megkövetel", function() {deepEqual( Stem("megkövetelem"), "megkövetel");});
test("megköveteli -> megkövetel", function() {deepEqual( Stem("megköveteli"), "megkövetel");});
test("megkövetelik -> megkövetel", function() {deepEqual( Stem("megkövetelik"), "megkövetel");});
test("megkövetelnek -> megkövetel", function() {deepEqual( Stem("megkövetelnek"), "megkövetel");});
test("megkövetelni -> megköveteln", function() {deepEqual( Stem("megkövetelni"), "megköveteln");});
test("megkövetelte -> megkövetelt", function() {deepEqual( Stem("megkövetelte"), "megkövetelt");});
test("megkövetelheti -> megkövetelhet", function() {deepEqual( Stem("megkövetelheti"), "megkövetelhet");});
test("megkövetelt -> megkövetel", function() {deepEqual( Stem("megkövetelt"), "megkövetel");});
test("megkövetelő -> megkövetelő", function() {deepEqual( Stem("megkövetelő"), "megkövetelő");});
test("megköveti -> megkövet", function() {deepEqual( Stem("megköveti"), "megkövet");});
test("megközelíteni -> megközelíten", function() {deepEqual( Stem("megközelíteni"), "megközelíten");});
test("megközelítette -> megközelített", function() {deepEqual( Stem("megközelítette"), "megközelített");});
test("megközelítettek -> megközelített", function() {deepEqual( Stem("megközelítettek"), "megközelített");});
test("megközelítettük -> megközelített", function() {deepEqual( Stem("megközelítettük"), "megközelített");});
test("megközelíthetetlen -> megközelíthetetl", function() {deepEqual( Stem("megközelíthetetlen"), "megközelíthetetl");});
test("megközelíthető -> megközelíthető", function() {deepEqual( Stem("megközelíthető"), "megközelíthető");});
test("megközelíthetősége -> megközelíthetőség", function() {deepEqual( Stem("megközelíthetősége"), "megközelíthetőség");});
test("megközelíti -> megközelít", function() {deepEqual( Stem("megközelíti"), "megközelít");});
test("megközelítés -> megközelítés", function() {deepEqual( Stem("megközelítés"), "megközelítés");});
test("megközelítésben -> megközelítés", function() {deepEqual( Stem("megközelítésben"), "megközelítés");});
test("megközelítésből -> megközelítés", function() {deepEqual( Stem("megközelítésből"), "megközelítés");});
test("megközelítése -> megközelítés", function() {deepEqual( Stem("megközelítése"), "megközelítés");});
test("megközelítéshez -> megközelítés", function() {deepEqual( Stem("megközelítéshez"), "megközelítés");});
test("megközelítést -> megközelítés", function() {deepEqual( Stem("megközelítést"), "megközelítés");});
test("megközelítően -> megközelítő", function() {deepEqual( Stem("megközelítően"), "megközelítő");});
test("megküldeni -> megkülden", function() {deepEqual( Stem("megküldeni"), "megkülden");});
test("megküldhesse -> megküldhess", function() {deepEqual( Stem("megküldhesse"), "megküldhess");});
test("megküldi -> megküld", function() {deepEqual( Stem("megküldi"), "megküld");});
test("megküldik -> megküld", function() {deepEqual( Stem("megküldik"), "megküld");});
test("megküldte -> megküldt", function() {deepEqual( Stem("megküldte"), "megküldt");});
test("megküldéssel -> megküldés", function() {deepEqual( Stem("megküldéssel"), "megküldés");});
test("megküldésével -> megküldés", function() {deepEqual( Stem("megküldésével"), "megküldés");});
test("megkülönböztetendő -> megkülönböztetendő", function() {deepEqual( Stem("megkülönböztetendő"), "megkülönböztetendő");});
test("megkülönböztetett -> megkülönböztetet", function() {deepEqual( Stem("megkülönböztetett"), "megkülönböztetet");});
test("megkülönböztetetten -> megkülönböztetett", function() {deepEqual( Stem("megkülönböztetetten"), "megkülönböztetett");});
test("megkülönböztethetik -> megkülönböztethet", function() {deepEqual( Stem("megkülönböztethetik"), "megkülönböztethet");});
test("megkülönböztethető -> megkülönböztethető", function() {deepEqual( Stem("megkülönböztethető"), "megkülönböztethető");});
test("megkülönböztethetővé -> megkülönböztethető", function() {deepEqual( Stem("megkülönböztethetővé"), "megkülönböztethető");});
test("megkülönböztethetőségét -> megkülönböztethetőség", function() {deepEqual( Stem("megkülönböztethetőségét"), "megkülönböztethetőség");});
test("megkülönböztessük -> megkülönböztess", function() {deepEqual( Stem("megkülönböztessük"), "megkülönböztess");});
test("megkülönböztetni -> megkülönböztetn", function() {deepEqual( Stem("megkülönböztetni"), "megkülönböztetn");});
test("megkülönböztette -> megkülönböztett", function() {deepEqual( Stem("megkülönböztette"), "megkülönböztett");});
test("megkülönböztetve -> megkülönböztetv", function() {deepEqual( Stem("megkülönböztetve"), "megkülönböztetv");});
test("megkülönböztetés -> megkülönböztetés", function() {deepEqual( Stem("megkülönböztetés"), "megkülönböztetés");});
test("megkülönböztetése -> megkülönböztetés", function() {deepEqual( Stem("megkülönböztetése"), "megkülönböztetés");});
test("megkülönböztetések -> megkülönböztetés", function() {deepEqual( Stem("megkülönböztetések"), "megkülönböztetés");});
test("megkülönböztetéseket -> megkülönböztetés", function() {deepEqual( Stem("megkülönböztetéseket"), "megkülönböztetés");});
test("megkülönböztetésnek -> megkülönböztetés", function() {deepEqual( Stem("megkülönböztetésnek"), "megkülönböztetés");});
test("megkülönböztetésre -> megkülönböztetés", function() {deepEqual( Stem("megkülönböztetésre"), "megkülönböztetés");});
test("megkülönböztetést -> megkülönböztetés", function() {deepEqual( Stem("megkülönböztetést"), "megkülönböztetés");});
test("megkülönböztetésére -> megkülönböztetés", function() {deepEqual( Stem("megkülönböztetésére"), "megkülönböztetés");});
test("megkülönböztetését -> megkülönböztetés", function() {deepEqual( Stem("megkülönböztetését"), "megkülönböztetés");});
test("megkülönböztetési -> megkülönböztetés", function() {deepEqual( Stem("megkülönböztetési"), "megkülönböztetés");});
test("megkülönböztető -> megkülönböztető", function() {deepEqual( Stem("megkülönböztető"), "megkülönböztető");});
test("megkülönböztetünk -> megkülönböztet", function() {deepEqual( Stem("megkülönböztetünk"), "megkülönböztet");});
test("megküzdenek -> megküzd", function() {deepEqual( Stem("megküzdenek"), "megküzd");});
test("megküzdeni -> megküzden", function() {deepEqual( Stem("megküzdeni"), "megküzden");});
test("meglapul -> meglap", function() {deepEqual( Stem("meglapul"), "meglap");});
test("meglazíthattam -> meglazíthatt", function() {deepEqual( Stem("meglazíthattam"), "meglazíthatt");});
test("meglazították -> meglazította", function() {deepEqual( Stem("meglazították"), "meglazította");});
test("megleckéztessük -> megleckéztess", function() {deepEqual( Stem("megleckéztessük"), "megleckéztess");});
test("meglegyen -> meglegy", function() {deepEqual( Stem("meglegyen"), "meglegy");});
test("meglenne -> meglenn", function() {deepEqual( Stem("meglenne"), "meglenn");});
test("meglennének -> meglenn", function() {deepEqual( Stem("meglennének"), "meglenn");});
test("meglesz -> meglesz", function() {deepEqual( Stem("meglesz"), "meglesz");});
test("meglett -> meglet", function() {deepEqual( Stem("meglett"), "meglet");});
test("meglehet -> megleh", function() {deepEqual( Stem("meglehet"), "megleh");});
test("meglehetős -> meglehetős", function() {deepEqual( Stem("meglehetős"), "meglehetős");});
test("meglehetősen -> meglehetős", function() {deepEqual( Stem("meglehetősen"), "meglehetős");});
test("megleli -> meglel", function() {deepEqual( Stem("megleli"), "meglel");});
test("meglendül -> meglen", function() {deepEqual( Stem("meglendül"), "meglen");});
test("meglengették -> meglengette", function() {deepEqual( Stem("meglengették"), "meglengette");});
test("meglepett -> meglepet", function() {deepEqual( Stem("meglepett"), "meglepet");});
test("meglepetéscsapata -> meglepetéscsapat", function() {deepEqual( Stem("meglepetéscsapata"), "meglepetéscsapat");});
test("meglepetést -> meglepetés", function() {deepEqual( Stem("meglepetést"), "meglepetés");});
test("meglepetéstől -> meglepetés", function() {deepEqual( Stem("meglepetéstől"), "meglepetés");});
test("meglepetésében -> meglepetés", function() {deepEqual( Stem("meglepetésében"), "meglepetés");});
test("meglepetésére -> meglepetés", function() {deepEqual( Stem("meglepetésére"), "meglepetés");});
test("meglepetésük -> meglepetés", function() {deepEqual( Stem("meglepetésük"), "meglepetés");});
test("meglepetés -> meglepetés", function() {deepEqual( Stem("meglepetés"), "meglepetés");});
test("meglepetésből -> meglepetés", function() {deepEqual( Stem("meglepetésből"), "meglepetés");});
test("meglepetése -> meglepetés", function() {deepEqual( Stem("meglepetése"), "meglepetés");});
test("meglepetéseket -> meglepetés", function() {deepEqual( Stem("meglepetéseket"), "meglepetés");});
test("meglepetésekkel -> meglepetés", function() {deepEqual( Stem("meglepetésekkel"), "meglepetés");});
test("meglepetésemre -> meglepetés", function() {deepEqual( Stem("meglepetésemre"), "meglepetés");});
test("meglepetésként -> meglepetés", function() {deepEqual( Stem("meglepetésként"), "meglepetés");});
test("meglepetésre -> meglepetés", function() {deepEqual( Stem("meglepetésre"), "meglepetés");});
test("meglepetésről -> meglepetés", function() {deepEqual( Stem("meglepetésről"), "meglepetés");});
test("meglepetéssel -> meglepetés", function() {deepEqual( Stem("meglepetéssel"), "meglepetés");});
test("meglepetésszerű -> meglepetésszerű", function() {deepEqual( Stem("meglepetésszerű"), "meglepetésszerű");});
test("meglepetésszerűen -> meglepetésszerű", function() {deepEqual( Stem("meglepetésszerűen"), "meglepetésszerű");});
test("meglephetne -> meglephetn", function() {deepEqual( Stem("meglephetne"), "meglephetn");});
test("meglep -> meglep", function() {deepEqual( Stem("meglep"), "meglep");});
test("meglepem -> meglep", function() {deepEqual( Stem("meglepem"), "meglep");});
test("meglepik -> meglep", function() {deepEqual( Stem("meglepik"), "meglep");});
test("meglepte -> meglept", function() {deepEqual( Stem("meglepte"), "meglept");});
test("megleptek -> meglept", function() {deepEqual( Stem("megleptek"), "meglept");});
test("meglepve -> meglepv", function() {deepEqual( Stem("meglepve"), "meglepv");});
test("meglepő -> meglepő", function() {deepEqual( Stem("meglepő"), "meglepő");});
test("meglepőbb -> meglepőbb", function() {deepEqual( Stem("meglepőbb"), "meglepőbb");});
test("meglepődne -> meglepődn", function() {deepEqual( Stem("meglepődne"), "meglepődn");});
test("meglepődtek -> meglepődt", function() {deepEqual( Stem("meglepődtek"), "meglepődt");});
test("meglepődtem -> meglepődt", function() {deepEqual( Stem("meglepődtem"), "meglepődt");});
test("meglepődött -> meglepődöt", function() {deepEqual( Stem("meglepődött"), "meglepődöt");});
test("meglepően -> meglepő", function() {deepEqual( Stem("meglepően"), "meglepő");});
test("meglepődve -> meglepődv", function() {deepEqual( Stem("meglepődve"), "meglepődv");});
test("meglepődés -> meglepődés", function() {deepEqual( Stem("meglepődés"), "meglepődés");});
test("meglepődését -> meglepődés", function() {deepEqual( Stem("meglepődését"), "meglepődés");});
test("meglepődöttség -> meglepődöttség", function() {deepEqual( Stem("meglepődöttség"), "meglepődöttség");});
test("meglepődöttségemből -> meglepődöttség", function() {deepEqual( Stem("meglepődöttségemből"), "meglepődöttség");});
test("meglepődöttségtől -> meglepődöttség", function() {deepEqual( Stem("meglepődöttségtől"), "meglepődöttség");});
test("meglesni -> meglesn", function() {deepEqual( Stem("meglesni"), "meglesn");});
test("meglessem -> megless", function() {deepEqual( Stem("meglessem"), "megless");});
test("meglevő -> meglevő", function() {deepEqual( Stem("meglevő"), "meglevő");});
test("meglevők -> meglevő", function() {deepEqual( Stem("meglevők"), "meglevő");});
test("meglevőket -> meglevő", function() {deepEqual( Stem("meglevőket"), "meglevő");});
test("meglincselik -> meglincsel", function() {deepEqual( Stem("meglincselik"), "meglincsel");});
test("meglincselnek -> meglincsel", function() {deepEqual( Stem("meglincselnek"), "meglincsel");});
test("meglincsléséről -> meglincslés", function() {deepEqual( Stem("meglincsléséről"), "meglincslés");});
test("megláthat -> megláth", function() {deepEqual( Stem("megláthat"), "megláth");});
test("megláthatnék -> megláthatne", function() {deepEqual( Stem("megláthatnék"), "megláthatne");});
test("megláthatom -> megláthat", function() {deepEqual( Stem("megláthatom"), "megláthat");});
test("meglássam -> megláss", function() {deepEqual( Stem("meglássam"), "megláss");});
test("meglát -> megl", function() {deepEqual( Stem("meglát"), "megl");});
test("meglátja -> meglát", function() {deepEqual( Stem("meglátja"), "meglát");});
test("meglátjuk -> meglát", function() {deepEqual( Stem("meglátjuk"), "meglát");});
test("meglátjátok -> meglátját", function() {deepEqual( Stem("meglátjátok"), "meglátját");});
test("meglátnak -> meglát", function() {deepEqual( Stem("meglátnak"), "meglát");});
test("meglátod -> meglát", function() {deepEqual( Stem("meglátod"), "meglát");});
test("meglátogasson -> meglátogass", function() {deepEqual( Stem("meglátogasson"), "meglátogass");});
test("meglátogatjuk -> meglátogat", function() {deepEqual( Stem("meglátogatjuk"), "meglátogat");});
test("meglátogatni -> meglátogatn", function() {deepEqual( Stem("meglátogatni"), "meglátogatn");});
test("meglátogatom -> meglátogat", function() {deepEqual( Stem("meglátogatom"), "meglátogat");});
test("meglátogatta -> meglátogatt", function() {deepEqual( Stem("meglátogatta"), "meglátogatt");});
test("meglátogattak -> meglátogatt", function() {deepEqual( Stem("meglátogattak"), "meglátogatt");});
test("meglátogattuk -> meglátogatt", function() {deepEqual( Stem("meglátogattuk"), "meglátogatt");});
test("meglátogattunk -> meglátogatt", function() {deepEqual( Stem("meglátogattunk"), "meglátogatt");});
test("meglátogatunk -> meglátogat", function() {deepEqual( Stem("meglátogatunk"), "meglátogat");});
test("meglátogatott -> meglátogatot", function() {deepEqual( Stem("meglátogatott"), "meglátogatot");});
test("meglátogatása -> meglátogatás", function() {deepEqual( Stem("meglátogatása"), "meglátogatás");});
test("meglátogatók -> meglátogató", function() {deepEqual( Stem("meglátogatók"), "meglátogató");});
test("meglátott -> meglátot", function() {deepEqual( Stem("meglátott"), "meglátot");});
test("meglátok -> meglát", function() {deepEqual( Stem("meglátok"), "meglát");});
test("meglátom -> meglát", function() {deepEqual( Stem("meglátom"), "meglát");});
test("meglátszana -> meglátszan", function() {deepEqual( Stem("meglátszana"), "meglátszan");});
test("meglátszik -> meglátsz", function() {deepEqual( Stem("meglátszik"), "meglátsz");});
test("meglátta -> meglátt", function() {deepEqual( Stem("meglátta"), "meglátt");});
test("megláttak -> meglátt", function() {deepEqual( Stem("megláttak"), "meglátt");});
test("megláttam -> meglátt", function() {deepEqual( Stem("megláttam"), "meglátt");});
test("megláttam -> meglátt", function() {deepEqual( Stem("megláttam"), "meglátt");});
test("megláttuk -> meglátt", function() {deepEqual( Stem("megláttuk"), "meglátt");});
test("meglátták -> meglátta", function() {deepEqual( Stem("meglátták"), "meglátta");});
test("meglátszódjon -> meglátszódj", function() {deepEqual( Stem("meglátszódjon"), "meglátszódj");});
test("meglátása -> meglátás", function() {deepEqual( Stem("meglátása"), "meglátás");});
test("meglátásom -> meglátás", function() {deepEqual( Stem("meglátásom"), "meglátás");});
test("meglátásuk -> meglátás", function() {deepEqual( Stem("meglátásuk"), "meglátás");});
test("megléte -> meglét", function() {deepEqual( Stem("megléte"), "meglét");});
test("meglétének -> meglét", function() {deepEqual( Stem("meglétének"), "meglét");});
test("meglétét -> meglét", function() {deepEqual( Stem("meglétét"), "meglét");});
test("meglétével -> meglét", function() {deepEqual( Stem("meglétével"), "meglét");});
test("meglévő -> meglévő", function() {deepEqual( Stem("meglévő"), "meglévő");});
test("meglévőnek -> meglévő", function() {deepEqual( Stem("meglévőnek"), "meglévő");});
test("meglódul -> megló", function() {deepEqual( Stem("meglódul"), "megló");});
test("meglódult -> meglódul", function() {deepEqual( Stem("meglódult"), "meglódul");});
test("meglógni -> meglógn", function() {deepEqual( Stem("meglógni"), "meglógn");});
test("meglöki -> megl", function() {deepEqual( Stem("meglöki"), "megl");});
test("meglöktem -> meglökt", function() {deepEqual( Stem("meglöktem"), "meglökt");});
test("meglökött -> meglököt", function() {deepEqual( Stem("meglökött"), "meglököt");});
test("megmagyarázatlan -> megmagyarázatl", function() {deepEqual( Stem("megmagyarázatlan"), "megmagyarázatl");});
test("megmagyarázhatatlan -> megmagyarázhatatl", function() {deepEqual( Stem("megmagyarázhatatlan"), "megmagyarázhatatl");});
test("megmagyarázhatatlanná -> megmagyarázhatatlan", function() {deepEqual( Stem("megmagyarázhatatlanná"), "megmagyarázhatatlan");});
test("megmagyaráznak -> megmagyaráz", function() {deepEqual( Stem("megmagyaráznak"), "megmagyaráz");});
test("megmagyarázni -> megmagyarázn", function() {deepEqual( Stem("megmagyarázni"), "megmagyarázn");});
test("megmagyarázta -> megmagyarázt", function() {deepEqual( Stem("megmagyarázta"), "megmagyarázt");});
test("megmagyaráztam -> megmagyarázt", function() {deepEqual( Stem("megmagyaráztam"), "megmagyarázt");});
test("megmagyarázott -> megmagyarázot", function() {deepEqual( Stem("megmagyarázott"), "megmagyarázot");});
test("megmaradhattak -> megmaradhatt", function() {deepEqual( Stem("megmaradhattak"), "megmaradhatt");});
test("megmaradtak -> megmaradt", function() {deepEqual( Stem("megmaradtak"), "megmaradt");});
test("megmaradtam -> megmaradt", function() {deepEqual( Stem("megmaradtam"), "megmaradt");});
test("megmarad -> megmar", function() {deepEqual( Stem("megmarad"), "megmar");});
test("megmaradjak -> megmaradj", function() {deepEqual( Stem("megmaradjak"), "megmaradj");});
test("megmaradjon -> megmaradj", function() {deepEqual( Stem("megmaradjon"), "megmaradj");});
test("megmaradjunk -> megmaradj", function() {deepEqual( Stem("megmaradjunk"), "megmaradj");});
test("megmaradnak -> megmar", function() {deepEqual( Stem("megmaradnak"), "megmar");});
test("megmaradnának -> megmaradn", function() {deepEqual( Stem("megmaradnának"), "megmaradn");});
test("megmaradok -> megmarad", function() {deepEqual( Stem("megmaradok"), "megmarad");});
test("megmaradt -> megmar", function() {deepEqual( Stem("megmaradt"), "megmar");});
test("megmaradva -> megmaradv", function() {deepEqual( Stem("megmaradva"), "megmaradv");});
test("megmaradás -> megmaradás", function() {deepEqual( Stem("megmaradás"), "megmaradás");});
test("megmaradó -> megmaradó", function() {deepEqual( Stem("megmaradó"), "megmaradó");});
test("megmarkolnak -> megmarkol", function() {deepEqual( Stem("megmarkolnak"), "megmarkol");});
test("megmarkolni -> megmarkoln", function() {deepEqual( Stem("megmarkolni"), "megmarkoln");});
test("megmarkolta -> megmarkolt", function() {deepEqual( Stem("megmarkolta"), "megmarkolt");});
test("megmenekül -> megmen", function() {deepEqual( Stem("megmenekül"), "megmen");});
test("megmeneküljön -> megmenekülj", function() {deepEqual( Stem("megmeneküljön"), "megmenekülj");});
test("megmenekülsz -> megmenekülsz", function() {deepEqual( Stem("megmenekülsz"), "megmenekülsz");});
test("megmenekült -> megmenekül", function() {deepEqual( Stem("megmenekült"), "megmenekül");});
test("megmenekülés -> megmenekülés", function() {deepEqual( Stem("megmenekülés"), "megmenekülés");});
test("megmenekülésre -> megmenekülés", function() {deepEqual( Stem("megmenekülésre"), "megmenekülés");});
test("megmentenek -> megment", function() {deepEqual( Stem("megmentenek"), "megment");});
test("megmenteni -> megmenten", function() {deepEqual( Stem("megmenteni"), "megmenten");});
test("megmentettelek -> megmentettel", function() {deepEqual( Stem("megmentettelek"), "megmentettel");});
test("megmentett -> megmentet", function() {deepEqual( Stem("megmentett"), "megmentet");});
test("megmentettek -> megmentett", function() {deepEqual( Stem("megmentettek"), "megmentett");});
test("megmenthesse -> megmenthess", function() {deepEqual( Stem("megmenthesse"), "megmenthess");});
test("megmentheted -> megmenthet", function() {deepEqual( Stem("megmentheted"), "megmenthet");});
test("megmenthetném -> megmenthetne", function() {deepEqual( Stem("megmenthetném"), "megmenthetne");});
test("megmenthette -> megmenthett", function() {deepEqual( Stem("megmenthette"), "megmenthett");});
test("megmenti -> megment", function() {deepEqual( Stem("megmenti"), "megment");});
test("megmentsen -> megments", function() {deepEqual( Stem("megmentsen"), "megments");});
test("megmenthető -> megmenthető", function() {deepEqual( Stem("megmenthető"), "megmenthető");});
test("megmentése -> megmentés", function() {deepEqual( Stem("megmentése"), "megmentés");});
test("megmentésre -> megmentés", function() {deepEqual( Stem("megmentésre"), "megmentés");});
test("megmentésében -> megmentés", function() {deepEqual( Stem("megmentésében"), "megmentés");});
test("megmentésére -> megmentés", function() {deepEqual( Stem("megmentésére"), "megmentés");});
test("megmentését -> megmentés", function() {deepEqual( Stem("megmentését"), "megmentés");});
test("megmentéséért -> megmentés", function() {deepEqual( Stem("megmentéséért"), "megmentés");});
test("megmentésükre -> megmentés", function() {deepEqual( Stem("megmentésükre"), "megmentés");});
test("megmentőjének -> megmentő", function() {deepEqual( Stem("megmentőjének"), "megmentő");});
test("megmentőt -> megmentő", function() {deepEqual( Stem("megmentőt"), "megmentő");});
test("megmerevedett -> megmerevedet", function() {deepEqual( Stem("megmerevedett"), "megmerevedet");});
test("megmerevedve -> megmerevedv", function() {deepEqual( Stem("megmerevedve"), "megmerevedv");});
test("megmerítette -> megmerített", function() {deepEqual( Stem("megmerítette"), "megmerített");});
test("megmerítettem -> megmerített", function() {deepEqual( Stem("megmerítettem"), "megmerített");});
test("megmond -> megmon", function() {deepEqual( Stem("megmond"), "megmon");});
test("megmondani -> megmondan", function() {deepEqual( Stem("megmondani"), "megmondan");});
test("megmondania -> megmondan", function() {deepEqual( Stem("megmondania"), "megmondan");});
test("megmondaná -> megmondana", function() {deepEqual( Stem("megmondaná"), "megmondana");});
test("megmondd -> megmond", function() {deepEqual( Stem("megmondd"), "megmond");});
test("megmondhassa -> megmondhass", function() {deepEqual( Stem("megmondhassa"), "megmondhass");});
test("megmondhatja -> megmondhat", function() {deepEqual( Stem("megmondhatja"), "megmondhat");});
test("megmondhatná -> megmondhatna", function() {deepEqual( Stem("megmondhatná"), "megmondhatna");});
test("megmondta -> megmondt", function() {deepEqual( Stem("megmondta"), "megmondt");});
test("megmondtam -> megmondt", function() {deepEqual( Stem("megmondtam"), "megmondt");});
test("megmondtam -> megmondt", function() {deepEqual( Stem("megmondtam"), "megmondt");});
test("megmondták -> megmondta", function() {deepEqual( Stem("megmondták"), "megmondta");});
test("megmondtátok -> megmondtát", function() {deepEqual( Stem("megmondtátok"), "megmondtát");});
test("megmondja -> megmond", function() {deepEqual( Stem("megmondja"), "megmond");});
test("megmondják -> megmondja", function() {deepEqual( Stem("megmondják"), "megmondja");});
test("megmondom -> megmond", function() {deepEqual( Stem("megmondom"), "megmond");});
test("megmondhatói -> megmondható", function() {deepEqual( Stem("megmondhatói"), "megmondható");});
test("megmondott -> megmondot", function() {deepEqual( Stem("megmondott"), "megmondot");});
test("megmondva -> megmondv", function() {deepEqual( Stem("megmondva"), "megmondv");});
test("megmondóemberei -> megmondóember", function() {deepEqual( Stem("megmondóemberei"), "megmondóember");});
test("megmosakodhattak -> megmosakodhatt", function() {deepEqual( Stem("megmosakodhattak"), "megmosakodhatt");});
test("megmosakszom -> megmosaksz", function() {deepEqual( Stem("megmosakszom"), "megmosaksz");});
test("megmosakodtam -> megmosakodt", function() {deepEqual( Stem("megmosakodtam"), "megmosakodt");});
test("megmártóztunk -> megmártózt", function() {deepEqual( Stem("megmártóztunk"), "megmártózt");});
test("megmászott -> megmászot", function() {deepEqual( Stem("megmászott"), "megmászot");});
test("megmászta -> megmászt", function() {deepEqual( Stem("megmászta"), "megmászt");});
test("megmászni -> megmászn", function() {deepEqual( Stem("megmászni"), "megmászn");});
test("megmászásával -> megmászás", function() {deepEqual( Stem("megmászásával"), "megmászás");});
test("megmászó -> megmászó", function() {deepEqual( Stem("megmászó"), "megmászó");});
test("megmásítani -> megmásítan", function() {deepEqual( Stem("megmásítani"), "megmásítan");});
test("megmérettetés -> megmérettetés", function() {deepEqual( Stem("megmérettetés"), "megmérettetés");});
test("megmérettetések -> megmérettetés", function() {deepEqual( Stem("megmérettetések"), "megmérettetés");});
test("megmérettetésektől -> megmérettetés", function() {deepEqual( Stem("megmérettetésektől"), "megmérettetés");});
test("megmérettetésre -> megmérettetés", function() {deepEqual( Stem("megmérettetésre"), "megmérettetés");});
test("megmérettetést -> megmérettetés", function() {deepEqual( Stem("megmérettetést"), "megmérettetés");});
test("megmérgesíteni -> megmérgesíten", function() {deepEqual( Stem("megmérgesíteni"), "megmérgesíten");});
test("megmérgezi -> megmérgez", function() {deepEqual( Stem("megmérgezi"), "megmérgez");});
test("megmérgezni -> megmérgezn", function() {deepEqual( Stem("megmérgezni"), "megmérgezn");});
test("megmérgezte -> megmérgezt", function() {deepEqual( Stem("megmérgezte"), "megmérgezt");});
test("megmérgeztem -> megmérgezt", function() {deepEqual( Stem("megmérgeztem"), "megmérgezt");});
test("megmérgezték -> megmérgezte", function() {deepEqual( Stem("megmérgezték"), "megmérgezte");});
test("megmérgeztük -> megmérgezt", function() {deepEqual( Stem("megmérgeztük"), "megmérgezt");});
test("megmérgezze -> megmérgezz", function() {deepEqual( Stem("megmérgezze"), "megmérgezz");});
test("megmérhetik -> megmérhet", function() {deepEqual( Stem("megmérhetik"), "megmérhet");});
test("megmérkőztek -> megmérkőzt", function() {deepEqual( Stem("megmérkőztek"), "megmérkőzt");});
test("megmérkőzöm -> megmérkőzö", function() {deepEqual( Stem("megmérkőzöm"), "megmérkőzö");});
test("megmérkőzött -> megmérkőzöt", function() {deepEqual( Stem("megmérkőzött"), "megmérkőzöt");});
test("megmérni -> megmérn", function() {deepEqual( Stem("megmérni"), "megmérn");});
test("megmértem -> megmért", function() {deepEqual( Stem("megmértem"), "megmért");});
test("megművelni -> megműveln", function() {deepEqual( Stem("megművelni"), "megműveln");});
test("megművelése -> megművelés", function() {deepEqual( Stem("megművelése"), "megművelés");});
test("megnagyított -> megnagyítot", function() {deepEqual( Stem("megnagyított"), "megnagyítot");});
test("megnedvesedik -> megnedvesed", function() {deepEqual( Stem("megnedvesedik"), "megnedvesed");});
test("megnehezedett -> megnehezedet", function() {deepEqual( Stem("megnehezedett"), "megnehezedet");});
test("megnehezített -> megnehezítet", function() {deepEqual( Stem("megnehezített"), "megnehezítet");});
test("megnehezítené -> megnehezíten", function() {deepEqual( Stem("megnehezítené"), "megnehezíten");});
test("megnehezíti -> megnehezít", function() {deepEqual( Stem("megnehezíti"), "megnehezít");});
test("megnehezítik -> megnehezít", function() {deepEqual( Stem("megnehezítik"), "megnehezít");});
test("megnemtámadási -> megnemtámadás", function() {deepEqual( Stem("megnemtámadási"), "megnemtámadás");});
test("megneszelték -> megneszelte", function() {deepEqual( Stem("megneszelték"), "megneszelte");});
test("megnevelni -> megneveln", function() {deepEqual( Stem("megnevelni"), "megneveln");});
test("megnevettetem -> megnevettet", function() {deepEqual( Stem("megnevettetem"), "megnevettet");});
test("megnevezett -> megnevezet", function() {deepEqual( Stem("megnevezett"), "megnevezet");});
test("megnevezettek -> megnevezett", function() {deepEqual( Stem("megnevezettek"), "megnevezett");});
test("megnevezhetetlen -> megnevezhetetl", function() {deepEqual( Stem("megnevezhetetlen"), "megnevezhetetl");});
test("megnevezhető -> megnevezhető", function() {deepEqual( Stem("megnevezhető"), "megnevezhető");});
test("megnevezi -> megnevez", function() {deepEqual( Stem("megnevezi"), "megnevez");});
test("megnevezte -> megnevezt", function() {deepEqual( Stem("megnevezte"), "megnevezt");});
test("megnevezték -> megnevezte", function() {deepEqual( Stem("megnevezték"), "megnevezte");});
test("megnevezze -> megnevezz", function() {deepEqual( Stem("megnevezze"), "megnevezz");});
test("megneveztetik -> megneveztet", function() {deepEqual( Stem("megneveztetik"), "megneveztet");});
test("megnevezés -> megnevezés", function() {deepEqual( Stem("megnevezés"), "megnevezés");});
test("megnevezése -> megnevezés", function() {deepEqual( Stem("megnevezése"), "megnevezés");});
test("megnevezésében -> megnevezés", function() {deepEqual( Stem("megnevezésében"), "megnevezés");});
test("megnevezéséhez -> megnevezés", function() {deepEqual( Stem("megnevezéséhez"), "megnevezés");});
test("megnevezését -> megnevezés", function() {deepEqual( Stem("megnevezését"), "megnevezés");});
test("megnevezésével -> megnevezés", function() {deepEqual( Stem("megnevezésével"), "megnevezés");});
test("megnevezésükre -> megnevezés", function() {deepEqual( Stem("megnevezésükre"), "megnevezés");});
test("megnevező -> megnevező", function() {deepEqual( Stem("megnevező"), "megnevező");});
test("megnyaggatják -> megnyaggatja", function() {deepEqual( Stem("megnyaggatják"), "megnyaggatja");});
test("megnyalta -> megnyalt", function() {deepEqual( Stem("megnyalta"), "megnyalt");});
test("megnyerem -> megnyer", function() {deepEqual( Stem("megnyerem"), "megnyer");});
test("megnyerte -> megnyert", function() {deepEqual( Stem("megnyerte"), "megnyert");});
test("megnyertem -> megnyert", function() {deepEqual( Stem("megnyertem"), "megnyert");});
test("megnyerték -> megnyerte", function() {deepEqual( Stem("megnyerték"), "megnyerte");});
test("megnyertük -> megnyert", function() {deepEqual( Stem("megnyertük"), "megnyert");});
test("megnyertünk -> megnyert", function() {deepEqual( Stem("megnyertünk"), "megnyert");});
test("megnyerje -> megnyer", function() {deepEqual( Stem("megnyerje"), "megnyer");});
test("megnyerjék -> megnyerje", function() {deepEqual( Stem("megnyerjék"), "megnyerje");});
test("megnyerni -> megnyern", function() {deepEqual( Stem("megnyerni"), "megnyern");});
test("megnyernünk -> megnyern", function() {deepEqual( Stem("megnyernünk"), "megnyern");});
test("megnyert -> megnyer", function() {deepEqual( Stem("megnyert"), "megnyer");});
test("megnyerése -> megnyerés", function() {deepEqual( Stem("megnyerése"), "megnyerés");});
test("megnyerését -> megnyerés", function() {deepEqual( Stem("megnyerését"), "megnyerés");});
test("megnyerő -> megnyerő", function() {deepEqual( Stem("megnyerő"), "megnyerő");});
test("megnyilvánul -> megnyilv", function() {deepEqual( Stem("megnyilvánul"), "megnyilv");});
test("megnyilvánulhat -> megnyilvánulh", function() {deepEqual( Stem("megnyilvánulhat"), "megnyilvánulh");});
test("megnyilvánulhatnak -> megnyilvánulhat", function() {deepEqual( Stem("megnyilvánulhatnak"), "megnyilvánulhat");});
test("megnyilvánult -> megnyilvánul", function() {deepEqual( Stem("megnyilvánult"), "megnyilvánul");});
test("megnyilvánulása -> megnyilvánulás", function() {deepEqual( Stem("megnyilvánulása"), "megnyilvánulás");});
test("megnyilvánulásait -> megnyilvánulás", function() {deepEqual( Stem("megnyilvánulásait"), "megnyilvánulás");});
test("megnyilvánulások -> megnyilvánulás", function() {deepEqual( Stem("megnyilvánulások"), "megnyilvánulás");});
test("megnyilvánulásokat -> megnyilvánulás", function() {deepEqual( Stem("megnyilvánulásokat"), "megnyilvánulás");});
test("megnyilvánulásról -> megnyilvánulás", function() {deepEqual( Stem("megnyilvánulásról"), "megnyilvánulás");});
test("megnyilvánulást -> megnyilvánulás", function() {deepEqual( Stem("megnyilvánulást"), "megnyilvánulás");});
test("megnyilvánulásának -> megnyilvánulás", function() {deepEqual( Stem("megnyilvánulásának"), "megnyilvánulás");});
test("megnyilvánulását -> megnyilvánulás", function() {deepEqual( Stem("megnyilvánulását"), "megnyilvánulás");});
test("megnyilvánulási -> megnyilvánulás", function() {deepEqual( Stem("megnyilvánulási"), "megnyilvánulás");});
test("megnyilvánuló -> megnyilvánuló", function() {deepEqual( Stem("megnyilvánuló"), "megnyilvánuló");});
test("megnyirbálja -> megnyirbál", function() {deepEqual( Stem("megnyirbálja"), "megnyirbál");});
test("megnyirbálják -> megnyirbálja", function() {deepEqual( Stem("megnyirbálják"), "megnyirbálja");});
test("megnyirbált -> megnyirbál", function() {deepEqual( Stem("megnyirbált"), "megnyirbál");});
test("megnyirbálásához -> megnyirbálás", function() {deepEqual( Stem("megnyirbálásához"), "megnyirbálás");});
test("megnyitandó -> megnyitandó", function() {deepEqual( Stem("megnyitandó"), "megnyitandó");});
test("megnyithassák -> megnyithassa", function() {deepEqual( Stem("megnyithassák"), "megnyithassa");});
test("megnyithattam -> megnyithatt", function() {deepEqual( Stem("megnyithattam"), "megnyithatt");});
test("megnyitható -> megnyitható", function() {deepEqual( Stem("megnyitható"), "megnyitható");});
test("megnyitja -> megnyit", function() {deepEqual( Stem("megnyitja"), "megnyit");});
test("megnyit -> megny", function() {deepEqual( Stem("megnyit"), "megny");});
test("megnyitják -> megnyitja", function() {deepEqual( Stem("megnyitják"), "megnyitja");});
test("megnyitni -> megnyitn", function() {deepEqual( Stem("megnyitni"), "megnyitn");});
test("megnyitottuk -> megnyitott", function() {deepEqual( Stem("megnyitottuk"), "megnyitott");});
test("megnyitották -> megnyitotta", function() {deepEqual( Stem("megnyitották"), "megnyitotta");});
test("megnyitott -> megnyitot", function() {deepEqual( Stem("megnyitott"), "megnyitot");});
test("megnyitva -> megnyitv", function() {deepEqual( Stem("megnyitva"), "megnyitv");});
test("megnyitása -> megnyitás", function() {deepEqual( Stem("megnyitása"), "megnyitás");});
test("megnyitásakormegnyitásából -> megnyitásakormegnyitás", function() {deepEqual( Stem("megnyitásakormegnyitásából"), "megnyitásakormegnyitás");});
test("megnyitásához -> megnyitás", function() {deepEqual( Stem("megnyitásához"), "megnyitás");});
test("megnyitásáig -> megnyitás", function() {deepEqual( Stem("megnyitásáig"), "megnyitás");});
test("megnyitásának -> megnyitás", function() {deepEqual( Stem("megnyitásának"), "megnyitás");});
test("megnyitására -> megnyitás", function() {deepEqual( Stem("megnyitására"), "megnyitás");});
test("megnyitásáról -> megnyitás", function() {deepEqual( Stem("megnyitásáról"), "megnyitás");});
test("megnyitását -> megnyitás", function() {deepEqual( Stem("megnyitását"), "megnyitás");});
test("megnyitásával -> megnyitás", function() {deepEqual( Stem("megnyitásával"), "megnyitás");});
test("megnyitóbeszédében -> megnyitóbeszéd", function() {deepEqual( Stem("megnyitóbeszédében"), "megnyitóbeszéd");});
test("megnyitó -> megnyitó", function() {deepEqual( Stem("megnyitó"), "megnyitó");});
test("megnyitóink -> megnyitó", function() {deepEqual( Stem("megnyitóink"), "megnyitó");});
test("megnyitója -> megnyitó", function() {deepEqual( Stem("megnyitója"), "megnyitó");});
test("megnyitójában -> megnyitó", function() {deepEqual( Stem("megnyitójában"), "megnyitó");});
test("megnyitón -> megnyitó", function() {deepEqual( Stem("megnyitón"), "megnyitó");});
test("megnyitóra -> megnyitó", function() {deepEqual( Stem("megnyitóra"), "megnyitó");});
test("megnyitóval -> megnyitó", function() {deepEqual( Stem("megnyitóval"), "megnyitó");});
test("megnyomja -> megnyom", function() {deepEqual( Stem("megnyomja"), "megnyom");});
test("megnyomott -> megnyomot", function() {deepEqual( Stem("megnyomott"), "megnyomot");});
test("megnyomása -> megnyomás", function() {deepEqual( Stem("megnyomása"), "megnyomás");});
test("megnyugodhatnak -> megnyugodhat", function() {deepEqual( Stem("megnyugodhatnak"), "megnyugodhat");});
test("megnyugodjak -> megnyugodj", function() {deepEqual( Stem("megnyugodjak"), "megnyugodj");});
test("megnyugodni -> megnyugodn", function() {deepEqual( Stem("megnyugodni"), "megnyugodn");});
test("megnyugodnának -> megnyugodn", function() {deepEqual( Stem("megnyugodnának"), "megnyugodn");});
test("megnyugodtak -> megnyugodt", function() {deepEqual( Stem("megnyugodtak"), "megnyugodt");});
test("megnyugodtam -> megnyugodt", function() {deepEqual( Stem("megnyugodtam"), "megnyugodt");});
test("megnyugodtunk -> megnyugodt", function() {deepEqual( Stem("megnyugodtunk"), "megnyugodt");});
test("megnyugszik -> megnyugsz", function() {deepEqual( Stem("megnyugszik"), "megnyugsz");});
test("megnyugodott -> megnyugodot", function() {deepEqual( Stem("megnyugodott"), "megnyugodot");});
test("megnyugodva -> megnyugodv", function() {deepEqual( Stem("megnyugodva"), "megnyugodv");});
test("megnyugtassa -> megnyugtass", function() {deepEqual( Stem("megnyugtassa"), "megnyugtass");});
test("megnyugtassák -> megnyugtassa", function() {deepEqual( Stem("megnyugtassák"), "megnyugtassa");});
test("megnyugtat -> megnyugt", function() {deepEqual( Stem("megnyugtat"), "megnyugt");});
test("megnyugtatja -> megnyugtat", function() {deepEqual( Stem("megnyugtatja"), "megnyugtat");});
test("megnyugtatni -> megnyugtatn", function() {deepEqual( Stem("megnyugtatni"), "megnyugtatn");});
test("megnyugtatnia -> megnyugtatn", function() {deepEqual( Stem("megnyugtatnia"), "megnyugtatn");});
test("megnyugtatta -> megnyugtatt", function() {deepEqual( Stem("megnyugtatta"), "megnyugtatt");});
test("megnyugtatták -> megnyugtatta", function() {deepEqual( Stem("megnyugtatták"), "megnyugtatta");});
test("megnyugtatott -> megnyugtatot", function() {deepEqual( Stem("megnyugtatott"), "megnyugtatot");});
test("megnyugtatására -> megnyugtatás", function() {deepEqual( Stem("megnyugtatására"), "megnyugtatás");});
test("megnyugtató -> megnyugtató", function() {deepEqual( Stem("megnyugtató"), "megnyugtató");});
test("megnyugtatóak -> megnyugtató", function() {deepEqual( Stem("megnyugtatóak"), "megnyugtató");});
test("megnyugtatóan -> megnyugtató", function() {deepEqual( Stem("megnyugtatóan"), "megnyugtató");});
test("megnyugtatóbb -> megnyugtatóbb", function() {deepEqual( Stem("megnyugtatóbb"), "megnyugtatóbb");});
test("megnyugtatónak -> megnyugtató", function() {deepEqual( Stem("megnyugtatónak"), "megnyugtató");});
test("megnyugvással -> megnyugvás", function() {deepEqual( Stem("megnyugvással"), "megnyugvás");});
test("megnyílhat -> megnyílh", function() {deepEqual( Stem("megnyílhat"), "megnyílh");});
test("megnyílik -> megnyíl", function() {deepEqual( Stem("megnyílik"), "megnyíl");});
test("megnyílt -> megnyíl", function() {deepEqual( Stem("megnyílt"), "megnyíl");});
test("megnyíltak -> megnyílt", function() {deepEqual( Stem("megnyíltak"), "megnyílt");});
test("megnyíltával -> megnyílt", function() {deepEqual( Stem("megnyíltával"), "megnyílt");});
test("megnyíló -> megnyíló", function() {deepEqual( Stem("megnyíló"), "megnyíló");});
test("megnézett -> megnézet", function() {deepEqual( Stem("megnézett"), "megnézet");});
test("megnézhesse -> megnézhess", function() {deepEqual( Stem("megnézhesse"), "megnézhess");});
test("megnézhessék -> megnézhesse", function() {deepEqual( Stem("megnézhessék"), "megnézhesse");});
test("megnézhessük -> megnézhess", function() {deepEqual( Stem("megnézhessük"), "megnézhess");});
test("megnézhetem -> megnézhet", function() {deepEqual( Stem("megnézhetem"), "megnézhet");});
test("megnézheti -> megnézhet", function() {deepEqual( Stem("megnézheti"), "megnézhet");});
test("megnézhetnéd -> megnézhetne", function() {deepEqual( Stem("megnézhetnéd"), "megnézhetne");});
test("megnézhette -> megnézhett", function() {deepEqual( Stem("megnézhette"), "megnézhett");});
test("megnézhettük -> megnézhett", function() {deepEqual( Stem("megnézhettük"), "megnézhett");});
test("megnézd -> megnéz", function() {deepEqual( Stem("megnézd"), "megnéz");});
test("megnézem -> megnéz", function() {deepEqual( Stem("megnézem"), "megnéz");});
test("megnézi -> megnéz", function() {deepEqual( Stem("megnézi"), "megnéz");});
test("megnézik -> megnéz", function() {deepEqual( Stem("megnézik"), "megnéz");});
test("megnéznek -> megnéz", function() {deepEqual( Stem("megnéznek"), "megnéz");});
test("megnézni -> megnézn", function() {deepEqual( Stem("megnézni"), "megnézn");});
test("megnéznék -> megnézne", function() {deepEqual( Stem("megnéznék"), "megnézne");});
test("megnézném -> megnézne", function() {deepEqual( Stem("megnézném"), "megnézne");});
test("megnéznünk -> megnézn", function() {deepEqual( Stem("megnéznünk"), "megnézn");});
test("megnézte -> megnézt", function() {deepEqual( Stem("megnézte"), "megnézt");});
test("megnéztek -> megnézt", function() {deepEqual( Stem("megnéztek"), "megnézt");});
test("megnéztem -> megnézt", function() {deepEqual( Stem("megnéztem"), "megnézt");});
test("megnézték -> megnézte", function() {deepEqual( Stem("megnézték"), "megnézte");});
test("megnéztünk -> megnézt", function() {deepEqual( Stem("megnéztünk"), "megnézt");});
test("megnézze -> megnézz", function() {deepEqual( Stem("megnézze"), "megnézz");});
test("megnézzem -> megnézz", function() {deepEqual( Stem("megnézzem"), "megnézz");});
test("megnézzék -> megnézze", function() {deepEqual( Stem("megnézzék"), "megnézze");});
test("megnézzétek -> megnézzét", function() {deepEqual( Stem("megnézzétek"), "megnézzét");});
test("megnézzük -> megnézz", function() {deepEqual( Stem("megnézzük"), "megnézz");});
test("megnézése -> megnézés", function() {deepEqual( Stem("megnézése"), "megnézés");});
test("megnézéséhez -> megnézés", function() {deepEqual( Stem("megnézéséhez"), "megnézés");});
test("megnézésére -> megnézés", function() {deepEqual( Stem("megnézésére"), "megnézés");});
test("megnézését -> megnézés", function() {deepEqual( Stem("megnézését"), "megnézés");});
test("megnövök -> megnöv", function() {deepEqual( Stem("megnövök"), "megnöv");});
test("megnő -> megnő", function() {deepEqual( Stem("megnő"), "megnő");});
test("megnőne -> megnőn", function() {deepEqual( Stem("megnőne"), "megnőn");});
test("megnősülni -> megnősüln", function() {deepEqual( Stem("megnősülni"), "megnősüln");});
test("megnősült -> megnősül", function() {deepEqual( Stem("megnősült"), "megnősül");});
test("megnősültem -> megnősült", function() {deepEqual( Stem("megnősültem"), "megnősült");});
test("megnősültél -> megnősültél", function() {deepEqual( Stem("megnősültél"), "megnősültél");});
test("megnőtt -> megnőt", function() {deepEqual( Stem("megnőtt"), "megnőt");});
test("megnőttek -> megnőtt", function() {deepEqual( Stem("megnőttek"), "megnőtt");});
test("megnövekedett -> megnövekedet", function() {deepEqual( Stem("megnövekedett"), "megnövekedet");});
test("megnövekedne -> megnövekedn", function() {deepEqual( Stem("megnövekedne"), "megnövekedn");});
test("megnövekedtek -> megnövekedt", function() {deepEqual( Stem("megnövekedtek"), "megnövekedt");});
test("megnövekszik -> megnöveksz", function() {deepEqual( Stem("megnövekszik"), "megnöveksz");});
test("megnövekedése -> megnövekedés", function() {deepEqual( Stem("megnövekedése"), "megnövekedés");});
test("megnövekvő -> megnövekvő", function() {deepEqual( Stem("megnövekvő"), "megnövekvő");});
test("megnövelhető -> megnövelhető", function() {deepEqual( Stem("megnövelhető"), "megnövelhető");});
test("megnöveli -> megnövel", function() {deepEqual( Stem("megnöveli"), "megnövel");});
test("megnövelje -> megnövel", function() {deepEqual( Stem("megnövelje"), "megnövel");});
test("megnövelni -> megnöveln", function() {deepEqual( Stem("megnövelni"), "megnöveln");});
test("megnövelné -> megnöveln", function() {deepEqual( Stem("megnövelné"), "megnöveln");});
test("megnövelnék -> megnövelne", function() {deepEqual( Stem("megnövelnék"), "megnövelne");});
test("megnövelt -> megnövel", function() {deepEqual( Stem("megnövelt"), "megnövel");});
test("megnövelését -> megnövelés", function() {deepEqual( Stem("megnövelését"), "megnövelés");});
test("megokolatlan -> megokolatl", function() {deepEqual( Stem("megokolatlan"), "megokolatl");});
test("megokolatlanul -> megokolatlan", function() {deepEqual( Stem("megokolatlanul"), "megokolatlan");});
test("megokolhatatlan -> megokolhatatl", function() {deepEqual( Stem("megokolhatatlan"), "megokolhatatl");});
test("megokolja -> megokol", function() {deepEqual( Stem("megokolja"), "megokol");});
test("megokolás -> megokolás", function() {deepEqual( Stem("megokolás"), "megokolás");});
test("megokolása -> megokolás", function() {deepEqual( Stem("megokolása"), "megokolás");});
test("megokolással -> megokolás", function() {deepEqual( Stem("megokolással"), "megokolás");});
test("megoldandó -> megoldandó", function() {deepEqual( Stem("megoldandó"), "megoldandó");});
test("megoldatlan -> megoldatl", function() {deepEqual( Stem("megoldatlan"), "megoldatl");});
test("megoldhatatlan -> megoldhatatl", function() {deepEqual( Stem("megoldhatatlan"), "megoldhatatl");});
test("megoldhatatlanságának -> megoldhatatlanság", function() {deepEqual( Stem("megoldhatatlanságának"), "megoldhatatlanság");});
test("megoldható -> megoldható", function() {deepEqual( Stem("megoldható"), "megoldható");});
test("megoldotta -> megoldott", function() {deepEqual( Stem("megoldotta"), "megoldott");});
test("megoldottam -> megoldott", function() {deepEqual( Stem("megoldottam"), "megoldott");});
test("megoldottuk -> megoldott", function() {deepEqual( Stem("megoldottuk"), "megoldott");});
test("megoldottunk -> megoldott", function() {deepEqual( Stem("megoldottunk"), "megoldott");});
test("megoldották -> megoldotta", function() {deepEqual( Stem("megoldották"), "megoldotta");});
test("megoldani -> megoldan", function() {deepEqual( Stem("megoldani"), "megoldan");});
test("megoldania -> megoldan", function() {deepEqual( Stem("megoldania"), "megoldan");});
test("megoldja -> megold", function() {deepEqual( Stem("megoldja"), "megold");});
test("megoldjuk -> megold", function() {deepEqual( Stem("megoldjuk"), "megold");});
test("megoldják -> megoldja", function() {deepEqual( Stem("megoldják"), "megoldja");});
test("megoldom -> megold", function() {deepEqual( Stem("megoldom"), "megold");});
test("megoldott -> megoldot", function() {deepEqual( Stem("megoldott"), "megoldot");});
test("megoldva -> megoldv", function() {deepEqual( Stem("megoldva"), "megoldv");});
test("megoldást -> megoldás", function() {deepEqual( Stem("megoldást"), "megoldás");});
test("megoldásába -> megoldás", function() {deepEqual( Stem("megoldásába"), "megoldás");});
test("megoldásában -> megoldás", function() {deepEqual( Stem("megoldásában"), "megoldás");});
test("megoldásához -> megoldás", function() {deepEqual( Stem("megoldásához"), "megoldás");});
test("megoldásán -> megoldás", function() {deepEqual( Stem("megoldásán"), "megoldás");});
test("megoldásának -> megoldás", function() {deepEqual( Stem("megoldásának"), "megoldás");});
test("megoldására -> megoldás", function() {deepEqual( Stem("megoldására"), "megoldás");});
test("megoldását -> megoldás", function() {deepEqual( Stem("megoldását"), "megoldás");});
test("megoldásával -> megoldás", function() {deepEqual( Stem("megoldásával"), "megoldás");});
test("megoldásra -> megoldás", function() {deepEqual( Stem("megoldásra"), "megoldás");});
test("megoldásról -> megoldás", function() {deepEqual( Stem("megoldásról"), "megoldás");});
test("megoldással -> megoldás", function() {deepEqual( Stem("megoldással"), "megoldás");});
test("megoldásként -> megoldás", function() {deepEqual( Stem("megoldásként"), "megoldás");});
test("megoldásnak -> megoldás", function() {deepEqual( Stem("megoldásnak"), "megoldás");});
test("megoldásnál -> megoldás", function() {deepEqual( Stem("megoldásnál"), "megoldás");});
test("megoldások -> megoldás", function() {deepEqual( Stem("megoldások"), "megoldás");});
test("megoldásokal -> megoldásokal", function() {deepEqual( Stem("megoldásokal"), "megoldásokal");});
test("megoldásokat -> megoldás", function() {deepEqual( Stem("megoldásokat"), "megoldás");});
test("megoldásokba -> megoldás", function() {deepEqual( Stem("megoldásokba"), "megoldás");});
test("megoldásokban -> megoldás", function() {deepEqual( Stem("megoldásokban"), "megoldás");});
test("megoldásokkal -> megoldás", function() {deepEqual( Stem("megoldásokkal"), "megoldás");});
test("megoldásoknak -> megoldás", function() {deepEqual( Stem("megoldásoknak"), "megoldás");});
test("megoldásokra -> megoldás", function() {deepEqual( Stem("megoldásokra"), "megoldás");});
test("megoldásokról -> megoldás", function() {deepEqual( Stem("megoldásokról"), "megoldás");});
test("megoldásoktól -> megoldás", function() {deepEqual( Stem("megoldásoktól"), "megoldás");});
test("megoldásokért -> megoldás", function() {deepEqual( Stem("megoldásokért"), "megoldás");});
test("megoldáson -> megoldás", function() {deepEqual( Stem("megoldáson"), "megoldás");});
test("megoldáshoz -> megoldás", function() {deepEqual( Stem("megoldáshoz"), "megoldás");});
test("megoldás -> megoldás", function() {deepEqual( Stem("megoldás"), "megoldás");});
test("megoldása -> megoldás", function() {deepEqual( Stem("megoldása"), "megoldás");});
test("megoldásai -> megoldás", function() {deepEqual( Stem("megoldásai"), "megoldás");});
test("megoldásaik -> megoldás", function() {deepEqual( Stem("megoldásaik"), "megoldás");});
test("megoldásaikról -> megoldás", function() {deepEqual( Stem("megoldásaikról"), "megoldás");});
test("megoldásaink -> megoldás", function() {deepEqual( Stem("megoldásaink"), "megoldás");});
test("megoldásaira -> megoldás", function() {deepEqual( Stem("megoldásaira"), "megoldás");});
test("megoldásairól -> megoldás", function() {deepEqual( Stem("megoldásairól"), "megoldás");});
test("megoldásait -> megoldás", function() {deepEqual( Stem("megoldásait"), "megoldás");});
test("megoldásaival -> megoldás", function() {deepEqual( Stem("megoldásaival"), "megoldás");});
test("megoldásban -> megoldás", function() {deepEqual( Stem("megoldásban"), "megoldás");});
test("megoldásból -> megoldás", function() {deepEqual( Stem("megoldásból"), "megoldás");});
test("megoldáscsomag -> megoldáscsomag", function() {deepEqual( Stem("megoldáscsomag"), "megoldáscsomag");});
test("megoldási -> megoldás", function() {deepEqual( Stem("megoldási"), "megoldás");});
test("megoldásorientáltak -> megoldásorientált", function() {deepEqual( Stem("megoldásorientáltak"), "megoldásorientált");});
test("megoldásszállító -> megoldásszállító", function() {deepEqual( Stem("megoldásszállító"), "megoldásszállító");});
test("megoldásszállítók -> megoldásszállító", function() {deepEqual( Stem("megoldásszállítók"), "megoldásszállító");});
test("megoldásszállítókkal -> megoldásszállító", function() {deepEqual( Stem("megoldásszállítókkal"), "megoldásszállító");});
test("megoldásszállítóvá -> megoldásszállító", function() {deepEqual( Stem("megoldásszállítóvá"), "megoldásszállító");});
test("megoldó -> megoldó", function() {deepEqual( Stem("megoldó"), "megoldó");});
test("megoldódhat -> megoldódh", function() {deepEqual( Stem("megoldódhat"), "megoldódh");});
test("megoldódhatna -> megoldódhatn", function() {deepEqual( Stem("megoldódhatna"), "megoldódhatn");});
test("megoldódik -> megoldód", function() {deepEqual( Stem("megoldódik"), "megoldód");});
test("megoldódjék -> megoldódje", function() {deepEqual( Stem("megoldódjék"), "megoldódje");});
test("megoldódtak -> megoldódt", function() {deepEqual( Stem("megoldódtak"), "megoldódt");});
test("megoldódva -> megoldódv", function() {deepEqual( Stem("megoldódva"), "megoldódv");});
test("megoldódási -> megoldódás", function() {deepEqual( Stem("megoldódási"), "megoldódás");});
test("megoldóképességünket -> megoldóképesség", function() {deepEqual( Stem("megoldóképességünket"), "megoldóképesség");});
test("megoltalmazzon -> megoltalmazz", function() {deepEqual( Stem("megoltalmazzon"), "megoltalmazz");});
test("megostoroztak -> megostorozt", function() {deepEqual( Stem("megostoroztak"), "megostorozt");});
test("megoszlanak -> megoszl", function() {deepEqual( Stem("megoszlanak"), "megoszl");});
test("megoszlik -> megoszl", function() {deepEqual( Stem("megoszlik"), "megoszl");});
test("megoszlása -> megoszlás", function() {deepEqual( Stem("megoszlása"), "megoszlás");});
test("megoszlást -> megoszlás", function() {deepEqual( Stem("megoszlást"), "megoszlás");});
test("megoszlását -> megoszlás", function() {deepEqual( Stem("megoszlását"), "megoszlás");});
test("megosztandó -> megosztandó", function() {deepEqual( Stem("megosztandó"), "megosztandó");});
test("megosztottuk -> megosztott", function() {deepEqual( Stem("megosztottuk"), "megosztott");});
test("megosztunk -> megoszt", function() {deepEqual( Stem("megosztunk"), "megoszt");});
test("megosszák -> megossza", function() {deepEqual( Stem("megosszák"), "megossza");});
test("megosztani -> megosztan", function() {deepEqual( Stem("megosztani"), "megosztan");});
test("megosztania -> megosztan", function() {deepEqual( Stem("megosztania"), "megosztan");});
test("megosztanunk -> megosztan", function() {deepEqual( Stem("megosztanunk"), "megosztan");});
test("megosztaná -> megosztana", function() {deepEqual( Stem("megosztaná"), "megosztana");});
test("megosztja -> megoszt", function() {deepEqual( Stem("megosztja"), "megoszt");});
test("megosztjuk -> megoszt", function() {deepEqual( Stem("megosztjuk"), "megoszt");});
test("megosztják -> megosztja", function() {deepEqual( Stem("megosztják"), "megosztja");});
test("megoszthassa -> megoszthass", function() {deepEqual( Stem("megoszthassa"), "megoszthass");});
test("megoszthatja -> megoszthat", function() {deepEqual( Stem("megoszthatja"), "megoszthat");});
test("megoszthatjuk -> megoszthat", function() {deepEqual( Stem("megoszthatjuk"), "megoszthat");});
test("megoszthatják -> megoszthatja", function() {deepEqual( Stem("megoszthatják"), "megoszthatja");});
test("megoszthatok -> megoszthat", function() {deepEqual( Stem("megoszthatok"), "megoszthat");});
test("megoszthattam -> megoszthatt", function() {deepEqual( Stem("megoszthattam"), "megoszthatt");});
test("megosztható -> megosztható", function() {deepEqual( Stem("megosztható"), "megosztható");});
test("megoszthatók -> megosztható", function() {deepEqual( Stem("megoszthatók"), "megosztható");});
test("megosztott -> megosztot", function() {deepEqual( Stem("megosztott"), "megosztot");});
test("megosztottak -> megosztott", function() {deepEqual( Stem("megosztottak"), "megosztott");});
test("megosztottba -> megosztott", function() {deepEqual( Stem("megosztottba"), "megosztott");});
test("megosztottság -> megosztottság", function() {deepEqual( Stem("megosztottság"), "megosztottság");});
test("megosztottsága -> megosztottság", function() {deepEqual( Stem("megosztottsága"), "megosztottság");});
test("megosztottságot -> megosztottság", function() {deepEqual( Stem("megosztottságot"), "megosztottság");});
test("megosztottságát -> megosztottság", function() {deepEqual( Stem("megosztottságát"), "megosztottság");});
test("megosztva -> megosztv", function() {deepEqual( Stem("megosztva"), "megosztv");});
test("megosztására -> megosztás", function() {deepEqual( Stem("megosztására"), "megosztás");});
test("megosztásáról -> megosztás", function() {deepEqual( Stem("megosztásáról"), "megosztás");});
test("megosztását -> megosztás", function() {deepEqual( Stem("megosztását"), "megosztás");});
test("megosztásával -> megosztás", function() {deepEqual( Stem("megosztásával"), "megosztás");});
test("megosztások -> megosztás", function() {deepEqual( Stem("megosztások"), "megosztás");});
test("megosztásokat -> megosztás", function() {deepEqual( Stem("megosztásokat"), "megosztás");});
test("megosztásokhoz -> megosztás", function() {deepEqual( Stem("megosztásokhoz"), "megosztás");});
test("megosztásokkal -> megosztás", function() {deepEqual( Stem("megosztásokkal"), "megosztás");});
test("megosztásoknak -> megosztás", function() {deepEqual( Stem("megosztásoknak"), "megosztás");});
test("megosztáson -> megosztás", function() {deepEqual( Stem("megosztáson"), "megosztás");});
test("megosztásról -> megosztás", function() {deepEqual( Stem("megosztásról"), "megosztás");});
test("megosztást -> megosztás", function() {deepEqual( Stem("megosztást"), "megosztás");});
test("megosztásához -> megosztás", function() {deepEqual( Stem("megosztásához"), "megosztás");});
test("megosztásának -> megosztás", function() {deepEqual( Stem("megosztásának"), "megosztás");});
test("megosztás -> megosztás", function() {deepEqual( Stem("megosztás"), "megosztás");});
test("megosztása -> megosztás", function() {deepEqual( Stem("megosztása"), "megosztás");});
test("megosztásaihoz -> megosztás", function() {deepEqual( Stem("megosztásaihoz"), "megosztás");});
test("megosztásait -> megosztás", function() {deepEqual( Stem("megosztásait"), "megosztás");});
test("megosztásból -> megosztás", function() {deepEqual( Stem("megosztásból"), "megosztás");});
test("megosztáshoz -> megosztás", function() {deepEqual( Stem("megosztáshoz"), "megosztás");});
test("megosztásnak -> megosztás", function() {deepEqual( Stem("megosztásnak"), "megosztás");});
test("megosztásnak -> megosztás", function() {deepEqual( Stem("megosztásnak"), "megosztás");});
test("megosztási -> megosztás", function() {deepEqual( Stem("megosztási"), "megosztás");});
test("megosztásnév -> megosztásnév", function() {deepEqual( Stem("megosztásnév"), "megosztásnév");});
test("megosztó -> megosztó", function() {deepEqual( Stem("megosztó"), "megosztó");});
test("megpakolt -> megpakol", function() {deepEqual( Stem("megpakolt"), "megpakol");});
test("megpakolva -> megpakolv", function() {deepEqual( Stem("megpakolva"), "megpakolv");});
test("megparancsolja -> megparancsol", function() {deepEqual( Stem("megparancsolja"), "megparancsol");});
test("megpecsételődik -> megpecsételőd", function() {deepEqual( Stem("megpecsételődik"), "megpecsételőd");});
test("megpecsételődött -> megpecsételődöt", function() {deepEqual( Stem("megpecsételődött"), "megpecsételődöt");});
test("megpendítette -> megpendített", function() {deepEqual( Stem("megpendítette"), "megpendített");});
test("megpenészedtek -> megpenészedt", function() {deepEqual( Stem("megpenészedtek"), "megpenészedt");});
test("megpihenhessen -> megpihenhess", function() {deepEqual( Stem("megpihenhessen"), "megpihenhess");});
test("megpihenjenek -> megpihen", function() {deepEqual( Stem("megpihenjenek"), "megpihen");});
test("megpihen -> megpih", function() {deepEqual( Stem("megpihen"), "megpih");});
test("megpihenni -> megpihenn", function() {deepEqual( Stem("megpihenni"), "megpihenn");});
test("megpihentem -> megpihent", function() {deepEqual( Stem("megpihentem"), "megpihent");});
test("megpihent -> megpihen", function() {deepEqual( Stem("megpihent"), "megpihen");});
test("megpihentek -> megpihent", function() {deepEqual( Stem("megpihentek"), "megpihent");});
test("megpillantani -> megpillantan", function() {deepEqual( Stem("megpillantani"), "megpillantan");});
test("megpillantja -> megpillant", function() {deepEqual( Stem("megpillantja"), "megpillant");});
test("megpillantom -> megpillant", function() {deepEqual( Stem("megpillantom"), "megpillant");});
test("megpillantotta -> megpillantott", function() {deepEqual( Stem("megpillantotta"), "megpillantott");});
test("megpillantottam -> megpillantott", function() {deepEqual( Stem("megpillantottam"), "megpillantott");});
test("megpillantottam -> megpillantott", function() {deepEqual( Stem("megpillantottam"), "megpillantott");});
test("megpillantottuk -> megpillantott", function() {deepEqual( Stem("megpillantottuk"), "megpillantott");});
test("megpillantottunk -> megpillantott", function() {deepEqual( Stem("megpillantottunk"), "megpillantott");});
test("megpillantott -> megpillantot", function() {deepEqual( Stem("megpillantott"), "megpillantot");});
test("megpillantva -> megpillantv", function() {deepEqual( Stem("megpillantva"), "megpillantv");});
test("megpróbálhasson -> megpróbálhass", function() {deepEqual( Stem("megpróbálhasson"), "megpróbálhass");});
test("megpróbálhatott -> megpróbálhatot", function() {deepEqual( Stem("megpróbálhatott"), "megpróbálhatot");});
test("megpróbálhattuk -> megpróbálhatt", function() {deepEqual( Stem("megpróbálhattuk"), "megpróbálhatt");});
test("megpróbálkozhassam -> megpróbálkozhass", function() {deepEqual( Stem("megpróbálkozhassam"), "megpróbálkozhass");});
test("megpróbálkozhatok -> megpróbálkozhat", function() {deepEqual( Stem("megpróbálkozhatok"), "megpróbálkozhat");});
test("megpróbálkozok -> megpróbálkoz", function() {deepEqual( Stem("megpróbálkozok"), "megpróbálkoz");});
test("megpróbálkozom -> megpróbálkoz", function() {deepEqual( Stem("megpróbálkozom"), "megpróbálkoz");});
test("megpróbálkoztak -> megpróbálkozt", function() {deepEqual( Stem("megpróbálkoztak"), "megpróbálkozt");});
test("megpróbálkoztunk -> megpróbálkozt", function() {deepEqual( Stem("megpróbálkoztunk"), "megpróbálkozt");});
test("megpróbálkozott -> megpróbálkozot", function() {deepEqual( Stem("megpróbálkozott"), "megpróbálkozot");});
test("megpróbál -> megpróbál", function() {deepEqual( Stem("megpróbál"), "megpróbál");});
test("megpróbálja -> megpróbál", function() {deepEqual( Stem("megpróbálja"), "megpróbál");});
test("megpróbáljuk -> megpróbál", function() {deepEqual( Stem("megpróbáljuk"), "megpróbál");});
test("megpróbálják -> megpróbálja", function() {deepEqual( Stem("megpróbálják"), "megpróbálja");});
test("megpróbálna -> megpróbáln", function() {deepEqual( Stem("megpróbálna"), "megpróbáln");});
test("megpróbálnak -> megpróbál", function() {deepEqual( Stem("megpróbálnak"), "megpróbál");});
test("megpróbálni -> megpróbáln", function() {deepEqual( Stem("megpróbálni"), "megpróbáln");});
test("megpróbálnunk -> megpróbáln", function() {deepEqual( Stem("megpróbálnunk"), "megpróbáln");});
test("megpróbálná -> megpróbálna", function() {deepEqual( Stem("megpróbálná"), "megpróbálna");});
test("megpróbálod -> megpróbál", function() {deepEqual( Stem("megpróbálod"), "megpróbál");});
test("megpróbálom -> megpróbál", function() {deepEqual( Stem("megpróbálom"), "megpróbál");});
test("megpróbáltunk -> megpróbált", function() {deepEqual( Stem("megpróbáltunk"), "megpróbált");});
test("megpróbálták -> megpróbálta", function() {deepEqual( Stem("megpróbálták"), "megpróbálta");});
test("megpróbálunk -> megpróbál", function() {deepEqual( Stem("megpróbálunk"), "megpróbál");});
test("megpróbálta -> megpróbált", function() {deepEqual( Stem("megpróbálta"), "megpróbált");});
test("megpróbáltak -> megpróbált", function() {deepEqual( Stem("megpróbáltak"), "megpróbált");});
test("megpróbáltam -> megpróbált", function() {deepEqual( Stem("megpróbáltam"), "megpróbált");});
test("megpróbált -> megpróbál", function() {deepEqual( Stem("megpróbált"), "megpróbál");});
test("megpróbáltatás -> megpróbáltatás", function() {deepEqual( Stem("megpróbáltatás"), "megpróbáltatás");});
test("megpróbáltatása -> megpróbáltatás", function() {deepEqual( Stem("megpróbáltatása"), "megpróbáltatás");});
test("megpróbáltatásairól -> megpróbáltatás", function() {deepEqual( Stem("megpróbáltatásairól"), "megpróbáltatás");});
test("megpróbáltatások -> megpróbáltatás", function() {deepEqual( Stem("megpróbáltatások"), "megpróbáltatás");});
test("megpróbáltatásokat -> megpróbáltatás", function() {deepEqual( Stem("megpróbáltatásokat"), "megpróbáltatás");});
test("megpróbáltatásokkal -> megpróbáltatás", function() {deepEqual( Stem("megpróbáltatásokkal"), "megpróbáltatás");});
test("megpróbáltatást -> megpróbáltatás", function() {deepEqual( Stem("megpróbáltatást"), "megpróbáltatás");});
test("megpróbálva -> megpróbálv", function() {deepEqual( Stem("megpróbálva"), "megpróbálv");});
test("megpucolni -> megpucoln", function() {deepEqual( Stem("megpucolni"), "megpucoln");});
test("megpucolom -> megpucol", function() {deepEqual( Stem("megpucolom"), "megpucol");});
test("megpucoltuk -> megpucolt", function() {deepEqual( Stem("megpucoltuk"), "megpucolt");});
test("megpucolt -> megpucol", function() {deepEqual( Stem("megpucolt"), "megpucol");});
test("megpucolás -> megpucolás", function() {deepEqual( Stem("megpucolás"), "megpucolás");});
test("megpuhíthatóságát -> megpuhíthatóság", function() {deepEqual( Stem("megpuhíthatóságát"), "megpuhíthatóság");});
test("megpukkadjak -> megpukkadj", function() {deepEqual( Stem("megpukkadjak"), "megpukkadj");});
test("megpukkadjon -> megpukkadj", function() {deepEqual( Stem("megpukkadjon"), "megpukkadj");});
test("megpukkadtak -> megpukkadt", function() {deepEqual( Stem("megpukkadtak"), "megpukkadt");});
test("megpusztul -> megpuszt", function() {deepEqual( Stem("megpusztul"), "megpuszt");});
test("megpályázható -> megpályázható", function() {deepEqual( Stem("megpályázható"), "megpályázható");});
test("megpördítette -> megpördített", function() {deepEqual( Stem("megpördítette"), "megpördített");});
test("megpördült -> megpördül", function() {deepEqual( Stem("megpördült"), "megpördül");});
test("megragadhatja -> megragadhat", function() {deepEqual( Stem("megragadhatja"), "megragadhat");});
test("megragadhatta -> megragadhatt", function() {deepEqual( Stem("megragadhatta"), "megragadhatt");});
test("megragadható -> megragadható", function() {deepEqual( Stem("megragadható"), "megragadható");});
test("megragadhatóság -> megragadhatóság", function() {deepEqual( Stem("megragadhatóság"), "megragadhatóság");});
test("megragad -> megrag", function() {deepEqual( Stem("megragad"), "megrag");});
test("megragadja -> megragad", function() {deepEqual( Stem("megragadja"), "megragad");});
test("megragadnak -> megrag", function() {deepEqual( Stem("megragadnak"), "megrag");});
test("megragadni -> megragadn", function() {deepEqual( Stem("megragadni"), "megragadn");});
test("megragadta -> megragadt", function() {deepEqual( Stem("megragadta"), "megragadt");});
test("megragadott -> megragadot", function() {deepEqual( Stem("megragadott"), "megragadot");});
test("megragadtak -> megragadt", function() {deepEqual( Stem("megragadtak"), "megragadt");});
test("megragadottságnak -> megragadottság", function() {deepEqual( Stem("megragadottságnak"), "megragadottság");});
test("megragadva -> megragadv", function() {deepEqual( Stem("megragadva"), "megragadv");});
test("megragadásához -> megragadás", function() {deepEqual( Stem("megragadásához"), "megragadás");});
test("megragadására -> megragadás", function() {deepEqual( Stem("megragadására"), "megragadás");});
test("megragadását -> megragadás", function() {deepEqual( Stem("megragadását"), "megragadás");});
test("megragadó -> megragadó", function() {deepEqual( Stem("megragadó"), "megragadó");});
test("megrajzolt -> megrajzol", function() {deepEqual( Stem("megrajzolt"), "megrajzol");});
test("megrakodva -> megrakodv", function() {deepEqual( Stem("megrakodva"), "megrakodv");});
test("megrakott -> megrakot", function() {deepEqual( Stem("megrakott"), "megrakot");});
test("megrakottan -> megrakott", function() {deepEqual( Stem("megrakottan"), "megrakott");});
test("megrakták -> megrakta", function() {deepEqual( Stem("megrakták"), "megrakta");});
test("megreformálására -> megreformálás", function() {deepEqual( Stem("megreformálására"), "megreformálás");});
test("megreformálását -> megreformálás", function() {deepEqual( Stem("megreformálását"), "megreformálás");});
test("megreggelizek -> megreggeliz", function() {deepEqual( Stem("megreggelizek"), "megreggeliz");});
test("megreggelizem -> megreggeliz", function() {deepEqual( Stem("megreggelizem"), "megreggeliz");});
test("megreggeliztek -> megreggelizt", function() {deepEqual( Stem("megreggeliztek"), "megreggelizt");});
test("megreggeliztem -> megreggelizt", function() {deepEqual( Stem("megreggeliztem"), "megreggelizt");});
test("megreggeliztünk -> megreggelizt", function() {deepEqual( Stem("megreggeliztünk"), "megreggelizt");});
test("megreggelizett -> megreggelizet", function() {deepEqual( Stem("megreggelizett"), "megreggelizet");});
test("megregulázott -> megregulázot", function() {deepEqual( Stem("megregulázott"), "megregulázot");});
test("megrekedni -> megrekedn", function() {deepEqual( Stem("megrekedni"), "megrekedn");});
test("megremegett -> megremeget", function() {deepEqual( Stem("megremegett"), "megremeget");});
test("megrendelendő -> megrendelendő", function() {deepEqual( Stem("megrendelendő"), "megrendelendő");});
test("megrendelhető -> megrendelhető", function() {deepEqual( Stem("megrendelhető"), "megrendelhető");});
test("megrendelhetők -> megrendelhető", function() {deepEqual( Stem("megrendelhetők"), "megrendelhető");});
test("megrendeli -> megrendel", function() {deepEqual( Stem("megrendeli"), "megrendel");});
test("megrendelik -> megrendel", function() {deepEqual( Stem("megrendelik"), "megrendel");});
test("megrendeljük -> megrendel", function() {deepEqual( Stem("megrendeljük"), "megrendel");});
test("megrendelni -> megrendeln", function() {deepEqual( Stem("megrendelni"), "megrendeln");});
test("megrendelte -> megrendelt", function() {deepEqual( Stem("megrendelte"), "megrendelt");});
test("megrendeltem -> megrendelt", function() {deepEqual( Stem("megrendeltem"), "megrendelt");});
test("megrendeltük -> megrendelt", function() {deepEqual( Stem("megrendeltük"), "megrendelt");});
test("megrendelt -> megrendel", function() {deepEqual( Stem("megrendelt"), "megrendel");});
test("megrendeltek -> megrendelt", function() {deepEqual( Stem("megrendeltek"), "megrendelt");});
test("megrendelésére -> megrendelés", function() {deepEqual( Stem("megrendelésére"), "megrendelés");});
test("megrendelés -> megrendelés", function() {deepEqual( Stem("megrendelés"), "megrendelés");});
test("megrendelése -> megrendelés", function() {deepEqual( Stem("megrendelése"), "megrendelés");});
test("megrendelései -> megrendelés", function() {deepEqual( Stem("megrendelései"), "megrendelés");});
test("megrendeléseiket -> megrendelés", function() {deepEqual( Stem("megrendeléseiket"), "megrendelés");});
test("megrendeléseinek -> megrendelés", function() {deepEqual( Stem("megrendeléseinek"), "megrendelés");});
test("megrendeléseit -> megrendelés", function() {deepEqual( Stem("megrendeléseit"), "megrendelés");});
test("megrendelések -> megrendelés", function() {deepEqual( Stem("megrendelések"), "megrendelés");});
test("megrendelésekből -> megrendelés", function() {deepEqual( Stem("megrendelésekből"), "megrendelés");});
test("megrendeléseket -> megrendelés", function() {deepEqual( Stem("megrendeléseket"), "megrendelés");});
test("megrendelésekhez -> megrendelés", function() {deepEqual( Stem("megrendelésekhez"), "megrendelés");});
test("megrendeléseknek -> megrendelés", function() {deepEqual( Stem("megrendeléseknek"), "megrendelés");});
test("megrendelésekét -> megrendelés", function() {deepEqual( Stem("megrendelésekét"), "megrendelés");});
test("megrendeléshez -> megrendelés", function() {deepEqual( Stem("megrendeléshez"), "megrendelés");});
test("megrendelésre -> megrendelés", function() {deepEqual( Stem("megrendelésre"), "megrendelés");});
test("megrendelést -> megrendelés", function() {deepEqual( Stem("megrendelést"), "megrendelés");});
test("megrendeléstől -> megrendelés", function() {deepEqual( Stem("megrendeléstől"), "megrendelés");});
test("megrendelésállományt -> megrendelésállomány", function() {deepEqual( Stem("megrendelésállományt"), "megrendelésállomány");});
test("megrendelői -> megrendelő", function() {deepEqual( Stem("megrendelői"), "megrendelő");});
test("megrendelő -> megrendelő", function() {deepEqual( Stem("megrendelő"), "megrendelő");});
test("megrendelőiknek -> megrendelő", function() {deepEqual( Stem("megrendelőiknek"), "megrendelő");});
test("megrendelők -> megrendelő", function() {deepEqual( Stem("megrendelők"), "megrendelő");});
test("megrendelőknek -> megrendelő", function() {deepEqual( Stem("megrendelőknek"), "megrendelő");});
test("megrendelőnek -> megrendelő", function() {deepEqual( Stem("megrendelőnek"), "megrendelő");});
test("megrendezendő -> megrendezendő", function() {deepEqual( Stem("megrendezendő"), "megrendezendő");});
test("megrendezett -> megrendezet", function() {deepEqual( Stem("megrendezett"), "megrendezet");});
test("megrendezhetik -> megrendezhet", function() {deepEqual( Stem("megrendezhetik"), "megrendezhet");});
test("megrendezi -> megrendez", function() {deepEqual( Stem("megrendezi"), "megrendez");});
test("megrendezik -> megrendez", function() {deepEqual( Stem("megrendezik"), "megrendez");});
test("megrendeznek -> megrendez", function() {deepEqual( Stem("megrendeznek"), "megrendez");});
test("megrendezni -> megrendezn", function() {deepEqual( Stem("megrendezni"), "megrendezn");});
test("megrendezte -> megrendezt", function() {deepEqual( Stem("megrendezte"), "megrendezt");});
test("megrendezték -> megrendezte", function() {deepEqual( Stem("megrendezték"), "megrendezte");});
test("megrendeztük -> megrendezt", function() {deepEqual( Stem("megrendeztük"), "megrendezt");});
test("megrendezése -> megrendezés", function() {deepEqual( Stem("megrendezése"), "megrendezés");});
test("megrendezésekor -> megrendezés", function() {deepEqual( Stem("megrendezésekor"), "megrendezés");});
test("megrendezésre -> megrendezés", function() {deepEqual( Stem("megrendezésre"), "megrendezés");});
test("megrendezésének -> megrendezés", function() {deepEqual( Stem("megrendezésének"), "megrendezés");});
test("megrendezését -> megrendezés", function() {deepEqual( Stem("megrendezését"), "megrendezés");});
test("megrendítette -> megrendített", function() {deepEqual( Stem("megrendítette"), "megrendített");});
test("megrendítheti -> megrendíthet", function() {deepEqual( Stem("megrendítheti"), "megrendíthet");});
test("megrendíti -> megrendít", function() {deepEqual( Stem("megrendíti"), "megrendít");});
test("megrendítő -> megrendítő", function() {deepEqual( Stem("megrendítő"), "megrendítő");});
test("megrendítőbb -> megrendítőbb", function() {deepEqual( Stem("megrendítőbb"), "megrendítőbb");});
test("megrendül -> megren", function() {deepEqual( Stem("megrendül"), "megren");});
test("megrendült -> megrendül", function() {deepEqual( Stem("megrendült"), "megrendül");});
test("megrendülten -> megrendült", function() {deepEqual( Stem("megrendülten"), "megrendült");});
test("megrendüléseit -> megrendülés", function() {deepEqual( Stem("megrendüléseit"), "megrendülés");});
test("megrendüléshez -> megrendülés", function() {deepEqual( Stem("megrendüléshez"), "megrendülés");});
test("megrendülésről -> megrendülés", function() {deepEqual( Stem("megrendülésről"), "megrendülés");});
test("megrendülését -> megrendülés", function() {deepEqual( Stem("megrendülését"), "megrendülés");});
test("megrengett -> megrenget", function() {deepEqual( Stem("megrengett"), "megrenget");});
test("megrepedhetnek -> megrepedhet", function() {deepEqual( Stem("megrepedhetnek"), "megrepedhet");});
test("megrepedtek -> megrepedt", function() {deepEqual( Stem("megrepedtek"), "megrepedt");});
test("megrettent -> megretten", function() {deepEqual( Stem("megrettent"), "megretten");});
test("megrettenve -> megrettenv", function() {deepEqual( Stem("megrettenve"), "megrettenv");});
test("megrezdült -> megrezdül", function() {deepEqual( Stem("megrezdült"), "megrezdül");});
test("megrezdültek -> megrezdült", function() {deepEqual( Stem("megrezdültek"), "megrezdült");});
test("megriadt -> megr", function() {deepEqual( Stem("megriadt"), "megr");});
test("megriadtunk -> megriadt", function() {deepEqual( Stem("megriadtunk"), "megriadt");});
test("megriadva -> megriadv", function() {deepEqual( Stem("megriadva"), "megriadv");});
test("megrohamozott -> megrohamozot", function() {deepEqual( Stem("megrohamozott"), "megrohamozot");});
test("megrohamozta -> megrohamozt", function() {deepEqual( Stem("megrohamozta"), "megrohamozt");});
test("megrohamoztuk -> megrohamozt", function() {deepEqual( Stem("megrohamoztuk"), "megrohamozt");});
test("megrohamozzák -> megrohamozza", function() {deepEqual( Stem("megrohamozzák"), "megrohamozza");});
test("megrohasztani -> megrohasztan", function() {deepEqual( Stem("megrohasztani"), "megrohasztan");});
test("megromlott -> megromlot", function() {deepEqual( Stem("megromlott"), "megromlot");});
test("megromlásához -> megromlás", function() {deepEqual( Stem("megromlásához"), "megromlás");});
test("megrongálni -> megrongáln", function() {deepEqual( Stem("megrongálni"), "megrongáln");});
test("megrongálódott -> megrongálódot", function() {deepEqual( Stem("megrongálódott"), "megrongálódot");});
test("megrongálódtak -> megrongálódt", function() {deepEqual( Stem("megrongálódtak"), "megrongálódt");});
test("megrontani -> megrontan", function() {deepEqual( Stem("megrontani"), "megrontan");});
test("megronthatja -> megronthat", function() {deepEqual( Stem("megronthatja"), "megronthat");});
test("megrontása -> megrontás", function() {deepEqual( Stem("megrontása"), "megrontás");});
test("megropogtatta -> megropogtatt", function() {deepEqual( Stem("megropogtatta"), "megropogtatt");});
test("megrostálta -> megrostált", function() {deepEqual( Stem("megrostálta"), "megrostált");});
test("megrovásban -> megrovás", function() {deepEqual( Stem("megrovásban"), "megrovás");});
test("megrugdosni -> megrugdosn", function() {deepEqual( Stem("megrugdosni"), "megrugdosn");});
test("megrágja -> megrág", function() {deepEqual( Stem("megrágja"), "megrág");});
test("megrágják -> megrágja", function() {deepEqual( Stem("megrágják"), "megrágja");});
test("megrágta -> megrágt", function() {deepEqual( Stem("megrágta"), "megrágt");});
test("megrándul -> megrán", function() {deepEqual( Stem("megrándul"), "megrán");});
test("megrándult -> megrándul", function() {deepEqual( Stem("megrándult"), "megrándul");});
test("megránduló -> megránduló", function() {deepEqual( Stem("megránduló"), "megránduló");});
test("megrántott -> megrántot", function() {deepEqual( Stem("megrántott"), "megrántot");});
test("megrántotta -> megrántott", function() {deepEqual( Stem("megrántotta"), "megrántott");});
test("megrázkódik -> megrázkód", function() {deepEqual( Stem("megrázkódik"), "megrázkód");});
test("megrázkódtatásokat -> megrázkódtatás", function() {deepEqual( Stem("megrázkódtatásokat"), "megrázkódtatás");});
test("megrázkódtatást -> megrázkódtatás", function() {deepEqual( Stem("megrázkódtatást"), "megrázkódtatás");});
test("megrázniuk -> megrázn", function() {deepEqual( Stem("megrázniuk"), "megrázn");});
test("megrázó -> megrázó", function() {deepEqual( Stem("megrázó"), "megrázó");});
test("megrémítene -> megrémíten", function() {deepEqual( Stem("megrémítene"), "megrémíten");});
test("megrémült -> megrémül", function() {deepEqual( Stem("megrémült"), "megrémül");});
test("megrémültek -> megrémült", function() {deepEqual( Stem("megrémültek"), "megrémült");});
test("megrémültem -> megrémült", function() {deepEqual( Stem("megrémültem"), "megrémült");});
test("megrémültünk -> megrémült", function() {deepEqual( Stem("megrémültünk"), "megrémült");});
test("megrémülve -> megrémülv", function() {deepEqual( Stem("megrémülve"), "megrémülv");});
test("megrészegedett -> megrészegedet", function() {deepEqual( Stem("megrészegedett"), "megrészegedet");});
test("megrótta -> megrótt", function() {deepEqual( Stem("megrótta"), "megrótt");});
test("megrögződnie -> megrögződn", function() {deepEqual( Stem("megrögződnie"), "megrögződn");});
test("megrögzött -> megrögzöt", function() {deepEqual( Stem("megrögzött"), "megrögzöt");});
test("megrökönyödve -> megrökönyödv", function() {deepEqual( Stem("megrökönyödve"), "megrökönyödv");});
test("megröngenezték -> megröngenezte", function() {deepEqual( Stem("megröngenezték"), "megröngenezte");});
test("megröntgeneztek -> megröntgenezt", function() {deepEqual( Stem("megröntgeneztek"), "megröntgenezt");});
test("megrövidíteni -> megrövidíten", function() {deepEqual( Stem("megrövidíteni"), "megrövidíten");});
test("megrövidítették -> megrövidítette", function() {deepEqual( Stem("megrövidítették"), "megrövidítette");});
test("megrövidítésük -> megrövidítés", function() {deepEqual( Stem("megrövidítésük"), "megrövidítés");});
test("megrövidült -> megrövidül", function() {deepEqual( Stem("megrövidült"), "megrövidül");});
test("megrövidülését -> megrövidülés", function() {deepEqual( Stem("megrövidülését"), "megrövidülés");});
test("megrúgott -> megrúgot", function() {deepEqual( Stem("megrúgott"), "megrúgot");});
test("megrúgta -> megrúgt", function() {deepEqual( Stem("megrúgta"), "megrúgt");});
test("megrúgja -> megrúg", function() {deepEqual( Stem("megrúgja"), "megrúg");});
test("megrúgták -> megrúgta", function() {deepEqual( Stem("megrúgták"), "megrúgta");});
test("megsajnálta -> megsajnált", function() {deepEqual( Stem("megsajnálta"), "megsajnált");});
test("megsajnáltam -> megsajnált", function() {deepEqual( Stem("megsajnáltam"), "megsajnált");});
test("megsebesült -> megsebesül", function() {deepEqual( Stem("megsebesült"), "megsebesül");});
test("megsebesültek -> megsebesült", function() {deepEqual( Stem("megsebesültek"), "megsebesült");});
test("megsebezni -> megsebezn", function() {deepEqual( Stem("megsebezni"), "megsebezn");});
test("megsebezték -> megsebezte", function() {deepEqual( Stem("megsebezték"), "megsebezte");});
test("megsegítésének -> megsegítés", function() {deepEqual( Stem("megsegítésének"), "megsegítés");});
test("megsegítésére -> megsegítés", function() {deepEqual( Stem("megsegítésére"), "megsegítés");});
test("megsejtené -> megsejten", function() {deepEqual( Stem("megsejtené"), "megsejten");});
test("megsejtette -> megsejtett", function() {deepEqual( Stem("megsejtette"), "megsejtett");});
test("megsejtettem -> megsejtett", function() {deepEqual( Stem("megsejtettem"), "megsejtett");});
test("megsemmisít -> megsemmisí", function() {deepEqual( Stem("megsemmisít"), "megsemmisí");});
test("megsemmisítenek -> megsemmisít", function() {deepEqual( Stem("megsemmisítenek"), "megsemmisít");});
test("megsemmisíteni -> megsemmisíten", function() {deepEqual( Stem("megsemmisíteni"), "megsemmisíten");});
test("megsemmisítette -> megsemmisített", function() {deepEqual( Stem("megsemmisítette"), "megsemmisített");});
test("megsemmisítették -> megsemmisítette", function() {deepEqual( Stem("megsemmisítették"), "megsemmisítette");});
test("megsemmisíti -> megsemmisít", function() {deepEqual( Stem("megsemmisíti"), "megsemmisít");});
test("megsemmisítik -> megsemmisít", function() {deepEqual( Stem("megsemmisítik"), "megsemmisít");});
test("megsemmisítsenek -> megsemmisíts", function() {deepEqual( Stem("megsemmisítsenek"), "megsemmisíts");});
test("megsemmisített -> megsemmisítet", function() {deepEqual( Stem("megsemmisített"), "megsemmisítet");});
test("megsemmisítettek -> megsemmisített", function() {deepEqual( Stem("megsemmisítettek"), "megsemmisített");});
test("megsemmisíthető -> megsemmisíthető", function() {deepEqual( Stem("megsemmisíthető"), "megsemmisíthető");});
test("megsemmisítés -> megsemmisítés", function() {deepEqual( Stem("megsemmisítés"), "megsemmisítés");});
test("megsemmisítése -> megsemmisítés", function() {deepEqual( Stem("megsemmisítése"), "megsemmisítés");});
test("megsemmisítésre -> megsemmisítés", function() {deepEqual( Stem("megsemmisítésre"), "megsemmisítés");});
test("megsemmisítést -> megsemmisítés", function() {deepEqual( Stem("megsemmisítést"), "megsemmisítés");});
test("megsemmisítésében -> megsemmisítés", function() {deepEqual( Stem("megsemmisítésében"), "megsemmisítés");});
test("megsemmisítésének -> megsemmisítés", function() {deepEqual( Stem("megsemmisítésének"), "megsemmisítés");});
test("megsemmisítésére -> megsemmisítés", function() {deepEqual( Stem("megsemmisítésére"), "megsemmisítés");});
test("megsemmisítéséről -> megsemmisítés", function() {deepEqual( Stem("megsemmisítéséről"), "megsemmisítés");});
test("megsemmisítését -> megsemmisítés", function() {deepEqual( Stem("megsemmisítését"), "megsemmisítés");});
test("megsemmisítésével -> megsemmisítés", function() {deepEqual( Stem("megsemmisítésével"), "megsemmisítés");});
test("megsemmisítő -> megsemmisítő", function() {deepEqual( Stem("megsemmisítő"), "megsemmisítő");});
test("megsemmisül -> megsemmis", function() {deepEqual( Stem("megsemmisül"), "megsemmis");});
test("megsemmisüljenek -> megsemmisül", function() {deepEqual( Stem("megsemmisüljenek"), "megsemmisül");});
test("megsemmisülni -> megsemmisüln", function() {deepEqual( Stem("megsemmisülni"), "megsemmisüln");});
test("megsemmisült -> megsemmisül", function() {deepEqual( Stem("megsemmisült"), "megsemmisül");});
test("megsemmisültek -> megsemmisült", function() {deepEqual( Stem("megsemmisültek"), "megsemmisült");});
test("megsemmisülés -> megsemmisülés", function() {deepEqual( Stem("megsemmisülés"), "megsemmisülés");});
test("megsemmisülése -> megsemmisülés", function() {deepEqual( Stem("megsemmisülése"), "megsemmisülés");});
test("megsimogassam -> megsimogass", function() {deepEqual( Stem("megsimogassam"), "megsimogass");});
test("megsimogatta -> megsimogatt", function() {deepEqual( Stem("megsimogatta"), "megsimogatt");});
test("megsimogatott -> megsimogatot", function() {deepEqual( Stem("megsimogatott"), "megsimogatot");});
test("megsiratatlanul -> megsiratatlan", function() {deepEqual( Stem("megsiratatlanul"), "megsiratatlan");});
test("megsokallhatták -> megsokallhatta", function() {deepEqual( Stem("megsokallhatták"), "megsokallhatta");});
test("megsokszorozta -> megsokszorozt", function() {deepEqual( Stem("megsokszorozta"), "megsokszorozt");});
test("megsokszorozták -> megsokszorozta", function() {deepEqual( Stem("megsokszorozták"), "megsokszorozta");});
test("megsokszorozza -> megsokszorozz", function() {deepEqual( Stem("megsokszorozza"), "megsokszorozz");});
test("megsokszorozva -> megsokszorozv", function() {deepEqual( Stem("megsokszorozva"), "megsokszorozv");});
test("megspórolt -> megspórol", function() {deepEqual( Stem("megspórolt"), "megspórol");});
test("megspórolására -> megspórolás", function() {deepEqual( Stem("megspórolására"), "megspórolás");});
test("megstoppolása -> megstoppolás", function() {deepEqual( Stem("megstoppolása"), "megstoppolás");});
test("megszabadul -> megszab", function() {deepEqual( Stem("megszabadul"), "megszab");});
test("megszabaduljanak -> megszabadul", function() {deepEqual( Stem("megszabaduljanak"), "megszabadul");});
test("megszabaduljon -> megszabadulj", function() {deepEqual( Stem("megszabaduljon"), "megszabadulj");});
test("megszabadulna -> megszabaduln", function() {deepEqual( Stem("megszabadulna"), "megszabaduln");});
test("megszabadulnak -> megszabadul", function() {deepEqual( Stem("megszabadulnak"), "megszabadul");});
test("megszabadulni -> megszabaduln", function() {deepEqual( Stem("megszabadulni"), "megszabaduln");});
test("megszabadultam -> megszabadult", function() {deepEqual( Stem("megszabadultam"), "megszabadult");});
test("megszabadult -> megszabadul", function() {deepEqual( Stem("megszabadult"), "megszabadul");});
test("megszabadulva -> megszabadulv", function() {deepEqual( Stem("megszabadulva"), "megszabadulv");});
test("megszabadítjuk -> megszabadít", function() {deepEqual( Stem("megszabadítjuk"), "megszabadít");});
test("megszabadítják -> megszabadítja", function() {deepEqual( Stem("megszabadítják"), "megszabadítja");});
test("megszabadította -> megszabadított", function() {deepEqual( Stem("megszabadította"), "megszabadított");});
test("megszabhatja -> megszabhat", function() {deepEqual( Stem("megszabhatja"), "megszabhat");});
test("megszabhatjuk -> megszabhat", function() {deepEqual( Stem("megszabhatjuk"), "megszabhat");});
test("megszabható -> megszabható", function() {deepEqual( Stem("megszabható"), "megszabható");});
test("megszabja -> megszab", function() {deepEqual( Stem("megszabja"), "megszab");});
test("megszabják -> megszabja", function() {deepEqual( Stem("megszabják"), "megszabja");});
test("megszabni -> megszabn", function() {deepEqual( Stem("megszabni"), "megszabn");});
test("megszabta -> megszabt", function() {deepEqual( Stem("megszabta"), "megszabt");});
test("megszabott -> megszabot", function() {deepEqual( Stem("megszabott"), "megszabot");});
test("megszabva -> megszabv", function() {deepEqual( Stem("megszabva"), "megszabv");});
test("megszagolja -> megszagol", function() {deepEqual( Stem("megszagolja"), "megszagol");});
test("megszakad -> megsz", function() {deepEqual( Stem("megszakad"), "megsz");});
test("megszakadt -> megsz", function() {deepEqual( Stem("megszakadt"), "megsz");});
test("megszakítatlan -> megszakítatl", function() {deepEqual( Stem("megszakítatlan"), "megszakítatl");});
test("megszakítatlannak -> megszakítatlan", function() {deepEqual( Stem("megszakítatlannak"), "megszakítatlan");});
test("megszakíthatók -> megszakítható", function() {deepEqual( Stem("megszakíthatók"), "megszakítható");});
test("megszakítani -> megszakítan", function() {deepEqual( Stem("megszakítani"), "megszakítan");});
test("megszakítja -> megszakít", function() {deepEqual( Stem("megszakítja"), "megszakít");});
test("megszakított -> megszakítot", function() {deepEqual( Stem("megszakított"), "megszakítot");});
test("megszakítottság -> megszakítottság", function() {deepEqual( Stem("megszakítottság"), "megszakítottság");});
test("megszakítva -> megszakítv", function() {deepEqual( Stem("megszakítva"), "megszakítv");});
test("megszakítás -> megszakítás", function() {deepEqual( Stem("megszakítás"), "megszakítás");});
test("megszakítása -> megszakítás", function() {deepEqual( Stem("megszakítása"), "megszakítás");});
test("megszakítását -> megszakítás", function() {deepEqual( Stem("megszakítását"), "megszakítás");});
test("megszaporodnak -> megszapor", function() {deepEqual( Stem("megszaporodnak"), "megszapor");});
test("megszaporodtak -> megszaporodt", function() {deepEqual( Stem("megszaporodtak"), "megszaporodt");});
test("megszaporodásával -> megszaporodás", function() {deepEqual( Stem("megszaporodásával"), "megszaporodás");});
test("megszavazni -> megszavazn", function() {deepEqual( Stem("megszavazni"), "megszavazn");});
test("megszavazná -> megszavazna", function() {deepEqual( Stem("megszavazná"), "megszavazna");});
test("megszavazta -> megszavazt", function() {deepEqual( Stem("megszavazta"), "megszavazt");});
test("megszavazták -> megszavazta", function() {deepEqual( Stem("megszavazták"), "megszavazta");});
test("megszavazott -> megszavazot", function() {deepEqual( Stem("megszavazott"), "megszavazot");});
test("megszavazásának -> megszavazás", function() {deepEqual( Stem("megszavazásának"), "megszavazás");});
test("megszedtem -> megszedt", function() {deepEqual( Stem("megszedtem"), "megszedt");});
test("megszegett -> megszeget", function() {deepEqual( Stem("megszegett"), "megszeget");});
test("megszegheti -> megszeghet", function() {deepEqual( Stem("megszegheti"), "megszeghet");});
test("megszegi -> megszeg", function() {deepEqual( Stem("megszegi"), "megszeg");});
test("megszegik -> megszeg", function() {deepEqual( Stem("megszegik"), "megszeg");});
test("megszegni -> megszegn", function() {deepEqual( Stem("megszegni"), "megszegn");});
test("megszegné -> megszegn", function() {deepEqual( Stem("megszegné"), "megszegn");});
test("megszegnék -> megszegne", function() {deepEqual( Stem("megszegnék"), "megszegne");});
test("megszegte -> megszegt", function() {deepEqual( Stem("megszegte"), "megszegt");});
test("megszegve -> megszegv", function() {deepEqual( Stem("megszegve"), "megszegv");});
test("megszegése -> megszegés", function() {deepEqual( Stem("megszegése"), "megszegés");});
test("megszegésén -> megszegés", function() {deepEqual( Stem("megszegésén"), "megszegés");});
test("megszegésére -> megszegés", function() {deepEqual( Stem("megszegésére"), "megszegés");});
test("megszegését -> megszegés", function() {deepEqual( Stem("megszegését"), "megszegés");});
test("megszegésével -> megszegés", function() {deepEqual( Stem("megszegésével"), "megszegés");});
test("megszegő -> megszegő", function() {deepEqual( Stem("megszegő"), "megszegő");});
test("megszelídíteni -> megszelídíten", function() {deepEqual( Stem("megszelídíteni"), "megszelídíten");});
test("megszelídítenie -> megszelídíten", function() {deepEqual( Stem("megszelídítenie"), "megszelídíten");});
test("megszelídítette -> megszelídített", function() {deepEqual( Stem("megszelídítette"), "megszelídített");});
test("megszelídítették -> megszelídítette", function() {deepEqual( Stem("megszelídítették"), "megszelídítette");});
test("megszelídített -> megszelídítet", function() {deepEqual( Stem("megszelídített"), "megszelídítet");});
test("megszemlélte -> megszemlélt", function() {deepEqual( Stem("megszemlélte"), "megszemlélt");});
test("megszemléltük -> megszemlélt", function() {deepEqual( Stem("megszemléltük"), "megszemlélt");});
test("megszemélyesített -> megszemélyesítet", function() {deepEqual( Stem("megszemélyesített"), "megszemélyesítet");});
test("megszemélyesíthessék -> megszemélyesíthesse", function() {deepEqual( Stem("megszemélyesíthessék"), "megszemélyesíthesse");});
test("megszemélyesítheti -> megszemélyesíthet", function() {deepEqual( Stem("megszemélyesítheti"), "megszemélyesíthet");});
test("megszemélyesítés -> megszemélyesítés", function() {deepEqual( Stem("megszemélyesítés"), "megszemélyesítés");});
test("megszemélyesítésének -> megszemélyesítés", function() {deepEqual( Stem("megszemélyesítésének"), "megszemélyesítés");});
test("megszemélyesítő -> megszemélyesítő", function() {deepEqual( Stem("megszemélyesítő"), "megszemélyesítő");});
test("megszentelt -> megszentel", function() {deepEqual( Stem("megszentelt"), "megszentel");});
test("megszerelem -> megszerel", function() {deepEqual( Stem("megszerelem"), "megszerel");});
test("megszerelni -> megszereln", function() {deepEqual( Stem("megszerelni"), "megszereln");});
test("megszereléséhez -> megszerelés", function() {deepEqual( Stem("megszereléséhez"), "megszerelés");});
test("megszeresd -> megszeres", function() {deepEqual( Stem("megszeresd"), "megszeres");});
test("megszereted -> megszeret", function() {deepEqual( Stem("megszereted"), "megszeret");});
test("megszeretjük -> megszeret", function() {deepEqual( Stem("megszeretjük"), "megszeret");});
test("megszeretném -> megszeretne", function() {deepEqual( Stem("megszeretném"), "megszeretne");});
test("megszeretsz -> megszeretsz", function() {deepEqual( Stem("megszeretsz"), "megszeretsz");});
test("megszerette -> megszerett", function() {deepEqual( Stem("megszerette"), "megszerett");});
test("megszerettek -> megszerett", function() {deepEqual( Stem("megszerettek"), "megszerett");});
test("megszerettem -> megszerett", function() {deepEqual( Stem("megszerettem"), "megszerett");});
test("megszerették -> megszerette", function() {deepEqual( Stem("megszerették"), "megszerette");});
test("megszerettetni -> megszerettetn", function() {deepEqual( Stem("megszerettetni"), "megszerettetn");});
test("megszerettették -> megszerettette", function() {deepEqual( Stem("megszerettették"), "megszerettette");});
test("megszerez -> megszerez", function() {deepEqual( Stem("megszerez"), "megszerez");});
test("megszerezhesse -> megszerezhess", function() {deepEqual( Stem("megszerezhesse"), "megszerezhess");});
test("megszerezhetek -> megszerezhet", function() {deepEqual( Stem("megszerezhetek"), "megszerezhet");});
test("megszerezhetnék -> megszerezhetne", function() {deepEqual( Stem("megszerezhetnék"), "megszerezhetne");});
test("megszerezhetetlen -> megszerezhetetl", function() {deepEqual( Stem("megszerezhetetlen"), "megszerezhetetl");});
test("megszerezhető -> megszerezhető", function() {deepEqual( Stem("megszerezhető"), "megszerezhető");});
test("megszerezhetők -> megszerezhető", function() {deepEqual( Stem("megszerezhetők"), "megszerezhető");});
test("megszereznem -> megszerezn", function() {deepEqual( Stem("megszereznem"), "megszerezn");});
test("megszerezni -> megszerezn", function() {deepEqual( Stem("megszerezni"), "megszerezn");});
test("megszereznie -> megszerezn", function() {deepEqual( Stem("megszereznie"), "megszerezn");});
test("megszerezniük -> megszerezn", function() {deepEqual( Stem("megszerezniük"), "megszerezn");});
test("megszerezte -> megszerezt", function() {deepEqual( Stem("megszerezte"), "megszerezt");});
test("megszerezték -> megszerezte", function() {deepEqual( Stem("megszerezték"), "megszerezte");});
test("megszerezze -> megszerezz", function() {deepEqual( Stem("megszerezze"), "megszerezz");});
test("megszerezzem -> megszerezz", function() {deepEqual( Stem("megszerezzem"), "megszerezz");});
test("megszerezzen -> megszerezz", function() {deepEqual( Stem("megszerezzen"), "megszerezz");});
test("megszerzek -> megszerz", function() {deepEqual( Stem("megszerzek"), "megszerz");});
test("megszerzi -> megszerz", function() {deepEqual( Stem("megszerzi"), "megszerz");});
test("megszerkesztett -> megszerkesztet", function() {deepEqual( Stem("megszerkesztett"), "megszerkesztet");});
test("megszervezett -> megszervezet", function() {deepEqual( Stem("megszervezett"), "megszervezet");});
test("megszervezhetjük -> megszervezhet", function() {deepEqual( Stem("megszervezhetjük"), "megszervezhet");});
test("megszervezi -> megszervez", function() {deepEqual( Stem("megszervezi"), "megszervez");});
test("megszervezik -> megszervez", function() {deepEqual( Stem("megszervezik"), "megszervez");});
test("megszervezni -> megszervezn", function() {deepEqual( Stem("megszervezni"), "megszervezn");});
test("megszervezte -> megszervezt", function() {deepEqual( Stem("megszervezte"), "megszervezt");});
test("megszerveztük -> megszervezt", function() {deepEqual( Stem("megszerveztük"), "megszervezt");});
test("megszervezve -> megszervezv", function() {deepEqual( Stem("megszervezve"), "megszervezv");});
test("megszervezése -> megszervezés", function() {deepEqual( Stem("megszervezése"), "megszervezés");});
test("megszervezésében -> megszervezés", function() {deepEqual( Stem("megszervezésében"), "megszervezés");});
test("megszervezéséről -> megszervezés", function() {deepEqual( Stem("megszervezéséről"), "megszervezés");});
test("megszervezését -> megszervezés", function() {deepEqual( Stem("megszervezését"), "megszervezés");});
test("megszerzendő -> megszerzendő", function() {deepEqual( Stem("megszerzendő"), "megszerzendő");});
test("megszerzett -> megszerzet", function() {deepEqual( Stem("megszerzett"), "megszerzet");});
test("megszerzés -> megszerzés", function() {deepEqual( Stem("megszerzés"), "megszerzés");});
test("megszerzése -> megszerzés", function() {deepEqual( Stem("megszerzése"), "megszerzés");});
test("megszerzésnél -> megszerzés", function() {deepEqual( Stem("megszerzésnél"), "megszerzés");});
test("megszerzésről -> megszerzés", function() {deepEqual( Stem("megszerzésről"), "megszerzés");});
test("megszerzést -> megszerzés", function() {deepEqual( Stem("megszerzést"), "megszerzés");});
test("megszerzésében -> megszerzés", function() {deepEqual( Stem("megszerzésében"), "megszerzés");});
test("megszerzéséhez -> megszerzés", function() {deepEqual( Stem("megszerzéséhez"), "megszerzés");});
test("megszerzésének -> megszerzés", function() {deepEqual( Stem("megszerzésének"), "megszerzés");});
test("megszerzésénél -> megszerzés", function() {deepEqual( Stem("megszerzésénél"), "megszerzés");});
test("megszerzésére -> megszerzés", function() {deepEqual( Stem("megszerzésére"), "megszerzés");});
test("megszerzéséről -> megszerzés", function() {deepEqual( Stem("megszerzéséről"), "megszerzés");});
test("megszerzését -> megszerzés", function() {deepEqual( Stem("megszerzését"), "megszerzés");});
test("megszerzésével -> megszerzés", function() {deepEqual( Stem("megszerzésével"), "megszerzés");});
test("megszerzéséért -> megszerzés", function() {deepEqual( Stem("megszerzéséért"), "megszerzés");});
test("megszerző -> megszerző", function() {deepEqual( Stem("megszerző"), "megszerző");});
test("megszerzője -> megszerző", function() {deepEqual( Stem("megszerzője"), "megszerző");});
test("megszerzőjeként -> megszerző", function() {deepEqual( Stem("megszerzőjeként"), "megszerző");});
test("megszerzőjére -> megszerző", function() {deepEqual( Stem("megszerzőjére"), "megszerző");});
test("megszerzőjét -> megszerző", function() {deepEqual( Stem("megszerzőjét"), "megszerző");});
test("megszerzőkre -> megszerző", function() {deepEqual( Stem("megszerzőkre"), "megszerző");});
test("megszerzőt -> megszerző", function() {deepEqual( Stem("megszerzőt"), "megszerző");});
test("megszigorítják -> megszigorítja", function() {deepEqual( Stem("megszigorítják"), "megszigorítja");});
test("megszigorították -> megszigorította", function() {deepEqual( Stem("megszigorították"), "megszigorította");});
test("megszilárdult -> megszilárdul", function() {deepEqual( Stem("megszilárdult"), "megszilárdul");});
test("megszilárdultak -> megszilárdult", function() {deepEqual( Stem("megszilárdultak"), "megszilárdult");});
test("megszilárdulását -> megszilárdulás", function() {deepEqual( Stem("megszilárdulását"), "megszilárdulás");});
test("megszilárdítjuk -> megszilárdít", function() {deepEqual( Stem("megszilárdítjuk"), "megszilárdít");});
test("megszokhattuk -> megszokhatt", function() {deepEqual( Stem("megszokhattuk"), "megszokhatt");});
test("megszokott -> megszokot", function() {deepEqual( Stem("megszokott"), "megszokot");});
test("megszokottabb -> megszokottabb", function() {deepEqual( Stem("megszokottabb"), "megszokottabb");});
test("megszokottnak -> megszokott", function() {deepEqual( Stem("megszokottnak"), "megszokott");});
test("megszokottnál -> megszokott", function() {deepEqual( Stem("megszokottnál"), "megszokott");});
test("megszokottá -> megszokot", function() {deepEqual( Stem("megszokottá"), "megszokot");});
test("megszokottól -> megszokot", function() {deepEqual( Stem("megszokottól"), "megszokot");});
test("megszokni -> megszokn", function() {deepEqual( Stem("megszokni"), "megszokn");});
test("megszokta -> megszokt", function() {deepEqual( Stem("megszokta"), "megszokt");});
test("megszoktuk -> megszokt", function() {deepEqual( Stem("megszoktuk"), "megszokt");});
test("megszokva -> megszokv", function() {deepEqual( Stem("megszokva"), "megszokv");});
test("megszokás -> megszokás", function() {deepEqual( Stem("megszokás"), "megszokás");});
test("megszokásból -> megszokás", function() {deepEqual( Stem("megszokásból"), "megszokás");});
test("megszolgált -> megszolgál", function() {deepEqual( Stem("megszolgált"), "megszolgál");});
test("megszomjaztam -> megszomjazt", function() {deepEqual( Stem("megszomjaztam"), "megszomjazt");});
test("megszorongatását -> megszorongatás", function() {deepEqual( Stem("megszorongatását"), "megszorongatás");});
test("megszorozzuk -> megszorozz", function() {deepEqual( Stem("megszorozzuk"), "megszorozz");});
test("megszorult -> megszorul", function() {deepEqual( Stem("megszorult"), "megszorul");});
test("megszorította -> megszorított", function() {deepEqual( Stem("megszorította"), "megszorított");});
test("megszorították -> megszorította", function() {deepEqual( Stem("megszorították"), "megszorította");});
test("megszorítás -> megszorítás", function() {deepEqual( Stem("megszorítás"), "megszorítás");});
test("megszorításait -> megszorítás", function() {deepEqual( Stem("megszorításait"), "megszorítás");});
test("megszorítások -> megszorítás", function() {deepEqual( Stem("megszorítások"), "megszorítás");});
test("megszorításokat -> megszorítás", function() {deepEqual( Stem("megszorításokat"), "megszorítás");});
test("megszorítással -> megszorítás", function() {deepEqual( Stem("megszorítással"), "megszorítás");});
test("megszorítást -> megszorítás", function() {deepEqual( Stem("megszorítást"), "megszorítás");});
test("megszorító -> megszorító", function() {deepEqual( Stem("megszorító"), "megszorító");});
test("megszákolni -> megszákoln", function() {deepEqual( Stem("megszákolni"), "megszákoln");});
test("megszákoltam -> megszákolt", function() {deepEqual( Stem("megszákoltam"), "megszákolt");});
test("megszákoltuk -> megszákolt", function() {deepEqual( Stem("megszákoltuk"), "megszákolt");});
test("megszákolása -> megszákolás", function() {deepEqual( Stem("megszákolása"), "megszákolás");});
test("megszállják -> megszállja", function() {deepEqual( Stem("megszállják"), "megszállja");});
test("megszállni -> megszálln", function() {deepEqual( Stem("megszállni"), "megszálln");});
test("megszállta -> megszállt", function() {deepEqual( Stem("megszállta"), "megszállt");});
test("megszállott -> megszállot", function() {deepEqual( Stem("megszállott"), "megszállot");});
test("megszállt -> megszáll", function() {deepEqual( Stem("megszállt"), "megszáll");});
test("megszállottan -> megszállott", function() {deepEqual( Stem("megszállottan"), "megszállott");});
test("megszállottság -> megszállottság", function() {deepEqual( Stem("megszállottság"), "megszállottság");});
test("megszállása -> megszállás", function() {deepEqual( Stem("megszállása"), "megszállás");});
test("megszállással -> megszállás", function() {deepEqual( Stem("megszállással"), "megszállás");});
test("megszámlálhatatlan -> megszámlálhatatl", function() {deepEqual( Stem("megszámlálhatatlan"), "megszámlálhatatl");});
test("megszámolni -> megszámoln", function() {deepEqual( Stem("megszámolni"), "megszámoln");});
test("megszánja -> megszán", function() {deepEqual( Stem("megszánja"), "megszán");});
test("megszárad -> megszár", function() {deepEqual( Stem("megszárad"), "megszár");});
test("megszáradni -> megszáradn", function() {deepEqual( Stem("megszáradni"), "megszáradn");});
test("megszáradunk -> megszárad", function() {deepEqual( Stem("megszáradunk"), "megszárad");});
test("megszáradt -> megszár", function() {deepEqual( Stem("megszáradt"), "megszár");});
test("megszárítkoztunk -> megszárítkozt", function() {deepEqual( Stem("megszárítkoztunk"), "megszárítkozt");});
test("megszárított -> megszárítot", function() {deepEqual( Stem("megszárított"), "megszárítot");});
test("megszárítani -> megszárítan", function() {deepEqual( Stem("megszárítani"), "megszárítan");});
test("megszárítottuk -> megszárított", function() {deepEqual( Stem("megszárítottuk"), "megszárított");});
test("megszárítottunk -> megszárított", function() {deepEqual( Stem("megszárítottunk"), "megszárított");});
test("megszégyenített -> megszégyenítet", function() {deepEqual( Stem("megszégyenített"), "megszégyenítet");});
test("megszégyenítések -> megszégyenítés", function() {deepEqual( Stem("megszégyenítések"), "megszégyenítés");});
test("megszépítheti -> megszépíthet", function() {deepEqual( Stem("megszépítheti"), "megszépíthet");});
test("megszépítette -> megszépített", function() {deepEqual( Stem("megszépítette"), "megszépített");});
test("megszépítsen -> megszépíts", function() {deepEqual( Stem("megszépítsen"), "megszépíts");});
test("megszépítésén -> megszépítés", function() {deepEqual( Stem("megszépítésén"), "megszépítés");});
test("megszépítését -> megszépítés", function() {deepEqual( Stem("megszépítését"), "megszépítés");});
test("megszívlelnie -> megszívleln", function() {deepEqual( Stem("megszívlelnie"), "megszívleln");});
test("megszívtuk -> megszívt", function() {deepEqual( Stem("megszívtuk"), "megszívt");});
test("megszólal -> megszólal", function() {deepEqual( Stem("megszólal"), "megszólal");});
test("megszólaljon -> megszólalj", function() {deepEqual( Stem("megszólaljon"), "megszólalj");});
test("megszólalnak -> megszólal", function() {deepEqual( Stem("megszólalnak"), "megszólal");});
test("megszólalni -> megszólaln", function() {deepEqual( Stem("megszólalni"), "megszólaln");});
test("megszólaltak -> megszólalt", function() {deepEqual( Stem("megszólaltak"), "megszólalt");});
test("megszólalt -> megszólal", function() {deepEqual( Stem("megszólalt"), "megszólal");});
test("megszólaltatni -> megszólaltatn", function() {deepEqual( Stem("megszólaltatni"), "megszólaltatn");});
test("megszólaltatott -> megszólaltatot", function() {deepEqual( Stem("megszólaltatott"), "megszólaltatot");});
test("megszólaltatta -> megszólaltatt", function() {deepEqual( Stem("megszólaltatta"), "megszólaltatt");});
test("megszólaltatása -> megszólaltatás", function() {deepEqual( Stem("megszólaltatása"), "megszólaltatás");});
test("megszólalási -> megszólalás", function() {deepEqual( Stem("megszólalási"), "megszólalás");});
test("megszólják -> megszólja", function() {deepEqual( Stem("megszólják"), "megszólja");});
test("megszólít -> megszólí", function() {deepEqual( Stem("megszólít"), "megszólí");});
test("megszólítani -> megszólítan", function() {deepEqual( Stem("megszólítani"), "megszólítan");});
test("megszólította -> megszólított", function() {deepEqual( Stem("megszólította"), "megszólított");});
test("megszólítható -> megszólítható", function() {deepEqual( Stem("megszólítható"), "megszólítható");});
test("megszólított -> megszólítot", function() {deepEqual( Stem("megszólított"), "megszólítot");});
test("megszólítás -> megszólítás", function() {deepEqual( Stem("megszólítás"), "megszólítás");});
test("megszólítással -> megszólítás", function() {deepEqual( Stem("megszólítással"), "megszólítás");});
test("megszólítására -> megszólítás", function() {deepEqual( Stem("megszólítására"), "megszólítás");});
test("megszökhessenek -> megszökhess", function() {deepEqual( Stem("megszökhessenek"), "megszökhess");});
test("megszökik -> megsz", function() {deepEqual( Stem("megszökik"), "megsz");});
test("megszökjék -> megszökje", function() {deepEqual( Stem("megszökjék"), "megszökje");});
test("megszökni -> megszökn", function() {deepEqual( Stem("megszökni"), "megszökn");});
test("megszöktette -> megszöktett", function() {deepEqual( Stem("megszöktette"), "megszöktett");});
test("megszöktetted -> megszöktett", function() {deepEqual( Stem("megszöktetted"), "megszöktett");});
test("megszökött -> megszököt", function() {deepEqual( Stem("megszökött"), "megszököt");});
test("megszűnik -> megszűn", function() {deepEqual( Stem("megszűnik"), "megszűn");});
test("megszűnjek -> megszűnj", function() {deepEqual( Stem("megszűnjek"), "megszűnj");});
test("megszűnne -> megszűnn", function() {deepEqual( Stem("megszűnne"), "megszűnn");});
test("megszűnnek -> megszűn", function() {deepEqual( Stem("megszűnnek"), "megszűn");});
test("megszűnni -> megszűnn", function() {deepEqual( Stem("megszűnni"), "megszűnn");});
test("megszűnt -> megszűn", function() {deepEqual( Stem("megszűnt"), "megszűn");});
test("megszűntek -> megszűnt", function() {deepEqual( Stem("megszűntek"), "megszűnt");});
test("megszűntekor -> megszűnt", function() {deepEqual( Stem("megszűntekor"), "megszűnt");});
test("megszűntette -> megszűntett", function() {deepEqual( Stem("megszűntette"), "megszűntett");});
test("megszűntetése -> megszűntetés", function() {deepEqual( Stem("megszűntetése"), "megszűntetés");});
test("megszűntetésének -> megszűntetés", function() {deepEqual( Stem("megszűntetésének"), "megszűntetés");});
test("megszűntnek -> megszűnt", function() {deepEqual( Stem("megszűntnek"), "megszűnt");});
test("megszűntéig -> megszűnt", function() {deepEqual( Stem("megszűntéig"), "megszűnt");});
test("megszűntével -> megszűnt", function() {deepEqual( Stem("megszűntével"), "megszűnt");});
test("megszűnés -> megszűnés", function() {deepEqual( Stem("megszűnés"), "megszűnés");});
test("megszűnése -> megszűnés", function() {deepEqual( Stem("megszűnése"), "megszűnés");});
test("megszűnéseinek -> megszűnés", function() {deepEqual( Stem("megszűnéseinek"), "megszűnés");});
test("megszűnések -> megszűnés", function() {deepEqual( Stem("megszűnések"), "megszűnés");});
test("megszűnésekor -> megszűnés", function() {deepEqual( Stem("megszűnésekor"), "megszűnés");});
test("megszűnéshez -> megszűnés", function() {deepEqual( Stem("megszűnéshez"), "megszűnés");});
test("megszűnési -> megszűnés", function() {deepEqual( Stem("megszűnési"), "megszűnés");});
test("megszűnéskor -> megszűnés", function() {deepEqual( Stem("megszűnéskor"), "megszűnés");});
test("megszűnésnél -> megszűnés", function() {deepEqual( Stem("megszűnésnél"), "megszűnés");});
test("megszűnésről -> megszűnés", function() {deepEqual( Stem("megszűnésről"), "megszűnés");});
test("megszűnéssel -> megszűnés", function() {deepEqual( Stem("megszűnéssel"), "megszűnés");});
test("megszűnést -> megszűnés", function() {deepEqual( Stem("megszűnést"), "megszűnés");});
test("megszűnéséhez -> megszűnés", function() {deepEqual( Stem("megszűnéséhez"), "megszűnés");});
test("megszűnéséig -> megszűnés", function() {deepEqual( Stem("megszűnéséig"), "megszűnés");});
test("megszűnésének -> megszűnés", function() {deepEqual( Stem("megszűnésének"), "megszűnés");});
test("megszűnésénél -> megszűnés", function() {deepEqual( Stem("megszűnésénél"), "megszűnés");});
test("megszűnésére -> megszűnés", function() {deepEqual( Stem("megszűnésére"), "megszűnés");});
test("megszűnéséről -> megszűnés", function() {deepEqual( Stem("megszűnéséről"), "megszűnés");});
test("megszűnését -> megszűnés", function() {deepEqual( Stem("megszűnését"), "megszűnés");});
test("megszűnésétől -> megszűnés", function() {deepEqual( Stem("megszűnésétől"), "megszűnés");});
test("megszűnésével -> megszűnés", function() {deepEqual( Stem("megszűnésével"), "megszűnés");});
test("megszűnésükig -> megszűnés", function() {deepEqual( Stem("megszűnésükig"), "megszűnés");});
test("megszűnésükről -> megszűnés", function() {deepEqual( Stem("megszűnésükről"), "megszűnés");});
test("megszűnő -> megszűnő", function() {deepEqual( Stem("megszűnő"), "megszűnő");});
test("megszűnőben -> megszűnő", function() {deepEqual( Stem("megszűnőben"), "megszűnő");});
test("megszűrhessék -> megszűrhesse", function() {deepEqual( Stem("megszűrhessék"), "megszűrhesse");});
test("megszületett -> megszületet", function() {deepEqual( Stem("megszületett"), "megszületet");});
test("megszülettek -> megszülett", function() {deepEqual( Stem("megszülettek"), "megszülett");});
test("megszülethet -> megszületh", function() {deepEqual( Stem("megszülethet"), "megszületh");});
test("megszülessen -> megszüless", function() {deepEqual( Stem("megszülessen"), "megszüless");});
test("megszületik -> megszület", function() {deepEqual( Stem("megszületik"), "megszület");});
test("megszületnem -> megszületn", function() {deepEqual( Stem("megszületnem"), "megszületn");});
test("megszülettem -> megszülett", function() {deepEqual( Stem("megszülettem"), "megszülett");});
test("megszületése -> megszületés", function() {deepEqual( Stem("megszületése"), "megszületés");});
test("megszületéséhez -> megszületés", function() {deepEqual( Stem("megszületéséhez"), "megszületés");});
test("megszületéséig -> megszületés", function() {deepEqual( Stem("megszületéséig"), "megszületés");});
test("megszületését -> megszületés", function() {deepEqual( Stem("megszületését"), "megszületés");});
test("megszületésükkor -> megszületés", function() {deepEqual( Stem("megszületésükkor"), "megszületés");});
test("megszülető -> megszülető", function() {deepEqual( Stem("megszülető"), "megszülető");});
test("megszülte -> megszült", function() {deepEqual( Stem("megszülte"), "megszült");});
test("megszüntessék -> megszüntesse", function() {deepEqual( Stem("megszüntessék"), "megszüntesse");});
test("megszüntetett -> megszüntetet", function() {deepEqual( Stem("megszüntetett"), "megszüntetet");});
test("megszüntetheti -> megszüntethet", function() {deepEqual( Stem("megszüntetheti"), "megszüntethet");});
test("megszüntethetjük -> megszüntethet", function() {deepEqual( Stem("megszüntethetjük"), "megszüntethet");});
test("megszüntethetünk -> megszüntethet", function() {deepEqual( Stem("megszüntethetünk"), "megszüntethet");});
test("megszüntethető -> megszüntethető", function() {deepEqual( Stem("megszüntethető"), "megszüntethető");});
test("megszünteti -> megszüntet", function() {deepEqual( Stem("megszünteti"), "megszüntet");});
test("megszüntetjük -> megszüntet", function() {deepEqual( Stem("megszüntetjük"), "megszüntet");});
test("megszüntetni -> megszüntetn", function() {deepEqual( Stem("megszüntetni"), "megszüntetn");});
test("megszüntetném -> megszüntetne", function() {deepEqual( Stem("megszüntetném"), "megszüntetne");});
test("megszüntette -> megszüntett", function() {deepEqual( Stem("megszüntette"), "megszüntett");});
test("megszüntették -> megszüntette", function() {deepEqual( Stem("megszüntették"), "megszüntette");});
test("megszüntetve -> megszüntetv", function() {deepEqual( Stem("megszüntetve"), "megszüntetv");});
test("megszüntetési -> megszüntetés", function() {deepEqual( Stem("megszüntetési"), "megszüntetés");});
test("megszüntetés -> megszüntetés", function() {deepEqual( Stem("megszüntetés"), "megszüntetés");});
test("megszüntetése -> megszüntetés", function() {deepEqual( Stem("megszüntetése"), "megszüntetés");});
test("megszüntetésekre -> megszüntetés", function() {deepEqual( Stem("megszüntetésekre"), "megszüntetés");});
test("megszüntetéshez -> megszüntetés", function() {deepEqual( Stem("megszüntetéshez"), "megszüntetés");});
test("megszüntetéséhez -> megszüntetés", function() {deepEqual( Stem("megszüntetéséhez"), "megszüntetés");});
test("megszüntetésének -> megszüntetés", function() {deepEqual( Stem("megszüntetésének"), "megszüntetés");});
test("megszüntetésére -> megszüntetés", function() {deepEqual( Stem("megszüntetésére"), "megszüntetés");});
test("megszüntetéséről -> megszüntetés", function() {deepEqual( Stem("megszüntetéséről"), "megszüntetés");});
test("megszüntetését -> megszüntetés", function() {deepEqual( Stem("megszüntetését"), "megszüntetés");});
test("megszüntetésétől -> megszüntetés", function() {deepEqual( Stem("megszüntetésétől"), "megszüntetés");});
test("megszüntetésével -> megszüntetés", function() {deepEqual( Stem("megszüntetésével"), "megszüntetés");});
test("megszüntetéséért -> megszüntetés", function() {deepEqual( Stem("megszüntetéséért"), "megszüntetés");});
test("megszüntető -> megszüntető", function() {deepEqual( Stem("megszüntető"), "megszüntető");});
test("megsárgult -> megsárgul", function() {deepEqual( Stem("megsárgult"), "megsárgul");});
test("megsárgított -> megsárgítot", function() {deepEqual( Stem("megsárgított"), "megsárgítot");});
test("megsértem -> megsért", function() {deepEqual( Stem("megsértem"), "megsért");});
test("megsérteni -> megsérten", function() {deepEqual( Stem("megsérteni"), "megsérten");});
test("megsértené -> megsérten", function() {deepEqual( Stem("megsértené"), "megsérten");});
test("megsértenék -> megsértene", function() {deepEqual( Stem("megsértenék"), "megsértene");});
test("megsértette -> megsértett", function() {deepEqual( Stem("megsértette"), "megsértett");});
test("megsértették -> megsértette", function() {deepEqual( Stem("megsértették"), "megsértette");});
test("megsérti -> megsért", function() {deepEqual( Stem("megsérti"), "megsért");});
test("megsértik -> megsért", function() {deepEqual( Stem("megsértik"), "megsért");});
test("megsértett -> megsértet", function() {deepEqual( Stem("megsértett"), "megsértet");});
test("megsértése -> megsértés", function() {deepEqual( Stem("megsértése"), "megsértés");});
test("megsértésekor -> megsértés", function() {deepEqual( Stem("megsértésekor"), "megsértés");});
test("megsértéséből -> megsértés", function() {deepEqual( Stem("megsértéséből"), "megsértés");});
test("megsértéséhez -> megsértés", function() {deepEqual( Stem("megsértéséhez"), "megsértés");});
test("megsértésének -> megsértés", function() {deepEqual( Stem("megsértésének"), "megsértés");});
test("megsértésére -> megsértés", function() {deepEqual( Stem("megsértésére"), "megsértés");});
test("megsértését -> megsértés", function() {deepEqual( Stem("megsértését"), "megsértés");});
test("megsértésével -> megsértés", function() {deepEqual( Stem("megsértésével"), "megsértés");});
test("megsértéséért -> megsértés", function() {deepEqual( Stem("megsértéséért"), "megsértés");});
test("megsértődne -> megsértődn", function() {deepEqual( Stem("megsértődne"), "megsértődn");});
test("megsértődtem -> megsértődt", function() {deepEqual( Stem("megsértődtem"), "megsértődt");});
test("megsértődve -> megsértődv", function() {deepEqual( Stem("megsértődve"), "megsértődv");});
test("megsértődött -> megsértődöt", function() {deepEqual( Stem("megsértődött"), "megsértődöt");});
test("megsérülhetett -> megsérülhetet", function() {deepEqual( Stem("megsérülhetett"), "megsérülhetet");});
test("megsérült -> megsérül", function() {deepEqual( Stem("megsérült"), "megsérül");});
test("megsúgom -> megsúg", function() {deepEqual( Stem("megsúgom"), "megsúg");});
test("megsűrűsödtek -> megsűrűsödt", function() {deepEqual( Stem("megsűrűsödtek"), "megsűrűsödt");});
test("megsült -> megsül", function() {deepEqual( Stem("megsült"), "megsül");});
test("megsültünk -> megsült", function() {deepEqual( Stem("megsültünk"), "megsült");});
test("megsüti -> megsüt", function() {deepEqual( Stem("megsüti"), "megsüt");});
test("megsütni -> megsütn", function() {deepEqual( Stem("megsütni"), "megsütn");});
test("megsütötte -> megsütött", function() {deepEqual( Stem("megsütötte"), "megsütött");});
test("megsütöttük -> megsütött", function() {deepEqual( Stem("megsütöttük"), "megsütött");});
test("megsütöttek -> megsütött", function() {deepEqual( Stem("megsütöttek"), "megsütött");});
test("megtagadhatja -> megtagadhat", function() {deepEqual( Stem("megtagadhatja"), "megtagadhat");});
test("megtagadhatják -> megtagadhatja", function() {deepEqual( Stem("megtagadhatják"), "megtagadhatja");});
test("megtagadható -> megtagadható", function() {deepEqual( Stem("megtagadható"), "megtagadható");});
test("megtagadja -> megtagad", function() {deepEqual( Stem("megtagadja"), "megtagad");});
test("megtagadjuk -> megtagad", function() {deepEqual( Stem("megtagadjuk"), "megtagad");});
test("megtagadják -> megtagadja", function() {deepEqual( Stem("megtagadják"), "megtagadja");});
test("megtagadni -> megtagadn", function() {deepEqual( Stem("megtagadni"), "megtagadn");});
test("megtagadok -> megtagad", function() {deepEqual( Stem("megtagadok"), "megtagad");});
test("megtagadta -> megtagadt", function() {deepEqual( Stem("megtagadta"), "megtagadt");});
test("megtagadtuk -> megtagadt", function() {deepEqual( Stem("megtagadtuk"), "megtagadt");});
test("megtagadták -> megtagadta", function() {deepEqual( Stem("megtagadták"), "megtagadta");});
test("megtagadott -> megtagadot", function() {deepEqual( Stem("megtagadott"), "megtagadot");});
test("megtagadva -> megtagadv", function() {deepEqual( Stem("megtagadva"), "megtagadv");});
test("megtagadása -> megtagadás", function() {deepEqual( Stem("megtagadása"), "megtagadás");});
test("megtagadásához -> megtagadás", function() {deepEqual( Stem("megtagadásához"), "megtagadás");});
test("megtagadásának -> megtagadás", function() {deepEqual( Stem("megtagadásának"), "megtagadás");});
test("megtagadására -> megtagadás", function() {deepEqual( Stem("megtagadására"), "megtagadás");});
test("megtagadásáról -> megtagadás", function() {deepEqual( Stem("megtagadásáról"), "megtagadás");});
test("megtagadását -> megtagadás", function() {deepEqual( Stem("megtagadását"), "megtagadás");});
test("megtagadásával -> megtagadás", function() {deepEqual( Stem("megtagadásával"), "megtagadás");});
test("megtagadó -> megtagadó", function() {deepEqual( Stem("megtagadó"), "megtagadó");});
test("megtakaríthat -> megtakaríth", function() {deepEqual( Stem("megtakaríthat"), "megtakaríth");});
test("megtakaríthatják -> megtakaríthatja", function() {deepEqual( Stem("megtakaríthatják"), "megtakaríthatja");});
test("megtakaríthatnak -> megtakaríthat", function() {deepEqual( Stem("megtakaríthatnak"), "megtakaríthat");});
test("megtakarítható -> megtakarítható", function() {deepEqual( Stem("megtakarítható"), "megtakarítható");});
test("megtakarítani -> megtakarítan", function() {deepEqual( Stem("megtakarítani"), "megtakarítan");});
test("megtakarítja -> megtakarít", function() {deepEqual( Stem("megtakarítja"), "megtakarít");});
test("megtakarítási -> megtakarítás", function() {deepEqual( Stem("megtakarítási"), "megtakarítás");});
test("megtakarítás -> megtakarítás", function() {deepEqual( Stem("megtakarítás"), "megtakarítás");});
test("megtakarítása -> megtakarítás", function() {deepEqual( Stem("megtakarítása"), "megtakarítás");});
test("megtakarítások -> megtakarítás", function() {deepEqual( Stem("megtakarítások"), "megtakarítás");});
test("megtakarításoknak -> megtakarítás", function() {deepEqual( Stem("megtakarításoknak"), "megtakarítás");});
test("megtakarításoknál -> megtakarítás", function() {deepEqual( Stem("megtakarításoknál"), "megtakarítás");});
test("megtakarítással -> megtakarítás", function() {deepEqual( Stem("megtakarítással"), "megtakarítás");});
test("megtakarítást -> megtakarítás", function() {deepEqual( Stem("megtakarítást"), "megtakarítás");});
test("megtakarításának -> megtakarítás", function() {deepEqual( Stem("megtakarításának"), "megtakarítás");});
test("megtalálhassuk -> megtalálhass", function() {deepEqual( Stem("megtalálhassuk"), "megtalálhass");});
test("megtalálhat -> megtalálh", function() {deepEqual( Stem("megtalálhat"), "megtalálh");});
test("megtalálhatja -> megtalálhat", function() {deepEqual( Stem("megtalálhatja"), "megtalálhat");});
test("megtalálhatják -> megtalálhatja", function() {deepEqual( Stem("megtalálhatják"), "megtalálhatja");});
test("megtalálhatnak -> megtalálhat", function() {deepEqual( Stem("megtalálhatnak"), "megtalálhat");});
test("megtalálható -> megtalálható", function() {deepEqual( Stem("megtalálható"), "megtalálható");});
test("megtalálhatók -> megtalálható", function() {deepEqual( Stem("megtalálhatók"), "megtalálható");});
test("megtalálta -> megtalált", function() {deepEqual( Stem("megtalálta"), "megtalált");});
test("megtaláltuk -> megtalált", function() {deepEqual( Stem("megtaláltuk"), "megtalált");});
test("megtalálták -> megtalálta", function() {deepEqual( Stem("megtalálták"), "megtalálta");});
test("megtaláltál -> megtaláltál", function() {deepEqual( Stem("megtaláltál"), "megtaláltál");});
test("megtalál -> megtalál", function() {deepEqual( Stem("megtalál"), "megtalál");});
test("megtalálja -> megtalál", function() {deepEqual( Stem("megtalálja"), "megtalál");});
test("megtaláljam -> megtalálj", function() {deepEqual( Stem("megtaláljam"), "megtalálj");});
test("megtaláljuk -> megtalál", function() {deepEqual( Stem("megtaláljuk"), "megtalál");});
test("megtalálják -> megtalálja", function() {deepEqual( Stem("megtalálják"), "megtalálja");});
test("megtalálnak -> megtalál", function() {deepEqual( Stem("megtalálnak"), "megtalál");});
test("megtalálni -> megtaláln", function() {deepEqual( Stem("megtalálni"), "megtaláln");});
test("megtalálnia -> megtaláln", function() {deepEqual( Stem("megtalálnia"), "megtaláln");});
test("megtalálniuk -> megtaláln", function() {deepEqual( Stem("megtalálniuk"), "megtaláln");});
test("megtalálnom -> megtaláln", function() {deepEqual( Stem("megtalálnom"), "megtaláln");});
test("megtalálom -> megtalál", function() {deepEqual( Stem("megtalálom"), "megtalál");});
test("megtalált -> megtalál", function() {deepEqual( Stem("megtalált"), "megtalál");});
test("megtalálva -> megtalálv", function() {deepEqual( Stem("megtalálva"), "megtalálv");});
test("megtalálás -> megtalálás", function() {deepEqual( Stem("megtalálás"), "megtalálás");});
test("megtalálása -> megtalálás", function() {deepEqual( Stem("megtalálása"), "megtalálás");});
test("megtalálását -> megtalálás", function() {deepEqual( Stem("megtalálását"), "megtalálás");});
test("megtankolni -> megtankoln", function() {deepEqual( Stem("megtankolni"), "megtankoln");});
test("megtanulhassak -> megtanulhass", function() {deepEqual( Stem("megtanulhassak"), "megtanulhass");});
test("megtanulhat -> megtanulh", function() {deepEqual( Stem("megtanulhat"), "megtanulh");});
test("megtanulhatnánk -> megtanulhatna", function() {deepEqual( Stem("megtanulhatnánk"), "megtanulhatna");});
test("megtanulhatok -> megtanulhat", function() {deepEqual( Stem("megtanulhatok"), "megtanulhat");});
test("megtanulhatom -> megtanulhat", function() {deepEqual( Stem("megtanulhatom"), "megtanulhat");});
test("megtanulhattam -> megtanulhatt", function() {deepEqual( Stem("megtanulhattam"), "megtanulhatt");});
test("megtanulhatunk -> megtanulhat", function() {deepEqual( Stem("megtanulhatunk"), "megtanulhat");});
test("megtanul -> megtan", function() {deepEqual( Stem("megtanul"), "megtan");});
test("megtanulja -> megtanul", function() {deepEqual( Stem("megtanulja"), "megtanul");});
test("megtanuljak -> megtanulj", function() {deepEqual( Stem("megtanuljak"), "megtanulj");});
test("megtanuljuk -> megtanul", function() {deepEqual( Stem("megtanuljuk"), "megtanul");});
test("megtanuljunk -> megtanulj", function() {deepEqual( Stem("megtanuljunk"), "megtanulj");});
test("megtanulják -> megtanulja", function() {deepEqual( Stem("megtanulják"), "megtanulja");});
test("megtanulnak -> megtanul", function() {deepEqual( Stem("megtanulnak"), "megtanul");});
test("megtanulni -> megtanuln", function() {deepEqual( Stem("megtanulni"), "megtanuln");});
test("megtanulnom -> megtanuln", function() {deepEqual( Stem("megtanulnom"), "megtanuln");});
test("megtanulok -> megtanul", function() {deepEqual( Stem("megtanulok"), "megtanul");});
test("megtanulom -> megtanul", function() {deepEqual( Stem("megtanulom"), "megtanul");});
test("megtanulta -> megtanult", function() {deepEqual( Stem("megtanulta"), "megtanult");});
test("megtanultam -> megtanult", function() {deepEqual( Stem("megtanultam"), "megtanult");});
test("megtanultunk -> megtanult", function() {deepEqual( Stem("megtanultunk"), "megtanult");});
test("megtanulták -> megtanulta", function() {deepEqual( Stem("megtanulták"), "megtanulta");});
test("megtanulunk -> megtanul", function() {deepEqual( Stem("megtanulunk"), "megtanul");});
test("megtanult -> megtanul", function() {deepEqual( Stem("megtanult"), "megtanul");});
test("megtanultak -> megtanult", function() {deepEqual( Stem("megtanultak"), "megtanult");});
test("megtanulása -> megtanulás", function() {deepEqual( Stem("megtanulása"), "megtanulás");});
test("megtanítható -> megtanítható", function() {deepEqual( Stem("megtanítható"), "megtanítható");});
test("megtanít -> megtaní", function() {deepEqual( Stem("megtanít"), "megtaní");});
test("megtanítani -> megtanítan", function() {deepEqual( Stem("megtanítani"), "megtanítan");});
test("megtanítanom -> megtanítan", function() {deepEqual( Stem("megtanítanom"), "megtanítan");});
test("megtanítanám -> megtanítana", function() {deepEqual( Stem("megtanítanám"), "megtanítana");});
test("megtanítottuk -> megtanított", function() {deepEqual( Stem("megtanítottuk"), "megtanított");});
test("megtanítsanak -> megtaníts", function() {deepEqual( Stem("megtanítsanak"), "megtaníts");});
test("megtanítja -> megtanít", function() {deepEqual( Stem("megtanítja"), "megtanít");});
test("megtanítjuk -> megtanít", function() {deepEqual( Stem("megtanítjuk"), "megtanít");});
test("megtanítják -> megtanítja", function() {deepEqual( Stem("megtanítják"), "megtanítja");});
test("megtanítlak -> megtanítl", function() {deepEqual( Stem("megtanítlak"), "megtanítl");});
test("megtanítom -> megtanít", function() {deepEqual( Stem("megtanítom"), "megtanít");});
test("megtanított -> megtanítot", function() {deepEqual( Stem("megtanított"), "megtanítot");});
test("megtanítottak -> megtanított", function() {deepEqual( Stem("megtanítottak"), "megtanított");});
test("megtaníttatni -> megtaníttatn", function() {deepEqual( Stem("megtaníttatni"), "megtaníttatn");});
test("megtanítása -> megtanítás", function() {deepEqual( Stem("megtanítása"), "megtanítás");});
test("megtapad -> megtap", function() {deepEqual( Stem("megtapad"), "megtap");});
test("megtapasztalta -> megtapasztalt", function() {deepEqual( Stem("megtapasztalta"), "megtapasztalt");});
test("megtapasztaltuk -> megtapasztalt", function() {deepEqual( Stem("megtapasztaltuk"), "megtapasztalt");});
test("megtapasztalták -> megtapasztalta", function() {deepEqual( Stem("megtapasztalták"), "megtapasztalta");});
test("megtapintsam -> megtapints", function() {deepEqual( Stem("megtapintsam"), "megtapints");});
test("megtapogatta -> megtapogatt", function() {deepEqual( Stem("megtapogatta"), "megtapogatt");});
test("megtapsoltak -> megtapsolt", function() {deepEqual( Stem("megtapsoltak"), "megtapsolt");});
test("megtapsolták -> megtapsolta", function() {deepEqual( Stem("megtapsolták"), "megtapsolta");});
test("megtartanak -> megtart", function() {deepEqual( Stem("megtartanak"), "megtart");});
test("megtartani -> megtartan", function() {deepEqual( Stem("megtartani"), "megtartan");});
test("megtartaná -> megtartana", function() {deepEqual( Stem("megtartaná"), "megtartana");});
test("megtartanám -> megtartana", function() {deepEqual( Stem("megtartanám"), "megtartana");});
test("megtartotta -> megtartott", function() {deepEqual( Stem("megtartotta"), "megtartott");});
test("megtartottak -> megtartott", function() {deepEqual( Stem("megtartottak"), "megtartott");});
test("megtartottam -> megtartott", function() {deepEqual( Stem("megtartottam"), "megtartott");});
test("megtartottuk -> megtartott", function() {deepEqual( Stem("megtartottuk"), "megtartott");});
test("megtartották -> megtartotta", function() {deepEqual( Stem("megtartották"), "megtartotta");});
test("megtartsa -> megtarts", function() {deepEqual( Stem("megtartsa"), "megtarts");});
test("megtartsuk -> megtarts", function() {deepEqual( Stem("megtartsuk"), "megtarts");});
test("megtartja -> megtart", function() {deepEqual( Stem("megtartja"), "megtart");});
test("megtartjuk -> megtart", function() {deepEqual( Stem("megtartjuk"), "megtart");});
test("megtartják -> megtartja", function() {deepEqual( Stem("megtartják"), "megtartja");});
test("megtartom -> megtart", function() {deepEqual( Stem("megtartom"), "megtart");});
test("megtarthatja -> megtarthat", function() {deepEqual( Stem("megtarthatja"), "megtarthat");});
test("megtartható -> megtartható", function() {deepEqual( Stem("megtartható"), "megtartható");});
test("megtartott -> megtartot", function() {deepEqual( Stem("megtartott"), "megtartot");});
test("megtartva -> megtartv", function() {deepEqual( Stem("megtartva"), "megtartv");});
test("megtartás -> megtartás", function() {deepEqual( Stem("megtartás"), "megtartás");});
test("megtartása -> megtartás", function() {deepEqual( Stem("megtartása"), "megtartás");});
test("megtartásra -> megtartás", function() {deepEqual( Stem("megtartásra"), "megtartás");});
test("megtartásához -> megtartás", function() {deepEqual( Stem("megtartásához"), "megtartás");});
test("megtartásának -> megtartás", function() {deepEqual( Stem("megtartásának"), "megtartás");});
test("megtartására -> megtartás", function() {deepEqual( Stem("megtartására"), "megtartás");});
test("megtartását -> megtartás", function() {deepEqual( Stem("megtartását"), "megtartás");});
test("megtartásával -> megtartás", function() {deepEqual( Stem("megtartásával"), "megtartás");});
test("megtedd -> megted", function() {deepEqual( Stem("megtedd"), "megted");});
test("megtegyenek -> megtegy", function() {deepEqual( Stem("megtegyenek"), "megtegy");});
test("megtegyék -> megtegye", function() {deepEqual( Stem("megtegyék"), "megtegye");});
test("megtehet -> megteh", function() {deepEqual( Stem("megtehet"), "megteh");});
test("megteheti -> megtehet", function() {deepEqual( Stem("megteheti"), "megtehet");});
test("megtehetik -> megtehet", function() {deepEqual( Stem("megtehetik"), "megtehet");});
test("megtehetjük -> megtehet", function() {deepEqual( Stem("megtehetjük"), "megtehet");});
test("megtehetne -> megtehetn", function() {deepEqual( Stem("megtehetne"), "megtehetn");});
test("megtehetnék -> megtehetne", function() {deepEqual( Stem("megtehetnék"), "megtehetne");});
test("megtehették -> megtehette", function() {deepEqual( Stem("megtehették"), "megtehette");});
test("megtekinteni -> megtekinten", function() {deepEqual( Stem("megtekinteni"), "megtekinten");});
test("megtekintettük -> megtekintett", function() {deepEqual( Stem("megtekintettük"), "megtekintett");});
test("megtekintettünk -> megtekintett", function() {deepEqual( Stem("megtekintettünk"), "megtekintett");});
test("megtekinthesse -> megtekinthess", function() {deepEqual( Stem("megtekinthesse"), "megtekinthess");});
test("megtekintheti -> megtekinthet", function() {deepEqual( Stem("megtekintheti"), "megtekinthet");});
test("megtekinthetik -> megtekinthet", function() {deepEqual( Stem("megtekinthetik"), "megtekinthet");});
test("megtekinthetjük -> megtekinthet", function() {deepEqual( Stem("megtekinthetjük"), "megtekinthet");});
test("megtekinthetnek -> megtekinthet", function() {deepEqual( Stem("megtekinthetnek"), "megtekinthet");});
test("megtekinthető -> megtekinthető", function() {deepEqual( Stem("megtekinthető"), "megtekinthető");});
test("megtekinthetők -> megtekinthető", function() {deepEqual( Stem("megtekinthetők"), "megtekinthető");});
test("megtekinthetőséghez -> megtekinthetőség", function() {deepEqual( Stem("megtekinthetőséghez"), "megtekinthetőség");});
test("megtekinthetőségénél -> megtekinthetőség", function() {deepEqual( Stem("megtekinthetőségénél"), "megtekinthetőség");});
test("megtekintése -> megtekintés", function() {deepEqual( Stem("megtekintése"), "megtekintés");});
test("megtekintéséhez -> megtekintés", function() {deepEqual( Stem("megtekintéséhez"), "megtekintés");});
test("megtekintését -> megtekintés", function() {deepEqual( Stem("megtekintését"), "megtekintés");});
test("megtelepedett -> megtelepedet", function() {deepEqual( Stem("megtelepedett"), "megtelepedet");});
test("megtelepülésükön -> megtelepülés", function() {deepEqual( Stem("megtelepülésükön"), "megtelepülés");});
test("megtelik -> megtel", function() {deepEqual( Stem("megtelik"), "megtel");});
test("megteljék -> megtelje", function() {deepEqual( Stem("megteljék"), "megtelje");});
test("megtelnek -> megtel", function() {deepEqual( Stem("megtelnek"), "megtel");});
test("megtudhatnak -> megtudhat", function() {deepEqual( Stem("megtudhatnak"), "megtudhat");});
test("megtudhatod -> megtudhat", function() {deepEqual( Stem("megtudhatod"), "megtudhat");});
test("megtudhatok -> megtudhat", function() {deepEqual( Stem("megtudhatok"), "megtudhat");});
test("megtudhatták -> megtudhatta", function() {deepEqual( Stem("megtudhatták"), "megtudhatta");});
test("megtudhatunk -> megtudhat", function() {deepEqual( Stem("megtudhatunk"), "megtudhat");});
test("megtudható -> megtudható", function() {deepEqual( Stem("megtudható"), "megtudható");});
test("megtud -> megtu", function() {deepEqual( Stem("megtud"), "megtu");});
test("megtudja -> megtud", function() {deepEqual( Stem("megtudja"), "megtud");});
test("megtudjam -> megtudj", function() {deepEqual( Stem("megtudjam"), "megtudj");});
test("megtudjon -> megtudj", function() {deepEqual( Stem("megtudjon"), "megtudj");});
test("megtudjuk -> megtud", function() {deepEqual( Stem("megtudjuk"), "megtud");});
test("megtudjunk -> megtudj", function() {deepEqual( Stem("megtudjunk"), "megtudj");});
test("megtudják -> megtudja", function() {deepEqual( Stem("megtudják"), "megtudja");});
test("megtudni -> megtudn", function() {deepEqual( Stem("megtudni"), "megtudn");});
test("megtudod -> megtud", function() {deepEqual( Stem("megtudod"), "megtud");});
test("megtudom -> megtud", function() {deepEqual( Stem("megtudom"), "megtud");});
test("megtudta -> megtudt", function() {deepEqual( Stem("megtudta"), "megtudt");});
test("megtudtam -> megtudt", function() {deepEqual( Stem("megtudtam"), "megtudt");});
test("megtudtuk -> megtudt", function() {deepEqual( Stem("megtudtuk"), "megtudt");});
test("megtudták -> megtudta", function() {deepEqual( Stem("megtudták"), "megtudta");});
test("megtudunk -> megtud", function() {deepEqual( Stem("megtudunk"), "megtud");});
test("megtáltosodott -> megtáltosodot", function() {deepEqual( Stem("megtáltosodott"), "megtáltosodot");});
test("megtámadhatja -> megtámadhat", function() {deepEqual( Stem("megtámadhatja"), "megtámadhat");});
test("megtámadható -> megtámadható", function() {deepEqual( Stem("megtámadható"), "megtámadható");});
test("megtámadja -> megtámad", function() {deepEqual( Stem("megtámadja"), "megtámad");});
test("megtámadják -> megtámadja", function() {deepEqual( Stem("megtámadják"), "megtámadja");});
test("megtámadnak -> megtám", function() {deepEqual( Stem("megtámadnak"), "megtám");});
test("megtámadni -> megtámadn", function() {deepEqual( Stem("megtámadni"), "megtámadn");});
test("megtámadná -> megtámadna", function() {deepEqual( Stem("megtámadná"), "megtámadna");});
test("megtámadnák -> megtámadna", function() {deepEqual( Stem("megtámadnák"), "megtámadna");});
test("megtámadta -> megtámadt", function() {deepEqual( Stem("megtámadta"), "megtámadt");});
test("megtámadtuk -> megtámadt", function() {deepEqual( Stem("megtámadtuk"), "megtámadt");});
test("megtámadták -> megtámadta", function() {deepEqual( Stem("megtámadták"), "megtámadta");});
test("megtámadott -> megtámadot", function() {deepEqual( Stem("megtámadott"), "megtámadot");});
test("megtámadási -> megtámadás", function() {deepEqual( Stem("megtámadási"), "megtámadás");});
test("megtámadása -> megtámadás", function() {deepEqual( Stem("megtámadása"), "megtámadás");});
test("megtámadásában -> megtámadás", function() {deepEqual( Stem("megtámadásában"), "megtámadás");});
test("megtámadásának -> megtámadás", function() {deepEqual( Stem("megtámadásának"), "megtámadás");});
test("megtámadására -> megtámadás", function() {deepEqual( Stem("megtámadására"), "megtámadás");});
test("megtámasztott -> megtámasztot", function() {deepEqual( Stem("megtámasztott"), "megtámasztot");});
test("megtámasztva -> megtámasztv", function() {deepEqual( Stem("megtámasztva"), "megtámasztv");});
test("megtámogatott -> megtámogatot", function() {deepEqual( Stem("megtámogatott"), "megtámogatot");});
test("megtántorodott -> megtántorodot", function() {deepEqual( Stem("megtántorodott"), "megtántorodot");});
test("megtárgyalják -> megtárgyalja", function() {deepEqual( Stem("megtárgyalják"), "megtárgyalja");});
test("megtárgyalni -> megtárgyaln", function() {deepEqual( Stem("megtárgyalni"), "megtárgyaln");});
test("megtárgyaltak -> megtárgyalt", function() {deepEqual( Stem("megtárgyaltak"), "megtárgyalt");});
test("megtárgyalása -> megtárgyalás", function() {deepEqual( Stem("megtárgyalása"), "megtárgyalás");});
test("megtárgyalásához -> megtárgyalás", function() {deepEqual( Stem("megtárgyalásához"), "megtárgyalás");});
test("megtárgyalására -> megtárgyalás", function() {deepEqual( Stem("megtárgyalására"), "megtárgyalás");});
test("megtárgyalását -> megtárgyalás", function() {deepEqual( Stem("megtárgyalását"), "megtárgyalás");});
test("megtébolyodott -> megtébolyodot", function() {deepEqual( Stem("megtébolyodott"), "megtébolyodot");});
test("megtébolyodás -> megtébolyodás", function() {deepEqual( Stem("megtébolyodás"), "megtébolyodás");});
test("megtépdeste -> megtépdest", function() {deepEqual( Stem("megtépdeste"), "megtépdest");});
test("megtépve -> megtépv", function() {deepEqual( Stem("megtépve"), "megtépv");});
test("megtépázhatják -> megtépázhatja", function() {deepEqual( Stem("megtépázhatják"), "megtépázhatja");});
test("megtépázta -> megtépázt", function() {deepEqual( Stem("megtépázta"), "megtépázt");});
test("megtéríthetnék -> megtéríthetne", function() {deepEqual( Stem("megtéríthetnék"), "megtéríthetne");});
test("megtéríteni -> megtéríten", function() {deepEqual( Stem("megtéríteni"), "megtéríten");});
test("megtérítjük -> megtérít", function() {deepEqual( Stem("megtérítjük"), "megtérít");});
test("megtérítése -> megtérítés", function() {deepEqual( Stem("megtérítése"), "megtérítés");});
test("megtérítéseként -> megtérítés", function() {deepEqual( Stem("megtérítéseként"), "megtérítés");});
test("megtérítésének -> megtérítés", function() {deepEqual( Stem("megtérítésének"), "megtérítés");});
test("megtérítésére -> megtérítés", function() {deepEqual( Stem("megtérítésére"), "megtérítés");});
test("megtérítését -> megtérítés", function() {deepEqual( Stem("megtérítését"), "megtérítés");});
test("megtérítési -> megtérítés", function() {deepEqual( Stem("megtérítési"), "megtérítés");});
test("megtérül -> megtér", function() {deepEqual( Stem("megtérül"), "megtér");});
test("megtérüléssel -> megtérülés", function() {deepEqual( Stem("megtérüléssel"), "megtérülés");});
test("megtérülést -> megtérülés", function() {deepEqual( Stem("megtérülést"), "megtérülés");});
test("megtérülését -> megtérülés", function() {deepEqual( Stem("megtérülését"), "megtérülés");});
test("megtérülő -> megtérülő", function() {deepEqual( Stem("megtérülő"), "megtérülő");});
test("megtétele -> megtétel", function() {deepEqual( Stem("megtétele"), "megtétel");});
test("megtételében -> megtétel", function() {deepEqual( Stem("megtételében"), "megtétel");});
test("megtételéhez -> megtétel", function() {deepEqual( Stem("megtételéhez"), "megtétel");});
test("megtételéig -> megtétel", function() {deepEqual( Stem("megtételéig"), "megtétel");});
test("megtételének -> megtétel", function() {deepEqual( Stem("megtételének"), "megtétel");});
test("megtételénél -> megtétel", function() {deepEqual( Stem("megtételénél"), "megtétel");});
test("megtételére -> megtétel", function() {deepEqual( Stem("megtételére"), "megtétel");});
test("megtételét -> megtétel", function() {deepEqual( Stem("megtételét"), "megtétel");});
test("megtételével -> megtétel", function() {deepEqual( Stem("megtételével"), "megtétel");});
test("megtévessze -> megtévessz", function() {deepEqual( Stem("megtévessze"), "megtévessz");});
test("megtéveszteni -> megtéveszten", function() {deepEqual( Stem("megtéveszteni"), "megtéveszten");});
test("megtévesztettem -> megtévesztett", function() {deepEqual( Stem("megtévesztettem"), "megtévesztett");});
test("megtévesztik -> megtéveszt", function() {deepEqual( Stem("megtévesztik"), "megtéveszt");});
test("megtévesztett -> megtévesztet", function() {deepEqual( Stem("megtévesztett"), "megtévesztet");});
test("megtéveszthetőek -> megtéveszthető", function() {deepEqual( Stem("megtéveszthetőek"), "megtéveszthető");});
test("megtévesztés -> megtévesztés", function() {deepEqual( Stem("megtévesztés"), "megtévesztés");});
test("megtévesztése -> megtévesztés", function() {deepEqual( Stem("megtévesztése"), "megtévesztés");});
test("megtévesztésre -> megtévesztés", function() {deepEqual( Stem("megtévesztésre"), "megtévesztés");});
test("megtévesztést -> megtévesztés", function() {deepEqual( Stem("megtévesztést"), "megtévesztés");});
test("megtévesztésére -> megtévesztés", function() {deepEqual( Stem("megtévesztésére"), "megtévesztés");});
test("megtévesztő -> megtévesztő", function() {deepEqual( Stem("megtévesztő"), "megtévesztő");});
test("megtévesztővé -> megtévesztő", function() {deepEqual( Stem("megtévesztővé"), "megtévesztő");});
test("megtölteni -> megtölten", function() {deepEqual( Stem("megtölteni"), "megtölten");});
test("megtöltik -> megtölt", function() {deepEqual( Stem("megtöltik"), "megtölt");});
test("megtöltöd -> megtölt", function() {deepEqual( Stem("megtöltöd"), "megtölt");});
test("megtöltötte -> megtöltött", function() {deepEqual( Stem("megtöltötte"), "megtöltött");});
test("megtöltöttem -> megtöltött", function() {deepEqual( Stem("megtöltöttem"), "megtöltött");});
test("megtöltünk -> megtölt", function() {deepEqual( Stem("megtöltünk"), "megtölt");});
test("megtöltve -> megtöltv", function() {deepEqual( Stem("megtöltve"), "megtöltv");});
test("megtömje -> megtöm", function() {deepEqual( Stem("megtömje"), "megtöm");});
test("megtömtük -> megtömt", function() {deepEqual( Stem("megtömtük"), "megtömt");});
test("megtöri -> megtör", function() {deepEqual( Stem("megtöri"), "megtör");});
test("megtörik -> megtör", function() {deepEqual( Stem("megtörik"), "megtör");});
test("megtörne -> megtörn", function() {deepEqual( Stem("megtörne"), "megtörn");});
test("megtörni -> megtörn", function() {deepEqual( Stem("megtörni"), "megtörn");});
test("megtörte -> megtört", function() {deepEqual( Stem("megtörte"), "megtört");});
test("megtörték -> megtörte", function() {deepEqual( Stem("megtörték"), "megtörte");});
test("megtörtük -> megtört", function() {deepEqual( Stem("megtörtük"), "megtört");});
test("megtört -> megtör", function() {deepEqual( Stem("megtört"), "megtör");});
test("megtörténhet -> megtörténh", function() {deepEqual( Stem("megtörténhet"), "megtörténh");});
test("megtörténhetett -> megtörténhetet", function() {deepEqual( Stem("megtörténhetett"), "megtörténhetet");});
test("megtörténhetésének -> megtörténhetés", function() {deepEqual( Stem("megtörténhetésének"), "megtörténhetés");});
test("megtörténik -> megtörtén", function() {deepEqual( Stem("megtörténik"), "megtörtén");});
test("megtörténjék -> megtörténje", function() {deepEqual( Stem("megtörténjék"), "megtörténje");});
test("megtörténne -> megtörténn", function() {deepEqual( Stem("megtörténne"), "megtörténn");});
test("megtörténni -> megtörténn", function() {deepEqual( Stem("megtörténni"), "megtörténn");});
test("megtörténnie -> megtörténn", function() {deepEqual( Stem("megtörténnie"), "megtörténn");});
test("megtörténnék -> megtörténne", function() {deepEqual( Stem("megtörténnék"), "megtörténne");});
test("megtörtént -> megtört", function() {deepEqual( Stem("megtörtént"), "megtört");});
test("megtörténtnek -> megtörtént", function() {deepEqual( Stem("megtörténtnek"), "megtörtént");});
test("megtörténte -> megtörtént", function() {deepEqual( Stem("megtörténte"), "megtörtént");});
test("megtörténtéig -> megtörtént", function() {deepEqual( Stem("megtörténtéig"), "megtörtént");});
test("megtörténtek -> megtörtént", function() {deepEqual( Stem("megtörténtek"), "megtörtént");});
test("megtörténtének -> megtörtént", function() {deepEqual( Stem("megtörténtének"), "megtörtént");});
test("megtörténtére -> megtörtént", function() {deepEqual( Stem("megtörténtére"), "megtörtént");});
test("megtörténtét -> megtörtént", function() {deepEqual( Stem("megtörténtét"), "megtörtént");});
test("megtörténtétől -> megtörtént", function() {deepEqual( Stem("megtörténtétől"), "megtörtént");});
test("megtörténtével -> megtörtént", function() {deepEqual( Stem("megtörténtével"), "megtörtént");});
test("megtörténő -> megtörténő", function() {deepEqual( Stem("megtörténő"), "megtörténő");});
test("megtörölte -> megtörölt", function() {deepEqual( Stem("megtörölte"), "megtörölt");});
test("megtűrik -> megtűr", function() {deepEqual( Stem("megtűrik"), "megtűr");});
test("megtűrték -> megtűrte", function() {deepEqual( Stem("megtűrték"), "megtűrte");});
test("megugrott -> megugrot", function() {deepEqual( Stem("megugrott"), "megugrot");});
test("megugró -> megugró", function() {deepEqual( Stem("megugró"), "megugró");});
test("megunják -> megunja", function() {deepEqual( Stem("megunják"), "megunja");});
test("megunnánk -> megunna", function() {deepEqual( Stem("megunnánk"), "megunna");});
test("megunta -> megunt", function() {deepEqual( Stem("megunta"), "megunt");});
test("meguntam -> megunt", function() {deepEqual( Stem("meguntam"), "megunt");});
test("meguntuk -> megunt", function() {deepEqual( Stem("meguntuk"), "megunt");});
test("megunt -> megun", function() {deepEqual( Stem("megunt"), "megun");});
test("megunók -> megunó", function() {deepEqual( Stem("megunók"), "megunó");});
test("meguzsonnáztunk -> meguzsonnázt", function() {deepEqual( Stem("meguzsonnáztunk"), "meguzsonnázt");});
test("megvacsorázhattunk -> megvacsorázhatt", function() {deepEqual( Stem("megvacsorázhattunk"), "megvacsorázhatt");});
test("megvacsorázott -> megvacsorázot", function() {deepEqual( Stem("megvacsorázott"), "megvacsorázot");});
test("megvacsoráztak -> megvacsorázt", function() {deepEqual( Stem("megvacsoráztak"), "megvacsorázt");});
test("megvacsorázom -> megvacsoráz", function() {deepEqual( Stem("megvacsorázom"), "megvacsoráz");});
test("megvacsoráztunk -> megvacsorázt", function() {deepEqual( Stem("megvacsoráztunk"), "megvacsorázt");});
test("megvadult -> megvadul", function() {deepEqual( Stem("megvadult"), "megvadul");});
test("megvagy -> megvagy", function() {deepEqual( Stem("megvagy"), "megvagy");});
test("megvagyok -> megvagy", function() {deepEqual( Stem("megvagyok"), "megvagy");});
test("megvagyunk -> megvagy", function() {deepEqual( Stem("megvagyunk"), "megvagy");});
test("megvakarni -> megvakarn", function() {deepEqual( Stem("megvakarni"), "megvakarn");});
test("megvakarta -> megvakart", function() {deepEqual( Stem("megvakarta"), "megvakart");});
test("megvallassátok -> megvallassát", function() {deepEqual( Stem("megvallassátok"), "megvallassát");});
test("megvallatunk -> megvallat", function() {deepEqual( Stem("megvallatunk"), "megvallat");});
test("megvallom -> megvall", function() {deepEqual( Stem("megvallom"), "megvall");});
test("megvallotta -> megvallott", function() {deepEqual( Stem("megvallotta"), "megvallott");});
test("megvallották -> megvallotta", function() {deepEqual( Stem("megvallották"), "megvallotta");});
test("megvallva -> megvallv", function() {deepEqual( Stem("megvallva"), "megvallv");});
test("megvalósulhasson -> megvalósulhass", function() {deepEqual( Stem("megvalósulhasson"), "megvalósulhass");});
test("megvalósulhat -> megvalósulh", function() {deepEqual( Stem("megvalósulhat"), "megvalósulh");});
test("megvalósulhatna -> megvalósulhatn", function() {deepEqual( Stem("megvalósulhatna"), "megvalósulhatn");});
test("megvalósulhatott -> megvalósulhatot", function() {deepEqual( Stem("megvalósulhatott"), "megvalósulhatot");});
test("megvalósul -> megvalós", function() {deepEqual( Stem("megvalósul"), "megvalós");});
test("megvalósuljanak -> megvalósul", function() {deepEqual( Stem("megvalósuljanak"), "megvalósul");});
test("megvalósulnak -> megvalósul", function() {deepEqual( Stem("megvalósulnak"), "megvalósul");});
test("megvalósulni -> megvalósuln", function() {deepEqual( Stem("megvalósulni"), "megvalósuln");});
test("megvalósult -> megvalósul", function() {deepEqual( Stem("megvalósult"), "megvalósul");});
test("megvalósulás -> megvalósulás", function() {deepEqual( Stem("megvalósulás"), "megvalósulás");});
test("megvalósulása -> megvalósulás", function() {deepEqual( Stem("megvalósulása"), "megvalósulás");});
test("megvalósuláshoz -> megvalósulás", function() {deepEqual( Stem("megvalósuláshoz"), "megvalósulás");});
test("megvalósulásához -> megvalósulás", function() {deepEqual( Stem("megvalósulásához"), "megvalósulás");});
test("megvalósulásának -> megvalósulás", function() {deepEqual( Stem("megvalósulásának"), "megvalósulás");});
test("megvalósulását -> megvalósulás", function() {deepEqual( Stem("megvalósulását"), "megvalósulás");});
test("megvalósuló -> megvalósuló", function() {deepEqual( Stem("megvalósuló"), "megvalósuló");});
test("megvalósít -> megvalósí", function() {deepEqual( Stem("megvalósít"), "megvalósí");});
test("megvalósítani -> megvalósítan", function() {deepEqual( Stem("megvalósítani"), "megvalósítan");});
test("megvalósítaniuk -> megvalósítan", function() {deepEqual( Stem("megvalósítaniuk"), "megvalósítan");});
test("megvalósítanom -> megvalósítan", function() {deepEqual( Stem("megvalósítanom"), "megvalósítan");});
test("megvalósíthatatlan -> megvalósíthatatl", function() {deepEqual( Stem("megvalósíthatatlan"), "megvalósíthatatl");});
test("megvalósíthatja -> megvalósíthat", function() {deepEqual( Stem("megvalósíthatja"), "megvalósíthat");});
test("megvalósítható -> megvalósítható", function() {deepEqual( Stem("megvalósítható"), "megvalósítható");});
test("megvalósíthatók -> megvalósítható", function() {deepEqual( Stem("megvalósíthatók"), "megvalósítható");});
test("megvalósíthatóvá -> megvalósítható", function() {deepEqual( Stem("megvalósíthatóvá"), "megvalósítható");});
test("megvalósíthatósági -> megvalósíthatóság", function() {deepEqual( Stem("megvalósíthatósági"), "megvalósíthatóság");});
test("megvalósíthatóságának -> megvalósíthatóság", function() {deepEqual( Stem("megvalósíthatóságának"), "megvalósíthatóság");});
test("megvalósíthatóságát -> megvalósíthatóság", function() {deepEqual( Stem("megvalósíthatóságát"), "megvalósíthatóság");});
test("megvalósítja -> megvalósít", function() {deepEqual( Stem("megvalósítja"), "megvalósít");});
test("megvalósította -> megvalósított", function() {deepEqual( Stem("megvalósította"), "megvalósított");});
test("megvalósítsam -> megvalósíts", function() {deepEqual( Stem("megvalósítsam"), "megvalósíts");});
test("megvalósított -> megvalósítot", function() {deepEqual( Stem("megvalósított"), "megvalósítot");});
test("megvalósítva -> megvalósítv", function() {deepEqual( Stem("megvalósítva"), "megvalósítv");});
test("megvalósítás -> megvalósítás", function() {deepEqual( Stem("megvalósítás"), "megvalósítás");});
test("megvalósítása -> megvalósítás", function() {deepEqual( Stem("megvalósítása"), "megvalósítás");});
test("megvalósításait -> megvalósítás", function() {deepEqual( Stem("megvalósításait"), "megvalósítás");});
test("megvalósításakor -> megvalósítás", function() {deepEqual( Stem("megvalósításakor"), "megvalósítás");});
test("megvalósításhoz -> megvalósítás", function() {deepEqual( Stem("megvalósításhoz"), "megvalósítás");});
test("megvalósításukból -> megvalósítás", function() {deepEqual( Stem("megvalósításukból"), "megvalósítás");});
test("megvalósításába -> megvalósítás", function() {deepEqual( Stem("megvalósításába"), "megvalósítás");});
test("megvalósításában -> megvalósítás", function() {deepEqual( Stem("megvalósításában"), "megvalósítás");});
test("megvalósításához -> megvalósítás", function() {deepEqual( Stem("megvalósításához"), "megvalósítás");});
test("megvalósításának -> megvalósítás", function() {deepEqual( Stem("megvalósításának"), "megvalósítás");});
test("megvalósítására -> megvalósítás", function() {deepEqual( Stem("megvalósítására"), "megvalósítás");});
test("megvalósítását -> megvalósítás", function() {deepEqual( Stem("megvalósítását"), "megvalósítás");});
test("megvalósító -> megvalósító", function() {deepEqual( Stem("megvalósító"), "megvalósító");});
test("megvan -> megv", function() {deepEqual( Stem("megvan"), "megv");});
test("megvannak -> megvan", function() {deepEqual( Stem("megvannak"), "megvan");});
test("megvastagodna -> megvastagodn", function() {deepEqual( Stem("megvastagodna"), "megvastagodn");});
test("megvehető -> megvehető", function() {deepEqual( Stem("megvehető"), "megvehető");});
test("megvendégelem -> megvendégel", function() {deepEqual( Stem("megvendégelem"), "megvendégel");});
test("megvenni -> megvenn", function() {deepEqual( Stem("megvenni"), "megvenn");});
test("megvennék -> megvenne", function() {deepEqual( Stem("megvennék"), "megvenne");});
test("megveszem -> megvesz", function() {deepEqual( Stem("megveszem"), "megvesz");});
test("megveszik -> megvesz", function() {deepEqual( Stem("megveszik"), "megvesz");});
test("megvette -> megvett", function() {deepEqual( Stem("megvette"), "megvett");});
test("megvették -> megvette", function() {deepEqual( Stem("megvették"), "megvette");});
test("megvettem -> megvett", function() {deepEqual( Stem("megvettem"), "megvett");});
test("megvettünk -> megvett", function() {deepEqual( Stem("megvettünk"), "megvett");});
test("megveregette -> megveregett", function() {deepEqual( Stem("megveregette"), "megveregett");});
test("megverik -> megver", function() {deepEqual( Stem("megverik"), "megver");});
test("megverni -> megvern", function() {deepEqual( Stem("megverni"), "megvern");});
test("megverte -> megvert", function() {deepEqual( Stem("megverte"), "megvert");});
test("megverték -> megverte", function() {deepEqual( Stem("megverték"), "megverte");});
test("megvert -> megver", function() {deepEqual( Stem("megvert"), "megver");});
test("megvesztegessem -> megvesztegess", function() {deepEqual( Stem("megvesztegessem"), "megvesztegess");});
test("megvesztegetésnek -> megvesztegetés", function() {deepEqual( Stem("megvesztegetésnek"), "megvesztegetés");});
test("megvesztegetésre -> megvesztegetés", function() {deepEqual( Stem("megvesztegetésre"), "megvesztegetés");});
test("megvesztegetésével -> megvesztegetés", function() {deepEqual( Stem("megvesztegetésével"), "megvesztegetés");});
test("megvetendő -> megvetendő", function() {deepEqual( Stem("megvetendő"), "megvetendő");});
test("megvetett -> megvetet", function() {deepEqual( Stem("megvetett"), "megvetet");});
test("megvetette -> megvetett", function() {deepEqual( Stem("megvetette"), "megvetett");});
test("megvetem -> megvet", function() {deepEqual( Stem("megvetem"), "megvet");});
test("megvetették -> megvetette", function() {deepEqual( Stem("megvetették"), "megvetette");});
test("megvetettünk -> megvetett", function() {deepEqual( Stem("megvetettünk"), "megvetett");});
test("megveti -> megvet", function() {deepEqual( Stem("megveti"), "megvet");});
test("megvetne -> megvetn", function() {deepEqual( Stem("megvetne"), "megvetn");});
test("megvetnek -> megvet", function() {deepEqual( Stem("megvetnek"), "megvet");});
test("megvetni -> megvetn", function() {deepEqual( Stem("megvetni"), "megvetn");});
test("megvett -> megvet", function() {deepEqual( Stem("megvett"), "megvet");});
test("megvetés -> megvetés", function() {deepEqual( Stem("megvetés"), "megvetés");});
test("megvetésről -> megvetés", function() {deepEqual( Stem("megvetésről"), "megvetés");});
test("megvetéssel -> megvetés", function() {deepEqual( Stem("megvetéssel"), "megvetés");});
test("megvetést -> megvetés", function() {deepEqual( Stem("megvetést"), "megvetés");});
test("megvető -> megvető", function() {deepEqual( Stem("megvető"), "megvető");});
test("megvetően -> megvető", function() {deepEqual( Stem("megvetően"), "megvető");});
test("megvigasztaljam -> megvigasztalj", function() {deepEqual( Stem("megvigasztaljam"), "megvigasztalj");});
test("megvigasztalni -> megvigasztaln", function() {deepEqual( Stem("megvigasztalni"), "megvigasztaln");});
test("megvillant -> megvillan", function() {deepEqual( Stem("megvillant"), "megvillan");});
test("megvillogtatta -> megvillogtatt", function() {deepEqual( Stem("megvillogtatta"), "megvillogtatt");});
test("megvilágosodik -> megvilágosod", function() {deepEqual( Stem("megvilágosodik"), "megvilágosod");});
test("megvilágosodott -> megvilágosodot", function() {deepEqual( Stem("megvilágosodott"), "megvilágosodot");});
test("megvilágítani -> megvilágítan", function() {deepEqual( Stem("megvilágítani"), "megvilágítan");});
test("megvilágított -> megvilágítot", function() {deepEqual( Stem("megvilágított"), "megvilágítot");});
test("megvilágítás -> megvilágítás", function() {deepEqual( Stem("megvilágítás"), "megvilágítás");});
test("megvilágításba -> megvilágítás", function() {deepEqual( Stem("megvilágításba"), "megvilágítás");});
test("megvilágításnál -> megvilágítás", function() {deepEqual( Stem("megvilágításnál"), "megvilágítás");});
test("megvilágítással -> megvilágítás", function() {deepEqual( Stem("megvilágítással"), "megvilágítás");});
test("megviselt -> megvisel", function() {deepEqual( Stem("megviselt"), "megvisel");});
test("megviseltek -> megviselt", function() {deepEqual( Stem("megviseltek"), "megviselt");});
test("megviselte -> megviselt", function() {deepEqual( Stem("megviselte"), "megviselt");});
test("megviselték -> megviselte", function() {deepEqual( Stem("megviselték"), "megviselte");});
test("megviseltnek -> megviselt", function() {deepEqual( Stem("megviseltnek"), "megviselt");});
test("megvitassuk -> megvitass", function() {deepEqual( Stem("megvitassuk"), "megvitass");});
test("megvitatják -> megvitatja", function() {deepEqual( Stem("megvitatják"), "megvitatja");});
test("megvitatandó -> megvitatandó", function() {deepEqual( Stem("megvitatandó"), "megvitatandó");});
test("megvitatása -> megvitatás", function() {deepEqual( Stem("megvitatása"), "megvitatás");});
test("megvitatását -> megvitatás", function() {deepEqual( Stem("megvitatását"), "megvitatás");});
test("megvizsgálhassa -> megvizsgálhass", function() {deepEqual( Stem("megvizsgálhassa"), "megvizsgálhass");});
test("megvizsgálhatja -> megvizsgálhat", function() {deepEqual( Stem("megvizsgálhatja"), "megvizsgálhat");});
test("megvizsgálhatják -> megvizsgálhatja", function() {deepEqual( Stem("megvizsgálhatják"), "megvizsgálhatja");});
test("megvizsgálja -> megvizsgál", function() {deepEqual( Stem("megvizsgálja"), "megvizsgál");});
test("megvizsgáljuk -> megvizsgál", function() {deepEqual( Stem("megvizsgáljuk"), "megvizsgál");});
test("megvizsgálják -> megvizsgálja", function() {deepEqual( Stem("megvizsgálják"), "megvizsgálja");});
test("megvizsgálni -> megvizsgáln", function() {deepEqual( Stem("megvizsgálni"), "megvizsgáln");});
test("megvizsgálnia -> megvizsgáln", function() {deepEqual( Stem("megvizsgálnia"), "megvizsgáln");});
test("megvizsgálta -> megvizsgált", function() {deepEqual( Stem("megvizsgálta"), "megvizsgált");});
test("megvizsgáltam -> megvizsgált", function() {deepEqual( Stem("megvizsgáltam"), "megvizsgált");});
test("megvizsgáltuk -> megvizsgált", function() {deepEqual( Stem("megvizsgáltuk"), "megvizsgált");});
test("megvizsgálták -> megvizsgálta", function() {deepEqual( Stem("megvizsgálták"), "megvizsgálta");});
test("megvizsgálva -> megvizsgálv", function() {deepEqual( Stem("megvizsgálva"), "megvizsgálv");});
test("megvizsgálására -> megvizsgálás", function() {deepEqual( Stem("megvizsgálására"), "megvizsgálás");});
test("megvizsgálását -> megvizsgálás", function() {deepEqual( Stem("megvizsgálását"), "megvizsgálás");});
test("megvolnánk -> megvolna", function() {deepEqual( Stem("megvolnánk"), "megvolna");});
test("megvolt -> megvol", function() {deepEqual( Stem("megvolt"), "megvol");});
test("megvoltak -> megvolt", function() {deepEqual( Stem("megvoltak"), "megvolt");});
test("megvoltam -> megvolt", function() {deepEqual( Stem("megvoltam"), "megvolt");});
test("megvoltunk -> megvolt", function() {deepEqual( Stem("megvoltunk"), "megvolt");});
test("megvonja -> megvon", function() {deepEqual( Stem("megvonja"), "megvon");});
test("megvonták -> megvonta", function() {deepEqual( Stem("megvonták"), "megvonta");});
test("megvonni -> megvonn", function() {deepEqual( Stem("megvonni"), "megvonn");});
test("megvont -> megvon", function() {deepEqual( Stem("megvont"), "megvon");});
test("megvonásához -> megvonás", function() {deepEqual( Stem("megvonásához"), "megvonás");});
test("megvádolt -> megvádol", function() {deepEqual( Stem("megvádolt"), "megvádol");});
test("megvádolta -> megvádolt", function() {deepEqual( Stem("megvádolta"), "megvádolt");});
test("megválaszolandó -> megválaszolandó", function() {deepEqual( Stem("megválaszolandó"), "megválaszolandó");});
test("megválaszolatlan -> megválaszolatl", function() {deepEqual( Stem("megválaszolatlan"), "megválaszolatl");});
test("megválaszolhatatlan -> megválaszolhatatl", function() {deepEqual( Stem("megválaszolhatatlan"), "megválaszolhatatl");});
test("megválaszolhatatlanná -> megválaszolhatatlan", function() {deepEqual( Stem("megválaszolhatatlanná"), "megválaszolhatatlan");});
test("megválaszolja -> megválaszol", function() {deepEqual( Stem("megválaszolja"), "megválaszol");});
test("megválaszolni -> megválaszoln", function() {deepEqual( Stem("megválaszolni"), "megválaszoln");});
test("megválaszolása -> megválaszolás", function() {deepEqual( Stem("megválaszolása"), "megválaszolás");});
test("megválaszolását -> megválaszolás", function() {deepEqual( Stem("megválaszolását"), "megválaszolás");});
test("megválasztani -> megválasztan", function() {deepEqual( Stem("megválasztani"), "megválasztan");});
test("megválasztja -> megválaszt", function() {deepEqual( Stem("megválasztja"), "megválaszt");});
test("megválasztottuk -> megválasztott", function() {deepEqual( Stem("megválasztottuk"), "megválasztott");});
test("megválasztott -> megválasztot", function() {deepEqual( Stem("megválasztott"), "megválasztot");});
test("megválasztotta -> megválasztott", function() {deepEqual( Stem("megválasztotta"), "megválasztott");});
test("megválasztottak -> megválasztott", function() {deepEqual( Stem("megválasztottak"), "megválasztott");});
test("megválasztottnak -> megválasztott", function() {deepEqual( Stem("megválasztottnak"), "megválasztott");});
test("megválasztották -> megválasztotta", function() {deepEqual( Stem("megválasztották"), "megválasztotta");});
test("megválasztása -> megválasztás", function() {deepEqual( Stem("megválasztása"), "megválasztás");});
test("megválasztásakor -> megválasztás", function() {deepEqual( Stem("megválasztásakor"), "megválasztás");});
test("megválasztást -> megválasztás", function() {deepEqual( Stem("megválasztást"), "megválasztás");});
test("megválasztásába -> megválasztás", function() {deepEqual( Stem("megválasztásába"), "megválasztás");});
test("megválasztásához -> megválasztás", function() {deepEqual( Stem("megválasztásához"), "megválasztás");});
test("megválasztásának -> megválasztás", function() {deepEqual( Stem("megválasztásának"), "megválasztás");});
test("megválasztásánál -> megválasztás", function() {deepEqual( Stem("megválasztásánál"), "megválasztás");});
test("megválasztására -> megválasztás", function() {deepEqual( Stem("megválasztására"), "megválasztás");});
test("megválasztásáról -> megválasztás", function() {deepEqual( Stem("megválasztásáról"), "megválasztás");});
test("megválasztását -> megválasztás", function() {deepEqual( Stem("megválasztását"), "megválasztás");});
test("megválasztó -> megválasztó", function() {deepEqual( Stem("megválasztó"), "megválasztó");});
test("megválik -> megvál", function() {deepEqual( Stem("megválik"), "megvál");});
test("megválni -> megváln", function() {deepEqual( Stem("megválni"), "megváln");});
test("megválogatják -> megválogatja", function() {deepEqual( Stem("megválogatják"), "megválogatja");});
test("megválogatását -> megválogatás", function() {deepEqual( Stem("megválogatását"), "megválogatás");});
test("megválogatásáért -> megválogatás", function() {deepEqual( Stem("megválogatásáért"), "megválogatás");});
test("megvált -> megvál", function() {deepEqual( Stem("megvált"), "megvál");});
test("megváltak -> megvált", function() {deepEqual( Stem("megváltak"), "megvált");});
test("megváltani -> megváltan", function() {deepEqual( Stem("megváltani"), "megváltan");});
test("megváltották -> megváltotta", function() {deepEqual( Stem("megváltották"), "megváltotta");});
test("megváltozatni -> megváltozatn", function() {deepEqual( Stem("megváltozatni"), "megváltozatn");});
test("megváltozhat -> megváltozh", function() {deepEqual( Stem("megváltozhat"), "megváltozh");});
test("megváltozhattak -> megváltozhatt", function() {deepEqual( Stem("megváltozhattak"), "megváltozhatt");});
test("megváltozott -> megváltozot", function() {deepEqual( Stem("megváltozott"), "megváltozot");});
test("megváltozik -> megváltoz", function() {deepEqual( Stem("megváltozik"), "megváltoz");});
test("megváltozna -> megváltozn", function() {deepEqual( Stem("megváltozna"), "megváltozn");});
test("megváltoznak -> megváltoz", function() {deepEqual( Stem("megváltoznak"), "megváltoz");});
test("megváltozni -> megváltozn", function() {deepEqual( Stem("megváltozni"), "megváltozn");});
test("megváltozom -> megváltoz", function() {deepEqual( Stem("megváltozom"), "megváltoz");});
test("megváltoztak -> megváltozt", function() {deepEqual( Stem("megváltoztak"), "megváltozt");});
test("megváltoztam -> megváltozt", function() {deepEqual( Stem("megváltoztam"), "megváltozt");});
test("megváltoztathatatlan -> megváltoztathatatl", function() {deepEqual( Stem("megváltoztathatatlan"), "megváltoztathatatl");});
test("megváltoztathatatlannak -> megváltoztathatatlan", function() {deepEqual( Stem("megváltoztathatatlannak"), "megváltoztathatatlan");});
test("megváltoztathassák -> megváltoztathassa", function() {deepEqual( Stem("megváltoztathassák"), "megváltoztathassa");});
test("megváltoztathatja -> megváltoztathat", function() {deepEqual( Stem("megváltoztathatja"), "megváltoztathat");});
test("megváltoztathatjuk -> megváltoztathat", function() {deepEqual( Stem("megváltoztathatjuk"), "megváltoztathat");});
test("megváltoztathatják -> megváltoztathatja", function() {deepEqual( Stem("megváltoztathatják"), "megváltoztathatja");});
test("megváltoztatható -> megváltoztatható", function() {deepEqual( Stem("megváltoztatható"), "megváltoztatható");});
test("megváltoztathatóságáról -> megváltoztathatóság", function() {deepEqual( Stem("megváltoztathatóságáról"), "megváltoztathatóság");});
test("megváltoztassa -> megváltoztass", function() {deepEqual( Stem("megváltoztassa"), "megváltoztass");});
test("megváltoztasson -> megváltoztass", function() {deepEqual( Stem("megváltoztasson"), "megváltoztass");});
test("megváltoztatja -> megváltoztat", function() {deepEqual( Stem("megváltoztatja"), "megváltoztat");});
test("megváltoztatjuk -> megváltoztat", function() {deepEqual( Stem("megváltoztatjuk"), "megváltoztat");});
test("megváltoztatnak -> megváltoztat", function() {deepEqual( Stem("megváltoztatnak"), "megváltoztat");});
test("megváltoztatni -> megváltoztatn", function() {deepEqual( Stem("megváltoztatni"), "megváltoztatn");});
test("megváltoztatnia -> megváltoztatn", function() {deepEqual( Stem("megváltoztatnia"), "megváltoztatn");});
test("megváltoztatná -> megváltoztatna", function() {deepEqual( Stem("megváltoztatná"), "megváltoztatna");});
test("megváltoztatnák -> megváltoztatna", function() {deepEqual( Stem("megváltoztatnák"), "megváltoztatna");});
test("megváltoztatta -> megváltoztatt", function() {deepEqual( Stem("megváltoztatta"), "megváltoztatt");});
test("megváltoztattak -> megváltoztatt", function() {deepEqual( Stem("megváltoztattak"), "megváltoztatt");});
test("megváltoztattuk -> megváltoztatt", function() {deepEqual( Stem("megváltoztattuk"), "megváltoztatt");});
test("megváltoztatták -> megváltoztatta", function() {deepEqual( Stem("megváltoztatták"), "megváltoztatta");});
test("megváltoztatott -> megváltoztatot", function() {deepEqual( Stem("megváltoztatott"), "megváltoztatot");});
test("megváltoztatva -> megváltoztatv", function() {deepEqual( Stem("megváltoztatva"), "megváltoztatv");});
test("megváltoztatása -> megváltoztatás", function() {deepEqual( Stem("megváltoztatása"), "megváltoztatás");});
test("megváltoztatásakor -> megváltoztatás", function() {deepEqual( Stem("megváltoztatásakor"), "megváltoztatás");});
test("megváltoztatásához -> megváltoztatás", function() {deepEqual( Stem("megváltoztatásához"), "megváltoztatás");});
test("megváltoztatásának -> megváltoztatás", function() {deepEqual( Stem("megváltoztatásának"), "megváltoztatás");});
test("megváltoztatásánál -> megváltoztatás", function() {deepEqual( Stem("megváltoztatásánál"), "megváltoztatás");});
test("megváltoztatására -> megváltoztatás", function() {deepEqual( Stem("megváltoztatására"), "megváltoztatás");});
test("megváltoztatásáról -> megváltoztatás", function() {deepEqual( Stem("megváltoztatásáról"), "megváltoztatás");});
test("megváltoztatását -> megváltoztatás", function() {deepEqual( Stem("megváltoztatását"), "megváltoztatás");});
test("megváltoztál -> megváltoztál", function() {deepEqual( Stem("megváltoztál"), "megváltoztál");});
test("megváltozzanak -> megváltozz", function() {deepEqual( Stem("megváltozzanak"), "megváltozz");});
test("megváltozzon -> megváltozz", function() {deepEqual( Stem("megváltozzon"), "megváltozz");});
test("megváltozása -> megváltozás", function() {deepEqual( Stem("megváltozása"), "megváltozás");});
test("megváltozásának -> megváltozás", function() {deepEqual( Stem("megváltozásának"), "megváltozás");});
test("megváltozását -> megváltozás", function() {deepEqual( Stem("megváltozását"), "megváltozás");});
test("megváltsam -> megválts", function() {deepEqual( Stem("megváltsam"), "megválts");});
test("megváltsuk -> megválts", function() {deepEqual( Stem("megváltsuk"), "megválts");});
test("megváltás -> megváltás", function() {deepEqual( Stem("megváltás"), "megváltás");});
test("megváltásra -> megváltás", function() {deepEqual( Stem("megváltásra"), "megváltás");});
test("megváltást -> megváltás", function() {deepEqual( Stem("megváltást"), "megváltás");});
test("megváltására -> megváltás", function() {deepEqual( Stem("megváltására"), "megváltás");});
test("megváltásáról -> megváltás", function() {deepEqual( Stem("megváltásáról"), "megváltás");});
test("megváltását -> megváltás", function() {deepEqual( Stem("megváltását"), "megváltás");});
test("megváltásával -> megváltás", function() {deepEqual( Stem("megváltásával"), "megváltás");});
test("megváltót -> megváltó", function() {deepEqual( Stem("megváltót"), "megváltó");});
test("megválás -> megválás", function() {deepEqual( Stem("megválás"), "megválás");});
test("megváló -> megváló", function() {deepEqual( Stem("megváló"), "megváló");});
test("megvárakoztatni -> megvárakoztatn", function() {deepEqual( Stem("megvárakoztatni"), "megvárakoztatn");});
test("megvárja -> megvár", function() {deepEqual( Stem("megvárja"), "megvár");});
test("megvárjuk -> megvár", function() {deepEqual( Stem("megvárjuk"), "megvár");});
test("megvárják -> megvárja", function() {deepEqual( Stem("megvárják"), "megvárja");});
test("megvárni -> megvárn", function() {deepEqual( Stem("megvárni"), "megvárn");});
test("megvárnál -> megvár", function() {deepEqual( Stem("megvárnál"), "megvár");});
test("megvárta -> megvárt", function() {deepEqual( Stem("megvárta"), "megvárt");});
test("megvártak -> megvárt", function() {deepEqual( Stem("megvártak"), "megvárt");});
test("megvártam -> megvárt", function() {deepEqual( Stem("megvártam"), "megvárt");});
test("megvártuk -> megvárt", function() {deepEqual( Stem("megvártuk"), "megvárt");});
test("megvásárlási -> megvásárlás", function() {deepEqual( Stem("megvásárlási"), "megvásárlás");});
test("megvásárlása -> megvásárlás", function() {deepEqual( Stem("megvásárlása"), "megvásárlás");});
test("megvásárlásakor -> megvásárlás", function() {deepEqual( Stem("megvásárlásakor"), "megvásárlás");});
test("megvásárlásában -> megvásárlás", function() {deepEqual( Stem("megvásárlásában"), "megvásárlás");});
test("megvásárlásának -> megvásárlás", function() {deepEqual( Stem("megvásárlásának"), "megvásárlás");});
test("megvásárlására -> megvásárlás", function() {deepEqual( Stem("megvásárlására"), "megvásárlás");});
test("megvásárlásáról -> megvásárlás", function() {deepEqual( Stem("megvásárlásáról"), "megvásárlás");});
test("megvásárlását -> megvásárlás", function() {deepEqual( Stem("megvásárlását"), "megvásárlás");});
test("megvásárlásától -> megvásárlás", function() {deepEqual( Stem("megvásárlásától"), "megvásárlás");});
test("megvásárlásával -> megvásárlás", function() {deepEqual( Stem("megvásárlásával"), "megvásárlás");});
test("megvásárlásáért -> megvásárlás", function() {deepEqual( Stem("megvásárlásáért"), "megvásárlás");});
test("megvásárló -> megvásárló", function() {deepEqual( Stem("megvásárló"), "megvásárló");});
test("megvásárlója -> megvásárló", function() {deepEqual( Stem("megvásárlója"), "megvásárló");});
test("megvásárolható -> megvásárolható", function() {deepEqual( Stem("megvásárolható"), "megvásárolható");});
test("megvásárolhatók -> megvásárolható", function() {deepEqual( Stem("megvásárolhatók"), "megvásárolható");});
test("megvásárolt -> megvásárol", function() {deepEqual( Stem("megvásárolt"), "megvásárol");});
test("megvásárol -> megvásárol", function() {deepEqual( Stem("megvásárol"), "megvásárol");});
test("megvásárolja -> megvásárol", function() {deepEqual( Stem("megvásárolja"), "megvásárol");});
test("megvásárolni -> megvásároln", function() {deepEqual( Stem("megvásárolni"), "megvásároln");});
test("megvásárolniuk -> megvásároln", function() {deepEqual( Stem("megvásárolniuk"), "megvásároln");});
test("megvásárolta -> megvásárolt", function() {deepEqual( Stem("megvásárolta"), "megvásárolt");});
test("megvásárolták -> megvásárolta", function() {deepEqual( Stem("megvásárolták"), "megvásárolta");});
test("megvásároló -> megvásároló", function() {deepEqual( Stem("megvásároló"), "megvásároló");});
test("megvédelmezni -> megvédelmezn", function() {deepEqual( Stem("megvédelmezni"), "megvédelmezn");});
test("megvédheti -> megvédhet", function() {deepEqual( Stem("megvédheti"), "megvédhet");});
test("megvédhetné -> megvédhetn", function() {deepEqual( Stem("megvédhetné"), "megvédhetn");});
test("megvédenek -> megvéd", function() {deepEqual( Stem("megvédenek"), "megvéd");});
test("megvédeni -> megvéden", function() {deepEqual( Stem("megvédeni"), "megvéden");});
test("megvédenie -> megvéden", function() {deepEqual( Stem("megvédenie"), "megvéden");});
test("megvédi -> megvéd", function() {deepEqual( Stem("megvédi"), "megvéd");});
test("megvédjem -> megvédj", function() {deepEqual( Stem("megvédjem"), "megvédj");});
test("megvédjük -> megvéd", function() {deepEqual( Stem("megvédjük"), "megvéd");});
test("megvédte -> megvédt", function() {deepEqual( Stem("megvédte"), "megvédt");});
test("megvédésük -> megvédés", function() {deepEqual( Stem("megvédésük"), "megvédés");});
test("megvédő -> megvédő", function() {deepEqual( Stem("megvédő"), "megvédő");});
test("megvételre -> megvétel", function() {deepEqual( Stem("megvételre"), "megvétel");});
test("megvételében -> megvétel", function() {deepEqual( Stem("megvételében"), "megvétel");});
test("megvételére -> megvétel", function() {deepEqual( Stem("megvételére"), "megvétel");});
test("megvéti -> megvét", function() {deepEqual( Stem("megvéti"), "megvét");});
test("megvörösödött -> megvörösödöt", function() {deepEqual( Stem("megvörösödött"), "megvörösödöt");});
test("megyebálozzék -> megyebálozze", function() {deepEqual( Stem("megyebálozzék"), "megyebálozze");});
test("megyehatárokon -> megyehatár", function() {deepEqual( Stem("megyehatárokon"), "megyehatár");});
test("megyeházán -> megyeház", function() {deepEqual( Stem("megyeházán"), "megyeház");});
test("megyeszékhely -> megyeszékhely", function() {deepEqual( Stem("megyeszékhely"), "megyeszékhely");});
test("megyeszékhelyeken -> megyeszékhely", function() {deepEqual( Stem("megyeszékhelyeken"), "megyeszékhely");});
test("megyeszékhelyen -> megyeszékhely", function() {deepEqual( Stem("megyeszékhelyen"), "megyeszékhely");});
test("megyeszékhelyre -> megyeszékhely", function() {deepEqual( Stem("megyeszékhelyre"), "megyeszékhely");});
test("megye -> megy", function() {deepEqual( Stem("megye"), "megy");});
test("megyei -> megy", function() {deepEqual( Stem("megyei"), "megy");});
test("megyeiek -> megyei", function() {deepEqual( Stem("megyeiek"), "megyei");});
test("megyeihez -> megy", function() {deepEqual( Stem("megyeihez"), "megy");});
test("megyében -> megy", function() {deepEqual( Stem("megyében"), "megy");});
test("megyében -> megy", function() {deepEqual( Stem("megyében"), "megy");});
test("megyéből -> megy", function() {deepEqual( Stem("megyéből"), "megy");});
test("megyékben -> megye", function() {deepEqual( Stem("megyékben"), "megye");});
test("megyéknek -> megye", function() {deepEqual( Stem("megyéknek"), "megye");});
test("megyének -> megy", function() {deepEqual( Stem("megyének"), "megy");});
test("megyének -> megy", function() {deepEqual( Stem("megyének"), "megy");});
test("megyénkben -> megye", function() {deepEqual( Stem("megyénkben"), "megye");});
test("megyénként -> megy", function() {deepEqual( Stem("megyénként"), "megy");});
test("megyére -> megy", function() {deepEqual( Stem("megyére"), "megy");});
test("megzabolázza -> megzabolázz", function() {deepEqual( Stem("megzabolázza"), "megzabolázz");});
test("megzavarja -> megzavar", function() {deepEqual( Stem("megzavarja"), "megzavar");});
test("megzavarják -> megzavarja", function() {deepEqual( Stem("megzavarják"), "megzavarja");});
test("megzavart -> megzavar", function() {deepEqual( Stem("megzavart"), "megzavar");});
test("megzavarták -> megzavarta", function() {deepEqual( Stem("megzavarták"), "megzavarta");});
test("megzavarására -> megzavarás", function() {deepEqual( Stem("megzavarására"), "megzavarás");});
test("megzenésített -> megzenésítet", function() {deepEqual( Stem("megzenésített"), "megzenésítet");});
test("megzsarolása -> megzsarolás", function() {deepEqual( Stem("megzsarolása"), "megzsarolás");});
test("megzörgette -> megzörgett", function() {deepEqual( Stem("megzörgette"), "megzörgett");});
test("megágyazok -> megágyaz", function() {deepEqual( Stem("megágyazok"), "megágyaz");});
test("megáldja -> megáld", function() {deepEqual( Stem("megáldja"), "megáld");});
test("megáldva -> megáldv", function() {deepEqual( Stem("megáldva"), "megáldv");});
test("megállapodhat -> megállapodh", function() {deepEqual( Stem("megállapodhat"), "megállapodh");});
test("megállapodhatnak -> megállapodhat", function() {deepEqual( Stem("megállapodhatnak"), "megállapodhat");});
test("megállapodik -> megállapod", function() {deepEqual( Stem("megállapodik"), "megállapod");});
test("megállapodjon -> megállapodj", function() {deepEqual( Stem("megállapodjon"), "megállapodj");});
test("megállapodnak -> megállap", function() {deepEqual( Stem("megállapodnak"), "megállap");});
test("megállapodni -> megállapodn", function() {deepEqual( Stem("megállapodni"), "megállapodn");});
test("megállapodniuk -> megállapodn", function() {deepEqual( Stem("megállapodniuk"), "megállapodn");});
test("megállapodtunk -> megállapodt", function() {deepEqual( Stem("megállapodtunk"), "megállapodt");});
test("megállapodott -> megállapodot", function() {deepEqual( Stem("megállapodott"), "megállapodot");});
test("megállapodás-tervezetet -> megállapodás-tervezet", function() {deepEqual( Stem("megállapodás-tervezetet"), "megállapodás-tervezet");});
test("megállapodási -> megállapodás", function() {deepEqual( Stem("megállapodási"), "megállapodás");});
test("megállapodása -> megállapodás", function() {deepEqual( Stem("megállapodása"), "megállapodás");});
test("megállapodás -> megállapodás", function() {deepEqual( Stem("megállapodás"), "megállapodás");});
test("megállapodásban -> megállapodás", function() {deepEqual( Stem("megállapodásban"), "megállapodás");});
test("megállapodáshoz -> megállapodás", function() {deepEqual( Stem("megállapodáshoz"), "megállapodás");});
test("megállapodásig -> megállapodás", function() {deepEqual( Stem("megállapodásig"), "megállapodás");});
test("megállapodásként -> megállapodás", function() {deepEqual( Stem("megállapodásként"), "megállapodás");});
test("megállapodásnak -> megállapodás", function() {deepEqual( Stem("megállapodásnak"), "megállapodás");});
test("megállapodásnál -> megállapodás", function() {deepEqual( Stem("megállapodásnál"), "megállapodás");});
test("megállapodások -> megállapodás", function() {deepEqual( Stem("megállapodások"), "megállapodás");});
test("megállapodásokat -> megállapodás", function() {deepEqual( Stem("megállapodásokat"), "megállapodás");});
test("megállapodásokhoz -> megállapodás", function() {deepEqual( Stem("megállapodásokhoz"), "megállapodás");});
test("megállapodáson -> megállapodás", function() {deepEqual( Stem("megállapodáson"), "megállapodás");});
test("megállapodásra -> megállapodás", function() {deepEqual( Stem("megállapodásra"), "megállapodás");});
test("megállapodással -> megállapodás", function() {deepEqual( Stem("megállapodással"), "megállapodás");});
test("megállapodássá -> megállapodás", function() {deepEqual( Stem("megállapodássá"), "megállapodás");});
test("megállapodást -> megállapodás", function() {deepEqual( Stem("megállapodást"), "megállapodás");});
test("megállapodásukat -> megállapodás", function() {deepEqual( Stem("megállapodásukat"), "megállapodás");});
test("megállapodásunk -> megállapodás", function() {deepEqual( Stem("megállapodásunk"), "megállapodás");});
test("megállapodásán -> megállapodás", function() {deepEqual( Stem("megállapodásán"), "megállapodás");});
test("megállapodásának -> megállapodás", function() {deepEqual( Stem("megállapodásának"), "megállapodás");});
test("megállapodására -> megállapodás", function() {deepEqual( Stem("megállapodására"), "megállapodás");});
test("megállapodásától -> megállapodás", function() {deepEqual( Stem("megállapodásától"), "megállapodás");});
test("megállapodásét -> megállapodás", function() {deepEqual( Stem("megállapodásét"), "megállapodás");});
test("megállapíható -> megállapíható", function() {deepEqual( Stem("megállapíható"), "megállapíható");});
test("megállapíthatatlan -> megállapíthatatl", function() {deepEqual( Stem("megállapíthatatlan"), "megállapíthatatl");});
test("megállapíthat -> megállapíth", function() {deepEqual( Stem("megállapíthat"), "megállapíth");});
test("megállapíthatja -> megállapíthat", function() {deepEqual( Stem("megállapíthatja"), "megállapíthat");});
test("megállapíthatjuk -> megállapíthat", function() {deepEqual( Stem("megállapíthatjuk"), "megállapíthat");});
test("megállapítható -> megállapítható", function() {deepEqual( Stem("megállapítható"), "megállapítható");});
test("megállapíthatók -> megállapítható", function() {deepEqual( Stem("megállapíthatók"), "megállapítható");});
test("megállapíthatónak -> megállapítható", function() {deepEqual( Stem("megállapíthatónak"), "megállapítható");});
test("megállapíthatóság -> megállapíthatóság", function() {deepEqual( Stem("megállapíthatóság"), "megállapíthatóság");});
test("megállapított -> megállapítot", function() {deepEqual( Stem("megállapított"), "megállapítot");});
test("megállapít -> megállapí", function() {deepEqual( Stem("megállapít"), "megállapí");});
test("megállapítani -> megállapítan", function() {deepEqual( Stem("megállapítani"), "megállapítan");});
test("megállapítania -> megállapítan", function() {deepEqual( Stem("megállapítania"), "megállapítan");});
test("megállapítja -> megállapít", function() {deepEqual( Stem("megállapítja"), "megállapít");});
test("megállapítják -> megállapítja", function() {deepEqual( Stem("megállapítják"), "megállapítja");});
test("megállapította -> megállapított", function() {deepEqual( Stem("megállapította"), "megállapított");});
test("megállapítottakkal -> megállapított", function() {deepEqual( Stem("megállapítottakkal"), "megállapított");});
test("megállapítottam -> megállapított", function() {deepEqual( Stem("megállapítottam"), "megállapított");});
test("megállapítottuk -> megállapított", function() {deepEqual( Stem("megállapítottuk"), "megállapított");});
test("megállapították -> megállapította", function() {deepEqual( Stem("megállapították"), "megállapította");});
test("megállapítsa -> megállapíts", function() {deepEqual( Stem("megállapítsa"), "megállapíts");});
test("megállapítsam -> megállapíts", function() {deepEqual( Stem("megállapítsam"), "megállapíts");});
test("megállapíttatta -> megállapíttatt", function() {deepEqual( Stem("megállapíttatta"), "megállapíttatt");});
test("megállapítva -> megállapítv", function() {deepEqual( Stem("megállapítva"), "megállapítv");});
test("megállapítás -> megállapítás", function() {deepEqual( Stem("megállapítás"), "megállapítás");});
test("megállapítása -> megállapítás", function() {deepEqual( Stem("megállapítása"), "megállapítás");});
test("megállapításai -> megállapítás", function() {deepEqual( Stem("megállapításai"), "megállapítás");});
test("megállapításaira -> megállapítás", function() {deepEqual( Stem("megállapításaira"), "megállapítás");});
test("megállapításairól -> megállapítás", function() {deepEqual( Stem("megállapításairól"), "megállapítás");});
test("megállapításait -> megállapítás", function() {deepEqual( Stem("megállapításait"), "megállapítás");});
test("megállapításakor -> megállapítás", function() {deepEqual( Stem("megállapításakor"), "megállapítás");});
test("megállapításban -> megállapítás", function() {deepEqual( Stem("megállapításban"), "megállapítás");});
test("megállapításnál -> megállapítás", function() {deepEqual( Stem("megállapításnál"), "megállapítás");});
test("megállapítások -> megállapítás", function() {deepEqual( Stem("megállapítások"), "megállapítás");});
test("megállapításokban -> megállapítás", function() {deepEqual( Stem("megállapításokban"), "megállapítás");});
test("megállapításokkal -> megállapítás", function() {deepEqual( Stem("megállapításokkal"), "megállapítás");});
test("megállapításra -> megállapítás", function() {deepEqual( Stem("megállapításra"), "megállapítás");});
test("megállapítást -> megállapítás", function() {deepEqual( Stem("megállapítást"), "megállapítás");});
test("megállapításában -> megállapítás", function() {deepEqual( Stem("megállapításában"), "megállapítás");});
test("megállapításához -> megállapítás", function() {deepEqual( Stem("megállapításához"), "megállapítás");});
test("megállapításáig -> megállapítás", function() {deepEqual( Stem("megállapításáig"), "megállapítás");});
test("megállapításának -> megállapítás", function() {deepEqual( Stem("megállapításának"), "megállapítás");});
test("megállapításánál -> megállapítás", function() {deepEqual( Stem("megállapításánál"), "megállapítás");});
test("megállapítására -> megállapítás", function() {deepEqual( Stem("megállapítására"), "megállapítás");});
test("megállapításáról -> megállapítás", function() {deepEqual( Stem("megállapításáról"), "megállapítás");});
test("megállapítását -> megállapítás", function() {deepEqual( Stem("megállapítását"), "megállapítás");});
test("megállapításával -> megállapítás", function() {deepEqual( Stem("megállapításával"), "megállapítás");});
test("megállapításáért -> megállapítás", function() {deepEqual( Stem("megállapításáért"), "megállapítás");});
test("megállapító -> megállapító", function() {deepEqual( Stem("megállapító"), "megállapító");});
test("megállhat -> megállh", function() {deepEqual( Stem("megállhat"), "megállh");});
test("megáll -> megáll", function() {deepEqual( Stem("megáll"), "megáll");});
test("megállj -> megállj", function() {deepEqual( Stem("megállj"), "megállj");});
test("megállja -> megáll", function() {deepEqual( Stem("megállja"), "megáll");});
test("megálljam -> megállj", function() {deepEqual( Stem("megálljam"), "megállj");});
test("megállják -> megállja", function() {deepEqual( Stem("megállják"), "megállja");});
test("megállni -> megálln", function() {deepEqual( Stem("megállni"), "megálln");});
test("megállnák -> megállna", function() {deepEqual( Stem("megállnák"), "megállna");});
test("megállnám -> megállna", function() {deepEqual( Stem("megállnám"), "megállna");});
test("megállom -> megáll", function() {deepEqual( Stem("megállom"), "megáll");});
test("megálltak -> megállt", function() {deepEqual( Stem("megálltak"), "megállt");});
test("megálltam -> megállt", function() {deepEqual( Stem("megálltam"), "megállt");});
test("megálltunk -> megállt", function() {deepEqual( Stem("megálltunk"), "megállt");});
test("megállt -> megáll", function() {deepEqual( Stem("megállt"), "megáll");});
test("megállva -> megállv", function() {deepEqual( Stem("megállva"), "megállv");});
test("megállás -> megállás", function() {deepEqual( Stem("megállás"), "megállás");});
test("megállásnál -> megállás", function() {deepEqual( Stem("megállásnál"), "megállás");});
test("megállásra -> megállás", function() {deepEqual( Stem("megállásra"), "megállás");});
test("megállíthatatlannak -> megállíthatatlan", function() {deepEqual( Stem("megállíthatatlannak"), "megállíthatatlan");});
test("megállíthatatlanul -> megállíthatatlan", function() {deepEqual( Stem("megállíthatatlanul"), "megállíthatatlan");});
test("megállíthatják -> megállíthatja", function() {deepEqual( Stem("megállíthatják"), "megállíthatja");});
test("megállít -> megállí", function() {deepEqual( Stem("megállít"), "megállí");});
test("megállítani -> megállítan", function() {deepEqual( Stem("megállítani"), "megállítan");});
test("megállítanám -> megállítana", function() {deepEqual( Stem("megállítanám"), "megállítana");});
test("megállítod -> megállít", function() {deepEqual( Stem("megállítod"), "megállít");});
test("megállított -> megállítot", function() {deepEqual( Stem("megállított"), "megállítot");});
test("megállította -> megállított", function() {deepEqual( Stem("megállította"), "megállított");});
test("megállítottam -> megállított", function() {deepEqual( Stem("megállítottam"), "megállított");});
test("megállítottuk -> megállított", function() {deepEqual( Stem("megállítottuk"), "megállított");});
test("megállították -> megállította", function() {deepEqual( Stem("megállították"), "megállította");});
test("megállítsa -> megállíts", function() {deepEqual( Stem("megállítsa"), "megállíts");});
test("megállítsanak -> megállíts", function() {deepEqual( Stem("megállítsanak"), "megállíts");});
test("megállítása -> megállítás", function() {deepEqual( Stem("megállítása"), "megállítás");});
test("megálló -> megálló", function() {deepEqual( Stem("megálló"), "megálló");});
test("megállóan -> megálló", function() {deepEqual( Stem("megállóan"), "megálló");});
test("megállóba -> megálló", function() {deepEqual( Stem("megállóba"), "megálló");});
test("megállóban -> megálló", function() {deepEqual( Stem("megállóban"), "megálló");});
test("megállóhely -> megállóhely", function() {deepEqual( Stem("megállóhely"), "megállóhely");});
test("megállóhelyünk -> megállóhely", function() {deepEqual( Stem("megállóhelyünk"), "megállóhely");});
test("megállóhelyünkre -> megállóhely", function() {deepEqual( Stem("megállóhelyünkre"), "megállóhely");});
test("megállója -> megálló", function() {deepEqual( Stem("megállója"), "megálló");});
test("megállójánál -> megálló", function() {deepEqual( Stem("megállójánál"), "megálló");});
test("megállót -> megálló", function() {deepEqual( Stem("megállót"), "megálló");});
test("megárt -> megár", function() {deepEqual( Stem("megárt"), "megár");});
test("megátalkodott -> megátalkodot", function() {deepEqual( Stem("megátalkodott"), "megátalkodot");});
test("megáztassa -> megáztass", function() {deepEqual( Stem("megáztassa"), "megáztass");});
test("megáztunk -> megázt", function() {deepEqual( Stem("megáztunk"), "megázt");});
test("megázzanak -> megázz", function() {deepEqual( Stem("megázzanak"), "megázz");});
test("megégetett -> megégetet", function() {deepEqual( Stem("megégetett"), "megégetet");});
test("megégette -> megégett", function() {deepEqual( Stem("megégette"), "megégett");});
test("megégjek -> megégj", function() {deepEqual( Stem("megégjek"), "megégj");});
test("megégetheti -> megégethet", function() {deepEqual( Stem("megégetheti"), "megégethet");});
test("megégett -> megéget", function() {deepEqual( Stem("megégett"), "megéget");});
test("megéheztek -> megéhezt", function() {deepEqual( Stem("megéheztek"), "megéhezt");});
test("megéheztünk -> megéhezt", function() {deepEqual( Stem("megéheztünk"), "megéhezt");});
test("megékeztünk -> megékezt", function() {deepEqual( Stem("megékeztünk"), "megékezt");});
test("megélhessen -> megélhess", function() {deepEqual( Stem("megélhessen"), "megélhess");});
test("megélhessenek -> megélhess", function() {deepEqual( Stem("megélhessenek"), "megélhess");});
test("megélhet -> megélh", function() {deepEqual( Stem("megélhet"), "megélh");});
test("megélhetés -> megélhetés", function() {deepEqual( Stem("megélhetés"), "megélhetés");});
test("megélhetése -> megélhetés", function() {deepEqual( Stem("megélhetése"), "megélhetés");});
test("megélhetésem -> megélhetés", function() {deepEqual( Stem("megélhetésem"), "megélhetés");});
test("megélhetéshez -> megélhetés", function() {deepEqual( Stem("megélhetéshez"), "megélhetés");});
test("megélhetést -> megélhetés", function() {deepEqual( Stem("megélhetést"), "megélhetés");});
test("megélhetésük -> megélhetés", function() {deepEqual( Stem("megélhetésük"), "megélhetés");});
test("megélhetési -> megélhetés", function() {deepEqual( Stem("megélhetési"), "megélhetés");});
test("megél -> megél", function() {deepEqual( Stem("megél"), "megél");});
test("megéljek -> megélj", function() {deepEqual( Stem("megéljek"), "megélj");});
test("megéljen -> megélj", function() {deepEqual( Stem("megéljen"), "megélj");});
test("megélni -> megéln", function() {deepEqual( Stem("megélni"), "megéln");});
test("megéltek -> megélt", function() {deepEqual( Stem("megéltek"), "megélt");});
test("megéltem -> megélt", function() {deepEqual( Stem("megéltem"), "megélt");});
test("megélünk -> megél", function() {deepEqual( Stem("megélünk"), "megél");});
test("megélnék -> megélne", function() {deepEqual( Stem("megélnék"), "megélne");});
test("megélt -> megél", function() {deepEqual( Stem("megélt"), "megél");});
test("megéltetésének -> megéltetés", function() {deepEqual( Stem("megéltetésének"), "megéltetés");});
test("megélője -> megélő", function() {deepEqual( Stem("megélője"), "megélő");});
test("megépíteni -> megépíten", function() {deepEqual( Stem("megépíteni"), "megépíten");});
test("megépítette -> megépített", function() {deepEqual( Stem("megépítette"), "megépített");});
test("megépítették -> megépítette", function() {deepEqual( Stem("megépítették"), "megépítette");});
test("megépíti -> megépít", function() {deepEqual( Stem("megépíti"), "megépít");});
test("megépítés -> megépítés", function() {deepEqual( Stem("megépítés"), "megépítés");});
test("megépítésében -> megépítés", function() {deepEqual( Stem("megépítésében"), "megépítés");});
test("megépítéséhez -> megépítés", function() {deepEqual( Stem("megépítéséhez"), "megépítés");});
test("megépítését -> megépítés", function() {deepEqual( Stem("megépítését"), "megépítés");});
test("megépítésével -> megépítés", function() {deepEqual( Stem("megépítésével"), "megépítés");});
test("megépül -> megép", function() {deepEqual( Stem("megépül"), "megép");});
test("megépülni -> megépüln", function() {deepEqual( Stem("megépülni"), "megépüln");});
test("megépült -> megépül", function() {deepEqual( Stem("megépült"), "megépül");});
test("megérdeklődöm -> megérdeklődö", function() {deepEqual( Stem("megérdeklődöm"), "megérdeklődö");});
test("megérdemelt -> megérdemel", function() {deepEqual( Stem("megérdemelt"), "megérdemel");});
test("megérdemelem -> megérdemel", function() {deepEqual( Stem("megérdemelem"), "megérdemel");});
test("megérdemeljük -> megérdemel", function() {deepEqual( Stem("megérdemeljük"), "megérdemel");});
test("megérdemelne -> megérdemeln", function() {deepEqual( Stem("megérdemelne"), "megérdemeln");});
test("megérdemelném -> megérdemelne", function() {deepEqual( Stem("megérdemelném"), "megérdemelne");});
test("megérdemelte -> megérdemelt", function() {deepEqual( Stem("megérdemelte"), "megérdemelt");});
test("megérdemelték -> megérdemelte", function() {deepEqual( Stem("megérdemelték"), "megérdemelte");});
test("megérdemeltük -> megérdemelt", function() {deepEqual( Stem("megérdemeltük"), "megérdemelt");});
test("megérdemli -> megérdeml", function() {deepEqual( Stem("megérdemli"), "megérdeml");});
test("megérdemlik -> megérdeml", function() {deepEqual( Stem("megérdemlik"), "megérdeml");});
test("megérett -> megéret", function() {deepEqual( Stem("megérett"), "megéret");});
test("megérezte -> megérezt", function() {deepEqual( Stem("megérezte"), "megérezt");});
test("megéreztem -> megérezt", function() {deepEqual( Stem("megéreztem"), "megérezt");});
test("megérezték -> megérezte", function() {deepEqual( Stem("megérezték"), "megérezte");});
test("megéreztük -> megérezt", function() {deepEqual( Stem("megéreztük"), "megérezt");});
test("megérezze -> megérezz", function() {deepEqual( Stem("megérezze"), "megérezz");});
test("megér -> megér", function() {deepEqual( Stem("megér"), "megér");});
test("megéri -> megér", function() {deepEqual( Stem("megéri"), "megér");});
test("megérte -> megért", function() {deepEqual( Stem("megérte"), "megért");});
test("megérik -> megér", function() {deepEqual( Stem("megérik"), "megér");});
test("megérje -> megér", function() {deepEqual( Stem("megérje"), "megér");});
test("megérintse -> megérints", function() {deepEqual( Stem("megérintse"), "megérints");});
test("megérintik -> megérint", function() {deepEqual( Stem("megérintik"), "megérint");});
test("megérinti -> megérint", function() {deepEqual( Stem("megérinti"), "megérint");});
test("megérinteni -> megérinten", function() {deepEqual( Stem("megérinteni"), "megérinten");});
test("megérintenie -> megérinten", function() {deepEqual( Stem("megérintenie"), "megérinten");});
test("megérintette -> megérintett", function() {deepEqual( Stem("megérintette"), "megérintett");});
test("megérintettem -> megérintett", function() {deepEqual( Stem("megérintettem"), "megérintett");});
test("megérintették -> megérintette", function() {deepEqual( Stem("megérintették"), "megérintette");});
test("megérinthettem -> megérinthett", function() {deepEqual( Stem("megérinthettem"), "megérinthett");});
test("megérkezett -> megérkezet", function() {deepEqual( Stem("megérkezett"), "megérkezet");});
test("megérkezettnek -> megérkezett", function() {deepEqual( Stem("megérkezettnek"), "megérkezett");});
test("megérkezik -> megérkez", function() {deepEqual( Stem("megérkezik"), "megérkez");});
test("megérkezem -> megérkez", function() {deepEqual( Stem("megérkezem"), "megérkez");});
test("megérkeznek -> megérkez", function() {deepEqual( Stem("megérkeznek"), "megérkez");});
test("megérkezni -> megérkezn", function() {deepEqual( Stem("megérkezni"), "megérkezn");});
test("megérkeztek -> megérkezt", function() {deepEqual( Stem("megérkeztek"), "megérkezt");});
test("megérkeztem -> megérkezt", function() {deepEqual( Stem("megérkeztem"), "megérkezt");});
test("megérkezzen -> megérkezz", function() {deepEqual( Stem("megérkezzen"), "megérkezz");});
test("megérkezzünk -> megérkezz", function() {deepEqual( Stem("megérkezzünk"), "megérkezz");});
test("megérkezünk -> megérkez", function() {deepEqual( Stem("megérkezünk"), "megérkez");});
test("megérkezés -> megérkezés", function() {deepEqual( Stem("megérkezés"), "megérkezés");});
test("megérkezésig -> megérkezés", function() {deepEqual( Stem("megérkezésig"), "megérkezés");});
test("megérkezéskor -> megérkezés", function() {deepEqual( Stem("megérkezéskor"), "megérkezés");});
test("megérkezést -> megérkezés", function() {deepEqual( Stem("megérkezést"), "megérkezés");});
test("megérkezéséig -> megérkezés", function() {deepEqual( Stem("megérkezéséig"), "megérkezés");});
test("megérkezésének -> megérkezés", function() {deepEqual( Stem("megérkezésének"), "megérkezés");});
test("megérkezésétől -> megérkezés", function() {deepEqual( Stem("megérkezésétől"), "megérkezés");});
test("megérkezésünk -> megérkezés", function() {deepEqual( Stem("megérkezésünk"), "megérkezés");});
test("megérkezésünket -> megérkezés", function() {deepEqual( Stem("megérkezésünket"), "megérkezés");});
test("megérkezésünkkor -> megérkezés", function() {deepEqual( Stem("megérkezésünkkor"), "megérkezés");});
test("megérném -> megérne", function() {deepEqual( Stem("megérném"), "megérne");});
test("megért -> meg", function() {deepEqual( Stem("megért"), "meg");});
test("megértem -> megért", function() {deepEqual( Stem("megértem"), "megért");});
test("megértene -> megérten", function() {deepEqual( Stem("megértene"), "megérten");});
test("megértenem -> megérten", function() {deepEqual( Stem("megértenem"), "megérten");});
test("megérteni -> megérten", function() {deepEqual( Stem("megérteni"), "megérten");});
test("megértené -> megérten", function() {deepEqual( Stem("megértené"), "megérten");});
test("megérteném -> megértene", function() {deepEqual( Stem("megérteném"), "megértene");});
test("megértetem -> megértet", function() {deepEqual( Stem("megértetem"), "megértet");});
test("megérteti -> megértet", function() {deepEqual( Stem("megérteti"), "megértet");});
test("megértetni -> megértetn", function() {deepEqual( Stem("megértetni"), "megértetn");});
test("megérthessük -> megérthess", function() {deepEqual( Stem("megérthessük"), "megérthess");});
test("megértettem -> megértett", function() {deepEqual( Stem("megértettem"), "megértett");});
test("megértették -> megértette", function() {deepEqual( Stem("megértették"), "megértette");});
test("megértettük -> megértett", function() {deepEqual( Stem("megértettük"), "megértett");});
test("megértettünk -> megértett", function() {deepEqual( Stem("megértettünk"), "megértett");});
test("megértik -> megért", function() {deepEqual( Stem("megértik"), "megért");});
test("megértitek -> megért", function() {deepEqual( Stem("megértitek"), "megért");});
test("megértjük -> megért", function() {deepEqual( Stem("megértjük"), "megért");});
test("megértse -> megérts", function() {deepEqual( Stem("megértse"), "megérts");});
test("megértsem -> megérts", function() {deepEqual( Stem("megértsem"), "megérts");});
test("megértsék -> megértse", function() {deepEqual( Stem("megértsék"), "megértse");});
test("megértsük -> megérts", function() {deepEqual( Stem("megértsük"), "megérts");});
test("megértés -> megértés", function() {deepEqual( Stem("megértés"), "megértés");});
test("megértésben -> megértés", function() {deepEqual( Stem("megértésben"), "megértés");});
test("megértése -> megértés", function() {deepEqual( Stem("megértése"), "megértés");});
test("megértésre -> megértés", function() {deepEqual( Stem("megértésre"), "megértés");});
test("megértéssel -> megértés", function() {deepEqual( Stem("megértéssel"), "megértés");});
test("megértést -> megértés", function() {deepEqual( Stem("megértést"), "megértés");});
test("megértésében -> megértés", function() {deepEqual( Stem("megértésében"), "megértés");});
test("megértéséhez -> megértés", function() {deepEqual( Stem("megértéséhez"), "megértés");});
test("megértésért -> megértés", function() {deepEqual( Stem("megértésért"), "megértés");});
test("megértését -> megértés", function() {deepEqual( Stem("megértését"), "megértés");});
test("megértéséért -> megértés", function() {deepEqual( Stem("megértéséért"), "megértés");});
test("megértő -> megértő", function() {deepEqual( Stem("megértő"), "megértő");});
test("megértőbb -> megértőbb", function() {deepEqual( Stem("megértőbb"), "megértőbb");});
test("mezői -> mező", function() {deepEqual( Stem("mezői"), "mező");});
test("mezőkövesdi -> mezőkövesd", function() {deepEqual( Stem("mezőkövesdi"), "mezőkövesd");});
test("mezőkövesdi -> mezőkövesd", function() {deepEqual( Stem("mezőkövesdi"), "mezőkövesd");});
test("mezőny -> mezőny", function() {deepEqual( Stem("mezőny"), "mezőny");});
test("mezőnyben -> mezőny", function() {deepEqual( Stem("mezőnyben"), "mezőny");});
test("mezőnyből -> mezőny", function() {deepEqual( Stem("mezőnyből"), "mezőny");});
test("mezőnyt -> mezőny", function() {deepEqual( Stem("mezőnyt"), "mezőny");});
test("mezőnyében -> mezőny", function() {deepEqual( Stem("mezőnyében"), "mezőny");});
test("mezőnyének -> mezőny", function() {deepEqual( Stem("mezőnyének"), "mezőny");});
test("mezőnyénél -> mezőny", function() {deepEqual( Stem("mezőnyénél"), "mezőny");});
test("mgszüntetésére -> mgszüntetés", function() {deepEqual( Stem("mgszüntetésére"), "mgszüntetés");});
test("mialatt -> mialat", function() {deepEqual( Stem("mialatt"), "mialat");});
test("miatt -> miat", function() {deepEqual( Stem("miatt"), "miat");});
test("miatta -> miatt", function() {deepEqual( Stem("miatta"), "miatt");});
test("miattam -> miatt", function() {deepEqual( Stem("miattam"), "miatt");});
test("miattuk -> miatt", function() {deepEqual( Stem("miattuk"), "miatt");});
test("miatti -> miatt", function() {deepEqual( Stem("miatti"), "miatt");});
test("mibe -> mi", function() {deepEqual( Stem("mibe"), "mi");});
test("mi -> mi", function() {deepEqual( Stem("mi"), "mi");});
test("miből -> mi", function() {deepEqual( Stem("miből"), "mi");});
test("mihez -> mi", function() {deepEqual( Stem("mihez"), "mi");});
test("mik -> mi", function() {deepEqual( Stem("mik"), "mi");});
test("miket -> mi", function() {deepEqual( Stem("miket"), "mi");});
test("mikor -> mi", function() {deepEqual( Stem("mikor"), "mi");});
test("mikorra -> mikor", function() {deepEqual( Stem("mikorra"), "mikor");});
test("mikortól -> mikor", function() {deepEqual( Stem("mikortól"), "mikor");});
test("min -> mi", function() {deepEqual( Stem("min"), "mi");});
test("minek -> mi", function() {deepEqual( Stem("minek"), "mi");});
test("miről -> mi", function() {deepEqual( Stem("miről"), "mi");});
test("mire -> mi", function() {deepEqual( Stem("mire"), "mi");});
test("mit -> mi", function() {deepEqual( Stem("mit"), "mi");});
test("mitől -> mi", function() {deepEqual( Stem("mitől"), "mi");});
test("mivel -> mi", function() {deepEqual( Stem("mivel"), "mi");});
test("miért -> mi", function() {deepEqual( Stem("miért"), "mi");});
test("mibenlétére -> mibenlét", function() {deepEqual( Stem("mibenlétére"), "mibenlét");});
test("michigani -> michigan", function() {deepEqual( Stem("michigani"), "michigan");});
test("micro-switch -> micro-switch", function() {deepEqual( Stem("micro-switch"), "micro-switch");});
test("microsoft -> microsof", function() {deepEqual( Stem("microsoft"), "microsof");});
test("micsodák -> micsoda", function() {deepEqual( Stem("micsodák"), "micsoda");});
test("micsodának -> micsod", function() {deepEqual( Stem("micsodának"), "micsod");});
test("micsodát -> micsod", function() {deepEqual( Stem("micsodát"), "micsod");});
test("midibusz -> midibusz", function() {deepEqual( Stem("midibusz"), "midibusz");});
test("midibuszainál -> midibusz", function() {deepEqual( Stem("midibuszainál"), "midibusz");});
test("midibuszokba -> midibusz", function() {deepEqual( Stem("midibuszokba"), "midibusz");});
test("midig -> mi", function() {deepEqual( Stem("midig"), "mi");});
test("midőn -> midő", function() {deepEqual( Stem("midőn"), "midő");});
test("miegymást -> miegymás", function() {deepEqual( Stem("miegymást"), "miegymás");});
test("mieink -> mi", function() {deepEqual( Stem("mieink"), "mi");});
test("mieinket -> mi", function() {deepEqual( Stem("mieinket"), "mi");});
test("mienk -> mie", function() {deepEqual( Stem("mienk"), "mie");});
test("mielőbb -> mielőbb", function() {deepEqual( Stem("mielőbb"), "mielőbb");});
test("mielőbbi -> mielőbb", function() {deepEqual( Stem("mielőbbi"), "mielőbb");});
test("mielőtt -> mielőt", function() {deepEqual( Stem("mielőtt"), "mielőt");});
test("miféle -> mifél", function() {deepEqual( Stem("miféle"), "mifél");});
test("migráció -> migráció", function() {deepEqual( Stem("migráció"), "migráció");});
test("migrációs -> migrációs", function() {deepEqual( Stem("migrációs"), "migrációs");});
test("migrálását -> migrálás", function() {deepEqual( Stem("migrálását"), "migrálás");});
test("mihamarabb -> mihamarabb", function() {deepEqual( Stem("mihamarabb"), "mihamarabb");});
test("mihelyt -> mihely", function() {deepEqual( Stem("mihelyt"), "mihely");});
test("mihozzánk -> mihozza", function() {deepEqual( Stem("mihozzánk"), "mihozza");});
test("mijat -> mij", function() {deepEqual( Stem("mijat"), "mij");});
test("mijután -> mijut", function() {deepEqual( Stem("mijután"), "mijut");});
test("miki -> mi", function() {deepEqual( Stem("miki"), "mi");});
test("mikro -> mikr", function() {deepEqual( Stem("mikro"), "mikr");});
test("mikroarchitektúrájának -> mikroarchitektúrá", function() {deepEqual( Stem("mikroarchitektúrájának"), "mikroarchitektúrá");});
test("mikrobusz -> mikrobusz", function() {deepEqual( Stem("mikrobusz"), "mikrobusz");});
test("mikrobuszos -> mikrobuszos", function() {deepEqual( Stem("mikrobuszos"), "mikrobuszos");});
test("mikrochip -> mikrochip", function() {deepEqual( Stem("mikrochip"), "mikrochip");});
test("mikrochipeket -> mikrochip", function() {deepEqual( Stem("mikrochipeket"), "mikrochip");});
test("mikroelektronikai -> mikroelektroni", function() {deepEqual( Stem("mikroelektronikai"), "mikroelektroni");});
test("mikrofilmezésre -> mikrofilmezés", function() {deepEqual( Stem("mikrofilmezésre"), "mikrofilmezés");});
test("mikrofilmezését -> mikrofilmezés", function() {deepEqual( Stem("mikrofilmezését"), "mikrofilmezés");});
test("mikrofon -> mikrof", function() {deepEqual( Stem("mikrofon"), "mikrof");});
test("mikrofonhoz -> mikrofon", function() {deepEqual( Stem("mikrofonhoz"), "mikrofon");});
test("mikrofonjához -> mikrofon", function() {deepEqual( Stem("mikrofonjához"), "mikrofon");});
test("mikrofonok -> mikrofon", function() {deepEqual( Stem("mikrofonok"), "mikrofon");});
test("mikrofonról -> mikrofon", function() {deepEqual( Stem("mikrofonról"), "mikrofon");});
test("mikrofont -> mikrofon", function() {deepEqual( Stem("mikrofont"), "mikrofon");});
test("mikrogazdasági -> mikrogazdaság", function() {deepEqual( Stem("mikrogazdasági"), "mikrogazdaság");});
test("mikrohitel-állományt -> mikrohitel-állomány", function() {deepEqual( Stem("mikrohitel-állományt"), "mikrohitel-állomány");});
test("mikrohitelek -> mikrohitel", function() {deepEqual( Stem("mikrohitelek"), "mikrohitel");});
test("mikrohitelprogram -> mikrohitelprogr", function() {deepEqual( Stem("mikrohitelprogram"), "mikrohitelprogr");});
test("mikrohullámú -> mikrohullámú", function() {deepEqual( Stem("mikrohullámú"), "mikrohullámú");});
test("mikrolapkás -> mikrolapkás", function() {deepEqual( Stem("mikrolapkás"), "mikrolapkás");});
test("mikrolapkával -> mikrolap", function() {deepEqual( Stem("mikrolapkával"), "mikrolap");});
test("mikrolapkákra -> mikrolapka", function() {deepEqual( Stem("mikrolapkákra"), "mikrolapka");});
test("mikrométeres -> mikrométeres", function() {deepEqual( Stem("mikrométeres"), "mikrométeres");});
test("mikroorganizmusok -> mikroorganizmus", function() {deepEqual( Stem("mikroorganizmusok"), "mikroorganizmus");});
test("mikroprocesszorát -> mikroprocesszor", function() {deepEqual( Stem("mikroprocesszorát"), "mikroprocesszor");});
test("mikrosebészeti -> mikrosebészet", function() {deepEqual( Stem("mikrosebészeti"), "mikrosebészet");});
test("mikroszkóppal -> mikroszkóp", function() {deepEqual( Stem("mikroszkóppal"), "mikroszkóp");});
test("mikroszámítógépet -> mikroszámítógép", function() {deepEqual( Stem("mikroszámítógépet"), "mikroszámítógép");});
test("mikrovállalkozásait -> mikrovállalkozás", function() {deepEqual( Stem("mikrovállalkozásait"), "mikrovállalkozás");});
test("miként -> mi", function() {deepEqual( Stem("miként"), "mi");});
test("mikénti -> miként", function() {deepEqual( Stem("mikénti"), "miként");});
test("mikéntjét -> miként", function() {deepEqual( Stem("mikéntjét"), "miként");});
test("miképp -> mi", function() {deepEqual( Stem("miképp"), "mi");});
test("miképpen -> mi", function() {deepEqual( Stem("miképpen"), "mi");});
test("miközben -> miköz", function() {deepEqual( Stem("miközben"), "miköz");});
test("milicistái -> milicista", function() {deepEqual( Stem("milicistái"), "milicista");});
test("milicisták -> milicista", function() {deepEqual( Stem("milicisták"), "milicista");});
test("miliárd -> miliár", function() {deepEqual( Stem("miliárd"), "miliár");});
test("miliőjével -> miliő", function() {deepEqual( Stem("miliőjével"), "miliő");});
test("millenniumhoz -> millenniu", function() {deepEqual( Stem("millenniumhoz"), "millenniu");});
test("millenniumra -> millenniu", function() {deepEqual( Stem("millenniumra"), "millenniu");});
test("millenniumi -> millennium", function() {deepEqual( Stem("millenniumi"), "millennium");});
test("milliméteres -> milliméteres", function() {deepEqual( Stem("milliméteres"), "milliméteres");});
test("milliméterrel -> milliméter", function() {deepEqual( Stem("milliméterrel"), "milliméter");});
test("milliméter -> milliméter", function() {deepEqual( Stem("milliméter"), "milliméter");});
test("milliomos -> milliomos", function() {deepEqual( Stem("milliomos"), "milliomos");});
test("milliomosok -> milliomos", function() {deepEqual( Stem("milliomosok"), "milliomos");});
test("milliomost -> milliomos", function() {deepEqual( Stem("milliomost"), "milliomos");});
test("milliszekundum -> milliszekundu", function() {deepEqual( Stem("milliszekundum"), "milliszekundu");});
test("milliszekundumos -> milliszekundumos", function() {deepEqual( Stem("milliszekundumos"), "milliszekundumos");});
test("milliárd -> milliár", function() {deepEqual( Stem("milliárd"), "milliár");});
test("milliárddal -> milliár", function() {deepEqual( Stem("milliárddal"), "milliár");});
test("milliárdhoz -> milliár", function() {deepEqual( Stem("milliárdhoz"), "milliár");});
test("milliárdja -> milliárd", function() {deepEqual( Stem("milliárdja"), "milliárd");});
test("milliárdjai -> milliárd", function() {deepEqual( Stem("milliárdjai"), "milliárd");});
test("milliárdokkal -> milliárd", function() {deepEqual( Stem("milliárdokkal"), "milliárd");});
test("milliárdot -> milliár", function() {deepEqual( Stem("milliárdot"), "milliár");});
test("milliárdra -> milliár", function() {deepEqual( Stem("milliárdra"), "milliár");});
test("milliárdról -> milliár", function() {deepEqual( Stem("milliárdról"), "milliár");});
test("milliárdnyi -> milliárdny", function() {deepEqual( Stem("milliárdnyi"), "milliárdny");});
test("milliárdos -> milliárdos", function() {deepEqual( Stem("milliárdos"), "milliárdos");});
test("milliárdosnak -> milliárdos", function() {deepEqual( Stem("milliárdosnak"), "milliárdos");});
test("millió -> millió", function() {deepEqual( Stem("millió"), "millió");});
test("millióan -> millió", function() {deepEqual( Stem("millióan"), "millió");});
test("millióba -> millió", function() {deepEqual( Stem("millióba"), "millió");});
test("millióban -> millió", function() {deepEqual( Stem("millióban"), "millió");});
test("millióból -> millió", function() {deepEqual( Stem("millióból"), "millió");});
test("millióra -> millió", function() {deepEqual( Stem("millióra"), "millió");});
test("millióról -> millió", function() {deepEqual( Stem("millióról"), "millió");});
test("milliót -> millió", function() {deepEqual( Stem("milliót"), "millió");});
test("millióval -> millió", function() {deepEqual( Stem("millióval"), "millió");});
test("millióértmilliónyi -> millióértmillióny", function() {deepEqual( Stem("millióértmilliónyi"), "millióértmillióny");});
test("milliónyian -> millióny", function() {deepEqual( Stem("milliónyian"), "millióny");});
test("milliónyit -> millióny", function() {deepEqual( Stem("milliónyit"), "millióny");});
test("milliói -> millió", function() {deepEqual( Stem("milliói"), "millió");});
test("millióig -> millió", function() {deepEqual( Stem("millióig"), "millió");});
test("millióit -> millió", function() {deepEqual( Stem("millióit"), "millió");});
test("milliók -> millió", function() {deepEqual( Stem("milliók"), "millió");});
test("milliós -> milliós", function() {deepEqual( Stem("milliós"), "milliós");});
test("milliósban -> milliós", function() {deepEqual( Stem("milliósban"), "milliós");});
test("mily -> mily", function() {deepEqual( Stem("mily"), "mily");});
test("milyen -> mily", function() {deepEqual( Stem("milyen"), "mily");});
test("milyenek -> mily", function() {deepEqual( Stem("milyenek"), "mily");});
test("milyennek -> milyen", function() {deepEqual( Stem("milyennek"), "milyen");});
test("milyet -> mily", function() {deepEqual( Stem("milyet"), "mily");});
test("milyenfajta -> milyenfajt", function() {deepEqual( Stem("milyenfajta"), "milyenfajt");});
test("milyensége -> milyenség", function() {deepEqual( Stem("milyensége"), "milyenség");});
test("milánói -> milánó", function() {deepEqual( Stem("milánói"), "milánó");});
test("minap -> minap", function() {deepEqual( Stem("minap"), "minap");});
test("minapi -> minap", function() {deepEqual( Stem("minapi"), "minap");});
test("minaret -> minar", function() {deepEqual( Stem("minaret"), "minar");});
test("mind -> min", function() {deepEqual( Stem("mind"), "min");});
test("mindbe -> min", function() {deepEqual( Stem("mindbe"), "min");});
test("mindet -> min", function() {deepEqual( Stem("mindet"), "min");});
test("mindre -> min", function() {deepEqual( Stem("mindre"), "min");});
test("mindtől -> min", function() {deepEqual( Stem("mindtől"), "min");});
test("mind-mind -> mind-min", function() {deepEqual( Stem("mind-mind"), "mind-min");});
test("mindaddig -> mindad", function() {deepEqual( Stem("mindaddig"), "mindad");});
test("mindannak -> mindan", function() {deepEqual( Stem("mindannak"), "mindan");});
test("mindannyiszor -> mindannyiszor", function() {deepEqual( Stem("mindannyiszor"), "mindannyiszor");});
test("mindannyiuknak -> mindanny", function() {deepEqual( Stem("mindannyiuknak"), "mindanny");});
test("mindannyiunk -> mindanny", function() {deepEqual( Stem("mindannyiunk"), "mindanny");});
test("mindannyiunkat -> mindanny", function() {deepEqual( Stem("mindannyiunkat"), "mindanny");});
test("mindanynyian -> mindanyny", function() {deepEqual( Stem("mindanynyian"), "mindanyny");});
test("mindanynyiuknak -> mindanyny", function() {deepEqual( Stem("mindanynyiuknak"), "mindanyny");});
test("mindarra -> mindar", function() {deepEqual( Stem("mindarra"), "mindar");});
test("mindattól -> mindat", function() {deepEqual( Stem("mindattól"), "mindat");});
test("mindazok -> mindaz", function() {deepEqual( Stem("mindazok"), "mindaz");});
test("mindazokhoz -> mindaz", function() {deepEqual( Stem("mindazokhoz"), "mindaz");});
test("mindazokkal -> mindaz", function() {deepEqual( Stem("mindazokkal"), "mindaz");});
test("mindazoknak -> mindaz", function() {deepEqual( Stem("mindazoknak"), "mindaz");});
test("mindazon -> mindaz", function() {deepEqual( Stem("mindazon"), "mindaz");});
test("mindazonáltal -> mindazonáltal", function() {deepEqual( Stem("mindazonáltal"), "mindazonáltal");});
test("mindebben -> mindeb", function() {deepEqual( Stem("mindebben"), "mindeb");});
test("mindeddig -> minded", function() {deepEqual( Stem("mindeddig"), "minded");});
test("mindegyhogy -> mindegyhogy", function() {deepEqual( Stem("mindegyhogy"), "mindegyhogy");});
test("mindegyik -> mindegy", function() {deepEqual( Stem("mindegyik"), "mindegy");});
test("mindegyike -> mindegy", function() {deepEqual( Stem("mindegyike"), "mindegy");});
test("mindegyiken -> mindegy", function() {deepEqual( Stem("mindegyiken"), "mindegy");});
test("mindegyiket -> mindegy", function() {deepEqual( Stem("mindegyiket"), "mindegy");});
test("mindegyikhez -> mindegy", function() {deepEqual( Stem("mindegyikhez"), "mindegy");});
test("mindegyikkel -> mindegy", function() {deepEqual( Stem("mindegyikkel"), "mindegy");});
test("mindegyiknek -> mindegy", function() {deepEqual( Stem("mindegyiknek"), "mindegy");});
test("mindegyiknél -> mindegy", function() {deepEqual( Stem("mindegyiknél"), "mindegy");});
test("mindegyiktől -> mindegy", function() {deepEqual( Stem("mindegyiktől"), "mindegy");});
test("mindegyikében -> mindegy", function() {deepEqual( Stem("mindegyikében"), "mindegy");});
test("mindegyikéhez -> mindegy", function() {deepEqual( Stem("mindegyikéhez"), "mindegy");});
test("mindegyikének -> mindegy", function() {deepEqual( Stem("mindegyikének"), "mindegy");});
test("mindegyikére -> mindegy", function() {deepEqual( Stem("mindegyikére"), "mindegy");});
test("mindegyikét -> mindegy", function() {deepEqual( Stem("mindegyikét"), "mindegy");});
test("mindegyikük -> mindegy", function() {deepEqual( Stem("mindegyikük"), "mindegy");});
test("mindegyiküknek -> mindegy", function() {deepEqual( Stem("mindegyiküknek"), "mindegy");});
test("mindegyikünk -> mindegy", function() {deepEqual( Stem("mindegyikünk"), "mindegy");});
test("mindegyikünkhöz -> mindegy", function() {deepEqual( Stem("mindegyikünkhöz"), "mindegy");});
test("mindegyre -> mindegy", function() {deepEqual( Stem("mindegyre"), "mindegy");});
test("mindegy -> mindegy", function() {deepEqual( Stem("mindegy"), "mindegy");});
test("mindehhez -> mindeh", function() {deepEqual( Stem("mindehhez"), "mindeh");});
test("mindeközben -> mindeköz", function() {deepEqual( Stem("mindeközben"), "mindeköz");});
test("mindemellett -> mindemellet", function() {deepEqual( Stem("mindemellett"), "mindemellet");});
test("minden -> min", function() {deepEqual( Stem("minden"), "min");});
test("mindenbe -> minden", function() {deepEqual( Stem("mindenbe"), "minden");});
test("mindenben -> minden", function() {deepEqual( Stem("mindenben"), "minden");});
test("mindene -> minden", function() {deepEqual( Stem("mindene"), "minden");});
test("mindened -> minden", function() {deepEqual( Stem("mindened"), "minden");});
test("mindenek -> mind", function() {deepEqual( Stem("mindenek"), "mind");});
test("mindenem -> minden", function() {deepEqual( Stem("mindenem"), "minden");});
test("mindennek -> minden", function() {deepEqual( Stem("mindennek"), "minden");});
test("mindenhez -> minden", function() {deepEqual( Stem("mindenhez"), "minden");});
test("mindennel -> min", function() {deepEqual( Stem("mindennel"), "min");});
test("mindennél -> minden", function() {deepEqual( Stem("mindennél"), "minden");});
test("mindenre -> minden", function() {deepEqual( Stem("mindenre"), "minden");});
test("mindenről -> minden", function() {deepEqual( Stem("mindenről"), "minden");});
test("mindentől -> minden", function() {deepEqual( Stem("mindentől"), "minden");});
test("mindent -> minden", function() {deepEqual( Stem("mindent"), "minden");});
test("mindenért -> minden", function() {deepEqual( Stem("mindenért"), "minden");});
test("mindenét -> minden", function() {deepEqual( Stem("mindenét"), "minden");});
test("mindenük -> minden", function() {deepEqual( Stem("mindenük"), "minden");});
test("mindenünk -> minden", function() {deepEqual( Stem("mindenünk"), "minden");});
test("mindenekelőtt -> mindenekelőt", function() {deepEqual( Stem("mindenekelőtt"), "mindenekelőt");});
test("mindenekfelett -> mindenekfelet", function() {deepEqual( Stem("mindenekfelett"), "mindenekfelet");});
test("mindenekfölött -> mindenekfölöt", function() {deepEqual( Stem("mindenekfölött"), "mindenekfölöt");});
test("mindenesbe -> mindenes", function() {deepEqual( Stem("mindenesbe"), "mindenes");});
test("mindeneseket -> mindenes", function() {deepEqual( Stem("mindeneseket"), "mindenes");});
test("mindenestül -> mindenest", function() {deepEqual( Stem("mindenestül"), "mindenest");});
test("mindenesetre -> mindeneset", function() {deepEqual( Stem("mindenesetre"), "mindeneset");});
test("mindenevő -> mindenevő", function() {deepEqual( Stem("mindenevő"), "mindenevő");});
test("mindenfajta -> mindenfajt", function() {deepEqual( Stem("mindenfajta"), "mindenfajt");});
test("mindenfele -> mindenfel", function() {deepEqual( Stem("mindenfele"), "mindenfel");});
test("mindenfelé -> mindenfel", function() {deepEqual( Stem("mindenfelé"), "mindenfel");});
test("mindenfelől -> mindenfelől", function() {deepEqual( Stem("mindenfelől"), "mindenfelől");});
test("mindenféleképpen -> mindenfél", function() {deepEqual( Stem("mindenféleképpen"), "mindenfél");});
test("mindenfélék -> mindenféle", function() {deepEqual( Stem("mindenfélék"), "mindenféle");});
test("mindenféle -> mindenfél", function() {deepEqual( Stem("mindenféle"), "mindenfél");});
test("mindenféléről -> mindenfél", function() {deepEqual( Stem("mindenféléről"), "mindenfél");});
test("mindenfélét -> mindenfél", function() {deepEqual( Stem("mindenfélét"), "mindenfél");});
test("mindenfélével -> mindenfél", function() {deepEqual( Stem("mindenfélével"), "mindenfél");});
test("mindenható -> mindenható", function() {deepEqual( Stem("mindenható"), "mindenható");});
test("mindenhatóbbak -> mindenhatóbb", function() {deepEqual( Stem("mindenhatóbbak"), "mindenhatóbb");});
test("mindenhatók -> mindenható", function() {deepEqual( Stem("mindenhatók"), "mindenható");});
test("mindenhatóvá -> mindenható", function() {deepEqual( Stem("mindenhatóvá"), "mindenható");});
test("mindenhol -> mindenhol", function() {deepEqual( Stem("mindenhol"), "mindenhol");});
test("mindenhonnan -> mindenhonn", function() {deepEqual( Stem("mindenhonnan"), "mindenhonn");});
test("mindenhova -> mindenhov", function() {deepEqual( Stem("mindenhova"), "mindenhov");});
test("mindenhová -> mindenh", function() {deepEqual( Stem("mindenhová"), "mindenh");});
test("mindenit -> minden", function() {deepEqual( Stem("mindenit"), "minden");});
test("mindenki -> minden", function() {deepEqual( Stem("mindenki"), "minden");});
test("mindenkiben -> minden", function() {deepEqual( Stem("mindenkiben"), "minden");});
test("mindenkiből -> minden", function() {deepEqual( Stem("mindenkiből"), "minden");});
test("mindenkihez -> minden", function() {deepEqual( Stem("mindenkihez"), "minden");});
test("mindenkije -> minden", function() {deepEqual( Stem("mindenkije"), "minden");});
test("mindenkin -> minden", function() {deepEqual( Stem("mindenkin"), "minden");});
test("mindenkinek -> minden", function() {deepEqual( Stem("mindenkinek"), "minden");});
test("mindenkinél -> minden", function() {deepEqual( Stem("mindenkinél"), "minden");});
test("mindenkire -> minden", function() {deepEqual( Stem("mindenkire"), "minden");});
test("mindenkiről -> minden", function() {deepEqual( Stem("mindenkiről"), "minden");});
test("mindenkit -> minden", function() {deepEqual( Stem("mindenkit"), "minden");});
test("mindenkitől -> minden", function() {deepEqual( Stem("mindenkitől"), "minden");});
test("mindenkivel -> minden", function() {deepEqual( Stem("mindenkivel"), "minden");});
test("mindenkiért -> minden", function() {deepEqual( Stem("mindenkiért"), "minden");});
test("mindenkint -> mindenkin", function() {deepEqual( Stem("mindenkint"), "mindenkin");});
test("mindenkori -> mindenkor", function() {deepEqual( Stem("mindenkori"), "mindenkor");});
test("mindenkorra -> mindenkor", function() {deepEqual( Stem("mindenkorra"), "mindenkor");});
test("mindenkor -> minden", function() {deepEqual( Stem("mindenkor"), "minden");});
test("mindenképpen -> minden", function() {deepEqual( Stem("mindenképpen"), "minden");});
test("mindennapi -> mindennap", function() {deepEqual( Stem("mindennapi"), "mindennap");});
test("mindennapibb -> mindennapibb", function() {deepEqual( Stem("mindennapibb"), "mindennapibb");});
test("mindennapinak -> mindennap", function() {deepEqual( Stem("mindennapinak"), "mindennap");});
test("mindennapjai -> mindennap", function() {deepEqual( Stem("mindennapjai"), "mindennap");});
test("mindennap -> mindennap", function() {deepEqual( Stem("mindennap"), "mindennap");});
test("mindennapjaikat -> mindennap", function() {deepEqual( Stem("mindennapjaikat"), "mindennap");});
test("mindennapjaim -> mindennap", function() {deepEqual( Stem("mindennapjaim"), "mindennap");});
test("mindennapjaimat -> mindennap", function() {deepEqual( Stem("mindennapjaimat"), "mindennap");});
test("mindennapjaimhoz -> mindennap", function() {deepEqual( Stem("mindennapjaimhoz"), "mindennap");});
test("mindennapjainkba -> mindennap", function() {deepEqual( Stem("mindennapjainkba"), "mindennap");});
test("mindennapok -> mindennap", function() {deepEqual( Stem("mindennapok"), "mindennap");});
test("mindennapos -> mindennapos", function() {deepEqual( Stem("mindennapos"), "mindennapos");});
test("mindennaposak -> mindennapos", function() {deepEqual( Stem("mindennaposak"), "mindennapos");});
test("mindennemű -> mindennemű", function() {deepEqual( Stem("mindennemű"), "mindennemű");});
test("mindenségit -> mindenség", function() {deepEqual( Stem("mindenségit"), "mindenség");});
test("mindentudók -> mindentudó", function() {deepEqual( Stem("mindentudók"), "mindentudó");});
test("mindenáron -> mindenár", function() {deepEqual( Stem("mindenáron"), "mindenár");});
test("mindenütt -> mindenüt", function() {deepEqual( Stem("mindenütt"), "mindenüt");});
test("mindetudó -> mindetudó", function() {deepEqual( Stem("mindetudó"), "mindetudó");});
test("mindez -> mindez", function() {deepEqual( Stem("mindez"), "mindez");});
test("mindezek -> mindez", function() {deepEqual( Stem("mindezek"), "mindez");});
test("mindezeket -> mindez", function() {deepEqual( Stem("mindezeket"), "mindez");});
test("mindezekkel -> mindez", function() {deepEqual( Stem("mindezekkel"), "mindez");});
test("mindezeknek -> mindez", function() {deepEqual( Stem("mindezeknek"), "mindez");});
test("mindezekért -> mindez", function() {deepEqual( Stem("mindezekért"), "mindez");});
test("mindezt -> mindez", function() {deepEqual( Stem("mindezt"), "mindez");});
test("mindezzel -> mindez", function() {deepEqual( Stem("mindezzel"), "mindez");});
test("mindezideig -> mindez", function() {deepEqual( Stem("mindezideig"), "mindez");});
test("mindféle -> mindfél", function() {deepEqual( Stem("mindféle"), "mindfél");});
test("mindhalálig -> mindhalál", function() {deepEqual( Stem("mindhalálig"), "mindhalál");});
test("mindhárman -> mindhár", function() {deepEqual( Stem("mindhárman"), "mindhár");});
test("mindhármatok -> mindhármat", function() {deepEqual( Stem("mindhármatok"), "mindhármat");});
test("mindhármukat -> mindhárm", function() {deepEqual( Stem("mindhármukat"), "mindhárm");});
test("mindhármunkat -> mindhárm", function() {deepEqual( Stem("mindhármunkat"), "mindhárm");});
test("mindhárom -> mindhár", function() {deepEqual( Stem("mindhárom"), "mindhár");});
test("mindig -> min", function() {deepEqual( Stem("mindig"), "min");});
test("mindinkább -> mindinkább", function() {deepEqual( Stem("mindinkább"), "mindinkább");});
test("mindjárt -> mindjár", function() {deepEqual( Stem("mindjárt"), "mindjár");});
test("mindkettejükben -> mindkette", function() {deepEqual( Stem("mindkettejükben"), "mindkette");});
test("mindketten -> mindkett", function() {deepEqual( Stem("mindketten"), "mindkett");});
test("mindkettőben -> mindkettő", function() {deepEqual( Stem("mindkettőben"), "mindkettő");});
test("mindkettőből -> mindkettő", function() {deepEqual( Stem("mindkettőből"), "mindkettő");});
test("mindkettőjüket -> mindkettő", function() {deepEqual( Stem("mindkettőjüket"), "mindkettő");});
test("mindkettőjüknek -> mindkettő", function() {deepEqual( Stem("mindkettőjüknek"), "mindkettő");});
test("mindkettőjükre -> mindkettő", function() {deepEqual( Stem("mindkettőjükre"), "mindkettő");});
test("mindkettőnek -> mindkettő", function() {deepEqual( Stem("mindkettőnek"), "mindkettő");});
test("mindkettőnk -> mindkettő", function() {deepEqual( Stem("mindkettőnk"), "mindkettő");});
test("mindkettőnket -> mindkettő", function() {deepEqual( Stem("mindkettőnket"), "mindkettő");});
test("mindkettőnknek -> mindkettő", function() {deepEqual( Stem("mindkettőnknek"), "mindkettő");});
test("mindkettőre -> mindkettő", function() {deepEqual( Stem("mindkettőre"), "mindkettő");});
test("mindkettőről -> mindkettő", function() {deepEqual( Stem("mindkettőről"), "mindkettő");});
test("mindkettőt -> mindkettő", function() {deepEqual( Stem("mindkettőt"), "mindkettő");});
test("mindkét -> mind", function() {deepEqual( Stem("mindkét"), "mind");});
test("mindkétfelől -> mindkétfelől", function() {deepEqual( Stem("mindkétfelől"), "mindkétfelől");});
test("mindmostanig -> mindmostan", function() {deepEqual( Stem("mindmostanig"), "mindmostan");});
test("mindmáig -> mindm", function() {deepEqual( Stem("mindmáig"), "mindm");});
test("mindnyájan -> mindnyáj", function() {deepEqual( Stem("mindnyájan"), "mindnyáj");});
test("mindnyájatokét -> mindnyájat", function() {deepEqual( Stem("mindnyájatokét"), "mindnyájat");});
test("mindnyájukat -> mindnya", function() {deepEqual( Stem("mindnyájukat"), "mindnya");});
test("mindnyájunk -> mindnyáj", function() {deepEqual( Stem("mindnyájunk"), "mindnyáj");});
test("mindnyájunknak -> mindnyáj", function() {deepEqual( Stem("mindnyájunknak"), "mindnyáj");});
test("minduntalan -> minduntal", function() {deepEqual( Stem("minduntalan"), "minduntal");});
test("mindvégig -> mindvég", function() {deepEqual( Stem("mindvégig"), "mindvég");});
test("mindég -> mindég", function() {deepEqual( Stem("mindég"), "mindég");});
test("mindék -> minde", function() {deepEqual( Stem("mindék"), "minde");});
test("mindőnk -> mindő", function() {deepEqual( Stem("mindőnk"), "mindő");});
test("mindőnknek -> mindő", function() {deepEqual( Stem("mindőnknek"), "mindő");});
test("mindörökké -> mindör", function() {deepEqual( Stem("mindörökké"), "mindör");});
test("mindörökre -> mindör", function() {deepEqual( Stem("mindörökre"), "mindör");});
test("mindössze -> mindössz", function() {deepEqual( Stem("mindössze"), "mindössz");});
test("mindösszesen -> mindösszes", function() {deepEqual( Stem("mindösszesen"), "mindösszes");});
test("mingyár -> mingyár", function() {deepEqual( Stem("mingyár"), "mingyár");});
test("mini-din -> mini-d", function() {deepEqual( Stem("mini-din"), "mini-d");});
test("miniatűr -> miniatűr", function() {deepEqual( Stem("miniatűr"), "miniatűr");});
test("miniatürizálták -> miniatürizálta", function() {deepEqual( Stem("miniatürizálták"), "miniatürizálta");});
test("minidiszk -> minidisz", function() {deepEqual( Stem("minidiszk"), "minidisz");});
test("miniesszében -> miniessz", function() {deepEqual( Stem("miniesszében"), "miniessz");});
test("minigolf -> minigolf", function() {deepEqual( Stem("minigolf"), "minigolf");});
test("minigolfot -> minigolf", function() {deepEqual( Stem("minigolfot"), "minigolf");});
test("minigolfoztunk -> minigolfozt", function() {deepEqual( Stem("minigolfoztunk"), "minigolfozt");});
test("minikarabély -> minikarabély", function() {deepEqual( Stem("minikarabély"), "minikarabély");});
test("minilaborok -> minilabor", function() {deepEqual( Stem("minilaborok"), "minilabor");});
test("minimalizálása -> minimalizálás", function() {deepEqual( Stem("minimalizálása"), "minimalizálás");});
test("minimalizálásával -> minimalizálás", function() {deepEqual( Stem("minimalizálásával"), "minimalizálás");});
test("minimumjogdíjként -> minimumjogdíj", function() {deepEqual( Stem("minimumjogdíjként"), "minimumjogdíj");});
test("minimumnak -> minimu", function() {deepEqual( Stem("minimumnak"), "minimu");});
test("minimum -> minimu", function() {deepEqual( Stem("minimum"), "minimu");});
test("minimuma -> minimum", function() {deepEqual( Stem("minimuma"), "minimum");});
test("minimumot -> minimu", function() {deepEqual( Stem("minimumot"), "minimu");});
test("minimumra -> minimu", function() {deepEqual( Stem("minimumra"), "minimu");});
test("minimumát -> minimum", function() {deepEqual( Stem("minimumát"), "minimum");});
test("minimumár -> minimumár", function() {deepEqual( Stem("minimumár"), "minimumár");});
test("minimálbérnél -> minimálbér", function() {deepEqual( Stem("minimálbérnél"), "minimálbér");});
test("minimálbérre -> minimálbér", function() {deepEqual( Stem("minimálbérre"), "minimálbér");});
test("minimális -> minimális", function() {deepEqual( Stem("minimális"), "minimális");});
test("minimálisan -> minimális", function() {deepEqual( Stem("minimálisan"), "minimális");});
test("minimálisnál -> minimális", function() {deepEqual( Stem("minimálisnál"), "minimális");});
test("minimálisra -> minimális", function() {deepEqual( Stem("minimálisra"), "minimális");});
test("minimálzenéhez -> minimálzen", function() {deepEqual( Stem("minimálzenéhez"), "minimálzen");});
test("ministránsok -> ministráns", function() {deepEqual( Stem("ministránsok"), "ministráns");});
test("miniszoknyát -> miniszokny", function() {deepEqual( Stem("miniszoknyát"), "miniszokny");});
test("miniszter -> miniszter", function() {deepEqual( Stem("miniszter"), "miniszter");});
test("minisztere -> miniszt", function() {deepEqual( Stem("minisztere"), "miniszt");});
test("miniszterei -> miniszter", function() {deepEqual( Stem("miniszterei"), "miniszter");});
test("minisztereinek -> miniszter", function() {deepEqual( Stem("minisztereinek"), "miniszter");});
test("miniszterek -> miniszter", function() {deepEqual( Stem("miniszterek"), "miniszter");});
test("minisztereket -> miniszter", function() {deepEqual( Stem("minisztereket"), "miniszter");});
test("minisztereknek -> miniszter", function() {deepEqual( Stem("minisztereknek"), "miniszter");});
test("miniszteren -> miniszter", function() {deepEqual( Stem("miniszteren"), "miniszter");});
test("miniszterhez -> miniszter", function() {deepEqual( Stem("miniszterhez"), "miniszter");});
test("miniszterként -> miniszter", function() {deepEqual( Stem("miniszterként"), "miniszter");});
test("miniszternek -> miniszter", function() {deepEqual( Stem("miniszternek"), "miniszter");});
test("miniszterrel -> miniszter", function() {deepEqual( Stem("miniszterrel"), "miniszter");});
test("minisztert -> miniszter", function() {deepEqual( Stem("minisztert"), "miniszter");});
test("minisztertől -> miniszter", function() {deepEqual( Stem("minisztertől"), "miniszter");});
test("miniszterének -> miniszter", function() {deepEqual( Stem("miniszterének"), "miniszter");});
test("miniszterét -> miniszter", function() {deepEqual( Stem("miniszterét"), "miniszter");});
test("miniszterével -> miniszter", function() {deepEqual( Stem("miniszterével"), "miniszter");});
test("miniszterelnök-helyettes -> miniszterelnök-helyettes", function() {deepEqual( Stem("miniszterelnök-helyettes"), "miniszterelnök-helyettes");});
test("miniszterelnök-helyettese -> miniszterelnök-helyettes", function() {deepEqual( Stem("miniszterelnök-helyettese"), "miniszterelnök-helyettes");});
test("miniszterelnök- -> miniszterelnök-", function() {deepEqual( Stem("miniszterelnök-"), "miniszterelnök-");});
test("helyettesek -> helyettes", function() {deepEqual( Stem("helyettesek"), "helyettes");});
test("miniszterelnök-helyettessel -> miniszterelnök-helyettes", function() {deepEqual( Stem("miniszterelnök-helyettessel"), "miniszterelnök-helyettes");});
test("miniszterelnök-jelölti -> miniszterelnök-jelölt", function() {deepEqual( Stem("miniszterelnök-jelölti"), "miniszterelnök-jelölt");});
test("miniszterelnöki -> minisztereln", function() {deepEqual( Stem("miniszterelnöki"), "minisztereln");});
test("miniszterelnökkel -> minisztereln", function() {deepEqual( Stem("miniszterelnökkel"), "minisztereln");});
test("miniszterelnök -> minisztereln", function() {deepEqual( Stem("miniszterelnök"), "minisztereln");});
test("miniszterelnöke -> minisztereln", function() {deepEqual( Stem("miniszterelnöke"), "minisztereln");});
test("miniszterelnöknek -> minisztereln", function() {deepEqual( Stem("miniszterelnöknek"), "minisztereln");});
test("miniszterelnöknek -> minisztereln", function() {deepEqual( Stem("miniszterelnöknek"), "minisztereln");});
test("miniszterelnöknél -> minisztereln", function() {deepEqual( Stem("miniszterelnöknél"), "minisztereln");});
test("miniszterelnöktől -> minisztereln", function() {deepEqual( Stem("miniszterelnöktől"), "minisztereln");});
test("miniszterhelyettes -> miniszterhelyettes", function() {deepEqual( Stem("miniszterhelyettes"), "miniszterhelyettes");});
test("miniszteri -> miniszter", function() {deepEqual( Stem("miniszteri"), "miniszter");});
test("minisztertanács -> minisztertanács", function() {deepEqual( Stem("minisztertanács"), "minisztertanács");});
test("minisztertanácson -> minisztertanács", function() {deepEqual( Stem("minisztertanácson"), "minisztertanács");});
test("minisztérium -> minisztériu", function() {deepEqual( Stem("minisztérium"), "minisztériu");});
test("minisztériuma -> minisztérium", function() {deepEqual( Stem("minisztériuma"), "minisztérium");});
test("minisztériumban -> minisztériu", function() {deepEqual( Stem("minisztériumban"), "minisztériu");});
test("minisztériumból -> minisztériu", function() {deepEqual( Stem("minisztériumból"), "minisztériu");});
test("minisztériumhoz -> minisztériu", function() {deepEqual( Stem("minisztériumhoz"), "minisztériu");});
test("minisztériumnak -> minisztériu", function() {deepEqual( Stem("minisztériumnak"), "minisztériu");});
test("minisztériumok -> minisztérium", function() {deepEqual( Stem("minisztériumok"), "minisztérium");});
test("minisztériumokat -> minisztérium", function() {deepEqual( Stem("minisztériumokat"), "minisztérium");});
test("minisztériumokban -> minisztérium", function() {deepEqual( Stem("minisztériumokban"), "minisztérium");});
test("minisztériumokkal -> minisztérium", function() {deepEqual( Stem("minisztériumokkal"), "minisztérium");});
test("minisztériumába -> minisztérium", function() {deepEqual( Stem("minisztériumába"), "minisztérium");});
test("minisztériumához -> minisztérium", function() {deepEqual( Stem("minisztériumához"), "minisztérium");});
test("minisztériumi -> minisztérium", function() {deepEqual( Stem("minisztériumi"), "minisztérium");});
test("miniszámítógépek -> miniszámítógép", function() {deepEqual( Stem("miniszámítógépek"), "miniszámítógép");});
test("minket -> mi", function() {deepEqual( Stem("minket"), "mi");});
test("minkáltató -> minkáltató", function() {deepEqual( Stem("minkáltató"), "minkáltató");});
test("mint -> min", function() {deepEqual( Stem("mint"), "min");});
test("mintabeli -> mintabel", function() {deepEqual( Stem("mintabeli"), "mintabel");});
test("mintahogyan -> mintahogy", function() {deepEqual( Stem("mintahogyan"), "mintahogy");});
test("mintakislány -> mintakislány", function() {deepEqual( Stem("mintakislány"), "mintakislány");});
test("mintaklubok -> mintaklub", function() {deepEqual( Stem("mintaklubok"), "mintaklub");});
test("mintaként -> mint", function() {deepEqual( Stem("mintaként"), "mint");});
test("minta -> mint", function() {deepEqual( Stem("minta"), "mint");});
test("mintaképem -> mintakép", function() {deepEqual( Stem("mintaképem"), "mintakép");});
test("mintakódokkal -> mintakód", function() {deepEqual( Stem("mintakódokkal"), "mintakód");});
test("mintapolgárok -> mintapolgár", function() {deepEqual( Stem("mintapolgárok"), "mintapolgár");});
test("mintaprogramot -> mintaprogr", function() {deepEqual( Stem("mintaprogramot"), "mintaprogr");});
test("mintapéldányát -> mintapéldány", function() {deepEqual( Stem("mintapéldányát"), "mintapéldány");});
test("mintegy -> mintegy", function() {deepEqual( Stem("mintegy"), "mintegy");});
test("mintha -> minth", function() {deepEqual( Stem("mintha"), "minth");});
test("minthogy -> minthogy", function() {deepEqual( Stem("minthogy"), "minthogy");});
test("mintsem -> mints", function() {deepEqual( Stem("mintsem"), "mints");});
test("minták -> minta", function() {deepEqual( Stem("minták"), "minta");});
test("mintákat -> minta", function() {deepEqual( Stem("mintákat"), "minta");});
test("mintákon -> minta", function() {deepEqual( Stem("mintákon"), "minta");});
test("mintán -> mint", function() {deepEqual( Stem("mintán"), "mint");});
test("mintára -> mint", function() {deepEqual( Stem("mintára"), "mint");});
test("mintát -> mint", function() {deepEqual( Stem("mintát"), "mint");});
test("mintából -> mint", function() {deepEqual( Stem("mintából"), "mint");});
test("mintáikat -> minta", function() {deepEqual( Stem("mintáikat"), "minta");});
test("mintáit -> minta", function() {deepEqual( Stem("mintáit"), "minta");});
test("mintája -> mintá", function() {deepEqual( Stem("mintája"), "mintá");});
test("mintájára -> mintá", function() {deepEqual( Stem("mintájára"), "mintá");});
test("mintáját -> mintá", function() {deepEqual( Stem("mintáját"), "mintá");});
test("mintájú -> mintájú", function() {deepEqual( Stem("mintájú"), "mintájú");});
test("mintájúra -> mintájú", function() {deepEqual( Stem("mintájúra"), "mintájú");});
test("mintázatok -> mintázat", function() {deepEqual( Stem("mintázatok"), "mintázat");});
test("minálunk -> minál", function() {deepEqual( Stem("minálunk"), "minál");});
test("minék -> mine", function() {deepEqual( Stem("minék"), "mine");});
test("minél -> mi", function() {deepEqual( Stem("minél"), "mi");});
test("minő -> minő", function() {deepEqual( Stem("minő"), "minő");});
test("minőség-ellenőrzési -> minőség-ellenőrzés", function() {deepEqual( Stem("minőség-ellenőrzési"), "minőség-ellenőrzés");});
test("minőség-ellenőrzésben -> minőség-ellenőrzés", function() {deepEqual( Stem("minőség-ellenőrzésben"), "minőség-ellenőrzés");});
test("minőség-ellenőrzéssel -> minőség-ellenőrzés", function() {deepEqual( Stem("minőség-ellenőrzéssel"), "minőség-ellenőrzés");});
test("minőségbe -> minőség", function() {deepEqual( Stem("minőségbe"), "minőség");});
test("minőség -> minőség", function() {deepEqual( Stem("minőség"), "minőség");});
test("minőségben -> minőség", function() {deepEqual( Stem("minőségben"), "minőség");});
test("minősége -> minőség", function() {deepEqual( Stem("minősége"), "minőség");});
test("minőséggel -> minőség", function() {deepEqual( Stem("minőséggel"), "minőség");});
test("minőséget -> minőség", function() {deepEqual( Stem("minőséget"), "minőség");});
test("minőségnek -> minőség", function() {deepEqual( Stem("minőségnek"), "minőség");});
test("minőségre -> minőség", function() {deepEqual( Stem("minőségre"), "minőség");});
test("minőségről -> minőség", function() {deepEqual( Stem("minőségről"), "minőség");});
test("minőségük -> minőség", function() {deepEqual( Stem("minőségük"), "minőség");});
test("minőségtől -> minőség", function() {deepEqual( Stem("minőségtől"), "minőség");});
test("minőségében -> minőség", function() {deepEqual( Stem("minőségében"), "minőség");});
test("minőségén -> minőség", function() {deepEqual( Stem("minőségén"), "minőség");});
test("minőségének -> minőség", function() {deepEqual( Stem("minőségének"), "minőség");});
test("minőségéről -> minőség", function() {deepEqual( Stem("minőségéről"), "minőség");});
test("minőségét -> minőség", function() {deepEqual( Stem("minőségét"), "minőség");});
test("minőségétől -> minőség", function() {deepEqual( Stem("minőségétől"), "minőség");});
test("minőségével -> minőség", function() {deepEqual( Stem("minőségével"), "minőség");});
test("minőségbiztosítási -> minőségbiztosítás", function() {deepEqual( Stem("minőségbiztosítási"), "minőségbiztosítás");});
test("minőségbiztosítást -> minőségbiztosítás", function() {deepEqual( Stem("minőségbiztosítást"), "minőségbiztosítás");});
test("minőségbiztosítás -> minőségbiztosítás", function() {deepEqual( Stem("minőségbiztosítás"), "minőségbiztosítás");});
test("minőségbiztosító -> minőségbiztosító", function() {deepEqual( Stem("minőségbiztosító"), "minőségbiztosító");});
test("minőségellenőrzés -> minőségellenőrzés", function() {deepEqual( Stem("minőségellenőrzés"), "minőségellenőrzés");});
test("minőségfelmérési -> minőségfelmérés", function() {deepEqual( Stem("minőségfelmérési"), "minőségfelmérés");});
test("minőségi -> minőség", function() {deepEqual( Stem("minőségi"), "minőség");});
test("minőségromlás -> minőségromlás", function() {deepEqual( Stem("minőségromlás"), "minőségromlás");});
test("minőségromlást -> minőségromlás", function() {deepEqual( Stem("minőségromlást"), "minőségromlás");});
test("minőségtanúsítás -> minőségtanúsítás", function() {deepEqual( Stem("minőségtanúsítás"), "minőségtanúsítás");});
test("minőségű -> minőségű", function() {deepEqual( Stem("minőségű"), "minőségű");});
test("minőségűek -> minőségű", function() {deepEqual( Stem("minőségűek"), "minőségű");});
test("minőségűvel -> minőségű", function() {deepEqual( Stem("minőségűvel"), "minőségű");});
test("minősített -> minősítet", function() {deepEqual( Stem("minősített"), "minősítet");});
test("minősít -> minősí", function() {deepEqual( Stem("minősít"), "minősí");});
test("minősítette -> minősített", function() {deepEqual( Stem("minősítette"), "minősített");});
test("minősítettek -> minősített", function() {deepEqual( Stem("minősítettek"), "minősített");});
test("minősítettem -> minősített", function() {deepEqual( Stem("minősítettem"), "minősített");});
test("minősítették -> minősítette", function() {deepEqual( Stem("minősítették"), "minősítette");});
test("minősíti -> minősít", function() {deepEqual( Stem("minősíti"), "minősít");});
test("minősítsen -> minősíts", function() {deepEqual( Stem("minősítsen"), "minősíts");});
test("minősíthetetlen -> minősíthetetl", function() {deepEqual( Stem("minősíthetetlen"), "minősíthetetl");});
test("minősíthetik -> minősíthet", function() {deepEqual( Stem("minősíthetik"), "minősíthet");});
test("minősíthető -> minősíthető", function() {deepEqual( Stem("minősíthető"), "minősíthető");});
test("minősíthetőek -> minősíthető", function() {deepEqual( Stem("minősíthetőek"), "minősíthető");});
test("minősítve -> minősítv", function() {deepEqual( Stem("minősítve"), "minősítv");});
test("minősítési -> minősítés", function() {deepEqual( Stem("minősítési"), "minősítés");});
test("minősítés -> minősítés", function() {deepEqual( Stem("minősítés"), "minősítés");});
test("minősítése -> minősítés", function() {deepEqual( Stem("minősítése"), "minősítés");});
test("minősítésekor -> minősítés", function() {deepEqual( Stem("minősítésekor"), "minősítés");});
test("minősítéssel -> minősítés", function() {deepEqual( Stem("minősítéssel"), "minősítés");});
test("minősítést -> minősítés", function() {deepEqual( Stem("minősítést"), "minősítés");});
test("minősítéséhez -> minősítés", function() {deepEqual( Stem("minősítéséhez"), "minősítés");});
test("minősítésének -> minősítés", function() {deepEqual( Stem("minősítésének"), "minősítés");});
test("minősítéséről -> minősítés", function() {deepEqual( Stem("minősítéséről"), "minősítés");});
test("minősítését -> minősítés", function() {deepEqual( Stem("minősítését"), "minősítés");});
test("minősítésével -> minősítés", function() {deepEqual( Stem("minősítésével"), "minősítés");});
test("minősítésű -> minősítésű", function() {deepEqual( Stem("minősítésű"), "minősítésű");});
test("minősítő -> minősítő", function() {deepEqual( Stem("minősítő"), "minősítő");});
test("minősítőt -> minősítő", function() {deepEqual( Stem("minősítőt"), "minősítő");});
test("minősölő -> minősölő", function() {deepEqual( Stem("minősölő"), "minősölő");});
test("minősülhet -> minősülh", function() {deepEqual( Stem("minősülhet"), "minősülh");});
test("minősülhetnek -> minősülhet", function() {deepEqual( Stem("minősülhetnek"), "minősülhet");});
test("minősüljön -> minősülj", function() {deepEqual( Stem("minősüljön"), "minősülj");});
test("minősül -> minős", function() {deepEqual( Stem("minősül"), "minős");});
test("minősülnek -> minősül", function() {deepEqual( Stem("minősülnek"), "minősül");});
test("minősülni -> minősüln", function() {deepEqual( Stem("minősülni"), "minősüln");});
test("minűsül -> minűs", function() {deepEqual( Stem("minűsül"), "minűs");});
test("minősült -> minősül", function() {deepEqual( Stem("minősült"), "minősül");});
test("minősültek -> minősült", function() {deepEqual( Stem("minősültek"), "minősült");});
test("minősülve -> minősülv", function() {deepEqual( Stem("minősülve"), "minősülv");});
test("minősülő -> minősülő", function() {deepEqual( Stem("minősülő"), "minősülő");});
test("mio -> mi", function() {deepEqual( Stem("mio"), "mi");});
test("mirelitfogyasztás -> mirelitfogyasztás", function() {deepEqual( Stem("mirelitfogyasztás"), "mirelitfogyasztás");});
test("mirelitgyártás -> mirelitgyártás", function() {deepEqual( Stem("mirelitgyártás"), "mirelitgyártás");});
test("mirelitipar -> mirelitipar", function() {deepEqual( Stem("mirelitipar"), "mirelitipar");});
test("mirelitpiac -> mirelitpiac", function() {deepEqual( Stem("mirelitpiac"), "mirelitpiac");});
test("mirelitárut -> mirelitáru", function() {deepEqual( Stem("mirelitárut"), "mirelitáru");});
test("mirrored -> mirror", function() {deepEqual( Stem("mirrored"), "mirror");});
test("misem -> mis", function() {deepEqual( Stem("misem"), "mis");});
test("miskolci -> miskolc", function() {deepEqual( Stem("miskolci"), "miskolc");});
test("miskolcihoz -> miskolc", function() {deepEqual( Stem("miskolcihoz"), "miskolc");});
test("misszionárius -> misszionárius", function() {deepEqual( Stem("misszionárius"), "misszionárius");});
test("misszionáriussal -> misszionárius", function() {deepEqual( Stem("misszionáriussal"), "misszionárius");});
test("misszionáriusát -> misszionárius", function() {deepEqual( Stem("misszionáriusát"), "misszionárius");});
test("misszióhoz -> misszió", function() {deepEqual( Stem("misszióhoz"), "misszió");});
test("misszióikból -> misszió", function() {deepEqual( Stem("misszióikból"), "misszió");});
test("missziója -> misszió", function() {deepEqual( Stem("missziója"), "misszió");});
test("missziójának -> misszió", function() {deepEqual( Stem("missziójának"), "misszió");});
test("miszerint -> miszerin", function() {deepEqual( Stem("miszerint"), "miszerin");});
test("misztikuma -> misztikum", function() {deepEqual( Stem("misztikuma"), "misztikum");});
test("misztikummal -> misztiku", function() {deepEqual( Stem("misztikummal"), "misztiku");});
test("misztikumát -> misztikum", function() {deepEqual( Stem("misztikumát"), "misztikum");});
test("misztikus -> misztikus", function() {deepEqual( Stem("misztikus"), "misztikus");});
test("misztikusabbá -> misztikusab", function() {deepEqual( Stem("misztikusabbá"), "misztikusab");});
test("misztérium -> misztériu", function() {deepEqual( Stem("misztérium"), "misztériu");});
test("misztériumot -> misztériu", function() {deepEqual( Stem("misztériumot"), "misztériu");});
test("misére -> mis", function() {deepEqual( Stem("misére"), "mis");});
test("mise -> mis", function() {deepEqual( Stem("mise"), "mis");});
test("misét -> mis", function() {deepEqual( Stem("misét"), "mis");});
test("mitológiája -> mitológiá", function() {deepEqual( Stem("mitológiája"), "mitológiá");});
test("mitológiának -> mitológ", function() {deepEqual( Stem("mitológiának"), "mitológ");});
test("mitológiát -> mitológ", function() {deepEqual( Stem("mitológiát"), "mitológ");});
test("mitévő -> mitévő", function() {deepEqual( Stem("mitévő"), "mitévő");});
test("mitőlünk -> mitől", function() {deepEqual( Stem("mitőlünk"), "mitől");});
test("miután -> miut", function() {deepEqual( Stem("miután"), "miut");});
test("mivan -> miv", function() {deepEqual( Stem("mivan"), "miv");});
test("mivelhogy -> mivelhogy", function() {deepEqual( Stem("mivelhogy"), "mivelhogy");});
test("mivelünk -> mivel", function() {deepEqual( Stem("mivelünk"), "mivel");});
test("mivoltuk -> mivolt", function() {deepEqual( Stem("mivoltuk"), "mivolt");});
test("mivoltukat -> mivolt", function() {deepEqual( Stem("mivoltukat"), "mivolt");});
test("mivoltában -> mivolt", function() {deepEqual( Stem("mivoltában"), "mivolt");});
test("mivoltának -> mivolt", function() {deepEqual( Stem("mivoltának"), "mivolt");});
test("mivoltára -> mivolt", function() {deepEqual( Stem("mivoltára"), "mivolt");});
test("mivoltát -> mivolt", function() {deepEqual( Stem("mivoltát"), "mivolt");});
test("mivoltától -> mivolt", function() {deepEqual( Stem("mivoltától"), "mivolt");});
test("mixer -> mixer", function() {deepEqual( Stem("mixer"), "mixer");});
test("mizó -> mizó", function() {deepEqual( Stem("mizó"), "mizó");});
test("miáltal -> miáltal", function() {deepEqual( Stem("miáltal"), "miáltal");});
test("miénk -> mie", function() {deepEqual( Stem("miénk"), "mie");});
test("miénkbe -> mie", function() {deepEqual( Stem("miénkbe"), "mie");});
test("miénkben -> mie", function() {deepEqual( Stem("miénkben"), "mie");});
test("miénket -> mie", function() {deepEqual( Stem("miénket"), "mie");});
test("miénkhez -> mie", function() {deepEqual( Stem("miénkhez"), "mie");});
test("miénknél -> mie", function() {deepEqual( Stem("miénknél"), "mie");});
test("miért -> mi", function() {deepEqual( Stem("miért"), "mi");});
test("miértet -> miért", function() {deepEqual( Stem("miértet"), "miért");});
test("mióta -> miót", function() {deepEqual( Stem("mióta"), "miót");});
test("mm-esre -> mm-es", function() {deepEqual( Stem("mm-esre"), "mm-es");});
test("mniniszterelnöknek -> mninisztereln", function() {deepEqual( Stem("mniniszterelnöknek"), "mninisztereln");});
test("mo -> mo", function() {deepEqual( Stem("mo"), "mo");});
test("mob -> mob", function() {deepEqual( Stem("mob"), "mob");});
test("mobil-atm -> mobil-at", function() {deepEqual( Stem("mobil-atm"), "mobil-at");});
test("mobil-előfizetést -> mobil-előfizetés", function() {deepEqual( Stem("mobil-előfizetést"), "mobil-előfizetés");});
test("mobil-előfizető -> mobil-előfizető", function() {deepEqual( Stem("mobil-előfizető"), "mobil-előfizető");});
test("mobil-szolgáltatóban -> mobil-szolgáltató", function() {deepEqual( Stem("mobil-szolgáltatóban"), "mobil-szolgáltató");});
test("mobilbanki -> mobilban", function() {deepEqual( Stem("mobilbanki"), "mobilban");});
test("mobilbeszélgetések -> mobilbeszélgetés", function() {deepEqual( Stem("mobilbeszélgetések"), "mobilbeszélgetés");});
test("mobileszköz -> mobileszköz", function() {deepEqual( Stem("mobileszköz"), "mobileszköz");});
test("mobileszközök -> mobileszköz", function() {deepEqual( Stem("mobileszközök"), "mobileszköz");});
test("mobileszközökkel -> mobileszköz", function() {deepEqual( Stem("mobileszközökkel"), "mobileszköz");});
test("mobileszközökönhasználható -> mobileszközökönhasználható", function() {deepEqual( Stem("mobileszközökönhasználható"), "mobileszközökönhasználható");});
test("mobilfelügyeleti -> mobilfelügyelet", function() {deepEqual( Stem("mobilfelügyeleti"), "mobilfelügyelet");});
test("mobilhasználók -> mobilhasználó", function() {deepEqual( Stem("mobilhasználók"), "mobilhasználó");});
test("mobilhálózat -> mobilhálóz", function() {deepEqual( Stem("mobilhálózat"), "mobilhálóz");});
test("mobilhálózatok -> mobilhálózat", function() {deepEqual( Stem("mobilhálózatok"), "mobilhálózat");});
test("mobilhálózatokat -> mobilhálózat", function() {deepEqual( Stem("mobilhálózatokat"), "mobilhálózat");});
test("mobilhálózatokba -> mobilhálózat", function() {deepEqual( Stem("mobilhálózatokba"), "mobilhálózat");});
test("mobilinternet-használattal -> mobilinternet-használ", function() {deepEqual( Stem("mobilinternet-használattal"), "mobilinternet-használ");});
test("mobilinternet-hozzáférés -> mobilinternet-hozzáférés", function() {deepEqual( Stem("mobilinternet-hozzáférés"), "mobilinternet-hozzáférés");});
test("mobilinternet-megoldás -> mobilinternet-megoldás", function() {deepEqual( Stem("mobilinternet-megoldás"), "mobilinternet-megoldás");});
test("mobilinternet-szolgáltatást -> mobilinternet-szolgáltatás", function() {deepEqual( Stem("mobilinternet-szolgáltatást"), "mobilinternet-szolgáltatás");});
test("mobilinternetes -> mobilinternetes", function() {deepEqual( Stem("mobilinternetes"), "mobilinternetes");});
test("mobilinternettel -> mobilintern", function() {deepEqual( Stem("mobilinternettel"), "mobilintern");});
test("mobilinternet -> mobilintern", function() {deepEqual( Stem("mobilinternet"), "mobilintern");});
test("mobilitás -> mobilitás", function() {deepEqual( Stem("mobilitás"), "mobilitás");});
test("mobilitáshoz -> mobilitás", function() {deepEqual( Stem("mobilitáshoz"), "mobilitás");});
test("mobilizálható -> mobilizálható", function() {deepEqual( Stem("mobilizálható"), "mobilizálható");});
test("mobilkiállítássá -> mobilkiállítás", function() {deepEqual( Stem("mobilkiállítássá"), "mobilkiállítás");});
test("mobilkommunikációs -> mobilkommunikációs", function() {deepEqual( Stem("mobilkommunikációs"), "mobilkommunikációs");});
test("mobilkommunikációseszközök -> mobilkommunikációseszköz", function() {deepEqual( Stem("mobilkommunikációseszközök"), "mobilkommunikációseszköz");});
test("mobilkommunikációval -> mobilkommunikáció", function() {deepEqual( Stem("mobilkommunikációval"), "mobilkommunikáció");});
test("mobilkészülék-felhasználó -> mobilkészülék-felhasználó", function() {deepEqual( Stem("mobilkészülék-felhasználó"), "mobilkészülék-felhasználó");});
test("mobilkészülékeket -> mobilkészülék", function() {deepEqual( Stem("mobilkészülékeket"), "mobilkészülék");});
test("mobillaboratóriumban -> mobillaboratóriu", function() {deepEqual( Stem("mobillaboratóriumban"), "mobillaboratóriu");});
test("mobillaboratóriumát -> mobillaboratórium", function() {deepEqual( Stem("mobillaboratóriumát"), "mobillaboratórium");});
test("mobillal -> mobil", function() {deepEqual( Stem("mobillal"), "mobil");});
test("mobiljuk -> mobil", function() {deepEqual( Stem("mobiljuk"), "mobil");});
test("mobil -> mobil", function() {deepEqual( Stem("mobil"), "mobil");});
test("mobiloperátorok-ból -> mobiloperátorok-", function() {deepEqual( Stem("mobiloperátorok-ból"), "mobiloperátorok-");});
test("mobilpiac -> mobilpiac", function() {deepEqual( Stem("mobilpiac"), "mobilpiac");});
test("mobilpiacra -> mobilpiac", function() {deepEqual( Stem("mobilpiacra"), "mobilpiac");});
test("mobilportálok -> mobilportál", function() {deepEqual( Stem("mobilportálok"), "mobilportál");});
test("mobilrendszer -> mobilrendszer", function() {deepEqual( Stem("mobilrendszer"), "mobilrendszer");});
test("mobilrendszerek -> mobilrendszer", function() {deepEqual( Stem("mobilrendszerek"), "mobilrendszer");});
test("mobilrendszerekre -> mobilrendszer", function() {deepEqual( Stem("mobilrendszerekre"), "mobilrendszer");});
test("mobilrészlegében -> mobilrészleg", function() {deepEqual( Stem("mobilrészlegében"), "mobilrészleg");});
test("mobilszolgáltatásokra -> mobilszolgáltatás", function() {deepEqual( Stem("mobilszolgáltatásokra"), "mobilszolgáltatás");});
test("mobilszolgáltató -> mobilszolgáltató", function() {deepEqual( Stem("mobilszolgáltató"), "mobilszolgáltató");});
test("mobilszolgáltatók -> mobilszolgáltató", function() {deepEqual( Stem("mobilszolgáltatók"), "mobilszolgáltató");});
test("mobilszolgáltatókban -> mobilszolgáltató", function() {deepEqual( Stem("mobilszolgáltatókban"), "mobilszolgáltató");});
test("mobilszolgáltatóknak -> mobilszolgáltató", function() {deepEqual( Stem("mobilszolgáltatóknak"), "mobilszolgáltató");});
test("mobilszolgáltatónál -> mobilszolgáltató", function() {deepEqual( Stem("mobilszolgáltatónál"), "mobilszolgáltató");});
test("mobilszáma -> mobilszám", function() {deepEqual( Stem("mobilszáma"), "mobilszám");});
test("mobiltechnológia -> mobiltechnológ", function() {deepEqual( Stem("mobiltechnológia"), "mobiltechnológ");});
test("mobiltechnológiáról -> mobiltechnológ", function() {deepEqual( Stem("mobiltechnológiáról"), "mobiltechnológ");});
test("mobiltelefon-előfizető -> mobiltelefon-előfizető", function() {deepEqual( Stem("mobiltelefon-előfizető"), "mobiltelefon-előfizető");});
test("mobiltelefon-előfizetők -> mobiltelefon-előfizető", function() {deepEqual( Stem("mobiltelefon-előfizetők"), "mobiltelefon-előfizető");});
test("mobiltelefon-használó -> mobiltelefon-használó", function() {deepEqual( Stem("mobiltelefon-használó"), "mobiltelefon-használó");});
test("mobiltelefon-használók -> mobiltelefon-használó", function() {deepEqual( Stem("mobiltelefon-használók"), "mobiltelefon-használó");});
test("mobiltelefon-piacon -> mobiltelefon-piac", function() {deepEqual( Stem("mobiltelefon-piacon"), "mobiltelefon-piac");});
test("mobiltelefon-szolgáltatóját -> mobiltelefon-szolgáltató", function() {deepEqual( Stem("mobiltelefon-szolgáltatóját"), "mobiltelefon-szolgáltató");});
test("mobiltelefon-társaságok -> mobiltelefon-társaság", function() {deepEqual( Stem("mobiltelefon-társaságok"), "mobiltelefon-társaság");});
test("mobiltelefon-üzletágát -> mobiltelefon-üzletág", function() {deepEqual( Stem("mobiltelefon-üzletágát"), "mobiltelefon-üzletág");});
test("mobiltelefonba -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonba"), "mobiltelefon");});
test("mobiltelefon -> mobiltelef", function() {deepEqual( Stem("mobiltelefon"), "mobiltelef");});
test("mobiltelefonban -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonban"), "mobiltelefon");});
test("mobiltelefonján -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonján"), "mobiltelefon");});
test("mobiltelefonját -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonját"), "mobiltelefon");});
test("mobiltelefonok -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonok"), "mobiltelefon");});
test("mobiltelefonokban -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonokban"), "mobiltelefon");});
test("mobiltelefonokkal -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonokkal"), "mobiltelefon");});
test("mobiltelefonokon -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonokon"), "mobiltelefon");});
test("mobiltelefonokra -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonokra"), "mobiltelefon");});
test("mobiltelefonon -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonon"), "mobiltelefon");});
test("mobiltelefonra -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonra"), "mobiltelefon");});
test("mobiltelefonról -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonról"), "mobiltelefon");});
test("mobiltelefont -> mobiltelefon", function() {deepEqual( Stem("mobiltelefont"), "mobiltelefon");});
test("mobiltelefonunkba -> mobiltelefon", function() {deepEqual( Stem("mobiltelefonunkba"), "mobiltelefon");});
test("mobiltelefonos -> mobiltelefonos", function() {deepEqual( Stem("mobiltelefonos"), "mobiltelefonos");});
test("mobiltelefónia -> mobiltelefón", function() {deepEqual( Stem("mobiltelefónia"), "mobiltelefón");});
test("mobiltelefóniában -> mobiltelefón", function() {deepEqual( Stem("mobiltelefóniában"), "mobiltelefón");});
test("mobiltelefóniás -> mobiltelefóniás", function() {deepEqual( Stem("mobiltelefóniás"), "mobiltelefóniás");});
test("mobiltársaság -> mobiltársaság", function() {deepEqual( Stem("mobiltársaság"), "mobiltársaság");});
test("mobiltársaságban -> mobiltársaság", function() {deepEqual( Stem("mobiltársaságban"), "mobiltársaság");});
test("mobiltávközlési -> mobiltávközlés", function() {deepEqual( Stem("mobiltávközlési"), "mobiltávközlés");});
test("mobiltávközlő -> mobiltávközlő", function() {deepEqual( Stem("mobiltávközlő"), "mobiltávközlő");});
test("moccanás -> moccanás", function() {deepEqual( Stem("moccanás"), "moccanás");});
test("moche -> moch", function() {deepEqual( Stem("moche"), "moch");});
test("mocsaras -> mocsaras", function() {deepEqual( Stem("mocsaras"), "mocsaras");});
test("mocskolták -> mocskolta", function() {deepEqual( Stem("mocskolták"), "mocskolta");});
test("mocskolódások -> mocskolódás", function() {deepEqual( Stem("mocskolódások"), "mocskolódás");});
test("mocskolója -> mocskoló", function() {deepEqual( Stem("mocskolója"), "mocskoló");});
test("mocskos -> mocskos", function() {deepEqual( Stem("mocskos"), "mocskos");});
test("mocskosak -> mocskos", function() {deepEqual( Stem("mocskosak"), "mocskos");});
test("mocskossága -> mocskosság", function() {deepEqual( Stem("mocskossága"), "mocskosság");});
test("mocskot -> mocs", function() {deepEqual( Stem("mocskot"), "mocs");});
test("mocsok -> mocs", function() {deepEqual( Stem("mocsok"), "mocs");});
test("mocsoktól -> mocs", function() {deepEqual( Stem("mocsoktól"), "mocs");});
test("mocsokízű -> mocsokízű", function() {deepEqual( Stem("mocsokízű"), "mocsokízű");});
test("mocsárba -> mocsár", function() {deepEqual( Stem("mocsárba"), "mocsár");});
test("mocsárhoz -> mocsár", function() {deepEqual( Stem("mocsárhoz"), "mocsár");});
test("mocsárt -> mocsár", function() {deepEqual( Stem("mocsárt"), "mocsár");});
test("motoroznék -> motorozne", function() {deepEqual( Stem("motoroznék"), "motorozne");});
test("motorozás -> motorozás", function() {deepEqual( Stem("motorozás"), "motorozás");});
test("motorozást -> motorozás", function() {deepEqual( Stem("motorozást"), "motorozás");});
test("motorozó -> motorozó", function() {deepEqual( Stem("motorozó"), "motorozó");});
test("motorsport -> motorspor", function() {deepEqual( Stem("motorsport"), "motorspor");});
test("motortárcsát -> motortárcs", function() {deepEqual( Stem("motortárcsát"), "motortárcs");});
test("motortérben -> motortér", function() {deepEqual( Stem("motortérben"), "motortér");});
test("motorvezérlő -> motorvezérlő", function() {deepEqual( Stem("motorvezérlő"), "motorvezérlő");});
test("motorvonaton -> motorvonat", function() {deepEqual( Stem("motorvonaton"), "motorvonat");});
test("motorzúgást -> motorzúgás", function() {deepEqual( Stem("motorzúgást"), "motorzúgás");});
test("motoscafon -> motoscaf", function() {deepEqual( Stem("motoscafon"), "motoscaf");});
test("motoszkált -> motoszkál", function() {deepEqual( Stem("motoszkált"), "motoszkál");});
test("motozni -> motozn", function() {deepEqual( Stem("motozni"), "motozn");});
test("motyogott -> motyogot", function() {deepEqual( Stem("motyogott"), "motyogot");});
test("motyogta -> motyogt", function() {deepEqual( Stem("motyogta"), "motyogt");});
test("motívum -> motívu", function() {deepEqual( Stem("motívum"), "motívu");});
test("motívumai -> motívum", function() {deepEqual( Stem("motívumai"), "motívum");});
test("motívumait -> motívum", function() {deepEqual( Stem("motívumait"), "motívum");});
test("motívumok -> motívum", function() {deepEqual( Stem("motívumok"), "motívum");});
test("mozaik -> moz", function() {deepEqual( Stem("mozaik"), "moz");});
test("mozaikjával -> moz", function() {deepEqual( Stem("mozaikjával"), "moz");});
test("mozaikok -> mozaik", function() {deepEqual( Stem("mozaikok"), "mozaik");});
test("mozaikokat -> mozaik", function() {deepEqual( Stem("mozaikokat"), "mozaik");});
test("mozaikot -> moz", function() {deepEqual( Stem("mozaikot"), "moz");});
test("mozaikkockákat -> mozaikkocka", function() {deepEqual( Stem("mozaikkockákat"), "mozaikkocka");});
test("mozaikszerű -> mozaikszerű", function() {deepEqual( Stem("mozaikszerű"), "mozaikszerű");});
test("mozaikszó -> mozaikszó", function() {deepEqual( Stem("mozaikszó"), "mozaikszó");});
test("mozaikváltozata -> mozaikváltozat", function() {deepEqual( Stem("mozaikváltozata"), "mozaikváltozat");});
test("mozdony -> mozdony", function() {deepEqual( Stem("mozdony"), "mozdony");});
test("mozdonyvezető -> mozdonyvezető", function() {deepEqual( Stem("mozdonyvezető"), "mozdonyvezető");});
test("mozdonyvezetők -> mozdonyvezető", function() {deepEqual( Stem("mozdonyvezetők"), "mozdonyvezető");});
test("mozdonyvezetőknek -> mozdonyvezető", function() {deepEqual( Stem("mozdonyvezetőknek"), "mozdonyvezető");});
test("mozdonyvezetővel -> mozdonyvezető", function() {deepEqual( Stem("mozdonyvezetővel"), "mozdonyvezető");});
test("mozdulat -> mozdul", function() {deepEqual( Stem("mozdulat"), "mozdul");});
test("mozdulata -> mozdulat", function() {deepEqual( Stem("mozdulata"), "mozdulat");});
test("mozdulatai -> mozdulat", function() {deepEqual( Stem("mozdulatai"), "mozdulat");});
test("mozdulataiban -> mozdulat", function() {deepEqual( Stem("mozdulataiban"), "mozdulat");});
test("mozdulataival -> mozdulat", function() {deepEqual( Stem("mozdulataival"), "mozdulat");});
test("mozdulatnak -> mozdulat", function() {deepEqual( Stem("mozdulatnak"), "mozdulat");});
test("mozdulatok -> mozdulat", function() {deepEqual( Stem("mozdulatok"), "mozdulat");});
test("mozdulatokkal -> mozdulat", function() {deepEqual( Stem("mozdulatokkal"), "mozdulat");});
test("mozdulatot -> mozdulat", function() {deepEqual( Stem("mozdulatot"), "mozdulat");});
test("mozdulattal -> mozdul", function() {deepEqual( Stem("mozdulattal"), "mozdul");});
test("mozdulatuk -> mozdulat", function() {deepEqual( Stem("mozdulatuk"), "mozdulat");});
test("mozdulatában -> mozdulat", function() {deepEqual( Stem("mozdulatában"), "mozdulat");});
test("mozdulatára -> mozdulat", function() {deepEqual( Stem("mozdulatára"), "mozdulat");});
test("mozdulatát -> mozdulat", function() {deepEqual( Stem("mozdulatát"), "mozdulat");});
test("mozdulatával -> mozdulat", function() {deepEqual( Stem("mozdulatával"), "mozdulat");});
test("mozdulatlanságában -> mozdulatlanság", function() {deepEqual( Stem("mozdulatlanságában"), "mozdulatlanság");});
test("mozdulatlanságával -> mozdulatlanság", function() {deepEqual( Stem("mozdulatlanságával"), "mozdulatlanság");});
test("mozdulatlan -> mozdulatl", function() {deepEqual( Stem("mozdulatlan"), "mozdulatl");});
test("mozdulatlanul -> mozdulatlan", function() {deepEqual( Stem("mozdulatlanul"), "mozdulatlan");});
test("mozdulatsor -> mozdulatsor", function() {deepEqual( Stem("mozdulatsor"), "mozdulatsor");});
test("mozdulatsorok -> mozdulatsor", function() {deepEqual( Stem("mozdulatsorok"), "mozdulatsor");});
test("mozdulhattak -> mozdulhatt", function() {deepEqual( Stem("mozdulhattak"), "mozdulhatt");});
test("mozdulj -> mozdulj", function() {deepEqual( Stem("mozdulj"), "mozdulj");});
test("mozduljon -> mozdulj", function() {deepEqual( Stem("mozduljon"), "mozdulj");});
test("mozdulna -> mozduln", function() {deepEqual( Stem("mozdulna"), "mozduln");});
test("mozdulni -> mozduln", function() {deepEqual( Stem("mozdulni"), "mozduln");});
test("mozdulok -> mozdul", function() {deepEqual( Stem("mozdulok"), "mozdul");});
test("mozdultak -> mozdult", function() {deepEqual( Stem("mozdultak"), "mozdult");});
test("mozdultam -> mozdult", function() {deepEqual( Stem("mozdultam"), "mozdult");});
test("mozdul -> moz", function() {deepEqual( Stem("mozdul"), "moz");});
test("mozdult -> mozdul", function() {deepEqual( Stem("mozdult"), "mozdul");});
test("mozduló -> mozduló", function() {deepEqual( Stem("mozduló"), "mozduló");});
test("mozdíthatatlanul -> mozdíthatatlan", function() {deepEqual( Stem("mozdíthatatlanul"), "mozdíthatatlan");});
test("mozdíthatja -> mozdíthat", function() {deepEqual( Stem("mozdíthatja"), "mozdíthat");});
test("mozdítja -> mozdít", function() {deepEqual( Stem("mozdítja"), "mozdít");});
test("mozdítani -> mozdítan", function() {deepEqual( Stem("mozdítani"), "mozdítan");});
test("mozdította -> mozdított", function() {deepEqual( Stem("mozdította"), "mozdított");});
test("mozdították -> mozdította", function() {deepEqual( Stem("mozdították"), "mozdította");});
test("mozgalmak -> mozgalm", function() {deepEqual( Stem("mozgalmak"), "mozgalm");});
test("mozgalmakban -> mozgalm", function() {deepEqual( Stem("mozgalmakban"), "mozgalm");});
test("mozgalmaknak -> mozgalm", function() {deepEqual( Stem("mozgalmaknak"), "mozgalm");});
test("mozgalmas -> mozgalmas", function() {deepEqual( Stem("mozgalmas"), "mozgalmas");});
test("mozgalmasak -> mozgalmas", function() {deepEqual( Stem("mozgalmasak"), "mozgalmas");});
test("mozgalom -> mozgal", function() {deepEqual( Stem("mozgalom"), "mozgal");});
test("mozgalomban -> mozgal", function() {deepEqual( Stem("mozgalomban"), "mozgal");});
test("mozgalomból -> mozgal", function() {deepEqual( Stem("mozgalomból"), "mozgal");});
test("mozgalomhoz -> mozgal", function() {deepEqual( Stem("mozgalomhoz"), "mozgal");});
test("mozgalommá -> mozgal", function() {deepEqual( Stem("mozgalommá"), "mozgal");});
test("mozgat -> mozg", function() {deepEqual( Stem("mozgat"), "mozg");});
test("mozgatja -> mozgat", function() {deepEqual( Stem("mozgatja"), "mozgat");});
test("mozgatjuk -> mozgat", function() {deepEqual( Stem("mozgatjuk"), "mozgat");});
test("mozgatják -> mozgatja", function() {deepEqual( Stem("mozgatják"), "mozgatja");});
test("mozgatni -> mozgatn", function() {deepEqual( Stem("mozgatni"), "mozgatn");});
test("mozgatta -> mozgatt", function() {deepEqual( Stem("mozgatta"), "mozgatt");});
test("mozgatva -> mozgatv", function() {deepEqual( Stem("mozgatva"), "mozgatv");});
test("mozgatása -> mozgatás", function() {deepEqual( Stem("mozgatása"), "mozgatás");});
test("mozgatásnak -> mozgatás", function() {deepEqual( Stem("mozgatásnak"), "mozgatás");});
test("mozgatásával -> mozgatás", function() {deepEqual( Stem("mozgatásával"), "mozgatás");});
test("mozgató -> mozgató", function() {deepEqual( Stem("mozgató"), "mozgató");});
test("mozgatójáról -> mozgató", function() {deepEqual( Stem("mozgatójáról"), "mozgató");});
test("mozgolódtak -> mozgolódt", function() {deepEqual( Stem("mozgolódtak"), "mozgolódt");});
test("mozgolódás -> mozgolódás", function() {deepEqual( Stem("mozgolódás"), "mozgolódás");});
test("mozgás -> mozgás", function() {deepEqual( Stem("mozgás"), "mozgás");});
test("mozgása -> mozgás", function() {deepEqual( Stem("mozgása"), "mozgás");});
test("mozgásba -> mozgás", function() {deepEqual( Stem("mozgásba"), "mozgás");});
test("mozgásban -> mozgás", function() {deepEqual( Stem("mozgásban"), "mozgás");});
test("mozgásnak -> mozgás", function() {deepEqual( Stem("mozgásnak"), "mozgás");});
test("mozgások -> mozgás", function() {deepEqual( Stem("mozgások"), "mozgás");});
test("mozgásokat -> mozgás", function() {deepEqual( Stem("mozgásokat"), "mozgás");});
test("mozgással -> mozgás", function() {deepEqual( Stem("mozgással"), "mozgás");});
test("mozgást -> mozgás", function() {deepEqual( Stem("mozgást"), "mozgás");});
test("mozgásuk -> mozgás", function() {deepEqual( Stem("mozgásuk"), "mozgás");});
test("mozgásáról -> mozgás", function() {deepEqual( Stem("mozgásáról"), "mozgás");});
test("mozgását -> mozgás", function() {deepEqual( Stem("mozgását"), "mozgás");});
test("mozgásától -> mozgás", function() {deepEqual( Stem("mozgásától"), "mozgás");});
test("mozgásformák -> mozgásforma", function() {deepEqual( Stem("mozgásformák"), "mozgásforma");});
test("mozgási -> mozgás", function() {deepEqual( Stem("mozgási"), "mozgás");});
test("mozgásigényünket -> mozgásigény", function() {deepEqual( Stem("mozgásigényünket"), "mozgásigény");});
test("mozgáskorlátozott -> mozgáskorlátozot", function() {deepEqual( Stem("mozgáskorlátozott"), "mozgáskorlátozot");});
test("mozgásképes -> mozgásképes", function() {deepEqual( Stem("mozgásképes"), "mozgásképes");});
test("mozgásközpont -> mozgásközpon", function() {deepEqual( Stem("mozgásközpont"), "mozgásközpon");});
test("mozgáslépcsőn -> mozgáslépcső", function() {deepEqual( Stem("mozgáslépcsőn"), "mozgáslépcső");});
test("mozgásszínházi -> mozgásszínház", function() {deepEqual( Stem("mozgásszínházi"), "mozgásszínház");});
test("mozgástanár -> mozgástanár", function() {deepEqual( Stem("mozgástanár"), "mozgástanár");});
test("mozgástere -> mozgást", function() {deepEqual( Stem("mozgástere"), "mozgást");});
test("mozgásteret -> mozgáster", function() {deepEqual( Stem("mozgásteret"), "mozgáster");});
test("mozgású -> mozgású", function() {deepEqual( Stem("mozgású"), "mozgású");});
test("mozgékony -> mozgékony", function() {deepEqual( Stem("mozgékony"), "mozgékony");});
test("mozgékonyabbak -> mozgékonyabb", function() {deepEqual( Stem("mozgékonyabbak"), "mozgékonyabb");});
test("mozgó -> mozgó", function() {deepEqual( Stem("mozgó"), "mozgó");});
test("mozgógépes -> mozgógépes", function() {deepEqual( Stem("mozgógépes"), "mozgógépes");});
test("mozgókonyhákat -> mozgókonyha", function() {deepEqual( Stem("mozgókonyhákat"), "mozgókonyha");});
test("mozgókép -> mozgókép", function() {deepEqual( Stem("mozgókép"), "mozgókép");});
test("mozgóképek -> mozgókép", function() {deepEqual( Stem("mozgóképek"), "mozgókép");});
test("mozgóképet -> mozgókép", function() {deepEqual( Stem("mozgóképet"), "mozgókép");});
test("mozgóképes -> mozgóképes", function() {deepEqual( Stem("mozgóképes"), "mozgóképes");});
test("mozgóképi -> mozgókép", function() {deepEqual( Stem("mozgóképi"), "mozgókép");});
test("mozgóképkészítésre -> mozgóképkészítés", function() {deepEqual( Stem("mozgóképkészítésre"), "mozgóképkészítés");});
test("mozgóképszerkesztő -> mozgóképszerkesztő", function() {deepEqual( Stem("mozgóképszerkesztő"), "mozgóképszerkesztő");});
test("mozgóképszínház -> mozgóképszínház", function() {deepEqual( Stem("mozgóképszínház"), "mozgóképszínház");});
test("mozgólépcsőn -> mozgólépcső", function() {deepEqual( Stem("mozgólépcsőn"), "mozgólépcső");});
test("mozgósítanak -> mozgósít", function() {deepEqual( Stem("mozgósítanak"), "mozgósít");});
test("mozgósítani -> mozgósítan", function() {deepEqual( Stem("mozgósítani"), "mozgósítan");});
test("mozgósították -> mozgósította", function() {deepEqual( Stem("mozgósították"), "mozgósította");});
test("mozgósításával -> mozgósítás", function() {deepEqual( Stem("mozgósításával"), "mozgósítás");});
test("mozgósító -> mozgósító", function() {deepEqual( Stem("mozgósító"), "mozgósító");});
test("mozi -> moz", function() {deepEqual( Stem("mozi"), "moz");});
test("moziba -> moz", function() {deepEqual( Stem("moziba"), "moz");});
test("moziban -> moz", function() {deepEqual( Stem("moziban"), "moz");});
test("moziból -> moz", function() {deepEqual( Stem("moziból"), "moz");});
test("mozik -> moz", function() {deepEqual( Stem("mozik"), "moz");});
test("mozihoz -> moz", function() {deepEqual( Stem("mozihoz"), "moz");});
test("mozikban -> moz", function() {deepEqual( Stem("mozikban"), "moz");});
test("mozira -> moz", function() {deepEqual( Stem("mozira"), "moz");});
test("mozit -> moz", function() {deepEqual( Stem("mozit"), "moz");});
test("mozifilm -> mozifil", function() {deepEqual( Stem("mozifilm"), "mozifil");});
test("moziforgalmazási -> moziforgalmazás", function() {deepEqual( Stem("moziforgalmazási"), "moziforgalmazás");});
test("mozigyár -> mozigyár", function() {deepEqual( Stem("mozigyár"), "mozigyár");});
test("mozijegy -> mozijegy", function() {deepEqual( Stem("mozijegy"), "mozijegy");});
test("mozijegyeket -> mozijegy", function() {deepEqual( Stem("mozijegyeket"), "mozijegy");});
test("mozilátogatók -> mozilátogató", function() {deepEqual( Stem("mozilátogatók"), "mozilátogató");});
test("moziműsor -> moziműsor", function() {deepEqual( Stem("moziműsor"), "moziműsor");});
test("moziműsort -> moziműsor", function() {deepEqual( Stem("moziműsort"), "moziműsor");});
test("mozinézők -> mozinéző", function() {deepEqual( Stem("mozinézők"), "mozinéző");});
test("mozipremier -> mozipremier", function() {deepEqual( Stem("mozipremier"), "mozipremier");});
test("mozivállalkozó -> mozivállalkozó", function() {deepEqual( Stem("mozivállalkozó"), "mozivállalkozó");});
test("mozivásznon -> mozivászn", function() {deepEqual( Stem("mozivásznon"), "mozivászn");});
test("moziüzemeltető -> moziüzemeltető", function() {deepEqual( Stem("moziüzemeltető"), "moziüzemeltető");});
test("moziüzemeltetőknek -> moziüzemeltető", function() {deepEqual( Stem("moziüzemeltetőknek"), "moziüzemeltető");});
test("mozlimok -> mozlim", function() {deepEqual( Stem("mozlimok"), "mozlim");});
test("mozgott -> mozgot", function() {deepEqual( Stem("mozgott"), "mozgot");});
test("mozog -> mozog", function() {deepEqual( Stem("mozog"), "mozog");});
test("mozgok -> mozg", function() {deepEqual( Stem("mozgok"), "mozg");});
test("mozgunk -> mozg", function() {deepEqual( Stem("mozgunk"), "mozg");});
test("mozogjanak -> mozog", function() {deepEqual( Stem("mozogjanak"), "mozog");});
test("mozogjon -> mozogj", function() {deepEqual( Stem("mozogjon"), "mozogj");});
test("mozognak -> mozog", function() {deepEqual( Stem("mozognak"), "mozog");});
test("mozogni -> mozogn", function() {deepEqual( Stem("mozogni"), "mozogn");});
test("mozogtak -> mozogt", function() {deepEqual( Stem("mozogtak"), "mozogt");});
test("mozoghat -> mozogh", function() {deepEqual( Stem("mozoghat"), "mozogh");});
test("mozzanata -> mozzanat", function() {deepEqual( Stem("mozzanata"), "mozzanat");});
test("mozzanatai -> mozzanat", function() {deepEqual( Stem("mozzanatai"), "mozzanat");});
test("mozzanatnak -> mozzanat", function() {deepEqual( Stem("mozzanatnak"), "mozzanat");});
test("mozzanatot -> mozzanat", function() {deepEqual( Stem("mozzanatot"), "mozzanat");});
test("mozzanattal -> mozzan", function() {deepEqual( Stem("mozzanattal"), "mozzan");});
test("mozzanatára -> mozzanat", function() {deepEqual( Stem("mozzanatára"), "mozzanat");});
test("mozzanatával -> mozzanat", function() {deepEqual( Stem("mozzanatával"), "mozzanat");});
test("muattta -> muattt", function() {deepEqual( Stem("muattta"), "muattt");});
test("mukkot -> muk", function() {deepEqual( Stem("mukkot"), "muk");});
test("mulandóság -> mulandóság", function() {deepEqual( Stem("mulandóság"), "mulandóság");});
test("mulandóságot -> mulandóság", function() {deepEqual( Stem("mulandóságot"), "mulandóság");});
test("mulasszátok -> mulasszát", function() {deepEqual( Stem("mulasszátok"), "mulasszát");});
test("mulasztanak -> mulaszt", function() {deepEqual( Stem("mulasztanak"), "mulaszt");});
test("mulasztotta -> mulasztott", function() {deepEqual( Stem("mulasztotta"), "mulasztott");});
test("mulasztottam -> mulasztott", function() {deepEqual( Stem("mulasztottam"), "mulasztott");});
test("mulasztották -> mulasztotta", function() {deepEqual( Stem("mulasztották"), "mulasztotta");});
test("mulaszt -> mulasz", function() {deepEqual( Stem("mulaszt"), "mulasz");});
test("mulaszthatom -> mulaszthat", function() {deepEqual( Stem("mulaszthatom"), "mulaszthat");});
test("mulasztás -> mulasztás", function() {deepEqual( Stem("mulasztás"), "mulasztás");});
test("mulasztásban -> mulasztás", function() {deepEqual( Stem("mulasztásban"), "mulasztás");});
test("mulasztásból -> mulasztás", function() {deepEqual( Stem("mulasztásból"), "mulasztás");});
test("mulasztásnál -> mulasztás", function() {deepEqual( Stem("mulasztásnál"), "mulasztás");});
test("mulasztással -> mulasztás", function() {deepEqual( Stem("mulasztással"), "mulasztás");});
test("mulasztásának -> mulasztás", function() {deepEqual( Stem("mulasztásának"), "mulasztás");});
test("mulasztásánál -> mulasztás", function() {deepEqual( Stem("mulasztásánál"), "mulasztás");});
test("mulasztásáért -> mulasztás", function() {deepEqual( Stem("mulasztásáért"), "mulasztás");});
test("mulasztási -> mulasztás", function() {deepEqual( Stem("mulasztási"), "mulasztás");});
test("mulasztásos -> mulasztásos", function() {deepEqual( Stem("mulasztásos"), "mulasztásos");});
test("mulasztó -> mulasztó", function() {deepEqual( Stem("mulasztó"), "mulasztó");});
test("mulathatnánk -> mulathatna", function() {deepEqual( Stem("mulathatnánk"), "mulathatna");});
test("mulathattunk -> mulathatt", function() {deepEqual( Stem("mulathattunk"), "mulathatt");});
test("mulatna -> mulatn", function() {deepEqual( Stem("mulatna"), "mulatn");});
test("mulat -> mul", function() {deepEqual( Stem("mulat"), "mul");});
test("mulatnak -> mulat", function() {deepEqual( Stem("mulatnak"), "mulat");});
test("mulatni -> mulatn", function() {deepEqual( Stem("mulatni"), "mulatn");});
test("mulattak -> mulatt", function() {deepEqual( Stem("mulattak"), "mulatt");});
test("mulattat -> mulatt", function() {deepEqual( Stem("mulattat"), "mulatt");});
test("mulattatta -> mulattatt", function() {deepEqual( Stem("mulattatta"), "mulattatt");});
test("mulatott -> mulatot", function() {deepEqual( Stem("mulatott"), "mulatot");});
test("mulatozott -> mulatozot", function() {deepEqual( Stem("mulatozott"), "mulatozot");});
test("mulatozáshoz -> mulatozás", function() {deepEqual( Stem("mulatozáshoz"), "mulatozás");});
test("mulatozást -> mulatozás", function() {deepEqual( Stem("mulatozást"), "mulatozás");});
test("mulatság -> mulatság", function() {deepEqual( Stem("mulatság"), "mulatság");});
test("mulatságnak -> mulatság", function() {deepEqual( Stem("mulatságnak"), "mulatság");});
test("mulatságot -> mulatság", function() {deepEqual( Stem("mulatságot"), "mulatság");});
test("mulatságos -> mulatságos", function() {deepEqual( Stem("mulatságos"), "mulatságos");});
test("mulatt -> mulat", function() {deepEqual( Stem("mulatt"), "mulat");});
test("mulattam -> mulatt", function() {deepEqual( Stem("mulattam"), "mulatt");});
test("mulattunk -> mulatt", function() {deepEqual( Stem("mulattunk"), "mulatt");});
test("mulatásra -> mulatás", function() {deepEqual( Stem("mulatásra"), "mulatás");});
test("mulatós -> mulatós", function() {deepEqual( Stem("mulatós"), "mulatós");});
test("mullah -> mullah", function() {deepEqual( Stem("mullah"), "mullah");});
test("multi -> mult", function() {deepEqual( Stem("multi"), "mult");});
test("multiból -> mult", function() {deepEqual( Stem("multiból"), "mult");});
test("multik -> mult", function() {deepEqual( Stem("multik"), "mult");});
test("multiknak -> mult", function() {deepEqual( Stem("multiknak"), "mult");});
test("multifunkciós -> multifunkciós", function() {deepEqual( Stem("multifunkciós"), "multifunkciós");});
test("multikulturalizmus -> multikulturalizmus", function() {deepEqual( Stem("multikulturalizmus"), "multikulturalizmus");});
test("multilaterális -> multilaterális", function() {deepEqual( Stem("multilaterális"), "multilaterális");});
test("multilink -> multil", function() {deepEqual( Stem("multilink"), "multil");});
test("multimediális -> multimediális", function() {deepEqual( Stem("multimediális"), "multimediális");});
test("multimilliomos -> multimilliomos", function() {deepEqual( Stem("multimilliomos"), "multimilliomos");});
test("multimédia-alkalmazások -> multimédia-alkalmazás", function() {deepEqual( Stem("multimédia-alkalmazások"), "multimédia-alkalmazás");});
test("multimédia-beszélgetés -> multimédia-beszélgetés", function() {deepEqual( Stem("multimédia-beszélgetés"), "multimédia-beszélgetés");});
test("multimédia-készülékek -> multimédia-készülék", function() {deepEqual( Stem("multimédia-készülékek"), "multimédia-készülék");});
test("multimédia-terminálok -> multimédia-terminál", function() {deepEqual( Stem("multimédia-terminálok"), "multimédia-terminál");});
test("multimédia-terminálokat -> multimédia-terminál", function() {deepEqual( Stem("multimédia-terminálokat"), "multimédia-terminál");});
test("multimédia-terminálokhoz -> multimédia-terminál", function() {deepEqual( Stem("multimédia-terminálokhoz"), "multimédia-terminál");});
test("multimédia-üzletágra -> multimédia-üzletág", function() {deepEqual( Stem("multimédia-üzletágra"), "multimédia-üzletág");});
test("multimédiában -> multiméd", function() {deepEqual( Stem("multimédiában"), "multiméd");});
test("multimédia -> multiméd", function() {deepEqual( Stem("multimédia"), "multiméd");});
test("multimédiával -> multiméd", function() {deepEqual( Stem("multimédiával"), "multiméd");});
test("multimédiás -> multimédiás", function() {deepEqual( Stem("multimédiás"), "multimédiás");});
test("multimódusú -> multimódusú", function() {deepEqual( Stem("multimódusú"), "multimódusú");});
test("multinacionális -> multinacionális", function() {deepEqual( Stem("multinacionális"), "multinacionális");});
test("multinacionálisok -> multinacionális", function() {deepEqual( Stem("multinacionálisok"), "multinacionális");});
test("multiplex -> multiplex", function() {deepEqual( Stem("multiplex"), "multiplex");});
test("multiplexelt -> multiplexel", function() {deepEqual( Stem("multiplexelt"), "multiplexel");});
test("multán -> mult", function() {deepEqual( Stem("multán"), "mult");});
test("mumifikált -> mumifikál", function() {deepEqual( Stem("mumifikált"), "mumifikál");});
test("munkaadó -> munkaadó", function() {deepEqual( Stem("munkaadó"), "munkaadó");});
test("munkaadók -> munkaadó", function() {deepEqual( Stem("munkaadók"), "munkaadó");});
test("munkaadóknak -> munkaadó", function() {deepEqual( Stem("munkaadóknak"), "munkaadó");});
test("munkaasztal -> munkaasztal", function() {deepEqual( Stem("munkaasztal"), "munkaasztal");});
test("munkaasztalomról -> munkaasztal", function() {deepEqual( Stem("munkaasztalomról"), "munkaasztal");});
test("munkabefektetéssel -> munkabefektetés", function() {deepEqual( Stem("munkabefektetéssel"), "munkabefektetés");});
test("munkabeszüntetés -> munkabeszüntetés", function() {deepEqual( Stem("munkabeszüntetés"), "munkabeszüntetés");});
test("munkabeszüntetéshez -> munkabeszüntetés", function() {deepEqual( Stem("munkabeszüntetéshez"), "munkabeszüntetés");});
test("munkabeszüntetést -> munkabeszüntetés", function() {deepEqual( Stem("munkabeszüntetést"), "munkabeszüntetés");});
test("munkabérköltségek -> munkabérköltség", function() {deepEqual( Stem("munkabérköltségek"), "munkabérköltség");});
test("munkabérét -> munkabér", function() {deepEqual( Stem("munkabérét"), "munkabér");});
test("munkabér -> munkabér", function() {deepEqual( Stem("munkabér"), "munkabér");});
test("munkabírását -> munkabírás", function() {deepEqual( Stem("munkabírását"), "munkabírás");});
test("munkacsoport-kiszolgáló -> munkacsoport-kiszolgáló", function() {deepEqual( Stem("munkacsoport-kiszolgáló"), "munkacsoport-kiszolgáló");});
test("munkacsoport-szervezésű -> munkacsoport-szervezésű", function() {deepEqual( Stem("munkacsoport-szervezésű"), "munkacsoport-szervezésű");});
test("munkacsoport-tagság -> munkacsoport-tagság", function() {deepEqual( Stem("munkacsoport-tagság"), "munkacsoport-tagság");});
test("munkacsoportbeli -> munkacsoportbel", function() {deepEqual( Stem("munkacsoportbeli"), "munkacsoportbel");});
test("munkacsoportjának -> munkacsoport", function() {deepEqual( Stem("munkacsoportjának"), "munkacsoport");});
test("munkacsoportnak -> munkacsoport", function() {deepEqual( Stem("munkacsoportnak"), "munkacsoport");});
test("munkacsoportnak -> munkacsoport", function() {deepEqual( Stem("munkacsoportnak"), "munkacsoport");});
test("munkacsoportok -> munkacsoport", function() {deepEqual( Stem("munkacsoportok"), "munkacsoport");});
test("munkacsoportokon -> munkacsoport", function() {deepEqual( Stem("munkacsoportokon"), "munkacsoport");});
test("munkacsoporton -> munkacsoport", function() {deepEqual( Stem("munkacsoporton"), "munkacsoport");});
test("munkacsoport -> munkacsopor", function() {deepEqual( Stem("munkacsoport"), "munkacsopor");});
test("munkacsoportban -> munkacsoport", function() {deepEqual( Stem("munkacsoportban"), "munkacsoport");});
test("munkacsoportunkban -> munkacsoport", function() {deepEqual( Stem("munkacsoportunkban"), "munkacsoport");});
test("munkacsoportos -> munkacsoportos", function() {deepEqual( Stem("munkacsoportos"), "munkacsoportos");});
test("munkadarab -> munkadarab", function() {deepEqual( Stem("munkadarab"), "munkadarab");});
test("munkadarabjaid -> munkadarab", function() {deepEqual( Stem("munkadarabjaid"), "munkadarab");});
test("munkadarabot -> munkadarab", function() {deepEqual( Stem("munkadarabot"), "munkadarab");});
test("munkadíjnak -> munkadíj", function() {deepEqual( Stem("munkadíjnak"), "munkadíj");});
test("munkaerejét -> munkaere", function() {deepEqual( Stem("munkaerejét"), "munkaere");});
test("munkaerő -> munkaerő", function() {deepEqual( Stem("munkaerő"), "munkaerő");});
test("munkaerőhöz -> munkaerő", function() {deepEqual( Stem("munkaerőhöz"), "munkaerő");});
test("munkaerőért -> munkaerő", function() {deepEqual( Stem("munkaerőért"), "munkaerő");});
test("munkaerő-fölöslegét -> munkaerő-fölösleg", function() {deepEqual( Stem("munkaerő-fölöslegét"), "munkaerő-fölösleg");});
test("munkaerő-megnyerést -> munkaerő-megnyerés", function() {deepEqual( Stem("munkaerő-megnyerést"), "munkaerő-megnyerés");});
test("munkaerő-piaci -> munkaerő-piac", function() {deepEqual( Stem("munkaerő-piaci"), "munkaerő-piac");});
test("munkaerőhiány -> munkaerőhiány", function() {deepEqual( Stem("munkaerőhiány"), "munkaerőhiány");});
test("munkaerőhiányával -> munkaerőhiány", function() {deepEqual( Stem("munkaerőhiányával"), "munkaerőhiány");});
test("munkaerőigényük -> munkaerőigény", function() {deepEqual( Stem("munkaerőigényük"), "munkaerőigény");});
test("munkaerőpiacra -> munkaerőpiac", function() {deepEqual( Stem("munkaerőpiacra"), "munkaerőpiac");});
test("munkaeszköze -> munkaeszköz", function() {deepEqual( Stem("munkaeszköze"), "munkaeszköz");});
test("munkafeltételeket -> munkafeltétel", function() {deepEqual( Stem("munkafeltételeket"), "munkafeltétel");});
test("munkafelület -> munkafelül", function() {deepEqual( Stem("munkafelület"), "munkafelül");});
test("munkafelületen -> munkafelület", function() {deepEqual( Stem("munkafelületen"), "munkafelület");});
test("munkafolyamat-felügyelet -> munkafolyamat-felügyel", function() {deepEqual( Stem("munkafolyamat-felügyelet"), "munkafolyamat-felügyel");});
test("munkafolyamat-kezelés -> munkafolyamat-kezelés", function() {deepEqual( Stem("munkafolyamat-kezelés"), "munkafolyamat-kezelés");});
test("munkafolyamat-tervező -> munkafolyamat-tervező", function() {deepEqual( Stem("munkafolyamat-tervező"), "munkafolyamat-tervező");});
test("munkafolyamat-támogatását -> munkafolyamat-támogatás", function() {deepEqual( Stem("munkafolyamat-támogatását"), "munkafolyamat-támogatás");});
test("munkafolyamatokat -> munkafolyamat", function() {deepEqual( Stem("munkafolyamatokat"), "munkafolyamat");});
test("munkafolyamat -> munkafoly", function() {deepEqual( Stem("munkafolyamat"), "munkafoly");});
test("munkafolyamatot -> munkafolyamat", function() {deepEqual( Stem("munkafolyamatot"), "munkafolyamat");});
test("munkafolyamatos -> munkafolyamatos", function() {deepEqual( Stem("munkafolyamatos"), "munkafolyamatos");});
test("munkagép -> munkagép", function() {deepEqual( Stem("munkagép"), "munkagép");});
test("munkagépet -> munkagép", function() {deepEqual( Stem("munkagépet"), "munkagép");});
test("munkagépéből -> munkagép", function() {deepEqual( Stem("munkagépéből"), "munkagép");});
test("munkahellyel -> munkahely", function() {deepEqual( Stem("munkahellyel"), "munkahely");});
test("munkahely -> munkahely", function() {deepEqual( Stem("munkahely"), "munkahely");});
test("munkahelye -> munkahely", function() {deepEqual( Stem("munkahelye"), "munkahely");});
test("munkahelyedre -> munkahely", function() {deepEqual( Stem("munkahelyedre"), "munkahely");});
test("munkahelyeiken -> munkahely", function() {deepEqual( Stem("munkahelyeiken"), "munkahely");});
test("munkahelyeikre -> munkahely", function() {deepEqual( Stem("munkahelyeikre"), "munkahely");});
test("munkahelyek -> munkahely", function() {deepEqual( Stem("munkahelyek"), "munkahely");});
test("munkahelyeken -> munkahely", function() {deepEqual( Stem("munkahelyeken"), "munkahely");});
test("munkahelyeket -> munkahely", function() {deepEqual( Stem("munkahelyeket"), "munkahely");});
test("munkahelyekkel -> munkahely", function() {deepEqual( Stem("munkahelyekkel"), "munkahely");});
test("munkahelyeknél -> munkahely", function() {deepEqual( Stem("munkahelyeknél"), "munkahely");});
test("munkahelyekre -> munkahely", function() {deepEqual( Stem("munkahelyekre"), "munkahely");});
test("munkahelyem -> munkahely", function() {deepEqual( Stem("munkahelyem"), "munkahely");});
test("munkahelyemen -> munkahely", function() {deepEqual( Stem("munkahelyemen"), "munkahely");});
test("munkahelyemet -> munkahely", function() {deepEqual( Stem("munkahelyemet"), "munkahely");});
test("munkahelyen -> munkahely", function() {deepEqual( Stem("munkahelyen"), "munkahely");});
test("munkahelyet -> munkahely", function() {deepEqual( Stem("munkahelyet"), "munkahely");});
test("munkahelyre -> munkahely", function() {deepEqual( Stem("munkahelyre"), "munkahely");});
test("munkahelyén -> munkahely", function() {deepEqual( Stem("munkahelyén"), "munkahely");});
test("munkahelyének -> munkahely", function() {deepEqual( Stem("munkahelyének"), "munkahely");});
test("munkahelyére -> munkahely", function() {deepEqual( Stem("munkahelyére"), "munkahely");});
test("munkahelyéről -> munkahely", function() {deepEqual( Stem("munkahelyéről"), "munkahely");});
test("munkahelyét -> munkahely", function() {deepEqual( Stem("munkahelyét"), "munkahely");});
test("munkahelyüket -> munkahely", function() {deepEqual( Stem("munkahelyüket"), "munkahely");});
test("munkahelyükre -> munkahely", function() {deepEqual( Stem("munkahelyükre"), "munkahely");});
test("munkahelyünk -> munkahely", function() {deepEqual( Stem("munkahelyünk"), "munkahely");});
test("munkahelyi -> munkahely", function() {deepEqual( Stem("munkahelyi"), "munkahely");});
test("munkahelyteremtésnek -> munkahelyteremtés", function() {deepEqual( Stem("munkahelyteremtésnek"), "munkahelyteremtés");});
test("munkahelyteremtésre -> munkahelyteremtés", function() {deepEqual( Stem("munkahelyteremtésre"), "munkahelyteremtés");});
test("munkahelyvesztés -> munkahelyvesztés", function() {deepEqual( Stem("munkahelyvesztés"), "munkahelyvesztés");});
test("munkahelyváltozásokat -> munkahelyváltozás", function() {deepEqual( Stem("munkahelyváltozásokat"), "munkahelyváltozás");});
test("munkahetet -> munkahet", function() {deepEqual( Stem("munkahetet"), "munkahet");});
test("munkahéten -> munkahét", function() {deepEqual( Stem("munkahéten"), "munkahét");});
test("munkahétre -> munkahét", function() {deepEqual( Stem("munkahétre"), "munkahét");});
test("munkaideje -> munkaide", function() {deepEqual( Stem("munkaideje"), "munkaide");});
test("munkaidejük -> munkaide", function() {deepEqual( Stem("munkaidejük"), "munkaide");});
test("munkaidejükhöz -> munkaide", function() {deepEqual( Stem("munkaidejükhöz"), "munkaide");});
test("munkaidő -> munkaidő", function() {deepEqual( Stem("munkaidő"), "munkaidő");});
test("munkaidőben -> munkaidő", function() {deepEqual( Stem("munkaidőben"), "munkaidő");});
test("munkaidőmnek -> munkaidő", function() {deepEqual( Stem("munkaidőmnek"), "munkaidő");});
test("munkaidő-kedvezményének -> munkaidő-kedvezmény", function() {deepEqual( Stem("munkaidő-kedvezményének"), "munkaidő-kedvezmény");});
test("munkaidős -> munkaidős", function() {deepEqual( Stem("munkaidős"), "munkaidős");});
test("munkaigényes -> munkaigényes", function() {deepEqual( Stem("munkaigényes"), "munkaigényes");});
test("munkaigényesebb -> munkaigényesebb", function() {deepEqual( Stem("munkaigényesebb"), "munkaigényesebb");});
test("munkaigényesnek -> munkaigényes", function() {deepEqual( Stem("munkaigényesnek"), "munkaigényes");});
test("munkajogi -> munkajog", function() {deepEqual( Stem("munkajogi"), "munkajog");});
test("munkajogiakban -> munkajogi", function() {deepEqual( Stem("munkajogiakban"), "munkajogi");});
test("munkakapcsolatban -> munkakapcsolat", function() {deepEqual( Stem("munkakapcsolatban"), "munkakapcsolat");});
test("munkakapcsolatnak -> munkakapcsolat", function() {deepEqual( Stem("munkakapcsolatnak"), "munkakapcsolat");});
test("munkakapcsolatot -> munkakapcsolat", function() {deepEqual( Stem("munkakapcsolatot"), "munkakapcsolat");});
test("munkakedvet -> munkakedv", function() {deepEqual( Stem("munkakedvet"), "munkakedv");});
test("munkakultúra -> munkakultú", function() {deepEqual( Stem("munkakultúra"), "munkakultú");});
test("munkaképes -> munkaképes", function() {deepEqual( Stem("munkaképes"), "munkaképes");});
test("munkaképességűeket -> munkaképességű", function() {deepEqual( Stem("munkaképességűeket"), "munkaképességű");});
test("munkakész -> munkakész", function() {deepEqual( Stem("munkakész"), "munkakész");});
test("munkakönyvét -> munkakönyv", function() {deepEqual( Stem("munkakönyvét"), "munkakönyv");});
test("munkaköri -> munkakör", function() {deepEqual( Stem("munkaköri"), "munkakör");});
test("munkakörnyezetet -> munkakörnyezet", function() {deepEqual( Stem("munkakörnyezetet"), "munkakörnyezet");});
test("munkakört -> munkakör", function() {deepEqual( Stem("munkakört"), "munkakör");});
test("munkakörének -> munkakör", function() {deepEqual( Stem("munkakörének"), "munkakör");});
test("munkakörére -> munkakör", function() {deepEqual( Stem("munkakörére"), "munkakör");});
test("munkakörök -> munkakör", function() {deepEqual( Stem("munkakörök"), "munkakör");});
test("munkakörökhöz -> munkakör", function() {deepEqual( Stem("munkakörökhöz"), "munkakör");});
test("munkakörökre -> munkakör", function() {deepEqual( Stem("munkakörökre"), "munkakör");});
test("munkakör -> munkakör", function() {deepEqual( Stem("munkakör"), "munkakör");});
test("munkakörben -> munkakör", function() {deepEqual( Stem("munkakörben"), "munkakör");});
test("munkaközvetítő -> munkaközvetítő", function() {deepEqual( Stem("munkaközvetítő"), "munkaközvetítő");});
test("munkaközösség -> munkaközösség", function() {deepEqual( Stem("munkaközösség"), "munkaközösség");});
test("munkaközösségek -> munkaközösség", function() {deepEqual( Stem("munkaközösségek"), "munkaközösség");});
test("munkaközösségekkel -> munkaközösség", function() {deepEqual( Stem("munkaközösségekkel"), "munkaközösség");});
test("munkaközösséget -> munkaközösség", function() {deepEqual( Stem("munkaközösséget"), "munkaközösség");});
test("munkaközösséggel -> munkaközösség", function() {deepEqual( Stem("munkaközösséggel"), "munkaközösség");});
test("munkaközösségének -> munkaközösség", function() {deepEqual( Stem("munkaközösségének"), "munkaközösség");});
test("munkalehetőség -> munkalehetőség", function() {deepEqual( Stem("munkalehetőség"), "munkalehetőség");});
test("munkalehetőségem -> munkalehetőség", function() {deepEqual( Stem("munkalehetőségem"), "munkalehetőség");});
test("munkalehetőséget -> munkalehetőség", function() {deepEqual( Stem("munkalehetőséget"), "munkalehetőség");});
test("munkalemezről -> munkalemez", function() {deepEqual( Stem("munkalemezről"), "munkalemez");});
test("munkamegosztás -> munkamegosztás", function() {deepEqual( Stem("munkamegosztás"), "munkamegosztás");});
test("munkamegosztásnak -> munkamegosztás", function() {deepEqual( Stem("munkamegosztásnak"), "munkamegosztás");});
test("munkamegosztásra -> munkamegosztás", function() {deepEqual( Stem("munkamegosztásra"), "munkamegosztás");});
test("munkamenet -> munkamen", function() {deepEqual( Stem("munkamenet"), "munkamen");});
test("munkamódszere -> munkamódsz", function() {deepEqual( Stem("munkamódszere"), "munkamódsz");});
test("munkamódszereiket -> munkamódszer", function() {deepEqual( Stem("munkamódszereiket"), "munkamódszer");});
test("munkanap -> munkanap", function() {deepEqual( Stem("munkanap"), "munkanap");});
test("munkanapján -> munkanap", function() {deepEqual( Stem("munkanapján"), "munkanap");});
test("munkanapon -> munkanap", function() {deepEqual( Stem("munkanapon"), "munkanap");});
test("munkanappal -> munkanap", function() {deepEqual( Stem("munkanappal"), "munkanap");});
test("munkanapra -> munkanap", function() {deepEqual( Stem("munkanapra"), "munkanap");});
test("munkanélküli-járulékot -> munkanélküli-járule", function() {deepEqual( Stem("munkanélküli-járulékot"), "munkanélküli-járule");});
test("munkanélküliből -> munkanélkül", function() {deepEqual( Stem("munkanélküliből"), "munkanélkül");});
test("munkanélküli -> munkanélkül", function() {deepEqual( Stem("munkanélküli"), "munkanélkül");});
test("munkanélküliek -> munkanélküli", function() {deepEqual( Stem("munkanélküliek"), "munkanélküli");});
test("munkanélkülieket -> munkanélküli", function() {deepEqual( Stem("munkanélkülieket"), "munkanélküli");});
test("munkanélkülieknek -> munkanélküli", function() {deepEqual( Stem("munkanélkülieknek"), "munkanélküli");});
test("munkanélkülit -> munkanélkül", function() {deepEqual( Stem("munkanélkülit"), "munkanélkül");});
test("munkanélküliség -> munkanélküliség", function() {deepEqual( Stem("munkanélküliség"), "munkanélküliség");});
test("munkanélküliségi -> munkanélküliség", function() {deepEqual( Stem("munkanélküliségi"), "munkanélküliség");});
test("munkaokmányokban -> munkaokmány", function() {deepEqual( Stem("munkaokmányokban"), "munkaokmány");});
test("munkarend -> munkaren", function() {deepEqual( Stem("munkarend"), "munkaren");});
test("munkarenddel -> munkaren", function() {deepEqual( Stem("munkarenddel"), "munkaren");});
test("munkarendet -> munkaren", function() {deepEqual( Stem("munkarendet"), "munkaren");});
test("munkarendről -> munkaren", function() {deepEqual( Stem("munkarendről"), "munkaren");});
test("munkaruhákat -> munkaruha", function() {deepEqual( Stem("munkaruhákat"), "munkaruha");});
test("munkaszerető -> munkaszerető", function() {deepEqual( Stem("munkaszerető"), "munkaszerető");});
test("munkaszervezet -> munkaszervez", function() {deepEqual( Stem("munkaszervezet"), "munkaszervez");});
test("munkaszervezéssel -> munkaszervezés", function() {deepEqual( Stem("munkaszervezéssel"), "munkaszervezés");});
test("munkaszerzésre -> munkaszerzés", function() {deepEqual( Stem("munkaszerzésre"), "munkaszerzés");});
test("munkaszerződés -> munkaszerződés", function() {deepEqual( Stem("munkaszerződés"), "munkaszerződés");});
test("munkaszerződést -> munkaszerződés", function() {deepEqual( Stem("munkaszerződést"), "munkaszerződés");});
test("munkaszázad -> munkaszáz", function() {deepEqual( Stem("munkaszázad"), "munkaszáz");});
test("munkaterembe -> munkater", function() {deepEqual( Stem("munkaterembe"), "munkater");});
test("munkaterhet -> munkaterh", function() {deepEqual( Stem("munkaterhet"), "munkaterh");});
test("munkaterületek -> munkaterület", function() {deepEqual( Stem("munkaterületek"), "munkaterület");});
test("munkatáborba -> munkatábor", function() {deepEqual( Stem("munkatáborba"), "munkatábor");});
test("munkatáborban -> munkatábor", function() {deepEqual( Stem("munkatáborban"), "munkatábor");});
test("munkatárs -> munkatárs", function() {deepEqual( Stem("munkatárs"), "munkatárs");});
test("munkatársa -> munkatárs", function() {deepEqual( Stem("munkatársa"), "munkatárs");});
test("munkatársai -> munkatárs", function() {deepEqual( Stem("munkatársai"), "munkatárs");});
test("munkatársaik -> munkatárs", function() {deepEqual( Stem("munkatársaik"), "munkatárs");});
test("munkatársaiknak -> munkatárs", function() {deepEqual( Stem("munkatársaiknak"), "munkatárs");});
test("munkatársaim -> munkatárs", function() {deepEqual( Stem("munkatársaim"), "munkatárs");});
test("munkatársaimhoz -> munkatárs", function() {deepEqual( Stem("munkatársaimhoz"), "munkatárs");});
test("munkatársaimmal -> munkatárs", function() {deepEqual( Stem("munkatársaimmal"), "munkatárs");});
test("munkatársainak -> munkatárs", function() {deepEqual( Stem("munkatársainak"), "munkatárs");});
test("munkatársainknak -> munkatárs", function() {deepEqual( Stem("munkatársainknak"), "munkatárs");});
test("munkatársait -> munkatárs", function() {deepEqual( Stem("munkatársait"), "munkatárs");});
test("munkatársaitól -> munkatárs", function() {deepEqual( Stem("munkatársaitól"), "munkatárs");});
test("munkatársak -> munkatárs", function() {deepEqual( Stem("munkatársak"), "munkatárs");});
test("munkatársam -> munkatárs", function() {deepEqual( Stem("munkatársam"), "munkatárs");});
test("munkatársamat -> munkatárs", function() {deepEqual( Stem("munkatársamat"), "munkatárs");});
test("munkatársammal -> munkatárs", function() {deepEqual( Stem("munkatársammal"), "munkatárs");});
test("munkatársat -> munkatárs", function() {deepEqual( Stem("munkatársat"), "munkatárs");});
test("munkatárssal -> munkatárs", function() {deepEqual( Stem("munkatárssal"), "munkatárs");});
test("munkatársunknak -> munkatárs", function() {deepEqual( Stem("munkatársunknak"), "munkatárs");});
test("munkatársának -> munkatárs", function() {deepEqual( Stem("munkatársának"), "munkatárs");});
test("munkatársát -> munkatárs", function() {deepEqual( Stem("munkatársát"), "munkatárs");});
test("munkatársától -> munkatárs", function() {deepEqual( Stem("munkatársától"), "munkatárs");});
test("munkatársával -> munkatárs", function() {deepEqual( Stem("munkatársával"), "munkatárs");});
test("munkatípusok -> munkatípus", function() {deepEqual( Stem("munkatípusok"), "munkatípus");});
test("munkavacsorák -> munkavacsora", function() {deepEqual( Stem("munkavacsorák"), "munkavacsora");});
test("munkaviszony -> munkaviszony", function() {deepEqual( Stem("munkaviszony"), "munkaviszony");});
test("munkaviszonya -> munkaviszony", function() {deepEqual( Stem("munkaviszonya"), "munkaviszony");});
test("munkaviszonyban -> munkaviszony", function() {deepEqual( Stem("munkaviszonyban"), "munkaviszony");});
test("munkaviszonyból -> munkaviszony", function() {deepEqual( Stem("munkaviszonyból"), "munkaviszony");});
test("munkaviszonynál -> munkaviszony", function() {deepEqual( Stem("munkaviszonynál"), "munkaviszony");});
test("munkaviszonyok -> munkaviszony", function() {deepEqual( Stem("munkaviszonyok"), "munkaviszony");});
test("munkaviszonyon -> munkaviszony", function() {deepEqual( Stem("munkaviszonyon"), "munkaviszony");});
test("munkaviszonyra -> munkaviszony", function() {deepEqual( Stem("munkaviszonyra"), "munkaviszony");});
test("munkaviszonyt -> munkaviszony", function() {deepEqual( Stem("munkaviszonyt"), "munkaviszony");});
test("munkaviszonyának -> munkaviszony", function() {deepEqual( Stem("munkaviszonyának"), "munkaviszony");});
test("munkaviszonyát -> munkaviszony", function() {deepEqual( Stem("munkaviszonyát"), "munkaviszony");});
test("munkaválasztásnál -> munkaválasztás", function() {deepEqual( Stem("munkaválasztásnál"), "munkaválasztás");});
test("munkavállalási -> munkavállalás", function() {deepEqual( Stem("munkavállalási"), "munkavállalás");});
test("munkavállaló-szerző -> munkavállaló-szerző", function() {deepEqual( Stem("munkavállaló-szerző"), "munkavállaló-szerző");});
test("munkavállaló-szerzőt -> munkavállaló-szerző", function() {deepEqual( Stem("munkavállaló-szerzőt"), "munkavállaló-szerző");});
test("munkavállalói -> munkavállaló", function() {deepEqual( Stem("munkavállalói"), "munkavállaló");});
test("munkavállalóik -> munkavállaló", function() {deepEqual( Stem("munkavállalóik"), "munkavállaló");});
test("munkavállalóinak -> munkavállaló", function() {deepEqual( Stem("munkavállalóinak"), "munkavállaló");});
test("munkavállalóinak -> munkavállaló", function() {deepEqual( Stem("munkavállalóinak"), "munkavállaló");});
test("munkavállalóira -> munkavállaló", function() {deepEqual( Stem("munkavállalóira"), "munkavállaló");});
test("munkavállalóit -> munkavállaló", function() {deepEqual( Stem("munkavállalóit"), "munkavállaló");});
test("munkavállalóitól -> munkavállaló", function() {deepEqual( Stem("munkavállalóitól"), "munkavállaló");});
test("munkavállalóival -> munkavállaló", function() {deepEqual( Stem("munkavállalóival"), "munkavállaló");});
test("munkavállalója -> munkavállaló", function() {deepEqual( Stem("munkavállalója"), "munkavállaló");});
test("munkavállalójára -> munkavállaló", function() {deepEqual( Stem("munkavállalójára"), "munkavállaló");});
test("munkavállalóját -> munkavállaló", function() {deepEqual( Stem("munkavállalóját"), "munkavállaló");});
test("munkavállalók -> munkavállaló", function() {deepEqual( Stem("munkavállalók"), "munkavállaló");});
test("munkavállalókat -> munkavállaló", function() {deepEqual( Stem("munkavállalókat"), "munkavállaló");});
test("munkavállalókkal -> munkavállaló", function() {deepEqual( Stem("munkavállalókkal"), "munkavállaló");});
test("munkavállalóknak -> munkavállaló", function() {deepEqual( Stem("munkavállalóknak"), "munkavállaló");});
test("munkavállalóknál -> munkavállaló", function() {deepEqual( Stem("munkavállalóknál"), "munkavállaló");});
test("munkavállalókra -> munkavállaló", function() {deepEqual( Stem("munkavállalókra"), "munkavállaló");});
test("munkavállalót -> munkavállaló", function() {deepEqual( Stem("munkavállalót"), "munkavállaló");});
test("munkavállalóval -> munkavállaló", function() {deepEqual( Stem("munkavállalóval"), "munkavállaló");});
test("munkavállaló -> munkavállaló", function() {deepEqual( Stem("munkavállaló"), "munkavállaló");});
test("munkavédelmet -> munkavédel", function() {deepEqual( Stem("munkavédelmet"), "munkavédel");});
test("munkavédelmi -> munkavédelm", function() {deepEqual( Stem("munkavédelmi"), "munkavédelm");});
test("munkavégzés -> munkavégzés", function() {deepEqual( Stem("munkavégzés"), "munkavégzés");});
test("munkavégzésre -> munkavégzés", function() {deepEqual( Stem("munkavégzésre"), "munkavégzés");});
test("munkavégzést -> munkavégzés", function() {deepEqual( Stem("munkavégzést"), "munkavégzés");});
test("munkavégzéséért -> munkavégzés", function() {deepEqual( Stem("munkavégzéséért"), "munkavégzés");});
test("munkaállomás -> munkaállomás", function() {deepEqual( Stem("munkaállomás"), "munkaállomás");});
test("munkaállomásáról -> munkaállomás", function() {deepEqual( Stem("munkaállomásáról"), "munkaállomás");});
test("munkaügyi -> munkaügy", function() {deepEqual( Stem("munkaügyi"), "munkaügy");});
test("munkába -> mun", function() {deepEqual( Stem("munkába"), "mun");});
test("munka -> mun", function() {deepEqual( Stem("munka"), "mun");});
test("munkában -> mun", function() {deepEqual( Stem("munkában"), "mun");});
test("munkából -> mun", function() {deepEqual( Stem("munkából"), "mun");});
test("munkához -> mun", function() {deepEqual( Stem("munkához"), "mun");});
test("munkáik -> munka", function() {deepEqual( Stem("munkáik"), "munka");});
test("munkáikat -> munka", function() {deepEqual( Stem("munkáikat"), "munka");});
test("munkáim -> munka", function() {deepEqual( Stem("munkáim"), "munka");});
test("munkáimat -> munka", function() {deepEqual( Stem("munkáimat"), "munka");});
test("munkáimmal -> munka", function() {deepEqual( Stem("munkáimmal"), "munka");});
test("munkáinak -> munka", function() {deepEqual( Stem("munkáinak"), "munka");});
test("munkája -> munká", function() {deepEqual( Stem("munkája"), "munká");});
test("munkájuk -> munka", function() {deepEqual( Stem("munkájuk"), "munka");});
test("munkájukat -> munka", function() {deepEqual( Stem("munkájukat"), "munka");});
test("munkájukba -> munka", function() {deepEqual( Stem("munkájukba"), "munka");});
test("munkájukban -> munka", function() {deepEqual( Stem("munkájukban"), "munka");});
test("munkájukhoz -> munka", function() {deepEqual( Stem("munkájukhoz"), "munka");});
test("munkájukkal -> munka", function() {deepEqual( Stem("munkájukkal"), "munka");});
test("munkájukról -> munka", function() {deepEqual( Stem("munkájukról"), "munka");});
test("munkájába -> munká", function() {deepEqual( Stem("munkájába"), "munká");});
test("munkájában -> munká", function() {deepEqual( Stem("munkájában"), "munká");});
test("munkájából -> munká", function() {deepEqual( Stem("munkájából"), "munká");});
test("munkájához -> munká", function() {deepEqual( Stem("munkájához"), "munká");});
test("munkáján -> munká", function() {deepEqual( Stem("munkáján"), "munká");});
test("munkájának -> munká", function() {deepEqual( Stem("munkájának"), "munká");});
test("munkájára -> munká", function() {deepEqual( Stem("munkájára"), "munká");});
test("munkájáról -> munká", function() {deepEqual( Stem("munkájáról"), "munká");});
test("munkáját -> munká", function() {deepEqual( Stem("munkáját"), "munká");});
test("munkájával -> munká", function() {deepEqual( Stem("munkájával"), "munká");});
test("munkák -> munka", function() {deepEqual( Stem("munkák"), "munka");});
test("munkákat -> munka", function() {deepEqual( Stem("munkákat"), "munka");});
test("munkákra -> munka", function() {deepEqual( Stem("munkákra"), "munka");});
test("munkákétól -> munka", function() {deepEqual( Stem("munkákétól"), "munka");});
test("munkám -> munka", function() {deepEqual( Stem("munkám"), "munka");});
test("munkámat -> munka", function() {deepEqual( Stem("munkámat"), "munka");});
test("munkámban -> munka", function() {deepEqual( Stem("munkámban"), "munka");});
test("munkámhoz -> munka", function() {deepEqual( Stem("munkámhoz"), "munka");});
test("munkámmal -> munka", function() {deepEqual( Stem("munkámmal"), "munka");});
test("munkámnak -> munka", function() {deepEqual( Stem("munkámnak"), "munka");});
test("munkámnál -> munka", function() {deepEqual( Stem("munkámnál"), "munka");});
test("munkámon -> munka", function() {deepEqual( Stem("munkámon"), "munka");});
test("munkámra -> munka", function() {deepEqual( Stem("munkámra"), "munka");});
test("munkámról -> munka", function() {deepEqual( Stem("munkámról"), "munka");});
test("munkámért -> munka", function() {deepEqual( Stem("munkámért"), "munka");});
test("munkán -> mun", function() {deepEqual( Stem("munkán"), "mun");});
test("munkának -> mun", function() {deepEqual( Stem("munkának"), "mun");});
test("munkánk -> munka", function() {deepEqual( Stem("munkánk"), "munka");});
test("munkára -> mun", function() {deepEqual( Stem("munkára"), "mun");});
test("munkáról -> mun", function() {deepEqual( Stem("munkáról"), "mun");});
test("munkáé -> munka", function() {deepEqual( Stem("munkáé"), "munka");});
test("munkáért -> mun", function() {deepEqual( Stem("munkáért"), "mun");});
test("munkát -> mun", function() {deepEqual( Stem("munkát"), "mun");});
test("munkától -> mun", function() {deepEqual( Stem("munkától"), "mun");});
test("munkával -> mun", function() {deepEqual( Stem("munkával"), "mun");});
test("munkálata -> munkálat", function() {deepEqual( Stem("munkálata"), "munkálat");});
test("munkálatai -> munkálat", function() {deepEqual( Stem("munkálatai"), "munkálat");});
test("munkálataiban -> munkálat", function() {deepEqual( Stem("munkálataiban"), "munkálat");});
test("munkálatait -> munkálat", function() {deepEqual( Stem("munkálatait"), "munkálat");});
test("munkálatok -> munkálat", function() {deepEqual( Stem("munkálatok"), "munkálat");});
test("munkálatokhoz -> munkálat", function() {deepEqual( Stem("munkálatokhoz"), "munkálat");});
test("munkálatokkal -> munkálat", function() {deepEqual( Stem("munkálatokkal"), "munkálat");});
test("munkálatoknál -> munkálat", function() {deepEqual( Stem("munkálatoknál"), "munkálat");});
test("munkálkodnak -> munkál", function() {deepEqual( Stem("munkálkodnak"), "munkál");});
test("munkálkodni -> munkálkodn", function() {deepEqual( Stem("munkálkodni"), "munkálkodn");});
test("munkálkodom -> munkálkod", function() {deepEqual( Stem("munkálkodom"), "munkálkod");});
test("munkálkodtak -> munkálkodt", function() {deepEqual( Stem("munkálkodtak"), "munkálkodt");});
test("munkálkodása -> munkálkodás", function() {deepEqual( Stem("munkálkodása"), "munkálkodás");});
test("munkálkodó -> munkálkodó", function() {deepEqual( Stem("munkálkodó"), "munkálkodó");});
test("munkálnak -> munkál", function() {deepEqual( Stem("munkálnak"), "munkál");});
test("munkálják -> munkálja", function() {deepEqual( Stem("munkálják"), "munkálja");});
test("munkáltatói -> munkáltató", function() {deepEqual( Stem("munkáltatói"), "munkáltató");});
test("munkáltató -> munkáltató", function() {deepEqual( Stem("munkáltató"), "munkáltató");});
test("munkáltatóhoz -> munkáltató", function() {deepEqual( Stem("munkáltatóhoz"), "munkáltató");});
test("munkáltatója -> munkáltató", function() {deepEqual( Stem("munkáltatója"), "munkáltató");});
test("munkáltatójuktól -> munkáltató", function() {deepEqual( Stem("munkáltatójuktól"), "munkáltató");});
test("munkáltatójánál -> munkáltató", function() {deepEqual( Stem("munkáltatójánál"), "munkáltató");});
test("munkáltatók -> munkáltató", function() {deepEqual( Stem("munkáltatók"), "munkáltató");});
test("munkáltatónak -> munkáltató", function() {deepEqual( Stem("munkáltatónak"), "munkáltató");});
test("munkáltatónál -> munkáltató", function() {deepEqual( Stem("munkáltatónál"), "munkáltató");});
test("munkáltatót -> munkáltató", function() {deepEqual( Stem("munkáltatót"), "munkáltató");});
test("munkás -> munkás", function() {deepEqual( Stem("munkás"), "munkás");});
test("munkásaitól -> munkás", function() {deepEqual( Stem("munkásaitól"), "munkás");});
test("munkásként -> munkás", function() {deepEqual( Stem("munkásként"), "munkás");});
test("munkásnak -> munkás", function() {deepEqual( Stem("munkásnak"), "munkás");});
test("munkások -> munkás", function() {deepEqual( Stem("munkások"), "munkás");});
test("munkásokat -> munkás", function() {deepEqual( Stem("munkásokat"), "munkás");});
test("munkásokkal -> munkás", function() {deepEqual( Stem("munkásokkal"), "munkás");});
test("munkást -> munkás", function() {deepEqual( Stem("munkást"), "munkás");});
test("munkáslakótelepek -> munkáslakótelep", function() {deepEqual( Stem("munkáslakótelepek"), "munkáslakótelep");});
test("munkásosztály -> munkásosztály", function() {deepEqual( Stem("munkásosztály"), "munkásosztály");});
test("munkásraj -> munkásraj", function() {deepEqual( Stem("munkásraj"), "munkásraj");});
test("munkásruhát -> munkásruh", function() {deepEqual( Stem("munkásruhát"), "munkásruh");});
test("munkássága -> munkásság", function() {deepEqual( Stem("munkássága"), "munkásság");});
test("munkásságomról -> munkásság", function() {deepEqual( Stem("munkásságomról"), "munkásság");});
test("munkásságáról -> munkásság", function() {deepEqual( Stem("munkásságáról"), "munkásság");});
test("munkásságát -> munkásság", function() {deepEqual( Stem("munkásságát"), "munkásság");});
test("munkástárssal -> munkástárs", function() {deepEqual( Stem("munkástárssal"), "munkástárs");});
test("munkázni -> munkázn", function() {deepEqual( Stem("munkázni"), "munkázn");});
test("muníciót -> muníció", function() {deepEqual( Stem("muníciót"), "muníció");});
test("munícióval -> muníció", function() {deepEqual( Stem("munícióval"), "muníció");});
test("muri -> mur", function() {deepEqual( Stem("muri"), "mur");});
test("muréna -> murén", function() {deepEqual( Stem("muréna"), "murén");});
test("music-center -> music-center", function() {deepEqual( Stem("music-center"), "music-center");});
test("musical -> musical", function() {deepEqual( Stem("musical"), "musical");});
test("musicaljében -> musical", function() {deepEqual( Stem("musicaljében"), "musical");});
test("musst -> muss", function() {deepEqual( Stem("musst"), "muss");});
test("must -> mus", function() {deepEqual( Stem("must"), "mus");});
test("muszlimok -> muszlim", function() {deepEqual( Stem("muszlimok"), "muszlim");});
test("muszlinfüggöny -> muszlinfüggöny", function() {deepEqual( Stem("muszlinfüggöny"), "muszlinfüggöny");});
test("muszlinfüggönyön -> muszlinfüggöny", function() {deepEqual( Stem("muszlinfüggönyön"), "muszlinfüggöny");});
test("muszáj -> muszáj", function() {deepEqual( Stem("muszáj"), "muszáj");});
test("muszájból -> muszáj", function() {deepEqual( Stem("muszájból"), "muszáj");});
test("mutassa -> mutass", function() {deepEqual( Stem("mutassa"), "mutass");});
test("mutassam -> mutass", function() {deepEqual( Stem("mutassam"), "mutass");});
test("mutasson -> mutass", function() {deepEqual( Stem("mutasson"), "mutass");});
test("mutassák -> mutassa", function() {deepEqual( Stem("mutassák"), "mutassa");});
test("mutat -> mut", function() {deepEqual( Stem("mutat"), "mut");});
test("mutatja -> mutat", function() {deepEqual( Stem("mutatja"), "mutat");});
test("mutatjuk -> mutat", function() {deepEqual( Stem("mutatjuk"), "mutat");});
test("mutatják -> mutatja", function() {deepEqual( Stem("mutatják"), "mutatja");});
test("mutatta -> mutatt", function() {deepEqual( Stem("mutatta"), "mutatt");});
test("mutattak -> mutatt", function() {deepEqual( Stem("mutattak"), "mutatt");});
test("mutattam -> mutatt", function() {deepEqual( Stem("mutattam"), "mutatt");});
test("mutattuk -> mutatt", function() {deepEqual( Stem("mutattuk"), "mutatt");});
test("mutattunk -> mutatt", function() {deepEqual( Stem("mutattunk"), "mutatt");});
test("mutatták -> mutatta", function() {deepEqual( Stem("mutatták"), "mutatta");});
test("mutatunk -> mutat", function() {deepEqual( Stem("mutatunk"), "mutat");});
test("mutatnak -> mutat", function() {deepEqual( Stem("mutatnak"), "mutat");});
test("mutatni -> mutatn", function() {deepEqual( Stem("mutatni"), "mutatn");});
test("mutatnia -> mutatn", function() {deepEqual( Stem("mutatnia"), "mutatn");});
test("mutatnunk -> mutatn", function() {deepEqual( Stem("mutatnunk"), "mutatn");});
test("mutatnák -> mutatna", function() {deepEqual( Stem("mutatnák"), "mutatna");});
test("mutatnék -> mutatne", function() {deepEqual( Stem("mutatnék"), "mutatne");});
test("mutatok -> mutat", function() {deepEqual( Stem("mutatok"), "mutat");});
test("mutatom -> mutat", function() {deepEqual( Stem("mutatom"), "mutat");});
test("mutathatja -> mutathat", function() {deepEqual( Stem("mutathatja"), "mutathat");});
test("mutathatnék -> mutathatne", function() {deepEqual( Stem("mutathatnék"), "mutathatne");});
test("mutathatta -> mutathatt", function() {deepEqual( Stem("mutathatta"), "mutathatt");});
test("mutatkozik -> mutatkoz", function() {deepEqual( Stem("mutatkozik"), "mutatkoz");});
test("mutatkoznak -> mutatkoz", function() {deepEqual( Stem("mutatkoznak"), "mutatkoz");});
test("mutatkozni -> mutatkozn", function() {deepEqual( Stem("mutatkozni"), "mutatkozn");});
test("mutatkoztak -> mutatkozt", function() {deepEqual( Stem("mutatkoztak"), "mutatkozt");});
test("mutatkozzanak -> mutatkozz", function() {deepEqual( Stem("mutatkozzanak"), "mutatkozz");});
test("mutatkozott -> mutatkozot", function() {deepEqual( Stem("mutatkozott"), "mutatkozot");});
test("mutatkozó -> mutatkozó", function() {deepEqual( Stem("mutatkozó"), "mutatkozó");});
test("mutatott -> mutatot", function() {deepEqual( Stem("mutatott"), "mutatot");});
test("mutatva -> mutatv", function() {deepEqual( Stem("mutatva"), "mutatv");});
test("mutatvány -> mutatvány", function() {deepEqual( Stem("mutatvány"), "mutatvány");});
test("mutatványokat -> mutatvány", function() {deepEqual( Stem("mutatványokat"), "mutatvány");});
test("mutatványt -> mutatvány", function() {deepEqual( Stem("mutatványt"), "mutatvány");});
test("mutatói -> mutató", function() {deepEqual( Stem("mutatói"), "mutató");});
test("mutató -> mutató", function() {deepEqual( Stem("mutató"), "mutató");});
test("mutatóba -> mutató", function() {deepEqual( Stem("mutatóba"), "mutató");});
test("mutatóban -> mutató", function() {deepEqual( Stem("mutatóban"), "mutató");});
test("mutatóhoz -> mutató", function() {deepEqual( Stem("mutatóhoz"), "mutató");});
test("mutatója -> mutató", function() {deepEqual( Stem("mutatója"), "mutató");});
test("mutatóját -> mutató", function() {deepEqual( Stem("mutatóját"), "mutató");});
test("mutatójával -> mutató", function() {deepEqual( Stem("mutatójával"), "mutató");});
test("mutatók -> mutató", function() {deepEqual( Stem("mutatók"), "mutató");});
test("mutatókat -> mutató", function() {deepEqual( Stem("mutatókat"), "mutató");});
test("mutatóknak -> mutató", function() {deepEqual( Stem("mutatóknak"), "mutató");});
test("mutatót -> mutató", function() {deepEqual( Stem("mutatót"), "mutató");});
test("mutatóval -> mutató", function() {deepEqual( Stem("mutatóval"), "mutató");});
test("mutatós -> mutatós", function() {deepEqual( Stem("mutatós"), "mutatós");});
test("mutatóujja -> mutatóuj", function() {deepEqual( Stem("mutatóujja"), "mutatóuj");});
test("mutatóujjal -> mutatóuj", function() {deepEqual( Stem("mutatóujjal"), "mutatóuj");});
test("mutatóujjammal -> mutatóujj", function() {deepEqual( Stem("mutatóujjammal"), "mutatóujj");});
test("mutatóujjával -> mutatóuj", function() {deepEqual( Stem("mutatóujjával"), "mutatóuj");});
test("mutogat -> mutog", function() {deepEqual( Stem("mutogat"), "mutog");});
test("mutogatja -> mutogat", function() {deepEqual( Stem("mutogatja"), "mutogat");});
test("mutogatni -> mutogatn", function() {deepEqual( Stem("mutogatni"), "mutogatn");});
test("mutogatná -> mutogatna", function() {deepEqual( Stem("mutogatná"), "mutogatna");});
test("mutogattak -> mutogatt", function() {deepEqual( Stem("mutogattak"), "mutogatt");});
test("mutogattunk -> mutogatt", function() {deepEqual( Stem("mutogattunk"), "mutogatt");});
test("mutogatott -> mutogatot", function() {deepEqual( Stem("mutogatott"), "mutogatot");});
test("mutogatásomra -> mutogatás", function() {deepEqual( Stem("mutogatásomra"), "mutogatás");});
test("mutáción -> mutáció", function() {deepEqual( Stem("mutáción"), "mutáció");});
test("mutálni -> mutáln", function() {deepEqual( Stem("mutálni"), "mutáln");});
test("muzeológus -> muzeológus", function() {deepEqual( Stem("muzeológus"), "muzeológus");});
test("muzeológusok -> muzeológus", function() {deepEqual( Stem("muzeológusok"), "muzeológus");});
test("muzeológustól -> muzeológus", function() {deepEqual( Stem("muzeológustól"), "muzeológus");});
test("muzeális -> muzeális", function() {deepEqual( Stem("muzeális"), "muzeális");});
test("muzsikus-zeneszerző -> muzsikus-zeneszerző", function() {deepEqual( Stem("muzsikus-zeneszerző"), "muzsikus-zeneszerző");});
test("muzsikusi -> muzsikus", function() {deepEqual( Stem("muzsikusi"), "muzsikus");});
test("muzsikusok -> muzsikus", function() {deepEqual( Stem("muzsikusok"), "muzsikus");});
test("muzsikus -> muzsikus", function() {deepEqual( Stem("muzsikus"), "muzsikus");});
test("muzsikusokat -> muzsikus", function() {deepEqual( Stem("muzsikusokat"), "muzsikus");});
test("muzsikák -> muzsika", function() {deepEqual( Stem("muzsikák"), "muzsika");});
test("muzsika -> muzs", function() {deepEqual( Stem("muzsika"), "muzs");});
test("muzsikákkal -> muzsika", function() {deepEqual( Stem("muzsikákkal"), "muzsika");});
test("muzsikám -> muzsika", function() {deepEqual( Stem("muzsikám"), "muzsika");});
test("muzsikának -> muzs", function() {deepEqual( Stem("muzsikának"), "muzs");});
test("muzsikát -> muzs", function() {deepEqual( Stem("muzsikát"), "muzs");});
test("muzsikálnak -> muzsikál", function() {deepEqual( Stem("muzsikálnak"), "muzsikál");});
test("muzsikált -> muzsikál", function() {deepEqual( Stem("muzsikált"), "muzsikál");});
test("muzsikáló -> muzsikáló", function() {deepEqual( Stem("muzsikáló"), "muzsikáló");});
test("muzulmán -> muzulm", function() {deepEqual( Stem("muzulmán"), "muzulm");});
test("muzulmánnak -> muzulm", function() {deepEqual( Stem("muzulmánnak"), "muzulm");});
test("muzulmánok -> muzulmán", function() {deepEqual( Stem("muzulmánok"), "muzulmán");});
test("mágikus -> mágikus", function() {deepEqual( Stem("mágikus"), "mágikus");});
test("mágiákból -> mágia", function() {deepEqual( Stem("mágiákból"), "mágia");});
test("máglyán -> mágly", function() {deepEqual( Stem("máglyán"), "mágly");});
test("máglyára -> mágly", function() {deepEqual( Stem("máglyára"), "mágly");});
test("máglyát -> mágly", function() {deepEqual( Stem("máglyát"), "mágly");});
test("mágnescsík -> mágnescsí", function() {deepEqual( Stem("mágnescsík"), "mágnescsí");});
test("mágnescsíkos -> mágnescsíkos", function() {deepEqual( Stem("mágnescsíkos"), "mágnescsíkos");});
test("mágneses -> mágneses", function() {deepEqual( Stem("mágneses"), "mágneses");});
test("mágneshordozón -> mágneshordozó", function() {deepEqual( Stem("mágneshordozón"), "mágneshordozó");});
test("mágneskártyás -> mágneskártyás", function() {deepEqual( Stem("mágneskártyás"), "mágneskártyás");});
test("mágneskártyát -> mágneskárty", function() {deepEqual( Stem("mágneskártyát"), "mágneskárty");});
test("mágneskártyával -> mágneskárty", function() {deepEqual( Stem("mágneskártyával"), "mágneskárty");});
test("mágneslemez -> mágneslemez", function() {deepEqual( Stem("mágneslemez"), "mágneslemez");});
test("mágnesszalag -> mágnesszalag", function() {deepEqual( Stem("mágnesszalag"), "mágnesszalag");});
test("mágnesszalagról -> mágnesszalag", function() {deepEqual( Stem("mágnesszalagról"), "mágnesszalag");});
test("mágusok -> mágus", function() {deepEqual( Stem("mágusok"), "mágus");});
test("mágy -> mágy", function() {deepEqual( Stem("mágy"), "mágy");});
test("máj -> máj", function() {deepEqual( Stem("máj"), "máj");});
test("mája -> má", function() {deepEqual( Stem("mája"), "má");});
test("májat -> máj", function() {deepEqual( Stem("májat"), "máj");});
test("májjal -> máj", function() {deepEqual( Stem("májjal"), "máj");});
test("májának -> má", function() {deepEqual( Stem("májának"), "má");});
test("májfa -> májf", function() {deepEqual( Stem("májfa"), "májf");});
test("májkrémet -> májkre", function() {deepEqual( Stem("májkrémet"), "májkre");});
test("májusfa -> májusf", function() {deepEqual( Stem("májusfa"), "májusf");});
test("májusfát -> májusf", function() {deepEqual( Stem("májusfát"), "májusf");});
test("májusfáért -> májusf", function() {deepEqual( Stem("májusfáért"), "májusf");});
test("májusi -> május", function() {deepEqual( Stem("májusi"), "május");});
test("májuskosaram -> májuskosar", function() {deepEqual( Stem("májuskosaram"), "májuskosar");});
test("májusig -> május", function() {deepEqual( Stem("májusig"), "május");});
test("május -> május", function() {deepEqual( Stem("május"), "május");});
test("májusról -> május", function() {deepEqual( Stem("májusról"), "május");});
test("májustól -> május", function() {deepEqual( Stem("májustól"), "május");});
test("májusában -> május", function() {deepEqual( Stem("májusában"), "május");});
test("májusának -> május", function() {deepEqual( Stem("májusának"), "május");});
test("májusára -> május", function() {deepEqual( Stem("májusára"), "május");});
test("májátültetés -> májátültetés", function() {deepEqual( Stem("májátültetés"), "májátültetés");});
test("májátültetésért -> májátültetés", function() {deepEqual( Stem("májátültetésért"), "májátültetés");});
test("mákot -> mák", function() {deepEqual( Stem("mákot"), "mák");});
test("máként -> má", function() {deepEqual( Stem("máként"), "má");});
test("mákültetvényei -> mákültetvény", function() {deepEqual( Stem("mákültetvényei"), "mákültetvény");});
test("málhás -> málhás", function() {deepEqual( Stem("málhás"), "málhás");});
test("málnaszörptől -> málnaszörp", function() {deepEqual( Stem("málnaszörptől"), "málnaszörp");});
test("málnaszörpöt -> málnaszörp", function() {deepEqual( Stem("málnaszörpöt"), "málnaszörp");});
test("mámor -> mámor", function() {deepEqual( Stem("mámor"), "mámor");});
test("mámora -> mám", function() {deepEqual( Stem("mámora"), "mám");});
test("mámort -> mámor", function() {deepEqual( Stem("mámort"), "mámor");});
test("mámorával -> mámor", function() {deepEqual( Stem("mámorával"), "mámor");});
test("mámoros -> mámoros", function() {deepEqual( Stem("mámoros"), "mámoros");});
test("mámorossá -> mámoros", function() {deepEqual( Stem("mámorossá"), "mámoros");});
test("mámorító -> mámorító", function() {deepEqual( Stem("mámorító"), "mámorító");});
test("mán -> má", function() {deepEqual( Stem("mán"), "má");});
test("mániákusa -> mániákus", function() {deepEqual( Stem("mániákusa"), "mániákus");});
test("mániákusan -> mániákus", function() {deepEqual( Stem("mániákusan"), "mániákus");});
test("már -> már", function() {deepEqual( Stem("már"), "már");});
test("már-már -> már-már", function() {deepEqual( Stem("már-már"), "már-már");});
test("mára -> má", function() {deepEqual( Stem("mára"), "má");});
test("március-körről -> március-kör", function() {deepEqual( Stem("március-körről"), "március-kör");});
test("március-áprilisban -> március-április", function() {deepEqual( Stem("március-áprilisban"), "március-április");});
test("márciusa -> március", function() {deepEqual( Stem("márciusa"), "március");});
test("március -> március", function() {deepEqual( Stem("március"), "március");});
test("márciusban -> március", function() {deepEqual( Stem("márciusban"), "március");});
test("márciusra -> március", function() {deepEqual( Stem("márciusra"), "március");});
test("márciustól -> március", function() {deepEqual( Stem("márciustól"), "március");});
test("márciusában -> március", function() {deepEqual( Stem("márciusában"), "március");});
test("márciusi -> március", function() {deepEqual( Stem("márciusi"), "március");});
test("márcsak -> márcs", function() {deepEqual( Stem("márcsak"), "márcs");});
test("márianosztrai -> márianosztr", function() {deepEqual( Stem("márianosztrai"), "márianosztr");});
test("máris -> máris", function() {deepEqual( Stem("máris"), "máris");});
test("márkaboltjaikat -> márkabolt", function() {deepEqual( Stem("márkaboltjaikat"), "márkabolt");});
test("márkaképviselőket -> márkaképviselő", function() {deepEqual( Stem("márkaképviselőket"), "márkaképviselő");});
test("márkanevű -> márkanevű", function() {deepEqual( Stem("márkanevű"), "márkanevű");});
test("márkanevek -> márkanev", function() {deepEqual( Stem("márkanevek"), "márkanev");});
test("márkanevet -> márkanev", function() {deepEqual( Stem("márkanevet"), "márkanev");});
test("márkanevéhez -> márkanev", function() {deepEqual( Stem("márkanevéhez"), "márkanev");});
test("márkanév -> márkanév", function() {deepEqual( Stem("márkanév"), "márkanév");});
test("márkanéven -> márkanév", function() {deepEqual( Stem("márkanéven"), "márkanév");});
test("márkanévvé -> márkanév", function() {deepEqual( Stem("márkanévvé"), "márkanév");});
test("márkaszerviz -> márkaszerviz", function() {deepEqual( Stem("márkaszerviz"), "márkaszerviz");});
test("márkatudatosság -> márkatudatosság", function() {deepEqual( Stem("márkatudatosság"), "márkatudatosság");});
test("márkaépítési -> márkaépítés", function() {deepEqual( Stem("márkaépítési"), "márkaépítés");});
test("márkaépítést -> márkaépítés", function() {deepEqual( Stem("márkaépítést"), "márkaépítés");});
test("márkája -> márká", function() {deepEqual( Stem("márkája"), "márká");});
test("márka -> már", function() {deepEqual( Stem("márka"), "már");});
test("márkáját -> márká", function() {deepEqual( Stem("márkáját"), "márká");});
test("márkájától -> márká", function() {deepEqual( Stem("márkájától"), "márká");});
test("márkára -> már", function() {deepEqual( Stem("márkára"), "már");});
test("márkát -> már", function() {deepEqual( Stem("márkát"), "már");});
test("márkától -> már", function() {deepEqual( Stem("márkától"), "már");});
test("márkával -> már", function() {deepEqual( Stem("márkával"), "már");});
test("márkájú -> márkájú", function() {deepEqual( Stem("márkájú"), "márkájú");});
test("márkás -> márkás", function() {deepEqual( Stem("márkás"), "márkás");});
test("mármint -> mármin", function() {deepEqual( Stem("mármint"), "mármin");});
test("márnára -> márn", function() {deepEqual( Stem("márnára"), "márn");});
test("márnát -> márn", function() {deepEqual( Stem("márnát"), "márn");});
test("márnával -> márn", function() {deepEqual( Stem("márnával"), "márn");});
test("márpedig -> márp", function() {deepEqual( Stem("márpedig"), "márp");});
test("márthattuk -> márthatt", function() {deepEqual( Stem("márthattuk"), "márthatt");});
test("mártásokkal -> mártás", function() {deepEqual( Stem("mártásokkal"), "mártás");});
test("mártást -> mártás", function() {deepEqual( Stem("mártást"), "mártás");});
test("mártírhalált -> mártírhalál", function() {deepEqual( Stem("mártírhalált"), "mártírhalál");});
test("mártír -> mártír", function() {deepEqual( Stem("mártír"), "mártír");});
test("mártírja -> mártír", function() {deepEqual( Stem("mártírja"), "mártír");});
test("mártírokat -> mártír", function() {deepEqual( Stem("mártírokat"), "mártír");});
test("márványdarabot -> márványdarab", function() {deepEqual( Stem("márványdarabot"), "márványdarab");});
test("márványeres -> márványeres", function() {deepEqual( Stem("márványeres"), "márványeres");});
test("márványszerkezet -> márványszerkez", function() {deepEqual( Stem("márványszerkezet"), "márványszerkez");});
test("márványtömb -> márványtömb", function() {deepEqual( Stem("márványtömb"), "márványtömb");});
test("márványutánzatú -> márványutánzatú", function() {deepEqual( Stem("márványutánzatú"), "márványutánzatú");});
test("márványba -> márvány", function() {deepEqual( Stem("márványba"), "márvány");});
test("más-más -> más-más", function() {deepEqual( Stem("más-más"), "más-más");});
test("mását -> más", function() {deepEqual( Stem("mását"), "más");});
test("másé -> más", function() {deepEqual( Stem("másé"), "más");});
test("másért -> más", function() {deepEqual( Stem("másért"), "más");});
test("másét -> más", function() {deepEqual( Stem("másét"), "más");});
test("mása -> más", function() {deepEqual( Stem("mása"), "más");});
test("másutt -> másut", function() {deepEqual( Stem("másutt"), "másut");});
test("másnál -> más", function() {deepEqual( Stem("másnál"), "más");});
test("más -> más", function() {deepEqual( Stem("más"), "más");});
test("másabb -> másabb", function() {deepEqual( Stem("másabb"), "másabb");});
test("másban -> más", function() {deepEqual( Stem("másban"), "más");});
test("másból -> más", function() {deepEqual( Stem("másból"), "más");});
test("máshoz -> más", function() {deepEqual( Stem("máshoz"), "más");});
test("másnak -> más", function() {deepEqual( Stem("másnak"), "más");});
test("mások -> más", function() {deepEqual( Stem("mások"), "más");});
test("másokat -> más", function() {deepEqual( Stem("másokat"), "más");});
test("másokban -> más", function() {deepEqual( Stem("másokban"), "más");});
test("másokkal -> más", function() {deepEqual( Stem("másokkal"), "más");});
test("másoknak -> más", function() {deepEqual( Stem("másoknak"), "más");});
test("másoknál -> más", function() {deepEqual( Stem("másoknál"), "más");});
test("másokon -> más", function() {deepEqual( Stem("másokon"), "más");});
test("másokra -> más", function() {deepEqual( Stem("másokra"), "más");});
test("másoktól -> más", function() {deepEqual( Stem("másoktól"), "más");});
test("másoké -> más", function() {deepEqual( Stem("másoké"), "más");});
test("másokért -> más", function() {deepEqual( Stem("másokért"), "más");});
test("másokéért -> más", function() {deepEqual( Stem("másokéért"), "más");});
test("mást -> más", function() {deepEqual( Stem("mást"), "más");});
test("mástól -> más", function() {deepEqual( Stem("mástól"), "más");});
test("máson -> más", function() {deepEqual( Stem("máson"), "más");});
test("másra -> más", function() {deepEqual( Stem("másra"), "más");});
test("másról -> más", function() {deepEqual( Stem("másról"), "más");});
test("mással -> más", function() {deepEqual( Stem("mással"), "más");});
test("másszor -> másszor", function() {deepEqual( Stem("másszor"), "másszor");});
test("mássá -> más", function() {deepEqual( Stem("mássá"), "más");});
test("másfajta -> másfajt", function() {deepEqual( Stem("másfajta"), "másfajt");});
test("másfelé -> másfel", function() {deepEqual( Stem("másfelé"), "másfel");});
test("másfelől -> másfelől", function() {deepEqual( Stem("másfelől"), "másfelől");});
test("másfél -> másfél", function() {deepEqual( Stem("másfél"), "másfél");});
test("másfél-két -> másfél-", function() {deepEqual( Stem("másfél-két"), "másfél-");});
test("másfél-kétszeres -> másfél-kétszeres", function() {deepEqual( Stem("másfél-kétszeres"), "másfél-kétszeres");});
test("másfélszeresének -> másfélszeres", function() {deepEqual( Stem("másfélszeresének"), "másfélszeres");});
test("másfélszeresét -> másfélszeres", function() {deepEqual( Stem("másfélszeresét"), "másfélszeres");});
test("máshogy -> máshogy", function() {deepEqual( Stem("máshogy"), "máshogy");});
test("másholt -> máshol", function() {deepEqual( Stem("másholt"), "máshol");});
test("másik -> más", function() {deepEqual( Stem("másik"), "más");});
test("másikat -> más", function() {deepEqual( Stem("másikat"), "más");});
test("másikba -> más", function() {deepEqual( Stem("másikba"), "más");});
test("másikban -> más", function() {deepEqual( Stem("másikban"), "más");});
test("másikhoz -> más", function() {deepEqual( Stem("másikhoz"), "más");});
test("másikig -> más", function() {deepEqual( Stem("másikig"), "más");});
test("másikkal -> más", function() {deepEqual( Stem("másikkal"), "más");});
test("másiknak -> más", function() {deepEqual( Stem("másiknak"), "más");});
test("másikon -> más", function() {deepEqual( Stem("másikon"), "más");});
test("másikra -> más", function() {deepEqual( Stem("másikra"), "más");});
test("másikról -> más", function() {deepEqual( Stem("másikról"), "más");});
test("másiktól -> más", function() {deepEqual( Stem("másiktól"), "más");});
test("másikuk -> más", function() {deepEqual( Stem("másikuk"), "más");});
test("másikunk -> más", function() {deepEqual( Stem("másikunk"), "más");});
test("másiké -> más", function() {deepEqual( Stem("másiké"), "más");});
test("másikéra -> más", function() {deepEqual( Stem("másikéra"), "más");});
test("másikért -> más", function() {deepEqual( Stem("másikért"), "más");});
test("másikét -> más", function() {deepEqual( Stem("másikét"), "más");});
test("másirányú -> másirányú", function() {deepEqual( Stem("másirányú"), "másirányú");});
test("máskor -> más", function() {deepEqual( Stem("máskor"), "más");});
test("máskorra -> máskor", function() {deepEqual( Stem("máskorra"), "máskor");});
test("másként -> más", function() {deepEqual( Stem("másként"), "más");});
test("másképp -> más", function() {deepEqual( Stem("másképp"), "más");});
test("másképpen -> más", function() {deepEqual( Stem("másképpen"), "más");});
test("máskülönben -> máskülön", function() {deepEqual( Stem("máskülönben"), "máskülön");});
test("másmilyen -> másmily", function() {deepEqual( Stem("másmilyen"), "másmily");});
test("másnapi -> másnap", function() {deepEqual( Stem("másnapi"), "másnap");});
test("másnap -> másnap", function() {deepEqual( Stem("másnap"), "másnap");});
test("másnapig -> másnap", function() {deepEqual( Stem("másnapig"), "másnap");});
test("másnapja -> másnap", function() {deepEqual( Stem("másnapja"), "másnap");});
test("másnapján -> másnap", function() {deepEqual( Stem("másnapján"), "másnap");});
test("másnapra -> másnap", function() {deepEqual( Stem("másnapra"), "másnap");});
test("másnaposokat -> másnapos", function() {deepEqual( Stem("másnaposokat"), "másnapos");});
test("másnaposságra -> másnaposság", function() {deepEqual( Stem("másnaposságra"), "másnaposság");});
test("másnaposságtól -> másnaposság", function() {deepEqual( Stem("másnaposságtól"), "másnaposság");});
test("másodfokon -> másodf", function() {deepEqual( Stem("másodfokon"), "másodf");});
test("másodfokú -> másodfokú", function() {deepEqual( Stem("másodfokú"), "másodfokú");});
test("második -> másod", function() {deepEqual( Stem("második"), "másod");});
test("másodika -> másod", function() {deepEqual( Stem("másodika"), "másod");});
test("másodikat -> másod", function() {deepEqual( Stem("másodikat"), "másod");});
test("másodikban -> másod", function() {deepEqual( Stem("másodikban"), "másod");});
test("másodikhoz -> másod", function() {deepEqual( Stem("másodikhoz"), "másod");});
test("másodikkal -> másod", function() {deepEqual( Stem("másodikkal"), "másod");});
test("másodikként -> másod", function() {deepEqual( Stem("másodikként"), "másod");});
test("másodiknak -> másod", function() {deepEqual( Stem("másodiknak"), "másod");});
test("másodikok -> második", function() {deepEqual( Stem("másodikok"), "második");});
test("másodikon -> másod", function() {deepEqual( Stem("másodikon"), "másod");});
test("másodikra -> másod", function() {deepEqual( Stem("másodikra"), "másod");});
test("másodikán -> másod", function() {deepEqual( Stem("másodikán"), "másod");});
test("másodikos -> másodikos", function() {deepEqual( Stem("másodikos"), "másodikos");});
test("másodikosok -> másodikos", function() {deepEqual( Stem("másodikosok"), "másodikos");});
test("másodjára -> másod", function() {deepEqual( Stem("másodjára"), "másod");});
test("másodlag -> másodlag", function() {deepEqual( Stem("másodlag"), "másodlag");});
test("másodlagos -> másodlagos", function() {deepEqual( Stem("másodlagos"), "másodlagos");});
test("másodlagosan -> másodlagos", function() {deepEqual( Stem("másodlagosan"), "másodlagos");});
test("másodosztályú -> másodosztályú", function() {deepEqual( Stem("másodosztályú"), "másodosztályú");});
test("másodperc -> másodperc", function() {deepEqual( Stem("másodperc"), "másodperc");});
test("másodpercben -> másodperc", function() {deepEqual( Stem("másodpercben"), "másodperc");});
test("másodperccel -> másodperc", function() {deepEqual( Stem("másodperccel"), "másodperc");});
test("másodperce -> másodperc", function() {deepEqual( Stem("másodperce"), "másodperc");});
test("másodpercek -> másodperc", function() {deepEqual( Stem("másodpercek"), "másodperc");});
test("másodpercekben -> másodperc", function() {deepEqual( Stem("másodpercekben"), "másodperc");});
test("másodperceken -> másodperc", function() {deepEqual( Stem("másodperceken"), "másodperc");});
test("másodpercekig -> másodperc", function() {deepEqual( Stem("másodpercekig"), "másodperc");});
test("másodpercen -> másodperc", function() {deepEqual( Stem("másodpercen"), "másodperc");});
test("másodpercenként -> másodperc", function() {deepEqual( Stem("másodpercenként"), "másodperc");});
test("másodpercet -> másodperc", function() {deepEqual( Stem("másodpercet"), "másodperc");});
test("másodpercig -> másodperc", function() {deepEqual( Stem("másodpercig"), "másodperc");});
test("másodpercnél -> másodperc", function() {deepEqual( Stem("másodpercnél"), "másodperc");});
test("másodpercre -> másodperc", function() {deepEqual( Stem("másodpercre"), "másodperc");});
test("másodperces -> másodperces", function() {deepEqual( Stem("másodperces"), "másodperces");});
test("másodpercnyi -> másodpercny", function() {deepEqual( Stem("másodpercnyi"), "másodpercny");});
test("másodpiaci -> másodpiac", function() {deepEqual( Stem("másodpiaci"), "másodpiac");});
test("másodrangúvá -> másodrangú", function() {deepEqual( Stem("másodrangúvá"), "másodrangú");});
test("másodszakosoknak -> másodszakos", function() {deepEqual( Stem("másodszakosoknak"), "másodszakos");});
test("másodszor -> másodszor", function() {deepEqual( Stem("másodszor"), "másodszor");});
test("másodszorra -> másodszor", function() {deepEqual( Stem("másodszorra"), "másodszor");});
test("másodszülőknek -> másodszülő", function() {deepEqual( Stem("másodszülőknek"), "másodszülő");});
test("másodunokatestvéremet -> másodunokatestvér", function() {deepEqual( Stem("másodunokatestvéremet"), "másodunokatestvér");});
test("másodvezetőt -> másodvezető", function() {deepEqual( Stem("másodvezetőt"), "másodvezető");});
test("másodállásban -> másodállás", function() {deepEqual( Stem("másodállásban"), "másodállás");});
test("másodízben -> másodíz", function() {deepEqual( Stem("másodízben"), "másodíz");});
test("másolat -> másol", function() {deepEqual( Stem("másolat"), "másol");});
test("másolata -> másolat", function() {deepEqual( Stem("másolata"), "másolat");});
test("másolatai -> másolat", function() {deepEqual( Stem("másolatai"), "másolat");});
test("másolataik -> másolat", function() {deepEqual( Stem("másolataik"), "másolat");});
test("másolatain -> másolat", function() {deepEqual( Stem("másolatain"), "másolat");});
test("másolatainak -> másolat", function() {deepEqual( Stem("másolatainak"), "másolat");});
test("másolatait -> másolat", function() {deepEqual( Stem("másolatait"), "másolat");});
test("másolataival -> másolat", function() {deepEqual( Stem("másolataival"), "másolat");});
test("másolatba -> másolat", function() {deepEqual( Stem("másolatba"), "másolat");});
test("másolatban -> másolat", function() {deepEqual( Stem("másolatban"), "másolat");});
test("másolatnak -> másolat", function() {deepEqual( Stem("másolatnak"), "másolat");});
test("másolatok -> másolat", function() {deepEqual( Stem("másolatok"), "másolat");});
test("másolatokat -> másolat", function() {deepEqual( Stem("másolatokat"), "másolat");});
test("másolatot -> másolat", function() {deepEqual( Stem("másolatot"), "másolat");});
test("másolattal -> másol", function() {deepEqual( Stem("másolattal"), "másol");});
test("másolatának -> másolat", function() {deepEqual( Stem("másolatának"), "másolat");});
test("másolatát -> másolat", function() {deepEqual( Stem("másolatát"), "másolat");});
test("másolati -> másolat", function() {deepEqual( Stem("másolati"), "másolat");});
test("másolatkészítés -> másolatkészítés", function() {deepEqual( Stem("másolatkészítés"), "másolatkészítés");});
test("másolatkészítéshez -> másolatkészítés", function() {deepEqual( Stem("másolatkészítéshez"), "másolatkészítés");});
test("másolatkészítésnél -> másolatkészítés", function() {deepEqual( Stem("másolatkészítésnél"), "másolatkészítés");});
test("másolatkészítésre -> másolatkészítés", function() {deepEqual( Stem("másolatkészítésre"), "másolatkészítés");});
test("másolatkészítő -> másolatkészítő", function() {deepEqual( Stem("másolatkészítő"), "másolatkészítő");});
test("másolhassa -> másolhass", function() {deepEqual( Stem("másolhassa"), "másolhass");});
test("másolható -> másolható", function() {deepEqual( Stem("másolható"), "másolható");});
test("másolhatók -> másolható", function() {deepEqual( Stem("másolhatók"), "másolható");});
test("másol -> másol", function() {deepEqual( Stem("másol"), "másol");});
test("másolja -> másol", function() {deepEqual( Stem("másolja"), "másol");});
test("másoljuk -> másol", function() {deepEqual( Stem("másoljuk"), "másol");});
test("másolják -> másolja", function() {deepEqual( Stem("másolják"), "másolja");});
test("másolni -> másoln", function() {deepEqual( Stem("másolni"), "másoln");});
test("másolnom -> másoln", function() {deepEqual( Stem("másolnom"), "másoln");});
test("másolnunk -> másoln", function() {deepEqual( Stem("másolnunk"), "másoln");});
test("másolom -> másol", function() {deepEqual( Stem("másolom"), "másol");});
test("másoltak -> másolt", function() {deepEqual( Stem("másoltak"), "másolt");});
test("másoltam -> másolt", function() {deepEqual( Stem("másoltam"), "másolt");});
test("másolunk -> másol", function() {deepEqual( Stem("másolunk"), "másol");});
test("másolt -> másol", function() {deepEqual( Stem("másolt"), "másol");});
test("másoltat -> másolt", function() {deepEqual( Stem("másoltat"), "másolt");});
test("másoltatásnál -> másoltatás", function() {deepEqual( Stem("másoltatásnál"), "másoltatás");});
test("másolás -> másolás", function() {deepEqual( Stem("másolás"), "másolás");});
test("másolása -> másolás", function() {deepEqual( Stem("másolása"), "másolás");});
test("másolásban -> másolás", function() {deepEqual( Stem("másolásban"), "másolás");});
test("másolásnak -> másolás", function() {deepEqual( Stem("másolásnak"), "másolás");});
test("másolások -> másolás", function() {deepEqual( Stem("másolások"), "másolás");});
test("másolásra -> másolás", function() {deepEqual( Stem("másolásra"), "másolás");});
test("másolással -> másolás", function() {deepEqual( Stem("másolással"), "másolás");});
test("másolást -> másolás", function() {deepEqual( Stem("másolást"), "másolás");});
test("másolásához -> másolás", function() {deepEqual( Stem("másolásához"), "másolás");});
test("másolására -> másolás", function() {deepEqual( Stem("másolására"), "másolás");});
test("másolását -> másolás", function() {deepEqual( Stem("másolását"), "másolás");});
test("másolásétól -> másolás", function() {deepEqual( Stem("másolásétól"), "másolás");});
test("másolási -> másolás", function() {deepEqual( Stem("másolási"), "másolás");});
test("másolásvédelmére -> másolásvédelm", function() {deepEqual( Stem("másolásvédelmére"), "másolásvédelm");});
test("másoló-nyomtató -> másoló-nyomtató", function() {deepEqual( Stem("másoló-nyomtató"), "másoló-nyomtató");});
test("másológép -> másológép", function() {deepEqual( Stem("másológép"), "másológép");});
test("másológépek -> másológép", function() {deepEqual( Stem("másológépek"), "másológép");});
test("másoló -> másoló", function() {deepEqual( Stem("másoló"), "másoló");});
test("másolóink -> másoló", function() {deepEqual( Stem("másolóink"), "másoló");});
test("másolókat -> másoló", function() {deepEqual( Stem("másolókat"), "másoló");});
test("másolóén -> másoló", function() {deepEqual( Stem("másolóén"), "másoló");});
test("másolópapír -> másolópapír", function() {deepEqual( Stem("másolópapír"), "másolópapír");});
test("másolópapíros -> másolópapíros", function() {deepEqual( Stem("másolópapíros"), "másolópapíros");});
test("másolóüzemek -> másolóüzem", function() {deepEqual( Stem("másolóüzemek"), "másolóüzem");});
test("másrap -> másrap", function() {deepEqual( Stem("másrap"), "másrap");});
test("másszóval -> másszó", function() {deepEqual( Stem("másszóval"), "másszó");});
test("másságáról -> másság", function() {deepEqual( Stem("másságáról"), "másság");});
test("másvalaki -> másval", function() {deepEqual( Stem("másvalaki"), "másval");});
test("másvalakire -> másval", function() {deepEqual( Stem("másvalakire"), "másval");});
test("másvalakivel -> másval", function() {deepEqual( Stem("másvalakivel"), "másval");});
test("másvalakivé -> másval", function() {deepEqual( Stem("másvalakivé"), "másval");});
test("másvalakiét -> másval", function() {deepEqual( Stem("másvalakiét"), "másval");});
test("mászkál -> mászkál", function() {deepEqual( Stem("mászkál"), "mászkál");});
test("mászkálnak -> mászkál", function() {deepEqual( Stem("mászkálnak"), "mászkál");});
test("mászkálni -> mászkáln", function() {deepEqual( Stem("mászkálni"), "mászkáln");});
test("mászkált -> mászkál", function() {deepEqual( Stem("mászkált"), "mászkál");});
test("mászkáltak -> mászkált", function() {deepEqual( Stem("mászkáltak"), "mászkált");});
test("mászkáltunk -> mászkált", function() {deepEqual( Stem("mászkáltunk"), "mászkált");});
test("mászkálunk -> mászkál", function() {deepEqual( Stem("mászkálunk"), "mászkál");});
test("mászkálás -> mászkálás", function() {deepEqual( Stem("mászkálás"), "mászkálás");});
test("mászkáló -> mászkáló", function() {deepEqual( Stem("mászkáló"), "mászkáló");});
test("mászik -> mász", function() {deepEqual( Stem("mászik"), "mász");});
test("másznak -> mász", function() {deepEqual( Stem("másznak"), "mász");});
test("mászni -> mászn", function() {deepEqual( Stem("mászni"), "mászn");});
test("másztak -> mászt", function() {deepEqual( Stem("másztak"), "mászt");});
test("másztam -> mászt", function() {deepEqual( Stem("másztam"), "mászt");});
test("másztuk -> mászt", function() {deepEqual( Stem("másztuk"), "mászt");});
test("másztunk -> mászt", function() {deepEqual( Stem("másztunk"), "mászt");});
test("mászott -> mászot", function() {deepEqual( Stem("mászott"), "mászot");});
test("mászás -> mászás", function() {deepEqual( Stem("mászás"), "mászás");});
test("mászóhelyek -> mászóhely", function() {deepEqual( Stem("mászóhelyek"), "mászóhely");});
test("mászóka -> mászó", function() {deepEqual( Stem("mászóka"), "mászó");});
test("mászókat -> mászó", function() {deepEqual( Stem("mászókat"), "mászó");});
test("mászót -> mászó", function() {deepEqual( Stem("mászót"), "mászó");});
test("mászótechnikáról -> mászótechn", function() {deepEqual( Stem("mászótechnikáról"), "mászótechn");});
test("másítania -> másítan", function() {deepEqual( Stem("másítania"), "másítan");});
test("mát -> má", function() {deepEqual( Stem("mát"), "má");});
test("máig -> má", function() {deepEqual( Stem("máig"), "má");});
test("mába -> má", function() {deepEqual( Stem("mába"), "má");});
test("máról -> má", function() {deepEqual( Stem("máról"), "má");});
test("ma -> ma", function() {deepEqual( Stem("ma"), "ma");});
test("mától -> má", function() {deepEqual( Stem("mától"), "má");});
test("mátrai -> mátr", function() {deepEqual( Stem("mátrai"), "mátr");});
test("mátrixnyomtató -> mátrixnyomtató", function() {deepEqual( Stem("mátrixnyomtató"), "mátrixnyomtató");});
test("mávön -> máv", function() {deepEqual( Stem("mávön"), "máv");});
test("mázlija -> mázl", function() {deepEqual( Stem("mázlija"), "mázl");});
test("mázlisták -> mázlista", function() {deepEqual( Stem("mázlisták"), "mázlista");});
test("mázoló -> mázoló", function() {deepEqual( Stem("mázoló"), "mázoló");});
test("mázsa -> mázs", function() {deepEqual( Stem("mázsa"), "mázs");});
test("mázsás -> mázsás", function() {deepEqual( Stem("mázsás"), "mázsás");});
test("mázát -> máz", function() {deepEqual( Stem("mázát"), "máz");});
test("mécs -> mécs", function() {deepEqual( Stem("mécs"), "mécs");});
test("mécses -> mécses", function() {deepEqual( Stem("mécses"), "mécses");});
test("mécsesről -> mécses", function() {deepEqual( Stem("mécsesről"), "mécses");});
test("mécsest -> mécses", function() {deepEqual( Stem("mécsest"), "mécses");});
test("mécsszerű -> mécsszerű", function() {deepEqual( Stem("mécsszerű"), "mécsszerű");});
test("média-mindenhatóság -> média-mindenhatóság", function() {deepEqual( Stem("média-mindenhatóság"), "média-mindenhatóság");});
test("média-távközlés-informatika -> média-távközlés-informat", function() {deepEqual( Stem("média-távközlés-informatika"), "média-távközlés-informat");});
test("média-webhellyé -> média-webhely", function() {deepEqual( Stem("média-webhellyé"), "média-webhely");});
test("médiabirodalom -> médiabirodal", function() {deepEqual( Stem("médiabirodalom"), "médiabirodal");});
test("médiabirodalommal -> médiabirodal", function() {deepEqual( Stem("médiabirodalommal"), "médiabirodal");});
test("médiagond -> médiagon", function() {deepEqual( Stem("médiagond"), "médiagon");});
test("médiahatás -> médiahatás", function() {deepEqual( Stem("médiahatás"), "médiahatás");});
test("médiahatást -> médiahatás", function() {deepEqual( Stem("médiahatást"), "médiahatás");});
test("médiahatóság -> médiahatóság", function() {deepEqual( Stem("médiahatóság"), "médiahatóság");});
test("médiaháború -> médiaháború", function() {deepEqual( Stem("médiaháború"), "médiaháború");});
test("médiajelenlét -> médiajelenl", function() {deepEqual( Stem("médiajelenlét"), "médiajelenl");});
test("médiajogi -> médiajog", function() {deepEqual( Stem("médiajogi"), "médiajog");});
test("médiajogilag -> médiajogilag", function() {deepEqual( Stem("médiajogilag"), "médiajogilag");});
test("médiakonszern -> médiakonszer", function() {deepEqual( Stem("médiakonszern"), "médiakonszer");});
test("médiakutatók -> médiakutató", function() {deepEqual( Stem("médiakutatók"), "médiakutató");});
test("médiakép -> médiakép", function() {deepEqual( Stem("médiakép"), "médiakép");});
test("médiakörünkben -> médiakör", function() {deepEqual( Stem("médiakörünkben"), "médiakör");});
test("médialejátszót -> médialejátszó", function() {deepEqual( Stem("médialejátszót"), "médialejátszó");});
test("médiamanipuláció -> médiamanipuláció", function() {deepEqual( Stem("médiamanipuláció"), "médiamanipuláció");});
test("médiamenedzseri -> médiamenedzser", function() {deepEqual( Stem("médiamenedzseri"), "médiamenedzser");});
test("médiamix -> médiamix", function() {deepEqual( Stem("médiamix"), "médiamix");});
test("médiamágnást -> médiamágnás", function() {deepEqual( Stem("médiamágnást"), "médiamágnás");});
test("médianagyhatalommá -> médianagyhatal", function() {deepEqual( Stem("médianagyhatalommá"), "médianagyhatal");});
test("médiastratégiát -> médiastratég", function() {deepEqual( Stem("médiastratégiát"), "médiastratég");});
test("médiaszenzációt -> médiaszenzáció", function() {deepEqual( Stem("médiaszenzációt"), "médiaszenzáció");});
test("médiaszolgáltatásainak -> médiaszolgáltatás", function() {deepEqual( Stem("médiaszolgáltatásainak"), "médiaszolgáltatás");});
test("médiatanszékének -> médiatansze", function() {deepEqual( Stem("médiatanszékének"), "médiatansze");});
test("médiatestületben -> médiatestület", function() {deepEqual( Stem("médiatestületben"), "médiatestület");});
test("médiatípusok -> médiatípus", function() {deepEqual( Stem("médiatípusok"), "médiatípus");});
test("médiatörvény -> médiatörvény", function() {deepEqual( Stem("médiatörvény"), "médiatörvény");});
test("médiatörvényhez -> médiatörvény", function() {deepEqual( Stem("médiatörvényhez"), "médiatörvény");});
test("médiaállományokat -> médiaállomány", function() {deepEqual( Stem("médiaállományokat"), "médiaállomány");});
test("médiaóriás -> médiaóriás", function() {deepEqual( Stem("médiaóriás"), "médiaóriás");});
test("médiaüzletágának -> médiaüzletág", function() {deepEqual( Stem("médiaüzletágának"), "médiaüzletág");});
test("médium -> médiu", function() {deepEqual( Stem("médium"), "médiu");});
test("médiumban -> médiu", function() {deepEqual( Stem("médiumban"), "médiu");});
test("médiummá -> médiu", function() {deepEqual( Stem("médiummá"), "médiu");});
test("médiumok -> médium", function() {deepEqual( Stem("médiumok"), "médium");});
test("médiumokban -> médium", function() {deepEqual( Stem("médiumokban"), "médium");});
test("médiában -> méd", function() {deepEqual( Stem("médiában"), "méd");});
test("média -> méd", function() {deepEqual( Stem("média"), "méd");});
test("médiából -> méd", function() {deepEqual( Stem("médiából"), "méd");});
test("médiának -> méd", function() {deepEqual( Stem("médiának"), "méd");});
test("médiáról -> méd", function() {deepEqual( Stem("médiáról"), "méd");});
test("médiát -> méd", function() {deepEqual( Stem("médiát"), "méd");});
test("médiával -> méd", function() {deepEqual( Stem("médiával"), "méd");});
test("médiáért -> méd", function() {deepEqual( Stem("médiáért"), "méd");});
test("még -> még", function() {deepEqual( Stem("még"), "még");});
test("mégcsak -> mégcs", function() {deepEqual( Stem("mégcsak"), "mégcs");});
test("mégegyszer -> mégegyszer", function() {deepEqual( Stem("mégegyszer"), "mégegyszer");});
test("mégha -> mégh", function() {deepEqual( Stem("mégha"), "mégh");});
test("méghozzá -> méghoz", function() {deepEqual( Stem("méghozzá"), "méghoz");});
test("mégis -> mégis", function() {deepEqual( Stem("mégis"), "mégis");});
test("mégiscsak -> mégiscs", function() {deepEqual( Stem("mégiscsak"), "mégiscs");});
test("mégoly -> mégoly", function() {deepEqual( Stem("mégoly"), "mégoly");});
test("mégpedig -> mégp", function() {deepEqual( Stem("mégpedig"), "mégp");});
test("mégse -> mégs", function() {deepEqual( Stem("mégse"), "mégs");});
test("mégsem -> mégs", function() {deepEqual( Stem("mégsem"), "mégs");});
test("mégy -> mégy", function() {deepEqual( Stem("mégy"), "mégy");});
test("méhe -> méh", function() {deepEqual( Stem("méhe"), "méh");});
test("méhednek -> méh", function() {deepEqual( Stem("méhednek"), "méh");});
test("méhek -> méh", function() {deepEqual( Stem("méhek"), "méh");});
test("méhnek -> méh", function() {deepEqual( Stem("méhnek"), "méh");});
test("méhükben -> méh", function() {deepEqual( Stem("méhükben"), "méh");});
test("méhkiállítást -> méhkiállítás", function() {deepEqual( Stem("méhkiállítást"), "méhkiállítás");});
test("méla -> mél", function() {deepEqual( Stem("méla"), "mél");});
test("mélabú -> mélabú", function() {deepEqual( Stem("mélabú"), "mélabú");});
test("mélabúja -> mélabú", function() {deepEqual( Stem("mélabúja"), "mélabú");});
test("mélabúsan -> mélabús", function() {deepEqual( Stem("mélabúsan"), "mélabús");});
test("méltatlan -> méltatl", function() {deepEqual( Stem("méltatlan"), "méltatl");});
test("méltatlankodva -> méltatlankodv", function() {deepEqual( Stem("méltatlankodva"), "méltatlankodv");});
test("méltatta -> méltatt", function() {deepEqual( Stem("méltatta"), "méltatt");});
test("méltatják -> méltatja", function() {deepEqual( Stem("méltatják"), "méltatja");});
test("méltán -> mélt", function() {deepEqual( Stem("méltán"), "mélt");});
test("méltánylást -> méltánylás", function() {deepEqual( Stem("méltánylást"), "méltánylás");});
test("méltányolandó -> méltányolandó", function() {deepEqual( Stem("méltányolandó"), "méltányolandó");});
test("méltányolhatja -> méltányolhat", function() {deepEqual( Stem("méltányolhatja"), "méltányolhat");});
test("méltányolhattuk -> méltányolhatt", function() {deepEqual( Stem("méltányolhattuk"), "méltányolhatt");});
test("méltányolható -> méltányolható", function() {deepEqual( Stem("méltányolható"), "méltányolható");});
test("méltányolni -> méltányoln", function() {deepEqual( Stem("méltányolni"), "méltányoln");});
test("méltányos -> méltányos", function() {deepEqual( Stem("méltányos"), "méltányos");});
test("méltányosan -> méltányos", function() {deepEqual( Stem("méltányosan"), "méltányos");});
test("méltányossági -> méltányosság", function() {deepEqual( Stem("méltányossági"), "méltányosság");});
test("méltányosságot -> méltányosság", function() {deepEqual( Stem("méltányosságot"), "méltányosság");});
test("méltánytalan -> méltánytal", function() {deepEqual( Stem("méltánytalan"), "méltánytal");});
test("méltánytalanság -> méltánytalanság", function() {deepEqual( Stem("méltánytalanság"), "méltánytalanság");});
test("méltánytalanságnak -> méltánytalanság", function() {deepEqual( Stem("méltánytalanságnak"), "méltánytalanság");});
test("méltó -> méltó", function() {deepEqual( Stem("méltó"), "méltó");});
test("méltóan -> méltó", function() {deepEqual( Stem("méltóan"), "méltó");});
test("méltóbb -> méltóbb", function() {deepEqual( Stem("méltóbb"), "méltóbb");});
test("méltónak -> méltó", function() {deepEqual( Stem("méltónak"), "méltó");});
test("méltójan -> méltój", function() {deepEqual( Stem("méltójan"), "méltój");});
test("méltóképpen -> méltó", function() {deepEqual( Stem("méltóképpen"), "méltó");});
test("méltóság -> méltóság", function() {deepEqual( Stem("méltóság"), "méltóság");});
test("méltósága -> méltóság", function() {deepEqual( Stem("méltósága"), "méltóság");});
test("méltósággal -> méltóság", function() {deepEqual( Stem("méltósággal"), "méltóság");});
test("méltóságom -> méltóság", function() {deepEqual( Stem("méltóságom"), "méltóság");});
test("méltóságomra -> méltóság", function() {deepEqual( Stem("méltóságomra"), "méltóság");});
test("méltóságot -> méltóság", function() {deepEqual( Stem("méltóságot"), "méltóság");});
test("méltóságukat -> méltóság", function() {deepEqual( Stem("méltóságukat"), "méltóság");});
test("méltóságához -> méltóság", function() {deepEqual( Stem("méltóságához"), "méltóság");});
test("méltóságának -> méltóság", function() {deepEqual( Stem("méltóságának"), "méltóság");});
test("méltóságát -> méltóság", function() {deepEqual( Stem("méltóságát"), "méltóság");});
test("méltóságteljes -> méltóságteljes", function() {deepEqual( Stem("méltóságteljes"), "méltóságteljes");});
test("mély -> mély", function() {deepEqual( Stem("mély"), "mély");});
test("mélybe -> mély", function() {deepEqual( Stem("mélybe"), "mély");});
test("mélyebb -> mélyebb", function() {deepEqual( Stem("mélyebb"), "mélyebb");});
test("mélyebbek -> mélyebb", function() {deepEqual( Stem("mélyebbek"), "mélyebb");});
test("mélyebben -> mélyeb", function() {deepEqual( Stem("mélyebben"), "mélyeb");});
test("mélyebbre -> mélyebb", function() {deepEqual( Stem("mélyebbre"), "mélyebb");});
test("mélyebbről -> mélyebb", function() {deepEqual( Stem("mélyebbről"), "mélyebb");});
test("mélyen -> mély", function() {deepEqual( Stem("mélyen"), "mély");});
test("mélyet -> mély", function() {deepEqual( Stem("mélyet"), "mély");});
test("mélyre -> mély", function() {deepEqual( Stem("mélyre"), "mély");});
test("mélyről -> mély", function() {deepEqual( Stem("mélyről"), "mély");});
test("mélyébe -> mély", function() {deepEqual( Stem("mélyébe"), "mély");});
test("mélyében -> mély", function() {deepEqual( Stem("mélyében"), "mély");});
test("mélyéből -> mély", function() {deepEqual( Stem("mélyéből"), "mély");});
test("mélyén -> mély", function() {deepEqual( Stem("mélyén"), "mély");});
test("mélyére -> mély", function() {deepEqual( Stem("mélyére"), "mély");});
test("mélyéről -> mély", function() {deepEqual( Stem("mélyéről"), "mély");});
test("mélyedjen -> mélyedj", function() {deepEqual( Stem("mélyedjen"), "mélyedj");});
test("mélyedjünk -> mélyedj", function() {deepEqual( Stem("mélyedjünk"), "mélyedj");});
test("mélyedni -> mélyedn", function() {deepEqual( Stem("mélyedni"), "mélyedn");});
test("mélyedéseket -> mélyedés", function() {deepEqual( Stem("mélyedéseket"), "mélyedés");});
test("mélyedést -> mélyedés", function() {deepEqual( Stem("mélyedést"), "mélyedés");});
test("mélyfekete -> mélyfeket", function() {deepEqual( Stem("mélyfekete"), "mélyfeket");});
test("mélyföldeket -> mélyföld", function() {deepEqual( Stem("mélyföldeket"), "mélyföld");});
test("mélygarázs -> mélygarázs", function() {deepEqual( Stem("mélygarázs"), "mélygarázs");});
test("mélyhangú -> mélyhangú", function() {deepEqual( Stem("mélyhangú"), "mélyhangú");});
test("mélyhűtő -> mélyhűtő", function() {deepEqual( Stem("mélyhűtő"), "mélyhűtő");});
test("mélyhűtőbe -> mélyhűtő", function() {deepEqual( Stem("mélyhűtőbe"), "mélyhűtő");});
test("mélyhűtött -> mélyhűtöt", function() {deepEqual( Stem("mélyhűtött"), "mélyhűtöt");});
test("mélyművelésű -> mélyművelésű", function() {deepEqual( Stem("mélyművelésű"), "mélyművelésű");});
test("mélypontja -> mélypont", function() {deepEqual( Stem("mélypontja"), "mélypont");});
test("mélyreható -> mélyreható", function() {deepEqual( Stem("mélyreható"), "mélyreható");});
test("mélyrepülés -> mélyrepülés", function() {deepEqual( Stem("mélyrepülés"), "mélyrepülés");});
test("mélyrepülésbe -> mélyrepülés", function() {deepEqual( Stem("mélyrepülésbe"), "mélyrepülés");});
test("mélyrepülését -> mélyrepülés", function() {deepEqual( Stem("mélyrepülését"), "mélyrepülés");});
test("mélységbe -> mélység", function() {deepEqual( Stem("mélységbe"), "mélység");});
test("mélységben -> mélység", function() {deepEqual( Stem("mélységben"), "mélység");});
test("mélységből -> mélység", function() {deepEqual( Stem("mélységből"), "mélység");});
test("mélységeiben -> mélység", function() {deepEqual( Stem("mélységeiben"), "mélység");});
test("mélységeiből -> mélység", function() {deepEqual( Stem("mélységeiből"), "mélység");});
test("mélységekbe -> mélység", function() {deepEqual( Stem("mélységekbe"), "mélység");});
test("mélységet -> mélység", function() {deepEqual( Stem("mélységet"), "mélység");});
test("mélységig -> mélység", function() {deepEqual( Stem("mélységig"), "mélység");});
test("mélységtől -> mélység", function() {deepEqual( Stem("mélységtől"), "mélység");});
test("mélységében -> mélység", function() {deepEqual( Stem("mélységében"), "mélység");});
test("mélységéig -> mélység", function() {deepEqual( Stem("mélységéig"), "mélység");});
test("mélységének -> mélység", function() {deepEqual( Stem("mélységének"), "mélység");});
test("mélységéről -> mélység", function() {deepEqual( Stem("mélységéről"), "mélység");});
test("mélységes -> mélységes", function() {deepEqual( Stem("mélységes"), "mélységes");});
test("mélységesen -> mélységes", function() {deepEqual( Stem("mélységesen"), "mélységes");});
test("mélységű -> mélységű", function() {deepEqual( Stem("mélységű"), "mélységű");});
test("mélyvízi -> mélyvíz", function() {deepEqual( Stem("mélyvízi"), "mélyvíz");});
test("mélyvörös -> mélyvörös", function() {deepEqual( Stem("mélyvörös"), "mélyvörös");});
test("mélyépítésű -> mélyépítésű", function() {deepEqual( Stem("mélyépítésű"), "mélyépítésű");});
test("mélyítését -> mélyítés", function() {deepEqual( Stem("mélyítését"), "mélyítés");});
test("mélyülni -> mélyüln", function() {deepEqual( Stem("mélyülni"), "mélyüln");});
test("mélyült -> mélyül", function() {deepEqual( Stem("mélyült"), "mélyül");});
test("mélyülő -> mélyülő", function() {deepEqual( Stem("mélyülő"), "mélyülő");});
test("mélázott -> mélázot", function() {deepEqual( Stem("mélázott"), "mélázot");});
test("méneket -> mén", function() {deepEqual( Stem("méneket"), "mén");});
test("ménesben -> ménes", function() {deepEqual( Stem("ménesben"), "ménes");});
test("ménest -> ménes", function() {deepEqual( Stem("ménest"), "ménes");});
test("mércéje -> mércé", function() {deepEqual( Stem("mércéje"), "mércé");});
test("mércét -> mérc", function() {deepEqual( Stem("mércét"), "mérc");});
test("méregdrága -> méregdrág", function() {deepEqual( Stem("méregdrága"), "méregdrág");});
test("méregeti -> méreget", function() {deepEqual( Stem("méregeti"), "méreget");});
test("méregette -> méregett", function() {deepEqual( Stem("méregette"), "méregett");});
test("méregették -> méregette", function() {deepEqual( Stem("méregették"), "méregette");});
test("méregkeverés -> méregkeverés", function() {deepEqual( Stem("méregkeverés"), "méregkeverés");});
test("méregkeverő -> méregkeverő", function() {deepEqual( Stem("méregkeverő"), "méregkeverő");});
test("méregtől -> méreg", function() {deepEqual( Stem("méregtől"), "méreg");});
test("méreg -> méreg", function() {deepEqual( Stem("méreg"), "méreg");});
test("mérgek -> mérg", function() {deepEqual( Stem("mérgek"), "mérg");});
test("mérget -> mérg", function() {deepEqual( Stem("mérget"), "mérg");});
test("mérgében -> mérg", function() {deepEqual( Stem("mérgében"), "mérg");});
test("mérgünkben -> mérg", function() {deepEqual( Stem("mérgünkben"), "mérg");});
test("méregzöld -> méregzöl", function() {deepEqual( Stem("méregzöld"), "méregzöl");});
test("mér -> mér", function() {deepEqual( Stem("mér"), "mér");});
test("mérek -> mér", function() {deepEqual( Stem("mérek"), "mér");});
test("mérettünk -> mérett", function() {deepEqual( Stem("mérettünk"), "mérett");});
test("méri -> mér", function() {deepEqual( Stem("méri"), "mér");});
test("mérik -> mér", function() {deepEqual( Stem("mérik"), "mér");});
test("mérjük -> mér", function() {deepEqual( Stem("mérjük"), "mér");});
test("mérne -> mérn", function() {deepEqual( Stem("mérne"), "mérn");});
test("mérnek -> mér", function() {deepEqual( Stem("mérnek"), "mér");});
test("mérni -> mérn", function() {deepEqual( Stem("mérni"), "mérn");});
test("mérnie -> mérn", function() {deepEqual( Stem("mérnie"), "mérn");});
test("mérte -> mért", function() {deepEqual( Stem("mérte"), "mért");});
test("mértük -> mért", function() {deepEqual( Stem("mértük"), "mért");});
test("mértek -> mért", function() {deepEqual( Stem("mértek"), "mért");});
test("mértem -> mért", function() {deepEqual( Stem("mértem"), "mért");});
test("méret -> mér", function() {deepEqual( Stem("méret"), "mér");});
test("méretadatuk -> méretadat", function() {deepEqual( Stem("méretadatuk"), "méretadat");});
test("méretarányosság -> méretarányosság", function() {deepEqual( Stem("méretarányosság"), "méretarányosság");});
test("méretük -> méret", function() {deepEqual( Stem("méretük"), "méret");});
test("méretüknek -> méret", function() {deepEqual( Stem("méretüknek"), "méret");});
test("méretéhez -> méret", function() {deepEqual( Stem("méretéhez"), "méret");});
test("méretbe -> méret", function() {deepEqual( Stem("méretbe"), "méret");});
test("méretben -> méret", function() {deepEqual( Stem("méretben"), "méret");});
test("mérete -> méret", function() {deepEqual( Stem("mérete"), "méret");});
test("méretei -> méret", function() {deepEqual( Stem("méretei"), "méret");});
test("méreteihez -> méret", function() {deepEqual( Stem("méreteihez"), "méret");});
test("méreteinek -> méret", function() {deepEqual( Stem("méreteinek"), "méret");});
test("méreteinél -> méret", function() {deepEqual( Stem("méreteinél"), "méret");});
test("méreteivel -> méret", function() {deepEqual( Stem("méreteivel"), "méret");});
test("méretek -> méret", function() {deepEqual( Stem("méretek"), "méret");});
test("méretekben -> méret", function() {deepEqual( Stem("méretekben"), "méret");});
test("méreteket -> méret", function() {deepEqual( Stem("méreteket"), "méret");});
test("méretekre -> méret", function() {deepEqual( Stem("méretekre"), "méret");});
test("méreten -> méret", function() {deepEqual( Stem("méreten"), "méret");});
test("méretet -> méret", function() {deepEqual( Stem("méretet"), "méret");});
test("méretre -> méret", function() {deepEqual( Stem("méretre"), "méret");});
test("méretét -> méret", function() {deepEqual( Stem("méretét"), "méret");});
test("méretétől -> méret", function() {deepEqual( Stem("méretétől"), "méret");});
test("méretével -> méret", function() {deepEqual( Stem("méretével"), "méret");});
test("méretezhető -> méretezhető", function() {deepEqual( Stem("méretezhető"), "méretezhető");});
test("méreteznie -> méretezn", function() {deepEqual( Stem("méreteznie"), "méretezn");});
test("méretgazdaságosság -> méretgazdaságosság", function() {deepEqual( Stem("méretgazdaságosság"), "méretgazdaságosság");});
test("mérethatára -> mérethat", function() {deepEqual( Stem("mérethatára"), "mérethat");});
test("mérettessenek -> mérettess", function() {deepEqual( Stem("mérettessenek"), "mérettess");});
test("méretéke -> mérete", function() {deepEqual( Stem("méretéke"), "mérete");});
test("méretű -> méretű", function() {deepEqual( Stem("méretű"), "méretű");});
test("méretűre -> méretű", function() {deepEqual( Stem("méretűre"), "méretű");});
test("méretűvé -> méretű", function() {deepEqual( Stem("méretűvé"), "méretű");});
test("méföld/órás -> méföld/órás", function() {deepEqual( Stem("méföld/órás"), "méföld/órás");});
test("mérföldes -> mérföldes", function() {deepEqual( Stem("mérföldes"), "mérföldes");});
test("mérföldre -> mérföl", function() {deepEqual( Stem("mérföldre"), "mérföl");});
test("mérföld -> mérföl", function() {deepEqual( Stem("mérföld"), "mérföl");});
test("mérgelődik -> mérgelőd", function() {deepEqual( Stem("mérgelődik"), "mérgelőd");});
test("mérgelődni -> mérgelődn", function() {deepEqual( Stem("mérgelődni"), "mérgelődn");});
test("mérgelődött -> mérgelődöt", function() {deepEqual( Stem("mérgelődött"), "mérgelődöt");});
test("mérges -> mérges", function() {deepEqual( Stem("mérges"), "mérges");});
test("mérgesek -> mérges", function() {deepEqual( Stem("mérgesek"), "mérges");});
test("mérgezem -> mérgez", function() {deepEqual( Stem("mérgezem"), "mérgez");});
test("mérgezi -> mérgez", function() {deepEqual( Stem("mérgezi"), "mérgez");});
test("mérgezési -> mérgezés", function() {deepEqual( Stem("mérgezési"), "mérgezés");});
test("mérgező -> mérgező", function() {deepEqual( Stem("mérgező"), "mérgező");});
test("mérhet -> mérh", function() {deepEqual( Stem("mérhet"), "mérh");});
test("mérhetetlen -> mérhetetl", function() {deepEqual( Stem("mérhetetlen"), "mérhetetl");});
test("mérhetetlenül -> mérhetetlen", function() {deepEqual( Stem("mérhetetlenül"), "mérhetetlen");});
test("mérhető -> mérhető", function() {deepEqual( Stem("mérhető"), "mérhető");});
test("mérkőzés -> mérkőzés", function() {deepEqual( Stem("mérkőzés"), "mérkőzés");});
test("mérkőzéseire -> mérkőzés", function() {deepEqual( Stem("mérkőzéseire"), "mérkőzés");});
test("mérkőzések -> mérkőzés", function() {deepEqual( Stem("mérkőzések"), "mérkőzés");});
test("mérkőzéseket -> mérkőzés", function() {deepEqual( Stem("mérkőzéseket"), "mérkőzés");});
test("mérkőzésem -> mérkőzés", function() {deepEqual( Stem("mérkőzésem"), "mérkőzés");});
test("mérkőzésen -> mérkőzés", function() {deepEqual( Stem("mérkőzésen"), "mérkőzés");});
test("mérkőzésnek -> mérkőzés", function() {deepEqual( Stem("mérkőzésnek"), "mérkőzés");});
test("mérkőzésre -> mérkőzés", function() {deepEqual( Stem("mérkőzésre"), "mérkőzés");});
test("mérkőzésről -> mérkőzés", function() {deepEqual( Stem("mérkőzésről"), "mérkőzés");});
test("mérkőzéssel -> mérkőzés", function() {deepEqual( Stem("mérkőzéssel"), "mérkőzés");});
test("mérkőzést -> mérkőzés", function() {deepEqual( Stem("mérkőzést"), "mérkőzés");});
test("mérkőzésén -> mérkőzés", function() {deepEqual( Stem("mérkőzésén"), "mérkőzés");});
test("mérkőzésére -> mérkőzés", function() {deepEqual( Stem("mérkőzésére"), "mérkőzés");});
test("mérkőzését -> mérkőzés", function() {deepEqual( Stem("mérkőzését"), "mérkőzés");});
test("mérkőzésünk -> mérkőzés", function() {deepEqual( Stem("mérkőzésünk"), "mérkőzés");});
test("mérkőzésünket -> mérkőzés", function() {deepEqual( Stem("mérkőzésünket"), "mérkőzés");});
test("mérlegbeszámoló -> mérlegbeszámoló", function() {deepEqual( Stem("mérlegbeszámoló"), "mérlegbeszámoló");});
test("mérlegből -> mérleg", function() {deepEqual( Stem("mérlegből"), "mérleg");});
test("mérleg -> mérleg", function() {deepEqual( Stem("mérleg"), "mérleg");});
test("mérlege -> mérleg", function() {deepEqual( Stem("mérlege"), "mérleg");});
test("mérlegek -> mérleg", function() {deepEqual( Stem("mérlegek"), "mérleg");});
test("mérleget -> mérleg", function() {deepEqual( Stem("mérleget"), "mérleg");});
test("mérleggel -> mérleg", function() {deepEqual( Stem("mérleggel"), "mérleg");});
test("mérleghez -> mérleg", function() {deepEqual( Stem("mérleghez"), "mérleg");});
test("mérlegre -> mérleg", function() {deepEqual( Stem("mérlegre"), "mérleg");});
test("mérlegében -> mérleg", function() {deepEqual( Stem("mérlegében"), "mérleg");});
test("mérlegéből -> mérleg", function() {deepEqual( Stem("mérlegéből"), "mérleg");});
test("mérlegének -> mérleg", function() {deepEqual( Stem("mérlegének"), "mérleg");});
test("mérlegére -> mérleg", function() {deepEqual( Stem("mérlegére"), "mérleg");});
test("mérlegéről -> mérleg", function() {deepEqual( Stem("mérlegéről"), "mérleg");});
test("mérlegét -> mérleg", function() {deepEqual( Stem("mérlegét"), "mérleg");});
test("mérlegünk -> mérleg", function() {deepEqual( Stem("mérlegünk"), "mérleg");});
test("mérlegelendő -> mérlegelendő", function() {deepEqual( Stem("mérlegelendő"), "mérlegelendő");});
test("mérlegelfogadó -> mérlegelfogadó", function() {deepEqual( Stem("mérlegelfogadó"), "mérlegelfogadó");});
test("mérlegelheti -> mérlegelhet", function() {deepEqual( Stem("mérlegelheti"), "mérlegelhet");});
test("mérlegelhetik -> mérlegelhet", function() {deepEqual( Stem("mérlegelhetik"), "mérlegelhet");});
test("mérlegelnie -> mérlegeln", function() {deepEqual( Stem("mérlegelnie"), "mérlegeln");});
test("mérlegelte -> mérlegelt", function() {deepEqual( Stem("mérlegelte"), "mérlegelt");});
test("mérlegelve -> mérlegelv", function() {deepEqual( Stem("mérlegelve"), "mérlegelv");});
test("mérlegelési -> mérlegelés", function() {deepEqual( Stem("mérlegelési"), "mérlegelés");});
test("mérlegelést -> mérlegelés", function() {deepEqual( Stem("mérlegelést"), "mérlegelés");});
test("mérlegelés -> mérlegelés", function() {deepEqual( Stem("mérlegelés"), "mérlegelés");});
test("mérlegelésének -> mérlegelés", function() {deepEqual( Stem("mérlegelésének"), "mérlegelés");});
test("mérlegelésére -> mérlegelés", function() {deepEqual( Stem("mérlegelésére"), "mérlegelés");});
test("mérlegelésétől -> mérlegelés", function() {deepEqual( Stem("mérlegelésétől"), "mérlegelés");});
test("mérlegkészítést -> mérlegkészítés", function() {deepEqual( Stem("mérlegkészítést"), "mérlegkészítés");});
test("mérnök -> mérn", function() {deepEqual( Stem("mérnök"), "mérn");});
test("mérnöke -> mérn", function() {deepEqual( Stem("mérnöke"), "mérn");});
test("mérnökeivel -> mérn", function() {deepEqual( Stem("mérnökeivel"), "mérn");});
test("mérnöknek -> mérn", function() {deepEqual( Stem("mérnöknek"), "mérn");});
test("mérnökök -> mérnök", function() {deepEqual( Stem("mérnökök"), "mérnök");});
test("mérnököket -> mérnök", function() {deepEqual( Stem("mérnököket"), "mérnök");});
test("mérnököt -> mérn", function() {deepEqual( Stem("mérnököt"), "mérn");});
test("mérnöki -> mérn", function() {deepEqual( Stem("mérnöki"), "mérn");});
test("mérnökképző -> mérnökképző", function() {deepEqual( Stem("mérnökképző"), "mérnökképző");});
test("mérnökség -> mérnökség", function() {deepEqual( Stem("mérnökség"), "mérnökség");});
test("mérnökségre -> mérnökség", function() {deepEqual( Stem("mérnökségre"), "mérnökség");});
test("mérsékeljék -> mérsékelje", function() {deepEqual( Stem("mérsékeljék"), "mérsékelje");});
test("mérsékelni -> mérsékeln", function() {deepEqual( Stem("mérsékelni"), "mérsékeln");});
test("mérsékelte -> mérsékelt", function() {deepEqual( Stem("mérsékelte"), "mérsékelt");});
test("mérsékli -> mérsékl", function() {deepEqual( Stem("mérsékli"), "mérsékl");});
test("mérsékelt -> mérsékel", function() {deepEqual( Stem("mérsékelt"), "mérsékel");});
test("mérsékeltebb -> mérsékeltebb", function() {deepEqual( Stem("mérsékeltebb"), "mérsékeltebb");});
test("mérsékeltebben -> mérsékelteb", function() {deepEqual( Stem("mérsékeltebben"), "mérsékelteb");});
test("mérsékelten -> mérsékelt", function() {deepEqual( Stem("mérsékelten"), "mérsékelt");});
test("mérséklése -> mérséklés", function() {deepEqual( Stem("mérséklése"), "mérséklés");});
test("mérséklésekre -> mérséklés", function() {deepEqual( Stem("mérséklésekre"), "mérséklés");});
test("mérséklő -> mérséklő", function() {deepEqual( Stem("mérséklő"), "mérséklő");});
test("mérséklődik -> mérséklőd", function() {deepEqual( Stem("mérséklődik"), "mérséklőd");});
test("mérséklődhet -> mérséklődh", function() {deepEqual( Stem("mérséklődhet"), "mérséklődh");});
test("mérséklődése -> mérséklődés", function() {deepEqual( Stem("mérséklődése"), "mérséklődés");});
test("mérséklődésével -> mérséklődés", function() {deepEqual( Stem("mérséklődésével"), "mérséklődés");});
test("mérséklődött -> mérséklődöt", function() {deepEqual( Stem("mérséklődött"), "mérséklődöt");});
test("mért -> mért", function() {deepEqual( Stem("mért"), "mért");});
test("mérten -> mért", function() {deepEqual( Stem("mérten"), "mért");});
test("mérték -> mérte", function() {deepEqual( Stem("mérték"), "mérte");});
test("mértékadónak -> mértékadó", function() {deepEqual( Stem("mértékadónak"), "mértékadó");});
test("mértékegységet -> mértékegység", function() {deepEqual( Stem("mértékegységet"), "mértékegység");});
test("mértékegységgel -> mértékegység", function() {deepEqual( Stem("mértékegységgel"), "mértékegység");});
test("mértékében -> mérte", function() {deepEqual( Stem("mértékében"), "mérte");});
test("mértékéből -> mérte", function() {deepEqual( Stem("mértékéből"), "mérte");});
test("mértékéhez -> mérte", function() {deepEqual( Stem("mértékéhez"), "mérte");});
test("mértékéig -> mérte", function() {deepEqual( Stem("mértékéig"), "mérte");});
test("mértékén -> mérte", function() {deepEqual( Stem("mértékén"), "mérte");});
test("mértékének -> mérte", function() {deepEqual( Stem("mértékének"), "mérte");});
test("mértékére -> mérte", function() {deepEqual( Stem("mértékére"), "mérte");});
test("mértékéről -> mérte", function() {deepEqual( Stem("mértékéről"), "mérte");});
test("mértékét -> mérte", function() {deepEqual( Stem("mértékét"), "mérte");});
test("mértékétől -> mérte", function() {deepEqual( Stem("mértékétől"), "mérte");});
test("mértékével -> mérte", function() {deepEqual( Stem("mértékével"), "mérte");});
test("mértékek -> mérték", function() {deepEqual( Stem("mértékek"), "mérték");});
test("mértékben -> mérte", function() {deepEqual( Stem("mértékben"), "mérte");});
test("mértéke -> mérte", function() {deepEqual( Stem("mértéke"), "mérte");});
test("mértéket -> mérte", function() {deepEqual( Stem("mértéket"), "mérte");});
test("mértékhez -> mérte", function() {deepEqual( Stem("mértékhez"), "mérte");});
test("mértékig -> mérte", function() {deepEqual( Stem("mértékig"), "mérte");});
test("mértékkel -> mérte", function() {deepEqual( Stem("mértékkel"), "mérte");});
test("mértéknek -> mérte", function() {deepEqual( Stem("mértéknek"), "mérte");});
test("mértékre -> mérte", function() {deepEqual( Stem("mértékre"), "mérte");});
test("mértékletességre -> mértékletesség", function() {deepEqual( Stem("mértékletességre"), "mértékletesség");});
test("mértékrendjének -> mértékrend", function() {deepEqual( Stem("mértékrendjének"), "mértékrend");});
test("mértéktartóan -> mértéktartó", function() {deepEqual( Stem("mértéktartóan"), "mértéktartó");});
test("mértéktelenek -> mértéktel", function() {deepEqual( Stem("mértéktelenek"), "mértéktel");});
test("mértékű -> mértékű", function() {deepEqual( Stem("mértékű"), "mértékű");});
test("mértékűek -> mértékű", function() {deepEqual( Stem("mértékűek"), "mértékű");});
test("mértékűnek -> mértékű", function() {deepEqual( Stem("mértékűnek"), "mértékű");});
test("mértékük -> mérte", function() {deepEqual( Stem("mértékük"), "mérte");});
test("mértékűvé -> mértékű", function() {deepEqual( Stem("mértékűvé"), "mértékű");});
test("mérvadó -> mérvadó", function() {deepEqual( Stem("mérvadó"), "mérvadó");});
test("mérvadónak -> mérvadó", function() {deepEqual( Stem("mérvadónak"), "mérvadó");});
test("mérve -> mérv", function() {deepEqual( Stem("mérve"), "mérv");});
test("mérvű -> mérvű", function() {deepEqual( Stem("mérvű"), "mérvű");});
test("mérés -> mérés", function() {deepEqual( Stem("mérés"), "mérés");});
test("mérése -> mérés", function() {deepEqual( Stem("mérése"), "mérés");});
test("méréseit -> mérés", function() {deepEqual( Stem("méréseit"), "mérés");});
test("méréseket -> mérés", function() {deepEqual( Stem("méréseket"), "mérés");});
test("méréseknek -> mérés", function() {deepEqual( Stem("méréseknek"), "mérés");});
test("mérésem -> mérés", function() {deepEqual( Stem("mérésem"), "mérés");});
test("mérésében -> mérés", function() {deepEqual( Stem("mérésében"), "mérés");});
test("mérési -> mérés", function() {deepEqual( Stem("mérési"), "mérés");});
test("mérőórák -> mérőóra", function() {deepEqual( Stem("mérőórák"), "mérőóra");});
test("més -> més", function() {deepEqual( Stem("més"), "més");});
test("mészkőbánya -> mészkőbány", function() {deepEqual( Stem("mészkőbánya"), "mészkőbány");});
test("mészkőhegység -> mészkőhegység", function() {deepEqual( Stem("mészkőhegység"), "mészkőhegység");});
test("mészárlásig -> mészárlás", function() {deepEqual( Stem("mészárlásig"), "mészárlás");});
test("mészárlások -> mészárlás", function() {deepEqual( Stem("mészárlások"), "mészárlás");});
test("mészárlásról -> mészárlás", function() {deepEqual( Stem("mészárlásról"), "mészárlás");});
test("mészároltak -> mészárolt", function() {deepEqual( Stem("mészároltak"), "mészárolt");});
test("mészárszékre -> mészársze", function() {deepEqual( Stem("mészárszékre"), "mészársze");});
test("méter -> méter", function() {deepEqual( Stem("méter"), "méter");});
test("métereken -> méter", function() {deepEqual( Stem("métereken"), "méter");});
test("méterenként -> méter", function() {deepEqual( Stem("méterenként"), "méter");});
test("méterig -> méter", function() {deepEqual( Stem("méterig"), "méter");});
test("méternél -> méter", function() {deepEqual( Stem("méternél"), "méter");});
test("méterre -> méter", function() {deepEqual( Stem("méterre"), "méter");});
test("méterrel -> méter", function() {deepEqual( Stem("méterrel"), "méter");});
test("méterről -> méter", function() {deepEqual( Stem("méterről"), "méter");});
test("métert -> méter", function() {deepEqual( Stem("métert"), "méter");});
test("méteres -> méteres", function() {deepEqual( Stem("méteres"), "méteres");});
test("méternyire -> méterny", function() {deepEqual( Stem("méternyire"), "méterny");});
test("mézzel -> méz", function() {deepEqual( Stem("mézzel"), "méz");});
test("míg -> míg", function() {deepEqual( Stem("míg"), "míg");});
test("mígnem -> mígn", function() {deepEqual( Stem("mígnem"), "mígn");});
test("mínusz -> mínusz", function() {deepEqual( Stem("mínusz"), "mínusz");});
test("mínuszok -> mínusz", function() {deepEqual( Stem("mínuszok"), "mínusz");});
test("mítosz -> mítosz", function() {deepEqual( Stem("mítosz"), "mítosz");});
test("mítoszait -> mítosz", function() {deepEqual( Stem("mítoszait"), "mítosz");});
test("mítoszrendszer -> mítoszrendszer", function() {deepEqual( Stem("mítoszrendszer"), "mítoszrendszer");});
test("mítosztermelő -> mítosztermelő", function() {deepEqual( Stem("mítosztermelő"), "mítosztermelő");});
test("míves -> míves", function() {deepEqual( Stem("míves"), "míves");});
test("mívű -> mívű", function() {deepEqual( Stem("mívű"), "mívű");});
test("módi -> mód", function() {deepEqual( Stem("módi"), "mód");});
test("mód -> mó", function() {deepEqual( Stem("mód"), "mó");});
test("módban -> mó", function() {deepEqual( Stem("módban"), "mó");});
test("móddal -> mó", function() {deepEqual( Stem("móddal"), "mó");});
test("módhoz -> mó", function() {deepEqual( Stem("módhoz"), "mó");});
test("módja -> mód", function() {deepEqual( Stem("módja"), "mód");});
test("módja -> mód", function() {deepEqual( Stem("módja"), "mód");});
test("módjai -> mód", function() {deepEqual( Stem("módjai"), "mód");});
test("módjai -> mód", function() {deepEqual( Stem("módjai"), "mód");});
test("módjait -> mód", function() {deepEqual( Stem("módjait"), "mód");});
test("módjaival -> mód", function() {deepEqual( Stem("módjaival"), "mód");});
test("módjaként -> mód", function() {deepEqual( Stem("módjaként"), "mód");});
test("módjuk -> mód", function() {deepEqual( Stem("módjuk"), "mód");});
test("módjukban -> mód", function() {deepEqual( Stem("módjukban"), "mód");});
test("módjukkal -> mód", function() {deepEqual( Stem("módjukkal"), "mód");});
test("módjuknak -> mód", function() {deepEqual( Stem("módjuknak"), "mód");});
test("módjuktól -> mód", function() {deepEqual( Stem("módjuktól"), "mód");});
test("módjában -> mód", function() {deepEqual( Stem("módjában"), "mód");});
test("módjából -> mód", function() {deepEqual( Stem("módjából"), "mód");});
test("módján -> mód", function() {deepEqual( Stem("módján"), "mód");});
test("módjának -> mód", function() {deepEqual( Stem("módjának"), "mód");});
test("módjánál -> mód", function() {deepEqual( Stem("módjánál"), "mód");});
test("módjára -> mód", function() {deepEqual( Stem("módjára"), "mód");});
test("módjáról -> mód", function() {deepEqual( Stem("módjáról"), "mód");});
test("módját -> mód", function() {deepEqual( Stem("módját"), "mód");});
test("módjától -> mód", function() {deepEqual( Stem("módjától"), "mód");});
test("módjával -> mód", function() {deepEqual( Stem("módjával"), "mód");});
test("módnak -> mó", function() {deepEqual( Stem("módnak"), "mó");});
test("módnál -> mó", function() {deepEqual( Stem("módnál"), "mó");});
test("módok -> mód", function() {deepEqual( Stem("módok"), "mód");});
test("módokat -> mód", function() {deepEqual( Stem("módokat"), "mód");});
test("módoknál -> mód", function() {deepEqual( Stem("módoknál"), "mód");});
test("módokon -> mód", function() {deepEqual( Stem("módokon"), "mód");});
test("módokra -> mód", function() {deepEqual( Stem("módokra"), "mód");});
test("módokról -> mód", function() {deepEqual( Stem("módokról"), "mód");});
test("módoktól -> mód", function() {deepEqual( Stem("módoktól"), "mód");});
test("módom -> mód", function() {deepEqual( Stem("módom"), "mód");});
test("módomban -> mód", function() {deepEqual( Stem("módomban"), "mód");});
test("módon -> mó", function() {deepEqual( Stem("módon"), "mó");});
test("módonként -> mó", function() {deepEqual( Stem("módonként"), "mó");});
test("módra -> mó", function() {deepEqual( Stem("módra"), "mó");});
test("módot -> mó", function() {deepEqual( Stem("módot"), "mó");});
test("módtól -> mó", function() {deepEqual( Stem("módtól"), "mó");});
test("módunkban -> mód", function() {deepEqual( Stem("módunkban"), "mód");});
test("módonkénti -> módonként", function() {deepEqual( Stem("módonkénti"), "módonként");});
test("módosul -> módos", function() {deepEqual( Stem("módosul"), "módos");});
test("módosulnak -> módosul", function() {deepEqual( Stem("módosulnak"), "módosul");});
test("módosultak -> módosult", function() {deepEqual( Stem("módosultak"), "módosult");});
test("módosult -> módosul", function() {deepEqual( Stem("módosult"), "módosul");});
test("módosulás -> módosulás", function() {deepEqual( Stem("módosulás"), "módosulás");});
test("módosulások -> módosulás", function() {deepEqual( Stem("módosulások"), "módosulás");});
test("módosulásáról -> módosulás", function() {deepEqual( Stem("módosulásáról"), "módosulás");});
test("módosítanak -> módosít", function() {deepEqual( Stem("módosítanak"), "módosít");});
test("módosítani -> módosítan", function() {deepEqual( Stem("módosítani"), "módosítan");});
test("módosítania -> módosítan", function() {deepEqual( Stem("módosítania"), "módosítan");});
test("módosítaniuk -> módosítan", function() {deepEqual( Stem("módosítaniuk"), "módosítan");});
test("módosítanák -> módosítana", function() {deepEqual( Stem("módosítanák"), "módosítana");});
test("módosítja -> módosít", function() {deepEqual( Stem("módosítja"), "módosít");});
test("módosítják -> módosítja", function() {deepEqual( Stem("módosítják"), "módosítja");});
test("módosította -> módosított", function() {deepEqual( Stem("módosította"), "módosított");});
test("módosítottuk -> módosított", function() {deepEqual( Stem("módosítottuk"), "módosított");});
test("módosították -> módosította", function() {deepEqual( Stem("módosították"), "módosította");});
test("módosítsák -> módosítsa", function() {deepEqual( Stem("módosítsák"), "módosítsa");});
test("módosíthatja -> módosíthat", function() {deepEqual( Stem("módosíthatja"), "módosíthat");});
test("módosíthatjuk -> módosíthat", function() {deepEqual( Stem("módosíthatjuk"), "módosíthat");});
test("módosíthatják -> módosíthatja", function() {deepEqual( Stem("módosíthatják"), "módosíthatja");});
test("módosítható -> módosítható", function() {deepEqual( Stem("módosítható"), "módosítható");});
test("módosíthatóak -> módosítható", function() {deepEqual( Stem("módosíthatóak"), "módosítható");});
test("módosíthatók -> módosítható", function() {deepEqual( Stem("módosíthatók"), "módosítható");});
test("módosított -> módosítot", function() {deepEqual( Stem("módosított"), "módosítot");});
test("módosítottak -> módosított", function() {deepEqual( Stem("módosítottak"), "módosított");});
test("módosítva -> módosítv", function() {deepEqual( Stem("módosítva"), "módosítv");});
test("módosítási -> módosítás", function() {deepEqual( Stem("módosítási"), "módosítás");});
test("módosítás -> módosítás", function() {deepEqual( Stem("módosítás"), "módosítás");});
test("módosítása -> módosítás", function() {deepEqual( Stem("módosítása"), "módosítás");});
test("módosításai -> módosítás", function() {deepEqual( Stem("módosításai"), "módosítás");});
test("módosításaik -> módosítás", function() {deepEqual( Stem("módosításaik"), "módosítás");});
test("módosításaival -> módosítás", function() {deepEqual( Stem("módosításaival"), "módosítás");});
test("módosításakor -> módosítás", function() {deepEqual( Stem("módosításakor"), "módosítás");});
test("módosításhoz -> módosítás", function() {deepEqual( Stem("módosításhoz"), "módosítás");});
test("módosításig -> módosítás", function() {deepEqual( Stem("módosításig"), "módosítás");});
test("módosításkor -> módosítás", function() {deepEqual( Stem("módosításkor"), "módosítás");});
test("módosításnál -> módosítás", function() {deepEqual( Stem("módosításnál"), "módosítás");});
test("módosítások -> módosítás", function() {deepEqual( Stem("módosítások"), "módosítás");});
test("módosításokat -> módosítás", function() {deepEqual( Stem("módosításokat"), "módosítás");});
test("módosításokhoz -> módosítás", function() {deepEqual( Stem("módosításokhoz"), "módosítás");});
test("módosításokkal -> módosítás", function() {deepEqual( Stem("módosításokkal"), "módosítás");});
test("módosításoknak -> módosítás", function() {deepEqual( Stem("módosításoknak"), "módosítás");});
test("módosításokra -> módosítás", function() {deepEqual( Stem("módosításokra"), "módosítás");});
test("módosításokról -> módosítás", function() {deepEqual( Stem("módosításokról"), "módosítás");});
test("módosításra -> módosítás", function() {deepEqual( Stem("módosításra"), "módosítás");});
test("módosításról -> módosítás", function() {deepEqual( Stem("módosításról"), "módosítás");});
test("módosítással -> módosítás", function() {deepEqual( Stem("módosítással"), "módosítás");});
test("módosítást -> módosítás", function() {deepEqual( Stem("módosítást"), "módosítás");});
test("módosításában -> módosítás", function() {deepEqual( Stem("módosításában"), "módosítás");});
test("módosításához -> módosítás", function() {deepEqual( Stem("módosításához"), "módosítás");});
test("módosításáig -> módosítás", function() {deepEqual( Stem("módosításáig"), "módosítás");});
test("módosításán -> módosítás", function() {deepEqual( Stem("módosításán"), "módosítás");});
test("módosításának -> módosítás", function() {deepEqual( Stem("módosításának"), "módosítás");});
test("módosításánál -> módosítás", function() {deepEqual( Stem("módosításánál"), "módosítás");});
test("módosítására -> módosítás", function() {deepEqual( Stem("módosítására"), "módosítás");});
test("módosításáról -> módosítás", function() {deepEqual( Stem("módosításáról"), "módosítás");});
test("módosítását -> módosítás", function() {deepEqual( Stem("módosítását"), "módosítás");});
test("módosításától -> módosítás", function() {deepEqual( Stem("módosításától"), "módosítás");});
test("módosításával -> módosítás", function() {deepEqual( Stem("módosításával"), "módosítás");});
test("módosításáért -> módosítás", function() {deepEqual( Stem("módosításáért"), "módosítás");});
test("módosító -> módosító", function() {deepEqual( Stem("módosító"), "módosító");});
test("módozata -> módozat", function() {deepEqual( Stem("módozata"), "módozat");});
test("módozatait -> módozat", function() {deepEqual( Stem("módozatait"), "módozat");});
test("módoztok -> módozt", function() {deepEqual( Stem("módoztok"), "módozt");});
test("módszer -> módszer", function() {deepEqual( Stem("módszer"), "módszer");});
test("módszerbe -> módszer", function() {deepEqual( Stem("módszerbe"), "módszer");});
test("módszerben -> módszer", function() {deepEqual( Stem("módszerben"), "módszer");});
test("módszere -> módsz", function() {deepEqual( Stem("módszere"), "módsz");});
test("módszerei -> módszer", function() {deepEqual( Stem("módszerei"), "módszer");});
test("módszereihez -> módszer", function() {deepEqual( Stem("módszereihez"), "módszer");});
test("módszereikben -> módszer", function() {deepEqual( Stem("módszereikben"), "módszer");});
test("módszereit -> módszer", function() {deepEqual( Stem("módszereit"), "módszer");});
test("módszereivel -> módszer", function() {deepEqual( Stem("módszereivel"), "módszer");});
test("módszerek -> módszer", function() {deepEqual( Stem("módszerek"), "módszer");});
test("módszereken -> módszer", function() {deepEqual( Stem("módszereken"), "módszer");});
test("módszereket -> módszer", function() {deepEqual( Stem("módszereket"), "módszer");});
test("módszerekkel -> módszer", function() {deepEqual( Stem("módszerekkel"), "módszer");});
test("módszerekre -> módszer", function() {deepEqual( Stem("módszerekre"), "módszer");});
test("módszeremmel -> módszer", function() {deepEqual( Stem("módszeremmel"), "módszer");});
test("módszerhez -> módszer", function() {deepEqual( Stem("módszerhez"), "módszer");});
test("módszernek -> módszer", function() {deepEqual( Stem("módszernek"), "módszer");});
test("módszerre -> módszer", function() {deepEqual( Stem("módszerre"), "módszer");});
test("módszerrel -> módszer", function() {deepEqual( Stem("módszerrel"), "módszer");});
test("módszert -> módszer", function() {deepEqual( Stem("módszert"), "módszer");});
test("módszertől -> módszer", function() {deepEqual( Stem("módszertől"), "módszer");});
test("módszeréből -> módszer", function() {deepEqual( Stem("módszeréből"), "módszer");});
test("módszerén -> módszer", function() {deepEqual( Stem("módszerén"), "módszer");});
test("módszeréről -> módszer", function() {deepEqual( Stem("módszeréről"), "módszer");});
test("módszerét -> módszer", function() {deepEqual( Stem("módszerét"), "módszer");});
test("módszerével -> módszer", function() {deepEqual( Stem("módszerével"), "módszer");});
test("módszerekethasznál -> módszerekethasz", function() {deepEqual( Stem("módszerekethasznál"), "módszerekethasz");});
test("módszeres -> módszeres", function() {deepEqual( Stem("módszeres"), "módszeres");});
test("módszeresen -> módszeres", function() {deepEqual( Stem("módszeresen"), "módszeres");});
test("módszertan -> módszert", function() {deepEqual( Stem("módszertan"), "módszert");});
test("módszertant -> módszertan", function() {deepEqual( Stem("módszertant"), "módszertan");});
test("módszertana -> módszertan", function() {deepEqual( Stem("módszertana"), "módszertan");});
test("módszertanokon -> módszertan", function() {deepEqual( Stem("módszertanokon"), "módszertan");});
test("módszertani -> módszertan", function() {deepEqual( Stem("módszertani"), "módszertan");});
test("módszertanilag -> módszertanilag", function() {deepEqual( Stem("módszertanilag"), "módszertanilag");});
test("módusú -> módusú", function() {deepEqual( Stem("módusú"), "módusú");});
test("módú -> módú", function() {deepEqual( Stem("módú"), "módú");});
test("móka -> mó", function() {deepEqual( Stem("móka"), "mó");});
test("mókus -> mókus", function() {deepEqual( Stem("mókus"), "mókus");});
test("mókusok -> mókus", function() {deepEqual( Stem("mókusok"), "mókus");});
test("mókás -> mókás", function() {deepEqual( Stem("mókás"), "mókás");});
test("mókáztunk -> mókázt", function() {deepEqual( Stem("mókáztunk"), "mókázt");});
test("mólóhoz -> móló", function() {deepEqual( Stem("mólóhoz"), "móló");});
test("mólóján -> móló", function() {deepEqual( Stem("mólóján"), "móló");});
test("mólón -> móló", function() {deepEqual( Stem("mólón"), "móló");});
test("mólónál -> móló", function() {deepEqual( Stem("mólónál"), "móló");});
test("mólóra -> móló", function() {deepEqual( Stem("mólóra"), "móló");});
test("mólóról -> móló", function() {deepEqual( Stem("mólóról"), "móló");});
test("mór -> mór", function() {deepEqual( Stem("mór"), "mór");});
test("móri -> mór", function() {deepEqual( Stem("móri"), "mór");});
test("mósusz -> mósusz", function() {deepEqual( Stem("mósusz"), "mósusz");});
test("mózesi -> mózes", function() {deepEqual( Stem("mózesi"), "mózes");});
test("mögé -> mög", function() {deepEqual( Stem("mögé"), "mög");});
test("mögéje -> mögé", function() {deepEqual( Stem("mögéje"), "mögé");});
test("mögénk -> möge", function() {deepEqual( Stem("mögénk"), "möge");});
test("mögött -> mögöt", function() {deepEqual( Stem("mögött"), "mögöt");});
test("mögötte -> mögött", function() {deepEqual( Stem("mögötte"), "mögött");});
test("mögöttem -> mögött", function() {deepEqual( Stem("mögöttem"), "mögött");});
test("mögöttük -> mögött", function() {deepEqual( Stem("mögöttük"), "mögött");});
test("mögöttünk -> mögött", function() {deepEqual( Stem("mögöttünk"), "mögött");});
test("mögöttes -> mögöttes", function() {deepEqual( Stem("mögöttes"), "mögöttes");});
test("mögöttesen -> mögöttes", function() {deepEqual( Stem("mögöttesen"), "mögöttes");});
test("mögötti -> mögött", function() {deepEqual( Stem("mögötti"), "mögött");});
test("mögül -> mög", function() {deepEqual( Stem("mögül"), "mög");});
test("mögüle -> mögül", function() {deepEqual( Stem("mögüle"), "mögül");});
test("múlandó -> múlandó", function() {deepEqual( Stem("múlandó"), "múlandó");});
test("múlandóak -> múlandó", function() {deepEqual( Stem("múlandóak"), "múlandó");});
test("múlattuk -> múlatt", function() {deepEqual( Stem("múlattuk"), "múlatt");});
test("múlatták -> múlatta", function() {deepEqual( Stem("múlatták"), "múlatta");});
test("múlik -> múl", function() {deepEqual( Stem("múlik"), "múl");});
test("múlja -> múl", function() {deepEqual( Stem("múlja"), "múl");});
test("múlna -> múln", function() {deepEqual( Stem("múlna"), "múln");});
test("múlnak -> múl", function() {deepEqual( Stem("múlnak"), "múl");});
test("múlni -> múln", function() {deepEqual( Stem("múlni"), "múln");});
test("múlott -> múlot", function() {deepEqual( Stem("múlott"), "múlot");});
test("múlt -> múl", function() {deepEqual( Stem("múlt"), "múl");});
test("múltak -> múlt", function() {deepEqual( Stem("múltak"), "múlt");});
test("múltbeli -> múltbel", function() {deepEqual( Stem("múltbeli"), "múltbel");});
test("múltam -> múlt", function() {deepEqual( Stem("múltam"), "múlt");});
test("múltamban -> múlt", function() {deepEqual( Stem("múltamban"), "múlt");});
test("múltat -> múlt", function() {deepEqual( Stem("múltat"), "múlt");});
test("múltba -> múlt", function() {deepEqual( Stem("múltba"), "múlt");});
test("múltban -> múlt", function() {deepEqual( Stem("múltban"), "múlt");});
test("múltból -> múlt", function() {deepEqual( Stem("múltból"), "múlt");});
test("múlthoz -> múlt", function() {deepEqual( Stem("múlthoz"), "múlt");});
test("múltja -> múlt", function() {deepEqual( Stem("múltja"), "múlt");});
test("múltjuk -> múlt", function() {deepEqual( Stem("múltjuk"), "múlt");});
test("múltjukkal -> múlt", function() {deepEqual( Stem("múltjukkal"), "múlt");});
test("múltjába -> múlt", function() {deepEqual( Stem("múltjába"), "múlt");});
test("múltjának -> múlt", function() {deepEqual( Stem("múltjának"), "múlt");});
test("múltjáról -> múlt", function() {deepEqual( Stem("múltjáról"), "múlt");});
test("múltját -> múlt", function() {deepEqual( Stem("múltját"), "múlt");});
test("múltjával -> múlt", function() {deepEqual( Stem("múltjával"), "múlt");});
test("múltkor -> múlt", function() {deepEqual( Stem("múltkor"), "múlt");});
test("múltkoriban -> múltkor", function() {deepEqual( Stem("múltkoriban"), "múltkor");});
test("múltnak -> múlt", function() {deepEqual( Stem("múltnak"), "múlt");});
test("múltra -> múlt", function() {deepEqual( Stem("múltra"), "múlt");});
test("múltról -> múlt", function() {deepEqual( Stem("múltról"), "múlt");});
test("múlttal -> múl", function() {deepEqual( Stem("múlttal"), "múl");});
test("múltté -> múlt", function() {deepEqual( Stem("múltté"), "múlt");});
test("múlttól -> múlt", function() {deepEqual( Stem("múlttól"), "múlt");});
test("múltunkat -> múlt", function() {deepEqual( Stem("múltunkat"), "múlt");});
test("múltán -> múlt", function() {deepEqual( Stem("múltán"), "múlt");});
test("múltával -> múlt", function() {deepEqual( Stem("múltával"), "múlt");});
test("múlté -> múlt", function() {deepEqual( Stem("múlté"), "múlt");});
test("múltunkkal -> múlt", function() {deepEqual( Stem("múltunkkal"), "múlt");});
test("múltú -> múltú", function() {deepEqual( Stem("múltú"), "múltú");});
test("múlva -> múlv", function() {deepEqual( Stem("múlva"), "múlv");});
test("múlását -> múlás", function() {deepEqual( Stem("múlását"), "múlás");});
test("múlásával -> múlás", function() {deepEqual( Stem("múlásával"), "múlás");});
test("múló -> múló", function() {deepEqual( Stem("múló"), "múló");});
test("múmiaportréinak -> múmiaportr", function() {deepEqual( Stem("múmiaportréinak"), "múmiaportr");});
test("múmiaportrék -> múmiaportre", function() {deepEqual( Stem("múmiaportrék"), "múmiaportre");});
test("múmiájának -> múmiá", function() {deepEqual( Stem("múmiájának"), "múmiá");});
test("múmia -> múm", function() {deepEqual( Stem("múmia"), "múm");});
test("múmiák -> múmia", function() {deepEqual( Stem("múmiák"), "múmia");});
test("múzeum -> múzeu", function() {deepEqual( Stem("múzeum"), "múzeu");});
test("múzeuma -> múzeum", function() {deepEqual( Stem("múzeuma"), "múzeum");});
test("múzeumai -> múzeum", function() {deepEqual( Stem("múzeumai"), "múzeum");});
test("múzeumba -> múzeu", function() {deepEqual( Stem("múzeumba"), "múzeu");});
test("múzeumban -> múzeu", function() {deepEqual( Stem("múzeumban"), "múzeu");});
test("múzeumból -> múzeu", function() {deepEqual( Stem("múzeumból"), "múzeu");});
test("múzeumként -> múzeu", function() {deepEqual( Stem("múzeumként"), "múzeu");});
test("múzeumok -> múzeum", function() {deepEqual( Stem("múzeumok"), "múzeum");});
test("múzeumokat -> múzeum", function() {deepEqual( Stem("múzeumokat"), "múzeum");});
test("múzeumokba -> múzeum", function() {deepEqual( Stem("múzeumokba"), "múzeum");});
test("múzeumot -> múzeu", function() {deepEqual( Stem("múzeumot"), "múzeu");});
test("múzeumába -> múzeum", function() {deepEqual( Stem("múzeumába"), "múzeum");});
test("múzeumában -> múzeum", function() {deepEqual( Stem("múzeumában"), "múzeum");});
test("múzeumáról -> múzeum", function() {deepEqual( Stem("múzeumáról"), "múzeum");});
test("múzeumi -> múzeum", function() {deepEqual( Stem("múzeumi"), "múzeum");});
test("múzeumigazgató -> múzeumigazgató", function() {deepEqual( Stem("múzeumigazgató"), "múzeumigazgató");});
test("múzeumlátogatások -> múzeumlátogatás", function() {deepEqual( Stem("múzeumlátogatások"), "múzeumlátogatás");});
test("múzeumlátogató -> múzeumlátogató", function() {deepEqual( Stem("múzeumlátogató"), "múzeumlátogató");});
test("múzeumépület -> múzeumépül", function() {deepEqual( Stem("múzeumépület"), "múzeumépül");});
test("műalkotás -> műalkotás", function() {deepEqual( Stem("műalkotás"), "műalkotás");});
test("műalkotásnak -> műalkotás", function() {deepEqual( Stem("műalkotásnak"), "műalkotás");});
test("műalkotások -> műalkotás", function() {deepEqual( Stem("műalkotások"), "műalkotás");});
test("műalkotásokra -> műalkotás", function() {deepEqual( Stem("műalkotásokra"), "műalkotás");});
test("műalkotására -> műalkotás", function() {deepEqual( Stem("műalkotására"), "műalkotás");});
test("műalkotását -> műalkotás", function() {deepEqual( Stem("műalkotását"), "műalkotás");});
test("műanyag -> műanyag", function() {deepEqual( Stem("műanyag"), "műanyag");});
test("műanyagból -> műanyag", function() {deepEqual( Stem("műanyagból"), "műanyag");});
test("műarany -> műarany", function() {deepEqual( Stem("műarany"), "műarany");});
test("műbőrrel -> műbőr", function() {deepEqual( Stem("műbőrrel"), "műbőr");});
test("műcsalit -> műcsal", function() {deepEqual( Stem("műcsalit"), "műcsal");});
test("műcsoport -> műcsopor", function() {deepEqual( Stem("műcsoport"), "műcsopor");});
test("műcsípőízülettel -> műcsípőízül", function() {deepEqual( Stem("műcsípőízülettel"), "műcsípőízül");});
test("műdal -> műdal", function() {deepEqual( Stem("műdal"), "műdal");});
test("műemlék -> műemle", function() {deepEqual( Stem("műemlék"), "műemle");});
test("műemlékei -> műemle", function() {deepEqual( Stem("műemlékei"), "műemle");});
test("műemlékek -> műemlék", function() {deepEqual( Stem("műemlékek"), "műemlék");});
test("műemléket -> műemle", function() {deepEqual( Stem("műemléket"), "műemle");});
test("műemlékről -> műemle", function() {deepEqual( Stem("műemlékről"), "műemle");});
test("műemlékfelügyelet -> műemlékfelügyel", function() {deepEqual( Stem("műemlékfelügyelet"), "műemlékfelügyel");});
test("műemléki -> műemle", function() {deepEqual( Stem("műemléki"), "műemle");});
test("műemlékvédelem -> műemlékvédel", function() {deepEqual( Stem("műemlékvédelem"), "műemlékvédel");});
test("műfaji -> műfaj", function() {deepEqual( Stem("műfaji"), "műfaj");});
test("műfaji-elméleti -> műfaji-elmélet", function() {deepEqual( Stem("műfaji-elméleti"), "műfaji-elmélet");});
test("műfajok -> műfaj", function() {deepEqual( Stem("műfajok"), "műfaj");});
test("műfajokat -> műfaj", function() {deepEqual( Stem("műfajokat"), "műfaj");});
test("műfajokba -> műfaj", function() {deepEqual( Stem("műfajokba"), "műfaj");});
test("műfajoknál -> műfaj", function() {deepEqual( Stem("műfajoknál"), "műfaj");});
test("műfajokra -> műfaj", function() {deepEqual( Stem("műfajokra"), "műfaj");});
test("műfajoktól -> műfaj", function() {deepEqual( Stem("műfajoktól"), "műfaj");});
test("műfajra -> műfaj", function() {deepEqual( Stem("műfajra"), "műfaj");});
test("műfaj -> műfaj", function() {deepEqual( Stem("műfaj"), "műfaj");});
test("műfaja -> műfa", function() {deepEqual( Stem("műfaja"), "műfa");});
test("műfajba -> műfaj", function() {deepEqual( Stem("műfajba"), "műfaj");});
test("műfajban -> műfaj", function() {deepEqual( Stem("műfajban"), "műfaj");});
test("műfajból -> műfaj", function() {deepEqual( Stem("műfajból"), "műfaj");});
test("műfajhoz -> műfaj", function() {deepEqual( Stem("műfajhoz"), "műfaj");});
test("műfajt -> műfaj", function() {deepEqual( Stem("műfajt"), "műfaj");});
test("műfajtól -> műfaj", function() {deepEqual( Stem("műfajtól"), "műfaj");});
test("műfajában -> műfa", function() {deepEqual( Stem("műfajában"), "műfa");});
test("műfajától -> műfa", function() {deepEqual( Stem("műfajától"), "műfa");});
test("műfajspecifikus -> műfajspecifikus", function() {deepEqual( Stem("műfajspecifikus"), "műfajspecifikus");});
test("műfajú -> műfajú", function() {deepEqual( Stem("műfajú"), "műfajú");});
test("műfelhasználás -> műfelhasználás", function() {deepEqual( Stem("műfelhasználás"), "műfelhasználás");});
test("műfelhasználásnak -> műfelhasználás", function() {deepEqual( Stem("műfelhasználásnak"), "műfelhasználás");});
test("műfelhasználásnál -> műfelhasználás", function() {deepEqual( Stem("műfelhasználásnál"), "műfelhasználás");});
test("műfelhasználások -> műfelhasználás", function() {deepEqual( Stem("műfelhasználások"), "műfelhasználás");});
test("műfelhasználásokért -> műfelhasználás", function() {deepEqual( Stem("műfelhasználásokért"), "műfelhasználás");});
test("műfelhasználásra -> műfelhasználás", function() {deepEqual( Stem("műfelhasználásra"), "műfelhasználás");});
test("műfogam -> műfog", function() {deepEqual( Stem("műfogam"), "műfog");});
test("műfogsor -> műfogsor", function() {deepEqual( Stem("műfogsor"), "műfogsor");});
test("műfordítás -> műfordítás", function() {deepEqual( Stem("műfordítás"), "műfordítás");});
test("műfordításnak -> műfordítás", function() {deepEqual( Stem("műfordításnak"), "műfordítás");});
test("műfordításában -> műfordítás", function() {deepEqual( Stem("műfordításában"), "műfordítás");});
test("műfordító -> műfordító", function() {deepEqual( Stem("műfordító"), "műfordító");});
test("műfordítók -> műfordító", function() {deepEqual( Stem("műfordítók"), "műfordító");});
test("műgond -> műgon", function() {deepEqual( Stem("műgond"), "műgon");});
test("műgyűjtőnek -> műgyűjtő", function() {deepEqual( Stem("műgyűjtőnek"), "műgyűjtő");});
test("műhasznosításnál -> műhasznosítás", function() {deepEqual( Stem("műhasznosításnál"), "műhasznosítás");});
test("műhely -> műhely", function() {deepEqual( Stem("műhely"), "műhely");});
test("műhelybe -> műhely", function() {deepEqual( Stem("műhelybe"), "műhely");});
test("műhelyben -> műhely", function() {deepEqual( Stem("műhelyben"), "műhely");});
test("műhelyeit -> műhely", function() {deepEqual( Stem("műhelyeit"), "műhely");});
test("műhelyek -> műhely", function() {deepEqual( Stem("műhelyek"), "műhely");});
test("műhelyekbe -> műhely", function() {deepEqual( Stem("műhelyekbe"), "műhely");});
test("műhelyeket -> műhely", function() {deepEqual( Stem("műhelyeket"), "műhely");});
test("műhelyt -> műhely", function() {deepEqual( Stem("műhelyt"), "műhely");});
test("műholdas -> műholdas", function() {deepEqual( Stem("műholdas"), "műholdas");});
test("műhold -> műhol", function() {deepEqual( Stem("műhold"), "műhol");});
test("műholdak -> műhold", function() {deepEqual( Stem("műholdak"), "műhold");});
test("műholdat -> műhol", function() {deepEqual( Stem("műholdat"), "műhol");});
test("műholdhoz -> műhol", function() {deepEqual( Stem("műholdhoz"), "műhol");});
test("műholdon -> műhol", function() {deepEqual( Stem("műholdon"), "műhol");});
test("műholdra -> műhol", function() {deepEqual( Stem("műholdra"), "műhol");});
test("műintézetben -> műintézet", function() {deepEqual( Stem("műintézetben"), "műintézet");});
test("műkategóriaként -> műkategór", function() {deepEqual( Stem("műkategóriaként"), "műkategór");});
test("műkedvelő -> műkedvelő", function() {deepEqual( Stem("műkedvelő"), "műkedvelő");});
test("műkereskedelem -> műkereskedel", function() {deepEqual( Stem("műkereskedelem"), "műkereskedel");});
test("műkereskedelemnek -> műkereskedel", function() {deepEqual( Stem("műkereskedelemnek"), "műkereskedel");});
test("műkereskedelmet -> műkereskedel", function() {deepEqual( Stem("műkereskedelmet"), "műkereskedel");});
test("műkereskedői -> műkereskedő", function() {deepEqual( Stem("műkereskedői"), "műkereskedő");});
test("műkincs-kereskedelem -> műkincs-kereskedel", function() {deepEqual( Stem("műkincs-kereskedelem"), "műkincs-kereskedel");});
test("műkincseinek -> műkincs", function() {deepEqual( Stem("műkincseinek"), "műkincs");});
test("műkincsek -> műkincs", function() {deepEqual( Stem("műkincsek"), "műkincs");});
test("műkincsgyűjteménye -> műkincsgyűjtemény", function() {deepEqual( Stem("műkincsgyűjteménye"), "műkincsgyűjtemény");});
test("műkincsvándorlás -> műkincsvándorlás", function() {deepEqual( Stem("műkincsvándorlás"), "műkincsvándorlás");});
test("műkiválasztás -> műkiválasztás", function() {deepEqual( Stem("műkiválasztás"), "műkiválasztás");});
test("műkorcsolya -> műkorcsoly", function() {deepEqual( Stem("műkorcsolya"), "műkorcsoly");});
test("működhessen -> működhess", function() {deepEqual( Stem("működhessen"), "működhess");});
test("működhet -> működh", function() {deepEqual( Stem("működhet"), "működh");});
test("működhetett -> működhetet", function() {deepEqual( Stem("működhetett"), "működhetet");});
test("működhetnek -> működhet", function() {deepEqual( Stem("működhetnek"), "működhet");});
test("működhetnének -> működhetn", function() {deepEqual( Stem("működhetnének"), "működhetn");});
test("működik -> működ", function() {deepEqual( Stem("működik"), "működ");});
test("működött -> működöt", function() {deepEqual( Stem("működött"), "működöt");});
test("működjenek -> működ", function() {deepEqual( Stem("működjenek"), "működ");});
test("működjön -> működj", function() {deepEqual( Stem("működjön"), "működj");});
test("működne -> működn", function() {deepEqual( Stem("működne"), "működn");});
test("működnek -> mű", function() {deepEqual( Stem("működnek"), "mű");});
test("működni -> működn", function() {deepEqual( Stem("működni"), "működn");});
test("működnie -> működn", function() {deepEqual( Stem("működnie"), "működn");});
test("működniük -> működn", function() {deepEqual( Stem("működniük"), "működn");});
test("működnének -> működn", function() {deepEqual( Stem("működnének"), "működn");});
test("működsz -> működsz", function() {deepEqual( Stem("működsz"), "működsz");});
test("működtek -> működt", function() {deepEqual( Stem("működtek"), "működt");});
test("működtem -> működt", function() {deepEqual( Stem("működtem"), "működt");});
test("működtessék -> működtesse", function() {deepEqual( Stem("működtessék"), "működtesse");});
test("működtethet -> működteth", function() {deepEqual( Stem("működtethet"), "működteth");});
test("működtethetők -> működtethető", function() {deepEqual( Stem("működtethetők"), "működtethető");});
test("működteti -> működtet", function() {deepEqual( Stem("működteti"), "működtet");});
test("működtetik -> működtet", function() {deepEqual( Stem("működtetik"), "működtet");});
test("működtetnek -> működtet", function() {deepEqual( Stem("működtetnek"), "működtet");});
test("működtetni -> működtetn", function() {deepEqual( Stem("működtetni"), "működtetn");});
test("működtetnie -> működtetn", function() {deepEqual( Stem("működtetnie"), "működtetn");});
test("működtette -> működtett", function() {deepEqual( Stem("működtette"), "működtett");});
test("működtet -> működt", function() {deepEqual( Stem("működtet"), "működt");});
test("működtetett -> működtetet", function() {deepEqual( Stem("működtetett"), "működtetet");});
test("működtetési -> működtetés", function() {deepEqual( Stem("működtetési"), "működtetés");});
test("működtetés -> működtetés", function() {deepEqual( Stem("működtetés"), "működtetés");});
test("működtetése -> működtetés", function() {deepEqual( Stem("működtetése"), "működtetés");});
test("működtetésen -> működtetés", function() {deepEqual( Stem("működtetésen"), "működtetés");});
test("működtetéshez -> működtetés", function() {deepEqual( Stem("működtetéshez"), "működtetés");});
test("működtetésében -> működtetés", function() {deepEqual( Stem("működtetésében"), "működtetés");});
test("működtetéséhez -> működtetés", function() {deepEqual( Stem("működtetéséhez"), "működtetés");});
test("működtetéséig -> működtetés", function() {deepEqual( Stem("működtetéséig"), "működtetés");});
test("működtetésének -> működtetés", function() {deepEqual( Stem("működtetésének"), "működtetés");});
test("működtetésére -> működtetés", function() {deepEqual( Stem("működtetésére"), "működtetés");});
test("működtetését -> működtetés", function() {deepEqual( Stem("működtetését"), "működtetés");});
test("működtetésénekszempontjából -> működtetésénekszempont", function() {deepEqual( Stem("működtetésénekszempontjából"), "működtetésénekszempont");});
test("működtetői -> működtető", function() {deepEqual( Stem("működtetői"), "működtető");});
test("működtető -> működtető", function() {deepEqual( Stem("működtető"), "működtető");});
test("működtetőinek -> működtető", function() {deepEqual( Stem("működtetőinek"), "működtető");});
test("működtetők -> működtető", function() {deepEqual( Stem("működtetők"), "működtető");});
test("működve -> működv", function() {deepEqual( Stem("működve"), "működv");});
test("működésbeli -> működésbel", function() {deepEqual( Stem("működésbeli"), "működésbel");});
test("működési -> működés", function() {deepEqual( Stem("működési"), "működés");});
test("működésképtelen -> működésképtel", function() {deepEqual( Stem("működésképtelen"), "működésképtel");});
test("működésképtelenné -> működésképtelen", function() {deepEqual( Stem("működésképtelenné"), "működésképtelen");});
test("működés -> működés", function() {deepEqual( Stem("működés"), "működés");});
test("működésben -> működés", function() {deepEqual( Stem("működésben"), "működés");});
test("működése -> működés", function() {deepEqual( Stem("működése"), "működés");});
test("működésekor -> működés", function() {deepEqual( Stem("működésekor"), "működés");});
test("működéshez -> működés", function() {deepEqual( Stem("működéshez"), "működés");});
test("működésbe -> működés", function() {deepEqual( Stem("működésbe"), "működés");});
test("működésnek -> működés", function() {deepEqual( Stem("működésnek"), "működés");});
test("működésnél -> működés", function() {deepEqual( Stem("működésnél"), "működés");});
test("működésre -> működés", function() {deepEqual( Stem("működésre"), "működés");});
test("működésről -> működés", function() {deepEqual( Stem("működésről"), "működés");});
test("működéssel -> működés", function() {deepEqual( Stem("működéssel"), "működés");});
test("működést -> működés", function() {deepEqual( Stem("működést"), "működés");});
test("működésében -> működés", function() {deepEqual( Stem("működésében"), "működés");});
test("működéséhez -> működés", function() {deepEqual( Stem("működéséhez"), "működés");});
test("működésén -> működés", function() {deepEqual( Stem("működésén"), "működés");});
test("működésének -> működés", function() {deepEqual( Stem("működésének"), "működés");});
test("működésének -> működés", function() {deepEqual( Stem("működésének"), "működés");});
test("működésére -> működés", function() {deepEqual( Stem("működésére"), "működés");});
test("működéséről -> működés", function() {deepEqual( Stem("működéséről"), "működés");});
test("működését -> működés", function() {deepEqual( Stem("működését"), "működés");});
test("működésével -> működés", function() {deepEqual( Stem("működésével"), "működés");});
test("működéséért -> működés", function() {deepEqual( Stem("működéséért"), "működés");});
test("működésük -> működés", function() {deepEqual( Stem("működésük"), "működés");});
test("működésüket -> működés", function() {deepEqual( Stem("működésüket"), "működés");});
test("működésükre -> működés", function() {deepEqual( Stem("működésükre"), "működés");});
test("működésükről -> működés", function() {deepEqual( Stem("működésükről"), "működés");});
test("működésűnek -> működésű", function() {deepEqual( Stem("működésűnek"), "működésű");});
test("működő -> működő", function() {deepEqual( Stem("működő"), "működő");});
test("működőből -> működő", function() {deepEqual( Stem("működőből"), "működő");});
test("működők -> működő", function() {deepEqual( Stem("működők"), "működő");});
test("működőket -> működő", function() {deepEqual( Stem("működőket"), "működő");});
test("működőképes -> működőképes", function() {deepEqual( Stem("működőképes"), "működőképes");});
test("működőképesek -> működőképes", function() {deepEqual( Stem("működőképesek"), "működőképes");});
test("működőképessége -> működőképesség", function() {deepEqual( Stem("működőképessége"), "működőképesség");});
test("működőképességének -> működőképesség", function() {deepEqual( Stem("működőképességének"), "működőképesség");});
test("működőképességére -> működőképesség", function() {deepEqual( Stem("működőképességére"), "működőképesség");});
test("működőképességét -> működőképesség", function() {deepEqual( Stem("működőképességét"), "működőképesség");});
test("működőtőke-beáramlás -> működőtőke-beáramlás", function() {deepEqual( Stem("működőtőke-beáramlás"), "működőtőke-beáramlás");});
test("műkörömmel -> műkörö", function() {deepEqual( Stem("műkörömmel"), "műkörö");});
test("műlehívás -> műlehívás", function() {deepEqual( Stem("műlehívás"), "műlehívás");});
test("műlehívást -> műlehívás", function() {deepEqual( Stem("műlehívást"), "műlehívás");});
test("műlehívásos -> műlehívásos", function() {deepEqual( Stem("műlehívásos"), "műlehívásos");});
test("műnyilvántartás -> műnyilvántartás", function() {deepEqual( Stem("műnyilvántartás"), "műnyilvántartás");});
test("műpéldány -> műpéldány", function() {deepEqual( Stem("műpéldány"), "műpéldány");});
test("műpéldánynak -> műpéldány", function() {deepEqual( Stem("műpéldánynak"), "műpéldány");});
test("műpéldányok -> műpéldány", function() {deepEqual( Stem("műpéldányok"), "műpéldány");});
test("műpéldányokat -> műpéldány", function() {deepEqual( Stem("műpéldányokat"), "műpéldány");});
test("műpéldányoknak -> műpéldány", function() {deepEqual( Stem("műpéldányoknak"), "műpéldány");});
test("műpéldányokra -> műpéldány", function() {deepEqual( Stem("műpéldányokra"), "műpéldány");});
test("műpéldányon -> műpéldány", function() {deepEqual( Stem("műpéldányon"), "műpéldány");});
test("műpéldányt -> műpéldány", function() {deepEqual( Stem("műpéldányt"), "műpéldány");});
test("műpéldányának -> műpéldány", function() {deepEqual( Stem("műpéldányának"), "műpéldány");});
test("műrészlet -> műrészl", function() {deepEqual( Stem("műrészlet"), "műrészl");});
test("műrészletek -> műrészlet", function() {deepEqual( Stem("műrészletek"), "műrészlet");});
test("műrészletekből -> műrészlet", function() {deepEqual( Stem("műrészletekből"), "műrészlet");});
test("műrészre -> műrész", function() {deepEqual( Stem("műrészre"), "műrész");});
test("műrészt -> műrész", function() {deepEqual( Stem("műrészt"), "műrész");});
test("műsor-szolgáltatási -> műsor-szolgáltatás", function() {deepEqual( Stem("műsor-szolgáltatási"), "műsor-szolgáltatás");});
test("műsorajánló -> műsorajánló", function() {deepEqual( Stem("műsorajánló"), "műsorajánló");});
test("műsorajánlók -> műsorajánló", function() {deepEqual( Stem("műsorajánlók"), "műsorajánló");});
test("műsorcsere -> műsorcs", function() {deepEqual( Stem("műsorcsere"), "műsorcs");});
test("műsorcseréjének -> műsorcseré", function() {deepEqual( Stem("műsorcseréjének"), "műsorcseré");});
test("műsorcsomaggal -> műsorcsomag", function() {deepEqual( Stem("műsorcsomaggal"), "műsorcsomag");});
test("műsorelosztási -> műsorelosztás", function() {deepEqual( Stem("műsorelosztási"), "műsorelosztás");});
test("műsorelosztás -> műsorelosztás", function() {deepEqual( Stem("műsorelosztás"), "műsorelosztás");});
test("műsorelosztásnak -> műsorelosztás", function() {deepEqual( Stem("műsorelosztásnak"), "műsorelosztás");});
test("műsorelosztó -> műsorelosztó", function() {deepEqual( Stem("műsorelosztó"), "műsorelosztó");});
test("műsorelosztók -> műsorelosztó", function() {deepEqual( Stem("műsorelosztók"), "műsorelosztó");});
test("műsorelosztóknak -> műsorelosztó", function() {deepEqual( Stem("műsorelosztóknak"), "műsorelosztó");});
test("műsorelosztónak -> műsorelosztó", function() {deepEqual( Stem("műsorelosztónak"), "műsorelosztó");});
test("műsorfajta -> műsorfajt", function() {deepEqual( Stem("műsorfajta"), "műsorfajt");});
test("műsorfolyam -> műsorfoly", function() {deepEqual( Stem("műsorfolyam"), "műsorfoly");});
test("műsorfüzetbe -> műsorfüzet", function() {deepEqual( Stem("műsorfüzetbe"), "műsorfüzet");});
test("műsorhordozó -> műsorhordozó", function() {deepEqual( Stem("műsorhordozó"), "műsorhordozó");});
test("műsorismertetőt -> műsorismertető", function() {deepEqual( Stem("műsorismertetőt"), "műsorismertető");});
test("műsorkalauzra -> műsorkalauz", function() {deepEqual( Stem("műsorkalauzra"), "műsorkalauz");});
test("műsorkészítés -> műsorkészítés", function() {deepEqual( Stem("műsorkészítés"), "műsorkészítés");});
test("műsorkészítésre -> műsorkészítés", function() {deepEqual( Stem("műsorkészítésre"), "műsorkészítés");});
test("műsorkészítő -> műsorkészítő", function() {deepEqual( Stem("műsorkészítő"), "műsorkészítő");});
test("műsorkínálattal -> műsorkínál", function() {deepEqual( Stem("műsorkínálattal"), "műsorkínál");});
test("műsormegváltás -> műsormegváltás", function() {deepEqual( Stem("műsormegváltás"), "műsormegváltás");});
test("műsormérési -> műsormérés", function() {deepEqual( Stem("műsormérési"), "műsormérés");});
test("műsoros -> műsoros", function() {deepEqual( Stem("műsoros"), "műsoros");});
test("műsorstruktúra -> műsorstruktú", function() {deepEqual( Stem("műsorstruktúra"), "műsorstruktú");});
test("műsorsugárzásra -> műsorsugárzás", function() {deepEqual( Stem("műsorsugárzásra"), "műsorsugárzás");});
test("műsorsugárzó -> műsorsugárzó", function() {deepEqual( Stem("műsorsugárzó"), "műsorsugárzó");});
test("műsorszolgáltatásban -> műsorszolgáltatás", function() {deepEqual( Stem("műsorszolgáltatásban"), "műsorszolgáltatás");});
test("műsorszolgáltatására -> műsorszolgáltatás", function() {deepEqual( Stem("műsorszolgáltatására"), "műsorszolgáltatás");});
test("műsorszolgáltatási -> műsorszolgáltatás", function() {deepEqual( Stem("műsorszolgáltatási"), "műsorszolgáltatás");});
test("műsorszolgáltató -> műsorszolgáltató", function() {deepEqual( Stem("műsorszolgáltató"), "műsorszolgáltató");});
test("műsorszolgáltatók -> műsorszolgáltató", function() {deepEqual( Stem("műsorszolgáltatók"), "műsorszolgáltató");});
test("műsorszolgáltatókat -> műsorszolgáltató", function() {deepEqual( Stem("műsorszolgáltatókat"), "műsorszolgáltató");});
test("műsorszolgáltatótól -> műsorszolgáltató", function() {deepEqual( Stem("műsorszolgáltatótól"), "műsorszolgáltató");});
test("műsorszolgáltatóval -> műsorszolgáltató", function() {deepEqual( Stem("műsorszolgáltatóval"), "műsorszolgáltató");});
test("műsorszám -> műsorsza", function() {deepEqual( Stem("műsorszám"), "műsorsza");});
test("műsorszámai -> műsorszám", function() {deepEqual( Stem("műsorszámai"), "műsorszám");});
test("műsorszámaiban -> műsorszám", function() {deepEqual( Stem("műsorszámaiban"), "műsorszám");});
test("műsorszámok -> műsorszám", function() {deepEqual( Stem("műsorszámok"), "műsorszám");});
test("műsorszámon -> műsorsza", function() {deepEqual( Stem("műsorszámon"), "műsorsza");});
test("műsorszórás -> műsorszórás", function() {deepEqual( Stem("műsorszórás"), "műsorszórás");});
test("műsorszóráshoz -> műsorszórás", function() {deepEqual( Stem("műsorszóráshoz"), "műsorszórás");});
test("műsorszórásra -> műsorszórás", function() {deepEqual( Stem("műsorszórásra"), "műsorszórás");});
test("műsorszórással -> műsorszórás", function() {deepEqual( Stem("műsorszórással"), "műsorszórás");});
test("műsorsávba -> műsorsáv", function() {deepEqual( Stem("műsorsávba"), "műsorsáv");});
test("műsortovábbító -> műsortovábbító", function() {deepEqual( Stem("műsortovábbító"), "műsortovábbító");});
test("műsorvezető -> műsorvezető", function() {deepEqual( Stem("műsorvezető"), "műsorvezető");});
test("műsorvezetője -> műsorvezető", function() {deepEqual( Stem("műsorvezetője"), "műsorvezető");});
test("műsor -> műsor", function() {deepEqual( Stem("műsor"), "műsor");});
test("műsorait -> műsor", function() {deepEqual( Stem("műsorait"), "műsor");});
test("műsora -> műs", function() {deepEqual( Stem("műsora"), "műs");});
test("műsoraiba -> műsor", function() {deepEqual( Stem("műsoraiba"), "műsor");});
test("műsoraiban -> műsor", function() {deepEqual( Stem("műsoraiban"), "műsor");});
test("műsoraik -> műsor", function() {deepEqual( Stem("műsoraik"), "műsor");});
test("műsorainak -> műsor", function() {deepEqual( Stem("műsorainak"), "műsor");});
test("műsorba -> műsor", function() {deepEqual( Stem("műsorba"), "műsor");});
test("műsorban -> műsor", function() {deepEqual( Stem("műsorban"), "műsor");});
test("műsorhoz -> műsor", function() {deepEqual( Stem("műsorhoz"), "műsor");});
test("műsornak -> műsor", function() {deepEqual( Stem("műsornak"), "műsor");});
test("műsorok -> műsor", function() {deepEqual( Stem("műsorok"), "műsor");});
test("műsorokat -> műsor", function() {deepEqual( Stem("műsorokat"), "műsor");});
test("műsorokhoz -> műsor", function() {deepEqual( Stem("műsorokhoz"), "műsor");});
test("műsorokkal -> műsor", function() {deepEqual( Stem("műsorokkal"), "műsor");});
test("műsoroknak -> műsor", function() {deepEqual( Stem("műsoroknak"), "műsor");});
test("műsoroknál -> műsor", function() {deepEqual( Stem("műsoroknál"), "műsor");});
test("műsorokra -> műsor", function() {deepEqual( Stem("műsorokra"), "műsor");});
test("műsoromat -> műsor", function() {deepEqual( Stem("műsoromat"), "műsor");});
test("műsoronként -> műsor", function() {deepEqual( Stem("műsoronként"), "műsor");});
test("műsorra -> műsor", function() {deepEqual( Stem("műsorra"), "műsor");});
test("műsort -> műsor", function() {deepEqual( Stem("műsort"), "műsor");});
test("műsoruk -> műsor", function() {deepEqual( Stem("műsoruk"), "műsor");});
test("műsorukkal -> műsor", function() {deepEqual( Stem("műsorukkal"), "műsor");});
test("műsorunk -> műsor", function() {deepEqual( Stem("műsorunk"), "műsor");});
test("műsorába -> műsor", function() {deepEqual( Stem("műsorába"), "műsor");});
test("műsorában -> műsor", function() {deepEqual( Stem("műsorában"), "műsor");});
test("műsorából -> műsor", function() {deepEqual( Stem("műsorából"), "műsor");});
test("műsorán -> műsor", function() {deepEqual( Stem("műsorán"), "műsor");});
test("műsorának -> műsor", function() {deepEqual( Stem("műsorának"), "műsor");});
test("műsorára -> műsor", function() {deepEqual( Stem("műsorára"), "műsor");});
test("műsorát -> műsor", function() {deepEqual( Stem("műsorát"), "műsor");});
test("műsorátvivő -> műsorátvivő", function() {deepEqual( Stem("műsorátvivő"), "műsorátvivő");});
test("műszaki -> műsz", function() {deepEqual( Stem("műszaki"), "műsz");});
test("műszak -> műsz", function() {deepEqual( Stem("műszak"), "műsz");});
test("műszakjukat -> műsz", function() {deepEqual( Stem("műszakjukat"), "műsz");});
test("műszaknak -> műsz", function() {deepEqual( Stem("műszaknak"), "műsz");});
test("műszer -> műszer", function() {deepEqual( Stem("műszer"), "műszer");});
test("műszerek -> műszer", function() {deepEqual( Stem("műszerek"), "műszer");});
test("műszereket -> műszer", function() {deepEqual( Stem("műszereket"), "műszer");});
test("műszerekkel -> műszer", function() {deepEqual( Stem("műszerekkel"), "műszer");});
test("műszerem -> műszer", function() {deepEqual( Stem("műszerem"), "műszer");});
test("műszert -> műszer", function() {deepEqual( Stem("műszert"), "műszer");});
test("műszerfal -> műszerfal", function() {deepEqual( Stem("műszerfal"), "műszerfal");});
test("műszerfalat -> műszerfal", function() {deepEqual( Stem("műszerfalat"), "műszerfal");});
test("műszerfalba -> műszerfal", function() {deepEqual( Stem("műszerfalba"), "műszerfal");});
test("műszerfaltól -> műszerfal", function() {deepEqual( Stem("műszerfaltól"), "műszerfal");});
test("műszerkonzolra -> műszerkonzol", function() {deepEqual( Stem("műszerkonzolra"), "műszerkonzol");});
test("műszerész -> műszerész", function() {deepEqual( Stem("műszerész"), "műszerész");});
test("műszerésznek -> műszerész", function() {deepEqual( Stem("műszerésznek"), "műszerész");});
test("műszó -> műszó", function() {deepEqual( Stem("műszó"), "műszó");});
test("műtanúsítvánnyal -> műtanúsítvány", function() {deepEqual( Stem("műtanúsítvánnyal"), "műtanúsítvány");});
test("műtanúsítványt -> műtanúsítvány", function() {deepEqual( Stem("műtanúsítványt"), "műtanúsítvány");});
test("műterjesztésre -> műterjesztés", function() {deepEqual( Stem("műterjesztésre"), "műterjesztés");});
test("műteremben -> műter", function() {deepEqual( Stem("műteremben"), "műter");});
test("műteremre -> műter", function() {deepEqual( Stem("műteremre"), "műter");});
test("műterme -> műterm", function() {deepEqual( Stem("műterme"), "műterm");});
test("műtermet -> műter", function() {deepEqual( Stem("műtermet"), "műter");});
test("műtermében -> műterm", function() {deepEqual( Stem("műtermében"), "műterm");});
test("műtik -> műt", function() {deepEqual( Stem("műtik"), "műt");});
test("műtrágya -> műtrágy", function() {deepEqual( Stem("műtrágya"), "műtrágy");});
test("műtrágyából -> műtrágy", function() {deepEqual( Stem("műtrágyából"), "műtrágy");});
test("műtrágyagyár -> műtrágyagyár", function() {deepEqual( Stem("műtrágyagyár"), "műtrágyagyár");});
test("műtárgy-aukcióknak -> műtárgy-aukció", function() {deepEqual( Stem("műtárgy-aukcióknak"), "műtárgy-aukció");});
test("műtárgy-piacával -> műtárgy-piac", function() {deepEqual( Stem("műtárgy-piacával"), "műtárgy-piac");});
test("műtárgy -> műtárgy", function() {deepEqual( Stem("műtárgy"), "műtárgy");});
test("műtárgyaival -> műtárgy", function() {deepEqual( Stem("műtárgyaival"), "műtárgy");});
test("műtárgyak -> műtárgy", function() {deepEqual( Stem("műtárgyak"), "műtárgy");});
test("műtárgyakat -> műtárgy", function() {deepEqual( Stem("műtárgyakat"), "műtárgy");});
test("műtárgynak -> műtárgy", function() {deepEqual( Stem("műtárgynak"), "műtárgy");});
test("műtárgyaukciókat -> műtárgyaukció", function() {deepEqual( Stem("műtárgyaukciókat"), "műtárgyaukció");});
test("műtárgypiac -> műtárgypiac", function() {deepEqual( Stem("műtárgypiac"), "műtárgypiac");});
test("műtárgyárverések -> műtárgyárverés", function() {deepEqual( Stem("műtárgyárverések"), "műtárgyárverés");});
test("műtárolás -> műtárolás", function() {deepEqual( Stem("műtárolás"), "műtárolás");});
test("műtéti -> műtét", function() {deepEqual( Stem("műtéti"), "műtét");});
test("műtét -> műt", function() {deepEqual( Stem("műtét"), "műt");});
test("műtétek -> műtét", function() {deepEqual( Stem("műtétek"), "műtét");});
test("műtétet -> műtét", function() {deepEqual( Stem("műtétet"), "műtét");});
test("műtétkor -> műtét", function() {deepEqual( Stem("műtétkor"), "műtét");});
test("műtétnél -> műtét", function() {deepEqual( Stem("műtétnél"), "műtét");});
test("műtétre -> műtét", function() {deepEqual( Stem("műtétre"), "műtét");});
test("műtétért -> műtét", function() {deepEqual( Stem("műtétért"), "műtét");});
test("műtípusok -> műtípus", function() {deepEqual( Stem("műtípusok"), "műtípus");});
test("műtípusokat -> műtípus", function() {deepEqual( Stem("műtípusokat"), "műtípus");});
test("műtípusokra -> műtípus", function() {deepEqual( Stem("műtípusokra"), "műtípus");});
test("műtörténeti -> műtörténet", function() {deepEqual( Stem("műtörténeti"), "műtörténet");});
test("műtörténész -> műtörténész", function() {deepEqual( Stem("műtörténész"), "műtörténész");});
test("műhöz -> mű", function() {deepEqual( Stem("műhöz"), "mű");});
test("műként -> mű", function() {deepEqual( Stem("műként"), "mű");});
test("műbe -> mű", function() {deepEqual( Stem("műbe"), "mű");});
test("műben -> mű", function() {deepEqual( Stem("műben"), "mű");});
test("műből -> mű", function() {deepEqual( Stem("műből"), "mű");});
test("mű -> mű", function() {deepEqual( Stem("mű"), "mű");});
test("műről -> mű", function() {deepEqual( Stem("műről"), "mű");});
test("műre -> mű", function() {deepEqual( Stem("műre"), "mű");});
test("műnél -> mű", function() {deepEqual( Stem("műnél"), "mű");});
test("műnek -> mű", function() {deepEqual( Stem("műnek"), "mű");});
test("műtől -> mű", function() {deepEqual( Stem("műtől"), "mű");});
test("műve -> műv", function() {deepEqual( Stem("műve"), "műv");});
test("műved -> műv", function() {deepEqual( Stem("műved"), "műv");});
test("művei -> műv", function() {deepEqual( Stem("művei"), "műv");});
test("műveiből -> műv", function() {deepEqual( Stem("műveiből"), "műv");});
test("műveik -> műv", function() {deepEqual( Stem("műveik"), "műv");});
test("műveiket -> műv", function() {deepEqual( Stem("műveiket"), "műv");});
test("műveikkel -> műv", function() {deepEqual( Stem("műveikkel"), "műv");});
test("műveimről -> műv", function() {deepEqual( Stem("műveimről"), "műv");});
test("műveinek -> műv", function() {deepEqual( Stem("műveinek"), "műv");});
test("műveire -> műv", function() {deepEqual( Stem("műveire"), "műv");});
test("műveit -> műv", function() {deepEqual( Stem("műveit"), "műv");});
test("műveivel -> műv", function() {deepEqual( Stem("műveivel"), "műv");});
test("művek -> műv", function() {deepEqual( Stem("művek"), "műv");});
test("művekből -> műv", function() {deepEqual( Stem("művekből"), "műv");});
test("műveken -> műv", function() {deepEqual( Stem("műveken"), "műv");});
test("műveket -> műv", function() {deepEqual( Stem("műveket"), "műv");});
test("művekhez -> műv", function() {deepEqual( Stem("művekhez"), "műv");});
test("művekkel -> műv", function() {deepEqual( Stem("művekkel"), "műv");});
test("művekként -> műv", function() {deepEqual( Stem("művekként"), "műv");});
test("műveknek -> műv", function() {deepEqual( Stem("műveknek"), "műv");});
test("műveknél -> műv", function() {deepEqual( Stem("műveknél"), "műv");});
test("művekre -> műv", function() {deepEqual( Stem("művekre"), "műv");});
test("művekről -> műv", function() {deepEqual( Stem("művekről"), "műv");});
test("művektől -> műv", function() {deepEqual( Stem("művektől"), "műv");});
test("művem -> műv", function() {deepEqual( Stem("művem"), "műv");});
test("művemnek -> műv", function() {deepEqual( Stem("művemnek"), "műv");});
test("művenként -> műv", function() {deepEqual( Stem("művenként"), "műv");});
test("művet -> műv", function() {deepEqual( Stem("művet"), "műv");});
test("művében -> műv", function() {deepEqual( Stem("művében"), "műv");});
test("művéhez -> műv", function() {deepEqual( Stem("művéhez"), "műv");});
test("művén -> műv", function() {deepEqual( Stem("művén"), "műv");});
test("művét -> műv", function() {deepEqual( Stem("művét"), "műv");});
test("művével -> műv", function() {deepEqual( Stem("művével"), "műv");});
test("művön -> műv", function() {deepEqual( Stem("művön"), "műv");});
test("művük -> műv", function() {deepEqual( Stem("művük"), "műv");});
test("művének -> műv", function() {deepEqual( Stem("művének"), "műv");});
test("művére -> műv", function() {deepEqual( Stem("művére"), "műv");});
test("művel -> mű", function() {deepEqual( Stem("művel"), "mű");});
test("műveletcsoport -> műveletcsopor", function() {deepEqual( Stem("műveletcsoport"), "műveletcsopor");});
test("művelet -> művel", function() {deepEqual( Stem("művelet"), "művel");});
test("műveletben -> művelet", function() {deepEqual( Stem("műveletben"), "művelet");});
test("művelete -> művelet", function() {deepEqual( Stem("művelete"), "művelet");});
test("műveleteihez -> művelet", function() {deepEqual( Stem("műveleteihez"), "művelet");});
test("műveleteinek -> művelet", function() {deepEqual( Stem("műveleteinek"), "művelet");});
test("műveleteiről -> művelet", function() {deepEqual( Stem("műveleteiről"), "művelet");});
test("műveleteit -> művelet", function() {deepEqual( Stem("műveleteit"), "művelet");});
test("műveletek -> művelet", function() {deepEqual( Stem("műveletek"), "művelet");});
test("műveletekben -> művelet", function() {deepEqual( Stem("műveletekben"), "művelet");});
test("műveleteket -> művelet", function() {deepEqual( Stem("műveleteket"), "művelet");});
test("műveletekhez -> művelet", function() {deepEqual( Stem("műveletekhez"), "művelet");});
test("műveletekre -> művelet", function() {deepEqual( Stem("műveletekre"), "művelet");});
test("műveletekről -> művelet", function() {deepEqual( Stem("műveletekről"), "művelet");});
test("műveletet -> művelet", function() {deepEqual( Stem("műveletet"), "művelet");});
test("művelethez -> művelet", function() {deepEqual( Stem("művelethez"), "művelet");});
test("műveletlen -> műveletl", function() {deepEqual( Stem("műveletlen"), "műveletl");});
test("műveletnek -> művelet", function() {deepEqual( Stem("műveletnek"), "művelet");});
test("műveletre -> művelet", function() {deepEqual( Stem("műveletre"), "művelet");});
test("műveletről -> művelet", function() {deepEqual( Stem("műveletről"), "művelet");});
test("műveletéről -> művelet", function() {deepEqual( Stem("műveletéről"), "művelet");});
test("műveletét -> művelet", function() {deepEqual( Stem("műveletét"), "művelet");});
test("műveleti -> művelet", function() {deepEqual( Stem("műveleti"), "művelet");});
test("művelek -> művel", function() {deepEqual( Stem("művelek"), "művel");});
test("műveli -> művel", function() {deepEqual( Stem("műveli"), "művel");});
test("művelik -> művel", function() {deepEqual( Stem("művelik"), "művel");});
test("műveljen -> művelj", function() {deepEqual( Stem("műveljen"), "művelj");});
test("műveljék -> művelje", function() {deepEqual( Stem("műveljék"), "művelje");});
test("műveljük -> művel", function() {deepEqual( Stem("műveljük"), "művel");});
test("művelnek -> művel", function() {deepEqual( Stem("művelnek"), "művel");});
test("művelni -> műveln", function() {deepEqual( Stem("művelni"), "műveln");});
test("művelném -> művelne", function() {deepEqual( Stem("művelném"), "művelne");});
test("művelted -> művelt", function() {deepEqual( Stem("művelted"), "művelt");});
test("műveltette -> műveltett", function() {deepEqual( Stem("műveltette"), "műveltett");});
test("művelt -> művel", function() {deepEqual( Stem("művelt"), "művel");});
test("műveltek -> művelt", function() {deepEqual( Stem("műveltek"), "művelt");});
test("műveltebb -> műveltebb", function() {deepEqual( Stem("műveltebb"), "műveltebb");});
test("műveltebbek -> műveltebb", function() {deepEqual( Stem("műveltebbek"), "műveltebb");});
test("műveltebbé -> művelteb", function() {deepEqual( Stem("műveltebbé"), "művelteb");});
test("műveltség -> műveltség", function() {deepEqual( Stem("műveltség"), "műveltség");});
test("műveltséget -> műveltség", function() {deepEqual( Stem("műveltséget"), "műveltség");});
test("műveltséghez -> műveltség", function() {deepEqual( Stem("műveltséghez"), "műveltség");});
test("műveltségre -> műveltség", function() {deepEqual( Stem("műveltségre"), "műveltség");});
test("műveltségével -> műveltség", function() {deepEqual( Stem("műveltségével"), "műveltség");});
test("műveltségünk -> műveltség", function() {deepEqual( Stem("műveltségünk"), "műveltség");});
test("művelték -> művelte", function() {deepEqual( Stem("művelték"), "művelte");});
test("művelünk -> művel", function() {deepEqual( Stem("művelünk"), "művel");});
test("művelés -> művelés", function() {deepEqual( Stem("művelés"), "művelés");});
test("művelésre -> művelés", function() {deepEqual( Stem("művelésre"), "művelés");});
test("művelésű -> művelésű", function() {deepEqual( Stem("művelésű"), "művelésű");});
test("művelődés -> művelődés", function() {deepEqual( Stem("művelődés"), "művelődés");});
test("művelődési -> művelődés", function() {deepEqual( Stem("művelődési"), "művelődés");});
test("művelődéstörténetét -> művelődéstörténet", function() {deepEqual( Stem("művelődéstörténetét"), "művelődéstörténet");});
test("művelődni -> művelődn", function() {deepEqual( Stem("művelődni"), "művelődn");});
test("művelődöm -> művelődö", function() {deepEqual( Stem("művelődöm"), "művelődö");});
test("művelőiből -> művelő", function() {deepEqual( Stem("művelőiből"), "művelő");});
test("művelőinek -> művelő", function() {deepEqual( Stem("művelőinek"), "művelő");});
test("művese -> műves", function() {deepEqual( Stem("művese"), "műves");});
test("művesekezelések -> művesekezelés", function() {deepEqual( Stem("művesekezelések"), "művesekezelés");});
test("művesét -> műves", function() {deepEqual( Stem("művesét"), "műves");});
test("művirággyáros -> művirággyáros", function() {deepEqual( Stem("művirággyáros"), "művirággyáros");});
test("művészbejáratot -> művészbejárat", function() {deepEqual( Stem("művészbejáratot"), "művészbejárat");});
test("művészbejáró -> művészbejáró", function() {deepEqual( Stem("művészbejáró"), "művészbejáró");});
test("művészbejáróján -> művészbejáró", function() {deepEqual( Stem("művészbejáróján"), "művészbejáró");});
test("művész -> művész", function() {deepEqual( Stem("művész"), "művész");});
test("művészeinek -> művész", function() {deepEqual( Stem("művészeinek"), "művész");});
test("művészek -> művész", function() {deepEqual( Stem("művészek"), "művész");});
test("művészeket -> művész", function() {deepEqual( Stem("művészeket"), "művész");});
test("művészeknek -> művész", function() {deepEqual( Stem("művészeknek"), "művész");});
test("művészként -> művész", function() {deepEqual( Stem("művészként"), "művész");});
test("művészt -> művész", function() {deepEqual( Stem("művészt"), "művész");});
test("művészének -> művész", function() {deepEqual( Stem("művészének"), "művész");});
test("művészet -> művész", function() {deepEqual( Stem("művészet"), "művész");});
test("művészeteitek -> művészet", function() {deepEqual( Stem("művészeteitek"), "művészet");});
test("művészetek -> művészet", function() {deepEqual( Stem("művészetek"), "művészet");});
test("művészeteket -> művészet", function() {deepEqual( Stem("művészeteket"), "művészet");});
test("művészeteknek -> művészet", function() {deepEqual( Stem("művészeteknek"), "művészet");});
test("művészetekre -> művészet", function() {deepEqual( Stem("művészetekre"), "művészet");});
test("művészeten -> művészet", function() {deepEqual( Stem("művészeten"), "művészet");});
test("művészetet -> művészet", function() {deepEqual( Stem("művészetet"), "művészet");});
test("művészetnek -> művészet", function() {deepEqual( Stem("művészetnek"), "művészet");});
test("művészetre -> művészet", function() {deepEqual( Stem("művészetre"), "művészet");});
test("művészetről -> művészet", function() {deepEqual( Stem("művészetről"), "művészet");});
test("művészetükhöz -> művészet", function() {deepEqual( Stem("művészetükhöz"), "művészet");});
test("művészeti -> művészet", function() {deepEqual( Stem("művészeti"), "művészet");});
test("művészetoktatásban -> művészetoktatás", function() {deepEqual( Stem("művészetoktatásban"), "művészetoktatás");});
test("művészettörténet -> művészettört", function() {deepEqual( Stem("művészettörténet"), "művészettört");});
test("művészettörténetet -> művészettörténet", function() {deepEqual( Stem("művészettörténetet"), "művészettörténet");});
test("űvészettörténetnek -> űvészettörténet", function() {deepEqual( Stem("űvészettörténetnek"), "űvészettörténet");});
test("művészettörténetről -> művészettörténet", function() {deepEqual( Stem("művészettörténetről"), "művészettörténet");});
test("művészettörténeti -> művészettörténet", function() {deepEqual( Stem("művészettörténeti"), "művészettörténet");});
test("művészettörténetileg -> művészettörténetileg", function() {deepEqual( Stem("művészettörténetileg"), "művészettörténetileg");});
test("művészettörténész-műgyűjtő -> művészettörténész-műgyűjtő", function() {deepEqual( Stem("művészettörténész-műgyűjtő"), "művészettörténész-műgyűjtő");});
test("művészettörténészek -> művészettörténész", function() {deepEqual( Stem("művészettörténészek"), "művészettörténész");});
test("művészi -> művész", function() {deepEqual( Stem("művészi"), "művész");});
test("művészies -> művészies", function() {deepEqual( Stem("művészies"), "művészies");});
test("művészkalapja -> művészkalap", function() {deepEqual( Stem("művészkalapja"), "művészkalap");});
test("művésznevem -> művésznev", function() {deepEqual( Stem("művésznevem"), "művésznev");});
test("művésznőket -> művésznő", function() {deepEqual( Stem("művésznőket"), "művésznő");});
test("művű -> művű", function() {deepEqual( Stem("művű"), "művű");});
test("műélvezet -> műélvez", function() {deepEqual( Stem("műélvezet"), "műélvez");});
test("műélvezetre -> műélvezet", function() {deepEqual( Stem("műélvezetre"), "műélvezet");});
test("műértő -> műértő", function() {deepEqual( Stem("műértő"), "műértő");});
test("műúton -> műút", function() {deepEqual( Stem("műúton"), "műút");});
test("műútra -> műút", function() {deepEqual( Stem("műútra"), "műút");});
test("müködtetett -> müködtetet", function() {deepEqual( Stem("müködtetett"), "müködtetet");});
test("mütyürkékkel -> mütyürke", function() {deepEqual( Stem("mütyürkékkel"), "mütyürke");});
test("na -> na", function() {deepEqual( Stem("na"), "na");});
test("naccerű -> naccerű", function() {deepEqual( Stem("naccerű"), "naccerű");});
test("nacionalistának -> nacionalist", function() {deepEqual( Stem("nacionalistának"), "nacionalist");});
test("nacionalizmus -> nacionalizmus", function() {deepEqual( Stem("nacionalizmus"), "nacionalizmus");});
test("nacionalizmusba -> nacionalizmus", function() {deepEqual( Stem("nacionalizmusba"), "nacionalizmus");});
test("nacionalizmusnak -> nacionalizmus", function() {deepEqual( Stem("nacionalizmusnak"), "nacionalizmus");});
test("nacionalizmuson -> nacionalizmus", function() {deepEqual( Stem("nacionalizmuson"), "nacionalizmus");});
test("nacionáléját -> nacionálé", function() {deepEqual( Stem("nacionáléját"), "nacionálé");});
test("nacsalnyik -> nacsalny", function() {deepEqual( Stem("nacsalnyik"), "nacsalny");});
test("nadrág -> nadrág", function() {deepEqual( Stem("nadrág"), "nadrág");});
test("nadrágban -> nadrág", function() {deepEqual( Stem("nadrágban"), "nadrág");});
test("nadrágján -> nadrág", function() {deepEqual( Stem("nadrágján"), "nadrág");});
test("nadrágját -> nadrág", function() {deepEqual( Stem("nadrágját"), "nadrág");});
test("nadrágom -> nadrág", function() {deepEqual( Stem("nadrágom"), "nadrág");});
test("nadrágomat -> nadrág", function() {deepEqual( Stem("nadrágomat"), "nadrág");});
test("nadrágomba -> nadrág", function() {deepEqual( Stem("nadrágomba"), "nadrág");});
test("nadrágomban -> nadrág", function() {deepEqual( Stem("nadrágomban"), "nadrág");});
test("nadrágon -> nadrág", function() {deepEqual( Stem("nadrágon"), "nadrág");});
test("nadrágot -> nadrág", function() {deepEqual( Stem("nadrágot"), "nadrág");});
test("nadrágszáron -> nadrágszár", function() {deepEqual( Stem("nadrágszáron"), "nadrágszár");});
test("nadrágszíjat -> nadrágszíj", function() {deepEqual( Stem("nadrágszíjat"), "nadrágszíj");});
test("nadrágzsebébe -> nadrágzseb", function() {deepEqual( Stem("nadrágzsebébe"), "nadrágzseb");});
test("nagyritkán -> nagyrit", function() {deepEqual( Stem("nagyritkán"), "nagyrit");});
test("nagyrésze -> nagyrész", function() {deepEqual( Stem("nagyrésze"), "nagyrész");});
test("nagyrészt -> nagyrész", function() {deepEqual( Stem("nagyrészt"), "nagyrész");});
test("nagysebességű -> nagysebességű", function() {deepEqual( Stem("nagysebességű"), "nagysebességű");});
test("nagysokára -> nagys", function() {deepEqual( Stem("nagysokára"), "nagys");});
test("nagystrandra -> nagystran", function() {deepEqual( Stem("nagystrandra"), "nagystran");});
test("nagyszabású -> nagyszabású", function() {deepEqual( Stem("nagyszabású"), "nagyszabású");});
test("nagyszemű -> nagyszemű", function() {deepEqual( Stem("nagyszemű"), "nagyszemű");});
test("nagyszerű -> nagyszerű", function() {deepEqual( Stem("nagyszerű"), "nagyszerű");});
test("nagyszerűbben -> nagyszerűb", function() {deepEqual( Stem("nagyszerűbben"), "nagyszerűb");});
test("nagyszerűek -> nagyszerű", function() {deepEqual( Stem("nagyszerűek"), "nagyszerű");});
test("nagyszerűen -> nagyszerű", function() {deepEqual( Stem("nagyszerűen"), "nagyszerű");});
test("nagyszerűnek -> nagyszerű", function() {deepEqual( Stem("nagyszerűnek"), "nagyszerű");});
test("nagyszerűségek -> nagyszerűség", function() {deepEqual( Stem("nagyszerűségek"), "nagyszerűség");});
test("nagyszerűségében -> nagyszerűség", function() {deepEqual( Stem("nagyszerűségében"), "nagyszerűség");});
test("nagyszerűségét -> nagyszerűség", function() {deepEqual( Stem("nagyszerűségét"), "nagyszerűség");});
test("nagyszobaajtó -> nagyszobaajtó", function() {deepEqual( Stem("nagyszobaajtó"), "nagyszobaajtó");});
test("nagyszobába -> nagyszob", function() {deepEqual( Stem("nagyszobába"), "nagyszob");});
test("nagyszobában -> nagyszob", function() {deepEqual( Stem("nagyszobában"), "nagyszob");});
test("nagyszájú -> nagyszájú", function() {deepEqual( Stem("nagyszájú"), "nagyszájú");});
test("nagyszájúak -> nagyszájú", function() {deepEqual( Stem("nagyszájúak"), "nagyszájú");});
test("nagyszámítógépet -> nagyszámítógép", function() {deepEqual( Stem("nagyszámítógépet"), "nagyszámítógép");});
test("nagyszámítógéppé -> nagyszámítógép", function() {deepEqual( Stem("nagyszámítógéppé"), "nagyszámítógép");});
test("nagyszámú -> nagyszámú", function() {deepEqual( Stem("nagyszámú"), "nagyszámú");});
test("nagyszülei -> nagyszül", function() {deepEqual( Stem("nagyszülei"), "nagyszül");});
test("nagyszüleikkel -> nagyszül", function() {deepEqual( Stem("nagyszüleikkel"), "nagyszül");});
test("nagyszüleim -> nagyszül", function() {deepEqual( Stem("nagyszüleim"), "nagyszül");});
test("nagyszüleimet -> nagyszül", function() {deepEqual( Stem("nagyszüleimet"), "nagyszül");});
test("nagyszüleimhez -> nagyszül", function() {deepEqual( Stem("nagyszüleimhez"), "nagyszül");});
test("nagyszüleimnek -> nagyszül", function() {deepEqual( Stem("nagyszüleimnek"), "nagyszül");});
test("nagyszüleimnél -> nagyszül", function() {deepEqual( Stem("nagyszüleimnél"), "nagyszül");});
test("nagyszüleimről -> nagyszül", function() {deepEqual( Stem("nagyszüleimről"), "nagyszül");});
test("nagyszüleimtől -> nagyszül", function() {deepEqual( Stem("nagyszüleimtől"), "nagyszül");});
test("nagyszülő -> nagyszülő", function() {deepEqual( Stem("nagyszülő"), "nagyszülő");});
test("nagyszülők -> nagyszülő", function() {deepEqual( Stem("nagyszülők"), "nagyszülő");});
test("nagyszülőket -> nagyszülő", function() {deepEqual( Stem("nagyszülőket"), "nagyszülő");});
test("nagyszülőkkel -> nagyszülő", function() {deepEqual( Stem("nagyszülőkkel"), "nagyszülő");});
test("nagyszülőknek -> nagyszülő", function() {deepEqual( Stem("nagyszülőknek"), "nagyszülő");});
test("nagyszünetben -> nagyszünet", function() {deepEqual( Stem("nagyszünetben"), "nagyszünet");});
test("nagyságrendbe -> nagyságren", function() {deepEqual( Stem("nagyságrendbe"), "nagyságren");});
test("nagyságrendben -> nagyságren", function() {deepEqual( Stem("nagyságrendben"), "nagyságren");});
test("nagyságrenddel -> nagyságren", function() {deepEqual( Stem("nagyságrenddel"), "nagyságren");});
test("nagyságrendekkel -> nagyságrend", function() {deepEqual( Stem("nagyságrendekkel"), "nagyságrend");});
test("nagyságrendekről -> nagyságrend", function() {deepEqual( Stem("nagyságrendekről"), "nagyságrend");});
test("nagyságrendje -> nagyságrend", function() {deepEqual( Stem("nagyságrendje"), "nagyságrend");});
test("nagyságrendű -> nagyságrendű", function() {deepEqual( Stem("nagyságrendű"), "nagyságrendű");});
test("nagyság -> nagyság", function() {deepEqual( Stem("nagyság"), "nagyság");});
test("nagysága -> nagyság", function() {deepEqual( Stem("nagysága"), "nagyság");});
test("nagyságban -> nagyság", function() {deepEqual( Stem("nagyságban"), "nagyság");});
test("nagyságok -> nagyság", function() {deepEqual( Stem("nagyságok"), "nagyság");});
test("nagyságot -> nagyság", function() {deepEqual( Stem("nagyságot"), "nagyság");});
test("nagyságuk -> nagyság", function() {deepEqual( Stem("nagyságuk"), "nagyság");});
test("nagyságához -> nagyság", function() {deepEqual( Stem("nagyságához"), "nagyság");});
test("nagyságának -> nagyság", function() {deepEqual( Stem("nagyságának"), "nagyság");});
test("nagyságának -> nagyság", function() {deepEqual( Stem("nagyságának"), "nagyság");});
test("nagyságára -> nagyság", function() {deepEqual( Stem("nagyságára"), "nagyság");});
test("nagyságáról -> nagyság", function() {deepEqual( Stem("nagyságáról"), "nagyság");});
test("nagyságát -> nagyság", function() {deepEqual( Stem("nagyságát"), "nagyság");});
test("nagyságától -> nagyság", function() {deepEqual( Stem("nagyságától"), "nagyság");});
test("nagyságával -> nagyság", function() {deepEqual( Stem("nagyságával"), "nagyság");});
test("nagyságú -> nagyságú", function() {deepEqual( Stem("nagyságú"), "nagyságú");});
test("nagysármási -> nagysármás", function() {deepEqual( Stem("nagysármási"), "nagysármás");});
test("nagytakarítást -> nagytakarítás", function() {deepEqual( Stem("nagytakarítást"), "nagytakarítás");});
test("nagytavakra -> nagytav", function() {deepEqual( Stem("nagytavakra"), "nagytav");});
test("nagyterembe -> nagyter", function() {deepEqual( Stem("nagyterembe"), "nagyter");});
test("nagytermében -> nagyterm", function() {deepEqual( Stem("nagytermében"), "nagyterm");});
test("nagytulajdonosának -> nagytulajdonos", function() {deepEqual( Stem("nagytulajdonosának"), "nagytulajdonos");});
test("nagytáborunk -> nagytábor", function() {deepEqual( Stem("nagytáborunk"), "nagytábor");});
test("nagytávol -> nagytávol", function() {deepEqual( Stem("nagytávol"), "nagytávol");});
test("nagytétényi -> nagytétény", function() {deepEqual( Stem("nagytétényi"), "nagytétény");});
test("nagytöbbsége -> nagytöbbség", function() {deepEqual( Stem("nagytöbbsége"), "nagytöbbség");});
test("nagytörténete -> nagytörténet", function() {deepEqual( Stem("nagytörténete"), "nagytörténet");});
test("nagyurak -> nagyur", function() {deepEqual( Stem("nagyurak"), "nagyur");});
test("nagyvevői -> nagyvevő", function() {deepEqual( Stem("nagyvevői"), "nagyvevő");});
test("nagyvilág -> nagyvilág", function() {deepEqual( Stem("nagyvilág"), "nagyvilág");});
test("nagyvilágba -> nagyvilág", function() {deepEqual( Stem("nagyvilágba"), "nagyvilág");});
test("nagyvilágban -> nagyvilág", function() {deepEqual( Stem("nagyvilágban"), "nagyvilág");});
test("nagyvilági -> nagyvilág", function() {deepEqual( Stem("nagyvilági"), "nagyvilág");});
test("nagyvolt -> nagyvol", function() {deepEqual( Stem("nagyvolt"), "nagyvol");});
test("nagyvonalú -> nagyvonalú", function() {deepEqual( Stem("nagyvonalú"), "nagyvonalú");});
test("nagyvonalúan -> nagyvonalú", function() {deepEqual( Stem("nagyvonalúan"), "nagyvonalú");});
test("nagyvonalúság -> nagyvonalúság", function() {deepEqual( Stem("nagyvonalúság"), "nagyvonalúság");});
test("nagyvállalati -> nagyvállalat", function() {deepEqual( Stem("nagyvállalati"), "nagyvállalat");});
test("nagyvállalat -> nagyvállal", function() {deepEqual( Stem("nagyvállalat"), "nagyvállal");});
test("nagyvállalatok -> nagyvállalat", function() {deepEqual( Stem("nagyvállalatok"), "nagyvállalat");});
test("nagyvállalatokat -> nagyvállalat", function() {deepEqual( Stem("nagyvállalatokat"), "nagyvállalat");});
test("nagyvállalatoknak -> nagyvállalat", function() {deepEqual( Stem("nagyvállalatoknak"), "nagyvállalat");});
test("nagyvállalatoknál -> nagyvállalat", function() {deepEqual( Stem("nagyvállalatoknál"), "nagyvállalat");});
test("nagyvállalkozások -> nagyvállalkozás", function() {deepEqual( Stem("nagyvállalkozások"), "nagyvállalkozás");});
test("nagyvállalkozásoknak -> nagyvállalkozás", function() {deepEqual( Stem("nagyvállalkozásoknak"), "nagyvállalkozás");});
test("nagyvállalkozó -> nagyvállalkozó", function() {deepEqual( Stem("nagyvállalkozó"), "nagyvállalkozó");});
test("nagyvállalkozóból -> nagyvállalkozó", function() {deepEqual( Stem("nagyvállalkozóból"), "nagyvállalkozó");});
test("nagyvállalkozónak -> nagyvállalkozó", function() {deepEqual( Stem("nagyvállalkozónak"), "nagyvállalkozó");});
test("nagyvárosi -> nagyváros", function() {deepEqual( Stem("nagyvárosi"), "nagyváros");});
test("nagyváros -> nagyváros", function() {deepEqual( Stem("nagyváros"), "nagyváros");});
test("nagyvárosaiban -> nagyváros", function() {deepEqual( Stem("nagyvárosaiban"), "nagyváros");});
test("nagyvárosba -> nagyváros", function() {deepEqual( Stem("nagyvárosba"), "nagyváros");});
test("nagyvárosban -> nagyváros", function() {deepEqual( Stem("nagyvárosban"), "nagyváros");});
test("nagyvárosból -> nagyváros", function() {deepEqual( Stem("nagyvárosból"), "nagyváros");});
test("nagyvárosok -> nagyváros", function() {deepEqual( Stem("nagyvárosok"), "nagyváros");});
test("nagyvárosokban -> nagyváros", function() {deepEqual( Stem("nagyvárosokban"), "nagyváros");});
test("nagyvárost -> nagyváros", function() {deepEqual( Stem("nagyvárost"), "nagyváros");});
test("nagyvárosába -> nagyváros", function() {deepEqual( Stem("nagyvárosába"), "nagyváros");});
test("nagyvárosában -> nagyváros", function() {deepEqual( Stem("nagyvárosában"), "nagyváros");});
test("nagyzenekari -> nagyzenekar", function() {deepEqual( Stem("nagyzenekari"), "nagyzenekar");});
test("nagyzolásnál -> nagyzolás", function() {deepEqual( Stem("nagyzolásnál"), "nagyzolás");});
test("nagyágyúi -> nagyágyú", function() {deepEqual( Stem("nagyágyúi"), "nagyágyú");});
test("nagyágyúk -> nagyágyú", function() {deepEqual( Stem("nagyágyúk"), "nagyágyú");});
test("nagyállomáson -> nagyállomás", function() {deepEqual( Stem("nagyállomáson"), "nagyállomás");});
test("nagyérdemű -> nagyérdemű", function() {deepEqual( Stem("nagyérdemű"), "nagyérdemű");});
test("nagyérdeműt -> nagyérdemű", function() {deepEqual( Stem("nagyérdeműt"), "nagyérdemű");});
test("nagyíthatja-kicsinyíthati -> nagyíthatja-kicsinyíthat", function() {deepEqual( Stem("nagyíthatja-kicsinyíthati"), "nagyíthatja-kicsinyíthat");});
test("nagyítható -> nagyítható", function() {deepEqual( Stem("nagyítható"), "nagyítható");});
test("nagyított -> nagyítot", function() {deepEqual( Stem("nagyított"), "nagyítot");});
test("nagyítva -> nagyítv", function() {deepEqual( Stem("nagyítva"), "nagyítv");});
test("nagyítás-kicsinyítés -> nagyítás-kicsinyítés", function() {deepEqual( Stem("nagyítás-kicsinyítés"), "nagyítás-kicsinyítés");});
test("nagyítás -> nagyítás", function() {deepEqual( Stem("nagyítás"), "nagyítás");});
test("nagyítást -> nagyítás", function() {deepEqual( Stem("nagyítást"), "nagyítás");});
test("nagyítását -> nagyítás", function() {deepEqual( Stem("nagyítását"), "nagyítás");});
test("nagyító -> nagyító", function() {deepEqual( Stem("nagyító"), "nagyító");});
test("nagyítót -> nagyító", function() {deepEqual( Stem("nagyítót"), "nagyító");});
test("nagyítóüveg -> nagyítóüveg", function() {deepEqual( Stem("nagyítóüveg"), "nagyítóüveg");});
test("nagyünnepen -> nagyünnep", function() {deepEqual( Stem("nagyünnepen"), "nagyünnep");});
test("nagyüzem -> nagyüz", function() {deepEqual( Stem("nagyüzem"), "nagyüz");});
test("nairobi -> nairob", function() {deepEqual( Stem("nairobi"), "nairob");});
test("naiv -> naiv", function() {deepEqual( Stem("naiv"), "naiv");});
test("naivul -> naiv", function() {deepEqual( Stem("naivul"), "naiv");});
test("naivitást -> naivitás", function() {deepEqual( Stem("naivitást"), "naivitás");});
test("naivságán -> naivság", function() {deepEqual( Stem("naivságán"), "naivság");});
test("nanoszekundumokban -> nanoszekundum", function() {deepEqual( Stem("nanoszekundumokban"), "nanoszekundum");});
test("napbarnított -> napbarnítot", function() {deepEqual( Stem("napbarnított"), "napbarnítot");});
test("napernyőnk -> napernyő", function() {deepEqual( Stem("napernyőnk"), "napernyő");});
test("napestig -> napest", function() {deepEqual( Stem("napestig"), "napest");});
test("napfelkeltét -> napfelkelt", function() {deepEqual( Stem("napfelkeltét"), "napfelkelt");});
test("napfogyatkozást -> napfogyatkozás", function() {deepEqual( Stem("napfogyatkozást"), "napfogyatkozás");});
test("napfénnyel -> napfény", function() {deepEqual( Stem("napfénnyel"), "napfény");});
test("napfény -> napfény", function() {deepEqual( Stem("napfény"), "napfény");});
test("napfényben -> napfény", function() {deepEqual( Stem("napfényben"), "napfény");});
test("napfényen -> napfény", function() {deepEqual( Stem("napfényen"), "napfény");});
test("napfényt -> napfény", function() {deepEqual( Stem("napfényt"), "napfény");});
test("napfényes -> napfényes", function() {deepEqual( Stem("napfényes"), "napfényes");});
test("naphalat -> naphal", function() {deepEqual( Stem("naphalat"), "naphal");});
test("naphosszat -> naphossz", function() {deepEqual( Stem("naphosszat"), "naphossz");});
test("napi -> nap", function() {deepEqual( Stem("napi"), "nap");});
test("napihírekbe -> napihír", function() {deepEqual( Stem("napihírekbe"), "napihír");});
test("napijegy -> napijegy", function() {deepEqual( Stem("napijegy"), "napijegy");});
test("napilap -> napilap", function() {deepEqual( Stem("napilap"), "napilap");});
test("napilapban -> napilap", function() {deepEqual( Stem("napilapban"), "napilap");});
test("napilapnak -> napilap", function() {deepEqual( Stem("napilapnak"), "napilap");});
test("napilapok -> napilap", function() {deepEqual( Stem("napilapok"), "napilap");});
test("napilapokat -> napilap", function() {deepEqual( Stem("napilapokat"), "napilap");});
test("napilapokban -> napilap", function() {deepEqual( Stem("napilapokban"), "napilap");});
test("napilapoknak -> napilap", function() {deepEqual( Stem("napilapoknak"), "napilap");});
test("napilapomat -> napilap", function() {deepEqual( Stem("napilapomat"), "napilap");});
test("napilapot -> napilap", function() {deepEqual( Stem("napilapot"), "napilap");});
test("napiparancs -> napiparancs", function() {deepEqual( Stem("napiparancs"), "napiparancs");});
test("napiparancsa -> napiparancs", function() {deepEqual( Stem("napiparancsa"), "napiparancs");});
test("napiparancsának -> napiparancs", function() {deepEqual( Stem("napiparancsának"), "napiparancs");});
test("napiparancsát -> napiparancs", function() {deepEqual( Stem("napiparancsát"), "napiparancs");});
test("napirendi -> napirend", function() {deepEqual( Stem("napirendi"), "napirend");});
test("napirend -> napiren", function() {deepEqual( Stem("napirend"), "napiren");});
test("napirendem -> napirend", function() {deepEqual( Stem("napirendem"), "napirend");});
test("napirendembe -> napirend", function() {deepEqual( Stem("napirendembe"), "napirend");});
test("napirendet -> napiren", function() {deepEqual( Stem("napirendet"), "napiren");});
test("napirendjén -> napirend", function() {deepEqual( Stem("napirendjén"), "napirend");});
test("napirendjének -> napirend", function() {deepEqual( Stem("napirendjének"), "napirend");});
test("napirendjére -> napirend", function() {deepEqual( Stem("napirendjére"), "napirend");});
test("napirendre -> napiren", function() {deepEqual( Stem("napirendre"), "napiren");});
test("napirendről -> napiren", function() {deepEqual( Stem("napirendről"), "napiren");});
test("nap -> nap", function() {deepEqual( Stem("nap"), "nap");});
test("napból -> nap", function() {deepEqual( Stem("napból"), "nap");});
test("napban -> nap", function() {deepEqual( Stem("napban"), "nap");});
test("napig -> nap", function() {deepEqual( Stem("napig"), "nap");});
test("napja -> nap", function() {deepEqual( Stem("napja"), "nap");});
test("napjai -> nap", function() {deepEqual( Stem("napjai"), "nap");});
test("napjaiban -> nap", function() {deepEqual( Stem("napjaiban"), "nap");});
test("napjaik -> nap", function() {deepEqual( Stem("napjaik"), "nap");});
test("napjaikra -> nap", function() {deepEqual( Stem("napjaikra"), "nap");});
test("napjaim -> nap", function() {deepEqual( Stem("napjaim"), "nap");});
test("napjaimat -> nap", function() {deepEqual( Stem("napjaimat"), "nap");});
test("napjaimra -> nap", function() {deepEqual( Stem("napjaimra"), "nap");});
test("napjain -> nap", function() {deepEqual( Stem("napjain"), "nap");});
test("napjainak -> nap", function() {deepEqual( Stem("napjainak"), "nap");});
test("napjaink -> nap", function() {deepEqual( Stem("napjaink"), "nap");});
test("napjainkat -> nap", function() {deepEqual( Stem("napjainkat"), "nap");});
test("napjainkig -> nap", function() {deepEqual( Stem("napjainkig"), "nap");});
test("napjainkra -> nap", function() {deepEqual( Stem("napjainkra"), "nap");});
test("napjait -> nap", function() {deepEqual( Stem("napjait"), "nap");});
test("napjaitok -> nap", function() {deepEqual( Stem("napjaitok"), "nap");});
test("napjában -> nap", function() {deepEqual( Stem("napjában"), "nap");});
test("napjában -> nap", function() {deepEqual( Stem("napjában"), "nap");});
test("napjához -> nap", function() {deepEqual( Stem("napjához"), "nap");});
test("napjáig -> nap", function() {deepEqual( Stem("napjáig"), "nap");});
test("napján -> nap", function() {deepEqual( Stem("napján"), "nap");});
test("napjának -> nap", function() {deepEqual( Stem("napjának"), "nap");});
test("napjánál -> nap", function() {deepEqual( Stem("napjánál"), "nap");});
test("napjára -> nap", function() {deepEqual( Stem("napjára"), "nap");});
test("napját -> nap", function() {deepEqual( Stem("napját"), "nap");});
test("napjától -> nap", function() {deepEqual( Stem("napjától"), "nap");});
test("napjával -> nap", function() {deepEqual( Stem("napjával"), "nap");});
test("napnak -> nap", function() {deepEqual( Stem("napnak"), "nap");});
test("napnak -> nap", function() {deepEqual( Stem("napnak"), "nap");});
test("napnál -> nap", function() {deepEqual( Stem("napnál"), "nap");});
test("napod -> nap", function() {deepEqual( Stem("napod"), "nap");});
test("napodat -> nap", function() {deepEqual( Stem("napodat"), "nap");});
test("napok -> nap", function() {deepEqual( Stem("napok"), "nap");});
test("napokat -> nap", function() {deepEqual( Stem("napokat"), "nap");});
test("napokban -> nap", function() {deepEqual( Stem("napokban"), "nap");});
test("napokig -> nap", function() {deepEqual( Stem("napokig"), "nap");});
test("napokkal -> nap", function() {deepEqual( Stem("napokkal"), "nap");});
test("napoknak -> nap", function() {deepEqual( Stem("napoknak"), "nap");});
test("napokra -> nap", function() {deepEqual( Stem("napokra"), "nap");});
test("napokra -> nap", function() {deepEqual( Stem("napokra"), "nap");});
test("napokról -> nap", function() {deepEqual( Stem("napokról"), "nap");});
test("napoktól -> nap", function() {deepEqual( Stem("napoktól"), "nap");});
test("napom -> nap", function() {deepEqual( Stem("napom"), "nap");});
test("napomat -> nap", function() {deepEqual( Stem("napomat"), "nap");});
test("napomban -> nap", function() {deepEqual( Stem("napomban"), "nap");});
test("napomhoz -> nap", function() {deepEqual( Stem("napomhoz"), "nap");});
test("napomnak -> nap", function() {deepEqual( Stem("napomnak"), "nap");});
test("napomon -> nap", function() {deepEqual( Stem("napomon"), "nap");});
test("napomra -> nap", function() {deepEqual( Stem("napomra"), "nap");});
test("napomról -> nap", function() {deepEqual( Stem("napomról"), "nap");});
test("napon -> nap", function() {deepEqual( Stem("napon"), "nap");});
test("naponként -> nap", function() {deepEqual( Stem("naponként"), "nap");});
test("napos -> napos", function() {deepEqual( Stem("napos"), "napos");});
test("naposat -> napos", function() {deepEqual( Stem("naposat"), "napos");});
test("naposra -> napos", function() {deepEqual( Stem("naposra"), "napos");});
test("napot -> nap", function() {deepEqual( Stem("napot"), "nap");});
test("naptól -> nap", function() {deepEqual( Stem("naptól"), "nap");});
test("napunk -> nap", function() {deepEqual( Stem("napunk"), "nap");});
test("napunkat -> nap", function() {deepEqual( Stem("napunkat"), "nap");});
test("napért -> nap", function() {deepEqual( Stem("napért"), "nap");});
test("napról -> nap", function() {deepEqual( Stem("napról"), "nap");});
test("napra -> nap", function() {deepEqual( Stem("napra"), "nap");});
test("napotokat -> napot", function() {deepEqual( Stem("napotokat"), "napot");});
test("napkeleti -> napkelet", function() {deepEqual( Stem("napkeleti"), "napkelet");});
test("napközben -> napköz", function() {deepEqual( Stem("napközben"), "napköz");});
test("napköziztetés -> napköziztetés", function() {deepEqual( Stem("napköziztetés"), "napköziztetés");});
test("naplementét -> naplement", function() {deepEqual( Stem("naplementét"), "naplement");});
test("naplóbejegyzés -> naplóbejegyzés", function() {deepEqual( Stem("naplóbejegyzés"), "naplóbejegyzés");});
test("naplóbejegyzések -> naplóbejegyzés", function() {deepEqual( Stem("naplóbejegyzések"), "naplóbejegyzés");});
test("naplóbejegyzésre -> naplóbejegyzés", function() {deepEqual( Stem("naplóbejegyzésre"), "naplóbejegyzés");});
test("naplófájlméret -> naplófájlmér", function() {deepEqual( Stem("naplófájlméret"), "naplófájlmér");});
test("naplójegyzet -> naplójegyz", function() {deepEqual( Stem("naplójegyzet"), "naplójegyz");});
test("napló -> napló", function() {deepEqual( Stem("napló"), "napló");});
test("naplóba -> napló", function() {deepEqual( Stem("naplóba"), "napló");});
test("naplóban -> napló", function() {deepEqual( Stem("naplóban"), "napló");});
test("naplódba -> napló", function() {deepEqual( Stem("naplódba"), "napló");});
test("naplója -> napló", function() {deepEqual( Stem("naplója"), "napló");});
test("naplójába -> napló", function() {deepEqual( Stem("naplójába"), "napló");});
test("naplójából -> napló", function() {deepEqual( Stem("naplójából"), "napló");});
test("naplójához -> napló", function() {deepEqual( Stem("naplójához"), "napló");});
test("naplóját -> napló", function() {deepEqual( Stem("naplóját"), "napló");});
test("naplók -> napló", function() {deepEqual( Stem("naplók"), "napló");});
test("naplónak -> napló", function() {deepEqual( Stem("naplónak"), "napló");});
test("naplót -> napló", function() {deepEqual( Stem("naplót"), "napló");});
test("narancsvirág -> narancsvirág", function() {deepEqual( Stem("narancsvirág"), "narancsvirág");});
test("nassolunk -> nassol", function() {deepEqual( Stem("nassolunk"), "nassol");});
test("nasst -> nass", function() {deepEqual( Stem("nasst"), "nass");});
test("nat -> nat", function() {deepEqual( Stem("nat"), "nat");});
test("nationale -> national", function() {deepEqual( Stem("nationale"), "national");});
test("naturalista -> naturalist", function() {deepEqual( Stem("naturalista"), "naturalist");});
test("naturalistább -> naturalistább", function() {deepEqual( Stem("naturalistább"), "naturalistább");});
test("natív -> natív", function() {deepEqual( Stem("natív"), "natív");});
test("navigáció -> navigáció", function() {deepEqual( Stem("navigáció"), "navigáció");});
test("navigációs -> navigációs", function() {deepEqual( Stem("navigációs"), "navigációs");});
test("navigálócsíkon -> navigálócsí", function() {deepEqual( Stem("navigálócsíkon"), "navigálócsí");});
test("navigátora -> navigát", function() {deepEqual( Stem("navigátora"), "navigát");});
test("nayári -> nayár", function() {deepEqual( Stem("nayári"), "nayár");});
test("naív -> naív", function() {deepEqual( Stem("naív"), "naív");});
test("ne -> ne", function() {deepEqual( Stem("ne"), "ne");});
test("nebuló -> nebuló", function() {deepEqual( Stem("nebuló"), "nebuló");});
test("nedv -> nedv", function() {deepEqual( Stem("nedv"), "nedv");});
test("nedve -> nedv", function() {deepEqual( Stem("nedve"), "nedv");});
test("nedveiből -> nedv", function() {deepEqual( Stem("nedveiből"), "nedv");});
test("nedvedző -> nedvedző", function() {deepEqual( Stem("nedvedző"), "nedvedző");});
test("nedves -> nedves", function() {deepEqual( Stem("nedves"), "nedves");});
test("nedvesek -> nedves", function() {deepEqual( Stem("nedvesek"), "nedves");});
test("nedvességcseppek -> nedvességcsepp", function() {deepEqual( Stem("nedvességcseppek"), "nedvességcsepp");});
test("nedvesség -> nedvesség", function() {deepEqual( Stem("nedvesség"), "nedvesség");});
test("nedvességet -> nedvesség", function() {deepEqual( Stem("nedvességet"), "nedvesség");});
test("nedvességtől -> nedvesség", function() {deepEqual( Stem("nedvességtől"), "nedvesség");});
test("nedvességéről -> nedvesség", function() {deepEqual( Stem("nedvességéről"), "nedvesség");});
test("nedűt -> nedű", function() {deepEqual( Stem("nedűt"), "nedű");});
test("nedűvel -> nedű", function() {deepEqual( Stem("nedűvel"), "nedű");});
test("negatív -> negatív", function() {deepEqual( Stem("negatív"), "negatív");});
test("negatívan -> negatív", function() {deepEqual( Stem("negatívan"), "negatív");});
test("negatívba -> negatív", function() {deepEqual( Stem("negatívba"), "negatív");});
test("negatívok -> negatív", function() {deepEqual( Stem("negatívok"), "negatív");});
test("negatívokat -> negatív", function() {deepEqual( Stem("negatívokat"), "negatív");});
test("negatívuma -> negatívum", function() {deepEqual( Stem("negatívuma"), "negatívum");});
test("negatívumnál -> negatívu", function() {deepEqual( Stem("negatívumnál"), "negatívu");});
test("negatívumot -> negatívu", function() {deepEqual( Stem("negatívumot"), "negatívu");});
test("negatívumról -> negatívu", function() {deepEqual( Stem("negatívumról"), "negatívu");});
test("negligálás -> negligálás", function() {deepEqual( Stem("negligálás"), "negligálás");});
test("negyedakkora -> negyedak", function() {deepEqual( Stem("negyedakkora"), "negyedak");});
test("negyedannyi -> negyedanny", function() {deepEqual( Stem("negyedannyi"), "negyedanny");});
test("negyedelés -> negyedelés", function() {deepEqual( Stem("negyedelés"), "negyedelés");});
test("negyedháromkor -> negyedhár", function() {deepEqual( Stem("negyedháromkor"), "negyedhár");});
test("negyedikesek -> negyedikes", function() {deepEqual( Stem("negyedikesek"), "negyedikes");});
test("negyedrésze -> negyedrész", function() {deepEqual( Stem("negyedrésze"), "negyedrész");});
test("negyedrészt -> negyedrész", function() {deepEqual( Stem("negyedrészt"), "negyedrész");});
test("negyedrészét -> negyedrész", function() {deepEqual( Stem("negyedrészét"), "negyedrész");});
test("negyedszázad -> negyedszáz", function() {deepEqual( Stem("negyedszázad"), "negyedszáz");});
test("negyedszázaddal -> negyedszáz", function() {deepEqual( Stem("negyedszázaddal"), "negyedszáz");});
test("negyed -> negy", function() {deepEqual( Stem("negyed"), "negy");});
test("negyeden -> negy", function() {deepEqual( Stem("negyeden"), "negy");});
test("negyedébe -> negyed", function() {deepEqual( Stem("negyedébe"), "negyed");});
test("negyedében -> negyed", function() {deepEqual( Stem("negyedében"), "negyed");});
test("negyedére -> negyed", function() {deepEqual( Stem("negyedére"), "negyed");});
test("negyedét -> negyed", function() {deepEqual( Stem("negyedét"), "negyed");});
test("negyedével -> negyed", function() {deepEqual( Stem("negyedével"), "negyed");});
test("negyede -> negyed", function() {deepEqual( Stem("negyede"), "negyed");});
test("negyedét -> negyed", function() {deepEqual( Stem("negyedét"), "negyed");});
test("negyedik -> negyed", function() {deepEqual( Stem("negyedik"), "negyed");});
test("negyedikek -> negyedik", function() {deepEqual( Stem("negyedikek"), "negyedik");});
test("negyedekben -> negyed", function() {deepEqual( Stem("negyedekben"), "negyed");});
test("negyedbe -> negy", function() {deepEqual( Stem("negyedbe"), "negy");});
test("negyedben -> negy", function() {deepEqual( Stem("negyedben"), "negy");});
test("negyedikig -> negyed", function() {deepEqual( Stem("negyedikig"), "negyed");});
test("negyedikre -> negyed", function() {deepEqual( Stem("negyedikre"), "negyed");});
test("negyedév -> negyedév", function() {deepEqual( Stem("negyedév"), "negyedév");});
test("negyedévben -> negyedév", function() {deepEqual( Stem("negyedévben"), "negyedév");});
test("negyedéve -> negyedév", function() {deepEqual( Stem("negyedéve"), "negyedév");});
test("negyedévenként -> negyedév", function() {deepEqual( Stem("negyedévenként"), "negyedév");});
test("negyedévente -> negyedévent", function() {deepEqual( Stem("negyedévente"), "negyedévent");});
test("negyedévet -> negyedév", function() {deepEqual( Stem("negyedévet"), "negyedév");});
test("negyedévre -> negyedév", function() {deepEqual( Stem("negyedévre"), "negyedév");});
test("negyedévről -> negyedév", function() {deepEqual( Stem("negyedévről"), "negyedév");});
test("negyedévében -> negyedév", function() {deepEqual( Stem("negyedévében"), "negyedév");});
test("negyedévéig -> negyedév", function() {deepEqual( Stem("negyedévéig"), "negyedév");});
test("negyedévét -> negyedév", function() {deepEqual( Stem("negyedévét"), "negyedév");});
test("negyedéves -> negyedéves", function() {deepEqual( Stem("negyedéves"), "negyedéves");});
test("negyedévi -> negyedév", function() {deepEqual( Stem("negyedévi"), "negyedév");});
test("negyedóra -> negyedó", function() {deepEqual( Stem("negyedóra"), "negyedó");});
test("negyedóráig -> negyedór", function() {deepEqual( Stem("negyedóráig"), "negyedór");});
test("negyedórája -> negyedórá", function() {deepEqual( Stem("negyedórája"), "negyedórá");});
test("negyedórát -> negyedór", function() {deepEqual( Stem("negyedórát"), "negyedór");});
test("negyedórányira -> negyedórány", function() {deepEqual( Stem("negyedórányira"), "negyedórány");});
test("negyedórás -> negyedórás", function() {deepEqual( Stem("negyedórás"), "negyedórás");});
test("negyven-hatvan -> negyven-hatv", function() {deepEqual( Stem("negyven-hatvan"), "negyven-hatv");});
test("negyven-negyvenöt -> negyven-negyven", function() {deepEqual( Stem("negyven-negyvenöt"), "negyven-negyven");});
test("negyven -> negyv", function() {deepEqual( Stem("negyven"), "negyv");});
test("negyvenből -> negyven", function() {deepEqual( Stem("negyvenből"), "negyven");});
test("negyvenen -> negyven", function() {deepEqual( Stem("negyvenen"), "negyven");});
test("negyvenes -> negyvenes", function() {deepEqual( Stem("negyvenes"), "negyvenes");});
test("negyvenig -> negyven", function() {deepEqual( Stem("negyvenig"), "negyven");});
test("negyvenkor -> negyven", function() {deepEqual( Stem("negyvenkor"), "negyven");});
test("negyvenre -> negyven", function() {deepEqual( Stem("negyvenre"), "negyven");});
test("negyvenesnek -> negyvenes", function() {deepEqual( Stem("negyvenesnek"), "negyvenes");});
test("negyvenhat -> negyvenh", function() {deepEqual( Stem("negyvenhat"), "negyvenh");});
test("negyvenháromszor -> negyvenháromszor", function() {deepEqual( Stem("negyvenháromszor"), "negyvenháromszor");});
test("negyvenkettőből -> negyvenkettő", function() {deepEqual( Stem("negyvenkettőből"), "negyvenkettő");});
test("negyvenkét -> negyven", function() {deepEqual( Stem("negyvenkét"), "negyven");});
test("negyvenkétezer -> negyvenkétezer", function() {deepEqual( Stem("negyvenkétezer"), "negyvenkétezer");});
test("negyvenkétfokot -> negyvenkétf", function() {deepEqual( Stem("negyvenkétfokot"), "negyvenkétf");});
test("negyvenmillió -> negyvenmillió", function() {deepEqual( Stem("negyvenmillió"), "negyvenmillió");});
test("negyvennapos -> negyvennapos", function() {deepEqual( Stem("negyvennapos"), "negyvennapos");});
test("negyvennyolc -> negyvennyolc", function() {deepEqual( Stem("negyvennyolc"), "negyvennyolc");});
test("negyvennégy -> negyvennégy", function() {deepEqual( Stem("negyvennégy"), "negyvennégy");});
test("negyvenszeresére -> negyvenszeres", function() {deepEqual( Stem("negyvenszeresére"), "negyvenszeres");});
test("negyvenszázalékos -> negyvenszázalékos", function() {deepEqual( Stem("negyvenszázalékos"), "negyvenszázalékos");});
test("negyvenéves -> negyvenéves", function() {deepEqual( Stem("negyvenéves"), "negyvenéves");});
test("negyvenévesek -> negyvenéves", function() {deepEqual( Stem("negyvenévesek"), "negyvenéves");});
test("negyvenöt -> negyven", function() {deepEqual( Stem("negyvenöt"), "negyven");});
test("negyvenötkor -> negyvenöt", function() {deepEqual( Stem("negyvenötkor"), "negyvenöt");});
test("negyvenötmillióból -> negyvenötmillió", function() {deepEqual( Stem("negyvenötmillióból"), "negyvenötmillió");});
test("negyvenötért -> negyvenöt", function() {deepEqual( Stem("negyvenötért"), "negyvenöt");});
test("negyvenötödik -> negyvenötöd", function() {deepEqual( Stem("negyvenötödik"), "negyvenötöd");});
test("neheze -> nehez", function() {deepEqual( Stem("neheze"), "nehez");});
test("nehezebb -> nehezebb", function() {deepEqual( Stem("nehezebb"), "nehezebb");});
test("nehezebben -> nehezeb", function() {deepEqual( Stem("nehezebben"), "nehezeb");});
test("nehezebbet -> nehezebb", function() {deepEqual( Stem("nehezebbet"), "nehezebb");});
test("nehezebbik -> nehezebb", function() {deepEqual( Stem("nehezebbik"), "nehezebb");});
test("nehezebbnek -> nehezebb", function() {deepEqual( Stem("nehezebbnek"), "nehezebb");});
test("nehezek -> nehez", function() {deepEqual( Stem("nehezek"), "nehez");});
test("nehéz -> nehéz", function() {deepEqual( Stem("nehéz"), "nehéz");});
test("nehéznek -> nehéz", function() {deepEqual( Stem("nehéznek"), "nehéz");});
test("nehezen -> nehez", function() {deepEqual( Stem("nehezen"), "nehez");});
test("növelését -> növelés", function() {deepEqual( Stem("növelését"), "növelés");});
test("növelésével -> növelés", function() {deepEqual( Stem("növelésével"), "növelés");});
test("növendékeinek -> növende", function() {deepEqual( Stem("növendékeinek"), "növende");});
test("növendékét -> növende", function() {deepEqual( Stem("növendékét"), "növende");});
test("növeszt -> növesz", function() {deepEqual( Stem("növeszt"), "növesz");});
test("növesztett -> növesztet", function() {deepEqual( Stem("növesztett"), "növesztet");});
test("növény-egészségügyi -> növény-egészségügy", function() {deepEqual( Stem("növény-egészségügyi"), "növény-egészségügy");});
test("növénnyel -> növény", function() {deepEqual( Stem("növénnyel"), "növény");});
test("növény -> növény", function() {deepEqual( Stem("növény"), "növény");});
test("növényeit -> növény", function() {deepEqual( Stem("növényeit"), "növény");});
test("növények -> növény", function() {deepEqual( Stem("növények"), "növény");});
test("növényeket -> növény", function() {deepEqual( Stem("növényeket"), "növény");});
test("növényekkel -> növény", function() {deepEqual( Stem("növényekkel"), "növény");});
test("növényt -> növény", function() {deepEqual( Stem("növényt"), "növény");});
test("növényfaj -> növényfaj", function() {deepEqual( Stem("növényfaj"), "növényfaj");});
test("növényhatározó -> növényhatározó", function() {deepEqual( Stem("növényhatározó"), "növényhatározó");});
test("növényi -> növény", function() {deepEqual( Stem("növényi"), "növény");});
test("növénymaradványok -> növénymaradvány", function() {deepEqual( Stem("növénymaradványok"), "növénymaradvány");});
test("növényolajiparban -> növényolajipar", function() {deepEqual( Stem("növényolajiparban"), "növényolajipar");});
test("növénytermesztés -> növénytermesztés", function() {deepEqual( Stem("növénytermesztés"), "növénytermesztés");});
test("növényzet -> növényz", function() {deepEqual( Stem("növényzet"), "növényz");});
test("növéstől -> növés", function() {deepEqual( Stem("növéstől"), "növés");});
test("növő -> növő", function() {deepEqual( Stem("növő"), "növő");});
test("oakville-i -> oakville-", function() {deepEqual( Stem("oakville-i"), "oakville-");});
test("objektivitására -> objektivitás", function() {deepEqual( Stem("objektivitására"), "objektivitás");});
test("objektumelosztást -> objektumelosztás", function() {deepEqual( Stem("objektumelosztást"), "objektumelosztás");});
test("objektumhoz -> objektu", function() {deepEqual( Stem("objektumhoz"), "objektu");});
test("objektum -> objektu", function() {deepEqual( Stem("objektum"), "objektu");});
test("objektuma -> objektum", function() {deepEqual( Stem("objektuma"), "objektum");});
test("objektumai -> objektum", function() {deepEqual( Stem("objektumai"), "objektum");});
test("objektumainak -> objektum", function() {deepEqual( Stem("objektumainak"), "objektum");});
test("objektumnál -> objektu", function() {deepEqual( Stem("objektumnál"), "objektu");});
test("objektumok -> objektum", function() {deepEqual( Stem("objektumok"), "objektum");});
test("objektumok -> objektum", function() {deepEqual( Stem("objektumok"), "objektum");});
test("objektumokat -> objektum", function() {deepEqual( Stem("objektumokat"), "objektum");});
test("objektumokhoz -> objektum", function() {deepEqual( Stem("objektumokhoz"), "objektum");});
test("objektumokkal -> objektum", function() {deepEqual( Stem("objektumokkal"), "objektum");});
test("objektumokon -> objektum", function() {deepEqual( Stem("objektumokon"), "objektum");});
test("objektumot -> objektu", function() {deepEqual( Stem("objektumot"), "objektu");});
test("objektumorientált -> objektumorientál", function() {deepEqual( Stem("objektumorientált"), "objektumorientál");});
test("objektumsémák -> objektumséma", function() {deepEqual( Stem("objektumsémák"), "objektumséma");});
test("objektíve -> objektív", function() {deepEqual( Stem("objektíve"), "objektív");});
test("objektíven -> objektív", function() {deepEqual( Stem("objektíven"), "objektív");});
test("objektív -> objektív", function() {deepEqual( Stem("objektív"), "objektív");});
test("obsitosai -> obsitos", function() {deepEqual( Stem("obsitosai"), "obsitos");});
test("obszcén -> obszc", function() {deepEqual( Stem("obszcén"), "obszc");});
test("ocejános -> ocejános", function() {deepEqual( Stem("ocejános"), "ocejános");});
test("odamentünk -> odament", function() {deepEqual( Stem("odamentünk"), "odament");});
test("odamondtam -> odamondt", function() {deepEqual( Stem("odamondtam"), "odamondt");});
test("odanézett -> odanézet", function() {deepEqual( Stem("odanézett"), "odanézet");});
test("odavezette -> odavezett", function() {deepEqual( Stem("odavezette"), "odavezett");});
test("odavezényeltek -> odavezényelt", function() {deepEqual( Stem("odavezényeltek"), "odavezényelt");});
test("odú -> odú", function() {deepEqual( Stem("odú"), "odú");});
test("odúban -> odú", function() {deepEqual( Stem("odúban"), "odú");});
test("odúból -> odú", function() {deepEqual( Stem("odúból"), "odú");});
test("odút -> odú", function() {deepEqual( Stem("odút"), "odú");});
test("odúpadlón -> odúpadló", function() {deepEqual( Stem("odúpadlón"), "odúpadló");});
test("offenzív -> offenzív", function() {deepEqual( Stem("offenzív"), "offenzív");});
test("offenzívában -> offenzív", function() {deepEqual( Stem("offenzívában"), "offenzív");});
test("offenzíváját -> offenzívá", function() {deepEqual( Stem("offenzíváját"), "offenzívá");});
test("ofő -> ofő", function() {deepEqual( Stem("ofő"), "ofő");});
test("ofőm -> ofő", function() {deepEqual( Stem("ofőm"), "ofő");});
test("ogni -> ogn", function() {deepEqual( Stem("ogni"), "ogn");});
test("ogtatott -> ogtatot", function() {deepEqual( Stem("ogtatott"), "ogtatot");});
test("ok -> ok", function() {deepEqual( Stem("ok"), "ok");});
test("oka -> ok", function() {deepEqual( Stem("oka"), "ok");});
test("okai -> ok", function() {deepEqual( Stem("okai"), "ok");});
test("okaid -> ok", function() {deepEqual( Stem("okaid"), "ok");});
test("okaim -> ok", function() {deepEqual( Stem("okaim"), "ok");});
test("okain -> ok", function() {deepEqual( Stem("okain"), "ok");});
test("okainak -> ok", function() {deepEqual( Stem("okainak"), "ok");});
test("okairól -> ok", function() {deepEqual( Stem("okairól"), "ok");});
test("okait -> ok", function() {deepEqual( Stem("okait"), "ok");});
test("okból -> ok", function() {deepEqual( Stem("okból"), "ok");});
test("okhoz -> ok", function() {deepEqual( Stem("okhoz"), "ok");});
test("okkal -> ok", function() {deepEqual( Stem("okkal"), "ok");});
test("okként -> ok", function() {deepEqual( Stem("okként"), "ok");});
test("okom -> ok", function() {deepEqual( Stem("okom"), "ok");});
test("okon -> ok", function() {deepEqual( Stem("okon"), "ok");});
test("oknak -> ok", function() {deepEqual( Stem("oknak"), "ok");});
test("oknál -> ok", function() {deepEqual( Stem("oknál"), "ok");});
test("okoból -> ok", function() {deepEqual( Stem("okoból"), "ok");});
test("okod -> ok", function() {deepEqual( Stem("okod"), "ok");});
test("okok -> ok", function() {deepEqual( Stem("okok"), "ok");});
test("okokat -> ok", function() {deepEqual( Stem("okokat"), "ok");});
test("okokból -> ok", function() {deepEqual( Stem("okokból"), "ok");});
test("okokkal -> ok", function() {deepEqual( Stem("okokkal"), "ok");});
test("okoknak -> ok", function() {deepEqual( Stem("okoknak"), "ok");});
test("okoknál -> ok", function() {deepEqual( Stem("okoknál"), "ok");});
test("okokon -> ok", function() {deepEqual( Stem("okokon"), "ok");});
test("okokra -> ok", function() {deepEqual( Stem("okokra"), "ok");});
test("okot -> ok", function() {deepEqual( Stem("okot"), "ok");});
test("okuk -> ok", function() {deepEqual( Stem("okuk"), "ok");});
test("okunk -> ok", function() {deepEqual( Stem("okunk"), "ok");});
test("okából -> ok", function() {deepEqual( Stem("okából"), "ok");});
test("okához -> ok", function() {deepEqual( Stem("okához"), "ok");});
test("okán -> ok", function() {deepEqual( Stem("okán"), "ok");});
test("okának -> ok", function() {deepEqual( Stem("okának"), "ok");});
test("okára -> ok", function() {deepEqual( Stem("okára"), "ok");});
test("okát -> ok", function() {deepEqual( Stem("okát"), "ok");});
test("okáért -> ok", function() {deepEqual( Stem("okáért"), "ok");});
test("pennyn -> penny", function() {deepEqual( Stem("pennyn"), "penny");});
test("pennyt -> penny", function() {deepEqual( Stem("pennyt"), "penny");});
test("pennyvel -> penny", function() {deepEqual( Stem("pennyvel"), "penny");});
test("penész -> penész", function() {deepEqual( Stem("penész"), "penész");});
test("penészes -> penészes", function() {deepEqual( Stem("penészes"), "penészes");});
test("penészgomba -> penészg", function() {deepEqual( Stem("penészgomba"), "penészg");});
test("penészszagú -> penészszagú", function() {deepEqual( Stem("penészszagú"), "penészszagú");});
test("pepecselek -> pepecsel", function() {deepEqual( Stem("pepecselek"), "pepecsel");});
test("peranyagára -> peranyag", function() {deepEqual( Stem("peranyagára"), "peranyag");});
test("perbeli -> perbel", function() {deepEqual( Stem("perbeli"), "perbel");});
test("perbevonása -> perbevonás", function() {deepEqual( Stem("perbevonása"), "perbevonás");});
test("perbíróság -> perbíróság", function() {deepEqual( Stem("perbíróság"), "perbíróság");});
test("percdíj -> percdíj", function() {deepEqual( Stem("percdíj"), "percdíj");});
test("perc -> perc", function() {deepEqual( Stem("perc"), "perc");});
test("percben -> perc", function() {deepEqual( Stem("percben"), "perc");});
test("perccel -> perc", function() {deepEqual( Stem("perccel"), "perc");});
test("perce -> perc", function() {deepEqual( Stem("perce"), "perc");});
test("percei -> perc", function() {deepEqual( Stem("percei"), "perc");});
test("perceiben -> perc", function() {deepEqual( Stem("perceiben"), "perc");});
test("perceik -> perc", function() {deepEqual( Stem("perceik"), "perc");});
test("percek -> perc", function() {deepEqual( Stem("percek"), "perc");});
test("percekben -> perc", function() {deepEqual( Stem("percekben"), "perc");});
test("perceken -> perc", function() {deepEqual( Stem("perceken"), "perc");});
test("perceket -> perc", function() {deepEqual( Stem("perceket"), "perc");});
test("percekig -> perc", function() {deepEqual( Stem("percekig"), "perc");});
test("percekre -> perc", function() {deepEqual( Stem("percekre"), "perc");});
test("percem -> perc", function() {deepEqual( Stem("percem"), "perc");});
test("percen -> perc", function() {deepEqual( Stem("percen"), "perc");});
test("percenként -> perc", function() {deepEqual( Stem("percenként"), "perc");});
test("percet -> perc", function() {deepEqual( Stem("percet"), "perc");});
test("percig -> perc", function() {deepEqual( Stem("percig"), "perc");});
test("perckor -> perc", function() {deepEqual( Stem("perckor"), "perc");});
test("percnek -> perc", function() {deepEqual( Stem("percnek"), "perc");});
test("percnél -> perc", function() {deepEqual( Stem("percnél"), "perc");});
test("percre -> perc", function() {deepEqual( Stem("percre"), "perc");});
test("percről -> perc", function() {deepEqual( Stem("percről"), "perc");});
test("percét -> perc", function() {deepEqual( Stem("percét"), "perc");});
test("percünk -> perc", function() {deepEqual( Stem("percünk"), "perc");});
test("perceptronokat -> perceptron", function() {deepEqual( Stem("perceptronokat"), "perceptron");});
test("perces -> perces", function() {deepEqual( Stem("perces"), "perces");});
test("percesek -> perces", function() {deepEqual( Stem("percesek"), "perces");});
test("percmutató -> percmutató", function() {deepEqual( Stem("percmutató"), "percmutató");});
test("perec -> perec", function() {deepEqual( Stem("perec"), "perec");});
test("pereg -> pereg", function() {deepEqual( Stem("pereg"), "pereg");});
test("peregnek -> pereg", function() {deepEqual( Stem("peregnek"), "pereg");});
test("peregtek -> peregt", function() {deepEqual( Stem("peregtek"), "peregt");});
